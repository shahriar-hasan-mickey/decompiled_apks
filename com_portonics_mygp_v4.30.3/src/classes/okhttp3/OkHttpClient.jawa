record `okhttp3.OkHttpClient` @kind class @AccessFlag PUBLIC extends `java.lang.Cloneable` @kind interface, `okhttp3.Call$Factory` @kind interface, `okhttp3.WebSocket$Factory` @kind interface {
  `okhttp3.Authenticator` `okhttp3.OkHttpClient.authenticator` @AccessFlag FINAL;
  `okhttp3.Cache` `okhttp3.OkHttpClient.cache` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient.callTimeout` @AccessFlag FINAL;
  `okhttp3.internal.tls.CertificateChainCleaner` `okhttp3.OkHttpClient.certificateChainCleaner` @AccessFlag FINAL;
  `okhttp3.CertificatePinner` `okhttp3.OkHttpClient.certificatePinner` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient.connectTimeout` @AccessFlag FINAL;
  `okhttp3.ConnectionPool` `okhttp3.OkHttpClient.connectionPool` @AccessFlag FINAL;
  `java.util.List` `okhttp3.OkHttpClient.connectionSpecs` @AccessFlag FINAL;
  `okhttp3.CookieJar` `okhttp3.OkHttpClient.cookieJar` @AccessFlag FINAL;
  `okhttp3.Dispatcher` `okhttp3.OkHttpClient.dispatcher` @AccessFlag FINAL;
  `okhttp3.Dns` `okhttp3.OkHttpClient.dns` @AccessFlag FINAL;
  `okhttp3.EventListener$Factory` `okhttp3.OkHttpClient.eventListenerFactory` @AccessFlag FINAL;
  `boolean` `okhttp3.OkHttpClient.followRedirects` @AccessFlag FINAL;
  `boolean` `okhttp3.OkHttpClient.followSslRedirects` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `okhttp3.OkHttpClient.hostnameVerifier` @AccessFlag FINAL;
  `java.util.List` `okhttp3.OkHttpClient.interceptors` @AccessFlag FINAL;
  `okhttp3.internal.cache.InternalCache` `okhttp3.OkHttpClient.internalCache` @AccessFlag FINAL;
  `java.util.List` `okhttp3.OkHttpClient.networkInterceptors` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient.pingInterval` @AccessFlag FINAL;
  `java.util.List` `okhttp3.OkHttpClient.protocols` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.OkHttpClient.proxy` @AccessFlag FINAL;
  `okhttp3.Authenticator` `okhttp3.OkHttpClient.proxyAuthenticator` @AccessFlag FINAL;
  `java.net.ProxySelector` `okhttp3.OkHttpClient.proxySelector` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient.readTimeout` @AccessFlag FINAL;
  `boolean` `okhttp3.OkHttpClient.retryOnConnectionFailure` @AccessFlag FINAL;
  `javax.net.SocketFactory` `okhttp3.OkHttpClient.socketFactory` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.OkHttpClient.sslSocketFactory` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient.writeTimeout` @AccessFlag FINAL;
}
global `java.util.List` `@@okhttp3.OkHttpClient.DEFAULT_CONNECTION_SPECS` @AccessFlag STATIC_FINAL;
global `java.util.List` `@@okhttp3.OkHttpClient.DEFAULT_PROTOCOLS` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/OkHttpClient;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L5626a4.  v0:= 2I;
  #L5626a6.  v1:= new `okhttp3.Protocol`[v0];
  #L5626aa.  v2:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L5626ae.  v3:= 0I;
  #L5626b0.  v1[v3]:= v2 @kind object;
  #L5626b4.  v2:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L5626b8.  v4:= 1I;
  #L5626ba.  v1[v4]:= v2 @kind object;
  #L5626be.  call temp:= `immutableList`(v1) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L5626c4.  v1:= temp @kind object;
  #L5626c6.  `@@okhttp3.OkHttpClient.DEFAULT_PROTOCOLS` @type ^`java.util.List` := v1 @kind object;
  #L5626ca.  v0:= new `okhttp3.ConnectionSpec`[v0];
  #L5626ce.  v1:= `@@okhttp3.ConnectionSpec.MODERN_TLS` @type ^`okhttp3.ConnectionSpec` @kind object;
  #L5626d2.  v0[v3]:= v1 @kind object;
  #L5626d6.  v1:= `@@okhttp3.ConnectionSpec.CLEARTEXT` @type ^`okhttp3.ConnectionSpec` @kind object;
  #L5626da.  v0[v4]:= v1 @kind object;
  #L5626de.  call temp:= `immutableList`(v0) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L5626e4.  v0:= temp @kind object;
  #L5626e6.  `@@okhttp3.OkHttpClient.DEFAULT_CONNECTION_SPECS` @type ^`java.util.List` := v0 @kind object;
  #L5626ea.  v0:= new `okhttp3.OkHttpClient$1`;
  #L5626ee.  call `<init>`(v0) @signature `Lokhttp3/OkHttpClient$1;.<init>:()V` @kind direct;
  #L5626f4.  `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` := v0 @kind object;
  #L5626f8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L56270c.  v0:= new `okhttp3.OkHttpClient$Builder`;
  #L562710.  call `<init>`(v0) @signature `Lokhttp3/OkHttpClient$Builder;.<init>:()V` @kind direct;
  #L562716.  call `<init>`(v1, v0) @signature `Lokhttp3/OkHttpClient;.<init>:(Lokhttp3/OkHttpClient$Builder;)V` @kind direct;
  #L56271c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.OkHttpClient` v4 @kind this, `okhttp3.OkHttpClient$Builder` v5 @kind object) @signature `Lokhttp3/OkHttpClient;.<init>:(Lokhttp3/OkHttpClient$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L562730.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L562736.  v0:= v5.`okhttp3.OkHttpClient$Builder.dispatcher` @type ^`okhttp3.Dispatcher` @kind object;
  #L56273a.  v4.`okhttp3.OkHttpClient.dispatcher` @type ^`okhttp3.Dispatcher` := v0 @kind object;
  #L56273e.  v0:= v5.`okhttp3.OkHttpClient$Builder.proxy` @type ^`java.net.Proxy` @kind object;
  #L562742.  v4.`okhttp3.OkHttpClient.proxy` @type ^`java.net.Proxy` := v0 @kind object;
  #L562746.  v0:= v5.`okhttp3.OkHttpClient$Builder.protocols` @type ^`java.util.List` @kind object;
  #L56274a.  v4.`okhttp3.OkHttpClient.protocols` @type ^`java.util.List` := v0 @kind object;
  #L56274e.  v0:= v5.`okhttp3.OkHttpClient$Builder.connectionSpecs` @type ^`java.util.List` @kind object;
  #L562752.  v4.`okhttp3.OkHttpClient.connectionSpecs` @type ^`java.util.List` := v0 @kind object;
  #L562756.  v1:= v5.`okhttp3.OkHttpClient$Builder.interceptors` @type ^`java.util.List` @kind object;
  #L56275a.  call temp:= `immutableList`(v1) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L562760.  v1:= temp @kind object;
  #L562762.  v4.`okhttp3.OkHttpClient.interceptors` @type ^`java.util.List` := v1 @kind object;
  #L562766.  v1:= v5.`okhttp3.OkHttpClient$Builder.networkInterceptors` @type ^`java.util.List` @kind object;
  #L56276a.  call temp:= `immutableList`(v1) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L562770.  v1:= temp @kind object;
  #L562772.  v4.`okhttp3.OkHttpClient.networkInterceptors` @type ^`java.util.List` := v1 @kind object;
  #L562776.  v1:= v5.`okhttp3.OkHttpClient$Builder.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` @kind object;
  #L56277a.  v4.`okhttp3.OkHttpClient.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` := v1 @kind object;
  #L56277e.  v1:= v5.`okhttp3.OkHttpClient$Builder.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L562782.  v4.`okhttp3.OkHttpClient.proxySelector` @type ^`java.net.ProxySelector` := v1 @kind object;
  #L562786.  v1:= v5.`okhttp3.OkHttpClient$Builder.cookieJar` @type ^`okhttp3.CookieJar` @kind object;
  #L56278a.  v4.`okhttp3.OkHttpClient.cookieJar` @type ^`okhttp3.CookieJar` := v1 @kind object;
  #L56278e.  v1:= v5.`okhttp3.OkHttpClient$Builder.cache` @type ^`okhttp3.Cache` @kind object;
  #L562792.  v4.`okhttp3.OkHttpClient.cache` @type ^`okhttp3.Cache` := v1 @kind object;
  #L562796.  v1:= v5.`okhttp3.OkHttpClient$Builder.internalCache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L56279a.  v4.`okhttp3.OkHttpClient.internalCache` @type ^`okhttp3.internal.cache.InternalCache` := v1 @kind object;
  #L56279e.  v1:= v5.`okhttp3.OkHttpClient$Builder.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L5627a2.  v4.`okhttp3.OkHttpClient.socketFactory` @type ^`javax.net.SocketFactory` := v1 @kind object;
  #L5627a6.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5627ac.  v0:= temp @kind object;
  #L5627ae.  v1:= 0I;
  #L5627b0.  v2:= 0I;
  #L5627b2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5627b8.  v3:= temp;
  #L5627ba.  if v3 == 0 then goto L5627de;
  #L5627be.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5627c4.  v3:= temp @kind object;
  #L5627c6.  v3:= (`okhttp3.ConnectionSpec`) v3 @kind object;
  #L5627ca.  if v2 != 0 then goto L5627da;
  #L5627ce.  call temp:= `isTls`(v3) @signature `Lokhttp3/ConnectionSpec;.isTls:()Z` @kind virtual;
  #L5627d4.  v2:= temp;
  #L5627d6.  if v2 == 0 then goto L5627b0;
  #L5627da.  v2:= 1I;
  #L5627dc.  goto L5627b2;
  #L5627de.  v0:= v5.`okhttp3.OkHttpClient$Builder.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L5627e2.  if v0 != 0 then goto L56280e;
  #L5627e6.  if v2 != 0 then goto L5627ec;
  #L5627ea.  goto L56280e;
  #L5627ec.  call temp:= `platformTrustManager`() @signature `Lokhttp3/internal/Util;.platformTrustManager:()Ljavax/net/ssl/X509TrustManager;` @kind static;
  #L5627f2.  v0:= temp @kind object;
  #L5627f4.  call temp:= `newSslSocketFactory`(v0) @signature `Lokhttp3/OkHttpClient;.newSslSocketFactory:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @kind static;
  #L5627fa.  v1:= temp @kind object;
  #L5627fc.  v4.`okhttp3.OkHttpClient.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v1 @kind object;
  #L562800.  call temp:= `get`(v0) @signature `Lokhttp3/internal/tls/CertificateChainCleaner;.get:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind static;
  #L562806.  v0:= temp @kind object;
  #L562808.  v4.`okhttp3.OkHttpClient.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v0 @kind object;
  #L56280c.  goto L56281a;
  #L56280e.  v4.`okhttp3.OkHttpClient.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L562812.  v0:= v5.`okhttp3.OkHttpClient$Builder.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L562816.  v4.`okhttp3.OkHttpClient.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v0 @kind object;
  #L56281a.  v0:= v4.`okhttp3.OkHttpClient.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L56281e.  if v0 == 0 then goto L562834;
  #L562822.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L562828.  v0:= temp @kind object;
  #L56282a.  v1:= v4.`okhttp3.OkHttpClient.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L56282e.  call `configureSslSocketFactory`(v0, v1) @signature `Lokhttp3/internal/platform/Platform;.configureSslSocketFactory:(Ljavax/net/ssl/SSLSocketFactory;)V` @kind virtual;
  #L562834.  v0:= v5.`okhttp3.OkHttpClient$Builder.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L562838.  v4.`okhttp3.OkHttpClient.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L56283c.  v0:= v5.`okhttp3.OkHttpClient$Builder.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L562840.  v1:= v4.`okhttp3.OkHttpClient.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L562844.  call temp:= `withCertificateChainCleaner`(v0, v1) @signature `Lokhttp3/CertificatePinner;.withCertificateChainCleaner:(Lokhttp3/internal/tls/CertificateChainCleaner;)Lokhttp3/CertificatePinner;` @kind virtual;
  #L56284a.  v0:= temp @kind object;
  #L56284c.  v4.`okhttp3.OkHttpClient.certificatePinner` @type ^`okhttp3.CertificatePinner` := v0 @kind object;
  #L562850.  v0:= v5.`okhttp3.OkHttpClient$Builder.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L562854.  v4.`okhttp3.OkHttpClient.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v0 @kind object;
  #L562858.  v0:= v5.`okhttp3.OkHttpClient$Builder.authenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L56285c.  v4.`okhttp3.OkHttpClient.authenticator` @type ^`okhttp3.Authenticator` := v0 @kind object;
  #L562860.  v0:= v5.`okhttp3.OkHttpClient$Builder.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L562864.  v4.`okhttp3.OkHttpClient.connectionPool` @type ^`okhttp3.ConnectionPool` := v0 @kind object;
  #L562868.  v0:= v5.`okhttp3.OkHttpClient$Builder.dns` @type ^`okhttp3.Dns` @kind object;
  #L56286c.  v4.`okhttp3.OkHttpClient.dns` @type ^`okhttp3.Dns` := v0 @kind object;
  #L562870.  v0:= v5.`okhttp3.OkHttpClient$Builder.followSslRedirects` @type ^`boolean` @kind boolean;
  #L562874.  v4.`okhttp3.OkHttpClient.followSslRedirects` @type ^`boolean` := v0 @kind boolean;
  #L562878.  v0:= v5.`okhttp3.OkHttpClient$Builder.followRedirects` @type ^`boolean` @kind boolean;
  #L56287c.  v4.`okhttp3.OkHttpClient.followRedirects` @type ^`boolean` := v0 @kind boolean;
  #L562880.  v0:= v5.`okhttp3.OkHttpClient$Builder.retryOnConnectionFailure` @type ^`boolean` @kind boolean;
  #L562884.  v4.`okhttp3.OkHttpClient.retryOnConnectionFailure` @type ^`boolean` := v0 @kind boolean;
  #L562888.  v0:= v5.`okhttp3.OkHttpClient$Builder.callTimeout` @type ^`int`;
  #L56288c.  v4.`okhttp3.OkHttpClient.callTimeout` @type ^`int` := v0;
  #L562890.  v0:= v5.`okhttp3.OkHttpClient$Builder.connectTimeout` @type ^`int`;
  #L562894.  v4.`okhttp3.OkHttpClient.connectTimeout` @type ^`int` := v0;
  #L562898.  v0:= v5.`okhttp3.OkHttpClient$Builder.readTimeout` @type ^`int`;
  #L56289c.  v4.`okhttp3.OkHttpClient.readTimeout` @type ^`int` := v0;
  #L5628a0.  v0:= v5.`okhttp3.OkHttpClient$Builder.writeTimeout` @type ^`int`;
  #L5628a4.  v4.`okhttp3.OkHttpClient.writeTimeout` @type ^`int` := v0;
  #L5628a8.  v5:= v5.`okhttp3.OkHttpClient$Builder.pingInterval` @type ^`int`;
  #L5628ac.  v4.`okhttp3.OkHttpClient.pingInterval` @type ^`int` := v5;
  #L5628b0.  v5:= v4.`okhttp3.OkHttpClient.interceptors` @type ^`java.util.List` @kind object;
  #L5628b4.  v0:= 0I;
  #L5628b6.  call temp:= `contains`(v5, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L5628bc.  v5:= temp;
  #L5628be.  if v5 != 0 then goto L562906;
  #L5628c2.  v5:= v4.`okhttp3.OkHttpClient.networkInterceptors` @type ^`java.util.List` @kind object;
  #L5628c6.  call temp:= `contains`(v5, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L5628cc.  v5:= temp;
  #L5628ce.  if v5 != 0 then goto L5628d4;
  #L5628d2.  return @kind void;
  #L5628d4.  v5:= new `java.lang.IllegalStateException`;
  #L5628d8.  v0:= new `java.lang.StringBuilder`;
  #L5628dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5628e2.  v1:= "Null network interceptor: " @kind object;
  #L5628e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5628ec.  v1:= v4.`okhttp3.OkHttpClient.networkInterceptors` @type ^`java.util.List` @kind object;
  #L5628f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5628f6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5628fc.  v0:= temp @kind object;
  #L5628fe.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L562904.  throw v5;
  #L562906.  v5:= new `java.lang.IllegalStateException`;
  #L56290a.  v0:= new `java.lang.StringBuilder`;
  #L56290e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562914.  v1:= "Null interceptor: " @kind object;
  #L562918.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56291e.  v1:= v4.`okhttp3.OkHttpClient.interceptors` @type ^`java.util.List` @kind object;
  #L562922.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562928.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L56292e.  v0:= temp @kind object;
  #L562930.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L562936.  goto L56293a;
  #L562938.  throw v5;
  #L56293a.  goto L562938;
}
procedure `javax.net.ssl.SSLSocketFactory` `newSslSocketFactory`(`javax.net.ssl.X509TrustManager` v3 @kind object) @signature `Lokhttp3/OkHttpClient;.newSslSocketFactory:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L5624c0.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L5624c6.  v0:= temp @kind object;
  #L5624c8.  call temp:= `getSSLContext`(v0) @signature `Lokhttp3/internal/platform/Platform;.getSSLContext:()Ljavax/net/ssl/SSLContext;` @kind virtual;
  #L5624ce.  v0:= temp @kind object;
  #L5624d0.  v1:= 1I;
  #L5624d2.  v1:= new `javax.net.ssl.TrustManager`[v1];
  #L5624d6.  v2:= 0I;
  #L5624d8.  v1[v2]:= v3 @kind object;
  #L5624dc.  v3:= 0I;
  #L5624de.  call `init`(v0, v3, v1, v3) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L5624e4.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L5624ea.  v3:= temp @kind object;
  #L5624ec.  return v3 @kind object;
  #L5624ee.  v3:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L5624f0.  v0:= new `java.lang.AssertionError`;
  #L5624f4.  v1:= "No System TLS" @kind object;
  #L5624f8.  call `<init>`(v0, v1, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L5624fe.  throw v0;
  catch `java.security.GeneralSecurityException` @[L5624c0..L5624ec] goto L5624ee;
}
procedure `okhttp3.Authenticator` `authenticator`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.authenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562538.  v0:= v1.`okhttp3.OkHttpClient.authenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L56253c.  return v0 @kind object;
}
procedure `okhttp3.Cache` `cache`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.cache:()Lokhttp3/Cache;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562568.  v0:= v1.`okhttp3.OkHttpClient.cache` @type ^`okhttp3.Cache` @kind object;
  #L56256c.  return v0 @kind object;
}
procedure `int` `callTimeoutMillis`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.callTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562388.  v0:= v1.`okhttp3.OkHttpClient.callTimeout` @type ^`int`;
  #L56238c.  return v0;
}
procedure `okhttp3.CertificatePinner` `certificatePinner`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.certificatePinner:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56259c.  v0:= v1.`okhttp3.OkHttpClient.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L5625a0.  return v0 @kind object;
}
procedure `int` `connectTimeoutMillis`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.connectTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5623a0.  v0:= v1.`okhttp3.OkHttpClient.connectTimeout` @type ^`int`;
  #L5623a4.  return v0;
}
procedure `okhttp3.ConnectionPool` `connectionPool`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.connectionPool:()Lokhttp3/ConnectionPool;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5625b4.  v0:= v1.`okhttp3.OkHttpClient.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L5625b8.  return v0 @kind object;
}
procedure `java.util.List` `connectionSpecs`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.connectionSpecs:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562430.  v0:= v1.`okhttp3.OkHttpClient.connectionSpecs` @type ^`java.util.List` @kind object;
  #L562434.  return v0 @kind object;
}
procedure `okhttp3.CookieJar` `cookieJar`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.cookieJar:()Lokhttp3/CookieJar;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5625cc.  v0:= v1.`okhttp3.OkHttpClient.cookieJar` @type ^`okhttp3.CookieJar` @kind object;
  #L5625d0.  return v0 @kind object;
}
procedure `okhttp3.Dispatcher` `dispatcher`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5625e4.  v0:= v1.`okhttp3.OkHttpClient.dispatcher` @type ^`okhttp3.Dispatcher` @kind object;
  #L5625e8.  return v0 @kind object;
}
procedure `okhttp3.Dns` `dns`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.dns:()Lokhttp3/Dns;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5625fc.  v0:= v1.`okhttp3.OkHttpClient.dns` @type ^`okhttp3.Dns` @kind object;
  #L562600.  return v0 @kind object;
}
procedure `okhttp3.EventListener$Factory` `eventListenerFactory`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.eventListenerFactory:()Lokhttp3/EventListener$Factory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562614.  v0:= v1.`okhttp3.OkHttpClient.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` @kind object;
  #L562618.  return v0 @kind object;
}
procedure `boolean` `followRedirects`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.followRedirects:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562340.  v0:= v1.`okhttp3.OkHttpClient.followRedirects` @type ^`boolean` @kind boolean;
  #L562344.  return v0;
}
procedure `boolean` `followSslRedirects`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.followSslRedirects:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562358.  v0:= v1.`okhttp3.OkHttpClient.followSslRedirects` @type ^`boolean` @kind boolean;
  #L56235c.  return v0;
}
procedure `javax.net.ssl.HostnameVerifier` `hostnameVerifier`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5624a8.  v0:= v1.`okhttp3.OkHttpClient.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L5624ac.  return v0 @kind object;
}
procedure `java.util.List` `interceptors`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.interceptors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562448.  v0:= v1.`okhttp3.OkHttpClient.interceptors` @type ^`java.util.List` @kind object;
  #L56244c.  return v0 @kind object;
}
procedure `okhttp3.internal.cache.InternalCache` `internalCache`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.internalCache:()Lokhttp3/internal/cache/InternalCache;` @AccessFlag  {
    temp;
    v0;

  #L562680.  v0:= v1.`okhttp3.OkHttpClient.cache` @type ^`okhttp3.Cache` @kind object;
  #L562684.  if v0 == 0 then goto L56268e;
  #L562688.  v0:= v0.`okhttp3.Cache.internalCache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L56268c.  goto L562692;
  #L56268e.  v0:= v1.`okhttp3.OkHttpClient.internalCache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L562692.  return v0 @kind object;
}
procedure `java.util.List` `networkInterceptors`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.networkInterceptors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562460.  v0:= v1.`okhttp3.OkHttpClient.networkInterceptors` @type ^`java.util.List` @kind object;
  #L562464.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `newBuilder`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.newBuilder:()Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56262c.  v0:= new `okhttp3.OkHttpClient$Builder`;
  #L562630.  call `<init>`(v0, v1) @signature `Lokhttp3/OkHttpClient$Builder;.<init>:(Lokhttp3/OkHttpClient;)V` @kind direct;
  #L562636.  return v0 @kind object;
}
procedure `okhttp3.Call` `newCall`(`okhttp3.OkHttpClient` v1 @kind this, `okhttp3.Request` v2 @kind object) @signature `Lokhttp3/OkHttpClient;.newCall:(Lokhttp3/Request;)Lokhttp3/Call;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562580.  v0:= 0I;
  #L562582.  call temp:= `newRealCall`(v1, v2, v0) @signature `Lokhttp3/RealCall;.newRealCall:(Lokhttp3/OkHttpClient;Lokhttp3/Request;Z)Lokhttp3/RealCall;` @kind static;
  #L562588.  v2:= temp @kind object;
  #L56258a.  return v2 @kind object;
}
procedure `okhttp3.WebSocket` `newWebSocket`(`okhttp3.OkHttpClient` v7 @kind this, `okhttp3.Request` v8 @kind object, `okhttp3.WebSocketListener` v9 @kind object) @signature `Lokhttp3/OkHttpClient;.newWebSocket:(Lokhttp3/Request;Lokhttp3/WebSocketListener;)Lokhttp3/WebSocket;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L562648.  v6:= new `okhttp3.internal.ws.RealWebSocket`;
  #L56264c.  v3:= new `java.util.Random`;
  #L562650.  call `<init>`(v3) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L562656.  v0:= v7.`okhttp3.OkHttpClient.pingInterval` @type ^`int`;
  #L56265a.  v4:= (`long`) v0 @kind i2l;
  #L56265c.  v0:= v6 @kind object;
  #L56265e.  v1:= v8 @kind object;
  #L562660.  v2:= v9 @kind object;
  #L562662.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/ws/RealWebSocket;.<init>:(Lokhttp3/Request;Lokhttp3/WebSocketListener;Ljava/util/Random;J)V` @kind direct;
  #L562668.  call `connect`(v6, v7) @signature `Lokhttp3/internal/ws/RealWebSocket;.connect:(Lokhttp3/OkHttpClient;)V` @kind virtual;
  #L56266e.  return v6 @kind object;
}
procedure `int` `pingIntervalMillis`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.pingIntervalMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5623b8.  v0:= v1.`okhttp3.OkHttpClient.pingInterval` @type ^`int`;
  #L5623bc.  return v0;
}
procedure `java.util.List` `protocols`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.protocols:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562478.  v0:= v1.`okhttp3.OkHttpClient.protocols` @type ^`java.util.List` @kind object;
  #L56247c.  return v0 @kind object;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562400.  v0:= v1.`okhttp3.OkHttpClient.proxy` @type ^`java.net.Proxy` @kind object;
  #L562404.  return v0 @kind object;
}
procedure `okhttp3.Authenticator` `proxyAuthenticator`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.proxyAuthenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562550.  v0:= v1.`okhttp3.OkHttpClient.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L562554.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `proxySelector`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.proxySelector:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562418.  v0:= v1.`okhttp3.OkHttpClient.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L56241c.  return v0 @kind object;
}
procedure `int` `readTimeoutMillis`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.readTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5623d0.  v0:= v1.`okhttp3.OkHttpClient.readTimeout` @type ^`int`;
  #L5623d4.  return v0;
}
procedure `boolean` `retryOnConnectionFailure`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.retryOnConnectionFailure:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562370.  v0:= v1.`okhttp3.OkHttpClient.retryOnConnectionFailure` @type ^`boolean` @kind boolean;
  #L562374.  return v0;
}
procedure `javax.net.SocketFactory` `socketFactory`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.socketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562490.  v0:= v1.`okhttp3.OkHttpClient.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L562494.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `sslSocketFactory`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562520.  v0:= v1.`okhttp3.OkHttpClient.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L562524.  return v0 @kind object;
}
procedure `int` `writeTimeoutMillis`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.writeTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5623e8.  v0:= v1.`okhttp3.OkHttpClient.writeTimeout` @type ^`int`;
  #L5623ec.  return v0;
}
