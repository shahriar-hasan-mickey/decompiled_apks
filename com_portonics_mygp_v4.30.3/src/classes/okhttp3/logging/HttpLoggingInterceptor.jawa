record `okhttp3.logging.HttpLoggingInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `java.util.Set` `okhttp3.logging.HttpLoggingInterceptor.headersToRedact` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.logging.HttpLoggingInterceptor$Level` `okhttp3.logging.HttpLoggingInterceptor.level` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.logging.HttpLoggingInterceptor$Logger` `okhttp3.logging.HttpLoggingInterceptor.logger` @AccessFlag PRIVATE_FINAL;
}
global `java.nio.charset.Charset` `@@okhttp3.logging.HttpLoggingInterceptor.UTF8` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/logging/HttpLoggingInterceptor;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L5632d4.  v0:= "UTF-8" @kind object;
  #L5632d8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L5632de.  v0:= temp @kind object;
  #L5632e0.  `@@okhttp3.logging.HttpLoggingInterceptor.UTF8` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L5632e4.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.logging.HttpLoggingInterceptor` v1 @kind this) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L5632f8.  v0:= `@@okhttp3.logging.HttpLoggingInterceptor$Logger.DEFAULT` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L5632fc.  call `<init>`(v1, v0) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.<init>:(Lokhttp3/logging/HttpLoggingInterceptor$Logger;)V` @kind direct;
  #L563302.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.logging.HttpLoggingInterceptor` v1 @kind this, `okhttp3.logging.HttpLoggingInterceptor$Logger` v2 @kind object) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.<init>:(Lokhttp3/logging/HttpLoggingInterceptor$Logger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L563314.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L56331a.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L563320.  v0:= temp @kind object;
  #L563322.  v1.`okhttp3.logging.HttpLoggingInterceptor.headersToRedact` @type ^`java.util.Set` := v0 @kind object;
  #L563326.  v0:= `@@okhttp3.logging.HttpLoggingInterceptor$Level.NONE` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` @kind object;
  #L56332a.  v1.`okhttp3.logging.HttpLoggingInterceptor.level` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` := v0 @kind object;
  #L56332e.  v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` := v2 @kind object;
  #L563332.  return @kind void;
}
procedure `boolean` `bodyHasUnknownEncoding`(`okhttp3.Headers` v1 @kind object) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.bodyHasUnknownEncoding:(Lokhttp3/Headers;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L562a28.  v0:= "Content-Encoding" @kind object;
  #L562a2c.  call temp:= `get`(v1, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L562a32.  v1:= temp @kind object;
  #L562a34.  if v1 == 0 then goto L562a5c;
  #L562a38.  v0:= "identity" @kind object;
  #L562a3c.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L562a42.  v0:= temp;
  #L562a44.  if v0 != 0 then goto L562a5c;
  #L562a48.  v0:= "gzip" @kind object;
  #L562a4c.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L562a52.  v1:= temp;
  #L562a54.  if v1 != 0 then goto L562a5c;
  #L562a58.  v1:= 1I;
  #L562a5a.  goto L562a5e;
  #L562a5c.  v1:= 0I;
  #L562a5e.  return v1;
}
procedure `boolean` `isPlaintext`(`okio.k` v8 @kind object) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.isPlaintext:(Lokio/k;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L562a70.  v0:= 0I;
  #L562a72.  v7:= new `okio.k`;
  #L562a76.  call `<init>`(v7) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L562a7c.  call temp:= `f1`(v8) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L562a82.  v1:= temp @kind wide;
  #L562a84.  v3:= 64L;
  #L562a88.  v5:= lcmp(v1, v3);
  #L562a8c.  if v5 >= 0 then goto L562a9c;
  #L562a90.  call temp:= `f1`(v8) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L562a96.  v1:= temp @kind wide;
  #L562a98.  v5:= v1 @kind wide;
  #L562a9a.  goto L562a9e;
  #L562a9c.  v5:= v3 @kind wide;
  #L562a9e.  v3:= 0L;
  #L562aa2.  v1:= v8 @kind object;
  #L562aa4.  v2:= v7 @kind object;
  #L562aa6.  call temp:= `u0`(v1, v2, v3, v5) @signature `Lokio/k;.u0:(Lokio/k;JJ)Lokio/k;` @kind virtual;
  #L562aac.  v8:= 0I;
  #L562aae.  v1:= 16I;
  #L562ab2.  if v8 >= v1 then goto L562aec;
  #L562ab6.  call temp:= `O`(v7) @signature `Lokio/k;.O:()Z` @kind virtual;
  #L562abc.  v1:= temp;
  #L562abe.  if v1 == 0 then goto L562ac4;
  #L562ac2.  goto L562aec;
  #L562ac4.  call temp:= `a1`(v7) @signature `Lokio/k;.a1:()I` @kind virtual;
  #L562aca.  v1:= temp;
  #L562acc.  call temp:= `isISOControl`(v1) @signature `Ljava/lang/Character;.isISOControl:(I)Z` @kind static;
  #L562ad2.  v2:= temp;
  #L562ad4.  if v2 == 0 then goto L562ae6;
  #L562ad8.  call temp:= `isWhitespace`(v1) @signature `Ljava/lang/Character;.isWhitespace:(I)Z` @kind static;
  #L562ade.  v1:= temp;
  #L562ae0.  if v1 != 0 then goto L562ae6;
  #L562ae4.  return v0;
  #L562ae6.  v8:= v8 + 1;
  #L562aea.  goto L562aae;
  #L562aec.  v8:= 1I;
  #L562aee.  return v8;
  #L562af0.  return v0;
  catch `java.io.EOFException` @[L562a72..L562ae0] goto L562af0;
}
procedure `void` `logHeader`(`okhttp3.logging.HttpLoggingInterceptor` v3 @kind this, `okhttp3.Headers` v4 @kind object, `int` v5 ) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.logHeader:(Lokhttp3/Headers;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L563344.  v0:= v3.`okhttp3.logging.HttpLoggingInterceptor.headersToRedact` @type ^`java.util.Set` @kind object;
  #L563348.  call temp:= `name`(v4, v5) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L56334e.  v1:= temp @kind object;
  #L563350.  call temp:= `contains`(v0, v1) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L563356.  v0:= temp;
  #L563358.  if v0 == 0 then goto L563362;
  #L56335c.  v0:= "██" @kind object;
  #L563360.  goto L56336a;
  #L563362.  call temp:= `value`(v4, v5) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L563368.  v0:= temp @kind object;
  #L56336a.  v1:= v3.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L56336e.  v2:= new `java.lang.StringBuilder`;
  #L563372.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L563378.  call temp:= `name`(v4, v5) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L56337e.  v4:= temp @kind object;
  #L563380.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L563386.  v4:= ": " @kind object;
  #L56338a.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L563390.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L563396.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L56339c.  v4:= temp @kind object;
  #L56339e.  call `log`(v1, v4) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L5633a4.  return @kind void;
}
procedure `okhttp3.logging.HttpLoggingInterceptor$Level` `getLevel`(`okhttp3.logging.HttpLoggingInterceptor` v1 @kind this) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.getLevel:()Lokhttp3/logging/HttpLoggingInterceptor$Level;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5632bc.  v0:= v1.`okhttp3.logging.HttpLoggingInterceptor.level` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` @kind object;
  #L5632c0.  return v0 @kind object;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.logging.HttpLoggingInterceptor` v19 @kind this, `okhttp3.Interceptor$Chain` v20 @kind object) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L562b14.  v1:= v19 @kind object;
  #L562b18.  v0:= v20 @kind object;
  #L562b1c.  v2:= v1.`okhttp3.logging.HttpLoggingInterceptor.level` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` @kind object;
  #L562b20.  call temp:= `request`(v20) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L562b26.  v3:= temp @kind object;
  #L562b28.  v4:= `@@okhttp3.logging.HttpLoggingInterceptor$Level.NONE` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` @kind object;
  #L562b2c.  if v2 != v4 then goto L562b3a;
  #L562b30.  call temp:= `proceed`(v0, v3) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L562b36.  v0:= temp @kind object;
  #L562b38.  return v0 @kind object;
  #L562b3a.  v4:= `@@okhttp3.logging.HttpLoggingInterceptor$Level.BODY` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` @kind object;
  #L562b3e.  v5:= 1I;
  #L562b40.  if v2 != v4 then goto L562b48;
  #L562b44.  v4:= 1I;
  #L562b46.  goto L562b4a;
  #L562b48.  v4:= 0I;
  #L562b4a.  if v4 != 0 then goto L562b5c;
  #L562b4e.  v7:= `@@okhttp3.logging.HttpLoggingInterceptor$Level.HEADERS` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` @kind object;
  #L562b52.  if v2 != v7 then goto L562b58;
  #L562b56.  goto L562b5c;
  #L562b58.  v2:= 0I;
  #L562b5a.  goto L562b5e;
  #L562b5c.  v2:= 1I;
  #L562b5e.  call temp:= `body`(v3) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L562b64.  v7:= temp @kind object;
  #L562b66.  if v7 == 0 then goto L562b6c;
  #L562b6a.  goto L562b6e;
  #L562b6c.  v5:= 0I;
  #L562b6e.  call temp:= `connection`(v20) @signature `Lokhttp3/Interceptor$Chain;.connection:()Lokhttp3/Connection;` @kind interface;
  #L562b74.  v8:= temp @kind object;
  #L562b76.  v9:= new `java.lang.StringBuilder`;
  #L562b7a.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562b80.  v10:= "--> " @kind object;
  #L562b84.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562b8a.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L562b90.  v10:= temp @kind object;
  #L562b92.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562b98.  v10:= 32I;
  #L562b9c.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L562ba2.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L562ba8.  v11:= temp @kind object;
  #L562baa.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562bb0.  v11:= "" @kind object;
  #L562bb4.  if v8 == 0 then goto L562be4;
  #L562bb8.  v12:= new `java.lang.StringBuilder`;
  #L562bbc.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562bc2.  v13:= " " @kind object;
  #L562bc6.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562bcc.  call temp:= `protocol`(v8) @signature `Lokhttp3/Connection;.protocol:()Lokhttp3/Protocol;` @kind interface;
  #L562bd2.  v8:= temp @kind object;
  #L562bd4.  call temp:= `append`(v12, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562bda.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L562be0.  v8:= temp @kind object;
  #L562be2.  goto L562be6;
  #L562be4.  v8:= v11 @kind object;
  #L562be6.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562bec.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L562bf2.  v8:= temp @kind object;
  #L562bf4.  v9:= "-byte body)" @kind object;
  #L562bf8.  v12:= " (" @kind object;
  #L562bfc.  if v2 != 0 then goto L562c36;
  #L562c00.  if v5 == 0 then goto L562c36;
  #L562c04.  v13:= new `java.lang.StringBuilder`;
  #L562c08.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562c0e.  call temp:= `append`(v13, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562c14.  call temp:= `append`(v13, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562c1a.  call temp:= `contentLength`(v7) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L562c20.  v14:= temp @kind wide;
  #L562c22.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L562c28.  call temp:= `append`(v13, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562c2e.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L562c34.  v8:= temp @kind object;
  #L562c36.  v13:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L562c3a.  call `log`(v13, v8) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L562c40.  v8:= "-byte body omitted)" @kind object;
  #L562c44.  v13:= -1L;
  #L562c48.  if v2 == 0 then goto L562e9c;
  #L562c4c.  if v5 == 0 then goto L562cd4;
  #L562c50.  call temp:= `contentType`(v7) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L562c56.  v15:= temp @kind object;
  #L562c58.  if v15 == 0 then goto L562c90;
  #L562c5c.  v15:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L562c60.  v6:= new `java.lang.StringBuilder`;
  #L562c64.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562c6a.  v10:= "Content-Type: " @kind object;
  #L562c6e.  call temp:= `append`(v6, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562c74.  call temp:= `contentType`(v7) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L562c7a.  v10:= temp @kind object;
  #L562c7c.  call temp:= `append`(v6, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562c82.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L562c88.  v6:= temp @kind object;
  #L562c8a.  call `log`(v15, v6) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L562c90.  call temp:= `contentLength`(v7) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L562c96.  v16:= temp @kind wide;
  #L562c98.  v6:= lcmp(v16, v13);
  #L562c9c.  if v6 == 0 then goto L562cd4;
  #L562ca0.  v6:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L562ca4.  v10:= new `java.lang.StringBuilder`;
  #L562ca8.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562cae.  v15:= "Content-Length: " @kind object;
  #L562cb2.  call temp:= `append`(v10, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562cb8.  call temp:= `contentLength`(v7) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L562cbe.  v13:= temp @kind wide;
  #L562cc0.  call temp:= `append`(v10, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L562cc6.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L562ccc.  v10:= temp @kind object;
  #L562cce.  call `log`(v6, v10) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L562cd4.  call temp:= `headers`(v3) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L562cda.  v6:= temp @kind object;
  #L562cdc.  call temp:= `size`(v6) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L562ce2.  v10:= temp;
  #L562ce4.  v13:= 0I;
  #L562ce6.  if v13 >= v10 then goto L562d1e;
  #L562cea.  call temp:= `name`(v6, v13) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L562cf0.  v14:= temp @kind object;
  #L562cf2.  v15:= "Content-Type" @kind object;
  #L562cf6.  call temp:= `equalsIgnoreCase`(v15, v14) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L562cfc.  v15:= temp;
  #L562cfe.  if v15 != 0 then goto L562d18;
  #L562d02.  v15:= "Content-Length" @kind object;
  #L562d06.  call temp:= `equalsIgnoreCase`(v15, v14) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L562d0c.  v14:= temp;
  #L562d0e.  if v14 != 0 then goto L562d18;
  #L562d12.  call `logHeader`(v1, v6, v13) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.logHeader:(Lokhttp3/Headers;I)V` @kind direct;
  #L562d18.  v13:= v13 + 1;
  #L562d1c.  goto L562ce6;
  #L562d1e.  v6:= "--> END " @kind object;
  #L562d22.  if v4 == 0 then goto L562e6c;
  #L562d26.  if v5 != 0 then goto L562d2e;
  #L562d2a.  goto L562e6c;
  #L562d2e.  call temp:= `headers`(v3) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L562d34.  v5:= temp @kind object;
  #L562d36.  call temp:= `bodyHasUnknownEncoding`(v5) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.bodyHasUnknownEncoding:(Lokhttp3/Headers;)Z` @kind static;
  #L562d3c.  v5:= temp;
  #L562d3e.  if v5 == 0 then goto L562d80;
  #L562d42.  v5:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L562d46.  v7:= new `java.lang.StringBuilder`;
  #L562d4a.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562d50.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562d56.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L562d5c.  v6:= temp @kind object;
  #L562d5e.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562d64.  v6:= " (encoded body omitted)" @kind object;
  #L562d68.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562d6e.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L562d74.  v6:= temp @kind object;
  #L562d76.  call `log`(v5, v6) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L562d7c.  goto L562e9c;
  #L562d80.  v5:= new `okio.k`;
  #L562d84.  call `<init>`(v5) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L562d8a.  call `writeTo`(v7, v5) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/n;)V` @kind virtual;
  #L562d90.  v10:= `@@okhttp3.logging.HttpLoggingInterceptor.UTF8` @type ^`java.nio.charset.Charset` @kind object;
  #L562d94.  call temp:= `contentType`(v7) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L562d9a.  v13:= temp @kind object;
  #L562d9c.  if v13 == 0 then goto L562da8;
  #L562da0.  call temp:= `charset`(v13, v10) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L562da6.  v10:= temp @kind object;
  #L562da8.  v13:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L562dac.  call `log`(v13, v11) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L562db2.  call temp:= `isPlaintext`(v5) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.isPlaintext:(Lokio/k;)Z` @kind static;
  #L562db8.  v13:= temp;
  #L562dba.  if v13 == 0 then goto L562e1c;
  #L562dbe.  v13:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L562dc2.  call temp:= `e0`(v5, v10) @signature `Lokio/k;.e0:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L562dc8.  v5:= temp @kind object;
  #L562dca.  call `log`(v13, v5) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L562dd0.  v5:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L562dd4.  v10:= new `java.lang.StringBuilder`;
  #L562dd8.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562dde.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562de4.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L562dea.  v6:= temp @kind object;
  #L562dec.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562df2.  call temp:= `append`(v10, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562df8.  call temp:= `contentLength`(v7) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L562dfe.  v6:= temp @kind wide;
  #L562e00.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L562e06.  call temp:= `append`(v10, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562e0c.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L562e12.  v6:= temp @kind object;
  #L562e14.  call `log`(v5, v6) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L562e1a.  goto L562e9c;
  #L562e1c.  v5:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L562e20.  v10:= new `java.lang.StringBuilder`;
  #L562e24.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562e2a.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562e30.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L562e36.  v6:= temp @kind object;
  #L562e38.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562e3e.  v6:= " (binary " @kind object;
  #L562e42.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562e48.  call temp:= `contentLength`(v7) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L562e4e.  v6:= temp @kind wide;
  #L562e50.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L562e56.  call temp:= `append`(v10, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562e5c.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L562e62.  v6:= temp @kind object;
  #L562e64.  call `log`(v5, v6) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L562e6a.  goto L562e9c;
  #L562e6c.  v5:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L562e70.  v7:= new `java.lang.StringBuilder`;
  #L562e74.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562e7a.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562e80.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L562e86.  v6:= temp @kind object;
  #L562e88.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562e8e.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L562e94.  v6:= temp @kind object;
  #L562e96.  call `log`(v5, v6) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L562e9c.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L562ea2.  v5:= temp @kind wide;
  #L562ea4.  call temp:= `proceed`(v0, v3) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L562eaa.  v0:= temp @kind object;
  #L562eac.  v3:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L562eb0.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L562eb6.  v13:= temp @kind wide;
  #L562eb8.  v13:= v13 - v5 @kind long;
  #L562eba.  call temp:= `toMillis`(v3, v13) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L562ec0.  v5:= temp @kind wide;
  #L562ec2.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L562ec8.  v3:= temp @kind object;
  #L562eca.  call temp:= `contentLength`(v3) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L562ed0.  v13:= temp @kind wide;
  #L562ed2.  v16:= -1L;
  #L562ed6.  v7:= lcmp(v13, v16);
  #L562eda.  if v7 == 0 then goto L562f02;
  #L562ede.  v7:= new `java.lang.StringBuilder`;
  #L562ee2.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562ee8.  call temp:= `append`(v7, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L562eee.  v10:= "-byte" @kind object;
  #L562ef2.  call temp:= `append`(v7, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562ef8.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L562efe.  v7:= temp @kind object;
  #L562f00.  goto L562f06;
  #L562f02.  v7:= "unknown-length" @kind object;
  #L562f06.  v10:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L562f0a.  v15:= new `java.lang.StringBuilder`;
  #L562f0e.  call `<init>`(v15) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562f14.  v16:= v9 @kind object;
  #L562f18.  v9:= "<-- " @kind object;
  #L562f1c.  call temp:= `append`(v15, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562f22.  call temp:= `code`(v0) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L562f28.  v9:= temp;
  #L562f2a.  call temp:= `append`(v15, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L562f30.  call temp:= `message`(v0) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L562f36.  v9:= temp @kind object;
  #L562f38.  call temp:= `isEmpty`(v9) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L562f3e.  v9:= temp;
  #L562f40.  if v9 == 0 then goto L562f50;
  #L562f44.  v9:= v11 @kind object;
  #L562f46.  v17:= v13 @kind wide;
  #L562f4a.  v13:= 32I;
  #L562f4e.  goto L562f7e;
  #L562f50.  v9:= new `java.lang.StringBuilder`;
  #L562f54.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562f5a.  v17:= v13 @kind wide;
  #L562f5e.  v13:= 32I;
  #L562f62.  call temp:= `append`(v9, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L562f68.  call temp:= `message`(v0) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L562f6e.  v14:= temp @kind object;
  #L562f70.  call temp:= `append`(v9, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562f76.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L562f7c.  v9:= temp @kind object;
  #L562f7e.  call temp:= `append`(v15, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562f84.  call temp:= `append`(v15, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L562f8a.  call temp:= `request`(v0) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L562f90.  v9:= temp @kind object;
  #L562f92.  call temp:= `url`(v9) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L562f98.  v9:= temp @kind object;
  #L562f9a.  call temp:= `append`(v15, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562fa0.  call temp:= `append`(v15, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562fa6.  call temp:= `append`(v15, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L562fac.  v5:= "ms" @kind object;
  #L562fb0.  call temp:= `append`(v15, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562fb6.  if v2 != 0 then goto L562fe8;
  #L562fba.  v5:= new `java.lang.StringBuilder`;
  #L562fbe.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L562fc4.  v6:= ", " @kind object;
  #L562fc8.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562fce.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562fd4.  v6:= " body" @kind object;
  #L562fd8.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562fde.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L562fe4.  v5:= temp @kind object;
  #L562fe6.  goto L562fea;
  #L562fe8.  v5:= v11 @kind object;
  #L562fea.  call temp:= `append`(v15, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L562ff0.  v5:= 41I;
  #L562ff4.  call temp:= `append`(v15, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L562ffa.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L563000.  v5:= temp @kind object;
  #L563002.  call `log`(v10, v5) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L563008.  if v2 == 0 then goto L56322e;
  #L56300c.  call temp:= `headers`(v0) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L563012.  v2:= temp @kind object;
  #L563014.  call temp:= `size`(v2) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L56301a.  v5:= temp;
  #L56301c.  v6:= 0I;
  #L56301e.  if v6 >= v5 then goto L56302e;
  #L563022.  call `logHeader`(v1, v2, v6) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.logHeader:(Lokhttp3/Headers;I)V` @kind direct;
  #L563028.  v6:= v6 + 1;
  #L56302c.  goto L56301e;
  #L56302e.  if v4 == 0 then goto L563220;
  #L563032.  call temp:= `hasBody`(v0) @signature `Lokhttp3/internal/http/HttpHeaders;.hasBody:(Lokhttp3/Response;)Z` @kind static;
  #L563038.  v4:= temp;
  #L56303a.  if v4 != 0 then goto L563042;
  #L56303e.  goto L563220;
  #L563042.  call temp:= `headers`(v0) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L563048.  v4:= temp @kind object;
  #L56304a.  call temp:= `bodyHasUnknownEncoding`(v4) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.bodyHasUnknownEncoding:(Lokhttp3/Headers;)Z` @kind static;
  #L563050.  v4:= temp;
  #L563052.  if v4 == 0 then goto L563068;
  #L563056.  v2:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L56305a.  v3:= "<-- END HTTP (encoded body omitted)" @kind object;
  #L56305e.  call `log`(v2, v3) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L563064.  goto L56322e;
  #L563068.  call temp:= `source`(v3) @signature `Lokhttp3/ResponseBody;.source:()Lokio/o;` @kind virtual;
  #L56306e.  v4:= temp @kind object;
  #L563070.  v5:= 9223372036854775807L;
  #L56307a.  call temp:= `request`(v4, v5) @signature `Lokio/o;.request:(J)Z` @kind interface;
  #L563080.  call temp:= `q`(v4) @signature `Lokio/o;.q:()Lokio/k;` @kind interface;
  #L563086.  v4:= temp @kind object;
  #L563088.  v5:= "Content-Encoding" @kind object;
  #L56308c.  call temp:= `get`(v2, v5) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L563092.  v2:= temp @kind object;
  #L563094.  v5:= "gzip" @kind object;
  #L563098.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L56309e.  v2:= temp;
  #L5630a0.  v5:= 0I;
  #L5630a2.  if v2 == 0 then goto L5630f6;
  #L5630a6.  call temp:= `f1`(v4) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L5630ac.  v6:= temp @kind wide;
  #L5630ae.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L5630b4.  v2:= temp @kind object;
  #L5630b6.  v6:= new `okio.s`;
  #L5630ba.  call temp:= `d`(v4) @signature `Lokio/k;.d:()Lokio/k;` @kind virtual;
  #L5630c0.  v4:= temp @kind object;
  #L5630c2.  call `<init>`(v6, v4) @signature `Lokio/s;.<init>:(Lokio/i0;)V` @kind direct;
  #L5630c8.  v4:= new `okio.k`;
  #L5630cc.  call `<init>`(v4) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L5630d2.  call temp:= `i0`(v4, v6) @signature `Lokio/k;.i0:(Lokio/i0;)J` @kind virtual;
  #L5630d8.  call `close`(v6) @signature `Lokio/s;.close:()V` @kind virtual;
  #L5630de.  v5:= v2 @kind object;
  #L5630e0.  goto L5630f6;
  #L5630e2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5630e4.  v5:= v6 @kind object;
  #L5630e6.  goto L5630ea;
  #L5630e8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5630ea.  if v5 == 0 then goto L5630f4;
  #L5630ee.  call `close`(v5) @signature `Lokio/s;.close:()V` @kind virtual;
  #L5630f4.  throw v0;
  #L5630f6.  v2:= `@@okhttp3.logging.HttpLoggingInterceptor.UTF8` @type ^`java.nio.charset.Charset` @kind object;
  #L5630fa.  call temp:= `contentType`(v3) @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L563100.  v3:= temp @kind object;
  #L563102.  if v3 == 0 then goto L56310e;
  #L563106.  call temp:= `charset`(v3, v2) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L56310c.  v2:= temp @kind object;
  #L56310e.  call temp:= `isPlaintext`(v4) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.isPlaintext:(Lokio/k;)Z` @kind static;
  #L563114.  v3:= temp;
  #L563116.  if v3 != 0 then goto L563160;
  #L56311a.  v2:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L56311e.  call `log`(v2, v11) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L563124.  v2:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L563128.  v3:= new `java.lang.StringBuilder`;
  #L56312c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L563132.  v5:= "<-- END HTTP (binary " @kind object;
  #L563136.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56313c.  call temp:= `f1`(v4) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L563142.  v4:= temp @kind wide;
  #L563144.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L56314a.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L563150.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L563156.  v3:= temp @kind object;
  #L563158.  call `log`(v2, v3) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L56315e.  return v0 @kind object;
  #L563160.  v6:= 0L;
  #L563164.  v3:= lcmp(v17, v6);
  #L563168.  if v3 == 0 then goto L563190;
  #L56316c.  v3:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L563170.  call `log`(v3, v11) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L563176.  v3:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L56317a.  call temp:= `d`(v4) @signature `Lokio/k;.d:()Lokio/k;` @kind virtual;
  #L563180.  v6:= temp @kind object;
  #L563182.  call temp:= `e0`(v6, v2) @signature `Lokio/k;.e0:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L563188.  v2:= temp @kind object;
  #L56318a.  call `log`(v3, v2) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L563190.  v2:= "<-- END HTTP (" @kind object;
  #L563194.  if v5 == 0 then goto L5631e4;
  #L563198.  v3:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L56319c.  v6:= new `java.lang.StringBuilder`;
  #L5631a0.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5631a6.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5631ac.  call temp:= `f1`(v4) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L5631b2.  v7:= temp @kind wide;
  #L5631b4.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L5631ba.  v2:= "-byte, " @kind object;
  #L5631be.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5631c4.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5631ca.  v2:= "-gzipped-byte body)" @kind object;
  #L5631ce.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5631d4.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5631da.  v2:= temp @kind object;
  #L5631dc.  call `log`(v3, v2) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L5631e2.  goto L56322e;
  #L5631e4.  v3:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L5631e8.  v5:= new `java.lang.StringBuilder`;
  #L5631ec.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5631f2.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5631f8.  call temp:= `f1`(v4) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L5631fe.  v6:= temp @kind wide;
  #L563200.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L563206.  v2:= v16 @kind object;
  #L56320a.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L563210.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L563216.  v2:= temp @kind object;
  #L563218.  call `log`(v3, v2) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L56321e.  goto L56322e;
  #L563220.  v2:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L563224.  v3:= "<-- END HTTP" @kind object;
  #L563228.  call `log`(v2, v3) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L56322e.  return v0 @kind object;
  #L563230.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L563232.  v2:= v0 @kind object;
  #L563234.  v0:= v1.`okhttp3.logging.HttpLoggingInterceptor.logger` @type ^`okhttp3.logging.HttpLoggingInterceptor$Logger` @kind object;
  #L563238.  v3:= new `java.lang.StringBuilder`;
  #L56323c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L563242.  v4:= "<-- HTTP FAILED: " @kind object;
  #L563246.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56324c.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L563252.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L563258.  v3:= temp @kind object;
  #L56325a.  call `log`(v0, v3) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger;.log:(Ljava/lang/String;)V` @kind interface;
  #L563260.  goto L563264;
  #L563262.  throw v2;
  #L563264.  goto L563262;
  catch `java.lang.Exception` @[L562ea4..L562eac] goto L563230;
  catch `java.lang.Throwable` @[L5630b6..L5630c8] goto L5630e8;
  catch `java.lang.Throwable` @[L5630c8..L5630d8] goto L5630e2;
}
procedure `void` `redactHeader`(`okhttp3.logging.HttpLoggingInterceptor` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.redactHeader:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5633b8.  v0:= new `java.util.TreeSet`;
  #L5633bc.  v1:= `@@java.lang.String.CASE_INSENSITIVE_ORDER` @type ^`java.util.Comparator` @kind object;
  #L5633c0.  call `<init>`(v0, v1) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L5633c6.  v1:= v2.`okhttp3.logging.HttpLoggingInterceptor.headersToRedact` @type ^`java.util.Set` @kind object;
  #L5633ca.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/Set;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L5633d0.  call temp:= `add`(v0, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L5633d6.  v2.`okhttp3.logging.HttpLoggingInterceptor.headersToRedact` @type ^`java.util.Set` := v0 @kind object;
  #L5633da.  return @kind void;
}
procedure `okhttp3.logging.HttpLoggingInterceptor` `setLevel`(`okhttp3.logging.HttpLoggingInterceptor` v1 @kind this, `okhttp3.logging.HttpLoggingInterceptor$Level` v2 @kind object) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.setLevel:(Lokhttp3/logging/HttpLoggingInterceptor$Level;)Lokhttp3/logging/HttpLoggingInterceptor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56329c.  v0:= "level == null. Use Level.NONE instead." @kind object;
  #L5632a0.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L5632a6.  v1.`okhttp3.logging.HttpLoggingInterceptor.level` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` := v2 @kind object;
  #L5632aa.  return v1 @kind object;
}
