record `okhttp3.logging.HttpLoggingInterceptor$Level` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `okhttp3.logging.HttpLoggingInterceptor$Level`[] `@@okhttp3.logging.HttpLoggingInterceptor$Level.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.logging.HttpLoggingInterceptor$Level` `@@okhttp3.logging.HttpLoggingInterceptor$Level.BASIC` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.logging.HttpLoggingInterceptor$Level` `@@okhttp3.logging.HttpLoggingInterceptor$Level.BODY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.logging.HttpLoggingInterceptor$Level` `@@okhttp3.logging.HttpLoggingInterceptor$Level.HEADERS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.logging.HttpLoggingInterceptor$Level` `@@okhttp3.logging.HttpLoggingInterceptor$Level.NONE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/logging/HttpLoggingInterceptor$Level;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L562994.  v0:= new `okhttp3.logging.HttpLoggingInterceptor$Level`;
  #L562998.  v1:= "NONE" @kind object;
  #L56299c.  v2:= 0I;
  #L56299e.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Level;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L5629a4.  `@@okhttp3.logging.HttpLoggingInterceptor$Level.NONE` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` := v0 @kind object;
  #L5629a8.  v1:= new `okhttp3.logging.HttpLoggingInterceptor$Level`;
  #L5629ac.  v3:= "BASIC" @kind object;
  #L5629b0.  v4:= 1I;
  #L5629b2.  call `<init>`(v1, v3, v4) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Level;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L5629b8.  `@@okhttp3.logging.HttpLoggingInterceptor$Level.BASIC` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` := v1 @kind object;
  #L5629bc.  v3:= new `okhttp3.logging.HttpLoggingInterceptor$Level`;
  #L5629c0.  v5:= "HEADERS" @kind object;
  #L5629c4.  v6:= 2I;
  #L5629c6.  call `<init>`(v3, v5, v6) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Level;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L5629cc.  `@@okhttp3.logging.HttpLoggingInterceptor$Level.HEADERS` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` := v3 @kind object;
  #L5629d0.  v5:= new `okhttp3.logging.HttpLoggingInterceptor$Level`;
  #L5629d4.  v7:= "BODY" @kind object;
  #L5629d8.  v8:= 3I;
  #L5629da.  call `<init>`(v5, v7, v8) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Level;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L5629e0.  `@@okhttp3.logging.HttpLoggingInterceptor$Level.BODY` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` := v5 @kind object;
  #L5629e4.  v7:= 4I;
  #L5629e6.  v7:= new `okhttp3.logging.HttpLoggingInterceptor$Level`[v7];
  #L5629ea.  v7[v2]:= v0 @kind object;
  #L5629ee.  v7[v4]:= v1 @kind object;
  #L5629f2.  v7[v6]:= v3 @kind object;
  #L5629f6.  v7[v8]:= v5 @kind object;
  #L5629fa.  `@@okhttp3.logging.HttpLoggingInterceptor$Level.$VALUES` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level`[] := v7 @kind object;
  #L5629fe.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.logging.HttpLoggingInterceptor$Level` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Level;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L562a10.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L562a16.  return @kind void;
}
procedure `okhttp3.logging.HttpLoggingInterceptor$Level` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Level;.valueOf:(Ljava/lang/String;)Lokhttp3/logging/HttpLoggingInterceptor$Level;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L56294c.  v0:= constclass @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` @kind object;
  #L562950.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L562956.  v1:= temp @kind object;
  #L562958.  v1:= (`okhttp3.logging.HttpLoggingInterceptor$Level`) v1 @kind object;
  #L56295c.  return v1 @kind object;
}
procedure `okhttp3.logging.HttpLoggingInterceptor$Level`[] `values`() @signature `Lokhttp3/logging/HttpLoggingInterceptor$Level;.values:()[Lokhttp3/logging/HttpLoggingInterceptor$Level;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L562970.  v0:= `@@okhttp3.logging.HttpLoggingInterceptor$Level.$VALUES` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level`[] @kind object;
  #L562974.  call temp:= `clone`(v0) @signature `[Lokhttp3/logging/HttpLoggingInterceptor$Level;.clone:()Ljava/lang/Object;` @kind virtual;
  #L56297a.  v0:= temp @kind object;
  #L56297c.  v0:= (`okhttp3.logging.HttpLoggingInterceptor$Level`[]) v0 @kind object;
  #L562980.  return v0 @kind object;
}
