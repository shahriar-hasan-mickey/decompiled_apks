record `h.c.a.a.c` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<clinit>`() @signature `Lh/c/a/a/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4210e0.  v0:= constclass @type ^`h.c.a.a.c` @kind object;
  #L4210e4.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L4210ea.  return @kind void;
}
procedure `android.os.Parcelable` `a`(`android.os.Parcel` v1 @kind object, `android.os.Parcelable$Creator` v2 @kind object) @signature `Lh/c/a/a/c;.a:(Landroid/os/Parcel;Landroid/os/Parcelable$Creator;)Landroid/os/Parcelable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4210b0.  call temp:= `readInt`(v1) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L4210b6.  v0:= temp;
  #L4210b8.  if v0 != 0 then goto L4210c0;
  #L4210bc.  v1:= 0I;
  #L4210be.  return v1 @kind object;
  #L4210c0.  call temp:= `createFromParcel`(v2, v1) @signature `Landroid/os/Parcelable$Creator;.createFromParcel:(Landroid/os/Parcel;)Ljava/lang/Object;` @kind interface;
  #L4210c6.  v1:= temp @kind object;
  #L4210c8.  v1:= (`android.os.Parcelable`) v1 @kind object;
  #L4210cc.  return v1 @kind object;
}
procedure `void` `b`(`android.os.Parcel` v1 @kind object, `android.os.Parcelable` v2 @kind object) @signature `Lh/c/a/a/c;.b:(Landroid/os/Parcel;Landroid/os/Parcelable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4210fc.  v0:= 1I;
  #L4210fe.  call `writeInt`(v1, v0) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L421104.  v0:= 0I;
  #L421106.  call `writeToParcel`(v2, v1, v0) @signature `Landroid/os/Parcelable;.writeToParcel:(Landroid/os/Parcel;I)V` @kind interface;
  #L42110c.  return @kind void;
}
