record `h.a.a.a` @kind class @AccessFlag PUBLIC {
  `int` `h.a.a.a.a` @AccessFlag PRIVATE_FINAL;
  `int` `h.a.a.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h.a.a.a` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lh/a/a/a;.<init>:(II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e8ee4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e8eea.  v0.`h.a.a.a.a` @type ^`int` := v1;
  #L2e8eee.  v0.`h.a.a.a.b` @type ^`int` := v2;
  #L2e8ef2.  return @kind void;
}
procedure `int` `a`(`h.a.a.a` v1 @kind this) @signature `Lh/a/a/a;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e8e70.  v0:= v1.`h.a.a.a.b` @type ^`int`;
  #L2e8e74.  return v0;
}
procedure `int` `b`(`h.a.a.a` v1 @kind this) @signature `Lh/a/a/a;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e8e88.  v0:= v1.`h.a.a.a.a` @type ^`int`;
  #L2e8e8c.  return v0;
}
procedure `boolean` `equals`(`h.a.a.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lh/a/a/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e8e24.  v0:= instanceof @variable v3 @type ^`h.a.a.a` @kind boolean;
  #L2e8e28.  if v0 == 0 then goto L2e8e5c;
  #L2e8e2c.  v3:= (`h.a.a.a`) v3 @kind object;
  #L2e8e30.  call temp:= `b`(v3) @signature `Lh/a/a/a;.b:()I` @kind virtual;
  #L2e8e36.  v0:= temp;
  #L2e8e38.  call temp:= `b`(v2) @signature `Lh/a/a/a;.b:()I` @kind virtual;
  #L2e8e3e.  v1:= temp;
  #L2e8e40.  if v0 != v1 then goto L2e8e5c;
  #L2e8e44.  call temp:= `a`(v3) @signature `Lh/a/a/a;.a:()I` @kind virtual;
  #L2e8e4a.  v3:= temp;
  #L2e8e4c.  call temp:= `a`(v2) @signature `Lh/a/a/a;.a:()I` @kind virtual;
  #L2e8e52.  v0:= temp;
  #L2e8e54.  if v3 != v0 then goto L2e8e5c;
  #L2e8e58.  v3:= 1I;
  #L2e8e5a.  goto L2e8e5e;
  #L2e8e5c.  v3:= 0I;
  #L2e8e5e.  return v3;
}
procedure `java.lang.String` `toString`(`h.a.a.a` v2 @kind this) @signature `Lh/a/a/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e8ea0.  v0:= new `java.lang.StringBuilder`;
  #L2e8ea4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e8eaa.  v1:= v2.`h.a.a.a.a` @type ^`int`;
  #L2e8eae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e8eb4.  v1:= ":" @kind object;
  #L2e8eb8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e8ebe.  v1:= v2.`h.a.a.a.b` @type ^`int`;
  #L2e8ec2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e8ec8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e8ece.  v0:= temp @kind object;
  #L2e8ed0.  return v0 @kind object;
}
