record `kotlinx.coroutines.channels.ReceiveChannel` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `d`(`java.util.concurrent.CancellationException` v0 @kind object) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.d:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlinx.coroutines.selects.h` `e`() @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.e:()Lkotlinx/coroutines/selects/h;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlinx.coroutines.selects.h` `f`() @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.f:()Lkotlinx/coroutines/selects/h;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `g`() @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.g:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `h`(`kotlin.coroutines.Continuation` v0 @kind object) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.h:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlinx.coroutines.channels.ChannelIterator` `iterator`() @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.iterator:()Lkotlinx/coroutines/channels/ChannelIterator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
