record `com.github.dhaval2404.imagepicker.k.k` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.github.dhaval2404.imagepicker.k.k` `@@com.github.dhaval2404.imagepicker.k.k.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/github/dhaval2404/imagepicker/k/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3664ec.  v0:= new `com.github.dhaval2404.imagepicker.k.k`;
  #L3664f0.  call `<init>`(v0) @signature `Lcom/github/dhaval2404/imagepicker/k/k;.<init>:()V` @kind direct;
  #L3664f6.  `@@com.github.dhaval2404.imagepicker.k.k.a` @type ^`com.github.dhaval2404.imagepicker.k.k` := v0 @kind object;
  #L3664fa.  return @kind void;
}
procedure `void` `<init>`(`com.github.dhaval2404.imagepicker.k.k` v0 @kind this) @signature `Lcom/github/dhaval2404/imagepicker/k/k;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L36650c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L366512.  return @kind void;
}
procedure `int` `a`(`com.github.dhaval2404.imagepicker.k.k` v3 @kind this, `android.graphics.BitmapFactory$Options` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/github/dhaval2404/imagepicker/k/k;.a:(Landroid/graphics/BitmapFactory$Options;II)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3663a8.  v0:= v4.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L3663ac.  v4:= v4.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L3663b0.  v1:= 1I;
  #L3663b2.  if v0 > v6 then goto L3663ba;
  #L3663b6.  if v4 <= v5 then goto L3663d8;
  #L3663ba.  v0:= v0 / 2;
  #L3663be.  v4:= v4 / 2;
  #L3663c2.  v2:= v0 / v1 @kind int;
  #L3663c6.  if v2 < v6 then goto L3663d8;
  #L3663ca.  v2:= v4 / v1 @kind int;
  #L3663ce.  if v2 < v5 then goto L3663d8;
  #L3663d2.  v1:= v1 * 2;
  #L3663d6.  goto L3663c2;
  #L3663d8.  return v1;
}
procedure `boolean` `b`(`com.github.dhaval2404.imagepicker.k.k` v4 @kind this, `android.graphics.Bitmap` v5 @kind object, `android.graphics.BitmapFactory$Options` v6 @kind object) @signature `Lcom/github/dhaval2404/imagepicker/k/k;.b:(Landroid/graphics/Bitmap;Landroid/graphics/BitmapFactory$Options;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L366318.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L36631c.  v1:= 0I;
  #L36631e.  v2:= 1I;
  #L366320.  v3:= 19I;
  #L366324.  if v0 < v3 then goto L36636a;
  #L366328.  v0:= v6.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L36632c.  v3:= v6.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L366330.  v0:= v0 / v3 @kind int;
  #L366332.  v6:= v6.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L366336.  v6:= v6 / v3 @kind int;
  #L366338.  v0:= v0 * v6 @kind int;
  #L36633c.  call temp:= `getConfig`(v5) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L366342.  v6:= temp @kind object;
  #L366344.  v3:= "candidate.config" @kind object;
  #L366348.  call `checkNotNullExpressionValue`(v6, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36634e.  call temp:= `e`(v4, v6) @signature `Lcom/github/dhaval2404/imagepicker/k/k;.e:(Landroid/graphics/Bitmap$Config;)I` @kind direct;
  #L366354.  v6:= temp;
  #L366356.  v0:= v0 * v6 @kind int;
  #L36635a.  call temp:= `getAllocationByteCount`(v5) @signature `Landroid/graphics/Bitmap;.getAllocationByteCount:()I` @kind virtual;
  #L366360.  v5:= temp;
  #L366362.  if v0 > v5 then goto L366394;
  #L366366.  v1:= 1I;
  #L366368.  goto L366394;
  #L36636a.  call temp:= `getWidth`(v5) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L366370.  v0:= temp;
  #L366372.  v3:= v6.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L366376.  if v0 != v3 then goto L366394;
  #L36637a.  call temp:= `getHeight`(v5) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L366380.  v5:= temp;
  #L366382.  v0:= v6.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L366386.  if v5 != v0 then goto L366394;
  #L36638a.  v5:= v6.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L36638e.  if v5 != v2 then goto L366394;
  #L366392.  goto L366366;
  #L366394.  return v1;
}
procedure `android.graphics.Bitmap` `d`(`com.github.dhaval2404.imagepicker.k.k` v12 @kind this, `java.io.File` v13 @kind object, `float` v14 , `float` v15 ) @signature `Lcom/github/dhaval2404/imagepicker/k/k;.d:(Ljava/io/File;FF)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L366168.  v0:= new `android.graphics.BitmapFactory$Options`;
  #L36616c.  call `<init>`(v0) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L366172.  v1:= 1I;
  #L366174.  v0.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v1 @kind boolean;
  #L366178.  call temp:= `getAbsolutePath`(v13) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L36617e.  v2:= temp @kind object;
  #L366180.  call temp:= `decodeFile`(v2, v0) @signature `Landroid/graphics/BitmapFactory;.decodeFile:(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L366186.  v2:= temp @kind object;
  #L366188.  v3:= v0.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L36618c.  v4:= v0.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L366190.  v5:= (`float`) v4 @kind i2f;
  #L366192.  v6:= (`float`) v3 @kind i2f;
  #L366194.  v7:= v5 / v6 @kind float;
  #L366198.  v8:= v14 / v15 @kind float;
  #L36619c.  v9:= fcmpl(v6, v15);
  #L3661a0.  if v9 > 0 then goto L3661ac;
  #L3661a4.  v9:= fcmpl(v5, v14);
  #L3661a8.  if v9 <= 0 then goto L3661d6;
  #L3661ac.  v3:= fcmpg(v7, v8);
  #L3661b0.  if v3 >= 0 then goto L3661c2;
  #L3661b4.  v14:= v15 / v6 @kind float;
  #L3661b8.  v14:= v14 * v5 @kind float;
  #L3661bc.  v4:= (`int`) v14 @kind f2i;
  #L3661be.  v3:= (`int`) v15 @kind f2i;
  #L3661c0.  goto L3661d6;
  #L3661c2.  v3:= fcmpl(v7, v8);
  #L3661c6.  if v3 <= 0 then goto L3661d2;
  #L3661ca.  v15:= v14 / v5 @kind float;
  #L3661ce.  v15:= v15 * v6 @kind float;
  #L3661d2.  v3:= (`int`) v15 @kind f2i;
  #L3661d4.  v4:= (`int`) v14 @kind f2i;
  #L3661d6.  call temp:= `a`(v12, v0, v4, v3) @signature `Lcom/github/dhaval2404/imagepicker/k/k;.a:(Landroid/graphics/BitmapFactory$Options;II)I` @kind direct;
  #L3661dc.  v14:= temp;
  #L3661de.  v0.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v14;
  #L3661e2.  v14:= 0I;
  #L3661e4.  v0.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v14 @kind boolean;
  #L3661e8.  if v2 == 0 then goto L366200;
  #L3661ec.  call temp:= `b`(v12, v2, v0) @signature `Lcom/github/dhaval2404/imagepicker/k/k;.b:(Landroid/graphics/Bitmap;Landroid/graphics/BitmapFactory$Options;)Z` @kind direct;
  #L3661f2.  v14:= temp;
  #L3661f4.  if v14 == 0 then goto L366200;
  #L3661f8.  v0.`android.graphics.BitmapFactory$Options.inMutable` @type ^`boolean` := v1 @kind boolean;
  #L3661fc.  v0.`android.graphics.BitmapFactory$Options.inBitmap` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L366200.  v14:= 16384I;
  #L366204.  v14:= new `byte`[v14];
  #L366208.  v0.`android.graphics.BitmapFactory$Options.inTempStorage` @type ^`byte`[] := v14 @kind object;
  #L36620c.  call temp:= `getAbsolutePath`(v13) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L366212.  v13:= temp @kind object;
  #L366214.  call temp:= `decodeFile`(v13, v0) @signature `Landroid/graphics/BitmapFactory;.decodeFile:(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L36621a.  v2:= temp @kind object;
  #L36621c.  goto L366226;
  #L36621e.  v13:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L366220.  call `printStackTrace`(v13) @signature `Ljava/lang/OutOfMemoryError;.printStackTrace:()V` @kind virtual;
  #L366226.  v13:= 0I;
  #L366228.  v14:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L36622c.  call temp:= `createBitmap`(v4, v3, v14) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L366232.  v13:= temp @kind object;
  #L366234.  goto L36623e;
  #L366236.  v14:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L366238.  call `printStackTrace`(v14) @signature `Ljava/lang/OutOfMemoryError;.printStackTrace:()V` @kind virtual;
  #L36623e.  v5:= v13 @kind object;
  #L366240.  v13:= (`float`) v4 @kind i2f;
  #L366242.  v14:= v0.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L366246.  v14:= (`float`) v14 @kind i2f;
  #L366248.  v14:= v13 / v14 @kind float;
  #L36624c.  v15:= (`float`) v3 @kind i2f;
  #L36624e.  v0:= v0.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L366252.  v0:= (`float`) v0 @kind i2f;
  #L366254.  v0:= v15 / v0 @kind float;
  #L366258.  v1:= 2.0F;
  #L36625c.  v13:= v13 / v1 @kind float;
  #L36625e.  v15:= v15 / v1 @kind float;
  #L366260.  v1:= new `android.graphics.Matrix`;
  #L366264.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L36626a.  call `setScale`(v1, v14, v0, v13, v15) @signature `Landroid/graphics/Matrix;.setScale:(FFFF)V` @kind virtual;
  #L366270.  v14:= new `android.graphics.Canvas`;
  #L366274.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L36627a.  call `<init>`(v14, v5) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L366280.  call `setMatrix`(v14, v1) @signature `Landroid/graphics/Canvas;.setMatrix:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L366286.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L36628c.  call temp:= `getWidth`(v2) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L366292.  v0:= temp;
  #L366294.  v1:= 2I;
  #L366296.  v0:= v0 / v1 @kind int;
  #L366298.  v0:= (`float`) v0 @kind i2f;
  #L36629a.  v13:= v13 - v0 @kind float;
  #L36629c.  call temp:= `getHeight`(v2) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3662a2.  v0:= temp;
  #L3662a4.  v0:= v0 / v1 @kind int;
  #L3662a6.  v0:= (`float`) v0 @kind i2f;
  #L3662a8.  v15:= v15 - v0 @kind float;
  #L3662aa.  v0:= new `android.graphics.Paint`;
  #L3662ae.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L3662b4.  call `drawBitmap`(v14, v2, v13, v15, v0) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L3662ba.  call `recycle`(v2) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L3662c0.  v10:= new `android.graphics.Matrix`;
  #L3662c4.  call `<init>`(v10) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3662ca.  v6:= 0I;
  #L3662cc.  v7:= 0I;
  #L3662ce.  call temp:= `getWidth`(v5) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3662d4.  v8:= temp;
  #L3662d6.  call temp:= `getHeight`(v5) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3662dc.  v9:= temp;
  #L3662de.  v11:= 1I;
  #L3662e0.  call temp:= `createBitmap`(v5, v6, v7, v8, v9, v10, v11) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L3662e6.  v13:= temp @kind object;
  #L3662e8.  return v13 @kind object;
  catch `java.lang.OutOfMemoryError` @[L36620c..L36621c] goto L36621e;
  catch `java.lang.OutOfMemoryError` @[L366228..L366234] goto L366236;
}
procedure `int` `e`(`com.github.dhaval2404.imagepicker.k.k` v4 @kind this, `android.graphics.Bitmap$Config` v5 @kind object) @signature `Lcom/github/dhaval2404/imagepicker/k/k;.e:(Landroid/graphics/Bitmap$Config;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3663ec.  v0:= `@@com.github.dhaval2404.imagepicker.k.j.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L3663f0.  call temp:= `ordinal`(v5) @signature `Landroid/graphics/Bitmap$Config;.ordinal:()I` @kind virtual;
  #L3663f6.  v5:= temp;
  #L3663f8.  v5:= v0[v5];
  #L3663fc.  v0:= 4I;
  #L3663fe.  v1:= 2I;
  #L366400.  v2:= 1I;
  #L366402.  if v5 == v2 then goto L366416;
  #L366406.  if v5 == v1 then goto L366414;
  #L36640a.  v3:= 3I;
  #L36640c.  if v5 == v3 then goto L366414;
  #L366410.  v0:= 1I;
  #L366412.  goto L366416;
  #L366414.  v0:= 2I;
  #L366416.  return v0;
}
procedure `java.io.File` `c`(`com.github.dhaval2404.imagepicker.k.k` v2 @kind this, `java.io.File` v3 @kind object, `float` v4 , `float` v5 , `android.graphics.Bitmap$CompressFormat` v6 @kind object, `java.lang.String` v7 @kind object) @signature `Lcom/github/dhaval2404/imagepicker/k/k;.c:(Ljava/io/File;FFLandroid/graphics/Bitmap$CompressFormat;Ljava/lang/String;)Ljava/io/File;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L366428.  v0:= "imageFile" @kind object;
  #L36642c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L366432.  v0:= "compressFormat" @kind object;
  #L366436.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36643c.  v0:= "destinationPath" @kind object;
  #L366440.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L366446.  v0:= new `java.io.File`;
  #L36644a.  call `<init>`(v0, v7) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L366450.  call temp:= `getParentFile`(v0) @signature `Ljava/io/File;.getParentFile:()Ljava/io/File;` @kind virtual;
  #L366456.  v0:= temp @kind object;
  #L366458.  if v0 == 0 then goto L36646e;
  #L36645c.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L366462.  v1:= temp;
  #L366464.  if v1 != 0 then goto L36646e;
  #L366468.  call temp:= `mkdirs`(v0) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L36646e.  v0:= 0I;
  #L366470.  v1:= new `java.io.FileOutputStream`;
  #L366474.  call `<init>`(v1, v7) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36647a.  call temp:= `d`(v2, v3, v4, v5) @signature `Lcom/github/dhaval2404/imagepicker/k/k;.d:(Ljava/io/File;FF)Landroid/graphics/Bitmap;` @kind direct;
  #L366480.  v3:= temp @kind object;
  #L366482.  if v3 == 0 then goto L366490;
  #L366486.  v4:= 100I;
  #L36648a.  call temp:= `compress`(v3, v6, v4, v1) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L366490.  call `flush`(v1) @signature `Ljava/io/FileOutputStream;.flush:()V` @kind virtual;
  #L366496.  call `close`(v1) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L36649c.  v3:= new `java.io.File`;
  #L3664a0.  call `<init>`(v3, v7) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3664a6.  return v3 @kind object;
  #L3664a8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3664aa.  v0:= v1 @kind object;
  #L3664ac.  goto L3664b0;
  #L3664ae.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3664b0.  if v0 == 0 then goto L3664c0;
  #L3664b4.  call `flush`(v0) @signature `Ljava/io/FileOutputStream;.flush:()V` @kind virtual;
  #L3664ba.  call `close`(v0) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L3664c0.  throw v3;
  catch `java.lang.Throwable` @[L366470..L36647a] goto L3664ae;
  catch `java.lang.Throwable` @[L36647a..L366490] goto L3664a8;
}
