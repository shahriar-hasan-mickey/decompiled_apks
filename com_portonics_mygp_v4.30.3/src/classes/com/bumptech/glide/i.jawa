record `com.bumptech.glide.i` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.request.a` @kind class, `java.lang.Cloneable` @kind interface {
  `android.content.Context` `com.bumptech.glide.i.C` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.k` `com.bumptech.glide.i.D` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.i.E` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.e` `com.bumptech.glide.i.F` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.g` `com.bumptech.glide.i.G` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.l` `com.bumptech.glide.i.H` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.i.I` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.i.J` @AccessFlag PRIVATE;
  `com.bumptech.glide.i` `com.bumptech.glide.i.K` @AccessFlag PRIVATE;
  `com.bumptech.glide.i` `com.bumptech.glide.i.L` @AccessFlag PRIVATE;
  `java.lang.Float` `com.bumptech.glide.i.M` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.i.N` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.i.O` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.i.P` @AccessFlag PRIVATE;
}
global `com.bumptech.glide.request.i` `@@com.bumptech.glide.i.B` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L321b3c.  v0:= new `com.bumptech.glide.request.i`;
  #L321b40.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/i;.<init>:()V` @kind direct;
  #L321b46.  v1:= `@@com.bumptech.glide.load.engine.y.c` @type ^`com.bumptech.glide.load.engine.y` @kind object;
  #L321b4a.  call temp:= `h`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.h:(Lcom/bumptech/glide/load/engine/y;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321b50.  v0:= temp @kind object;
  #L321b52.  v0:= (`com.bumptech.glide.request.i`) v0 @kind object;
  #L321b56.  v1:= `@@com.bumptech.glide.Priority.LOW` @type ^`com.bumptech.glide.Priority` @kind object;
  #L321b5a.  call temp:= `d0`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.d0:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321b60.  v0:= temp @kind object;
  #L321b62.  v0:= (`com.bumptech.glide.request.i`) v0 @kind object;
  #L321b66.  v1:= 1I;
  #L321b68.  call temp:= `l0`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.l0:(Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321b6e.  v0:= temp @kind object;
  #L321b70.  v0:= (`com.bumptech.glide.request.i`) v0 @kind object;
  #L321b74.  `@@com.bumptech.glide.i.B` @type ^`com.bumptech.glide.request.i` := v0 @kind object;
  #L321b78.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.i` v1 @kind this, `com.bumptech.glide.e` v2 @kind object, `com.bumptech.glide.k` v3 @kind object, `java.lang.Class` v4 @kind object, `android.content.Context` v5 @kind object) @signature `Lcom/bumptech/glide/i;.<init>:(Lcom/bumptech/glide/e;Lcom/bumptech/glide/k;Ljava/lang/Class;Landroid/content/Context;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L321b8c.  call `<init>`(v1) @signature `Lcom/bumptech/glide/request/a;.<init>:()V` @kind direct;
  #L321b92.  v0:= 1I;
  #L321b94.  v1.`com.bumptech.glide.i.N` @type ^`boolean` := v0 @kind boolean;
  #L321b98.  v1.`com.bumptech.glide.i.F` @type ^`com.bumptech.glide.e` := v2 @kind object;
  #L321b9c.  v1.`com.bumptech.glide.i.D` @type ^`com.bumptech.glide.k` := v3 @kind object;
  #L321ba0.  v1.`com.bumptech.glide.i.E` @type ^`java.lang.Class` := v4 @kind object;
  #L321ba4.  v1.`com.bumptech.glide.i.C` @type ^`android.content.Context` := v5 @kind object;
  #L321ba8.  call temp:= `r`(v3, v4) @signature `Lcom/bumptech/glide/k;.r:(Ljava/lang/Class;)Lcom/bumptech/glide/l;` @kind virtual;
  #L321bae.  v4:= temp @kind object;
  #L321bb0.  v1.`com.bumptech.glide.i.H` @type ^`com.bumptech.glide.l` := v4 @kind object;
  #L321bb4.  call temp:= `i`(v2) @signature `Lcom/bumptech/glide/e;.i:()Lcom/bumptech/glide/g;` @kind virtual;
  #L321bba.  v2:= temp @kind object;
  #L321bbc.  v1.`com.bumptech.glide.i.G` @type ^`com.bumptech.glide.g` := v2 @kind object;
  #L321bc0.  call temp:= `p`(v3) @signature `Lcom/bumptech/glide/k;.p:()Ljava/util/List;` @kind virtual;
  #L321bc6.  v2:= temp @kind object;
  #L321bc8.  call `B0`(v1, v2) @signature `Lcom/bumptech/glide/i;.B0:(Ljava/util/List;)V` @kind direct;
  #L321bce.  call temp:= `q`(v3) @signature `Lcom/bumptech/glide/k;.q:()Lcom/bumptech/glide/request/i;` @kind virtual;
  #L321bd4.  v2:= temp @kind object;
  #L321bd6.  call temp:= `v0`(v1, v2) @signature `Lcom/bumptech/glide/i;.v0:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/i;` @kind virtual;
  #L321bdc.  return @kind void;
}
procedure `com.bumptech.glide.Priority` `A0`(`com.bumptech.glide.i` v2 @kind this, `com.bumptech.glide.Priority` v3 @kind object) @signature `Lcom/bumptech/glide/i;.A0:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/Priority;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L321310.  v0:= `@@com.bumptech.glide.h.b` @type ^`int`[] @kind object;
  #L321314.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L32131a.  v3:= temp;
  #L32131c.  v3:= v0[v3];
  #L321320.  v0:= 1I;
  #L321322.  if v3 == v0 then goto L32137c;
  #L321326.  v0:= 2I;
  #L321328.  if v3 == v0 then goto L321376;
  #L32132c.  v0:= 3I;
  #L32132e.  if v3 == v0 then goto L321370;
  #L321332.  v0:= 4I;
  #L321334.  if v3 != v0 then goto L32133a;
  #L321338.  goto L321370;
  #L32133a.  v3:= new `java.lang.IllegalArgumentException`;
  #L32133e.  v0:= new `java.lang.StringBuilder`;
  #L321342.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L321348.  v1:= "unknown priority: " @kind object;
  #L32134c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321352.  call temp:= `E`(v2) @signature `Lcom/bumptech/glide/request/a;.E:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L321358.  v1:= temp @kind object;
  #L32135a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321360.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L321366.  v0:= temp @kind object;
  #L321368.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32136e.  throw v3;
  #L321370.  v3:= `@@com.bumptech.glide.Priority.IMMEDIATE` @type ^`com.bumptech.glide.Priority` @kind object;
  #L321374.  return v3 @kind object;
  #L321376.  v3:= `@@com.bumptech.glide.Priority.HIGH` @type ^`com.bumptech.glide.Priority` @kind object;
  #L32137a.  return v3 @kind object;
  #L32137c.  v3:= `@@com.bumptech.glide.Priority.NORMAL` @type ^`com.bumptech.glide.Priority` @kind object;
  #L321380.  return v3 @kind object;
}
procedure `void` `B0`(`com.bumptech.glide.i` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/bumptech/glide/i;.B0:(Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L321bf0.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L321bf6.  v2:= temp @kind object;
  #L321bf8.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L321bfe.  v0:= temp;
  #L321c00.  if v0 == 0 then goto L321c18;
  #L321c04.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L321c0a.  v0:= temp @kind object;
  #L321c0c.  v0:= (`com.bumptech.glide.request.h`) v0 @kind object;
  #L321c10.  call temp:= `u0`(v1, v0) @signature `Lcom/bumptech/glide/i;.u0:(Lcom/bumptech/glide/request/h;)Lcom/bumptech/glide/i;` @kind virtual;
  #L321c16.  goto L321bf8;
  #L321c18.  return @kind void;
}
procedure `com.bumptech.glide.request.m.i` `D0`(`com.bumptech.glide.i` v1 @kind this, `com.bumptech.glide.request.m.i` v2 @kind object, `com.bumptech.glide.request.h` v3 @kind object, `com.bumptech.glide.request.a` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object) @signature `Lcom/bumptech/glide/i;.D0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/m/i;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L321978.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L32197e.  v0:= v1.`com.bumptech.glide.i.O` @type ^`boolean` @kind boolean;
  #L321982.  if v0 == 0 then goto L3219f0;
  #L321986.  call temp:= `w0`(v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/i;.w0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/d;` @kind direct;
  #L32198c.  v3:= temp @kind object;
  #L32198e.  call temp:= `l`(v2) @signature `Lcom/bumptech/glide/request/m/i;.l:()Lcom/bumptech/glide/request/d;` @kind interface;
  #L321994.  v5:= temp @kind object;
  #L321996.  call temp:= `d`(v3, v5) @signature `Lcom/bumptech/glide/request/d;.d:(Lcom/bumptech/glide/request/d;)Z` @kind interface;
  #L32199c.  v0:= temp;
  #L32199e.  if v0 == 0 then goto L3219d4;
  #L3219a2.  call temp:= `G0`(v1, v4, v5) @signature `Lcom/bumptech/glide/i;.G0:(Lcom/bumptech/glide/request/a;Lcom/bumptech/glide/request/d;)Z` @kind direct;
  #L3219a8.  v4:= temp;
  #L3219aa.  if v4 != 0 then goto L3219d4;
  #L3219ae.  call `c`(v3) @signature `Lcom/bumptech/glide/request/d;.c:()V` @kind interface;
  #L3219b4.  call temp:= `d`(v5) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3219ba.  v3:= temp @kind object;
  #L3219bc.  v3:= (`com.bumptech.glide.request.d`) v3 @kind object;
  #L3219c0.  call temp:= `isRunning`(v3) @signature `Lcom/bumptech/glide/request/d;.isRunning:()Z` @kind interface;
  #L3219c6.  v3:= temp;
  #L3219c8.  if v3 != 0 then goto L3219d2;
  #L3219cc.  call `j`(v5) @signature `Lcom/bumptech/glide/request/d;.j:()V` @kind interface;
  #L3219d2.  return v2 @kind object;
  #L3219d4.  v4:= v1.`com.bumptech.glide.i.D` @type ^`com.bumptech.glide.k` @kind object;
  #L3219d8.  call `o`(v4, v2) @signature `Lcom/bumptech/glide/k;.o:(Lcom/bumptech/glide/request/m/i;)V` @kind virtual;
  #L3219de.  call `e`(v2, v3) @signature `Lcom/bumptech/glide/request/m/i;.e:(Lcom/bumptech/glide/request/d;)V` @kind interface;
  #L3219e4.  v4:= v1.`com.bumptech.glide.i.D` @type ^`com.bumptech.glide.k` @kind object;
  #L3219e8.  call `y`(v4, v2, v3) @signature `Lcom/bumptech/glide/k;.y:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/d;)V` @kind virtual;
  #L3219ee.  return v2 @kind object;
  #L3219f0.  v2:= new `java.lang.IllegalArgumentException`;
  #L3219f4.  v3:= "You must call #load() before calling #into()" @kind object;
  #L3219f8.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3219fe.  throw v2;
}
procedure `boolean` `G0`(`com.bumptech.glide.i` v0 @kind this, `com.bumptech.glide.request.a` v1 @kind object, `com.bumptech.glide.request.d` v2 @kind object) @signature `Lcom/bumptech/glide/i;.G0:(Lcom/bumptech/glide/request/a;Lcom/bumptech/glide/request/d;)Z` @AccessFlag PRIVATE {
    temp;

  #L3212e0.  call temp:= `M`(v1) @signature `Lcom/bumptech/glide/request/a;.M:()Z` @kind virtual;
  #L3212e6.  v1:= temp;
  #L3212e8.  if v1 != 0 then goto L3212fc;
  #L3212ec.  call temp:= `l`(v2) @signature `Lcom/bumptech/glide/request/d;.l:()Z` @kind interface;
  #L3212f2.  v1:= temp;
  #L3212f4.  if v1 == 0 then goto L3212fc;
  #L3212f8.  v1:= 1I;
  #L3212fa.  goto L3212fe;
  #L3212fc.  v1:= 0I;
  #L3212fe.  return v1;
}
procedure `com.bumptech.glide.i` `M0`(`com.bumptech.glide.i` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/i;.M0:(Ljava/lang/Object;)Lcom/bumptech/glide/i;` @AccessFlag PRIVATE {
    temp;

  #L3214cc.  v0.`com.bumptech.glide.i.I` @type ^`java.lang.Object` := v1 @kind object;
  #L3214d0.  v1:= 1I;
  #L3214d2.  v0.`com.bumptech.glide.i.O` @type ^`boolean` := v1 @kind boolean;
  #L3214d6.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.d` `N0`(`com.bumptech.glide.i` v16 @kind this, `com.bumptech.glide.request.m.i` v17 @kind object, `com.bumptech.glide.request.h` v18 @kind object, `com.bumptech.glide.request.a` v19 @kind object, `com.bumptech.glide.request.e` v20 @kind object, `com.bumptech.glide.l` v21 @kind object, `com.bumptech.glide.Priority` v22 @kind object, `int` v23 , `int` v24 , `java.util.concurrent.Executor` v25 @kind object) @signature `Lcom/bumptech/glide/i;.N0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/a;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/l;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3218f0.  v0:= v16 @kind object;
  #L3218f4.  v1:= v0.`com.bumptech.glide.i.C` @type ^`android.content.Context` @kind object;
  #L3218f8.  v2:= v0.`com.bumptech.glide.i.G` @type ^`com.bumptech.glide.g` @kind object;
  #L3218fc.  v3:= v0.`com.bumptech.glide.i.I` @type ^`java.lang.Object` @kind object;
  #L321900.  v4:= v0.`com.bumptech.glide.i.E` @type ^`java.lang.Class` @kind object;
  #L321904.  v11:= v0.`com.bumptech.glide.i.J` @type ^`java.util.List` @kind object;
  #L321908.  call temp:= `f`(v2) @signature `Lcom/bumptech/glide/g;.f:()Lcom/bumptech/glide/load/engine/f0;` @kind virtual;
  #L32190e.  v13:= temp @kind object;
  #L321910.  call temp:= `b`(v21) @signature `Lcom/bumptech/glide/l;.b:()Lcom/bumptech/glide/request/n/h;` @kind virtual;
  #L321916.  v14:= temp @kind object;
  #L321918.  v5:= v19 @kind object;
  #L32191c.  v6:= v23;
  #L321920.  v7:= v24;
  #L321924.  v8:= v22 @kind object;
  #L321928.  v9:= v17 @kind object;
  #L32192c.  v10:= v18 @kind object;
  #L321930.  v12:= v20 @kind object;
  #L321934.  v15:= v25 @kind object;
  #L321938.  call temp:= `B`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lcom/bumptech/glide/request/SingleRequest;.B:(Landroid/content/Context;Lcom/bumptech/glide/g;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/request/a;IILcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Ljava/util/List;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/load/engine/f0;Lcom/bumptech/glide/request/n/h;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/SingleRequest;` @kind static;
  #L32193e.  v1:= temp @kind object;
  #L321940.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.d` `w0`(`com.bumptech.glide.i` v10 @kind this, `com.bumptech.glide.request.m.i` v11 @kind object, `com.bumptech.glide.request.h` v12 @kind object, `com.bumptech.glide.request.a` v13 @kind object, `java.util.concurrent.Executor` v14 @kind object) @signature `Lcom/bumptech/glide/i;.w0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3215dc.  v4:= v10.`com.bumptech.glide.i.H` @type ^`com.bumptech.glide.l` @kind object;
  #L3215e0.  call temp:= `E`(v13) @signature `Lcom/bumptech/glide/request/a;.E:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L3215e6.  v5:= temp @kind object;
  #L3215e8.  call temp:= `A`(v13) @signature `Lcom/bumptech/glide/request/a;.A:()I` @kind virtual;
  #L3215ee.  v6:= temp;
  #L3215f0.  call temp:= `z`(v13) @signature `Lcom/bumptech/glide/request/a;.z:()I` @kind virtual;
  #L3215f6.  v7:= temp;
  #L3215f8.  v3:= 0I;
  #L3215fa.  v0:= v10 @kind object;
  #L3215fc.  v1:= v11 @kind object;
  #L3215fe.  v2:= v12 @kind object;
  #L321600.  v8:= v13 @kind object;
  #L321602.  v9:= v14 @kind object;
  #L321604.  call temp:= `x0`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/bumptech/glide/i;.x0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/l;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/d;` @kind direct;
  #L32160a.  v11:= temp @kind object;
  #L32160c.  return v11 @kind object;
}
procedure `com.bumptech.glide.request.d` `x0`(`com.bumptech.glide.i` v21 @kind this, `com.bumptech.glide.request.m.i` v22 @kind object, `com.bumptech.glide.request.h` v23 @kind object, `com.bumptech.glide.request.e` v24 @kind object, `com.bumptech.glide.l` v25 @kind object, `com.bumptech.glide.Priority` v26 @kind object, `int` v27 , `int` v28 , `com.bumptech.glide.request.a` v29 @kind object, `java.util.concurrent.Executor` v30 @kind object) @signature `Lcom/bumptech/glide/i;.x0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/l;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L321620.  v10:= v21 @kind object;
  #L321624.  v0:= v10.`com.bumptech.glide.i.L` @type ^`com.bumptech.glide.i` @kind object;
  #L321628.  if v0 == 0 then goto L321640;
  #L32162c.  v0:= new `com.bumptech.glide.request.b`;
  #L321630.  v1:= v24 @kind object;
  #L321634.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/request/b;.<init>:(Lcom/bumptech/glide/request/e;)V` @kind direct;
  #L32163a.  v3:= v0 @kind object;
  #L32163c.  v15:= v3 @kind object;
  #L32163e.  goto L32164a;
  #L321640.  v1:= v24 @kind object;
  #L321644.  v0:= 0I;
  #L321646.  v15:= v0 @kind object;
  #L321648.  v3:= v1 @kind object;
  #L32164a.  v0:= v21 @kind object;
  #L32164e.  v1:= v22 @kind object;
  #L321652.  v2:= v23 @kind object;
  #L321656.  v4:= v25 @kind object;
  #L32165a.  v5:= v26 @kind object;
  #L32165e.  v6:= v27;
  #L321662.  v7:= v28;
  #L321666.  v8:= v29 @kind object;
  #L32166a.  v9:= v30 @kind object;
  #L32166e.  call temp:= `y0`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/bumptech/glide/i;.y0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/l;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/d;` @kind direct;
  #L321674.  v0:= temp @kind object;
  #L321676.  if v15 != 0 then goto L32167c;
  #L32167a.  return v0 @kind object;
  #L32167c.  v1:= v10.`com.bumptech.glide.i.L` @type ^`com.bumptech.glide.i` @kind object;
  #L321680.  call temp:= `A`(v1) @signature `Lcom/bumptech/glide/request/a;.A:()I` @kind virtual;
  #L321686.  v1:= temp;
  #L321688.  v2:= v10.`com.bumptech.glide.i.L` @type ^`com.bumptech.glide.i` @kind object;
  #L32168c.  call temp:= `z`(v2) @signature `Lcom/bumptech/glide/request/a;.z:()I` @kind virtual;
  #L321692.  v2:= temp;
  #L321694.  call temp:= `t`(v27, v28) @signature `Lcom/bumptech/glide/s/p;.t:(II)Z` @kind static;
  #L32169a.  v3:= temp;
  #L32169c.  if v3 == 0 then goto L3216c0;
  #L3216a0.  v3:= v10.`com.bumptech.glide.i.L` @type ^`com.bumptech.glide.i` @kind object;
  #L3216a4.  call temp:= `U`(v3) @signature `Lcom/bumptech/glide/request/a;.U:()Z` @kind virtual;
  #L3216aa.  v3:= temp;
  #L3216ac.  if v3 != 0 then goto L3216c0;
  #L3216b0.  call temp:= `A`(v29) @signature `Lcom/bumptech/glide/request/a;.A:()I` @kind virtual;
  #L3216b6.  v1:= temp;
  #L3216b8.  call temp:= `z`(v29) @signature `Lcom/bumptech/glide/request/a;.z:()I` @kind virtual;
  #L3216be.  v2:= temp;
  #L3216c0.  v17:= v1;
  #L3216c4.  v18:= v2;
  #L3216c8.  v11:= v10.`com.bumptech.glide.i.L` @type ^`com.bumptech.glide.i` @kind object;
  #L3216cc.  v1:= v11.`com.bumptech.glide.i.H` @type ^`com.bumptech.glide.l` @kind object;
  #L3216d0.  call temp:= `E`(v11) @signature `Lcom/bumptech/glide/request/a;.E:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L3216d6.  v16:= temp @kind object;
  #L3216d8.  v2:= v10.`com.bumptech.glide.i.L` @type ^`com.bumptech.glide.i` @kind object;
  #L3216dc.  v12:= v22 @kind object;
  #L3216e0.  v13:= v23 @kind object;
  #L3216e4.  v14:= v15 @kind object;
  #L3216e6.  v3:= v15 @kind object;
  #L3216e8.  v15:= v1 @kind object;
  #L3216ea.  v19:= v2 @kind object;
  #L3216ee.  v20:= v30 @kind object;
  #L3216f2.  call temp:= `x0`(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20) @signature `Lcom/bumptech/glide/i;.x0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/l;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/d;` @kind direct;
  #L3216f8.  v1:= temp @kind object;
  #L3216fa.  call `s`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/b;.s:(Lcom/bumptech/glide/request/d;Lcom/bumptech/glide/request/d;)V` @kind virtual;
  #L321700.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.d` `y0`(`com.bumptech.glide.i` v21 @kind this, `com.bumptech.glide.request.m.i` v22 @kind object, `com.bumptech.glide.request.h` v23 @kind object, `com.bumptech.glide.request.e` v24 @kind object, `com.bumptech.glide.l` v25 @kind object, `com.bumptech.glide.Priority` v26 @kind object, `int` v27 , `int` v28 , `com.bumptech.glide.request.a` v29 @kind object, `java.util.concurrent.Executor` v30 @kind object) @signature `Lcom/bumptech/glide/i;.y0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/l;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L321714.  v10:= v21 @kind object;
  #L321718.  v4:= v24 @kind object;
  #L32171c.  v11:= v26 @kind object;
  #L321720.  v0:= v10.`com.bumptech.glide.i.K` @type ^`com.bumptech.glide.i` @kind object;
  #L321724.  if v0 == 0 then goto L321832;
  #L321728.  v1:= v10.`com.bumptech.glide.i.P` @type ^`boolean` @kind boolean;
  #L32172c.  if v1 != 0 then goto L321822;
  #L321730.  v1:= v0.`com.bumptech.glide.i.H` @type ^`com.bumptech.glide.l` @kind object;
  #L321734.  v2:= v0.`com.bumptech.glide.i.N` @type ^`boolean` @kind boolean;
  #L321738.  if v2 == 0 then goto L321742;
  #L32173c.  v15:= v25 @kind object;
  #L321740.  goto L321744;
  #L321742.  v15:= v1 @kind object;
  #L321744.  call temp:= `N`(v0) @signature `Lcom/bumptech/glide/request/a;.N:()Z` @kind virtual;
  #L32174a.  v0:= temp;
  #L32174c.  if v0 == 0 then goto L32175e;
  #L321750.  v0:= v10.`com.bumptech.glide.i.K` @type ^`com.bumptech.glide.i` @kind object;
  #L321754.  call temp:= `E`(v0) @signature `Lcom/bumptech/glide/request/a;.E:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L32175a.  v0:= temp @kind object;
  #L32175c.  goto L321766;
  #L32175e.  call temp:= `A0`(v10, v11) @signature `Lcom/bumptech/glide/i;.A0:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/Priority;` @kind direct;
  #L321764.  v0:= temp @kind object;
  #L321766.  v16:= v0 @kind object;
  #L32176a.  v0:= v10.`com.bumptech.glide.i.K` @type ^`com.bumptech.glide.i` @kind object;
  #L32176e.  call temp:= `A`(v0) @signature `Lcom/bumptech/glide/request/a;.A:()I` @kind virtual;
  #L321774.  v0:= temp;
  #L321776.  v1:= v10.`com.bumptech.glide.i.K` @type ^`com.bumptech.glide.i` @kind object;
  #L32177a.  call temp:= `z`(v1) @signature `Lcom/bumptech/glide/request/a;.z:()I` @kind virtual;
  #L321780.  v1:= temp;
  #L321782.  call temp:= `t`(v27, v28) @signature `Lcom/bumptech/glide/s/p;.t:(II)Z` @kind static;
  #L321788.  v2:= temp;
  #L32178a.  if v2 == 0 then goto L3217ae;
  #L32178e.  v2:= v10.`com.bumptech.glide.i.K` @type ^`com.bumptech.glide.i` @kind object;
  #L321792.  call temp:= `U`(v2) @signature `Lcom/bumptech/glide/request/a;.U:()Z` @kind virtual;
  #L321798.  v2:= temp;
  #L32179a.  if v2 != 0 then goto L3217ae;
  #L32179e.  call temp:= `A`(v29) @signature `Lcom/bumptech/glide/request/a;.A:()I` @kind virtual;
  #L3217a4.  v0:= temp;
  #L3217a6.  call temp:= `z`(v29) @signature `Lcom/bumptech/glide/request/a;.z:()I` @kind virtual;
  #L3217ac.  v1:= temp;
  #L3217ae.  v17:= v0;
  #L3217b2.  v18:= v1;
  #L3217b6.  v14:= new `com.bumptech.glide.request.l`;
  #L3217ba.  call `<init>`(v14, v4) @signature `Lcom/bumptech/glide/request/l;.<init>:(Lcom/bumptech/glide/request/e;)V` @kind direct;
  #L3217c0.  v0:= v21 @kind object;
  #L3217c4.  v1:= v22 @kind object;
  #L3217c8.  v2:= v23 @kind object;
  #L3217cc.  v3:= v29 @kind object;
  #L3217d0.  v4:= v14 @kind object;
  #L3217d2.  v5:= v25 @kind object;
  #L3217d6.  v6:= v26 @kind object;
  #L3217da.  v7:= v27;
  #L3217de.  v8:= v28;
  #L3217e2.  v9:= v30 @kind object;
  #L3217e6.  call temp:= `N0`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/bumptech/glide/i;.N0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/a;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/l;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/d;` @kind direct;
  #L3217ec.  v0:= temp @kind object;
  #L3217ee.  v1:= 1I;
  #L3217f0.  v10.`com.bumptech.glide.i.P` @type ^`boolean` := v1 @kind boolean;
  #L3217f4.  v1:= v10.`com.bumptech.glide.i.K` @type ^`com.bumptech.glide.i` @kind object;
  #L3217f8.  v11:= v1 @kind object;
  #L3217fa.  v12:= v22 @kind object;
  #L3217fe.  v13:= v23 @kind object;
  #L321802.  v2:= v14 @kind object;
  #L321804.  v19:= v1 @kind object;
  #L321808.  v20:= v30 @kind object;
  #L32180c.  call temp:= `x0`(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20) @signature `Lcom/bumptech/glide/i;.x0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/l;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/d;` @kind direct;
  #L321812.  v1:= temp @kind object;
  #L321814.  v3:= 0I;
  #L321816.  v10.`com.bumptech.glide.i.P` @type ^`boolean` := v3 @kind boolean;
  #L32181a.  call `r`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/l;.r:(Lcom/bumptech/glide/request/d;Lcom/bumptech/glide/request/d;)V` @kind virtual;
  #L321820.  return v2 @kind object;
  #L321822.  v0:= new `java.lang.IllegalStateException`;
  #L321826.  v1:= "You cannot use a request as both the main request and a thumbnail, consider using clone() on the request(s) passed to thumbnail()" @kind object;
  #L32182a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L321830.  throw v0;
  #L321832.  v0:= v10.`com.bumptech.glide.i.M` @type ^`java.lang.Float` @kind object;
  #L321836.  if v0 == 0 then goto L3218ae;
  #L32183a.  v12:= new `com.bumptech.glide.request.l`;
  #L32183e.  call `<init>`(v12, v4) @signature `Lcom/bumptech/glide/request/l;.<init>:(Lcom/bumptech/glide/request/e;)V` @kind direct;
  #L321844.  v0:= v21 @kind object;
  #L321848.  v1:= v22 @kind object;
  #L32184c.  v2:= v23 @kind object;
  #L321850.  v3:= v29 @kind object;
  #L321854.  v4:= v12 @kind object;
  #L321856.  v5:= v25 @kind object;
  #L32185a.  v6:= v26 @kind object;
  #L32185e.  v7:= v27;
  #L321862.  v8:= v28;
  #L321866.  v9:= v30 @kind object;
  #L32186a.  call temp:= `N0`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/bumptech/glide/i;.N0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/a;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/l;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/d;` @kind direct;
  #L321870.  v13:= temp @kind object;
  #L321872.  call temp:= `f`(v29) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321878.  v0:= temp @kind object;
  #L32187a.  v1:= v10.`com.bumptech.glide.i.M` @type ^`java.lang.Float` @kind object;
  #L32187e.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L321884.  v1:= temp;
  #L321886.  call temp:= `k0`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.k0:(F)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L32188c.  v3:= temp @kind object;
  #L32188e.  call temp:= `A0`(v10, v11) @signature `Lcom/bumptech/glide/i;.A0:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/Priority;` @kind direct;
  #L321894.  v6:= temp @kind object;
  #L321896.  v0:= v21 @kind object;
  #L32189a.  v1:= v22 @kind object;
  #L32189e.  call temp:= `N0`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/bumptech/glide/i;.N0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/a;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/l;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/d;` @kind direct;
  #L3218a4.  v0:= temp @kind object;
  #L3218a6.  call `r`(v12, v13, v0) @signature `Lcom/bumptech/glide/request/l;.r:(Lcom/bumptech/glide/request/d;Lcom/bumptech/glide/request/d;)V` @kind virtual;
  #L3218ac.  return v12 @kind object;
  #L3218ae.  v0:= v21 @kind object;
  #L3218b2.  v1:= v22 @kind object;
  #L3218b6.  v2:= v23 @kind object;
  #L3218ba.  v3:= v29 @kind object;
  #L3218be.  v4:= v24 @kind object;
  #L3218c2.  v5:= v25 @kind object;
  #L3218c6.  v6:= v26 @kind object;
  #L3218ca.  v7:= v27;
  #L3218ce.  v8:= v28;
  #L3218d2.  v9:= v30 @kind object;
  #L3218d6.  call temp:= `N0`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/bumptech/glide/i;.N0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/a;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/l;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/d;` @kind direct;
  #L3218dc.  v0:= temp @kind object;
  #L3218de.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.m.i` `C0`(`com.bumptech.glide.i` v2 @kind this, `com.bumptech.glide.request.m.i` v3 @kind object) @signature `Lcom/bumptech/glide/i;.C0:(Lcom/bumptech/glide/request/m/i;)Lcom/bumptech/glide/request/m/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L321954.  call temp:= `b`() @signature `Lcom/bumptech/glide/s/i;.b:()Ljava/util/concurrent/Executor;` @kind static;
  #L32195a.  v0:= temp @kind object;
  #L32195c.  v1:= 0I;
  #L32195e.  call temp:= `E0`(v2, v3, v1, v0) @signature `Lcom/bumptech/glide/i;.E0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/m/i;` @kind virtual;
  #L321964.  v3:= temp @kind object;
  #L321966.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.m.i` `E0`(`com.bumptech.glide.i` v0 @kind this, `com.bumptech.glide.request.m.i` v1 @kind object, `com.bumptech.glide.request.h` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/bumptech/glide/i;.E0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/m/i;` @AccessFlag  {
    temp;

  #L321a10.  call temp:= `D0`(v0, v1, v2, v0, v3) @signature `Lcom/bumptech/glide/i;.D0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/m/i;` @kind direct;
  #L321a16.  v1:= temp @kind object;
  #L321a18.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.m.l` `F0`(`com.bumptech.glide.i` v3 @kind this, `android.widget.ImageView` v4 @kind object) @signature `Lcom/bumptech/glide/i;.F0:(Landroid/widget/ImageView;)Lcom/bumptech/glide/request/m/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L321a2c.  call `b`() @signature `Lcom/bumptech/glide/s/p;.b:()V` @kind static;
  #L321a32.  call temp:= `d`(v4) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L321a38.  call temp:= `T`(v3) @signature `Lcom/bumptech/glide/request/a;.T:()Z` @kind virtual;
  #L321a3e.  v0:= temp;
  #L321a40.  if v0 != 0 then goto L321ac4;
  #L321a44.  call temp:= `R`(v3) @signature `Lcom/bumptech/glide/request/a;.R:()Z` @kind virtual;
  #L321a4a.  v0:= temp;
  #L321a4c.  if v0 == 0 then goto L321ac4;
  #L321a50.  call temp:= `getScaleType`(v4) @signature `Landroid/widget/ImageView;.getScaleType:()Landroid/widget/ImageView$ScaleType;` @kind virtual;
  #L321a56.  v0:= temp @kind object;
  #L321a58.  if v0 == 0 then goto L321ac4;
  #L321a5c.  v0:= `@@com.bumptech.glide.h.a` @type ^`int`[] @kind object;
  #L321a60.  call temp:= `getScaleType`(v4) @signature `Landroid/widget/ImageView;.getScaleType:()Landroid/widget/ImageView$ScaleType;` @kind virtual;
  #L321a66.  v1:= temp @kind object;
  #L321a68.  call temp:= `ordinal`(v1) @signature `Landroid/widget/ImageView$ScaleType;.ordinal:()I` @kind virtual;
  #L321a6e.  v1:= temp;
  #L321a70.  v0:= v0[v1];
  #L321a74.  goto L321af0;
  #L321a7a.  goto L321ac4;
  #L321a7c.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321a82.  v0:= temp @kind object;
  #L321a84.  call temp:= `X`(v0) @signature `Lcom/bumptech/glide/request/a;.X:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321a8a.  v0:= temp @kind object;
  #L321a8c.  goto L321ac6;
  #L321a8e.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321a94.  v0:= temp @kind object;
  #L321a96.  call temp:= `Y`(v0) @signature `Lcom/bumptech/glide/request/a;.Y:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321a9c.  v0:= temp @kind object;
  #L321a9e.  goto L321ac6;
  #L321aa0.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321aa6.  v0:= temp @kind object;
  #L321aa8.  call temp:= `X`(v0) @signature `Lcom/bumptech/glide/request/a;.X:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321aae.  v0:= temp @kind object;
  #L321ab0.  goto L321ac6;
  #L321ab2.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321ab8.  v0:= temp @kind object;
  #L321aba.  call temp:= `W`(v0) @signature `Lcom/bumptech/glide/request/a;.W:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321ac0.  v0:= temp @kind object;
  #L321ac2.  goto L321ac6;
  #L321ac4.  v0:= v3 @kind object;
  #L321ac6.  v1:= v3.`com.bumptech.glide.i.G` @type ^`com.bumptech.glide.g` @kind object;
  #L321aca.  v2:= v3.`com.bumptech.glide.i.E` @type ^`java.lang.Class` @kind object;
  #L321ace.  call temp:= `a`(v1, v4, v2) @signature `Lcom/bumptech/glide/g;.a:(Landroid/widget/ImageView;Ljava/lang/Class;)Lcom/bumptech/glide/request/m/l;` @kind virtual;
  #L321ad4.  v4:= temp @kind object;
  #L321ad6.  v1:= 0I;
  #L321ad8.  call temp:= `b`() @signature `Lcom/bumptech/glide/s/i;.b:()Ljava/util/concurrent/Executor;` @kind static;
  #L321ade.  v2:= temp @kind object;
  #L321ae0.  call temp:= `D0`(v3, v4, v1, v0, v2) @signature `Lcom/bumptech/glide/i;.D0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Lcom/bumptech/glide/request/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/m/i;` @kind direct;
  #L321ae6.  v4:= temp @kind object;
  #L321ae8.  v4:= (`com.bumptech.glide.request.m.l`) v4 @kind object;
  #L321aec.  return v4 @kind object;
  #L321aee.  
  #L321af0.  switch v0
                  | 1 => goto L321ab2
                  | 2 => goto L321aa0
                  | 3 => goto L321a8e
                  | 4 => goto L321a8e
                  | 5 => goto L321a8e
                  | 6 => goto L321a7c
                  | else => goto L321a7a;
}
procedure `com.bumptech.glide.i` `H0`(`com.bumptech.glide.i` v1 @kind this, `com.bumptech.glide.request.h` v2 @kind object) @signature `Lcom/bumptech/glide/i;.H0:(Lcom/bumptech/glide/request/h;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L321420.  v0:= 0I;
  #L321422.  v1.`com.bumptech.glide.i.J` @type ^`java.util.List` := v0 @kind object;
  #L321426.  call temp:= `u0`(v1, v2) @signature `Lcom/bumptech/glide/i;.u0:(Lcom/bumptech/glide/request/h;)Lcom/bumptech/glide/i;` @kind virtual;
  #L32142c.  v2:= temp @kind object;
  #L32142e.  return v2 @kind object;
}
procedure `com.bumptech.glide.i` `I0`(`com.bumptech.glide.i` v0 @kind this, `java.io.File` v1 @kind object) @signature `Lcom/bumptech/glide/i;.I0:(Ljava/io/File;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;

  #L321440.  call temp:= `M0`(v0, v1) @signature `Lcom/bumptech/glide/i;.M0:(Ljava/lang/Object;)Lcom/bumptech/glide/i;` @kind direct;
  #L321446.  v1:= temp @kind object;
  #L321448.  return v1 @kind object;
}
procedure `com.bumptech.glide.i` `J0`(`com.bumptech.glide.i` v1 @kind this, `java.lang.Integer` v2 @kind object) @signature `Lcom/bumptech/glide/i;.J0:(Ljava/lang/Integer;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32145c.  call temp:= `M0`(v1, v2) @signature `Lcom/bumptech/glide/i;.M0:(Ljava/lang/Object;)Lcom/bumptech/glide/i;` @kind direct;
  #L321462.  v2:= temp @kind object;
  #L321464.  v0:= v1.`com.bumptech.glide.i.C` @type ^`android.content.Context` @kind object;
  #L321468.  call temp:= `c`(v0) @signature `Lcom/bumptech/glide/r/a;.c:(Landroid/content/Context;)Lcom/bumptech/glide/load/c;` @kind static;
  #L32146e.  v0:= temp @kind object;
  #L321470.  call temp:= `x0`(v0) @signature `Lcom/bumptech/glide/request/i;.x0:(Lcom/bumptech/glide/load/c;)Lcom/bumptech/glide/request/i;` @kind static;
  #L321476.  v0:= temp @kind object;
  #L321478.  call temp:= `v0`(v2, v0) @signature `Lcom/bumptech/glide/i;.v0:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/i;` @kind virtual;
  #L32147e.  v2:= temp @kind object;
  #L321480.  return v2 @kind object;
}
procedure `com.bumptech.glide.i` `K0`(`com.bumptech.glide.i` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/i;.K0:(Ljava/lang/Object;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;

  #L321494.  call temp:= `M0`(v0, v1) @signature `Lcom/bumptech/glide/i;.M0:(Ljava/lang/Object;)Lcom/bumptech/glide/i;` @kind direct;
  #L32149a.  v1:= temp @kind object;
  #L32149c.  return v1 @kind object;
}
procedure `com.bumptech.glide.i` `L0`(`com.bumptech.glide.i` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/i;.L0:(Ljava/lang/String;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;

  #L3214b0.  call temp:= `M0`(v0, v1) @signature `Lcom/bumptech/glide/i;.M0:(Ljava/lang/Object;)Lcom/bumptech/glide/i;` @kind direct;
  #L3214b6.  v1:= temp @kind object;
  #L3214b8.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.c` `O0`(`com.bumptech.glide.i` v1 @kind this) @signature `Lcom/bumptech/glide/i;.O0:()Lcom/bumptech/glide/request/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32158c.  v0:= -2147483648I;
  #L321590.  call temp:= `P0`(v1, v0, v0) @signature `Lcom/bumptech/glide/i;.P0:(II)Lcom/bumptech/glide/request/c;` @kind virtual;
  #L321596.  v0:= temp @kind object;
  #L321598.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.c` `P0`(`com.bumptech.glide.i` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/i;.P0:(II)Lcom/bumptech/glide/request/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3215ac.  v0:= new `com.bumptech.glide.request.g`;
  #L3215b0.  call `<init>`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/g;.<init>:(II)V` @kind direct;
  #L3215b6.  call temp:= `a`() @signature `Lcom/bumptech/glide/s/i;.a:()Ljava/util/concurrent/Executor;` @kind static;
  #L3215bc.  v2:= temp @kind object;
  #L3215be.  call temp:= `E0`(v1, v0, v0, v2) @signature `Lcom/bumptech/glide/i;.E0:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/m/i;` @kind virtual;
  #L3215c4.  v2:= temp @kind object;
  #L3215c6.  v2:= (`com.bumptech.glide.request.c`) v2 @kind object;
  #L3215ca.  return v2 @kind object;
}
procedure `com.bumptech.glide.i` `Q0`(`com.bumptech.glide.i` v1 @kind this, `float` v2 ) @signature `Lcom/bumptech/glide/i;.Q0:(F)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3214e8.  v0:= 0I;
  #L3214ea.  v0:= fcmpg(v2, v0);
  #L3214ee.  if v0 < 0 then goto L32150c;
  #L3214f2.  v0:= 1.0F;
  #L3214f6.  v0:= fcmpl(v2, v0);
  #L3214fa.  if v0 > 0 then goto L32150c;
  #L3214fe.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L321504.  v2:= temp @kind object;
  #L321506.  v1.`com.bumptech.glide.i.M` @type ^`java.lang.Float` := v2 @kind object;
  #L32150a.  return v1 @kind object;
  #L32150c.  v2:= new `java.lang.IllegalArgumentException`;
  #L321510.  v0:= "sizeMultiplier must be between 0 and 1" @kind object;
  #L321514.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32151a.  throw v2;
}
procedure `com.bumptech.glide.i` `R0`(`com.bumptech.glide.i` v0 @kind this, `com.bumptech.glide.l` v1 @kind object) @signature `Lcom/bumptech/glide/i;.R0:(Lcom/bumptech/glide/l;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;

  #L32152c.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L321532.  v1:= temp @kind object;
  #L321534.  v1:= (`com.bumptech.glide.l`) v1 @kind object;
  #L321538.  v0.`com.bumptech.glide.i.H` @type ^`com.bumptech.glide.l` := v1 @kind object;
  #L32153c.  v1:= 0I;
  #L32153e.  v0.`com.bumptech.glide.i.N` @type ^`boolean` := v1 @kind boolean;
  #L321542.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `a`(`com.bumptech.glide.i` v0 @kind this, `com.bumptech.glide.request.a` v1 @kind object) @signature `Lcom/bumptech/glide/i;.a:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L321554.  call temp:= `v0`(v0, v1) @signature `Lcom/bumptech/glide/i;.v0:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/i;` @kind virtual;
  #L32155a.  v1:= temp @kind object;
  #L32155c.  return v1 @kind object;
}
procedure `java.lang.Object` `clone`(`com.bumptech.glide.i` v1 @kind this) @signature `Lcom/bumptech/glide/i;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L321b20.  call temp:= `z0`(v1) @signature `Lcom/bumptech/glide/i;.z0:()Lcom/bumptech/glide/i;` @kind virtual;
  #L321b26.  v0:= temp @kind object;
  #L321b28.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `f`(`com.bumptech.glide.i` v1 @kind this) @signature `Lcom/bumptech/glide/i;.f:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L321570.  call temp:= `z0`(v1) @signature `Lcom/bumptech/glide/i;.z0:()Lcom/bumptech/glide/i;` @kind virtual;
  #L321576.  v0:= temp @kind object;
  #L321578.  return v0 @kind object;
}
procedure `com.bumptech.glide.i` `u0`(`com.bumptech.glide.i` v1 @kind this, `com.bumptech.glide.request.h` v2 @kind object) @signature `Lcom/bumptech/glide/i;.u0:(Lcom/bumptech/glide/request/h;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L321394.  if v2 == 0 then goto L3213b8;
  #L321398.  v0:= v1.`com.bumptech.glide.i.J` @type ^`java.util.List` @kind object;
  #L32139c.  if v0 != 0 then goto L3213ae;
  #L3213a0.  v0:= new `java.util.ArrayList`;
  #L3213a4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3213aa.  v1.`com.bumptech.glide.i.J` @type ^`java.util.List` := v0 @kind object;
  #L3213ae.  v0:= v1.`com.bumptech.glide.i.J` @type ^`java.util.List` @kind object;
  #L3213b2.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3213b8.  return v1 @kind object;
}
procedure `com.bumptech.glide.i` `v0`(`com.bumptech.glide.i` v0 @kind this, `com.bumptech.glide.request.a` v1 @kind object) @signature `Lcom/bumptech/glide/i;.v0:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;

  #L3213cc.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3213d2.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.a:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/request/a;` @kind super;
  #L3213d8.  v1:= temp @kind object;
  #L3213da.  v1:= (`com.bumptech.glide.i`) v1 @kind object;
  #L3213de.  return v1 @kind object;
}
procedure `com.bumptech.glide.i` `z0`(`com.bumptech.glide.i` v2 @kind this) @signature `Lcom/bumptech/glide/i;.z0:()Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3213f0.  call temp:= `f`(v2) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind super;
  #L3213f6.  v0:= temp @kind object;
  #L3213f8.  v0:= (`com.bumptech.glide.i`) v0 @kind object;
  #L3213fc.  v1:= v0.`com.bumptech.glide.i.H` @type ^`com.bumptech.glide.l` @kind object;
  #L321400.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/l;.a:()Lcom/bumptech/glide/l;` @kind virtual;
  #L321406.  v1:= temp @kind object;
  #L321408.  v0.`com.bumptech.glide.i.H` @type ^`com.bumptech.glide.l` := v1 @kind object;
  #L32140c.  return v0 @kind object;
}
