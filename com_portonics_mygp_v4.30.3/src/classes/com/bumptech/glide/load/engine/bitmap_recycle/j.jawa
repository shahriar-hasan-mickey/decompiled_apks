record `com.bumptech.glide.load.engine.bitmap_recycle.j` @kind class @AccessFlag  {
  `java.lang.Object` `com.bumptech.glide.load.engine.bitmap_recycle.j.a` @AccessFlag FINAL;
  `java.util.List` `com.bumptech.glide.load.engine.bitmap_recycle.j.b` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.bitmap_recycle.j` `com.bumptech.glide.load.engine.bitmap_recycle.j.c` @AccessFlag ;
  `com.bumptech.glide.load.engine.bitmap_recycle.j` `com.bumptech.glide.load.engine.bitmap_recycle.j.d` @AccessFlag ;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.j` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/j;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L32d570.  v0:= 0I;
  #L32d572.  call `<init>`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/j;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L32d578.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.j` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/j;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32d58c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32d592.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.j.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` := v0 @kind object;
  #L32d596.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.j.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` := v0 @kind object;
  #L32d59a.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.j.a` @type ^`java.lang.Object` := v1 @kind object;
  #L32d59e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.j` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/j;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d5b0.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.j.b` @type ^`java.util.List` @kind object;
  #L32d5b4.  if v0 != 0 then goto L32d5c6;
  #L32d5b8.  v0:= new `java.util.ArrayList`;
  #L32d5bc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32d5c2.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.j.b` @type ^`java.util.List` := v0 @kind object;
  #L32d5c6.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.j.b` @type ^`java.util.List` @kind object;
  #L32d5ca.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32d5d0.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.j` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/j;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32d53c.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/j;.c:()I` @kind virtual;
  #L32d542.  v0:= temp;
  #L32d544.  if v0 <= 0 then goto L32d55a;
  #L32d548.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.j.b` @type ^`java.util.List` @kind object;
  #L32d54c.  v0:= v0 + -1;
  #L32d550.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L32d556.  v0:= temp @kind object;
  #L32d558.  goto L32d55c;
  #L32d55a.  v0:= 0I;
  #L32d55c.  return v0 @kind object;
}
procedure `int` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.j` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/j;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d514.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.j.b` @type ^`java.util.List` @kind object;
  #L32d518.  if v0 == 0 then goto L32d526;
  #L32d51c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32d522.  v0:= temp;
  #L32d524.  goto L32d528;
  #L32d526.  v0:= 0I;
  #L32d528.  return v0;
}
