record `com.bumptech.glide.load.engine.s` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `com.bumptech.glide.load.engine.s.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.engine.s.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.n.g.e` `com.bumptech.glide.load.engine.s.c` @AccessFlag PRIVATE_FINAL;
  `androidx.core.util.e` `com.bumptech.glide.load.engine.s.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.engine.s.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.s` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `java.util.List` v4 @kind object, `com.bumptech.glide.load.n.g.e` v5 @kind object, `androidx.core.util.e` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/s;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Lcom/bumptech/glide/load/n/g/e;Landroidx/core/util/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L329c60.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L329c66.  v0.`com.bumptech.glide.load.engine.s.a` @type ^`java.lang.Class` := v1 @kind object;
  #L329c6a.  v0.`com.bumptech.glide.load.engine.s.b` @type ^`java.util.List` := v4 @kind object;
  #L329c6e.  v0.`com.bumptech.glide.load.engine.s.c` @type ^`com.bumptech.glide.load.n.g.e` := v5 @kind object;
  #L329c72.  v0.`com.bumptech.glide.load.engine.s.d` @type ^`androidx.core.util.e` := v6 @kind object;
  #L329c76.  v4:= new `java.lang.StringBuilder`;
  #L329c7a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L329c80.  v5:= "Failed DecodePath{" @kind object;
  #L329c84.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329c8a.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L329c90.  v1:= temp @kind object;
  #L329c92.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329c98.  v1:= "->" @kind object;
  #L329c9c.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329ca2.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L329ca8.  v2:= temp @kind object;
  #L329caa.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329cb0.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329cb6.  call temp:= `getSimpleName`(v3) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L329cbc.  v1:= temp @kind object;
  #L329cbe.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329cc4.  v1:= "}" @kind object;
  #L329cc8.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329cce.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L329cd4.  v1:= temp @kind object;
  #L329cd6.  v0.`com.bumptech.glide.load.engine.s.e` @type ^`java.lang.String` := v1 @kind object;
  #L329cda.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.u0` `b`(`com.bumptech.glide.load.engine.s` v7 @kind this, `com.bumptech.glide.load.l.g` v8 @kind object, `int` v9 , `int` v10 , `com.bumptech.glide.load.h` v11 @kind object) @signature `Lcom/bumptech/glide/load/engine/s;.b:(Lcom/bumptech/glide/load/l/g;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L329ab0.  v0:= v7.`com.bumptech.glide.load.engine.s.d` @type ^`androidx.core.util.e` @kind object;
  #L329ab4.  call temp:= `b`(v0) @signature `Landroidx/core/util/e;.b:()Ljava/lang/Object;` @kind interface;
  #L329aba.  v0:= temp @kind object;
  #L329abc.  call temp:= `d`(v0) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L329ac2.  v0:= temp @kind object;
  #L329ac4.  v0:= (`java.util.List`) v0 @kind object;
  #L329ac8.  v1:= v7 @kind object;
  #L329aca.  v2:= v8 @kind object;
  #L329acc.  v3:= v9;
  #L329ace.  v4:= v10;
  #L329ad0.  v5:= v11 @kind object;
  #L329ad2.  v6:= v0 @kind object;
  #L329ad4.  call temp:= `c`(v1, v2, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/engine/s;.c:(Lcom/bumptech/glide/load/l/g;IILcom/bumptech/glide/load/h;Ljava/util/List;)Lcom/bumptech/glide/load/engine/u0;` @kind direct;
  #L329ada.  v8:= temp @kind object;
  #L329adc.  v9:= v7.`com.bumptech.glide.load.engine.s.d` @type ^`androidx.core.util.e` @kind object;
  #L329ae0.  call temp:= `a`(v9, v0) @signature `Landroidx/core/util/e;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L329ae6.  return v8 @kind object;
  #L329ae8.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L329aea.  v9:= v7.`com.bumptech.glide.load.engine.s.d` @type ^`androidx.core.util.e` @kind object;
  #L329aee.  call temp:= `a`(v9, v0) @signature `Landroidx/core/util/e;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L329af4.  throw v8;
  catch `java.lang.Throwable` @[L329ad4..L329adc] goto L329ae8;
}
procedure `com.bumptech.glide.load.engine.u0` `c`(`com.bumptech.glide.load.engine.s` v7 @kind this, `com.bumptech.glide.load.l.g` v8 @kind object, `int` v9 , `int` v10 , `com.bumptech.glide.load.h` v11 @kind object, `java.util.List` v12 @kind object) @signature `Lcom/bumptech/glide/load/engine/s;.c:(Lcom/bumptech/glide/load/l/g;IILcom/bumptech/glide/load/h;Ljava/util/List;)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L329b14.  v0:= v7.`com.bumptech.glide.load.engine.s.b` @type ^`java.util.List` @kind object;
  #L329b18.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L329b1e.  v0:= temp;
  #L329b20.  v1:= 0I;
  #L329b22.  v2:= 0I;
  #L329b24.  if v2 >= v0 then goto L329bac;
  #L329b28.  v3:= v7.`com.bumptech.glide.load.engine.s.b` @type ^`java.util.List` @kind object;
  #L329b2c.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L329b32.  v3:= temp @kind object;
  #L329b34.  v3:= (`com.bumptech.glide.load.i`) v3 @kind object;
  #L329b38.  call temp:= `a`(v8) @signature `Lcom/bumptech/glide/load/l/g;.a:()Ljava/lang/Object;` @kind interface;
  #L329b3e.  v4:= temp @kind object;
  #L329b40.  call temp:= `a`(v3, v4, v11) @signature `Lcom/bumptech/glide/load/i;.a:(Ljava/lang/Object;Lcom/bumptech/glide/load/h;)Z` @kind interface;
  #L329b46.  v4:= temp;
  #L329b48.  if v4 == 0 then goto L329ba0;
  #L329b4c.  call temp:= `a`(v8) @signature `Lcom/bumptech/glide/load/l/g;.a:()Ljava/lang/Object;` @kind interface;
  #L329b52.  v4:= temp @kind object;
  #L329b54.  call temp:= `b`(v3, v4, v9, v10, v11) @signature `Lcom/bumptech/glide/load/i;.b:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @kind interface;
  #L329b5a.  v1:= temp @kind object;
  #L329b5c.  goto L329ba0;
  #L329b5e.  v4:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L329b60.  goto L329b68;
  #L329b62.  v4:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L329b64.  goto L329b68;
  #L329b66.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L329b68.  v5:= 2I;
  #L329b6a.  v6:= "DecodePath" @kind object;
  #L329b6e.  call temp:= `isLoggable`(v6, v5) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L329b74.  v5:= temp;
  #L329b76.  if v5 == 0 then goto L329b9a;
  #L329b7a.  v5:= new `java.lang.StringBuilder`;
  #L329b7e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L329b84.  v6:= "Failed to decode data for " @kind object;
  #L329b88.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329b8e.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329b94.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L329b9a.  call temp:= `add`(v12, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L329ba0.  if v1 == 0 then goto L329ba6;
  #L329ba4.  goto L329bac;
  #L329ba6.  v2:= v2 + 1;
  #L329baa.  goto L329b24;
  #L329bac.  if v1 == 0 then goto L329bb2;
  #L329bb0.  return v1 @kind object;
  #L329bb2.  v8:= new `com.bumptech.glide.load.engine.GlideException`;
  #L329bb6.  v9:= v7.`com.bumptech.glide.load.engine.s.e` @type ^`java.lang.String` @kind object;
  #L329bba.  v10:= new `java.util.ArrayList`;
  #L329bbe.  call `<init>`(v10, v12) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L329bc4.  call `<init>`(v8, v9, v10) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L329bca.  goto L329bce;
  #L329bcc.  throw v8;
  #L329bce.  goto L329bcc;
  catch `java.io.IOException` @[L329b38..L329b5c] goto L329b66;
  catch `java.lang.RuntimeException` @[L329b38..L329b5c] goto L329b62;
  catch `java.lang.OutOfMemoryError` @[L329b38..L329b5c] goto L329b5e;
}
procedure `com.bumptech.glide.load.engine.u0` `a`(`com.bumptech.glide.load.engine.s` v0 @kind this, `com.bumptech.glide.load.l.g` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object, `com.bumptech.glide.load.engine.r` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/s;.a:(Lcom/bumptech/glide/load/l/g;IILcom/bumptech/glide/load/h;Lcom/bumptech/glide/load/engine/r;)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PUBLIC {
    temp;

  #L329a80.  call temp:= `b`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/s;.b:(Lcom/bumptech/glide/load/l/g;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @kind direct;
  #L329a86.  v1:= temp @kind object;
  #L329a88.  call temp:= `a`(v5, v1) @signature `Lcom/bumptech/glide/load/engine/r;.a:(Lcom/bumptech/glide/load/engine/u0;)Lcom/bumptech/glide/load/engine/u0;` @kind interface;
  #L329a8e.  v1:= temp @kind object;
  #L329a90.  v2:= v0.`com.bumptech.glide.load.engine.s.c` @type ^`com.bumptech.glide.load.n.g.e` @kind object;
  #L329a94.  call temp:= `a`(v2, v1, v4) @signature `Lcom/bumptech/glide/load/n/g/e;.a:(Lcom/bumptech/glide/load/engine/u0;Lcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @kind interface;
  #L329a9a.  v1:= temp @kind object;
  #L329a9c.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.s` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/s;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L329bf4.  v0:= new `java.lang.StringBuilder`;
  #L329bf8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L329bfe.  v1:= "DecodePath{ dataClass=" @kind object;
  #L329c02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329c08.  v1:= v2.`com.bumptech.glide.load.engine.s.a` @type ^`java.lang.Class` @kind object;
  #L329c0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329c12.  v1:= ", decoders=" @kind object;
  #L329c16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329c1c.  v1:= v2.`com.bumptech.glide.load.engine.s.b` @type ^`java.util.List` @kind object;
  #L329c20.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329c26.  v1:= ", transcoder=" @kind object;
  #L329c2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329c30.  v1:= v2.`com.bumptech.glide.load.engine.s.c` @type ^`com.bumptech.glide.load.n.g.e` @kind object;
  #L329c34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329c3a.  v1:= 125I;
  #L329c3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L329c44.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L329c4a.  v0:= temp @kind object;
  #L329c4c.  return v0 @kind object;
}
