record `com.bumptech.glide.load.engine.bitmap_recycle.x` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.bitmap_recycle.s` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.w` `com.bumptech.glide.load.engine.bitmap_recycle.x.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.k` `com.bumptech.glide.load.engine.bitmap_recycle.x.g` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.bitmap_recycle.x.h` @AccessFlag PRIVATE_FINAL;
}
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.bitmap_recycle.x.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.bitmap_recycle.x.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.bitmap_recycle.x.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.bitmap_recycle.x.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.bitmap_recycle.x.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32ef30.  v0:= 2I;
  #L32ef32.  v0:= new `android.graphics.Bitmap$Config`[v0];
  #L32ef36.  v1:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32ef3a.  v2:= 0I;
  #L32ef3c.  v0[v2]:= v1 @kind object;
  #L32ef40.  v1:= 0I;
  #L32ef42.  v3:= 1I;
  #L32ef44.  v0[v3]:= v1 @kind object;
  #L32ef48.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L32ef4c.  v4:= 26I;
  #L32ef50.  if v1 < v4 then goto L32ef6e;
  #L32ef54.  v1:= 3I;
  #L32ef56.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L32ef5c.  v0:= temp @kind object;
  #L32ef5e.  v0:= (`android.graphics.Bitmap$Config`[]) v0 @kind object;
  #L32ef62.  v1:= length @variable v0;
  #L32ef64.  v1:= v1 - v3 @kind int;
  #L32ef66.  v4:= `@@android.graphics.Bitmap$Config.RGBA_F16` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32ef6a.  v0[v1]:= v4 @kind object;
  #L32ef6e.  `@@com.bumptech.glide.load.engine.bitmap_recycle.x.a` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L32ef72.  `@@com.bumptech.glide.load.engine.bitmap_recycle.x.b` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L32ef76.  v0:= new `android.graphics.Bitmap$Config`[v3];
  #L32ef7a.  v1:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32ef7e.  v0[v2]:= v1 @kind object;
  #L32ef82.  `@@com.bumptech.glide.load.engine.bitmap_recycle.x.c` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L32ef86.  v0:= new `android.graphics.Bitmap$Config`[v3];
  #L32ef8a.  v1:= `@@android.graphics.Bitmap$Config.ARGB_4444` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32ef8e.  v0[v2]:= v1 @kind object;
  #L32ef92.  `@@com.bumptech.glide.load.engine.bitmap_recycle.x.d` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L32ef96.  v0:= new `android.graphics.Bitmap$Config`[v3];
  #L32ef9a.  v1:= `@@android.graphics.Bitmap$Config.ALPHA_8` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32ef9e.  v0[v2]:= v1 @kind object;
  #L32efa2.  `@@com.bumptech.glide.load.engine.bitmap_recycle.x.e` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L32efa6.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.x` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32efb8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32efbe.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.w`;
  #L32efc2.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/w;.<init>:()V` @kind direct;
  #L32efc8.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.x.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.w` := v0 @kind object;
  #L32efcc.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.k`;
  #L32efd0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.<init>:()V` @kind direct;
  #L32efd6.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.x.g` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.k` := v0 @kind object;
  #L32efda.  v0:= new `java.util.HashMap`;
  #L32efde.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L32efe4.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.x.h` @type ^`java.util.Map` := v0 @kind object;
  #L32efe8.  return @kind void;
}
procedure `void` `f`(`com.bumptech.glide.load.engine.bitmap_recycle.x` v3 @kind this, `java.lang.Integer` v4 @kind object, `android.graphics.Bitmap` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.f:(Ljava/lang/Integer;Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L32effc.  call temp:= `getConfig`(v5) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L32f002.  v0:= temp @kind object;
  #L32f004.  call temp:= `j`(v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.j:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @kind direct;
  #L32f00a.  v0:= temp @kind object;
  #L32f00c.  call temp:= `get`(v0, v4) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32f012.  v1:= temp @kind object;
  #L32f014.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L32f018.  if v1 == 0 then goto L32f04c;
  #L32f01c.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32f022.  v5:= temp;
  #L32f024.  v2:= 1I;
  #L32f026.  if v5 != v2 then goto L32f032;
  #L32f02a.  call temp:= `remove`(v0, v4) @signature `Ljava/util/NavigableMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32f030.  goto L32f04a;
  #L32f032.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32f038.  v5:= temp;
  #L32f03a.  v5:= v5 - v2 @kind int;
  #L32f03c.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32f042.  v5:= temp @kind object;
  #L32f044.  call temp:= `put`(v0, v4, v5) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32f04a.  return @kind void;
  #L32f04c.  v0:= new `java.lang.NullPointerException`;
  #L32f050.  v1:= new `java.lang.StringBuilder`;
  #L32f054.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32f05a.  v2:= "Tried to decrement empty size, size: " @kind object;
  #L32f05e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f064.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f06a.  v4:= ", removed: " @kind object;
  #L32f06e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f074.  call temp:= `e`(v3, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.e:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind virtual;
  #L32f07a.  v4:= temp @kind object;
  #L32f07c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f082.  v4:= ", this: " @kind object;
  #L32f086.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f08c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f092.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32f098.  v4:= temp @kind object;
  #L32f09a.  call `<init>`(v0, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f0a0.  throw v0;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.v` `g`(`com.bumptech.glide.load.engine.bitmap_recycle.x` v8 @kind this, `int` v9 , `android.graphics.Bitmap$Config` v10 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.g:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/v;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L32ecb4.  v0:= v8.`com.bumptech.glide.load.engine.bitmap_recycle.x.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.w` @kind object;
  #L32ecb8.  call temp:= `e`(v0, v9, v10) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/w;.e:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/v;` @kind virtual;
  #L32ecbe.  v0:= temp @kind object;
  #L32ecc0.  call temp:= `i`(v10) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.i:(Landroid/graphics/Bitmap$Config;)[Landroid/graphics/Bitmap$Config;` @kind static;
  #L32ecc6.  v1:= temp @kind object;
  #L32ecc8.  v2:= length @variable v1;
  #L32ecca.  v3:= 0I;
  #L32eccc.  if v3 >= v2 then goto L32ed4c;
  #L32ecd0.  v4:= v1[v3] @kind object;
  #L32ecd4.  call temp:= `j`(v8, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.j:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @kind direct;
  #L32ecda.  v5:= temp @kind object;
  #L32ecdc.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32ece2.  v6:= temp @kind object;
  #L32ece4.  call temp:= `ceilingKey`(v5, v6) @signature `Ljava/util/NavigableMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32ecea.  v5:= temp @kind object;
  #L32ecec.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L32ecf0.  if v5 == 0 then goto L32ed46;
  #L32ecf4.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32ecfa.  v6:= temp;
  #L32ecfc.  v7:= v9 * 8;
  #L32ed00.  if v6 > v7 then goto L32ed46;
  #L32ed04.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32ed0a.  v1:= temp;
  #L32ed0c.  if v1 != v9 then goto L32ed26;
  #L32ed10.  if v4 != 0 then goto L32ed1a;
  #L32ed14.  if v10 == 0 then goto L32ed4c;
  #L32ed18.  goto L32ed26;
  #L32ed1a.  call temp:= `equals`(v4, v10) @signature `Landroid/graphics/Bitmap$Config;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32ed20.  v9:= temp;
  #L32ed22.  if v9 != 0 then goto L32ed4c;
  #L32ed26.  v9:= v8.`com.bumptech.glide.load.engine.bitmap_recycle.x.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.w` @kind object;
  #L32ed2a.  call `c`(v9, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/f;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/t;)V` @kind virtual;
  #L32ed30.  v9:= v8.`com.bumptech.glide.load.engine.bitmap_recycle.x.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.w` @kind object;
  #L32ed34.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32ed3a.  v10:= temp;
  #L32ed3c.  call temp:= `e`(v9, v10, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/w;.e:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/v;` @kind virtual;
  #L32ed42.  v0:= temp @kind object;
  #L32ed44.  goto L32ed4c;
  #L32ed46.  v3:= v3 + 1;
  #L32ed4a.  goto L32eccc;
  #L32ed4c.  return v0 @kind object;
}
procedure `java.lang.String` `h`(`int` v2 , `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.h:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L32ed7c.  v0:= new `java.lang.StringBuilder`;
  #L32ed80.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32ed86.  v1:= "[" @kind object;
  #L32ed8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ed90.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ed96.  v2:= "](" @kind object;
  #L32ed9a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32eda0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32eda6.  v2:= ")" @kind object;
  #L32edaa.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32edb0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32edb6.  v2:= temp @kind object;
  #L32edb8.  return v2 @kind object;
}
procedure `android.graphics.Bitmap$Config`[] `i`(`android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.i:(Landroid/graphics/Bitmap$Config;)[Landroid/graphics/Bitmap$Config;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L32ec34.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L32ec38.  v1:= 26I;
  #L32ec3c.  if v0 < v1 then goto L32ec56;
  #L32ec40.  v0:= `@@android.graphics.Bitmap$Config.RGBA_F16` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32ec44.  call temp:= `equals`(v0, v3) @signature `Landroid/graphics/Bitmap$Config;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32ec4a.  v0:= temp;
  #L32ec4c.  if v0 == 0 then goto L32ec56;
  #L32ec50.  v3:= `@@com.bumptech.glide.load.engine.bitmap_recycle.x.b` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L32ec54.  return v3 @kind object;
  #L32ec56.  v0:= `@@com.bumptech.glide.load.engine.bitmap_recycle.u.a` @type ^`int`[] @kind object;
  #L32ec5a.  call temp:= `ordinal`(v3) @signature `Landroid/graphics/Bitmap$Config;.ordinal:()I` @kind virtual;
  #L32ec60.  v1:= temp;
  #L32ec62.  v0:= v0[v1];
  #L32ec66.  v1:= 1I;
  #L32ec68.  if v0 == v1 then goto L32ec9c;
  #L32ec6c.  v2:= 2I;
  #L32ec6e.  if v0 == v2 then goto L32ec96;
  #L32ec72.  v2:= 3I;
  #L32ec74.  if v0 == v2 then goto L32ec90;
  #L32ec78.  v2:= 4I;
  #L32ec7a.  if v0 == v2 then goto L32ec8a;
  #L32ec7e.  v0:= new `android.graphics.Bitmap$Config`[v1];
  #L32ec82.  v1:= 0I;
  #L32ec84.  v0[v1]:= v3 @kind object;
  #L32ec88.  return v0 @kind object;
  #L32ec8a.  v3:= `@@com.bumptech.glide.load.engine.bitmap_recycle.x.e` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L32ec8e.  return v3 @kind object;
  #L32ec90.  v3:= `@@com.bumptech.glide.load.engine.bitmap_recycle.x.d` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L32ec94.  return v3 @kind object;
  #L32ec96.  v3:= `@@com.bumptech.glide.load.engine.bitmap_recycle.x.c` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L32ec9a.  return v3 @kind object;
  #L32ec9c.  v3:= `@@com.bumptech.glide.load.engine.bitmap_recycle.x.a` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L32eca0.  return v3 @kind object;
}
procedure `java.util.NavigableMap` `j`(`com.bumptech.glide.load.engine.bitmap_recycle.x` v2 @kind this, `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.j:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32eef4.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.x.h` @type ^`java.util.Map` @kind object;
  #L32eef8.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32eefe.  v0:= temp @kind object;
  #L32ef00.  v0:= (`java.util.NavigableMap`) v0 @kind object;
  #L32ef04.  if v0 != 0 then goto L32ef1c;
  #L32ef08.  v0:= new `java.util.TreeMap`;
  #L32ef0c.  call `<init>`(v0) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L32ef12.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.x.h` @type ^`java.util.Map` @kind object;
  #L32ef16.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32ef1c.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.x` v0 @kind this, `int` v1 , `int` v2 , `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.a:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L32edf8.  call temp:= `g`(v1, v2, v3) @signature `Lcom/bumptech/glide/s/p;.g:(IILandroid/graphics/Bitmap$Config;)I` @kind static;
  #L32edfe.  v1:= temp;
  #L32ee00.  call temp:= `h`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.h:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L32ee06.  v1:= temp @kind object;
  #L32ee08.  return v1 @kind object;
}
procedure `int` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.x` v0 @kind this, `android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.b:(Landroid/graphics/Bitmap;)I` @AccessFlag PUBLIC {
    temp;

  #L32ed60.  call temp:= `h`(v1) @signature `Lcom/bumptech/glide/s/p;.h:(Landroid/graphics/Bitmap;)I` @kind static;
  #L32ed66.  v1:= temp;
  #L32ed68.  return v1;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.x` v3 @kind this, `android.graphics.Bitmap` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.c:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32f0b4.  call temp:= `h`(v4) @signature `Lcom/bumptech/glide/s/p;.h:(Landroid/graphics/Bitmap;)I` @kind static;
  #L32f0ba.  v0:= temp;
  #L32f0bc.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.x.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.w` @kind object;
  #L32f0c0.  call temp:= `getConfig`(v4) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L32f0c6.  v2:= temp @kind object;
  #L32f0c8.  call temp:= `e`(v1, v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/w;.e:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/v;` @kind virtual;
  #L32f0ce.  v0:= temp @kind object;
  #L32f0d0.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.x.g` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.k` @kind object;
  #L32f0d4.  call `d`(v1, v0, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.d:(Lcom/bumptech/glide/load/engine/bitmap_recycle/t;Ljava/lang/Object;)V` @kind virtual;
  #L32f0da.  call temp:= `getConfig`(v4) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L32f0e0.  v4:= temp @kind object;
  #L32f0e2.  call temp:= `j`(v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.j:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @kind direct;
  #L32f0e8.  v4:= temp @kind object;
  #L32f0ea.  v1:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.v.b` @type ^`int`;
  #L32f0ee.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32f0f4.  v1:= temp @kind object;
  #L32f0f6.  call temp:= `get`(v4, v1) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32f0fc.  v1:= temp @kind object;
  #L32f0fe.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L32f102.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.v.b` @type ^`int`;
  #L32f106.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32f10c.  v0:= temp @kind object;
  #L32f10e.  v2:= 1I;
  #L32f110.  if v1 != 0 then goto L32f116;
  #L32f114.  goto L32f120;
  #L32f116.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32f11c.  v1:= temp;
  #L32f11e.  v2:= v2 + v1 @kind int;
  #L32f120.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32f126.  v1:= temp @kind object;
  #L32f128.  call temp:= `put`(v4, v0, v1) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32f12e.  return @kind void;
}
procedure `android.graphics.Bitmap` `d`(`com.bumptech.glide.load.engine.bitmap_recycle.x` v2 @kind this, `int` v3 , `int` v4 , `android.graphics.Bitmap$Config` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.d:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32eba8.  call temp:= `g`(v3, v4, v5) @signature `Lcom/bumptech/glide/s/p;.g:(IILandroid/graphics/Bitmap$Config;)I` @kind static;
  #L32ebae.  v0:= temp;
  #L32ebb0.  call temp:= `g`(v2, v0, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.g:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/v;` @kind direct;
  #L32ebb6.  v0:= temp @kind object;
  #L32ebb8.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.x.g` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.k` @kind object;
  #L32ebbc.  call temp:= `a`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.a:(Lcom/bumptech/glide/load/engine/bitmap_recycle/t;)Ljava/lang/Object;` @kind virtual;
  #L32ebc2.  v1:= temp @kind object;
  #L32ebc4.  v1:= (`android.graphics.Bitmap`) v1 @kind object;
  #L32ebc8.  if v1 == 0 then goto L32ebe4;
  #L32ebcc.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.v.b` @type ^`int`;
  #L32ebd0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32ebd6.  v0:= temp @kind object;
  #L32ebd8.  call `f`(v2, v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.f:(Ljava/lang/Integer;Landroid/graphics/Bitmap;)V` @kind direct;
  #L32ebde.  call `reconfigure`(v1, v3, v4, v5) @signature `Landroid/graphics/Bitmap;.reconfigure:(IILandroid/graphics/Bitmap$Config;)V` @kind virtual;
  #L32ebe4.  return v1 @kind object;
}
procedure `java.lang.String` `e`(`com.bumptech.glide.load.engine.bitmap_recycle.x` v1 @kind this, `android.graphics.Bitmap` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.e:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32edcc.  call temp:= `h`(v2) @signature `Lcom/bumptech/glide/s/p;.h:(Landroid/graphics/Bitmap;)I` @kind static;
  #L32edd2.  v0:= temp;
  #L32edd4.  call temp:= `getConfig`(v2) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L32edda.  v2:= temp @kind object;
  #L32eddc.  call temp:= `h`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.h:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L32ede2.  v2:= temp @kind object;
  #L32ede4.  return v2 @kind object;
}
procedure `android.graphics.Bitmap` `removeLast`(`com.bumptech.glide.load.engine.bitmap_recycle.x` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.removeLast:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32ebf8.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.x.g` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.k` @kind object;
  #L32ebfc.  call temp:= `f`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.f:()Ljava/lang/Object;` @kind virtual;
  #L32ec02.  v0:= temp @kind object;
  #L32ec04.  v0:= (`android.graphics.Bitmap`) v0 @kind object;
  #L32ec08.  if v0 == 0 then goto L32ec22;
  #L32ec0c.  call temp:= `h`(v0) @signature `Lcom/bumptech/glide/s/p;.h:(Landroid/graphics/Bitmap;)I` @kind static;
  #L32ec12.  v1:= temp;
  #L32ec14.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32ec1a.  v1:= temp @kind object;
  #L32ec1c.  call `f`(v2, v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.f:(Ljava/lang/Integer;Landroid/graphics/Bitmap;)V` @kind direct;
  #L32ec22.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.x` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32ee1c.  v0:= new `java.lang.StringBuilder`;
  #L32ee20.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32ee26.  v1:= "SizeConfigStrategy{groupedMap=" @kind object;
  #L32ee2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ee30.  v1:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.x.g` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.k` @kind object;
  #L32ee34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ee3a.  v1:= ", sortedSizes=(" @kind object;
  #L32ee3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ee44.  v1:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.x.h` @type ^`java.util.Map` @kind object;
  #L32ee48.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L32ee4e.  v1:= temp @kind object;
  #L32ee50.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32ee56.  v1:= temp @kind object;
  #L32ee58.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32ee5e.  v2:= temp;
  #L32ee60.  if v2 == 0 then goto L32eea2;
  #L32ee64.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32ee6a.  v2:= temp @kind object;
  #L32ee6c.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L32ee70.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L32ee76.  v3:= temp @kind object;
  #L32ee78.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ee7e.  v3:= 91I;
  #L32ee82.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ee88.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L32ee8e.  v2:= temp @kind object;
  #L32ee90.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ee96.  v2:= "], " @kind object;
  #L32ee9a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32eea0.  goto L32ee58;
  #L32eea2.  v1:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.x.h` @type ^`java.util.Map` @kind object;
  #L32eea6.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L32eeac.  v1:= temp;
  #L32eeae.  if v1 != 0 then goto L32eed0;
  #L32eeb2.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L32eeb8.  v1:= temp;
  #L32eeba.  v1:= v1 + -2;
  #L32eebe.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L32eec4.  v2:= temp;
  #L32eec6.  v3:= "" @kind object;
  #L32eeca.  call temp:= `replace`(v0, v1, v2, v3) @signature `Ljava/lang/StringBuilder;.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32eed0.  v1:= ")}" @kind object;
  #L32eed4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32eeda.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32eee0.  v0:= temp @kind object;
  #L32eee2.  return v0 @kind object;
}
