record `com.bumptech.glide.load.engine.s0` @kind class @AccessFlag  extends `com.bumptech.glide.s.q.d` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.s0` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/s0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32c2dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32c2e2.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.bumptech.glide.load.engine.s0` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/s0;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L32c2c0.  call temp:= `b`(v1) @signature `Lcom/bumptech/glide/load/engine/s0;.b:()Lcom/bumptech/glide/load/engine/t0;` @kind virtual;
  #L32c2c6.  v0:= temp @kind object;
  #L32c2c8.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.t0` `b`(`com.bumptech.glide.load.engine.s0` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/s0;.b:()Lcom/bumptech/glide/load/engine/t0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c2a4.  v0:= new `com.bumptech.glide.load.engine.t0`;
  #L32c2a8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/t0;.<init>:()V` @kind direct;
  #L32c2ae.  return v0 @kind object;
}
