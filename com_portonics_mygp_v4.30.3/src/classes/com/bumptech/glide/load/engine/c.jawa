record `com.bumptech.glide.load.engine.c` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.bumptech.glide.load.engine.f` `com.bumptech.glide.load.engine.c.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.c` v0 @kind this, `com.bumptech.glide.load.engine.f` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/c;.<init>:(Lcom/bumptech/glide/load/engine/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3279b8.  v0.`com.bumptech.glide.load.engine.c.b` @type ^`com.bumptech.glide.load.engine.f` := v1 @kind object;
  #L3279bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3279c2.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.load.engine.c` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/c;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3279d4.  v0:= v1.`com.bumptech.glide.load.engine.c.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3279d8.  call `b`(v0) @signature `Lcom/bumptech/glide/load/engine/f;.b:()V` @kind virtual;
  #L3279de.  return @kind void;
}
