record `com.bumptech.glide.load.engine.t0` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.engine.u0` @kind interface, `com.bumptech.glide.s.q.f` @kind interface {
  `com.bumptech.glide.s.q.l` `com.bumptech.glide.load.engine.t0.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.u0` `com.bumptech.glide.load.engine.t0.d` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.t0.e` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.t0.f` @AccessFlag PRIVATE;
}
global `androidx.core.util.e` `@@com.bumptech.glide.load.engine.t0.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/t0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L32c3a0.  v0:= new `com.bumptech.glide.load.engine.s0`;
  #L32c3a4.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/s0;.<init>:()V` @kind direct;
  #L32c3aa.  v1:= 20I;
  #L32c3ae.  call temp:= `d`(v1, v0) @signature `Lcom/bumptech/glide/s/q/h;.d:(ILcom/bumptech/glide/s/q/d;)Landroidx/core/util/e;` @kind static;
  #L32c3b4.  v0:= temp @kind object;
  #L32c3b6.  `@@com.bumptech.glide.load.engine.t0.b` @type ^`androidx.core.util.e` := v0 @kind object;
  #L32c3ba.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.t0` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L32c3cc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32c3d2.  call temp:= `a`() @signature `Lcom/bumptech/glide/s/q/l;.a:()Lcom/bumptech/glide/s/q/l;` @kind static;
  #L32c3d8.  v0:= temp @kind object;
  #L32c3da.  v1.`com.bumptech.glide.load.engine.t0.c` @type ^`com.bumptech.glide.s.q.l` := v0 @kind object;
  #L32c3de.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.t0` v1 @kind this, `com.bumptech.glide.load.engine.u0` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/t0;.a:(Lcom/bumptech/glide/load/engine/u0;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32c3f0.  v0:= 0I;
  #L32c3f2.  v1.`com.bumptech.glide.load.engine.t0.f` @type ^`boolean` := v0 @kind boolean;
  #L32c3f6.  v0:= 1I;
  #L32c3f8.  v1.`com.bumptech.glide.load.engine.t0.e` @type ^`boolean` := v0 @kind boolean;
  #L32c3fc.  v1.`com.bumptech.glide.load.engine.t0.d` @type ^`com.bumptech.glide.load.engine.u0` := v2 @kind object;
  #L32c400.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.t0` `b`(`com.bumptech.glide.load.engine.u0` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/t0;.b:(Lcom/bumptech/glide/load/engine/u0;)Lcom/bumptech/glide/load/engine/t0;` @AccessFlag STATIC {
    temp;
    v0;

  #L32c2f4.  v0:= `@@com.bumptech.glide.load.engine.t0.b` @type ^`androidx.core.util.e` @kind object;
  #L32c2f8.  call temp:= `b`(v0) @signature `Landroidx/core/util/e;.b:()Ljava/lang/Object;` @kind interface;
  #L32c2fe.  v0:= temp @kind object;
  #L32c300.  v0:= (`com.bumptech.glide.load.engine.t0`) v0 @kind object;
  #L32c304.  call temp:= `d`(v0) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L32c30a.  v0:= temp @kind object;
  #L32c30c.  v0:= (`com.bumptech.glide.load.engine.t0`) v0 @kind object;
  #L32c310.  call `a`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/t0;.a:(Lcom/bumptech/glide/load/engine/u0;)V` @kind direct;
  #L32c316.  return v0 @kind object;
}
procedure `void` `f`(`com.bumptech.glide.load.engine.t0` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t0;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32c464.  v0:= 0I;
  #L32c466.  v1.`com.bumptech.glide.load.engine.t0.d` @type ^`com.bumptech.glide.load.engine.u0` := v0 @kind object;
  #L32c46a.  v0:= `@@com.bumptech.glide.load.engine.t0.b` @type ^`androidx.core.util.e` @kind object;
  #L32c46e.  call temp:= `a`(v0, v1) @signature `Landroidx/core/util/e;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L32c474.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.t0` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t0;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c414.  @monitorenter v1
  #L32c416.  v0:= v1.`com.bumptech.glide.load.engine.t0.c` @type ^`com.bumptech.glide.s.q.l` @kind object;
  #L32c41a.  call `c`(v0) @signature `Lcom/bumptech/glide/s/q/l;.c:()V` @kind virtual;
  #L32c420.  v0:= 1I;
  #L32c422.  v1.`com.bumptech.glide.load.engine.t0.f` @type ^`boolean` := v0 @kind boolean;
  #L32c426.  v0:= v1.`com.bumptech.glide.load.engine.t0.e` @type ^`boolean` @kind boolean;
  #L32c42a.  if v0 != 0 then goto L32c43e;
  #L32c42e.  v0:= v1.`com.bumptech.glide.load.engine.t0.d` @type ^`com.bumptech.glide.load.engine.u0` @kind object;
  #L32c432.  call `c`(v0) @signature `Lcom/bumptech/glide/load/engine/u0;.c:()V` @kind interface;
  #L32c438.  call `f`(v1) @signature `Lcom/bumptech/glide/load/engine/t0;.f:()V` @kind direct;
  #L32c43e.  @monitorexit v1
  #L32c440.  return @kind void;
  #L32c442.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32c444.  @monitorexit v1
  #L32c446.  throw v0;
  catch `java.lang.Throwable` @[L32c416..L32c43e] goto L32c442;
}
procedure `int` `d`(`com.bumptech.glide.load.engine.t0` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t0;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c340.  v0:= v1.`com.bumptech.glide.load.engine.t0.d` @type ^`com.bumptech.glide.load.engine.u0` @kind object;
  #L32c344.  call temp:= `d`(v0) @signature `Lcom/bumptech/glide/load/engine/u0;.d:()I` @kind interface;
  #L32c34a.  v0:= temp;
  #L32c34c.  return v0;
}
procedure `java.lang.Class` `e`(`com.bumptech.glide.load.engine.t0` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t0;.e:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c360.  v0:= v1.`com.bumptech.glide.load.engine.t0.d` @type ^`com.bumptech.glide.load.engine.u0` @kind object;
  #L32c364.  call temp:= `e`(v0) @signature `Lcom/bumptech/glide/load/engine/u0;.e:()Ljava/lang/Class;` @kind interface;
  #L32c36a.  v0:= temp @kind object;
  #L32c36c.  return v0 @kind object;
}
procedure `void` `g`(`com.bumptech.glide.load.engine.t0` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/t0;.g:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L32c488.  @monitorenter v2
  #L32c48a.  v0:= v2.`com.bumptech.glide.load.engine.t0.c` @type ^`com.bumptech.glide.s.q.l` @kind object;
  #L32c48e.  call `c`(v0) @signature `Lcom/bumptech/glide/s/q/l;.c:()V` @kind virtual;
  #L32c494.  v0:= v2.`com.bumptech.glide.load.engine.t0.e` @type ^`boolean` @kind boolean;
  #L32c498.  if v0 == 0 then goto L32c4b4;
  #L32c49c.  v0:= 0I;
  #L32c49e.  v2.`com.bumptech.glide.load.engine.t0.e` @type ^`boolean` := v0 @kind boolean;
  #L32c4a2.  v0:= v2.`com.bumptech.glide.load.engine.t0.f` @type ^`boolean` @kind boolean;
  #L32c4a6.  if v0 == 0 then goto L32c4b0;
  #L32c4aa.  call `c`(v2) @signature `Lcom/bumptech/glide/load/engine/t0;.c:()V` @kind virtual;
  #L32c4b0.  @monitorexit v2
  #L32c4b2.  return @kind void;
  #L32c4b4.  v0:= new `java.lang.IllegalStateException`;
  #L32c4b8.  v1:= "Already unlocked" @kind object;
  #L32c4bc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32c4c2.  throw v0;
  #L32c4c4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32c4c6.  @monitorexit v2
  #L32c4c8.  throw v0;
  catch `java.lang.Throwable` @[L32c48a..L32c4b0] goto L32c4c4;
  catch `java.lang.Throwable` @[L32c4b4..L32c4c4] goto L32c4c4;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.engine.t0` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t0;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c380.  v0:= v1.`com.bumptech.glide.load.engine.t0.d` @type ^`com.bumptech.glide.load.engine.u0` @kind object;
  #L32c384.  call temp:= `get`(v0) @signature `Lcom/bumptech/glide/load/engine/u0;.get:()Ljava/lang/Object;` @kind interface;
  #L32c38a.  v0:= temp @kind object;
  #L32c38c.  return v0 @kind object;
}
procedure `com.bumptech.glide.s.q.l` `i`(`com.bumptech.glide.load.engine.t0` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t0;.i:()Lcom/bumptech/glide/s/q/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c328.  v0:= v1.`com.bumptech.glide.load.engine.t0.c` @type ^`com.bumptech.glide.s.q.l` @kind object;
  #L32c32c.  return v0 @kind object;
}
