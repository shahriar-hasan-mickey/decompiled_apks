record `com.bumptech.glide.load.engine.bitmap_recycle.k` @kind class @AccessFlag  {
  `com.bumptech.glide.load.engine.bitmap_recycle.j` `com.bumptech.glide.load.engine.bitmap_recycle.k.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.bitmap_recycle.k.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.k` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L32d740.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32d746.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.j`;
  #L32d74a.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/j;.<init>:()V` @kind direct;
  #L32d750.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.k.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` := v0 @kind object;
  #L32d754.  v0:= new `java.util.HashMap`;
  #L32d758.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L32d75e.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.k.b` @type ^`java.util.Map` := v0 @kind object;
  #L32d762.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.k` v1 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.j` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.b:(Lcom/bumptech/glide/load/engine/bitmap_recycle/j;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32d774.  call `e`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.e:(Lcom/bumptech/glide/load/engine/bitmap_recycle/j;)V` @kind static;
  #L32d77a.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.k.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d77e.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.j.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` := v0 @kind object;
  #L32d782.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.j.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d786.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.j.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` := v0 @kind object;
  #L32d78a.  call `g`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/j;)V` @kind static;
  #L32d790.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.k` v2 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.j` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/j;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32d7a4.  call `e`(v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.e:(Lcom/bumptech/glide/load/engine/bitmap_recycle/j;)V` @kind static;
  #L32d7aa.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.k.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d7ae.  v1:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.j.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d7b2.  v3.`com.bumptech.glide.load.engine.bitmap_recycle.j.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` := v1 @kind object;
  #L32d7b6.  v3.`com.bumptech.glide.load.engine.bitmap_recycle.j.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` := v0 @kind object;
  #L32d7ba.  call `g`(v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/j;)V` @kind static;
  #L32d7c0.  return @kind void;
}
procedure `void` `e`(`com.bumptech.glide.load.engine.bitmap_recycle.j` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.e:(Lcom/bumptech/glide/load/engine/bitmap_recycle/j;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L32d824.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.j.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d828.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.j.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d82c.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.j.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` := v1 @kind object;
  #L32d830.  v2:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.j.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d834.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.j.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` := v0 @kind object;
  #L32d838.  return @kind void;
}
procedure `void` `g`(`com.bumptech.glide.load.engine.bitmap_recycle.j` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/j;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L32d84c.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.j.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d850.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.j.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` := v1 @kind object;
  #L32d854.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.j.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d858.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.j.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` := v1 @kind object;
  #L32d85c.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.k` v2 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.t` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.a:(Lcom/bumptech/glide/load/engine/bitmap_recycle/t;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32d5e4.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.k.b` @type ^`java.util.Map` @kind object;
  #L32d5e8.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32d5ee.  v0:= temp @kind object;
  #L32d5f0.  v0:= (`com.bumptech.glide.load.engine.bitmap_recycle.j`) v0 @kind object;
  #L32d5f4.  if v0 != 0 then goto L32d60e;
  #L32d5f8.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.j`;
  #L32d5fc.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/j;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L32d602.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.k.b` @type ^`java.util.Map` @kind object;
  #L32d606.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32d60c.  goto L32d614;
  #L32d60e.  call `a`(v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/t;.a:()V` @kind interface;
  #L32d614.  call `b`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.b:(Lcom/bumptech/glide/load/engine/bitmap_recycle/j;)V` @kind direct;
  #L32d61a.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/j;.b:()Ljava/lang/Object;` @kind virtual;
  #L32d620.  v3:= temp @kind object;
  #L32d622.  return v3 @kind object;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.bitmap_recycle.k` v2 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.t` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.d:(Lcom/bumptech/glide/load/engine/bitmap_recycle/t;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32d7d4.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.k.b` @type ^`java.util.Map` @kind object;
  #L32d7d8.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32d7de.  v0:= temp @kind object;
  #L32d7e0.  v0:= (`com.bumptech.glide.load.engine.bitmap_recycle.j`) v0 @kind object;
  #L32d7e4.  if v0 != 0 then goto L32d804;
  #L32d7e8.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.j`;
  #L32d7ec.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/j;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L32d7f2.  call `c`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/j;)V` @kind direct;
  #L32d7f8.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.k.b` @type ^`java.util.Map` @kind object;
  #L32d7fc.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32d802.  goto L32d80a;
  #L32d804.  call `a`(v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/t;.a:()V` @kind interface;
  #L32d80a.  call `a`(v0, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/j;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L32d810.  return @kind void;
}
procedure `java.lang.Object` `f`(`com.bumptech.glide.load.engine.bitmap_recycle.k` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.f:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32d634.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.k.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d638.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.j.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d63c.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.k.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d640.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32d646.  v1:= temp;
  #L32d648.  if v1 != 0 then goto L32d682;
  #L32d64c.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/j;.b:()Ljava/lang/Object;` @kind virtual;
  #L32d652.  v1:= temp @kind object;
  #L32d654.  if v1 == 0 then goto L32d65a;
  #L32d658.  return v1 @kind object;
  #L32d65a.  call `e`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.e:(Lcom/bumptech/glide/load/engine/bitmap_recycle/j;)V` @kind static;
  #L32d660.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.k.b` @type ^`java.util.Map` @kind object;
  #L32d664.  v2:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.j.a` @type ^`java.lang.Object` @kind object;
  #L32d668.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32d66e.  v1:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.j.a` @type ^`java.lang.Object` @kind object;
  #L32d672.  v1:= (`com.bumptech.glide.load.engine.bitmap_recycle.t`) v1 @kind object;
  #L32d676.  call `a`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/t;.a:()V` @kind interface;
  #L32d67c.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.j.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d680.  goto L32d63c;
  #L32d682.  v0:= 0I;
  #L32d684.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.k` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32d698.  v0:= new `java.lang.StringBuilder`;
  #L32d69c.  v1:= "GroupedLinkedMap( " @kind object;
  #L32d6a0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32d6a6.  v1:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.k.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d6aa.  v1:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.j.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d6ae.  v2:= 0I;
  #L32d6b0.  v3:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.k.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d6b4.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32d6ba.  v3:= temp;
  #L32d6bc.  if v3 != 0 then goto L32d6fe;
  #L32d6c0.  v2:= 1I;
  #L32d6c2.  v3:= 123I;
  #L32d6c6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d6cc.  v3:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.j.a` @type ^`java.lang.Object` @kind object;
  #L32d6d0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d6d6.  v3:= 58I;
  #L32d6da.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d6e0.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/j;.c:()I` @kind virtual;
  #L32d6e6.  v3:= temp;
  #L32d6e8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d6ee.  v3:= "}, " @kind object;
  #L32d6f2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d6f8.  v1:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.j.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.j` @kind object;
  #L32d6fc.  goto L32d6b0;
  #L32d6fe.  if v2 == 0 then goto L32d71c;
  #L32d702.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L32d708.  v1:= temp;
  #L32d70a.  v1:= v1 + -2;
  #L32d70e.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L32d714.  v2:= temp;
  #L32d716.  call temp:= `delete`(v0, v1, v2) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d71c.  v1:= " )" @kind object;
  #L32d720.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d726.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32d72c.  v0:= temp @kind object;
  #L32d72e.  return v0 @kind object;
}
