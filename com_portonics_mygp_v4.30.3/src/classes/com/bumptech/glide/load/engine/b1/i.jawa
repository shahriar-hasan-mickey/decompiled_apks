record `com.bumptech.glide.load.engine.b1.i` @kind class @AccessFlag ABSTRACT {
}
procedure `int` `a`() @signature `Lcom/bumptech/glide/load/engine/b1/i;.a:()I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L330544.  call temp:= `getRuntime`() @signature `Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;` @kind static;
  #L33054a.  v0:= temp @kind object;
  #L33054c.  call temp:= `availableProcessors`(v0) @signature `Ljava/lang/Runtime;.availableProcessors:()I` @kind virtual;
  #L330552.  v0:= temp;
  #L330554.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L330558.  v2:= 17I;
  #L33055c.  if v1 >= v2 then goto L330570;
  #L330560.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/engine/b1/i;.b:()I` @kind static;
  #L330566.  v1:= temp;
  #L330568.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L33056e.  v0:= temp;
  #L330570.  return v0;
}
procedure `int` `b`() @signature `Lcom/bumptech/glide/load/engine/b1/i;.b:()I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L330584.  call temp:= `allowThreadDiskReads`() @signature `Landroid/os/StrictMode;.allowThreadDiskReads:()Landroid/os/StrictMode$ThreadPolicy;` @kind static;
  #L33058a.  v0:= temp @kind object;
  #L33058c.  v1:= new `java.io.File`;
  #L330590.  v2:= "/sys/devices/system/cpu/" @kind object;
  #L330594.  call `<init>`(v1, v2) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33059a.  v2:= "cpu[0-9]+" @kind object;
  #L33059e.  call temp:= `compile`(v2) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3305a4.  v2:= temp @kind object;
  #L3305a6.  v3:= new `com.bumptech.glide.load.engine.b1.h`;
  #L3305aa.  call `<init>`(v3, v2) @signature `Lcom/bumptech/glide/load/engine/b1/h;.<init>:(Ljava/util/regex/Pattern;)V` @kind direct;
  #L3305b0.  call temp:= `listFiles`(v1, v3) @signature `Ljava/io/File;.listFiles:(Ljava/io/FilenameFilter;)[Ljava/io/File;` @kind virtual;
  #L3305b6.  v1:= temp @kind object;
  #L3305b8.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L3305be.  goto L3305d6;
  #L3305c0.  v1:= "GlideRuntimeCompat" @kind object;
  #L3305c4.  v2:= 6I;
  #L3305c6.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3305cc.  v1:= temp;
  #L3305ce.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L3305d4.  v1:= 0I;
  #L3305d6.  v0:= 1I;
  #L3305d8.  if v1 == 0 then goto L3305e0;
  #L3305dc.  v1:= length @variable v1;
  #L3305de.  goto L3305e2;
  #L3305e0.  v1:= 0I;
  #L3305e2.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3305e8.  v0:= temp;
  #L3305ea.  return v0;
  #L3305ec.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3305ee.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L3305f4.  throw v1;
  catch `java.lang.Throwable` @[L33058c..L3305b8] goto L3305c0;
  catch `java.lang.Throwable` @[L3305c0..L3305ce] goto L3305ec;
}
