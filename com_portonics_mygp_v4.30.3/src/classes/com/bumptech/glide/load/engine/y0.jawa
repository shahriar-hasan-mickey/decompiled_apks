record `com.bumptech.glide.load.engine.y0` @kind class @AccessFlag  {
  `boolean` `com.bumptech.glide.load.engine.y0.a` @AccessFlag PRIVATE;
  `android.os.Handler` `com.bumptech.glide.load.engine.y0.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.y0` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/y0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L32cba0.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32cba6.  v0:= new `android.os.Handler`;
  #L32cbaa.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L32cbb0.  v1:= temp @kind object;
  #L32cbb2.  v2:= new `com.bumptech.glide.load.engine.x0`;
  #L32cbb6.  call `<init>`(v2) @signature `Lcom/bumptech/glide/load/engine/x0;.<init>:()V` @kind direct;
  #L32cbbc.  call `<init>`(v0, v1, v2) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;Landroid/os/Handler$Callback;)V` @kind direct;
  #L32cbc2.  v3.`com.bumptech.glide.load.engine.y0.b` @type ^`android.os.Handler` := v0 @kind object;
  #L32cbc6.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.y0` v2 @kind this, `com.bumptech.glide.load.engine.u0` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/y0;.a:(Lcom/bumptech/glide/load/engine/u0;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L32cbd8.  @monitorenter v2
  #L32cbda.  v0:= v2.`com.bumptech.glide.load.engine.y0.a` @type ^`boolean` @kind boolean;
  #L32cbde.  v1:= 1I;
  #L32cbe0.  if v0 == 0 then goto L32cbf8;
  #L32cbe4.  v0:= v2.`com.bumptech.glide.load.engine.y0.b` @type ^`android.os.Handler` @kind object;
  #L32cbe8.  call temp:= `obtainMessage`(v0, v1, v3) @signature `Landroid/os/Handler;.obtainMessage:(ILjava/lang/Object;)Landroid/os/Message;` @kind virtual;
  #L32cbee.  v3:= temp @kind object;
  #L32cbf0.  call `sendToTarget`(v3) @signature `Landroid/os/Message;.sendToTarget:()V` @kind virtual;
  #L32cbf6.  goto L32cc08;
  #L32cbf8.  v2.`com.bumptech.glide.load.engine.y0.a` @type ^`boolean` := v1 @kind boolean;
  #L32cbfc.  call `c`(v3) @signature `Lcom/bumptech/glide/load/engine/u0;.c:()V` @kind interface;
  #L32cc02.  v3:= 0I;
  #L32cc04.  v2.`com.bumptech.glide.load.engine.y0.a` @type ^`boolean` := v3 @kind boolean;
  #L32cc08.  @monitorexit v2
  #L32cc0a.  return @kind void;
  #L32cc0c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32cc0e.  @monitorexit v2
  #L32cc10.  throw v3;
  catch `java.lang.Throwable` @[L32cbda..L32cc08] goto L32cc0c;
}
