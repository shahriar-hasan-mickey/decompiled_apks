record `com.bumptech.glide.load.engine.r0` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `com.bumptech.glide.load.engine.r0.a` @AccessFlag PRIVATE_FINAL;
  `androidx.core.util.e` `com.bumptech.glide.load.engine.r0.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.engine.r0.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.engine.r0.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.r0` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `java.util.List` v4 @kind object, `androidx.core.util.e` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/r0;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Landroidx/core/util/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32c210.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32c216.  v0.`com.bumptech.glide.load.engine.r0.a` @type ^`java.lang.Class` := v1 @kind object;
  #L32c21a.  v0.`com.bumptech.glide.load.engine.r0.b` @type ^`androidx.core.util.e` := v5 @kind object;
  #L32c21e.  call temp:= `c`(v4) @signature `Lcom/bumptech/glide/s/n;.c:(Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L32c224.  v4:= temp @kind object;
  #L32c226.  v4:= (`java.util.List`) v4 @kind object;
  #L32c22a.  v0.`com.bumptech.glide.load.engine.r0.c` @type ^`java.util.List` := v4 @kind object;
  #L32c22e.  v4:= new `java.lang.StringBuilder`;
  #L32c232.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32c238.  v5:= "Failed LoadPath{" @kind object;
  #L32c23c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32c242.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L32c248.  v1:= temp @kind object;
  #L32c24a.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32c250.  v1:= "->" @kind object;
  #L32c254.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32c25a.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L32c260.  v2:= temp @kind object;
  #L32c262.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32c268.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32c26e.  call temp:= `getSimpleName`(v3) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L32c274.  v1:= temp @kind object;
  #L32c276.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32c27c.  v1:= "}" @kind object;
  #L32c280.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32c286.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32c28c.  v1:= temp @kind object;
  #L32c28e.  v0.`com.bumptech.glide.load.engine.r0.d` @type ^`java.lang.String` := v1 @kind object;
  #L32c292.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.u0` `b`(`com.bumptech.glide.load.engine.r0` v12 @kind this, `com.bumptech.glide.load.l.g` v13 @kind object, `com.bumptech.glide.load.h` v14 @kind object, `int` v15 , `int` v16 , `com.bumptech.glide.load.engine.r` v17 @kind object, `java.util.List` v18 @kind object) @signature `Lcom/bumptech/glide/load/engine/r0;.b:(Lcom/bumptech/glide/load/l/g;Lcom/bumptech/glide/load/h;IILcom/bumptech/glide/load/engine/r;Ljava/util/List;)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L32c118.  v1:= v12 @kind object;
  #L32c11a.  v2:= v18 @kind object;
  #L32c11e.  v0:= v1.`com.bumptech.glide.load.engine.r0.c` @type ^`java.util.List` @kind object;
  #L32c122.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32c128.  v3:= temp;
  #L32c12a.  v0:= 0I;
  #L32c12c.  v4:= 0I;
  #L32c12e.  v4:= v0 @kind object;
  #L32c130.  v5:= 0I;
  #L32c132.  if v5 >= v3 then goto L32c178;
  #L32c136.  v0:= v1.`com.bumptech.glide.load.engine.r0.c` @type ^`java.util.List` @kind object;
  #L32c13a.  call temp:= `get`(v0, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32c140.  v0:= temp @kind object;
  #L32c142.  v6:= v0 @kind object;
  #L32c144.  v6:= (`com.bumptech.glide.load.engine.s`) v6 @kind object;
  #L32c148.  v7:= v13 @kind object;
  #L32c14a.  v8:= v15;
  #L32c14c.  v9:= v16;
  #L32c150.  v10:= v14 @kind object;
  #L32c152.  v11:= v17 @kind object;
  #L32c156.  call temp:= `a`(v6, v7, v8, v9, v10, v11) @signature `Lcom/bumptech/glide/load/engine/s;.a:(Lcom/bumptech/glide/load/l/g;IILcom/bumptech/glide/load/h;Lcom/bumptech/glide/load/engine/r;)Lcom/bumptech/glide/load/engine/u0;` @kind virtual;
  #L32c15c.  v0:= temp @kind object;
  #L32c15e.  v4:= v0 @kind object;
  #L32c160.  goto L32c16c;
  #L32c162.  v0:= Exception @type ^`com.bumptech.glide.load.engine.GlideException` @kind object;
  #L32c164.  v6:= v0 @kind object;
  #L32c166.  call temp:= `add`(v2, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32c16c.  if v4 == 0 then goto L32c172;
  #L32c170.  goto L32c178;
  #L32c172.  v5:= v5 + 1;
  #L32c176.  goto L32c132;
  #L32c178.  if v4 == 0 then goto L32c17e;
  #L32c17c.  return v4 @kind object;
  #L32c17e.  v0:= new `com.bumptech.glide.load.engine.GlideException`;
  #L32c182.  v3:= v1.`com.bumptech.glide.load.engine.r0.d` @type ^`java.lang.String` @kind object;
  #L32c186.  v4:= new `java.util.ArrayList`;
  #L32c18a.  call `<init>`(v4, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L32c190.  call `<init>`(v0, v3, v4) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L32c196.  goto L32c19a;
  #L32c198.  throw v0;
  #L32c19a.  goto L32c198;
  catch `com.bumptech.glide.load.engine.GlideException` @[L32c156..L32c15e] goto L32c162;
}
procedure `com.bumptech.glide.load.engine.u0` `a`(`com.bumptech.glide.load.engine.r0` v8 @kind this, `com.bumptech.glide.load.l.g` v9 @kind object, `com.bumptech.glide.load.h` v10 @kind object, `int` v11 , `int` v12 , `com.bumptech.glide.load.engine.r` v13 @kind object) @signature `Lcom/bumptech/glide/load/engine/r0;.a:(Lcom/bumptech/glide/load/l/g;Lcom/bumptech/glide/load/h;IILcom/bumptech/glide/load/engine/r;)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L32c0b4.  v0:= v8.`com.bumptech.glide.load.engine.r0.b` @type ^`androidx.core.util.e` @kind object;
  #L32c0b8.  call temp:= `b`(v0) @signature `Landroidx/core/util/e;.b:()Ljava/lang/Object;` @kind interface;
  #L32c0be.  v0:= temp @kind object;
  #L32c0c0.  call temp:= `d`(v0) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L32c0c6.  v0:= temp @kind object;
  #L32c0c8.  v0:= (`java.util.List`) v0 @kind object;
  #L32c0cc.  v1:= v8 @kind object;
  #L32c0ce.  v2:= v9 @kind object;
  #L32c0d0.  v3:= v10 @kind object;
  #L32c0d2.  v4:= v11;
  #L32c0d4.  v5:= v12;
  #L32c0d6.  v6:= v13 @kind object;
  #L32c0d8.  v7:= v0 @kind object;
  #L32c0da.  call temp:= `b`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/engine/r0;.b:(Lcom/bumptech/glide/load/l/g;Lcom/bumptech/glide/load/h;IILcom/bumptech/glide/load/engine/r;Ljava/util/List;)Lcom/bumptech/glide/load/engine/u0;` @kind direct;
  #L32c0e0.  v9:= temp @kind object;
  #L32c0e2.  v10:= v8.`com.bumptech.glide.load.engine.r0.b` @type ^`androidx.core.util.e` @kind object;
  #L32c0e6.  call temp:= `a`(v10, v0) @signature `Landroidx/core/util/e;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L32c0ec.  return v9 @kind object;
  #L32c0ee.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32c0f0.  v10:= v8.`com.bumptech.glide.load.engine.r0.b` @type ^`androidx.core.util.e` @kind object;
  #L32c0f4.  call temp:= `a`(v10, v0) @signature `Landroidx/core/util/e;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L32c0fa.  throw v9;
  catch `java.lang.Throwable` @[L32c0da..L32c0e2] goto L32c0ee;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.r0` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/r0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32c1bc.  v0:= new `java.lang.StringBuilder`;
  #L32c1c0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32c1c6.  v1:= "LoadPath{decodePaths=" @kind object;
  #L32c1ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32c1d0.  v1:= v2.`com.bumptech.glide.load.engine.r0.c` @type ^`java.util.List` @kind object;
  #L32c1d4.  call temp:= `toArray`(v1) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L32c1da.  v1:= temp @kind object;
  #L32c1dc.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L32c1e2.  v1:= temp @kind object;
  #L32c1e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32c1ea.  v1:= 125I;
  #L32c1ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32c1f4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32c1fa.  v0:= temp @kind object;
  #L32c1fc.  return v0 @kind object;
}
