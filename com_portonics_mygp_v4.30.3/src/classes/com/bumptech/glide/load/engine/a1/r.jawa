record `com.bumptech.glide.load.engine.a1.r` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `com.bumptech.glide.load.engine.a1.r.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.a1.r.b` @AccessFlag PRIVATE_FINAL;
  `android.content.Context` `com.bumptech.glide.load.engine.a1.r.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.a1.r.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.a1.r` v6 @kind this, `com.bumptech.glide.load.engine.a1.o` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/a1/r;.<init>:(Lcom/bumptech/glide/load/engine/a1/o;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L32fb58.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32fb5e.  v0:= v7.`com.bumptech.glide.load.engine.a1.o.b` @type ^`android.content.Context` @kind object;
  #L32fb62.  v6.`com.bumptech.glide.load.engine.a1.r.c` @type ^`android.content.Context` := v0 @kind object;
  #L32fb66.  v0:= v7.`com.bumptech.glide.load.engine.a1.o.c` @type ^`android.app.ActivityManager` @kind object;
  #L32fb6a.  call temp:= `e`(v0) @signature `Lcom/bumptech/glide/load/engine/a1/r;.e:(Landroid/app/ActivityManager;)Z` @kind static;
  #L32fb70.  v0:= temp;
  #L32fb72.  if v0 == 0 then goto L32fb80;
  #L32fb76.  v0:= v7.`com.bumptech.glide.load.engine.a1.o.i` @type ^`int`;
  #L32fb7a.  v0:= v0 / 2;
  #L32fb7e.  goto L32fb84;
  #L32fb80.  v0:= v7.`com.bumptech.glide.load.engine.a1.o.i` @type ^`int`;
  #L32fb84.  v6.`com.bumptech.glide.load.engine.a1.r.d` @type ^`int` := v0;
  #L32fb88.  v1:= v7.`com.bumptech.glide.load.engine.a1.o.c` @type ^`android.app.ActivityManager` @kind object;
  #L32fb8c.  v2:= v7.`com.bumptech.glide.load.engine.a1.o.g` @type ^`float`;
  #L32fb90.  v3:= v7.`com.bumptech.glide.load.engine.a1.o.h` @type ^`float`;
  #L32fb94.  call temp:= `c`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/engine/a1/r;.c:(Landroid/app/ActivityManager;FF)I` @kind static;
  #L32fb9a.  v1:= temp;
  #L32fb9c.  v2:= v7.`com.bumptech.glide.load.engine.a1.o.d` @type ^`com.bumptech.glide.load.engine.a1.q` @kind object;
  #L32fba0.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/engine/a1/q;.b:()I` @kind interface;
  #L32fba6.  v2:= temp;
  #L32fba8.  v3:= v7.`com.bumptech.glide.load.engine.a1.o.d` @type ^`com.bumptech.glide.load.engine.a1.q` @kind object;
  #L32fbac.  call temp:= `a`(v3) @signature `Lcom/bumptech/glide/load/engine/a1/q;.a:()I` @kind interface;
  #L32fbb2.  v3:= temp;
  #L32fbb4.  v2:= v2 * v3 @kind int;
  #L32fbb8.  v2:= v2 * 4;
  #L32fbbc.  v2:= (`float`) v2 @kind i2f;
  #L32fbbe.  v3:= v7.`com.bumptech.glide.load.engine.a1.o.f` @type ^`float`;
  #L32fbc2.  v3:= v3 * v2 @kind float;
  #L32fbc6.  call temp:= `round`(v3) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L32fbcc.  v3:= temp;
  #L32fbce.  v4:= v7.`com.bumptech.glide.load.engine.a1.o.e` @type ^`float`;
  #L32fbd2.  v2:= v2 * v4 @kind float;
  #L32fbd6.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L32fbdc.  v2:= temp;
  #L32fbde.  v4:= v1 - v0 @kind int;
  #L32fbe2.  v5:= v2 + v3 @kind int;
  #L32fbe6.  if v5 > v4 then goto L32fbf4;
  #L32fbea.  v6.`com.bumptech.glide.load.engine.a1.r.b` @type ^`int` := v2;
  #L32fbee.  v6.`com.bumptech.glide.load.engine.a1.r.a` @type ^`int` := v3;
  #L32fbf2.  goto L32fc26;
  #L32fbf4.  v2:= (`float`) v4 @kind i2f;
  #L32fbf6.  v3:= v7.`com.bumptech.glide.load.engine.a1.o.f` @type ^`float`;
  #L32fbfa.  v4:= v7.`com.bumptech.glide.load.engine.a1.o.e` @type ^`float`;
  #L32fbfe.  v3:= v3 + v4 @kind float;
  #L32fc00.  v2:= v2 / v3 @kind float;
  #L32fc02.  v4:= v4 * v2 @kind float;
  #L32fc06.  call temp:= `round`(v4) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L32fc0c.  v3:= temp;
  #L32fc0e.  v6.`com.bumptech.glide.load.engine.a1.r.b` @type ^`int` := v3;
  #L32fc12.  v3:= v7.`com.bumptech.glide.load.engine.a1.o.f` @type ^`float`;
  #L32fc16.  v2:= v2 * v3 @kind float;
  #L32fc1a.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L32fc20.  v2:= temp;
  #L32fc22.  v6.`com.bumptech.glide.load.engine.a1.r.a` @type ^`int` := v2;
  #L32fc26.  v2:= 3I;
  #L32fc28.  v3:= "MemorySizeCalculator" @kind object;
  #L32fc2c.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L32fc32.  v2:= temp;
  #L32fc34.  if v2 == 0 then goto L32fd02;
  #L32fc38.  v2:= new `java.lang.StringBuilder`;
  #L32fc3c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32fc42.  v3:= "Calculation complete, Calculated memory cache size: " @kind object;
  #L32fc46.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fc4c.  v3:= v6.`com.bumptech.glide.load.engine.a1.r.b` @type ^`int`;
  #L32fc50.  call temp:= `f`(v6, v3) @signature `Lcom/bumptech/glide/load/engine/a1/r;.f:(I)Ljava/lang/String;` @kind direct;
  #L32fc56.  v3:= temp @kind object;
  #L32fc58.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fc5e.  v3:= ", pool size: " @kind object;
  #L32fc62.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fc68.  v3:= v6.`com.bumptech.glide.load.engine.a1.r.a` @type ^`int`;
  #L32fc6c.  call temp:= `f`(v6, v3) @signature `Lcom/bumptech/glide/load/engine/a1/r;.f:(I)Ljava/lang/String;` @kind direct;
  #L32fc72.  v3:= temp @kind object;
  #L32fc74.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fc7a.  v3:= ", byte array size: " @kind object;
  #L32fc7e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fc84.  call temp:= `f`(v6, v0) @signature `Lcom/bumptech/glide/load/engine/a1/r;.f:(I)Ljava/lang/String;` @kind direct;
  #L32fc8a.  v0:= temp @kind object;
  #L32fc8c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fc92.  v0:= ", memory class limited? " @kind object;
  #L32fc96.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fc9c.  if v5 <= v1 then goto L32fca4;
  #L32fca0.  v0:= 1I;
  #L32fca2.  goto L32fca6;
  #L32fca4.  v0:= 0I;
  #L32fca6.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fcac.  v0:= ", max size: " @kind object;
  #L32fcb0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fcb6.  call temp:= `f`(v6, v1) @signature `Lcom/bumptech/glide/load/engine/a1/r;.f:(I)Ljava/lang/String;` @kind direct;
  #L32fcbc.  v0:= temp @kind object;
  #L32fcbe.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fcc4.  v0:= ", memoryClass: " @kind object;
  #L32fcc8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fcce.  v0:= v7.`com.bumptech.glide.load.engine.a1.o.c` @type ^`android.app.ActivityManager` @kind object;
  #L32fcd2.  call temp:= `getMemoryClass`(v0) @signature `Landroid/app/ActivityManager;.getMemoryClass:()I` @kind virtual;
  #L32fcd8.  v0:= temp;
  #L32fcda.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fce0.  v0:= ", isLowMemoryDevice: " @kind object;
  #L32fce4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fcea.  v7:= v7.`com.bumptech.glide.load.engine.a1.o.c` @type ^`android.app.ActivityManager` @kind object;
  #L32fcee.  call temp:= `e`(v7) @signature `Lcom/bumptech/glide/load/engine/a1/r;.e:(Landroid/app/ActivityManager;)Z` @kind static;
  #L32fcf4.  v7:= temp;
  #L32fcf6.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fcfc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32fd02.  return @kind void;
}
procedure `int` `c`(`android.app.ActivityManager` v1 @kind object, `float` v2 , `float` v3 ) @signature `Lcom/bumptech/glide/load/engine/a1/r;.c:(Landroid/app/ActivityManager;FF)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L32fae0.  call temp:= `getMemoryClass`(v1) @signature `Landroid/app/ActivityManager;.getMemoryClass:()I` @kind virtual;
  #L32fae6.  v0:= temp;
  #L32fae8.  v0:= v0 * 1024;
  #L32faec.  v0:= v0 * 1024;
  #L32faf0.  call temp:= `e`(v1) @signature `Lcom/bumptech/glide/load/engine/a1/r;.e:(Landroid/app/ActivityManager;)Z` @kind static;
  #L32faf6.  v1:= temp;
  #L32faf8.  v0:= (`float`) v0 @kind i2f;
  #L32fafa.  if v1 == 0 then goto L32fb00;
  #L32fafe.  v2:= v3;
  #L32fb00.  v0:= v0 * v2 @kind float;
  #L32fb04.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L32fb0a.  v1:= temp;
  #L32fb0c.  return v1;
}
procedure `boolean` `e`(`android.app.ActivityManager` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/a1/r;.e:(Landroid/app/ActivityManager;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L32fa84.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L32fa88.  v1:= 19I;
  #L32fa8c.  if v0 < v1 then goto L32fa9a;
  #L32fa90.  call temp:= `isLowRamDevice`(v2) @signature `Landroid/app/ActivityManager;.isLowRamDevice:()Z` @kind virtual;
  #L32fa96.  v2:= temp;
  #L32fa98.  return v2;
  #L32fa9a.  v2:= 1I;
  #L32fa9c.  return v2;
}
procedure `java.lang.String` `f`(`com.bumptech.glide.load.engine.a1.r` v3 @kind this, `int` v4 ) @signature `Lcom/bumptech/glide/load/engine/a1/r;.f:(I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L32fb38.  v0:= v3.`com.bumptech.glide.load.engine.a1.r.c` @type ^`android.content.Context` @kind object;
  #L32fb3c.  v1:= (`long`) v4 @kind i2l;
  #L32fb3e.  call temp:= `formatFileSize`(v0, v1) @signature `Landroid/text/format/Formatter;.formatFileSize:(Landroid/content/Context;J)Ljava/lang/String;` @kind static;
  #L32fb44.  v4:= temp @kind object;
  #L32fb46.  return v4 @kind object;
}
procedure `int` `a`(`com.bumptech.glide.load.engine.a1.r` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/a1/r;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32fab0.  v0:= v1.`com.bumptech.glide.load.engine.a1.r.d` @type ^`int`;
  #L32fab4.  return v0;
}
procedure `int` `b`(`com.bumptech.glide.load.engine.a1.r` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/a1/r;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32fac8.  v0:= v1.`com.bumptech.glide.load.engine.a1.r.a` @type ^`int`;
  #L32facc.  return v0;
}
procedure `int` `d`(`com.bumptech.glide.load.engine.a1.r` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/a1/r;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32fb20.  v0:= v1.`com.bumptech.glide.load.engine.a1.r.b` @type ^`int`;
  #L32fb24.  return v0;
}
