record `com.bumptech.glide.load.engine.bitmap_recycle.v` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.engine.bitmap_recycle.t` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.w` `com.bumptech.glide.load.engine.bitmap_recycle.v.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.v.b` @AccessFlag ;
  `android.graphics.Bitmap$Config` `com.bumptech.glide.load.engine.bitmap_recycle.v.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.v` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.w` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/v;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/w;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32eb54.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32eb5a.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.v.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.w` := v1 @kind object;
  #L32eb5e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.v` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/v;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32eb8c.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.v.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.w` @kind object;
  #L32eb90.  call `c`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/f;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/t;)V` @kind virtual;
  #L32eb96.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.v` v0 @kind this, `int` v1 , `android.graphics.Bitmap$Config` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/v;.b:(ILandroid/graphics/Bitmap$Config;)V` @AccessFlag PUBLIC {
    temp;

  #L32eb70.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.v.b` @type ^`int` := v1;
  #L32eb74.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.v.c` @type ^`android.graphics.Bitmap$Config` := v2 @kind object;
  #L32eb78.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.bitmap_recycle.v` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/v;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32eabc.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.bitmap_recycle.v` @kind boolean;
  #L32eac0.  v1:= 0I;
  #L32eac2.  if v0 == 0 then goto L32eaec;
  #L32eac6.  v4:= (`com.bumptech.glide.load.engine.bitmap_recycle.v`) v4 @kind object;
  #L32eaca.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.v.b` @type ^`int`;
  #L32eace.  v2:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.v.b` @type ^`int`;
  #L32ead2.  if v0 != v2 then goto L32eaec;
  #L32ead6.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.v.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32eada.  v4:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.v.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32eade.  call temp:= `d`(v0, v4) @signature `Lcom/bumptech/glide/s/p;.d:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L32eae4.  v4:= temp;
  #L32eae6.  if v4 == 0 then goto L32eaec;
  #L32eaea.  v1:= 1I;
  #L32eaec.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.bitmap_recycle.v` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/v;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32eb00.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.v.b` @type ^`int`;
  #L32eb04.  v0:= v0 * 31;
  #L32eb08.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.v.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32eb0c.  if v1 == 0 then goto L32eb1a;
  #L32eb10.  call temp:= `hashCode`(v1) @signature `Landroid/graphics/Bitmap$Config;.hashCode:()I` @kind virtual;
  #L32eb16.  v1:= temp;
  #L32eb18.  goto L32eb1c;
  #L32eb1a.  v1:= 0I;
  #L32eb1c.  v0:= v0 + v1 @kind int;
  #L32eb1e.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.v` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/v;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32eb30.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.v.b` @type ^`int`;
  #L32eb34.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.v.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32eb38.  call temp:= `h`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.h:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L32eb3e.  v0:= temp @kind object;
  #L32eb40.  return v0 @kind object;
}
