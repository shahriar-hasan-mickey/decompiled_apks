record `com.bumptech.glide.load.engine.x` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.y` @kind class {
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.x` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/x;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L329f50.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/y;.<init>:()V` @kind direct;
  #L329f56.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.x` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/x;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329ed4.  v0:= 1I;
  #L329ed6.  return v0;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.x` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/x;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329ee8.  v0:= 1I;
  #L329eea.  return v0;
}
procedure `boolean` `c`(`com.bumptech.glide.load.engine.x` v1 @kind this, `com.bumptech.glide.load.DataSource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/x;.c:(Lcom/bumptech/glide/load/DataSource;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329efc.  v0:= `@@com.bumptech.glide.load.DataSource.REMOTE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L329f00.  if v2 != v0 then goto L329f08;
  #L329f04.  v2:= 1I;
  #L329f06.  goto L329f0a;
  #L329f08.  v2:= 0I;
  #L329f0a.  return v2;
}
procedure `boolean` `d`(`com.bumptech.glide.load.engine.x` v0 @kind this, `boolean` v1 , `com.bumptech.glide.load.DataSource` v2 @kind object, `com.bumptech.glide.load.EncodeStrategy` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/x;.d:(ZLcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/EncodeStrategy;)Z` @AccessFlag PUBLIC {
    temp;

  #L329f1c.  if v1 == 0 then goto L329f28;
  #L329f20.  v1:= `@@com.bumptech.glide.load.DataSource.DATA_DISK_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L329f24.  if v2 == v1 then goto L329f30;
  #L329f28.  v1:= `@@com.bumptech.glide.load.DataSource.LOCAL` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L329f2c.  if v2 != v1 then goto L329f3c;
  #L329f30.  v1:= `@@com.bumptech.glide.load.EncodeStrategy.TRANSFORMED` @type ^`com.bumptech.glide.load.EncodeStrategy` @kind object;
  #L329f34.  if v3 != v1 then goto L329f3c;
  #L329f38.  v1:= 1I;
  #L329f3a.  goto L329f3e;
  #L329f3c.  v1:= 0I;
  #L329f3e.  return v1;
}
