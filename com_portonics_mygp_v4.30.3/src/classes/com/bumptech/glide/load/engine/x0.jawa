record `com.bumptech.glide.load.engine.x0` @kind class @AccessFlag FINAL extends `android.os.Handler$Callback` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.x0` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/x0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32cb88.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32cb8e.  return @kind void;
}
procedure `boolean` `handleMessage`(`com.bumptech.glide.load.engine.x0` v2 @kind this, `android.os.Message` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/x0;.handleMessage:(Landroid/os/Message;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32cb58.  v0:= v3.`android.os.Message.what` @type ^`int`;
  #L32cb5c.  v1:= 1I;
  #L32cb5e.  if v0 != v1 then goto L32cb72;
  #L32cb62.  v3:= v3.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L32cb66.  v3:= (`com.bumptech.glide.load.engine.u0`) v3 @kind object;
  #L32cb6a.  call `c`(v3) @signature `Lcom/bumptech/glide/load/engine/u0;.c:()V` @kind interface;
  #L32cb70.  return v1;
  #L32cb72.  v3:= 0I;
  #L32cb74.  return v3;
}
