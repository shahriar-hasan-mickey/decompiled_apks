record `com.bumptech.glide.load.engine.bitmap_recycle.PrettyPrintTreeMap` @kind class @AccessFlag  extends `java.util.TreeMap` @kind class {
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.PrettyPrintTreeMap` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/PrettyPrintTreeMap;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32e984.  call `<init>`(v0) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L32e98a.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.PrettyPrintTreeMap` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/PrettyPrintTreeMap;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32e8bc.  v0:= new `java.lang.StringBuilder`;
  #L32e8c0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e8c6.  v1:= "( " @kind object;
  #L32e8ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e8d0.  call temp:= `entrySet`(v4) @signature `Ljava/util/TreeMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L32e8d6.  v1:= temp @kind object;
  #L32e8d8.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32e8de.  v1:= temp @kind object;
  #L32e8e0.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32e8e6.  v2:= temp;
  #L32e8e8.  if v2 == 0 then goto L32e934;
  #L32e8ec.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32e8f2.  v2:= temp @kind object;
  #L32e8f4.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L32e8f8.  v3:= 123I;
  #L32e8fc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e902.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L32e908.  v3:= temp @kind object;
  #L32e90a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e910.  v3:= 58I;
  #L32e914.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e91a.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L32e920.  v2:= temp @kind object;
  #L32e922.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e928.  v2:= "}, " @kind object;
  #L32e92c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e932.  goto L32e8e0;
  #L32e934.  call temp:= `isEmpty`(v4) @signature `Ljava/util/TreeMap;.isEmpty:()Z` @kind virtual;
  #L32e93a.  v1:= temp;
  #L32e93c.  if v1 != 0 then goto L32e95e;
  #L32e940.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L32e946.  v1:= temp;
  #L32e948.  v1:= v1 + -2;
  #L32e94c.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L32e952.  v2:= temp;
  #L32e954.  v3:= "" @kind object;
  #L32e958.  call temp:= `replace`(v0, v1, v2, v3) @signature `Ljava/lang/StringBuilder;.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e95e.  v1:= " )" @kind object;
  #L32e962.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e968.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e96e.  v0:= temp @kind object;
  #L32e970.  return v0 @kind object;
}
