record `com.bumptech.glide.load.engine.w` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.y` @kind class {
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.w` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/w;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L329ebc.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/y;.<init>:()V` @kind direct;
  #L329ec2.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.w` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/w;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329e58.  v0:= 0I;
  #L329e5a.  return v0;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.w` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/w;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329e6c.  v0:= 1I;
  #L329e6e.  return v0;
}
procedure `boolean` `c`(`com.bumptech.glide.load.engine.w` v0 @kind this, `com.bumptech.glide.load.DataSource` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/w;.c:(Lcom/bumptech/glide/load/DataSource;)Z` @AccessFlag PUBLIC {
    temp;

  #L329e80.  v1:= 0I;
  #L329e82.  return v1;
}
procedure `boolean` `d`(`com.bumptech.glide.load.engine.w` v0 @kind this, `boolean` v1 , `com.bumptech.glide.load.DataSource` v2 @kind object, `com.bumptech.glide.load.EncodeStrategy` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/w;.d:(ZLcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/EncodeStrategy;)Z` @AccessFlag PUBLIC {
    temp;

  #L329e94.  v1:= `@@com.bumptech.glide.load.DataSource.RESOURCE_DISK_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L329e98.  if v2 == v1 then goto L329ea8;
  #L329e9c.  v1:= `@@com.bumptech.glide.load.DataSource.MEMORY_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L329ea0.  if v2 == v1 then goto L329ea8;
  #L329ea4.  v1:= 1I;
  #L329ea6.  goto L329eaa;
  #L329ea8.  v1:= 0I;
  #L329eaa.  return v1;
}
