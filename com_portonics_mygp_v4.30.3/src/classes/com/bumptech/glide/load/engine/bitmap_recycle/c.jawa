record `com.bumptech.glide.load.engine.bitmap_recycle.c` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.bitmap_recycle.t` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.d` `com.bumptech.glide.load.engine.bitmap_recycle.c.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.c.b` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.c.c` @AccessFlag PRIVATE;
  `android.graphics.Bitmap$Config` `com.bumptech.glide.load.engine.bitmap_recycle.c.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.c` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.d` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32d11c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32d122.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.c.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` := v1 @kind object;
  #L32d126.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.c` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d158.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.c.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L32d15c.  call `c`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/f;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/t;)V` @kind virtual;
  #L32d162.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.c` v0 @kind this, `int` v1 , `int` v2 , `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.b:(IILandroid/graphics/Bitmap$Config;)V` @AccessFlag PUBLIC {
    temp;

  #L32d138.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.c.b` @type ^`int` := v1;
  #L32d13c.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.c.c` @type ^`int` := v2;
  #L32d140.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.c.d` @type ^`android.graphics.Bitmap$Config` := v3 @kind object;
  #L32d144.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.bitmap_recycle.c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32d070.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.bitmap_recycle.c` @kind boolean;
  #L32d074.  v1:= 0I;
  #L32d076.  if v0 == 0 then goto L32d0a4;
  #L32d07a.  v4:= (`com.bumptech.glide.load.engine.bitmap_recycle.c`) v4 @kind object;
  #L32d07e.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.c.b` @type ^`int`;
  #L32d082.  v2:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.c.b` @type ^`int`;
  #L32d086.  if v0 != v2 then goto L32d0a4;
  #L32d08a.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.c.c` @type ^`int`;
  #L32d08e.  v2:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.c.c` @type ^`int`;
  #L32d092.  if v0 != v2 then goto L32d0a4;
  #L32d096.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.c.d` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32d09a.  v4:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.c.d` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32d09e.  if v0 != v4 then goto L32d0a4;
  #L32d0a2.  v1:= 1I;
  #L32d0a4.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.bitmap_recycle.c` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32d0b8.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.c.b` @type ^`int`;
  #L32d0bc.  v0:= v0 * 31;
  #L32d0c0.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.c.c` @type ^`int`;
  #L32d0c4.  v0:= v0 + v1 @kind int;
  #L32d0c6.  v0:= v0 * 31;
  #L32d0ca.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.c.d` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32d0ce.  if v1 == 0 then goto L32d0dc;
  #L32d0d2.  call temp:= `hashCode`(v1) @signature `Landroid/graphics/Bitmap$Config;.hashCode:()I` @kind virtual;
  #L32d0d8.  v1:= temp;
  #L32d0da.  goto L32d0de;
  #L32d0dc.  v1:= 0I;
  #L32d0de.  v0:= v0 + v1 @kind int;
  #L32d0e0.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.c` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32d0f4.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.c.b` @type ^`int`;
  #L32d0f8.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.c.c` @type ^`int`;
  #L32d0fc.  v2:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.c.d` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32d100.  call temp:= `f`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.f:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L32d106.  v0:= temp @kind object;
  #L32d108.  return v0 @kind object;
}
