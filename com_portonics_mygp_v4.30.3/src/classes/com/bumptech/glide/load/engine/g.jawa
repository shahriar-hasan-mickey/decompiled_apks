record `com.bumptech.glide.load.engine.g` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.k` @kind interface, `com.bumptech.glide.load.l.d` @kind interface {
  `java.util.List` `com.bumptech.glide.load.engine.g.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.l` `com.bumptech.glide.load.engine.g.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.j` `com.bumptech.glide.load.engine.g.d` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.g.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.c` `com.bumptech.glide.load.engine.g.f` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.load.engine.g.g` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.g.h` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.m.p0` `com.bumptech.glide.load.engine.g.i` @AccessFlag PRIVATE_VOLATILE;
  `java.io.File` `com.bumptech.glide.load.engine.g.j` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.g` v1 @kind this, `com.bumptech.glide.load.engine.l` v2 @kind object, `com.bumptech.glide.load.engine.j` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.<init>:(Lcom/bumptech/glide/load/engine/l;Lcom/bumptech/glide/load/engine/j;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L327ef8.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/load/engine/l;.c:()Ljava/util/List;` @kind virtual;
  #L327efe.  v0:= temp @kind object;
  #L327f00.  call `<init>`(v1, v0, v2, v3) @signature `Lcom/bumptech/glide/load/engine/g;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/engine/l;Lcom/bumptech/glide/load/engine/j;)V` @kind direct;
  #L327f06.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.g` v1 @kind this, `java.util.List` v2 @kind object, `com.bumptech.glide.load.engine.l` v3 @kind object, `com.bumptech.glide.load.engine.j` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/engine/l;Lcom/bumptech/glide/load/engine/j;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L327f18.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L327f1e.  v0:= -1I;
  #L327f20.  v1.`com.bumptech.glide.load.engine.g.e` @type ^`int` := v0;
  #L327f24.  v1.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` := v2 @kind object;
  #L327f28.  v1.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.load.engine.l` := v3 @kind object;
  #L327f2c.  v1.`com.bumptech.glide.load.engine.g.d` @type ^`com.bumptech.glide.load.engine.j` := v4 @kind object;
  #L327f30.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.g` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L327d74.  v0:= v2.`com.bumptech.glide.load.engine.g.h` @type ^`int`;
  #L327d78.  v1:= v2.`com.bumptech.glide.load.engine.g.g` @type ^`java.util.List` @kind object;
  #L327d7c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L327d82.  v1:= temp;
  #L327d84.  if v0 >= v1 then goto L327d8c;
  #L327d88.  v0:= 1I;
  #L327d8a.  goto L327d8e;
  #L327d8c.  v0:= 0I;
  #L327d8e.  return v0;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.g` v7 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L327da0.  v0:= v7.`com.bumptech.glide.load.engine.g.g` @type ^`java.util.List` @kind object;
  #L327da4.  v1:= 0I;
  #L327da6.  v2:= 1I;
  #L327da8.  if v0 == 0 then goto L327e68;
  #L327dac.  call temp:= `a`(v7) @signature `Lcom/bumptech/glide/load/engine/g;.a:()Z` @kind direct;
  #L327db2.  v0:= temp;
  #L327db4.  if v0 != 0 then goto L327dba;
  #L327db8.  goto L327e68;
  #L327dba.  v0:= 0I;
  #L327dbc.  v7.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.m.p0` := v0 @kind object;
  #L327dc0.  if v1 != 0 then goto L327e66;
  #L327dc4.  call temp:= `a`(v7) @signature `Lcom/bumptech/glide/load/engine/g;.a:()Z` @kind direct;
  #L327dca.  v0:= temp;
  #L327dcc.  if v0 == 0 then goto L327e66;
  #L327dd0.  v0:= v7.`com.bumptech.glide.load.engine.g.g` @type ^`java.util.List` @kind object;
  #L327dd4.  v3:= v7.`com.bumptech.glide.load.engine.g.h` @type ^`int`;
  #L327dd8.  v4:= v3 + 1;
  #L327ddc.  v7.`com.bumptech.glide.load.engine.g.h` @type ^`int` := v4;
  #L327de0.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L327de6.  v0:= temp @kind object;
  #L327de8.  v0:= (`com.bumptech.glide.load.m.q0`) v0 @kind object;
  #L327dec.  v3:= v7.`com.bumptech.glide.load.engine.g.j` @type ^`java.io.File` @kind object;
  #L327df0.  v4:= v7.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.load.engine.l` @kind object;
  #L327df4.  call temp:= `s`(v4) @signature `Lcom/bumptech/glide/load/engine/l;.s:()I` @kind virtual;
  #L327dfa.  v4:= temp;
  #L327dfc.  v5:= v7.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.load.engine.l` @kind object;
  #L327e00.  call temp:= `f`(v5) @signature `Lcom/bumptech/glide/load/engine/l;.f:()I` @kind virtual;
  #L327e06.  v5:= temp;
  #L327e08.  v6:= v7.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.load.engine.l` @kind object;
  #L327e0c.  call temp:= `k`(v6) @signature `Lcom/bumptech/glide/load/engine/l;.k:()Lcom/bumptech/glide/load/h;` @kind virtual;
  #L327e12.  v6:= temp @kind object;
  #L327e14.  call temp:= `b`(v0, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/m/q0;.b:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @kind interface;
  #L327e1a.  v0:= temp @kind object;
  #L327e1c.  v7.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.m.p0` := v0 @kind object;
  #L327e20.  v0:= v7.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.m.p0` @kind object;
  #L327e24.  if v0 == 0 then goto L327dc0;
  #L327e28.  v0:= v7.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.load.engine.l` @kind object;
  #L327e2c.  v3:= v7.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.m.p0` @kind object;
  #L327e30.  v3:= v3.`com.bumptech.glide.load.m.p0.c` @type ^`com.bumptech.glide.load.l.e` @kind object;
  #L327e34.  call temp:= `a`(v3) @signature `Lcom/bumptech/glide/load/l/e;.a:()Ljava/lang/Class;` @kind interface;
  #L327e3a.  v3:= temp @kind object;
  #L327e3c.  call temp:= `t`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/l;.t:(Ljava/lang/Class;)Z` @kind virtual;
  #L327e42.  v0:= temp;
  #L327e44.  if v0 == 0 then goto L327dc0;
  #L327e48.  v0:= v7.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.m.p0` @kind object;
  #L327e4c.  v0:= v0.`com.bumptech.glide.load.m.p0.c` @type ^`com.bumptech.glide.load.l.e` @kind object;
  #L327e50.  v1:= v7.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.load.engine.l` @kind object;
  #L327e54.  call temp:= `l`(v1) @signature `Lcom/bumptech/glide/load/engine/l;.l:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L327e5a.  v1:= temp @kind object;
  #L327e5c.  call `e`(v0, v1, v7) @signature `Lcom/bumptech/glide/load/l/e;.e:(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/l/d;)V` @kind interface;
  #L327e62.  v1:= 1I;
  #L327e64.  goto L327dc0;
  #L327e66.  return v1;
  #L327e68.  v0:= v7.`com.bumptech.glide.load.engine.g.e` @type ^`int`;
  #L327e6c.  v0:= v0 + v2 @kind int;
  #L327e6e.  v7.`com.bumptech.glide.load.engine.g.e` @type ^`int` := v0;
  #L327e72.  v2:= v7.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L327e76.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L327e7c.  v2:= temp;
  #L327e7e.  if v0 < v2 then goto L327e84;
  #L327e82.  return v1;
  #L327e84.  v0:= v7.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L327e88.  v2:= v7.`com.bumptech.glide.load.engine.g.e` @type ^`int`;
  #L327e8c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L327e92.  v0:= temp @kind object;
  #L327e94.  v0:= (`com.bumptech.glide.load.c`) v0 @kind object;
  #L327e98.  v2:= new `com.bumptech.glide.load.engine.h`;
  #L327e9c.  v3:= v7.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.load.engine.l` @kind object;
  #L327ea0.  call temp:= `o`(v3) @signature `Lcom/bumptech/glide/load/engine/l;.o:()Lcom/bumptech/glide/load/c;` @kind virtual;
  #L327ea6.  v3:= temp @kind object;
  #L327ea8.  call `<init>`(v2, v0, v3) @signature `Lcom/bumptech/glide/load/engine/h;.<init>:(Lcom/bumptech/glide/load/c;Lcom/bumptech/glide/load/c;)V` @kind direct;
  #L327eae.  v3:= v7.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.load.engine.l` @kind object;
  #L327eb2.  call temp:= `d`(v3) @signature `Lcom/bumptech/glide/load/engine/l;.d:()Lcom/bumptech/glide/load/engine/a1/a;` @kind virtual;
  #L327eb8.  v3:= temp @kind object;
  #L327eba.  call temp:= `b`(v3, v2) @signature `Lcom/bumptech/glide/load/engine/a1/a;.b:(Lcom/bumptech/glide/load/c;)Ljava/io/File;` @kind interface;
  #L327ec0.  v2:= temp @kind object;
  #L327ec2.  v7.`com.bumptech.glide.load.engine.g.j` @type ^`java.io.File` := v2 @kind object;
  #L327ec6.  if v2 == 0 then goto L327da0;
  #L327eca.  v7.`com.bumptech.glide.load.engine.g.f` @type ^`com.bumptech.glide.load.c` := v0 @kind object;
  #L327ece.  v0:= v7.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.load.engine.l` @kind object;
  #L327ed2.  call temp:= `j`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/l;.j:(Ljava/io/File;)Ljava/util/List;` @kind virtual;
  #L327ed8.  v0:= temp @kind object;
  #L327eda.  v7.`com.bumptech.glide.load.engine.g.g` @type ^`java.util.List` := v0 @kind object;
  #L327ede.  v7.`com.bumptech.glide.load.engine.g.h` @type ^`int` := v1;
  #L327ee2.  goto L327da0;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.g` v4 @kind this, `java.lang.Exception` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.c:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L327f9c.  v0:= v4.`com.bumptech.glide.load.engine.g.d` @type ^`com.bumptech.glide.load.engine.j` @kind object;
  #L327fa0.  v1:= v4.`com.bumptech.glide.load.engine.g.f` @type ^`com.bumptech.glide.load.c` @kind object;
  #L327fa4.  v2:= v4.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.m.p0` @kind object;
  #L327fa8.  v2:= v2.`com.bumptech.glide.load.m.p0.c` @type ^`com.bumptech.glide.load.l.e` @kind object;
  #L327fac.  v3:= `@@com.bumptech.glide.load.DataSource.DATA_DISK_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L327fb0.  call `a`(v0, v1, v5, v2, v3) @signature `Lcom/bumptech/glide/load/engine/j;.a:(Lcom/bumptech/glide/load/c;Ljava/lang/Exception;Lcom/bumptech/glide/load/l/e;Lcom/bumptech/glide/load/DataSource;)V` @kind interface;
  #L327fb6.  return @kind void;
}
procedure `void` `cancel`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L327f44.  v0:= v1.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.m.p0` @kind object;
  #L327f48.  if v0 == 0 then goto L327f56;
  #L327f4c.  v0:= v0.`com.bumptech.glide.load.m.p0.c` @type ^`com.bumptech.glide.load.l.e` @kind object;
  #L327f50.  call `cancel`(v0) @signature `Lcom/bumptech/glide/load/l/e;.cancel:()V` @kind interface;
  #L327f56.  return @kind void;
}
procedure `void` `f`(`com.bumptech.glide.load.engine.g` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.f:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L327f68.  v0:= v6.`com.bumptech.glide.load.engine.g.d` @type ^`com.bumptech.glide.load.engine.j` @kind object;
  #L327f6c.  v1:= v6.`com.bumptech.glide.load.engine.g.f` @type ^`com.bumptech.glide.load.c` @kind object;
  #L327f70.  v2:= v6.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.m.p0` @kind object;
  #L327f74.  v3:= v2.`com.bumptech.glide.load.m.p0.c` @type ^`com.bumptech.glide.load.l.e` @kind object;
  #L327f78.  v4:= `@@com.bumptech.glide.load.DataSource.DATA_DISK_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L327f7c.  v5:= v6.`com.bumptech.glide.load.engine.g.f` @type ^`com.bumptech.glide.load.c` @kind object;
  #L327f80.  v2:= v7 @kind object;
  #L327f82.  call `g`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/j;.g:(Lcom/bumptech/glide/load/c;Ljava/lang/Object;Lcom/bumptech/glide/load/l/e;Lcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/c;)V` @kind interface;
  #L327f88.  return @kind void;
}
