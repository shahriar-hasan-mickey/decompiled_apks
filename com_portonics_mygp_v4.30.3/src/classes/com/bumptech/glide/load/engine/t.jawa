record `com.bumptech.glide.load.engine.t` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.y` @kind class {
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.t` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L329d5c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/y;.<init>:()V` @kind direct;
  #L329d62.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.t` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329cec.  v0:= 1I;
  #L329cee.  return v0;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.t` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329d00.  v0:= 1I;
  #L329d02.  return v0;
}
procedure `boolean` `c`(`com.bumptech.glide.load.engine.t` v1 @kind this, `com.bumptech.glide.load.DataSource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/t;.c:(Lcom/bumptech/glide/load/DataSource;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329d14.  v0:= `@@com.bumptech.glide.load.DataSource.REMOTE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L329d18.  if v2 != v0 then goto L329d20;
  #L329d1c.  v2:= 1I;
  #L329d1e.  goto L329d22;
  #L329d20.  v2:= 0I;
  #L329d22.  return v2;
}
procedure `boolean` `d`(`com.bumptech.glide.load.engine.t` v0 @kind this, `boolean` v1 , `com.bumptech.glide.load.DataSource` v2 @kind object, `com.bumptech.glide.load.EncodeStrategy` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/t;.d:(ZLcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/EncodeStrategy;)Z` @AccessFlag PUBLIC {
    temp;

  #L329d34.  v1:= `@@com.bumptech.glide.load.DataSource.RESOURCE_DISK_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L329d38.  if v2 == v1 then goto L329d48;
  #L329d3c.  v1:= `@@com.bumptech.glide.load.DataSource.MEMORY_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L329d40.  if v2 == v1 then goto L329d48;
  #L329d44.  v1:= 1I;
  #L329d46.  goto L329d4a;
  #L329d48.  v1:= 0I;
  #L329d4a.  return v1;
}
