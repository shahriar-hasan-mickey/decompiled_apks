record `com.bumptech.glide.load.engine.bitmap_recycle.o` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.engine.bitmap_recycle.b` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.k` `com.bumptech.glide.load.engine.bitmap_recycle.o.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.n` `com.bumptech.glide.load.engine.bitmap_recycle.o.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.bitmap_recycle.o.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.bitmap_recycle.o.d` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.o.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.o.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32ddb8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32ddbe.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.k`;
  #L32ddc2.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.<init>:()V` @kind direct;
  #L32ddc8.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.o.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.k` := v0 @kind object;
  #L32ddcc.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.n`;
  #L32ddd0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/n;.<init>:()V` @kind direct;
  #L32ddd6.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.o.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.n` := v0 @kind object;
  #L32ddda.  v0:= new `java.util.HashMap`;
  #L32ddde.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L32dde4.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.o.c` @type ^`java.util.Map` := v0 @kind object;
  #L32dde8.  v0:= new `java.util.HashMap`;
  #L32ddec.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L32ddf2.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.o.d` @type ^`java.util.Map` := v0 @kind object;
  #L32ddf6.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.o.e` @type ^`int` := v2;
  #L32ddfa.  return @kind void;
}
procedure `void` `f`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v3 @kind this, `int` v4 , `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.f:(ILjava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L32de3c.  call temp:= `m`(v3, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.m:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @kind direct;
  #L32de42.  v5:= temp @kind object;
  #L32de44.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32de4a.  v0:= temp @kind object;
  #L32de4c.  call temp:= `get`(v5, v0) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32de52.  v0:= temp @kind object;
  #L32de54.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L32de58.  if v0 == 0 then goto L32de9c;
  #L32de5c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32de62.  v1:= temp;
  #L32de64.  v2:= 1I;
  #L32de66.  if v1 != v2 then goto L32de7a;
  #L32de6a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32de70.  v4:= temp @kind object;
  #L32de72.  call temp:= `remove`(v5, v4) @signature `Ljava/util/NavigableMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32de78.  goto L32de9a;
  #L32de7a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32de80.  v4:= temp @kind object;
  #L32de82.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32de88.  v0:= temp;
  #L32de8a.  v0:= v0 - v2 @kind int;
  #L32de8c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32de92.  v0:= temp @kind object;
  #L32de94.  call temp:= `put`(v5, v4, v0) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32de9a.  return @kind void;
  #L32de9c.  v5:= new `java.lang.NullPointerException`;
  #L32dea0.  v0:= new `java.lang.StringBuilder`;
  #L32dea4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32deaa.  v1:= "Tried to decrement empty size, size: " @kind object;
  #L32deae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32deb4.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32deba.  v4:= ", this: " @kind object;
  #L32debe.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dec4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32deca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32ded0.  v4:= temp @kind object;
  #L32ded2.  call `<init>`(v5, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32ded8.  throw v5;
}
procedure `void` `g`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.g:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32deec.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.o.e` @type ^`int`;
  #L32def0.  call `h`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.h:(I)V` @kind direct;
  #L32def6.  return @kind void;
}
procedure `void` `h`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v5 @kind this, `int` v6 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.h:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32df08.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.o.f` @type ^`int`;
  #L32df0c.  if v0 <= v6 then goto L32dfa4;
  #L32df10.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.o.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.k` @kind object;
  #L32df14.  call temp:= `f`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.f:()Ljava/lang/Object;` @kind virtual;
  #L32df1a.  v0:= temp @kind object;
  #L32df1c.  call temp:= `d`(v0) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L32df22.  call temp:= `i`(v5, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.i:(Ljava/lang/Object;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @kind direct;
  #L32df28.  v1:= temp @kind object;
  #L32df2a.  v2:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.o.f` @type ^`int`;
  #L32df2e.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.b:(Ljava/lang/Object;)I` @kind interface;
  #L32df34.  v3:= temp;
  #L32df36.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.a:()I` @kind interface;
  #L32df3c.  v4:= temp;
  #L32df3e.  v3:= v3 * v4 @kind int;
  #L32df42.  v2:= v2 - v3 @kind int;
  #L32df44.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.o.f` @type ^`int` := v2;
  #L32df48.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.b:(Ljava/lang/Object;)I` @kind interface;
  #L32df4e.  v2:= temp;
  #L32df50.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L32df56.  v3:= temp @kind object;
  #L32df58.  call `f`(v5, v2, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.f:(ILjava/lang/Class;)V` @kind direct;
  #L32df5e.  call temp:= `h`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.h:()Ljava/lang/String;` @kind interface;
  #L32df64.  v2:= temp @kind object;
  #L32df66.  v3:= 2I;
  #L32df68.  call temp:= `isLoggable`(v2, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L32df6e.  v2:= temp;
  #L32df70.  if v2 == 0 then goto L32df08;
  #L32df74.  call temp:= `h`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.h:()Ljava/lang/String;` @kind interface;
  #L32df7a.  v2:= new `java.lang.StringBuilder`;
  #L32df7e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32df84.  v3:= "evicted: " @kind object;
  #L32df88.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32df8e.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.b:(Ljava/lang/Object;)I` @kind interface;
  #L32df94.  v0:= temp;
  #L32df96.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32df9c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32dfa2.  goto L32df08;
  #L32dfa4.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.a` `i`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.i:(Ljava/lang/Object;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @AccessFlag PRIVATE {
    temp;

  #L32db34.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L32db3a.  v1:= temp @kind object;
  #L32db3c.  call temp:= `j`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.j:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @kind direct;
  #L32db42.  v1:= temp @kind object;
  #L32db44.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.a` `j`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.j:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L32db58.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.o.d` @type ^`java.util.Map` @kind object;
  #L32db5c.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32db62.  v0:= temp @kind object;
  #L32db64.  v0:= (`com.bumptech.glide.load.engine.bitmap_recycle.a`) v0 @kind object;
  #L32db68.  if v0 != 0 then goto L32dbe4;
  #L32db6c.  v0:= constclass @type ^`int`[] @kind object;
  #L32db70.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32db76.  v0:= temp;
  #L32db78.  if v0 == 0 then goto L32db88;
  #L32db7c.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.l`;
  #L32db80.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/l;.<init>:()V` @kind direct;
  #L32db86.  goto L32dba2;
  #L32db88.  v0:= constclass @type ^`byte`[] @kind object;
  #L32db8c.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32db92.  v0:= temp;
  #L32db94.  if v0 == 0 then goto L32dbae;
  #L32db98.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.i`;
  #L32db9c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/i;.<init>:()V` @kind direct;
  #L32dba2.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.o.d` @type ^`java.util.Map` @kind object;
  #L32dba6.  call temp:= `put`(v1, v4, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32dbac.  goto L32dbe4;
  #L32dbae.  v0:= new `java.lang.IllegalArgumentException`;
  #L32dbb2.  v1:= new `java.lang.StringBuilder`;
  #L32dbb6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32dbbc.  v2:= "No array pool found for: " @kind object;
  #L32dbc0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dbc6.  call temp:= `getSimpleName`(v4) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L32dbcc.  v4:= temp @kind object;
  #L32dbce.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dbd4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32dbda.  v4:= temp @kind object;
  #L32dbdc.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32dbe2.  throw v0;
  #L32dbe4.  return v0 @kind object;
}
procedure `java.lang.Object` `k`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v1 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.m` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.k:(Lcom/bumptech/glide/load/engine/bitmap_recycle/m;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32dc74.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.o.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.k` @kind object;
  #L32dc78.  call temp:= `a`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.a:(Lcom/bumptech/glide/load/engine/bitmap_recycle/t;)Ljava/lang/Object;` @kind virtual;
  #L32dc7e.  v2:= temp @kind object;
  #L32dc80.  return v2 @kind object;
}
procedure `java.lang.Object` `l`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v5 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.m` v6 @kind object, `java.lang.Class` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.l:(Lcom/bumptech/glide/load/engine/bitmap_recycle/m;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32dcd0.  call temp:= `j`(v5, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.j:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @kind direct;
  #L32dcd6.  v0:= temp @kind object;
  #L32dcd8.  call temp:= `k`(v5, v6) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.k:(Lcom/bumptech/glide/load/engine/bitmap_recycle/m;)Ljava/lang/Object;` @kind direct;
  #L32dcde.  v1:= temp @kind object;
  #L32dce0.  if v1 == 0 then goto L32dd10;
  #L32dce4.  v2:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.o.f` @type ^`int`;
  #L32dce8.  call temp:= `b`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.b:(Ljava/lang/Object;)I` @kind interface;
  #L32dcee.  v3:= temp;
  #L32dcf0.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.a:()I` @kind interface;
  #L32dcf6.  v4:= temp;
  #L32dcf8.  v3:= v3 * v4 @kind int;
  #L32dcfc.  v2:= v2 - v3 @kind int;
  #L32dcfe.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.o.f` @type ^`int` := v2;
  #L32dd02.  call temp:= `b`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.b:(Ljava/lang/Object;)I` @kind interface;
  #L32dd08.  v2:= temp;
  #L32dd0a.  call `f`(v5, v2, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.f:(ILjava/lang/Class;)V` @kind direct;
  #L32dd10.  if v1 != 0 then goto L32dd6a;
  #L32dd14.  call temp:= `h`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.h:()Ljava/lang/String;` @kind interface;
  #L32dd1a.  v7:= temp @kind object;
  #L32dd1c.  v1:= 2I;
  #L32dd1e.  call temp:= `isLoggable`(v7, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L32dd24.  v7:= temp;
  #L32dd26.  if v7 == 0 then goto L32dd5e;
  #L32dd2a.  call temp:= `h`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.h:()Ljava/lang/String;` @kind interface;
  #L32dd30.  v7:= new `java.lang.StringBuilder`;
  #L32dd34.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32dd3a.  v1:= "Allocated " @kind object;
  #L32dd3e.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dd44.  v1:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.m.b` @type ^`int`;
  #L32dd48.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dd4e.  v1:= " bytes" @kind object;
  #L32dd52.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dd58.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32dd5e.  v6:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.m.b` @type ^`int`;
  #L32dd62.  call temp:= `newArray`(v0, v6) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.newArray:(I)Ljava/lang/Object;` @kind interface;
  #L32dd68.  v1:= temp @kind object;
  #L32dd6a.  return v1 @kind object;
}
procedure `java.util.NavigableMap` `m`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.m:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32dd7c.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.o.c` @type ^`java.util.Map` @kind object;
  #L32dd80.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32dd86.  v0:= temp @kind object;
  #L32dd88.  v0:= (`java.util.NavigableMap`) v0 @kind object;
  #L32dd8c.  if v0 != 0 then goto L32dda4;
  #L32dd90.  v0:= new `java.util.TreeMap`;
  #L32dd94.  call `<init>`(v0) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L32dd9a.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.o.c` @type ^`java.util.Map` @kind object;
  #L32dd9e.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32dda4.  return v0 @kind object;
}
procedure `boolean` `n`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.n:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32daa8.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.o.f` @type ^`int`;
  #L32daac.  if v0 == 0 then goto L32dac2;
  #L32dab0.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.o.e` @type ^`int`;
  #L32dab4.  v1:= v1 / v0 @kind int;
  #L32dab6.  v0:= 2I;
  #L32dab8.  if v1 < v0 then goto L32dabe;
  #L32dabc.  goto L32dac2;
  #L32dabe.  v0:= 0I;
  #L32dac0.  goto L32dac4;
  #L32dac2.  v0:= 1I;
  #L32dac4.  return v0;
}
procedure `boolean` `o`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.o:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32dad8.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.o.e` @type ^`int`;
  #L32dadc.  v0:= v0 / 2;
  #L32dae0.  if v2 > v0 then goto L32dae8;
  #L32dae4.  v2:= 1I;
  #L32dae6.  goto L32daea;
  #L32dae8.  v2:= 0I;
  #L32daea.  return v2;
}
procedure `boolean` `p`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v1 @kind this, `int` v2 , `java.lang.Integer` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.p:(ILjava/lang/Integer;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32dafc.  if v3 == 0 then goto L32db20;
  #L32db00.  call temp:= `n`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.n:()Z` @kind direct;
  #L32db06.  v0:= temp;
  #L32db08.  if v0 != 0 then goto L32db1c;
  #L32db0c.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32db12.  v3:= temp;
  #L32db14.  v2:= v2 * 8;
  #L32db18.  if v3 > v2 then goto L32db20;
  #L32db1c.  v2:= 1I;
  #L32db1e.  goto L32db22;
  #L32db20.  v2:= 0I;
  #L32db22.  return v2;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.a:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e090.  @monitorenter v1
  #L32e092.  v0:= 40I;
  #L32e096.  if v2 < v0 then goto L32e0a6;
  #L32e09a.  call `b`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.b:()V` @kind virtual;
  #L32e0a0.  goto L32e0c4;
  #L32e0a2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32e0a4.  goto L32e0c8;
  #L32e0a6.  v0:= 20I;
  #L32e0aa.  if v2 >= v0 then goto L32e0b6;
  #L32e0ae.  v0:= 15I;
  #L32e0b2.  if v2 != v0 then goto L32e0c4;
  #L32e0b6.  v2:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.o.e` @type ^`int`;
  #L32e0ba.  v2:= v2 / 2;
  #L32e0be.  call `h`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.h:(I)V` @kind direct;
  #L32e0c4.  @monitorexit v1
  #L32e0c6.  return @kind void;
  #L32e0c8.  @monitorexit v1
  #L32e0ca.  throw v2;
  catch `java.lang.Throwable` @[L32e09a..L32e0c4] goto L32e0a2;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32de0c.  @monitorenter v1
  #L32de0e.  v0:= 0I;
  #L32de10.  call `h`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.h:(I)V` @kind direct;
  #L32de16.  @monitorexit v1
  #L32de18.  return @kind void;
  #L32de1a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32de1c.  @monitorexit v1
  #L32de1e.  throw v0;
  catch `java.lang.Throwable` @[L32de10..L32de16] goto L32de1a;
}
procedure `java.lang.Object` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v1 @kind this, `int` v2 , `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.c:(ILjava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32dc94.  @monitorenter v1
  #L32dc96.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.o.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.n` @kind object;
  #L32dc9a.  call temp:= `e`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/n;.e:(ILjava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/m;` @kind virtual;
  #L32dca0.  v2:= temp @kind object;
  #L32dca2.  call temp:= `l`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.l:(Lcom/bumptech/glide/load/engine/bitmap_recycle/m;Ljava/lang/Class;)Ljava/lang/Object;` @kind direct;
  #L32dca8.  v2:= temp @kind object;
  #L32dcaa.  @monitorexit v1
  #L32dcac.  return v2 @kind object;
  #L32dcae.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32dcb0.  @monitorexit v1
  #L32dcb2.  throw v2;
  catch `java.lang.Throwable` @[L32dc96..L32dcaa] goto L32dcae;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.d:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32dfb8.  @monitorenter v4
  #L32dfba.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L32dfc0.  v0:= temp @kind object;
  #L32dfc2.  call temp:= `j`(v4, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.j:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @kind direct;
  #L32dfc8.  v1:= temp @kind object;
  #L32dfca.  call temp:= `b`(v1, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.b:(Ljava/lang/Object;)I` @kind interface;
  #L32dfd0.  v2:= temp;
  #L32dfd2.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.a:()I` @kind interface;
  #L32dfd8.  v1:= temp;
  #L32dfda.  v1:= v1 * v2 @kind int;
  #L32dfde.  call temp:= `o`(v4, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.o:(I)Z` @kind direct;
  #L32dfe4.  v3:= temp;
  #L32dfe6.  if v3 != 0 then goto L32dfee;
  #L32dfea.  @monitorexit v4
  #L32dfec.  return @kind void;
  #L32dfee.  v3:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.o.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.n` @kind object;
  #L32dff2.  call temp:= `e`(v3, v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/n;.e:(ILjava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/m;` @kind virtual;
  #L32dff8.  v2:= temp @kind object;
  #L32dffa.  v3:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.o.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.k` @kind object;
  #L32dffe.  call `d`(v3, v2, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/k;.d:(Lcom/bumptech/glide/load/engine/bitmap_recycle/t;Ljava/lang/Object;)V` @kind virtual;
  #L32e004.  call temp:= `m`(v4, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.m:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @kind direct;
  #L32e00a.  v5:= temp @kind object;
  #L32e00c.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.m.b` @type ^`int`;
  #L32e010.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32e016.  v0:= temp @kind object;
  #L32e018.  call temp:= `get`(v5, v0) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32e01e.  v0:= temp @kind object;
  #L32e020.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L32e024.  v2:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.m.b` @type ^`int`;
  #L32e028.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32e02e.  v2:= temp @kind object;
  #L32e030.  v3:= 1I;
  #L32e032.  if v0 != 0 then goto L32e038;
  #L32e036.  goto L32e042;
  #L32e038.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32e03e.  v0:= temp;
  #L32e040.  v3:= v3 + v0 @kind int;
  #L32e042.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32e048.  v0:= temp @kind object;
  #L32e04a.  call temp:= `put`(v5, v2, v0) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32e050.  v5:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.o.f` @type ^`int`;
  #L32e054.  v5:= v5 + v1 @kind int;
  #L32e056.  v4.`com.bumptech.glide.load.engine.bitmap_recycle.o.f` @type ^`int` := v5;
  #L32e05a.  call `g`(v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.g:()V` @kind direct;
  #L32e060.  @monitorexit v4
  #L32e062.  return @kind void;
  #L32e064.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32e066.  @monitorexit v4
  #L32e068.  throw v5;
  catch `java.lang.Throwable` @[L32dfba..L32dfe6] goto L32e064;
  catch `java.lang.Throwable` @[L32dfee..L32e060] goto L32e064;
}
procedure `java.lang.Object` `e`(`com.bumptech.glide.load.engine.bitmap_recycle.o` v2 @kind this, `int` v3 , `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.e:(ILjava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32dbf8.  @monitorenter v2
  #L32dbfa.  call temp:= `m`(v2, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.m:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @kind direct;
  #L32dc00.  v0:= temp @kind object;
  #L32dc02.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L32dc08.  v1:= temp @kind object;
  #L32dc0a.  call temp:= `ceilingKey`(v0, v1) @signature `Ljava/util/NavigableMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32dc10.  v0:= temp @kind object;
  #L32dc12.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L32dc16.  call temp:= `p`(v2, v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.p:(ILjava/lang/Integer;)Z` @kind direct;
  #L32dc1c.  v1:= temp;
  #L32dc1e.  if v1 == 0 then goto L32dc38;
  #L32dc22.  v3:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.o.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.n` @kind object;
  #L32dc26.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32dc2c.  v0:= temp;
  #L32dc2e.  call temp:= `e`(v3, v0, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/n;.e:(ILjava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/m;` @kind virtual;
  #L32dc34.  v3:= temp @kind object;
  #L32dc36.  goto L32dc44;
  #L32dc38.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.o.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.n` @kind object;
  #L32dc3c.  call temp:= `e`(v0, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/n;.e:(ILjava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/m;` @kind virtual;
  #L32dc42.  v3:= temp @kind object;
  #L32dc44.  call temp:= `l`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/o;.l:(Lcom/bumptech/glide/load/engine/bitmap_recycle/m;Ljava/lang/Class;)Ljava/lang/Object;` @kind direct;
  #L32dc4a.  v3:= temp @kind object;
  #L32dc4c.  @monitorexit v2
  #L32dc4e.  return v3 @kind object;
  #L32dc50.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32dc52.  @monitorexit v2
  #L32dc54.  throw v3;
  catch `java.lang.Throwable` @[L32dbfa..L32dc4c] goto L32dc50;
}
