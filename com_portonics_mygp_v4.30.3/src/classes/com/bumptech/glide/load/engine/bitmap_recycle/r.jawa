record `com.bumptech.glide.load.engine.bitmap_recycle.r` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.bitmap_recycle.g` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.s` `com.bumptech.glide.load.engine.bitmap_recycle.r.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.bumptech.glide.load.engine.bitmap_recycle.r.c` @AccessFlag PRIVATE_FINAL;
  `long` `com.bumptech.glide.load.engine.bitmap_recycle.r.d` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.p` `com.bumptech.glide.load.engine.bitmap_recycle.r.e` @AccessFlag PRIVATE_FINAL;
  `long` `com.bumptech.glide.load.engine.bitmap_recycle.r.f` @AccessFlag PRIVATE;
  `long` `com.bumptech.glide.load.engine.bitmap_recycle.r.g` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.r.h` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.r.i` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.r.j` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.r.k` @AccessFlag PRIVATE;
}
global `android.graphics.Bitmap$Config` `@@com.bumptech.glide.load.engine.bitmap_recycle.r.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L32e35c.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32e360.  `@@com.bumptech.glide.load.engine.bitmap_recycle.r.a` @type ^`android.graphics.Bitmap$Config` := v0 @kind object;
  #L32e364.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.r` v2 @kind this, `long` v3 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L32e378.  call temp:= `l`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.l:()Lcom/bumptech/glide/load/engine/bitmap_recycle/s;` @kind static;
  #L32e37e.  v0:= temp @kind object;
  #L32e380.  call temp:= `k`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.k:()Ljava/util/Set;` @kind static;
  #L32e386.  v1:= temp @kind object;
  #L32e388.  call `<init>`(v2, v3, v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.<init>:(JLcom/bumptech/glide/load/engine/bitmap_recycle/s;Ljava/util/Set;)V` @kind direct;
  #L32e38e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.r` v0 @kind this, `long` v1 , `com.bumptech.glide.load.engine.bitmap_recycle.s` v3 @kind object, `java.util.Set` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.<init>:(JLcom/bumptech/glide/load/engine/bitmap_recycle/s;Ljava/util/Set;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32e3a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32e3a6.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.r.d` @type ^`long` := v1 @kind wide;
  #L32e3aa.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.r.f` @type ^`long` := v1 @kind wide;
  #L32e3ae.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.r.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.s` := v3 @kind object;
  #L32e3b2.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.r.c` @type ^`java.util.Set` := v4 @kind object;
  #L32e3b6.  v1:= new `com.bumptech.glide.load.engine.bitmap_recycle.q`;
  #L32e3ba.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/q;.<init>:()V` @kind direct;
  #L32e3c0.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.r.e` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.p` := v1 @kind object;
  #L32e3c4.  return @kind void;
}
procedure `void` `f`(`android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.f:(Landroid/graphics/Bitmap$Config;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L32e3d8.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L32e3dc.  v1:= 26I;
  #L32e3e0.  if v0 >= v1 then goto L32e3e6;
  #L32e3e4.  return @kind void;
  #L32e3e6.  v0:= `@@android.graphics.Bitmap$Config.HARDWARE` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32e3ea.  if v3 == v0 then goto L32e3f0;
  #L32e3ee.  return @kind void;
  #L32e3f0.  v0:= new `java.lang.IllegalArgumentException`;
  #L32e3f4.  v1:= new `java.lang.StringBuilder`;
  #L32e3f8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e3fe.  v2:= "Cannot create a mutable Bitmap with config: " @kind object;
  #L32e402.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e408.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e40e.  v3:= ". Consider setting Downsampler#ALLOW_HARDWARE_CONFIG to false in your RequestOptions and/or in GlideBuilder.setDefaultRequestOptions" @kind object;
  #L32e412.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e418.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e41e.  v3:= temp @kind object;
  #L32e420.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e426.  throw v0;
}
procedure `android.graphics.Bitmap` `g`(`int` v0 , `int` v1 , `android.graphics.Bitmap$Config` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.g:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L32e128.  if v2 == 0 then goto L32e12e;
  #L32e12c.  goto L32e132;
  #L32e12e.  v2:= `@@com.bumptech.glide.load.engine.bitmap_recycle.r.a` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32e132.  call temp:= `createBitmap`(v0, v1, v2) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L32e138.  v0:= temp @kind object;
  #L32e13a.  return v0 @kind object;
}
procedure `void` `h`(`com.bumptech.glide.load.engine.bitmap_recycle.r` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.h:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32e464.  v0:= "LruBitmapPool" @kind object;
  #L32e468.  v1:= 2I;
  #L32e46a.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L32e470.  v0:= temp;
  #L32e472.  if v0 == 0 then goto L32e47c;
  #L32e476.  call `i`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.i:()V` @kind direct;
  #L32e47c.  return @kind void;
}
procedure `void` `i`(`com.bumptech.glide.load.engine.bitmap_recycle.r` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.i:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L32e490.  v0:= new `java.lang.StringBuilder`;
  #L32e494.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e49a.  v1:= "Hits=" @kind object;
  #L32e49e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e4a4.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.r.h` @type ^`int`;
  #L32e4a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e4ae.  v1:= ", misses=" @kind object;
  #L32e4b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e4b8.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.r.i` @type ^`int`;
  #L32e4bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e4c2.  v1:= ", puts=" @kind object;
  #L32e4c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e4cc.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.r.j` @type ^`int`;
  #L32e4d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e4d6.  v1:= ", evictions=" @kind object;
  #L32e4da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e4e0.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.r.k` @type ^`int`;
  #L32e4e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e4ea.  v1:= ", currentSize=" @kind object;
  #L32e4ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e4f4.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.r.g` @type ^`long` @kind wide;
  #L32e4f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e4fe.  v1:= ", maxSize=" @kind object;
  #L32e502.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e508.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.r.f` @type ^`long` @kind wide;
  #L32e50c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e512.  v1:= "\nStrategy=" @kind object;
  #L32e516.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e51c.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.r.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.s` @kind object;
  #L32e520.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e526.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e52c.  return @kind void;
}
procedure `void` `j`(`com.bumptech.glide.load.engine.bitmap_recycle.r` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.j:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32e540.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.r.f` @type ^`long` @kind wide;
  #L32e544.  call `q`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.q:(J)V` @kind direct;
  #L32e54a.  return @kind void;
}
procedure `java.util.Set` `k`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.k:()Ljava/util/Set;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L32e2e8.  v0:= new `java.util.HashSet`;
  #L32e2ec.  call temp:= `values`() @signature `Landroid/graphics/Bitmap$Config;.values:()[Landroid/graphics/Bitmap$Config;` @kind static;
  #L32e2f2.  v1:= temp @kind object;
  #L32e2f4.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L32e2fa.  v1:= temp @kind object;
  #L32e2fc.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L32e302.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L32e306.  v2:= 19I;
  #L32e30a.  if v1 < v2 then goto L32e316;
  #L32e30e.  v2:= 0I;
  #L32e310.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32e316.  v2:= 26I;
  #L32e31a.  if v1 < v2 then goto L32e328;
  #L32e31e.  v1:= `@@android.graphics.Bitmap$Config.HARDWARE` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32e322.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L32e328.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L32e32e.  v0:= temp @kind object;
  #L32e330.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.s` `l`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.l:()Lcom/bumptech/glide/load/engine/bitmap_recycle/s;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L32e2b4.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L32e2b8.  v1:= 19I;
  #L32e2bc.  if v0 < v1 then goto L32e2cc;
  #L32e2c0.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.x`;
  #L32e2c4.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/x;.<init>:()V` @kind direct;
  #L32e2ca.  goto L32e2d6;
  #L32e2cc.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.e`;
  #L32e2d0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.<init>:()V` @kind direct;
  #L32e2d6.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `m`(`com.bumptech.glide.load.engine.bitmap_recycle.r` v5 @kind this, `int` v6 , `int` v7 , `android.graphics.Bitmap$Config` v8 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.m:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32e1a4.  @monitorenter v5
  #L32e1a6.  call `f`(v8) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.f:(Landroid/graphics/Bitmap$Config;)V` @kind static;
  #L32e1ac.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.s` @kind object;
  #L32e1b0.  if v8 == 0 then goto L32e1b8;
  #L32e1b4.  v1:= v8 @kind object;
  #L32e1b6.  goto L32e1bc;
  #L32e1b8.  v1:= `@@com.bumptech.glide.load.engine.bitmap_recycle.r.a` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L32e1bc.  call temp:= `d`(v0, v6, v7, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/s;.d:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L32e1c2.  v0:= temp @kind object;
  #L32e1c4.  if v0 != 0 then goto L32e214;
  #L32e1c8.  v1:= "LruBitmapPool" @kind object;
  #L32e1cc.  v2:= 3I;
  #L32e1ce.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L32e1d4.  v1:= temp;
  #L32e1d6.  if v1 == 0 then goto L32e206;
  #L32e1da.  v1:= new `java.lang.StringBuilder`;
  #L32e1de.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e1e4.  v2:= "Missing bitmap=" @kind object;
  #L32e1e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e1ee.  v2:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.s` @kind object;
  #L32e1f2.  call temp:= `a`(v2, v6, v7, v8) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/s;.a:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind interface;
  #L32e1f8.  v2:= temp @kind object;
  #L32e1fa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e200.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e206.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.i` @type ^`int`;
  #L32e20a.  v1:= v1 + 1;
  #L32e20e.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.i` @type ^`int` := v1;
  #L32e212.  goto L32e248;
  #L32e214.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.h` @type ^`int`;
  #L32e218.  v1:= v1 + 1;
  #L32e21c.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.h` @type ^`int` := v1;
  #L32e220.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.g` @type ^`long` @kind wide;
  #L32e224.  v3:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.s` @kind object;
  #L32e228.  call temp:= `b`(v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/s;.b:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L32e22e.  v3:= temp;
  #L32e230.  v3:= (`long`) v3 @kind i2l;
  #L32e232.  v1:= v1 - v3 @kind long;
  #L32e234.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.g` @type ^`long` := v1 @kind wide;
  #L32e238.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.e` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.p` @kind object;
  #L32e23c.  call `a`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/p;.a:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L32e242.  call `p`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.p:(Landroid/graphics/Bitmap;)V` @kind static;
  #L32e248.  v1:= "LruBitmapPool" @kind object;
  #L32e24c.  v2:= 2I;
  #L32e24e.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L32e254.  v1:= temp;
  #L32e256.  if v1 == 0 then goto L32e286;
  #L32e25a.  v1:= new `java.lang.StringBuilder`;
  #L32e25e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e264.  v2:= "Get bitmap=" @kind object;
  #L32e268.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e26e.  v2:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.s` @kind object;
  #L32e272.  call temp:= `a`(v2, v6, v7, v8) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/s;.a:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind interface;
  #L32e278.  v6:= temp @kind object;
  #L32e27a.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e280.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e286.  call `h`(v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.h:()V` @kind direct;
  #L32e28c.  @monitorexit v5
  #L32e28e.  return v0 @kind object;
  #L32e290.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32e292.  @monitorexit v5
  #L32e294.  throw v6;
  catch `java.lang.Throwable` @[L32e1a6..L32e28c] goto L32e290;
}
procedure `void` `o`(`android.graphics.Bitmap` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.o:(Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L32e55c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L32e560.  v1:= 19I;
  #L32e564.  if v0 < v1 then goto L32e570;
  #L32e568.  v0:= 1I;
  #L32e56a.  call `setPremultiplied`(v2, v0) @signature `Landroid/graphics/Bitmap;.setPremultiplied:(Z)V` @kind virtual;
  #L32e570.  return @kind void;
}
procedure `void` `p`(`android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.p:(Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L32e584.  v0:= 1I;
  #L32e586.  call `setHasAlpha`(v1, v0) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L32e58c.  call `o`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.o:(Landroid/graphics/Bitmap;)V` @kind static;
  #L32e592.  return @kind void;
}
procedure `void` `q`(`com.bumptech.glide.load.engine.bitmap_recycle.r` v5 @kind this, `long` v6 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.q:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32e7cc.  @monitorenter v5
  #L32e7ce.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.g` @type ^`long` @kind wide;
  #L32e7d2.  v2:= lcmp(v0, v6);
  #L32e7d6.  if v2 <= 0 then goto L32e888;
  #L32e7da.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.s` @kind object;
  #L32e7de.  call temp:= `removeLast`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/s;.removeLast:()Landroid/graphics/Bitmap;` @kind interface;
  #L32e7e4.  v0:= temp @kind object;
  #L32e7e6.  if v0 != 0 then goto L32e80e;
  #L32e7ea.  v6:= "LruBitmapPool" @kind object;
  #L32e7ee.  v7:= 5I;
  #L32e7f0.  call temp:= `isLoggable`(v6, v7) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L32e7f6.  v6:= temp;
  #L32e7f8.  if v6 == 0 then goto L32e802;
  #L32e7fc.  call `i`(v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.i:()V` @kind direct;
  #L32e802.  v6:= 0L;
  #L32e806.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.g` @type ^`long` := v6 @kind wide;
  #L32e80a.  @monitorexit v5
  #L32e80c.  return @kind void;
  #L32e80e.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.e` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.p` @kind object;
  #L32e812.  call `a`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/p;.a:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L32e818.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.g` @type ^`long` @kind wide;
  #L32e81c.  v3:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.s` @kind object;
  #L32e820.  call temp:= `b`(v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/s;.b:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L32e826.  v3:= temp;
  #L32e828.  v3:= (`long`) v3 @kind i2l;
  #L32e82a.  v1:= v1 - v3 @kind long;
  #L32e82c.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.g` @type ^`long` := v1 @kind wide;
  #L32e830.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.k` @type ^`int`;
  #L32e834.  v1:= v1 + 1;
  #L32e838.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.k` @type ^`int` := v1;
  #L32e83c.  v1:= "LruBitmapPool" @kind object;
  #L32e840.  v2:= 3I;
  #L32e842.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L32e848.  v1:= temp;
  #L32e84a.  if v1 == 0 then goto L32e87a;
  #L32e84e.  v1:= new `java.lang.StringBuilder`;
  #L32e852.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e858.  v2:= "Evicting bitmap=" @kind object;
  #L32e85c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e862.  v2:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.r.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.s` @kind object;
  #L32e866.  call temp:= `e`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/s;.e:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind interface;
  #L32e86c.  v2:= temp @kind object;
  #L32e86e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e874.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e87a.  call `h`(v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.h:()V` @kind direct;
  #L32e880.  call `recycle`(v0) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L32e886.  goto L32e7ce;
  #L32e888.  @monitorexit v5
  #L32e88a.  return @kind void;
  #L32e88c.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32e88e.  @monitorexit v5
  #L32e890.  goto L32e894;
  #L32e892.  throw v6;
  #L32e894.  goto L32e892;
  catch `java.lang.Throwable` @[L32e7ce..L32e80a] goto L32e88c;
  catch `java.lang.Throwable` @[L32e80e..L32e886] goto L32e88c;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.r` v4 @kind this, `int` v5 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.a:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32e754.  v0:= "LruBitmapPool" @kind object;
  #L32e758.  v1:= 3I;
  #L32e75a.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L32e760.  v0:= temp;
  #L32e762.  if v0 == 0 then goto L32e786;
  #L32e766.  v0:= new `java.lang.StringBuilder`;
  #L32e76a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e770.  v1:= "trimMemory, level=" @kind object;
  #L32e774.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e77a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e780.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e786.  v0:= 40I;
  #L32e78a.  if v5 < v0 then goto L32e796;
  #L32e78e.  call `b`(v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.b:()V` @kind virtual;
  #L32e794.  goto L32e7ba;
  #L32e796.  v0:= 20I;
  #L32e79a.  if v5 >= v0 then goto L32e7a6;
  #L32e79e.  v0:= 15I;
  #L32e7a2.  if v5 != v0 then goto L32e7ba;
  #L32e7a6.  call temp:= `n`(v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.n:()J` @kind virtual;
  #L32e7ac.  v0:= temp @kind wide;
  #L32e7ae.  v2:= 2L;
  #L32e7b2.  v0:= v0 / v2 @kind long;
  #L32e7b4.  call `q`(v4, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.q:(J)V` @kind direct;
  #L32e7ba.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.r` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32e438.  v0:= "LruBitmapPool" @kind object;
  #L32e43c.  v1:= 3I;
  #L32e43e.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L32e444.  v0:= temp;
  #L32e446.  v0:= 0L;
  #L32e44a.  call `q`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.q:(J)V` @kind direct;
  #L32e450.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.r` v6 @kind this, `android.graphics.Bitmap` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.c:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L32e5a4.  @monitorenter v6
  #L32e5a6.  if v7 == 0 then goto L32e712;
  #L32e5aa.  call temp:= `isRecycled`(v7) @signature `Landroid/graphics/Bitmap;.isRecycled:()Z` @kind virtual;
  #L32e5b0.  v0:= temp;
  #L32e5b2.  if v0 != 0 then goto L32e6fe;
  #L32e5b6.  call temp:= `isMutable`(v7) @signature `Landroid/graphics/Bitmap;.isMutable:()Z` @kind virtual;
  #L32e5bc.  v0:= temp;
  #L32e5be.  v1:= 2I;
  #L32e5c0.  if v0 == 0 then goto L32e67c;
  #L32e5c4.  v0:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.r.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.s` @kind object;
  #L32e5c8.  call temp:= `b`(v0, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/s;.b:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L32e5ce.  v0:= temp;
  #L32e5d0.  v2:= (`long`) v0 @kind i2l;
  #L32e5d2.  v4:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.r.f` @type ^`long` @kind wide;
  #L32e5d6.  v0:= lcmp(v2, v4);
  #L32e5da.  if v0 > 0 then goto L32e67c;
  #L32e5de.  v0:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.r.c` @type ^`java.util.Set` @kind object;
  #L32e5e2.  call temp:= `getConfig`(v7) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L32e5e8.  v2:= temp @kind object;
  #L32e5ea.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L32e5f0.  v0:= temp;
  #L32e5f2.  if v0 != 0 then goto L32e5f8;
  #L32e5f6.  goto L32e67c;
  #L32e5f8.  v0:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.r.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.s` @kind object;
  #L32e5fc.  call temp:= `b`(v0, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/s;.b:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L32e602.  v0:= temp;
  #L32e604.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.r.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.s` @kind object;
  #L32e608.  call `c`(v2, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/s;.c:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L32e60e.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.r.e` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.p` @kind object;
  #L32e612.  call `b`(v2, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/p;.b:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L32e618.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.r.j` @type ^`int`;
  #L32e61c.  v2:= v2 + 1;
  #L32e620.  v6.`com.bumptech.glide.load.engine.bitmap_recycle.r.j` @type ^`int` := v2;
  #L32e624.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.r.g` @type ^`long` @kind wide;
  #L32e628.  v4:= (`long`) v0 @kind i2l;
  #L32e62a.  v2:= v2 + v4 @kind long;
  #L32e62c.  v6.`com.bumptech.glide.load.engine.bitmap_recycle.r.g` @type ^`long` := v2 @kind wide;
  #L32e630.  v0:= "LruBitmapPool" @kind object;
  #L32e634.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L32e63a.  v0:= temp;
  #L32e63c.  if v0 == 0 then goto L32e66c;
  #L32e640.  v0:= new `java.lang.StringBuilder`;
  #L32e644.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e64a.  v1:= "Put bitmap in pool=" @kind object;
  #L32e64e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e654.  v1:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.r.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.s` @kind object;
  #L32e658.  call temp:= `e`(v1, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/s;.e:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind interface;
  #L32e65e.  v7:= temp @kind object;
  #L32e660.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e666.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e66c.  call `h`(v6) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.h:()V` @kind direct;
  #L32e672.  call `j`(v6) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.j:()V` @kind direct;
  #L32e678.  @monitorexit v6
  #L32e67a.  return @kind void;
  #L32e67c.  v0:= "LruBitmapPool" @kind object;
  #L32e680.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L32e686.  v0:= temp;
  #L32e688.  if v0 == 0 then goto L32e6f4;
  #L32e68c.  v0:= new `java.lang.StringBuilder`;
  #L32e690.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e696.  v1:= "Reject bitmap from pool, bitmap: " @kind object;
  #L32e69a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e6a0.  v1:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.r.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.s` @kind object;
  #L32e6a4.  call temp:= `e`(v1, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/s;.e:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind interface;
  #L32e6aa.  v1:= temp @kind object;
  #L32e6ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e6b2.  v1:= ", is mutable: " @kind object;
  #L32e6b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e6bc.  call temp:= `isMutable`(v7) @signature `Landroid/graphics/Bitmap;.isMutable:()Z` @kind virtual;
  #L32e6c2.  v1:= temp;
  #L32e6c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e6ca.  v1:= ", is allowed config: " @kind object;
  #L32e6ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e6d4.  v1:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.r.c` @type ^`java.util.Set` @kind object;
  #L32e6d8.  call temp:= `getConfig`(v7) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L32e6de.  v2:= temp @kind object;
  #L32e6e0.  call temp:= `contains`(v1, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L32e6e6.  v1:= temp;
  #L32e6e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e6ee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e6f4.  call `recycle`(v7) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L32e6fa.  @monitorexit v6
  #L32e6fc.  return @kind void;
  #L32e6fe.  v7:= new `java.lang.IllegalStateException`;
  #L32e702.  v0:= "Cannot pool recycled bitmap" @kind object;
  #L32e706.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e70c.  throw v7;
  #L32e70e.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32e710.  goto L32e722;
  #L32e712.  v7:= new `java.lang.NullPointerException`;
  #L32e716.  v0:= "Bitmap must not be null" @kind object;
  #L32e71a.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e720.  throw v7;
  #L32e722.  @monitorexit v6
  #L32e724.  throw v7;
  catch `java.lang.Throwable` @[L32e5aa..L32e678] goto L32e70e;
  catch `java.lang.Throwable` @[L32e67c..L32e6fa] goto L32e70e;
  catch `java.lang.Throwable` @[L32e6fe..L32e722] goto L32e70e;
}
procedure `android.graphics.Bitmap` `d`(`com.bumptech.glide.load.engine.bitmap_recycle.r` v1 @kind this, `int` v2 , `int` v3 , `android.graphics.Bitmap$Config` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.d:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e14c.  call temp:= `m`(v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.m:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind direct;
  #L32e152.  v0:= temp @kind object;
  #L32e154.  if v0 == 0 then goto L32e162;
  #L32e158.  v2:= 0I;
  #L32e15a.  call `eraseColor`(v0, v2) @signature `Landroid/graphics/Bitmap;.eraseColor:(I)V` @kind virtual;
  #L32e160.  goto L32e16a;
  #L32e162.  call temp:= `g`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.g:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L32e168.  v0:= temp @kind object;
  #L32e16a.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `e`(`com.bumptech.glide.load.engine.bitmap_recycle.r` v1 @kind this, `int` v2 , `int` v3 , `android.graphics.Bitmap$Config` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.e:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e17c.  call temp:= `m`(v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.m:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind direct;
  #L32e182.  v0:= temp @kind object;
  #L32e184.  if v0 != 0 then goto L32e190;
  #L32e188.  call temp:= `g`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.g:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L32e18e.  v0:= temp @kind object;
  #L32e190.  return v0 @kind object;
}
procedure `long` `n`(`com.bumptech.glide.load.engine.bitmap_recycle.r` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/r;.n:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32e344.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.r.f` @type ^`long` @kind wide;
  #L32e348.  return v0 @kind wide;
}
