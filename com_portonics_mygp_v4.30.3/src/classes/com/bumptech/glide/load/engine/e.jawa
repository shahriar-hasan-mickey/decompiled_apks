record `com.bumptech.glide.load.engine.e` @kind class @AccessFlag FINAL extends `java.lang.ref.WeakReference` @kind class {
  `com.bumptech.glide.load.c` `com.bumptech.glide.load.engine.e.a` @AccessFlag FINAL;
  `boolean` `com.bumptech.glide.load.engine.e.b` @AccessFlag FINAL;
  `com.bumptech.glide.load.engine.u0` `com.bumptech.glide.load.engine.e.c` @AccessFlag ;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.e` v0 @kind this, `com.bumptech.glide.load.c` v1 @kind object, `com.bumptech.glide.load.engine.o0` v2 @kind object, `java.lang.ref.ReferenceQueue` v3 @kind object, `boolean` v4 ) @signature `Lcom/bumptech/glide/load/engine/e;.<init>:(Lcom/bumptech/glide/load/c;Lcom/bumptech/glide/load/engine/o0;Ljava/lang/ref/ReferenceQueue;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3279f0.  call `<init>`(v0, v2, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L3279f6.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3279fc.  v1:= temp @kind object;
  #L3279fe.  v1:= (`com.bumptech.glide.load.c`) v1 @kind object;
  #L327a02.  v0.`com.bumptech.glide.load.engine.e.a` @type ^`com.bumptech.glide.load.c` := v1 @kind object;
  #L327a06.  call temp:= `f`(v2) @signature `Lcom/bumptech/glide/load/engine/o0;.f:()Z` @kind virtual;
  #L327a0c.  v1:= temp;
  #L327a0e.  if v1 == 0 then goto L327a2c;
  #L327a12.  if v4 == 0 then goto L327a2c;
  #L327a16.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/engine/o0;.b:()Lcom/bumptech/glide/load/engine/u0;` @kind virtual;
  #L327a1c.  v1:= temp @kind object;
  #L327a1e.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L327a24.  v1:= temp @kind object;
  #L327a26.  v1:= (`com.bumptech.glide.load.engine.u0`) v1 @kind object;
  #L327a2a.  goto L327a2e;
  #L327a2c.  v1:= 0I;
  #L327a2e.  v0.`com.bumptech.glide.load.engine.e.c` @type ^`com.bumptech.glide.load.engine.u0` := v1 @kind object;
  #L327a32.  call temp:= `f`(v2) @signature `Lcom/bumptech/glide/load/engine/o0;.f:()Z` @kind virtual;
  #L327a38.  v1:= temp;
  #L327a3a.  v0.`com.bumptech.glide.load.engine.e.b` @type ^`boolean` := v1 @kind boolean;
  #L327a3e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.e` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/e;.a:()V` @AccessFlag  {
    temp;
    v0;

  #L327a50.  v0:= 0I;
  #L327a52.  v1.`com.bumptech.glide.load.engine.e.c` @type ^`com.bumptech.glide.load.engine.u0` := v0 @kind object;
  #L327a56.  call `clear`(v1) @signature `Ljava/lang/ref/WeakReference;.clear:()V` @kind virtual;
  #L327a5c.  return @kind void;
}
