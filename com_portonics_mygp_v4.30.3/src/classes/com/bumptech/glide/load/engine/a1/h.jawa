record `com.bumptech.glide.load.engine.a1.h` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.bumptech.glide.load.engine.a1.a$a` @kind interface {
  `long` `com.bumptech.glide.load.engine.a1.h.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.a1.g` `com.bumptech.glide.load.engine.a1.h.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.a1.h` v0 @kind this, `com.bumptech.glide.load.engine.a1.g` v1 @kind object, `long` v2 ) @signature `Lcom/bumptech/glide/load/engine/a1/h;.<init>:(Lcom/bumptech/glide/load/engine/a1/g;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32f48c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32f492.  v0.`com.bumptech.glide.load.engine.a1.h.a` @type ^`long` := v2 @kind wide;
  #L32f496.  v0.`com.bumptech.glide.load.engine.a1.h.b` @type ^`com.bumptech.glide.load.engine.a1.g` := v1 @kind object;
  #L32f49a.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.a1.a` `build`(`com.bumptech.glide.load.engine.a1.h` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/a1/h;.build:()Lcom/bumptech/glide/load/engine/a1/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32f434.  v0:= v3.`com.bumptech.glide.load.engine.a1.h.b` @type ^`com.bumptech.glide.load.engine.a1.g` @kind object;
  #L32f438.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/engine/a1/g;.a:()Ljava/io/File;` @kind interface;
  #L32f43e.  v0:= temp @kind object;
  #L32f440.  v1:= 0I;
  #L32f442.  if v0 != 0 then goto L32f448;
  #L32f446.  return v1 @kind object;
  #L32f448.  call temp:= `mkdirs`(v0) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L32f44e.  v2:= temp;
  #L32f450.  if v2 != 0 then goto L32f46e;
  #L32f454.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L32f45a.  v2:= temp;
  #L32f45c.  if v2 == 0 then goto L32f46c;
  #L32f460.  call temp:= `isDirectory`(v0) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L32f466.  v2:= temp;
  #L32f468.  if v2 != 0 then goto L32f46e;
  #L32f46c.  return v1 @kind object;
  #L32f46e.  v1:= v3.`com.bumptech.glide.load.engine.a1.h.a` @type ^`long` @kind wide;
  #L32f472.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/a1/i;.c:(Ljava/io/File;J)Lcom/bumptech/glide/load/engine/a1/a;` @kind static;
  #L32f478.  v0:= temp @kind object;
  #L32f47a.  return v0 @kind object;
}
