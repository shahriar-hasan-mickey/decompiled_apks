record `com.bumptech.glide.load.engine.b1.a` @kind class @AccessFlag  extends `java.lang.Thread` @kind class {
  `com.bumptech.glide.load.engine.b1.b` `com.bumptech.glide.load.engine.b1.a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.b1.a` v0 @kind this, `com.bumptech.glide.load.engine.b1.b` v1 @kind object, `java.lang.Runnable` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/b1/a;.<init>:(Lcom/bumptech/glide/load/engine/b1/b;Ljava/lang/Runnable;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32fef8.  v0.`com.bumptech.glide.load.engine.b1.a.b` @type ^`com.bumptech.glide.load.engine.b1.b` := v1 @kind object;
  #L32fefc.  call `<init>`(v0, v2, v3) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L32ff02.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.load.engine.b1.a` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/b1/a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32ff14.  v0:= 9I;
  #L32ff18.  call `setThreadPriority`(v0) @signature `Landroid/os/Process;.setThreadPriority:(I)V` @kind static;
  #L32ff1e.  v0:= v2.`com.bumptech.glide.load.engine.b1.a.b` @type ^`com.bumptech.glide.load.engine.b1.b` @kind object;
  #L32ff22.  v0:= v0.`com.bumptech.glide.load.engine.b1.b.d` @type ^`boolean` @kind boolean;
  #L32ff26.  if v0 == 0 then goto L32ff52;
  #L32ff2a.  v0:= new `android.os.StrictMode$ThreadPolicy$Builder`;
  #L32ff2e.  call `<init>`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.<init>:()V` @kind direct;
  #L32ff34.  call temp:= `detectNetwork`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.detectNetwork:()Landroid/os/StrictMode$ThreadPolicy$Builder;` @kind virtual;
  #L32ff3a.  v0:= temp @kind object;
  #L32ff3c.  call temp:= `penaltyDeath`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.penaltyDeath:()Landroid/os/StrictMode$ThreadPolicy$Builder;` @kind virtual;
  #L32ff42.  v0:= temp @kind object;
  #L32ff44.  call temp:= `build`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.build:()Landroid/os/StrictMode$ThreadPolicy;` @kind virtual;
  #L32ff4a.  v0:= temp @kind object;
  #L32ff4c.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L32ff52.  call `run`(v2) @signature `Ljava/lang/Thread;.run:()V` @kind super;
  #L32ff58.  goto L32ff6a;
  #L32ff5a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32ff5c.  v1:= v2.`com.bumptech.glide.load.engine.b1.a.b` @type ^`com.bumptech.glide.load.engine.b1.b` @kind object;
  #L32ff60.  v1:= v1.`com.bumptech.glide.load.engine.b1.b.c` @type ^`com.bumptech.glide.load.engine.b1.f` @kind object;
  #L32ff64.  call `a`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/b1/f;.a:(Ljava/lang/Throwable;)V` @kind interface;
  #L32ff6a.  return @kind void;
  catch `java.lang.Throwable` @[L32ff52..L32ff58] goto L32ff5a;
}
