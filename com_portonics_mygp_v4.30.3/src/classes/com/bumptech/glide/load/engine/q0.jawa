record `com.bumptech.glide.load.engine.q0` @kind class @AccessFlag FINAL {
  `java.util.Map` `com.bumptech.glide.load.engine.q0.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.q0.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.q0` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/q0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L32c01c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32c022.  v0:= new `java.util.HashMap`;
  #L32c026.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L32c02c.  v1.`com.bumptech.glide.load.engine.q0.a` @type ^`java.util.Map` := v0 @kind object;
  #L32c030.  v0:= new `java.util.HashMap`;
  #L32c034.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L32c03a.  v1.`com.bumptech.glide.load.engine.q0.b` @type ^`java.util.Map` := v0 @kind object;
  #L32c03e.  return @kind void;
}
procedure `java.util.Map` `b`(`com.bumptech.glide.load.engine.q0` v0 @kind this, `boolean` v1 ) @signature `Lcom/bumptech/glide/load/engine/q0;.b:(Z)Ljava/util/Map;` @AccessFlag PRIVATE {
    temp;

  #L32bffc.  if v1 == 0 then goto L32c006;
  #L32c000.  v1:= v0.`com.bumptech.glide.load.engine.q0.b` @type ^`java.util.Map` @kind object;
  #L32c004.  goto L32c00a;
  #L32c006.  v1:= v0.`com.bumptech.glide.load.engine.q0.a` @type ^`java.util.Map` @kind object;
  #L32c00a.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.g0` `a`(`com.bumptech.glide.load.engine.q0` v0 @kind this, `com.bumptech.glide.load.c` v1 @kind object, `boolean` v2 ) @signature `Lcom/bumptech/glide/load/engine/q0;.a:(Lcom/bumptech/glide/load/c;Z)Lcom/bumptech/glide/load/engine/g0;` @AccessFlag  {
    temp;

  #L32bfd4.  call temp:= `b`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/q0;.b:(Z)Ljava/util/Map;` @kind direct;
  #L32bfda.  v2:= temp @kind object;
  #L32bfdc.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32bfe2.  v1:= temp @kind object;
  #L32bfe4.  v1:= (`com.bumptech.glide.load.engine.g0`) v1 @kind object;
  #L32bfe8.  return v1 @kind object;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.q0` v1 @kind this, `com.bumptech.glide.load.c` v2 @kind object, `com.bumptech.glide.load.engine.g0` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/q0;.c:(Lcom/bumptech/glide/load/c;Lcom/bumptech/glide/load/engine/g0;)V` @AccessFlag  {
    temp;
    v0;

  #L32c050.  call temp:= `p`(v3) @signature `Lcom/bumptech/glide/load/engine/g0;.p:()Z` @kind virtual;
  #L32c056.  v0:= temp;
  #L32c058.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/q0;.b:(Z)Ljava/util/Map;` @kind direct;
  #L32c05e.  v0:= temp @kind object;
  #L32c060.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32c066.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.q0` v2 @kind this, `com.bumptech.glide.load.c` v3 @kind object, `com.bumptech.glide.load.engine.g0` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/q0;.d:(Lcom/bumptech/glide/load/c;Lcom/bumptech/glide/load/engine/g0;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L32c078.  call temp:= `p`(v4) @signature `Lcom/bumptech/glide/load/engine/g0;.p:()Z` @kind virtual;
  #L32c07e.  v0:= temp;
  #L32c080.  call temp:= `b`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/q0;.b:(Z)Ljava/util/Map;` @kind direct;
  #L32c086.  v0:= temp @kind object;
  #L32c088.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32c08e.  v1:= temp @kind object;
  #L32c090.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32c096.  v4:= temp;
  #L32c098.  if v4 == 0 then goto L32c0a2;
  #L32c09c.  call temp:= `remove`(v0, v3) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32c0a2.  return @kind void;
}
