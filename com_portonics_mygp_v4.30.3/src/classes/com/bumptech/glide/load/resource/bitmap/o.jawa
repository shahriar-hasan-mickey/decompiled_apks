record `com.bumptech.glide.load.resource.bitmap.o` @kind class @AccessFlag  extends `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind class {
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.o` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/o;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L334ef0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;.<init>:()V` @kind direct;
  #L334ef6.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding` `a`(`com.bumptech.glide.load.resource.bitmap.o` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/o;.a:(IIII)Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$SampleSizeRounding;` @AccessFlag PUBLIC {
    temp;

  #L334ea4.  v1:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding.QUALITY` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding` @kind object;
  #L334ea8.  return v1 @kind object;
}
procedure `float` `b`(`com.bumptech.glide.load.resource.bitmap.o` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/o;.b:(IIII)F` @AccessFlag PUBLIC {
    temp;

  #L334ebc.  v2:= v2 / v4 @kind int;
  #L334ebe.  v1:= v1 / v3 @kind int;
  #L334ec0.  call temp:= `min`(v2, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L334ec6.  v1:= temp;
  #L334ec8.  v2:= 1.0F;
  #L334ecc.  if v1 != 0 then goto L334ed2;
  #L334ed0.  goto L334ede;
  #L334ed2.  call temp:= `highestOneBit`(v1) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L334ed8.  v1:= temp;
  #L334eda.  v1:= (`float`) v1 @kind i2f;
  #L334edc.  v2:= v2 / v1 @kind float;
  #L334ede.  return v2;
}
