record `com.bumptech.glide.load.resource.bitmap.c0` @kind class @AccessFlag FINAL {
  `int` `com.bumptech.glide.load.resource.bitmap.c0.c` @AccessFlag PRIVATE_VOLATILE;
  `boolean` `com.bumptech.glide.load.resource.bitmap.c0.d` @AccessFlag PRIVATE_VOLATILE;
}
global `java.io.File` `@@com.bumptech.glide.load.resource.bitmap.c0.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.bumptech.glide.load.resource.bitmap.c0` `@@com.bumptech.glide.load.resource.bitmap.c0.b` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/c0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L336898.  v0:= new `java.io.File`;
  #L33689c.  v1:= "/proc/self/fd" @kind object;
  #L3368a0.  call `<init>`(v0, v1) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3368a6.  `@@com.bumptech.glide.load.resource.bitmap.c0.a` @type ^`java.io.File` := v0 @kind object;
  #L3368aa.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.c0` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/c0;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3368bc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3368c2.  v0:= 1I;
  #L3368c4.  v1.`com.bumptech.glide.load.resource.bitmap.c0.d` @type ^`boolean` := v0 @kind boolean;
  #L3368c8.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.bitmap.c0` `a`() @signature `Lcom/bumptech/glide/load/resource/bitmap/c0;.a:()Lcom/bumptech/glide/load/resource/bitmap/c0;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L336848.  v0:= `@@com.bumptech.glide.load.resource.bitmap.c0.b` @type ^`com.bumptech.glide.load.resource.bitmap.c0` @kind object;
  #L33684c.  if v0 != 0 then goto L336876;
  #L336850.  v0:= constclass @type ^`com.bumptech.glide.load.resource.bitmap.c0` @kind object;
  #L336854.  @monitorenter v0
  #L336856.  v1:= `@@com.bumptech.glide.load.resource.bitmap.c0.b` @type ^`com.bumptech.glide.load.resource.bitmap.c0` @kind object;
  #L33685a.  if v1 != 0 then goto L33686c;
  #L33685e.  v1:= new `com.bumptech.glide.load.resource.bitmap.c0`;
  #L336862.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/c0;.<init>:()V` @kind direct;
  #L336868.  `@@com.bumptech.glide.load.resource.bitmap.c0.b` @type ^`com.bumptech.glide.load.resource.bitmap.c0` := v1 @kind object;
  #L33686c.  @monitorexit v0
  #L33686e.  goto L336876;
  #L336870.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L336872.  @monitorexit v0
  #L336874.  throw v1;
  #L336876.  v0:= `@@com.bumptech.glide.load.resource.bitmap.c0.b` @type ^`com.bumptech.glide.load.resource.bitmap.c0` @kind object;
  #L33687a.  return v0 @kind object;
  catch `java.lang.Throwable` @[L336856..L336874] goto L336870;
}
procedure `boolean` `b`(`com.bumptech.glide.load.resource.bitmap.c0` v4 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/c0;.b:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33673c.  @monitorenter v4
  #L33673e.  v0:= v4.`com.bumptech.glide.load.resource.bitmap.c0.c` @type ^`int`;
  #L336742.  v1:= 1I;
  #L336744.  v0:= v0 + v1 @kind int;
  #L336746.  v4.`com.bumptech.glide.load.resource.bitmap.c0.c` @type ^`int` := v0;
  #L33674a.  v2:= 50I;
  #L33674e.  if v0 < v2 then goto L3367c0;
  #L336752.  v0:= 0I;
  #L336754.  v4.`com.bumptech.glide.load.resource.bitmap.c0.c` @type ^`int` := v0;
  #L336758.  v2:= `@@com.bumptech.glide.load.resource.bitmap.c0.a` @type ^`java.io.File` @kind object;
  #L33675c.  call temp:= `list`(v2) @signature `Ljava/io/File;.list:()[Ljava/lang/String;` @kind virtual;
  #L336762.  v2:= temp @kind object;
  #L336764.  v2:= length @variable v2;
  #L336766.  v3:= 700I;
  #L33676a.  if v2 >= v3 then goto L336770;
  #L33676e.  goto L336772;
  #L336770.  v1:= 0I;
  #L336772.  v4.`com.bumptech.glide.load.resource.bitmap.c0.d` @type ^`boolean` := v1 @kind boolean;
  #L336776.  v0:= v4.`com.bumptech.glide.load.resource.bitmap.c0.d` @type ^`boolean` @kind boolean;
  #L33677a.  if v0 != 0 then goto L3367c0;
  #L33677e.  v0:= "Downsampler" @kind object;
  #L336782.  v1:= 5I;
  #L336784.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L33678a.  v0:= temp;
  #L33678c.  if v0 == 0 then goto L3367c0;
  #L336790.  v0:= new `java.lang.StringBuilder`;
  #L336794.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33679a.  v1:= "Excluding HARDWARE bitmap config because we're over the file descriptor limit, file descriptors " @kind object;
  #L33679e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3367a4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3367aa.  v1:= ", limit " @kind object;
  #L3367ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3367b4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3367ba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3367c0.  v0:= v4.`com.bumptech.glide.load.resource.bitmap.c0.d` @type ^`boolean` @kind boolean;
  #L3367c4.  @monitorexit v4
  #L3367c6.  return v0;
  #L3367c8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3367ca.  @monitorexit v4
  #L3367cc.  throw v0;
  catch `java.lang.Throwable` @[L33673e..L3367c4] goto L3367c8;
}
procedure `boolean` `c`(`com.bumptech.glide.load.resource.bitmap.c0` v1 @kind this, `int` v2 , `int` v3 , `android.graphics.BitmapFactory$Options` v4 @kind object, `com.bumptech.glide.load.DecodeFormat` v5 @kind object, `boolean` v6 , `boolean` v7 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/c0;.c:(IILandroid/graphics/BitmapFactory$Options;Lcom/bumptech/glide/load/DecodeFormat;ZZ)Z` @AccessFlag  {
    temp;
    v0;

  #L3367ec.  v5:= 0I;
  #L3367ee.  if v6 == 0 then goto L336834;
  #L3367f2.  v6:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3367f6.  v0:= 26I;
  #L3367fa.  if v6 < v0 then goto L336834;
  #L3367fe.  if v7 == 0 then goto L336804;
  #L336802.  goto L336834;
  #L336804.  v6:= 128I;
  #L336808.  if v2 < v6 then goto L336820;
  #L33680c.  if v3 < v6 then goto L336820;
  #L336810.  call temp:= `b`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/c0;.b:()Z` @kind direct;
  #L336816.  v2:= temp;
  #L336818.  if v2 == 0 then goto L336820;
  #L33681c.  v2:= 1I;
  #L33681e.  goto L336822;
  #L336820.  v2:= 0I;
  #L336822.  if v2 == 0 then goto L336832;
  #L336826.  v3:= `@@android.graphics.Bitmap$Config.HARDWARE` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L33682a.  v4.`android.graphics.BitmapFactory$Options.inPreferredConfig` @type ^`android.graphics.Bitmap$Config` := v3 @kind object;
  #L33682e.  v4.`android.graphics.BitmapFactory$Options.inMutable` @type ^`boolean` := v5 @kind boolean;
  #L336832.  return v2;
  #L336834.  return v5;
}
