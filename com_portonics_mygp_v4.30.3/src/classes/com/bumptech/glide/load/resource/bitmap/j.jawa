record `com.bumptech.glide.load.resource.bitmap.j` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.resource.bitmap.l` @kind interface {
  `java.nio.ByteBuffer` `com.bumptech.glide.load.resource.bitmap.j.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.j` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/j;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3344ac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3344b2.  v1.`com.bumptech.glide.load.resource.bitmap.j.a` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L3344b6.  v0:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L3344ba.  call temp:= `order`(v2, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3344c0.  return @kind void;
}
procedure `int` `a`(`com.bumptech.glide.load.resource.bitmap.j` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/j;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3343dc.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/j;.d:()I` @kind virtual;
  #L3343e2.  v0:= temp;
  #L3343e4.  v0:= v0 ^< 8;
  #L3343e8.  v1:= 65280I;
  #L3343ee.  v0:= v0 ^& v1 @kind int;
  #L3343f0.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/j;.d:()I` @kind virtual;
  #L3343f6.  v1:= temp;
  #L3343f8.  v1:= v1 ^& 255;
  #L3343fc.  v0:= v0 ^| v1 @kind int;
  #L3343fe.  return v0;
}
procedure `int` `b`(`com.bumptech.glide.load.resource.bitmap.j` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/j;.b:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L334410.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.j.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L334414.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L33441a.  v0:= temp;
  #L33441c.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L334422.  v4:= temp;
  #L334424.  if v4 != 0 then goto L33442c;
  #L334428.  v3:= -1I;
  #L33442a.  return v3;
  #L33442c.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.j.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L334430.  v1:= 0I;
  #L334432.  call temp:= `get`(v0, v3, v1, v4) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L334438.  return v4;
}
procedure `short` `c`(`com.bumptech.glide.load.resource.bitmap.j` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/j;.c:()S` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33448c.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/j;.d:()I` @kind virtual;
  #L334492.  v0:= temp;
  #L334494.  v0:= v0 ^& 255;
  #L334498.  v0:= (`short`) v0 @kind i2s;
  #L33449a.  return v0;
}
procedure `int` `d`(`com.bumptech.glide.load.resource.bitmap.j` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/j;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3343a8.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.j.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3343ac.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L3343b2.  v0:= temp;
  #L3343b4.  v1:= 1I;
  #L3343b6.  if v0 >= v1 then goto L3343be;
  #L3343ba.  v0:= -1I;
  #L3343bc.  return v0;
  #L3343be.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.j.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3343c2.  call temp:= `get`(v0) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L3343c8.  v0:= temp;
  #L3343ca.  return v0;
}
procedure `long` `skip`(`com.bumptech.glide.load.resource.bitmap.j` v2 @kind this, `long` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/j;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33444c.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.j.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L334450.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L334456.  v0:= temp;
  #L334458.  v0:= (`long`) v0 @kind i2l;
  #L33445a.  call temp:= `min`(v0, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L334460.  v3:= temp @kind wide;
  #L334462.  v4:= (`int`) v3 @kind l2i;
  #L334464.  v3:= v2.`com.bumptech.glide.load.resource.bitmap.j.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L334468.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L33446e.  v0:= temp;
  #L334470.  v0:= v0 + v4 @kind int;
  #L334472.  call temp:= `position`(v3, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L334478.  v3:= (`long`) v4 @kind i2l;
  #L33447a.  return v3 @kind wide;
}
