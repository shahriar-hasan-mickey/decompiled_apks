record `com.bumptech.glide.load.resource.bitmap.b` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.j` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.g` `com.bumptech.glide.load.resource.bitmap.b.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.j` `com.bumptech.glide.load.resource.bitmap.b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.b` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.g` v1 @kind object, `com.bumptech.glide.load.j` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/b;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/g;Lcom/bumptech/glide/load/j;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L333c4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L333c52.  v0.`com.bumptech.glide.load.resource.bitmap.b.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.g` := v1 @kind object;
  #L333c56.  v0.`com.bumptech.glide.load.resource.bitmap.b.b` @type ^`com.bumptech.glide.load.j` := v2 @kind object;
  #L333c5a.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.resource.bitmap.b` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.File` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/b;.a:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L333c0c.  v1:= (`com.bumptech.glide.load.engine.u0`) v1 @kind object;
  #L333c10.  call temp:= `c`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/b;.c:(Lcom/bumptech/glide/load/engine/u0;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L333c16.  v1:= temp;
  #L333c18.  return v1;
}
procedure `com.bumptech.glide.load.EncodeStrategy` `b`(`com.bumptech.glide.load.resource.bitmap.b` v1 @kind this, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/b;.b:(Lcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/EncodeStrategy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L333c2c.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.b.b` @type ^`com.bumptech.glide.load.j` @kind object;
  #L333c30.  call temp:= `b`(v0, v2) @signature `Lcom/bumptech/glide/load/j;.b:(Lcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/EncodeStrategy;` @kind interface;
  #L333c36.  v2:= temp @kind object;
  #L333c38.  return v2 @kind object;
}
procedure `boolean` `c`(`com.bumptech.glide.load.resource.bitmap.b` v3 @kind this, `com.bumptech.glide.load.engine.u0` v4 @kind object, `java.io.File` v5 @kind object, `com.bumptech.glide.load.h` v6 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/b;.c:(Lcom/bumptech/glide/load/engine/u0;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L333bcc.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.b.b` @type ^`com.bumptech.glide.load.j` @kind object;
  #L333bd0.  v1:= new `com.bumptech.glide.load.resource.bitmap.d`;
  #L333bd4.  call temp:= `get`(v4) @signature `Lcom/bumptech/glide/load/engine/u0;.get:()Ljava/lang/Object;` @kind interface;
  #L333bda.  v4:= temp @kind object;
  #L333bdc.  v4:= (`android.graphics.drawable.BitmapDrawable`) v4 @kind object;
  #L333be0.  call temp:= `getBitmap`(v4) @signature `Landroid/graphics/drawable/BitmapDrawable;.getBitmap:()Landroid/graphics/Bitmap;` @kind virtual;
  #L333be6.  v4:= temp @kind object;
  #L333be8.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.b.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.g` @kind object;
  #L333bec.  call `<init>`(v1, v4, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/d;.<init>:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/g;)V` @kind direct;
  #L333bf2.  call temp:= `a`(v0, v1, v5, v6) @signature `Lcom/bumptech/glide/load/a;.a:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @kind interface;
  #L333bf8.  v4:= temp;
  #L333bfa.  return v4;
}
