record `com.bumptech.glide.load.resource.bitmap.i0` @kind class @AccessFlag FINAL extends `java.util.concurrent.locks.Lock` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.i0` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/i0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L33745c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L337462.  return @kind void;
}
procedure `void` `lock`(`com.bumptech.glide.load.resource.bitmap.i0` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/i0;.lock:()V` @AccessFlag PUBLIC {
    temp;

  #L337474.  return @kind void;
}
procedure `void` `lockInterruptibly`(`com.bumptech.glide.load.resource.bitmap.i0` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/i0;.lockInterruptibly:()V` @AccessFlag PUBLIC {
    temp;

  #L337488.  return @kind void;
}
procedure `java.util.concurrent.locks.Condition` `newCondition`(`com.bumptech.glide.load.resource.bitmap.i0` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/i0;.newCondition:()Ljava/util/concurrent/locks/Condition;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33743c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L337440.  v1:= "Should not be called" @kind object;
  #L337444.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33744a.  throw v0;
}
procedure `boolean` `tryLock`(`com.bumptech.glide.load.resource.bitmap.i0` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/i0;.tryLock:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L337414.  v0:= 1I;
  #L337416.  return v0;
}
procedure `boolean` `tryLock`(`com.bumptech.glide.load.resource.bitmap.i0` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/i0;.tryLock:(JLjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC {
    temp;

  #L337428.  v1:= 1I;
  #L33742a.  return v1;
}
procedure `void` `unlock`(`com.bumptech.glide.load.resource.bitmap.i0` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/i0;.unlock:()V` @AccessFlag PUBLIC {
    temp;

  #L33749c.  return @kind void;
}
