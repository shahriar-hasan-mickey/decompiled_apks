record `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` @kind class @AccessFlag PUBLIC extends `java.io.FilterInputStream` @kind class {
  `byte`[] `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @AccessFlag PRIVATE_VOLATILE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.bitmap_recycle.b` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this, `java.io.InputStream` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.b` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L336ed0.  v0:= 65536I;
  #L336ed4.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/b;I)V` @kind direct;
  #L336eda.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.b` v2 @kind object, `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/b;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L336eec.  call `<init>`(v0, v1) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L336ef2.  v1:= -1I;
  #L336ef4.  v0.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v1;
  #L336ef8.  v0.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.g` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.b` := v2 @kind object;
  #L336efc.  v1:= constclass @type ^`byte`[] @kind object;
  #L336f00.  call temp:= `e`(v2, v3, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/b;.e:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L336f06.  v1:= temp @kind object;
  #L336f08.  v1:= (`byte`[]) v1 @kind object;
  #L336f0c.  v0.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] := v1 @kind object;
  #L336f10.  return @kind void;
}
procedure `int` `a`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v5 @kind this, `java.io.InputStream` v6 @kind object, `byte`[] v7 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.a:(Ljava/io/InputStream;[B)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L336a8c.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L336a90.  v1:= -1I;
  #L336a92.  v2:= 0I;
  #L336a94.  if v0 == v1 then goto L336b3a;
  #L336a98.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int`;
  #L336a9c.  v3:= v3 - v0 @kind int;
  #L336a9e.  v4:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L336aa2.  if v3 < v4 then goto L336aa8;
  #L336aa6.  goto L336b3a;
  #L336aa8.  if v0 != 0 then goto L336af8;
  #L336aac.  v1:= length @variable v7;
  #L336aae.  if v4 <= v1 then goto L336af8;
  #L336ab2.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L336ab6.  v3:= length @variable v7;
  #L336ab8.  if v1 != v3 then goto L336af8;
  #L336abc.  v0:= length @variable v7;
  #L336abe.  v0:= v0 * 2;
  #L336ac2.  if v0 <= v4 then goto L336ac8;
  #L336ac6.  goto L336aca;
  #L336ac8.  v4:= v0;
  #L336aca.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.g` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.b` @kind object;
  #L336ace.  v1:= constclass @type ^`byte`[] @kind object;
  #L336ad2.  call temp:= `e`(v0, v4, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/b;.e:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L336ad8.  v0:= temp @kind object;
  #L336ada.  v0:= (`byte`[]) v0 @kind object;
  #L336ade.  v1:= length @variable v7;
  #L336ae0.  call `arraycopy`(v7, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L336ae6.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] := v0 @kind object;
  #L336aea.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.g` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.b` @kind object;
  #L336aee.  call `d`(v1, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/b;.d:(Ljava/lang/Object;)V` @kind interface;
  #L336af4.  v7:= v0 @kind object;
  #L336af6.  goto L336b06;
  #L336af8.  if v0 <= 0 then goto L336b06;
  #L336afc.  v1:= length @variable v7;
  #L336afe.  v1:= v1 - v0 @kind int;
  #L336b00.  call `arraycopy`(v7, v0, v7, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L336b06.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int`;
  #L336b0a.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L336b0e.  v0:= v0 - v1 @kind int;
  #L336b10.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int` := v0;
  #L336b14.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v2;
  #L336b18.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int` := v2;
  #L336b1c.  v1:= length @variable v7;
  #L336b1e.  v1:= v1 - v0 @kind int;
  #L336b20.  call temp:= `read`(v6, v7, v0, v1) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L336b26.  v6:= temp;
  #L336b28.  v7:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int`;
  #L336b2c.  if v6 > 0 then goto L336b32;
  #L336b30.  goto L336b34;
  #L336b32.  v7:= v7 + v6 @kind int;
  #L336b34.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int` := v7;
  #L336b38.  return v6;
  #L336b3a.  call temp:= `read`(v6, v7) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L336b40.  v6:= temp;
  #L336b42.  if v6 <= 0 then goto L336b52;
  #L336b46.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v1;
  #L336b4a.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int` := v2;
  #L336b4e.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int` := v6;
  #L336b52.  return v6;
}
procedure `java.io.IOException` `k`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.k:()Ljava/io/IOException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L336d8c.  v0:= new `java.io.IOException`;
  #L336d90.  v1:= "BufferedInputStream is closed" @kind object;
  #L336d94.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336d9a.  throw v0;
}
procedure `int` `available`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L336a2c.  @monitorenter v3
  #L336a2e.  v0:= v3.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L336a32.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] @kind object;
  #L336a36.  if v1 == 0 then goto L336a56;
  #L336a3a.  if v0 == 0 then goto L336a56;
  #L336a3e.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L336a42.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int`;
  #L336a46.  v1:= v1 - v2 @kind int;
  #L336a48.  call temp:= `available`(v0) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L336a4e.  v0:= temp;
  #L336a50.  v1:= v1 + v0 @kind int;
  #L336a52.  @monitorexit v3
  #L336a54.  return v1;
  #L336a56.  call temp:= `k`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.k:()Ljava/io/IOException;` @kind static;
  #L336a5c.  v0:= temp @kind object;
  #L336a5e.  throw v0;
  #L336a60.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L336a62.  @monitorexit v3
  #L336a64.  throw v0;
  catch `java.lang.Throwable` @[L336a2e..L336a50] goto L336a60;
  catch `java.lang.Throwable` @[L336a56..L336a60] goto L336a60;
}
procedure `void` `c`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336f64.  @monitorenter v1
  #L336f66.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] @kind object;
  #L336f6a.  v0:= length @variable v0;
  #L336f6c.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v0;
  #L336f70.  @monitorexit v1
  #L336f72.  return @kind void;
  #L336f74.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L336f76.  @monitorexit v1
  #L336f78.  throw v0;
  catch `java.lang.Throwable` @[L336f66..L336f70] goto L336f74;
}
procedure `void` `close`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L336f24.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] @kind object;
  #L336f28.  v1:= 0I;
  #L336f2a.  if v0 == 0 then goto L336f40;
  #L336f2e.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.g` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.b` @kind object;
  #L336f32.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] @kind object;
  #L336f36.  call `d`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/b;.d:(Ljava/lang/Object;)V` @kind interface;
  #L336f3c.  v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] := v1 @kind object;
  #L336f40.  v0:= v3.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L336f44.  v3.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` := v1 @kind object;
  #L336f48.  if v0 == 0 then goto L336f52;
  #L336f4c.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L336f52.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L336fd8.  @monitorenter v2
  #L336fda.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] @kind object;
  #L336fde.  if v0 == 0 then goto L336ff6;
  #L336fe2.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.g` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.b` @kind object;
  #L336fe6.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] @kind object;
  #L336fea.  call `d`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/b;.d:(Ljava/lang/Object;)V` @kind interface;
  #L336ff0.  v0:= 0I;
  #L336ff2.  v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] := v0 @kind object;
  #L336ff6.  @monitorexit v2
  #L336ff8.  return @kind void;
  #L336ffa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L336ffc.  @monitorexit v2
  #L336ffe.  throw v0;
  catch `java.lang.Throwable` @[L336fda..L336ff6] goto L336ffa;
}
procedure `void` `mark`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.mark:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336f98.  @monitorenter v1
  #L336f9a.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L336f9e.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L336fa4.  v2:= temp;
  #L336fa6.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v2;
  #L336faa.  v2:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int`;
  #L336fae.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v2;
  #L336fb2.  @monitorexit v1
  #L336fb4.  return @kind void;
  #L336fb6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L336fb8.  @monitorexit v1
  #L336fba.  throw v2;
  catch `java.lang.Throwable` @[L336f9a..L336fb2] goto L336fb6;
}
procedure `boolean` `markSupported`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.markSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336a18.  v0:= 1I;
  #L336a1a.  return v0;
}
procedure `int` `read`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v5 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L336b64.  @monitorenter v5
  #L336b66.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] @kind object;
  #L336b6a.  v1:= v5.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L336b6e.  if v0 == 0 then goto L336bd6;
  #L336b72.  if v1 == 0 then goto L336bd6;
  #L336b76.  v2:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int`;
  #L336b7a.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L336b7e.  v4:= -1I;
  #L336b80.  if v2 < v3 then goto L336b94;
  #L336b84.  call temp:= `a`(v5, v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.a:(Ljava/io/InputStream;[B)I` @kind direct;
  #L336b8a.  v1:= temp;
  #L336b8c.  if v1 != v4 then goto L336b94;
  #L336b90.  @monitorexit v5
  #L336b92.  return v4;
  #L336b94.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] @kind object;
  #L336b98.  if v0 == v1 then goto L336bb0;
  #L336b9c.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] @kind object;
  #L336ba0.  if v0 == 0 then goto L336ba6;
  #L336ba4.  goto L336bb0;
  #L336ba6.  call temp:= `k`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.k:()Ljava/io/IOException;` @kind static;
  #L336bac.  v0:= temp @kind object;
  #L336bae.  throw v0;
  #L336bb0.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L336bb4.  v2:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int`;
  #L336bb8.  v1:= v1 - v2 @kind int;
  #L336bba.  if v1 <= 0 then goto L336bd2;
  #L336bbe.  v1:= v2 + 1;
  #L336bc2.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int` := v1;
  #L336bc6.  v0:= v0[v2] @kind byte;
  #L336bca.  v0:= v0 ^& 255;
  #L336bce.  @monitorexit v5
  #L336bd0.  return v0;
  #L336bd2.  @monitorexit v5
  #L336bd4.  return v4;
  #L336bd6.  call temp:= `k`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.k:()Ljava/io/IOException;` @kind static;
  #L336bdc.  v0:= temp @kind object;
  #L336bde.  throw v0;
  #L336be0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L336be2.  @monitorexit v5
  #L336be4.  throw v0;
  catch `java.lang.Throwable` @[L336b66..L336b8c] goto L336be0;
  catch `java.lang.Throwable` @[L336b94..L336bca] goto L336be0;
  catch `java.lang.Throwable` @[L336bd6..L336be0] goto L336be0;
}
procedure `int` `read`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L336c14.  @monitorenter v6
  #L336c16.  v0:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] @kind object;
  #L336c1a.  if v0 == 0 then goto L336d2a;
  #L336c1e.  if v9 != 0 then goto L336c28;
  #L336c22.  v7:= 0I;
  #L336c24.  @monitorexit v6
  #L336c26.  return v7;
  #L336c28.  v1:= v6.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L336c2c.  if v1 == 0 then goto L336d20;
  #L336c30.  v2:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int`;
  #L336c34.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L336c38.  if v2 >= v3 then goto L336c78;
  #L336c3c.  v4:= v3 - v2 @kind int;
  #L336c40.  if v4 < v9 then goto L336c48;
  #L336c44.  v3:= v9;
  #L336c46.  goto L336c4a;
  #L336c48.  v3:= v3 - v2 @kind int;
  #L336c4a.  call `arraycopy`(v0, v2, v7, v8, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L336c50.  v2:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int`;
  #L336c54.  v2:= v2 + v3 @kind int;
  #L336c56.  v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int` := v2;
  #L336c5a.  if v3 == v9 then goto L336c74;
  #L336c5e.  call temp:= `available`(v1) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L336c64.  v2:= temp;
  #L336c66.  if v2 != 0 then goto L336c6c;
  #L336c6a.  goto L336c74;
  #L336c6c.  v8:= v8 + v3 @kind int;
  #L336c6e.  v2:= v9 - v3 @kind int;
  #L336c72.  goto L336c7a;
  #L336c74.  @monitorexit v6
  #L336c76.  return v3;
  #L336c78.  v2:= v9;
  #L336c7a.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L336c7e.  v4:= -1I;
  #L336c80.  if v3 != v4 then goto L336ca4;
  #L336c84.  v3:= length @variable v0;
  #L336c86.  if v2 < v3 then goto L336ca4;
  #L336c8a.  call temp:= `read`(v1, v7, v8, v2) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L336c90.  v3:= temp;
  #L336c92.  if v3 != v4 then goto L336d00;
  #L336c96.  if v2 != v9 then goto L336c9c;
  #L336c9a.  goto L336ca0;
  #L336c9c.  v4:= v9 - v2 @kind int;
  #L336ca0.  @monitorexit v6
  #L336ca2.  return v4;
  #L336ca4.  call temp:= `a`(v6, v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.a:(Ljava/io/InputStream;[B)I` @kind direct;
  #L336caa.  v3:= temp;
  #L336cac.  if v3 != v4 then goto L336cbe;
  #L336cb0.  if v2 != v9 then goto L336cb6;
  #L336cb4.  goto L336cba;
  #L336cb6.  v4:= v9 - v2 @kind int;
  #L336cba.  @monitorexit v6
  #L336cbc.  return v4;
  #L336cbe.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] @kind object;
  #L336cc2.  if v0 == v3 then goto L336cda;
  #L336cc6.  v0:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] @kind object;
  #L336cca.  if v0 == 0 then goto L336cd0;
  #L336cce.  goto L336cda;
  #L336cd0.  call temp:= `k`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.k:()Ljava/io/IOException;` @kind static;
  #L336cd6.  v7:= temp @kind object;
  #L336cd8.  throw v7;
  #L336cda.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L336cde.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int`;
  #L336ce2.  v5:= v3 - v4 @kind int;
  #L336ce6.  if v5 < v2 then goto L336cee;
  #L336cea.  v3:= v2;
  #L336cec.  goto L336cf0;
  #L336cee.  v3:= v3 - v4 @kind int;
  #L336cf0.  call `arraycopy`(v0, v4, v7, v8, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L336cf6.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int`;
  #L336cfa.  v4:= v4 + v3 @kind int;
  #L336cfc.  v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int` := v4;
  #L336d00.  v2:= v2 - v3 @kind int;
  #L336d02.  if v2 != 0 then goto L336d0a;
  #L336d06.  @monitorexit v6
  #L336d08.  return v9;
  #L336d0a.  call temp:= `available`(v1) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L336d10.  v4:= temp;
  #L336d12.  if v4 != 0 then goto L336d1c;
  #L336d16.  v9:= v9 - v2 @kind int;
  #L336d18.  @monitorexit v6
  #L336d1a.  return v9;
  #L336d1c.  v8:= v8 + v3 @kind int;
  #L336d1e.  goto L336c7a;
  #L336d20.  call temp:= `k`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.k:()Ljava/io/IOException;` @kind static;
  #L336d26.  v7:= temp @kind object;
  #L336d28.  throw v7;
  #L336d2a.  call temp:= `k`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.k:()Ljava/io/IOException;` @kind static;
  #L336d30.  v7:= temp @kind object;
  #L336d32.  throw v7;
  #L336d34.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L336d36.  @monitorexit v6
  #L336d38.  goto L336d3c;
  #L336d3a.  throw v7;
  #L336d3c.  goto L336d3a;
  catch `java.lang.Throwable` @[L336c16..L336c1a] goto L336d34;
  catch `java.lang.Throwable` @[L336c28..L336c66] goto L336d34;
  catch `java.lang.Throwable` @[L336c7a..L336c92] goto L336d34;
  catch `java.lang.Throwable` @[L336ca4..L336cac] goto L336d34;
  catch `java.lang.Throwable` @[L336cbe..L336d00] goto L336d34;
  catch `java.lang.Throwable` @[L336d0a..L336d12] goto L336d34;
  catch `java.lang.Throwable` @[L336d20..L336d34] goto L336d34;
}
procedure `void` `reset`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L33701c.  @monitorenter v3
  #L33701e.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] @kind object;
  #L337022.  if v0 == 0 then goto L33707e;
  #L337026.  v0:= -1I;
  #L337028.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L33702c.  if v0 == v1 then goto L337038;
  #L337030.  v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int` := v1;
  #L337034.  @monitorexit v3
  #L337036.  return @kind void;
  #L337038.  v0:= new `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException`;
  #L33703c.  v1:= new `java.lang.StringBuilder`;
  #L337040.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L337046.  v2:= "Mark has been invalidated, pos: " @kind object;
  #L33704a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337050.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int`;
  #L337054.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33705a.  v2:= " markLimit: " @kind object;
  #L33705e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337064.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L337068.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33706e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L337074.  v1:= temp @kind object;
  #L337076.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream$InvalidMarkException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33707c.  throw v0;
  #L33707e.  v0:= new `java.io.IOException`;
  #L337082.  v1:= "Stream is closed" @kind object;
  #L337086.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33708c.  throw v0;
  #L33708e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L337090.  @monitorexit v3
  #L337092.  throw v0;
  catch `java.lang.Throwable` @[L33701e..L337034] goto L33708e;
  catch `java.lang.Throwable` @[L337038..L33708e] goto L33708e;
}
procedure `long` `skip`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v9 @kind this, `long` v10 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L336dac.  @monitorenter v9
  #L336dae.  v0:= 1L;
  #L336db2.  v2:= lcmp(v10, v0);
  #L336db6.  if v2 >= 0 then goto L336dc2;
  #L336dba.  v10:= 0L;
  #L336dbe.  @monitorexit v9
  #L336dc0.  return v10 @kind wide;
  #L336dc2.  v0:= v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`byte`[] @kind object;
  #L336dc6.  if v0 == 0 then goto L336e7c;
  #L336dca.  v1:= v9.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L336dce.  if v1 == 0 then goto L336e72;
  #L336dd2.  v2:= v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L336dd6.  v3:= v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int`;
  #L336dda.  v4:= v2 - v3 @kind int;
  #L336dde.  v4:= (`long`) v4 @kind i2l;
  #L336de0.  v6:= lcmp(v4, v10);
  #L336de4.  if v6 < 0 then goto L336df6;
  #L336de8.  v0:= (`long`) v3 @kind i2l;
  #L336dea.  v0:= v0 + v10 @kind long;
  #L336dec.  v1:= (`int`) v0 @kind l2i;
  #L336dee.  v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int` := v1;
  #L336df2.  @monitorexit v9
  #L336df4.  return v10 @kind wide;
  #L336df6.  v4:= (`long`) v2 @kind i2l;
  #L336df8.  v6:= (`long`) v3 @kind i2l;
  #L336dfa.  v4:= v4 - v6 @kind long;
  #L336dfc.  v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int` := v2;
  #L336e00.  v2:= v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L336e04.  v3:= -1I;
  #L336e06.  if v2 == v3 then goto L336e62;
  #L336e0a.  v2:= v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L336e0e.  v6:= (`long`) v2 @kind i2l;
  #L336e10.  v2:= lcmp(v10, v6);
  #L336e14.  if v2 > 0 then goto L336e62;
  #L336e18.  call temp:= `a`(v9, v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.a:(Ljava/io/InputStream;[B)I` @kind direct;
  #L336e1e.  v0:= temp;
  #L336e20.  if v0 != v3 then goto L336e28;
  #L336e24.  @monitorexit v9
  #L336e26.  return v4 @kind wide;
  #L336e28.  v0:= v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L336e2c.  v1:= v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int`;
  #L336e30.  v2:= v0 - v1 @kind int;
  #L336e34.  v2:= (`long`) v2 @kind i2l;
  #L336e36.  v6:= v10 - v4 @kind long;
  #L336e3a.  v8:= lcmp(v2, v6);
  #L336e3e.  if v8 < 0 then goto L336e52;
  #L336e42.  v0:= (`long`) v1 @kind i2l;
  #L336e44.  v0:= v0 + v10 @kind long;
  #L336e46.  v0:= v0 - v4 @kind long;
  #L336e48.  v1:= (`int`) v0 @kind l2i;
  #L336e4a.  v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int` := v1;
  #L336e4e.  @monitorexit v9
  #L336e50.  return v10 @kind wide;
  #L336e52.  v10:= (`long`) v0 @kind i2l;
  #L336e54.  v4:= v4 + v10 @kind long;
  #L336e56.  v10:= (`long`) v1 @kind i2l;
  #L336e58.  v4:= v4 - v10 @kind long;
  #L336e5a.  v9.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`int` := v0;
  #L336e5e.  @monitorexit v9
  #L336e60.  return v4 @kind wide;
  #L336e62.  v10:= v10 - v4 @kind long;
  #L336e64.  call temp:= `skip`(v1, v10) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L336e6a.  v10:= temp @kind wide;
  #L336e6c.  v4:= v4 + v10 @kind long;
  #L336e6e.  @monitorexit v9
  #L336e70.  return v4 @kind wide;
  #L336e72.  call temp:= `k`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.k:()Ljava/io/IOException;` @kind static;
  #L336e78.  v10:= temp @kind object;
  #L336e7a.  throw v10;
  #L336e7c.  call temp:= `k`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.k:()Ljava/io/IOException;` @kind static;
  #L336e82.  v10:= temp @kind object;
  #L336e84.  throw v10;
  #L336e86.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L336e88.  @monitorexit v9
  #L336e8a.  throw v10;
  catch `java.lang.Throwable` @[L336dc2..L336df2] goto L336e86;
  catch `java.lang.Throwable` @[L336dfc..L336e20] goto L336e86;
  catch `java.lang.Throwable` @[L336e28..L336e4e] goto L336e86;
  catch `java.lang.Throwable` @[L336e5a..L336e5e] goto L336e86;
  catch `java.lang.Throwable` @[L336e64..L336e6c] goto L336e86;
  catch `java.lang.Throwable` @[L336e72..L336e86] goto L336e86;
}
