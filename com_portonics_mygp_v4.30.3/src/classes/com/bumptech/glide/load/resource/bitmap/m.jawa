record `com.bumptech.glide.load.resource.bitmap.m` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.resource.bitmap.l` @kind interface {
  `java.io.InputStream` `com.bumptech.glide.load.resource.bitmap.m.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.m` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/m;.<init>:(Ljava/io/InputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3346ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3346f2.  v0.`com.bumptech.glide.load.resource.bitmap.m.a` @type ^`java.io.InputStream` := v1 @kind object;
  #L3346f6.  return @kind void;
}
procedure `int` `a`(`com.bumptech.glide.load.resource.bitmap.m` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/m;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3345f8.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.m.a` @type ^`java.io.InputStream` @kind object;
  #L3345fc.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L334602.  v0:= temp;
  #L334604.  v0:= v0 ^< 8;
  #L334608.  v1:= 65280I;
  #L33460e.  v0:= v0 ^& v1 @kind int;
  #L334610.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.m.a` @type ^`java.io.InputStream` @kind object;
  #L334614.  call temp:= `read`(v1) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L33461a.  v1:= temp;
  #L33461c.  v1:= v1 ^& 255;
  #L334620.  v0:= v0 ^| v1 @kind int;
  #L334622.  return v0;
}
procedure `int` `b`(`com.bumptech.glide.load.resource.bitmap.m` v3 @kind this, `byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/m;.b:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L334634.  v0:= v5;
  #L334636.  if v0 <= 0 then goto L334654;
  #L33463a.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.m.a` @type ^`java.io.InputStream` @kind object;
  #L33463e.  v2:= v5 - v0 @kind int;
  #L334642.  call temp:= `read`(v1, v4, v2, v0) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L334648.  v1:= temp;
  #L33464a.  v2:= -1I;
  #L33464c.  if v1 == v2 then goto L334654;
  #L334650.  v0:= v0 - v1 @kind int;
  #L334652.  goto L334636;
  #L334654.  v5:= v5 - v0 @kind int;
  #L334656.  return v5;
}
procedure `short` `c`(`com.bumptech.glide.load.resource.bitmap.m` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/m;.c:()S` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3346c8.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.m.a` @type ^`java.io.InputStream` @kind object;
  #L3346cc.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L3346d2.  v0:= temp;
  #L3346d4.  v0:= v0 ^& 255;
  #L3346d8.  v0:= (`short`) v0 @kind i2s;
  #L3346da.  return v0;
}
procedure `int` `d`(`com.bumptech.glide.load.resource.bitmap.m` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/m;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3345d8.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.m.a` @type ^`java.io.InputStream` @kind object;
  #L3345dc.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L3345e2.  v0:= temp;
  #L3345e4.  return v0;
}
procedure `long` `skip`(`com.bumptech.glide.load.resource.bitmap.m` v7 @kind this, `long` v8 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/m;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L334668.  v0:= 0L;
  #L33466c.  v2:= lcmp(v8, v0);
  #L334670.  if v2 >= 0 then goto L334676;
  #L334674.  return v0 @kind wide;
  #L334676.  v2:= v8 @kind wide;
  #L334678.  v4:= lcmp(v2, v0);
  #L33467c.  if v4 <= 0 then goto L3346b2;
  #L334680.  v4:= v7.`com.bumptech.glide.load.resource.bitmap.m.a` @type ^`java.io.InputStream` @kind object;
  #L334684.  call temp:= `skip`(v4, v2) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L33468a.  v4:= temp @kind wide;
  #L33468c.  v6:= lcmp(v4, v0);
  #L334690.  if v6 <= 0 then goto L334698;
  #L334694.  v2:= v2 - v4 @kind long;
  #L334696.  goto L334678;
  #L334698.  v4:= v7.`com.bumptech.glide.load.resource.bitmap.m.a` @type ^`java.io.InputStream` @kind object;
  #L33469c.  call temp:= `read`(v4) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L3346a2.  v4:= temp;
  #L3346a4.  v5:= -1I;
  #L3346a6.  if v4 != v5 then goto L3346ac;
  #L3346aa.  goto L3346b2;
  #L3346ac.  v4:= 1L;
  #L3346b0.  goto L334694;
  #L3346b2.  v8:= v8 - v2 @kind long;
  #L3346b4.  return v8 @kind wide;
}
