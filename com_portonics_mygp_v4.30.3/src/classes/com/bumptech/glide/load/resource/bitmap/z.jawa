record `com.bumptech.glide.load.resource.bitmap.z` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.k` @kind interface {
  `com.bumptech.glide.load.k` `com.bumptech.glide.load.resource.bitmap.z.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.load.resource.bitmap.z.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.z` v0 @kind this, `com.bumptech.glide.load.k` v1 @kind object, `boolean` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/z;.<init>:(Lcom/bumptech/glide/load/k;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3365e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3365e6.  v0.`com.bumptech.glide.load.resource.bitmap.z.b` @type ^`com.bumptech.glide.load.k` := v1 @kind object;
  #L3365ea.  v0.`com.bumptech.glide.load.resource.bitmap.z.c` @type ^`boolean` := v2 @kind boolean;
  #L3365ee.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.u0` `d`(`com.bumptech.glide.load.resource.bitmap.z` v0 @kind this, `android.content.Context` v1 @kind object, `com.bumptech.glide.load.engine.u0` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/z;.d:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/u0;)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PRIVATE {
    temp;

  #L3364f8.  call temp:= `getResources`(v1) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3364fe.  v1:= temp @kind object;
  #L336500.  call temp:= `f`(v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/d0;.f:(Landroid/content/res/Resources;Lcom/bumptech/glide/load/engine/u0;)Lcom/bumptech/glide/load/engine/u0;` @kind static;
  #L336506.  v1:= temp @kind object;
  #L336508.  return v1 @kind object;
}
procedure `void` `a`(`com.bumptech.glide.load.resource.bitmap.z` v1 @kind this, `java.security.MessageDigest` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/z;.a:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336600.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.z.b` @type ^`com.bumptech.glide.load.k` @kind object;
  #L336604.  call `a`(v0, v2) @signature `Lcom/bumptech/glide/load/c;.a:(Ljava/security/MessageDigest;)V` @kind interface;
  #L33660a.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.u0` `b`(`com.bumptech.glide.load.resource.bitmap.z` v2 @kind this, `android.content.Context` v3 @kind object, `com.bumptech.glide.load.engine.u0` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/z;.b:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/u0;II)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33651c.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/e;.c:(Landroid/content/Context;)Lcom/bumptech/glide/e;` @kind static;
  #L336522.  v0:= temp @kind object;
  #L336524.  call temp:= `f`(v0) @signature `Lcom/bumptech/glide/e;.f:()Lcom/bumptech/glide/load/engine/bitmap_recycle/g;` @kind virtual;
  #L33652a.  v0:= temp @kind object;
  #L33652c.  call temp:= `get`(v4) @signature `Lcom/bumptech/glide/load/engine/u0;.get:()Ljava/lang/Object;` @kind interface;
  #L336532.  v1:= temp @kind object;
  #L336534.  v1:= (`android.graphics.drawable.Drawable`) v1 @kind object;
  #L336538.  call temp:= `a`(v0, v1, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/y;.a:(Lcom/bumptech/glide/load/engine/bitmap_recycle/g;Landroid/graphics/drawable/Drawable;II)Lcom/bumptech/glide/load/engine/u0;` @kind static;
  #L33653e.  v0:= temp @kind object;
  #L336540.  if v0 != 0 then goto L336586;
  #L336544.  v3:= v2.`com.bumptech.glide.load.resource.bitmap.z.c` @type ^`boolean` @kind boolean;
  #L336548.  if v3 != 0 then goto L33654e;
  #L33654c.  return v4 @kind object;
  #L33654e.  v3:= new `java.lang.IllegalArgumentException`;
  #L336552.  v4:= new `java.lang.StringBuilder`;
  #L336556.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33655c.  v5:= "Unable to convert " @kind object;
  #L336560.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336566.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33656c.  v5:= " to a Bitmap" @kind object;
  #L336570.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336576.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33657c.  v4:= temp @kind object;
  #L33657e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336584.  throw v3;
  #L336586.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.z.b` @type ^`com.bumptech.glide.load.k` @kind object;
  #L33658a.  call temp:= `b`(v1, v3, v0, v5, v6) @signature `Lcom/bumptech/glide/load/k;.b:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/u0;II)Lcom/bumptech/glide/load/engine/u0;` @kind interface;
  #L336590.  v5:= temp @kind object;
  #L336592.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L336598.  v6:= temp;
  #L33659a.  if v6 == 0 then goto L3365a6;
  #L33659e.  call `c`(v5) @signature `Lcom/bumptech/glide/load/engine/u0;.c:()V` @kind interface;
  #L3365a4.  return v4 @kind object;
  #L3365a6.  call temp:= `d`(v2, v3, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/z;.d:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/u0;)Lcom/bumptech/glide/load/engine/u0;` @kind direct;
  #L3365ac.  v3:= temp @kind object;
  #L3365ae.  return v3 @kind object;
}
procedure `com.bumptech.glide.load.k` `c`(`com.bumptech.glide.load.resource.bitmap.z` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/z;.c:()Lcom/bumptech/glide/load/k;` @AccessFlag PUBLIC {
    temp;

  #L3364e4.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.resource.bitmap.z` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/z;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3364b0.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.resource.bitmap.z` @kind boolean;
  #L3364b4.  if v0 == 0 then goto L3364ce;
  #L3364b8.  v2:= (`com.bumptech.glide.load.resource.bitmap.z`) v2 @kind object;
  #L3364bc.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.z.b` @type ^`com.bumptech.glide.load.k` @kind object;
  #L3364c0.  v2:= v2.`com.bumptech.glide.load.resource.bitmap.z.b` @type ^`com.bumptech.glide.load.k` @kind object;
  #L3364c4.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3364ca.  v2:= temp;
  #L3364cc.  return v2;
  #L3364ce.  v2:= 0I;
  #L3364d0.  return v2;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.resource.bitmap.z` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/z;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3365c0.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.z.b` @type ^`com.bumptech.glide.load.k` @kind object;
  #L3365c4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3365ca.  v0:= temp;
  #L3365cc.  return v0;
}
