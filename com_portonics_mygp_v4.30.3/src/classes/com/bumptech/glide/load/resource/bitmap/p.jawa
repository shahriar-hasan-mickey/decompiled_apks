record `com.bumptech.glide.load.resource.bitmap.p` @kind class @AccessFlag  extends `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind class {
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.p` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/p;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L334f78.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;.<init>:()V` @kind direct;
  #L334f7e.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding` `a`(`com.bumptech.glide.load.resource.bitmap.p` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/p;.a:(IIII)Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$SampleSizeRounding;` @AccessFlag PUBLIC {
    temp;

  #L334f08.  v1:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding.MEMORY` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding` @kind object;
  #L334f0c.  return v1 @kind object;
}
procedure `float` `b`(`com.bumptech.glide.load.resource.bitmap.p` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/p;.b:(IIII)F` @AccessFlag PUBLIC {
    temp;

  #L334f20.  v2:= (`float`) v2 @kind i2f;
  #L334f22.  v4:= (`float`) v4 @kind i2f;
  #L334f24.  v2:= v2 / v4 @kind float;
  #L334f26.  v1:= (`float`) v1 @kind i2f;
  #L334f28.  v3:= (`float`) v3 @kind i2f;
  #L334f2a.  v1:= v1 / v3 @kind float;
  #L334f2c.  call temp:= `max`(v2, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L334f32.  v1:= temp;
  #L334f34.  v1:= (`double`) v1 @kind f2d;
  #L334f36.  call temp:= `ceil`(v1) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L334f3c.  v1:= temp @kind wide;
  #L334f3e.  v1:= (`int`) v1 @kind d2i;
  #L334f40.  call temp:= `highestOneBit`(v1) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L334f46.  v2:= temp;
  #L334f48.  v3:= 1I;
  #L334f4a.  call temp:= `max`(v3, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L334f50.  v2:= temp;
  #L334f52.  if v2 >= v1 then goto L334f58;
  #L334f56.  goto L334f5a;
  #L334f58.  v3:= 0I;
  #L334f5a.  v1:= v2 ^< v3 @kind int;
  #L334f5e.  v2:= 1.0F;
  #L334f62.  v1:= (`float`) v1 @kind i2f;
  #L334f64.  v2:= v2 / v1 @kind float;
  #L334f66.  return v2;
}
