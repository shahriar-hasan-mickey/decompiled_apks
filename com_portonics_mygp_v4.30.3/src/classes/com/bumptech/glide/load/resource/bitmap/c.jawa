record `com.bumptech.glide.load.resource.bitmap.c` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.j` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.b` `com.bumptech.glide.load.resource.bitmap.c.c` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.g` `@@com.bumptech.glide.load.resource.bitmap.c.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.g` `@@com.bumptech.glide.load.resource.bitmap.c.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L333ed0.  v0:= 90I;
  #L333ed4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L333eda.  v0:= temp @kind object;
  #L333edc.  v1:= "com.bumptech.glide.load.resource.bitmap.BitmapEncoder.CompressionQuality" @kind object;
  #L333ee0.  call temp:= `f`(v1, v0) @signature `Lcom/bumptech/glide/load/g;.f:(Ljava/lang/String;Ljava/lang/Object;)Lcom/bumptech/glide/load/g;` @kind static;
  #L333ee6.  v0:= temp @kind object;
  #L333ee8.  `@@com.bumptech.glide.load.resource.bitmap.c.a` @type ^`com.bumptech.glide.load.g` := v0 @kind object;
  #L333eec.  v0:= "com.bumptech.glide.load.resource.bitmap.BitmapEncoder.CompressionFormat" @kind object;
  #L333ef0.  call temp:= `e`(v0) @signature `Lcom/bumptech/glide/load/g;.e:(Ljava/lang/String;)Lcom/bumptech/glide/load/g;` @kind static;
  #L333ef6.  v0:= temp @kind object;
  #L333ef8.  `@@com.bumptech.glide.load.resource.bitmap.c.b` @type ^`com.bumptech.glide.load.g` := v0 @kind object;
  #L333efc.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.c` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.b` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L333f10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L333f16.  v0.`com.bumptech.glide.load.resource.bitmap.c.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.b` := v1 @kind object;
  #L333f1a.  return @kind void;
}
procedure `android.graphics.Bitmap$CompressFormat` `d`(`com.bumptech.glide.load.resource.bitmap.c` v1 @kind this, `android.graphics.Bitmap` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.d:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/h;)Landroid/graphics/Bitmap$CompressFormat;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L333c6c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.c.b` @type ^`com.bumptech.glide.load.g` @kind object;
  #L333c70.  call temp:= `c`(v3, v0) @signature `Lcom/bumptech/glide/load/h;.c:(Lcom/bumptech/glide/load/g;)Ljava/lang/Object;` @kind virtual;
  #L333c76.  v3:= temp @kind object;
  #L333c78.  v3:= (`android.graphics.Bitmap$CompressFormat`) v3 @kind object;
  #L333c7c.  if v3 == 0 then goto L333c82;
  #L333c80.  return v3 @kind object;
  #L333c82.  call temp:= `hasAlpha`(v2) @signature `Landroid/graphics/Bitmap;.hasAlpha:()Z` @kind virtual;
  #L333c88.  v2:= temp;
  #L333c8a.  if v2 == 0 then goto L333c94;
  #L333c8e.  v2:= `@@android.graphics.Bitmap$CompressFormat.PNG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L333c92.  return v2 @kind object;
  #L333c94.  v2:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L333c98.  return v2 @kind object;
}
procedure `boolean` `a`(`com.bumptech.glide.load.resource.bitmap.c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.File` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.a:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L333e98.  v1:= (`com.bumptech.glide.load.engine.u0`) v1 @kind object;
  #L333e9c.  call temp:= `c`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.c:(Lcom/bumptech/glide/load/engine/u0;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L333ea2.  v1:= temp;
  #L333ea4.  return v1;
}
procedure `com.bumptech.glide.load.EncodeStrategy` `b`(`com.bumptech.glide.load.resource.bitmap.c` v0 @kind this, `com.bumptech.glide.load.h` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.b:(Lcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/EncodeStrategy;` @AccessFlag PUBLIC {
    temp;

  #L333eb8.  v1:= `@@com.bumptech.glide.load.EncodeStrategy.TRANSFORMED` @type ^`com.bumptech.glide.load.EncodeStrategy` @kind object;
  #L333ebc.  return v1 @kind object;
}
procedure `boolean` `c`(`com.bumptech.glide.load.resource.bitmap.c` v8 @kind this, `com.bumptech.glide.load.engine.u0` v9 @kind object, `java.io.File` v10 @kind object, `com.bumptech.glide.load.h` v11 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.c:(Lcom/bumptech/glide/load/engine/u0;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L333cac.  v0:= "BitmapEncoder" @kind object;
  #L333cb0.  call temp:= `get`(v9) @signature `Lcom/bumptech/glide/load/engine/u0;.get:()Ljava/lang/Object;` @kind interface;
  #L333cb6.  v9:= temp @kind object;
  #L333cb8.  v9:= (`android.graphics.Bitmap`) v9 @kind object;
  #L333cbc.  call temp:= `d`(v8, v9, v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.d:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/h;)Landroid/graphics/Bitmap$CompressFormat;` @kind direct;
  #L333cc2.  v1:= temp @kind object;
  #L333cc4.  call temp:= `getWidth`(v9) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L333cca.  v2:= temp;
  #L333ccc.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L333cd2.  v2:= temp @kind object;
  #L333cd4.  call temp:= `getHeight`(v9) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L333cda.  v3:= temp;
  #L333cdc.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L333ce2.  v3:= temp @kind object;
  #L333ce4.  v4:= "encode: [%dx%d] %s" @kind object;
  #L333ce8.  call `c`(v4, v2, v3, v1) @signature `Lcom/bumptech/glide/s/q/i;.c:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L333cee.  call temp:= `b`() @signature `Lcom/bumptech/glide/s/j;.b:()J` @kind static;
  #L333cf4.  v2:= temp @kind wide;
  #L333cf6.  v4:= `@@com.bumptech.glide.load.resource.bitmap.c.a` @type ^`com.bumptech.glide.load.g` @kind object;
  #L333cfa.  call temp:= `c`(v11, v4) @signature `Lcom/bumptech/glide/load/h;.c:(Lcom/bumptech/glide/load/g;)Ljava/lang/Object;` @kind virtual;
  #L333d00.  v4:= temp @kind object;
  #L333d02.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L333d06.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L333d0c.  v4:= temp;
  #L333d0e.  v5:= 0I;
  #L333d10.  v6:= 0I;
  #L333d12.  v7:= new `java.io.FileOutputStream`;
  #L333d16.  call `<init>`(v7, v10) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L333d1c.  v10:= v8.`com.bumptech.glide.load.resource.bitmap.c.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.b` @kind object;
  #L333d20.  if v10 == 0 then goto L333d36;
  #L333d24.  v10:= new `com.bumptech.glide.load.l.c`;
  #L333d28.  v6:= v8.`com.bumptech.glide.load.resource.bitmap.c.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.b` @kind object;
  #L333d2c.  call `<init>`(v10, v7, v6) @signature `Lcom/bumptech/glide/load/l/c;.<init>:(Ljava/io/OutputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/b;)V` @kind direct;
  #L333d32.  v6:= v10 @kind object;
  #L333d34.  goto L333d38;
  #L333d36.  v6:= v7 @kind object;
  #L333d38.  call temp:= `compress`(v9, v1, v4, v6) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L333d3e.  call `close`(v6) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L333d44.  v5:= 1I;
  #L333d46.  call `close`(v6) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L333d4c.  goto L333d6c;
  #L333d4e.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L333d50.  v6:= v7 @kind object;
  #L333d52.  goto L333e06;
  #L333d54.  v6:= v7 @kind object;
  #L333d56.  goto L333d5c;
  #L333d58.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L333d5a.  goto L333e06;
  #L333d5c.  v10:= 3I;
  #L333d5e.  call temp:= `isLoggable`(v0, v10) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L333d64.  v10:= temp;
  #L333d66.  if v6 == 0 then goto L333d6c;
  #L333d6a.  goto L333d46;
  #L333d6c.  v10:= 2I;
  #L333d6e.  call temp:= `isLoggable`(v0, v10) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L333d74.  v10:= temp;
  #L333d76.  if v10 == 0 then goto L333dfe;
  #L333d7a.  v10:= new `java.lang.StringBuilder`;
  #L333d7e.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L333d84.  v0:= "Compressed with type: " @kind object;
  #L333d88.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333d8e.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333d94.  v0:= " of size " @kind object;
  #L333d98.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333d9e.  call temp:= `h`(v9) @signature `Lcom/bumptech/glide/s/p;.h:(Landroid/graphics/Bitmap;)I` @kind static;
  #L333da4.  v0:= temp;
  #L333da6.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L333dac.  v0:= " in " @kind object;
  #L333db0.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333db6.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/s/j;.a:(J)D` @kind static;
  #L333dbc.  v0:= temp @kind wide;
  #L333dbe.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L333dc4.  v0:= ", options format: " @kind object;
  #L333dc8.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333dce.  v0:= `@@com.bumptech.glide.load.resource.bitmap.c.b` @type ^`com.bumptech.glide.load.g` @kind object;
  #L333dd2.  call temp:= `c`(v11, v0) @signature `Lcom/bumptech/glide/load/h;.c:(Lcom/bumptech/glide/load/g;)Ljava/lang/Object;` @kind virtual;
  #L333dd8.  v11:= temp @kind object;
  #L333dda.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333de0.  v11:= ", hasAlpha: " @kind object;
  #L333de4.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333dea.  call temp:= `hasAlpha`(v9) @signature `Landroid/graphics/Bitmap;.hasAlpha:()Z` @kind virtual;
  #L333df0.  v9:= temp;
  #L333df2.  call temp:= `append`(v10, v9) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L333df8.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L333dfe.  call `d`() @signature `Lcom/bumptech/glide/s/q/i;.d:()V` @kind static;
  #L333e04.  return v5;
  #L333e06.  if v6 == 0 then goto L333e10;
  #L333e0a.  call `close`(v6) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L333e10.  throw v9;
  #L333e12.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L333e14.  call `d`() @signature `Lcom/bumptech/glide/s/q/i;.d:()V` @kind static;
  #L333e1a.  goto L333e1e;
  #L333e1c.  throw v9;
  #L333e1e.  goto L333e1c;
  catch `java.lang.Throwable` @[L333cee..L333d0e] goto L333e12;
  catch `java.io.IOException` @[L333d12..L333d1c] goto L333d5c;
  catch `java.lang.Throwable` @[L333d12..L333d1c] goto L333d58;
  catch `java.io.IOException` @[L333d1c..L333d32] goto L333d54;
  catch `java.lang.Throwable` @[L333d1c..L333d32] goto L333d4e;
  catch `java.io.IOException` @[L333d38..L333d44] goto L333d5c;
  catch `java.lang.Throwable` @[L333d38..L333d44] goto L333d58;
  catch `java.io.IOException` @[L333d46..L333d4c] goto L333d6c;
  catch `java.lang.Throwable` @[L333d46..L333d4c] goto L333e12;
  catch `java.lang.Throwable` @[L333d5e..L333d66] goto L333d58;
  catch `java.lang.Throwable` @[L333d6e..L333dfe] goto L333e12;
  catch `java.io.IOException` @[L333e0a..L333e10] goto L333e10;
  catch `java.lang.Throwable` @[L333e0a..L333e10] goto L333e12;
  catch `java.lang.Throwable` @[L333e10..L333e12] goto L333e12;
}
