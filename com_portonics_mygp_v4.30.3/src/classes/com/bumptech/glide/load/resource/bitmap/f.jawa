record `com.bumptech.glide.load.resource.bitmap.f` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.i` @kind interface {
  `com.bumptech.glide.load.resource.bitmap.w` `com.bumptech.glide.load.resource.bitmap.f.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.f` v0 @kind this, `com.bumptech.glide.load.resource.bitmap.w` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/f;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/w;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L334194.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33419a.  v0.`com.bumptech.glide.load.resource.bitmap.f.a` @type ^`com.bumptech.glide.load.resource.bitmap.w` := v1 @kind object;
  #L33419e.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.resource.bitmap.f` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/f;.a:(Ljava/lang/Object;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L33410c.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L334110.  call temp:= `d`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/f;.d:(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L334116.  v1:= temp;
  #L334118.  return v1;
}
procedure `com.bumptech.glide.load.engine.u0` `b`(`com.bumptech.glide.load.resource.bitmap.f` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/f;.b:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L33414c.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L334150.  call temp:= `c`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/f;.c:(Ljava/nio/ByteBuffer;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @kind virtual;
  #L334156.  v1:= temp @kind object;
  #L334158.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.u0` `c`(`com.bumptech.glide.load.resource.bitmap.f` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.h` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/f;.c:(Ljava/nio/ByteBuffer;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33416c.  call temp:= `e`(v2) @signature `Lcom/bumptech/glide/s/c;.e:(Ljava/nio/ByteBuffer;)Ljava/io/InputStream;` @kind static;
  #L334172.  v2:= temp @kind object;
  #L334174.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.f.a` @type ^`com.bumptech.glide.load.resource.bitmap.w` @kind object;
  #L334178.  call temp:= `d`(v0, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/w;.d:(Ljava/io/InputStream;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @kind virtual;
  #L33417e.  v2:= temp @kind object;
  #L334180.  return v2 @kind object;
}
procedure `boolean` `d`(`com.bumptech.glide.load.resource.bitmap.f` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/f;.d:(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;

  #L33412c.  v2:= v0.`com.bumptech.glide.load.resource.bitmap.f.a` @type ^`com.bumptech.glide.load.resource.bitmap.w` @kind object;
  #L334130.  call temp:= `n`(v2, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/w;.n:(Ljava/nio/ByteBuffer;)Z` @kind virtual;
  #L334136.  v1:= temp;
  #L334138.  return v1;
}
