record `com.bumptech.glide.load.resource.bitmap.e` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.bumptech.glide.load.k` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.e` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3340f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3340fa.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.u0` `b`(`com.bumptech.glide.load.resource.bitmap.e` v2 @kind this, `android.content.Context` v3 @kind object, `com.bumptech.glide.load.engine.u0` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.b:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/u0;II)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L334038.  call temp:= `t`(v5, v6) @signature `Lcom/bumptech/glide/s/p;.t:(II)Z` @kind static;
  #L33403e.  v0:= temp;
  #L334040.  if v0 == 0 then goto L33409c;
  #L334044.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/e;.c:(Landroid/content/Context;)Lcom/bumptech/glide/e;` @kind static;
  #L33404a.  v3:= temp @kind object;
  #L33404c.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/e;.f:()Lcom/bumptech/glide/load/engine/bitmap_recycle/g;` @kind virtual;
  #L334052.  v3:= temp @kind object;
  #L334054.  call temp:= `get`(v4) @signature `Lcom/bumptech/glide/load/engine/u0;.get:()Ljava/lang/Object;` @kind interface;
  #L33405a.  v0:= temp @kind object;
  #L33405c.  v0:= (`android.graphics.Bitmap`) v0 @kind object;
  #L334060.  v1:= -2147483648I;
  #L334064.  if v5 != v1 then goto L334070;
  #L334068.  call temp:= `getWidth`(v0) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L33406e.  v5:= temp;
  #L334070.  if v6 != v1 then goto L33407c;
  #L334074.  call temp:= `getHeight`(v0) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L33407a.  v6:= temp;
  #L33407c.  call temp:= `c`(v2, v3, v0, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/g;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @kind virtual;
  #L334082.  v5:= temp @kind object;
  #L334084.  call temp:= `equals`(v0, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33408a.  v6:= temp;
  #L33408c.  if v6 == 0 then goto L334092;
  #L334090.  goto L33409a;
  #L334092.  call temp:= `f`(v5, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/d;.f:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/g;)Lcom/bumptech/glide/load/resource/bitmap/d;` @kind static;
  #L334098.  v4:= temp @kind object;
  #L33409a.  return v4 @kind object;
  #L33409c.  v3:= new `java.lang.IllegalArgumentException`;
  #L3340a0.  v4:= new `java.lang.StringBuilder`;
  #L3340a4.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3340aa.  v0:= "Cannot apply transformation on width: " @kind object;
  #L3340ae.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3340b4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3340ba.  v5:= " or height: " @kind object;
  #L3340be.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3340c4.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3340ca.  v5:= " less than or equal to zero and not Target.SIZE_ORIGINAL" @kind object;
  #L3340ce.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3340d4.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3340da.  v4:= temp @kind object;
  #L3340dc.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3340e2.  throw v3;
}
procedure `android.graphics.Bitmap` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.g` v0 @kind object, `android.graphics.Bitmap` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/g;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
