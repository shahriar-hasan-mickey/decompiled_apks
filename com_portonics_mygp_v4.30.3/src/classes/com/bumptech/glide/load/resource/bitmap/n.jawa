record `com.bumptech.glide.load.resource.bitmap.n` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.ImageHeaderParser` @kind interface {
}
global `byte`[] `@@com.bumptech.glide.load.resource.bitmap.n.a` @AccessFlag STATIC_FINAL;
global `int`[] `@@com.bumptech.glide.load.resource.bitmap.n.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L334e10.  v0:= "UTF-8" @kind object;
  #L334e14.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L334e1a.  v0:= temp @kind object;
  #L334e1c.  v1:= "Exif\u0000\u0000" @kind object;
  #L334e20.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L334e26.  v0:= temp @kind object;
  #L334e28.  `@@com.bumptech.glide.load.resource.bitmap.n.a` @type ^`byte`[] := v0 @kind object;
  #L334e2c.  v0:= 13I;
  #L334e30.  v0:= new `int`[v0];
  #L334e34.  goto L334e40;
  #L334e3a.  `@@com.bumptech.glide.load.resource.bitmap.n.b` @type ^`int`[] := v0 @kind object;
  #L334e3e.  return @kind void;
  #L334e40.  v0:= (0I, 1I, 1I, 2I, 4I, 8I, 1I, 1I, 2I, 4I, 8I, 4I, 8I) @kind object;
  #L334e7b.  goto L334e3a;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.n` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L334e8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L334e92.  return @kind void;
}
procedure `int` `d`(`int` v0 , `int` v1 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.d:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L334948.  v0:= v0 + 2;
  #L33494c.  v1:= v1 * 12;
  #L334950.  v0:= v0 + v1 @kind int;
  #L334952.  return v0;
}
procedure `int` `e`(`com.bumptech.glide.load.resource.bitmap.n` v5 @kind this, `com.bumptech.glide.load.resource.bitmap.l` v6 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.b` v7 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.e:(Lcom/bumptech/glide/load/resource/bitmap/l;Lcom/bumptech/glide/load/engine/bitmap_recycle/b;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L334964.  call temp:= `a`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.a:()I` @kind interface;
  #L33496a.  v0:= temp;
  #L33496c.  call temp:= `g`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.g:(I)Z` @kind static;
  #L334972.  v1:= temp;
  #L334974.  v2:= 3I;
  #L334976.  v3:= "DfltImageHeaderParser" @kind object;
  #L33497a.  v4:= -1I;
  #L33497c.  if v1 != 0 then goto L3349ae;
  #L334980.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L334986.  v6:= temp;
  #L334988.  if v6 == 0 then goto L3349ac;
  #L33498c.  v6:= new `java.lang.StringBuilder`;
  #L334990.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L334996.  v7:= "Parser doesn't handle magic number: " @kind object;
  #L33499a.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3349a0.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3349a6.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3349ac.  return v4;
  #L3349ae.  call temp:= `i`(v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.i:(Lcom/bumptech/glide/load/resource/bitmap/l;)I` @kind direct;
  #L3349b4.  v0:= temp;
  #L3349b6.  if v0 != v4 then goto L3349bc;
  #L3349ba.  return v4;
  #L3349bc.  v1:= constclass @type ^`byte`[] @kind object;
  #L3349c0.  call temp:= `e`(v7, v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/b;.e:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L3349c6.  v1:= temp @kind object;
  #L3349c8.  v1:= (`byte`[]) v1 @kind object;
  #L3349cc.  call temp:= `k`(v5, v6, v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.k:(Lcom/bumptech/glide/load/resource/bitmap/l;[BI)I` @kind direct;
  #L3349d2.  v6:= temp;
  #L3349d4.  call `d`(v7, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/b;.d:(Ljava/lang/Object;)V` @kind interface;
  #L3349da.  return v6;
  #L3349dc.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3349de.  call `d`(v7, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/b;.d:(Ljava/lang/Object;)V` @kind interface;
  #L3349e4.  throw v6;
  catch `java.lang.Throwable` @[L3349cc..L3349d4] goto L3349dc;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `f`(`com.bumptech.glide.load.resource.bitmap.n` v6 @kind this, `com.bumptech.glide.load.resource.bitmap.l` v7 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.f:(Lcom/bumptech/glide/load/resource/bitmap/l;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L334790.  call temp:= `a`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.a:()I` @kind interface;
  #L334796.  v0:= temp;
  #L334798.  v1:= 65496I;
  #L33479e.  if v0 != v1 then goto L3347a8;
  #L3347a2.  v7:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.JPEG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3347a6.  return v7 @kind object;
  #L3347a8.  v0:= v0 ^< 16;
  #L3347ac.  v1:= -65536I;
  #L3347b0.  v0:= v0 ^& v1 @kind int;
  #L3347b2.  call temp:= `a`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.a:()I` @kind interface;
  #L3347b8.  v2:= temp;
  #L3347ba.  v3:= 65535I;
  #L3347c0.  v2:= v2 ^& v3 @kind int;
  #L3347c2.  v0:= v0 ^| v2 @kind int;
  #L3347c4.  v2:= -1991225785I;
  #L3347ca.  if v0 != v2 then goto L3347f2;
  #L3347ce.  v0:= 21L;
  #L3347d2.  call temp:= `skip`(v7, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.skip:(J)J` @kind interface;
  #L3347d8.  call temp:= `d`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.d:()I` @kind interface;
  #L3347de.  v7:= temp;
  #L3347e0.  v0:= 3I;
  #L3347e2.  if v7 < v0 then goto L3347ec;
  #L3347e6.  v7:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3347ea.  goto L3347f0;
  #L3347ec.  v7:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3347f0.  return v7 @kind object;
  #L3347f2.  v2:= v0 ^> 8;
  #L3347f6.  v4:= 4671814I;
  #L3347fc.  if v2 != v4 then goto L334806;
  #L334800.  v7:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.GIF` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L334804.  return v7 @kind object;
  #L334806.  v2:= 1380533830I;
  #L33480c.  if v0 == v2 then goto L334816;
  #L334810.  v7:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L334814.  return v7 @kind object;
  #L334816.  v4:= 4L;
  #L33481a.  call temp:= `skip`(v7, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.skip:(J)J` @kind interface;
  #L334820.  call temp:= `a`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.a:()I` @kind interface;
  #L334826.  v0:= temp;
  #L334828.  v0:= v0 ^< 16;
  #L33482c.  v0:= v0 ^& v1 @kind int;
  #L33482e.  call temp:= `a`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.a:()I` @kind interface;
  #L334834.  v2:= temp;
  #L334836.  v2:= v2 ^& v3 @kind int;
  #L334838.  v0:= v0 ^| v2 @kind int;
  #L33483a.  v2:= 1464156752I;
  #L334840.  if v0 == v2 then goto L33484a;
  #L334844.  v7:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L334848.  return v7 @kind object;
  #L33484a.  call temp:= `a`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.a:()I` @kind interface;
  #L334850.  v0:= temp;
  #L334852.  v0:= v0 ^< 16;
  #L334856.  v0:= v0 ^& v1 @kind int;
  #L334858.  call temp:= `a`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.a:()I` @kind interface;
  #L33485e.  v1:= temp;
  #L334860.  v1:= v1 ^& v3 @kind int;
  #L334862.  v0:= v0 ^| v1 @kind int;
  #L334864.  v1:= v0 ^& -256;
  #L334868.  v2:= 1448097792I;
  #L33486e.  if v1 == v2 then goto L334878;
  #L334872.  v7:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L334876.  return v7 @kind object;
  #L334878.  v0:= v0 ^& 255;
  #L33487c.  v1:= 88I;
  #L334880.  if v0 != v1 then goto L3348a6;
  #L334884.  call temp:= `skip`(v7, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.skip:(J)J` @kind interface;
  #L33488a.  call temp:= `d`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.d:()I` @kind interface;
  #L334890.  v7:= temp;
  #L334892.  v7:= v7 ^& 16;
  #L334896.  if v7 == 0 then goto L3348a0;
  #L33489a.  v7:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L33489e.  goto L3348a4;
  #L3348a0.  v7:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3348a4.  return v7 @kind object;
  #L3348a6.  v1:= 76I;
  #L3348aa.  if v0 != v1 then goto L3348d0;
  #L3348ae.  call temp:= `skip`(v7, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.skip:(J)J` @kind interface;
  #L3348b4.  call temp:= `d`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.d:()I` @kind interface;
  #L3348ba.  v7:= temp;
  #L3348bc.  v7:= v7 ^& 8;
  #L3348c0.  if v7 == 0 then goto L3348ca;
  #L3348c4.  v7:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3348c8.  goto L3348ce;
  #L3348ca.  v7:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3348ce.  return v7 @kind object;
  #L3348d0.  v7:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3348d4.  return v7 @kind object;
}
procedure `boolean` `g`(`int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.g:(I)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L334708.  v0:= 65496I;
  #L33470e.  v1:= v2 ^& v0 @kind int;
  #L334712.  if v1 == v0 then goto L33472c;
  #L334716.  v0:= 19789I;
  #L33471a.  if v2 == v0 then goto L33472c;
  #L33471e.  v0:= 18761I;
  #L334722.  if v2 != v0 then goto L334728;
  #L334726.  goto L33472c;
  #L334728.  v2:= 0I;
  #L33472a.  goto L33472e;
  #L33472c.  v2:= 1I;
  #L33472e.  return v2;
}
procedure `boolean` `h`(`com.bumptech.glide.load.resource.bitmap.n` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.h:([BI)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L334740.  v0:= 0I;
  #L334742.  if v5 == 0 then goto L334754;
  #L334746.  v1:= `@@com.bumptech.glide.load.resource.bitmap.n.a` @type ^`byte`[] @kind object;
  #L33474a.  v1:= length @variable v1;
  #L33474c.  if v6 <= v1 then goto L334754;
  #L334750.  v6:= 1I;
  #L334752.  goto L334756;
  #L334754.  v6:= 0I;
  #L334756.  if v6 == 0 then goto L33477a;
  #L33475a.  v1:= 0I;
  #L33475c.  v2:= `@@com.bumptech.glide.load.resource.bitmap.n.a` @type ^`byte`[] @kind object;
  #L334760.  v3:= length @variable v2;
  #L334762.  if v1 >= v3 then goto L33477a;
  #L334766.  v3:= v5[v1] @kind byte;
  #L33476a.  v2:= v2[v1] @kind byte;
  #L33476e.  if v3 == v2 then goto L334774;
  #L334772.  goto L33477c;
  #L334774.  v1:= v1 + 1;
  #L334778.  goto L33475c;
  #L33477a.  v0:= v6;
  #L33477c.  return v0;
}
procedure `int` `i`(`com.bumptech.glide.load.resource.bitmap.n` v10 @kind this, `com.bumptech.glide.load.resource.bitmap.l` v11 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.i:(Lcom/bumptech/glide/load/resource/bitmap/l;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L334a40.  call temp:= `c`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.c:()S` @kind interface;
  #L334a46.  v0:= temp;
  #L334a48.  v1:= 255I;
  #L334a4c.  v2:= 3I;
  #L334a4e.  v3:= "DfltImageHeaderParser" @kind object;
  #L334a52.  v4:= -1I;
  #L334a54.  if v0 == v1 then goto L334a86;
  #L334a58.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L334a5e.  v11:= temp;
  #L334a60.  if v11 == 0 then goto L334a84;
  #L334a64.  v11:= new `java.lang.StringBuilder`;
  #L334a68.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L334a6e.  v1:= "Unknown segmentId=" @kind object;
  #L334a72.  call temp:= `append`(v11, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334a78.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334a7e.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L334a84.  return v4;
  #L334a86.  call temp:= `c`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.c:()S` @kind interface;
  #L334a8c.  v0:= temp;
  #L334a8e.  v1:= 218I;
  #L334a92.  if v0 != v1 then goto L334a98;
  #L334a96.  return v4;
  #L334a98.  v1:= 217I;
  #L334a9c.  if v0 != v1 then goto L334aaa;
  #L334aa0.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L334aa6.  v11:= temp;
  #L334aa8.  return v4;
  #L334aaa.  call temp:= `a`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.a:()I` @kind interface;
  #L334ab0.  v1:= temp;
  #L334ab2.  v1:= v1 + -2;
  #L334ab6.  v5:= 225I;
  #L334aba.  if v0 == v5 then goto L334b1e;
  #L334abe.  v5:= (`long`) v1 @kind i2l;
  #L334ac0.  call temp:= `skip`(v11, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.skip:(J)J` @kind interface;
  #L334ac6.  v7:= temp @kind wide;
  #L334ac8.  v9:= lcmp(v7, v5);
  #L334acc.  if v9 == 0 then goto L334a40;
  #L334ad0.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L334ad6.  v11:= temp;
  #L334ad8.  if v11 == 0 then goto L334b1c;
  #L334adc.  v11:= new `java.lang.StringBuilder`;
  #L334ae0.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L334ae6.  v2:= "Unable to skip enough data, type: " @kind object;
  #L334aea.  call temp:= `append`(v11, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334af0.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334af6.  v0:= ", wanted to skip: " @kind object;
  #L334afa.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334b00.  call temp:= `append`(v11, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334b06.  v0:= ", but actually skipped: " @kind object;
  #L334b0a.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334b10.  call temp:= `append`(v11, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L334b16.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L334b1c.  return v4;
  #L334b1e.  return v1;
}
procedure `int` `j`(`com.bumptech.glide.load.resource.bitmap.k` v12 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.j:(Lcom/bumptech/glide/load/resource/bitmap/k;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L334b30.  v0:= 6I;
  #L334b32.  call temp:= `a`(v12, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/k;.a:(I)S` @kind virtual;
  #L334b38.  v1:= temp;
  #L334b3a.  v2:= 18761I;
  #L334b3e.  v3:= 3I;
  #L334b40.  v4:= "DfltImageHeaderParser" @kind object;
  #L334b44.  if v1 == v2 then goto L334b88;
  #L334b48.  v2:= 19789I;
  #L334b4c.  if v1 == v2 then goto L334b82;
  #L334b50.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L334b56.  v2:= temp;
  #L334b58.  if v2 == 0 then goto L334b7c;
  #L334b5c.  v2:= new `java.lang.StringBuilder`;
  #L334b60.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L334b66.  v5:= "Unknown endianness = " @kind object;
  #L334b6a.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334b70.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334b76.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L334b7c.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L334b80.  goto L334b8c;
  #L334b82.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L334b86.  goto L334b8c;
  #L334b88.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L334b8c.  call `e`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/k;.e:(Ljava/nio/ByteOrder;)V` @kind virtual;
  #L334b92.  v1:= 10I;
  #L334b96.  call temp:= `b`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/k;.b:(I)I` @kind virtual;
  #L334b9c.  v1:= temp;
  #L334b9e.  v1:= v1 + v0 @kind int;
  #L334ba0.  call temp:= `a`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/k;.a:(I)S` @kind virtual;
  #L334ba6.  v0:= temp;
  #L334ba8.  v2:= 0I;
  #L334baa.  if v2 >= v0 then goto L334d6e;
  #L334bae.  call temp:= `d`(v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.d:(II)I` @kind static;
  #L334bb4.  v5:= temp;
  #L334bb6.  call temp:= `a`(v12, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/k;.a:(I)S` @kind virtual;
  #L334bbc.  v6:= temp;
  #L334bbe.  v7:= 274I;
  #L334bc2.  if v6 == v7 then goto L334bca;
  #L334bc6.  goto L334d66;
  #L334bca.  v7:= v5 + 2;
  #L334bce.  call temp:= `a`(v12, v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/k;.a:(I)S` @kind virtual;
  #L334bd4.  v7:= temp;
  #L334bd6.  v8:= 1I;
  #L334bd8.  if v7 < v8 then goto L334d3a;
  #L334bdc.  v8:= 12I;
  #L334be0.  if v7 <= v8 then goto L334be8;
  #L334be4.  goto L334d3a;
  #L334be8.  v8:= v5 + 4;
  #L334bec.  call temp:= `b`(v12, v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/k;.b:(I)I` @kind virtual;
  #L334bf2.  v8:= temp;
  #L334bf4.  if v8 >= 0 then goto L334c04;
  #L334bf8.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L334bfe.  v5:= temp;
  #L334c00.  goto L334d66;
  #L334c04.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L334c0a.  v9:= temp;
  #L334c0c.  v10:= " tagType=" @kind object;
  #L334c10.  if v9 == 0 then goto L334c60;
  #L334c14.  v9:= new `java.lang.StringBuilder`;
  #L334c18.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L334c1e.  v11:= "Got tagIndex=" @kind object;
  #L334c22.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334c28.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334c2e.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334c34.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334c3a.  v11:= " formatCode=" @kind object;
  #L334c3e.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334c44.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334c4a.  v11:= " componentCount=" @kind object;
  #L334c4e.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334c54.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334c5a.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L334c60.  v9:= `@@com.bumptech.glide.load.resource.bitmap.n.b` @type ^`int`[] @kind object;
  #L334c64.  v9:= v9[v7];
  #L334c68.  v8:= v8 + v9 @kind int;
  #L334c6a.  v9:= 4I;
  #L334c6c.  if v8 <= v9 then goto L334c9e;
  #L334c70.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L334c76.  v5:= temp;
  #L334c78.  if v5 == 0 then goto L334d66;
  #L334c7c.  v5:= new `java.lang.StringBuilder`;
  #L334c80.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L334c86.  v6:= "Got byte count > 4, not orientation, continuing, formatCode=" @kind object;
  #L334c8a.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334c90.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334c96.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L334c9c.  goto L334d66;
  #L334c9e.  v5:= v5 + 8;
  #L334ca2.  if v5 < 0 then goto L334d00;
  #L334ca6.  call temp:= `d`(v12) @signature `Lcom/bumptech/glide/load/resource/bitmap/k;.d:()I` @kind virtual;
  #L334cac.  v7:= temp;
  #L334cae.  if v5 <= v7 then goto L334cb4;
  #L334cb2.  goto L334d00;
  #L334cb4.  if v8 < 0 then goto L334cd2;
  #L334cb8.  v8:= v8 + v5 @kind int;
  #L334cba.  call temp:= `d`(v12) @signature `Lcom/bumptech/glide/load/resource/bitmap/k;.d:()I` @kind virtual;
  #L334cc0.  v7:= temp;
  #L334cc2.  if v8 <= v7 then goto L334cc8;
  #L334cc6.  goto L334cd2;
  #L334cc8.  call temp:= `a`(v12, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/k;.a:(I)S` @kind virtual;
  #L334cce.  v12:= temp;
  #L334cd0.  return v12;
  #L334cd2.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L334cd8.  v5:= temp;
  #L334cda.  if v5 == 0 then goto L334d66;
  #L334cde.  v5:= new `java.lang.StringBuilder`;
  #L334ce2.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L334ce8.  v7:= "Illegal number of bytes for TI tag data tagType=" @kind object;
  #L334cec.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334cf2.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334cf8.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L334cfe.  goto L334d66;
  #L334d00.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L334d06.  v7:= temp;
  #L334d08.  if v7 == 0 then goto L334d66;
  #L334d0c.  v7:= new `java.lang.StringBuilder`;
  #L334d10.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L334d16.  v8:= "Illegal tagValueOffset=" @kind object;
  #L334d1a.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334d20.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334d26.  call temp:= `append`(v7, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334d2c.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334d32.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L334d38.  goto L334d66;
  #L334d3a.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L334d40.  v5:= temp;
  #L334d42.  if v5 == 0 then goto L334d66;
  #L334d46.  v5:= new `java.lang.StringBuilder`;
  #L334d4a.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L334d50.  v6:= "Got invalid format code = " @kind object;
  #L334d54.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334d5a.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334d60.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L334d66.  v2:= v2 + 1;
  #L334d6a.  goto L334baa;
  #L334d6e.  v12:= -1I;
  #L334d70.  return v12;
}
procedure `int` `k`(`com.bumptech.glide.load.resource.bitmap.n` v3 @kind this, `com.bumptech.glide.load.resource.bitmap.l` v4 @kind object, `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.k:(Lcom/bumptech/glide/load/resource/bitmap/l;[BI)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L334d84.  call temp:= `b`(v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.b:([BI)I` @kind interface;
  #L334d8a.  v4:= temp;
  #L334d8c.  v0:= -1I;
  #L334d8e.  v1:= 3I;
  #L334d90.  v2:= "DfltImageHeaderParser" @kind object;
  #L334d94.  if v4 == v6 then goto L334dd6;
  #L334d98.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L334d9e.  v5:= temp;
  #L334da0.  if v5 == 0 then goto L334dd4;
  #L334da4.  v5:= new `java.lang.StringBuilder`;
  #L334da8.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L334dae.  v1:= "Unable to read exif segment data, length: " @kind object;
  #L334db2.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334db8.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334dbe.  v6:= ", actually read: " @kind object;
  #L334dc2.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334dc8.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L334dce.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L334dd4.  return v0;
  #L334dd6.  call temp:= `h`(v3, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.h:([BI)Z` @kind direct;
  #L334ddc.  v4:= temp;
  #L334dde.  if v4 == 0 then goto L334df6;
  #L334de2.  v4:= new `com.bumptech.glide.load.resource.bitmap.k`;
  #L334de6.  call `<init>`(v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/k;.<init>:([BI)V` @kind direct;
  #L334dec.  call temp:= `j`(v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.j:(Lcom/bumptech/glide/load/resource/bitmap/k;)I` @kind static;
  #L334df2.  v4:= temp;
  #L334df4.  return v4;
  #L334df6.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L334dfc.  v4:= temp;
  #L334dfe.  return v0;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `a`(`com.bumptech.glide.load.resource.bitmap.n` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.a:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L334918.  v0:= new `com.bumptech.glide.load.resource.bitmap.j`;
  #L33491c.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L334922.  v2:= temp @kind object;
  #L334924.  v2:= (`java.nio.ByteBuffer`) v2 @kind object;
  #L334928.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/j;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L33492e.  call temp:= `f`(v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.f:(Lcom/bumptech/glide/load/resource/bitmap/l;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind direct;
  #L334934.  v2:= temp @kind object;
  #L334936.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `b`(`com.bumptech.glide.load.resource.bitmap.n` v1 @kind this, `java.io.InputStream` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.b:(Ljava/io/InputStream;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3348e8.  v0:= new `com.bumptech.glide.load.resource.bitmap.m`;
  #L3348ec.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3348f2.  v2:= temp @kind object;
  #L3348f4.  v2:= (`java.io.InputStream`) v2 @kind object;
  #L3348f8.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/m;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3348fe.  call temp:= `f`(v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.f:(Lcom/bumptech/glide/load/resource/bitmap/l;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind direct;
  #L334904.  v2:= temp @kind object;
  #L334906.  return v2 @kind object;
}
procedure `int` `c`(`com.bumptech.glide.load.resource.bitmap.n` v1 @kind this, `java.io.InputStream` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.b` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.c:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/b;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L334a04.  v0:= new `com.bumptech.glide.load.resource.bitmap.m`;
  #L334a08.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L334a0e.  v2:= temp @kind object;
  #L334a10.  v2:= (`java.io.InputStream`) v2 @kind object;
  #L334a14.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/m;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L334a1a.  call temp:= `d`(v3) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L334a20.  v2:= temp @kind object;
  #L334a22.  v2:= (`com.bumptech.glide.load.engine.bitmap_recycle.b`) v2 @kind object;
  #L334a26.  call temp:= `e`(v1, v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/n;.e:(Lcom/bumptech/glide/load/resource/bitmap/l;Lcom/bumptech/glide/load/engine/bitmap_recycle/b;)I` @kind direct;
  #L334a2c.  v2:= temp;
  #L334a2e.  return v2;
}
