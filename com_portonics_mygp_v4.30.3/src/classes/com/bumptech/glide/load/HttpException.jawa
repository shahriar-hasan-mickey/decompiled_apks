record `com.bumptech.glide.load.HttpException` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.IOException` @kind class {
  `int` `com.bumptech.glide.load.HttpException.statusCode` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.bumptech.glide.load.HttpException.UNKNOWN` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@com.bumptech.glide.load.HttpException.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.bumptech.glide.load.HttpException` v2 @kind this, `int` v3 ) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L325804.  v0:= new `java.lang.StringBuilder`;
  #L325808.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32580e.  v1:= "Http request failed with status code: " @kind object;
  #L325812.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L325818.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32581e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L325824.  v0:= temp @kind object;
  #L325826.  call `<init>`(v2, v0, v3) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L32582c.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.HttpException` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L325840.  v0:= -1I;
  #L325842.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L325848.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.HttpException` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32585c.  v0:= 0I;
  #L32585e.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;ILjava/lang/Throwable;)V` @kind direct;
  #L325864.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.HttpException` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.Throwable` v3 @kind object) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;ILjava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L325878.  call `<init>`(v0, v1, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L32587e.  v0.`com.bumptech.glide.load.HttpException.statusCode` @type ^`int` := v2;
  #L325882.  return @kind void;
}
procedure `int` `getStatusCode`(`com.bumptech.glide.load.HttpException` v1 @kind this) @signature `Lcom/bumptech/glide/load/HttpException;.getStatusCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3257ec.  v0:= v1.`com.bumptech.glide.load.HttpException.statusCode` @type ^`int`;
  #L3257f0.  return v0;
}
