record `com.bumptech.glide.load.m.a1` @kind class @AccessFlag PUBLIC {
  `java.util.List` `com.bumptech.glide.load.m.a1.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.m.z0` `com.bumptech.glide.load.m.a1.d` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.bumptech.glide.load.m.a1.e` @AccessFlag PRIVATE_FINAL;
  `androidx.core.util.e` `com.bumptech.glide.load.m.a1.f` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.m.z0` `@@com.bumptech.glide.load.m.a1.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.bumptech.glide.load.m.q0` `@@com.bumptech.glide.load.m.a1.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/m/a1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3327a8.  v0:= new `com.bumptech.glide.load.m.z0`;
  #L3327ac.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/m/z0;.<init>:()V` @kind direct;
  #L3327b2.  `@@com.bumptech.glide.load.m.a1.a` @type ^`com.bumptech.glide.load.m.z0` := v0 @kind object;
  #L3327b6.  v0:= new `com.bumptech.glide.load.m.x0`;
  #L3327ba.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/m/x0;.<init>:()V` @kind direct;
  #L3327c0.  `@@com.bumptech.glide.load.m.a1.b` @type ^`com.bumptech.glide.load.m.q0` := v0 @kind object;
  #L3327c4.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.a1` v1 @kind this, `androidx.core.util.e` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/a1;.<init>:(Landroidx/core/util/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3327d8.  v0:= `@@com.bumptech.glide.load.m.a1.a` @type ^`com.bumptech.glide.load.m.z0` @kind object;
  #L3327dc.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/m/a1;.<init>:(Landroidx/core/util/e;Lcom/bumptech/glide/load/m/z0;)V` @kind direct;
  #L3327e2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.a1` v1 @kind this, `androidx.core.util.e` v2 @kind object, `com.bumptech.glide.load.m.z0` v3 @kind object) @signature `Lcom/bumptech/glide/load/m/a1;.<init>:(Landroidx/core/util/e;Lcom/bumptech/glide/load/m/z0;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3327f4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3327fa.  v0:= new `java.util.ArrayList`;
  #L3327fe.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L332804.  v1.`com.bumptech.glide.load.m.a1.c` @type ^`java.util.List` := v0 @kind object;
  #L332808.  v0:= new `java.util.HashSet`;
  #L33280c.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L332812.  v1.`com.bumptech.glide.load.m.a1.e` @type ^`java.util.Set` := v0 @kind object;
  #L332816.  v1.`com.bumptech.glide.load.m.a1.f` @type ^`androidx.core.util.e` := v2 @kind object;
  #L33281a.  v1.`com.bumptech.glide.load.m.a1.d` @type ^`com.bumptech.glide.load.m.z0` := v3 @kind object;
  #L33281e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.m.a1` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.m.r0` v4 @kind object, `boolean` v5 ) @signature `Lcom/bumptech/glide/load/m/a1;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/m/r0;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L332830.  v0:= new `com.bumptech.glide.load.m.y0`;
  #L332834.  call `<init>`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/load/m/y0;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/m/r0;)V` @kind direct;
  #L33283a.  v2:= v1.`com.bumptech.glide.load.m.a1.c` @type ^`java.util.List` @kind object;
  #L33283e.  if v5 == 0 then goto L33284c;
  #L332842.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L332848.  v3:= temp;
  #L33284a.  goto L33284e;
  #L33284c.  v3:= 0I;
  #L33284e.  call `add`(v2, v3, v0) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L332854.  return @kind void;
}
procedure `com.bumptech.glide.load.m.q0` `c`(`com.bumptech.glide.load.m.a1` v0 @kind this, `com.bumptech.glide.load.m.y0` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/a1;.c:(Lcom/bumptech/glide/load/m/y0;)Lcom/bumptech/glide/load/m/q0;` @AccessFlag PRIVATE {
    temp;

  #L3324fc.  v1:= v1.`com.bumptech.glide.load.m.y0.c` @type ^`com.bumptech.glide.load.m.r0` @kind object;
  #L332500.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/load/m/r0;.b:(Lcom/bumptech/glide/load/m/a1;)Lcom/bumptech/glide/load/m/q0;` @kind interface;
  #L332506.  v1:= temp @kind object;
  #L332508.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33250e.  v1:= temp @kind object;
  #L332510.  v1:= (`com.bumptech.glide.load.m.q0`) v1 @kind object;
  #L332514.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.m.q0` `f`() @signature `Lcom/bumptech/glide/load/m/a1;.f:()Lcom/bumptech/glide/load/m/q0;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L332654.  v0:= `@@com.bumptech.glide.load.m.a1.b` @type ^`com.bumptech.glide.load.m.q0` @kind object;
  #L332658.  return v0 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.load.m.a1` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.m.r0` v4 @kind object) @signature `Lcom/bumptech/glide/load/m/a1;.b:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/m/r0;)V` @AccessFlag  {
    temp;
    v0;

  #L332868.  @monitorenter v1
  #L33286a.  v0:= 1I;
  #L33286c.  call `a`(v1, v2, v3, v4, v0) @signature `Lcom/bumptech/glide/load/m/a1;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/m/r0;Z)V` @kind direct;
  #L332872.  @monitorexit v1
  #L332874.  return @kind void;
  #L332876.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L332878.  @monitorexit v1
  #L33287a.  throw v2;
  catch `java.lang.Throwable` @[L33286c..L332872] goto L332876;
}
procedure `com.bumptech.glide.load.m.q0` `d`(`com.bumptech.glide.load.m.a1` v7 @kind this, `java.lang.Class` v8 @kind object, `java.lang.Class` v9 @kind object) @signature `Lcom/bumptech/glide/load/m/a1;.d:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/m/q0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L332528.  @monitorenter v7
  #L33252a.  v0:= new `java.util.ArrayList`;
  #L33252e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L332534.  v1:= v7.`com.bumptech.glide.load.m.a1.c` @type ^`java.util.List` @kind object;
  #L332538.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L33253e.  v1:= temp @kind object;
  #L332540.  v2:= 0I;
  #L332542.  v3:= 1I;
  #L332544.  v4:= 0I;
  #L332546.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L33254c.  v5:= temp;
  #L33254e.  if v5 == 0 then goto L3325a2;
  #L332552.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L332558.  v5:= temp @kind object;
  #L33255a.  v5:= (`com.bumptech.glide.load.m.y0`) v5 @kind object;
  #L33255e.  v6:= v7.`com.bumptech.glide.load.m.a1.e` @type ^`java.util.Set` @kind object;
  #L332562.  call temp:= `contains`(v6, v5) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L332568.  v6:= temp;
  #L33256a.  if v6 == 0 then goto L332572;
  #L33256e.  v4:= 1I;
  #L332570.  goto L332546;
  #L332572.  call temp:= `b`(v5, v8, v9) @signature `Lcom/bumptech/glide/load/m/y0;.b:(Ljava/lang/Class;Ljava/lang/Class;)Z` @kind virtual;
  #L332578.  v6:= temp;
  #L33257a.  if v6 == 0 then goto L332546;
  #L33257e.  v6:= v7.`com.bumptech.glide.load.m.a1.e` @type ^`java.util.Set` @kind object;
  #L332582.  call temp:= `add`(v6, v5) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L332588.  call temp:= `c`(v7, v5) @signature `Lcom/bumptech/glide/load/m/a1;.c:(Lcom/bumptech/glide/load/m/y0;)Lcom/bumptech/glide/load/m/q0;` @kind direct;
  #L33258e.  v6:= temp @kind object;
  #L332590.  call temp:= `add`(v0, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L332596.  v6:= v7.`com.bumptech.glide.load.m.a1.e` @type ^`java.util.Set` @kind object;
  #L33259a.  call temp:= `remove`(v6, v5) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3325a0.  goto L332546;
  #L3325a2.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3325a8.  v1:= temp;
  #L3325aa.  if v1 <= v3 then goto L3325c2;
  #L3325ae.  v8:= v7.`com.bumptech.glide.load.m.a1.d` @type ^`com.bumptech.glide.load.m.z0` @kind object;
  #L3325b2.  v9:= v7.`com.bumptech.glide.load.m.a1.f` @type ^`androidx.core.util.e` @kind object;
  #L3325b6.  call temp:= `a`(v8, v0, v9) @signature `Lcom/bumptech/glide/load/m/z0;.a:(Ljava/util/List;Landroidx/core/util/e;)Lcom/bumptech/glide/load/m/w0;` @kind virtual;
  #L3325bc.  v8:= temp @kind object;
  #L3325be.  @monitorexit v7
  #L3325c0.  return v8 @kind object;
  #L3325c2.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3325c8.  v1:= temp;
  #L3325ca.  if v1 != v3 then goto L3325de;
  #L3325ce.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3325d4.  v8:= temp @kind object;
  #L3325d6.  v8:= (`com.bumptech.glide.load.m.q0`) v8 @kind object;
  #L3325da.  @monitorexit v7
  #L3325dc.  return v8 @kind object;
  #L3325de.  if v4 == 0 then goto L3325ee;
  #L3325e2.  call temp:= `f`() @signature `Lcom/bumptech/glide/load/m/a1;.f:()Lcom/bumptech/glide/load/m/q0;` @kind static;
  #L3325e8.  v8:= temp @kind object;
  #L3325ea.  @monitorexit v7
  #L3325ec.  return v8 @kind object;
  #L3325ee.  v0:= new `com.bumptech.glide.Registry$NoModelLoaderAvailableException`;
  #L3325f2.  call `<init>`(v0, v8, v9) @signature `Lcom/bumptech/glide/Registry$NoModelLoaderAvailableException;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L3325f8.  throw v0;
  #L3325fa.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3325fc.  v9:= v7.`com.bumptech.glide.load.m.a1.e` @type ^`java.util.Set` @kind object;
  #L332600.  call `clear`(v9) @signature `Ljava/util/Set;.clear:()V` @kind interface;
  #L332606.  throw v8;
  #L332608.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33260a.  @monitorexit v7
  #L33260c.  goto L332610;
  #L33260e.  throw v8;
  #L332610.  goto L33260e;
  catch `java.lang.Throwable` @[L33252a..L3325be] goto L3325fa;
  catch `java.lang.Throwable` @[L3325c2..L3325da] goto L3325fa;
  catch `java.lang.Throwable` @[L3325e2..L3325ea] goto L3325fa;
  catch `java.lang.Throwable` @[L3325ee..L3325fa] goto L3325fa;
  catch `java.lang.Throwable` @[L3325fc..L332608] goto L332608;
}
procedure `java.util.List` `e`(`com.bumptech.glide.load.m.a1` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/load/m/a1;.e:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33266c.  @monitorenter v4
  #L33266e.  v0:= new `java.util.ArrayList`;
  #L332672.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L332678.  v1:= v4.`com.bumptech.glide.load.m.a1.c` @type ^`java.util.List` @kind object;
  #L33267c.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L332682.  v1:= temp @kind object;
  #L332684.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L33268a.  v2:= temp;
  #L33268c.  if v2 == 0 then goto L3326de;
  #L332690.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L332696.  v2:= temp @kind object;
  #L332698.  v2:= (`com.bumptech.glide.load.m.y0`) v2 @kind object;
  #L33269c.  v3:= v4.`com.bumptech.glide.load.m.a1.e` @type ^`java.util.Set` @kind object;
  #L3326a0.  call temp:= `contains`(v3, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3326a6.  v3:= temp;
  #L3326a8.  if v3 == 0 then goto L3326ae;
  #L3326ac.  goto L332684;
  #L3326ae.  call temp:= `a`(v2, v5) @signature `Lcom/bumptech/glide/load/m/y0;.a:(Ljava/lang/Class;)Z` @kind virtual;
  #L3326b4.  v3:= temp;
  #L3326b6.  if v3 == 0 then goto L332684;
  #L3326ba.  v3:= v4.`com.bumptech.glide.load.m.a1.e` @type ^`java.util.Set` @kind object;
  #L3326be.  call temp:= `add`(v3, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3326c4.  call temp:= `c`(v4, v2) @signature `Lcom/bumptech/glide/load/m/a1;.c:(Lcom/bumptech/glide/load/m/y0;)Lcom/bumptech/glide/load/m/q0;` @kind direct;
  #L3326ca.  v3:= temp @kind object;
  #L3326cc.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3326d2.  v3:= v4.`com.bumptech.glide.load.m.a1.e` @type ^`java.util.Set` @kind object;
  #L3326d6.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3326dc.  goto L332684;
  #L3326de.  @monitorexit v4
  #L3326e0.  return v0 @kind object;
  #L3326e2.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3326e4.  v0:= v4.`com.bumptech.glide.load.m.a1.e` @type ^`java.util.Set` @kind object;
  #L3326e8.  call `clear`(v0) @signature `Ljava/util/Set;.clear:()V` @kind interface;
  #L3326ee.  throw v5;
  #L3326f0.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3326f2.  @monitorexit v4
  #L3326f4.  goto L3326f8;
  #L3326f6.  throw v5;
  #L3326f8.  goto L3326f6;
  catch `java.lang.Throwable` @[L33266e..L3326dc] goto L3326e2;
  catch `java.lang.Throwable` @[L3326e4..L3326f0] goto L3326f0;
}
procedure `java.util.List` `g`(`com.bumptech.glide.load.m.a1` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/load/m/a1;.g:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L332724.  @monitorenter v4
  #L332726.  v0:= new `java.util.ArrayList`;
  #L33272a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L332730.  v1:= v4.`com.bumptech.glide.load.m.a1.c` @type ^`java.util.List` @kind object;
  #L332734.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L33273a.  v1:= temp @kind object;
  #L33273c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L332742.  v2:= temp;
  #L332744.  if v2 == 0 then goto L33277c;
  #L332748.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L33274e.  v2:= temp @kind object;
  #L332750.  v2:= (`com.bumptech.glide.load.m.y0`) v2 @kind object;
  #L332754.  v3:= v2.`com.bumptech.glide.load.m.y0.b` @type ^`java.lang.Class` @kind object;
  #L332758.  call temp:= `contains`(v0, v3) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L33275e.  v3:= temp;
  #L332760.  if v3 != 0 then goto L33273c;
  #L332764.  call temp:= `a`(v2, v5) @signature `Lcom/bumptech/glide/load/m/y0;.a:(Ljava/lang/Class;)Z` @kind virtual;
  #L33276a.  v3:= temp;
  #L33276c.  if v3 == 0 then goto L33273c;
  #L332770.  v2:= v2.`com.bumptech.glide.load.m.y0.b` @type ^`java.lang.Class` @kind object;
  #L332774.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L33277a.  goto L33273c;
  #L33277c.  @monitorexit v4
  #L33277e.  return v0 @kind object;
  #L332780.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L332782.  @monitorexit v4
  #L332784.  goto L332788;
  #L332786.  throw v5;
  #L332788.  goto L332786;
  catch `java.lang.Throwable` @[L332726..L33277a] goto L332780;
}
