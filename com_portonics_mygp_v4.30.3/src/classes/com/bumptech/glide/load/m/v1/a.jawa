record `com.bumptech.glide.load.m.v1.a` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.m.r0` @kind interface {
  `com.bumptech.glide.load.m.o0` `com.bumptech.glide.load.m.v1.a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.v1.a` v3 @kind this) @signature `Lcom/bumptech/glide/load/m/v1/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3334b4.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3334ba.  v0:= new `com.bumptech.glide.load.m.o0`;
  #L3334be.  v1:= 500L;
  #L3334c2.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/m/o0;.<init>:(J)V` @kind direct;
  #L3334c8.  v3.`com.bumptech.glide.load.m.v1.a.a` @type ^`com.bumptech.glide.load.m.o0` := v0 @kind object;
  #L3334cc.  return @kind void;
}
procedure `com.bumptech.glide.load.m.q0` `b`(`com.bumptech.glide.load.m.v1.a` v1 @kind this, `com.bumptech.glide.load.m.a1` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/a;.b:(Lcom/bumptech/glide/load/m/a1;)Lcom/bumptech/glide/load/m/q0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L333494.  v2:= new `com.bumptech.glide.load.m.v1.b`;
  #L333498.  v0:= v1.`com.bumptech.glide.load.m.v1.a.a` @type ^`com.bumptech.glide.load.m.o0` @kind object;
  #L33349c.  call `<init>`(v2, v0) @signature `Lcom/bumptech/glide/load/m/v1/b;.<init>:(Lcom/bumptech/glide/load/m/o0;)V` @kind direct;
  #L3334a2.  return v2 @kind object;
}
