record `com.bumptech.glide.load.m.u0` @kind class @AccessFlag PUBLIC {
  `com.bumptech.glide.load.m.a1` `com.bumptech.glide.load.m.u0.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.m.t0` `com.bumptech.glide.load.m.u0.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.u0` v1 @kind this, `androidx.core.util.e` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/u0;.<init>:(Landroidx/core/util/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L332134.  v0:= new `com.bumptech.glide.load.m.a1`;
  #L332138.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/m/a1;.<init>:(Landroidx/core/util/e;)V` @kind direct;
  #L33213e.  call `<init>`(v1, v0) @signature `Lcom/bumptech/glide/load/m/u0;.<init>:(Lcom/bumptech/glide/load/m/a1;)V` @kind direct;
  #L332144.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.u0` v1 @kind this, `com.bumptech.glide.load.m.a1` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/u0;.<init>:(Lcom/bumptech/glide/load/m/a1;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L332158.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33215e.  v0:= new `com.bumptech.glide.load.m.t0`;
  #L332162.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/m/t0;.<init>:()V` @kind direct;
  #L332168.  v1.`com.bumptech.glide.load.m.u0.b` @type ^`com.bumptech.glide.load.m.t0` := v0 @kind object;
  #L33216c.  v1.`com.bumptech.glide.load.m.u0.a` @type ^`com.bumptech.glide.load.m.a1` := v2 @kind object;
  #L332170.  return @kind void;
}
procedure `java.lang.Class` `b`(`java.lang.Object` v0 @kind object) @signature `Lcom/bumptech/glide/load/m/u0;.b:(Ljava/lang/Object;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L332018.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L33201e.  v0:= temp @kind object;
  #L332020.  return v0 @kind object;
}
procedure `java.util.List` `e`(`com.bumptech.glide.load.m.u0` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/m/u0;.e:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3320dc.  @monitorenter v2
  #L3320de.  v0:= v2.`com.bumptech.glide.load.m.u0.b` @type ^`com.bumptech.glide.load.m.t0` @kind object;
  #L3320e2.  call temp:= `b`(v0, v3) @signature `Lcom/bumptech/glide/load/m/t0;.b:(Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L3320e8.  v0:= temp @kind object;
  #L3320ea.  if v0 != 0 then goto L33210c;
  #L3320ee.  v0:= v2.`com.bumptech.glide.load.m.u0.a` @type ^`com.bumptech.glide.load.m.a1` @kind object;
  #L3320f2.  call temp:= `e`(v0, v3) @signature `Lcom/bumptech/glide/load/m/a1;.e:(Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L3320f8.  v0:= temp @kind object;
  #L3320fa.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L332100.  v0:= temp @kind object;
  #L332102.  v1:= v2.`com.bumptech.glide.load.m.u0.b` @type ^`com.bumptech.glide.load.m.t0` @kind object;
  #L332106.  call `c`(v1, v3, v0) @signature `Lcom/bumptech/glide/load/m/t0;.c:(Ljava/lang/Class;Ljava/util/List;)V` @kind virtual;
  #L33210c.  @monitorexit v2
  #L33210e.  return v0 @kind object;
  #L332110.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L332112.  @monitorexit v2
  #L332114.  throw v3;
  catch `java.lang.Throwable` @[L3320de..L33210c] goto L332110;
}
procedure `void` `a`(`com.bumptech.glide.load.m.u0` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.m.r0` v4 @kind object) @signature `Lcom/bumptech/glide/load/m/u0;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/m/r0;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L332184.  @monitorenter v1
  #L332186.  v0:= v1.`com.bumptech.glide.load.m.u0.a` @type ^`com.bumptech.glide.load.m.a1` @kind object;
  #L33218a.  call `b`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/load/m/a1;.b:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/m/r0;)V` @kind virtual;
  #L332190.  v2:= v1.`com.bumptech.glide.load.m.u0.b` @type ^`com.bumptech.glide.load.m.t0` @kind object;
  #L332194.  call `a`(v2) @signature `Lcom/bumptech/glide/load/m/t0;.a:()V` @kind virtual;
  #L33219a.  @monitorexit v1
  #L33219c.  return @kind void;
  #L33219e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3321a0.  @monitorexit v1
  #L3321a2.  throw v2;
  catch `java.lang.Throwable` @[L332186..L33219a] goto L33219e;
}
procedure `java.util.List` `c`(`com.bumptech.glide.load.m.u0` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/u0;.c:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L332034.  @monitorenter v1
  #L332036.  v0:= v1.`com.bumptech.glide.load.m.u0.a` @type ^`com.bumptech.glide.load.m.a1` @kind object;
  #L33203a.  call temp:= `g`(v0, v2) @signature `Lcom/bumptech/glide/load/m/a1;.g:(Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L332040.  v2:= temp @kind object;
  #L332042.  @monitorexit v1
  #L332044.  return v2 @kind object;
  #L332046.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L332048.  @monitorexit v1
  #L33204a.  throw v2;
  catch `java.lang.Throwable` @[L332036..L332042] goto L332046;
}
procedure `java.util.List` `d`(`com.bumptech.glide.load.m.u0` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lcom/bumptech/glide/load/m/u0;.d:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L332068.  call temp:= `b`(v9) @signature `Lcom/bumptech/glide/load/m/u0;.b:(Ljava/lang/Object;)Ljava/lang/Class;` @kind static;
  #L33206e.  v0:= temp @kind object;
  #L332070.  call temp:= `e`(v8, v0) @signature `Lcom/bumptech/glide/load/m/u0;.e:(Ljava/lang/Class;)Ljava/util/List;` @kind direct;
  #L332076.  v0:= temp @kind object;
  #L332078.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L33207e.  v1:= temp;
  #L332080.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L332086.  v2:= temp @kind object;
  #L332088.  v3:= 0I;
  #L33208a.  v4:= 1I;
  #L33208c.  v5:= 0I;
  #L33208e.  if v5 >= v1 then goto L3320ca;
  #L332092.  call temp:= `get`(v0, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L332098.  v6:= temp @kind object;
  #L33209a.  v6:= (`com.bumptech.glide.load.m.q0`) v6 @kind object;
  #L33209e.  call temp:= `a`(v6, v9) @signature `Lcom/bumptech/glide/load/m/q0;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L3320a4.  v7:= temp;
  #L3320a6.  if v7 == 0 then goto L3320c4;
  #L3320aa.  if v4 == 0 then goto L3320be;
  #L3320ae.  v2:= new `java.util.ArrayList`;
  #L3320b2.  v4:= v1 - v5 @kind int;
  #L3320b6.  call `<init>`(v2, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3320bc.  v4:= 0I;
  #L3320be.  call temp:= `add`(v2, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3320c4.  v5:= v5 + 1;
  #L3320c8.  goto L33208e;
  #L3320ca.  return v2 @kind object;
}
