record `com.bumptech.glide.load.m.t` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.m.q0` @kind interface {
  `com.bumptech.glide.load.m.p` `com.bumptech.glide.load.m.t.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.t` v0 @kind this, `com.bumptech.glide.load.m.p` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/t;.<init>:(Lcom/bumptech/glide/load/m/p;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L330f88.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L330f8e.  v0.`com.bumptech.glide.load.m.t.a` @type ^`com.bumptech.glide.load.m.p` := v1 @kind object;
  #L330f92.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.m.t` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/t;.a:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L330f24.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L330f2a.  v2:= temp @kind object;
  #L330f2c.  v0:= "data:image" @kind object;
  #L330f30.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L330f36.  v2:= temp;
  #L330f38.  return v2;
}
procedure `com.bumptech.glide.load.m.p0` `b`(`com.bumptech.glide.load.m.t` v1 @kind this, `java.lang.Object` v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.h` v5 @kind object) @signature `Lcom/bumptech/glide/load/m/t;.b:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L330f4c.  v3:= new `com.bumptech.glide.load.m.p0`;
  #L330f50.  v4:= new `com.bumptech.glide.r.c`;
  #L330f54.  call `<init>`(v4, v2) @signature `Lcom/bumptech/glide/r/c;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L330f5a.  v5:= new `com.bumptech.glide.load.m.q`;
  #L330f5e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L330f64.  v2:= temp @kind object;
  #L330f66.  v0:= v1.`com.bumptech.glide.load.m.t.a` @type ^`com.bumptech.glide.load.m.p` @kind object;
  #L330f6a.  call `<init>`(v5, v2, v0) @signature `Lcom/bumptech/glide/load/m/q;.<init>:(Ljava/lang/String;Lcom/bumptech/glide/load/m/p;)V` @kind direct;
  #L330f70.  call `<init>`(v3, v4, v5) @signature `Lcom/bumptech/glide/load/m/p0;.<init>:(Lcom/bumptech/glide/load/c;Lcom/bumptech/glide/load/l/e;)V` @kind direct;
  #L330f76.  return v3 @kind object;
}
