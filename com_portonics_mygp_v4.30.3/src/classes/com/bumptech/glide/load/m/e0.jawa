record `com.bumptech.glide.load.m.e0` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `com.bumptech.glide.load.m.e0` `@@com.bumptech.glide.load.m.e0.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.m.e0` `@@com.bumptech.glide.load.m.e0.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/m/e0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3315f8.  v0:= new `com.bumptech.glide.load.m.d0`;
  #L3315fc.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/m/d0;.<init>:()V` @kind direct;
  #L331602.  `@@com.bumptech.glide.load.m.e0.a` @type ^`com.bumptech.glide.load.m.e0` := v0 @kind object;
  #L331606.  v0:= new `com.bumptech.glide.load.m.g0`;
  #L33160a.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/m/g0;.<init>:()V` @kind direct;
  #L331610.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/m/g0;.a:()Lcom/bumptech/glide/load/m/i0;` @kind virtual;
  #L331616.  v0:= temp @kind object;
  #L331618.  `@@com.bumptech.glide.load.m.e0.b` @type ^`com.bumptech.glide.load.m.e0` := v0 @kind object;
  #L33161c.  return @kind void;
}
procedure `java.util.Map` `a`() @signature `Lcom/bumptech/glide/load/m/e0;.a:()Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
