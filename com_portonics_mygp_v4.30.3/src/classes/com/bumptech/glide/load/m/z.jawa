record `com.bumptech.glide.load.m.z` @kind class @AccessFlag  extends `com.bumptech.glide.load.m.y` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.z` v0 @kind this) @signature `Lcom/bumptech/glide/load/m/z;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3311e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3311ee.  return @kind void;
}
procedure `java.lang.Class` `a`(`com.bumptech.glide.load.m.z` v1 @kind this) @signature `Lcom/bumptech/glide/load/m/z;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3311b4.  v0:= constclass @type ^`java.io.InputStream` @kind object;
  #L3311b8.  return v0 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.load.m.z` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/z;.b:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L331218.  v1:= (`java.io.InputStream`) v1 @kind object;
  #L33121c.  call `d`(v0, v1) @signature `Lcom/bumptech/glide/load/m/z;.d:(Ljava/io/InputStream;)V` @kind virtual;
  #L331222.  return @kind void;
}
procedure `java.lang.Object` `c`(`com.bumptech.glide.load.m.z` v0 @kind this, `java.io.File` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/z;.c:(Ljava/io/File;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3311cc.  call temp:= `e`(v0, v1) @signature `Lcom/bumptech/glide/load/m/z;.e:(Ljava/io/File;)Ljava/io/InputStream;` @kind virtual;
  #L3311d2.  v1:= temp @kind object;
  #L3311d4.  return v1 @kind object;
}
procedure `void` `d`(`com.bumptech.glide.load.m.z` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/z;.d:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC {
    temp;

  #L331200.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L331206.  return @kind void;
}
procedure `java.io.InputStream` `e`(`com.bumptech.glide.load.m.z` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/z;.e:(Ljava/io/File;)Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L331198.  v0:= new `java.io.FileInputStream`;
  #L33119c.  call `<init>`(v0, v2) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3311a2.  return v0 @kind object;
}
