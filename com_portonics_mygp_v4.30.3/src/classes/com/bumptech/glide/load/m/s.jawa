record `com.bumptech.glide.load.m.s` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.m.r0` @kind interface {
  `com.bumptech.glide.load.m.p` `com.bumptech.glide.load.m.s.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.s` v1 @kind this) @signature `Lcom/bumptech/glide/load/m/s;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L330efc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L330f02.  v0:= new `com.bumptech.glide.load.m.r`;
  #L330f06.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/m/r;.<init>:(Lcom/bumptech/glide/load/m/s;)V` @kind direct;
  #L330f0c.  v1.`com.bumptech.glide.load.m.s.a` @type ^`com.bumptech.glide.load.m.p` := v0 @kind object;
  #L330f10.  return @kind void;
}
procedure `com.bumptech.glide.load.m.q0` `b`(`com.bumptech.glide.load.m.s` v1 @kind this, `com.bumptech.glide.load.m.a1` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/s;.b:(Lcom/bumptech/glide/load/m/a1;)Lcom/bumptech/glide/load/m/q0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L330edc.  v2:= new `com.bumptech.glide.load.m.t`;
  #L330ee0.  v0:= v1.`com.bumptech.glide.load.m.s.a` @type ^`com.bumptech.glide.load.m.p` @kind object;
  #L330ee4.  call `<init>`(v2, v0) @signature `Lcom/bumptech/glide/load/m/t;.<init>:(Lcom/bumptech/glide/load/m/p;)V` @kind direct;
  #L330eea.  return v2 @kind object;
}
