record `com.bumptech.glide.load.m.v1.d` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.m.q0` @kind interface {
  `com.bumptech.glide.load.m.q0` `com.bumptech.glide.load.m.v1.d.b` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Set` `@@com.bumptech.glide.load.m.v1.d.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/m/v1/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3336c4.  v0:= new `java.util.HashSet`;
  #L3336c8.  v1:= "http" @kind object;
  #L3336cc.  v2:= "https" @kind object;
  #L3336d0.  temp:= new `java.lang.String`[v1, v2];
  #L3336d6.  v1:= temp @kind object;
  #L3336d8.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3336de.  v1:= temp @kind object;
  #L3336e0.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3336e6.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L3336ec.  v0:= temp @kind object;
  #L3336ee.  `@@com.bumptech.glide.load.m.v1.d.a` @type ^`java.util.Set` := v0 @kind object;
  #L3336f2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.v1.d` v0 @kind this, `com.bumptech.glide.load.m.q0` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/d;.<init>:(Lcom/bumptech/glide/load/m/q0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L333704.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33370a.  v0.`com.bumptech.glide.load.m.v1.d.b` @type ^`com.bumptech.glide.load.m.q0` := v1 @kind object;
  #L33370e.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.m.v1.d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/d;.a:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L333654.  v1:= (`android.net.Uri`) v1 @kind object;
  #L333658.  call temp:= `d`(v0, v1) @signature `Lcom/bumptech/glide/load/m/v1/d;.d:(Landroid/net/Uri;)Z` @kind virtual;
  #L33365e.  v1:= temp;
  #L333660.  return v1;
}
procedure `com.bumptech.glide.load.m.p0` `b`(`com.bumptech.glide.load.m.v1.d` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/d;.b:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3336a4.  v1:= (`android.net.Uri`) v1 @kind object;
  #L3336a8.  call temp:= `c`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/m/v1/d;.c:(Landroid/net/Uri;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @kind virtual;
  #L3336ae.  v1:= temp @kind object;
  #L3336b0.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.m.p0` `c`(`com.bumptech.glide.load.m.v1.d` v2 @kind this, `android.net.Uri` v3 @kind object, `int` v4 , `int` v5 , `com.bumptech.glide.load.h` v6 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/d;.c:(Landroid/net/Uri;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L333674.  v0:= v2.`com.bumptech.glide.load.m.v1.d.b` @type ^`com.bumptech.glide.load.m.q0` @kind object;
  #L333678.  v1:= new `com.bumptech.glide.load.m.c0`;
  #L33367c.  call temp:= `toString`(v3) @signature `Landroid/net/Uri;.toString:()Ljava/lang/String;` @kind virtual;
  #L333682.  v3:= temp @kind object;
  #L333684.  call `<init>`(v1, v3) @signature `Lcom/bumptech/glide/load/m/c0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33368a.  call temp:= `b`(v0, v1, v4, v5, v6) @signature `Lcom/bumptech/glide/load/m/q0;.b:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @kind interface;
  #L333690.  v3:= temp @kind object;
  #L333692.  return v3 @kind object;
}
procedure `boolean` `d`(`com.bumptech.glide.load.m.v1.d` v1 @kind this, `android.net.Uri` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/d;.d:(Landroid/net/Uri;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33362c.  v0:= `@@com.bumptech.glide.load.m.v1.d.a` @type ^`java.util.Set` @kind object;
  #L333630.  call temp:= `getScheme`(v2) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L333636.  v2:= temp @kind object;
  #L333638.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L33363e.  v2:= temp;
  #L333640.  return v2;
}
