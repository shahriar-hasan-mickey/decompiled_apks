record `com.bumptech.glide.load.m.g0` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `com.bumptech.glide.load.m.g0.c` @AccessFlag PRIVATE;
  `java.util.Map` `com.bumptech.glide.load.m.g0.d` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.m.g0.e` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.bumptech.glide.load.m.g0.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@com.bumptech.glide.load.m.g0.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/m/g0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3316e4.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/m/g0;.b:()Ljava/lang/String;` @kind static;
  #L3316ea.  v0:= temp @kind object;
  #L3316ec.  `@@com.bumptech.glide.load.m.g0.a` @type ^`java.lang.String` := v0 @kind object;
  #L3316f0.  v1:= new `java.util.HashMap`;
  #L3316f4.  v2:= 2I;
  #L3316f6.  call `<init>`(v1, v2) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L3316fc.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L331702.  v2:= temp;
  #L331704.  if v2 != 0 then goto L331724;
  #L331708.  v2:= new `com.bumptech.glide.load.m.h0`;
  #L33170c.  call `<init>`(v2, v0) @signature `Lcom/bumptech/glide/load/m/h0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L331712.  call temp:= `singletonList`(v2) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L331718.  v0:= temp @kind object;
  #L33171a.  v2:= "User-Agent" @kind object;
  #L33171e.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L331724.  call temp:= `unmodifiableMap`(v1) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L33172a.  v0:= temp @kind object;
  #L33172c.  `@@com.bumptech.glide.load.m.g0.b` @type ^`java.util.Map` := v0 @kind object;
  #L331730.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.g0` v2 @kind this) @signature `Lcom/bumptech/glide/load/m/g0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L331744.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33174a.  v0:= 1I;
  #L33174c.  v2.`com.bumptech.glide.load.m.g0.c` @type ^`boolean` := v0 @kind boolean;
  #L331750.  v1:= `@@com.bumptech.glide.load.m.g0.b` @type ^`java.util.Map` @kind object;
  #L331754.  v2.`com.bumptech.glide.load.m.g0.d` @type ^`java.util.Map` := v1 @kind object;
  #L331758.  v2.`com.bumptech.glide.load.m.g0.e` @type ^`boolean` := v0 @kind boolean;
  #L33175c.  return @kind void;
}
procedure `java.lang.String` `b`() @signature `Lcom/bumptech/glide/load/m/g0;.b:()Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L331658.  v0:= "http.agent" @kind object;
  #L33165c.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L331662.  v0:= temp @kind object;
  #L331664.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L33166a.  v1:= temp;
  #L33166c.  if v1 == 0 then goto L331672;
  #L331670.  return v0 @kind object;
  #L331672.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L331678.  v1:= temp;
  #L33167a.  v2:= new `java.lang.StringBuilder`;
  #L33167e.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L331684.  v3:= temp;
  #L331686.  call `<init>`(v2, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L33168c.  v3:= 0I;
  #L33168e.  if v3 >= v1 then goto L3316ca;
  #L331692.  call temp:= `charAt`(v0, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L331698.  v4:= temp;
  #L33169a.  v5:= 31I;
  #L33169e.  if v4 > v5 then goto L3316aa;
  #L3316a2.  v5:= 9I;
  #L3316a6.  if v4 != v5 then goto L3316ba;
  #L3316aa.  v5:= 127I;
  #L3316ae.  if v4 >= v5 then goto L3316ba;
  #L3316b2.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3316b8.  goto L3316c4;
  #L3316ba.  v4:= 63I;
  #L3316be.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3316c4.  v3:= v3 + 1;
  #L3316c8.  goto L33168e;
  #L3316ca.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3316d0.  v0:= temp @kind object;
  #L3316d2.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.m.i0` `a`(`com.bumptech.glide.load.m.g0` v2 @kind this) @signature `Lcom/bumptech/glide/load/m/g0;.a:()Lcom/bumptech/glide/load/m/i0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L331630.  v0:= 1I;
  #L331632.  v2.`com.bumptech.glide.load.m.g0.c` @type ^`boolean` := v0 @kind boolean;
  #L331636.  v0:= new `com.bumptech.glide.load.m.i0`;
  #L33163a.  v1:= v2.`com.bumptech.glide.load.m.g0.d` @type ^`java.util.Map` @kind object;
  #L33163e.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/m/i0;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L331644.  return v0 @kind object;
}
