record `com.bumptech.glide.load.m.l` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.a` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.l` v0 @kind this) @signature `Lcom/bumptech/glide/load/m/l;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L330b30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L330b36.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.m.l` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.File` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/m/l;.a:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L330ad4.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L330ad8.  call temp:= `c`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/m/l;.c:(Ljava/nio/ByteBuffer;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L330ade.  v1:= temp;
  #L330ae0.  return v1;
}
procedure `boolean` `c`(`com.bumptech.glide.load.m.l` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object, `java.io.File` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/m/l;.c:(Ljava/nio/ByteBuffer;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;

  #L330af4.  call `d`(v1, v2) @signature `Lcom/bumptech/glide/s/c;.d:(Ljava/nio/ByteBuffer;Ljava/io/File;)V` @kind static;
  #L330afa.  v1:= 1I;
  #L330afc.  goto L330b0e;
  #L330afe.  v1:= 3I;
  #L330b00.  v2:= "ByteBufferEncoder" @kind object;
  #L330b04.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L330b0a.  v1:= temp;
  #L330b0c.  v1:= 0I;
  #L330b0e.  return v1;
  catch `java.io.IOException` @[L330af4..L330afa] goto L330afe;
}
