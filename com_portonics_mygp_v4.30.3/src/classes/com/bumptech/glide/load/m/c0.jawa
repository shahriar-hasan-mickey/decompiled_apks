record `com.bumptech.glide.load.m.c0` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.c` @kind interface {
  `com.bumptech.glide.load.m.e0` `com.bumptech.glide.load.m.c0.b` @AccessFlag PRIVATE_FINAL;
  `java.net.URL` `com.bumptech.glide.load.m.c0.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.m.c0.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.m.c0.e` @AccessFlag PRIVATE;
  `java.net.URL` `com.bumptech.glide.load.m.c0.f` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.load.m.c0.g` @AccessFlag PRIVATE_VOLATILE;
  `int` `com.bumptech.glide.load.m.c0.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.c0` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/c0;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3314f0.  v0:= `@@com.bumptech.glide.load.m.e0.b` @type ^`com.bumptech.glide.load.m.e0` @kind object;
  #L3314f4.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/m/c0;.<init>:(Ljava/lang/String;Lcom/bumptech/glide/load/m/e0;)V` @kind direct;
  #L3314fa.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.c0` v1 @kind this, `java.lang.String` v2 @kind object, `com.bumptech.glide.load.m.e0` v3 @kind object) @signature `Lcom/bumptech/glide/load/m/c0;.<init>:(Ljava/lang/String;Lcom/bumptech/glide/load/m/e0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L33150c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L331512.  v0:= 0I;
  #L331514.  v1.`com.bumptech.glide.load.m.c0.c` @type ^`java.net.URL` := v0 @kind object;
  #L331518.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/s/n;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L33151e.  v2:= temp @kind object;
  #L331520.  v1.`com.bumptech.glide.load.m.c0.d` @type ^`java.lang.String` := v2 @kind object;
  #L331524.  call temp:= `d`(v3) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33152a.  v2:= temp @kind object;
  #L33152c.  v2:= (`com.bumptech.glide.load.m.e0`) v2 @kind object;
  #L331530.  v1.`com.bumptech.glide.load.m.c0.b` @type ^`com.bumptech.glide.load.m.e0` := v2 @kind object;
  #L331534.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.c0` v1 @kind this, `java.net.URL` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/c0;.<init>:(Ljava/net/URL;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L331548.  v0:= `@@com.bumptech.glide.load.m.e0.b` @type ^`com.bumptech.glide.load.m.e0` @kind object;
  #L33154c.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/m/c0;.<init>:(Ljava/net/URL;Lcom/bumptech/glide/load/m/e0;)V` @kind direct;
  #L331552.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.c0` v0 @kind this, `java.net.URL` v1 @kind object, `com.bumptech.glide.load.m.e0` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/c0;.<init>:(Ljava/net/URL;Lcom/bumptech/glide/load/m/e0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L331564.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33156a.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L331570.  v1:= temp @kind object;
  #L331572.  v1:= (`java.net.URL`) v1 @kind object;
  #L331576.  v0.`com.bumptech.glide.load.m.c0.c` @type ^`java.net.URL` := v1 @kind object;
  #L33157a.  v1:= 0I;
  #L33157c.  v0.`com.bumptech.glide.load.m.c0.d` @type ^`java.lang.String` := v1 @kind object;
  #L331580.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L331586.  v1:= temp @kind object;
  #L331588.  v1:= (`com.bumptech.glide.load.m.e0`) v1 @kind object;
  #L33158c.  v0.`com.bumptech.glide.load.m.c0.b` @type ^`com.bumptech.glide.load.m.e0` := v1 @kind object;
  #L331590.  return @kind void;
}
procedure `byte`[] `d`(`com.bumptech.glide.load.m.c0` v2 @kind this) @signature `Lcom/bumptech/glide/load/m/c0;.d:()[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L331350.  v0:= v2.`com.bumptech.glide.load.m.c0.g` @type ^`byte`[] @kind object;
  #L331354.  if v0 != 0 then goto L331370;
  #L331358.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/load/m/c0;.c:()Ljava/lang/String;` @kind virtual;
  #L33135e.  v0:= temp @kind object;
  #L331360.  v1:= `@@com.bumptech.glide.load.c.a` @type ^`java.nio.charset.Charset` @kind object;
  #L331364.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L33136a.  v0:= temp @kind object;
  #L33136c.  v2.`com.bumptech.glide.load.m.c0.g` @type ^`byte`[] := v0 @kind object;
  #L331370.  v0:= v2.`com.bumptech.glide.load.m.c0.g` @type ^`byte`[] @kind object;
  #L331374.  return v0 @kind object;
}
procedure `java.lang.String` `f`(`com.bumptech.glide.load.m.c0` v2 @kind this) @signature `Lcom/bumptech/glide/load/m/c0;.f:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L331404.  v0:= v2.`com.bumptech.glide.load.m.c0.e` @type ^`java.lang.String` @kind object;
  #L331408.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L33140e.  v0:= temp;
  #L331410.  if v0 == 0 then goto L33144c;
  #L331414.  v0:= v2.`com.bumptech.glide.load.m.c0.d` @type ^`java.lang.String` @kind object;
  #L331418.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L33141e.  v1:= temp;
  #L331420.  if v1 == 0 then goto L33143c;
  #L331424.  v0:= v2.`com.bumptech.glide.load.m.c0.c` @type ^`java.net.URL` @kind object;
  #L331428.  call temp:= `d`(v0) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33142e.  v0:= temp @kind object;
  #L331430.  v0:= (`java.net.URL`) v0 @kind object;
  #L331434.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L33143a.  v0:= temp @kind object;
  #L33143c.  v1:= "@#&=*+-_.,:!?()/~'%;$" @kind object;
  #L331440.  call temp:= `encode`(v0, v1) @signature `Landroid/net/Uri;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L331446.  v0:= temp @kind object;
  #L331448.  v2.`com.bumptech.glide.load.m.c0.e` @type ^`java.lang.String` := v0 @kind object;
  #L33144c.  v0:= v2.`com.bumptech.glide.load.m.c0.e` @type ^`java.lang.String` @kind object;
  #L331450.  return v0 @kind object;
}
procedure `java.net.URL` `g`(`com.bumptech.glide.load.m.c0` v2 @kind this) @signature `Lcom/bumptech/glide/load/m/c0;.g:()Ljava/net/URL;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L331480.  v0:= v2.`com.bumptech.glide.load.m.c0.f` @type ^`java.net.URL` @kind object;
  #L331484.  if v0 != 0 then goto L33149e;
  #L331488.  v0:= new `java.net.URL`;
  #L33148c.  call temp:= `f`(v2) @signature `Lcom/bumptech/glide/load/m/c0;.f:()Ljava/lang/String;` @kind direct;
  #L331492.  v1:= temp @kind object;
  #L331494.  call `<init>`(v0, v1) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33149a.  v2.`com.bumptech.glide.load.m.c0.f` @type ^`java.net.URL` := v0 @kind object;
  #L33149e.  v0:= v2.`com.bumptech.glide.load.m.c0.f` @type ^`java.net.URL` @kind object;
  #L3314a2.  return v0 @kind object;
}
procedure `void` `a`(`com.bumptech.glide.load.m.c0` v1 @kind this, `java.security.MessageDigest` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/c0;.a:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3315a4.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/load/m/c0;.d:()[B` @kind direct;
  #L3315aa.  v0:= temp @kind object;
  #L3315ac.  call `update`(v2, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L3315b2.  return @kind void;
}
procedure `java.lang.String` `c`(`com.bumptech.glide.load.m.c0` v1 @kind this) @signature `Lcom/bumptech/glide/load/m/c0;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3313d0.  v0:= v1.`com.bumptech.glide.load.m.c0.d` @type ^`java.lang.String` @kind object;
  #L3313d4.  if v0 == 0 then goto L3313da;
  #L3313d8.  goto L3313f2;
  #L3313da.  v0:= v1.`com.bumptech.glide.load.m.c0.c` @type ^`java.net.URL` @kind object;
  #L3313de.  call temp:= `d`(v0) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3313e4.  v0:= temp @kind object;
  #L3313e6.  v0:= (`java.net.URL`) v0 @kind object;
  #L3313ea.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L3313f0.  v0:= temp @kind object;
  #L3313f2.  return v0 @kind object;
}
procedure `java.util.Map` `e`(`com.bumptech.glide.load.m.c0` v1 @kind this) @signature `Lcom/bumptech/glide/load/m/c0;.e:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3314d0.  v0:= v1.`com.bumptech.glide.load.m.c0.b` @type ^`com.bumptech.glide.load.m.e0` @kind object;
  #L3314d4.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/m/e0;.a:()Ljava/util/Map;` @kind interface;
  #L3314da.  v0:= temp @kind object;
  #L3314dc.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.m.c0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/m/c0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3312fc.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.m.c0` @kind boolean;
  #L331300.  v1:= 0I;
  #L331302.  if v0 == 0 then goto L33133c;
  #L331306.  v4:= (`com.bumptech.glide.load.m.c0`) v4 @kind object;
  #L33130a.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/load/m/c0;.c:()Ljava/lang/String;` @kind virtual;
  #L331310.  v0:= temp @kind object;
  #L331312.  call temp:= `c`(v4) @signature `Lcom/bumptech/glide/load/m/c0;.c:()Ljava/lang/String;` @kind virtual;
  #L331318.  v2:= temp @kind object;
  #L33131a.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L331320.  v0:= temp;
  #L331322.  if v0 == 0 then goto L33133c;
  #L331326.  v0:= v3.`com.bumptech.glide.load.m.c0.b` @type ^`com.bumptech.glide.load.m.e0` @kind object;
  #L33132a.  v4:= v4.`com.bumptech.glide.load.m.c0.b` @type ^`com.bumptech.glide.load.m.e0` @kind object;
  #L33132e.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L331334.  v4:= temp;
  #L331336.  if v4 == 0 then goto L33133c;
  #L33133a.  v1:= 1I;
  #L33133c.  return v1;
}
procedure `java.net.URL` `h`(`com.bumptech.glide.load.m.c0` v1 @kind this) @signature `Lcom/bumptech/glide/load/m/c0;.h:()Ljava/net/URL;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3314b4.  call temp:= `g`(v1) @signature `Lcom/bumptech/glide/load/m/c0;.g:()Ljava/net/URL;` @kind direct;
  #L3314ba.  v0:= temp @kind object;
  #L3314bc.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.m.c0` v2 @kind this) @signature `Lcom/bumptech/glide/load/m/c0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L331388.  v0:= v2.`com.bumptech.glide.load.m.c0.h` @type ^`int`;
  #L33138c.  if v0 != 0 then goto L3313ba;
  #L331390.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/load/m/c0;.c:()Ljava/lang/String;` @kind virtual;
  #L331396.  v0:= temp @kind object;
  #L331398.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L33139e.  v0:= temp;
  #L3313a0.  v2.`com.bumptech.glide.load.m.c0.h` @type ^`int` := v0;
  #L3313a4.  v0:= v0 * 31;
  #L3313a8.  v1:= v2.`com.bumptech.glide.load.m.c0.b` @type ^`com.bumptech.glide.load.m.e0` @kind object;
  #L3313ac.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3313b2.  v1:= temp;
  #L3313b4.  v0:= v0 + v1 @kind int;
  #L3313b6.  v2.`com.bumptech.glide.load.m.c0.h` @type ^`int` := v0;
  #L3313ba.  v0:= v2.`com.bumptech.glide.load.m.c0.h` @type ^`int`;
  #L3313be.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.m.c0` v1 @kind this) @signature `Lcom/bumptech/glide/load/m/c0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L331464.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/load/m/c0;.c:()Ljava/lang/String;` @kind virtual;
  #L33146a.  v0:= temp @kind object;
  #L33146c.  return v0 @kind object;
}
