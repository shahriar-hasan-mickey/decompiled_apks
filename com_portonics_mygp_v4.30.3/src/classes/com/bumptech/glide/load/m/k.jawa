record `com.bumptech.glide.load.m.k` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.m.q0` @kind interface {
  `com.bumptech.glide.load.m.g` `com.bumptech.glide.load.m.k.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.k` v0 @kind this, `com.bumptech.glide.load.m.g` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/k;.<init>:(Lcom/bumptech/glide/load/m/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L330ab8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L330abe.  v0.`com.bumptech.glide.load.m.k.a` @type ^`com.bumptech.glide.load.m.g` := v1 @kind object;
  #L330ac2.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.m.k` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/k;.a:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L330a44.  v1:= (`byte`[]) v1 @kind object;
  #L330a48.  call temp:= `d`(v0, v1) @signature `Lcom/bumptech/glide/load/m/k;.d:([B)Z` @kind virtual;
  #L330a4e.  v1:= temp;
  #L330a50.  return v1;
}
procedure `com.bumptech.glide.load.m.p0` `b`(`com.bumptech.glide.load.m.k` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/m/k;.b:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L330a98.  v1:= (`byte`[]) v1 @kind object;
  #L330a9c.  call temp:= `c`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/m/k;.c:([BIILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @kind virtual;
  #L330aa2.  v1:= temp @kind object;
  #L330aa4.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.m.p0` `c`(`com.bumptech.glide.load.m.k` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.h` v5 @kind object) @signature `Lcom/bumptech/glide/load/m/k;.c:([BIILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L330a64.  v3:= new `com.bumptech.glide.load.m.p0`;
  #L330a68.  v4:= new `com.bumptech.glide.r.c`;
  #L330a6c.  call `<init>`(v4, v2) @signature `Lcom/bumptech/glide/r/c;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L330a72.  v5:= new `com.bumptech.glide.load.m.h`;
  #L330a76.  v0:= v1.`com.bumptech.glide.load.m.k.a` @type ^`com.bumptech.glide.load.m.g` @kind object;
  #L330a7a.  call `<init>`(v5, v2, v0) @signature `Lcom/bumptech/glide/load/m/h;.<init>:([BLcom/bumptech/glide/load/m/g;)V` @kind direct;
  #L330a80.  call `<init>`(v3, v4, v5) @signature `Lcom/bumptech/glide/load/m/p0;.<init>:(Lcom/bumptech/glide/load/c;Lcom/bumptech/glide/load/l/e;)V` @kind direct;
  #L330a86.  return v3 @kind object;
}
procedure `boolean` `d`(`com.bumptech.glide.load.m.k` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/bumptech/glide/load/m/k;.d:([B)Z` @AccessFlag PUBLIC {
    temp;

  #L330a30.  v1:= 1I;
  #L330a32.  return v1;
}
