record `com.bumptech.glide.load.m.y0` @kind class @AccessFlag  {
  `java.lang.Class` `com.bumptech.glide.load.m.y0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.load.m.y0.b` @AccessFlag FINAL;
  `com.bumptech.glide.load.m.r0` `com.bumptech.glide.load.m.y0.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.y0` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.m.r0` v3 @kind object) @signature `Lcom/bumptech/glide/load/m/y0;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/m/r0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3324a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3324aa.  v0.`com.bumptech.glide.load.m.y0.a` @type ^`java.lang.Class` := v1 @kind object;
  #L3324ae.  v0.`com.bumptech.glide.load.m.y0.b` @type ^`java.lang.Class` := v2 @kind object;
  #L3324b2.  v0.`com.bumptech.glide.load.m.y0.c` @type ^`com.bumptech.glide.load.m.r0` := v3 @kind object;
  #L3324b6.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.m.y0` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/y0;.a:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L332450.  v0:= v1.`com.bumptech.glide.load.m.y0.a` @type ^`java.lang.Class` @kind object;
  #L332454.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L33245a.  v2:= temp;
  #L33245c.  return v2;
}
procedure `boolean` `b`(`com.bumptech.glide.load.m.y0` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/y0;.b:(Ljava/lang/Class;Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;

  #L332470.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/load/m/y0;.a:(Ljava/lang/Class;)Z` @kind virtual;
  #L332476.  v1:= temp;
  #L332478.  if v1 == 0 then goto L332490;
  #L33247c.  v1:= v0.`com.bumptech.glide.load.m.y0.b` @type ^`java.lang.Class` @kind object;
  #L332480.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L332486.  v1:= temp;
  #L332488.  if v1 == 0 then goto L332490;
  #L33248c.  v1:= 1I;
  #L33248e.  goto L332492;
  #L332490.  v1:= 0I;
  #L332492.  return v1;
}
