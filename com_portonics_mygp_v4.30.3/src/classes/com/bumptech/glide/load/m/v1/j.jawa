record `com.bumptech.glide.load.m.v1.j` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.m.q0` @kind interface {
  `com.bumptech.glide.load.m.q0` `com.bumptech.glide.load.m.v1.j.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.v1.j` v0 @kind this, `com.bumptech.glide.load.m.q0` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/j;.<init>:(Lcom/bumptech/glide/load/m/q0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L333a2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L333a32.  v0.`com.bumptech.glide.load.m.v1.j.a` @type ^`com.bumptech.glide.load.m.q0` := v1 @kind object;
  #L333a36.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.m.v1.j` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/j;.a:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3339b0.  v1:= (`java.net.URL`) v1 @kind object;
  #L3339b4.  call temp:= `d`(v0, v1) @signature `Lcom/bumptech/glide/load/m/v1/j;.d:(Ljava/net/URL;)Z` @kind virtual;
  #L3339ba.  v1:= temp;
  #L3339bc.  return v1;
}
procedure `com.bumptech.glide.load.m.p0` `b`(`com.bumptech.glide.load.m.v1.j` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/j;.b:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3339e4.  v1:= (`java.net.URL`) v1 @kind object;
  #L3339e8.  call temp:= `c`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/m/v1/j;.c:(Ljava/net/URL;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @kind virtual;
  #L3339ee.  v1:= temp @kind object;
  #L3339f0.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.m.p0` `c`(`com.bumptech.glide.load.m.v1.j` v2 @kind this, `java.net.URL` v3 @kind object, `int` v4 , `int` v5 , `com.bumptech.glide.load.h` v6 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/j;.c:(Ljava/net/URL;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L333a04.  v0:= v2.`com.bumptech.glide.load.m.v1.j.a` @type ^`com.bumptech.glide.load.m.q0` @kind object;
  #L333a08.  v1:= new `com.bumptech.glide.load.m.c0`;
  #L333a0c.  call `<init>`(v1, v3) @signature `Lcom/bumptech/glide/load/m/c0;.<init>:(Ljava/net/URL;)V` @kind direct;
  #L333a12.  call temp:= `b`(v0, v1, v4, v5, v6) @signature `Lcom/bumptech/glide/load/m/q0;.b:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @kind interface;
  #L333a18.  v3:= temp @kind object;
  #L333a1a.  return v3 @kind object;
}
procedure `boolean` `d`(`com.bumptech.glide.load.m.v1.j` v0 @kind this, `java.net.URL` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/j;.d:(Ljava/net/URL;)Z` @AccessFlag PUBLIC {
    temp;

  #L3339d0.  v1:= 1I;
  #L3339d2.  return v1;
}
