record `com.bumptech.glide.load.m.u` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.bumptech.glide.load.m.r0` @kind interface {
  `com.bumptech.glide.load.m.y` `com.bumptech.glide.load.m.u.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.u` v0 @kind this, `com.bumptech.glide.load.m.y` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/u;.<init>:(Lcom/bumptech/glide/load/m/y;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L330fc4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L330fca.  v0.`com.bumptech.glide.load.m.u.a` @type ^`com.bumptech.glide.load.m.y` := v1 @kind object;
  #L330fce.  return @kind void;
}
procedure `com.bumptech.glide.load.m.q0` `b`(`com.bumptech.glide.load.m.u` v1 @kind this, `com.bumptech.glide.load.m.a1` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/u;.b:(Lcom/bumptech/glide/load/m/a1;)Lcom/bumptech/glide/load/m/q0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L330fa4.  v2:= new `com.bumptech.glide.load.m.b0`;
  #L330fa8.  v0:= v1.`com.bumptech.glide.load.m.u.a` @type ^`com.bumptech.glide.load.m.y` @kind object;
  #L330fac.  call `<init>`(v2, v0) @signature `Lcom/bumptech/glide/load/m/b0;.<init>:(Lcom/bumptech/glide/load/m/y;)V` @kind direct;
  #L330fb2.  return v2 @kind object;
}
