record `com.bumptech.glide.load.m.q` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.l.e` @kind interface {
  `java.lang.String` `com.bumptech.glide.load.m.q.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.m.p` `com.bumptech.glide.load.m.q.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.bumptech.glide.load.m.q.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.q` v0 @kind this, `java.lang.String` v1 @kind object, `com.bumptech.glide.load.m.p` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/q;.<init>:(Ljava/lang/String;Lcom/bumptech/glide/load/m/p;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L330d10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L330d16.  v0.`com.bumptech.glide.load.m.q.b` @type ^`java.lang.String` := v1 @kind object;
  #L330d1a.  v0.`com.bumptech.glide.load.m.q.c` @type ^`com.bumptech.glide.load.m.p` := v2 @kind object;
  #L330d1e.  return @kind void;
}
procedure `java.lang.Class` `a`(`com.bumptech.glide.load.m.q` v1 @kind this) @signature `Lcom/bumptech/glide/load/m/q;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L330cf0.  v0:= v1.`com.bumptech.glide.load.m.q.c` @type ^`com.bumptech.glide.load.m.p` @kind object;
  #L330cf4.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/m/p;.a:()Ljava/lang/Class;` @kind interface;
  #L330cfa.  v0:= temp @kind object;
  #L330cfc.  return v0 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.load.m.q` v2 @kind this) @signature `Lcom/bumptech/glide/load/m/q;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L330d44.  v0:= v2.`com.bumptech.glide.load.m.q.c` @type ^`com.bumptech.glide.load.m.p` @kind object;
  #L330d48.  v1:= v2.`com.bumptech.glide.load.m.q.d` @type ^`java.lang.Object` @kind object;
  #L330d4c.  call `b`(v0, v1) @signature `Lcom/bumptech/glide/load/m/p;.b:(Ljava/lang/Object;)V` @kind interface;
  #L330d52.  return @kind void;
  catch `java.io.IOException` @[L330d44..L330d52] goto L330d52;
}
procedure `void` `cancel`(`com.bumptech.glide.load.m.q` v0 @kind this) @signature `Lcom/bumptech/glide/load/m/q;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L330d30.  return @kind void;
}
procedure `com.bumptech.glide.load.DataSource` `d`(`com.bumptech.glide.load.m.q` v1 @kind this) @signature `Lcom/bumptech/glide/load/m/q;.d:()Lcom/bumptech/glide/load/DataSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L330cd8.  v0:= `@@com.bumptech.glide.load.DataSource.LOCAL` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L330cdc.  return v0 @kind object;
}
procedure `void` `e`(`com.bumptech.glide.load.m.q` v1 @kind this, `com.bumptech.glide.Priority` v2 @kind object, `com.bumptech.glide.load.l.d` v3 @kind object) @signature `Lcom/bumptech/glide/load/m/q;.e:(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/l/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L330d74.  v2:= v1.`com.bumptech.glide.load.m.q.c` @type ^`com.bumptech.glide.load.m.p` @kind object;
  #L330d78.  v0:= v1.`com.bumptech.glide.load.m.q.b` @type ^`java.lang.String` @kind object;
  #L330d7c.  call temp:= `c`(v2, v0) @signature `Lcom/bumptech/glide/load/m/p;.c:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L330d82.  v2:= temp @kind object;
  #L330d84.  v1.`com.bumptech.glide.load.m.q.d` @type ^`java.lang.Object` := v2 @kind object;
  #L330d88.  call `f`(v3, v2) @signature `Lcom/bumptech/glide/load/l/d;.f:(Ljava/lang/Object;)V` @kind interface;
  #L330d8e.  goto L330d98;
  #L330d90.  v2:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L330d92.  call `c`(v3, v2) @signature `Lcom/bumptech/glide/load/l/d;.c:(Ljava/lang/Exception;)V` @kind interface;
  #L330d98.  return @kind void;
  catch `java.lang.IllegalArgumentException` @[L330d74..L330d8e] goto L330d90;
}
