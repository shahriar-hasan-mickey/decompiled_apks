record `com.bumptech.glide.load.m.r` @kind class @AccessFlag  extends `com.bumptech.glide.load.m.p` @kind interface {
  `com.bumptech.glide.load.m.s` `com.bumptech.glide.load.m.r.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.r` v0 @kind this, `com.bumptech.glide.load.m.s` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/r;.<init>:(Lcom/bumptech/glide/load/m/s;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L330e8c.  v0.`com.bumptech.glide.load.m.r.a` @type ^`com.bumptech.glide.load.m.s` := v1 @kind object;
  #L330e90.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L330e96.  return @kind void;
}
procedure `java.lang.Class` `a`(`com.bumptech.glide.load.m.r` v1 @kind this) @signature `Lcom/bumptech/glide/load/m/r;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L330e58.  v0:= constclass @type ^`java.io.InputStream` @kind object;
  #L330e5c.  return v0 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.load.m.r` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/r;.b:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L330ec0.  v1:= (`java.io.InputStream`) v1 @kind object;
  #L330ec4.  call `d`(v0, v1) @signature `Lcom/bumptech/glide/load/m/r;.d:(Ljava/io/InputStream;)V` @kind virtual;
  #L330eca.  return @kind void;
}
procedure `java.lang.Object` `c`(`com.bumptech.glide.load.m.r` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/r;.c:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L330e70.  call temp:= `e`(v0, v1) @signature `Lcom/bumptech/glide/load/m/r;.e:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L330e76.  v1:= temp @kind object;
  #L330e78.  return v1 @kind object;
}
procedure `void` `d`(`com.bumptech.glide.load.m.r` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/r;.d:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC {
    temp;

  #L330ea8.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L330eae.  return @kind void;
}
procedure `java.io.InputStream` `e`(`com.bumptech.glide.load.m.r` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lcom/bumptech/glide/load/m/r;.e:(Ljava/lang/String;)Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L330dbc.  v0:= "data:image" @kind object;
  #L330dc0.  call temp:= `startsWith`(v5, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L330dc6.  v0:= temp;
  #L330dc8.  if v0 == 0 then goto L330e38;
  #L330dcc.  v0:= 44I;
  #L330dd0.  call temp:= `indexOf`(v5, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L330dd6.  v0:= temp;
  #L330dd8.  v1:= -1I;
  #L330dda.  if v0 == v1 then goto L330e28;
  #L330dde.  v1:= 0I;
  #L330de0.  call temp:= `substring`(v5, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L330de6.  v2:= temp @kind object;
  #L330de8.  v3:= ";base64" @kind object;
  #L330dec.  call temp:= `endsWith`(v2, v3) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L330df2.  v2:= temp;
  #L330df4.  if v2 == 0 then goto L330e18;
  #L330df8.  v0:= v0 + 1;
  #L330dfc.  call temp:= `substring`(v5, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L330e02.  v5:= temp @kind object;
  #L330e04.  call temp:= `decode`(v5, v1) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L330e0a.  v5:= temp @kind object;
  #L330e0c.  v0:= new `java.io.ByteArrayInputStream`;
  #L330e10.  call `<init>`(v0, v5) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L330e16.  return v0 @kind object;
  #L330e18.  v5:= new `java.lang.IllegalArgumentException`;
  #L330e1c.  v0:= "Not a base64 image data URL." @kind object;
  #L330e20.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L330e26.  throw v5;
  #L330e28.  v5:= new `java.lang.IllegalArgumentException`;
  #L330e2c.  v0:= "Missing comma in data URL." @kind object;
  #L330e30.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L330e36.  throw v5;
  #L330e38.  v5:= new `java.lang.IllegalArgumentException`;
  #L330e3c.  v0:= "Not a valid image data URL." @kind object;
  #L330e40.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L330e46.  throw v5;
}
