record `com.bumptech.glide.load.m.m0` @kind class @AccessFlag  extends `com.bumptech.glide.s.k` @kind class {
  `com.bumptech.glide.load.m.o0` `com.bumptech.glide.load.m.m0.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.m0` v0 @kind this, `com.bumptech.glide.load.m.o0` v1 @kind object, `long` v2 ) @signature `Lcom/bumptech/glide/load/m/m0;.<init>:(Lcom/bumptech/glide/load/m/o0;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L331c94.  v0.`com.bumptech.glide.load.m.m0.e` @type ^`com.bumptech.glide.load.m.o0` := v1 @kind object;
  #L331c98.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/s/k;.<init>:(J)V` @kind direct;
  #L331c9e.  return @kind void;
}
procedure `void` `j`(`com.bumptech.glide.load.m.m0` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/m0;.j:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L331cc8.  v1:= (`com.bumptech.glide.load.m.n0`) v1 @kind object;
  #L331ccc.  call `n`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/m/m0;.n:(Lcom/bumptech/glide/load/m/n0;Ljava/lang/Object;)V` @kind virtual;
  #L331cd2.  return @kind void;
}
procedure `void` `n`(`com.bumptech.glide.load.m.m0` v0 @kind this, `com.bumptech.glide.load.m.n0` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/m0;.n:(Lcom/bumptech/glide/load/m/n0;Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L331cb0.  call `c`(v1) @signature `Lcom/bumptech/glide/load/m/n0;.c:()V` @kind virtual;
  #L331cb6.  return @kind void;
}
