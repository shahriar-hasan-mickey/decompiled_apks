record `com.bumptech.glide.load.m.h0` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.m.f0` @kind interface {
  `java.lang.String` `com.bumptech.glide.load.m.h0.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.h0` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/h0;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L331828.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33182e.  v0.`com.bumptech.glide.load.m.h0.a` @type ^`java.lang.String` := v1 @kind object;
  #L331832.  return @kind void;
}
procedure `java.lang.String` `a`(`com.bumptech.glide.load.m.h0` v1 @kind this) @signature `Lcom/bumptech/glide/load/m/h0;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3317c4.  v0:= v1.`com.bumptech.glide.load.m.h0.a` @type ^`java.lang.String` @kind object;
  #L3317c8.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.m.h0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/h0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L331770.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.m.h0` @kind boolean;
  #L331774.  if v0 == 0 then goto L33178e;
  #L331778.  v2:= (`com.bumptech.glide.load.m.h0`) v2 @kind object;
  #L33177c.  v0:= v1.`com.bumptech.glide.load.m.h0.a` @type ^`java.lang.String` @kind object;
  #L331780.  v2:= v2.`com.bumptech.glide.load.m.h0.a` @type ^`java.lang.String` @kind object;
  #L331784.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33178a.  v2:= temp;
  #L33178c.  return v2;
  #L33178e.  v2:= 0I;
  #L331790.  return v2;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.m.h0` v1 @kind this) @signature `Lcom/bumptech/glide/load/m/h0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3317a4.  v0:= v1.`com.bumptech.glide.load.m.h0.a` @type ^`java.lang.String` @kind object;
  #L3317a8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3317ae.  v0:= temp;
  #L3317b0.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.m.h0` v2 @kind this) @signature `Lcom/bumptech/glide/load/m/h0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3317dc.  v0:= new `java.lang.StringBuilder`;
  #L3317e0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3317e6.  v1:= "StringHeaderFactory{value='" @kind object;
  #L3317ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3317f0.  v1:= v2.`com.bumptech.glide.load.m.h0.a` @type ^`java.lang.String` @kind object;
  #L3317f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3317fa.  v1:= 39I;
  #L3317fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L331804.  v1:= 125I;
  #L331808.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L33180e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L331814.  v0:= temp @kind object;
  #L331816.  return v0 @kind object;
}
