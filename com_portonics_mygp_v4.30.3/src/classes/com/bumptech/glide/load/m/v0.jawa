record `com.bumptech.glide.load.m.v0` @kind class @AccessFlag  extends `com.bumptech.glide.load.l.e` @kind interface, `com.bumptech.glide.load.l.d` @kind interface {
  `java.util.List` `com.bumptech.glide.load.m.v0.b` @AccessFlag PRIVATE_FINAL;
  `androidx.core.util.e` `com.bumptech.glide.load.m.v0.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.m.v0.d` @AccessFlag PRIVATE;
  `com.bumptech.glide.Priority` `com.bumptech.glide.load.m.v0.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.l.d` `com.bumptech.glide.load.m.v0.f` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.load.m.v0.g` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.m.v0.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.v0` v0 @kind this, `java.util.List` v1 @kind object, `androidx.core.util.e` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/v0;.<init>:(Ljava/util/List;Landroidx/core/util/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L332218.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33221e.  v0.`com.bumptech.glide.load.m.v0.c` @type ^`androidx.core.util.e` := v2 @kind object;
  #L332222.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/s/n;.c:(Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L332228.  v0.`com.bumptech.glide.load.m.v0.b` @type ^`java.util.List` := v1 @kind object;
  #L33222c.  v1:= 0I;
  #L33222e.  v0.`com.bumptech.glide.load.m.v0.d` @type ^`int` := v1;
  #L332232.  return @kind void;
}
procedure `void` `g`(`com.bumptech.glide.load.m.v0` v4 @kind this) @signature `Lcom/bumptech/glide/load/m/v0;.g:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L332390.  v0:= v4.`com.bumptech.glide.load.m.v0.h` @type ^`boolean` @kind boolean;
  #L332394.  if v0 == 0 then goto L33239a;
  #L332398.  return @kind void;
  #L33239a.  v0:= v4.`com.bumptech.glide.load.m.v0.d` @type ^`int`;
  #L33239e.  v1:= v4.`com.bumptech.glide.load.m.v0.b` @type ^`java.util.List` @kind object;
  #L3323a2.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3323a8.  v1:= temp;
  #L3323aa.  v1:= v1 + -1;
  #L3323ae.  if v0 >= v1 then goto L3323ce;
  #L3323b2.  v0:= v4.`com.bumptech.glide.load.m.v0.d` @type ^`int`;
  #L3323b6.  v0:= v0 + 1;
  #L3323ba.  v4.`com.bumptech.glide.load.m.v0.d` @type ^`int` := v0;
  #L3323be.  v0:= v4.`com.bumptech.glide.load.m.v0.e` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3323c2.  v1:= v4.`com.bumptech.glide.load.m.v0.f` @type ^`com.bumptech.glide.load.l.d` @kind object;
  #L3323c6.  call `e`(v4, v0, v1) @signature `Lcom/bumptech/glide/load/m/v0;.e:(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/l/d;)V` @kind virtual;
  #L3323cc.  goto L3323fe;
  #L3323ce.  v0:= v4.`com.bumptech.glide.load.m.v0.g` @type ^`java.util.List` @kind object;
  #L3323d2.  call temp:= `d`(v0) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3323d8.  v0:= v4.`com.bumptech.glide.load.m.v0.f` @type ^`com.bumptech.glide.load.l.d` @kind object;
  #L3323dc.  v1:= new `com.bumptech.glide.load.engine.GlideException`;
  #L3323e0.  v2:= new `java.util.ArrayList`;
  #L3323e4.  v3:= v4.`com.bumptech.glide.load.m.v0.g` @type ^`java.util.List` @kind object;
  #L3323e8.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3323ee.  v3:= "Fetch failed" @kind object;
  #L3323f2.  call `<init>`(v1, v3, v2) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3323f8.  call `c`(v0, v1) @signature `Lcom/bumptech/glide/load/l/d;.c:(Ljava/lang/Exception;)V` @kind interface;
  #L3323fe.  return @kind void;
}
procedure `java.lang.Class` `a`(`com.bumptech.glide.load.m.v0` v2 @kind this) @signature `Lcom/bumptech/glide/load/m/v0;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3321ec.  v0:= v2.`com.bumptech.glide.load.m.v0.b` @type ^`java.util.List` @kind object;
  #L3321f0.  v1:= 0I;
  #L3321f2.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3321f8.  v0:= temp @kind object;
  #L3321fa.  v0:= (`com.bumptech.glide.load.l.e`) v0 @kind object;
  #L3321fe.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/l/e;.a:()Ljava/lang/Class;` @kind interface;
  #L332204.  v0:= temp @kind object;
  #L332206.  return v0 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.load.m.v0` v2 @kind this) @signature `Lcom/bumptech/glide/load/m/v0;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L332288.  v0:= v2.`com.bumptech.glide.load.m.v0.g` @type ^`java.util.List` @kind object;
  #L33228c.  if v0 == 0 then goto L33229a;
  #L332290.  v1:= v2.`com.bumptech.glide.load.m.v0.c` @type ^`androidx.core.util.e` @kind object;
  #L332294.  call temp:= `a`(v1, v0) @signature `Landroidx/core/util/e;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L33229a.  v0:= 0I;
  #L33229c.  v2.`com.bumptech.glide.load.m.v0.g` @type ^`java.util.List` := v0 @kind object;
  #L3322a0.  v0:= v2.`com.bumptech.glide.load.m.v0.b` @type ^`java.util.List` @kind object;
  #L3322a4.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3322aa.  v0:= temp @kind object;
  #L3322ac.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3322b2.  v1:= temp;
  #L3322b4.  if v1 == 0 then goto L3322cc;
  #L3322b8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3322be.  v1:= temp @kind object;
  #L3322c0.  v1:= (`com.bumptech.glide.load.l.e`) v1 @kind object;
  #L3322c4.  call `b`(v1) @signature `Lcom/bumptech/glide/load/l/e;.b:()V` @kind interface;
  #L3322ca.  goto L3322ac;
  #L3322cc.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.load.m.v0` v1 @kind this, `java.lang.Exception` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/v0;.c:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L332360.  v0:= v1.`com.bumptech.glide.load.m.v0.g` @type ^`java.util.List` @kind object;
  #L332364.  call temp:= `d`(v0) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33236a.  v0:= temp @kind object;
  #L33236c.  v0:= (`java.util.List`) v0 @kind object;
  #L332370.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L332376.  call `g`(v1) @signature `Lcom/bumptech/glide/load/m/v0;.g:()V` @kind direct;
  #L33237c.  return @kind void;
}
procedure `void` `cancel`(`com.bumptech.glide.load.m.v0` v2 @kind this) @signature `Lcom/bumptech/glide/load/m/v0;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L332244.  v0:= 1I;
  #L332246.  v2.`com.bumptech.glide.load.m.v0.h` @type ^`boolean` := v0 @kind boolean;
  #L33224a.  v0:= v2.`com.bumptech.glide.load.m.v0.b` @type ^`java.util.List` @kind object;
  #L33224e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L332254.  v0:= temp @kind object;
  #L332256.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L33225c.  v1:= temp;
  #L33225e.  if v1 == 0 then goto L332276;
  #L332262.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L332268.  v1:= temp @kind object;
  #L33226a.  v1:= (`com.bumptech.glide.load.l.e`) v1 @kind object;
  #L33226e.  call `cancel`(v1) @signature `Lcom/bumptech/glide/load/l/e;.cancel:()V` @kind interface;
  #L332274.  goto L332256;
  #L332276.  return @kind void;
}
procedure `com.bumptech.glide.load.DataSource` `d`(`com.bumptech.glide.load.m.v0` v2 @kind this) @signature `Lcom/bumptech/glide/load/m/v0;.d:()Lcom/bumptech/glide/load/DataSource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3321c0.  v0:= v2.`com.bumptech.glide.load.m.v0.b` @type ^`java.util.List` @kind object;
  #L3321c4.  v1:= 0I;
  #L3321c6.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3321cc.  v0:= temp @kind object;
  #L3321ce.  v0:= (`com.bumptech.glide.load.l.e`) v0 @kind object;
  #L3321d2.  call temp:= `d`(v0) @signature `Lcom/bumptech/glide/load/l/e;.d:()Lcom/bumptech/glide/load/DataSource;` @kind interface;
  #L3321d8.  v0:= temp @kind object;
  #L3321da.  return v0 @kind object;
}
procedure `void` `e`(`com.bumptech.glide.load.m.v0` v1 @kind this, `com.bumptech.glide.Priority` v2 @kind object, `com.bumptech.glide.load.l.d` v3 @kind object) @signature `Lcom/bumptech/glide/load/m/v0;.e:(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/l/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3322e0.  v1.`com.bumptech.glide.load.m.v0.e` @type ^`com.bumptech.glide.Priority` := v2 @kind object;
  #L3322e4.  v1.`com.bumptech.glide.load.m.v0.f` @type ^`com.bumptech.glide.load.l.d` := v3 @kind object;
  #L3322e8.  v3:= v1.`com.bumptech.glide.load.m.v0.c` @type ^`androidx.core.util.e` @kind object;
  #L3322ec.  call temp:= `b`(v3) @signature `Landroidx/core/util/e;.b:()Ljava/lang/Object;` @kind interface;
  #L3322f2.  v3:= temp @kind object;
  #L3322f4.  v3:= (`java.util.List`) v3 @kind object;
  #L3322f8.  v1.`com.bumptech.glide.load.m.v0.g` @type ^`java.util.List` := v3 @kind object;
  #L3322fc.  v3:= v1.`com.bumptech.glide.load.m.v0.b` @type ^`java.util.List` @kind object;
  #L332300.  v0:= v1.`com.bumptech.glide.load.m.v0.d` @type ^`int`;
  #L332304.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33230a.  v3:= temp @kind object;
  #L33230c.  v3:= (`com.bumptech.glide.load.l.e`) v3 @kind object;
  #L332310.  call `e`(v3, v2, v1) @signature `Lcom/bumptech/glide/load/l/e;.e:(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/l/d;)V` @kind interface;
  #L332316.  v2:= v1.`com.bumptech.glide.load.m.v0.h` @type ^`boolean` @kind boolean;
  #L33231a.  if v2 == 0 then goto L332324;
  #L33231e.  call `cancel`(v1) @signature `Lcom/bumptech/glide/load/m/v0;.cancel:()V` @kind virtual;
  #L332324.  return @kind void;
}
procedure `void` `f`(`com.bumptech.glide.load.m.v0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/v0;.f:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L332338.  if v2 == 0 then goto L332348;
  #L33233c.  v0:= v1.`com.bumptech.glide.load.m.v0.f` @type ^`com.bumptech.glide.load.l.d` @kind object;
  #L332340.  call `f`(v0, v2) @signature `Lcom/bumptech/glide/load/l/d;.f:(Ljava/lang/Object;)V` @kind interface;
  #L332346.  goto L33234e;
  #L332348.  call `g`(v1) @signature `Lcom/bumptech/glide/load/m/v0;.g:()V` @kind direct;
  #L33234e.  return @kind void;
}
