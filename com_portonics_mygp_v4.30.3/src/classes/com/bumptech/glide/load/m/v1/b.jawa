record `com.bumptech.glide.load.m.v1.b` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.m.q0` @kind interface {
  `com.bumptech.glide.load.m.o0` `com.bumptech.glide.load.m.v1.b.b` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.g` `@@com.bumptech.glide.load.m.v1.b.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/m/v1/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L33359c.  v0:= 2500I;
  #L3335a0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3335a6.  v0:= temp @kind object;
  #L3335a8.  v1:= "com.bumptech.glide.load.model.stream.HttpGlideUrlLoader.Timeout" @kind object;
  #L3335ac.  call temp:= `f`(v1, v0) @signature `Lcom/bumptech/glide/load/g;.f:(Ljava/lang/String;Ljava/lang/Object;)Lcom/bumptech/glide/load/g;` @kind static;
  #L3335b2.  v0:= temp @kind object;
  #L3335b4.  `@@com.bumptech.glide.load.m.v1.b.a` @type ^`com.bumptech.glide.load.g` := v0 @kind object;
  #L3335b8.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.v1.b` v0 @kind this, `com.bumptech.glide.load.m.o0` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/b;.<init>:(Lcom/bumptech/glide/load/m/o0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3335cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3335d2.  v0.`com.bumptech.glide.load.m.v1.b.b` @type ^`com.bumptech.glide.load.m.o0` := v1 @kind object;
  #L3335d6.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.m.v1.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/b;.a:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3334f4.  v1:= (`com.bumptech.glide.load.m.c0`) v1 @kind object;
  #L3334f8.  call temp:= `d`(v0, v1) @signature `Lcom/bumptech/glide/load/m/v1/b;.d:(Lcom/bumptech/glide/load/m/c0;)Z` @kind virtual;
  #L3334fe.  v1:= temp;
  #L333500.  return v1;
}
procedure `com.bumptech.glide.load.m.p0` `b`(`com.bumptech.glide.load.m.v1.b` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/b;.b:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L33357c.  v1:= (`com.bumptech.glide.load.m.c0`) v1 @kind object;
  #L333580.  call temp:= `c`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/m/v1/b;.c:(Lcom/bumptech/glide/load/m/c0;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @kind virtual;
  #L333586.  v1:= temp @kind object;
  #L333588.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.m.p0` `c`(`com.bumptech.glide.load.m.v1.b` v0 @kind this, `com.bumptech.glide.load.m.c0` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/b;.c:(Lcom/bumptech/glide/load/m/c0;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/m/p0;` @AccessFlag PUBLIC {
    temp;

  #L333514.  v2:= v0.`com.bumptech.glide.load.m.v1.b.b` @type ^`com.bumptech.glide.load.m.o0` @kind object;
  #L333518.  if v2 == 0 then goto L33353c;
  #L33351c.  v3:= 0I;
  #L33351e.  call temp:= `a`(v2, v1, v3, v3) @signature `Lcom/bumptech/glide/load/m/o0;.a:(Ljava/lang/Object;II)Ljava/lang/Object;` @kind virtual;
  #L333524.  v2:= temp @kind object;
  #L333526.  v2:= (`com.bumptech.glide.load.m.c0`) v2 @kind object;
  #L33352a.  if v2 != 0 then goto L33353a;
  #L33352e.  v2:= v0.`com.bumptech.glide.load.m.v1.b.b` @type ^`com.bumptech.glide.load.m.o0` @kind object;
  #L333532.  call `b`(v2, v1, v3, v3, v1) @signature `Lcom/bumptech/glide/load/m/o0;.b:(Ljava/lang/Object;IILjava/lang/Object;)V` @kind virtual;
  #L333538.  goto L33353c;
  #L33353a.  v1:= v2 @kind object;
  #L33353c.  v2:= `@@com.bumptech.glide.load.m.v1.b.a` @type ^`com.bumptech.glide.load.g` @kind object;
  #L333540.  call temp:= `c`(v4, v2) @signature `Lcom/bumptech/glide/load/h;.c:(Lcom/bumptech/glide/load/g;)Ljava/lang/Object;` @kind virtual;
  #L333546.  v2:= temp @kind object;
  #L333548.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L33354c.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L333552.  v2:= temp;
  #L333554.  v3:= new `com.bumptech.glide.load.m.p0`;
  #L333558.  v4:= new `com.bumptech.glide.load.l.p`;
  #L33355c.  call `<init>`(v4, v1, v2) @signature `Lcom/bumptech/glide/load/l/p;.<init>:(Lcom/bumptech/glide/load/m/c0;I)V` @kind direct;
  #L333562.  call `<init>`(v3, v1, v4) @signature `Lcom/bumptech/glide/load/m/p0;.<init>:(Lcom/bumptech/glide/load/c;Lcom/bumptech/glide/load/l/e;)V` @kind direct;
  #L333568.  return v3 @kind object;
}
procedure `boolean` `d`(`com.bumptech.glide.load.m.v1.b` v0 @kind this, `com.bumptech.glide.load.m.c0` v1 @kind object) @signature `Lcom/bumptech/glide/load/m/v1/b;.d:(Lcom/bumptech/glide/load/m/c0;)Z` @AccessFlag PUBLIC {
    temp;

  #L3334e0.  v1:= 1I;
  #L3334e2.  return v1;
}
