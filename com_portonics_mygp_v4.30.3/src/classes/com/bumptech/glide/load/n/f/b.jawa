record `com.bumptech.glide.load.n.f.b` @kind class @AccessFlag  {
  `java.util.Queue` `com.bumptech.glide.load.n.f.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.f.b` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/f/b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L338dec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L338df2.  v0:= 0I;
  #L338df4.  call temp:= `f`(v0) @signature `Lcom/bumptech/glide/s/p;.f:(I)Ljava/util/Queue;` @kind static;
  #L338dfa.  v0:= temp @kind object;
  #L338dfc.  v1.`com.bumptech.glide.load.n.f.b.a` @type ^`java.util.Queue` := v0 @kind object;
  #L338e00.  return @kind void;
}
procedure `com.bumptech.glide.n.e` `a`(`com.bumptech.glide.load.n.f.b` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/f/b;.a:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/n/e;` @AccessFlag  {
    temp;
    v0;

  #L338d9c.  @monitorenter v1
  #L338d9e.  v0:= v1.`com.bumptech.glide.load.n.f.b.a` @type ^`java.util.Queue` @kind object;
  #L338da2.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L338da8.  v0:= temp @kind object;
  #L338daa.  v0:= (`com.bumptech.glide.n.e`) v0 @kind object;
  #L338dae.  if v0 != 0 then goto L338dbc;
  #L338db2.  v0:= new `com.bumptech.glide.n.e`;
  #L338db6.  call `<init>`(v0) @signature `Lcom/bumptech/glide/n/e;.<init>:()V` @kind direct;
  #L338dbc.  call temp:= `p`(v0, v2) @signature `Lcom/bumptech/glide/n/e;.p:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/n/e;` @kind virtual;
  #L338dc2.  v2:= temp @kind object;
  #L338dc4.  @monitorexit v1
  #L338dc6.  return v2 @kind object;
  #L338dc8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L338dca.  @monitorexit v1
  #L338dcc.  throw v2;
  catch `java.lang.Throwable` @[L338d9e..L338dc4] goto L338dc8;
}
procedure `void` `b`(`com.bumptech.glide.load.n.f.b` v1 @kind this, `com.bumptech.glide.n.e` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/f/b;.b:(Lcom/bumptech/glide/n/e;)V` @AccessFlag  {
    temp;
    v0;

  #L338e14.  @monitorenter v1
  #L338e16.  call `a`(v2) @signature `Lcom/bumptech/glide/n/e;.a:()V` @kind virtual;
  #L338e1c.  v0:= v1.`com.bumptech.glide.load.n.f.b.a` @type ^`java.util.Queue` @kind object;
  #L338e20.  call temp:= `offer`(v0, v2) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L338e26.  @monitorexit v1
  #L338e28.  return @kind void;
  #L338e2a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L338e2c.  @monitorexit v1
  #L338e2e.  throw v2;
  catch `java.lang.Throwable` @[L338e16..L338e26] goto L338e2a;
}
