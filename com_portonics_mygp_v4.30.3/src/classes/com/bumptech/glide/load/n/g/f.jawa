record `com.bumptech.glide.load.n.g.f` @kind class @AccessFlag FINAL {
  `java.lang.Class` `com.bumptech.glide.load.n.g.f.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.load.n.g.f.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.n.g.e` `com.bumptech.glide.load.n.g.f.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.g.f` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.n.g.e` v3 @kind object) @signature `Lcom/bumptech/glide/load/n/g/f;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/n/g/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L33a6a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33a6ae.  v0.`com.bumptech.glide.load.n.g.f.a` @type ^`java.lang.Class` := v1 @kind object;
  #L33a6b2.  v0.`com.bumptech.glide.load.n.g.f.b` @type ^`java.lang.Class` := v2 @kind object;
  #L33a6b6.  v0.`com.bumptech.glide.load.n.g.f.c` @type ^`com.bumptech.glide.load.n.g.e` := v3 @kind object;
  #L33a6ba.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.n.g.f` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/n/g/f;.a:(Ljava/lang/Class;Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33a670.  v0:= v1.`com.bumptech.glide.load.n.g.f.a` @type ^`java.lang.Class` @kind object;
  #L33a674.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L33a67a.  v2:= temp;
  #L33a67c.  if v2 == 0 then goto L33a694;
  #L33a680.  v2:= v1.`com.bumptech.glide.load.n.g.f.b` @type ^`java.lang.Class` @kind object;
  #L33a684.  call temp:= `isAssignableFrom`(v3, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L33a68a.  v2:= temp;
  #L33a68c.  if v2 == 0 then goto L33a694;
  #L33a690.  v2:= 1I;
  #L33a692.  goto L33a696;
  #L33a694.  v2:= 0I;
  #L33a696.  return v2;
}
