record `com.bumptech.glide.load.n.f.o` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.i` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.g` `com.bumptech.glide.load.n.f.o.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.f.o` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.g` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/f/o;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L33a2f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33a2fa.  v0.`com.bumptech.glide.load.n.f.o.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.g` := v1 @kind object;
  #L33a2fe.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.n.f.o` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/f/o;.a:(Ljava/lang/Object;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L33a28c.  v1:= (`com.bumptech.glide.n.b`) v1 @kind object;
  #L33a290.  call temp:= `d`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/n/f/o;.d:(Lcom/bumptech/glide/n/b;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L33a296.  v1:= temp;
  #L33a298.  return v1;
}
procedure `com.bumptech.glide.load.engine.u0` `b`(`com.bumptech.glide.load.n.f.o` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/f/o;.b:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L33a2d4.  v1:= (`com.bumptech.glide.n.b`) v1 @kind object;
  #L33a2d8.  call temp:= `c`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/n/f/o;.c:(Lcom/bumptech/glide/n/b;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @kind virtual;
  #L33a2de.  v1:= temp @kind object;
  #L33a2e0.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.u0` `c`(`com.bumptech.glide.load.n.f.o` v0 @kind this, `com.bumptech.glide.n.b` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/f/o;.c:(Lcom/bumptech/glide/n/b;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PUBLIC {
    temp;

  #L33a2ac.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/n/b;.a:()Landroid/graphics/Bitmap;` @kind interface;
  #L33a2b2.  v1:= temp @kind object;
  #L33a2b4.  v2:= v0.`com.bumptech.glide.load.n.f.o.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.g` @kind object;
  #L33a2b8.  call temp:= `f`(v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/d;.f:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/g;)Lcom/bumptech/glide/load/resource/bitmap/d;` @kind static;
  #L33a2be.  v1:= temp @kind object;
  #L33a2c0.  return v1 @kind object;
}
procedure `boolean` `d`(`com.bumptech.glide.load.n.f.o` v0 @kind this, `com.bumptech.glide.n.b` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/f/o;.d:(Lcom/bumptech/glide/n/b;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;

  #L33a278.  v1:= 1I;
  #L33a27a.  return v1;
}
