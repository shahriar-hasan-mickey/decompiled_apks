record `com.bumptech.glide.load.n.f.n` @kind class @AccessFlag  {
  `com.bumptech.glide.n.b` `com.bumptech.glide.load.n.f.n.a` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `com.bumptech.glide.load.n.f.n.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.n.f.n.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.k` `com.bumptech.glide.load.n.f.n.d` @AccessFlag FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.g` `com.bumptech.glide.load.n.f.n.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.load.n.f.n.f` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.n.f.n.g` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.n.f.n.h` @AccessFlag PRIVATE;
  `com.bumptech.glide.i` `com.bumptech.glide.load.n.f.n.i` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.n.f.j` `com.bumptech.glide.load.n.f.n.j` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.n.f.n.k` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.n.f.j` `com.bumptech.glide.load.n.f.n.l` @AccessFlag PRIVATE;
  `android.graphics.Bitmap` `com.bumptech.glide.load.n.f.n.m` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.k` `com.bumptech.glide.load.n.f.n.n` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.n.f.j` `com.bumptech.glide.load.n.f.n.o` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.n.f.m` `com.bumptech.glide.load.n.f.n.p` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.f.n` v8 @kind this, `com.bumptech.glide.e` v9 @kind object, `com.bumptech.glide.n.b` v10 @kind object, `int` v11 , `int` v12 , `com.bumptech.glide.load.k` v13 @kind object, `android.graphics.Bitmap` v14 @kind object) @signature `Lcom/bumptech/glide/load/n/f/n;.<init>:(Lcom/bumptech/glide/e;Lcom/bumptech/glide/n/b;IILcom/bumptech/glide/load/k;Landroid/graphics/Bitmap;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L339e44.  call temp:= `f`(v9) @signature `Lcom/bumptech/glide/e;.f:()Lcom/bumptech/glide/load/engine/bitmap_recycle/g;` @kind virtual;
  #L339e4a.  v1:= temp @kind object;
  #L339e4c.  call temp:= `h`(v9) @signature `Lcom/bumptech/glide/e;.h:()Landroid/content/Context;` @kind virtual;
  #L339e52.  v0:= temp @kind object;
  #L339e54.  call temp:= `t`(v0) @signature `Lcom/bumptech/glide/e;.t:(Landroid/content/Context;)Lcom/bumptech/glide/k;` @kind static;
  #L339e5a.  v2:= temp @kind object;
  #L339e5c.  call temp:= `h`(v9) @signature `Lcom/bumptech/glide/e;.h:()Landroid/content/Context;` @kind virtual;
  #L339e62.  v9:= temp @kind object;
  #L339e64.  call temp:= `t`(v9) @signature `Lcom/bumptech/glide/e;.t:(Landroid/content/Context;)Lcom/bumptech/glide/k;` @kind static;
  #L339e6a.  v9:= temp @kind object;
  #L339e6c.  call temp:= `j`(v9, v11, v12) @signature `Lcom/bumptech/glide/load/n/f/n;.j:(Lcom/bumptech/glide/k;II)Lcom/bumptech/glide/i;` @kind static;
  #L339e72.  v5:= temp @kind object;
  #L339e74.  v4:= 0I;
  #L339e76.  v0:= v8 @kind object;
  #L339e78.  v3:= v10 @kind object;
  #L339e7a.  v6:= v13 @kind object;
  #L339e7c.  v7:= v14 @kind object;
  #L339e7e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/n/f/n;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/g;Lcom/bumptech/glide/k;Lcom/bumptech/glide/n/b;Landroid/os/Handler;Lcom/bumptech/glide/i;Lcom/bumptech/glide/load/k;Landroid/graphics/Bitmap;)V` @kind direct;
  #L339e84.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.f.n` v1 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.g` v2 @kind object, `com.bumptech.glide.k` v3 @kind object, `com.bumptech.glide.n.b` v4 @kind object, `android.os.Handler` v5 @kind object, `com.bumptech.glide.i` v6 @kind object, `com.bumptech.glide.load.k` v7 @kind object, `android.graphics.Bitmap` v8 @kind object) @signature `Lcom/bumptech/glide/load/n/f/n;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/g;Lcom/bumptech/glide/k;Lcom/bumptech/glide/n/b;Landroid/os/Handler;Lcom/bumptech/glide/i;Lcom/bumptech/glide/load/k;Landroid/graphics/Bitmap;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L339e98.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L339e9e.  v0:= new `java.util.ArrayList`;
  #L339ea2.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L339ea8.  v1.`com.bumptech.glide.load.n.f.n.c` @type ^`java.util.List` := v0 @kind object;
  #L339eac.  v1.`com.bumptech.glide.load.n.f.n.d` @type ^`com.bumptech.glide.k` := v3 @kind object;
  #L339eb0.  if v5 != 0 then goto L339ed0;
  #L339eb4.  v5:= new `android.os.Handler`;
  #L339eb8.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L339ebe.  v3:= temp @kind object;
  #L339ec0.  v0:= new `com.bumptech.glide.load.n.f.l`;
  #L339ec4.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/n/f/l;.<init>:(Lcom/bumptech/glide/load/n/f/n;)V` @kind direct;
  #L339eca.  call `<init>`(v5, v3, v0) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;Landroid/os/Handler$Callback;)V` @kind direct;
  #L339ed0.  v1.`com.bumptech.glide.load.n.f.n.e` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.g` := v2 @kind object;
  #L339ed4.  v1.`com.bumptech.glide.load.n.f.n.b` @type ^`android.os.Handler` := v5 @kind object;
  #L339ed8.  v1.`com.bumptech.glide.load.n.f.n.i` @type ^`com.bumptech.glide.i` := v6 @kind object;
  #L339edc.  v1.`com.bumptech.glide.load.n.f.n.a` @type ^`com.bumptech.glide.n.b` := v4 @kind object;
  #L339ee0.  call `p`(v1, v7, v8) @signature `Lcom/bumptech/glide/load/n/f/n;.p:(Lcom/bumptech/glide/load/k;Landroid/graphics/Bitmap;)V` @kind virtual;
  #L339ee6.  return @kind void;
}
procedure `com.bumptech.glide.load.c` `g`() @signature `Lcom/bumptech/glide/load/n/f/n;.g:()Lcom/bumptech/glide/load/c;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L339cf0.  v0:= new `com.bumptech.glide.r.c`;
  #L339cf4.  call temp:= `random`() @signature `Ljava/lang/Math;.random:()D` @kind static;
  #L339cfa.  v1:= temp @kind wide;
  #L339cfc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L339d02.  v1:= temp @kind object;
  #L339d04.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/r/c;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L339d0a.  return v0 @kind object;
}
procedure `int` `h`(`com.bumptech.glide.load.n.f.n` v3 @kind this) @signature `Lcom/bumptech/glide/load/n/f/n;.h:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L339d60.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/load/n/f/n;.c:()Landroid/graphics/Bitmap;` @kind virtual;
  #L339d66.  v0:= temp @kind object;
  #L339d68.  call temp:= `getWidth`(v0) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L339d6e.  v0:= temp;
  #L339d70.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/load/n/f/n;.c:()Landroid/graphics/Bitmap;` @kind virtual;
  #L339d76.  v1:= temp @kind object;
  #L339d78.  call temp:= `getHeight`(v1) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L339d7e.  v1:= temp;
  #L339d80.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/load/n/f/n;.c:()Landroid/graphics/Bitmap;` @kind virtual;
  #L339d86.  v2:= temp @kind object;
  #L339d88.  call temp:= `getConfig`(v2) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L339d8e.  v2:= temp @kind object;
  #L339d90.  call temp:= `g`(v0, v1, v2) @signature `Lcom/bumptech/glide/s/p;.g:(IILandroid/graphics/Bitmap$Config;)I` @kind static;
  #L339d96.  v0:= temp;
  #L339d98.  return v0;
}
procedure `com.bumptech.glide.i` `j`(`com.bumptech.glide.k` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/n/f/n;.j:(Lcom/bumptech/glide/k;II)Lcom/bumptech/glide/i;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L339ca0.  call temp:= `g`(v2) @signature `Lcom/bumptech/glide/k;.g:()Lcom/bumptech/glide/i;` @kind virtual;
  #L339ca6.  v2:= temp @kind object;
  #L339ca8.  v0:= `@@com.bumptech.glide.load.engine.y.b` @type ^`com.bumptech.glide.load.engine.y` @kind object;
  #L339cac.  call temp:= `w0`(v0) @signature `Lcom/bumptech/glide/request/i;.w0:(Lcom/bumptech/glide/load/engine/y;)Lcom/bumptech/glide/request/i;` @kind static;
  #L339cb2.  v0:= temp @kind object;
  #L339cb4.  v1:= 1I;
  #L339cb6.  call temp:= `t0`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.t0:(Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L339cbc.  v0:= temp @kind object;
  #L339cbe.  v0:= (`com.bumptech.glide.request.i`) v0 @kind object;
  #L339cc2.  call temp:= `l0`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.l0:(Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L339cc8.  v0:= temp @kind object;
  #L339cca.  v0:= (`com.bumptech.glide.request.i`) v0 @kind object;
  #L339cce.  call temp:= `b0`(v0, v3, v4) @signature `Lcom/bumptech/glide/request/a;.b0:(II)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L339cd4.  v3:= temp @kind object;
  #L339cd6.  call temp:= `v0`(v2, v3) @signature `Lcom/bumptech/glide/i;.v0:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/i;` @kind virtual;
  #L339cdc.  v2:= temp @kind object;
  #L339cde.  return v2 @kind object;
}
procedure `void` `m`(`com.bumptech.glide.load.n.f.n` v5 @kind this) @signature `Lcom/bumptech/glide/load/n/f/n;.m:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L339f74.  v0:= v5.`com.bumptech.glide.load.n.f.n.f` @type ^`boolean` @kind boolean;
  #L339f78.  if v0 == 0 then goto L33a044;
  #L339f7c.  v0:= v5.`com.bumptech.glide.load.n.f.n.g` @type ^`boolean` @kind boolean;
  #L339f80.  if v0 == 0 then goto L339f86;
  #L339f84.  goto L33a044;
  #L339f86.  v0:= v5.`com.bumptech.glide.load.n.f.n.h` @type ^`boolean` @kind boolean;
  #L339f8a.  v1:= 1I;
  #L339f8c.  if v0 == 0 then goto L339fb8;
  #L339f90.  v0:= v5.`com.bumptech.glide.load.n.f.n.o` @type ^`com.bumptech.glide.load.n.f.j` @kind object;
  #L339f94.  v2:= 0I;
  #L339f96.  if v0 != 0 then goto L339f9e;
  #L339f9a.  v0:= 1I;
  #L339f9c.  goto L339fa0;
  #L339f9e.  v0:= 0I;
  #L339fa0.  v3:= "Pending target must be null when starting from the first frame" @kind object;
  #L339fa4.  call `a`(v0, v3) @signature `Lcom/bumptech/glide/s/n;.a:(ZLjava/lang/String;)V` @kind static;
  #L339faa.  v0:= v5.`com.bumptech.glide.load.n.f.n.a` @type ^`com.bumptech.glide.n.b` @kind object;
  #L339fae.  call `g`(v0) @signature `Lcom/bumptech/glide/n/b;.g:()V` @kind interface;
  #L339fb4.  v5.`com.bumptech.glide.load.n.f.n.h` @type ^`boolean` := v2 @kind boolean;
  #L339fb8.  v0:= v5.`com.bumptech.glide.load.n.f.n.o` @type ^`com.bumptech.glide.load.n.f.j` @kind object;
  #L339fbc.  if v0 == 0 then goto L339fce;
  #L339fc0.  v1:= 0I;
  #L339fc2.  v5.`com.bumptech.glide.load.n.f.n.o` @type ^`com.bumptech.glide.load.n.f.j` := v1 @kind object;
  #L339fc6.  call `n`(v5, v0) @signature `Lcom/bumptech/glide/load/n/f/n;.n:(Lcom/bumptech/glide/load/n/f/j;)V` @kind virtual;
  #L339fcc.  return @kind void;
  #L339fce.  v5.`com.bumptech.glide.load.n.f.n.g` @type ^`boolean` := v1 @kind boolean;
  #L339fd2.  v0:= v5.`com.bumptech.glide.load.n.f.n.a` @type ^`com.bumptech.glide.n.b` @kind object;
  #L339fd6.  call temp:= `d`(v0) @signature `Lcom/bumptech/glide/n/b;.d:()I` @kind interface;
  #L339fdc.  v0:= temp;
  #L339fde.  call temp:= `uptimeMillis`() @signature `Landroid/os/SystemClock;.uptimeMillis:()J` @kind static;
  #L339fe4.  v1:= temp @kind wide;
  #L339fe6.  v3:= (`long`) v0 @kind i2l;
  #L339fe8.  v1:= v1 + v3 @kind long;
  #L339fea.  v0:= v5.`com.bumptech.glide.load.n.f.n.a` @type ^`com.bumptech.glide.n.b` @kind object;
  #L339fee.  call `b`(v0) @signature `Lcom/bumptech/glide/n/b;.b:()V` @kind interface;
  #L339ff4.  v0:= new `com.bumptech.glide.load.n.f.j`;
  #L339ff8.  v3:= v5.`com.bumptech.glide.load.n.f.n.b` @type ^`android.os.Handler` @kind object;
  #L339ffc.  v4:= v5.`com.bumptech.glide.load.n.f.n.a` @type ^`com.bumptech.glide.n.b` @kind object;
  #L33a000.  call temp:= `h`(v4) @signature `Lcom/bumptech/glide/n/b;.h:()I` @kind interface;
  #L33a006.  v4:= temp;
  #L33a008.  call `<init>`(v0, v3, v4, v1) @signature `Lcom/bumptech/glide/load/n/f/j;.<init>:(Landroid/os/Handler;IJ)V` @kind direct;
  #L33a00e.  v5.`com.bumptech.glide.load.n.f.n.l` @type ^`com.bumptech.glide.load.n.f.j` := v0 @kind object;
  #L33a012.  v0:= v5.`com.bumptech.glide.load.n.f.n.i` @type ^`com.bumptech.glide.i` @kind object;
  #L33a016.  call temp:= `g`() @signature `Lcom/bumptech/glide/load/n/f/n;.g:()Lcom/bumptech/glide/load/c;` @kind static;
  #L33a01c.  v1:= temp @kind object;
  #L33a01e.  call temp:= `x0`(v1) @signature `Lcom/bumptech/glide/request/i;.x0:(Lcom/bumptech/glide/load/c;)Lcom/bumptech/glide/request/i;` @kind static;
  #L33a024.  v1:= temp @kind object;
  #L33a026.  call temp:= `v0`(v0, v1) @signature `Lcom/bumptech/glide/i;.v0:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/i;` @kind virtual;
  #L33a02c.  v0:= temp @kind object;
  #L33a02e.  v1:= v5.`com.bumptech.glide.load.n.f.n.a` @type ^`com.bumptech.glide.n.b` @kind object;
  #L33a032.  call temp:= `K0`(v0, v1) @signature `Lcom/bumptech/glide/i;.K0:(Ljava/lang/Object;)Lcom/bumptech/glide/i;` @kind virtual;
  #L33a038.  v0:= temp @kind object;
  #L33a03a.  v1:= v5.`com.bumptech.glide.load.n.f.n.l` @type ^`com.bumptech.glide.load.n.f.j` @kind object;
  #L33a03e.  call temp:= `C0`(v0, v1) @signature `Lcom/bumptech/glide/i;.C0:(Lcom/bumptech/glide/request/m/i;)Lcom/bumptech/glide/request/m/i;` @kind virtual;
  #L33a044.  return @kind void;
}
procedure `void` `o`(`com.bumptech.glide.load.n.f.n` v2 @kind this) @signature `Lcom/bumptech/glide/load/n/f/n;.o:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33a110.  v0:= v2.`com.bumptech.glide.load.n.f.n.m` @type ^`android.graphics.Bitmap` @kind object;
  #L33a114.  if v0 == 0 then goto L33a128;
  #L33a118.  v1:= v2.`com.bumptech.glide.load.n.f.n.e` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.g` @kind object;
  #L33a11c.  call `c`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/g;.c:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L33a122.  v0:= 0I;
  #L33a124.  v2.`com.bumptech.glide.load.n.f.n.m` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L33a128.  return @kind void;
}
procedure `void` `q`(`com.bumptech.glide.load.n.f.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/f/n;.q:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33a190.  v0:= v1.`com.bumptech.glide.load.n.f.n.f` @type ^`boolean` @kind boolean;
  #L33a194.  if v0 == 0 then goto L33a19a;
  #L33a198.  return @kind void;
  #L33a19a.  v0:= 1I;
  #L33a19c.  v1.`com.bumptech.glide.load.n.f.n.f` @type ^`boolean` := v0 @kind boolean;
  #L33a1a0.  v0:= 0I;
  #L33a1a2.  v1.`com.bumptech.glide.load.n.f.n.k` @type ^`boolean` := v0 @kind boolean;
  #L33a1a6.  call `m`(v1) @signature `Lcom/bumptech/glide/load/n/f/n;.m:()V` @kind direct;
  #L33a1ac.  return @kind void;
}
procedure `void` `r`(`com.bumptech.glide.load.n.f.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/f/n;.r:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33a1c0.  v0:= 0I;
  #L33a1c2.  v1.`com.bumptech.glide.load.n.f.n.f` @type ^`boolean` := v0 @kind boolean;
  #L33a1c6.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.n.f.n` v3 @kind this) @signature `Lcom/bumptech/glide/load/n/f/n;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L339ef8.  v0:= v3.`com.bumptech.glide.load.n.f.n.c` @type ^`java.util.List` @kind object;
  #L339efc.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L339f02.  call `o`(v3) @signature `Lcom/bumptech/glide/load/n/f/n;.o:()V` @kind direct;
  #L339f08.  call `r`(v3) @signature `Lcom/bumptech/glide/load/n/f/n;.r:()V` @kind direct;
  #L339f0e.  v0:= v3.`com.bumptech.glide.load.n.f.n.j` @type ^`com.bumptech.glide.load.n.f.j` @kind object;
  #L339f12.  v1:= 0I;
  #L339f14.  if v0 == 0 then goto L339f26;
  #L339f18.  v2:= v3.`com.bumptech.glide.load.n.f.n.d` @type ^`com.bumptech.glide.k` @kind object;
  #L339f1c.  call `o`(v2, v0) @signature `Lcom/bumptech/glide/k;.o:(Lcom/bumptech/glide/request/m/i;)V` @kind virtual;
  #L339f22.  v3.`com.bumptech.glide.load.n.f.n.j` @type ^`com.bumptech.glide.load.n.f.j` := v1 @kind object;
  #L339f26.  v0:= v3.`com.bumptech.glide.load.n.f.n.l` @type ^`com.bumptech.glide.load.n.f.j` @kind object;
  #L339f2a.  if v0 == 0 then goto L339f3c;
  #L339f2e.  v2:= v3.`com.bumptech.glide.load.n.f.n.d` @type ^`com.bumptech.glide.k` @kind object;
  #L339f32.  call `o`(v2, v0) @signature `Lcom/bumptech/glide/k;.o:(Lcom/bumptech/glide/request/m/i;)V` @kind virtual;
  #L339f38.  v3.`com.bumptech.glide.load.n.f.n.l` @type ^`com.bumptech.glide.load.n.f.j` := v1 @kind object;
  #L339f3c.  v0:= v3.`com.bumptech.glide.load.n.f.n.o` @type ^`com.bumptech.glide.load.n.f.j` @kind object;
  #L339f40.  if v0 == 0 then goto L339f52;
  #L339f44.  v2:= v3.`com.bumptech.glide.load.n.f.n.d` @type ^`com.bumptech.glide.k` @kind object;
  #L339f48.  call `o`(v2, v0) @signature `Lcom/bumptech/glide/k;.o:(Lcom/bumptech/glide/request/m/i;)V` @kind virtual;
  #L339f4e.  v3.`com.bumptech.glide.load.n.f.n.o` @type ^`com.bumptech.glide.load.n.f.j` := v1 @kind object;
  #L339f52.  v0:= v3.`com.bumptech.glide.load.n.f.n.a` @type ^`com.bumptech.glide.n.b` @kind object;
  #L339f56.  call `clear`(v0) @signature `Lcom/bumptech/glide/n/b;.clear:()V` @kind interface;
  #L339f5c.  v0:= 1I;
  #L339f5e.  v3.`com.bumptech.glide.load.n.f.n.k` @type ^`boolean` := v0 @kind boolean;
  #L339f62.  return @kind void;
}
procedure `java.nio.ByteBuffer` `b`(`com.bumptech.glide.load.n.f.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/f/n;.b:()Ljava/nio/ByteBuffer;` @AccessFlag  {
    temp;
    v0;

  #L339e1c.  v0:= v1.`com.bumptech.glide.load.n.f.n.a` @type ^`com.bumptech.glide.n.b` @kind object;
  #L339e20.  call temp:= `f`(v0) @signature `Lcom/bumptech/glide/n/b;.f:()Ljava/nio/ByteBuffer;` @kind interface;
  #L339e26.  v0:= temp @kind object;
  #L339e28.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L339e2e.  v0:= temp @kind object;
  #L339e30.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `c`(`com.bumptech.glide.load.n.f.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/f/n;.c:()Landroid/graphics/Bitmap;` @AccessFlag  {
    temp;
    v0;

  #L339c60.  v0:= v1.`com.bumptech.glide.load.n.f.n.j` @type ^`com.bumptech.glide.load.n.f.j` @kind object;
  #L339c64.  if v0 == 0 then goto L339c72;
  #L339c68.  call temp:= `j`(v0) @signature `Lcom/bumptech/glide/load/n/f/j;.j:()Landroid/graphics/Bitmap;` @kind virtual;
  #L339c6e.  v0:= temp @kind object;
  #L339c70.  goto L339c76;
  #L339c72.  v0:= v1.`com.bumptech.glide.load.n.f.n.m` @type ^`android.graphics.Bitmap` @kind object;
  #L339c76.  return v0 @kind object;
}
procedure `int` `d`(`com.bumptech.glide.load.n.f.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/f/n;.d:()I` @AccessFlag  {
    temp;
    v0;

  #L339d1c.  v0:= v1.`com.bumptech.glide.load.n.f.n.j` @type ^`com.bumptech.glide.load.n.f.j` @kind object;
  #L339d20.  if v0 == 0 then goto L339d2a;
  #L339d24.  v0:= v0.`com.bumptech.glide.load.n.f.j.f` @type ^`int`;
  #L339d28.  goto L339d2c;
  #L339d2a.  v0:= -1I;
  #L339d2c.  return v0;
}
procedure `android.graphics.Bitmap` `e`(`com.bumptech.glide.load.n.f.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/f/n;.e:()Landroid/graphics/Bitmap;` @AccessFlag  {
    temp;
    v0;

  #L339c88.  v0:= v1.`com.bumptech.glide.load.n.f.n.m` @type ^`android.graphics.Bitmap` @kind object;
  #L339c8c.  return v0 @kind object;
}
procedure `int` `f`(`com.bumptech.glide.load.n.f.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/f/n;.f:()I` @AccessFlag  {
    temp;
    v0;

  #L339d40.  v0:= v1.`com.bumptech.glide.load.n.f.n.a` @type ^`com.bumptech.glide.n.b` @kind object;
  #L339d44.  call temp:= `c`(v0) @signature `Lcom/bumptech/glide/n/b;.c:()I` @kind interface;
  #L339d4a.  v0:= temp;
  #L339d4c.  return v0;
}
procedure `int` `i`(`com.bumptech.glide.load.n.f.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/f/n;.i:()I` @AccessFlag  {
    temp;
    v0;

  #L339dac.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/load/n/f/n;.c:()Landroid/graphics/Bitmap;` @kind virtual;
  #L339db2.  v0:= temp @kind object;
  #L339db4.  call temp:= `getHeight`(v0) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L339dba.  v0:= temp;
  #L339dbc.  return v0;
}
procedure `int` `k`(`com.bumptech.glide.load.n.f.n` v2 @kind this) @signature `Lcom/bumptech/glide/load/n/f/n;.k:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L339dd0.  v0:= v2.`com.bumptech.glide.load.n.f.n.a` @type ^`com.bumptech.glide.n.b` @kind object;
  #L339dd4.  call temp:= `i`(v0) @signature `Lcom/bumptech/glide/n/b;.i:()I` @kind interface;
  #L339dda.  v0:= temp;
  #L339ddc.  call temp:= `h`(v2) @signature `Lcom/bumptech/glide/load/n/f/n;.h:()I` @kind direct;
  #L339de2.  v1:= temp;
  #L339de4.  v0:= v0 + v1 @kind int;
  #L339de6.  return v0;
}
procedure `int` `l`(`com.bumptech.glide.load.n.f.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/f/n;.l:()I` @AccessFlag  {
    temp;
    v0;

  #L339df8.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/load/n/f/n;.c:()Landroid/graphics/Bitmap;` @kind virtual;
  #L339dfe.  v0:= temp @kind object;
  #L339e00.  call temp:= `getWidth`(v0) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L339e06.  v0:= temp;
  #L339e08.  return v0;
}
procedure `void` `n`(`com.bumptech.glide.load.n.f.n` v3 @kind this, `com.bumptech.glide.load.n.f.j` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/f/n;.n:(Lcom/bumptech/glide/load/n/f/j;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L33a058.  v0:= v3.`com.bumptech.glide.load.n.f.n.p` @type ^`com.bumptech.glide.load.n.f.m` @kind object;
  #L33a05c.  if v0 == 0 then goto L33a066;
  #L33a060.  call `a`(v0) @signature `Lcom/bumptech/glide/load/n/f/m;.a:()V` @kind interface;
  #L33a066.  v0:= 0I;
  #L33a068.  v3.`com.bumptech.glide.load.n.f.n.g` @type ^`boolean` := v0 @kind boolean;
  #L33a06c.  v0:= v3.`com.bumptech.glide.load.n.f.n.k` @type ^`boolean` @kind boolean;
  #L33a070.  v1:= 2I;
  #L33a072.  if v0 == 0 then goto L33a08a;
  #L33a076.  v0:= v3.`com.bumptech.glide.load.n.f.n.b` @type ^`android.os.Handler` @kind object;
  #L33a07a.  call temp:= `obtainMessage`(v0, v1, v4) @signature `Landroid/os/Handler;.obtainMessage:(ILjava/lang/Object;)Landroid/os/Message;` @kind virtual;
  #L33a080.  v4:= temp @kind object;
  #L33a082.  call `sendToTarget`(v4) @signature `Landroid/os/Message;.sendToTarget:()V` @kind virtual;
  #L33a088.  return @kind void;
  #L33a08a.  v0:= v3.`com.bumptech.glide.load.n.f.n.f` @type ^`boolean` @kind boolean;
  #L33a08e.  if v0 != 0 then goto L33a098;
  #L33a092.  v3.`com.bumptech.glide.load.n.f.n.o` @type ^`com.bumptech.glide.load.n.f.j` := v4 @kind object;
  #L33a096.  return @kind void;
  #L33a098.  call temp:= `j`(v4) @signature `Lcom/bumptech/glide/load/n/f/j;.j:()Landroid/graphics/Bitmap;` @kind virtual;
  #L33a09e.  v0:= temp @kind object;
  #L33a0a0.  if v0 == 0 then goto L33a0f8;
  #L33a0a4.  call `o`(v3) @signature `Lcom/bumptech/glide/load/n/f/n;.o:()V` @kind direct;
  #L33a0aa.  v0:= v3.`com.bumptech.glide.load.n.f.n.j` @type ^`com.bumptech.glide.load.n.f.j` @kind object;
  #L33a0ae.  v3.`com.bumptech.glide.load.n.f.n.j` @type ^`com.bumptech.glide.load.n.f.j` := v4 @kind object;
  #L33a0b2.  v4:= v3.`com.bumptech.glide.load.n.f.n.c` @type ^`java.util.List` @kind object;
  #L33a0b6.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L33a0bc.  v4:= temp;
  #L33a0be.  v4:= v4 + -1;
  #L33a0c2.  if v4 < 0 then goto L33a0e2;
  #L33a0c6.  v2:= v3.`com.bumptech.glide.load.n.f.n.c` @type ^`java.util.List` @kind object;
  #L33a0ca.  call temp:= `get`(v2, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33a0d0.  v2:= temp @kind object;
  #L33a0d2.  v2:= (`com.bumptech.glide.load.n.f.k`) v2 @kind object;
  #L33a0d6.  call `a`(v2) @signature `Lcom/bumptech/glide/load/n/f/k;.a:()V` @kind interface;
  #L33a0dc.  v4:= v4 + -1;
  #L33a0e0.  goto L33a0c2;
  #L33a0e2.  if v0 == 0 then goto L33a0f8;
  #L33a0e6.  v4:= v3.`com.bumptech.glide.load.n.f.n.b` @type ^`android.os.Handler` @kind object;
  #L33a0ea.  call temp:= `obtainMessage`(v4, v1, v0) @signature `Landroid/os/Handler;.obtainMessage:(ILjava/lang/Object;)Landroid/os/Message;` @kind virtual;
  #L33a0f0.  v4:= temp @kind object;
  #L33a0f2.  call `sendToTarget`(v4) @signature `Landroid/os/Message;.sendToTarget:()V` @kind virtual;
  #L33a0f8.  call `m`(v3) @signature `Lcom/bumptech/glide/load/n/f/n;.m:()V` @kind direct;
  #L33a0fe.  return @kind void;
}
procedure `void` `p`(`com.bumptech.glide.load.n.f.n` v1 @kind this, `com.bumptech.glide.load.k` v2 @kind object, `android.graphics.Bitmap` v3 @kind object) @signature `Lcom/bumptech/glide/load/n/f/n;.p:(Lcom/bumptech/glide/load/k;Landroid/graphics/Bitmap;)V` @AccessFlag  {
    temp;
    v0;

  #L33a13c.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33a142.  v0:= temp @kind object;
  #L33a144.  v0:= (`com.bumptech.glide.load.k`) v0 @kind object;
  #L33a148.  v1.`com.bumptech.glide.load.n.f.n.n` @type ^`com.bumptech.glide.load.k` := v0 @kind object;
  #L33a14c.  call temp:= `d`(v3) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33a152.  v3:= temp @kind object;
  #L33a154.  v3:= (`android.graphics.Bitmap`) v3 @kind object;
  #L33a158.  v1.`com.bumptech.glide.load.n.f.n.m` @type ^`android.graphics.Bitmap` := v3 @kind object;
  #L33a15c.  v3:= v1.`com.bumptech.glide.load.n.f.n.i` @type ^`com.bumptech.glide.i` @kind object;
  #L33a160.  v0:= new `com.bumptech.glide.request.i`;
  #L33a164.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/i;.<init>:()V` @kind direct;
  #L33a16a.  call temp:= `n0`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.n0:(Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33a170.  v2:= temp @kind object;
  #L33a172.  call temp:= `v0`(v3, v2) @signature `Lcom/bumptech/glide/i;.v0:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/i;` @kind virtual;
  #L33a178.  v2:= temp @kind object;
  #L33a17a.  v1.`com.bumptech.glide.load.n.f.n.i` @type ^`com.bumptech.glide.i` := v2 @kind object;
  #L33a17e.  return @kind void;
}
procedure `void` `s`(`com.bumptech.glide.load.n.f.n` v2 @kind this, `com.bumptech.glide.load.n.f.k` v3 @kind object) @signature `Lcom/bumptech/glide/load/n/f/n;.s:(Lcom/bumptech/glide/load/n/f/k;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L33a1d8.  v0:= v2.`com.bumptech.glide.load.n.f.n.k` @type ^`boolean` @kind boolean;
  #L33a1dc.  if v0 != 0 then goto L33a222;
  #L33a1e0.  v0:= v2.`com.bumptech.glide.load.n.f.n.c` @type ^`java.util.List` @kind object;
  #L33a1e4.  call temp:= `contains`(v0, v3) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L33a1ea.  v0:= temp;
  #L33a1ec.  if v0 != 0 then goto L33a212;
  #L33a1f0.  v0:= v2.`com.bumptech.glide.load.n.f.n.c` @type ^`java.util.List` @kind object;
  #L33a1f4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L33a1fa.  v0:= temp;
  #L33a1fc.  v1:= v2.`com.bumptech.glide.load.n.f.n.c` @type ^`java.util.List` @kind object;
  #L33a200.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L33a206.  if v0 == 0 then goto L33a210;
  #L33a20a.  call `q`(v2) @signature `Lcom/bumptech/glide/load/n/f/n;.q:()V` @kind direct;
  #L33a210.  return @kind void;
  #L33a212.  v3:= new `java.lang.IllegalStateException`;
  #L33a216.  v0:= "Cannot subscribe twice in a row" @kind object;
  #L33a21a.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33a220.  throw v3;
  #L33a222.  v3:= new `java.lang.IllegalStateException`;
  #L33a226.  v0:= "Cannot subscribe to a cleared frame loader" @kind object;
  #L33a22a.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33a230.  throw v3;
}
procedure `void` `t`(`com.bumptech.glide.load.n.f.n` v1 @kind this, `com.bumptech.glide.load.n.f.k` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/f/n;.t:(Lcom/bumptech/glide/load/n/f/k;)V` @AccessFlag  {
    temp;
    v0;

  #L33a244.  v0:= v1.`com.bumptech.glide.load.n.f.n.c` @type ^`java.util.List` @kind object;
  #L33a248.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L33a24e.  v2:= v1.`com.bumptech.glide.load.n.f.n.c` @type ^`java.util.List` @kind object;
  #L33a252.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L33a258.  v2:= temp;
  #L33a25a.  if v2 == 0 then goto L33a264;
  #L33a25e.  call `r`(v1) @signature `Lcom/bumptech/glide/load/n/f/n;.r:()V` @kind direct;
  #L33a264.  return @kind void;
}
