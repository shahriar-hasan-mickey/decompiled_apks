record `com.bumptech.glide.load.n.d.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.bumptech.glide.load.engine.u0` @kind interface, `com.bumptech.glide.load.engine.p0` @kind interface {
  `android.graphics.drawable.Drawable` `com.bumptech.glide.load.n.d.b.b` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.d.b` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/d/b;.<init>:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L338798.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33879e.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3387a4.  v1:= temp @kind object;
  #L3387a6.  v1:= (`android.graphics.drawable.Drawable`) v1 @kind object;
  #L3387aa.  v0.`com.bumptech.glide.load.n.d.b.b` @type ^`android.graphics.drawable.Drawable` := v1 @kind object;
  #L3387ae.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.n.d.b` v2 @kind this) @signature `Lcom/bumptech/glide/load/n/d/b;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3387c0.  v0:= v2.`com.bumptech.glide.load.n.d.b.b` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3387c4.  v1:= instanceof @variable v0 @type ^`android.graphics.drawable.BitmapDrawable` @kind boolean;
  #L3387c8.  if v1 == 0 then goto L3387e0;
  #L3387cc.  v0:= (`android.graphics.drawable.BitmapDrawable`) v0 @kind object;
  #L3387d0.  call temp:= `getBitmap`(v0) @signature `Landroid/graphics/drawable/BitmapDrawable;.getBitmap:()Landroid/graphics/Bitmap;` @kind virtual;
  #L3387d6.  v0:= temp @kind object;
  #L3387d8.  call `prepareToDraw`(v0) @signature `Landroid/graphics/Bitmap;.prepareToDraw:()V` @kind virtual;
  #L3387de.  goto L3387fa;
  #L3387e0.  v1:= instanceof @variable v0 @type ^`com.bumptech.glide.load.n.f.f` @kind boolean;
  #L3387e4.  if v1 == 0 then goto L3387fa;
  #L3387e8.  v0:= (`com.bumptech.glide.load.n.f.f`) v0 @kind object;
  #L3387ec.  call temp:= `e`(v0) @signature `Lcom/bumptech/glide/load/n/f/f;.e:()Landroid/graphics/Bitmap;` @kind virtual;
  #L3387f2.  v0:= temp @kind object;
  #L3387f4.  call `prepareToDraw`(v0) @signature `Landroid/graphics/Bitmap;.prepareToDraw:()V` @kind virtual;
  #L3387fa.  return @kind void;
}
procedure `android.graphics.drawable.Drawable` `b`(`com.bumptech.glide.load.n.d.b` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/d/b;.b:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33874c.  v0:= v1.`com.bumptech.glide.load.n.d.b.b` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L338750.  call temp:= `getConstantState`(v0) @signature `Landroid/graphics/drawable/Drawable;.getConstantState:()Landroid/graphics/drawable/Drawable$ConstantState;` @kind virtual;
  #L338756.  v0:= temp @kind object;
  #L338758.  if v0 != 0 then goto L338762;
  #L33875c.  v0:= v1.`com.bumptech.glide.load.n.d.b.b` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L338760.  return v0 @kind object;
  #L338762.  call temp:= `newDrawable`(v0) @signature `Landroid/graphics/drawable/Drawable$ConstantState;.newDrawable:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L338768.  v0:= temp @kind object;
  #L33876a.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.n.d.b` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/d/b;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L33877c.  call temp:= `b`(v1) @signature `Lcom/bumptech/glide/load/n/d/b;.b:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L338782.  v0:= temp @kind object;
  #L338784.  return v0 @kind object;
}
