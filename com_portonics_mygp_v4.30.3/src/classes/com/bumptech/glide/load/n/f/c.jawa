record `com.bumptech.glide.load.n.f.c` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.i` @kind interface {
  `android.content.Context` `com.bumptech.glide.load.n.f.c.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.n.f.c.d` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.n.f.b` `com.bumptech.glide.load.n.f.c.e` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.n.f.a` `com.bumptech.glide.load.n.f.c.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.n.f.d` `com.bumptech.glide.load.n.f.c.g` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.n.f.a` `@@com.bumptech.glide.load.n.f.c.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.bumptech.glide.load.n.f.b` `@@com.bumptech.glide.load.n.f.c.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/n/f/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3391b4.  v0:= new `com.bumptech.glide.load.n.f.a`;
  #L3391b8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/n/f/a;.<init>:()V` @kind direct;
  #L3391be.  `@@com.bumptech.glide.load.n.f.c.a` @type ^`com.bumptech.glide.load.n.f.a` := v0 @kind object;
  #L3391c2.  v0:= new `com.bumptech.glide.load.n.f.b`;
  #L3391c6.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/n/f/b;.<init>:()V` @kind direct;
  #L3391cc.  `@@com.bumptech.glide.load.n.f.c.b` @type ^`com.bumptech.glide.load.n.f.b` := v0 @kind object;
  #L3391d0.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.f.c` v7 @kind this, `android.content.Context` v8 @kind object, `java.util.List` v9 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.g` v10 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.b` v11 @kind object) @signature `Lcom/bumptech/glide/load/n/f/c;.<init>:(Landroid/content/Context;Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/g;Lcom/bumptech/glide/load/engine/bitmap_recycle/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3391e4.  v5:= `@@com.bumptech.glide.load.n.f.c.b` @type ^`com.bumptech.glide.load.n.f.b` @kind object;
  #L3391e8.  v6:= `@@com.bumptech.glide.load.n.f.c.a` @type ^`com.bumptech.glide.load.n.f.a` @kind object;
  #L3391ec.  v0:= v7 @kind object;
  #L3391ee.  v1:= v8 @kind object;
  #L3391f0.  v2:= v9 @kind object;
  #L3391f2.  v3:= v10 @kind object;
  #L3391f4.  v4:= v11 @kind object;
  #L3391f6.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/n/f/c;.<init>:(Landroid/content/Context;Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/g;Lcom/bumptech/glide/load/engine/bitmap_recycle/b;Lcom/bumptech/glide/load/n/f/b;Lcom/bumptech/glide/load/n/f/a;)V` @kind direct;
  #L3391fc.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.f.c` v0 @kind this, `android.content.Context` v1 @kind object, `java.util.List` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.g` v3 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.b` v4 @kind object, `com.bumptech.glide.load.n.f.b` v5 @kind object, `com.bumptech.glide.load.n.f.a` v6 @kind object) @signature `Lcom/bumptech/glide/load/n/f/c;.<init>:(Landroid/content/Context;Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/g;Lcom/bumptech/glide/load/engine/bitmap_recycle/b;Lcom/bumptech/glide/load/n/f/b;Lcom/bumptech/glide/load/n/f/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L339210.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L339216.  call temp:= `getApplicationContext`(v1) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L33921c.  v1:= temp @kind object;
  #L33921e.  v0.`com.bumptech.glide.load.n.f.c.c` @type ^`android.content.Context` := v1 @kind object;
  #L339222.  v0.`com.bumptech.glide.load.n.f.c.d` @type ^`java.util.List` := v2 @kind object;
  #L339226.  v0.`com.bumptech.glide.load.n.f.c.f` @type ^`com.bumptech.glide.load.n.f.a` := v6 @kind object;
  #L33922a.  v1:= new `com.bumptech.glide.load.n.f.d`;
  #L33922e.  call `<init>`(v1, v3, v4) @signature `Lcom/bumptech/glide/load/n/f/d;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/g;Lcom/bumptech/glide/load/engine/bitmap_recycle/b;)V` @kind direct;
  #L339234.  v0.`com.bumptech.glide.load.n.f.c.g` @type ^`com.bumptech.glide.load.n.f.d` := v1 @kind object;
  #L339238.  v0.`com.bumptech.glide.load.n.f.c.e` @type ^`com.bumptech.glide.load.n.f.b` := v5 @kind object;
  #L33923c.  return @kind void;
}
procedure `com.bumptech.glide.load.n.f.h` `c`(`com.bumptech.glide.load.n.f.c` v16 @kind this, `java.nio.ByteBuffer` v17 @kind object, `int` v18 , `int` v19 , `com.bumptech.glide.n.e` v20 @kind object, `com.bumptech.glide.load.h` v21 @kind object) @signature `Lcom/bumptech/glide/load/n/f/c;.c:(Ljava/nio/ByteBuffer;IILcom/bumptech/glide/n/e;Lcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/f/h;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L338ed4.  v1:= v16 @kind object;
  #L338ed8.  v2:= "Decoded GIF from stream in " @kind object;
  #L338edc.  v3:= "BufferGifDecoder" @kind object;
  #L338ee0.  call temp:= `b`() @signature `Lcom/bumptech/glide/s/j;.b:()J` @kind static;
  #L338ee6.  v4:= temp @kind wide;
  #L338ee8.  v6:= 2I;
  #L338eea.  call temp:= `c`(v20) @signature `Lcom/bumptech/glide/n/e;.c:()Lcom/bumptech/glide/n/d;` @kind virtual;
  #L338ef0.  v0:= temp @kind object;
  #L338ef2.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/n/d;.b:()I` @kind virtual;
  #L338ef8.  v7:= temp;
  #L338efa.  v8:= 0I;
  #L338efc.  if v7 <= 0 then goto L338ffc;
  #L338f00.  call temp:= `c`(v0) @signature `Lcom/bumptech/glide/n/d;.c:()I` @kind virtual;
  #L338f06.  v7:= temp;
  #L338f08.  if v7 == 0 then goto L338f10;
  #L338f0c.  goto L338ffc;
  #L338f10.  v7:= `@@com.bumptech.glide.load.n.f.p.a` @type ^`com.bumptech.glide.load.g` @kind object;
  #L338f14.  v9:= v21 @kind object;
  #L338f18.  call temp:= `c`(v9, v7) @signature `Lcom/bumptech/glide/load/h;.c:(Lcom/bumptech/glide/load/g;)Ljava/lang/Object;` @kind virtual;
  #L338f1e.  v7:= temp @kind object;
  #L338f20.  v9:= `@@com.bumptech.glide.load.DecodeFormat.PREFER_RGB_565` @type ^`com.bumptech.glide.load.DecodeFormat` @kind object;
  #L338f24.  if v7 != v9 then goto L338f2e;
  #L338f28.  v7:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L338f2c.  goto L338f32;
  #L338f2e.  v7:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L338f32.  v13:= v18;
  #L338f36.  v14:= v19;
  #L338f3a.  call temp:= `e`(v0, v13, v14) @signature `Lcom/bumptech/glide/load/n/f/c;.e:(Lcom/bumptech/glide/n/d;II)I` @kind static;
  #L338f40.  v9:= temp;
  #L338f42.  v10:= v1.`com.bumptech.glide.load.n.f.c.f` @type ^`com.bumptech.glide.load.n.f.a` @kind object;
  #L338f46.  v11:= v1.`com.bumptech.glide.load.n.f.c.g` @type ^`com.bumptech.glide.load.n.f.d` @kind object;
  #L338f4a.  v12:= v17 @kind object;
  #L338f4e.  call temp:= `a`(v10, v11, v0, v12, v9) @signature `Lcom/bumptech/glide/load/n/f/a;.a:(Lcom/bumptech/glide/n/a;Lcom/bumptech/glide/n/d;Ljava/nio/ByteBuffer;I)Lcom/bumptech/glide/n/b;` @kind virtual;
  #L338f54.  v11:= temp @kind object;
  #L338f56.  call `e`(v11, v7) @signature `Lcom/bumptech/glide/n/b;.e:(Landroid/graphics/Bitmap$Config;)V` @kind interface;
  #L338f5c.  call `b`(v11) @signature `Lcom/bumptech/glide/n/b;.b:()V` @kind interface;
  #L338f62.  call temp:= `a`(v11) @signature `Lcom/bumptech/glide/n/b;.a:()Landroid/graphics/Bitmap;` @kind interface;
  #L338f68.  v15:= temp @kind object;
  #L338f6a.  if v15 != 0 then goto L338fa0;
  #L338f6e.  call temp:= `isLoggable`(v3, v6) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L338f74.  v0:= temp;
  #L338f76.  if v0 == 0 then goto L338f9e;
  #L338f7a.  v0:= new `java.lang.StringBuilder`;
  #L338f7e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L338f84.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L338f8a.  call temp:= `a`(v4) @signature `Lcom/bumptech/glide/s/j;.a:(J)D` @kind static;
  #L338f90.  v2:= temp @kind wide;
  #L338f92.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L338f98.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L338f9e.  return v8 @kind object;
  #L338fa0.  call temp:= `c`() @signature `Lcom/bumptech/glide/load/n/b;.c:()Lcom/bumptech/glide/load/n/b;` @kind static;
  #L338fa6.  v12:= temp @kind object;
  #L338fa8.  v0:= new `com.bumptech.glide.load.n.f.f`;
  #L338fac.  v10:= v1.`com.bumptech.glide.load.n.f.c.c` @type ^`android.content.Context` @kind object;
  #L338fb0.  v9:= v0 @kind object;
  #L338fb2.  v13:= v18;
  #L338fb6.  v14:= v19;
  #L338fba.  call `<init>`(v9, v10, v11, v12, v13, v14, v15) @signature `Lcom/bumptech/glide/load/n/f/f;.<init>:(Landroid/content/Context;Lcom/bumptech/glide/n/b;Lcom/bumptech/glide/load/k;IILandroid/graphics/Bitmap;)V` @kind direct;
  #L338fc0.  v7:= new `com.bumptech.glide.load.n.f.h`;
  #L338fc4.  call `<init>`(v7, v0) @signature `Lcom/bumptech/glide/load/n/f/h;.<init>:(Lcom/bumptech/glide/load/n/f/f;)V` @kind direct;
  #L338fca.  call temp:= `isLoggable`(v3, v6) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L338fd0.  v0:= temp;
  #L338fd2.  if v0 == 0 then goto L338ffa;
  #L338fd6.  v0:= new `java.lang.StringBuilder`;
  #L338fda.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L338fe0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L338fe6.  call temp:= `a`(v4) @signature `Lcom/bumptech/glide/s/j;.a:(J)D` @kind static;
  #L338fec.  v2:= temp @kind wide;
  #L338fee.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L338ff4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L338ffa.  return v7 @kind object;
  #L338ffc.  call temp:= `isLoggable`(v3, v6) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L339002.  v0:= temp;
  #L339004.  if v0 == 0 then goto L33902c;
  #L339008.  v0:= new `java.lang.StringBuilder`;
  #L33900c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L339012.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L339018.  call temp:= `a`(v4) @signature `Lcom/bumptech/glide/s/j;.a:(J)D` @kind static;
  #L33901e.  v2:= temp @kind wide;
  #L339020.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L339026.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33902c.  return v8 @kind object;
  #L33902e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L339030.  call temp:= `isLoggable`(v3, v6) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L339036.  v3:= temp;
  #L339038.  if v3 == 0 then goto L339060;
  #L33903c.  v3:= new `java.lang.StringBuilder`;
  #L339040.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L339046.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33904c.  call temp:= `a`(v4) @signature `Lcom/bumptech/glide/s/j;.a:(J)D` @kind static;
  #L339052.  v4:= temp @kind wide;
  #L339054.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L33905a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L339060.  throw v0;
  catch `java.lang.Throwable` @[L338eea..L338f6a] goto L33902e;
  catch `java.lang.Throwable` @[L338fa0..L338fca] goto L33902e;
}
procedure `int` `e`(`com.bumptech.glide.n.d` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/bumptech/glide/load/n/f/c;.e:(Lcom/bumptech/glide/n/d;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3390e0.  call temp:= `a`(v4) @signature `Lcom/bumptech/glide/n/d;.a:()I` @kind virtual;
  #L3390e6.  v0:= temp;
  #L3390e8.  v0:= v0 / v6 @kind int;
  #L3390ea.  call temp:= `d`(v4) @signature `Lcom/bumptech/glide/n/d;.d:()I` @kind virtual;
  #L3390f0.  v1:= temp;
  #L3390f2.  v1:= v1 / v5 @kind int;
  #L3390f4.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3390fa.  v0:= temp;
  #L3390fc.  if v0 != 0 then goto L339104;
  #L339100.  v0:= 0I;
  #L339102.  goto L33910c;
  #L339104.  call temp:= `highestOneBit`(v0) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L33910a.  v0:= temp;
  #L33910c.  v1:= 1I;
  #L33910e.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L339114.  v0:= temp;
  #L339116.  v2:= 2I;
  #L339118.  v3:= "BufferGifDecoder" @kind object;
  #L33911c.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L339122.  v2:= temp;
  #L339124.  if v2 == 0 then goto L3391a2;
  #L339128.  if v0 <= v1 then goto L3391a2;
  #L33912c.  v1:= new `java.lang.StringBuilder`;
  #L339130.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L339136.  v2:= "Downsampling GIF, sampleSize: " @kind object;
  #L33913a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L339140.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L339146.  v2:= ", target dimens: [" @kind object;
  #L33914a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L339150.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L339156.  v5:= "x" @kind object;
  #L33915a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L339160.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L339166.  v6:= "], actual dimens: [" @kind object;
  #L33916a.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L339170.  call temp:= `d`(v4) @signature `Lcom/bumptech/glide/n/d;.d:()I` @kind virtual;
  #L339176.  v6:= temp;
  #L339178.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33917e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L339184.  call temp:= `a`(v4) @signature `Lcom/bumptech/glide/n/d;.a:()I` @kind virtual;
  #L33918a.  v4:= temp;
  #L33918c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L339192.  v4:= "]" @kind object;
  #L339196.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33919c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3391a2.  return v0;
}
procedure `boolean` `a`(`com.bumptech.glide.load.n.f.c` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/f/c;.a:(Ljava/lang/Object;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L338e4c.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L338e50.  call temp:= `f`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/n/f/c;.f:(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L338e56.  v1:= temp;
  #L338e58.  return v1;
}
procedure `com.bumptech.glide.load.engine.u0` `b`(`com.bumptech.glide.load.n.f.c` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/f/c;.b:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L338eb4.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L338eb8.  call temp:= `d`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/n/f/c;.d:(Ljava/nio/ByteBuffer;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/f/h;` @kind virtual;
  #L338ebe.  v1:= temp @kind object;
  #L338ec0.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.n.f.h` `d`(`com.bumptech.glide.load.n.f.c` v7 @kind this, `java.nio.ByteBuffer` v8 @kind object, `int` v9 , `int` v10 , `com.bumptech.glide.load.h` v11 @kind object) @signature `Lcom/bumptech/glide/load/n/f/c;.d:(Ljava/nio/ByteBuffer;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/f/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L339088.  v0:= v7.`com.bumptech.glide.load.n.f.c.e` @type ^`com.bumptech.glide.load.n.f.b` @kind object;
  #L33908c.  call temp:= `a`(v0, v8) @signature `Lcom/bumptech/glide/load/n/f/b;.a:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/n/e;` @kind virtual;
  #L339092.  v0:= temp @kind object;
  #L339094.  v1:= v7 @kind object;
  #L339096.  v2:= v8 @kind object;
  #L339098.  v3:= v9;
  #L33909a.  v4:= v10;
  #L33909c.  v5:= v0 @kind object;
  #L33909e.  v6:= v11 @kind object;
  #L3390a0.  call temp:= `c`(v1, v2, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/n/f/c;.c:(Ljava/nio/ByteBuffer;IILcom/bumptech/glide/n/e;Lcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/f/h;` @kind direct;
  #L3390a6.  v8:= temp @kind object;
  #L3390a8.  v9:= v7.`com.bumptech.glide.load.n.f.c.e` @type ^`com.bumptech.glide.load.n.f.b` @kind object;
  #L3390ac.  call `b`(v9, v0) @signature `Lcom/bumptech/glide/load/n/f/b;.b:(Lcom/bumptech/glide/n/e;)V` @kind virtual;
  #L3390b2.  return v8 @kind object;
  #L3390b4.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3390b6.  v9:= v7.`com.bumptech.glide.load.n.f.c.e` @type ^`com.bumptech.glide.load.n.f.b` @kind object;
  #L3390ba.  call `b`(v9, v0) @signature `Lcom/bumptech/glide/load/n/f/b;.b:(Lcom/bumptech/glide/n/e;)V` @kind virtual;
  #L3390c0.  throw v8;
  catch `java.lang.Throwable` @[L3390a0..L3390a8] goto L3390b4;
}
procedure `boolean` `f`(`com.bumptech.glide.load.n.f.c` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/n/f/c;.f:(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338e6c.  v0:= `@@com.bumptech.glide.load.n.f.p.b` @type ^`com.bumptech.glide.load.g` @kind object;
  #L338e70.  call temp:= `c`(v3, v0) @signature `Lcom/bumptech/glide/load/h;.c:(Lcom/bumptech/glide/load/g;)Ljava/lang/Object;` @kind virtual;
  #L338e76.  v3:= temp @kind object;
  #L338e78.  v3:= (`java.lang.Boolean`) v3 @kind object;
  #L338e7c.  call temp:= `booleanValue`(v3) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L338e82.  v3:= temp;
  #L338e84.  if v3 != 0 then goto L338ea0;
  #L338e88.  v3:= v1.`com.bumptech.glide.load.n.f.c.d` @type ^`java.util.List` @kind object;
  #L338e8c.  call temp:= `c`(v3, v2) @signature `Lcom/bumptech/glide/load/b;.c:(Ljava/util/List;Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind static;
  #L338e92.  v2:= temp @kind object;
  #L338e94.  v3:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.GIF` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L338e98.  if v2 != v3 then goto L338ea0;
  #L338e9c.  v2:= 1I;
  #L338e9e.  goto L338ea2;
  #L338ea0.  v2:= 0I;
  #L338ea2.  return v2;
}
