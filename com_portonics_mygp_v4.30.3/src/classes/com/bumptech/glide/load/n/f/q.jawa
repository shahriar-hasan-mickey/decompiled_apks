record `com.bumptech.glide.load.n.f.q` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.i` @kind interface {
  `java.util.List` `com.bumptech.glide.load.n.f.q.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.i` `com.bumptech.glide.load.n.f.q.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.b` `com.bumptech.glide.load.n.f.q.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.f.q` v0 @kind this, `java.util.List` v1 @kind object, `com.bumptech.glide.load.i` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.b` v3 @kind object) @signature `Lcom/bumptech/glide/load/n/f/q;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/i;Lcom/bumptech/glide/load/engine/bitmap_recycle/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L33a480.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33a486.  v0.`com.bumptech.glide.load.n.f.q.a` @type ^`java.util.List` := v1 @kind object;
  #L33a48a.  v0.`com.bumptech.glide.load.n.f.q.b` @type ^`com.bumptech.glide.load.i` := v2 @kind object;
  #L33a48e.  v0.`com.bumptech.glide.load.n.f.q.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.b` := v3 @kind object;
  #L33a492.  return @kind void;
}
procedure `byte`[] `e`(`java.io.InputStream` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/f/q;.e:(Ljava/io/InputStream;)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33a3b8.  v0:= new `java.io.ByteArrayOutputStream`;
  #L33a3bc.  v1:= 16384I;
  #L33a3c0.  call `<init>`(v0, v1) @signature `Ljava/io/ByteArrayOutputStream;.<init>:(I)V` @kind direct;
  #L33a3c6.  v1:= new `byte`[v1];
  #L33a3ca.  call temp:= `read`(v4, v1) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L33a3d0.  v2:= temp;
  #L33a3d2.  v3:= -1I;
  #L33a3d4.  if v2 == v3 then goto L33a3e2;
  #L33a3d8.  v3:= 0I;
  #L33a3da.  call `write`(v0, v1, v3, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:([BII)V` @kind virtual;
  #L33a3e0.  goto L33a3ca;
  #L33a3e2.  call `flush`(v0) @signature `Ljava/io/ByteArrayOutputStream;.flush:()V` @kind virtual;
  #L33a3e8.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L33a3ee.  v4:= temp @kind object;
  #L33a3f0.  return v4 @kind object;
  #L33a3f2.  
  #L33a3f4.  v4:= 5I;
  #L33a3f6.  v0:= "StreamGifDecoder" @kind object;
  #L33a3fa.  call temp:= `isLoggable`(v0, v4) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L33a400.  v4:= temp;
  #L33a402.  v4:= 0I;
  #L33a404.  return v4 @kind object;
  catch `java.io.IOException` @[L33a3c6..L33a3e8] goto L33a3f2;
}
procedure `boolean` `a`(`com.bumptech.glide.load.n.f.q` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/f/q;.a:(Ljava/lang/Object;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L33a398.  v1:= (`java.io.InputStream`) v1 @kind object;
  #L33a39c.  call temp:= `d`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/n/f/q;.d:(Ljava/io/InputStream;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L33a3a2.  v1:= temp;
  #L33a3a4.  return v1;
}
procedure `com.bumptech.glide.load.engine.u0` `b`(`com.bumptech.glide.load.n.f.q` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/f/q;.b:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L33a460.  v1:= (`java.io.InputStream`) v1 @kind object;
  #L33a464.  call temp:= `c`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/n/f/q;.c:(Ljava/io/InputStream;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @kind virtual;
  #L33a46a.  v1:= temp @kind object;
  #L33a46c.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.u0` `c`(`com.bumptech.glide.load.n.f.q` v1 @kind this, `java.io.InputStream` v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.h` v5 @kind object) @signature `Lcom/bumptech/glide/load/n/f/q;.c:(Ljava/io/InputStream;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33a428.  call temp:= `e`(v2) @signature `Lcom/bumptech/glide/load/n/f/q;.e:(Ljava/io/InputStream;)[B` @kind static;
  #L33a42e.  v2:= temp @kind object;
  #L33a430.  if v2 != 0 then goto L33a438;
  #L33a434.  v2:= 0I;
  #L33a436.  return v2 @kind object;
  #L33a438.  call temp:= `wrap`(v2) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L33a43e.  v2:= temp @kind object;
  #L33a440.  v0:= v1.`com.bumptech.glide.load.n.f.q.b` @type ^`com.bumptech.glide.load.i` @kind object;
  #L33a444.  call temp:= `b`(v0, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/i;.b:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u0;` @kind interface;
  #L33a44a.  v2:= temp @kind object;
  #L33a44c.  return v2 @kind object;
}
procedure `boolean` `d`(`com.bumptech.glide.load.n.f.q` v1 @kind this, `java.io.InputStream` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/n/f/q;.d:(Ljava/io/InputStream;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33a34c.  v0:= `@@com.bumptech.glide.load.n.f.p.b` @type ^`com.bumptech.glide.load.g` @kind object;
  #L33a350.  call temp:= `c`(v3, v0) @signature `Lcom/bumptech/glide/load/h;.c:(Lcom/bumptech/glide/load/g;)Ljava/lang/Object;` @kind virtual;
  #L33a356.  v3:= temp @kind object;
  #L33a358.  v3:= (`java.lang.Boolean`) v3 @kind object;
  #L33a35c.  call temp:= `booleanValue`(v3) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L33a362.  v3:= temp;
  #L33a364.  if v3 != 0 then goto L33a384;
  #L33a368.  v3:= v1.`com.bumptech.glide.load.n.f.q.a` @type ^`java.util.List` @kind object;
  #L33a36c.  v0:= v1.`com.bumptech.glide.load.n.f.q.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.b` @kind object;
  #L33a370.  call temp:= `b`(v3, v2, v0) @signature `Lcom/bumptech/glide/load/b;.b:(Ljava/util/List;Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/b;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind static;
  #L33a376.  v2:= temp @kind object;
  #L33a378.  v3:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.GIF` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L33a37c.  if v2 != v3 then goto L33a384;
  #L33a380.  v2:= 1I;
  #L33a382.  goto L33a386;
  #L33a384.  v2:= 0I;
  #L33a386.  return v2;
}
