record `com.bumptech.glide.load.n.c.a` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.l.f` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.c.a` v0 @kind this) @signature `Lcom/bumptech/glide/load/n/c/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L338504.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33850a.  return @kind void;
}
procedure `java.lang.Class` `a`(`com.bumptech.glide.load.n.c.a` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/c/a;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3384ec.  v0:= constclass @type ^`java.nio.ByteBuffer` @kind object;
  #L3384f0.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.l.g` `b`(`com.bumptech.glide.load.n.c.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/c/a;.b:(Ljava/lang/Object;)Lcom/bumptech/glide/load/l/g;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3384b0.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L3384b4.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/load/n/c/a;.c:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/l/g;` @kind virtual;
  #L3384ba.  v1:= temp @kind object;
  #L3384bc.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.l.g` `c`(`com.bumptech.glide.load.n.c.a` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/c/a;.c:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/l/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3384d0.  v0:= new `com.bumptech.glide.load.n.c.b`;
  #L3384d4.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/n/c/b;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L3384da.  return v0 @kind object;
}
