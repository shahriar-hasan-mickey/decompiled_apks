record `com.bumptech.glide.load.l.p` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.l.e` @kind interface {
  `com.bumptech.glide.load.m.c0` `com.bumptech.glide.load.l.p.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.l.p.d` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.l.o` `com.bumptech.glide.load.l.p.e` @AccessFlag PRIVATE_FINAL;
  `java.net.HttpURLConnection` `com.bumptech.glide.load.l.p.f` @AccessFlag PRIVATE;
  `java.io.InputStream` `com.bumptech.glide.load.l.p.g` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.l.p.h` @AccessFlag PRIVATE_VOLATILE;
}
global `com.bumptech.glide.load.l.o` `@@com.bumptech.glide.load.l.p.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/l/p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L326c68.  v0:= new `com.bumptech.glide.load.l.n`;
  #L326c6c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/l/n;.<init>:()V` @kind direct;
  #L326c72.  `@@com.bumptech.glide.load.l.p.b` @type ^`com.bumptech.glide.load.l.o` := v0 @kind object;
  #L326c76.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.l.p` v1 @kind this, `com.bumptech.glide.load.m.c0` v2 @kind object, `int` v3 ) @signature `Lcom/bumptech/glide/load/l/p;.<init>:(Lcom/bumptech/glide/load/m/c0;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L326c88.  v0:= `@@com.bumptech.glide.load.l.p.b` @type ^`com.bumptech.glide.load.l.o` @kind object;
  #L326c8c.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/load/l/p;.<init>:(Lcom/bumptech/glide/load/m/c0;ILcom/bumptech/glide/load/l/o;)V` @kind direct;
  #L326c92.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.l.p` v0 @kind this, `com.bumptech.glide.load.m.c0` v1 @kind object, `int` v2 , `com.bumptech.glide.load.l.o` v3 @kind object) @signature `Lcom/bumptech/glide/load/l/p;.<init>:(Lcom/bumptech/glide/load/m/c0;ILcom/bumptech/glide/load/l/o;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L326ca4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L326caa.  v0.`com.bumptech.glide.load.l.p.c` @type ^`com.bumptech.glide.load.m.c0` := v1 @kind object;
  #L326cae.  v0.`com.bumptech.glide.load.l.p.d` @type ^`int` := v2;
  #L326cb2.  v0.`com.bumptech.glide.load.l.p.e` @type ^`com.bumptech.glide.load.l.o` := v3 @kind object;
  #L326cb6.  return @kind void;
}
procedure `java.io.InputStream` `c`(`com.bumptech.glide.load.l.p` v2 @kind this, `java.net.HttpURLConnection` v3 @kind object) @signature `Lcom/bumptech/glide/load/l/p;.c:(Ljava/net/HttpURLConnection;)Ljava/io/InputStream;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3269f0.  call temp:= `getContentEncoding`(v3) @signature `Ljava/net/HttpURLConnection;.getContentEncoding:()Ljava/lang/String;` @kind virtual;
  #L3269f6.  v0:= temp @kind object;
  #L3269f8.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L3269fe.  v0:= temp;
  #L326a00.  if v0 == 0 then goto L326a24;
  #L326a04.  call temp:= `getContentLength`(v3) @signature `Ljava/net/HttpURLConnection;.getContentLength:()I` @kind virtual;
  #L326a0a.  v0:= temp;
  #L326a0c.  call temp:= `getInputStream`(v3) @signature `Ljava/net/HttpURLConnection;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L326a12.  v3:= temp @kind object;
  #L326a14.  v0:= (`long`) v0 @kind i2l;
  #L326a16.  call temp:= `c`(v3, v0) @signature `Lcom/bumptech/glide/s/e;.c:(Ljava/io/InputStream;J)Ljava/io/InputStream;` @kind static;
  #L326a1c.  v3:= temp @kind object;
  #L326a1e.  v2.`com.bumptech.glide.load.l.p.g` @type ^`java.io.InputStream` := v3 @kind object;
  #L326a22.  goto L326a6a;
  #L326a24.  v0:= 3I;
  #L326a26.  v1:= "HttpUrlFetcher" @kind object;
  #L326a2a.  call temp:= `isLoggable`(v1, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L326a30.  v0:= temp;
  #L326a32.  if v0 == 0 then goto L326a5e;
  #L326a36.  v0:= new `java.lang.StringBuilder`;
  #L326a3a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L326a40.  v1:= "Got non empty content encoding: " @kind object;
  #L326a44.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L326a4a.  call temp:= `getContentEncoding`(v3) @signature `Ljava/net/HttpURLConnection;.getContentEncoding:()Ljava/lang/String;` @kind virtual;
  #L326a50.  v1:= temp @kind object;
  #L326a52.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L326a58.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L326a5e.  call temp:= `getInputStream`(v3) @signature `Ljava/net/HttpURLConnection;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L326a64.  v3:= temp @kind object;
  #L326a66.  v2.`com.bumptech.glide.load.l.p.g` @type ^`java.io.InputStream` := v3 @kind object;
  #L326a6a.  v3:= v2.`com.bumptech.glide.load.l.p.g` @type ^`java.io.InputStream` @kind object;
  #L326a6e.  return v3 @kind object;
}
procedure `boolean` `f`(`int` v1 ) @signature `Lcom/bumptech/glide/load/l/p;.f:(I)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L326990.  v1:= v1 / 100;
  #L326994.  v0:= 2I;
  #L326996.  if v1 != v0 then goto L32699e;
  #L32699a.  v1:= 1I;
  #L32699c.  goto L3269a0;
  #L32699e.  v1:= 0I;
  #L3269a0.  return v1;
}
procedure `boolean` `g`(`int` v1 ) @signature `Lcom/bumptech/glide/load/l/p;.g:(I)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3269b4.  v1:= v1 / 100;
  #L3269b8.  v0:= 3I;
  #L3269ba.  if v1 != v0 then goto L3269c2;
  #L3269be.  v1:= 1I;
  #L3269c0.  goto L3269c4;
  #L3269c2.  v1:= 0I;
  #L3269c4.  return v1;
}
procedure `java.io.InputStream` `h`(`com.bumptech.glide.load.l.p` v3 @kind this, `java.net.URL` v4 @kind object, `int` v5 , `java.net.URL` v6 @kind object, `java.util.Map` v7 @kind object) @signature `Lcom/bumptech/glide/load/l/p;.h:(Ljava/net/URL;ILjava/net/URL;Ljava/util/Map;)Ljava/io/InputStream;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L326a80.  v0:= 5I;
  #L326a82.  if v5 >= v0 then goto L326c1c;
  #L326a86.  if v6 == 0 then goto L326ab8;
  #L326a8a.  call temp:= `toURI`(v4) @signature `Ljava/net/URL;.toURI:()Ljava/net/URI;` @kind virtual;
  #L326a90.  v0:= temp @kind object;
  #L326a92.  call temp:= `toURI`(v6) @signature `Ljava/net/URL;.toURI:()Ljava/net/URI;` @kind virtual;
  #L326a98.  v6:= temp @kind object;
  #L326a9a.  call temp:= `equals`(v0, v6) @signature `Ljava/net/URI;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L326aa0.  v6:= temp;
  #L326aa2.  if v6 != 0 then goto L326aa8;
  #L326aa6.  goto L326ab8;
  #L326aa8.  v6:= new `com.bumptech.glide.load.HttpException`;
  #L326aac.  v0:= "In re-direct loop" @kind object;
  #L326ab0.  call `<init>`(v6, v0) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L326ab6.  throw v6;
  #L326ab8.  v6:= v3.`com.bumptech.glide.load.l.p.e` @type ^`com.bumptech.glide.load.l.o` @kind object;
  #L326abc.  call temp:= `a`(v6, v4) @signature `Lcom/bumptech/glide/load/l/o;.a:(Ljava/net/URL;)Ljava/net/HttpURLConnection;` @kind interface;
  #L326ac2.  v6:= temp @kind object;
  #L326ac4.  v3.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` := v6 @kind object;
  #L326ac8.  call temp:= `entrySet`(v7) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L326ace.  v6:= temp @kind object;
  #L326ad0.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L326ad6.  v6:= temp @kind object;
  #L326ad8.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L326ade.  v0:= temp;
  #L326ae0.  if v0 == 0 then goto L326b14;
  #L326ae4.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L326aea.  v0:= temp @kind object;
  #L326aec.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L326af0.  v1:= v3.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` @kind object;
  #L326af4.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L326afa.  v2:= temp @kind object;
  #L326afc.  v2:= (`java.lang.String`) v2 @kind object;
  #L326b00.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L326b06.  v0:= temp @kind object;
  #L326b08.  v0:= (`java.lang.String`) v0 @kind object;
  #L326b0c.  call `addRequestProperty`(v1, v2, v0) @signature `Ljava/net/HttpURLConnection;.addRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L326b12.  goto L326ad8;
  #L326b14.  v6:= v3.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` @kind object;
  #L326b18.  v0:= v3.`com.bumptech.glide.load.l.p.d` @type ^`int`;
  #L326b1c.  call `setConnectTimeout`(v6, v0) @signature `Ljava/net/HttpURLConnection;.setConnectTimeout:(I)V` @kind virtual;
  #L326b22.  v6:= v3.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` @kind object;
  #L326b26.  v0:= v3.`com.bumptech.glide.load.l.p.d` @type ^`int`;
  #L326b2a.  call `setReadTimeout`(v6, v0) @signature `Ljava/net/HttpURLConnection;.setReadTimeout:(I)V` @kind virtual;
  #L326b30.  v6:= v3.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` @kind object;
  #L326b34.  v0:= 0I;
  #L326b36.  call `setUseCaches`(v6, v0) @signature `Ljava/net/HttpURLConnection;.setUseCaches:(Z)V` @kind virtual;
  #L326b3c.  v6:= v3.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` @kind object;
  #L326b40.  v1:= 1I;
  #L326b42.  call `setDoInput`(v6, v1) @signature `Ljava/net/HttpURLConnection;.setDoInput:(Z)V` @kind virtual;
  #L326b48.  v6:= v3.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` @kind object;
  #L326b4c.  call `setInstanceFollowRedirects`(v6, v0) @signature `Ljava/net/HttpURLConnection;.setInstanceFollowRedirects:(Z)V` @kind virtual;
  #L326b52.  v6:= v3.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` @kind object;
  #L326b56.  call `connect`(v6) @signature `Ljava/net/HttpURLConnection;.connect:()V` @kind virtual;
  #L326b5c.  v6:= v3.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` @kind object;
  #L326b60.  call temp:= `getInputStream`(v6) @signature `Ljava/net/HttpURLConnection;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L326b66.  v6:= temp @kind object;
  #L326b68.  v3.`com.bumptech.glide.load.l.p.g` @type ^`java.io.InputStream` := v6 @kind object;
  #L326b6c.  v6:= v3.`com.bumptech.glide.load.l.p.h` @type ^`boolean` @kind boolean;
  #L326b70.  if v6 == 0 then goto L326b78;
  #L326b74.  v4:= 0I;
  #L326b76.  return v4 @kind object;
  #L326b78.  v6:= v3.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` @kind object;
  #L326b7c.  call temp:= `getResponseCode`(v6) @signature `Ljava/net/HttpURLConnection;.getResponseCode:()I` @kind virtual;
  #L326b82.  v6:= temp;
  #L326b84.  call temp:= `f`(v6) @signature `Lcom/bumptech/glide/load/l/p;.f:(I)Z` @kind static;
  #L326b8a.  v0:= temp;
  #L326b8c.  if v0 == 0 then goto L326b9e;
  #L326b90.  v4:= v3.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` @kind object;
  #L326b94.  call temp:= `c`(v3, v4) @signature `Lcom/bumptech/glide/load/l/p;.c:(Ljava/net/HttpURLConnection;)Ljava/io/InputStream;` @kind direct;
  #L326b9a.  v4:= temp @kind object;
  #L326b9c.  return v4 @kind object;
  #L326b9e.  call temp:= `g`(v6) @signature `Lcom/bumptech/glide/load/l/p;.g:(I)Z` @kind static;
  #L326ba4.  v0:= temp;
  #L326ba6.  if v0 == 0 then goto L326bf2;
  #L326baa.  v6:= v3.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` @kind object;
  #L326bae.  v0:= "Location" @kind object;
  #L326bb2.  call temp:= `getHeaderField`(v6, v0) @signature `Ljava/net/HttpURLConnection;.getHeaderField:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L326bb8.  v6:= temp @kind object;
  #L326bba.  call temp:= `isEmpty`(v6) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L326bc0.  v0:= temp;
  #L326bc2.  if v0 != 0 then goto L326be2;
  #L326bc6.  v0:= new `java.net.URL`;
  #L326bca.  call `<init>`(v0, v4, v6) @signature `Ljava/net/URL;.<init>:(Ljava/net/URL;Ljava/lang/String;)V` @kind direct;
  #L326bd0.  call `b`(v3) @signature `Lcom/bumptech/glide/load/l/p;.b:()V` @kind virtual;
  #L326bd6.  v5:= v5 + v1 @kind int;
  #L326bd8.  call temp:= `h`(v3, v0, v5, v4, v7) @signature `Lcom/bumptech/glide/load/l/p;.h:(Ljava/net/URL;ILjava/net/URL;Ljava/util/Map;)Ljava/io/InputStream;` @kind direct;
  #L326bde.  v4:= temp @kind object;
  #L326be0.  return v4 @kind object;
  #L326be2.  v4:= new `com.bumptech.glide.load.HttpException`;
  #L326be6.  v5:= "Received empty or null redirect url" @kind object;
  #L326bea.  call `<init>`(v4, v5) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L326bf0.  throw v4;
  #L326bf2.  v4:= -1I;
  #L326bf4.  if v6 != v4 then goto L326c04;
  #L326bf8.  v4:= new `com.bumptech.glide.load.HttpException`;
  #L326bfc.  call `<init>`(v4, v6) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(I)V` @kind direct;
  #L326c02.  throw v4;
  #L326c04.  v4:= new `com.bumptech.glide.load.HttpException`;
  #L326c08.  v5:= v3.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` @kind object;
  #L326c0c.  call temp:= `getResponseMessage`(v5) @signature `Ljava/net/HttpURLConnection;.getResponseMessage:()Ljava/lang/String;` @kind virtual;
  #L326c12.  v5:= temp @kind object;
  #L326c14.  call `<init>`(v4, v5, v6) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L326c1a.  throw v4;
  #L326c1c.  v4:= new `com.bumptech.glide.load.HttpException`;
  #L326c20.  v5:= "Too many (> 5) redirects!" @kind object;
  #L326c24.  call `<init>`(v4, v5) @signature `Lcom/bumptech/glide/load/HttpException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L326c2a.  goto L326c2e;
  #L326c2c.  throw v4;
  #L326c2e.  goto L326c2c;
  catch `java.net.URISyntaxException` @[L326a8a..L326ab8] goto L326ab8;
}
procedure `java.lang.Class` `a`(`com.bumptech.glide.load.l.p` v1 @kind this) @signature `Lcom/bumptech/glide/load/l/p;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L326c50.  v0:= constclass @type ^`java.io.InputStream` @kind object;
  #L326c54.  return v0 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.load.l.p` v1 @kind this) @signature `Lcom/bumptech/glide/load/l/p;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L326ce0.  v0:= v1.`com.bumptech.glide.load.l.p.g` @type ^`java.io.InputStream` @kind object;
  #L326ce4.  if v0 == 0 then goto L326cf2;
  #L326ce8.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L326cee.  goto L326cf2;
  #L326cf0.  
  #L326cf2.  v0:= v1.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` @kind object;
  #L326cf6.  if v0 == 0 then goto L326d00;
  #L326cfa.  call `disconnect`(v0) @signature `Ljava/net/HttpURLConnection;.disconnect:()V` @kind virtual;
  #L326d00.  v0:= 0I;
  #L326d02.  v1.`com.bumptech.glide.load.l.p.f` @type ^`java.net.HttpURLConnection` := v0 @kind object;
  #L326d06.  return @kind void;
  catch `java.io.IOException` @[L326ce8..L326cee] goto L326cf0;
}
procedure `void` `cancel`(`com.bumptech.glide.load.l.p` v1 @kind this) @signature `Lcom/bumptech/glide/load/l/p;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L326cc8.  v0:= 1I;
  #L326cca.  v1.`com.bumptech.glide.load.l.p.h` @type ^`boolean` := v0 @kind boolean;
  #L326cce.  return @kind void;
}
procedure `com.bumptech.glide.load.DataSource` `d`(`com.bumptech.glide.load.l.p` v1 @kind this) @signature `Lcom/bumptech/glide/load/l/p;.d:()Lcom/bumptech/glide/load/DataSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3269d8.  v0:= `@@com.bumptech.glide.load.DataSource.REMOTE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3269dc.  return v0 @kind object;
}
procedure `void` `e`(`com.bumptech.glide.load.l.p` v8 @kind this, `com.bumptech.glide.Priority` v9 @kind object, `com.bumptech.glide.load.l.d` v10 @kind object) @signature `Lcom/bumptech/glide/load/l/p;.e:(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/l/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L326d28.  v9:= "Finished http url fetcher fetch in " @kind object;
  #L326d2c.  v0:= "HttpUrlFetcher" @kind object;
  #L326d30.  call temp:= `b`() @signature `Lcom/bumptech/glide/s/j;.b:()J` @kind static;
  #L326d36.  v1:= temp @kind wide;
  #L326d38.  v3:= 2I;
  #L326d3a.  v4:= v8.`com.bumptech.glide.load.l.p.c` @type ^`com.bumptech.glide.load.m.c0` @kind object;
  #L326d3e.  call temp:= `h`(v4) @signature `Lcom/bumptech/glide/load/m/c0;.h:()Ljava/net/URL;` @kind virtual;
  #L326d44.  v4:= temp @kind object;
  #L326d46.  v5:= 0I;
  #L326d48.  v6:= 0I;
  #L326d4a.  v7:= v8.`com.bumptech.glide.load.l.p.c` @type ^`com.bumptech.glide.load.m.c0` @kind object;
  #L326d4e.  call temp:= `e`(v7) @signature `Lcom/bumptech/glide/load/m/c0;.e:()Ljava/util/Map;` @kind virtual;
  #L326d54.  v7:= temp @kind object;
  #L326d56.  call temp:= `h`(v8, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/l/p;.h:(Ljava/net/URL;ILjava/net/URL;Ljava/util/Map;)Ljava/io/InputStream;` @kind direct;
  #L326d5c.  v4:= temp @kind object;
  #L326d5e.  call `f`(v10, v4) @signature `Lcom/bumptech/glide/load/l/d;.f:(Ljava/lang/Object;)V` @kind interface;
  #L326d64.  call temp:= `isLoggable`(v0, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L326d6a.  v10:= temp;
  #L326d6c.  if v10 == 0 then goto L326dc2;
  #L326d70.  v10:= new `java.lang.StringBuilder`;
  #L326d74.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L326d7a.  goto L326da8;
  #L326d7c.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L326d7e.  goto L326dc4;
  #L326d80.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L326d82.  v5:= 3I;
  #L326d84.  call temp:= `isLoggable`(v0, v5) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L326d8a.  v5:= temp;
  #L326d8c.  call `c`(v10, v4) @signature `Lcom/bumptech/glide/load/l/d;.c:(Ljava/lang/Exception;)V` @kind interface;
  #L326d92.  call temp:= `isLoggable`(v0, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L326d98.  v10:= temp;
  #L326d9a.  if v10 == 0 then goto L326dc2;
  #L326d9e.  v10:= new `java.lang.StringBuilder`;
  #L326da2.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L326da8.  call temp:= `append`(v10, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L326dae.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/s/j;.a:(J)D` @kind static;
  #L326db4.  v0:= temp @kind wide;
  #L326db6.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L326dbc.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L326dc2.  return @kind void;
  #L326dc4.  call temp:= `isLoggable`(v0, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L326dca.  v0:= temp;
  #L326dcc.  if v0 == 0 then goto L326df4;
  #L326dd0.  v0:= new `java.lang.StringBuilder`;
  #L326dd4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L326dda.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L326de0.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/s/j;.a:(J)D` @kind static;
  #L326de6.  v1:= temp @kind wide;
  #L326de8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L326dee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L326df4.  throw v10;
  catch `java.io.IOException` @[L326d3a..L326d64] goto L326d80;
  catch `java.lang.Throwable` @[L326d3a..L326d64] goto L326d7c;
  catch `java.lang.Throwable` @[L326d84..L326d92] goto L326d7c;
}
