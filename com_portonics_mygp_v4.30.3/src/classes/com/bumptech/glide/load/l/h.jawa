record `com.bumptech.glide.load.l.h` @kind class @AccessFlag  extends `com.bumptech.glide.load.l.f` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.l.h` v0 @kind this) @signature `Lcom/bumptech/glide/load/l/h;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L326448.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32644e.  return @kind void;
}
procedure `java.lang.Class` `a`(`com.bumptech.glide.load.l.h` v2 @kind this) @signature `Lcom/bumptech/glide/load/l/h;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L326428.  v0:= new `java.lang.UnsupportedOperationException`;
  #L32642c.  v1:= "Not implemented" @kind object;
  #L326430.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L326436.  throw v0;
}
procedure `com.bumptech.glide.load.l.g` `b`(`com.bumptech.glide.load.l.h` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/l/h;.b:(Ljava/lang/Object;)Lcom/bumptech/glide/load/l/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32640c.  v0:= new `com.bumptech.glide.load.l.i`;
  #L326410.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/l/i;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L326416.  return v0 @kind object;
}
