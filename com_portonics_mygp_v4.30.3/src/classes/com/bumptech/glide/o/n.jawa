record `com.bumptech.glide.o.n` @kind class @AccessFlag PUBLIC extends `android.app.Fragment` @kind class {
  `com.bumptech.glide.o.a` `com.bumptech.glide.o.n.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.o.r` `com.bumptech.glide.o.n.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.bumptech.glide.o.n.d` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.k` `com.bumptech.glide.o.n.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.o.n` `com.bumptech.glide.o.n.f` @AccessFlag PRIVATE;
  `android.app.Fragment` `com.bumptech.glide.o.n.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.o.n` v1 @kind this) @signature `Lcom/bumptech/glide/o/n;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L33aed4.  v0:= new `com.bumptech.glide.o.a`;
  #L33aed8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/o/a;.<init>:()V` @kind direct;
  #L33aede.  call `<init>`(v1, v0) @signature `Lcom/bumptech/glide/o/n;.<init>:(Lcom/bumptech/glide/o/a;)V` @kind direct;
  #L33aee4.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.o.n` v1 @kind this, `com.bumptech.glide.o.a` v2 @kind object) @signature `Lcom/bumptech/glide/o/n;.<init>:(Lcom/bumptech/glide/o/a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L33aef8.  call `<init>`(v1) @signature `Landroid/app/Fragment;.<init>:()V` @kind direct;
  #L33aefe.  v0:= new `com.bumptech.glide.o.m`;
  #L33af02.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/o/m;.<init>:(Lcom/bumptech/glide/o/n;)V` @kind direct;
  #L33af08.  v1.`com.bumptech.glide.o.n.c` @type ^`com.bumptech.glide.o.r` := v0 @kind object;
  #L33af0c.  v0:= new `java.util.HashSet`;
  #L33af10.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L33af16.  v1.`com.bumptech.glide.o.n.d` @type ^`java.util.Set` := v0 @kind object;
  #L33af1a.  v1.`com.bumptech.glide.o.n.b` @type ^`com.bumptech.glide.o.a` := v2 @kind object;
  #L33af1e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.o.n` v1 @kind this, `com.bumptech.glide.o.n` v2 @kind object) @signature `Lcom/bumptech/glide/o/n;.a:(Lcom/bumptech/glide/o/n;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33af30.  v0:= v1.`com.bumptech.glide.o.n.d` @type ^`java.util.Set` @kind object;
  #L33af34.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L33af3a.  return @kind void;
}
procedure `android.app.Fragment` `c`(`com.bumptech.glide.o.n` v2 @kind this) @signature `Lcom/bumptech/glide/o/n;.c:()Landroid/app/Fragment;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33ae04.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L33ae08.  v1:= 17I;
  #L33ae0c.  if v0 < v1 then goto L33ae1a;
  #L33ae10.  call temp:= `getParentFragment`(v2) @signature `Landroid/app/Fragment;.getParentFragment:()Landroid/app/Fragment;` @kind virtual;
  #L33ae16.  v0:= temp @kind object;
  #L33ae18.  goto L33ae1c;
  #L33ae1a.  v0:= 0I;
  #L33ae1c.  if v0 == 0 then goto L33ae22;
  #L33ae20.  goto L33ae26;
  #L33ae22.  v0:= v2.`com.bumptech.glide.o.n.g` @type ^`android.app.Fragment` @kind object;
  #L33ae26.  return v0 @kind object;
}
procedure `void` `f`(`com.bumptech.glide.o.n` v1 @kind this, `android.app.Activity` v2 @kind object) @signature `Lcom/bumptech/glide/o/n;.f:(Landroid/app/Activity;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33b01c.  call `j`(v1) @signature `Lcom/bumptech/glide/o/n;.j:()V` @kind direct;
  #L33b022.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/e;.c:(Landroid/content/Context;)Lcom/bumptech/glide/e;` @kind static;
  #L33b028.  v0:= temp @kind object;
  #L33b02a.  call temp:= `k`(v0) @signature `Lcom/bumptech/glide/e;.k:()Lcom/bumptech/glide/o/q;` @kind virtual;
  #L33b030.  v0:= temp @kind object;
  #L33b032.  call temp:= `p`(v0, v2) @signature `Lcom/bumptech/glide/o/q;.p:(Landroid/app/Activity;)Lcom/bumptech/glide/o/n;` @kind virtual;
  #L33b038.  v2:= temp @kind object;
  #L33b03a.  v1.`com.bumptech.glide.o.n.f` @type ^`com.bumptech.glide.o.n` := v2 @kind object;
  #L33b03e.  call temp:= `equals`(v1, v2) @signature `Landroid/app/Fragment;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33b044.  v2:= temp;
  #L33b046.  if v2 != 0 then goto L33b054;
  #L33b04a.  v2:= v1.`com.bumptech.glide.o.n.f` @type ^`com.bumptech.glide.o.n` @kind object;
  #L33b04e.  call `a`(v2, v1) @signature `Lcom/bumptech/glide/o/n;.a:(Lcom/bumptech/glide/o/n;)V` @kind direct;
  #L33b054.  return @kind void;
}
procedure `void` `g`(`com.bumptech.glide.o.n` v1 @kind this, `com.bumptech.glide.o.n` v2 @kind object) @signature `Lcom/bumptech/glide/o/n;.g:(Lcom/bumptech/glide/o/n;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33b068.  v0:= v1.`com.bumptech.glide.o.n.d` @type ^`java.util.Set` @kind object;
  #L33b06c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L33b072.  return @kind void;
}
procedure `void` `j`(`com.bumptech.glide.o.n` v1 @kind this) @signature `Lcom/bumptech/glide/o/n;.j:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33b0d0.  v0:= v1.`com.bumptech.glide.o.n.f` @type ^`com.bumptech.glide.o.n` @kind object;
  #L33b0d4.  if v0 == 0 then goto L33b0e4;
  #L33b0d8.  call `g`(v0, v1) @signature `Lcom/bumptech/glide/o/n;.g:(Lcom/bumptech/glide/o/n;)V` @kind direct;
  #L33b0de.  v0:= 0I;
  #L33b0e0.  v1.`com.bumptech.glide.o.n.f` @type ^`com.bumptech.glide.o.n` := v0 @kind object;
  #L33b0e4.  return @kind void;
}
procedure `com.bumptech.glide.o.a` `b`(`com.bumptech.glide.o.n` v1 @kind this) @signature `Lcom/bumptech/glide/o/n;.b:()Lcom/bumptech/glide/o/a;` @AccessFlag  {
    temp;
    v0;

  #L33ae50.  v0:= v1.`com.bumptech.glide.o.n.b` @type ^`com.bumptech.glide.o.a` @kind object;
  #L33ae54.  return v0 @kind object;
}
procedure `com.bumptech.glide.k` `d`(`com.bumptech.glide.o.n` v1 @kind this) @signature `Lcom/bumptech/glide/o/n;.d:()Lcom/bumptech/glide/k;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33ae38.  v0:= v1.`com.bumptech.glide.o.n.e` @type ^`com.bumptech.glide.k` @kind object;
  #L33ae3c.  return v0 @kind object;
}
procedure `com.bumptech.glide.o.r` `e`(`com.bumptech.glide.o.n` v1 @kind this) @signature `Lcom/bumptech/glide/o/n;.e:()Lcom/bumptech/glide/o/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33ae68.  v0:= v1.`com.bumptech.glide.o.n.c` @type ^`com.bumptech.glide.o.r` @kind object;
  #L33ae6c.  return v0 @kind object;
}
procedure `void` `h`(`com.bumptech.glide.o.n` v1 @kind this, `android.app.Fragment` v2 @kind object) @signature `Lcom/bumptech/glide/o/n;.h:(Landroid/app/Fragment;)V` @AccessFlag  {
    temp;
    v0;

  #L33b084.  v1.`com.bumptech.glide.o.n.g` @type ^`android.app.Fragment` := v2 @kind object;
  #L33b088.  if v2 == 0 then goto L33b0a6;
  #L33b08c.  call temp:= `getActivity`(v2) @signature `Landroid/app/Fragment;.getActivity:()Landroid/app/Activity;` @kind virtual;
  #L33b092.  v0:= temp @kind object;
  #L33b094.  if v0 == 0 then goto L33b0a6;
  #L33b098.  call temp:= `getActivity`(v2) @signature `Landroid/app/Fragment;.getActivity:()Landroid/app/Activity;` @kind virtual;
  #L33b09e.  v2:= temp @kind object;
  #L33b0a0.  call `f`(v1, v2) @signature `Lcom/bumptech/glide/o/n;.f:(Landroid/app/Activity;)V` @kind direct;
  #L33b0a6.  return @kind void;
}
procedure `void` `i`(`com.bumptech.glide.o.n` v0 @kind this, `com.bumptech.glide.k` v1 @kind object) @signature `Lcom/bumptech/glide/o/n;.i:(Lcom/bumptech/glide/k;)V` @AccessFlag PUBLIC {
    temp;

  #L33b0b8.  v0.`com.bumptech.glide.o.n.e` @type ^`com.bumptech.glide.k` := v1 @kind object;
  #L33b0bc.  return @kind void;
}
procedure `void` `onAttach`(`com.bumptech.glide.o.n` v1 @kind this, `android.app.Activity` v2 @kind object) @signature `Lcom/bumptech/glide/o/n;.onAttach:(Landroid/app/Activity;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33af4c.  call `onAttach`(v1, v2) @signature `Landroid/app/Fragment;.onAttach:(Landroid/app/Activity;)V` @kind super;
  #L33af52.  call `f`(v1, v2) @signature `Lcom/bumptech/glide/o/n;.f:(Landroid/app/Activity;)V` @kind direct;
  #L33af58.  goto L33af68;
  #L33af5a.  v2:= 5I;
  #L33af5c.  v0:= "RMFragment" @kind object;
  #L33af60.  call temp:= `isLoggable`(v0, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L33af66.  v2:= temp;
  #L33af68.  return @kind void;
  catch `java.lang.IllegalStateException` @[L33af52..L33af58] goto L33af5a;
}
procedure `void` `onDestroy`(`com.bumptech.glide.o.n` v1 @kind this) @signature `Lcom/bumptech/glide/o/n;.onDestroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33af8c.  call `onDestroy`(v1) @signature `Landroid/app/Fragment;.onDestroy:()V` @kind super;
  #L33af92.  v0:= v1.`com.bumptech.glide.o.n.b` @type ^`com.bumptech.glide.o.a` @kind object;
  #L33af96.  call `c`(v0) @signature `Lcom/bumptech/glide/o/a;.c:()V` @kind virtual;
  #L33af9c.  call `j`(v1) @signature `Lcom/bumptech/glide/o/n;.j:()V` @kind direct;
  #L33afa2.  return @kind void;
}
procedure `void` `onDetach`(`com.bumptech.glide.o.n` v0 @kind this) @signature `Lcom/bumptech/glide/o/n;.onDetach:()V` @AccessFlag PUBLIC {
    temp;

  #L33afb4.  call `onDetach`(v0) @signature `Landroid/app/Fragment;.onDetach:()V` @kind super;
  #L33afba.  call `j`(v0) @signature `Lcom/bumptech/glide/o/n;.j:()V` @kind direct;
  #L33afc0.  return @kind void;
}
procedure `void` `onStart`(`com.bumptech.glide.o.n` v1 @kind this) @signature `Lcom/bumptech/glide/o/n;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33afd4.  call `onStart`(v1) @signature `Landroid/app/Fragment;.onStart:()V` @kind super;
  #L33afda.  v0:= v1.`com.bumptech.glide.o.n.b` @type ^`com.bumptech.glide.o.a` @kind object;
  #L33afde.  call `d`(v0) @signature `Lcom/bumptech/glide/o/a;.d:()V` @kind virtual;
  #L33afe4.  return @kind void;
}
procedure `void` `onStop`(`com.bumptech.glide.o.n` v1 @kind this) @signature `Lcom/bumptech/glide/o/n;.onStop:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33aff8.  call `onStop`(v1) @signature `Landroid/app/Fragment;.onStop:()V` @kind super;
  #L33affe.  v0:= v1.`com.bumptech.glide.o.n.b` @type ^`com.bumptech.glide.o.a` @kind object;
  #L33b002.  call `e`(v0) @signature `Lcom/bumptech/glide/o/a;.e:()V` @kind virtual;
  #L33b008.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.o.n` v2 @kind this) @signature `Lcom/bumptech/glide/o/n;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33ae80.  v0:= new `java.lang.StringBuilder`;
  #L33ae84.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33ae8a.  call temp:= `toString`(v2) @signature `Landroid/app/Fragment;.toString:()Ljava/lang/String;` @kind super;
  #L33ae90.  v1:= temp @kind object;
  #L33ae92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33ae98.  v1:= "{parent=" @kind object;
  #L33ae9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33aea2.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/o/n;.c:()Landroid/app/Fragment;` @kind direct;
  #L33aea8.  v1:= temp @kind object;
  #L33aeaa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33aeb0.  v1:= "}" @kind object;
  #L33aeb4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33aeba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33aec0.  v0:= temp @kind object;
  #L33aec2.  return v0 @kind object;
}
