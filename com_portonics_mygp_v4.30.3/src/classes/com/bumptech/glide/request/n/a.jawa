record `com.bumptech.glide.request.n.a` @kind class @AccessFlag PUBLIC {
  `int` `com.bumptech.glide.request.n.a.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.request.n.a.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.request.n.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/n/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L340ca4.  v0:= 300I;
  #L340ca8.  call `<init>`(v1, v0) @signature `Lcom/bumptech/glide/request/n/a;.<init>:(I)V` @kind direct;
  #L340cae.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.request.n.a` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/request/n/a;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L340cc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L340cc6.  v0.`com.bumptech.glide.request.n.a.a` @type ^`int` := v1;
  #L340cca.  return @kind void;
}
procedure `com.bumptech.glide.request.n.b` `a`(`com.bumptech.glide.request.n.a` v3 @kind this) @signature `Lcom/bumptech/glide/request/n/a;.a:()Lcom/bumptech/glide/request/n/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L340c80.  v0:= new `com.bumptech.glide.request.n.b`;
  #L340c84.  v1:= v3.`com.bumptech.glide.request.n.a.a` @type ^`int`;
  #L340c88.  v2:= v3.`com.bumptech.glide.request.n.a.b` @type ^`boolean` @kind boolean;
  #L340c8c.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/request/n/b;.<init>:(IZ)V` @kind direct;
  #L340c92.  return v0 @kind object;
}
