record `com.bumptech.glide.request.n.b` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.request.n.h` @kind interface {
  `int` `com.bumptech.glide.request.n.b.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.request.n.b.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.n.c` `com.bumptech.glide.request.n.b.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.request.n.b` v0 @kind this, `int` v1 , `boolean` v2 ) @signature `Lcom/bumptech/glide/request/n/b;.<init>:(IZ)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L340d3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L340d42.  v0.`com.bumptech.glide.request.n.b.a` @type ^`int` := v1;
  #L340d46.  v0.`com.bumptech.glide.request.n.b.b` @type ^`boolean` := v2 @kind boolean;
  #L340d4a.  return @kind void;
}
procedure `com.bumptech.glide.request.n.g` `b`(`com.bumptech.glide.request.n.b` v3 @kind this) @signature `Lcom/bumptech/glide/request/n/b;.b:()Lcom/bumptech/glide/request/n/g;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L340d08.  v0:= v3.`com.bumptech.glide.request.n.b.c` @type ^`com.bumptech.glide.request.n.c` @kind object;
  #L340d0c.  if v0 != 0 then goto L340d26;
  #L340d10.  v0:= new `com.bumptech.glide.request.n.c`;
  #L340d14.  v1:= v3.`com.bumptech.glide.request.n.b.a` @type ^`int`;
  #L340d18.  v2:= v3.`com.bumptech.glide.request.n.b.b` @type ^`boolean` @kind boolean;
  #L340d1c.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/request/n/c;.<init>:(IZ)V` @kind direct;
  #L340d22.  v3.`com.bumptech.glide.request.n.b.c` @type ^`com.bumptech.glide.request.n.c` := v0 @kind object;
  #L340d26.  v0:= v3.`com.bumptech.glide.request.n.b.c` @type ^`com.bumptech.glide.request.n.c` @kind object;
  #L340d2a.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.n.g` `a`(`com.bumptech.glide.request.n.b` v0 @kind this, `com.bumptech.glide.load.DataSource` v1 @kind object, `boolean` v2 ) @signature `Lcom/bumptech/glide/request/n/b;.a:(Lcom/bumptech/glide/load/DataSource;Z)Lcom/bumptech/glide/request/n/g;` @AccessFlag PUBLIC {
    temp;

  #L340cdc.  v2:= `@@com.bumptech.glide.load.DataSource.MEMORY_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L340ce0.  if v1 != v2 then goto L340cee;
  #L340ce4.  call temp:= `b`() @signature `Lcom/bumptech/glide/request/n/e;.b:()Lcom/bumptech/glide/request/n/g;` @kind static;
  #L340cea.  v1:= temp @kind object;
  #L340cec.  goto L340cf6;
  #L340cee.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/request/n/b;.b:()Lcom/bumptech/glide/request/n/g;` @kind direct;
  #L340cf4.  v1:= temp @kind object;
  #L340cf6.  return v1 @kind object;
}
