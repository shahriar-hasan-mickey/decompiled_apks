record `com.bumptech.glide.request.m.k` @kind class @AccessFlag FINAL {
  `android.view.View` `com.bumptech.glide.request.m.k.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.request.m.k.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.request.m.k.d` @AccessFlag ;
  `com.bumptech.glide.request.m.j` `com.bumptech.glide.request.m.k.e` @AccessFlag PRIVATE;
}
global `java.lang.Integer` `@@com.bumptech.glide.request.m.k.a` @AccessFlag STATIC;
procedure `void` `<init>`(`com.bumptech.glide.request.m.k` v1 @kind this, `android.view.View` v2 @kind object) @signature `Lcom/bumptech/glide/request/m/k;.<init>:(Landroid/view/View;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3408b0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3408b6.  v0:= new `java.util.ArrayList`;
  #L3408ba.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3408c0.  v1.`com.bumptech.glide.request.m.k.c` @type ^`java.util.List` := v0 @kind object;
  #L3408c4.  v1.`com.bumptech.glide.request.m.k.b` @type ^`android.view.View` := v2 @kind object;
  #L3408c8.  return @kind void;
}
procedure `int` `c`(`android.content.Context` v1 @kind object) @signature `Lcom/bumptech/glide/request/m/k;.c:(Landroid/content/Context;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L34070c.  v0:= `@@com.bumptech.glide.request.m.k.a` @type ^`java.lang.Integer` @kind object;
  #L340710.  if v0 != 0 then goto L340764;
  #L340714.  v0:= "window" @kind object;
  #L340718.  call temp:= `getSystemService`(v1, v0) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L34071e.  v1:= temp @kind object;
  #L340720.  v1:= (`android.view.WindowManager`) v1 @kind object;
  #L340724.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L34072a.  v1:= temp @kind object;
  #L34072c.  v1:= (`android.view.WindowManager`) v1 @kind object;
  #L340730.  call temp:= `getDefaultDisplay`(v1) @signature `Landroid/view/WindowManager;.getDefaultDisplay:()Landroid/view/Display;` @kind interface;
  #L340736.  v1:= temp @kind object;
  #L340738.  v0:= new `android.graphics.Point`;
  #L34073c.  call `<init>`(v0) @signature `Landroid/graphics/Point;.<init>:()V` @kind direct;
  #L340742.  call `getSize`(v1, v0) @signature `Landroid/view/Display;.getSize:(Landroid/graphics/Point;)V` @kind virtual;
  #L340748.  v1:= v0.`android.graphics.Point.x` @type ^`int`;
  #L34074c.  v0:= v0.`android.graphics.Point.y` @type ^`int`;
  #L340750.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L340756.  v1:= temp;
  #L340758.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L34075e.  v1:= temp @kind object;
  #L340760.  `@@com.bumptech.glide.request.m.k.a` @type ^`java.lang.Integer` := v1 @kind object;
  #L340764.  v1:= `@@com.bumptech.glide.request.m.k.a` @type ^`java.lang.Integer` @kind object;
  #L340768.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L34076e.  v1:= temp;
  #L340770.  return v1;
}
procedure `int` `e`(`com.bumptech.glide.request.m.k` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/request/m/k;.e:(III)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L340784.  v0:= v4 - v5 @kind int;
  #L340788.  if v0 <= 0 then goto L34078e;
  #L34078c.  return v0;
  #L34078e.  v0:= v2.`com.bumptech.glide.request.m.k.d` @type ^`boolean` @kind boolean;
  #L340792.  v1:= 0I;
  #L340794.  if v0 == 0 then goto L3407aa;
  #L340798.  v0:= v2.`com.bumptech.glide.request.m.k.b` @type ^`android.view.View` @kind object;
  #L34079c.  call temp:= `isLayoutRequested`(v0) @signature `Landroid/view/View;.isLayoutRequested:()Z` @kind virtual;
  #L3407a2.  v0:= temp;
  #L3407a4.  if v0 == 0 then goto L3407aa;
  #L3407a8.  return v1;
  #L3407aa.  v3:= v3 - v5 @kind int;
  #L3407ac.  if v3 <= 0 then goto L3407b2;
  #L3407b0.  return v3;
  #L3407b2.  v3:= v2.`com.bumptech.glide.request.m.k.b` @type ^`android.view.View` @kind object;
  #L3407b6.  call temp:= `isLayoutRequested`(v3) @signature `Landroid/view/View;.isLayoutRequested:()Z` @kind virtual;
  #L3407bc.  v3:= temp;
  #L3407be.  if v3 != 0 then goto L3407ec;
  #L3407c2.  v3:= -2I;
  #L3407c4.  if v4 != v3 then goto L3407ec;
  #L3407c8.  v3:= 4I;
  #L3407ca.  v4:= "ViewTarget" @kind object;
  #L3407ce.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3407d4.  v3:= temp;
  #L3407d6.  v3:= v2.`com.bumptech.glide.request.m.k.b` @type ^`android.view.View` @kind object;
  #L3407da.  call temp:= `getContext`(v3) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L3407e0.  v3:= temp @kind object;
  #L3407e2.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/request/m/k;.c:(Landroid/content/Context;)I` @kind static;
  #L3407e8.  v3:= temp;
  #L3407ea.  return v3;
  #L3407ec.  return v1;
}
procedure `int` `f`(`com.bumptech.glide.request.m.k` v3 @kind this) @signature `Lcom/bumptech/glide/request/m/k;.f:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L340800.  v0:= v3.`com.bumptech.glide.request.m.k.b` @type ^`android.view.View` @kind object;
  #L340804.  call temp:= `getPaddingTop`(v0) @signature `Landroid/view/View;.getPaddingTop:()I` @kind virtual;
  #L34080a.  v0:= temp;
  #L34080c.  v1:= v3.`com.bumptech.glide.request.m.k.b` @type ^`android.view.View` @kind object;
  #L340810.  call temp:= `getPaddingBottom`(v1) @signature `Landroid/view/View;.getPaddingBottom:()I` @kind virtual;
  #L340816.  v1:= temp;
  #L340818.  v0:= v0 + v1 @kind int;
  #L34081a.  v1:= v3.`com.bumptech.glide.request.m.k.b` @type ^`android.view.View` @kind object;
  #L34081e.  call temp:= `getLayoutParams`(v1) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L340824.  v1:= temp @kind object;
  #L340826.  if v1 == 0 then goto L340830;
  #L34082a.  v1:= v1.`android.view.ViewGroup$LayoutParams.height` @type ^`int`;
  #L34082e.  goto L340832;
  #L340830.  v1:= 0I;
  #L340832.  v2:= v3.`com.bumptech.glide.request.m.k.b` @type ^`android.view.View` @kind object;
  #L340836.  call temp:= `getHeight`(v2) @signature `Landroid/view/View;.getHeight:()I` @kind virtual;
  #L34083c.  v2:= temp;
  #L34083e.  call temp:= `e`(v3, v2, v1, v0) @signature `Lcom/bumptech/glide/request/m/k;.e:(III)I` @kind direct;
  #L340844.  v0:= temp;
  #L340846.  return v0;
}
procedure `int` `g`(`com.bumptech.glide.request.m.k` v3 @kind this) @signature `Lcom/bumptech/glide/request/m/k;.g:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L340858.  v0:= v3.`com.bumptech.glide.request.m.k.b` @type ^`android.view.View` @kind object;
  #L34085c.  call temp:= `getPaddingLeft`(v0) @signature `Landroid/view/View;.getPaddingLeft:()I` @kind virtual;
  #L340862.  v0:= temp;
  #L340864.  v1:= v3.`com.bumptech.glide.request.m.k.b` @type ^`android.view.View` @kind object;
  #L340868.  call temp:= `getPaddingRight`(v1) @signature `Landroid/view/View;.getPaddingRight:()I` @kind virtual;
  #L34086e.  v1:= temp;
  #L340870.  v0:= v0 + v1 @kind int;
  #L340872.  v1:= v3.`com.bumptech.glide.request.m.k.b` @type ^`android.view.View` @kind object;
  #L340876.  call temp:= `getLayoutParams`(v1) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L34087c.  v1:= temp @kind object;
  #L34087e.  if v1 == 0 then goto L340888;
  #L340882.  v1:= v1.`android.view.ViewGroup$LayoutParams.width` @type ^`int`;
  #L340886.  goto L34088a;
  #L340888.  v1:= 0I;
  #L34088a.  v2:= v3.`com.bumptech.glide.request.m.k.b` @type ^`android.view.View` @kind object;
  #L34088e.  call temp:= `getWidth`(v2) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L340894.  v2:= temp;
  #L340896.  call temp:= `e`(v3, v2, v1, v0) @signature `Lcom/bumptech/glide/request/m/k;.e:(III)I` @kind direct;
  #L34089c.  v0:= temp;
  #L34089e.  return v0;
}
procedure `boolean` `h`(`com.bumptech.glide.request.m.k` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/m/k;.h:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3406b4.  if v2 > 0 then goto L3406c6;
  #L3406b8.  v0:= -2147483648I;
  #L3406bc.  if v2 != v0 then goto L3406c2;
  #L3406c0.  goto L3406c6;
  #L3406c2.  v2:= 0I;
  #L3406c4.  goto L3406c8;
  #L3406c6.  v2:= 1I;
  #L3406c8.  return v2;
}
procedure `boolean` `i`(`com.bumptech.glide.request.m.k` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/bumptech/glide/request/m/k;.i:(II)Z` @AccessFlag PRIVATE {
    temp;

  #L3406dc.  call temp:= `h`(v0, v1) @signature `Lcom/bumptech/glide/request/m/k;.h:(I)Z` @kind direct;
  #L3406e2.  v1:= temp;
  #L3406e4.  if v1 == 0 then goto L3406f8;
  #L3406e8.  call temp:= `h`(v0, v2) @signature `Lcom/bumptech/glide/request/m/k;.h:(I)Z` @kind direct;
  #L3406ee.  v1:= temp;
  #L3406f0.  if v1 == 0 then goto L3406f8;
  #L3406f4.  v1:= 1I;
  #L3406f6.  goto L3406fa;
  #L3406f8.  v1:= 0I;
  #L3406fa.  return v1;
}
procedure `void` `j`(`com.bumptech.glide.request.m.k` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/request/m/k;.j:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3409e8.  v0:= new `java.util.ArrayList`;
  #L3409ec.  v1:= v2.`com.bumptech.glide.request.m.k.c` @type ^`java.util.List` @kind object;
  #L3409f0.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3409f6.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3409fc.  v0:= temp @kind object;
  #L3409fe.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L340a04.  v1:= temp;
  #L340a06.  if v1 == 0 then goto L340a1e;
  #L340a0a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L340a10.  v1:= temp @kind object;
  #L340a12.  v1:= (`com.bumptech.glide.request.m.h`) v1 @kind object;
  #L340a16.  call `f`(v1, v3, v4) @signature `Lcom/bumptech/glide/request/m/h;.f:(II)V` @kind interface;
  #L340a1c.  goto L3409fe;
  #L340a1e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.request.m.k` v3 @kind this) @signature `Lcom/bumptech/glide/request/m/k;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3408dc.  v0:= v3.`com.bumptech.glide.request.m.k.c` @type ^`java.util.List` @kind object;
  #L3408e0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3408e6.  v0:= temp;
  #L3408e8.  if v0 == 0 then goto L3408ee;
  #L3408ec.  return @kind void;
  #L3408ee.  call temp:= `g`(v3) @signature `Lcom/bumptech/glide/request/m/k;.g:()I` @kind direct;
  #L3408f4.  v0:= temp;
  #L3408f6.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/request/m/k;.f:()I` @kind direct;
  #L3408fc.  v1:= temp;
  #L3408fe.  call temp:= `i`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/m/k;.i:(II)Z` @kind direct;
  #L340904.  v2:= temp;
  #L340906.  if v2 != 0 then goto L34090c;
  #L34090a.  return @kind void;
  #L34090c.  call `j`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/m/k;.j:(II)V` @kind direct;
  #L340912.  call `b`(v3) @signature `Lcom/bumptech/glide/request/m/k;.b:()V` @kind virtual;
  #L340918.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.request.m.k` v2 @kind this) @signature `Lcom/bumptech/glide/request/m/k;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L34092c.  v0:= v2.`com.bumptech.glide.request.m.k.b` @type ^`android.view.View` @kind object;
  #L340930.  call temp:= `getViewTreeObserver`(v0) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L340936.  v0:= temp @kind object;
  #L340938.  call temp:= `isAlive`(v0) @signature `Landroid/view/ViewTreeObserver;.isAlive:()Z` @kind virtual;
  #L34093e.  v1:= temp;
  #L340940.  if v1 == 0 then goto L34094e;
  #L340944.  v1:= v2.`com.bumptech.glide.request.m.k.e` @type ^`com.bumptech.glide.request.m.j` @kind object;
  #L340948.  call `removeOnPreDrawListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.removeOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L34094e.  v0:= 0I;
  #L340950.  v2.`com.bumptech.glide.request.m.k.e` @type ^`com.bumptech.glide.request.m.j` := v0 @kind object;
  #L340954.  v0:= v2.`com.bumptech.glide.request.m.k.c` @type ^`java.util.List` @kind object;
  #L340958.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L34095e.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.request.m.k` v3 @kind this, `com.bumptech.glide.request.m.h` v4 @kind object) @signature `Lcom/bumptech/glide/request/m/k;.d:(Lcom/bumptech/glide/request/m/h;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L340970.  call temp:= `g`(v3) @signature `Lcom/bumptech/glide/request/m/k;.g:()I` @kind direct;
  #L340976.  v0:= temp;
  #L340978.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/request/m/k;.f:()I` @kind direct;
  #L34097e.  v1:= temp;
  #L340980.  call temp:= `i`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/m/k;.i:(II)Z` @kind direct;
  #L340986.  v2:= temp;
  #L340988.  if v2 == 0 then goto L340994;
  #L34098c.  call `f`(v4, v0, v1) @signature `Lcom/bumptech/glide/request/m/h;.f:(II)V` @kind interface;
  #L340992.  return @kind void;
  #L340994.  v0:= v3.`com.bumptech.glide.request.m.k.c` @type ^`java.util.List` @kind object;
  #L340998.  call temp:= `contains`(v0, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L34099e.  v0:= temp;
  #L3409a0.  if v0 != 0 then goto L3409ae;
  #L3409a4.  v0:= v3.`com.bumptech.glide.request.m.k.c` @type ^`java.util.List` @kind object;
  #L3409a8.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3409ae.  v4:= v3.`com.bumptech.glide.request.m.k.e` @type ^`com.bumptech.glide.request.m.j` @kind object;
  #L3409b2.  if v4 != 0 then goto L3409d6;
  #L3409b6.  v4:= v3.`com.bumptech.glide.request.m.k.b` @type ^`android.view.View` @kind object;
  #L3409ba.  call temp:= `getViewTreeObserver`(v4) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L3409c0.  v4:= temp @kind object;
  #L3409c2.  v0:= new `com.bumptech.glide.request.m.j`;
  #L3409c6.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/request/m/j;.<init>:(Lcom/bumptech/glide/request/m/k;)V` @kind direct;
  #L3409cc.  v3.`com.bumptech.glide.request.m.k.e` @type ^`com.bumptech.glide.request.m.j` := v0 @kind object;
  #L3409d0.  call `addOnPreDrawListener`(v4, v0) @signature `Landroid/view/ViewTreeObserver;.addOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L3409d6.  return @kind void;
}
procedure `void` `k`(`com.bumptech.glide.request.m.k` v1 @kind this, `com.bumptech.glide.request.m.h` v2 @kind object) @signature `Lcom/bumptech/glide/request/m/k;.k:(Lcom/bumptech/glide/request/m/h;)V` @AccessFlag  {
    temp;
    v0;

  #L340a30.  v0:= v1.`com.bumptech.glide.request.m.k.c` @type ^`java.util.List` @kind object;
  #L340a34.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L340a3a.  return @kind void;
}
