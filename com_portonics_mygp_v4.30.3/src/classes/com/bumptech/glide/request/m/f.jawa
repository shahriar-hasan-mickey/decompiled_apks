record `com.bumptech.glide.request.m.f` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.bumptech.glide.request.m.f` v0 @kind this) @signature `Lcom/bumptech/glide/request/m/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L34039c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3403a2.  return @kind void;
}
procedure `com.bumptech.glide.request.m.l` `a`(`com.bumptech.glide.request.m.f` v2 @kind this, `android.widget.ImageView` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/request/m/f;.a:(Landroid/widget/ImageView;Ljava/lang/Class;)Lcom/bumptech/glide/request/m/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L34031c.  v0:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L340320.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L340326.  v0:= temp;
  #L340328.  if v0 == 0 then goto L340338;
  #L34032c.  v4:= new `com.bumptech.glide.request.m.b`;
  #L340330.  call `<init>`(v4, v3) @signature `Lcom/bumptech/glide/request/m/b;.<init>:(Landroid/widget/ImageView;)V` @kind direct;
  #L340336.  return v4 @kind object;
  #L340338.  v0:= constclass @type ^`android.graphics.drawable.Drawable` @kind object;
  #L34033c.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L340342.  v0:= temp;
  #L340344.  if v0 == 0 then goto L340354;
  #L340348.  v4:= new `com.bumptech.glide.request.m.d`;
  #L34034c.  call `<init>`(v4, v3) @signature `Lcom/bumptech/glide/request/m/d;.<init>:(Landroid/widget/ImageView;)V` @kind direct;
  #L340352.  return v4 @kind object;
  #L340354.  v3:= new `java.lang.IllegalArgumentException`;
  #L340358.  v0:= new `java.lang.StringBuilder`;
  #L34035c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L340362.  v1:= "Unhandled class: " @kind object;
  #L340366.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34036c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L340372.  v4:= ", try .as*(Class).transcode(ResourceTranscoder)" @kind object;
  #L340376.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34037c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L340382.  v4:= temp @kind object;
  #L340384.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34038a.  throw v3;
}
