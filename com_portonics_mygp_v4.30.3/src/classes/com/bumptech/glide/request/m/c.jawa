record `com.bumptech.glide.request.m.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.bumptech.glide.request.m.i` @kind interface {
  `int` `com.bumptech.glide.request.m.c.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.request.m.c.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.d` `com.bumptech.glide.request.m.c.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.request.m.c` v1 @kind this) @signature `Lcom/bumptech/glide/request/m/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L340190.  v0:= -2147483648I;
  #L340194.  call `<init>`(v1, v0, v0) @signature `Lcom/bumptech/glide/request/m/c;.<init>:(II)V` @kind direct;
  #L34019a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.request.m.c` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/request/m/c;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3401ac.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3401b2.  call temp:= `t`(v4, v5) @signature `Lcom/bumptech/glide/s/p;.t:(II)Z` @kind static;
  #L3401b8.  v0:= temp;
  #L3401ba.  if v0 == 0 then goto L3401c8;
  #L3401be.  v3.`com.bumptech.glide.request.m.c.b` @type ^`int` := v4;
  #L3401c2.  v3.`com.bumptech.glide.request.m.c.c` @type ^`int` := v5;
  #L3401c6.  return @kind void;
  #L3401c8.  v0:= new `java.lang.IllegalArgumentException`;
  #L3401cc.  v1:= new `java.lang.StringBuilder`;
  #L3401d0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3401d6.  v2:= "Width and height must both be > 0 or Target#SIZE_ORIGINAL, but given width: " @kind object;
  #L3401da.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3401e0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3401e6.  v4:= " and height: " @kind object;
  #L3401ea.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3401f0.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3401f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3401fc.  v4:= temp @kind object;
  #L3401fe.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L340204.  throw v0;
}
procedure `void` `a`(`com.bumptech.glide.request.m.c` v0 @kind this) @signature `Lcom/bumptech/glide/request/m/c;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L340274.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.request.m.c` v0 @kind this, `com.bumptech.glide.request.m.h` v1 @kind object) @signature `Lcom/bumptech/glide/request/m/c;.b:(Lcom/bumptech/glide/request/m/h;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L34029c.  return @kind void;
}
procedure `void` `e`(`com.bumptech.glide.request.m.c` v0 @kind this, `com.bumptech.glide.request.d` v1 @kind object) @signature `Lcom/bumptech/glide/request/m/c;.e:(Lcom/bumptech/glide/request/d;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3402b0.  v0.`com.bumptech.glide.request.m.c.d` @type ^`com.bumptech.glide.request.d` := v1 @kind object;
  #L3402b4.  return @kind void;
}
procedure `void` `f`(`com.bumptech.glide.request.m.c` v0 @kind this) @signature `Lcom/bumptech/glide/request/m/c;.f:()V` @AccessFlag PUBLIC {
    temp;

  #L340238.  return @kind void;
}
procedure `void` `h`(`com.bumptech.glide.request.m.c` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/request/m/c;.h:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L34024c.  return @kind void;
}
procedure `void` `i`(`com.bumptech.glide.request.m.c` v0 @kind this) @signature `Lcom/bumptech/glide/request/m/c;.i:()V` @AccessFlag PUBLIC {
    temp;

  #L340288.  return @kind void;
}
procedure `void` `k`(`com.bumptech.glide.request.m.c` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/request/m/c;.k:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L340260.  return @kind void;
}
procedure `com.bumptech.glide.request.d` `l`(`com.bumptech.glide.request.m.c` v1 @kind this) @signature `Lcom/bumptech/glide/request/m/c;.l:()Lcom/bumptech/glide/request/d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L340178.  v0:= v1.`com.bumptech.glide.request.m.c.d` @type ^`com.bumptech.glide.request.d` @kind object;
  #L34017c.  return v0 @kind object;
}
procedure `void` `n`(`com.bumptech.glide.request.m.c` v2 @kind this, `com.bumptech.glide.request.m.h` v3 @kind object) @signature `Lcom/bumptech/glide/request/m/c;.n:(Lcom/bumptech/glide/request/m/h;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L340218.  v0:= v2.`com.bumptech.glide.request.m.c.b` @type ^`int`;
  #L34021c.  v1:= v2.`com.bumptech.glide.request.m.c.c` @type ^`int`;
  #L340220.  call `f`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/m/h;.f:(II)V` @kind interface;
  #L340226.  return @kind void;
}
