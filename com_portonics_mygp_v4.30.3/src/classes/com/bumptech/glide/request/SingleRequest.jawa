record `com.bumptech.glide.request.SingleRequest` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.request.d` @kind interface, `com.bumptech.glide.request.m.h` @kind interface, `com.bumptech.glide.request.j` @kind interface, `com.bumptech.glide.s.q.f` @kind interface {
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.SingleRequest.A` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.SingleRequest.B` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.SingleRequest.C` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.SingleRequest.D` @AccessFlag PRIVATE;
  `java.lang.RuntimeException` `com.bumptech.glide.request.SingleRequest.E` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.SingleRequest.d` @AccessFlag PRIVATE;
  `java.lang.String` `com.bumptech.glide.request.SingleRequest.e` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.s.q.l` `com.bumptech.glide.request.SingleRequest.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.h` `com.bumptech.glide.request.SingleRequest.g` @AccessFlag PRIVATE;
  `com.bumptech.glide.request.e` `com.bumptech.glide.request.SingleRequest.h` @AccessFlag PRIVATE;
  `android.content.Context` `com.bumptech.glide.request.SingleRequest.i` @AccessFlag PRIVATE;
  `com.bumptech.glide.g` `com.bumptech.glide.request.SingleRequest.j` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.request.SingleRequest.k` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.request.SingleRequest.l` @AccessFlag PRIVATE;
  `com.bumptech.glide.request.a` `com.bumptech.glide.request.SingleRequest.m` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.SingleRequest.n` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.SingleRequest.o` @AccessFlag PRIVATE;
  `com.bumptech.glide.Priority` `com.bumptech.glide.request.SingleRequest.p` @AccessFlag PRIVATE;
  `com.bumptech.glide.request.m.i` `com.bumptech.glide.request.SingleRequest.q` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.request.SingleRequest.r` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.f0` `com.bumptech.glide.request.SingleRequest.s` @AccessFlag PRIVATE;
  `com.bumptech.glide.request.n.h` `com.bumptech.glide.request.SingleRequest.t` @AccessFlag PRIVATE;
  `java.util.concurrent.Executor` `com.bumptech.glide.request.SingleRequest.u` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.u0` `com.bumptech.glide.request.SingleRequest.v` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.e0` `com.bumptech.glide.request.SingleRequest.w` @AccessFlag PRIVATE;
  `long` `com.bumptech.glide.request.SingleRequest.x` @AccessFlag PRIVATE;
  `com.bumptech.glide.request.SingleRequest$Status` `com.bumptech.glide.request.SingleRequest.y` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.SingleRequest.z` @AccessFlag PRIVATE;
}
global `androidx.core.util.e` `@@com.bumptech.glide.request.SingleRequest.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@com.bumptech.glide.request.SingleRequest.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/request/SingleRequest;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L33efc4.  v0:= new `com.bumptech.glide.request.k`;
  #L33efc8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/k;.<init>:()V` @kind direct;
  #L33efce.  v1:= 150I;
  #L33efd2.  call temp:= `d`(v1, v0) @signature `Lcom/bumptech/glide/s/q/h;.d:(ILcom/bumptech/glide/s/q/d;)Landroidx/core/util/e;` @kind static;
  #L33efd8.  v0:= temp @kind object;
  #L33efda.  `@@com.bumptech.glide.request.SingleRequest.b` @type ^`androidx.core.util.e` := v0 @kind object;
  #L33efde.  v0:= "Request" @kind object;
  #L33efe2.  v1:= 2I;
  #L33efe4.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L33efea.  v0:= temp;
  #L33efec.  `@@com.bumptech.glide.request.SingleRequest.c` @type ^`boolean` := v0 @kind boolean;
  #L33eff0.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L33f004.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33f00a.  v0:= `@@com.bumptech.glide.request.SingleRequest.c` @type ^`boolean` @kind boolean;
  #L33f00e.  if v0 == 0 then goto L33f024;
  #L33f012.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L33f018.  v0:= temp;
  #L33f01a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L33f020.  v0:= temp @kind object;
  #L33f022.  goto L33f026;
  #L33f024.  v0:= 0I;
  #L33f026.  v1.`com.bumptech.glide.request.SingleRequest.e` @type ^`java.lang.String` := v0 @kind object;
  #L33f02a.  call temp:= `a`() @signature `Lcom/bumptech/glide/s/q/l;.a:()Lcom/bumptech/glide/s/q/l;` @kind static;
  #L33f030.  v0:= temp @kind object;
  #L33f032.  v1.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.s.q.l` := v0 @kind object;
  #L33f036.  return @kind void;
}
procedure `void` `A`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.A:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33f3b0.  v0:= v1.`com.bumptech.glide.request.SingleRequest.h` @type ^`com.bumptech.glide.request.e` @kind object;
  #L33f3b4.  if v0 == 0 then goto L33f3be;
  #L33f3b8.  call `k`(v0, v1) @signature `Lcom/bumptech/glide/request/e;.k:(Lcom/bumptech/glide/request/d;)V` @kind interface;
  #L33f3be.  return @kind void;
}
procedure `com.bumptech.glide.request.SingleRequest` `B`(`android.content.Context` v17 @kind object, `com.bumptech.glide.g` v18 @kind object, `java.lang.Object` v19 @kind object, `java.lang.Class` v20 @kind object, `com.bumptech.glide.request.a` v21 @kind object, `int` v22 , `int` v23 , `com.bumptech.glide.Priority` v24 @kind object, `com.bumptech.glide.request.m.i` v25 @kind object, `com.bumptech.glide.request.h` v26 @kind object, `java.util.List` v27 @kind object, `com.bumptech.glide.request.e` v28 @kind object, `com.bumptech.glide.load.engine.f0` v29 @kind object, `com.bumptech.glide.request.n.h` v30 @kind object, `java.util.concurrent.Executor` v31 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.B:(Landroid/content/Context;Lcom/bumptech/glide/g;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/request/a;IILcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Ljava/util/List;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/load/engine/f0;Lcom/bumptech/glide/request/n/h;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/SingleRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L33ef0c.  v0:= `@@com.bumptech.glide.request.SingleRequest.b` @type ^`androidx.core.util.e` @kind object;
  #L33ef10.  call temp:= `b`(v0) @signature `Landroidx/core/util/e;.b:()Ljava/lang/Object;` @kind interface;
  #L33ef16.  v0:= temp @kind object;
  #L33ef18.  v0:= (`com.bumptech.glide.request.SingleRequest`) v0 @kind object;
  #L33ef1c.  if v0 != 0 then goto L33ef2a;
  #L33ef20.  v0:= new `com.bumptech.glide.request.SingleRequest`;
  #L33ef24.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.<init>:()V` @kind direct;
  #L33ef2a.  v1:= v0 @kind object;
  #L33ef2c.  v2:= v17 @kind object;
  #L33ef30.  v3:= v18 @kind object;
  #L33ef34.  v4:= v19 @kind object;
  #L33ef38.  v5:= v20 @kind object;
  #L33ef3c.  v6:= v21 @kind object;
  #L33ef40.  v7:= v22;
  #L33ef44.  v8:= v23;
  #L33ef48.  v9:= v24 @kind object;
  #L33ef4c.  v10:= v25 @kind object;
  #L33ef50.  v11:= v26 @kind object;
  #L33ef54.  v12:= v27 @kind object;
  #L33ef58.  v13:= v28 @kind object;
  #L33ef5c.  v14:= v29 @kind object;
  #L33ef60.  v15:= v30 @kind object;
  #L33ef64.  v16:= v31 @kind object;
  #L33ef68.  call `t`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lcom/bumptech/glide/request/SingleRequest;.t:(Landroid/content/Context;Lcom/bumptech/glide/g;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/request/a;IILcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Ljava/util/List;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/load/engine/f0;Lcom/bumptech/glide/request/n/h;Ljava/util/concurrent/Executor;)V` @kind direct;
  #L33ef6e.  return v0 @kind object;
}
procedure `void` `C`(`com.bumptech.glide.request.SingleRequest` v7 @kind this, `com.bumptech.glide.load.engine.GlideException` v8 @kind object, `int` v9 ) @signature `Lcom/bumptech/glide/request/SingleRequest;.C:(Lcom/bumptech/glide/load/engine/GlideException;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L33f400.  @monitorenter v7
  #L33f402.  v0:= v7.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.s.q.l` @kind object;
  #L33f406.  call `c`(v0) @signature `Lcom/bumptech/glide/s/q/l;.c:()V` @kind virtual;
  #L33f40c.  v0:= v7.`com.bumptech.glide.request.SingleRequest.E` @type ^`java.lang.RuntimeException` @kind object;
  #L33f410.  call `setOrigin`(v8, v0) @signature `Lcom/bumptech/glide/load/engine/GlideException;.setOrigin:(Ljava/lang/Exception;)V` @kind virtual;
  #L33f416.  v0:= v7.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.g` @kind object;
  #L33f41a.  call temp:= `g`(v0) @signature `Lcom/bumptech/glide/g;.g:()I` @kind virtual;
  #L33f420.  v0:= temp;
  #L33f422.  if v0 > v9 then goto L33f48c;
  #L33f426.  v9:= new `java.lang.StringBuilder`;
  #L33f42a.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33f430.  v1:= "Load failed for " @kind object;
  #L33f434.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f43a.  v1:= v7.`com.bumptech.glide.request.SingleRequest.k` @type ^`java.lang.Object` @kind object;
  #L33f43e.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f444.  v1:= " with size [" @kind object;
  #L33f448.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f44e.  v1:= v7.`com.bumptech.glide.request.SingleRequest.C` @type ^`int`;
  #L33f452.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f458.  v1:= "x" @kind object;
  #L33f45c.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f462.  v1:= v7.`com.bumptech.glide.request.SingleRequest.D` @type ^`int`;
  #L33f466.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f46c.  v1:= "]" @kind object;
  #L33f470.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f476.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33f47c.  v9:= 4I;
  #L33f47e.  if v0 > v9 then goto L33f48c;
  #L33f482.  v9:= "Glide" @kind object;
  #L33f486.  call `logRootCauses`(v8, v9) @signature `Lcom/bumptech/glide/load/engine/GlideException;.logRootCauses:(Ljava/lang/String;)V` @kind virtual;
  #L33f48c.  v9:= 0I;
  #L33f48e.  v7.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.load.engine.e0` := v9 @kind object;
  #L33f492.  v9:= `@@com.bumptech.glide.request.SingleRequest$Status.FAILED` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33f496.  v7.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` := v9 @kind object;
  #L33f49a.  v9:= 1I;
  #L33f49c.  v7.`com.bumptech.glide.request.SingleRequest.d` @type ^`boolean` := v9 @kind boolean;
  #L33f4a0.  v0:= 0I;
  #L33f4a2.  v1:= v7.`com.bumptech.glide.request.SingleRequest.r` @type ^`java.util.List` @kind object;
  #L33f4a6.  if v1 == 0 then goto L33f4e8;
  #L33f4aa.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L33f4b0.  v1:= temp @kind object;
  #L33f4b2.  v2:= 0I;
  #L33f4b4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L33f4ba.  v3:= temp;
  #L33f4bc.  if v3 == 0 then goto L33f4ea;
  #L33f4c0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L33f4c6.  v3:= temp @kind object;
  #L33f4c8.  v3:= (`com.bumptech.glide.request.h`) v3 @kind object;
  #L33f4cc.  v4:= v7.`com.bumptech.glide.request.SingleRequest.k` @type ^`java.lang.Object` @kind object;
  #L33f4d0.  v5:= v7.`com.bumptech.glide.request.SingleRequest.q` @type ^`com.bumptech.glide.request.m.i` @kind object;
  #L33f4d4.  call temp:= `u`(v7) @signature `Lcom/bumptech/glide/request/SingleRequest;.u:()Z` @kind direct;
  #L33f4da.  v6:= temp;
  #L33f4dc.  call temp:= `g`(v3, v8, v4, v5, v6) @signature `Lcom/bumptech/glide/request/h;.g:(Lcom/bumptech/glide/load/engine/GlideException;Ljava/lang/Object;Lcom/bumptech/glide/request/m/i;Z)Z` @kind interface;
  #L33f4e2.  v3:= temp;
  #L33f4e4.  v2:= v2 ^| v3 @kind int;
  #L33f4e6.  goto L33f4b4;
  #L33f4e8.  v2:= 0I;
  #L33f4ea.  v1:= v7.`com.bumptech.glide.request.SingleRequest.g` @type ^`com.bumptech.glide.request.h` @kind object;
  #L33f4ee.  if v1 == 0 then goto L33f510;
  #L33f4f2.  v3:= v7.`com.bumptech.glide.request.SingleRequest.k` @type ^`java.lang.Object` @kind object;
  #L33f4f6.  v4:= v7.`com.bumptech.glide.request.SingleRequest.q` @type ^`com.bumptech.glide.request.m.i` @kind object;
  #L33f4fa.  call temp:= `u`(v7) @signature `Lcom/bumptech/glide/request/SingleRequest;.u:()Z` @kind direct;
  #L33f500.  v5:= temp;
  #L33f502.  call temp:= `g`(v1, v8, v3, v4, v5) @signature `Lcom/bumptech/glide/request/h;.g:(Lcom/bumptech/glide/load/engine/GlideException;Ljava/lang/Object;Lcom/bumptech/glide/request/m/i;Z)Z` @kind interface;
  #L33f508.  v8:= temp;
  #L33f50a.  if v8 == 0 then goto L33f510;
  #L33f50e.  goto L33f512;
  #L33f510.  v9:= 0I;
  #L33f512.  v8:= v2 ^| v9 @kind int;
  #L33f516.  if v8 != 0 then goto L33f520;
  #L33f51a.  call `F`(v7) @signature `Lcom/bumptech/glide/request/SingleRequest;.F:()V` @kind direct;
  #L33f520.  v7.`com.bumptech.glide.request.SingleRequest.d` @type ^`boolean` := v0 @kind boolean;
  #L33f524.  call `z`(v7) @signature `Lcom/bumptech/glide/request/SingleRequest;.z:()V` @kind direct;
  #L33f52a.  @monitorexit v7
  #L33f52c.  return @kind void;
  #L33f52e.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33f530.  v7.`com.bumptech.glide.request.SingleRequest.d` @type ^`boolean` := v0 @kind boolean;
  #L33f534.  throw v8;
  #L33f536.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33f538.  @monitorexit v7
  #L33f53a.  goto L33f53e;
  #L33f53c.  throw v8;
  #L33f53e.  goto L33f53c;
  catch `java.lang.Throwable` @[L33f402..L33f4a0] goto L33f536;
  catch `java.lang.Throwable` @[L33f4a2..L33f520] goto L33f52e;
  catch `java.lang.Throwable` @[L33f520..L33f52a] goto L33f536;
  catch `java.lang.Throwable` @[L33f530..L33f536] goto L33f536;
}
procedure `void` `D`(`com.bumptech.glide.request.SingleRequest` v10 @kind this, `com.bumptech.glide.load.engine.u0` v11 @kind object, `java.lang.Object` v12 @kind object, `com.bumptech.glide.load.DataSource` v13 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.D:(Lcom/bumptech/glide/load/engine/u0;Ljava/lang/Object;Lcom/bumptech/glide/load/DataSource;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L33f6fc.  @monitorenter v10
  #L33f6fe.  call temp:= `u`(v10) @signature `Lcom/bumptech/glide/request/SingleRequest;.u:()Z` @kind direct;
  #L33f704.  v6:= temp;
  #L33f706.  v0:= `@@com.bumptech.glide.request.SingleRequest$Status.COMPLETE` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33f70a.  v10.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` := v0 @kind object;
  #L33f70e.  v10.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.load.engine.u0` := v11 @kind object;
  #L33f712.  v11:= v10.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.g` @kind object;
  #L33f716.  call temp:= `g`(v11) @signature `Lcom/bumptech/glide/g;.g:()I` @kind virtual;
  #L33f71c.  v11:= temp;
  #L33f71e.  v0:= 3I;
  #L33f720.  if v11 > v0 then goto L33f7c6;
  #L33f724.  v11:= new `java.lang.StringBuilder`;
  #L33f728.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33f72e.  v0:= "Finished loading " @kind object;
  #L33f732.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f738.  call temp:= `getClass`(v12) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L33f73e.  v0:= temp @kind object;
  #L33f740.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L33f746.  v0:= temp @kind object;
  #L33f748.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f74e.  v0:= " from " @kind object;
  #L33f752.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f758.  call temp:= `append`(v11, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f75e.  v0:= " for " @kind object;
  #L33f762.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f768.  v0:= v10.`com.bumptech.glide.request.SingleRequest.k` @type ^`java.lang.Object` @kind object;
  #L33f76c.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f772.  v0:= " with size [" @kind object;
  #L33f776.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f77c.  v0:= v10.`com.bumptech.glide.request.SingleRequest.C` @type ^`int`;
  #L33f780.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f786.  v0:= "x" @kind object;
  #L33f78a.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f790.  v0:= v10.`com.bumptech.glide.request.SingleRequest.D` @type ^`int`;
  #L33f794.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f79a.  v0:= "] in " @kind object;
  #L33f79e.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f7a4.  v0:= v10.`com.bumptech.glide.request.SingleRequest.x` @type ^`long` @kind wide;
  #L33f7a8.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/s/j;.a:(J)D` @kind static;
  #L33f7ae.  v0:= temp @kind wide;
  #L33f7b0.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f7b6.  v0:= " ms" @kind object;
  #L33f7ba.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f7c0.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33f7c6.  v11:= 1I;
  #L33f7c8.  v10.`com.bumptech.glide.request.SingleRequest.d` @type ^`boolean` := v11 @kind boolean;
  #L33f7cc.  v7:= 0I;
  #L33f7ce.  v0:= v10.`com.bumptech.glide.request.SingleRequest.r` @type ^`java.util.List` @kind object;
  #L33f7d2.  if v0 == 0 then goto L33f812;
  #L33f7d6.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L33f7dc.  v8:= temp @kind object;
  #L33f7de.  v9:= 0I;
  #L33f7e0.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L33f7e6.  v0:= temp;
  #L33f7e8.  if v0 == 0 then goto L33f814;
  #L33f7ec.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L33f7f2.  v0:= temp @kind object;
  #L33f7f4.  v0:= (`com.bumptech.glide.request.h`) v0 @kind object;
  #L33f7f8.  v2:= v10.`com.bumptech.glide.request.SingleRequest.k` @type ^`java.lang.Object` @kind object;
  #L33f7fc.  v3:= v10.`com.bumptech.glide.request.SingleRequest.q` @type ^`com.bumptech.glide.request.m.i` @kind object;
  #L33f800.  v1:= v12 @kind object;
  #L33f802.  v4:= v13 @kind object;
  #L33f804.  v5:= v6;
  #L33f806.  call temp:= `j`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/request/h;.j:(Ljava/lang/Object;Ljava/lang/Object;Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/load/DataSource;Z)Z` @kind interface;
  #L33f80c.  v0:= temp;
  #L33f80e.  v9:= v9 ^| v0 @kind int;
  #L33f810.  goto L33f7e0;
  #L33f812.  v9:= 0I;
  #L33f814.  v0:= v10.`com.bumptech.glide.request.SingleRequest.g` @type ^`com.bumptech.glide.request.h` @kind object;
  #L33f818.  if v0 == 0 then goto L33f838;
  #L33f81c.  v2:= v10.`com.bumptech.glide.request.SingleRequest.k` @type ^`java.lang.Object` @kind object;
  #L33f820.  v3:= v10.`com.bumptech.glide.request.SingleRequest.q` @type ^`com.bumptech.glide.request.m.i` @kind object;
  #L33f824.  v1:= v12 @kind object;
  #L33f826.  v4:= v13 @kind object;
  #L33f828.  v5:= v6;
  #L33f82a.  call temp:= `j`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/request/h;.j:(Ljava/lang/Object;Ljava/lang/Object;Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/load/DataSource;Z)Z` @kind interface;
  #L33f830.  v0:= temp;
  #L33f832.  if v0 == 0 then goto L33f838;
  #L33f836.  goto L33f83a;
  #L33f838.  v11:= 0I;
  #L33f83a.  v11:= v11 ^| v9 @kind int;
  #L33f83c.  if v11 != 0 then goto L33f856;
  #L33f840.  v11:= v10.`com.bumptech.glide.request.SingleRequest.t` @type ^`com.bumptech.glide.request.n.h` @kind object;
  #L33f844.  call temp:= `a`(v11, v13, v6) @signature `Lcom/bumptech/glide/request/n/h;.a:(Lcom/bumptech/glide/load/DataSource;Z)Lcom/bumptech/glide/request/n/g;` @kind interface;
  #L33f84a.  v11:= temp @kind object;
  #L33f84c.  v13:= v10.`com.bumptech.glide.request.SingleRequest.q` @type ^`com.bumptech.glide.request.m.i` @kind object;
  #L33f850.  call `c`(v13, v12, v11) @signature `Lcom/bumptech/glide/request/m/i;.c:(Ljava/lang/Object;Lcom/bumptech/glide/request/n/g;)V` @kind interface;
  #L33f856.  v10.`com.bumptech.glide.request.SingleRequest.d` @type ^`boolean` := v7 @kind boolean;
  #L33f85a.  call `A`(v10) @signature `Lcom/bumptech/glide/request/SingleRequest;.A:()V` @kind direct;
  #L33f860.  @monitorexit v10
  #L33f862.  return @kind void;
  #L33f864.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33f866.  v10.`com.bumptech.glide.request.SingleRequest.d` @type ^`boolean` := v7 @kind boolean;
  #L33f86a.  throw v11;
  #L33f86c.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33f86e.  @monitorexit v10
  #L33f870.  goto L33f874;
  #L33f872.  throw v11;
  #L33f874.  goto L33f872;
  catch `java.lang.Throwable` @[L33f6fe..L33f7cc] goto L33f86c;
  catch `java.lang.Throwable` @[L33f7ce..L33f856] goto L33f864;
  catch `java.lang.Throwable` @[L33f856..L33f860] goto L33f86c;
  catch `java.lang.Throwable` @[L33f866..L33f86c] goto L33f86c;
}
procedure `void` `E`(`com.bumptech.glide.request.SingleRequest` v1 @kind this, `com.bumptech.glide.load.engine.u0` v2 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.E:(Lcom/bumptech/glide/load/engine/u0;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33fb78.  v0:= v1.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.f0` @kind object;
  #L33fb7c.  call `j`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/f0;.j:(Lcom/bumptech/glide/load/engine/u0;)V` @kind virtual;
  #L33fb82.  v2:= 0I;
  #L33fb84.  v1.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.load.engine.u0` := v2 @kind object;
  #L33fb88.  return @kind void;
}
procedure `void` `F`(`com.bumptech.glide.request.SingleRequest` v2 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.F:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33fb9c.  @monitorenter v2
  #L33fb9e.  call temp:= `n`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.n:()Z` @kind direct;
  #L33fba4.  v0:= temp;
  #L33fba6.  if v0 != 0 then goto L33fbae;
  #L33fbaa.  @monitorexit v2
  #L33fbac.  return @kind void;
  #L33fbae.  v0:= 0I;
  #L33fbb0.  v1:= v2.`com.bumptech.glide.request.SingleRequest.k` @type ^`java.lang.Object` @kind object;
  #L33fbb4.  if v1 != 0 then goto L33fbc0;
  #L33fbb8.  call temp:= `r`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.r:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L33fbbe.  v0:= temp @kind object;
  #L33fbc0.  if v0 != 0 then goto L33fbcc;
  #L33fbc4.  call temp:= `q`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.q:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L33fbca.  v0:= temp @kind object;
  #L33fbcc.  if v0 != 0 then goto L33fbd8;
  #L33fbd0.  call temp:= `s`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.s:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L33fbd6.  v0:= temp @kind object;
  #L33fbd8.  v1:= v2.`com.bumptech.glide.request.SingleRequest.q` @type ^`com.bumptech.glide.request.m.i` @kind object;
  #L33fbdc.  call `h`(v1, v0) @signature `Lcom/bumptech/glide/request/m/i;.h:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L33fbe2.  @monitorexit v2
  #L33fbe4.  return @kind void;
  #L33fbe6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33fbe8.  @monitorexit v2
  #L33fbea.  throw v0;
  catch `java.lang.Throwable` @[L33fb9e..L33fba6] goto L33fbe6;
  catch `java.lang.Throwable` @[L33fbb0..L33fbe2] goto L33fbe6;
}
procedure `void` `k`(`com.bumptech.glide.request.SingleRequest` v2 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.k:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33f048.  v0:= v2.`com.bumptech.glide.request.SingleRequest.d` @type ^`boolean` @kind boolean;
  #L33f04c.  if v0 != 0 then goto L33f052;
  #L33f050.  return @kind void;
  #L33f052.  v0:= new `java.lang.IllegalStateException`;
  #L33f056.  v1:= "You can't start or clear loads in RequestListener or Target callbacks. If you're trying to start a fallback request when a load fails, use RequestBuilder#error(RequestBuilder). Otherwise consider posting your into() or clear() calls to the main thread using a Handler instead." @kind object;
  #L33f05a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33f060.  throw v0;
}
procedure `boolean` `m`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.m:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33ebd4.  v0:= v1.`com.bumptech.glide.request.SingleRequest.h` @type ^`com.bumptech.glide.request.e` @kind object;
  #L33ebd8.  if v0 == 0 then goto L33ebee;
  #L33ebdc.  call temp:= `m`(v0, v1) @signature `Lcom/bumptech/glide/request/e;.m:(Lcom/bumptech/glide/request/d;)Z` @kind interface;
  #L33ebe2.  v0:= temp;
  #L33ebe4.  if v0 == 0 then goto L33ebea;
  #L33ebe8.  goto L33ebee;
  #L33ebea.  v0:= 0I;
  #L33ebec.  goto L33ebf0;
  #L33ebee.  v0:= 1I;
  #L33ebf0.  return v0;
}
procedure `boolean` `n`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.n:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33ec04.  v0:= v1.`com.bumptech.glide.request.SingleRequest.h` @type ^`com.bumptech.glide.request.e` @kind object;
  #L33ec08.  if v0 == 0 then goto L33ec1e;
  #L33ec0c.  call temp:= `f`(v0, v1) @signature `Lcom/bumptech/glide/request/e;.f:(Lcom/bumptech/glide/request/d;)Z` @kind interface;
  #L33ec12.  v0:= temp;
  #L33ec14.  if v0 == 0 then goto L33ec1a;
  #L33ec18.  goto L33ec1e;
  #L33ec1a.  v0:= 0I;
  #L33ec1c.  goto L33ec20;
  #L33ec1e.  v0:= 1I;
  #L33ec20.  return v0;
}
procedure `boolean` `o`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.o:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33ec34.  v0:= v1.`com.bumptech.glide.request.SingleRequest.h` @type ^`com.bumptech.glide.request.e` @kind object;
  #L33ec38.  if v0 == 0 then goto L33ec4e;
  #L33ec3c.  call temp:= `i`(v0, v1) @signature `Lcom/bumptech/glide/request/e;.i:(Lcom/bumptech/glide/request/d;)Z` @kind interface;
  #L33ec42.  v0:= temp;
  #L33ec44.  if v0 == 0 then goto L33ec4a;
  #L33ec48.  goto L33ec4e;
  #L33ec4a.  v0:= 0I;
  #L33ec4c.  goto L33ec50;
  #L33ec4e.  v0:= 1I;
  #L33ec50.  return v0;
}
procedure `void` `p`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.p:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33f1f8.  call `k`(v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.k:()V` @kind direct;
  #L33f1fe.  v0:= v1.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.s.q.l` @kind object;
  #L33f202.  call `c`(v0) @signature `Lcom/bumptech/glide/s/q/l;.c:()V` @kind virtual;
  #L33f208.  v0:= v1.`com.bumptech.glide.request.SingleRequest.q` @type ^`com.bumptech.glide.request.m.i` @kind object;
  #L33f20c.  call `b`(v0, v1) @signature `Lcom/bumptech/glide/request/m/i;.b:(Lcom/bumptech/glide/request/m/h;)V` @kind interface;
  #L33f212.  v0:= v1.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.load.engine.e0` @kind object;
  #L33f216.  if v0 == 0 then goto L33f226;
  #L33f21a.  call `a`(v0) @signature `Lcom/bumptech/glide/load/engine/e0;.a:()V` @kind virtual;
  #L33f220.  v0:= 0I;
  #L33f222.  v1.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.load.engine.e0` := v0 @kind object;
  #L33f226.  return @kind void;
}
procedure `android.graphics.drawable.Drawable` `q`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.q:()Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33ea78.  v0:= v1.`com.bumptech.glide.request.SingleRequest.z` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33ea7c.  if v0 != 0 then goto L33eabc;
  #L33ea80.  v0:= v1.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33ea84.  call temp:= `r`(v0) @signature `Lcom/bumptech/glide/request/a;.r:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L33ea8a.  v0:= temp @kind object;
  #L33ea8c.  v1.`com.bumptech.glide.request.SingleRequest.z` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L33ea90.  if v0 != 0 then goto L33eabc;
  #L33ea94.  v0:= v1.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33ea98.  call temp:= `q`(v0) @signature `Lcom/bumptech/glide/request/a;.q:()I` @kind virtual;
  #L33ea9e.  v0:= temp;
  #L33eaa0.  if v0 <= 0 then goto L33eabc;
  #L33eaa4.  v0:= v1.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33eaa8.  call temp:= `q`(v0) @signature `Lcom/bumptech/glide/request/a;.q:()I` @kind virtual;
  #L33eaae.  v0:= temp;
  #L33eab0.  call temp:= `w`(v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.w:(I)Landroid/graphics/drawable/Drawable;` @kind direct;
  #L33eab6.  v0:= temp @kind object;
  #L33eab8.  v1.`com.bumptech.glide.request.SingleRequest.z` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L33eabc.  v0:= v1.`com.bumptech.glide.request.SingleRequest.z` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33eac0.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable` `r`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.r:()Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33ead4.  v0:= v1.`com.bumptech.glide.request.SingleRequest.B` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33ead8.  if v0 != 0 then goto L33eb18;
  #L33eadc.  v0:= v1.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33eae0.  call temp:= `t`(v0) @signature `Lcom/bumptech/glide/request/a;.t:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L33eae6.  v0:= temp @kind object;
  #L33eae8.  v1.`com.bumptech.glide.request.SingleRequest.B` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L33eaec.  if v0 != 0 then goto L33eb18;
  #L33eaf0.  v0:= v1.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33eaf4.  call temp:= `u`(v0) @signature `Lcom/bumptech/glide/request/a;.u:()I` @kind virtual;
  #L33eafa.  v0:= temp;
  #L33eafc.  if v0 <= 0 then goto L33eb18;
  #L33eb00.  v0:= v1.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33eb04.  call temp:= `u`(v0) @signature `Lcom/bumptech/glide/request/a;.u:()I` @kind virtual;
  #L33eb0a.  v0:= temp;
  #L33eb0c.  call temp:= `w`(v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.w:(I)Landroid/graphics/drawable/Drawable;` @kind direct;
  #L33eb12.  v0:= temp @kind object;
  #L33eb14.  v1.`com.bumptech.glide.request.SingleRequest.B` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L33eb18.  v0:= v1.`com.bumptech.glide.request.SingleRequest.B` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33eb1c.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable` `s`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.s:()Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33eb30.  v0:= v1.`com.bumptech.glide.request.SingleRequest.A` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33eb34.  if v0 != 0 then goto L33eb74;
  #L33eb38.  v0:= v1.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33eb3c.  call temp:= `B`(v0) @signature `Lcom/bumptech/glide/request/a;.B:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L33eb42.  v0:= temp @kind object;
  #L33eb44.  v1.`com.bumptech.glide.request.SingleRequest.A` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L33eb48.  if v0 != 0 then goto L33eb74;
  #L33eb4c.  v0:= v1.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33eb50.  call temp:= `D`(v0) @signature `Lcom/bumptech/glide/request/a;.D:()I` @kind virtual;
  #L33eb56.  v0:= temp;
  #L33eb58.  if v0 <= 0 then goto L33eb74;
  #L33eb5c.  v0:= v1.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33eb60.  call temp:= `D`(v0) @signature `Lcom/bumptech/glide/request/a;.D:()I` @kind virtual;
  #L33eb66.  v0:= temp;
  #L33eb68.  call temp:= `w`(v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.w:(I)Landroid/graphics/drawable/Drawable;` @kind direct;
  #L33eb6e.  v0:= temp @kind object;
  #L33eb70.  v1.`com.bumptech.glide.request.SingleRequest.A` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L33eb74.  v0:= v1.`com.bumptech.glide.request.SingleRequest.A` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33eb78.  return v0 @kind object;
}
procedure `void` `t`(`com.bumptech.glide.request.SingleRequest` v0 @kind this, `android.content.Context` v1 @kind object, `com.bumptech.glide.g` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Class` v4 @kind object, `com.bumptech.glide.request.a` v5 @kind object, `int` v6 , `int` v7 , `com.bumptech.glide.Priority` v8 @kind object, `com.bumptech.glide.request.m.i` v9 @kind object, `com.bumptech.glide.request.h` v10 @kind object, `java.util.List` v11 @kind object, `com.bumptech.glide.request.e` v12 @kind object, `com.bumptech.glide.load.engine.f0` v13 @kind object, `com.bumptech.glide.request.n.h` v14 @kind object, `java.util.concurrent.Executor` v15 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.t:(Landroid/content/Context;Lcom/bumptech/glide/g;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/request/a;IILcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/h;Ljava/util/List;Lcom/bumptech/glide/request/e;Lcom/bumptech/glide/load/engine/f0;Lcom/bumptech/glide/request/n/h;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE {
    temp;

  #L33f2c0.  @monitorenter v0
  #L33f2c2.  v0.`com.bumptech.glide.request.SingleRequest.i` @type ^`android.content.Context` := v1 @kind object;
  #L33f2c6.  v0.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.g` := v2 @kind object;
  #L33f2ca.  v0.`com.bumptech.glide.request.SingleRequest.k` @type ^`java.lang.Object` := v3 @kind object;
  #L33f2ce.  v0.`com.bumptech.glide.request.SingleRequest.l` @type ^`java.lang.Class` := v4 @kind object;
  #L33f2d2.  v0.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` := v5 @kind object;
  #L33f2d6.  v0.`com.bumptech.glide.request.SingleRequest.n` @type ^`int` := v6;
  #L33f2da.  v0.`com.bumptech.glide.request.SingleRequest.o` @type ^`int` := v7;
  #L33f2de.  v0.`com.bumptech.glide.request.SingleRequest.p` @type ^`com.bumptech.glide.Priority` := v8 @kind object;
  #L33f2e2.  v0.`com.bumptech.glide.request.SingleRequest.q` @type ^`com.bumptech.glide.request.m.i` := v9 @kind object;
  #L33f2e6.  v0.`com.bumptech.glide.request.SingleRequest.g` @type ^`com.bumptech.glide.request.h` := v10 @kind object;
  #L33f2ea.  v0.`com.bumptech.glide.request.SingleRequest.r` @type ^`java.util.List` := v11 @kind object;
  #L33f2ee.  v0.`com.bumptech.glide.request.SingleRequest.h` @type ^`com.bumptech.glide.request.e` := v12 @kind object;
  #L33f2f2.  v0.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.f0` := v13 @kind object;
  #L33f2f6.  v0.`com.bumptech.glide.request.SingleRequest.t` @type ^`com.bumptech.glide.request.n.h` := v14 @kind object;
  #L33f2fa.  v0.`com.bumptech.glide.request.SingleRequest.u` @type ^`java.util.concurrent.Executor` := v15 @kind object;
  #L33f2fe.  v1:= `@@com.bumptech.glide.request.SingleRequest$Status.PENDING` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33f302.  v0.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` := v1 @kind object;
  #L33f306.  v1:= v0.`com.bumptech.glide.request.SingleRequest.E` @type ^`java.lang.RuntimeException` @kind object;
  #L33f30a.  if v1 != 0 then goto L33f32c;
  #L33f30e.  call temp:= `i`(v2) @signature `Lcom/bumptech/glide/g;.i:()Z` @kind virtual;
  #L33f314.  v1:= temp;
  #L33f316.  if v1 == 0 then goto L33f32c;
  #L33f31a.  v1:= new `java.lang.RuntimeException`;
  #L33f31e.  v2:= "Glide request origin trace" @kind object;
  #L33f322.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33f328.  v0.`com.bumptech.glide.request.SingleRequest.E` @type ^`java.lang.RuntimeException` := v1 @kind object;
  #L33f32c.  @monitorexit v0
  #L33f32e.  return @kind void;
  #L33f330.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33f332.  @monitorexit v0
  #L33f334.  throw v1;
  catch `java.lang.Throwable` @[L33f2c2..L33f32c] goto L33f330;
}
procedure `boolean` `u`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.u:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33ede8.  v0:= v1.`com.bumptech.glide.request.SingleRequest.h` @type ^`com.bumptech.glide.request.e` @kind object;
  #L33edec.  if v0 == 0 then goto L33ee02;
  #L33edf0.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/request/e;.b:()Z` @kind interface;
  #L33edf6.  v0:= temp;
  #L33edf8.  if v0 != 0 then goto L33edfe;
  #L33edfc.  goto L33ee02;
  #L33edfe.  v0:= 0I;
  #L33ee00.  goto L33ee04;
  #L33ee02.  v0:= 1I;
  #L33ee04.  return v0;
}
procedure `boolean` `v`(`com.bumptech.glide.request.SingleRequest` v3 @kind this, `com.bumptech.glide.request.SingleRequest` v4 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.v:(Lcom/bumptech/glide/request/SingleRequest;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L33ee8c.  @monitorenter v3
  #L33ee8e.  @monitorenter v4
  #L33ee90.  v0:= v3.`com.bumptech.glide.request.SingleRequest.r` @type ^`java.util.List` @kind object;
  #L33ee94.  v1:= 0I;
  #L33ee96.  if v0 != 0 then goto L33ee9e;
  #L33ee9a.  v0:= 0I;
  #L33ee9c.  goto L33eea6;
  #L33ee9e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L33eea4.  v0:= temp;
  #L33eea6.  v2:= v4.`com.bumptech.glide.request.SingleRequest.r` @type ^`java.util.List` @kind object;
  #L33eeaa.  if v2 != 0 then goto L33eeb2;
  #L33eeae.  v2:= 0I;
  #L33eeb0.  goto L33eeba;
  #L33eeb2.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L33eeb8.  v2:= temp;
  #L33eeba.  if v0 != v2 then goto L33eec0;
  #L33eebe.  v1:= 1I;
  #L33eec0.  @monitorexit v4
  #L33eec2.  @monitorexit v3
  #L33eec4.  return v1;
  #L33eec6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33eec8.  @monitorexit v4
  #L33eeca.  throw v0;
  #L33eecc.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33eece.  @monitorexit v3
  #L33eed0.  throw v4;
  catch `java.lang.Throwable` @[L33ee8e..L33ee90] goto L33eecc;
  catch `java.lang.Throwable` @[L33ee90..L33eec2] goto L33eec6;
  catch `java.lang.Throwable` @[L33eec8..L33eeca] goto L33eec6;
  catch `java.lang.Throwable` @[L33eeca..L33eecc] goto L33eecc;
}
procedure `android.graphics.drawable.Drawable` `w`(`com.bumptech.glide.request.SingleRequest` v2 @kind this, `int` v3 ) @signature `Lcom/bumptech/glide/request/SingleRequest;.w:(I)Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33eb8c.  v0:= v2.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33eb90.  call temp:= `I`(v0) @signature `Lcom/bumptech/glide/request/a;.I:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L33eb96.  v0:= temp @kind object;
  #L33eb98.  if v0 == 0 then goto L33ebaa;
  #L33eb9c.  v0:= v2.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33eba0.  call temp:= `I`(v0) @signature `Lcom/bumptech/glide/request/a;.I:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L33eba6.  v0:= temp @kind object;
  #L33eba8.  goto L33ebb6;
  #L33ebaa.  v0:= v2.`com.bumptech.glide.request.SingleRequest.i` @type ^`android.content.Context` @kind object;
  #L33ebae.  call temp:= `getTheme`(v0) @signature `Landroid/content/Context;.getTheme:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L33ebb4.  v0:= temp @kind object;
  #L33ebb6.  v1:= v2.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.g` @kind object;
  #L33ebba.  call temp:= `a`(v1, v3, v0) @signature `Lcom/bumptech/glide/load/n/d/a;.a:(Landroid/content/Context;ILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L33ebc0.  v3:= temp @kind object;
  #L33ebc2.  return v3 @kind object;
}
procedure `void` `x`(`com.bumptech.glide.request.SingleRequest` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.x:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33f354.  v0:= new `java.lang.StringBuilder`;
  #L33f358.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33f35e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f364.  v2:= " this: " @kind object;
  #L33f368.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f36e.  v2:= v1.`com.bumptech.glide.request.SingleRequest.e` @type ^`java.lang.String` @kind object;
  #L33f372.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f378.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33f37e.  return @kind void;
}
procedure `int` `y`(`int` v1 , `float` v2 ) @signature `Lcom/bumptech/glide/request/SingleRequest;.y:(IF)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L33ef98.  v0:= -2147483648I;
  #L33ef9c.  if v1 != v0 then goto L33efa2;
  #L33efa0.  goto L33efb0;
  #L33efa2.  v1:= (`float`) v1 @kind i2f;
  #L33efa4.  v2:= v2 * v1 @kind float;
  #L33efa8.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L33efae.  v1:= temp;
  #L33efb0.  return v1;
}
procedure `void` `z`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.z:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33f390.  v0:= v1.`com.bumptech.glide.request.SingleRequest.h` @type ^`com.bumptech.glide.request.e` @kind object;
  #L33f394.  if v0 == 0 then goto L33f39e;
  #L33f398.  call `a`(v0, v1) @signature `Lcom/bumptech/glide/request/e;.a:(Lcom/bumptech/glide/request/d;)V` @kind interface;
  #L33f39e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.request.SingleRequest` v1 @kind this, `com.bumptech.glide.load.engine.GlideException` v2 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.a:(Lcom/bumptech/glide/load/engine/GlideException;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33f3d0.  @monitorenter v1
  #L33f3d2.  v0:= 5I;
  #L33f3d4.  call `C`(v1, v2, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.C:(Lcom/bumptech/glide/load/engine/GlideException;I)V` @kind direct;
  #L33f3da.  @monitorexit v1
  #L33f3dc.  return @kind void;
  #L33f3de.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33f3e0.  @monitorexit v1
  #L33f3e2.  throw v2;
  catch `java.lang.Throwable` @[L33f3d4..L33f3da] goto L33f3de;
}
procedure `void` `b`(`com.bumptech.glide.request.SingleRequest` v3 @kind this, `com.bumptech.glide.load.engine.u0` v4 @kind object, `com.bumptech.glide.load.DataSource` v5 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.b:(Lcom/bumptech/glide/load/engine/u0;Lcom/bumptech/glide/load/DataSource;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L33f578.  @monitorenter v3
  #L33f57a.  v0:= v3.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.s.q.l` @kind object;
  #L33f57e.  call `c`(v0) @signature `Lcom/bumptech/glide/s/q/l;.c:()V` @kind virtual;
  #L33f584.  v0:= 0I;
  #L33f586.  v3.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.load.engine.e0` := v0 @kind object;
  #L33f58a.  if v4 != 0 then goto L33f5d2;
  #L33f58e.  v4:= new `com.bumptech.glide.load.engine.GlideException`;
  #L33f592.  v5:= new `java.lang.StringBuilder`;
  #L33f596.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33f59c.  v0:= "Expected to receive a Resource<R> with an object of " @kind object;
  #L33f5a0.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f5a6.  v0:= v3.`com.bumptech.glide.request.SingleRequest.l` @type ^`java.lang.Class` @kind object;
  #L33f5aa.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f5b0.  v0:= " inside, but instead got null." @kind object;
  #L33f5b4.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f5ba.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33f5c0.  v5:= temp @kind object;
  #L33f5c2.  call `<init>`(v4, v5) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33f5c8.  call `a`(v3, v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.a:(Lcom/bumptech/glide/load/engine/GlideException;)V` @kind virtual;
  #L33f5ce.  @monitorexit v3
  #L33f5d0.  return @kind void;
  #L33f5d2.  call temp:= `get`(v4) @signature `Lcom/bumptech/glide/load/engine/u0;.get:()Ljava/lang/Object;` @kind interface;
  #L33f5d8.  v0:= temp @kind object;
  #L33f5da.  if v0 == 0 then goto L33f620;
  #L33f5de.  v1:= v3.`com.bumptech.glide.request.SingleRequest.l` @type ^`java.lang.Class` @kind object;
  #L33f5e2.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L33f5e8.  v2:= temp @kind object;
  #L33f5ea.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L33f5f0.  v1:= temp;
  #L33f5f2.  if v1 != 0 then goto L33f5f8;
  #L33f5f6.  goto L33f620;
  #L33f5f8.  call temp:= `o`(v3) @signature `Lcom/bumptech/glide/request/SingleRequest;.o:()Z` @kind direct;
  #L33f5fe.  v1:= temp;
  #L33f600.  if v1 != 0 then goto L33f616;
  #L33f604.  call `E`(v3, v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.E:(Lcom/bumptech/glide/load/engine/u0;)V` @kind direct;
  #L33f60a.  v4:= `@@com.bumptech.glide.request.SingleRequest$Status.COMPLETE` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33f60e.  v3.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` := v4 @kind object;
  #L33f612.  @monitorexit v3
  #L33f614.  return @kind void;
  #L33f616.  call `D`(v3, v4, v0, v5) @signature `Lcom/bumptech/glide/request/SingleRequest;.D:(Lcom/bumptech/glide/load/engine/u0;Ljava/lang/Object;Lcom/bumptech/glide/load/DataSource;)V` @kind direct;
  #L33f61c.  @monitorexit v3
  #L33f61e.  return @kind void;
  #L33f620.  call `E`(v3, v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.E:(Lcom/bumptech/glide/load/engine/u0;)V` @kind direct;
  #L33f626.  v5:= new `com.bumptech.glide.load.engine.GlideException`;
  #L33f62a.  v1:= new `java.lang.StringBuilder`;
  #L33f62e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33f634.  v2:= "Expected to receive an object of " @kind object;
  #L33f638.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f63e.  v2:= v3.`com.bumptech.glide.request.SingleRequest.l` @type ^`java.lang.Class` @kind object;
  #L33f642.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f648.  v2:= " but instead got " @kind object;
  #L33f64c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f652.  if v0 == 0 then goto L33f660;
  #L33f656.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L33f65c.  v2:= temp @kind object;
  #L33f65e.  goto L33f664;
  #L33f660.  v2:= "" @kind object;
  #L33f664.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f66a.  v2:= "{" @kind object;
  #L33f66e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f674.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f67a.  v2:= "} inside Resource{" @kind object;
  #L33f67e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f684.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f68a.  v4:= "}." @kind object;
  #L33f68e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f694.  if v0 == 0 then goto L33f69e;
  #L33f698.  v4:= "" @kind object;
  #L33f69c.  goto L33f6a2;
  #L33f69e.  v4:= " To indicate failure return a null Resource object, rather than a Resource object containing null data." @kind object;
  #L33f6a2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f6a8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33f6ae.  v4:= temp @kind object;
  #L33f6b0.  call `<init>`(v5, v4) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33f6b6.  call `a`(v3, v5) @signature `Lcom/bumptech/glide/request/SingleRequest;.a:(Lcom/bumptech/glide/load/engine/GlideException;)V` @kind virtual;
  #L33f6bc.  @monitorexit v3
  #L33f6be.  return @kind void;
  #L33f6c0.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33f6c2.  @monitorexit v3
  #L33f6c4.  throw v4;
  catch `java.lang.Throwable` @[L33f57a..L33f5ce] goto L33f6c0;
  catch `java.lang.Throwable` @[L33f5d2..L33f612] goto L33f6c0;
  catch `java.lang.Throwable` @[L33f616..L33f61c] goto L33f6c0;
  catch `java.lang.Throwable` @[L33f620..L33f6bc] goto L33f6c0;
}
procedure `void` `c`(`com.bumptech.glide.request.SingleRequest` v2 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33faf0.  @monitorenter v2
  #L33faf2.  call `k`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.k:()V` @kind direct;
  #L33faf8.  v0:= 0I;
  #L33fafa.  v2.`com.bumptech.glide.request.SingleRequest.i` @type ^`android.content.Context` := v0 @kind object;
  #L33fafe.  v2.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.g` := v0 @kind object;
  #L33fb02.  v2.`com.bumptech.glide.request.SingleRequest.k` @type ^`java.lang.Object` := v0 @kind object;
  #L33fb06.  v2.`com.bumptech.glide.request.SingleRequest.l` @type ^`java.lang.Class` := v0 @kind object;
  #L33fb0a.  v2.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` := v0 @kind object;
  #L33fb0e.  v1:= -1I;
  #L33fb10.  v2.`com.bumptech.glide.request.SingleRequest.n` @type ^`int` := v1;
  #L33fb14.  v2.`com.bumptech.glide.request.SingleRequest.o` @type ^`int` := v1;
  #L33fb18.  v2.`com.bumptech.glide.request.SingleRequest.q` @type ^`com.bumptech.glide.request.m.i` := v0 @kind object;
  #L33fb1c.  v2.`com.bumptech.glide.request.SingleRequest.r` @type ^`java.util.List` := v0 @kind object;
  #L33fb20.  v2.`com.bumptech.glide.request.SingleRequest.g` @type ^`com.bumptech.glide.request.h` := v0 @kind object;
  #L33fb24.  v2.`com.bumptech.glide.request.SingleRequest.h` @type ^`com.bumptech.glide.request.e` := v0 @kind object;
  #L33fb28.  v2.`com.bumptech.glide.request.SingleRequest.t` @type ^`com.bumptech.glide.request.n.h` := v0 @kind object;
  #L33fb2c.  v2.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.load.engine.e0` := v0 @kind object;
  #L33fb30.  v2.`com.bumptech.glide.request.SingleRequest.z` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L33fb34.  v2.`com.bumptech.glide.request.SingleRequest.A` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L33fb38.  v2.`com.bumptech.glide.request.SingleRequest.B` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L33fb3c.  v2.`com.bumptech.glide.request.SingleRequest.C` @type ^`int` := v1;
  #L33fb40.  v2.`com.bumptech.glide.request.SingleRequest.D` @type ^`int` := v1;
  #L33fb44.  v2.`com.bumptech.glide.request.SingleRequest.E` @type ^`java.lang.RuntimeException` := v0 @kind object;
  #L33fb48.  v0:= `@@com.bumptech.glide.request.SingleRequest.b` @type ^`androidx.core.util.e` @kind object;
  #L33fb4c.  call temp:= `a`(v0, v2) @signature `Landroidx/core/util/e;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L33fb52.  @monitorexit v2
  #L33fb54.  return @kind void;
  #L33fb56.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33fb58.  @monitorexit v2
  #L33fb5a.  throw v0;
  catch `java.lang.Throwable` @[L33faf2..L33fb52] goto L33fb56;
}
procedure `void` `clear`(`com.bumptech.glide.request.SingleRequest` v3 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L33f238.  @monitorenter v3
  #L33f23a.  call `k`(v3) @signature `Lcom/bumptech/glide/request/SingleRequest;.k:()V` @kind direct;
  #L33f240.  v0:= v3.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.s.q.l` @kind object;
  #L33f244.  call `c`(v0) @signature `Lcom/bumptech/glide/s/q/l;.c:()V` @kind virtual;
  #L33f24a.  v0:= v3.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33f24e.  v1:= `@@com.bumptech.glide.request.SingleRequest$Status.CLEARED` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33f252.  if v0 != v1 then goto L33f25a;
  #L33f256.  @monitorexit v3
  #L33f258.  return @kind void;
  #L33f25a.  call `p`(v3) @signature `Lcom/bumptech/glide/request/SingleRequest;.p:()V` @kind direct;
  #L33f260.  v0:= v3.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.load.engine.u0` @kind object;
  #L33f264.  if v0 == 0 then goto L33f26e;
  #L33f268.  call `E`(v3, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.E:(Lcom/bumptech/glide/load/engine/u0;)V` @kind direct;
  #L33f26e.  call temp:= `m`(v3) @signature `Lcom/bumptech/glide/request/SingleRequest;.m:()Z` @kind direct;
  #L33f274.  v0:= temp;
  #L33f276.  if v0 == 0 then goto L33f28c;
  #L33f27a.  v0:= v3.`com.bumptech.glide.request.SingleRequest.q` @type ^`com.bumptech.glide.request.m.i` @kind object;
  #L33f27e.  call temp:= `s`(v3) @signature `Lcom/bumptech/glide/request/SingleRequest;.s:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L33f284.  v2:= temp @kind object;
  #L33f286.  call `m`(v0, v2) @signature `Lcom/bumptech/glide/request/m/i;.m:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L33f28c.  v3.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` := v1 @kind object;
  #L33f290.  @monitorexit v3
  #L33f292.  return @kind void;
  #L33f294.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33f296.  @monitorexit v3
  #L33f298.  throw v0;
  catch `java.lang.Throwable` @[L33f23a..L33f252] goto L33f294;
  catch `java.lang.Throwable` @[L33f25a..L33f290] goto L33f294;
}
procedure `boolean` `d`(`com.bumptech.glide.request.SingleRequest` v3 @kind this, `com.bumptech.glide.request.d` v4 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.d:(Lcom/bumptech/glide/request/d;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L33ecdc.  @monitorenter v3
  #L33ecde.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.request.SingleRequest` @kind boolean;
  #L33ece2.  v1:= 0I;
  #L33ece4.  if v0 == 0 then goto L33ed68;
  #L33ece8.  v4:= (`com.bumptech.glide.request.SingleRequest`) v4 @kind object;
  #L33ecec.  @monitorenter v4
  #L33ecee.  v0:= v3.`com.bumptech.glide.request.SingleRequest.n` @type ^`int`;
  #L33ecf2.  v2:= v4.`com.bumptech.glide.request.SingleRequest.n` @type ^`int`;
  #L33ecf6.  if v0 != v2 then goto L33ed5c;
  #L33ecfa.  v0:= v3.`com.bumptech.glide.request.SingleRequest.o` @type ^`int`;
  #L33ecfe.  v2:= v4.`com.bumptech.glide.request.SingleRequest.o` @type ^`int`;
  #L33ed02.  if v0 != v2 then goto L33ed5c;
  #L33ed06.  v0:= v3.`com.bumptech.glide.request.SingleRequest.k` @type ^`java.lang.Object` @kind object;
  #L33ed0a.  v2:= v4.`com.bumptech.glide.request.SingleRequest.k` @type ^`java.lang.Object` @kind object;
  #L33ed0e.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/s/p;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L33ed14.  v0:= temp;
  #L33ed16.  if v0 == 0 then goto L33ed5c;
  #L33ed1a.  v0:= v3.`com.bumptech.glide.request.SingleRequest.l` @type ^`java.lang.Class` @kind object;
  #L33ed1e.  v2:= v4.`com.bumptech.glide.request.SingleRequest.l` @type ^`java.lang.Class` @kind object;
  #L33ed22.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33ed28.  v0:= temp;
  #L33ed2a.  if v0 == 0 then goto L33ed5c;
  #L33ed2e.  v0:= v3.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33ed32.  v2:= v4.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33ed36.  call temp:= `equals`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33ed3c.  v0:= temp;
  #L33ed3e.  if v0 == 0 then goto L33ed5c;
  #L33ed42.  v0:= v3.`com.bumptech.glide.request.SingleRequest.p` @type ^`com.bumptech.glide.Priority` @kind object;
  #L33ed46.  v2:= v4.`com.bumptech.glide.request.SingleRequest.p` @type ^`com.bumptech.glide.Priority` @kind object;
  #L33ed4a.  if v0 != v2 then goto L33ed5c;
  #L33ed4e.  call temp:= `v`(v3, v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.v:(Lcom/bumptech/glide/request/SingleRequest;)Z` @kind direct;
  #L33ed54.  v0:= temp;
  #L33ed56.  if v0 == 0 then goto L33ed5c;
  #L33ed5a.  v1:= 1I;
  #L33ed5c.  @monitorexit v4
  #L33ed5e.  @monitorexit v3
  #L33ed60.  return v1;
  #L33ed62.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33ed64.  @monitorexit v4
  #L33ed66.  throw v0;
  #L33ed68.  @monitorexit v3
  #L33ed6a.  return v1;
  #L33ed6c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33ed6e.  @monitorexit v3
  #L33ed70.  throw v4;
  catch `java.lang.Throwable` @[L33ecde..L33ecee] goto L33ed6c;
  catch `java.lang.Throwable` @[L33ecee..L33ed5e] goto L33ed62;
  catch `java.lang.Throwable` @[L33ed64..L33ed66] goto L33ed62;
  catch `java.lang.Throwable` @[L33ed66..L33ed68] goto L33ed6c;
}
procedure `boolean` `e`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33ee18.  @monitorenter v1
  #L33ee1a.  call temp:= `l`(v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.l:()Z` @kind virtual;
  #L33ee20.  v0:= temp;
  #L33ee22.  @monitorexit v1
  #L33ee24.  return v0;
  #L33ee26.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33ee28.  @monitorexit v1
  #L33ee2a.  throw v0;
  catch `java.lang.Throwable` @[L33ee1a..L33ee22] goto L33ee26;
}
procedure `void` `f`(`com.bumptech.glide.request.SingleRequest` v23 @kind this, `int` v24 , `int` v25 ) @signature `Lcom/bumptech/glide/request/SingleRequest;.f:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L33f8b0.  v15:= v23 @kind object;
  #L33f8b4.  @monitorenter v23
  #L33f8b6.  v0:= v15.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.s.q.l` @kind object;
  #L33f8ba.  call `c`(v0) @signature `Lcom/bumptech/glide/s/q/l;.c:()V` @kind virtual;
  #L33f8c0.  v0:= `@@com.bumptech.glide.request.SingleRequest.c` @type ^`boolean` @kind boolean;
  #L33f8c4.  if v0 == 0 then goto L33f8fc;
  #L33f8c8.  v1:= new `java.lang.StringBuilder`;
  #L33f8cc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33f8d2.  v2:= "Got onSizeReady in " @kind object;
  #L33f8d6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f8dc.  v2:= v15.`com.bumptech.glide.request.SingleRequest.x` @type ^`long` @kind wide;
  #L33f8e0.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/s/j;.a:(J)D` @kind static;
  #L33f8e6.  v2:= temp @kind wide;
  #L33f8e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f8ee.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33f8f4.  v1:= temp @kind object;
  #L33f8f6.  call `x`(v15, v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.x:(Ljava/lang/String;)V` @kind direct;
  #L33f8fc.  v1:= v15.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33f900.  v2:= `@@com.bumptech.glide.request.SingleRequest$Status.WAITING_FOR_SIZE` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33f904.  if v1 == v2 then goto L33f90c;
  #L33f908.  @monitorexit v23
  #L33f90a.  return @kind void;
  #L33f90c.  v14:= `@@com.bumptech.glide.request.SingleRequest$Status.RUNNING` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33f910.  v15.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` := v14 @kind object;
  #L33f914.  v1:= v15.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33f918.  call temp:= `H`(v1) @signature `Lcom/bumptech/glide/request/a;.H:()F` @kind virtual;
  #L33f91e.  v1:= temp;
  #L33f920.  v2:= v24;
  #L33f924.  call temp:= `y`(v2, v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.y:(IF)I` @kind static;
  #L33f92a.  v2:= temp;
  #L33f92c.  v15.`com.bumptech.glide.request.SingleRequest.C` @type ^`int` := v2;
  #L33f930.  v2:= v25;
  #L33f934.  call temp:= `y`(v2, v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.y:(IF)I` @kind static;
  #L33f93a.  v1:= temp;
  #L33f93c.  v15.`com.bumptech.glide.request.SingleRequest.D` @type ^`int` := v1;
  #L33f940.  if v0 == 0 then goto L33f978;
  #L33f944.  v1:= new `java.lang.StringBuilder`;
  #L33f948.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33f94e.  v2:= "finished setup for calling load in " @kind object;
  #L33f952.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f958.  v2:= v15.`com.bumptech.glide.request.SingleRequest.x` @type ^`long` @kind wide;
  #L33f95c.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/s/j;.a:(J)D` @kind static;
  #L33f962.  v2:= temp @kind wide;
  #L33f964.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f96a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33f970.  v1:= temp @kind object;
  #L33f972.  call `x`(v15, v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.x:(Ljava/lang/String;)V` @kind direct;
  #L33f978.  v1:= v15.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.f0` @kind object;
  #L33f97c.  v2:= v15.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.g` @kind object;
  #L33f980.  v3:= v15.`com.bumptech.glide.request.SingleRequest.k` @type ^`java.lang.Object` @kind object;
  #L33f984.  v4:= v15.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33f988.  call temp:= `G`(v4) @signature `Lcom/bumptech/glide/request/a;.G:()Lcom/bumptech/glide/load/c;` @kind virtual;
  #L33f98e.  v4:= temp @kind object;
  #L33f990.  v5:= v15.`com.bumptech.glide.request.SingleRequest.C` @type ^`int`;
  #L33f994.  v6:= v15.`com.bumptech.glide.request.SingleRequest.D` @type ^`int`;
  #L33f998.  v7:= v15.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33f99c.  call temp:= `F`(v7) @signature `Lcom/bumptech/glide/request/a;.F:()Ljava/lang/Class;` @kind virtual;
  #L33f9a2.  v7:= temp @kind object;
  #L33f9a4.  v8:= v15.`com.bumptech.glide.request.SingleRequest.l` @type ^`java.lang.Class` @kind object;
  #L33f9a8.  v9:= v15.`com.bumptech.glide.request.SingleRequest.p` @type ^`com.bumptech.glide.Priority` @kind object;
  #L33f9ac.  v10:= v15.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33f9b0.  call temp:= `p`(v10) @signature `Lcom/bumptech/glide/request/a;.p:()Lcom/bumptech/glide/load/engine/y;` @kind virtual;
  #L33f9b6.  v10:= temp @kind object;
  #L33f9b8.  v11:= v15.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33f9bc.  call temp:= `J`(v11) @signature `Lcom/bumptech/glide/request/a;.J:()Ljava/util/Map;` @kind virtual;
  #L33f9c2.  v11:= temp @kind object;
  #L33f9c4.  v12:= v15.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33f9c8.  call temp:= `S`(v12) @signature `Lcom/bumptech/glide/request/a;.S:()Z` @kind virtual;
  #L33f9ce.  v12:= temp;
  #L33f9d0.  v13:= v15.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33f9d4.  call temp:= `O`(v13) @signature `Lcom/bumptech/glide/request/a;.O:()Z` @kind virtual;
  #L33f9da.  v13:= temp;
  #L33f9dc.  v16:= v14 @kind object;
  #L33f9e0.  v14:= v15.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33f9e4.  call temp:= `y`(v14) @signature `Lcom/bumptech/glide/request/a;.y:()Lcom/bumptech/glide/load/h;` @kind virtual;
  #L33f9ea.  v14:= temp @kind object;
  #L33f9ec.  v21:= v0;
  #L33f9f0.  v0:= v15.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33f9f4.  call temp:= `M`(v0) @signature `Lcom/bumptech/glide/request/a;.M:()Z` @kind virtual;
  #L33f9fa.  v0:= temp;
  #L33f9fc.  v24:= v0;
  #L33fa00.  v0:= v15.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33fa04.  call temp:= `L`(v0) @signature `Lcom/bumptech/glide/request/a;.L:()Z` @kind virtual;
  #L33fa0a.  v0:= temp;
  #L33fa0c.  v25:= v0;
  #L33fa10.  v0:= v15.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33fa14.  call temp:= `K`(v0) @signature `Lcom/bumptech/glide/request/a;.K:()Z` @kind virtual;
  #L33fa1a.  v17:= temp;
  #L33fa1c.  v0:= v15.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.request.a` @kind object;
  #L33fa20.  call temp:= `w`(v0) @signature `Lcom/bumptech/glide/request/a;.w:()Z` @kind virtual;
  #L33fa26.  v18:= temp;
  #L33fa28.  v0:= v15.`com.bumptech.glide.request.SingleRequest.u` @type ^`java.util.concurrent.Executor` @kind object;
  #L33fa2c.  v22:= v16 @kind object;
  #L33fa30.  v15:= v24;
  #L33fa34.  v16:= v25;
  #L33fa38.  v19:= v23 @kind object;
  #L33fa3c.  v20:= v0 @kind object;
  #L33fa40.  call temp:= `f`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20) @signature `Lcom/bumptech/glide/load/engine/f0;.f:(Lcom/bumptech/glide/g;Ljava/lang/Object;Lcom/bumptech/glide/load/c;IILjava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/engine/y;Ljava/util/Map;ZZLcom/bumptech/glide/load/h;ZZZZLcom/bumptech/glide/request/j;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/load/engine/e0;` @kind virtual;
  #L33fa46.  v0:= temp @kind object;
  #L33fa48.  v1:= v23 @kind object;
  #L33fa4c.  v1.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.load.engine.e0` := v0 @kind object;
  #L33fa50.  v0:= v1.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33fa54.  v2:= v22 @kind object;
  #L33fa58.  if v0 == v2 then goto L33fa62;
  #L33fa5c.  v0:= 0I;
  #L33fa5e.  v1.`com.bumptech.glide.request.SingleRequest.w` @type ^`com.bumptech.glide.load.engine.e0` := v0 @kind object;
  #L33fa62.  if v21 == 0 then goto L33fa9a;
  #L33fa66.  v0:= new `java.lang.StringBuilder`;
  #L33fa6a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33fa70.  v2:= "finished onSizeReady in " @kind object;
  #L33fa74.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fa7a.  v2:= v1.`com.bumptech.glide.request.SingleRequest.x` @type ^`long` @kind wide;
  #L33fa7e.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/s/j;.a:(J)D` @kind static;
  #L33fa84.  v2:= temp @kind wide;
  #L33fa86.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fa8c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33fa92.  v0:= temp @kind object;
  #L33fa94.  call `x`(v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.x:(Ljava/lang/String;)V` @kind direct;
  #L33fa9a.  @monitorexit v23
  #L33fa9c.  return @kind void;
  #L33fa9e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33faa0.  goto L33faae;
  #L33faa2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33faa4.  v1:= v23 @kind object;
  #L33faa8.  goto L33faae;
  #L33faaa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33faac.  v1:= v15 @kind object;
  #L33faae.  @monitorexit v23
  #L33fab0.  throw v0;
  catch `java.lang.Throwable` @[L33f8b6..L33f904] goto L33faaa;
  catch `java.lang.Throwable` @[L33f90c..L33fa2c] goto L33faaa;
  catch `java.lang.Throwable` @[L33fa40..L33fa48] goto L33faa2;
  catch `java.lang.Throwable` @[L33fa4c..L33fa9a] goto L33fa9e;
}
procedure `boolean` `g`(`com.bumptech.glide.request.SingleRequest` v2 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33edac.  @monitorenter v2
  #L33edae.  v0:= v2.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33edb2.  v1:= `@@com.bumptech.glide.request.SingleRequest$Status.FAILED` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33edb6.  if v0 != v1 then goto L33edbe;
  #L33edba.  v0:= 1I;
  #L33edbc.  goto L33edc0;
  #L33edbe.  v0:= 0I;
  #L33edc0.  @monitorexit v2
  #L33edc2.  return v0;
  #L33edc4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33edc6.  @monitorexit v2
  #L33edc8.  throw v0;
  catch `java.lang.Throwable` @[L33edae..L33edb6] goto L33edc4;
}
procedure `boolean` `h`(`com.bumptech.glide.request.SingleRequest` v2 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33ec64.  @monitorenter v2
  #L33ec66.  v0:= v2.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33ec6a.  v1:= `@@com.bumptech.glide.request.SingleRequest$Status.CLEARED` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33ec6e.  if v0 != v1 then goto L33ec76;
  #L33ec72.  v0:= 1I;
  #L33ec74.  goto L33ec78;
  #L33ec76.  v0:= 0I;
  #L33ec78.  @monitorexit v2
  #L33ec7a.  return v0;
  #L33ec7c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33ec7e.  @monitorexit v2
  #L33ec80.  throw v0;
  catch `java.lang.Throwable` @[L33ec66..L33ec6e] goto L33ec7c;
}
procedure `com.bumptech.glide.s.q.l` `i`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.i:()Lcom/bumptech/glide/s/q/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33ef80.  v0:= v1.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.s.q.l` @kind object;
  #L33ef84.  return v0 @kind object;
}
procedure `boolean` `isRunning`(`com.bumptech.glide.request.SingleRequest` v2 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.isRunning:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33ee48.  @monitorenter v2
  #L33ee4a.  v0:= v2.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33ee4e.  v1:= `@@com.bumptech.glide.request.SingleRequest$Status.RUNNING` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33ee52.  if v0 == v1 then goto L33ee64;
  #L33ee56.  v1:= `@@com.bumptech.glide.request.SingleRequest$Status.WAITING_FOR_SIZE` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33ee5a.  if v0 != v1 then goto L33ee60;
  #L33ee5e.  goto L33ee64;
  #L33ee60.  v0:= 0I;
  #L33ee62.  goto L33ee66;
  #L33ee64.  v0:= 1I;
  #L33ee66.  @monitorexit v2
  #L33ee68.  return v0;
  #L33ee6a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33ee6c.  @monitorexit v2
  #L33ee6e.  throw v0;
  catch `java.lang.Throwable` @[L33ee4a..L33ee5a] goto L33ee6a;
}
procedure `void` `j`(`com.bumptech.glide.request.SingleRequest` v4 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.j:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33f074.  @monitorenter v4
  #L33f076.  call `k`(v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.k:()V` @kind direct;
  #L33f07c.  v0:= v4.`com.bumptech.glide.request.SingleRequest.f` @type ^`com.bumptech.glide.s.q.l` @kind object;
  #L33f080.  call `c`(v0) @signature `Lcom/bumptech/glide/s/q/l;.c:()V` @kind virtual;
  #L33f086.  call temp:= `b`() @signature `Lcom/bumptech/glide/s/j;.b:()J` @kind static;
  #L33f08c.  v0:= temp @kind wide;
  #L33f08e.  v4.`com.bumptech.glide.request.SingleRequest.x` @type ^`long` := v0 @kind wide;
  #L33f092.  v0:= v4.`com.bumptech.glide.request.SingleRequest.k` @type ^`java.lang.Object` @kind object;
  #L33f096.  if v0 != 0 then goto L33f0e8;
  #L33f09a.  v0:= v4.`com.bumptech.glide.request.SingleRequest.n` @type ^`int`;
  #L33f09e.  v1:= v4.`com.bumptech.glide.request.SingleRequest.o` @type ^`int`;
  #L33f0a2.  call temp:= `t`(v0, v1) @signature `Lcom/bumptech/glide/s/p;.t:(II)Z` @kind static;
  #L33f0a8.  v0:= temp;
  #L33f0aa.  if v0 == 0 then goto L33f0be;
  #L33f0ae.  v0:= v4.`com.bumptech.glide.request.SingleRequest.n` @type ^`int`;
  #L33f0b2.  v4.`com.bumptech.glide.request.SingleRequest.C` @type ^`int` := v0;
  #L33f0b6.  v0:= v4.`com.bumptech.glide.request.SingleRequest.o` @type ^`int`;
  #L33f0ba.  v4.`com.bumptech.glide.request.SingleRequest.D` @type ^`int` := v0;
  #L33f0be.  call temp:= `r`(v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.r:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L33f0c4.  v0:= temp @kind object;
  #L33f0c6.  if v0 != 0 then goto L33f0ce;
  #L33f0ca.  v0:= 5I;
  #L33f0cc.  goto L33f0d0;
  #L33f0ce.  v0:= 3I;
  #L33f0d0.  v1:= new `com.bumptech.glide.load.engine.GlideException`;
  #L33f0d4.  v2:= "Received null model" @kind object;
  #L33f0d8.  call `<init>`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33f0de.  call `C`(v4, v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.C:(Lcom/bumptech/glide/load/engine/GlideException;I)V` @kind direct;
  #L33f0e4.  @monitorexit v4
  #L33f0e6.  return @kind void;
  #L33f0e8.  v0:= v4.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33f0ec.  v1:= `@@com.bumptech.glide.request.SingleRequest$Status.RUNNING` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33f0f0.  if v0 == v1 then goto L33f1ae;
  #L33f0f4.  v2:= `@@com.bumptech.glide.request.SingleRequest$Status.COMPLETE` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33f0f8.  if v0 != v2 then goto L33f10e;
  #L33f0fc.  v0:= v4.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.load.engine.u0` @kind object;
  #L33f100.  v1:= `@@com.bumptech.glide.load.DataSource.MEMORY_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L33f104.  call `b`(v4, v0, v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.b:(Lcom/bumptech/glide/load/engine/u0;Lcom/bumptech/glide/load/DataSource;)V` @kind virtual;
  #L33f10a.  @monitorexit v4
  #L33f10c.  return @kind void;
  #L33f10e.  v0:= `@@com.bumptech.glide.request.SingleRequest$Status.WAITING_FOR_SIZE` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33f112.  v4.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` := v0 @kind object;
  #L33f116.  v2:= v4.`com.bumptech.glide.request.SingleRequest.n` @type ^`int`;
  #L33f11a.  v3:= v4.`com.bumptech.glide.request.SingleRequest.o` @type ^`int`;
  #L33f11e.  call temp:= `t`(v2, v3) @signature `Lcom/bumptech/glide/s/p;.t:(II)Z` @kind static;
  #L33f124.  v2:= temp;
  #L33f126.  if v2 == 0 then goto L33f13a;
  #L33f12a.  v2:= v4.`com.bumptech.glide.request.SingleRequest.n` @type ^`int`;
  #L33f12e.  v3:= v4.`com.bumptech.glide.request.SingleRequest.o` @type ^`int`;
  #L33f132.  call `f`(v4, v2, v3) @signature `Lcom/bumptech/glide/request/SingleRequest;.f:(II)V` @kind virtual;
  #L33f138.  goto L33f144;
  #L33f13a.  v2:= v4.`com.bumptech.glide.request.SingleRequest.q` @type ^`com.bumptech.glide.request.m.i` @kind object;
  #L33f13e.  call `n`(v2, v4) @signature `Lcom/bumptech/glide/request/m/i;.n:(Lcom/bumptech/glide/request/m/h;)V` @kind interface;
  #L33f144.  v2:= v4.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33f148.  if v2 == v1 then goto L33f150;
  #L33f14c.  if v2 != v0 then goto L33f16e;
  #L33f150.  call temp:= `n`(v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.n:()Z` @kind direct;
  #L33f156.  v0:= temp;
  #L33f158.  if v0 == 0 then goto L33f16e;
  #L33f15c.  v0:= v4.`com.bumptech.glide.request.SingleRequest.q` @type ^`com.bumptech.glide.request.m.i` @kind object;
  #L33f160.  call temp:= `s`(v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.s:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L33f166.  v1:= temp @kind object;
  #L33f168.  call `k`(v0, v1) @signature `Lcom/bumptech/glide/request/m/i;.k:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L33f16e.  v0:= `@@com.bumptech.glide.request.SingleRequest.c` @type ^`boolean` @kind boolean;
  #L33f172.  if v0 == 0 then goto L33f1aa;
  #L33f176.  v0:= new `java.lang.StringBuilder`;
  #L33f17a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33f180.  v1:= "finished run method in " @kind object;
  #L33f184.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f18a.  v1:= v4.`com.bumptech.glide.request.SingleRequest.x` @type ^`long` @kind wide;
  #L33f18e.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/s/j;.a:(J)D` @kind static;
  #L33f194.  v1:= temp @kind wide;
  #L33f196.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f19c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33f1a2.  v0:= temp @kind object;
  #L33f1a4.  call `x`(v4, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.x:(Ljava/lang/String;)V` @kind direct;
  #L33f1aa.  @monitorexit v4
  #L33f1ac.  return @kind void;
  #L33f1ae.  v0:= new `java.lang.IllegalArgumentException`;
  #L33f1b2.  v1:= "Cannot restart a running request" @kind object;
  #L33f1b6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33f1bc.  throw v0;
  #L33f1be.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33f1c0.  @monitorexit v4
  #L33f1c2.  throw v0;
  catch `java.lang.Throwable` @[L33f076..L33f0e4] goto L33f1be;
  catch `java.lang.Throwable` @[L33f0e8..L33f10a] goto L33f1be;
  catch `java.lang.Throwable` @[L33f10e..L33f1aa] goto L33f1be;
  catch `java.lang.Throwable` @[L33f1ae..L33f1be] goto L33f1be;
}
procedure `boolean` `l`(`com.bumptech.glide.request.SingleRequest` v2 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.l:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33eca0.  @monitorenter v2
  #L33eca2.  v0:= v2.`com.bumptech.glide.request.SingleRequest.y` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33eca6.  v1:= `@@com.bumptech.glide.request.SingleRequest$Status.COMPLETE` @type ^`com.bumptech.glide.request.SingleRequest$Status` @kind object;
  #L33ecaa.  if v0 != v1 then goto L33ecb2;
  #L33ecae.  v0:= 1I;
  #L33ecb0.  goto L33ecb4;
  #L33ecb2.  v0:= 0I;
  #L33ecb4.  @monitorexit v2
  #L33ecb6.  return v0;
  #L33ecb8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33ecba.  @monitorexit v2
  #L33ecbc.  throw v0;
  catch `java.lang.Throwable` @[L33eca2..L33ecaa] goto L33ecb8;
}
