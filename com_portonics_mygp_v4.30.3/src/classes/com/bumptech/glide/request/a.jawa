record `com.bumptech.glide.request.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Cloneable` @kind interface {
  `boolean` `com.bumptech.glide.request.a.A` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.a.b` @AccessFlag PRIVATE;
  `float` `com.bumptech.glide.request.a.c` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.y` `com.bumptech.glide.request.a.d` @AccessFlag PRIVATE;
  `com.bumptech.glide.Priority` `com.bumptech.glide.request.a.e` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.a.f` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.a.g` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.a.h` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.a.i` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.j` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.a.k` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.a.l` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.c` `com.bumptech.glide.request.a.m` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.n` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.o` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.a.p` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.a.q` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.h` `com.bumptech.glide.request.a.r` @AccessFlag PRIVATE;
  `java.util.Map` `com.bumptech.glide.request.a.s` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.request.a.t` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.u` @AccessFlag PRIVATE;
  `android.content.res.Resources$Theme` `com.bumptech.glide.request.a.v` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.w` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.x` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.y` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.a.z` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L33de98.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33de9e.  v0:= 1.0F;
  #L33dea2.  v2.`com.bumptech.glide.request.a.c` @type ^`float` := v0;
  #L33dea6.  v0:= `@@com.bumptech.glide.load.engine.y.e` @type ^`com.bumptech.glide.load.engine.y` @kind object;
  #L33deaa.  v2.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.load.engine.y` := v0 @kind object;
  #L33deae.  v0:= `@@com.bumptech.glide.Priority.NORMAL` @type ^`com.bumptech.glide.Priority` @kind object;
  #L33deb2.  v2.`com.bumptech.glide.request.a.e` @type ^`com.bumptech.glide.Priority` := v0 @kind object;
  #L33deb6.  v0:= 1I;
  #L33deb8.  v2.`com.bumptech.glide.request.a.j` @type ^`boolean` := v0 @kind boolean;
  #L33debc.  v1:= -1I;
  #L33debe.  v2.`com.bumptech.glide.request.a.k` @type ^`int` := v1;
  #L33dec2.  v2.`com.bumptech.glide.request.a.l` @type ^`int` := v1;
  #L33dec6.  call temp:= `c`() @signature `Lcom/bumptech/glide/r/b;.c:()Lcom/bumptech/glide/r/b;` @kind static;
  #L33decc.  v1:= temp @kind object;
  #L33dece.  v2.`com.bumptech.glide.request.a.m` @type ^`com.bumptech.glide.load.c` := v1 @kind object;
  #L33ded2.  v2.`com.bumptech.glide.request.a.o` @type ^`boolean` := v0 @kind boolean;
  #L33ded6.  v1:= new `com.bumptech.glide.load.h`;
  #L33deda.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/h;.<init>:()V` @kind direct;
  #L33dee0.  v2.`com.bumptech.glide.request.a.r` @type ^`com.bumptech.glide.load.h` := v1 @kind object;
  #L33dee4.  v1:= new `com.bumptech.glide.s.d`;
  #L33dee8.  call `<init>`(v1) @signature `Lcom/bumptech/glide/s/d;.<init>:()V` @kind direct;
  #L33deee.  v2.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` := v1 @kind object;
  #L33def2.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L33def6.  v2.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` := v1 @kind object;
  #L33defa.  v2.`com.bumptech.glide.request.a.z` @type ^`boolean` := v0 @kind boolean;
  #L33defe.  return @kind void;
}
procedure `boolean` `P`(`com.bumptech.glide.request.a` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/a;.P:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33d048.  v0:= v1.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d04c.  call temp:= `Q`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d052.  v2:= temp;
  #L33d054.  return v2;
}
procedure `boolean` `Q`(`int` v0 , `int` v1 ) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L33d068.  v0:= v0 ^& v1 @kind int;
  #L33d06a.  if v0 == 0 then goto L33d072;
  #L33d06e.  v0:= 1I;
  #L33d070.  goto L33d074;
  #L33d072.  v0:= 0I;
  #L33d074.  return v0;
}
procedure `com.bumptech.glide.request.a` `Z`(`com.bumptech.glide.request.a` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object, `com.bumptech.glide.load.k` v3 @kind object) @signature `Lcom/bumptech/glide/request/a;.Z:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33d7c4.  v0:= 0I;
  #L33d7c6.  call temp:= `f0`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/request/a;.f0:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;Z)Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d7cc.  v2:= temp @kind object;
  #L33d7ce.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `e0`(`com.bumptech.glide.request.a` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object, `com.bumptech.glide.load.k` v3 @kind object) @signature `Lcom/bumptech/glide/request/a;.e0:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33d908.  v0:= 1I;
  #L33d90a.  call temp:= `f0`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/request/a;.f0:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;Z)Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d910.  v2:= temp @kind object;
  #L33d912.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `f0`(`com.bumptech.glide.request.a` v0 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v1 @kind object, `com.bumptech.glide.load.k` v2 @kind object, `boolean` v3 ) @signature `Lcom/bumptech/glide/request/a;.f0:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;Z)Lcom/bumptech/glide/request/a;` @AccessFlag PRIVATE {
    temp;

  #L33d924.  if v3 == 0 then goto L33d932;
  #L33d928.  call temp:= `q0`(v0, v1, v2) @signature `Lcom/bumptech/glide/request/a;.q0:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d92e.  v1:= temp @kind object;
  #L33d930.  goto L33d93a;
  #L33d932.  call temp:= `a0`(v0, v1, v2) @signature `Lcom/bumptech/glide/request/a;.a0:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d938.  v1:= temp @kind object;
  #L33d93a.  v2:= 1I;
  #L33d93c.  v1.`com.bumptech.glide.request.a.z` @type ^`boolean` := v2 @kind boolean;
  #L33d940.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.a` `g0`(`com.bumptech.glide.request.a` v0 @kind this) @signature `Lcom/bumptech/glide/request/a;.g0:()Lcom/bumptech/glide/request/a;` @AccessFlag PRIVATE {
    temp;

  #L33d954.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `h0`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33d968.  v0:= v2.`com.bumptech.glide.request.a.u` @type ^`boolean` @kind boolean;
  #L33d96c.  if v0 != 0 then goto L33d97a;
  #L33d970.  call temp:= `g0`(v2) @signature `Lcom/bumptech/glide/request/a;.g0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d976.  v0:= temp @kind object;
  #L33d978.  return v0 @kind object;
  #L33d97a.  v0:= new `java.lang.IllegalStateException`;
  #L33d97e.  v1:= "You cannot modify locked T, consider clone()" @kind object;
  #L33d982.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33d988.  throw v0;
}
procedure `int` `A`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.A:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33dd0c.  v0:= v1.`com.bumptech.glide.request.a.l` @type ^`int`;
  #L33dd10.  return v0;
}
procedure `android.graphics.drawable.Drawable` `B`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.B:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33ce28.  v0:= v1.`com.bumptech.glide.request.a.h` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33ce2c.  return v0 @kind object;
}
procedure `int` `D`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.D:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33dd24.  v0:= v1.`com.bumptech.glide.request.a.i` @type ^`int`;
  #L33dd28.  return v0;
}
procedure `com.bumptech.glide.Priority` `E`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.E:()Lcom/bumptech/glide/Priority;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33d0fc.  v0:= v1.`com.bumptech.glide.request.a.e` @type ^`com.bumptech.glide.Priority` @kind object;
  #L33d100.  return v0 @kind object;
}
procedure `java.lang.Class` `F`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.F:()Ljava/lang/Class;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33de4c.  v0:= v1.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` @kind object;
  #L33de50.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.c` `G`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.G:()Lcom/bumptech/glide/load/c;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33d114.  v0:= v1.`com.bumptech.glide.request.a.m` @type ^`com.bumptech.glide.load.c` @kind object;
  #L33d118.  return v0 @kind object;
}
procedure `float` `H`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.H:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33dcac.  v0:= v1.`com.bumptech.glide.request.a.c` @type ^`float`;
  #L33dcb0.  return v0;
}
procedure `android.content.res.Resources$Theme` `I`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.I:()Landroid/content/res/Resources$Theme;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33cde0.  v0:= v1.`com.bumptech.glide.request.a.v` @type ^`android.content.res.Resources$Theme` @kind object;
  #L33cde4.  return v0 @kind object;
}
procedure `java.util.Map` `J`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.J:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33de80.  v0:= v1.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L33de84.  return v0 @kind object;
}
procedure `boolean` `K`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.K:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33cfc8.  v0:= v1.`com.bumptech.glide.request.a.A` @type ^`boolean` @kind boolean;
  #L33cfcc.  return v0;
}
procedure `boolean` `L`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.L:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33cfe0.  v0:= v1.`com.bumptech.glide.request.a.x` @type ^`boolean` @kind boolean;
  #L33cfe4.  return v0;
}
procedure `boolean` `M`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.M:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33cff8.  v0:= v1.`com.bumptech.glide.request.a.j` @type ^`boolean` @kind boolean;
  #L33cffc.  return v0;
}
procedure `boolean` `N`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.N:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33d010.  v0:= 8I;
  #L33d014.  call temp:= `P`(v1, v0) @signature `Lcom/bumptech/glide/request/a;.P:(I)Z` @kind direct;
  #L33d01a.  v0:= temp;
  #L33d01c.  return v0;
}
procedure `boolean` `O`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.O:()Z` @AccessFlag  {
    temp;
    v0;

  #L33d030.  v0:= v1.`com.bumptech.glide.request.a.z` @type ^`boolean` @kind boolean;
  #L33d034.  return v0;
}
procedure `boolean` `R`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.R:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33d088.  v0:= v1.`com.bumptech.glide.request.a.o` @type ^`boolean` @kind boolean;
  #L33d08c.  return v0;
}
procedure `boolean` `S`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.S:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33d0a0.  v0:= v1.`com.bumptech.glide.request.a.n` @type ^`boolean` @kind boolean;
  #L33d0a4.  return v0;
}
procedure `boolean` `T`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.T:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33d0b8.  v0:= 2048I;
  #L33d0bc.  call temp:= `P`(v1, v0) @signature `Lcom/bumptech/glide/request/a;.P:(I)Z` @kind direct;
  #L33d0c2.  v0:= temp;
  #L33d0c4.  return v0;
}
procedure `boolean` `U`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.U:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L33d0d8.  v0:= v2.`com.bumptech.glide.request.a.l` @type ^`int`;
  #L33d0dc.  v1:= v2.`com.bumptech.glide.request.a.k` @type ^`int`;
  #L33d0e0.  call temp:= `t`(v0, v1) @signature `Lcom/bumptech/glide/s/p;.t:(II)Z` @kind static;
  #L33d0e6.  v0:= temp;
  #L33d0e8.  return v0;
}
procedure `com.bumptech.glide.request.a` `V`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.V:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33d72c.  v0:= 1I;
  #L33d72e.  v1.`com.bumptech.glide.request.a.u` @type ^`boolean` := v0 @kind boolean;
  #L33d732.  call temp:= `g0`(v1) @signature `Lcom/bumptech/glide/request/a;.g0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d738.  v0:= temp @kind object;
  #L33d73a.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `W`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.W:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33d74c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.b` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L33d750.  v1:= new `com.bumptech.glide.load.resource.bitmap.g`;
  #L33d754.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/g;.<init>:()V` @kind direct;
  #L33d75a.  call temp:= `a0`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/a;.a0:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d760.  v0:= temp @kind object;
  #L33d762.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `X`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.X:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33d774.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.e` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L33d778.  v1:= new `com.bumptech.glide.load.resource.bitmap.h`;
  #L33d77c.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/h;.<init>:()V` @kind direct;
  #L33d782.  call temp:= `Z`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/a;.Z:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d788.  v0:= temp @kind object;
  #L33d78a.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `Y`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.Y:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33d79c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.a` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L33d7a0.  v1:= new `com.bumptech.glide.load.resource.bitmap.b0`;
  #L33d7a4.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/b0;.<init>:()V` @kind direct;
  #L33d7aa.  call temp:= `Z`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/a;.Z:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d7b0.  v0:= temp @kind object;
  #L33d7b2.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `a`(`com.bumptech.glide.request.a` v4 @kind this, `com.bumptech.glide.request.a` v5 @kind object) @signature `Lcom/bumptech/glide/request/a;.a:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33d15c.  v0:= v4.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33d160.  if v0 == 0 then goto L33d176;
  #L33d164.  call temp:= `f`(v4) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d16a.  v0:= temp @kind object;
  #L33d16c.  call temp:= `a`(v0, v5) @signature `Lcom/bumptech/glide/request/a;.a:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d172.  v5:= temp @kind object;
  #L33d174.  return v5 @kind object;
  #L33d176.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d17a.  v1:= 2I;
  #L33d17c.  call temp:= `Q`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d182.  v0:= temp;
  #L33d184.  if v0 == 0 then goto L33d190;
  #L33d188.  v0:= v5.`com.bumptech.glide.request.a.c` @type ^`float`;
  #L33d18c.  v4.`com.bumptech.glide.request.a.c` @type ^`float` := v0;
  #L33d190.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d194.  v1:= 262144I;
  #L33d198.  call temp:= `Q`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d19e.  v0:= temp;
  #L33d1a0.  if v0 == 0 then goto L33d1ac;
  #L33d1a4.  v0:= v5.`com.bumptech.glide.request.a.x` @type ^`boolean` @kind boolean;
  #L33d1a8.  v4.`com.bumptech.glide.request.a.x` @type ^`boolean` := v0 @kind boolean;
  #L33d1ac.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d1b0.  v1:= 1048576I;
  #L33d1b4.  call temp:= `Q`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d1ba.  v0:= temp;
  #L33d1bc.  if v0 == 0 then goto L33d1c8;
  #L33d1c0.  v0:= v5.`com.bumptech.glide.request.a.A` @type ^`boolean` @kind boolean;
  #L33d1c4.  v4.`com.bumptech.glide.request.a.A` @type ^`boolean` := v0 @kind boolean;
  #L33d1c8.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d1cc.  v1:= 4I;
  #L33d1ce.  call temp:= `Q`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d1d4.  v0:= temp;
  #L33d1d6.  if v0 == 0 then goto L33d1e2;
  #L33d1da.  v0:= v5.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.load.engine.y` @kind object;
  #L33d1de.  v4.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.load.engine.y` := v0 @kind object;
  #L33d1e2.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d1e6.  v1:= 8I;
  #L33d1ea.  call temp:= `Q`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d1f0.  v0:= temp;
  #L33d1f2.  if v0 == 0 then goto L33d1fe;
  #L33d1f6.  v0:= v5.`com.bumptech.glide.request.a.e` @type ^`com.bumptech.glide.Priority` @kind object;
  #L33d1fa.  v4.`com.bumptech.glide.request.a.e` @type ^`com.bumptech.glide.Priority` := v0 @kind object;
  #L33d1fe.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d202.  v1:= 16I;
  #L33d206.  call temp:= `Q`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d20c.  v0:= temp;
  #L33d20e.  v1:= 0I;
  #L33d210.  if v0 == 0 then goto L33d22c;
  #L33d214.  v0:= v5.`com.bumptech.glide.request.a.f` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33d218.  v4.`com.bumptech.glide.request.a.f` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L33d21c.  v4.`com.bumptech.glide.request.a.g` @type ^`int` := v1;
  #L33d220.  v0:= v4.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d224.  v0:= v0 ^& -33;
  #L33d228.  v4.`com.bumptech.glide.request.a.b` @type ^`int` := v0;
  #L33d22c.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d230.  v2:= 32I;
  #L33d234.  call temp:= `Q`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d23a.  v0:= temp;
  #L33d23c.  v2:= 0I;
  #L33d23e.  if v0 == 0 then goto L33d25a;
  #L33d242.  v0:= v5.`com.bumptech.glide.request.a.g` @type ^`int`;
  #L33d246.  v4.`com.bumptech.glide.request.a.g` @type ^`int` := v0;
  #L33d24a.  v4.`com.bumptech.glide.request.a.f` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L33d24e.  v0:= v4.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d252.  v0:= v0 ^& -17;
  #L33d256.  v4.`com.bumptech.glide.request.a.b` @type ^`int` := v0;
  #L33d25a.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d25e.  v3:= 64I;
  #L33d262.  call temp:= `Q`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d268.  v0:= temp;
  #L33d26a.  if v0 == 0 then goto L33d286;
  #L33d26e.  v0:= v5.`com.bumptech.glide.request.a.h` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33d272.  v4.`com.bumptech.glide.request.a.h` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L33d276.  v4.`com.bumptech.glide.request.a.i` @type ^`int` := v1;
  #L33d27a.  v0:= v4.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d27e.  v0:= v0 ^& -129;
  #L33d282.  v4.`com.bumptech.glide.request.a.b` @type ^`int` := v0;
  #L33d286.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d28a.  v3:= 128I;
  #L33d28e.  call temp:= `Q`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d294.  v0:= temp;
  #L33d296.  if v0 == 0 then goto L33d2b2;
  #L33d29a.  v0:= v5.`com.bumptech.glide.request.a.i` @type ^`int`;
  #L33d29e.  v4.`com.bumptech.glide.request.a.i` @type ^`int` := v0;
  #L33d2a2.  v4.`com.bumptech.glide.request.a.h` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L33d2a6.  v0:= v4.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d2aa.  v0:= v0 ^& -65;
  #L33d2ae.  v4.`com.bumptech.glide.request.a.b` @type ^`int` := v0;
  #L33d2b2.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d2b6.  v3:= 256I;
  #L33d2ba.  call temp:= `Q`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d2c0.  v0:= temp;
  #L33d2c2.  if v0 == 0 then goto L33d2ce;
  #L33d2c6.  v0:= v5.`com.bumptech.glide.request.a.j` @type ^`boolean` @kind boolean;
  #L33d2ca.  v4.`com.bumptech.glide.request.a.j` @type ^`boolean` := v0 @kind boolean;
  #L33d2ce.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d2d2.  v3:= 512I;
  #L33d2d6.  call temp:= `Q`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d2dc.  v0:= temp;
  #L33d2de.  if v0 == 0 then goto L33d2f2;
  #L33d2e2.  v0:= v5.`com.bumptech.glide.request.a.l` @type ^`int`;
  #L33d2e6.  v4.`com.bumptech.glide.request.a.l` @type ^`int` := v0;
  #L33d2ea.  v0:= v5.`com.bumptech.glide.request.a.k` @type ^`int`;
  #L33d2ee.  v4.`com.bumptech.glide.request.a.k` @type ^`int` := v0;
  #L33d2f2.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d2f6.  v3:= 1024I;
  #L33d2fa.  call temp:= `Q`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d300.  v0:= temp;
  #L33d302.  if v0 == 0 then goto L33d30e;
  #L33d306.  v0:= v5.`com.bumptech.glide.request.a.m` @type ^`com.bumptech.glide.load.c` @kind object;
  #L33d30a.  v4.`com.bumptech.glide.request.a.m` @type ^`com.bumptech.glide.load.c` := v0 @kind object;
  #L33d30e.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d312.  v3:= 4096I;
  #L33d316.  call temp:= `Q`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d31c.  v0:= temp;
  #L33d31e.  if v0 == 0 then goto L33d32a;
  #L33d322.  v0:= v5.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` @kind object;
  #L33d326.  v4.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` := v0 @kind object;
  #L33d32a.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d32e.  v3:= 8192I;
  #L33d332.  call temp:= `Q`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d338.  v0:= temp;
  #L33d33a.  if v0 == 0 then goto L33d356;
  #L33d33e.  v0:= v5.`com.bumptech.glide.request.a.p` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33d342.  v4.`com.bumptech.glide.request.a.p` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L33d346.  v4.`com.bumptech.glide.request.a.q` @type ^`int` := v1;
  #L33d34a.  v0:= v4.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d34e.  v0:= v0 ^& -16385;
  #L33d352.  v4.`com.bumptech.glide.request.a.b` @type ^`int` := v0;
  #L33d356.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d35a.  v3:= 16384I;
  #L33d35e.  call temp:= `Q`(v0, v3) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d364.  v0:= temp;
  #L33d366.  if v0 == 0 then goto L33d382;
  #L33d36a.  v0:= v5.`com.bumptech.glide.request.a.q` @type ^`int`;
  #L33d36e.  v4.`com.bumptech.glide.request.a.q` @type ^`int` := v0;
  #L33d372.  v4.`com.bumptech.glide.request.a.p` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L33d376.  v0:= v4.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d37a.  v0:= v0 ^& -8193;
  #L33d37e.  v4.`com.bumptech.glide.request.a.b` @type ^`int` := v0;
  #L33d382.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d386.  v2:= 32768I;
  #L33d38c.  call temp:= `Q`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d392.  v0:= temp;
  #L33d394.  if v0 == 0 then goto L33d3a0;
  #L33d398.  v0:= v5.`com.bumptech.glide.request.a.v` @type ^`android.content.res.Resources$Theme` @kind object;
  #L33d39c.  v4.`com.bumptech.glide.request.a.v` @type ^`android.content.res.Resources$Theme` := v0 @kind object;
  #L33d3a0.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d3a4.  v2:= 65536I;
  #L33d3a8.  call temp:= `Q`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d3ae.  v0:= temp;
  #L33d3b0.  if v0 == 0 then goto L33d3bc;
  #L33d3b4.  v0:= v5.`com.bumptech.glide.request.a.o` @type ^`boolean` @kind boolean;
  #L33d3b8.  v4.`com.bumptech.glide.request.a.o` @type ^`boolean` := v0 @kind boolean;
  #L33d3bc.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d3c0.  v2:= 131072I;
  #L33d3c4.  call temp:= `Q`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d3ca.  v0:= temp;
  #L33d3cc.  if v0 == 0 then goto L33d3d8;
  #L33d3d0.  v0:= v5.`com.bumptech.glide.request.a.n` @type ^`boolean` @kind boolean;
  #L33d3d4.  v4.`com.bumptech.glide.request.a.n` @type ^`boolean` := v0 @kind boolean;
  #L33d3d8.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d3dc.  v2:= 2048I;
  #L33d3e0.  call temp:= `Q`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d3e6.  v0:= temp;
  #L33d3e8.  if v0 == 0 then goto L33d402;
  #L33d3ec.  v0:= v4.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L33d3f0.  v2:= v5.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L33d3f4.  call `putAll`(v0, v2) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L33d3fa.  v0:= v5.`com.bumptech.glide.request.a.z` @type ^`boolean` @kind boolean;
  #L33d3fe.  v4.`com.bumptech.glide.request.a.z` @type ^`boolean` := v0 @kind boolean;
  #L33d402.  v0:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d406.  v2:= 524288I;
  #L33d40a.  call temp:= `Q`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.Q:(II)Z` @kind static;
  #L33d410.  v0:= temp;
  #L33d412.  if v0 == 0 then goto L33d41e;
  #L33d416.  v0:= v5.`com.bumptech.glide.request.a.y` @type ^`boolean` @kind boolean;
  #L33d41a.  v4.`com.bumptech.glide.request.a.y` @type ^`boolean` := v0 @kind boolean;
  #L33d41e.  v0:= v4.`com.bumptech.glide.request.a.o` @type ^`boolean` @kind boolean;
  #L33d422.  if v0 != 0 then goto L33d452;
  #L33d426.  v0:= v4.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L33d42a.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L33d430.  v0:= v4.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d434.  v0:= v0 ^& -2049;
  #L33d438.  v4.`com.bumptech.glide.request.a.b` @type ^`int` := v0;
  #L33d43c.  v4.`com.bumptech.glide.request.a.n` @type ^`boolean` := v1 @kind boolean;
  #L33d440.  v1:= -131073I;
  #L33d446.  v0:= v0 ^& v1 @kind int;
  #L33d448.  v4.`com.bumptech.glide.request.a.b` @type ^`int` := v0;
  #L33d44c.  v0:= 1I;
  #L33d44e.  v4.`com.bumptech.glide.request.a.z` @type ^`boolean` := v0 @kind boolean;
  #L33d452.  v0:= v4.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d456.  v1:= v5.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d45a.  v0:= v0 ^| v1 @kind int;
  #L33d45c.  v4.`com.bumptech.glide.request.a.b` @type ^`int` := v0;
  #L33d460.  v0:= v4.`com.bumptech.glide.request.a.r` @type ^`com.bumptech.glide.load.h` @kind object;
  #L33d464.  v5:= v5.`com.bumptech.glide.request.a.r` @type ^`com.bumptech.glide.load.h` @kind object;
  #L33d468.  call `d`(v0, v5) @signature `Lcom/bumptech/glide/load/h;.d:(Lcom/bumptech/glide/load/h;)V` @kind virtual;
  #L33d46e.  call temp:= `h0`(v4) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d474.  v5:= temp @kind object;
  #L33d476.  return v5 @kind object;
}
procedure `com.bumptech.glide.request.a` `a0`(`com.bumptech.glide.request.a` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object, `com.bumptech.glide.load.k` v3 @kind object) @signature `Lcom/bumptech/glide/request/a;.a0:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @AccessFlag FINAL {
    temp;
    v0;

  #L33d7e0.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33d7e4.  if v0 == 0 then goto L33d7fa;
  #L33d7e8.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d7ee.  v0:= temp @kind object;
  #L33d7f0.  call temp:= `a0`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/a;.a0:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d7f6.  v2:= temp @kind object;
  #L33d7f8.  return v2 @kind object;
  #L33d7fa.  call temp:= `j`(v1, v2) @signature `Lcom/bumptech/glide/request/a;.j:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d800.  v2:= 0I;
  #L33d802.  call temp:= `p0`(v1, v3, v2) @signature `Lcom/bumptech/glide/request/a;.p0:(Lcom/bumptech/glide/load/k;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d808.  v2:= temp @kind object;
  #L33d80a.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `b`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.b:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33d488.  v0:= v2.`com.bumptech.glide.request.a.u` @type ^`boolean` @kind boolean;
  #L33d48c.  if v0 == 0 then goto L33d4aa;
  #L33d490.  v0:= v2.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33d494.  if v0 == 0 then goto L33d49a;
  #L33d498.  goto L33d4aa;
  #L33d49a.  v0:= new `java.lang.IllegalStateException`;
  #L33d49e.  v1:= "You cannot auto lock an already locked options object, try clone() first" @kind object;
  #L33d4a2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33d4a8.  throw v0;
  #L33d4aa.  v0:= 1I;
  #L33d4ac.  v2.`com.bumptech.glide.request.a.w` @type ^`boolean` := v0 @kind boolean;
  #L33d4b0.  call temp:= `V`(v2) @signature `Lcom/bumptech/glide/request/a;.V:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d4b6.  v0:= temp @kind object;
  #L33d4b8.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `b0`(`com.bumptech.glide.request.a` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/request/a;.b0:(II)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33d81c.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33d820.  if v0 == 0 then goto L33d836;
  #L33d824.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d82a.  v0:= temp @kind object;
  #L33d82c.  call temp:= `b0`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/a;.b0:(II)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d832.  v2:= temp @kind object;
  #L33d834.  return v2 @kind object;
  #L33d836.  v1.`com.bumptech.glide.request.a.l` @type ^`int` := v2;
  #L33d83a.  v1.`com.bumptech.glide.request.a.k` @type ^`int` := v3;
  #L33d83e.  v2:= v1.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d842.  v2:= v2 ^| 512;
  #L33d846.  v1.`com.bumptech.glide.request.a.b` @type ^`int` := v2;
  #L33d84a.  call temp:= `h0`(v1) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d850.  v2:= temp @kind object;
  #L33d852.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `c0`(`com.bumptech.glide.request.a` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/a;.c0:(I)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33d864.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33d868.  if v0 == 0 then goto L33d87e;
  #L33d86c.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d872.  v0:= temp @kind object;
  #L33d874.  call temp:= `c0`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.c0:(I)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d87a.  v2:= temp @kind object;
  #L33d87c.  return v2 @kind object;
  #L33d87e.  v1.`com.bumptech.glide.request.a.i` @type ^`int` := v2;
  #L33d882.  v2:= v1.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d886.  v2:= v2 ^| 128;
  #L33d88a.  v1.`com.bumptech.glide.request.a.b` @type ^`int` := v2;
  #L33d88e.  v0:= 0I;
  #L33d890.  v1.`com.bumptech.glide.request.a.h` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L33d894.  v2:= v2 ^& -65;
  #L33d898.  v1.`com.bumptech.glide.request.a.b` @type ^`int` := v2;
  #L33d89c.  call temp:= `h0`(v1) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d8a2.  v2:= temp @kind object;
  #L33d8a4.  return v2 @kind object;
}
procedure `java.lang.Object` `clone`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L33de64.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33de6a.  v0:= temp @kind object;
  #L33de6c.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `d`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.d:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33d4cc.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.b` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L33d4d0.  v1:= new `com.bumptech.glide.load.resource.bitmap.g`;
  #L33d4d4.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/g;.<init>:()V` @kind direct;
  #L33d4da.  call temp:= `q0`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/a;.q0:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d4e0.  v0:= temp @kind object;
  #L33d4e2.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `d0`(`com.bumptech.glide.request.a` v1 @kind this, `com.bumptech.glide.Priority` v2 @kind object) @signature `Lcom/bumptech/glide/request/a;.d0:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33d8b8.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33d8bc.  if v0 == 0 then goto L33d8d2;
  #L33d8c0.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d8c6.  v0:= temp @kind object;
  #L33d8c8.  call temp:= `d0`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.d0:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d8ce.  v2:= temp @kind object;
  #L33d8d0.  return v2 @kind object;
  #L33d8d2.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33d8d8.  v2:= temp @kind object;
  #L33d8da.  v2:= (`com.bumptech.glide.Priority`) v2 @kind object;
  #L33d8de.  v1.`com.bumptech.glide.request.a.e` @type ^`com.bumptech.glide.Priority` := v2 @kind object;
  #L33d8e2.  v2:= v1.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d8e6.  v2:= v2 ^| 8;
  #L33d8ea.  v1.`com.bumptech.glide.request.a.b` @type ^`int` := v2;
  #L33d8ee.  call temp:= `h0`(v1) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d8f4.  v2:= temp @kind object;
  #L33d8f6.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `e`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.e:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33d4f4.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.e` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L33d4f8.  v1:= new `com.bumptech.glide.load.resource.bitmap.i`;
  #L33d4fc.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/i;.<init>:()V` @kind direct;
  #L33d502.  call temp:= `q0`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/a;.q0:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d508.  v0:= temp @kind object;
  #L33d50a.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.request.a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/request/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L33ce40.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.request.a` @kind boolean;
  #L33ce44.  v1:= 0I;
  #L33ce46.  if v0 == 0 then goto L33cf9c;
  #L33ce4a.  v4:= (`com.bumptech.glide.request.a`) v4 @kind object;
  #L33ce4e.  v0:= v4.`com.bumptech.glide.request.a.c` @type ^`float`;
  #L33ce52.  v2:= v3.`com.bumptech.glide.request.a.c` @type ^`float`;
  #L33ce56.  call temp:= `compare`(v0, v2) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L33ce5c.  v0:= temp;
  #L33ce5e.  if v0 != 0 then goto L33cf9c;
  #L33ce62.  v0:= v3.`com.bumptech.glide.request.a.g` @type ^`int`;
  #L33ce66.  v2:= v4.`com.bumptech.glide.request.a.g` @type ^`int`;
  #L33ce6a.  if v0 != v2 then goto L33cf9c;
  #L33ce6e.  v0:= v3.`com.bumptech.glide.request.a.f` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33ce72.  v2:= v4.`com.bumptech.glide.request.a.f` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33ce76.  call temp:= `d`(v0, v2) @signature `Lcom/bumptech/glide/s/p;.d:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L33ce7c.  v0:= temp;
  #L33ce7e.  if v0 == 0 then goto L33cf9c;
  #L33ce82.  v0:= v3.`com.bumptech.glide.request.a.i` @type ^`int`;
  #L33ce86.  v2:= v4.`com.bumptech.glide.request.a.i` @type ^`int`;
  #L33ce8a.  if v0 != v2 then goto L33cf9c;
  #L33ce8e.  v0:= v3.`com.bumptech.glide.request.a.h` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33ce92.  v2:= v4.`com.bumptech.glide.request.a.h` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33ce96.  call temp:= `d`(v0, v2) @signature `Lcom/bumptech/glide/s/p;.d:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L33ce9c.  v0:= temp;
  #L33ce9e.  if v0 == 0 then goto L33cf9c;
  #L33cea2.  v0:= v3.`com.bumptech.glide.request.a.q` @type ^`int`;
  #L33cea6.  v2:= v4.`com.bumptech.glide.request.a.q` @type ^`int`;
  #L33ceaa.  if v0 != v2 then goto L33cf9c;
  #L33ceae.  v0:= v3.`com.bumptech.glide.request.a.p` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33ceb2.  v2:= v4.`com.bumptech.glide.request.a.p` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33ceb6.  call temp:= `d`(v0, v2) @signature `Lcom/bumptech/glide/s/p;.d:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L33cebc.  v0:= temp;
  #L33cebe.  if v0 == 0 then goto L33cf9c;
  #L33cec2.  v0:= v3.`com.bumptech.glide.request.a.j` @type ^`boolean` @kind boolean;
  #L33cec6.  v2:= v4.`com.bumptech.glide.request.a.j` @type ^`boolean` @kind boolean;
  #L33ceca.  if v0 != v2 then goto L33cf9c;
  #L33cece.  v0:= v3.`com.bumptech.glide.request.a.k` @type ^`int`;
  #L33ced2.  v2:= v4.`com.bumptech.glide.request.a.k` @type ^`int`;
  #L33ced6.  if v0 != v2 then goto L33cf9c;
  #L33ceda.  v0:= v3.`com.bumptech.glide.request.a.l` @type ^`int`;
  #L33cede.  v2:= v4.`com.bumptech.glide.request.a.l` @type ^`int`;
  #L33cee2.  if v0 != v2 then goto L33cf9c;
  #L33cee6.  v0:= v3.`com.bumptech.glide.request.a.n` @type ^`boolean` @kind boolean;
  #L33ceea.  v2:= v4.`com.bumptech.glide.request.a.n` @type ^`boolean` @kind boolean;
  #L33ceee.  if v0 != v2 then goto L33cf9c;
  #L33cef2.  v0:= v3.`com.bumptech.glide.request.a.o` @type ^`boolean` @kind boolean;
  #L33cef6.  v2:= v4.`com.bumptech.glide.request.a.o` @type ^`boolean` @kind boolean;
  #L33cefa.  if v0 != v2 then goto L33cf9c;
  #L33cefe.  v0:= v3.`com.bumptech.glide.request.a.x` @type ^`boolean` @kind boolean;
  #L33cf02.  v2:= v4.`com.bumptech.glide.request.a.x` @type ^`boolean` @kind boolean;
  #L33cf06.  if v0 != v2 then goto L33cf9c;
  #L33cf0a.  v0:= v3.`com.bumptech.glide.request.a.y` @type ^`boolean` @kind boolean;
  #L33cf0e.  v2:= v4.`com.bumptech.glide.request.a.y` @type ^`boolean` @kind boolean;
  #L33cf12.  if v0 != v2 then goto L33cf9c;
  #L33cf16.  v0:= v3.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.load.engine.y` @kind object;
  #L33cf1a.  v2:= v4.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.load.engine.y` @kind object;
  #L33cf1e.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33cf24.  v0:= temp;
  #L33cf26.  if v0 == 0 then goto L33cf9c;
  #L33cf2a.  v0:= v3.`com.bumptech.glide.request.a.e` @type ^`com.bumptech.glide.Priority` @kind object;
  #L33cf2e.  v2:= v4.`com.bumptech.glide.request.a.e` @type ^`com.bumptech.glide.Priority` @kind object;
  #L33cf32.  if v0 != v2 then goto L33cf9c;
  #L33cf36.  v0:= v3.`com.bumptech.glide.request.a.r` @type ^`com.bumptech.glide.load.h` @kind object;
  #L33cf3a.  v2:= v4.`com.bumptech.glide.request.a.r` @type ^`com.bumptech.glide.load.h` @kind object;
  #L33cf3e.  call temp:= `equals`(v0, v2) @signature `Lcom/bumptech/glide/load/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33cf44.  v0:= temp;
  #L33cf46.  if v0 == 0 then goto L33cf9c;
  #L33cf4a.  v0:= v3.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L33cf4e.  v2:= v4.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L33cf52.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L33cf58.  v0:= temp;
  #L33cf5a.  if v0 == 0 then goto L33cf9c;
  #L33cf5e.  v0:= v3.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` @kind object;
  #L33cf62.  v2:= v4.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` @kind object;
  #L33cf66.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33cf6c.  v0:= temp;
  #L33cf6e.  if v0 == 0 then goto L33cf9c;
  #L33cf72.  v0:= v3.`com.bumptech.glide.request.a.m` @type ^`com.bumptech.glide.load.c` @kind object;
  #L33cf76.  v2:= v4.`com.bumptech.glide.request.a.m` @type ^`com.bumptech.glide.load.c` @kind object;
  #L33cf7a.  call temp:= `d`(v0, v2) @signature `Lcom/bumptech/glide/s/p;.d:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L33cf80.  v0:= temp;
  #L33cf82.  if v0 == 0 then goto L33cf9c;
  #L33cf86.  v0:= v3.`com.bumptech.glide.request.a.v` @type ^`android.content.res.Resources$Theme` @kind object;
  #L33cf8a.  v4:= v4.`com.bumptech.glide.request.a.v` @type ^`android.content.res.Resources$Theme` @kind object;
  #L33cf8e.  call temp:= `d`(v0, v4) @signature `Lcom/bumptech/glide/s/p;.d:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L33cf94.  v4:= temp;
  #L33cf96.  if v4 == 0 then goto L33cf9c;
  #L33cf9a.  v1:= 1I;
  #L33cf9c.  return v1;
}
procedure `com.bumptech.glide.request.a` `f`(`com.bumptech.glide.request.a` v3 @kind this) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L33d51c.  call temp:= `clone`(v3) @signature `Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind super;
  #L33d522.  v0:= temp @kind object;
  #L33d524.  v0:= (`com.bumptech.glide.request.a`) v0 @kind object;
  #L33d528.  v1:= new `com.bumptech.glide.load.h`;
  #L33d52c.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/h;.<init>:()V` @kind direct;
  #L33d532.  v0.`com.bumptech.glide.request.a.r` @type ^`com.bumptech.glide.load.h` := v1 @kind object;
  #L33d536.  v2:= v3.`com.bumptech.glide.request.a.r` @type ^`com.bumptech.glide.load.h` @kind object;
  #L33d53a.  call `d`(v1, v2) @signature `Lcom/bumptech/glide/load/h;.d:(Lcom/bumptech/glide/load/h;)V` @kind virtual;
  #L33d540.  v1:= new `com.bumptech.glide.s.d`;
  #L33d544.  call `<init>`(v1) @signature `Lcom/bumptech/glide/s/d;.<init>:()V` @kind direct;
  #L33d54a.  v0.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` := v1 @kind object;
  #L33d54e.  v2:= v3.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L33d552.  call `putAll`(v1, v2) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L33d558.  v1:= 0I;
  #L33d55a.  v0.`com.bumptech.glide.request.a.u` @type ^`boolean` := v1 @kind boolean;
  #L33d55e.  v0.`com.bumptech.glide.request.a.w` @type ^`boolean` := v1 @kind boolean;
  #L33d562.  return v0 @kind object;
  #L33d564.  v0:= Exception @type ^`java.lang.CloneNotSupportedException` @kind object;
  #L33d566.  v1:= new `java.lang.RuntimeException`;
  #L33d56a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L33d570.  throw v1;
  catch `java.lang.CloneNotSupportedException` @[L33d51c..L33d562] goto L33d564;
}
procedure `com.bumptech.glide.request.a` `g`(`com.bumptech.glide.request.a` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/request/a;.g:(Ljava/lang/Class;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33d594.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33d598.  if v0 == 0 then goto L33d5ae;
  #L33d59c.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d5a2.  v0:= temp @kind object;
  #L33d5a4.  call temp:= `g`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.g:(Ljava/lang/Class;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d5aa.  v2:= temp @kind object;
  #L33d5ac.  return v2 @kind object;
  #L33d5ae.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33d5b4.  v2:= temp @kind object;
  #L33d5b6.  v2:= (`java.lang.Class`) v2 @kind object;
  #L33d5ba.  v1.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` := v2 @kind object;
  #L33d5be.  v2:= v1.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d5c2.  v2:= v2 ^| 4096;
  #L33d5c6.  v1.`com.bumptech.glide.request.a.b` @type ^`int` := v2;
  #L33d5ca.  call temp:= `h0`(v1) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d5d0.  v2:= temp @kind object;
  #L33d5d2.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `h`(`com.bumptech.glide.request.a` v1 @kind this, `com.bumptech.glide.load.engine.y` v2 @kind object) @signature `Lcom/bumptech/glide/request/a;.h:(Lcom/bumptech/glide/load/engine/y;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33d5e4.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33d5e8.  if v0 == 0 then goto L33d5fe;
  #L33d5ec.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d5f2.  v0:= temp @kind object;
  #L33d5f4.  call temp:= `h`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.h:(Lcom/bumptech/glide/load/engine/y;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d5fa.  v2:= temp @kind object;
  #L33d5fc.  return v2 @kind object;
  #L33d5fe.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33d604.  v2:= temp @kind object;
  #L33d606.  v2:= (`com.bumptech.glide.load.engine.y`) v2 @kind object;
  #L33d60a.  v1.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.load.engine.y` := v2 @kind object;
  #L33d60e.  v2:= v1.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d612.  v2:= v2 ^| 4;
  #L33d616.  v1.`com.bumptech.glide.request.a.b` @type ^`int` := v2;
  #L33d61a.  call temp:= `h0`(v1) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d620.  v2:= temp @kind object;
  #L33d622.  return v2 @kind object;
}
procedure `int` `hashCode`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33dd3c.  v0:= v2.`com.bumptech.glide.request.a.c` @type ^`float`;
  #L33dd40.  call temp:= `k`(v0) @signature `Lcom/bumptech/glide/s/p;.k:(F)I` @kind static;
  #L33dd46.  v0:= temp;
  #L33dd48.  v1:= v2.`com.bumptech.glide.request.a.g` @type ^`int`;
  #L33dd4c.  call temp:= `n`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.n:(II)I` @kind static;
  #L33dd52.  v0:= temp;
  #L33dd54.  v1:= v2.`com.bumptech.glide.request.a.f` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33dd58.  call temp:= `o`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.o:(Ljava/lang/Object;I)I` @kind static;
  #L33dd5e.  v0:= temp;
  #L33dd60.  v1:= v2.`com.bumptech.glide.request.a.i` @type ^`int`;
  #L33dd64.  call temp:= `n`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.n:(II)I` @kind static;
  #L33dd6a.  v0:= temp;
  #L33dd6c.  v1:= v2.`com.bumptech.glide.request.a.h` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33dd70.  call temp:= `o`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.o:(Ljava/lang/Object;I)I` @kind static;
  #L33dd76.  v0:= temp;
  #L33dd78.  v1:= v2.`com.bumptech.glide.request.a.q` @type ^`int`;
  #L33dd7c.  call temp:= `n`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.n:(II)I` @kind static;
  #L33dd82.  v0:= temp;
  #L33dd84.  v1:= v2.`com.bumptech.glide.request.a.p` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33dd88.  call temp:= `o`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.o:(Ljava/lang/Object;I)I` @kind static;
  #L33dd8e.  v0:= temp;
  #L33dd90.  v1:= v2.`com.bumptech.glide.request.a.j` @type ^`boolean` @kind boolean;
  #L33dd94.  call temp:= `p`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.p:(ZI)I` @kind static;
  #L33dd9a.  v0:= temp;
  #L33dd9c.  v1:= v2.`com.bumptech.glide.request.a.k` @type ^`int`;
  #L33dda0.  call temp:= `n`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.n:(II)I` @kind static;
  #L33dda6.  v0:= temp;
  #L33dda8.  v1:= v2.`com.bumptech.glide.request.a.l` @type ^`int`;
  #L33ddac.  call temp:= `n`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.n:(II)I` @kind static;
  #L33ddb2.  v0:= temp;
  #L33ddb4.  v1:= v2.`com.bumptech.glide.request.a.n` @type ^`boolean` @kind boolean;
  #L33ddb8.  call temp:= `p`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.p:(ZI)I` @kind static;
  #L33ddbe.  v0:= temp;
  #L33ddc0.  v1:= v2.`com.bumptech.glide.request.a.o` @type ^`boolean` @kind boolean;
  #L33ddc4.  call temp:= `p`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.p:(ZI)I` @kind static;
  #L33ddca.  v0:= temp;
  #L33ddcc.  v1:= v2.`com.bumptech.glide.request.a.x` @type ^`boolean` @kind boolean;
  #L33ddd0.  call temp:= `p`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.p:(ZI)I` @kind static;
  #L33ddd6.  v0:= temp;
  #L33ddd8.  v1:= v2.`com.bumptech.glide.request.a.y` @type ^`boolean` @kind boolean;
  #L33dddc.  call temp:= `p`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.p:(ZI)I` @kind static;
  #L33dde2.  v0:= temp;
  #L33dde4.  v1:= v2.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.load.engine.y` @kind object;
  #L33dde8.  call temp:= `o`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.o:(Ljava/lang/Object;I)I` @kind static;
  #L33ddee.  v0:= temp;
  #L33ddf0.  v1:= v2.`com.bumptech.glide.request.a.e` @type ^`com.bumptech.glide.Priority` @kind object;
  #L33ddf4.  call temp:= `o`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.o:(Ljava/lang/Object;I)I` @kind static;
  #L33ddfa.  v0:= temp;
  #L33ddfc.  v1:= v2.`com.bumptech.glide.request.a.r` @type ^`com.bumptech.glide.load.h` @kind object;
  #L33de00.  call temp:= `o`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.o:(Ljava/lang/Object;I)I` @kind static;
  #L33de06.  v0:= temp;
  #L33de08.  v1:= v2.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L33de0c.  call temp:= `o`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.o:(Ljava/lang/Object;I)I` @kind static;
  #L33de12.  v0:= temp;
  #L33de14.  v1:= v2.`com.bumptech.glide.request.a.t` @type ^`java.lang.Class` @kind object;
  #L33de18.  call temp:= `o`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.o:(Ljava/lang/Object;I)I` @kind static;
  #L33de1e.  v0:= temp;
  #L33de20.  v1:= v2.`com.bumptech.glide.request.a.m` @type ^`com.bumptech.glide.load.c` @kind object;
  #L33de24.  call temp:= `o`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.o:(Ljava/lang/Object;I)I` @kind static;
  #L33de2a.  v0:= temp;
  #L33de2c.  v1:= v2.`com.bumptech.glide.request.a.v` @type ^`android.content.res.Resources$Theme` @kind object;
  #L33de30.  call temp:= `o`(v1, v0) @signature `Lcom/bumptech/glide/s/p;.o:(Ljava/lang/Object;I)I` @kind static;
  #L33de36.  v0:= temp;
  #L33de38.  return v0;
}
procedure `com.bumptech.glide.request.a` `i`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.i:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33d634.  v0:= `@@com.bumptech.glide.load.n.f.p.b` @type ^`com.bumptech.glide.load.g` @kind object;
  #L33d638.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L33d63c.  call temp:= `i0`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/a;.i0:(Lcom/bumptech/glide/load/g;Ljava/lang/Object;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d642.  v0:= temp @kind object;
  #L33d644.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `i0`(`com.bumptech.glide.request.a` v1 @kind this, `com.bumptech.glide.load.g` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/request/a;.i0:(Lcom/bumptech/glide/load/g;Ljava/lang/Object;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33d99c.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33d9a0.  if v0 == 0 then goto L33d9b6;
  #L33d9a4.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d9aa.  v0:= temp @kind object;
  #L33d9ac.  call temp:= `i0`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/a;.i0:(Lcom/bumptech/glide/load/g;Ljava/lang/Object;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d9b2.  v2:= temp @kind object;
  #L33d9b4.  return v2 @kind object;
  #L33d9b6.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33d9bc.  call temp:= `d`(v3) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33d9c2.  v0:= v1.`com.bumptech.glide.request.a.r` @type ^`com.bumptech.glide.load.h` @kind object;
  #L33d9c6.  call temp:= `e`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/h;.e:(Lcom/bumptech/glide/load/g;Ljava/lang/Object;)Lcom/bumptech/glide/load/h;` @kind virtual;
  #L33d9cc.  call temp:= `h0`(v1) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d9d2.  v2:= temp @kind object;
  #L33d9d4.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `j`(`com.bumptech.glide.request.a` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object) @signature `Lcom/bumptech/glide/request/a;.j:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33d658.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.h` @type ^`com.bumptech.glide.load.g` @kind object;
  #L33d65c.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33d662.  v2:= temp @kind object;
  #L33d664.  call temp:= `i0`(v1, v0, v2) @signature `Lcom/bumptech/glide/request/a;.i0:(Lcom/bumptech/glide/load/g;Ljava/lang/Object;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d66a.  v2:= temp @kind object;
  #L33d66c.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `j0`(`com.bumptech.glide.request.a` v1 @kind this, `com.bumptech.glide.load.c` v2 @kind object) @signature `Lcom/bumptech/glide/request/a;.j0:(Lcom/bumptech/glide/load/c;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33d9e8.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33d9ec.  if v0 == 0 then goto L33da02;
  #L33d9f0.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d9f6.  v0:= temp @kind object;
  #L33d9f8.  call temp:= `j0`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.j0:(Lcom/bumptech/glide/load/c;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d9fe.  v2:= temp @kind object;
  #L33da00.  return v2 @kind object;
  #L33da02.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33da08.  v2:= temp @kind object;
  #L33da0a.  v2:= (`com.bumptech.glide.load.c`) v2 @kind object;
  #L33da0e.  v1.`com.bumptech.glide.request.a.m` @type ^`com.bumptech.glide.load.c` := v2 @kind object;
  #L33da12.  v2:= v1.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33da16.  v2:= v2 ^| 1024;
  #L33da1a.  v1.`com.bumptech.glide.request.a.b` @type ^`int` := v2;
  #L33da1e.  call temp:= `h0`(v1) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33da24.  v2:= temp @kind object;
  #L33da26.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `k`(`com.bumptech.glide.request.a` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/a;.k:(I)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33d680.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33d684.  if v0 == 0 then goto L33d69a;
  #L33d688.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d68e.  v0:= temp @kind object;
  #L33d690.  call temp:= `k`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.k:(I)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d696.  v2:= temp @kind object;
  #L33d698.  return v2 @kind object;
  #L33d69a.  v1.`com.bumptech.glide.request.a.g` @type ^`int` := v2;
  #L33d69e.  v2:= v1.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33d6a2.  v2:= v2 ^| 32;
  #L33d6a6.  v1.`com.bumptech.glide.request.a.b` @type ^`int` := v2;
  #L33d6aa.  v0:= 0I;
  #L33d6ac.  v1.`com.bumptech.glide.request.a.f` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L33d6b0.  v2:= v2 ^& -17;
  #L33d6b4.  v1.`com.bumptech.glide.request.a.b` @type ^`int` := v2;
  #L33d6b8.  call temp:= `h0`(v1) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d6be.  v2:= temp @kind object;
  #L33d6c0.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `k0`(`com.bumptech.glide.request.a` v1 @kind this, `float` v2 ) @signature `Lcom/bumptech/glide/request/a;.k0:(F)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33da38.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33da3c.  if v0 == 0 then goto L33da52;
  #L33da40.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33da46.  v0:= temp @kind object;
  #L33da48.  call temp:= `k0`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.k0:(F)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33da4e.  v2:= temp @kind object;
  #L33da50.  return v2 @kind object;
  #L33da52.  v0:= 0I;
  #L33da54.  v0:= fcmpg(v2, v0);
  #L33da58.  if v0 < 0 then goto L33da82;
  #L33da5c.  v0:= 1.0F;
  #L33da60.  v0:= fcmpl(v2, v0);
  #L33da64.  if v0 > 0 then goto L33da82;
  #L33da68.  v1.`com.bumptech.glide.request.a.c` @type ^`float` := v2;
  #L33da6c.  v2:= v1.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33da70.  v2:= v2 ^| 2;
  #L33da74.  v1.`com.bumptech.glide.request.a.b` @type ^`int` := v2;
  #L33da78.  call temp:= `h0`(v1) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33da7e.  v2:= temp @kind object;
  #L33da80.  return v2 @kind object;
  #L33da82.  v2:= new `java.lang.IllegalArgumentException`;
  #L33da86.  v0:= "sizeMultiplier must be between 0 and 1" @kind object;
  #L33da8a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33da90.  throw v2;
}
procedure `com.bumptech.glide.request.a` `l`(`com.bumptech.glide.request.a` v2 @kind this) @signature `Lcom/bumptech/glide/request/a;.l:()Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33d6d4.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.a` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L33d6d8.  v1:= new `com.bumptech.glide.load.resource.bitmap.b0`;
  #L33d6dc.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/b0;.<init>:()V` @kind direct;
  #L33d6e2.  call temp:= `e0`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/a;.e0:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @kind direct;
  #L33d6e8.  v0:= temp @kind object;
  #L33d6ea.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `l0`(`com.bumptech.glide.request.a` v2 @kind this, `boolean` v3 ) @signature `Lcom/bumptech/glide/request/a;.l0:(Z)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33daa4.  v0:= v2.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33daa8.  v1:= 1I;
  #L33daaa.  if v0 == 0 then goto L33dac0;
  #L33daae.  call temp:= `f`(v2) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33dab4.  v3:= temp @kind object;
  #L33dab6.  call temp:= `l0`(v3, v1) @signature `Lcom/bumptech/glide/request/a;.l0:(Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33dabc.  v3:= temp @kind object;
  #L33dabe.  return v3 @kind object;
  #L33dac0.  v3:= v3 ^~ v1 @kind int;
  #L33dac2.  v2.`com.bumptech.glide.request.a.j` @type ^`boolean` := v3 @kind boolean;
  #L33dac6.  v3:= v2.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33daca.  v3:= v3 ^| 256;
  #L33dace.  v2.`com.bumptech.glide.request.a.b` @type ^`int` := v3;
  #L33dad2.  call temp:= `h0`(v2) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33dad8.  v3:= temp @kind object;
  #L33dada.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.a` `n`(`com.bumptech.glide.request.a` v2 @kind this, `com.bumptech.glide.load.DecodeFormat` v3 @kind object) @signature `Lcom/bumptech/glide/request/a;.n:(Lcom/bumptech/glide/load/DecodeFormat;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33d6fc.  call temp:= `d`(v3) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33d702.  v0:= `@@com.bumptech.glide.load.resource.bitmap.w.a` @type ^`com.bumptech.glide.load.g` @kind object;
  #L33d706.  call temp:= `i0`(v2, v0, v3) @signature `Lcom/bumptech/glide/request/a;.i0:(Lcom/bumptech/glide/load/g;Ljava/lang/Object;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d70c.  v0:= temp @kind object;
  #L33d70e.  v1:= `@@com.bumptech.glide.load.n.f.p.a` @type ^`com.bumptech.glide.load.g` @kind object;
  #L33d712.  call temp:= `i0`(v0, v1, v3) @signature `Lcom/bumptech/glide/request/a;.i0:(Lcom/bumptech/glide/load/g;Ljava/lang/Object;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33d718.  v3:= temp @kind object;
  #L33d71a.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.a` `n0`(`com.bumptech.glide.request.a` v1 @kind this, `com.bumptech.glide.load.k` v2 @kind object) @signature `Lcom/bumptech/glide/request/a;.n0:(Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33daec.  v0:= 1I;
  #L33daee.  call temp:= `p0`(v1, v2, v0) @signature `Lcom/bumptech/glide/request/a;.p0:(Lcom/bumptech/glide/load/k;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33daf4.  v2:= temp @kind object;
  #L33daf6.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.y` `p`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.p:()Lcom/bumptech/glide/load/engine/y;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33d144.  v0:= v1.`com.bumptech.glide.request.a.d` @type ^`com.bumptech.glide.load.engine.y` @kind object;
  #L33d148.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `p0`(`com.bumptech.glide.request.a` v2 @kind this, `com.bumptech.glide.load.k` v3 @kind object, `boolean` v4 ) @signature `Lcom/bumptech/glide/request/a;.p0:(Lcom/bumptech/glide/load/k;Z)Lcom/bumptech/glide/request/a;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L33db08.  v0:= v2.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33db0c.  if v0 == 0 then goto L33db22;
  #L33db10.  call temp:= `f`(v2) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33db16.  v0:= temp @kind object;
  #L33db18.  call temp:= `p0`(v0, v3, v4) @signature `Lcom/bumptech/glide/request/a;.p0:(Lcom/bumptech/glide/load/k;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33db1e.  v3:= temp @kind object;
  #L33db20.  return v3 @kind object;
  #L33db22.  v0:= new `com.bumptech.glide.load.resource.bitmap.z`;
  #L33db26.  call `<init>`(v0, v3, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/z;.<init>:(Lcom/bumptech/glide/load/k;Z)V` @kind direct;
  #L33db2c.  v1:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L33db30.  call temp:= `r0`(v2, v1, v3, v4) @signature `Lcom/bumptech/glide/request/a;.r0:(Ljava/lang/Class;Lcom/bumptech/glide/load/k;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33db36.  v1:= constclass @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33db3a.  call temp:= `r0`(v2, v1, v0, v4) @signature `Lcom/bumptech/glide/request/a;.r0:(Ljava/lang/Class;Lcom/bumptech/glide/load/k;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33db40.  v1:= constclass @type ^`android.graphics.drawable.BitmapDrawable` @kind object;
  #L33db44.  call temp:= `c`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/z;.c:()Lcom/bumptech/glide/load/k;` @kind virtual;
  #L33db4a.  v0:= temp @kind object;
  #L33db4c.  call temp:= `r0`(v2, v1, v0, v4) @signature `Lcom/bumptech/glide/request/a;.r0:(Ljava/lang/Class;Lcom/bumptech/glide/load/k;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33db52.  v0:= constclass @type ^`com.bumptech.glide.load.n.f.f` @kind object;
  #L33db56.  v1:= new `com.bumptech.glide.load.n.f.i`;
  #L33db5a.  call `<init>`(v1, v3) @signature `Lcom/bumptech/glide/load/n/f/i;.<init>:(Lcom/bumptech/glide/load/k;)V` @kind direct;
  #L33db60.  call temp:= `r0`(v2, v0, v1, v4) @signature `Lcom/bumptech/glide/request/a;.r0:(Ljava/lang/Class;Lcom/bumptech/glide/load/k;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33db66.  call temp:= `h0`(v2) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33db6c.  v3:= temp @kind object;
  #L33db6e.  return v3 @kind object;
}
procedure `int` `q`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.q:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33dcc4.  v0:= v1.`com.bumptech.glide.request.a.g` @type ^`int`;
  #L33dcc8.  return v0;
}
procedure `com.bumptech.glide.request.a` `q0`(`com.bumptech.glide.request.a` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object, `com.bumptech.glide.load.k` v3 @kind object) @signature `Lcom/bumptech/glide/request/a;.q0:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @AccessFlag FINAL {
    temp;
    v0;

  #L33db80.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33db84.  if v0 == 0 then goto L33db9a;
  #L33db88.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33db8e.  v0:= temp @kind object;
  #L33db90.  call temp:= `q0`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/a;.q0:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33db96.  v2:= temp @kind object;
  #L33db98.  return v2 @kind object;
  #L33db9a.  call temp:= `j`(v1, v2) @signature `Lcom/bumptech/glide/request/a;.j:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33dba0.  call temp:= `n0`(v1, v3) @signature `Lcom/bumptech/glide/request/a;.n0:(Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33dba6.  v2:= temp @kind object;
  #L33dba8.  return v2 @kind object;
}
procedure `android.graphics.drawable.Drawable` `r`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.r:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33cdf8.  v0:= v1.`com.bumptech.glide.request.a.f` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33cdfc.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `r0`(`com.bumptech.glide.request.a` v1 @kind this, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.k` v3 @kind object, `boolean` v4 ) @signature `Lcom/bumptech/glide/request/a;.r0:(Ljava/lang/Class;Lcom/bumptech/glide/load/k;Z)Lcom/bumptech/glide/request/a;` @AccessFlag  {
    temp;
    v0;

  #L33dbbc.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33dbc0.  if v0 == 0 then goto L33dbd6;
  #L33dbc4.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33dbca.  v0:= temp @kind object;
  #L33dbcc.  call temp:= `r0`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/request/a;.r0:(Ljava/lang/Class;Lcom/bumptech/glide/load/k;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33dbd2.  v2:= temp @kind object;
  #L33dbd4.  return v2 @kind object;
  #L33dbd6.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33dbdc.  call temp:= `d`(v3) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33dbe2.  v0:= v1.`com.bumptech.glide.request.a.s` @type ^`java.util.Map` @kind object;
  #L33dbe6.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L33dbec.  v2:= v1.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33dbf0.  v2:= v2 ^| 2048;
  #L33dbf4.  v1.`com.bumptech.glide.request.a.b` @type ^`int` := v2;
  #L33dbf8.  v3:= 1I;
  #L33dbfa.  v1.`com.bumptech.glide.request.a.o` @type ^`boolean` := v3 @kind boolean;
  #L33dbfe.  v0:= 65536I;
  #L33dc02.  v2:= v2 ^| v0 @kind int;
  #L33dc04.  v1.`com.bumptech.glide.request.a.b` @type ^`int` := v2;
  #L33dc08.  v0:= 0I;
  #L33dc0a.  v1.`com.bumptech.glide.request.a.z` @type ^`boolean` := v0 @kind boolean;
  #L33dc0e.  if v4 == 0 then goto L33dc20;
  #L33dc12.  v4:= 131072I;
  #L33dc16.  v2:= v2 ^| v4 @kind int;
  #L33dc18.  v1.`com.bumptech.glide.request.a.b` @type ^`int` := v2;
  #L33dc1c.  v1.`com.bumptech.glide.request.a.n` @type ^`boolean` := v3 @kind boolean;
  #L33dc20.  call temp:= `h0`(v1) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33dc26.  v2:= temp @kind object;
  #L33dc28.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.a` `s0`(`com.bumptech.glide.request.a` v1 @kind this, `com.bumptech.glide.load.k`[] v2 @kind object) @signature `Lcom/bumptech/glide/request/a;.s0:([Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33dc3c.  v0:= new `com.bumptech.glide.load.d`;
  #L33dc40.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/d;.<init>:([Lcom/bumptech/glide/load/k;)V` @kind direct;
  #L33dc46.  v2:= 1I;
  #L33dc48.  call temp:= `p0`(v1, v0, v2) @signature `Lcom/bumptech/glide/request/a;.p0:(Lcom/bumptech/glide/load/k;Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33dc4e.  v2:= temp @kind object;
  #L33dc50.  return v2 @kind object;
}
procedure `android.graphics.drawable.Drawable` `t`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.t:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33ce10.  v0:= v1.`com.bumptech.glide.request.a.p` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L33ce14.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.a` `t0`(`com.bumptech.glide.request.a` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/request/a;.t0:(Z)Lcom/bumptech/glide/request/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33dc64.  v0:= v1.`com.bumptech.glide.request.a.w` @type ^`boolean` @kind boolean;
  #L33dc68.  if v0 == 0 then goto L33dc7e;
  #L33dc6c.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33dc72.  v0:= temp @kind object;
  #L33dc74.  call temp:= `t0`(v0, v2) @signature `Lcom/bumptech/glide/request/a;.t0:(Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L33dc7a.  v2:= temp @kind object;
  #L33dc7c.  return v2 @kind object;
  #L33dc7e.  v1.`com.bumptech.glide.request.a.A` @type ^`boolean` := v2 @kind boolean;
  #L33dc82.  v2:= v1.`com.bumptech.glide.request.a.b` @type ^`int`;
  #L33dc86.  v0:= 1048576I;
  #L33dc8a.  v2:= v2 ^| v0 @kind int;
  #L33dc8c.  v1.`com.bumptech.glide.request.a.b` @type ^`int` := v2;
  #L33dc90.  call temp:= `h0`(v1) @signature `Lcom/bumptech/glide/request/a;.h0:()Lcom/bumptech/glide/request/a;` @kind direct;
  #L33dc96.  v2:= temp @kind object;
  #L33dc98.  return v2 @kind object;
}
procedure `int` `u`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.u:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33dcdc.  v0:= v1.`com.bumptech.glide.request.a.q` @type ^`int`;
  #L33dce0.  return v0;
}
procedure `boolean` `w`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.w:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33cfb0.  v0:= v1.`com.bumptech.glide.request.a.y` @type ^`boolean` @kind boolean;
  #L33cfb4.  return v0;
}
procedure `com.bumptech.glide.load.h` `y`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.y:()Lcom/bumptech/glide/load/h;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33d12c.  v0:= v1.`com.bumptech.glide.request.a.r` @type ^`com.bumptech.glide.load.h` @kind object;
  #L33d130.  return v0 @kind object;
}
procedure `int` `z`(`com.bumptech.glide.request.a` v1 @kind this) @signature `Lcom/bumptech/glide/request/a;.z:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33dcf4.  v0:= v1.`com.bumptech.glide.request.a.k` @type ^`int`;
  #L33dcf8.  return v0;
}
