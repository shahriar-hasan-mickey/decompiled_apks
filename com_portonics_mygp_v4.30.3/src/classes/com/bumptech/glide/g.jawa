record `com.bumptech.glide.g` @kind class @AccessFlag PUBLIC extends `android.content.ContextWrapper` @kind class {
  `com.bumptech.glide.load.engine.bitmap_recycle.b` `com.bumptech.glide.g.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.Registry` `com.bumptech.glide.g.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.m.f` `com.bumptech.glide.g.d` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.i` `com.bumptech.glide.g.e` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.g.f` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.g.g` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.f0` `com.bumptech.glide.g.h` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.g.i` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.g.j` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.l` `@@com.bumptech.glide.g.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L31faf8.  v0:= new `com.bumptech.glide.d`;
  #L31fafc.  call `<init>`(v0) @signature `Lcom/bumptech/glide/d;.<init>:()V` @kind direct;
  #L31fb02.  `@@com.bumptech.glide.g.a` @type ^`com.bumptech.glide.l` := v0 @kind object;
  #L31fb06.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.g` v0 @kind this, `android.content.Context` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.b` v2 @kind object, `com.bumptech.glide.Registry` v3 @kind object, `com.bumptech.glide.request.m.f` v4 @kind object, `com.bumptech.glide.request.i` v5 @kind object, `java.util.Map` v6 @kind object, `java.util.List` v7 @kind object, `com.bumptech.glide.load.engine.f0` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Lcom/bumptech/glide/g;.<init>:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/bitmap_recycle/b;Lcom/bumptech/glide/Registry;Lcom/bumptech/glide/request/m/f;Lcom/bumptech/glide/request/i;Ljava/util/Map;Ljava/util/List;Lcom/bumptech/glide/load/engine/f0;ZI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L31fb18.  call temp:= `getApplicationContext`(v1) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L31fb1e.  v1:= temp @kind object;
  #L31fb20.  call `<init>`(v0, v1) @signature `Landroid/content/ContextWrapper;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L31fb26.  v0.`com.bumptech.glide.g.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.b` := v2 @kind object;
  #L31fb2a.  v0.`com.bumptech.glide.g.c` @type ^`com.bumptech.glide.Registry` := v3 @kind object;
  #L31fb2e.  v0.`com.bumptech.glide.g.d` @type ^`com.bumptech.glide.request.m.f` := v4 @kind object;
  #L31fb32.  v0.`com.bumptech.glide.g.e` @type ^`com.bumptech.glide.request.i` := v5 @kind object;
  #L31fb36.  v0.`com.bumptech.glide.g.f` @type ^`java.util.List` := v7 @kind object;
  #L31fb3a.  v0.`com.bumptech.glide.g.g` @type ^`java.util.Map` := v6 @kind object;
  #L31fb3e.  v0.`com.bumptech.glide.g.h` @type ^`com.bumptech.glide.load.engine.f0` := v8 @kind object;
  #L31fb42.  v0.`com.bumptech.glide.g.i` @type ^`boolean` := v9 @kind boolean;
  #L31fb46.  v0.`com.bumptech.glide.g.j` @type ^`int` := v10;
  #L31fb4a.  return @kind void;
}
procedure `com.bumptech.glide.request.m.l` `a`(`com.bumptech.glide.g` v1 @kind this, `android.widget.ImageView` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/g;.a:(Landroid/widget/ImageView;Ljava/lang/Class;)Lcom/bumptech/glide/request/m/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31faa8.  v0:= v1.`com.bumptech.glide.g.d` @type ^`com.bumptech.glide.request.m.f` @kind object;
  #L31faac.  call temp:= `a`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/m/f;.a:(Landroid/widget/ImageView;Ljava/lang/Class;)Lcom/bumptech/glide/request/m/l;` @kind virtual;
  #L31fab2.  v2:= temp @kind object;
  #L31fab4.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.b` `b`(`com.bumptech.glide.g` v1 @kind this) @signature `Lcom/bumptech/glide/g;.b:()Lcom/bumptech/glide/load/engine/bitmap_recycle/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31fa78.  v0:= v1.`com.bumptech.glide.g.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.b` @kind object;
  #L31fa7c.  return v0 @kind object;
}
procedure `java.util.List` `c`(`com.bumptech.glide.g` v1 @kind this) @signature `Lcom/bumptech/glide/g;.c:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31fae0.  v0:= v1.`com.bumptech.glide.g.f` @type ^`java.util.List` @kind object;
  #L31fae4.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.i` `d`(`com.bumptech.glide.g` v1 @kind this) @signature `Lcom/bumptech/glide/g;.d:()Lcom/bumptech/glide/request/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31fa90.  v0:= v1.`com.bumptech.glide.g.e` @type ^`com.bumptech.glide.request.i` @kind object;
  #L31fa94.  return v0 @kind object;
}
procedure `com.bumptech.glide.l` `e`(`com.bumptech.glide.g` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/g;.e:(Ljava/lang/Class;)Lcom/bumptech/glide/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L31f9e0.  v0:= v4.`com.bumptech.glide.g.g` @type ^`java.util.Map` @kind object;
  #L31f9e4.  call temp:= `get`(v0, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L31f9ea.  v0:= temp @kind object;
  #L31f9ec.  v0:= (`com.bumptech.glide.l`) v0 @kind object;
  #L31f9f0.  if v0 != 0 then goto L31fa46;
  #L31f9f4.  v1:= v4.`com.bumptech.glide.g.g` @type ^`java.util.Map` @kind object;
  #L31f9f8.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L31f9fe.  v1:= temp @kind object;
  #L31fa00.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31fa06.  v1:= temp @kind object;
  #L31fa08.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L31fa0e.  v2:= temp;
  #L31fa10.  if v2 == 0 then goto L31fa46;
  #L31fa14.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31fa1a.  v2:= temp @kind object;
  #L31fa1c.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L31fa20.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L31fa26.  v3:= temp @kind object;
  #L31fa28.  v3:= (`java.lang.Class`) v3 @kind object;
  #L31fa2c.  call temp:= `isAssignableFrom`(v3, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L31fa32.  v3:= temp;
  #L31fa34.  if v3 == 0 then goto L31fa08;
  #L31fa38.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L31fa3e.  v0:= temp @kind object;
  #L31fa40.  v0:= (`com.bumptech.glide.l`) v0 @kind object;
  #L31fa44.  goto L31fa08;
  #L31fa46.  if v0 != 0 then goto L31fa4e;
  #L31fa4a.  v0:= `@@com.bumptech.glide.g.a` @type ^`com.bumptech.glide.l` @kind object;
  #L31fa4e.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.f0` `f`(`com.bumptech.glide.g` v1 @kind this) @signature `Lcom/bumptech/glide/g;.f:()Lcom/bumptech/glide/load/engine/f0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31fa60.  v0:= v1.`com.bumptech.glide.g.h` @type ^`com.bumptech.glide.load.engine.f0` @kind object;
  #L31fa64.  return v0 @kind object;
}
procedure `int` `g`(`com.bumptech.glide.g` v1 @kind this) @signature `Lcom/bumptech/glide/g;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31fac8.  v0:= v1.`com.bumptech.glide.g.j` @type ^`int`;
  #L31facc.  return v0;
}
procedure `com.bumptech.glide.Registry` `h`(`com.bumptech.glide.g` v1 @kind this) @signature `Lcom/bumptech/glide/g;.h:()Lcom/bumptech/glide/Registry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31f9c8.  v0:= v1.`com.bumptech.glide.g.c` @type ^`com.bumptech.glide.Registry` @kind object;
  #L31f9cc.  return v0 @kind object;
}
procedure `boolean` `i`(`com.bumptech.glide.g` v1 @kind this) @signature `Lcom/bumptech/glide/g;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31f9b0.  v0:= v1.`com.bumptech.glide.g.i` @type ^`boolean` @kind boolean;
  #L31f9b4.  return v0;
}
