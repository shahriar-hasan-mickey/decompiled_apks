record `com.bumptech.glide.k` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.o.k` @kind interface {
  `com.bumptech.glide.e` `com.bumptech.glide.k.e` @AccessFlag PROTECTED_FINAL;
  `android.content.Context` `com.bumptech.glide.k.f` @AccessFlag PROTECTED_FINAL;
  `com.bumptech.glide.o.j` `com.bumptech.glide.k.g` @AccessFlag FINAL;
  `com.bumptech.glide.o.s` `com.bumptech.glide.k.h` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.o.r` `com.bumptech.glide.k.i` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.o.u` `com.bumptech.glide.k.j` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `com.bumptech.glide.k.k` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `com.bumptech.glide.k.l` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.o.d` `com.bumptech.glide.k.m` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.CopyOnWriteArrayList` `com.bumptech.glide.k.n` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.i` `com.bumptech.glide.k.o` @AccessFlag PRIVATE;
}
global `com.bumptech.glide.request.i` `@@com.bumptech.glide.k.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.bumptech.glide.request.i` `@@com.bumptech.glide.k.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.bumptech.glide.request.i` `@@com.bumptech.glide.k.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L321ef4.  v0:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L321ef8.  call temp:= `v0`(v0) @signature `Lcom/bumptech/glide/request/i;.v0:(Ljava/lang/Class;)Lcom/bumptech/glide/request/i;` @kind static;
  #L321efe.  v0:= temp @kind object;
  #L321f00.  call temp:= `V`(v0) @signature `Lcom/bumptech/glide/request/a;.V:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321f06.  v0:= temp @kind object;
  #L321f08.  v0:= (`com.bumptech.glide.request.i`) v0 @kind object;
  #L321f0c.  `@@com.bumptech.glide.k.b` @type ^`com.bumptech.glide.request.i` := v0 @kind object;
  #L321f10.  v0:= constclass @type ^`com.bumptech.glide.load.n.f.f` @kind object;
  #L321f14.  call temp:= `v0`(v0) @signature `Lcom/bumptech/glide/request/i;.v0:(Ljava/lang/Class;)Lcom/bumptech/glide/request/i;` @kind static;
  #L321f1a.  v0:= temp @kind object;
  #L321f1c.  call temp:= `V`(v0) @signature `Lcom/bumptech/glide/request/a;.V:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321f22.  v0:= temp @kind object;
  #L321f24.  v0:= (`com.bumptech.glide.request.i`) v0 @kind object;
  #L321f28.  `@@com.bumptech.glide.k.c` @type ^`com.bumptech.glide.request.i` := v0 @kind object;
  #L321f2c.  v0:= `@@com.bumptech.glide.load.engine.y.c` @type ^`com.bumptech.glide.load.engine.y` @kind object;
  #L321f30.  call temp:= `w0`(v0) @signature `Lcom/bumptech/glide/request/i;.w0:(Lcom/bumptech/glide/load/engine/y;)Lcom/bumptech/glide/request/i;` @kind static;
  #L321f36.  v0:= temp @kind object;
  #L321f38.  v1:= `@@com.bumptech.glide.Priority.LOW` @type ^`com.bumptech.glide.Priority` @kind object;
  #L321f3c.  call temp:= `d0`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.d0:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321f42.  v0:= temp @kind object;
  #L321f44.  v0:= (`com.bumptech.glide.request.i`) v0 @kind object;
  #L321f48.  v1:= 1I;
  #L321f4a.  call temp:= `l0`(v0, v1) @signature `Lcom/bumptech/glide/request/a;.l0:(Z)Lcom/bumptech/glide/request/a;` @kind virtual;
  #L321f50.  v0:= temp @kind object;
  #L321f52.  v0:= (`com.bumptech.glide.request.i`) v0 @kind object;
  #L321f56.  `@@com.bumptech.glide.k.d` @type ^`com.bumptech.glide.request.i` := v0 @kind object;
  #L321f5a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.k` v7 @kind this, `com.bumptech.glide.e` v8 @kind object, `com.bumptech.glide.o.j` v9 @kind object, `com.bumptech.glide.o.r` v10 @kind object, `android.content.Context` v11 @kind object) @signature `Lcom/bumptech/glide/k;.<init>:(Lcom/bumptech/glide/e;Lcom/bumptech/glide/o/j;Lcom/bumptech/glide/o/r;Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L321f6c.  v4:= new `com.bumptech.glide.o.s`;
  #L321f70.  call `<init>`(v4) @signature `Lcom/bumptech/glide/o/s;.<init>:()V` @kind direct;
  #L321f76.  call temp:= `g`(v8) @signature `Lcom/bumptech/glide/e;.g:()Lcom/bumptech/glide/o/e;` @kind virtual;
  #L321f7c.  v5:= temp @kind object;
  #L321f7e.  v0:= v7 @kind object;
  #L321f80.  v1:= v8 @kind object;
  #L321f82.  v2:= v9 @kind object;
  #L321f84.  v3:= v10 @kind object;
  #L321f86.  v6:= v11 @kind object;
  #L321f88.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/k;.<init>:(Lcom/bumptech/glide/e;Lcom/bumptech/glide/o/j;Lcom/bumptech/glide/o/r;Lcom/bumptech/glide/o/s;Lcom/bumptech/glide/o/e;Landroid/content/Context;)V` @kind direct;
  #L321f8e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.k` v3 @kind this, `com.bumptech.glide.e` v4 @kind object, `com.bumptech.glide.o.j` v5 @kind object, `com.bumptech.glide.o.r` v6 @kind object, `com.bumptech.glide.o.s` v7 @kind object, `com.bumptech.glide.o.e` v8 @kind object, `android.content.Context` v9 @kind object) @signature `Lcom/bumptech/glide/k;.<init>:(Lcom/bumptech/glide/e;Lcom/bumptech/glide/o/j;Lcom/bumptech/glide/o/r;Lcom/bumptech/glide/o/s;Lcom/bumptech/glide/o/e;Landroid/content/Context;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L321fa0.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L321fa6.  v0:= new `com.bumptech.glide.o.u`;
  #L321faa.  call `<init>`(v0) @signature `Lcom/bumptech/glide/o/u;.<init>:()V` @kind direct;
  #L321fb0.  v3.`com.bumptech.glide.k.j` @type ^`com.bumptech.glide.o.u` := v0 @kind object;
  #L321fb4.  v0:= new `com.bumptech.glide.j`;
  #L321fb8.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/j;.<init>:(Lcom/bumptech/glide/k;)V` @kind direct;
  #L321fbe.  v3.`com.bumptech.glide.k.k` @type ^`java.lang.Runnable` := v0 @kind object;
  #L321fc2.  v1:= new `android.os.Handler`;
  #L321fc6.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L321fcc.  v2:= temp @kind object;
  #L321fce.  call `<init>`(v1, v2) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L321fd4.  v3.`com.bumptech.glide.k.l` @type ^`android.os.Handler` := v1 @kind object;
  #L321fd8.  v3.`com.bumptech.glide.k.e` @type ^`com.bumptech.glide.e` := v4 @kind object;
  #L321fdc.  v3.`com.bumptech.glide.k.g` @type ^`com.bumptech.glide.o.j` := v5 @kind object;
  #L321fe0.  v3.`com.bumptech.glide.k.i` @type ^`com.bumptech.glide.o.r` := v6 @kind object;
  #L321fe4.  v3.`com.bumptech.glide.k.h` @type ^`com.bumptech.glide.o.s` := v7 @kind object;
  #L321fe8.  v3.`com.bumptech.glide.k.f` @type ^`android.content.Context` := v9 @kind object;
  #L321fec.  call temp:= `getApplicationContext`(v9) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L321ff2.  v6:= temp @kind object;
  #L321ff4.  v9:= new `com.bumptech.glide.k$a`;
  #L321ff8.  call `<init>`(v9, v3, v7) @signature `Lcom/bumptech/glide/k$a;.<init>:(Lcom/bumptech/glide/k;Lcom/bumptech/glide/o/s;)V` @kind direct;
  #L321ffe.  call temp:= `a`(v8, v6, v9) @signature `Lcom/bumptech/glide/o/e;.a:(Landroid/content/Context;Lcom/bumptech/glide/o/c;)Lcom/bumptech/glide/o/d;` @kind interface;
  #L322004.  v6:= temp @kind object;
  #L322006.  v3.`com.bumptech.glide.k.m` @type ^`com.bumptech.glide.o.d` := v6 @kind object;
  #L32200a.  call temp:= `q`() @signature `Lcom/bumptech/glide/s/p;.q:()Z` @kind static;
  #L322010.  v7:= temp;
  #L322012.  if v7 == 0 then goto L32201e;
  #L322016.  call temp:= `post`(v1, v0) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L32201c.  goto L322024;
  #L32201e.  call `a`(v5, v3) @signature `Lcom/bumptech/glide/o/j;.a:(Lcom/bumptech/glide/o/k;)V` @kind interface;
  #L322024.  call `a`(v5, v6) @signature `Lcom/bumptech/glide/o/j;.a:(Lcom/bumptech/glide/o/k;)V` @kind interface;
  #L32202a.  v5:= new `java.util.concurrent.CopyOnWriteArrayList`;
  #L32202e.  call temp:= `i`(v4) @signature `Lcom/bumptech/glide/e;.i:()Lcom/bumptech/glide/g;` @kind virtual;
  #L322034.  v6:= temp @kind object;
  #L322036.  call temp:= `c`(v6) @signature `Lcom/bumptech/glide/g;.c:()Ljava/util/List;` @kind virtual;
  #L32203c.  v6:= temp @kind object;
  #L32203e.  call `<init>`(v5, v6) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L322044.  v3.`com.bumptech.glide.k.n` @type ^`java.util.concurrent.CopyOnWriteArrayList` := v5 @kind object;
  #L322048.  call temp:= `i`(v4) @signature `Lcom/bumptech/glide/e;.i:()Lcom/bumptech/glide/g;` @kind virtual;
  #L32204e.  v5:= temp @kind object;
  #L322050.  call temp:= `d`(v5) @signature `Lcom/bumptech/glide/g;.d:()Lcom/bumptech/glide/request/i;` @kind virtual;
  #L322056.  v5:= temp @kind object;
  #L322058.  call `x`(v3, v5) @signature `Lcom/bumptech/glide/k;.x:(Lcom/bumptech/glide/request/i;)V` @kind virtual;
  #L32205e.  call `o`(v4, v3) @signature `Lcom/bumptech/glide/e;.o:(Lcom/bumptech/glide/k;)V` @kind virtual;
  #L322064.  return @kind void;
}
procedure `void` `A`(`com.bumptech.glide.k` v2 @kind this, `com.bumptech.glide.request.m.i` v3 @kind object) @signature `Lcom/bumptech/glide/k;.A:(Lcom/bumptech/glide/request/m/i;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3222b8.  call temp:= `z`(v2, v3) @signature `Lcom/bumptech/glide/k;.z:(Lcom/bumptech/glide/request/m/i;)Z` @kind virtual;
  #L3222be.  v0:= temp;
  #L3222c0.  if v0 != 0 then goto L3222f6;
  #L3222c4.  v0:= v2.`com.bumptech.glide.k.e` @type ^`com.bumptech.glide.e` @kind object;
  #L3222c8.  call temp:= `p`(v0, v3) @signature `Lcom/bumptech/glide/e;.p:(Lcom/bumptech/glide/request/m/i;)Z` @kind virtual;
  #L3222ce.  v0:= temp;
  #L3222d0.  if v0 != 0 then goto L3222f6;
  #L3222d4.  call temp:= `l`(v3) @signature `Lcom/bumptech/glide/request/m/i;.l:()Lcom/bumptech/glide/request/d;` @kind interface;
  #L3222da.  v0:= temp @kind object;
  #L3222dc.  if v0 == 0 then goto L3222f6;
  #L3222e0.  call temp:= `l`(v3) @signature `Lcom/bumptech/glide/request/m/i;.l:()Lcom/bumptech/glide/request/d;` @kind interface;
  #L3222e6.  v0:= temp @kind object;
  #L3222e8.  v1:= 0I;
  #L3222ea.  call `e`(v3, v1) @signature `Lcom/bumptech/glide/request/m/i;.e:(Lcom/bumptech/glide/request/d;)V` @kind interface;
  #L3222f0.  call `clear`(v0) @signature `Lcom/bumptech/glide/request/d;.clear:()V` @kind interface;
  #L3222f6.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.k` v1 @kind this) @signature `Lcom/bumptech/glide/k;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L322160.  @monitorenter v1
  #L322162.  call `w`(v1) @signature `Lcom/bumptech/glide/k;.w:()V` @kind virtual;
  #L322168.  v0:= v1.`com.bumptech.glide.k.j` @type ^`com.bumptech.glide.o.u` @kind object;
  #L32216c.  call `a`(v0) @signature `Lcom/bumptech/glide/o/u;.a:()V` @kind virtual;
  #L322172.  @monitorexit v1
  #L322174.  return @kind void;
  #L322176.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L322178.  @monitorexit v1
  #L32217a.  throw v0;
  catch `java.lang.Throwable` @[L322162..L322172] goto L322176;
}
procedure `com.bumptech.glide.i` `d`(`com.bumptech.glide.k` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/k;.d:(Ljava/lang/Class;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L321d30.  v0:= new `com.bumptech.glide.i`;
  #L321d34.  v1:= v3.`com.bumptech.glide.k.e` @type ^`com.bumptech.glide.e` @kind object;
  #L321d38.  v2:= v3.`com.bumptech.glide.k.f` @type ^`android.content.Context` @kind object;
  #L321d3c.  call `<init>`(v0, v1, v3, v4, v2) @signature `Lcom/bumptech/glide/i;.<init>:(Lcom/bumptech/glide/e;Lcom/bumptech/glide/k;Ljava/lang/Class;Landroid/content/Context;)V` @kind direct;
  #L321d42.  return v0 @kind object;
}
procedure `void` `f`(`com.bumptech.glide.k` v2 @kind this) @signature `Lcom/bumptech/glide/k;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3220b0.  @monitorenter v2
  #L3220b2.  v0:= v2.`com.bumptech.glide.k.j` @type ^`com.bumptech.glide.o.u` @kind object;
  #L3220b6.  call `f`(v0) @signature `Lcom/bumptech/glide/o/u;.f:()V` @kind virtual;
  #L3220bc.  v0:= v2.`com.bumptech.glide.k.j` @type ^`com.bumptech.glide.o.u` @kind object;
  #L3220c0.  call temp:= `g`(v0) @signature `Lcom/bumptech/glide/o/u;.g:()Ljava/util/List;` @kind virtual;
  #L3220c6.  v0:= temp @kind object;
  #L3220c8.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3220ce.  v0:= temp @kind object;
  #L3220d0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3220d6.  v1:= temp;
  #L3220d8.  if v1 == 0 then goto L3220f0;
  #L3220dc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3220e2.  v1:= temp @kind object;
  #L3220e4.  v1:= (`com.bumptech.glide.request.m.i`) v1 @kind object;
  #L3220e8.  call `o`(v2, v1) @signature `Lcom/bumptech/glide/k;.o:(Lcom/bumptech/glide/request/m/i;)V` @kind virtual;
  #L3220ee.  goto L3220d0;
  #L3220f0.  v0:= v2.`com.bumptech.glide.k.j` @type ^`com.bumptech.glide.o.u` @kind object;
  #L3220f4.  call `d`(v0) @signature `Lcom/bumptech/glide/o/u;.d:()V` @kind virtual;
  #L3220fa.  v0:= v2.`com.bumptech.glide.k.h` @type ^`com.bumptech.glide.o.s` @kind object;
  #L3220fe.  call `c`(v0) @signature `Lcom/bumptech/glide/o/s;.c:()V` @kind virtual;
  #L322104.  v0:= v2.`com.bumptech.glide.k.g` @type ^`com.bumptech.glide.o.j` @kind object;
  #L322108.  call `b`(v0, v2) @signature `Lcom/bumptech/glide/o/j;.b:(Lcom/bumptech/glide/o/k;)V` @kind interface;
  #L32210e.  v0:= v2.`com.bumptech.glide.k.g` @type ^`com.bumptech.glide.o.j` @kind object;
  #L322112.  v1:= v2.`com.bumptech.glide.k.m` @type ^`com.bumptech.glide.o.d` @kind object;
  #L322116.  call `b`(v0, v1) @signature `Lcom/bumptech/glide/o/j;.b:(Lcom/bumptech/glide/o/k;)V` @kind interface;
  #L32211c.  v0:= v2.`com.bumptech.glide.k.l` @type ^`android.os.Handler` @kind object;
  #L322120.  v1:= v2.`com.bumptech.glide.k.k` @type ^`java.lang.Runnable` @kind object;
  #L322124.  call `removeCallbacks`(v0, v1) @signature `Landroid/os/Handler;.removeCallbacks:(Ljava/lang/Runnable;)V` @kind virtual;
  #L32212a.  v0:= v2.`com.bumptech.glide.k.e` @type ^`com.bumptech.glide.e` @kind object;
  #L32212e.  call `s`(v0, v2) @signature `Lcom/bumptech/glide/e;.s:(Lcom/bumptech/glide/k;)V` @kind virtual;
  #L322134.  @monitorexit v2
  #L322136.  return @kind void;
  #L322138.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32213a.  @monitorexit v2
  #L32213c.  goto L322140;
  #L32213e.  throw v0;
  #L322140.  goto L32213e;
  catch `java.lang.Throwable` @[L3220b2..L322134] goto L322138;
}
procedure `com.bumptech.glide.i` `g`(`com.bumptech.glide.k` v2 @kind this) @signature `Lcom/bumptech/glide/k;.g:()Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L321d54.  v0:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L321d58.  call temp:= `d`(v2, v0) @signature `Lcom/bumptech/glide/k;.d:(Ljava/lang/Class;)Lcom/bumptech/glide/i;` @kind virtual;
  #L321d5e.  v0:= temp @kind object;
  #L321d60.  v1:= `@@com.bumptech.glide.k.b` @type ^`com.bumptech.glide.request.i` @kind object;
  #L321d64.  call temp:= `v0`(v0, v1) @signature `Lcom/bumptech/glide/i;.v0:(Lcom/bumptech/glide/request/a;)Lcom/bumptech/glide/i;` @kind virtual;
  #L321d6a.  v0:= temp @kind object;
  #L321d6c.  return v0 @kind object;
}
procedure `void` `i`(`com.bumptech.glide.k` v1 @kind this) @signature `Lcom/bumptech/glide/k;.i:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L322198.  @monitorenter v1
  #L32219a.  call `v`(v1) @signature `Lcom/bumptech/glide/k;.v:()V` @kind virtual;
  #L3221a0.  v0:= v1.`com.bumptech.glide.k.j` @type ^`com.bumptech.glide.o.u` @kind object;
  #L3221a4.  call `i`(v0) @signature `Lcom/bumptech/glide/o/u;.i:()V` @kind virtual;
  #L3221aa.  @monitorexit v1
  #L3221ac.  return @kind void;
  #L3221ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3221b0.  @monitorexit v1
  #L3221b2.  throw v0;
  catch `java.lang.Throwable` @[L32219a..L3221aa] goto L3221ae;
}
procedure `com.bumptech.glide.i` `j`(`com.bumptech.glide.k` v1 @kind this) @signature `Lcom/bumptech/glide/k;.j:()Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L321d80.  v0:= constclass @type ^`android.graphics.drawable.Drawable` @kind object;
  #L321d84.  call temp:= `d`(v1, v0) @signature `Lcom/bumptech/glide/k;.d:(Ljava/lang/Class;)Lcom/bumptech/glide/i;` @kind virtual;
  #L321d8a.  v0:= temp @kind object;
  #L321d8c.  return v0 @kind object;
}
procedure `void` `o`(`com.bumptech.glide.k` v0 @kind this, `com.bumptech.glide.request.m.i` v1 @kind object) @signature `Lcom/bumptech/glide/k;.o:(Lcom/bumptech/glide/request/m/i;)V` @AccessFlag PUBLIC {
    temp;

  #L322078.  @monitorenter v0
  #L32207a.  if v1 != 0 then goto L322082;
  #L32207e.  @monitorexit v0
  #L322080.  return @kind void;
  #L322082.  call `A`(v0, v1) @signature `Lcom/bumptech/glide/k;.A:(Lcom/bumptech/glide/request/m/i;)V` @kind direct;
  #L322088.  @monitorexit v0
  #L32208a.  return @kind void;
  #L32208c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32208e.  @monitorexit v0
  #L322090.  throw v1;
  catch `java.lang.Throwable` @[L322082..L322088] goto L32208c;
}
procedure `java.util.List` `p`(`com.bumptech.glide.k` v1 @kind this) @signature `Lcom/bumptech/glide/k;.p:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;

  #L321edc.  v0:= v1.`com.bumptech.glide.k.n` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L321ee0.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.i` `q`(`com.bumptech.glide.k` v1 @kind this) @signature `Lcom/bumptech/glide/k;.q:()Lcom/bumptech/glide/request/i;` @AccessFlag  {
    temp;
    v0;

  #L321e34.  @monitorenter v1
  #L321e36.  v0:= v1.`com.bumptech.glide.k.o` @type ^`com.bumptech.glide.request.i` @kind object;
  #L321e3a.  @monitorexit v1
  #L321e3c.  return v0 @kind object;
  #L321e3e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L321e40.  @monitorexit v1
  #L321e42.  throw v0;
  catch `java.lang.Throwable` @[L321e36..L321e3a] goto L321e3e;
}
procedure `com.bumptech.glide.l` `r`(`com.bumptech.glide.k` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/k;.r:(Ljava/lang/Class;)Lcom/bumptech/glide/l;` @AccessFlag  {
    temp;
    v0;

  #L321e0c.  v0:= v1.`com.bumptech.glide.k.e` @type ^`com.bumptech.glide.e` @kind object;
  #L321e10.  call temp:= `i`(v0) @signature `Lcom/bumptech/glide/e;.i:()Lcom/bumptech/glide/g;` @kind virtual;
  #L321e16.  v0:= temp @kind object;
  #L321e18.  call temp:= `e`(v0, v2) @signature `Lcom/bumptech/glide/g;.e:(Ljava/lang/Class;)Lcom/bumptech/glide/l;` @kind virtual;
  #L321e1e.  v2:= temp @kind object;
  #L321e20.  return v2 @kind object;
}
procedure `com.bumptech.glide.i` `s`(`com.bumptech.glide.k` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lcom/bumptech/glide/k;.s:(Ljava/io/File;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L321da0.  call temp:= `j`(v1) @signature `Lcom/bumptech/glide/k;.j:()Lcom/bumptech/glide/i;` @kind virtual;
  #L321da6.  v0:= temp @kind object;
  #L321da8.  call temp:= `I0`(v0, v2) @signature `Lcom/bumptech/glide/i;.I0:(Ljava/io/File;)Lcom/bumptech/glide/i;` @kind virtual;
  #L321dae.  v2:= temp @kind object;
  #L321db0.  return v2 @kind object;
}
procedure `com.bumptech.glide.i` `t`(`com.bumptech.glide.k` v1 @kind this, `java.lang.Integer` v2 @kind object) @signature `Lcom/bumptech/glide/k;.t:(Ljava/lang/Integer;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L321dc4.  call temp:= `j`(v1) @signature `Lcom/bumptech/glide/k;.j:()Lcom/bumptech/glide/i;` @kind virtual;
  #L321dca.  v0:= temp @kind object;
  #L321dcc.  call temp:= `J0`(v0, v2) @signature `Lcom/bumptech/glide/i;.J0:(Ljava/lang/Integer;)Lcom/bumptech/glide/i;` @kind virtual;
  #L321dd2.  v2:= temp @kind object;
  #L321dd4.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.k` v2 @kind this) @signature `Lcom/bumptech/glide/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L321e60.  @monitorenter v2
  #L321e62.  v0:= new `java.lang.StringBuilder`;
  #L321e66.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L321e6c.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind super;
  #L321e72.  v1:= temp @kind object;
  #L321e74.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321e7a.  v1:= "{tracker=" @kind object;
  #L321e7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321e84.  v1:= v2.`com.bumptech.glide.k.h` @type ^`com.bumptech.glide.o.s` @kind object;
  #L321e88.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321e8e.  v1:= ", treeNode=" @kind object;
  #L321e92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321e98.  v1:= v2.`com.bumptech.glide.k.i` @type ^`com.bumptech.glide.o.r` @kind object;
  #L321e9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321ea2.  v1:= "}" @kind object;
  #L321ea6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321eac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L321eb2.  v0:= temp @kind object;
  #L321eb4.  @monitorexit v2
  #L321eb6.  return v0 @kind object;
  #L321eb8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L321eba.  @monitorexit v2
  #L321ebc.  throw v0;
  catch `java.lang.Throwable` @[L321e62..L321eb4] goto L321eb8;
}
procedure `com.bumptech.glide.i` `u`(`com.bumptech.glide.k` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/k;.u:(Ljava/lang/String;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L321de8.  call temp:= `j`(v1) @signature `Lcom/bumptech/glide/k;.j:()Lcom/bumptech/glide/i;` @kind virtual;
  #L321dee.  v0:= temp @kind object;
  #L321df0.  call temp:= `L0`(v0, v2) @signature `Lcom/bumptech/glide/i;.L0:(Ljava/lang/String;)Lcom/bumptech/glide/i;` @kind virtual;
  #L321df6.  v2:= temp @kind object;
  #L321df8.  return v2 @kind object;
}
procedure `void` `v`(`com.bumptech.glide.k` v1 @kind this) @signature `Lcom/bumptech/glide/k;.v:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3221d0.  @monitorenter v1
  #L3221d2.  v0:= v1.`com.bumptech.glide.k.h` @type ^`com.bumptech.glide.o.s` @kind object;
  #L3221d6.  call `d`(v0) @signature `Lcom/bumptech/glide/o/s;.d:()V` @kind virtual;
  #L3221dc.  @monitorexit v1
  #L3221de.  return @kind void;
  #L3221e0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3221e2.  @monitorexit v1
  #L3221e4.  throw v0;
  catch `java.lang.Throwable` @[L3221d2..L3221dc] goto L3221e0;
}
procedure `void` `w`(`com.bumptech.glide.k` v1 @kind this) @signature `Lcom/bumptech/glide/k;.w:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L322204.  @monitorenter v1
  #L322206.  v0:= v1.`com.bumptech.glide.k.h` @type ^`com.bumptech.glide.o.s` @kind object;
  #L32220a.  call `f`(v0) @signature `Lcom/bumptech/glide/o/s;.f:()V` @kind virtual;
  #L322210.  @monitorexit v1
  #L322212.  return @kind void;
  #L322214.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L322216.  @monitorexit v1
  #L322218.  throw v0;
  catch `java.lang.Throwable` @[L322206..L322210] goto L322214;
}
procedure `void` `x`(`com.bumptech.glide.k` v0 @kind this, `com.bumptech.glide.request.i` v1 @kind object) @signature `Lcom/bumptech/glide/k;.x:(Lcom/bumptech/glide/request/i;)V` @AccessFlag PROTECTED {
    temp;

  #L322238.  @monitorenter v0
  #L32223a.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/request/a;.f:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L322240.  v1:= temp @kind object;
  #L322242.  v1:= (`com.bumptech.glide.request.i`) v1 @kind object;
  #L322246.  call temp:= `b`(v1) @signature `Lcom/bumptech/glide/request/a;.b:()Lcom/bumptech/glide/request/a;` @kind virtual;
  #L32224c.  v1:= temp @kind object;
  #L32224e.  v1:= (`com.bumptech.glide.request.i`) v1 @kind object;
  #L322252.  v0.`com.bumptech.glide.k.o` @type ^`com.bumptech.glide.request.i` := v1 @kind object;
  #L322256.  @monitorexit v0
  #L322258.  return @kind void;
  #L32225a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32225c.  @monitorexit v0
  #L32225e.  throw v1;
  catch `java.lang.Throwable` @[L32223a..L322256] goto L32225a;
}
procedure `void` `y`(`com.bumptech.glide.k` v1 @kind this, `com.bumptech.glide.request.m.i` v2 @kind object, `com.bumptech.glide.request.d` v3 @kind object) @signature `Lcom/bumptech/glide/k;.y:(Lcom/bumptech/glide/request/m/i;Lcom/bumptech/glide/request/d;)V` @AccessFlag  {
    temp;
    v0;

  #L32227c.  @monitorenter v1
  #L32227e.  v0:= v1.`com.bumptech.glide.k.j` @type ^`com.bumptech.glide.o.u` @kind object;
  #L322282.  call `j`(v0, v2) @signature `Lcom/bumptech/glide/o/u;.j:(Lcom/bumptech/glide/request/m/i;)V` @kind virtual;
  #L322288.  v2:= v1.`com.bumptech.glide.k.h` @type ^`com.bumptech.glide.o.s` @kind object;
  #L32228c.  call `g`(v2, v3) @signature `Lcom/bumptech/glide/o/s;.g:(Lcom/bumptech/glide/request/d;)V` @kind virtual;
  #L322292.  @monitorexit v1
  #L322294.  return @kind void;
  #L322296.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L322298.  @monitorexit v1
  #L32229a.  throw v2;
  catch `java.lang.Throwable` @[L32227e..L322292] goto L322296;
}
procedure `boolean` `z`(`com.bumptech.glide.k` v3 @kind this, `com.bumptech.glide.request.m.i` v4 @kind object) @signature `Lcom/bumptech/glide/k;.z:(Lcom/bumptech/glide/request/m/i;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L321cc4.  @monitorenter v3
  #L321cc6.  call temp:= `l`(v4) @signature `Lcom/bumptech/glide/request/m/i;.l:()Lcom/bumptech/glide/request/d;` @kind interface;
  #L321ccc.  v0:= temp @kind object;
  #L321cce.  v1:= 1I;
  #L321cd0.  if v0 != 0 then goto L321cd8;
  #L321cd4.  @monitorexit v3
  #L321cd6.  return v1;
  #L321cd8.  v2:= v3.`com.bumptech.glide.k.h` @type ^`com.bumptech.glide.o.s` @kind object;
  #L321cdc.  call temp:= `b`(v2, v0) @signature `Lcom/bumptech/glide/o/s;.b:(Lcom/bumptech/glide/request/d;)Z` @kind virtual;
  #L321ce2.  v0:= temp;
  #L321ce4.  if v0 == 0 then goto L321cfe;
  #L321ce8.  v0:= v3.`com.bumptech.glide.k.j` @type ^`com.bumptech.glide.o.u` @kind object;
  #L321cec.  call `o`(v0, v4) @signature `Lcom/bumptech/glide/o/u;.o:(Lcom/bumptech/glide/request/m/i;)V` @kind virtual;
  #L321cf2.  v0:= 0I;
  #L321cf4.  call `e`(v4, v0) @signature `Lcom/bumptech/glide/request/m/i;.e:(Lcom/bumptech/glide/request/d;)V` @kind interface;
  #L321cfa.  @monitorexit v3
  #L321cfc.  return v1;
  #L321cfe.  v4:= 0I;
  #L321d00.  @monitorexit v3
  #L321d02.  return v4;
  #L321d04.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L321d06.  @monitorexit v3
  #L321d08.  throw v4;
  catch `java.lang.Throwable` @[L321cc6..L321cce] goto L321d04;
  catch `java.lang.Throwable` @[L321cd8..L321cfa] goto L321d04;
}
