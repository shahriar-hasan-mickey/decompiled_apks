record `com.bumptech.glide.j` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.bumptech.glide.k` `com.bumptech.glide.j.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.j` v0 @kind this, `com.bumptech.glide.k` v1 @kind object) @signature `Lcom/bumptech/glide/j;.<init>:(Lcom/bumptech/glide/k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L321c2c.  v0.`com.bumptech.glide.j.b` @type ^`com.bumptech.glide.k` := v1 @kind object;
  #L321c30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L321c36.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.j` v2 @kind this) @signature `Lcom/bumptech/glide/j;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L321c48.  v0:= v2.`com.bumptech.glide.j.b` @type ^`com.bumptech.glide.k` @kind object;
  #L321c4c.  v1:= v0.`com.bumptech.glide.k.g` @type ^`com.bumptech.glide.o.j` @kind object;
  #L321c50.  call `a`(v1, v0) @signature `Lcom/bumptech/glide/o/j;.a:(Lcom/bumptech/glide/o/k;)V` @kind interface;
  #L321c56.  return @kind void;
}
