record `com.bumptech.glide.m.d` @kind class @AccessFlag FINAL {
  `java.lang.String` `com.bumptech.glide.m.d.a` @AccessFlag PRIVATE_FINAL;
  `long`[] `com.bumptech.glide.m.d.b` @AccessFlag PRIVATE_FINAL;
  `java.io.File`[] `com.bumptech.glide.m.d.c` @AccessFlag ;
  `java.io.File`[] `com.bumptech.glide.m.d.d` @AccessFlag ;
  `boolean` `com.bumptech.glide.m.d.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.m.c` `com.bumptech.glide.m.d.f` @AccessFlag PRIVATE;
  `long` `com.bumptech.glide.m.d.g` @AccessFlag PRIVATE;
  `com.bumptech.glide.m.f` `com.bumptech.glide.m.d.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.m.d` v6 @kind this, `com.bumptech.glide.m.f` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lcom/bumptech/glide/m/d;.<init>:(Lcom/bumptech/glide/m/f;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L322818.  v6.`com.bumptech.glide.m.d.h` @type ^`com.bumptech.glide.m.f` := v7 @kind object;
  #L32281c.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L322822.  v6.`com.bumptech.glide.m.d.a` @type ^`java.lang.String` := v8 @kind object;
  #L322826.  call temp:= `c`(v7) @signature `Lcom/bumptech/glide/m/f;.c:(Lcom/bumptech/glide/m/f;)I` @kind static;
  #L32282c.  v0:= temp;
  #L32282e.  v0:= new `long`[v0];
  #L322832.  v6.`com.bumptech.glide.m.d.b` @type ^`long`[] := v0 @kind object;
  #L322836.  call temp:= `c`(v7) @signature `Lcom/bumptech/glide/m/f;.c:(Lcom/bumptech/glide/m/f;)I` @kind static;
  #L32283c.  v0:= temp;
  #L32283e.  v0:= new `java.io.File`[v0];
  #L322842.  v6.`com.bumptech.glide.m.d.c` @type ^`java.io.File`[] := v0 @kind object;
  #L322846.  call temp:= `c`(v7) @signature `Lcom/bumptech/glide/m/f;.c:(Lcom/bumptech/glide/m/f;)I` @kind static;
  #L32284c.  v0:= temp;
  #L32284e.  v0:= new `java.io.File`[v0];
  #L322852.  v6.`com.bumptech.glide.m.d.d` @type ^`java.io.File`[] := v0 @kind object;
  #L322856.  v0:= new `java.lang.StringBuilder`;
  #L32285a.  call `<init>`(v0, v8) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L322860.  v8:= 46I;
  #L322864.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32286a.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L322870.  v8:= temp;
  #L322872.  v1:= 0I;
  #L322874.  call temp:= `c`(v7) @signature `Lcom/bumptech/glide/m/f;.c:(Lcom/bumptech/glide/m/f;)I` @kind static;
  #L32287a.  v2:= temp;
  #L32287c.  if v1 >= v2 then goto L3228e0;
  #L322880.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L322886.  v2:= v6.`com.bumptech.glide.m.d.c` @type ^`java.io.File`[] @kind object;
  #L32288a.  v3:= new `java.io.File`;
  #L32288e.  call temp:= `k`(v7) @signature `Lcom/bumptech/glide/m/f;.k:(Lcom/bumptech/glide/m/f;)Ljava/io/File;` @kind static;
  #L322894.  v4:= temp @kind object;
  #L322896.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32289c.  v5:= temp @kind object;
  #L32289e.  call `<init>`(v3, v4, v5) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L3228a4.  v2[v1]:= v3 @kind object;
  #L3228a8.  v2:= ".tmp" @kind object;
  #L3228ac.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3228b2.  v2:= v6.`com.bumptech.glide.m.d.d` @type ^`java.io.File`[] @kind object;
  #L3228b6.  v3:= new `java.io.File`;
  #L3228ba.  call temp:= `k`(v7) @signature `Lcom/bumptech/glide/m/f;.k:(Lcom/bumptech/glide/m/f;)Ljava/io/File;` @kind static;
  #L3228c0.  v4:= temp @kind object;
  #L3228c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3228c8.  v5:= temp @kind object;
  #L3228ca.  call `<init>`(v3, v4, v5) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L3228d0.  v2[v1]:= v3 @kind object;
  #L3228d4.  call `setLength`(v0, v8) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L3228da.  v1:= v1 + 1;
  #L3228de.  goto L322874;
  #L3228e0.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.m.d` v0 @kind this, `com.bumptech.glide.m.f` v1 @kind object, `java.lang.String` v2 @kind object, `com.bumptech.glide.m.a` v3 @kind object) @signature `Lcom/bumptech/glide/m/d;.<init>:(Lcom/bumptech/glide/m/f;Ljava/lang/String;Lcom/bumptech/glide/m/a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3228f4.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/m/d;.<init>:(Lcom/bumptech/glide/m/f;Ljava/lang/String;)V` @kind direct;
  #L3228fa.  return @kind void;
}
procedure `long`[] `a`(`com.bumptech.glide.m.d` v0 @kind object) @signature `Lcom/bumptech/glide/m/d;.a:(Lcom/bumptech/glide/m/d;)[J` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L322800.  v0:= v0.`com.bumptech.glide.m.d.b` @type ^`long`[] @kind object;
  #L322804.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`com.bumptech.glide.m.d` v0 @kind object) @signature `Lcom/bumptech/glide/m/d;.b:(Lcom/bumptech/glide/m/d;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L32276c.  v0:= v0.`com.bumptech.glide.m.d.a` @type ^`java.lang.String` @kind object;
  #L322770.  return v0 @kind object;
}
procedure `long` `c`(`com.bumptech.glide.m.d` v2 @kind object) @signature `Lcom/bumptech/glide/m/d;.c:(Lcom/bumptech/glide/m/d;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L3227d0.  v0:= v2.`com.bumptech.glide.m.d.g` @type ^`long` @kind wide;
  #L3227d4.  return v0 @kind wide;
}
procedure `long` `d`(`com.bumptech.glide.m.d` v0 @kind object, `long` v1 ) @signature `Lcom/bumptech/glide/m/d;.d:(Lcom/bumptech/glide/m/d;J)J` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3227e8.  v0.`com.bumptech.glide.m.d.g` @type ^`long` := v1 @kind wide;
  #L3227ec.  return v1 @kind wide;
}
procedure `boolean` `e`(`com.bumptech.glide.m.d` v0 @kind object) @signature `Lcom/bumptech/glide/m/d;.e:(Lcom/bumptech/glide/m/d;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L32268c.  v0:= v0.`com.bumptech.glide.m.d.e` @type ^`boolean` @kind boolean;
  #L322690.  return v0;
}
procedure `boolean` `f`(`com.bumptech.glide.m.d` v0 @kind object, `boolean` v1 ) @signature `Lcom/bumptech/glide/m/d;.f:(Lcom/bumptech/glide/m/d;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3226a4.  v0.`com.bumptech.glide.m.d.e` @type ^`boolean` := v1 @kind boolean;
  #L3226a8.  return v1;
}
procedure `com.bumptech.glide.m.c` `g`(`com.bumptech.glide.m.d` v0 @kind object) @signature `Lcom/bumptech/glide/m/d;.g:(Lcom/bumptech/glide/m/d;)Lcom/bumptech/glide/m/c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3226bc.  v0:= v0.`com.bumptech.glide.m.d.f` @type ^`com.bumptech.glide.m.c` @kind object;
  #L3226c0.  return v0 @kind object;
}
procedure `com.bumptech.glide.m.c` `h`(`com.bumptech.glide.m.d` v0 @kind object, `com.bumptech.glide.m.c` v1 @kind object) @signature `Lcom/bumptech/glide/m/d;.h:(Lcom/bumptech/glide/m/d;Lcom/bumptech/glide/m/c;)Lcom/bumptech/glide/m/c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3226d4.  v0.`com.bumptech.glide.m.d.f` @type ^`com.bumptech.glide.m.c` := v1 @kind object;
  #L3226d8.  return v1 @kind object;
}
procedure `void` `i`(`com.bumptech.glide.m.d` v0 @kind object, `java.lang.String`[] v1 @kind object) @signature `Lcom/bumptech/glide/m/d;.i:(Lcom/bumptech/glide/m/d;[Ljava/lang/String;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L32290c.  call `n`(v0, v1) @signature `Lcom/bumptech/glide/m/d;.n:([Ljava/lang/String;)V` @kind direct;
  #L322912.  return @kind void;
}
procedure `java.io.IOException` `m`(`com.bumptech.glide.m.d` v3 @kind this, `java.lang.String`[] v4 @kind object) @signature `Lcom/bumptech/glide/m/d;.m:([Ljava/lang/String;)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L322724.  v0:= new `java.io.IOException`;
  #L322728.  v1:= new `java.lang.StringBuilder`;
  #L32272c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L322732.  v2:= "unexpected journal line: " @kind object;
  #L322736.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32273c.  call temp:= `toString`(v4) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L322742.  v4:= temp @kind object;
  #L322744.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32274a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L322750.  v4:= temp @kind object;
  #L322752.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L322758.  throw v0;
}
procedure `void` `n`(`com.bumptech.glide.m.d` v4 @kind this, `java.lang.String`[] v5 @kind object) @signature `Lcom/bumptech/glide/m/d;.n:([Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L322924.  v0:= length @variable v5;
  #L322926.  v1:= v4.`com.bumptech.glide.m.d.h` @type ^`com.bumptech.glide.m.f` @kind object;
  #L32292a.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/m/f;.c:(Lcom/bumptech/glide/m/f;)I` @kind static;
  #L322930.  v1:= temp;
  #L322932.  if v0 != v1 then goto L322964;
  #L322936.  v0:= 0I;
  #L322938.  v1:= length @variable v5;
  #L32293a.  if v0 >= v1 then goto L322958;
  #L32293e.  v1:= v4.`com.bumptech.glide.m.d.b` @type ^`long`[] @kind object;
  #L322942.  v2:= v5[v0] @kind object;
  #L322946.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L32294c.  v2:= temp @kind wide;
  #L32294e.  v1[v0]:= v2 @kind wide;
  #L322952.  v0:= v0 + 1;
  #L322956.  goto L322938;
  #L322958.  return @kind void;
  #L32295a.  call temp:= `m`(v4, v5) @signature `Lcom/bumptech/glide/m/d;.m:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L322960.  v5:= temp @kind object;
  #L322962.  throw v5;
  #L322964.  call temp:= `m`(v4, v5) @signature `Lcom/bumptech/glide/m/d;.m:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L32296a.  v5:= temp @kind object;
  #L32296c.  goto L322970;
  #L32296e.  throw v5;
  #L322970.  goto L32296e;
  catch `java.lang.NumberFormatException` @[L322938..L322952] goto L32295a;
}
procedure `java.io.File` `j`(`com.bumptech.glide.m.d` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/m/d;.j:(I)Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3226ec.  v0:= v1.`com.bumptech.glide.m.d.c` @type ^`java.io.File`[] @kind object;
  #L3226f0.  v2:= v0[v2] @kind object;
  #L3226f4.  return v2 @kind object;
}
procedure `java.io.File` `k`(`com.bumptech.glide.m.d` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/m/d;.k:(I)Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L322708.  v0:= v1.`com.bumptech.glide.m.d.d` @type ^`java.io.File`[] @kind object;
  #L32270c.  v2:= v0[v2] @kind object;
  #L322710.  return v2 @kind object;
}
procedure `java.lang.String` `l`(`com.bumptech.glide.m.d` v7 @kind this) @signature `Lcom/bumptech/glide/m/d;.l:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L322784.  v0:= new `java.lang.StringBuilder`;
  #L322788.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32278e.  v1:= v7.`com.bumptech.glide.m.d.b` @type ^`long`[] @kind object;
  #L322792.  v2:= length @variable v1;
  #L322794.  v3:= 0I;
  #L322796.  if v3 >= v2 then goto L3227b4;
  #L32279a.  v4:= v1[v3] @kind wide;
  #L32279e.  v6:= 32I;
  #L3227a2.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3227a8.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3227ae.  v3:= v3 + 1;
  #L3227b2.  goto L322796;
  #L3227b4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3227ba.  v0:= temp @kind object;
  #L3227bc.  return v0 @kind object;
}
