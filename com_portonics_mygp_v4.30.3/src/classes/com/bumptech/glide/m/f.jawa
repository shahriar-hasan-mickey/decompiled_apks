record `com.bumptech.glide.m.f` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `java.io.File` `com.bumptech.glide.m.f.b` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `com.bumptech.glide.m.f.c` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `com.bumptech.glide.m.f.d` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `com.bumptech.glide.m.f.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.m.f.f` @AccessFlag PRIVATE_FINAL;
  `long` `com.bumptech.glide.m.f.g` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.m.f.h` @AccessFlag PRIVATE_FINAL;
  `long` `com.bumptech.glide.m.f.i` @AccessFlag PRIVATE;
  `java.io.Writer` `com.bumptech.glide.m.f.j` @AccessFlag PRIVATE;
  `java.util.LinkedHashMap` `com.bumptech.glide.m.f.k` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.m.f.l` @AccessFlag PRIVATE;
  `long` `com.bumptech.glide.m.f.m` @AccessFlag PRIVATE;
  `java.util.concurrent.ThreadPoolExecutor` `com.bumptech.glide.m.f.n` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `com.bumptech.glide.m.f.o` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.m.f` v16 @kind this, `java.io.File` v17 @kind object, `int` v18 , `int` v19 , `long` v20 ) @signature `Lcom/bumptech/glide/m/f;.<init>:(Ljava/io/File;IIJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L322f50.  v0:= v16 @kind object;
  #L322f54.  v1:= v17 @kind object;
  #L322f58.  call `<init>`(v16) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L322f5e.  v2:= 0L;
  #L322f62.  v0.`com.bumptech.glide.m.f.i` @type ^`long` := v2 @kind wide;
  #L322f66.  v4:= new `java.util.LinkedHashMap`;
  #L322f6a.  v5:= 0I;
  #L322f6c.  v6:= 0.75F;
  #L322f70.  v7:= 1I;
  #L322f72.  call `<init>`(v4, v5, v6, v7) @signature `Ljava/util/LinkedHashMap;.<init>:(IFZ)V` @kind direct;
  #L322f78.  v0.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` := v4 @kind object;
  #L322f7c.  v0.`com.bumptech.glide.m.f.m` @type ^`long` := v2 @kind wide;
  #L322f80.  v2:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L322f84.  v13:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L322f88.  v14:= new `java.util.concurrent.LinkedBlockingQueue`;
  #L322f8c.  call `<init>`(v14) @signature `Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V` @kind direct;
  #L322f92.  v15:= new `com.bumptech.glide.m.b`;
  #L322f96.  v3:= 0I;
  #L322f98.  call `<init>`(v15, v3) @signature `Lcom/bumptech/glide/m/b;.<init>:(Lcom/bumptech/glide/m/a;)V` @kind direct;
  #L322f9e.  v9:= 0I;
  #L322fa0.  v10:= 1I;
  #L322fa2.  v11:= 60L;
  #L322fa6.  v8:= v2 @kind object;
  #L322fa8.  call `<init>`(v8, v9, v10, v11, v13, v14, v15) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L322fae.  v0.`com.bumptech.glide.m.f.n` @type ^`java.util.concurrent.ThreadPoolExecutor` := v2 @kind object;
  #L322fb2.  v2:= new `com.bumptech.glide.m.a`;
  #L322fb6.  call `<init>`(v2, v0) @signature `Lcom/bumptech/glide/m/a;.<init>:(Lcom/bumptech/glide/m/f;)V` @kind direct;
  #L322fbc.  v0.`com.bumptech.glide.m.f.o` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L322fc0.  v0.`com.bumptech.glide.m.f.b` @type ^`java.io.File` := v1 @kind object;
  #L322fc4.  v2:= v18;
  #L322fc8.  v0.`com.bumptech.glide.m.f.f` @type ^`int` := v2;
  #L322fcc.  v2:= new `java.io.File`;
  #L322fd0.  v3:= "journal" @kind object;
  #L322fd4.  call `<init>`(v2, v1, v3) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L322fda.  v0.`com.bumptech.glide.m.f.c` @type ^`java.io.File` := v2 @kind object;
  #L322fde.  v2:= new `java.io.File`;
  #L322fe2.  v3:= "journal.tmp" @kind object;
  #L322fe6.  call `<init>`(v2, v1, v3) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L322fec.  v0.`com.bumptech.glide.m.f.d` @type ^`java.io.File` := v2 @kind object;
  #L322ff0.  v2:= new `java.io.File`;
  #L322ff4.  v3:= "journal.bkp" @kind object;
  #L322ff8.  call `<init>`(v2, v1, v3) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L322ffe.  v0.`com.bumptech.glide.m.f.e` @type ^`java.io.File` := v2 @kind object;
  #L323002.  v1:= v19;
  #L323006.  v0.`com.bumptech.glide.m.f.h` @type ^`int` := v1;
  #L32300a.  v1:= v20 @kind wide;
  #L32300e.  v0.`com.bumptech.glide.m.f.g` @type ^`long` := v1 @kind wide;
  #L323012.  return @kind void;
}
procedure `com.bumptech.glide.m.c` `A0`(`com.bumptech.glide.m.f` v5 @kind this, `java.lang.String` v6 @kind object, `long` v7 ) @signature `Lcom/bumptech/glide/m/f;.A0:(Ljava/lang/String;J)Lcom/bumptech/glide/m/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L322ce8.  @monitorenter v5
  #L322cea.  call `x`(v5) @signature `Lcom/bumptech/glide/m/f;.x:()V` @kind direct;
  #L322cf0.  v0:= v5.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L322cf4.  call temp:= `get`(v0, v6) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L322cfa.  v0:= temp @kind object;
  #L322cfc.  v0:= (`com.bumptech.glide.m.d`) v0 @kind object;
  #L322d00.  v1:= -1L;
  #L322d04.  v3:= 0I;
  #L322d06.  v4:= lcmp(v7, v1);
  #L322d0a.  if v4 == 0 then goto L322d26;
  #L322d0e.  if v0 == 0 then goto L322d22;
  #L322d12.  call temp:= `c`(v0) @signature `Lcom/bumptech/glide/m/d;.c:(Lcom/bumptech/glide/m/d;)J` @kind static;
  #L322d18.  v1:= temp @kind wide;
  #L322d1a.  v4:= lcmp(v1, v7);
  #L322d1e.  if v4 == 0 then goto L322d26;
  #L322d22.  @monitorexit v5
  #L322d24.  return v3 @kind object;
  #L322d26.  if v0 != 0 then goto L322d40;
  #L322d2a.  v0:= new `com.bumptech.glide.m.d`;
  #L322d2e.  call `<init>`(v0, v5, v6, v3) @signature `Lcom/bumptech/glide/m/d;.<init>:(Lcom/bumptech/glide/m/f;Ljava/lang/String;Lcom/bumptech/glide/m/a;)V` @kind direct;
  #L322d34.  v7:= v5.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L322d38.  call temp:= `put`(v7, v6, v0) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L322d3e.  goto L322d50;
  #L322d40.  call temp:= `g`(v0) @signature `Lcom/bumptech/glide/m/d;.g:(Lcom/bumptech/glide/m/d;)Lcom/bumptech/glide/m/c;` @kind static;
  #L322d46.  v7:= temp @kind object;
  #L322d48.  if v7 == 0 then goto L322d50;
  #L322d4c.  @monitorexit v5
  #L322d4e.  return v3 @kind object;
  #L322d50.  v7:= new `com.bumptech.glide.m.c`;
  #L322d54.  call `<init>`(v7, v5, v0, v3) @signature `Lcom/bumptech/glide/m/c;.<init>:(Lcom/bumptech/glide/m/f;Lcom/bumptech/glide/m/d;Lcom/bumptech/glide/m/a;)V` @kind direct;
  #L322d5a.  call temp:= `h`(v0, v7) @signature `Lcom/bumptech/glide/m/d;.h:(Lcom/bumptech/glide/m/d;Lcom/bumptech/glide/m/c;)Lcom/bumptech/glide/m/c;` @kind static;
  #L322d60.  v8:= v5.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L322d64.  v0:= "DIRTY" @kind object;
  #L322d68.  call temp:= `append`(v8, v0) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L322d6e.  v8:= v5.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L322d72.  v0:= 32I;
  #L322d76.  call temp:= `append`(v8, v0) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L322d7c.  v8:= v5.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L322d80.  call temp:= `append`(v8, v6) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L322d86.  v6:= v5.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L322d8a.  v8:= 10I;
  #L322d8e.  call temp:= `append`(v6, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L322d94.  v6:= v5.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L322d98.  call `flush`(v6) @signature `Ljava/io/Writer;.flush:()V` @kind virtual;
  #L322d9e.  @monitorexit v5
  #L322da0.  return v7 @kind object;
  #L322da2.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L322da4.  @monitorexit v5
  #L322da6.  throw v6;
  catch `java.lang.Throwable` @[L322cea..L322d1a] goto L322da2;
  catch `java.lang.Throwable` @[L322d2a..L322d48] goto L322da2;
  catch `java.lang.Throwable` @[L322d50..L322d9e] goto L322da2;
}
procedure `void` `C`(`com.bumptech.glide.m.f` v9 @kind this, `com.bumptech.glide.m.c` v10 @kind object, `boolean` v11 ) @signature `Lcom/bumptech/glide/m/f;.C:(Lcom/bumptech/glide/m/c;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L323140.  @monitorenter v9
  #L323142.  call temp:= `c`(v10) @signature `Lcom/bumptech/glide/m/c;.c:(Lcom/bumptech/glide/m/c;)Lcom/bumptech/glide/m/d;` @kind static;
  #L323148.  v0:= temp @kind object;
  #L32314a.  call temp:= `g`(v0) @signature `Lcom/bumptech/glide/m/d;.g:(Lcom/bumptech/glide/m/d;)Lcom/bumptech/glide/m/c;` @kind static;
  #L323150.  v1:= temp @kind object;
  #L323152.  if v1 != v10 then goto L323350;
  #L323156.  v1:= 0I;
  #L323158.  if v11 == 0 then goto L3231da;
  #L32315c.  call temp:= `e`(v0) @signature `Lcom/bumptech/glide/m/d;.e:(Lcom/bumptech/glide/m/d;)Z` @kind static;
  #L323162.  v2:= temp;
  #L323164.  if v2 != 0 then goto L3231da;
  #L323168.  v2:= 0I;
  #L32316a.  v3:= v9.`com.bumptech.glide.m.f.h` @type ^`int`;
  #L32316e.  if v2 >= v3 then goto L3231da;
  #L323172.  call temp:= `d`(v10) @signature `Lcom/bumptech/glide/m/c;.d:(Lcom/bumptech/glide/m/c;)[Z` @kind static;
  #L323178.  v3:= temp @kind object;
  #L32317a.  v3:= v3[v2] @kind boolean;
  #L32317e.  if v3 == 0 then goto L3231a6;
  #L323182.  call temp:= `k`(v0, v2) @signature `Lcom/bumptech/glide/m/d;.k:(I)Ljava/io/File;` @kind virtual;
  #L323188.  v3:= temp @kind object;
  #L32318a.  call temp:= `exists`(v3) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L323190.  v3:= temp;
  #L323192.  if v3 != 0 then goto L3231a0;
  #L323196.  call `a`(v10) @signature `Lcom/bumptech/glide/m/c;.a:()V` @kind virtual;
  #L32319c.  @monitorexit v9
  #L32319e.  return @kind void;
  #L3231a0.  v2:= v2 + 1;
  #L3231a4.  goto L32316a;
  #L3231a6.  call `a`(v10) @signature `Lcom/bumptech/glide/m/c;.a:()V` @kind virtual;
  #L3231ac.  v10:= new `java.lang.IllegalStateException`;
  #L3231b0.  v11:= new `java.lang.StringBuilder`;
  #L3231b4.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3231ba.  v0:= "Newly created entry didn't create value for index " @kind object;
  #L3231be.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3231c4.  call temp:= `append`(v11, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3231ca.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3231d0.  v11:= temp @kind object;
  #L3231d2.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3231d8.  throw v10;
  #L3231da.  v10:= v9.`com.bumptech.glide.m.f.h` @type ^`int`;
  #L3231de.  if v1 >= v10 then goto L323242;
  #L3231e2.  call temp:= `k`(v0, v1) @signature `Lcom/bumptech/glide/m/d;.k:(I)Ljava/io/File;` @kind virtual;
  #L3231e8.  v10:= temp @kind object;
  #L3231ea.  if v11 == 0 then goto L323236;
  #L3231ee.  call temp:= `exists`(v10) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L3231f4.  v2:= temp;
  #L3231f6.  if v2 == 0 then goto L32323c;
  #L3231fa.  call temp:= `j`(v0, v1) @signature `Lcom/bumptech/glide/m/d;.j:(I)Ljava/io/File;` @kind virtual;
  #L323200.  v2:= temp @kind object;
  #L323202.  call temp:= `renameTo`(v10, v2) @signature `Ljava/io/File;.renameTo:(Ljava/io/File;)Z` @kind virtual;
  #L323208.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/m/d;.a:(Lcom/bumptech/glide/m/d;)[J` @kind static;
  #L32320e.  v10:= temp @kind object;
  #L323210.  v3:= v10[v1] @kind wide;
  #L323214.  call temp:= `length`(v2) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L32321a.  v5:= temp @kind wide;
  #L32321c.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/m/d;.a:(Lcom/bumptech/glide/m/d;)[J` @kind static;
  #L323222.  v10:= temp @kind object;
  #L323224.  v10[v1]:= v5 @kind wide;
  #L323228.  v7:= v9.`com.bumptech.glide.m.f.i` @type ^`long` @kind wide;
  #L32322c.  v7:= v7 - v3 @kind long;
  #L32322e.  v7:= v7 + v5 @kind long;
  #L323230.  v9.`com.bumptech.glide.m.f.i` @type ^`long` := v7 @kind wide;
  #L323234.  goto L32323c;
  #L323236.  call `o0`(v10) @signature `Lcom/bumptech/glide/m/f;.o0:(Ljava/io/File;)V` @kind static;
  #L32323c.  v1:= v1 + 1;
  #L323240.  goto L3231da;
  #L323242.  v10:= v9.`com.bumptech.glide.m.f.l` @type ^`int`;
  #L323246.  v1:= 1I;
  #L323248.  v10:= v10 + v1 @kind int;
  #L32324a.  v9.`com.bumptech.glide.m.f.l` @type ^`int` := v10;
  #L32324e.  v10:= 0I;
  #L323250.  call temp:= `h`(v0, v10) @signature `Lcom/bumptech/glide/m/d;.h:(Lcom/bumptech/glide/m/d;Lcom/bumptech/glide/m/c;)Lcom/bumptech/glide/m/c;` @kind static;
  #L323256.  call temp:= `e`(v0) @signature `Lcom/bumptech/glide/m/d;.e:(Lcom/bumptech/glide/m/d;)Z` @kind static;
  #L32325c.  v10:= temp;
  #L32325e.  v10:= v10 ^| v11 @kind int;
  #L323260.  v2:= 10I;
  #L323264.  v3:= 32I;
  #L323268.  if v10 == 0 then goto L3232d2;
  #L32326c.  call temp:= `f`(v0, v1) @signature `Lcom/bumptech/glide/m/d;.f:(Lcom/bumptech/glide/m/d;Z)Z` @kind static;
  #L323272.  v10:= v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L323276.  v1:= "CLEAN" @kind object;
  #L32327a.  call temp:= `append`(v10, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L323280.  v10:= v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L323284.  call temp:= `append`(v10, v3) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L32328a.  v10:= v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L32328e.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/m/d;.b:(Lcom/bumptech/glide/m/d;)Ljava/lang/String;` @kind static;
  #L323294.  v1:= temp @kind object;
  #L323296.  call temp:= `append`(v10, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L32329c.  v10:= v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L3232a0.  call temp:= `l`(v0) @signature `Lcom/bumptech/glide/m/d;.l:()Ljava/lang/String;` @kind virtual;
  #L3232a6.  v1:= temp @kind object;
  #L3232a8.  call temp:= `append`(v10, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L3232ae.  v10:= v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L3232b2.  call temp:= `append`(v10, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L3232b8.  if v11 == 0 then goto L323318;
  #L3232bc.  v10:= v9.`com.bumptech.glide.m.f.m` @type ^`long` @kind wide;
  #L3232c0.  v1:= 1L;
  #L3232c4.  v1:= v1 + v10 @kind long;
  #L3232c6.  v9.`com.bumptech.glide.m.f.m` @type ^`long` := v1 @kind wide;
  #L3232ca.  call temp:= `d`(v0, v10) @signature `Lcom/bumptech/glide/m/d;.d:(Lcom/bumptech/glide/m/d;J)J` @kind static;
  #L3232d0.  goto L323318;
  #L3232d2.  v10:= v9.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L3232d6.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/m/d;.b:(Lcom/bumptech/glide/m/d;)Ljava/lang/String;` @kind static;
  #L3232dc.  v11:= temp @kind object;
  #L3232de.  call temp:= `remove`(v10, v11) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3232e4.  v10:= v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L3232e8.  v11:= "REMOVE" @kind object;
  #L3232ec.  call temp:= `append`(v10, v11) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L3232f2.  v10:= v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L3232f6.  call temp:= `append`(v10, v3) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L3232fc.  v10:= v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L323300.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/m/d;.b:(Lcom/bumptech/glide/m/d;)Ljava/lang/String;` @kind static;
  #L323306.  v11:= temp @kind object;
  #L323308.  call temp:= `append`(v10, v11) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L32330e.  v10:= v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L323312.  call temp:= `append`(v10, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L323318.  v10:= v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L32331c.  call `flush`(v10) @signature `Ljava/io/Writer;.flush:()V` @kind virtual;
  #L323322.  v10:= v9.`com.bumptech.glide.m.f.i` @type ^`long` @kind wide;
  #L323326.  v0:= v9.`com.bumptech.glide.m.f.g` @type ^`long` @kind wide;
  #L32332a.  v2:= lcmp(v10, v0);
  #L32332e.  if v2 > 0 then goto L32333e;
  #L323332.  call temp:= `K0`(v9) @signature `Lcom/bumptech/glide/m/f;.K0:()Z` @kind direct;
  #L323338.  v10:= temp;
  #L32333a.  if v10 == 0 then goto L32334c;
  #L32333e.  v10:= v9.`com.bumptech.glide.m.f.n` @type ^`java.util.concurrent.ThreadPoolExecutor` @kind object;
  #L323342.  v11:= v9.`com.bumptech.glide.m.f.o` @type ^`java.util.concurrent.Callable` @kind object;
  #L323346.  call temp:= `submit`(v10, v11) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind virtual;
  #L32334c.  @monitorexit v9
  #L32334e.  return @kind void;
  #L323350.  v10:= new `java.lang.IllegalStateException`;
  #L323354.  call `<init>`(v10) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L32335a.  throw v10;
  #L32335c.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32335e.  @monitorexit v9
  #L323360.  goto L323364;
  #L323362.  throw v10;
  #L323364.  goto L323362;
  catch `java.lang.Throwable` @[L323142..L32319c] goto L32335c;
  catch `java.lang.Throwable` @[L3231a6..L32334c] goto L32335c;
  catch `java.lang.Throwable` @[L323350..L32335c] goto L32335c;
}
procedure `boolean` `K0`(`com.bumptech.glide.m.f` v2 @kind this) @signature `Lcom/bumptech/glide/m/f;.K0:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L322a10.  v0:= v2.`com.bumptech.glide.m.f.l` @type ^`int`;
  #L322a14.  v1:= 2000I;
  #L322a18.  if v0 < v1 then goto L322a30;
  #L322a1c.  v1:= v2.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L322a20.  call temp:= `size`(v1) @signature `Ljava/util/LinkedHashMap;.size:()I` @kind virtual;
  #L322a26.  v1:= temp;
  #L322a28.  if v0 < v1 then goto L322a30;
  #L322a2c.  v0:= 1I;
  #L322a2e.  goto L322a32;
  #L322a30.  v0:= 0I;
  #L322a32.  return v0;
}
procedure `com.bumptech.glide.m.f` `N0`(`java.io.File` v9 @kind object, `int` v10 , `int` v11 , `long` v12 ) @signature `Lcom/bumptech/glide/m/f;.N0:(Ljava/io/File;IIJ)Lcom/bumptech/glide/m/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L322b88.  v0:= 0L;
  #L322b8c.  v2:= lcmp(v12, v0);
  #L322b90.  if v2 <= 0 then goto L322c96;
  #L322b94.  if v11 <= 0 then goto L322c86;
  #L322b98.  v0:= new `java.io.File`;
  #L322b9c.  v1:= "journal.bkp" @kind object;
  #L322ba0.  call `<init>`(v0, v9, v1) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L322ba6.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L322bac.  v1:= temp;
  #L322bae.  if v1 == 0 then goto L322bdc;
  #L322bb2.  v1:= new `java.io.File`;
  #L322bb6.  v2:= "journal" @kind object;
  #L322bba.  call `<init>`(v1, v9, v2) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L322bc0.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L322bc6.  v2:= temp;
  #L322bc8.  if v2 == 0 then goto L322bd4;
  #L322bcc.  call temp:= `delete`(v0) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L322bd2.  goto L322bdc;
  #L322bd4.  v2:= 0I;
  #L322bd6.  call `T0`(v0, v1, v2) @signature `Lcom/bumptech/glide/m/f;.T0:(Ljava/io/File;Ljava/io/File;Z)V` @kind static;
  #L322bdc.  v0:= new `com.bumptech.glide.m.f`;
  #L322be0.  v3:= v0 @kind object;
  #L322be2.  v4:= v9 @kind object;
  #L322be4.  v5:= v10;
  #L322be6.  v6:= v11;
  #L322be8.  v7:= v12 @kind wide;
  #L322bea.  call `<init>`(v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/m/f;.<init>:(Ljava/io/File;IIJ)V` @kind direct;
  #L322bf0.  v1:= v0.`com.bumptech.glide.m.f.c` @type ^`java.io.File` @kind object;
  #L322bf4.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L322bfa.  v1:= temp;
  #L322bfc.  if v1 == 0 then goto L322c64;
  #L322c00.  call `P0`(v0) @signature `Lcom/bumptech/glide/m/f;.P0:()V` @kind direct;
  #L322c06.  call `O0`(v0) @signature `Lcom/bumptech/glide/m/f;.O0:()V` @kind direct;
  #L322c0c.  return v0 @kind object;
  #L322c0e.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L322c10.  v2:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L322c14.  v3:= new `java.lang.StringBuilder`;
  #L322c18.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L322c1e.  v4:= "DiskLruCache " @kind object;
  #L322c22.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L322c28.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L322c2e.  v4:= " is corrupt: " @kind object;
  #L322c32.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L322c38.  call temp:= `getMessage`(v1) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L322c3e.  v1:= temp @kind object;
  #L322c40.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L322c46.  v1:= ", removing" @kind object;
  #L322c4a.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L322c50.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L322c56.  v1:= temp @kind object;
  #L322c58.  call `println`(v2, v1) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L322c5e.  call `m0`(v0) @signature `Lcom/bumptech/glide/m/f;.m0:()V` @kind virtual;
  #L322c64.  call temp:= `mkdirs`(v9) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L322c6a.  v0:= new `com.bumptech.glide.m.f`;
  #L322c6e.  v3:= v0 @kind object;
  #L322c70.  v4:= v9 @kind object;
  #L322c72.  v5:= v10;
  #L322c74.  v6:= v11;
  #L322c76.  v7:= v12 @kind wide;
  #L322c78.  call `<init>`(v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/m/f;.<init>:(Ljava/io/File;IIJ)V` @kind direct;
  #L322c7e.  call `R0`(v0) @signature `Lcom/bumptech/glide/m/f;.R0:()V` @kind direct;
  #L322c84.  return v0 @kind object;
  #L322c86.  v9:= new `java.lang.IllegalArgumentException`;
  #L322c8a.  v10:= "valueCount <= 0" @kind object;
  #L322c8e.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L322c94.  throw v9;
  #L322c96.  v9:= new `java.lang.IllegalArgumentException`;
  #L322c9a.  v10:= "maxSize <= 0" @kind object;
  #L322c9e.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L322ca4.  throw v9;
  catch `java.io.IOException` @[L322c00..L322c0c] goto L322c0e;
}
procedure `void` `O0`(`com.bumptech.glide.m.f` v8 @kind this) @signature `Lcom/bumptech/glide/m/f;.O0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3233f0.  v0:= v8.`com.bumptech.glide.m.f.d` @type ^`java.io.File` @kind object;
  #L3233f4.  call `o0`(v0) @signature `Lcom/bumptech/glide/m/f;.o0:(Ljava/io/File;)V` @kind static;
  #L3233fa.  v0:= v8.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L3233fe.  call temp:= `values`(v0) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L323404.  v0:= temp @kind object;
  #L323406.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32340c.  v0:= temp @kind object;
  #L32340e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L323414.  v1:= temp;
  #L323416.  if v1 == 0 then goto L323492;
  #L32341a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L323420.  v1:= temp @kind object;
  #L323422.  v1:= (`com.bumptech.glide.m.d`) v1 @kind object;
  #L323426.  call temp:= `g`(v1) @signature `Lcom/bumptech/glide/m/d;.g:(Lcom/bumptech/glide/m/d;)Lcom/bumptech/glide/m/c;` @kind static;
  #L32342c.  v2:= temp @kind object;
  #L32342e.  v3:= 0I;
  #L323430.  if v2 != 0 then goto L323458;
  #L323434.  v2:= v8.`com.bumptech.glide.m.f.h` @type ^`int`;
  #L323438.  if v3 >= v2 then goto L32340e;
  #L32343c.  v4:= v8.`com.bumptech.glide.m.f.i` @type ^`long` @kind wide;
  #L323440.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/m/d;.a:(Lcom/bumptech/glide/m/d;)[J` @kind static;
  #L323446.  v2:= temp @kind object;
  #L323448.  v6:= v2[v3] @kind wide;
  #L32344c.  v4:= v4 + v6 @kind long;
  #L32344e.  v8.`com.bumptech.glide.m.f.i` @type ^`long` := v4 @kind wide;
  #L323452.  v3:= v3 + 1;
  #L323456.  goto L323434;
  #L323458.  v2:= 0I;
  #L32345a.  call temp:= `h`(v1, v2) @signature `Lcom/bumptech/glide/m/d;.h:(Lcom/bumptech/glide/m/d;Lcom/bumptech/glide/m/c;)Lcom/bumptech/glide/m/c;` @kind static;
  #L323460.  v2:= v8.`com.bumptech.glide.m.f.h` @type ^`int`;
  #L323464.  if v3 >= v2 then goto L32348a;
  #L323468.  call temp:= `j`(v1, v3) @signature `Lcom/bumptech/glide/m/d;.j:(I)Ljava/io/File;` @kind virtual;
  #L32346e.  v2:= temp @kind object;
  #L323470.  call `o0`(v2) @signature `Lcom/bumptech/glide/m/f;.o0:(Ljava/io/File;)V` @kind static;
  #L323476.  call temp:= `k`(v1, v3) @signature `Lcom/bumptech/glide/m/d;.k:(I)Ljava/io/File;` @kind virtual;
  #L32347c.  v2:= temp @kind object;
  #L32347e.  call `o0`(v2) @signature `Lcom/bumptech/glide/m/f;.o0:(Ljava/io/File;)V` @kind static;
  #L323484.  v3:= v3 + 1;
  #L323488.  goto L323460;
  #L32348a.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L323490.  goto L32340e;
  #L323492.  return @kind void;
}
procedure `void` `P0`(`com.bumptech.glide.m.f` v9 @kind this) @signature `Lcom/bumptech/glide/m/f;.P0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3234a4.  v0:= ", " @kind object;
  #L3234a8.  v1:= new `com.bumptech.glide.m.h`;
  #L3234ac.  v2:= new `java.io.FileInputStream`;
  #L3234b0.  v3:= v9.`com.bumptech.glide.m.f.c` @type ^`java.io.File` @kind object;
  #L3234b4.  call `<init>`(v2, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3234ba.  v3:= `@@com.bumptech.glide.m.i.a` @type ^`java.nio.charset.Charset` @kind object;
  #L3234be.  call `<init>`(v1, v2, v3) @signature `Lcom/bumptech/glide/m/h;.<init>:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L3234c4.  call temp:= `k`(v1) @signature `Lcom/bumptech/glide/m/h;.k:()Ljava/lang/String;` @kind virtual;
  #L3234ca.  v2:= temp @kind object;
  #L3234cc.  call temp:= `k`(v1) @signature `Lcom/bumptech/glide/m/h;.k:()Ljava/lang/String;` @kind virtual;
  #L3234d2.  v3:= temp @kind object;
  #L3234d4.  call temp:= `k`(v1) @signature `Lcom/bumptech/glide/m/h;.k:()Ljava/lang/String;` @kind virtual;
  #L3234da.  v4:= temp @kind object;
  #L3234dc.  call temp:= `k`(v1) @signature `Lcom/bumptech/glide/m/h;.k:()Ljava/lang/String;` @kind virtual;
  #L3234e2.  v5:= temp @kind object;
  #L3234e4.  call temp:= `k`(v1) @signature `Lcom/bumptech/glide/m/h;.k:()Ljava/lang/String;` @kind virtual;
  #L3234ea.  v6:= temp @kind object;
  #L3234ec.  v7:= "libcore.io.DiskLruCache" @kind object;
  #L3234f0.  call temp:= `equals`(v7, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3234f6.  v7:= temp;
  #L3234f8.  if v7 == 0 then goto L3235bc;
  #L3234fc.  v7:= "1" @kind object;
  #L323500.  call temp:= `equals`(v7, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L323506.  v7:= temp;
  #L323508.  if v7 == 0 then goto L3235bc;
  #L32350c.  v7:= v9.`com.bumptech.glide.m.f.f` @type ^`int`;
  #L323510.  call temp:= `toString`(v7) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L323516.  v7:= temp @kind object;
  #L323518.  call temp:= `equals`(v7, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32351e.  v4:= temp;
  #L323520.  if v4 == 0 then goto L3235bc;
  #L323524.  v4:= v9.`com.bumptech.glide.m.f.h` @type ^`int`;
  #L323528.  call temp:= `toString`(v4) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L32352e.  v4:= temp @kind object;
  #L323530.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L323536.  v4:= temp;
  #L323538.  if v4 == 0 then goto L3235bc;
  #L32353c.  v4:= "" @kind object;
  #L323540.  call temp:= `equals`(v4, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L323546.  v4:= temp;
  #L323548.  if v4 == 0 then goto L3235bc;
  #L32354c.  v0:= 0I;
  #L32354e.  call temp:= `k`(v1) @signature `Lcom/bumptech/glide/m/h;.k:()Ljava/lang/String;` @kind virtual;
  #L323554.  v2:= temp @kind object;
  #L323556.  call `Q0`(v9, v2) @signature `Lcom/bumptech/glide/m/f;.Q0:(Ljava/lang/String;)V` @kind direct;
  #L32355c.  v0:= v0 + 1;
  #L323560.  goto L32354e;
  #L323562.  v2:= v9.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L323566.  call temp:= `size`(v2) @signature `Ljava/util/LinkedHashMap;.size:()I` @kind virtual;
  #L32356c.  v2:= temp;
  #L32356e.  v0:= v0 - v2 @kind int;
  #L323570.  v9.`com.bumptech.glide.m.f.l` @type ^`int` := v0;
  #L323574.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/m/h;.d:()Z` @kind virtual;
  #L32357a.  v0:= temp;
  #L32357c.  if v0 == 0 then goto L323588;
  #L323580.  call `R0`(v9) @signature `Lcom/bumptech/glide/m/f;.R0:()V` @kind direct;
  #L323586.  goto L3235b4;
  #L323588.  v0:= new `java.io.BufferedWriter`;
  #L32358c.  v2:= new `java.io.OutputStreamWriter`;
  #L323590.  v3:= new `java.io.FileOutputStream`;
  #L323594.  v4:= v9.`com.bumptech.glide.m.f.c` @type ^`java.io.File` @kind object;
  #L323598.  v5:= 1I;
  #L32359a.  call `<init>`(v3, v4, v5) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L3235a0.  v4:= `@@com.bumptech.glide.m.i.a` @type ^`java.nio.charset.Charset` @kind object;
  #L3235a4.  call `<init>`(v2, v3, v4) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L3235aa.  call `<init>`(v0, v2) @signature `Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L3235b0.  v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` := v0 @kind object;
  #L3235b4.  call `a`(v1) @signature `Lcom/bumptech/glide/m/i;.a:(Ljava/io/Closeable;)V` @kind static;
  #L3235ba.  return @kind void;
  #L3235bc.  v4:= new `java.io.IOException`;
  #L3235c0.  v7:= new `java.lang.StringBuilder`;
  #L3235c4.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3235ca.  v8:= "unexpected journal header: [" @kind object;
  #L3235ce.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3235d4.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3235da.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3235e0.  call temp:= `append`(v7, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3235e6.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3235ec.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3235f2.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3235f8.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3235fe.  v0:= "]" @kind object;
  #L323602.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L323608.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32360e.  v0:= temp @kind object;
  #L323610.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L323616.  throw v4;
  #L323618.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32361a.  call `a`(v1) @signature `Lcom/bumptech/glide/m/i;.a:(Ljava/io/Closeable;)V` @kind static;
  #L323620.  goto L323624;
  #L323622.  throw v0;
  #L323624.  goto L323622;
  catch `java.lang.Throwable` @[L3234c4..L323548] goto L323618;
  catch `java.io.EOFException` @[L32354e..L32355c] goto L323562;
  catch `java.lang.Throwable` @[L32354e..L32355c] goto L323618;
  catch `java.lang.Throwable` @[L323562..L3235b4] goto L323618;
  catch `java.lang.Throwable` @[L3235bc..L323618] goto L323618;
}
procedure `void` `Q0`(`com.bumptech.glide.m.f` v8 @kind this, `java.lang.String` v9 @kind object) @signature `Lcom/bumptech/glide/m/f;.Q0:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L323664.  v0:= 32I;
  #L323668.  call temp:= `indexOf`(v9, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L32366e.  v1:= temp;
  #L323670.  v2:= "unexpected journal line: " @kind object;
  #L323674.  v3:= -1I;
  #L323676.  if v1 == v3 then goto L32379c;
  #L32367a.  v4:= v1 + 1;
  #L32367e.  call temp:= `indexOf`(v9, v0, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L323684.  v0:= temp;
  #L323686.  if v0 != v3 then goto L3236b4;
  #L32368a.  call temp:= `substring`(v9, v4) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L323690.  v4:= temp @kind object;
  #L323692.  v5:= 6I;
  #L323694.  if v1 != v5 then goto L3236bc;
  #L323698.  v5:= "REMOVE" @kind object;
  #L32369c.  call temp:= `startsWith`(v9, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3236a2.  v5:= temp;
  #L3236a4.  if v5 == 0 then goto L3236bc;
  #L3236a8.  v9:= v8.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L3236ac.  call temp:= `remove`(v9, v4) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3236b2.  return @kind void;
  #L3236b4.  call temp:= `substring`(v9, v4, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3236ba.  v4:= temp @kind object;
  #L3236bc.  v5:= v8.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L3236c0.  call temp:= `get`(v5, v4) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3236c6.  v5:= temp @kind object;
  #L3236c8.  v5:= (`com.bumptech.glide.m.d`) v5 @kind object;
  #L3236cc.  v6:= 0I;
  #L3236ce.  if v5 != 0 then goto L3236e6;
  #L3236d2.  v5:= new `com.bumptech.glide.m.d`;
  #L3236d6.  call `<init>`(v5, v8, v4, v6) @signature `Lcom/bumptech/glide/m/d;.<init>:(Lcom/bumptech/glide/m/f;Ljava/lang/String;Lcom/bumptech/glide/m/a;)V` @kind direct;
  #L3236dc.  v7:= v8.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L3236e0.  call temp:= `put`(v7, v4, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3236e6.  v4:= 5I;
  #L3236e8.  if v0 == v3 then goto L32372c;
  #L3236ec.  if v1 != v4 then goto L32372c;
  #L3236f0.  v7:= "CLEAN" @kind object;
  #L3236f4.  call temp:= `startsWith`(v9, v7) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3236fa.  v7:= temp;
  #L3236fc.  if v7 == 0 then goto L32372c;
  #L323700.  v1:= 1I;
  #L323702.  v0:= v0 + v1 @kind int;
  #L323704.  call temp:= `substring`(v9, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L32370a.  v9:= temp @kind object;
  #L32370c.  v0:= " " @kind object;
  #L323710.  call temp:= `split`(v9, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L323716.  v9:= temp @kind object;
  #L323718.  call temp:= `f`(v5, v1) @signature `Lcom/bumptech/glide/m/d;.f:(Lcom/bumptech/glide/m/d;Z)Z` @kind static;
  #L32371e.  call temp:= `h`(v5, v6) @signature `Lcom/bumptech/glide/m/d;.h:(Lcom/bumptech/glide/m/d;Lcom/bumptech/glide/m/c;)Lcom/bumptech/glide/m/c;` @kind static;
  #L323724.  call `i`(v5, v9) @signature `Lcom/bumptech/glide/m/d;.i:(Lcom/bumptech/glide/m/d;[Ljava/lang/String;)V` @kind static;
  #L32372a.  goto L323770;
  #L32372c.  if v0 != v3 then goto L323756;
  #L323730.  if v1 != v4 then goto L323756;
  #L323734.  v4:= "DIRTY" @kind object;
  #L323738.  call temp:= `startsWith`(v9, v4) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L32373e.  v4:= temp;
  #L323740.  if v4 == 0 then goto L323756;
  #L323744.  v9:= new `com.bumptech.glide.m.c`;
  #L323748.  call `<init>`(v9, v8, v5, v6) @signature `Lcom/bumptech/glide/m/c;.<init>:(Lcom/bumptech/glide/m/f;Lcom/bumptech/glide/m/d;Lcom/bumptech/glide/m/a;)V` @kind direct;
  #L32374e.  call temp:= `h`(v5, v9) @signature `Lcom/bumptech/glide/m/d;.h:(Lcom/bumptech/glide/m/d;Lcom/bumptech/glide/m/c;)Lcom/bumptech/glide/m/c;` @kind static;
  #L323754.  goto L323770;
  #L323756.  if v0 != v3 then goto L323772;
  #L32375a.  v0:= 4I;
  #L32375c.  if v1 != v0 then goto L323772;
  #L323760.  v0:= "READ" @kind object;
  #L323764.  call temp:= `startsWith`(v9, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L32376a.  v0:= temp;
  #L32376c.  if v0 == 0 then goto L323772;
  #L323770.  return @kind void;
  #L323772.  v0:= new `java.io.IOException`;
  #L323776.  v1:= new `java.lang.StringBuilder`;
  #L32377a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L323780.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L323786.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32378c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L323792.  v9:= temp @kind object;
  #L323794.  call `<init>`(v0, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32379a.  throw v0;
  #L32379c.  v0:= new `java.io.IOException`;
  #L3237a0.  v1:= new `java.lang.StringBuilder`;
  #L3237a4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3237aa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3237b0.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3237b6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3237bc.  v9:= temp @kind object;
  #L3237be.  call `<init>`(v0, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3237c4.  throw v0;
}
procedure `void` `R0`(`com.bumptech.glide.m.f` v6 @kind this) @signature `Lcom/bumptech/glide/m/f;.R0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3237d8.  @monitorenter v6
  #L3237da.  v0:= v6.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L3237de.  if v0 == 0 then goto L3237e8;
  #L3237e2.  call `close`(v0) @signature `Ljava/io/Writer;.close:()V` @kind virtual;
  #L3237e8.  v0:= new `java.io.BufferedWriter`;
  #L3237ec.  v1:= new `java.io.OutputStreamWriter`;
  #L3237f0.  v2:= new `java.io.FileOutputStream`;
  #L3237f4.  v3:= v6.`com.bumptech.glide.m.f.d` @type ^`java.io.File` @kind object;
  #L3237f8.  call `<init>`(v2, v3) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3237fe.  v3:= `@@com.bumptech.glide.m.i.a` @type ^`java.nio.charset.Charset` @kind object;
  #L323802.  call `<init>`(v1, v2, v3) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L323808.  call `<init>`(v0, v1) @signature `Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L32380e.  v1:= "libcore.io.DiskLruCache" @kind object;
  #L323812.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L323818.  v1:= "\n" @kind object;
  #L32381c.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L323822.  v1:= "1" @kind object;
  #L323826.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L32382c.  v1:= "\n" @kind object;
  #L323830.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L323836.  v1:= v6.`com.bumptech.glide.m.f.f` @type ^`int`;
  #L32383a.  call temp:= `toString`(v1) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L323840.  v1:= temp @kind object;
  #L323842.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L323848.  v1:= "\n" @kind object;
  #L32384c.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L323852.  v1:= v6.`com.bumptech.glide.m.f.h` @type ^`int`;
  #L323856.  call temp:= `toString`(v1) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L32385c.  v1:= temp @kind object;
  #L32385e.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L323864.  v1:= "\n" @kind object;
  #L323868.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L32386e.  v1:= "\n" @kind object;
  #L323872.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L323878.  v1:= v6.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L32387c.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L323882.  v1:= temp @kind object;
  #L323884.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32388a.  v1:= temp @kind object;
  #L32388c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L323892.  v2:= temp;
  #L323894.  if v2 == 0 then goto L323932;
  #L323898.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32389e.  v2:= temp @kind object;
  #L3238a0.  v2:= (`com.bumptech.glide.m.d`) v2 @kind object;
  #L3238a4.  call temp:= `g`(v2) @signature `Lcom/bumptech/glide/m/d;.g:(Lcom/bumptech/glide/m/d;)Lcom/bumptech/glide/m/c;` @kind static;
  #L3238aa.  v3:= temp @kind object;
  #L3238ac.  v4:= 10I;
  #L3238b0.  if v3 == 0 then goto L3238ec;
  #L3238b4.  v3:= new `java.lang.StringBuilder`;
  #L3238b8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3238be.  v5:= "DIRTY " @kind object;
  #L3238c2.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3238c8.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/m/d;.b:(Lcom/bumptech/glide/m/d;)Ljava/lang/String;` @kind static;
  #L3238ce.  v2:= temp @kind object;
  #L3238d0.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3238d6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3238dc.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3238e2.  v2:= temp @kind object;
  #L3238e4.  call `write`(v0, v2) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L3238ea.  goto L32388c;
  #L3238ec.  v3:= new `java.lang.StringBuilder`;
  #L3238f0.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3238f6.  v5:= "CLEAN " @kind object;
  #L3238fa.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L323900.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/m/d;.b:(Lcom/bumptech/glide/m/d;)Ljava/lang/String;` @kind static;
  #L323906.  v5:= temp @kind object;
  #L323908.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32390e.  call temp:= `l`(v2) @signature `Lcom/bumptech/glide/m/d;.l:()Ljava/lang/String;` @kind virtual;
  #L323914.  v2:= temp @kind object;
  #L323916.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32391c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L323922.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L323928.  v2:= temp @kind object;
  #L32392a.  call `write`(v0, v2) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L323930.  goto L32388c;
  #L323932.  call `close`(v0) @signature `Ljava/io/Writer;.close:()V` @kind virtual;
  #L323938.  v0:= v6.`com.bumptech.glide.m.f.c` @type ^`java.io.File` @kind object;
  #L32393c.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L323942.  v0:= temp;
  #L323944.  v1:= 1I;
  #L323946.  if v0 == 0 then goto L323958;
  #L32394a.  v0:= v6.`com.bumptech.glide.m.f.c` @type ^`java.io.File` @kind object;
  #L32394e.  v2:= v6.`com.bumptech.glide.m.f.e` @type ^`java.io.File` @kind object;
  #L323952.  call `T0`(v0, v2, v1) @signature `Lcom/bumptech/glide/m/f;.T0:(Ljava/io/File;Ljava/io/File;Z)V` @kind static;
  #L323958.  v0:= v6.`com.bumptech.glide.m.f.d` @type ^`java.io.File` @kind object;
  #L32395c.  v2:= v6.`com.bumptech.glide.m.f.c` @type ^`java.io.File` @kind object;
  #L323960.  v3:= 0I;
  #L323962.  call `T0`(v0, v2, v3) @signature `Lcom/bumptech/glide/m/f;.T0:(Ljava/io/File;Ljava/io/File;Z)V` @kind static;
  #L323968.  v0:= v6.`com.bumptech.glide.m.f.e` @type ^`java.io.File` @kind object;
  #L32396c.  call temp:= `delete`(v0) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L323972.  v0:= new `java.io.BufferedWriter`;
  #L323976.  v2:= new `java.io.OutputStreamWriter`;
  #L32397a.  v3:= new `java.io.FileOutputStream`;
  #L32397e.  v4:= v6.`com.bumptech.glide.m.f.c` @type ^`java.io.File` @kind object;
  #L323982.  call `<init>`(v3, v4, v1) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L323988.  v1:= `@@com.bumptech.glide.m.i.a` @type ^`java.nio.charset.Charset` @kind object;
  #L32398c.  call `<init>`(v2, v3, v1) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L323992.  call `<init>`(v0, v2) @signature `Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L323998.  v6.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` := v0 @kind object;
  #L32399c.  @monitorexit v6
  #L32399e.  return @kind void;
  #L3239a0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3239a2.  call `close`(v0) @signature `Ljava/io/Writer;.close:()V` @kind virtual;
  #L3239a8.  throw v1;
  #L3239aa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3239ac.  @monitorexit v6
  #L3239ae.  goto L3239b2;
  #L3239b0.  throw v0;
  #L3239b2.  goto L3239b0;
  catch `java.lang.Throwable` @[L3237da..L32380e] goto L3239aa;
  catch `java.lang.Throwable` @[L32380e..L323930] goto L3239a0;
  catch `java.lang.Throwable` @[L323932..L32399c] goto L3239aa;
  catch `java.lang.Throwable` @[L3239a2..L3239aa] goto L3239aa;
}
procedure `void` `T0`(`java.io.File` v0 @kind object, `java.io.File` v1 @kind object, `boolean` v2 ) @signature `Lcom/bumptech/glide/m/f;.T0:(Ljava/io/File;Ljava/io/File;Z)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3239ec.  if v2 == 0 then goto L3239f6;
  #L3239f0.  call `o0`(v1) @signature `Lcom/bumptech/glide/m/f;.o0:(Ljava/io/File;)V` @kind static;
  #L3239f6.  call temp:= `renameTo`(v0, v1) @signature `Ljava/io/File;.renameTo:(Ljava/io/File;)Z` @kind virtual;
  #L3239fc.  v0:= temp;
  #L3239fe.  if v0 == 0 then goto L323a04;
  #L323a02.  return @kind void;
  #L323a04.  v0:= new `java.io.IOException`;
  #L323a08.  call `<init>`(v0) @signature `Ljava/io/IOException;.<init>:()V` @kind direct;
  #L323a0e.  throw v0;
}
procedure `void` `U0`(`com.bumptech.glide.m.f` v5 @kind this) @signature `Lcom/bumptech/glide/m/f;.U0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L323a20.  v0:= v5.`com.bumptech.glide.m.f.i` @type ^`long` @kind wide;
  #L323a24.  v2:= v5.`com.bumptech.glide.m.f.g` @type ^`long` @kind wide;
  #L323a28.  v4:= lcmp(v0, v2);
  #L323a2c.  if v4 <= 0 then goto L323a64;
  #L323a30.  v0:= v5.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L323a34.  call temp:= `entrySet`(v0) @signature `Ljava/util/LinkedHashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L323a3a.  v0:= temp @kind object;
  #L323a3c.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L323a42.  v0:= temp @kind object;
  #L323a44.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L323a4a.  v0:= temp @kind object;
  #L323a4c.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L323a50.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L323a56.  v0:= temp @kind object;
  #L323a58.  v0:= (`java.lang.String`) v0 @kind object;
  #L323a5c.  call temp:= `S0`(v5, v0) @signature `Lcom/bumptech/glide/m/f;.S0:(Ljava/lang/String;)Z` @kind virtual;
  #L323a62.  goto L323a20;
  #L323a64.  return @kind void;
}
procedure `java.io.Writer` `a`(`com.bumptech.glide.m.f` v0 @kind object) @signature `Lcom/bumptech/glide/m/f;.a:(Lcom/bumptech/glide/m/f;)Ljava/io/Writer;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L322f38.  v0:= v0.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L322f3c.  return v0 @kind object;
}
procedure `int` `c`(`com.bumptech.glide.m.f` v0 @kind object) @signature `Lcom/bumptech/glide/m/f;.c:(Lcom/bumptech/glide/m/f;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L322ef0.  v0:= v0.`com.bumptech.glide.m.f.h` @type ^`int`;
  #L322ef4.  return v0;
}
procedure `void` `d`(`com.bumptech.glide.m.f` v0 @kind object) @signature `Lcom/bumptech/glide/m/f;.d:(Lcom/bumptech/glide/m/f;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L323024.  call `U0`(v0) @signature `Lcom/bumptech/glide/m/f;.U0:()V` @kind direct;
  #L32302a.  return @kind void;
}
procedure `java.io.File` `k`(`com.bumptech.glide.m.f` v0 @kind object) @signature `Lcom/bumptech/glide/m/f;.k:(Lcom/bumptech/glide/m/f;)Ljava/io/File;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L322f20.  v0:= v0.`com.bumptech.glide.m.f.b` @type ^`java.io.File` @kind object;
  #L322f24.  return v0 @kind object;
}
procedure `void` `m`(`com.bumptech.glide.m.f` v0 @kind object, `com.bumptech.glide.m.c` v1 @kind object, `boolean` v2 ) @signature `Lcom/bumptech/glide/m/f;.m:(Lcom/bumptech/glide/m/f;Lcom/bumptech/glide/m/c;Z)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L32303c.  call `C`(v0, v1, v2) @signature `Lcom/bumptech/glide/m/f;.C:(Lcom/bumptech/glide/m/c;Z)V` @kind direct;
  #L323042.  return @kind void;
}
procedure `boolean` `o`(`com.bumptech.glide.m.f` v0 @kind object) @signature `Lcom/bumptech/glide/m/f;.o:(Lcom/bumptech/glide/m/f;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3229f4.  call temp:= `K0`(v0) @signature `Lcom/bumptech/glide/m/f;.K0:()Z` @kind direct;
  #L3229fa.  v0:= temp;
  #L3229fc.  return v0;
}
procedure `void` `o0`(`java.io.File` v1 @kind object) @signature `Lcom/bumptech/glide/m/f;.o0:(Ljava/io/File;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3233b8.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L3233be.  v0:= temp;
  #L3233c0.  if v0 == 0 then goto L3233de;
  #L3233c4.  call temp:= `delete`(v1) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L3233ca.  v1:= temp;
  #L3233cc.  if v1 == 0 then goto L3233d2;
  #L3233d0.  goto L3233de;
  #L3233d2.  v1:= new `java.io.IOException`;
  #L3233d6.  call `<init>`(v1) @signature `Ljava/io/IOException;.<init>:()V` @kind direct;
  #L3233dc.  throw v1;
  #L3233de.  return @kind void;
}
procedure `void` `s`(`com.bumptech.glide.m.f` v0 @kind object) @signature `Lcom/bumptech/glide/m/f;.s:(Lcom/bumptech/glide/m/f;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L323054.  call `R0`(v0) @signature `Lcom/bumptech/glide/m/f;.R0:()V` @kind direct;
  #L32305a.  return @kind void;
}
procedure `int` `v`(`com.bumptech.glide.m.f` v0 @kind object, `int` v1 ) @signature `Lcom/bumptech/glide/m/f;.v:(Lcom/bumptech/glide/m/f;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L322f08.  v0.`com.bumptech.glide.m.f.l` @type ^`int` := v1;
  #L322f0c.  return v1;
}
procedure `void` `x`(`com.bumptech.glide.m.f` v2 @kind this) @signature `Lcom/bumptech/glide/m/f;.x:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32306c.  v0:= v2.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L323070.  if v0 == 0 then goto L323076;
  #L323074.  return @kind void;
  #L323076.  v0:= new `java.lang.IllegalStateException`;
  #L32307a.  v1:= "cache is closed" @kind object;
  #L32307e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L323084.  throw v0;
}
procedure `com.bumptech.glide.m.e` `G0`(`com.bumptech.glide.m.f` v9 @kind this, `java.lang.String` v10 @kind object) @signature `Lcom/bumptech/glide/m/f;.G0:(Ljava/lang/String;)Lcom/bumptech/glide/m/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L322dd4.  @monitorenter v9
  #L322dd6.  call `x`(v9) @signature `Lcom/bumptech/glide/m/f;.x:()V` @kind direct;
  #L322ddc.  v0:= v9.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L322de0.  call temp:= `get`(v0, v10) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L322de6.  v0:= temp @kind object;
  #L322de8.  v0:= (`com.bumptech.glide.m.d`) v0 @kind object;
  #L322dec.  v1:= 0I;
  #L322dee.  if v0 != 0 then goto L322df6;
  #L322df2.  @monitorexit v9
  #L322df4.  return v1 @kind object;
  #L322df6.  call temp:= `e`(v0) @signature `Lcom/bumptech/glide/m/d;.e:(Lcom/bumptech/glide/m/d;)Z` @kind static;
  #L322dfc.  v2:= temp;
  #L322dfe.  if v2 != 0 then goto L322e06;
  #L322e02.  @monitorexit v9
  #L322e04.  return v1 @kind object;
  #L322e06.  v2:= v0.`com.bumptech.glide.m.d.c` @type ^`java.io.File`[] @kind object;
  #L322e0a.  v3:= length @variable v2;
  #L322e0c.  v4:= 0I;
  #L322e0e.  if v4 >= v3 then goto L322e2c;
  #L322e12.  v5:= v2[v4] @kind object;
  #L322e16.  call temp:= `exists`(v5) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L322e1c.  v5:= temp;
  #L322e1e.  if v5 != 0 then goto L322e26;
  #L322e22.  @monitorexit v9
  #L322e24.  return v1 @kind object;
  #L322e26.  v4:= v4 + 1;
  #L322e2a.  goto L322e0e;
  #L322e2c.  v1:= v9.`com.bumptech.glide.m.f.l` @type ^`int`;
  #L322e30.  v1:= v1 + 1;
  #L322e34.  v9.`com.bumptech.glide.m.f.l` @type ^`int` := v1;
  #L322e38.  v1:= v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L322e3c.  v2:= "READ" @kind object;
  #L322e40.  call temp:= `append`(v1, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L322e46.  v1:= v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L322e4a.  v2:= 32I;
  #L322e4e.  call temp:= `append`(v1, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L322e54.  v1:= v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L322e58.  call temp:= `append`(v1, v10) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L322e5e.  v1:= v9.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L322e62.  v2:= 10I;
  #L322e66.  call temp:= `append`(v1, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L322e6c.  call temp:= `K0`(v9) @signature `Lcom/bumptech/glide/m/f;.K0:()Z` @kind direct;
  #L322e72.  v1:= temp;
  #L322e74.  if v1 == 0 then goto L322e86;
  #L322e78.  v1:= v9.`com.bumptech.glide.m.f.n` @type ^`java.util.concurrent.ThreadPoolExecutor` @kind object;
  #L322e7c.  v2:= v9.`com.bumptech.glide.m.f.o` @type ^`java.util.concurrent.Callable` @kind object;
  #L322e80.  call temp:= `submit`(v1, v2) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind virtual;
  #L322e86.  v8:= new `com.bumptech.glide.m.e`;
  #L322e8a.  call temp:= `c`(v0) @signature `Lcom/bumptech/glide/m/d;.c:(Lcom/bumptech/glide/m/d;)J` @kind static;
  #L322e90.  v3:= temp @kind wide;
  #L322e92.  v5:= v0.`com.bumptech.glide.m.d.c` @type ^`java.io.File`[] @kind object;
  #L322e96.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/m/d;.a:(Lcom/bumptech/glide/m/d;)[J` @kind static;
  #L322e9c.  v6:= temp @kind object;
  #L322e9e.  v7:= 0I;
  #L322ea0.  v0:= v8 @kind object;
  #L322ea2.  v1:= v9 @kind object;
  #L322ea4.  v2:= v10 @kind object;
  #L322ea6.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Lcom/bumptech/glide/m/e;.<init>:(Lcom/bumptech/glide/m/f;Ljava/lang/String;J[Ljava/io/File;[JLcom/bumptech/glide/m/a;)V` @kind direct;
  #L322eac.  @monitorexit v9
  #L322eae.  return v8 @kind object;
  #L322eb0.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L322eb2.  @monitorexit v9
  #L322eb4.  goto L322eb8;
  #L322eb6.  throw v10;
  #L322eb8.  goto L322eb6;
  catch `java.lang.Throwable` @[L322dd6..L322dec] goto L322eb0;
  catch `java.lang.Throwable` @[L322df6..L322dfe] goto L322eb0;
  catch `java.lang.Throwable` @[L322e06..L322e1e] goto L322eb0;
  catch `java.lang.Throwable` @[L322e2c..L322eac] goto L322eb0;
}
procedure `boolean` `S0`(`com.bumptech.glide.m.f` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lcom/bumptech/glide/m/f;.S0:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L322a44.  @monitorenter v7
  #L322a46.  call `x`(v7) @signature `Lcom/bumptech/glide/m/f;.x:()V` @kind direct;
  #L322a4c.  v0:= v7.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L322a50.  call temp:= `get`(v0, v8) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L322a56.  v0:= temp @kind object;
  #L322a58.  v0:= (`com.bumptech.glide.m.d`) v0 @kind object;
  #L322a5c.  v1:= 0I;
  #L322a5e.  if v0 == 0 then goto L322b5e;
  #L322a62.  call temp:= `g`(v0) @signature `Lcom/bumptech/glide/m/d;.g:(Lcom/bumptech/glide/m/d;)Lcom/bumptech/glide/m/c;` @kind static;
  #L322a68.  v2:= temp @kind object;
  #L322a6a.  if v2 == 0 then goto L322a72;
  #L322a6e.  goto L322b5e;
  #L322a72.  v2:= v7.`com.bumptech.glide.m.f.h` @type ^`int`;
  #L322a76.  if v1 >= v2 then goto L322af6;
  #L322a7a.  call temp:= `j`(v0, v1) @signature `Lcom/bumptech/glide/m/d;.j:(I)Ljava/io/File;` @kind virtual;
  #L322a80.  v2:= temp @kind object;
  #L322a82.  call temp:= `exists`(v2) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L322a88.  v3:= temp;
  #L322a8a.  if v3 == 0 then goto L322aca;
  #L322a8e.  call temp:= `delete`(v2) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L322a94.  v3:= temp;
  #L322a96.  if v3 == 0 then goto L322a9c;
  #L322a9a.  goto L322aca;
  #L322a9c.  v8:= new `java.io.IOException`;
  #L322aa0.  v0:= new `java.lang.StringBuilder`;
  #L322aa4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L322aaa.  v1:= "failed to delete " @kind object;
  #L322aae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L322ab4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L322aba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L322ac0.  v0:= temp @kind object;
  #L322ac2.  call `<init>`(v8, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L322ac8.  throw v8;
  #L322aca.  v2:= v7.`com.bumptech.glide.m.f.i` @type ^`long` @kind wide;
  #L322ace.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/m/d;.a:(Lcom/bumptech/glide/m/d;)[J` @kind static;
  #L322ad4.  v4:= temp @kind object;
  #L322ad6.  v5:= v4[v1] @kind wide;
  #L322ada.  v2:= v2 - v5 @kind long;
  #L322adc.  v7.`com.bumptech.glide.m.f.i` @type ^`long` := v2 @kind wide;
  #L322ae0.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/m/d;.a:(Lcom/bumptech/glide/m/d;)[J` @kind static;
  #L322ae6.  v2:= temp @kind object;
  #L322ae8.  v3:= 0L;
  #L322aec.  v2[v1]:= v3 @kind wide;
  #L322af0.  v1:= v1 + 1;
  #L322af4.  goto L322a72;
  #L322af6.  v0:= v7.`com.bumptech.glide.m.f.l` @type ^`int`;
  #L322afa.  v1:= 1I;
  #L322afc.  v0:= v0 + v1 @kind int;
  #L322afe.  v7.`com.bumptech.glide.m.f.l` @type ^`int` := v0;
  #L322b02.  v0:= v7.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L322b06.  v2:= "REMOVE" @kind object;
  #L322b0a.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L322b10.  v0:= v7.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L322b14.  v2:= 32I;
  #L322b18.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L322b1e.  v0:= v7.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L322b22.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L322b28.  v0:= v7.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L322b2c.  v2:= 10I;
  #L322b30.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L322b36.  v0:= v7.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L322b3a.  call temp:= `remove`(v0, v8) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L322b40.  call temp:= `K0`(v7) @signature `Lcom/bumptech/glide/m/f;.K0:()Z` @kind direct;
  #L322b46.  v8:= temp;
  #L322b48.  if v8 == 0 then goto L322b5a;
  #L322b4c.  v8:= v7.`com.bumptech.glide.m.f.n` @type ^`java.util.concurrent.ThreadPoolExecutor` @kind object;
  #L322b50.  v0:= v7.`com.bumptech.glide.m.f.o` @type ^`java.util.concurrent.Callable` @kind object;
  #L322b54.  call temp:= `submit`(v8, v0) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind virtual;
  #L322b5a.  @monitorexit v7
  #L322b5c.  return v1;
  #L322b5e.  @monitorexit v7
  #L322b60.  return v1;
  #L322b62.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L322b64.  @monitorexit v7
  #L322b66.  goto L322b6a;
  #L322b68.  throw v8;
  #L322b6a.  goto L322b68;
  catch `java.lang.Throwable` @[L322a46..L322b5a] goto L322b62;
}
procedure `void` `close`(`com.bumptech.glide.m.f` v3 @kind this) @signature `Lcom/bumptech/glide/m/f;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L323098.  @monitorenter v3
  #L32309a.  v0:= v3.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L32309e.  if v0 != 0 then goto L3230a6;
  #L3230a2.  @monitorexit v3
  #L3230a4.  return @kind void;
  #L3230a6.  v0:= new `java.util.ArrayList`;
  #L3230aa.  v1:= v3.`com.bumptech.glide.m.f.k` @type ^`java.util.LinkedHashMap` @kind object;
  #L3230ae.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L3230b4.  v1:= temp @kind object;
  #L3230b6.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3230bc.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3230c2.  v0:= temp @kind object;
  #L3230c4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3230ca.  v1:= temp;
  #L3230cc.  if v1 == 0 then goto L3230f8;
  #L3230d0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3230d6.  v1:= temp @kind object;
  #L3230d8.  v1:= (`com.bumptech.glide.m.d`) v1 @kind object;
  #L3230dc.  call temp:= `g`(v1) @signature `Lcom/bumptech/glide/m/d;.g:(Lcom/bumptech/glide/m/d;)Lcom/bumptech/glide/m/c;` @kind static;
  #L3230e2.  v2:= temp @kind object;
  #L3230e4.  if v2 == 0 then goto L3230c4;
  #L3230e8.  call temp:= `g`(v1) @signature `Lcom/bumptech/glide/m/d;.g:(Lcom/bumptech/glide/m/d;)Lcom/bumptech/glide/m/c;` @kind static;
  #L3230ee.  v1:= temp @kind object;
  #L3230f0.  call `a`(v1) @signature `Lcom/bumptech/glide/m/c;.a:()V` @kind virtual;
  #L3230f6.  goto L3230c4;
  #L3230f8.  call `U0`(v3) @signature `Lcom/bumptech/glide/m/f;.U0:()V` @kind direct;
  #L3230fe.  v0:= v3.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` @kind object;
  #L323102.  call `close`(v0) @signature `Ljava/io/Writer;.close:()V` @kind virtual;
  #L323108.  v0:= 0I;
  #L32310a.  v3.`com.bumptech.glide.m.f.j` @type ^`java.io.Writer` := v0 @kind object;
  #L32310e.  @monitorexit v3
  #L323110.  return @kind void;
  #L323112.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L323114.  @monitorexit v3
  #L323116.  goto L32311a;
  #L323118.  throw v0;
  #L32311a.  goto L323118;
  catch `java.lang.Throwable` @[L32309a..L32309e] goto L323112;
  catch `java.lang.Throwable` @[L3230a6..L32310e] goto L323112;
}
procedure `void` `m0`(`com.bumptech.glide.m.f` v1 @kind this) @signature `Lcom/bumptech/glide/m/f;.m0:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L323394.  call `close`(v1) @signature `Lcom/bumptech/glide/m/f;.close:()V` @kind virtual;
  #L32339a.  v0:= v1.`com.bumptech.glide.m.f.b` @type ^`java.io.File` @kind object;
  #L32339e.  call `b`(v0) @signature `Lcom/bumptech/glide/m/i;.b:(Ljava/io/File;)V` @kind static;
  #L3233a4.  return @kind void;
}
procedure `com.bumptech.glide.m.c` `u0`(`com.bumptech.glide.m.f` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/bumptech/glide/m/f;.u0:(Ljava/lang/String;)Lcom/bumptech/glide/m/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L322cc8.  v0:= -1L;
  #L322ccc.  call temp:= `A0`(v2, v3, v0) @signature `Lcom/bumptech/glide/m/f;.A0:(Ljava/lang/String;J)Lcom/bumptech/glide/m/c;` @kind direct;
  #L322cd2.  v3:= temp @kind object;
  #L322cd4.  return v3 @kind object;
}
