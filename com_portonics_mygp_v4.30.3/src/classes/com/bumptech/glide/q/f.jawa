record `com.bumptech.glide.q.f` @kind class @AccessFlag  {
  `java.lang.Class` `com.bumptech.glide.q.f.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.q.f.b` @AccessFlag FINAL;
  `com.bumptech.glide.load.i` `com.bumptech.glide.q.f.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.q.f` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.i` v3 @kind object) @signature `Lcom/bumptech/glide/q/f;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/i;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L33c9e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33c9ea.  v0.`com.bumptech.glide.q.f.a` @type ^`java.lang.Class` := v1 @kind object;
  #L33c9ee.  v0.`com.bumptech.glide.q.f.b` @type ^`java.lang.Class` := v2 @kind object;
  #L33c9f2.  v0.`com.bumptech.glide.q.f.c` @type ^`com.bumptech.glide.load.i` := v3 @kind object;
  #L33c9f6.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.q.f` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/q/f;.a:(Ljava/lang/Class;Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33c9ac.  v0:= v1.`com.bumptech.glide.q.f.a` @type ^`java.lang.Class` @kind object;
  #L33c9b0.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L33c9b6.  v2:= temp;
  #L33c9b8.  if v2 == 0 then goto L33c9d0;
  #L33c9bc.  v2:= v1.`com.bumptech.glide.q.f.b` @type ^`java.lang.Class` @kind object;
  #L33c9c0.  call temp:= `isAssignableFrom`(v3, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L33c9c6.  v2:= temp;
  #L33c9c8.  if v2 == 0 then goto L33c9d0;
  #L33c9cc.  v2:= 1I;
  #L33c9ce.  goto L33c9d2;
  #L33c9d0.  v2:= 0I;
  #L33c9d2.  return v2;
}
