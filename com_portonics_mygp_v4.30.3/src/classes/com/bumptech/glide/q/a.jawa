record `com.bumptech.glide.q.a` @kind class @AccessFlag FINAL {
  `java.lang.Class` `com.bumptech.glide.q.a.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.a` `com.bumptech.glide.q.a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.q.a` v0 @kind this, `java.lang.Class` v1 @kind object, `com.bumptech.glide.load.a` v2 @kind object) @signature `Lcom/bumptech/glide/q/a;.<init>:(Ljava/lang/Class;Lcom/bumptech/glide/load/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L33c5b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33c5be.  v0.`com.bumptech.glide.q.a.a` @type ^`java.lang.Class` := v1 @kind object;
  #L33c5c2.  v0.`com.bumptech.glide.q.a.b` @type ^`com.bumptech.glide.load.a` := v2 @kind object;
  #L33c5c6.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.q.a` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/q/a;.a:(Ljava/lang/Class;)Z` @AccessFlag  {
    temp;
    v0;

  #L33c598.  v0:= v1.`com.bumptech.glide.q.a.a` @type ^`java.lang.Class` @kind object;
  #L33c59c.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L33c5a2.  v2:= temp;
  #L33c5a4.  return v2;
}
