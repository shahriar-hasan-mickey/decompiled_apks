record `com.bumptech.glide.q.c` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `com.bumptech.glide.q.c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.q.c` v1 @kind this) @signature `Lcom/bumptech/glide/q/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L33c6d0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33c6d6.  v0:= new `java.util.ArrayList`;
  #L33c6da.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L33c6e0.  v1.`com.bumptech.glide.q.c.a` @type ^`java.util.List` := v0 @kind object;
  #L33c6e4.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.q.c` v1 @kind this, `com.bumptech.glide.load.ImageHeaderParser` v2 @kind object) @signature `Lcom/bumptech/glide/q/c;.a:(Lcom/bumptech/glide/load/ImageHeaderParser;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33c6f8.  @monitorenter v1
  #L33c6fa.  v0:= v1.`com.bumptech.glide.q.c.a` @type ^`java.util.List` @kind object;
  #L33c6fe.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L33c704.  @monitorexit v1
  #L33c706.  return @kind void;
  #L33c708.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33c70a.  @monitorexit v1
  #L33c70c.  throw v2;
  catch `java.lang.Throwable` @[L33c6fa..L33c704] goto L33c708;
}
procedure `java.util.List` `b`(`com.bumptech.glide.q.c` v1 @kind this) @signature `Lcom/bumptech/glide/q/c;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33c6a4.  @monitorenter v1
  #L33c6a6.  v0:= v1.`com.bumptech.glide.q.c.a` @type ^`java.util.List` @kind object;
  #L33c6aa.  @monitorexit v1
  #L33c6ac.  return v0 @kind object;
  #L33c6ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33c6b0.  @monitorexit v1
  #L33c6b2.  throw v0;
  catch `java.lang.Throwable` @[L33c6a6..L33c6aa] goto L33c6ae;
}
