record `com.bumptech.glide.q.d` @kind class @AccessFlag PUBLIC {
  `androidx.collection.a` `com.bumptech.glide.q.d.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `com.bumptech.glide.q.d.c` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.engine.r0` `@@com.bumptech.glide.q.d.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/q/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L33c7dc.  v6:= new `com.bumptech.glide.load.engine.r0`;
  #L33c7e0.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L33c7e4.  v2:= constclass @type ^`java.lang.Object` @kind object;
  #L33c7e8.  v3:= constclass @type ^`java.lang.Object` @kind object;
  #L33c7ec.  v0:= new `com.bumptech.glide.load.engine.s`;
  #L33c7f0.  v8:= constclass @type ^`java.lang.Object` @kind object;
  #L33c7f4.  v9:= constclass @type ^`java.lang.Object` @kind object;
  #L33c7f8.  v10:= constclass @type ^`java.lang.Object` @kind object;
  #L33c7fc.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L33c802.  v11:= temp @kind object;
  #L33c804.  v12:= new `com.bumptech.glide.load.n.g.h`;
  #L33c808.  call `<init>`(v12) @signature `Lcom/bumptech/glide/load/n/g/h;.<init>:()V` @kind direct;
  #L33c80e.  v13:= 0I;
  #L33c810.  v7:= v0 @kind object;
  #L33c812.  call `<init>`(v7, v8, v9, v10, v11, v12, v13) @signature `Lcom/bumptech/glide/load/engine/s;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Lcom/bumptech/glide/load/n/g/e;Landroidx/core/util/e;)V` @kind direct;
  #L33c818.  call temp:= `singletonList`(v0) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L33c81e.  v4:= temp @kind object;
  #L33c820.  v5:= 0I;
  #L33c822.  v0:= v6 @kind object;
  #L33c824.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/r0;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Landroidx/core/util/e;)V` @kind direct;
  #L33c82a.  `@@com.bumptech.glide.q.d.a` @type ^`com.bumptech.glide.load.engine.r0` := v6 @kind object;
  #L33c82e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.q.d` v1 @kind this) @signature `Lcom/bumptech/glide/q/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L33c840.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33c846.  v0:= new `androidx.collection.a`;
  #L33c84a.  call `<init>`(v0) @signature `Landroidx/collection/a;.<init>:()V` @kind direct;
  #L33c850.  v1.`com.bumptech.glide.q.d.b` @type ^`androidx.collection.a` := v0 @kind object;
  #L33c854.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L33c858.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L33c85e.  v1.`com.bumptech.glide.q.d.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L33c862.  return @kind void;
}
procedure `com.bumptech.glide.s.m` `b`(`com.bumptech.glide.q.d` v2 @kind this, `java.lang.Class` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/q/d;.b:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/s/m;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33c7a4.  v0:= v2.`com.bumptech.glide.q.d.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L33c7a8.  v1:= 0I;
  #L33c7aa.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L33c7b0.  v0:= temp @kind object;
  #L33c7b2.  v0:= (`com.bumptech.glide.s.m`) v0 @kind object;
  #L33c7b6.  if v0 != 0 then goto L33c7c4;
  #L33c7ba.  v0:= new `com.bumptech.glide.s.m`;
  #L33c7be.  call `<init>`(v0) @signature `Lcom/bumptech/glide/s/m;.<init>:()V` @kind direct;
  #L33c7c4.  call `a`(v0, v3, v4, v5) @signature `Lcom/bumptech/glide/s/m;.a:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V` @kind virtual;
  #L33c7ca.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.r0` `a`(`com.bumptech.glide.q.d` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/q/d;.a:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/r0;` @AccessFlag PUBLIC {
    temp;

  #L33c74c.  call temp:= `b`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/q/d;.b:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/s/m;` @kind direct;
  #L33c752.  v1:= temp @kind object;
  #L33c754.  v2:= v0.`com.bumptech.glide.q.d.b` @type ^`androidx.collection.a` @kind object;
  #L33c758.  @monitorenter v2
  #L33c75a.  v3:= v0.`com.bumptech.glide.q.d.b` @type ^`androidx.collection.a` @kind object;
  #L33c75e.  call temp:= `get`(v3, v1) @signature `Landroidx/collection/g;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L33c764.  v3:= temp @kind object;
  #L33c766.  v3:= (`com.bumptech.glide.load.engine.r0`) v3 @kind object;
  #L33c76a.  @monitorexit v2
  #L33c76c.  v2:= v0.`com.bumptech.glide.q.d.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L33c770.  call `set`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L33c776.  return v3 @kind object;
  #L33c778.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33c77a.  @monitorexit v2
  #L33c77c.  throw v1;
  catch `java.lang.Throwable` @[L33c75a..L33c76c] goto L33c778;
  catch `java.lang.Throwable` @[L33c77a..L33c77c] goto L33c778;
}
procedure `boolean` `c`(`com.bumptech.glide.q.d` v1 @kind this, `com.bumptech.glide.load.engine.r0` v2 @kind object) @signature `Lcom/bumptech/glide/q/d;.c:(Lcom/bumptech/glide/load/engine/r0;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33c72c.  v0:= `@@com.bumptech.glide.q.d.a` @type ^`com.bumptech.glide.load.engine.r0` @kind object;
  #L33c730.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33c736.  v2:= temp;
  #L33c738.  return v2;
}
procedure `void` `d`(`com.bumptech.glide.q.d` v3 @kind this, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Class` v6 @kind object, `com.bumptech.glide.load.engine.r0` v7 @kind object) @signature `Lcom/bumptech/glide/q/d;.d:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/engine/r0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L33c874.  v0:= v3.`com.bumptech.glide.q.d.b` @type ^`androidx.collection.a` @kind object;
  #L33c878.  @monitorenter v0
  #L33c87a.  v1:= v3.`com.bumptech.glide.q.d.b` @type ^`androidx.collection.a` @kind object;
  #L33c87e.  v2:= new `com.bumptech.glide.s.m`;
  #L33c882.  call `<init>`(v2, v4, v5, v6) @signature `Lcom/bumptech/glide/s/m;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L33c888.  if v7 == 0 then goto L33c88e;
  #L33c88c.  goto L33c892;
  #L33c88e.  v7:= `@@com.bumptech.glide.q.d.a` @type ^`com.bumptech.glide.load.engine.r0` @kind object;
  #L33c892.  call temp:= `put`(v1, v2, v7) @signature `Landroidx/collection/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L33c898.  @monitorexit v0
  #L33c89a.  return @kind void;
  #L33c89c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33c89e.  @monitorexit v0
  #L33c8a0.  throw v4;
  catch `java.lang.Throwable` @[L33c87a..L33c8a0] goto L33c89c;
}
