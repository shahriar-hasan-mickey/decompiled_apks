record `com.bumptech.glide.r.c` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.c` @kind interface {
  `java.lang.Object` `com.bumptech.glide.r.c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.r.c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/r/c;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3410fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L341102.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/s/n;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L341108.  v1:= temp @kind object;
  #L34110a.  v0.`com.bumptech.glide.r.c.b` @type ^`java.lang.Object` := v1 @kind object;
  #L34110e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.r.c` v2 @kind this, `java.security.MessageDigest` v3 @kind object) @signature `Lcom/bumptech/glide/r/c;.a:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L341120.  v0:= v2.`com.bumptech.glide.r.c.b` @type ^`java.lang.Object` @kind object;
  #L341124.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L34112a.  v0:= temp @kind object;
  #L34112c.  v1:= `@@com.bumptech.glide.load.c.a` @type ^`java.nio.charset.Charset` @kind object;
  #L341130.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L341136.  v0:= temp @kind object;
  #L341138.  call `update`(v3, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L34113e.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.r.c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/r/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L341064.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.r.c` @kind boolean;
  #L341068.  if v0 == 0 then goto L341082;
  #L34106c.  v2:= (`com.bumptech.glide.r.c`) v2 @kind object;
  #L341070.  v0:= v1.`com.bumptech.glide.r.c.b` @type ^`java.lang.Object` @kind object;
  #L341074.  v2:= v2.`com.bumptech.glide.r.c.b` @type ^`java.lang.Object` @kind object;
  #L341078.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L34107e.  v2:= temp;
  #L341080.  return v2;
  #L341082.  v2:= 0I;
  #L341084.  return v2;
}
procedure `int` `hashCode`(`com.bumptech.glide.r.c` v1 @kind this) @signature `Lcom/bumptech/glide/r/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L341098.  v0:= v1.`com.bumptech.glide.r.c.b` @type ^`java.lang.Object` @kind object;
  #L34109c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3410a2.  v0:= temp;
  #L3410a4.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.r.c` v2 @kind this) @signature `Lcom/bumptech/glide/r/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3410b8.  v0:= new `java.lang.StringBuilder`;
  #L3410bc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3410c2.  v1:= "ObjectKey{object=" @kind object;
  #L3410c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3410cc.  v1:= v2.`com.bumptech.glide.r.c.b` @type ^`java.lang.Object` @kind object;
  #L3410d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3410d6.  v1:= 125I;
  #L3410da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3410e0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3410e6.  v0:= temp @kind object;
  #L3410e8.  return v0 @kind object;
}
