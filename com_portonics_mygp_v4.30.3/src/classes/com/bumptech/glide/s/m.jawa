record `com.bumptech.glide.s.m` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `com.bumptech.glide.s.m.a` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.s.m.b` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.s.m.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.s.m` v0 @kind this) @signature `Lcom/bumptech/glide/s/m;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3421b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3421ba.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.s.m` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/s/m;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3421cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3421d2.  call `a`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/s/m;.a:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V` @kind virtual;
  #L3421d8.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.s.m` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/s/m;.a:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;

  #L3421ec.  v0.`com.bumptech.glide.s.m.a` @type ^`java.lang.Class` := v1 @kind object;
  #L3421f0.  v0.`com.bumptech.glide.s.m.b` @type ^`java.lang.Class` := v2 @kind object;
  #L3421f4.  v0.`com.bumptech.glide.s.m.c` @type ^`java.lang.Class` := v3 @kind object;
  #L3421f8.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.s.m` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/bumptech/glide/s/m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L342094.  v0:= 1I;
  #L342096.  if v4 != v5 then goto L34209c;
  #L34209a.  return v0;
  #L34209c.  v1:= 0I;
  #L34209e.  if v5 == 0 then goto L3420fc;
  #L3420a2.  v2:= constclass @type ^`com.bumptech.glide.s.m` @kind object;
  #L3420a6.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3420ac.  v3:= temp @kind object;
  #L3420ae.  if v2 == v3 then goto L3420b4;
  #L3420b2.  goto L3420fc;
  #L3420b4.  v5:= (`com.bumptech.glide.s.m`) v5 @kind object;
  #L3420b8.  v2:= v4.`com.bumptech.glide.s.m.a` @type ^`java.lang.Class` @kind object;
  #L3420bc.  v3:= v5.`com.bumptech.glide.s.m.a` @type ^`java.lang.Class` @kind object;
  #L3420c0.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3420c6.  v2:= temp;
  #L3420c8.  if v2 != 0 then goto L3420ce;
  #L3420cc.  return v1;
  #L3420ce.  v2:= v4.`com.bumptech.glide.s.m.b` @type ^`java.lang.Class` @kind object;
  #L3420d2.  v3:= v5.`com.bumptech.glide.s.m.b` @type ^`java.lang.Class` @kind object;
  #L3420d6.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3420dc.  v2:= temp;
  #L3420de.  if v2 != 0 then goto L3420e4;
  #L3420e2.  return v1;
  #L3420e4.  v2:= v4.`com.bumptech.glide.s.m.c` @type ^`java.lang.Class` @kind object;
  #L3420e8.  v5:= v5.`com.bumptech.glide.s.m.c` @type ^`java.lang.Class` @kind object;
  #L3420ec.  call temp:= `d`(v2, v5) @signature `Lcom/bumptech/glide/s/p;.d:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3420f2.  v5:= temp;
  #L3420f4.  if v5 != 0 then goto L3420fa;
  #L3420f8.  return v1;
  #L3420fa.  return v0;
  #L3420fc.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.s.m` v2 @kind this) @signature `Lcom/bumptech/glide/s/m;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L342110.  v0:= v2.`com.bumptech.glide.s.m.a` @type ^`java.lang.Class` @kind object;
  #L342114.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L34211a.  v0:= temp;
  #L34211c.  v0:= v0 * 31;
  #L342120.  v1:= v2.`com.bumptech.glide.s.m.b` @type ^`java.lang.Class` @kind object;
  #L342124.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L34212a.  v1:= temp;
  #L34212c.  v0:= v0 + v1 @kind int;
  #L34212e.  v0:= v0 * 31;
  #L342132.  v1:= v2.`com.bumptech.glide.s.m.c` @type ^`java.lang.Class` @kind object;
  #L342136.  if v1 == 0 then goto L342144;
  #L34213a.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L342140.  v1:= temp;
  #L342142.  goto L342146;
  #L342144.  v1:= 0I;
  #L342146.  v0:= v0 + v1 @kind int;
  #L342148.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.s.m` v2 @kind this) @signature `Lcom/bumptech/glide/s/m;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L34215c.  v0:= new `java.lang.StringBuilder`;
  #L342160.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L342166.  v1:= "MultiClassKey{first=" @kind object;
  #L34216a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L342170.  v1:= v2.`com.bumptech.glide.s.m.a` @type ^`java.lang.Class` @kind object;
  #L342174.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34217a.  v1:= ", second=" @kind object;
  #L34217e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L342184.  v1:= v2.`com.bumptech.glide.s.m.b` @type ^`java.lang.Class` @kind object;
  #L342188.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34218e.  v1:= 125I;
  #L342192.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L342198.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34219e.  v0:= temp @kind object;
  #L3421a0.  return v0 @kind object;
}
