record `com.bumptech.glide.s.q.l` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`com.bumptech.glide.s.q.l` v0 @kind this) @signature `Lcom/bumptech/glide/s/q/l;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L342b9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L342ba2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.s.q.l` v0 @kind this, `com.bumptech.glide.s.q.j` v1 @kind object) @signature `Lcom/bumptech/glide/s/q/l;.<init>:(Lcom/bumptech/glide/s/q/j;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L342bb4.  call `<init>`(v0) @signature `Lcom/bumptech/glide/s/q/l;.<init>:()V` @kind direct;
  #L342bba.  return @kind void;
}
procedure `com.bumptech.glide.s.q.l` `a`() @signature `Lcom/bumptech/glide/s/q/l;.a:()Lcom/bumptech/glide/s/q/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L342b80.  v0:= new `com.bumptech.glide.s.q.k`;
  #L342b84.  call `<init>`(v0) @signature `Lcom/bumptech/glide/s/q/k;.<init>:()V` @kind direct;
  #L342b8a.  return v0 @kind object;
}
procedure `void` `b`(`boolean` v0 ) @signature `Lcom/bumptech/glide/s/q/l;.b:(Z)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `c`() @signature `Lcom/bumptech/glide/s/q/l;.c:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
