record `com.bumptech.glide.s.j` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `double` `@@com.bumptech.glide.s.j.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/s/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L341c14.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L341c18.  v1:= 1.0D;
  #L341c1c.  v3:= 17I;
  #L341c20.  if v0 < v3 then goto L341c36;
  #L341c24.  v3:= 10.0D;
  #L341c28.  v5:= 6.0D;
  #L341c2c.  call temp:= `pow`(v3, v5) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L341c32.  v3:= temp @kind wide;
  #L341c34.  v1:= v1 / v3 @kind double;
  #L341c36.  `@@com.bumptech.glide.s.j.a` @type ^`double` := v1 @kind wide;
  #L341c3a.  return @kind void;
}
procedure `double` `a`(`long` v2 ) @signature `Lcom/bumptech/glide/s/j;.a:(J)D` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L341bb8.  call temp:= `b`() @signature `Lcom/bumptech/glide/s/j;.b:()J` @kind static;
  #L341bbe.  v0:= temp @kind wide;
  #L341bc0.  v0:= v0 - v2 @kind long;
  #L341bc2.  v2:= (`double`) v0 @kind l2d;
  #L341bc4.  v0:= `@@com.bumptech.glide.s.j.a` @type ^`double` @kind wide;
  #L341bc8.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L341bce.  v2:= v2 * v0 @kind double;
  #L341bd2.  return v2 @kind wide;
}
procedure `long` `b`() @signature `Lcom/bumptech/glide/s/j;.b:()J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L341be4.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L341be8.  v1:= 17I;
  #L341bec.  if v0 < v1 then goto L341bfa;
  #L341bf0.  call temp:= `elapsedRealtimeNanos`() @signature `Landroid/os/SystemClock;.elapsedRealtimeNanos:()J` @kind static;
  #L341bf6.  v0:= temp @kind wide;
  #L341bf8.  return v0 @kind wide;
  #L341bfa.  call temp:= `uptimeMillis`() @signature `Landroid/os/SystemClock;.uptimeMillis:()J` @kind static;
  #L341c00.  v0:= temp @kind wide;
  #L341c02.  return v0 @kind wide;
}
