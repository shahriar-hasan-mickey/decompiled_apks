record `com.bumptech.glide.s.f` @kind class @AccessFlag PUBLIC extends `java.io.InputStream` @kind class {
  `java.io.InputStream` `com.bumptech.glide.s.f.c` @AccessFlag PRIVATE;
  `java.io.IOException` `com.bumptech.glide.s.f.d` @AccessFlag PRIVATE;
}
global `java.util.Queue` `@@com.bumptech.glide.s.f.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/s/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3419e4.  v0:= 0I;
  #L3419e6.  call temp:= `f`(v0) @signature `Lcom/bumptech/glide/s/p;.f:(I)Ljava/util/Queue;` @kind static;
  #L3419ec.  v0:= temp @kind object;
  #L3419ee.  `@@com.bumptech.glide.s.f.b` @type ^`java.util.Queue` := v0 @kind object;
  #L3419f2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.s.f` v0 @kind this) @signature `Lcom/bumptech/glide/s/f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L341a04.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L341a0a.  return @kind void;
}
procedure `com.bumptech.glide.s.f` `c`(`java.io.InputStream` v2 @kind object) @signature `Lcom/bumptech/glide/s/f;.c:(Ljava/io/InputStream;)Lcom/bumptech/glide/s/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L341874.  v0:= `@@com.bumptech.glide.s.f.b` @type ^`java.util.Queue` @kind object;
  #L341878.  @monitorenter v0
  #L34187a.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L341880.  v1:= temp @kind object;
  #L341882.  v1:= (`com.bumptech.glide.s.f`) v1 @kind object;
  #L341886.  @monitorexit v0
  #L341888.  if v1 != 0 then goto L341896;
  #L34188c.  v1:= new `com.bumptech.glide.s.f`;
  #L341890.  call `<init>`(v1) @signature `Lcom/bumptech/glide/s/f;.<init>:()V` @kind direct;
  #L341896.  call `k`(v1, v2) @signature `Lcom/bumptech/glide/s/f;.k:(Ljava/io/InputStream;)V` @kind virtual;
  #L34189c.  return v1 @kind object;
  #L34189e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3418a0.  @monitorexit v0
  #L3418a2.  throw v2;
  catch `java.lang.Throwable` @[L34187a..L341888] goto L34189e;
  catch `java.lang.Throwable` @[L3418a0..L3418a2] goto L34189e;
}
procedure `java.io.IOException` `a`(`com.bumptech.glide.s.f` v1 @kind this) @signature `Lcom/bumptech/glide/s/f;.a:()Ljava/io/IOException;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L341990.  v0:= v1.`com.bumptech.glide.s.f.d` @type ^`java.io.IOException` @kind object;
  #L341994.  return v0 @kind object;
}
procedure `int` `available`(`com.bumptech.glide.s.f` v1 @kind this) @signature `Lcom/bumptech/glide/s/f;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3418c8.  v0:= v1.`com.bumptech.glide.s.f.c` @type ^`java.io.InputStream` @kind object;
  #L3418cc.  call temp:= `available`(v0) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L3418d2.  v0:= temp;
  #L3418d4.  return v0;
}
procedure `void` `close`(`com.bumptech.glide.s.f` v1 @kind this) @signature `Lcom/bumptech/glide/s/f;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L341a1c.  v0:= v1.`com.bumptech.glide.s.f.c` @type ^`java.io.InputStream` @kind object;
  #L341a20.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L341a26.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.s.f` v2 @kind this) @signature `Lcom/bumptech/glide/s/f;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L341a54.  v0:= 0I;
  #L341a56.  v2.`com.bumptech.glide.s.f.d` @type ^`java.io.IOException` := v0 @kind object;
  #L341a5a.  v2.`com.bumptech.glide.s.f.c` @type ^`java.io.InputStream` := v0 @kind object;
  #L341a5e.  v0:= `@@com.bumptech.glide.s.f.b` @type ^`java.util.Queue` @kind object;
  #L341a62.  @monitorenter v0
  #L341a64.  call temp:= `offer`(v0, v2) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L341a6a.  @monitorexit v0
  #L341a6c.  return @kind void;
  #L341a6e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L341a70.  @monitorexit v0
  #L341a72.  throw v1;
  catch `java.lang.Throwable` @[L341a64..L341a72] goto L341a6e;
}
procedure `void` `k`(`com.bumptech.glide.s.f` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/bumptech/glide/s/f;.k:(Ljava/io/InputStream;)V` @AccessFlag  {
    temp;

  #L341ac4.  v0.`com.bumptech.glide.s.f.c` @type ^`java.io.InputStream` := v1 @kind object;
  #L341ac8.  return @kind void;
}
procedure `void` `mark`(`com.bumptech.glide.s.f` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/s/f;.mark:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L341a38.  v0:= v1.`com.bumptech.glide.s.f.c` @type ^`java.io.InputStream` @kind object;
  #L341a3c.  call `mark`(v0, v2) @signature `Ljava/io/InputStream;.mark:(I)V` @kind virtual;
  #L341a42.  return @kind void;
}
procedure `boolean` `markSupported`(`com.bumptech.glide.s.f` v1 @kind this) @signature `Lcom/bumptech/glide/s/f;.markSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L341854.  v0:= v1.`com.bumptech.glide.s.f.c` @type ^`java.io.InputStream` @kind object;
  #L341858.  call temp:= `markSupported`(v0) @signature `Ljava/io/InputStream;.markSupported:()Z` @kind virtual;
  #L34185e.  v0:= temp;
  #L341860.  return v0;
}
procedure `int` `read`(`com.bumptech.glide.s.f` v1 @kind this) @signature `Lcom/bumptech/glide/s/f;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3418e8.  v0:= v1.`com.bumptech.glide.s.f.c` @type ^`java.io.InputStream` @kind object;
  #L3418ec.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L3418f2.  v0:= temp;
  #L3418f4.  goto L3418fe;
  #L3418f6.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3418f8.  v1.`com.bumptech.glide.s.f.d` @type ^`java.io.IOException` := v0 @kind object;
  #L3418fc.  v0:= -1I;
  #L3418fe.  return v0;
  catch `java.io.IOException` @[L3418e8..L3418f4] goto L3418f6;
}
procedure `int` `read`(`com.bumptech.glide.s.f` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/bumptech/glide/s/f;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L341920.  v0:= v1.`com.bumptech.glide.s.f.c` @type ^`java.io.InputStream` @kind object;
  #L341924.  call temp:= `read`(v0, v2) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L34192a.  v2:= temp;
  #L34192c.  goto L341936;
  #L34192e.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L341930.  v1.`com.bumptech.glide.s.f.d` @type ^`java.io.IOException` := v2 @kind object;
  #L341934.  v2:= -1I;
  #L341936.  return v2;
  catch `java.io.IOException` @[L341920..L34192c] goto L34192e;
}
procedure `int` `read`(`com.bumptech.glide.s.f` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/s/f;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L341958.  v0:= v1.`com.bumptech.glide.s.f.c` @type ^`java.io.InputStream` @kind object;
  #L34195c.  call temp:= `read`(v0, v2, v3, v4) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L341962.  v2:= temp;
  #L341964.  goto L34196e;
  #L341966.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L341968.  v1.`com.bumptech.glide.s.f.d` @type ^`java.io.IOException` := v2 @kind object;
  #L34196c.  v2:= -1I;
  #L34196e.  return v2;
  catch `java.io.IOException` @[L341958..L341964] goto L341966;
}
procedure `void` `reset`(`com.bumptech.glide.s.f` v1 @kind this) @signature `Lcom/bumptech/glide/s/f;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L341a90.  @monitorenter v1
  #L341a92.  v0:= v1.`com.bumptech.glide.s.f.c` @type ^`java.io.InputStream` @kind object;
  #L341a96.  call `reset`(v0) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L341a9c.  @monitorexit v1
  #L341a9e.  return @kind void;
  #L341aa0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L341aa2.  @monitorexit v1
  #L341aa4.  throw v0;
  catch `java.lang.Throwable` @[L341a92..L341a9c] goto L341aa0;
}
procedure `long` `skip`(`com.bumptech.glide.s.f` v1 @kind this, `long` v2 ) @signature `Lcom/bumptech/glide/s/f;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3419a8.  v0:= v1.`com.bumptech.glide.s.f.c` @type ^`java.io.InputStream` @kind object;
  #L3419ac.  call temp:= `skip`(v0, v2) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L3419b2.  v2:= temp @kind wide;
  #L3419b4.  goto L3419c0;
  #L3419b6.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L3419b8.  v1.`com.bumptech.glide.s.f.d` @type ^`java.io.IOException` := v2 @kind object;
  #L3419bc.  v2:= 0L;
  #L3419c0.  return v2 @kind wide;
  catch `java.io.IOException` @[L3419a8..L3419b4] goto L3419b6;
}
