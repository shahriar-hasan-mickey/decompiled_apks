record `com.bumptech.glide.s.i` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `java.util.concurrent.Executor` `@@com.bumptech.glide.s.i.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.Executor` `@@com.bumptech.glide.s.i.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/s/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L341b88.  v0:= new `com.bumptech.glide.s.g`;
  #L341b8c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/s/g;.<init>:()V` @kind direct;
  #L341b92.  `@@com.bumptech.glide.s.i.a` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L341b96.  v0:= new `com.bumptech.glide.s.h`;
  #L341b9a.  call `<init>`(v0) @signature `Lcom/bumptech/glide/s/h;.<init>:()V` @kind direct;
  #L341ba0.  `@@com.bumptech.glide.s.i.b` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L341ba4.  return @kind void;
}
procedure `java.util.concurrent.Executor` `a`() @signature `Lcom/bumptech/glide/s/i;.a:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L341b58.  v0:= `@@com.bumptech.glide.s.i.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L341b5c.  return v0 @kind object;
}
procedure `java.util.concurrent.Executor` `b`() @signature `Lcom/bumptech/glide/s/i;.b:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L341b70.  v0:= `@@com.bumptech.glide.s.i.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L341b74.  return v0 @kind object;
}
