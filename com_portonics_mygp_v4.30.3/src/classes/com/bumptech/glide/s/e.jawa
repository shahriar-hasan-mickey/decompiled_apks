record `com.bumptech.glide.s.e` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.FilterInputStream` @kind class {
  `long` `com.bumptech.glide.s.e.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.s.e.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.s.e` v0 @kind this, `java.io.InputStream` v1 @kind object, `long` v2 ) @signature `Lcom/bumptech/glide/s/e;.<init>:(Ljava/io/InputStream;J)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L341838.  call `<init>`(v0, v1) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L34183e.  v0.`com.bumptech.glide.s.e.b` @type ^`long` := v2 @kind wide;
  #L341842.  return @kind void;
}
procedure `int` `a`(`com.bumptech.glide.s.e` v5 @kind this, `int` v6 ) @signature `Lcom/bumptech/glide/s/e;.a:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L341704.  if v6 < 0 then goto L341714;
  #L341708.  v0:= v5.`com.bumptech.glide.s.e.c` @type ^`int`;
  #L34170c.  v0:= v0 + v6 @kind int;
  #L34170e.  v5.`com.bumptech.glide.s.e.c` @type ^`int` := v0;
  #L341712.  goto L34172c;
  #L341714.  v0:= v5.`com.bumptech.glide.s.e.b` @type ^`long` @kind wide;
  #L341718.  v2:= v5.`com.bumptech.glide.s.e.c` @type ^`int`;
  #L34171c.  v2:= (`long`) v2 @kind i2l;
  #L34171e.  v0:= v0 - v2 @kind long;
  #L341720.  v2:= 0L;
  #L341724.  v4:= lcmp(v0, v2);
  #L341728.  if v4 > 0 then goto L34172e;
  #L34172c.  return v6;
  #L34172e.  v6:= new `java.io.IOException`;
  #L341732.  v0:= new `java.lang.StringBuilder`;
  #L341736.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L34173c.  v1:= "Failed to read all expected data, expected: " @kind object;
  #L341740.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L341746.  v1:= v5.`com.bumptech.glide.s.e.b` @type ^`long` @kind wide;
  #L34174a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L341750.  v1:= ", but read: " @kind object;
  #L341754.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34175a.  v1:= v5.`com.bumptech.glide.s.e.c` @type ^`int`;
  #L34175e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L341764.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34176a.  v0:= temp @kind object;
  #L34176c.  call `<init>`(v6, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L341772.  throw v6;
}
procedure `java.io.InputStream` `c`(`java.io.InputStream` v1 @kind object, `long` v2 ) @signature `Lcom/bumptech/glide/s/e;.c:(Ljava/io/InputStream;J)Ljava/io/InputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L34181c.  v0:= new `com.bumptech.glide.s.e`;
  #L341820.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/s/e;.<init>:(Ljava/io/InputStream;J)V` @kind direct;
  #L341826.  return v0 @kind object;
}
procedure `int` `available`(`com.bumptech.glide.s.e` v4 @kind this) @signature `Lcom/bumptech/glide/s/e;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3416b8.  @monitorenter v4
  #L3416ba.  v0:= v4.`com.bumptech.glide.s.e.b` @type ^`long` @kind wide;
  #L3416be.  v2:= v4.`com.bumptech.glide.s.e.c` @type ^`int`;
  #L3416c2.  v2:= (`long`) v2 @kind i2l;
  #L3416c4.  v0:= v0 - v2 @kind long;
  #L3416c6.  v2:= v4.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L3416ca.  call temp:= `available`(v2) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L3416d0.  v2:= temp;
  #L3416d2.  v2:= (`long`) v2 @kind i2l;
  #L3416d4.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3416da.  v0:= temp @kind wide;
  #L3416dc.  v1:= (`int`) v0 @kind l2i;
  #L3416de.  @monitorexit v4
  #L3416e0.  return v1;
  #L3416e2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3416e4.  @monitorexit v4
  #L3416e6.  throw v0;
  catch `java.lang.Throwable` @[L3416ba..L3416dc] goto L3416e2;
}
procedure `int` `read`(`com.bumptech.glide.s.e` v2 @kind this) @signature `Lcom/bumptech/glide/s/e;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L341784.  @monitorenter v2
  #L341786.  call temp:= `read`(v2) @signature `Ljava/io/FilterInputStream;.read:()I` @kind super;
  #L34178c.  v0:= temp;
  #L34178e.  if v0 < 0 then goto L341796;
  #L341792.  v1:= 1I;
  #L341794.  goto L341798;
  #L341796.  v1:= -1I;
  #L341798.  call temp:= `a`(v2, v1) @signature `Lcom/bumptech/glide/s/e;.a:(I)I` @kind direct;
  #L34179e.  @monitorexit v2
  #L3417a0.  return v0;
  #L3417a2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3417a4.  @monitorexit v2
  #L3417a6.  throw v0;
  catch `java.lang.Throwable` @[L341786..L34179e] goto L3417a2;
}
procedure `int` `read`(`com.bumptech.glide.s.e` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/bumptech/glide/s/e;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3417c4.  v0:= length @variable v3;
  #L3417c6.  v1:= 0I;
  #L3417c8.  call temp:= `read`(v2, v3, v1, v0) @signature `Lcom/bumptech/glide/s/e;.read:([BII)I` @kind virtual;
  #L3417ce.  v3:= temp;
  #L3417d0.  return v3;
}
procedure `int` `read`(`com.bumptech.glide.s.e` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/s/e;.read:([BII)I` @AccessFlag PUBLIC {
    temp;

  #L3417e4.  @monitorenter v0
  #L3417e6.  call temp:= `read`(v0, v1, v2, v3) @signature `Ljava/io/FilterInputStream;.read:([BII)I` @kind super;
  #L3417ec.  v1:= temp;
  #L3417ee.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/s/e;.a:(I)I` @kind direct;
  #L3417f4.  v1:= temp;
  #L3417f6.  @monitorexit v0
  #L3417f8.  return v1;
  #L3417fa.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3417fc.  @monitorexit v0
  #L3417fe.  throw v1;
  catch `java.lang.Throwable` @[L3417e6..L3417f6] goto L3417fa;
}
