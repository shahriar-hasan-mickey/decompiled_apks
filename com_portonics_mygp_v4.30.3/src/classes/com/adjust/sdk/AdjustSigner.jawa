record `com.adjust.sdk.AdjustSigner` @kind class @AccessFlag PUBLIC {
}
global `java.lang.Object` `@@com.adjust.sdk.AdjustSigner.signerInstance` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<init>`(`com.adjust.sdk.AdjustSigner` v0 @kind this) @signature `Lcom/adjust/sdk/AdjustSigner;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2db07c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2db082.  return @kind void;
}
procedure `void` `disableSigning`(`com.adjust.sdk.ILogger` v5 @kind object) @signature `Lcom/adjust/sdk/AdjustSigner;.disableSigning:(Lcom/adjust/sdk/ILogger;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2db094.  call `getSignerInstance`() @signature `Lcom/adjust/sdk/AdjustSigner;.getSignerInstance:()V` @kind static;
  #L2db09a.  v0:= `@@com.adjust.sdk.AdjustSigner.signerInstance` @type ^`java.lang.Object` @kind object;
  #L2db09e.  if v0 != 0 then goto L2db0a4;
  #L2db0a2.  return @kind void;
  #L2db0a4.  v0:= 0I;
  #L2db0a6.  v1:= `@@com.adjust.sdk.AdjustSigner.signerInstance` @type ^`java.lang.Object` @kind object;
  #L2db0aa.  v2:= "disableSigning" @kind object;
  #L2db0ae.  v3:= 0I;
  #L2db0b0.  v4:= new `java.lang.Object`[v0];
  #L2db0b4.  call temp:= `invokeInstanceMethod`(v1, v2, v3, v4) @signature `Lcom/adjust/sdk/Reflection;.invokeInstanceMethod:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2db0ba.  goto L2db0da;
  #L2db0bc.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L2db0be.  v2:= 1I;
  #L2db0c0.  v2:= new `java.lang.Object`[v2];
  #L2db0c4.  call temp:= `getMessage`(v1) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2db0ca.  v1:= temp @kind object;
  #L2db0cc.  v2[v0]:= v1 @kind object;
  #L2db0d0.  v0:= "Invoking Signer disableSigning() received an error [%s]" @kind object;
  #L2db0d4.  call `warn`(v5, v0, v2) @signature `Lcom/adjust/sdk/ILogger;.warn:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L2db0da.  return @kind void;
  catch `java.lang.Exception` @[L2db0a6..L2db0ba] goto L2db0bc;
}
procedure `void` `enableSigning`(`com.adjust.sdk.ILogger` v5 @kind object) @signature `Lcom/adjust/sdk/AdjustSigner;.enableSigning:(Lcom/adjust/sdk/ILogger;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2db0fc.  call `getSignerInstance`() @signature `Lcom/adjust/sdk/AdjustSigner;.getSignerInstance:()V` @kind static;
  #L2db102.  v0:= `@@com.adjust.sdk.AdjustSigner.signerInstance` @type ^`java.lang.Object` @kind object;
  #L2db106.  if v0 != 0 then goto L2db10c;
  #L2db10a.  return @kind void;
  #L2db10c.  v0:= 0I;
  #L2db10e.  v1:= `@@com.adjust.sdk.AdjustSigner.signerInstance` @type ^`java.lang.Object` @kind object;
  #L2db112.  v2:= "enableSigning" @kind object;
  #L2db116.  v3:= 0I;
  #L2db118.  v4:= new `java.lang.Object`[v0];
  #L2db11c.  call temp:= `invokeInstanceMethod`(v1, v2, v3, v4) @signature `Lcom/adjust/sdk/Reflection;.invokeInstanceMethod:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2db122.  goto L2db142;
  #L2db124.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L2db126.  v2:= 1I;
  #L2db128.  v2:= new `java.lang.Object`[v2];
  #L2db12c.  call temp:= `getMessage`(v1) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2db132.  v1:= temp @kind object;
  #L2db134.  v2[v0]:= v1 @kind object;
  #L2db138.  v0:= "Invoking Signer enableSigning() received an error [%s]" @kind object;
  #L2db13c.  call `warn`(v5, v0, v2) @signature `Lcom/adjust/sdk/ILogger;.warn:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L2db142.  return @kind void;
  catch `java.lang.Exception` @[L2db10e..L2db122] goto L2db124;
}
procedure `void` `getSignerInstance`() @signature `Lcom/adjust/sdk/AdjustSigner;.getSignerInstance:()V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2db164.  v0:= `@@com.adjust.sdk.AdjustSigner.signerInstance` @type ^`java.lang.Object` @kind object;
  #L2db168.  if v0 != 0 then goto L2db194;
  #L2db16c.  v0:= constclass @type ^`com.adjust.sdk.AdjustSigner` @kind object;
  #L2db170.  @monitorenter v0
  #L2db172.  v1:= `@@com.adjust.sdk.AdjustSigner.signerInstance` @type ^`java.lang.Object` @kind object;
  #L2db176.  if v1 != 0 then goto L2db18a;
  #L2db17a.  v1:= "com.adjust.sdk.sig.Signer" @kind object;
  #L2db17e.  call temp:= `createDefaultInstance`(v1) @signature `Lcom/adjust/sdk/Reflection;.createDefaultInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2db184.  v1:= temp @kind object;
  #L2db186.  `@@com.adjust.sdk.AdjustSigner.signerInstance` @type ^`java.lang.Object` := v1 @kind object;
  #L2db18a.  @monitorexit v0
  #L2db18c.  goto L2db194;
  #L2db18e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2db190.  @monitorexit v0
  #L2db192.  throw v1;
  #L2db194.  return @kind void;
  catch `java.lang.Throwable` @[L2db172..L2db192] goto L2db18e;
}
procedure `void` `onResume`(`com.adjust.sdk.ILogger` v5 @kind object) @signature `Lcom/adjust/sdk/AdjustSigner;.onResume:(Lcom/adjust/sdk/ILogger;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2db1b4.  call `getSignerInstance`() @signature `Lcom/adjust/sdk/AdjustSigner;.getSignerInstance:()V` @kind static;
  #L2db1ba.  v0:= `@@com.adjust.sdk.AdjustSigner.signerInstance` @type ^`java.lang.Object` @kind object;
  #L2db1be.  if v0 != 0 then goto L2db1c4;
  #L2db1c2.  return @kind void;
  #L2db1c4.  v0:= 0I;
  #L2db1c6.  v1:= `@@com.adjust.sdk.AdjustSigner.signerInstance` @type ^`java.lang.Object` @kind object;
  #L2db1ca.  v2:= "onResume" @kind object;
  #L2db1ce.  v3:= 0I;
  #L2db1d0.  v4:= new `java.lang.Object`[v0];
  #L2db1d4.  call temp:= `invokeInstanceMethod`(v1, v2, v3, v4) @signature `Lcom/adjust/sdk/Reflection;.invokeInstanceMethod:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2db1da.  goto L2db1fa;
  #L2db1dc.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L2db1de.  v2:= 1I;
  #L2db1e0.  v2:= new `java.lang.Object`[v2];
  #L2db1e4.  call temp:= `getMessage`(v1) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2db1ea.  v1:= temp @kind object;
  #L2db1ec.  v2[v0]:= v1 @kind object;
  #L2db1f0.  v0:= "Invoking Signer onResume() received an error [%s]" @kind object;
  #L2db1f4.  call `warn`(v5, v0, v2) @signature `Lcom/adjust/sdk/ILogger;.warn:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L2db1fa.  return @kind void;
  catch `java.lang.Exception` @[L2db1c6..L2db1da] goto L2db1dc;
}
procedure `void` `sign`(`java.util.Map` v9 @kind object, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object, `android.content.Context` v12 @kind object, `com.adjust.sdk.ILogger` v13 @kind object) @signature `Lcom/adjust/sdk/AdjustSigner;.sign:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Landroid/content/Context;Lcom/adjust/sdk/ILogger;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2db21c.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L2db220.  call `getSignerInstance`() @signature `Lcom/adjust/sdk/AdjustSigner;.getSignerInstance:()V` @kind static;
  #L2db226.  v1:= `@@com.adjust.sdk.AdjustSigner.signerInstance` @type ^`java.lang.Object` @kind object;
  #L2db22a.  if v1 != 0 then goto L2db230;
  #L2db22e.  return @kind void;
  #L2db230.  v1:= 1I;
  #L2db232.  v2:= 0I;
  #L2db234.  v3:= 2I;
  #L2db236.  v4:= `@@com.adjust.sdk.AdjustSigner.signerInstance` @type ^`java.lang.Object` @kind object;
  #L2db23a.  v5:= "sign" @kind object;
  #L2db23e.  v6:= 4I;
  #L2db240.  v7:= new `java.lang.Class`[v6];
  #L2db244.  v8:= constclass @type ^`android.content.Context` @kind object;
  #L2db248.  v7[v2]:= v8 @kind object;
  #L2db24c.  v8:= constclass @type ^`java.util.Map` @kind object;
  #L2db250.  v7[v1]:= v8 @kind object;
  #L2db254.  v7[v3]:= v0 @kind object;
  #L2db258.  v8:= 3I;
  #L2db25a.  v7[v8]:= v0 @kind object;
  #L2db25e.  v0:= new `java.lang.Object`[v6];
  #L2db262.  v0[v2]:= v12 @kind object;
  #L2db266.  v0[v1]:= v9 @kind object;
  #L2db26a.  v0[v3]:= v10 @kind object;
  #L2db26e.  v0[v8]:= v11 @kind object;
  #L2db272.  call temp:= `invokeInstanceMethod`(v4, v5, v7, v0) @signature `Lcom/adjust/sdk/Reflection;.invokeInstanceMethod:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2db278.  goto L2db29a;
  #L2db27a.  v9:= Exception @type ^`java.lang.Exception` @kind object;
  #L2db27c.  v11:= new `java.lang.Object`[v3];
  #L2db280.  v11[v2]:= v10 @kind object;
  #L2db284.  call temp:= `getMessage`(v9) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2db28a.  v9:= temp @kind object;
  #L2db28c.  v11[v1]:= v9 @kind object;
  #L2db290.  v9:= "Invoking Signer sign() for %s received an error [%s]" @kind object;
  #L2db294.  call `warn`(v13, v9, v11) @signature `Lcom/adjust/sdk/ILogger;.warn:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L2db29a.  return @kind void;
  catch `java.lang.Exception` @[L2db236..L2db278] goto L2db27a;
}
