record `com.adjust.sdk.Logger` @kind class @AccessFlag PUBLIC extends `com.adjust.sdk.ILogger` @kind interface {
  `boolean` `com.adjust.sdk.Logger.isProductionEnvironment` @AccessFlag PRIVATE;
  `com.adjust.sdk.LogLevel` `com.adjust.sdk.Logger.logLevel` @AccessFlag PRIVATE;
  `boolean` `com.adjust.sdk.Logger.logLevelLocked` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.adjust.sdk.Logger.formatErrorMessage` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`com.adjust.sdk.Logger` v2 @kind this) @signature `Lcom/adjust/sdk/Logger;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2dd8dc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dd8e2.  v0:= 0I;
  #L2dd8e4.  v2.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` := v0 @kind boolean;
  #L2dd8e8.  v2.`com.adjust.sdk.Logger.logLevelLocked` @type ^`boolean` := v0 @kind boolean;
  #L2dd8ec.  v1:= `@@com.adjust.sdk.LogLevel.INFO` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L2dd8f0.  call `setLogLevel`(v2, v1, v0) @signature `Lcom/adjust/sdk/Logger;.setLogLevel:(Lcom/adjust/sdk/LogLevel;Z)V` @kind virtual;
  #L2dd8f6.  return @kind void;
}
procedure `void` `Assert`(`com.adjust.sdk.Logger` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Lcom/adjust/sdk/Logger;.Assert:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2dd908.  v0:= v3.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` @kind boolean;
  #L2dd90c.  if v0 == 0 then goto L2dd912;
  #L2dd910.  return @kind void;
  #L2dd912.  v0:= v3.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L2dd916.  v0:= v0.`com.adjust.sdk.LogLevel.androidLogLevel` @type ^`int`;
  #L2dd91a.  v1:= 7I;
  #L2dd91c.  if v0 > v1 then goto L2dd958;
  #L2dd920.  v0:= "Adjust" @kind object;
  #L2dd924.  call temp:= `formatString`(v4, v5) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dd92a.  v2:= temp @kind object;
  #L2dd92c.  call temp:= `println`(v1, v0, v2) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2dd932.  goto L2dd958;
  #L2dd934.  v0:= `@@com.adjust.sdk.Logger.formatErrorMessage` @type ^`java.lang.String` @kind object;
  #L2dd938.  v1:= 2I;
  #L2dd93a.  v1:= new `java.lang.Object`[v1];
  #L2dd93e.  v2:= 0I;
  #L2dd940.  v1[v2]:= v4 @kind object;
  #L2dd944.  call temp:= `toString`(v5) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dd94a.  v4:= temp @kind object;
  #L2dd94c.  v5:= 1I;
  #L2dd94e.  v1[v5]:= v4 @kind object;
  #L2dd952.  call temp:= `formatString`(v0, v1) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dd958.  return @kind void;
  catch `java.lang.Exception` @[L2dd920..L2dd932] goto L2dd934;
}
procedure `void` `debug`(`com.adjust.sdk.Logger` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Lcom/adjust/sdk/Logger;.debug:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2dd97c.  v0:= v3.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` @kind boolean;
  #L2dd980.  if v0 == 0 then goto L2dd986;
  #L2dd984.  return @kind void;
  #L2dd986.  v0:= v3.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L2dd98a.  v0:= v0.`com.adjust.sdk.LogLevel.androidLogLevel` @type ^`int`;
  #L2dd98e.  v1:= 3I;
  #L2dd990.  if v0 > v1 then goto L2dd9c0;
  #L2dd994.  call temp:= `formatString`(v4, v5) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dd99a.  goto L2dd9c0;
  #L2dd99c.  v0:= `@@com.adjust.sdk.Logger.formatErrorMessage` @type ^`java.lang.String` @kind object;
  #L2dd9a0.  v1:= 2I;
  #L2dd9a2.  v1:= new `java.lang.Object`[v1];
  #L2dd9a6.  v2:= 0I;
  #L2dd9a8.  v1[v2]:= v4 @kind object;
  #L2dd9ac.  call temp:= `toString`(v5) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dd9b2.  v4:= temp @kind object;
  #L2dd9b4.  v5:= 1I;
  #L2dd9b6.  v1[v5]:= v4 @kind object;
  #L2dd9ba.  call temp:= `formatString`(v0, v1) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dd9c0.  return @kind void;
  catch `java.lang.Exception` @[L2dd994..L2dd99a] goto L2dd99c;
}
procedure `void` `error`(`com.adjust.sdk.Logger` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Lcom/adjust/sdk/Logger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2dd9e4.  v0:= v3.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` @kind boolean;
  #L2dd9e8.  if v0 == 0 then goto L2dd9ee;
  #L2dd9ec.  return @kind void;
  #L2dd9ee.  v0:= v3.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L2dd9f2.  v0:= v0.`com.adjust.sdk.LogLevel.androidLogLevel` @type ^`int`;
  #L2dd9f6.  v1:= 6I;
  #L2dd9f8.  if v0 > v1 then goto L2dda28;
  #L2dd9fc.  call temp:= `formatString`(v4, v5) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dda02.  goto L2dda28;
  #L2dda04.  v0:= `@@com.adjust.sdk.Logger.formatErrorMessage` @type ^`java.lang.String` @kind object;
  #L2dda08.  v1:= 2I;
  #L2dda0a.  v1:= new `java.lang.Object`[v1];
  #L2dda0e.  v2:= 0I;
  #L2dda10.  v1[v2]:= v4 @kind object;
  #L2dda14.  call temp:= `toString`(v5) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dda1a.  v4:= temp @kind object;
  #L2dda1c.  v5:= 1I;
  #L2dda1e.  v1[v5]:= v4 @kind object;
  #L2dda22.  call temp:= `formatString`(v0, v1) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dda28.  return @kind void;
  catch `java.lang.Exception` @[L2dd9fc..L2dda02] goto L2dda04;
}
procedure `void` `info`(`com.adjust.sdk.Logger` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Lcom/adjust/sdk/Logger;.info:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2dda4c.  v0:= v3.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` @kind boolean;
  #L2dda50.  if v0 == 0 then goto L2dda56;
  #L2dda54.  return @kind void;
  #L2dda56.  v0:= v3.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L2dda5a.  v0:= v0.`com.adjust.sdk.LogLevel.androidLogLevel` @type ^`int`;
  #L2dda5e.  v1:= 4I;
  #L2dda60.  if v0 > v1 then goto L2dda90;
  #L2dda64.  call temp:= `formatString`(v4, v5) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dda6a.  goto L2dda90;
  #L2dda6c.  v0:= `@@com.adjust.sdk.Logger.formatErrorMessage` @type ^`java.lang.String` @kind object;
  #L2dda70.  v1:= 2I;
  #L2dda72.  v1:= new `java.lang.Object`[v1];
  #L2dda76.  v2:= 0I;
  #L2dda78.  v1[v2]:= v4 @kind object;
  #L2dda7c.  call temp:= `toString`(v5) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dda82.  v4:= temp @kind object;
  #L2dda84.  v5:= 1I;
  #L2dda86.  v1[v5]:= v4 @kind object;
  #L2dda8a.  call temp:= `formatString`(v0, v1) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dda90.  return @kind void;
  catch `java.lang.Exception` @[L2dda64..L2dda6a] goto L2dda6c;
}
procedure `void` `lockLogLevel`(`com.adjust.sdk.Logger` v1 @kind this) @signature `Lcom/adjust/sdk/Logger;.lockLogLevel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ddab4.  v0:= 1I;
  #L2ddab6.  v1.`com.adjust.sdk.Logger.logLevelLocked` @type ^`boolean` := v0 @kind boolean;
  #L2ddaba.  return @kind void;
}
procedure `void` `setLogLevel`(`com.adjust.sdk.Logger` v1 @kind this, `com.adjust.sdk.LogLevel` v2 @kind object, `boolean` v3 ) @signature `Lcom/adjust/sdk/Logger;.setLogLevel:(Lcom/adjust/sdk/LogLevel;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ddacc.  v0:= v1.`com.adjust.sdk.Logger.logLevelLocked` @type ^`boolean` @kind boolean;
  #L2ddad0.  if v0 == 0 then goto L2ddad6;
  #L2ddad4.  return @kind void;
  #L2ddad6.  v1.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` := v2 @kind object;
  #L2ddada.  v1.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` := v3 @kind boolean;
  #L2ddade.  return @kind void;
}
procedure `void` `setLogLevelString`(`com.adjust.sdk.Logger` v1 @kind this, `java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lcom/adjust/sdk/Logger;.setLogLevelString:(Ljava/lang/String;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ddaf0.  if v2 == 0 then goto L2ddb26;
  #L2ddaf4.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L2ddaf8.  call temp:= `toUpperCase`(v2, v0) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L2ddafe.  v0:= temp @kind object;
  #L2ddb00.  call temp:= `valueOf`(v0) @signature `Lcom/adjust/sdk/LogLevel;.valueOf:(Ljava/lang/String;)Lcom/adjust/sdk/LogLevel;` @kind static;
  #L2ddb06.  v0:= temp @kind object;
  #L2ddb08.  call `setLogLevel`(v1, v0, v3) @signature `Lcom/adjust/sdk/Logger;.setLogLevel:(Lcom/adjust/sdk/LogLevel;Z)V` @kind virtual;
  #L2ddb0e.  goto L2ddb26;
  #L2ddb10.  v3:= 1I;
  #L2ddb12.  v3:= new `java.lang.Object`[v3];
  #L2ddb16.  v0:= 0I;
  #L2ddb18.  v3[v0]:= v2 @kind object;
  #L2ddb1c.  v2:= "Malformed logLevel '%s', falling back to 'info'" @kind object;
  #L2ddb20.  call `error`(v1, v2, v3) @signature `Lcom/adjust/sdk/Logger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L2ddb26.  return @kind void;
  catch `java.lang.IllegalArgumentException` @[L2ddaf4..L2ddb0e] goto L2ddb10;
}
procedure `void` `verbose`(`com.adjust.sdk.Logger` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Lcom/adjust/sdk/Logger;.verbose:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ddb48.  v0:= v3.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` @kind boolean;
  #L2ddb4c.  if v0 == 0 then goto L2ddb52;
  #L2ddb50.  return @kind void;
  #L2ddb52.  v0:= v3.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L2ddb56.  v0:= v0.`com.adjust.sdk.LogLevel.androidLogLevel` @type ^`int`;
  #L2ddb5a.  v1:= 2I;
  #L2ddb5c.  if v0 > v1 then goto L2ddb8a;
  #L2ddb60.  call temp:= `formatString`(v4, v5) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ddb66.  goto L2ddb8a;
  #L2ddb68.  v0:= `@@com.adjust.sdk.Logger.formatErrorMessage` @type ^`java.lang.String` @kind object;
  #L2ddb6c.  v1:= new `java.lang.Object`[v1];
  #L2ddb70.  v2:= 0I;
  #L2ddb72.  v1[v2]:= v4 @kind object;
  #L2ddb76.  call temp:= `toString`(v5) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ddb7c.  v4:= temp @kind object;
  #L2ddb7e.  v5:= 1I;
  #L2ddb80.  v1[v5]:= v4 @kind object;
  #L2ddb84.  call temp:= `formatString`(v0, v1) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ddb8a.  return @kind void;
  catch `java.lang.Exception` @[L2ddb60..L2ddb66] goto L2ddb68;
}
procedure `void` `warn`(`com.adjust.sdk.Logger` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Lcom/adjust/sdk/Logger;.warn:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ddbac.  v0:= v3.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` @kind boolean;
  #L2ddbb0.  if v0 == 0 then goto L2ddbb6;
  #L2ddbb4.  return @kind void;
  #L2ddbb6.  v0:= v3.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L2ddbba.  v0:= v0.`com.adjust.sdk.LogLevel.androidLogLevel` @type ^`int`;
  #L2ddbbe.  v1:= 5I;
  #L2ddbc0.  if v0 > v1 then goto L2ddbf0;
  #L2ddbc4.  call temp:= `formatString`(v4, v5) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ddbca.  goto L2ddbf0;
  #L2ddbcc.  v0:= `@@com.adjust.sdk.Logger.formatErrorMessage` @type ^`java.lang.String` @kind object;
  #L2ddbd0.  v1:= 2I;
  #L2ddbd2.  v1:= new `java.lang.Object`[v1];
  #L2ddbd6.  v2:= 0I;
  #L2ddbd8.  v1[v2]:= v4 @kind object;
  #L2ddbdc.  call temp:= `toString`(v5) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ddbe2.  v4:= temp @kind object;
  #L2ddbe4.  v5:= 1I;
  #L2ddbe6.  v1[v5]:= v4 @kind object;
  #L2ddbea.  call temp:= `formatString`(v0, v1) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ddbf0.  return @kind void;
  catch `java.lang.Exception` @[L2ddbc4..L2ddbca] goto L2ddbcc;
}
procedure `void` `warnInProduction`(`com.adjust.sdk.Logger` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Lcom/adjust/sdk/Logger;.warnInProduction:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ddc14.  v0:= v3.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L2ddc18.  v0:= v0.`com.adjust.sdk.LogLevel.androidLogLevel` @type ^`int`;
  #L2ddc1c.  v1:= 5I;
  #L2ddc1e.  if v0 > v1 then goto L2ddc4e;
  #L2ddc22.  call temp:= `formatString`(v4, v5) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ddc28.  goto L2ddc4e;
  #L2ddc2a.  v0:= `@@com.adjust.sdk.Logger.formatErrorMessage` @type ^`java.lang.String` @kind object;
  #L2ddc2e.  v1:= 2I;
  #L2ddc30.  v1:= new `java.lang.Object`[v1];
  #L2ddc34.  v2:= 0I;
  #L2ddc36.  v1[v2]:= v4 @kind object;
  #L2ddc3a.  call temp:= `toString`(v5) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ddc40.  v4:= temp @kind object;
  #L2ddc42.  v5:= 1I;
  #L2ddc44.  v1[v5]:= v4 @kind object;
  #L2ddc48.  call temp:= `formatString`(v0, v1) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ddc4e.  return @kind void;
  catch `java.lang.Exception` @[L2ddc22..L2ddc28] goto L2ddc2a;
}
