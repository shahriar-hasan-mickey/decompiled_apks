record `com.adjust.sdk.scheduler.ThreadFactoryWrapper$a` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Thread$UncaughtExceptionHandler` @kind interface {
}
procedure `void` `<init>`(`com.adjust.sdk.scheduler.ThreadFactoryWrapper$a` v0 @kind this) @signature `Lcom/adjust/sdk/scheduler/ThreadFactoryWrapper$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e8808.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e880e.  return @kind void;
}
procedure `void` `uncaughtException`(`com.adjust.sdk.scheduler.ThreadFactoryWrapper$a` v3 @kind this, `java.lang.Thread` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lcom/adjust/sdk/scheduler/ThreadFactoryWrapper$a;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e8820.  call temp:= `getLogger`() @signature `Lcom/adjust/sdk/AdjustFactory;.getLogger:()Lcom/adjust/sdk/ILogger;` @kind static;
  #L2e8826.  v0:= temp @kind object;
  #L2e8828.  v1:= 2I;
  #L2e882a.  v1:= new `java.lang.Object`[v1];
  #L2e882e.  call temp:= `getName`(v4) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L2e8834.  v4:= temp @kind object;
  #L2e8836.  v2:= 0I;
  #L2e8838.  v1[v2]:= v4 @kind object;
  #L2e883c.  call temp:= `getMessage`(v5) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2e8842.  v4:= temp @kind object;
  #L2e8844.  v5:= 1I;
  #L2e8846.  v1[v5]:= v4 @kind object;
  #L2e884a.  v4:= "Thread [%s] with error [%s]" @kind object;
  #L2e884e.  call `error`(v0, v4, v1) @signature `Lcom/adjust/sdk/ILogger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L2e8854.  return @kind void;
}
