record `com.adjust.sdk.scheduler.RunnableWrapper` @kind class @AccessFlag PUBLIC extends `java.lang.Runnable` @kind interface {
  `java.lang.Runnable` `com.adjust.sdk.scheduler.RunnableWrapper.runnable` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.adjust.sdk.scheduler.RunnableWrapper` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lcom/adjust/sdk/scheduler/RunnableWrapper;.<init>:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e81a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e81aa.  v0.`com.adjust.sdk.scheduler.RunnableWrapper.runnable` @type ^`java.lang.Runnable` := v1 @kind object;
  #L2e81ae.  return @kind void;
}
procedure `void` `run`(`com.adjust.sdk.scheduler.RunnableWrapper` v5 @kind this) @signature `Lcom/adjust/sdk/scheduler/RunnableWrapper;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2e81c0.  v0:= v5.`com.adjust.sdk.scheduler.RunnableWrapper.runnable` @type ^`java.lang.Runnable` @kind object;
  #L2e81c4.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L2e81ca.  goto L2e820a;
  #L2e81cc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e81ce.  call temp:= `getLogger`() @signature `Lcom/adjust/sdk/AdjustFactory;.getLogger:()Lcom/adjust/sdk/ILogger;` @kind static;
  #L2e81d4.  v1:= temp @kind object;
  #L2e81d6.  v2:= 2I;
  #L2e81d8.  v2:= new `java.lang.Object`[v2];
  #L2e81dc.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2e81e2.  v3:= temp @kind object;
  #L2e81e4.  v4:= 0I;
  #L2e81e6.  v2[v4]:= v3 @kind object;
  #L2e81ea.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2e81f0.  v0:= temp @kind object;
  #L2e81f2.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2e81f8.  v0:= temp @kind object;
  #L2e81fa.  v3:= 1I;
  #L2e81fc.  v2[v3]:= v0 @kind object;
  #L2e8200.  v0:= "Runnable error [%s] of type [%s]" @kind object;
  #L2e8204.  call `error`(v1, v0, v2) @signature `Lcom/adjust/sdk/ILogger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L2e820a.  return @kind void;
  catch `java.lang.Throwable` @[L2e81c0..L2e81ca] goto L2e81cc;
}
