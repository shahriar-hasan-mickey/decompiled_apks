record `com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Runnable` @kind interface {
  `java.lang.Runnable` `com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `com.adjust.sdk.scheduler.SingleThreadCachedScheduler` `com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c` v0 @kind this, `com.adjust.sdk.scheduler.SingleThreadCachedScheduler` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler$c;.<init>:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e8310.  v0.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c.b` @type ^`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` := v1 @kind object;
  #L2e8314.  v0.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c.a` @type ^`java.lang.Runnable` := v2 @kind object;
  #L2e8318.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e831e.  return @kind void;
}
procedure `void` `run`(`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c` v4 @kind this) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler$c;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e8330.  v0:= v4.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c.b` @type ^`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` @kind object;
  #L2e8334.  v1:= v4.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c.a` @type ^`java.lang.Runnable` @kind object;
  #L2e8338.  call `access$000`(v0, v1) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.access$000:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;Ljava/lang/Runnable;)V` @kind static;
  #L2e833e.  v0:= v4.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c.b` @type ^`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` @kind object;
  #L2e8342.  call temp:= `access$100`(v0) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.access$100:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;)Ljava/util/List;` @kind static;
  #L2e8348.  v0:= temp @kind object;
  #L2e834a.  @monitorenter v0
  #L2e834c.  v1:= v4.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c.b` @type ^`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` @kind object;
  #L2e8350.  call temp:= `access$200`(v1) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.access$200:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;)Z` @kind static;
  #L2e8356.  v1:= temp;
  #L2e8358.  if v1 == 0 then goto L2e8360;
  #L2e835c.  @monitorexit v0
  #L2e835e.  return @kind void;
  #L2e8360.  v1:= v4.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c.b` @type ^`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` @kind object;
  #L2e8364.  call temp:= `access$100`(v1) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.access$100:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;)Ljava/util/List;` @kind static;
  #L2e836a.  v1:= temp @kind object;
  #L2e836c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2e8372.  v1:= temp;
  #L2e8374.  v2:= 0I;
  #L2e8376.  if v1 == 0 then goto L2e8388;
  #L2e837a.  v1:= v4.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c.b` @type ^`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` @kind object;
  #L2e837e.  call temp:= `access$302`(v1, v2) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.access$302:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;Z)Z` @kind static;
  #L2e8384.  @monitorexit v0
  #L2e8386.  return @kind void;
  #L2e8388.  v1:= v4.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c.b` @type ^`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` @kind object;
  #L2e838c.  call temp:= `access$100`(v1) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.access$100:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;)Ljava/util/List;` @kind static;
  #L2e8392.  v1:= temp @kind object;
  #L2e8394.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e839a.  v1:= temp @kind object;
  #L2e839c.  v1:= (`java.lang.Runnable`) v1 @kind object;
  #L2e83a0.  v3:= v4.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c.b` @type ^`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` @kind object;
  #L2e83a4.  call temp:= `access$100`(v3) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.access$100:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;)Ljava/util/List;` @kind static;
  #L2e83aa.  v3:= temp @kind object;
  #L2e83ac.  call temp:= `remove`(v3, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L2e83b2.  @monitorexit v0
  #L2e83b4.  v0:= v4.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c.b` @type ^`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` @kind object;
  #L2e83b8.  goto L2e8338;
  #L2e83ba.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e83bc.  @monitorexit v0
  #L2e83be.  goto L2e83c2;
  #L2e83c0.  throw v1;
  #L2e83c2.  goto L2e83c0;
  catch `java.lang.Throwable` @[L2e834c..L2e83b4] goto L2e83ba;
  catch `java.lang.Throwable` @[L2e83bc..L2e83be] goto L2e83ba;
}
