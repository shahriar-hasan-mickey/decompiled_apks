record `com.adjust.sdk.scheduler.ThreadFactoryWrapper` @kind class @AccessFlag PUBLIC extends `java.util.concurrent.ThreadFactory` @kind interface {
  `java.lang.String` `com.adjust.sdk.scheduler.ThreadFactoryWrapper.source` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.adjust.sdk.scheduler.ThreadFactoryWrapper` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/adjust/sdk/scheduler/ThreadFactoryWrapper;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e88f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e88f6.  v0.`com.adjust.sdk.scheduler.ThreadFactoryWrapper.source` @type ^`java.lang.String` := v1 @kind object;
  #L2e88fa.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`com.adjust.sdk.scheduler.ThreadFactoryWrapper` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lcom/adjust/sdk/scheduler/ThreadFactoryWrapper;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e8868.  call temp:= `defaultThreadFactory`() @signature `Ljava/util/concurrent/Executors;.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L2e886e.  v0:= temp @kind object;
  #L2e8870.  call temp:= `newThread`(v0, v3) @signature `Ljava/util/concurrent/ThreadFactory;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @kind interface;
  #L2e8876.  v3:= temp @kind object;
  #L2e8878.  v0:= 9I;
  #L2e887c.  call `setPriority`(v3, v0) @signature `Ljava/lang/Thread;.setPriority:(I)V` @kind virtual;
  #L2e8882.  v0:= new `java.lang.StringBuilder`;
  #L2e8886.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e888c.  v1:= "Adjust-" @kind object;
  #L2e8890.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e8896.  call temp:= `getName`(v3) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L2e889c.  v1:= temp @kind object;
  #L2e889e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e88a4.  v1:= "-" @kind object;
  #L2e88a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e88ae.  v1:= v2.`com.adjust.sdk.scheduler.ThreadFactoryWrapper.source` @type ^`java.lang.String` @kind object;
  #L2e88b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e88b8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e88be.  v0:= temp @kind object;
  #L2e88c0.  call `setName`(v3, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L2e88c6.  v0:= 1I;
  #L2e88c8.  call `setDaemon`(v3, v0) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L2e88ce.  v0:= new `com.adjust.sdk.scheduler.ThreadFactoryWrapper$a`;
  #L2e88d2.  call `<init>`(v0) @signature `Lcom/adjust/sdk/scheduler/ThreadFactoryWrapper$a;.<init>:()V` @kind direct;
  #L2e88d8.  call `setUncaughtExceptionHandler`(v3, v0) @signature `Ljava/lang/Thread;.setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V` @kind virtual;
  #L2e88de.  return v3 @kind object;
}
