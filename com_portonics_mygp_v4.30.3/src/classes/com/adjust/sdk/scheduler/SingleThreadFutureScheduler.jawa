record `com.adjust.sdk.scheduler.SingleThreadFutureScheduler` @kind class @AccessFlag PUBLIC extends `com.adjust.sdk.scheduler.FutureScheduler` @kind interface {
  `java.util.concurrent.ScheduledThreadPoolExecutor` `com.adjust.sdk.scheduler.SingleThreadFutureScheduler.scheduledThreadPoolExecutor` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.adjust.sdk.scheduler.SingleThreadFutureScheduler` v3 @kind this, `java.lang.String` v4 @kind object, `boolean` v5 ) @signature `Lcom/adjust/sdk/scheduler/SingleThreadFutureScheduler;.<init>:(Ljava/lang/String;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2e8794.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e879a.  v0:= new `java.util.concurrent.ScheduledThreadPoolExecutor`;
  #L2e879e.  v1:= new `com.adjust.sdk.scheduler.ThreadFactoryWrapper`;
  #L2e87a2.  call `<init>`(v1, v4) @signature `Lcom/adjust/sdk/scheduler/ThreadFactoryWrapper;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e87a8.  v2:= new `com.adjust.sdk.scheduler.SingleThreadFutureScheduler$a`;
  #L2e87ac.  call `<init>`(v2, v4) @signature `Lcom/adjust/sdk/scheduler/SingleThreadFutureScheduler$a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e87b2.  v4:= 1I;
  #L2e87b4.  call `<init>`(v0, v4, v1, v2) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<init>:(ILjava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V` @kind direct;
  #L2e87ba.  v3.`com.adjust.sdk.scheduler.SingleThreadFutureScheduler.scheduledThreadPoolExecutor` @type ^`java.util.concurrent.ScheduledThreadPoolExecutor` := v0 @kind object;
  #L2e87be.  if v5 != 0 then goto L2e87da;
  #L2e87c2.  v5:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2e87c6.  v1:= 10L;
  #L2e87ca.  call `setKeepAliveTime`(v0, v1, v5) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V` @kind virtual;
  #L2e87d0.  v5:= v3.`com.adjust.sdk.scheduler.SingleThreadFutureScheduler.scheduledThreadPoolExecutor` @type ^`java.util.concurrent.ScheduledThreadPoolExecutor` @kind object;
  #L2e87d4.  call `allowCoreThreadTimeOut`(v5, v4) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.allowCoreThreadTimeOut:(Z)V` @kind virtual;
  #L2e87da.  return @kind void;
}
procedure `java.util.concurrent.ScheduledFuture` `scheduleFuture`(`com.adjust.sdk.scheduler.SingleThreadFutureScheduler` v2 @kind this, `java.lang.Runnable` v3 @kind object, `long` v4 ) @signature `Lcom/adjust/sdk/scheduler/SingleThreadFutureScheduler;.scheduleFuture:(Ljava/lang/Runnable;J)Ljava/util/concurrent/ScheduledFuture;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e870c.  v0:= v2.`com.adjust.sdk.scheduler.SingleThreadFutureScheduler.scheduledThreadPoolExecutor` @type ^`java.util.concurrent.ScheduledThreadPoolExecutor` @kind object;
  #L2e8710.  v1:= new `com.adjust.sdk.scheduler.RunnableWrapper`;
  #L2e8714.  call `<init>`(v1, v3) @signature `Lcom/adjust/sdk/scheduler/RunnableWrapper;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L2e871a.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2e871e.  call temp:= `schedule`(v0, v1, v4, v3) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind virtual;
  #L2e8724.  v3:= temp @kind object;
  #L2e8726.  return v3 @kind object;
}
procedure `java.util.concurrent.ScheduledFuture` `scheduleFutureWithFixedDelay`(`com.adjust.sdk.scheduler.SingleThreadFutureScheduler` v7 @kind this, `java.lang.Runnable` v8 @kind object, `long` v9 , `long` v11 ) @signature `Lcom/adjust/sdk/scheduler/SingleThreadFutureScheduler;.scheduleFutureWithFixedDelay:(Ljava/lang/Runnable;JJ)Ljava/util/concurrent/ScheduledFuture;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2e8738.  v0:= v7.`com.adjust.sdk.scheduler.SingleThreadFutureScheduler.scheduledThreadPoolExecutor` @type ^`java.util.concurrent.ScheduledThreadPoolExecutor` @kind object;
  #L2e873c.  v1:= new `com.adjust.sdk.scheduler.RunnableWrapper`;
  #L2e8740.  call `<init>`(v1, v8) @signature `Lcom/adjust/sdk/scheduler/RunnableWrapper;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L2e8746.  v6:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2e874a.  v2:= v9 @kind wide;
  #L2e874c.  v4:= v11 @kind wide;
  #L2e874e.  call temp:= `scheduleWithFixedDelay`(v0, v1, v2, v4, v6) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind virtual;
  #L2e8754.  v8:= temp @kind object;
  #L2e8756.  return v8 @kind object;
}
procedure `java.util.concurrent.ScheduledFuture` `scheduleFutureWithReturn`(`com.adjust.sdk.scheduler.SingleThreadFutureScheduler` v2 @kind this, `java.util.concurrent.Callable` v3 @kind object, `long` v4 ) @signature `Lcom/adjust/sdk/scheduler/SingleThreadFutureScheduler;.scheduleFutureWithReturn:(Ljava/util/concurrent/Callable;J)Ljava/util/concurrent/ScheduledFuture;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e8768.  v0:= v2.`com.adjust.sdk.scheduler.SingleThreadFutureScheduler.scheduledThreadPoolExecutor` @type ^`java.util.concurrent.ScheduledThreadPoolExecutor` @kind object;
  #L2e876c.  v1:= new `com.adjust.sdk.scheduler.SingleThreadFutureScheduler$b`;
  #L2e8770.  call `<init>`(v1, v3) @signature `Lcom/adjust/sdk/scheduler/SingleThreadFutureScheduler$b;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L2e8776.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2e877a.  call temp:= `schedule`(v0, v1, v4, v3) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind virtual;
  #L2e8780.  v3:= temp @kind object;
  #L2e8782.  return v3 @kind object;
}
procedure `void` `teardown`(`com.adjust.sdk.scheduler.SingleThreadFutureScheduler` v1 @kind this) @signature `Lcom/adjust/sdk/scheduler/SingleThreadFutureScheduler;.teardown:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e87ec.  v0:= v1.`com.adjust.sdk.scheduler.SingleThreadFutureScheduler.scheduledThreadPoolExecutor` @type ^`java.util.concurrent.ScheduledThreadPoolExecutor` @kind object;
  #L2e87f0.  call temp:= `shutdownNow`(v0) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.shutdownNow:()Ljava/util/List;` @kind virtual;
  #L2e87f6.  return @kind void;
}
