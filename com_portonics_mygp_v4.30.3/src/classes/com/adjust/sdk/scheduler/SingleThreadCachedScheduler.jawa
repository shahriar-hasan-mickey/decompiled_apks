record `com.adjust.sdk.scheduler.SingleThreadCachedScheduler` @kind class @AccessFlag PUBLIC extends `com.adjust.sdk.scheduler.ThreadScheduler` @kind interface {
  `boolean` `com.adjust.sdk.scheduler.SingleThreadCachedScheduler.isTeardown` @AccessFlag PRIVATE;
  `boolean` `com.adjust.sdk.scheduler.SingleThreadCachedScheduler.isThreadProcessing` @AccessFlag PRIVATE;
  `java.util.List` `com.adjust.sdk.scheduler.SingleThreadCachedScheduler.queue` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ThreadPoolExecutor` `com.adjust.sdk.scheduler.SingleThreadCachedScheduler.threadPoolExecutor` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` v10 @kind this, `java.lang.String` v11 @kind object) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2e8430.  call `<init>`(v10) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e8436.  v0:= new `java.util.ArrayList`;
  #L2e843a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2e8440.  v10.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.queue` @type ^`java.util.List` := v0 @kind object;
  #L2e8444.  v0:= 0I;
  #L2e8446.  v10.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.isThreadProcessing` @type ^`boolean` := v0 @kind boolean;
  #L2e844a.  v10.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.isTeardown` @type ^`boolean` := v0 @kind boolean;
  #L2e844e.  v0:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L2e8452.  v6:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2e8456.  v7:= new `java.util.concurrent.SynchronousQueue`;
  #L2e845a.  call `<init>`(v7) @signature `Ljava/util/concurrent/SynchronousQueue;.<init>:()V` @kind direct;
  #L2e8460.  v8:= new `com.adjust.sdk.scheduler.ThreadFactoryWrapper`;
  #L2e8464.  call `<init>`(v8, v11) @signature `Lcom/adjust/sdk/scheduler/ThreadFactoryWrapper;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e846a.  v9:= new `com.adjust.sdk.scheduler.SingleThreadCachedScheduler$a`;
  #L2e846e.  call `<init>`(v9, v11) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler$a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e8474.  v2:= 0I;
  #L2e8476.  v3:= 2147483647I;
  #L2e847c.  v4:= 60L;
  #L2e8480.  v1:= v0 @kind object;
  #L2e8482.  call `<init>`(v1, v2, v3, v4, v6, v7, v8, v9) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V` @kind direct;
  #L2e8488.  v10.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.threadPoolExecutor` @type ^`java.util.concurrent.ThreadPoolExecutor` := v0 @kind object;
  #L2e848c.  return @kind void;
}
procedure `void` `access$000`(`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` v0 @kind object, `java.lang.Runnable` v1 @kind object) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.access$000:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2e84a0.  call `tryExecuteRunnable`(v0, v1) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.tryExecuteRunnable:(Ljava/lang/Runnable;)V` @kind direct;
  #L2e84a6.  return @kind void;
}
procedure `java.util.List` `access$100`(`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` v0 @kind object) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.access$100:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2e8418.  v0:= v0.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.queue` @type ^`java.util.List` @kind object;
  #L2e841c.  return v0 @kind object;
}
procedure `boolean` `access$200`(`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` v0 @kind object) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.access$200:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2e83e8.  v0:= v0.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.isTeardown` @type ^`boolean` @kind boolean;
  #L2e83ec.  return v0;
}
procedure `boolean` `access$302`(`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` v0 @kind object, `boolean` v1 ) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.access$302:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;Z)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2e8400.  v0.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.isThreadProcessing` @type ^`boolean` := v1 @kind boolean;
  #L2e8404.  return v1;
}
procedure `void` `processQueue`(`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.processQueue:(Ljava/lang/Runnable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2e84b8.  v0:= v2.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.threadPoolExecutor` @type ^`java.util.concurrent.ThreadPoolExecutor` @kind object;
  #L2e84bc.  v1:= new `com.adjust.sdk.scheduler.SingleThreadCachedScheduler$c`;
  #L2e84c0.  call `<init>`(v1, v2, v3) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler$c;.<init>:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;Ljava/lang/Runnable;)V` @kind direct;
  #L2e84c6.  call temp:= `submit`(v0, v1) @signature `Ljava/util/concurrent/AbstractExecutorService;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;` @kind virtual;
  #L2e84cc.  return @kind void;
}
procedure `void` `tryExecuteRunnable`(`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.tryExecuteRunnable:(Ljava/lang/Runnable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2e85cc.  v0:= v3.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.isTeardown` @type ^`boolean` @kind boolean;
  #L2e85d0.  if v0 == 0 then goto L2e85d6;
  #L2e85d4.  return @kind void;
  #L2e85d6.  call `run`(v4) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L2e85dc.  goto L2e8606;
  #L2e85de.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e85e0.  call temp:= `getLogger`() @signature `Lcom/adjust/sdk/AdjustFactory;.getLogger:()Lcom/adjust/sdk/ILogger;` @kind static;
  #L2e85e6.  v0:= temp @kind object;
  #L2e85e8.  v1:= 1I;
  #L2e85ea.  v1:= new `java.lang.Object`[v1];
  #L2e85ee.  call temp:= `getMessage`(v4) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2e85f4.  v4:= temp @kind object;
  #L2e85f6.  v2:= 0I;
  #L2e85f8.  v1[v2]:= v4 @kind object;
  #L2e85fc.  v4:= "Execution failed: %s" @kind object;
  #L2e8600.  call `warn`(v0, v4, v1) @signature `Lcom/adjust/sdk/ILogger;.warn:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L2e8606.  return @kind void;
  catch `java.lang.Throwable` @[L2e85cc..L2e85dc] goto L2e85de;
}
procedure `void` `schedule`(`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` v3 @kind this, `java.lang.Runnable` v4 @kind object, `long` v5 ) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.schedule:(Ljava/lang/Runnable;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2e84e0.  v0:= v3.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.queue` @type ^`java.util.List` @kind object;
  #L2e84e4.  @monitorenter v0
  #L2e84e6.  v1:= v3.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.isTeardown` @type ^`boolean` @kind boolean;
  #L2e84ea.  if v1 == 0 then goto L2e84f2;
  #L2e84ee.  @monitorexit v0
  #L2e84f0.  return @kind void;
  #L2e84f2.  v1:= v3.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.threadPoolExecutor` @type ^`java.util.concurrent.ThreadPoolExecutor` @kind object;
  #L2e84f6.  v2:= new `com.adjust.sdk.scheduler.SingleThreadCachedScheduler$b`;
  #L2e84fa.  call `<init>`(v2, v3, v5, v4) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler$b;.<init>:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;JLjava/lang/Runnable;)V` @kind direct;
  #L2e8500.  call temp:= `submit`(v1, v2) @signature `Ljava/util/concurrent/AbstractExecutorService;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;` @kind virtual;
  #L2e8506.  @monitorexit v0
  #L2e8508.  return @kind void;
  #L2e850a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e850c.  @monitorexit v0
  #L2e850e.  throw v4;
  catch `java.lang.Throwable` @[L2e84e6..L2e850e] goto L2e850a;
}
procedure `void` `submit`(`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.submit:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e852c.  v0:= v2.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.queue` @type ^`java.util.List` @kind object;
  #L2e8530.  @monitorenter v0
  #L2e8532.  v1:= v2.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.isTeardown` @type ^`boolean` @kind boolean;
  #L2e8536.  if v1 == 0 then goto L2e853e;
  #L2e853a.  @monitorexit v0
  #L2e853c.  return @kind void;
  #L2e853e.  v1:= v2.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.isThreadProcessing` @type ^`boolean` @kind boolean;
  #L2e8542.  if v1 != 0 then goto L2e8554;
  #L2e8546.  v1:= 1I;
  #L2e8548.  v2.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.isThreadProcessing` @type ^`boolean` := v1 @kind boolean;
  #L2e854c.  call `processQueue`(v2, v3) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.processQueue:(Ljava/lang/Runnable;)V` @kind direct;
  #L2e8552.  goto L2e855e;
  #L2e8554.  v1:= v2.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.queue` @type ^`java.util.List` @kind object;
  #L2e8558.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2e855e.  @monitorexit v0
  #L2e8560.  return @kind void;
  #L2e8562.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e8564.  @monitorexit v0
  #L2e8566.  throw v3;
  catch `java.lang.Throwable` @[L2e8532..L2e8566] goto L2e8562;
}
procedure `void` `teardown`(`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` v2 @kind this) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.teardown:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e8584.  v0:= v2.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.queue` @type ^`java.util.List` @kind object;
  #L2e8588.  @monitorenter v0
  #L2e858a.  v1:= 1I;
  #L2e858c.  v2.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.isTeardown` @type ^`boolean` := v1 @kind boolean;
  #L2e8590.  v1:= v2.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.queue` @type ^`java.util.List` @kind object;
  #L2e8594.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2e859a.  v1:= v2.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler.threadPoolExecutor` @type ^`java.util.concurrent.ThreadPoolExecutor` @kind object;
  #L2e859e.  call `shutdown`(v1) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.shutdown:()V` @kind virtual;
  #L2e85a4.  @monitorexit v0
  #L2e85a6.  return @kind void;
  #L2e85a8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e85aa.  @monitorexit v0
  #L2e85ac.  throw v1;
  catch `java.lang.Throwable` @[L2e858c..L2e85ac] goto L2e85a8;
}
