record `com.adjust.sdk.scheduler.TimerOnce` @kind class @AccessFlag PUBLIC {
  `java.lang.Runnable` `com.adjust.sdk.scheduler.TimerOnce.command` @AccessFlag PRIVATE;
  `com.adjust.sdk.ILogger` `com.adjust.sdk.scheduler.TimerOnce.logger` @AccessFlag PRIVATE;
  `java.lang.String` `com.adjust.sdk.scheduler.TimerOnce.name` @AccessFlag PRIVATE;
  `com.adjust.sdk.scheduler.FutureScheduler` `com.adjust.sdk.scheduler.TimerOnce.scheduler` @AccessFlag PRIVATE;
  `java.util.concurrent.ScheduledFuture` `com.adjust.sdk.scheduler.TimerOnce.waitingTask` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.adjust.sdk.scheduler.TimerOnce` v2 @kind this, `java.lang.Runnable` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2e8ce0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e8ce6.  v2.`com.adjust.sdk.scheduler.TimerOnce.name` @type ^`java.lang.String` := v4 @kind object;
  #L2e8cea.  v0:= new `com.adjust.sdk.scheduler.SingleThreadFutureScheduler`;
  #L2e8cee.  v1:= 1I;
  #L2e8cf0.  call `<init>`(v0, v4, v1) @signature `Lcom/adjust/sdk/scheduler/SingleThreadFutureScheduler;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L2e8cf6.  v2.`com.adjust.sdk.scheduler.TimerOnce.scheduler` @type ^`com.adjust.sdk.scheduler.FutureScheduler` := v0 @kind object;
  #L2e8cfa.  v2.`com.adjust.sdk.scheduler.TimerOnce.command` @type ^`java.lang.Runnable` := v3 @kind object;
  #L2e8cfe.  call temp:= `getLogger`() @signature `Lcom/adjust/sdk/AdjustFactory;.getLogger:()Lcom/adjust/sdk/ILogger;` @kind static;
  #L2e8d04.  v3:= temp @kind object;
  #L2e8d06.  v2.`com.adjust.sdk.scheduler.TimerOnce.logger` @type ^`com.adjust.sdk.ILogger` := v3 @kind object;
  #L2e8d0a.  return @kind void;
}
procedure `java.lang.String` `access$000`(`com.adjust.sdk.scheduler.TimerOnce` v0 @kind object) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.access$000:(Lcom/adjust/sdk/scheduler/TimerOnce;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2e8c84.  v0:= v0.`com.adjust.sdk.scheduler.TimerOnce.name` @type ^`java.lang.String` @kind object;
  #L2e8c88.  return v0 @kind object;
}
procedure `com.adjust.sdk.ILogger` `access$100`(`com.adjust.sdk.scheduler.TimerOnce` v0 @kind object) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.access$100:(Lcom/adjust/sdk/scheduler/TimerOnce;)Lcom/adjust/sdk/ILogger;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2e8c54.  v0:= v0.`com.adjust.sdk.scheduler.TimerOnce.logger` @type ^`com.adjust.sdk.ILogger` @kind object;
  #L2e8c58.  return v0 @kind object;
}
procedure `java.lang.Runnable` `access$200`(`com.adjust.sdk.scheduler.TimerOnce` v0 @kind object) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.access$200:(Lcom/adjust/sdk/scheduler/TimerOnce;)Ljava/lang/Runnable;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2e8c6c.  v0:= v0.`com.adjust.sdk.scheduler.TimerOnce.command` @type ^`java.lang.Runnable` @kind object;
  #L2e8c70.  return v0 @kind object;
}
procedure `java.util.concurrent.ScheduledFuture` `access$302`(`com.adjust.sdk.scheduler.TimerOnce` v0 @kind object, `java.util.concurrent.ScheduledFuture` v1 @kind object) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.access$302:(Lcom/adjust/sdk/scheduler/TimerOnce;Ljava/util/concurrent/ScheduledFuture;)Ljava/util/concurrent/ScheduledFuture;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2e8c9c.  v0.`com.adjust.sdk.scheduler.TimerOnce.waitingTask` @type ^`java.util.concurrent.ScheduledFuture` := v1 @kind object;
  #L2e8ca0.  return v1 @kind object;
}
procedure `void` `cancel`(`com.adjust.sdk.scheduler.TimerOnce` v3 @kind this, `boolean` v4 ) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.cancel:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2e8d38.  v0:= v3.`com.adjust.sdk.scheduler.TimerOnce.waitingTask` @type ^`java.util.concurrent.ScheduledFuture` @kind object;
  #L2e8d3c.  if v0 == 0 then goto L2e8d46;
  #L2e8d40.  call temp:= `cancel`(v0, v4) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L2e8d46.  v4:= 0I;
  #L2e8d48.  v3.`com.adjust.sdk.scheduler.TimerOnce.waitingTask` @type ^`java.util.concurrent.ScheduledFuture` := v4 @kind object;
  #L2e8d4c.  v4:= v3.`com.adjust.sdk.scheduler.TimerOnce.logger` @type ^`com.adjust.sdk.ILogger` @kind object;
  #L2e8d50.  v0:= 1I;
  #L2e8d52.  v0:= new `java.lang.Object`[v0];
  #L2e8d56.  v1:= v3.`com.adjust.sdk.scheduler.TimerOnce.name` @type ^`java.lang.String` @kind object;
  #L2e8d5a.  v2:= 0I;
  #L2e8d5c.  v0[v2]:= v1 @kind object;
  #L2e8d60.  v1:= "%s canceled" @kind object;
  #L2e8d64.  call `verbose`(v4, v1, v0) @signature `Lcom/adjust/sdk/ILogger;.verbose:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L2e8d6a.  return @kind void;
}
procedure `void` `cancel`(`com.adjust.sdk.scheduler.TimerOnce` v1 @kind this) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e8d1c.  v0:= 0I;
  #L2e8d1e.  call `cancel`(v1, v0) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.cancel:(Z)V` @kind direct;
  #L2e8d24.  return @kind void;
}
procedure `long` `getFireIn`(`com.adjust.sdk.scheduler.TimerOnce` v2 @kind this) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.getFireIn:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e8cb4.  v0:= v2.`com.adjust.sdk.scheduler.TimerOnce.waitingTask` @type ^`java.util.concurrent.ScheduledFuture` @kind object;
  #L2e8cb8.  if v0 != 0 then goto L2e8cc2;
  #L2e8cbc.  v0:= 0L;
  #L2e8cc0.  return v0 @kind wide;
  #L2e8cc2.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2e8cc6.  call temp:= `getDelay`(v0, v1) @signature `Ljava/util/concurrent/Delayed;.getDelay:(Ljava/util/concurrent/TimeUnit;)J` @kind interface;
  #L2e8ccc.  v0:= temp @kind wide;
  #L2e8cce.  return v0 @kind wide;
}
procedure `void` `startIn`(`com.adjust.sdk.scheduler.TimerOnce` v6 @kind this, `long` v7 ) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.startIn:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2e8d7c.  v0:= 0I;
  #L2e8d7e.  call `cancel`(v6, v0) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.cancel:(Z)V` @kind direct;
  #L2e8d84.  v1:= `@@com.adjust.sdk.Util.SecondsDisplayFormat` @type ^`java.text.DecimalFormat` @kind object;
  #L2e8d88.  v2:= (`double`) v7 @kind l2d;
  #L2e8d8a.  v4:= 1000.0D;
  #L2e8d94.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2e8d9a.  v2:= v2 / v4 @kind double;
  #L2e8d9c.  call temp:= `format`(v1, v2) @signature `Ljava/text/NumberFormat;.format:(D)Ljava/lang/String;` @kind virtual;
  #L2e8da2.  v1:= temp @kind object;
  #L2e8da4.  v2:= v6.`com.adjust.sdk.scheduler.TimerOnce.logger` @type ^`com.adjust.sdk.ILogger` @kind object;
  #L2e8da8.  v3:= 2I;
  #L2e8daa.  v3:= new `java.lang.Object`[v3];
  #L2e8dae.  v4:= v6.`com.adjust.sdk.scheduler.TimerOnce.name` @type ^`java.lang.String` @kind object;
  #L2e8db2.  v3[v0]:= v4 @kind object;
  #L2e8db6.  v0:= 1I;
  #L2e8db8.  v3[v0]:= v1 @kind object;
  #L2e8dbc.  v0:= "%s starting. Launching in %s seconds" @kind object;
  #L2e8dc0.  call `verbose`(v2, v0, v3) @signature `Lcom/adjust/sdk/ILogger;.verbose:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L2e8dc6.  v0:= v6.`com.adjust.sdk.scheduler.TimerOnce.scheduler` @type ^`com.adjust.sdk.scheduler.FutureScheduler` @kind object;
  #L2e8dca.  v1:= new `com.adjust.sdk.scheduler.TimerOnce$a`;
  #L2e8dce.  call `<init>`(v1, v6) @signature `Lcom/adjust/sdk/scheduler/TimerOnce$a;.<init>:(Lcom/adjust/sdk/scheduler/TimerOnce;)V` @kind direct;
  #L2e8dd4.  call temp:= `scheduleFuture`(v0, v1, v7) @signature `Lcom/adjust/sdk/scheduler/FutureScheduler;.scheduleFuture:(Ljava/lang/Runnable;J)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L2e8dda.  v7:= temp @kind object;
  #L2e8ddc.  v6.`com.adjust.sdk.scheduler.TimerOnce.waitingTask` @type ^`java.util.concurrent.ScheduledFuture` := v7 @kind object;
  #L2e8de0.  return @kind void;
}
procedure `void` `teardown`(`com.adjust.sdk.scheduler.TimerOnce` v1 @kind this) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.teardown:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e8df4.  v0:= 1I;
  #L2e8df6.  call `cancel`(v1, v0) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.cancel:(Z)V` @kind direct;
  #L2e8dfc.  v0:= v1.`com.adjust.sdk.scheduler.TimerOnce.scheduler` @type ^`com.adjust.sdk.scheduler.FutureScheduler` @kind object;
  #L2e8e00.  if v0 == 0 then goto L2e8e0a;
  #L2e8e04.  call `teardown`(v0) @signature `Lcom/adjust/sdk/scheduler/FutureScheduler;.teardown:()V` @kind interface;
  #L2e8e0a.  v0:= 0I;
  #L2e8e0c.  v1.`com.adjust.sdk.scheduler.TimerOnce.scheduler` @type ^`com.adjust.sdk.scheduler.FutureScheduler` := v0 @kind object;
  #L2e8e10.  return @kind void;
}
