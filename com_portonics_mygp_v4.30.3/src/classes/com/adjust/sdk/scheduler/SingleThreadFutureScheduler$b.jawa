record `com.adjust.sdk.scheduler.SingleThreadFutureScheduler$b` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.Callable` @kind interface {
  `java.util.concurrent.Callable` `com.adjust.sdk.scheduler.SingleThreadFutureScheduler$b.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.adjust.sdk.scheduler.SingleThreadFutureScheduler$b` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lcom/adjust/sdk/scheduler/SingleThreadFutureScheduler$b;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e86f0.  v0.`com.adjust.sdk.scheduler.SingleThreadFutureScheduler$b.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L2e86f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e86fa.  return @kind void;
}
procedure `java.lang.Object` `call`(`com.adjust.sdk.scheduler.SingleThreadFutureScheduler$b` v5 @kind this) @signature `Lcom/adjust/sdk/scheduler/SingleThreadFutureScheduler$b;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2e8684.  v0:= v5.`com.adjust.sdk.scheduler.SingleThreadFutureScheduler$b.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L2e8688.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L2e868e.  v0:= temp @kind object;
  #L2e8690.  return v0 @kind object;
  #L2e8692.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e8694.  call temp:= `getLogger`() @signature `Lcom/adjust/sdk/AdjustFactory;.getLogger:()Lcom/adjust/sdk/ILogger;` @kind static;
  #L2e869a.  v1:= temp @kind object;
  #L2e869c.  v2:= 2I;
  #L2e869e.  v2:= new `java.lang.Object`[v2];
  #L2e86a2.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2e86a8.  v3:= temp @kind object;
  #L2e86aa.  v4:= 0I;
  #L2e86ac.  v2[v4]:= v3 @kind object;
  #L2e86b0.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2e86b6.  v0:= temp @kind object;
  #L2e86b8.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2e86be.  v0:= temp @kind object;
  #L2e86c0.  v3:= 1I;
  #L2e86c2.  v2[v3]:= v0 @kind object;
  #L2e86c6.  v0:= "Callable error [%s] of type [%s]" @kind object;
  #L2e86ca.  call `error`(v1, v0, v2) @signature `Lcom/adjust/sdk/ILogger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L2e86d0.  v0:= 0I;
  #L2e86d2.  return v0 @kind object;
  catch `java.lang.Throwable` @[L2e8684..L2e8690] goto L2e8692;
}
