record `com.adjust.sdk.ILogger` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `Assert`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lcom/adjust/sdk/ILogger;.Assert:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `debug`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lcom/adjust/sdk/ILogger;.debug:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `error`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lcom/adjust/sdk/ILogger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `info`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lcom/adjust/sdk/ILogger;.info:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `lockLogLevel`() @signature `Lcom/adjust/sdk/ILogger;.lockLogLevel:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setLogLevel`(`com.adjust.sdk.LogLevel` v0 @kind object, `boolean` v1 ) @signature `Lcom/adjust/sdk/ILogger;.setLogLevel:(Lcom/adjust/sdk/LogLevel;Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setLogLevelString`(`java.lang.String` v0 @kind object, `boolean` v1 ) @signature `Lcom/adjust/sdk/ILogger;.setLogLevelString:(Ljava/lang/String;Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `verbose`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lcom/adjust/sdk/ILogger;.verbose:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `warn`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lcom/adjust/sdk/ILogger;.warn:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `warnInProduction`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lcom/adjust/sdk/ILogger;.warnInProduction:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
