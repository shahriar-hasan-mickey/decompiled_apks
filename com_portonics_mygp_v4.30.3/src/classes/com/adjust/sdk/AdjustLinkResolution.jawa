record `com.adjust.sdk.AdjustLinkResolution` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.concurrent.ExecutorService` `@@com.adjust.sdk.AdjustLinkResolution.executor` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `java.lang.String`[] `@@com.adjust.sdk.AdjustLinkResolution.expectedUrlHostSuffixArray` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.adjust.sdk.AdjustLinkResolution.maxRecursions` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/adjust/sdk/AdjustLinkResolution;.<clinit>:()V` @AccessFlag PUBLIC_STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2daaa8.  v0:= "adjust.com" @kind object;
  #L2daaac.  v1:= "adj.st" @kind object;
  #L2daab0.  v2:= "go.link" @kind object;
  #L2daab4.  temp:= new `java.lang.String`[v0, v1, v2];
  #L2daaba.  v0:= temp @kind object;
  #L2daabc.  `@@com.adjust.sdk.AdjustLinkResolution.expectedUrlHostSuffixArray` @type ^`java.lang.String`[] := v0 @kind object;
  #L2daac0.  return @kind void;
}
procedure `void` `<init>`(`com.adjust.sdk.AdjustLinkResolution` v0 @kind this) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2daad4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2daada.  return @kind void;
}
procedure `void` `access$000`(`java.net.URL` v0 @kind object, `int` v1 , `com.adjust.sdk.AdjustLinkResolution$AdjustLinkResolutionCallback` v2 @kind object) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.access$000:(Ljava/net/URL;ILcom/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2daaec.  call `requestAndResolve`(v0, v1, v2) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.requestAndResolve:(Ljava/net/URL;ILcom/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback;)V` @kind static;
  #L2daaf2.  return @kind void;
}
procedure `java.net.URL` `convertToHttps`(`java.net.URL` v4 @kind object) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.convertToHttps:(Ljava/net/URL;)Ljava/net/URL;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2daa28.  if v4 != 0 then goto L2daa2e;
  #L2daa2c.  return v4 @kind object;
  #L2daa2e.  call temp:= `toExternalForm`(v4) @signature `Ljava/net/URL;.toExternalForm:()Ljava/lang/String;` @kind virtual;
  #L2daa34.  v0:= temp @kind object;
  #L2daa36.  if v0 != 0 then goto L2daa3c;
  #L2daa3a.  return v4 @kind object;
  #L2daa3c.  v1:= "http:" @kind object;
  #L2daa40.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2daa46.  v1:= temp;
  #L2daa48.  if v1 != 0 then goto L2daa4e;
  #L2daa4c.  return v4 @kind object;
  #L2daa4e.  v1:= new `java.net.URL`;
  #L2daa52.  v2:= new `java.lang.StringBuilder`;
  #L2daa56.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2daa5c.  v3:= "https:" @kind object;
  #L2daa60.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2daa66.  v3:= 5I;
  #L2daa68.  call temp:= `substring`(v0, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2daa6e.  v0:= temp @kind object;
  #L2daa70.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2daa76.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2daa7c.  v0:= temp @kind object;
  #L2daa7e.  call `<init>`(v1, v0) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2daa84.  v4:= v1 @kind object;
  #L2daa86.  return v4 @kind object;
  catch `java.net.MalformedURLException` @[L2daa4e..L2daa84] goto L2daa86;
}
procedure `android.net.Uri` `convertToUri`(`java.net.URL` v0 @kind object) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.convertToUri:(Ljava/net/URL;)Landroid/net/Uri;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L2da998.  if v0 != 0 then goto L2da9a0;
  #L2da99c.  v0:= 0I;
  #L2da99e.  return v0 @kind object;
  #L2da9a0.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L2da9a6.  v0:= temp @kind object;
  #L2da9a8.  call temp:= `parse`(v0) @signature `Landroid/net/Uri;.parse:(Ljava/lang/String;)Landroid/net/Uri;` @kind static;
  #L2da9ae.  v0:= temp @kind object;
  #L2da9b0.  return v0 @kind object;
}
procedure `boolean` `isTerminalUrl`(`java.lang.String` v1 @kind object) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.isTerminalUrl:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2da9c4.  v0:= `@@com.adjust.sdk.AdjustLinkResolution.expectedUrlHostSuffixArray` @type ^`java.lang.String`[] @kind object;
  #L2da9c8.  call temp:= `urlMatchesSuffix`(v1, v0) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.urlMatchesSuffix:(Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L2da9ce.  v1:= temp;
  #L2da9d0.  return v1;
}
procedure `void` `requestAndResolve`(`java.net.URL` v4 @kind object, `int` v5 , `com.adjust.sdk.AdjustLinkResolution$AdjustLinkResolutionCallback` v6 @kind object) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.requestAndResolve:(Ljava/net/URL;ILcom/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dab04.  call temp:= `convertToHttps`(v4) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.convertToHttps:(Ljava/net/URL;)Ljava/net/URL;` @kind static;
  #L2dab0a.  v4:= temp @kind object;
  #L2dab0c.  v0:= 0I;
  #L2dab0e.  call temp:= `openConnection`(v4) @signature `Ljava/net/URL;.openConnection:()Ljava/net/URLConnection;` @kind virtual;
  #L2dab14.  v1:= temp @kind object;
  #L2dab16.  v1:= (`java.net.HttpURLConnection`) v1 @kind object;
  #L2dab1a.  v2:= 0I;
  #L2dab1c.  call `setInstanceFollowRedirects`(v1, v2) @signature `Ljava/net/HttpURLConnection;.setInstanceFollowRedirects:(Z)V` @kind virtual;
  #L2dab22.  call `connect`(v1) @signature `Ljava/net/URLConnection;.connect:()V` @kind virtual;
  #L2dab28.  v2:= "Location" @kind object;
  #L2dab2c.  call temp:= `getHeaderField`(v1, v2) @signature `Ljava/net/URLConnection;.getHeaderField:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2dab32.  v2:= temp @kind object;
  #L2dab34.  if v2 == 0 then goto L2dab44;
  #L2dab38.  v3:= new `java.net.URL`;
  #L2dab3c.  call `<init>`(v3, v2) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dab42.  v0:= v3 @kind object;
  #L2dab44.  call `disconnect`(v1) @signature `Ljava/net/HttpURLConnection;.disconnect:()V` @kind virtual;
  #L2dab4a.  goto L2dab58;
  #L2dab4c.  
  #L2dab4e.  goto L2dab52;
  #L2dab50.  v1:= v0 @kind object;
  #L2dab52.  if v1 == 0 then goto L2dab58;
  #L2dab56.  goto L2dab44;
  #L2dab58.  v5:= v5 + 1;
  #L2dab5c.  call `resolveLink`(v0, v4, v5, v6) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.resolveLink:(Ljava/net/URL;Ljava/net/URL;ILcom/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback;)V` @kind static;
  #L2dab62.  return @kind void;
  catch `java.lang.Throwable` @[L2dab0e..L2dab1a] goto L2dab50;
  catch `java.lang.Throwable` @[L2dab1c..L2dab42] goto L2dab4c;
}
procedure `void` `resolveLink`(`java.lang.String` v2 @kind object, `java.lang.String`[] v3 @kind object, `com.adjust.sdk.AdjustLinkResolution$AdjustLinkResolutionCallback` v4 @kind object) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.resolveLink:(Ljava/lang/String;[Ljava/lang/String;Lcom/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2dab8c.  if v4 != 0 then goto L2dab92;
  #L2dab90.  return @kind void;
  #L2dab92.  v0:= 0I;
  #L2dab94.  if v2 != 0 then goto L2daba0;
  #L2dab98.  call `resolvedLinkCallback`(v4, v0) @signature `Lcom/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback;.resolvedLinkCallback:(Landroid/net/Uri;)V` @kind interface;
  #L2dab9e.  return @kind void;
  #L2daba0.  v1:= new `java.net.URL`;
  #L2daba4.  call `<init>`(v1, v2) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dabaa.  goto L2dabae;
  #L2dabac.  v1:= v0 @kind object;
  #L2dabae.  if v1 != 0 then goto L2dabba;
  #L2dabb2.  call `resolvedLinkCallback`(v4, v0) @signature `Lcom/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback;.resolvedLinkCallback:(Landroid/net/Uri;)V` @kind interface;
  #L2dabb8.  return @kind void;
  #L2dabba.  call temp:= `getHost`(v1) @signature `Ljava/net/URL;.getHost:()Ljava/lang/String;` @kind virtual;
  #L2dabc0.  v2:= temp @kind object;
  #L2dabc2.  call temp:= `urlMatchesSuffix`(v2, v3) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.urlMatchesSuffix:(Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L2dabc8.  v2:= temp;
  #L2dabca.  if v2 != 0 then goto L2dabde;
  #L2dabce.  call temp:= `convertToUri`(v1) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.convertToUri:(Ljava/net/URL;)Landroid/net/Uri;` @kind static;
  #L2dabd4.  v2:= temp @kind object;
  #L2dabd6.  call `resolvedLinkCallback`(v4, v2) @signature `Lcom/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback;.resolvedLinkCallback:(Landroid/net/Uri;)V` @kind interface;
  #L2dabdc.  return @kind void;
  #L2dabde.  v2:= `@@com.adjust.sdk.AdjustLinkResolution.executor` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L2dabe2.  if v2 != 0 then goto L2dac0a;
  #L2dabe6.  v2:= `@@com.adjust.sdk.AdjustLinkResolution.expectedUrlHostSuffixArray` @type ^`java.lang.String`[] @kind object;
  #L2dabea.  @monitorenter v2
  #L2dabec.  v3:= `@@com.adjust.sdk.AdjustLinkResolution.executor` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L2dabf0.  if v3 != 0 then goto L2dac00;
  #L2dabf4.  call temp:= `newSingleThreadExecutor`() @signature `Ljava/util/concurrent/Executors;.newSingleThreadExecutor:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L2dabfa.  v3:= temp @kind object;
  #L2dabfc.  `@@com.adjust.sdk.AdjustLinkResolution.executor` @type ^`java.util.concurrent.ExecutorService` := v3 @kind object;
  #L2dac00.  @monitorexit v2
  #L2dac02.  goto L2dac0a;
  #L2dac04.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dac06.  @monitorexit v2
  #L2dac08.  throw v3;
  #L2dac0a.  v2:= `@@com.adjust.sdk.AdjustLinkResolution.executor` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L2dac0e.  v3:= new `com.adjust.sdk.AdjustLinkResolution$a`;
  #L2dac12.  call `<init>`(v3, v1, v4) @signature `Lcom/adjust/sdk/AdjustLinkResolution$a;.<init>:(Ljava/net/URL;Lcom/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback;)V` @kind direct;
  #L2dac18.  call `execute`(v2, v3) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2dac1e.  return @kind void;
  catch `java.net.MalformedURLException` @[L2daba0..L2dabaa] goto L2dabac;
  catch `java.lang.Throwable` @[L2dabec..L2dac08] goto L2dac04;
}
procedure `void` `resolveLink`(`java.net.URL` v0 @kind object, `java.net.URL` v1 @kind object, `int` v2 , `com.adjust.sdk.AdjustLinkResolution$AdjustLinkResolutionCallback` v3 @kind object) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.resolveLink:(Ljava/net/URL;Ljava/net/URL;ILcom/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L2dac48.  if v0 != 0 then goto L2dac5c;
  #L2dac4c.  call temp:= `convertToUri`(v1) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.convertToUri:(Ljava/net/URL;)Landroid/net/Uri;` @kind static;
  #L2dac52.  v0:= temp @kind object;
  #L2dac54.  call `resolvedLinkCallback`(v3, v0) @signature `Lcom/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback;.resolvedLinkCallback:(Landroid/net/Uri;)V` @kind interface;
  #L2dac5a.  return @kind void;
  #L2dac5c.  call temp:= `getHost`(v0) @signature `Ljava/net/URL;.getHost:()Ljava/lang/String;` @kind virtual;
  #L2dac62.  v1:= temp @kind object;
  #L2dac64.  call temp:= `isTerminalUrl`(v1) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.isTerminalUrl:(Ljava/lang/String;)Z` @kind static;
  #L2dac6a.  v1:= temp;
  #L2dac6c.  if v1 == 0 then goto L2dac7a;
  #L2dac70.  call temp:= `convertToUri`(v0) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.convertToUri:(Ljava/net/URL;)Landroid/net/Uri;` @kind static;
  #L2dac76.  v0:= temp @kind object;
  #L2dac78.  goto L2dac54;
  #L2dac7a.  v1:= 10I;
  #L2dac7e.  if v2 <= v1 then goto L2dac84;
  #L2dac82.  goto L2dac70;
  #L2dac84.  call `requestAndResolve`(v0, v2, v3) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.requestAndResolve:(Ljava/net/URL;ILcom/adjust/sdk/AdjustLinkResolution$AdjustLinkResolutionCallback;)V` @kind static;
  #L2dac8a.  return @kind void;
}
procedure `boolean` `urlMatchesSuffix`(`java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/adjust/sdk/AdjustLinkResolution;.urlMatchesSuffix:(Ljava/lang/String;[Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2da9e4.  v0:= 0I;
  #L2da9e6.  if v4 != 0 then goto L2da9ec;
  #L2da9ea.  return v0;
  #L2da9ec.  if v5 != 0 then goto L2da9f2;
  #L2da9f0.  return v0;
  #L2da9f2.  v1:= length @variable v5;
  #L2da9f4.  v2:= 0I;
  #L2da9f6.  if v2 >= v1 then goto L2daa14;
  #L2da9fa.  v3:= v5[v2] @kind object;
  #L2da9fe.  call temp:= `endsWith`(v4, v3) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2daa04.  v3:= temp;
  #L2daa06.  if v3 == 0 then goto L2daa0e;
  #L2daa0a.  v4:= 1I;
  #L2daa0c.  return v4;
  #L2daa0e.  v2:= v2 + 1;
  #L2daa12.  goto L2da9f6;
  #L2daa14.  return v0;
}
