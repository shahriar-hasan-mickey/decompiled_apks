record `com.adjust.sdk.BackoffStrategy` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `double` `com.adjust.sdk.BackoffStrategy.maxRange` @AccessFlag PUBLIC;
  `long` `com.adjust.sdk.BackoffStrategy.maxWait` @AccessFlag PUBLIC;
  `long` `com.adjust.sdk.BackoffStrategy.milliSecondMultiplier` @AccessFlag PUBLIC;
  `double` `com.adjust.sdk.BackoffStrategy.minRange` @AccessFlag PUBLIC;
  `int` `com.adjust.sdk.BackoffStrategy.minRetries` @AccessFlag PUBLIC;
}
global `com.adjust.sdk.BackoffStrategy`[] `@@com.adjust.sdk.BackoffStrategy.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.adjust.sdk.BackoffStrategy` `@@com.adjust.sdk.BackoffStrategy.LONG_WAIT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.adjust.sdk.BackoffStrategy` `@@com.adjust.sdk.BackoffStrategy.NO_WAIT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.adjust.sdk.BackoffStrategy` `@@com.adjust.sdk.BackoffStrategy.SHORT_WAIT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.adjust.sdk.BackoffStrategy` `@@com.adjust.sdk.BackoffStrategy.TEST_WAIT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `com.adjust.sdk.BackoffStrategy`[] `$values`() @signature `Lcom/adjust/sdk/BackoffStrategy;.$values:()[Lcom/adjust/sdk/BackoffStrategy;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L2dc158.  v0:= 4I;
  #L2dc15a.  v0:= new `com.adjust.sdk.BackoffStrategy`[v0];
  #L2dc15e.  v1:= `@@com.adjust.sdk.BackoffStrategy.LONG_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` @kind object;
  #L2dc162.  v2:= 0I;
  #L2dc164.  v0[v2]:= v1 @kind object;
  #L2dc168.  v1:= `@@com.adjust.sdk.BackoffStrategy.SHORT_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` @kind object;
  #L2dc16c.  v2:= 1I;
  #L2dc16e.  v0[v2]:= v1 @kind object;
  #L2dc172.  v1:= `@@com.adjust.sdk.BackoffStrategy.TEST_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` @kind object;
  #L2dc176.  v2:= 2I;
  #L2dc178.  v0[v2]:= v1 @kind object;
  #L2dc17c.  v1:= `@@com.adjust.sdk.BackoffStrategy.NO_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` @kind object;
  #L2dc180.  v2:= 3I;
  #L2dc182.  v0[v2]:= v1 @kind object;
  #L2dc186.  return v0 @kind object;
}
procedure `void` `<clinit>`() @signature `Lcom/adjust/sdk/BackoffStrategy;.<clinit>:()V` @AccessFlag PUBLIC_STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;

  #L2dc1bc.  v12:= new `com.adjust.sdk.BackoffStrategy`;
  #L2dc1c0.  v1:= "LONG_WAIT" @kind object;
  #L2dc1c4.  v2:= 0I;
  #L2dc1c6.  v3:= 1I;
  #L2dc1c8.  v4:= 120000L;
  #L2dc1ce.  v6:= 86400000L;
  #L2dc1d4.  v8:= 0.5D;
  #L2dc1d8.  v10:= 1.0D;
  #L2dc1dc.  v0:= v12 @kind object;
  #L2dc1de.  call `<init>`(v0, v1, v2, v3, v4, v6, v8, v10) @signature `Lcom/adjust/sdk/BackoffStrategy;.<init>:(Ljava/lang/String;IIJJDD)V` @kind direct;
  #L2dc1e4.  `@@com.adjust.sdk.BackoffStrategy.LONG_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` := v12 @kind object;
  #L2dc1e8.  v0:= new `com.adjust.sdk.BackoffStrategy`;
  #L2dc1ec.  v14:= "SHORT_WAIT" @kind object;
  #L2dc1f0.  v15:= 1I;
  #L2dc1f2.  v16:= 1I;
  #L2dc1f6.  v17:= 200L;
  #L2dc1fa.  v19:= 3600000L;
  #L2dc200.  v21:= 0.5D;
  #L2dc204.  v23:= 1.0D;
  #L2dc208.  v13:= v0 @kind object;
  #L2dc20a.  call `<init>`(v13, v14, v15, v16, v17, v19, v21, v23) @signature `Lcom/adjust/sdk/BackoffStrategy;.<init>:(Ljava/lang/String;IIJJDD)V` @kind direct;
  #L2dc210.  `@@com.adjust.sdk.BackoffStrategy.SHORT_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` := v0 @kind object;
  #L2dc214.  v0:= new `com.adjust.sdk.BackoffStrategy`;
  #L2dc218.  v2:= "TEST_WAIT" @kind object;
  #L2dc21c.  v3:= 2I;
  #L2dc21e.  v4:= 1I;
  #L2dc220.  v5:= 200L;
  #L2dc224.  v7:= 1000L;
  #L2dc228.  v9:= 0.5D;
  #L2dc22c.  v11:= 1.0D;
  #L2dc230.  v1:= v0 @kind object;
  #L2dc232.  call `<init>`(v1, v2, v3, v4, v5, v7, v9, v11) @signature `Lcom/adjust/sdk/BackoffStrategy;.<init>:(Ljava/lang/String;IIJJDD)V` @kind direct;
  #L2dc238.  `@@com.adjust.sdk.BackoffStrategy.TEST_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` := v0 @kind object;
  #L2dc23c.  v0:= new `com.adjust.sdk.BackoffStrategy`;
  #L2dc240.  v14:= "NO_WAIT" @kind object;
  #L2dc244.  v15:= 3I;
  #L2dc246.  v16:= 100I;
  #L2dc24a.  v17:= 1L;
  #L2dc24e.  v19:= 1000L;
  #L2dc252.  v21:= 1.0D;
  #L2dc256.  v13:= v0 @kind object;
  #L2dc258.  call `<init>`(v13, v14, v15, v16, v17, v19, v21, v23) @signature `Lcom/adjust/sdk/BackoffStrategy;.<init>:(Ljava/lang/String;IIJJDD)V` @kind direct;
  #L2dc25e.  `@@com.adjust.sdk.BackoffStrategy.NO_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` := v0 @kind object;
  #L2dc262.  call temp:= `$values`() @signature `Lcom/adjust/sdk/BackoffStrategy;.$values:()[Lcom/adjust/sdk/BackoffStrategy;` @kind static;
  #L2dc268.  v0:= temp @kind object;
  #L2dc26a.  `@@com.adjust.sdk.BackoffStrategy.$VALUES` @type ^`com.adjust.sdk.BackoffStrategy`[] := v0 @kind object;
  #L2dc26e.  return @kind void;
}
procedure `void` `<init>`(`com.adjust.sdk.BackoffStrategy` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 , `long` v4 , `long` v6 , `double` v8 , `double` v10 ) @signature `Lcom/adjust/sdk/BackoffStrategy;.<init>:(Ljava/lang/String;IIJJDD)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2dc280.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2dc286.  v0.`com.adjust.sdk.BackoffStrategy.minRetries` @type ^`int` := v3;
  #L2dc28a.  v0.`com.adjust.sdk.BackoffStrategy.milliSecondMultiplier` @type ^`long` := v4 @kind wide;
  #L2dc28e.  v0.`com.adjust.sdk.BackoffStrategy.maxWait` @type ^`long` := v6 @kind wide;
  #L2dc292.  v0.`com.adjust.sdk.BackoffStrategy.minRange` @type ^`double` := v8 @kind wide;
  #L2dc296.  v0.`com.adjust.sdk.BackoffStrategy.maxRange` @type ^`double` := v10 @kind wide;
  #L2dc29a.  return @kind void;
}
procedure `com.adjust.sdk.BackoffStrategy` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/adjust/sdk/BackoffStrategy;.valueOf:(Ljava/lang/String;)Lcom/adjust/sdk/BackoffStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dc134.  v0:= constclass @type ^`com.adjust.sdk.BackoffStrategy` @kind object;
  #L2dc138.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2dc13e.  v1:= temp @kind object;
  #L2dc140.  v1:= (`com.adjust.sdk.BackoffStrategy`) v1 @kind object;
  #L2dc144.  return v1 @kind object;
}
procedure `com.adjust.sdk.BackoffStrategy`[] `values`() @signature `Lcom/adjust/sdk/BackoffStrategy;.values:()[Lcom/adjust/sdk/BackoffStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2dc198.  v0:= `@@com.adjust.sdk.BackoffStrategy.$VALUES` @type ^`com.adjust.sdk.BackoffStrategy`[] @kind object;
  #L2dc19c.  call temp:= `clone`(v0) @signature `[Lcom/adjust/sdk/BackoffStrategy;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2dc1a2.  v0:= temp @kind object;
  #L2dc1a4.  v0:= (`com.adjust.sdk.BackoffStrategy`[]) v0 @kind object;
  #L2dc1a8.  return v0 @kind object;
}
