record `com.airbnb.lottie.g` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `com.airbnb.lottie.j0` @kind interface {
  `java.lang.String` `com.airbnb.lottie.g.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicBoolean` `com.airbnb.lottie.g.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.airbnb.lottie.g` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v2 @kind object) @signature `Lcom/airbnb/lottie/g;.<init>:(Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicBoolean;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2e9984.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e998a.  v0.`com.airbnb.lottie.g.a` @type ^`java.lang.String` := v1 @kind object;
  #L2e998e.  v0.`com.airbnb.lottie.g.b` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v2 @kind object;
  #L2e9992.  return @kind void;
}
procedure `void` `a`(`com.airbnb.lottie.g` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/airbnb/lottie/g;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e99a4.  v0:= v2.`com.airbnb.lottie.g.a` @type ^`java.lang.String` @kind object;
  #L2e99a8.  v1:= v2.`com.airbnb.lottie.g.b` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L2e99ac.  v3:= (`com.airbnb.lottie.e0`) v3 @kind object;
  #L2e99b0.  call `x`(v0, v1, v3) @signature `Lcom/airbnb/lottie/f0;.x:(Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicBoolean;Lcom/airbnb/lottie/e0;)V` @kind static;
  #L2e99b6.  return @kind void;
}
