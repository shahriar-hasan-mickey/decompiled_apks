record `com.airbnb.lottie.w0.b.y` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.w0.b.e` @kind interface, `com.airbnb.lottie.w0.c.b` @kind interface {
  `java.lang.String` `com.airbnb.lottie.w0.b.y.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.airbnb.lottie.w0.b.y.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.airbnb.lottie.w0.b.y.c` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.model.content.ShapeTrimPath$Type` `com.airbnb.lottie.w0.b.y.d` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.w0.c.g` `com.airbnb.lottie.w0.b.y.e` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.w0.c.g` `com.airbnb.lottie.w0.b.y.f` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.w0.c.g` `com.airbnb.lottie.w0.b.y.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.w0.b.y` v2 @kind this, `com.airbnb.lottie.model.layer.c` v3 @kind object, `com.airbnb.lottie.model.content.ShapeTrimPath` v4 @kind object) @signature `Lcom/airbnb/lottie/w0/b/y;.<init>:(Lcom/airbnb/lottie/model/layer/c;Lcom/airbnb/lottie/model/content/ShapeTrimPath;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2f3d18.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f3d1e.  v0:= new `java.util.ArrayList`;
  #L2f3d22.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2f3d28.  v2.`com.airbnb.lottie.w0.b.y.c` @type ^`java.util.List` := v0 @kind object;
  #L2f3d2c.  call temp:= `c`(v4) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.c:()Ljava/lang/String;` @kind virtual;
  #L2f3d32.  v0:= temp @kind object;
  #L2f3d34.  v2.`com.airbnb.lottie.w0.b.y.a` @type ^`java.lang.String` := v0 @kind object;
  #L2f3d38.  call temp:= `g`(v4) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.g:()Z` @kind virtual;
  #L2f3d3e.  v0:= temp;
  #L2f3d40.  v2.`com.airbnb.lottie.w0.b.y.b` @type ^`boolean` := v0 @kind boolean;
  #L2f3d44.  call temp:= `f`(v4) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.f:()Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;` @kind virtual;
  #L2f3d4a.  v0:= temp @kind object;
  #L2f3d4c.  v2.`com.airbnb.lottie.w0.b.y.d` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` := v0 @kind object;
  #L2f3d50.  call temp:= `e`(v4) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.e:()Lcom/airbnb/lottie/model/i/b;` @kind virtual;
  #L2f3d56.  v0:= temp @kind object;
  #L2f3d58.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/model/i/b;.a:()Lcom/airbnb/lottie/w0/c/g;` @kind virtual;
  #L2f3d5e.  v0:= temp @kind object;
  #L2f3d60.  v2.`com.airbnb.lottie.w0.b.y.e` @type ^`com.airbnb.lottie.w0.c.g` := v0 @kind object;
  #L2f3d64.  call temp:= `b`(v4) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.b:()Lcom/airbnb/lottie/model/i/b;` @kind virtual;
  #L2f3d6a.  v1:= temp @kind object;
  #L2f3d6c.  call temp:= `a`(v1) @signature `Lcom/airbnb/lottie/model/i/b;.a:()Lcom/airbnb/lottie/w0/c/g;` @kind virtual;
  #L2f3d72.  v1:= temp @kind object;
  #L2f3d74.  v2.`com.airbnb.lottie.w0.b.y.f` @type ^`com.airbnb.lottie.w0.c.g` := v1 @kind object;
  #L2f3d78.  call temp:= `d`(v4) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.d:()Lcom/airbnb/lottie/model/i/b;` @kind virtual;
  #L2f3d7e.  v4:= temp @kind object;
  #L2f3d80.  call temp:= `a`(v4) @signature `Lcom/airbnb/lottie/model/i/b;.a:()Lcom/airbnb/lottie/w0/c/g;` @kind virtual;
  #L2f3d86.  v4:= temp @kind object;
  #L2f3d88.  v2.`com.airbnb.lottie.w0.b.y.g` @type ^`com.airbnb.lottie.w0.c.g` := v4 @kind object;
  #L2f3d8c.  call `f`(v3, v0) @signature `Lcom/airbnb/lottie/model/layer/c;.f:(Lcom/airbnb/lottie/w0/c/g;)V` @kind virtual;
  #L2f3d92.  call `f`(v3, v1) @signature `Lcom/airbnb/lottie/model/layer/c;.f:(Lcom/airbnb/lottie/w0/c/g;)V` @kind virtual;
  #L2f3d98.  call `f`(v3, v4) @signature `Lcom/airbnb/lottie/model/layer/c;.f:(Lcom/airbnb/lottie/w0/c/g;)V` @kind virtual;
  #L2f3d9e.  call `a`(v0, v2) @signature `Lcom/airbnb/lottie/w0/c/g;.a:(Lcom/airbnb/lottie/w0/c/b;)V` @kind virtual;
  #L2f3da4.  call `a`(v1, v2) @signature `Lcom/airbnb/lottie/w0/c/g;.a:(Lcom/airbnb/lottie/w0/c/b;)V` @kind virtual;
  #L2f3daa.  call `a`(v4, v2) @signature `Lcom/airbnb/lottie/w0/c/g;.a:(Lcom/airbnb/lottie/w0/c/b;)V` @kind virtual;
  #L2f3db0.  return @kind void;
}
procedure `void` `a`(`com.airbnb.lottie.w0.b.y` v2 @kind this) @signature `Lcom/airbnb/lottie/w0/b/y;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f3de0.  v0:= 0I;
  #L2f3de2.  v1:= v2.`com.airbnb.lottie.w0.b.y.c` @type ^`java.util.List` @kind object;
  #L2f3de6.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2f3dec.  v1:= temp;
  #L2f3dee.  if v0 >= v1 then goto L2f3e0e;
  #L2f3df2.  v1:= v2.`com.airbnb.lottie.w0.b.y.c` @type ^`java.util.List` @kind object;
  #L2f3df6.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f3dfc.  v1:= temp @kind object;
  #L2f3dfe.  v1:= (`com.airbnb.lottie.w0.c.b`) v1 @kind object;
  #L2f3e02.  call `a`(v1) @signature `Lcom/airbnb/lottie/w0/c/b;.a:()V` @kind interface;
  #L2f3e08.  v0:= v0 + 1;
  #L2f3e0c.  goto L2f3de2;
  #L2f3e0e.  return @kind void;
}
procedure `void` `b`(`com.airbnb.lottie.w0.b.y` v0 @kind this, `java.util.List` v1 @kind object, `java.util.List` v2 @kind object) @signature `Lcom/airbnb/lottie/w0/b/y;.b:(Ljava/util/List;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L2f3e20.  return @kind void;
}
procedure `void` `c`(`com.airbnb.lottie.w0.b.y` v1 @kind this, `com.airbnb.lottie.w0.c.b` v2 @kind object) @signature `Lcom/airbnb/lottie/w0/b/y;.c:(Lcom/airbnb/lottie/w0/c/b;)V` @AccessFlag  {
    temp;
    v0;

  #L2f3dc4.  v0:= v1.`com.airbnb.lottie.w0.b.y.c` @type ^`java.util.List` @kind object;
  #L2f3dc8.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2f3dce.  return @kind void;
}
procedure `com.airbnb.lottie.w0.c.g` `f`(`com.airbnb.lottie.w0.b.y` v1 @kind this) @signature `Lcom/airbnb/lottie/w0/b/y;.f:()Lcom/airbnb/lottie/w0/c/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f3cb8.  v0:= v1.`com.airbnb.lottie.w0.b.y.f` @type ^`com.airbnb.lottie.w0.c.g` @kind object;
  #L2f3cbc.  return v0 @kind object;
}
procedure `com.airbnb.lottie.w0.c.g` `h`(`com.airbnb.lottie.w0.b.y` v1 @kind this) @signature `Lcom/airbnb/lottie/w0/b/y;.h:()Lcom/airbnb/lottie/w0/c/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f3cd0.  v0:= v1.`com.airbnb.lottie.w0.b.y.g` @type ^`com.airbnb.lottie.w0.c.g` @kind object;
  #L2f3cd4.  return v0 @kind object;
}
procedure `com.airbnb.lottie.w0.c.g` `i`(`com.airbnb.lottie.w0.b.y` v1 @kind this) @signature `Lcom/airbnb/lottie/w0/b/y;.i:()Lcom/airbnb/lottie/w0/c/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f3ce8.  v0:= v1.`com.airbnb.lottie.w0.b.y.e` @type ^`com.airbnb.lottie.w0.c.g` @kind object;
  #L2f3cec.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.content.ShapeTrimPath$Type` `j`(`com.airbnb.lottie.w0.b.y` v1 @kind this) @signature `Lcom/airbnb/lottie/w0/b/y;.j:()Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;` @AccessFlag  {
    temp;
    v0;

  #L2f3d00.  v0:= v1.`com.airbnb.lottie.w0.b.y.d` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` @kind object;
  #L2f3d04.  return v0 @kind object;
}
procedure `boolean` `k`(`com.airbnb.lottie.w0.b.y` v1 @kind this) @signature `Lcom/airbnb/lottie/w0/b/y;.k:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f3ca0.  v0:= v1.`com.airbnb.lottie.w0.b.y.b` @type ^`boolean` @kind boolean;
  #L2f3ca4.  return v0;
}
