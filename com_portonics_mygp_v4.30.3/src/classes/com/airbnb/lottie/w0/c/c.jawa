record `com.airbnb.lottie.w0.c.c` @kind class @AccessFlag FINAL extends `com.airbnb.lottie.w0.c.d` @kind interface {
}
procedure `void` `<init>`(`com.airbnb.lottie.w0.c.c` v0 @kind this) @signature `Lcom/airbnb/lottie/w0/c/c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2f3ec8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f3ece.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.w0.c.c` v0 @kind this, `com.airbnb.lottie.w0.c.a` v1 @kind object) @signature `Lcom/airbnb/lottie/w0/c/c;.<init>:(Lcom/airbnb/lottie/w0/c/a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2f3ee0.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/w0/c/c;.<init>:()V` @kind direct;
  #L2f3ee6.  return @kind void;
}
procedure `boolean` `a`(`com.airbnb.lottie.w0.c.c` v1 @kind this, `float` v2 ) @signature `Lcom/airbnb/lottie/w0/c/c;.a:(F)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f3e34.  v2:= new `java.lang.IllegalStateException`;
  #L2f3e38.  v0:= "not implemented" @kind object;
  #L2f3e3c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f3e42.  throw v2;
}
procedure `com.airbnb.lottie.a1.a` `b`(`com.airbnb.lottie.w0.c.c` v2 @kind this) @signature `Lcom/airbnb/lottie/w0/c/c;.b:()Lcom/airbnb/lottie/a1/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f3e7c.  v0:= new `java.lang.IllegalStateException`;
  #L2f3e80.  v1:= "not implemented" @kind object;
  #L2f3e84.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f3e8a.  throw v0;
}
procedure `boolean` `c`(`com.airbnb.lottie.w0.c.c` v0 @kind this, `float` v1 ) @signature `Lcom/airbnb/lottie/w0/c/c;.c:(F)Z` @AccessFlag PUBLIC {
    temp;

  #L2f3e68.  v1:= 0I;
  #L2f3e6a.  return v1;
}
procedure `float` `d`(`com.airbnb.lottie.w0.c.c` v1 @kind this) @signature `Lcom/airbnb/lottie/w0/c/c;.d:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f3e9c.  v0:= 1.0F;
  #L2f3ea0.  return v0;
}
procedure `float` `e`(`com.airbnb.lottie.w0.c.c` v1 @kind this) @signature `Lcom/airbnb/lottie/w0/c/c;.e:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f3eb4.  v0:= 0I;
  #L2f3eb6.  return v0;
}
procedure `boolean` `isEmpty`(`com.airbnb.lottie.w0.c.c` v1 @kind this) @signature `Lcom/airbnb/lottie/w0/c/c;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f3e54.  v0:= 1I;
  #L2f3e56.  return v0;
}
