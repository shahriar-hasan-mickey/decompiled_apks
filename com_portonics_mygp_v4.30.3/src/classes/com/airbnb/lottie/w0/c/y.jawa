record `com.airbnb.lottie.w0.c.y` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.w0.c.g` @kind class {
  `java.lang.Object` `com.airbnb.lottie.w0.c.y.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.w0.c.y` v1 @kind this, `com.airbnb.lottie.a1.c` v2 @kind object) @signature `Lcom/airbnb/lottie/w0/c/y;.<init>:(Lcom/airbnb/lottie/a1/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f61d8.  v0:= 0I;
  #L2f61da.  call `<init>`(v1, v2, v0) @signature `Lcom/airbnb/lottie/w0/c/y;.<init>:(Lcom/airbnb/lottie/a1/c;Ljava/lang/Object;)V` @kind direct;
  #L2f61e0.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.w0.c.y` v1 @kind this, `com.airbnb.lottie.a1.c` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/airbnb/lottie/w0/c/y;.<init>:(Lcom/airbnb/lottie/a1/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f61f4.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L2f61fa.  v0:= temp @kind object;
  #L2f61fc.  call `<init>`(v1, v0) @signature `Lcom/airbnb/lottie/w0/c/g;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2f6202.  call `n`(v1, v2) @signature `Lcom/airbnb/lottie/w0/c/g;.n:(Lcom/airbnb/lottie/a1/c;)V` @kind virtual;
  #L2f6208.  v1.`com.airbnb.lottie.w0.c.y.i` @type ^`java.lang.Object` := v3 @kind object;
  #L2f620c.  return @kind void;
}
procedure `float` `c`(`com.airbnb.lottie.w0.c.y` v1 @kind this) @signature `Lcom/airbnb/lottie/w0/c/y;.c:()F` @AccessFlag  {
    temp;
    v0;

  #L2f6164.  v0:= 1.0F;
  #L2f6168.  return v0;
}
procedure `java.lang.Object` `h`(`com.airbnb.lottie.w0.c.y` v8 @kind this) @signature `Lcom/airbnb/lottie/w0/c/y;.h:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2f617c.  v0:= v8.`com.airbnb.lottie.w0.c.g.e` @type ^`com.airbnb.lottie.a1.c` @kind object;
  #L2f6180.  v4:= v8.`com.airbnb.lottie.w0.c.y.i` @type ^`java.lang.Object` @kind object;
  #L2f6184.  call temp:= `f`(v8) @signature `Lcom/airbnb/lottie/w0/c/g;.f:()F` @kind virtual;
  #L2f618a.  v5:= temp;
  #L2f618c.  call temp:= `f`(v8) @signature `Lcom/airbnb/lottie/w0/c/g;.f:()F` @kind virtual;
  #L2f6192.  v6:= temp;
  #L2f6194.  call temp:= `f`(v8) @signature `Lcom/airbnb/lottie/w0/c/g;.f:()F` @kind virtual;
  #L2f619a.  v7:= temp;
  #L2f619c.  v1:= 0I;
  #L2f619e.  v2:= 0I;
  #L2f61a0.  v3:= v4 @kind object;
  #L2f61a2.  call temp:= `b`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/airbnb/lottie/a1/c;.b:(FFLjava/lang/Object;Ljava/lang/Object;FFF)Ljava/lang/Object;` @kind virtual;
  #L2f61a8.  v0:= temp @kind object;
  #L2f61aa.  return v0 @kind object;
}
procedure `java.lang.Object` `i`(`com.airbnb.lottie.w0.c.y` v0 @kind this, `com.airbnb.lottie.a1.a` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/w0/c/y;.i:(Lcom/airbnb/lottie/a1/a;F)Ljava/lang/Object;` @AccessFlag  {
    temp;

  #L2f61bc.  call temp:= `h`(v0) @signature `Lcom/airbnb/lottie/w0/c/y;.h:()Ljava/lang/Object;` @kind virtual;
  #L2f61c2.  v1:= temp @kind object;
  #L2f61c4.  return v1 @kind object;
}
procedure `void` `k`(`com.airbnb.lottie.w0.c.y` v1 @kind this) @signature `Lcom/airbnb/lottie/w0/c/y;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f6220.  v0:= v1.`com.airbnb.lottie.w0.c.g.e` @type ^`com.airbnb.lottie.a1.c` @kind object;
  #L2f6224.  if v0 == 0 then goto L2f622e;
  #L2f6228.  call `k`(v1) @signature `Lcom/airbnb/lottie/w0/c/g;.k:()V` @kind super;
  #L2f622e.  return @kind void;
}
procedure `void` `m`(`com.airbnb.lottie.w0.c.y` v0 @kind this, `float` v1 ) @signature `Lcom/airbnb/lottie/w0/c/y;.m:(F)V` @AccessFlag PUBLIC {
    temp;

  #L2f6240.  v0.`com.airbnb.lottie.w0.c.g.d` @type ^`float` := v1;
  #L2f6244.  return @kind void;
}
