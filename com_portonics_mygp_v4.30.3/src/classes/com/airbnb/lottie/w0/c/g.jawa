record `com.airbnb.lottie.w0.c.g` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `java.util.List` `com.airbnb.lottie.w0.c.g.a` @AccessFlag FINAL;
  `boolean` `com.airbnb.lottie.w0.c.g.b` @AccessFlag PRIVATE;
  `com.airbnb.lottie.w0.c.d` `com.airbnb.lottie.w0.c.g.c` @AccessFlag PRIVATE_FINAL;
  `float` `com.airbnb.lottie.w0.c.g.d` @AccessFlag PROTECTED;
  `com.airbnb.lottie.a1.c` `com.airbnb.lottie.w0.c.g.e` @AccessFlag PROTECTED;
  `java.lang.Object` `com.airbnb.lottie.w0.c.g.f` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.w0.c.g.g` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.w0.c.g.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.airbnb.lottie.w0.c.g` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lcom/airbnb/lottie/w0/c/g;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2f4400.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f4406.  v0:= new `java.util.ArrayList`;
  #L2f440a.  v1:= 1I;
  #L2f440c.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2f4412.  v2.`com.airbnb.lottie.w0.c.g.a` @type ^`java.util.List` := v0 @kind object;
  #L2f4416.  v0:= 0I;
  #L2f4418.  v2.`com.airbnb.lottie.w0.c.g.b` @type ^`boolean` := v0 @kind boolean;
  #L2f441c.  v0:= 0I;
  #L2f441e.  v2.`com.airbnb.lottie.w0.c.g.d` @type ^`float` := v0;
  #L2f4422.  v0:= 0I;
  #L2f4424.  v2.`com.airbnb.lottie.w0.c.g.f` @type ^`java.lang.Object` := v0 @kind object;
  #L2f4428.  v0:= -1.0F;
  #L2f442c.  v2.`com.airbnb.lottie.w0.c.g.g` @type ^`float` := v0;
  #L2f4430.  v2.`com.airbnb.lottie.w0.c.g.h` @type ^`float` := v0;
  #L2f4434.  call temp:= `o`(v3) @signature `Lcom/airbnb/lottie/w0/c/g;.o:(Ljava/util/List;)Lcom/airbnb/lottie/w0/c/d;` @kind static;
  #L2f443a.  v3:= temp @kind object;
  #L2f443c.  v2.`com.airbnb.lottie.w0.c.g.c` @type ^`com.airbnb.lottie.w0.c.d` := v3 @kind object;
  #L2f4440.  return @kind void;
}
procedure `float` `g`(`com.airbnb.lottie.w0.c.g` v2 @kind this) @signature `Lcom/airbnb/lottie/w0/c/g;.g:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2f4324.  v0:= v2.`com.airbnb.lottie.w0.c.g.g` @type ^`float`;
  #L2f4328.  v1:= -1.0F;
  #L2f432c.  v0:= fcmpl(v0, v1);
  #L2f4330.  if v0 != 0 then goto L2f4344;
  #L2f4334.  v0:= v2.`com.airbnb.lottie.w0.c.g.c` @type ^`com.airbnb.lottie.w0.c.d` @kind object;
  #L2f4338.  call temp:= `e`(v0) @signature `Lcom/airbnb/lottie/w0/c/d;.e:()F` @kind interface;
  #L2f433e.  v0:= temp;
  #L2f4340.  v2.`com.airbnb.lottie.w0.c.g.g` @type ^`float` := v0;
  #L2f4344.  v0:= v2.`com.airbnb.lottie.w0.c.g.g` @type ^`float`;
  #L2f4348.  return v0;
}
procedure `com.airbnb.lottie.w0.c.d` `o`(`java.util.List` v2 @kind object) @signature `Lcom/airbnb/lottie/w0/c/g;.o:(Ljava/util/List;)Lcom/airbnb/lottie/w0/c/d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2f41b8.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2f41be.  v0:= temp;
  #L2f41c0.  if v0 == 0 then goto L2f41d2;
  #L2f41c4.  v2:= new `com.airbnb.lottie.w0.c.c`;
  #L2f41c8.  v0:= 0I;
  #L2f41ca.  call `<init>`(v2, v0) @signature `Lcom/airbnb/lottie/w0/c/c;.<init>:(Lcom/airbnb/lottie/w0/c/a;)V` @kind direct;
  #L2f41d0.  return v2 @kind object;
  #L2f41d2.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2f41d8.  v0:= temp;
  #L2f41da.  v1:= 1I;
  #L2f41dc.  if v0 != v1 then goto L2f41ec;
  #L2f41e0.  v0:= new `com.airbnb.lottie.w0.c.f`;
  #L2f41e4.  call `<init>`(v0, v2) @signature `Lcom/airbnb/lottie/w0/c/f;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2f41ea.  return v0 @kind object;
  #L2f41ec.  v0:= new `com.airbnb.lottie.w0.c.e`;
  #L2f41f0.  call `<init>`(v0, v2) @signature `Lcom/airbnb/lottie/w0/c/e;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2f41f6.  return v0 @kind object;
}
procedure `void` `a`(`com.airbnb.lottie.w0.c.g` v1 @kind this, `com.airbnb.lottie.w0.c.b` v2 @kind object) @signature `Lcom/airbnb/lottie/w0/c/g;.a:(Lcom/airbnb/lottie/w0/c/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f4454.  v0:= v1.`com.airbnb.lottie.w0.c.g.a` @type ^`java.util.List` @kind object;
  #L2f4458.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2f445e.  return @kind void;
}
procedure `com.airbnb.lottie.a1.a` `b`(`com.airbnb.lottie.w0.c.g` v2 @kind this) @signature `Lcom/airbnb/lottie/w0/c/g;.b:()Lcom/airbnb/lottie/a1/a;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2f4208.  v0:= "BaseKeyframeAnimation#getCurrentKeyframe" @kind object;
  #L2f420c.  call `a`(v0) @signature `Lcom/airbnb/lottie/c0;.a:(Ljava/lang/String;)V` @kind static;
  #L2f4212.  v1:= v2.`com.airbnb.lottie.w0.c.g.c` @type ^`com.airbnb.lottie.w0.c.d` @kind object;
  #L2f4216.  call temp:= `b`(v1) @signature `Lcom/airbnb/lottie/w0/c/d;.b:()Lcom/airbnb/lottie/a1/a;` @kind interface;
  #L2f421c.  v1:= temp @kind object;
  #L2f421e.  call temp:= `b`(v0) @signature `Lcom/airbnb/lottie/c0;.b:(Ljava/lang/String;)F` @kind static;
  #L2f4224.  return v1 @kind object;
}
procedure `float` `c`(`com.airbnb.lottie.w0.c.g` v2 @kind this) @signature `Lcom/airbnb/lottie/w0/c/g;.c:()F` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2f4238.  v0:= v2.`com.airbnb.lottie.w0.c.g.h` @type ^`float`;
  #L2f423c.  v1:= -1.0F;
  #L2f4240.  v0:= fcmpl(v0, v1);
  #L2f4244.  if v0 != 0 then goto L2f4258;
  #L2f4248.  v0:= v2.`com.airbnb.lottie.w0.c.g.c` @type ^`com.airbnb.lottie.w0.c.d` @kind object;
  #L2f424c.  call temp:= `d`(v0) @signature `Lcom/airbnb/lottie/w0/c/d;.d:()F` @kind interface;
  #L2f4252.  v0:= temp;
  #L2f4254.  v2.`com.airbnb.lottie.w0.c.g.h` @type ^`float` := v0;
  #L2f4258.  v0:= v2.`com.airbnb.lottie.w0.c.g.h` @type ^`float`;
  #L2f425c.  return v0;
}
procedure `float` `d`(`com.airbnb.lottie.w0.c.g` v2 @kind this) @signature `Lcom/airbnb/lottie/w0/c/g;.d:()F` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2f4270.  call temp:= `b`(v2) @signature `Lcom/airbnb/lottie/w0/c/g;.b:()Lcom/airbnb/lottie/a1/a;` @kind virtual;
  #L2f4276.  v0:= temp @kind object;
  #L2f4278.  if v0 == 0 then goto L2f42a0;
  #L2f427c.  call temp:= `h`(v0) @signature `Lcom/airbnb/lottie/a1/a;.h:()Z` @kind virtual;
  #L2f4282.  v1:= temp;
  #L2f4284.  if v1 == 0 then goto L2f428a;
  #L2f4288.  goto L2f42a0;
  #L2f428a.  v0:= v0.`com.airbnb.lottie.a1.a.d` @type ^`android.view.animation.Interpolator` @kind object;
  #L2f428e.  call temp:= `e`(v2) @signature `Lcom/airbnb/lottie/w0/c/g;.e:()F` @kind virtual;
  #L2f4294.  v1:= temp;
  #L2f4296.  call temp:= `getInterpolation`(v0, v1) @signature `Landroid/view/animation/Interpolator;.getInterpolation:(F)F` @kind interface;
  #L2f429c.  v0:= temp;
  #L2f429e.  return v0;
  #L2f42a0.  v0:= 0I;
  #L2f42a2.  return v0;
}
procedure `float` `e`(`com.airbnb.lottie.w0.c.g` v3 @kind this) @signature `Lcom/airbnb/lottie/w0/c/g;.e:()F` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2f42b4.  v0:= v3.`com.airbnb.lottie.w0.c.g.b` @type ^`boolean` @kind boolean;
  #L2f42b8.  v1:= 0I;
  #L2f42ba.  if v0 == 0 then goto L2f42c0;
  #L2f42be.  return v1;
  #L2f42c0.  call temp:= `b`(v3) @signature `Lcom/airbnb/lottie/w0/c/g;.b:()Lcom/airbnb/lottie/a1/a;` @kind virtual;
  #L2f42c6.  v0:= temp @kind object;
  #L2f42c8.  call temp:= `h`(v0) @signature `Lcom/airbnb/lottie/a1/a;.h:()Z` @kind virtual;
  #L2f42ce.  v2:= temp;
  #L2f42d0.  if v2 == 0 then goto L2f42d6;
  #L2f42d4.  return v1;
  #L2f42d6.  v1:= v3.`com.airbnb.lottie.w0.c.g.d` @type ^`float`;
  #L2f42da.  call temp:= `e`(v0) @signature `Lcom/airbnb/lottie/a1/a;.e:()F` @kind virtual;
  #L2f42e0.  v2:= temp;
  #L2f42e2.  v1:= v1 - v2 @kind float;
  #L2f42e4.  call temp:= `b`(v0) @signature `Lcom/airbnb/lottie/a1/a;.b:()F` @kind virtual;
  #L2f42ea.  v2:= temp;
  #L2f42ec.  call temp:= `e`(v0) @signature `Lcom/airbnb/lottie/a1/a;.e:()F` @kind virtual;
  #L2f42f2.  v0:= temp;
  #L2f42f4.  v2:= v2 - v0 @kind float;
  #L2f42f6.  v1:= v1 / v2 @kind float;
  #L2f42f8.  return v1;
}
procedure `float` `f`(`com.airbnb.lottie.w0.c.g` v1 @kind this) @signature `Lcom/airbnb/lottie/w0/c/g;.f:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f430c.  v0:= v1.`com.airbnb.lottie.w0.c.g.d` @type ^`float`;
  #L2f4310.  return v0;
}
procedure `java.lang.Object` `h`(`com.airbnb.lottie.w0.c.g` v4 @kind this) @signature `Lcom/airbnb/lottie/w0/c/g;.h:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f435c.  call temp:= `e`(v4) @signature `Lcom/airbnb/lottie/w0/c/g;.e:()F` @kind virtual;
  #L2f4362.  v0:= temp;
  #L2f4364.  v1:= v4.`com.airbnb.lottie.w0.c.g.e` @type ^`com.airbnb.lottie.a1.c` @kind object;
  #L2f4368.  if v1 != 0 then goto L2f4382;
  #L2f436c.  v1:= v4.`com.airbnb.lottie.w0.c.g.c` @type ^`com.airbnb.lottie.w0.c.d` @kind object;
  #L2f4370.  call temp:= `a`(v1, v0) @signature `Lcom/airbnb/lottie/w0/c/d;.a:(F)Z` @kind interface;
  #L2f4376.  v1:= temp;
  #L2f4378.  if v1 == 0 then goto L2f4382;
  #L2f437c.  v0:= v4.`com.airbnb.lottie.w0.c.g.f` @type ^`java.lang.Object` @kind object;
  #L2f4380.  return v0 @kind object;
  #L2f4382.  call temp:= `b`(v4) @signature `Lcom/airbnb/lottie/w0/c/g;.b:()Lcom/airbnb/lottie/a1/a;` @kind virtual;
  #L2f4388.  v1:= temp @kind object;
  #L2f438a.  v2:= v1.`com.airbnb.lottie.a1.a.e` @type ^`android.view.animation.Interpolator` @kind object;
  #L2f438e.  if v2 == 0 then goto L2f43b8;
  #L2f4392.  v3:= v1.`com.airbnb.lottie.a1.a.f` @type ^`android.view.animation.Interpolator` @kind object;
  #L2f4396.  if v3 == 0 then goto L2f43b8;
  #L2f439a.  call temp:= `getInterpolation`(v2, v0) @signature `Landroid/view/animation/Interpolator;.getInterpolation:(F)F` @kind interface;
  #L2f43a0.  v2:= temp;
  #L2f43a2.  v3:= v1.`com.airbnb.lottie.a1.a.f` @type ^`android.view.animation.Interpolator` @kind object;
  #L2f43a6.  call temp:= `getInterpolation`(v3, v0) @signature `Landroid/view/animation/Interpolator;.getInterpolation:(F)F` @kind interface;
  #L2f43ac.  v3:= temp;
  #L2f43ae.  call temp:= `j`(v4, v1, v0, v2, v3) @signature `Lcom/airbnb/lottie/w0/c/g;.j:(Lcom/airbnb/lottie/a1/a;FFF)Ljava/lang/Object;` @kind virtual;
  #L2f43b4.  v0:= temp @kind object;
  #L2f43b6.  goto L2f43c8;
  #L2f43b8.  call temp:= `d`(v4) @signature `Lcom/airbnb/lottie/w0/c/g;.d:()F` @kind virtual;
  #L2f43be.  v0:= temp;
  #L2f43c0.  call temp:= `i`(v4, v1, v0) @signature `Lcom/airbnb/lottie/w0/c/g;.i:(Lcom/airbnb/lottie/a1/a;F)Ljava/lang/Object;` @kind virtual;
  #L2f43c6.  v0:= temp @kind object;
  #L2f43c8.  v4.`com.airbnb.lottie.w0.c.g.f` @type ^`java.lang.Object` := v0 @kind object;
  #L2f43cc.  return v0 @kind object;
}
procedure `java.lang.Object` `i`(`com.airbnb.lottie.a1.a` v0 @kind object, `float` v1 ) @signature `Lcom/airbnb/lottie/w0/c/g;.i:(Lcom/airbnb/lottie/a1/a;F)Ljava/lang/Object;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.lang.Object` `j`(`com.airbnb.lottie.w0.c.g` v0 @kind this, `com.airbnb.lottie.a1.a` v1 @kind object, `float` v2 , `float` v3 , `float` v4 ) @signature `Lcom/airbnb/lottie/w0/c/g;.j:(Lcom/airbnb/lottie/a1/a;FFF)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;

  #L2f43e0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L2f43e4.  v2:= "This animation does not support split dimensions!" @kind object;
  #L2f43e8.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f43ee.  throw v1;
}
procedure `void` `k`(`com.airbnb.lottie.w0.c.g` v2 @kind this) @signature `Lcom/airbnb/lottie/w0/c/g;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f4470.  v0:= 0I;
  #L2f4472.  v1:= v2.`com.airbnb.lottie.w0.c.g.a` @type ^`java.util.List` @kind object;
  #L2f4476.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2f447c.  v1:= temp;
  #L2f447e.  if v0 >= v1 then goto L2f449e;
  #L2f4482.  v1:= v2.`com.airbnb.lottie.w0.c.g.a` @type ^`java.util.List` @kind object;
  #L2f4486.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f448c.  v1:= temp @kind object;
  #L2f448e.  v1:= (`com.airbnb.lottie.w0.c.b`) v1 @kind object;
  #L2f4492.  call `a`(v1) @signature `Lcom/airbnb/lottie/w0/c/b;.a:()V` @kind interface;
  #L2f4498.  v0:= v0 + 1;
  #L2f449c.  goto L2f4472;
  #L2f449e.  return @kind void;
}
procedure `void` `l`(`com.airbnb.lottie.w0.c.g` v1 @kind this) @signature `Lcom/airbnb/lottie/w0/c/g;.l:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f44b0.  v0:= 1I;
  #L2f44b2.  v1.`com.airbnb.lottie.w0.c.g.b` @type ^`boolean` := v0 @kind boolean;
  #L2f44b6.  return @kind void;
}
procedure `void` `m`(`com.airbnb.lottie.w0.c.g` v1 @kind this, `float` v2 ) @signature `Lcom/airbnb/lottie/w0/c/g;.m:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f44c8.  v0:= v1.`com.airbnb.lottie.w0.c.g.c` @type ^`com.airbnb.lottie.w0.c.d` @kind object;
  #L2f44cc.  call temp:= `isEmpty`(v0) @signature `Lcom/airbnb/lottie/w0/c/d;.isEmpty:()Z` @kind interface;
  #L2f44d2.  v0:= temp;
  #L2f44d4.  if v0 == 0 then goto L2f44da;
  #L2f44d8.  return @kind void;
  #L2f44da.  call temp:= `g`(v1) @signature `Lcom/airbnb/lottie/w0/c/g;.g:()F` @kind direct;
  #L2f44e0.  v0:= temp;
  #L2f44e2.  v0:= fcmpg(v2, v0);
  #L2f44e6.  if v0 >= 0 then goto L2f44f4;
  #L2f44ea.  call temp:= `g`(v1) @signature `Lcom/airbnb/lottie/w0/c/g;.g:()F` @kind direct;
  #L2f44f0.  v2:= temp;
  #L2f44f2.  goto L2f450c;
  #L2f44f4.  call temp:= `c`(v1) @signature `Lcom/airbnb/lottie/w0/c/g;.c:()F` @kind virtual;
  #L2f44fa.  v0:= temp;
  #L2f44fc.  v0:= fcmpl(v2, v0);
  #L2f4500.  if v0 <= 0 then goto L2f450c;
  #L2f4504.  call temp:= `c`(v1) @signature `Lcom/airbnb/lottie/w0/c/g;.c:()F` @kind virtual;
  #L2f450a.  v2:= temp;
  #L2f450c.  v0:= v1.`com.airbnb.lottie.w0.c.g.d` @type ^`float`;
  #L2f4510.  v0:= fcmpl(v2, v0);
  #L2f4514.  if v0 != 0 then goto L2f451a;
  #L2f4518.  return @kind void;
  #L2f451a.  v1.`com.airbnb.lottie.w0.c.g.d` @type ^`float` := v2;
  #L2f451e.  v0:= v1.`com.airbnb.lottie.w0.c.g.c` @type ^`com.airbnb.lottie.w0.c.d` @kind object;
  #L2f4522.  call temp:= `c`(v0, v2) @signature `Lcom/airbnb/lottie/w0/c/d;.c:(F)Z` @kind interface;
  #L2f4528.  v2:= temp;
  #L2f452a.  if v2 == 0 then goto L2f4534;
  #L2f452e.  call `k`(v1) @signature `Lcom/airbnb/lottie/w0/c/g;.k:()V` @kind virtual;
  #L2f4534.  return @kind void;
}
procedure `void` `n`(`com.airbnb.lottie.w0.c.g` v2 @kind this, `com.airbnb.lottie.a1.c` v3 @kind object) @signature `Lcom/airbnb/lottie/w0/c/g;.n:(Lcom/airbnb/lottie/a1/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f4548.  v0:= v2.`com.airbnb.lottie.w0.c.g.e` @type ^`com.airbnb.lottie.a1.c` @kind object;
  #L2f454c.  if v0 == 0 then goto L2f4558;
  #L2f4550.  v1:= 0I;
  #L2f4552.  call `c`(v0, v1) @signature `Lcom/airbnb/lottie/a1/c;.c:(Lcom/airbnb/lottie/w0/c/g;)V` @kind virtual;
  #L2f4558.  v2.`com.airbnb.lottie.w0.c.g.e` @type ^`com.airbnb.lottie.a1.c` := v3 @kind object;
  #L2f455c.  if v3 == 0 then goto L2f4566;
  #L2f4560.  call `c`(v3, v2) @signature `Lcom/airbnb/lottie/a1/c;.c:(Lcom/airbnb/lottie/w0/c/g;)V` @kind virtual;
  #L2f4566.  return @kind void;
}
