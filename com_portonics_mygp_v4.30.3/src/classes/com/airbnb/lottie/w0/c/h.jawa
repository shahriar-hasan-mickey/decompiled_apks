record `com.airbnb.lottie.w0.c.h` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.w0.c.n` @kind class {
}
procedure `void` `<init>`(`com.airbnb.lottie.w0.c.h` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/airbnb/lottie/w0/c/h;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f46a4.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/w0/c/n;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2f46aa.  return @kind void;
}
procedure `java.lang.Object` `i`(`com.airbnb.lottie.w0.c.h` v0 @kind this, `com.airbnb.lottie.a1.a` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/w0/c/h;.i:(Lcom/airbnb/lottie/a1/a;F)Ljava/lang/Object;` @AccessFlag SYNTHETIC {
    temp;

  #L2f4688.  call temp:= `r`(v0, v1, v2) @signature `Lcom/airbnb/lottie/w0/c/h;.r:(Lcom/airbnb/lottie/a1/a;F)Ljava/lang/Integer;` @kind virtual;
  #L2f468e.  v1:= temp @kind object;
  #L2f4690.  return v1 @kind object;
}
procedure `int` `p`(`com.airbnb.lottie.w0.c.h` v2 @kind this) @signature `Lcom/airbnb/lottie/w0/c/h;.p:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f4578.  call temp:= `b`(v2) @signature `Lcom/airbnb/lottie/w0/c/g;.b:()Lcom/airbnb/lottie/a1/a;` @kind virtual;
  #L2f457e.  v0:= temp @kind object;
  #L2f4580.  call temp:= `d`(v2) @signature `Lcom/airbnb/lottie/w0/c/g;.d:()F` @kind virtual;
  #L2f4586.  v1:= temp;
  #L2f4588.  call temp:= `q`(v2, v0, v1) @signature `Lcom/airbnb/lottie/w0/c/h;.q:(Lcom/airbnb/lottie/a1/a;F)I` @kind virtual;
  #L2f458e.  v0:= temp;
  #L2f4590.  return v0;
}
procedure `int` `q`(`com.airbnb.lottie.w0.c.h` v9 @kind this, `com.airbnb.lottie.a1.a` v10 @kind object, `float` v11 ) @signature `Lcom/airbnb/lottie/w0/c/h;.q:(Lcom/airbnb/lottie/a1/a;F)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2f45a4.  v0:= v10.`com.airbnb.lottie.a1.a.b` @type ^`java.lang.Object` @kind object;
  #L2f45a8.  if v0 == 0 then goto L2f4644;
  #L2f45ac.  v0:= v10.`com.airbnb.lottie.a1.a.c` @type ^`java.lang.Object` @kind object;
  #L2f45b0.  if v0 == 0 then goto L2f4644;
  #L2f45b4.  v1:= v9.`com.airbnb.lottie.w0.c.g.e` @type ^`com.airbnb.lottie.a1.c` @kind object;
  #L2f45b8.  if v1 == 0 then goto L2f460c;
  #L2f45bc.  v2:= v10.`com.airbnb.lottie.a1.a.g` @type ^`float`;
  #L2f45c0.  v0:= v10.`com.airbnb.lottie.a1.a.h` @type ^`java.lang.Float` @kind object;
  #L2f45c4.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2f45ca.  v3:= temp;
  #L2f45cc.  v0:= v10.`com.airbnb.lottie.a1.a.b` @type ^`java.lang.Object` @kind object;
  #L2f45d0.  v4:= v0 @kind object;
  #L2f45d2.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L2f45d6.  v0:= v10.`com.airbnb.lottie.a1.a.c` @type ^`java.lang.Object` @kind object;
  #L2f45da.  v5:= v0 @kind object;
  #L2f45dc.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L2f45e0.  call temp:= `e`(v9) @signature `Lcom/airbnb/lottie/w0/c/g;.e:()F` @kind virtual;
  #L2f45e6.  v7:= temp;
  #L2f45e8.  call temp:= `f`(v9) @signature `Lcom/airbnb/lottie/w0/c/g;.f:()F` @kind virtual;
  #L2f45ee.  v8:= temp;
  #L2f45f0.  v6:= v11;
  #L2f45f2.  call temp:= `b`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/airbnb/lottie/a1/c;.b:(FFLjava/lang/Object;Ljava/lang/Object;FFF)Ljava/lang/Object;` @kind virtual;
  #L2f45f8.  v0:= temp @kind object;
  #L2f45fa.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L2f45fe.  if v0 == 0 then goto L2f460c;
  #L2f4602.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2f4608.  v10:= temp;
  #L2f460a.  return v10;
  #L2f460c.  v0:= 0I;
  #L2f460e.  v1:= 1.0F;
  #L2f4612.  call temp:= `b`(v11, v0, v1) @signature `Lcom/airbnb/lottie/z0/g;.b:(FFF)F` @kind static;
  #L2f4618.  v11:= temp;
  #L2f461a.  v0:= v10.`com.airbnb.lottie.a1.a.b` @type ^`java.lang.Object` @kind object;
  #L2f461e.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L2f4622.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2f4628.  v0:= temp;
  #L2f462a.  v10:= v10.`com.airbnb.lottie.a1.a.c` @type ^`java.lang.Object` @kind object;
  #L2f462e.  v10:= (`java.lang.Integer`) v10 @kind object;
  #L2f4632.  call temp:= `intValue`(v10) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2f4638.  v10:= temp;
  #L2f463a.  call temp:= `c`(v11, v0, v10) @signature `Lcom/airbnb/lottie/z0/b;.c:(FII)I` @kind static;
  #L2f4640.  v10:= temp;
  #L2f4642.  return v10;
  #L2f4644.  v10:= new `java.lang.IllegalStateException`;
  #L2f4648.  v11:= "Missing values for keyframe." @kind object;
  #L2f464c.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f4652.  throw v10;
}
procedure `java.lang.Integer` `r`(`com.airbnb.lottie.w0.c.h` v0 @kind this, `com.airbnb.lottie.a1.a` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/w0/c/h;.r:(Lcom/airbnb/lottie/a1/a;F)Ljava/lang/Integer;` @AccessFlag  {
    temp;

  #L2f4664.  call temp:= `q`(v0, v1, v2) @signature `Lcom/airbnb/lottie/w0/c/h;.q:(Lcom/airbnb/lottie/a1/a;F)I` @kind virtual;
  #L2f466a.  v1:= temp;
  #L2f466c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2f4672.  v1:= temp @kind object;
  #L2f4674.  return v1 @kind object;
}
