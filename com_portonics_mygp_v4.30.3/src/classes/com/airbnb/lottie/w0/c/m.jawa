record `com.airbnb.lottie.w0.c.m` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.w0.c.n` @kind class {
}
procedure `void` `<init>`(`com.airbnb.lottie.w0.c.m` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/airbnb/lottie/w0/c/m;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f4cac.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/w0/c/n;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2f4cb2.  return @kind void;
}
procedure `java.lang.Object` `i`(`com.airbnb.lottie.w0.c.m` v0 @kind this, `com.airbnb.lottie.a1.a` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/w0/c/m;.i:(Lcom/airbnb/lottie/a1/a;F)Ljava/lang/Object;` @AccessFlag SYNTHETIC {
    temp;

  #L2f4c90.  call temp:= `r`(v0, v1, v2) @signature `Lcom/airbnb/lottie/w0/c/m;.r:(Lcom/airbnb/lottie/a1/a;F)Ljava/lang/Integer;` @kind virtual;
  #L2f4c96.  v1:= temp @kind object;
  #L2f4c98.  return v1 @kind object;
}
procedure `int` `p`(`com.airbnb.lottie.w0.c.m` v2 @kind this) @signature `Lcom/airbnb/lottie/w0/c/m;.p:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f4b9c.  call temp:= `b`(v2) @signature `Lcom/airbnb/lottie/w0/c/g;.b:()Lcom/airbnb/lottie/a1/a;` @kind virtual;
  #L2f4ba2.  v0:= temp @kind object;
  #L2f4ba4.  call temp:= `d`(v2) @signature `Lcom/airbnb/lottie/w0/c/g;.d:()F` @kind virtual;
  #L2f4baa.  v1:= temp;
  #L2f4bac.  call temp:= `q`(v2, v0, v1) @signature `Lcom/airbnb/lottie/w0/c/m;.q:(Lcom/airbnb/lottie/a1/a;F)I` @kind virtual;
  #L2f4bb2.  v0:= temp;
  #L2f4bb4.  return v0;
}
procedure `int` `q`(`com.airbnb.lottie.w0.c.m` v9 @kind this, `com.airbnb.lottie.a1.a` v10 @kind object, `float` v11 ) @signature `Lcom/airbnb/lottie/w0/c/m;.q:(Lcom/airbnb/lottie/a1/a;F)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2f4bc8.  v0:= v10.`com.airbnb.lottie.a1.a.b` @type ^`java.lang.Object` @kind object;
  #L2f4bcc.  if v0 == 0 then goto L2f4c4a;
  #L2f4bd0.  v0:= v10.`com.airbnb.lottie.a1.a.c` @type ^`java.lang.Object` @kind object;
  #L2f4bd4.  if v0 == 0 then goto L2f4c4a;
  #L2f4bd8.  v1:= v9.`com.airbnb.lottie.w0.c.g.e` @type ^`com.airbnb.lottie.a1.c` @kind object;
  #L2f4bdc.  if v1 == 0 then goto L2f4c30;
  #L2f4be0.  v2:= v10.`com.airbnb.lottie.a1.a.g` @type ^`float`;
  #L2f4be4.  v0:= v10.`com.airbnb.lottie.a1.a.h` @type ^`java.lang.Float` @kind object;
  #L2f4be8.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2f4bee.  v3:= temp;
  #L2f4bf0.  v0:= v10.`com.airbnb.lottie.a1.a.b` @type ^`java.lang.Object` @kind object;
  #L2f4bf4.  v4:= v0 @kind object;
  #L2f4bf6.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L2f4bfa.  v0:= v10.`com.airbnb.lottie.a1.a.c` @type ^`java.lang.Object` @kind object;
  #L2f4bfe.  v5:= v0 @kind object;
  #L2f4c00.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L2f4c04.  call temp:= `e`(v9) @signature `Lcom/airbnb/lottie/w0/c/g;.e:()F` @kind virtual;
  #L2f4c0a.  v7:= temp;
  #L2f4c0c.  call temp:= `f`(v9) @signature `Lcom/airbnb/lottie/w0/c/g;.f:()F` @kind virtual;
  #L2f4c12.  v8:= temp;
  #L2f4c14.  v6:= v11;
  #L2f4c16.  call temp:= `b`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/airbnb/lottie/a1/c;.b:(FFLjava/lang/Object;Ljava/lang/Object;FFF)Ljava/lang/Object;` @kind virtual;
  #L2f4c1c.  v0:= temp @kind object;
  #L2f4c1e.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L2f4c22.  if v0 == 0 then goto L2f4c30;
  #L2f4c26.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2f4c2c.  v10:= temp;
  #L2f4c2e.  return v10;
  #L2f4c30.  call temp:= `g`(v10) @signature `Lcom/airbnb/lottie/a1/a;.g:()I` @kind virtual;
  #L2f4c36.  v0:= temp;
  #L2f4c38.  call temp:= `d`(v10) @signature `Lcom/airbnb/lottie/a1/a;.d:()I` @kind virtual;
  #L2f4c3e.  v10:= temp;
  #L2f4c40.  call temp:= `j`(v0, v10, v11) @signature `Lcom/airbnb/lottie/z0/g;.j:(IIF)I` @kind static;
  #L2f4c46.  v10:= temp;
  #L2f4c48.  return v10;
  #L2f4c4a.  v10:= new `java.lang.IllegalStateException`;
  #L2f4c4e.  v11:= "Missing values for keyframe." @kind object;
  #L2f4c52.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f4c58.  throw v10;
}
procedure `java.lang.Integer` `r`(`com.airbnb.lottie.w0.c.m` v0 @kind this, `com.airbnb.lottie.a1.a` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/w0/c/m;.r:(Lcom/airbnb/lottie/a1/a;F)Ljava/lang/Integer;` @AccessFlag  {
    temp;

  #L2f4c6c.  call temp:= `q`(v0, v1, v2) @signature `Lcom/airbnb/lottie/w0/c/m;.q:(Lcom/airbnb/lottie/a1/a;F)I` @kind virtual;
  #L2f4c72.  v1:= temp;
  #L2f4c74.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2f4c7a.  v1:= temp @kind object;
  #L2f4c7c.  return v1 @kind object;
}
