record `com.airbnb.lottie.w0.c.i` @kind class @AccessFlag  extends `com.airbnb.lottie.a1.c` @kind class {
  `com.airbnb.lottie.a1.c` `com.airbnb.lottie.w0.c.i.d` @AccessFlag FINAL_SYNTHETIC;
  `com.airbnb.lottie.w0.c.j` `com.airbnb.lottie.w0.c.i.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.airbnb.lottie.w0.c.i` v0 @kind this, `com.airbnb.lottie.w0.c.j` v1 @kind object, `com.airbnb.lottie.a1.c` v2 @kind object) @signature `Lcom/airbnb/lottie/w0/c/i;.<init>:(Lcom/airbnb/lottie/w0/c/j;Lcom/airbnb/lottie/a1/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f471c.  v0.`com.airbnb.lottie.w0.c.i.e` @type ^`com.airbnb.lottie.w0.c.j` := v1 @kind object;
  #L2f4720.  v0.`com.airbnb.lottie.w0.c.i.d` @type ^`com.airbnb.lottie.a1.c` := v2 @kind object;
  #L2f4724.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/a1/c;.<init>:()V` @kind direct;
  #L2f472a.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.airbnb.lottie.w0.c.i` v0 @kind this, `com.airbnb.lottie.a1.b` v1 @kind object) @signature `Lcom/airbnb/lottie/w0/c/i;.a:(Lcom/airbnb/lottie/a1/b;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f4700.  call temp:= `d`(v0, v1) @signature `Lcom/airbnb/lottie/w0/c/i;.d:(Lcom/airbnb/lottie/a1/b;)Ljava/lang/Float;` @kind virtual;
  #L2f4706.  v1:= temp @kind object;
  #L2f4708.  return v1 @kind object;
}
procedure `java.lang.Float` `d`(`com.airbnb.lottie.w0.c.i` v1 @kind this, `com.airbnb.lottie.a1.b` v2 @kind object) @signature `Lcom/airbnb/lottie/w0/c/i;.d:(Lcom/airbnb/lottie/a1/b;)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f46bc.  v0:= v1.`com.airbnb.lottie.w0.c.i.d` @type ^`com.airbnb.lottie.a1.c` @kind object;
  #L2f46c0.  call temp:= `a`(v0, v2) @signature `Lcom/airbnb/lottie/a1/c;.a:(Lcom/airbnb/lottie/a1/b;)Ljava/lang/Object;` @kind virtual;
  #L2f46c6.  v2:= temp @kind object;
  #L2f46c8.  v2:= (`java.lang.Float`) v2 @kind object;
  #L2f46cc.  if v2 != 0 then goto L2f46d4;
  #L2f46d0.  v2:= 0I;
  #L2f46d2.  return v2 @kind object;
  #L2f46d4.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2f46da.  v2:= temp;
  #L2f46dc.  v0:= 1076048691I;
  #L2f46e2.  v2:= v2 * v0 @kind float;
  #L2f46e6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2f46ec.  v2:= temp @kind object;
  #L2f46ee.  return v2 @kind object;
}
