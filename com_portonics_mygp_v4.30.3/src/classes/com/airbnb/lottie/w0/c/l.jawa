record `com.airbnb.lottie.w0.c.l` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.w0.c.n` @kind class {
  `com.airbnb.lottie.model.content.d` `com.airbnb.lottie.w0.c.l.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.w0.c.l` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lcom/airbnb/lottie/w0/c/l;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2f4b48.  call `<init>`(v2, v3) @signature `Lcom/airbnb/lottie/w0/c/n;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2f4b4e.  v0:= 0I;
  #L2f4b50.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f4b56.  v3:= temp @kind object;
  #L2f4b58.  v3:= (`com.airbnb.lottie.a1.a`) v3 @kind object;
  #L2f4b5c.  v3:= v3.`com.airbnb.lottie.a1.a.b` @type ^`java.lang.Object` @kind object;
  #L2f4b60.  v3:= (`com.airbnb.lottie.model.content.d`) v3 @kind object;
  #L2f4b64.  if v3 != 0 then goto L2f4b6a;
  #L2f4b68.  goto L2f4b72;
  #L2f4b6a.  call temp:= `c`(v3) @signature `Lcom/airbnb/lottie/model/content/d;.c:()I` @kind virtual;
  #L2f4b70.  v0:= temp;
  #L2f4b72.  v3:= new `com.airbnb.lottie.model.content.d`;
  #L2f4b76.  v1:= new `float`[v0];
  #L2f4b7a.  v0:= new `int`[v0];
  #L2f4b7e.  call `<init>`(v3, v1, v0) @signature `Lcom/airbnb/lottie/model/content/d;.<init>:([F[I)V` @kind direct;
  #L2f4b84.  v2.`com.airbnb.lottie.w0.c.l.i` @type ^`com.airbnb.lottie.model.content.d` := v3 @kind object;
  #L2f4b88.  return @kind void;
}
procedure `java.lang.Object` `i`(`com.airbnb.lottie.w0.c.l` v0 @kind this, `com.airbnb.lottie.a1.a` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/w0/c/l;.i:(Lcom/airbnb/lottie/a1/a;F)Ljava/lang/Object;` @AccessFlag SYNTHETIC {
    temp;

  #L2f4b2c.  call temp:= `p`(v0, v1, v2) @signature `Lcom/airbnb/lottie/w0/c/l;.p:(Lcom/airbnb/lottie/a1/a;F)Lcom/airbnb/lottie/model/content/d;` @kind virtual;
  #L2f4b32.  v1:= temp @kind object;
  #L2f4b34.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.content.d` `p`(`com.airbnb.lottie.w0.c.l` v2 @kind this, `com.airbnb.lottie.a1.a` v3 @kind object, `float` v4 ) @signature `Lcom/airbnb/lottie/w0/c/l;.p:(Lcom/airbnb/lottie/a1/a;F)Lcom/airbnb/lottie/model/content/d;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2f4afc.  v0:= v2.`com.airbnb.lottie.w0.c.l.i` @type ^`com.airbnb.lottie.model.content.d` @kind object;
  #L2f4b00.  v1:= v3.`com.airbnb.lottie.a1.a.b` @type ^`java.lang.Object` @kind object;
  #L2f4b04.  v1:= (`com.airbnb.lottie.model.content.d`) v1 @kind object;
  #L2f4b08.  v3:= v3.`com.airbnb.lottie.a1.a.c` @type ^`java.lang.Object` @kind object;
  #L2f4b0c.  v3:= (`com.airbnb.lottie.model.content.d`) v3 @kind object;
  #L2f4b10.  call `d`(v0, v1, v3, v4) @signature `Lcom/airbnb/lottie/model/content/d;.d:(Lcom/airbnb/lottie/model/content/d;Lcom/airbnb/lottie/model/content/d;F)V` @kind virtual;
  #L2f4b16.  v3:= v2.`com.airbnb.lottie.w0.c.l.i` @type ^`com.airbnb.lottie.model.content.d` @kind object;
  #L2f4b1a.  return v3 @kind object;
}
