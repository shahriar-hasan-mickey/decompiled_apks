record `com.airbnb.lottie.w0.c.s` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.w0.c.n` @kind class {
  `com.airbnb.lottie.a1.d` `com.airbnb.lottie.w0.c.s.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.w0.c.s` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/airbnb/lottie/w0/c/s;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f51d8.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/w0/c/n;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2f51de.  v1:= new `com.airbnb.lottie.a1.d`;
  #L2f51e2.  call `<init>`(v1) @signature `Lcom/airbnb/lottie/a1/d;.<init>:()V` @kind direct;
  #L2f51e8.  v0.`com.airbnb.lottie.w0.c.s.i` @type ^`com.airbnb.lottie.a1.d` := v1 @kind object;
  #L2f51ec.  return @kind void;
}
procedure `java.lang.Object` `i`(`com.airbnb.lottie.w0.c.s` v0 @kind this, `com.airbnb.lottie.a1.a` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/w0/c/s;.i:(Lcom/airbnb/lottie/a1/a;F)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f51bc.  call temp:= `p`(v0, v1, v2) @signature `Lcom/airbnb/lottie/w0/c/s;.p:(Lcom/airbnb/lottie/a1/a;F)Lcom/airbnb/lottie/a1/d;` @kind virtual;
  #L2f51c2.  v1:= temp @kind object;
  #L2f51c4.  return v1 @kind object;
}
procedure `com.airbnb.lottie.a1.d` `p`(`com.airbnb.lottie.w0.c.s` v10 @kind this, `com.airbnb.lottie.a1.a` v11 @kind object, `float` v12 ) @signature `Lcom/airbnb/lottie/w0/c/s;.p:(Lcom/airbnb/lottie/a1/a;F)Lcom/airbnb/lottie/a1/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2f5104.  v0:= v11.`com.airbnb.lottie.a1.a.b` @type ^`java.lang.Object` @kind object;
  #L2f5108.  if v0 == 0 then goto L2f519c;
  #L2f510c.  v1:= v11.`com.airbnb.lottie.a1.a.c` @type ^`java.lang.Object` @kind object;
  #L2f5110.  if v1 == 0 then goto L2f519c;
  #L2f5114.  v0:= (`com.airbnb.lottie.a1.d`) v0 @kind object;
  #L2f5118.  v1:= (`com.airbnb.lottie.a1.d`) v1 @kind object;
  #L2f511c.  v2:= v10.`com.airbnb.lottie.w0.c.g.e` @type ^`com.airbnb.lottie.a1.c` @kind object;
  #L2f5120.  if v2 == 0 then goto L2f515c;
  #L2f5124.  v3:= v11.`com.airbnb.lottie.a1.a.g` @type ^`float`;
  #L2f5128.  v11:= v11.`com.airbnb.lottie.a1.a.h` @type ^`java.lang.Float` @kind object;
  #L2f512c.  call temp:= `floatValue`(v11) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2f5132.  v4:= temp;
  #L2f5134.  call temp:= `e`(v10) @signature `Lcom/airbnb/lottie/w0/c/g;.e:()F` @kind virtual;
  #L2f513a.  v8:= temp;
  #L2f513c.  call temp:= `f`(v10) @signature `Lcom/airbnb/lottie/w0/c/g;.f:()F` @kind virtual;
  #L2f5142.  v9:= temp;
  #L2f5144.  v5:= v0 @kind object;
  #L2f5146.  v6:= v1 @kind object;
  #L2f5148.  v7:= v12;
  #L2f514a.  call temp:= `b`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/airbnb/lottie/a1/c;.b:(FFLjava/lang/Object;Ljava/lang/Object;FFF)Ljava/lang/Object;` @kind virtual;
  #L2f5150.  v11:= temp @kind object;
  #L2f5152.  v11:= (`com.airbnb.lottie.a1.d`) v11 @kind object;
  #L2f5156.  if v11 == 0 then goto L2f515c;
  #L2f515a.  return v11 @kind object;
  #L2f515c.  v11:= v10.`com.airbnb.lottie.w0.c.s.i` @type ^`com.airbnb.lottie.a1.d` @kind object;
  #L2f5160.  call temp:= `b`(v0) @signature `Lcom/airbnb/lottie/a1/d;.b:()F` @kind virtual;
  #L2f5166.  v2:= temp;
  #L2f5168.  call temp:= `b`(v1) @signature `Lcom/airbnb/lottie/a1/d;.b:()F` @kind virtual;
  #L2f516e.  v3:= temp;
  #L2f5170.  call temp:= `i`(v2, v3, v12) @signature `Lcom/airbnb/lottie/z0/g;.i:(FFF)F` @kind static;
  #L2f5176.  v2:= temp;
  #L2f5178.  call temp:= `c`(v0) @signature `Lcom/airbnb/lottie/a1/d;.c:()F` @kind virtual;
  #L2f517e.  v0:= temp;
  #L2f5180.  call temp:= `c`(v1) @signature `Lcom/airbnb/lottie/a1/d;.c:()F` @kind virtual;
  #L2f5186.  v1:= temp;
  #L2f5188.  call temp:= `i`(v0, v1, v12) @signature `Lcom/airbnb/lottie/z0/g;.i:(FFF)F` @kind static;
  #L2f518e.  v12:= temp;
  #L2f5190.  call `d`(v11, v2, v12) @signature `Lcom/airbnb/lottie/a1/d;.d:(FF)V` @kind virtual;
  #L2f5196.  v11:= v10.`com.airbnb.lottie.w0.c.s.i` @type ^`com.airbnb.lottie.a1.d` @kind object;
  #L2f519a.  return v11 @kind object;
  #L2f519c.  v11:= new `java.lang.IllegalStateException`;
  #L2f51a0.  v12:= "Missing values for keyframe." @kind object;
  #L2f51a4.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f51aa.  throw v11;
}
