record `com.airbnb.lottie.o0` @kind class @AccessFlag PUBLIC {
  `java.util.Set` `com.airbnb.lottie.o0.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.airbnb.lottie.o0.c` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `com.airbnb.lottie.o0.d` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.n0` `com.airbnb.lottie.o0.e` @AccessFlag PRIVATE_VOLATILE;
}
global `java.util.concurrent.Executor` `@@com.airbnb.lottie.o0.a` @AccessFlag PUBLIC_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/o0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2ee278.  call temp:= `newCachedThreadPool`() @signature `Ljava/util/concurrent/Executors;.newCachedThreadPool:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L2ee27e.  v0:= temp @kind object;
  #L2ee280.  `@@com.airbnb.lottie.o0.a` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L2ee284.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.o0` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lcom/airbnb/lottie/o0;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2ee298.  v0:= 0I;
  #L2ee29a.  call `<init>`(v1, v2, v0) @signature `Lcom/airbnb/lottie/o0;.<init>:(Ljava/util/concurrent/Callable;Z)V` @kind direct;
  #L2ee2a0.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.o0` v2 @kind this, `java.util.concurrent.Callable` v3 @kind object, `boolean` v4 ) @signature `Lcom/airbnb/lottie/o0;.<init>:(Ljava/util/concurrent/Callable;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2ee2b4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ee2ba.  v0:= new `java.util.LinkedHashSet`;
  #L2ee2be.  v1:= 1I;
  #L2ee2c0.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashSet;.<init>:(I)V` @kind direct;
  #L2ee2c6.  v2.`com.airbnb.lottie.o0.b` @type ^`java.util.Set` := v0 @kind object;
  #L2ee2ca.  v0:= new `java.util.LinkedHashSet`;
  #L2ee2ce.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashSet;.<init>:(I)V` @kind direct;
  #L2ee2d4.  v2.`com.airbnb.lottie.o0.c` @type ^`java.util.Set` := v0 @kind object;
  #L2ee2d8.  v0:= new `android.os.Handler`;
  #L2ee2dc.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L2ee2e2.  v1:= temp @kind object;
  #L2ee2e4.  call `<init>`(v0, v1) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L2ee2ea.  v2.`com.airbnb.lottie.o0.d` @type ^`android.os.Handler` := v0 @kind object;
  #L2ee2ee.  v0:= 0I;
  #L2ee2f0.  v2.`com.airbnb.lottie.o0.e` @type ^`com.airbnb.lottie.n0` := v0 @kind object;
  #L2ee2f4.  if v4 == 0 then goto L2ee320;
  #L2ee2f8.  call temp:= `call`(v3) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L2ee2fe.  v3:= temp @kind object;
  #L2ee300.  v3:= (`com.airbnb.lottie.n0`) v3 @kind object;
  #L2ee304.  call `k`(v2, v3) @signature `Lcom/airbnb/lottie/o0;.k:(Lcom/airbnb/lottie/n0;)V` @kind direct;
  #L2ee30a.  goto L2ee334;
  #L2ee30c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ee30e.  v4:= new `com.airbnb.lottie.n0`;
  #L2ee312.  call `<init>`(v4, v3) @signature `Lcom/airbnb/lottie/n0;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2ee318.  call `k`(v2, v4) @signature `Lcom/airbnb/lottie/o0;.k:(Lcom/airbnb/lottie/n0;)V` @kind direct;
  #L2ee31e.  goto L2ee334;
  #L2ee320.  v4:= `@@com.airbnb.lottie.o0.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L2ee324.  v0:= new `com.airbnb.lottie.o0$a`;
  #L2ee328.  call `<init>`(v0, v2, v3) @signature `Lcom/airbnb/lottie/o0$a;.<init>:(Lcom/airbnb/lottie/o0;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L2ee32e.  call `execute`(v4, v0) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2ee334.  return @kind void;
  catch `java.lang.Throwable` @[L2ee2f8..L2ee30a] goto L2ee30c;
}
procedure `void` `a`(`com.airbnb.lottie.o0` v0 @kind object, `com.airbnb.lottie.n0` v1 @kind object) @signature `Lcom/airbnb/lottie/o0;.a:(Lcom/airbnb/lottie/o0;Lcom/airbnb/lottie/n0;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2ee354.  call `k`(v0, v1) @signature `Lcom/airbnb/lottie/o0;.k:(Lcom/airbnb/lottie/n0;)V` @kind direct;
  #L2ee35a.  return @kind void;
}
procedure `void` `d`(`com.airbnb.lottie.o0` v2 @kind this) @signature `Lcom/airbnb/lottie/o0;.d:()V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;

  #L2ee384.  v0:= v2.`com.airbnb.lottie.o0.e` @type ^`com.airbnb.lottie.n0` @kind object;
  #L2ee388.  if v0 != 0 then goto L2ee38e;
  #L2ee38c.  return @kind void;
  #L2ee38e.  call temp:= `b`(v0) @signature `Lcom/airbnb/lottie/n0;.b:()Ljava/lang/Object;` @kind virtual;
  #L2ee394.  v1:= temp @kind object;
  #L2ee396.  if v1 == 0 then goto L2ee3aa;
  #L2ee39a.  call temp:= `b`(v0) @signature `Lcom/airbnb/lottie/n0;.b:()Ljava/lang/Object;` @kind virtual;
  #L2ee3a0.  v0:= temp @kind object;
  #L2ee3a2.  call `h`(v2, v0) @signature `Lcom/airbnb/lottie/o0;.h:(Ljava/lang/Object;)V` @kind direct;
  #L2ee3a8.  goto L2ee3b8;
  #L2ee3aa.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/n0;.a:()Ljava/lang/Throwable;` @kind virtual;
  #L2ee3b0.  v0:= temp @kind object;
  #L2ee3b2.  call `f`(v2, v0) @signature `Lcom/airbnb/lottie/o0;.f:(Ljava/lang/Throwable;)V` @kind direct;
  #L2ee3b8.  return @kind void;
}
procedure `void` `f`(`com.airbnb.lottie.o0` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lcom/airbnb/lottie/o0;.f:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2ee3cc.  @monitorenter v2
  #L2ee3ce.  v0:= new `java.util.ArrayList`;
  #L2ee3d2.  v1:= v2.`com.airbnb.lottie.o0.c` @type ^`java.util.Set` @kind object;
  #L2ee3d6.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2ee3dc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2ee3e2.  v1:= temp;
  #L2ee3e4.  if v1 == 0 then goto L2ee3f6;
  #L2ee3e8.  v0:= "Lottie encountered an error but no failure listener was added:" @kind object;
  #L2ee3ec.  call `d`(v0, v3) @signature `Lcom/airbnb/lottie/z0/d;.d:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L2ee3f2.  @monitorexit v2
  #L2ee3f4.  return @kind void;
  #L2ee3f6.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2ee3fc.  v0:= temp @kind object;
  #L2ee3fe.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2ee404.  v1:= temp;
  #L2ee406.  if v1 == 0 then goto L2ee41e;
  #L2ee40a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2ee410.  v1:= temp @kind object;
  #L2ee412.  v1:= (`com.airbnb.lottie.j0`) v1 @kind object;
  #L2ee416.  call `a`(v1, v3) @signature `Lcom/airbnb/lottie/j0;.a:(Ljava/lang/Object;)V` @kind interface;
  #L2ee41c.  goto L2ee3fe;
  #L2ee41e.  @monitorexit v2
  #L2ee420.  return @kind void;
  #L2ee422.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ee424.  @monitorexit v2
  #L2ee426.  goto L2ee42a;
  #L2ee428.  throw v3;
  #L2ee42a.  goto L2ee428;
  catch `java.lang.Throwable` @[L2ee3ce..L2ee3f2] goto L2ee422;
  catch `java.lang.Throwable` @[L2ee3f6..L2ee41c] goto L2ee422;
}
procedure `void` `g`(`com.airbnb.lottie.o0` v2 @kind this) @signature `Lcom/airbnb/lottie/o0;.g:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2ee450.  v0:= v2.`com.airbnb.lottie.o0.d` @type ^`android.os.Handler` @kind object;
  #L2ee454.  v1:= new `com.airbnb.lottie.x`;
  #L2ee458.  call `<init>`(v1, v2) @signature `Lcom/airbnb/lottie/x;.<init>:(Lcom/airbnb/lottie/o0;)V` @kind direct;
  #L2ee45e.  call temp:= `post`(v0, v1) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L2ee464.  return @kind void;
}
procedure `void` `h`(`com.airbnb.lottie.o0` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/airbnb/lottie/o0;.h:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2ee478.  @monitorenter v2
  #L2ee47a.  v0:= new `java.util.ArrayList`;
  #L2ee47e.  v1:= v2.`com.airbnb.lottie.o0.b` @type ^`java.util.Set` @kind object;
  #L2ee482.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2ee488.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2ee48e.  v0:= temp @kind object;
  #L2ee490.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2ee496.  v1:= temp;
  #L2ee498.  if v1 == 0 then goto L2ee4b0;
  #L2ee49c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2ee4a2.  v1:= temp @kind object;
  #L2ee4a4.  v1:= (`com.airbnb.lottie.j0`) v1 @kind object;
  #L2ee4a8.  call `a`(v1, v3) @signature `Lcom/airbnb/lottie/j0;.a:(Ljava/lang/Object;)V` @kind interface;
  #L2ee4ae.  goto L2ee490;
  #L2ee4b0.  @monitorexit v2
  #L2ee4b2.  return @kind void;
  #L2ee4b4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ee4b6.  @monitorexit v2
  #L2ee4b8.  goto L2ee4bc;
  #L2ee4ba.  throw v3;
  #L2ee4bc.  goto L2ee4ba;
  catch `java.lang.Throwable` @[L2ee47a..L2ee4ae] goto L2ee4b4;
}
procedure `void` `k`(`com.airbnb.lottie.o0` v1 @kind this, `com.airbnb.lottie.n0` v2 @kind object) @signature `Lcom/airbnb/lottie/o0;.k:(Lcom/airbnb/lottie/n0;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2ee4dc.  v0:= v1.`com.airbnb.lottie.o0.e` @type ^`com.airbnb.lottie.n0` @kind object;
  #L2ee4e0.  if v0 != 0 then goto L2ee4f0;
  #L2ee4e4.  v1.`com.airbnb.lottie.o0.e` @type ^`com.airbnb.lottie.n0` := v2 @kind object;
  #L2ee4e8.  call `g`(v1) @signature `Lcom/airbnb/lottie/o0;.g:()V` @kind direct;
  #L2ee4ee.  return @kind void;
  #L2ee4f0.  v2:= new `java.lang.IllegalStateException`;
  #L2ee4f4.  v0:= "A task may only be set once." @kind object;
  #L2ee4f8.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ee4fe.  throw v2;
}
procedure `com.airbnb.lottie.o0` `b`(`com.airbnb.lottie.o0` v2 @kind this, `com.airbnb.lottie.j0` v3 @kind object) @signature `Lcom/airbnb/lottie/o0;.b:(Lcom/airbnb/lottie/j0;)Lcom/airbnb/lottie/o0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ee168.  @monitorenter v2
  #L2ee16a.  v0:= v2.`com.airbnb.lottie.o0.e` @type ^`com.airbnb.lottie.n0` @kind object;
  #L2ee16e.  if v0 == 0 then goto L2ee18c;
  #L2ee172.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/n0;.a:()Ljava/lang/Throwable;` @kind virtual;
  #L2ee178.  v1:= temp @kind object;
  #L2ee17a.  if v1 == 0 then goto L2ee18c;
  #L2ee17e.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/n0;.a:()Ljava/lang/Throwable;` @kind virtual;
  #L2ee184.  v0:= temp @kind object;
  #L2ee186.  call `a`(v3, v0) @signature `Lcom/airbnb/lottie/j0;.a:(Ljava/lang/Object;)V` @kind interface;
  #L2ee18c.  v0:= v2.`com.airbnb.lottie.o0.c` @type ^`java.util.Set` @kind object;
  #L2ee190.  call temp:= `add`(v0, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ee196.  @monitorexit v2
  #L2ee198.  return v2 @kind object;
  #L2ee19a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ee19c.  @monitorexit v2
  #L2ee19e.  throw v3;
  catch `java.lang.Throwable` @[L2ee16a..L2ee196] goto L2ee19a;
}
procedure `com.airbnb.lottie.o0` `c`(`com.airbnb.lottie.o0` v2 @kind this, `com.airbnb.lottie.j0` v3 @kind object) @signature `Lcom/airbnb/lottie/o0;.c:(Lcom/airbnb/lottie/j0;)Lcom/airbnb/lottie/o0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ee1bc.  @monitorenter v2
  #L2ee1be.  v0:= v2.`com.airbnb.lottie.o0.e` @type ^`com.airbnb.lottie.n0` @kind object;
  #L2ee1c2.  if v0 == 0 then goto L2ee1e0;
  #L2ee1c6.  call temp:= `b`(v0) @signature `Lcom/airbnb/lottie/n0;.b:()Ljava/lang/Object;` @kind virtual;
  #L2ee1cc.  v1:= temp @kind object;
  #L2ee1ce.  if v1 == 0 then goto L2ee1e0;
  #L2ee1d2.  call temp:= `b`(v0) @signature `Lcom/airbnb/lottie/n0;.b:()Ljava/lang/Object;` @kind virtual;
  #L2ee1d8.  v0:= temp @kind object;
  #L2ee1da.  call `a`(v3, v0) @signature `Lcom/airbnb/lottie/j0;.a:(Ljava/lang/Object;)V` @kind interface;
  #L2ee1e0.  v0:= v2.`com.airbnb.lottie.o0.b` @type ^`java.util.Set` @kind object;
  #L2ee1e4.  call temp:= `add`(v0, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ee1ea.  @monitorexit v2
  #L2ee1ec.  return v2 @kind object;
  #L2ee1ee.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ee1f0.  @monitorexit v2
  #L2ee1f2.  throw v3;
  catch `java.lang.Throwable` @[L2ee1be..L2ee1ea] goto L2ee1ee;
}
procedure `void` `e`(`com.airbnb.lottie.o0` v0 @kind this) @signature `Lcom/airbnb/lottie/o0;.e:()V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2ee36c.  call `d`(v0) @signature `Lcom/airbnb/lottie/o0;.d:()V` @kind direct;
  #L2ee372.  return @kind void;
}
procedure `com.airbnb.lottie.o0` `i`(`com.airbnb.lottie.o0` v1 @kind this, `com.airbnb.lottie.j0` v2 @kind object) @signature `Lcom/airbnb/lottie/o0;.i:(Lcom/airbnb/lottie/j0;)Lcom/airbnb/lottie/o0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ee210.  @monitorenter v1
  #L2ee212.  v0:= v1.`com.airbnb.lottie.o0.c` @type ^`java.util.Set` @kind object;
  #L2ee216.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2ee21c.  @monitorexit v1
  #L2ee21e.  return v1 @kind object;
  #L2ee220.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ee222.  @monitorexit v1
  #L2ee224.  throw v2;
  catch `java.lang.Throwable` @[L2ee212..L2ee21c] goto L2ee220;
}
procedure `com.airbnb.lottie.o0` `j`(`com.airbnb.lottie.o0` v1 @kind this, `com.airbnb.lottie.j0` v2 @kind object) @signature `Lcom/airbnb/lottie/o0;.j:(Lcom/airbnb/lottie/j0;)Lcom/airbnb/lottie/o0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ee244.  @monitorenter v1
  #L2ee246.  v0:= v1.`com.airbnb.lottie.o0.b` @type ^`java.util.Set` @kind object;
  #L2ee24a.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2ee250.  @monitorexit v1
  #L2ee252.  return v1 @kind object;
  #L2ee254.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ee256.  @monitorexit v1
  #L2ee258.  throw v2;
  catch `java.lang.Throwable` @[L2ee246..L2ee250] goto L2ee254;
}
