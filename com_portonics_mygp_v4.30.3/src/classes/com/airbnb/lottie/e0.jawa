record `com.airbnb.lottie.e0` @kind class @AccessFlag PUBLIC {
  `com.airbnb.lottie.r0` `com.airbnb.lottie.e0.a` @AccessFlag PRIVATE_FINAL;
  `java.util.HashSet` `com.airbnb.lottie.e0.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.airbnb.lottie.e0.c` @AccessFlag PRIVATE;
  `java.util.Map` `com.airbnb.lottie.e0.d` @AccessFlag PRIVATE;
  `java.util.Map` `com.airbnb.lottie.e0.e` @AccessFlag PRIVATE;
  `java.util.List` `com.airbnb.lottie.e0.f` @AccessFlag PRIVATE;
  `androidx.collection.h` `com.airbnb.lottie.e0.g` @AccessFlag PRIVATE;
  `androidx.collection.e` `com.airbnb.lottie.e0.h` @AccessFlag PRIVATE;
  `java.util.List` `com.airbnb.lottie.e0.i` @AccessFlag PRIVATE;
  `android.graphics.Rect` `com.airbnb.lottie.e0.j` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.e0.k` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.e0.l` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.e0.m` @AccessFlag PRIVATE;
  `boolean` `com.airbnb.lottie.e0.n` @AccessFlag PRIVATE;
  `int` `com.airbnb.lottie.e0.o` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.airbnb.lottie.e0` v1 @kind this) @signature `Lcom/airbnb/lottie/e0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2ec098.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ec09e.  v0:= new `com.airbnb.lottie.r0`;
  #L2ec0a2.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/r0;.<init>:()V` @kind direct;
  #L2ec0a8.  v1.`com.airbnb.lottie.e0.a` @type ^`com.airbnb.lottie.r0` := v0 @kind object;
  #L2ec0ac.  v0:= new `java.util.HashSet`;
  #L2ec0b0.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L2ec0b6.  v1.`com.airbnb.lottie.e0.b` @type ^`java.util.HashSet` := v0 @kind object;
  #L2ec0ba.  v0:= 0I;
  #L2ec0bc.  v1.`com.airbnb.lottie.e0.o` @type ^`int` := v0;
  #L2ec0c0.  return @kind void;
}
procedure `void` `a`(`com.airbnb.lottie.e0` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/airbnb/lottie/e0;.a:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ec0d4.  call `c`(v2) @signature `Lcom/airbnb/lottie/z0/d;.c:(Ljava/lang/String;)V` @kind static;
  #L2ec0da.  v0:= v1.`com.airbnb.lottie.e0.b` @type ^`java.util.HashSet` @kind object;
  #L2ec0de.  call temp:= `add`(v0, v2) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ec0e4.  return @kind void;
}
procedure `android.graphics.Rect` `b`(`com.airbnb.lottie.e0` v1 @kind this) @signature `Lcom/airbnb/lottie/e0;.b:()Landroid/graphics/Rect;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ebe30.  v0:= v1.`com.airbnb.lottie.e0.j` @type ^`android.graphics.Rect` @kind object;
  #L2ebe34.  return v0 @kind object;
}
procedure `androidx.collection.h` `c`(`com.airbnb.lottie.e0` v1 @kind this) @signature `Lcom/airbnb/lottie/e0;.c:()Landroidx/collection/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ebe48.  v0:= v1.`com.airbnb.lottie.e0.g` @type ^`androidx.collection.h` @kind object;
  #L2ebe4c.  return v0 @kind object;
}
procedure `float` `d`(`com.airbnb.lottie.e0` v2 @kind this) @signature `Lcom/airbnb/lottie/e0;.d:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ebf00.  call temp:= `e`(v2) @signature `Lcom/airbnb/lottie/e0;.e:()F` @kind virtual;
  #L2ebf06.  v0:= temp;
  #L2ebf08.  v1:= v2.`com.airbnb.lottie.e0.m` @type ^`float`;
  #L2ebf0c.  v0:= v0 / v1 @kind float;
  #L2ebf0e.  v1:= 1000.0F;
  #L2ebf12.  v0:= v0 * v1 @kind float;
  #L2ebf16.  v0:= (`long`) v0 @kind f2l;
  #L2ebf18.  v0:= (`float`) v0 @kind l2f;
  #L2ebf1a.  return v0;
}
procedure `float` `e`(`com.airbnb.lottie.e0` v2 @kind this) @signature `Lcom/airbnb/lottie/e0;.e:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ebf2c.  v0:= v2.`com.airbnb.lottie.e0.l` @type ^`float`;
  #L2ebf30.  v1:= v2.`com.airbnb.lottie.e0.k` @type ^`float`;
  #L2ebf34.  v0:= v0 - v1 @kind float;
  #L2ebf36.  return v0;
}
procedure `float` `f`(`com.airbnb.lottie.e0` v1 @kind this) @signature `Lcom/airbnb/lottie/e0;.f:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ebf48.  v0:= v1.`com.airbnb.lottie.e0.l` @type ^`float`;
  #L2ebf4c.  return v0;
}
procedure `java.util.Map` `g`(`com.airbnb.lottie.e0` v1 @kind this) @signature `Lcom/airbnb/lottie/e0;.g:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ec068.  v0:= v1.`com.airbnb.lottie.e0.e` @type ^`java.util.Map` @kind object;
  #L2ec06c.  return v0 @kind object;
}
procedure `float` `h`(`com.airbnb.lottie.e0` v2 @kind this, `float` v3 ) @signature `Lcom/airbnb/lottie/e0;.h:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ebf60.  v0:= v2.`com.airbnb.lottie.e0.k` @type ^`float`;
  #L2ebf64.  v1:= v2.`com.airbnb.lottie.e0.l` @type ^`float`;
  #L2ebf68.  call temp:= `i`(v0, v1, v3) @signature `Lcom/airbnb/lottie/z0/g;.i:(FFF)F` @kind static;
  #L2ebf6e.  v3:= temp;
  #L2ebf70.  return v3;
}
procedure `float` `i`(`com.airbnb.lottie.e0` v1 @kind this) @signature `Lcom/airbnb/lottie/e0;.i:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ebf84.  v0:= v1.`com.airbnb.lottie.e0.m` @type ^`float`;
  #L2ebf88.  return v0;
}
procedure `java.util.Map` `j`(`com.airbnb.lottie.e0` v1 @kind this) @signature `Lcom/airbnb/lottie/e0;.j:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ec080.  v0:= v1.`com.airbnb.lottie.e0.d` @type ^`java.util.Map` @kind object;
  #L2ec084.  return v0 @kind object;
}
procedure `java.util.List` `k`(`com.airbnb.lottie.e0` v1 @kind this) @signature `Lcom/airbnb/lottie/e0;.k:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ec02c.  v0:= v1.`com.airbnb.lottie.e0.i` @type ^`java.util.List` @kind object;
  #L2ec030.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.g` `l`(`com.airbnb.lottie.e0` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lcom/airbnb/lottie/e0;.l:(Ljava/lang/String;)Lcom/airbnb/lottie/model/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ebe90.  v0:= v4.`com.airbnb.lottie.e0.f` @type ^`java.util.List` @kind object;
  #L2ebe94.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2ebe9a.  v0:= temp;
  #L2ebe9c.  v1:= 0I;
  #L2ebe9e.  if v1 >= v0 then goto L2ebec6;
  #L2ebea2.  v2:= v4.`com.airbnb.lottie.e0.f` @type ^`java.util.List` @kind object;
  #L2ebea6.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2ebeac.  v2:= temp @kind object;
  #L2ebeae.  v2:= (`com.airbnb.lottie.model.g`) v2 @kind object;
  #L2ebeb2.  call temp:= `a`(v2, v5) @signature `Lcom/airbnb/lottie/model/g;.a:(Ljava/lang/String;)Z` @kind virtual;
  #L2ebeb8.  v3:= temp;
  #L2ebeba.  if v3 == 0 then goto L2ebec0;
  #L2ebebe.  return v2 @kind object;
  #L2ebec0.  v1:= v1 + 1;
  #L2ebec4.  goto L2ebe9e;
  #L2ebec6.  v5:= 0I;
  #L2ebec8.  return v5 @kind object;
}
procedure `int` `m`(`com.airbnb.lottie.e0` v1 @kind this) @signature `Lcom/airbnb/lottie/e0;.m:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ebfb4.  v0:= v1.`com.airbnb.lottie.e0.o` @type ^`int`;
  #L2ebfb8.  return v0;
}
procedure `com.airbnb.lottie.r0` `n`(`com.airbnb.lottie.e0` v1 @kind this) @signature `Lcom/airbnb/lottie/e0;.n:()Lcom/airbnb/lottie/r0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ebe78.  v0:= v1.`com.airbnb.lottie.e0.a` @type ^`com.airbnb.lottie.r0` @kind object;
  #L2ebe7c.  return v0 @kind object;
}
procedure `java.util.List` `o`(`com.airbnb.lottie.e0` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/airbnb/lottie/e0;.o:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ec044.  v0:= v1.`com.airbnb.lottie.e0.c` @type ^`java.util.Map` @kind object;
  #L2ec048.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ec04e.  v2:= temp @kind object;
  #L2ec050.  v2:= (`java.util.List`) v2 @kind object;
  #L2ec054.  return v2 @kind object;
}
procedure `float` `p`(`com.airbnb.lottie.e0` v1 @kind this) @signature `Lcom/airbnb/lottie/e0;.p:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ebf9c.  v0:= v1.`com.airbnb.lottie.e0.k` @type ^`float`;
  #L2ebfa0.  return v0;
}
procedure `boolean` `q`(`com.airbnb.lottie.e0` v1 @kind this) @signature `Lcom/airbnb/lottie/e0;.q:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ebe60.  v0:= v1.`com.airbnb.lottie.e0.n` @type ^`boolean` @kind boolean;
  #L2ebe64.  return v0;
}
procedure `void` `r`(`com.airbnb.lottie.e0` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/lottie/e0;.r:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ec0f8.  v0:= v1.`com.airbnb.lottie.e0.o` @type ^`int`;
  #L2ec0fc.  v0:= v0 + v2 @kind int;
  #L2ec0fe.  v1.`com.airbnb.lottie.e0.o` @type ^`int` := v0;
  #L2ec102.  return @kind void;
}
procedure `void` `s`(`com.airbnb.lottie.e0` v0 @kind this, `android.graphics.Rect` v1 @kind object, `float` v2 , `float` v3 , `float` v4 , `java.util.List` v5 @kind object, `androidx.collection.e` v6 @kind object, `java.util.Map` v7 @kind object, `java.util.Map` v8 @kind object, `androidx.collection.h` v9 @kind object, `java.util.Map` v10 @kind object, `java.util.List` v11 @kind object) @signature `Lcom/airbnb/lottie/e0;.s:(Landroid/graphics/Rect;FFFLjava/util/List;Landroidx/collection/e;Ljava/util/Map;Ljava/util/Map;Landroidx/collection/h;Ljava/util/Map;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L2ec114.  v0.`com.airbnb.lottie.e0.j` @type ^`android.graphics.Rect` := v1 @kind object;
  #L2ec118.  v0.`com.airbnb.lottie.e0.k` @type ^`float` := v2;
  #L2ec11c.  v0.`com.airbnb.lottie.e0.l` @type ^`float` := v3;
  #L2ec120.  v0.`com.airbnb.lottie.e0.m` @type ^`float` := v4;
  #L2ec124.  v0.`com.airbnb.lottie.e0.i` @type ^`java.util.List` := v5 @kind object;
  #L2ec128.  v0.`com.airbnb.lottie.e0.h` @type ^`androidx.collection.e` := v6 @kind object;
  #L2ec12c.  v0.`com.airbnb.lottie.e0.c` @type ^`java.util.Map` := v7 @kind object;
  #L2ec130.  v0.`com.airbnb.lottie.e0.d` @type ^`java.util.Map` := v8 @kind object;
  #L2ec134.  v0.`com.airbnb.lottie.e0.g` @type ^`androidx.collection.h` := v9 @kind object;
  #L2ec138.  v0.`com.airbnb.lottie.e0.e` @type ^`java.util.Map` := v10 @kind object;
  #L2ec13c.  v0.`com.airbnb.lottie.e0.f` @type ^`java.util.List` := v11 @kind object;
  #L2ec140.  return @kind void;
}
procedure `com.airbnb.lottie.model.layer.Layer` `t`(`com.airbnb.lottie.e0` v1 @kind this, `long` v2 ) @signature `Lcom/airbnb/lottie/e0;.t:(J)Lcom/airbnb/lottie/model/layer/Layer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ebedc.  v0:= v1.`com.airbnb.lottie.e0.h` @type ^`androidx.collection.e` @kind object;
  #L2ebee0.  call temp:= `g`(v0, v2) @signature `Landroidx/collection/e;.g:(J)Ljava/lang/Object;` @kind virtual;
  #L2ebee6.  v2:= temp @kind object;
  #L2ebee8.  v2:= (`com.airbnb.lottie.model.layer.Layer`) v2 @kind object;
  #L2ebeec.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`com.airbnb.lottie.e0` v4 @kind this) @signature `Lcom/airbnb/lottie/e0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ebfcc.  v0:= new `java.lang.StringBuilder`;
  #L2ebfd0.  v1:= "LottieComposition:\n" @kind object;
  #L2ebfd4.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ebfda.  v1:= v4.`com.airbnb.lottie.e0.i` @type ^`java.util.List` @kind object;
  #L2ebfde.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2ebfe4.  v1:= temp @kind object;
  #L2ebfe6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2ebfec.  v2:= temp;
  #L2ebfee.  if v2 == 0 then goto L2ec012;
  #L2ebff2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2ebff8.  v2:= temp @kind object;
  #L2ebffa.  v2:= (`com.airbnb.lottie.model.layer.Layer`) v2 @kind object;
  #L2ebffe.  v3:= "\t" @kind object;
  #L2ec002.  call temp:= `y`(v2, v3) @signature `Lcom/airbnb/lottie/model/layer/Layer;.y:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2ec008.  v2:= temp @kind object;
  #L2ec00a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ec010.  goto L2ebfe6;
  #L2ec012.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ec018.  v0:= temp @kind object;
  #L2ec01a.  return v0 @kind object;
}
procedure `void` `u`(`com.airbnb.lottie.e0` v0 @kind this, `boolean` v1 ) @signature `Lcom/airbnb/lottie/e0;.u:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L2ec154.  v0.`com.airbnb.lottie.e0.n` @type ^`boolean` := v1 @kind boolean;
  #L2ec158.  return @kind void;
}
procedure `void` `v`(`com.airbnb.lottie.e0` v1 @kind this, `boolean` v2 ) @signature `Lcom/airbnb/lottie/e0;.v:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ec16c.  v0:= v1.`com.airbnb.lottie.e0.a` @type ^`com.airbnb.lottie.r0` @kind object;
  #L2ec170.  call `b`(v0, v2) @signature `Lcom/airbnb/lottie/r0;.b:(Z)V` @kind virtual;
  #L2ec176.  return @kind void;
}
