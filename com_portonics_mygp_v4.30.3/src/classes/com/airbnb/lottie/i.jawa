record `com.airbnb.lottie.i` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.concurrent.Callable` @kind interface {
  `java.io.InputStream` `com.airbnb.lottie.i.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.lang.String` `com.airbnb.lottie.i.c` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.airbnb.lottie.i` v0 @kind this, `java.io.InputStream` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/airbnb/lottie/i;.<init>:(Ljava/io/InputStream;Ljava/lang/String;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2e9a28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e9a2e.  v0.`com.airbnb.lottie.i.b` @type ^`java.io.InputStream` := v1 @kind object;
  #L2e9a32.  v0.`com.airbnb.lottie.i.c` @type ^`java.lang.String` := v2 @kind object;
  #L2e9a36.  return @kind void;
}
procedure `java.lang.Object` `call`(`com.airbnb.lottie.i` v2 @kind this) @signature `Lcom/airbnb/lottie/i;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e9a04.  v0:= v2.`com.airbnb.lottie.i.b` @type ^`java.io.InputStream` @kind object;
  #L2e9a08.  v1:= v2.`com.airbnb.lottie.i.c` @type ^`java.lang.String` @kind object;
  #L2e9a0c.  call temp:= `z`(v0, v1) @signature `Lcom/airbnb/lottie/f0;.z:(Ljava/io/InputStream;Ljava/lang/String;)Lcom/airbnb/lottie/n0;` @kind static;
  #L2e9a12.  v0:= temp @kind object;
  #L2e9a14.  return v0 @kind object;
}
