record `com.airbnb.lottie.h` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.concurrent.Callable` @kind interface {
  `com.airbnb.lottie.e0` `com.airbnb.lottie.h.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.airbnb.lottie.h` v0 @kind this, `com.airbnb.lottie.e0` v1 @kind object) @signature `Lcom/airbnb/lottie/h;.<init>:(Lcom/airbnb/lottie/e0;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2e99e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e99ee.  v0.`com.airbnb.lottie.h.b` @type ^`com.airbnb.lottie.e0` := v1 @kind object;
  #L2e99f2.  return @kind void;
}
procedure `java.lang.Object` `call`(`com.airbnb.lottie.h` v1 @kind this) @signature `Lcom/airbnb/lottie/h;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e99c8.  v0:= v1.`com.airbnb.lottie.h.b` @type ^`com.airbnb.lottie.e0` @kind object;
  #L2e99cc.  call temp:= `w`(v0) @signature `Lcom/airbnb/lottie/f0;.w:(Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/n0;` @kind static;
  #L2e99d2.  v0:= temp @kind object;
  #L2e99d4.  return v0 @kind object;
}
