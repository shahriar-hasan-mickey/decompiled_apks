record `com.airbnb.lottie.z0.e` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.z0.a` @kind class, `android.view.Choreographer$FrameCallback` @kind interface {
  `float` `com.airbnb.lottie.z0.e.d` @AccessFlag PRIVATE;
  `boolean` `com.airbnb.lottie.z0.e.e` @AccessFlag PRIVATE;
  `long` `com.airbnb.lottie.z0.e.f` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.z0.e.g` @AccessFlag PRIVATE;
  `int` `com.airbnb.lottie.z0.e.h` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.z0.e.i` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.z0.e.j` @AccessFlag PRIVATE;
  `com.airbnb.lottie.e0` `com.airbnb.lottie.z0.e.k` @AccessFlag PRIVATE;
  `boolean` `com.airbnb.lottie.z0.e.l` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.airbnb.lottie.z0.e` v3 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L30677c.  call `<init>`(v3) @signature `Lcom/airbnb/lottie/z0/a;.<init>:()V` @kind direct;
  #L306782.  v0:= 1.0F;
  #L306786.  v3.`com.airbnb.lottie.z0.e.d` @type ^`float` := v0;
  #L30678a.  v0:= 0I;
  #L30678c.  v3.`com.airbnb.lottie.z0.e.e` @type ^`boolean` := v0 @kind boolean;
  #L306790.  v1:= 0L;
  #L306794.  v3.`com.airbnb.lottie.z0.e.f` @type ^`long` := v1 @kind wide;
  #L306798.  v1:= 0I;
  #L30679a.  v3.`com.airbnb.lottie.z0.e.g` @type ^`float` := v1;
  #L30679e.  v3.`com.airbnb.lottie.z0.e.h` @type ^`int` := v0;
  #L3067a2.  v1:= -822083584I;
  #L3067a6.  v3.`com.airbnb.lottie.z0.e.i` @type ^`float` := v1;
  #L3067aa.  v1:= 1325400064I;
  #L3067ae.  v3.`com.airbnb.lottie.z0.e.j` @type ^`float` := v1;
  #L3067b2.  v3.`com.airbnb.lottie.z0.e.l` @type ^`boolean` := v0 @kind boolean;
  #L3067b6.  return @kind void;
}
procedure `void` `I`(`com.airbnb.lottie.z0.e` v4 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.I:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L306db4.  v0:= v4.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` @kind object;
  #L306db8.  if v0 != 0 then goto L306dbe;
  #L306dbc.  return @kind void;
  #L306dbe.  v0:= v4.`com.airbnb.lottie.z0.e.g` @type ^`float`;
  #L306dc2.  v1:= v4.`com.airbnb.lottie.z0.e.i` @type ^`float`;
  #L306dc6.  v1:= fcmpg(v0, v1);
  #L306dca.  if v1 < 0 then goto L306ddc;
  #L306dce.  v1:= v4.`com.airbnb.lottie.z0.e.j` @type ^`float`;
  #L306dd2.  v0:= fcmpl(v0, v1);
  #L306dd6.  if v0 > 0 then goto L306ddc;
  #L306dda.  return @kind void;
  #L306ddc.  v0:= new `java.lang.IllegalStateException`;
  #L306de0.  v1:= 3I;
  #L306de2.  v1:= new `java.lang.Object`[v1];
  #L306de6.  v2:= 0I;
  #L306de8.  v3:= v4.`com.airbnb.lottie.z0.e.i` @type ^`float`;
  #L306dec.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L306df2.  v3:= temp @kind object;
  #L306df4.  v1[v2]:= v3 @kind object;
  #L306df8.  v2:= 1I;
  #L306dfa.  v3:= v4.`com.airbnb.lottie.z0.e.j` @type ^`float`;
  #L306dfe.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L306e04.  v3:= temp @kind object;
  #L306e06.  v1[v2]:= v3 @kind object;
  #L306e0a.  v2:= 2I;
  #L306e0c.  v3:= v4.`com.airbnb.lottie.z0.e.g` @type ^`float`;
  #L306e10.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L306e16.  v3:= temp @kind object;
  #L306e18.  v1[v2]:= v3 @kind object;
  #L306e1c.  v2:= "Frame must be [%f,%f]. It is %f" @kind object;
  #L306e20.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L306e26.  v1:= temp @kind object;
  #L306e28.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L306e2e.  throw v0;
}
procedure `float` `k`(`com.airbnb.lottie.z0.e` v2 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.k:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L306664.  v0:= v2.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` @kind object;
  #L306668.  if v0 != 0 then goto L306674;
  #L30666c.  v0:= 2139095039I;
  #L306672.  return v0;
  #L306674.  v1:= 1315859240I;
  #L30667a.  call temp:= `i`(v0) @signature `Lcom/airbnb/lottie/e0;.i:()F` @kind virtual;
  #L306680.  v0:= temp;
  #L306682.  v1:= v1 / v0 @kind float;
  #L306684.  v0:= v2.`com.airbnb.lottie.z0.e.d` @type ^`float`;
  #L306688.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L30668e.  v0:= temp;
  #L306690.  v1:= v1 / v0 @kind float;
  #L306692.  return v1;
}
procedure `boolean` `q`(`com.airbnb.lottie.z0.e` v2 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.q:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L306554.  call temp:= `p`(v2) @signature `Lcom/airbnb/lottie/z0/e;.p:()F` @kind virtual;
  #L30655a.  v0:= temp;
  #L30655c.  v1:= 0I;
  #L30655e.  v0:= fcmpg(v0, v1);
  #L306562.  if v0 >= 0 then goto L30656a;
  #L306566.  v0:= 1I;
  #L306568.  goto L30656c;
  #L30656a.  v0:= 0I;
  #L30656c.  return v0;
}
procedure `void` `A`(`com.airbnb.lottie.z0.e` v1 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.A:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L306b5c.  call temp:= `p`(v1) @signature `Lcom/airbnb/lottie/z0/e;.p:()F` @kind virtual;
  #L306b62.  v0:= temp;
  #L306b64.  v0:= -v0 @kind float;
  #L306b66.  call `H`(v1, v0) @signature `Lcom/airbnb/lottie/z0/e;.H:(F)V` @kind virtual;
  #L306b6c.  return @kind void;
}
procedure `void` `B`(`com.airbnb.lottie.z0.e` v2 @kind this, `com.airbnb.lottie.e0` v3 @kind object) @signature `Lcom/airbnb/lottie/z0/e;.B:(Lcom/airbnb/lottie/e0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L306b80.  v0:= v2.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` @kind object;
  #L306b84.  if v0 != 0 then goto L306b8c;
  #L306b88.  v0:= 1I;
  #L306b8a.  goto L306b8e;
  #L306b8c.  v0:= 0I;
  #L306b8e.  v2.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` := v3 @kind object;
  #L306b92.  if v0 == 0 then goto L306bc6;
  #L306b96.  v0:= v2.`com.airbnb.lottie.z0.e.i` @type ^`float`;
  #L306b9a.  call temp:= `p`(v3) @signature `Lcom/airbnb/lottie/e0;.p:()F` @kind virtual;
  #L306ba0.  v1:= temp;
  #L306ba2.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L306ba8.  v0:= temp;
  #L306baa.  v1:= v2.`com.airbnb.lottie.z0.e.j` @type ^`float`;
  #L306bae.  call temp:= `f`(v3) @signature `Lcom/airbnb/lottie/e0;.f:()F` @kind virtual;
  #L306bb4.  v3:= temp;
  #L306bb6.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L306bbc.  v3:= temp;
  #L306bbe.  call `F`(v2, v0, v3) @signature `Lcom/airbnb/lottie/z0/e;.F:(FF)V` @kind virtual;
  #L306bc4.  goto L306be4;
  #L306bc6.  call temp:= `p`(v3) @signature `Lcom/airbnb/lottie/e0;.p:()F` @kind virtual;
  #L306bcc.  v0:= temp;
  #L306bce.  v0:= (`int`) v0 @kind f2i;
  #L306bd0.  v0:= (`float`) v0 @kind i2f;
  #L306bd2.  call temp:= `f`(v3) @signature `Lcom/airbnb/lottie/e0;.f:()F` @kind virtual;
  #L306bd8.  v3:= temp;
  #L306bda.  v3:= (`int`) v3 @kind f2i;
  #L306bdc.  v3:= (`float`) v3 @kind i2f;
  #L306bde.  call `F`(v2, v0, v3) @signature `Lcom/airbnb/lottie/z0/e;.F:(FF)V` @kind virtual;
  #L306be4.  v3:= v2.`com.airbnb.lottie.z0.e.g` @type ^`float`;
  #L306be8.  v0:= 0I;
  #L306bea.  v2.`com.airbnb.lottie.z0.e.g` @type ^`float` := v0;
  #L306bee.  v3:= (`int`) v3 @kind f2i;
  #L306bf0.  v3:= (`float`) v3 @kind i2f;
  #L306bf2.  call `D`(v2, v3) @signature `Lcom/airbnb/lottie/z0/e;.D:(F)V` @kind virtual;
  #L306bf8.  call `f`(v2) @signature `Lcom/airbnb/lottie/z0/a;.f:()V` @kind virtual;
  #L306bfe.  return @kind void;
}
procedure `void` `D`(`com.airbnb.lottie.z0.e` v2 @kind this, `float` v3 ) @signature `Lcom/airbnb/lottie/z0/e;.D:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L306c10.  v0:= v2.`com.airbnb.lottie.z0.e.g` @type ^`float`;
  #L306c14.  v0:= fcmpl(v0, v3);
  #L306c18.  if v0 != 0 then goto L306c1e;
  #L306c1c.  return @kind void;
  #L306c1e.  call temp:= `n`(v2) @signature `Lcom/airbnb/lottie/z0/e;.n:()F` @kind virtual;
  #L306c24.  v0:= temp;
  #L306c26.  call temp:= `l`(v2) @signature `Lcom/airbnb/lottie/z0/e;.l:()F` @kind virtual;
  #L306c2c.  v1:= temp;
  #L306c2e.  call temp:= `b`(v3, v0, v1) @signature `Lcom/airbnb/lottie/z0/g;.b:(FFF)F` @kind static;
  #L306c34.  v3:= temp;
  #L306c36.  v2.`com.airbnb.lottie.z0.e.g` @type ^`float` := v3;
  #L306c3a.  v0:= 0L;
  #L306c3e.  v2.`com.airbnb.lottie.z0.e.f` @type ^`long` := v0 @kind wide;
  #L306c42.  call `f`(v2) @signature `Lcom/airbnb/lottie/z0/a;.f:()V` @kind virtual;
  #L306c48.  return @kind void;
}
procedure `void` `E`(`com.airbnb.lottie.z0.e` v1 @kind this, `float` v2 ) @signature `Lcom/airbnb/lottie/z0/e;.E:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L306c5c.  v0:= v1.`com.airbnb.lottie.z0.e.i` @type ^`float`;
  #L306c60.  call `F`(v1, v0, v2) @signature `Lcom/airbnb/lottie/z0/e;.F:(FF)V` @kind virtual;
  #L306c66.  return @kind void;
}
procedure `void` `F`(`com.airbnb.lottie.z0.e` v3 @kind this, `float` v4 , `float` v5 ) @signature `Lcom/airbnb/lottie/z0/e;.F:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L306c78.  v0:= fcmpl(v4, v5);
  #L306c7c.  if v0 > 0 then goto L306cf8;
  #L306c80.  v0:= v3.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` @kind object;
  #L306c84.  if v0 != 0 then goto L306c90;
  #L306c88.  v0:= -8388609I;
  #L306c8e.  goto L306c98;
  #L306c90.  call temp:= `p`(v0) @signature `Lcom/airbnb/lottie/e0;.p:()F` @kind virtual;
  #L306c96.  v0:= temp;
  #L306c98.  v1:= v3.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` @kind object;
  #L306c9c.  if v1 != 0 then goto L306ca8;
  #L306ca0.  v1:= 2139095039I;
  #L306ca6.  goto L306cb0;
  #L306ca8.  call temp:= `f`(v1) @signature `Lcom/airbnb/lottie/e0;.f:()F` @kind virtual;
  #L306cae.  v1:= temp;
  #L306cb0.  call temp:= `b`(v4, v0, v1) @signature `Lcom/airbnb/lottie/z0/g;.b:(FFF)F` @kind static;
  #L306cb6.  v4:= temp;
  #L306cb8.  call temp:= `b`(v5, v0, v1) @signature `Lcom/airbnb/lottie/z0/g;.b:(FFF)F` @kind static;
  #L306cbe.  v5:= temp;
  #L306cc0.  v0:= v3.`com.airbnb.lottie.z0.e.i` @type ^`float`;
  #L306cc4.  v0:= fcmpl(v4, v0);
  #L306cc8.  if v0 != 0 then goto L306cd8;
  #L306ccc.  v0:= v3.`com.airbnb.lottie.z0.e.j` @type ^`float`;
  #L306cd0.  v0:= fcmpl(v5, v0);
  #L306cd4.  if v0 == 0 then goto L306cf6;
  #L306cd8.  v3.`com.airbnb.lottie.z0.e.i` @type ^`float` := v4;
  #L306cdc.  v3.`com.airbnb.lottie.z0.e.j` @type ^`float` := v5;
  #L306ce0.  v0:= v3.`com.airbnb.lottie.z0.e.g` @type ^`float`;
  #L306ce4.  call temp:= `b`(v0, v4, v5) @signature `Lcom/airbnb/lottie/z0/g;.b:(FFF)F` @kind static;
  #L306cea.  v4:= temp;
  #L306cec.  v4:= (`int`) v4 @kind f2i;
  #L306cee.  v4:= (`float`) v4 @kind i2f;
  #L306cf0.  call `D`(v3, v4) @signature `Lcom/airbnb/lottie/z0/e;.D:(F)V` @kind virtual;
  #L306cf6.  return @kind void;
  #L306cf8.  v0:= new `java.lang.IllegalArgumentException`;
  #L306cfc.  v1:= 2I;
  #L306cfe.  v1:= new `java.lang.Object`[v1];
  #L306d02.  v2:= 0I;
  #L306d04.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L306d0a.  v4:= temp @kind object;
  #L306d0c.  v1[v2]:= v4 @kind object;
  #L306d10.  v4:= 1I;
  #L306d12.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L306d18.  v5:= temp @kind object;
  #L306d1a.  v1[v4]:= v5 @kind object;
  #L306d1e.  v4:= "minFrame (%s) must be <= maxFrame (%s)" @kind object;
  #L306d22.  call temp:= `format`(v4, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L306d28.  v4:= temp @kind object;
  #L306d2a.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L306d30.  throw v0;
}
procedure `void` `G`(`com.airbnb.lottie.z0.e` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/lottie/z0/e;.G:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L306d44.  v2:= (`float`) v2 @kind i2f;
  #L306d46.  v0:= v1.`com.airbnb.lottie.z0.e.j` @type ^`float`;
  #L306d4a.  v0:= (`int`) v0 @kind f2i;
  #L306d4c.  v0:= (`float`) v0 @kind i2f;
  #L306d4e.  call `F`(v1, v2, v0) @signature `Lcom/airbnb/lottie/z0/e;.F:(FF)V` @kind virtual;
  #L306d54.  return @kind void;
}
procedure `void` `H`(`com.airbnb.lottie.z0.e` v0 @kind this, `float` v1 ) @signature `Lcom/airbnb/lottie/z0/e;.H:(F)V` @AccessFlag PUBLIC {
    temp;

  #L306d9c.  v0.`com.airbnb.lottie.z0.e.d` @type ^`float` := v1;
  #L306da0.  return @kind void;
}
procedure `void` `a`(`com.airbnb.lottie.z0.e` v1 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.a:()V` @AccessFlag  {
    temp;
    v0;

  #L3069b4.  call `a`(v1) @signature `Lcom/airbnb/lottie/z0/a;.a:()V` @kind super;
  #L3069ba.  call temp:= `q`(v1) @signature `Lcom/airbnb/lottie/z0/e;.q:()Z` @kind direct;
  #L3069c0.  v0:= temp;
  #L3069c2.  call `b`(v1, v0) @signature `Lcom/airbnb/lottie/z0/a;.b:(Z)V` @kind virtual;
  #L3069c8.  return @kind void;
}
procedure `void` `cancel`(`com.airbnb.lottie.z0.e` v0 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L3067c8.  call `a`(v0) @signature `Lcom/airbnb/lottie/z0/e;.a:()V` @kind virtual;
  #L3067ce.  call `w`(v0) @signature `Lcom/airbnb/lottie/z0/e;.w:()V` @kind virtual;
  #L3067d4.  return @kind void;
}
procedure `void` `doFrame`(`com.airbnb.lottie.z0.e` v6 @kind this, `long` v7 ) @signature `Lcom/airbnb/lottie/z0/e;.doFrame:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L306810.  call `u`(v6) @signature `Lcom/airbnb/lottie/z0/e;.u:()V` @kind virtual;
  #L306816.  v0:= v6.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` @kind object;
  #L30681a.  if v0 == 0 then goto L30697a;
  #L30681e.  call temp:= `isRunning`(v6) @signature `Lcom/airbnb/lottie/z0/e;.isRunning:()Z` @kind virtual;
  #L306824.  v0:= temp;
  #L306826.  if v0 != 0 then goto L30682e;
  #L30682a.  goto L30697a;
  #L30682e.  v0:= "LottieValueAnimator#doFrame" @kind object;
  #L306832.  call `a`(v0) @signature `Lcom/airbnb/lottie/c0;.a:(Ljava/lang/String;)V` @kind static;
  #L306838.  v1:= v6.`com.airbnb.lottie.z0.e.f` @type ^`long` @kind wide;
  #L30683c.  v3:= 0L;
  #L306840.  v5:= lcmp(v1, v3);
  #L306844.  if v5 != 0 then goto L30684a;
  #L306848.  goto L30684e;
  #L30684a.  v3:= v7 - v1 @kind long;
  #L30684e.  call temp:= `k`(v6) @signature `Lcom/airbnb/lottie/z0/e;.k:()F` @kind direct;
  #L306854.  v1:= temp;
  #L306856.  v2:= (`float`) v3 @kind l2f;
  #L306858.  v2:= v2 / v1 @kind float;
  #L30685a.  v1:= v6.`com.airbnb.lottie.z0.e.g` @type ^`float`;
  #L30685e.  call temp:= `q`(v6) @signature `Lcom/airbnb/lottie/z0/e;.q:()Z` @kind direct;
  #L306864.  v3:= temp;
  #L306866.  if v3 == 0 then goto L30686c;
  #L30686a.  v2:= -v2 @kind float;
  #L30686c.  v1:= v1 + v2 @kind float;
  #L30686e.  v6.`com.airbnb.lottie.z0.e.g` @type ^`float` := v1;
  #L306872.  call temp:= `n`(v6) @signature `Lcom/airbnb/lottie/z0/e;.n:()F` @kind virtual;
  #L306878.  v2:= temp;
  #L30687a.  call temp:= `l`(v6) @signature `Lcom/airbnb/lottie/z0/e;.l:()F` @kind virtual;
  #L306880.  v3:= temp;
  #L306882.  call temp:= `d`(v1, v2, v3) @signature `Lcom/airbnb/lottie/z0/g;.d:(FFF)Z` @kind static;
  #L306888.  v1:= temp;
  #L30688a.  v1:= v1 ^~ 1;
  #L30688e.  v2:= v6.`com.airbnb.lottie.z0.e.g` @type ^`float`;
  #L306892.  call temp:= `n`(v6) @signature `Lcom/airbnb/lottie/z0/e;.n:()F` @kind virtual;
  #L306898.  v3:= temp;
  #L30689a.  call temp:= `l`(v6) @signature `Lcom/airbnb/lottie/z0/e;.l:()F` @kind virtual;
  #L3068a0.  v4:= temp;
  #L3068a2.  call temp:= `b`(v2, v3, v4) @signature `Lcom/airbnb/lottie/z0/g;.b:(FFF)F` @kind static;
  #L3068a8.  v2:= temp;
  #L3068aa.  v6.`com.airbnb.lottie.z0.e.g` @type ^`float` := v2;
  #L3068ae.  v6.`com.airbnb.lottie.z0.e.f` @type ^`long` := v7 @kind wide;
  #L3068b2.  call `f`(v6) @signature `Lcom/airbnb/lottie/z0/a;.f:()V` @kind virtual;
  #L3068b8.  if v1 == 0 then goto L30696e;
  #L3068bc.  call temp:= `getRepeatCount`(v6) @signature `Landroid/animation/ValueAnimator;.getRepeatCount:()I` @kind virtual;
  #L3068c2.  v1:= temp;
  #L3068c4.  v2:= -1I;
  #L3068c6.  if v1 == v2 then goto L306914;
  #L3068ca.  v1:= v6.`com.airbnb.lottie.z0.e.h` @type ^`int`;
  #L3068ce.  call temp:= `getRepeatCount`(v6) @signature `Landroid/animation/ValueAnimator;.getRepeatCount:()I` @kind virtual;
  #L3068d4.  v2:= temp;
  #L3068d6.  if v1 < v2 then goto L306914;
  #L3068da.  v7:= v6.`com.airbnb.lottie.z0.e.d` @type ^`float`;
  #L3068de.  v8:= 0I;
  #L3068e0.  v7:= fcmpg(v7, v8);
  #L3068e4.  if v7 >= 0 then goto L3068f2;
  #L3068e8.  call temp:= `n`(v6) @signature `Lcom/airbnb/lottie/z0/e;.n:()F` @kind virtual;
  #L3068ee.  v7:= temp;
  #L3068f0.  goto L3068fa;
  #L3068f2.  call temp:= `l`(v6) @signature `Lcom/airbnb/lottie/z0/e;.l:()F` @kind virtual;
  #L3068f8.  v7:= temp;
  #L3068fa.  v6.`com.airbnb.lottie.z0.e.g` @type ^`float` := v7;
  #L3068fe.  call `w`(v6) @signature `Lcom/airbnb/lottie/z0/e;.w:()V` @kind virtual;
  #L306904.  call temp:= `q`(v6) @signature `Lcom/airbnb/lottie/z0/e;.q:()Z` @kind direct;
  #L30690a.  v7:= temp;
  #L30690c.  call `b`(v6, v7) @signature `Lcom/airbnb/lottie/z0/a;.b:(Z)V` @kind virtual;
  #L306912.  goto L30696e;
  #L306914.  call `d`(v6) @signature `Lcom/airbnb/lottie/z0/a;.d:()V` @kind virtual;
  #L30691a.  v1:= v6.`com.airbnb.lottie.z0.e.h` @type ^`int`;
  #L30691e.  v1:= v1 + 1;
  #L306922.  v6.`com.airbnb.lottie.z0.e.h` @type ^`int` := v1;
  #L306926.  call temp:= `getRepeatMode`(v6) @signature `Landroid/animation/ValueAnimator;.getRepeatMode:()I` @kind virtual;
  #L30692c.  v1:= temp;
  #L30692e.  v2:= 2I;
  #L306930.  if v1 != v2 then goto L306948;
  #L306934.  v1:= v6.`com.airbnb.lottie.z0.e.e` @type ^`boolean` @kind boolean;
  #L306938.  v1:= v1 ^~ 1;
  #L30693c.  v6.`com.airbnb.lottie.z0.e.e` @type ^`boolean` := v1 @kind boolean;
  #L306940.  call `A`(v6) @signature `Lcom/airbnb/lottie/z0/e;.A:()V` @kind virtual;
  #L306946.  goto L30696a;
  #L306948.  call temp:= `q`(v6) @signature `Lcom/airbnb/lottie/z0/e;.q:()Z` @kind direct;
  #L30694e.  v1:= temp;
  #L306950.  if v1 == 0 then goto L30695e;
  #L306954.  call temp:= `l`(v6) @signature `Lcom/airbnb/lottie/z0/e;.l:()F` @kind virtual;
  #L30695a.  v1:= temp;
  #L30695c.  goto L306966;
  #L30695e.  call temp:= `n`(v6) @signature `Lcom/airbnb/lottie/z0/e;.n:()F` @kind virtual;
  #L306964.  v1:= temp;
  #L306966.  v6.`com.airbnb.lottie.z0.e.g` @type ^`float` := v1;
  #L30696a.  v6.`com.airbnb.lottie.z0.e.f` @type ^`long` := v7 @kind wide;
  #L30696e.  call `I`(v6) @signature `Lcom/airbnb/lottie/z0/e;.I:()V` @kind direct;
  #L306974.  call temp:= `b`(v0) @signature `Lcom/airbnb/lottie/c0;.b:(Ljava/lang/String;)F` @kind static;
  #L30697a.  return @kind void;
}
procedure `void` `g`(`com.airbnb.lottie.z0.e` v1 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.g:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3067e8.  v0:= 0I;
  #L3067ea.  v1.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` := v0 @kind object;
  #L3067ee.  v0:= -822083584I;
  #L3067f2.  v1.`com.airbnb.lottie.z0.e.i` @type ^`float` := v0;
  #L3067f6.  v0:= 1325400064I;
  #L3067fa.  v1.`com.airbnb.lottie.z0.e.j` @type ^`float` := v0;
  #L3067fe.  return @kind void;
}
procedure `float` `getAnimatedFraction`(`com.airbnb.lottie.z0.e` v3 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.getAnimatedFraction:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L306598.  v0:= v3.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` @kind object;
  #L30659c.  if v0 != 0 then goto L3065a4;
  #L3065a0.  v0:= 0I;
  #L3065a2.  return v0;
  #L3065a4.  call temp:= `q`(v3) @signature `Lcom/airbnb/lottie/z0/e;.q:()Z` @kind direct;
  #L3065aa.  v0:= temp;
  #L3065ac.  if v0 == 0 then goto L3065d4;
  #L3065b0.  call temp:= `l`(v3) @signature `Lcom/airbnb/lottie/z0/e;.l:()F` @kind virtual;
  #L3065b6.  v0:= temp;
  #L3065b8.  v1:= v3.`com.airbnb.lottie.z0.e.g` @type ^`float`;
  #L3065bc.  v0:= v0 - v1 @kind float;
  #L3065be.  call temp:= `l`(v3) @signature `Lcom/airbnb/lottie/z0/e;.l:()F` @kind virtual;
  #L3065c4.  v1:= temp;
  #L3065c6.  call temp:= `n`(v3) @signature `Lcom/airbnb/lottie/z0/e;.n:()F` @kind virtual;
  #L3065cc.  v2:= temp;
  #L3065ce.  v1:= v1 - v2 @kind float;
  #L3065d0.  v0:= v0 / v1 @kind float;
  #L3065d2.  return v0;
  #L3065d4.  v0:= v3.`com.airbnb.lottie.z0.e.g` @type ^`float`;
  #L3065d8.  call temp:= `n`(v3) @signature `Lcom/airbnb/lottie/z0/e;.n:()F` @kind virtual;
  #L3065de.  v1:= temp;
  #L3065e0.  v0:= v0 - v1 @kind float;
  #L3065e2.  call temp:= `l`(v3) @signature `Lcom/airbnb/lottie/z0/e;.l:()F` @kind virtual;
  #L3065e8.  v1:= temp;
  #L3065ea.  call temp:= `n`(v3) @signature `Lcom/airbnb/lottie/z0/e;.n:()F` @kind virtual;
  #L3065f0.  v2:= temp;
  #L3065f2.  goto L3065ce;
}
procedure `java.lang.Object` `getAnimatedValue`(`com.airbnb.lottie.z0.e` v1 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.getAnimatedValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30672c.  call temp:= `i`(v1) @signature `Lcom/airbnb/lottie/z0/e;.i:()F` @kind virtual;
  #L306732.  v0:= temp;
  #L306734.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L30673a.  v0:= temp @kind object;
  #L30673c.  return v0 @kind object;
}
procedure `long` `getDuration`(`com.airbnb.lottie.z0.e` v2 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.getDuration:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L306750.  v0:= v2.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` @kind object;
  #L306754.  if v0 != 0 then goto L30675e;
  #L306758.  v0:= 0L;
  #L30675c.  goto L306768;
  #L30675e.  call temp:= `d`(v0) @signature `Lcom/airbnb/lottie/e0;.d:()F` @kind virtual;
  #L306764.  v0:= temp;
  #L306766.  v0:= (`long`) v0 @kind f2l;
  #L306768.  return v0 @kind wide;
}
procedure `void` `h`(`com.airbnb.lottie.z0.e` v1 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.h:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30698c.  call `w`(v1) @signature `Lcom/airbnb/lottie/z0/e;.w:()V` @kind virtual;
  #L306992.  call temp:= `q`(v1) @signature `Lcom/airbnb/lottie/z0/e;.q:()Z` @kind direct;
  #L306998.  v0:= temp;
  #L30699a.  call `b`(v1, v0) @signature `Lcom/airbnb/lottie/z0/a;.b:(Z)V` @kind virtual;
  #L3069a0.  return @kind void;
}
procedure `float` `i`(`com.airbnb.lottie.z0.e` v3 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.i:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L306604.  v0:= v3.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` @kind object;
  #L306608.  if v0 != 0 then goto L306610;
  #L30660c.  v0:= 0I;
  #L30660e.  return v0;
  #L306610.  v1:= v3.`com.airbnb.lottie.z0.e.g` @type ^`float`;
  #L306614.  call temp:= `p`(v0) @signature `Lcom/airbnb/lottie/e0;.p:()F` @kind virtual;
  #L30661a.  v0:= temp;
  #L30661c.  v1:= v1 - v0 @kind float;
  #L30661e.  v0:= v3.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` @kind object;
  #L306622.  call temp:= `f`(v0) @signature `Lcom/airbnb/lottie/e0;.f:()F` @kind virtual;
  #L306628.  v0:= temp;
  #L30662a.  v2:= v3.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` @kind object;
  #L30662e.  call temp:= `p`(v2) @signature `Lcom/airbnb/lottie/e0;.p:()F` @kind virtual;
  #L306634.  v2:= temp;
  #L306636.  v0:= v0 - v2 @kind float;
  #L306638.  v1:= v1 / v0 @kind float;
  #L30663a.  return v1;
}
procedure `boolean` `isRunning`(`com.airbnb.lottie.z0.e` v1 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.isRunning:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L306580.  v0:= v1.`com.airbnb.lottie.z0.e.l` @type ^`boolean` @kind boolean;
  #L306584.  return v0;
}
procedure `float` `j`(`com.airbnb.lottie.z0.e` v1 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.j:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30664c.  v0:= v1.`com.airbnb.lottie.z0.e.g` @type ^`float`;
  #L306650.  return v0;
}
procedure `float` `l`(`com.airbnb.lottie.z0.e` v3 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.l:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3066a4.  v0:= v3.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` @kind object;
  #L3066a8.  if v0 != 0 then goto L3066b0;
  #L3066ac.  v0:= 0I;
  #L3066ae.  return v0;
  #L3066b0.  v1:= v3.`com.airbnb.lottie.z0.e.j` @type ^`float`;
  #L3066b4.  v2:= 1325400064I;
  #L3066b8.  v2:= fcmpl(v1, v2);
  #L3066bc.  if v2 != 0 then goto L3066c8;
  #L3066c0.  call temp:= `f`(v0) @signature `Lcom/airbnb/lottie/e0;.f:()F` @kind virtual;
  #L3066c6.  v1:= temp;
  #L3066c8.  return v1;
}
procedure `float` `n`(`com.airbnb.lottie.z0.e` v3 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.n:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3066dc.  v0:= v3.`com.airbnb.lottie.z0.e.k` @type ^`com.airbnb.lottie.e0` @kind object;
  #L3066e0.  if v0 != 0 then goto L3066e8;
  #L3066e4.  v0:= 0I;
  #L3066e6.  return v0;
  #L3066e8.  v1:= v3.`com.airbnb.lottie.z0.e.i` @type ^`float`;
  #L3066ec.  v2:= -822083584I;
  #L3066f0.  v2:= fcmpl(v1, v2);
  #L3066f4.  if v2 != 0 then goto L306700;
  #L3066f8.  call temp:= `p`(v0) @signature `Lcom/airbnb/lottie/e0;.p:()F` @kind virtual;
  #L3066fe.  v1:= temp;
  #L306700.  return v1;
}
procedure `float` `p`(`com.airbnb.lottie.z0.e` v1 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.p:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L306714.  v0:= v1.`com.airbnb.lottie.z0.e.d` @type ^`float`;
  #L306718.  return v0;
}
procedure `void` `r`(`com.airbnb.lottie.z0.e` v0 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.r:()V` @AccessFlag PUBLIC {
    temp;

  #L3069dc.  call `w`(v0) @signature `Lcom/airbnb/lottie/z0/e;.w:()V` @kind virtual;
  #L3069e2.  return @kind void;
}
procedure `void` `setRepeatMode`(`com.airbnb.lottie.z0.e` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/lottie/z0/e;.setRepeatMode:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L306d68.  call `setRepeatMode`(v1, v2) @signature `Landroid/animation/ValueAnimator;.setRepeatMode:(I)V` @kind super;
  #L306d6e.  v0:= 2I;
  #L306d70.  if v2 == v0 then goto L306d88;
  #L306d74.  v2:= v1.`com.airbnb.lottie.z0.e.e` @type ^`boolean` @kind boolean;
  #L306d78.  if v2 == 0 then goto L306d88;
  #L306d7c.  v2:= 0I;
  #L306d7e.  v1.`com.airbnb.lottie.z0.e.e` @type ^`boolean` := v2 @kind boolean;
  #L306d82.  call `A`(v1) @signature `Lcom/airbnb/lottie/z0/e;.A:()V` @kind virtual;
  #L306d88.  return @kind void;
}
procedure `void` `t`(`com.airbnb.lottie.z0.e` v2 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.t:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3069f4.  v0:= 1I;
  #L3069f6.  v2.`com.airbnb.lottie.z0.e.l` @type ^`boolean` := v0 @kind boolean;
  #L3069fa.  call temp:= `q`(v2) @signature `Lcom/airbnb/lottie/z0/e;.q:()Z` @kind direct;
  #L306a00.  v0:= temp;
  #L306a02.  call `e`(v2, v0) @signature `Lcom/airbnb/lottie/z0/a;.e:(Z)V` @kind virtual;
  #L306a08.  call temp:= `q`(v2) @signature `Lcom/airbnb/lottie/z0/e;.q:()Z` @kind direct;
  #L306a0e.  v0:= temp;
  #L306a10.  if v0 == 0 then goto L306a1e;
  #L306a14.  call temp:= `l`(v2) @signature `Lcom/airbnb/lottie/z0/e;.l:()F` @kind virtual;
  #L306a1a.  v0:= temp;
  #L306a1c.  goto L306a26;
  #L306a1e.  call temp:= `n`(v2) @signature `Lcom/airbnb/lottie/z0/e;.n:()F` @kind virtual;
  #L306a24.  v0:= temp;
  #L306a26.  v0:= (`int`) v0 @kind f2i;
  #L306a28.  v0:= (`float`) v0 @kind i2f;
  #L306a2a.  call `D`(v2, v0) @signature `Lcom/airbnb/lottie/z0/e;.D:(F)V` @kind virtual;
  #L306a30.  v0:= 0L;
  #L306a34.  v2.`com.airbnb.lottie.z0.e.f` @type ^`long` := v0 @kind wide;
  #L306a38.  v0:= 0I;
  #L306a3a.  v2.`com.airbnb.lottie.z0.e.h` @type ^`int` := v0;
  #L306a3e.  call `u`(v2) @signature `Lcom/airbnb/lottie/z0/e;.u:()V` @kind virtual;
  #L306a44.  return @kind void;
}
procedure `void` `u`(`com.airbnb.lottie.z0.e` v1 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.u:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L306a58.  call temp:= `isRunning`(v1) @signature `Lcom/airbnb/lottie/z0/e;.isRunning:()Z` @kind virtual;
  #L306a5e.  v0:= temp;
  #L306a60.  if v0 == 0 then goto L306a7a;
  #L306a64.  v0:= 0I;
  #L306a66.  call `y`(v1, v0) @signature `Lcom/airbnb/lottie/z0/e;.y:(Z)V` @kind virtual;
  #L306a6c.  call temp:= `getInstance`() @signature `Landroid/view/Choreographer;.getInstance:()Landroid/view/Choreographer;` @kind static;
  #L306a72.  v0:= temp @kind object;
  #L306a74.  call `postFrameCallback`(v0, v1) @signature `Landroid/view/Choreographer;.postFrameCallback:(Landroid/view/Choreographer$FrameCallback;)V` @kind virtual;
  #L306a7a.  return @kind void;
}
procedure `void` `w`(`com.airbnb.lottie.z0.e` v1 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.w:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L306a8c.  v0:= 1I;
  #L306a8e.  call `y`(v1, v0) @signature `Lcom/airbnb/lottie/z0/e;.y:(Z)V` @kind virtual;
  #L306a94.  return @kind void;
}
procedure `void` `y`(`com.airbnb.lottie.z0.e` v1 @kind this, `boolean` v2 ) @signature `Lcom/airbnb/lottie/z0/e;.y:(Z)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L306aa8.  call temp:= `getInstance`() @signature `Landroid/view/Choreographer;.getInstance:()Landroid/view/Choreographer;` @kind static;
  #L306aae.  v0:= temp @kind object;
  #L306ab0.  call `removeFrameCallback`(v0, v1) @signature `Landroid/view/Choreographer;.removeFrameCallback:(Landroid/view/Choreographer$FrameCallback;)V` @kind virtual;
  #L306ab6.  if v2 == 0 then goto L306ac0;
  #L306aba.  v2:= 0I;
  #L306abc.  v1.`com.airbnb.lottie.z0.e.l` @type ^`boolean` := v2 @kind boolean;
  #L306ac0.  return @kind void;
}
procedure `void` `z`(`com.airbnb.lottie.z0.e` v2 @kind this) @signature `Lcom/airbnb/lottie/z0/e;.z:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L306ad4.  v0:= 1I;
  #L306ad6.  v2.`com.airbnb.lottie.z0.e.l` @type ^`boolean` := v0 @kind boolean;
  #L306ada.  call `u`(v2) @signature `Lcom/airbnb/lottie/z0/e;.u:()V` @kind virtual;
  #L306ae0.  v0:= 0L;
  #L306ae4.  v2.`com.airbnb.lottie.z0.e.f` @type ^`long` := v0 @kind wide;
  #L306ae8.  call temp:= `q`(v2) @signature `Lcom/airbnb/lottie/z0/e;.q:()Z` @kind direct;
  #L306aee.  v0:= temp;
  #L306af0.  if v0 == 0 then goto L306b1a;
  #L306af4.  call temp:= `j`(v2) @signature `Lcom/airbnb/lottie/z0/e;.j:()F` @kind virtual;
  #L306afa.  v0:= temp;
  #L306afc.  call temp:= `n`(v2) @signature `Lcom/airbnb/lottie/z0/e;.n:()F` @kind virtual;
  #L306b02.  v1:= temp;
  #L306b04.  v0:= fcmpl(v0, v1);
  #L306b08.  if v0 != 0 then goto L306b1a;
  #L306b0c.  call temp:= `l`(v2) @signature `Lcom/airbnb/lottie/z0/e;.l:()F` @kind virtual;
  #L306b12.  v0:= temp;
  #L306b14.  v2.`com.airbnb.lottie.z0.e.g` @type ^`float` := v0;
  #L306b18.  goto L306b4a;
  #L306b1a.  call temp:= `q`(v2) @signature `Lcom/airbnb/lottie/z0/e;.q:()Z` @kind direct;
  #L306b20.  v0:= temp;
  #L306b22.  if v0 != 0 then goto L306b4a;
  #L306b26.  call temp:= `j`(v2) @signature `Lcom/airbnb/lottie/z0/e;.j:()F` @kind virtual;
  #L306b2c.  v0:= temp;
  #L306b2e.  call temp:= `l`(v2) @signature `Lcom/airbnb/lottie/z0/e;.l:()F` @kind virtual;
  #L306b34.  v1:= temp;
  #L306b36.  v0:= fcmpl(v0, v1);
  #L306b3a.  if v0 != 0 then goto L306b4a;
  #L306b3e.  call temp:= `n`(v2) @signature `Lcom/airbnb/lottie/z0/e;.n:()F` @kind virtual;
  #L306b44.  v0:= temp;
  #L306b46.  v2.`com.airbnb.lottie.z0.e.g` @type ^`float` := v0;
  #L306b4a.  return @kind void;
}
