record `com.airbnb.lottie.z0.b` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `float` `a`(`float` v4 ) @signature `Lcom/airbnb/lottie/z0/b;.a:(F)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30622c.  v0:= 1025879782I;
  #L306232.  v0:= fcmpg(v4, v0);
  #L306236.  if v0 > 0 then goto L306244;
  #L30623a.  v0:= 1095678034I;
  #L306240.  v4:= v4 / v0 @kind float;
  #L306242.  goto L30626a;
  #L306244.  v0:= 1029785518I;
  #L30624a.  v4:= v4 + v0 @kind float;
  #L30624c.  v0:= 1065814589I;
  #L306252.  v4:= v4 / v0 @kind float;
  #L306254.  v0:= (`double`) v4 @kind f2d;
  #L306256.  v2:= 2.4000000953674316D;
  #L306260.  call temp:= `pow`(v0, v2) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L306266.  v0:= temp @kind wide;
  #L306268.  v4:= (`float`) v0 @kind d2f;
  #L30626a.  return v4;
}
procedure `float` `b`(`float` v4 ) @signature `Lcom/airbnb/lottie/z0/b;.b:(F)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30627c.  v0:= 994913820I;
  #L306282.  v0:= fcmpg(v4, v0);
  #L306286.  if v0 > 0 then goto L306296;
  #L30628a.  v0:= 1095678034I;
  #L306290.  v4:= v4 * v0 @kind float;
  #L306294.  goto L3062c6;
  #L306296.  v0:= (`double`) v4 @kind f2d;
  #L306298.  v2:= 0.4166666567325592D;
  #L3062a2.  call temp:= `pow`(v0, v2) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L3062a8.  v0:= temp @kind wide;
  #L3062aa.  v2:= 1.0549999475479126D;
  #L3062b4.  v0:= v0 * v2 @kind double;
  #L3062b8.  v2:= 0.054999999701976776D;
  #L3062c2.  v0:= v0 - v2 @kind double;
  #L3062c4.  v4:= (`float`) v0 @kind d2f;
  #L3062c6.  return v4;
}
procedure `int` `c`(`float` v7 , `int` v8 , `int` v9 ) @signature `Lcom/airbnb/lottie/z0/b;.c:(FII)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3062d8.  if v8 != v9 then goto L3062de;
  #L3062dc.  return v8;
  #L3062de.  v0:= v8 ^> 24;
  #L3062e2.  v0:= v0 ^& 255;
  #L3062e6.  v0:= (`float`) v0 @kind i2f;
  #L3062e8.  v1:= 255.0F;
  #L3062ec.  v0:= v0 / v1 @kind float;
  #L3062ee.  v2:= v8 ^> 16;
  #L3062f2.  v2:= v2 ^& 255;
  #L3062f6.  v2:= (`float`) v2 @kind i2f;
  #L3062f8.  v2:= v2 / v1 @kind float;
  #L3062fa.  v3:= v8 ^> 8;
  #L3062fe.  v3:= v3 ^& 255;
  #L306302.  v3:= (`float`) v3 @kind i2f;
  #L306304.  v3:= v3 / v1 @kind float;
  #L306306.  v8:= v8 ^& 255;
  #L30630a.  v8:= (`float`) v8 @kind i2f;
  #L30630c.  v8:= v8 / v1 @kind float;
  #L30630e.  v4:= v9 ^> 24;
  #L306312.  v4:= v4 ^& 255;
  #L306316.  v4:= (`float`) v4 @kind i2f;
  #L306318.  v4:= v4 / v1 @kind float;
  #L30631a.  v5:= v9 ^> 16;
  #L30631e.  v5:= v5 ^& 255;
  #L306322.  v5:= (`float`) v5 @kind i2f;
  #L306324.  v5:= v5 / v1 @kind float;
  #L306326.  v6:= v9 ^> 8;
  #L30632a.  v6:= v6 ^& 255;
  #L30632e.  v6:= (`float`) v6 @kind i2f;
  #L306330.  v6:= v6 / v1 @kind float;
  #L306332.  v9:= v9 ^& 255;
  #L306336.  v9:= (`float`) v9 @kind i2f;
  #L306338.  v9:= v9 / v1 @kind float;
  #L30633a.  call temp:= `a`(v2) @signature `Lcom/airbnb/lottie/z0/b;.a:(F)F` @kind static;
  #L306340.  v2:= temp;
  #L306342.  call temp:= `a`(v3) @signature `Lcom/airbnb/lottie/z0/b;.a:(F)F` @kind static;
  #L306348.  v3:= temp;
  #L30634a.  call temp:= `a`(v8) @signature `Lcom/airbnb/lottie/z0/b;.a:(F)F` @kind static;
  #L306350.  v8:= temp;
  #L306352.  call temp:= `a`(v5) @signature `Lcom/airbnb/lottie/z0/b;.a:(F)F` @kind static;
  #L306358.  v5:= temp;
  #L30635a.  call temp:= `a`(v6) @signature `Lcom/airbnb/lottie/z0/b;.a:(F)F` @kind static;
  #L306360.  v6:= temp;
  #L306362.  call temp:= `a`(v9) @signature `Lcom/airbnb/lottie/z0/b;.a:(F)F` @kind static;
  #L306368.  v9:= temp;
  #L30636a.  v4:= v4 - v0 @kind float;
  #L30636c.  v4:= v4 * v7 @kind float;
  #L306370.  v0:= v0 + v4 @kind float;
  #L306372.  v5:= v5 - v2 @kind float;
  #L306374.  v5:= v5 * v7 @kind float;
  #L306378.  v2:= v2 + v5 @kind float;
  #L30637a.  v6:= v6 - v3 @kind float;
  #L30637c.  v6:= v6 * v7 @kind float;
  #L306380.  v3:= v3 + v6 @kind float;
  #L306382.  v9:= v9 - v8 @kind float;
  #L306384.  v7:= v7 * v9 @kind float;
  #L306388.  v8:= v8 + v7 @kind float;
  #L30638a.  v0:= v0 * v1 @kind float;
  #L30638e.  call temp:= `b`(v2) @signature `Lcom/airbnb/lottie/z0/b;.b:(F)F` @kind static;
  #L306394.  v7:= temp;
  #L306396.  v7:= v7 * v1 @kind float;
  #L30639a.  call temp:= `b`(v3) @signature `Lcom/airbnb/lottie/z0/b;.b:(F)F` @kind static;
  #L3063a0.  v9:= temp;
  #L3063a2.  v9:= v9 * v1 @kind float;
  #L3063a6.  call temp:= `b`(v8) @signature `Lcom/airbnb/lottie/z0/b;.b:(F)F` @kind static;
  #L3063ac.  v8:= temp;
  #L3063ae.  v8:= v8 * v1 @kind float;
  #L3063b2.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3063b8.  v0:= temp;
  #L3063ba.  v0:= v0 ^< 24;
  #L3063be.  call temp:= `round`(v7) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3063c4.  v7:= temp;
  #L3063c6.  v7:= v7 ^< 16;
  #L3063ca.  v7:= v7 ^| v0 @kind int;
  #L3063cc.  call temp:= `round`(v9) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3063d2.  v9:= temp;
  #L3063d4.  v9:= v9 ^< 8;
  #L3063d8.  v7:= v7 ^| v9 @kind int;
  #L3063da.  call temp:= `round`(v8) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3063e0.  v8:= temp;
  #L3063e2.  v7:= v7 ^| v8 @kind int;
  #L3063e4.  return v7;
}
