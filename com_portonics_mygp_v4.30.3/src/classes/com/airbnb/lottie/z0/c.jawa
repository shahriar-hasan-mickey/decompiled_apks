record `com.airbnb.lottie.z0.c` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.k0` @kind interface {
}
global `java.util.Set` `@@com.airbnb.lottie.z0.c.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/z0/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3063f8.  v0:= new `java.util.HashSet`;
  #L3063fc.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L306402.  `@@com.airbnb.lottie.z0.c.a` @type ^`java.util.Set` := v0 @kind object;
  #L306406.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.z0.c` v0 @kind this) @signature `Lcom/airbnb/lottie/z0/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L306418.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30641e.  return @kind void;
}
procedure `void` `a`(`com.airbnb.lottie.z0.c` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lcom/airbnb/lottie/z0/c;.a:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L306464.  v1:= `@@com.airbnb.lottie.c0.a` @type ^`boolean` @kind boolean;
  #L306468.  return @kind void;
}
procedure `void` `b`(`com.airbnb.lottie.z0.c` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/airbnb/lottie/z0/c;.b:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L306430.  v0:= 0I;
  #L306432.  call `e`(v1, v2, v0) @signature `Lcom/airbnb/lottie/z0/c;.e:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L306438.  return @kind void;
}
procedure `void` `c`(`com.airbnb.lottie.z0.c` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lcom/airbnb/lottie/z0/c;.c:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L306498.  v3:= `@@com.airbnb.lottie.z0.c.a` @type ^`java.util.Set` @kind object;
  #L30649c.  call temp:= `contains`(v3, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3064a2.  v0:= temp;
  #L3064a4.  if v0 == 0 then goto L3064aa;
  #L3064a8.  return @kind void;
  #L3064aa.  call temp:= `add`(v3, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3064b0.  return @kind void;
}
procedure `void` `d`(`com.airbnb.lottie.z0.c` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/airbnb/lottie/z0/c;.d:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30647c.  v0:= 0I;
  #L30647e.  call `c`(v1, v2, v0) @signature `Lcom/airbnb/lottie/z0/c;.c:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L306484.  return @kind void;
}
procedure `void` `e`(`com.airbnb.lottie.z0.c` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lcom/airbnb/lottie/z0/c;.e:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L30644c.  v1:= `@@com.airbnb.lottie.c0.a` @type ^`boolean` @kind boolean;
  #L306450.  return @kind void;
}
