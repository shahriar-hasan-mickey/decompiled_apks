record `com.airbnb.lottie.network.a` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.network.c` @kind interface {
  `java.net.HttpURLConnection` `com.airbnb.lottie.network.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.network.a` v0 @kind this, `java.net.HttpURLConnection` v1 @kind object) @signature `Lcom/airbnb/lottie/network/a;.<init>:(Ljava/net/HttpURLConnection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2fd140.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fd146.  v0.`com.airbnb.lottie.network.a.b` @type ^`java.net.HttpURLConnection` := v1 @kind object;
  #L2fd14a.  return @kind void;
}
procedure `java.lang.String` `a`(`com.airbnb.lottie.network.a` v2 @kind this, `java.net.HttpURLConnection` v3 @kind object) @signature `Lcom/airbnb/lottie/network/a;.a:(Ljava/net/HttpURLConnection;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2fd0a8.  v0:= new `java.io.BufferedReader`;
  #L2fd0ac.  v1:= new `java.io.InputStreamReader`;
  #L2fd0b0.  call temp:= `getErrorStream`(v3) @signature `Ljava/net/HttpURLConnection;.getErrorStream:()Ljava/io/InputStream;` @kind virtual;
  #L2fd0b6.  v3:= temp @kind object;
  #L2fd0b8.  call `<init>`(v1, v3) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L2fd0be.  call `<init>`(v0, v1) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L2fd0c4.  v3:= new `java.lang.StringBuilder`;
  #L2fd0c8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fd0ce.  call temp:= `readLine`(v0) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L2fd0d4.  v1:= temp @kind object;
  #L2fd0d6.  if v1 == 0 then goto L2fd0ec;
  #L2fd0da.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd0e0.  v1:= 10I;
  #L2fd0e4.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd0ea.  goto L2fd0ce;
  #L2fd0ec.  call `close`(v0) @signature `Ljava/io/BufferedReader;.close:()V` @kind virtual;
  #L2fd0f2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fd0f8.  v3:= temp @kind object;
  #L2fd0fa.  return v3 @kind object;
  #L2fd0fc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2fd0fe.  call `close`(v0) @signature `Ljava/io/BufferedReader;.close:()V` @kind virtual;
  #L2fd104.  goto L2fd108;
  #L2fd106.  throw v3;
  #L2fd108.  goto L2fd106;
  catch `java.lang.Throwable` @[L2fd0ce..L2fd0ea] goto L2fd0fc;
  catch `java.lang.Exception` @[L2fd0ec..L2fd0f2] goto L2fd0f2;
  catch `java.lang.Exception` @[L2fd0fe..L2fd104] goto L2fd104;
}
procedure `java.lang.String` `a0`(`com.airbnb.lottie.network.a` v1 @kind this) @signature `Lcom/airbnb/lottie/network/a;.a0:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fcfd8.  v0:= v1.`com.airbnb.lottie.network.a.b` @type ^`java.net.HttpURLConnection` @kind object;
  #L2fcfdc.  call temp:= `getContentType`(v0) @signature `Ljava/net/HttpURLConnection;.getContentType:()Ljava/lang/String;` @kind virtual;
  #L2fcfe2.  v0:= temp @kind object;
  #L2fcfe4.  return v0 @kind object;
}
procedure `void` `close`(`com.airbnb.lottie.network.a` v1 @kind this) @signature `Lcom/airbnb/lottie/network/a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fd15c.  v0:= v1.`com.airbnb.lottie.network.a.b` @type ^`java.net.HttpURLConnection` @kind object;
  #L2fd160.  call `disconnect`(v0) @signature `Ljava/net/HttpURLConnection;.disconnect:()V` @kind virtual;
  #L2fd166.  return @kind void;
}
procedure `java.io.InputStream` `g0`(`com.airbnb.lottie.network.a` v1 @kind this) @signature `Lcom/airbnb/lottie/network/a;.g0:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fcfb8.  v0:= v1.`com.airbnb.lottie.network.a.b` @type ^`java.net.HttpURLConnection` @kind object;
  #L2fcfbc.  call temp:= `getInputStream`(v0) @signature `Ljava/net/HttpURLConnection;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L2fcfc2.  v0:= temp @kind object;
  #L2fcfc4.  return v0 @kind object;
}
procedure `boolean` `isSuccessful`(`com.airbnb.lottie.network.a` v3 @kind this) @signature `Lcom/airbnb/lottie/network/a;.isSuccessful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2fcf7c.  v0:= 0I;
  #L2fcf7e.  v1:= v3.`com.airbnb.lottie.network.a.b` @type ^`java.net.HttpURLConnection` @kind object;
  #L2fcf82.  call temp:= `getResponseCode`(v1) @signature `Ljava/net/HttpURLConnection;.getResponseCode:()I` @kind virtual;
  #L2fcf88.  v1:= temp;
  #L2fcf8a.  v1:= v1 / 100;
  #L2fcf8e.  v2:= 2I;
  #L2fcf90.  if v1 != v2 then goto L2fcf96;
  #L2fcf94.  v0:= 1I;
  #L2fcf96.  return v0;
  catch `java.io.IOException` @[L2fcf7e..L2fcf8e] goto L2fcf96;
}
procedure `java.lang.String` `z`(`com.airbnb.lottie.network.a` v2 @kind this) @signature `Lcom/airbnb/lottie/network/a;.z:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2fcff8.  call temp:= `isSuccessful`(v2) @signature `Lcom/airbnb/lottie/network/a;.isSuccessful:()Z` @kind virtual;
  #L2fcffe.  v0:= temp;
  #L2fd000.  if v0 == 0 then goto L2fd008;
  #L2fd004.  v0:= 0I;
  #L2fd006.  goto L2fd06e;
  #L2fd008.  v0:= new `java.lang.StringBuilder`;
  #L2fd00c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fd012.  v1:= "Unable to fetch " @kind object;
  #L2fd016.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd01c.  v1:= v2.`com.airbnb.lottie.network.a.b` @type ^`java.net.HttpURLConnection` @kind object;
  #L2fd020.  call temp:= `getURL`(v1) @signature `Ljava/net/HttpURLConnection;.getURL:()Ljava/net/URL;` @kind virtual;
  #L2fd026.  v1:= temp @kind object;
  #L2fd028.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd02e.  v1:= ". Failed with " @kind object;
  #L2fd032.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd038.  v1:= v2.`com.airbnb.lottie.network.a.b` @type ^`java.net.HttpURLConnection` @kind object;
  #L2fd03c.  call temp:= `getResponseCode`(v1) @signature `Ljava/net/HttpURLConnection;.getResponseCode:()I` @kind virtual;
  #L2fd042.  v1:= temp;
  #L2fd044.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd04a.  v1:= "\n" @kind object;
  #L2fd04e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd054.  v1:= v2.`com.airbnb.lottie.network.a.b` @type ^`java.net.HttpURLConnection` @kind object;
  #L2fd058.  call temp:= `a`(v2, v1) @signature `Lcom/airbnb/lottie/network/a;.a:(Ljava/net/HttpURLConnection;)Ljava/lang/String;` @kind direct;
  #L2fd05e.  v1:= temp @kind object;
  #L2fd060.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd066.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fd06c.  v0:= temp @kind object;
  #L2fd06e.  return v0 @kind object;
  #L2fd070.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L2fd072.  v1:= "get error failed " @kind object;
  #L2fd076.  call `d`(v1, v0) @signature `Lcom/airbnb/lottie/z0/d;.d:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L2fd07c.  call temp:= `getMessage`(v0) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2fd082.  v0:= temp @kind object;
  #L2fd084.  return v0 @kind object;
  catch `java.io.IOException` @[L2fcff8..L2fd06e] goto L2fd070;
}
