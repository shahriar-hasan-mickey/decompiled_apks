record `com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$a` v0 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/LinkedHashTreeMap$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L304f10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L304f16.  return @kind void;
}
procedure `int` `a`(`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$a` v0 @kind this, `java.lang.Comparable` v1 @kind object, `java.lang.Comparable` v2 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/LinkedHashTreeMap$a;.a:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @AccessFlag PUBLIC {
    temp;

  #L304ed0.  call temp:= `compareTo`(v1, v2) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L304ed6.  v1:= temp;
  #L304ed8.  return v1;
}
procedure `int` `compare`(`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/LinkedHashTreeMap$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L304eec.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L304ef0.  v2:= (`java.lang.Comparable`) v2 @kind object;
  #L304ef4.  call temp:= `a`(v0, v1, v2) @signature `Lcom/airbnb/lottie/parser/moshi/LinkedHashTreeMap$a;.a:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @kind virtual;
  #L304efa.  v1:= temp;
  #L304efc.  return v1;
}
