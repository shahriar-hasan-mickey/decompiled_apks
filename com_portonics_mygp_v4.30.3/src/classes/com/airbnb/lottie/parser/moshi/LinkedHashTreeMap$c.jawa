record `com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$c` @kind class @AccessFlag  {
  `com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g` `com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$c.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$c` v0 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/LinkedHashTreeMap$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3050fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L305102.  return @kind void;
}
procedure `com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g` `a`(`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$c` v4 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/LinkedHashTreeMap$c;.a:()Lcom/airbnb/lottie/parser/moshi/LinkedHashTreeMap$g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3050b8.  v0:= v4.`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$c.a` @type ^`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g` @kind object;
  #L3050bc.  v1:= 0I;
  #L3050be.  if v0 != 0 then goto L3050c4;
  #L3050c2.  return v1 @kind object;
  #L3050c4.  v2:= v0.`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g.b` @type ^`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g` @kind object;
  #L3050c8.  v0.`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g.b` @type ^`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g` := v1 @kind object;
  #L3050cc.  v1:= v0.`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g.d` @type ^`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g` @kind object;
  #L3050d0.  v3:= v2 @kind object;
  #L3050d2.  v2:= v1 @kind object;
  #L3050d4.  v1:= v3 @kind object;
  #L3050d6.  if v2 == 0 then goto L3050e4;
  #L3050da.  v2.`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g.b` @type ^`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g` := v1 @kind object;
  #L3050de.  v1:= v2.`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g.c` @type ^`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g` @kind object;
  #L3050e2.  goto L3050d0;
  #L3050e4.  v4.`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$c.a` @type ^`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g` := v1 @kind object;
  #L3050e8.  return v0 @kind object;
}
procedure `void` `b`(`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$c` v2 @kind this, `com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g` v3 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/LinkedHashTreeMap$c;.b:(Lcom/airbnb/lottie/parser/moshi/LinkedHashTreeMap$g;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L305114.  v0:= 0I;
  #L305116.  if v3 == 0 then goto L30512a;
  #L30511a.  v3.`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g.b` @type ^`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g` := v0 @kind object;
  #L30511e.  v0:= v3.`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g.c` @type ^`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g` @kind object;
  #L305122.  v1:= v0 @kind object;
  #L305124.  v0:= v3 @kind object;
  #L305126.  v3:= v1 @kind object;
  #L305128.  goto L305116;
  #L30512a.  v2.`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$c.a` @type ^`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g` := v0 @kind object;
  #L30512e.  return @kind void;
}
