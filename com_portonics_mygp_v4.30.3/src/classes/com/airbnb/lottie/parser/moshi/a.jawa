record `com.airbnb.lottie.parser.moshi.a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String`[] `com.airbnb.lottie.parser.moshi.a.a` @AccessFlag FINAL;
  `okio.x` `com.airbnb.lottie.parser.moshi.a.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.moshi.a` v0 @kind this, `java.lang.String`[] v1 @kind object, `okio.x` v2 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:([Ljava/lang/String;Lokio/x;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L302d64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L302d6a.  v0.`com.airbnb.lottie.parser.moshi.a.a` @type ^`java.lang.String`[] := v1 @kind object;
  #L302d6e.  v0.`com.airbnb.lottie.parser.moshi.a.b` @type ^`okio.x` := v2 @kind object;
  #L302d72.  return @kind void;
}
procedure `com.airbnb.lottie.parser.moshi.a` `a`(`java.lang.String`[] v4 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/a;.a:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L302cd8.  v0:= length @variable v4;
  #L302cda.  v0:= new `okio.ByteString`[v0];
  #L302cde.  v1:= new `okio.k`;
  #L302ce2.  call `<init>`(v1) @signature `Lokio/k;.<init>:()V` @kind direct;
  #L302ce8.  v2:= 0I;
  #L302cea.  v3:= length @variable v4;
  #L302cec.  if v2 >= v3 then goto L302d12;
  #L302cf0.  v3:= v4[v2] @kind object;
  #L302cf4.  call `a`(v1, v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.a:(Lokio/n;Ljava/lang/String;)V` @kind static;
  #L302cfa.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L302d00.  call temp:= `U0`(v1) @signature `Lokio/k;.U0:()Lokio/ByteString;` @kind virtual;
  #L302d06.  v3:= temp @kind object;
  #L302d08.  v0[v2]:= v3 @kind object;
  #L302d0c.  v2:= v2 + 1;
  #L302d10.  goto L302cea;
  #L302d12.  v1:= new `com.airbnb.lottie.parser.moshi.a`;
  #L302d16.  call temp:= `clone`(v4) @signature `[Ljava/lang/String;.clone:()Ljava/lang/Object;` @kind virtual;
  #L302d1c.  v4:= temp @kind object;
  #L302d1e.  v4:= (`java.lang.String`[]) v4 @kind object;
  #L302d22.  call temp:= `m`(v0) @signature `Lokio/x;.m:([Lokio/ByteString;)Lokio/x;` @kind static;
  #L302d28.  v0:= temp @kind object;
  #L302d2a.  call `<init>`(v1, v4, v0) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:([Ljava/lang/String;Lokio/x;)V` @kind direct;
  #L302d30.  return v1 @kind object;
  #L302d32.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L302d34.  v0:= new `java.lang.AssertionError`;
  #L302d38.  call `<init>`(v0, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L302d3e.  goto L302d42;
  #L302d40.  throw v0;
  #L302d42.  goto L302d40;
  catch `java.io.IOException` @[L302cd8..L302d30] goto L302d32;
}
