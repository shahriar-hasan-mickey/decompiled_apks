record `com.airbnb.lottie.parser.moshi.e` @kind class @AccessFlag  extends `com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$f` @kind class {
  `com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$e` `com.airbnb.lottie.parser.moshi.e.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.moshi.e` v0 @kind this, `com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$e` v1 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/e;.<init>:(Lcom/airbnb/lottie/parser/moshi/LinkedHashTreeMap$e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30529c.  v0.`com.airbnb.lottie.parser.moshi.e.f` @type ^`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$e` := v1 @kind object;
  #L3052a0.  v1:= v1.`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$e.b` @type ^`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap` @kind object;
  #L3052a4.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/LinkedHashTreeMap$f;.<init>:(Lcom/airbnb/lottie/parser/moshi/LinkedHashTreeMap;)V` @kind direct;
  #L3052aa.  return @kind void;
}
procedure `java.lang.Object` `next`(`com.airbnb.lottie.parser.moshi.e` v1 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/e;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30527c.  call temp:= `a`(v1) @signature `Lcom/airbnb/lottie/parser/moshi/LinkedHashTreeMap$f;.a:()Lcom/airbnb/lottie/parser/moshi/LinkedHashTreeMap$g;` @kind virtual;
  #L305282.  v0:= temp @kind object;
  #L305284.  v0:= v0.`com.airbnb.lottie.parser.moshi.LinkedHashTreeMap$g.g` @type ^`java.lang.Object` @kind object;
  #L305288.  return v0 @kind object;
}
