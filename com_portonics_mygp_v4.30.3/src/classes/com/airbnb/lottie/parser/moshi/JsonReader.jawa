record `com.airbnb.lottie.parser.moshi.JsonReader` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Closeable` @kind interface {
  `int` `com.airbnb.lottie.parser.moshi.JsonReader.c` @AccessFlag ;
  `int`[] `com.airbnb.lottie.parser.moshi.JsonReader.d` @AccessFlag ;
  `java.lang.String`[] `com.airbnb.lottie.parser.moshi.JsonReader.e` @AccessFlag ;
  `int`[] `com.airbnb.lottie.parser.moshi.JsonReader.f` @AccessFlag ;
  `boolean` `com.airbnb.lottie.parser.moshi.JsonReader.g` @AccessFlag ;
  `boolean` `com.airbnb.lottie.parser.moshi.JsonReader.h` @AccessFlag ;
}
global `java.lang.String`[] `@@com.airbnb.lottie.parser.moshi.JsonReader.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L302f98.  v0:= 128I;
  #L302f9c.  v0:= new `java.lang.String`[v0];
  #L302fa0.  `@@com.airbnb.lottie.parser.moshi.JsonReader.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L302fa4.  v0:= 0I;
  #L302fa6.  v1:= 0I;
  #L302fa8.  v2:= 31I;
  #L302fac.  if v1 > v2 then goto L302fdc;
  #L302fb0.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader.b` @type ^`java.lang.String`[] @kind object;
  #L302fb4.  v3:= 1I;
  #L302fb6.  v3:= new `java.lang.Object`[v3];
  #L302fba.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L302fc0.  v4:= temp @kind object;
  #L302fc2.  v3[v0]:= v4 @kind object;
  #L302fc6.  v4:= "\\u%04x" @kind object;
  #L302fca.  call temp:= `format`(v4, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L302fd0.  v3:= temp @kind object;
  #L302fd2.  v2[v1]:= v3 @kind object;
  #L302fd6.  v1:= v1 + 1;
  #L302fda.  goto L302fa8;
  #L302fdc.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader.b` @type ^`java.lang.String`[] @kind object;
  #L302fe0.  v1:= 34I;
  #L302fe4.  v2:= "\\\"" @kind object;
  #L302fe8.  v0[v1]:= v2 @kind object;
  #L302fec.  v1:= 92I;
  #L302ff0.  v2:= "\\\\" @kind object;
  #L302ff4.  v0[v1]:= v2 @kind object;
  #L302ff8.  v1:= 9I;
  #L302ffc.  v2:= "\\t" @kind object;
  #L303000.  v0[v1]:= v2 @kind object;
  #L303004.  v1:= 8I;
  #L303008.  v2:= "\\b" @kind object;
  #L30300c.  v0[v1]:= v2 @kind object;
  #L303010.  v1:= 10I;
  #L303014.  v2:= "\\n" @kind object;
  #L303018.  v0[v1]:= v2 @kind object;
  #L30301c.  v1:= 13I;
  #L303020.  v2:= "\\r" @kind object;
  #L303024.  v0[v1]:= v2 @kind object;
  #L303028.  v1:= 12I;
  #L30302c.  v2:= "\\f" @kind object;
  #L303030.  v0[v1]:= v2 @kind object;
  #L303034.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L303048.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30304e.  v0:= 32I;
  #L303052.  v1:= new `int`[v0];
  #L303056.  v2.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] := v1 @kind object;
  #L30305a.  v1:= new `java.lang.String`[v0];
  #L30305e.  v2.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`java.lang.String`[] := v1 @kind object;
  #L303062.  v0:= new `int`[v0];
  #L303066.  v2.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] := v0 @kind object;
  #L30306a.  return @kind void;
}
procedure `void` `O0`(`okio.n` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.O0:(Lokio/n;Ljava/lang/String;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L30314c.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader.b` @type ^`java.lang.String`[] @kind object;
  #L303150.  v1:= 34I;
  #L303154.  call temp:= `P`(v7, v1) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L30315a.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L303160.  v2:= temp;
  #L303162.  v3:= 0I;
  #L303164.  v4:= 0I;
  #L303166.  if v3 >= v2 then goto L3031b8;
  #L30316a.  call temp:= `charAt`(v8, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L303170.  v5:= temp;
  #L303172.  v6:= 128I;
  #L303176.  if v5 >= v6 then goto L303184;
  #L30317a.  v5:= v0[v5] @kind object;
  #L30317e.  if v5 != 0 then goto L30319e;
  #L303182.  goto L3031b2;
  #L303184.  v6:= 8232I;
  #L303188.  if v5 != v6 then goto L303192;
  #L30318c.  v5:= "\\u2028" @kind object;
  #L303190.  goto L30319e;
  #L303192.  v6:= 8233I;
  #L303196.  if v5 != v6 then goto L3031b2;
  #L30319a.  v5:= "\\u2029" @kind object;
  #L30319e.  if v4 >= v3 then goto L3031a8;
  #L3031a2.  call temp:= `h0`(v7, v8, v4, v3) @signature `Lokio/n;.h0:(Ljava/lang/String;II)Lokio/n;` @kind interface;
  #L3031a8.  call temp:= `b0`(v7, v5) @signature `Lokio/n;.b0:(Ljava/lang/String;)Lokio/n;` @kind interface;
  #L3031ae.  v4:= v3 + 1;
  #L3031b2.  v3:= v3 + 1;
  #L3031b6.  goto L303166;
  #L3031b8.  if v4 >= v2 then goto L3031c2;
  #L3031bc.  call temp:= `h0`(v7, v8, v4, v2) @signature `Lokio/n;.h0:(Ljava/lang/String;II)Lokio/n;` @kind interface;
  #L3031c2.  call temp:= `P`(v7, v1) @signature `Lokio/n;.P:(I)Lokio/n;` @kind interface;
  #L3031c8.  return @kind void;
}
procedure `void` `a`(`okio.n` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.a:(Lokio/n;Ljava/lang/String;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L30307c.  call `O0`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.O0:(Lokio/n;Ljava/lang/String;)V` @kind static;
  #L303082.  return @kind void;
}
procedure `com.airbnb.lottie.parser.moshi.JsonReader` `o0`(`okio.o` v1 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o0:(Lokio/o;)Lcom/airbnb/lottie/parser/moshi/JsonReader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L302f50.  v0:= new `com.airbnb.lottie.parser.moshi.c`;
  #L302f54.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/c;.<init>:(Lokio/o;)V` @kind direct;
  #L302f5a.  return v0 @kind object;
}
procedure `void` `A0`(`com.airbnb.lottie.parser.moshi.JsonReader` v3 @kind this, `int` v4 ) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.A0:(I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L303094.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L303098.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L30309c.  v2:= length @variable v1;
  #L30309e.  if v0 != v2 then goto L303124;
  #L3030a2.  v2:= 256I;
  #L3030a6.  if v0 == v2 then goto L3030ee;
  #L3030aa.  v0:= length @variable v1;
  #L3030ac.  v0:= v0 * 2;
  #L3030b0.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L3030b6.  v0:= temp @kind object;
  #L3030b8.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] := v0 @kind object;
  #L3030bc.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`java.lang.String`[] @kind object;
  #L3030c0.  v1:= length @variable v0;
  #L3030c2.  v1:= v1 * 2;
  #L3030c6.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L3030cc.  v0:= temp @kind object;
  #L3030ce.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L3030d2.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`java.lang.String`[] := v0 @kind object;
  #L3030d6.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] @kind object;
  #L3030da.  v1:= length @variable v0;
  #L3030dc.  v1:= v1 * 2;
  #L3030e0.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L3030e6.  v0:= temp @kind object;
  #L3030e8.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] := v0 @kind object;
  #L3030ec.  goto L303124;
  #L3030ee.  v4:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L3030f2.  v0:= new `java.lang.StringBuilder`;
  #L3030f6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3030fc.  v1:= "Nesting too deep at " @kind object;
  #L303100.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303106.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L30310c.  v1:= temp @kind object;
  #L30310e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303114.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30311a.  v0:= temp @kind object;
  #L30311c.  call `<init>`(v4, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L303122.  throw v4;
  #L303124.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L303128.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L30312c.  v2:= v1 + 1;
  #L303130.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int` := v2;
  #L303134.  v0[v1]:= v4;
  #L303138.  return @kind void;
}
procedure `java.lang.String` `C`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.C:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `G0`(`com.airbnb.lottie.parser.moshi.a` v0 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.G0:(Lcom/airbnb/lottie/parser/moshi/a;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `K0`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.K0:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `N0`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.airbnb.lottie.parser.moshi.JsonEncodingException` `P0`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L302f04.  v0:= new `com.airbnb.lottie.parser.moshi.JsonEncodingException`;
  #L302f08.  v1:= new `java.lang.StringBuilder`;
  #L302f0c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L302f12.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L302f18.  v3:= " at path " @kind object;
  #L302f1c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L302f22.  call temp:= `getPath`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L302f28.  v3:= temp @kind object;
  #L302f2a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L302f30.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L302f36.  v3:= temp @kind object;
  #L302f38.  call `<init>`(v0, v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L302f3e.  throw v0;
}
procedure `void` `c`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.c:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `d`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getPath`(`com.airbnb.lottie.parser.moshi.JsonReader` v4 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L302f6c.  v0:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L302f70.  v1:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L302f74.  v2:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`java.lang.String`[] @kind object;
  #L302f78.  v3:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] @kind object;
  #L302f7c.  call temp:= `a`(v0, v1, v2, v3) @signature `Lcom/airbnb/lottie/parser/moshi/b;.a:(I[I[Ljava/lang/String;[I)Ljava/lang/String;` @kind static;
  #L302f82.  v0:= temp @kind object;
  #L302f84.  return v0 @kind object;
}
procedure `void` `k`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.k:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `m`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `m0`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m0:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `o`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `s`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.s:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.airbnb.lottie.parser.moshi.JsonReader$Token` `u0`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `double` `v`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `x`() @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.x:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
