record `com.airbnb.lottie.parser.moshi.c` @kind class @AccessFlag FINAL extends `com.airbnb.lottie.parser.moshi.JsonReader` @kind class {
  `okio.o` `com.airbnb.lottie.parser.moshi.c.n` @AccessFlag PRIVATE_FINAL;
  `okio.k` `com.airbnb.lottie.parser.moshi.c.o` @AccessFlag PRIVATE_FINAL;
  `int` `com.airbnb.lottie.parser.moshi.c.p` @AccessFlag PRIVATE;
  `long` `com.airbnb.lottie.parser.moshi.c.q` @AccessFlag PRIVATE;
  `int` `com.airbnb.lottie.parser.moshi.c.r` @AccessFlag PRIVATE;
  `java.lang.String` `com.airbnb.lottie.parser.moshi.c.s` @AccessFlag PRIVATE;
}
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.c.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.c.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.c.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.c.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.c.m` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/moshi/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3046f0.  v0:= "'\\" @kind object;
  #L3046f4.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L3046fa.  v0:= temp @kind object;
  #L3046fc.  `@@com.airbnb.lottie.parser.moshi.c.i` @type ^`okio.ByteString` := v0 @kind object;
  #L304700.  v0:= "\"\\" @kind object;
  #L304704.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30470a.  v0:= temp @kind object;
  #L30470c.  `@@com.airbnb.lottie.parser.moshi.c.j` @type ^`okio.ByteString` := v0 @kind object;
  #L304710.  v0:= "{}[]:, \n\t\r\f/\\;#=" @kind object;
  #L304714.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30471a.  v0:= temp @kind object;
  #L30471c.  `@@com.airbnb.lottie.parser.moshi.c.k` @type ^`okio.ByteString` := v0 @kind object;
  #L304720.  v0:= "\n\r" @kind object;
  #L304724.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30472a.  v0:= temp @kind object;
  #L30472c.  `@@com.airbnb.lottie.parser.moshi.c.l` @type ^`okio.ByteString` := v0 @kind object;
  #L304730.  v0:= "*/" @kind object;
  #L304734.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30473a.  v0:= temp @kind object;
  #L30473c.  `@@com.airbnb.lottie.parser.moshi.c.m` @type ^`okio.ByteString` := v0 @kind object;
  #L304740.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.moshi.c` v1 @kind this, `okio.o` v2 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/c;.<init>:(Lokio/o;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L304754.  call `<init>`(v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.<init>:()V` @kind direct;
  #L30475a.  v0:= 0I;
  #L30475c.  v1.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v0;
  #L304760.  v0:= "source == null" @kind object;
  #L304764.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L30476a.  v1.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` := v2 @kind object;
  #L30476e.  call temp:= `q`(v2) @signature `Lokio/o;.q:()Lokio/k;` @kind interface;
  #L304774.  v2:= temp @kind object;
  #L304776.  v1.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` := v2 @kind object;
  #L30477a.  v2:= 6I;
  #L30477c.  call `A0`(v1, v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.A0:(I)V` @kind virtual;
  #L304782.  return @kind void;
}
procedure `void` `Q0`(`com.airbnb.lottie.parser.moshi.c` v1 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Q0:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3048ac.  v0:= v1.`com.airbnb.lottie.parser.moshi.JsonReader.g` @type ^`boolean` @kind boolean;
  #L3048b0.  if v0 == 0 then goto L3048b6;
  #L3048b4.  return @kind void;
  #L3048b6.  v0:= "Use JsonReader.setLenient(true) to accept malformed JSON" @kind object;
  #L3048ba.  call temp:= `P0`(v1, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @kind virtual;
  #L3048c0.  v0:= temp @kind object;
  #L3048c2.  throw v0;
}
procedure `int` `R0`(`com.airbnb.lottie.parser.moshi.c` v16 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L303900.  v0:= v16 @kind object;
  #L303904.  v1:= v0.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L303908.  v2:= v0.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L30390c.  v3:= v2 + -1;
  #L303910.  v3:= v1[v3];
  #L303914.  v4:= 0L;
  #L303918.  v6:= 8I;
  #L30391c.  v8:= 34I;
  #L303920.  v9:= 93I;
  #L303924.  v10:= 3I;
  #L303926.  v11:= 7I;
  #L303928.  v12:= 59I;
  #L30392c.  v13:= 44I;
  #L303930.  v14:= 4I;
  #L303932.  v15:= 2I;
  #L303934.  v7:= 1I;
  #L303936.  if v3 != v7 then goto L303944;
  #L30393a.  v2:= v2 - v7 @kind int;
  #L30393c.  v1[v2]:= v15;
  #L303940.  goto L303a3c;
  #L303944.  if v3 != v15 then goto L303982;
  #L303948.  call temp:= `U0`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/c;.U0:(Z)I` @kind direct;
  #L30394e.  v1:= temp;
  #L303950.  v2:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303954.  call temp:= `readByte`(v2) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L30395a.  if v1 == v13 then goto L303a3c;
  #L30395e.  if v1 == v12 then goto L30397a;
  #L303962.  if v1 != v9 then goto L30396c;
  #L303966.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v14;
  #L30396a.  return v14;
  #L30396c.  v1:= "Unterminated array" @kind object;
  #L303970.  call temp:= `P0`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @kind virtual;
  #L303976.  v1:= temp @kind object;
  #L303978.  throw v1;
  #L30397a.  call `Q0`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Q0:()V` @kind direct;
  #L303980.  goto L303a3c;
  #L303982.  v15:= 5I;
  #L303984.  if v3 == v10 then goto L303b54;
  #L303988.  if v3 != v15 then goto L303990;
  #L30398c.  goto L303b54;
  #L303990.  if v3 != v14 then goto L303a04;
  #L303994.  v2:= v2 - v7 @kind int;
  #L303996.  v1[v2]:= v15;
  #L30399a.  call temp:= `U0`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/c;.U0:(Z)I` @kind direct;
  #L3039a0.  v1:= temp;
  #L3039a2.  v2:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L3039a6.  call temp:= `readByte`(v2) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L3039ac.  v2:= 58I;
  #L3039b0.  if v1 == v2 then goto L303a3c;
  #L3039b4.  v2:= 61I;
  #L3039b8.  if v1 != v2 then goto L3039f6;
  #L3039bc.  call `Q0`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Q0:()V` @kind direct;
  #L3039c2.  v1:= v0.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L3039c6.  v14:= 1L;
  #L3039ca.  call temp:= `request`(v1, v14) @signature `Lokio/o;.request:(J)Z` @kind interface;
  #L3039d0.  v1:= temp;
  #L3039d2.  if v1 == 0 then goto L303a3c;
  #L3039d6.  v1:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L3039da.  call temp:= `K0`(v1, v4) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L3039e0.  v1:= temp;
  #L3039e2.  v2:= 62I;
  #L3039e6.  if v1 != v2 then goto L303a3c;
  #L3039ea.  v1:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L3039ee.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L3039f4.  goto L303a3c;
  #L3039f6.  v1:= "Expected ':'" @kind object;
  #L3039fa.  call temp:= `P0`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @kind virtual;
  #L303a00.  v1:= temp @kind object;
  #L303a02.  throw v1;
  #L303a04.  v14:= 6I;
  #L303a06.  if v3 != v14 then goto L303a12;
  #L303a0a.  v2:= v2 - v7 @kind int;
  #L303a0c.  v1[v2]:= v11;
  #L303a10.  goto L303a3c;
  #L303a12.  if v3 != v11 then goto L303a38;
  #L303a16.  v1:= 0I;
  #L303a18.  call temp:= `U0`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/c;.U0:(Z)I` @kind direct;
  #L303a1e.  v1:= temp;
  #L303a20.  v2:= -1I;
  #L303a22.  if v1 != v2 then goto L303a30;
  #L303a26.  v1:= 18I;
  #L303a2a.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L303a2e.  return v1;
  #L303a30.  call `Q0`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Q0:()V` @kind direct;
  #L303a36.  goto L303a3c;
  #L303a38.  if v3 == v6 then goto L303b44;
  #L303a3c.  call temp:= `U0`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/c;.U0:(Z)I` @kind direct;
  #L303a42.  v1:= temp;
  #L303a44.  if v1 == v8 then goto L303b30;
  #L303a48.  v2:= 39I;
  #L303a4c.  if v1 == v2 then goto L303b1a;
  #L303a50.  if v1 == v13 then goto L303af4;
  #L303a54.  if v1 == v12 then goto L303af4;
  #L303a58.  v2:= 91I;
  #L303a5c.  if v1 == v2 then goto L303ae4;
  #L303a60.  if v1 == v9 then goto L303ace;
  #L303a64.  v2:= 123I;
  #L303a68.  if v1 == v2 then goto L303abe;
  #L303a6c.  call temp:= `X0`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/c;.X0:()I` @kind direct;
  #L303a72.  v1:= temp;
  #L303a74.  if v1 == 0 then goto L303a7a;
  #L303a78.  return v1;
  #L303a7a.  call temp:= `Y0`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Y0:()I` @kind direct;
  #L303a80.  v1:= temp;
  #L303a82.  if v1 == 0 then goto L303a88;
  #L303a86.  return v1;
  #L303a88.  v1:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303a8c.  call temp:= `K0`(v1, v4) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L303a92.  v1:= temp;
  #L303a94.  call temp:= `T0`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/c;.T0:(I)Z` @kind direct;
  #L303a9a.  v1:= temp;
  #L303a9c.  if v1 == 0 then goto L303ab0;
  #L303aa0.  call `Q0`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Q0:()V` @kind direct;
  #L303aa6.  v1:= 10I;
  #L303aaa.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L303aae.  return v1;
  #L303ab0.  v1:= "Expected value" @kind object;
  #L303ab4.  call temp:= `P0`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @kind virtual;
  #L303aba.  v1:= temp @kind object;
  #L303abc.  throw v1;
  #L303abe.  v1:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303ac2.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L303ac8.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v7;
  #L303acc.  return v7;
  #L303ace.  if v3 != v7 then goto L303af4;
  #L303ad2.  v1:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303ad6.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L303adc.  v1:= 4I;
  #L303ade.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L303ae2.  return v1;
  #L303ae4.  v1:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303ae8.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L303aee.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v10;
  #L303af2.  return v10;
  #L303af4.  if v3 == v7 then goto L303b0e;
  #L303af8.  v1:= 2I;
  #L303afa.  if v3 != v1 then goto L303b00;
  #L303afe.  goto L303b0e;
  #L303b00.  v1:= "Unexpected value" @kind object;
  #L303b04.  call temp:= `P0`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @kind virtual;
  #L303b0a.  v1:= temp @kind object;
  #L303b0c.  throw v1;
  #L303b0e.  call `Q0`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Q0:()V` @kind direct;
  #L303b14.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v11;
  #L303b18.  return v11;
  #L303b1a.  call `Q0`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Q0:()V` @kind direct;
  #L303b20.  v1:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303b24.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L303b2a.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v6;
  #L303b2e.  return v6;
  #L303b30.  v1:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303b34.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L303b3a.  v1:= 9I;
  #L303b3e.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L303b42.  return v1;
  #L303b44.  v1:= new `java.lang.IllegalStateException`;
  #L303b48.  v2:= "JsonReader is closed" @kind object;
  #L303b4c.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L303b52.  throw v1;
  #L303b54.  v2:= v2 - v7 @kind int;
  #L303b56.  v4:= 4I;
  #L303b58.  v1[v2]:= v4;
  #L303b5c.  v1:= 125I;
  #L303b60.  if v3 != v15 then goto L303b9e;
  #L303b64.  call temp:= `U0`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/c;.U0:(Z)I` @kind direct;
  #L303b6a.  v2:= temp;
  #L303b6c.  v4:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303b70.  call temp:= `readByte`(v4) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L303b76.  if v2 == v13 then goto L303b9e;
  #L303b7a.  if v2 == v12 then goto L303b98;
  #L303b7e.  if v2 != v1 then goto L303b8a;
  #L303b82.  v1:= 2I;
  #L303b84.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L303b88.  return v1;
  #L303b8a.  v1:= "Unterminated object" @kind object;
  #L303b8e.  call temp:= `P0`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @kind virtual;
  #L303b94.  v1:= temp @kind object;
  #L303b96.  throw v1;
  #L303b98.  call `Q0`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Q0:()V` @kind direct;
  #L303b9e.  call temp:= `U0`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/c;.U0:(Z)I` @kind direct;
  #L303ba4.  v2:= temp;
  #L303ba6.  if v2 == v8 then goto L303c1c;
  #L303baa.  v4:= 39I;
  #L303bae.  if v2 == v4 then goto L303c02;
  #L303bb2.  v4:= "Expected name" @kind object;
  #L303bb6.  if v2 == v1 then goto L303be2;
  #L303bba.  call `Q0`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Q0:()V` @kind direct;
  #L303bc0.  v1:= (`char`) v2 @kind i2c;
  #L303bc2.  call temp:= `T0`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/c;.T0:(I)Z` @kind direct;
  #L303bc8.  v1:= temp;
  #L303bca.  if v1 == 0 then goto L303bd8;
  #L303bce.  v1:= 14I;
  #L303bd2.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L303bd6.  return v1;
  #L303bd8.  call temp:= `P0`(v0, v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @kind virtual;
  #L303bde.  v1:= temp @kind object;
  #L303be0.  throw v1;
  #L303be2.  if v3 == v15 then goto L303bf8;
  #L303be6.  v1:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303bea.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L303bf0.  v1:= 2I;
  #L303bf2.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L303bf6.  return v1;
  #L303bf8.  call temp:= `P0`(v0, v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @kind virtual;
  #L303bfe.  v1:= temp @kind object;
  #L303c00.  throw v1;
  #L303c02.  v1:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303c06.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L303c0c.  call `Q0`(v16) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Q0:()V` @kind direct;
  #L303c12.  v1:= 12I;
  #L303c16.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L303c1a.  return v1;
  #L303c1c.  v1:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303c20.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L303c26.  v1:= 13I;
  #L303c2a.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L303c2e.  return v1;
}
procedure `int` `S0`(`com.airbnb.lottie.parser.moshi.c` v4 @kind this, `java.lang.String` v5 @kind object, `com.airbnb.lottie.parser.moshi.a` v6 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/c;.S0:(Ljava/lang/String;Lcom/airbnb/lottie/parser/moshi/a;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L303c40.  v0:= v6.`com.airbnb.lottie.parser.moshi.a.a` @type ^`java.lang.String`[] @kind object;
  #L303c44.  v0:= length @variable v0;
  #L303c46.  v1:= 0I;
  #L303c48.  v2:= 0I;
  #L303c4a.  if v2 >= v0 then goto L303c7e;
  #L303c4e.  v3:= v6.`com.airbnb.lottie.parser.moshi.a.a` @type ^`java.lang.String`[] @kind object;
  #L303c52.  v3:= v3[v2] @kind object;
  #L303c56.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L303c5c.  v3:= temp;
  #L303c5e.  if v3 == 0 then goto L303c78;
  #L303c62.  v4.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L303c66.  v6:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`java.lang.String`[] @kind object;
  #L303c6a.  v0:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L303c6e.  v0:= v0 + -1;
  #L303c72.  v6[v0]:= v5 @kind object;
  #L303c76.  return v2;
  #L303c78.  v2:= v2 + 1;
  #L303c7c.  goto L303c4a;
  #L303c7e.  v5:= -1I;
  #L303c80.  return v5;
}
procedure `boolean` `T0`(`com.airbnb.lottie.parser.moshi.c` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/lottie/parser/moshi/c;.T0:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3032b4.  v0:= 9I;
  #L3032b8.  if v2 == v0 then goto L30332c;
  #L3032bc.  v0:= 10I;
  #L3032c0.  if v2 == v0 then goto L30332c;
  #L3032c4.  v0:= 12I;
  #L3032c8.  if v2 == v0 then goto L30332c;
  #L3032cc.  v0:= 13I;
  #L3032d0.  if v2 == v0 then goto L30332c;
  #L3032d4.  v0:= 32I;
  #L3032d8.  if v2 == v0 then goto L30332c;
  #L3032dc.  v0:= 35I;
  #L3032e0.  if v2 == v0 then goto L303326;
  #L3032e4.  v0:= 44I;
  #L3032e8.  if v2 == v0 then goto L30332c;
  #L3032ec.  v0:= 47I;
  #L3032f0.  if v2 == v0 then goto L303326;
  #L3032f4.  v0:= 61I;
  #L3032f8.  if v2 == v0 then goto L303326;
  #L3032fc.  v0:= 123I;
  #L303300.  if v2 == v0 then goto L30332c;
  #L303304.  v0:= 125I;
  #L303308.  if v2 == v0 then goto L30332c;
  #L30330c.  v0:= 58I;
  #L303310.  if v2 == v0 then goto L30332c;
  #L303314.  v0:= 59I;
  #L303318.  if v2 == v0 then goto L303326;
  #L30331c.  goto L303330;
  #L303322.  v2:= 1I;
  #L303324.  return v2;
  #L303326.  call `Q0`(v1) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Q0:()V` @kind direct;
  #L30332c.  v2:= 0I;
  #L30332e.  return v2;
  #L303330.  switch v2
                  | 91 => goto L30332c
                  | 92 => goto L303326
                  | 93 => goto L30332c
                  | else => goto L303322;
}
procedure `int` `U0`(`com.airbnb.lottie.parser.moshi.c` v6 @kind this, `boolean` v7 ) @signature `Lcom/airbnb/lottie/parser/moshi/c;.U0:(Z)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L303ee0.  v0:= 0I;
  #L303ee2.  v1:= 0I;
  #L303ee4.  v2:= v6.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L303ee8.  v3:= v1 + 1;
  #L303eec.  v4:= (`long`) v3 @kind i2l;
  #L303eee.  call temp:= `request`(v2, v4) @signature `Lokio/o;.request:(J)Z` @kind interface;
  #L303ef4.  v2:= temp;
  #L303ef6.  if v2 == 0 then goto L303fe4;
  #L303efa.  v2:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303efe.  v4:= (`long`) v1 @kind i2l;
  #L303f00.  call temp:= `K0`(v2, v4) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L303f06.  v1:= temp;
  #L303f08.  v2:= 10I;
  #L303f0c.  if v1 == v2 then goto L303fe0;
  #L303f10.  v2:= 32I;
  #L303f14.  if v1 == v2 then goto L303fe0;
  #L303f18.  v2:= 13I;
  #L303f1c.  if v1 == v2 then goto L303fe0;
  #L303f20.  v2:= 9I;
  #L303f24.  if v1 != v2 then goto L303f2a;
  #L303f28.  goto L303fe0;
  #L303f2a.  v2:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303f2e.  v3:= v3 + -1;
  #L303f32.  v3:= (`long`) v3 @kind i2l;
  #L303f34.  call `skip`(v2, v3) @signature `Lokio/k;.skip:(J)V` @kind virtual;
  #L303f3a.  v2:= 47I;
  #L303f3e.  if v1 != v2 then goto L303fc8;
  #L303f42.  v3:= v6.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L303f46.  v4:= 2L;
  #L303f4a.  call temp:= `request`(v3, v4) @signature `Lokio/o;.request:(J)Z` @kind interface;
  #L303f50.  v3:= temp;
  #L303f52.  if v3 != 0 then goto L303f58;
  #L303f56.  return v1;
  #L303f58.  call `Q0`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Q0:()V` @kind direct;
  #L303f5e.  v3:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303f62.  v4:= 1L;
  #L303f66.  call temp:= `K0`(v3, v4) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L303f6c.  v3:= temp;
  #L303f6e.  v4:= 42I;
  #L303f72.  if v3 == v4 then goto L303f98;
  #L303f76.  if v3 == v2 then goto L303f7c;
  #L303f7a.  return v1;
  #L303f7c.  v1:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303f80.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L303f86.  v1:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303f8a.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L303f90.  call `c1`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/c;.c1:()V` @kind direct;
  #L303f96.  goto L303ee2;
  #L303f98.  v1:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303f9c.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L303fa2.  v1:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303fa6.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L303fac.  call temp:= `b1`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/c;.b1:()Z` @kind direct;
  #L303fb2.  v1:= temp;
  #L303fb4.  if v1 == 0 then goto L303fba;
  #L303fb8.  goto L303ee2;
  #L303fba.  v7:= "Unterminated comment" @kind object;
  #L303fbe.  call temp:= `P0`(v6, v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @kind virtual;
  #L303fc4.  v7:= temp @kind object;
  #L303fc6.  throw v7;
  #L303fc8.  v2:= 35I;
  #L303fcc.  if v1 != v2 then goto L303fde;
  #L303fd0.  call `Q0`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Q0:()V` @kind direct;
  #L303fd6.  call `c1`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/c;.c1:()V` @kind direct;
  #L303fdc.  goto L303ee2;
  #L303fde.  return v1;
  #L303fe0.  v1:= v3;
  #L303fe2.  goto L303ee4;
  #L303fe4.  if v7 != 0 then goto L303fec;
  #L303fe8.  v7:= -1I;
  #L303fea.  return v7;
  #L303fec.  v7:= new `java.io.EOFException`;
  #L303ff0.  v0:= "End of input" @kind object;
  #L303ff4.  call `<init>`(v7, v0) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L303ffa.  goto L303ffe;
  #L303ffc.  throw v7;
  #L303ffe.  goto L303ffc;
}
procedure `java.lang.String` `V0`(`com.airbnb.lottie.parser.moshi.c` v6 @kind this, `okio.ByteString` v7 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/c;.V0:(Lokio/ByteString;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L304488.  v0:= 0I;
  #L30448a.  v1:= v6.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L30448e.  call temp:= `T`(v1, v7) @signature `Lokio/o;.T:(Lokio/ByteString;)J` @kind interface;
  #L304494.  v1:= temp @kind wide;
  #L304496.  v3:= -1L;
  #L30449a.  v5:= lcmp(v1, v3);
  #L30449e.  if v5 == 0 then goto L304532;
  #L3044a2.  v3:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L3044a6.  call temp:= `K0`(v3, v1) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L3044ac.  v3:= temp;
  #L3044ae.  v4:= 92I;
  #L3044b2.  if v3 != v4 then goto L3044f0;
  #L3044b6.  if v0 != 0 then goto L3044c4;
  #L3044ba.  v0:= new `java.lang.StringBuilder`;
  #L3044be.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3044c4.  v3:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L3044c8.  call temp:= `Z0`(v3, v1) @signature `Lokio/k;.Z0:(J)Ljava/lang/String;` @kind virtual;
  #L3044ce.  v1:= temp @kind object;
  #L3044d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3044d6.  v1:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L3044da.  call temp:= `readByte`(v1) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L3044e0.  call temp:= `Z0`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Z0:()C` @kind direct;
  #L3044e6.  v1:= temp;
  #L3044e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3044ee.  goto L30448a;
  #L3044f0.  if v0 != 0 then goto L30450c;
  #L3044f4.  v7:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L3044f8.  call temp:= `Z0`(v7, v1) @signature `Lokio/k;.Z0:(J)Ljava/lang/String;` @kind virtual;
  #L3044fe.  v7:= temp @kind object;
  #L304500.  v0:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L304504.  call temp:= `readByte`(v0) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L30450a.  return v7 @kind object;
  #L30450c.  v7:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L304510.  call temp:= `Z0`(v7, v1) @signature `Lokio/k;.Z0:(J)Ljava/lang/String;` @kind virtual;
  #L304516.  v7:= temp @kind object;
  #L304518.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30451e.  v7:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L304522.  call temp:= `readByte`(v7) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L304528.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30452e.  v7:= temp @kind object;
  #L304530.  return v7 @kind object;
  #L304532.  v7:= "Unterminated string" @kind object;
  #L304536.  call temp:= `P0`(v6, v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @kind virtual;
  #L30453c.  v7:= temp @kind object;
  #L30453e.  goto L304542;
  #L304540.  throw v7;
  #L304542.  goto L304540;
}
procedure `java.lang.String` `W0`(`com.airbnb.lottie.parser.moshi.c` v5 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.W0:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L304664.  v0:= v5.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L304668.  v1:= `@@com.airbnb.lottie.parser.moshi.c.k` @type ^`okio.ByteString` @kind object;
  #L30466c.  call temp:= `T`(v0, v1) @signature `Lokio/o;.T:(Lokio/ByteString;)J` @kind interface;
  #L304672.  v0:= temp @kind wide;
  #L304674.  v2:= -1L;
  #L304678.  v4:= lcmp(v0, v2);
  #L30467c.  if v4 == 0 then goto L30468e;
  #L304680.  v2:= v5.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L304684.  call temp:= `Z0`(v2, v0) @signature `Lokio/k;.Z0:(J)Ljava/lang/String;` @kind virtual;
  #L30468a.  v0:= temp @kind object;
  #L30468c.  goto L30469a;
  #L30468e.  v0:= v5.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L304692.  call temp:= `Y0`(v0) @signature `Lokio/k;.Y0:()Ljava/lang/String;` @kind virtual;
  #L304698.  v0:= temp @kind object;
  #L30469a.  return v0 @kind object;
}
procedure `int` `X0`(`com.airbnb.lottie.parser.moshi.c` v10 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.X0:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L304010.  v0:= v10.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L304014.  v1:= 0L;
  #L304018.  call temp:= `K0`(v0, v1) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L30401e.  v0:= temp;
  #L304020.  v1:= 0I;
  #L304022.  v2:= 116I;
  #L304026.  if v0 == v2 then goto L304072;
  #L30402a.  v2:= 84I;
  #L30402e.  if v0 != v2 then goto L304034;
  #L304032.  goto L304072;
  #L304034.  v2:= 102I;
  #L304038.  if v0 == v2 then goto L304066;
  #L30403c.  v2:= 70I;
  #L304040.  if v0 != v2 then goto L304046;
  #L304044.  goto L304066;
  #L304046.  v2:= 110I;
  #L30404a.  if v0 == v2 then goto L30405a;
  #L30404e.  v2:= 78I;
  #L304052.  if v0 != v2 then goto L304058;
  #L304056.  goto L30405a;
  #L304058.  return v1;
  #L30405a.  v0:= 7I;
  #L30405c.  v2:= "null" @kind object;
  #L304060.  v3:= "NULL" @kind object;
  #L304064.  goto L30407c;
  #L304066.  v0:= 6I;
  #L304068.  v2:= "false" @kind object;
  #L30406c.  v3:= "FALSE" @kind object;
  #L304070.  goto L30407c;
  #L304072.  v0:= 5I;
  #L304074.  v2:= "true" @kind object;
  #L304078.  v3:= "TRUE" @kind object;
  #L30407c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L304082.  v4:= temp;
  #L304084.  v5:= 1I;
  #L304086.  if v5 >= v4 then goto L3040ce;
  #L30408a.  v6:= v10.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L30408e.  v7:= v5 + 1;
  #L304092.  v8:= (`long`) v7 @kind i2l;
  #L304094.  call temp:= `request`(v6, v8) @signature `Lokio/o;.request:(J)Z` @kind interface;
  #L30409a.  v6:= temp;
  #L30409c.  if v6 != 0 then goto L3040a2;
  #L3040a0.  return v1;
  #L3040a2.  v6:= v10.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L3040a6.  v8:= (`long`) v5 @kind i2l;
  #L3040a8.  call temp:= `K0`(v6, v8) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L3040ae.  v6:= temp;
  #L3040b0.  call temp:= `charAt`(v2, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3040b6.  v8:= temp;
  #L3040b8.  if v6 == v8 then goto L3040ca;
  #L3040bc.  call temp:= `charAt`(v3, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3040c2.  v5:= temp;
  #L3040c4.  if v6 == v5 then goto L3040ca;
  #L3040c8.  return v1;
  #L3040ca.  v5:= v7;
  #L3040cc.  goto L304086;
  #L3040ce.  v2:= v10.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L3040d2.  v3:= v4 + 1;
  #L3040d6.  v5:= (`long`) v3 @kind i2l;
  #L3040d8.  call temp:= `request`(v2, v5) @signature `Lokio/o;.request:(J)Z` @kind interface;
  #L3040de.  v2:= temp;
  #L3040e0.  if v2 == 0 then goto L304100;
  #L3040e4.  v2:= v10.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L3040e8.  v5:= (`long`) v4 @kind i2l;
  #L3040ea.  call temp:= `K0`(v2, v5) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L3040f0.  v2:= temp;
  #L3040f2.  call temp:= `T0`(v10, v2) @signature `Lcom/airbnb/lottie/parser/moshi/c;.T0:(I)Z` @kind direct;
  #L3040f8.  v2:= temp;
  #L3040fa.  if v2 == 0 then goto L304100;
  #L3040fe.  return v1;
  #L304100.  v1:= v10.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L304104.  v2:= (`long`) v4 @kind i2l;
  #L304106.  call `skip`(v1, v2) @signature `Lokio/k;.skip:(J)V` @kind virtual;
  #L30410c.  v10.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v0;
  #L304110.  return v0;
}
procedure `int` `Y0`(`com.airbnb.lottie.parser.moshi.c` v16 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Y0:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L304124.  v0:= v16 @kind object;
  #L304128.  v1:= 0L;
  #L30412c.  v3:= 1I;
  #L30412e.  v4:= 0I;
  #L304130.  v8:= v1 @kind wide;
  #L304132.  v5:= 0I;
  #L304134.  v6:= 0I;
  #L304136.  v7:= 1I;
  #L304138.  v10:= 0I;
  #L30413a.  v11:= v0.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L30413e.  v12:= v5 + 1;
  #L304142.  v13:= (`long`) v12 @kind i2l;
  #L304144.  call temp:= `request`(v11, v13) @signature `Lokio/o;.request:(J)Z` @kind interface;
  #L30414a.  v11:= temp;
  #L30414c.  v15:= 2I;
  #L30414e.  if v11 != 0 then goto L304156;
  #L304152.  goto L30423a;
  #L304156.  v11:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L30415a.  v13:= (`long`) v5 @kind i2l;
  #L30415c.  call temp:= `K0`(v11, v13) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L304162.  v11:= temp;
  #L304164.  v13:= 43I;
  #L304168.  v14:= 5I;
  #L30416a.  if v11 == v13 then goto L3042da;
  #L30416e.  v13:= 69I;
  #L304172.  if v11 == v13 then goto L3042c8;
  #L304176.  v13:= 101I;
  #L30417a.  if v11 == v13 then goto L3042c8;
  #L30417e.  v13:= 45I;
  #L304182.  if v11 == v13 then goto L3042b4;
  #L304186.  v13:= 46I;
  #L30418a.  if v11 == v13 then goto L3042a8;
  #L30418e.  v13:= 48I;
  #L304192.  if v11 < v13 then goto L30422e;
  #L304196.  v13:= 57I;
  #L30419a.  if v11 <= v13 then goto L3041a0;
  #L30419e.  goto L30422e;
  #L3041a0.  if v6 == v3 then goto L304220;
  #L3041a4.  if v6 != 0 then goto L3041aa;
  #L3041a8.  goto L304220;
  #L3041aa.  if v6 != v15 then goto L3041f8;
  #L3041ae.  v5:= lcmp(v8, v1);
  #L3041b2.  if v5 != 0 then goto L3041b8;
  #L3041b6.  return v4;
  #L3041b8.  v13:= 10L;
  #L3041bc.  v13:= v13 * v8 @kind long;
  #L3041c0.  v11:= v11 + -48;
  #L3041c4.  v3:= (`long`) v11 @kind i2l;
  #L3041c6.  v13:= v13 - v3 @kind long;
  #L3041c8.  v3:= -922337203685477580L;
  #L3041d2.  v5:= lcmp(v8, v3);
  #L3041d6.  if v5 > 0 then goto L3041f0;
  #L3041da.  v5:= lcmp(v8, v3);
  #L3041de.  if v5 != 0 then goto L3041ec;
  #L3041e2.  v3:= lcmp(v13, v8);
  #L3041e6.  if v3 >= 0 then goto L3041ec;
  #L3041ea.  goto L3041f0;
  #L3041ec.  v3:= 0I;
  #L3041ee.  goto L3041f2;
  #L3041f0.  v3:= 1I;
  #L3041f2.  v7:= v7 ^& v3 @kind int;
  #L3041f4.  v8:= v13 @kind wide;
  #L3041f6.  goto L304212;
  #L3041f8.  v3:= 3I;
  #L3041fa.  if v6 != v3 then goto L304206;
  #L3041fe.  v4:= 0I;
  #L304200.  v6:= 4I;
  #L304202.  goto L3042e2;
  #L304206.  if v6 == v14 then goto L304218;
  #L30420a.  v3:= 6I;
  #L30420c.  if v6 != v3 then goto L304212;
  #L304210.  goto L304218;
  #L304212.  v4:= 0I;
  #L304214.  goto L3042e2;
  #L304218.  v4:= 0I;
  #L30421a.  v6:= 7I;
  #L30421c.  goto L3042e2;
  #L304220.  v11:= v11 + -48;
  #L304224.  v3:= -v11 @kind int;
  #L304226.  v8:= (`long`) v3 @kind i2l;
  #L304228.  v4:= 0I;
  #L30422a.  v6:= 2I;
  #L30422c.  goto L3042e2;
  #L30422e.  call temp:= `T0`(v0, v11) @signature `Lcom/airbnb/lottie/parser/moshi/c;.T0:(I)Z` @kind direct;
  #L304234.  v3:= temp;
  #L304236.  if v3 != 0 then goto L3042a4;
  #L30423a.  if v6 != v15 then goto L304280;
  #L30423e.  if v7 == 0 then goto L304280;
  #L304242.  v3:= -9223372036854775808L;
  #L304246.  v7:= lcmp(v8, v3);
  #L30424a.  if v7 != 0 then goto L304252;
  #L30424e.  if v10 == 0 then goto L304280;
  #L304252.  v3:= lcmp(v8, v1);
  #L304256.  if v3 != 0 then goto L30425e;
  #L30425a.  if v10 != 0 then goto L304280;
  #L30425e.  if v10 == 0 then goto L304264;
  #L304262.  goto L304266;
  #L304264.  v8:= -v8 @kind long;
  #L304266.  v0.`com.airbnb.lottie.parser.moshi.c.q` @type ^`long` := v8 @kind wide;
  #L30426a.  v1:= v0.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L30426e.  v2:= (`long`) v5 @kind i2l;
  #L304270.  call `skip`(v1, v2) @signature `Lokio/k;.skip:(J)V` @kind virtual;
  #L304276.  v1:= 16I;
  #L30427a.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L30427e.  return v1;
  #L304280.  if v6 == v15 then goto L304296;
  #L304284.  v1:= 4I;
  #L304286.  if v6 == v1 then goto L304296;
  #L30428a.  v1:= 7I;
  #L30428c.  if v6 != v1 then goto L304292;
  #L304290.  goto L304296;
  #L304292.  v4:= 0I;
  #L304294.  return v4;
  #L304296.  v0.`com.airbnb.lottie.parser.moshi.c.r` @type ^`int` := v5;
  #L30429a.  v1:= 17I;
  #L30429e.  v0.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L3042a2.  return v1;
  #L3042a4.  v4:= 0I;
  #L3042a6.  return v4;
  #L3042a8.  v3:= 3I;
  #L3042aa.  if v6 != v15 then goto L3042b2;
  #L3042ae.  v6:= 3I;
  #L3042b0.  goto L3042e2;
  #L3042b2.  return v4;
  #L3042b4.  v3:= 6I;
  #L3042b6.  if v6 != 0 then goto L3042c0;
  #L3042ba.  v6:= 1I;
  #L3042bc.  v10:= 1I;
  #L3042be.  goto L3042e2;
  #L3042c0.  if v6 != v14 then goto L3042c6;
  #L3042c4.  goto L3042e0;
  #L3042c6.  return v4;
  #L3042c8.  if v6 == v15 then goto L3042d6;
  #L3042cc.  v3:= 4I;
  #L3042ce.  if v6 != v3 then goto L3042d4;
  #L3042d2.  goto L3042d6;
  #L3042d4.  return v4;
  #L3042d6.  v6:= 5I;
  #L3042d8.  goto L3042e2;
  #L3042da.  v3:= 6I;
  #L3042dc.  if v6 != v14 then goto L3042ea;
  #L3042e0.  v6:= 6I;
  #L3042e2.  v5:= v12;
  #L3042e4.  v3:= 1I;
  #L3042e6.  goto L30413a;
  #L3042ea.  return v4;
}
procedure `char` `Z0`(`com.airbnb.lottie.parser.moshi.c` v9 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Z0:()C` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L303460.  v0:= v9.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L303464.  v1:= 1L;
  #L303468.  call temp:= `request`(v0, v1) @signature `Lokio/o;.request:(J)Z` @kind interface;
  #L30346e.  v0:= temp;
  #L303470.  if v0 == 0 then goto L303626;
  #L303474.  v0:= v9.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303478.  call temp:= `readByte`(v0) @signature `Lokio/k;.readByte:()B` @kind virtual;
  #L30347e.  v0:= temp;
  #L303480.  v1:= 10I;
  #L303484.  if v0 == v1 then goto L303622;
  #L303488.  v2:= 34I;
  #L30348c.  if v0 == v2 then goto L303622;
  #L303490.  v2:= 39I;
  #L303494.  if v0 == v2 then goto L303622;
  #L303498.  v2:= 47I;
  #L30349c.  if v0 == v2 then goto L303622;
  #L3034a0.  v2:= 92I;
  #L3034a4.  if v0 == v2 then goto L303622;
  #L3034a8.  v2:= 98I;
  #L3034ac.  if v0 == v2 then goto L30361c;
  #L3034b0.  v2:= 102I;
  #L3034b4.  if v0 == v2 then goto L303616;
  #L3034b8.  v3:= 110I;
  #L3034bc.  if v0 == v3 then goto L303614;
  #L3034c0.  v3:= 114I;
  #L3034c4.  if v0 == v3 then goto L30360e;
  #L3034c8.  v3:= 116I;
  #L3034cc.  if v0 == v3 then goto L303608;
  #L3034d0.  v3:= 117I;
  #L3034d4.  if v0 == v3 then goto L303512;
  #L3034d8.  v1:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.g` @type ^`boolean` @kind boolean;
  #L3034dc.  if v1 == 0 then goto L3034e4;
  #L3034e0.  v0:= (`char`) v0 @kind i2c;
  #L3034e2.  return v0;
  #L3034e4.  v1:= new `java.lang.StringBuilder`;
  #L3034e8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3034ee.  v2:= "Invalid escape sequence: \\" @kind object;
  #L3034f2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3034f8.  v0:= (`char`) v0 @kind i2c;
  #L3034fa.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L303500.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L303506.  v0:= temp @kind object;
  #L303508.  call temp:= `P0`(v9, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @kind virtual;
  #L30350e.  v0:= temp @kind object;
  #L303510.  throw v0;
  #L303512.  v0:= v9.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L303516.  v3:= 4L;
  #L30351a.  call temp:= `request`(v0, v3) @signature `Lokio/o;.request:(J)Z` @kind interface;
  #L303520.  v0:= temp;
  #L303522.  if v0 == 0 then goto L3035d2;
  #L303526.  v0:= 0I;
  #L303528.  v5:= 0I;
  #L30352a.  v6:= 4I;
  #L30352c.  if v0 >= v6 then goto L3035c6;
  #L303530.  v6:= v9.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303534.  v7:= (`long`) v0 @kind i2l;
  #L303536.  call temp:= `K0`(v6, v7) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L30353c.  v6:= temp;
  #L30353e.  v5:= v5 ^< 4;
  #L303542.  v5:= (`char`) v5 @kind i2c;
  #L303544.  v7:= 48I;
  #L303548.  if v6 < v7 then goto L30355e;
  #L30354c.  v7:= 57I;
  #L303550.  if v6 > v7 then goto L30355e;
  #L303554.  v6:= v6 + -48;
  #L303558.  v5:= v5 + v6 @kind int;
  #L30355a.  v5:= (`char`) v5 @kind i2c;
  #L30355c.  goto L303588;
  #L30355e.  v7:= 97I;
  #L303562.  if v6 < v7 then goto L303572;
  #L303566.  if v6 > v2 then goto L303572;
  #L30356a.  v6:= v6 + -97;
  #L30356e.  v6:= v6 + v1 @kind int;
  #L303570.  goto L303558;
  #L303572.  v7:= 65I;
  #L303576.  if v6 < v7 then goto L30358e;
  #L30357a.  v7:= 70I;
  #L30357e.  if v6 > v7 then goto L30358e;
  #L303582.  v6:= v6 + -65;
  #L303586.  goto L30356e;
  #L303588.  v0:= v0 + 1;
  #L30358c.  goto L30352a;
  #L30358e.  v0:= new `java.lang.StringBuilder`;
  #L303592.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L303598.  v1:= "\\u" @kind object;
  #L30359c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3035a2.  v1:= v9.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L3035a6.  call temp:= `Z0`(v1, v3) @signature `Lokio/k;.Z0:(J)Ljava/lang/String;` @kind virtual;
  #L3035ac.  v1:= temp @kind object;
  #L3035ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3035b4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3035ba.  v0:= temp @kind object;
  #L3035bc.  call temp:= `P0`(v9, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @kind virtual;
  #L3035c2.  v0:= temp @kind object;
  #L3035c4.  throw v0;
  #L3035c6.  v0:= v9.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L3035ca.  call `skip`(v0, v3) @signature `Lokio/k;.skip:(J)V` @kind virtual;
  #L3035d0.  return v5;
  #L3035d2.  v0:= new `java.io.EOFException`;
  #L3035d6.  v1:= new `java.lang.StringBuilder`;
  #L3035da.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3035e0.  v2:= "Unterminated escape sequence at path " @kind object;
  #L3035e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3035ea.  call temp:= `getPath`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3035f0.  v2:= temp @kind object;
  #L3035f2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3035f8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3035fe.  v1:= temp @kind object;
  #L303600.  call `<init>`(v0, v1) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L303606.  throw v0;
  #L303608.  v0:= 9I;
  #L30360c.  return v0;
  #L30360e.  v0:= 13I;
  #L303612.  return v0;
  #L303614.  return v1;
  #L303616.  v0:= 12I;
  #L30361a.  return v0;
  #L30361c.  v0:= 8I;
  #L303620.  return v0;
  #L303622.  v0:= (`char`) v0 @kind i2c;
  #L303624.  return v0;
  #L303626.  v0:= "Unterminated escape sequence" @kind object;
  #L30362a.  call temp:= `P0`(v9, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @kind virtual;
  #L303630.  v0:= temp @kind object;
  #L303632.  goto L303636;
  #L303634.  throw v0;
  #L303636.  goto L303634;
}
procedure `void` `a1`(`com.airbnb.lottie.parser.moshi.c` v6 @kind this, `okio.ByteString` v7 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/c;.a1:(Lokio/ByteString;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L304b78.  v0:= v6.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L304b7c.  call temp:= `T`(v0, v7) @signature `Lokio/o;.T:(Lokio/ByteString;)J` @kind interface;
  #L304b82.  v0:= temp @kind wide;
  #L304b84.  v2:= -1L;
  #L304b88.  v4:= lcmp(v0, v2);
  #L304b8c.  if v4 == 0 then goto L304bca;
  #L304b90.  v2:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L304b94.  call temp:= `K0`(v2, v0) @signature `Lokio/k;.K0:(J)B` @kind virtual;
  #L304b9a.  v2:= temp;
  #L304b9c.  v3:= 92I;
  #L304ba0.  v4:= 1L;
  #L304ba4.  if v2 != v3 then goto L304bbc;
  #L304ba8.  v2:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L304bac.  v0:= v0 + v4 @kind long;
  #L304bae.  call `skip`(v2, v0) @signature `Lokio/k;.skip:(J)V` @kind virtual;
  #L304bb4.  call temp:= `Z0`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/c;.Z0:()C` @kind direct;
  #L304bba.  goto L304b78;
  #L304bbc.  v7:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L304bc0.  v0:= v0 + v4 @kind long;
  #L304bc2.  call `skip`(v7, v0) @signature `Lokio/k;.skip:(J)V` @kind virtual;
  #L304bc8.  return @kind void;
  #L304bca.  v7:= "Unterminated string" @kind object;
  #L304bce.  call temp:= `P0`(v6, v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.P0:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;` @kind virtual;
  #L304bd4.  v7:= temp @kind object;
  #L304bd6.  goto L304bda;
  #L304bd8.  throw v7;
  #L304bda.  goto L304bd8;
}
procedure `boolean` `b1`(`com.airbnb.lottie.parser.moshi.c` v7 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.b1:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L303408.  v0:= v7.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L30340c.  v1:= `@@com.airbnb.lottie.parser.moshi.c.m` @type ^`okio.ByteString` @kind object;
  #L303410.  call temp:= `M`(v0, v1) @signature `Lokio/o;.M:(Lokio/ByteString;)J` @kind interface;
  #L303416.  v2:= temp @kind wide;
  #L303418.  v4:= -1L;
  #L30341c.  v0:= lcmp(v2, v4);
  #L303420.  if v0 == 0 then goto L303428;
  #L303424.  v0:= 1I;
  #L303426.  goto L30342a;
  #L303428.  v0:= 0I;
  #L30342a.  v4:= v7.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L30342e.  if v0 == 0 then goto L303440;
  #L303432.  call temp:= `size`(v1) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L303438.  v1:= temp;
  #L30343a.  v5:= (`long`) v1 @kind i2l;
  #L30343c.  v2:= v2 + v5 @kind long;
  #L30343e.  goto L303448;
  #L303440.  call temp:= `f1`(v4) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L303446.  v2:= temp @kind wide;
  #L303448.  call `skip`(v4, v2) @signature `Lokio/k;.skip:(J)V` @kind virtual;
  #L30344e.  return v0;
}
procedure `void` `c1`(`com.airbnb.lottie.parser.moshi.c` v6 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.c1:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L304bec.  v0:= v6.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L304bf0.  v1:= `@@com.airbnb.lottie.parser.moshi.c.l` @type ^`okio.ByteString` @kind object;
  #L304bf4.  call temp:= `T`(v0, v1) @signature `Lokio/o;.T:(Lokio/ByteString;)J` @kind interface;
  #L304bfa.  v0:= temp @kind wide;
  #L304bfc.  v2:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L304c00.  v3:= -1L;
  #L304c04.  v5:= lcmp(v0, v3);
  #L304c08.  if v5 == 0 then goto L304c14;
  #L304c0c.  v3:= 1L;
  #L304c10.  v0:= v0 + v3 @kind long;
  #L304c12.  goto L304c1c;
  #L304c14.  call temp:= `f1`(v2) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L304c1a.  v0:= temp @kind wide;
  #L304c1c.  call `skip`(v2, v0) @signature `Lokio/k;.skip:(J)V` @kind virtual;
  #L304c22.  return @kind void;
}
procedure `void` `d1`(`com.airbnb.lottie.parser.moshi.c` v6 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.d1:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L304c34.  v0:= v6.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L304c38.  v1:= `@@com.airbnb.lottie.parser.moshi.c.k` @type ^`okio.ByteString` @kind object;
  #L304c3c.  call temp:= `T`(v0, v1) @signature `Lokio/o;.T:(Lokio/ByteString;)J` @kind interface;
  #L304c42.  v0:= temp @kind wide;
  #L304c44.  v2:= v6.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L304c48.  v3:= -1L;
  #L304c4c.  v5:= lcmp(v0, v3);
  #L304c50.  if v5 == 0 then goto L304c56;
  #L304c54.  goto L304c5e;
  #L304c56.  call temp:= `f1`(v2) @signature `Lokio/k;.f1:()J` @kind virtual;
  #L304c5c.  v0:= temp @kind wide;
  #L304c5e.  call `skip`(v2, v0) @signature `Lokio/k;.skip:(J)V` @kind virtual;
  #L304c64.  return @kind void;
}
procedure `java.lang.String` `C`(`com.airbnb.lottie.parser.moshi.c` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.C:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3043b8.  v0:= v3.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int`;
  #L3043bc.  if v0 != 0 then goto L3043c8;
  #L3043c0.  call temp:= `R0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @kind direct;
  #L3043c6.  v0:= temp;
  #L3043c8.  v1:= 14I;
  #L3043cc.  if v0 != v1 then goto L3043da;
  #L3043d0.  call temp:= `W0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.W0:()Ljava/lang/String;` @kind direct;
  #L3043d6.  v0:= temp @kind object;
  #L3043d8.  goto L304412;
  #L3043da.  v1:= 13I;
  #L3043de.  if v0 != v1 then goto L3043f0;
  #L3043e2.  v0:= `@@com.airbnb.lottie.parser.moshi.c.j` @type ^`okio.ByteString` @kind object;
  #L3043e6.  call temp:= `V0`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/c;.V0:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L3043ec.  v0:= temp @kind object;
  #L3043ee.  goto L304412;
  #L3043f0.  v1:= 12I;
  #L3043f4.  if v0 != v1 then goto L304406;
  #L3043f8.  v0:= `@@com.airbnb.lottie.parser.moshi.c.i` @type ^`okio.ByteString` @kind object;
  #L3043fc.  call temp:= `V0`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/c;.V0:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L304402.  v0:= temp @kind object;
  #L304404.  goto L304412;
  #L304406.  v1:= 15I;
  #L30440a.  if v0 != v1 then goto L30442a;
  #L30440e.  v0:= v3.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` @kind object;
  #L304412.  v1:= 0I;
  #L304414.  v3.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L304418.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`java.lang.String`[] @kind object;
  #L30441c.  v2:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L304420.  v2:= v2 + -1;
  #L304424.  v1[v2]:= v0 @kind object;
  #L304428.  return v0 @kind object;
  #L30442a.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L30442e.  v1:= new `java.lang.StringBuilder`;
  #L304432.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304438.  v2:= "Expected a name but was " @kind object;
  #L30443c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304442.  call temp:= `u0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L304448.  v2:= temp @kind object;
  #L30444a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304450.  v2:= " at path " @kind object;
  #L304454.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30445a.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L304460.  v2:= temp @kind object;
  #L304462.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304468.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30446e.  v1:= temp @kind object;
  #L304470.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L304476.  throw v0;
}
procedure `int` `G0`(`com.airbnb.lottie.parser.moshi.c` v4 @kind this, `com.airbnb.lottie.parser.moshi.a` v5 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/c;.G0:(Lcom/airbnb/lottie/parser/moshi/a;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3042fc.  v0:= v4.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int`;
  #L304300.  if v0 != 0 then goto L30430c;
  #L304304.  call temp:= `R0`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @kind direct;
  #L30430a.  v0:= temp;
  #L30430c.  v1:= 12I;
  #L304310.  v2:= -1I;
  #L304312.  if v0 < v1 then goto L3043a4;
  #L304316.  v1:= 15I;
  #L30431a.  if v0 <= v1 then goto L304320;
  #L30431e.  goto L3043a4;
  #L304320.  if v0 != v1 then goto L304332;
  #L304324.  v0:= v4.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` @kind object;
  #L304328.  call temp:= `S0`(v4, v0, v5) @signature `Lcom/airbnb/lottie/parser/moshi/c;.S0:(Ljava/lang/String;Lcom/airbnb/lottie/parser/moshi/a;)I` @kind direct;
  #L30432e.  v5:= temp;
  #L304330.  return v5;
  #L304332.  v0:= v4.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L304336.  v3:= v5.`com.airbnb.lottie.parser.moshi.a.b` @type ^`okio.x` @kind object;
  #L30433a.  call temp:= `M0`(v0, v3) @signature `Lokio/o;.M0:(Lokio/x;)I` @kind interface;
  #L304340.  v0:= temp;
  #L304342.  if v0 == v2 then goto L304366;
  #L304346.  v1:= 0I;
  #L304348.  v4.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L30434c.  v1:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`java.lang.String`[] @kind object;
  #L304350.  v2:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L304354.  v2:= v2 + -1;
  #L304358.  v5:= v5.`com.airbnb.lottie.parser.moshi.a.a` @type ^`java.lang.String`[] @kind object;
  #L30435c.  v5:= v5[v0] @kind object;
  #L304360.  v1[v2]:= v5 @kind object;
  #L304364.  return v0;
  #L304366.  v0:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`java.lang.String`[] @kind object;
  #L30436a.  v3:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L30436e.  v3:= v3 + -1;
  #L304372.  v0:= v0[v3] @kind object;
  #L304376.  call temp:= `C`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/c;.C:()Ljava/lang/String;` @kind virtual;
  #L30437c.  v3:= temp @kind object;
  #L30437e.  call temp:= `S0`(v4, v3, v5) @signature `Lcom/airbnb/lottie/parser/moshi/c;.S0:(Ljava/lang/String;Lcom/airbnb/lottie/parser/moshi/a;)I` @kind direct;
  #L304384.  v5:= temp;
  #L304386.  if v5 != v2 then goto L3043a2;
  #L30438a.  v4.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L30438e.  v4.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` := v3 @kind object;
  #L304392.  v1:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`java.lang.String`[] @kind object;
  #L304396.  v2:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L30439a.  v2:= v2 + -1;
  #L30439e.  v1[v2]:= v0 @kind object;
  #L3043a2.  return v5;
  #L3043a4.  return v2;
}
procedure `void` `K0`(`com.airbnb.lottie.parser.moshi.c` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.K0:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L304a58.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.h` @type ^`boolean` @kind boolean;
  #L304a5c.  if v0 != 0 then goto L304b1a;
  #L304a60.  v0:= v3.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int`;
  #L304a64.  if v0 != 0 then goto L304a70;
  #L304a68.  call temp:= `R0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @kind direct;
  #L304a6e.  v0:= temp;
  #L304a70.  v1:= 14I;
  #L304a74.  if v0 != v1 then goto L304a80;
  #L304a78.  call `d1`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.d1:()V` @kind direct;
  #L304a7e.  goto L304ab0;
  #L304a80.  v1:= 13I;
  #L304a84.  if v0 != v1 then goto L304a94;
  #L304a88.  v0:= `@@com.airbnb.lottie.parser.moshi.c.j` @type ^`okio.ByteString` @kind object;
  #L304a8c.  call `a1`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/c;.a1:(Lokio/ByteString;)V` @kind direct;
  #L304a92.  goto L304ab0;
  #L304a94.  v1:= 12I;
  #L304a98.  if v0 != v1 then goto L304aa8;
  #L304a9c.  v0:= `@@com.airbnb.lottie.parser.moshi.c.i` @type ^`okio.ByteString` @kind object;
  #L304aa0.  call `a1`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/c;.a1:(Lokio/ByteString;)V` @kind direct;
  #L304aa6.  goto L304ab0;
  #L304aa8.  v1:= 15I;
  #L304aac.  if v0 != v1 then goto L304acc;
  #L304ab0.  v0:= 0I;
  #L304ab2.  v3.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v0;
  #L304ab6.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`java.lang.String`[] @kind object;
  #L304aba.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L304abe.  v1:= v1 + -1;
  #L304ac2.  v2:= "null" @kind object;
  #L304ac6.  v0[v1]:= v2 @kind object;
  #L304aca.  return @kind void;
  #L304acc.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L304ad0.  v1:= new `java.lang.StringBuilder`;
  #L304ad4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304ada.  v2:= "Expected a name but was " @kind object;
  #L304ade.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304ae4.  call temp:= `u0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L304aea.  v2:= temp @kind object;
  #L304aec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304af2.  v2:= " at path " @kind object;
  #L304af6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304afc.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L304b02.  v2:= temp @kind object;
  #L304b04.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304b0a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304b10.  v1:= temp @kind object;
  #L304b12.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L304b18.  throw v0;
  #L304b1a.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L304b1e.  v1:= new `java.lang.StringBuilder`;
  #L304b22.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304b28.  v2:= "Cannot skip unexpected " @kind object;
  #L304b2c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304b32.  call temp:= `u0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L304b38.  v2:= temp @kind object;
  #L304b3a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304b40.  v2:= " at " @kind object;
  #L304b44.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304b4a.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L304b50.  v2:= temp @kind object;
  #L304b52.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304b58.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304b5e.  v1:= temp @kind object;
  #L304b60.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L304b66.  throw v0;
}
procedure `void` `N0`(`com.airbnb.lottie.parser.moshi.c` v7 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.N0:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L304c78.  v0:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.h` @type ^`boolean` @kind boolean;
  #L304c7c.  if v0 != 0 then goto L304e6e;
  #L304c80.  v0:= 0I;
  #L304c82.  v1:= 0I;
  #L304c84.  v2:= v7.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int`;
  #L304c88.  if v2 != 0 then goto L304c94;
  #L304c8c.  call temp:= `R0`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @kind direct;
  #L304c92.  v2:= temp;
  #L304c94.  v3:= 3I;
  #L304c96.  v4:= 1I;
  #L304c98.  if v2 != v3 then goto L304caa;
  #L304c9c.  call `A0`(v7, v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.A0:(I)V` @kind virtual;
  #L304ca2.  v1:= v1 + 1;
  #L304ca6.  goto L304e40;
  #L304caa.  if v2 != v4 then goto L304cb6;
  #L304cae.  call `A0`(v7, v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.A0:(I)V` @kind virtual;
  #L304cb4.  goto L304ca2;
  #L304cb6.  v3:= 4I;
  #L304cb8.  v5:= " at path " @kind object;
  #L304cbc.  v6:= "Expected a value but was " @kind object;
  #L304cc0.  if v2 != v3 then goto L304d20;
  #L304cc4.  v1:= v1 + -1;
  #L304cc8.  if v1 < 0 then goto L304cda;
  #L304ccc.  v2:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L304cd0.  v2:= v2 - v4 @kind int;
  #L304cd2.  v7.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int` := v2;
  #L304cd6.  goto L304e40;
  #L304cda.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L304cde.  v1:= new `java.lang.StringBuilder`;
  #L304ce2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304ce8.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304cee.  call temp:= `u0`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L304cf4.  v2:= temp @kind object;
  #L304cf6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304cfc.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304d02.  call temp:= `getPath`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L304d08.  v2:= temp @kind object;
  #L304d0a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304d10.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304d16.  v1:= temp @kind object;
  #L304d18.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L304d1e.  throw v0;
  #L304d20.  v3:= 2I;
  #L304d22.  if v2 != v3 then goto L304d82;
  #L304d26.  v1:= v1 + -1;
  #L304d2a.  if v1 < 0 then goto L304d3c;
  #L304d2e.  v2:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L304d32.  v2:= v2 - v4 @kind int;
  #L304d34.  v7.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int` := v2;
  #L304d38.  goto L304e40;
  #L304d3c.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L304d40.  v1:= new `java.lang.StringBuilder`;
  #L304d44.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304d4a.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304d50.  call temp:= `u0`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L304d56.  v2:= temp @kind object;
  #L304d58.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304d5e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304d64.  call temp:= `getPath`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L304d6a.  v2:= temp @kind object;
  #L304d6c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304d72.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304d78.  v1:= temp @kind object;
  #L304d7a.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L304d80.  throw v0;
  #L304d82.  v3:= 14I;
  #L304d86.  if v2 == v3 then goto L304e3a;
  #L304d8a.  v3:= 10I;
  #L304d8e.  if v2 != v3 then goto L304d94;
  #L304d92.  goto L304e3a;
  #L304d94.  v3:= 9I;
  #L304d98.  if v2 == v3 then goto L304e2e;
  #L304d9c.  v3:= 13I;
  #L304da0.  if v2 != v3 then goto L304da6;
  #L304da4.  goto L304e2e;
  #L304da6.  v3:= 8I;
  #L304daa.  if v2 == v3 then goto L304e22;
  #L304dae.  v3:= 12I;
  #L304db2.  if v2 != v3 then goto L304db8;
  #L304db6.  goto L304e22;
  #L304db8.  v3:= 17I;
  #L304dbc.  if v2 != v3 then goto L304dd2;
  #L304dc0.  v2:= v7.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L304dc4.  v3:= v7.`com.airbnb.lottie.parser.moshi.c.r` @type ^`int`;
  #L304dc8.  v5:= (`long`) v3 @kind i2l;
  #L304dca.  call `skip`(v2, v5) @signature `Lokio/k;.skip:(J)V` @kind virtual;
  #L304dd0.  goto L304e40;
  #L304dd2.  v3:= 18I;
  #L304dd6.  if v2 == v3 then goto L304ddc;
  #L304dda.  goto L304e40;
  #L304ddc.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L304de0.  v1:= new `java.lang.StringBuilder`;
  #L304de4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304dea.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304df0.  call temp:= `u0`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L304df6.  v2:= temp @kind object;
  #L304df8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304dfe.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304e04.  call temp:= `getPath`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L304e0a.  v2:= temp @kind object;
  #L304e0c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304e12.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304e18.  v1:= temp @kind object;
  #L304e1a.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L304e20.  throw v0;
  #L304e22.  v2:= `@@com.airbnb.lottie.parser.moshi.c.i` @type ^`okio.ByteString` @kind object;
  #L304e26.  call `a1`(v7, v2) @signature `Lcom/airbnb/lottie/parser/moshi/c;.a1:(Lokio/ByteString;)V` @kind direct;
  #L304e2c.  goto L304e40;
  #L304e2e.  v2:= `@@com.airbnb.lottie.parser.moshi.c.j` @type ^`okio.ByteString` @kind object;
  #L304e32.  call `a1`(v7, v2) @signature `Lcom/airbnb/lottie/parser/moshi/c;.a1:(Lokio/ByteString;)V` @kind direct;
  #L304e38.  goto L304e40;
  #L304e3a.  call `d1`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/c;.d1:()V` @kind direct;
  #L304e40.  v7.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v0;
  #L304e44.  if v1 != 0 then goto L304c84;
  #L304e48.  v0:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] @kind object;
  #L304e4c.  v1:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L304e50.  v2:= v1 + -1;
  #L304e54.  v3:= v0[v2];
  #L304e58.  v3:= v3 + v4 @kind int;
  #L304e5a.  v0[v2]:= v3;
  #L304e5e.  v0:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`java.lang.String`[] @kind object;
  #L304e62.  v1:= v1 - v4 @kind int;
  #L304e64.  v2:= "null" @kind object;
  #L304e68.  v0[v1]:= v2 @kind object;
  #L304e6c.  return @kind void;
  #L304e6e.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L304e72.  v1:= new `java.lang.StringBuilder`;
  #L304e76.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304e7c.  v2:= "Cannot skip unexpected " @kind object;
  #L304e80.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304e86.  call temp:= `u0`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L304e8c.  v2:= temp @kind object;
  #L304e8e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304e94.  v2:= " at " @kind object;
  #L304e98.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304e9e.  call temp:= `getPath`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L304ea4.  v2:= temp @kind object;
  #L304ea6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304eac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304eb2.  v1:= temp @kind object;
  #L304eb4.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L304eba.  goto L304ebe;
  #L304ebc.  throw v0;
  #L304ebe.  goto L304ebc;
}
procedure `void` `c`(`com.airbnb.lottie.parser.moshi.c` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L304794.  v0:= v3.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int`;
  #L304798.  if v0 != 0 then goto L3047a4;
  #L30479c.  call temp:= `R0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @kind direct;
  #L3047a2.  v0:= temp;
  #L3047a4.  v1:= 3I;
  #L3047a6.  if v0 != v1 then goto L3047c8;
  #L3047aa.  v0:= 1I;
  #L3047ac.  call `A0`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.A0:(I)V` @kind virtual;
  #L3047b2.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] @kind object;
  #L3047b6.  v2:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L3047ba.  v2:= v2 - v0 @kind int;
  #L3047bc.  v0:= 0I;
  #L3047be.  v1[v2]:= v0;
  #L3047c2.  v3.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v0;
  #L3047c6.  return @kind void;
  #L3047c8.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L3047cc.  v1:= new `java.lang.StringBuilder`;
  #L3047d0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3047d6.  v2:= "Expected BEGIN_ARRAY but was " @kind object;
  #L3047da.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3047e0.  call temp:= `u0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3047e6.  v2:= temp @kind object;
  #L3047e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3047ee.  v2:= " at path " @kind object;
  #L3047f2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3047f8.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3047fe.  v2:= temp @kind object;
  #L304800.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304806.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30480c.  v1:= temp @kind object;
  #L30480e.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L304814.  throw v0;
}
procedure `void` `close`(`com.airbnb.lottie.parser.moshi.c` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3048d4.  v0:= 0I;
  #L3048d6.  v3.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v0;
  #L3048da.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L3048de.  v2:= 8I;
  #L3048e2.  v1[v0]:= v2;
  #L3048e6.  v0:= 1I;
  #L3048e8.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int` := v0;
  #L3048ec.  v0:= v3.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L3048f0.  call `a`(v0) @signature `Lokio/k;.a:()V` @kind virtual;
  #L3048f6.  v0:= v3.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L3048fa.  call `close`(v0) @signature `Lokio/i0;.close:()V` @kind interface;
  #L304900.  return @kind void;
}
procedure `void` `d`(`com.airbnb.lottie.parser.moshi.c` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L304828.  v0:= v3.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int`;
  #L30482c.  if v0 != 0 then goto L304838;
  #L304830.  call temp:= `R0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @kind direct;
  #L304836.  v0:= temp;
  #L304838.  v1:= 1I;
  #L30483a.  if v0 != v1 then goto L30484e;
  #L30483e.  v0:= 3I;
  #L304840.  call `A0`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.A0:(I)V` @kind virtual;
  #L304846.  v0:= 0I;
  #L304848.  v3.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v0;
  #L30484c.  return @kind void;
  #L30484e.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L304852.  v1:= new `java.lang.StringBuilder`;
  #L304856.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30485c.  v2:= "Expected BEGIN_OBJECT but was " @kind object;
  #L304860.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304866.  call temp:= `u0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L30486c.  v2:= temp @kind object;
  #L30486e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304874.  v2:= " at path " @kind object;
  #L304878.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30487e.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L304884.  v2:= temp @kind object;
  #L304886.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30488c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304892.  v1:= temp @kind object;
  #L304894.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30489a.  throw v0;
}
procedure `void` `k`(`com.airbnb.lottie.parser.moshi.c` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L304914.  v0:= v3.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int`;
  #L304918.  if v0 != 0 then goto L304924;
  #L30491c.  call temp:= `R0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @kind direct;
  #L304922.  v0:= temp;
  #L304924.  v1:= 4I;
  #L304926.  if v0 != v1 then goto L304952;
  #L30492a.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L30492e.  v0:= v0 + -1;
  #L304932.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int` := v0;
  #L304936.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] @kind object;
  #L30493a.  v0:= v0 + -1;
  #L30493e.  v2:= v1[v0];
  #L304942.  v2:= v2 + 1;
  #L304946.  v1[v0]:= v2;
  #L30494a.  v0:= 0I;
  #L30494c.  v3.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v0;
  #L304950.  return @kind void;
  #L304952.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L304956.  v1:= new `java.lang.StringBuilder`;
  #L30495a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304960.  v2:= "Expected END_ARRAY but was " @kind object;
  #L304964.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30496a.  call temp:= `u0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L304970.  v2:= temp @kind object;
  #L304972.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304978.  v2:= " at path " @kind object;
  #L30497c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304982.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L304988.  v2:= temp @kind object;
  #L30498a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304990.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304996.  v1:= temp @kind object;
  #L304998.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30499e.  throw v0;
}
procedure `void` `m`(`com.airbnb.lottie.parser.moshi.c` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.m:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3049b0.  v0:= v3.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int`;
  #L3049b4.  if v0 != 0 then goto L3049c0;
  #L3049b8.  call temp:= `R0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @kind direct;
  #L3049be.  v0:= temp;
  #L3049c0.  v1:= 2I;
  #L3049c2.  if v0 != v1 then goto L3049f8;
  #L3049c6.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L3049ca.  v0:= v0 + -1;
  #L3049ce.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int` := v0;
  #L3049d2.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`java.lang.String`[] @kind object;
  #L3049d6.  v2:= 0I;
  #L3049d8.  v1[v0]:= v2 @kind object;
  #L3049dc.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] @kind object;
  #L3049e0.  v0:= v0 + -1;
  #L3049e4.  v2:= v1[v0];
  #L3049e8.  v2:= v2 + 1;
  #L3049ec.  v1[v0]:= v2;
  #L3049f0.  v0:= 0I;
  #L3049f2.  v3.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v0;
  #L3049f6.  return @kind void;
  #L3049f8.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L3049fc.  v1:= new `java.lang.StringBuilder`;
  #L304a00.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304a06.  v2:= "Expected END_OBJECT but was " @kind object;
  #L304a0a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304a10.  call temp:= `u0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L304a16.  v2:= temp @kind object;
  #L304a18.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304a1e.  v2:= " at path " @kind object;
  #L304a22.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304a28.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L304a2e.  v2:= temp @kind object;
  #L304a30.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304a36.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304a3c.  v1:= temp @kind object;
  #L304a3e.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L304a44.  throw v0;
}
procedure `java.lang.String` `m0`(`com.airbnb.lottie.parser.moshi.c` v4 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.m0:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L304554.  v0:= v4.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int`;
  #L304558.  if v0 != 0 then goto L304564;
  #L30455c.  call temp:= `R0`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @kind direct;
  #L304562.  v0:= temp;
  #L304564.  v1:= 10I;
  #L304568.  if v0 != v1 then goto L304576;
  #L30456c.  call temp:= `W0`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/c;.W0:()Ljava/lang/String;` @kind direct;
  #L304572.  v0:= temp @kind object;
  #L304574.  goto L3045e6;
  #L304576.  v1:= 9I;
  #L30457a.  if v0 != v1 then goto L30458c;
  #L30457e.  v0:= `@@com.airbnb.lottie.parser.moshi.c.j` @type ^`okio.ByteString` @kind object;
  #L304582.  call temp:= `V0`(v4, v0) @signature `Lcom/airbnb/lottie/parser/moshi/c;.V0:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L304588.  v0:= temp @kind object;
  #L30458a.  goto L3045e6;
  #L30458c.  v1:= 8I;
  #L304590.  if v0 != v1 then goto L3045a2;
  #L304594.  v0:= `@@com.airbnb.lottie.parser.moshi.c.i` @type ^`okio.ByteString` @kind object;
  #L304598.  call temp:= `V0`(v4, v0) @signature `Lcom/airbnb/lottie/parser/moshi/c;.V0:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L30459e.  v0:= temp @kind object;
  #L3045a0.  goto L3045e6;
  #L3045a2.  v1:= 11I;
  #L3045a6.  if v0 != v1 then goto L3045b6;
  #L3045aa.  v0:= v4.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` @kind object;
  #L3045ae.  v1:= 0I;
  #L3045b0.  v4.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` := v1 @kind object;
  #L3045b4.  goto L3045e6;
  #L3045b6.  v1:= 16I;
  #L3045ba.  if v0 != v1 then goto L3045cc;
  #L3045be.  v0:= v4.`com.airbnb.lottie.parser.moshi.c.q` @type ^`long` @kind wide;
  #L3045c2.  call temp:= `toString`(v0) @signature `Ljava/lang/Long;.toString:(J)Ljava/lang/String;` @kind static;
  #L3045c8.  v0:= temp @kind object;
  #L3045ca.  goto L3045e6;
  #L3045cc.  v1:= 17I;
  #L3045d0.  if v0 != v1 then goto L304606;
  #L3045d4.  v0:= v4.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L3045d8.  v1:= v4.`com.airbnb.lottie.parser.moshi.c.r` @type ^`int`;
  #L3045dc.  v1:= (`long`) v1 @kind i2l;
  #L3045de.  call temp:= `Z0`(v0, v1) @signature `Lokio/k;.Z0:(J)Ljava/lang/String;` @kind virtual;
  #L3045e4.  v0:= temp @kind object;
  #L3045e6.  v1:= 0I;
  #L3045e8.  v4.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v1;
  #L3045ec.  v1:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] @kind object;
  #L3045f0.  v2:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L3045f4.  v2:= v2 + -1;
  #L3045f8.  v3:= v1[v2];
  #L3045fc.  v3:= v3 + 1;
  #L304600.  v1[v2]:= v3;
  #L304604.  return v0 @kind object;
  #L304606.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L30460a.  v1:= new `java.lang.StringBuilder`;
  #L30460e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304614.  v2:= "Expected a string but was " @kind object;
  #L304618.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30461e.  call temp:= `u0`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L304624.  v2:= temp @kind object;
  #L304626.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30462c.  v2:= " at path " @kind object;
  #L304630.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304636.  call temp:= `getPath`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L30463c.  v2:= temp @kind object;
  #L30463e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304644.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30464a.  v1:= temp @kind object;
  #L30464c.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L304652.  throw v0;
}
procedure `boolean` `o`(`com.airbnb.lottie.parser.moshi.c` v2 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.o:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L303278.  v0:= v2.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int`;
  #L30327c.  if v0 != 0 then goto L303288;
  #L303280.  call temp:= `R0`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @kind direct;
  #L303286.  v0:= temp;
  #L303288.  v1:= 2I;
  #L30328a.  if v0 == v1 then goto L3032a0;
  #L30328e.  v1:= 4I;
  #L303290.  if v0 == v1 then goto L3032a0;
  #L303294.  v1:= 18I;
  #L303298.  if v0 == v1 then goto L3032a0;
  #L30329c.  v0:= 1I;
  #L30329e.  goto L3032a2;
  #L3032a0.  v0:= 0I;
  #L3032a2.  return v0;
}
procedure `boolean` `s`(`com.airbnb.lottie.parser.moshi.c` v5 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.s:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L303354.  v0:= v5.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int`;
  #L303358.  if v0 != 0 then goto L303364;
  #L30335c.  call temp:= `R0`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @kind direct;
  #L303362.  v0:= temp;
  #L303364.  v1:= 5I;
  #L303366.  v2:= 0I;
  #L303368.  v3:= 1I;
  #L30336a.  if v0 != v1 then goto L303388;
  #L30336e.  v5.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v2;
  #L303372.  v0:= v5.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] @kind object;
  #L303376.  v1:= v5.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L30337a.  v1:= v1 - v3 @kind int;
  #L30337c.  v2:= v0[v1];
  #L303380.  v2:= v2 + v3 @kind int;
  #L303382.  v0[v1]:= v2;
  #L303386.  return v3;
  #L303388.  v1:= 6I;
  #L30338a.  if v0 != v1 then goto L3033a8;
  #L30338e.  v5.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v2;
  #L303392.  v0:= v5.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] @kind object;
  #L303396.  v1:= v5.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L30339a.  v1:= v1 - v3 @kind int;
  #L30339c.  v4:= v0[v1];
  #L3033a0.  v4:= v4 + v3 @kind int;
  #L3033a2.  v0[v1]:= v4;
  #L3033a6.  return v2;
  #L3033a8.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L3033ac.  v1:= new `java.lang.StringBuilder`;
  #L3033b0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3033b6.  v2:= "Expected a boolean but was " @kind object;
  #L3033ba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3033c0.  call temp:= `u0`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3033c6.  v2:= temp @kind object;
  #L3033c8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3033ce.  v2:= " at path " @kind object;
  #L3033d2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3033d8.  call temp:= `getPath`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3033de.  v2:= temp @kind object;
  #L3033e0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3033e6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3033ec.  v1:= temp @kind object;
  #L3033ee.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3033f4.  throw v0;
}
procedure `java.lang.String` `toString`(`com.airbnb.lottie.parser.moshi.c` v2 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3046ac.  v0:= new `java.lang.StringBuilder`;
  #L3046b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3046b6.  v1:= "JsonReader(" @kind object;
  #L3046ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3046c0.  v1:= v2.`com.airbnb.lottie.parser.moshi.c.n` @type ^`okio.o` @kind object;
  #L3046c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3046ca.  v1:= ")" @kind object;
  #L3046ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3046d4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3046da.  v0:= temp @kind object;
  #L3046dc.  return v0 @kind object;
}
procedure `com.airbnb.lottie.parser.moshi.JsonReader$Token` `u0`(`com.airbnb.lottie.parser.moshi.c` v1 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L303648.  v0:= v1.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int`;
  #L30364c.  if v0 != 0 then goto L303658;
  #L303650.  call temp:= `R0`(v1) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @kind direct;
  #L303656.  v0:= temp;
  #L303658.  goto L3036a8;
  #L30365e.  v0:= new `java.lang.AssertionError`;
  #L303662.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L303668.  throw v0;
  #L30366a.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.END_DOCUMENT` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L30366e.  return v0 @kind object;
  #L303670.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.NUMBER` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L303674.  return v0 @kind object;
  #L303676.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.NAME` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L30367a.  return v0 @kind object;
  #L30367c.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.STRING` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L303680.  return v0 @kind object;
  #L303682.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.NULL` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L303686.  return v0 @kind object;
  #L303688.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BOOLEAN` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L30368c.  return v0 @kind object;
  #L30368e.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.END_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L303692.  return v0 @kind object;
  #L303694.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L303698.  return v0 @kind object;
  #L30369a.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.END_OBJECT` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L30369e.  return v0 @kind object;
  #L3036a0.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_OBJECT` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3036a4.  return v0 @kind object;
  #L3036a6.  
  #L3036a8.  switch v0
                  | 1 => goto L3036a0
                  | 2 => goto L30369a
                  | 3 => goto L303694
                  | 4 => goto L30368e
                  | 5 => goto L303688
                  | 6 => goto L303688
                  | 7 => goto L303682
                  | 8 => goto L30367c
                  | 9 => goto L30367c
                  | 10 => goto L30367c
                  | 11 => goto L30367c
                  | 12 => goto L303676
                  | 13 => goto L303676
                  | 14 => goto L303676
                  | 15 => goto L303676
                  | 16 => goto L303670
                  | 17 => goto L303670
                  | 18 => goto L30366a
                  | else => goto L30365e;
}
procedure `double` `v`(`com.airbnb.lottie.parser.moshi.c` v8 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.v:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L303708.  v0:= v8.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int`;
  #L30370c.  if v0 != 0 then goto L303718;
  #L303710.  call temp:= `R0`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @kind direct;
  #L303716.  v0:= temp;
  #L303718.  v1:= 16I;
  #L30371c.  v2:= 0I;
  #L30371e.  if v0 != v1 then goto L303746;
  #L303722.  v8.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v2;
  #L303726.  v0:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] @kind object;
  #L30372a.  v1:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L30372e.  v1:= v1 + -1;
  #L303732.  v2:= v0[v1];
  #L303736.  v2:= v2 + 1;
  #L30373a.  v0[v1]:= v2;
  #L30373e.  v0:= v8.`com.airbnb.lottie.parser.moshi.c.q` @type ^`long` @kind wide;
  #L303742.  v0:= (`double`) v0 @kind l2d;
  #L303744.  return v0 @kind wide;
  #L303746.  v1:= 17I;
  #L30374a.  v3:= "Expected a double but was " @kind object;
  #L30374e.  v4:= 11I;
  #L303752.  v5:= " at path " @kind object;
  #L303756.  if v0 != v1 then goto L303772;
  #L30375a.  v0:= v8.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L30375e.  v1:= v8.`com.airbnb.lottie.parser.moshi.c.r` @type ^`int`;
  #L303762.  v6:= (`long`) v1 @kind i2l;
  #L303764.  call temp:= `Z0`(v0, v6) @signature `Lokio/k;.Z0:(J)Ljava/lang/String;` @kind virtual;
  #L30376a.  v0:= temp @kind object;
  #L30376c.  v8.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` := v0 @kind object;
  #L303770.  goto L3037c0;
  #L303772.  v1:= 9I;
  #L303776.  if v0 != v1 then goto L30378c;
  #L30377a.  v0:= `@@com.airbnb.lottie.parser.moshi.c.j` @type ^`okio.ByteString` @kind object;
  #L30377e.  call temp:= `V0`(v8, v0) @signature `Lcom/airbnb/lottie/parser/moshi/c;.V0:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L303784.  v0:= temp @kind object;
  #L303786.  v8.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` := v0 @kind object;
  #L30378a.  goto L3037c0;
  #L30378c.  v1:= 8I;
  #L303790.  if v0 != v1 then goto L3037a6;
  #L303794.  v0:= `@@com.airbnb.lottie.parser.moshi.c.i` @type ^`okio.ByteString` @kind object;
  #L303798.  call temp:= `V0`(v8, v0) @signature `Lcom/airbnb/lottie/parser/moshi/c;.V0:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L30379e.  v0:= temp @kind object;
  #L3037a0.  v8.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` := v0 @kind object;
  #L3037a4.  goto L3037c0;
  #L3037a6.  v1:= 10I;
  #L3037aa.  if v0 != v1 then goto L3037bc;
  #L3037ae.  call temp:= `W0`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/c;.W0:()Ljava/lang/String;` @kind direct;
  #L3037b4.  v0:= temp @kind object;
  #L3037b6.  v8.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` := v0 @kind object;
  #L3037ba.  goto L3037c0;
  #L3037bc.  if v0 != v4 then goto L30389a;
  #L3037c0.  v8.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v4;
  #L3037c4.  v0:= v8.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` @kind object;
  #L3037c8.  call temp:= `parseDouble`(v0) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L3037ce.  v0:= temp @kind wide;
  #L3037d0.  v3:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.g` @type ^`boolean` @kind boolean;
  #L3037d4.  if v3 != 0 then goto L303834;
  #L3037d8.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L3037de.  v3:= temp;
  #L3037e0.  if v3 != 0 then goto L3037f2;
  #L3037e4.  call temp:= `isInfinite`(v0) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L3037ea.  v3:= temp;
  #L3037ec.  if v3 != 0 then goto L3037f2;
  #L3037f0.  goto L303834;
  #L3037f2.  v2:= new `com.airbnb.lottie.parser.moshi.JsonEncodingException`;
  #L3037f6.  v3:= new `java.lang.StringBuilder`;
  #L3037fa.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L303800.  v4:= "JSON forbids NaN and infinities: " @kind object;
  #L303804.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30380a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L303810.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303816.  call temp:= `getPath`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L30381c.  v0:= temp @kind object;
  #L30381e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303824.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30382a.  v0:= temp @kind object;
  #L30382c.  call `<init>`(v2, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonEncodingException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L303832.  throw v2;
  #L303834.  v3:= 0I;
  #L303836.  v8.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` := v3 @kind object;
  #L30383a.  v8.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v2;
  #L30383e.  v2:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] @kind object;
  #L303842.  v3:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L303846.  v3:= v3 + -1;
  #L30384a.  v4:= v2[v3];
  #L30384e.  v4:= v4 + 1;
  #L303852.  v2[v3]:= v4;
  #L303856.  return v0 @kind wide;
  #L303858.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L30385c.  v1:= new `java.lang.StringBuilder`;
  #L303860.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L303866.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30386c.  v2:= v8.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` @kind object;
  #L303870.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303876.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30387c.  call temp:= `getPath`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L303882.  v2:= temp @kind object;
  #L303884.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30388a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L303890.  v1:= temp @kind object;
  #L303892.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L303898.  throw v0;
  #L30389a.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L30389e.  v1:= new `java.lang.StringBuilder`;
  #L3038a2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3038a8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3038ae.  call temp:= `u0`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3038b4.  v2:= temp @kind object;
  #L3038b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3038bc.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3038c2.  call temp:= `getPath`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3038c8.  v2:= temp @kind object;
  #L3038ca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3038d0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3038d6.  v1:= temp @kind object;
  #L3038d8.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3038de.  throw v0;
  catch `java.lang.NumberFormatException` @[L3037c4..L3037d0] goto L303858;
}
procedure `int` `x`(`com.airbnb.lottie.parser.moshi.c` v9 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/c;.x:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L303c94.  v0:= v9.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int`;
  #L303c98.  if v0 != 0 then goto L303ca4;
  #L303c9c.  call temp:= `R0`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/c;.R0:()I` @kind direct;
  #L303ca2.  v0:= temp;
  #L303ca4.  v1:= 16I;
  #L303ca8.  v2:= 0I;
  #L303caa.  v3:= " at path " @kind object;
  #L303cae.  v4:= "Expected an int but was " @kind object;
  #L303cb2.  if v0 != v1 then goto L303d26;
  #L303cb6.  v0:= v9.`com.airbnb.lottie.parser.moshi.c.q` @type ^`long` @kind wide;
  #L303cba.  v5:= (`int`) v0 @kind l2i;
  #L303cbc.  v6:= (`long`) v5 @kind i2l;
  #L303cbe.  v8:= lcmp(v0, v6);
  #L303cc2.  if v8 != 0 then goto L303ce4;
  #L303cc6.  v9.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v2;
  #L303cca.  v0:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] @kind object;
  #L303cce.  v1:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L303cd2.  v1:= v1 + -1;
  #L303cd6.  v2:= v0[v1];
  #L303cda.  v2:= v2 + 1;
  #L303cde.  v0[v1]:= v2;
  #L303ce2.  return v5;
  #L303ce4.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L303ce8.  v1:= new `java.lang.StringBuilder`;
  #L303cec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L303cf2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303cf8.  v4:= v9.`com.airbnb.lottie.parser.moshi.c.q` @type ^`long` @kind wide;
  #L303cfc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L303d02.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303d08.  call temp:= `getPath`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L303d0e.  v2:= temp @kind object;
  #L303d10.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303d16.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L303d1c.  v1:= temp @kind object;
  #L303d1e.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L303d24.  throw v0;
  #L303d26.  v1:= 17I;
  #L303d2a.  v5:= 11I;
  #L303d2e.  if v0 != v1 then goto L303d4a;
  #L303d32.  v0:= v9.`com.airbnb.lottie.parser.moshi.c.o` @type ^`okio.k` @kind object;
  #L303d36.  v1:= v9.`com.airbnb.lottie.parser.moshi.c.r` @type ^`int`;
  #L303d3a.  v6:= (`long`) v1 @kind i2l;
  #L303d3c.  call temp:= `Z0`(v0, v6) @signature `Lokio/k;.Z0:(J)Ljava/lang/String;` @kind virtual;
  #L303d42.  v0:= temp @kind object;
  #L303d44.  v9.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` := v0 @kind object;
  #L303d48.  goto L303df0;
  #L303d4a.  v1:= 9I;
  #L303d4e.  if v0 == v1 then goto L303da8;
  #L303d52.  v6:= 8I;
  #L303d56.  if v0 != v6 then goto L303d5c;
  #L303d5a.  goto L303da8;
  #L303d5c.  if v0 != v5 then goto L303d62;
  #L303d60.  goto L303df0;
  #L303d62.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L303d66.  v1:= new `java.lang.StringBuilder`;
  #L303d6a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L303d70.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303d76.  call temp:= `u0`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/c;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L303d7c.  v2:= temp @kind object;
  #L303d7e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303d84.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303d8a.  call temp:= `getPath`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L303d90.  v2:= temp @kind object;
  #L303d92.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303d98.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L303d9e.  v1:= temp @kind object;
  #L303da0.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L303da6.  throw v0;
  #L303da8.  if v0 != v1 then goto L303dba;
  #L303dac.  v0:= `@@com.airbnb.lottie.parser.moshi.c.j` @type ^`okio.ByteString` @kind object;
  #L303db0.  call temp:= `V0`(v9, v0) @signature `Lcom/airbnb/lottie/parser/moshi/c;.V0:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L303db6.  v0:= temp @kind object;
  #L303db8.  goto L303dc6;
  #L303dba.  v0:= `@@com.airbnb.lottie.parser.moshi.c.i` @type ^`okio.ByteString` @kind object;
  #L303dbe.  call temp:= `V0`(v9, v0) @signature `Lcom/airbnb/lottie/parser/moshi/c;.V0:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L303dc4.  v0:= temp @kind object;
  #L303dc6.  v9.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` := v0 @kind object;
  #L303dca.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L303dd0.  v0:= temp;
  #L303dd2.  v9.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v2;
  #L303dd6.  v1:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] @kind object;
  #L303dda.  v6:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L303dde.  v6:= v6 + -1;
  #L303de2.  v7:= v1[v6];
  #L303de6.  v7:= v7 + 1;
  #L303dea.  v1[v6]:= v7;
  #L303dee.  return v0;
  #L303df0.  v9.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v5;
  #L303df4.  v0:= v9.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` @kind object;
  #L303df8.  call temp:= `parseDouble`(v0) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L303dfe.  v0:= temp @kind wide;
  #L303e00.  v5:= (`int`) v0 @kind d2i;
  #L303e02.  v6:= (`double`) v5 @kind i2d;
  #L303e04.  v8:= dcmpl(v6, v0);
  #L303e08.  if v8 != 0 then goto L303e30;
  #L303e0c.  v0:= 0I;
  #L303e0e.  v9.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` := v0 @kind object;
  #L303e12.  v9.`com.airbnb.lottie.parser.moshi.c.p` @type ^`int` := v2;
  #L303e16.  v0:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`int`[] @kind object;
  #L303e1a.  v1:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`int`;
  #L303e1e.  v1:= v1 + -1;
  #L303e22.  v2:= v0[v1];
  #L303e26.  v2:= v2 + 1;
  #L303e2a.  v0[v1]:= v2;
  #L303e2e.  return v5;
  #L303e30.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L303e34.  v1:= new `java.lang.StringBuilder`;
  #L303e38.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L303e3e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303e44.  v2:= v9.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` @kind object;
  #L303e48.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303e4e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303e54.  call temp:= `getPath`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L303e5a.  v2:= temp @kind object;
  #L303e5c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303e62.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L303e68.  v1:= temp @kind object;
  #L303e6a.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L303e70.  throw v0;
  #L303e72.  v0:= new `com.airbnb.lottie.parser.moshi.JsonDataException`;
  #L303e76.  v1:= new `java.lang.StringBuilder`;
  #L303e7a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L303e80.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303e86.  v2:= v9.`com.airbnb.lottie.parser.moshi.c.s` @type ^`java.lang.String` @kind object;
  #L303e8a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303e90.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303e96.  call temp:= `getPath`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L303e9c.  v2:= temp @kind object;
  #L303e9e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L303ea4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L303eaa.  v1:= temp @kind object;
  #L303eac.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonDataException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L303eb2.  throw v0;
  catch `java.lang.NumberFormatException` @[L303dca..L303dee] goto L303df0;
  catch `java.lang.NumberFormatException` @[L303df4..L303e00] goto L303e72;
}
