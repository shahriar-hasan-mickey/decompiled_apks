record `com.airbnb.lottie.a1.c` @kind class @AccessFlag PUBLIC {
  `com.airbnb.lottie.a1.b` `com.airbnb.lottie.a1.c.a` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.w0.c.g` `com.airbnb.lottie.a1.c.b` @AccessFlag PRIVATE;
  `java.lang.Object` `com.airbnb.lottie.a1.c.c` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.airbnb.lottie.a1.c` v1 @kind this) @signature `Lcom/airbnb/lottie/a1/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L307e10.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L307e16.  v0:= new `com.airbnb.lottie.a1.b`;
  #L307e1a.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/a1/b;.<init>:()V` @kind direct;
  #L307e20.  v1.`com.airbnb.lottie.a1.c.a` @type ^`com.airbnb.lottie.a1.b` := v0 @kind object;
  #L307e24.  v0:= 0I;
  #L307e26.  v1.`com.airbnb.lottie.a1.c.c` @type ^`java.lang.Object` := v0 @kind object;
  #L307e2a.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.a1.c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/airbnb/lottie/a1/c;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L307e3c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L307e42.  v0:= new `com.airbnb.lottie.a1.b`;
  #L307e46.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/a1/b;.<init>:()V` @kind direct;
  #L307e4c.  v1.`com.airbnb.lottie.a1.c.a` @type ^`com.airbnb.lottie.a1.b` := v0 @kind object;
  #L307e50.  v0:= 0I;
  #L307e52.  v1.`com.airbnb.lottie.a1.c.c` @type ^`java.lang.Object` := v0 @kind object;
  #L307e56.  v1.`com.airbnb.lottie.a1.c.c` @type ^`java.lang.Object` := v2 @kind object;
  #L307e5a.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.airbnb.lottie.a1.c` v0 @kind this, `com.airbnb.lottie.a1.b` v1 @kind object) @signature `Lcom/airbnb/lottie/a1/c;.a:(Lcom/airbnb/lottie/a1/b;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L307dc4.  v1:= v0.`com.airbnb.lottie.a1.c.c` @type ^`java.lang.Object` @kind object;
  #L307dc8.  return v1 @kind object;
}
procedure `java.lang.Object` `b`(`com.airbnb.lottie.a1.c` v8 @kind this, `float` v9 , `float` v10 , `java.lang.Object` v11 @kind object, `java.lang.Object` v12 @kind object, `float` v13 , `float` v14 , `float` v15 ) @signature `Lcom/airbnb/lottie/a1/c;.b:(FFLjava/lang/Object;Ljava/lang/Object;FFF)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L307ddc.  v0:= v8.`com.airbnb.lottie.a1.c.a` @type ^`com.airbnb.lottie.a1.b` @kind object;
  #L307de0.  v1:= v9;
  #L307de2.  v2:= v10;
  #L307de4.  v3:= v11 @kind object;
  #L307de6.  v4:= v12 @kind object;
  #L307de8.  v5:= v13;
  #L307dea.  v6:= v14;
  #L307dec.  v7:= v15;
  #L307dee.  call temp:= `h`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/airbnb/lottie/a1/b;.h:(FFLjava/lang/Object;Ljava/lang/Object;FFF)Lcom/airbnb/lottie/a1/b;` @kind virtual;
  #L307df4.  v9:= temp @kind object;
  #L307df6.  call temp:= `a`(v8, v9) @signature `Lcom/airbnb/lottie/a1/c;.a:(Lcom/airbnb/lottie/a1/b;)Ljava/lang/Object;` @kind virtual;
  #L307dfc.  v9:= temp @kind object;
  #L307dfe.  return v9 @kind object;
}
procedure `void` `c`(`com.airbnb.lottie.a1.c` v0 @kind this, `com.airbnb.lottie.w0.c.g` v1 @kind object) @signature `Lcom/airbnb/lottie/a1/c;.c:(Lcom/airbnb/lottie/w0/c/g;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L307e6c.  v0.`com.airbnb.lottie.a1.c.b` @type ^`com.airbnb.lottie.w0.c.g` := v1 @kind object;
  #L307e70.  return @kind void;
}
