record `com.airbnb.lottie.y0.v` @kind class @AccessFlag ABSTRACT {
}
global `com.airbnb.lottie.parser.moshi.a` `@@com.airbnb.lottie.y0.v.a` @AccessFlag STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/y0/v;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L300b2c.  v0:= "k" @kind object;
  #L300b30.  temp:= new `java.lang.String`[v0];
  #L300b36.  v0:= temp @kind object;
  #L300b38.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/a;.a:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/a;` @kind static;
  #L300b3e.  v0:= temp @kind object;
  #L300b40.  `@@com.airbnb.lottie.y0.v.a` @type ^`com.airbnb.lottie.parser.moshi.a` := v0 @kind object;
  #L300b44.  return @kind void;
}
procedure `java.util.List` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v9 @kind object, `com.airbnb.lottie.e0` v10 @kind object, `float` v11 , `com.airbnb.lottie.y0.p0` v12 @kind object, `boolean` v13 ) @signature `Lcom/airbnb/lottie/y0/v;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;FLcom/airbnb/lottie/y0/p0;Z)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L300a30.  v0:= new `java.util.ArrayList`;
  #L300a34.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L300a3a.  call temp:= `u0`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L300a40.  v1:= temp @kind object;
  #L300a42.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.STRING` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L300a46.  if v1 != v2 then goto L300a56;
  #L300a4a.  v9:= "Lottie doesn't support expressions." @kind object;
  #L300a4e.  call `a`(v10, v9) @signature `Lcom/airbnb/lottie/e0;.a:(Ljava/lang/String;)V` @kind virtual;
  #L300a54.  return v0 @kind object;
  #L300a56.  call `d`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:()V` @kind virtual;
  #L300a5c.  call temp:= `o`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L300a62.  v1:= temp;
  #L300a64.  if v1 == 0 then goto L300b0e;
  #L300a68.  v1:= `@@com.airbnb.lottie.y0.v.a` @type ^`com.airbnb.lottie.parser.moshi.a` @kind object;
  #L300a6c.  call temp:= `G0`(v9, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.G0:(Lcom/airbnb/lottie/parser/moshi/a;)I` @kind virtual;
  #L300a72.  v1:= temp;
  #L300a74.  if v1 == 0 then goto L300a80;
  #L300a78.  call `N0`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L300a7e.  goto L300a5c;
  #L300a80.  call temp:= `u0`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L300a86.  v1:= temp @kind object;
  #L300a88.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L300a8c.  if v1 != v2 then goto L300af2;
  #L300a90.  call `c`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.c:()V` @kind virtual;
  #L300a96.  call temp:= `u0`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L300a9c.  v1:= temp @kind object;
  #L300a9e.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.NUMBER` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L300aa2.  if v1 != v2 then goto L300ac2;
  #L300aa6.  v7:= 0I;
  #L300aa8.  v3:= v9 @kind object;
  #L300aaa.  v4:= v10 @kind object;
  #L300aac.  v5:= v11;
  #L300aae.  v6:= v12 @kind object;
  #L300ab0.  v8:= v13;
  #L300ab2.  call temp:= `c`(v3, v4, v5, v6, v7, v8) @signature `Lcom/airbnb/lottie/y0/u;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;FLcom/airbnb/lottie/y0/p0;ZZ)Lcom/airbnb/lottie/a1/a;` @kind static;
  #L300ab8.  v1:= temp @kind object;
  #L300aba.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L300ac0.  goto L300aea;
  #L300ac2.  call temp:= `o`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L300ac8.  v1:= temp;
  #L300aca.  if v1 == 0 then goto L300aea;
  #L300ace.  v6:= 1I;
  #L300ad0.  v2:= v9 @kind object;
  #L300ad2.  v3:= v10 @kind object;
  #L300ad4.  v4:= v11;
  #L300ad6.  v5:= v12 @kind object;
  #L300ad8.  v7:= v13;
  #L300ada.  call temp:= `c`(v2, v3, v4, v5, v6, v7) @signature `Lcom/airbnb/lottie/y0/u;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;FLcom/airbnb/lottie/y0/p0;ZZ)Lcom/airbnb/lottie/a1/a;` @kind static;
  #L300ae0.  v1:= temp @kind object;
  #L300ae2.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L300ae8.  goto L300ac2;
  #L300aea.  call `k`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.k:()V` @kind virtual;
  #L300af0.  goto L300a5c;
  #L300af2.  v6:= 0I;
  #L300af4.  v2:= v9 @kind object;
  #L300af6.  v3:= v10 @kind object;
  #L300af8.  v4:= v11;
  #L300afa.  v5:= v12 @kind object;
  #L300afc.  v7:= v13;
  #L300afe.  call temp:= `c`(v2, v3, v4, v5, v6, v7) @signature `Lcom/airbnb/lottie/y0/u;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;FLcom/airbnb/lottie/y0/p0;ZZ)Lcom/airbnb/lottie/a1/a;` @kind static;
  #L300b04.  v1:= temp @kind object;
  #L300b06.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L300b0c.  goto L300a5c;
  #L300b0e.  call `m`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m:()V` @kind virtual;
  #L300b14.  call `b`(v0) @signature `Lcom/airbnb/lottie/y0/v;.b:(Ljava/util/List;)V` @kind static;
  #L300b1a.  return v0 @kind object;
}
procedure `void` `b`(`java.util.List` v5 @kind object) @signature `Lcom/airbnb/lottie/y0/v;.b:(Ljava/util/List;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L300b58.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L300b5e.  v0:= temp;
  #L300b60.  v1:= 0I;
  #L300b62.  v2:= 1I;
  #L300b64.  v3:= v0 + -1;
  #L300b68.  if v1 >= v3 then goto L300bc0;
  #L300b6c.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L300b72.  v2:= temp @kind object;
  #L300b74.  v2:= (`com.airbnb.lottie.a1.a`) v2 @kind object;
  #L300b78.  v1:= v1 + 1;
  #L300b7c.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L300b82.  v3:= temp @kind object;
  #L300b84.  v3:= (`com.airbnb.lottie.a1.a`) v3 @kind object;
  #L300b88.  v4:= v3.`com.airbnb.lottie.a1.a.g` @type ^`float`;
  #L300b8c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L300b92.  v4:= temp @kind object;
  #L300b94.  v2.`com.airbnb.lottie.a1.a.h` @type ^`java.lang.Float` := v4 @kind object;
  #L300b98.  v4:= v2.`com.airbnb.lottie.a1.a.c` @type ^`java.lang.Object` @kind object;
  #L300b9c.  if v4 != 0 then goto L300b62;
  #L300ba0.  v3:= v3.`com.airbnb.lottie.a1.a.b` @type ^`java.lang.Object` @kind object;
  #L300ba4.  if v3 == 0 then goto L300b62;
  #L300ba8.  v2.`com.airbnb.lottie.a1.a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L300bac.  v3:= instanceof @variable v2 @type ^`com.airbnb.lottie.w0.c.p` @kind boolean;
  #L300bb0.  if v3 == 0 then goto L300b62;
  #L300bb4.  v2:= (`com.airbnb.lottie.w0.c.p`) v2 @kind object;
  #L300bb8.  call `i`(v2) @signature `Lcom/airbnb/lottie/w0/c/p;.i:()V` @kind virtual;
  #L300bbe.  goto L300b62;
  #L300bc0.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L300bc6.  v0:= temp @kind object;
  #L300bc8.  v0:= (`com.airbnb.lottie.a1.a`) v0 @kind object;
  #L300bcc.  v1:= v0.`com.airbnb.lottie.a1.a.b` @type ^`java.lang.Object` @kind object;
  #L300bd0.  if v1 == 0 then goto L300bdc;
  #L300bd4.  v1:= v0.`com.airbnb.lottie.a1.a.c` @type ^`java.lang.Object` @kind object;
  #L300bd8.  if v1 != 0 then goto L300bee;
  #L300bdc.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L300be2.  v1:= temp;
  #L300be4.  if v1 <= v2 then goto L300bee;
  #L300be8.  call temp:= `remove`(v5, v0) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L300bee.  return @kind void;
}
