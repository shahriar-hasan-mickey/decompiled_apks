record `com.airbnb.lottie.y0.b0` @kind class @AccessFlag ABSTRACT {
}
procedure `com.airbnb.lottie.w0.c.p` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v7 @kind object, `com.airbnb.lottie.e0` v8 @kind object) @signature `Lcom/airbnb/lottie/y0/b0;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/w0/c/p;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L301cf4.  call temp:= `u0`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L301cfa.  v0:= temp @kind object;
  #L301cfc.  v1:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_OBJECT` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L301d00.  if v0 != v1 then goto L301d0a;
  #L301d04.  v0:= 1I;
  #L301d06.  v5:= 1I;
  #L301d08.  goto L301d0e;
  #L301d0a.  v0:= 0I;
  #L301d0c.  v5:= 0I;
  #L301d0e.  call temp:= `e`() @signature `Lcom/airbnb/lottie/z0/l;.e:()F` @kind static;
  #L301d14.  v3:= temp;
  #L301d16.  v4:= `@@com.airbnb.lottie.y0.c0.a` @type ^`com.airbnb.lottie.y0.c0` @kind object;
  #L301d1a.  v6:= 0I;
  #L301d1c.  v1:= v7 @kind object;
  #L301d1e.  v2:= v8 @kind object;
  #L301d20.  call temp:= `c`(v1, v2, v3, v4, v5, v6) @signature `Lcom/airbnb/lottie/y0/u;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;FLcom/airbnb/lottie/y0/p0;ZZ)Lcom/airbnb/lottie/a1/a;` @kind static;
  #L301d26.  v7:= temp @kind object;
  #L301d28.  v0:= new `com.airbnb.lottie.w0.c.p`;
  #L301d2c.  call `<init>`(v0, v8, v7) @signature `Lcom/airbnb/lottie/w0/c/p;.<init>:(Lcom/airbnb/lottie/e0;Lcom/airbnb/lottie/a1/a;)V` @kind direct;
  #L301d32.  return v0 @kind object;
}
