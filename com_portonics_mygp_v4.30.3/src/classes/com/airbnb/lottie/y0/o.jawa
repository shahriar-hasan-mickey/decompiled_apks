record `com.airbnb.lottie.y0.o` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.y0.p0` @kind interface {
  `int` `com.airbnb.lottie.y0.o.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.airbnb.lottie.y0.o` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/lottie/y0/o;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ff830.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ff836.  v0.`com.airbnb.lottie.y0.o.a` @type ^`int` := v1;
  #L2ff83a.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.d` `b`(`com.airbnb.lottie.y0.o` v9 @kind this, `com.airbnb.lottie.model.content.d` v10 @kind object, `java.util.List` v11 @kind object) @signature `Lcom/airbnb/lottie/y0/o;.b:(Lcom/airbnb/lottie/model/content/d;Ljava/util/List;)Lcom/airbnb/lottie/model/content/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2ff294.  v0:= v9.`com.airbnb.lottie.y0.o.a` @type ^`int`;
  #L2ff298.  v0:= v0 * 4;
  #L2ff29c.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2ff2a2.  v1:= temp;
  #L2ff2a4.  if v1 > v0 then goto L2ff2aa;
  #L2ff2a8.  return v10 @kind object;
  #L2ff2aa.  call temp:= `b`(v10) @signature `Lcom/airbnb/lottie/model/content/d;.b:()[F` @kind virtual;
  #L2ff2b0.  v1:= temp @kind object;
  #L2ff2b2.  call temp:= `a`(v10) @signature `Lcom/airbnb/lottie/model/content/d;.a:()[I` @kind virtual;
  #L2ff2b8.  v2:= temp @kind object;
  #L2ff2ba.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2ff2c0.  v3:= temp;
  #L2ff2c2.  v3:= v3 - v0 @kind int;
  #L2ff2c4.  v3:= v3 / 2;
  #L2ff2c8.  v4:= new `float`[v3];
  #L2ff2cc.  v3:= new `float`[v3];
  #L2ff2d0.  v5:= 0I;
  #L2ff2d2.  v6:= 0I;
  #L2ff2d4.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2ff2da.  v7:= temp;
  #L2ff2dc.  if v0 >= v7 then goto L2ff324;
  #L2ff2e0.  v7:= v0 %% 2;
  #L2ff2e4.  if v7 != 0 then goto L2ff302;
  #L2ff2e8.  call temp:= `get`(v11, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2ff2ee.  v7:= temp @kind object;
  #L2ff2f0.  v7:= (`java.lang.Float`) v7 @kind object;
  #L2ff2f4.  call temp:= `floatValue`(v7) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2ff2fa.  v7:= temp;
  #L2ff2fc.  v4[v6]:= v7;
  #L2ff300.  goto L2ff31e;
  #L2ff302.  call temp:= `get`(v11, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2ff308.  v7:= temp @kind object;
  #L2ff30a.  v7:= (`java.lang.Float`) v7 @kind object;
  #L2ff30e.  call temp:= `floatValue`(v7) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2ff314.  v7:= temp;
  #L2ff316.  v3[v6]:= v7;
  #L2ff31a.  v6:= v6 + 1;
  #L2ff31e.  v0:= v0 + 1;
  #L2ff322.  goto L2ff2d4;
  #L2ff324.  call temp:= `b`(v10) @signature `Lcom/airbnb/lottie/model/content/d;.b:()[F` @kind virtual;
  #L2ff32a.  v10:= temp @kind object;
  #L2ff32c.  call temp:= `e`(v10, v4) @signature `Lcom/airbnb/lottie/y0/o;.e:([F[F)[F` @kind static;
  #L2ff332.  v10:= temp @kind object;
  #L2ff334.  v11:= length @variable v10;
  #L2ff336.  v0:= new `int`[v11];
  #L2ff33a.  if v5 >= v11 then goto L2ff38e;
  #L2ff33e.  v6:= v10[v5];
  #L2ff342.  call temp:= `binarySearch`(v1, v6) @signature `Ljava/util/Arrays;.binarySearch:([FF)I` @kind static;
  #L2ff348.  v7:= temp;
  #L2ff34a.  call temp:= `binarySearch`(v4, v6) @signature `Ljava/util/Arrays;.binarySearch:([FF)I` @kind static;
  #L2ff350.  v8:= temp;
  #L2ff352.  if v7 < 0 then goto L2ff36e;
  #L2ff356.  if v8 <= 0 then goto L2ff35c;
  #L2ff35a.  goto L2ff36e;
  #L2ff35c.  v7:= v2[v7];
  #L2ff360.  call temp:= `d`(v9, v6, v7, v4, v3) @signature `Lcom/airbnb/lottie/y0/o;.d:(FI[F[F)I` @kind direct;
  #L2ff366.  v6:= temp;
  #L2ff368.  v0[v5]:= v6;
  #L2ff36c.  goto L2ff388;
  #L2ff36e.  if v8 >= 0 then goto L2ff378;
  #L2ff372.  v8:= v8 + 1;
  #L2ff376.  v8:= -v8 @kind int;
  #L2ff378.  v7:= v3[v8];
  #L2ff37c.  call temp:= `c`(v9, v6, v7, v1, v2) @signature `Lcom/airbnb/lottie/y0/o;.c:(FF[F[I)I` @kind direct;
  #L2ff382.  v6:= temp;
  #L2ff384.  v0[v5]:= v6;
  #L2ff388.  v5:= v5 + 1;
  #L2ff38c.  goto L2ff33a;
  #L2ff38e.  v11:= new `com.airbnb.lottie.model.content.d`;
  #L2ff392.  call `<init>`(v11, v10, v0) @signature `Lcom/airbnb/lottie/model/content/d;.<init>:([F[I)V` @kind direct;
  #L2ff398.  return v11 @kind object;
}
procedure `int` `c`(`com.airbnb.lottie.y0.o` v4 @kind this, `float` v5 , `float` v6 , `float`[] v7 @kind object, `int`[] v8 @kind object) @signature `Lcom/airbnb/lottie/y0/o;.c:(FF[F[I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ff650.  v0:= length @variable v8;
  #L2ff652.  v1:= 0I;
  #L2ff654.  v2:= 2I;
  #L2ff656.  if v0 < v2 then goto L2ff716;
  #L2ff65a.  v0:= v7[v1];
  #L2ff65e.  v0:= fcmpl(v5, v0);
  #L2ff662.  if v0 != 0 then goto L2ff668;
  #L2ff666.  goto L2ff716;
  #L2ff668.  v0:= 1I;
  #L2ff66a.  v1:= 1I;
  #L2ff66c.  v2:= length @variable v7;
  #L2ff66e.  if v1 >= v2 then goto L2ff706;
  #L2ff672.  v2:= v7[v1];
  #L2ff676.  v2:= fcmpg(v2, v5);
  #L2ff67a.  if v2 >= 0 then goto L2ff68c;
  #L2ff67e.  v2:= length @variable v7;
  #L2ff680.  v2:= v2 - v0 @kind int;
  #L2ff682.  if v1 == v2 then goto L2ff68c;
  #L2ff686.  v1:= v1 + 1;
  #L2ff68a.  goto L2ff66c;
  #L2ff68c.  v0:= v7[v1];
  #L2ff690.  v2:= v1 + -1;
  #L2ff694.  v3:= v7[v2];
  #L2ff698.  v0:= v0 - v3 @kind float;
  #L2ff69a.  v7:= v7[v2];
  #L2ff69e.  v5:= v5 - v7 @kind float;
  #L2ff6a0.  v5:= v5 / v0 @kind float;
  #L2ff6a2.  v7:= v8[v1];
  #L2ff6a6.  v8:= v8[v2];
  #L2ff6aa.  v0:= 255.0F;
  #L2ff6ae.  v6:= v6 * v0 @kind float;
  #L2ff6b2.  v6:= (`int`) v6 @kind f2i;
  #L2ff6b4.  call temp:= `red`(v8) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L2ff6ba.  v0:= temp;
  #L2ff6bc.  call temp:= `red`(v7) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L2ff6c2.  v1:= temp;
  #L2ff6c4.  call temp:= `j`(v0, v1, v5) @signature `Lcom/airbnb/lottie/z0/g;.j:(IIF)I` @kind static;
  #L2ff6ca.  v0:= temp;
  #L2ff6cc.  call temp:= `green`(v8) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L2ff6d2.  v1:= temp;
  #L2ff6d4.  call temp:= `green`(v7) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L2ff6da.  v2:= temp;
  #L2ff6dc.  call temp:= `j`(v1, v2, v5) @signature `Lcom/airbnb/lottie/z0/g;.j:(IIF)I` @kind static;
  #L2ff6e2.  v1:= temp;
  #L2ff6e4.  call temp:= `blue`(v8) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L2ff6ea.  v8:= temp;
  #L2ff6ec.  call temp:= `blue`(v7) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L2ff6f2.  v7:= temp;
  #L2ff6f4.  call temp:= `j`(v8, v7, v5) @signature `Lcom/airbnb/lottie/z0/g;.j:(IIF)I` @kind static;
  #L2ff6fa.  v5:= temp;
  #L2ff6fc.  call temp:= `argb`(v6, v0, v1, v5) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L2ff702.  v5:= temp;
  #L2ff704.  return v5;
  #L2ff706.  v5:= new `java.lang.IllegalArgumentException`;
  #L2ff70a.  v6:= "Unreachable code." @kind object;
  #L2ff70e.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ff714.  throw v5;
  #L2ff716.  v5:= v8[v1];
  #L2ff71a.  return v5;
}
procedure `int` `d`(`com.airbnb.lottie.y0.o` v5 @kind this, `float` v6 , `int` v7 , `float`[] v8 @kind object, `float`[] v9 @kind object) @signature `Lcom/airbnb/lottie/y0/o;.d:(FI[F[F)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2ff72c.  v0:= length @variable v9;
  #L2ff72e.  v1:= 0I;
  #L2ff730.  v2:= 255.0F;
  #L2ff734.  v3:= 2I;
  #L2ff736.  if v0 < v3 then goto L2ff7d8;
  #L2ff73a.  v0:= v8[v1];
  #L2ff73e.  v0:= fcmpg(v6, v0);
  #L2ff742.  if v0 > 0 then goto L2ff748;
  #L2ff746.  goto L2ff7d8;
  #L2ff748.  v0:= 1I;
  #L2ff74a.  v1:= 1I;
  #L2ff74c.  v3:= length @variable v8;
  #L2ff74e.  if v1 >= v3 then goto L2ff7c8;
  #L2ff752.  v3:= v8[v1];
  #L2ff756.  v4:= fcmpg(v3, v6);
  #L2ff75a.  if v4 >= 0 then goto L2ff76c;
  #L2ff75e.  v4:= length @variable v8;
  #L2ff760.  v4:= v4 - v0 @kind int;
  #L2ff762.  if v1 == v4 then goto L2ff76c;
  #L2ff766.  v1:= v1 + 1;
  #L2ff76a.  goto L2ff74c;
  #L2ff76c.  v0:= fcmpg(v3, v6);
  #L2ff770.  if v0 > 0 then goto L2ff77a;
  #L2ff774.  v6:= v9[v1];
  #L2ff778.  goto L2ff7a0;
  #L2ff77a.  v0:= v8[v1];
  #L2ff77e.  v3:= v1 + -1;
  #L2ff782.  v4:= v8[v3];
  #L2ff786.  v0:= v0 - v4 @kind float;
  #L2ff788.  v8:= v8[v3];
  #L2ff78c.  v6:= v6 - v8 @kind float;
  #L2ff78e.  v6:= v6 / v0 @kind float;
  #L2ff790.  v8:= v9[v3];
  #L2ff794.  v9:= v9[v1];
  #L2ff798.  call temp:= `i`(v8, v9, v6) @signature `Lcom/airbnb/lottie/z0/g;.i:(FFF)F` @kind static;
  #L2ff79e.  v6:= temp;
  #L2ff7a0.  v6:= v6 * v2 @kind float;
  #L2ff7a4.  v6:= (`int`) v6 @kind f2i;
  #L2ff7a6.  call temp:= `red`(v7) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L2ff7ac.  v8:= temp;
  #L2ff7ae.  call temp:= `green`(v7) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L2ff7b4.  v9:= temp;
  #L2ff7b6.  call temp:= `blue`(v7) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L2ff7bc.  v7:= temp;
  #L2ff7be.  call temp:= `argb`(v6, v8, v9, v7) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L2ff7c4.  v6:= temp;
  #L2ff7c6.  return v6;
  #L2ff7c8.  v6:= new `java.lang.IllegalArgumentException`;
  #L2ff7cc.  v7:= "Unreachable code." @kind object;
  #L2ff7d0.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ff7d6.  throw v6;
  #L2ff7d8.  v6:= v9[v1];
  #L2ff7dc.  v6:= v6 * v2 @kind float;
  #L2ff7e0.  v6:= (`int`) v6 @kind f2i;
  #L2ff7e2.  call temp:= `red`(v7) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L2ff7e8.  v8:= temp;
  #L2ff7ea.  call temp:= `green`(v7) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L2ff7f0.  v9:= temp;
  #L2ff7f2.  call temp:= `blue`(v7) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L2ff7f8.  v7:= temp;
  #L2ff7fa.  call temp:= `argb`(v6, v8, v9, v7) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L2ff800.  v6:= temp;
  #L2ff802.  return v6;
}
procedure `float`[] `e`(`float`[] v9 @kind object, `float`[] v10 @kind object) @signature `Lcom/airbnb/lottie/y0/o;.e:([F[F)[F` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2ff594.  v0:= length @variable v9;
  #L2ff596.  if v0 != 0 then goto L2ff59c;
  #L2ff59a.  return v10 @kind object;
  #L2ff59c.  v0:= length @variable v10;
  #L2ff59e.  if v0 != 0 then goto L2ff5a4;
  #L2ff5a2.  return v9 @kind object;
  #L2ff5a4.  v0:= length @variable v9;
  #L2ff5a6.  v1:= length @variable v10;
  #L2ff5a8.  v0:= v0 + v1 @kind int;
  #L2ff5aa.  v1:= new `float`[v0];
  #L2ff5ae.  v2:= 0I;
  #L2ff5b0.  v3:= 0I;
  #L2ff5b2.  v4:= 0I;
  #L2ff5b4.  v5:= 0I;
  #L2ff5b6.  if v2 >= v0 then goto L2ff62e;
  #L2ff5ba.  v6:= length @variable v9;
  #L2ff5bc.  v7:= NaNF;
  #L2ff5c0.  if v4 >= v6 then goto L2ff5ca;
  #L2ff5c4.  v6:= v9[v4];
  #L2ff5c8.  goto L2ff5ce;
  #L2ff5ca.  v6:= NaNF;
  #L2ff5ce.  v8:= length @variable v10;
  #L2ff5d0.  if v5 >= v8 then goto L2ff5d8;
  #L2ff5d4.  v7:= v10[v5];
  #L2ff5d8.  call temp:= `isNaN`(v7) @signature `Ljava/lang/Float;.isNaN:(F)Z` @kind static;
  #L2ff5de.  v8:= temp;
  #L2ff5e0.  if v8 != 0 then goto L2ff620;
  #L2ff5e4.  v8:= fcmpg(v6, v7);
  #L2ff5e8.  if v8 >= 0 then goto L2ff5ee;
  #L2ff5ec.  goto L2ff620;
  #L2ff5ee.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Float;.isNaN:(F)Z` @kind static;
  #L2ff5f4.  v8:= temp;
  #L2ff5f6.  if v8 != 0 then goto L2ff616;
  #L2ff5fa.  v8:= fcmpg(v7, v6);
  #L2ff5fe.  if v8 >= 0 then goto L2ff604;
  #L2ff602.  goto L2ff616;
  #L2ff604.  v1[v2]:= v6;
  #L2ff608.  v4:= v4 + 1;
  #L2ff60c.  v5:= v5 + 1;
  #L2ff610.  v3:= v3 + 1;
  #L2ff614.  goto L2ff628;
  #L2ff616.  v1[v2]:= v7;
  #L2ff61a.  v5:= v5 + 1;
  #L2ff61e.  goto L2ff628;
  #L2ff620.  v1[v2]:= v6;
  #L2ff624.  v4:= v4 + 1;
  #L2ff628.  v2:= v2 + 1;
  #L2ff62c.  goto L2ff5b6;
  #L2ff62e.  if v3 != 0 then goto L2ff634;
  #L2ff632.  return v1 @kind object;
  #L2ff634.  v0:= v0 - v3 @kind int;
  #L2ff636.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([FI)[F` @kind static;
  #L2ff63c.  v9:= temp @kind object;
  #L2ff63e.  return v9 @kind object;
}
procedure `java.lang.Object` `a`(`com.airbnb.lottie.y0.o` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/y0/o;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2ff814.  call temp:= `f`(v0, v1, v2) @signature `Lcom/airbnb/lottie/y0/o;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/model/content/d;` @kind virtual;
  #L2ff81a.  v1:= temp @kind object;
  #L2ff81c.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.content.d` `f`(`com.airbnb.lottie.y0.o` v17 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v18 @kind object, `float` v19 ) @signature `Lcom/airbnb/lottie/y0/o;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/model/content/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L2ff3ac.  v0:= v17 @kind object;
  #L2ff3b0.  v1:= new `java.util.ArrayList`;
  #L2ff3b4.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2ff3ba.  call temp:= `u0`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L2ff3c0.  v2:= temp @kind object;
  #L2ff3c2.  v3:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L2ff3c6.  v4:= 1I;
  #L2ff3c8.  v5:= 0I;
  #L2ff3ca.  if v2 != v3 then goto L2ff3d2;
  #L2ff3ce.  v2:= 1I;
  #L2ff3d0.  goto L2ff3d4;
  #L2ff3d2.  v2:= 0I;
  #L2ff3d4.  if v2 == 0 then goto L2ff3de;
  #L2ff3d8.  call `c`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.c:()V` @kind virtual;
  #L2ff3de.  call temp:= `o`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L2ff3e4.  v3:= temp;
  #L2ff3e6.  if v3 == 0 then goto L2ff404;
  #L2ff3ea.  call temp:= `v`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L2ff3f0.  v6:= temp @kind wide;
  #L2ff3f2.  v3:= (`float`) v6 @kind d2f;
  #L2ff3f4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2ff3fa.  v3:= temp @kind object;
  #L2ff3fc.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ff402.  goto L2ff3de;
  #L2ff404.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2ff40a.  v3:= temp;
  #L2ff40c.  v6:= 3I;
  #L2ff40e.  v7:= 2I;
  #L2ff410.  v8:= 4I;
  #L2ff412.  if v3 != v8 then goto L2ff48e;
  #L2ff416.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2ff41c.  v3:= temp @kind object;
  #L2ff41e.  v3:= (`java.lang.Float`) v3 @kind object;
  #L2ff422.  call temp:= `floatValue`(v3) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2ff428.  v3:= temp;
  #L2ff42a.  v9:= 1.0F;
  #L2ff42e.  v3:= fcmpl(v3, v9);
  #L2ff432.  if v3 != 0 then goto L2ff48e;
  #L2ff436.  v3:= 0I;
  #L2ff438.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2ff43e.  v3:= temp @kind object;
  #L2ff440.  call temp:= `set`(v1, v5, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ff446.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2ff44c.  v3:= temp @kind object;
  #L2ff44e.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ff454.  call temp:= `get`(v1, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2ff45a.  v3:= temp @kind object;
  #L2ff45c.  v3:= (`java.lang.Float`) v3 @kind object;
  #L2ff460.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ff466.  call temp:= `get`(v1, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2ff46c.  v3:= temp @kind object;
  #L2ff46e.  v3:= (`java.lang.Float`) v3 @kind object;
  #L2ff472.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ff478.  call temp:= `get`(v1, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2ff47e.  v3:= temp @kind object;
  #L2ff480.  v3:= (`java.lang.Float`) v3 @kind object;
  #L2ff484.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ff48a.  v0.`com.airbnb.lottie.y0.o.a` @type ^`int` := v7;
  #L2ff48e.  if v2 == 0 then goto L2ff498;
  #L2ff492.  call `k`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.k:()V` @kind virtual;
  #L2ff498.  v2:= v0.`com.airbnb.lottie.y0.o.a` @type ^`int`;
  #L2ff49c.  v3:= -1I;
  #L2ff49e.  if v2 != v3 then goto L2ff4b0;
  #L2ff4a2.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2ff4a8.  v2:= temp;
  #L2ff4aa.  v2:= v2 / v8 @kind int;
  #L2ff4ac.  v0.`com.airbnb.lottie.y0.o.a` @type ^`int` := v2;
  #L2ff4b0.  v2:= v0.`com.airbnb.lottie.y0.o.a` @type ^`int`;
  #L2ff4b4.  v3:= new `float`[v2];
  #L2ff4b8.  v2:= new `int`[v2];
  #L2ff4bc.  v9:= 0I;
  #L2ff4be.  v10:= 0I;
  #L2ff4c0.  v11:= v0.`com.airbnb.lottie.y0.o.a` @type ^`int`;
  #L2ff4c4.  v11:= v11 * 4;
  #L2ff4c8.  if v5 >= v11 then goto L2ff570;
  #L2ff4cc.  v11:= v5 / 4;
  #L2ff4d0.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2ff4d6.  v12:= temp @kind object;
  #L2ff4d8.  v12:= (`java.lang.Float`) v12 @kind object;
  #L2ff4dc.  call temp:= `floatValue`(v12) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2ff4e2.  v12:= temp;
  #L2ff4e4.  v12:= (`double`) v12 @kind f2d;
  #L2ff4e6.  v14:= v5 %% 4;
  #L2ff4ea.  if v14 == 0 then goto L2ff540;
  #L2ff4ee.  v15:= 255.0D;
  #L2ff4f8.  if v14 == v4 then goto L2ff532;
  #L2ff4fc.  if v14 == v7 then goto L2ff524;
  #L2ff500.  if v14 == v6 then goto L2ff506;
  #L2ff504.  goto L2ff56a;
  #L2ff506.  call temp:= `isNaN`(v12) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2ff50c.  v12:= v12 * v15 @kind double;
  #L2ff510.  v12:= (`int`) v12 @kind d2i;
  #L2ff512.  v13:= 255I;
  #L2ff516.  call temp:= `argb`(v13, v9, v10, v12) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L2ff51c.  v12:= temp;
  #L2ff51e.  v2[v11]:= v12;
  #L2ff522.  goto L2ff56a;
  #L2ff524.  call temp:= `isNaN`(v12) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2ff52a.  v12:= v12 * v15 @kind double;
  #L2ff52e.  v10:= (`int`) v12 @kind d2i;
  #L2ff530.  goto L2ff56a;
  #L2ff532.  call temp:= `isNaN`(v12) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2ff538.  v12:= v12 * v15 @kind double;
  #L2ff53c.  v9:= (`int`) v12 @kind d2i;
  #L2ff53e.  goto L2ff56a;
  #L2ff540.  if v11 <= 0 then goto L2ff564;
  #L2ff544.  v14:= v11 + -1;
  #L2ff548.  v14:= v3[v14];
  #L2ff54c.  v15:= (`float`) v12 @kind d2f;
  #L2ff54e.  v14:= fcmpl(v14, v15);
  #L2ff552.  if v14 < 0 then goto L2ff564;
  #L2ff556.  v12:= 1008981770I;
  #L2ff55c.  v15:= v15 + v12 @kind float;
  #L2ff55e.  v3[v11]:= v15;
  #L2ff562.  goto L2ff56a;
  #L2ff564.  v12:= (`float`) v12 @kind d2f;
  #L2ff566.  v3[v11]:= v12;
  #L2ff56a.  v5:= v5 + 1;
  #L2ff56e.  goto L2ff4c0;
  #L2ff570.  v4:= new `com.airbnb.lottie.model.content.d`;
  #L2ff574.  call `<init>`(v4, v3, v2) @signature `Lcom/airbnb/lottie/model/content/d;.<init>:([F[I)V` @kind direct;
  #L2ff57a.  call temp:= `b`(v0, v4, v1) @signature `Lcom/airbnb/lottie/y0/o;.b:(Lcom/airbnb/lottie/model/content/d;Ljava/util/List;)Lcom/airbnb/lottie/model/content/d;` @kind direct;
  #L2ff580.  v1:= temp @kind object;
  #L2ff582.  return v1 @kind object;
}
