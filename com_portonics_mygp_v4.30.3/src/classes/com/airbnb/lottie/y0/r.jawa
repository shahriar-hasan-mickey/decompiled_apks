record `com.airbnb.lottie.y0.r` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.y0.p0` @kind interface {
}
global `com.airbnb.lottie.y0.r` `@@com.airbnb.lottie.y0.r.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/y0/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2ffe20.  v0:= new `com.airbnb.lottie.y0.r`;
  #L2ffe24.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/y0/r;.<init>:()V` @kind direct;
  #L2ffe2a.  `@@com.airbnb.lottie.y0.r.a` @type ^`com.airbnb.lottie.y0.r` := v0 @kind object;
  #L2ffe2e.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.y0.r` v0 @kind this) @signature `Lcom/airbnb/lottie/y0/r;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2ffe40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ffe46.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.airbnb.lottie.y0.r` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/y0/r;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2ffe04.  call temp:= `b`(v0, v1, v2) @signature `Lcom/airbnb/lottie/y0/r;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Integer;` @kind virtual;
  #L2ffe0a.  v1:= temp @kind object;
  #L2ffe0c.  return v1 @kind object;
}
procedure `java.lang.Integer` `b`(`com.airbnb.lottie.y0.r` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/y0/r;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;

  #L2ffdd4.  call temp:= `g`(v1) @signature `Lcom/airbnb/lottie/y0/t;.g:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)F` @kind static;
  #L2ffdda.  v1:= temp;
  #L2ffddc.  v1:= v1 * v2 @kind float;
  #L2ffde0.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2ffde6.  v1:= temp;
  #L2ffde8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2ffdee.  v1:= temp @kind object;
  #L2ffdf0.  return v1 @kind object;
}
