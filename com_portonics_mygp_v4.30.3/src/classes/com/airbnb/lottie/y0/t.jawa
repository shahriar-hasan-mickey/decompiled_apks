record `com.airbnb.lottie.y0.t` @kind class @AccessFlag ABSTRACT {
}
global `com.airbnb.lottie.parser.moshi.a` `@@com.airbnb.lottie.y0.t.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/y0/t;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3001f8.  v0:= "x" @kind object;
  #L3001fc.  v1:= "y" @kind object;
  #L300200.  temp:= new `java.lang.String`[v0, v1];
  #L300206.  v0:= temp @kind object;
  #L300208.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/a;.a:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/a;` @kind static;
  #L30020e.  v0:= temp @kind object;
  #L300210.  `@@com.airbnb.lottie.y0.t.a` @type ^`com.airbnb.lottie.parser.moshi.a` := v0 @kind object;
  #L300214.  return @kind void;
}
procedure `android.graphics.PointF` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v4 @kind object, `float` v5 ) @signature `Lcom/airbnb/lottie/y0/t;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ffee4.  call `c`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.c:()V` @kind virtual;
  #L2ffeea.  call temp:= `v`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L2ffef0.  v0:= temp @kind wide;
  #L2ffef2.  v0:= (`float`) v0 @kind d2f;
  #L2ffef4.  call temp:= `v`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L2ffefa.  v1:= temp @kind wide;
  #L2ffefc.  v1:= (`float`) v1 @kind d2f;
  #L2ffefe.  call temp:= `u0`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L2fff04.  v2:= temp @kind object;
  #L2fff06.  v3:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.END_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L2fff0a.  if v2 == v3 then goto L2fff16;
  #L2fff0e.  call `N0`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L2fff14.  goto L2ffefe;
  #L2fff16.  call `k`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.k:()V` @kind virtual;
  #L2fff1c.  v4:= new `android.graphics.PointF`;
  #L2fff20.  v0:= v0 * v5 @kind float;
  #L2fff24.  v1:= v1 * v5 @kind float;
  #L2fff28.  call `<init>`(v4, v0, v1) @signature `Landroid/graphics/PointF;.<init>:(FF)V` @kind direct;
  #L2fff2e.  return v4 @kind object;
}
procedure `android.graphics.PointF` `b`(`com.airbnb.lottie.parser.moshi.JsonReader` v3 @kind object, `float` v4 ) @signature `Lcom/airbnb/lottie/y0/t;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2fff40.  call temp:= `v`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L2fff46.  v0:= temp @kind wide;
  #L2fff48.  v0:= (`float`) v0 @kind d2f;
  #L2fff4a.  call temp:= `v`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L2fff50.  v1:= temp @kind wide;
  #L2fff52.  v1:= (`float`) v1 @kind d2f;
  #L2fff54.  call temp:= `o`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L2fff5a.  v2:= temp;
  #L2fff5c.  if v2 == 0 then goto L2fff68;
  #L2fff60.  call `N0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L2fff66.  goto L2fff54;
  #L2fff68.  v3:= new `android.graphics.PointF`;
  #L2fff6c.  v0:= v0 * v4 @kind float;
  #L2fff70.  v1:= v1 * v4 @kind float;
  #L2fff74.  call `<init>`(v3, v0, v1) @signature `Landroid/graphics/PointF;.<init>:(FF)V` @kind direct;
  #L2fff7a.  return v3 @kind object;
}
procedure `android.graphics.PointF` `c`(`com.airbnb.lottie.parser.moshi.JsonReader` v4 @kind object, `float` v5 ) @signature `Lcom/airbnb/lottie/y0/t;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2fff8c.  call `d`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:()V` @kind virtual;
  #L2fff92.  v0:= 0I;
  #L2fff94.  v1:= 0I;
  #L2fff96.  call temp:= `o`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L2fff9c.  v2:= temp;
  #L2fff9e.  if v2 == 0 then goto L2fffda;
  #L2fffa2.  v2:= `@@com.airbnb.lottie.y0.t.a` @type ^`com.airbnb.lottie.parser.moshi.a` @kind object;
  #L2fffa6.  call temp:= `G0`(v4, v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.G0:(Lcom/airbnb/lottie/parser/moshi/a;)I` @kind virtual;
  #L2fffac.  v2:= temp;
  #L2fffae.  if v2 == 0 then goto L2fffd0;
  #L2fffb2.  v3:= 1I;
  #L2fffb4.  if v2 == v3 then goto L2fffc6;
  #L2fffb8.  call `K0`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.K0:()V` @kind virtual;
  #L2fffbe.  call `N0`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L2fffc4.  goto L2fff96;
  #L2fffc6.  call temp:= `g`(v4) @signature `Lcom/airbnb/lottie/y0/t;.g:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)F` @kind static;
  #L2fffcc.  v1:= temp;
  #L2fffce.  goto L2fff96;
  #L2fffd0.  call temp:= `g`(v4) @signature `Lcom/airbnb/lottie/y0/t;.g:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)F` @kind static;
  #L2fffd6.  v0:= temp;
  #L2fffd8.  goto L2fff96;
  #L2fffda.  call `m`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m:()V` @kind virtual;
  #L2fffe0.  v4:= new `android.graphics.PointF`;
  #L2fffe4.  v0:= v0 * v5 @kind float;
  #L2fffe8.  v1:= v1 * v5 @kind float;
  #L2fffec.  call `<init>`(v4, v0, v1) @signature `Landroid/graphics/PointF;.<init>:(FF)V` @kind direct;
  #L2ffff2.  return v4 @kind object;
}
procedure `int` `d`(`com.airbnb.lottie.parser.moshi.JsonReader` v6 @kind object) @signature `Lcom/airbnb/lottie/y0/t;.d:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L300130.  call `c`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.c:()V` @kind virtual;
  #L300136.  call temp:= `v`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L30013c.  v0:= temp @kind wide;
  #L30013e.  v2:= 255.0D;
  #L300148.  v0:= v0 * v2 @kind double;
  #L30014c.  v0:= (`int`) v0 @kind d2i;
  #L30014e.  call temp:= `v`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L300154.  v4:= temp @kind wide;
  #L300156.  v4:= v4 * v2 @kind double;
  #L30015a.  v1:= (`int`) v4 @kind d2i;
  #L30015c.  call temp:= `v`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L300162.  v4:= temp @kind wide;
  #L300164.  v4:= v4 * v2 @kind double;
  #L300168.  v2:= (`int`) v4 @kind d2i;
  #L30016a.  call temp:= `o`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L300170.  v3:= temp;
  #L300172.  if v3 == 0 then goto L30017e;
  #L300176.  call `N0`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L30017c.  goto L30016a;
  #L30017e.  call `k`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.k:()V` @kind virtual;
  #L300184.  v6:= 255I;
  #L300188.  call temp:= `argb`(v6, v0, v1, v2) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L30018e.  v6:= temp;
  #L300190.  return v6;
}
procedure `android.graphics.PointF` `e`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind object, `float` v3 ) @signature `Lcom/airbnb/lottie/y0/t;.e:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L300004.  v0:= `@@com.airbnb.lottie.y0.s.a` @type ^`int`[] @kind object;
  #L300008.  call temp:= `u0`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L30000e.  v1:= temp @kind object;
  #L300010.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L300016.  v1:= temp;
  #L300018.  v0:= v0[v1];
  #L30001c.  v1:= 1I;
  #L30001e.  if v0 == v1 then goto L300078;
  #L300022.  v1:= 2I;
  #L300024.  if v0 == v1 then goto L30006e;
  #L300028.  v1:= 3I;
  #L30002a.  if v0 != v1 then goto L300038;
  #L30002e.  call temp:= `c`(v2, v3) @signature `Lcom/airbnb/lottie/y0/t;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L300034.  v2:= temp @kind object;
  #L300036.  return v2 @kind object;
  #L300038.  v3:= new `java.lang.IllegalArgumentException`;
  #L30003c.  v0:= new `java.lang.StringBuilder`;
  #L300040.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L300046.  v1:= "Unknown point starts with " @kind object;
  #L30004a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L300050.  call temp:= `u0`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L300056.  v2:= temp @kind object;
  #L300058.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30005e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L300064.  v2:= temp @kind object;
  #L300066.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30006c.  throw v3;
  #L30006e.  call temp:= `a`(v2, v3) @signature `Lcom/airbnb/lottie/y0/t;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L300074.  v2:= temp @kind object;
  #L300076.  return v2 @kind object;
  #L300078.  call temp:= `b`(v2, v3) @signature `Lcom/airbnb/lottie/y0/t;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L30007e.  v2:= temp @kind object;
  #L300080.  return v2 @kind object;
}
procedure `java.util.List` `f`(`com.airbnb.lottie.parser.moshi.JsonReader` v3 @kind object, `float` v4 ) @signature `Lcom/airbnb/lottie/y0/t;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3001a4.  v0:= new `java.util.ArrayList`;
  #L3001a8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3001ae.  call `c`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.c:()V` @kind virtual;
  #L3001b4.  call temp:= `u0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3001ba.  v1:= temp @kind object;
  #L3001bc.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3001c0.  if v1 != v2 then goto L3001e0;
  #L3001c4.  call `c`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.c:()V` @kind virtual;
  #L3001ca.  call temp:= `e`(v3, v4) @signature `Lcom/airbnb/lottie/y0/t;.e:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L3001d0.  v1:= temp @kind object;
  #L3001d2.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3001d8.  call `k`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.k:()V` @kind virtual;
  #L3001de.  goto L3001b4;
  #L3001e0.  call `k`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.k:()V` @kind virtual;
  #L3001e6.  return v0 @kind object;
}
procedure `float` `g`(`com.airbnb.lottie.parser.moshi.JsonReader` v3 @kind object) @signature `Lcom/airbnb/lottie/y0/t;.g:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L300094.  call temp:= `u0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L30009a.  v0:= temp @kind object;
  #L30009c.  v1:= `@@com.airbnb.lottie.y0.s.a` @type ^`int`[] @kind object;
  #L3000a0.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3000a6.  v2:= temp;
  #L3000a8.  v1:= v1[v2];
  #L3000ac.  v2:= 1I;
  #L3000ae.  if v1 == v2 then goto L300112;
  #L3000b2.  v2:= 2I;
  #L3000b4.  if v1 != v2 then goto L3000e4;
  #L3000b8.  call `c`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.c:()V` @kind virtual;
  #L3000be.  call temp:= `v`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L3000c4.  v0:= temp @kind wide;
  #L3000c6.  v0:= (`float`) v0 @kind d2f;
  #L3000c8.  call temp:= `o`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L3000ce.  v1:= temp;
  #L3000d0.  if v1 == 0 then goto L3000dc;
  #L3000d4.  call `N0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L3000da.  goto L3000c8;
  #L3000dc.  call `k`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.k:()V` @kind virtual;
  #L3000e2.  return v0;
  #L3000e4.  v3:= new `java.lang.IllegalArgumentException`;
  #L3000e8.  v1:= new `java.lang.StringBuilder`;
  #L3000ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3000f2.  v2:= "Unknown value for token of type " @kind object;
  #L3000f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3000fc.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L300102.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L300108.  v0:= temp @kind object;
  #L30010a.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L300110.  throw v3;
  #L300112.  call temp:= `v`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L300118.  v0:= temp @kind wide;
  #L30011a.  v3:= (`float`) v0 @kind d2f;
  #L30011c.  return v3;
}
