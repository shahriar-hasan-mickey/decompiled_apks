record `com.airbnb.lottie.y0.a0` @kind class @AccessFlag ABSTRACT {
}
global `com.airbnb.lottie.parser.moshi.a` `@@com.airbnb.lottie.y0.a0.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/y0/a0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L301cc0.  v0:= "nm" @kind object;
  #L301cc4.  v1:= "mm" @kind object;
  #L301cc8.  v2:= "hd" @kind object;
  #L301ccc.  temp:= new `java.lang.String`[v0, v1, v2];
  #L301cd2.  v0:= temp @kind object;
  #L301cd4.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/a;.a:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/a;` @kind static;
  #L301cda.  v0:= temp @kind object;
  #L301cdc.  `@@com.airbnb.lottie.y0.a0.a` @type ^`com.airbnb.lottie.parser.moshi.a` := v0 @kind object;
  #L301ce0.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.MergePaths` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v5 @kind object) @signature `Lcom/airbnb/lottie/y0/a0;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)Lcom/airbnb/lottie/model/content/MergePaths;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L301c40.  v0:= 0I;
  #L301c42.  v1:= 0I;
  #L301c44.  v1:= v0 @kind object;
  #L301c46.  v2:= 0I;
  #L301c48.  call temp:= `o`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L301c4e.  v3:= temp;
  #L301c50.  if v3 == 0 then goto L301ca4;
  #L301c54.  v3:= `@@com.airbnb.lottie.y0.a0.a` @type ^`com.airbnb.lottie.parser.moshi.a` @kind object;
  #L301c58.  call temp:= `G0`(v5, v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.G0:(Lcom/airbnb/lottie/parser/moshi/a;)I` @kind virtual;
  #L301c5e.  v3:= temp;
  #L301c60.  if v3 == 0 then goto L301c9a;
  #L301c64.  v4:= 1I;
  #L301c66.  if v3 == v4 then goto L301c88;
  #L301c6a.  v4:= 2I;
  #L301c6c.  if v3 == v4 then goto L301c7e;
  #L301c70.  call `K0`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.K0:()V` @kind virtual;
  #L301c76.  call `N0`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L301c7c.  goto L301c48;
  #L301c7e.  call temp:= `s`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.s:()Z` @kind virtual;
  #L301c84.  v2:= temp;
  #L301c86.  goto L301c48;
  #L301c88.  call temp:= `x`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.x:()I` @kind virtual;
  #L301c8e.  v1:= temp;
  #L301c90.  call temp:= `forId`(v1) @signature `Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;.forId:(I)Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;` @kind static;
  #L301c96.  v1:= temp @kind object;
  #L301c98.  goto L301c48;
  #L301c9a.  call temp:= `m0`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m0:()Ljava/lang/String;` @kind virtual;
  #L301ca0.  v0:= temp @kind object;
  #L301ca2.  goto L301c48;
  #L301ca4.  v5:= new `com.airbnb.lottie.model.content.MergePaths`;
  #L301ca8.  call `<init>`(v5, v0, v1, v2) @signature `Lcom/airbnb/lottie/model/content/MergePaths;.<init>:(Ljava/lang/String;Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;Z)V` @kind direct;
  #L301cae.  return v5 @kind object;
}
