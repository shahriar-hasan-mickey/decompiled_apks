record `com.airbnb.lottie.y0.i` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.y0.p0` @kind interface {
}
global `com.airbnb.lottie.y0.i` `@@com.airbnb.lottie.y0.i.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.airbnb.lottie.parser.moshi.a` `@@com.airbnb.lottie.y0.i.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/y0/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2fec24.  v0:= new `com.airbnb.lottie.y0.i`;
  #L2fec28.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/y0/i;.<init>:()V` @kind direct;
  #L2fec2e.  `@@com.airbnb.lottie.y0.i.a` @type ^`com.airbnb.lottie.y0.i` := v0 @kind object;
  #L2fec32.  v1:= "t" @kind object;
  #L2fec36.  v2:= "f" @kind object;
  #L2fec3a.  v3:= "s" @kind object;
  #L2fec3e.  v4:= "j" @kind object;
  #L2fec42.  v5:= "tr" @kind object;
  #L2fec46.  v6:= "lh" @kind object;
  #L2fec4a.  v7:= "ls" @kind object;
  #L2fec4e.  v8:= "fc" @kind object;
  #L2fec52.  v9:= "sc" @kind object;
  #L2fec56.  v10:= "sw" @kind object;
  #L2fec5a.  v11:= "of" @kind object;
  #L2fec5e.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11];
  #L2fec64.  v0:= temp @kind object;
  #L2fec66.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/a;.a:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/a;` @kind static;
  #L2fec6c.  v0:= temp @kind object;
  #L2fec6e.  `@@com.airbnb.lottie.y0.i.b` @type ^`com.airbnb.lottie.parser.moshi.a` := v0 @kind object;
  #L2fec72.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.y0.i` v0 @kind this) @signature `Lcom/airbnb/lottie/y0/i;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2fec84.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fec8a.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.airbnb.lottie.y0.i` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/y0/i;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2fec08.  call temp:= `b`(v0, v1, v2) @signature `Lcom/airbnb/lottie/y0/i;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/model/DocumentData;` @kind virtual;
  #L2fec0e.  v1:= temp @kind object;
  #L2fec10.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.DocumentData` `b`(`com.airbnb.lottie.y0.i` v17 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v18 @kind object, `float` v19 ) @signature `Lcom/airbnb/lottie/y0/i;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/model/DocumentData;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L2feab8.  v0:= `@@com.airbnb.lottie.model.DocumentData$Justification.CENTER` @type ^`com.airbnb.lottie.model.DocumentData$Justification` @kind object;
  #L2feabc.  call `d`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:()V` @kind virtual;
  #L2feac2.  v1:= 0I;
  #L2feac4.  v2:= 0I;
  #L2feac6.  v3:= 0I;
  #L2feac8.  v4:= 1I;
  #L2feaca.  v9:= v0 @kind object;
  #L2feacc.  v6:= v1 @kind object;
  #L2feace.  v7:= v6 @kind object;
  #L2fead0.  v8:= 0I;
  #L2fead2.  v10:= 0I;
  #L2fead4.  v11:= 0I;
  #L2fead6.  v12:= 0I;
  #L2fead8.  v13:= 0I;
  #L2feada.  v14:= 0I;
  #L2feadc.  v15:= 0I;
  #L2feade.  v16:= 1I;
  #L2feae2.  call temp:= `o`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L2feae8.  v0:= temp;
  #L2feaea.  if v0 == 0 then goto L2febaa;
  #L2feaee.  v0:= `@@com.airbnb.lottie.y0.i.b` @type ^`com.airbnb.lottie.parser.moshi.a` @kind object;
  #L2feaf2.  v1:= v18 @kind object;
  #L2feaf6.  call temp:= `G0`(v1, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.G0:(Lcom/airbnb/lottie/parser/moshi/a;)I` @kind virtual;
  #L2feafc.  v0:= temp;
  #L2feafe.  goto L2febc4;
  #L2feb04.  call `K0`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.K0:()V` @kind virtual;
  #L2feb0a.  call `N0`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L2feb10.  goto L2feae2;
  #L2feb12.  call temp:= `s`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.s:()Z` @kind virtual;
  #L2feb18.  v16:= temp;
  #L2feb1a.  goto L2feae2;
  #L2feb1c.  call temp:= `v`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L2feb22.  v2:= temp @kind wide;
  #L2feb24.  v15:= (`float`) v2 @kind d2f;
  #L2feb26.  goto L2feae2;
  #L2feb28.  call temp:= `d`(v18) @signature `Lcom/airbnb/lottie/y0/t;.d:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)I` @kind static;
  #L2feb2e.  v14:= temp;
  #L2feb30.  goto L2feae2;
  #L2feb32.  call temp:= `d`(v18) @signature `Lcom/airbnb/lottie/y0/t;.d:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)I` @kind static;
  #L2feb38.  v13:= temp;
  #L2feb3a.  goto L2feae2;
  #L2feb3c.  call temp:= `v`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L2feb42.  v2:= temp @kind wide;
  #L2feb44.  v12:= (`float`) v2 @kind d2f;
  #L2feb46.  goto L2feae2;
  #L2feb48.  call temp:= `v`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L2feb4e.  v2:= temp @kind wide;
  #L2feb50.  v11:= (`float`) v2 @kind d2f;
  #L2feb52.  goto L2feae2;
  #L2feb54.  call temp:= `x`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.x:()I` @kind virtual;
  #L2feb5a.  v10:= temp;
  #L2feb5c.  goto L2feae2;
  #L2feb5e.  call temp:= `x`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.x:()I` @kind virtual;
  #L2feb64.  v0:= temp;
  #L2feb66.  v9:= `@@com.airbnb.lottie.model.DocumentData$Justification.CENTER` @type ^`com.airbnb.lottie.model.DocumentData$Justification` @kind object;
  #L2feb6a.  call temp:= `ordinal`(v9) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2feb70.  v2:= temp;
  #L2feb72.  if v0 > v2 then goto L2feae2;
  #L2feb76.  if v0 >= 0 then goto L2feb7c;
  #L2feb7a.  goto L2feae2;
  #L2feb7c.  call temp:= `values`() @signature `Lcom/airbnb/lottie/model/DocumentData$Justification;.values:()[Lcom/airbnb/lottie/model/DocumentData$Justification;` @kind static;
  #L2feb82.  v2:= temp @kind object;
  #L2feb84.  v9:= v2[v0] @kind object;
  #L2feb88.  goto L2feae2;
  #L2feb8a.  call temp:= `v`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L2feb90.  v2:= temp @kind wide;
  #L2feb92.  v8:= (`float`) v2 @kind d2f;
  #L2feb94.  goto L2feae2;
  #L2feb96.  call temp:= `m0`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m0:()Ljava/lang/String;` @kind virtual;
  #L2feb9c.  v7:= temp @kind object;
  #L2feb9e.  goto L2feae2;
  #L2feba0.  call temp:= `m0`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m0:()Ljava/lang/String;` @kind virtual;
  #L2feba6.  v6:= temp @kind object;
  #L2feba8.  goto L2feae2;
  #L2febaa.  v1:= v18 @kind object;
  #L2febae.  call `m`(v18) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m:()V` @kind virtual;
  #L2febb4.  v0:= new `com.airbnb.lottie.model.DocumentData`;
  #L2febb8.  v5:= v0 @kind object;
  #L2febba.  call `<init>`(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lcom/airbnb/lottie/model/DocumentData;.<init>:(Ljava/lang/String;Ljava/lang/String;FLcom/airbnb/lottie/model/DocumentData$Justification;IFFIIFZ)V` @kind direct;
  #L2febc0.  return v0 @kind object;
  #L2febc2.  
  #L2febc4.  switch v0
                  | 0 => goto L2feba0
                  | 1 => goto L2feb96
                  | 2 => goto L2feb8a
                  | 3 => goto L2feb5e
                  | 4 => goto L2feb54
                  | 5 => goto L2feb48
                  | 6 => goto L2feb3c
                  | 7 => goto L2feb32
                  | 8 => goto L2feb28
                  | 9 => goto L2feb1c
                  | 10 => goto L2feb12
                  | else => goto L2feb04;
}
