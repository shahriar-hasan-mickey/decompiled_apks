record `com.airbnb.lottie.y0.n` @kind class @AccessFlag ABSTRACT {
}
global `com.airbnb.lottie.parser.moshi.a` `@@com.airbnb.lottie.y0.n.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/y0/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ff25c.  v0:= "fFamily" @kind object;
  #L2ff260.  v1:= "fName" @kind object;
  #L2ff264.  v2:= "fStyle" @kind object;
  #L2ff268.  v3:= "ascent" @kind object;
  #L2ff26c.  temp:= new `java.lang.String`[v0, v1, v2, v3];
  #L2ff272.  v0:= temp @kind object;
  #L2ff274.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/a;.a:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/a;` @kind static;
  #L2ff27a.  v0:= temp @kind object;
  #L2ff27c.  `@@com.airbnb.lottie.y0.n.a` @type ^`com.airbnb.lottie.parser.moshi.a` := v0 @kind object;
  #L2ff280.  return @kind void;
}
procedure `com.airbnb.lottie.model.b` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v6 @kind object) @signature `Lcom/airbnb/lottie/y0/n;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)Lcom/airbnb/lottie/model/b;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2ff1c4.  call `d`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:()V` @kind virtual;
  #L2ff1ca.  v0:= 0I;
  #L2ff1cc.  v1:= 0I;
  #L2ff1ce.  v1:= v0 @kind object;
  #L2ff1d0.  v2:= v1 @kind object;
  #L2ff1d2.  v3:= 0I;
  #L2ff1d4.  call temp:= `o`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L2ff1da.  v4:= temp;
  #L2ff1dc.  if v4 == 0 then goto L2ff23a;
  #L2ff1e0.  v4:= `@@com.airbnb.lottie.y0.n.a` @type ^`com.airbnb.lottie.parser.moshi.a` @kind object;
  #L2ff1e4.  call temp:= `G0`(v6, v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.G0:(Lcom/airbnb/lottie/parser/moshi/a;)I` @kind virtual;
  #L2ff1ea.  v4:= temp;
  #L2ff1ec.  if v4 == 0 then goto L2ff230;
  #L2ff1f0.  v5:= 1I;
  #L2ff1f2.  if v4 == v5 then goto L2ff226;
  #L2ff1f6.  v5:= 2I;
  #L2ff1f8.  if v4 == v5 then goto L2ff21c;
  #L2ff1fc.  v5:= 3I;
  #L2ff1fe.  if v4 == v5 then goto L2ff210;
  #L2ff202.  call `K0`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.K0:()V` @kind virtual;
  #L2ff208.  call `N0`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L2ff20e.  goto L2ff1d4;
  #L2ff210.  call temp:= `v`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L2ff216.  v3:= temp @kind wide;
  #L2ff218.  v3:= (`float`) v3 @kind d2f;
  #L2ff21a.  goto L2ff1d4;
  #L2ff21c.  call temp:= `m0`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m0:()Ljava/lang/String;` @kind virtual;
  #L2ff222.  v2:= temp @kind object;
  #L2ff224.  goto L2ff1d4;
  #L2ff226.  call temp:= `m0`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m0:()Ljava/lang/String;` @kind virtual;
  #L2ff22c.  v1:= temp @kind object;
  #L2ff22e.  goto L2ff1d4;
  #L2ff230.  call temp:= `m0`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m0:()Ljava/lang/String;` @kind virtual;
  #L2ff236.  v0:= temp @kind object;
  #L2ff238.  goto L2ff1d4;
  #L2ff23a.  call `m`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m:()V` @kind virtual;
  #L2ff240.  v6:= new `com.airbnb.lottie.model.b`;
  #L2ff244.  call `<init>`(v6, v0, v1, v2, v3) @signature `Lcom/airbnb/lottie/model/b;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;F)V` @kind direct;
  #L2ff24a.  return v6 @kind object;
}
