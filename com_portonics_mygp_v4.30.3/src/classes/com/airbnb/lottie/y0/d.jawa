record `com.airbnb.lottie.y0.d` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `java.util.List` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 , `com.airbnb.lottie.e0` v3 @kind object, `com.airbnb.lottie.y0.p0` v4 @kind object) @signature `Lcom/airbnb/lottie/y0/d;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;FLcom/airbnb/lottie/e0;Lcom/airbnb/lottie/y0/p0;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2fe3cc.  v0:= 0I;
  #L2fe3ce.  call temp:= `a`(v1, v3, v2, v4, v0) @signature `Lcom/airbnb/lottie/y0/v;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;FLcom/airbnb/lottie/y0/p0;Z)Ljava/util/List;` @kind static;
  #L2fe3d4.  v1:= temp @kind object;
  #L2fe3d6.  return v1 @kind object;
}
procedure `java.util.List` `b`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind object, `com.airbnb.lottie.e0` v3 @kind object, `com.airbnb.lottie.y0.p0` v4 @kind object) @signature `Lcom/airbnb/lottie/y0/d;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;Lcom/airbnb/lottie/y0/p0;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2fe3ac.  v0:= 1.0F;
  #L2fe3b0.  v1:= 0I;
  #L2fe3b2.  call temp:= `a`(v2, v3, v0, v4, v1) @signature `Lcom/airbnb/lottie/y0/v;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;FLcom/airbnb/lottie/y0/p0;Z)Ljava/util/List;` @kind static;
  #L2fe3b8.  v2:= temp @kind object;
  #L2fe3ba.  return v2 @kind object;
}
procedure `com.airbnb.lottie.model.i.a` `c`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind object, `com.airbnb.lottie.e0` v3 @kind object) @signature `Lcom/airbnb/lottie/y0/d;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/a;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2fe220.  v0:= new `com.airbnb.lottie.model.i.a`;
  #L2fe224.  v1:= `@@com.airbnb.lottie.y0.g.a` @type ^`com.airbnb.lottie.y0.g` @kind object;
  #L2fe228.  call temp:= `b`(v2, v3, v1) @signature `Lcom/airbnb/lottie/y0/d;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;Lcom/airbnb/lottie/y0/p0;)Ljava/util/List;` @kind static;
  #L2fe22e.  v2:= temp @kind object;
  #L2fe230.  call `<init>`(v0, v2) @signature `Lcom/airbnb/lottie/model/i/a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2fe236.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.i.j` `d`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind object, `com.airbnb.lottie.e0` v3 @kind object) @signature `Lcom/airbnb/lottie/y0/d;.d:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/j;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2fe384.  v0:= new `com.airbnb.lottie.model.i.j`;
  #L2fe388.  v1:= `@@com.airbnb.lottie.y0.i.a` @type ^`com.airbnb.lottie.y0.i` @kind object;
  #L2fe38c.  call temp:= `b`(v2, v3, v1) @signature `Lcom/airbnb/lottie/y0/d;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;Lcom/airbnb/lottie/y0/p0;)Ljava/util/List;` @kind static;
  #L2fe392.  v2:= temp @kind object;
  #L2fe394.  call `<init>`(v0, v2) @signature `Lcom/airbnb/lottie/model/i/j;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2fe39a.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.i.b` `e`(`com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `com.airbnb.lottie.e0` v2 @kind object) @signature `Lcom/airbnb/lottie/y0/d;.e:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2fe248.  v0:= 1I;
  #L2fe24a.  call temp:= `f`(v1, v2, v0) @signature `Lcom/airbnb/lottie/y0/d;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;Z)Lcom/airbnb/lottie/model/i/b;` @kind static;
  #L2fe250.  v1:= temp @kind object;
  #L2fe252.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.i.b` `f`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind object, `com.airbnb.lottie.e0` v3 @kind object, `boolean` v4 ) @signature `Lcom/airbnb/lottie/y0/d;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;Z)Lcom/airbnb/lottie/model/i/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2fe264.  v0:= new `com.airbnb.lottie.model.i.b`;
  #L2fe268.  if v4 == 0 then goto L2fe276;
  #L2fe26c.  call temp:= `e`() @signature `Lcom/airbnb/lottie/z0/l;.e:()F` @kind static;
  #L2fe272.  v4:= temp;
  #L2fe274.  goto L2fe27a;
  #L2fe276.  v4:= 1.0F;
  #L2fe27a.  v1:= `@@com.airbnb.lottie.y0.l.a` @type ^`com.airbnb.lottie.y0.l` @kind object;
  #L2fe27e.  call temp:= `a`(v2, v4, v3, v1) @signature `Lcom/airbnb/lottie/y0/d;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;FLcom/airbnb/lottie/e0;Lcom/airbnb/lottie/y0/p0;)Ljava/util/List;` @kind static;
  #L2fe284.  v2:= temp @kind object;
  #L2fe286.  call `<init>`(v0, v2) @signature `Lcom/airbnb/lottie/model/i/b;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2fe28c.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.i.c` `g`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind object, `com.airbnb.lottie.e0` v3 @kind object, `int` v4 ) @signature `Lcom/airbnb/lottie/y0/d;.g:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;I)Lcom/airbnb/lottie/model/i/c;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2fe2a0.  v0:= new `com.airbnb.lottie.model.i.c`;
  #L2fe2a4.  v1:= new `com.airbnb.lottie.y0.o`;
  #L2fe2a8.  call `<init>`(v1, v4) @signature `Lcom/airbnb/lottie/y0/o;.<init>:(I)V` @kind direct;
  #L2fe2ae.  call temp:= `b`(v2, v3, v1) @signature `Lcom/airbnb/lottie/y0/d;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;Lcom/airbnb/lottie/y0/p0;)Ljava/util/List;` @kind static;
  #L2fe2b4.  v2:= temp @kind object;
  #L2fe2b6.  call `<init>`(v0, v2) @signature `Lcom/airbnb/lottie/model/i/c;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2fe2bc.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.i.d` `h`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind object, `com.airbnb.lottie.e0` v3 @kind object) @signature `Lcom/airbnb/lottie/y0/d;.h:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/d;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2fe2d0.  v0:= new `com.airbnb.lottie.model.i.d`;
  #L2fe2d4.  v1:= `@@com.airbnb.lottie.y0.r.a` @type ^`com.airbnb.lottie.y0.r` @kind object;
  #L2fe2d8.  call temp:= `b`(v2, v3, v1) @signature `Lcom/airbnb/lottie/y0/d;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;Lcom/airbnb/lottie/y0/p0;)Ljava/util/List;` @kind static;
  #L2fe2de.  v2:= temp @kind object;
  #L2fe2e0.  call `<init>`(v0, v2) @signature `Lcom/airbnb/lottie/model/i/d;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2fe2e6.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.i.f` `i`(`com.airbnb.lottie.parser.moshi.JsonReader` v4 @kind object, `com.airbnb.lottie.e0` v5 @kind object) @signature `Lcom/airbnb/lottie/y0/d;.i:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/f;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2fe2f8.  v0:= new `com.airbnb.lottie.model.i.f`;
  #L2fe2fc.  call temp:= `e`() @signature `Lcom/airbnb/lottie/z0/l;.e:()F` @kind static;
  #L2fe302.  v1:= temp;
  #L2fe304.  v2:= `@@com.airbnb.lottie.y0.d0.a` @type ^`com.airbnb.lottie.y0.d0` @kind object;
  #L2fe308.  v3:= 1I;
  #L2fe30a.  call temp:= `a`(v4, v5, v1, v2, v3) @signature `Lcom/airbnb/lottie/y0/v;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;FLcom/airbnb/lottie/y0/p0;Z)Ljava/util/List;` @kind static;
  #L2fe310.  v4:= temp @kind object;
  #L2fe312.  call `<init>`(v0, v4) @signature `Lcom/airbnb/lottie/model/i/f;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2fe318.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.i.g` `j`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind object, `com.airbnb.lottie.e0` v3 @kind object) @signature `Lcom/airbnb/lottie/y0/d;.j:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/g;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2fe32c.  v0:= new `com.airbnb.lottie.model.i.g`;
  #L2fe330.  v1:= `@@com.airbnb.lottie.y0.i0.a` @type ^`com.airbnb.lottie.y0.i0` @kind object;
  #L2fe334.  call temp:= `b`(v2, v3, v1) @signature `Lcom/airbnb/lottie/y0/d;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;Lcom/airbnb/lottie/y0/p0;)Ljava/util/List;` @kind static;
  #L2fe33a.  v2:= temp @kind object;
  #L2fe33c.  call `<init>`(v0, v2) @signature `Lcom/airbnb/lottie/model/i/g;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2fe342.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.i.h` `k`(`com.airbnb.lottie.parser.moshi.JsonReader` v3 @kind object, `com.airbnb.lottie.e0` v4 @kind object) @signature `Lcom/airbnb/lottie/y0/d;.k:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/h;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2fe354.  v0:= new `com.airbnb.lottie.model.i.h`;
  #L2fe358.  call temp:= `e`() @signature `Lcom/airbnb/lottie/z0/l;.e:()F` @kind static;
  #L2fe35e.  v1:= temp;
  #L2fe360.  v2:= `@@com.airbnb.lottie.y0.j0.a` @type ^`com.airbnb.lottie.y0.j0` @kind object;
  #L2fe364.  call temp:= `a`(v3, v1, v4, v2) @signature `Lcom/airbnb/lottie/y0/d;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;FLcom/airbnb/lottie/e0;Lcom/airbnb/lottie/y0/p0;)Ljava/util/List;` @kind static;
  #L2fe36a.  v3:= temp @kind object;
  #L2fe36c.  call `<init>`(v0, v3) @signature `Lcom/airbnb/lottie/model/i/h;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2fe372.  return v0 @kind object;
}
