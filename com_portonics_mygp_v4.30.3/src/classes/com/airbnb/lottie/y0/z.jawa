record `com.airbnb.lottie.y0.z` @kind class @AccessFlag ABSTRACT {
}
procedure `com.airbnb.lottie.model.content.Mask` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v11 @kind object, `com.airbnb.lottie.e0` v12 @kind object) @signature `Lcom/airbnb/lottie/y0/z;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/content/Mask;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3019fc.  call `d`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:()V` @kind virtual;
  #L301a02.  v0:= 0I;
  #L301a04.  v1:= 0I;
  #L301a06.  v2:= v1 @kind object;
  #L301a08.  v3:= v2 @kind object;
  #L301a0a.  v4:= 0I;
  #L301a0c.  call temp:= `o`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L301a12.  v5:= temp;
  #L301a14.  if v5 == 0 then goto L301ba4;
  #L301a18.  call temp:= `C`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.C:()Ljava/lang/String;` @kind virtual;
  #L301a1e.  v5:= temp @kind object;
  #L301a20.  call temp:= `hashCode`(v5) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L301a26.  call temp:= `hashCode`(v5) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L301a2c.  v6:= temp;
  #L301a2e.  v7:= 3I;
  #L301a30.  v8:= 2I;
  #L301a32.  v9:= 1I;
  #L301a34.  v10:= -1I;
  #L301a36.  goto L301bb8;
  #L301a3c.  v6:= -1I;
  #L301a3e.  goto L301a96;
  #L301a40.  v6:= "mode" @kind object;
  #L301a44.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L301a4a.  v6:= temp;
  #L301a4c.  if v6 != 0 then goto L301a52;
  #L301a50.  goto L301a3c;
  #L301a52.  v6:= 3I;
  #L301a54.  goto L301a96;
  #L301a56.  v6:= "inv" @kind object;
  #L301a5a.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L301a60.  v6:= temp;
  #L301a62.  if v6 != 0 then goto L301a68;
  #L301a66.  goto L301a3c;
  #L301a68.  v6:= 2I;
  #L301a6a.  goto L301a96;
  #L301a6c.  v6:= "pt" @kind object;
  #L301a70.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L301a76.  v6:= temp;
  #L301a78.  if v6 != 0 then goto L301a7e;
  #L301a7c.  goto L301a3c;
  #L301a7e.  v6:= 1I;
  #L301a80.  goto L301a96;
  #L301a82.  v6:= "o" @kind object;
  #L301a86.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L301a8c.  v6:= temp;
  #L301a8e.  if v6 != 0 then goto L301a94;
  #L301a92.  goto L301a3c;
  #L301a94.  v6:= 0I;
  #L301a96.  goto L301bdc;
  #L301a9c.  call `N0`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L301aa2.  goto L301a0c;
  #L301aa4.  call temp:= `m0`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m0:()Ljava/lang/String;` @kind virtual;
  #L301aaa.  v1:= temp @kind object;
  #L301aac.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L301ab2.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L301ab8.  v6:= temp;
  #L301aba.  goto L301bf4;
  #L301ac0.  v7:= -1I;
  #L301ac2.  goto L301b16;
  #L301ac4.  v6:= "s" @kind object;
  #L301ac8.  call temp:= `equals`(v1, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L301ace.  v1:= temp;
  #L301ad0.  if v1 != 0 then goto L301b16;
  #L301ad4.  goto L301ac0;
  #L301ad6.  v6:= "n" @kind object;
  #L301ada.  call temp:= `equals`(v1, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L301ae0.  v1:= temp;
  #L301ae2.  if v1 != 0 then goto L301ae8;
  #L301ae6.  goto L301ac0;
  #L301ae8.  v7:= 2I;
  #L301aea.  goto L301b16;
  #L301aec.  v6:= "i" @kind object;
  #L301af0.  call temp:= `equals`(v1, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L301af6.  v1:= temp;
  #L301af8.  if v1 != 0 then goto L301afe;
  #L301afc.  goto L301ac0;
  #L301afe.  v7:= 1I;
  #L301b00.  goto L301b16;
  #L301b02.  v6:= "a" @kind object;
  #L301b06.  call temp:= `equals`(v1, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L301b0c.  v1:= temp;
  #L301b0e.  if v1 != 0 then goto L301b14;
  #L301b12.  goto L301ac0;
  #L301b14.  v7:= 0I;
  #L301b16.  goto L301c18;
  #L301b1c.  v1:= new `java.lang.StringBuilder`;
  #L301b20.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L301b26.  v6:= "Unknown mask mode " @kind object;
  #L301b2a.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L301b30.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L301b36.  v5:= ". Defaulting to Add." @kind object;
  #L301b3a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L301b40.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L301b46.  v1:= temp @kind object;
  #L301b48.  call `c`(v1) @signature `Lcom/airbnb/lottie/z0/d;.c:(Ljava/lang/String;)V` @kind static;
  #L301b4e.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_ADD` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L301b52.  goto L301a0c;
  #L301b56.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_SUBTRACT` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L301b5a.  goto L301a0c;
  #L301b5e.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_NONE` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L301b62.  goto L301a0c;
  #L301b66.  v1:= "Animation contains intersect masks. They are not supported but will be treated like add masks." @kind object;
  #L301b6a.  call `a`(v12, v1) @signature `Lcom/airbnb/lottie/e0;.a:(Ljava/lang/String;)V` @kind virtual;
  #L301b70.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_INTERSECT` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L301b74.  goto L301a0c;
  #L301b78.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_ADD` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L301b7c.  goto L301a0c;
  #L301b80.  call temp:= `s`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.s:()Z` @kind virtual;
  #L301b86.  v4:= temp;
  #L301b88.  goto L301a0c;
  #L301b8c.  call temp:= `k`(v11, v12) @signature `Lcom/airbnb/lottie/y0/d;.k:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/h;` @kind static;
  #L301b92.  v2:= temp @kind object;
  #L301b94.  goto L301a0c;
  #L301b98.  call temp:= `h`(v11, v12) @signature `Lcom/airbnb/lottie/y0/d;.h:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/d;` @kind static;
  #L301b9e.  v3:= temp @kind object;
  #L301ba0.  goto L301a0c;
  #L301ba4.  call `m`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m:()V` @kind virtual;
  #L301baa.  v11:= new `com.airbnb.lottie.model.content.Mask`;
  #L301bae.  call `<init>`(v11, v1, v2, v3, v4) @signature `Lcom/airbnb/lottie/model/content/Mask;.<init>:(Lcom/airbnb/lottie/model/content/Mask$MaskMode;Lcom/airbnb/lottie/model/i/h;Lcom/airbnb/lottie/model/i/d;Z)V` @kind direct;
  #L301bb4.  return v11 @kind object;
  #L301bb6.  
  #L301bb8.  switch v6
                  | 111 => goto L301a82
                  | 3588 => goto L301a6c
                  | 104433 => goto L301a56
                  | 3357091 => goto L301a40
                  | else => goto L301a3c;
  #L301bdc.  switch v6
                  | 0 => goto L301b98
                  | 1 => goto L301b8c
                  | 2 => goto L301b80
                  | 3 => goto L301aa4
                  | else => goto L301a9c;
  #L301bf4.  switch v6
                  | 97 => goto L301b02
                  | 105 => goto L301aec
                  | 110 => goto L301ad6
                  | 115 => goto L301ac4
                  | else => goto L301ac0;
  #L301c18.  switch v7
                  | 0 => goto L301b78
                  | 1 => goto L301b66
                  | 2 => goto L301b5e
                  | 3 => goto L301b56
                  | else => goto L301b1c;
}
