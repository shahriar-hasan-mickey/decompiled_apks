record `com.airbnb.lottie.y0.a` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `com.airbnb.lottie.parser.moshi.a` `@@com.airbnb.lottie.y0.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/y0/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2fdb78.  v0:= "k" @kind object;
  #L2fdb7c.  v1:= "x" @kind object;
  #L2fdb80.  v2:= "y" @kind object;
  #L2fdb84.  temp:= new `java.lang.String`[v0, v1, v2];
  #L2fdb8a.  v0:= temp @kind object;
  #L2fdb8c.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/a;.a:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/a;` @kind static;
  #L2fdb92.  v0:= temp @kind object;
  #L2fdb94.  `@@com.airbnb.lottie.y0.a.a` @type ^`com.airbnb.lottie.parser.moshi.a` := v0 @kind object;
  #L2fdb98.  return @kind void;
}
procedure `com.airbnb.lottie.model.i.e` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v3 @kind object, `com.airbnb.lottie.e0` v4 @kind object) @signature `Lcom/airbnb/lottie/y0/a;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2fda20.  v0:= new `java.util.ArrayList`;
  #L2fda24.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2fda2a.  call temp:= `u0`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L2fda30.  v1:= temp @kind object;
  #L2fda32.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L2fda36.  if v1 != v2 then goto L2fda6a;
  #L2fda3a.  call `c`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.c:()V` @kind virtual;
  #L2fda40.  call temp:= `o`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L2fda46.  v1:= temp;
  #L2fda48.  if v1 == 0 then goto L2fda5c;
  #L2fda4c.  call temp:= `a`(v3, v4) @signature `Lcom/airbnb/lottie/y0/b0;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/w0/c/p;` @kind static;
  #L2fda52.  v1:= temp @kind object;
  #L2fda54.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2fda5a.  goto L2fda40;
  #L2fda5c.  call `k`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.k:()V` @kind virtual;
  #L2fda62.  call `b`(v0) @signature `Lcom/airbnb/lottie/y0/v;.b:(Ljava/util/List;)V` @kind static;
  #L2fda68.  goto L2fda8a;
  #L2fda6a.  v4:= new `com.airbnb.lottie.a1.a`;
  #L2fda6e.  call temp:= `e`() @signature `Lcom/airbnb/lottie/z0/l;.e:()F` @kind static;
  #L2fda74.  v1:= temp;
  #L2fda76.  call temp:= `e`(v3, v1) @signature `Lcom/airbnb/lottie/y0/t;.e:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L2fda7c.  v3:= temp @kind object;
  #L2fda7e.  call `<init>`(v4, v3) @signature `Lcom/airbnb/lottie/a1/a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2fda84.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2fda8a.  v3:= new `com.airbnb.lottie.model.i.e`;
  #L2fda8e.  call `<init>`(v3, v0) @signature `Lcom/airbnb/lottie/model/i/e;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2fda94.  return v3 @kind object;
}
procedure `com.airbnb.lottie.model.i.m` `b`(`com.airbnb.lottie.parser.moshi.JsonReader` v7 @kind object, `com.airbnb.lottie.e0` v8 @kind object) @signature `Lcom/airbnb/lottie/y0/a;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/m;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2fdaa8.  call `d`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:()V` @kind virtual;
  #L2fdaae.  v0:= 1I;
  #L2fdab0.  v1:= 0I;
  #L2fdab2.  v2:= 0I;
  #L2fdab4.  v2:= v1 @kind object;
  #L2fdab6.  v3:= v2 @kind object;
  #L2fdab8.  v4:= 0I;
  #L2fdaba.  call temp:= `u0`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L2fdac0.  v5:= temp @kind object;
  #L2fdac2.  v6:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.END_OBJECT` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L2fdac6.  if v5 == v6 then goto L2fdb42;
  #L2fdaca.  v5:= `@@com.airbnb.lottie.y0.a.a` @type ^`com.airbnb.lottie.parser.moshi.a` @kind object;
  #L2fdace.  call temp:= `G0`(v7, v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.G0:(Lcom/airbnb/lottie/parser/moshi/a;)I` @kind virtual;
  #L2fdad4.  v5:= temp;
  #L2fdad6.  if v5 == 0 then goto L2fdb38;
  #L2fdada.  if v5 == v0 then goto L2fdb14;
  #L2fdade.  v6:= 2I;
  #L2fdae0.  if v5 == v6 then goto L2fdaf2;
  #L2fdae4.  call `K0`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.K0:()V` @kind virtual;
  #L2fdaea.  call `N0`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L2fdaf0.  goto L2fdaba;
  #L2fdaf2.  call temp:= `u0`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L2fdaf8.  v5:= temp @kind object;
  #L2fdafa.  v6:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.STRING` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L2fdafe.  if v5 != v6 then goto L2fdb0a;
  #L2fdb02.  call `N0`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L2fdb08.  goto L2fdb2a;
  #L2fdb0a.  call temp:= `e`(v7, v8) @signature `Lcom/airbnb/lottie/y0/d;.e:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/b;` @kind static;
  #L2fdb10.  v3:= temp @kind object;
  #L2fdb12.  goto L2fdaba;
  #L2fdb14.  call temp:= `u0`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L2fdb1a.  v5:= temp @kind object;
  #L2fdb1c.  v6:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.STRING` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L2fdb20.  if v5 != v6 then goto L2fdb2e;
  #L2fdb24.  call `N0`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L2fdb2a.  v4:= 1I;
  #L2fdb2c.  goto L2fdaba;
  #L2fdb2e.  call temp:= `e`(v7, v8) @signature `Lcom/airbnb/lottie/y0/d;.e:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/b;` @kind static;
  #L2fdb34.  v2:= temp @kind object;
  #L2fdb36.  goto L2fdaba;
  #L2fdb38.  call temp:= `a`(v7, v8) @signature `Lcom/airbnb/lottie/y0/a;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/e;` @kind static;
  #L2fdb3e.  v1:= temp @kind object;
  #L2fdb40.  goto L2fdaba;
  #L2fdb42.  call `m`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m:()V` @kind virtual;
  #L2fdb48.  if v4 == 0 then goto L2fdb56;
  #L2fdb4c.  v7:= "Lottie doesn't support expressions." @kind object;
  #L2fdb50.  call `a`(v8, v7) @signature `Lcom/airbnb/lottie/e0;.a:(Ljava/lang/String;)V` @kind virtual;
  #L2fdb56.  if v1 == 0 then goto L2fdb5c;
  #L2fdb5a.  return v1 @kind object;
  #L2fdb5c.  v7:= new `com.airbnb.lottie.model.i.i`;
  #L2fdb60.  call `<init>`(v7, v2, v3) @signature `Lcom/airbnb/lottie/model/i/i;.<init>:(Lcom/airbnb/lottie/model/i/b;Lcom/airbnb/lottie/model/i/b;)V` @kind direct;
  #L2fdb66.  return v7 @kind object;
}
