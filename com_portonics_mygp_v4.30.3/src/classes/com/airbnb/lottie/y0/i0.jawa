record `com.airbnb.lottie.y0.i0` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.y0.p0` @kind interface {
}
global `com.airbnb.lottie.y0.i0` `@@com.airbnb.lottie.y0.i0.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/y0/i0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L302344.  v0:= new `com.airbnb.lottie.y0.i0`;
  #L302348.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/y0/i0;.<init>:()V` @kind direct;
  #L30234e.  `@@com.airbnb.lottie.y0.i0.a` @type ^`com.airbnb.lottie.y0.i0` := v0 @kind object;
  #L302352.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.y0.i0` v0 @kind this) @signature `Lcom/airbnb/lottie/y0/i0;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L302364.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30236a.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.airbnb.lottie.y0.i0` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/y0/i0;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L302328.  call temp:= `b`(v0, v1, v2) @signature `Lcom/airbnb/lottie/y0/i0;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/a1/d;` @kind virtual;
  #L30232e.  v1:= temp @kind object;
  #L302330.  return v1 @kind object;
}
procedure `com.airbnb.lottie.a1.d` `b`(`com.airbnb.lottie.y0.i0` v4 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v5 @kind object, `float` v6 ) @signature `Lcom/airbnb/lottie/y0/i0;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/a1/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3022a8.  call temp:= `u0`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.u0:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L3022ae.  v0:= temp @kind object;
  #L3022b0.  v1:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L3022b4.  if v0 != v1 then goto L3022bc;
  #L3022b8.  v0:= 1I;
  #L3022ba.  goto L3022be;
  #L3022bc.  v0:= 0I;
  #L3022be.  if v0 == 0 then goto L3022c8;
  #L3022c2.  call `c`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.c:()V` @kind virtual;
  #L3022c8.  call temp:= `v`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L3022ce.  v1:= temp @kind wide;
  #L3022d0.  v1:= (`float`) v1 @kind d2f;
  #L3022d2.  call temp:= `v`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L3022d8.  v2:= temp @kind wide;
  #L3022da.  v2:= (`float`) v2 @kind d2f;
  #L3022dc.  call temp:= `o`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L3022e2.  v3:= temp;
  #L3022e4.  if v3 == 0 then goto L3022f0;
  #L3022e8.  call `N0`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L3022ee.  goto L3022dc;
  #L3022f0.  if v0 == 0 then goto L3022fa;
  #L3022f4.  call `k`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.k:()V` @kind virtual;
  #L3022fa.  v5:= new `com.airbnb.lottie.a1.d`;
  #L3022fe.  v0:= 100.0F;
  #L302302.  v1:= v1 / v0 @kind float;
  #L302304.  v1:= v1 * v6 @kind float;
  #L302308.  v2:= v2 / v0 @kind float;
  #L30230a.  v2:= v2 * v6 @kind float;
  #L30230e.  call `<init>`(v5, v1, v2) @signature `Lcom/airbnb/lottie/a1/d;.<init>:(FF)V` @kind direct;
  #L302314.  return v5 @kind object;
}
