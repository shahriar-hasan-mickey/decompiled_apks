record `com.airbnb.lottie.y0.e` @kind class @AccessFlag ABSTRACT {
}
global `com.airbnb.lottie.parser.moshi.a` `@@com.airbnb.lottie.y0.e.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.airbnb.lottie.parser.moshi.a` `@@com.airbnb.lottie.y0.e.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/y0/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2fe4d4.  v0:= "ef" @kind object;
  #L2fe4d8.  temp:= new `java.lang.String`[v0];
  #L2fe4de.  v0:= temp @kind object;
  #L2fe4e0.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/a;.a:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/a;` @kind static;
  #L2fe4e6.  v0:= temp @kind object;
  #L2fe4e8.  `@@com.airbnb.lottie.y0.e.a` @type ^`com.airbnb.lottie.parser.moshi.a` := v0 @kind object;
  #L2fe4ec.  v0:= "ty" @kind object;
  #L2fe4f0.  v1:= "v" @kind object;
  #L2fe4f4.  temp:= new `java.lang.String`[v0, v1];
  #L2fe4fa.  v0:= temp @kind object;
  #L2fe4fc.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/a;.a:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/a;` @kind static;
  #L2fe502.  v0:= temp @kind object;
  #L2fe504.  `@@com.airbnb.lottie.y0.e.b` @type ^`com.airbnb.lottie.parser.moshi.a` := v0 @kind object;
  #L2fe508.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.a` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v5 @kind object, `com.airbnb.lottie.e0` v6 @kind object) @signature `Lcom/airbnb/lottie/y0/e;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/content/a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2fe3e8.  call `d`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:()V` @kind virtual;
  #L2fe3ee.  v0:= 0I;
  #L2fe3f0.  v1:= 0I;
  #L2fe3f2.  v2:= 0I;
  #L2fe3f4.  call temp:= `o`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L2fe3fa.  v3:= temp;
  #L2fe3fc.  if v3 == 0 then goto L2fe454;
  #L2fe400.  v3:= `@@com.airbnb.lottie.y0.e.b` @type ^`com.airbnb.lottie.parser.moshi.a` @kind object;
  #L2fe404.  call temp:= `G0`(v5, v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.G0:(Lcom/airbnb/lottie/parser/moshi/a;)I` @kind virtual;
  #L2fe40a.  v3:= temp;
  #L2fe40c.  v4:= 1I;
  #L2fe40e.  if v3 == 0 then goto L2fe444;
  #L2fe412.  if v3 == v4 then goto L2fe424;
  #L2fe416.  call `K0`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.K0:()V` @kind virtual;
  #L2fe41c.  call `N0`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L2fe422.  goto L2fe3f4;
  #L2fe424.  if v2 == 0 then goto L2fe43c;
  #L2fe428.  v1:= new `com.airbnb.lottie.model.content.a`;
  #L2fe42c.  call temp:= `e`(v5, v6) @signature `Lcom/airbnb/lottie/y0/d;.e:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/i/b;` @kind static;
  #L2fe432.  v3:= temp @kind object;
  #L2fe434.  call `<init>`(v1, v3) @signature `Lcom/airbnb/lottie/model/content/a;.<init>:(Lcom/airbnb/lottie/model/i/b;)V` @kind direct;
  #L2fe43a.  goto L2fe3f4;
  #L2fe43c.  call `N0`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L2fe442.  goto L2fe3f4;
  #L2fe444.  call temp:= `x`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.x:()I` @kind virtual;
  #L2fe44a.  v2:= temp;
  #L2fe44c.  if v2 != 0 then goto L2fe3f2;
  #L2fe450.  v2:= 1I;
  #L2fe452.  goto L2fe3f4;
  #L2fe454.  call `m`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m:()V` @kind virtual;
  #L2fe45a.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.content.a` `b`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind object, `com.airbnb.lottie.e0` v3 @kind object) @signature `Lcom/airbnb/lottie/y0/e;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/content/a;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2fe46c.  v0:= 0I;
  #L2fe46e.  call temp:= `o`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L2fe474.  v1:= temp;
  #L2fe476.  if v1 == 0 then goto L2fe4c2;
  #L2fe47a.  v1:= `@@com.airbnb.lottie.y0.e.a` @type ^`com.airbnb.lottie.parser.moshi.a` @kind object;
  #L2fe47e.  call temp:= `G0`(v2, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.G0:(Lcom/airbnb/lottie/parser/moshi/a;)I` @kind virtual;
  #L2fe484.  v1:= temp;
  #L2fe486.  if v1 == 0 then goto L2fe498;
  #L2fe48a.  call `K0`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.K0:()V` @kind virtual;
  #L2fe490.  call `N0`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L2fe496.  goto L2fe46e;
  #L2fe498.  call `c`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.c:()V` @kind virtual;
  #L2fe49e.  call temp:= `o`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L2fe4a4.  v1:= temp;
  #L2fe4a6.  if v1 == 0 then goto L2fe4ba;
  #L2fe4aa.  call temp:= `a`(v2, v3) @signature `Lcom/airbnb/lottie/y0/e;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/content/a;` @kind static;
  #L2fe4b0.  v1:= temp @kind object;
  #L2fe4b2.  if v1 == 0 then goto L2fe49e;
  #L2fe4b6.  v0:= v1 @kind object;
  #L2fe4b8.  goto L2fe49e;
  #L2fe4ba.  call `k`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.k:()V` @kind virtual;
  #L2fe4c0.  goto L2fe46e;
  #L2fe4c2.  return v0 @kind object;
}
