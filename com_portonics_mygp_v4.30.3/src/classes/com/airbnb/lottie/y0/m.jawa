record `com.airbnb.lottie.y0.m` @kind class @AccessFlag ABSTRACT {
}
global `com.airbnb.lottie.parser.moshi.a` `@@com.airbnb.lottie.y0.m.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.airbnb.lottie.parser.moshi.a` `@@com.airbnb.lottie.y0.m.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/y0/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2ff16c.  v0:= "ch" @kind object;
  #L2ff170.  v1:= "size" @kind object;
  #L2ff174.  v2:= "w" @kind object;
  #L2ff178.  v3:= "style" @kind object;
  #L2ff17c.  v4:= "fFamily" @kind object;
  #L2ff180.  v5:= "data" @kind object;
  #L2ff184.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5];
  #L2ff18a.  v0:= temp @kind object;
  #L2ff18c.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/a;.a:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/a;` @kind static;
  #L2ff192.  v0:= temp @kind object;
  #L2ff194.  `@@com.airbnb.lottie.y0.m.a` @type ^`com.airbnb.lottie.parser.moshi.a` := v0 @kind object;
  #L2ff198.  v0:= "shapes" @kind object;
  #L2ff19c.  temp:= new `java.lang.String`[v0];
  #L2ff1a2.  v0:= temp @kind object;
  #L2ff1a4.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/a;.a:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/a;` @kind static;
  #L2ff1aa.  v0:= temp @kind object;
  #L2ff1ac.  `@@com.airbnb.lottie.y0.m.b` @type ^`com.airbnb.lottie.parser.moshi.a` := v0 @kind object;
  #L2ff1b0.  return @kind void;
}
procedure `com.airbnb.lottie.model.c` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v11 @kind object, `com.airbnb.lottie.e0` v12 @kind object) @signature `Lcom/airbnb/lottie/y0/m;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/c;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2ff034.  v1:= new `java.util.ArrayList`;
  #L2ff038.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2ff03e.  call `d`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:()V` @kind virtual;
  #L2ff044.  v0:= 0I;
  #L2ff046.  v2:= 0L;
  #L2ff04a.  v4:= 0I;
  #L2ff04c.  v9:= v0 @kind object;
  #L2ff04e.  v10:= v9 @kind object;
  #L2ff050.  v5:= v2 @kind wide;
  #L2ff052.  v7:= v5 @kind wide;
  #L2ff054.  v2:= 0I;
  #L2ff056.  call temp:= `o`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L2ff05c.  v0:= temp;
  #L2ff05e.  if v0 == 0 then goto L2ff13e;
  #L2ff062.  v0:= `@@com.airbnb.lottie.y0.m.a` @type ^`com.airbnb.lottie.parser.moshi.a` @kind object;
  #L2ff066.  call temp:= `G0`(v11, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.G0:(Lcom/airbnb/lottie/parser/moshi/a;)I` @kind virtual;
  #L2ff06c.  v0:= temp;
  #L2ff06e.  if v0 == 0 then goto L2ff12c;
  #L2ff072.  v3:= 1I;
  #L2ff074.  if v0 == v3 then goto L2ff122;
  #L2ff078.  v3:= 2I;
  #L2ff07a.  if v0 == v3 then goto L2ff118;
  #L2ff07e.  v3:= 3I;
  #L2ff080.  if v0 == v3 then goto L2ff10e;
  #L2ff084.  v3:= 4I;
  #L2ff086.  if v0 == v3 then goto L2ff104;
  #L2ff08a.  v3:= 5I;
  #L2ff08c.  if v0 == v3 then goto L2ff09e;
  #L2ff090.  call `K0`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.K0:()V` @kind virtual;
  #L2ff096.  call `N0`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L2ff09c.  goto L2ff056;
  #L2ff09e.  call `d`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:()V` @kind virtual;
  #L2ff0a4.  call temp:= `o`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L2ff0aa.  v0:= temp;
  #L2ff0ac.  if v0 == 0 then goto L2ff0fc;
  #L2ff0b0.  v0:= `@@com.airbnb.lottie.y0.m.b` @type ^`com.airbnb.lottie.parser.moshi.a` @kind object;
  #L2ff0b4.  call temp:= `G0`(v11, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.G0:(Lcom/airbnb/lottie/parser/moshi/a;)I` @kind virtual;
  #L2ff0ba.  v0:= temp;
  #L2ff0bc.  if v0 == 0 then goto L2ff0ce;
  #L2ff0c0.  call `K0`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.K0:()V` @kind virtual;
  #L2ff0c6.  call `N0`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L2ff0cc.  goto L2ff0a4;
  #L2ff0ce.  call `c`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.c:()V` @kind virtual;
  #L2ff0d4.  call temp:= `o`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L2ff0da.  v0:= temp;
  #L2ff0dc.  if v0 == 0 then goto L2ff0f4;
  #L2ff0e0.  call temp:= `a`(v11, v12) @signature `Lcom/airbnb/lottie/y0/h;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/content/c;` @kind static;
  #L2ff0e6.  v0:= temp @kind object;
  #L2ff0e8.  v0:= (`com.airbnb.lottie.model.content.l`) v0 @kind object;
  #L2ff0ec.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ff0f2.  goto L2ff0d4;
  #L2ff0f4.  call `k`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.k:()V` @kind virtual;
  #L2ff0fa.  goto L2ff0a4;
  #L2ff0fc.  call `m`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m:()V` @kind virtual;
  #L2ff102.  goto L2ff056;
  #L2ff104.  call temp:= `m0`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m0:()Ljava/lang/String;` @kind virtual;
  #L2ff10a.  v10:= temp @kind object;
  #L2ff10c.  goto L2ff056;
  #L2ff10e.  call temp:= `m0`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m0:()Ljava/lang/String;` @kind virtual;
  #L2ff114.  v9:= temp @kind object;
  #L2ff116.  goto L2ff056;
  #L2ff118.  call temp:= `v`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L2ff11e.  v7:= temp @kind wide;
  #L2ff120.  goto L2ff056;
  #L2ff122.  call temp:= `v`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.v:()D` @kind virtual;
  #L2ff128.  v5:= temp @kind wide;
  #L2ff12a.  goto L2ff056;
  #L2ff12c.  call temp:= `m0`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m0:()Ljava/lang/String;` @kind virtual;
  #L2ff132.  v0:= temp @kind object;
  #L2ff134.  call temp:= `charAt`(v0, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2ff13a.  v2:= temp;
  #L2ff13c.  goto L2ff056;
  #L2ff13e.  call `m`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m:()V` @kind virtual;
  #L2ff144.  v11:= new `com.airbnb.lottie.model.c`;
  #L2ff148.  v0:= v11 @kind object;
  #L2ff14a.  v3:= v5 @kind wide;
  #L2ff14c.  v5:= v7 @kind wide;
  #L2ff14e.  v7:= v9 @kind object;
  #L2ff150.  v8:= v10 @kind object;
  #L2ff152.  call `<init>`(v0, v1, v2, v3, v5, v7, v8) @signature `Lcom/airbnb/lottie/model/c;.<init>:(Ljava/util/List;CDDLjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L2ff158.  return v11 @kind object;
}
