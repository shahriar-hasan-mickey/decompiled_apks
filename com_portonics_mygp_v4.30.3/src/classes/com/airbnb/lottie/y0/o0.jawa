record `com.airbnb.lottie.y0.o0` @kind class @AccessFlag ABSTRACT {
}
global `com.airbnb.lottie.parser.moshi.a` `@@com.airbnb.lottie.y0.o0.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/y0/o0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L302c68.  v0:= "s" @kind object;
  #L302c6c.  v1:= "e" @kind object;
  #L302c70.  v2:= "o" @kind object;
  #L302c74.  v3:= "nm" @kind object;
  #L302c78.  v4:= "m" @kind object;
  #L302c7c.  v5:= "hd" @kind object;
  #L302c80.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5];
  #L302c86.  v0:= temp @kind object;
  #L302c88.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/a;.a:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/a;` @kind static;
  #L302c8e.  v0:= temp @kind object;
  #L302c90.  `@@com.airbnb.lottie.y0.o0.a` @type ^`com.airbnb.lottie.parser.moshi.a` := v0 @kind object;
  #L302c94.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.ShapeTrimPath` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v9 @kind object, `com.airbnb.lottie.e0` v10 @kind object) @signature `Lcom/airbnb/lottie/y0/o0;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;)Lcom/airbnb/lottie/model/content/ShapeTrimPath;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L302bb4.  v0:= 0I;
  #L302bb6.  v1:= 0I;
  #L302bb8.  v3:= v1 @kind object;
  #L302bba.  v4:= v3 @kind object;
  #L302bbc.  v5:= v4 @kind object;
  #L302bbe.  v6:= v5 @kind object;
  #L302bc0.  v7:= v6 @kind object;
  #L302bc2.  v8:= 0I;
  #L302bc4.  call temp:= `o`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.o:()Z` @kind virtual;
  #L302bca.  v1:= temp;
  #L302bcc.  if v1 == 0 then goto L302c4a;
  #L302bd0.  v1:= `@@com.airbnb.lottie.y0.o0.a` @type ^`com.airbnb.lottie.parser.moshi.a` @kind object;
  #L302bd4.  call temp:= `G0`(v9, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.G0:(Lcom/airbnb/lottie/parser/moshi/a;)I` @kind virtual;
  #L302bda.  v1:= temp;
  #L302bdc.  if v1 == 0 then goto L302c40;
  #L302be0.  v2:= 1I;
  #L302be2.  if v1 == v2 then goto L302c36;
  #L302be6.  v2:= 2I;
  #L302be8.  if v1 == v2 then goto L302c2c;
  #L302bec.  v2:= 3I;
  #L302bee.  if v1 == v2 then goto L302c22;
  #L302bf2.  v2:= 4I;
  #L302bf4.  if v1 == v2 then goto L302c10;
  #L302bf8.  v2:= 5I;
  #L302bfa.  if v1 == v2 then goto L302c06;
  #L302bfe.  call `N0`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.N0:()V` @kind virtual;
  #L302c04.  goto L302bc4;
  #L302c06.  call temp:= `s`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.s:()Z` @kind virtual;
  #L302c0c.  v8:= temp;
  #L302c0e.  goto L302bc4;
  #L302c10.  call temp:= `x`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.x:()I` @kind virtual;
  #L302c16.  v1:= temp;
  #L302c18.  call temp:= `forId`(v1) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.forId:(I)Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;` @kind static;
  #L302c1e.  v4:= temp @kind object;
  #L302c20.  goto L302bc4;
  #L302c22.  call temp:= `m0`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.m0:()Ljava/lang/String;` @kind virtual;
  #L302c28.  v3:= temp @kind object;
  #L302c2a.  goto L302bc4;
  #L302c2c.  call temp:= `f`(v9, v10, v0) @signature `Lcom/airbnb/lottie/y0/d;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;Z)Lcom/airbnb/lottie/model/i/b;` @kind static;
  #L302c32.  v7:= temp @kind object;
  #L302c34.  goto L302bc4;
  #L302c36.  call temp:= `f`(v9, v10, v0) @signature `Lcom/airbnb/lottie/y0/d;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;Z)Lcom/airbnb/lottie/model/i/b;` @kind static;
  #L302c3c.  v6:= temp @kind object;
  #L302c3e.  goto L302bc4;
  #L302c40.  call temp:= `f`(v9, v10, v0) @signature `Lcom/airbnb/lottie/y0/d;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/e0;Z)Lcom/airbnb/lottie/model/i/b;` @kind static;
  #L302c46.  v5:= temp @kind object;
  #L302c48.  goto L302bc4;
  #L302c4a.  v9:= new `com.airbnb.lottie.model.content.ShapeTrimPath`;
  #L302c4e.  v2:= v9 @kind object;
  #L302c50.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.<init>:(Ljava/lang/String;Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;Lcom/airbnb/lottie/model/i/b;Lcom/airbnb/lottie/model/i/b;Lcom/airbnb/lottie/model/i/b;Z)V` @kind direct;
  #L302c56.  return v9 @kind object;
}
