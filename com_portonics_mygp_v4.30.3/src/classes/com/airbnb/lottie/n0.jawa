record `com.airbnb.lottie.n0` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `com.airbnb.lottie.n0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Throwable` `com.airbnb.lottie.n0.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.n0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/airbnb/lottie/n0;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ee0a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ee0a6.  v0.`com.airbnb.lottie.n0.a` @type ^`java.lang.Object` := v1 @kind object;
  #L2ee0aa.  v1:= 0I;
  #L2ee0ac.  v0.`com.airbnb.lottie.n0.b` @type ^`java.lang.Throwable` := v1 @kind object;
  #L2ee0b0.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.n0` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lcom/airbnb/lottie/n0;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ee0c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ee0ca.  v0.`com.airbnb.lottie.n0.b` @type ^`java.lang.Throwable` := v1 @kind object;
  #L2ee0ce.  v1:= 0I;
  #L2ee0d0.  v0.`com.airbnb.lottie.n0.a` @type ^`java.lang.Object` := v1 @kind object;
  #L2ee0d4.  return @kind void;
}
procedure `java.lang.Throwable` `a`(`com.airbnb.lottie.n0` v1 @kind this) @signature `Lcom/airbnb/lottie/n0;.a:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ee088.  v0:= v1.`com.airbnb.lottie.n0.b` @type ^`java.lang.Throwable` @kind object;
  #L2ee08c.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`com.airbnb.lottie.n0` v1 @kind this) @signature `Lcom/airbnb/lottie/n0;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ee070.  v0:= v1.`com.airbnb.lottie.n0.a` @type ^`java.lang.Object` @kind object;
  #L2ee074.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.airbnb.lottie.n0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/airbnb/lottie/n0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2edf9c.  v0:= 1I;
  #L2edf9e.  if v4 != v5 then goto L2edfa4;
  #L2edfa2.  return v0;
  #L2edfa4.  v1:= instanceof @variable v5 @type ^`com.airbnb.lottie.n0` @kind boolean;
  #L2edfa8.  v2:= 0I;
  #L2edfaa.  if v1 != 0 then goto L2edfb0;
  #L2edfae.  return v2;
  #L2edfb0.  v5:= (`com.airbnb.lottie.n0`) v5 @kind object;
  #L2edfb4.  call temp:= `b`(v4) @signature `Lcom/airbnb/lottie/n0;.b:()Ljava/lang/Object;` @kind virtual;
  #L2edfba.  v1:= temp @kind object;
  #L2edfbc.  if v1 == 0 then goto L2edfde;
  #L2edfc0.  call temp:= `b`(v4) @signature `Lcom/airbnb/lottie/n0;.b:()Ljava/lang/Object;` @kind virtual;
  #L2edfc6.  v1:= temp @kind object;
  #L2edfc8.  call temp:= `b`(v5) @signature `Lcom/airbnb/lottie/n0;.b:()Ljava/lang/Object;` @kind virtual;
  #L2edfce.  v3:= temp @kind object;
  #L2edfd0.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2edfd6.  v1:= temp;
  #L2edfd8.  if v1 == 0 then goto L2edfde;
  #L2edfdc.  return v0;
  #L2edfde.  call temp:= `a`(v4) @signature `Lcom/airbnb/lottie/n0;.a:()Ljava/lang/Throwable;` @kind virtual;
  #L2edfe4.  v0:= temp @kind object;
  #L2edfe6.  if v0 == 0 then goto L2ee020;
  #L2edfea.  call temp:= `a`(v5) @signature `Lcom/airbnb/lottie/n0;.a:()Ljava/lang/Throwable;` @kind virtual;
  #L2edff0.  v5:= temp @kind object;
  #L2edff2.  if v5 == 0 then goto L2ee020;
  #L2edff6.  call temp:= `a`(v4) @signature `Lcom/airbnb/lottie/n0;.a:()Ljava/lang/Throwable;` @kind virtual;
  #L2edffc.  v5:= temp @kind object;
  #L2edffe.  call temp:= `toString`(v5) @signature `Ljava/lang/Throwable;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ee004.  v5:= temp @kind object;
  #L2ee006.  call temp:= `a`(v4) @signature `Lcom/airbnb/lottie/n0;.a:()Ljava/lang/Throwable;` @kind virtual;
  #L2ee00c.  v0:= temp @kind object;
  #L2ee00e.  call temp:= `toString`(v0) @signature `Ljava/lang/Throwable;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ee014.  v0:= temp @kind object;
  #L2ee016.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ee01c.  v5:= temp;
  #L2ee01e.  return v5;
  #L2ee020.  return v2;
}
procedure `int` `hashCode`(`com.airbnb.lottie.n0` v3 @kind this) @signature `Lcom/airbnb/lottie/n0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ee034.  v0:= 2I;
  #L2ee036.  v0:= new `java.lang.Object`[v0];
  #L2ee03a.  call temp:= `b`(v3) @signature `Lcom/airbnb/lottie/n0;.b:()Ljava/lang/Object;` @kind virtual;
  #L2ee040.  v1:= temp @kind object;
  #L2ee042.  v2:= 0I;
  #L2ee044.  v0[v2]:= v1 @kind object;
  #L2ee048.  call temp:= `a`(v3) @signature `Lcom/airbnb/lottie/n0;.a:()Ljava/lang/Throwable;` @kind virtual;
  #L2ee04e.  v1:= temp @kind object;
  #L2ee050.  v2:= 1I;
  #L2ee052.  v0[v2]:= v1 @kind object;
  #L2ee056.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L2ee05c.  v0:= temp;
  #L2ee05e.  return v0;
}
