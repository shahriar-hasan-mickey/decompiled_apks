record `com.airbnb.lottie.model.i.i` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.model.i.m` @kind interface {
  `com.airbnb.lottie.model.i.b` `com.airbnb.lottie.model.i.i.a` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.model.i.b` `com.airbnb.lottie.model.i.i.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.i.i` v0 @kind this, `com.airbnb.lottie.model.i.b` v1 @kind object, `com.airbnb.lottie.model.i.b` v2 @kind object) @signature `Lcom/airbnb/lottie/model/i/i;.<init>:(Lcom/airbnb/lottie/model/i/b;Lcom/airbnb/lottie/model/i/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f7888.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f788e.  v0.`com.airbnb.lottie.model.i.i.a` @type ^`com.airbnb.lottie.model.i.b` := v1 @kind object;
  #L2f7892.  v0.`com.airbnb.lottie.model.i.i.b` @type ^`com.airbnb.lottie.model.i.b` := v2 @kind object;
  #L2f7896.  return @kind void;
}
procedure `com.airbnb.lottie.w0.c.g` `a`(`com.airbnb.lottie.model.i.i` v3 @kind this) @signature `Lcom/airbnb/lottie/model/i/i;.a:()Lcom/airbnb/lottie/w0/c/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2f7834.  v0:= new `com.airbnb.lottie.w0.c.u`;
  #L2f7838.  v1:= v3.`com.airbnb.lottie.model.i.i.a` @type ^`com.airbnb.lottie.model.i.b` @kind object;
  #L2f783c.  call temp:= `a`(v1) @signature `Lcom/airbnb/lottie/model/i/b;.a:()Lcom/airbnb/lottie/w0/c/g;` @kind virtual;
  #L2f7842.  v1:= temp @kind object;
  #L2f7844.  v2:= v3.`com.airbnb.lottie.model.i.i.b` @type ^`com.airbnb.lottie.model.i.b` @kind object;
  #L2f7848.  call temp:= `a`(v2) @signature `Lcom/airbnb/lottie/model/i/b;.a:()Lcom/airbnb/lottie/w0/c/g;` @kind virtual;
  #L2f784e.  v2:= temp @kind object;
  #L2f7850.  call `<init>`(v0, v1, v2) @signature `Lcom/airbnb/lottie/w0/c/u;.<init>:(Lcom/airbnb/lottie/w0/c/g;Lcom/airbnb/lottie/w0/c/g;)V` @kind direct;
  #L2f7856.  return v0 @kind object;
}
procedure `java.util.List` `b`(`com.airbnb.lottie.model.i.i` v2 @kind this) @signature `Lcom/airbnb/lottie/model/i/i;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f7868.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2f786c.  v1:= "Cannot call getKeyframes on AnimatableSplitDimensionPathValue." @kind object;
  #L2f7870.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f7876.  throw v0;
}
procedure `boolean` `c`(`com.airbnb.lottie.model.i.i` v1 @kind this) @signature `Lcom/airbnb/lottie/model/i/i;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f77fc.  v0:= v1.`com.airbnb.lottie.model.i.i.a` @type ^`com.airbnb.lottie.model.i.b` @kind object;
  #L2f7800.  call temp:= `c`(v0) @signature `Lcom/airbnb/lottie/model/i/b;.c:()Z` @kind virtual;
  #L2f7806.  v0:= temp;
  #L2f7808.  if v0 == 0 then goto L2f7820;
  #L2f780c.  v0:= v1.`com.airbnb.lottie.model.i.i.b` @type ^`com.airbnb.lottie.model.i.b` @kind object;
  #L2f7810.  call temp:= `c`(v0) @signature `Lcom/airbnb/lottie/model/i/b;.c:()Z` @kind virtual;
  #L2f7816.  v0:= temp;
  #L2f7818.  if v0 == 0 then goto L2f7820;
  #L2f781c.  v0:= 1I;
  #L2f781e.  goto L2f7822;
  #L2f7820.  v0:= 0I;
  #L2f7822.  return v0;
}
