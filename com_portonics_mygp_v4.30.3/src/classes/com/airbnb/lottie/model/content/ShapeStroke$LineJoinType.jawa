record `com.airbnb.lottie.model.content.ShapeStroke$LineJoinType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.airbnb.lottie.model.content.ShapeStroke$LineJoinType`[] `@@com.airbnb.lottie.model.content.ShapeStroke$LineJoinType.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.airbnb.lottie.model.content.ShapeStroke$LineJoinType` `@@com.airbnb.lottie.model.content.ShapeStroke$LineJoinType.BEVEL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.ShapeStroke$LineJoinType` `@@com.airbnb.lottie.model.content.ShapeStroke$LineJoinType.MITER` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.ShapeStroke$LineJoinType` `@@com.airbnb.lottie.model.content.ShapeStroke$LineJoinType.ROUND` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2f92e8.  v0:= new `com.airbnb.lottie.model.content.ShapeStroke$LineJoinType`;
  #L2f92ec.  v1:= "MITER" @kind object;
  #L2f92f0.  v2:= 0I;
  #L2f92f2.  call `<init>`(v0, v1, v2) @signature `Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2f92f8.  `@@com.airbnb.lottie.model.content.ShapeStroke$LineJoinType.MITER` @type ^`com.airbnb.lottie.model.content.ShapeStroke$LineJoinType` := v0 @kind object;
  #L2f92fc.  v1:= new `com.airbnb.lottie.model.content.ShapeStroke$LineJoinType`;
  #L2f9300.  v3:= "ROUND" @kind object;
  #L2f9304.  v4:= 1I;
  #L2f9306.  call `<init>`(v1, v3, v4) @signature `Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2f930c.  `@@com.airbnb.lottie.model.content.ShapeStroke$LineJoinType.ROUND` @type ^`com.airbnb.lottie.model.content.ShapeStroke$LineJoinType` := v1 @kind object;
  #L2f9310.  v3:= new `com.airbnb.lottie.model.content.ShapeStroke$LineJoinType`;
  #L2f9314.  v5:= "BEVEL" @kind object;
  #L2f9318.  v6:= 2I;
  #L2f931a.  call `<init>`(v3, v5, v6) @signature `Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2f9320.  `@@com.airbnb.lottie.model.content.ShapeStroke$LineJoinType.BEVEL` @type ^`com.airbnb.lottie.model.content.ShapeStroke$LineJoinType` := v3 @kind object;
  #L2f9324.  v5:= 3I;
  #L2f9326.  v5:= new `com.airbnb.lottie.model.content.ShapeStroke$LineJoinType`[v5];
  #L2f932a.  v5[v2]:= v0 @kind object;
  #L2f932e.  v5[v4]:= v1 @kind object;
  #L2f9332.  v5[v6]:= v3 @kind object;
  #L2f9336.  `@@com.airbnb.lottie.model.content.ShapeStroke$LineJoinType.$VALUES` @type ^`com.airbnb.lottie.model.content.ShapeStroke$LineJoinType`[] := v5 @kind object;
  #L2f933a.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.content.ShapeStroke$LineJoinType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2f934c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2f9352.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.ShapeStroke$LineJoinType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;.valueOf:(Ljava/lang/String;)Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f92a0.  v0:= constclass @type ^`com.airbnb.lottie.model.content.ShapeStroke$LineJoinType` @kind object;
  #L2f92a4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2f92aa.  v1:= temp @kind object;
  #L2f92ac.  v1:= (`com.airbnb.lottie.model.content.ShapeStroke$LineJoinType`) v1 @kind object;
  #L2f92b0.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.content.ShapeStroke$LineJoinType`[] `values`() @signature `Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;.values:()[Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f92c4.  v0:= `@@com.airbnb.lottie.model.content.ShapeStroke$LineJoinType.$VALUES` @type ^`com.airbnb.lottie.model.content.ShapeStroke$LineJoinType`[] @kind object;
  #L2f92c8.  call temp:= `clone`(v0) @signature `[Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2f92ce.  v0:= temp @kind object;
  #L2f92d0.  v0:= (`com.airbnb.lottie.model.content.ShapeStroke$LineJoinType`[]) v0 @kind object;
  #L2f92d4.  return v0 @kind object;
}
procedure `android.graphics.Paint$Join` `toPaintJoin`(`com.airbnb.lottie.model.content.ShapeStroke$LineJoinType` v2 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeStroke$LineJoinType;.toPaintJoin:()Landroid/graphics/Paint$Join;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f9258.  v0:= `@@com.airbnb.lottie.model.content.ShapeStroke$a.b` @type ^`int`[] @kind object;
  #L2f925c.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2f9262.  v1:= temp;
  #L2f9264.  v0:= v0[v1];
  #L2f9268.  v1:= 1I;
  #L2f926a.  if v0 == v1 then goto L2f928a;
  #L2f926e.  v1:= 2I;
  #L2f9270.  if v0 == v1 then goto L2f9284;
  #L2f9274.  v1:= 3I;
  #L2f9276.  if v0 == v1 then goto L2f927e;
  #L2f927a.  v0:= 0I;
  #L2f927c.  return v0 @kind object;
  #L2f927e.  v0:= `@@android.graphics.Paint$Join.ROUND` @type ^`android.graphics.Paint$Join` @kind object;
  #L2f9282.  return v0 @kind object;
  #L2f9284.  v0:= `@@android.graphics.Paint$Join.MITER` @type ^`android.graphics.Paint$Join` @kind object;
  #L2f9288.  return v0 @kind object;
  #L2f928a.  v0:= `@@android.graphics.Paint$Join.BEVEL` @type ^`android.graphics.Paint$Join` @kind object;
  #L2f928e.  return v0 @kind object;
}
