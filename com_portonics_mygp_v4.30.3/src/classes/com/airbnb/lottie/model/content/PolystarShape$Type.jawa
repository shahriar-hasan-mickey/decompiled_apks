record `com.airbnb.lottie.model.content.PolystarShape$Type` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `com.airbnb.lottie.model.content.PolystarShape$Type.value` @AccessFlag PRIVATE_FINAL;
}
global `com.airbnb.lottie.model.content.PolystarShape$Type`[] `@@com.airbnb.lottie.model.content.PolystarShape$Type.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.airbnb.lottie.model.content.PolystarShape$Type` `@@com.airbnb.lottie.model.content.PolystarShape$Type.POLYGON` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.PolystarShape$Type` `@@com.airbnb.lottie.model.content.PolystarShape$Type.STAR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2f856c.  v0:= new `com.airbnb.lottie.model.content.PolystarShape$Type`;
  #L2f8570.  v1:= "STAR" @kind object;
  #L2f8574.  v2:= 0I;
  #L2f8576.  v3:= 1I;
  #L2f8578.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2f857e.  `@@com.airbnb.lottie.model.content.PolystarShape$Type.STAR` @type ^`com.airbnb.lottie.model.content.PolystarShape$Type` := v0 @kind object;
  #L2f8582.  v1:= new `com.airbnb.lottie.model.content.PolystarShape$Type`;
  #L2f8586.  v4:= "POLYGON" @kind object;
  #L2f858a.  v5:= 2I;
  #L2f858c.  call `<init>`(v1, v4, v3, v5) @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2f8592.  `@@com.airbnb.lottie.model.content.PolystarShape$Type.POLYGON` @type ^`com.airbnb.lottie.model.content.PolystarShape$Type` := v1 @kind object;
  #L2f8596.  v4:= new `com.airbnb.lottie.model.content.PolystarShape$Type`[v5];
  #L2f859a.  v4[v2]:= v0 @kind object;
  #L2f859e.  v4[v3]:= v1 @kind object;
  #L2f85a2.  `@@com.airbnb.lottie.model.content.PolystarShape$Type.$VALUES` @type ^`com.airbnb.lottie.model.content.PolystarShape$Type`[] := v4 @kind object;
  #L2f85a6.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.content.PolystarShape$Type` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2f85b8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2f85be.  v0.`com.airbnb.lottie.model.content.PolystarShape$Type.value` @type ^`int` := v3;
  #L2f85c2.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.PolystarShape$Type` `forValue`(`int` v5 ) @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.forValue:(I)Lcom/airbnb/lottie/model/content/PolystarShape$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f84ec.  call temp:= `values`() @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.values:()[Lcom/airbnb/lottie/model/content/PolystarShape$Type;` @kind static;
  #L2f84f2.  v0:= temp @kind object;
  #L2f84f4.  v1:= length @variable v0;
  #L2f84f6.  v2:= 0I;
  #L2f84f8.  if v2 >= v1 then goto L2f8510;
  #L2f84fc.  v3:= v0[v2] @kind object;
  #L2f8500.  v4:= v3.`com.airbnb.lottie.model.content.PolystarShape$Type.value` @type ^`int`;
  #L2f8504.  if v4 != v5 then goto L2f850a;
  #L2f8508.  return v3 @kind object;
  #L2f850a.  v2:= v2 + 1;
  #L2f850e.  goto L2f84f8;
  #L2f8510.  v5:= 0I;
  #L2f8512.  return v5 @kind object;
}
procedure `com.airbnb.lottie.model.content.PolystarShape$Type` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.valueOf:(Ljava/lang/String;)Lcom/airbnb/lottie/model/content/PolystarShape$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f8524.  v0:= constclass @type ^`com.airbnb.lottie.model.content.PolystarShape$Type` @kind object;
  #L2f8528.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2f852e.  v1:= temp @kind object;
  #L2f8530.  v1:= (`com.airbnb.lottie.model.content.PolystarShape$Type`) v1 @kind object;
  #L2f8534.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.content.PolystarShape$Type`[] `values`() @signature `Lcom/airbnb/lottie/model/content/PolystarShape$Type;.values:()[Lcom/airbnb/lottie/model/content/PolystarShape$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f8548.  v0:= `@@com.airbnb.lottie.model.content.PolystarShape$Type.$VALUES` @type ^`com.airbnb.lottie.model.content.PolystarShape$Type`[] @kind object;
  #L2f854c.  call temp:= `clone`(v0) @signature `[Lcom/airbnb/lottie/model/content/PolystarShape$Type;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2f8552.  v0:= temp @kind object;
  #L2f8554.  v0:= (`com.airbnb.lottie.model.content.PolystarShape$Type`[]) v0 @kind object;
  #L2f8558.  return v0 @kind object;
}
