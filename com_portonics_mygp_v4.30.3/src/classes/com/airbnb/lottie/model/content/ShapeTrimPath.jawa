record `com.airbnb.lottie.model.content.ShapeTrimPath` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.model.content.c` @kind interface {
  `java.lang.String` `com.airbnb.lottie.model.content.ShapeTrimPath.a` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.model.content.ShapeTrimPath$Type` `com.airbnb.lottie.model.content.ShapeTrimPath.b` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.model.i.b` `com.airbnb.lottie.model.content.ShapeTrimPath.c` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.model.i.b` `com.airbnb.lottie.model.content.ShapeTrimPath.d` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.model.i.b` `com.airbnb.lottie.model.content.ShapeTrimPath.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.airbnb.lottie.model.content.ShapeTrimPath.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.content.ShapeTrimPath` v0 @kind this, `java.lang.String` v1 @kind object, `com.airbnb.lottie.model.content.ShapeTrimPath$Type` v2 @kind object, `com.airbnb.lottie.model.i.b` v3 @kind object, `com.airbnb.lottie.model.i.b` v4 @kind object, `com.airbnb.lottie.model.i.b` v5 @kind object, `boolean` v6 ) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.<init>:(Ljava/lang/String;Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;Lcom/airbnb/lottie/model/i/b;Lcom/airbnb/lottie/model/i/b;Lcom/airbnb/lottie/model/i/b;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f96cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f96d2.  v0.`com.airbnb.lottie.model.content.ShapeTrimPath.a` @type ^`java.lang.String` := v1 @kind object;
  #L2f96d6.  v0.`com.airbnb.lottie.model.content.ShapeTrimPath.b` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` := v2 @kind object;
  #L2f96da.  v0.`com.airbnb.lottie.model.content.ShapeTrimPath.c` @type ^`com.airbnb.lottie.model.i.b` := v3 @kind object;
  #L2f96de.  v0.`com.airbnb.lottie.model.content.ShapeTrimPath.d` @type ^`com.airbnb.lottie.model.i.b` := v4 @kind object;
  #L2f96e2.  v0.`com.airbnb.lottie.model.content.ShapeTrimPath.e` @type ^`com.airbnb.lottie.model.i.b` := v5 @kind object;
  #L2f96e6.  v0.`com.airbnb.lottie.model.content.ShapeTrimPath.f` @type ^`boolean` := v6 @kind boolean;
  #L2f96ea.  return @kind void;
}
procedure `com.airbnb.lottie.w0.b.e` `a`(`com.airbnb.lottie.model.content.ShapeTrimPath` v0 @kind this, `com.airbnb.lottie.LottieDrawable` v1 @kind object, `com.airbnb.lottie.model.layer.c` v2 @kind object) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.a:(Lcom/airbnb/lottie/LottieDrawable;Lcom/airbnb/lottie/model/layer/c;)Lcom/airbnb/lottie/w0/b/e;` @AccessFlag PUBLIC {
    temp;

  #L2f95cc.  v1:= new `com.airbnb.lottie.w0.b.y`;
  #L2f95d0.  call `<init>`(v1, v2, v0) @signature `Lcom/airbnb/lottie/w0/b/y;.<init>:(Lcom/airbnb/lottie/model/layer/c;Lcom/airbnb/lottie/model/content/ShapeTrimPath;)V` @kind direct;
  #L2f95d6.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.i.b` `b`(`com.airbnb.lottie.model.content.ShapeTrimPath` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.b:()Lcom/airbnb/lottie/model/i/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f95e8.  v0:= v1.`com.airbnb.lottie.model.content.ShapeTrimPath.d` @type ^`com.airbnb.lottie.model.i.b` @kind object;
  #L2f95ec.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`com.airbnb.lottie.model.content.ShapeTrimPath` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f9648.  v0:= v1.`com.airbnb.lottie.model.content.ShapeTrimPath.a` @type ^`java.lang.String` @kind object;
  #L2f964c.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.i.b` `d`(`com.airbnb.lottie.model.content.ShapeTrimPath` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.d:()Lcom/airbnb/lottie/model/i/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f9600.  v0:= v1.`com.airbnb.lottie.model.content.ShapeTrimPath.e` @type ^`com.airbnb.lottie.model.i.b` @kind object;
  #L2f9604.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.i.b` `e`(`com.airbnb.lottie.model.content.ShapeTrimPath` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.e:()Lcom/airbnb/lottie/model/i/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f9618.  v0:= v1.`com.airbnb.lottie.model.content.ShapeTrimPath.c` @type ^`com.airbnb.lottie.model.i.b` @kind object;
  #L2f961c.  return v0 @kind object;
}
procedure `com.airbnb.lottie.model.content.ShapeTrimPath$Type` `f`(`com.airbnb.lottie.model.content.ShapeTrimPath` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.f:()Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f9630.  v0:= v1.`com.airbnb.lottie.model.content.ShapeTrimPath.b` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` @kind object;
  #L2f9634.  return v0 @kind object;
}
procedure `boolean` `g`(`com.airbnb.lottie.model.content.ShapeTrimPath` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f95b4.  v0:= v1.`com.airbnb.lottie.model.content.ShapeTrimPath.f` @type ^`boolean` @kind boolean;
  #L2f95b8.  return v0;
}
procedure `java.lang.String` `toString`(`com.airbnb.lottie.model.content.ShapeTrimPath` v2 @kind this) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f9660.  v0:= new `java.lang.StringBuilder`;
  #L2f9664.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f966a.  v1:= "Trim Path: {start: " @kind object;
  #L2f966e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f9674.  v1:= v2.`com.airbnb.lottie.model.content.ShapeTrimPath.c` @type ^`com.airbnb.lottie.model.i.b` @kind object;
  #L2f9678.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f967e.  v1:= ", end: " @kind object;
  #L2f9682.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f9688.  v1:= v2.`com.airbnb.lottie.model.content.ShapeTrimPath.d` @type ^`com.airbnb.lottie.model.i.b` @kind object;
  #L2f968c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f9692.  v1:= ", offset: " @kind object;
  #L2f9696.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f969c.  v1:= v2.`com.airbnb.lottie.model.content.ShapeTrimPath.e` @type ^`com.airbnb.lottie.model.i.b` @kind object;
  #L2f96a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f96a6.  v1:= "}" @kind object;
  #L2f96aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f96b0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f96b6.  v0:= temp @kind object;
  #L2f96b8.  return v0 @kind object;
}
