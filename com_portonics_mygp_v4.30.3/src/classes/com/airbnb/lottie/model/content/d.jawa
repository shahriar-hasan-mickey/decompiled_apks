record `com.airbnb.lottie.model.content.d` @kind class @AccessFlag PUBLIC {
  `float`[] `com.airbnb.lottie.model.content.d.a` @AccessFlag PRIVATE_FINAL;
  `int`[] `com.airbnb.lottie.model.content.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.content.d` v0 @kind this, `float`[] v1 @kind object, `int`[] v2 @kind object) @signature `Lcom/airbnb/lottie/model/content/d;.<init>:([F[I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f7d04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f7d0a.  v0.`com.airbnb.lottie.model.content.d.a` @type ^`float`[] := v1 @kind object;
  #L2f7d0e.  v0.`com.airbnb.lottie.model.content.d.b` @type ^`int`[] := v2 @kind object;
  #L2f7d12.  return @kind void;
}
procedure `int`[] `a`(`com.airbnb.lottie.model.content.d` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/d;.a:()[I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f7cec.  v0:= v1.`com.airbnb.lottie.model.content.d.b` @type ^`int`[] @kind object;
  #L2f7cf0.  return v0 @kind object;
}
procedure `float`[] `b`(`com.airbnb.lottie.model.content.d` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/d;.b:()[F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f7cbc.  v0:= v1.`com.airbnb.lottie.model.content.d.a` @type ^`float`[] @kind object;
  #L2f7cc0.  return v0 @kind object;
}
procedure `int` `c`(`com.airbnb.lottie.model.content.d` v1 @kind this) @signature `Lcom/airbnb/lottie/model/content/d;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f7cd4.  v0:= v1.`com.airbnb.lottie.model.content.d.b` @type ^`int`[] @kind object;
  #L2f7cd8.  v0:= length @variable v0;
  #L2f7cda.  return v0;
}
procedure `void` `d`(`com.airbnb.lottie.model.content.d` v4 @kind this, `com.airbnb.lottie.model.content.d` v5 @kind object, `com.airbnb.lottie.model.content.d` v6 @kind object, `float` v7 ) @signature `Lcom/airbnb/lottie/model/content/d;.d:(Lcom/airbnb/lottie/model/content/d;Lcom/airbnb/lottie/model/content/d;F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f7d24.  v0:= v5.`com.airbnb.lottie.model.content.d.b` @type ^`int`[] @kind object;
  #L2f7d28.  v0:= length @variable v0;
  #L2f7d2a.  v1:= v6.`com.airbnb.lottie.model.content.d.b` @type ^`int`[] @kind object;
  #L2f7d2e.  v1:= length @variable v1;
  #L2f7d30.  if v0 != v1 then goto L2f7d88;
  #L2f7d34.  v0:= 0I;
  #L2f7d36.  v1:= v5.`com.airbnb.lottie.model.content.d.b` @type ^`int`[] @kind object;
  #L2f7d3a.  v1:= length @variable v1;
  #L2f7d3c.  if v0 >= v1 then goto L2f7d86;
  #L2f7d40.  v1:= v4.`com.airbnb.lottie.model.content.d.a` @type ^`float`[] @kind object;
  #L2f7d44.  v2:= v5.`com.airbnb.lottie.model.content.d.a` @type ^`float`[] @kind object;
  #L2f7d48.  v2:= v2[v0];
  #L2f7d4c.  v3:= v6.`com.airbnb.lottie.model.content.d.a` @type ^`float`[] @kind object;
  #L2f7d50.  v3:= v3[v0];
  #L2f7d54.  call temp:= `i`(v2, v3, v7) @signature `Lcom/airbnb/lottie/z0/g;.i:(FFF)F` @kind static;
  #L2f7d5a.  v2:= temp;
  #L2f7d5c.  v1[v0]:= v2;
  #L2f7d60.  v1:= v4.`com.airbnb.lottie.model.content.d.b` @type ^`int`[] @kind object;
  #L2f7d64.  v2:= v5.`com.airbnb.lottie.model.content.d.b` @type ^`int`[] @kind object;
  #L2f7d68.  v2:= v2[v0];
  #L2f7d6c.  v3:= v6.`com.airbnb.lottie.model.content.d.b` @type ^`int`[] @kind object;
  #L2f7d70.  v3:= v3[v0];
  #L2f7d74.  call temp:= `c`(v7, v2, v3) @signature `Lcom/airbnb/lottie/z0/b;.c:(FII)I` @kind static;
  #L2f7d7a.  v2:= temp;
  #L2f7d7c.  v1[v0]:= v2;
  #L2f7d80.  v0:= v0 + 1;
  #L2f7d84.  goto L2f7d36;
  #L2f7d86.  return @kind void;
  #L2f7d88.  v7:= new `java.lang.IllegalArgumentException`;
  #L2f7d8c.  v0:= new `java.lang.StringBuilder`;
  #L2f7d90.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f7d96.  v1:= "Cannot interpolate between gradients. Lengths vary (" @kind object;
  #L2f7d9a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f7da0.  v5:= v5.`com.airbnb.lottie.model.content.d.b` @type ^`int`[] @kind object;
  #L2f7da4.  v5:= length @variable v5;
  #L2f7da6.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f7dac.  v5:= " vs " @kind object;
  #L2f7db0.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f7db6.  v5:= v6.`com.airbnb.lottie.model.content.d.b` @type ^`int`[] @kind object;
  #L2f7dba.  v5:= length @variable v5;
  #L2f7dbc.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f7dc2.  v5:= ")" @kind object;
  #L2f7dc6.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f7dcc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f7dd2.  v5:= temp @kind object;
  #L2f7dd4.  call `<init>`(v7, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f7dda.  goto L2f7dde;
  #L2f7ddc.  throw v7;
  #L2f7dde.  goto L2f7ddc;
}
