record `com.airbnb.lottie.model.content.Mask$MaskMode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.airbnb.lottie.model.content.Mask$MaskMode`[] `@@com.airbnb.lottie.model.content.Mask$MaskMode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.airbnb.lottie.model.content.Mask$MaskMode` `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_ADD` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.Mask$MaskMode` `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_INTERSECT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.Mask$MaskMode` `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_NONE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.Mask$MaskMode` `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_SUBTRACT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2f81a0.  v0:= new `com.airbnb.lottie.model.content.Mask$MaskMode`;
  #L2f81a4.  v1:= "MASK_MODE_ADD" @kind object;
  #L2f81a8.  v2:= 0I;
  #L2f81aa.  call `<init>`(v0, v1, v2) @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2f81b0.  `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_ADD` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` := v0 @kind object;
  #L2f81b4.  v1:= new `com.airbnb.lottie.model.content.Mask$MaskMode`;
  #L2f81b8.  v3:= "MASK_MODE_SUBTRACT" @kind object;
  #L2f81bc.  v4:= 1I;
  #L2f81be.  call `<init>`(v1, v3, v4) @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2f81c4.  `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_SUBTRACT` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` := v1 @kind object;
  #L2f81c8.  v3:= new `com.airbnb.lottie.model.content.Mask$MaskMode`;
  #L2f81cc.  v5:= "MASK_MODE_INTERSECT" @kind object;
  #L2f81d0.  v6:= 2I;
  #L2f81d2.  call `<init>`(v3, v5, v6) @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2f81d8.  `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_INTERSECT` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` := v3 @kind object;
  #L2f81dc.  v5:= new `com.airbnb.lottie.model.content.Mask$MaskMode`;
  #L2f81e0.  v7:= "MASK_MODE_NONE" @kind object;
  #L2f81e4.  v8:= 3I;
  #L2f81e6.  call `<init>`(v5, v7, v8) @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2f81ec.  `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_NONE` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` := v5 @kind object;
  #L2f81f0.  v7:= 4I;
  #L2f81f2.  v7:= new `com.airbnb.lottie.model.content.Mask$MaskMode`[v7];
  #L2f81f6.  v7[v2]:= v0 @kind object;
  #L2f81fa.  v7[v4]:= v1 @kind object;
  #L2f81fe.  v7[v6]:= v3 @kind object;
  #L2f8202.  v7[v8]:= v5 @kind object;
  #L2f8206.  `@@com.airbnb.lottie.model.content.Mask$MaskMode.$VALUES` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode`[] := v7 @kind object;
  #L2f820a.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.content.Mask$MaskMode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2f821c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2f8222.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.Mask$MaskMode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.valueOf:(Ljava/lang/String;)Lcom/airbnb/lottie/model/content/Mask$MaskMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f8158.  v0:= constclass @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L2f815c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2f8162.  v1:= temp @kind object;
  #L2f8164.  v1:= (`com.airbnb.lottie.model.content.Mask$MaskMode`) v1 @kind object;
  #L2f8168.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.content.Mask$MaskMode`[] `values`() @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.values:()[Lcom/airbnb/lottie/model/content/Mask$MaskMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f817c.  v0:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.$VALUES` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode`[] @kind object;
  #L2f8180.  call temp:= `clone`(v0) @signature `[Lcom/airbnb/lottie/model/content/Mask$MaskMode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2f8186.  v0:= temp @kind object;
  #L2f8188.  v0:= (`com.airbnb.lottie.model.content.Mask$MaskMode`[]) v0 @kind object;
  #L2f818c.  return v0 @kind object;
}
