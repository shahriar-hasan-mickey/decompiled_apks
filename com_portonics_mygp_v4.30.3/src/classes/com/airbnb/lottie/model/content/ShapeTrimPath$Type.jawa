record `com.airbnb.lottie.model.content.ShapeTrimPath$Type` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.airbnb.lottie.model.content.ShapeTrimPath$Type`[] `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.airbnb.lottie.model.content.ShapeTrimPath$Type` `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.INDIVIDUALLY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.ShapeTrimPath$Type` `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.SIMULTANEOUSLY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f9550.  v0:= new `com.airbnb.lottie.model.content.ShapeTrimPath$Type`;
  #L2f9554.  v1:= "SIMULTANEOUSLY" @kind object;
  #L2f9558.  v2:= 0I;
  #L2f955a.  call `<init>`(v0, v1, v2) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2f9560.  `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.SIMULTANEOUSLY` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` := v0 @kind object;
  #L2f9564.  v1:= new `com.airbnb.lottie.model.content.ShapeTrimPath$Type`;
  #L2f9568.  v3:= "INDIVIDUALLY" @kind object;
  #L2f956c.  v4:= 1I;
  #L2f956e.  call `<init>`(v1, v3, v4) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2f9574.  `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.INDIVIDUALLY` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` := v1 @kind object;
  #L2f9578.  v3:= 2I;
  #L2f957a.  v3:= new `com.airbnb.lottie.model.content.ShapeTrimPath$Type`[v3];
  #L2f957e.  v3[v2]:= v0 @kind object;
  #L2f9582.  v3[v4]:= v1 @kind object;
  #L2f9586.  `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.$VALUES` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type`[] := v3 @kind object;
  #L2f958a.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.content.ShapeTrimPath$Type` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2f959c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2f95a2.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.ShapeTrimPath$Type` `forId`(`int` v3 ) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.forId:(I)Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2f94b0.  v0:= 1I;
  #L2f94b2.  if v3 == v0 then goto L2f94f0;
  #L2f94b6.  v0:= 2I;
  #L2f94b8.  if v3 != v0 then goto L2f94c2;
  #L2f94bc.  v3:= `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.INDIVIDUALLY` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` @kind object;
  #L2f94c0.  return v3 @kind object;
  #L2f94c2.  v0:= new `java.lang.IllegalArgumentException`;
  #L2f94c6.  v1:= new `java.lang.StringBuilder`;
  #L2f94ca.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f94d0.  v2:= "Unknown trim path type " @kind object;
  #L2f94d4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f94da.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f94e0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f94e6.  v3:= temp @kind object;
  #L2f94e8.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f94ee.  throw v0;
  #L2f94f0.  v3:= `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.SIMULTANEOUSLY` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` @kind object;
  #L2f94f4.  return v3 @kind object;
}
procedure `com.airbnb.lottie.model.content.ShapeTrimPath$Type` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.valueOf:(Ljava/lang/String;)Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f9508.  v0:= constclass @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` @kind object;
  #L2f950c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2f9512.  v1:= temp @kind object;
  #L2f9514.  v1:= (`com.airbnb.lottie.model.content.ShapeTrimPath$Type`) v1 @kind object;
  #L2f9518.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.content.ShapeTrimPath$Type`[] `values`() @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.values:()[Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f952c.  v0:= `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.$VALUES` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type`[] @kind object;
  #L2f9530.  call temp:= `clone`(v0) @signature `[Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2f9536.  v0:= temp @kind object;
  #L2f9538.  v0:= (`com.airbnb.lottie.model.content.ShapeTrimPath$Type`[]) v0 @kind object;
  #L2f953c.  return v0 @kind object;
}
