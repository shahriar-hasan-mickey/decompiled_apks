record `com.airbnb.lottie.model.DocumentData` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `com.airbnb.lottie.model.DocumentData.a` @AccessFlag PUBLIC;
  `java.lang.String` `com.airbnb.lottie.model.DocumentData.b` @AccessFlag PUBLIC;
  `float` `com.airbnb.lottie.model.DocumentData.c` @AccessFlag PUBLIC;
  `com.airbnb.lottie.model.DocumentData$Justification` `com.airbnb.lottie.model.DocumentData.d` @AccessFlag PUBLIC;
  `int` `com.airbnb.lottie.model.DocumentData.e` @AccessFlag PUBLIC;
  `float` `com.airbnb.lottie.model.DocumentData.f` @AccessFlag PUBLIC;
  `float` `com.airbnb.lottie.model.DocumentData.g` @AccessFlag PUBLIC;
  `int` `com.airbnb.lottie.model.DocumentData.h` @AccessFlag PUBLIC;
  `int` `com.airbnb.lottie.model.DocumentData.i` @AccessFlag PUBLIC;
  `float` `com.airbnb.lottie.model.DocumentData.j` @AccessFlag PUBLIC;
  `boolean` `com.airbnb.lottie.model.DocumentData.k` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.DocumentData` v0 @kind this) @signature `Lcom/airbnb/lottie/model/DocumentData;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f6a08.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f6a0e.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.DocumentData` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `float` v3 , `com.airbnb.lottie.model.DocumentData$Justification` v4 @kind object, `int` v5 , `float` v6 , `float` v7 , `int` v8 , `int` v9 , `float` v10 , `boolean` v11 ) @signature `Lcom/airbnb/lottie/model/DocumentData;.<init>:(Ljava/lang/String;Ljava/lang/String;FLcom/airbnb/lottie/model/DocumentData$Justification;IFFIIFZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f6a20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f6a26.  call `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lcom/airbnb/lottie/model/DocumentData;.a:(Ljava/lang/String;Ljava/lang/String;FLcom/airbnb/lottie/model/DocumentData$Justification;IFFIIFZ)V` @kind virtual;
  #L2f6a2c.  return @kind void;
}
procedure `void` `a`(`com.airbnb.lottie.model.DocumentData` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `float` v3 , `com.airbnb.lottie.model.DocumentData$Justification` v4 @kind object, `int` v5 , `float` v6 , `float` v7 , `int` v8 , `int` v9 , `float` v10 , `boolean` v11 ) @signature `Lcom/airbnb/lottie/model/DocumentData;.a:(Ljava/lang/String;Ljava/lang/String;FLcom/airbnb/lottie/model/DocumentData$Justification;IFFIIFZ)V` @AccessFlag PUBLIC {
    temp;

  #L2f6a40.  v0.`com.airbnb.lottie.model.DocumentData.a` @type ^`java.lang.String` := v1 @kind object;
  #L2f6a44.  v0.`com.airbnb.lottie.model.DocumentData.b` @type ^`java.lang.String` := v2 @kind object;
  #L2f6a48.  v0.`com.airbnb.lottie.model.DocumentData.c` @type ^`float` := v3;
  #L2f6a4c.  v0.`com.airbnb.lottie.model.DocumentData.d` @type ^`com.airbnb.lottie.model.DocumentData$Justification` := v4 @kind object;
  #L2f6a50.  v0.`com.airbnb.lottie.model.DocumentData.e` @type ^`int` := v5;
  #L2f6a54.  v0.`com.airbnb.lottie.model.DocumentData.f` @type ^`float` := v6;
  #L2f6a58.  v0.`com.airbnb.lottie.model.DocumentData.g` @type ^`float` := v7;
  #L2f6a5c.  v0.`com.airbnb.lottie.model.DocumentData.h` @type ^`int` := v8;
  #L2f6a60.  v0.`com.airbnb.lottie.model.DocumentData.i` @type ^`int` := v9;
  #L2f6a64.  v0.`com.airbnb.lottie.model.DocumentData.j` @type ^`float` := v10;
  #L2f6a68.  v0.`com.airbnb.lottie.model.DocumentData.k` @type ^`boolean` := v11 @kind boolean;
  #L2f6a6c.  return @kind void;
}
procedure `int` `hashCode`(`com.airbnb.lottie.model.DocumentData` v5 @kind this) @signature `Lcom/airbnb/lottie/model/DocumentData;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f6984.  v0:= v5.`com.airbnb.lottie.model.DocumentData.a` @type ^`java.lang.String` @kind object;
  #L2f6988.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2f698e.  v0:= temp;
  #L2f6990.  v0:= v0 * 31;
  #L2f6994.  v1:= v5.`com.airbnb.lottie.model.DocumentData.b` @type ^`java.lang.String` @kind object;
  #L2f6998.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2f699e.  v1:= temp;
  #L2f69a0.  v0:= v0 + v1 @kind int;
  #L2f69a2.  v0:= v0 * 31;
  #L2f69a6.  v0:= (`float`) v0 @kind i2f;
  #L2f69a8.  v1:= v5.`com.airbnb.lottie.model.DocumentData.c` @type ^`float`;
  #L2f69ac.  v0:= v0 + v1 @kind float;
  #L2f69ae.  v0:= (`int`) v0 @kind f2i;
  #L2f69b0.  v0:= v0 * 31;
  #L2f69b4.  v1:= v5.`com.airbnb.lottie.model.DocumentData.d` @type ^`com.airbnb.lottie.model.DocumentData$Justification` @kind object;
  #L2f69b8.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2f69be.  v1:= temp;
  #L2f69c0.  v0:= v0 + v1 @kind int;
  #L2f69c2.  v0:= v0 * 31;
  #L2f69c6.  v1:= v5.`com.airbnb.lottie.model.DocumentData.e` @type ^`int`;
  #L2f69ca.  v0:= v0 + v1 @kind int;
  #L2f69cc.  v1:= v5.`com.airbnb.lottie.model.DocumentData.f` @type ^`float`;
  #L2f69d0.  call temp:= `floatToRawIntBits`(v1) @signature `Ljava/lang/Float;.floatToRawIntBits:(F)I` @kind static;
  #L2f69d6.  v1:= temp;
  #L2f69d8.  v1:= (`long`) v1 @kind i2l;
  #L2f69da.  v0:= v0 * 31;
  #L2f69de.  v3:= 32I;
  #L2f69e2.  v3:= v1 ^>> v3 @kind long;
  #L2f69e6.  v1:= v1 ^~ v3 @kind long;
  #L2f69e8.  v2:= (`int`) v1 @kind l2i;
  #L2f69ea.  v0:= v0 + v2 @kind int;
  #L2f69ec.  v0:= v0 * 31;
  #L2f69f0.  v1:= v5.`com.airbnb.lottie.model.DocumentData.h` @type ^`int`;
  #L2f69f4.  v0:= v0 + v1 @kind int;
  #L2f69f6.  return v0;
}
