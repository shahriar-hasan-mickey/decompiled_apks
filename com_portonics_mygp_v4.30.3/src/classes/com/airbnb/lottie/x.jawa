record `com.airbnb.lottie.x` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `com.airbnb.lottie.o0` `com.airbnb.lottie.x.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.airbnb.lottie.x` v0 @kind this, `com.airbnb.lottie.o0` v1 @kind object) @signature `Lcom/airbnb/lottie/x;.<init>:(Lcom/airbnb/lottie/o0;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2e9ddc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e9de2.  v0.`com.airbnb.lottie.x.b` @type ^`com.airbnb.lottie.o0` := v1 @kind object;
  #L2e9de6.  return @kind void;
}
procedure `void` `run`(`com.airbnb.lottie.x` v1 @kind this) @signature `Lcom/airbnb/lottie/x;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e9df8.  v0:= v1.`com.airbnb.lottie.x.b` @type ^`com.airbnb.lottie.o0` @kind object;
  #L2e9dfc.  call `e`(v0) @signature `Lcom/airbnb/lottie/o0;.e:()V` @kind virtual;
  #L2e9e02.  return @kind void;
}
