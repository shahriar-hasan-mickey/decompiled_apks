record `com.airbnb.lottie.c` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.concurrent.Callable` @kind interface {
  `com.airbnb.lottie.LottieAnimationView` `com.airbnb.lottie.c.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `int` `com.airbnb.lottie.c.c` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.airbnb.lottie.c` v0 @kind this, `com.airbnb.lottie.LottieAnimationView` v1 @kind object, `int` v2 ) @signature `Lcom/airbnb/lottie/c;.<init>:(Lcom/airbnb/lottie/LottieAnimationView;I)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2e9880.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e9886.  v0.`com.airbnb.lottie.c.b` @type ^`com.airbnb.lottie.LottieAnimationView` := v1 @kind object;
  #L2e988a.  v0.`com.airbnb.lottie.c.c` @type ^`int` := v2;
  #L2e988e.  return @kind void;
}
procedure `java.lang.Object` `call`(`com.airbnb.lottie.c` v2 @kind this) @signature `Lcom/airbnb/lottie/c;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2e985c.  v0:= v2.`com.airbnb.lottie.c.b` @type ^`com.airbnb.lottie.LottieAnimationView` @kind object;
  #L2e9860.  v1:= v2.`com.airbnb.lottie.c.c` @type ^`int`;
  #L2e9864.  call temp:= `r`(v0, v1) @signature `Lcom/airbnb/lottie/LottieAnimationView;.r:(I)Lcom/airbnb/lottie/n0;` @kind virtual;
  #L2e986a.  v0:= temp @kind object;
  #L2e986c.  return v0 @kind object;
}
