record `com.airbnb.lottie.x0.b` @kind class @AccessFlag PUBLIC {
  `android.content.Context` `com.airbnb.lottie.x0.b.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.airbnb.lottie.x0.b.c` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.a0` `com.airbnb.lottie.x0.b.d` @AccessFlag PRIVATE;
  `java.util.Map` `com.airbnb.lottie.x0.b.e` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.Object` `@@com.airbnb.lottie.x0.b.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/x0/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f6630.  v0:= new `java.lang.Object`;
  #L2f6634.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f663a.  `@@com.airbnb.lottie.x0.b.a` @type ^`java.lang.Object` := v0 @kind object;
  #L2f663e.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.x0.b` v2 @kind this, `android.graphics.drawable.Drawable$Callback` v3 @kind object, `java.lang.String` v4 @kind object, `com.airbnb.lottie.a0` v5 @kind object, `java.util.Map` v6 @kind object) @signature `Lcom/airbnb/lottie/x0/b;.<init>:(Landroid/graphics/drawable/Drawable$Callback;Ljava/lang/String;Lcom/airbnb/lottie/a0;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2f6650.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f6656.  call temp:= `isEmpty`(v4) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2f665c.  v0:= temp;
  #L2f665e.  if v0 != 0 then goto L2f66a2;
  #L2f6662.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2f6668.  v0:= temp;
  #L2f666a.  v0:= v0 + -1;
  #L2f666e.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2f6674.  v0:= temp;
  #L2f6676.  v1:= 47I;
  #L2f667a.  if v0 == v1 then goto L2f66a2;
  #L2f667e.  v0:= new `java.lang.StringBuilder`;
  #L2f6682.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f6688.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f668e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f6694.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f669a.  v4:= temp @kind object;
  #L2f669c.  v2.`com.airbnb.lottie.x0.b.c` @type ^`java.lang.String` := v4 @kind object;
  #L2f66a0.  goto L2f66a6;
  #L2f66a2.  v2.`com.airbnb.lottie.x0.b.c` @type ^`java.lang.String` := v4 @kind object;
  #L2f66a6.  v4:= instanceof @variable v3 @type ^`android.view.View` @kind boolean;
  #L2f66aa.  if v4 != 0 then goto L2f66ce;
  #L2f66ae.  v3:= "LottieDrawable must be inside of a view for images to work." @kind object;
  #L2f66b2.  call `c`(v3) @signature `Lcom/airbnb/lottie/z0/d;.c:(Ljava/lang/String;)V` @kind static;
  #L2f66b8.  v3:= new `java.util.HashMap`;
  #L2f66bc.  call `<init>`(v3) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2f66c2.  v2.`com.airbnb.lottie.x0.b.e` @type ^`java.util.Map` := v3 @kind object;
  #L2f66c6.  v3:= 0I;
  #L2f66c8.  v2.`com.airbnb.lottie.x0.b.b` @type ^`android.content.Context` := v3 @kind object;
  #L2f66cc.  return @kind void;
  #L2f66ce.  v3:= (`android.view.View`) v3 @kind object;
  #L2f66d2.  call temp:= `getContext`(v3) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L2f66d8.  v3:= temp @kind object;
  #L2f66da.  v2.`com.airbnb.lottie.x0.b.b` @type ^`android.content.Context` := v3 @kind object;
  #L2f66de.  v2.`com.airbnb.lottie.x0.b.e` @type ^`java.util.Map` := v6 @kind object;
  #L2f66e2.  call `d`(v2, v5) @signature `Lcom/airbnb/lottie/x0/b;.d:(Lcom/airbnb/lottie/a0;)V` @kind virtual;
  #L2f66e8.  return @kind void;
}
procedure `android.graphics.Bitmap` `c`(`com.airbnb.lottie.x0.b` v2 @kind this, `java.lang.String` v3 @kind object, `android.graphics.Bitmap` v4 @kind object) @signature `Lcom/airbnb/lottie/x0/b;.c:(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2f65b8.  v0:= `@@com.airbnb.lottie.x0.b.a` @type ^`java.lang.Object` @kind object;
  #L2f65bc.  @monitorenter v0
  #L2f65be.  v1:= v2.`com.airbnb.lottie.x0.b.e` @type ^`java.util.Map` @kind object;
  #L2f65c2.  call temp:= `get`(v1, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2f65c8.  v3:= temp @kind object;
  #L2f65ca.  v3:= (`com.airbnb.lottie.i0`) v3 @kind object;
  #L2f65ce.  call `f`(v3, v4) @signature `Lcom/airbnb/lottie/i0;.f:(Landroid/graphics/Bitmap;)V` @kind virtual;
  #L2f65d4.  @monitorexit v0
  #L2f65d6.  return v4 @kind object;
  #L2f65d8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2f65da.  @monitorexit v0
  #L2f65dc.  throw v3;
  catch `java.lang.Throwable` @[L2f65be..L2f65dc] goto L2f65d8;
}
procedure `android.graphics.Bitmap` `a`(`com.airbnb.lottie.x0.b` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lcom/airbnb/lottie/x0/b;.a:(Ljava/lang/String;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2f6418.  v0:= v7.`com.airbnb.lottie.x0.b.e` @type ^`java.util.Map` @kind object;
  #L2f641c.  call temp:= `get`(v0, v8) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2f6422.  v0:= temp @kind object;
  #L2f6424.  v0:= (`com.airbnb.lottie.i0`) v0 @kind object;
  #L2f6428.  v1:= 0I;
  #L2f642a.  if v0 != 0 then goto L2f6430;
  #L2f642e.  return v1 @kind object;
  #L2f6430.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/i0;.a:()Landroid/graphics/Bitmap;` @kind virtual;
  #L2f6436.  v2:= temp @kind object;
  #L2f6438.  if v2 == 0 then goto L2f643e;
  #L2f643c.  return v2 @kind object;
  #L2f643e.  v2:= v7.`com.airbnb.lottie.x0.b.d` @type ^`com.airbnb.lottie.a0` @kind object;
  #L2f6442.  if v2 == 0 then goto L2f645a;
  #L2f6446.  call temp:= `a`(v2, v0) @signature `Lcom/airbnb/lottie/a0;.a:(Lcom/airbnb/lottie/i0;)Landroid/graphics/Bitmap;` @kind interface;
  #L2f644c.  v0:= temp @kind object;
  #L2f644e.  if v0 == 0 then goto L2f6458;
  #L2f6452.  call temp:= `c`(v7, v8, v0) @signature `Lcom/airbnb/lottie/x0/b;.c:(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @kind direct;
  #L2f6458.  return v0 @kind object;
  #L2f645a.  call temp:= `b`(v0) @signature `Lcom/airbnb/lottie/i0;.b:()Ljava/lang/String;` @kind virtual;
  #L2f6460.  v2:= temp @kind object;
  #L2f6462.  v3:= new `android.graphics.BitmapFactory$Options`;
  #L2f6466.  call `<init>`(v3) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L2f646c.  v4:= 1I;
  #L2f646e.  v3.`android.graphics.BitmapFactory$Options.inScaled` @type ^`boolean` := v4 @kind boolean;
  #L2f6472.  v5:= 160I;
  #L2f6476.  v3.`android.graphics.BitmapFactory$Options.inDensity` @type ^`int` := v5;
  #L2f647a.  v5:= "data:" @kind object;
  #L2f647e.  call temp:= `startsWith`(v2, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2f6484.  v5:= temp;
  #L2f6486.  if v5 == 0 then goto L2f64dc;
  #L2f648a.  v5:= "base64," @kind object;
  #L2f648e.  call temp:= `indexOf`(v2, v5) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L2f6494.  v5:= temp;
  #L2f6496.  if v5 <= 0 then goto L2f64dc;
  #L2f649a.  v0:= 44I;
  #L2f649e.  call temp:= `indexOf`(v2, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L2f64a4.  v0:= temp;
  #L2f64a6.  v0:= v0 + v4 @kind int;
  #L2f64a8.  call temp:= `substring`(v2, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2f64ae.  v0:= temp @kind object;
  #L2f64b0.  v2:= 0I;
  #L2f64b2.  call temp:= `decode`(v0, v2) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L2f64b8.  v0:= temp @kind object;
  #L2f64ba.  v1:= length @variable v0;
  #L2f64bc.  call temp:= `decodeByteArray`(v0, v2, v1, v3) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2f64c2.  v0:= temp @kind object;
  #L2f64c4.  call temp:= `c`(v7, v8, v0) @signature `Lcom/airbnb/lottie/x0/b;.c:(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @kind direct;
  #L2f64ca.  v8:= temp @kind object;
  #L2f64cc.  return v8 @kind object;
  #L2f64ce.  v8:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L2f64d0.  v0:= "data URL did not have correct base64 format." @kind object;
  #L2f64d4.  call `d`(v0, v8) @signature `Lcom/airbnb/lottie/z0/d;.d:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L2f64da.  return v1 @kind object;
  #L2f64dc.  v4:= v7.`com.airbnb.lottie.x0.b.c` @type ^`java.lang.String` @kind object;
  #L2f64e0.  call temp:= `isEmpty`(v4) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2f64e6.  v4:= temp;
  #L2f64e8.  if v4 != 0 then goto L2f655a;
  #L2f64ec.  v4:= v7.`com.airbnb.lottie.x0.b.b` @type ^`android.content.Context` @kind object;
  #L2f64f0.  call temp:= `getAssets`(v4) @signature `Landroid/content/Context;.getAssets:()Landroid/content/res/AssetManager;` @kind virtual;
  #L2f64f6.  v4:= temp @kind object;
  #L2f64f8.  v5:= new `java.lang.StringBuilder`;
  #L2f64fc.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f6502.  v6:= v7.`com.airbnb.lottie.x0.b.c` @type ^`java.lang.String` @kind object;
  #L2f6506.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f650c.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f6512.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f6518.  v2:= temp @kind object;
  #L2f651a.  call temp:= `open`(v4, v2) @signature `Landroid/content/res/AssetManager;.open:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L2f6520.  v2:= temp @kind object;
  #L2f6522.  call temp:= `decodeStream`(v2, v1, v3) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2f6528.  v1:= temp @kind object;
  #L2f652a.  call temp:= `e`(v0) @signature `Lcom/airbnb/lottie/i0;.e:()I` @kind virtual;
  #L2f6530.  v2:= temp;
  #L2f6532.  call temp:= `c`(v0) @signature `Lcom/airbnb/lottie/i0;.c:()I` @kind virtual;
  #L2f6538.  v0:= temp;
  #L2f653a.  call temp:= `l`(v1, v2, v0) @signature `Lcom/airbnb/lottie/z0/l;.l:(Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @kind static;
  #L2f6540.  v0:= temp @kind object;
  #L2f6542.  call temp:= `c`(v7, v8, v0) @signature `Lcom/airbnb/lottie/x0/b;.c:(Ljava/lang/String;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @kind direct;
  #L2f6548.  v8:= temp @kind object;
  #L2f654a.  return v8 @kind object;
  #L2f654c.  v8:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L2f654e.  v0:= "Unable to decode image." @kind object;
  #L2f6552.  call `d`(v0, v8) @signature `Lcom/airbnb/lottie/z0/d;.d:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L2f6558.  return v1 @kind object;
  #L2f655a.  v8:= new `java.lang.IllegalStateException`;
  #L2f655e.  v0:= "You must set an images folder before loading an image. Set it with LottieComposition#setImagesFolder or LottieDrawable#setImagesFolder" @kind object;
  #L2f6562.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f6568.  throw v8;
  #L2f656a.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L2f656c.  v0:= "Unable to open asset." @kind object;
  #L2f6570.  call `d`(v0, v8) @signature `Lcom/airbnb/lottie/z0/d;.d:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L2f6576.  return v1 @kind object;
  catch `java.lang.IllegalArgumentException` @[L2f649e..L2f64ba] goto L2f64ce;
  catch `java.io.IOException` @[L2f64dc..L2f6522] goto L2f656a;
  catch `java.lang.IllegalArgumentException` @[L2f6522..L2f652a] goto L2f654c;
  catch `java.io.IOException` @[L2f655a..L2f656a] goto L2f656a;
}
procedure `boolean` `b`(`com.airbnb.lottie.x0.b` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/airbnb/lottie/x0/b;.b:(Landroid/content/Context;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f65fc.  if v2 != 0 then goto L2f6608;
  #L2f6600.  v0:= v1.`com.airbnb.lottie.x0.b.b` @type ^`android.content.Context` @kind object;
  #L2f6604.  if v0 == 0 then goto L2f6618;
  #L2f6608.  v0:= v1.`com.airbnb.lottie.x0.b.b` @type ^`android.content.Context` @kind object;
  #L2f660c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f6612.  v2:= temp;
  #L2f6614.  if v2 == 0 then goto L2f661c;
  #L2f6618.  v2:= 1I;
  #L2f661a.  goto L2f661e;
  #L2f661c.  v2:= 0I;
  #L2f661e.  return v2;
}
procedure `void` `d`(`com.airbnb.lottie.x0.b` v0 @kind this, `com.airbnb.lottie.a0` v1 @kind object) @signature `Lcom/airbnb/lottie/x0/b;.d:(Lcom/airbnb/lottie/a0;)V` @AccessFlag PUBLIC {
    temp;

  #L2f66fc.  v0.`com.airbnb.lottie.x0.b.d` @type ^`com.airbnb.lottie.a0` := v1 @kind object;
  #L2f6700.  return @kind void;
}
