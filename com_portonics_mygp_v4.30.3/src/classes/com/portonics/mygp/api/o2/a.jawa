record `com.portonics.mygp.api.o2.a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.portonics.mygp.api.o2.a` `@@com.portonics.mygp.api.o2.a.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.concurrent.TimeUnit` `@@com.portonics.mygp.api.o2.a.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/portonics/mygp/api/o2/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4b64a8.  v0:= new `com.portonics.mygp.api.o2.a`;
  #L4b64ac.  call `<init>`(v0) @signature `Lcom/portonics/mygp/api/o2/a;.<init>:()V` @kind direct;
  #L4b64b2.  `@@com.portonics.mygp.api.o2.a.a` @type ^`com.portonics.mygp.api.o2.a` := v0 @kind object;
  #L4b64b6.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4b64ba.  `@@com.portonics.mygp.api.o2.a.b` @type ^`java.util.concurrent.TimeUnit` := v0 @kind object;
  #L4b64be.  return @kind void;
}
procedure `void` `<init>`(`com.portonics.mygp.api.o2.a` v0 @kind this) @signature `Lcom/portonics/mygp/api/o2/a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4b64d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b64d6.  return @kind void;
}
procedure `void` `a`(`com.portonics.mygp.api.o2.a` v3 @kind this, `okhttp3.OkHttpClient$Builder` v4 @kind object) @signature `Lcom/portonics/mygp/api/o2/a;.a:(Lokhttp3/OkHttpClient$Builder;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4b64e8.  v0:= `@@com.portonics.mygp.api.o2.a.b` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4b64ec.  v1:= 5L;
  #L4b64f0.  call temp:= `connectTimeout`(v4, v1, v0) @signature `Lokhttp3/OkHttpClient$Builder;.connectTimeout:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L4b64f6.  v1:= 10L;
  #L4b64fa.  call temp:= `writeTimeout`(v4, v1, v0) @signature `Lokhttp3/OkHttpClient$Builder;.writeTimeout:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L4b6500.  v1:= 20L;
  #L4b6504.  call temp:= `readTimeout`(v4, v1, v0) @signature `Lokhttp3/OkHttpClient$Builder;.readTimeout:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L4b650a.  return @kind void;
}
procedure `okhttp3.OkHttpClient` `b`(`java.util.List` v2 @kind object, `okhttp3.Cache` v3 @kind object, `boolean` v4 ) @signature `Lcom/portonics/mygp/api/o2/a;.b:(Ljava/util/List;Lokhttp3/Cache;Z)Lokhttp3/OkHttpClient;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L4b642c.  v0:= "interceptors" @kind object;
  #L4b6430.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4b6436.  v0:= new `okhttp3.OkHttpClient$Builder`;
  #L4b643a.  call `<init>`(v0) @signature `Lokhttp3/OkHttpClient$Builder;.<init>:()V` @kind direct;
  #L4b6440.  v1:= `@@com.portonics.mygp.api.o2.a.a` @type ^`com.portonics.mygp.api.o2.a` @kind object;
  #L4b6444.  call `a`(v1, v0) @signature `Lcom/portonics/mygp/api/o2/a;.a:(Lokhttp3/OkHttpClient$Builder;)V` @kind direct;
  #L4b644a.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b6450.  v2:= temp @kind object;
  #L4b6452.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b6458.  v1:= temp;
  #L4b645a.  if v1 == 0 then goto L4b6472;
  #L4b645e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b6464.  v1:= temp @kind object;
  #L4b6466.  v1:= (`okhttp3.Interceptor`) v1 @kind object;
  #L4b646a.  call temp:= `addInterceptor`(v0, v1) @signature `Lokhttp3/OkHttpClient$Builder;.addInterceptor:(Lokhttp3/Interceptor;)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L4b6470.  goto L4b6452;
  #L4b6472.  if v3 == 0 then goto L4b647c;
  #L4b6476.  call temp:= `cache`(v0, v3) @signature `Lokhttp3/OkHttpClient$Builder;.cache:(Lokhttp3/Cache;)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L4b647c.  call temp:= `retryOnConnectionFailure`(v0, v4) @signature `Lokhttp3/OkHttpClient$Builder;.retryOnConnectionFailure:(Z)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L4b6482.  call temp:= `build`(v0) @signature `Lokhttp3/OkHttpClient$Builder;.build:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L4b6488.  v2:= temp @kind object;
  #L4b648a.  v3:= "builder.build()" @kind object;
  #L4b648e.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4b6494.  return v2 @kind object;
}
