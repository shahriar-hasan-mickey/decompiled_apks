record `com.google.android.datatransport.runtime.dagger.internal.d` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `a`(`java.lang.Object` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/d;.a:(Ljava/lang/Object;Ljava/lang/Class;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4285c8.  if v1 == 0 then goto L4285ce;
  #L4285cc.  return @kind void;
  #L4285ce.  v1:= new `java.lang.IllegalStateException`;
  #L4285d2.  v0:= new `java.lang.StringBuilder`;
  #L4285d6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4285dc.  call temp:= `getCanonicalName`(v2) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L4285e2.  v2:= temp @kind object;
  #L4285e4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4285ea.  v2:= " must be set" @kind object;
  #L4285ee.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4285f4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4285fa.  v2:= temp @kind object;
  #L4285fc.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L428602.  throw v1;
}
procedure `java.lang.Object` `b`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/d;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L428598.  call temp:= `requireNonNull`(v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L42859e.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/dagger/internal/d;.c:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4285b0.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4285b6.  return v0 @kind object;
}
