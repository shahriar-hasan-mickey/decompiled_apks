record `com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException` @kind class @AccessFlag PUBLIC extends `java.lang.Exception` @kind class {
}
procedure `void` `<init>`(`com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil$DecoderQueryException;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L489cf8.  v0:= "Failed to query underlying media codecs" @kind object;
  #L489cfc.  call `<init>`(v1, v0, v2) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L489d02.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException` v0 @kind this, `java.lang.Throwable` v1 @kind object, `com.google.android.exoplayer2.mediacodec.MediaCodecUtil$a` v2 @kind object) @signature `Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil$DecoderQueryException;.<init>:(Ljava/lang/Throwable;Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L489d14.  call `<init>`(v0, v1) @signature `Lcom/google/android/exoplayer2/mediacodec/MediaCodecUtil$DecoderQueryException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L489d1a.  return @kind void;
}
