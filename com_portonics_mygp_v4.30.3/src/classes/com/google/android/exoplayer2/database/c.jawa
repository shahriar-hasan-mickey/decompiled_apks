record `com.google.android.exoplayer2.database.c` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<clinit>`() @signature `Lcom/google/android/exoplayer2/database/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L456cac.  v0:= "goog.exo.database" @kind object;
  #L456cb0.  call `a`(v0) @signature `Lcom/google/android/exoplayer2/w2;.a:(Ljava/lang/String;)V` @kind static;
  #L456cb6.  return @kind void;
}
procedure `java.lang.String`[] `a`(`int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/google/android/exoplayer2/database/c;.a:(ILjava/lang/String;)[Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L456c80.  v0:= 2I;
  #L456c82.  v0:= new `java.lang.String`[v0];
  #L456c86.  call temp:= `toString`(v2) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L456c8c.  v2:= temp @kind object;
  #L456c8e.  v1:= 0I;
  #L456c90.  v0[v1]:= v2 @kind object;
  #L456c94.  v2:= 1I;
  #L456c96.  v0[v2]:= v3 @kind object;
  #L456c9a.  return v0 @kind object;
}
procedure `int` `b`(`android.database.sqlite.SQLiteDatabase` v10 @kind object, `int` v11 , `java.lang.String` v12 @kind object) @signature `Lcom/google/android/exoplayer2/database/c;.b:(Landroid/database/sqlite/SQLiteDatabase;ILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L456b98.  v0:= "ExoPlayerVersions" @kind object;
  #L456b9c.  call temp:= `a1`(v10, v0) @signature `Lcom/google/android/exoplayer2/util/n1;.a1:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Z` @kind static;
  #L456ba2.  v0:= temp;
  #L456ba4.  v1:= -1I;
  #L456ba6.  if v0 != 0 then goto L456bac;
  #L456baa.  return v1;
  #L456bac.  v3:= "ExoPlayerVersions" @kind object;
  #L456bb0.  v0:= "version" @kind object;
  #L456bb4.  temp:= new `java.lang.String`[v0];
  #L456bba.  v4:= temp @kind object;
  #L456bbc.  v5:= "feature = ? AND instance_uid = ?" @kind object;
  #L456bc0.  call temp:= `a`(v11, v12) @signature `Lcom/google/android/exoplayer2/database/c;.a:(ILjava/lang/String;)[Ljava/lang/String;` @kind static;
  #L456bc6.  v6:= temp @kind object;
  #L456bc8.  v7:= 0I;
  #L456bca.  v8:= 0I;
  #L456bcc.  v9:= 0I;
  #L456bce.  v2:= v10 @kind object;
  #L456bd0.  call temp:= `query`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Landroid/database/sqlite/SQLiteDatabase;.query:(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L456bd6.  v10:= temp @kind object;
  #L456bd8.  call temp:= `getCount`(v10) @signature `Landroid/database/Cursor;.getCount:()I` @kind interface;
  #L456bde.  v11:= temp;
  #L456be0.  if v11 != 0 then goto L456bec;
  #L456be4.  call `close`(v10) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L456bea.  return v1;
  #L456bec.  call temp:= `moveToNext`(v10) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L456bf2.  v11:= 0I;
  #L456bf4.  call temp:= `getInt`(v10, v11) @signature `Landroid/database/Cursor;.getInt:(I)I` @kind interface;
  #L456bfa.  v11:= temp;
  #L456bfc.  call `close`(v10) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L456c02.  return v11;
  #L456c04.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L456c06.  if v10 == 0 then goto L456c1a;
  #L456c0a.  call `close`(v10) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L456c10.  goto L456c1a;
  #L456c12.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L456c14.  call `addSuppressed`(v11, v10) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L456c1a.  throw v11;
  #L456c1c.  v10:= Exception @type ^`android.database.SQLException` @kind object;
  #L456c1e.  v11:= new `com.google.android.exoplayer2.database.DatabaseIOException`;
  #L456c22.  call `<init>`(v11, v10) @signature `Lcom/google/android/exoplayer2/database/DatabaseIOException;.<init>:(Landroid/database/SQLException;)V` @kind direct;
  #L456c28.  throw v11;
  catch `android.database.SQLException` @[L456b98..L456bd8] goto L456c1c;
  catch `java.lang.Throwable` @[L456bd8..L456be0] goto L456c04;
  catch `android.database.SQLException` @[L456be4..L456bea] goto L456c1c;
  catch `java.lang.Throwable` @[L456bec..L456bfc] goto L456c04;
  catch `android.database.SQLException` @[L456bfc..L456c02] goto L456c1c;
  catch `java.lang.Throwable` @[L456c0a..L456c10] goto L456c12;
  catch `android.database.SQLException` @[L456c14..L456c1c] goto L456c1c;
}
procedure `void` `c`(`android.database.sqlite.SQLiteDatabase` v2 @kind object, `int` v3 , `java.lang.String` v4 @kind object) @signature `Lcom/google/android/exoplayer2/database/c;.c:(Landroid/database/sqlite/SQLiteDatabase;ILjava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L456cc8.  v0:= "ExoPlayerVersions" @kind object;
  #L456ccc.  call temp:= `a1`(v2, v0) @signature `Lcom/google/android/exoplayer2/util/n1;.a1:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Z` @kind static;
  #L456cd2.  v1:= temp;
  #L456cd4.  if v1 != 0 then goto L456cda;
  #L456cd8.  return @kind void;
  #L456cda.  v1:= "feature = ? AND instance_uid = ?" @kind object;
  #L456cde.  call temp:= `a`(v3, v4) @signature `Lcom/google/android/exoplayer2/database/c;.a:(ILjava/lang/String;)[Ljava/lang/String;` @kind static;
  #L456ce4.  v3:= temp @kind object;
  #L456ce6.  call temp:= `delete`(v2, v0, v1, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.delete:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I` @kind virtual;
  #L456cec.  return @kind void;
  #L456cee.  v2:= Exception @type ^`android.database.SQLException` @kind object;
  #L456cf0.  v3:= new `com.google.android.exoplayer2.database.DatabaseIOException`;
  #L456cf4.  call `<init>`(v3, v2) @signature `Lcom/google/android/exoplayer2/database/DatabaseIOException;.<init>:(Landroid/database/SQLException;)V` @kind direct;
  #L456cfa.  throw v3;
  catch `android.database.SQLException` @[L456ccc..L456cec] goto L456cee;
}
procedure `void` `d`(`android.database.sqlite.SQLiteDatabase` v2 @kind object, `int` v3 , `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lcom/google/android/exoplayer2/database/c;.d:(Landroid/database/sqlite/SQLiteDatabase;ILjava/lang/String;I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L456d1c.  v0:= "CREATE TABLE IF NOT EXISTS ExoPlayerVersions (feature INTEGER NOT NULL,instance_uid TEXT NOT NULL,version INTEGER NOT NULL,PRIMARY KEY (feature, instance_uid))" @kind object;
  #L456d20.  call `execSQL`(v2, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L456d26.  v0:= new `android.content.ContentValues`;
  #L456d2a.  call `<init>`(v0) @signature `Landroid/content/ContentValues;.<init>:()V` @kind direct;
  #L456d30.  v1:= "feature" @kind object;
  #L456d34.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L456d3a.  v3:= temp @kind object;
  #L456d3c.  call `put`(v0, v1, v3) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Integer;)V` @kind virtual;
  #L456d42.  v3:= "instance_uid" @kind object;
  #L456d46.  call `put`(v0, v3, v4) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L456d4c.  v3:= "version" @kind object;
  #L456d50.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L456d56.  v4:= temp @kind object;
  #L456d58.  call `put`(v0, v3, v4) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/Integer;)V` @kind virtual;
  #L456d5e.  v3:= "ExoPlayerVersions" @kind object;
  #L456d62.  v4:= 0I;
  #L456d64.  call temp:= `replaceOrThrow`(v2, v3, v4, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.replaceOrThrow:(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J` @kind virtual;
  #L456d6a.  return @kind void;
  #L456d6c.  v2:= Exception @type ^`android.database.SQLException` @kind object;
  #L456d6e.  v3:= new `com.google.android.exoplayer2.database.DatabaseIOException`;
  #L456d72.  call `<init>`(v3, v2) @signature `Lcom/google/android/exoplayer2/database/DatabaseIOException;.<init>:(Landroid/database/SQLException;)V` @kind direct;
  #L456d78.  throw v3;
  catch `android.database.SQLException` @[L456d1c..L456d6a] goto L456d6c;
}
