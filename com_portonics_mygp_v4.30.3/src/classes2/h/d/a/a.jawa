record `h.d.a.a` @kind class @AccessFlag PUBLIC extends `h.d.a.b` @kind interface {
  `java.lang.String` `h.d.a.a.b` @AccessFlag PRIVATE;
  `java.lang.String` `h.d.a.a.c` @AccessFlag PRIVATE;
  `java.util.List` `h.d.a.a.d` @AccessFlag PRIVATE;
  `java.util.Date` `h.d.a.a.e` @AccessFlag PRIVATE;
  `java.util.Date` `h.d.a.a.f` @AccessFlag PRIVATE;
  `java.util.Date` `h.d.a.a.g` @AccessFlag PRIVATE;
  `java.lang.String` `h.d.a.a.h` @AccessFlag PRIVATE;
  `java.util.Map` `h.d.a.a.i` @AccessFlag PRIVATE;
}
global `java.util.Set` `@@h.d.a.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh/d/a/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L473c38.  v0:= new `java.util.HashSet`;
  #L473c3c.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L473c42.  v1:= "iss" @kind object;
  #L473c46.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L473c4c.  v1:= "sub" @kind object;
  #L473c50.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L473c56.  v1:= "aud" @kind object;
  #L473c5a.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L473c60.  v1:= "exp" @kind object;
  #L473c64.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L473c6a.  v1:= "nbf" @kind object;
  #L473c6e.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L473c74.  v1:= "iat" @kind object;
  #L473c78.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L473c7e.  v1:= "jti" @kind object;
  #L473c82.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L473c88.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L473c8e.  v0:= temp @kind object;
  #L473c90.  `@@h.d.a.a.a` @type ^`java.util.Set` := v0 @kind object;
  #L473c94.  return @kind void;
}
procedure `void` `<init>`(`h.d.a.a` v1 @kind this) @signature `Lh/d/a/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L473ca8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L473cae.  v0:= 0I;
  #L473cb0.  v1.`h.d.a.a.b` @type ^`java.lang.String` := v0 @kind object;
  #L473cb4.  v1.`h.d.a.a.c` @type ^`java.lang.String` := v0 @kind object;
  #L473cb8.  v1.`h.d.a.a.d` @type ^`java.util.List` := v0 @kind object;
  #L473cbc.  v1.`h.d.a.a.e` @type ^`java.util.Date` := v0 @kind object;
  #L473cc0.  v1.`h.d.a.a.f` @type ^`java.util.Date` := v0 @kind object;
  #L473cc4.  v1.`h.d.a.a.g` @type ^`java.util.Date` := v0 @kind object;
  #L473cc8.  v1.`h.d.a.a.h` @type ^`java.lang.String` := v0 @kind object;
  #L473ccc.  v0:= new `java.util.LinkedHashMap`;
  #L473cd0.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L473cd6.  v1.`h.d.a.a.i` @type ^`java.util.Map` := v0 @kind object;
  #L473cda.  return @kind void;
}
procedure `java.util.Set` `d`() @signature `Lh/d/a/a;.d:()Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L473c20.  v0:= `@@h.d.a.a.a` @type ^`java.util.Set` @kind object;
  #L473c24.  return v0 @kind object;
}
procedure `h.d.a.a` `e`(`net.minidev.json.JSONObject` v7 @kind object) @signature `Lh/d/a/a;.e:(Lnet/minidev/json/JSONObject;)Lh/d/a/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47395c.  v0:= new `h.d.a.a`;
  #L473960.  call `<init>`(v0) @signature `Lh/d/a/a;.<init>:()V` @kind direct;
  #L473966.  call temp:= `keySet`(v7) @signature `Ljava/util/HashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L47396c.  v1:= temp @kind object;
  #L47396e.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L473974.  v1:= temp @kind object;
  #L473976.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L47397c.  v2:= temp;
  #L47397e.  if v2 == 0 then goto L473aec;
  #L473982.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L473988.  v2:= temp @kind object;
  #L47398a.  v2:= (`java.lang.String`) v2 @kind object;
  #L47398e.  v3:= "iss" @kind object;
  #L473992.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L473998.  v4:= temp;
  #L47399a.  if v4 == 0 then goto L4739ae;
  #L47399e.  call temp:= `e`(v7, v3) @signature `Lcom/nimbusds/jose/j/d;.e:(Lnet/minidev/json/JSONObject;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4739a4.  v2:= temp @kind object;
  #L4739a6.  call `j`(v0, v2) @signature `Lh/d/a/a;.j:(Ljava/lang/String;)V` @kind virtual;
  #L4739ac.  goto L473976;
  #L4739ae.  v3:= "sub" @kind object;
  #L4739b2.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4739b8.  v4:= temp;
  #L4739ba.  if v4 == 0 then goto L4739ce;
  #L4739be.  call temp:= `e`(v7, v3) @signature `Lcom/nimbusds/jose/j/d;.e:(Lnet/minidev/json/JSONObject;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4739c4.  v2:= temp @kind object;
  #L4739c6.  call `m`(v0, v2) @signature `Lh/d/a/a;.m:(Ljava/lang/String;)V` @kind virtual;
  #L4739cc.  goto L473976;
  #L4739ce.  v3:= "aud" @kind object;
  #L4739d2.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4739d8.  v4:= temp;
  #L4739da.  if v4 == 0 then goto L473a26;
  #L4739de.  call temp:= `get`(v7, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4739e4.  v2:= temp @kind object;
  #L4739e6.  v4:= instanceof @variable v2 @type ^`java.lang.String` @kind boolean;
  #L4739ea.  if v4 == 0 then goto L473a0e;
  #L4739ee.  v2:= new `java.util.ArrayList`;
  #L4739f2.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4739f8.  call temp:= `e`(v7, v3) @signature `Lcom/nimbusds/jose/j/d;.e:(Lnet/minidev/json/JSONObject;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4739fe.  v3:= temp @kind object;
  #L473a00.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L473a06.  call `f`(v0, v2) @signature `Lh/d/a/a;.f:(Ljava/util/List;)V` @kind virtual;
  #L473a0c.  goto L473976;
  #L473a0e.  v2:= instanceof @variable v2 @type ^`java.util.List` @kind boolean;
  #L473a12.  if v2 == 0 then goto L473976;
  #L473a16.  call temp:= `g`(v7, v3) @signature `Lcom/nimbusds/jose/j/d;.g:(Lnet/minidev/json/JSONObject;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L473a1c.  v2:= temp @kind object;
  #L473a1e.  call `f`(v0, v2) @signature `Lh/d/a/a;.f:(Ljava/util/List;)V` @kind virtual;
  #L473a24.  goto L473976;
  #L473a26.  v3:= "exp" @kind object;
  #L473a2a.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L473a30.  v4:= temp;
  #L473a32.  v5:= 1000L;
  #L473a36.  if v4 == 0 then goto L473a58;
  #L473a3a.  v2:= new `java.util.Date`;
  #L473a3e.  call temp:= `d`(v7, v3) @signature `Lcom/nimbusds/jose/j/d;.d:(Lnet/minidev/json/JSONObject;Ljava/lang/String;)J` @kind static;
  #L473a44.  v3:= temp @kind wide;
  #L473a46.  v3:= v3 * v5 @kind long;
  #L473a4a.  call `<init>`(v2, v3) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L473a50.  call `h`(v0, v2) @signature `Lh/d/a/a;.h:(Ljava/util/Date;)V` @kind virtual;
  #L473a56.  goto L473976;
  #L473a58.  v3:= "nbf" @kind object;
  #L473a5c.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L473a62.  v4:= temp;
  #L473a64.  if v4 == 0 then goto L473a88;
  #L473a68.  v2:= new `java.util.Date`;
  #L473a6c.  call temp:= `d`(v7, v3) @signature `Lcom/nimbusds/jose/j/d;.d:(Lnet/minidev/json/JSONObject;Ljava/lang/String;)J` @kind static;
  #L473a72.  v3:= temp @kind wide;
  #L473a74.  v3:= v3 * v5 @kind long;
  #L473a78.  call `<init>`(v2, v3) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L473a7e.  call `l`(v0, v2) @signature `Lh/d/a/a;.l:(Ljava/util/Date;)V` @kind virtual;
  #L473a84.  goto L473976;
  #L473a88.  v3:= "iat" @kind object;
  #L473a8c.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L473a92.  v4:= temp;
  #L473a94.  if v4 == 0 then goto L473ab8;
  #L473a98.  v2:= new `java.util.Date`;
  #L473a9c.  call temp:= `d`(v7, v3) @signature `Lcom/nimbusds/jose/j/d;.d:(Lnet/minidev/json/JSONObject;Ljava/lang/String;)J` @kind static;
  #L473aa2.  v3:= temp @kind wide;
  #L473aa4.  v3:= v3 * v5 @kind long;
  #L473aa8.  call `<init>`(v2, v3) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L473aae.  call `i`(v0, v2) @signature `Lh/d/a/a;.i:(Ljava/util/Date;)V` @kind virtual;
  #L473ab4.  goto L473976;
  #L473ab8.  v3:= "jti" @kind object;
  #L473abc.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L473ac2.  v4:= temp;
  #L473ac4.  if v4 == 0 then goto L473ada;
  #L473ac8.  call temp:= `e`(v7, v3) @signature `Lcom/nimbusds/jose/j/d;.e:(Lnet/minidev/json/JSONObject;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L473ace.  v2:= temp @kind object;
  #L473ad0.  call `k`(v0, v2) @signature `Lh/d/a/a;.k:(Ljava/lang/String;)V` @kind virtual;
  #L473ad6.  goto L473976;
  #L473ada.  call temp:= `get`(v7, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L473ae0.  v3:= temp @kind object;
  #L473ae2.  call `g`(v0, v2, v3) @signature `Lh/d/a/a;.g:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L473ae8.  goto L473976;
  #L473aec.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`h.d.a.a` v1 @kind this) @signature `Lh/d/a/a;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L473b00.  v0:= v1.`h.d.a.a.c` @type ^`java.lang.String` @kind object;
  #L473b04.  return v0 @kind object;
}
procedure `java.util.Map` `b`(`h.d.a.a` v1 @kind this) @signature `Lh/d/a/a;.b:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L473c00.  v0:= v1.`h.d.a.a.i` @type ^`java.util.Map` @kind object;
  #L473c04.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L473c0a.  v0:= temp @kind object;
  #L473c0c.  return v0 @kind object;
}
procedure `java.util.Date` `c`(`h.d.a.a` v1 @kind this) @signature `Lh/d/a/a;.c:()Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L473be8.  v0:= v1.`h.d.a.a.e` @type ^`java.util.Date` @kind object;
  #L473bec.  return v0 @kind object;
}
procedure `void` `f`(`h.d.a.a` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lh/d/a/a;.f:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L473cec.  v0.`h.d.a.a.d` @type ^`java.util.List` := v1 @kind object;
  #L473cf0.  return @kind void;
}
procedure `void` `g`(`h.d.a.a` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lh/d/a/a;.g:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L473d04.  call temp:= `d`() @signature `Lh/d/a/a;.d:()Ljava/util/Set;` @kind static;
  #L473d0a.  v0:= temp @kind object;
  #L473d0c.  call temp:= `contains`(v0, v3) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L473d12.  v0:= temp;
  #L473d14.  if v0 != 0 then goto L473d24;
  #L473d18.  v0:= v2.`h.d.a.a.i` @type ^`java.util.Map` @kind object;
  #L473d1c.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L473d22.  return @kind void;
  #L473d24.  v4:= new `java.lang.IllegalArgumentException`;
  #L473d28.  v0:= new `java.lang.StringBuilder`;
  #L473d2c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L473d32.  v1:= "The claim name \"" @kind object;
  #L473d36.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473d3c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473d42.  v3:= "\" matches a registered name" @kind object;
  #L473d46.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473d4c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L473d52.  v3:= temp @kind object;
  #L473d54.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L473d5a.  throw v4;
}
procedure `void` `h`(`h.d.a.a` v0 @kind this, `java.util.Date` v1 @kind object) @signature `Lh/d/a/a;.h:(Ljava/util/Date;)V` @AccessFlag PUBLIC {
    temp;

  #L473d6c.  v0.`h.d.a.a.e` @type ^`java.util.Date` := v1 @kind object;
  #L473d70.  return @kind void;
}
procedure `void` `i`(`h.d.a.a` v0 @kind this, `java.util.Date` v1 @kind object) @signature `Lh/d/a/a;.i:(Ljava/util/Date;)V` @AccessFlag PUBLIC {
    temp;

  #L473d84.  v0.`h.d.a.a.g` @type ^`java.util.Date` := v1 @kind object;
  #L473d88.  return @kind void;
}
procedure `void` `j`(`h.d.a.a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lh/d/a/a;.j:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L473d9c.  v0.`h.d.a.a.b` @type ^`java.lang.String` := v1 @kind object;
  #L473da0.  return @kind void;
}
procedure `void` `k`(`h.d.a.a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lh/d/a/a;.k:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L473db4.  v0.`h.d.a.a.h` @type ^`java.lang.String` := v1 @kind object;
  #L473db8.  return @kind void;
}
procedure `void` `l`(`h.d.a.a` v0 @kind this, `java.util.Date` v1 @kind object) @signature `Lh/d/a/a;.l:(Ljava/util/Date;)V` @AccessFlag PUBLIC {
    temp;

  #L473dcc.  v0.`h.d.a.a.f` @type ^`java.util.Date` := v1 @kind object;
  #L473dd0.  return @kind void;
}
procedure `void` `m`(`h.d.a.a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lh/d/a/a;.m:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L473de4.  v0.`h.d.a.a.c` @type ^`java.lang.String` := v1 @kind object;
  #L473de8.  return @kind void;
}
procedure `java.lang.String` `toString`(`h.d.a.a` v2 @kind this) @signature `Lh/d/a/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L473b18.  v0:= new `java.lang.StringBuilder`;
  #L473b1c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L473b22.  v1:= "JWTClaimsSet [iss=" @kind object;
  #L473b26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473b2c.  v1:= v2.`h.d.a.a.b` @type ^`java.lang.String` @kind object;
  #L473b30.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473b36.  v1:= ", sub=" @kind object;
  #L473b3a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473b40.  v1:= v2.`h.d.a.a.c` @type ^`java.lang.String` @kind object;
  #L473b44.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473b4a.  v1:= ", aud=" @kind object;
  #L473b4e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473b54.  v1:= v2.`h.d.a.a.d` @type ^`java.util.List` @kind object;
  #L473b58.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473b5e.  v1:= ", exp=" @kind object;
  #L473b62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473b68.  v1:= v2.`h.d.a.a.e` @type ^`java.util.Date` @kind object;
  #L473b6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473b72.  v1:= ", nbf=" @kind object;
  #L473b76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473b7c.  v1:= v2.`h.d.a.a.f` @type ^`java.util.Date` @kind object;
  #L473b80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473b86.  v1:= ", iat=" @kind object;
  #L473b8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473b90.  v1:= v2.`h.d.a.a.g` @type ^`java.util.Date` @kind object;
  #L473b94.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473b9a.  v1:= ", jti=" @kind object;
  #L473b9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473ba4.  v1:= v2.`h.d.a.a.h` @type ^`java.lang.String` @kind object;
  #L473ba8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473bae.  v1:= ", customClaims=" @kind object;
  #L473bb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473bb8.  v1:= v2.`h.d.a.a.i` @type ^`java.util.Map` @kind object;
  #L473bbc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473bc2.  v1:= "]" @kind object;
  #L473bc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473bcc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L473bd2.  v0:= temp @kind object;
  #L473bd4.  return v0 @kind object;
}
