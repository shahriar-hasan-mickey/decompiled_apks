record `h.c.a.d.y.h` @kind class @AccessFlag  extends `h.c.a.d.y.p` @kind interface {
  `float` `h.c.a.d.y.h.a` @AccessFlag FINAL_SYNTHETIC;
  `h.c.a.d.y.j` `h.c.a.d.y.h.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`h.c.a.d.y.h` v0 @kind this, `h.c.a.d.y.j` v1 @kind object, `float` v2 ) @signature `Lh/c/a/d/y/h;.<init>:(Lh/c/a/d/y/j;F)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L326e80.  v0.`h.c.a.d.y.h.b` @type ^`h.c.a.d.y.j` := v1 @kind object;
  #L326e84.  v0.`h.c.a.d.y.h.a` @type ^`float` := v2;
  #L326e88.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L326e8e.  return @kind void;
}
procedure `h.c.a.d.y.c` `a`(`h.c.a.d.y.h` v2 @kind this, `h.c.a.d.y.c` v3 @kind object) @signature `Lh/c/a/d/y/h;.a:(Lh/c/a/d/y/c;)Lh/c/a/d/y/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L326e54.  v0:= instanceof @variable v3 @type ^`h.c.a.d.y.l` @kind boolean;
  #L326e58.  if v0 == 0 then goto L326e5e;
  #L326e5c.  goto L326e6e;
  #L326e5e.  v0:= new `h.c.a.d.y.b`;
  #L326e62.  v1:= v2.`h.c.a.d.y.h.a` @type ^`float`;
  #L326e66.  call `<init>`(v0, v1, v3) @signature `Lh/c/a/d/y/b;.<init>:(FLh/c/a/d/y/c;)V` @kind direct;
  #L326e6c.  v3:= v0 @kind object;
  #L326e6e.  return v3 @kind object;
}
