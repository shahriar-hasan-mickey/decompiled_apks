record `h.c.a.d.y.b` @kind class @AccessFlag PUBLIC_FINAL extends `h.c.a.d.y.c` @kind interface {
  `h.c.a.d.y.c` `h.c.a.d.y.b.a` @AccessFlag PRIVATE_FINAL;
  `float` `h.c.a.d.y.b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h.c.a.d.y.b` v1 @kind this, `float` v2 , `h.c.a.d.y.c` v3 @kind object) @signature `Lh/c/a/d/y/b;.<init>:(FLh/c/a/d/y/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L326c44.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L326c4a.  v0:= instanceof @variable v3 @type ^`h.c.a.d.y.b` @kind boolean;
  #L326c4e.  if v0 == 0 then goto L326c68;
  #L326c52.  v3:= (`h.c.a.d.y.b`) v3 @kind object;
  #L326c56.  v3:= v3.`h.c.a.d.y.b.a` @type ^`h.c.a.d.y.c` @kind object;
  #L326c5a.  v0:= v3 @kind object;
  #L326c5c.  v0:= (`h.c.a.d.y.b`) v0 @kind object;
  #L326c60.  v0:= v0.`h.c.a.d.y.b.b` @type ^`float`;
  #L326c64.  v2:= v2 + v0 @kind float;
  #L326c66.  goto L326c4a;
  #L326c68.  v1.`h.c.a.d.y.b.a` @type ^`h.c.a.d.y.c` := v3 @kind object;
  #L326c6c.  v1.`h.c.a.d.y.b.b` @type ^`float` := v2;
  #L326c70.  return @kind void;
}
procedure `float` `a`(`h.c.a.d.y.b` v1 @kind this, `android.graphics.RectF` v2 @kind object) @signature `Lh/c/a/d/y/b;.a:(Landroid/graphics/RectF;)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L326bd8.  v0:= v1.`h.c.a.d.y.b.a` @type ^`h.c.a.d.y.c` @kind object;
  #L326bdc.  call temp:= `a`(v0, v2) @signature `Lh/c/a/d/y/c;.a:(Landroid/graphics/RectF;)F` @kind interface;
  #L326be2.  v2:= temp;
  #L326be4.  v0:= v1.`h.c.a.d.y.b.b` @type ^`float`;
  #L326be8.  v2:= v2 + v0 @kind float;
  #L326bea.  v0:= 0I;
  #L326bec.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L326bf2.  v2:= temp;
  #L326bf4.  return v2;
}
procedure `boolean` `equals`(`h.c.a.d.y.b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lh/c/a/d/y/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L326b84.  v0:= 1I;
  #L326b86.  if v4 != v5 then goto L326b8c;
  #L326b8a.  return v0;
  #L326b8c.  v1:= instanceof @variable v5 @type ^`h.c.a.d.y.b` @kind boolean;
  #L326b90.  v2:= 0I;
  #L326b92.  if v1 != 0 then goto L326b98;
  #L326b96.  return v2;
  #L326b98.  v5:= (`h.c.a.d.y.b`) v5 @kind object;
  #L326b9c.  v1:= v4.`h.c.a.d.y.b.a` @type ^`h.c.a.d.y.c` @kind object;
  #L326ba0.  v3:= v5.`h.c.a.d.y.b.a` @type ^`h.c.a.d.y.c` @kind object;
  #L326ba4.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L326baa.  v1:= temp;
  #L326bac.  if v1 == 0 then goto L326bc2;
  #L326bb0.  v1:= v4.`h.c.a.d.y.b.b` @type ^`float`;
  #L326bb4.  v5:= v5.`h.c.a.d.y.b.b` @type ^`float`;
  #L326bb8.  v5:= fcmpl(v1, v5);
  #L326bbc.  if v5 != 0 then goto L326bc2;
  #L326bc0.  goto L326bc4;
  #L326bc2.  v0:= 0I;
  #L326bc4.  return v0;
}
procedure `int` `hashCode`(`h.c.a.d.y.b` v3 @kind this) @signature `Lh/c/a/d/y/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L326c08.  v0:= 2I;
  #L326c0a.  v0:= new `java.lang.Object`[v0];
  #L326c0e.  v1:= v3.`h.c.a.d.y.b.a` @type ^`h.c.a.d.y.c` @kind object;
  #L326c12.  v2:= 0I;
  #L326c14.  v0[v2]:= v1 @kind object;
  #L326c18.  v1:= v3.`h.c.a.d.y.b.b` @type ^`float`;
  #L326c1c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L326c22.  v1:= temp @kind object;
  #L326c24.  v2:= 1I;
  #L326c26.  v0[v2]:= v1 @kind object;
  #L326c2a.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L326c30.  v0:= temp;
  #L326c32.  return v0;
}
