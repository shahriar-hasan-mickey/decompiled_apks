record `h.c.a.d.m.a` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `android.animation.TimeInterpolator` `@@h.c.a.d.m.a.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `android.animation.TimeInterpolator` `@@h.c.a.d.m.a.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `android.animation.TimeInterpolator` `@@h.c.a.d.m.a.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `android.animation.TimeInterpolator` `@@h.c.a.d.m.a.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `android.animation.TimeInterpolator` `@@h.c.a.d.m.a.e` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh/c/a/d/m/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2ffe70.  v0:= new `android.view.animation.LinearInterpolator`;
  #L2ffe74.  call `<init>`(v0) @signature `Landroid/view/animation/LinearInterpolator;.<init>:()V` @kind direct;
  #L2ffe7a.  `@@h.c.a.d.m.a.a` @type ^`android.animation.TimeInterpolator` := v0 @kind object;
  #L2ffe7e.  v0:= new `e.m.a.a.b`;
  #L2ffe82.  call `<init>`(v0) @signature `Le/m/a/a/b;.<init>:()V` @kind direct;
  #L2ffe88.  `@@h.c.a.d.m.a.b` @type ^`android.animation.TimeInterpolator` := v0 @kind object;
  #L2ffe8c.  v0:= new `e.m.a.a.a`;
  #L2ffe90.  call `<init>`(v0) @signature `Le/m/a/a/a;.<init>:()V` @kind direct;
  #L2ffe96.  `@@h.c.a.d.m.a.c` @type ^`android.animation.TimeInterpolator` := v0 @kind object;
  #L2ffe9a.  v0:= new `e.m.a.a.c`;
  #L2ffe9e.  call `<init>`(v0) @signature `Le/m/a/a/c;.<init>:()V` @kind direct;
  #L2ffea4.  `@@h.c.a.d.m.a.d` @type ^`android.animation.TimeInterpolator` := v0 @kind object;
  #L2ffea8.  v0:= new `android.view.animation.DecelerateInterpolator`;
  #L2ffeac.  call `<init>`(v0) @signature `Landroid/view/animation/DecelerateInterpolator;.<init>:()V` @kind direct;
  #L2ffeb2.  `@@h.c.a.d.m.a.e` @type ^`android.animation.TimeInterpolator` := v0 @kind object;
  #L2ffeb6.  return @kind void;
}
procedure `float` `a`(`float` v0 , `float` v1 , `float` v2 ) @signature `Lh/c/a/d/m/a;.a:(FFF)F` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2ffdfc.  v1:= v1 - v0 @kind float;
  #L2ffdfe.  v2:= v2 * v1 @kind float;
  #L2ffe02.  v0:= v0 + v2 @kind float;
  #L2ffe04.  return v0;
}
procedure `float` `b`(`float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 ) @signature `Lh/c/a/d/m/a;.b:(FFFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ffe18.  v0:= fcmpg(v5, v3);
  #L2ffe1c.  if v0 >= 0 then goto L2ffe22;
  #L2ffe20.  return v1;
  #L2ffe22.  v0:= fcmpl(v5, v4);
  #L2ffe26.  if v0 <= 0 then goto L2ffe2c;
  #L2ffe2a.  return v2;
  #L2ffe2c.  v5:= v5 - v3 @kind float;
  #L2ffe2e.  v4:= v4 - v3 @kind float;
  #L2ffe30.  v5:= v5 / v4 @kind float;
  #L2ffe32.  call temp:= `a`(v1, v2, v5) @signature `Lh/c/a/d/m/a;.a:(FFF)F` @kind static;
  #L2ffe38.  v1:= temp;
  #L2ffe3a.  return v1;
}
procedure `int` `c`(`int` v0 , `int` v1 , `float` v2 ) @signature `Lh/c/a/d/m/a;.c:(IIF)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2ffe4c.  v1:= v1 - v0 @kind int;
  #L2ffe4e.  v1:= (`float`) v1 @kind i2f;
  #L2ffe50.  v2:= v2 * v1 @kind float;
  #L2ffe54.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2ffe5a.  v1:= temp;
  #L2ffe5c.  v0:= v0 + v1 @kind int;
  #L2ffe5e.  return v0;
}
