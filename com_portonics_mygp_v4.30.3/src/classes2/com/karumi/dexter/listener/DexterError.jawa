record `com.karumi.dexter.listener.DexterError` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.karumi.dexter.listener.DexterError`[] `@@com.karumi.dexter.listener.DexterError.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.karumi.dexter.listener.DexterError` `@@com.karumi.dexter.listener.DexterError.NO_PERMISSIONS_REQUESTED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.karumi.dexter.listener.DexterError` `@@com.karumi.dexter.listener.DexterError.REQUEST_ONGOING` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/karumi/dexter/listener/DexterError;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L45d800.  v0:= new `com.karumi.dexter.listener.DexterError`;
  #L45d804.  v1:= "REQUEST_ONGOING" @kind object;
  #L45d808.  v2:= 0I;
  #L45d80a.  call `<init>`(v0, v1, v2) @signature `Lcom/karumi/dexter/listener/DexterError;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L45d810.  `@@com.karumi.dexter.listener.DexterError.REQUEST_ONGOING` @type ^`com.karumi.dexter.listener.DexterError` := v0 @kind object;
  #L45d814.  v1:= new `com.karumi.dexter.listener.DexterError`;
  #L45d818.  v3:= "NO_PERMISSIONS_REQUESTED" @kind object;
  #L45d81c.  v4:= 1I;
  #L45d81e.  call `<init>`(v1, v3, v4) @signature `Lcom/karumi/dexter/listener/DexterError;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L45d824.  `@@com.karumi.dexter.listener.DexterError.NO_PERMISSIONS_REQUESTED` @type ^`com.karumi.dexter.listener.DexterError` := v1 @kind object;
  #L45d828.  v3:= 2I;
  #L45d82a.  v3:= new `com.karumi.dexter.listener.DexterError`[v3];
  #L45d82e.  v3[v2]:= v0 @kind object;
  #L45d832.  v3[v4]:= v1 @kind object;
  #L45d836.  `@@com.karumi.dexter.listener.DexterError.$VALUES` @type ^`com.karumi.dexter.listener.DexterError`[] := v3 @kind object;
  #L45d83a.  return @kind void;
}
procedure `void` `<init>`(`com.karumi.dexter.listener.DexterError` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/karumi/dexter/listener/DexterError;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L45d84c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L45d852.  return @kind void;
}
procedure `com.karumi.dexter.listener.DexterError` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/karumi/dexter/listener/DexterError;.valueOf:(Ljava/lang/String;)Lcom/karumi/dexter/listener/DexterError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45d7b8.  v0:= constclass @type ^`com.karumi.dexter.listener.DexterError` @kind object;
  #L45d7bc.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L45d7c2.  v1:= temp @kind object;
  #L45d7c4.  v1:= (`com.karumi.dexter.listener.DexterError`) v1 @kind object;
  #L45d7c8.  return v1 @kind object;
}
procedure `com.karumi.dexter.listener.DexterError`[] `values`() @signature `Lcom/karumi/dexter/listener/DexterError;.values:()[Lcom/karumi/dexter/listener/DexterError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45d7dc.  v0:= `@@com.karumi.dexter.listener.DexterError.$VALUES` @type ^`com.karumi.dexter.listener.DexterError`[] @kind object;
  #L45d7e0.  call temp:= `clone`(v0) @signature `[Lcom/karumi/dexter/listener/DexterError;.clone:()Ljava/lang/Object;` @kind virtual;
  #L45d7e6.  v0:= temp @kind object;
  #L45d7e8.  v0:= (`com.karumi.dexter.listener.DexterError`[]) v0 @kind object;
  #L45d7ec.  return v0 @kind object;
}
