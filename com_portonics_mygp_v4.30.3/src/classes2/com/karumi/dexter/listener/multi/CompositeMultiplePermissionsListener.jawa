record `com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener` @kind class @AccessFlag PUBLIC extends `com.karumi.dexter.listener.multi.MultiplePermissionsListener` @kind interface {
  `java.util.Collection` `com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener.listeners` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/karumi/dexter/listener/multi/CompositeMultiplePermissionsListener;.<init>:(Ljava/util/Collection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L45da74.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45da7a.  v0.`com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener.listeners` @type ^`java.util.Collection` := v1 @kind object;
  #L45da7e.  return @kind void;
}
procedure `void` `<init>`(`com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener` v0 @kind this, `com.karumi.dexter.listener.multi.MultiplePermissionsListener`[] v1 @kind object) @signature `Lcom/karumi/dexter/listener/multi/CompositeMultiplePermissionsListener;.<init>:([Lcom/karumi/dexter/listener/multi/MultiplePermissionsListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L45da54.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L45da5a.  v1:= temp @kind object;
  #L45da5c.  call `<init>`(v0, v1) @signature `Lcom/karumi/dexter/listener/multi/CompositeMultiplePermissionsListener;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L45da62.  return @kind void;
}
procedure `void` `onPermissionRationaleShouldBeShown`(`com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener` v2 @kind this, `java.util.List` v3 @kind object, `com.karumi.dexter.PermissionToken` v4 @kind object) @signature `Lcom/karumi/dexter/listener/multi/CompositeMultiplePermissionsListener;.onPermissionRationaleShouldBeShown:(Ljava/util/List;Lcom/karumi/dexter/PermissionToken;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45da90.  v0:= v2.`com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener.listeners` @type ^`java.util.Collection` @kind object;
  #L45da94.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L45da9a.  v0:= temp @kind object;
  #L45da9c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L45daa2.  v1:= temp;
  #L45daa4.  if v1 == 0 then goto L45dabc;
  #L45daa8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L45daae.  v1:= temp @kind object;
  #L45dab0.  v1:= (`com.karumi.dexter.listener.multi.MultiplePermissionsListener`) v1 @kind object;
  #L45dab4.  call `onPermissionRationaleShouldBeShown`(v1, v3, v4) @signature `Lcom/karumi/dexter/listener/multi/MultiplePermissionsListener;.onPermissionRationaleShouldBeShown:(Ljava/util/List;Lcom/karumi/dexter/PermissionToken;)V` @kind interface;
  #L45daba.  goto L45da9c;
  #L45dabc.  return @kind void;
}
procedure `void` `onPermissionsChecked`(`com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener` v2 @kind this, `com.karumi.dexter.MultiplePermissionsReport` v3 @kind object) @signature `Lcom/karumi/dexter/listener/multi/CompositeMultiplePermissionsListener;.onPermissionsChecked:(Lcom/karumi/dexter/MultiplePermissionsReport;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45dad0.  v0:= v2.`com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener.listeners` @type ^`java.util.Collection` @kind object;
  #L45dad4.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L45dada.  v0:= temp @kind object;
  #L45dadc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L45dae2.  v1:= temp;
  #L45dae4.  if v1 == 0 then goto L45dafc;
  #L45dae8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L45daee.  v1:= temp @kind object;
  #L45daf0.  v1:= (`com.karumi.dexter.listener.multi.MultiplePermissionsListener`) v1 @kind object;
  #L45daf4.  call `onPermissionsChecked`(v1, v3) @signature `Lcom/karumi/dexter/listener/multi/MultiplePermissionsListener;.onPermissionsChecked:(Lcom/karumi/dexter/MultiplePermissionsReport;)V` @kind interface;
  #L45dafa.  goto L45dadc;
  #L45dafc.  return @kind void;
}
