record `com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener` @kind class @AccessFlag PUBLIC extends `com.karumi.dexter.listener.multi.MultiplePermissionsListener` @kind interface {
}
procedure `void` `<init>`(`com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener` v0 @kind this) @signature `Lcom/karumi/dexter/listener/multi/BaseMultiplePermissionsListener;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L45da10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45da16.  return @kind void;
}
procedure `void` `onPermissionRationaleShouldBeShown`(`com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener` v0 @kind this, `java.util.List` v1 @kind object, `com.karumi.dexter.PermissionToken` v2 @kind object) @signature `Lcom/karumi/dexter/listener/multi/BaseMultiplePermissionsListener;.onPermissionRationaleShouldBeShown:(Ljava/util/List;Lcom/karumi/dexter/PermissionToken;)V` @AccessFlag PUBLIC {
    temp;

  #L45da28.  call `continuePermissionRequest`(v2) @signature `Lcom/karumi/dexter/PermissionToken;.continuePermissionRequest:()V` @kind interface;
  #L45da2e.  return @kind void;
}
procedure `void` `onPermissionsChecked`(`com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener` v0 @kind this, `com.karumi.dexter.MultiplePermissionsReport` v1 @kind object) @signature `Lcom/karumi/dexter/listener/multi/BaseMultiplePermissionsListener;.onPermissionsChecked:(Lcom/karumi/dexter/MultiplePermissionsReport;)V` @AccessFlag PUBLIC {
    temp;

  #L45da40.  return @kind void;
}
