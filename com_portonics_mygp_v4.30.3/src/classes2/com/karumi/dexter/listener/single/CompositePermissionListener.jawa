record `com.karumi.dexter.listener.single.CompositePermissionListener` @kind class @AccessFlag PUBLIC extends `com.karumi.dexter.listener.single.PermissionListener` @kind interface {
  `java.util.Collection` `com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.karumi.dexter.listener.single.CompositePermissionListener` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.<init>:(Ljava/util/Collection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L45e104.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45e10a.  v0.`com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @type ^`java.util.Collection` := v1 @kind object;
  #L45e10e.  return @kind void;
}
procedure `void` `<init>`(`com.karumi.dexter.listener.single.CompositePermissionListener` v0 @kind this, `com.karumi.dexter.listener.single.PermissionListener`[] v1 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.<init>:([Lcom/karumi/dexter/listener/single/PermissionListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L45e0e4.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L45e0ea.  v1:= temp @kind object;
  #L45e0ec.  call `<init>`(v0, v1) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L45e0f2.  return @kind void;
}
procedure `void` `onPermissionDenied`(`com.karumi.dexter.listener.single.CompositePermissionListener` v2 @kind this, `com.karumi.dexter.listener.PermissionDeniedResponse` v3 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.onPermissionDenied:(Lcom/karumi/dexter/listener/PermissionDeniedResponse;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45e120.  v0:= v2.`com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @type ^`java.util.Collection` @kind object;
  #L45e124.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L45e12a.  v0:= temp @kind object;
  #L45e12c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L45e132.  v1:= temp;
  #L45e134.  if v1 == 0 then goto L45e14c;
  #L45e138.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L45e13e.  v1:= temp @kind object;
  #L45e140.  v1:= (`com.karumi.dexter.listener.single.PermissionListener`) v1 @kind object;
  #L45e144.  call `onPermissionDenied`(v1, v3) @signature `Lcom/karumi/dexter/listener/single/PermissionListener;.onPermissionDenied:(Lcom/karumi/dexter/listener/PermissionDeniedResponse;)V` @kind interface;
  #L45e14a.  goto L45e12c;
  #L45e14c.  return @kind void;
}
procedure `void` `onPermissionGranted`(`com.karumi.dexter.listener.single.CompositePermissionListener` v2 @kind this, `com.karumi.dexter.listener.PermissionGrantedResponse` v3 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.onPermissionGranted:(Lcom/karumi/dexter/listener/PermissionGrantedResponse;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45e160.  v0:= v2.`com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @type ^`java.util.Collection` @kind object;
  #L45e164.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L45e16a.  v0:= temp @kind object;
  #L45e16c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L45e172.  v1:= temp;
  #L45e174.  if v1 == 0 then goto L45e18c;
  #L45e178.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L45e17e.  v1:= temp @kind object;
  #L45e180.  v1:= (`com.karumi.dexter.listener.single.PermissionListener`) v1 @kind object;
  #L45e184.  call `onPermissionGranted`(v1, v3) @signature `Lcom/karumi/dexter/listener/single/PermissionListener;.onPermissionGranted:(Lcom/karumi/dexter/listener/PermissionGrantedResponse;)V` @kind interface;
  #L45e18a.  goto L45e16c;
  #L45e18c.  return @kind void;
}
procedure `void` `onPermissionRationaleShouldBeShown`(`com.karumi.dexter.listener.single.CompositePermissionListener` v2 @kind this, `com.karumi.dexter.listener.PermissionRequest` v3 @kind object, `com.karumi.dexter.PermissionToken` v4 @kind object) @signature `Lcom/karumi/dexter/listener/single/CompositePermissionListener;.onPermissionRationaleShouldBeShown:(Lcom/karumi/dexter/listener/PermissionRequest;Lcom/karumi/dexter/PermissionToken;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45e1a0.  v0:= v2.`com.karumi.dexter.listener.single.CompositePermissionListener.listeners` @type ^`java.util.Collection` @kind object;
  #L45e1a4.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L45e1aa.  v0:= temp @kind object;
  #L45e1ac.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L45e1b2.  v1:= temp;
  #L45e1b4.  if v1 == 0 then goto L45e1cc;
  #L45e1b8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L45e1be.  v1:= temp @kind object;
  #L45e1c0.  v1:= (`com.karumi.dexter.listener.single.PermissionListener`) v1 @kind object;
  #L45e1c4.  call `onPermissionRationaleShouldBeShown`(v1, v3, v4) @signature `Lcom/karumi/dexter/listener/single/PermissionListener;.onPermissionRationaleShouldBeShown:(Lcom/karumi/dexter/listener/PermissionRequest;Lcom/karumi/dexter/PermissionToken;)V` @kind interface;
  #L45e1ca.  goto L45e1ac;
  #L45e1cc.  return @kind void;
}
