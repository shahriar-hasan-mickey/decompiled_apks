record `com.portonics.mygp.db.GpStarDB` @kind class @AccessFlag PUBLIC_ABSTRACT extends `androidx.room.RoomDatabase` @kind class {
}
global `com.portonics.mygp.db.GpStarDB$a` `@@com.portonics.mygp.db.GpStarDB.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.portonics.mygp.db.GpStarDB` `@@com.portonics.mygp.db.GpStarDB.b` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lcom/portonics/mygp/db/GpStarDB;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L50f404.  v0:= new `com.portonics.mygp.db.GpStarDB$a`;
  #L50f408.  v1:= 0I;
  #L50f40a.  call `<init>`(v0, v1) @signature `Lcom/portonics/mygp/db/GpStarDB$a;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L50f410.  `@@com.portonics.mygp.db.GpStarDB.a` @type ^`com.portonics.mygp.db.GpStarDB$a` := v0 @kind object;
  #L50f414.  return @kind void;
}
procedure `void` `<init>`(`com.portonics.mygp.db.GpStarDB` v0 @kind this) @signature `Lcom/portonics/mygp/db/GpStarDB;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L50f428.  call `<init>`(v0) @signature `Landroidx/room/RoomDatabase;.<init>:()V` @kind direct;
  #L50f42e.  return @kind void;
}
procedure `com.portonics.mygp.db.GpStarDB` `i`() @signature `Lcom/portonics/mygp/db/GpStarDB;.i:()Lcom/portonics/mygp/db/GpStarDB;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L50f3ec.  v0:= `@@com.portonics.mygp.db.GpStarDB.b` @type ^`com.portonics.mygp.db.GpStarDB` @kind object;
  #L50f3f0.  return v0 @kind object;
}
procedure `void` `j`(`com.portonics.mygp.db.GpStarDB` v0 @kind object) @signature `Lcom/portonics/mygp/db/GpStarDB;.j:(Lcom/portonics/mygp/db/GpStarDB;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L50f440.  `@@com.portonics.mygp.db.GpStarDB.b` @type ^`com.portonics.mygp.db.GpStarDB` := v0 @kind object;
  #L50f444.  return @kind void;
}
procedure `com.portonics.mygp.db.m` `k`() @signature `Lcom/portonics/mygp/db/GpStarDB;.k:()Lcom/portonics/mygp/db/m;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
