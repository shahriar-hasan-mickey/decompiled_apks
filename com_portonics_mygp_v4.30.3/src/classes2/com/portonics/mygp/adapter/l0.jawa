record `com.portonics.mygp.adapter.l0` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
  `com.portonics.mygp.adapter.CallHistoryListRecyclerAdapter` `com.portonics.mygp.adapter.l0.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.portonics.mygp.adapter.l0` v0 @kind this, `com.portonics.mygp.adapter.CallHistoryListRecyclerAdapter` v1 @kind object) @signature `Lcom/portonics/mygp/adapter/l0;.<init>:(Lcom/portonics/mygp/adapter/CallHistoryListRecyclerAdapter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b79e8.  v0.`com.portonics.mygp.adapter.l0.b` @type ^`com.portonics.mygp.adapter.CallHistoryListRecyclerAdapter` := v1 @kind object;
  #L4b79ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b79f2.  return @kind void;
}
procedure `int` `a`(`com.portonics.mygp.adapter.l0` v2 @kind this, `com.portonics.mygp.model.CallHistory` v3 @kind object, `com.portonics.mygp.model.CallHistory` v4 @kind object) @signature `Lcom/portonics/mygp/adapter/l0;.a:(Lcom/portonics/mygp/model/CallHistory;Lcom/portonics/mygp/model/CallHistory;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b7950.  v0:= v4.`com.portonics.mygp.model.CallHistory.isFooter` @type ^`java.lang.Boolean` @kind object;
  #L4b7954.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L4b795a.  v0:= temp;
  #L4b795c.  if v0 == 0 then goto L4b7964;
  #L4b7960.  v3:= -1I;
  #L4b7962.  return v3;
  #L4b7964.  v3:= v3.`com.portonics.mygp.model.CallHistory.cost` @type ^`java.lang.String` @kind object;
  #L4b7968.  call temp:= `parseDouble`(v3) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L4b796e.  v0:= temp @kind wide;
  #L4b7970.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L4b7976.  v3:= temp @kind object;
  #L4b7978.  v4:= v4.`com.portonics.mygp.model.CallHistory.cost` @type ^`java.lang.String` @kind object;
  #L4b797c.  call temp:= `parseDouble`(v4) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L4b7982.  v0:= temp @kind wide;
  #L4b7984.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L4b798a.  v4:= temp @kind object;
  #L4b798c.  call temp:= `compareTo`(v4, v3) @signature `Ljava/lang/Double;.compareTo:(Ljava/lang/Double;)I` @kind virtual;
  #L4b7992.  v3:= temp;
  #L4b7994.  return v3;
  #L4b7996.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L4b7998.  call `printStackTrace`(v3) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L4b799e.  v3:= 0I;
  #L4b79a0.  return v3;
  catch `java.lang.Exception` @[L4b7964..L4b7994] goto L4b7996;
}
procedure `int` `compare`(`com.portonics.mygp.adapter.l0` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/portonics/mygp/adapter/l0;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b79c4.  v1:= (`com.portonics.mygp.model.CallHistory`) v1 @kind object;
  #L4b79c8.  v2:= (`com.portonics.mygp.model.CallHistory`) v2 @kind object;
  #L4b79cc.  call temp:= `a`(v0, v1, v2) @signature `Lcom/portonics/mygp/adapter/l0;.a:(Lcom/portonics/mygp/model/CallHistory;Lcom/portonics/mygp/model/CallHistory;)I` @kind virtual;
  #L4b79d2.  v1:= temp;
  #L4b79d4.  return v1;
}
