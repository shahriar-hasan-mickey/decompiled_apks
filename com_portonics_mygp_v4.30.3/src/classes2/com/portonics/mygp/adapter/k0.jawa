record `com.portonics.mygp.adapter.k0` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
  `com.portonics.mygp.adapter.CallHistoryListRecyclerAdapter` `com.portonics.mygp.adapter.k0.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.portonics.mygp.adapter.k0` v0 @kind this, `com.portonics.mygp.adapter.CallHistoryListRecyclerAdapter` v1 @kind object) @signature `Lcom/portonics/mygp/adapter/k0;.<init>:(Lcom/portonics/mygp/adapter/CallHistoryListRecyclerAdapter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4b7934.  v0.`com.portonics.mygp.adapter.k0.b` @type ^`com.portonics.mygp.adapter.CallHistoryListRecyclerAdapter` := v1 @kind object;
  #L4b7938.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b793e.  return @kind void;
}
procedure `int` `a`(`com.portonics.mygp.adapter.k0` v2 @kind this, `com.portonics.mygp.model.CallHistory` v3 @kind object, `com.portonics.mygp.model.CallHistory` v4 @kind object) @signature `Lcom/portonics/mygp/adapter/k0;.a:(Lcom/portonics/mygp/model/CallHistory;Lcom/portonics/mygp/model/CallHistory;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b789c.  v0:= v3.`com.portonics.mygp.model.CallHistory.isFooter` @type ^`java.lang.Boolean` @kind object;
  #L4b78a0.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L4b78a6.  v0:= temp;
  #L4b78a8.  if v0 == 0 then goto L4b78b0;
  #L4b78ac.  v3:= 1I;
  #L4b78ae.  return v3;
  #L4b78b0.  v3:= v3.`com.portonics.mygp.model.CallHistory.cost` @type ^`java.lang.String` @kind object;
  #L4b78b4.  call temp:= `parseDouble`(v3) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L4b78ba.  v0:= temp @kind wide;
  #L4b78bc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L4b78c2.  v3:= temp @kind object;
  #L4b78c4.  v4:= v4.`com.portonics.mygp.model.CallHistory.cost` @type ^`java.lang.String` @kind object;
  #L4b78c8.  call temp:= `parseDouble`(v4) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L4b78ce.  v0:= temp @kind wide;
  #L4b78d0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L4b78d6.  v4:= temp @kind object;
  #L4b78d8.  call temp:= `compareTo`(v3, v4) @signature `Ljava/lang/Double;.compareTo:(Ljava/lang/Double;)I` @kind virtual;
  #L4b78de.  v3:= temp;
  #L4b78e0.  return v3;
  #L4b78e2.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L4b78e4.  call `printStackTrace`(v3) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L4b78ea.  v3:= 0I;
  #L4b78ec.  return v3;
  catch `java.lang.Exception` @[L4b78b0..L4b78e0] goto L4b78e2;
}
procedure `int` `compare`(`com.portonics.mygp.adapter.k0` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/portonics/mygp/adapter/k0;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b7910.  v1:= (`com.portonics.mygp.model.CallHistory`) v1 @kind object;
  #L4b7914.  v2:= (`com.portonics.mygp.model.CallHistory`) v2 @kind object;
  #L4b7918.  call temp:= `a`(v0, v1, v2) @signature `Lcom/portonics/mygp/adapter/k0;.a:(Lcom/portonics/mygp/model/CallHistory;Lcom/portonics/mygp/model/CallHistory;)I` @kind virtual;
  #L4b791e.  v1:= temp;
  #L4b7920.  return v1;
}
