record `com.portonics.mygp.model.FlexiplanBonus` @kind class @AccessFlag PUBLIC_FINAL extends `com.portonics.mygp.model.Model` @kind class {
  `double` `com.portonics.mygp.model.FlexiplanBonus.amount` @AccessFlag PRIVATE;
  `java.lang.String` `com.portonics.mygp.model.FlexiplanBonus.unit` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.portonics.mygp.model.FlexiplanBonus` v1 @kind this, `double` v2 , `java.lang.String` v4 @kind object) @signature `Lcom/portonics/mygp/model/FlexiplanBonus;.<init>:(DLjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L51de5c.  v0:= "unit" @kind object;
  #L51de60.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51de66.  call `<init>`(v1) @signature `Lcom/portonics/mygp/model/Model;.<init>:()V` @kind direct;
  #L51de6c.  v1.`com.portonics.mygp.model.FlexiplanBonus.amount` @type ^`double` := v2 @kind wide;
  #L51de70.  v1.`com.portonics.mygp.model.FlexiplanBonus.unit` @type ^`java.lang.String` := v4 @kind object;
  #L51de74.  return @kind void;
}
procedure `com.portonics.mygp.model.FlexiplanBonus` `copy$default`(`com.portonics.mygp.model.FlexiplanBonus` v0 @kind object, `double` v1 , `java.lang.String` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lcom/portonics/mygp/model/FlexiplanBonus;.copy$default:(Lcom/portonics/mygp/model/FlexiplanBonus;DLjava/lang/String;ILjava/lang/Object;)Lcom/portonics/mygp/model/FlexiplanBonus;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L51dd18.  v5:= v4 ^& 1;
  #L51dd1c.  if v5 == 0 then goto L51dd24;
  #L51dd20.  v1:= v0.`com.portonics.mygp.model.FlexiplanBonus.amount` @type ^`double` @kind wide;
  #L51dd24.  v4:= v4 ^& 2;
  #L51dd28.  if v4 == 0 then goto L51dd30;
  #L51dd2c.  v3:= v0.`com.portonics.mygp.model.FlexiplanBonus.unit` @type ^`java.lang.String` @kind object;
  #L51dd30.  call temp:= `copy`(v0, v1, v3) @signature `Lcom/portonics/mygp/model/FlexiplanBonus;.copy:(DLjava/lang/String;)Lcom/portonics/mygp/model/FlexiplanBonus;` @kind virtual;
  #L51dd36.  v0:= temp @kind object;
  #L51dd38.  return v0 @kind object;
}
procedure `double` `component1`(`com.portonics.mygp.model.FlexiplanBonus` v2 @kind this) @signature `Lcom/portonics/mygp/model/FlexiplanBonus;.component1:()D` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L51dd74.  v0:= v2.`com.portonics.mygp.model.FlexiplanBonus.amount` @type ^`double` @kind wide;
  #L51dd78.  return v0 @kind wide;
}
procedure `java.lang.String` `component2`(`com.portonics.mygp.model.FlexiplanBonus` v1 @kind this) @signature `Lcom/portonics/mygp/model/FlexiplanBonus;.component2:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51ddd4.  v0:= v1.`com.portonics.mygp.model.FlexiplanBonus.unit` @type ^`java.lang.String` @kind object;
  #L51ddd8.  return v0 @kind object;
}
procedure `com.portonics.mygp.model.FlexiplanBonus` `copy`(`com.portonics.mygp.model.FlexiplanBonus` v1 @kind this, `double` v2 , `java.lang.String` v4 @kind object) @signature `Lcom/portonics/mygp/model/FlexiplanBonus;.copy:(DLjava/lang/String;)Lcom/portonics/mygp/model/FlexiplanBonus;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51dd4c.  v0:= "unit" @kind object;
  #L51dd50.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51dd56.  v0:= new `com.portonics.mygp.model.FlexiplanBonus`;
  #L51dd5a.  call `<init>`(v0, v2, v4) @signature `Lcom/portonics/mygp/model/FlexiplanBonus;.<init>:(DLjava/lang/String;)V` @kind direct;
  #L51dd60.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.portonics.mygp.model.FlexiplanBonus` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/portonics/mygp/model/FlexiplanBonus;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L51dcb0.  v0:= 1I;
  #L51dcb2.  if v5 != v6 then goto L51dcb8;
  #L51dcb6.  return v0;
  #L51dcb8.  v1:= instanceof @variable v6 @type ^`com.portonics.mygp.model.FlexiplanBonus` @kind boolean;
  #L51dcbc.  v2:= 0I;
  #L51dcbe.  if v1 != 0 then goto L51dcc4;
  #L51dcc2.  return v2;
  #L51dcc4.  v6:= (`com.portonics.mygp.model.FlexiplanBonus`) v6 @kind object;
  #L51dcc8.  v3:= v5.`com.portonics.mygp.model.FlexiplanBonus.amount` @type ^`double` @kind wide;
  #L51dccc.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L51dcd2.  v1:= temp @kind object;
  #L51dcd4.  v3:= v6.`com.portonics.mygp.model.FlexiplanBonus.amount` @type ^`double` @kind wide;
  #L51dcd8.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L51dcde.  v3:= temp @kind object;
  #L51dce0.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L51dce6.  v1:= temp;
  #L51dce8.  if v1 != 0 then goto L51dcee;
  #L51dcec.  return v2;
  #L51dcee.  v1:= v5.`com.portonics.mygp.model.FlexiplanBonus.unit` @type ^`java.lang.String` @kind object;
  #L51dcf2.  v6:= v6.`com.portonics.mygp.model.FlexiplanBonus.unit` @type ^`java.lang.String` @kind object;
  #L51dcf6.  call temp:= `areEqual`(v1, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L51dcfc.  v6:= temp;
  #L51dcfe.  if v6 != 0 then goto L51dd04;
  #L51dd02.  return v2;
  #L51dd04.  return v0;
}
procedure `double` `getAmount`(`com.portonics.mygp.model.FlexiplanBonus` v2 @kind this) @signature `Lcom/portonics/mygp/model/FlexiplanBonus;.getAmount:()D` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L51dd8c.  v0:= v2.`com.portonics.mygp.model.FlexiplanBonus.amount` @type ^`double` @kind wide;
  #L51dd90.  return v0 @kind wide;
}
procedure `java.lang.String` `getUnit`(`com.portonics.mygp.model.FlexiplanBonus` v1 @kind this) @signature `Lcom/portonics/mygp/model/FlexiplanBonus;.getUnit:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51ddec.  v0:= v1.`com.portonics.mygp.model.FlexiplanBonus.unit` @type ^`java.lang.String` @kind object;
  #L51ddf0.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.portonics.mygp.model.FlexiplanBonus` v2 @kind this) @signature `Lcom/portonics/mygp/model/FlexiplanBonus;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L51dda4.  v0:= v2.`com.portonics.mygp.model.FlexiplanBonus.amount` @type ^`double` @kind wide;
  #L51dda8.  call temp:= `a`(v0) @signature `Lcom/portonics/mygp/covid19/i;.a:(D)I` @kind static;
  #L51ddae.  v0:= temp;
  #L51ddb0.  v0:= v0 * 31;
  #L51ddb4.  v1:= v2.`com.portonics.mygp.model.FlexiplanBonus.unit` @type ^`java.lang.String` @kind object;
  #L51ddb8.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L51ddbe.  v1:= temp;
  #L51ddc0.  v0:= v0 + v1 @kind int;
  #L51ddc2.  return v0;
}
procedure `void` `setAmount`(`com.portonics.mygp.model.FlexiplanBonus` v0 @kind this, `double` v1 ) @signature `Lcom/portonics/mygp/model/FlexiplanBonus;.setAmount:(D)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L51de88.  v0.`com.portonics.mygp.model.FlexiplanBonus.amount` @type ^`double` := v1 @kind wide;
  #L51de8c.  return @kind void;
}
procedure `void` `setUnit`(`com.portonics.mygp.model.FlexiplanBonus` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/portonics/mygp/model/FlexiplanBonus;.setUnit:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L51dea0.  v0:= "<set-?>" @kind object;
  #L51dea4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L51deaa.  v1.`com.portonics.mygp.model.FlexiplanBonus.unit` @type ^`java.lang.String` := v2 @kind object;
  #L51deae.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.portonics.mygp.model.FlexiplanBonus` v3 @kind this) @signature `Lcom/portonics/mygp/model/FlexiplanBonus;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L51de04.  v0:= new `java.lang.StringBuilder`;
  #L51de08.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L51de0e.  v1:= "FlexiplanBonus(amount=" @kind object;
  #L51de12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L51de18.  v1:= v3.`com.portonics.mygp.model.FlexiplanBonus.amount` @type ^`double` @kind wide;
  #L51de1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L51de22.  v1:= ", unit=" @kind object;
  #L51de26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L51de2c.  v1:= v3.`com.portonics.mygp.model.FlexiplanBonus.unit` @type ^`java.lang.String` @kind object;
  #L51de30.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L51de36.  v1:= 41I;
  #L51de3a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L51de40.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L51de46.  v0:= temp @kind object;
  #L51de48.  return v0 @kind object;
}
