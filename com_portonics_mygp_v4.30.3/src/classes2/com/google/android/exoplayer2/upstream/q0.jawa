record `com.google.android.exoplayer2.upstream.q0` @kind class @AccessFlag PUBLIC_ABSTRACT_SYNTHETIC {
}
procedure `boolean` `a`(`java.lang.String` v2 @kind object) @signature `Lcom/google/android/exoplayer2/upstream/q0;.a:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L1d8bbc.  v0:= 0I;
  #L1d8bbe.  if v2 != 0 then goto L1d8bc4;
  #L1d8bc2.  return v0;
  #L1d8bc4.  call temp:= `e`(v2) @signature `Lcom/google/common/base/b;.e:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1d8bca.  v2:= temp @kind object;
  #L1d8bcc.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1d8bd2.  v1:= temp;
  #L1d8bd4.  if v1 != 0 then goto L1d8c1a;
  #L1d8bd8.  v1:= "text" @kind object;
  #L1d8bdc.  call temp:= `contains`(v2, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L1d8be2.  v1:= temp;
  #L1d8be4.  if v1 == 0 then goto L1d8bf8;
  #L1d8be8.  v1:= "text/vtt" @kind object;
  #L1d8bec.  call temp:= `contains`(v2, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L1d8bf2.  v1:= temp;
  #L1d8bf4.  if v1 == 0 then goto L1d8c1a;
  #L1d8bf8.  v1:= "html" @kind object;
  #L1d8bfc.  call temp:= `contains`(v2, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L1d8c02.  v1:= temp;
  #L1d8c04.  if v1 != 0 then goto L1d8c1a;
  #L1d8c08.  v1:= "xml" @kind object;
  #L1d8c0c.  call temp:= `contains`(v2, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L1d8c12.  v2:= temp;
  #L1d8c14.  if v2 != 0 then goto L1d8c1a;
  #L1d8c18.  v0:= 1I;
  #L1d8c1a.  return v0;
}
