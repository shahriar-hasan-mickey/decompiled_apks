record `com.google.android.exoplayer2.upstream.HttpDataSource$CleartextNotPermittedException` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException` @kind class {
}
procedure `void` `<init>`(`com.google.android.exoplayer2.upstream.HttpDataSource$CleartextNotPermittedException` v6 @kind this, `java.io.IOException` v7 @kind object, `com.google.android.exoplayer2.upstream.b0` v8 @kind object) @signature `Lcom/google/android/exoplayer2/upstream/HttpDataSource$CleartextNotPermittedException;.<init>:(Ljava/io/IOException;Lcom/google/android/exoplayer2/upstream/b0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1d8c2c.  v1:= "Cleartext HTTP traffic not permitted. See https://exoplayer.dev/issues/cleartext-not-permitted" @kind object;
  #L1d8c30.  v4:= 2007I;
  #L1d8c34.  v5:= 1I;
  #L1d8c36.  v0:= v6 @kind object;
  #L1d8c38.  v2:= v7 @kind object;
  #L1d8c3a.  v3:= v8 @kind object;
  #L1d8c3c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/exoplayer2/upstream/HttpDataSource$HttpDataSourceException;.<init>:(Ljava/lang/String;Ljava/io/IOException;Lcom/google/android/exoplayer2/upstream/b0;II)V` @kind direct;
  #L1d8c42.  return @kind void;
}
