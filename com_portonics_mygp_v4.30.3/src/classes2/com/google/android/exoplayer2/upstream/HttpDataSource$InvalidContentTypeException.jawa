record `com.google.android.exoplayer2.upstream.HttpDataSource$InvalidContentTypeException` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException` @kind class {
  `java.lang.String` `com.google.android.exoplayer2.upstream.HttpDataSource$InvalidContentTypeException.contentType` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.google.android.exoplayer2.upstream.HttpDataSource$InvalidContentTypeException` v3 @kind this, `java.lang.String` v4 @kind object, `com.google.android.exoplayer2.upstream.b0` v5 @kind object) @signature `Lcom/google/android/exoplayer2/upstream/HttpDataSource$InvalidContentTypeException;.<init>:(Ljava/lang/String;Lcom/google/android/exoplayer2/upstream/b0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1d8e10.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1d8e16.  v0:= temp @kind object;
  #L1d8e18.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d8e1e.  v1:= temp;
  #L1d8e20.  v2:= "Invalid content type: " @kind object;
  #L1d8e24.  if v1 == 0 then goto L1d8e32;
  #L1d8e28.  call temp:= `concat`(v2, v0) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1d8e2e.  v0:= temp @kind object;
  #L1d8e30.  goto L1d8e3c;
  #L1d8e32.  v0:= new `java.lang.String`;
  #L1d8e36.  call `<init>`(v0, v2) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d8e3c.  v1:= 2003I;
  #L1d8e40.  v2:= 1I;
  #L1d8e42.  call `<init>`(v3, v0, v5, v1, v2) @signature `Lcom/google/android/exoplayer2/upstream/HttpDataSource$HttpDataSourceException;.<init>:(Ljava/lang/String;Lcom/google/android/exoplayer2/upstream/b0;II)V` @kind direct;
  #L1d8e48.  v3.`com.google.android.exoplayer2.upstream.HttpDataSource$InvalidContentTypeException.contentType` @type ^`java.lang.String` := v4 @kind object;
  #L1d8e4c.  return @kind void;
}
