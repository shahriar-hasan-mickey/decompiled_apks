record `com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser` @kind class @AccessFlag PUBLIC extends `com.google.android.exoplayer2.upstream.h1$a` @kind interface {
  `org.xmlpull.v1.XmlPullParserFactory` `com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser` v3 @kind this) @signature `Lcom/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1a8bfc.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a8c02.  call temp:= `newInstance`() @signature `Lorg/xmlpull/v1/XmlPullParserFactory;.newInstance:()Lorg/xmlpull/v1/XmlPullParserFactory;` @kind static;
  #L1a8c08.  v0:= temp @kind object;
  #L1a8c0a.  v3.`com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.a` @type ^`org.xmlpull.v1.XmlPullParserFactory` := v0 @kind object;
  #L1a8c0e.  return @kind void;
  #L1a8c10.  v0:= Exception @type ^`org.xmlpull.v1.XmlPullParserException` @kind object;
  #L1a8c12.  v1:= new `java.lang.RuntimeException`;
  #L1a8c16.  v2:= "Couldn't create XmlPullParserFactory instance" @kind object;
  #L1a8c1a.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1a8c20.  throw v1;
  catch `org.xmlpull.v1.XmlPullParserException` @[L1a8c02..L1a8c0e] goto L1a8c10;
}
procedure `java.lang.Object` `a`(`com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser` v0 @kind this, `android.net.Uri` v1 @kind object, `java.io.InputStream` v2 @kind object) @signature `Lcom/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser;.a:(Landroid/net/Uri;Ljava/io/InputStream;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1a8be0.  call temp:= `b`(v0, v1, v2) @signature `Lcom/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser;.b:(Landroid/net/Uri;Ljava/io/InputStream;)Lcom/google/android/exoplayer2/source/smoothstreaming/manifest/c;` @kind virtual;
  #L1a8be6.  v1:= temp @kind object;
  #L1a8be8.  return v1 @kind object;
}
procedure `com.google.android.exoplayer2.source.smoothstreaming.manifest.c` `b`(`com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser` v2 @kind this, `android.net.Uri` v3 @kind object, `java.io.InputStream` v4 @kind object) @signature `Lcom/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser;.b:(Landroid/net/Uri;Ljava/io/InputStream;)Lcom/google/android/exoplayer2/source/smoothstreaming/manifest/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a8b80.  v0:= 0I;
  #L1a8b82.  v1:= v2.`com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.a` @type ^`org.xmlpull.v1.XmlPullParserFactory` @kind object;
  #L1a8b86.  call temp:= `newPullParser`(v1) @signature `Lorg/xmlpull/v1/XmlPullParserFactory;.newPullParser:()Lorg/xmlpull/v1/XmlPullParser;` @kind virtual;
  #L1a8b8c.  v1:= temp @kind object;
  #L1a8b8e.  call `setInput`(v1, v4, v0) @signature `Lorg/xmlpull/v1/XmlPullParser;.setInput:(Ljava/io/InputStream;Ljava/lang/String;)V` @kind interface;
  #L1a8b94.  v4:= new `com.google.android.exoplayer2.source.smoothstreaming.manifest.g`;
  #L1a8b98.  call temp:= `toString`(v3) @signature `Landroid/net/Uri;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a8b9e.  v3:= temp @kind object;
  #L1a8ba0.  call `<init>`(v4, v0, v3) @signature `Lcom/google/android/exoplayer2/source/smoothstreaming/manifest/g;.<init>:(Lcom/google/android/exoplayer2/source/smoothstreaming/manifest/d;Ljava/lang/String;)V` @kind direct;
  #L1a8ba6.  call temp:= `f`(v4, v1) @signature `Lcom/google/android/exoplayer2/source/smoothstreaming/manifest/d;.f:(Lorg/xmlpull/v1/XmlPullParser;)Ljava/lang/Object;` @kind virtual;
  #L1a8bac.  v3:= temp @kind object;
  #L1a8bae.  v3:= (`com.google.android.exoplayer2.source.smoothstreaming.manifest.c`) v3 @kind object;
  #L1a8bb2.  return v3 @kind object;
  #L1a8bb4.  v3:= Exception @type ^`org.xmlpull.v1.XmlPullParserException` @kind object;
  #L1a8bb6.  call temp:= `createForMalformedManifest`(v0, v3) @signature `Lcom/google/android/exoplayer2/ParserException;.createForMalformedManifest:(Ljava/lang/String;Ljava/lang/Throwable;)Lcom/google/android/exoplayer2/ParserException;` @kind static;
  #L1a8bbc.  v3:= temp @kind object;
  #L1a8bbe.  throw v3;
  catch `org.xmlpull.v1.XmlPullParserException` @[L1a8b82..L1a8bb2] goto L1a8bb4;
}
