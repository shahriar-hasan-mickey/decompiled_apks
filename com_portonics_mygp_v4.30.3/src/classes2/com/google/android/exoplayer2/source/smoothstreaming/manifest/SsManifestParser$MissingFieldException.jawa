record `com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser$MissingFieldException` @kind class @AccessFlag PUBLIC extends `com.google.android.exoplayer2.ParserException` @kind class {
}
procedure `void` `<init>`(`com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser$MissingFieldException` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParser$MissingFieldException;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1a7ea0.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a7ea6.  v4:= temp @kind object;
  #L1a7ea8.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a7eae.  v0:= temp;
  #L1a7eb0.  v1:= "Missing required field: " @kind object;
  #L1a7eb4.  if v0 == 0 then goto L1a7ec2;
  #L1a7eb8.  call temp:= `concat`(v1, v4) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1a7ebe.  v4:= temp @kind object;
  #L1a7ec0.  goto L1a7ecc;
  #L1a7ec2.  v4:= new `java.lang.String`;
  #L1a7ec6.  call `<init>`(v4, v1) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a7ecc.  v0:= 0I;
  #L1a7ece.  v1:= 1I;
  #L1a7ed0.  v2:= 4I;
  #L1a7ed2.  call `<init>`(v3, v4, v0, v1, v2) @signature `Lcom/google/android/exoplayer2/ParserException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;ZI)V` @kind direct;
  #L1a7ed8.  return @kind void;
}
