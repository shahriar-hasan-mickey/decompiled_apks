record `com.nimbusds.jose.j.e` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `java.util.List` `a`(`net.minidev.json.JSONArray` v6 @kind object) @signature `Lcom/nimbusds/jose/j/e;.a:(Lnet/minidev/json/JSONArray;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L473894.  v0:= new `java.util.LinkedList`;
  #L473898.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L47389e.  v1:= 0I;
  #L4738a0.  v2:= 0I;
  #L4738a2.  call temp:= `size`(v6) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4738a8.  v3:= temp;
  #L4738aa.  if v2 >= v3 then goto L473948;
  #L4738ae.  call temp:= `get`(v6, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4738b4.  v3:= temp @kind object;
  #L4738b6.  v4:= "The X.509 certificate at position " @kind object;
  #L4738ba.  if v3 == 0 then goto L473914;
  #L4738be.  v5:= instanceof @variable v3 @type ^`java.lang.String` @kind boolean;
  #L4738c2.  if v5 == 0 then goto L4738e0;
  #L4738c6.  v4:= new `com.nimbusds.jose.j.a`;
  #L4738ca.  v3:= (`java.lang.String`) v3 @kind object;
  #L4738ce.  call `<init>`(v4, v3) @signature `Lcom/nimbusds/jose/j/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4738d4.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4738da.  v2:= v2 + 1;
  #L4738de.  goto L4738a2;
  #L4738e0.  v6:= new `java.text.ParseException`;
  #L4738e4.  v0:= new `java.lang.StringBuilder`;
  #L4738e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4738ee.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4738f4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4738fa.  v2:= " must be encoded as a Base64 string" @kind object;
  #L4738fe.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473904.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47390a.  v0:= temp @kind object;
  #L47390c.  call `<init>`(v6, v0, v1) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L473912.  throw v6;
  #L473914.  v6:= new `java.text.ParseException`;
  #L473918.  v0:= new `java.lang.StringBuilder`;
  #L47391c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L473922.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473928.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47392e.  v2:= " must not be null" @kind object;
  #L473932.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L473938.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47393e.  v0:= temp @kind object;
  #L473940.  call `<init>`(v6, v0, v1) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L473946.  throw v6;
  #L473948.  return v0 @kind object;
}
