record `com.nimbusds.jose.d` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `com.nimbusds.jose.Payload` `com.nimbusds.jose.d.a` @AccessFlag PRIVATE;
  `com.nimbusds.jose.j.c`[] `com.nimbusds.jose.d.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.nimbusds.jose.d` v1 @kind this) @signature `Lcom/nimbusds/jose/d;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L4707dc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4707e2.  v0:= 0I;
  #L4707e4.  v1.`com.nimbusds.jose.d.a` @type ^`com.nimbusds.jose.Payload` := v0 @kind object;
  #L4707e8.  v1.`com.nimbusds.jose.d.b` @type ^`com.nimbusds.jose.j.c`[] := v0 @kind object;
  #L4707ec.  return @kind void;
}
procedure `com.nimbusds.jose.j.c`[] `e`(`java.lang.String` v14 @kind object) @signature `Lcom/nimbusds/jose/d;.e:(Ljava/lang/String;)[Lcom/nimbusds/jose/j/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L4705f8.  v0:= "." @kind object;
  #L4705fc.  call temp:= `indexOf`(v14, v0) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L470602.  v1:= temp;
  #L470604.  v2:= -1I;
  #L470606.  v3:= 0I;
  #L470608.  if v1 == v2 then goto L47074a;
  #L47060c.  v4:= v1 + 1;
  #L470610.  call temp:= `indexOf`(v14, v0, v4) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L470616.  v5:= temp;
  #L470618.  if v5 == v2 then goto L47073a;
  #L47061c.  v6:= v5 + 1;
  #L470620.  call temp:= `indexOf`(v14, v0, v6) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L470626.  v7:= temp;
  #L470628.  v8:= 2I;
  #L47062a.  v9:= 3I;
  #L47062c.  v10:= 1I;
  #L47062e.  if v7 != v2 then goto L47067a;
  #L470632.  v0:= new `com.nimbusds.jose.j.c`[v9];
  #L470636.  v2:= new `com.nimbusds.jose.j.c`;
  #L47063a.  call temp:= `substring`(v14, v3, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L470640.  v1:= temp @kind object;
  #L470642.  call `<init>`(v2, v1) @signature `Lcom/nimbusds/jose/j/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L470648.  v0[v3]:= v2 @kind object;
  #L47064c.  v1:= new `com.nimbusds.jose.j.c`;
  #L470650.  call temp:= `substring`(v14, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L470656.  v2:= temp @kind object;
  #L470658.  call `<init>`(v1, v2) @signature `Lcom/nimbusds/jose/j/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47065e.  v0[v10]:= v1 @kind object;
  #L470662.  v1:= new `com.nimbusds.jose.j.c`;
  #L470666.  call temp:= `substring`(v14, v6) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L47066c.  v14:= temp @kind object;
  #L47066e.  call `<init>`(v1, v14) @signature `Lcom/nimbusds/jose/j/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L470674.  v0[v8]:= v1 @kind object;
  #L470678.  return v0 @kind object;
  #L47067a.  v11:= v7 + 1;
  #L47067e.  call temp:= `indexOf`(v14, v0, v11) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L470684.  v12:= temp;
  #L470686.  if v12 == v2 then goto L47072a;
  #L47068a.  if v12 == v2 then goto L4706b0;
  #L47068e.  v13:= v12 + 1;
  #L470692.  call temp:= `indexOf`(v14, v0, v13) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L470698.  v0:= temp;
  #L47069a.  if v0 != v2 then goto L4706a0;
  #L47069e.  goto L4706b0;
  #L4706a0.  v14:= new `java.text.ParseException`;
  #L4706a4.  v0:= "Invalid serialized plain/JWS/JWE object: Too many part delimiters" @kind object;
  #L4706a8.  call `<init>`(v14, v0, v3) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4706ae.  throw v14;
  #L4706b0.  v0:= 5I;
  #L4706b2.  v0:= new `com.nimbusds.jose.j.c`[v0];
  #L4706b6.  v2:= new `com.nimbusds.jose.j.c`;
  #L4706ba.  call temp:= `substring`(v14, v3, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4706c0.  v1:= temp @kind object;
  #L4706c2.  call `<init>`(v2, v1) @signature `Lcom/nimbusds/jose/j/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4706c8.  v0[v3]:= v2 @kind object;
  #L4706cc.  v1:= new `com.nimbusds.jose.j.c`;
  #L4706d0.  call temp:= `substring`(v14, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4706d6.  v2:= temp @kind object;
  #L4706d8.  call `<init>`(v1, v2) @signature `Lcom/nimbusds/jose/j/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4706de.  v0[v10]:= v1 @kind object;
  #L4706e2.  v1:= new `com.nimbusds.jose.j.c`;
  #L4706e6.  call temp:= `substring`(v14, v6, v7) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4706ec.  v2:= temp @kind object;
  #L4706ee.  call `<init>`(v1, v2) @signature `Lcom/nimbusds/jose/j/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4706f4.  v0[v8]:= v1 @kind object;
  #L4706f8.  v1:= new `com.nimbusds.jose.j.c`;
  #L4706fc.  call temp:= `substring`(v14, v11, v12) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L470702.  v2:= temp @kind object;
  #L470704.  call `<init>`(v1, v2) @signature `Lcom/nimbusds/jose/j/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47070a.  v0[v9]:= v1 @kind object;
  #L47070e.  v1:= 4I;
  #L470710.  v2:= new `com.nimbusds.jose.j.c`;
  #L470714.  v12:= v12 + v10 @kind int;
  #L470716.  call temp:= `substring`(v14, v12) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L47071c.  v14:= temp @kind object;
  #L47071e.  call `<init>`(v2, v14) @signature `Lcom/nimbusds/jose/j/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L470724.  v0[v1]:= v2 @kind object;
  #L470728.  return v0 @kind object;
  #L47072a.  v14:= new `java.text.ParseException`;
  #L47072e.  v0:= "Invalid serialized JWE object: Missing fourth delimiter" @kind object;
  #L470732.  call `<init>`(v14, v0, v3) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L470738.  throw v14;
  #L47073a.  v14:= new `java.text.ParseException`;
  #L47073e.  v0:= "Invalid serialized plain/JWS/JWE object: Missing second delimiter" @kind object;
  #L470742.  call `<init>`(v14, v0, v3) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L470748.  throw v14;
  #L47074a.  v14:= new `java.text.ParseException`;
  #L47074e.  v0:= "Invalid serialized plain/JWS/JWE object: Missing part delimiters" @kind object;
  #L470752.  call `<init>`(v14, v0, v3) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L470758.  throw v14;
}
procedure `java.lang.String` `a`(`com.nimbusds.jose.d` v6 @kind this) @signature `Lcom/nimbusds/jose/d;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47076c.  v0:= v6.`com.nimbusds.jose.d.b` @type ^`com.nimbusds.jose.j.c`[] @kind object;
  #L470770.  if v0 != 0 then goto L470778;
  #L470774.  v0:= 0I;
  #L470776.  return v0 @kind object;
  #L470778.  v0:= new `java.lang.StringBuilder`;
  #L47077c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L470782.  v1:= v6.`com.nimbusds.jose.d.b` @type ^`com.nimbusds.jose.j.c`[] @kind object;
  #L470786.  v2:= length @variable v1;
  #L470788.  v3:= 0I;
  #L47078a.  if v3 >= v2 then goto L4707c0;
  #L47078e.  v4:= v1[v3] @kind object;
  #L470792.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L470798.  v5:= temp;
  #L47079a.  if v5 <= 0 then goto L4707a8;
  #L47079e.  v5:= 46I;
  #L4707a2.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4707a8.  if v4 == 0 then goto L4707ba;
  #L4707ac.  call temp:= `toString`(v4) @signature `Lcom/nimbusds/jose/j/a;.toString:()Ljava/lang/String;` @kind virtual;
  #L4707b2.  v4:= temp @kind object;
  #L4707b4.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4707ba.  v3:= v3 + 1;
  #L4707be.  goto L47078a;
  #L4707c0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4707c6.  v0:= temp @kind object;
  #L4707c8.  return v0 @kind object;
}
procedure `com.nimbusds.jose.Payload` `b`(`com.nimbusds.jose.d` v1 @kind this) @signature `Lcom/nimbusds/jose/d;.b:()Lcom/nimbusds/jose/Payload;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4705e0.  v0:= v1.`com.nimbusds.jose.d.a` @type ^`com.nimbusds.jose.Payload` @kind object;
  #L4705e4.  return v0 @kind object;
}
procedure `void` `c`(`com.nimbusds.jose.d` v0 @kind this, `com.nimbusds.jose.j.c`[] v1 @kind object) @signature `Lcom/nimbusds/jose/d;.c:([Lcom/nimbusds/jose/j/c;)V` @AccessFlag PROTECTED {
    temp;

  #L470800.  v0.`com.nimbusds.jose.d.b` @type ^`com.nimbusds.jose.j.c`[] := v1 @kind object;
  #L470804.  return @kind void;
}
procedure `void` `d`(`com.nimbusds.jose.d` v0 @kind this, `com.nimbusds.jose.Payload` v1 @kind object) @signature `Lcom/nimbusds/jose/d;.d:(Lcom/nimbusds/jose/Payload;)V` @AccessFlag PROTECTED {
    temp;

  #L470818.  v0.`com.nimbusds.jose.d.a` @type ^`com.nimbusds.jose.Payload` := v1 @kind object;
  #L47081c.  return @kind void;
}
