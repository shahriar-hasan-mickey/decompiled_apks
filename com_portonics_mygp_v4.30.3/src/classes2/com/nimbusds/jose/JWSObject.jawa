record `com.nimbusds.jose.JWSObject` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.nimbusds.jose.d` @kind class {
  `com.nimbusds.jose.i` `com.nimbusds.jose.JWSObject.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.nimbusds.jose.JWSObject.d` @AccessFlag PRIVATE_FINAL;
  `com.nimbusds.jose.j.c` `com.nimbusds.jose.JWSObject.e` @AccessFlag PRIVATE;
  `com.nimbusds.jose.JWSObject$State` `com.nimbusds.jose.JWSObject.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.nimbusds.jose.JWSObject` v2 @kind this, `com.nimbusds.jose.j.c` v3 @kind object, `com.nimbusds.jose.j.c` v4 @kind object, `com.nimbusds.jose.j.c` v5 @kind object) @signature `Lcom/nimbusds/jose/JWSObject;.<init>:(Lcom/nimbusds/jose/j/c;Lcom/nimbusds/jose/j/c;Lcom/nimbusds/jose/j/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4715c8.  call `<init>`(v2) @signature `Lcom/nimbusds/jose/d;.<init>:()V` @kind direct;
  #L4715ce.  if v3 == 0 then goto L471686;
  #L4715d2.  v0:= 0I;
  #L4715d4.  call temp:= `d`(v3) @signature `Lcom/nimbusds/jose/i;.d:(Lcom/nimbusds/jose/j/c;)Lcom/nimbusds/jose/i;` @kind static;
  #L4715da.  v1:= temp @kind object;
  #L4715dc.  v2.`com.nimbusds.jose.JWSObject.c` @type ^`com.nimbusds.jose.i` := v1 @kind object;
  #L4715e0.  if v4 == 0 then goto L47163e;
  #L4715e4.  v1:= new `com.nimbusds.jose.Payload`;
  #L4715e8.  call `<init>`(v1, v4) @signature `Lcom/nimbusds/jose/Payload;.<init>:(Lcom/nimbusds/jose/j/c;)V` @kind direct;
  #L4715ee.  call `d`(v2, v1) @signature `Lcom/nimbusds/jose/d;.d:(Lcom/nimbusds/jose/Payload;)V` @kind virtual;
  #L4715f4.  call temp:= `f`(v3, v4) @signature `Lcom/nimbusds/jose/JWSObject;.f:(Lcom/nimbusds/jose/j/c;Lcom/nimbusds/jose/j/c;)Ljava/lang/String;` @kind static;
  #L4715fa.  v1:= temp @kind object;
  #L4715fc.  v2.`com.nimbusds.jose.JWSObject.d` @type ^`java.lang.String` := v1 @kind object;
  #L471600.  if v5 == 0 then goto L47162e;
  #L471604.  v2.`com.nimbusds.jose.JWSObject.e` @type ^`com.nimbusds.jose.j.c` := v5 @kind object;
  #L471608.  v1:= `@@com.nimbusds.jose.JWSObject$State.SIGNED` @type ^`com.nimbusds.jose.JWSObject$State` @kind object;
  #L47160c.  v2.`com.nimbusds.jose.JWSObject.f` @type ^`com.nimbusds.jose.JWSObject$State` := v1 @kind object;
  #L471610.  v1:= 3I;
  #L471612.  v1:= new `com.nimbusds.jose.j.c`[v1];
  #L471616.  v1[v0]:= v3 @kind object;
  #L47161a.  v3:= 1I;
  #L47161c.  v1[v3]:= v4 @kind object;
  #L471620.  v3:= 2I;
  #L471622.  v1[v3]:= v5 @kind object;
  #L471626.  call `c`(v2, v1) @signature `Lcom/nimbusds/jose/d;.c:([Lcom/nimbusds/jose/j/c;)V` @kind virtual;
  #L47162c.  return @kind void;
  #L47162e.  v3:= new `java.lang.IllegalArgumentException`;
  #L471632.  v4:= "The third part must not be null" @kind object;
  #L471636.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47163c.  throw v3;
  #L47163e.  v3:= new `java.lang.IllegalArgumentException`;
  #L471642.  v4:= "The second part must not be null" @kind object;
  #L471646.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47164c.  throw v3;
  #L47164e.  v3:= Exception @type ^`java.text.ParseException` @kind object;
  #L471650.  v4:= new `java.text.ParseException`;
  #L471654.  v5:= new `java.lang.StringBuilder`;
  #L471658.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47165e.  v1:= "Invalid JWS header: " @kind object;
  #L471662.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L471668.  call temp:= `getMessage`(v3) @signature `Ljava/text/ParseException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L47166e.  v3:= temp @kind object;
  #L471670.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L471676.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47167c.  v3:= temp @kind object;
  #L47167e.  call `<init>`(v4, v3, v0) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L471684.  throw v4;
  #L471686.  v3:= new `java.lang.IllegalArgumentException`;
  #L47168a.  v4:= "The first part must not be null" @kind object;
  #L47168e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L471694.  throw v3;
  catch `java.text.ParseException` @[L4715d4..L4715e0] goto L47164e;
}
procedure `java.lang.String` `f`(`com.nimbusds.jose.j.c` v1 @kind object, `com.nimbusds.jose.j.c` v2 @kind object) @signature `Lcom/nimbusds/jose/JWSObject;.f:(Lcom/nimbusds/jose/j/c;Lcom/nimbusds/jose/j/c;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L471538.  v0:= new `java.lang.StringBuilder`;
  #L47153c.  call temp:= `toString`(v1) @signature `Lcom/nimbusds/jose/j/a;.toString:()Ljava/lang/String;` @kind virtual;
  #L471542.  v1:= temp @kind object;
  #L471544.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47154a.  v1:= 46I;
  #L47154e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L471554.  call temp:= `toString`(v2) @signature `Lcom/nimbusds/jose/j/a;.toString:()Ljava/lang/String;` @kind virtual;
  #L47155a.  v1:= temp @kind object;
  #L47155c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L471562.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L471568.  v1:= temp @kind object;
  #L47156a.  return v1 @kind object;
}
procedure `void` `g`(`com.nimbusds.jose.JWSObject` v2 @kind this) @signature `Lcom/nimbusds/jose/JWSObject;.g:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4716b8.  v0:= v2.`com.nimbusds.jose.JWSObject.f` @type ^`com.nimbusds.jose.JWSObject$State` @kind object;
  #L4716bc.  v1:= `@@com.nimbusds.jose.JWSObject$State.SIGNED` @type ^`com.nimbusds.jose.JWSObject$State` @kind object;
  #L4716c0.  if v0 == v1 then goto L4716de;
  #L4716c4.  v1:= `@@com.nimbusds.jose.JWSObject$State.VERIFIED` @type ^`com.nimbusds.jose.JWSObject$State` @kind object;
  #L4716c8.  if v0 != v1 then goto L4716ce;
  #L4716cc.  goto L4716de;
  #L4716ce.  v0:= new `java.lang.IllegalStateException`;
  #L4716d2.  v1:= "The JWS object must be in a signed or verified state" @kind object;
  #L4716d6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4716dc.  throw v0;
  #L4716de.  return @kind void;
}
procedure `java.lang.String` `h`(`com.nimbusds.jose.JWSObject` v2 @kind this) @signature `Lcom/nimbusds/jose/JWSObject;.h:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47157c.  call `g`(v2) @signature `Lcom/nimbusds/jose/JWSObject;.g:()V` @kind direct;
  #L471582.  v0:= new `java.lang.StringBuilder`;
  #L471586.  v1:= v2.`com.nimbusds.jose.JWSObject.d` @type ^`java.lang.String` @kind object;
  #L47158a.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L471590.  v1:= 46I;
  #L471594.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L47159a.  v1:= v2.`com.nimbusds.jose.JWSObject.e` @type ^`com.nimbusds.jose.j.c` @kind object;
  #L47159e.  call temp:= `toString`(v1) @signature `Lcom/nimbusds/jose/j/a;.toString:()Ljava/lang/String;` @kind virtual;
  #L4715a4.  v1:= temp @kind object;
  #L4715a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4715ac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4715b2.  v0:= temp @kind object;
  #L4715b4.  return v0 @kind object;
}
