record `com.nimbusds.jose.c` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `com.nimbusds.jose.a` `com.nimbusds.jose.c.b` @AccessFlag PRIVATE_FINAL;
  `com.nimbusds.jose.e` `com.nimbusds.jose.c.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.nimbusds.jose.c.d` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.nimbusds.jose.c.e` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.nimbusds.jose.c.f` @AccessFlag PRIVATE_FINAL;
  `com.nimbusds.jose.j.c` `com.nimbusds.jose.c.g` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Map` `@@com.nimbusds.jose.c.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/nimbusds/jose/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4703cc.  v0:= new `java.util.HashMap`;
  #L4703d0.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4703d6.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L4703dc.  v0:= temp @kind object;
  #L4703de.  `@@com.nimbusds.jose.c.a` @type ^`java.util.Map` := v0 @kind object;
  #L4703e2.  return @kind void;
}
procedure `void` `<init>`(`com.nimbusds.jose.c` v0 @kind this, `com.nimbusds.jose.a` v1 @kind object, `com.nimbusds.jose.e` v2 @kind object, `java.lang.String` v3 @kind object, `java.util.Set` v4 @kind object, `java.util.Map` v5 @kind object, `com.nimbusds.jose.j.c` v6 @kind object) @signature `Lcom/nimbusds/jose/c;.<init>:(Lcom/nimbusds/jose/a;Lcom/nimbusds/jose/e;Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Lcom/nimbusds/jose/j/c;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L4703f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4703fa.  if v1 == 0 then goto L470456;
  #L4703fe.  v0.`com.nimbusds.jose.c.b` @type ^`com.nimbusds.jose.a` := v1 @kind object;
  #L470402.  v0.`com.nimbusds.jose.c.c` @type ^`com.nimbusds.jose.e` := v2 @kind object;
  #L470406.  v0.`com.nimbusds.jose.c.d` @type ^`java.lang.String` := v3 @kind object;
  #L47040a.  if v4 == 0 then goto L470426;
  #L47040e.  v1:= new `java.util.HashSet`;
  #L470412.  call `<init>`(v1, v4) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L470418.  call temp:= `unmodifiableSet`(v1) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L47041e.  v1:= temp @kind object;
  #L470420.  v0.`com.nimbusds.jose.c.e` @type ^`java.util.Set` := v1 @kind object;
  #L470424.  goto L47042c;
  #L470426.  v1:= 0I;
  #L470428.  v0.`com.nimbusds.jose.c.e` @type ^`java.util.Set` := v1 @kind object;
  #L47042c.  if v5 == 0 then goto L470448;
  #L470430.  v1:= new `java.util.HashMap`;
  #L470434.  call `<init>`(v1, v5) @signature `Ljava/util/HashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L47043a.  call temp:= `unmodifiableMap`(v1) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L470440.  v1:= temp @kind object;
  #L470442.  v0.`com.nimbusds.jose.c.f` @type ^`java.util.Map` := v1 @kind object;
  #L470446.  goto L470450;
  #L470448.  v1:= `@@com.nimbusds.jose.c.a` @type ^`java.util.Map` @kind object;
  #L47044c.  v0.`com.nimbusds.jose.c.f` @type ^`java.util.Map` := v1 @kind object;
  #L470450.  v0.`com.nimbusds.jose.c.g` @type ^`com.nimbusds.jose.j.c` := v6 @kind object;
  #L470454.  return @kind void;
  #L470456.  v1:= new `java.lang.IllegalArgumentException`;
  #L47045a.  v2:= "The algorithm \"alg\" header parameter must not be null" @kind object;
  #L47045e.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L470464.  throw v1;
}
procedure `com.nimbusds.jose.a` `a`(`net.minidev.json.JSONObject` v3 @kind object) @signature `Lcom/nimbusds/jose/c;.a:(Lnet/minidev/json/JSONObject;)Lcom/nimbusds/jose/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4702bc.  v0:= "alg" @kind object;
  #L4702c0.  call temp:= `e`(v3, v0) @signature `Lcom/nimbusds/jose/j/d;.e:(Lnet/minidev/json/JSONObject;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4702c6.  v0:= temp @kind object;
  #L4702c8.  v1:= `@@com.nimbusds.jose.a.b` @type ^`com.nimbusds.jose.a` @kind object;
  #L4702cc.  call temp:= `a`(v1) @signature `Lcom/nimbusds/jose/a;.a:()Ljava/lang/String;` @kind virtual;
  #L4702d2.  v2:= temp @kind object;
  #L4702d4.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4702da.  v2:= temp;
  #L4702dc.  if v2 == 0 then goto L4702e2;
  #L4702e0.  return v1 @kind object;
  #L4702e2.  v1:= "enc" @kind object;
  #L4702e6.  call temp:= `containsKey`(v3, v1) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L4702ec.  v3:= temp;
  #L4702ee.  if v3 == 0 then goto L4702fc;
  #L4702f2.  call temp:= `b`(v0) @signature `Lcom/nimbusds/jose/f;.b:(Ljava/lang/String;)Lcom/nimbusds/jose/f;` @kind static;
  #L4702f8.  v3:= temp @kind object;
  #L4702fa.  return v3 @kind object;
  #L4702fc.  call temp:= `b`(v0) @signature `Lcom/nimbusds/jose/g;.b:(Ljava/lang/String;)Lcom/nimbusds/jose/g;` @kind static;
  #L470302.  v3:= temp @kind object;
  #L470304.  return v3 @kind object;
}
procedure `net.minidev.json.JSONObject` `b`(`com.nimbusds.jose.c` v3 @kind this) @signature `Lcom/nimbusds/jose/c;.b:()Lnet/minidev/json/JSONObject;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47033c.  v0:= new `net.minidev.json.JSONObject`;
  #L470340.  v1:= v3.`com.nimbusds.jose.c.f` @type ^`java.util.Map` @kind object;
  #L470344.  call `<init>`(v0, v1) @signature `Lnet/minidev/json/JSONObject;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L47034a.  v1:= v3.`com.nimbusds.jose.c.b` @type ^`com.nimbusds.jose.a` @kind object;
  #L47034e.  call temp:= `toString`(v1) @signature `Lcom/nimbusds/jose/a;.toString:()Ljava/lang/String;` @kind virtual;
  #L470354.  v1:= temp @kind object;
  #L470356.  v2:= "alg" @kind object;
  #L47035a.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L470360.  v1:= v3.`com.nimbusds.jose.c.c` @type ^`com.nimbusds.jose.e` @kind object;
  #L470364.  if v1 == 0 then goto L47037a;
  #L470368.  call temp:= `toString`(v1) @signature `Lcom/nimbusds/jose/e;.toString:()Ljava/lang/String;` @kind virtual;
  #L47036e.  v1:= temp @kind object;
  #L470370.  v2:= "typ" @kind object;
  #L470374.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L47037a.  v1:= v3.`com.nimbusds.jose.c.d` @type ^`java.lang.String` @kind object;
  #L47037e.  if v1 == 0 then goto L47038c;
  #L470382.  v2:= "cty" @kind object;
  #L470386.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L47038c.  v1:= v3.`com.nimbusds.jose.c.e` @type ^`java.util.Set` @kind object;
  #L470390.  if v1 == 0 then goto L4703b8;
  #L470394.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L47039a.  v1:= temp;
  #L47039c.  if v1 != 0 then goto L4703b8;
  #L4703a0.  v1:= new `java.util.ArrayList`;
  #L4703a4.  v2:= v3.`com.nimbusds.jose.c.e` @type ^`java.util.Set` @kind object;
  #L4703a8.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4703ae.  v2:= "crit" @kind object;
  #L4703b2.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4703b8.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.nimbusds.jose.c` v1 @kind this) @signature `Lcom/nimbusds/jose/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L470318.  call temp:= `b`(v1) @signature `Lcom/nimbusds/jose/c;.b:()Lnet/minidev/json/JSONObject;` @kind virtual;
  #L47031e.  v0:= temp @kind object;
  #L470320.  call temp:= `toString`(v0) @signature `Lnet/minidev/json/JSONObject;.toString:()Ljava/lang/String;` @kind virtual;
  #L470326.  v0:= temp @kind object;
  #L470328.  return v0 @kind object;
}
