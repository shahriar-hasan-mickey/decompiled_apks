record `androidx.room.z1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.CoroutineContext$Element` @kind interface {
  `java.util.concurrent.atomic.AtomicInteger` `androidx.room.z1.c` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.z1` `androidx.room.z1.d` @AccessFlag PRIVATE_FINAL;
  `kotlin.coroutines.ContinuationInterceptor` `androidx.room.z1.e` @AccessFlag PRIVATE_FINAL;
}
global `androidx.room.y1` `@@androidx.room.z1.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/room/z1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.room.z1` v1 @kind this, `kotlinx.coroutines.z1` v2 @kind object, `kotlin.coroutines.ContinuationInterceptor` v3 @kind object) @signature `Landroidx/room/z1;.<init>:(Lkotlinx/coroutines/z1;Lkotlin/coroutines/ContinuationInterceptor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `b`(`androidx.room.z1` v1 @kind this) @signature `Landroidx/room/z1;.b:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `kotlin.coroutines.ContinuationInterceptor` `c`(`androidx.room.z1` v1 @kind this) @signature `Landroidx/room/z1;.c:()Lkotlin/coroutines/ContinuationInterceptor;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `e`(`androidx.room.z1` v3 @kind this) @signature `Landroidx/room/z1;.e:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `fold`(`androidx.room.z1` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Landroidx/room/z1;.fold:(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`androidx.room.z1` v1 @kind this, `kotlin.coroutines.CoroutineContext$Key` v2 @kind object) @signature `Landroidx/room/z1;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC {

  # return;
}
procedure `kotlin.coroutines.CoroutineContext$Key` `getKey`(`androidx.room.z1` v1 @kind this) @signature `Landroidx/room/z1;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @AccessFlag PUBLIC {

  # return;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`androidx.room.z1` v1 @kind this, `kotlin.coroutines.CoroutineContext$Key` v2 @kind object) @signature `Landroidx/room/z1;.minusKey:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {

  # return;
}
procedure `kotlin.coroutines.CoroutineContext` `plus`(`androidx.room.z1` v1 @kind this, `kotlin.coroutines.CoroutineContext` v2 @kind object) @signature `Landroidx/room/z1;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {

  # return;
}
