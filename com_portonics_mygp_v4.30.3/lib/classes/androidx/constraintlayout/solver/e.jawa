record `androidx.constraintlayout.solver.e` @kind interface @AccessFlag ABSTRACT_INTERFACE {
}
procedure `void` `a`(`androidx.constraintlayout.solver.SolverVariable` v0 @kind object) @signature `Landroidx/constraintlayout/solver/e;.a:(Landroidx/constraintlayout/solver/SolverVariable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `androidx.constraintlayout.solver.SolverVariable` `b`(`androidx.constraintlayout.solver.g` v0 @kind object, `boolean`[] v1 @kind object) @signature `Landroidx/constraintlayout/solver/e;.b:(Landroidx/constraintlayout/solver/g;[Z)Landroidx/constraintlayout/solver/SolverVariable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `c`(`androidx.constraintlayout.solver.e` v0 @kind object) @signature `Landroidx/constraintlayout/solver/e;.c:(Landroidx/constraintlayout/solver/e;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `clear`() @signature `Landroidx/constraintlayout/solver/e;.clear:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `androidx.constraintlayout.solver.SolverVariable` `getKey`() @signature `Landroidx/constraintlayout/solver/e;.getKey:()Landroidx/constraintlayout/solver/SolverVariable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEmpty`() @signature `Landroidx/constraintlayout/solver/e;.isEmpty:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
