record `androidx.constraintlayout.solver.k` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
  `androidx.constraintlayout.solver.m` `androidx.constraintlayout.solver.k.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`androidx.constraintlayout.solver.k` v0 @kind this, `androidx.constraintlayout.solver.m` v1 @kind object) @signature `Landroidx/constraintlayout/solver/k;.<init>:(Landroidx/constraintlayout/solver/m;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`androidx.constraintlayout.solver.k` v0 @kind this, `androidx.constraintlayout.solver.SolverVariable` v1 @kind object, `androidx.constraintlayout.solver.SolverVariable` v2 @kind object) @signature `Landroidx/constraintlayout/solver/k;.a:(Landroidx/constraintlayout/solver/SolverVariable;Landroidx/constraintlayout/solver/SolverVariable;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compare`(`androidx.constraintlayout.solver.k` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Landroidx/constraintlayout/solver/k;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
