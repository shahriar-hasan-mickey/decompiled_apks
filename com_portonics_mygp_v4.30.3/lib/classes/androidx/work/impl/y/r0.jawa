record `androidx.work.impl.y.r0` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `int` `a`(`androidx.work.BackoffPolicy` v3 @kind object) @signature `Landroidx/work/impl/y/r0;.a:(Landroidx/work/BackoffPolicy;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `androidx.work.f` `b`(`byte`[] v6 @kind object) @signature `Landroidx/work/impl/y/r0;.b:([B)Landroidx/work/f;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `c`(`androidx.work.f` v4 @kind object) @signature `Landroidx/work/impl/y/r0;.c:(Landroidx/work/f;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `androidx.work.BackoffPolicy` `d`(`int` v3 ) @signature `Landroidx/work/impl/y/r0;.d:(I)Landroidx/work/BackoffPolicy;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `androidx.work.NetworkType` `e`(`int` v3 ) @signature `Landroidx/work/impl/y/r0;.e:(I)Landroidx/work/NetworkType;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `androidx.work.OutOfQuotaPolicy` `f`(`int` v3 ) @signature `Landroidx/work/impl/y/r0;.f:(I)Landroidx/work/OutOfQuotaPolicy;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `androidx.work.WorkInfo$State` `g`(`int` v3 ) @signature `Landroidx/work/impl/y/r0;.g:(I)Landroidx/work/WorkInfo$State;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `h`(`androidx.work.NetworkType` v3 @kind object) @signature `Landroidx/work/impl/y/r0;.h:(Landroidx/work/NetworkType;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `i`(`androidx.work.OutOfQuotaPolicy` v3 @kind object) @signature `Landroidx/work/impl/y/r0;.i:(Landroidx/work/OutOfQuotaPolicy;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `j`(`androidx.work.WorkInfo$State` v3 @kind object) @signature `Landroidx/work/impl/y/r0;.j:(Landroidx/work/WorkInfo$State;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
