record `androidx.work.impl.utils.futures.AbstractFuture` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.util.concurrent.a0` @kind interface {
  `java.lang.Object` `androidx.work.impl.utils.futures.AbstractFuture.f` @AccessFlag VOLATILE;
  `androidx.work.impl.utils.futures.d` `androidx.work.impl.utils.futures.AbstractFuture.g` @AccessFlag VOLATILE;
  `androidx.work.impl.utils.futures.h` `androidx.work.impl.utils.futures.AbstractFuture.h` @AccessFlag VOLATILE;
}
global `boolean` `@@androidx.work.impl.utils.futures.AbstractFuture.b` @AccessFlag STATIC_FINAL;
global `java.util.logging.Logger` `@@androidx.work.impl.utils.futures.AbstractFuture.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `androidx.work.impl.utils.futures.b` `@@androidx.work.impl.utils.futures.AbstractFuture.d` @AccessFlag STATIC_FINAL;
global `java.lang.Object` `@@androidx.work.impl.utils.futures.AbstractFuture.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.work.impl.utils.futures.AbstractFuture` v0 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`androidx.work.impl.utils.futures.AbstractFuture` v3 @kind this, `java.lang.StringBuilder` v4 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.a:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.concurrent.CancellationException` `c`(`java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.c:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `e`(`java.lang.Object` v0 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `androidx.work.impl.utils.futures.d` `f`(`androidx.work.impl.utils.futures.AbstractFuture` v4 @kind this, `androidx.work.impl.utils.futures.d` v5 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.f:(Landroidx/work/impl/utils/futures/d;)Landroidx/work/impl/utils/futures/d;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `g`(`androidx.work.impl.utils.futures.AbstractFuture` v4 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.g:(Landroidx/work/impl/utils/futures/AbstractFuture;)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `h`(`java.lang.Runnable` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.h:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `i`(`androidx.work.impl.utils.futures.AbstractFuture` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `j`(`com.google.common.util.concurrent.a0` v5 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.j:(Lcom/google/common/util/concurrent/a0;)Ljava/lang/Object;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Object` `k`(`java.util.concurrent.Future` v1 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.k:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `n`(`androidx.work.impl.utils.futures.AbstractFuture` v3 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.n:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `o`(`androidx.work.impl.utils.futures.AbstractFuture` v4 @kind this, `androidx.work.impl.utils.futures.h` v5 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.o:(Landroidx/work/impl/utils/futures/h;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `s`(`androidx.work.impl.utils.futures.AbstractFuture` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.s:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `b`(`androidx.work.impl.utils.futures.AbstractFuture` v0 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.b:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `cancel`(`androidx.work.impl.utils.futures.AbstractFuture` v7 @kind this, `boolean` v8 ) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.cancel:(Z)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `d`(`androidx.work.impl.utils.futures.AbstractFuture` v3 @kind this, `java.lang.Runnable` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.d:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `get`(`androidx.work.impl.utils.futures.AbstractFuture` v6 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `get`(`androidx.work.impl.utils.futures.AbstractFuture` v19 @kind this, `long` v20 , `java.util.concurrent.TimeUnit` v22 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `isCancelled`(`androidx.work.impl.utils.futures.AbstractFuture` v1 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.isCancelled:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `isDone`(`androidx.work.impl.utils.futures.AbstractFuture` v3 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.isDone:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `l`(`androidx.work.impl.utils.futures.AbstractFuture` v0 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.l:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `m`(`androidx.work.impl.utils.futures.AbstractFuture` v3 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.m:()Ljava/lang/String;` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `p`(`androidx.work.impl.utils.futures.AbstractFuture` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.p:(Ljava/lang/Object;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `q`(`androidx.work.impl.utils.futures.AbstractFuture` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.q:(Ljava/lang/Throwable;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `r`(`androidx.work.impl.utils.futures.AbstractFuture` v5 @kind this, `com.google.common.util.concurrent.a0` v6 @kind object) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.r:(Lcom/google/common/util/concurrent/a0;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `toString`(`androidx.work.impl.utils.futures.AbstractFuture` v5 @kind this) @signature `Landroidx/work/impl/utils/futures/AbstractFuture;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
