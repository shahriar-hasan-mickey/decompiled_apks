record `androidx.work.impl.utils.futures.i` @kind class @AccessFlag PUBLIC_FINAL extends `androidx.work.impl.utils.futures.AbstractFuture` @kind class {
}
procedure `void` `<init>`(`androidx.work.impl.utils.futures.i` v0 @kind this) @signature `Landroidx/work/impl/utils/futures/i;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `androidx.work.impl.utils.futures.i` `t`() @signature `Landroidx/work/impl/utils/futures/i;.t:()Landroidx/work/impl/utils/futures/i;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `p`(`androidx.work.impl.utils.futures.i` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Landroidx/work/impl/utils/futures/i;.p:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `q`(`androidx.work.impl.utils.futures.i` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Landroidx/work/impl/utils/futures/i;.q:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `r`(`androidx.work.impl.utils.futures.i` v0 @kind this, `com.google.common.util.concurrent.a0` v1 @kind object) @signature `Landroidx/work/impl/utils/futures/i;.r:(Lcom/google/common/util/concurrent/a0;)Z` @AccessFlag PUBLIC {

  # return;
}
