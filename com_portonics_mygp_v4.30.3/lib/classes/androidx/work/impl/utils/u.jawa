record `androidx.work.impl.utils.u` @kind class @AccessFlag  extends `java.util.concurrent.ThreadFactory` @kind interface {
  `int` `androidx.work.impl.utils.u.b` @AccessFlag PRIVATE;
  `androidx.work.impl.utils.x` `androidx.work.impl.utils.u.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`androidx.work.impl.utils.u` v0 @kind this, `androidx.work.impl.utils.x` v1 @kind object) @signature `Landroidx/work/impl/utils/u;.<init>:(Landroidx/work/impl/utils/x;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Thread` `newThread`(`androidx.work.impl.utils.u` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Landroidx/work/impl/utils/u;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {

  # return;
}
