record `androidx.work.a` @kind class @AccessFlag  extends `java.util.concurrent.ThreadFactory` @kind interface {
  `java.util.concurrent.atomic.AtomicInteger` `androidx.work.a.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `androidx.work.a.c` @AccessFlag FINAL_SYNTHETIC;
  `androidx.work.b` `androidx.work.a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`androidx.work.a` v0 @kind this, `androidx.work.b` v1 @kind object, `boolean` v2 ) @signature `Landroidx/work/a;.<init>:(Landroidx/work/b;Z)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Thread` `newThread`(`androidx.work.a` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Landroidx/work/a;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {

  # return;
}
