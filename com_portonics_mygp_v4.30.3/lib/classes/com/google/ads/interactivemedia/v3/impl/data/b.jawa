record `com.google.ads.interactivemedia.v3.impl.data.b` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`com.google.ads.interactivemedia.v3.impl.data.b` v0 @kind this) @signature `Lcom/google/ads/interactivemedia/v3/impl/data/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.ads.interactivemedia.v3.impl.data.a` `builder`() @signature `Lcom/google/ads/interactivemedia/v3/impl/data/b;.builder:()Lcom/google/ads/interactivemedia/v3/impl/data/a;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `appState`() @signature `Lcom/google/ads/interactivemedia/v3/impl/data/b;.appState:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `eventId`() @signature `Lcom/google/ads/interactivemedia/v3/impl/data/b;.eventId:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `nativeTime`() @signature `Lcom/google/ads/interactivemedia/v3/impl/data/b;.nativeTime:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.ads.interactivemedia.v3.impl.data.as` `nativeViewBounds`() @signature `Lcom/google/ads/interactivemedia/v3/impl/data/b;.nativeViewBounds:()Lcom/google/ads/interactivemedia/v3/impl/data/as;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `nativeViewHidden`() @signature `Lcom/google/ads/interactivemedia/v3/impl/data/b;.nativeViewHidden:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.ads.interactivemedia.v3.impl.data.as` `nativeViewVisibleBounds`() @signature `Lcom/google/ads/interactivemedia/v3/impl/data/b;.nativeViewVisibleBounds:()Lcom/google/ads/interactivemedia/v3/impl/data/as;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `double` `nativeVolume`() @signature `Lcom/google/ads/interactivemedia/v3/impl/data/b;.nativeVolume:()D` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `queryId`() @signature `Lcom/google/ads/interactivemedia/v3/impl/data/b;.queryId:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
