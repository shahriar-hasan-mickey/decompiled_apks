record `com.google.protobuf.q` @kind class @AccessFlag FINAL {
  `com.google.protobuf.l0` `com.google.protobuf.q.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.protobuf.q.c` @AccessFlag PRIVATE;
  `boolean` `com.google.protobuf.q.d` @AccessFlag PRIVATE;
}
global `com.google.protobuf.q` `@@com.google.protobuf.q.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/protobuf/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.protobuf.q` v1 @kind this) @signature `Lcom/google/protobuf/q;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.protobuf.q` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/protobuf/q;.<init>:(Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `int` `b`(`com.google.protobuf.WireFormat$FieldType` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lcom/google/protobuf/q;.b:(Lcom/google/protobuf/WireFormat$FieldType;ILjava/lang/Object;)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `c`(`com.google.protobuf.WireFormat$FieldType` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/protobuf/q;.c:(Lcom/google/protobuf/WireFormat$FieldType;Ljava/lang/Object;)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `d`(`com.google.protobuf.WireFormat$FieldType` v0 @kind object, `boolean` v1 ) @signature `Lcom/google/protobuf/q;.d:(Lcom/google/protobuf/WireFormat$FieldType;Z)I` @AccessFlag STATIC {

  # return;
}
procedure `com.google.protobuf.q` `f`() @signature `Lcom/google/protobuf/q;.f:()Lcom/google/protobuf/q;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `g`(`com.google.protobuf.h` v0 @kind object, `com.google.protobuf.WireFormat$FieldType` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/protobuf/q;.g:(Lcom/google/protobuf/h;Lcom/google/protobuf/WireFormat$FieldType;Z)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `i`(`com.google.protobuf.WireFormat$FieldType` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/protobuf/q;.i:(Lcom/google/protobuf/WireFormat$FieldType;Ljava/lang/Object;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `j`(`com.google.protobuf.CodedOutputStream` v1 @kind object, `com.google.protobuf.WireFormat$FieldType` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/google/protobuf/q;.j:(Lcom/google/protobuf/CodedOutputStream;Lcom/google/protobuf/WireFormat$FieldType;ILjava/lang/Object;)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `k`(`com.google.protobuf.CodedOutputStream` v1 @kind object, `com.google.protobuf.WireFormat$FieldType` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/protobuf/q;.k:(Lcom/google/protobuf/CodedOutputStream;Lcom/google/protobuf/WireFormat$FieldType;Ljava/lang/Object;)V` @AccessFlag STATIC {

  # return;
}
procedure `com.google.protobuf.q` `a`(`com.google.protobuf.q` v4 @kind this) @signature `Lcom/google/protobuf/q;.a:()Lcom/google/protobuf/q;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `clone`(`com.google.protobuf.q` v1 @kind this) @signature `Lcom/google/protobuf/q;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `e`(`com.google.protobuf.q` v1 @kind this) @signature `Lcom/google/protobuf/q;.e:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.protobuf.q` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/protobuf/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `h`(`com.google.protobuf.q` v3 @kind this, `com.google.protobuf.p` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/google/protobuf/q;.h:(Lcom/google/protobuf/p;Ljava/lang/Object;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.protobuf.q` v1 @kind this) @signature `Lcom/google/protobuf/q;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
