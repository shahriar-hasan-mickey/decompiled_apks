record `com.google.protobuf.l0$c` @kind class @AccessFlag  extends `java.util.AbstractSet` @kind class {
  `com.google.protobuf.l0` `com.google.protobuf.l0$c.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.protobuf.l0$c` v0 @kind this, `com.google.protobuf.l0` v1 @kind object) @signature `Lcom/google/protobuf/l0$c;.<init>:(Lcom/google/protobuf/l0;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.protobuf.l0$c` v0 @kind this, `com.google.protobuf.l0` v1 @kind object, `com.google.protobuf.h0` v2 @kind object) @signature `Lcom/google/protobuf/l0$c;.<init>:(Lcom/google/protobuf/l0;Lcom/google/protobuf/h0;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `a`(`com.google.protobuf.l0$c` v2 @kind this, `java.util.Map$Entry` v3 @kind object) @signature `Lcom/google/protobuf/l0$c;.a:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `add`(`com.google.protobuf.l0$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/protobuf/l0$c;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `clear`(`com.google.protobuf.l0$c` v1 @kind this) @signature `Lcom/google/protobuf/l0$c;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`com.google.protobuf.l0$c` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/protobuf/l0$c;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.protobuf.l0$c` v3 @kind this) @signature `Lcom/google/protobuf/l0$c;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `remove`(`com.google.protobuf.l0$c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/protobuf/l0$c;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.protobuf.l0$c` v1 @kind this) @signature `Lcom/google/protobuf/l0$c;.size:()I` @AccessFlag PUBLIC {

  # return;
}
