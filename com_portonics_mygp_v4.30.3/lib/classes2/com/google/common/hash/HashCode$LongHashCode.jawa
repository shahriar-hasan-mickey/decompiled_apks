record `com.google.common.hash.HashCode$LongHashCode` @kind class @AccessFlag FINAL extends `com.google.common.hash.HashCode` @kind class, `java.io.Serializable` @kind interface {
  `long` `com.google.common.hash.HashCode$LongHashCode.hash` @AccessFlag FINAL;
}
global `long` `@@com.google.common.hash.HashCode$LongHashCode.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.hash.HashCode$LongHashCode` v0 @kind this, `long` v1 ) @signature `Lcom/google/common/hash/HashCode$LongHashCode;.<init>:(J)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `byte`[] `asBytes`(`com.google.common.hash.HashCode$LongHashCode` v6 @kind this) @signature `Lcom/google/common/hash/HashCode$LongHashCode;.asBytes:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `asInt`(`com.google.common.hash.HashCode$LongHashCode` v2 @kind this) @signature `Lcom/google/common/hash/HashCode$LongHashCode;.asInt:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `asLong`(`com.google.common.hash.HashCode$LongHashCode` v2 @kind this) @signature `Lcom/google/common/hash/HashCode$LongHashCode;.asLong:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `bits`(`com.google.common.hash.HashCode$LongHashCode` v1 @kind this) @signature `Lcom/google/common/hash/HashCode$LongHashCode;.bits:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equalsSameBits`(`com.google.common.hash.HashCode$LongHashCode` v4 @kind this, `com.google.common.hash.HashCode` v5 @kind object) @signature `Lcom/google/common/hash/HashCode$LongHashCode;.equalsSameBits:(Lcom/google/common/hash/HashCode;)Z` @AccessFlag  {

  # return;
}
procedure `long` `padToLong`(`com.google.common.hash.HashCode$LongHashCode` v2 @kind this) @signature `Lcom/google/common/hash/HashCode$LongHashCode;.padToLong:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `writeBytesToImpl`(`com.google.common.hash.HashCode$LongHashCode` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/google/common/hash/HashCode$LongHashCode;.writeBytesToImpl:([BII)V` @AccessFlag  {

  # return;
}
