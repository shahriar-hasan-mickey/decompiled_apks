record `com.google.common.collect.i` @kind class @AccessFlag ABSTRACT extends `com.google.common.collect.g3` @kind interface {
}
procedure `void` `<init>`(`com.google.common.collect.i` v0 @kind this) @signature `Lcom/google/common/collect/i;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `add`(`com.google.common.collect.Range` v0 @kind object) @signature `Lcom/google/common/collect/i;.add:(Lcom/google/common/collect/Range;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `addAll`(`com.google.common.collect.i` v0 @kind this, `com.google.common.collect.g3` v1 @kind object) @signature `Lcom/google/common/collect/i;.addAll:(Lcom/google/common/collect/g3;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addAll`(`com.google.common.collect.i` v1 @kind this, `java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/collect/i;.addAll:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.i` v1 @kind this) @signature `Lcom/google/common/collect/i;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.i` v0 @kind this, `java.lang.Comparable` v1 @kind object) @signature `Lcom/google/common/collect/i;.contains:(Ljava/lang/Comparable;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `encloses`(`com.google.common.collect.Range` v0 @kind object) @signature `Lcom/google/common/collect/i;.encloses:(Lcom/google/common/collect/Range;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `enclosesAll`(`com.google.common.collect.i` v0 @kind this, `com.google.common.collect.g3` v1 @kind object) @signature `Lcom/google/common/collect/i;.enclosesAll:(Lcom/google/common/collect/g3;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `enclosesAll`(`com.google.common.collect.i` v1 @kind this, `java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/collect/i;.enclosesAll:(Ljava/lang/Iterable;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.collect.i` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/i;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.i` v1 @kind this) @signature `Lcom/google/common/collect/i;.hashCode:()I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.i` v1 @kind this) @signature `Lcom/google/common/collect/i;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.Range` `rangeContaining`(`java.lang.Comparable` v0 @kind object) @signature `Lcom/google/common/collect/i;.rangeContaining:(Ljava/lang/Comparable;)Lcom/google/common/collect/Range;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.Range` v0 @kind object) @signature `Lcom/google/common/collect/i;.remove:(Lcom/google/common/collect/Range;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `removeAll`(`com.google.common.collect.i` v0 @kind this, `com.google.common.collect.g3` v1 @kind object) @signature `Lcom/google/common/collect/i;.removeAll:(Lcom/google/common/collect/g3;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeAll`(`com.google.common.collect.i` v1 @kind this, `java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/collect/i;.removeAll:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.i` v1 @kind this) @signature `Lcom/google/common/collect/i;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {

  # return;
}
