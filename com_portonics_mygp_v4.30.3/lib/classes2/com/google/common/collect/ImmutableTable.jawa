record `com.google.common.collect.ImmutableTable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.collect.n` @kind class, `java.io.Serializable` @kind interface {
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableTable` v0 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.ImmutableTable` `a`(`java.lang.Iterable` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.a:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableTable;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableTable$a` `builder`() @signature `Lcom/google/common/collect/ImmutableTable;.builder:()Lcom/google/common/collect/ImmutableTable$a;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.f4$a` `cellOf`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.cellOf:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/f4$a;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableTable` `copyOf`(`com.google.common.collect.f4` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.copyOf:(Lcom/google/common/collect/f4;)Lcom/google/common/collect/ImmutableTable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableTable` `of`() @signature `Lcom/google/common/collect/ImmutableTable;.of:()Lcom/google/common/collect/ImmutableTable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableTable` `of`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableTable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.q4` `cellIterator`(`com.google.common.collect.ImmutableTable` v2 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.cellIterator:()Lcom/google/common/collect/q4;` @AccessFlag FINAL {

  # return;
}
procedure `java.util.Iterator` `cellIterator`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.cellIterator:()Ljava/util/Iterator;` @AccessFlag SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `cellSet`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.cellSet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `cellSet`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.cellSet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.clear:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `column`(`com.google.common.collect.ImmutableTable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.column:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `column`(`com.google.common.collect.ImmutableTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.column:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `columnKeySet`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.columnKeySet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `columnKeySet`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.columnKeySet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `columnMap`() @signature `Lcom/google/common/collect/ImmutableTable;.columnMap:()Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `columnMap`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.columnMap:()Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.ImmutableTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.contains:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsColumn`(`com.google.common.collect.ImmutableTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.containsColumn:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `containsRow`(`com.google.common.collect.ImmutableTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.containsRow:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `containsValue`(`com.google.common.collect.ImmutableTable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `createCellSet`() @signature `Lcom/google/common/collect/ImmutableTable;.createCellSet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Set` `createCellSet`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.createCellSet:()Ljava/util/Set;` @AccessFlag SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableTable$SerializedForm` `createSerializedForm`() @signature `Lcom/google/common/collect/ImmutableTable;.createSerializedForm:()Lcom/google/common/collect/ImmutableTable$SerializedForm;` @AccessFlag ABSTRACT {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection` `createValues`() @signature `Lcom/google/common/collect/ImmutableTable;.createValues:()Lcom/google/common/collect/ImmutableCollection;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Collection` `createValues`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.createValues:()Ljava/util/Collection;` @AccessFlag SYNTHETIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.collect.ImmutableTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.ImmutableTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.hashCode:()I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.isEmpty:()Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.ImmutableTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `putAll`(`com.google.common.collect.ImmutableTable` v0 @kind this, `com.google.common.collect.f4` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.putAll:(Lcom/google/common/collect/f4;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.ImmutableTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `row`(`com.google.common.collect.ImmutableTable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.row:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `row`(`com.google.common.collect.ImmutableTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableTable;.row:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `rowKeySet`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.rowKeySet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `rowKeySet`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.rowKeySet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `rowMap`() @signature `Lcom/google/common/collect/ImmutableTable;.rowMap:()Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `rowMap`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.rowMap:()Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `size`() @signature `Lcom/google/common/collect/ImmutableTable;.size:()I` @AccessFlag PUBLIC_ABSTRACT_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection` `values`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.values:()Lcom/google/common/collect/ImmutableCollection;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Collection` `values`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Iterator` `valuesIterator`(`com.google.common.collect.ImmutableTable` v2 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.valuesIterator:()Ljava/util/Iterator;` @AccessFlag FINAL {

  # return;
}
procedure `java.lang.Object` `writeReplace`(`com.google.common.collect.ImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableTable;.writeReplace:()Ljava/lang/Object;` @AccessFlag FINAL {

  # return;
}
