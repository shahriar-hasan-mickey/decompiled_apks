record `com.google.common.collect.ImmutableMultiset$a` @kind class @AccessFlag  extends `com.google.common.collect.q4` @kind class {
  `int` `com.google.common.collect.ImmutableMultiset$a.b` @AccessFlag ;
  `java.lang.Object` `com.google.common.collect.ImmutableMultiset$a.c` @AccessFlag ;
  `java.util.Iterator` `com.google.common.collect.ImmutableMultiset$a.d` @AccessFlag FINAL_SYNTHETIC;
  `com.google.common.collect.ImmutableMultiset` `com.google.common.collect.ImmutableMultiset$a.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableMultiset$a` v0 @kind this, `com.google.common.collect.ImmutableMultiset` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableMultiset$a;.<init>:(Lcom/google/common/collect/ImmutableMultiset;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.ImmutableMultiset$a` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableMultiset$a;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.ImmutableMultiset$a` v2 @kind this) @signature `Lcom/google/common/collect/ImmutableMultiset$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
