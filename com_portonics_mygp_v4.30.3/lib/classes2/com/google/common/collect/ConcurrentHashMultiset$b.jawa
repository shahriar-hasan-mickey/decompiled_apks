record `com.google.common.collect.ConcurrentHashMultiset$b` @kind class @AccessFlag  extends `com.google.common.collect.AbstractIterator` @kind class {
  `java.util.Iterator` `com.google.common.collect.ConcurrentHashMultiset$b.d` @AccessFlag PRIVATE_FINAL;
  `com.google.common.collect.ConcurrentHashMultiset` `com.google.common.collect.ConcurrentHashMultiset$b.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.ConcurrentHashMultiset$b` v0 @kind this, `com.google.common.collect.ConcurrentHashMultiset` v1 @kind object) @signature `Lcom/google/common/collect/ConcurrentHashMultiset$b;.<init>:(Lcom/google/common/collect/ConcurrentHashMultiset;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `a`(`com.google.common.collect.ConcurrentHashMultiset$b` v1 @kind this) @signature `Lcom/google/common/collect/ConcurrentHashMultiset$b;.a:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.u2$a` `d`(`com.google.common.collect.ConcurrentHashMultiset$b` v2 @kind this) @signature `Lcom/google/common/collect/ConcurrentHashMultiset$b;.d:()Lcom/google/common/collect/u2$a;` @AccessFlag PROTECTED {

  # return;
}
