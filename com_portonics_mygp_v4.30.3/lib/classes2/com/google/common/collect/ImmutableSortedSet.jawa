record `com.google.common.collect.ImmutableSortedSet` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.collect.ImmutableSortedSetFauxverideShim` @kind class, `java.util.NavigableSet` @kind interface, `com.google.common.collect.s3` @kind interface {
  `java.util.Comparator` `com.google.common.collect.ImmutableSortedSet.comparator` @AccessFlag FINAL_TRANSIENT;
  `com.google.common.collect.ImmutableSortedSet` `com.google.common.collect.ImmutableSortedSet.descendingSet` @AccessFlag TRANSIENT;
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableSortedSet` v0 @kind this, `java.util.Comparator` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.<init>:(Ljava/util/Comparator;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `construct`(`java.util.Comparator` v4 @kind object, `int` v5 , `java.lang.Object`[] v6 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.construct:(Ljava/util/Comparator;I[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `copyOf`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `copyOf`(`java.util.Collection` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `copyOf`(`java.util.Comparator` v2 @kind object, `java.lang.Iterable` v3 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.copyOf:(Ljava/util/Comparator;Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `copyOf`(`java.util.Comparator` v0 @kind object, `java.util.Collection` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.copyOf:(Ljava/util/Comparator;Ljava/util/Collection;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `copyOf`(`java.util.Comparator` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.copyOf:(Ljava/util/Comparator;Ljava/util/Iterator;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `copyOf`(`java.util.Iterator` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.copyOf:(Ljava/util/Iterator;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `copyOf`(`java.lang.Comparable`[] v2 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.copyOf:([Ljava/lang/Comparable;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `copyOfSorted`(`java.util.SortedSet` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.copyOfSorted:(Ljava/util/SortedSet;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.RegularImmutableSortedSet` `emptySet`(`java.util.Comparator` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.emptySet:(Ljava/util/Comparator;)Lcom/google/common/collect/RegularImmutableSortedSet;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet$a` `naturalOrder`() @signature `Lcom/google/common/collect/ImmutableSortedSet;.naturalOrder:()Lcom/google/common/collect/ImmutableSortedSet$a;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `of`() @signature `Lcom/google/common/collect/ImmutableSortedSet;.of:()Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `of`(`java.lang.Comparable` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.of:(Ljava/lang/Comparable;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `of`(`java.lang.Comparable` v4 @kind object, `java.lang.Comparable` v5 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.of:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `of`(`java.lang.Comparable` v4 @kind object, `java.lang.Comparable` v5 @kind object, `java.lang.Comparable` v6 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.of:(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `of`(`java.lang.Comparable` v4 @kind object, `java.lang.Comparable` v5 @kind object, `java.lang.Comparable` v6 @kind object, `java.lang.Comparable` v7 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.of:(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `of`(`java.lang.Comparable` v4 @kind object, `java.lang.Comparable` v5 @kind object, `java.lang.Comparable` v6 @kind object, `java.lang.Comparable` v7 @kind object, `java.lang.Comparable` v8 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.of:(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `of`(`java.lang.Comparable` v4 @kind object, `java.lang.Comparable` v5 @kind object, `java.lang.Comparable` v6 @kind object, `java.lang.Comparable` v7 @kind object, `java.lang.Comparable` v8 @kind object, `java.lang.Comparable` v9 @kind object, `java.lang.Comparable`[] v10 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.of:(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet$a` `orderedBy`(`java.util.Comparator` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.orderedBy:(Ljava/util/Comparator;)Lcom/google/common/collect/ImmutableSortedSet$a;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `readObject`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this, `java.io.ObjectInputStream` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet$a` `reverseOrder`() @signature `Lcom/google/common/collect/ImmutableSortedSet;.reverseOrder:()Lcom/google/common/collect/ImmutableSortedSet$a;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `unsafeCompare`(`java.util.Comparator` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.unsafeCompare:(Ljava/util/Comparator;Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Object` `ceiling`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.ceiling:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Comparator` `comparator`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableSortedSet;.comparator:()Ljava/util/Comparator;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `createDescendingSet`() @signature `Lcom/google/common/collect/ImmutableSortedSet;.createDescendingSet:()Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag ABSTRACT {

  # return;
}
procedure `com.google.common.collect.q4` `descendingIterator`() @signature `Lcom/google/common/collect/ImmutableSortedSet;.descendingIterator:()Lcom/google/common/collect/q4;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Iterator` `descendingIterator`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableSortedSet;.descendingIterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `descendingSet`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableSortedSet;.descendingSet:()Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.NavigableSet` `descendingSet`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableSortedSet;.descendingSet:()Ljava/util/NavigableSet;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `first`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableSortedSet;.first:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `floor`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.floor:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `headSet`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.headSet:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `headSet`(`com.google.common.collect.ImmutableSortedSet` v0 @kind this, `java.lang.Object` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/common/collect/ImmutableSortedSet;.headSet:(Ljava/lang/Object;Z)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.NavigableSet` `headSet`(`com.google.common.collect.ImmutableSortedSet` v0 @kind this, `java.lang.Object` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/common/collect/ImmutableSortedSet;.headSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.SortedSet` `headSet`(`com.google.common.collect.ImmutableSortedSet` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.headSet:(Ljava/lang/Object;)Ljava/util/SortedSet;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `headSetImpl`(`java.lang.Object` v0 @kind object, `boolean` v1 ) @signature `Lcom/google/common/collect/ImmutableSortedSet;.headSetImpl:(Ljava/lang/Object;Z)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.lang.Object` `higher`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.higher:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `indexOf`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.indexOf:(Ljava/lang/Object;)I` @AccessFlag ABSTRACT {

  # return;
}
procedure `com.google.common.collect.q4` `iterator`() @signature `Lcom/google/common/collect/ImmutableSortedSet;.iterator:()Lcom/google/common/collect/q4;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableSortedSet;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `last`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableSortedSet;.last:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `lower`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.lower:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `pollFirst`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableSortedSet;.pollFirst:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `pollLast`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableSortedSet;.pollLast:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `subSet`(`com.google.common.collect.ImmutableSortedSet` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.subSet:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `subSet`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this, `java.lang.Object` v2 @kind object, `boolean` v3 , `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lcom/google/common/collect/ImmutableSortedSet;.subSet:(Ljava/lang/Object;ZLjava/lang/Object;Z)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.NavigableSet` `subSet`(`com.google.common.collect.ImmutableSortedSet` v0 @kind this, `java.lang.Object` v1 @kind object, `boolean` v2 , `java.lang.Object` v3 @kind object, `boolean` v4 ) @signature `Lcom/google/common/collect/ImmutableSortedSet;.subSet:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.SortedSet` `subSet`(`com.google.common.collect.ImmutableSortedSet` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.subSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `subSetImpl`(`java.lang.Object` v0 @kind object, `boolean` v1 , `java.lang.Object` v2 @kind object, `boolean` v3 ) @signature `Lcom/google/common/collect/ImmutableSortedSet;.subSetImpl:(Ljava/lang/Object;ZLjava/lang/Object;Z)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag ABSTRACT {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `tailSet`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.tailSet:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `tailSet`(`com.google.common.collect.ImmutableSortedSet` v0 @kind this, `java.lang.Object` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/common/collect/ImmutableSortedSet;.tailSet:(Ljava/lang/Object;Z)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.NavigableSet` `tailSet`(`com.google.common.collect.ImmutableSortedSet` v0 @kind this, `java.lang.Object` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/common/collect/ImmutableSortedSet;.tailSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.SortedSet` `tailSet`(`com.google.common.collect.ImmutableSortedSet` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.tailSet:(Ljava/lang/Object;)Ljava/util/SortedSet;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `tailSetImpl`(`java.lang.Object` v0 @kind object, `boolean` v1 ) @signature `Lcom/google/common/collect/ImmutableSortedSet;.tailSetImpl:(Ljava/lang/Object;Z)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `unsafeCompare`(`com.google.common.collect.ImmutableSortedSet` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/ImmutableSortedSet;.unsafeCompare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `writeReplace`(`com.google.common.collect.ImmutableSortedSet` v3 @kind this) @signature `Lcom/google/common/collect/ImmutableSortedSet;.writeReplace:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
