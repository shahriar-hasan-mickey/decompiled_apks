record `com.google.common.collect.RegularImmutableMap$EntrySet` @kind class @AccessFlag  extends `com.google.common.collect.ImmutableSet` @kind class {
  `com.google.common.collect.ImmutableMap` `com.google.common.collect.RegularImmutableMap$EntrySet.d` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.Object`[] `com.google.common.collect.RegularImmutableMap$EntrySet.e` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `com.google.common.collect.RegularImmutableMap$EntrySet.f` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `com.google.common.collect.RegularImmutableMap$EntrySet.g` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`com.google.common.collect.RegularImmutableMap$EntrySet` v0 @kind this, `com.google.common.collect.ImmutableMap` v1 @kind object, `java.lang.Object`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/common/collect/RegularImmutableMap$EntrySet;.<init>:(Lcom/google/common/collect/ImmutableMap;[Ljava/lang/Object;II)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `access$000`(`com.google.common.collect.RegularImmutableMap$EntrySet` v0 @kind object) @signature `Lcom/google/common/collect/RegularImmutableMap$EntrySet;.access$000:(Lcom/google/common/collect/RegularImmutableMap$EntrySet;)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object`[] `access$100`(`com.google.common.collect.RegularImmutableMap$EntrySet` v0 @kind object) @signature `Lcom/google/common/collect/RegularImmutableMap$EntrySet;.access$100:(Lcom/google/common/collect/RegularImmutableMap$EntrySet;)[Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `access$200`(`com.google.common.collect.RegularImmutableMap$EntrySet` v0 @kind object) @signature `Lcom/google/common/collect/RegularImmutableMap$EntrySet;.access$200:(Lcom/google/common/collect/RegularImmutableMap$EntrySet;)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.RegularImmutableMap$EntrySet` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/RegularImmutableMap$EntrySet;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `copyIntoArray`(`com.google.common.collect.RegularImmutableMap$EntrySet` v1 @kind this, `java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Lcom/google/common/collect/RegularImmutableMap$EntrySet;.copyIntoArray:([Ljava/lang/Object;I)I` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.ImmutableList` `createAsList`(`com.google.common.collect.RegularImmutableMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableMap$EntrySet;.createAsList:()Lcom/google/common/collect/ImmutableList;` @AccessFlag  {

  # return;
}
procedure `boolean` `isPartialView`(`com.google.common.collect.RegularImmutableMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableMap$EntrySet;.isPartialView:()Z` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.q4` `iterator`(`com.google.common.collect.RegularImmutableMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableMap$EntrySet;.iterator:()Lcom/google/common/collect/q4;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.RegularImmutableMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableMap$EntrySet;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.RegularImmutableMap$EntrySet` v1 @kind this) @signature `Lcom/google/common/collect/RegularImmutableMap$EntrySet;.size:()I` @AccessFlag PUBLIC {

  # return;
}
