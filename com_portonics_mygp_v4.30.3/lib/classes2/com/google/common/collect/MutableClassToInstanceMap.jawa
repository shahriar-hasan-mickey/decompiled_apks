record `com.google.common.collect.MutableClassToInstanceMap` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.common.collect.j0` @kind class, `java.util.Map` @kind interface, `java.io.Serializable` @kind interface {
  `java.util.Map` `com.google.common.collect.MutableClassToInstanceMap.delegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.MutableClassToInstanceMap` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.<init>:(Ljava/util/Map;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `a`(`java.lang.Class` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.a:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `access$000`(`java.lang.Class` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.access$000:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map$Entry` `checkedEntry`(`java.util.Map$Entry` v1 @kind object) @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.checkedEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.MutableClassToInstanceMap` `create`() @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.create:()Lcom/google/common/collect/MutableClassToInstanceMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.MutableClassToInstanceMap` `create`(`java.util.Map` v1 @kind object) @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.create:(Ljava/util/Map;)Lcom/google/common/collect/MutableClassToInstanceMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `writeReplace`(`com.google.common.collect.MutableClassToInstanceMap` v2 @kind this) @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `delegate`(`com.google.common.collect.MutableClassToInstanceMap` v1 @kind this) @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.delegate:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `delegate`(`com.google.common.collect.MutableClassToInstanceMap` v1 @kind this) @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.delegate:()Ljava/util/Map;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.util.Set` `entrySet`(`com.google.common.collect.MutableClassToInstanceMap` v1 @kind this) @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getInstance`(`com.google.common.collect.MutableClassToInstanceMap` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.getInstance:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.MutableClassToInstanceMap` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.put:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.MutableClassToInstanceMap` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `putAll`(`com.google.common.collect.MutableClassToInstanceMap` v3 @kind this, `java.util.Map` v4 @kind object) @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `putInstance`(`com.google.common.collect.MutableClassToInstanceMap` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/MutableClassToInstanceMap;.putInstance:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
