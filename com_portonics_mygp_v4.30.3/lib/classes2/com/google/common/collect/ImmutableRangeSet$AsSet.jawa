record `com.google.common.collect.ImmutableRangeSet$AsSet` @kind class @AccessFlag FINAL extends `com.google.common.collect.ImmutableSortedSet` @kind class {
  `java.lang.Integer` `com.google.common.collect.ImmutableRangeSet$AsSet.d` @AccessFlag PRIVATE_TRANSIENT;
  `com.google.common.collect.DiscreteDomain` `com.google.common.collect.ImmutableRangeSet$AsSet.domain` @AccessFlag PRIVATE_FINAL;
  `com.google.common.collect.ImmutableRangeSet` `com.google.common.collect.ImmutableRangeSet$AsSet.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableRangeSet$AsSet` v0 @kind this, `com.google.common.collect.ImmutableRangeSet` v1 @kind object, `com.google.common.collect.DiscreteDomain` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.<init>:(Lcom/google/common/collect/ImmutableRangeSet;Lcom/google/common/collect/DiscreteDomain;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.DiscreteDomain` `access$100`(`com.google.common.collect.ImmutableRangeSet$AsSet` v0 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.access$100:(Lcom/google/common/collect/ImmutableRangeSet$AsSet;)Lcom/google/common/collect/DiscreteDomain;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.ImmutableRangeSet$AsSet` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `createDescendingSet`(`com.google.common.collect.ImmutableRangeSet$AsSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.createDescendingSet:()Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.q4` `descendingIterator`(`com.google.common.collect.ImmutableRangeSet$AsSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.descendingIterator:()Lcom/google/common/collect/q4;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `descendingIterator`(`com.google.common.collect.ImmutableRangeSet$AsSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.descendingIterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `headSetImpl`(`com.google.common.collect.ImmutableRangeSet$AsSet` v0 @kind this, `java.lang.Comparable` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.headSetImpl:(Ljava/lang/Comparable;Z)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `headSetImpl`(`com.google.common.collect.ImmutableRangeSet$AsSet` v0 @kind this, `java.lang.Object` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.headSetImpl:(Ljava/lang/Object;Z)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag SYNTHETIC {

  # return;
}
procedure `int` `indexOf`(`com.google.common.collect.ImmutableRangeSet$AsSet` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.indexOf:(Ljava/lang/Object;)I` @AccessFlag  {

  # return;
}
procedure `boolean` `isPartialView`(`com.google.common.collect.ImmutableRangeSet$AsSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.isPartialView:()Z` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.q4` `iterator`(`com.google.common.collect.ImmutableRangeSet$AsSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.iterator:()Lcom/google/common/collect/q4;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.ImmutableRangeSet$AsSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.ImmutableRangeSet$AsSet` v6 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `subSet`(`com.google.common.collect.ImmutableRangeSet$AsSet` v1 @kind this, `com.google.common.collect.Range` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.subSet:(Lcom/google/common/collect/Range;)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `subSetImpl`(`com.google.common.collect.ImmutableRangeSet$AsSet` v1 @kind this, `java.lang.Comparable` v2 @kind object, `boolean` v3 , `java.lang.Comparable` v4 @kind object, `boolean` v5 ) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.subSetImpl:(Ljava/lang/Comparable;ZLjava/lang/Comparable;Z)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `subSetImpl`(`com.google.common.collect.ImmutableRangeSet$AsSet` v0 @kind this, `java.lang.Object` v1 @kind object, `boolean` v2 , `java.lang.Object` v3 @kind object, `boolean` v4 ) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.subSetImpl:(Ljava/lang/Object;ZLjava/lang/Object;Z)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `tailSetImpl`(`com.google.common.collect.ImmutableRangeSet$AsSet` v0 @kind this, `java.lang.Comparable` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.tailSetImpl:(Ljava/lang/Comparable;Z)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.ImmutableSortedSet` `tailSetImpl`(`com.google.common.collect.ImmutableRangeSet$AsSet` v0 @kind this, `java.lang.Object` v1 @kind object, `boolean` v2 ) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.tailSetImpl:(Ljava/lang/Object;Z)Lcom/google/common/collect/ImmutableSortedSet;` @AccessFlag SYNTHETIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.ImmutableRangeSet$AsSet` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `writeReplace`(`com.google.common.collect.ImmutableRangeSet$AsSet` v3 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeSet$AsSet;.writeReplace:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
