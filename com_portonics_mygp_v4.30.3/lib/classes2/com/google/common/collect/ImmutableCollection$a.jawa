record `com.google.common.collect.ImmutableCollection$a` @kind class @AccessFlag ABSTRACT extends `com.google.common.collect.ImmutableCollection$b` @kind class {
  `java.lang.Object`[] `com.google.common.collect.ImmutableCollection$a.a` @AccessFlag ;
  `int` `com.google.common.collect.ImmutableCollection$a.b` @AccessFlag ;
  `boolean` `com.google.common.collect.ImmutableCollection$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableCollection$a` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/ImmutableCollection$a;.<init>:(I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `g`(`com.google.common.collect.ImmutableCollection$a` v3 @kind this, `int` v4 ) @signature `Lcom/google/common/collect/ImmutableCollection$a;.g:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection$b` `b`(`com.google.common.collect.ImmutableCollection$a` v4 @kind this, `java.lang.Object`[] v5 @kind object) @signature `Lcom/google/common/collect/ImmutableCollection$a;.b:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableCollection$b;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection$b` `c`(`com.google.common.collect.ImmutableCollection$a` v3 @kind this, `java.lang.Iterable` v4 @kind object) @signature `Lcom/google/common/collect/ImmutableCollection$a;.c:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableCollection$b;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection$a` `f`(`com.google.common.collect.ImmutableCollection$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/ImmutableCollection$a;.f:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableCollection$a;` @AccessFlag PUBLIC {

  # return;
}
