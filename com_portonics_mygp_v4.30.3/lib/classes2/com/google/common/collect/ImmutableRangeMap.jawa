record `com.google.common.collect.ImmutableRangeMap` @kind class @AccessFlag PUBLIC extends `com.google.common.collect.f3` @kind interface, `java.io.Serializable` @kind interface {
  `com.google.common.collect.ImmutableList` `com.google.common.collect.ImmutableRangeMap.c` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `com.google.common.collect.ImmutableList` `com.google.common.collect.ImmutableRangeMap.d` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
global `com.google.common.collect.ImmutableRangeMap` `@@com.google.common.collect.ImmutableRangeMap.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.google.common.collect.ImmutableRangeMap.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/collect/ImmutableRangeMap;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.ImmutableRangeMap` v0 @kind this, `com.google.common.collect.ImmutableList` v1 @kind object, `com.google.common.collect.ImmutableList` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeMap;.<init>:(Lcom/google/common/collect/ImmutableList;Lcom/google/common/collect/ImmutableList;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.ImmutableList` `access$000`(`com.google.common.collect.ImmutableRangeMap` v0 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeMap;.access$000:(Lcom/google/common/collect/ImmutableRangeMap;)Lcom/google/common/collect/ImmutableList;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableRangeMap$a` `builder`() @signature `Lcom/google/common/collect/ImmutableRangeMap;.builder:()Lcom/google/common/collect/ImmutableRangeMap$a;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableRangeMap` `copyOf`(`com.google.common.collect.f3` v4 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeMap;.copyOf:(Lcom/google/common/collect/f3;)Lcom/google/common/collect/ImmutableRangeMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableRangeMap` `of`() @signature `Lcom/google/common/collect/ImmutableRangeMap;.of:()Lcom/google/common/collect/ImmutableRangeMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableRangeMap` `of`(`com.google.common.collect.Range` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeMap;.of:(Lcom/google/common/collect/Range;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableRangeMap;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `asDescendingMapOfRanges`(`com.google.common.collect.ImmutableRangeMap` v3 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeMap;.asDescendingMapOfRanges:()Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `asDescendingMapOfRanges`(`com.google.common.collect.ImmutableRangeMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeMap;.asDescendingMapOfRanges:()Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `asMapOfRanges`(`com.google.common.collect.ImmutableRangeMap` v3 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeMap;.asMapOfRanges:()Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `asMapOfRanges`(`com.google.common.collect.ImmutableRangeMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeMap;.asMapOfRanges:()Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.ImmutableRangeMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeMap;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.collect.ImmutableRangeMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeMap;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.ImmutableRangeMap` v5 @kind this, `java.lang.Comparable` v6 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeMap;.get:(Ljava/lang/Comparable;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map$Entry` `getEntry`(`com.google.common.collect.ImmutableRangeMap` v5 @kind this, `java.lang.Comparable` v6 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeMap;.getEntry:(Ljava/lang/Comparable;)Ljava/util/Map$Entry;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.ImmutableRangeMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeMap;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `put`(`com.google.common.collect.ImmutableRangeMap` v0 @kind this, `com.google.common.collect.Range` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeMap;.put:(Lcom/google/common/collect/Range;Ljava/lang/Object;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `putAll`(`com.google.common.collect.ImmutableRangeMap` v0 @kind this, `com.google.common.collect.f3` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeMap;.putAll:(Lcom/google/common/collect/f3;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `putCoalescing`(`com.google.common.collect.ImmutableRangeMap` v0 @kind this, `com.google.common.collect.Range` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeMap;.putCoalescing:(Lcom/google/common/collect/Range;Ljava/lang/Object;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.ImmutableRangeMap` v0 @kind this, `com.google.common.collect.Range` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeMap;.remove:(Lcom/google/common/collect/Range;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.Range` `span`(`com.google.common.collect.ImmutableRangeMap` v3 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeMap;.span:()Lcom/google/common/collect/Range;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.ImmutableRangeMap` `subRangeMap`(`com.google.common.collect.ImmutableRangeMap` v9 @kind this, `com.google.common.collect.Range` v10 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeMap;.subRangeMap:(Lcom/google/common/collect/Range;)Lcom/google/common/collect/ImmutableRangeMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.f3` `subRangeMap`(`com.google.common.collect.ImmutableRangeMap` v0 @kind this, `com.google.common.collect.Range` v1 @kind object) @signature `Lcom/google/common/collect/ImmutableRangeMap;.subRangeMap:(Lcom/google/common/collect/Range;)Lcom/google/common/collect/f3;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.ImmutableRangeMap` v1 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeMap;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `writeReplace`(`com.google.common.collect.ImmutableRangeMap` v2 @kind this) @signature `Lcom/google/common/collect/ImmutableRangeMap;.writeReplace:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
