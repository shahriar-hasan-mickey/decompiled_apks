record `com.google.common.collect.ConcurrentHashMultiset$d` @kind class @AccessFlag  extends `com.google.common.collect.f$b` @kind class {
  `com.google.common.collect.ConcurrentHashMultiset` `com.google.common.collect.ConcurrentHashMultiset$d.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.ConcurrentHashMultiset$d` v0 @kind this, `com.google.common.collect.ConcurrentHashMultiset` v1 @kind object) @signature `Lcom/google/common/collect/ConcurrentHashMultiset$d;.<init>:(Lcom/google/common/collect/ConcurrentHashMultiset;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.ConcurrentHashMultiset$d` v0 @kind this, `com.google.common.collect.ConcurrentHashMultiset` v1 @kind object, `com.google.common.collect.ConcurrentHashMultiset$a` v2 @kind object) @signature `Lcom/google/common/collect/ConcurrentHashMultiset$d;.<init>:(Lcom/google/common/collect/ConcurrentHashMultiset;Lcom/google/common/collect/ConcurrentHashMultiset$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.List` `f`(`com.google.common.collect.ConcurrentHashMultiset$d` v2 @kind this) @signature `Lcom/google/common/collect/ConcurrentHashMultiset$d;.f:()Ljava/util/List;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.collect.u2` `c`(`com.google.common.collect.ConcurrentHashMultiset$d` v1 @kind this) @signature `Lcom/google/common/collect/ConcurrentHashMultiset$d;.c:()Lcom/google/common/collect/u2;` @AccessFlag SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ConcurrentHashMultiset` `e`(`com.google.common.collect.ConcurrentHashMultiset$d` v1 @kind this) @signature `Lcom/google/common/collect/ConcurrentHashMultiset$d;.e:()Lcom/google/common/collect/ConcurrentHashMultiset;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object`[] `toArray`(`com.google.common.collect.ConcurrentHashMultiset$d` v1 @kind this) @signature `Lcom/google/common/collect/ConcurrentHashMultiset$d;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object`[] `toArray`(`com.google.common.collect.ConcurrentHashMultiset$d` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lcom/google/common/collect/ConcurrentHashMultiset$d;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
