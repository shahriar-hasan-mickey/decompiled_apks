record `com.google.common.collect.AbstractMapBasedMultimap$d` @kind class @AccessFlag ABSTRACT extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `com.google.common.collect.AbstractMapBasedMultimap$d.b` @AccessFlag FINAL;
  `java.lang.Object` `com.google.common.collect.AbstractMapBasedMultimap$d.c` @AccessFlag ;
  `java.util.Collection` `com.google.common.collect.AbstractMapBasedMultimap$d.d` @AccessFlag ;
  `java.util.Iterator` `com.google.common.collect.AbstractMapBasedMultimap$d.e` @AccessFlag ;
  `com.google.common.collect.AbstractMapBasedMultimap` `com.google.common.collect.AbstractMapBasedMultimap$d.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractMapBasedMultimap$d` v0 @kind this, `com.google.common.collect.AbstractMapBasedMultimap` v1 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$d;.<init>:(Lcom/google/common/collect/AbstractMapBasedMultimap;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.AbstractMapBasedMultimap$d` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$d;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.AbstractMapBasedMultimap$d` v2 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$d;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.AbstractMapBasedMultimap$d` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$d;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
