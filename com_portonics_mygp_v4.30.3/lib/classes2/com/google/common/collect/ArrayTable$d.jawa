record `com.google.common.collect.ArrayTable$d` @kind class @AccessFlag ABSTRACT extends `com.google.common.collect.z1` @kind class {
  `com.google.common.collect.ImmutableMap` `com.google.common.collect.ArrayTable$d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.ArrayTable$d` v0 @kind this, `com.google.common.collect.ImmutableMap` v1 @kind object) @signature `Lcom/google/common/collect/ArrayTable$d;.<init>:(Lcom/google/common/collect/ImmutableMap;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.ArrayTable$d` v0 @kind this, `com.google.common.collect.ImmutableMap` v1 @kind object, `com.google.common.collect.ArrayTable$a` v2 @kind object) @signature `Lcom/google/common/collect/ArrayTable$d;.<init>:(Lcom/google/common/collect/ImmutableMap;Lcom/google/common/collect/ArrayTable$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.Iterator` `a`(`com.google.common.collect.ArrayTable$d` v2 @kind this) @signature `Lcom/google/common/collect/ArrayTable$d;.a:()Ljava/util/Iterator;` @AccessFlag  {

  # return;
}
procedure `java.util.Map$Entry` `b`(`com.google.common.collect.ArrayTable$d` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/ArrayTable$d;.b:(I)Ljava/util/Map$Entry;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `c`(`com.google.common.collect.ArrayTable$d` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/ArrayTable$d;.c:(I)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.ArrayTable$d` v1 @kind this) @signature `Lcom/google/common/collect/ArrayTable$d;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsKey`(`com.google.common.collect.ArrayTable$d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ArrayTable$d;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `d`() @signature `Lcom/google/common/collect/ArrayTable$d;.d:()Ljava/lang/String;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.lang.Object` `e`(`int` v0 ) @signature `Lcom/google/common/collect/ArrayTable$d;.e:(I)Ljava/lang/Object;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.lang.Object` `f`(`int` v0 , `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ArrayTable$d;.f:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.ArrayTable$d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/ArrayTable$d;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.ArrayTable$d` v1 @kind this) @signature `Lcom/google/common/collect/ArrayTable$d;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `keySet`(`com.google.common.collect.ArrayTable$d` v1 @kind this) @signature `Lcom/google/common/collect/ArrayTable$d;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.ArrayTable$d` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/ArrayTable$d;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.ArrayTable$d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/ArrayTable$d;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.ArrayTable$d` v1 @kind this) @signature `Lcom/google/common/collect/ArrayTable$d;.size:()I` @AccessFlag PUBLIC {

  # return;
}
