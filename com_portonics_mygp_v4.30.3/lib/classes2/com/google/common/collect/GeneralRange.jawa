record `com.google.common.collect.GeneralRange` @kind class @AccessFlag FINAL extends `java.io.Serializable` @kind interface {
  `com.google.common.collect.GeneralRange` `com.google.common.collect.GeneralRange.b` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Comparator` `com.google.common.collect.GeneralRange.comparator` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.common.collect.GeneralRange.hasLowerBound` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.common.collect.GeneralRange.hasUpperBound` @AccessFlag PRIVATE_FINAL;
  `com.google.common.collect.BoundType` `com.google.common.collect.GeneralRange.lowerBoundType` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.google.common.collect.GeneralRange.lowerEndpoint` @AccessFlag PRIVATE_FINAL;
  `com.google.common.collect.BoundType` `com.google.common.collect.GeneralRange.upperBoundType` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.google.common.collect.GeneralRange.upperEndpoint` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.GeneralRange` v2 @kind this, `java.util.Comparator` v3 @kind object, `boolean` v4 , `java.lang.Object` v5 @kind object, `com.google.common.collect.BoundType` v6 @kind object, `boolean` v7 , `java.lang.Object` v8 @kind object, `com.google.common.collect.BoundType` v9 @kind object) @signature `Lcom/google/common/collect/GeneralRange;.<init>:(Ljava/util/Comparator;ZLjava/lang/Object;Lcom/google/common/collect/BoundType;ZLjava/lang/Object;Lcom/google/common/collect/BoundType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.GeneralRange` `all`(`java.util.Comparator` v9 @kind object) @signature `Lcom/google/common/collect/GeneralRange;.all:(Ljava/util/Comparator;)Lcom/google/common/collect/GeneralRange;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.GeneralRange` `downTo`(`java.util.Comparator` v9 @kind object, `java.lang.Object` v10 @kind object, `com.google.common.collect.BoundType` v11 @kind object) @signature `Lcom/google/common/collect/GeneralRange;.downTo:(Ljava/util/Comparator;Ljava/lang/Object;Lcom/google/common/collect/BoundType;)Lcom/google/common/collect/GeneralRange;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.GeneralRange` `from`(`com.google.common.collect.Range` v10 @kind object) @signature `Lcom/google/common/collect/GeneralRange;.from:(Lcom/google/common/collect/Range;)Lcom/google/common/collect/GeneralRange;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.GeneralRange` `range`(`java.util.Comparator` v9 @kind object, `java.lang.Object` v10 @kind object, `com.google.common.collect.BoundType` v11 @kind object, `java.lang.Object` v12 @kind object, `com.google.common.collect.BoundType` v13 @kind object) @signature `Lcom/google/common/collect/GeneralRange;.range:(Ljava/util/Comparator;Ljava/lang/Object;Lcom/google/common/collect/BoundType;Ljava/lang/Object;Lcom/google/common/collect/BoundType;)Lcom/google/common/collect/GeneralRange;` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.GeneralRange` `upTo`(`java.util.Comparator` v9 @kind object, `java.lang.Object` v10 @kind object, `com.google.common.collect.BoundType` v11 @kind object) @signature `Lcom/google/common/collect/GeneralRange;.upTo:(Ljava/util/Comparator;Ljava/lang/Object;Lcom/google/common/collect/BoundType;)Lcom/google/common/collect/GeneralRange;` @AccessFlag STATIC {

  # return;
}
procedure `java.util.Comparator` `comparator`(`com.google.common.collect.GeneralRange` v1 @kind this) @signature `Lcom/google/common/collect/GeneralRange;.comparator:()Ljava/util/Comparator;` @AccessFlag  {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.GeneralRange` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/GeneralRange;.contains:(Ljava/lang/Object;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `equals`(`com.google.common.collect.GeneralRange` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/GeneralRange;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.BoundType` `getLowerBoundType`(`com.google.common.collect.GeneralRange` v1 @kind this) @signature `Lcom/google/common/collect/GeneralRange;.getLowerBoundType:()Lcom/google/common/collect/BoundType;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `getLowerEndpoint`(`com.google.common.collect.GeneralRange` v1 @kind this) @signature `Lcom/google/common/collect/GeneralRange;.getLowerEndpoint:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.BoundType` `getUpperBoundType`(`com.google.common.collect.GeneralRange` v1 @kind this) @signature `Lcom/google/common/collect/GeneralRange;.getUpperBoundType:()Lcom/google/common/collect/BoundType;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `getUpperEndpoint`(`com.google.common.collect.GeneralRange` v1 @kind this) @signature `Lcom/google/common/collect/GeneralRange;.getUpperEndpoint:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `boolean` `hasLowerBound`(`com.google.common.collect.GeneralRange` v1 @kind this) @signature `Lcom/google/common/collect/GeneralRange;.hasLowerBound:()Z` @AccessFlag  {

  # return;
}
procedure `boolean` `hasUpperBound`(`com.google.common.collect.GeneralRange` v1 @kind this) @signature `Lcom/google/common/collect/GeneralRange;.hasUpperBound:()Z` @AccessFlag  {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.GeneralRange` v3 @kind this) @signature `Lcom/google/common/collect/GeneralRange;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.GeneralRange` `intersect`(`com.google.common.collect.GeneralRange` v11 @kind this, `com.google.common.collect.GeneralRange` v12 @kind object) @signature `Lcom/google/common/collect/GeneralRange;.intersect:(Lcom/google/common/collect/GeneralRange;)Lcom/google/common/collect/GeneralRange;` @AccessFlag  {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.GeneralRange` v1 @kind this) @signature `Lcom/google/common/collect/GeneralRange;.isEmpty:()Z` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.GeneralRange` `reverse`(`com.google.common.collect.GeneralRange` v9 @kind this) @signature `Lcom/google/common/collect/GeneralRange;.reverse:()Lcom/google/common/collect/GeneralRange;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.GeneralRange` v3 @kind this) @signature `Lcom/google/common/collect/GeneralRange;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `tooHigh`(`com.google.common.collect.GeneralRange` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/common/collect/GeneralRange;.tooHigh:(Ljava/lang/Object;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `tooLow`(`com.google.common.collect.GeneralRange` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/common/collect/GeneralRange;.tooLow:(Ljava/lang/Object;)Z` @AccessFlag  {

  # return;
}
