record `com.google.common.collect.SingletonImmutableTable` @kind class @AccessFlag  extends `com.google.common.collect.ImmutableTable` @kind class {
  `java.lang.Object` `com.google.common.collect.SingletonImmutableTable.singleColumnKey` @AccessFlag FINAL;
  `java.lang.Object` `com.google.common.collect.SingletonImmutableTable.singleRowKey` @AccessFlag FINAL;
  `java.lang.Object` `com.google.common.collect.SingletonImmutableTable.singleValue` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.SingletonImmutableTable` v2 @kind this, `com.google.common.collect.f4$a` v3 @kind object) @signature `Lcom/google/common/collect/SingletonImmutableTable;.<init>:(Lcom/google/common/collect/f4$a;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.SingletonImmutableTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/SingletonImmutableTable;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `column`(`com.google.common.collect.SingletonImmutableTable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/SingletonImmutableTable;.column:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `column`(`com.google.common.collect.SingletonImmutableTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/SingletonImmutableTable;.column:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `columnMap`(`com.google.common.collect.SingletonImmutableTable` v3 @kind this) @signature `Lcom/google/common/collect/SingletonImmutableTable;.columnMap:()Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `columnMap`(`com.google.common.collect.SingletonImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/SingletonImmutableTable;.columnMap:()Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableSet` `createCellSet`(`com.google.common.collect.SingletonImmutableTable` v3 @kind this) @signature `Lcom/google/common/collect/SingletonImmutableTable;.createCellSet:()Lcom/google/common/collect/ImmutableSet;` @AccessFlag  {

  # return;
}
procedure `java.util.Set` `createCellSet`(`com.google.common.collect.SingletonImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/SingletonImmutableTable;.createCellSet:()Ljava/util/Set;` @AccessFlag SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableTable$SerializedForm` `createSerializedForm`(`com.google.common.collect.SingletonImmutableTable` v3 @kind this) @signature `Lcom/google/common/collect/SingletonImmutableTable;.createSerializedForm:()Lcom/google/common/collect/ImmutableTable$SerializedForm;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.ImmutableCollection` `createValues`(`com.google.common.collect.SingletonImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/SingletonImmutableTable;.createValues:()Lcom/google/common/collect/ImmutableCollection;` @AccessFlag  {

  # return;
}
procedure `java.util.Collection` `createValues`(`com.google.common.collect.SingletonImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/SingletonImmutableTable;.createValues:()Ljava/util/Collection;` @AccessFlag SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `rowMap`(`com.google.common.collect.SingletonImmutableTable` v3 @kind this) @signature `Lcom/google/common/collect/SingletonImmutableTable;.rowMap:()Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `rowMap`(`com.google.common.collect.SingletonImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/SingletonImmutableTable;.rowMap:()Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.SingletonImmutableTable` v1 @kind this) @signature `Lcom/google/common/collect/SingletonImmutableTable;.size:()I` @AccessFlag PUBLIC {

  # return;
}
