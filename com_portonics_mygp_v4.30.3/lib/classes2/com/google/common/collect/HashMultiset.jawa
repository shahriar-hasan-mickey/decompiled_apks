record `com.google.common.collect.HashMultiset` @kind class @AccessFlag PUBLIC extends `com.google.common.collect.AbstractMapBasedMultiset` @kind class {
}
global `long` `@@com.google.common.collect.HashMultiset.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.collect.HashMultiset` v0 @kind this, `int` v1 ) @signature `Lcom/google/common/collect/HashMultiset;.<init>:(I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.HashMultiset` `create`() @signature `Lcom/google/common/collect/HashMultiset;.create:()Lcom/google/common/collect/HashMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.HashMultiset` `create`(`int` v1 ) @signature `Lcom/google/common/collect/HashMultiset;.create:(I)Lcom/google/common/collect/HashMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.HashMultiset` `create`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/common/collect/HashMultiset;.create:(Ljava/lang/Iterable;)Lcom/google/common/collect/HashMultiset;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.HashMultiset` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/HashMultiset;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `elementSet`(`com.google.common.collect.HashMultiset` v1 @kind this) @signature `Lcom/google/common/collect/HashMultiset;.elementSet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `entrySet`(`com.google.common.collect.HashMultiset` v1 @kind this) @signature `Lcom/google/common/collect/HashMultiset;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `init`(`com.google.common.collect.HashMultiset` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/HashMultiset;.init:(I)V` @AccessFlag  {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.HashMultiset` v1 @kind this) @signature `Lcom/google/common/collect/HashMultiset;.isEmpty:()Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
