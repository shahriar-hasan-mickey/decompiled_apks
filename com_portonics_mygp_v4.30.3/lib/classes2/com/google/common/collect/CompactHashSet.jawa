record `com.google.common.collect.CompactHashSet` @kind class @AccessFlag  extends `java.util.AbstractSet` @kind class, `java.io.Serializable` @kind interface {
  `int`[] `com.google.common.collect.CompactHashSet.b` @AccessFlag PRIVATE_TRANSIENT;
  `long`[] `com.google.common.collect.CompactHashSet.c` @AccessFlag PRIVATE_TRANSIENT;
  `int` `com.google.common.collect.CompactHashSet.d` @AccessFlag PRIVATE_TRANSIENT;
  `int` `com.google.common.collect.CompactHashSet.e` @AccessFlag PRIVATE_TRANSIENT;
  `java.lang.Object`[] `com.google.common.collect.CompactHashSet.elements` @AccessFlag TRANSIENT;
  `float` `com.google.common.collect.CompactHashSet.loadFactor` @AccessFlag TRANSIENT;
  `int` `com.google.common.collect.CompactHashSet.modCount` @AccessFlag TRANSIENT;
}
global `int` `@@com.google.common.collect.CompactHashSet.UNSET` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.collect.CompactHashSet` v2 @kind this) @signature `Lcom/google/common/collect/CompactHashSet;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.CompactHashSet` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/CompactHashSet;.<init>:(I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`long` v1 ) @signature `Lcom/google/common/collect/CompactHashSet;.a:(J)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long`[] `access$000`(`com.google.common.collect.CompactHashSet` v0 @kind object) @signature `Lcom/google/common/collect/CompactHashSet;.access$000:(Lcom/google/common/collect/CompactHashSet;)[J` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `access$100`(`long` v0 ) @signature `Lcom/google/common/collect/CompactHashSet;.access$100:(J)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `access$200`(`com.google.common.collect.CompactHashSet` v0 @kind object, `java.lang.Object` v1 @kind object, `int` v2 ) @signature `Lcom/google/common/collect/CompactHashSet;.access$200:(Lcom/google/common/collect/CompactHashSet;Ljava/lang/Object;I)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `c`(`long` v0 ) @signature `Lcom/google/common/collect/CompactHashSet;.c:(J)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.collect.CompactHashSet` `create`() @signature `Lcom/google/common/collect/CompactHashSet;.create:()Lcom/google/common/collect/CompactHashSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.CompactHashSet` `create`(`java.util.Collection` v1 @kind object) @signature `Lcom/google/common/collect/CompactHashSet;.create:(Ljava/util/Collection;)Lcom/google/common/collect/CompactHashSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.CompactHashSet` `create`(`java.lang.Object`[] v1 @kind object) @signature `Lcom/google/common/collect/CompactHashSet;.create:([Ljava/lang/Object;)Lcom/google/common/collect/CompactHashSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.CompactHashSet` `createWithExpectedSize`(`int` v1 ) @signature `Lcom/google/common/collect/CompactHashSet;.createWithExpectedSize:(I)Lcom/google/common/collect/CompactHashSet;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `e`(`com.google.common.collect.CompactHashSet` v1 @kind this) @signature `Lcom/google/common/collect/CompactHashSet;.e:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `long`[] `f`(`int` v2 ) @signature `Lcom/google/common/collect/CompactHashSet;.f:(I)[J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int`[] `g`(`int` v1 ) @signature `Lcom/google/common/collect/CompactHashSet;.g:(I)[I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `i`(`com.google.common.collect.CompactHashSet` v9 @kind this, `java.lang.Object` v10 @kind object, `int` v11 ) @signature `Lcom/google/common/collect/CompactHashSet;.i:(Ljava/lang/Object;I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `l`(`com.google.common.collect.CompactHashSet` v2 @kind this, `int` v3 ) @signature `Lcom/google/common/collect/CompactHashSet;.l:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `m`(`com.google.common.collect.CompactHashSet` v11 @kind this, `int` v12 ) @signature `Lcom/google/common/collect/CompactHashSet;.m:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `n`(`long` v4 , `int` v6 ) @signature `Lcom/google/common/collect/CompactHashSet;.n:(JI)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `readObject`(`com.google.common.collect.CompactHashSet` v2 @kind this, `java.io.ObjectInputStream` v3 @kind object) @signature `Lcom/google/common/collect/CompactHashSet;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `writeObject`(`com.google.common.collect.CompactHashSet` v2 @kind this, `java.io.ObjectOutputStream` v3 @kind object) @signature `Lcom/google/common/collect/CompactHashSet;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `add`(`com.google.common.collect.CompactHashSet` v10 @kind this, `java.lang.Object` v11 @kind object) @signature `Lcom/google/common/collect/CompactHashSet;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `adjustAfterRemove`(`com.google.common.collect.CompactHashSet` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/google/common/collect/CompactHashSet;.adjustAfterRemove:(II)I` @AccessFlag  {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.CompactHashSet` v5 @kind this) @signature `Lcom/google/common/collect/CompactHashSet;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.CompactHashSet` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/common/collect/CompactHashSet;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `firstEntryIndex`(`com.google.common.collect.CompactHashSet` v1 @kind this) @signature `Lcom/google/common/collect/CompactHashSet;.firstEntryIndex:()I` @AccessFlag  {

  # return;
}
procedure `int` `getSuccessor`(`com.google.common.collect.CompactHashSet` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/CompactHashSet;.getSuccessor:(I)I` @AccessFlag  {

  # return;
}
procedure `void` `init`(`com.google.common.collect.CompactHashSet` v4 @kind this, `int` v5 , `float` v6 ) @signature `Lcom/google/common/collect/CompactHashSet;.init:(IF)V` @AccessFlag  {

  # return;
}
procedure `void` `insertEntry`(`com.google.common.collect.CompactHashSet` v5 @kind this, `int` v6 , `java.lang.Object` v7 @kind object, `int` v8 ) @signature `Lcom/google/common/collect/CompactHashSet;.insertEntry:(ILjava/lang/Object;I)V` @AccessFlag  {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.CompactHashSet` v1 @kind this) @signature `Lcom/google/common/collect/CompactHashSet;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.CompactHashSet` v1 @kind this) @signature `Lcom/google/common/collect/CompactHashSet;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `moveEntry`(`com.google.common.collect.CompactHashSet` v6 @kind this, `int` v7 ) @signature `Lcom/google/common/collect/CompactHashSet;.moveEntry:(I)V` @AccessFlag  {

  # return;
}
procedure `boolean` `remove`(`com.google.common.collect.CompactHashSet` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/CompactHashSet;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `resizeEntries`(`com.google.common.collect.CompactHashSet` v4 @kind this, `int` v5 ) @signature `Lcom/google/common/collect/CompactHashSet;.resizeEntries:(I)V` @AccessFlag  {

  # return;
}
procedure `int` `size`(`com.google.common.collect.CompactHashSet` v1 @kind this) @signature `Lcom/google/common/collect/CompactHashSet;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object`[] `toArray`(`com.google.common.collect.CompactHashSet` v2 @kind this) @signature `Lcom/google/common/collect/CompactHashSet;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object`[] `toArray`(`com.google.common.collect.CompactHashSet` v3 @kind this, `java.lang.Object`[] v4 @kind object) @signature `Lcom/google/common/collect/CompactHashSet;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `trimToSize`(`com.google.common.collect.CompactHashSet` v6 @kind this) @signature `Lcom/google/common/collect/CompactHashSet;.trimToSize:()V` @AccessFlag PUBLIC {

  # return;
}
