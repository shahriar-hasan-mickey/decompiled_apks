record `com.google.common.collect.RegularImmutableTable$a` @kind class @AccessFlag FINAL extends `java.util.Comparator` @kind interface {
  `java.util.Comparator` `com.google.common.collect.RegularImmutableTable$a.b` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Comparator` `com.google.common.collect.RegularImmutableTable$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.RegularImmutableTable$a` v0 @kind this, `java.util.Comparator` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lcom/google/common/collect/RegularImmutableTable$a;.<init>:(Ljava/util/Comparator;Ljava/util/Comparator;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`com.google.common.collect.RegularImmutableTable$a` v4 @kind this, `com.google.common.collect.f4$a` v5 @kind object, `com.google.common.collect.f4$a` v6 @kind object) @signature `Lcom/google/common/collect/RegularImmutableTable$a;.a:(Lcom/google/common/collect/f4$a;Lcom/google/common/collect/f4$a;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compare`(`com.google.common.collect.RegularImmutableTable$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/RegularImmutableTable$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
