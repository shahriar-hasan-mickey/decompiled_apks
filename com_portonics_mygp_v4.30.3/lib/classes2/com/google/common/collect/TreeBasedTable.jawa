record `com.google.common.collect.TreeBasedTable` @kind class @AccessFlag PUBLIC extends `com.google.common.collect.StandardRowSortedTable` @kind class {
  `java.util.Comparator` `com.google.common.collect.TreeBasedTable.columnComparator` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@com.google.common.collect.TreeBasedTable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.collect.TreeBasedTable` v1 @kind this, `java.util.Comparator` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.<init>:(Ljava/util/Comparator;Ljava/util/Comparator;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.TreeBasedTable` `create`() @signature `Lcom/google/common/collect/TreeBasedTable;.create:()Lcom/google/common/collect/TreeBasedTable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.TreeBasedTable` `create`(`com.google.common.collect.TreeBasedTable` v3 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.create:(Lcom/google/common/collect/TreeBasedTable;)Lcom/google/common/collect/TreeBasedTable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.collect.TreeBasedTable` `create`(`java.util.Comparator` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.create:(Ljava/util/Comparator;Ljava/util/Comparator;)Lcom/google/common/collect/TreeBasedTable;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Set` `cellSet`(`com.google.common.collect.TreeBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.cellSet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.TreeBasedTable` v0 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.clear:()V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `column`(`com.google.common.collect.TreeBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.column:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Comparator` `columnComparator`(`com.google.common.collect.TreeBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.columnComparator:()Ljava/util/Comparator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `columnKeySet`(`com.google.common.collect.TreeBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.columnKeySet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `columnMap`(`com.google.common.collect.TreeBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.columnMap:()Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.TreeBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.contains:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `containsColumn`(`com.google.common.collect.TreeBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.containsColumn:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `containsRow`(`com.google.common.collect.TreeBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.containsRow:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `containsValue`(`com.google.common.collect.TreeBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Iterator` `createColumnKeyIterator`(`com.google.common.collect.TreeBasedTable` v3 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.createColumnKeyIterator:()Ljava/util/Iterator;` @AccessFlag  {

  # return;
}
procedure `boolean` `equals`(`com.google.common.collect.TreeBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.TreeBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.collect.TreeBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.hashCode:()I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.TreeBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.isEmpty:()Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.TreeBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `putAll`(`com.google.common.collect.TreeBasedTable` v0 @kind this, `com.google.common.collect.f4` v1 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.putAll:(Lcom/google/common/collect/f4;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.TreeBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `row`(`com.google.common.collect.TreeBasedTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.row:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.SortedMap` `row`(`com.google.common.collect.TreeBasedTable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/TreeBasedTable;.row:(Ljava/lang/Object;)Ljava/util/SortedMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Comparator` `rowComparator`(`com.google.common.collect.TreeBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.rowComparator:()Ljava/util/Comparator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `rowKeySet`(`com.google.common.collect.TreeBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.rowKeySet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.SortedSet` `rowKeySet`(`com.google.common.collect.TreeBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.rowKeySet:()Ljava/util/SortedSet;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `rowMap`(`com.google.common.collect.TreeBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.rowMap:()Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.SortedMap` `rowMap`(`com.google.common.collect.TreeBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.rowMap:()Ljava/util/SortedMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.TreeBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.size:()I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.TreeBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.util.Collection` `values`(`com.google.common.collect.TreeBasedTable` v1 @kind this) @signature `Lcom/google/common/collect/TreeBasedTable;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
