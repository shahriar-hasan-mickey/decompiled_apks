record `com.google.common.collect.StandardTable$h` @kind class @AccessFlag  extends `com.google.common.collect.i2` @kind class {
  `com.google.common.collect.StandardTable` `com.google.common.collect.StandardTable$h.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.StandardTable$h` v0 @kind this, `com.google.common.collect.StandardTable` v1 @kind object) @signature `Lcom/google/common/collect/StandardTable$h;.<init>:(Lcom/google/common/collect/StandardTable;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.util.Set` `a`(`com.google.common.collect.StandardTable$h` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable$h;.a:()Ljava/util/Set;` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `containsKey`(`com.google.common.collect.StandardTable$h` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/StandardTable$h;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `d`(`com.google.common.collect.StandardTable$h` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/StandardTable$h;.d:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `e`(`com.google.common.collect.StandardTable$h` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/StandardTable$h;.e:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.StandardTable$h` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/StandardTable$h;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.StandardTable$h` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/StandardTable$h;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
