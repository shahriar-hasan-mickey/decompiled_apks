record `com.google.common.collect.TreeMultiset$b` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `com.google.common.collect.TreeMultiset$e` `com.google.common.collect.TreeMultiset$b.b` @AccessFlag ;
  `com.google.common.collect.u2$a` `com.google.common.collect.TreeMultiset$b.c` @AccessFlag ;
  `com.google.common.collect.TreeMultiset` `com.google.common.collect.TreeMultiset$b.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.TreeMultiset$b` v0 @kind this, `com.google.common.collect.TreeMultiset` v1 @kind object) @signature `Lcom/google/common/collect/TreeMultiset$b;.<init>:(Lcom/google/common/collect/TreeMultiset;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.collect.u2$a` `a`(`com.google.common.collect.TreeMultiset$b` v3 @kind this) @signature `Lcom/google/common/collect/TreeMultiset$b;.a:()Lcom/google/common/collect/u2$a;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.TreeMultiset$b` v3 @kind this) @signature `Lcom/google/common/collect/TreeMultiset$b;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.TreeMultiset$b` v1 @kind this) @signature `Lcom/google/common/collect/TreeMultiset$b;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.TreeMultiset$b` v3 @kind this) @signature `Lcom/google/common/collect/TreeMultiset$b;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
