record `com.google.common.collect.StandardTable` @kind class @AccessFlag  extends `com.google.common.collect.n` @kind class, `java.io.Serializable` @kind interface {
  `java.util.Map` `com.google.common.collect.StandardTable.backingMap` @AccessFlag FINAL;
  `java.util.Set` `com.google.common.collect.StandardTable.d` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Map` `com.google.common.collect.StandardTable.e` @AccessFlag PRIVATE_TRANSIENT;
  `com.google.common.collect.StandardTable$f` `com.google.common.collect.StandardTable.f` @AccessFlag PRIVATE_TRANSIENT;
  `com.google.common.base.l0` `com.google.common.collect.StandardTable.factory` @AccessFlag FINAL;
}
global `long` `@@com.google.common.collect.StandardTable.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.collect.StandardTable` v0 @kind this, `java.util.Map` v1 @kind object, `com.google.common.base.l0` v2 @kind object) @signature `Lcom/google/common/collect/StandardTable;.<init>:(Ljava/util/Map;Lcom/google/common/base/l0;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `a`(`com.google.common.collect.StandardTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/StandardTable;.a:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `access$300`(`com.google.common.collect.StandardTable` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/StandardTable;.access$300:(Lcom/google/common/collect/StandardTable;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `access$400`(`com.google.common.collect.StandardTable` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/StandardTable;.access$400:(Lcom/google/common/collect/StandardTable;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `access$900`(`com.google.common.collect.StandardTable` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/StandardTable;.access$900:(Lcom/google/common/collect/StandardTable;Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `b`(`com.google.common.collect.StandardTable` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/StandardTable;.b:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.Map` `c`(`com.google.common.collect.StandardTable` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/common/collect/StandardTable;.c:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `d`(`com.google.common.collect.StandardTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/StandardTable;.d:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.Iterator` `cellIterator`(`com.google.common.collect.StandardTable` v2 @kind this) @signature `Lcom/google/common/collect/StandardTable;.cellIterator:()Ljava/util/Iterator;` @AccessFlag  {

  # return;
}
procedure `java.util.Set` `cellSet`(`com.google.common.collect.StandardTable` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable;.cellSet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.StandardTable` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `column`(`com.google.common.collect.StandardTable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/StandardTable;.column:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `columnKeySet`(`com.google.common.collect.StandardTable` v2 @kind this) @signature `Lcom/google/common/collect/StandardTable;.columnKeySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `columnMap`(`com.google.common.collect.StandardTable` v2 @kind this) @signature `Lcom/google/common/collect/StandardTable;.columnMap:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.StandardTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/StandardTable;.contains:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsColumn`(`com.google.common.collect.StandardTable` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/StandardTable;.containsColumn:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsRow`(`com.google.common.collect.StandardTable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/StandardTable;.containsRow:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsValue`(`com.google.common.collect.StandardTable` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/StandardTable;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `createColumnKeyIterator`(`com.google.common.collect.StandardTable` v2 @kind this) @signature `Lcom/google/common/collect/StandardTable;.createColumnKeyIterator:()Ljava/util/Iterator;` @AccessFlag  {

  # return;
}
procedure `java.util.Map` `createRowMap`(`com.google.common.collect.StandardTable` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable;.createRowMap:()Ljava/util/Map;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.StandardTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/StandardTable;.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.collect.StandardTable` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.StandardTable` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/StandardTable;.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.StandardTable` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/StandardTable;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `row`(`com.google.common.collect.StandardTable` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/StandardTable;.row:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `rowKeySet`(`com.google.common.collect.StandardTable` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable;.rowKeySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Map` `rowMap`(`com.google.common.collect.StandardTable` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable;.rowMap:()Ljava/util/Map;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.StandardTable` v3 @kind this) @signature `Lcom/google/common/collect/StandardTable;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Collection` `values`(`com.google.common.collect.StandardTable` v1 @kind this) @signature `Lcom/google/common/collect/StandardTable;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC {

  # return;
}
