record `com.google.common.collect.f4` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `java.util.Set` `cellSet`() @signature `Lcom/google/common/collect/f4;.cellSet:()Ljava/util/Set;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `clear`() @signature `Lcom/google/common/collect/f4;.clear:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `column`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/f4;.column:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Set` `columnKeySet`() @signature `Lcom/google/common/collect/f4;.columnKeySet:()Ljava/util/Set;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `columnMap`() @signature `Lcom/google/common/collect/f4;.columnMap:()Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `contains`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/f4;.contains:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `containsColumn`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/f4;.containsColumn:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `containsRow`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/f4;.containsRow:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `containsValue`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/f4;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/f4;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `get`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/f4;.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`() @signature `Lcom/google/common/collect/f4;.hashCode:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEmpty`() @signature `Lcom/google/common/collect/f4;.isEmpty:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `put`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/f4;.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `putAll`(`com.google.common.collect.f4` v0 @kind object) @signature `Lcom/google/common/collect/f4;.putAll:(Lcom/google/common/collect/f4;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `remove`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/f4;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `row`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/collect/f4;.row:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Set` `rowKeySet`() @signature `Lcom/google/common/collect/f4;.rowKeySet:()Ljava/util/Set;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `rowMap`() @signature `Lcom/google/common/collect/f4;.rowMap:()Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `size`() @signature `Lcom/google/common/collect/f4;.size:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Collection` `values`() @signature `Lcom/google/common/collect/f4;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
