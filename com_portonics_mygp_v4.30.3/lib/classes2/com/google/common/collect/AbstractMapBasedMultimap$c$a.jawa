record `com.google.common.collect.AbstractMapBasedMultimap$c$a` @kind class @AccessFlag  extends `com.google.common.collect.w1` @kind class {
  `com.google.common.collect.AbstractMapBasedMultimap$c` `com.google.common.collect.AbstractMapBasedMultimap$c$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.AbstractMapBasedMultimap$c$a` v0 @kind this, `com.google.common.collect.AbstractMapBasedMultimap$c` v1 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$c$a;.<init>:(Lcom/google/common/collect/AbstractMapBasedMultimap$c;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.util.Map` `c`(`com.google.common.collect.AbstractMapBasedMultimap$c$a` v1 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$c$a;.c:()Ljava/util/Map;` @AccessFlag  {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.AbstractMapBasedMultimap$c$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$c$a;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.AbstractMapBasedMultimap$c$a` v2 @kind this) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$c$a;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `remove`(`com.google.common.collect.AbstractMapBasedMultimap$c$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractMapBasedMultimap$c$a;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
