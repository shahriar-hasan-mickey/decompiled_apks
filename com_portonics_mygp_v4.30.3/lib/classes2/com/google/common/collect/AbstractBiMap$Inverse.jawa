record `com.google.common.collect.AbstractBiMap$Inverse` @kind class @AccessFlag  extends `com.google.common.collect.AbstractBiMap` @kind class {
}
global `long` `@@com.google.common.collect.AbstractBiMap$Inverse.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.collect.AbstractBiMap$Inverse` v1 @kind this, `java.util.Map` v2 @kind object, `com.google.common.collect.AbstractBiMap` v3 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap$Inverse;.<init>:(Ljava/util/Map;Lcom/google/common/collect/AbstractBiMap;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `readObject`(`com.google.common.collect.AbstractBiMap$Inverse` v0 @kind this, `java.io.ObjectInputStream` v1 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap$Inverse;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `writeObject`(`com.google.common.collect.AbstractBiMap$Inverse` v1 @kind this, `java.io.ObjectOutputStream` v2 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap$Inverse;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `checkKey`(`com.google.common.collect.AbstractBiMap$Inverse` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap$Inverse;.checkKey:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `checkValue`(`com.google.common.collect.AbstractBiMap$Inverse` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/AbstractBiMap$Inverse;.checkValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `delegate`(`com.google.common.collect.AbstractBiMap$Inverse` v1 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap$Inverse;.delegate:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `readResolve`(`com.google.common.collect.AbstractBiMap$Inverse` v1 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap$Inverse;.readResolve:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `java.util.Collection` `values`(`com.google.common.collect.AbstractBiMap$Inverse` v1 @kind this) @signature `Lcom/google/common/collect/AbstractBiMap$Inverse;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
