record `com.google.common.util.concurrent.CycleDetectingLockFactory` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `java.util.concurrent.ConcurrentMap` `@@com.google.common.util.concurrent.CycleDetectingLockFactory.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@com.google.common.util.concurrent.CycleDetectingLockFactory.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.ThreadLocal` `@@com.google.common.util.concurrent.CycleDetectingLockFactory.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/CycleDetectingLockFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.logging.Logger` `a`() @signature `Lcom/google/common/util/concurrent/CycleDetectingLockFactory;.a:()Ljava/util/logging/Logger;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `b`(`com.google.common.util.concurrent.CycleDetectingLockFactory` v0 @kind object, `com.google.common.util.concurrent.CycleDetectingLockFactory$b` v1 @kind object) @signature `Lcom/google/common/util/concurrent/CycleDetectingLockFactory;.b:(Lcom/google/common/util/concurrent/CycleDetectingLockFactory;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$b;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `c`(`com.google.common.util.concurrent.CycleDetectingLockFactory$b` v0 @kind object) @signature `Lcom/google/common/util/concurrent/CycleDetectingLockFactory;.c:(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$b;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `d`(`com.google.common.util.concurrent.CycleDetectingLockFactory$b` v3 @kind object) @signature `Lcom/google/common/util/concurrent/CycleDetectingLockFactory;.d:(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$b;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
