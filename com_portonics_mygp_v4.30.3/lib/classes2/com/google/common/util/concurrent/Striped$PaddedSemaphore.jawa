record `com.google.common.util.concurrent.Striped$PaddedSemaphore` @kind class @AccessFlag  extends `java.util.concurrent.Semaphore` @kind class {
  `long` `com.google.common.util.concurrent.Striped$PaddedSemaphore.unused1` @AccessFlag ;
  `long` `com.google.common.util.concurrent.Striped$PaddedSemaphore.unused2` @AccessFlag ;
  `long` `com.google.common.util.concurrent.Striped$PaddedSemaphore.unused3` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.Striped$PaddedSemaphore` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/util/concurrent/Striped$PaddedSemaphore;.<init>:(I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
