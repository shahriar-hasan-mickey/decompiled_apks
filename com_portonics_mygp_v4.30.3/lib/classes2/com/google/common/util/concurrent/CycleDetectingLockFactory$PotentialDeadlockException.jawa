record `com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace` @kind class {
  `com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace` `com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException.conflictingStackTrace` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException` v0 @kind this, `com.google.common.util.concurrent.CycleDetectingLockFactory$c` v1 @kind object, `com.google.common.util.concurrent.CycleDetectingLockFactory$c` v2 @kind object, `com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace` v3 @kind object) @signature `Lcom/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException;.<init>:(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$c;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$c;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$ExampleStackTrace;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException` v0 @kind this, `com.google.common.util.concurrent.CycleDetectingLockFactory$c` v1 @kind object, `com.google.common.util.concurrent.CycleDetectingLockFactory$c` v2 @kind object, `com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace` v3 @kind object, `com.google.common.util.concurrent.CycleDetectingLockFactory$a` v4 @kind object) @signature `Lcom/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException;.<init>:(Lcom/google/common/util/concurrent/CycleDetectingLockFactory$c;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$c;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$ExampleStackTrace;Lcom/google/common/util/concurrent/CycleDetectingLockFactory$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace` `getConflictingStackTrace`(`com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException` v1 @kind this) @signature `Lcom/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException;.getConflictingStackTrace:()Lcom/google/common/util/concurrent/CycleDetectingLockFactory$ExampleStackTrace;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getMessage`(`com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException` v3 @kind this) @signature `Lcom/google/common/util/concurrent/CycleDetectingLockFactory$PotentialDeadlockException;.getMessage:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
