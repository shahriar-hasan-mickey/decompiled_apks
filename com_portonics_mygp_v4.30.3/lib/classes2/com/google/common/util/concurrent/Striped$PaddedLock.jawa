record `com.google.common.util.concurrent.Striped$PaddedLock` @kind class @AccessFlag  extends `java.util.concurrent.locks.ReentrantLock` @kind class {
  `long` `com.google.common.util.concurrent.Striped$PaddedLock.unused1` @AccessFlag ;
  `long` `com.google.common.util.concurrent.Striped$PaddedLock.unused2` @AccessFlag ;
  `long` `com.google.common.util.concurrent.Striped$PaddedLock.unused3` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.Striped$PaddedLock` v1 @kind this) @signature `Lcom/google/common/util/concurrent/Striped$PaddedLock;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
