record `com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask` @kind class @AccessFlag ABSTRACT extends `com.google.common.util.concurrent.InterruptibleTask` @kind class {
  `java.util.concurrent.Executor` `com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask.listenerExecutor` @AccessFlag PRIVATE_FINAL;
  `com.google.common.util.concurrent.CombinedFuture` `com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask.this$0` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask.thrownByExecute` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask` v0 @kind this, `com.google.common.util.concurrent.CombinedFuture` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Lcom/google/common/util/concurrent/CombinedFuture$CombinedFutureInterruptibleTask;.<init>:(Lcom/google/common/util/concurrent/CombinedFuture;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `afterRanInterruptibly`(`com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lcom/google/common/util/concurrent/CombinedFuture$CombinedFutureInterruptibleTask;.afterRanInterruptibly:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag FINAL {

  # return;
}
procedure `void` `execute`(`com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask` v1 @kind this) @signature `Lcom/google/common/util/concurrent/CombinedFuture$CombinedFutureInterruptibleTask;.execute:()V` @AccessFlag FINAL {

  # return;
}
procedure `boolean` `isDone`(`com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask` v1 @kind this) @signature `Lcom/google/common/util/concurrent/CombinedFuture$CombinedFutureInterruptibleTask;.isDone:()Z` @AccessFlag FINAL {

  # return;
}
procedure `void` `setValue`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/util/concurrent/CombinedFuture$CombinedFutureInterruptibleTask;.setValue:(Ljava/lang/Object;)V` @AccessFlag ABSTRACT {

  # return;
}
