record `com.google.common.util.concurrent.s` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.util.concurrent.w` @kind class {
}
procedure `java.lang.Object` `a`(`java.util.concurrent.Future` v2 @kind object) @signature `Lcom/google/common/util/concurrent/s;.a:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.a0` `b`(`java.lang.Throwable` v1 @kind object) @signature `Lcom/google/common/util/concurrent/s;.b:(Ljava/lang/Throwable;)Lcom/google/common/util/concurrent/a0;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.a0` `c`(`java.lang.Object` v1 @kind object) @signature `Lcom/google/common/util/concurrent/s;.c:(Ljava/lang/Object;)Lcom/google/common/util/concurrent/a0;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.a0` `d`(`com.google.common.util.concurrent.a0` v0 @kind object, `com.google.common.base.o` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Lcom/google/common/util/concurrent/s;.d:(Lcom/google/common/util/concurrent/a0;Lcom/google/common/base/o;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/a0;` @AccessFlag PUBLIC_STATIC {

  # return;
}
