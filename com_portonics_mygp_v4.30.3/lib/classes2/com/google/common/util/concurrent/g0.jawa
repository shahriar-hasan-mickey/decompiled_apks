record `com.google.common.util.concurrent.g0` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.common.util.concurrent.i` @kind class {
}
procedure `void` `<init>`(`com.google.common.util.concurrent.g0` v0 @kind this) @signature `Lcom/google/common/util/concurrent/g0;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.util.concurrent.g0` `F`() @signature `Lcom/google/common/util/concurrent/g0;.F:()Lcom/google/common/util/concurrent/g0;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `A`(`com.google.common.util.concurrent.g0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/util/concurrent/g0;.A:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `B`(`com.google.common.util.concurrent.g0` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lcom/google/common/util/concurrent/g0;.B:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {

  # return;
}
