record `com.google.common.util.concurrent.y` @kind class @AccessFlag  extends `com.google.common.util.concurrent.z` @kind class {
  `java.lang.Object` `com.google.common.util.concurrent.y.d` @AccessFlag PRIVATE_FINAL;
}
global `com.google.common.util.concurrent.y` `@@com.google.common.util.concurrent.y.c` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/y;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.y` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/util/concurrent/y;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.util.concurrent.y` v1 @kind this) @signature `Lcom/google/common/util/concurrent/y;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.y` v2 @kind this) @signature `Lcom/google/common/util/concurrent/y;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
