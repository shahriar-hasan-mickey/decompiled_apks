record `com.google.common.util.concurrent.m` @kind class @AccessFlag FINAL extends `com.google.common.util.concurrent.n` @kind class {
}
procedure `void` `<init>`(`com.google.common.util.concurrent.m` v0 @kind this, `com.google.common.util.concurrent.a0` v1 @kind object, `com.google.common.base.o` v2 @kind object) @signature `Lcom/google/common/util/concurrent/m;.<init>:(Lcom/google/common/util/concurrent/a0;Lcom/google/common/base/o;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `G`(`com.google.common.util.concurrent.m` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/util/concurrent/m;.G:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag SYNTHETIC {

  # return;
}
procedure `void` `H`(`com.google.common.util.concurrent.m` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/util/concurrent/m;.H:(Ljava/lang/Object;)V` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `I`(`com.google.common.util.concurrent.m` v0 @kind this, `com.google.common.base.o` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/util/concurrent/m;.I:(Lcom/google/common/base/o;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
