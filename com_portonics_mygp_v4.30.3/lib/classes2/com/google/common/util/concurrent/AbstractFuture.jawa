record `com.google.common.util.concurrent.AbstractFuture` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.common.util.concurrent.l0.a` @kind class, `com.google.common.util.concurrent.a0` @kind interface {
  `java.lang.Object` `com.google.common.util.concurrent.AbstractFuture.f` @AccessFlag PRIVATE_VOLATILE;
  `com.google.common.util.concurrent.d` `com.google.common.util.concurrent.AbstractFuture.g` @AccessFlag PRIVATE_VOLATILE;
  `com.google.common.util.concurrent.l` `com.google.common.util.concurrent.AbstractFuture.h` @AccessFlag PRIVATE_VOLATILE;
}
global `boolean` `@@com.google.common.util.concurrent.AbstractFuture.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@com.google.common.util.concurrent.AbstractFuture.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.common.util.concurrent.b` `@@com.google.common.util.concurrent.AbstractFuture.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object` `@@com.google.common.util.concurrent.AbstractFuture.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/AbstractFuture;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `D`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.D:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.util.concurrent.b` `b`() @signature `Lcom/google/common/util/concurrent/AbstractFuture;.b:()Lcom/google/common/util/concurrent/b;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `c`() @signature `Lcom/google/common/util/concurrent/AbstractFuture;.c:()Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `e`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.e:(Lcom/google/common/util/concurrent/AbstractFuture;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `f`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.f:(Lcom/google/common/util/concurrent/AbstractFuture;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `g`(`com.google.common.util.concurrent.a0` v0 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.g:(Lcom/google/common/util/concurrent/a0;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `h`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.h:(Lcom/google/common/util/concurrent/AbstractFuture;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.l` `i`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.i:(Lcom/google/common/util/concurrent/AbstractFuture;)Lcom/google/common/util/concurrent/l;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.l` `j`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind object, `com.google.common.util.concurrent.l` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.j:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/l;)Lcom/google/common/util/concurrent/l;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.d` `k`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.k:(Lcom/google/common/util/concurrent/AbstractFuture;)Lcom/google/common/util/concurrent/d;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.d` `l`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind object, `com.google.common.util.concurrent.d` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.l:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/d;)Lcom/google/common/util/concurrent/d;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `m`(`com.google.common.util.concurrent.AbstractFuture` v3 @kind this, `java.lang.StringBuilder` v4 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.m:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.concurrent.CancellationException` `o`(`java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.o:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.d` `p`(`com.google.common.util.concurrent.AbstractFuture` v4 @kind this, `com.google.common.util.concurrent.d` v5 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.p:(Lcom/google/common/util/concurrent/d;)Lcom/google/common/util/concurrent/d;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `q`(`com.google.common.util.concurrent.AbstractFuture` v4 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.q:(Lcom/google/common/util/concurrent/AbstractFuture;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `r`(`java.lang.Runnable` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.r:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `s`(`com.google.common.util.concurrent.AbstractFuture` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.s:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `t`(`com.google.common.util.concurrent.a0` v6 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.t:(Lcom/google/common/util/concurrent/a0;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `u`(`java.util.concurrent.Future` v1 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.u:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `y`(`com.google.common.util.concurrent.AbstractFuture` v3 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.y:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `z`(`com.google.common.util.concurrent.AbstractFuture` v4 @kind this, `com.google.common.util.concurrent.l` v5 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.z:(Lcom/google/common/util/concurrent/l;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `A`(`com.google.common.util.concurrent.AbstractFuture` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.A:(Ljava/lang/Object;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `B`(`com.google.common.util.concurrent.AbstractFuture` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.B:(Ljava/lang/Throwable;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `C`(`com.google.common.util.concurrent.AbstractFuture` v5 @kind this, `com.google.common.util.concurrent.a0` v6 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.C:(Lcom/google/common/util/concurrent/a0;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `E`(`com.google.common.util.concurrent.AbstractFuture` v2 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.E:()Z` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `java.lang.Throwable` `a`(`com.google.common.util.concurrent.AbstractFuture` v2 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.a:()Ljava/lang/Throwable;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `boolean` `cancel`(`com.google.common.util.concurrent.AbstractFuture` v7 @kind this, `boolean` v8 ) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.cancel:(Z)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `d`(`com.google.common.util.concurrent.AbstractFuture` v3 @kind this, `java.lang.Runnable` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.d:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.util.concurrent.AbstractFuture` v6 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.util.concurrent.AbstractFuture` v19 @kind this, `long` v20 , `java.util.concurrent.TimeUnit` v22 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isCancelled`(`com.google.common.util.concurrent.AbstractFuture` v1 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.isCancelled:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isDone`(`com.google.common.util.concurrent.AbstractFuture` v3 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.isDone:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `n`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.n:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.AbstractFuture` v5 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `v`(`com.google.common.util.concurrent.AbstractFuture` v0 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.v:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `w`(`com.google.common.util.concurrent.AbstractFuture` v2 @kind this, `java.util.concurrent.Future` v3 @kind object) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.w:(Ljava/util/concurrent/Future;)V` @AccessFlag FINAL {

  # return;
}
procedure `java.lang.String` `x`(`com.google.common.util.concurrent.AbstractFuture` v3 @kind this) @signature `Lcom/google/common/util/concurrent/AbstractFuture;.x:()Ljava/lang/String;` @AccessFlag PROTECTED {

  # return;
}
