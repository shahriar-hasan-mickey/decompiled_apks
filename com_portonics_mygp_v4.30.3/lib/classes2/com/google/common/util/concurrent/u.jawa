record `com.google.common.util.concurrent.u` @kind class @AccessFlag ABSTRACT {
}
global `com.google.common.collect.Ordering` `@@com.google.common.util.concurrent.u.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/u;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`java.lang.Class` v2 @kind object) @signature `Lcom/google/common/util/concurrent/u;.a:(Ljava/lang/Class;)V` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `b`(`java.lang.Class` v1 @kind object) @signature `Lcom/google/common/util/concurrent/u;.b:(Ljava/lang/Class;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `c`(`java.lang.Class` v1 @kind object) @signature `Lcom/google/common/util/concurrent/u;.c:(Ljava/lang/Class;)Z` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Object` `d`(`java.lang.reflect.Constructor` v6 @kind object, `java.lang.Throwable` v7 @kind object) @signature `Lcom/google/common/util/concurrent/u;.d:(Ljava/lang/reflect/Constructor;Ljava/lang/Throwable;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Exception` `e`(`java.lang.Class` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lcom/google/common/util/concurrent/u;.e:(Ljava/lang/Class;Ljava/lang/Throwable;)Ljava/lang/Exception;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.List` `f`(`java.util.List` v1 @kind object) @signature `Lcom/google/common/util/concurrent/u;.f:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {

  # return;
}
