record `com.google.common.util.concurrent.f` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `com.google.common.util.concurrent.AbstractFuture` `com.google.common.util.concurrent.f.b` @AccessFlag FINAL;
  `com.google.common.util.concurrent.a0` `com.google.common.util.concurrent.f.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.f` v0 @kind this, `com.google.common.util.concurrent.AbstractFuture` v1 @kind object, `com.google.common.util.concurrent.a0` v2 @kind object) @signature `Lcom/google/common/util/concurrent/f;.<init>:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/a0;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `run`(`com.google.common.util.concurrent.f` v3 @kind this) @signature `Lcom/google/common/util/concurrent/f;.run:()V` @AccessFlag PUBLIC {

  # return;
}
