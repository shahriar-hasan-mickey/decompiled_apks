record `com.google.common.math.f` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `byte`[] `@@com.google.common.math.f.a` @AccessFlag STATIC_FINAL;
global `int`[] `@@com.google.common.math.f.b` @AccessFlag STATIC_FINAL;
global `int`[] `@@com.google.common.math.f.c` @AccessFlag STATIC_FINAL;
global `int`[] `@@com.google.common.math.f.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@com.google.common.math.f.e` @AccessFlag STATIC;
procedure `void` `<clinit>`() @signature `Lcom/google/common/math/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`int` v6 , `int` v7 ) @signature `Lcom/google/common/math/f;.a:(II)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `b`(`int` v5 , `int` v6 , `java.math.RoundingMode` v7 @kind object) @signature `Lcom/google/common/math/f;.b:(IILjava/math/RoundingMode;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `c`(`int` v4 ) @signature `Lcom/google/common/math/f;.c:(I)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `d`(`int` v0 , `int` v1 ) @signature `Lcom/google/common/math/f;.d:(II)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `e`(`int` v1 , `java.math.RoundingMode` v2 @kind object) @signature `Lcom/google/common/math/f;.e:(ILjava/math/RoundingMode;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `f`(`int` v2 , `int` v3 ) @signature `Lcom/google/common/math/f;.f:(II)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
