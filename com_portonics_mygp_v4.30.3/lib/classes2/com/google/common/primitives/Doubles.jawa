record `com.google.common.primitives.Doubles` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `java.util.regex.Pattern` `@@com.google.common.primitives.Doubles.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/primitives/Doubles;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`double`[] v0 @kind object, `double` v1 , `int` v3 , `int` v4 ) @signature `Lcom/google/common/primitives/Doubles;.a:([DDII)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `b`(`double`[] v0 @kind object, `double` v1 , `int` v3 , `int` v4 ) @signature `Lcom/google/common/primitives/Doubles;.b:([DDII)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.regex.Pattern` `c`() @signature `Lcom/google/common/primitives/Doubles;.c:()Ljava/util/regex/Pattern;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `d`(`double` v0 ) @signature `Lcom/google/common/primitives/Doubles;.d:(D)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `e`(`double`[] v3 @kind object, `double` v4 , `int` v6 , `int` v7 ) @signature `Lcom/google/common/primitives/Doubles;.e:([DDII)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `f`(`double` v3 ) @signature `Lcom/google/common/primitives/Doubles;.f:(D)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `g`(`double`[] v3 @kind object, `double` v4 , `int` v6 , `int` v7 ) @signature `Lcom/google/common/primitives/Doubles;.g:([DDII)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `double`[] `h`(`java.util.Collection` v5 @kind object) @signature `Lcom/google/common/primitives/Doubles;.h:(Ljava/util/Collection;)[D` @AccessFlag PUBLIC_STATIC {

  # return;
}
