record `com.google.common.reflect.n` @kind class @AccessFlag  {
  `java.util.concurrent.atomic.AtomicInteger` `com.google.common.reflect.n.b` @AccessFlag PRIVATE_FINAL;
}
global `com.google.common.reflect.n` `@@com.google.common.reflect.n.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/reflect/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.reflect.n` v1 @kind this) @signature `Lcom/google/common/reflect/n;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.reflect.n` v0 @kind this, `java.util.concurrent.atomic.AtomicInteger` v1 @kind object) @signature `Lcom/google/common/reflect/n;.<init>:(Ljava/util/concurrent/atomic/AtomicInteger;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.reflect.n` v0 @kind this, `java.util.concurrent.atomic.AtomicInteger` v1 @kind object, `com.google.common.reflect.h` v2 @kind object) @signature `Lcom/google/common/reflect/n;.<init>:(Ljava/util/concurrent/atomic/AtomicInteger;Lcom/google/common/reflect/h;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.reflect.Type` `c`(`com.google.common.reflect.n` v0 @kind this, `java.lang.reflect.Type` v1 @kind object) @signature `Lcom/google/common/reflect/n;.c:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.reflect.n` `d`(`com.google.common.reflect.n` v2 @kind this, `java.lang.reflect.TypeVariable` v3 @kind object) @signature `Lcom/google/common/reflect/n;.d:(Ljava/lang/reflect/TypeVariable;)Lcom/google/common/reflect/n;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.reflect.n` `e`(`com.google.common.reflect.n` v2 @kind this) @signature `Lcom/google/common/reflect/n;.e:()Lcom/google/common/reflect/n;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.reflect.Type` `a`(`com.google.common.reflect.n` v6 @kind this, `java.lang.reflect.Type` v7 @kind object) @signature `Lcom/google/common/reflect/n;.a:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag FINAL {

  # return;
}
procedure `java.lang.reflect.TypeVariable` `b`(`com.google.common.reflect.n` v2 @kind this, `java.lang.reflect.Type`[] v3 @kind object) @signature `Lcom/google/common/reflect/n;.b:([Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;` @AccessFlag  {

  # return;
}
