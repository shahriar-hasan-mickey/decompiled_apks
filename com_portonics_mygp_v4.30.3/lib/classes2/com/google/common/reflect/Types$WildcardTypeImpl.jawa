record `com.google.common.reflect.Types$WildcardTypeImpl` @kind class @AccessFlag FINAL extends `java.lang.reflect.WildcardType` @kind interface, `java.io.Serializable` @kind interface {
  `com.google.common.collect.ImmutableList` `com.google.common.reflect.Types$WildcardTypeImpl.lowerBounds` @AccessFlag PRIVATE_FINAL;
  `com.google.common.collect.ImmutableList` `com.google.common.reflect.Types$WildcardTypeImpl.upperBounds` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@com.google.common.reflect.Types$WildcardTypeImpl.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.reflect.Types$WildcardTypeImpl` v1 @kind this, `java.lang.reflect.Type`[] v2 @kind object, `java.lang.reflect.Type`[] v3 @kind object) @signature `Lcom/google/common/reflect/Types$WildcardTypeImpl;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`com.google.common.reflect.Types$WildcardTypeImpl` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/reflect/Types$WildcardTypeImpl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.reflect.Type`[] `getLowerBounds`(`com.google.common.reflect.Types$WildcardTypeImpl` v1 @kind this) @signature `Lcom/google/common/reflect/Types$WildcardTypeImpl;.getLowerBounds:()[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.reflect.Type`[] `getUpperBounds`(`com.google.common.reflect.Types$WildcardTypeImpl` v1 @kind this) @signature `Lcom/google/common/reflect/Types$WildcardTypeImpl;.getUpperBounds:()[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.reflect.Types$WildcardTypeImpl` v2 @kind this) @signature `Lcom/google/common/reflect/Types$WildcardTypeImpl;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.reflect.Types$WildcardTypeImpl` v4 @kind this) @signature `Lcom/google/common/reflect/Types$WildcardTypeImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
