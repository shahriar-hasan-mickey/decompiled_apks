record `com.google.common.reflect.Types$JavaVersion` @kind class @AccessFlag ABSTRACT_ENUM extends `java.lang.Enum` @kind class {
}
global `com.google.common.reflect.Types$JavaVersion`[] `@@com.google.common.reflect.Types$JavaVersion.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.google.common.reflect.Types$JavaVersion` `@@com.google.common.reflect.Types$JavaVersion.CURRENT` @AccessFlag STATIC_FINAL;
global `com.google.common.reflect.Types$JavaVersion` `@@com.google.common.reflect.Types$JavaVersion.JAVA6` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.common.reflect.Types$JavaVersion` `@@com.google.common.reflect.Types$JavaVersion.JAVA7` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.common.reflect.Types$JavaVersion` `@@com.google.common.reflect.Types$JavaVersion.JAVA8` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.common.reflect.Types$JavaVersion` `@@com.google.common.reflect.Types$JavaVersion.JAVA9` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/google/common/reflect/Types$JavaVersion;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.reflect.Types$JavaVersion` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/google/common/reflect/Types$JavaVersion;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.reflect.Types$JavaVersion` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `com.google.common.reflect.Types$a` v3 @kind object) @signature `Lcom/google/common/reflect/Types$JavaVersion;.<init>:(Ljava/lang/String;ILcom/google/common/reflect/Types$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.reflect.Types$JavaVersion` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/google/common/reflect/Types$JavaVersion;.valueOf:(Ljava/lang/String;)Lcom/google/common/reflect/Types$JavaVersion;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.reflect.Types$JavaVersion`[] `values`() @signature `Lcom/google/common/reflect/Types$JavaVersion;.values:()[Lcom/google/common/reflect/Types$JavaVersion;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `jdkTypeDuplicatesOwnerName`(`com.google.common.reflect.Types$JavaVersion` v1 @kind this) @signature `Lcom/google/common/reflect/Types$JavaVersion;.jdkTypeDuplicatesOwnerName:()Z` @AccessFlag  {

  # return;
}
procedure `java.lang.reflect.Type` `newArrayType`(`java.lang.reflect.Type` v0 @kind object) @signature `Lcom/google/common/reflect/Types$JavaVersion;.newArrayType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.lang.String` `typeName`(`com.google.common.reflect.Types$JavaVersion` v0 @kind this, `java.lang.reflect.Type` v1 @kind object) @signature `Lcom/google/common/reflect/Types$JavaVersion;.typeName:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.ImmutableList` `usedInGenericType`(`com.google.common.reflect.Types$JavaVersion` v4 @kind this, `java.lang.reflect.Type`[] v5 @kind object) @signature `Lcom/google/common/reflect/Types$JavaVersion;.usedInGenericType:([Ljava/lang/reflect/Type;)Lcom/google/common/collect/ImmutableList;` @AccessFlag FINAL {

  # return;
}
procedure `java.lang.reflect.Type` `usedInGenericType`(`java.lang.reflect.Type` v0 @kind object) @signature `Lcom/google/common/reflect/Types$JavaVersion;.usedInGenericType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag ABSTRACT {

  # return;
}
