record `com.google.common.base.Present` @kind class @AccessFlag FINAL extends `com.google.common.base.Optional` @kind class {
  `java.lang.Object` `com.google.common.base.Present.reference` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@com.google.common.base.Present.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.common.base.Present` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/base/Present;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.util.Set` `asSet`(`com.google.common.base.Present` v1 @kind this) @signature `Lcom/google/common/base/Present;.asSet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.common.base.Present` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/base/Present;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.base.Present` v1 @kind this) @signature `Lcom/google/common/base/Present;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.common.base.Present` v2 @kind this) @signature `Lcom/google/common/base/Present;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isPresent`(`com.google.common.base.Present` v1 @kind this) @signature `Lcom/google/common/base/Present;.isPresent:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.base.Optional` `or`(`com.google.common.base.Present` v0 @kind this, `com.google.common.base.Optional` v1 @kind object) @signature `Lcom/google/common/base/Present;.or:(Lcom/google/common/base/Optional;)Lcom/google/common/base/Optional;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `or`(`com.google.common.base.Present` v0 @kind this, `com.google.common.base.l0` v1 @kind object) @signature `Lcom/google/common/base/Present;.or:(Lcom/google/common/base/l0;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `or`(`com.google.common.base.Present` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/base/Present;.or:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `orNull`(`com.google.common.base.Present` v1 @kind this) @signature `Lcom/google/common/base/Present;.orNull:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.base.Present` v2 @kind this) @signature `Lcom/google/common/base/Present;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.base.Optional` `transform`(`com.google.common.base.Present` v2 @kind this, `com.google.common.base.o` v3 @kind object) @signature `Lcom/google/common/base/Present;.transform:(Lcom/google/common/base/o;)Lcom/google/common/base/Optional;` @AccessFlag PUBLIC {

  # return;
}
