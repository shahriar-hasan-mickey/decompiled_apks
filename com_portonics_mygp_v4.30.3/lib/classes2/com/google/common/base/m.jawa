record `com.google.common.base.m` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `com.google.common.base.m.b` @AccessFlag PRIVATE_FINAL;
  `com.google.common.base.Converter$a` `com.google.common.base.m.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.base.m` v0 @kind this, `com.google.common.base.Converter$a` v1 @kind object) @signature `Lcom/google/common/base/m;.<init>:(Lcom/google/common/base/Converter$a;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.base.m` v1 @kind this) @signature `Lcom/google/common/base/m;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.base.m` v2 @kind this) @signature `Lcom/google/common/base/m;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`com.google.common.base.m` v1 @kind this) @signature `Lcom/google/common/base/m;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
