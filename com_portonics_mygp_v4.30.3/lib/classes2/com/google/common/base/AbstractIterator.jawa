record `com.google.common.base.AbstractIterator` @kind class @AccessFlag ABSTRACT extends `java.util.Iterator` @kind interface {
  `com.google.common.base.AbstractIterator$State` `com.google.common.base.AbstractIterator.b` @AccessFlag PRIVATE;
  `java.lang.Object` `com.google.common.base.AbstractIterator.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.common.base.AbstractIterator` v1 @kind this) @signature `Lcom/google/common/base/AbstractIterator;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `boolean` `c`(`com.google.common.base.AbstractIterator` v2 @kind this) @signature `Lcom/google/common/base/AbstractIterator;.c:()Z` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `a`() @signature `Lcom/google/common/base/AbstractIterator;.a:()Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `b`(`com.google.common.base.AbstractIterator` v1 @kind this) @signature `Lcom/google/common/base/AbstractIterator;.b:()Ljava/lang/Object;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.base.AbstractIterator` v4 @kind this) @signature `Lcom/google/common/base/AbstractIterator;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.base.AbstractIterator` v2 @kind this) @signature `Lcom/google/common/base/AbstractIterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `remove`(`com.google.common.base.AbstractIterator` v1 @kind this) @signature `Lcom/google/common/base/AbstractIterator;.remove:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
