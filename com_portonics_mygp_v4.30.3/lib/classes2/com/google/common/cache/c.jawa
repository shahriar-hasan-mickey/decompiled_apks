record `com.google.common.cache.c` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `java.util.concurrent.ConcurrentMap` `asMap`() @signature `Lcom/google/common/cache/c;.asMap:()Ljava/util/concurrent/ConcurrentMap;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `cleanUp`() @signature `Lcom/google/common/cache/c;.cleanUp:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `get`(`java.lang.Object` v0 @kind object, `java.util.concurrent.Callable` v1 @kind object) @signature `Lcom/google/common/cache/c;.get:(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.common.collect.ImmutableMap` `getAllPresent`(`java.lang.Iterable` v0 @kind object) @signature `Lcom/google/common/cache/c;.getAllPresent:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getIfPresent`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/cache/c;.getIfPresent:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `invalidate`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/cache/c;.invalidate:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `invalidateAll`() @signature `Lcom/google/common/cache/c;.invalidateAll:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `invalidateAll`(`java.lang.Iterable` v0 @kind object) @signature `Lcom/google/common/cache/c;.invalidateAll:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `put`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/cache/c;.put:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `putAll`(`java.util.Map` v0 @kind object) @signature `Lcom/google/common/cache/c;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `size`() @signature `Lcom/google/common/cache/c;.size:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.common.cache.g` `stats`() @signature `Lcom/google/common/cache/c;.stats:()Lcom/google/common/cache/g;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
