record `com.google.common.cache.LocalCache$b` @kind class @AccessFlag ABSTRACT extends `java.util.AbstractSet` @kind class {
  `java.util.concurrent.ConcurrentMap` `com.google.common.cache.LocalCache$b.b` @AccessFlag FINAL;
  `com.google.common.cache.LocalCache` `com.google.common.cache.LocalCache$b.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.cache.LocalCache$b` v0 @kind this, `com.google.common.cache.LocalCache` v1 @kind object, `java.util.concurrent.ConcurrentMap` v2 @kind object) @signature `Lcom/google/common/cache/LocalCache$b;.<init>:(Lcom/google/common/cache/LocalCache;Ljava/util/concurrent/ConcurrentMap;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `clear`(`com.google.common.cache.LocalCache$b` v1 @kind this) @signature `Lcom/google/common/cache/LocalCache$b;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.google.common.cache.LocalCache$b` v1 @kind this) @signature `Lcom/google/common/cache/LocalCache$b;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.common.cache.LocalCache$b` v1 @kind this) @signature `Lcom/google/common/cache/LocalCache$b;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object`[] `toArray`(`com.google.common.cache.LocalCache$b` v1 @kind this) @signature `Lcom/google/common/cache/LocalCache$b;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object`[] `toArray`(`com.google.common.cache.LocalCache$b` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lcom/google/common/cache/LocalCache$b;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
