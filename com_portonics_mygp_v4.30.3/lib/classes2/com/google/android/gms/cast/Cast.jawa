record `com.google.android.gms.cast.Cast` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@com.google.android.gms.cast.Cast.ACTIVE_INPUT_STATE_NO` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.gms.cast.Cast.ACTIVE_INPUT_STATE_UNKNOWN` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.gms.cast.Cast.ACTIVE_INPUT_STATE_YES` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.android.gms.common.api.a` `@@com.google.android.gms.cast.Cast.API` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.android.gms.cast.Cast$CastApi` `@@com.google.android.gms.cast.Cast.CastApi` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.gms.cast.Cast.EXTRA_APP_NO_LONGER_RUNNING` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.gms.cast.Cast.MAX_MESSAGE_LENGTH` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.gms.cast.Cast.MAX_NAMESPACE_LENGTH` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.gms.cast.Cast.STANDBY_STATE_NO` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.gms.cast.Cast.STANDBY_STATE_UNKNOWN` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.gms.cast.Cast.STANDBY_STATE_YES` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.android.gms.common.api.a$a` `@@com.google.android.gms.cast.Cast.zza` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/gms/cast/Cast;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.android.gms.cast.Cast` v0 @kind this) @signature `Lcom/google/android/gms/cast/Cast;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.android.gms.cast.zzr` `zza`(`android.content.Context` v1 @kind object, `com.google.android.gms.cast.Cast$CastOptions` v2 @kind object) @signature `Lcom/google/android/gms/cast/Cast;.zza:(Landroid/content/Context;Lcom/google/android/gms/cast/Cast$CastOptions;)Lcom/google/android/gms/cast/zzr;` @AccessFlag PUBLIC_STATIC {

  # return;
}
