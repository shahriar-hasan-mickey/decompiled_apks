record `com.google.firebase.crashlytics.internal.common.h1` @kind class @AccessFlag  extends `java.lang.Thread$UncaughtExceptionHandler` @kind interface {
  `com.google.firebase.crashlytics.internal.common.g1` `com.google.firebase.crashlytics.internal.common.h1.a` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.crashlytics.internal.settings.e` `com.google.firebase.crashlytics.internal.common.h1.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Thread$UncaughtExceptionHandler` `com.google.firebase.crashlytics.internal.common.h1.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `com.google.firebase.crashlytics.internal.common.h1.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.crashlytics.internal.common.h1` v0 @kind this, `com.google.firebase.crashlytics.internal.common.g1` v1 @kind object, `com.google.firebase.crashlytics.internal.settings.e` v2 @kind object, `java.lang.Thread$UncaughtExceptionHandler` v3 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/h1;.<init>:(Lcom/google/firebase/crashlytics/internal/common/g1;Lcom/google/firebase/crashlytics/internal/settings/e;Ljava/lang/Thread$UncaughtExceptionHandler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `a`(`com.google.firebase.crashlytics.internal.common.h1` v1 @kind this) @signature `Lcom/google/firebase/crashlytics/internal/common/h1;.a:()Z` @AccessFlag  {

  # return;
}
procedure `void` `uncaughtException`(`com.google.firebase.crashlytics.internal.common.h1` v5 @kind this, `java.lang.Thread` v6 @kind object, `java.lang.Throwable` v7 @kind object) @signature `Lcom/google/firebase/crashlytics/internal/common/h1;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {

  # return;
}
