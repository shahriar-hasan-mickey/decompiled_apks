record `org.bouncycastle.crypto.prng.X931SecureRandom` @kind class @AccessFlag PUBLIC extends `java.security.SecureRandom` @kind class {
  `org.bouncycastle.crypto.prng.c` `org.bouncycastle.crypto.prng.X931SecureRandom.drbg` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.bouncycastle.crypto.prng.X931SecureRandom.predictionResistant` @AccessFlag PRIVATE_FINAL;
  `java.security.SecureRandom` `org.bouncycastle.crypto.prng.X931SecureRandom.randomSource` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.bouncycastle.crypto.prng.X931SecureRandom` v0 @kind this, `java.security.SecureRandom` v1 @kind object, `org.bouncycastle.crypto.prng.c` v2 @kind object, `boolean` v3 ) @signature `Lorg/bouncycastle/crypto/prng/X931SecureRandom;.<init>:(Ljava/security/SecureRandom;Lorg/bouncycastle/crypto/prng/c;Z)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `byte`[] `generateSeed`(`org.bouncycastle.crypto.prng.X931SecureRandom` v0 @kind this, `int` v1 ) @signature `Lorg/bouncycastle/crypto/prng/X931SecureRandom;.generateSeed:(I)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `nextBytes`(`org.bouncycastle.crypto.prng.X931SecureRandom` v0 @kind this, `byte`[] v1 @kind object) @signature `Lorg/bouncycastle/crypto/prng/X931SecureRandom;.nextBytes:([B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setSeed`(`org.bouncycastle.crypto.prng.X931SecureRandom` v1 @kind this, `long` v2 ) @signature `Lorg/bouncycastle/crypto/prng/X931SecureRandom;.setSeed:(J)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setSeed`(`org.bouncycastle.crypto.prng.X931SecureRandom` v1 @kind this, `byte`[] v2 @kind object) @signature `Lorg/bouncycastle/crypto/prng/X931SecureRandom;.setSeed:([B)V` @AccessFlag PUBLIC {

  # return;
}
