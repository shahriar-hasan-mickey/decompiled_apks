record `org.apache.commons.io.input.CharSequenceReader` @kind class @AccessFlag PUBLIC extends `java.io.Reader` @kind class, `java.io.Serializable` @kind interface {
  `java.lang.CharSequence` `org.apache.commons.io.input.CharSequenceReader.charSequence` @AccessFlag PRIVATE_FINAL;
  `int` `org.apache.commons.io.input.CharSequenceReader.idx` @AccessFlag PRIVATE;
  `int` `org.apache.commons.io.input.CharSequenceReader.mark` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.apache.commons.io.input.CharSequenceReader` v0 @kind this, `java.lang.CharSequence` v1 @kind object) @signature `Lorg/apache/commons/io/input/CharSequenceReader;.<init>:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `close`(`org.apache.commons.io.input.CharSequenceReader` v1 @kind this) @signature `Lorg/apache/commons/io/input/CharSequenceReader;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `mark`(`org.apache.commons.io.input.CharSequenceReader` v0 @kind this, `int` v1 ) @signature `Lorg/apache/commons/io/input/CharSequenceReader;.mark:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `markSupported`(`org.apache.commons.io.input.CharSequenceReader` v1 @kind this) @signature `Lorg/apache/commons/io/input/CharSequenceReader;.markSupported:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`org.apache.commons.io.input.CharSequenceReader` v3 @kind this) @signature `Lorg/apache/commons/io/input/CharSequenceReader;.read:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`org.apache.commons.io.input.CharSequenceReader` v5 @kind this, `char`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/apache/commons/io/input/CharSequenceReader;.read:([CII)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.apache.commons.io.input.CharSequenceReader` v1 @kind this) @signature `Lorg/apache/commons/io/input/CharSequenceReader;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `skip`(`org.apache.commons.io.input.CharSequenceReader` v4 @kind this, `long` v5 ) @signature `Lorg/apache/commons/io/input/CharSequenceReader;.skip:(J)J` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.apache.commons.io.input.CharSequenceReader` v1 @kind this) @signature `Lorg/apache/commons/io/input/CharSequenceReader;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
