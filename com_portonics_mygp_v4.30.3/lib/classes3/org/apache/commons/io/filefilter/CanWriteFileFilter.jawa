record `org.apache.commons.io.filefilter.CanWriteFileFilter` @kind class @AccessFlag PUBLIC extends `org.apache.commons.io.filefilter.a` @kind class, `java.io.Serializable` @kind interface {
}
global `org.apache.commons.io.filefilter.b` `@@org.apache.commons.io.filefilter.CanWriteFileFilter.CANNOT_WRITE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.apache.commons.io.filefilter.b` `@@org.apache.commons.io.filefilter.CanWriteFileFilter.CAN_WRITE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/io/filefilter/CanWriteFileFilter;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.io.filefilter.CanWriteFileFilter` v0 @kind this) @signature `Lorg/apache/commons/io/filefilter/CanWriteFileFilter;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `boolean` `accept`(`org.apache.commons.io.filefilter.CanWriteFileFilter` v0 @kind this, `java.io.File` v1 @kind object) @signature `Lorg/apache/commons/io/filefilter/CanWriteFileFilter;.accept:(Ljava/io/File;)Z` @AccessFlag PUBLIC {

  # return;
}
