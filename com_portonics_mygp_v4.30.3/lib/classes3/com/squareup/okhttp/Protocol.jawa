record `com.squareup.okhttp.Protocol` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `com.squareup.okhttp.Protocol.protocol` @AccessFlag PRIVATE_FINAL;
}
global `com.squareup.okhttp.Protocol`[] `@@com.squareup.okhttp.Protocol.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.squareup.okhttp.Protocol` `@@com.squareup.okhttp.Protocol.HTTP_1_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.squareup.okhttp.Protocol` `@@com.squareup.okhttp.Protocol.HTTP_1_1` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.squareup.okhttp.Protocol` `@@com.squareup.okhttp.Protocol.HTTP_2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.squareup.okhttp.Protocol` `@@com.squareup.okhttp.Protocol.SPDY_3` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/squareup/okhttp/Protocol;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.squareup.okhttp.Protocol` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/squareup/okhttp/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.squareup.okhttp.Protocol` `get`(`java.lang.String` v3 @kind object) @signature `Lcom/squareup/okhttp/Protocol;.get:(Ljava/lang/String;)Lcom/squareup/okhttp/Protocol;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.squareup.okhttp.Protocol` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/squareup/okhttp/Protocol;.valueOf:(Ljava/lang/String;)Lcom/squareup/okhttp/Protocol;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.squareup.okhttp.Protocol`[] `values`() @signature `Lcom/squareup/okhttp/Protocol;.values:()[Lcom/squareup/okhttp/Protocol;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.squareup.okhttp.Protocol` v1 @kind this) @signature `Lcom/squareup/okhttp/Protocol;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
