record `com.squareup.okhttp.HttpUrl` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `com.squareup.okhttp.HttpUrl.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.squareup.okhttp.HttpUrl.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.squareup.okhttp.HttpUrl.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.squareup.okhttp.HttpUrl.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.squareup.okhttp.HttpUrl.f` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.squareup.okhttp.HttpUrl.g` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.squareup.okhttp.HttpUrl.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.squareup.okhttp.HttpUrl.i` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.squareup.okhttp.HttpUrl.j` @AccessFlag PRIVATE_FINAL;
}
global `char`[] `@@com.squareup.okhttp.HttpUrl.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/squareup/okhttp/HttpUrl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.squareup.okhttp.HttpUrl` v4 @kind this, `com.squareup.okhttp.HttpUrl$Builder` v5 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.<init>:(Lcom/squareup/okhttp/HttpUrl$Builder;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.squareup.okhttp.HttpUrl` v0 @kind this, `com.squareup.okhttp.HttpUrl$Builder` v1 @kind object, `com.squareup.okhttp.e` v2 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.<init>:(Lcom/squareup/okhttp/HttpUrl$Builder;Lcom/squareup/okhttp/e;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`char` v2 ) @signature `Lcom/squareup/okhttp/HttpUrl;.a:(C)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `b`(`java.lang.String` v1 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.b:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `d`(`java.lang.StringBuilder` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.d:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `e`(`java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.e:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.String` `f`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lcom/squareup/okhttp/HttpUrl;.f:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.String` `g`(`java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lcom/squareup/okhttp/HttpUrl;.g:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {

  # return;
}
procedure `java.util.List` `h`(`com.squareup.okhttp.HttpUrl` v2 @kind this, `java.util.List` v3 @kind object, `boolean` v4 ) @signature `Lcom/squareup/okhttp/HttpUrl;.h:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `i`(`okio.k` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `Lcom/squareup/okhttp/HttpUrl;.i:(Lokio/k;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.String` `c`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.squareup.okhttp.HttpUrl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/squareup/okhttp/HttpUrl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `j`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.j:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.squareup.okhttp.HttpUrl` v1 @kind this) @signature `Lcom/squareup/okhttp/HttpUrl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
