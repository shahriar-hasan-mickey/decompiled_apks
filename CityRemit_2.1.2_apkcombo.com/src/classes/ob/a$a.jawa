record `ob.a$a` @kind class @AccessFlag FINAL {
}
global `java.lang.reflect.Method` `@@ob.a$a.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lob/a$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L40123c.  v0:= new `ob.a$a`;
  #L401240.  call `<init>`(v0) @signature `Lob/a$a;.<init>:()V` @kind direct;
  #L401246.  v0:= constclass @type ^`java.lang.Throwable` @kind object;
  #L40124a.  call temp:= `getMethods`(v0) @signature `Ljava/lang/Class;.getMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L401250.  v1:= temp @kind object;
  #L401252.  v2:= "throwableMethods" @kind object;
  #L401256.  call `d`(v1, v2) @signature `Lkotlin/jvm/internal/k;.d:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L40125c.  v2:= length @variable v1;
  #L40125e.  v3:= 0I;
  #L401260.  v4:= 0I;
  #L401262.  if v4 >= v2 then goto L4012ba;
  #L401266.  v5:= v1[v4] @kind object;
  #L40126a.  call temp:= `getName`(v5) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L401270.  v6:= temp @kind object;
  #L401272.  v7:= "addSuppressed" @kind object;
  #L401276.  call temp:= `a`(v6, v7) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L40127c.  v6:= temp;
  #L40127e.  if v6 == 0 then goto L4012ac;
  #L401282.  call temp:= `getParameterTypes`(v5) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L401288.  v6:= temp @kind object;
  #L40128a.  v7:= "it.parameterTypes" @kind object;
  #L40128e.  call `d`(v6, v7) @signature `Lkotlin/jvm/internal/k;.d:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L401294.  call temp:= `n`(v6) @signature `Lkb/b;.n:([Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L40129a.  v6:= temp @kind object;
  #L40129c.  call temp:= `a`(v6, v0) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4012a2.  v6:= temp;
  #L4012a4.  if v6 == 0 then goto L4012ac;
  #L4012a8.  v6:= 1I;
  #L4012aa.  goto L4012ae;
  #L4012ac.  v6:= 0I;
  #L4012ae.  if v6 == 0 then goto L4012b4;
  #L4012b2.  goto L4012bc;
  #L4012b4.  v4:= v4 + 1;
  #L4012b8.  goto L401262;
  #L4012ba.  v5:= 0I;
  #L4012bc.  `@@ob.a$a.a` @type ^`java.lang.reflect.Method` := v5 @kind object;
  #L4012c0.  v0:= length @variable v1;
  #L4012c2.  if v3 >= v0 then goto L4012ea;
  #L4012c6.  v2:= v1[v3] @kind object;
  #L4012ca.  call temp:= `getName`(v2) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L4012d0.  v2:= temp @kind object;
  #L4012d2.  v4:= "getSuppressed" @kind object;
  #L4012d6.  call temp:= `a`(v2, v4) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4012dc.  v2:= temp;
  #L4012de.  if v2 == 0 then goto L4012e4;
  #L4012e2.  goto L4012ea;
  #L4012e4.  v3:= v3 + 1;
  #L4012e8.  goto L4012c2;
  #L4012ea.  return @kind void;
}
procedure `void` `<init>`(`ob.a$a` v0 @kind this) @signature `Lob/a$a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4012fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L401302.  return @kind void;
}
