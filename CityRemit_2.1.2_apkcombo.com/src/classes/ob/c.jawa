record `ob.c` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `a`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lob/c;.a:(III)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L40178c.  call temp:= `c`(v0, v2) @signature `Lob/c;.c:(II)I` @kind static;
  #L401792.  v0:= temp;
  #L401794.  call temp:= `c`(v1, v2) @signature `Lob/c;.c:(II)I` @kind static;
  #L40179a.  v1:= temp;
  #L40179c.  v0:= v0 - v1 @kind int;
  #L40179e.  call temp:= `c`(v0, v2) @signature `Lob/c;.c:(II)I` @kind static;
  #L4017a4.  v0:= temp;
  #L4017a6.  return v0;
}
procedure `int` `b`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lob/c;.b:(III)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L4017b8.  if v2 <= 0 then goto L4017ce;
  #L4017bc.  if v0 < v1 then goto L4017c2;
  #L4017c0.  goto L4017e4;
  #L4017c2.  call temp:= `a`(v1, v0, v2) @signature `Lob/c;.a:(III)I` @kind static;
  #L4017c8.  v0:= temp;
  #L4017ca.  v1:= v1 - v0 @kind int;
  #L4017cc.  goto L4017e4;
  #L4017ce.  if v2 >= 0 then goto L4017e6;
  #L4017d2.  if v0 > v1 then goto L4017d8;
  #L4017d6.  goto L4017e4;
  #L4017d8.  v2:= -v2 @kind int;
  #L4017da.  call temp:= `a`(v0, v1, v2) @signature `Lob/c;.a:(III)I` @kind static;
  #L4017e0.  v0:= temp;
  #L4017e2.  v1:= v1 + v0 @kind int;
  #L4017e4.  return v1;
  #L4017e6.  v0:= new `java.lang.IllegalArgumentException`;
  #L4017ea.  v1:= "Step is zero." @kind object;
  #L4017ee.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4017f4.  throw v0;
}
procedure `int` `c`(`int` v0 , `int` v1 ) @signature `Lob/c;.c:(II)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L401808.  v0:= v0 %% v1 @kind int;
  #L40180a.  if v0 < 0 then goto L401810;
  #L40180e.  goto L401812;
  #L401810.  v0:= v0 + v1 @kind int;
  #L401812.  return v0;
}
