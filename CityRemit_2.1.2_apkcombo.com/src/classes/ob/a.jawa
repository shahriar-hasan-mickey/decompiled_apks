record `ob.a` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`ob.a` v0 @kind this) @signature `Lob/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L401734.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40173a.  return @kind void;
}
procedure `void` `a`(`ob.a` v3 @kind this, `java.lang.Throwable` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lob/a;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40174c.  v0:= "cause" @kind object;
  #L401750.  call `e`(v4, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L401756.  v0:= "exception" @kind object;
  #L40175a.  call `e`(v5, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L401760.  v0:= `@@ob.a$a.a` @type ^`java.lang.reflect.Method` @kind object;
  #L401764.  if v0 == 0 then goto L40177a;
  #L401768.  v1:= 1I;
  #L40176a.  v1:= new `java.lang.Object`[v1];
  #L40176e.  v2:= 0I;
  #L401770.  v1[v2]:= v5 @kind object;
  #L401774.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L40177a.  return @kind void;
}
procedure `ub.c` `b`(`ob.a` v1 @kind this) @signature `Lob/a;.b:()Lub/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401718.  v0:= new `ub.b`;
  #L40171c.  call `<init>`(v0) @signature `Lub/b;.<init>:()V` @kind direct;
  #L401722.  return v0 @kind object;
}
