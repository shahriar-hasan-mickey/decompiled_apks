record `x7.b` @kind class @AccessFlag PUBLIC extends `x7.a` @kind interface {
}
global `x7.b` `@@x7.b.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`x7.b` v0 @kind this) @signature `Lx7/b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4ef718.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ef71e.  return @kind void;
}
procedure `x7.b` `b`() @signature `Lx7/b;.b:()Lx7/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4ef730.  v0:= `@@x7.b.a` @type ^`x7.b` @kind object;
  #L4ef734.  if v0 != 0 then goto L4ef746;
  #L4ef738.  v0:= new `x7.b`;
  #L4ef73c.  call `<init>`(v0) @signature `Lx7/b;.<init>:()V` @kind direct;
  #L4ef742.  `@@x7.b.a` @type ^`x7.b` := v0 @kind object;
  #L4ef746.  v0:= `@@x7.b.a` @type ^`x7.b` @kind object;
  #L4ef74a.  return v0 @kind object;
}
procedure `long` `a`(`x7.b` v2 @kind this) @signature `Lx7/b;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ef6fc.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L4ef702.  v0:= temp @kind wide;
  #L4ef704.  return v0 @kind wide;
}
