record `j9.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `j9.e` @kind interface {
}
procedure `void` `<init>`(`j9.b` v0 @kind this) @signature `Lj9/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39ad40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39ad46.  return @kind void;
}
procedure `java.lang.Boolean` `k`(`j9.b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lj9/b;.k:(Ljava/lang/String;)Ljava/lang/Boolean;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L39ac20.  call temp:= `c`(v1, v2) @signature `Lj9/e;.c:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L39ac26.  v2:= temp @kind object;
  #L39ac28.  v0:= instanceof @variable v2 @type ^`java.lang.Boolean` @kind boolean;
  #L39ac2c.  if v0 == 0 then goto L39ac36;
  #L39ac30.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L39ac34.  return v2 @kind object;
  #L39ac36.  v2:= 0I;
  #L39ac38.  return v2 @kind object;
}
procedure `java.lang.String` `m`(`j9.b` v1 @kind this) @signature `Lj9/b;.m:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L39ac90.  v0:= "sql" @kind object;
  #L39ac94.  call temp:= `c`(v1, v0) @signature `Lj9/e;.c:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L39ac9a.  v0:= temp @kind object;
  #L39ac9c.  v0:= (`java.lang.String`) v0 @kind object;
  #L39aca0.  return v0 @kind object;
}
procedure `java.util.List` `n`(`j9.b` v1 @kind this) @signature `Lj9/b;.n:()Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L39ad1c.  v0:= "arguments" @kind object;
  #L39ad20.  call temp:= `c`(v1, v0) @signature `Lj9/e;.c:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L39ad26.  v0:= temp @kind object;
  #L39ad28.  v0:= (`java.util.List`) v0 @kind object;
  #L39ad2c.  return v0 @kind object;
}
procedure `h9.b0` `d`(`j9.b` v3 @kind this) @signature `Lj9/b;.d:()Lh9/b0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39abf4.  v0:= new `h9.b0`;
  #L39abf8.  call temp:= `m`(v3) @signature `Lj9/b;.m:()Ljava/lang/String;` @kind direct;
  #L39abfe.  v1:= temp @kind object;
  #L39ac00.  call temp:= `n`(v3) @signature `Lj9/b;.n:()Ljava/util/List;` @kind direct;
  #L39ac06.  v2:= temp @kind object;
  #L39ac08.  call `<init>`(v0, v1, v2) @signature `Lh9/b0;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L39ac0e.  return v0 @kind object;
}
procedure `boolean` `e`(`j9.b` v2 @kind this) @signature `Lj9/b;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39ab94.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L39ab98.  v1:= "noResult" @kind object;
  #L39ab9c.  call temp:= `c`(v2, v1) @signature `Lj9/e;.c:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L39aba2.  v1:= temp @kind object;
  #L39aba4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Boolean;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39abaa.  v0:= temp;
  #L39abac.  return v0;
}
procedure `java.lang.Boolean` `f`(`j9.b` v1 @kind this) @signature `Lj9/b;.f:()Ljava/lang/Boolean;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39ac4c.  v0:= "inTransaction" @kind object;
  #L39ac50.  call temp:= `k`(v1, v0) @signature `Lj9/b;.k:(Ljava/lang/String;)Ljava/lang/Boolean;` @kind direct;
  #L39ac56.  v0:= temp @kind object;
  #L39ac58.  return v0 @kind object;
}
procedure `java.lang.Integer` `g`(`j9.b` v1 @kind this) @signature `Lj9/b;.g:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39ac6c.  v0:= "transactionId" @kind object;
  #L39ac70.  call temp:= `c`(v1, v0) @signature `Lj9/e;.c:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L39ac76.  v0:= temp @kind object;
  #L39ac78.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L39ac7c.  return v0 @kind object;
}
procedure `boolean` `h`(`j9.b` v1 @kind this) @signature `Lj9/b;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39abc0.  v0:= "transactionId" @kind object;
  #L39abc4.  call temp:= `j`(v1, v0) @signature `Lj9/e;.j:(Ljava/lang/String;)Z` @kind interface;
  #L39abca.  v0:= temp;
  #L39abcc.  if v0 == 0 then goto L39abe0;
  #L39abd0.  call temp:= `g`(v1) @signature `Lj9/b;.g:()Ljava/lang/Integer;` @kind virtual;
  #L39abd6.  v0:= temp @kind object;
  #L39abd8.  if v0 != 0 then goto L39abe0;
  #L39abdc.  v0:= 1I;
  #L39abde.  goto L39abe2;
  #L39abe0.  v0:= 0I;
  #L39abe2.  return v0;
}
procedure `boolean` `l`(`j9.b` v2 @kind this) @signature `Lj9/b;.l:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39ab68.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L39ab6c.  v1:= "continueOnError" @kind object;
  #L39ab70.  call temp:= `c`(v2, v1) @signature `Lj9/e;.c:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L39ab76.  v1:= temp @kind object;
  #L39ab78.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Boolean;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39ab7e.  v0:= temp;
  #L39ab80.  return v0;
}
procedure `java.lang.String` `toString`(`j9.b` v3 @kind this) @signature `Lj9/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39acb4.  v0:= new `java.lang.StringBuilder`;
  #L39acb8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39acbe.  v1:= "" @kind object;
  #L39acc2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39acc8.  call temp:= `i`(v3) @signature `Lj9/e;.i:()Ljava/lang/String;` @kind interface;
  #L39acce.  v1:= temp @kind object;
  #L39acd0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39acd6.  v1:= " " @kind object;
  #L39acda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ace0.  call temp:= `m`(v3) @signature `Lj9/b;.m:()Ljava/lang/String;` @kind direct;
  #L39ace6.  v2:= temp @kind object;
  #L39ace8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39acee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39acf4.  call temp:= `n`(v3) @signature `Lj9/b;.n:()Ljava/util/List;` @kind direct;
  #L39acfa.  v1:= temp @kind object;
  #L39acfc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ad02.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39ad08.  v0:= temp @kind object;
  #L39ad0a.  return v0 @kind object;
}
