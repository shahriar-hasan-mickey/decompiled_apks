record `x2.d$a` @kind class @AccessFlag FINAL extends `x2.n0` @kind interface {
  `x2.n0` `x2.d$a.o` @AccessFlag PUBLIC_FINAL;
  `boolean` `x2.d$a.p` @AccessFlag PRIVATE;
  `x2.d` `x2.d$a.q` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x2.d$a` v0 @kind this, `x2.d` v1 @kind object, `x2.n0` v2 @kind object) @signature `Lx2/d$a;.<init>:(Lx2/d;Lx2/n0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d9a38.  v0.`x2.d$a.q` @type ^`x2.d` := v1 @kind object;
  #L4d9a3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d9a42.  v0.`x2.d$a.o` @type ^`x2.n0` := v2 @kind object;
  #L4d9a46.  return @kind void;
}
procedure `void` `a`(`x2.d$a` v1 @kind this) @signature `Lx2/d$a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d9a58.  v0:= 0I;
  #L4d9a5a.  v1.`x2.d$a.p` @type ^`boolean` := v0 @kind boolean;
  #L4d9a5e.  return @kind void;
}
procedure `void` `b`(`x2.d$a` v1 @kind this) @signature `Lx2/d$a;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d9a70.  v0:= v1.`x2.d$a.o` @type ^`x2.n0` @kind object;
  #L4d9a74.  call `b`(v0) @signature `Lx2/n0;.b:()V` @kind interface;
  #L4d9a7a.  return @kind void;
}
procedure `int` `e`(`x2.d$a` v10 @kind this, `v1.k1` v11 @kind object, `y1.g` v12 @kind object, `int` v13 ) @signature `Lx2/d$a;.e:(Lv1/k1;Ly1/g;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4d98f4.  v0:= v10.`x2.d$a.q` @type ^`x2.d` @kind object;
  #L4d98f8.  call temp:= `n`(v0) @signature `Lx2/d;.n:()Z` @kind virtual;
  #L4d98fe.  v0:= temp;
  #L4d9900.  v1:= -3I;
  #L4d9902.  if v0 == 0 then goto L4d9908;
  #L4d9906.  return v1;
  #L4d9908.  v0:= v10.`x2.d$a.p` @type ^`boolean` @kind boolean;
  #L4d990c.  v2:= 4I;
  #L4d990e.  v3:= -4I;
  #L4d9910.  if v0 == 0 then goto L4d991c;
  #L4d9914.  call `B`(v12, v2) @signature `Ly1/a;.B:(I)V` @kind virtual;
  #L4d991a.  return v3;
  #L4d991c.  v0:= v10.`x2.d$a.o` @type ^`x2.n0` @kind object;
  #L4d9920.  call temp:= `e`(v0, v11, v12, v13) @signature `Lx2/n0;.e:(Lv1/k1;Ly1/g;I)I` @kind interface;
  #L4d9926.  v13:= temp;
  #L4d9928.  v0:= -5I;
  #L4d992a.  v4:= -9223372036854775808L;
  #L4d992e.  if v13 != v0 then goto L4d99a2;
  #L4d9932.  v12:= v11.`v1.k1.b` @type ^`v1.j1` @kind object;
  #L4d9936.  call temp:= `e`(v12) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4d993c.  v12:= temp @kind object;
  #L4d993e.  v12:= (`v1.j1`) v12 @kind object;
  #L4d9942.  v13:= v12.`v1.j1.P` @type ^`int`;
  #L4d9946.  if v13 != 0 then goto L4d9952;
  #L4d994a.  v1:= v12.`v1.j1.Q` @type ^`int`;
  #L4d994e.  if v1 == 0 then goto L4d99a0;
  #L4d9952.  v1:= v10.`x2.d$a.q` @type ^`x2.d` @kind object;
  #L4d9956.  v2:= v1.`x2.d.s` @type ^`long` @kind wide;
  #L4d995a.  v6:= 0L;
  #L4d995e.  v8:= 0I;
  #L4d9960.  v9:= lcmp(v2, v6);
  #L4d9964.  if v9 == 0 then goto L4d996a;
  #L4d9968.  v13:= 0I;
  #L4d996a.  v1:= v1.`x2.d.t` @type ^`long` @kind wide;
  #L4d996e.  v3:= lcmp(v1, v4);
  #L4d9972.  if v3 == 0 then goto L4d9978;
  #L4d9976.  goto L4d997c;
  #L4d9978.  v8:= v12.`v1.j1.Q` @type ^`int`;
  #L4d997c.  call temp:= `b`(v12) @signature `Lv1/j1;.b:()Lv1/j1$b;` @kind virtual;
  #L4d9982.  v12:= temp @kind object;
  #L4d9984.  call temp:= `N`(v12, v13) @signature `Lv1/j1$b;.N:(I)Lv1/j1$b;` @kind virtual;
  #L4d998a.  v12:= temp @kind object;
  #L4d998c.  call temp:= `O`(v12, v8) @signature `Lv1/j1$b;.O:(I)Lv1/j1$b;` @kind virtual;
  #L4d9992.  v12:= temp @kind object;
  #L4d9994.  call temp:= `E`(v12) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L4d999a.  v12:= temp @kind object;
  #L4d999c.  v11.`v1.k1.b` @type ^`v1.j1` := v12 @kind object;
  #L4d99a0.  return v0;
  #L4d99a2.  v11:= v10.`x2.d$a.q` @type ^`x2.d` @kind object;
  #L4d99a6.  v6:= v11.`x2.d.t` @type ^`long` @kind wide;
  #L4d99aa.  v0:= lcmp(v6, v4);
  #L4d99ae.  if v0 == 0 then goto L4d99f2;
  #L4d99b2.  if v13 != v3 then goto L4d99c2;
  #L4d99b6.  v8:= v12.`y1.g.s` @type ^`long` @kind wide;
  #L4d99ba.  v0:= lcmp(v8, v6);
  #L4d99be.  if v0 >= 0 then goto L4d99de;
  #L4d99c2.  if v13 != v1 then goto L4d99f2;
  #L4d99c6.  call temp:= `f`(v11) @signature `Lx2/d;.f:()J` @kind virtual;
  #L4d99cc.  v0:= temp @kind wide;
  #L4d99ce.  v11:= lcmp(v0, v4);
  #L4d99d2.  if v11 != 0 then goto L4d99f2;
  #L4d99d6.  v11:= v12.`y1.g.r` @type ^`boolean` @kind boolean;
  #L4d99da.  if v11 != 0 then goto L4d99f2;
  #L4d99de.  call `j`(v12) @signature `Ly1/g;.j:()V` @kind virtual;
  #L4d99e4.  call `B`(v12, v2) @signature `Ly1/a;.B:(I)V` @kind virtual;
  #L4d99ea.  v11:= 1I;
  #L4d99ec.  v10.`x2.d$a.p` @type ^`boolean` := v11 @kind boolean;
  #L4d99f0.  return v3;
  #L4d99f2.  return v13;
}
procedure `boolean` `h`(`x2.d$a` v1 @kind this) @signature `Lx2/d$a;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d98bc.  v0:= v1.`x2.d$a.q` @type ^`x2.d` @kind object;
  #L4d98c0.  call temp:= `n`(v0) @signature `Lx2/d;.n:()Z` @kind virtual;
  #L4d98c6.  v0:= temp;
  #L4d98c8.  if v0 != 0 then goto L4d98e0;
  #L4d98cc.  v0:= v1.`x2.d$a.o` @type ^`x2.n0` @kind object;
  #L4d98d0.  call temp:= `h`(v0) @signature `Lx2/n0;.h:()Z` @kind interface;
  #L4d98d6.  v0:= temp;
  #L4d98d8.  if v0 == 0 then goto L4d98e0;
  #L4d98dc.  v0:= 1I;
  #L4d98de.  goto L4d98e2;
  #L4d98e0.  v0:= 0I;
  #L4d98e2.  return v0;
}
procedure `int` `m`(`x2.d$a` v1 @kind this, `long` v2 ) @signature `Lx2/d$a;.m:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d9a04.  v0:= v1.`x2.d$a.q` @type ^`x2.d` @kind object;
  #L4d9a08.  call temp:= `n`(v0) @signature `Lx2/d;.n:()Z` @kind virtual;
  #L4d9a0e.  v0:= temp;
  #L4d9a10.  if v0 == 0 then goto L4d9a18;
  #L4d9a14.  v2:= -3I;
  #L4d9a16.  return v2;
  #L4d9a18.  v0:= v1.`x2.d$a.o` @type ^`x2.n0` @kind object;
  #L4d9a1c.  call temp:= `m`(v0, v2) @signature `Lx2/n0;.m:(J)I` @kind interface;
  #L4d9a22.  v2:= temp;
  #L4d9a24.  return v2;
}
