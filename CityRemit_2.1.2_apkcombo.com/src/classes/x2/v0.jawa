record `x2.v0` @kind class @AccessFlag PUBLIC_FINAL extends `v1.g` @kind interface {
  `int` `x2.v0.o` @AccessFlag PUBLIC_FINAL;
  `m5.q` `x2.v0.p` @AccessFlag PRIVATE_FINAL;
  `int` `x2.v0.q` @AccessFlag PRIVATE;
}
global `x2.v0` `@@x2.v0.r` @AccessFlag PUBLIC_STATIC_FINAL;
global `v1.g$a` `@@x2.v0.s` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx2/v0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4e0f9c.  v0:= new `x2.v0`;
  #L4e0fa0.  v1:= 0I;
  #L4e0fa2.  v1:= new `x2.t0`[v1];
  #L4e0fa6.  call `<init>`(v0, v1) @signature `Lx2/v0;.<init>:([Lx2/t0;)V` @kind direct;
  #L4e0fac.  `@@x2.v0.r` @type ^`x2.v0` := v0 @kind object;
  #L4e0fb0.  v0:= `@@x2.u0.a` @type ^`x2.u0` @kind object;
  #L4e0fb4.  `@@x2.v0.s` @type ^`v1.g$a` := v0 @kind object;
  #L4e0fb8.  return @kind void;
}
procedure `void` `<init>`(`x2.v0` v1 @kind this, `x2.t0`[] v2 @kind object) @signature `Lx2/v0;.<init>:([Lx2/t0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4e0fcc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e0fd2.  call temp:= `S`(v2) @signature `Lm5/q;.S:([Ljava/lang/Object;)Lm5/q;` @kind static;
  #L4e0fd8.  v0:= temp @kind object;
  #L4e0fda.  v1.`x2.v0.p` @type ^`m5.q` := v0 @kind object;
  #L4e0fde.  v2:= length @variable v2;
  #L4e0fe0.  v1.`x2.v0.o` @type ^`int` := v2;
  #L4e0fe4.  call `f`(v1) @signature `Lx2/v0;.f:()V` @kind direct;
  #L4e0fea.  return @kind void;
}
procedure `x2.v0` `a`(`android.os.Bundle` v0 @kind object) @signature `Lx2/v0;.a:(Landroid/os/Bundle;)Lx2/v0;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L4e10a8.  call temp:= `e`(v0) @signature `Lx2/v0;.e:(Landroid/os/Bundle;)Lx2/v0;` @kind static;
  #L4e10ae.  v0:= temp @kind object;
  #L4e10b0.  return v0 @kind object;
}
procedure `java.lang.String` `d`(`int` v1 ) @signature `Lx2/v0;.d:(I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4e0f7c.  v0:= 36I;
  #L4e0f80.  call temp:= `toString`(v1, v0) @signature `Ljava/lang/Integer;.toString:(II)Ljava/lang/String;` @kind static;
  #L4e0f86.  v1:= temp @kind object;
  #L4e0f88.  return v1 @kind object;
}
procedure `x2.v0` `e`(`android.os.Bundle` v3 @kind object) @signature `Lx2/v0;.e:(Landroid/os/Bundle;)Lx2/v0;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L4e10c4.  v0:= 0I;
  #L4e10c6.  call temp:= `d`(v0) @signature `Lx2/v0;.d:(I)Ljava/lang/String;` @kind static;
  #L4e10cc.  v1:= temp @kind object;
  #L4e10ce.  call temp:= `getParcelableArrayList`(v3, v1) @signature `Landroid/os/Bundle;.getParcelableArrayList:(Ljava/lang/String;)Ljava/util/ArrayList;` @kind virtual;
  #L4e10d4.  v3:= temp @kind object;
  #L4e10d6.  if v3 != 0 then goto L4e10ea;
  #L4e10da.  v3:= new `x2.v0`;
  #L4e10de.  v0:= new `x2.t0`[v0];
  #L4e10e2.  call `<init>`(v3, v0) @signature `Lx2/v0;.<init>:([Lx2/t0;)V` @kind direct;
  #L4e10e8.  return v3 @kind object;
  #L4e10ea.  v1:= new `x2.v0`;
  #L4e10ee.  v2:= `@@x2.t0.t` @type ^`v1.g$a` @kind object;
  #L4e10f2.  call temp:= `b`(v2, v3) @signature `Ls3/b;.b:(Lv1/g$a;Ljava/util/List;)Lm5/q;` @kind static;
  #L4e10f8.  v3:= temp @kind object;
  #L4e10fa.  v0:= new `x2.t0`[v0];
  #L4e10fe.  call temp:= `toArray`(v3, v0) @signature `Lm5/o;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L4e1104.  v3:= temp @kind object;
  #L4e1106.  v3:= (`x2.t0`[]) v3 @kind object;
  #L4e110a.  call `<init>`(v1, v3) @signature `Lx2/v0;.<init>:([Lx2/t0;)V` @kind direct;
  #L4e1110.  return v1 @kind object;
}
procedure `void` `f`(`x2.v0` v6 @kind this) @signature `Lx2/v0;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4e0ffc.  v0:= 0I;
  #L4e0ffe.  v1:= v6.`x2.v0.p` @type ^`m5.q` @kind object;
  #L4e1002.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L4e1008.  v1:= temp;
  #L4e100a.  if v0 >= v1 then goto L4e1072;
  #L4e100e.  v1:= v0 + 1;
  #L4e1012.  v2:= v1;
  #L4e1014.  v3:= v6.`x2.v0.p` @type ^`m5.q` @kind object;
  #L4e1018.  call temp:= `size`(v3) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L4e101e.  v3:= temp;
  #L4e1020.  if v2 >= v3 then goto L4e106e;
  #L4e1024.  v3:= v6.`x2.v0.p` @type ^`m5.q` @kind object;
  #L4e1028.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4e102e.  v3:= temp @kind object;
  #L4e1030.  v3:= (`x2.t0`) v3 @kind object;
  #L4e1034.  v4:= v6.`x2.v0.p` @type ^`m5.q` @kind object;
  #L4e1038.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4e103e.  v4:= temp @kind object;
  #L4e1040.  call temp:= `equals`(v3, v4) @signature `Lx2/t0;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4e1046.  v3:= temp;
  #L4e1048.  if v3 == 0 then goto L4e1068;
  #L4e104c.  v3:= new `java.lang.IllegalArgumentException`;
  #L4e1050.  v4:= "Multiple identical TrackGroups added to one TrackGroupArray." @kind object;
  #L4e1054.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e105a.  v4:= "TrackGroupArray" @kind object;
  #L4e105e.  v5:= "" @kind object;
  #L4e1062.  call `d`(v4, v5, v3) @signature `Ls3/q;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L4e1068.  v2:= v2 + 1;
  #L4e106c.  goto L4e1014;
  #L4e106e.  v0:= v1;
  #L4e1070.  goto L4e0ffe;
  #L4e1072.  return @kind void;
}
procedure `x2.t0` `b`(`x2.v0` v1 @kind this, `int` v2 ) @signature `Lx2/v0;.b:(I)Lx2/t0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e1084.  v0:= v1.`x2.v0.p` @type ^`m5.q` @kind object;
  #L4e1088.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4e108e.  v2:= temp @kind object;
  #L4e1090.  v2:= (`x2.t0`) v2 @kind object;
  #L4e1094.  return v2 @kind object;
}
procedure `int` `c`(`x2.v0` v1 @kind this, `x2.t0` v2 @kind object) @signature `Lx2/v0;.c:(Lx2/t0;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e0f54.  v0:= v1.`x2.v0.p` @type ^`m5.q` @kind object;
  #L4e0f58.  call temp:= `indexOf`(v0, v2) @signature `Lm5/q;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L4e0f5e.  v2:= temp;
  #L4e0f60.  if v2 < 0 then goto L4e0f66;
  #L4e0f64.  goto L4e0f68;
  #L4e0f66.  v2:= -1I;
  #L4e0f68.  return v2;
}
procedure `boolean` `equals`(`x2.v0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lx2/v0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e0ec8.  v0:= 1I;
  #L4e0eca.  if v4 != v5 then goto L4e0ed0;
  #L4e0ece.  return v0;
  #L4e0ed0.  v1:= 0I;
  #L4e0ed2.  if v5 == 0 then goto L4e0f12;
  #L4e0ed6.  v2:= constclass @type ^`x2.v0` @kind object;
  #L4e0eda.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4e0ee0.  v3:= temp @kind object;
  #L4e0ee2.  if v2 == v3 then goto L4e0ee8;
  #L4e0ee6.  goto L4e0f12;
  #L4e0ee8.  v5:= (`x2.v0`) v5 @kind object;
  #L4e0eec.  v2:= v4.`x2.v0.o` @type ^`int`;
  #L4e0ef0.  v3:= v5.`x2.v0.o` @type ^`int`;
  #L4e0ef4.  if v2 != v3 then goto L4e0f0e;
  #L4e0ef8.  v2:= v4.`x2.v0.p` @type ^`m5.q` @kind object;
  #L4e0efc.  v5:= v5.`x2.v0.p` @type ^`m5.q` @kind object;
  #L4e0f00.  call temp:= `equals`(v2, v5) @signature `Lm5/q;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4e0f06.  v5:= temp;
  #L4e0f08.  if v5 == 0 then goto L4e0f0e;
  #L4e0f0c.  goto L4e0f10;
  #L4e0f0e.  v0:= 0I;
  #L4e0f10.  return v0;
  #L4e0f12.  return v1;
}
procedure `int` `hashCode`(`x2.v0` v1 @kind this) @signature `Lx2/v0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e0f24.  v0:= v1.`x2.v0.q` @type ^`int`;
  #L4e0f28.  if v0 != 0 then goto L4e0f3c;
  #L4e0f2c.  v0:= v1.`x2.v0.p` @type ^`m5.q` @kind object;
  #L4e0f30.  call temp:= `hashCode`(v0) @signature `Lm5/q;.hashCode:()I` @kind virtual;
  #L4e0f36.  v0:= temp;
  #L4e0f38.  v1.`x2.v0.q` @type ^`int` := v0;
  #L4e0f3c.  v0:= v1.`x2.v0.q` @type ^`int`;
  #L4e0f40.  return v0;
}
