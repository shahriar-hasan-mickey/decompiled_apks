record `x2.t0` @kind class @AccessFlag PUBLIC_FINAL extends `v1.g` @kind interface {
  `int` `x2.t0.o` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `x2.t0.p` @AccessFlag PUBLIC_FINAL;
  `int` `x2.t0.q` @AccessFlag PUBLIC_FINAL;
  `v1.j1`[] `x2.t0.r` @AccessFlag PRIVATE_FINAL;
  `int` `x2.t0.s` @AccessFlag PRIVATE;
}
global `v1.g$a` `@@x2.t0.t` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx2/t0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4e1280.  v0:= `@@x2.s0.a` @type ^`x2.s0` @kind object;
  #L4e1284.  `@@x2.t0.t` @type ^`v1.g$a` := v0 @kind object;
  #L4e1288.  return @kind void;
}
procedure `void` `<init>`(`x2.t0` v2 @kind this, `java.lang.String` v3 @kind object, `v1.j1`[] v4 @kind object) @signature `Lx2/t0;.<init>:(Ljava/lang/String;[Lv1/j1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4e129c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e12a2.  v0:= length @variable v4;
  #L4e12a4.  v1:= 0I;
  #L4e12a6.  if v0 <= 0 then goto L4e12ae;
  #L4e12aa.  v0:= 1I;
  #L4e12ac.  goto L4e12b0;
  #L4e12ae.  v0:= 0I;
  #L4e12b0.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L4e12b6.  v2.`x2.t0.p` @type ^`java.lang.String` := v3 @kind object;
  #L4e12ba.  v2.`x2.t0.r` @type ^`v1.j1`[] := v4 @kind object;
  #L4e12be.  v3:= length @variable v4;
  #L4e12c0.  v2.`x2.t0.o` @type ^`int` := v3;
  #L4e12c4.  v3:= v4[v1] @kind object;
  #L4e12c8.  v3:= v3.`v1.j1.z` @type ^`java.lang.String` @kind object;
  #L4e12cc.  call temp:= `k`(v3) @signature `Ls3/u;.k:(Ljava/lang/String;)I` @kind static;
  #L4e12d2.  v3:= temp;
  #L4e12d4.  v0:= -1I;
  #L4e12d6.  if v3 != v0 then goto L4e12ea;
  #L4e12da.  v3:= v4[v1] @kind object;
  #L4e12de.  v3:= v3.`v1.j1.y` @type ^`java.lang.String` @kind object;
  #L4e12e2.  call temp:= `k`(v3) @signature `Ls3/u;.k:(Ljava/lang/String;)I` @kind static;
  #L4e12e8.  v3:= temp;
  #L4e12ea.  v2.`x2.t0.q` @type ^`int` := v3;
  #L4e12ee.  call `i`(v2) @signature `Lx2/t0;.i:()V` @kind direct;
  #L4e12f4.  return @kind void;
}
procedure `void` `<init>`(`x2.t0` v1 @kind this, `v1.j1`[] v2 @kind object) @signature `Lx2/t0;.<init>:([Lv1/j1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4e1308.  v0:= "" @kind object;
  #L4e130c.  call `<init>`(v1, v0, v2) @signature `Lx2/t0;.<init>:(Ljava/lang/String;[Lv1/j1;)V` @kind direct;
  #L4e1312.  return @kind void;
}
procedure `x2.t0` `a`(`android.os.Bundle` v0 @kind object) @signature `Lx2/t0;.a:(Landroid/os/Bundle;)Lx2/t0;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L4e1484.  call temp:= `e`(v0) @signature `Lx2/t0;.e:(Landroid/os/Bundle;)Lx2/t0;` @kind static;
  #L4e148a.  v0:= temp @kind object;
  #L4e148c.  return v0 @kind object;
}
procedure `java.lang.String` `d`(`int` v1 ) @signature `Lx2/t0;.d:(I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4e1218.  v0:= 36I;
  #L4e121c.  call temp:= `toString`(v1, v0) @signature `Ljava/lang/Integer;.toString:(II)Ljava/lang/String;` @kind static;
  #L4e1222.  v1:= temp @kind object;
  #L4e1224.  return v1 @kind object;
}
procedure `x2.t0` `e`(`android.os.Bundle` v4 @kind object) @signature `Lx2/t0;.e:(Landroid/os/Bundle;)Lx2/t0;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e14a0.  v0:= 0I;
  #L4e14a2.  call temp:= `d`(v0) @signature `Lx2/t0;.d:(I)Ljava/lang/String;` @kind static;
  #L4e14a8.  v1:= temp @kind object;
  #L4e14aa.  call temp:= `getParcelableArrayList`(v4, v1) @signature `Landroid/os/Bundle;.getParcelableArrayList:(Ljava/lang/String;)Ljava/util/ArrayList;` @kind virtual;
  #L4e14b0.  v1:= temp @kind object;
  #L4e14b2.  if v1 != 0 then goto L4e14c0;
  #L4e14b6.  call temp:= `a0`() @signature `Lm5/q;.a0:()Lm5/q;` @kind static;
  #L4e14bc.  v1:= temp @kind object;
  #L4e14be.  goto L4e14cc;
  #L4e14c0.  v2:= `@@v1.j1.V` @type ^`v1.g$a` @kind object;
  #L4e14c4.  call temp:= `b`(v2, v1) @signature `Ls3/b;.b:(Lv1/g$a;Ljava/util/List;)Lm5/q;` @kind static;
  #L4e14ca.  v1:= temp @kind object;
  #L4e14cc.  v2:= 1I;
  #L4e14ce.  call temp:= `d`(v2) @signature `Lx2/t0;.d:(I)Ljava/lang/String;` @kind static;
  #L4e14d4.  v2:= temp @kind object;
  #L4e14d6.  v3:= "" @kind object;
  #L4e14da.  call temp:= `getString`(v4, v2, v3) @signature `Landroid/os/Bundle;.getString:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4e14e0.  v4:= temp @kind object;
  #L4e14e2.  v2:= new `x2.t0`;
  #L4e14e6.  v0:= new `v1.j1`[v0];
  #L4e14ea.  call temp:= `toArray`(v1, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L4e14f0.  v0:= temp @kind object;
  #L4e14f2.  v0:= (`v1.j1`[]) v0 @kind object;
  #L4e14f6.  call `<init>`(v2, v4, v0) @signature `Lx2/t0;.<init>:(Ljava/lang/String;[Lv1/j1;)V` @kind direct;
  #L4e14fc.  return v2 @kind object;
}
procedure `void` `f`(`java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 ) @signature `Lx2/t0;.f:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4e1324.  v0:= new `java.lang.IllegalStateException`;
  #L4e1328.  v1:= new `java.lang.StringBuilder`;
  #L4e132c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4e1332.  v2:= "Different " @kind object;
  #L4e1336.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e133c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e1342.  v3:= " combined in one TrackGroup: '" @kind object;
  #L4e1346.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e134c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e1352.  v3:= "' (track 0) and '" @kind object;
  #L4e1356.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e135c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e1362.  v3:= "' (track " @kind object;
  #L4e1366.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e136c.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e1372.  v3:= ")" @kind object;
  #L4e1376.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e137c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4e1382.  v3:= temp @kind object;
  #L4e1384.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e138a.  v3:= "TrackGroup" @kind object;
  #L4e138e.  v4:= "" @kind object;
  #L4e1392.  call `d`(v3, v4, v0) @signature `Ls3/q;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L4e1398.  return @kind void;
}
procedure `java.lang.String` `g`(`java.lang.String` v1 @kind object) @signature `Lx2/t0;.g:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4e1238.  if v1 == 0 then goto L4e124c;
  #L4e123c.  v0:= "und" @kind object;
  #L4e1240.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4e1246.  v0:= temp;
  #L4e1248.  if v0 == 0 then goto L4e1250;
  #L4e124c.  v1:= "" @kind object;
  #L4e1250.  return v1 @kind object;
}
procedure `int` `h`(`int` v0 ) @signature `Lx2/t0;.h:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4e1200.  v0:= v0 ^| 16384;
  #L4e1204.  return v0;
}
procedure `void` `i`(`x2.t0` v6 @kind this) @signature `Lx2/t0;.i:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4e13ac.  v0:= v6.`x2.t0.r` @type ^`v1.j1`[] @kind object;
  #L4e13b0.  v1:= 0I;
  #L4e13b2.  v0:= v0[v1] @kind object;
  #L4e13b6.  v0:= v0.`v1.j1.q` @type ^`java.lang.String` @kind object;
  #L4e13ba.  call temp:= `g`(v0) @signature `Lx2/t0;.g:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4e13c0.  v0:= temp @kind object;
  #L4e13c2.  v2:= v6.`x2.t0.r` @type ^`v1.j1`[] @kind object;
  #L4e13c6.  v2:= v2[v1] @kind object;
  #L4e13ca.  v2:= v2.`v1.j1.s` @type ^`int`;
  #L4e13ce.  call temp:= `h`(v2) @signature `Lx2/t0;.h:(I)I` @kind static;
  #L4e13d4.  v2:= temp;
  #L4e13d6.  v3:= 1I;
  #L4e13d8.  v4:= v6.`x2.t0.r` @type ^`v1.j1`[] @kind object;
  #L4e13dc.  v5:= length @variable v4;
  #L4e13de.  if v3 >= v5 then goto L4e1470;
  #L4e13e2.  v4:= v4[v3] @kind object;
  #L4e13e6.  v4:= v4.`v1.j1.q` @type ^`java.lang.String` @kind object;
  #L4e13ea.  call temp:= `g`(v4) @signature `Lx2/t0;.g:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4e13f0.  v4:= temp @kind object;
  #L4e13f2.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4e13f8.  v4:= temp;
  #L4e13fa.  if v4 != 0 then goto L4e141e;
  #L4e13fe.  v0:= v6.`x2.t0.r` @type ^`v1.j1`[] @kind object;
  #L4e1402.  v1:= v0[v1] @kind object;
  #L4e1406.  v1:= v1.`v1.j1.q` @type ^`java.lang.String` @kind object;
  #L4e140a.  v0:= v0[v3] @kind object;
  #L4e140e.  v0:= v0.`v1.j1.q` @type ^`java.lang.String` @kind object;
  #L4e1412.  v2:= "languages" @kind object;
  #L4e1416.  call `f`(v2, v1, v0, v3) @signature `Lx2/t0;.f:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V` @kind static;
  #L4e141c.  return @kind void;
  #L4e141e.  v4:= v6.`x2.t0.r` @type ^`v1.j1`[] @kind object;
  #L4e1422.  v4:= v4[v3] @kind object;
  #L4e1426.  v4:= v4.`v1.j1.s` @type ^`int`;
  #L4e142a.  call temp:= `h`(v4) @signature `Lx2/t0;.h:(I)I` @kind static;
  #L4e1430.  v4:= temp;
  #L4e1432.  if v2 == v4 then goto L4e146a;
  #L4e1436.  v0:= v6.`x2.t0.r` @type ^`v1.j1`[] @kind object;
  #L4e143a.  v0:= v0[v1] @kind object;
  #L4e143e.  v0:= v0.`v1.j1.s` @type ^`int`;
  #L4e1442.  call temp:= `toBinaryString`(v0) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L4e1448.  v0:= temp @kind object;
  #L4e144a.  v1:= v6.`x2.t0.r` @type ^`v1.j1`[] @kind object;
  #L4e144e.  v1:= v1[v3] @kind object;
  #L4e1452.  v1:= v1.`v1.j1.s` @type ^`int`;
  #L4e1456.  call temp:= `toBinaryString`(v1) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L4e145c.  v1:= temp @kind object;
  #L4e145e.  v2:= "role flags" @kind object;
  #L4e1462.  call `f`(v2, v0, v1, v3) @signature `Lx2/t0;.f:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V` @kind static;
  #L4e1468.  return @kind void;
  #L4e146a.  v3:= v3 + 1;
  #L4e146e.  goto L4e13d8;
  #L4e1470.  return @kind void;
}
procedure `v1.j1` `b`(`x2.t0` v1 @kind this, `int` v2 ) @signature `Lx2/t0;.b:(I)Lv1/j1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e1264.  v0:= v1.`x2.t0.r` @type ^`v1.j1`[] @kind object;
  #L4e1268.  v2:= v0[v2] @kind object;
  #L4e126c.  return v2 @kind object;
}
procedure `int` `c`(`x2.t0` v3 @kind this, `v1.j1` v4 @kind object) @signature `Lx2/t0;.c:(Lv1/j1;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4e11d0.  v0:= 0I;
  #L4e11d2.  v1:= v3.`x2.t0.r` @type ^`v1.j1`[] @kind object;
  #L4e11d6.  v2:= length @variable v1;
  #L4e11d8.  if v0 >= v2 then goto L4e11ec;
  #L4e11dc.  v1:= v1[v0] @kind object;
  #L4e11e0.  if v4 != v1 then goto L4e11e6;
  #L4e11e4.  return v0;
  #L4e11e6.  v0:= v0 + 1;
  #L4e11ea.  goto L4e11d2;
  #L4e11ec.  v4:= -1I;
  #L4e11ee.  return v4;
}
procedure `boolean` `equals`(`x2.t0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lx2/t0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e1124.  v0:= 1I;
  #L4e1126.  if v4 != v5 then goto L4e112c;
  #L4e112a.  return v0;
  #L4e112c.  v1:= 0I;
  #L4e112e.  if v5 == 0 then goto L4e1176;
  #L4e1132.  v2:= constclass @type ^`x2.t0` @kind object;
  #L4e1136.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4e113c.  v3:= temp @kind object;
  #L4e113e.  if v2 == v3 then goto L4e1144;
  #L4e1142.  goto L4e1176;
  #L4e1144.  v5:= (`x2.t0`) v5 @kind object;
  #L4e1148.  v2:= v4.`x2.t0.p` @type ^`java.lang.String` @kind object;
  #L4e114c.  v3:= v5.`x2.t0.p` @type ^`java.lang.String` @kind object;
  #L4e1150.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4e1156.  v2:= temp;
  #L4e1158.  if v2 == 0 then goto L4e1172;
  #L4e115c.  v2:= v4.`x2.t0.r` @type ^`v1.j1`[] @kind object;
  #L4e1160.  v5:= v5.`x2.t0.r` @type ^`v1.j1`[] @kind object;
  #L4e1164.  call temp:= `equals`(v2, v5) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L4e116a.  v5:= temp;
  #L4e116c.  if v5 == 0 then goto L4e1172;
  #L4e1170.  goto L4e1174;
  #L4e1172.  v0:= 0I;
  #L4e1174.  return v0;
  #L4e1176.  return v1;
}
procedure `int` `hashCode`(`x2.t0` v2 @kind this) @signature `Lx2/t0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e1188.  v0:= v2.`x2.t0.s` @type ^`int`;
  #L4e118c.  if v0 != 0 then goto L4e11b8;
  #L4e1190.  v0:= 527I;
  #L4e1194.  v1:= v2.`x2.t0.p` @type ^`java.lang.String` @kind object;
  #L4e1198.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4e119e.  v1:= temp;
  #L4e11a0.  v0:= v0 + v1 @kind int;
  #L4e11a2.  v0:= v0 * 31;
  #L4e11a6.  v1:= v2.`x2.t0.r` @type ^`v1.j1`[] @kind object;
  #L4e11aa.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L4e11b0.  v1:= temp;
  #L4e11b2.  v0:= v0 + v1 @kind int;
  #L4e11b4.  v2.`x2.t0.s` @type ^`int` := v0;
  #L4e11b8.  v0:= v2.`x2.t0.s` @type ^`int`;
  #L4e11bc.  return v0;
}
