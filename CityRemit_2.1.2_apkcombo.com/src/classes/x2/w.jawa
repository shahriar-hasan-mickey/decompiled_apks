record `x2.w` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `x2.b0$a` `x2.w.o` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `x2.b0` `x2.w.p` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `x2.n` `x2.w.q` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `x2.q` `x2.w.r` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x2.w` v0 @kind this, `x2.b0$a` v1 @kind object, `x2.b0` v2 @kind object, `x2.n` v3 @kind object, `x2.q` v4 @kind object) @signature `Lx2/w;.<init>:(Lx2/b0$a;Lx2/b0;Lx2/n;Lx2/q;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4dbd70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dbd76.  v0.`x2.w.o` @type ^`x2.b0$a` := v1 @kind object;
  #L4dbd7a.  v0.`x2.w.p` @type ^`x2.b0` := v2 @kind object;
  #L4dbd7e.  v0.`x2.w.q` @type ^`x2.n` := v3 @kind object;
  #L4dbd82.  v0.`x2.w.r` @type ^`x2.q` := v4 @kind object;
  #L4dbd86.  return @kind void;
}
procedure `void` `run`(`x2.w` v4 @kind this) @signature `Lx2/w;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4dbd98.  v0:= v4.`x2.w.o` @type ^`x2.b0$a` @kind object;
  #L4dbd9c.  v1:= v4.`x2.w.p` @type ^`x2.b0` @kind object;
  #L4dbda0.  v2:= v4.`x2.w.q` @type ^`x2.n` @kind object;
  #L4dbda4.  v3:= v4.`x2.w.r` @type ^`x2.q` @kind object;
  #L4dbda8.  call `e`(v0, v1, v2, v3) @signature `Lx2/b0$a;.e:(Lx2/b0$a;Lx2/b0;Lx2/n;Lx2/q;)V` @kind static;
  #L4dbdae.  return @kind void;
}
