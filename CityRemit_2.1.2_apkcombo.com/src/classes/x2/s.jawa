record `x2.s` @kind class @AccessFlag PUBLIC {
  `java.lang.Object` `x2.s.a` @AccessFlag PUBLIC_FINAL;
  `int` `x2.s.b` @AccessFlag PUBLIC_FINAL;
  `int` `x2.s.c` @AccessFlag PUBLIC_FINAL;
  `long` `x2.s.d` @AccessFlag PUBLIC_FINAL;
  `int` `x2.s.e` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`x2.s` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lx2/s;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4dbb24.  v0:= -1L;
  #L4dbb28.  call `<init>`(v2, v3, v0) @signature `Lx2/s;.<init>:(Ljava/lang/Object;J)V` @kind direct;
  #L4dbb2e.  return @kind void;
}
procedure `void` `<init>`(`x2.s` v7 @kind this, `java.lang.Object` v8 @kind object, `int` v9 , `int` v10 , `long` v11 ) @signature `Lx2/s;.<init>:(Ljava/lang/Object;IIJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4dbb40.  v6:= -1I;
  #L4dbb42.  v0:= v7 @kind object;
  #L4dbb44.  v1:= v8 @kind object;
  #L4dbb46.  v2:= v9;
  #L4dbb48.  v3:= v10;
  #L4dbb4a.  v4:= v11 @kind wide;
  #L4dbb4c.  call `<init>`(v0, v1, v2, v3, v4, v6) @signature `Lx2/s;.<init>:(Ljava/lang/Object;IIJI)V` @kind direct;
  #L4dbb52.  return @kind void;
}
procedure `void` `<init>`(`x2.s` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `long` v4 , `int` v6 ) @signature `Lx2/s;.<init>:(Ljava/lang/Object;IIJI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4dbb64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dbb6a.  v0.`x2.s.a` @type ^`java.lang.Object` := v1 @kind object;
  #L4dbb6e.  v0.`x2.s.b` @type ^`int` := v2;
  #L4dbb72.  v0.`x2.s.c` @type ^`int` := v3;
  #L4dbb76.  v0.`x2.s.d` @type ^`long` := v4 @kind wide;
  #L4dbb7a.  v0.`x2.s.e` @type ^`int` := v6;
  #L4dbb7e.  return @kind void;
}
procedure `void` `<init>`(`x2.s` v7 @kind this, `java.lang.Object` v8 @kind object, `long` v9 ) @signature `Lx2/s;.<init>:(Ljava/lang/Object;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4dbb90.  v2:= -1I;
  #L4dbb92.  v3:= -1I;
  #L4dbb94.  v6:= -1I;
  #L4dbb96.  v0:= v7 @kind object;
  #L4dbb98.  v1:= v8 @kind object;
  #L4dbb9a.  v4:= v9 @kind wide;
  #L4dbb9c.  call `<init>`(v0, v1, v2, v3, v4, v6) @signature `Lx2/s;.<init>:(Ljava/lang/Object;IIJI)V` @kind direct;
  #L4dbba2.  return @kind void;
}
procedure `void` `<init>`(`x2.s` v7 @kind this, `java.lang.Object` v8 @kind object, `long` v9 , `int` v11 ) @signature `Lx2/s;.<init>:(Ljava/lang/Object;JI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4dbbb4.  v2:= -1I;
  #L4dbbb6.  v3:= -1I;
  #L4dbbb8.  v0:= v7 @kind object;
  #L4dbbba.  v1:= v8 @kind object;
  #L4dbbbc.  v4:= v9 @kind wide;
  #L4dbbbe.  v6:= v11;
  #L4dbbc0.  call `<init>`(v0, v1, v2, v3, v4, v6) @signature `Lx2/s;.<init>:(Ljava/lang/Object;IIJI)V` @kind direct;
  #L4dbbc6.  return @kind void;
}
procedure `void` `<init>`(`x2.s` v2 @kind this, `x2.s` v3 @kind object) @signature `Lx2/s;.<init>:(Lx2/s;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4dbbd8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dbbde.  v0:= v3.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L4dbbe2.  v2.`x2.s.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4dbbe6.  v0:= v3.`x2.s.b` @type ^`int`;
  #L4dbbea.  v2.`x2.s.b` @type ^`int` := v0;
  #L4dbbee.  v0:= v3.`x2.s.c` @type ^`int`;
  #L4dbbf2.  v2.`x2.s.c` @type ^`int` := v0;
  #L4dbbf6.  v0:= v3.`x2.s.d` @type ^`long` @kind wide;
  #L4dbbfa.  v2.`x2.s.d` @type ^`long` := v0 @kind wide;
  #L4dbbfe.  v3:= v3.`x2.s.e` @type ^`int`;
  #L4dbc02.  v2.`x2.s.e` @type ^`int` := v3;
  #L4dbc06.  return @kind void;
}
procedure `x2.s` `a`(`x2.s` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lx2/s;.a:(Ljava/lang/Object;)Lx2/s;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4dbc18.  v0:= v8.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L4dbc1c.  call temp:= `equals`(v0, v9) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4dbc22.  v0:= temp;
  #L4dbc24.  if v0 == 0 then goto L4dbc2c;
  #L4dbc28.  v0:= v8 @kind object;
  #L4dbc2a.  goto L4dbc4a;
  #L4dbc2c.  v0:= new `x2.s`;
  #L4dbc30.  v3:= v8.`x2.s.b` @type ^`int`;
  #L4dbc34.  v4:= v8.`x2.s.c` @type ^`int`;
  #L4dbc38.  v5:= v8.`x2.s.d` @type ^`long` @kind wide;
  #L4dbc3c.  v7:= v8.`x2.s.e` @type ^`int`;
  #L4dbc40.  v1:= v0 @kind object;
  #L4dbc42.  v2:= v9 @kind object;
  #L4dbc44.  call `<init>`(v1, v2, v3, v4, v5, v7) @signature `Lx2/s;.<init>:(Ljava/lang/Object;IIJI)V` @kind direct;
  #L4dbc4a.  return v0 @kind object;
}
procedure `boolean` `b`(`x2.s` v2 @kind this) @signature `Lx2/s;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dbab0.  v0:= v2.`x2.s.b` @type ^`int`;
  #L4dbab4.  v1:= -1I;
  #L4dbab6.  if v0 == v1 then goto L4dbabe;
  #L4dbaba.  v0:= 1I;
  #L4dbabc.  goto L4dbac0;
  #L4dbabe.  v0:= 0I;
  #L4dbac0.  return v0;
}
procedure `boolean` `equals`(`x2.s` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lx2/s;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4dba38.  v0:= 1I;
  #L4dba3a.  if v7 != v8 then goto L4dba40;
  #L4dba3e.  return v0;
  #L4dba40.  v1:= instanceof @variable v8 @type ^`x2.s` @kind boolean;
  #L4dba44.  v2:= 0I;
  #L4dba46.  if v1 != 0 then goto L4dba4c;
  #L4dba4a.  return v2;
  #L4dba4c.  v8:= (`x2.s`) v8 @kind object;
  #L4dba50.  v1:= v7.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L4dba54.  v3:= v8.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L4dba58.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4dba5e.  v1:= temp;
  #L4dba60.  if v1 == 0 then goto L4dba9a;
  #L4dba64.  v1:= v7.`x2.s.b` @type ^`int`;
  #L4dba68.  v3:= v8.`x2.s.b` @type ^`int`;
  #L4dba6c.  if v1 != v3 then goto L4dba9a;
  #L4dba70.  v1:= v7.`x2.s.c` @type ^`int`;
  #L4dba74.  v3:= v8.`x2.s.c` @type ^`int`;
  #L4dba78.  if v1 != v3 then goto L4dba9a;
  #L4dba7c.  v3:= v7.`x2.s.d` @type ^`long` @kind wide;
  #L4dba80.  v5:= v8.`x2.s.d` @type ^`long` @kind wide;
  #L4dba84.  v1:= lcmp(v3, v5);
  #L4dba88.  if v1 != 0 then goto L4dba9a;
  #L4dba8c.  v1:= v7.`x2.s.e` @type ^`int`;
  #L4dba90.  v8:= v8.`x2.s.e` @type ^`int`;
  #L4dba94.  if v1 != v8 then goto L4dba9a;
  #L4dba98.  goto L4dba9c;
  #L4dba9a.  v0:= 0I;
  #L4dba9c.  return v0;
}
procedure `int` `hashCode`(`x2.s` v4 @kind this) @signature `Lx2/s;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4dbad4.  v0:= v4.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L4dbad8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4dbade.  v0:= temp;
  #L4dbae0.  v1:= 527I;
  #L4dbae4.  v1:= v1 + v0 @kind int;
  #L4dbae6.  v1:= v1 * 31;
  #L4dbaea.  v0:= v4.`x2.s.b` @type ^`int`;
  #L4dbaee.  v1:= v1 + v0 @kind int;
  #L4dbaf0.  v1:= v1 * 31;
  #L4dbaf4.  v0:= v4.`x2.s.c` @type ^`int`;
  #L4dbaf8.  v1:= v1 + v0 @kind int;
  #L4dbafa.  v1:= v1 * 31;
  #L4dbafe.  v2:= v4.`x2.s.d` @type ^`long` @kind wide;
  #L4dbb02.  v0:= (`int`) v2 @kind l2i;
  #L4dbb04.  v1:= v1 + v0 @kind int;
  #L4dbb06.  v1:= v1 * 31;
  #L4dbb0a.  v0:= v4.`x2.s.e` @type ^`int`;
  #L4dbb0e.  v1:= v1 + v0 @kind int;
  #L4dbb10.  return v1;
}
