record `x2.r0` @kind class @AccessFlag FINAL {
  `int` `x2.r0.a` @AccessFlag PRIVATE;
  `android.util.SparseArray` `x2.r0.b` @AccessFlag PRIVATE_FINAL;
  `s3.g` `x2.r0.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`x2.r0` v1 @kind this, `s3.g` v2 @kind object) @signature `Lx2/r0;.<init>:(Ls3/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4e0c00.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e0c06.  v0:= new `android.util.SparseArray`;
  #L4e0c0a.  call `<init>`(v0) @signature `Landroid/util/SparseArray;.<init>:()V` @kind direct;
  #L4e0c10.  v1.`x2.r0.b` @type ^`android.util.SparseArray` := v0 @kind object;
  #L4e0c14.  v1.`x2.r0.c` @type ^`s3.g` := v2 @kind object;
  #L4e0c18.  v2:= -1I;
  #L4e0c1a.  v1.`x2.r0.a` @type ^`int` := v2;
  #L4e0c1e.  return @kind void;
}
procedure `void` `a`(`x2.r0` v4 @kind this, `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lx2/r0;.a:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e0c30.  v0:= v4.`x2.r0.a` @type ^`int`;
  #L4e0c34.  v1:= 0I;
  #L4e0c36.  v2:= 1I;
  #L4e0c38.  v3:= -1I;
  #L4e0c3a.  if v0 != v3 then goto L4e0c5e;
  #L4e0c3e.  v0:= v4.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0c42.  call temp:= `size`(v0) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4e0c48.  v0:= temp;
  #L4e0c4a.  if v0 != 0 then goto L4e0c52;
  #L4e0c4e.  v0:= 1I;
  #L4e0c50.  goto L4e0c54;
  #L4e0c52.  v0:= 0I;
  #L4e0c54.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4e0c5a.  v4.`x2.r0.a` @type ^`int` := v1;
  #L4e0c5e.  v0:= v4.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0c62.  call temp:= `size`(v0) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4e0c68.  v0:= temp;
  #L4e0c6a.  if v0 <= 0 then goto L4e0cb4;
  #L4e0c6e.  v0:= v4.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0c72.  call temp:= `size`(v0) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4e0c78.  v3:= temp;
  #L4e0c7a.  v3:= v3 - v2 @kind int;
  #L4e0c7c.  call temp:= `keyAt`(v0, v3) @signature `Landroid/util/SparseArray;.keyAt:(I)I` @kind virtual;
  #L4e0c82.  v0:= temp;
  #L4e0c84.  if v5 < v0 then goto L4e0c8a;
  #L4e0c88.  v1:= 1I;
  #L4e0c8a.  call `a`(v1) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L4e0c90.  if v0 != v5 then goto L4e0cb4;
  #L4e0c94.  v0:= v4.`x2.r0.c` @type ^`s3.g` @kind object;
  #L4e0c98.  v1:= v4.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0c9c.  call temp:= `size`(v1) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4e0ca2.  v3:= temp;
  #L4e0ca4.  v3:= v3 - v2 @kind int;
  #L4e0ca6.  call temp:= `valueAt`(v1, v3) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L4e0cac.  v1:= temp @kind object;
  #L4e0cae.  call `accept`(v0, v1) @signature `Ls3/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4e0cb4.  v0:= v4.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0cb8.  call `append`(v0, v5, v6) @signature `Landroid/util/SparseArray;.append:(ILjava/lang/Object;)V` @kind virtual;
  #L4e0cbe.  return @kind void;
}
procedure `void` `b`(`x2.r0` v3 @kind this) @signature `Lx2/r0;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4e0cd0.  v0:= 0I;
  #L4e0cd2.  v1:= v3.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0cd6.  call temp:= `size`(v1) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4e0cdc.  v1:= temp;
  #L4e0cde.  if v0 >= v1 then goto L4e0cfe;
  #L4e0ce2.  v1:= v3.`x2.r0.c` @type ^`s3.g` @kind object;
  #L4e0ce6.  v2:= v3.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0cea.  call temp:= `valueAt`(v2, v0) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L4e0cf0.  v2:= temp @kind object;
  #L4e0cf2.  call `accept`(v1, v2) @signature `Ls3/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4e0cf8.  v0:= v0 + 1;
  #L4e0cfc.  goto L4e0cd2;
  #L4e0cfe.  v0:= -1I;
  #L4e0d00.  v3.`x2.r0.a` @type ^`int` := v0;
  #L4e0d04.  v0:= v3.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0d08.  call `clear`(v0) @signature `Landroid/util/SparseArray;.clear:()V` @kind virtual;
  #L4e0d0e.  return @kind void;
}
procedure `void` `c`(`x2.r0` v3 @kind this, `int` v4 ) @signature `Lx2/r0;.c:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4e0d20.  v0:= v3.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0d24.  call temp:= `size`(v0) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4e0d2a.  v0:= temp;
  #L4e0d2c.  v0:= v0 + -1;
  #L4e0d30.  if v0 < 0 then goto L4e0d6a;
  #L4e0d34.  v1:= v3.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0d38.  call temp:= `keyAt`(v1, v0) @signature `Landroid/util/SparseArray;.keyAt:(I)I` @kind virtual;
  #L4e0d3e.  v1:= temp;
  #L4e0d40.  if v4 >= v1 then goto L4e0d6a;
  #L4e0d44.  v1:= v3.`x2.r0.c` @type ^`s3.g` @kind object;
  #L4e0d48.  v2:= v3.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0d4c.  call temp:= `valueAt`(v2, v0) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L4e0d52.  v2:= temp @kind object;
  #L4e0d54.  call `accept`(v1, v2) @signature `Ls3/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4e0d5a.  v1:= v3.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0d5e.  call `removeAt`(v1, v0) @signature `Landroid/util/SparseArray;.removeAt:(I)V` @kind virtual;
  #L4e0d64.  v0:= v0 + -1;
  #L4e0d68.  goto L4e0d30;
  #L4e0d6a.  v4:= v3.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0d6e.  call temp:= `size`(v4) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4e0d74.  v4:= temp;
  #L4e0d76.  if v4 <= 0 then goto L4e0d98;
  #L4e0d7a.  v4:= v3.`x2.r0.a` @type ^`int`;
  #L4e0d7e.  v0:= v3.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0d82.  call temp:= `size`(v0) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4e0d88.  v0:= temp;
  #L4e0d8a.  v0:= v0 + -1;
  #L4e0d8e.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L4e0d94.  v4:= temp;
  #L4e0d96.  goto L4e0d9a;
  #L4e0d98.  v4:= -1I;
  #L4e0d9a.  v3.`x2.r0.a` @type ^`int` := v4;
  #L4e0d9e.  return @kind void;
}
procedure `void` `d`(`x2.r0` v4 @kind this, `int` v5 ) @signature `Lx2/r0;.d:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e0db0.  v0:= 0I;
  #L4e0db2.  v1:= v4.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0db6.  call temp:= `size`(v1) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4e0dbc.  v1:= temp;
  #L4e0dbe.  v1:= v1 + -1;
  #L4e0dc2.  if v0 >= v1 then goto L4e0e0e;
  #L4e0dc6.  v1:= v4.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0dca.  v2:= v0 + 1;
  #L4e0dce.  call temp:= `keyAt`(v1, v2) @signature `Landroid/util/SparseArray;.keyAt:(I)I` @kind virtual;
  #L4e0dd4.  v1:= temp;
  #L4e0dd6.  if v5 < v1 then goto L4e0e0e;
  #L4e0dda.  v1:= v4.`x2.r0.c` @type ^`s3.g` @kind object;
  #L4e0dde.  v3:= v4.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0de2.  call temp:= `valueAt`(v3, v0) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L4e0de8.  v3:= temp @kind object;
  #L4e0dea.  call `accept`(v1, v3) @signature `Ls3/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4e0df0.  v1:= v4.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0df4.  call `removeAt`(v1, v0) @signature `Landroid/util/SparseArray;.removeAt:(I)V` @kind virtual;
  #L4e0dfa.  v0:= v4.`x2.r0.a` @type ^`int`;
  #L4e0dfe.  if v0 <= 0 then goto L4e0e0a;
  #L4e0e02.  v0:= v0 + -1;
  #L4e0e06.  v4.`x2.r0.a` @type ^`int` := v0;
  #L4e0e0a.  v0:= v2;
  #L4e0e0c.  goto L4e0db2;
  #L4e0e0e.  return @kind void;
}
procedure `java.lang.Object` `e`(`x2.r0` v2 @kind this, `int` v3 ) @signature `Lx2/r0;.e:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e0b40.  v0:= v2.`x2.r0.a` @type ^`int`;
  #L4e0b44.  v1:= -1I;
  #L4e0b46.  if v0 != v1 then goto L4e0b50;
  #L4e0b4a.  v0:= 0I;
  #L4e0b4c.  v2.`x2.r0.a` @type ^`int` := v0;
  #L4e0b50.  v0:= v2.`x2.r0.a` @type ^`int`;
  #L4e0b54.  if v0 <= 0 then goto L4e0b72;
  #L4e0b58.  v1:= v2.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0b5c.  call temp:= `keyAt`(v1, v0) @signature `Landroid/util/SparseArray;.keyAt:(I)I` @kind virtual;
  #L4e0b62.  v0:= temp;
  #L4e0b64.  if v3 >= v0 then goto L4e0b72;
  #L4e0b68.  v0:= v2.`x2.r0.a` @type ^`int`;
  #L4e0b6c.  v0:= v0 + -1;
  #L4e0b70.  goto L4e0b4c;
  #L4e0b72.  v0:= v2.`x2.r0.a` @type ^`int`;
  #L4e0b76.  v1:= v2.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0b7a.  call temp:= `size`(v1) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4e0b80.  v1:= temp;
  #L4e0b82.  v1:= v1 + -1;
  #L4e0b86.  if v0 >= v1 then goto L4e0bb0;
  #L4e0b8a.  v0:= v2.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0b8e.  v1:= v2.`x2.r0.a` @type ^`int`;
  #L4e0b92.  v1:= v1 + 1;
  #L4e0b96.  call temp:= `keyAt`(v0, v1) @signature `Landroid/util/SparseArray;.keyAt:(I)I` @kind virtual;
  #L4e0b9c.  v0:= temp;
  #L4e0b9e.  if v3 < v0 then goto L4e0bb0;
  #L4e0ba2.  v0:= v2.`x2.r0.a` @type ^`int`;
  #L4e0ba6.  v0:= v0 + 1;
  #L4e0baa.  v2.`x2.r0.a` @type ^`int` := v0;
  #L4e0bae.  goto L4e0b72;
  #L4e0bb0.  v3:= v2.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0bb4.  v0:= v2.`x2.r0.a` @type ^`int`;
  #L4e0bb8.  call temp:= `valueAt`(v3, v0) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L4e0bbe.  v3:= temp @kind object;
  #L4e0bc0.  return v3 @kind object;
}
procedure `java.lang.Object` `f`(`x2.r0` v2 @kind this) @signature `Lx2/r0;.f:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e0bd4.  v0:= v2.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0bd8.  call temp:= `size`(v0) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4e0bde.  v1:= temp;
  #L4e0be0.  v1:= v1 + -1;
  #L4e0be4.  call temp:= `valueAt`(v0, v1) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L4e0bea.  v0:= temp @kind object;
  #L4e0bec.  return v0 @kind object;
}
procedure `boolean` `g`(`x2.r0` v1 @kind this) @signature `Lx2/r0;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e0b18.  v0:= v1.`x2.r0.b` @type ^`android.util.SparseArray` @kind object;
  #L4e0b1c.  call temp:= `size`(v0) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4e0b22.  v0:= temp;
  #L4e0b24.  if v0 != 0 then goto L4e0b2c;
  #L4e0b28.  v0:= 1I;
  #L4e0b2a.  goto L4e0b2e;
  #L4e0b2c.  v0:= 0I;
  #L4e0b2e.  return v0;
}
