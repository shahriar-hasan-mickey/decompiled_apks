record `x2.h0` @kind class @AccessFlag FINAL extends `x2.r` @kind interface, `a2.n` @kind interface, `r3.h0$b` @kind interface, `r3.h0$f` @kind interface, `x2.m0$d` @kind interface {
  `s3.f` `x2.h0.A` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `x2.h0.B` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `x2.h0.C` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `x2.h0.D` @AccessFlag PRIVATE_FINAL;
  `x2.r$a` `x2.h0.E` @AccessFlag PRIVATE;
  `r2.b` `x2.h0.F` @AccessFlag PRIVATE;
  `x2.m0`[] `x2.h0.G` @AccessFlag PRIVATE;
  `x2.h0$d`[] `x2.h0.H` @AccessFlag PRIVATE;
  `boolean` `x2.h0.I` @AccessFlag PRIVATE;
  `boolean` `x2.h0.J` @AccessFlag PRIVATE;
  `boolean` `x2.h0.K` @AccessFlag PRIVATE;
  `x2.h0$e` `x2.h0.L` @AccessFlag PRIVATE;
  `a2.a0` `x2.h0.M` @AccessFlag PRIVATE;
  `long` `x2.h0.N` @AccessFlag PRIVATE;
  `boolean` `x2.h0.O` @AccessFlag PRIVATE;
  `int` `x2.h0.P` @AccessFlag PRIVATE;
  `boolean` `x2.h0.Q` @AccessFlag PRIVATE;
  `boolean` `x2.h0.R` @AccessFlag PRIVATE;
  `int` `x2.h0.S` @AccessFlag PRIVATE;
  `boolean` `x2.h0.T` @AccessFlag PRIVATE;
  `long` `x2.h0.U` @AccessFlag PRIVATE;
  `long` `x2.h0.V` @AccessFlag PRIVATE;
  `boolean` `x2.h0.W` @AccessFlag PRIVATE;
  `int` `x2.h0.X` @AccessFlag PRIVATE;
  `boolean` `x2.h0.Y` @AccessFlag PRIVATE;
  `boolean` `x2.h0.Z` @AccessFlag PRIVATE;
  `android.net.Uri` `x2.h0.o` @AccessFlag PRIVATE_FINAL;
  `r3.l` `x2.h0.p` @AccessFlag PRIVATE_FINAL;
  `z1.y` `x2.h0.q` @AccessFlag PRIVATE_FINAL;
  `r3.g0` `x2.h0.r` @AccessFlag PRIVATE_FINAL;
  `x2.b0$a` `x2.h0.s` @AccessFlag PRIVATE_FINAL;
  `z1.w$a` `x2.h0.t` @AccessFlag PRIVATE_FINAL;
  `x2.h0$b` `x2.h0.u` @AccessFlag PRIVATE_FINAL;
  `r3.b` `x2.h0.v` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `x2.h0.w` @AccessFlag PRIVATE_FINAL;
  `long` `x2.h0.x` @AccessFlag PRIVATE_FINAL;
  `r3.h0` `x2.h0.y` @AccessFlag PRIVATE_FINAL;
  `x2.c0` `x2.h0.z` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Map` `@@x2.h0.a0` @AccessFlag PRIVATE_STATIC_FINAL;
global `v1.j1` `@@x2.h0.b0` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx2/h0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4dd8c0.  call temp:= `L`() @signature `Lx2/h0;.L:()Ljava/util/Map;` @kind static;
  #L4dd8c6.  v0:= temp @kind object;
  #L4dd8c8.  `@@x2.h0.a0` @type ^`java.util.Map` := v0 @kind object;
  #L4dd8cc.  v0:= new `v1.j1$b`;
  #L4dd8d0.  call `<init>`(v0) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L4dd8d6.  v1:= "icy" @kind object;
  #L4dd8da.  call temp:= `S`(v0, v1) @signature `Lv1/j1$b;.S:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L4dd8e0.  v0:= temp @kind object;
  #L4dd8e2.  v1:= "application/x-icy" @kind object;
  #L4dd8e6.  call temp:= `e0`(v0, v1) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L4dd8ec.  v0:= temp @kind object;
  #L4dd8ee.  call temp:= `E`(v0) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L4dd8f4.  v0:= temp @kind object;
  #L4dd8f6.  `@@x2.h0.b0` @type ^`v1.j1` := v0 @kind object;
  #L4dd8fa.  return @kind void;
}
procedure `void` `<init>`(`x2.h0` v0 @kind this, `android.net.Uri` v1 @kind object, `r3.l` v2 @kind object, `x2.c0` v3 @kind object, `z1.y` v4 @kind object, `z1.w$a` v5 @kind object, `r3.g0` v6 @kind object, `x2.b0$a` v7 @kind object, `x2.h0$b` v8 @kind object, `r3.b` v9 @kind object, `java.lang.String` v10 @kind object, `int` v11 ) @signature `Lx2/h0;.<init>:(Landroid/net/Uri;Lr3/l;Lx2/c0;Lz1/y;Lz1/w$a;Lr3/g0;Lx2/b0$a;Lx2/h0$b;Lr3/b;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4dd90c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dd912.  v0.`x2.h0.o` @type ^`android.net.Uri` := v1 @kind object;
  #L4dd916.  v0.`x2.h0.p` @type ^`r3.l` := v2 @kind object;
  #L4dd91a.  v0.`x2.h0.q` @type ^`z1.y` := v4 @kind object;
  #L4dd91e.  v0.`x2.h0.t` @type ^`z1.w$a` := v5 @kind object;
  #L4dd922.  v0.`x2.h0.r` @type ^`r3.g0` := v6 @kind object;
  #L4dd926.  v0.`x2.h0.s` @type ^`x2.b0$a` := v7 @kind object;
  #L4dd92a.  v0.`x2.h0.u` @type ^`x2.h0$b` := v8 @kind object;
  #L4dd92e.  v0.`x2.h0.v` @type ^`r3.b` := v9 @kind object;
  #L4dd932.  v0.`x2.h0.w` @type ^`java.lang.String` := v10 @kind object;
  #L4dd936.  v1:= (`long`) v11 @kind i2l;
  #L4dd938.  v0.`x2.h0.x` @type ^`long` := v1 @kind wide;
  #L4dd93c.  v1:= new `r3.h0`;
  #L4dd940.  v2:= "ProgressiveMediaPeriod" @kind object;
  #L4dd944.  call `<init>`(v1, v2) @signature `Lr3/h0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4dd94a.  v0.`x2.h0.y` @type ^`r3.h0` := v1 @kind object;
  #L4dd94e.  v0.`x2.h0.z` @type ^`x2.c0` := v3 @kind object;
  #L4dd952.  v1:= new `s3.f`;
  #L4dd956.  call `<init>`(v1) @signature `Ls3/f;.<init>:()V` @kind direct;
  #L4dd95c.  v0.`x2.h0.A` @type ^`s3.f` := v1 @kind object;
  #L4dd960.  v1:= new `x2.d0`;
  #L4dd964.  call `<init>`(v1, v0) @signature `Lx2/d0;.<init>:(Lx2/h0;)V` @kind direct;
  #L4dd96a.  v0.`x2.h0.B` @type ^`java.lang.Runnable` := v1 @kind object;
  #L4dd96e.  v1:= new `x2.f0`;
  #L4dd972.  call `<init>`(v1, v0) @signature `Lx2/f0;.<init>:(Lx2/h0;)V` @kind direct;
  #L4dd978.  v0.`x2.h0.C` @type ^`java.lang.Runnable` := v1 @kind object;
  #L4dd97c.  call temp:= `w`() @signature `Ls3/l0;.w:()Landroid/os/Handler;` @kind static;
  #L4dd982.  v1:= temp @kind object;
  #L4dd984.  v0.`x2.h0.D` @type ^`android.os.Handler` := v1 @kind object;
  #L4dd988.  v1:= 0I;
  #L4dd98a.  v2:= new `x2.h0$d`[v1];
  #L4dd98e.  v0.`x2.h0.H` @type ^`x2.h0$d`[] := v2 @kind object;
  #L4dd992.  v1:= new `x2.m0`[v1];
  #L4dd996.  v0.`x2.h0.G` @type ^`x2.m0`[] := v1 @kind object;
  #L4dd99a.  v1:= -4.9E-324D;
  #L4dd9a4.  v0.`x2.h0.V` @type ^`long` := v1 @kind wide;
  #L4dd9a8.  v0.`x2.h0.N` @type ^`long` := v1 @kind wide;
  #L4dd9ac.  v1:= 1I;
  #L4dd9ae.  v0.`x2.h0.P` @type ^`int` := v1;
  #L4dd9b2.  return @kind void;
}
procedure `android.os.Handler` `A`(`x2.h0` v0 @kind object) @signature `Lx2/h0;.A:(Lx2/h0;)Landroid/os/Handler;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4dce4c.  v0:= v0.`x2.h0.D` @type ^`android.os.Handler` @kind object;
  #L4dce50.  return v0 @kind object;
}
procedure `long` `B`(`x2.h0` v0 @kind object, `boolean` v1 ) @signature `Lx2/h0;.B:(Lx2/h0;Z)J` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4dd1d0.  call temp:= `N`(v0, v1) @signature `Lx2/h0;.N:(Z)J` @kind direct;
  #L4dd1d6.  v0:= temp @kind wide;
  #L4dd1d8.  return v0 @kind wide;
}
procedure `java.util.Map` `C`() @signature `Lx2/h0;.C:()Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L4dd184.  v0:= `@@x2.h0.a0` @type ^`java.util.Map` @kind object;
  #L4dd188.  return v0 @kind object;
}
procedure `java.lang.String` `D`(`x2.h0` v0 @kind object) @signature `Lx2/h0;.D:(Lx2/h0;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4dd16c.  v0:= v0.`x2.h0.w` @type ^`java.lang.String` @kind object;
  #L4dd170.  return v0 @kind object;
}
procedure `void` `E`(`x2.h0` v0 @kind object) @signature `Lx2/h0;.E:(Lx2/h0;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4dd9c4.  call `Z`(v0) @signature `Lx2/h0;.Z:()V` @kind direct;
  #L4dd9ca.  return @kind void;
}
procedure `r2.b` `F`(`x2.h0` v0 @kind object) @signature `Lx2/h0;.F:(Lx2/h0;)Lr2/b;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4dd6a0.  v0:= v0.`x2.h0.F` @type ^`r2.b` @kind object;
  #L4dd6a4.  return v0 @kind object;
}
procedure `r2.b` `G`(`x2.h0` v0 @kind object, `r2.b` v1 @kind object) @signature `Lx2/h0;.G:(Lx2/h0;Lr2/b;)Lr2/b;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4dd6b8.  v0.`x2.h0.F` @type ^`r2.b` := v1 @kind object;
  #L4dd6bc.  return v1 @kind object;
}
procedure `v1.j1` `H`() @signature `Lx2/h0;.H:()Lv1/j1;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L4dd848.  v0:= `@@x2.h0.b0` @type ^`v1.j1` @kind object;
  #L4dd84c.  return v0 @kind object;
}
procedure `long` `I`(`x2.h0` v2 @kind object) @signature `Lx2/h0;.I:(Lx2/h0;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L4dd1ec.  v0:= v2.`x2.h0.x` @type ^`long` @kind wide;
  #L4dd1f0.  return v0 @kind wide;
}
procedure `void` `J`(`x2.h0` v1 @kind this) @signature `Lx2/h0;.J:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4dd9dc.  v0:= v1.`x2.h0.J` @type ^`boolean` @kind boolean;
  #L4dd9e0.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4dd9e6.  v0:= v1.`x2.h0.L` @type ^`x2.h0$e` @kind object;
  #L4dd9ea.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4dd9f0.  v0:= v1.`x2.h0.M` @type ^`a2.a0` @kind object;
  #L4dd9f4.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4dd9fa.  return @kind void;
}
procedure `boolean` `K`(`x2.h0` v6 @kind this, `x2.h0$a` v7 @kind object, `int` v8 ) @signature `Lx2/h0;.K:(Lx2/h0$a;I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4dce64.  v0:= v6.`x2.h0.T` @type ^`boolean` @kind boolean;
  #L4dce68.  v1:= 1I;
  #L4dce6a.  if v0 != 0 then goto L4dcee4;
  #L4dce6e.  v0:= v6.`x2.h0.M` @type ^`a2.a0` @kind object;
  #L4dce72.  if v0 == 0 then goto L4dce92;
  #L4dce76.  call temp:= `i`(v0) @signature `La2/a0;.i:()J` @kind interface;
  #L4dce7c.  v2:= temp @kind wide;
  #L4dce7e.  v4:= -4.9E-324D;
  #L4dce88.  v0:= lcmp(v2, v4);
  #L4dce8c.  if v0 == 0 then goto L4dce92;
  #L4dce90.  goto L4dcee4;
  #L4dce92.  v8:= v6.`x2.h0.J` @type ^`boolean` @kind boolean;
  #L4dce96.  v0:= 0I;
  #L4dce98.  if v8 == 0 then goto L4dceae;
  #L4dce9c.  call temp:= `k0`(v6) @signature `Lx2/h0;.k0:()Z` @kind direct;
  #L4dcea2.  v8:= temp;
  #L4dcea4.  if v8 != 0 then goto L4dceae;
  #L4dcea8.  v6.`x2.h0.W` @type ^`boolean` := v1 @kind boolean;
  #L4dceac.  return v0;
  #L4dceae.  v8:= v6.`x2.h0.J` @type ^`boolean` @kind boolean;
  #L4dceb2.  v6.`x2.h0.R` @type ^`boolean` := v8 @kind boolean;
  #L4dceb6.  v2:= 0L;
  #L4dceba.  v6.`x2.h0.U` @type ^`long` := v2 @kind wide;
  #L4dcebe.  v6.`x2.h0.X` @type ^`int` := v0;
  #L4dcec2.  v8:= v6.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dcec6.  v4:= length @variable v8;
  #L4dcec8.  if v0 >= v4 then goto L4dcedc;
  #L4dcecc.  v5:= v8[v0] @kind object;
  #L4dced0.  call `V`(v5) @signature `Lx2/m0;.V:()V` @kind virtual;
  #L4dced6.  v0:= v0 + 1;
  #L4dceda.  goto L4dcec8;
  #L4dcedc.  call `h`(v7, v2, v2) @signature `Lx2/h0$a;.h:(Lx2/h0$a;JJ)V` @kind static;
  #L4dcee2.  return v1;
  #L4dcee4.  v6.`x2.h0.X` @type ^`int` := v8;
  #L4dcee8.  return v1;
}
procedure `java.util.Map` `L`() @signature `Lx2/h0;.L:()Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4dd19c.  v0:= new `java.util.HashMap`;
  #L4dd1a0.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4dd1a6.  v1:= "Icy-MetaData" @kind object;
  #L4dd1aa.  v2:= "1" @kind object;
  #L4dd1ae.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4dd1b4.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L4dd1ba.  v0:= temp @kind object;
  #L4dd1bc.  return v0 @kind object;
}
procedure `int` `M`(`x2.h0` v5 @kind this) @signature `Lx2/h0;.M:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4dd08c.  v0:= v5.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd090.  v1:= length @variable v0;
  #L4dd092.  v2:= 0I;
  #L4dd094.  v3:= 0I;
  #L4dd096.  if v2 >= v1 then goto L4dd0ae;
  #L4dd09a.  v4:= v0[v2] @kind object;
  #L4dd09e.  call temp:= `G`(v4) @signature `Lx2/m0;.G:()I` @kind virtual;
  #L4dd0a4.  v4:= temp;
  #L4dd0a6.  v3:= v3 + v4 @kind int;
  #L4dd0a8.  v2:= v2 + 1;
  #L4dd0ac.  goto L4dd096;
  #L4dd0ae.  return v3;
}
procedure `long` `N`(`x2.h0` v5 @kind this, `boolean` v6 ) @signature `Lx2/h0;.N:(Z)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4dd32c.  v0:= -9223372036854775808L;
  #L4dd330.  v2:= 0I;
  #L4dd332.  v3:= v5.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd336.  v3:= length @variable v3;
  #L4dd338.  if v2 >= v3 then goto L4dd37a;
  #L4dd33c.  if v6 != 0 then goto L4dd35c;
  #L4dd340.  v3:= v5.`x2.h0.L` @type ^`x2.h0$e` @kind object;
  #L4dd344.  call temp:= `e`(v3) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4dd34a.  v3:= temp @kind object;
  #L4dd34c.  v3:= (`x2.h0$e`) v3 @kind object;
  #L4dd350.  v3:= v3.`x2.h0$e.c` @type ^`boolean`[] @kind object;
  #L4dd354.  v3:= v3[v2] @kind boolean;
  #L4dd358.  if v3 == 0 then goto L4dd374;
  #L4dd35c.  v3:= v5.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd360.  v3:= v3[v2] @kind object;
  #L4dd364.  call temp:= `z`(v3) @signature `Lx2/m0;.z:()J` @kind virtual;
  #L4dd36a.  v3:= temp @kind wide;
  #L4dd36c.  call temp:= `max`(v0, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L4dd372.  v0:= temp @kind wide;
  #L4dd374.  v2:= v2 + 1;
  #L4dd378.  goto L4dd332;
  #L4dd37a.  return v0 @kind wide;
}
procedure `boolean` `P`(`x2.h0` v5 @kind this) @signature `Lx2/h0;.P:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4dcfa0.  v0:= v5.`x2.h0.V` @type ^`long` @kind wide;
  #L4dcfa4.  v2:= -4.9E-324D;
  #L4dcfae.  v4:= lcmp(v0, v2);
  #L4dcfb2.  if v4 == 0 then goto L4dcfba;
  #L4dcfb6.  v0:= 1I;
  #L4dcfb8.  goto L4dcfbc;
  #L4dcfba.  v0:= 0I;
  #L4dcfbc.  return v0;
}
procedure `void` `R`(`x2.h0` v1 @kind this) @signature `Lx2/h0;.R:()V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L4dda88.  v0:= v1.`x2.h0.Z` @type ^`boolean` @kind boolean;
  #L4dda8c.  if v0 != 0 then goto L4ddaa6;
  #L4dda90.  v0:= v1.`x2.h0.E` @type ^`x2.r$a` @kind object;
  #L4dda94.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4dda9a.  v0:= temp @kind object;
  #L4dda9c.  v0:= (`x2.r$a`) v0 @kind object;
  #L4ddaa0.  call `m`(v0, v1) @signature `Lx2/o0$a;.m:(Lx2/o0;)V` @kind interface;
  #L4ddaa6.  return @kind void;
}
procedure `void` `S`(`x2.h0` v1 @kind this) @signature `Lx2/h0;.S:()V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L4ddab8.  v0:= 1I;
  #L4ddaba.  v1.`x2.h0.T` @type ^`boolean` := v0 @kind boolean;
  #L4ddabe.  return @kind void;
}
procedure `void` `T`(`x2.h0` v0 @kind this, `a2.a0` v1 @kind object) @signature `Lx2/h0;.T:(La2/a0;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;

  #L4ddad0.  call `h0`(v0, v1) @signature `Lx2/h0;.h0:(La2/a0;)V` @kind direct;
  #L4ddad6.  return @kind void;
}
procedure `void` `U`(`x2.h0` v11 @kind this) @signature `Lx2/h0;.U:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4ddae8.  v0:= v11.`x2.h0.Z` @type ^`boolean` @kind boolean;
  #L4ddaec.  if v0 != 0 then goto L4ddca6;
  #L4ddaf0.  v0:= v11.`x2.h0.J` @type ^`boolean` @kind boolean;
  #L4ddaf4.  if v0 != 0 then goto L4ddca6;
  #L4ddaf8.  v0:= v11.`x2.h0.I` @type ^`boolean` @kind boolean;
  #L4ddafc.  if v0 == 0 then goto L4ddca6;
  #L4ddb00.  v0:= v11.`x2.h0.M` @type ^`a2.a0` @kind object;
  #L4ddb04.  if v0 != 0 then goto L4ddb0c;
  #L4ddb08.  goto L4ddca6;
  #L4ddb0c.  v0:= v11.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4ddb10.  v1:= length @variable v0;
  #L4ddb12.  v2:= 0I;
  #L4ddb14.  v3:= 0I;
  #L4ddb16.  if v3 >= v1 then goto L4ddb32;
  #L4ddb1a.  v4:= v0[v3] @kind object;
  #L4ddb1e.  call temp:= `F`(v4) @signature `Lx2/m0;.F:()Lv1/j1;` @kind virtual;
  #L4ddb24.  v4:= temp @kind object;
  #L4ddb26.  if v4 != 0 then goto L4ddb2c;
  #L4ddb2a.  return @kind void;
  #L4ddb2c.  v3:= v3 + 1;
  #L4ddb30.  goto L4ddb16;
  #L4ddb32.  v0:= v11.`x2.h0.A` @type ^`s3.f` @kind object;
  #L4ddb36.  call temp:= `c`(v0) @signature `Ls3/f;.c:()Z` @kind virtual;
  #L4ddb3c.  v0:= v11.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4ddb40.  v0:= length @variable v0;
  #L4ddb42.  v1:= new `x2.t0`[v0];
  #L4ddb46.  v3:= new `boolean`[v0];
  #L4ddb4a.  v4:= 0I;
  #L4ddb4c.  v5:= 1I;
  #L4ddb4e.  if v4 >= v0 then goto L4ddc74;
  #L4ddb52.  v6:= v11.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4ddb56.  v6:= v6[v4] @kind object;
  #L4ddb5a.  call temp:= `F`(v6) @signature `Lx2/m0;.F:()Lv1/j1;` @kind virtual;
  #L4ddb60.  v6:= temp @kind object;
  #L4ddb62.  call temp:= `e`(v6) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4ddb68.  v6:= temp @kind object;
  #L4ddb6a.  v6:= (`v1.j1`) v6 @kind object;
  #L4ddb6e.  v7:= v6.`v1.j1.z` @type ^`java.lang.String` @kind object;
  #L4ddb72.  call temp:= `o`(v7) @signature `Ls3/u;.o:(Ljava/lang/String;)Z` @kind static;
  #L4ddb78.  v8:= temp;
  #L4ddb7a.  if v8 != 0 then goto L4ddb90;
  #L4ddb7e.  call temp:= `s`(v7) @signature `Ls3/u;.s:(Ljava/lang/String;)Z` @kind static;
  #L4ddb84.  v7:= temp;
  #L4ddb86.  if v7 == 0 then goto L4ddb8c;
  #L4ddb8a.  goto L4ddb90;
  #L4ddb8c.  v7:= 0I;
  #L4ddb8e.  goto L4ddb92;
  #L4ddb90.  v7:= 1I;
  #L4ddb92.  v3[v4]:= v7 @kind boolean;
  #L4ddb96.  v9:= v11.`x2.h0.K` @type ^`boolean` @kind boolean;
  #L4ddb9a.  v7:= v7 ^| v9 @kind int;
  #L4ddb9c.  v11.`x2.h0.K` @type ^`boolean` := v7 @kind boolean;
  #L4ddba0.  v7:= v11.`x2.h0.F` @type ^`r2.b` @kind object;
  #L4ddba4.  if v7 == 0 then goto L4ddc3a;
  #L4ddba8.  if v8 != 0 then goto L4ddbbc;
  #L4ddbac.  v9:= v11.`x2.h0.H` @type ^`x2.h0$d`[] @kind object;
  #L4ddbb0.  v9:= v9[v4] @kind object;
  #L4ddbb4.  v9:= v9.`x2.h0$d.b` @type ^`boolean` @kind boolean;
  #L4ddbb8.  if v9 == 0 then goto L4ddc00;
  #L4ddbbc.  v9:= v6.`v1.j1.x` @type ^`n2.a` @kind object;
  #L4ddbc0.  if v9 != 0 then goto L4ddbd8;
  #L4ddbc4.  v9:= new `n2.a`;
  #L4ddbc8.  v10:= new `n2.a$b`[v5];
  #L4ddbcc.  v10[v2]:= v7 @kind object;
  #L4ddbd0.  call `<init>`(v9, v10) @signature `Ln2/a;.<init>:([Ln2/a$b;)V` @kind direct;
  #L4ddbd6.  goto L4ddbe8;
  #L4ddbd8.  v10:= new `n2.a$b`[v5];
  #L4ddbdc.  v10[v2]:= v7 @kind object;
  #L4ddbe0.  call temp:= `a`(v9, v10) @signature `Ln2/a;.a:([Ln2/a$b;)Ln2/a;` @kind virtual;
  #L4ddbe6.  v9:= temp @kind object;
  #L4ddbe8.  call temp:= `b`(v6) @signature `Lv1/j1;.b:()Lv1/j1$b;` @kind virtual;
  #L4ddbee.  v6:= temp @kind object;
  #L4ddbf0.  call temp:= `X`(v6, v9) @signature `Lv1/j1$b;.X:(Ln2/a;)Lv1/j1$b;` @kind virtual;
  #L4ddbf6.  v6:= temp @kind object;
  #L4ddbf8.  call temp:= `E`(v6) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L4ddbfe.  v6:= temp @kind object;
  #L4ddc00.  if v8 == 0 then goto L4ddc3a;
  #L4ddc04.  v8:= v6.`v1.j1.t` @type ^`int`;
  #L4ddc08.  v9:= -1I;
  #L4ddc0a.  if v8 != v9 then goto L4ddc3a;
  #L4ddc0e.  v8:= v6.`v1.j1.u` @type ^`int`;
  #L4ddc12.  if v8 != v9 then goto L4ddc3a;
  #L4ddc16.  v8:= v7.`r2.b.o` @type ^`int`;
  #L4ddc1a.  if v8 == v9 then goto L4ddc3a;
  #L4ddc1e.  call temp:= `b`(v6) @signature `Lv1/j1;.b:()Lv1/j1$b;` @kind virtual;
  #L4ddc24.  v6:= temp @kind object;
  #L4ddc26.  v7:= v7.`r2.b.o` @type ^`int`;
  #L4ddc2a.  call temp:= `G`(v6, v7) @signature `Lv1/j1$b;.G:(I)Lv1/j1$b;` @kind virtual;
  #L4ddc30.  v6:= temp @kind object;
  #L4ddc32.  call temp:= `E`(v6) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L4ddc38.  v6:= temp @kind object;
  #L4ddc3a.  v7:= v11.`x2.h0.q` @type ^`z1.y` @kind object;
  #L4ddc3e.  call temp:= `e`(v7, v6) @signature `Lz1/y;.e:(Lv1/j1;)I` @kind interface;
  #L4ddc44.  v7:= temp;
  #L4ddc46.  call temp:= `c`(v6, v7) @signature `Lv1/j1;.c:(I)Lv1/j1;` @kind virtual;
  #L4ddc4c.  v6:= temp @kind object;
  #L4ddc4e.  v7:= new `x2.t0`;
  #L4ddc52.  call temp:= `toString`(v4) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L4ddc58.  v8:= temp @kind object;
  #L4ddc5a.  v5:= new `v1.j1`[v5];
  #L4ddc5e.  v5[v2]:= v6 @kind object;
  #L4ddc62.  call `<init>`(v7, v8, v5) @signature `Lx2/t0;.<init>:(Ljava/lang/String;[Lv1/j1;)V` @kind direct;
  #L4ddc68.  v1[v4]:= v7 @kind object;
  #L4ddc6c.  v4:= v4 + 1;
  #L4ddc70.  goto L4ddb4c;
  #L4ddc74.  v0:= new `x2.h0$e`;
  #L4ddc78.  v2:= new `x2.v0`;
  #L4ddc7c.  call `<init>`(v2, v1) @signature `Lx2/v0;.<init>:([Lx2/t0;)V` @kind direct;
  #L4ddc82.  call `<init>`(v0, v2, v3) @signature `Lx2/h0$e;.<init>:(Lx2/v0;[Z)V` @kind direct;
  #L4ddc88.  v11.`x2.h0.L` @type ^`x2.h0$e` := v0 @kind object;
  #L4ddc8c.  v11.`x2.h0.J` @type ^`boolean` := v5 @kind boolean;
  #L4ddc90.  v0:= v11.`x2.h0.E` @type ^`x2.r$a` @kind object;
  #L4ddc94.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4ddc9a.  v0:= temp @kind object;
  #L4ddc9c.  v0:= (`x2.r$a`) v0 @kind object;
  #L4ddca0.  call `h`(v0, v11) @signature `Lx2/r$a;.h:(Lx2/r;)V` @kind interface;
  #L4ddca6.  return @kind void;
}
procedure `void` `V`(`x2.h0` v10 @kind this, `int` v11 ) @signature `Lx2/h0;.V:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4ddcb8.  call `J`(v10) @signature `Lx2/h0;.J:()V` @kind direct;
  #L4ddcbe.  v0:= v10.`x2.h0.L` @type ^`x2.h0$e` @kind object;
  #L4ddcc2.  v1:= v0.`x2.h0$e.d` @type ^`boolean`[] @kind object;
  #L4ddcc6.  v2:= v1[v11] @kind boolean;
  #L4ddcca.  if v2 != 0 then goto L4ddd08;
  #L4ddcce.  v0:= v0.`x2.h0$e.a` @type ^`x2.v0` @kind object;
  #L4ddcd2.  call temp:= `b`(v0, v11) @signature `Lx2/v0;.b:(I)Lx2/t0;` @kind virtual;
  #L4ddcd8.  v0:= temp @kind object;
  #L4ddcda.  v2:= 0I;
  #L4ddcdc.  call temp:= `b`(v0, v2) @signature `Lx2/t0;.b:(I)Lv1/j1;` @kind virtual;
  #L4ddce2.  v5:= temp @kind object;
  #L4ddce4.  v3:= v10.`x2.h0.s` @type ^`x2.b0$a` @kind object;
  #L4ddce8.  v0:= v5.`v1.j1.z` @type ^`java.lang.String` @kind object;
  #L4ddcec.  call temp:= `k`(v0) @signature `Ls3/u;.k:(Ljava/lang/String;)I` @kind static;
  #L4ddcf2.  v4:= temp;
  #L4ddcf4.  v6:= 0I;
  #L4ddcf6.  v7:= 0I;
  #L4ddcf8.  v8:= v10.`x2.h0.U` @type ^`long` @kind wide;
  #L4ddcfc.  call `i`(v3, v4, v5, v6, v7, v8) @signature `Lx2/b0$a;.i:(ILv1/j1;ILjava/lang/Object;J)V` @kind virtual;
  #L4ddd02.  v0:= 1I;
  #L4ddd04.  v1[v11]:= v0 @kind boolean;
  #L4ddd08.  return @kind void;
}
procedure `void` `W`(`x2.h0` v3 @kind this, `int` v4 ) @signature `Lx2/h0;.W:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4ddd1c.  call `J`(v3) @signature `Lx2/h0;.J:()V` @kind direct;
  #L4ddd22.  v0:= v3.`x2.h0.L` @type ^`x2.h0$e` @kind object;
  #L4ddd26.  v0:= v0.`x2.h0$e.b` @type ^`boolean`[] @kind object;
  #L4ddd2a.  v1:= v3.`x2.h0.W` @type ^`boolean` @kind boolean;
  #L4ddd2e.  if v1 == 0 then goto L4ddd9c;
  #L4ddd32.  v0:= v0[v4] @kind boolean;
  #L4ddd36.  if v0 == 0 then goto L4ddd9c;
  #L4ddd3a.  v0:= v3.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4ddd3e.  v4:= v0[v4] @kind object;
  #L4ddd42.  v0:= 0I;
  #L4ddd44.  call temp:= `K`(v4, v0) @signature `Lx2/m0;.K:(Z)Z` @kind virtual;
  #L4ddd4a.  v4:= temp;
  #L4ddd4c.  if v4 == 0 then goto L4ddd52;
  #L4ddd50.  goto L4ddd9c;
  #L4ddd52.  v1:= 0L;
  #L4ddd56.  v3.`x2.h0.V` @type ^`long` := v1 @kind wide;
  #L4ddd5a.  v3.`x2.h0.W` @type ^`boolean` := v0 @kind boolean;
  #L4ddd5e.  v4:= 1I;
  #L4ddd60.  v3.`x2.h0.R` @type ^`boolean` := v4 @kind boolean;
  #L4ddd64.  v3.`x2.h0.U` @type ^`long` := v1 @kind wide;
  #L4ddd68.  v3.`x2.h0.X` @type ^`int` := v0;
  #L4ddd6c.  v4:= v3.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4ddd70.  v1:= length @variable v4;
  #L4ddd72.  if v0 >= v1 then goto L4ddd86;
  #L4ddd76.  v2:= v4[v0] @kind object;
  #L4ddd7a.  call `V`(v2) @signature `Lx2/m0;.V:()V` @kind virtual;
  #L4ddd80.  v0:= v0 + 1;
  #L4ddd84.  goto L4ddd72;
  #L4ddd86.  v4:= v3.`x2.h0.E` @type ^`x2.r$a` @kind object;
  #L4ddd8a.  call temp:= `e`(v4) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4ddd90.  v4:= temp @kind object;
  #L4ddd92.  v4:= (`x2.r$a`) v4 @kind object;
  #L4ddd96.  call `m`(v4, v3) @signature `Lx2/o0$a;.m:(Lx2/o0;)V` @kind interface;
  #L4ddd9c.  return @kind void;
}
procedure `void` `Z`(`x2.h0` v2 @kind this) @signature `Lx2/h0;.Z:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4dde40.  v0:= v2.`x2.h0.D` @type ^`android.os.Handler` @kind object;
  #L4dde44.  v1:= new `x2.e0`;
  #L4dde48.  call `<init>`(v1, v2) @signature `Lx2/e0;.<init>:(Lx2/h0;)V` @kind direct;
  #L4dde4e.  call temp:= `post`(v0, v1) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L4dde54.  return @kind void;
}
procedure `a2.d0` `d0`(`x2.h0` v4 @kind this, `x2.h0$d` v5 @kind object) @signature `Lx2/h0;.d0:(Lx2/h0$d;)La2/d0;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4dcd7c.  v0:= v4.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dcd80.  v0:= length @variable v0;
  #L4dcd82.  v1:= 0I;
  #L4dcd84.  if v1 >= v0 then goto L4dcdac;
  #L4dcd88.  v2:= v4.`x2.h0.H` @type ^`x2.h0$d`[] @kind object;
  #L4dcd8c.  v2:= v2[v1] @kind object;
  #L4dcd90.  call temp:= `equals`(v5, v2) @signature `Lx2/h0$d;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4dcd96.  v2:= temp;
  #L4dcd98.  if v2 == 0 then goto L4dcda6;
  #L4dcd9c.  v5:= v4.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dcda0.  v5:= v5[v1] @kind object;
  #L4dcda4.  return v5 @kind object;
  #L4dcda6.  v1:= v1 + 1;
  #L4dcdaa.  goto L4dcd84;
  #L4dcdac.  v1:= v4.`x2.h0.v` @type ^`r3.b` @kind object;
  #L4dcdb0.  v2:= v4.`x2.h0.q` @type ^`z1.y` @kind object;
  #L4dcdb4.  v3:= v4.`x2.h0.t` @type ^`z1.w$a` @kind object;
  #L4dcdb8.  call temp:= `k`(v1, v2, v3) @signature `Lx2/m0;.k:(Lr3/b;Lz1/y;Lz1/w$a;)Lx2/m0;` @kind static;
  #L4dcdbe.  v1:= temp @kind object;
  #L4dcdc0.  call `d0`(v1, v4) @signature `Lx2/m0;.d0:(Lx2/m0$d;)V` @kind virtual;
  #L4dcdc6.  v2:= v4.`x2.h0.H` @type ^`x2.h0$d`[] @kind object;
  #L4dcdca.  v3:= v0 + 1;
  #L4dcdce.  call temp:= `copyOf`(v2, v3) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L4dcdd4.  v2:= temp @kind object;
  #L4dcdd6.  v2:= (`x2.h0$d`[]) v2 @kind object;
  #L4dcdda.  v2[v0]:= v5 @kind object;
  #L4dcdde.  call temp:= `k`(v2) @signature `Ls3/l0;.k:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L4dcde4.  v5:= temp @kind object;
  #L4dcde6.  v5:= (`x2.h0$d`[]) v5 @kind object;
  #L4dcdea.  v4.`x2.h0.H` @type ^`x2.h0$d`[] := v5 @kind object;
  #L4dcdee.  v5:= v4.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dcdf2.  call temp:= `copyOf`(v5, v3) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L4dcdf8.  v5:= temp @kind object;
  #L4dcdfa.  v5:= (`x2.m0`[]) v5 @kind object;
  #L4dcdfe.  v5[v0]:= v1 @kind object;
  #L4dce02.  call temp:= `k`(v5) @signature `Ls3/l0;.k:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L4dce08.  v5:= temp @kind object;
  #L4dce0a.  v5:= (`x2.m0`[]) v5 @kind object;
  #L4dce0e.  v4.`x2.h0.G` @type ^`x2.m0`[] := v5 @kind object;
  #L4dce12.  return v1 @kind object;
}
procedure `boolean` `g0`(`x2.h0` v4 @kind this, `boolean`[] v5 @kind object, `long` v6 ) @signature `Lx2/h0;.g0:([ZJ)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4dd00c.  v0:= v4.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd010.  v0:= length @variable v0;
  #L4dd012.  v1:= 0I;
  #L4dd014.  v2:= 0I;
  #L4dd016.  if v2 >= v0 then goto L4dd046;
  #L4dd01a.  v3:= v4.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd01e.  v3:= v3[v2] @kind object;
  #L4dd022.  call temp:= `Z`(v3, v6, v1) @signature `Lx2/m0;.Z:(JZ)Z` @kind virtual;
  #L4dd028.  v3:= temp;
  #L4dd02a.  if v3 != 0 then goto L4dd040;
  #L4dd02e.  v3:= v5[v2] @kind boolean;
  #L4dd032.  if v3 != 0 then goto L4dd03e;
  #L4dd036.  v3:= v4.`x2.h0.K` @type ^`boolean` @kind boolean;
  #L4dd03a.  if v3 != 0 then goto L4dd040;
  #L4dd03e.  return v1;
  #L4dd040.  v2:= v2 + 1;
  #L4dd044.  goto L4dd016;
  #L4dd046.  v5:= 1I;
  #L4dd048.  return v5;
}
procedure `void` `h0`(`x2.h0` v6 @kind this, `a2.a0` v7 @kind object) @signature `Lx2/h0;.h0:(La2/a0;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4de184.  v0:= v6.`x2.h0.F` @type ^`r2.b` @kind object;
  #L4de188.  v1:= -4.9E-324D;
  #L4de192.  if v0 != 0 then goto L4de19a;
  #L4de196.  v0:= v7 @kind object;
  #L4de198.  goto L4de1a4;
  #L4de19a.  v0:= new `a2.a0$b`;
  #L4de19e.  call `<init>`(v0, v1) @signature `La2/a0$b;.<init>:(J)V` @kind direct;
  #L4de1a4.  v6.`x2.h0.M` @type ^`a2.a0` := v0 @kind object;
  #L4de1a8.  call temp:= `i`(v7) @signature `La2/a0;.i:()J` @kind interface;
  #L4de1ae.  v3:= temp @kind wide;
  #L4de1b0.  v6.`x2.h0.N` @type ^`long` := v3 @kind wide;
  #L4de1b4.  v0:= v6.`x2.h0.T` @type ^`boolean` @kind boolean;
  #L4de1b8.  v3:= 1I;
  #L4de1ba.  if v0 != 0 then goto L4de1d2;
  #L4de1be.  call temp:= `i`(v7) @signature `La2/a0;.i:()J` @kind interface;
  #L4de1c4.  v4:= temp @kind wide;
  #L4de1c6.  v0:= lcmp(v4, v1);
  #L4de1ca.  if v0 != 0 then goto L4de1d2;
  #L4de1ce.  v0:= 1I;
  #L4de1d0.  goto L4de1d4;
  #L4de1d2.  v0:= 0I;
  #L4de1d4.  v6.`x2.h0.O` @type ^`boolean` := v0 @kind boolean;
  #L4de1d8.  if v0 == 0 then goto L4de1de;
  #L4de1dc.  v3:= 7I;
  #L4de1de.  v6.`x2.h0.P` @type ^`int` := v3;
  #L4de1e2.  v0:= v6.`x2.h0.u` @type ^`x2.h0$b` @kind object;
  #L4de1e6.  v1:= v6.`x2.h0.N` @type ^`long` @kind wide;
  #L4de1ea.  call temp:= `f`(v7) @signature `La2/a0;.f:()Z` @kind interface;
  #L4de1f0.  v7:= temp;
  #L4de1f2.  v3:= v6.`x2.h0.O` @type ^`boolean` @kind boolean;
  #L4de1f6.  call `q`(v0, v1, v7, v3) @signature `Lx2/h0$b;.q:(JZZ)V` @kind interface;
  #L4de1fc.  v7:= v6.`x2.h0.J` @type ^`boolean` @kind boolean;
  #L4de200.  if v7 != 0 then goto L4de20a;
  #L4de204.  call `U`(v6) @signature `Lx2/h0;.U:()V` @kind direct;
  #L4de20a.  return @kind void;
}
procedure `void` `j0`(`x2.h0` v26 @kind this) @signature `Lx2/h0;.j0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;

  #L4de21c.  v7:= v26 @kind object;
  #L4de220.  v8:= new `x2.h0$a`;
  #L4de224.  v2:= v7.`x2.h0.o` @type ^`android.net.Uri` @kind object;
  #L4de228.  v3:= v7.`x2.h0.p` @type ^`r3.l` @kind object;
  #L4de22c.  v4:= v7.`x2.h0.z` @type ^`x2.c0` @kind object;
  #L4de230.  v6:= v7.`x2.h0.A` @type ^`s3.f` @kind object;
  #L4de234.  v0:= v8 @kind object;
  #L4de236.  v1:= v26 @kind object;
  #L4de23a.  v5:= v26 @kind object;
  #L4de23e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lx2/h0$a;.<init>:(Lx2/h0;Landroid/net/Uri;Lr3/l;Lx2/c0;La2/n;Ls3/f;)V` @kind direct;
  #L4de244.  v0:= v7.`x2.h0.J` @type ^`boolean` @kind boolean;
  #L4de248.  if v0 == 0 then goto L4de2da;
  #L4de24c.  call temp:= `P`(v26) @signature `Lx2/h0;.P:()Z` @kind direct;
  #L4de252.  v0:= temp;
  #L4de254.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4de25a.  v0:= v7.`x2.h0.N` @type ^`long` @kind wide;
  #L4de25e.  v2:= -4.9E-324D;
  #L4de268.  v4:= lcmp(v0, v2);
  #L4de26c.  if v4 == 0 then goto L4de288;
  #L4de270.  v4:= v7.`x2.h0.V` @type ^`long` @kind wide;
  #L4de274.  v6:= lcmp(v4, v0);
  #L4de278.  if v6 <= 0 then goto L4de288;
  #L4de27c.  v0:= 1I;
  #L4de27e.  v7.`x2.h0.Y` @type ^`boolean` := v0 @kind boolean;
  #L4de282.  v7.`x2.h0.V` @type ^`long` := v2 @kind wide;
  #L4de286.  return @kind void;
  #L4de288.  v0:= v7.`x2.h0.M` @type ^`a2.a0` @kind object;
  #L4de28c.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4de292.  v0:= temp @kind object;
  #L4de294.  v0:= (`a2.a0`) v0 @kind object;
  #L4de298.  v4:= v7.`x2.h0.V` @type ^`long` @kind wide;
  #L4de29c.  call temp:= `h`(v0, v4) @signature `La2/a0;.h:(J)La2/a0$a;` @kind interface;
  #L4de2a2.  v0:= temp @kind object;
  #L4de2a4.  v0:= v0.`a2.a0$a.a` @type ^`a2.b0` @kind object;
  #L4de2a8.  v0:= v0.`a2.b0.b` @type ^`long` @kind wide;
  #L4de2ac.  v4:= v7.`x2.h0.V` @type ^`long` @kind wide;
  #L4de2b0.  call `h`(v8, v0, v4) @signature `Lx2/h0$a;.h:(Lx2/h0$a;JJ)V` @kind static;
  #L4de2b6.  v0:= v7.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4de2ba.  v1:= length @variable v0;
  #L4de2bc.  v4:= 0I;
  #L4de2be.  if v4 >= v1 then goto L4de2d6;
  #L4de2c2.  v5:= v0[v4] @kind object;
  #L4de2c6.  v9:= v7.`x2.h0.V` @type ^`long` @kind wide;
  #L4de2ca.  call `b0`(v5, v9) @signature `Lx2/m0;.b0:(J)V` @kind virtual;
  #L4de2d0.  v4:= v4 + 1;
  #L4de2d4.  goto L4de2be;
  #L4de2d6.  v7.`x2.h0.V` @type ^`long` := v2 @kind wide;
  #L4de2da.  call temp:= `M`(v26) @signature `Lx2/h0;.M:()I` @kind direct;
  #L4de2e0.  v0:= temp;
  #L4de2e2.  v7.`x2.h0.X` @type ^`int` := v0;
  #L4de2e6.  v0:= v7.`x2.h0.y` @type ^`r3.h0` @kind object;
  #L4de2ea.  v1:= v7.`x2.h0.r` @type ^`r3.g0` @kind object;
  #L4de2ee.  v2:= v7.`x2.h0.P` @type ^`int`;
  #L4de2f2.  call temp:= `d`(v1, v2) @signature `Lr3/g0;.d:(I)I` @kind interface;
  #L4de2f8.  v1:= temp;
  #L4de2fa.  call temp:= `n`(v0, v8, v7, v1) @signature `Lr3/h0;.n:(Lr3/h0$e;Lr3/h0$b;I)J` @kind virtual;
  #L4de300.  v13:= temp @kind wide;
  #L4de302.  call temp:= `f`(v8) @signature `Lx2/h0$a;.f:(Lx2/h0$a;)Lr3/p;` @kind static;
  #L4de308.  v12:= temp @kind object;
  #L4de30a.  v15:= v7.`x2.h0.s` @type ^`x2.b0$a` @kind object;
  #L4de30e.  v16:= new `x2.n`;
  #L4de312.  call temp:= `e`(v8) @signature `Lx2/h0$a;.e:(Lx2/h0$a;)J` @kind static;
  #L4de318.  v10:= temp @kind wide;
  #L4de31a.  v9:= v16 @kind object;
  #L4de31e.  call `<init>`(v9, v10, v12, v13) @signature `Lx2/n;.<init>:(JLr3/p;J)V` @kind direct;
  #L4de324.  v17:= 1I;
  #L4de328.  v18:= -1I;
  #L4de32c.  v19:= 0I;
  #L4de330.  v20:= 0I;
  #L4de334.  v21:= 0I;
  #L4de338.  call temp:= `g`(v8) @signature `Lx2/h0$a;.g:(Lx2/h0$a;)J` @kind static;
  #L4de33e.  v22:= temp @kind wide;
  #L4de340.  v0:= v7.`x2.h0.N` @type ^`long` @kind wide;
  #L4de344.  v24:= v0 @kind wide;
  #L4de348.  call `A`(v15, v16, v17, v18, v19, v20, v21, v22, v24) @signature `Lx2/b0$a;.A:(Lx2/n;IILv1/j1;ILjava/lang/Object;JJ)V` @kind virtual;
  #L4de34e.  return @kind void;
}
procedure `boolean` `k0`(`x2.h0` v1 @kind this) @signature `Lx2/h0;.k0:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4dd05c.  v0:= v1.`x2.h0.R` @type ^`boolean` @kind boolean;
  #L4dd060.  if v0 != 0 then goto L4dd076;
  #L4dd064.  call temp:= `P`(v1) @signature `Lx2/h0;.P:()Z` @kind direct;
  #L4dd06a.  v0:= temp;
  #L4dd06c.  if v0 == 0 then goto L4dd072;
  #L4dd070.  goto L4dd076;
  #L4dd072.  v0:= 0I;
  #L4dd074.  goto L4dd078;
  #L4dd076.  v0:= 1I;
  #L4dd078.  return v0;
}
procedure `void` `v`(`x2.h0` v0 @kind object) @signature `Lx2/h0;.v:(Lx2/h0;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L4dd860.  call `U`(v0) @signature `Lx2/h0;.U:()V` @kind direct;
  #L4dd866.  return @kind void;
}
procedure `void` `w`(`x2.h0` v0 @kind object) @signature `Lx2/h0;.w:(Lx2/h0;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L4dd878.  call `S`(v0) @signature `Lx2/h0;.S:()V` @kind direct;
  #L4dd87e.  return @kind void;
}
procedure `void` `x`(`x2.h0` v0 @kind object, `a2.a0` v1 @kind object) @signature `Lx2/h0;.x:(Lx2/h0;La2/a0;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L4dd890.  call `T`(v0, v1) @signature `Lx2/h0;.T:(La2/a0;)V` @kind direct;
  #L4dd896.  return @kind void;
}
procedure `void` `y`(`x2.h0` v0 @kind object) @signature `Lx2/h0;.y:(Lx2/h0;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L4dd8a8.  call `R`(v0) @signature `Lx2/h0;.R:()V` @kind direct;
  #L4dd8ae.  return @kind void;
}
procedure `java.lang.Runnable` `z`(`x2.h0` v0 @kind object) @signature `Lx2/h0;.z:(Lx2/h0;)Ljava/lang/Runnable;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4dd154.  v0:= v0.`x2.h0.C` @type ^`java.lang.Runnable` @kind object;
  #L4dd158.  return v0 @kind object;
}
procedure `a2.d0` `O`(`x2.h0` v3 @kind this) @signature `Lx2/h0;.O:()La2/d0;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4dcd54.  v0:= new `x2.h0$d`;
  #L4dcd58.  v1:= 0I;
  #L4dcd5a.  v2:= 1I;
  #L4dcd5c.  call `<init>`(v0, v1, v2) @signature `Lx2/h0$d;.<init>:(IZ)V` @kind direct;
  #L4dcd62.  call temp:= `d0`(v3, v0) @signature `Lx2/h0;.d0:(Lx2/h0$d;)La2/d0;` @kind direct;
  #L4dcd68.  v0:= temp @kind object;
  #L4dcd6a.  return v0 @kind object;
}
procedure `boolean` `Q`(`x2.h0` v1 @kind this, `int` v2 ) @signature `Lx2/h0;.Q:(I)Z` @AccessFlag  {
    temp;
    v0;

  #L4dcfd0.  call temp:= `k0`(v1) @signature `Lx2/h0;.k0:()Z` @kind direct;
  #L4dcfd6.  v0:= temp;
  #L4dcfd8.  if v0 != 0 then goto L4dcff8;
  #L4dcfdc.  v0:= v1.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dcfe0.  v2:= v0[v2] @kind object;
  #L4dcfe4.  v0:= v1.`x2.h0.Y` @type ^`boolean` @kind boolean;
  #L4dcfe8.  call temp:= `K`(v2, v0) @signature `Lx2/m0;.K:(Z)Z` @kind virtual;
  #L4dcfee.  v2:= temp;
  #L4dcff0.  if v2 == 0 then goto L4dcff8;
  #L4dcff4.  v2:= 1I;
  #L4dcff6.  goto L4dcffa;
  #L4dcff8.  v2:= 0I;
  #L4dcffa.  return v2;
}
procedure `void` `X`(`x2.h0` v3 @kind this) @signature `Lx2/h0;.X:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4dddb0.  v0:= v3.`x2.h0.y` @type ^`r3.h0` @kind object;
  #L4dddb4.  v1:= v3.`x2.h0.r` @type ^`r3.g0` @kind object;
  #L4dddb8.  v2:= v3.`x2.h0.P` @type ^`int`;
  #L4dddbc.  call temp:= `d`(v1, v2) @signature `Lr3/g0;.d:(I)I` @kind interface;
  #L4dddc2.  v1:= temp;
  #L4dddc4.  call `k`(v0, v1) @signature `Lr3/h0;.k:(I)V` @kind virtual;
  #L4dddca.  return @kind void;
}
procedure `void` `Y`(`x2.h0` v1 @kind this, `int` v2 ) @signature `Lx2/h0;.Y:(I)V` @AccessFlag  {
    temp;
    v0;

  #L4ddddc.  v0:= v1.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4ddde0.  v2:= v0[v2] @kind object;
  #L4ddde4.  call `N`(v2) @signature `Lx2/m0;.N:()V` @kind virtual;
  #L4dddea.  call `X`(v1) @signature `Lx2/h0;.X:()V` @kind virtual;
  #L4dddf0.  return @kind void;
}
procedure `boolean` `a`(`x2.h0` v1 @kind this) @signature `Lx2/h0;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dcf68.  v0:= v1.`x2.h0.y` @type ^`r3.h0` @kind object;
  #L4dcf6c.  call temp:= `j`(v0) @signature `Lr3/h0;.j:()Z` @kind virtual;
  #L4dcf72.  v0:= temp;
  #L4dcf74.  if v0 == 0 then goto L4dcf8c;
  #L4dcf78.  v0:= v1.`x2.h0.A` @type ^`s3.f` @kind object;
  #L4dcf7c.  call temp:= `d`(v0) @signature `Ls3/f;.d:()Z` @kind virtual;
  #L4dcf82.  v0:= temp;
  #L4dcf84.  if v0 == 0 then goto L4dcf8c;
  #L4dcf88.  v0:= 1I;
  #L4dcf8a.  goto L4dcf8e;
  #L4dcf8c.  v0:= 0I;
  #L4dcf8e.  return v0;
}
procedure `void` `a0`(`x2.h0` v15 @kind this, `x2.h0$a` v16 @kind object, `long` v17 , `long` v19 , `boolean` v21 ) @signature `Lx2/h0;.a0:(Lx2/h0$a;JJZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L4dde84.  v0:= v15 @kind object;
  #L4dde86.  call temp:= `d`(v16) @signature `Lx2/h0$a;.d:(Lx2/h0$a;)Lr3/o0;` @kind static;
  #L4dde8c.  v1:= temp @kind object;
  #L4dde8e.  v14:= new `x2.n`;
  #L4dde92.  call temp:= `e`(v16) @signature `Lx2/h0$a;.e:(Lx2/h0$a;)J` @kind static;
  #L4dde98.  v3:= temp @kind wide;
  #L4dde9a.  call temp:= `f`(v16) @signature `Lx2/h0$a;.f:(Lx2/h0$a;)Lr3/p;` @kind static;
  #L4ddea0.  v5:= temp @kind object;
  #L4ddea2.  call temp:= `s`(v1) @signature `Lr3/o0;.s:()Landroid/net/Uri;` @kind virtual;
  #L4ddea8.  v6:= temp @kind object;
  #L4ddeaa.  call temp:= `t`(v1) @signature `Lr3/o0;.t:()Ljava/util/Map;` @kind virtual;
  #L4ddeb0.  v7:= temp @kind object;
  #L4ddeb2.  call temp:= `r`(v1) @signature `Lr3/o0;.r:()J` @kind virtual;
  #L4ddeb8.  v12:= temp @kind wide;
  #L4ddeba.  v2:= v14 @kind object;
  #L4ddebc.  v8:= v17 @kind wide;
  #L4ddec0.  v10:= v19 @kind wide;
  #L4ddec4.  call `<init>`(v2, v3, v5, v6, v7, v8, v10, v12) @signature `Lx2/n;.<init>:(JLr3/p;Landroid/net/Uri;Ljava/util/Map;JJJ)V` @kind direct;
  #L4ddeca.  v1:= v0.`x2.h0.r` @type ^`r3.g0` @kind object;
  #L4ddece.  call temp:= `e`(v16) @signature `Lx2/h0$a;.e:(Lx2/h0$a;)J` @kind static;
  #L4dded4.  v2:= temp @kind wide;
  #L4dded6.  call `a`(v1, v2) @signature `Lr3/g0;.a:(J)V` @kind interface;
  #L4ddedc.  v2:= v0.`x2.h0.s` @type ^`x2.b0$a` @kind object;
  #L4ddee0.  call temp:= `g`(v16) @signature `Lx2/h0$a;.g:(Lx2/h0$a;)J` @kind static;
  #L4ddee6.  v9:= temp @kind wide;
  #L4ddee8.  v11:= v0.`x2.h0.N` @type ^`long` @kind wide;
  #L4ddeec.  v4:= 1I;
  #L4ddeee.  v5:= -1I;
  #L4ddef0.  v6:= 0I;
  #L4ddef2.  v7:= 0I;
  #L4ddef4.  v8:= 0I;
  #L4ddef6.  v3:= v14 @kind object;
  #L4ddef8.  call `r`(v2, v3, v4, v5, v6, v7, v8, v9, v11) @signature `Lx2/b0$a;.r:(Lx2/n;IILv1/j1;ILjava/lang/Object;JJ)V` @kind virtual;
  #L4ddefe.  if v21 != 0 then goto L4ddf3c;
  #L4ddf02.  v1:= v0.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4ddf06.  v2:= length @variable v1;
  #L4ddf08.  v3:= 0I;
  #L4ddf0a.  if v3 >= v2 then goto L4ddf1e;
  #L4ddf0e.  v4:= v1[v3] @kind object;
  #L4ddf12.  call `V`(v4) @signature `Lx2/m0;.V:()V` @kind virtual;
  #L4ddf18.  v3:= v3 + 1;
  #L4ddf1c.  goto L4ddf0a;
  #L4ddf1e.  v1:= v0.`x2.h0.S` @type ^`int`;
  #L4ddf22.  if v1 <= 0 then goto L4ddf3c;
  #L4ddf26.  v1:= v0.`x2.h0.E` @type ^`x2.r$a` @kind object;
  #L4ddf2a.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4ddf30.  v1:= temp @kind object;
  #L4ddf32.  v1:= (`x2.r$a`) v1 @kind object;
  #L4ddf36.  call `m`(v1, v15) @signature `Lx2/o0$a;.m:(Lx2/o0;)V` @kind interface;
  #L4ddf3c.  return @kind void;
}
procedure `void` `b`(`x2.h0` v1 @kind this, `v1.j1` v2 @kind object) @signature `Lx2/h0;.b:(Lv1/j1;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4de0a8.  v2:= v1.`x2.h0.D` @type ^`android.os.Handler` @kind object;
  #L4de0ac.  v0:= v1.`x2.h0.B` @type ^`java.lang.Runnable` @kind object;
  #L4de0b0.  call temp:= `post`(v2, v0) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L4de0b6.  return @kind void;
}
procedure `void` `b0`(`x2.h0` v16 @kind this, `x2.h0$a` v17 @kind object, `long` v18 , `long` v20 ) @signature `Lx2/h0;.b0:(Lx2/h0$a;JJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L4ddf6c.  v0:= v16 @kind object;
  #L4ddf70.  v1:= v0.`x2.h0.N` @type ^`long` @kind wide;
  #L4ddf74.  v3:= 1I;
  #L4ddf76.  v4:= -4.9E-324D;
  #L4ddf80.  v6:= lcmp(v1, v4);
  #L4ddf84.  if v6 != 0 then goto L4ddfca;
  #L4ddf88.  v1:= v0.`x2.h0.M` @type ^`a2.a0` @kind object;
  #L4ddf8c.  if v1 == 0 then goto L4ddfca;
  #L4ddf90.  call temp:= `f`(v1) @signature `La2/a0;.f:()Z` @kind interface;
  #L4ddf96.  v1:= temp;
  #L4ddf98.  call temp:= `N`(v0, v3) @signature `Lx2/h0;.N:(Z)J` @kind direct;
  #L4ddf9e.  v4:= temp @kind wide;
  #L4ddfa0.  v6:= -9223372036854775808L;
  #L4ddfa4.  v2:= lcmp(v4, v6);
  #L4ddfa8.  if v2 != 0 then goto L4ddfb2;
  #L4ddfac.  v4:= 0L;
  #L4ddfb0.  goto L4ddfb8;
  #L4ddfb2.  v6:= 10000L;
  #L4ddfb6.  v4:= v4 + v6 @kind long;
  #L4ddfb8.  v0.`x2.h0.N` @type ^`long` := v4 @kind wide;
  #L4ddfbc.  v2:= v0.`x2.h0.u` @type ^`x2.h0$b` @kind object;
  #L4ddfc0.  v6:= v0.`x2.h0.O` @type ^`boolean` @kind boolean;
  #L4ddfc4.  call `q`(v2, v4, v1, v6) @signature `Lx2/h0$b;.q:(JZZ)V` @kind interface;
  #L4ddfca.  call temp:= `d`(v17) @signature `Lx2/h0$a;.d:(Lx2/h0$a;)Lr3/o0;` @kind static;
  #L4ddfd0.  v1:= temp @kind object;
  #L4ddfd2.  v2:= new `x2.n`;
  #L4ddfd6.  call temp:= `e`(v17) @signature `Lx2/h0$a;.e:(Lx2/h0$a;)J` @kind static;
  #L4ddfdc.  v5:= temp @kind wide;
  #L4ddfde.  call temp:= `f`(v17) @signature `Lx2/h0$a;.f:(Lx2/h0$a;)Lr3/p;` @kind static;
  #L4ddfe4.  v7:= temp @kind object;
  #L4ddfe6.  call temp:= `s`(v1) @signature `Lr3/o0;.s:()Landroid/net/Uri;` @kind virtual;
  #L4ddfec.  v8:= temp @kind object;
  #L4ddfee.  call temp:= `t`(v1) @signature `Lr3/o0;.t:()Ljava/util/Map;` @kind virtual;
  #L4ddff4.  v9:= temp @kind object;
  #L4ddff6.  call temp:= `r`(v1) @signature `Lr3/o0;.r:()J` @kind virtual;
  #L4ddffc.  v14:= temp @kind wide;
  #L4ddffe.  v4:= v2 @kind object;
  #L4de000.  v10:= v18 @kind wide;
  #L4de004.  v12:= v20 @kind wide;
  #L4de008.  call `<init>`(v4, v5, v7, v8, v9, v10, v12, v14) @signature `Lx2/n;.<init>:(JLr3/p;Landroid/net/Uri;Ljava/util/Map;JJJ)V` @kind direct;
  #L4de00e.  v1:= v0.`x2.h0.r` @type ^`r3.g0` @kind object;
  #L4de012.  call temp:= `e`(v17) @signature `Lx2/h0$a;.e:(Lx2/h0$a;)J` @kind static;
  #L4de018.  v4:= temp @kind wide;
  #L4de01a.  call `a`(v1, v4) @signature `Lr3/g0;.a:(J)V` @kind interface;
  #L4de020.  v4:= v0.`x2.h0.s` @type ^`x2.b0$a` @kind object;
  #L4de024.  v6:= 1I;
  #L4de026.  v7:= -1I;
  #L4de028.  v8:= 0I;
  #L4de02a.  v9:= 0I;
  #L4de02c.  v10:= 0I;
  #L4de02e.  call temp:= `g`(v17) @signature `Lx2/h0$a;.g:(Lx2/h0$a;)J` @kind static;
  #L4de034.  v11:= temp @kind wide;
  #L4de036.  v13:= v0.`x2.h0.N` @type ^`long` @kind wide;
  #L4de03a.  v5:= v2 @kind object;
  #L4de03c.  call `u`(v4, v5, v6, v7, v8, v9, v10, v11, v13) @signature `Lx2/b0$a;.u:(Lx2/n;IILv1/j1;ILjava/lang/Object;JJ)V` @kind virtual;
  #L4de042.  v0.`x2.h0.Y` @type ^`boolean` := v3 @kind boolean;
  #L4de046.  v1:= v0.`x2.h0.E` @type ^`x2.r$a` @kind object;
  #L4de04a.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4de050.  v1:= temp @kind object;
  #L4de052.  v1:= (`x2.r$a`) v1 @kind object;
  #L4de056.  call `m`(v1, v0) @signature `Lx2/o0$a;.m:(Lx2/o0;)V` @kind interface;
  #L4de05c.  return @kind void;
}
procedure `long` `c`(`x2.h0` v9 @kind this, `long` v10 , `v1.w2` v12 @kind object) @signature `Lx2/h0;.c:(JLv1/w2;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4dd204.  call `J`(v9) @signature `Lx2/h0;.J:()V` @kind direct;
  #L4dd20a.  v0:= v9.`x2.h0.M` @type ^`a2.a0` @kind object;
  #L4dd20e.  call temp:= `f`(v0) @signature `La2/a0;.f:()Z` @kind interface;
  #L4dd214.  v0:= temp;
  #L4dd216.  if v0 != 0 then goto L4dd220;
  #L4dd21a.  v10:= 0L;
  #L4dd21e.  return v10 @kind wide;
  #L4dd220.  v0:= v9.`x2.h0.M` @type ^`a2.a0` @kind object;
  #L4dd224.  call temp:= `h`(v0, v10) @signature `La2/a0;.h:(J)La2/a0$a;` @kind interface;
  #L4dd22a.  v0:= temp @kind object;
  #L4dd22c.  v1:= v0.`a2.a0$a.a` @type ^`a2.b0` @kind object;
  #L4dd230.  v5:= v1.`a2.b0.a` @type ^`long` @kind wide;
  #L4dd234.  v0:= v0.`a2.a0$a.b` @type ^`a2.b0` @kind object;
  #L4dd238.  v7:= v0.`a2.b0.a` @type ^`long` @kind wide;
  #L4dd23c.  v2:= v12 @kind object;
  #L4dd23e.  v3:= v10 @kind wide;
  #L4dd240.  call temp:= `a`(v2, v3, v5, v7) @signature `Lv1/w2;.a:(JJJ)J` @kind virtual;
  #L4dd246.  v10:= temp @kind wide;
  #L4dd248.  return v10 @kind wide;
}
procedure `r3.h0$c` `c0`(`x2.h0` v25 @kind this, `x2.h0$a` v26 @kind object, `long` v27 , `long` v29 , `java.io.IOException` v31 @kind object, `int` v32 ) @signature `Lx2/h0;.c0:(Lx2/h0$a;JJLjava/io/IOException;I)Lr3/h0$c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;

  #L4dd6f0.  v0:= v25 @kind object;
  #L4dd6f4.  call temp:= `d`(v26) @signature `Lx2/h0$a;.d:(Lx2/h0$a;)Lr3/o0;` @kind static;
  #L4dd6fa.  v1:= temp @kind object;
  #L4dd6fc.  v14:= new `x2.n`;
  #L4dd700.  call temp:= `e`(v26) @signature `Lx2/h0$a;.e:(Lx2/h0$a;)J` @kind static;
  #L4dd706.  v3:= temp @kind wide;
  #L4dd708.  call temp:= `f`(v26) @signature `Lx2/h0$a;.f:(Lx2/h0$a;)Lr3/p;` @kind static;
  #L4dd70e.  v5:= temp @kind object;
  #L4dd710.  call temp:= `s`(v1) @signature `Lr3/o0;.s:()Landroid/net/Uri;` @kind virtual;
  #L4dd716.  v6:= temp @kind object;
  #L4dd718.  call temp:= `t`(v1) @signature `Lr3/o0;.t:()Ljava/util/Map;` @kind virtual;
  #L4dd71e.  v7:= temp @kind object;
  #L4dd720.  call temp:= `r`(v1) @signature `Lr3/o0;.r:()J` @kind virtual;
  #L4dd726.  v12:= temp @kind wide;
  #L4dd728.  v2:= v14 @kind object;
  #L4dd72a.  v8:= v27 @kind wide;
  #L4dd72e.  v10:= v29 @kind wide;
  #L4dd732.  call `<init>`(v2, v3, v5, v6, v7, v8, v10, v12) @signature `Lx2/n;.<init>:(JLr3/p;Landroid/net/Uri;Ljava/util/Map;JJJ)V` @kind direct;
  #L4dd738.  v1:= new `x2.q`;
  #L4dd73c.  call temp:= `g`(v26) @signature `Lx2/h0$a;.g:(Lx2/h0$a;)J` @kind static;
  #L4dd742.  v2:= temp @kind wide;
  #L4dd744.  call temp:= `X0`(v2) @signature `Ls3/l0;.X0:(J)J` @kind static;
  #L4dd74a.  v21:= temp @kind wide;
  #L4dd74c.  v2:= v0.`x2.h0.N` @type ^`long` @kind wide;
  #L4dd750.  call temp:= `X0`(v2) @signature `Ls3/l0;.X0:(J)J` @kind static;
  #L4dd756.  v23:= temp @kind wide;
  #L4dd758.  v16:= 1I;
  #L4dd75c.  v17:= -1I;
  #L4dd760.  v18:= 0I;
  #L4dd764.  v19:= 0I;
  #L4dd768.  v20:= 0I;
  #L4dd76c.  v15:= v1 @kind object;
  #L4dd76e.  call `<init>`(v15, v16, v17, v18, v19, v20, v21, v23) @signature `Lx2/q;.<init>:(IILv1/j1;ILjava/lang/Object;JJ)V` @kind direct;
  #L4dd774.  v2:= v0.`x2.h0.r` @type ^`r3.g0` @kind object;
  #L4dd778.  v3:= new `r3.g0$c`;
  #L4dd77c.  v13:= v31 @kind object;
  #L4dd780.  v4:= v32;
  #L4dd784.  call `<init>`(v3, v14, v1, v13, v4) @signature `Lr3/g0$c;.<init>:(Lx2/n;Lx2/q;Ljava/io/IOException;I)V` @kind direct;
  #L4dd78a.  call temp:= `c`(v2, v3) @signature `Lr3/g0;.c:(Lr3/g0$c;)J` @kind interface;
  #L4dd790.  v1:= temp @kind wide;
  #L4dd792.  v3:= 1I;
  #L4dd794.  v4:= -4.9E-324D;
  #L4dd79e.  v6:= lcmp(v1, v4);
  #L4dd7a2.  if v6 != 0 then goto L4dd7b0;
  #L4dd7a6.  v1:= `@@r3.h0.f` @type ^`r3.h0$c` @kind object;
  #L4dd7aa.  v15:= v26 @kind object;
  #L4dd7ae.  goto L4dd7e8;
  #L4dd7b0.  call temp:= `M`(v25) @signature `Lx2/h0;.M:()I` @kind direct;
  #L4dd7b6.  v4:= temp;
  #L4dd7b8.  v5:= v0.`x2.h0.X` @type ^`int`;
  #L4dd7bc.  if v4 <= v5 then goto L4dd7c8;
  #L4dd7c0.  v15:= v26 @kind object;
  #L4dd7c4.  v5:= 1I;
  #L4dd7c6.  goto L4dd7ce;
  #L4dd7c8.  v5:= 0I;
  #L4dd7ca.  v15:= v26 @kind object;
  #L4dd7ce.  call temp:= `K`(v0, v15, v4) @signature `Lx2/h0;.K:(Lx2/h0$a;I)Z` @kind direct;
  #L4dd7d4.  v4:= temp;
  #L4dd7d6.  if v4 == 0 then goto L4dd7e4;
  #L4dd7da.  call temp:= `h`(v5, v1) @signature `Lr3/h0;.h:(ZJ)Lr3/h0$c;` @kind static;
  #L4dd7e0.  v1:= temp @kind object;
  #L4dd7e2.  goto L4dd7e8;
  #L4dd7e4.  v1:= `@@r3.h0.e` @type ^`r3.h0$c` @kind object;
  #L4dd7e8.  call temp:= `c`(v1) @signature `Lr3/h0$c;.c:()Z` @kind virtual;
  #L4dd7ee.  v2:= temp;
  #L4dd7f0.  v16:= v2 ^~ 1;
  #L4dd7f4.  v2:= v0.`x2.h0.s` @type ^`x2.b0$a` @kind object;
  #L4dd7f8.  v4:= 1I;
  #L4dd7fa.  v5:= -1I;
  #L4dd7fc.  v6:= 0I;
  #L4dd7fe.  v7:= 0I;
  #L4dd800.  v8:= 0I;
  #L4dd802.  call temp:= `g`(v26) @signature `Lx2/h0$a;.g:(Lx2/h0$a;)J` @kind static;
  #L4dd808.  v9:= temp @kind wide;
  #L4dd80a.  v11:= v0.`x2.h0.N` @type ^`long` @kind wide;
  #L4dd80e.  v3:= v14 @kind object;
  #L4dd810.  v13:= v31 @kind object;
  #L4dd814.  v14:= v16;
  #L4dd818.  call `w`(v2, v3, v4, v5, v6, v7, v8, v9, v11, v13, v14) @signature `Lx2/b0$a;.w:(Lx2/n;IILv1/j1;ILjava/lang/Object;JJLjava/io/IOException;Z)V` @kind virtual;
  #L4dd81e.  if v16 == 0 then goto L4dd834;
  #L4dd822.  v2:= v0.`x2.h0.r` @type ^`r3.g0` @kind object;
  #L4dd826.  call temp:= `e`(v26) @signature `Lx2/h0$a;.e:(Lx2/h0$a;)J` @kind static;
  #L4dd82c.  v3:= temp @kind wide;
  #L4dd82e.  call `a`(v2, v3) @signature `Lr3/g0;.a:(J)V` @kind interface;
  #L4dd834.  return v1 @kind object;
}
procedure `long` `d`(`x2.h0` v2 @kind this) @signature `Lx2/h0;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dd38c.  call temp:= `f`(v2) @signature `Lx2/h0;.f:()J` @kind virtual;
  #L4dd392.  v0:= temp @kind wide;
  #L4dd394.  return v0 @kind wide;
}
procedure `a2.d0` `e`(`x2.h0` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lx2/h0;.e:(II)La2/d0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dce24.  v3:= new `x2.h0$d`;
  #L4dce28.  v0:= 0I;
  #L4dce2a.  call `<init>`(v3, v2, v0) @signature `Lx2/h0$d;.<init>:(IZ)V` @kind direct;
  #L4dce30.  call temp:= `d0`(v1, v3) @signature `Lx2/h0;.d0:(Lx2/h0$d;)La2/d0;` @kind direct;
  #L4dce36.  v2:= temp @kind object;
  #L4dce38.  return v2 @kind object;
}
procedure `int` `e0`(`x2.h0` v3 @kind this, `int` v4 , `v1.k1` v5 @kind object, `y1.g` v6 @kind object, `int` v7 ) @signature `Lx2/h0;.e0:(ILv1/k1;Ly1/g;I)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4dd0c0.  call temp:= `k0`(v3) @signature `Lx2/h0;.k0:()Z` @kind direct;
  #L4dd0c6.  v0:= temp;
  #L4dd0c8.  v1:= -3I;
  #L4dd0ca.  if v0 == 0 then goto L4dd0d0;
  #L4dd0ce.  return v1;
  #L4dd0d0.  call `V`(v3, v4) @signature `Lx2/h0;.V:(I)V` @kind direct;
  #L4dd0d6.  v0:= v3.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd0da.  v0:= v0[v4] @kind object;
  #L4dd0de.  v2:= v3.`x2.h0.Y` @type ^`boolean` @kind boolean;
  #L4dd0e2.  call temp:= `S`(v0, v5, v6, v7, v2) @signature `Lx2/m0;.S:(Lv1/k1;Ly1/g;IZ)I` @kind virtual;
  #L4dd0e8.  v5:= temp;
  #L4dd0ea.  if v5 != v1 then goto L4dd0f4;
  #L4dd0ee.  call `W`(v3, v4) @signature `Lx2/h0;.W:(I)V` @kind direct;
  #L4dd0f4.  return v5;
}
procedure `long` `f`(`x2.h0` v11 @kind this) @signature `Lx2/h0;.f:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4dd25c.  call `J`(v11) @signature `Lx2/h0;.J:()V` @kind direct;
  #L4dd262.  v0:= v11.`x2.h0.Y` @type ^`boolean` @kind boolean;
  #L4dd266.  v1:= -9223372036854775808L;
  #L4dd26a.  if v0 != 0 then goto L4dd31a;
  #L4dd26e.  v0:= v11.`x2.h0.S` @type ^`int`;
  #L4dd272.  if v0 != 0 then goto L4dd278;
  #L4dd276.  goto L4dd31a;
  #L4dd278.  call temp:= `P`(v11) @signature `Lx2/h0;.P:()Z` @kind direct;
  #L4dd27e.  v0:= temp;
  #L4dd280.  if v0 == 0 then goto L4dd28a;
  #L4dd284.  v0:= v11.`x2.h0.V` @type ^`long` @kind wide;
  #L4dd288.  return v0 @kind wide;
  #L4dd28a.  v0:= v11.`x2.h0.K` @type ^`boolean` @kind boolean;
  #L4dd28e.  v3:= 0I;
  #L4dd290.  v4:= 9223372036854775807L;
  #L4dd29a.  if v0 == 0 then goto L4dd2fa;
  #L4dd29e.  v0:= v11.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd2a2.  v0:= length @variable v0;
  #L4dd2a4.  v7:= v4 @kind wide;
  #L4dd2a6.  v6:= 0I;
  #L4dd2a8.  if v6 >= v0 then goto L4dd2fc;
  #L4dd2ac.  v9:= v11.`x2.h0.L` @type ^`x2.h0$e` @kind object;
  #L4dd2b0.  v10:= v9.`x2.h0$e.b` @type ^`boolean`[] @kind object;
  #L4dd2b4.  v10:= v10[v6] @kind boolean;
  #L4dd2b8.  if v10 == 0 then goto L4dd2f4;
  #L4dd2bc.  v9:= v9.`x2.h0$e.c` @type ^`boolean`[] @kind object;
  #L4dd2c0.  v9:= v9[v6] @kind boolean;
  #L4dd2c4.  if v9 == 0 then goto L4dd2f4;
  #L4dd2c8.  v9:= v11.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd2cc.  v9:= v9[v6] @kind object;
  #L4dd2d0.  call temp:= `J`(v9) @signature `Lx2/m0;.J:()Z` @kind virtual;
  #L4dd2d6.  v9:= temp;
  #L4dd2d8.  if v9 != 0 then goto L4dd2f4;
  #L4dd2dc.  v9:= v11.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd2e0.  v9:= v9[v6] @kind object;
  #L4dd2e4.  call temp:= `z`(v9) @signature `Lx2/m0;.z:()J` @kind virtual;
  #L4dd2ea.  v9:= temp @kind wide;
  #L4dd2ec.  call temp:= `min`(v7, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L4dd2f2.  v7:= temp @kind wide;
  #L4dd2f4.  v6:= v6 + 1;
  #L4dd2f8.  goto L4dd2a8;
  #L4dd2fa.  v7:= v4 @kind wide;
  #L4dd2fc.  v0:= lcmp(v7, v4);
  #L4dd300.  if v0 != 0 then goto L4dd30c;
  #L4dd304.  call temp:= `N`(v11, v3) @signature `Lx2/h0;.N:(Z)J` @kind direct;
  #L4dd30a.  v7:= temp @kind wide;
  #L4dd30c.  v0:= lcmp(v7, v1);
  #L4dd310.  if v0 != 0 then goto L4dd318;
  #L4dd314.  v7:= v11.`x2.h0.U` @type ^`long` @kind wide;
  #L4dd318.  return v7 @kind wide;
  #L4dd31a.  return v1 @kind wide;
}
procedure `void` `f0`(`x2.h0` v4 @kind this) @signature `Lx2/h0;.f0:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4de104.  v0:= v4.`x2.h0.J` @type ^`boolean` @kind boolean;
  #L4de108.  if v0 == 0 then goto L4de128;
  #L4de10c.  v0:= v4.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4de110.  v1:= length @variable v0;
  #L4de112.  v2:= 0I;
  #L4de114.  if v2 >= v1 then goto L4de128;
  #L4de118.  v3:= v0[v2] @kind object;
  #L4de11c.  call `R`(v3) @signature `Lx2/m0;.R:()V` @kind virtual;
  #L4de122.  v2:= v2 + 1;
  #L4de126.  goto L4de114;
  #L4de128.  v0:= v4.`x2.h0.y` @type ^`r3.h0` @kind object;
  #L4de12c.  call `m`(v0, v4) @signature `Lr3/h0;.m:(Lr3/h0$f;)V` @kind virtual;
  #L4de132.  v0:= v4.`x2.h0.D` @type ^`android.os.Handler` @kind object;
  #L4de136.  v1:= 0I;
  #L4de138.  call `removeCallbacksAndMessages`(v0, v1) @signature `Landroid/os/Handler;.removeCallbacksAndMessages:(Ljava/lang/Object;)V` @kind virtual;
  #L4de13e.  v4.`x2.h0.E` @type ^`x2.r$a` := v1 @kind object;
  #L4de142.  v0:= 1I;
  #L4de144.  v4.`x2.h0.Z` @type ^`boolean` := v0 @kind boolean;
  #L4de148.  return @kind void;
}
procedure `boolean` `g`(`x2.h0` v0 @kind this, `long` v1 ) @signature `Lx2/h0;.g:(J)Z` @AccessFlag PUBLIC {
    temp;

  #L4dcefc.  v1:= v0.`x2.h0.Y` @type ^`boolean` @kind boolean;
  #L4dcf00.  if v1 != 0 then goto L4dcf54;
  #L4dcf04.  v1:= v0.`x2.h0.y` @type ^`r3.h0` @kind object;
  #L4dcf08.  call temp:= `i`(v1) @signature `Lr3/h0;.i:()Z` @kind virtual;
  #L4dcf0e.  v1:= temp;
  #L4dcf10.  if v1 != 0 then goto L4dcf54;
  #L4dcf14.  v1:= v0.`x2.h0.W` @type ^`boolean` @kind boolean;
  #L4dcf18.  if v1 != 0 then goto L4dcf54;
  #L4dcf1c.  v1:= v0.`x2.h0.J` @type ^`boolean` @kind boolean;
  #L4dcf20.  if v1 == 0 then goto L4dcf2e;
  #L4dcf24.  v1:= v0.`x2.h0.S` @type ^`int`;
  #L4dcf28.  if v1 != 0 then goto L4dcf2e;
  #L4dcf2c.  goto L4dcf54;
  #L4dcf2e.  v1:= v0.`x2.h0.A` @type ^`s3.f` @kind object;
  #L4dcf32.  call temp:= `e`(v1) @signature `Ls3/f;.e:()Z` @kind virtual;
  #L4dcf38.  v1:= temp;
  #L4dcf3a.  v2:= v0.`x2.h0.y` @type ^`r3.h0` @kind object;
  #L4dcf3e.  call temp:= `j`(v2) @signature `Lr3/h0;.j:()Z` @kind virtual;
  #L4dcf44.  v2:= temp;
  #L4dcf46.  if v2 != 0 then goto L4dcf52;
  #L4dcf4a.  call `j0`(v0) @signature `Lx2/h0;.j0:()V` @kind direct;
  #L4dcf50.  v1:= 1I;
  #L4dcf52.  return v1;
  #L4dcf54.  v1:= 0I;
  #L4dcf56.  return v1;
}
procedure `void` `h`(`x2.h0` v2 @kind this) @signature `Lx2/h0;.h:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dda60.  v0:= 1I;
  #L4dda62.  v2.`x2.h0.I` @type ^`boolean` := v0 @kind boolean;
  #L4dda66.  v0:= v2.`x2.h0.D` @type ^`android.os.Handler` @kind object;
  #L4dda6a.  v1:= v2.`x2.h0.B` @type ^`java.lang.Runnable` @kind object;
  #L4dda6e.  call temp:= `post`(v0, v1) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L4dda74.  return @kind void;
}
procedure `void` `i`(`x2.h0` v0 @kind this, `long` v1 ) @signature `Lx2/h0;.i:(J)V` @AccessFlag PUBLIC {
    temp;

  #L4de0f0.  return @kind void;
}
procedure `int` `i0`(`x2.h0` v2 @kind this, `int` v3 , `long` v4 ) @signature `Lx2/h0;.i0:(IJ)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4dd108.  call temp:= `k0`(v2) @signature `Lx2/h0;.k0:()Z` @kind direct;
  #L4dd10e.  v0:= temp;
  #L4dd110.  if v0 == 0 then goto L4dd118;
  #L4dd114.  v3:= 0I;
  #L4dd116.  return v3;
  #L4dd118.  call `V`(v2, v3) @signature `Lx2/h0;.V:(I)V` @kind direct;
  #L4dd11e.  v0:= v2.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd122.  v0:= v0[v3] @kind object;
  #L4dd126.  v1:= v2.`x2.h0.Y` @type ^`boolean` @kind boolean;
  #L4dd12a.  call temp:= `E`(v0, v4, v1) @signature `Lx2/m0;.E:(JZ)I` @kind virtual;
  #L4dd130.  v4:= temp;
  #L4dd132.  call `e0`(v0, v4) @signature `Lx2/m0;.e0:(I)V` @kind virtual;
  #L4dd138.  if v4 != 0 then goto L4dd142;
  #L4dd13c.  call `W`(v2, v3) @signature `Lx2/h0;.W:(I)V` @kind direct;
  #L4dd142.  return v4;
}
procedure `void` `j`(`x2.h0` v4 @kind this) @signature `Lx2/h0;.j:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4de070.  v0:= v4.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4de074.  v1:= length @variable v0;
  #L4de076.  v2:= 0I;
  #L4de078.  if v2 >= v1 then goto L4de08c;
  #L4de07c.  v3:= v0[v2] @kind object;
  #L4de080.  call `T`(v3) @signature `Lx2/m0;.T:()V` @kind virtual;
  #L4de086.  v2:= v2 + 1;
  #L4de08a.  goto L4de078;
  #L4de08c.  v0:= v4.`x2.h0.z` @type ^`x2.c0` @kind object;
  #L4de090.  call `a`(v0) @signature `Lx2/c0;.a:()V` @kind interface;
  #L4de096.  return @kind void;
}
procedure `long` `k`(`x2.h0` v8 @kind this, `q3.s`[] v9 @kind object, `boolean`[] v10 @kind object, `x2.n0`[] v11 @kind object, `boolean`[] v12 @kind object, `long` v13 ) @signature `Lx2/h0;.k:([Lq3/s;[Z[Lx2/n0;[ZJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4dd4c0.  call `J`(v8) @signature `Lx2/h0;.J:()V` @kind direct;
  #L4dd4c6.  v0:= v8.`x2.h0.L` @type ^`x2.h0$e` @kind object;
  #L4dd4ca.  v1:= v0.`x2.h0$e.a` @type ^`x2.v0` @kind object;
  #L4dd4ce.  v0:= v0.`x2.h0$e.c` @type ^`boolean`[] @kind object;
  #L4dd4d2.  v2:= v8.`x2.h0.S` @type ^`int`;
  #L4dd4d6.  v3:= 0I;
  #L4dd4d8.  v4:= 0I;
  #L4dd4da.  v5:= length @variable v9;
  #L4dd4dc.  v6:= 1I;
  #L4dd4de.  if v4 >= v5 then goto L4dd52e;
  #L4dd4e2.  v5:= v11[v4] @kind object;
  #L4dd4e6.  if v5 == 0 then goto L4dd528;
  #L4dd4ea.  v5:= v9[v4] @kind object;
  #L4dd4ee.  if v5 == 0 then goto L4dd4fa;
  #L4dd4f2.  v5:= v10[v4] @kind boolean;
  #L4dd4f6.  if v5 != 0 then goto L4dd528;
  #L4dd4fa.  v5:= v11[v4] @kind object;
  #L4dd4fe.  v5:= (`x2.h0$c`) v5 @kind object;
  #L4dd502.  call temp:= `a`(v5) @signature `Lx2/h0$c;.a:(Lx2/h0$c;)I` @kind static;
  #L4dd508.  v5:= temp;
  #L4dd50a.  v7:= v0[v5] @kind boolean;
  #L4dd50e.  call `f`(v7) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4dd514.  v7:= v8.`x2.h0.S` @type ^`int`;
  #L4dd518.  v7:= v7 - v6 @kind int;
  #L4dd51a.  v8.`x2.h0.S` @type ^`int` := v7;
  #L4dd51e.  v0[v5]:= v3 @kind boolean;
  #L4dd522.  v5:= 0I;
  #L4dd524.  v11[v4]:= v5 @kind object;
  #L4dd528.  v4:= v4 + 1;
  #L4dd52c.  goto L4dd4da;
  #L4dd52e.  v10:= v8.`x2.h0.Q` @type ^`boolean` @kind boolean;
  #L4dd532.  if v10 == 0 then goto L4dd53c;
  #L4dd536.  if v2 != 0 then goto L4dd54c;
  #L4dd53a.  goto L4dd548;
  #L4dd53c.  v4:= 0L;
  #L4dd540.  v10:= lcmp(v13, v4);
  #L4dd544.  if v10 == 0 then goto L4dd54c;
  #L4dd548.  v10:= 1I;
  #L4dd54a.  goto L4dd54e;
  #L4dd54c.  v10:= 0I;
  #L4dd54e.  v2:= 0I;
  #L4dd550.  v4:= length @variable v9;
  #L4dd552.  if v2 >= v4 then goto L4dd606;
  #L4dd556.  v4:= v11[v2] @kind object;
  #L4dd55a.  if v4 != 0 then goto L4dd600;
  #L4dd55e.  v4:= v9[v2] @kind object;
  #L4dd562.  if v4 == 0 then goto L4dd600;
  #L4dd566.  v4:= v9[v2] @kind object;
  #L4dd56a.  call temp:= `length`(v4) @signature `Lq3/v;.length:()I` @kind interface;
  #L4dd570.  v5:= temp;
  #L4dd572.  if v5 != v6 then goto L4dd57a;
  #L4dd576.  v5:= 1I;
  #L4dd578.  goto L4dd57c;
  #L4dd57a.  v5:= 0I;
  #L4dd57c.  call `f`(v5) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4dd582.  call temp:= `b`(v4, v3) @signature `Lq3/v;.b:(I)I` @kind interface;
  #L4dd588.  v5:= temp;
  #L4dd58a.  if v5 != 0 then goto L4dd592;
  #L4dd58e.  v5:= 1I;
  #L4dd590.  goto L4dd594;
  #L4dd592.  v5:= 0I;
  #L4dd594.  call `f`(v5) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4dd59a.  call temp:= `c`(v4) @signature `Lq3/v;.c:()Lx2/t0;` @kind interface;
  #L4dd5a0.  v4:= temp @kind object;
  #L4dd5a2.  call temp:= `c`(v1, v4) @signature `Lx2/v0;.c:(Lx2/t0;)I` @kind virtual;
  #L4dd5a8.  v4:= temp;
  #L4dd5aa.  v5:= v0[v4] @kind boolean;
  #L4dd5ae.  v5:= v5 ^~ v6 @kind int;
  #L4dd5b0.  call `f`(v5) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4dd5b6.  v5:= v8.`x2.h0.S` @type ^`int`;
  #L4dd5ba.  v5:= v5 + v6 @kind int;
  #L4dd5bc.  v8.`x2.h0.S` @type ^`int` := v5;
  #L4dd5c0.  v0[v4]:= v6 @kind boolean;
  #L4dd5c4.  v5:= new `x2.h0$c`;
  #L4dd5c8.  call `<init>`(v5, v8, v4) @signature `Lx2/h0$c;.<init>:(Lx2/h0;I)V` @kind direct;
  #L4dd5ce.  v11[v2]:= v5 @kind object;
  #L4dd5d2.  v12[v2]:= v6 @kind boolean;
  #L4dd5d6.  if v10 != 0 then goto L4dd600;
  #L4dd5da.  v10:= v8.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd5de.  v10:= v10[v4] @kind object;
  #L4dd5e2.  call temp:= `Z`(v10, v13, v6) @signature `Lx2/m0;.Z:(JZ)Z` @kind virtual;
  #L4dd5e8.  v4:= temp;
  #L4dd5ea.  if v4 != 0 then goto L4dd5fe;
  #L4dd5ee.  call temp:= `C`(v10) @signature `Lx2/m0;.C:()I` @kind virtual;
  #L4dd5f4.  v10:= temp;
  #L4dd5f6.  if v10 == 0 then goto L4dd5fe;
  #L4dd5fa.  v10:= 1I;
  #L4dd5fc.  goto L4dd600;
  #L4dd5fe.  v10:= 0I;
  #L4dd600.  v2:= v2 + 1;
  #L4dd604.  goto L4dd550;
  #L4dd606.  v9:= v8.`x2.h0.S` @type ^`int`;
  #L4dd60a.  if v9 != 0 then goto L4dd666;
  #L4dd60e.  v8.`x2.h0.W` @type ^`boolean` := v3 @kind boolean;
  #L4dd612.  v8.`x2.h0.R` @type ^`boolean` := v3 @kind boolean;
  #L4dd616.  v9:= v8.`x2.h0.y` @type ^`r3.h0` @kind object;
  #L4dd61a.  call temp:= `j`(v9) @signature `Lr3/h0;.j:()Z` @kind virtual;
  #L4dd620.  v9:= temp;
  #L4dd622.  if v9 == 0 then goto L4dd64c;
  #L4dd626.  v9:= v8.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd62a.  v10:= length @variable v9;
  #L4dd62c.  if v3 >= v10 then goto L4dd640;
  #L4dd630.  v11:= v9[v3] @kind object;
  #L4dd634.  call `r`(v11) @signature `Lx2/m0;.r:()V` @kind virtual;
  #L4dd63a.  v3:= v3 + 1;
  #L4dd63e.  goto L4dd62c;
  #L4dd640.  v9:= v8.`x2.h0.y` @type ^`r3.h0` @kind object;
  #L4dd644.  call `f`(v9) @signature `Lr3/h0;.f:()V` @kind virtual;
  #L4dd64a.  goto L4dd68a;
  #L4dd64c.  v9:= v8.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd650.  v10:= length @variable v9;
  #L4dd652.  if v3 >= v10 then goto L4dd68a;
  #L4dd656.  v11:= v9[v3] @kind object;
  #L4dd65a.  call `V`(v11) @signature `Lx2/m0;.V:()V` @kind virtual;
  #L4dd660.  v3:= v3 + 1;
  #L4dd664.  goto L4dd652;
  #L4dd666.  if v10 == 0 then goto L4dd68a;
  #L4dd66a.  call temp:= `s`(v8, v13) @signature `Lx2/h0;.s:(J)J` @kind virtual;
  #L4dd670.  v13:= temp @kind wide;
  #L4dd672.  v9:= length @variable v11;
  #L4dd674.  if v3 >= v9 then goto L4dd68a;
  #L4dd678.  v9:= v11[v3] @kind object;
  #L4dd67c.  if v9 == 0 then goto L4dd684;
  #L4dd680.  v12[v3]:= v6 @kind boolean;
  #L4dd684.  v3:= v3 + 1;
  #L4dd688.  goto L4dd672;
  #L4dd68a.  v8.`x2.h0.Q` @type ^`boolean` := v6 @kind boolean;
  #L4dd68e.  return v13 @kind wide;
}
procedure `long` `l`(`x2.h0` v2 @kind this) @signature `Lx2/h0;.l:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dd3a8.  v0:= v2.`x2.h0.R` @type ^`boolean` @kind boolean;
  #L4dd3ac.  if v0 == 0 then goto L4dd3d4;
  #L4dd3b0.  v0:= v2.`x2.h0.Y` @type ^`boolean` @kind boolean;
  #L4dd3b4.  if v0 != 0 then goto L4dd3c8;
  #L4dd3b8.  call temp:= `M`(v2) @signature `Lx2/h0;.M:()I` @kind direct;
  #L4dd3be.  v0:= temp;
  #L4dd3c0.  v1:= v2.`x2.h0.X` @type ^`int`;
  #L4dd3c4.  if v0 <= v1 then goto L4dd3d4;
  #L4dd3c8.  v0:= 0I;
  #L4dd3ca.  v2.`x2.h0.R` @type ^`boolean` := v0 @kind boolean;
  #L4dd3ce.  v0:= v2.`x2.h0.U` @type ^`long` @kind wide;
  #L4dd3d2.  return v0 @kind wide;
  #L4dd3d4.  v0:= -4.9E-324D;
  #L4dd3de.  return v0 @kind wide;
}
procedure `void` `m`(`x2.h0` v2 @kind this, `a2.a0` v3 @kind object) @signature `Lx2/h0;.m:(La2/a0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4de15c.  v0:= v2.`x2.h0.D` @type ^`android.os.Handler` @kind object;
  #L4de160.  v1:= new `x2.g0`;
  #L4de164.  call `<init>`(v1, v2, v3) @signature `Lx2/g0;.<init>:(Lx2/h0;La2/a0;)V` @kind direct;
  #L4de16a.  call temp:= `post`(v0, v1) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L4de170.  return @kind void;
}
procedure `void` `n`(`x2.h0` v0 @kind this, `r3.h0$e` v1 @kind object, `long` v2 , `long` v4 , `boolean` v6 ) @signature `Lx2/h0;.n:(Lr3/h0$e;JJZ)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4dde68.  v1:= (`x2.h0$a`) v1 @kind object;
  #L4dde6c.  call `a0`(v0, v1, v2, v4, v6) @signature `Lx2/h0;.a0:(Lx2/h0$a;JJZ)V` @kind virtual;
  #L4dde72.  return @kind void;
}
procedure `x2.v0` `o`(`x2.h0` v1 @kind this) @signature `Lx2/h0;.o:()Lx2/v0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4de360.  call `J`(v1) @signature `Lx2/h0;.J:()V` @kind direct;
  #L4de366.  v0:= v1.`x2.h0.L` @type ^`x2.h0$e` @kind object;
  #L4de36a.  v0:= v0.`x2.h0$e.a` @type ^`x2.v0` @kind object;
  #L4de36e.  return v0 @kind object;
}
procedure `void` `p`(`x2.h0` v2 @kind this) @signature `Lx2/h0;.p:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dde04.  call `X`(v2) @signature `Lx2/h0;.X:()V` @kind virtual;
  #L4dde0a.  v0:= v2.`x2.h0.Y` @type ^`boolean` @kind boolean;
  #L4dde0e.  if v0 == 0 then goto L4dde2c;
  #L4dde12.  v0:= v2.`x2.h0.J` @type ^`boolean` @kind boolean;
  #L4dde16.  if v0 == 0 then goto L4dde1c;
  #L4dde1a.  goto L4dde2c;
  #L4dde1c.  v0:= 0I;
  #L4dde1e.  v1:= "Loading finished before preparation is complete." @kind object;
  #L4dde22.  call temp:= `a`(v1, v0) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L4dde28.  v0:= temp @kind object;
  #L4dde2a.  throw v0;
  #L4dde2c.  return @kind void;
}
procedure `void` `q`(`x2.h0` v0 @kind this, `x2.r$a` v1 @kind object, `long` v2 ) @signature `Lx2/h0;.q:(Lx2/r$a;J)V` @AccessFlag PUBLIC {
    temp;

  #L4de0c8.  v0.`x2.h0.E` @type ^`x2.r$a` := v1 @kind object;
  #L4de0cc.  v1:= v0.`x2.h0.A` @type ^`s3.f` @kind object;
  #L4de0d0.  call temp:= `e`(v1) @signature `Ls3/f;.e:()Z` @kind virtual;
  #L4de0d6.  call `j0`(v0) @signature `Lx2/h0;.j0:()V` @kind direct;
  #L4de0dc.  return @kind void;
}
procedure `void` `r`(`x2.h0` v5 @kind this, `long` v6 , `boolean` v8 ) @signature `Lx2/h0;.r:(JZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4dda0c.  call `J`(v5) @signature `Lx2/h0;.J:()V` @kind direct;
  #L4dda12.  call temp:= `P`(v5) @signature `Lx2/h0;.P:()Z` @kind direct;
  #L4dda18.  v0:= temp;
  #L4dda1a.  if v0 == 0 then goto L4dda20;
  #L4dda1e.  return @kind void;
  #L4dda20.  v0:= v5.`x2.h0.L` @type ^`x2.h0$e` @kind object;
  #L4dda24.  v0:= v0.`x2.h0$e.c` @type ^`boolean`[] @kind object;
  #L4dda28.  v1:= v5.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dda2c.  v1:= length @variable v1;
  #L4dda2e.  v2:= 0I;
  #L4dda30.  if v2 >= v1 then goto L4dda4c;
  #L4dda34.  v3:= v5.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dda38.  v3:= v3[v2] @kind object;
  #L4dda3c.  v4:= v0[v2] @kind boolean;
  #L4dda40.  call `q`(v3, v6, v8, v4) @signature `Lx2/m0;.q:(JZZ)V` @kind virtual;
  #L4dda46.  v2:= v2 + 1;
  #L4dda4a.  goto L4dda30;
  #L4dda4c.  return @kind void;
}
procedure `long` `s`(`x2.h0` v4 @kind this, `long` v5 ) @signature `Lx2/h0;.s:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4dd3f0.  call `J`(v4) @signature `Lx2/h0;.J:()V` @kind direct;
  #L4dd3f6.  v0:= v4.`x2.h0.L` @type ^`x2.h0$e` @kind object;
  #L4dd3fa.  v0:= v0.`x2.h0$e.b` @type ^`boolean`[] @kind object;
  #L4dd3fe.  v1:= v4.`x2.h0.M` @type ^`a2.a0` @kind object;
  #L4dd402.  call temp:= `f`(v1) @signature `La2/a0;.f:()Z` @kind interface;
  #L4dd408.  v1:= temp;
  #L4dd40a.  if v1 == 0 then goto L4dd410;
  #L4dd40e.  goto L4dd414;
  #L4dd410.  v5:= 0L;
  #L4dd414.  v1:= 0I;
  #L4dd416.  v4.`x2.h0.R` @type ^`boolean` := v1 @kind boolean;
  #L4dd41a.  v4.`x2.h0.U` @type ^`long` := v5 @kind wide;
  #L4dd41e.  call temp:= `P`(v4) @signature `Lx2/h0;.P:()Z` @kind direct;
  #L4dd424.  v2:= temp;
  #L4dd426.  if v2 == 0 then goto L4dd430;
  #L4dd42a.  v4.`x2.h0.V` @type ^`long` := v5 @kind wide;
  #L4dd42e.  return v5 @kind wide;
  #L4dd430.  v2:= v4.`x2.h0.P` @type ^`int`;
  #L4dd434.  v3:= 7I;
  #L4dd436.  if v2 == v3 then goto L4dd448;
  #L4dd43a.  call temp:= `g0`(v4, v0, v5) @signature `Lx2/h0;.g0:([ZJ)Z` @kind direct;
  #L4dd440.  v0:= temp;
  #L4dd442.  if v0 == 0 then goto L4dd448;
  #L4dd446.  return v5 @kind wide;
  #L4dd448.  v4.`x2.h0.W` @type ^`boolean` := v1 @kind boolean;
  #L4dd44c.  v4.`x2.h0.V` @type ^`long` := v5 @kind wide;
  #L4dd450.  v4.`x2.h0.Y` @type ^`boolean` := v1 @kind boolean;
  #L4dd454.  v0:= v4.`x2.h0.y` @type ^`r3.h0` @kind object;
  #L4dd458.  call temp:= `j`(v0) @signature `Lr3/h0;.j:()Z` @kind virtual;
  #L4dd45e.  v0:= temp;
  #L4dd460.  if v0 == 0 then goto L4dd48a;
  #L4dd464.  v0:= v4.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd468.  v2:= length @variable v0;
  #L4dd46a.  if v1 >= v2 then goto L4dd47e;
  #L4dd46e.  v3:= v0[v1] @kind object;
  #L4dd472.  call `r`(v3) @signature `Lx2/m0;.r:()V` @kind virtual;
  #L4dd478.  v1:= v1 + 1;
  #L4dd47c.  goto L4dd46a;
  #L4dd47e.  v0:= v4.`x2.h0.y` @type ^`r3.h0` @kind object;
  #L4dd482.  call `f`(v0) @signature `Lr3/h0;.f:()V` @kind virtual;
  #L4dd488.  goto L4dd4ae;
  #L4dd48a.  v0:= v4.`x2.h0.y` @type ^`r3.h0` @kind object;
  #L4dd48e.  call `g`(v0) @signature `Lr3/h0;.g:()V` @kind virtual;
  #L4dd494.  v0:= v4.`x2.h0.G` @type ^`x2.m0`[] @kind object;
  #L4dd498.  v2:= length @variable v0;
  #L4dd49a.  if v1 >= v2 then goto L4dd4ae;
  #L4dd49e.  v3:= v0[v1] @kind object;
  #L4dd4a2.  call `V`(v3) @signature `Lx2/m0;.V:()V` @kind virtual;
  #L4dd4a8.  v1:= v1 + 1;
  #L4dd4ac.  goto L4dd49a;
  #L4dd4ae.  return v5 @kind wide;
}
procedure `r3.h0$c` `t`(`x2.h0` v0 @kind this, `r3.h0$e` v1 @kind object, `long` v2 , `long` v4 , `java.io.IOException` v6 @kind object, `int` v7 ) @signature `Lx2/h0;.t:(Lr3/h0$e;JJLjava/io/IOException;I)Lr3/h0$c;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4dd6d0.  v1:= (`x2.h0$a`) v1 @kind object;
  #L4dd6d4.  call temp:= `c0`(v0, v1, v2, v4, v6, v7) @signature `Lx2/h0;.c0:(Lx2/h0$a;JJLjava/io/IOException;I)Lr3/h0$c;` @kind virtual;
  #L4dd6da.  v1:= temp @kind object;
  #L4dd6dc.  return v1 @kind object;
}
procedure `void` `u`(`x2.h0` v0 @kind this, `r3.h0$e` v1 @kind object, `long` v2 , `long` v4 ) @signature `Lx2/h0;.u:(Lr3/h0$e;JJ)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4ddf50.  v1:= (`x2.h0$a`) v1 @kind object;
  #L4ddf54.  call `b0`(v0, v1, v2, v4) @signature `Lx2/h0;.b0:(Lx2/h0$a;JJ)V` @kind virtual;
  #L4ddf5a.  return @kind void;
}
