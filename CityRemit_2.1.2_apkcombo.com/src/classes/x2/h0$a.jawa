record `x2.h0$a` @kind class @AccessFlag FINAL extends `r3.h0$e` @kind interface, `x2.m$a` @kind interface {
  `long` `x2.h0$a.a` @AccessFlag PRIVATE_FINAL;
  `android.net.Uri` `x2.h0$a.b` @AccessFlag PRIVATE_FINAL;
  `r3.o0` `x2.h0$a.c` @AccessFlag PRIVATE_FINAL;
  `x2.c0` `x2.h0$a.d` @AccessFlag PRIVATE_FINAL;
  `a2.n` `x2.h0$a.e` @AccessFlag PRIVATE_FINAL;
  `s3.f` `x2.h0$a.f` @AccessFlag PRIVATE_FINAL;
  `a2.z` `x2.h0$a.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `x2.h0$a.h` @AccessFlag PRIVATE_VOLATILE;
  `boolean` `x2.h0$a.i` @AccessFlag PRIVATE;
  `long` `x2.h0$a.j` @AccessFlag PRIVATE;
  `r3.p` `x2.h0$a.k` @AccessFlag PRIVATE;
  `a2.d0` `x2.h0$a.l` @AccessFlag PRIVATE;
  `boolean` `x2.h0$a.m` @AccessFlag PRIVATE;
  `x2.h0` `x2.h0$a.n` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x2.h0$a` v0 @kind this, `x2.h0` v1 @kind object, `android.net.Uri` v2 @kind object, `r3.l` v3 @kind object, `x2.c0` v4 @kind object, `a2.n` v5 @kind object, `s3.f` v6 @kind object) @signature `Lx2/h0$a;.<init>:(Lx2/h0;Landroid/net/Uri;Lr3/l;Lx2/c0;La2/n;Ls3/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4dc82c.  v0.`x2.h0$a.n` @type ^`x2.h0` := v1 @kind object;
  #L4dc830.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dc836.  v0.`x2.h0$a.b` @type ^`android.net.Uri` := v2 @kind object;
  #L4dc83a.  v1:= new `r3.o0`;
  #L4dc83e.  call `<init>`(v1, v3) @signature `Lr3/o0;.<init>:(Lr3/l;)V` @kind direct;
  #L4dc844.  v0.`x2.h0$a.c` @type ^`r3.o0` := v1 @kind object;
  #L4dc848.  v0.`x2.h0$a.d` @type ^`x2.c0` := v4 @kind object;
  #L4dc84c.  v0.`x2.h0$a.e` @type ^`a2.n` := v5 @kind object;
  #L4dc850.  v0.`x2.h0$a.f` @type ^`s3.f` := v6 @kind object;
  #L4dc854.  v1:= new `a2.z`;
  #L4dc858.  call `<init>`(v1) @signature `La2/z;.<init>:()V` @kind direct;
  #L4dc85e.  v0.`x2.h0$a.g` @type ^`a2.z` := v1 @kind object;
  #L4dc862.  v1:= 1I;
  #L4dc864.  v0.`x2.h0$a.i` @type ^`boolean` := v1 @kind boolean;
  #L4dc868.  call temp:= `a`() @signature `Lx2/n;.a:()J` @kind static;
  #L4dc86e.  v1:= temp @kind wide;
  #L4dc870.  v0.`x2.h0$a.a` @type ^`long` := v1 @kind wide;
  #L4dc874.  v1:= 0L;
  #L4dc878.  call temp:= `i`(v0, v1) @signature `Lx2/h0$a;.i:(J)Lr3/p;` @kind direct;
  #L4dc87e.  v1:= temp @kind object;
  #L4dc880.  v0.`x2.h0$a.k` @type ^`r3.p` := v1 @kind object;
  #L4dc884.  return @kind void;
}
procedure `r3.o0` `d`(`x2.h0$a` v0 @kind object) @signature `Lx2/h0$a;.d:(Lx2/h0$a;)Lr3/o0;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4dc814.  v0:= v0.`x2.h0$a.c` @type ^`r3.o0` @kind object;
  #L4dc818.  return v0 @kind object;
}
procedure `long` `e`(`x2.h0$a` v2 @kind object) @signature `Lx2/h0$a;.e:(Lx2/h0$a;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L4dc764.  v0:= v2.`x2.h0$a.a` @type ^`long` @kind wide;
  #L4dc768.  return v0 @kind wide;
}
procedure `r3.p` `f`(`x2.h0$a` v0 @kind object) @signature `Lx2/h0$a;.f:(Lx2/h0$a;)Lr3/p;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4dc794.  v0:= v0.`x2.h0$a.k` @type ^`r3.p` @kind object;
  #L4dc798.  return v0 @kind object;
}
procedure `long` `g`(`x2.h0$a` v2 @kind object) @signature `Lx2/h0$a;.g:(Lx2/h0$a;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L4dc77c.  v0:= v2.`x2.h0$a.j` @type ^`long` @kind wide;
  #L4dc780.  return v0 @kind wide;
}
procedure `void` `h`(`x2.h0$a` v0 @kind object, `long` v1 , `long` v3 ) @signature `Lx2/h0$a;.h:(Lx2/h0$a;JJ)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4dc898.  call `j`(v0, v1, v3) @signature `Lx2/h0$a;.j:(JJ)V` @kind direct;
  #L4dc89e.  return @kind void;
}
procedure `r3.p` `i`(`x2.h0$a` v2 @kind this, `long` v3 ) @signature `Lx2/h0$a;.i:(J)Lr3/p;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4dc7ac.  v0:= new `r3.p$b`;
  #L4dc7b0.  call `<init>`(v0) @signature `Lr3/p$b;.<init>:()V` @kind direct;
  #L4dc7b6.  v1:= v2.`x2.h0$a.b` @type ^`android.net.Uri` @kind object;
  #L4dc7ba.  call temp:= `i`(v0, v1) @signature `Lr3/p$b;.i:(Landroid/net/Uri;)Lr3/p$b;` @kind virtual;
  #L4dc7c0.  v0:= temp @kind object;
  #L4dc7c2.  call temp:= `h`(v0, v3) @signature `Lr3/p$b;.h:(J)Lr3/p$b;` @kind virtual;
  #L4dc7c8.  v3:= temp @kind object;
  #L4dc7ca.  v4:= v2.`x2.h0$a.n` @type ^`x2.h0` @kind object;
  #L4dc7ce.  call temp:= `D`(v4) @signature `Lx2/h0;.D:(Lx2/h0;)Ljava/lang/String;` @kind static;
  #L4dc7d4.  v4:= temp @kind object;
  #L4dc7d6.  call temp:= `f`(v3, v4) @signature `Lr3/p$b;.f:(Ljava/lang/String;)Lr3/p$b;` @kind virtual;
  #L4dc7dc.  v3:= temp @kind object;
  #L4dc7de.  v4:= 6I;
  #L4dc7e0.  call temp:= `b`(v3, v4) @signature `Lr3/p$b;.b:(I)Lr3/p$b;` @kind virtual;
  #L4dc7e6.  v3:= temp @kind object;
  #L4dc7e8.  call temp:= `C`() @signature `Lx2/h0;.C:()Ljava/util/Map;` @kind static;
  #L4dc7ee.  v4:= temp @kind object;
  #L4dc7f0.  call temp:= `e`(v3, v4) @signature `Lr3/p$b;.e:(Ljava/util/Map;)Lr3/p$b;` @kind virtual;
  #L4dc7f6.  v3:= temp @kind object;
  #L4dc7f8.  call temp:= `a`(v3) @signature `Lr3/p$b;.a:()Lr3/p;` @kind virtual;
  #L4dc7fe.  v3:= temp @kind object;
  #L4dc800.  return v3 @kind object;
}
procedure `void` `j`(`x2.h0$a` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lx2/h0$a;.j:(JJ)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4dcb9c.  v0:= v1.`x2.h0$a.g` @type ^`a2.z` @kind object;
  #L4dcba0.  v0.`a2.z.a` @type ^`long` := v2 @kind wide;
  #L4dcba4.  v1.`x2.h0$a.j` @type ^`long` := v4 @kind wide;
  #L4dcba8.  v2:= 1I;
  #L4dcbaa.  v1.`x2.h0$a.i` @type ^`boolean` := v2 @kind boolean;
  #L4dcbae.  v2:= 0I;
  #L4dcbb0.  v1.`x2.h0$a.m` @type ^`boolean` := v2 @kind boolean;
  #L4dcbb4.  return @kind void;
}
procedure `void` `a`(`x2.h0$a` v17 @kind this) @signature `Lx2/h0$a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L4dc8c8.  v1:= v17 @kind object;
  #L4dc8cc.  v0:= 0I;
  #L4dc8ce.  v2:= 0I;
  #L4dc8d0.  if v2 != 0 then goto L4dcaf8;
  #L4dc8d4.  v3:= v1.`x2.h0$a.h` @type ^`boolean` @kind boolean;
  #L4dc8d8.  if v3 != 0 then goto L4dcaf8;
  #L4dc8dc.  v3:= 1I;
  #L4dc8de.  v4:= -1L;
  #L4dc8e2.  v6:= v1.`x2.h0$a.g` @type ^`a2.z` @kind object;
  #L4dc8e6.  v13:= v6.`a2.z.a` @type ^`long` @kind wide;
  #L4dc8ea.  call temp:= `i`(v1, v13) @signature `Lx2/h0$a;.i:(J)Lr3/p;` @kind direct;
  #L4dc8f0.  v6:= temp @kind object;
  #L4dc8f2.  v1.`x2.h0$a.k` @type ^`r3.p` := v6 @kind object;
  #L4dc8f6.  v7:= v1.`x2.h0$a.c` @type ^`r3.o0` @kind object;
  #L4dc8fa.  call temp:= `e`(v7, v6) @signature `Lr3/o0;.e:(Lr3/p;)J` @kind virtual;
  #L4dc900.  v6:= temp @kind wide;
  #L4dc902.  v8:= lcmp(v6, v4);
  #L4dc906.  if v8 == 0 then goto L4dc916;
  #L4dc90a.  v6:= v6 + v13 @kind long;
  #L4dc90c.  v8:= v1.`x2.h0$a.n` @type ^`x2.h0` @kind object;
  #L4dc910.  call `E`(v8) @signature `Lx2/h0;.E:(Lx2/h0;)V` @kind static;
  #L4dc916.  v15:= v6 @kind wide;
  #L4dc918.  v6:= v1.`x2.h0$a.n` @type ^`x2.h0` @kind object;
  #L4dc91c.  v7:= v1.`x2.h0$a.c` @type ^`r3.o0` @kind object;
  #L4dc920.  call temp:= `h`(v7) @signature `Lr3/o0;.h:()Ljava/util/Map;` @kind virtual;
  #L4dc926.  v7:= temp @kind object;
  #L4dc928.  call temp:= `a`(v7) @signature `Lr2/b;.a:(Ljava/util/Map;)Lr2/b;` @kind static;
  #L4dc92e.  v7:= temp @kind object;
  #L4dc930.  call temp:= `G`(v6, v7) @signature `Lx2/h0;.G:(Lx2/h0;Lr2/b;)Lr2/b;` @kind static;
  #L4dc936.  v6:= v1.`x2.h0$a.c` @type ^`r3.o0` @kind object;
  #L4dc93a.  v7:= v1.`x2.h0$a.n` @type ^`x2.h0` @kind object;
  #L4dc93e.  call temp:= `F`(v7) @signature `Lx2/h0;.F:(Lx2/h0;)Lr2/b;` @kind static;
  #L4dc944.  v7:= temp @kind object;
  #L4dc946.  if v7 == 0 then goto L4dc99c;
  #L4dc94a.  v7:= v1.`x2.h0$a.n` @type ^`x2.h0` @kind object;
  #L4dc94e.  call temp:= `F`(v7) @signature `Lx2/h0;.F:(Lx2/h0;)Lr2/b;` @kind static;
  #L4dc954.  v7:= temp @kind object;
  #L4dc956.  v7:= v7.`r2.b.t` @type ^`int`;
  #L4dc95a.  v8:= -1I;
  #L4dc95c.  if v7 == v8 then goto L4dc99c;
  #L4dc960.  v6:= new `x2.m`;
  #L4dc964.  v7:= v1.`x2.h0$a.c` @type ^`r3.o0` @kind object;
  #L4dc968.  v8:= v1.`x2.h0$a.n` @type ^`x2.h0` @kind object;
  #L4dc96c.  call temp:= `F`(v8) @signature `Lx2/h0;.F:(Lx2/h0;)Lr2/b;` @kind static;
  #L4dc972.  v8:= temp @kind object;
  #L4dc974.  v8:= v8.`r2.b.t` @type ^`int`;
  #L4dc978.  call `<init>`(v6, v7, v8, v1) @signature `Lx2/m;.<init>:(Lr3/l;ILx2/m$a;)V` @kind direct;
  #L4dc97e.  v7:= v1.`x2.h0$a.n` @type ^`x2.h0` @kind object;
  #L4dc982.  call temp:= `O`(v7) @signature `Lx2/h0;.O:()La2/d0;` @kind virtual;
  #L4dc988.  v7:= temp @kind object;
  #L4dc98a.  v1.`x2.h0$a.l` @type ^`a2.d0` := v7 @kind object;
  #L4dc98e.  call temp:= `H`() @signature `Lx2/h0;.H:()Lv1/j1;` @kind static;
  #L4dc994.  v8:= temp @kind object;
  #L4dc996.  call `b`(v7, v8) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L4dc99c.  v8:= v6 @kind object;
  #L4dc99e.  v7:= v1.`x2.h0$a.d` @type ^`x2.c0` @kind object;
  #L4dc9a2.  v9:= v1.`x2.h0$a.b` @type ^`android.net.Uri` @kind object;
  #L4dc9a6.  v6:= v1.`x2.h0$a.c` @type ^`r3.o0` @kind object;
  #L4dc9aa.  call temp:= `h`(v6) @signature `Lr3/o0;.h:()Ljava/util/Map;` @kind virtual;
  #L4dc9b0.  v10:= temp @kind object;
  #L4dc9b2.  v6:= v1.`x2.h0$a.e` @type ^`a2.n` @kind object;
  #L4dc9b6.  v11:= v13 @kind wide;
  #L4dc9b8.  v4:= v13 @kind wide;
  #L4dc9ba.  v13:= v15 @kind wide;
  #L4dc9bc.  v15:= v6 @kind object;
  #L4dc9be.  call `c`(v7, v8, v9, v10, v11, v13, v15) @signature `Lx2/c0;.c:(Lr3/i;Landroid/net/Uri;Ljava/util/Map;JJLa2/n;)V` @kind interface;
  #L4dc9c4.  v6:= v1.`x2.h0$a.n` @type ^`x2.h0` @kind object;
  #L4dc9c8.  call temp:= `F`(v6) @signature `Lx2/h0;.F:(Lx2/h0;)Lr2/b;` @kind static;
  #L4dc9ce.  v6:= temp @kind object;
  #L4dc9d0.  if v6 == 0 then goto L4dc9de;
  #L4dc9d4.  v6:= v1.`x2.h0$a.d` @type ^`x2.c0` @kind object;
  #L4dc9d8.  call `f`(v6) @signature `Lx2/c0;.f:()V` @kind interface;
  #L4dc9de.  v6:= v1.`x2.h0$a.i` @type ^`boolean` @kind boolean;
  #L4dc9e2.  if v6 == 0 then goto L4dc9f8;
  #L4dc9e6.  v6:= v1.`x2.h0$a.d` @type ^`x2.c0` @kind object;
  #L4dc9ea.  v7:= v1.`x2.h0$a.j` @type ^`long` @kind wide;
  #L4dc9ee.  call `b`(v6, v4, v7) @signature `Lx2/c0;.b:(JJ)V` @kind interface;
  #L4dc9f4.  v1.`x2.h0$a.i` @type ^`boolean` := v0 @kind boolean;
  #L4dc9f8.  v13:= v4 @kind wide;
  #L4dc9fa.  if v2 != 0 then goto L4dca78;
  #L4dc9fe.  v4:= v1.`x2.h0$a.h` @type ^`boolean` @kind boolean;
  #L4dca02.  if v4 != 0 then goto L4dca78;
  #L4dca06.  v4:= v1.`x2.h0$a.f` @type ^`s3.f` @kind object;
  #L4dca0a.  call `a`(v4) @signature `Ls3/f;.a:()V` @kind virtual;
  #L4dca10.  v4:= v1.`x2.h0$a.d` @type ^`x2.c0` @kind object;
  #L4dca14.  v5:= v1.`x2.h0$a.g` @type ^`a2.z` @kind object;
  #L4dca18.  call temp:= `d`(v4, v5) @signature `Lx2/c0;.d:(La2/z;)I` @kind interface;
  #L4dca1e.  v2:= temp;
  #L4dca20.  v4:= v1.`x2.h0$a.d` @type ^`x2.c0` @kind object;
  #L4dca24.  call temp:= `e`(v4) @signature `Lx2/c0;.e:()J` @kind interface;
  #L4dca2a.  v4:= temp @kind wide;
  #L4dca2c.  v6:= v1.`x2.h0$a.n` @type ^`x2.h0` @kind object;
  #L4dca30.  call temp:= `I`(v6) @signature `Lx2/h0;.I:(Lx2/h0;)J` @kind static;
  #L4dca36.  v6:= temp @kind wide;
  #L4dca38.  v6:= v6 + v13 @kind long;
  #L4dca3a.  v8:= lcmp(v4, v6);
  #L4dca3e.  if v8 <= 0 then goto L4dc9fa;
  #L4dca42.  v6:= v1.`x2.h0$a.f` @type ^`s3.f` @kind object;
  #L4dca46.  call temp:= `c`(v6) @signature `Ls3/f;.c:()Z` @kind virtual;
  #L4dca4c.  v6:= v1.`x2.h0$a.n` @type ^`x2.h0` @kind object;
  #L4dca50.  call temp:= `A`(v6) @signature `Lx2/h0;.A:(Lx2/h0;)Landroid/os/Handler;` @kind static;
  #L4dca56.  v6:= temp @kind object;
  #L4dca58.  v7:= v1.`x2.h0$a.n` @type ^`x2.h0` @kind object;
  #L4dca5c.  call temp:= `z`(v7) @signature `Lx2/h0;.z:(Lx2/h0;)Ljava/lang/Runnable;` @kind static;
  #L4dca62.  v7:= temp @kind object;
  #L4dca64.  call temp:= `post`(v6, v7) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L4dca6a.  goto L4dc9f8;
  #L4dca6c.  v0:= new `java.io.InterruptedIOException`;
  #L4dca70.  call `<init>`(v0) @signature `Ljava/io/InterruptedIOException;.<init>:()V` @kind direct;
  #L4dca76.  throw v0;
  #L4dca78.  if v2 != v3 then goto L4dca80;
  #L4dca7c.  v2:= 0I;
  #L4dca7e.  goto L4dcaac;
  #L4dca80.  v3:= v1.`x2.h0$a.d` @type ^`x2.c0` @kind object;
  #L4dca84.  call temp:= `e`(v3) @signature `Lx2/c0;.e:()J` @kind interface;
  #L4dca8a.  v3:= temp @kind wide;
  #L4dca8c.  v5:= -1L;
  #L4dca90.  v7:= lcmp(v3, v5);
  #L4dca94.  if v7 == 0 then goto L4dcaac;
  #L4dca98.  v3:= v1.`x2.h0$a.g` @type ^`a2.z` @kind object;
  #L4dca9c.  v4:= v1.`x2.h0$a.d` @type ^`x2.c0` @kind object;
  #L4dcaa0.  call temp:= `e`(v4) @signature `Lx2/c0;.e:()J` @kind interface;
  #L4dcaa6.  v4:= temp @kind wide;
  #L4dcaa8.  v3.`a2.z.a` @type ^`long` := v4 @kind wide;
  #L4dcaac.  v3:= v1.`x2.h0$a.c` @type ^`r3.o0` @kind object;
  #L4dcab0.  call `a`(v3) @signature `Lr3/o;.a:(Lr3/l;)V` @kind static;
  #L4dcab6.  goto L4dc8d0;
  #L4dcaba.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4dcabc.  if v2 == v3 then goto L4dcaec;
  #L4dcac0.  v2:= v1.`x2.h0$a.d` @type ^`x2.c0` @kind object;
  #L4dcac4.  call temp:= `e`(v2) @signature `Lx2/c0;.e:()J` @kind interface;
  #L4dcaca.  v2:= temp @kind wide;
  #L4dcacc.  v4:= -1L;
  #L4dcad0.  v6:= lcmp(v2, v4);
  #L4dcad4.  if v6 == 0 then goto L4dcaec;
  #L4dcad8.  v2:= v1.`x2.h0$a.g` @type ^`a2.z` @kind object;
  #L4dcadc.  v3:= v1.`x2.h0$a.d` @type ^`x2.c0` @kind object;
  #L4dcae0.  call temp:= `e`(v3) @signature `Lx2/c0;.e:()J` @kind interface;
  #L4dcae6.  v3:= temp @kind wide;
  #L4dcae8.  v2.`a2.z.a` @type ^`long` := v3 @kind wide;
  #L4dcaec.  v2:= v1.`x2.h0$a.c` @type ^`r3.o0` @kind object;
  #L4dcaf0.  call `a`(v2) @signature `Lr3/o;.a:(Lr3/l;)V` @kind static;
  #L4dcaf6.  throw v0;
  #L4dcaf8.  return @kind void;
  catch `java.lang.Throwable` @[L4dc8e2..L4dca02] goto L4dcaba;
  catch `java.lang.InterruptedException` @[L4dca06..L4dca10] goto L4dca6c;
  catch `java.lang.Throwable` @[L4dca06..L4dca10] goto L4dcaba;
  catch `java.lang.Throwable` @[L4dca10..L4dca78] goto L4dcaba;
}
procedure `void` `b`(`x2.h0$a` v1 @kind this) @signature `Lx2/h0$a;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4dc8b0.  v0:= 1I;
  #L4dc8b2.  v1.`x2.h0$a.h` @type ^`boolean` := v0 @kind boolean;
  #L4dc8b6.  return @kind void;
}
procedure `void` `c`(`x2.h0$a` v11 @kind this, `s3.z` v12 @kind object) @signature `Lx2/h0$a;.c:(Ls3/z;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4dcb30.  v0:= v11.`x2.h0$a.m` @type ^`boolean` @kind boolean;
  #L4dcb34.  v1:= 1I;
  #L4dcb36.  if v0 != 0 then goto L4dcb40;
  #L4dcb3a.  v2:= v11.`x2.h0$a.j` @type ^`long` @kind wide;
  #L4dcb3e.  goto L4dcb58;
  #L4dcb40.  v0:= v11.`x2.h0$a.n` @type ^`x2.h0` @kind object;
  #L4dcb44.  call temp:= `B`(v0, v1) @signature `Lx2/h0;.B:(Lx2/h0;Z)J` @kind static;
  #L4dcb4a.  v2:= temp @kind wide;
  #L4dcb4c.  v4:= v11.`x2.h0$a.j` @type ^`long` @kind wide;
  #L4dcb50.  call temp:= `max`(v2, v4) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L4dcb56.  v2:= temp @kind wide;
  #L4dcb58.  v5:= v2 @kind wide;
  #L4dcb5a.  call temp:= `a`(v12) @signature `Ls3/z;.a:()I` @kind virtual;
  #L4dcb60.  v8:= temp;
  #L4dcb62.  v0:= v11.`x2.h0$a.l` @type ^`a2.d0` @kind object;
  #L4dcb66.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4dcb6c.  v0:= temp @kind object;
  #L4dcb6e.  v4:= v0 @kind object;
  #L4dcb70.  v4:= (`a2.d0`) v4 @kind object;
  #L4dcb74.  call `c`(v4, v12, v8) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L4dcb7a.  v7:= 1I;
  #L4dcb7c.  v9:= 0I;
  #L4dcb7e.  v10:= 0I;
  #L4dcb80.  call `f`(v4, v5, v7, v8, v9, v10) @signature `La2/d0;.f:(JIIILa2/d0$a;)V` @kind interface;
  #L4dcb86.  v11.`x2.h0$a.m` @type ^`boolean` := v1 @kind boolean;
  #L4dcb8a.  return @kind void;
}
