record `x2.b0` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `J`(`int` v0 , `x2.u$b` v1 @kind object, `x2.n` v2 @kind object, `x2.q` v3 @kind object) @signature `Lx2/b0;.J:(ILx2/u$b;Lx2/n;Lx2/q;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `X`(`int` v0 , `x2.u$b` v1 @kind object, `x2.q` v2 @kind object) @signature `Lx2/b0;.X:(ILx2/u$b;Lx2/q;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `Y`(`int` v0 , `x2.u$b` v1 @kind object, `x2.q` v2 @kind object) @signature `Lx2/b0;.Y:(ILx2/u$b;Lx2/q;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `Z`(`int` v0 , `x2.u$b` v1 @kind object, `x2.n` v2 @kind object, `x2.q` v3 @kind object) @signature `Lx2/b0;.Z:(ILx2/u$b;Lx2/n;Lx2/q;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `d0`(`int` v0 , `x2.u$b` v1 @kind object, `x2.n` v2 @kind object, `x2.q` v3 @kind object, `java.io.IOException` v4 @kind object, `boolean` v5 ) @signature `Lx2/b0;.d0:(ILx2/u$b;Lx2/n;Lx2/q;Ljava/io/IOException;Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `k0`(`int` v0 , `x2.u$b` v1 @kind object, `x2.n` v2 @kind object, `x2.q` v3 @kind object) @signature `Lx2/b0;.k0:(ILx2/u$b;Lx2/n;Lx2/q;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
