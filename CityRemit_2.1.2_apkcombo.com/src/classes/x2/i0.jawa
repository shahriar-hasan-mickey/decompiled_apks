record `x2.i0` @kind class @AccessFlag PUBLIC_FINAL extends `x2.a` @kind class, `x2.h0$b` @kind interface {
  `r3.g0` `x2.i0.A` @AccessFlag PRIVATE_FINAL;
  `int` `x2.i0.B` @AccessFlag PRIVATE_FINAL;
  `boolean` `x2.i0.C` @AccessFlag PRIVATE;
  `long` `x2.i0.D` @AccessFlag PRIVATE;
  `boolean` `x2.i0.E` @AccessFlag PRIVATE;
  `boolean` `x2.i0.F` @AccessFlag PRIVATE;
  `r3.p0` `x2.i0.G` @AccessFlag PRIVATE;
  `v1.r1` `x2.i0.v` @AccessFlag PRIVATE_FINAL;
  `v1.r1$h` `x2.i0.w` @AccessFlag PRIVATE_FINAL;
  `r3.l$a` `x2.i0.x` @AccessFlag PRIVATE_FINAL;
  `x2.c0$a` `x2.i0.y` @AccessFlag PRIVATE_FINAL;
  `z1.y` `x2.i0.z` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`x2.i0` v1 @kind this, `v1.r1` v2 @kind object, `r3.l$a` v3 @kind object, `x2.c0$a` v4 @kind object, `z1.y` v5 @kind object, `r3.g0` v6 @kind object, `int` v7 ) @signature `Lx2/i0;.<init>:(Lv1/r1;Lr3/l$a;Lx2/c0$a;Lz1/y;Lr3/g0;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L4de5e4.  call `<init>`(v1) @signature `Lx2/a;.<init>:()V` @kind direct;
  #L4de5ea.  v0:= v2.`v1.r1.p` @type ^`v1.r1$h` @kind object;
  #L4de5ee.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4de5f4.  v0:= temp @kind object;
  #L4de5f6.  v0:= (`v1.r1$h`) v0 @kind object;
  #L4de5fa.  v1.`x2.i0.w` @type ^`v1.r1$h` := v0 @kind object;
  #L4de5fe.  v1.`x2.i0.v` @type ^`v1.r1` := v2 @kind object;
  #L4de602.  v1.`x2.i0.x` @type ^`r3.l$a` := v3 @kind object;
  #L4de606.  v1.`x2.i0.y` @type ^`x2.c0$a` := v4 @kind object;
  #L4de60a.  v1.`x2.i0.z` @type ^`z1.y` := v5 @kind object;
  #L4de60e.  v1.`x2.i0.A` @type ^`r3.g0` := v6 @kind object;
  #L4de612.  v1.`x2.i0.B` @type ^`int` := v7;
  #L4de616.  v2:= 1I;
  #L4de618.  v1.`x2.i0.C` @type ^`boolean` := v2 @kind boolean;
  #L4de61c.  v2:= -4.9E-324D;
  #L4de626.  v1.`x2.i0.D` @type ^`long` := v2 @kind wide;
  #L4de62a.  return @kind void;
}
procedure `void` `<init>`(`x2.i0` v0 @kind this, `v1.r1` v1 @kind object, `r3.l$a` v2 @kind object, `x2.c0$a` v3 @kind object, `z1.y` v4 @kind object, `r3.g0` v5 @kind object, `int` v6 , `x2.i0$a` v7 @kind object) @signature `Lx2/i0;.<init>:(Lv1/r1;Lr3/l$a;Lx2/c0$a;Lz1/y;Lr3/g0;ILx2/i0$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4de63c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lx2/i0;.<init>:(Lv1/r1;Lr3/l$a;Lx2/c0$a;Lz1/y;Lr3/g0;I)V` @kind direct;
  #L4de642.  return @kind void;
}
procedure `void` `F`(`x2.i0` v9 @kind this) @signature `Lx2/i0;.F:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4de668.  v8:= new `x2.q0`;
  #L4de66c.  v1:= v9.`x2.i0.D` @type ^`long` @kind wide;
  #L4de670.  v3:= v9.`x2.i0.E` @type ^`boolean` @kind boolean;
  #L4de674.  v5:= v9.`x2.i0.F` @type ^`boolean` @kind boolean;
  #L4de678.  v7:= v9.`x2.i0.v` @type ^`v1.r1` @kind object;
  #L4de67c.  v4:= 0I;
  #L4de67e.  v6:= 0I;
  #L4de680.  v0:= v8 @kind object;
  #L4de682.  call `<init>`(v0, v1, v3, v4, v5, v6, v7) @signature `Lx2/q0;.<init>:(JZZZLjava/lang/Object;Lv1/r1;)V` @kind direct;
  #L4de688.  v0:= v9.`x2.i0.C` @type ^`boolean` @kind boolean;
  #L4de68c.  if v0 == 0 then goto L4de69c;
  #L4de690.  v0:= new `x2.i0$a`;
  #L4de694.  call `<init>`(v0, v9, v8) @signature `Lx2/i0$a;.<init>:(Lx2/i0;Lv1/d3;)V` @kind direct;
  #L4de69a.  v8:= v0 @kind object;
  #L4de69c.  call `D`(v9, v8) @signature `Lx2/a;.D:(Lv1/d3;)V` @kind virtual;
  #L4de6a2.  return @kind void;
}
procedure `void` `C`(`x2.i0` v2 @kind this, `r3.p0` v3 @kind object) @signature `Lx2/i0;.C:(Lr3/p0;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4de71c.  v2.`x2.i0.G` @type ^`r3.p0` := v3 @kind object;
  #L4de720.  v3:= v2.`x2.i0.z` @type ^`z1.y` @kind object;
  #L4de724.  call `b`(v3) @signature `Lz1/y;.b:()V` @kind interface;
  #L4de72a.  v3:= v2.`x2.i0.z` @type ^`z1.y` @kind object;
  #L4de72e.  call temp:= `myLooper`() @signature `Landroid/os/Looper;.myLooper:()Landroid/os/Looper;` @kind static;
  #L4de734.  v0:= temp @kind object;
  #L4de736.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4de73c.  v0:= temp @kind object;
  #L4de73e.  v0:= (`android.os.Looper`) v0 @kind object;
  #L4de742.  call temp:= `A`(v2) @signature `Lx2/a;.A:()Lw1/t1;` @kind virtual;
  #L4de748.  v1:= temp @kind object;
  #L4de74a.  call `d`(v3, v0, v1) @signature `Lz1/y;.d:(Landroid/os/Looper;Lw1/t1;)V` @kind interface;
  #L4de750.  call `F`(v2) @signature `Lx2/i0;.F:()V` @kind direct;
  #L4de756.  return @kind void;
}
procedure `void` `E`(`x2.i0` v1 @kind this) @signature `Lx2/i0;.E:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4de784.  v0:= v1.`x2.i0.z` @type ^`z1.y` @kind object;
  #L4de788.  call `a`(v0) @signature `Lz1/y;.a:()V` @kind interface;
  #L4de78e.  return @kind void;
}
procedure `v1.r1` `a`(`x2.i0` v1 @kind this) @signature `Lx2/i0;.a:()Lv1/r1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4de5cc.  v0:= v1.`x2.i0.v` @type ^`v1.r1` @kind object;
  #L4de5d0.  return v0 @kind object;
}
procedure `void` `e`(`x2.i0` v0 @kind this) @signature `Lx2/i0;.e:()V` @AccessFlag PUBLIC {
    temp;

  #L4de654.  return @kind void;
}
procedure `x2.r` `f`(`x2.i0` v14 @kind this, `x2.u$b` v15 @kind object, `r3.b` v16 @kind object, `long` v17 ) @signature `Lx2/i0;.f:(Lx2/u$b;Lr3/b;J)Lx2/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L4de7a0.  v12:= v14 @kind object;
  #L4de7a2.  v0:= v12.`x2.i0.x` @type ^`r3.l$a` @kind object;
  #L4de7a6.  call temp:= `a`(v0) @signature `Lr3/l$a;.a:()Lr3/l;` @kind interface;
  #L4de7ac.  v2:= temp @kind object;
  #L4de7ae.  v0:= v12.`x2.i0.G` @type ^`r3.p0` @kind object;
  #L4de7b2.  if v0 == 0 then goto L4de7bc;
  #L4de7b6.  call `c`(v2, v0) @signature `Lr3/l;.c:(Lr3/p0;)V` @kind interface;
  #L4de7bc.  v13:= new `x2.h0`;
  #L4de7c0.  v0:= v12.`x2.i0.w` @type ^`v1.r1$h` @kind object;
  #L4de7c4.  v1:= v0.`v1.r1$h.a` @type ^`android.net.Uri` @kind object;
  #L4de7c8.  v0:= v12.`x2.i0.y` @type ^`x2.c0$a` @kind object;
  #L4de7cc.  call temp:= `A`(v14) @signature `Lx2/a;.A:()Lw1/t1;` @kind virtual;
  #L4de7d2.  v3:= temp @kind object;
  #L4de7d4.  call temp:= `a`(v0, v3) @signature `Lx2/c0$a;.a:(Lw1/t1;)Lx2/c0;` @kind interface;
  #L4de7da.  v3:= temp @kind object;
  #L4de7dc.  v4:= v12.`x2.i0.z` @type ^`z1.y` @kind object;
  #L4de7e0.  call temp:= `s`(v14, v15) @signature `Lx2/a;.s:(Lx2/u$b;)Lz1/w$a;` @kind virtual;
  #L4de7e6.  v5:= temp @kind object;
  #L4de7e8.  v6:= v12.`x2.i0.A` @type ^`r3.g0` @kind object;
  #L4de7ec.  call temp:= `w`(v14, v15) @signature `Lx2/a;.w:(Lx2/u$b;)Lx2/b0$a;` @kind virtual;
  #L4de7f2.  v7:= temp @kind object;
  #L4de7f4.  v0:= v12.`x2.i0.w` @type ^`v1.r1$h` @kind object;
  #L4de7f8.  v10:= v0.`v1.r1$h.f` @type ^`java.lang.String` @kind object;
  #L4de7fc.  v11:= v12.`x2.i0.B` @type ^`int`;
  #L4de800.  v0:= v13 @kind object;
  #L4de802.  v8:= v14 @kind object;
  #L4de804.  v9:= v16 @kind object;
  #L4de808.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lx2/h0;.<init>:(Landroid/net/Uri;Lr3/l;Lx2/c0;Lz1/y;Lz1/w$a;Lr3/g0;Lx2/b0$a;Lx2/h0$b;Lr3/b;Ljava/lang/String;I)V` @kind direct;
  #L4de80e.  return v13 @kind object;
}
procedure `void` `m`(`x2.i0` v0 @kind this, `x2.r` v1 @kind object) @signature `Lx2/i0;.m:(Lx2/r;)V` @AccessFlag PUBLIC {
    temp;

  #L4de768.  v1:= (`x2.h0`) v1 @kind object;
  #L4de76c.  call `f0`(v1) @signature `Lx2/h0;.f0:()V` @kind virtual;
  #L4de772.  return @kind void;
}
procedure `void` `q`(`x2.i0` v3 @kind this, `long` v4 , `boolean` v6 , `boolean` v7 ) @signature `Lx2/i0;.q:(JZZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4de6b4.  v0:= -4.9E-324D;
  #L4de6be.  v2:= lcmp(v4, v0);
  #L4de6c2.  if v2 != 0 then goto L4de6ca;
  #L4de6c6.  v4:= v3.`x2.i0.D` @type ^`long` @kind wide;
  #L4de6ca.  v0:= v3.`x2.i0.C` @type ^`boolean` @kind boolean;
  #L4de6ce.  if v0 != 0 then goto L4de6f0;
  #L4de6d2.  v0:= v3.`x2.i0.D` @type ^`long` @kind wide;
  #L4de6d6.  v2:= lcmp(v0, v4);
  #L4de6da.  if v2 != 0 then goto L4de6f0;
  #L4de6de.  v0:= v3.`x2.i0.E` @type ^`boolean` @kind boolean;
  #L4de6e2.  if v0 != v6 then goto L4de6f0;
  #L4de6e6.  v0:= v3.`x2.i0.F` @type ^`boolean` @kind boolean;
  #L4de6ea.  if v0 != v7 then goto L4de6f0;
  #L4de6ee.  return @kind void;
  #L4de6f0.  v3.`x2.i0.D` @type ^`long` := v4 @kind wide;
  #L4de6f4.  v3.`x2.i0.E` @type ^`boolean` := v6 @kind boolean;
  #L4de6f8.  v3.`x2.i0.F` @type ^`boolean` := v7 @kind boolean;
  #L4de6fc.  v4:= 0I;
  #L4de6fe.  v3.`x2.i0.C` @type ^`boolean` := v4 @kind boolean;
  #L4de702.  call `F`(v3) @signature `Lx2/i0;.F:()V` @kind direct;
  #L4de708.  return @kind void;
}
