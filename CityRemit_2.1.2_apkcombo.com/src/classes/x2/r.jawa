record `x2.r` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `x2.o0` @kind interface {
}
procedure `boolean` `a`() @signature `Lx2/r;.a:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `c`(`long` v0 , `v1.w2` v2 @kind object) @signature `Lx2/r;.c:(JLv1/w2;)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `d`() @signature `Lx2/r;.d:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `f`() @signature `Lx2/r;.f:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `g`(`long` v0 ) @signature `Lx2/r;.g:(J)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `i`(`long` v0 ) @signature `Lx2/r;.i:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `k`(`q3.s`[] v0 @kind object, `boolean`[] v1 @kind object, `x2.n0`[] v2 @kind object, `boolean`[] v3 @kind object, `long` v4 ) @signature `Lx2/r;.k:([Lq3/s;[Z[Lx2/n0;[ZJ)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `l`() @signature `Lx2/r;.l:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `x2.v0` `o`() @signature `Lx2/r;.o:()Lx2/v0;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `p`() @signature `Lx2/r;.p:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `q`(`x2.r$a` v0 @kind object, `long` v1 ) @signature `Lx2/r;.q:(Lx2/r$a;J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `r`(`long` v0 , `boolean` v2 ) @signature `Lx2/r;.r:(JZ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `s`(`long` v0 ) @signature `Lx2/r;.s:(J)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
