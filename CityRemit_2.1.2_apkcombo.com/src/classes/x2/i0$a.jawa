record `x2.i0$a` @kind class @AccessFlag  extends `x2.l` @kind class {
}
procedure `void` `<init>`(`x2.i0$a` v0 @kind this, `x2.i0` v1 @kind object, `v1.d3` v2 @kind object) @signature `Lx2/i0$a;.<init>:(Lx2/i0;Lv1/d3;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4de3c0.  call `<init>`(v0, v2) @signature `Lx2/l;.<init>:(Lv1/d3;)V` @kind direct;
  #L4de3c6.  return @kind void;
}
procedure `v1.d3$b` `g`(`x2.i0$a` v0 @kind this, `int` v1 , `v1.d3$b` v2 @kind object, `boolean` v3 ) @signature `Lx2/i0$a;.g:(ILv1/d3$b;Z)Lv1/d3$b;` @AccessFlag PUBLIC {
    temp;

  #L4de380.  call temp:= `g`(v0, v1, v2, v3) @signature `Lx2/l;.g:(ILv1/d3$b;Z)Lv1/d3$b;` @kind super;
  #L4de386.  v1:= 1I;
  #L4de388.  v2.`v1.d3$b.t` @type ^`boolean` := v1 @kind boolean;
  #L4de38c.  return v2 @kind object;
}
procedure `v1.d3$c` `o`(`x2.i0$a` v0 @kind this, `int` v1 , `v1.d3$c` v2 @kind object, `long` v3 ) @signature `Lx2/i0$a;.o:(ILv1/d3$c;J)Lv1/d3$c;` @AccessFlag PUBLIC {
    temp;

  #L4de3a0.  call temp:= `o`(v0, v1, v2, v3) @signature `Lx2/l;.o:(ILv1/d3$c;J)Lv1/d3$c;` @kind super;
  #L4de3a6.  v1:= 1I;
  #L4de3a8.  v2.`v1.d3$c.z` @type ^`boolean` := v1 @kind boolean;
  #L4de3ac.  return v2 @kind object;
}
