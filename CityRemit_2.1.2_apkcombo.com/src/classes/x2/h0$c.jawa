record `x2.h0$c` @kind class @AccessFlag FINAL extends `x2.n0` @kind interface {
  `int` `x2.h0$c.o` @AccessFlag PRIVATE_FINAL;
  `x2.h0` `x2.h0$c.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x2.h0$c` v0 @kind this, `x2.h0` v1 @kind object, `int` v2 ) @signature `Lx2/h0$c;.<init>:(Lx2/h0;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4dcc4c.  v0.`x2.h0$c.p` @type ^`x2.h0` := v1 @kind object;
  #L4dcc50.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dcc56.  v0.`x2.h0$c.o` @type ^`int` := v2;
  #L4dcc5a.  return @kind void;
}
procedure `int` `a`(`x2.h0$c` v0 @kind object) @signature `Lx2/h0$c;.a:(Lx2/h0$c;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4dcbec.  v0:= v0.`x2.h0$c.o` @type ^`int`;
  #L4dcbf0.  return v0;
}
procedure `void` `b`(`x2.h0$c` v2 @kind this) @signature `Lx2/h0$c;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dcc6c.  v0:= v2.`x2.h0$c.p` @type ^`x2.h0` @kind object;
  #L4dcc70.  v1:= v2.`x2.h0$c.o` @type ^`int`;
  #L4dcc74.  call `Y`(v0, v1) @signature `Lx2/h0;.Y:(I)V` @kind virtual;
  #L4dcc7a.  return @kind void;
}
procedure `int` `e`(`x2.h0$c` v2 @kind this, `v1.k1` v3 @kind object, `y1.g` v4 @kind object, `int` v5 ) @signature `Lx2/h0$c;.e:(Lv1/k1;Ly1/g;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dcc04.  v0:= v2.`x2.h0$c.p` @type ^`x2.h0` @kind object;
  #L4dcc08.  v1:= v2.`x2.h0$c.o` @type ^`int`;
  #L4dcc0c.  call temp:= `e0`(v0, v1, v3, v4, v5) @signature `Lx2/h0;.e0:(ILv1/k1;Ly1/g;I)I` @kind virtual;
  #L4dcc12.  v3:= temp;
  #L4dcc14.  return v3;
}
procedure `boolean` `h`(`x2.h0$c` v2 @kind this) @signature `Lx2/h0$c;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dcbc8.  v0:= v2.`x2.h0$c.p` @type ^`x2.h0` @kind object;
  #L4dcbcc.  v1:= v2.`x2.h0$c.o` @type ^`int`;
  #L4dcbd0.  call temp:= `Q`(v0, v1) @signature `Lx2/h0;.Q:(I)Z` @kind virtual;
  #L4dcbd6.  v0:= temp;
  #L4dcbd8.  return v0;
}
procedure `int` `m`(`x2.h0$c` v2 @kind this, `long` v3 ) @signature `Lx2/h0$c;.m:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4dcc28.  v0:= v2.`x2.h0$c.p` @type ^`x2.h0` @kind object;
  #L4dcc2c.  v1:= v2.`x2.h0$c.o` @type ^`int`;
  #L4dcc30.  call temp:= `i0`(v0, v1, v3) @signature `Lx2/h0;.i0:(IJ)I` @kind virtual;
  #L4dcc36.  v3:= temp;
  #L4dcc38.  return v3;
}
