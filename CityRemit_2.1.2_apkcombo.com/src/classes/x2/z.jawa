record `x2.z` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `x2.b0$a` `x2.z.o` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `x2.b0` `x2.z.p` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `x2.q` `x2.z.q` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x2.z` v0 @kind this, `x2.b0$a` v1 @kind object, `x2.b0` v2 @kind object, `x2.q` v3 @kind object) @signature `Lx2/z;.<init>:(Lx2/b0$a;Lx2/b0;Lx2/q;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4dbe70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dbe76.  v0.`x2.z.o` @type ^`x2.b0$a` := v1 @kind object;
  #L4dbe7a.  v0.`x2.z.p` @type ^`x2.b0` := v2 @kind object;
  #L4dbe7e.  v0.`x2.z.q` @type ^`x2.q` := v3 @kind object;
  #L4dbe82.  return @kind void;
}
procedure `void` `run`(`x2.z` v3 @kind this) @signature `Lx2/z;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4dbe94.  v0:= v3.`x2.z.o` @type ^`x2.b0$a` @kind object;
  #L4dbe98.  v1:= v3.`x2.z.p` @type ^`x2.b0` @kind object;
  #L4dbe9c.  v2:= v3.`x2.z.q` @type ^`x2.q` @kind object;
  #L4dbea0.  call `d`(v0, v1, v2) @signature `Lx2/b0$a;.d:(Lx2/b0$a;Lx2/b0;Lx2/q;)V` @kind static;
  #L4dbea6.  return @kind void;
}
