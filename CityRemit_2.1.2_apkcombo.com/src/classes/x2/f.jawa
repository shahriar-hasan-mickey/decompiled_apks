record `x2.f` @kind class @AccessFlag PUBLIC_ABSTRACT extends `x2.a` @kind class {
  `java.util.HashMap` `x2.f.v` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `x2.f.w` @AccessFlag PRIVATE;
  `r3.p0` `x2.f.x` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`x2.f` v1 @kind this) @signature `Lx2/f;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L4da468.  call `<init>`(v1) @signature `Lx2/a;.<init>:()V` @kind direct;
  #L4da46e.  v0:= new `java.util.HashMap`;
  #L4da472.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4da478.  v1.`x2.f.v` @type ^`java.util.HashMap` := v0 @kind object;
  #L4da47c.  return @kind void;
}
procedure `void` `F`(`x2.f` v0 @kind object, `java.lang.Object` v1 @kind object, `x2.u` v2 @kind object, `v1.d3` v3 @kind object) @signature `Lx2/f;.F:(Lx2/f;Ljava/lang/Object;Lx2/u;Lv1/d3;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L4da450.  call `J`(v0, v1, v2, v3) @signature `Lx2/f;.J:(Ljava/lang/Object;Lx2/u;Lv1/d3;)V` @kind direct;
  #L4da456.  return @kind void;
}
procedure `void` `J`(`x2.f` v0 @kind this, `java.lang.Object` v1 @kind object, `x2.u` v2 @kind object, `v1.d3` v3 @kind object) @signature `Lx2/f;.J:(Ljava/lang/Object;Lx2/u;Lv1/d3;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;

  #L4da530.  call `K`(v0, v1, v2, v3) @signature `Lx2/f;.K:(Ljava/lang/Object;Lx2/u;Lv1/d3;)V` @kind virtual;
  #L4da536.  return @kind void;
}
procedure `void` `C`(`x2.f` v0 @kind this, `r3.p0` v1 @kind object) @signature `Lx2/f;.C:(Lr3/p0;)V` @AccessFlag PROTECTED {
    temp;

  #L4da5e8.  v0.`x2.f.x` @type ^`r3.p0` := v1 @kind object;
  #L4da5ec.  call temp:= `w`() @signature `Ls3/l0;.w:()Landroid/os/Handler;` @kind static;
  #L4da5f2.  v1:= temp @kind object;
  #L4da5f4.  v0.`x2.f.w` @type ^`android.os.Handler` := v1 @kind object;
  #L4da5f8.  return @kind void;
}
procedure `void` `E`(`x2.f` v4 @kind this) @signature `Lx2/f;.E:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4da60c.  v0:= v4.`x2.f.v` @type ^`java.util.HashMap` @kind object;
  #L4da610.  call temp:= `values`(v0) @signature `Ljava/util/HashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L4da616.  v0:= temp @kind object;
  #L4da618.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4da61e.  v0:= temp @kind object;
  #L4da620.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4da626.  v1:= temp;
  #L4da628.  if v1 == 0 then goto L4da664;
  #L4da62c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4da632.  v1:= temp @kind object;
  #L4da634.  v1:= (`x2.f$b`) v1 @kind object;
  #L4da638.  v2:= v1.`x2.f$b.a` @type ^`x2.u` @kind object;
  #L4da63c.  v3:= v1.`x2.f$b.b` @type ^`x2.u$c` @kind object;
  #L4da640.  call `k`(v2, v3) @signature `Lx2/u;.k:(Lx2/u$c;)V` @kind interface;
  #L4da646.  v2:= v1.`x2.f$b.a` @type ^`x2.u` @kind object;
  #L4da64a.  v3:= v1.`x2.f$b.c` @type ^`x2.f$a` @kind object;
  #L4da64e.  call `b`(v2, v3) @signature `Lx2/u;.b:(Lx2/b0;)V` @kind interface;
  #L4da654.  v2:= v1.`x2.f$b.a` @type ^`x2.u` @kind object;
  #L4da658.  v1:= v1.`x2.f$b.c` @type ^`x2.f$a` @kind object;
  #L4da65c.  call `i`(v2, v1) @signature `Lx2/u;.i:(Lz1/w;)V` @kind interface;
  #L4da662.  goto L4da620;
  #L4da664.  v0:= v4.`x2.f.v` @type ^`java.util.HashMap` @kind object;
  #L4da668.  call `clear`(v0) @signature `Ljava/util/HashMap;.clear:()V` @kind virtual;
  #L4da66e.  return @kind void;
}
procedure `x2.u$b` `G`(`java.lang.Object` v0 @kind object, `x2.u$b` v1 @kind object) @signature `Lx2/f;.G:(Ljava/lang/Object;Lx2/u$b;)Lx2/u$b;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `long` `H`(`x2.f` v0 @kind this, `java.lang.Object` v1 @kind object, `long` v2 ) @signature `Lx2/f;.H:(Ljava/lang/Object;J)J` @AccessFlag PROTECTED {
    temp;

  #L4da43c.  return v2 @kind wide;
}
procedure `int` `I`(`x2.f` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 ) @signature `Lx2/f;.I:(Ljava/lang/Object;I)I` @AccessFlag PROTECTED {
    temp;

  #L4da428.  return v2;
}
procedure `void` `K`(`java.lang.Object` v0 @kind object, `x2.u` v1 @kind object, `v1.d3` v2 @kind object) @signature `Lx2/f;.K:(Ljava/lang/Object;Lx2/u;Lv1/d3;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `L`(`x2.f` v4 @kind this, `java.lang.Object` v5 @kind object, `x2.u` v6 @kind object) @signature `Lx2/f;.L:(Ljava/lang/Object;Lx2/u;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4da548.  v0:= v4.`x2.f.v` @type ^`java.util.HashMap` @kind object;
  #L4da54c.  call temp:= `containsKey`(v0, v5) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L4da552.  v0:= temp;
  #L4da554.  v0:= v0 ^~ 1;
  #L4da558.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L4da55e.  v0:= new `x2.e`;
  #L4da562.  call `<init>`(v0, v4, v5) @signature `Lx2/e;.<init>:(Lx2/f;Ljava/lang/Object;)V` @kind direct;
  #L4da568.  v1:= new `x2.f$a`;
  #L4da56c.  call `<init>`(v1, v4, v5) @signature `Lx2/f$a;.<init>:(Lx2/f;Ljava/lang/Object;)V` @kind direct;
  #L4da572.  v2:= v4.`x2.f.v` @type ^`java.util.HashMap` @kind object;
  #L4da576.  v3:= new `x2.f$b`;
  #L4da57a.  call `<init>`(v3, v6, v0, v1) @signature `Lx2/f$b;.<init>:(Lx2/u;Lx2/u$c;Lx2/f$a;)V` @kind direct;
  #L4da580.  call temp:= `put`(v2, v5, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4da586.  v5:= v4.`x2.f.w` @type ^`android.os.Handler` @kind object;
  #L4da58a.  call temp:= `e`(v5) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4da590.  v5:= temp @kind object;
  #L4da592.  v5:= (`android.os.Handler`) v5 @kind object;
  #L4da596.  call `l`(v6, v5, v1) @signature `Lx2/u;.l:(Landroid/os/Handler;Lx2/b0;)V` @kind interface;
  #L4da59c.  v5:= v4.`x2.f.w` @type ^`android.os.Handler` @kind object;
  #L4da5a0.  call temp:= `e`(v5) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4da5a6.  v5:= temp @kind object;
  #L4da5a8.  v5:= (`android.os.Handler`) v5 @kind object;
  #L4da5ac.  call `c`(v6, v5, v1) @signature `Lx2/u;.c:(Landroid/os/Handler;Lz1/w;)V` @kind interface;
  #L4da5b2.  v5:= v4.`x2.f.x` @type ^`r3.p0` @kind object;
  #L4da5b6.  call temp:= `A`(v4) @signature `Lx2/a;.A:()Lw1/t1;` @kind virtual;
  #L4da5bc.  v1:= temp @kind object;
  #L4da5be.  call `j`(v6, v0, v5, v1) @signature `Lx2/u;.j:(Lx2/u$c;Lr3/p0;Lw1/t1;)V` @kind interface;
  #L4da5c4.  call temp:= `B`(v4) @signature `Lx2/a;.B:()Z` @kind virtual;
  #L4da5ca.  v5:= temp;
  #L4da5cc.  if v5 != 0 then goto L4da5d6;
  #L4da5d0.  call `o`(v6, v0) @signature `Lx2/u;.o:(Lx2/u$c;)V` @kind interface;
  #L4da5d6.  return @kind void;
}
procedure `void` `y`(`x2.f` v3 @kind this) @signature `Lx2/f;.y:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4da490.  v0:= v3.`x2.f.v` @type ^`java.util.HashMap` @kind object;
  #L4da494.  call temp:= `values`(v0) @signature `Ljava/util/HashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L4da49a.  v0:= temp @kind object;
  #L4da49c.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4da4a2.  v0:= temp @kind object;
  #L4da4a4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4da4aa.  v1:= temp;
  #L4da4ac.  if v1 == 0 then goto L4da4cc;
  #L4da4b0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4da4b6.  v1:= temp @kind object;
  #L4da4b8.  v1:= (`x2.f$b`) v1 @kind object;
  #L4da4bc.  v2:= v1.`x2.f$b.a` @type ^`x2.u` @kind object;
  #L4da4c0.  v1:= v1.`x2.f$b.b` @type ^`x2.u$c` @kind object;
  #L4da4c4.  call `o`(v2, v1) @signature `Lx2/u;.o:(Lx2/u$c;)V` @kind interface;
  #L4da4ca.  goto L4da4a4;
  #L4da4cc.  return @kind void;
}
procedure `void` `z`(`x2.f` v3 @kind this) @signature `Lx2/f;.z:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4da4e0.  v0:= v3.`x2.f.v` @type ^`java.util.HashMap` @kind object;
  #L4da4e4.  call temp:= `values`(v0) @signature `Ljava/util/HashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L4da4ea.  v0:= temp @kind object;
  #L4da4ec.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4da4f2.  v0:= temp @kind object;
  #L4da4f4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4da4fa.  v1:= temp;
  #L4da4fc.  if v1 == 0 then goto L4da51c;
  #L4da500.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4da506.  v1:= temp @kind object;
  #L4da508.  v1:= (`x2.f$b`) v1 @kind object;
  #L4da50c.  v2:= v1.`x2.f$b.a` @type ^`x2.u` @kind object;
  #L4da510.  v1:= v1.`x2.f$b.b` @type ^`x2.u$c` @kind object;
  #L4da514.  call `p`(v2, v1) @signature `Lx2/u;.p:(Lx2/u$c;)V` @kind interface;
  #L4da51a.  goto L4da4f4;
  #L4da51c.  return @kind void;
}
