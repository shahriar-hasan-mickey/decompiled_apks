record `x2.a0` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `x2.b0$a` `x2.a0.o` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `x2.b0` `x2.a0.p` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `x2.u$b` `x2.a0.q` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `x2.q` `x2.a0.r` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x2.a0` v0 @kind this, `x2.b0$a` v1 @kind object, `x2.b0` v2 @kind object, `x2.u$b` v3 @kind object, `x2.q` v4 @kind object) @signature `Lx2/a0;.<init>:(Lx2/b0$a;Lx2/b0;Lx2/u$b;Lx2/q;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4dbeb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4dbebe.  v0.`x2.a0.o` @type ^`x2.b0$a` := v1 @kind object;
  #L4dbec2.  v0.`x2.a0.p` @type ^`x2.b0` := v2 @kind object;
  #L4dbec6.  v0.`x2.a0.q` @type ^`x2.u$b` := v3 @kind object;
  #L4dbeca.  v0.`x2.a0.r` @type ^`x2.q` := v4 @kind object;
  #L4dbece.  return @kind void;
}
procedure `void` `run`(`x2.a0` v4 @kind this) @signature `Lx2/a0;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4dbee0.  v0:= v4.`x2.a0.o` @type ^`x2.b0$a` @kind object;
  #L4dbee4.  v1:= v4.`x2.a0.p` @type ^`x2.b0` @kind object;
  #L4dbee8.  v2:= v4.`x2.a0.q` @type ^`x2.u$b` @kind object;
  #L4dbeec.  v3:= v4.`x2.a0.r` @type ^`x2.q` @kind object;
  #L4dbef0.  call `a`(v0, v1, v2, v3) @signature `Lx2/b0$a;.a:(Lx2/b0$a;Lx2/b0;Lx2/u$b;Lx2/q;)V` @kind static;
  #L4dbef6.  return @kind void;
}
