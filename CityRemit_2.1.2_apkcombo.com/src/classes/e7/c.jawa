record `e7.c` @kind class @AccessFlag PUBLIC {
  `e7.d` `e7.c.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `e7.c.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `e7.c.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e7.c` v1 @kind this, `e7.d` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Le7/c;.<init>:(Le7/d;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3010bc.  v0:= 0I;
  #L3010be.  call `<init>`(v1, v2, v3, v0) @signature `Le7/c;.<init>:(Le7/d;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L3010c4.  return @kind void;
}
procedure `void` `<init>`(`e7.c` v0 @kind this, `e7.d` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Le7/c;.<init>:(Le7/d;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3010d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3010de.  v0.`e7.c.a` @type ^`e7.d` := v1 @kind object;
  #L3010e2.  v0.`e7.c.b` @type ^`java.lang.String` := v2 @kind object;
  #L3010e6.  v0.`e7.c.c` @type ^`java.lang.String` := v3 @kind object;
  #L3010ea.  return @kind void;
}
procedure `java.lang.String` `d`(`java.lang.Throwable` v2 @kind object) @signature `Le7/c;.d:(Ljava/lang/Throwable;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L301014.  v0:= new `java.io.StringWriter`;
  #L301018.  call `<init>`(v0) @signature `Ljava/io/StringWriter;.<init>:()V` @kind direct;
  #L30101e.  v1:= new `java.io.PrintWriter`;
  #L301022.  call `<init>`(v1, v0) @signature `Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L301028.  call `printStackTrace`(v2, v1) @signature `Ljava/lang/Throwable;.printStackTrace:(Ljava/io/PrintWriter;)V` @kind virtual;
  #L30102e.  call temp:= `toString`(v0) @signature `Ljava/io/StringWriter;.toString:()Ljava/lang/String;` @kind virtual;
  #L301034.  v2:= temp @kind object;
  #L301036.  return v2 @kind object;
}
procedure `long` `g`(`e7.c` v2 @kind this) @signature `Le7/c;.g:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3010a0.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L3010a6.  v0:= temp @kind wide;
  #L3010a8.  return v0 @kind wide;
}
procedure `java.lang.String` `h`(`e7.c` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Le7/c;.h:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L301048.  v0:= length @variable v3;
  #L30104a.  if v0 <= 0 then goto L301056;
  #L30104e.  call temp:= `format`(v2, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L301054.  v2:= temp @kind object;
  #L301056.  v3:= v1.`e7.c.c` @type ^`java.lang.String` @kind object;
  #L30105a.  if v3 != 0 then goto L301060;
  #L30105e.  goto L30108c;
  #L301060.  v3:= new `java.lang.StringBuilder`;
  #L301064.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30106a.  v0:= v1.`e7.c.c` @type ^`java.lang.String` @kind object;
  #L30106e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L301074.  v0:= " - " @kind object;
  #L301078.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30107e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L301084.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30108a.  v2:= temp @kind object;
  #L30108c.  return v2 @kind object;
}
procedure `void` `a`(`e7.c` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.Throwable` v8 @kind object, `java.lang.Object`[] v9 @kind object) @signature `Le7/c;.a:(Ljava/lang/String;Ljava/lang/Throwable;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L301118.  call temp:= `f`(v6) @signature `Le7/c;.f:()Z` @kind virtual;
  #L30111e.  v0:= temp;
  #L301120.  if v0 == 0 then goto L30117c;
  #L301124.  call temp:= `h`(v6, v7, v9) @signature `Le7/c;.h:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L30112a.  v7:= temp @kind object;
  #L30112c.  if v8 == 0 then goto L301160;
  #L301130.  v9:= new `java.lang.StringBuilder`;
  #L301134.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30113a.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L301140.  v7:= "\n" @kind object;
  #L301144.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30114a.  call temp:= `d`(v8) @signature `Le7/c;.d:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L301150.  v7:= temp @kind object;
  #L301152.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L301158.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30115e.  v7:= temp @kind object;
  #L301160.  v3:= v7 @kind object;
  #L301162.  v0:= v6.`e7.c.a` @type ^`e7.d` @kind object;
  #L301166.  v1:= `@@e7.d$a.o` @type ^`e7.d$a` @kind object;
  #L30116a.  v2:= v6.`e7.c.b` @type ^`java.lang.String` @kind object;
  #L30116e.  call temp:= `g`(v6) @signature `Le7/c;.g:()J` @kind direct;
  #L301174.  v4:= temp @kind wide;
  #L301176.  call `a`(v0, v1, v2, v3, v4) @signature `Le7/d;.a:(Le7/d$a;Ljava/lang/String;Ljava/lang/String;J)V` @kind interface;
  #L30117c.  return @kind void;
}
procedure `void` `b`(`e7.c` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Le7/c;.b:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3010fc.  v0:= 0I;
  #L3010fe.  call `a`(v1, v2, v0, v3) @signature `Le7/c;.a:(Ljava/lang/String;Ljava/lang/Throwable;[Ljava/lang/Object;)V` @kind virtual;
  #L301104.  return @kind void;
}
procedure `void` `c`(`e7.c` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.Throwable` v9 @kind object) @signature `Le7/c;.c:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L301190.  v0:= new `java.lang.StringBuilder`;
  #L301194.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30119a.  v1:= 0I;
  #L30119c.  v1:= new `java.lang.Object`[v1];
  #L3011a0.  call temp:= `h`(v7, v8, v1) @signature `Le7/c;.h:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L3011a6.  v8:= temp @kind object;
  #L3011a8.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3011ae.  v8:= "\n" @kind object;
  #L3011b2.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3011b8.  call temp:= `d`(v9) @signature `Le7/c;.d:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L3011be.  v8:= temp @kind object;
  #L3011c0.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3011c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3011cc.  v4:= temp @kind object;
  #L3011ce.  v1:= v7.`e7.c.a` @type ^`e7.d` @kind object;
  #L3011d2.  v2:= `@@e7.d$a.r` @type ^`e7.d$a` @kind object;
  #L3011d6.  v3:= v7.`e7.c.b` @type ^`java.lang.String` @kind object;
  #L3011da.  call temp:= `g`(v7) @signature `Le7/c;.g:()J` @kind direct;
  #L3011e0.  v5:= temp @kind wide;
  #L3011e2.  call `a`(v1, v2, v3, v4, v5) @signature `Le7/d;.a:(Le7/d$a;Ljava/lang/String;Ljava/lang/String;J)V` @kind interface;
  #L3011e8.  return @kind void;
}
procedure `void` `e`(`e7.c` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Le7/c;.e:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3011fc.  v0:= v6.`e7.c.a` @type ^`e7.d` @kind object;
  #L301200.  v1:= `@@e7.d$a.p` @type ^`e7.d$a` @kind object;
  #L301204.  v2:= v6.`e7.c.b` @type ^`java.lang.String` @kind object;
  #L301208.  v3:= 0I;
  #L30120a.  v3:= new `java.lang.Object`[v3];
  #L30120e.  call temp:= `h`(v6, v7, v3) @signature `Le7/c;.h:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L301214.  v3:= temp @kind object;
  #L301216.  call temp:= `g`(v6) @signature `Le7/c;.g:()J` @kind direct;
  #L30121c.  v4:= temp @kind wide;
  #L30121e.  call `a`(v0, v1, v2, v3, v4) @signature `Le7/d;.a:(Le7/d$a;Ljava/lang/String;Ljava/lang/String;J)V` @kind interface;
  #L301224.  return @kind void;
}
procedure `boolean` `f`(`e7.c` v2 @kind this) @signature `Le7/c;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L300fd8.  v0:= v2.`e7.c.a` @type ^`e7.d` @kind object;
  #L300fdc.  call temp:= `b`(v0) @signature `Le7/d;.b:()Le7/d$a;` @kind interface;
  #L300fe2.  v0:= temp @kind object;
  #L300fe4.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L300fea.  v0:= temp;
  #L300fec.  v1:= `@@e7.d$a.o` @type ^`e7.d$a` @kind object;
  #L300ff0.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L300ff6.  v1:= temp;
  #L300ff8.  if v0 > v1 then goto L301000;
  #L300ffc.  v0:= 1I;
  #L300ffe.  goto L301002;
  #L301000.  v0:= 0I;
  #L301002.  return v0;
}
procedure `void` `i`(`e7.c` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le7/c;.i:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L301238.  v0:= 0I;
  #L30123a.  call `j`(v1, v2, v0) @signature `Le7/c;.j:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L301240.  return @kind void;
}
procedure `void` `j`(`e7.c` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.Throwable` v8 @kind object) @signature `Le7/c;.j:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L301254.  v0:= 0I;
  #L301256.  v0:= new `java.lang.Object`[v0];
  #L30125a.  call temp:= `h`(v6, v7, v0) @signature `Le7/c;.h:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L301260.  v7:= temp @kind object;
  #L301262.  if v8 == 0 then goto L301296;
  #L301266.  v0:= new `java.lang.StringBuilder`;
  #L30126a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L301270.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L301276.  v7:= "\n" @kind object;
  #L30127a.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L301280.  call temp:= `d`(v8) @signature `Le7/c;.d:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L301286.  v7:= temp @kind object;
  #L301288.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30128e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L301294.  v7:= temp @kind object;
  #L301296.  v3:= v7 @kind object;
  #L301298.  v0:= v6.`e7.c.a` @type ^`e7.d` @kind object;
  #L30129c.  v1:= `@@e7.d$a.q` @type ^`e7.d$a` @kind object;
  #L3012a0.  v2:= v6.`e7.c.b` @type ^`java.lang.String` @kind object;
  #L3012a4.  call temp:= `g`(v6) @signature `Le7/c;.g:()J` @kind direct;
  #L3012aa.  v4:= temp @kind wide;
  #L3012ac.  call `a`(v0, v1, v2, v3, v4) @signature `Le7/d;.a:(Le7/d$a;Ljava/lang/String;Ljava/lang/String;J)V` @kind interface;
  #L3012b2.  return @kind void;
}
