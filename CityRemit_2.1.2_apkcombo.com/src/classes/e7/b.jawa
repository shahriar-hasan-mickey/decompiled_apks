record `e7.b` @kind class @AccessFlag PUBLIC extends `e7.d` @kind interface {
  `java.util.Set` `e7.b.a` @AccessFlag PRIVATE_FINAL;
  `e7.d$a` `e7.b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e7.b` v1 @kind this, `e7.d$a` v2 @kind object, `java.util.List` v3 @kind object) @signature `Le7/b;.<init>:(Le7/d$a;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L300ec4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L300eca.  if v3 == 0 then goto L300ede;
  #L300ece.  v0:= new `java.util.HashSet`;
  #L300ed2.  call `<init>`(v0, v3) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L300ed8.  v1.`e7.b.a` @type ^`java.util.Set` := v0 @kind object;
  #L300edc.  goto L300ee4;
  #L300ede.  v3:= 0I;
  #L300ee0.  v1.`e7.b.a` @type ^`java.util.Set` := v3 @kind object;
  #L300ee4.  v1.`e7.b.b` @type ^`e7.d$a` := v2 @kind object;
  #L300ee8.  return @kind void;
}
procedure `void` `a`(`e7.b` v1 @kind this, `e7.d$a` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `long` v5 ) @signature `Le7/b;.a:(Le7/d$a;Ljava/lang/String;Ljava/lang/String;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L300f44.  call temp:= `g`(v1, v2, v3) @signature `Le7/b;.g:(Le7/d$a;Ljava/lang/String;)Z` @kind virtual;
  #L300f4a.  v0:= temp;
  #L300f4c.  if v0 == 0 then goto L300fae;
  #L300f50.  call temp:= `c`(v1, v2, v3, v4, v5) @signature `Le7/b;.c:(Le7/d$a;Ljava/lang/String;Ljava/lang/String;J)Ljava/lang/String;` @kind virtual;
  #L300f56.  v4:= temp @kind object;
  #L300f58.  v5:= `@@e7.b$a.a` @type ^`int`[] @kind object;
  #L300f5c.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L300f62.  v2:= temp;
  #L300f64.  v2:= v5[v2];
  #L300f68.  v5:= 1I;
  #L300f6a.  if v2 == v5 then goto L300fa8;
  #L300f6e.  v5:= 2I;
  #L300f70.  if v2 == v5 then goto L300fa0;
  #L300f74.  v5:= 3I;
  #L300f76.  if v2 == v5 then goto L300f98;
  #L300f7a.  v5:= 4I;
  #L300f7c.  if v2 != v5 then goto L300f88;
  #L300f80.  call `d`(v1, v3, v4) @signature `Le7/b;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L300f86.  goto L300fae;
  #L300f88.  v2:= new `java.lang.RuntimeException`;
  #L300f8c.  v3:= "Should not reach here!" @kind object;
  #L300f90.  call `<init>`(v2, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L300f96.  throw v2;
  #L300f98.  call `f`(v1, v3, v4) @signature `Le7/b;.f:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L300f9e.  goto L300fae;
  #L300fa0.  call `h`(v1, v3, v4) @signature `Le7/b;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L300fa6.  goto L300fae;
  #L300fa8.  call `e`(v1, v3, v4) @signature `Le7/b;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L300fae.  return @kind void;
}
procedure `e7.d$a` `b`(`e7.b` v1 @kind this) @signature `Le7/b;.b:()Le7/d$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L300e94.  v0:= v1.`e7.b.b` @type ^`e7.d$a` @kind object;
  #L300e98.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`e7.b` v0 @kind this, `e7.d$a` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `long` v4 ) @signature `Le7/b;.c:(Le7/d$a;Ljava/lang/String;Ljava/lang/String;J)Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;

  #L300eac.  v0:= 0I;
  #L300eb2.  throw v0;
}
procedure `void` `d`(`e7.b` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Le7/b;.d:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PROTECTED {
    temp;

  #L300efc.  v0:= 0I;
  #L300f02.  throw v0;
}
procedure `void` `e`(`e7.b` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Le7/b;.e:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PROTECTED {
    temp;

  #L300f14.  v0:= 0I;
  #L300f1a.  throw v0;
}
procedure `void` `f`(`e7.b` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Le7/b;.f:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PROTECTED {
    temp;

  #L300f2c.  v0:= 0I;
  #L300f32.  throw v0;
}
procedure `boolean` `g`(`e7.b` v2 @kind this, `e7.d$a` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Le7/b;.g:(Le7/d$a;Ljava/lang/String;)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L300e34.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L300e3a.  v0:= temp;
  #L300e3c.  v1:= v2.`e7.b.b` @type ^`e7.d$a` @kind object;
  #L300e40.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L300e46.  v1:= temp;
  #L300e48.  if v0 < v1 then goto L300e80;
  #L300e4c.  v0:= v2.`e7.b.a` @type ^`java.util.Set` @kind object;
  #L300e50.  if v0 == 0 then goto L300e7c;
  #L300e54.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L300e5a.  v3:= temp;
  #L300e5c.  v0:= `@@e7.d$a.o` @type ^`e7.d$a` @kind object;
  #L300e60.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L300e66.  v0:= temp;
  #L300e68.  if v3 > v0 then goto L300e7c;
  #L300e6c.  v3:= v2.`e7.b.a` @type ^`java.util.Set` @kind object;
  #L300e70.  call temp:= `contains`(v3, v4) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L300e76.  v3:= temp;
  #L300e78.  if v3 == 0 then goto L300e80;
  #L300e7c.  v3:= 1I;
  #L300e7e.  goto L300e82;
  #L300e80.  v3:= 0I;
  #L300e82.  return v3;
}
procedure `void` `h`(`e7.b` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Le7/b;.h:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PROTECTED {
    temp;

  #L300fc0.  v0:= 0I;
  #L300fc6.  throw v0;
}
