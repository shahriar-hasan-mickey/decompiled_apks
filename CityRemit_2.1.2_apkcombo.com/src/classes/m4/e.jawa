record `m4.e` @kind class @AccessFlag PUBLIC_FINAL {
}
global `m4.b` `@@m4.e.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `m4.b` `@@m4.e.b` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lm4/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3db404.  v0:= new `m4.d`;
  #L3db408.  v1:= 0I;
  #L3db40a.  call `<init>`(v0, v1) @signature `Lm4/d;.<init>:(Lm4/c;)V` @kind direct;
  #L3db410.  `@@m4.e.a` @type ^`m4.b` := v0 @kind object;
  #L3db414.  `@@m4.e.b` @type ^`m4.b` := v0 @kind object;
  #L3db418.  return @kind void;
}
procedure `m4.b` `a`() @signature `Lm4/e;.a:()Lm4/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3db3ec.  v0:= `@@m4.e.b` @type ^`m4.b` @kind object;
  #L3db3f0.  return v0 @kind object;
}
