record `q2.a` @kind class @AccessFlag PUBLIC_FINAL extends `n2.a$b` @kind interface {
  `int` `q2.a.o` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `q2.a.p` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `q2.a.q` @AccessFlag PUBLIC_FINAL;
  `int` `q2.a.r` @AccessFlag PUBLIC_FINAL;
  `int` `q2.a.s` @AccessFlag PUBLIC_FINAL;
  `int` `q2.a.t` @AccessFlag PUBLIC_FINAL;
  `int` `q2.a.u` @AccessFlag PUBLIC_FINAL;
  `byte`[] `q2.a.v` @AccessFlag PUBLIC_FINAL;
}
global `android.os.Parcelable$Creator` `@@q2.a.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lq2/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L40d920.  v0:= new `q2.a$a`;
  #L40d924.  call `<init>`(v0) @signature `Lq2/a$a;.<init>:()V` @kind direct;
  #L40d92a.  `@@q2.a.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L40d92e.  return @kind void;
}
procedure `void` `<init>`(`q2.a` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `int` v6 , `int` v7 , `byte`[] v8 @kind object) @signature `Lq2/a;.<init>:(ILjava/lang/String;Ljava/lang/String;IIII[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40d9dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40d9e2.  v0.`q2.a.o` @type ^`int` := v1;
  #L40d9e6.  v0.`q2.a.p` @type ^`java.lang.String` := v2 @kind object;
  #L40d9ea.  v0.`q2.a.q` @type ^`java.lang.String` := v3 @kind object;
  #L40d9ee.  v0.`q2.a.r` @type ^`int` := v4;
  #L40d9f2.  v0.`q2.a.s` @type ^`int` := v5;
  #L40d9f6.  v0.`q2.a.t` @type ^`int` := v6;
  #L40d9fa.  v0.`q2.a.u` @type ^`int` := v7;
  #L40d9fe.  v0.`q2.a.v` @type ^`byte`[] := v8 @kind object;
  #L40da02.  return @kind void;
}
procedure `void` `<init>`(`q2.a` v1 @kind this, `android.os.Parcel` v2 @kind object) @signature `Lq2/a;.<init>:(Landroid/os/Parcel;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L40d940.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40d946.  call temp:= `readInt`(v2) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L40d94c.  v0:= temp;
  #L40d94e.  v1.`q2.a.o` @type ^`int` := v0;
  #L40d952.  call temp:= `readString`(v2) @signature `Landroid/os/Parcel;.readString:()Ljava/lang/String;` @kind virtual;
  #L40d958.  v0:= temp @kind object;
  #L40d95a.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L40d960.  v0:= temp @kind object;
  #L40d962.  v0:= (`java.lang.String`) v0 @kind object;
  #L40d966.  v1.`q2.a.p` @type ^`java.lang.String` := v0 @kind object;
  #L40d96a.  call temp:= `readString`(v2) @signature `Landroid/os/Parcel;.readString:()Ljava/lang/String;` @kind virtual;
  #L40d970.  v0:= temp @kind object;
  #L40d972.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L40d978.  v0:= temp @kind object;
  #L40d97a.  v0:= (`java.lang.String`) v0 @kind object;
  #L40d97e.  v1.`q2.a.q` @type ^`java.lang.String` := v0 @kind object;
  #L40d982.  call temp:= `readInt`(v2) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L40d988.  v0:= temp;
  #L40d98a.  v1.`q2.a.r` @type ^`int` := v0;
  #L40d98e.  call temp:= `readInt`(v2) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L40d994.  v0:= temp;
  #L40d996.  v1.`q2.a.s` @type ^`int` := v0;
  #L40d99a.  call temp:= `readInt`(v2) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L40d9a0.  v0:= temp;
  #L40d9a2.  v1.`q2.a.t` @type ^`int` := v0;
  #L40d9a6.  call temp:= `readInt`(v2) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L40d9ac.  v0:= temp;
  #L40d9ae.  v1.`q2.a.u` @type ^`int` := v0;
  #L40d9b2.  call temp:= `createByteArray`(v2) @signature `Landroid/os/Parcel;.createByteArray:()[B` @kind virtual;
  #L40d9b8.  v2:= temp @kind object;
  #L40d9ba.  call temp:= `j`(v2) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L40d9c0.  v2:= temp @kind object;
  #L40d9c2.  v2:= (`byte`[]) v2 @kind object;
  #L40d9c6.  v1.`q2.a.v` @type ^`byte`[] := v2 @kind object;
  #L40d9ca.  return @kind void;
}
procedure `q2.a` `a`(`s3.z` v10 @kind object) @signature `Lq2/a;.a:(Ls3/z;)Lq2/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L40d884.  call temp:= `m`(v10) @signature `Ls3/z;.m:()I` @kind virtual;
  #L40d88a.  v1:= temp;
  #L40d88c.  call temp:= `m`(v10) @signature `Ls3/z;.m:()I` @kind virtual;
  #L40d892.  v0:= temp;
  #L40d894.  v2:= `@@l5.d.a` @type ^`java.nio.charset.Charset` @kind object;
  #L40d898.  call temp:= `A`(v10, v0, v2) @signature `Ls3/z;.A:(ILjava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L40d89e.  v2:= temp @kind object;
  #L40d8a0.  call temp:= `m`(v10) @signature `Ls3/z;.m:()I` @kind virtual;
  #L40d8a6.  v0:= temp;
  #L40d8a8.  call temp:= `z`(v10, v0) @signature `Ls3/z;.z:(I)Ljava/lang/String;` @kind virtual;
  #L40d8ae.  v3:= temp @kind object;
  #L40d8b0.  call temp:= `m`(v10) @signature `Ls3/z;.m:()I` @kind virtual;
  #L40d8b6.  v4:= temp;
  #L40d8b8.  call temp:= `m`(v10) @signature `Ls3/z;.m:()I` @kind virtual;
  #L40d8be.  v5:= temp;
  #L40d8c0.  call temp:= `m`(v10) @signature `Ls3/z;.m:()I` @kind virtual;
  #L40d8c6.  v6:= temp;
  #L40d8c8.  call temp:= `m`(v10) @signature `Ls3/z;.m:()I` @kind virtual;
  #L40d8ce.  v7:= temp;
  #L40d8d0.  call temp:= `m`(v10) @signature `Ls3/z;.m:()I` @kind virtual;
  #L40d8d6.  v0:= temp;
  #L40d8d8.  v8:= new `byte`[v0];
  #L40d8dc.  v9:= 0I;
  #L40d8de.  call `j`(v10, v8, v9, v0) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L40d8e4.  v10:= new `q2.a`;
  #L40d8e8.  v0:= v10 @kind object;
  #L40d8ea.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lq2/a;.<init>:(ILjava/lang/String;Ljava/lang/String;IIII[B)V` @kind direct;
  #L40d8f0.  return v10 @kind object;
}
procedure `byte`[] `S`(`q2.a` v1 @kind this) @signature `Lq2/a;.S:()[B` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L40d78c.  call temp:= `a`(v1) @signature `Ln2/b;.a:(Ln2/a$b;)[B` @kind static;
  #L40d792.  v0:= temp @kind object;
  #L40d794.  return v0 @kind object;
}
procedure `void` `T`(`q2.a` v2 @kind this, `v1.w1$b` v3 @kind object) @signature `Lq2/a;.T:(Lv1/w1$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40da14.  v0:= v2.`q2.a.v` @type ^`byte`[] @kind object;
  #L40da18.  v1:= v2.`q2.a.o` @type ^`int`;
  #L40da1c.  call temp:= `G`(v3, v0, v1) @signature `Lv1/w1$b;.G:([BI)Lv1/w1$b;` @kind virtual;
  #L40da22.  return @kind void;
}
procedure `int` `describeContents`(`q2.a` v1 @kind this) @signature `Lq2/a;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40d7a8.  v0:= 0I;
  #L40d7aa.  return v0;
}
procedure `boolean` `equals`(`q2.a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lq2/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40d6d8.  v0:= 1I;
  #L40d6da.  if v4 != v5 then goto L40d6e0;
  #L40d6de.  return v0;
  #L40d6e0.  v1:= 0I;
  #L40d6e2.  if v5 == 0 then goto L40d77a;
  #L40d6e6.  v2:= constclass @type ^`q2.a` @kind object;
  #L40d6ea.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L40d6f0.  v3:= temp @kind object;
  #L40d6f2.  if v2 == v3 then goto L40d6f8;
  #L40d6f6.  goto L40d77a;
  #L40d6f8.  v5:= (`q2.a`) v5 @kind object;
  #L40d6fc.  v2:= v4.`q2.a.o` @type ^`int`;
  #L40d700.  v3:= v5.`q2.a.o` @type ^`int`;
  #L40d704.  if v2 != v3 then goto L40d776;
  #L40d708.  v2:= v4.`q2.a.p` @type ^`java.lang.String` @kind object;
  #L40d70c.  v3:= v5.`q2.a.p` @type ^`java.lang.String` @kind object;
  #L40d710.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40d716.  v2:= temp;
  #L40d718.  if v2 == 0 then goto L40d776;
  #L40d71c.  v2:= v4.`q2.a.q` @type ^`java.lang.String` @kind object;
  #L40d720.  v3:= v5.`q2.a.q` @type ^`java.lang.String` @kind object;
  #L40d724.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40d72a.  v2:= temp;
  #L40d72c.  if v2 == 0 then goto L40d776;
  #L40d730.  v2:= v4.`q2.a.r` @type ^`int`;
  #L40d734.  v3:= v5.`q2.a.r` @type ^`int`;
  #L40d738.  if v2 != v3 then goto L40d776;
  #L40d73c.  v2:= v4.`q2.a.s` @type ^`int`;
  #L40d740.  v3:= v5.`q2.a.s` @type ^`int`;
  #L40d744.  if v2 != v3 then goto L40d776;
  #L40d748.  v2:= v4.`q2.a.t` @type ^`int`;
  #L40d74c.  v3:= v5.`q2.a.t` @type ^`int`;
  #L40d750.  if v2 != v3 then goto L40d776;
  #L40d754.  v2:= v4.`q2.a.u` @type ^`int`;
  #L40d758.  v3:= v5.`q2.a.u` @type ^`int`;
  #L40d75c.  if v2 != v3 then goto L40d776;
  #L40d760.  v2:= v4.`q2.a.v` @type ^`byte`[] @kind object;
  #L40d764.  v5:= v5.`q2.a.v` @type ^`byte`[] @kind object;
  #L40d768.  call temp:= `equals`(v2, v5) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L40d76e.  v5:= temp;
  #L40d770.  if v5 == 0 then goto L40d776;
  #L40d774.  goto L40d778;
  #L40d776.  v0:= 0I;
  #L40d778.  return v0;
  #L40d77a.  return v1;
}
procedure `v1.j1` `h`(`q2.a` v1 @kind this) @signature `Lq2/a;.h:()Lv1/j1;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L40d904.  call temp:= `b`(v1) @signature `Ln2/b;.b:(Ln2/a$b;)Lv1/j1;` @kind static;
  #L40d90a.  v0:= temp @kind object;
  #L40d90c.  return v0 @kind object;
}
procedure `int` `hashCode`(`q2.a` v2 @kind this) @signature `Lq2/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40d7bc.  v0:= v2.`q2.a.o` @type ^`int`;
  #L40d7c0.  v1:= 527I;
  #L40d7c4.  v1:= v1 + v0 @kind int;
  #L40d7c6.  v1:= v1 * 31;
  #L40d7ca.  v0:= v2.`q2.a.p` @type ^`java.lang.String` @kind object;
  #L40d7ce.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L40d7d4.  v0:= temp;
  #L40d7d6.  v1:= v1 + v0 @kind int;
  #L40d7d8.  v1:= v1 * 31;
  #L40d7dc.  v0:= v2.`q2.a.q` @type ^`java.lang.String` @kind object;
  #L40d7e0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L40d7e6.  v0:= temp;
  #L40d7e8.  v1:= v1 + v0 @kind int;
  #L40d7ea.  v1:= v1 * 31;
  #L40d7ee.  v0:= v2.`q2.a.r` @type ^`int`;
  #L40d7f2.  v1:= v1 + v0 @kind int;
  #L40d7f4.  v1:= v1 * 31;
  #L40d7f8.  v0:= v2.`q2.a.s` @type ^`int`;
  #L40d7fc.  v1:= v1 + v0 @kind int;
  #L40d7fe.  v1:= v1 * 31;
  #L40d802.  v0:= v2.`q2.a.t` @type ^`int`;
  #L40d806.  v1:= v1 + v0 @kind int;
  #L40d808.  v1:= v1 * 31;
  #L40d80c.  v0:= v2.`q2.a.u` @type ^`int`;
  #L40d810.  v1:= v1 + v0 @kind int;
  #L40d812.  v1:= v1 * 31;
  #L40d816.  v0:= v2.`q2.a.v` @type ^`byte`[] @kind object;
  #L40d81a.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L40d820.  v0:= temp;
  #L40d822.  v1:= v1 + v0 @kind int;
  #L40d824.  return v1;
}
procedure `java.lang.String` `toString`(`q2.a` v2 @kind this) @signature `Lq2/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40d838.  v0:= new `java.lang.StringBuilder`;
  #L40d83c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40d842.  v1:= "Picture: mimeType=" @kind object;
  #L40d846.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d84c.  v1:= v2.`q2.a.p` @type ^`java.lang.String` @kind object;
  #L40d850.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d856.  v1:= ", description=" @kind object;
  #L40d85a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d860.  v1:= v2.`q2.a.q` @type ^`java.lang.String` @kind object;
  #L40d864.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d86a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40d870.  v0:= temp @kind object;
  #L40d872.  return v0 @kind object;
}
procedure `void` `writeToParcel`(`q2.a` v0 @kind this, `android.os.Parcel` v1 @kind object, `int` v2 ) @signature `Lq2/a;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;

  #L40da34.  v2:= v0.`q2.a.o` @type ^`int`;
  #L40da38.  call `writeInt`(v1, v2) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L40da3e.  v2:= v0.`q2.a.p` @type ^`java.lang.String` @kind object;
  #L40da42.  call `writeString`(v1, v2) @signature `Landroid/os/Parcel;.writeString:(Ljava/lang/String;)V` @kind virtual;
  #L40da48.  v2:= v0.`q2.a.q` @type ^`java.lang.String` @kind object;
  #L40da4c.  call `writeString`(v1, v2) @signature `Landroid/os/Parcel;.writeString:(Ljava/lang/String;)V` @kind virtual;
  #L40da52.  v2:= v0.`q2.a.r` @type ^`int`;
  #L40da56.  call `writeInt`(v1, v2) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L40da5c.  v2:= v0.`q2.a.s` @type ^`int`;
  #L40da60.  call `writeInt`(v1, v2) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L40da66.  v2:= v0.`q2.a.t` @type ^`int`;
  #L40da6a.  call `writeInt`(v1, v2) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L40da70.  v2:= v0.`q2.a.u` @type ^`int`;
  #L40da74.  call `writeInt`(v1, v2) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L40da7a.  v2:= v0.`q2.a.v` @type ^`byte`[] @kind object;
  #L40da7e.  call `writeByteArray`(v1, v2) @signature `Landroid/os/Parcel;.writeByteArray:([B)V` @kind virtual;
  #L40da84.  return @kind void;
}
