record `cc.n` @kind class @AccessFlag PUBLIC extends `cc.a` @kind class {
}
procedure `void` `<init>`(`cc.n` v0 @kind this, `tb.l` v1 @kind object) @signature `Lcc/n;.<init>:(Ltb/l;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1fbc54.  call `<init>`(v0, v1) @signature `Lcc/a;.<init>:(Ltb/l;)V` @kind direct;
  #L1fbc5a.  return @kind void;
}
procedure `java.lang.Object` `i`(`cc.n` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcc/n;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L1fbbd0.  call temp:= `i`(v3, v4) @signature `Lcc/c;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L1fbbd6.  v0:= temp @kind object;
  #L1fbbd8.  v1:= `@@cc.b.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L1fbbdc.  if v0 != v1 then goto L1fbbe2;
  #L1fbbe0.  return v1 @kind object;
  #L1fbbe2.  v2:= `@@cc.b.c` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L1fbbe6.  if v0 != v2 then goto L1fbc02;
  #L1fbbea.  call temp:= `k`(v3, v4) @signature `Lcc/c;.k:(Ljava/lang/Object;)Lcc/q;` @kind virtual;
  #L1fbbf0.  v0:= temp @kind object;
  #L1fbbf2.  if v0 != 0 then goto L1fbbf8;
  #L1fbbf6.  return v1 @kind object;
  #L1fbbf8.  v1:= instanceof @variable v0 @type ^`cc.j` @kind boolean;
  #L1fbbfc.  if v1 == 0 then goto L1fbbd0;
  #L1fbc00.  return v0 @kind object;
  #L1fbc02.  v4:= instanceof @variable v0 @type ^`cc.j` @kind boolean;
  #L1fbc06.  if v4 == 0 then goto L1fbc0c;
  #L1fbc0a.  return v0 @kind object;
  #L1fbc0c.  v4:= new `java.lang.IllegalStateException`;
  #L1fbc10.  v1:= new `java.lang.StringBuilder`;
  #L1fbc14.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fbc1a.  v2:= "Invalid offerInternal result " @kind object;
  #L1fbc1e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fbc24.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fbc2a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fbc30.  v0:= temp @kind object;
  #L1fbc32.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fbc38.  v0:= temp @kind object;
  #L1fbc3a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fbc40.  throw v4;
}
procedure `boolean` `r`(`cc.n` v1 @kind this) @signature `Lcc/n;.r:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L1fbba8.  v0:= 1I;
  #L1fbbaa.  return v0;
}
procedure `boolean` `s`(`cc.n` v1 @kind this) @signature `Lcc/n;.s:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L1fbbbc.  v0:= 1I;
  #L1fbbbe.  return v0;
}
