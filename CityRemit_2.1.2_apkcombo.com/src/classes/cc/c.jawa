record `cc.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `cc.t` @kind interface {
  `tb.l` `cc.c.b` @AccessFlag PROTECTED_FINAL;
  `kotlinx.coroutines.internal.p` `cc.c.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `cc.c.onCloseHandler` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
}
procedure `void` `<clinit>`() @signature `Lcc/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1fac3c.  v0:= constclass @type ^`cc.c` @kind object;
  #L1fac40.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L1fac44.  v2:= "onCloseHandler" @kind object;
  #L1fac48.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L1fac4e.  return @kind void;
}
procedure `void` `<init>`(`cc.c` v0 @kind this, `tb.l` v1 @kind object) @signature `Lcc/c;.<init>:(Ltb/l;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1fac60.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fac66.  v0.`cc.c.b` @type ^`tb.l` := v1 @kind object;
  #L1fac6a.  v1:= new `kotlinx.coroutines.internal.p`;
  #L1fac6e.  call `<init>`(v1) @signature `Lkotlinx/coroutines/internal/p;.<init>:()V` @kind direct;
  #L1fac74.  v0.`cc.c.c` @type ^`kotlinx.coroutines.internal.p` := v1 @kind object;
  #L1fac78.  v1:= 0I;
  #L1fac7a.  v0.`cc.c.onCloseHandler` @type ^`java.lang.Object` := v1 @kind object;
  #L1fac7e.  return @kind void;
}
procedure `int` `b`(`cc.c` v4 @kind this) @signature `Lcc/c;.b:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fa91c.  v0:= v4.`cc.c.c` @type ^`kotlinx.coroutines.internal.p` @kind object;
  #L1fa920.  call temp:= `o`(v0) @signature `Lkotlinx/coroutines/internal/r;.o:()Ljava/lang/Object;` @kind virtual;
  #L1fa926.  v1:= temp @kind object;
  #L1fa928.  v1:= (`kotlinx.coroutines.internal.r`) v1 @kind object;
  #L1fa92c.  v2:= 0I;
  #L1fa92e.  call temp:= `a`(v1, v0) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1fa934.  v3:= temp;
  #L1fa936.  if v3 != 0 then goto L1fa950;
  #L1fa93a.  v3:= instanceof @variable v1 @type ^`kotlinx.coroutines.internal.r` @kind boolean;
  #L1fa93e.  if v3 == 0 then goto L1fa946;
  #L1fa942.  v2:= v2 + 1;
  #L1fa946.  call temp:= `p`(v1) @signature `Lkotlinx/coroutines/internal/r;.p:()Lkotlinx/coroutines/internal/r;` @kind virtual;
  #L1fa94c.  v1:= temp @kind object;
  #L1fa94e.  goto L1fa92e;
  #L1fa950.  return v2;
}
procedure `java.lang.String` `f`(`cc.c` v3 @kind this) @signature `Lcc/c;.f:()Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1faa9c.  v0:= v3.`cc.c.c` @type ^`kotlinx.coroutines.internal.p` @kind object;
  #L1faaa0.  call temp:= `p`(v0) @signature `Lkotlinx/coroutines/internal/r;.p:()Lkotlinx/coroutines/internal/r;` @kind virtual;
  #L1faaa6.  v0:= temp @kind object;
  #L1faaa8.  v1:= v3.`cc.c.c` @type ^`kotlinx.coroutines.internal.p` @kind object;
  #L1faaac.  if v0 != v1 then goto L1faab6;
  #L1faab0.  v0:= "EmptyQueue" @kind object;
  #L1faab4.  return v0 @kind object;
  #L1faab6.  v1:= instanceof @variable v0 @type ^`cc.j` @kind boolean;
  #L1faaba.  if v1 == 0 then goto L1faac8;
  #L1faabe.  call temp:= `toString`(v0) @signature `Lkotlinx/coroutines/internal/r;.toString:()Ljava/lang/String;` @kind virtual;
  #L1faac4.  v1:= temp @kind object;
  #L1faac6.  goto L1fab06;
  #L1faac8.  v1:= instanceof @variable v0 @type ^`cc.o` @kind boolean;
  #L1faacc.  if v1 == 0 then goto L1faad6;
  #L1faad0.  v1:= "ReceiveQueued" @kind object;
  #L1faad4.  goto L1fab06;
  #L1faad6.  v1:= instanceof @variable v0 @type ^`cc.s` @kind boolean;
  #L1faada.  if v1 == 0 then goto L1faae4;
  #L1faade.  v1:= "SendQueued" @kind object;
  #L1faae2.  goto L1fab06;
  #L1faae4.  v1:= new `java.lang.StringBuilder`;
  #L1faae8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1faaee.  v2:= "UNEXPECTED:" @kind object;
  #L1faaf2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1faaf8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1faafe.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fab04.  v1:= temp @kind object;
  #L1fab06.  v2:= v3.`cc.c.c` @type ^`kotlinx.coroutines.internal.p` @kind object;
  #L1fab0a.  call temp:= `q`(v2) @signature `Lkotlinx/coroutines/internal/r;.q:()Lkotlinx/coroutines/internal/r;` @kind virtual;
  #L1fab10.  v2:= temp @kind object;
  #L1fab12.  if v2 == v0 then goto L1fab76;
  #L1fab16.  v0:= new `java.lang.StringBuilder`;
  #L1fab1a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fab20.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fab26.  v1:= ",queueSize=" @kind object;
  #L1fab2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fab30.  call temp:= `b`(v3) @signature `Lcc/c;.b:()I` @kind direct;
  #L1fab36.  v1:= temp;
  #L1fab38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fab3e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fab44.  v1:= temp @kind object;
  #L1fab46.  v0:= instanceof @variable v2 @type ^`cc.j` @kind boolean;
  #L1fab4a.  if v0 == 0 then goto L1fab76;
  #L1fab4e.  v0:= new `java.lang.StringBuilder`;
  #L1fab52.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fab58.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fab5e.  v1:= ",closedForSend=" @kind object;
  #L1fab62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fab68.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fab6e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fab74.  v1:= temp @kind object;
  #L1fab76.  return v1 @kind object;
}
procedure `void` `g`(`cc.c` v5 @kind this, `cc.j` v6 @kind object) @signature `Lcc/c;.g:(Lcc/j;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1fac90.  v0:= 0I;
  #L1fac92.  v1:= 1I;
  #L1fac94.  call temp:= `b`(v0, v1, v0) @signature `Lkotlinx/coroutines/internal/m;.b:(Ljava/lang/Object;ILkotlin/jvm/internal/g;)Ljava/lang/Object;` @kind static;
  #L1fac9a.  v2:= temp @kind object;
  #L1fac9c.  call temp:= `q`(v6) @signature `Lkotlinx/coroutines/internal/r;.q:()Lkotlinx/coroutines/internal/r;` @kind virtual;
  #L1faca2.  v3:= temp @kind object;
  #L1faca4.  v4:= instanceof @variable v3 @type ^`cc.o` @kind boolean;
  #L1faca8.  if v4 == 0 then goto L1facb2;
  #L1facac.  v3:= (`cc.o`) v3 @kind object;
  #L1facb0.  goto L1facb4;
  #L1facb2.  v3:= v0 @kind object;
  #L1facb4.  if v3 != 0 then goto L1fad04;
  #L1facb8.  if v2 == 0 then goto L1facfc;
  #L1facbc.  v0:= instanceof @variable v2 @type ^`java.util.ArrayList` @kind boolean;
  #L1facc0.  if v0 != 0 then goto L1facd0;
  #L1facc4.  v2:= (`cc.o`) v2 @kind object;
  #L1facc8.  call `z`(v2, v6) @signature `Lcc/o;.z:(Lcc/j;)V` @kind virtual;
  #L1facce.  goto L1facfc;
  #L1facd0.  v2:= (`java.util.ArrayList`) v2 @kind object;
  #L1facd4.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1facda.  v0:= temp;
  #L1facdc.  v0:= v0 - v1 @kind int;
  #L1facde.  v1:= -1I;
  #L1face0.  if v1 >= v0 then goto L1facfc;
  #L1face4.  call temp:= `get`(v2, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1facea.  v1:= temp @kind object;
  #L1facec.  v1:= (`cc.o`) v1 @kind object;
  #L1facf0.  call `z`(v1, v6) @signature `Lcc/o;.z:(Lcc/j;)V` @kind virtual;
  #L1facf6.  v0:= v0 + -1;
  #L1facfa.  goto L1facde;
  #L1facfc.  call `j`(v5, v6) @signature `Lcc/c;.j:(Lkotlinx/coroutines/internal/r;)V` @kind virtual;
  #L1fad02.  return @kind void;
  #L1fad04.  call temp:= `u`(v3) @signature `Lkotlinx/coroutines/internal/r;.u:()Z` @kind virtual;
  #L1fad0a.  v4:= temp;
  #L1fad0c.  if v4 != 0 then goto L1fad18;
  #L1fad10.  call `r`(v3) @signature `Lkotlinx/coroutines/internal/r;.r:()V` @kind virtual;
  #L1fad16.  goto L1fac9c;
  #L1fad18.  call temp:= `c`(v2, v3) @signature `Lkotlinx/coroutines/internal/m;.c:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1fad1e.  v2:= temp @kind object;
  #L1fad20.  goto L1fac9c;
}
procedure `java.lang.Throwable` `h`(`cc.c` v0 @kind this, `cc.j` v1 @kind object) @signature `Lcc/c;.h:(Lcc/j;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;

  #L1fac04.  call `g`(v0, v1) @signature `Lcc/c;.g:(Lcc/j;)V` @kind direct;
  #L1fac0a.  call temp:= `F`(v1) @signature `Lcc/j;.F:()Ljava/lang/Throwable;` @kind virtual;
  #L1fac10.  v1:= temp @kind object;
  #L1fac12.  return v1 @kind object;
}
procedure `java.lang.Object` `a`(`cc.c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcc/c;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fa9d0.  call temp:= `i`(v3, v4) @signature `Lcc/c;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1fa9d6.  v4:= temp @kind object;
  #L1fa9d8.  v0:= `@@cc.b.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L1fa9dc.  if v4 != v0 then goto L1fa9f2;
  #L1fa9e0.  v4:= `@@cc.i.a` @type ^`cc.i$b` @kind object;
  #L1fa9e4.  v0:= `@@jb.s.a` @type ^`jb.s` @kind object;
  #L1fa9e8.  call temp:= `c`(v4, v0) @signature `Lcc/i$b;.c:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1fa9ee.  v4:= temp @kind object;
  #L1fa9f0.  goto L1faa3a;
  #L1fa9f2.  v0:= `@@cc.b.c` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L1fa9f6.  if v4 != v0 then goto L1faa1a;
  #L1fa9fa.  call temp:= `d`(v3) @signature `Lcc/c;.d:()Lcc/j;` @kind virtual;
  #L1faa00.  v4:= temp @kind object;
  #L1faa02.  if v4 != 0 then goto L1faa14;
  #L1faa06.  v4:= `@@cc.i.a` @type ^`cc.i$b` @kind object;
  #L1faa0a.  call temp:= `b`(v4) @signature `Lcc/i$b;.b:()Ljava/lang/Object;` @kind virtual;
  #L1faa10.  v4:= temp @kind object;
  #L1faa12.  return v4 @kind object;
  #L1faa14.  v0:= `@@cc.i.a` @type ^`cc.i$b` @kind object;
  #L1faa18.  goto L1faa2a;
  #L1faa1a.  v0:= instanceof @variable v4 @type ^`cc.j` @kind boolean;
  #L1faa1e.  if v0 == 0 then goto L1faa3c;
  #L1faa22.  v0:= `@@cc.i.a` @type ^`cc.i$b` @kind object;
  #L1faa26.  v4:= (`cc.j`) v4 @kind object;
  #L1faa2a.  call temp:= `h`(v3, v4) @signature `Lcc/c;.h:(Lcc/j;)Ljava/lang/Throwable;` @kind direct;
  #L1faa30.  v4:= temp @kind object;
  #L1faa32.  call temp:= `a`(v0, v4) @signature `Lcc/i$b;.a:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind virtual;
  #L1faa38.  v4:= temp @kind object;
  #L1faa3a.  return v4 @kind object;
  #L1faa3c.  v0:= new `java.lang.IllegalStateException`;
  #L1faa40.  v1:= new `java.lang.StringBuilder`;
  #L1faa44.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1faa4a.  v2:= "trySend returned " @kind object;
  #L1faa4e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1faa54.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1faa5a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1faa60.  v4:= temp @kind object;
  #L1faa62.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1faa68.  v4:= temp @kind object;
  #L1faa6a.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1faa70.  throw v0;
}
procedure `java.lang.String` `c`(`cc.c` v1 @kind this) @signature `Lcc/c;.c:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1faa84.  v0:= "" @kind object;
  #L1faa88.  return v0 @kind object;
}
procedure `cc.j` `d`(`cc.c` v3 @kind this) @signature `Lcc/c;.d:()Lcc/j;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fa7c4.  v0:= v3.`cc.c.c` @type ^`kotlinx.coroutines.internal.p` @kind object;
  #L1fa7c8.  call temp:= `q`(v0) @signature `Lkotlinx/coroutines/internal/r;.q:()Lkotlinx/coroutines/internal/r;` @kind virtual;
  #L1fa7ce.  v0:= temp @kind object;
  #L1fa7d0.  v1:= instanceof @variable v0 @type ^`cc.j` @kind boolean;
  #L1fa7d4.  v2:= 0I;
  #L1fa7d6.  if v1 == 0 then goto L1fa7e0;
  #L1fa7da.  v0:= (`cc.j`) v0 @kind object;
  #L1fa7de.  goto L1fa7e2;
  #L1fa7e0.  v0:= v2 @kind object;
  #L1fa7e2.  if v0 == 0 then goto L1fa7ee;
  #L1fa7e6.  call `g`(v3, v0) @signature `Lcc/c;.g:(Lcc/j;)V` @kind direct;
  #L1fa7ec.  v2:= v0 @kind object;
  #L1fa7ee.  return v2 @kind object;
}
procedure `kotlinx.coroutines.internal.p` `e`(`cc.c` v1 @kind this) @signature `Lcc/c;.e:()Lkotlinx/coroutines/internal/p;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L1fac24.  v0:= v1.`cc.c.c` @type ^`kotlinx.coroutines.internal.p` @kind object;
  #L1fac28.  return v0 @kind object;
}
procedure `java.lang.Object` `i`(`cc.c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcc/c;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L1fa964.  call temp:= `l`(v3) @signature `Lcc/c;.l:()Lcc/q;` @kind virtual;
  #L1fa96a.  v0:= temp @kind object;
  #L1fa96c.  if v0 != 0 then goto L1fa976;
  #L1fa970.  v4:= `@@cc.b.c` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L1fa974.  return v4 @kind object;
  #L1fa976.  v1:= 0I;
  #L1fa978.  call temp:= `f`(v0, v4, v1) @signature `Lcc/q;.f:(Ljava/lang/Object;Lkotlinx/coroutines/internal/r$b;)Lkotlinx/coroutines/internal/f0;` @kind interface;
  #L1fa97e.  v1:= temp @kind object;
  #L1fa980.  if v1 == 0 then goto L1fa964;
  #L1fa984.  call temp:= `a`() @signature `Lac/p0;.a:()Z` @kind static;
  #L1fa98a.  v2:= temp;
  #L1fa98c.  if v2 == 0 then goto L1fa9b0;
  #L1fa990.  v2:= `@@ac.m.a` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L1fa994.  if v1 != v2 then goto L1fa99c;
  #L1fa998.  v1:= 1I;
  #L1fa99a.  goto L1fa99e;
  #L1fa99c.  v1:= 0I;
  #L1fa99e.  if v1 == 0 then goto L1fa9a4;
  #L1fa9a2.  goto L1fa9b0;
  #L1fa9a4.  v4:= new `java.lang.AssertionError`;
  #L1fa9a8.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1fa9ae.  throw v4;
  #L1fa9b0.  call `b`(v0, v4) @signature `Lcc/q;.b:(Ljava/lang/Object;)V` @kind interface;
  #L1fa9b6.  call temp:= `e`(v0) @signature `Lcc/q;.e:()Ljava/lang/Object;` @kind interface;
  #L1fa9bc.  v4:= temp @kind object;
  #L1fa9be.  return v4 @kind object;
}
procedure `void` `j`(`cc.c` v0 @kind this, `kotlinx.coroutines.internal.r` v1 @kind object) @signature `Lcc/c;.j:(Lkotlinx/coroutines/internal/r;)V` @AccessFlag PROTECTED {
    temp;

  #L1fad34.  return @kind void;
}
procedure `cc.q` `k`(`cc.c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcc/c;.k:(Ljava/lang/Object;)Lcc/q;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fa800.  v0:= v3.`cc.c.c` @type ^`kotlinx.coroutines.internal.p` @kind object;
  #L1fa804.  v1:= new `cc.c$a`;
  #L1fa808.  call `<init>`(v1, v4) @signature `Lcc/c$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1fa80e.  call temp:= `q`(v0) @signature `Lkotlinx/coroutines/internal/r;.q:()Lkotlinx/coroutines/internal/r;` @kind virtual;
  #L1fa814.  v4:= temp @kind object;
  #L1fa816.  v2:= instanceof @variable v4 @type ^`cc.q` @kind boolean;
  #L1fa81a.  if v2 == 0 then goto L1fa824;
  #L1fa81e.  v4:= (`cc.q`) v4 @kind object;
  #L1fa822.  return v4 @kind object;
  #L1fa824.  call temp:= `j`(v4, v1, v0) @signature `Lkotlinx/coroutines/internal/r;.j:(Lkotlinx/coroutines/internal/r;Lkotlinx/coroutines/internal/r;)Z` @kind virtual;
  #L1fa82a.  v4:= temp;
  #L1fa82c.  if v4 == 0 then goto L1fa80e;
  #L1fa830.  v4:= 0I;
  #L1fa832.  return v4 @kind object;
}
procedure `cc.q` `l`(`cc.c` v4 @kind this) @signature `Lcc/c;.l:()Lcc/q;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fa844.  v0:= v4.`cc.c.c` @type ^`kotlinx.coroutines.internal.p` @kind object;
  #L1fa848.  call temp:= `o`(v0) @signature `Lkotlinx/coroutines/internal/r;.o:()Ljava/lang/Object;` @kind virtual;
  #L1fa84e.  v1:= temp @kind object;
  #L1fa850.  v1:= (`kotlinx.coroutines.internal.r`) v1 @kind object;
  #L1fa854.  v2:= 0I;
  #L1fa856.  if v1 != v0 then goto L1fa85e;
  #L1fa85a.  v1:= v2 @kind object;
  #L1fa85c.  goto L1fa890;
  #L1fa85e.  v3:= instanceof @variable v1 @type ^`cc.q` @kind boolean;
  #L1fa862.  if v3 != 0 then goto L1fa868;
  #L1fa866.  goto L1fa85a;
  #L1fa868.  v2:= v1 @kind object;
  #L1fa86a.  v2:= (`cc.q`) v2 @kind object;
  #L1fa86e.  v2:= instanceof @variable v2 @type ^`cc.j` @kind boolean;
  #L1fa872.  if v2 == 0 then goto L1fa884;
  #L1fa876.  call temp:= `t`(v1) @signature `Lkotlinx/coroutines/internal/r;.t:()Z` @kind virtual;
  #L1fa87c.  v2:= temp;
  #L1fa87e.  if v2 != 0 then goto L1fa884;
  #L1fa882.  goto L1fa890;
  #L1fa884.  call temp:= `v`(v1) @signature `Lkotlinx/coroutines/internal/r;.v:()Lkotlinx/coroutines/internal/r;` @kind virtual;
  #L1fa88a.  v2:= temp @kind object;
  #L1fa88c.  if v2 != 0 then goto L1fa896;
  #L1fa890.  v1:= (`cc.q`) v1 @kind object;
  #L1fa894.  return v1 @kind object;
  #L1fa896.  call `s`(v2) @signature `Lkotlinx/coroutines/internal/r;.s:()V` @kind virtual;
  #L1fa89c.  goto L1fa848;
}
procedure `cc.s` `m`(`cc.c` v4 @kind this) @signature `Lcc/c;.m:()Lcc/s;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fa8b0.  v0:= v4.`cc.c.c` @type ^`kotlinx.coroutines.internal.p` @kind object;
  #L1fa8b4.  call temp:= `o`(v0) @signature `Lkotlinx/coroutines/internal/r;.o:()Ljava/lang/Object;` @kind virtual;
  #L1fa8ba.  v1:= temp @kind object;
  #L1fa8bc.  v1:= (`kotlinx.coroutines.internal.r`) v1 @kind object;
  #L1fa8c0.  v2:= 0I;
  #L1fa8c2.  if v1 != v0 then goto L1fa8ca;
  #L1fa8c6.  v1:= v2 @kind object;
  #L1fa8c8.  goto L1fa8fc;
  #L1fa8ca.  v3:= instanceof @variable v1 @type ^`cc.s` @kind boolean;
  #L1fa8ce.  if v3 != 0 then goto L1fa8d4;
  #L1fa8d2.  goto L1fa8c6;
  #L1fa8d4.  v2:= v1 @kind object;
  #L1fa8d6.  v2:= (`cc.s`) v2 @kind object;
  #L1fa8da.  v2:= instanceof @variable v2 @type ^`cc.j` @kind boolean;
  #L1fa8de.  if v2 == 0 then goto L1fa8f0;
  #L1fa8e2.  call temp:= `t`(v1) @signature `Lkotlinx/coroutines/internal/r;.t:()Z` @kind virtual;
  #L1fa8e8.  v2:= temp;
  #L1fa8ea.  if v2 != 0 then goto L1fa8f0;
  #L1fa8ee.  goto L1fa8fc;
  #L1fa8f0.  call temp:= `v`(v1) @signature `Lkotlinx/coroutines/internal/r;.v:()Lkotlinx/coroutines/internal/r;` @kind virtual;
  #L1fa8f6.  v2:= temp @kind object;
  #L1fa8f8.  if v2 != 0 then goto L1fa902;
  #L1fa8fc.  v1:= (`cc.s`) v1 @kind object;
  #L1fa900.  return v1 @kind object;
  #L1fa902.  call `s`(v2) @signature `Lkotlinx/coroutines/internal/r;.s:()V` @kind virtual;
  #L1fa908.  goto L1fa8b4;
}
procedure `java.lang.String` `toString`(`cc.c` v2 @kind this) @signature `Lcc/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1fab88.  v0:= new `java.lang.StringBuilder`;
  #L1fab8c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fab92.  call temp:= `a`(v2) @signature `Lac/q0;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1fab98.  v1:= temp @kind object;
  #L1fab9a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1faba0.  v1:= 64I;
  #L1faba4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fabaa.  call temp:= `b`(v2) @signature `Lac/q0;.b:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1fabb0.  v1:= temp @kind object;
  #L1fabb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fabb8.  v1:= 123I;
  #L1fabbc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fabc2.  call temp:= `f`(v2) @signature `Lcc/c;.f:()Ljava/lang/String;` @kind direct;
  #L1fabc8.  v1:= temp @kind object;
  #L1fabca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fabd0.  v1:= 125I;
  #L1fabd4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fabda.  call temp:= `c`(v2) @signature `Lcc/c;.c:()Ljava/lang/String;` @kind virtual;
  #L1fabe0.  v1:= temp @kind object;
  #L1fabe2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fabe8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fabee.  v0:= temp @kind object;
  #L1fabf0.  return v0 @kind object;
}
