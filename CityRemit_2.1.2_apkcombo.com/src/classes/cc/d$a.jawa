record `cc.d$a` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@cc.d$a.a` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcc/d$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1fad48.  call temp:= `values`() @signature `Lcc/e;.values:()[Lcc/e;` @kind static;
  #L1fad4e.  v0:= temp @kind object;
  #L1fad50.  v0:= length @variable v0;
  #L1fad52.  v0:= new `int`[v0];
  #L1fad56.  v1:= `@@cc.e.o` @type ^`cc.e` @kind object;
  #L1fad5a.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1fad60.  v1:= temp;
  #L1fad62.  v2:= 1I;
  #L1fad64.  v0[v1]:= v2;
  #L1fad68.  v1:= `@@cc.e.q` @type ^`cc.e` @kind object;
  #L1fad6c.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1fad72.  v1:= temp;
  #L1fad74.  v2:= 2I;
  #L1fad76.  v0[v1]:= v2;
  #L1fad7a.  v1:= `@@cc.e.p` @type ^`cc.e` @kind object;
  #L1fad7e.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1fad84.  v1:= temp;
  #L1fad86.  v2:= 3I;
  #L1fad88.  v0[v1]:= v2;
  #L1fad8c.  `@@cc.d$a.a` @type ^`int`[] := v0 @kind object;
  #L1fad90.  return @kind void;
}
