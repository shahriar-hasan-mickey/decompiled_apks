record `cc.o` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.internal.r` @kind class, `cc.q` @kind interface {
}
procedure `void` `<init>`(`cc.o` v0 @kind this) @signature `Lcc/o;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1fbca0.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/r;.<init>:()V` @kind direct;
  #L1fbca6.  return @kind void;
}
procedure `java.lang.Object` `e`(`cc.o` v1 @kind this) @signature `Lcc/o;.e:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1fbc6c.  call temp:= `y`(v1) @signature `Lcc/o;.y:()Lkotlinx/coroutines/internal/f0;` @kind virtual;
  #L1fbc72.  v0:= temp @kind object;
  #L1fbc74.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.f0` `y`(`cc.o` v1 @kind this) @signature `Lcc/o;.y:()Lkotlinx/coroutines/internal/f0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fbc88.  v0:= `@@cc.b.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L1fbc8c.  return v0 @kind object;
}
procedure `void` `z`(`cc.j` v0 @kind object) @signature `Lcc/o;.z:(Lcc/j;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
