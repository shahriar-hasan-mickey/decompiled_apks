record `cc.a$d` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.r$a` @kind class {
  `cc.a` `cc.a$d.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`cc.a$d` v0 @kind this, `kotlinx.coroutines.internal.r` v1 @kind object, `cc.a` v2 @kind object) @signature `Lcc/a$d;.<init>:(Lkotlinx/coroutines/internal/r;Lcc/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1fa474.  v0.`cc.a$d.d` @type ^`cc.a` := v2 @kind object;
  #L1fa478.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/r$a;.<init>:(Lkotlinx/coroutines/internal/r;)V` @kind direct;
  #L1fa47e.  return @kind void;
}
procedure `java.lang.Object` `g`(`cc.a$d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcc/a$d;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1fa424.  v1:= (`kotlinx.coroutines.internal.r`) v1 @kind object;
  #L1fa428.  call temp:= `i`(v0, v1) @signature `Lcc/a$d;.i:(Lkotlinx/coroutines/internal/r;)Ljava/lang/Object;` @kind virtual;
  #L1fa42e.  v1:= temp @kind object;
  #L1fa430.  return v1 @kind object;
}
procedure `java.lang.Object` `i`(`cc.a$d` v0 @kind this, `kotlinx.coroutines.internal.r` v1 @kind object) @signature `Lcc/a$d;.i:(Lkotlinx/coroutines/internal/r;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L1fa444.  v1:= v0.`cc.a$d.d` @type ^`cc.a` @kind object;
  #L1fa448.  call temp:= `s`(v1) @signature `Lcc/a;.s:()Z` @kind virtual;
  #L1fa44e.  v1:= temp;
  #L1fa450.  if v1 == 0 then goto L1fa458;
  #L1fa454.  v1:= 0I;
  #L1fa456.  goto L1fa460;
  #L1fa458.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/q;.a:()Ljava/lang/Object;` @kind static;
  #L1fa45e.  v1:= temp @kind object;
  #L1fa460.  return v1 @kind object;
}
