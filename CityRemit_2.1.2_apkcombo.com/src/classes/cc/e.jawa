record `cc.e` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `cc.e` `@@cc.e.o` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `cc.e` `@@cc.e.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `cc.e` `@@cc.e.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `cc.e`[] `@@cc.e.r` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcc/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1fb348.  v0:= new `cc.e`;
  #L1fb34c.  v1:= "SUSPEND" @kind object;
  #L1fb350.  v2:= 0I;
  #L1fb352.  call `<init>`(v0, v1, v2) @signature `Lcc/e;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1fb358.  `@@cc.e.o` @type ^`cc.e` := v0 @kind object;
  #L1fb35c.  v0:= new `cc.e`;
  #L1fb360.  v1:= "DROP_OLDEST" @kind object;
  #L1fb364.  v2:= 1I;
  #L1fb366.  call `<init>`(v0, v1, v2) @signature `Lcc/e;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1fb36c.  `@@cc.e.p` @type ^`cc.e` := v0 @kind object;
  #L1fb370.  v0:= new `cc.e`;
  #L1fb374.  v1:= "DROP_LATEST" @kind object;
  #L1fb378.  v2:= 2I;
  #L1fb37a.  call `<init>`(v0, v1, v2) @signature `Lcc/e;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1fb380.  `@@cc.e.q` @type ^`cc.e` := v0 @kind object;
  #L1fb384.  call temp:= `c`() @signature `Lcc/e;.c:()[Lcc/e;` @kind static;
  #L1fb38a.  v0:= temp @kind object;
  #L1fb38c.  `@@cc.e.r` @type ^`cc.e`[] := v0 @kind object;
  #L1fb390.  return @kind void;
}
procedure `void` `<init>`(`cc.e` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcc/e;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1fb3a4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1fb3aa.  return @kind void;
}
procedure `cc.e`[] `c`() @signature `Lcc/e;.c:()[Lcc/e;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L1fb2ec.  v0:= 3I;
  #L1fb2ee.  v0:= new `cc.e`[v0];
  #L1fb2f2.  v1:= `@@cc.e.o` @type ^`cc.e` @kind object;
  #L1fb2f6.  v2:= 0I;
  #L1fb2f8.  v0[v2]:= v1 @kind object;
  #L1fb2fc.  v1:= `@@cc.e.p` @type ^`cc.e` @kind object;
  #L1fb300.  v2:= 1I;
  #L1fb302.  v0[v2]:= v1 @kind object;
  #L1fb306.  v1:= `@@cc.e.q` @type ^`cc.e` @kind object;
  #L1fb30a.  v2:= 2I;
  #L1fb30c.  v0[v2]:= v1 @kind object;
  #L1fb310.  return v0 @kind object;
}
procedure `cc.e` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcc/e;.valueOf:(Ljava/lang/String;)Lcc/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1fb2c8.  v0:= constclass @type ^`cc.e` @kind object;
  #L1fb2cc.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1fb2d2.  v1:= temp @kind object;
  #L1fb2d4.  v1:= (`cc.e`) v1 @kind object;
  #L1fb2d8.  return v1 @kind object;
}
procedure `cc.e`[] `values`() @signature `Lcc/e;.values:()[Lcc/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1fb324.  v0:= `@@cc.e.r` @type ^`cc.e`[] @kind object;
  #L1fb328.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1fb32e.  v0:= temp @kind object;
  #L1fb330.  v0:= (`cc.e`[]) v0 @kind object;
  #L1fb334.  return v0 @kind object;
}
