record `l1.c` @kind class @AccessFlag PUBLIC_FINAL extends `l1.b` @kind interface {
  `java.lang.Object` `l1.c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Ll1/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3c1108.  v0:= new `l1.c`;
  #L3c110c.  v1:= 0I;
  #L3c110e.  call `<init>`(v0, v1) @signature `Ll1/c;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3c1114.  return @kind void;
}
procedure `void` `<init>`(`l1.c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ll1/c;.<init>:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3c1128.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c112e.  v0.`l1.c.a` @type ^`java.lang.Object` := v1 @kind object;
  #L3c1132.  return @kind void;
}
procedure `l1.b` `a`(`java.lang.Object` v2 @kind object) @signature `Ll1/c;.a:(Ljava/lang/Object;)Ll1/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3c10e0.  v0:= new `l1.c`;
  #L3c10e4.  v1:= "instance cannot be null" @kind object;
  #L3c10e8.  call temp:= `c`(v2, v1) @signature `Ll1/d;.c:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3c10ee.  v2:= temp @kind object;
  #L3c10f0.  call `<init>`(v0, v2) @signature `Ll1/c;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3c10f6.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`l1.c` v1 @kind this) @signature `Ll1/c;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c10c8.  v0:= v1.`l1.c.a` @type ^`java.lang.Object` @kind object;
  #L3c10cc.  return v0 @kind object;
}
