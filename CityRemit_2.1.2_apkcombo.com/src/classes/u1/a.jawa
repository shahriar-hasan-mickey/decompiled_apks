record `u1.a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `android.util.SparseArray` `@@u1.a.a` @AccessFlag PRIVATE_STATIC;
global `java.util.HashMap` `@@u1.a.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lu1/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L475378.  v0:= new `android.util.SparseArray`;
  #L47537c.  call `<init>`(v0) @signature `Landroid/util/SparseArray;.<init>:()V` @kind direct;
  #L475382.  `@@u1.a.a` @type ^`android.util.SparseArray` := v0 @kind object;
  #L475386.  v0:= new `java.util.HashMap`;
  #L47538a.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L475390.  `@@u1.a.b` @type ^`java.util.HashMap` := v0 @kind object;
  #L475394.  v1:= `@@h1.d.o` @type ^`h1.d` @kind object;
  #L475398.  v2:= 0I;
  #L47539a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4753a0.  v2:= temp @kind object;
  #L4753a2.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4753a8.  v0:= `@@u1.a.b` @type ^`java.util.HashMap` @kind object;
  #L4753ac.  v1:= `@@h1.d.p` @type ^`h1.d` @kind object;
  #L4753b0.  v2:= 1I;
  #L4753b2.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4753b8.  v2:= temp @kind object;
  #L4753ba.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4753c0.  v0:= `@@u1.a.b` @type ^`java.util.HashMap` @kind object;
  #L4753c4.  v1:= `@@h1.d.q` @type ^`h1.d` @kind object;
  #L4753c8.  v2:= 2I;
  #L4753ca.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4753d0.  v2:= temp @kind object;
  #L4753d2.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4753d8.  v0:= `@@u1.a.b` @type ^`java.util.HashMap` @kind object;
  #L4753dc.  call temp:= `keySet`(v0) @signature `Ljava/util/HashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L4753e2.  v0:= temp @kind object;
  #L4753e4.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4753ea.  v0:= temp @kind object;
  #L4753ec.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4753f2.  v1:= temp;
  #L4753f4.  if v1 == 0 then goto L475428;
  #L4753f8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4753fe.  v1:= temp @kind object;
  #L475400.  v1:= (`h1.d`) v1 @kind object;
  #L475404.  v2:= `@@u1.a.a` @type ^`android.util.SparseArray` @kind object;
  #L475408.  v3:= `@@u1.a.b` @type ^`java.util.HashMap` @kind object;
  #L47540c.  call temp:= `get`(v3, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L475412.  v3:= temp @kind object;
  #L475414.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L475418.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L47541e.  v3:= temp;
  #L475420.  call `append`(v2, v3, v1) @signature `Landroid/util/SparseArray;.append:(ILjava/lang/Object;)V` @kind virtual;
  #L475426.  goto L4753ec;
  #L475428.  return @kind void;
}
procedure `int` `a`(`h1.d` v3 @kind object) @signature `Lu1/a;.a:(Lh1/d;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L47531c.  v0:= `@@u1.a.b` @type ^`java.util.HashMap` @kind object;
  #L475320.  call temp:= `get`(v0, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L475326.  v0:= temp @kind object;
  #L475328.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L47532c.  if v0 == 0 then goto L47533a;
  #L475330.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L475336.  v3:= temp;
  #L475338.  return v3;
  #L47533a.  v0:= new `java.lang.IllegalStateException`;
  #L47533e.  v1:= new `java.lang.StringBuilder`;
  #L475342.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L475348.  v2:= "PriorityMapping is missing known Priority value " @kind object;
  #L47534c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L475352.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L475358.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47535e.  v3:= temp @kind object;
  #L475360.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L475366.  throw v0;
}
procedure `h1.d` `b`(`int` v3 ) @signature `Lu1/a;.b:(I)Lh1/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4752c8.  v0:= `@@u1.a.a` @type ^`android.util.SparseArray` @kind object;
  #L4752cc.  call temp:= `get`(v0, v3) @signature `Landroid/util/SparseArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4752d2.  v0:= temp @kind object;
  #L4752d4.  v0:= (`h1.d`) v0 @kind object;
  #L4752d8.  if v0 == 0 then goto L4752de;
  #L4752dc.  return v0 @kind object;
  #L4752de.  v0:= new `java.lang.IllegalArgumentException`;
  #L4752e2.  v1:= new `java.lang.StringBuilder`;
  #L4752e6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4752ec.  v2:= "Unknown Priority for value " @kind object;
  #L4752f0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4752f6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4752fc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L475302.  v3:= temp @kind object;
  #L475304.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47530a.  throw v0;
}
