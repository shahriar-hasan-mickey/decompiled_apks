record `h2.i` @kind class @AccessFlag FINAL extends `h2.g` @kind interface {
  `long` `h2.i.a` @AccessFlag PRIVATE_FINAL;
  `int` `h2.i.b` @AccessFlag PRIVATE_FINAL;
  `long` `h2.i.c` @AccessFlag PRIVATE_FINAL;
  `long` `h2.i.d` @AccessFlag PRIVATE_FINAL;
  `long` `h2.i.e` @AccessFlag PRIVATE_FINAL;
  `long`[] `h2.i.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h2.i` v9 @kind this, `long` v10 , `int` v12 , `long` v13 ) @signature `Lh2/i;.<init>:(JIJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L339128.  v6:= -1L;
  #L33912c.  v8:= 0I;
  #L33912e.  v0:= v9 @kind object;
  #L339130.  v1:= v10 @kind wide;
  #L339132.  v3:= v12;
  #L339134.  v4:= v13 @kind wide;
  #L339136.  call `<init>`(v0, v1, v3, v4, v6, v8) @signature `Lh2/i;.<init>:(JIJJ[J)V` @kind direct;
  #L33913c.  return @kind void;
}
procedure `void` `<init>`(`h2.i` v0 @kind this, `long` v1 , `int` v3 , `long` v4 , `long` v6 , `long`[] v8 @kind object) @signature `Lh2/i;.<init>:(JIJJ[J)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L339150.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L339156.  v0.`h2.i.a` @type ^`long` := v1 @kind wide;
  #L33915a.  v0.`h2.i.b` @type ^`int` := v3;
  #L33915e.  v0.`h2.i.c` @type ^`long` := v4 @kind wide;
  #L339162.  v0.`h2.i.f` @type ^`long`[] := v8 @kind object;
  #L339166.  v0.`h2.i.d` @type ^`long` := v6 @kind wide;
  #L33916a.  v3:= -1L;
  #L33916e.  v5:= lcmp(v6, v3);
  #L339172.  if v5 != 0 then goto L339178;
  #L339176.  goto L33917c;
  #L339178.  v3:= v1 + v6 @kind long;
  #L33917c.  v0.`h2.i.e` @type ^`long` := v3 @kind wide;
  #L339180.  return @kind void;
}
procedure `h2.i` `a`(`long` v22 , `long` v24 , `x1.d0$a` v26 @kind object, `s3.z` v27 @kind object) @signature `Lh2/i;.a:(JJLx1/d0$a;Ls3/z;)Lh2/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L338ef8.  v0:= v22 @kind wide;
  #L338efc.  v2:= v26 @kind object;
  #L338f00.  v3:= v2.`x1.d0$a.g` @type ^`int`;
  #L338f04.  v4:= v2.`x1.d0$a.d` @type ^`int`;
  #L338f08.  call temp:= `m`(v27) @signature `Ls3/z;.m:()I` @kind virtual;
  #L338f0e.  v5:= temp;
  #L338f10.  v6:= v5 ^& 1;
  #L338f14.  v7:= 1I;
  #L338f16.  if v6 != v7 then goto L339000;
  #L338f1a.  call temp:= `G`(v27) @signature `Ls3/z;.G:()I` @kind virtual;
  #L338f20.  v6:= temp;
  #L338f22.  if v6 != 0 then goto L338f28;
  #L338f26.  goto L339000;
  #L338f28.  v7:= (`long`) v6 @kind i2l;
  #L338f2a.  v9:= (`long`) v3 @kind i2l;
  #L338f2c.  v11:= 1000000L;
  #L338f32.  v9:= v9 * v11 @kind long;
  #L338f36.  v11:= (`long`) v4 @kind i2l;
  #L338f38.  call temp:= `M0`(v7, v9, v11) @signature `Ls3/l0;.M0:(JJJ)J` @kind static;
  #L338f3e.  v17:= temp @kind wide;
  #L338f40.  v3:= 6I;
  #L338f42.  v4:= v5 ^& 6;
  #L338f46.  if v4 == v3 then goto L338f64;
  #L338f4a.  v0:= new `h2.i`;
  #L338f4e.  v1:= v2.`x1.d0$a.c` @type ^`int`;
  #L338f52.  v13:= v0 @kind object;
  #L338f54.  v14:= v24 @kind wide;
  #L338f58.  v16:= v1;
  #L338f5c.  call `<init>`(v13, v14, v16, v17) @signature `Lh2/i;.<init>:(JIJ)V` @kind direct;
  #L338f62.  return v0 @kind object;
  #L338f64.  call temp:= `E`(v27) @signature `Ls3/z;.E:()J` @kind virtual;
  #L338f6a.  v19:= temp @kind wide;
  #L338f6c.  v3:= 100I;
  #L338f70.  v4:= new `long`[v3];
  #L338f74.  v5:= 0I;
  #L338f76.  if v5 >= v3 then goto L338f8e;
  #L338f7a.  call temp:= `C`(v27) @signature `Ls3/z;.C:()I` @kind virtual;
  #L338f80.  v6:= temp;
  #L338f82.  v6:= (`long`) v6 @kind i2l;
  #L338f84.  v4[v5]:= v6 @kind wide;
  #L338f88.  v5:= v5 + 1;
  #L338f8c.  goto L338f76;
  #L338f8e.  v5:= -1L;
  #L338f92.  v3:= lcmp(v0, v5);
  #L338f96.  if v3 == 0 then goto L338fe2;
  #L338f9a.  v5:= v24 + v19 @kind long;
  #L338f9e.  v3:= lcmp(v0, v5);
  #L338fa2.  if v3 == 0 then goto L338fe2;
  #L338fa6.  v3:= new `java.lang.StringBuilder`;
  #L338faa.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L338fb0.  v7:= "XING data size mismatch: " @kind object;
  #L338fb4.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L338fba.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L338fc0.  v0:= ", " @kind object;
  #L338fc4.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L338fca.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L338fd0.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L338fd6.  v0:= temp @kind object;
  #L338fd8.  v1:= "XingSeeker" @kind object;
  #L338fdc.  call `h`(v1, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L338fe2.  v0:= new `h2.i`;
  #L338fe6.  v1:= v2.`x1.d0$a.c` @type ^`int`;
  #L338fea.  v13:= v0 @kind object;
  #L338fec.  v14:= v24 @kind wide;
  #L338ff0.  v16:= v1;
  #L338ff4.  v21:= v4 @kind object;
  #L338ff8.  call `<init>`(v13, v14, v16, v17, v19, v21) @signature `Lh2/i;.<init>:(JIJJ[J)V` @kind direct;
  #L338ffe.  return v0 @kind object;
  #L339000.  v0:= 0I;
  #L339002.  return v0 @kind object;
}
procedure `long` `b`(`h2.i` v4 @kind this, `int` v5 ) @signature `Lh2/i;.b:(I)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L339104.  v0:= v4.`h2.i.c` @type ^`long` @kind wide;
  #L339108.  v2:= (`long`) v5 @kind i2l;
  #L33910a.  v0:= v0 * v2 @kind long;
  #L33910e.  v2:= 100L;
  #L339112.  v0:= v0 / v2 @kind long;
  #L339114.  return v0 @kind wide;
}
procedure `long` `c`(`h2.i` v11 @kind this, `long` v12 ) @signature `Lh2/i;.c:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L339044.  v0:= v11.`h2.i.a` @type ^`long` @kind wide;
  #L339048.  v12:= v12 - v0 @kind long;
  #L33904a.  call temp:= `f`(v11) @signature `Lh2/i;.f:()Z` @kind virtual;
  #L339050.  v0:= temp;
  #L339052.  if v0 == 0 then goto L3390ec;
  #L339056.  v0:= v11.`h2.i.b` @type ^`int`;
  #L33905a.  v0:= (`long`) v0 @kind i2l;
  #L33905c.  v2:= lcmp(v12, v0);
  #L339060.  if v2 > 0 then goto L339066;
  #L339064.  goto L3390ec;
  #L339066.  v0:= v11.`h2.i.f` @type ^`long`[] @kind object;
  #L33906a.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L339070.  v0:= temp @kind object;
  #L339072.  v0:= (`long`[]) v0 @kind object;
  #L339076.  v12:= (`double`) v12 @kind l2d;
  #L339078.  v1:= 256.0D;
  #L33907c.  v12:= v12 * v1 @kind double;
  #L339080.  v1:= v11.`h2.i.d` @type ^`long` @kind wide;
  #L339084.  v1:= (`double`) v1 @kind l2d;
  #L339086.  v12:= v12 / v1 @kind double;
  #L339088.  v1:= (`long`) v12 @kind d2l;
  #L33908a.  v3:= 1I;
  #L33908c.  call temp:= `i`(v0, v1, v3, v3) @signature `Ls3/l0;.i:([JJZZ)I` @kind static;
  #L339092.  v1:= temp;
  #L339094.  call temp:= `b`(v11, v1) @signature `Lh2/i;.b:(I)J` @kind direct;
  #L33909a.  v2:= temp @kind wide;
  #L33909c.  v4:= v0[v1] @kind wide;
  #L3390a0.  v6:= v1 + 1;
  #L3390a4.  call temp:= `b`(v11, v6) @signature `Lh2/i;.b:(I)J` @kind direct;
  #L3390aa.  v7:= temp @kind wide;
  #L3390ac.  v9:= 99I;
  #L3390b0.  if v1 != v9 then goto L3390ba;
  #L3390b4.  v0:= 256L;
  #L3390b8.  goto L3390c0;
  #L3390ba.  v9:= v0[v6] @kind wide;
  #L3390be.  v0:= v9 @kind wide;
  #L3390c0.  v6:= lcmp(v4, v0);
  #L3390c4.  if v6 != 0 then goto L3390ce;
  #L3390c8.  v12:= 0L;
  #L3390cc.  goto L3390d8;
  #L3390ce.  v9:= (`double`) v4 @kind l2d;
  #L3390d0.  v12:= v12 - v9 @kind double;
  #L3390d2.  v0:= v0 - v4 @kind long;
  #L3390d4.  v0:= (`double`) v0 @kind l2d;
  #L3390d6.  v12:= v12 / v0 @kind double;
  #L3390d8.  v7:= v7 - v2 @kind long;
  #L3390da.  v0:= (`double`) v7 @kind l2d;
  #L3390dc.  v12:= v12 * v0 @kind double;
  #L3390e0.  call temp:= `round`(v12) @signature `Ljava/lang/Math;.round:(D)J` @kind static;
  #L3390e6.  v12:= temp @kind wide;
  #L3390e8.  v2:= v2 + v12 @kind long;
  #L3390ea.  return v2 @kind wide;
  #L3390ec.  v12:= 0L;
  #L3390f0.  return v12 @kind wide;
}
procedure `long` `e`(`h2.i` v2 @kind this) @signature `Lh2/i;.e:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L339014.  v0:= v2.`h2.i.e` @type ^`long` @kind wide;
  #L339018.  return v0 @kind wide;
}
procedure `boolean` `f`(`h2.i` v1 @kind this) @signature `Lh2/i;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338ed8.  v0:= v1.`h2.i.f` @type ^`long`[] @kind object;
  #L338edc.  if v0 == 0 then goto L338ee4;
  #L338ee0.  v0:= 1I;
  #L338ee2.  goto L338ee6;
  #L338ee4.  v0:= 0I;
  #L338ee6.  return v0;
}
procedure `a2.a0$a` `h`(`h2.i` v12 @kind this, `long` v13 ) @signature `Lh2/i;.h:(J)La2/a0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L338dd0.  call temp:= `f`(v12) @signature `Lh2/i;.f:()Z` @kind virtual;
  #L338dd6.  v0:= temp;
  #L338dd8.  if v0 != 0 then goto L338e02;
  #L338ddc.  v13:= new `a2.a0$a`;
  #L338de0.  v14:= new `a2.b0`;
  #L338de4.  v0:= 0L;
  #L338de8.  v2:= v12.`h2.i.a` @type ^`long` @kind wide;
  #L338dec.  v4:= v12.`h2.i.b` @type ^`int`;
  #L338df0.  v4:= (`long`) v4 @kind i2l;
  #L338df2.  v2:= v2 + v4 @kind long;
  #L338df4.  call `<init>`(v14, v0, v2) @signature `La2/b0;.<init>:(JJ)V` @kind direct;
  #L338dfa.  call `<init>`(v13, v14) @signature `La2/a0$a;.<init>:(La2/b0;)V` @kind direct;
  #L338e00.  return v13 @kind object;
  #L338e02.  v6:= 0L;
  #L338e06.  v8:= v12.`h2.i.c` @type ^`long` @kind wide;
  #L338e0a.  v4:= v13 @kind wide;
  #L338e0c.  call temp:= `r`(v4, v6, v8) @signature `Ls3/l0;.r:(JJJ)J` @kind static;
  #L338e12.  v13:= temp @kind wide;
  #L338e14.  v0:= (`double`) v13 @kind l2d;
  #L338e16.  v2:= 100.0D;
  #L338e1a.  v0:= v0 * v2 @kind double;
  #L338e1e.  v4:= v12.`h2.i.c` @type ^`long` @kind wide;
  #L338e22.  v4:= (`double`) v4 @kind l2d;
  #L338e24.  v0:= v0 / v4 @kind double;
  #L338e26.  v4:= 0L;
  #L338e2a.  v6:= 256.0D;
  #L338e2e.  v8:= dcmpg(v0, v4);
  #L338e32.  if v8 > 0 then goto L338e38;
  #L338e36.  goto L338e7e;
  #L338e38.  v4:= dcmpl(v0, v2);
  #L338e3c.  if v4 < 0 then goto L338e44;
  #L338e40.  v4:= v6 @kind wide;
  #L338e42.  goto L338e7e;
  #L338e44.  v2:= (`int`) v0 @kind d2i;
  #L338e46.  v3:= v12.`h2.i.f` @type ^`long`[] @kind object;
  #L338e4a.  call temp:= `h`(v3) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L338e50.  v3:= temp @kind object;
  #L338e52.  v3:= (`long`[]) v3 @kind object;
  #L338e56.  v4:= v3[v2] @kind wide;
  #L338e5a.  v4:= (`double`) v4 @kind l2d;
  #L338e5c.  v8:= 99I;
  #L338e60.  if v2 != v8 then goto L338e68;
  #L338e64.  v8:= v6 @kind wide;
  #L338e66.  goto L338e72;
  #L338e68.  v8:= v2 + 1;
  #L338e6c.  v8:= v3[v8] @kind wide;
  #L338e70.  v8:= (`double`) v8 @kind l2d;
  #L338e72.  v2:= (`double`) v2 @kind i2d;
  #L338e74.  v0:= v0 - v2 @kind double;
  #L338e76.  v8:= v8 - v4 @kind double;
  #L338e78.  v0:= v0 * v8 @kind double;
  #L338e7c.  v4:= v4 + v0 @kind double;
  #L338e7e.  v4:= v4 / v6 @kind double;
  #L338e80.  v0:= v12.`h2.i.d` @type ^`long` @kind wide;
  #L338e84.  v0:= (`double`) v0 @kind l2d;
  #L338e86.  v4:= v4 * v0 @kind double;
  #L338e8a.  call temp:= `round`(v4) @signature `Ljava/lang/Math;.round:(D)J` @kind static;
  #L338e90.  v6:= temp @kind wide;
  #L338e92.  v0:= v12.`h2.i.b` @type ^`int`;
  #L338e96.  v8:= (`long`) v0 @kind i2l;
  #L338e98.  v0:= v12.`h2.i.d` @type ^`long` @kind wide;
  #L338e9c.  v2:= 1L;
  #L338ea0.  v10:= v0 - v2 @kind long;
  #L338ea4.  call temp:= `r`(v6, v8, v10) @signature `Ls3/l0;.r:(JJJ)J` @kind static;
  #L338eaa.  v0:= temp @kind wide;
  #L338eac.  v2:= new `a2.a0$a`;
  #L338eb0.  v3:= new `a2.b0`;
  #L338eb4.  v4:= v12.`h2.i.a` @type ^`long` @kind wide;
  #L338eb8.  v4:= v4 + v0 @kind long;
  #L338eba.  call `<init>`(v3, v13, v4) @signature `La2/b0;.<init>:(JJ)V` @kind direct;
  #L338ec0.  call `<init>`(v2, v3) @signature `La2/a0$a;.<init>:(La2/b0;)V` @kind direct;
  #L338ec6.  return v2 @kind object;
}
procedure `long` `i`(`h2.i` v2 @kind this) @signature `Lh2/i;.i:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33902c.  v0:= v2.`h2.i.c` @type ^`long` @kind wide;
  #L339030.  return v0 @kind wide;
}
