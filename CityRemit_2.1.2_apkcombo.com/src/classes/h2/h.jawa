record `h2.h` @kind class @AccessFlag FINAL extends `h2.g` @kind interface {
  `long`[] `h2.h.a` @AccessFlag PRIVATE_FINAL;
  `long`[] `h2.h.b` @AccessFlag PRIVATE_FINAL;
  `long` `h2.h.c` @AccessFlag PRIVATE_FINAL;
  `long` `h2.h.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h2.h` v0 @kind this, `long`[] v1 @kind object, `long`[] v2 @kind object, `long` v3 , `long` v5 ) @signature `Lh2/h;.<init>:([J[JJJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L338da8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L338dae.  v0.`h2.h.a` @type ^`long`[] := v1 @kind object;
  #L338db2.  v0.`h2.h.b` @type ^`long`[] := v2 @kind object;
  #L338db6.  v0.`h2.h.c` @type ^`long` := v3 @kind wide;
  #L338dba.  v0.`h2.h.d` @type ^`long` := v5 @kind wide;
  #L338dbe.  return @kind void;
}
procedure `h2.h` `a`(`long` v24 , `long` v26 , `x1.d0$a` v28 @kind object, `s3.z` v29 @kind object) @signature `Lh2/h;.a:(JJLx1/d0$a;Ls3/z;)Lh2/h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L338ba8.  v0:= v24 @kind wide;
  #L338bac.  v2:= v28 @kind object;
  #L338bb0.  v3:= v29 @kind object;
  #L338bb4.  v4:= 10I;
  #L338bb8.  call `P`(v3, v4) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L338bbe.  call temp:= `m`(v29) @signature `Ls3/z;.m:()I` @kind virtual;
  #L338bc4.  v4:= temp;
  #L338bc6.  v5:= 0I;
  #L338bc8.  if v4 > 0 then goto L338bce;
  #L338bcc.  return v5 @kind object;
  #L338bce.  v6:= v2.`x1.d0$a.d` @type ^`int`;
  #L338bd2.  v7:= (`long`) v4 @kind i2l;
  #L338bd4.  v9:= 1000000L;
  #L338bda.  v4:= 32000I;
  #L338bde.  if v6 < v4 then goto L338be8;
  #L338be2.  v4:= 1152I;
  #L338be6.  goto L338bec;
  #L338be8.  v4:= 576I;
  #L338bec.  v11:= (`long`) v4 @kind i2l;
  #L338bee.  v9:= v9 * v11 @kind long;
  #L338bf2.  v11:= (`long`) v6 @kind i2l;
  #L338bf4.  call temp:= `M0`(v7, v9, v11) @signature `Ls3/l0;.M0:(JJJ)J` @kind static;
  #L338bfa.  v16:= temp @kind wide;
  #L338bfc.  call temp:= `I`(v29) @signature `Ls3/z;.I:()I` @kind virtual;
  #L338c02.  v4:= temp;
  #L338c04.  call temp:= `I`(v29) @signature `Ls3/z;.I:()I` @kind virtual;
  #L338c0a.  v6:= temp;
  #L338c0c.  call temp:= `I`(v29) @signature `Ls3/z;.I:()I` @kind virtual;
  #L338c12.  v7:= temp;
  #L338c14.  v8:= 2I;
  #L338c16.  call `P`(v3, v8) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L338c1c.  v2:= v2.`x1.d0$a.c` @type ^`int`;
  #L338c20.  v9:= (`long`) v2 @kind i2l;
  #L338c22.  v9:= v26 + v9 @kind long;
  #L338c26.  v14:= new `long`[v4];
  #L338c2a.  v15:= new `long`[v4];
  #L338c2e.  v2:= 0I;
  #L338c30.  v11:= v26 @kind wide;
  #L338c34.  if v2 >= v4 then goto L338cd4;
  #L338c38.  v18:= v6;
  #L338c3c.  v5:= (`long`) v2 @kind i2l;
  #L338c3e.  v5:= v5 * v16 @kind long;
  #L338c42.  v20:= v9 @kind wide;
  #L338c46.  v8:= (`long`) v4 @kind i2l;
  #L338c48.  v5:= v5 / v8 @kind long;
  #L338c4a.  v14[v2]:= v5 @kind wide;
  #L338c4e.  v5:= v20 @kind wide;
  #L338c52.  call temp:= `max`(v11, v5) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L338c58.  v8:= temp @kind wide;
  #L338c5a.  v15[v2]:= v8 @kind wide;
  #L338c5e.  v8:= 1I;
  #L338c60.  if v7 == v8 then goto L338c9e;
  #L338c64.  v8:= 2I;
  #L338c66.  if v7 == v8 then goto L338c92;
  #L338c6a.  v9:= 3I;
  #L338c6c.  if v7 == v9 then goto L338c86;
  #L338c70.  v9:= 4I;
  #L338c72.  if v7 == v9 then goto L338c7a;
  #L338c76.  v9:= 0I;
  #L338c78.  return v9 @kind object;
  #L338c7a.  v9:= 0I;
  #L338c7c.  call temp:= `G`(v29) @signature `Ls3/z;.G:()I` @kind virtual;
  #L338c82.  v10:= temp;
  #L338c84.  goto L338caa;
  #L338c86.  v9:= 0I;
  #L338c88.  call temp:= `F`(v29) @signature `Ls3/z;.F:()I` @kind virtual;
  #L338c8e.  v10:= temp;
  #L338c90.  goto L338caa;
  #L338c92.  v9:= 0I;
  #L338c94.  call temp:= `I`(v29) @signature `Ls3/z;.I:()I` @kind virtual;
  #L338c9a.  v10:= temp;
  #L338c9c.  goto L338caa;
  #L338c9e.  v8:= 2I;
  #L338ca0.  v9:= 0I;
  #L338ca2.  call temp:= `C`(v29) @signature `Ls3/z;.C:()I` @kind virtual;
  #L338ca8.  v10:= temp;
  #L338caa.  v8:= (`long`) v10 @kind i2l;
  #L338cac.  v10:= v18;
  #L338cb0.  v18:= v14 @kind object;
  #L338cb4.  v13:= (`long`) v10 @kind i2l;
  #L338cb6.  v8:= v8 * v13 @kind long;
  #L338cba.  v11:= v11 + v8 @kind long;
  #L338cbc.  v2:= v2 + 1;
  #L338cc0.  v14:= v18 @kind object;
  #L338cc4.  v8:= 2I;
  #L338cc6.  v22:= v5 @kind wide;
  #L338cca.  v6:= v10;
  #L338ccc.  v9:= v22 @kind wide;
  #L338cd0.  v5:= 0I;
  #L338cd2.  goto L338c34;
  #L338cd4.  v18:= v14 @kind object;
  #L338cd8.  v2:= -1L;
  #L338cdc.  v4:= lcmp(v0, v2);
  #L338ce0.  if v4 == 0 then goto L338d28;
  #L338ce4.  v2:= lcmp(v0, v11);
  #L338ce8.  if v2 == 0 then goto L338d28;
  #L338cec.  v2:= new `java.lang.StringBuilder`;
  #L338cf0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L338cf6.  v3:= "VBRI data size mismatch: " @kind object;
  #L338cfa.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L338d00.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L338d06.  v0:= ", " @kind object;
  #L338d0a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L338d10.  call temp:= `append`(v2, v11) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L338d16.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L338d1c.  v0:= temp @kind object;
  #L338d1e.  v1:= "VbriSeeker" @kind object;
  #L338d22.  call `h`(v1, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L338d28.  v0:= new `h2.h`;
  #L338d2c.  v13:= v0 @kind object;
  #L338d2e.  v14:= v18 @kind object;
  #L338d32.  v18:= v11 @kind wide;
  #L338d36.  call `<init>`(v13, v14, v15, v16, v18) @signature `Lh2/h;.<init>:([J[JJJ)V` @kind direct;
  #L338d3c.  return v0 @kind object;
}
procedure `long` `c`(`h2.h` v3 @kind this, `long` v4 ) @signature `Lh2/h;.c:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L338d80.  v0:= v3.`h2.h.a` @type ^`long`[] @kind object;
  #L338d84.  v1:= v3.`h2.h.b` @type ^`long`[] @kind object;
  #L338d88.  v2:= 1I;
  #L338d8a.  call temp:= `i`(v1, v4, v2, v2) @signature `Ls3/l0;.i:([JJZZ)I` @kind static;
  #L338d90.  v4:= temp;
  #L338d92.  v4:= v0[v4] @kind wide;
  #L338d96.  return v4 @kind wide;
}
procedure `long` `e`(`h2.h` v2 @kind this) @signature `Lh2/h;.e:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L338d50.  v0:= v2.`h2.h.d` @type ^`long` @kind wide;
  #L338d54.  return v0 @kind wide;
}
procedure `boolean` `f`(`h2.h` v1 @kind this) @signature `Lh2/h;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338b94.  v0:= 1I;
  #L338b96.  return v0;
}
procedure `a2.a0$a` `h`(`h2.h` v8 @kind this, `long` v9 ) @signature `Lh2/h;.h:(J)La2/a0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L338b0c.  v0:= v8.`h2.h.a` @type ^`long`[] @kind object;
  #L338b10.  v1:= 1I;
  #L338b12.  call temp:= `i`(v0, v9, v1, v1) @signature `Ls3/l0;.i:([JJZZ)I` @kind static;
  #L338b18.  v0:= temp;
  #L338b1a.  v2:= new `a2.b0`;
  #L338b1e.  v3:= v8.`h2.h.a` @type ^`long`[] @kind object;
  #L338b22.  v4:= v3[v0] @kind wide;
  #L338b26.  v3:= v8.`h2.h.b` @type ^`long`[] @kind object;
  #L338b2a.  v6:= v3[v0] @kind wide;
  #L338b2e.  call `<init>`(v2, v4, v6) @signature `La2/b0;.<init>:(JJ)V` @kind direct;
  #L338b34.  v3:= v2.`a2.b0.a` @type ^`long` @kind wide;
  #L338b38.  v5:= lcmp(v3, v9);
  #L338b3c.  if v5 >= 0 then goto L338b76;
  #L338b40.  v9:= v8.`h2.h.a` @type ^`long`[] @kind object;
  #L338b44.  v9:= length @variable v9;
  #L338b46.  v9:= v9 - v1 @kind int;
  #L338b48.  if v0 != v9 then goto L338b4e;
  #L338b4c.  goto L338b76;
  #L338b4e.  v9:= new `a2.b0`;
  #L338b52.  v10:= v8.`h2.h.a` @type ^`long`[] @kind object;
  #L338b56.  v0:= v0 + v1 @kind int;
  #L338b58.  v3:= v10[v0] @kind wide;
  #L338b5c.  v10:= v8.`h2.h.b` @type ^`long`[] @kind object;
  #L338b60.  v0:= v10[v0] @kind wide;
  #L338b64.  call `<init>`(v9, v3, v0) @signature `La2/b0;.<init>:(JJ)V` @kind direct;
  #L338b6a.  v10:= new `a2.a0$a`;
  #L338b6e.  call `<init>`(v10, v2, v9) @signature `La2/a0$a;.<init>:(La2/b0;La2/b0;)V` @kind direct;
  #L338b74.  return v10 @kind object;
  #L338b76.  v9:= new `a2.a0$a`;
  #L338b7a.  call `<init>`(v9, v2) @signature `La2/a0$a;.<init>:(La2/b0;)V` @kind direct;
  #L338b80.  return v9 @kind object;
}
procedure `long` `i`(`h2.h` v2 @kind this) @signature `Lh2/h;.i:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L338d68.  v0:= v2.`h2.h.c` @type ^`long` @kind wide;
  #L338d6c.  return v0 @kind wide;
}
