record `h2.f` @kind class @AccessFlag PUBLIC_FINAL extends `a2.l` @kind interface {
  `int` `h2.f.a` @AccessFlag PRIVATE_FINAL;
  `long` `h2.f.b` @AccessFlag PRIVATE_FINAL;
  `s3.z` `h2.f.c` @AccessFlag PRIVATE_FINAL;
  `x1.d0$a` `h2.f.d` @AccessFlag PRIVATE_FINAL;
  `a2.w` `h2.f.e` @AccessFlag PRIVATE_FINAL;
  `a2.x` `h2.f.f` @AccessFlag PRIVATE_FINAL;
  `a2.d0` `h2.f.g` @AccessFlag PRIVATE_FINAL;
  `a2.n` `h2.f.h` @AccessFlag PRIVATE;
  `a2.d0` `h2.f.i` @AccessFlag PRIVATE;
  `a2.d0` `h2.f.j` @AccessFlag PRIVATE;
  `int` `h2.f.k` @AccessFlag PRIVATE;
  `n2.a` `h2.f.l` @AccessFlag PRIVATE;
  `long` `h2.f.m` @AccessFlag PRIVATE;
  `long` `h2.f.n` @AccessFlag PRIVATE;
  `long` `h2.f.o` @AccessFlag PRIVATE;
  `int` `h2.f.p` @AccessFlag PRIVATE;
  `h2.g` `h2.f.q` @AccessFlag PRIVATE;
  `boolean` `h2.f.r` @AccessFlag PRIVATE;
  `boolean` `h2.f.s` @AccessFlag PRIVATE;
  `long` `h2.f.t` @AccessFlag PRIVATE;
}
global `s2.h$a` `@@h2.f.u` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh2/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3388e8.  v0:= `@@h2.d.b` @type ^`h2.d` @kind object;
  #L3388ec.  v0:= `@@h2.e.a` @type ^`h2.e` @kind object;
  #L3388f0.  `@@h2.f.u` @type ^`s2.h$a` := v0 @kind object;
  #L3388f4.  return @kind void;
}
procedure `void` `<init>`(`h2.f` v1 @kind this) @signature `Lh2/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L338908.  v0:= 0I;
  #L33890a.  call `<init>`(v1, v0) @signature `Lh2/f;.<init>:(I)V` @kind direct;
  #L338910.  return @kind void;
}
procedure `void` `<init>`(`h2.f` v2 @kind this, `int` v3 ) @signature `Lh2/f;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L338924.  v0:= -4.9E-324D;
  #L33892e.  call `<init>`(v2, v3, v0) @signature `Lh2/f;.<init>:(IJ)V` @kind direct;
  #L338934.  return @kind void;
}
procedure `void` `<init>`(`h2.f` v1 @kind this, `int` v2 , `long` v3 ) @signature `Lh2/f;.<init>:(IJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L338948.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33894e.  v0:= v2 ^& 2;
  #L338952.  if v0 == 0 then goto L33895a;
  #L338956.  v2:= v2 ^| 1;
  #L33895a.  v1.`h2.f.a` @type ^`int` := v2;
  #L33895e.  v1.`h2.f.b` @type ^`long` := v3 @kind wide;
  #L338962.  v2:= new `s3.z`;
  #L338966.  v3:= 10I;
  #L33896a.  call `<init>`(v2, v3) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L338970.  v1.`h2.f.c` @type ^`s3.z` := v2 @kind object;
  #L338974.  v2:= new `x1.d0$a`;
  #L338978.  call `<init>`(v2) @signature `Lx1/d0$a;.<init>:()V` @kind direct;
  #L33897e.  v1.`h2.f.d` @type ^`x1.d0$a` := v2 @kind object;
  #L338982.  v2:= new `a2.w`;
  #L338986.  call `<init>`(v2) @signature `La2/w;.<init>:()V` @kind direct;
  #L33898c.  v1.`h2.f.e` @type ^`a2.w` := v2 @kind object;
  #L338990.  v2:= -4.9E-324D;
  #L33899a.  v1.`h2.f.m` @type ^`long` := v2 @kind wide;
  #L33899e.  v2:= new `a2.x`;
  #L3389a2.  call `<init>`(v2) @signature `La2/x;.<init>:()V` @kind direct;
  #L3389a8.  v1.`h2.f.f` @type ^`a2.x` := v2 @kind object;
  #L3389ac.  v2:= new `a2.k`;
  #L3389b0.  call `<init>`(v2) @signature `La2/k;.<init>:()V` @kind direct;
  #L3389b6.  v1.`h2.f.g` @type ^`a2.d0` := v2 @kind object;
  #L3389ba.  v1.`h2.f.j` @type ^`a2.d0` := v2 @kind object;
  #L3389be.  return @kind void;
}
procedure `a2.l`[] `c`() @signature `Lh2/f;.c:()[La2/l;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L337e6c.  call temp:= `p`() @signature `Lh2/f;.p:()[La2/l;` @kind static;
  #L337e72.  v0:= temp @kind object;
  #L337e74.  return v0 @kind object;
}
procedure `boolean` `e`(`int` v0 , `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lh2/f;.e:(IIIII)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L337eb0.  call temp:= `q`(v0, v1, v2, v3, v4) @signature `Lh2/f;.q:(IIIII)Z` @kind static;
  #L337eb6.  v0:= temp;
  #L337eb8.  return v0;
}
procedure `void` `f`(`h2.f` v1 @kind this) @signature `Lh2/f;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3389d0.  v0:= v1.`h2.f.i` @type ^`a2.d0` @kind object;
  #L3389d4.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3389da.  v0:= v1.`h2.f.h` @type ^`a2.n` @kind object;
  #L3389de.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3389e4.  return @kind void;
}
procedure `h2.g` `h`(`h2.f` v11 @kind this, `a2.m` v12 @kind object) @signature `Lh2/f;.h:(La2/m;)Lh2/g;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3381b0.  call temp:= `s`(v11, v12) @signature `Lh2/f;.s:(La2/m;)Lh2/g;` @kind direct;
  #L3381b6.  v0:= temp @kind object;
  #L3381b8.  v1:= v11.`h2.f.l` @type ^`n2.a` @kind object;
  #L3381bc.  call temp:= `q`(v12) @signature `La2/m;.q:()J` @kind interface;
  #L3381c2.  v2:= temp @kind wide;
  #L3381c4.  call temp:= `r`(v1, v2) @signature `Lh2/f;.r:(Ln2/a;J)Lh2/c;` @kind static;
  #L3381ca.  v1:= temp @kind object;
  #L3381cc.  v2:= v11.`h2.f.r` @type ^`boolean` @kind boolean;
  #L3381d0.  if v2 == 0 then goto L3381e0;
  #L3381d4.  v12:= new `h2.g$a`;
  #L3381d8.  call `<init>`(v12) @signature `Lh2/g$a;.<init>:()V` @kind direct;
  #L3381de.  return v12 @kind object;
  #L3381e0.  v2:= 0I;
  #L3381e2.  v3:= v11.`h2.f.a` @type ^`int`;
  #L3381e6.  v3:= v3 ^& 4;
  #L3381ea.  if v3 == 0 then goto L338248;
  #L3381ee.  v2:= -1L;
  #L3381f2.  if v1 == 0 then goto L33820c;
  #L3381f6.  call temp:= `i`(v1) @signature `La2/a0;.i:()J` @kind interface;
  #L3381fc.  v2:= temp @kind wide;
  #L3381fe.  call temp:= `e`(v1) @signature `Lh2/g;.e:()J` @kind interface;
  #L338204.  v0:= temp @kind wide;
  #L338206.  v9:= v0 @kind wide;
  #L338208.  v5:= v2 @kind wide;
  #L33820a.  goto L338232;
  #L33820c.  if v0 == 0 then goto L338222;
  #L338210.  call temp:= `i`(v0) @signature `La2/a0;.i:()J` @kind interface;
  #L338216.  v2:= temp @kind wide;
  #L338218.  call temp:= `e`(v0) @signature `Lh2/g;.e:()J` @kind interface;
  #L33821e.  v0:= temp @kind wide;
  #L338220.  goto L338206;
  #L338222.  v0:= v11.`h2.f.l` @type ^`n2.a` @kind object;
  #L338226.  call temp:= `m`(v0) @signature `Lh2/f;.m:(Ln2/a;)J` @kind static;
  #L33822c.  v0:= temp @kind wide;
  #L33822e.  v5:= v0 @kind wide;
  #L338230.  v9:= v2 @kind wide;
  #L338232.  v0:= new `h2.b`;
  #L338236.  call temp:= `q`(v12) @signature `La2/m;.q:()J` @kind interface;
  #L33823c.  v7:= temp @kind wide;
  #L33823e.  v4:= v0 @kind object;
  #L338240.  call `<init>`(v4, v5, v7, v9) @signature `Lh2/b;.<init>:(JJJ)V` @kind direct;
  #L338246.  goto L338258;
  #L338248.  if v1 == 0 then goto L338250;
  #L33824c.  v0:= v1 @kind object;
  #L33824e.  goto L338258;
  #L338250.  if v0 == 0 then goto L338256;
  #L338254.  goto L338258;
  #L338256.  v0:= v2 @kind object;
  #L338258.  v1:= 1I;
  #L33825a.  if v0 == 0 then goto L338274;
  #L33825e.  call temp:= `f`(v0) @signature `La2/a0;.f:()Z` @kind interface;
  #L338264.  v2:= temp;
  #L338266.  if v2 != 0 then goto L33828c;
  #L33826a.  v2:= v11.`h2.f.a` @type ^`int`;
  #L33826e.  v2:= v2 ^& v1 @kind int;
  #L338270.  if v2 == 0 then goto L33828c;
  #L338274.  v0:= v11.`h2.f.a` @type ^`int`;
  #L338278.  v0:= v0 ^& 2;
  #L33827c.  if v0 == 0 then goto L338282;
  #L338280.  goto L338284;
  #L338282.  v1:= 0I;
  #L338284.  call temp:= `l`(v11, v12, v1) @signature `Lh2/f;.l:(La2/m;Z)Lh2/g;` @kind direct;
  #L33828a.  v0:= temp @kind object;
  #L33828c.  return v0 @kind object;
}
procedure `long` `i`(`h2.f` v4 @kind this, `long` v5 ) @signature `Lh2/f;.i:(J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L338844.  v0:= v4.`h2.f.m` @type ^`long` @kind wide;
  #L338848.  v2:= 1000000L;
  #L33884e.  v5:= v5 * v2 @kind long;
  #L338852.  v2:= v4.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L338856.  v2:= v2.`x1.d0$a.d` @type ^`int`;
  #L33885a.  v2:= (`long`) v2 @kind i2l;
  #L33885c.  v5:= v5 / v2 @kind long;
  #L33885e.  v0:= v0 + v5 @kind long;
  #L338860.  return v0 @kind wide;
}
procedure `h2.g` `l`(`h2.f` v9 @kind this, `a2.m` v10 @kind object, `boolean` v11 ) @signature `Lh2/f;.l:(La2/m;Z)Lh2/g;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3382a0.  v0:= v9.`h2.f.c` @type ^`s3.z` @kind object;
  #L3382a4.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3382aa.  v0:= temp @kind object;
  #L3382ac.  v1:= 0I;
  #L3382ae.  v2:= 4I;
  #L3382b0.  call `o`(v10, v0, v1, v2) @signature `La2/m;.o:([BII)V` @kind interface;
  #L3382b6.  v0:= v9.`h2.f.c` @type ^`s3.z` @kind object;
  #L3382ba.  call `O`(v0, v1) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3382c0.  v0:= v9.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L3382c4.  v1:= v9.`h2.f.c` @type ^`s3.z` @kind object;
  #L3382c8.  call temp:= `m`(v1) @signature `Ls3/z;.m:()I` @kind virtual;
  #L3382ce.  v1:= temp;
  #L3382d0.  call temp:= `a`(v0, v1) @signature `Lx1/d0$a;.a:(I)Z` @kind virtual;
  #L3382d6.  v0:= new `h2.a`;
  #L3382da.  call temp:= `a`(v10) @signature `La2/m;.a:()J` @kind interface;
  #L3382e0.  v3:= temp @kind wide;
  #L3382e2.  call temp:= `q`(v10) @signature `La2/m;.q:()J` @kind interface;
  #L3382e8.  v5:= temp @kind wide;
  #L3382ea.  v7:= v9.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L3382ee.  v2:= v0 @kind object;
  #L3382f0.  v8:= v11;
  #L3382f2.  call `<init>`(v2, v3, v5, v7, v8) @signature `Lh2/a;.<init>:(JJLx1/d0$a;Z)V` @kind direct;
  #L3382f8.  return v0 @kind object;
}
procedure `long` `m`(`n2.a` v5 @kind object) @signature `Lh2/f;.m:(Ln2/a;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L338874.  if v5 == 0 then goto L3388ca;
  #L338878.  call temp:= `d`(v5) @signature `Ln2/a;.d:()I` @kind virtual;
  #L33887e.  v0:= temp;
  #L338880.  v1:= 0I;
  #L338882.  if v1 >= v0 then goto L3388ca;
  #L338886.  call temp:= `c`(v5, v1) @signature `Ln2/a;.c:(I)Ln2/a$b;` @kind virtual;
  #L33888c.  v2:= temp @kind object;
  #L33888e.  v3:= instanceof @variable v2 @type ^`s2.m` @kind boolean;
  #L338892.  if v3 == 0 then goto L3388c4;
  #L338896.  v2:= (`s2.m`) v2 @kind object;
  #L33889a.  v3:= v2.`s2.i.o` @type ^`java.lang.String` @kind object;
  #L33889e.  v4:= "TLEN" @kind object;
  #L3388a2.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3388a8.  v3:= temp;
  #L3388aa.  if v3 == 0 then goto L3388c4;
  #L3388ae.  v5:= v2.`s2.m.q` @type ^`java.lang.String` @kind object;
  #L3388b2.  call temp:= `parseLong`(v5) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3388b8.  v0:= temp @kind wide;
  #L3388ba.  call temp:= `A0`(v0) @signature `Ls3/l0;.A0:(J)J` @kind static;
  #L3388c0.  v0:= temp @kind wide;
  #L3388c2.  return v0 @kind wide;
  #L3388c4.  v1:= v1 + 1;
  #L3388c8.  goto L338882;
  #L3388ca.  v0:= -4.9E-324D;
  #L3388d4.  return v0 @kind wide;
}
procedure `int` `n`(`s3.z` v2 @kind object, `int` v3 ) @signature `Lh2/f;.n:(Ls3/z;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L338480.  call temp:= `f`(v2) @signature `Ls3/z;.f:()I` @kind virtual;
  #L338486.  v0:= temp;
  #L338488.  v1:= v3 + 4;
  #L33848c.  if v0 < v1 then goto L3384b4;
  #L338490.  call `O`(v2, v3) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L338496.  call temp:= `m`(v2) @signature `Ls3/z;.m:()I` @kind virtual;
  #L33849c.  v3:= temp;
  #L33849e.  v0:= 1483304551I;
  #L3384a4.  if v3 == v0 then goto L3384b2;
  #L3384a8.  v0:= 1231971951I;
  #L3384ae.  if v3 != v0 then goto L3384b4;
  #L3384b2.  return v3;
  #L3384b4.  call temp:= `f`(v2) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3384ba.  v3:= temp;
  #L3384bc.  v0:= 40I;
  #L3384c0.  if v3 < v0 then goto L3384e2;
  #L3384c4.  v3:= 36I;
  #L3384c8.  call `O`(v2, v3) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3384ce.  call temp:= `m`(v2) @signature `Ls3/z;.m:()I` @kind virtual;
  #L3384d4.  v2:= temp;
  #L3384d6.  v3:= 1447187017I;
  #L3384dc.  if v2 != v3 then goto L3384e2;
  #L3384e0.  return v3;
  #L3384e2.  v2:= 0I;
  #L3384e4.  return v2;
}
procedure `boolean` `o`(`int` v4 , `long` v5 ) @signature `Lh2/f;.o:(IJ)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L337ecc.  v0:= -128000I;
  #L337ed2.  v4:= v4 ^& v0 @kind int;
  #L337ed4.  v0:= (`long`) v4 @kind i2l;
  #L337ed6.  v2:= -128000L;
  #L337edc.  v4:= v5 ^& v2 @kind long;
  #L337ee0.  v6:= lcmp(v0, v4);
  #L337ee4.  if v6 != 0 then goto L337eec;
  #L337ee8.  v4:= 1I;
  #L337eea.  goto L337eee;
  #L337eec.  v4:= 0I;
  #L337eee.  return v4;
}
procedure `a2.l`[] `p`() @signature `Lh2/f;.p:()[La2/l;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L337e88.  v0:= 1I;
  #L337e8a.  v0:= new `a2.l`[v0];
  #L337e8e.  v1:= new `h2.f`;
  #L337e92.  call `<init>`(v1) @signature `Lh2/f;.<init>:()V` @kind direct;
  #L337e98.  v2:= 0I;
  #L337e9a.  v0[v2]:= v1 @kind object;
  #L337e9e.  return v0 @kind object;
}
procedure `boolean` `q`(`int` v3 , `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lh2/f;.q:(IIIII)Z` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L337f00.  v0:= 2I;
  #L337f02.  v1:= 77I;
  #L337f06.  v2:= 67I;
  #L337f0a.  if v4 != v2 then goto L337f22;
  #L337f0e.  v2:= 79I;
  #L337f12.  if v5 != v2 then goto L337f22;
  #L337f16.  if v6 != v1 then goto L337f22;
  #L337f1a.  if v7 == v1 then goto L337f3e;
  #L337f1e.  if v3 == v0 then goto L337f3e;
  #L337f22.  if v4 != v1 then goto L337f42;
  #L337f26.  v4:= 76I;
  #L337f2a.  if v5 != v4 then goto L337f42;
  #L337f2e.  if v6 != v4 then goto L337f42;
  #L337f32.  v4:= 84I;
  #L337f36.  if v7 == v4 then goto L337f3e;
  #L337f3a.  if v3 != v0 then goto L337f42;
  #L337f3e.  v3:= 1I;
  #L337f40.  goto L337f44;
  #L337f42.  v3:= 0I;
  #L337f44.  return v3;
}
procedure `h2.c` `r`(`n2.a` v4 @kind object, `long` v5 ) @signature `Lh2/f;.r:(Ln2/a;J)Lh2/c;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33815c.  if v4 == 0 then goto L33819a;
  #L338160.  call temp:= `d`(v4) @signature `Ln2/a;.d:()I` @kind virtual;
  #L338166.  v0:= temp;
  #L338168.  v1:= 0I;
  #L33816a.  if v1 >= v0 then goto L33819a;
  #L33816e.  call temp:= `c`(v4, v1) @signature `Ln2/a;.c:(I)Ln2/a$b;` @kind virtual;
  #L338174.  v2:= temp @kind object;
  #L338176.  v3:= instanceof @variable v2 @type ^`s2.k` @kind boolean;
  #L33817a.  if v3 == 0 then goto L338194;
  #L33817e.  v2:= (`s2.k`) v2 @kind object;
  #L338182.  call temp:= `m`(v4) @signature `Lh2/f;.m:(Ln2/a;)J` @kind static;
  #L338188.  v0:= temp @kind wide;
  #L33818a.  call temp:= `a`(v5, v2, v0) @signature `Lh2/c;.a:(JLs2/k;J)Lh2/c;` @kind static;
  #L338190.  v4:= temp @kind object;
  #L338192.  return v4 @kind object;
  #L338194.  v1:= v1 + 1;
  #L338198.  goto L33816a;
  #L33819a.  v4:= 0I;
  #L33819c.  return v4 @kind object;
}
procedure `h2.g` `s`(`h2.f` v10 @kind this, `a2.m` v11 @kind object) @signature `Lh2/f;.s:(La2/m;)Lh2/g;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L33830c.  v5:= new `s3.z`;
  #L338310.  v0:= v10.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L338314.  v0:= v0.`x1.d0$a.c` @type ^`int`;
  #L338318.  call `<init>`(v5, v0) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L33831e.  call temp:= `d`(v5) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L338324.  v0:= temp @kind object;
  #L338326.  v1:= v10.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L33832a.  v1:= v1.`x1.d0$a.c` @type ^`int`;
  #L33832e.  v6:= 0I;
  #L338330.  call `o`(v11, v0, v6, v1) @signature `La2/m;.o:([BII)V` @kind interface;
  #L338336.  v0:= v10.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L33833a.  v1:= v0.`x1.d0$a.a` @type ^`int`;
  #L33833e.  v2:= 1I;
  #L338340.  v1:= v1 ^& v2 @kind int;
  #L338342.  v3:= 21I;
  #L338346.  v0:= v0.`x1.d0$a.e` @type ^`int`;
  #L33834a.  if v1 == 0 then goto L33835c;
  #L33834e.  if v0 == v2 then goto L338360;
  #L338352.  v3:= 36I;
  #L338356.  v7:= 36I;
  #L33835a.  goto L33836e;
  #L33835c.  if v0 == v2 then goto L338366;
  #L338360.  v7:= 21I;
  #L338364.  goto L33836e;
  #L338366.  v3:= 13I;
  #L33836a.  v7:= 13I;
  #L33836e.  call temp:= `n`(v5, v7) @signature `Lh2/f;.n:(Ls3/z;I)I` @kind static;
  #L338374.  v8:= temp;
  #L338376.  v0:= 1483304551I;
  #L33837c.  v9:= 1231971951I;
  #L338382.  if v8 == v0 then goto L3383cc;
  #L338386.  if v8 != v9 then goto L33838c;
  #L33838a.  goto L3383cc;
  #L33838c.  v0:= 1447187017I;
  #L338392.  if v8 != v0 then goto L3383c2;
  #L338396.  call temp:= `a`(v11) @signature `La2/m;.a:()J` @kind interface;
  #L33839c.  v0:= temp @kind wide;
  #L33839e.  call temp:= `q`(v11) @signature `La2/m;.q:()J` @kind interface;
  #L3383a4.  v2:= temp @kind wide;
  #L3383a6.  v4:= v10.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L3383aa.  call temp:= `a`(v0, v2, v4, v5) @signature `Lh2/h;.a:(JJLx1/d0$a;Ls3/z;)Lh2/h;` @kind static;
  #L3383b0.  v0:= temp @kind object;
  #L3383b2.  v1:= v10.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L3383b6.  v1:= v1.`x1.d0$a.c` @type ^`int`;
  #L3383ba.  call `j`(v11, v1) @signature `La2/m;.j:(I)V` @kind interface;
  #L3383c0.  goto L33846c;
  #L3383c2.  v0:= 0I;
  #L3383c4.  call `i`(v11) @signature `La2/m;.i:()V` @kind interface;
  #L3383ca.  goto L33846c;
  #L3383cc.  call temp:= `a`(v11) @signature `La2/m;.a:()J` @kind interface;
  #L3383d2.  v0:= temp @kind wide;
  #L3383d4.  call temp:= `q`(v11) @signature `La2/m;.q:()J` @kind interface;
  #L3383da.  v2:= temp @kind wide;
  #L3383dc.  v4:= v10.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L3383e0.  call temp:= `a`(v0, v2, v4, v5) @signature `Lh2/i;.a:(JJLx1/d0$a;Ls3/z;)Lh2/i;` @kind static;
  #L3383e6.  v0:= temp @kind object;
  #L3383e8.  if v0 == 0 then goto L338440;
  #L3383ec.  v1:= v10.`h2.f.e` @type ^`a2.w` @kind object;
  #L3383f0.  call temp:= `a`(v1) @signature `La2/w;.a:()Z` @kind virtual;
  #L3383f6.  v1:= temp;
  #L3383f8.  if v1 != 0 then goto L338440;
  #L3383fc.  call `i`(v11) @signature `La2/m;.i:()V` @kind interface;
  #L338402.  v7:= v7 + 141;
  #L338406.  call `p`(v11, v7) @signature `La2/m;.p:(I)V` @kind interface;
  #L33840c.  v1:= v10.`h2.f.c` @type ^`s3.z` @kind object;
  #L338410.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L338416.  v1:= temp @kind object;
  #L338418.  v2:= 3I;
  #L33841a.  call `o`(v11, v1, v6, v2) @signature `La2/m;.o:([BII)V` @kind interface;
  #L338420.  v1:= v10.`h2.f.c` @type ^`s3.z` @kind object;
  #L338424.  call `O`(v1, v6) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L33842a.  v1:= v10.`h2.f.e` @type ^`a2.w` @kind object;
  #L33842e.  v2:= v10.`h2.f.c` @type ^`s3.z` @kind object;
  #L338432.  call temp:= `F`(v2) @signature `Ls3/z;.F:()I` @kind virtual;
  #L338438.  v2:= temp;
  #L33843a.  call temp:= `d`(v1, v2) @signature `La2/w;.d:(I)Z` @kind virtual;
  #L338440.  v1:= v10.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L338444.  v1:= v1.`x1.d0$a.c` @type ^`int`;
  #L338448.  call `j`(v11, v1) @signature `La2/m;.j:(I)V` @kind interface;
  #L33844e.  if v0 == 0 then goto L33846c;
  #L338452.  call temp:= `f`(v0) @signature `La2/a0;.f:()Z` @kind interface;
  #L338458.  v1:= temp;
  #L33845a.  if v1 != 0 then goto L33846c;
  #L33845e.  if v8 != v9 then goto L33846c;
  #L338462.  call temp:= `l`(v10, v11, v6) @signature `Lh2/f;.l:(La2/m;Z)Lh2/g;` @kind direct;
  #L338468.  v11:= temp @kind object;
  #L33846a.  return v11 @kind object;
  #L33846c.  return v0 @kind object;
}
procedure `boolean` `t`(`h2.f` v8 @kind this, `a2.m` v9 @kind object) @signature `Lh2/f;.t:(La2/m;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L337f58.  v0:= v8.`h2.f.q` @type ^`h2.g` @kind object;
  #L337f5c.  v1:= 1I;
  #L337f5e.  if v0 == 0 then goto L337f8e;
  #L337f62.  call temp:= `e`(v0) @signature `Lh2/g;.e:()J` @kind interface;
  #L337f68.  v2:= temp @kind wide;
  #L337f6a.  v4:= -1L;
  #L337f6e.  v0:= lcmp(v2, v4);
  #L337f72.  if v0 == 0 then goto L337f8e;
  #L337f76.  call temp:= `n`(v9) @signature `La2/m;.n:()J` @kind interface;
  #L337f7c.  v4:= temp @kind wide;
  #L337f7e.  v6:= 4L;
  #L337f82.  v2:= v2 - v6 @kind long;
  #L337f84.  v0:= lcmp(v4, v2);
  #L337f88.  if v0 <= 0 then goto L337f8e;
  #L337f8c.  return v1;
  #L337f8e.  v0:= v8.`h2.f.c` @type ^`s3.z` @kind object;
  #L337f92.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L337f98.  v0:= temp @kind object;
  #L337f9a.  v2:= 0I;
  #L337f9c.  v3:= 4I;
  #L337f9e.  call temp:= `m`(v9, v0, v2, v3, v1) @signature `La2/m;.m:([BIIZ)Z` @kind interface;
  #L337fa4.  v9:= temp;
  #L337fa6.  v9:= v9 ^~ v1 @kind int;
  #L337fa8.  return v9;
  #L337faa.  return v1;
  catch `java.io.EOFException` @[L337f8e..L337fa6] goto L337faa;
}
procedure `int` `u`(`h2.f` v5 @kind this, `a2.m` v6 @kind object) @signature `Lh2/f;.u:(La2/m;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L338568.  v0:= v5.`h2.f.k` @type ^`int`;
  #L33856c.  if v0 != 0 then goto L33857e;
  #L338570.  v0:= 0I;
  #L338572.  call temp:= `w`(v5, v6, v0) @signature `Lh2/f;.w:(La2/m;Z)Z` @kind direct;
  #L338578.  goto L33857e;
  #L33857a.  v6:= -1I;
  #L33857c.  return v6;
  #L33857e.  v0:= v5.`h2.f.q` @type ^`h2.g` @kind object;
  #L338582.  if v0 != 0 then goto L33863e;
  #L338586.  call temp:= `h`(v5, v6) @signature `Lh2/f;.h:(La2/m;)Lh2/g;` @kind direct;
  #L33858c.  v0:= temp @kind object;
  #L33858e.  v5.`h2.f.q` @type ^`h2.g` := v0 @kind object;
  #L338592.  v1:= v5.`h2.f.h` @type ^`a2.n` @kind object;
  #L338596.  call `m`(v1, v0) @signature `La2/n;.m:(La2/a0;)V` @kind interface;
  #L33859c.  v0:= v5.`h2.f.j` @type ^`a2.d0` @kind object;
  #L3385a0.  v1:= new `v1.j1$b`;
  #L3385a4.  call `<init>`(v1) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L3385aa.  v2:= v5.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L3385ae.  v2:= v2.`x1.d0$a.b` @type ^`java.lang.String` @kind object;
  #L3385b2.  call temp:= `e0`(v1, v2) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3385b8.  v1:= temp @kind object;
  #L3385ba.  v2:= 4096I;
  #L3385be.  call temp:= `W`(v1, v2) @signature `Lv1/j1$b;.W:(I)Lv1/j1$b;` @kind virtual;
  #L3385c4.  v1:= temp @kind object;
  #L3385c6.  v2:= v5.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L3385ca.  v2:= v2.`x1.d0$a.e` @type ^`int`;
  #L3385ce.  call temp:= `H`(v1, v2) @signature `Lv1/j1$b;.H:(I)Lv1/j1$b;` @kind virtual;
  #L3385d4.  v1:= temp @kind object;
  #L3385d6.  v2:= v5.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L3385da.  v2:= v2.`x1.d0$a.d` @type ^`int`;
  #L3385de.  call temp:= `f0`(v1, v2) @signature `Lv1/j1$b;.f0:(I)Lv1/j1$b;` @kind virtual;
  #L3385e4.  v1:= temp @kind object;
  #L3385e6.  v2:= v5.`h2.f.e` @type ^`a2.w` @kind object;
  #L3385ea.  v2:= v2.`a2.w.a` @type ^`int`;
  #L3385ee.  call temp:= `N`(v1, v2) @signature `Lv1/j1$b;.N:(I)Lv1/j1$b;` @kind virtual;
  #L3385f4.  v1:= temp @kind object;
  #L3385f6.  v2:= v5.`h2.f.e` @type ^`a2.w` @kind object;
  #L3385fa.  v2:= v2.`a2.w.b` @type ^`int`;
  #L3385fe.  call temp:= `O`(v1, v2) @signature `Lv1/j1$b;.O:(I)Lv1/j1$b;` @kind virtual;
  #L338604.  v1:= temp @kind object;
  #L338606.  v2:= v5.`h2.f.a` @type ^`int`;
  #L33860a.  v2:= v2 ^& 8;
  #L33860e.  if v2 == 0 then goto L338616;
  #L338612.  v2:= 0I;
  #L338614.  goto L33861a;
  #L338616.  v2:= v5.`h2.f.l` @type ^`n2.a` @kind object;
  #L33861a.  call temp:= `X`(v1, v2) @signature `Lv1/j1$b;.X:(Ln2/a;)Lv1/j1$b;` @kind virtual;
  #L338620.  v1:= temp @kind object;
  #L338622.  call temp:= `E`(v1) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L338628.  v1:= temp @kind object;
  #L33862a.  call `b`(v0, v1) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L338630.  call temp:= `q`(v6) @signature `La2/m;.q:()J` @kind interface;
  #L338636.  v0:= temp @kind wide;
  #L338638.  v5.`h2.f.o` @type ^`long` := v0 @kind wide;
  #L33863c.  goto L33866c;
  #L33863e.  v0:= v5.`h2.f.o` @type ^`long` @kind wide;
  #L338642.  v2:= 0L;
  #L338646.  v4:= lcmp(v0, v2);
  #L33864a.  if v4 == 0 then goto L33866c;
  #L33864e.  call temp:= `q`(v6) @signature `La2/m;.q:()J` @kind interface;
  #L338654.  v0:= temp @kind wide;
  #L338656.  v2:= v5.`h2.f.o` @type ^`long` @kind wide;
  #L33865a.  v4:= lcmp(v0, v2);
  #L33865e.  if v4 >= 0 then goto L33866c;
  #L338662.  v2:= v2 - v0 @kind long;
  #L338664.  v0:= (`int`) v2 @kind l2i;
  #L338666.  call `j`(v6, v0) @signature `La2/m;.j:(I)V` @kind interface;
  #L33866c.  call temp:= `v`(v5, v6) @signature `Lh2/f;.v:(La2/m;)I` @kind direct;
  #L338672.  v6:= temp;
  #L338674.  return v6;
  catch `java.io.EOFException` @[L338572..L338578] goto L33857a;
}
procedure `int` `v`(`h2.f` v11 @kind this, `a2.m` v12 @kind object) @signature `Lh2/f;.v:(La2/m;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L338698.  v0:= v11.`h2.f.p` @type ^`int`;
  #L33869c.  v1:= 1I;
  #L33869e.  v2:= -1I;
  #L3386a0.  v3:= 0I;
  #L3386a2.  if v0 != 0 then goto L3387d0;
  #L3386a6.  call `i`(v12) @signature `La2/m;.i:()V` @kind interface;
  #L3386ac.  call temp:= `t`(v11, v12) @signature `Lh2/f;.t:(La2/m;)Z` @kind direct;
  #L3386b2.  v0:= temp;
  #L3386b4.  if v0 == 0 then goto L3386ba;
  #L3386b8.  return v2;
  #L3386ba.  v0:= v11.`h2.f.c` @type ^`s3.z` @kind object;
  #L3386be.  call `O`(v0, v3) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3386c4.  v0:= v11.`h2.f.c` @type ^`s3.z` @kind object;
  #L3386c8.  call temp:= `m`(v0) @signature `Ls3/z;.m:()I` @kind virtual;
  #L3386ce.  v0:= temp;
  #L3386d0.  v4:= v11.`h2.f.k` @type ^`int`;
  #L3386d4.  v4:= (`long`) v4 @kind i2l;
  #L3386d6.  call temp:= `o`(v0, v4) @signature `Lh2/f;.o:(IJ)Z` @kind static;
  #L3386dc.  v4:= temp;
  #L3386de.  if v4 == 0 then goto L3387c4;
  #L3386e2.  call temp:= `j`(v0) @signature `Lx1/d0;.j:(I)I` @kind static;
  #L3386e8.  v4:= temp;
  #L3386ea.  if v4 != v2 then goto L3386f0;
  #L3386ee.  goto L3387c4;
  #L3386f0.  v4:= v11.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L3386f4.  call temp:= `a`(v4, v0) @signature `Lx1/d0$a;.a:(I)Z` @kind virtual;
  #L3386fa.  v4:= v11.`h2.f.m` @type ^`long` @kind wide;
  #L3386fe.  v6:= -4.9E-324D;
  #L338708.  v0:= lcmp(v4, v6);
  #L33870c.  if v0 != 0 then goto L338754;
  #L338710.  v0:= v11.`h2.f.q` @type ^`h2.g` @kind object;
  #L338714.  call temp:= `q`(v12) @signature `La2/m;.q:()J` @kind interface;
  #L33871a.  v4:= temp @kind wide;
  #L33871c.  call temp:= `c`(v0, v4) @signature `Lh2/g;.c:(J)J` @kind interface;
  #L338722.  v4:= temp @kind wide;
  #L338724.  v11.`h2.f.m` @type ^`long` := v4 @kind wide;
  #L338728.  v4:= v11.`h2.f.b` @type ^`long` @kind wide;
  #L33872c.  v0:= lcmp(v4, v6);
  #L338730.  if v0 == 0 then goto L338754;
  #L338734.  v0:= v11.`h2.f.q` @type ^`h2.g` @kind object;
  #L338738.  v4:= 0L;
  #L33873c.  call temp:= `c`(v0, v4) @signature `Lh2/g;.c:(J)J` @kind interface;
  #L338742.  v4:= temp @kind wide;
  #L338744.  v6:= v11.`h2.f.m` @type ^`long` @kind wide;
  #L338748.  v8:= v11.`h2.f.b` @type ^`long` @kind wide;
  #L33874c.  v8:= v8 - v4 @kind long;
  #L33874e.  v6:= v6 + v8 @kind long;
  #L338750.  v11.`h2.f.m` @type ^`long` := v6 @kind wide;
  #L338754.  v0:= v11.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L338758.  v4:= v0.`x1.d0$a.c` @type ^`int`;
  #L33875c.  v11.`h2.f.p` @type ^`int` := v4;
  #L338760.  v4:= v11.`h2.f.q` @type ^`h2.g` @kind object;
  #L338764.  v5:= instanceof @variable v4 @type ^`h2.b` @kind boolean;
  #L338768.  if v5 == 0 then goto L3387d0;
  #L33876c.  v4:= (`h2.b`) v4 @kind object;
  #L338770.  v5:= v11.`h2.f.n` @type ^`long` @kind wide;
  #L338774.  v0:= v0.`x1.d0$a.g` @type ^`int`;
  #L338778.  v7:= (`long`) v0 @kind i2l;
  #L33877a.  v5:= v5 + v7 @kind long;
  #L33877c.  call temp:= `i`(v11, v5) @signature `Lh2/f;.i:(J)J` @kind direct;
  #L338782.  v5:= temp @kind wide;
  #L338784.  call temp:= `q`(v12) @signature `La2/m;.q:()J` @kind interface;
  #L33878a.  v7:= temp @kind wide;
  #L33878c.  v0:= v11.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L338790.  v0:= v0.`x1.d0$a.c` @type ^`int`;
  #L338794.  v9:= (`long`) v0 @kind i2l;
  #L338796.  v7:= v7 + v9 @kind long;
  #L338798.  call `b`(v4, v5, v7) @signature `Lh2/b;.b:(JJ)V` @kind virtual;
  #L33879e.  v0:= v11.`h2.f.s` @type ^`boolean` @kind boolean;
  #L3387a2.  if v0 == 0 then goto L3387d0;
  #L3387a6.  v5:= v11.`h2.f.t` @type ^`long` @kind wide;
  #L3387aa.  call temp:= `a`(v4, v5) @signature `Lh2/b;.a:(J)Z` @kind virtual;
  #L3387b0.  v0:= temp;
  #L3387b2.  if v0 == 0 then goto L3387d0;
  #L3387b6.  v11.`h2.f.s` @type ^`boolean` := v3 @kind boolean;
  #L3387ba.  v0:= v11.`h2.f.i` @type ^`a2.d0` @kind object;
  #L3387be.  v11.`h2.f.j` @type ^`a2.d0` := v0 @kind object;
  #L3387c2.  goto L3387d0;
  #L3387c4.  call `j`(v12, v1) @signature `La2/m;.j:(I)V` @kind interface;
  #L3387ca.  v11.`h2.f.k` @type ^`int` := v3;
  #L3387ce.  return v3;
  #L3387d0.  v0:= v11.`h2.f.j` @type ^`a2.d0` @kind object;
  #L3387d4.  v4:= v11.`h2.f.p` @type ^`int`;
  #L3387d8.  call temp:= `d`(v0, v12, v4, v1) @signature `La2/d0;.d:(Lr3/i;IZ)I` @kind interface;
  #L3387de.  v12:= temp;
  #L3387e0.  if v12 != v2 then goto L3387e6;
  #L3387e4.  return v2;
  #L3387e6.  v0:= v11.`h2.f.p` @type ^`int`;
  #L3387ea.  v0:= v0 - v12 @kind int;
  #L3387ec.  v11.`h2.f.p` @type ^`int` := v0;
  #L3387f0.  if v0 <= 0 then goto L3387f6;
  #L3387f4.  return v3;
  #L3387f6.  v4:= v11.`h2.f.j` @type ^`a2.d0` @kind object;
  #L3387fa.  v0:= v11.`h2.f.n` @type ^`long` @kind wide;
  #L3387fe.  call temp:= `i`(v11, v0) @signature `Lh2/f;.i:(J)J` @kind direct;
  #L338804.  v5:= temp @kind wide;
  #L338806.  v7:= 1I;
  #L338808.  v12:= v11.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L33880c.  v8:= v12.`x1.d0$a.c` @type ^`int`;
  #L338810.  v9:= 0I;
  #L338812.  v10:= 0I;
  #L338814.  call `f`(v4, v5, v7, v8, v9, v10) @signature `La2/d0;.f:(JIIILa2/d0$a;)V` @kind interface;
  #L33881a.  v0:= v11.`h2.f.n` @type ^`long` @kind wide;
  #L33881e.  v12:= v11.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L338822.  v12:= v12.`x1.d0$a.g` @type ^`int`;
  #L338826.  v4:= (`long`) v12 @kind i2l;
  #L338828.  v0:= v0 + v4 @kind long;
  #L33882a.  v11.`h2.f.n` @type ^`long` := v0 @kind wide;
  #L33882e.  v11.`h2.f.p` @type ^`int` := v3;
  #L338832.  return v3;
}
procedure `boolean` `w`(`h2.f` v11 @kind this, `a2.m` v12 @kind object, `boolean` v13 ) @signature `Lh2/f;.w:(La2/m;Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L337fe8.  if v13 == 0 then goto L337ff4;
  #L337fec.  v0:= 32768I;
  #L337ff2.  goto L337ff8;
  #L337ff4.  v0:= 131072I;
  #L337ff8.  call `i`(v12) @signature `La2/m;.i:()V` @kind interface;
  #L337ffe.  call temp:= `q`(v12) @signature `La2/m;.q:()J` @kind interface;
  #L338004.  v1:= temp @kind wide;
  #L338006.  v3:= 0L;
  #L33800a.  v5:= 0I;
  #L33800c.  v6:= 1I;
  #L33800e.  v7:= 0I;
  #L338010.  v8:= lcmp(v1, v3);
  #L338014.  if v8 != 0 then goto L33806c;
  #L338018.  v1:= v11.`h2.f.a` @type ^`int`;
  #L33801c.  v1:= v1 ^& 8;
  #L338020.  if v1 != 0 then goto L338028;
  #L338024.  v1:= 1I;
  #L338026.  goto L33802a;
  #L338028.  v1:= 0I;
  #L33802a.  if v1 == 0 then goto L338032;
  #L33802e.  v1:= v5 @kind object;
  #L338030.  goto L338036;
  #L338032.  v1:= `@@h2.f.u` @type ^`s2.h$a` @kind object;
  #L338036.  v2:= v11.`h2.f.f` @type ^`a2.x` @kind object;
  #L33803a.  call temp:= `a`(v2, v12, v1) @signature `La2/x;.a:(La2/m;Ls2/h$a;)Ln2/a;` @kind virtual;
  #L338040.  v1:= temp @kind object;
  #L338042.  v11.`h2.f.l` @type ^`n2.a` := v1 @kind object;
  #L338046.  if v1 == 0 then goto L338054;
  #L33804a.  v2:= v11.`h2.f.e` @type ^`a2.w` @kind object;
  #L33804e.  call temp:= `c`(v2, v1) @signature `La2/w;.c:(Ln2/a;)Z` @kind virtual;
  #L338054.  call temp:= `n`(v12) @signature `La2/m;.n:()J` @kind interface;
  #L33805a.  v1:= temp @kind wide;
  #L33805c.  v2:= (`int`) v1 @kind l2i;
  #L33805e.  if v13 != 0 then goto L338068;
  #L338062.  call `j`(v12, v2) @signature `La2/m;.j:(I)V` @kind interface;
  #L338068.  v1:= 0I;
  #L33806a.  goto L338070;
  #L33806c.  v1:= 0I;
  #L33806e.  v2:= 0I;
  #L338070.  v3:= 0I;
  #L338072.  v4:= 0I;
  #L338074.  call temp:= `t`(v11, v12) @signature `Lh2/f;.t:(La2/m;)Z` @kind direct;
  #L33807a.  v8:= temp;
  #L33807c.  if v8 == 0 then goto L338092;
  #L338080.  if v3 <= 0 then goto L338086;
  #L338084.  goto L338124;
  #L338086.  v12:= new `java.io.EOFException`;
  #L33808a.  call `<init>`(v12) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L338090.  throw v12;
  #L338092.  v8:= v11.`h2.f.c` @type ^`s3.z` @kind object;
  #L338096.  call `O`(v8, v7) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L33809c.  v8:= v11.`h2.f.c` @type ^`s3.z` @kind object;
  #L3380a0.  call temp:= `m`(v8) @signature `Ls3/z;.m:()I` @kind virtual;
  #L3380a6.  v8:= temp;
  #L3380a8.  if v1 == 0 then goto L3380ba;
  #L3380ac.  v9:= (`long`) v1 @kind i2l;
  #L3380ae.  call temp:= `o`(v8, v9) @signature `Lh2/f;.o:(IJ)Z` @kind static;
  #L3380b4.  v9:= temp;
  #L3380b6.  if v9 == 0 then goto L3380c8;
  #L3380ba.  call temp:= `j`(v8) @signature `Lx1/d0;.j:(I)I` @kind static;
  #L3380c0.  v9:= temp;
  #L3380c2.  v10:= -1I;
  #L3380c4.  if v9 != v10 then goto L338108;
  #L3380c8.  v1:= v4 + 1;
  #L3380cc.  if v4 != v0 then goto L3380e4;
  #L3380d0.  if v13 == 0 then goto L3380d6;
  #L3380d4.  return v7;
  #L3380d6.  v12:= "Searched too many bytes." @kind object;
  #L3380da.  call temp:= `a`(v12, v5) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L3380e0.  v12:= temp @kind object;
  #L3380e2.  throw v12;
  #L3380e4.  if v13 == 0 then goto L3380fa;
  #L3380e8.  call `i`(v12) @signature `La2/m;.i:()V` @kind interface;
  #L3380ee.  v3:= v2 + v1 @kind int;
  #L3380f2.  call `p`(v12, v3) @signature `La2/m;.p:(I)V` @kind interface;
  #L3380f8.  goto L338100;
  #L3380fa.  call `j`(v12, v6) @signature `La2/m;.j:(I)V` @kind interface;
  #L338100.  v4:= v1;
  #L338102.  v1:= 0I;
  #L338104.  v3:= 0I;
  #L338106.  goto L338074;
  #L338108.  v3:= v3 + 1;
  #L33810c.  if v3 != v6 then goto L33811e;
  #L338110.  v1:= v11.`h2.f.d` @type ^`x1.d0$a` @kind object;
  #L338114.  call temp:= `a`(v1, v8) @signature `Lx1/d0$a;.a:(I)Z` @kind virtual;
  #L33811a.  v1:= v8;
  #L33811c.  goto L33813e;
  #L33811e.  v8:= 4I;
  #L338120.  if v3 != v8 then goto L33813e;
  #L338124.  if v13 == 0 then goto L338132;
  #L338128.  v2:= v2 + v4 @kind int;
  #L33812a.  call `j`(v12, v2) @signature `La2/m;.j:(I)V` @kind interface;
  #L338130.  goto L338138;
  #L338132.  call `i`(v12) @signature `La2/m;.i:()V` @kind interface;
  #L338138.  v11.`h2.f.k` @type ^`int` := v1;
  #L33813c.  return v6;
  #L33813e.  v9:= v9 + -4;
  #L338142.  call `p`(v12, v9) @signature `La2/m;.p:(I)V` @kind interface;
  #L338148.  goto L338074;
}
procedure `void` `a`(`h2.f` v0 @kind this) @signature `Lh2/f;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L338a44.  return @kind void;
}
procedure `void` `b`(`h2.f` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lh2/f;.b:(JJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L338a58.  v3:= 0I;
  #L338a5a.  v2.`h2.f.k` @type ^`int` := v3;
  #L338a5e.  v0:= -4.9E-324D;
  #L338a68.  v2.`h2.f.m` @type ^`long` := v0 @kind wide;
  #L338a6c.  v0:= 0L;
  #L338a70.  v2.`h2.f.n` @type ^`long` := v0 @kind wide;
  #L338a74.  v2.`h2.f.p` @type ^`int` := v3;
  #L338a78.  v2.`h2.f.t` @type ^`long` := v5 @kind wide;
  #L338a7c.  v3:= v2.`h2.f.q` @type ^`h2.g` @kind object;
  #L338a80.  v4:= instanceof @variable v3 @type ^`h2.b` @kind boolean;
  #L338a84.  if v4 == 0 then goto L338aa6;
  #L338a88.  v3:= (`h2.b`) v3 @kind object;
  #L338a8c.  call temp:= `a`(v3, v5) @signature `Lh2/b;.a:(J)Z` @kind virtual;
  #L338a92.  v3:= temp;
  #L338a94.  if v3 != 0 then goto L338aa6;
  #L338a98.  v3:= 1I;
  #L338a9a.  v2.`h2.f.s` @type ^`boolean` := v3 @kind boolean;
  #L338a9e.  v3:= v2.`h2.f.g` @type ^`a2.d0` @kind object;
  #L338aa2.  v2.`h2.f.j` @type ^`a2.d0` := v3 @kind object;
  #L338aa6.  return @kind void;
}
procedure `void` `d`(`h2.f` v2 @kind this, `a2.n` v3 @kind object) @signature `Lh2/f;.d:(La2/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L338a10.  v2.`h2.f.h` @type ^`a2.n` := v3 @kind object;
  #L338a14.  v0:= 0I;
  #L338a16.  v1:= 1I;
  #L338a18.  call temp:= `e`(v3, v0, v1) @signature `La2/n;.e:(II)La2/d0;` @kind interface;
  #L338a1e.  v3:= temp @kind object;
  #L338a20.  v2.`h2.f.i` @type ^`a2.d0` := v3 @kind object;
  #L338a24.  v2.`h2.f.j` @type ^`a2.d0` := v3 @kind object;
  #L338a28.  v3:= v2.`h2.f.h` @type ^`a2.n` @kind object;
  #L338a2c.  call `h`(v3) @signature `La2/n;.h:()V` @kind interface;
  #L338a32.  return @kind void;
}
procedure `boolean` `g`(`h2.f` v1 @kind this, `a2.m` v2 @kind object) @signature `Lh2/f;.g:(La2/m;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L337fcc.  v0:= 1I;
  #L337fce.  call temp:= `w`(v1, v2, v0) @signature `Lh2/f;.w:(La2/m;Z)Z` @kind direct;
  #L337fd4.  v2:= temp;
  #L337fd6.  return v2;
}
procedure `int` `j`(`h2.f` v4 @kind this, `a2.m` v5 @kind object, `a2.z` v6 @kind object) @signature `Lh2/f;.j:(La2/m;La2/z;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3384f8.  call `f`(v4) @signature `Lh2/f;.f:()V` @kind direct;
  #L3384fe.  call temp:= `u`(v4, v5) @signature `Lh2/f;.u:(La2/m;)I` @kind direct;
  #L338504.  v5:= temp;
  #L338506.  v6:= -1I;
  #L338508.  if v5 != v6 then goto L338554;
  #L33850c.  v6:= v4.`h2.f.q` @type ^`h2.g` @kind object;
  #L338510.  v6:= instanceof @variable v6 @type ^`h2.b` @kind boolean;
  #L338514.  if v6 == 0 then goto L338554;
  #L338518.  v0:= v4.`h2.f.n` @type ^`long` @kind wide;
  #L33851c.  call temp:= `i`(v4, v0) @signature `Lh2/f;.i:(J)J` @kind direct;
  #L338522.  v0:= temp @kind wide;
  #L338524.  v6:= v4.`h2.f.q` @type ^`h2.g` @kind object;
  #L338528.  call temp:= `i`(v6) @signature `La2/a0;.i:()J` @kind interface;
  #L33852e.  v2:= temp @kind wide;
  #L338530.  v6:= lcmp(v2, v0);
  #L338534.  if v6 == 0 then goto L338554;
  #L338538.  v6:= v4.`h2.f.q` @type ^`h2.g` @kind object;
  #L33853c.  v6:= (`h2.b`) v6 @kind object;
  #L338540.  call `d`(v6, v0) @signature `Lh2/b;.d:(J)V` @kind virtual;
  #L338546.  v6:= v4.`h2.f.h` @type ^`a2.n` @kind object;
  #L33854a.  v0:= v4.`h2.f.q` @type ^`h2.g` @kind object;
  #L33854e.  call `m`(v6, v0) @signature `La2/n;.m:(La2/a0;)V` @kind interface;
  #L338554.  return v5;
}
procedure `void` `k`(`h2.f` v1 @kind this) @signature `Lh2/f;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3389f8.  v0:= 1I;
  #L3389fa.  v1.`h2.f.r` @type ^`boolean` := v0 @kind boolean;
  #L3389fe.  return @kind void;
}
