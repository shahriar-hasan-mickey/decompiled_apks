record `yc.c$b` @kind class @AccessFlag ABSTRACT_ENUM extends `java.lang.Enum` @kind class, `yc.i` @kind interface {
}
global `yc.c$b` `@@yc.c$b.o` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `yc.c$b` `@@yc.c$b.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `yc.c$b` `@@yc.c$b.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `yc.c$b` `@@yc.c$b.r` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int`[] `@@yc.c$b.s` @AccessFlag PRIVATE_STATIC_FINAL;
global `yc.c$b`[] `@@yc.c$b.t` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lyc/c$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4f9858.  v0:= new `yc.c$b$a`;
  #L4f985c.  v1:= "DAY_OF_QUARTER" @kind object;
  #L4f9860.  v2:= 0I;
  #L4f9862.  call `<init>`(v0, v1, v2) @signature `Lyc/c$b$a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4f9868.  `@@yc.c$b.o` @type ^`yc.c$b` := v0 @kind object;
  #L4f986c.  v1:= new `yc.c$b$b`;
  #L4f9870.  v3:= "QUARTER_OF_YEAR" @kind object;
  #L4f9874.  v4:= 1I;
  #L4f9876.  call `<init>`(v1, v3, v4) @signature `Lyc/c$b$b;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4f987c.  `@@yc.c$b.p` @type ^`yc.c$b` := v1 @kind object;
  #L4f9880.  v3:= new `yc.c$b$c`;
  #L4f9884.  v5:= "WEEK_OF_WEEK_BASED_YEAR" @kind object;
  #L4f9888.  v6:= 2I;
  #L4f988a.  call `<init>`(v3, v5, v6) @signature `Lyc/c$b$c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4f9890.  `@@yc.c$b.q` @type ^`yc.c$b` := v3 @kind object;
  #L4f9894.  v5:= new `yc.c$b$d`;
  #L4f9898.  v7:= "WEEK_BASED_YEAR" @kind object;
  #L4f989c.  v8:= 3I;
  #L4f989e.  call `<init>`(v5, v7, v8) @signature `Lyc/c$b$d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4f98a4.  `@@yc.c$b.r` @type ^`yc.c$b` := v5 @kind object;
  #L4f98a8.  v7:= 4I;
  #L4f98aa.  v7:= new `yc.c$b`[v7];
  #L4f98ae.  v7[v2]:= v0 @kind object;
  #L4f98b2.  v7[v4]:= v1 @kind object;
  #L4f98b6.  v7[v6]:= v3 @kind object;
  #L4f98ba.  v7[v8]:= v5 @kind object;
  #L4f98be.  `@@yc.c$b.t` @type ^`yc.c$b`[] := v7 @kind object;
  #L4f98c2.  v0:= 8I;
  #L4f98c6.  v0:= new `int`[v0];
  #L4f98ca.  goto L4f98d8;
  #L4f98d0.  `@@yc.c$b.s` @type ^`int`[] := v0 @kind object;
  #L4f98d4.  return @kind void;
  #L4f98d6.  
  #L4f98d8.  v0:= (0I, 90I, 181I, 273I, 0I, 91I, 182I, 274I) @kind object;
  #L4f98ff.  goto L4f98d0;
}
procedure `void` `<init>`(`yc.c$b` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lyc/c$b;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4f9910.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4f9916.  return @kind void;
}
procedure `void` `<init>`(`yc.c$b` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `yc.c$a` v3 @kind object) @signature `Lyc/c$b;.<init>:(Ljava/lang/String;ILyc/c$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4f9928.  call `<init>`(v0, v1, v2) @signature `Lyc/c$b;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4f992e.  return @kind void;
}
procedure `int` `B`(`int` v0 ) @signature `Lyc/c$b;.B:(I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4f96a8.  call temp:= `I`(v0) @signature `Lyc/c$b;.I:(I)I` @kind static;
  #L4f96ae.  v0:= temp;
  #L4f96b0.  return v0;
}
procedure `int` `D`(`uc.f` v5 @kind object) @signature `Lyc/c$b;.D:(Luc/f;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f96c4.  call temp:= `q0`(v5) @signature `Luc/f;.q0:()Luc/c;` @kind virtual;
  #L4f96ca.  v0:= temp @kind object;
  #L4f96cc.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4f96d2.  v0:= temp;
  #L4f96d4.  call temp:= `r0`(v5) @signature `Luc/f;.r0:()I` @kind virtual;
  #L4f96da.  v1:= temp;
  #L4f96dc.  v2:= 1I;
  #L4f96de.  v1:= v1 - v2 @kind int;
  #L4f96e0.  v0:= v0 - 3;
  #L4f96e4.  v0:= v0 + v1 @kind int;
  #L4f96e6.  v3:= v0 / 7;
  #L4f96ea.  v3:= v3 * 7;
  #L4f96ee.  v0:= v0 - v3 @kind int;
  #L4f96f0.  v0:= v0 + -3;
  #L4f96f4.  v3:= -3I;
  #L4f96f6.  if v0 >= v3 then goto L4f96fe;
  #L4f96fa.  v0:= v0 + 7;
  #L4f96fe.  if v1 >= v0 then goto L4f972e;
  #L4f9702.  v0:= 180I;
  #L4f9706.  call temp:= `R0`(v5, v0) @signature `Luc/f;.R0:(I)Luc/f;` @kind virtual;
  #L4f970c.  v5:= temp @kind object;
  #L4f970e.  v0:= 1L;
  #L4f9712.  call temp:= `B0`(v5, v0) @signature `Luc/f;.B0:(J)Luc/f;` @kind virtual;
  #L4f9718.  v5:= temp @kind object;
  #L4f971a.  call temp:= `K`(v5) @signature `Lyc/c$b;.K:(Luc/f;)Lyc/n;` @kind static;
  #L4f9720.  v5:= temp @kind object;
  #L4f9722.  call temp:= `c`(v5) @signature `Lyc/n;.c:()J` @kind virtual;
  #L4f9728.  v0:= temp @kind wide;
  #L4f972a.  v5:= (`int`) v0 @kind l2i;
  #L4f972c.  return v5;
  #L4f972e.  v1:= v1 - v0 @kind int;
  #L4f9730.  v1:= v1 / 7;
  #L4f9734.  v1:= v1 + v2 @kind int;
  #L4f9736.  v4:= 53I;
  #L4f973a.  if v1 != v4 then goto L4f9762;
  #L4f973e.  if v0 == v3 then goto L4f975a;
  #L4f9742.  v3:= -2I;
  #L4f9744.  if v0 != v3 then goto L4f9756;
  #L4f9748.  call temp:= `w0`(v5) @signature `Luc/f;.w0:()Z` @kind virtual;
  #L4f974e.  v5:= temp;
  #L4f9750.  if v5 == 0 then goto L4f9756;
  #L4f9754.  goto L4f975a;
  #L4f9756.  v5:= 0I;
  #L4f9758.  goto L4f975c;
  #L4f975a.  v5:= 1I;
  #L4f975c.  if v5 != 0 then goto L4f9762;
  #L4f9760.  goto L4f9764;
  #L4f9762.  v2:= v1;
  #L4f9764.  return v2;
}
procedure `int` `F`(`uc.f` v4 @kind object) @signature `Lyc/c$b;.F:(Luc/f;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f9778.  call temp:= `v0`(v4) @signature `Luc/f;.v0:()I` @kind virtual;
  #L4f977e.  v0:= temp;
  #L4f9780.  call temp:= `r0`(v4) @signature `Luc/f;.r0:()I` @kind virtual;
  #L4f9786.  v1:= temp;
  #L4f9788.  v2:= 3I;
  #L4f978a.  if v1 > v2 then goto L4f97ac;
  #L4f978e.  call temp:= `q0`(v4) @signature `Luc/f;.q0:()Luc/c;` @kind virtual;
  #L4f9794.  v4:= temp @kind object;
  #L4f9796.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4f979c.  v4:= temp;
  #L4f979e.  v1:= v1 - v4 @kind int;
  #L4f97a0.  v4:= -2I;
  #L4f97a2.  if v1 >= v4 then goto L4f97da;
  #L4f97a6.  v0:= v0 + -1;
  #L4f97aa.  goto L4f97da;
  #L4f97ac.  v2:= 363I;
  #L4f97b0.  if v1 < v2 then goto L4f97da;
  #L4f97b4.  call temp:= `q0`(v4) @signature `Luc/f;.q0:()Luc/c;` @kind virtual;
  #L4f97ba.  v3:= temp @kind object;
  #L4f97bc.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4f97c2.  v3:= temp;
  #L4f97c4.  v1:= v1 - v2 @kind int;
  #L4f97c6.  call temp:= `w0`(v4) @signature `Luc/f;.w0:()Z` @kind virtual;
  #L4f97cc.  v4:= temp;
  #L4f97ce.  v1:= v1 - v4 @kind int;
  #L4f97d0.  v1:= v1 - v3 @kind int;
  #L4f97d2.  if v1 < 0 then goto L4f97da;
  #L4f97d6.  v0:= v0 + 1;
  #L4f97da.  return v0;
}
procedure `int` `I`(`int` v2 ) @signature `Lyc/c$b;.I:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4f97ec.  v0:= 1I;
  #L4f97ee.  call temp:= `C0`(v2, v0, v0) @signature `Luc/f;.C0:(III)Luc/f;` @kind static;
  #L4f97f4.  v2:= temp @kind object;
  #L4f97f6.  call temp:= `q0`(v2) @signature `Luc/f;.q0:()Luc/c;` @kind virtual;
  #L4f97fc.  v0:= temp @kind object;
  #L4f97fe.  v1:= `@@uc.c.r` @type ^`uc.c` @kind object;
  #L4f9802.  if v0 == v1 then goto L4f982a;
  #L4f9806.  call temp:= `q0`(v2) @signature `Luc/f;.q0:()Luc/c;` @kind virtual;
  #L4f980c.  v0:= temp @kind object;
  #L4f980e.  v1:= `@@uc.c.q` @type ^`uc.c` @kind object;
  #L4f9812.  if v0 != v1 then goto L4f9824;
  #L4f9816.  call temp:= `w0`(v2) @signature `Luc/f;.w0:()Z` @kind virtual;
  #L4f981c.  v2:= temp;
  #L4f981e.  if v2 == 0 then goto L4f9824;
  #L4f9822.  goto L4f982a;
  #L4f9824.  v2:= 52I;
  #L4f9828.  return v2;
  #L4f982a.  v2:= 53I;
  #L4f982e.  return v2;
}
procedure `yc.n` `K`(`uc.f` v4 @kind object) @signature `Lyc/c$b;.K:(Luc/f;)Lyc/n;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f99b8.  call temp:= `F`(v4) @signature `Lyc/c$b;.F:(Luc/f;)I` @kind static;
  #L4f99be.  v4:= temp;
  #L4f99c0.  call temp:= `I`(v4) @signature `Lyc/c$b;.I:(I)I` @kind static;
  #L4f99c6.  v4:= temp;
  #L4f99c8.  v0:= (`long`) v4 @kind i2l;
  #L4f99ca.  v2:= 1L;
  #L4f99ce.  call temp:= `i`(v2, v0) @signature `Lyc/n;.i:(JJ)Lyc/n;` @kind static;
  #L4f99d4.  v4:= temp @kind object;
  #L4f99d6.  return v4 @kind object;
}
procedure `boolean` `L`(`yc.e` v1 @kind object) @signature `Lyc/c$b;.L:(Lyc/e;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4f9634.  call temp:= `k`(v1) @signature `Lvc/h;.k:(Lyc/e;)Lvc/h;` @kind static;
  #L4f963a.  v1:= temp @kind object;
  #L4f963c.  v0:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L4f9640.  call temp:= `equals`(v1, v0) @signature `Lvc/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f9646.  v1:= temp;
  #L4f9648.  return v1;
}
procedure `boolean` `r`(`yc.e` v0 @kind object) @signature `Lyc/c$b;.r:(Lyc/e;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4f9604.  call temp:= `L`(v0) @signature `Lyc/c$b;.L:(Lyc/e;)Z` @kind static;
  #L4f960a.  v0:= temp;
  #L4f960c.  return v0;
}
procedure `int`[] `s`() @signature `Lyc/c$b;.s:()[I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L4f9840.  v0:= `@@yc.c$b.s` @type ^`int`[] @kind object;
  #L4f9844.  return v0 @kind object;
}
procedure `yc.n` `t`(`uc.f` v0 @kind object) @signature `Lyc/c$b;.t:(Luc/f;)Lyc/n;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4f999c.  call temp:= `K`(v0) @signature `Lyc/c$b;.K:(Luc/f;)Lyc/n;` @kind static;
  #L4f99a2.  v0:= temp @kind object;
  #L4f99a4.  return v0 @kind object;
}
procedure `int` `v`(`uc.f` v0 @kind object) @signature `Lyc/c$b;.v:(Luc/f;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4f9670.  call temp:= `D`(v0) @signature `Lyc/c$b;.D:(Luc/f;)I` @kind static;
  #L4f9676.  v0:= temp;
  #L4f9678.  return v0;
}
procedure `yc.c$b` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lyc/c$b;.valueOf:(Ljava/lang/String;)Lyc/c$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4f9940.  v0:= constclass @type ^`yc.c$b` @kind object;
  #L4f9944.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L4f994a.  v1:= temp @kind object;
  #L4f994c.  v1:= (`yc.c$b`) v1 @kind object;
  #L4f9950.  return v1 @kind object;
}
procedure `yc.c$b`[] `values`() @signature `Lyc/c$b;.values:()[Lyc/c$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4f9964.  v0:= `@@yc.c$b.t` @type ^`yc.c$b`[] @kind object;
  #L4f9968.  call temp:= `clone`(v0) @signature `[Lyc/c$b;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4f996e.  v0:= temp @kind object;
  #L4f9970.  v0:= (`yc.c$b`[]) v0 @kind object;
  #L4f9974.  return v0 @kind object;
}
procedure `int` `x`(`uc.f` v0 @kind object) @signature `Lyc/c$b;.x:(Luc/f;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4f968c.  call temp:= `F`(v0) @signature `Lyc/c$b;.F:(Luc/f;)I` @kind static;
  #L4f9692.  v0:= temp;
  #L4f9694.  return v0;
}
procedure `boolean` `c`(`yc.c$b` v1 @kind this) @signature `Lyc/c$b;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9620.  v0:= 1I;
  #L4f9622.  return v0;
}
procedure `yc.e` `d`(`yc.c$b` v0 @kind this, `java.util.Map` v1 @kind object, `yc.e` v2 @kind object, `wc.i` v3 @kind object) @signature `Lyc/c$b;.d:(Ljava/util/Map;Lyc/e;Lwc/i;)Lyc/e;` @AccessFlag PUBLIC {
    temp;

  #L4f9988.  v1:= 0I;
  #L4f998a.  return v1 @kind object;
}
procedure `boolean` `i`(`yc.c$b` v1 @kind this) @signature `Lyc/c$b;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f965c.  v0:= 0I;
  #L4f965e.  return v0;
}
