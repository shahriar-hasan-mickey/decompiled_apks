record `yc.j$c` @kind class @AccessFlag  extends `yc.k` @kind interface {
}
procedure `void` `<init>`(`yc.j$c` v0 @kind this) @signature `Lyc/j$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f9d74.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f9d7a.  return @kind void;
}
procedure `java.lang.Object` `a`(`yc.j$c` v0 @kind this, `yc.e` v1 @kind object) @signature `Lyc/j$c;.a:(Lyc/e;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4f9d58.  call temp:= `b`(v0, v1) @signature `Lyc/j$c;.b:(Lyc/e;)Lyc/l;` @kind virtual;
  #L4f9d5e.  v1:= temp @kind object;
  #L4f9d60.  return v1 @kind object;
}
procedure `yc.l` `b`(`yc.j$c` v0 @kind this, `yc.e` v1 @kind object) @signature `Lyc/j$c;.b:(Lyc/e;)Lyc/l;` @AccessFlag PUBLIC {
    temp;

  #L4f9d8c.  call temp:= `j`(v1, v0) @signature `Lyc/e;.j:(Lyc/k;)Ljava/lang/Object;` @kind interface;
  #L4f9d92.  v1:= temp @kind object;
  #L4f9d94.  v1:= (`yc.l`) v1 @kind object;
  #L4f9d98.  return v1 @kind object;
}
