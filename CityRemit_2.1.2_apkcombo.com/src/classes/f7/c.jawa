record `f7.c` @kind class @AccessFlag PUBLIC extends `f7.n` @kind interface {
  `u6.c` `f7.c.o` @AccessFlag PRIVATE_FINAL;
  `f7.n` `f7.c.p` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `f7.c.q` @AccessFlag PRIVATE;
}
global `java.util.Comparator` `@@f7.c.r` @AccessFlag PUBLIC_STATIC;
procedure `void` `<clinit>`() @signature `Lf7/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L308724.  v0:= new `f7.c$a`;
  #L308728.  call `<init>`(v0) @signature `Lf7/c$a;.<init>:()V` @kind direct;
  #L30872e.  `@@f7.c.r` @type ^`java.util.Comparator` := v0 @kind object;
  #L308732.  return @kind void;
}
procedure `void` `<init>`(`f7.c` v1 @kind this) @signature `Lf7/c;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L308744.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30874a.  v0:= 0I;
  #L30874c.  v1.`f7.c.q` @type ^`java.lang.String` := v0 @kind object;
  #L308750.  v0:= `@@f7.c.r` @type ^`java.util.Comparator` @kind object;
  #L308754.  call temp:= `c`(v0) @signature `Lu6/c$a;.c:(Ljava/util/Comparator;)Lu6/c;` @kind static;
  #L30875a.  v0:= temp @kind object;
  #L30875c.  v1.`f7.c.o` @type ^`u6.c` := v0 @kind object;
  #L308760.  call temp:= `a`() @signature `Lf7/r;.a:()Lf7/n;` @kind static;
  #L308766.  v0:= temp @kind object;
  #L308768.  v1.`f7.c.p` @type ^`f7.n` := v0 @kind object;
  #L30876c.  return @kind void;
}
procedure `void` `<init>`(`f7.c` v1 @kind this, `u6.c` v2 @kind object, `f7.n` v3 @kind object) @signature `Lf7/c;.<init>:(Lu6/c;Lf7/n;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L308780.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L308786.  v0:= 0I;
  #L308788.  v1.`f7.c.q` @type ^`java.lang.String` := v0 @kind object;
  #L30878c.  call temp:= `isEmpty`(v2) @signature `Lu6/c;.isEmpty:()Z` @kind virtual;
  #L308792.  v0:= temp;
  #L308794.  if v0 == 0 then goto L3087b6;
  #L308798.  call temp:= `isEmpty`(v3) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L30879e.  v0:= temp;
  #L3087a0.  if v0 == 0 then goto L3087a6;
  #L3087a4.  goto L3087b6;
  #L3087a6.  v2:= new `java.lang.IllegalArgumentException`;
  #L3087aa.  v3:= "Can't create empty ChildrenNode with priority!" @kind object;
  #L3087ae.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3087b4.  throw v2;
  #L3087b6.  v1.`f7.c.p` @type ^`f7.n` := v3 @kind object;
  #L3087ba.  v1.`f7.c.o` @type ^`u6.c` := v2 @kind object;
  #L3087be.  return @kind void;
}
procedure `void` `d0`(`f7.c` v5 @kind this, `java.lang.StringBuilder` v6 @kind object, `int` v7 ) @signature `Lf7/c;.d0:(Ljava/lang/StringBuilder;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L308860.  v0:= v5.`f7.c.o` @type ^`u6.c` @kind object;
  #L308864.  call temp:= `isEmpty`(v0) @signature `Lu6/c;.isEmpty:()Z` @kind virtual;
  #L30886a.  v0:= temp;
  #L30886c.  if v0 == 0 then goto L30888c;
  #L308870.  v0:= v5.`f7.c.p` @type ^`f7.n` @kind object;
  #L308874.  call temp:= `isEmpty`(v0) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L30887a.  v0:= temp;
  #L30887c.  if v0 == 0 then goto L30888c;
  #L308880.  v7:= "{ }" @kind object;
  #L308884.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30888a.  goto L308972;
  #L30888c.  v0:= "{\n" @kind object;
  #L308890.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308896.  v0:= v5.`f7.c.o` @type ^`u6.c` @kind object;
  #L30889a.  call temp:= `iterator`(v0) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3088a0.  v0:= temp @kind object;
  #L3088a2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3088a8.  v1:= temp;
  #L3088aa.  v2:= "\n" @kind object;
  #L3088ae.  if v1 == 0 then goto L30892a;
  #L3088b2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3088b8.  v1:= temp @kind object;
  #L3088ba.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L3088be.  v3:= v7 + 2;
  #L3088c2.  call `h`(v6, v3) @signature `Lf7/c;.h:(Ljava/lang/StringBuilder;I)V` @kind static;
  #L3088c8.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3088ce.  v4:= temp @kind object;
  #L3088d0.  v4:= (`f7.b`) v4 @kind object;
  #L3088d4.  call temp:= `d`(v4) @signature `Lf7/b;.d:()Ljava/lang/String;` @kind virtual;
  #L3088da.  v4:= temp @kind object;
  #L3088dc.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3088e2.  v4:= "=" @kind object;
  #L3088e6.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3088ec.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3088f2.  v4:= temp @kind object;
  #L3088f4.  v4:= instanceof @variable v4 @type ^`f7.c` @kind boolean;
  #L3088f8.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3088fe.  v1:= temp @kind object;
  #L308900.  if v4 == 0 then goto L308910;
  #L308904.  v1:= (`f7.c`) v1 @kind object;
  #L308908.  call `d0`(v1, v6, v3) @signature `Lf7/c;.d0:(Ljava/lang/StringBuilder;I)V` @kind direct;
  #L30890e.  goto L308922;
  #L308910.  v1:= (`f7.n`) v1 @kind object;
  #L308914.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L30891a.  v1:= temp @kind object;
  #L30891c.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308922.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308928.  goto L3088a2;
  #L30892a.  v0:= v5.`f7.c.p` @type ^`f7.n` @kind object;
  #L30892e.  call temp:= `isEmpty`(v0) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L308934.  v0:= temp;
  #L308936.  if v0 != 0 then goto L308966;
  #L30893a.  v0:= v7 + 2;
  #L30893e.  call `h`(v6, v0) @signature `Lf7/c;.h:(Ljava/lang/StringBuilder;I)V` @kind static;
  #L308944.  v0:= ".priority=" @kind object;
  #L308948.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30894e.  v0:= v5.`f7.c.p` @type ^`f7.n` @kind object;
  #L308952.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L308958.  v0:= temp @kind object;
  #L30895a.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308960.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308966.  call `h`(v6, v7) @signature `Lf7/c;.h:(Ljava/lang/StringBuilder;I)V` @kind static;
  #L30896c.  v7:= "}" @kind object;
  #L308970.  goto L308884;
  #L308972.  return @kind void;
}
procedure `void` `h`(`java.lang.StringBuilder` v2 @kind object, `int` v3 ) @signature `Lf7/c;.h:(Ljava/lang/StringBuilder;I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3087d0.  v0:= 0I;
  #L3087d2.  if v0 >= v3 then goto L3087e6;
  #L3087d6.  v1:= " " @kind object;
  #L3087da.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3087e0.  v0:= v0 + 1;
  #L3087e4.  goto L3087d2;
  #L3087e6.  return @kind void;
}
procedure `boolean` `A`(`f7.c` v1 @kind this) @signature `Lf7/c;.A:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L308050.  v0:= 0I;
  #L308052.  return v0;
}
procedure `int` `C`(`f7.c` v1 @kind this) @signature `Lf7/c;.C:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L308314.  v0:= v1.`f7.c.o` @type ^`u6.c` @kind object;
  #L308318.  call temp:= `size`(v0) @signature `Lu6/c;.size:()I` @kind virtual;
  #L30831e.  v0:= temp;
  #L308320.  return v0;
}
procedure `f7.n` `E`(`f7.c` v2 @kind this, `f7.n` v3 @kind object) @signature `Lf7/c;.E:(Lf7/n;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30825c.  v0:= v2.`f7.c.o` @type ^`u6.c` @kind object;
  #L308260.  call temp:= `isEmpty`(v0) @signature `Lu6/c;.isEmpty:()Z` @kind virtual;
  #L308266.  v0:= temp;
  #L308268.  if v0 == 0 then goto L308276;
  #L30826c.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L308272.  v3:= temp @kind object;
  #L308274.  return v3 @kind object;
  #L308276.  v0:= new `f7.c`;
  #L30827a.  v1:= v2.`f7.c.o` @type ^`u6.c` @kind object;
  #L30827e.  call `<init>`(v0, v1, v3) @signature `Lf7/c;.<init>:(Lu6/c;Lf7/n;)V` @kind direct;
  #L308284.  return v0 @kind object;
}
procedure `f7.n` `H`(`f7.c` v1 @kind this, `x6.l` v2 @kind object) @signature `Lf7/c;.H:(Lx6/l;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3080d0.  call temp:= `h0`(v2) @signature `Lx6/l;.h0:()Lf7/b;` @kind virtual;
  #L3080d6.  v0:= temp @kind object;
  #L3080d8.  if v0 != 0 then goto L3080de;
  #L3080dc.  return v1 @kind object;
  #L3080de.  call temp:= `z`(v1, v0) @signature `Lf7/c;.z:(Lf7/b;)Lf7/n;` @kind virtual;
  #L3080e4.  v0:= temp @kind object;
  #L3080e6.  call temp:= `k0`(v2) @signature `Lx6/l;.k0:()Lx6/l;` @kind virtual;
  #L3080ec.  v2:= temp @kind object;
  #L3080ee.  call temp:= `H`(v0, v2) @signature `Lf7/n;.H:(Lx6/l;)Lf7/n;` @kind interface;
  #L3080f4.  v2:= temp @kind object;
  #L3080f6.  return v2 @kind object;
}
procedure `boolean` `J`(`f7.c` v0 @kind this, `f7.b` v1 @kind object) @signature `Lf7/c;.J:(Lf7/b;)Z` @AccessFlag PUBLIC {
    temp;

  #L308008.  call temp:= `z`(v0, v1) @signature `Lf7/c;.z:(Lf7/b;)Lf7/n;` @kind virtual;
  #L30800e.  v1:= temp @kind object;
  #L308010.  call temp:= `isEmpty`(v1) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L308016.  v1:= temp;
  #L308018.  v1:= v1 ^~ 1;
  #L30801c.  return v1;
}
procedure `java.lang.String` `M`(`f7.c` v6 @kind this, `f7.n$b` v7 @kind object) @signature `Lf7/c;.M:(Lf7/n$b;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L308560.  v0:= `@@f7.n$b.o` @type ^`f7.n$b` @kind object;
  #L308564.  if v7 != v0 then goto L308686;
  #L308568.  v7:= new `java.lang.StringBuilder`;
  #L30856c.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L308572.  v1:= v6.`f7.c.p` @type ^`f7.n` @kind object;
  #L308576.  call temp:= `isEmpty`(v1) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L30857c.  v1:= temp;
  #L30857e.  v2:= ":" @kind object;
  #L308582.  if v1 != 0 then goto L3085a8;
  #L308586.  v1:= "priority:" @kind object;
  #L30858a.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308590.  v1:= v6.`f7.c.p` @type ^`f7.n` @kind object;
  #L308594.  call temp:= `M`(v1, v0) @signature `Lf7/n;.M:(Lf7/n$b;)Ljava/lang/String;` @kind interface;
  #L30859a.  v0:= temp @kind object;
  #L30859c.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3085a2.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3085a8.  v0:= new `java.util.ArrayList`;
  #L3085ac.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3085b2.  call temp:= `iterator`(v6) @signature `Lf7/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3085b8.  v1:= temp @kind object;
  #L3085ba.  v3:= 0I;
  #L3085bc.  v4:= 0I;
  #L3085be.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3085c4.  v5:= temp;
  #L3085c6.  if v5 == 0 then goto L308600;
  #L3085ca.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3085d0.  v5:= temp @kind object;
  #L3085d2.  v5:= (`f7.m`) v5 @kind object;
  #L3085d6.  call temp:= `add`(v0, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3085dc.  if v4 != 0 then goto L3085fc;
  #L3085e0.  call temp:= `d`(v5) @signature `Lf7/m;.d:()Lf7/n;` @kind virtual;
  #L3085e6.  v4:= temp @kind object;
  #L3085e8.  call temp:= `q`(v4) @signature `Lf7/n;.q:()Lf7/n;` @kind interface;
  #L3085ee.  v4:= temp @kind object;
  #L3085f0.  call temp:= `isEmpty`(v4) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L3085f6.  v4:= temp;
  #L3085f8.  if v4 != 0 then goto L3085bc;
  #L3085fc.  v4:= 1I;
  #L3085fe.  goto L3085be;
  #L308600.  if v4 == 0 then goto L308612;
  #L308604.  call temp:= `j`() @signature `Lf7/q;.j:()Lf7/q;` @kind static;
  #L30860a.  v1:= temp @kind object;
  #L30860c.  call `sort`(v0, v1) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L308612.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L308618.  v0:= temp @kind object;
  #L30861a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L308620.  v1:= temp;
  #L308622.  if v1 == 0 then goto L30867c;
  #L308626.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L30862c.  v1:= temp @kind object;
  #L30862e.  v1:= (`f7.m`) v1 @kind object;
  #L308632.  call temp:= `d`(v1) @signature `Lf7/m;.d:()Lf7/n;` @kind virtual;
  #L308638.  v3:= temp @kind object;
  #L30863a.  call temp:= `Z`(v3) @signature `Lf7/n;.Z:()Ljava/lang/String;` @kind interface;
  #L308640.  v3:= temp @kind object;
  #L308642.  v4:= "" @kind object;
  #L308646.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30864c.  v4:= temp;
  #L30864e.  if v4 != 0 then goto L30861a;
  #L308652.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308658.  call temp:= `c`(v1) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L30865e.  v1:= temp @kind object;
  #L308660.  call temp:= `d`(v1) @signature `Lf7/b;.d:()Ljava/lang/String;` @kind virtual;
  #L308666.  v1:= temp @kind object;
  #L308668.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30866e.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308674.  call temp:= `append`(v7, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30867a.  goto L30861a;
  #L30867c.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L308682.  v7:= temp @kind object;
  #L308684.  return v7 @kind object;
  #L308686.  v7:= new `java.lang.IllegalArgumentException`;
  #L30868a.  v0:= "Hashes on children nodes only supported for V1" @kind object;
  #L30868e.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L308694.  throw v7;
}
procedure `java.lang.Object` `R`(`f7.c` v10 @kind this, `boolean` v11 ) @signature `Lf7/c;.R:(Z)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3083b4.  call temp:= `isEmpty`(v10) @signature `Lf7/c;.isEmpty:()Z` @kind virtual;
  #L3083ba.  v0:= temp;
  #L3083bc.  if v0 == 0 then goto L3083c4;
  #L3083c0.  v11:= 0I;
  #L3083c2.  return v11 @kind object;
  #L3083c4.  v0:= new `java.util.HashMap`;
  #L3083c8.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3083ce.  v1:= v10.`f7.c.o` @type ^`u6.c` @kind object;
  #L3083d2.  call temp:= `iterator`(v1) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3083d8.  v1:= temp @kind object;
  #L3083da.  v2:= 1I;
  #L3083dc.  v3:= 0I;
  #L3083de.  v4:= 0I;
  #L3083e0.  v5:= 1I;
  #L3083e2.  v6:= 0I;
  #L3083e4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3083ea.  v7:= temp;
  #L3083ec.  if v7 == 0 then goto L308482;
  #L3083f0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3083f6.  v7:= temp @kind object;
  #L3083f8.  v7:= (`java.util.Map$Entry`) v7 @kind object;
  #L3083fc.  call temp:= `getKey`(v7) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L308402.  v8:= temp @kind object;
  #L308404.  v8:= (`f7.b`) v8 @kind object;
  #L308408.  call temp:= `d`(v8) @signature `Lf7/b;.d:()Ljava/lang/String;` @kind virtual;
  #L30840e.  v8:= temp @kind object;
  #L308410.  call temp:= `getValue`(v7) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L308416.  v7:= temp @kind object;
  #L308418.  v7:= (`f7.n`) v7 @kind object;
  #L30841c.  call temp:= `R`(v7, v11) @signature `Lf7/n;.R:(Z)Ljava/lang/Object;` @kind interface;
  #L308422.  v7:= temp @kind object;
  #L308424.  call temp:= `put`(v0, v8, v7) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30842a.  v4:= v4 + 1;
  #L30842e.  if v5 == 0 then goto L3083e4;
  #L308432.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L308438.  v7:= temp;
  #L30843a.  if v7 <= v2 then goto L308450;
  #L30843e.  call temp:= `charAt`(v8, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L308444.  v7:= temp;
  #L308446.  v9:= 48I;
  #L30844a.  if v7 != v9 then goto L308450;
  #L30844e.  goto L30847e;
  #L308450.  call temp:= `k`(v8) @signature `La7/m;.k:(Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L308456.  v7:= temp @kind object;
  #L308458.  if v7 == 0 then goto L30847e;
  #L30845c.  call temp:= `intValue`(v7) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L308462.  v8:= temp;
  #L308464.  if v8 < 0 then goto L30847e;
  #L308468.  call temp:= `intValue`(v7) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L30846e.  v8:= temp;
  #L308470.  if v8 <= v6 then goto L3083e4;
  #L308474.  call temp:= `intValue`(v7) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L30847a.  v6:= temp;
  #L30847c.  goto L3083e4;
  #L30847e.  v5:= 0I;
  #L308480.  goto L3083e4;
  #L308482.  if v11 != 0 then goto L3084dc;
  #L308486.  if v5 == 0 then goto L3084dc;
  #L30848a.  v4:= v4 * 2;
  #L30848e.  if v6 >= v4 then goto L3084dc;
  #L308492.  v11:= new `java.util.ArrayList`;
  #L308496.  v1:= v6 + 1;
  #L30849a.  call `<init>`(v11, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3084a0.  if v3 > v6 then goto L3084da;
  #L3084a4.  v1:= new `java.lang.StringBuilder`;
  #L3084a8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3084ae.  v2:= "" @kind object;
  #L3084b2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3084b8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3084be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3084c4.  v1:= temp @kind object;
  #L3084c6.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3084cc.  v1:= temp @kind object;
  #L3084ce.  call temp:= `add`(v11, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3084d4.  v3:= v3 + 1;
  #L3084d8.  goto L3084a0;
  #L3084da.  return v11 @kind object;
  #L3084dc.  if v11 == 0 then goto L308506;
  #L3084e0.  v11:= v10.`f7.c.p` @type ^`f7.n` @kind object;
  #L3084e4.  call temp:= `isEmpty`(v11) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L3084ea.  v11:= temp;
  #L3084ec.  if v11 != 0 then goto L308506;
  #L3084f0.  v11:= v10.`f7.c.p` @type ^`f7.n` @kind object;
  #L3084f4.  call temp:= `getValue`(v11) @signature `Lf7/n;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3084fa.  v11:= temp @kind object;
  #L3084fc.  v1:= ".priority" @kind object;
  #L308500.  call temp:= `put`(v0, v1, v11) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L308506.  return v0 @kind object;
}
procedure `int` `S`(`f7.c` v4 @kind this, `f7.n` v5 @kind object) @signature `Lf7/c;.S:(Lf7/n;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L308298.  call temp:= `isEmpty`(v4) @signature `Lf7/c;.isEmpty:()Z` @kind virtual;
  #L30829e.  v0:= temp;
  #L3082a0.  v1:= 0I;
  #L3082a2.  v2:= -1I;
  #L3082a4.  if v0 == 0 then goto L3082b8;
  #L3082a8.  call temp:= `isEmpty`(v5) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L3082ae.  v5:= temp;
  #L3082b0.  if v5 == 0 then goto L3082b6;
  #L3082b4.  return v1;
  #L3082b6.  return v2;
  #L3082b8.  call temp:= `A`(v5) @signature `Lf7/n;.A:()Z` @kind interface;
  #L3082be.  v0:= temp;
  #L3082c0.  v3:= 1I;
  #L3082c2.  if v0 == 0 then goto L3082c8;
  #L3082c6.  return v3;
  #L3082c8.  call temp:= `isEmpty`(v5) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L3082ce.  v0:= temp;
  #L3082d0.  if v0 == 0 then goto L3082d6;
  #L3082d4.  return v3;
  #L3082d6.  v0:= `@@f7.n.m` @type ^`f7.c` @kind object;
  #L3082da.  if v5 != v0 then goto L3082e0;
  #L3082de.  return v2;
  #L3082e0.  return v1;
}
procedure `void` `T`(`f7.c` v1 @kind this, `f7.c$c` v2 @kind object) @signature `Lf7/c;.T:(Lf7/c$c;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3087f8.  v0:= 0I;
  #L3087fa.  call `a0`(v1, v2, v0) @signature `Lf7/c;.a0:(Lf7/c$c;Z)V` @kind virtual;
  #L308800.  return @kind void;
}
procedure `f7.n` `U`(`f7.c` v2 @kind this, `x6.l` v3 @kind object, `f7.n` v4 @kind object) @signature `Lf7/c;.U:(Lx6/l;Lf7/n;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L308180.  call temp:= `h0`(v3) @signature `Lx6/l;.h0:()Lf7/b;` @kind virtual;
  #L308186.  v0:= temp @kind object;
  #L308188.  if v0 != 0 then goto L30818e;
  #L30818c.  return v4 @kind object;
  #L30818e.  call temp:= `t`(v0) @signature `Lf7/b;.t:()Z` @kind virtual;
  #L308194.  v1:= temp;
  #L308196.  if v1 == 0 then goto L3081b2;
  #L30819a.  call temp:= `b`(v4) @signature `Lf7/r;.b:(Lf7/n;)Z` @kind static;
  #L3081a0.  v3:= temp;
  #L3081a2.  call `f`(v3) @signature `La7/m;.f:(Z)V` @kind static;
  #L3081a8.  call temp:= `E`(v2, v4) @signature `Lf7/c;.E:(Lf7/n;)Lf7/n;` @kind virtual;
  #L3081ae.  v3:= temp @kind object;
  #L3081b0.  return v3 @kind object;
  #L3081b2.  call temp:= `z`(v2, v0) @signature `Lf7/c;.z:(Lf7/b;)Lf7/n;` @kind virtual;
  #L3081b8.  v1:= temp @kind object;
  #L3081ba.  call temp:= `k0`(v3) @signature `Lx6/l;.k0:()Lx6/l;` @kind virtual;
  #L3081c0.  v3:= temp @kind object;
  #L3081c2.  call temp:= `U`(v1, v3, v4) @signature `Lf7/n;.U:(Lx6/l;Lf7/n;)Lf7/n;` @kind interface;
  #L3081c8.  v3:= temp @kind object;
  #L3081ca.  call temp:= `m`(v2, v0, v3) @signature `Lf7/c;.m:(Lf7/b;Lf7/n;)Lf7/n;` @kind virtual;
  #L3081d0.  v3:= temp @kind object;
  #L3081d2.  return v3 @kind object;
}
procedure `java.util.Iterator` `W`(`f7.c` v2 @kind this) @signature `Lf7/c;.W:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3086fc.  v0:= new `f7.c$d`;
  #L308700.  v1:= v2.`f7.c.o` @type ^`u6.c` @kind object;
  #L308704.  call temp:= `W`(v1) @signature `Lu6/c;.W:()Ljava/util/Iterator;` @kind virtual;
  #L30870a.  v1:= temp @kind object;
  #L30870c.  call `<init>`(v0, v1) @signature `Lf7/c$d;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L308712.  return v0 @kind object;
}
procedure `java.lang.String` `Z`(`f7.c` v2 @kind this) @signature `Lf7/c;.Z:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L308518.  v0:= v2.`f7.c.q` @type ^`java.lang.String` @kind object;
  #L30851c.  if v0 != 0 then goto L30854a;
  #L308520.  v0:= `@@f7.n$b.o` @type ^`f7.n$b` @kind object;
  #L308524.  call temp:= `M`(v2, v0) @signature `Lf7/c;.M:(Lf7/n$b;)Ljava/lang/String;` @kind virtual;
  #L30852a.  v0:= temp @kind object;
  #L30852c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L308532.  v1:= temp;
  #L308534.  if v1 == 0 then goto L30853e;
  #L308538.  v0:= "" @kind object;
  #L30853c.  goto L308546;
  #L30853e.  call temp:= `i`(v0) @signature `La7/m;.i:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L308544.  v0:= temp @kind object;
  #L308546.  v2.`f7.c.q` @type ^`java.lang.String` := v0 @kind object;
  #L30854a.  v0:= v2.`f7.c.q` @type ^`java.lang.String` @kind object;
  #L30854e.  return v0 @kind object;
}
procedure `void` `a0`(`f7.c` v1 @kind this, `f7.c$c` v2 @kind object, `boolean` v3 ) @signature `Lf7/c;.a0:(Lf7/c$c;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L308814.  if v3 == 0 then goto L308844;
  #L308818.  call temp:= `q`(v1) @signature `Lf7/c;.q:()Lf7/n;` @kind virtual;
  #L30881e.  v3:= temp @kind object;
  #L308820.  call temp:= `isEmpty`(v3) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L308826.  v3:= temp;
  #L308828.  if v3 == 0 then goto L30882e;
  #L30882c.  goto L308844;
  #L30882e.  v3:= v1.`f7.c.o` @type ^`u6.c` @kind object;
  #L308832.  v0:= new `f7.c$b`;
  #L308836.  call `<init>`(v0, v1, v2) @signature `Lf7/c$b;.<init>:(Lf7/c;Lf7/c$c;)V` @kind direct;
  #L30883c.  call `u`(v3, v0) @signature `Lu6/c;.u:(Lu6/h$b;)V` @kind virtual;
  #L308842.  goto L30884e;
  #L308844.  v3:= v1.`f7.c.o` @type ^`u6.c` @kind object;
  #L308848.  call `u`(v3, v2) @signature `Lu6/c;.u:(Lu6/h$b;)V` @kind virtual;
  #L30884e.  return @kind void;
}
procedure `f7.b` `b0`(`f7.c` v1 @kind this) @signature `Lf7/c;.b0:()Lf7/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L308064.  v0:= v1.`f7.c.o` @type ^`u6.c` @kind object;
  #L308068.  call temp:= `n`(v0) @signature `Lu6/c;.n:()Ljava/lang/Object;` @kind virtual;
  #L30806e.  v0:= temp @kind object;
  #L308070.  v0:= (`f7.b`) v0 @kind object;
  #L308074.  return v0 @kind object;
}
procedure `f7.b` `c0`(`f7.c` v1 @kind this) @signature `Lf7/c;.c0:()Lf7/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L308088.  v0:= v1.`f7.c.o` @type ^`u6.c` @kind object;
  #L30808c.  call temp:= `l`(v0) @signature `Lu6/c;.l:()Ljava/lang/Object;` @kind virtual;
  #L308092.  v0:= temp @kind object;
  #L308094.  v0:= (`f7.b`) v0 @kind object;
  #L308098.  return v0 @kind object;
}
procedure `int` `compareTo`(`f7.c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lf7/c;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3082f4.  v1:= (`f7.n`) v1 @kind object;
  #L3082f8.  call temp:= `S`(v0, v1) @signature `Lf7/c;.S:(Lf7/n;)I` @kind virtual;
  #L3082fe.  v1:= temp;
  #L308300.  return v1;
}
procedure `boolean` `equals`(`f7.c` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lf7/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L307ee8.  v0:= 0I;
  #L307eea.  if v8 != 0 then goto L307ef0;
  #L307eee.  return v0;
  #L307ef0.  v1:= 1I;
  #L307ef2.  if v8 != v7 then goto L307ef8;
  #L307ef6.  return v1;
  #L307ef8.  v2:= instanceof @variable v8 @type ^`f7.c` @kind boolean;
  #L307efc.  if v2 != 0 then goto L307f02;
  #L307f00.  return v0;
  #L307f02.  v8:= (`f7.c`) v8 @kind object;
  #L307f06.  call temp:= `q`(v7) @signature `Lf7/c;.q:()Lf7/n;` @kind virtual;
  #L307f0c.  v2:= temp @kind object;
  #L307f0e.  call temp:= `q`(v8) @signature `Lf7/c;.q:()Lf7/n;` @kind virtual;
  #L307f14.  v3:= temp @kind object;
  #L307f16.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L307f1c.  v2:= temp;
  #L307f1e.  if v2 != 0 then goto L307f24;
  #L307f22.  return v0;
  #L307f24.  v2:= v7.`f7.c.o` @type ^`u6.c` @kind object;
  #L307f28.  call temp:= `size`(v2) @signature `Lu6/c;.size:()I` @kind virtual;
  #L307f2e.  v2:= temp;
  #L307f30.  v3:= v8.`f7.c.o` @type ^`u6.c` @kind object;
  #L307f34.  call temp:= `size`(v3) @signature `Lu6/c;.size:()I` @kind virtual;
  #L307f3a.  v3:= temp;
  #L307f3c.  if v2 == v3 then goto L307f42;
  #L307f40.  return v0;
  #L307f42.  v2:= v7.`f7.c.o` @type ^`u6.c` @kind object;
  #L307f46.  call temp:= `iterator`(v2) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L307f4c.  v2:= temp @kind object;
  #L307f4e.  v8:= v8.`f7.c.o` @type ^`u6.c` @kind object;
  #L307f52.  call temp:= `iterator`(v8) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L307f58.  v8:= temp @kind object;
  #L307f5a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L307f60.  v3:= temp;
  #L307f62.  if v3 == 0 then goto L307fcc;
  #L307f66.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L307f6c.  v3:= temp;
  #L307f6e.  if v3 == 0 then goto L307fcc;
  #L307f72.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L307f78.  v3:= temp @kind object;
  #L307f7a.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L307f7e.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L307f84.  v4:= temp @kind object;
  #L307f86.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L307f8a.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L307f90.  v5:= temp @kind object;
  #L307f92.  v5:= (`f7.b`) v5 @kind object;
  #L307f96.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L307f9c.  v6:= temp @kind object;
  #L307f9e.  call temp:= `equals`(v5, v6) @signature `Lf7/b;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L307fa4.  v5:= temp;
  #L307fa6.  if v5 == 0 then goto L307fca;
  #L307faa.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L307fb0.  v3:= temp @kind object;
  #L307fb2.  v3:= (`f7.n`) v3 @kind object;
  #L307fb6.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L307fbc.  v4:= temp @kind object;
  #L307fbe.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L307fc4.  v3:= temp;
  #L307fc6.  if v3 != 0 then goto L307f5a;
  #L307fca.  return v0;
  #L307fcc.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L307fd2.  v0:= temp;
  #L307fd4.  if v0 != 0 then goto L307fe6;
  #L307fd8.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L307fde.  v8:= temp;
  #L307fe0.  if v8 != 0 then goto L307fe6;
  #L307fe4.  return v1;
  #L307fe6.  v8:= new `java.lang.IllegalStateException`;
  #L307fea.  v0:= "Something went wrong internally." @kind object;
  #L307fee.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L307ff4.  throw v8;
}
procedure `java.lang.Object` `getValue`(`f7.c` v1 @kind this) @signature `Lf7/c;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L308398.  v0:= 0I;
  #L30839a.  call temp:= `R`(v1, v0) @signature `Lf7/c;.R:(Z)Ljava/lang/Object;` @kind virtual;
  #L3083a0.  v0:= temp @kind object;
  #L3083a2.  return v0 @kind object;
}
procedure `int` `hashCode`(`f7.c` v4 @kind this) @signature `Lf7/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L308334.  call temp:= `iterator`(v4) @signature `Lf7/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L30833a.  v0:= temp @kind object;
  #L30833c.  v1:= 0I;
  #L30833e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L308344.  v2:= temp;
  #L308346.  if v2 == 0 then goto L308384;
  #L30834a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L308350.  v2:= temp @kind object;
  #L308352.  v2:= (`f7.m`) v2 @kind object;
  #L308356.  v1:= v1 * 31;
  #L30835a.  call temp:= `c`(v2) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L308360.  v3:= temp @kind object;
  #L308362.  call temp:= `hashCode`(v3) @signature `Lf7/b;.hashCode:()I` @kind virtual;
  #L308368.  v3:= temp;
  #L30836a.  v1:= v1 + v3 @kind int;
  #L30836c.  v1:= v1 * 17;
  #L308370.  call temp:= `d`(v2) @signature `Lf7/m;.d:()Lf7/n;` @kind virtual;
  #L308376.  v2:= temp @kind object;
  #L308378.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L30837e.  v2:= temp;
  #L308380.  v1:= v1 + v2 @kind int;
  #L308382.  goto L30833e;
  #L308384.  return v1;
}
procedure `boolean` `isEmpty`(`f7.c` v1 @kind this) @signature `Lf7/c;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L308030.  v0:= v1.`f7.c.o` @type ^`u6.c` @kind object;
  #L308034.  call temp:= `isEmpty`(v0) @signature `Lu6/c;.isEmpty:()Z` @kind virtual;
  #L30803a.  v0:= temp;
  #L30803c.  return v0;
}
procedure `java.util.Iterator` `iterator`(`f7.c` v2 @kind this) @signature `Lf7/c;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3086d4.  v0:= new `f7.c$d`;
  #L3086d8.  v1:= v2.`f7.c.o` @type ^`u6.c` @kind object;
  #L3086dc.  call temp:= `iterator`(v1) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3086e2.  v1:= temp @kind object;
  #L3086e4.  call `<init>`(v0, v1) @signature `Lf7/c$d;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L3086ea.  return v0 @kind object;
}
procedure `f7.n` `m`(`f7.c` v2 @kind this, `f7.b` v3 @kind object, `f7.n` v4 @kind object) @signature `Lf7/c;.m:(Lf7/b;Lf7/n;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3081e4.  call temp:= `t`(v3) @signature `Lf7/b;.t:()Z` @kind virtual;
  #L3081ea.  v0:= temp;
  #L3081ec.  if v0 == 0 then goto L3081fa;
  #L3081f0.  call temp:= `E`(v2, v4) @signature `Lf7/c;.E:(Lf7/n;)Lf7/n;` @kind virtual;
  #L3081f6.  v3:= temp @kind object;
  #L3081f8.  return v3 @kind object;
  #L3081fa.  v0:= v2.`f7.c.o` @type ^`u6.c` @kind object;
  #L3081fe.  call temp:= `b`(v0, v3) @signature `Lu6/c;.b:(Ljava/lang/Object;)Z` @kind virtual;
  #L308204.  v1:= temp;
  #L308206.  if v1 == 0 then goto L308212;
  #L30820a.  call temp:= `G`(v0, v3) @signature `Lu6/c;.G:(Ljava/lang/Object;)Lu6/c;` @kind virtual;
  #L308210.  v0:= temp @kind object;
  #L308212.  call temp:= `isEmpty`(v4) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L308218.  v1:= temp;
  #L30821a.  if v1 != 0 then goto L308226;
  #L30821e.  call temp:= `y`(v0, v3, v4) @signature `Lu6/c;.y:(Ljava/lang/Object;Ljava/lang/Object;)Lu6/c;` @kind virtual;
  #L308224.  v0:= temp @kind object;
  #L308226.  call temp:= `isEmpty`(v0) @signature `Lu6/c;.isEmpty:()Z` @kind virtual;
  #L30822c.  v3:= temp;
  #L30822e.  if v3 == 0 then goto L30823c;
  #L308232.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L308238.  v3:= temp @kind object;
  #L30823a.  return v3 @kind object;
  #L30823c.  v3:= new `f7.c`;
  #L308240.  v4:= v2.`f7.c.p` @type ^`f7.n` @kind object;
  #L308244.  call `<init>`(v3, v0, v4) @signature `Lf7/c;.<init>:(Lu6/c;Lf7/n;)V` @kind direct;
  #L30824a.  return v3 @kind object;
}
procedure `f7.n` `q`(`f7.c` v1 @kind this) @signature `Lf7/c;.q:()Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L308168.  v0:= v1.`f7.c.p` @type ^`f7.n` @kind object;
  #L30816c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`f7.c` v2 @kind this) @signature `Lf7/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3086a8.  v0:= new `java.lang.StringBuilder`;
  #L3086ac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3086b2.  v1:= 0I;
  #L3086b4.  call `d0`(v2, v0, v1) @signature `Lf7/c;.d0:(Ljava/lang/StringBuilder;I)V` @kind direct;
  #L3086ba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3086c0.  v0:= temp @kind object;
  #L3086c2.  return v0 @kind object;
}
procedure `f7.b` `w`(`f7.c` v1 @kind this, `f7.b` v2 @kind object) @signature `Lf7/c;.w:(Lf7/b;)Lf7/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3080ac.  v0:= v1.`f7.c.o` @type ^`u6.c` @kind object;
  #L3080b0.  call temp:= `p`(v0, v2) @signature `Lu6/c;.p:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3080b6.  v2:= temp @kind object;
  #L3080b8.  v2:= (`f7.b`) v2 @kind object;
  #L3080bc.  return v2 @kind object;
}
procedure `f7.n` `z`(`f7.c` v1 @kind this, `f7.b` v2 @kind object) @signature `Lf7/c;.z:(Lf7/b;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L308108.  call temp:= `t`(v2) @signature `Lf7/b;.t:()Z` @kind virtual;
  #L30810e.  v0:= temp;
  #L308110.  if v0 == 0 then goto L30812a;
  #L308114.  v0:= v1.`f7.c.p` @type ^`f7.n` @kind object;
  #L308118.  call temp:= `isEmpty`(v0) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L30811e.  v0:= temp;
  #L308120.  if v0 != 0 then goto L30812a;
  #L308124.  v2:= v1.`f7.c.p` @type ^`f7.n` @kind object;
  #L308128.  return v2 @kind object;
  #L30812a.  v0:= v1.`f7.c.o` @type ^`u6.c` @kind object;
  #L30812e.  call temp:= `b`(v0, v2) @signature `Lu6/c;.b:(Ljava/lang/Object;)Z` @kind virtual;
  #L308134.  v0:= temp;
  #L308136.  if v0 == 0 then goto L30814c;
  #L30813a.  v0:= v1.`f7.c.o` @type ^`u6.c` @kind object;
  #L30813e.  call temp:= `f`(v0, v2) @signature `Lu6/c;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L308144.  v2:= temp @kind object;
  #L308146.  v2:= (`f7.n`) v2 @kind object;
  #L30814a.  return v2 @kind object;
  #L30814c.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L308152.  v2:= temp @kind object;
  #L308154.  return v2 @kind object;
}
