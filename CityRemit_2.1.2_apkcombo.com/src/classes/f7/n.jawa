record `f7.n` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `java.lang.Comparable` @kind interface, `java.lang.Iterable` @kind interface {
}
global `f7.c` `@@f7.n.m` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lf7/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L30ac88.  v0:= new `f7.n$a`;
  #L30ac8c.  call `<init>`(v0) @signature `Lf7/n$a;.<init>:()V` @kind direct;
  #L30ac92.  `@@f7.n.m` @type ^`f7.c` := v0 @kind object;
  #L30ac96.  return @kind void;
}
procedure `boolean` `A`() @signature `Lf7/n;.A:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `C`() @signature `Lf7/n;.C:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `f7.n` `E`(`f7.n` v0 @kind object) @signature `Lf7/n;.E:(Lf7/n;)Lf7/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `f7.n` `H`(`x6.l` v0 @kind object) @signature `Lf7/n;.H:(Lx6/l;)Lf7/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `J`(`f7.b` v0 @kind object) @signature `Lf7/n;.J:(Lf7/b;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `M`(`f7.n$b` v0 @kind object) @signature `Lf7/n;.M:(Lf7/n$b;)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `R`(`boolean` v0 ) @signature `Lf7/n;.R:(Z)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `f7.n` `U`(`x6.l` v0 @kind object, `f7.n` v1 @kind object) @signature `Lf7/n;.U:(Lx6/l;Lf7/n;)Lf7/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Iterator` `W`() @signature `Lf7/n;.W:()Ljava/util/Iterator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `Z`() @signature `Lf7/n;.Z:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getValue`() @signature `Lf7/n;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEmpty`() @signature `Lf7/n;.isEmpty:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `f7.n` `m`(`f7.b` v0 @kind object, `f7.n` v1 @kind object) @signature `Lf7/n;.m:(Lf7/b;Lf7/n;)Lf7/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `f7.n` `q`() @signature `Lf7/n;.q:()Lf7/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `f7.b` `w`(`f7.b` v0 @kind object) @signature `Lf7/n;.w:(Lf7/b;)Lf7/b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `f7.n` `z`(`f7.b` v0 @kind object) @signature `Lf7/n;.z:(Lf7/b;)Lf7/n;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
