record `f7.b$b` @kind class @AccessFlag  extends `f7.b` @kind class {
  `int` `f7.b$b.t` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`f7.b$b` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lf7/b$b;.<init>:(Ljava/lang/String;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L307950.  v0:= 0I;
  #L307952.  call `<init>`(v1, v2, v0) @signature `Lf7/b;.<init>:(Ljava/lang/String;Lf7/b$a;)V` @kind direct;
  #L307958.  v1.`f7.b$b.t` @type ^`int` := v3;
  #L30795c.  return @kind void;
}
procedure `int` `compareTo`(`f7.b$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lf7/b$b;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3078d0.  v1:= (`f7.b`) v1 @kind object;
  #L3078d4.  call temp:= `e`(v0, v1) @signature `Lf7/b;.e:(Lf7/b;)I` @kind super;
  #L3078da.  v1:= temp;
  #L3078dc.  return v1;
}
procedure `int` `r`(`f7.b$b` v1 @kind this) @signature `Lf7/b$b;.r:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3078f0.  v0:= v1.`f7.b$b.t` @type ^`int`;
  #L3078f4.  return v0;
}
procedure `boolean` `s`(`f7.b$b` v1 @kind this) @signature `Lf7/b$b;.s:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3078bc.  v0:= 1I;
  #L3078be.  return v0;
}
procedure `java.lang.String` `toString`(`f7.b$b` v2 @kind this) @signature `Lf7/b$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L307908.  v0:= new `java.lang.StringBuilder`;
  #L30790c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L307912.  v1:= "IntegerChildName(\"" @kind object;
  #L307916.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30791c.  call temp:= `c`(v2) @signature `Lf7/b;.c:(Lf7/b;)Ljava/lang/String;` @kind static;
  #L307922.  v1:= temp @kind object;
  #L307924.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30792a.  v1:= "\")" @kind object;
  #L30792e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L307934.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30793a.  v0:= temp @kind object;
  #L30793c.  return v0 @kind object;
}
