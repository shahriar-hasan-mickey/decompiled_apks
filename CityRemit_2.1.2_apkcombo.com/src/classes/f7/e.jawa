record `f7.e` @kind class @AccessFlag PUBLIC extends `f7.k` @kind class {
  `java.util.Map` `f7.e.q` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`f7.e` v0 @kind this, `java.util.Map` v1 @kind object, `f7.n` v2 @kind object) @signature `Lf7/e;.<init>:(Ljava/util/Map;Lf7/n;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3091d4.  call `<init>`(v0, v2) @signature `Lf7/k;.<init>:(Lf7/n;)V` @kind direct;
  #L3091da.  v0.`f7.e.q` @type ^`java.util.Map` := v1 @kind object;
  #L3091de.  return @kind void;
}
procedure `f7.n` `E`(`f7.e` v0 @kind this, `f7.n` v1 @kind object) @signature `Lf7/e;.E:(Lf7/n;)Lf7/n;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3090f8.  call temp:= `e0`(v0, v1) @signature `Lf7/e;.e0:(Lf7/n;)Lf7/e;` @kind virtual;
  #L3090fe.  v1:= temp @kind object;
  #L309100.  return v1 @kind object;
}
procedure `java.lang.String` `M`(`f7.e` v1 @kind this, `f7.n$b` v2 @kind object) @signature `Lf7/e;.M:(Lf7/n$b;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30918c.  v0:= new `java.lang.StringBuilder`;
  #L309190.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L309196.  call temp:= `b0`(v1, v2) @signature `Lf7/k;.b0:(Lf7/n$b;)Ljava/lang/String;` @kind virtual;
  #L30919c.  v2:= temp @kind object;
  #L30919e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3091a4.  v2:= "deferredValue:" @kind object;
  #L3091a8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3091ae.  v2:= v1.`f7.e.q` @type ^`java.util.Map` @kind object;
  #L3091b2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3091b8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3091be.  v2:= temp @kind object;
  #L3091c0.  return v2 @kind object;
}
procedure `f7.k$b` `a0`(`f7.e` v1 @kind this) @signature `Lf7/e;.a0:()Lf7/k$b;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3090e0.  v0:= `@@f7.k$b.o` @type ^`f7.k$b` @kind object;
  #L3090e4.  return v0 @kind object;
}
procedure `int` `d0`(`f7.e` v0 @kind this, `f7.e` v1 @kind object) @signature `Lf7/e;.d0:(Lf7/e;)I` @AccessFlag PROTECTED {
    temp;

  #L309114.  v1:= 0I;
  #L309116.  return v1;
}
procedure `f7.e` `e0`(`f7.e` v2 @kind this, `f7.n` v3 @kind object) @signature `Lf7/e;.e0:(Lf7/n;)Lf7/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3090b0.  call temp:= `b`(v3) @signature `Lf7/r;.b:(Lf7/n;)Z` @kind static;
  #L3090b6.  v0:= temp;
  #L3090b8.  call `f`(v0) @signature `La7/m;.f:(Z)V` @kind static;
  #L3090be.  v0:= new `f7.e`;
  #L3090c2.  v1:= v2.`f7.e.q` @type ^`java.util.Map` @kind object;
  #L3090c6.  call `<init>`(v0, v1, v3) @signature `Lf7/e;.<init>:(Ljava/util/Map;Lf7/n;)V` @kind direct;
  #L3090cc.  return v0 @kind object;
}
procedure `boolean` `equals`(`f7.e` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lf7/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L309064.  v0:= instanceof @variable v4 @type ^`f7.e` @kind boolean;
  #L309068.  v1:= 0I;
  #L30906a.  if v0 != 0 then goto L309070;
  #L30906e.  return v1;
  #L309070.  v4:= (`f7.e`) v4 @kind object;
  #L309074.  v0:= v3.`f7.e.q` @type ^`java.util.Map` @kind object;
  #L309078.  v2:= v4.`f7.e.q` @type ^`java.util.Map` @kind object;
  #L30907c.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L309082.  v0:= temp;
  #L309084.  if v0 == 0 then goto L30909e;
  #L309088.  v0:= v3.`f7.k.o` @type ^`f7.n` @kind object;
  #L30908c.  v4:= v4.`f7.k.o` @type ^`f7.n` @kind object;
  #L309090.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L309096.  v4:= temp;
  #L309098.  if v4 == 0 then goto L30909e;
  #L30909c.  v1:= 1I;
  #L30909e.  return v1;
}
procedure `java.lang.Object` `getValue`(`f7.e` v1 @kind this) @signature `Lf7/e;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L309174.  v0:= v1.`f7.e.q` @type ^`java.util.Map` @kind object;
  #L309178.  return v0 @kind object;
}
procedure `int` `h`(`f7.e` v0 @kind this, `f7.k` v1 @kind object) @signature `Lf7/e;.h:(Lf7/k;)I` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L309128.  v1:= (`f7.e`) v1 @kind object;
  #L30912c.  call temp:= `d0`(v0, v1) @signature `Lf7/e;.d0:(Lf7/e;)I` @kind virtual;
  #L309132.  v1:= temp;
  #L309134.  return v1;
}
procedure `int` `hashCode`(`f7.e` v2 @kind this) @signature `Lf7/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L309148.  v0:= v2.`f7.e.q` @type ^`java.util.Map` @kind object;
  #L30914c.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L309152.  v0:= temp;
  #L309154.  v1:= v2.`f7.k.o` @type ^`f7.n` @kind object;
  #L309158.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L30915e.  v1:= temp;
  #L309160.  v0:= v0 + v1 @kind int;
  #L309162.  return v0;
}
