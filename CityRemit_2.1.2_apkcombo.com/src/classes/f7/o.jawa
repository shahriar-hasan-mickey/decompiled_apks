record `f7.o` @kind class @AccessFlag PUBLIC {
}
procedure `f7.n` `a`(`java.lang.Object` v1 @kind object) @signature `Lf7/o;.a:(Ljava/lang/Object;)Lf7/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L30a998.  call temp:= `a`() @signature `Lf7/r;.a:()Lf7/n;` @kind static;
  #L30a99e.  v0:= temp @kind object;
  #L30a9a0.  call temp:= `b`(v1, v0) @signature `Lf7/o;.b:(Ljava/lang/Object;Lf7/n;)Lf7/n;` @kind static;
  #L30a9a6.  v1:= temp @kind object;
  #L30a9a8.  return v1 @kind object;
}
procedure `f7.n` `b`(`java.lang.Object` v5 @kind object, `f7.n` v6 @kind object) @signature `Lf7/o;.b:(Ljava/lang/Object;Lf7/n;)Lf7/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30a9bc.  v0:= ".value" @kind object;
  #L30a9c0.  v1:= ".priority" @kind object;
  #L30a9c4.  v2:= instanceof @variable v5 @type ^`java.util.Map` @kind boolean;
  #L30a9c8.  if v2 == 0 then goto L30aa02;
  #L30a9cc.  v2:= v5 @kind object;
  #L30a9ce.  v2:= (`java.util.Map`) v2 @kind object;
  #L30a9d2.  call temp:= `containsKey`(v2, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L30a9d8.  v3:= temp;
  #L30a9da.  if v3 == 0 then goto L30a9ee;
  #L30a9de.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30a9e4.  v6:= temp @kind object;
  #L30a9e6.  call temp:= `c`(v6) @signature `Lf7/r;.c:(Ljava/lang/Object;)Lf7/n;` @kind static;
  #L30a9ec.  v6:= temp @kind object;
  #L30a9ee.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L30a9f4.  v1:= temp;
  #L30a9f6.  if v1 == 0 then goto L30aa02;
  #L30a9fa.  call temp:= `get`(v2, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30aa00.  v5:= temp @kind object;
  #L30aa02.  if v5 != 0 then goto L30aa10;
  #L30aa06.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L30aa0c.  v5:= temp @kind object;
  #L30aa0e.  return v5 @kind object;
  #L30aa10.  v0:= instanceof @variable v5 @type ^`java.lang.String` @kind boolean;
  #L30aa14.  if v0 == 0 then goto L30aa28;
  #L30aa18.  v0:= new `f7.t`;
  #L30aa1c.  v5:= (`java.lang.String`) v5 @kind object;
  #L30aa20.  call `<init>`(v0, v5, v6) @signature `Lf7/t;.<init>:(Ljava/lang/String;Lf7/n;)V` @kind direct;
  #L30aa26.  return v0 @kind object;
  #L30aa28.  v0:= instanceof @variable v5 @type ^`java.lang.Long` @kind boolean;
  #L30aa2c.  if v0 == 0 then goto L30aa40;
  #L30aa30.  v0:= new `f7.l`;
  #L30aa34.  v5:= (`java.lang.Long`) v5 @kind object;
  #L30aa38.  call `<init>`(v0, v5, v6) @signature `Lf7/l;.<init>:(Ljava/lang/Long;Lf7/n;)V` @kind direct;
  #L30aa3e.  return v0 @kind object;
  #L30aa40.  v0:= instanceof @variable v5 @type ^`java.lang.Integer` @kind boolean;
  #L30aa44.  if v0 == 0 then goto L30aa6a;
  #L30aa48.  v0:= new `f7.l`;
  #L30aa4c.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L30aa50.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L30aa56.  v5:= temp;
  #L30aa58.  v1:= (`long`) v5 @kind i2l;
  #L30aa5a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L30aa60.  v5:= temp @kind object;
  #L30aa62.  call `<init>`(v0, v5, v6) @signature `Lf7/l;.<init>:(Ljava/lang/Long;Lf7/n;)V` @kind direct;
  #L30aa68.  return v0 @kind object;
  #L30aa6a.  v0:= instanceof @variable v5 @type ^`java.lang.Double` @kind boolean;
  #L30aa6e.  if v0 == 0 then goto L30aa82;
  #L30aa72.  v0:= new `f7.f`;
  #L30aa76.  v5:= (`java.lang.Double`) v5 @kind object;
  #L30aa7a.  call `<init>`(v0, v5, v6) @signature `Lf7/f;.<init>:(Ljava/lang/Double;Lf7/n;)V` @kind direct;
  #L30aa80.  return v0 @kind object;
  #L30aa82.  v0:= instanceof @variable v5 @type ^`java.lang.Boolean` @kind boolean;
  #L30aa86.  if v0 == 0 then goto L30aa9a;
  #L30aa8a.  v0:= new `f7.a`;
  #L30aa8e.  v5:= (`java.lang.Boolean`) v5 @kind object;
  #L30aa92.  call `<init>`(v0, v5, v6) @signature `Lf7/a;.<init>:(Ljava/lang/Boolean;Lf7/n;)V` @kind direct;
  #L30aa98.  return v0 @kind object;
  #L30aa9a.  v0:= instanceof @variable v5 @type ^`java.util.Map` @kind boolean;
  #L30aa9e.  if v0 != 0 then goto L30aaea;
  #L30aaa2.  v0:= instanceof @variable v5 @type ^`java.util.List` @kind boolean;
  #L30aaa6.  if v0 == 0 then goto L30aaac;
  #L30aaaa.  goto L30aaea;
  #L30aaac.  v6:= new `s6.c`;
  #L30aab0.  v0:= new `java.lang.StringBuilder`;
  #L30aab4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30aaba.  v1:= "Failed to parse node with class " @kind object;
  #L30aabe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30aac4.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L30aaca.  v5:= temp @kind object;
  #L30aacc.  call temp:= `toString`(v5) @signature `Ljava/lang/Class;.toString:()Ljava/lang/String;` @kind virtual;
  #L30aad2.  v5:= temp @kind object;
  #L30aad4.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30aada.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30aae0.  v5:= temp @kind object;
  #L30aae2.  call `<init>`(v6, v5) @signature `Ls6/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30aae8.  throw v6;
  #L30aaea.  v0:= instanceof @variable v5 @type ^`java.util.Map` @kind boolean;
  #L30aaee.  if v0 == 0 then goto L30ab88;
  #L30aaf2.  v5:= (`java.util.Map`) v5 @kind object;
  #L30aaf6.  v0:= ".sv" @kind object;
  #L30aafa.  call temp:= `containsKey`(v5, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L30ab00.  v0:= temp;
  #L30ab02.  if v0 == 0 then goto L30ab12;
  #L30ab06.  v0:= new `f7.e`;
  #L30ab0a.  call `<init>`(v0, v5, v6) @signature `Lf7/e;.<init>:(Ljava/util/Map;Lf7/n;)V` @kind direct;
  #L30ab10.  return v0 @kind object;
  #L30ab12.  v0:= new `java.util.HashMap`;
  #L30ab16.  call temp:= `size`(v5) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L30ab1c.  v1:= temp;
  #L30ab1e.  call `<init>`(v0, v1) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L30ab24.  call temp:= `keySet`(v5) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L30ab2a.  v1:= temp @kind object;
  #L30ab2c.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L30ab32.  v1:= temp @kind object;
  #L30ab34.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L30ab3a.  v2:= temp;
  #L30ab3c.  if v2 == 0 then goto L30abfe;
  #L30ab40.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L30ab46.  v2:= temp @kind object;
  #L30ab48.  v2:= (`java.lang.String`) v2 @kind object;
  #L30ab4c.  v3:= "." @kind object;
  #L30ab50.  call temp:= `startsWith`(v2, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L30ab56.  v3:= temp;
  #L30ab58.  if v3 != 0 then goto L30ab34;
  #L30ab5c.  call temp:= `get`(v5, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30ab62.  v3:= temp @kind object;
  #L30ab64.  call temp:= `a`(v3) @signature `Lf7/o;.a:(Ljava/lang/Object;)Lf7/n;` @kind static;
  #L30ab6a.  v3:= temp @kind object;
  #L30ab6c.  call temp:= `isEmpty`(v3) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L30ab72.  v4:= temp;
  #L30ab74.  if v4 != 0 then goto L30ab34;
  #L30ab78.  call temp:= `h`(v2) @signature `Lf7/b;.h:(Ljava/lang/String;)Lf7/b;` @kind static;
  #L30ab7e.  v2:= temp @kind object;
  #L30ab80.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30ab86.  goto L30ab34;
  #L30ab88.  v5:= (`java.util.List`) v5 @kind object;
  #L30ab8c.  v0:= new `java.util.HashMap`;
  #L30ab90.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L30ab96.  v1:= temp;
  #L30ab98.  call `<init>`(v0, v1) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L30ab9e.  v1:= 0I;
  #L30aba0.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L30aba6.  v2:= temp;
  #L30aba8.  if v1 >= v2 then goto L30abfe;
  #L30abac.  v2:= new `java.lang.StringBuilder`;
  #L30abb0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30abb6.  v3:= "" @kind object;
  #L30abba.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30abc0.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L30abc6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30abcc.  v2:= temp @kind object;
  #L30abce.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30abd4.  v3:= temp @kind object;
  #L30abd6.  call temp:= `a`(v3) @signature `Lf7/o;.a:(Ljava/lang/Object;)Lf7/n;` @kind static;
  #L30abdc.  v3:= temp @kind object;
  #L30abde.  call temp:= `isEmpty`(v3) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L30abe4.  v4:= temp;
  #L30abe6.  if v4 != 0 then goto L30abf8;
  #L30abea.  call temp:= `h`(v2) @signature `Lf7/b;.h:(Ljava/lang/String;)Lf7/b;` @kind static;
  #L30abf0.  v2:= temp @kind object;
  #L30abf2.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30abf8.  v1:= v1 + 1;
  #L30abfc.  goto L30aba0;
  #L30abfe.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L30ac04.  v5:= temp;
  #L30ac06.  if v5 == 0 then goto L30ac14;
  #L30ac0a.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L30ac10.  v5:= temp @kind object;
  #L30ac12.  return v5 @kind object;
  #L30ac14.  v5:= `@@f7.c.r` @type ^`java.util.Comparator` @kind object;
  #L30ac18.  call temp:= `d`(v0, v5) @signature `Lu6/c$a;.d:(Ljava/util/Map;Ljava/util/Comparator;)Lu6/c;` @kind static;
  #L30ac1e.  v5:= temp @kind object;
  #L30ac20.  v0:= new `f7.c`;
  #L30ac24.  call `<init>`(v0, v5, v6) @signature `Lf7/c;.<init>:(Lu6/c;Lf7/n;)V` @kind direct;
  #L30ac2a.  return v0 @kind object;
  #L30ac2c.  v5:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L30ac2e.  v6:= new `s6.c`;
  #L30ac32.  v0:= "Failed to parse node" @kind object;
  #L30ac36.  call `<init>`(v6, v0, v5) @signature `Ls6/c;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L30ac3c.  throw v6;
  catch `java.lang.ClassCastException` @[L30a9c4..L30ac2a] goto L30ac2c;
}
procedure `int` `c`(`f7.b` v0 @kind object, `f7.n` v1 @kind object, `f7.b` v2 @kind object, `f7.n` v3 @kind object) @signature `Lf7/o;.c:(Lf7/b;Lf7/n;Lf7/b;Lf7/n;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L30ac60.  call temp:= `compareTo`(v1, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L30ac66.  v1:= temp;
  #L30ac68.  if v1 == 0 then goto L30ac6e;
  #L30ac6c.  return v1;
  #L30ac6e.  call temp:= `e`(v0, v2) @signature `Lf7/b;.e:(Lf7/b;)I` @kind virtual;
  #L30ac74.  v0:= temp;
  #L30ac76.  return v0;
}
