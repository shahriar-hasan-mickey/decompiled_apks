record `f7.n$a` @kind class @AccessFlag  extends `f7.c` @kind class {
}
procedure `void` `<init>`(`f7.n$a` v0 @kind this) @signature `Lf7/n$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30a8d4.  call `<init>`(v0) @signature `Lf7/c;.<init>:()V` @kind direct;
  #L30a8da.  return @kind void;
}
procedure `boolean` `J`(`f7.n$a` v0 @kind this, `f7.b` v1 @kind object) @signature `Lf7/n$a;.J:(Lf7/b;)Z` @AccessFlag PUBLIC {
    temp;

  #L30a814.  v1:= 0I;
  #L30a816.  return v1;
}
procedure `int` `S`(`f7.n$a` v0 @kind this, `f7.n` v1 @kind object) @signature `Lf7/n$a;.S:(Lf7/n;)I` @AccessFlag PUBLIC {
    temp;

  #L30a880.  if v1 != v0 then goto L30a888;
  #L30a884.  v1:= 0I;
  #L30a886.  goto L30a88a;
  #L30a888.  v1:= 1I;
  #L30a88a.  return v1;
}
procedure `int` `compareTo`(`f7.n$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lf7/n$a;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L30a89c.  v1:= (`f7.n`) v1 @kind object;
  #L30a8a0.  call temp:= `S`(v0, v1) @signature `Lf7/n$a;.S:(Lf7/n;)I` @kind virtual;
  #L30a8a6.  v1:= temp;
  #L30a8a8.  return v1;
}
procedure `boolean` `equals`(`f7.n$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lf7/n$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L30a7f8.  if v1 != v0 then goto L30a800;
  #L30a7fc.  v1:= 1I;
  #L30a7fe.  goto L30a802;
  #L30a800.  v1:= 0I;
  #L30a802.  return v1;
}
procedure `boolean` `isEmpty`(`f7.n$a` v1 @kind this) @signature `Lf7/n$a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30a828.  v0:= 0I;
  #L30a82a.  return v0;
}
procedure `f7.n` `q`(`f7.n$a` v0 @kind this) @signature `Lf7/n$a;.q:()Lf7/n;` @AccessFlag PUBLIC {
    temp;

  #L30a86c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`f7.n$a` v1 @kind this) @signature `Lf7/n$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30a8bc.  v0:= "<Max Node>" @kind object;
  #L30a8c0.  return v0 @kind object;
}
procedure `f7.n` `z`(`f7.n$a` v0 @kind this, `f7.b` v1 @kind object) @signature `Lf7/n$a;.z:(Lf7/b;)Lf7/n;` @AccessFlag PUBLIC {
    temp;

  #L30a83c.  call temp:= `t`(v1) @signature `Lf7/b;.t:()Z` @kind virtual;
  #L30a842.  v1:= temp;
  #L30a844.  if v1 == 0 then goto L30a852;
  #L30a848.  call temp:= `q`(v0) @signature `Lf7/n$a;.q:()Lf7/n;` @kind virtual;
  #L30a84e.  v1:= temp @kind object;
  #L30a850.  return v1 @kind object;
  #L30a852.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L30a858.  v1:= temp @kind object;
  #L30a85a.  return v1 @kind object;
}
