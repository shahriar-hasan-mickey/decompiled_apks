record `f7.s` @kind class @AccessFlag PUBLIC {
  `x6.l` `f7.s.a` @AccessFlag PRIVATE_FINAL;
  `x6.l` `f7.s.b` @AccessFlag PRIVATE_FINAL;
  `f7.n` `f7.s.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`f7.s` v3 @kind this, `v6.o` v4 @kind object) @signature `Lf7/s;.<init>:(Lv6/o;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L30b424.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30b42a.  call temp:= `a`(v4) @signature `Lv6/o;.a:()Ljava/util/List;` @kind virtual;
  #L30b430.  v0:= temp @kind object;
  #L30b432.  v1:= 0I;
  #L30b434.  if v0 == 0 then goto L30b444;
  #L30b438.  v2:= new `x6.l`;
  #L30b43c.  call `<init>`(v2, v0) @signature `Lx6/l;.<init>:(Ljava/util/List;)V` @kind direct;
  #L30b442.  goto L30b446;
  #L30b444.  v2:= v1 @kind object;
  #L30b446.  v3.`f7.s.a` @type ^`x6.l` := v2 @kind object;
  #L30b44a.  call temp:= `b`(v4) @signature `Lv6/o;.b:()Ljava/util/List;` @kind virtual;
  #L30b450.  v0:= temp @kind object;
  #L30b452.  if v0 == 0 then goto L30b460;
  #L30b456.  v1:= new `x6.l`;
  #L30b45a.  call `<init>`(v1, v0) @signature `Lx6/l;.<init>:(Ljava/util/List;)V` @kind direct;
  #L30b460.  v3.`f7.s.b` @type ^`x6.l` := v1 @kind object;
  #L30b464.  call temp:= `c`(v4) @signature `Lv6/o;.c:()Ljava/lang/Object;` @kind virtual;
  #L30b46a.  v4:= temp @kind object;
  #L30b46c.  call temp:= `a`(v4) @signature `Lf7/o;.a:(Ljava/lang/Object;)Lf7/n;` @kind static;
  #L30b472.  v4:= temp @kind object;
  #L30b474.  v3.`f7.s.c` @type ^`f7.n` := v4 @kind object;
  #L30b478.  return @kind void;
}
procedure `f7.n` `b`(`f7.s` v7 @kind this, `x6.l` v8 @kind object, `f7.n` v9 @kind object, `f7.n` v10 @kind object) @signature `Lf7/s;.b:(Lx6/l;Lf7/n;Lf7/n;)Lf7/n;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L30b1bc.  v0:= v7.`f7.s.a` @type ^`x6.l` @kind object;
  #L30b1c0.  v1:= 1I;
  #L30b1c2.  if v0 != 0 then goto L30b1ca;
  #L30b1c6.  v0:= 1I;
  #L30b1c8.  goto L30b1d2;
  #L30b1ca.  call temp:= `d0`(v8, v0) @signature `Lx6/l;.d0:(Lx6/l;)I` @kind virtual;
  #L30b1d0.  v0:= temp;
  #L30b1d2.  v2:= v7.`f7.s.b` @type ^`x6.l` @kind object;
  #L30b1d6.  if v2 != 0 then goto L30b1de;
  #L30b1da.  v2:= -1I;
  #L30b1dc.  goto L30b1e6;
  #L30b1de.  call temp:= `d0`(v8, v2) @signature `Lx6/l;.d0:(Lx6/l;)I` @kind virtual;
  #L30b1e4.  v2:= temp;
  #L30b1e6.  v3:= v7.`f7.s.a` @type ^`x6.l` @kind object;
  #L30b1ea.  v4:= 0I;
  #L30b1ec.  if v3 == 0 then goto L30b200;
  #L30b1f0.  call temp:= `e0`(v8, v3) @signature `Lx6/l;.e0:(Lx6/l;)Z` @kind virtual;
  #L30b1f6.  v3:= temp;
  #L30b1f8.  if v3 == 0 then goto L30b200;
  #L30b1fc.  v3:= 1I;
  #L30b1fe.  goto L30b202;
  #L30b200.  v3:= 0I;
  #L30b202.  v5:= v7.`f7.s.b` @type ^`x6.l` @kind object;
  #L30b206.  if v5 == 0 then goto L30b21a;
  #L30b20a.  call temp:= `e0`(v8, v5) @signature `Lx6/l;.e0:(Lx6/l;)Z` @kind virtual;
  #L30b210.  v5:= temp;
  #L30b212.  if v5 == 0 then goto L30b21a;
  #L30b216.  v5:= 1I;
  #L30b218.  goto L30b21c;
  #L30b21a.  v5:= 0I;
  #L30b21c.  if v0 <= 0 then goto L30b22a;
  #L30b220.  if v2 >= 0 then goto L30b22a;
  #L30b224.  if v5 != 0 then goto L30b22a;
  #L30b228.  return v10 @kind object;
  #L30b22a.  if v0 <= 0 then goto L30b240;
  #L30b22e.  if v5 == 0 then goto L30b240;
  #L30b232.  call temp:= `A`(v10) @signature `Lf7/n;.A:()Z` @kind interface;
  #L30b238.  v6:= temp;
  #L30b23a.  if v6 == 0 then goto L30b240;
  #L30b23e.  return v10 @kind object;
  #L30b240.  if v0 <= 0 then goto L30b276;
  #L30b244.  if v2 != 0 then goto L30b276;
  #L30b248.  call `f`(v5) @signature `La7/m;.f:(Z)V` @kind static;
  #L30b24e.  call temp:= `A`(v10) @signature `Lf7/n;.A:()Z` @kind interface;
  #L30b254.  v8:= temp;
  #L30b256.  v8:= v8 ^~ v1 @kind int;
  #L30b258.  call `f`(v8) @signature `La7/m;.f:(Z)V` @kind static;
  #L30b25e.  call temp:= `A`(v9) @signature `Lf7/n;.A:()Z` @kind interface;
  #L30b264.  v8:= temp;
  #L30b266.  if v8 == 0 then goto L30b274;
  #L30b26a.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L30b270.  v8:= temp @kind object;
  #L30b272.  return v8 @kind object;
  #L30b274.  return v9 @kind object;
  #L30b276.  if v3 != 0 then goto L30b294;
  #L30b27a.  if v5 == 0 then goto L30b280;
  #L30b27e.  goto L30b294;
  #L30b280.  if v2 > 0 then goto L30b28c;
  #L30b284.  if v0 > 0 then goto L30b28a;
  #L30b288.  goto L30b28c;
  #L30b28a.  v1:= 0I;
  #L30b28c.  call `f`(v1) @signature `La7/m;.f:(Z)V` @kind static;
  #L30b292.  return v9 @kind object;
  #L30b294.  v0:= new `java.util.HashSet`;
  #L30b298.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L30b29e.  call temp:= `iterator`(v9) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L30b2a4.  v2:= temp @kind object;
  #L30b2a6.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L30b2ac.  v3:= temp;
  #L30b2ae.  if v3 == 0 then goto L30b2ce;
  #L30b2b2.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L30b2b8.  v3:= temp @kind object;
  #L30b2ba.  v3:= (`f7.m`) v3 @kind object;
  #L30b2be.  call temp:= `c`(v3) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L30b2c4.  v3:= temp @kind object;
  #L30b2c6.  call temp:= `add`(v0, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30b2cc.  goto L30b2a6;
  #L30b2ce.  call temp:= `iterator`(v10) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L30b2d4.  v2:= temp @kind object;
  #L30b2d6.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L30b2dc.  v3:= temp;
  #L30b2de.  if v3 == 0 then goto L30b2fe;
  #L30b2e2.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L30b2e8.  v3:= temp @kind object;
  #L30b2ea.  v3:= (`f7.m`) v3 @kind object;
  #L30b2ee.  call temp:= `c`(v3) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L30b2f4.  v3:= temp @kind object;
  #L30b2f6.  call temp:= `add`(v0, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30b2fc.  goto L30b2d6;
  #L30b2fe.  v2:= new `java.util.ArrayList`;
  #L30b302.  call temp:= `size`(v0) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L30b308.  v3:= temp;
  #L30b30a.  v3:= v3 + v1 @kind int;
  #L30b30c.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L30b312.  call temp:= `addAll`(v2, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L30b318.  call temp:= `q`(v10) @signature `Lf7/n;.q:()Lf7/n;` @kind interface;
  #L30b31e.  v0:= temp @kind object;
  #L30b320.  call temp:= `isEmpty`(v0) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L30b326.  v0:= temp;
  #L30b328.  if v0 == 0 then goto L30b340;
  #L30b32c.  call temp:= `q`(v9) @signature `Lf7/n;.q:()Lf7/n;` @kind interface;
  #L30b332.  v0:= temp @kind object;
  #L30b334.  call temp:= `isEmpty`(v0) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L30b33a.  v0:= temp;
  #L30b33c.  if v0 != 0 then goto L30b34e;
  #L30b340.  call temp:= `o`() @signature `Lf7/b;.o:()Lf7/b;` @kind static;
  #L30b346.  v0:= temp @kind object;
  #L30b348.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30b34e.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L30b354.  v0:= temp @kind object;
  #L30b356.  v1:= v9 @kind object;
  #L30b358.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L30b35e.  v2:= temp;
  #L30b360.  if v2 == 0 then goto L30b3a6;
  #L30b364.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L30b36a.  v2:= temp @kind object;
  #L30b36c.  v2:= (`f7.b`) v2 @kind object;
  #L30b370.  call temp:= `z`(v9, v2) @signature `Lf7/n;.z:(Lf7/b;)Lf7/n;` @kind interface;
  #L30b376.  v3:= temp @kind object;
  #L30b378.  call temp:= `b0`(v8, v2) @signature `Lx6/l;.b0:(Lf7/b;)Lx6/l;` @kind virtual;
  #L30b37e.  v4:= temp @kind object;
  #L30b380.  call temp:= `z`(v9, v2) @signature `Lf7/n;.z:(Lf7/b;)Lf7/n;` @kind interface;
  #L30b386.  v5:= temp @kind object;
  #L30b388.  call temp:= `z`(v10, v2) @signature `Lf7/n;.z:(Lf7/b;)Lf7/n;` @kind interface;
  #L30b38e.  v6:= temp @kind object;
  #L30b390.  call temp:= `b`(v7, v4, v5, v6) @signature `Lf7/s;.b:(Lx6/l;Lf7/n;Lf7/n;)Lf7/n;` @kind direct;
  #L30b396.  v4:= temp @kind object;
  #L30b398.  if v4 == v3 then goto L30b358;
  #L30b39c.  call temp:= `m`(v1, v2, v4) @signature `Lf7/n;.m:(Lf7/b;Lf7/n;)Lf7/n;` @kind interface;
  #L30b3a2.  v1:= temp @kind object;
  #L30b3a4.  goto L30b358;
  #L30b3a6.  return v1 @kind object;
}
procedure `f7.n` `a`(`f7.s` v2 @kind this, `f7.n` v3 @kind object) @signature `Lf7/s;.a:(Lf7/n;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30b194.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L30b19a.  v0:= temp @kind object;
  #L30b19c.  v1:= v2.`f7.s.c` @type ^`f7.n` @kind object;
  #L30b1a0.  call temp:= `b`(v2, v0, v3, v1) @signature `Lf7/s;.b:(Lx6/l;Lf7/n;Lf7/n;)Lf7/n;` @kind direct;
  #L30b1a6.  v3:= temp @kind object;
  #L30b1a8.  return v3 @kind object;
}
procedure `java.lang.String` `toString`(`f7.s` v2 @kind this) @signature `Lf7/s;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30b3b8.  v0:= new `java.lang.StringBuilder`;
  #L30b3bc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30b3c2.  v1:= "RangeMerge{optExclusiveStart=" @kind object;
  #L30b3c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30b3cc.  v1:= v2.`f7.s.a` @type ^`x6.l` @kind object;
  #L30b3d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30b3d6.  v1:= ", optInclusiveEnd=" @kind object;
  #L30b3da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30b3e0.  v1:= v2.`f7.s.b` @type ^`x6.l` @kind object;
  #L30b3e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30b3ea.  v1:= ", snap=" @kind object;
  #L30b3ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30b3f4.  v1:= v2.`f7.s.c` @type ^`f7.n` @kind object;
  #L30b3f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30b3fe.  v1:= 125I;
  #L30b402.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30b408.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30b40e.  v0:= temp @kind object;
  #L30b410.  return v0 @kind object;
}
