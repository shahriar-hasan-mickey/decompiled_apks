record `f7.n$b` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `f7.n$b` `@@f7.n$b.o` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `f7.n$b` `@@f7.n$b.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `f7.n$b`[] `@@f7.n$b.q` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lf7/n$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30a934.  v0:= new `f7.n$b`;
  #L30a938.  v1:= "V1" @kind object;
  #L30a93c.  v2:= 0I;
  #L30a93e.  call `<init>`(v0, v1, v2) @signature `Lf7/n$b;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L30a944.  `@@f7.n$b.o` @type ^`f7.n$b` := v0 @kind object;
  #L30a948.  v1:= new `f7.n$b`;
  #L30a94c.  v3:= "V2" @kind object;
  #L30a950.  v4:= 1I;
  #L30a952.  call `<init>`(v1, v3, v4) @signature `Lf7/n$b;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L30a958.  `@@f7.n$b.p` @type ^`f7.n$b` := v1 @kind object;
  #L30a95c.  v3:= 2I;
  #L30a95e.  v3:= new `f7.n$b`[v3];
  #L30a962.  v3[v2]:= v0 @kind object;
  #L30a966.  v3[v4]:= v1 @kind object;
  #L30a96a.  `@@f7.n$b.q` @type ^`f7.n$b`[] := v3 @kind object;
  #L30a96e.  return @kind void;
}
procedure `void` `<init>`(`f7.n$b` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lf7/n$b;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L30a980.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L30a986.  return @kind void;
}
procedure `f7.n$b` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lf7/n$b;.valueOf:(Ljava/lang/String;)Lf7/n$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L30a8ec.  v0:= constclass @type ^`f7.n$b` @kind object;
  #L30a8f0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L30a8f6.  v1:= temp @kind object;
  #L30a8f8.  v1:= (`f7.n$b`) v1 @kind object;
  #L30a8fc.  return v1 @kind object;
}
procedure `f7.n$b`[] `values`() @signature `Lf7/n$b;.values:()[Lf7/n$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L30a910.  v0:= `@@f7.n$b.q` @type ^`f7.n$b`[] @kind object;
  #L30a914.  call temp:= `clone`(v0) @signature `[Lf7/n$b;.clone:()Ljava/lang/Object;` @kind virtual;
  #L30a91a.  v0:= temp @kind object;
  #L30a91c.  v0:= (`f7.n$b`[]) v0 @kind object;
  #L30a920.  return v0 @kind object;
}
