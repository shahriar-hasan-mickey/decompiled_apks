record `f7.d$a` @kind class @AccessFlag  extends `f7.c$c` @kind class {
  `f7.d$b` `f7.d$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`f7.d$a` v0 @kind this, `f7.d$b` v1 @kind object) @signature `Lf7/d$a;.<init>:(Lf7/d$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L308984.  v0.`f7.d$a.a` @type ^`f7.d$b` := v1 @kind object;
  #L308988.  call `<init>`(v0) @signature `Lf7/c$c;.<init>:()V` @kind direct;
  #L30898e.  return @kind void;
}
procedure `void` `b`(`f7.d$a` v1 @kind this, `f7.b` v2 @kind object, `f7.n` v3 @kind object) @signature `Lf7/d$a;.b:(Lf7/b;Lf7/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3089a0.  v0:= v1.`f7.d$a.a` @type ^`f7.d$b` @kind object;
  #L3089a4.  call `e`(v0, v2) @signature `Lf7/d$b;.e:(Lf7/d$b;Lf7/b;)V` @kind static;
  #L3089aa.  v2:= v1.`f7.d$a.a` @type ^`f7.d$b` @kind object;
  #L3089ae.  call `a`(v3, v2) @signature `Lf7/d;.a:(Lf7/n;Lf7/d$b;)V` @kind static;
  #L3089b4.  v2:= v1.`f7.d$a.a` @type ^`f7.d$b` @kind object;
  #L3089b8.  call `f`(v2) @signature `Lf7/d$b;.f:(Lf7/d$b;)V` @kind static;
  #L3089be.  return @kind void;
}
