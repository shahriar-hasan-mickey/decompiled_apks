record `f7.q` @kind class @AccessFlag PUBLIC extends `f7.h` @kind class {
}
global `f7.q` `@@f7.q.o` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lf7/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L30b010.  v0:= new `f7.q`;
  #L30b014.  call `<init>`(v0) @signature `Lf7/q;.<init>:()V` @kind direct;
  #L30b01a.  `@@f7.q.o` @type ^`f7.q` := v0 @kind object;
  #L30b01e.  return @kind void;
}
procedure `void` `<init>`(`f7.q` v0 @kind this) @signature `Lf7/q;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L30b030.  call `<init>`(v0) @signature `Lf7/h;.<init>:()V` @kind direct;
  #L30b036.  return @kind void;
}
procedure `f7.q` `j`() @signature `Lf7/q;.j:()Lf7/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L30af38.  v0:= `@@f7.q.o` @type ^`f7.q` @kind object;
  #L30af3c.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`f7.q` v2 @kind this) @signature `Lf7/q;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30afd8.  v0:= new `java.lang.IllegalArgumentException`;
  #L30afdc.  v1:= "Can't get query definition on priority index!" @kind object;
  #L30afe0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30afe6.  throw v0;
}
procedure `int` `compare`(`f7.q` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lf7/q;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L30af9c.  v1:= (`f7.m`) v1 @kind object;
  #L30afa0.  v2:= (`f7.m`) v2 @kind object;
  #L30afa4.  call temp:= `i`(v0, v1, v2) @signature `Lf7/q;.i:(Lf7/m;Lf7/m;)I` @kind virtual;
  #L30afaa.  v1:= temp;
  #L30afac.  return v1;
}
procedure `boolean` `e`(`f7.q` v0 @kind this, `f7.n` v1 @kind object) @signature `Lf7/q;.e:(Lf7/n;)Z` @AccessFlag PUBLIC {
    temp;

  #L30aebc.  call temp:= `q`(v1) @signature `Lf7/n;.q:()Lf7/n;` @kind interface;
  #L30aec2.  v1:= temp @kind object;
  #L30aec4.  call temp:= `isEmpty`(v1) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L30aeca.  v1:= temp;
  #L30aecc.  v1:= v1 ^~ 1;
  #L30aed0.  return v1;
}
procedure `boolean` `equals`(`f7.q` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lf7/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L30aea4.  v1:= instanceof @variable v1 @type ^`f7.q` @kind boolean;
  #L30aea8.  return v1;
}
procedure `f7.m` `f`(`f7.q` v3 @kind this, `f7.b` v4 @kind object, `f7.n` v5 @kind object) @signature `Lf7/q;.f:(Lf7/b;Lf7/n;)Lf7/m;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30aee4.  v0:= new `f7.m`;
  #L30aee8.  v1:= new `f7.t`;
  #L30aeec.  v2:= "[PRIORITY-POST]" @kind object;
  #L30aef0.  call `<init>`(v1, v2, v5) @signature `Lf7/t;.<init>:(Ljava/lang/String;Lf7/n;)V` @kind direct;
  #L30aef6.  call `<init>`(v0, v4, v1) @signature `Lf7/m;.<init>:(Lf7/b;Lf7/n;)V` @kind direct;
  #L30aefc.  return v0 @kind object;
}
procedure `f7.m` `g`(`f7.q` v2 @kind this) @signature `Lf7/q;.g:()Lf7/m;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30af10.  call temp:= `j`() @signature `Lf7/b;.j:()Lf7/b;` @kind static;
  #L30af16.  v0:= temp @kind object;
  #L30af18.  v1:= `@@f7.n.m` @type ^`f7.c` @kind object;
  #L30af1c.  call temp:= `f`(v2, v0, v1) @signature `Lf7/q;.f:(Lf7/b;Lf7/n;)Lf7/m;` @kind virtual;
  #L30af22.  v0:= temp @kind object;
  #L30af24.  return v0 @kind object;
}
procedure `int` `hashCode`(`f7.q` v1 @kind this) @signature `Lf7/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30afc0.  v0:= 3155577I;
  #L30afc6.  return v0;
}
procedure `int` `i`(`f7.q` v2 @kind this, `f7.m` v3 @kind object, `f7.m` v4 @kind object) @signature `Lf7/q;.i:(Lf7/m;Lf7/m;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30af50.  call temp:= `d`(v3) @signature `Lf7/m;.d:()Lf7/n;` @kind virtual;
  #L30af56.  v0:= temp @kind object;
  #L30af58.  call temp:= `q`(v0) @signature `Lf7/n;.q:()Lf7/n;` @kind interface;
  #L30af5e.  v0:= temp @kind object;
  #L30af60.  call temp:= `d`(v4) @signature `Lf7/m;.d:()Lf7/n;` @kind virtual;
  #L30af66.  v1:= temp @kind object;
  #L30af68.  call temp:= `q`(v1) @signature `Lf7/n;.q:()Lf7/n;` @kind interface;
  #L30af6e.  v1:= temp @kind object;
  #L30af70.  call temp:= `c`(v3) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L30af76.  v3:= temp @kind object;
  #L30af78.  call temp:= `c`(v4) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L30af7e.  v4:= temp @kind object;
  #L30af80.  call temp:= `c`(v3, v0, v4, v1) @signature `Lf7/o;.c:(Lf7/b;Lf7/n;Lf7/b;Lf7/n;)I` @kind static;
  #L30af86.  v3:= temp;
  #L30af88.  return v3;
}
procedure `java.lang.String` `toString`(`f7.q` v1 @kind this) @signature `Lf7/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30aff8.  v0:= "PriorityIndex" @kind object;
  #L30affc.  return v0 @kind object;
}
