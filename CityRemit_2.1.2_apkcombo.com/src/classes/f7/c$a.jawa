record `f7.c$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`f7.c$a` v0 @kind this) @signature `Lf7/c$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L307d24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L307d2a.  return @kind void;
}
procedure `int` `a`(`f7.c$a` v0 @kind this, `f7.b` v1 @kind object, `f7.b` v2 @kind object) @signature `Lf7/c$a;.a:(Lf7/b;Lf7/b;)I` @AccessFlag PUBLIC {
    temp;

  #L307ce4.  call temp:= `e`(v1, v2) @signature `Lf7/b;.e:(Lf7/b;)I` @kind virtual;
  #L307cea.  v1:= temp;
  #L307cec.  return v1;
}
procedure `int` `compare`(`f7.c$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lf7/c$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L307d00.  v1:= (`f7.b`) v1 @kind object;
  #L307d04.  v2:= (`f7.b`) v2 @kind object;
  #L307d08.  call temp:= `a`(v0, v1, v2) @signature `Lf7/c$a;.a:(Lf7/b;Lf7/b;)I` @kind virtual;
  #L307d0e.  v1:= temp;
  #L307d10.  return v1;
}
