record `f7.f` @kind class @AccessFlag PUBLIC extends `f7.k` @kind class {
  `java.lang.Double` `f7.f.q` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`f7.f` v0 @kind this, `java.lang.Double` v1 @kind object, `f7.n` v2 @kind object) @signature `Lf7/f;.<init>:(Ljava/lang/Double;Lf7/n;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L309398.  call `<init>`(v0, v2) @signature `Lf7/k;.<init>:(Lf7/n;)V` @kind direct;
  #L30939e.  v0.`f7.f.q` @type ^`java.lang.Double` := v1 @kind object;
  #L3093a2.  return @kind void;
}
procedure `f7.n` `E`(`f7.f` v0 @kind this, `f7.n` v1 @kind object) @signature `Lf7/f;.E:(Lf7/n;)Lf7/n;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L309284.  call temp:= `e0`(v0, v1) @signature `Lf7/f;.e0:(Lf7/n;)Lf7/f;` @kind virtual;
  #L30928a.  v1:= temp @kind object;
  #L30928c.  return v1 @kind object;
}
procedure `java.lang.String` `M`(`f7.f` v3 @kind this, `f7.n$b` v4 @kind object) @signature `Lf7/f;.M:(Lf7/n$b;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L309328.  call temp:= `b0`(v3, v4) @signature `Lf7/k;.b0:(Lf7/n$b;)Ljava/lang/String;` @kind virtual;
  #L30932e.  v4:= temp @kind object;
  #L309330.  v0:= new `java.lang.StringBuilder`;
  #L309334.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30933a.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309340.  v4:= "number:" @kind object;
  #L309344.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30934a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L309350.  v4:= temp @kind object;
  #L309352.  v0:= new `java.lang.StringBuilder`;
  #L309356.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30935c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309362.  v4:= v3.`f7.f.q` @type ^`java.lang.Double` @kind object;
  #L309366.  call temp:= `doubleValue`(v4) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L30936c.  v1:= temp @kind wide;
  #L30936e.  call temp:= `c`(v1) @signature `La7/m;.c:(D)Ljava/lang/String;` @kind static;
  #L309374.  v4:= temp @kind object;
  #L309376.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30937c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L309382.  v4:= temp @kind object;
  #L309384.  return v4 @kind object;
}
procedure `f7.k$b` `a0`(`f7.f` v1 @kind this) @signature `Lf7/f;.a0:()Lf7/k$b;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L30926c.  v0:= `@@f7.k$b.q` @type ^`f7.k$b` @kind object;
  #L309270.  return v0 @kind object;
}
procedure `int` `d0`(`f7.f` v1 @kind this, `f7.f` v2 @kind object) @signature `Lf7/f;.d0:(Lf7/f;)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3092a0.  v0:= v1.`f7.f.q` @type ^`java.lang.Double` @kind object;
  #L3092a4.  v2:= v2.`f7.f.q` @type ^`java.lang.Double` @kind object;
  #L3092a8.  call temp:= `compareTo`(v0, v2) @signature `Ljava/lang/Double;.compareTo:(Ljava/lang/Double;)I` @kind virtual;
  #L3092ae.  v2:= temp;
  #L3092b0.  return v2;
}
procedure `f7.f` `e0`(`f7.f` v2 @kind this, `f7.n` v3 @kind object) @signature `Lf7/f;.e0:(Lf7/n;)Lf7/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30923c.  call temp:= `b`(v3) @signature `Lf7/r;.b:(Lf7/n;)Z` @kind static;
  #L309242.  v0:= temp;
  #L309244.  call `f`(v0) @signature `La7/m;.f:(Z)V` @kind static;
  #L30924a.  v0:= new `f7.f`;
  #L30924e.  v1:= v2.`f7.f.q` @type ^`java.lang.Double` @kind object;
  #L309252.  call `<init>`(v0, v1, v3) @signature `Lf7/f;.<init>:(Ljava/lang/Double;Lf7/n;)V` @kind direct;
  #L309258.  return v0 @kind object;
}
procedure `boolean` `equals`(`f7.f` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lf7/f;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3091f0.  v0:= instanceof @variable v4 @type ^`f7.f` @kind boolean;
  #L3091f4.  v1:= 0I;
  #L3091f6.  if v0 != 0 then goto L3091fc;
  #L3091fa.  return v1;
  #L3091fc.  v4:= (`f7.f`) v4 @kind object;
  #L309200.  v0:= v3.`f7.f.q` @type ^`java.lang.Double` @kind object;
  #L309204.  v2:= v4.`f7.f.q` @type ^`java.lang.Double` @kind object;
  #L309208.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Double;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30920e.  v0:= temp;
  #L309210.  if v0 == 0 then goto L30922a;
  #L309214.  v0:= v3.`f7.k.o` @type ^`f7.n` @kind object;
  #L309218.  v4:= v4.`f7.k.o` @type ^`f7.n` @kind object;
  #L30921c.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L309222.  v4:= temp;
  #L309224.  if v4 == 0 then goto L30922a;
  #L309228.  v1:= 1I;
  #L30922a.  return v1;
}
procedure `java.lang.Object` `getValue`(`f7.f` v1 @kind this) @signature `Lf7/f;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L309310.  v0:= v1.`f7.f.q` @type ^`java.lang.Double` @kind object;
  #L309314.  return v0 @kind object;
}
procedure `int` `h`(`f7.f` v0 @kind this, `f7.k` v1 @kind object) @signature `Lf7/f;.h:(Lf7/k;)I` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L3092c4.  v1:= (`f7.f`) v1 @kind object;
  #L3092c8.  call temp:= `d0`(v0, v1) @signature `Lf7/f;.d0:(Lf7/f;)I` @kind virtual;
  #L3092ce.  v1:= temp;
  #L3092d0.  return v1;
}
procedure `int` `hashCode`(`f7.f` v2 @kind this) @signature `Lf7/f;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3092e4.  v0:= v2.`f7.f.q` @type ^`java.lang.Double` @kind object;
  #L3092e8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Double;.hashCode:()I` @kind virtual;
  #L3092ee.  v0:= temp;
  #L3092f0.  v1:= v2.`f7.k.o` @type ^`f7.n` @kind object;
  #L3092f4.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3092fa.  v1:= temp;
  #L3092fc.  v0:= v0 + v1 @kind int;
  #L3092fe.  return v0;
}
