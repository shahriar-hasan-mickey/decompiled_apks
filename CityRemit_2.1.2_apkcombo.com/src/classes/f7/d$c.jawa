record `f7.d$c` @kind class @AccessFlag  extends `f7.d$d` @kind interface {
  `long` `f7.d$c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`f7.d$c` v4 @kind this, `f7.n` v5 @kind object) @signature `Lf7/d$c;.<init>:(Lf7/n;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L308e58.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L308e5e.  call temp:= `b`(v5) @signature `La7/e;.b:(Lf7/n;)J` @kind static;
  #L308e64.  v0:= temp @kind wide;
  #L308e66.  v2:= 100L;
  #L308e6a.  v0:= v0 * v2 @kind long;
  #L308e6e.  v0:= (`double`) v0 @kind l2d;
  #L308e70.  call temp:= `sqrt`(v0) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L308e76.  v0:= temp @kind wide;
  #L308e78.  v0:= (`long`) v0 @kind d2l;
  #L308e7a.  v2:= 512L;
  #L308e7e.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L308e84.  v0:= temp @kind wide;
  #L308e86.  v4.`f7.d$c.a` @type ^`long` := v0 @kind wide;
  #L308e8a.  return @kind void;
}
procedure `boolean` `a`(`f7.d$c` v5 @kind this, `f7.d$b` v6 @kind object) @signature `Lf7/d$c;.a:(Lf7/d$b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L308df0.  call temp:= `i`(v6) @signature `Lf7/d$b;.i:()I` @kind virtual;
  #L308df6.  v0:= temp;
  #L308df8.  v0:= (`long`) v0 @kind i2l;
  #L308dfa.  v2:= v5.`f7.d$c.a` @type ^`long` @kind wide;
  #L308dfe.  v4:= lcmp(v0, v2);
  #L308e02.  if v4 <= 0 then goto L308e42;
  #L308e06.  call temp:= `j`(v6) @signature `Lf7/d$b;.j:()Lx6/l;` @kind virtual;
  #L308e0c.  v0:= temp @kind object;
  #L308e0e.  call temp:= `isEmpty`(v0) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L308e14.  v0:= temp;
  #L308e16.  if v0 != 0 then goto L308e3e;
  #L308e1a.  call temp:= `j`(v6) @signature `Lf7/d$b;.j:()Lx6/l;` @kind virtual;
  #L308e20.  v6:= temp @kind object;
  #L308e22.  call temp:= `f0`(v6) @signature `Lx6/l;.f0:()Lf7/b;` @kind virtual;
  #L308e28.  v6:= temp @kind object;
  #L308e2a.  call temp:= `o`() @signature `Lf7/b;.o:()Lf7/b;` @kind static;
  #L308e30.  v0:= temp @kind object;
  #L308e32.  call temp:= `equals`(v6, v0) @signature `Lf7/b;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L308e38.  v6:= temp;
  #L308e3a.  if v6 != 0 then goto L308e42;
  #L308e3e.  v6:= 1I;
  #L308e40.  goto L308e44;
  #L308e42.  v6:= 0I;
  #L308e44.  return v6;
}
