record `f7.c$d` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `f7.c$d.o` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`f7.c$d` v0 @kind this, `java.util.Iterator` v1 @kind object) @signature `Lf7/c$d;.<init>:(Ljava/util/Iterator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L307eb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L307eb6.  v0.`f7.c$d.o` @type ^`java.util.Iterator` := v1 @kind object;
  #L307eba.  return @kind void;
}
procedure `f7.m` `a`(`f7.c$d` v3 @kind this) @signature `Lf7/c$d;.a:()Lf7/m;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L307e50.  v0:= v3.`f7.c$d.o` @type ^`java.util.Iterator` @kind object;
  #L307e54.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L307e5a.  v0:= temp @kind object;
  #L307e5c.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L307e60.  v1:= new `f7.m`;
  #L307e64.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L307e6a.  v2:= temp @kind object;
  #L307e6c.  v2:= (`f7.b`) v2 @kind object;
  #L307e70.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L307e76.  v0:= temp @kind object;
  #L307e78.  v0:= (`f7.n`) v0 @kind object;
  #L307e7c.  call `<init>`(v1, v2, v0) @signature `Lf7/m;.<init>:(Lf7/b;Lf7/n;)V` @kind direct;
  #L307e82.  return v1 @kind object;
}
procedure `boolean` `hasNext`(`f7.c$d` v1 @kind this) @signature `Lf7/c$d;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307e30.  v0:= v1.`f7.c$d.o` @type ^`java.util.Iterator` @kind object;
  #L307e34.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L307e3a.  v0:= temp;
  #L307e3c.  return v0;
}
procedure `java.lang.Object` `next`(`f7.c$d` v1 @kind this) @signature `Lf7/c$d;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L307e94.  call temp:= `a`(v1) @signature `Lf7/c$d;.a:()Lf7/m;` @kind virtual;
  #L307e9a.  v0:= temp @kind object;
  #L307e9c.  return v0 @kind object;
}
procedure `void` `remove`(`f7.c$d` v1 @kind this) @signature `Lf7/c$d;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307ecc.  v0:= v1.`f7.c$d.o` @type ^`java.util.Iterator` @kind object;
  #L307ed0.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L307ed6.  return @kind void;
}
