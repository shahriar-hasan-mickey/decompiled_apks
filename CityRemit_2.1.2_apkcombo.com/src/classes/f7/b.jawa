record `f7.b` @kind class @AccessFlag PUBLIC extends `java.lang.Comparable` @kind interface {
  `java.lang.String` `f7.b.o` @AccessFlag PRIVATE_FINAL;
}
global `f7.b` `@@f7.b.p` @AccessFlag PRIVATE_STATIC_FINAL;
global `f7.b` `@@f7.b.q` @AccessFlag PRIVATE_STATIC_FINAL;
global `f7.b` `@@f7.b.r` @AccessFlag PRIVATE_STATIC_FINAL;
global `f7.b` `@@f7.b.s` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lf7/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L307c54.  v0:= new `f7.b`;
  #L307c58.  v1:= "[MIN_NAME]" @kind object;
  #L307c5c.  call `<init>`(v0, v1) @signature `Lf7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L307c62.  `@@f7.b.p` @type ^`f7.b` := v0 @kind object;
  #L307c66.  v0:= new `f7.b`;
  #L307c6a.  v1:= "[MAX_KEY]" @kind object;
  #L307c6e.  call `<init>`(v0, v1) @signature `Lf7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L307c74.  `@@f7.b.q` @type ^`f7.b` := v0 @kind object;
  #L307c78.  v0:= new `f7.b`;
  #L307c7c.  v1:= ".priority" @kind object;
  #L307c80.  call `<init>`(v0, v1) @signature `Lf7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L307c86.  `@@f7.b.r` @type ^`f7.b` := v0 @kind object;
  #L307c8a.  v0:= new `f7.b`;
  #L307c8e.  v1:= ".info" @kind object;
  #L307c92.  call `<init>`(v0, v1) @signature `Lf7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L307c98.  `@@f7.b.s` @type ^`f7.b` := v0 @kind object;
  #L307c9c.  return @kind void;
}
procedure `void` `<init>`(`f7.b` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lf7/b;.<init>:(Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L307cb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L307cb6.  v0.`f7.b.o` @type ^`java.lang.String` := v1 @kind object;
  #L307cba.  return @kind void;
}
procedure `void` `<init>`(`f7.b` v0 @kind this, `java.lang.String` v1 @kind object, `f7.b$a` v2 @kind object) @signature `Lf7/b;.<init>:(Ljava/lang/String;Lf7/b$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L307ccc.  call `<init>`(v0, v1) @signature `Lf7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L307cd2.  return @kind void;
}
procedure `java.lang.String` `c`(`f7.b` v0 @kind object) @signature `Lf7/b;.c:(Lf7/b;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L307be0.  v0:= v0.`f7.b.o` @type ^`java.lang.String` @kind object;
  #L307be4.  return v0 @kind object;
}
procedure `f7.b` `h`(`java.lang.String` v2 @kind object) @signature `Lf7/b;.h:(Ljava/lang/String;)Lf7/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3079e0.  call temp:= `k`(v2) @signature `La7/m;.k:(Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L3079e6.  v0:= temp @kind object;
  #L3079e8.  if v0 == 0 then goto L307a00;
  #L3079ec.  v1:= new `f7.b$b`;
  #L3079f0.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3079f6.  v0:= temp;
  #L3079f8.  call `<init>`(v1, v2, v0) @signature `Lf7/b$b;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3079fe.  return v1 @kind object;
  #L307a00.  v0:= ".priority" @kind object;
  #L307a04.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L307a0a.  v0:= temp;
  #L307a0c.  if v0 == 0 then goto L307a16;
  #L307a10.  v2:= `@@f7.b.r` @type ^`f7.b` @kind object;
  #L307a14.  return v2 @kind object;
  #L307a16.  v0:= "/" @kind object;
  #L307a1a.  call temp:= `contains`(v2, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L307a20.  v0:= temp;
  #L307a22.  v0:= v0 ^~ 1;
  #L307a26.  call `f`(v0) @signature `La7/m;.f:(Z)V` @kind static;
  #L307a2c.  v0:= new `f7.b`;
  #L307a30.  call `<init>`(v0, v2) @signature `Lf7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L307a36.  return v0 @kind object;
}
procedure `f7.b` `i`() @signature `Lf7/b;.i:()Lf7/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L307a48.  v0:= `@@f7.b.s` @type ^`f7.b` @kind object;
  #L307a4c.  return v0 @kind object;
}
procedure `f7.b` `j`() @signature `Lf7/b;.j:()Lf7/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L307a60.  v0:= `@@f7.b.q` @type ^`f7.b` @kind object;
  #L307a64.  return v0 @kind object;
}
procedure `f7.b` `k`() @signature `Lf7/b;.k:()Lf7/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L307a78.  v0:= `@@f7.b.p` @type ^`f7.b` @kind object;
  #L307a7c.  return v0 @kind object;
}
procedure `f7.b` `o`() @signature `Lf7/b;.o:()Lf7/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L307a90.  v0:= `@@f7.b.r` @type ^`f7.b` @kind object;
  #L307a94.  return v0 @kind object;
}
procedure `int` `compareTo`(`f7.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lf7/b;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L307b8c.  v1:= (`f7.b`) v1 @kind object;
  #L307b90.  call temp:= `e`(v0, v1) @signature `Lf7/b;.e:(Lf7/b;)I` @kind virtual;
  #L307b96.  v1:= temp;
  #L307b98.  return v1;
}
procedure `java.lang.String` `d`(`f7.b` v1 @kind this) @signature `Lf7/b;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307bf8.  v0:= v1.`f7.b.o` @type ^`java.lang.String` @kind object;
  #L307bfc.  return v0 @kind object;
}
procedure `int` `e`(`f7.b` v4 @kind this, `f7.b` v5 @kind object) @signature `Lf7/b;.e:(Lf7/b;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L307aa8.  if v4 != v5 then goto L307ab0;
  #L307aac.  v5:= 0I;
  #L307aae.  return v5;
  #L307ab0.  v0:= v4.`f7.b.o` @type ^`java.lang.String` @kind object;
  #L307ab4.  v1:= "[MIN_NAME]" @kind object;
  #L307ab8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L307abe.  v0:= temp;
  #L307ac0.  v2:= -1I;
  #L307ac2.  if v0 != 0 then goto L307b7a;
  #L307ac6.  v0:= v5.`f7.b.o` @type ^`java.lang.String` @kind object;
  #L307aca.  v3:= "[MAX_KEY]" @kind object;
  #L307ace.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L307ad4.  v0:= temp;
  #L307ad6.  if v0 == 0 then goto L307adc;
  #L307ada.  goto L307b7a;
  #L307adc.  v0:= v5.`f7.b.o` @type ^`java.lang.String` @kind object;
  #L307ae0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L307ae6.  v0:= temp;
  #L307ae8.  v1:= 1I;
  #L307aea.  if v0 != 0 then goto L307b78;
  #L307aee.  v0:= v4.`f7.b.o` @type ^`java.lang.String` @kind object;
  #L307af2.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L307af8.  v0:= temp;
  #L307afa.  if v0 == 0 then goto L307b00;
  #L307afe.  goto L307b78;
  #L307b00.  call temp:= `s`(v4) @signature `Lf7/b;.s:()Z` @kind virtual;
  #L307b06.  v0:= temp;
  #L307b08.  if v0 == 0 then goto L307b58;
  #L307b0c.  call temp:= `s`(v5) @signature `Lf7/b;.s:()Z` @kind virtual;
  #L307b12.  v0:= temp;
  #L307b14.  if v0 == 0 then goto L307b56;
  #L307b18.  call temp:= `r`(v4) @signature `Lf7/b;.r:()I` @kind virtual;
  #L307b1e.  v0:= temp;
  #L307b20.  call temp:= `r`(v5) @signature `Lf7/b;.r:()I` @kind virtual;
  #L307b26.  v1:= temp;
  #L307b28.  call temp:= `a`(v0, v1) @signature `La7/m;.a:(II)I` @kind static;
  #L307b2e.  v0:= temp;
  #L307b30.  if v0 != 0 then goto L307b54;
  #L307b34.  v0:= v4.`f7.b.o` @type ^`java.lang.String` @kind object;
  #L307b38.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L307b3e.  v0:= temp;
  #L307b40.  v5:= v5.`f7.b.o` @type ^`java.lang.String` @kind object;
  #L307b44.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L307b4a.  v5:= temp;
  #L307b4c.  call temp:= `a`(v0, v5) @signature `La7/m;.a:(II)I` @kind static;
  #L307b52.  v0:= temp;
  #L307b54.  return v0;
  #L307b56.  return v2;
  #L307b58.  call temp:= `s`(v5) @signature `Lf7/b;.s:()Z` @kind virtual;
  #L307b5e.  v0:= temp;
  #L307b60.  if v0 == 0 then goto L307b66;
  #L307b64.  return v1;
  #L307b66.  v0:= v4.`f7.b.o` @type ^`java.lang.String` @kind object;
  #L307b6a.  v5:= v5.`f7.b.o` @type ^`java.lang.String` @kind object;
  #L307b6e.  call temp:= `compareTo`(v0, v5) @signature `Ljava/lang/String;.compareTo:(Ljava/lang/String;)I` @kind virtual;
  #L307b74.  v5:= temp;
  #L307b76.  return v5;
  #L307b78.  return v1;
  #L307b7a.  return v2;
}
procedure `boolean` `equals`(`f7.b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lf7/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307970.  v0:= instanceof @variable v2 @type ^`f7.b` @kind boolean;
  #L307974.  if v0 != 0 then goto L30797c;
  #L307978.  v2:= 0I;
  #L30797a.  return v2;
  #L30797c.  if v1 != v2 then goto L307984;
  #L307980.  v2:= 1I;
  #L307982.  return v2;
  #L307984.  v2:= (`f7.b`) v2 @kind object;
  #L307988.  v0:= v1.`f7.b.o` @type ^`java.lang.String` @kind object;
  #L30798c.  v2:= v2.`f7.b.o` @type ^`java.lang.String` @kind object;
  #L307990.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L307996.  v2:= temp;
  #L307998.  return v2;
}
procedure `int` `hashCode`(`f7.b` v1 @kind this) @signature `Lf7/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307bac.  v0:= v1.`f7.b.o` @type ^`java.lang.String` @kind object;
  #L307bb0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L307bb6.  v0:= temp;
  #L307bb8.  return v0;
}
procedure `int` `r`(`f7.b` v1 @kind this) @signature `Lf7/b;.r:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L307bcc.  v0:= 0I;
  #L307bce.  return v0;
}
procedure `boolean` `s`(`f7.b` v1 @kind this) @signature `Lf7/b;.s:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3079ac.  v0:= 0I;
  #L3079ae.  return v0;
}
procedure `boolean` `t`(`f7.b` v1 @kind this) @signature `Lf7/b;.t:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3079c0.  v0:= `@@f7.b.r` @type ^`f7.b` @kind object;
  #L3079c4.  call temp:= `equals`(v1, v0) @signature `Lf7/b;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3079ca.  v0:= temp;
  #L3079cc.  return v0;
}
procedure `java.lang.String` `toString`(`f7.b` v2 @kind this) @signature `Lf7/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L307c10.  v0:= new `java.lang.StringBuilder`;
  #L307c14.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L307c1a.  v1:= "ChildKey(\"" @kind object;
  #L307c1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L307c24.  v1:= v2.`f7.b.o` @type ^`java.lang.String` @kind object;
  #L307c28.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L307c2e.  v1:= "\")" @kind object;
  #L307c32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L307c38.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L307c3e.  v0:= temp @kind object;
  #L307c40.  return v0 @kind object;
}
