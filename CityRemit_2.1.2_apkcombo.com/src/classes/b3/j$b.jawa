record `b3.j$b` @kind class @AccessFlag PUBLIC extends `b3.j` @kind class, `a3.f` @kind interface {
  `b3.k$a` `b3.j$b.h` @AccessFlag FINAL;
}
procedure `void` `<init>`(`b3.j$b` v10 @kind this, `long` v11 , `v1.j1` v13 @kind object, `java.util.List` v14 @kind object, `b3.k$a` v15 @kind object, `java.util.List` v16 @kind object, `java.util.List` v17 @kind object, `java.util.List` v18 @kind object) @signature `Lb3/j$b;.<init>:(JLv1/j1;Ljava/util/List;Lb3/k$a;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1ed8b8.  v9:= 0I;
  #L1ed8ba.  v0:= v10 @kind object;
  #L1ed8bc.  v1:= v11 @kind wide;
  #L1ed8be.  v3:= v13 @kind object;
  #L1ed8c0.  v4:= v14 @kind object;
  #L1ed8c2.  v5:= v15 @kind object;
  #L1ed8c4.  v6:= v16 @kind object;
  #L1ed8c8.  v7:= v17 @kind object;
  #L1ed8cc.  v8:= v18 @kind object;
  #L1ed8d0.  call `<init>`(v0, v1, v3, v4, v5, v6, v7, v8, v9) @signature `Lb3/j;.<init>:(JLv1/j1;Ljava/util/List;Lb3/k;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lb3/j$a;)V` @kind direct;
  #L1ed8d6.  v1:= v15 @kind object;
  #L1ed8d8.  v0.`b3.j$b.h` @type ^`b3.k$a` := v1 @kind object;
  #L1ed8dc.  return @kind void;
}
procedure `java.lang.String` `a`(`b3.j$b` v1 @kind this) @signature `Lb3/j$b;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed7a4.  v0:= 0I;
  #L1ed7a6.  return v0 @kind object;
}
procedure `a3.f` `b`(`b3.j$b` v0 @kind this) @signature `Lb3/j$b;.b:()La3/f;` @AccessFlag PUBLIC {
    temp;

  #L1ed73c.  return v0 @kind object;
}
procedure `long` `c`(`b3.j$b` v1 @kind this, `long` v2 ) @signature `Lb3/j$b;.c:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed898.  v0:= v1.`b3.j$b.h` @type ^`b3.k$a` @kind object;
  #L1ed89c.  call temp:= `j`(v0, v2) @signature `Lb3/k$a;.j:(J)J` @kind virtual;
  #L1ed8a2.  v2:= temp @kind wide;
  #L1ed8a4.  return v2 @kind wide;
}
procedure `long` `d`(`b3.j$b` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lb3/j$b;.d:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed878.  v0:= v1.`b3.j$b.h` @type ^`b3.k$a` @kind object;
  #L1ed87c.  call temp:= `i`(v0, v2, v4) @signature `Lb3/k$a;.i:(JJ)J` @kind virtual;
  #L1ed882.  v2:= temp @kind wide;
  #L1ed884.  return v2 @kind wide;
}
procedure `long` `e`(`b3.j$b` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lb3/j$b;.e:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed7d8.  v0:= v1.`b3.j$b.h` @type ^`b3.k$a` @kind object;
  #L1ed7dc.  call temp:= `h`(v0, v2, v4) @signature `Lb3/k$a;.h:(JJ)J` @kind virtual;
  #L1ed7e2.  v2:= temp @kind wide;
  #L1ed7e4.  return v2 @kind wide;
}
procedure `long` `f`(`b3.j$b` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lb3/j$b;.f:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed7f8.  v0:= v1.`b3.j$b.h` @type ^`b3.k$a` @kind object;
  #L1ed7fc.  call temp:= `d`(v0, v2, v4) @signature `Lb3/k$a;.d:(JJ)J` @kind virtual;
  #L1ed802.  v2:= temp @kind wide;
  #L1ed804.  return v2 @kind wide;
}
procedure `long` `g`(`b3.j$b` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lb3/j$b;.g:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed838.  v0:= v1.`b3.j$b.h` @type ^`b3.k$a` @kind object;
  #L1ed83c.  call temp:= `f`(v0, v2, v4) @signature `Lb3/k$a;.f:(JJ)J` @kind virtual;
  #L1ed842.  v2:= temp @kind wide;
  #L1ed844.  return v2 @kind wide;
}
procedure `b3.i` `h`(`b3.j$b` v1 @kind this, `long` v2 ) @signature `Lb3/j$b;.h:(J)Lb3/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed764.  v0:= v1.`b3.j$b.h` @type ^`b3.k$a` @kind object;
  #L1ed768.  call temp:= `k`(v0, v1, v2) @signature `Lb3/k$a;.k:(Lb3/j;J)Lb3/i;` @kind virtual;
  #L1ed76e.  v2:= temp @kind object;
  #L1ed770.  return v2 @kind object;
}
procedure `boolean` `i`(`b3.j$b` v1 @kind this) @signature `Lb3/j$b;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed784.  v0:= v1.`b3.j$b.h` @type ^`b3.k$a` @kind object;
  #L1ed788.  call temp:= `l`(v0) @signature `Lb3/k$a;.l:()Z` @kind virtual;
  #L1ed78e.  v0:= temp;
  #L1ed790.  return v0;
}
procedure `long` `j`(`b3.j$b` v2 @kind this) @signature `Lb3/j$b;.j:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ed818.  v0:= v2.`b3.j$b.h` @type ^`b3.k$a` @kind object;
  #L1ed81c.  call temp:= `e`(v0) @signature `Lb3/k$a;.e:()J` @kind virtual;
  #L1ed822.  v0:= temp @kind wide;
  #L1ed824.  return v0 @kind wide;
}
procedure `long` `k`(`b3.j$b` v1 @kind this, `long` v2 ) @signature `Lb3/j$b;.k:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed858.  v0:= v1.`b3.j$b.h` @type ^`b3.k$a` @kind object;
  #L1ed85c.  call temp:= `g`(v0, v2) @signature `Lb3/k$a;.g:(J)J` @kind virtual;
  #L1ed862.  v2:= temp @kind wide;
  #L1ed864.  return v2 @kind wide;
}
procedure `long` `l`(`b3.j$b` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lb3/j$b;.l:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed7b8.  v0:= v1.`b3.j$b.h` @type ^`b3.k$a` @kind object;
  #L1ed7bc.  call temp:= `c`(v0, v2, v4) @signature `Lb3/k$a;.c:(JJ)J` @kind virtual;
  #L1ed7c2.  v2:= temp @kind wide;
  #L1ed7c4.  return v2 @kind wide;
}
procedure `b3.i` `m`(`b3.j$b` v1 @kind this) @signature `Lb3/j$b;.m:()Lb3/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed750.  v0:= 0I;
  #L1ed752.  return v0 @kind object;
}
