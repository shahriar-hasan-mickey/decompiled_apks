record `b3.k$c` @kind class @AccessFlag PUBLIC_FINAL extends `b3.k$a` @kind class {
  `b3.n` `b3.k$c.j` @AccessFlag FINAL;
  `b3.n` `b3.k$c.k` @AccessFlag FINAL;
  `long` `b3.k$c.l` @AccessFlag FINAL;
}
procedure `void` `<init>`(`b3.k$c` v17 @kind this, `b3.i` v18 @kind object, `long` v19 , `long` v21 , `long` v23 , `long` v25 , `long` v27 , `java.util.List` v29 @kind object, `long` v30 , `b3.n` v32 @kind object, `b3.n` v33 @kind object, `long` v34 , `long` v36 ) @signature `Lb3/k$c;.<init>:(Lb3/i;JJJJJLjava/util/List;JLb3/n;Lb3/n;JJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L1ee058.  v15:= v17 @kind object;
  #L1ee05c.  v0:= v17 @kind object;
  #L1ee060.  v1:= v18 @kind object;
  #L1ee064.  v2:= v19 @kind wide;
  #L1ee068.  v4:= v21 @kind wide;
  #L1ee06c.  v6:= v23 @kind wide;
  #L1ee070.  v8:= v27 @kind wide;
  #L1ee074.  v10:= v29 @kind object;
  #L1ee078.  v11:= v30 @kind wide;
  #L1ee07c.  v13:= v34 @kind wide;
  #L1ee080.  v15:= v36 @kind wide;
  #L1ee084.  call `<init>`(v0, v1, v2, v4, v6, v8, v10, v11, v13, v15) @signature `Lb3/k$a;.<init>:(Lb3/i;JJJJLjava/util/List;JJJ)V` @kind direct;
  #L1ee08a.  v1:= v32 @kind object;
  #L1ee08e.  v0.`b3.k$c.j` @type ^`b3.n` := v1 @kind object;
  #L1ee092.  v1:= v33 @kind object;
  #L1ee096.  v0.`b3.k$c.k` @type ^`b3.n` := v1 @kind object;
  #L1ee09a.  v1:= v25 @kind wide;
  #L1ee09e.  v0.`b3.k$c.l` @type ^`long` := v1 @kind wide;
  #L1ee0a2.  return @kind void;
}
procedure `b3.i` `a`(`b3.k$c` v13 @kind this, `b3.j` v14 @kind object) @signature `Lb3/k$c;.a:(Lb3/j;)Lb3/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1eded8.  v0:= v13.`b3.k$c.j` @type ^`b3.n` @kind object;
  #L1ededc.  if v0 == 0 then goto L1edf12;
  #L1edee0.  v14:= v14.`b3.j.a` @type ^`v1.j1` @kind object;
  #L1edee4.  v1:= v14.`v1.j1.o` @type ^`java.lang.String` @kind object;
  #L1edee8.  v2:= 0L;
  #L1edeec.  v4:= v14.`v1.j1.v` @type ^`int`;
  #L1edef0.  v5:= 0L;
  #L1edef4.  call temp:= `a`(v0, v1, v2, v4, v5) @signature `Lb3/n;.a:(Ljava/lang/String;JIJ)Ljava/lang/String;` @kind virtual;
  #L1edefa.  v8:= temp @kind object;
  #L1edefc.  v14:= new `b3.i`;
  #L1edf00.  v9:= 0L;
  #L1edf04.  v11:= -1L;
  #L1edf08.  v7:= v14 @kind object;
  #L1edf0a.  call `<init>`(v7, v8, v9, v11) @signature `Lb3/i;.<init>:(Ljava/lang/String;JJ)V` @kind direct;
  #L1edf10.  return v14 @kind object;
  #L1edf12.  call temp:= `a`(v13, v14) @signature `Lb3/k;.a:(Lb3/j;)Lb3/i;` @kind super;
  #L1edf18.  v14:= temp @kind object;
  #L1edf1a.  return v14 @kind object;
}
procedure `long` `g`(`b3.k$c` v5 @kind this, `long` v6 ) @signature `Lb3/k$c;.g:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1edfac.  v0:= v5.`b3.k$a.f` @type ^`java.util.List` @kind object;
  #L1edfb0.  if v0 == 0 then goto L1edfc0;
  #L1edfb4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1edfba.  v6:= temp;
  #L1edfbc.  v6:= (`long`) v6 @kind i2l;
  #L1edfbe.  return v6 @kind wide;
  #L1edfc0.  v0:= v5.`b3.k$c.l` @type ^`long` @kind wide;
  #L1edfc4.  v2:= -1L;
  #L1edfc8.  v4:= lcmp(v0, v2);
  #L1edfcc.  if v4 == 0 then goto L1edfde;
  #L1edfd0.  v6:= v5.`b3.k$a.d` @type ^`long` @kind wide;
  #L1edfd4.  v0:= v0 - v6 @kind long;
  #L1edfd6.  v6:= 1L;
  #L1edfda.  v0:= v0 + v6 @kind long;
  #L1edfdc.  return v0 @kind wide;
  #L1edfde.  v0:= -4.9E-324D;
  #L1edfe8.  v4:= lcmp(v6, v0);
  #L1edfec.  if v4 == 0 then goto L1ee044;
  #L1edff0.  call temp:= `valueOf`(v6) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1edff6.  v6:= temp @kind object;
  #L1edff8.  v0:= v5.`b3.k.b` @type ^`long` @kind wide;
  #L1edffc.  call temp:= `valueOf`(v0) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1ee002.  v7:= temp @kind object;
  #L1ee004.  call temp:= `multiply`(v6, v7) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1ee00a.  v6:= temp @kind object;
  #L1ee00c.  v0:= v5.`b3.k$a.e` @type ^`long` @kind wide;
  #L1ee010.  call temp:= `valueOf`(v0) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1ee016.  v7:= temp @kind object;
  #L1ee018.  v0:= 1000000L;
  #L1ee01e.  call temp:= `valueOf`(v0) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L1ee024.  v0:= temp @kind object;
  #L1ee026.  call temp:= `multiply`(v7, v0) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L1ee02c.  v7:= temp @kind object;
  #L1ee02e.  v0:= `@@java.math.RoundingMode.CEILING` @type ^`java.math.RoundingMode` @kind object;
  #L1ee032.  call temp:= `a`(v6, v7, v0) @signature `Ln5/a;.a:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;` @kind static;
  #L1ee038.  v6:= temp @kind object;
  #L1ee03a.  call temp:= `longValue`(v6) @signature `Ljava/math/BigInteger;.longValue:()J` @kind virtual;
  #L1ee040.  v6:= temp @kind wide;
  #L1ee042.  return v6 @kind wide;
  #L1ee044.  return v2 @kind wide;
}
procedure `b3.i` `k`(`b3.k$c` v14 @kind this, `b3.j` v15 @kind object, `long` v16 ) @signature `Lb3/k$c;.k:(Lb3/j;J)Lb3/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L1edf2c.  v0:= v14 @kind object;
  #L1edf2e.  v1:= v0.`b3.k$a.f` @type ^`java.util.List` @kind object;
  #L1edf32.  if v1 == 0 then goto L1edf52;
  #L1edf36.  v2:= v0.`b3.k$a.d` @type ^`long` @kind wide;
  #L1edf3a.  v2:= v16 - v2 @kind long;
  #L1edf3e.  v3:= (`int`) v2 @kind l2i;
  #L1edf40.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1edf46.  v1:= temp @kind object;
  #L1edf48.  v1:= (`b3.k$d`) v1 @kind object;
  #L1edf4c.  v1:= v1.`b3.k$d.a` @type ^`long` @kind wide;
  #L1edf50.  goto L1edf62;
  #L1edf52.  v1:= v0.`b3.k$a.d` @type ^`long` @kind wide;
  #L1edf56.  v1:= v16 - v1 @kind long;
  #L1edf5a.  v3:= v0.`b3.k$a.e` @type ^`long` @kind wide;
  #L1edf5e.  v1:= v1 * v3 @kind long;
  #L1edf62.  v6:= v1 @kind wide;
  #L1edf64.  v1:= v0.`b3.k$c.k` @type ^`b3.n` @kind object;
  #L1edf68.  v2:= v15 @kind object;
  #L1edf6a.  v2:= v2.`b3.j.a` @type ^`v1.j1` @kind object;
  #L1edf6e.  v3:= v2.`v1.j1.o` @type ^`java.lang.String` @kind object;
  #L1edf72.  v5:= v2.`v1.j1.v` @type ^`int`;
  #L1edf76.  v2:= v3 @kind object;
  #L1edf78.  v3:= v16 @kind wide;
  #L1edf7c.  call temp:= `a`(v1, v2, v3, v5, v6) @signature `Lb3/n;.a:(Ljava/lang/String;JIJ)Ljava/lang/String;` @kind virtual;
  #L1edf82.  v9:= temp @kind object;
  #L1edf84.  v1:= new `b3.i`;
  #L1edf88.  v10:= 0L;
  #L1edf8c.  v12:= -1L;
  #L1edf90.  v8:= v1 @kind object;
  #L1edf92.  call `<init>`(v8, v9, v10, v12) @signature `Lb3/i;.<init>:(Ljava/lang/String;JJ)V` @kind direct;
  #L1edf98.  return v1 @kind object;
}
