record `b3.e` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `b3.e.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `b3.e.b` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `b3.e.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`b3.e` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lb3/e;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ed264.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ed26a.  v0.`b3.e.a` @type ^`java.lang.String` := v1 @kind object;
  #L1ed26e.  v0.`b3.e.b` @type ^`java.lang.String` := v2 @kind object;
  #L1ed272.  v0.`b3.e.c` @type ^`java.lang.String` := v3 @kind object;
  #L1ed276.  return @kind void;
}
procedure `boolean` `equals`(`b3.e` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lb3/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ed19c.  v0:= 1I;
  #L1ed19e.  if v4 != v5 then goto L1ed1a4;
  #L1ed1a2.  return v0;
  #L1ed1a4.  v1:= 0I;
  #L1ed1a6.  if v5 == 0 then goto L1ed202;
  #L1ed1aa.  v2:= constclass @type ^`b3.e` @kind object;
  #L1ed1ae.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1ed1b4.  v3:= temp @kind object;
  #L1ed1b6.  if v2 == v3 then goto L1ed1bc;
  #L1ed1ba.  goto L1ed202;
  #L1ed1bc.  v5:= (`b3.e`) v5 @kind object;
  #L1ed1c0.  v2:= v4.`b3.e.a` @type ^`java.lang.String` @kind object;
  #L1ed1c4.  v3:= v5.`b3.e.a` @type ^`java.lang.String` @kind object;
  #L1ed1c8.  call temp:= `c`(v2, v3) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1ed1ce.  v2:= temp;
  #L1ed1d0.  if v2 == 0 then goto L1ed1fe;
  #L1ed1d4.  v2:= v4.`b3.e.b` @type ^`java.lang.String` @kind object;
  #L1ed1d8.  v3:= v5.`b3.e.b` @type ^`java.lang.String` @kind object;
  #L1ed1dc.  call temp:= `c`(v2, v3) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1ed1e2.  v2:= temp;
  #L1ed1e4.  if v2 == 0 then goto L1ed1fe;
  #L1ed1e8.  v2:= v4.`b3.e.c` @type ^`java.lang.String` @kind object;
  #L1ed1ec.  v5:= v5.`b3.e.c` @type ^`java.lang.String` @kind object;
  #L1ed1f0.  call temp:= `c`(v2, v5) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1ed1f6.  v5:= temp;
  #L1ed1f8.  if v5 == 0 then goto L1ed1fe;
  #L1ed1fc.  goto L1ed200;
  #L1ed1fe.  v0:= 0I;
  #L1ed200.  return v0;
  #L1ed202.  return v1;
}
procedure `int` `hashCode`(`b3.e` v3 @kind this) @signature `Lb3/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ed214.  v0:= v3.`b3.e.a` @type ^`java.lang.String` @kind object;
  #L1ed218.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1ed21e.  v0:= temp;
  #L1ed220.  v0:= v0 * 31;
  #L1ed224.  v1:= v3.`b3.e.b` @type ^`java.lang.String` @kind object;
  #L1ed228.  v2:= 0I;
  #L1ed22a.  if v1 == 0 then goto L1ed238;
  #L1ed22e.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1ed234.  v1:= temp;
  #L1ed236.  goto L1ed23a;
  #L1ed238.  v1:= 0I;
  #L1ed23a.  v0:= v0 + v1 @kind int;
  #L1ed23c.  v0:= v0 * 31;
  #L1ed240.  v1:= v3.`b3.e.c` @type ^`java.lang.String` @kind object;
  #L1ed244.  if v1 == 0 then goto L1ed250;
  #L1ed248.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1ed24e.  v2:= temp;
  #L1ed250.  v0:= v0 + v2 @kind int;
  #L1ed252.  return v0;
}
