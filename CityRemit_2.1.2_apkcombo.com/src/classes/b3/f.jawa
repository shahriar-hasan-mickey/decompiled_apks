record `b3.f` @kind class @AccessFlag PUBLIC_FINAL {
  `p2.a`[] `b3.f.a` @AccessFlag PUBLIC_FINAL;
  `long`[] `b3.f.b` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `b3.f.c` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `b3.f.d` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`b3.f` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `long` v3 , `long`[] v5 @kind object, `p2.a`[] v6 @kind object) @signature `Lb3/f;.<init>:(Ljava/lang/String;Ljava/lang/String;J[J[Lp2/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ed2cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ed2d2.  v0.`b3.f.c` @type ^`java.lang.String` := v1 @kind object;
  #L1ed2d6.  v0.`b3.f.d` @type ^`java.lang.String` := v2 @kind object;
  #L1ed2da.  v0.`b3.f.b` @type ^`long`[] := v5 @kind object;
  #L1ed2de.  v0.`b3.f.a` @type ^`p2.a`[] := v6 @kind object;
  #L1ed2e2.  return @kind void;
}
procedure `java.lang.String` `a`(`b3.f` v2 @kind this) @signature `Lb3/f;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ed288.  v0:= new `java.lang.StringBuilder`;
  #L1ed28c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ed292.  v1:= v2.`b3.f.c` @type ^`java.lang.String` @kind object;
  #L1ed296.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed29c.  v1:= "/" @kind object;
  #L1ed2a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed2a6.  v1:= v2.`b3.f.d` @type ^`java.lang.String` @kind object;
  #L1ed2aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed2b0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ed2b6.  v0:= temp @kind object;
  #L1ed2b8.  return v0 @kind object;
}
