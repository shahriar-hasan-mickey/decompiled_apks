record `b3.k$e` @kind class @AccessFlag PUBLIC extends `b3.k` @kind class {
  `long` `b3.k$e.d` @AccessFlag FINAL;
  `long` `b3.k$e.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`b3.k$e` v10 @kind this) @signature `Lb3/k$e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1ee18c.  v1:= 0I;
  #L1ee18e.  v2:= 1L;
  #L1ee192.  v4:= 0L;
  #L1ee196.  v6:= 0L;
  #L1ee19a.  v8:= 0L;
  #L1ee19e.  v0:= v10 @kind object;
  #L1ee1a0.  call `<init>`(v0, v1, v2, v4, v6, v8) @signature `Lb3/k$e;.<init>:(Lb3/i;JJJJ)V` @kind direct;
  #L1ee1a6.  return @kind void;
}
procedure `void` `<init>`(`b3.k$e` v0 @kind this, `b3.i` v1 @kind object, `long` v2 , `long` v4 , `long` v6 , `long` v8 ) @signature `Lb3/k$e;.<init>:(Lb3/i;JJJJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ee1b8.  call `<init>`(v0, v1, v2, v4) @signature `Lb3/k;.<init>:(Lb3/i;JJ)V` @kind direct;
  #L1ee1be.  v0.`b3.k$e.d` @type ^`long` := v6 @kind wide;
  #L1ee1c2.  v0.`b3.k$e.e` @type ^`long` := v8 @kind wide;
  #L1ee1c6.  return @kind void;
}
procedure `b3.i` `c`(`b3.k$e` v7 @kind this) @signature `Lb3/k$e;.c:()Lb3/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1ee154.  v4:= v7.`b3.k$e.e` @type ^`long` @kind wide;
  #L1ee158.  v0:= 0L;
  #L1ee15c.  v2:= lcmp(v4, v0);
  #L1ee160.  if v2 > 0 then goto L1ee168;
  #L1ee164.  v0:= 0I;
  #L1ee166.  goto L1ee17a;
  #L1ee168.  v6:= new `b3.i`;
  #L1ee16c.  v1:= 0I;
  #L1ee16e.  v2:= v7.`b3.k$e.d` @type ^`long` @kind wide;
  #L1ee172.  v0:= v6 @kind object;
  #L1ee174.  call `<init>`(v0, v1, v2, v4) @signature `Lb3/i;.<init>:(Ljava/lang/String;JJ)V` @kind direct;
  #L1ee17a.  return v0 @kind object;
}
