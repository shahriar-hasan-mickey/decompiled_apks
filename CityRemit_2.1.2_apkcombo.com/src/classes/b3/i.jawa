record `b3.i` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `b3.i.a` @AccessFlag PUBLIC_FINAL;
  `long` `b3.i.b` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `b3.i.c` @AccessFlag PRIVATE_FINAL;
  `int` `b3.i.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`b3.i` v0 @kind this, `java.lang.String` v1 @kind object, `long` v2 , `long` v4 ) @signature `Lb3/i;.<init>:(Ljava/lang/String;JJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ed710.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ed716.  if v1 != 0 then goto L1ed71e;
  #L1ed71a.  v1:= "" @kind object;
  #L1ed71e.  v0.`b3.i.c` @type ^`java.lang.String` := v1 @kind object;
  #L1ed722.  v0.`b3.i.a` @type ^`long` := v2 @kind wide;
  #L1ed726.  v0.`b3.i.b` @type ^`long` := v4 @kind wide;
  #L1ed72a.  return @kind void;
}
procedure `b3.i` `a`(`b3.i` v13 @kind this, `b3.i` v14 @kind object, `java.lang.String` v15 @kind object) @signature `Lb3/i;.a:(Lb3/i;Ljava/lang/String;)Lb3/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1ed50c.  call temp:= `c`(v13, v15) @signature `Lb3/i;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1ed512.  v1:= temp @kind object;
  #L1ed514.  v0:= 0I;
  #L1ed516.  if v14 == 0 then goto L1ed5b4;
  #L1ed51a.  call temp:= `c`(v14, v15) @signature `Lb3/i;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1ed520.  v15:= temp @kind object;
  #L1ed522.  call temp:= `equals`(v1, v15) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ed528.  v15:= temp;
  #L1ed52a.  if v15 != 0 then goto L1ed530;
  #L1ed52e.  goto L1ed5b4;
  #L1ed530.  v2:= v13.`b3.i.b` @type ^`long` @kind wide;
  #L1ed534.  v4:= -1L;
  #L1ed538.  v15:= lcmp(v2, v4);
  #L1ed53c.  if v15 == 0 then goto L1ed576;
  #L1ed540.  v6:= v13.`b3.i.a` @type ^`long` @kind wide;
  #L1ed544.  v8:= v6 + v2 @kind long;
  #L1ed548.  v10:= v14.`b3.i.a` @type ^`long` @kind wide;
  #L1ed54c.  v15:= lcmp(v8, v10);
  #L1ed550.  if v15 != 0 then goto L1ed576;
  #L1ed554.  v15:= new `b3.i`;
  #L1ed558.  v8:= v14.`b3.i.b` @type ^`long` @kind wide;
  #L1ed55c.  v14:= lcmp(v8, v4);
  #L1ed560.  if v14 != 0 then goto L1ed566;
  #L1ed564.  goto L1ed56a;
  #L1ed566.  v2:= v2 + v8 @kind long;
  #L1ed568.  v4:= v2 @kind wide;
  #L1ed56a.  v0:= v15 @kind object;
  #L1ed56c.  v2:= v6 @kind wide;
  #L1ed56e.  call `<init>`(v0, v1, v2, v4) @signature `Lb3/i;.<init>:(Ljava/lang/String;JJ)V` @kind direct;
  #L1ed574.  return v15 @kind object;
  #L1ed576.  v6:= v14.`b3.i.b` @type ^`long` @kind wide;
  #L1ed57a.  v15:= lcmp(v6, v4);
  #L1ed57e.  if v15 == 0 then goto L1ed5b4;
  #L1ed582.  v14:= v14.`b3.i.a` @type ^`long` @kind wide;
  #L1ed586.  v8:= v14 + v6 @kind long;
  #L1ed58a.  v10:= v13.`b3.i.a` @type ^`long` @kind wide;
  #L1ed58e.  v12:= lcmp(v8, v10);
  #L1ed592.  if v12 != 0 then goto L1ed5b4;
  #L1ed596.  v8:= new `b3.i`;
  #L1ed59a.  v0:= lcmp(v2, v4);
  #L1ed59e.  if v0 != 0 then goto L1ed5a4;
  #L1ed5a2.  goto L1ed5a8;
  #L1ed5a4.  v6:= v6 + v2 @kind long;
  #L1ed5a6.  v4:= v6 @kind wide;
  #L1ed5a8.  v0:= v8 @kind object;
  #L1ed5aa.  v2:= v14 @kind wide;
  #L1ed5ac.  call `<init>`(v0, v1, v2, v4) @signature `Lb3/i;.<init>:(Ljava/lang/String;JJ)V` @kind direct;
  #L1ed5b2.  return v8 @kind object;
  #L1ed5b4.  return v0 @kind object;
}
procedure `android.net.Uri` `b`(`b3.i` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lb3/i;.b:(Ljava/lang/String;)Landroid/net/Uri;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed4ec.  v0:= v1.`b3.i.c` @type ^`java.lang.String` @kind object;
  #L1ed4f0.  call temp:= `e`(v2, v0) @signature `Ls3/j0;.e:(Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;` @kind static;
  #L1ed4f6.  v2:= temp @kind object;
  #L1ed4f8.  return v2 @kind object;
}
procedure `java.lang.String` `c`(`b3.i` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lb3/i;.c:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed684.  v0:= v1.`b3.i.c` @type ^`java.lang.String` @kind object;
  #L1ed688.  call temp:= `d`(v2, v0) @signature `Ls3/j0;.d:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1ed68e.  v2:= temp @kind object;
  #L1ed690.  return v2 @kind object;
}
procedure `boolean` `equals`(`b3.i` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lb3/i;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1ed5c8.  v0:= 1I;
  #L1ed5ca.  if v7 != v8 then goto L1ed5d0;
  #L1ed5ce.  return v0;
  #L1ed5d0.  v1:= 0I;
  #L1ed5d2.  if v8 == 0 then goto L1ed626;
  #L1ed5d6.  v2:= constclass @type ^`b3.i` @kind object;
  #L1ed5da.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1ed5e0.  v3:= temp @kind object;
  #L1ed5e2.  if v2 == v3 then goto L1ed5e8;
  #L1ed5e6.  goto L1ed626;
  #L1ed5e8.  v8:= (`b3.i`) v8 @kind object;
  #L1ed5ec.  v2:= v7.`b3.i.a` @type ^`long` @kind wide;
  #L1ed5f0.  v4:= v8.`b3.i.a` @type ^`long` @kind wide;
  #L1ed5f4.  v6:= lcmp(v2, v4);
  #L1ed5f8.  if v6 != 0 then goto L1ed622;
  #L1ed5fc.  v2:= v7.`b3.i.b` @type ^`long` @kind wide;
  #L1ed600.  v4:= v8.`b3.i.b` @type ^`long` @kind wide;
  #L1ed604.  v6:= lcmp(v2, v4);
  #L1ed608.  if v6 != 0 then goto L1ed622;
  #L1ed60c.  v2:= v7.`b3.i.c` @type ^`java.lang.String` @kind object;
  #L1ed610.  v8:= v8.`b3.i.c` @type ^`java.lang.String` @kind object;
  #L1ed614.  call temp:= `equals`(v2, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ed61a.  v8:= temp;
  #L1ed61c.  if v8 == 0 then goto L1ed622;
  #L1ed620.  goto L1ed624;
  #L1ed622.  v0:= 0I;
  #L1ed624.  return v0;
  #L1ed626.  return v1;
}
procedure `int` `hashCode`(`b3.i` v3 @kind this) @signature `Lb3/i;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ed638.  v0:= v3.`b3.i.d` @type ^`int`;
  #L1ed63c.  if v0 != 0 then goto L1ed66e;
  #L1ed640.  v0:= 527I;
  #L1ed644.  v1:= v3.`b3.i.a` @type ^`long` @kind wide;
  #L1ed648.  v2:= (`int`) v1 @kind l2i;
  #L1ed64a.  v0:= v0 + v2 @kind int;
  #L1ed64c.  v0:= v0 * 31;
  #L1ed650.  v1:= v3.`b3.i.b` @type ^`long` @kind wide;
  #L1ed654.  v2:= (`int`) v1 @kind l2i;
  #L1ed656.  v0:= v0 + v2 @kind int;
  #L1ed658.  v0:= v0 * 31;
  #L1ed65c.  v1:= v3.`b3.i.c` @type ^`java.lang.String` @kind object;
  #L1ed660.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1ed666.  v1:= temp;
  #L1ed668.  v0:= v0 + v1 @kind int;
  #L1ed66a.  v3.`b3.i.d` @type ^`int` := v0;
  #L1ed66e.  v0:= v3.`b3.i.d` @type ^`int`;
  #L1ed672.  return v0;
}
procedure `java.lang.String` `toString`(`b3.i` v3 @kind this) @signature `Lb3/i;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ed6a4.  v0:= new `java.lang.StringBuilder`;
  #L1ed6a8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ed6ae.  v1:= "RangedUri(referenceUri=" @kind object;
  #L1ed6b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed6b8.  v1:= v3.`b3.i.c` @type ^`java.lang.String` @kind object;
  #L1ed6bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed6c2.  v1:= ", start=" @kind object;
  #L1ed6c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed6cc.  v1:= v3.`b3.i.a` @type ^`long` @kind wide;
  #L1ed6d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed6d6.  v1:= ", length=" @kind object;
  #L1ed6da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed6e0.  v1:= v3.`b3.i.b` @type ^`long` @kind wide;
  #L1ed6e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed6ea.  v1:= ")" @kind object;
  #L1ed6ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed6f4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ed6fa.  v0:= temp @kind object;
  #L1ed6fc.  return v0 @kind object;
}
