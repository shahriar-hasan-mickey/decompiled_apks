record `b3.n` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String`[] `b3.n.a` @AccessFlag PRIVATE_FINAL;
  `int`[] `b3.n.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String`[] `b3.n.c` @AccessFlag PRIVATE_FINAL;
  `int` `b3.n.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`b3.n` v0 @kind this, `java.lang.String`[] v1 @kind object, `int`[] v2 @kind object, `java.lang.String`[] v3 @kind object, `int` v4 ) @signature `Lb3/n;.<init>:([Ljava/lang/String;[I[Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1ee714.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ee71a.  v0.`b3.n.a` @type ^`java.lang.String`[] := v1 @kind object;
  #L1ee71e.  v0.`b3.n.b` @type ^`int`[] := v2 @kind object;
  #L1ee722.  v0.`b3.n.c` @type ^`java.lang.String`[] := v3 @kind object;
  #L1ee726.  v0.`b3.n.d` @type ^`int` := v4;
  #L1ee72a.  return @kind void;
}
procedure `b3.n` `b`(`java.lang.String` v4 @kind object) @signature `Lb3/n;.b:(Ljava/lang/String;)Lb3/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ee370.  v0:= 5I;
  #L1ee372.  v0:= new `java.lang.String`[v0];
  #L1ee376.  v1:= 4I;
  #L1ee378.  v2:= new `int`[v1];
  #L1ee37c.  v1:= new `java.lang.String`[v1];
  #L1ee380.  call temp:= `c`(v4, v0, v2, v1) @signature `Lb3/n;.c:(Ljava/lang/String;[Ljava/lang/String;[I[Ljava/lang/String;)I` @kind static;
  #L1ee386.  v4:= temp;
  #L1ee388.  v3:= new `b3.n`;
  #L1ee38c.  call `<init>`(v3, v0, v2, v1, v4) @signature `Lb3/n;.<init>:([Ljava/lang/String;[I[Ljava/lang/String;I)V` @kind direct;
  #L1ee392.  return v3 @kind object;
}
procedure `int` `c`(`java.lang.String` v11 @kind object, `java.lang.String`[] v12 @kind object, `int`[] v13 @kind object, `java.lang.String`[] v14 @kind object) @signature `Lb3/n;.c:(Ljava/lang/String;[Ljava/lang/String;[I[Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1ee3a4.  v0:= 0I;
  #L1ee3a6.  v1:= "" @kind object;
  #L1ee3aa.  v12[v0]:= v1 @kind object;
  #L1ee3ae.  v2:= 0I;
  #L1ee3b0.  v3:= 0I;
  #L1ee3b2.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ee3b8.  v4:= temp;
  #L1ee3ba.  if v2 >= v4 then goto L1ee5d2;
  #L1ee3be.  v4:= "$" @kind object;
  #L1ee3c2.  call temp:= `indexOf`(v11, v4, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L1ee3c8.  v5:= temp;
  #L1ee3ca.  v6:= -1I;
  #L1ee3cc.  if v5 != v6 then goto L1ee408;
  #L1ee3d0.  v4:= new `java.lang.StringBuilder`;
  #L1ee3d4.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ee3da.  v5:= v12[v3] @kind object;
  #L1ee3de.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee3e4.  call temp:= `substring`(v11, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1ee3ea.  v2:= temp @kind object;
  #L1ee3ec.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee3f2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ee3f8.  v2:= temp @kind object;
  #L1ee3fa.  v12[v3]:= v2 @kind object;
  #L1ee3fe.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ee404.  v2:= temp;
  #L1ee406.  goto L1ee3b2;
  #L1ee408.  if v5 == v2 then goto L1ee43e;
  #L1ee40c.  v4:= new `java.lang.StringBuilder`;
  #L1ee410.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ee416.  v6:= v12[v3] @kind object;
  #L1ee41a.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee420.  call temp:= `substring`(v11, v2, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1ee426.  v2:= temp @kind object;
  #L1ee428.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee42e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ee434.  v2:= temp @kind object;
  #L1ee436.  v12[v3]:= v2 @kind object;
  #L1ee43a.  v2:= v5;
  #L1ee43c.  goto L1ee3b2;
  #L1ee43e.  v5:= "$$" @kind object;
  #L1ee442.  call temp:= `startsWith`(v11, v5, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;I)Z` @kind virtual;
  #L1ee448.  v5:= temp;
  #L1ee44a.  if v5 == 0 then goto L1ee47a;
  #L1ee44e.  v5:= new `java.lang.StringBuilder`;
  #L1ee452.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ee458.  v6:= v12[v3] @kind object;
  #L1ee45c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee462.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee468.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ee46e.  v4:= temp @kind object;
  #L1ee470.  v12[v3]:= v4 @kind object;
  #L1ee474.  v2:= v2 + 2;
  #L1ee478.  goto L1ee3b2;
  #L1ee47a.  v2:= v2 + 1;
  #L1ee47e.  call temp:= `indexOf`(v11, v4, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L1ee484.  v4:= temp;
  #L1ee486.  call temp:= `substring`(v11, v2, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1ee48c.  v2:= temp @kind object;
  #L1ee48e.  v5:= "RepresentationID" @kind object;
  #L1ee492.  call temp:= `equals`(v2, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ee498.  v5:= temp;
  #L1ee49a.  v7:= 1I;
  #L1ee49c.  if v5 == 0 then goto L1ee4a8;
  #L1ee4a0.  v13[v3]:= v7;
  #L1ee4a4.  goto L1ee5c0;
  #L1ee4a8.  v5:= "%0" @kind object;
  #L1ee4ac.  call temp:= `indexOf`(v2, v5) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L1ee4b2.  v5:= temp;
  #L1ee4b4.  if v5 == v6 then goto L1ee518;
  #L1ee4b8.  call temp:= `substring`(v2, v5) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1ee4be.  v8:= temp @kind object;
  #L1ee4c0.  v9:= "d" @kind object;
  #L1ee4c4.  call temp:= `endsWith`(v8, v9) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ee4ca.  v10:= temp;
  #L1ee4cc.  if v10 != 0 then goto L1ee50e;
  #L1ee4d0.  v10:= "x" @kind object;
  #L1ee4d4.  call temp:= `endsWith`(v8, v10) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ee4da.  v10:= temp;
  #L1ee4dc.  if v10 != 0 then goto L1ee50e;
  #L1ee4e0.  v10:= "X" @kind object;
  #L1ee4e4.  call temp:= `endsWith`(v8, v10) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ee4ea.  v10:= temp;
  #L1ee4ec.  if v10 != 0 then goto L1ee50e;
  #L1ee4f0.  v10:= new `java.lang.StringBuilder`;
  #L1ee4f4.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ee4fa.  call temp:= `append`(v10, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee500.  call temp:= `append`(v10, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee506.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ee50c.  v8:= temp @kind object;
  #L1ee50e.  call temp:= `substring`(v2, v0, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1ee514.  v2:= temp @kind object;
  #L1ee516.  goto L1ee51c;
  #L1ee518.  v8:= "%01d" @kind object;
  #L1ee51c.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1ee522.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1ee528.  v5:= temp;
  #L1ee52a.  v9:= 2I;
  #L1ee52c.  goto L1ee5d4;
  #L1ee532.  goto L1ee574;
  #L1ee534.  v5:= "Bandwidth" @kind object;
  #L1ee538.  call temp:= `equals`(v2, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ee53e.  v2:= temp;
  #L1ee540.  if v2 != 0 then goto L1ee546;
  #L1ee544.  goto L1ee574;
  #L1ee546.  v6:= 2I;
  #L1ee548.  goto L1ee574;
  #L1ee54a.  v5:= "Time" @kind object;
  #L1ee54e.  call temp:= `equals`(v2, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ee554.  v2:= temp;
  #L1ee556.  if v2 != 0 then goto L1ee55c;
  #L1ee55a.  goto L1ee574;
  #L1ee55c.  v6:= 1I;
  #L1ee55e.  goto L1ee574;
  #L1ee560.  v5:= "Number" @kind object;
  #L1ee564.  call temp:= `equals`(v2, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ee56a.  v2:= temp;
  #L1ee56c.  if v2 != 0 then goto L1ee572;
  #L1ee570.  goto L1ee574;
  #L1ee572.  v6:= 0I;
  #L1ee574.  goto L1ee5f0;
  #L1ee57a.  v12:= new `java.lang.IllegalArgumentException`;
  #L1ee57e.  v13:= new `java.lang.StringBuilder`;
  #L1ee582.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ee588.  v14:= "Invalid template: " @kind object;
  #L1ee58c.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee592.  call temp:= `append`(v13, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee598.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ee59e.  v11:= temp @kind object;
  #L1ee5a0.  call `<init>`(v12, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ee5a6.  throw v12;
  #L1ee5a8.  v2:= 3I;
  #L1ee5aa.  v13[v3]:= v2;
  #L1ee5ae.  goto L1ee5bc;
  #L1ee5b0.  v2:= 4I;
  #L1ee5b2.  v13[v3]:= v2;
  #L1ee5b6.  goto L1ee5bc;
  #L1ee5b8.  v13[v3]:= v9;
  #L1ee5bc.  v14[v3]:= v8 @kind object;
  #L1ee5c0.  v3:= v3 + 1;
  #L1ee5c4.  v12[v3]:= v1 @kind object;
  #L1ee5c8.  v4:= v4 + 1;
  #L1ee5cc.  v2:= v4;
  #L1ee5ce.  goto L1ee3b2;
  #L1ee5d2.  return v3;
  #L1ee5d4.  switch v5
                  | -1950496919 => goto L1ee560
                  | 2606829 => goto L1ee54a
                  | 38199441 => goto L1ee534
                  | else => goto L1ee532;
  #L1ee5f0.  switch v6
                  | 0 => goto L1ee5b8
                  | 1 => goto L1ee5b0
                  | 2 => goto L1ee5a8
                  | else => goto L1ee57a;
}
procedure `java.lang.String` `a`(`b3.n` v7 @kind this, `java.lang.String` v8 @kind object, `long` v9 , `int` v11 , `long` v12 ) @signature `Lb3/n;.a:(Ljava/lang/String;JIJ)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1ee614.  v0:= new `java.lang.StringBuilder`;
  #L1ee618.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ee61e.  v1:= 0I;
  #L1ee620.  v2:= 0I;
  #L1ee622.  v3:= v7.`b3.n.d` @type ^`int`;
  #L1ee626.  if v2 >= v3 then goto L1ee6ea;
  #L1ee62a.  v3:= v7.`b3.n.a` @type ^`java.lang.String`[] @kind object;
  #L1ee62e.  v3:= v3[v2] @kind object;
  #L1ee632.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee638.  v3:= v7.`b3.n.b` @type ^`int`[] @kind object;
  #L1ee63c.  v4:= v3[v2];
  #L1ee640.  v5:= 1I;
  #L1ee642.  if v4 != v5 then goto L1ee64e;
  #L1ee646.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee64c.  goto L1ee6e4;
  #L1ee64e.  v4:= v3[v2];
  #L1ee652.  v6:= 2I;
  #L1ee654.  if v4 != v6 then goto L1ee684;
  #L1ee658.  v3:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1ee65c.  v4:= v7.`b3.n.c` @type ^`java.lang.String`[] @kind object;
  #L1ee660.  v4:= v4[v2] @kind object;
  #L1ee664.  v5:= new `java.lang.Object`[v5];
  #L1ee668.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1ee66e.  v6:= temp @kind object;
  #L1ee670.  v5[v1]:= v6 @kind object;
  #L1ee674.  call temp:= `format`(v3, v4, v5) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ee67a.  v3:= temp @kind object;
  #L1ee67c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee682.  goto L1ee6e4;
  #L1ee684.  v4:= v3[v2];
  #L1ee688.  v6:= 3I;
  #L1ee68a.  if v4 != v6 then goto L1ee6b4;
  #L1ee68e.  v3:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1ee692.  v4:= v7.`b3.n.c` @type ^`java.lang.String`[] @kind object;
  #L1ee696.  v4:= v4[v2] @kind object;
  #L1ee69a.  v5:= new `java.lang.Object`[v5];
  #L1ee69e.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1ee6a4.  v6:= temp @kind object;
  #L1ee6a6.  v5[v1]:= v6 @kind object;
  #L1ee6aa.  call temp:= `format`(v3, v4, v5) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ee6b0.  v3:= temp @kind object;
  #L1ee6b2.  goto L1ee67c;
  #L1ee6b4.  v3:= v3[v2];
  #L1ee6b8.  v4:= 4I;
  #L1ee6ba.  if v3 != v4 then goto L1ee6e4;
  #L1ee6be.  v3:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1ee6c2.  v4:= v7.`b3.n.c` @type ^`java.lang.String`[] @kind object;
  #L1ee6c6.  v4:= v4[v2] @kind object;
  #L1ee6ca.  v5:= new `java.lang.Object`[v5];
  #L1ee6ce.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1ee6d4.  v6:= temp @kind object;
  #L1ee6d6.  v5[v1]:= v6 @kind object;
  #L1ee6da.  call temp:= `format`(v3, v4, v5) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ee6e0.  v3:= temp @kind object;
  #L1ee6e2.  goto L1ee67c;
  #L1ee6e4.  v2:= v2 + 1;
  #L1ee6e8.  goto L1ee622;
  #L1ee6ea.  v8:= v7.`b3.n.a` @type ^`java.lang.String`[] @kind object;
  #L1ee6ee.  v8:= v8[v3] @kind object;
  #L1ee6f2.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee6f8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ee6fe.  v8:= temp @kind object;
  #L1ee700.  return v8 @kind object;
}
