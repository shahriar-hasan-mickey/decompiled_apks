record `o4.k0` @kind class @AccessFlag FINAL extends `o4.l0` @kind class {
  `int` `o4.k0.q` @AccessFlag FINAL_TRANSIENT;
  `int` `o4.k0.r` @AccessFlag FINAL_TRANSIENT;
  `o4.l0` `o4.k0.s` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`o4.k0` v0 @kind this, `o4.l0` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lo4/k0;.<init>:(Lo4/l0;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3fc128.  v0.`o4.k0.s` @type ^`o4.l0` := v1 @kind object;
  #L3fc12c.  call `<init>`(v0) @signature `Lo4/l0;.<init>:()V` @kind direct;
  #L3fc132.  v0.`o4.k0.q` @type ^`int` := v2;
  #L3fc136.  v0.`o4.k0.r` @type ^`int` := v3;
  #L3fc13a.  return @kind void;
}
procedure `int` `f`(`o4.k0` v2 @kind this) @signature `Lo4/k0;.f:()I` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L3fc038.  v0:= v2.`o4.k0.s` @type ^`o4.l0` @kind object;
  #L3fc03c.  call temp:= `h`(v0) @signature `Lo4/i0;.h:()I` @kind virtual;
  #L3fc042.  v0:= temp;
  #L3fc044.  v1:= v2.`o4.k0.q` @type ^`int`;
  #L3fc048.  v0:= v0 + v1 @kind int;
  #L3fc04a.  v1:= v2.`o4.k0.r` @type ^`int`;
  #L3fc04e.  v0:= v0 + v1 @kind int;
  #L3fc050.  return v0;
}
procedure `java.lang.Object` `get`(`o4.k0` v2 @kind this, `int` v3 ) @signature `Lo4/k0;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fc088.  v0:= v2.`o4.k0.r` @type ^`int`;
  #L3fc08c.  v1:= "index" @kind object;
  #L3fc090.  call temp:= `a`(v3, v0, v1) @signature `Lo4/f0;.a:(IILjava/lang/String;)I` @kind static;
  #L3fc096.  v0:= v2.`o4.k0.s` @type ^`o4.l0` @kind object;
  #L3fc09a.  v1:= v2.`o4.k0.q` @type ^`int`;
  #L3fc09e.  v3:= v3 + v1 @kind int;
  #L3fc0a0.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3fc0a6.  v3:= temp @kind object;
  #L3fc0a8.  return v3 @kind object;
}
procedure `int` `h`(`o4.k0` v2 @kind this) @signature `Lo4/k0;.h:()I` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L3fc064.  v0:= v2.`o4.k0.s` @type ^`o4.l0` @kind object;
  #L3fc068.  call temp:= `h`(v0) @signature `Lo4/i0;.h:()I` @kind virtual;
  #L3fc06e.  v0:= temp;
  #L3fc070.  v1:= v2.`o4.k0.q` @type ^`int`;
  #L3fc074.  v0:= v0 + v1 @kind int;
  #L3fc076.  return v0;
}
procedure `java.lang.Object`[] `l`(`o4.k0` v1 @kind this) @signature `Lo4/k0;.l:()[Ljava/lang/Object;` @AccessFlag FINAL {
    temp;
    v0;

  #L3fc0bc.  v0:= v1.`o4.k0.s` @type ^`o4.l0` @kind object;
  #L3fc0c0.  call temp:= `l`(v0) @signature `Lo4/i0;.l:()[Ljava/lang/Object;` @kind virtual;
  #L3fc0c6.  v0:= temp @kind object;
  #L3fc0c8.  return v0 @kind object;
}
procedure `o4.l0` `n`(`o4.k0` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lo4/k0;.n:(II)Lo4/l0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fc0f8.  v0:= v2.`o4.k0.r` @type ^`int`;
  #L3fc0fc.  call `c`(v3, v4, v0) @signature `Lo4/f0;.c:(III)V` @kind static;
  #L3fc102.  v0:= v2.`o4.k0.s` @type ^`o4.l0` @kind object;
  #L3fc106.  v1:= v2.`o4.k0.q` @type ^`int`;
  #L3fc10a.  v3:= v3 + v1 @kind int;
  #L3fc10c.  v4:= v4 + v1 @kind int;
  #L3fc10e.  call temp:= `n`(v0, v3, v4) @signature `Lo4/l0;.n:(II)Lo4/l0;` @kind virtual;
  #L3fc114.  v3:= temp @kind object;
  #L3fc116.  return v3 @kind object;
}
procedure `int` `size`(`o4.k0` v1 @kind this) @signature `Lo4/k0;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fc020.  v0:= v1.`o4.k0.r` @type ^`int`;
  #L3fc024.  return v0;
}
procedure `java.util.List` `subList`(`o4.k0` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lo4/k0;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L3fc0dc.  call temp:= `n`(v0, v1, v2) @signature `Lo4/l0;.n:(II)Lo4/l0;` @kind virtual;
  #L3fc0e2.  v1:= temp @kind object;
  #L3fc0e4.  return v1 @kind object;
}
