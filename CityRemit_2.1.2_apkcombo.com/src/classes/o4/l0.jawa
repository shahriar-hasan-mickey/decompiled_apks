record `o4.l0` @kind class @AccessFlag PUBLIC_ABSTRACT extends `o4.i0` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface {
}
global `o4.p0` `@@o4.l0.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lo4/l0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3fc49c.  v0:= new `o4.j0`;
  #L3fc4a0.  v1:= `@@o4.m0.s` @type ^`o4.l0` @kind object;
  #L3fc4a4.  v2:= 0I;
  #L3fc4a6.  call `<init>`(v0, v1, v2) @signature `Lo4/j0;.<init>:(Lo4/l0;I)V` @kind direct;
  #L3fc4ac.  `@@o4.l0.p` @type ^`o4.p0` := v0 @kind object;
  #L3fc4b0.  return @kind void;
}
procedure `void` `<init>`(`o4.l0` v0 @kind this) @signature `Lo4/l0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3fc4c4.  call `<init>`(v0) @signature `Lo4/i0;.<init>:()V` @kind direct;
  #L3fc4ca.  return @kind void;
}
procedure `o4.l0` `p`() @signature `Lo4/l0;.p:()Lo4/l0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fc444.  v0:= `@@o4.m0.s` @type ^`o4.l0` @kind object;
  #L3fc448.  return v0 @kind object;
}
procedure `void` `add`(`o4.l0` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lo4/l0;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fc4dc.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3fc4e0.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3fc4e6.  throw v1;
}
procedure `boolean` `addAll`(`o4.l0` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Lo4/l0;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fc14c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3fc150.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3fc156.  throw v1;
}
procedure `int` `b`(`o4.l0` v2 @kind this, `java.lang.Object`[] v3 @kind object, `int` v4 ) @signature `Lo4/l0;.b:([Ljava/lang/Object;I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3fc324.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L3fc32a.  v4:= temp;
  #L3fc32c.  v0:= 0I;
  #L3fc32e.  if v0 >= v4 then goto L3fc344;
  #L3fc332.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3fc338.  v1:= temp @kind object;
  #L3fc33a.  v3[v0]:= v1 @kind object;
  #L3fc33e.  v0:= v0 + 1;
  #L3fc342.  goto L3fc32e;
  #L3fc344.  return v4;
}
procedure `boolean` `contains`(`o4.l0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lo4/l0;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fc168.  call temp:= `indexOf`(v0, v1) @signature `Lo4/l0;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L3fc16e.  v1:= temp;
  #L3fc170.  if v1 < 0 then goto L3fc178;
  #L3fc174.  v1:= 1I;
  #L3fc176.  return v1;
  #L3fc178.  v1:= 0I;
  #L3fc17a.  return v1;
}
procedure `boolean` `equals`(`o4.l0` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lo4/l0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fc18c.  v0:= 1I;
  #L3fc18e.  v1:= 0I;
  #L3fc190.  if v7 != v6 then goto L3fc196;
  #L3fc194.  goto L3fc242;
  #L3fc196.  v2:= instanceof @variable v7 @type ^`java.util.List` @kind boolean;
  #L3fc19a.  if v2 != 0 then goto L3fc1a2;
  #L3fc19e.  v0:= 0I;
  #L3fc1a0.  goto L3fc242;
  #L3fc1a2.  v7:= (`java.util.List`) v7 @kind object;
  #L3fc1a6.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3fc1ac.  v2:= temp;
  #L3fc1ae.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3fc1b4.  v3:= temp;
  #L3fc1b6.  if v2 == v3 then goto L3fc1bc;
  #L3fc1ba.  goto L3fc19e;
  #L3fc1bc.  v3:= instanceof @variable v7 @type ^`java.util.RandomAccess` @kind boolean;
  #L3fc1c0.  if v3 == 0 then goto L3fc1ee;
  #L3fc1c4.  v3:= 0I;
  #L3fc1c6.  if v3 >= v2 then goto L3fc242;
  #L3fc1ca.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3fc1d0.  v4:= temp @kind object;
  #L3fc1d2.  call temp:= `get`(v7, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3fc1d8.  v5:= temp @kind object;
  #L3fc1da.  call temp:= `a`(v4, v5) @signature `Lo4/e0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3fc1e0.  v4:= temp;
  #L3fc1e2.  if v4 != 0 then goto L3fc1e8;
  #L3fc1e6.  goto L3fc19e;
  #L3fc1e8.  v3:= v3 + 1;
  #L3fc1ec.  goto L3fc1c6;
  #L3fc1ee.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3fc1f4.  v2:= temp @kind object;
  #L3fc1f6.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3fc1fc.  v7:= temp @kind object;
  #L3fc1fe.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3fc204.  v3:= temp;
  #L3fc206.  if v3 == 0 then goto L3fc236;
  #L3fc20a.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3fc210.  v3:= temp;
  #L3fc212.  if v3 != 0 then goto L3fc218;
  #L3fc216.  goto L3fc19e;
  #L3fc218.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3fc21e.  v3:= temp @kind object;
  #L3fc220.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3fc226.  v4:= temp @kind object;
  #L3fc228.  call temp:= `a`(v3, v4) @signature `Lo4/e0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3fc22e.  v3:= temp;
  #L3fc230.  if v3 != 0 then goto L3fc1fe;
  #L3fc234.  goto L3fc19e;
  #L3fc236.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3fc23c.  v7:= temp;
  #L3fc23e.  if v7 != 0 then goto L3fc19e;
  #L3fc242.  return v0;
}
procedure `int` `hashCode`(`o4.l0` v4 @kind this) @signature `Lo4/l0;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fc254.  call temp:= `size`(v4) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L3fc25a.  v0:= temp;
  #L3fc25c.  v1:= 1I;
  #L3fc25e.  v2:= 0I;
  #L3fc260.  if v2 >= v0 then goto L3fc280;
  #L3fc264.  v1:= v1 * 31;
  #L3fc268.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3fc26e.  v3:= temp @kind object;
  #L3fc270.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3fc276.  v3:= temp;
  #L3fc278.  v1:= v1 + v3 @kind int;
  #L3fc27a.  v2:= v2 + 1;
  #L3fc27e.  goto L3fc260;
  #L3fc280.  return v1;
}
procedure `int` `indexOf`(`o4.l0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lo4/l0;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fc294.  v0:= -1I;
  #L3fc296.  if v5 != 0 then goto L3fc29c;
  #L3fc29a.  return v0;
  #L3fc29c.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3fc2a2.  v1:= temp;
  #L3fc2a4.  v2:= 0I;
  #L3fc2a6.  if v2 >= v1 then goto L3fc2c8;
  #L3fc2aa.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3fc2b0.  v3:= temp @kind object;
  #L3fc2b2.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fc2b8.  v3:= temp;
  #L3fc2ba.  if v3 == 0 then goto L3fc2c2;
  #L3fc2be.  v0:= v2;
  #L3fc2c0.  goto L3fc2c8;
  #L3fc2c2.  v2:= v2 + 1;
  #L3fc2c6.  goto L3fc2a6;
  #L3fc2c8.  return v0;
}
procedure `java.util.Iterator` `iterator`(`o4.l0` v1 @kind this) @signature `Lo4/l0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L3fc390.  v0:= 0I;
  #L3fc392.  call temp:= `u`(v1, v0) @signature `Lo4/l0;.u:(I)Lo4/p0;` @kind virtual;
  #L3fc398.  v0:= temp @kind object;
  #L3fc39a.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`o4.l0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lo4/l0;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fc2dc.  v0:= -1I;
  #L3fc2de.  if v4 != 0 then goto L3fc2e4;
  #L3fc2e2.  return v0;
  #L3fc2e4.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3fc2ea.  v1:= temp;
  #L3fc2ec.  v1:= v1 + v0 @kind int;
  #L3fc2ee.  if v1 < 0 then goto L3fc310;
  #L3fc2f2.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3fc2f8.  v2:= temp @kind object;
  #L3fc2fa.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fc300.  v2:= temp;
  #L3fc302.  if v2 == 0 then goto L3fc30a;
  #L3fc306.  v0:= v1;
  #L3fc308.  goto L3fc310;
  #L3fc30a.  v1:= v1 + -1;
  #L3fc30e.  goto L3fc2ee;
  #L3fc310.  return v0;
}
procedure `java.util.ListIterator` `listIterator`(`o4.l0` v1 @kind this) @signature `Lo4/l0;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L3fc3c8.  v0:= 0I;
  #L3fc3ca.  call temp:= `u`(v1, v0) @signature `Lo4/l0;.u:(I)Lo4/p0;` @kind virtual;
  #L3fc3d0.  v0:= temp @kind object;
  #L3fc3d2.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`o4.l0` v0 @kind this, `int` v1 ) @signature `Lo4/l0;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L3fc3e4.  call temp:= `u`(v0, v1) @signature `Lo4/l0;.u:(I)Lo4/p0;` @kind virtual;
  #L3fc3ea.  v1:= temp @kind object;
  #L3fc3ec.  return v1 @kind object;
}
procedure `o4.l0` `n`(`o4.l0` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lo4/l0;.n:(II)Lo4/l0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc400.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L3fc406.  v0:= temp;
  #L3fc408.  call `c`(v2, v3, v0) @signature `Lo4/f0;.c:(III)V` @kind static;
  #L3fc40e.  v3:= v3 - v2 @kind int;
  #L3fc410.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L3fc416.  v0:= temp;
  #L3fc418.  if v3 != v0 then goto L3fc41e;
  #L3fc41c.  return v1 @kind object;
  #L3fc41e.  if v3 != 0 then goto L3fc428;
  #L3fc422.  v2:= `@@o4.m0.s` @type ^`o4.l0` @kind object;
  #L3fc426.  return v2 @kind object;
  #L3fc428.  v0:= new `o4.k0`;
  #L3fc42c.  call `<init>`(v0, v1, v2, v3) @signature `Lo4/k0;.<init>:(Lo4/l0;II)V` @kind direct;
  #L3fc432.  return v0 @kind object;
}
procedure `java.lang.Object` `remove`(`o4.l0` v0 @kind this, `int` v1 ) @signature `Lo4/l0;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fc358.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3fc35c.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3fc362.  throw v1;
}
procedure `java.lang.Object` `set`(`o4.l0` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lo4/l0;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3fc374.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3fc378.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3fc37e.  throw v1;
}
procedure `java.util.List` `subList`(`o4.l0` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lo4/l0;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3fc3ac.  call temp:= `n`(v0, v1, v2) @signature `Lo4/l0;.n:(II)Lo4/l0;` @kind virtual;
  #L3fc3b2.  v1:= temp @kind object;
  #L3fc3b4.  return v1 @kind object;
}
procedure `o4.p0` `u`(`o4.l0` v2 @kind this, `int` v3 ) @signature `Lo4/l0;.u:(I)Lo4/p0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fc45c.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L3fc462.  v0:= temp;
  #L3fc464.  v1:= "index" @kind object;
  #L3fc468.  call temp:= `b`(v3, v0, v1) @signature `Lo4/f0;.b:(IILjava/lang/String;)I` @kind static;
  #L3fc46e.  call temp:= `isEmpty`(v2) @signature `Ljava/util/AbstractCollection;.isEmpty:()Z` @kind virtual;
  #L3fc474.  v0:= temp;
  #L3fc476.  if v0 == 0 then goto L3fc480;
  #L3fc47a.  v3:= `@@o4.l0.p` @type ^`o4.p0` @kind object;
  #L3fc47e.  return v3 @kind object;
  #L3fc480.  v0:= new `o4.j0`;
  #L3fc484.  call `<init>`(v0, v2, v3) @signature `Lo4/j0;.<init>:(Lo4/l0;I)V` @kind direct;
  #L3fc48a.  return v0 @kind object;
}
