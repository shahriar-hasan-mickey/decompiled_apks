record `kotlinx.coroutines.scheduling.b` @kind class @AccessFlag PUBLIC_FINAL extends `ac.i1` @kind class, `java.util.concurrent.Executor` @kind interface {
}
global `kotlinx.coroutines.scheduling.b` `@@kotlinx.coroutines.scheduling.b.q` @AccessFlag PUBLIC_STATIC_FINAL;
global `ac.d0` `@@kotlinx.coroutines.scheduling.b.r` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3bda80.  v0:= new `kotlinx.coroutines.scheduling.b`;
  #L3bda84.  call `<init>`(v0) @signature `Lkotlinx/coroutines/scheduling/b;.<init>:()V` @kind direct;
  #L3bda8a.  `@@kotlinx.coroutines.scheduling.b.q` @type ^`kotlinx.coroutines.scheduling.b` := v0 @kind object;
  #L3bda8e.  v0:= `@@kotlinx.coroutines.scheduling.m.q` @type ^`kotlinx.coroutines.scheduling.m` @kind object;
  #L3bda92.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/g0;.a:()I` @kind static;
  #L3bda98.  v1:= temp;
  #L3bda9a.  v2:= 64I;
  #L3bda9e.  call temp:= `a`(v2, v1) @signature `Lwb/d;.a:(II)I` @kind static;
  #L3bdaa4.  v4:= temp;
  #L3bdaa6.  v3:= "kotlinx.coroutines.io.parallelism" @kind object;
  #L3bdaaa.  v5:= 0I;
  #L3bdaac.  v6:= 0I;
  #L3bdaae.  v7:= 12I;
  #L3bdab2.  v8:= 0I;
  #L3bdab4.  call temp:= `f`(v3, v4, v5, v6, v7, v8) @signature `Lkotlinx/coroutines/internal/g0;.f:(Ljava/lang/String;IIIILjava/lang/Object;)I` @kind static;
  #L3bdaba.  v1:= temp;
  #L3bdabc.  call temp:= `c0`(v0, v1) @signature `Lac/d0;.c0:(I)Lac/d0;` @kind virtual;
  #L3bdac2.  v0:= temp @kind object;
  #L3bdac4.  `@@kotlinx.coroutines.scheduling.b.r` @type ^`ac.d0` := v0 @kind object;
  #L3bdac8.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.b` v0 @kind this) @signature `Lkotlinx/coroutines/scheduling/b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3bdadc.  call `<init>`(v0) @signature `Lac/i1;.<init>:()V` @kind direct;
  #L3bdae2.  return @kind void;
}
procedure `void` `a0`(`kotlinx.coroutines.scheduling.b` v1 @kind this, `mb.g` v2 @kind object, `java.lang.Runnable` v3 @kind object) @signature `Lkotlinx/coroutines/scheduling/b;.a0:(Lmb/g;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdb1c.  v0:= `@@kotlinx.coroutines.scheduling.b.r` @type ^`ac.d0` @kind object;
  #L3bdb20.  call `a0`(v0, v2, v3) @signature `Lac/d0;.a0:(Lmb/g;Ljava/lang/Runnable;)V` @kind virtual;
  #L3bdb26.  return @kind void;
}
procedure `void` `close`(`kotlinx.coroutines.scheduling.b` v2 @kind this) @signature `Lkotlinx/coroutines/scheduling/b;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bdaf4.  v0:= new `java.lang.IllegalStateException`;
  #L3bdaf8.  v1:= "Cannot be invoked on Dispatchers.IO" @kind object;
  #L3bdafc.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bdb02.  v1:= temp @kind object;
  #L3bdb04.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bdb0a.  throw v0;
}
procedure `void` `execute`(`kotlinx.coroutines.scheduling.b` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/scheduling/b;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdb38.  v0:= `@@mb.h.o` @type ^`mb.h` @kind object;
  #L3bdb3c.  call `a0`(v1, v0, v2) @signature `Lkotlinx/coroutines/scheduling/b;.a0:(Lmb/g;Ljava/lang/Runnable;)V` @kind virtual;
  #L3bdb42.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.scheduling.b` v1 @kind this) @signature `Lkotlinx/coroutines/scheduling/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bda68.  v0:= "Dispatchers.IO" @kind object;
  #L3bda6c.  return v0 @kind object;
}
