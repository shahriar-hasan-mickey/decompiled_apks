record `kotlinx.coroutines.scheduling.m` @kind class @AccessFlag FINAL extends `ac.d0` @kind class {
}
global `kotlinx.coroutines.scheduling.m` `@@kotlinx.coroutines.scheduling.m.q` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3bdf54.  v0:= new `kotlinx.coroutines.scheduling.m`;
  #L3bdf58.  call `<init>`(v0) @signature `Lkotlinx/coroutines/scheduling/m;.<init>:()V` @kind direct;
  #L3bdf5e.  `@@kotlinx.coroutines.scheduling.m.q` @type ^`kotlinx.coroutines.scheduling.m` := v0 @kind object;
  #L3bdf62.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.m` v0 @kind this) @signature `Lkotlinx/coroutines/scheduling/m;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3bdf74.  call `<init>`(v0) @signature `Lac/d0;.<init>:()V` @kind direct;
  #L3bdf7a.  return @kind void;
}
procedure `void` `a0`(`kotlinx.coroutines.scheduling.m` v2 @kind this, `mb.g` v3 @kind object, `java.lang.Runnable` v4 @kind object) @signature `Lkotlinx/coroutines/scheduling/m;.a0:(Lmb/g;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bdf8c.  v3:= `@@kotlinx.coroutines.scheduling.c.v` @type ^`kotlinx.coroutines.scheduling.c` @kind object;
  #L3bdf90.  v0:= `@@kotlinx.coroutines.scheduling.l.g` @type ^`kotlinx.coroutines.scheduling.i` @kind object;
  #L3bdf94.  v1:= 0I;
  #L3bdf96.  call `e0`(v3, v4, v0, v1) @signature `Lkotlinx/coroutines/scheduling/f;.e0:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/i;Z)V` @kind virtual;
  #L3bdf9c.  return @kind void;
}
