record `kotlinx.coroutines.scheduling.a` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.Executor` @kind interface, `java.io.Closeable` @kind interface {
  `int` `kotlinx.coroutines.scheduling.a._isTerminated` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `long` `kotlinx.coroutines.scheduling.a.controlState` @AccessFlag VOLATILE_SYNTHETIC;
  `int` `kotlinx.coroutines.scheduling.a.o` @AccessFlag PUBLIC_FINAL;
  `int` `kotlinx.coroutines.scheduling.a.p` @AccessFlag PUBLIC_FINAL;
  `long` `kotlinx.coroutines.scheduling.a.parkedWorkersStack` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `long` `kotlinx.coroutines.scheduling.a.q` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `kotlinx.coroutines.scheduling.a.r` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.scheduling.d` `kotlinx.coroutines.scheduling.a.s` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.scheduling.d` `kotlinx.coroutines.scheduling.a.t` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.internal.c0` `kotlinx.coroutines.scheduling.a.u` @AccessFlag PUBLIC_FINAL;
}
global `java.util.concurrent.atomic.AtomicLongFieldUpdater` `@@kotlinx.coroutines.scheduling.a.v` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicLongFieldUpdater` `@@kotlinx.coroutines.scheduling.a.w` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.scheduling.a.x` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlinx.coroutines.internal.f0` `@@kotlinx.coroutines.scheduling.a.y` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3bd464.  v0:= new `kotlinx.coroutines.scheduling.a$a`;
  #L3bd468.  v1:= 0I;
  #L3bd46a.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/scheduling/a$a;.<init>:(Lkotlin/jvm/internal/g;)V` @kind direct;
  #L3bd470.  v0:= new `kotlinx.coroutines.internal.f0`;
  #L3bd474.  v1:= "NOT_IN_STACK" @kind object;
  #L3bd478.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/f0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bd47e.  `@@kotlinx.coroutines.scheduling.a.y` @type ^`kotlinx.coroutines.internal.f0` := v0 @kind object;
  #L3bd482.  v0:= constclass @type ^`kotlinx.coroutines.scheduling.a` @kind object;
  #L3bd486.  v1:= "parkedWorkersStack" @kind object;
  #L3bd48a.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;` @kind static;
  #L3bd490.  v0:= temp @kind object;
  #L3bd492.  `@@kotlinx.coroutines.scheduling.a.v` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` := v0 @kind object;
  #L3bd496.  v0:= constclass @type ^`kotlinx.coroutines.scheduling.a` @kind object;
  #L3bd49a.  v1:= "controlState" @kind object;
  #L3bd49e.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;` @kind static;
  #L3bd4a4.  v0:= temp @kind object;
  #L3bd4a6.  `@@kotlinx.coroutines.scheduling.a.w` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` := v0 @kind object;
  #L3bd4aa.  v0:= constclass @type ^`kotlinx.coroutines.scheduling.a` @kind object;
  #L3bd4ae.  v1:= "_isTerminated" @kind object;
  #L3bd4b2.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L3bd4b8.  v0:= temp @kind object;
  #L3bd4ba.  `@@kotlinx.coroutines.scheduling.a.x` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L3bd4be.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.a` v3 @kind this, `int` v4 , `int` v5 , `long` v6 , `java.lang.String` v8 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.<init>:(IIJLjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3bd4d0.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3bd4d6.  v3.`kotlinx.coroutines.scheduling.a.o` @type ^`int` := v4;
  #L3bd4da.  v3.`kotlinx.coroutines.scheduling.a.p` @type ^`int` := v5;
  #L3bd4de.  v3.`kotlinx.coroutines.scheduling.a.q` @type ^`long` := v6 @kind wide;
  #L3bd4e2.  v3.`kotlinx.coroutines.scheduling.a.r` @type ^`java.lang.String` := v8 @kind object;
  #L3bd4e6.  v8:= 0I;
  #L3bd4e8.  v0:= 1I;
  #L3bd4ea.  if v4 < v0 then goto L3bd4f2;
  #L3bd4ee.  v1:= 1I;
  #L3bd4f0.  goto L3bd4f4;
  #L3bd4f2.  v1:= 0I;
  #L3bd4f4.  if v1 == 0 then goto L3bd634;
  #L3bd4f8.  if v5 < v4 then goto L3bd500;
  #L3bd4fc.  v1:= 1I;
  #L3bd4fe.  goto L3bd502;
  #L3bd500.  v1:= 0I;
  #L3bd502.  v2:= "Max pool size " @kind object;
  #L3bd506.  if v1 == 0 then goto L3bd5f2;
  #L3bd50a.  v1:= 2097150I;
  #L3bd510.  if v5 > v1 then goto L3bd518;
  #L3bd514.  v1:= 1I;
  #L3bd516.  goto L3bd51a;
  #L3bd518.  v1:= 0I;
  #L3bd51a.  if v1 == 0 then goto L3bd5b6;
  #L3bd51e.  v1:= 0L;
  #L3bd522.  v5:= lcmp(v6, v1);
  #L3bd526.  if v5 <= 0 then goto L3bd52c;
  #L3bd52a.  goto L3bd52e;
  #L3bd52c.  v0:= 0I;
  #L3bd52e.  if v0 == 0 then goto L3bd576;
  #L3bd532.  v5:= new `kotlinx.coroutines.scheduling.d`;
  #L3bd536.  call `<init>`(v5) @signature `Lkotlinx/coroutines/scheduling/d;.<init>:()V` @kind direct;
  #L3bd53c.  v3.`kotlinx.coroutines.scheduling.a.s` @type ^`kotlinx.coroutines.scheduling.d` := v5 @kind object;
  #L3bd540.  v5:= new `kotlinx.coroutines.scheduling.d`;
  #L3bd544.  call `<init>`(v5) @signature `Lkotlinx/coroutines/scheduling/d;.<init>:()V` @kind direct;
  #L3bd54a.  v3.`kotlinx.coroutines.scheduling.a.t` @type ^`kotlinx.coroutines.scheduling.d` := v5 @kind object;
  #L3bd54e.  v3.`kotlinx.coroutines.scheduling.a.parkedWorkersStack` @type ^`long` := v1 @kind wide;
  #L3bd552.  v5:= new `kotlinx.coroutines.internal.c0`;
  #L3bd556.  v6:= v4 + 1;
  #L3bd55a.  call `<init>`(v5, v6) @signature `Lkotlinx/coroutines/internal/c0;.<init>:(I)V` @kind direct;
  #L3bd560.  v3.`kotlinx.coroutines.scheduling.a.u` @type ^`kotlinx.coroutines.internal.c0` := v5 @kind object;
  #L3bd564.  v4:= (`long`) v4 @kind i2l;
  #L3bd566.  v6:= 42I;
  #L3bd56a.  v4:= v4 ^< v6 @kind long;
  #L3bd56c.  v3.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` := v4 @kind wide;
  #L3bd570.  v3.`kotlinx.coroutines.scheduling.a._isTerminated` @type ^`int` := v8;
  #L3bd574.  return @kind void;
  #L3bd576.  v4:= new `java.lang.StringBuilder`;
  #L3bd57a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bd580.  v5:= "Idle worker keep alive time " @kind object;
  #L3bd584.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd58a.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd590.  v5:= " must be positive" @kind object;
  #L3bd594.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd59a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bd5a0.  v4:= temp @kind object;
  #L3bd5a2.  v5:= new `java.lang.IllegalArgumentException`;
  #L3bd5a6.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bd5ac.  v4:= temp @kind object;
  #L3bd5ae.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bd5b4.  throw v5;
  #L3bd5b6.  v4:= new `java.lang.StringBuilder`;
  #L3bd5ba.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bd5c0.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd5c6.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd5cc.  v5:= " should not exceed maximal supported number of threads 2097150" @kind object;
  #L3bd5d0.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd5d6.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bd5dc.  v4:= temp @kind object;
  #L3bd5de.  v5:= new `java.lang.IllegalArgumentException`;
  #L3bd5e2.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bd5e8.  v4:= temp @kind object;
  #L3bd5ea.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bd5f0.  throw v5;
  #L3bd5f2.  v6:= new `java.lang.StringBuilder`;
  #L3bd5f6.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bd5fc.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd602.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd608.  v5:= " should be greater than or equals to core pool size " @kind object;
  #L3bd60c.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd612.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd618.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bd61e.  v4:= temp @kind object;
  #L3bd620.  v5:= new `java.lang.IllegalArgumentException`;
  #L3bd624.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bd62a.  v4:= temp @kind object;
  #L3bd62c.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bd632.  throw v5;
  #L3bd634.  v5:= new `java.lang.StringBuilder`;
  #L3bd638.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bd63e.  v6:= "Core pool size " @kind object;
  #L3bd642.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd648.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd64e.  v4:= " should be at least 1" @kind object;
  #L3bd652.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd658.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bd65e.  v4:= temp @kind object;
  #L3bd660.  v5:= new `java.lang.IllegalArgumentException`;
  #L3bd664.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bd66a.  v4:= temp @kind object;
  #L3bd66c.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bd672.  throw v5;
}
procedure `void` `J`(`kotlinx.coroutines.scheduling.a` v3 @kind this, `boolean` v4 ) @signature `Lkotlinx/coroutines/scheduling/a;.J:(Z)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3bd9e0.  v0:= `@@kotlinx.coroutines.scheduling.a.w` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L3bd9e4.  v1:= 2097152L;
  #L3bd9ea.  call temp:= `addAndGet`(v0, v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.addAndGet:(Ljava/lang/Object;J)J` @kind virtual;
  #L3bd9f0.  v0:= temp @kind wide;
  #L3bd9f2.  if v4 == 0 then goto L3bd9f8;
  #L3bd9f6.  return @kind void;
  #L3bd9f8.  call temp:= `S`(v3) @signature `Lkotlinx/coroutines/scheduling/a;.S:()Z` @kind direct;
  #L3bd9fe.  v4:= temp;
  #L3bda00.  if v4 == 0 then goto L3bda06;
  #L3bda04.  return @kind void;
  #L3bda06.  call temp:= `N`(v3, v0) @signature `Lkotlinx/coroutines/scheduling/a;.N:(J)Z` @kind direct;
  #L3bda0c.  v4:= temp;
  #L3bda0e.  if v4 == 0 then goto L3bda14;
  #L3bda12.  return @kind void;
  #L3bda14.  call temp:= `S`(v3) @signature `Lkotlinx/coroutines/scheduling/a;.S:()Z` @kind direct;
  #L3bda1a.  return @kind void;
}
procedure `kotlinx.coroutines.scheduling.h` `M`(`kotlinx.coroutines.scheduling.a` v2 @kind this, `kotlinx.coroutines.scheduling.a$c` v3 @kind object, `kotlinx.coroutines.scheduling.h` v4 @kind object, `boolean` v5 ) @signature `Lkotlinx/coroutines/scheduling/a;.M:(Lkotlinx/coroutines/scheduling/a$c;Lkotlinx/coroutines/scheduling/h;Z)Lkotlinx/coroutines/scheduling/h;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L3bd40c.  if v3 != 0 then goto L3bd412;
  #L3bd410.  return v4 @kind object;
  #L3bd412.  v0:= v3.`kotlinx.coroutines.scheduling.a$c.p` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L3bd416.  v1:= `@@kotlinx.coroutines.scheduling.a$d.s` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L3bd41a.  if v0 != v1 then goto L3bd420;
  #L3bd41e.  return v4 @kind object;
  #L3bd420.  v0:= v4.`kotlinx.coroutines.scheduling.h.p` @type ^`kotlinx.coroutines.scheduling.i` @kind object;
  #L3bd424.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/scheduling/i;.b:()I` @kind interface;
  #L3bd42a.  v0:= temp;
  #L3bd42c.  if v0 != 0 then goto L3bd43e;
  #L3bd430.  v0:= v3.`kotlinx.coroutines.scheduling.a$c.p` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L3bd434.  v1:= `@@kotlinx.coroutines.scheduling.a$d.p` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L3bd438.  if v0 != v1 then goto L3bd43e;
  #L3bd43c.  return v4 @kind object;
  #L3bd43e.  v0:= 1I;
  #L3bd440.  v3.`kotlinx.coroutines.scheduling.a$c.t` @type ^`boolean` := v0 @kind boolean;
  #L3bd444.  v3:= v3.`kotlinx.coroutines.scheduling.a$c.o` @type ^`kotlinx.coroutines.scheduling.n` @kind object;
  #L3bd448.  call temp:= `a`(v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/n;.a:(Lkotlinx/coroutines/scheduling/h;Z)Lkotlinx/coroutines/scheduling/h;` @kind virtual;
  #L3bd44e.  v3:= temp @kind object;
  #L3bd450.  return v3 @kind object;
}
procedure `boolean` `N`(`kotlinx.coroutines.scheduling.a` v4 @kind this, `long` v5 ) @signature `Lkotlinx/coroutines/scheduling/a;.N:(J)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bce84.  v0:= 2097151L;
  #L3bce8a.  v0:= v0 ^& v5 @kind long;
  #L3bce8c.  v1:= (`int`) v0 @kind l2i;
  #L3bce8e.  v2:= 4398044413952L;
  #L3bce98.  v5:= v5 ^& v2 @kind long;
  #L3bce9a.  v0:= 21I;
  #L3bce9e.  v5:= v5 ^> v0 @kind long;
  #L3bcea0.  v6:= (`int`) v5 @kind l2i;
  #L3bcea2.  v1:= v1 - v6 @kind int;
  #L3bcea4.  v5:= 0I;
  #L3bcea6.  call temp:= `a`(v1, v5) @signature `Lwb/d;.a:(II)I` @kind static;
  #L3bceac.  v6:= temp;
  #L3bceae.  v0:= v4.`kotlinx.coroutines.scheduling.a.o` @type ^`int`;
  #L3bceb2.  if v6 >= v0 then goto L3bced8;
  #L3bceb6.  call temp:= `c`(v4) @signature `Lkotlinx/coroutines/scheduling/a;.c:()I` @kind direct;
  #L3bcebc.  v6:= temp;
  #L3bcebe.  v0:= 1I;
  #L3bcec0.  if v6 != v0 then goto L3bced2;
  #L3bcec4.  v1:= v4.`kotlinx.coroutines.scheduling.a.o` @type ^`int`;
  #L3bcec8.  if v1 <= v0 then goto L3bced2;
  #L3bcecc.  call temp:= `c`(v4) @signature `Lkotlinx/coroutines/scheduling/a;.c:()I` @kind direct;
  #L3bced2.  if v6 <= 0 then goto L3bced8;
  #L3bced6.  return v0;
  #L3bced8.  return v5;
}
procedure `boolean` `O`(`kotlinx.coroutines.scheduling.a` v0 @kind object, `long` v1 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.O:(Lkotlinx/coroutines/scheduling/a;JILjava/lang/Object;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3bce5c.  v3:= v3 ^& 1;
  #L3bce60.  if v3 == 0 then goto L3bce68;
  #L3bce64.  v1:= v0.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` @kind wide;
  #L3bce68.  call temp:= `N`(v0, v1) @signature `Lkotlinx/coroutines/scheduling/a;.N:(J)Z` @kind direct;
  #L3bce6e.  v0:= temp;
  #L3bce70.  return v0;
}
procedure `boolean` `S`(`kotlinx.coroutines.scheduling.a` v4 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.S:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bceec.  call temp:= `s`(v4) @signature `Lkotlinx/coroutines/scheduling/a;.s:()Lkotlinx/coroutines/scheduling/a$c;` @kind direct;
  #L3bcef2.  v0:= temp @kind object;
  #L3bcef4.  v1:= 0I;
  #L3bcef6.  if v0 != 0 then goto L3bcefc;
  #L3bcefa.  return v1;
  #L3bcefc.  v2:= `@@kotlinx.coroutines.scheduling.a$c.v` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L3bcf00.  v3:= -1I;
  #L3bcf02.  call temp:= `compareAndSet`(v2, v0, v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L3bcf08.  v1:= temp;
  #L3bcf0a.  if v1 == 0 then goto L3bceec;
  #L3bcf0e.  call `unpark`(v0) @signature `Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V` @kind static;
  #L3bcf14.  v0:= 1I;
  #L3bcf16.  return v0;
}
procedure `boolean` `a`(`kotlinx.coroutines.scheduling.a` v2 @kind this, `kotlinx.coroutines.scheduling.h` v3 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.a:(Lkotlinx/coroutines/scheduling/h;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L3bcd64.  v0:= v3.`kotlinx.coroutines.scheduling.h.p` @type ^`kotlinx.coroutines.scheduling.i` @kind object;
  #L3bcd68.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/scheduling/i;.b:()I` @kind interface;
  #L3bcd6e.  v0:= temp;
  #L3bcd70.  v1:= 1I;
  #L3bcd72.  if v0 != v1 then goto L3bcd78;
  #L3bcd76.  goto L3bcd7a;
  #L3bcd78.  v1:= 0I;
  #L3bcd7a.  if v1 == 0 then goto L3bcd84;
  #L3bcd7e.  v0:= v2.`kotlinx.coroutines.scheduling.a.t` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L3bcd82.  goto L3bcd88;
  #L3bcd84.  v0:= v2.`kotlinx.coroutines.scheduling.a.s` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L3bcd88.  call temp:= `a`(v0, v3) @signature `Lkotlinx/coroutines/internal/s;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L3bcd8e.  v3:= temp;
  #L3bcd90.  return v3;
}
procedure `int` `c`(`kotlinx.coroutines.scheduling.a` v10 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.c:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3bcf28.  v0:= v10.`kotlinx.coroutines.scheduling.a.u` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L3bcf2c.  @monitorenter v0
  #L3bcf2e.  call temp:= `isTerminated`(v10) @signature `Lkotlinx/coroutines/scheduling/a;.isTerminated:()Z` @kind virtual;
  #L3bcf34.  v1:= temp;
  #L3bcf36.  if v1 == 0 then goto L3bcf40;
  #L3bcf3a.  v1:= -1I;
  #L3bcf3c.  @monitorexit v0
  #L3bcf3e.  return v1;
  #L3bcf40.  v1:= v10.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` @kind wide;
  #L3bcf44.  v3:= 2097151L;
  #L3bcf4a.  v5:= v1 ^& v3 @kind long;
  #L3bcf4e.  v6:= (`int`) v5 @kind l2i;
  #L3bcf50.  v7:= 4398044413952L;
  #L3bcf5a.  v1:= v1 ^& v7 @kind long;
  #L3bcf5c.  v5:= 21I;
  #L3bcf60.  v1:= v1 ^> v5 @kind long;
  #L3bcf62.  v2:= (`int`) v1 @kind l2i;
  #L3bcf64.  v1:= v6 - v2 @kind int;
  #L3bcf68.  v2:= 0I;
  #L3bcf6a.  call temp:= `a`(v1, v2) @signature `Lwb/d;.a:(II)I` @kind static;
  #L3bcf70.  v1:= temp;
  #L3bcf72.  v5:= v10.`kotlinx.coroutines.scheduling.a.o` @type ^`int`;
  #L3bcf76.  if v1 < v5 then goto L3bcf7e;
  #L3bcf7a.  @monitorexit v0
  #L3bcf7c.  return v2;
  #L3bcf7e.  v5:= v10.`kotlinx.coroutines.scheduling.a.p` @type ^`int`;
  #L3bcf82.  if v6 < v5 then goto L3bcf8a;
  #L3bcf86.  @monitorexit v0
  #L3bcf88.  return v2;
  #L3bcf8a.  v5:= v10.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` @kind wide;
  #L3bcf8e.  v5:= v5 ^& v3 @kind long;
  #L3bcf90.  v6:= (`int`) v5 @kind l2i;
  #L3bcf92.  v5:= 1I;
  #L3bcf94.  v6:= v6 + v5 @kind int;
  #L3bcf96.  if v6 <= 0 then goto L3bcfae;
  #L3bcf9a.  v7:= v10.`kotlinx.coroutines.scheduling.a.u` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L3bcf9e.  call temp:= `b`(v7, v6) @signature `Lkotlinx/coroutines/internal/c0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L3bcfa4.  v7:= temp @kind object;
  #L3bcfa6.  if v7 != 0 then goto L3bcfae;
  #L3bcfaa.  v7:= 1I;
  #L3bcfac.  goto L3bcfb0;
  #L3bcfae.  v7:= 0I;
  #L3bcfb0.  if v7 == 0 then goto L3bd004;
  #L3bcfb4.  v7:= new `kotlinx.coroutines.scheduling.a$c`;
  #L3bcfb8.  call `<init>`(v7, v10, v6) @signature `Lkotlinx/coroutines/scheduling/a$c;.<init>:(Lkotlinx/coroutines/scheduling/a;I)V` @kind direct;
  #L3bcfbe.  v8:= v10.`kotlinx.coroutines.scheduling.a.u` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L3bcfc2.  call `c`(v8, v6, v7) @signature `Lkotlinx/coroutines/internal/c0;.c:(ILjava/lang/Object;)V` @kind virtual;
  #L3bcfc8.  v8:= `@@kotlinx.coroutines.scheduling.a.w` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L3bcfcc.  call temp:= `incrementAndGet`(v8, v10) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.incrementAndGet:(Ljava/lang/Object;)J` @kind virtual;
  #L3bcfd2.  v8:= temp @kind wide;
  #L3bcfd4.  v3:= v3 ^& v8 @kind long;
  #L3bcfd6.  v4:= (`int`) v3 @kind l2i;
  #L3bcfd8.  if v6 != v4 then goto L3bcfde;
  #L3bcfdc.  v2:= 1I;
  #L3bcfde.  if v2 == 0 then goto L3bcfec;
  #L3bcfe2.  call `start`(v7) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L3bcfe8.  v1:= v1 + v5 @kind int;
  #L3bcfea.  goto L3bcf3c;
  #L3bcfec.  v1:= "Failed requirement." @kind object;
  #L3bcff0.  v2:= new `java.lang.IllegalArgumentException`;
  #L3bcff4.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bcffa.  v1:= temp @kind object;
  #L3bcffc.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bd002.  throw v2;
  #L3bd004.  v1:= "Failed requirement." @kind object;
  #L3bd008.  v2:= new `java.lang.IllegalArgumentException`;
  #L3bd00c.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bd012.  v1:= temp @kind object;
  #L3bd014.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bd01a.  throw v2;
  #L3bd01c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3bd01e.  @monitorexit v0
  #L3bd020.  throw v1;
  catch `java.lang.Throwable` @[L3bcf2e..L3bcf36] goto L3bd01c;
  catch `java.lang.Throwable` @[L3bcf40..L3bcf76] goto L3bd01c;
  catch `java.lang.Throwable` @[L3bcf7e..L3bcf82] goto L3bd01c;
  catch `java.lang.Throwable` @[L3bcf8a..L3bd01c] goto L3bd01c;
}
procedure `kotlinx.coroutines.scheduling.a$c` `h`(`kotlinx.coroutines.scheduling.a` v3 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.h:()Lkotlinx/coroutines/scheduling/a$c;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3bd308.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3bd30e.  v0:= temp @kind object;
  #L3bd310.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.scheduling.a$c` @kind boolean;
  #L3bd314.  v2:= 0I;
  #L3bd316.  if v1 == 0 then goto L3bd320;
  #L3bd31a.  v0:= (`kotlinx.coroutines.scheduling.a$c`) v0 @kind object;
  #L3bd31e.  goto L3bd322;
  #L3bd320.  v0:= v2 @kind object;
  #L3bd322.  if v0 == 0 then goto L3bd33c;
  #L3bd326.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/scheduling/a$c;.a:(Lkotlinx/coroutines/scheduling/a$c;)Lkotlinx/coroutines/scheduling/a;` @kind static;
  #L3bd32c.  v1:= temp @kind object;
  #L3bd32e.  call temp:= `a`(v1, v3) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3bd334.  v1:= temp;
  #L3bd336.  if v1 == 0 then goto L3bd33c;
  #L3bd33a.  v2:= v0 @kind object;
  #L3bd33c.  return v2 @kind object;
}
procedure `void` `k`(`kotlinx.coroutines.scheduling.a` v0 @kind object, `java.lang.Runnable` v1 @kind object, `kotlinx.coroutines.scheduling.i` v2 @kind object, `boolean` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.k:(Lkotlinx/coroutines/scheduling/a;Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/i;ZILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3bd6a0.  v5:= v4 ^& 2;
  #L3bd6a4.  if v5 == 0 then goto L3bd6ac;
  #L3bd6a8.  v2:= `@@kotlinx.coroutines.scheduling.l.f` @type ^`kotlinx.coroutines.scheduling.i` @kind object;
  #L3bd6ac.  v4:= v4 ^& 4;
  #L3bd6b0.  if v4 == 0 then goto L3bd6b6;
  #L3bd6b4.  v3:= 0I;
  #L3bd6b6.  call `i`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/scheduling/a;.i:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/i;Z)V` @kind virtual;
  #L3bd6bc.  return @kind void;
}
procedure `int` `o`(`kotlinx.coroutines.scheduling.a` v1 @kind this, `kotlinx.coroutines.scheduling.a$c` v2 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.o:(Lkotlinx/coroutines/scheduling/a$c;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L3bd058.  call temp:= `h`(v2) @signature `Lkotlinx/coroutines/scheduling/a$c;.h:()Ljava/lang/Object;` @kind virtual;
  #L3bd05e.  v2:= temp @kind object;
  #L3bd060.  v0:= `@@kotlinx.coroutines.scheduling.a.y` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L3bd064.  if v2 != v0 then goto L3bd06c;
  #L3bd068.  v2:= -1I;
  #L3bd06a.  return v2;
  #L3bd06c.  if v2 != 0 then goto L3bd074;
  #L3bd070.  v2:= 0I;
  #L3bd072.  return v2;
  #L3bd074.  v2:= (`kotlinx.coroutines.scheduling.a$c`) v2 @kind object;
  #L3bd078.  call temp:= `g`(v2) @signature `Lkotlinx/coroutines/scheduling/a$c;.g:()I` @kind virtual;
  #L3bd07e.  v0:= temp;
  #L3bd080.  if v0 == 0 then goto L3bd058;
  #L3bd084.  return v0;
}
procedure `kotlinx.coroutines.scheduling.a$c` `s`(`kotlinx.coroutines.scheduling.a` v9 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.s:()Lkotlinx/coroutines/scheduling/a$c;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3bd350.  v2:= v9.`kotlinx.coroutines.scheduling.a.parkedWorkersStack` @type ^`long` @kind wide;
  #L3bd354.  v0:= 2097151L;
  #L3bd35a.  v0:= v0 ^& v2 @kind long;
  #L3bd35c.  v1:= (`int`) v0 @kind l2i;
  #L3bd35e.  v0:= v9.`kotlinx.coroutines.scheduling.a.u` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L3bd362.  call temp:= `b`(v0, v1) @signature `Lkotlinx/coroutines/internal/c0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L3bd368.  v0:= temp @kind object;
  #L3bd36a.  v6:= v0 @kind object;
  #L3bd36c.  v6:= (`kotlinx.coroutines.scheduling.a$c`) v6 @kind object;
  #L3bd370.  if v6 != 0 then goto L3bd378;
  #L3bd374.  v0:= 0I;
  #L3bd376.  return v0 @kind object;
  #L3bd378.  v0:= 2097152L;
  #L3bd37e.  v0:= v0 + v2 @kind long;
  #L3bd380.  v4:= -2097152L;
  #L3bd386.  v0:= v0 ^& v4 @kind long;
  #L3bd388.  call temp:= `o`(v9, v6) @signature `Lkotlinx/coroutines/scheduling/a;.o:(Lkotlinx/coroutines/scheduling/a$c;)I` @kind direct;
  #L3bd38e.  v4:= temp;
  #L3bd390.  if v4 < 0 then goto L3bd350;
  #L3bd394.  v5:= `@@kotlinx.coroutines.scheduling.a.v` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L3bd398.  v7:= (`long`) v4 @kind i2l;
  #L3bd39a.  v7:= v7 ^| v0 @kind long;
  #L3bd39c.  v0:= v5 @kind object;
  #L3bd39e.  v1:= v9 @kind object;
  #L3bd3a0.  v4:= v7 @kind wide;
  #L3bd3a2.  call temp:= `compareAndSet`(v0, v1, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z` @kind virtual;
  #L3bd3a8.  v0:= temp;
  #L3bd3aa.  if v0 == 0 then goto L3bd350;
  #L3bd3ae.  v0:= `@@kotlinx.coroutines.scheduling.a.y` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L3bd3b2.  call `p`(v6, v0) @signature `Lkotlinx/coroutines/scheduling/a$c;.p:(Ljava/lang/Object;)V` @kind virtual;
  #L3bd3b8.  return v6 @kind object;
}
procedure `void` `E`(`kotlinx.coroutines.scheduling.a` v2 @kind this, `kotlinx.coroutines.scheduling.h` v3 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.E:(Lkotlinx/coroutines/scheduling/h;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3bd7fc.  call `run`(v3) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L3bd802.  call temp:= `a`() @signature `Lac/c;.a:()Lac/b;` @kind static;
  #L3bd808.  goto L3bd824;
  #L3bd80a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3bd80c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3bd812.  v0:= temp @kind object;
  #L3bd814.  call temp:= `getUncaughtExceptionHandler`(v0) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L3bd81a.  v1:= temp @kind object;
  #L3bd81c.  call `uncaughtException`(v1, v0, v3) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L3bd822.  goto L3bd802;
  #L3bd824.  return @kind void;
  #L3bd826.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3bd828.  call temp:= `a`() @signature `Lac/c;.a:()Lac/b;` @kind static;
  #L3bd82e.  throw v3;
  catch `java.lang.Throwable` @[L3bd7fc..L3bd802] goto L3bd80a;
  catch `java.lang.Throwable` @[L3bd80c..L3bd822] goto L3bd826;
}
procedure `void` `G`(`kotlinx.coroutines.scheduling.a` v8 @kind this, `long` v9 ) @signature `Lkotlinx/coroutines/scheduling/a;.G:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3bd858.  v0:= `@@kotlinx.coroutines.scheduling.a.x` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L3bd85c.  v1:= 0I;
  #L3bd85e.  v2:= 1I;
  #L3bd860.  call temp:= `compareAndSet`(v0, v8, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L3bd866.  v0:= temp;
  #L3bd868.  if v0 != 0 then goto L3bd86e;
  #L3bd86c.  return @kind void;
  #L3bd86e.  call temp:= `h`(v8) @signature `Lkotlinx/coroutines/scheduling/a;.h:()Lkotlinx/coroutines/scheduling/a$c;` @kind direct;
  #L3bd874.  v0:= temp @kind object;
  #L3bd876.  v3:= v8.`kotlinx.coroutines.scheduling.a.u` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L3bd87a.  @monitorenter v3
  #L3bd87c.  v4:= v8.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` @kind wide;
  #L3bd880.  v6:= 2097151L;
  #L3bd886.  v4:= v4 ^& v6 @kind long;
  #L3bd888.  v5:= (`int`) v4 @kind l2i;
  #L3bd88a.  @monitorexit v3
  #L3bd88c.  if v2 > v5 then goto L3bd90e;
  #L3bd890.  v3:= 1I;
  #L3bd892.  v4:= v8.`kotlinx.coroutines.scheduling.a.u` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L3bd896.  call temp:= `b`(v4, v3) @signature `Lkotlinx/coroutines/internal/c0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L3bd89c.  v4:= temp @kind object;
  #L3bd89e.  call `b`(v4) @signature `Lkotlin/jvm/internal/k;.b:(Ljava/lang/Object;)V` @kind static;
  #L3bd8a4.  v4:= (`kotlinx.coroutines.scheduling.a$c`) v4 @kind object;
  #L3bd8a8.  if v4 == v0 then goto L3bd904;
  #L3bd8ac.  call temp:= `isAlive`(v4) @signature `Ljava/lang/Thread;.isAlive:()Z` @kind virtual;
  #L3bd8b2.  v6:= temp;
  #L3bd8b4.  if v6 == 0 then goto L3bd8c6;
  #L3bd8b8.  call `unpark`(v4) @signature `Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V` @kind static;
  #L3bd8be.  call `join`(v4, v9) @signature `Ljava/lang/Thread;.join:(J)V` @kind virtual;
  #L3bd8c4.  goto L3bd8ac;
  #L3bd8c6.  v6:= v4.`kotlinx.coroutines.scheduling.a$c.p` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L3bd8ca.  call temp:= `a`() @signature `Lac/p0;.a:()Z` @kind static;
  #L3bd8d0.  v7:= temp;
  #L3bd8d2.  if v7 == 0 then goto L3bd8f6;
  #L3bd8d6.  v7:= `@@kotlinx.coroutines.scheduling.a$d.s` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L3bd8da.  if v6 != v7 then goto L3bd8e2;
  #L3bd8de.  v6:= 1I;
  #L3bd8e0.  goto L3bd8e4;
  #L3bd8e2.  v6:= 0I;
  #L3bd8e4.  if v6 == 0 then goto L3bd8ea;
  #L3bd8e8.  goto L3bd8f6;
  #L3bd8ea.  v9:= new `java.lang.AssertionError`;
  #L3bd8ee.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3bd8f4.  throw v9;
  #L3bd8f6.  v4:= v4.`kotlinx.coroutines.scheduling.a$c.o` @type ^`kotlinx.coroutines.scheduling.n` @kind object;
  #L3bd8fa.  v6:= v8.`kotlinx.coroutines.scheduling.a.t` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L3bd8fe.  call `g`(v4, v6) @signature `Lkotlinx/coroutines/scheduling/n;.g:(Lkotlinx/coroutines/scheduling/d;)V` @kind virtual;
  #L3bd904.  if v3 == v5 then goto L3bd90e;
  #L3bd908.  v3:= v3 + 1;
  #L3bd90c.  goto L3bd892;
  #L3bd90e.  v9:= v8.`kotlinx.coroutines.scheduling.a.t` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L3bd912.  call `b`(v9) @signature `Lkotlinx/coroutines/internal/s;.b:()V` @kind virtual;
  #L3bd918.  v9:= v8.`kotlinx.coroutines.scheduling.a.s` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L3bd91c.  call `b`(v9) @signature `Lkotlinx/coroutines/internal/s;.b:()V` @kind virtual;
  #L3bd922.  if v0 == 0 then goto L3bd932;
  #L3bd926.  call temp:= `f`(v0, v2) @signature `Lkotlinx/coroutines/scheduling/a$c;.f:(Z)Lkotlinx/coroutines/scheduling/h;` @kind virtual;
  #L3bd92c.  v9:= temp @kind object;
  #L3bd92e.  if v9 != 0 then goto L3bd9b6;
  #L3bd932.  v9:= v8.`kotlinx.coroutines.scheduling.a.s` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L3bd936.  call temp:= `d`(v9) @signature `Lkotlinx/coroutines/internal/s;.d:()Ljava/lang/Object;` @kind virtual;
  #L3bd93c.  v9:= temp @kind object;
  #L3bd93e.  v9:= (`kotlinx.coroutines.scheduling.h`) v9 @kind object;
  #L3bd942.  if v9 != 0 then goto L3bd9b6;
  #L3bd946.  v9:= v8.`kotlinx.coroutines.scheduling.a.t` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L3bd94a.  call temp:= `d`(v9) @signature `Lkotlinx/coroutines/internal/s;.d:()Ljava/lang/Object;` @kind virtual;
  #L3bd950.  v9:= temp @kind object;
  #L3bd952.  v9:= (`kotlinx.coroutines.scheduling.h`) v9 @kind object;
  #L3bd956.  if v9 != 0 then goto L3bd9b6;
  #L3bd95a.  if v0 == 0 then goto L3bd968;
  #L3bd95e.  v9:= `@@kotlinx.coroutines.scheduling.a$d.s` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L3bd962.  call temp:= `s`(v0, v9) @signature `Lkotlinx/coroutines/scheduling/a$c;.s:(Lkotlinx/coroutines/scheduling/a$d;)Z` @kind virtual;
  #L3bd968.  call temp:= `a`() @signature `Lac/p0;.a:()Z` @kind static;
  #L3bd96e.  v9:= temp;
  #L3bd970.  if v9 == 0 then goto L3bd9a8;
  #L3bd974.  v9:= v8.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` @kind wide;
  #L3bd978.  v3:= 9223367638808264704L;
  #L3bd982.  v9:= v9 ^& v3 @kind long;
  #L3bd984.  v0:= 42I;
  #L3bd988.  v9:= v9 ^> v0 @kind long;
  #L3bd98a.  v10:= (`int`) v9 @kind l2i;
  #L3bd98c.  v9:= v8.`kotlinx.coroutines.scheduling.a.o` @type ^`int`;
  #L3bd990.  if v10 != v9 then goto L3bd996;
  #L3bd994.  v1:= 1I;
  #L3bd996.  if v1 == 0 then goto L3bd99c;
  #L3bd99a.  goto L3bd9a8;
  #L3bd99c.  v9:= new `java.lang.AssertionError`;
  #L3bd9a0.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3bd9a6.  throw v9;
  #L3bd9a8.  v9:= 0L;
  #L3bd9ac.  v8.`kotlinx.coroutines.scheduling.a.parkedWorkersStack` @type ^`long` := v9 @kind wide;
  #L3bd9b0.  v8.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` := v9 @kind wide;
  #L3bd9b4.  return @kind void;
  #L3bd9b6.  call `E`(v8, v9) @signature `Lkotlinx/coroutines/scheduling/a;.E:(Lkotlinx/coroutines/scheduling/h;)V` @kind virtual;
  #L3bd9bc.  goto L3bd922;
  #L3bd9be.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3bd9c0.  @monitorexit v3
  #L3bd9c2.  throw v9;
  catch `java.lang.Throwable` @[L3bd87c..L3bd880] goto L3bd9be;
}
procedure `void` `K`(`kotlinx.coroutines.scheduling.a` v4 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.K:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bda2c.  call temp:= `S`(v4) @signature `Lkotlinx/coroutines/scheduling/a;.S:()Z` @kind direct;
  #L3bda32.  v0:= temp;
  #L3bda34.  if v0 == 0 then goto L3bda3a;
  #L3bda38.  return @kind void;
  #L3bda3a.  v0:= 0L;
  #L3bda3e.  v2:= 1I;
  #L3bda40.  v3:= 0I;
  #L3bda42.  call temp:= `O`(v4, v0, v2, v3) @signature `Lkotlinx/coroutines/scheduling/a;.O:(Lkotlinx/coroutines/scheduling/a;JILjava/lang/Object;)Z` @kind static;
  #L3bda48.  v0:= temp;
  #L3bda4a.  if v0 == 0 then goto L3bda50;
  #L3bda4e.  return @kind void;
  #L3bda50.  call temp:= `S`(v4) @signature `Lkotlinx/coroutines/scheduling/a;.S:()Z` @kind direct;
  #L3bda56.  return @kind void;
}
procedure `void` `close`(`kotlinx.coroutines.scheduling.a` v2 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bd684.  v0:= 10000L;
  #L3bd688.  call `G`(v2, v0) @signature `Lkotlinx/coroutines/scheduling/a;.G:(J)V` @kind virtual;
  #L3bd68e.  return @kind void;
}
procedure `kotlinx.coroutines.scheduling.h` `e`(`kotlinx.coroutines.scheduling.a` v3 @kind this, `java.lang.Runnable` v4 @kind object, `kotlinx.coroutines.scheduling.i` v5 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.e:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/i;)Lkotlinx/coroutines/scheduling/h;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3bd3cc.  v0:= `@@kotlinx.coroutines.scheduling.l.e` @type ^`kotlinx.coroutines.scheduling.g` @kind object;
  #L3bd3d0.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/scheduling/g;.a:()J` @kind virtual;
  #L3bd3d6.  v0:= temp @kind wide;
  #L3bd3d8.  v2:= instanceof @variable v4 @type ^`kotlinx.coroutines.scheduling.h` @kind boolean;
  #L3bd3dc.  if v2 == 0 then goto L3bd3ee;
  #L3bd3e0.  v4:= (`kotlinx.coroutines.scheduling.h`) v4 @kind object;
  #L3bd3e4.  v4.`kotlinx.coroutines.scheduling.h.o` @type ^`long` := v0 @kind wide;
  #L3bd3e8.  v4.`kotlinx.coroutines.scheduling.h.p` @type ^`kotlinx.coroutines.scheduling.i` := v5 @kind object;
  #L3bd3ec.  return v4 @kind object;
  #L3bd3ee.  v2:= new `kotlinx.coroutines.scheduling.k`;
  #L3bd3f2.  call `<init>`(v2, v4, v0, v5) @signature `Lkotlinx/coroutines/scheduling/k;.<init>:(Ljava/lang/Runnable;JLkotlinx/coroutines/scheduling/i;)V` @kind direct;
  #L3bd3f8.  return v2 @kind object;
}
procedure `void` `execute`(`kotlinx.coroutines.scheduling.a` v6 @kind this, `java.lang.Runnable` v7 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3bd778.  v2:= 0I;
  #L3bd77a.  v3:= 0I;
  #L3bd77c.  v4:= 6I;
  #L3bd77e.  v5:= 0I;
  #L3bd780.  v0:= v6 @kind object;
  #L3bd782.  v1:= v7 @kind object;
  #L3bd784.  call `k`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/a;.k:(Lkotlinx/coroutines/scheduling/a;Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/i;ZILjava/lang/Object;)V` @kind static;
  #L3bd78a.  return @kind void;
}
procedure `void` `i`(`kotlinx.coroutines.scheduling.a` v1 @kind this, `java.lang.Runnable` v2 @kind object, `kotlinx.coroutines.scheduling.i` v3 @kind object, `boolean` v4 ) @signature `Lkotlinx/coroutines/scheduling/a;.i:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/i;Z)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3bd6d0.  call temp:= `a`() @signature `Lac/c;.a:()Lac/b;` @kind static;
  #L3bd6d6.  call temp:= `e`(v1, v2, v3) @signature `Lkotlinx/coroutines/scheduling/a;.e:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/i;)Lkotlinx/coroutines/scheduling/h;` @kind virtual;
  #L3bd6dc.  v2:= temp @kind object;
  #L3bd6de.  call temp:= `h`(v1) @signature `Lkotlinx/coroutines/scheduling/a;.h:()Lkotlinx/coroutines/scheduling/a$c;` @kind direct;
  #L3bd6e4.  v3:= temp @kind object;
  #L3bd6e6.  call temp:= `M`(v1, v3, v2, v4) @signature `Lkotlinx/coroutines/scheduling/a;.M:(Lkotlinx/coroutines/scheduling/a$c;Lkotlinx/coroutines/scheduling/h;Z)Lkotlinx/coroutines/scheduling/h;` @kind direct;
  #L3bd6ec.  v0:= temp @kind object;
  #L3bd6ee.  if v0 == 0 then goto L3bd732;
  #L3bd6f2.  call temp:= `a`(v1, v0) @signature `Lkotlinx/coroutines/scheduling/a;.a:(Lkotlinx/coroutines/scheduling/h;)Z` @kind direct;
  #L3bd6f8.  v0:= temp;
  #L3bd6fa.  if v0 == 0 then goto L3bd700;
  #L3bd6fe.  goto L3bd732;
  #L3bd700.  v2:= new `java.util.concurrent.RejectedExecutionException`;
  #L3bd704.  v3:= new `java.lang.StringBuilder`;
  #L3bd708.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bd70e.  v4:= v1.`kotlinx.coroutines.scheduling.a.r` @type ^`java.lang.String` @kind object;
  #L3bd712.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd718.  v4:= " was terminated" @kind object;
  #L3bd71c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd722.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bd728.  v3:= temp @kind object;
  #L3bd72a.  call `<init>`(v2, v3) @signature `Ljava/util/concurrent/RejectedExecutionException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bd730.  throw v2;
  #L3bd732.  if v4 == 0 then goto L3bd73e;
  #L3bd736.  if v3 == 0 then goto L3bd73e;
  #L3bd73a.  v3:= 1I;
  #L3bd73c.  goto L3bd740;
  #L3bd73e.  v3:= 0I;
  #L3bd740.  v2:= v2.`kotlinx.coroutines.scheduling.h.p` @type ^`kotlinx.coroutines.scheduling.i` @kind object;
  #L3bd744.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/scheduling/i;.b:()I` @kind interface;
  #L3bd74a.  v2:= temp;
  #L3bd74c.  if v2 != 0 then goto L3bd75e;
  #L3bd750.  if v3 == 0 then goto L3bd756;
  #L3bd754.  return @kind void;
  #L3bd756.  call `K`(v1) @signature `Lkotlinx/coroutines/scheduling/a;.K:()V` @kind virtual;
  #L3bd75c.  goto L3bd764;
  #L3bd75e.  call `J`(v1, v3) @signature `Lkotlinx/coroutines/scheduling/a;.J:(Z)V` @kind direct;
  #L3bd764.  return @kind void;
}
procedure `boolean` `isTerminated`(`kotlinx.coroutines.scheduling.a` v1 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.isTerminated:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3bcda4.  v0:= v1.`kotlinx.coroutines.scheduling.a._isTerminated` @type ^`int`;
  #L3bcda8.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.scheduling.a` v12 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3bd098.  v0:= new `java.util.ArrayList`;
  #L3bd09c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3bd0a2.  v1:= v12.`kotlinx.coroutines.scheduling.a.u` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L3bd0a6.  call temp:= `a`(v1) @signature `Lkotlinx/coroutines/internal/c0;.a:()I` @kind virtual;
  #L3bd0ac.  v1:= temp;
  #L3bd0ae.  v2:= 0I;
  #L3bd0b0.  v3:= 1I;
  #L3bd0b2.  v4:= 0I;
  #L3bd0b4.  v5:= 0I;
  #L3bd0b6.  v6:= 0I;
  #L3bd0b8.  v7:= 0I;
  #L3bd0ba.  v8:= 1I;
  #L3bd0bc.  if v8 >= v1 then goto L3bd18a;
  #L3bd0c0.  v9:= v12.`kotlinx.coroutines.scheduling.a.u` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L3bd0c4.  call temp:= `b`(v9, v8) @signature `Lkotlinx/coroutines/internal/c0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L3bd0ca.  v9:= temp @kind object;
  #L3bd0cc.  v9:= (`kotlinx.coroutines.scheduling.a$c`) v9 @kind object;
  #L3bd0d0.  if v9 != 0 then goto L3bd0d6;
  #L3bd0d4.  goto L3bd184;
  #L3bd0d6.  v10:= v9.`kotlinx.coroutines.scheduling.a$c.o` @type ^`kotlinx.coroutines.scheduling.n` @kind object;
  #L3bd0da.  call temp:= `f`(v10) @signature `Lkotlinx/coroutines/scheduling/n;.f:()I` @kind virtual;
  #L3bd0e0.  v10:= temp;
  #L3bd0e2.  v9:= v9.`kotlinx.coroutines.scheduling.a$c.p` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L3bd0e6.  v11:= `@@kotlinx.coroutines.scheduling.a$b.a` @type ^`int`[] @kind object;
  #L3bd0ea.  call temp:= `ordinal`(v9) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3bd0f0.  v9:= temp;
  #L3bd0f2.  v9:= v11[v9];
  #L3bd0f6.  if v9 == v3 then goto L3bd180;
  #L3bd0fa.  v11:= 2I;
  #L3bd0fc.  if v9 == v11 then goto L3bd152;
  #L3bd100.  v11:= 3I;
  #L3bd102.  if v9 == v11 then goto L3bd138;
  #L3bd106.  v11:= 4I;
  #L3bd108.  if v9 == v11 then goto L3bd11a;
  #L3bd10c.  v10:= 5I;
  #L3bd10e.  if v9 == v10 then goto L3bd114;
  #L3bd112.  goto L3bd184;
  #L3bd114.  v7:= v7 + 1;
  #L3bd118.  goto L3bd184;
  #L3bd11a.  v6:= v6 + 1;
  #L3bd11e.  if v10 <= 0 then goto L3bd184;
  #L3bd122.  v9:= new `java.lang.StringBuilder`;
  #L3bd126.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bd12c.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd132.  v10:= 100I;
  #L3bd136.  goto L3bd16a;
  #L3bd138.  v2:= v2 + 1;
  #L3bd13c.  v9:= new `java.lang.StringBuilder`;
  #L3bd140.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bd146.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd14c.  v10:= 99I;
  #L3bd150.  goto L3bd16a;
  #L3bd152.  v4:= v4 + 1;
  #L3bd156.  v9:= new `java.lang.StringBuilder`;
  #L3bd15a.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bd160.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd166.  v10:= 98I;
  #L3bd16a.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd170.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bd176.  v9:= temp @kind object;
  #L3bd178.  call temp:= `add`(v0, v9) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3bd17e.  goto L3bd184;
  #L3bd180.  v5:= v5 + 1;
  #L3bd184.  v8:= v8 + 1;
  #L3bd188.  goto L3bd0bc;
  #L3bd18a.  v8:= v12.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` @kind wide;
  #L3bd18e.  v1:= new `java.lang.StringBuilder`;
  #L3bd192.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bd198.  v3:= v12.`kotlinx.coroutines.scheduling.a.r` @type ^`java.lang.String` @kind object;
  #L3bd19c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd1a2.  v3:= 64I;
  #L3bd1a6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd1ac.  call temp:= `b`(v12) @signature `Lac/q0;.b:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3bd1b2.  v3:= temp @kind object;
  #L3bd1b4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd1ba.  v3:= "[Pool Size {core = " @kind object;
  #L3bd1be.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd1c4.  v3:= v12.`kotlinx.coroutines.scheduling.a.o` @type ^`int`;
  #L3bd1c8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd1ce.  v3:= ", max = " @kind object;
  #L3bd1d2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd1d8.  v3:= v12.`kotlinx.coroutines.scheduling.a.p` @type ^`int`;
  #L3bd1dc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd1e2.  v3:= "}, Worker States {CPU = " @kind object;
  #L3bd1e6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd1ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd1f2.  v2:= ", blocking = " @kind object;
  #L3bd1f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd1fc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd202.  v2:= ", parked = " @kind object;
  #L3bd206.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd20c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd212.  v2:= ", dormant = " @kind object;
  #L3bd216.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd21c.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd222.  v2:= ", terminated = " @kind object;
  #L3bd226.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd22c.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd232.  v2:= "}, running workers queues = " @kind object;
  #L3bd236.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd23c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd242.  v0:= ", global CPU queue size = " @kind object;
  #L3bd246.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd24c.  v0:= v12.`kotlinx.coroutines.scheduling.a.s` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L3bd250.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/internal/s;.c:()I` @kind virtual;
  #L3bd256.  v0:= temp;
  #L3bd258.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd25e.  v0:= ", global blocking queue size = " @kind object;
  #L3bd262.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd268.  v0:= v12.`kotlinx.coroutines.scheduling.a.t` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L3bd26c.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/internal/s;.c:()I` @kind virtual;
  #L3bd272.  v0:= temp;
  #L3bd274.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd27a.  v0:= ", Control State {created workers= " @kind object;
  #L3bd27e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd284.  v2:= 2097151L;
  #L3bd28a.  v2:= v2 ^& v8 @kind long;
  #L3bd28c.  v0:= (`int`) v2 @kind l2i;
  #L3bd28e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd294.  v0:= ", blocking tasks = " @kind object;
  #L3bd298.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd29e.  v2:= 4398044413952L;
  #L3bd2a8.  v2:= v2 ^& v8 @kind long;
  #L3bd2aa.  v0:= 21I;
  #L3bd2ae.  v2:= v2 ^> v0 @kind long;
  #L3bd2b0.  v0:= (`int`) v2 @kind l2i;
  #L3bd2b2.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd2b8.  v0:= ", CPUs acquired = " @kind object;
  #L3bd2bc.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd2c2.  v0:= v12.`kotlinx.coroutines.scheduling.a.o` @type ^`int`;
  #L3bd2c6.  v2:= 9223367638808264704L;
  #L3bd2d0.  v2:= v2 ^& v8 @kind long;
  #L3bd2d2.  v4:= 42I;
  #L3bd2d6.  v2:= v2 ^> v4 @kind long;
  #L3bd2d8.  v3:= (`int`) v2 @kind l2i;
  #L3bd2da.  v0:= v0 - v3 @kind int;
  #L3bd2dc.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd2e2.  v0:= "}]" @kind object;
  #L3bd2e6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bd2ec.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bd2f2.  v0:= temp @kind object;
  #L3bd2f4.  return v0 @kind object;
}
procedure `boolean` `v`(`kotlinx.coroutines.scheduling.a` v10 @kind this, `kotlinx.coroutines.scheduling.a$c` v11 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.v:(Lkotlinx/coroutines/scheduling/a$c;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3bcdbc.  call temp:= `h`(v11) @signature `Lkotlinx/coroutines/scheduling/a$c;.h:()Ljava/lang/Object;` @kind virtual;
  #L3bcdc2.  v0:= temp @kind object;
  #L3bcdc4.  v1:= `@@kotlinx.coroutines.scheduling.a.y` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L3bcdc8.  v2:= 0I;
  #L3bcdca.  if v0 == v1 then goto L3bcdd0;
  #L3bcdce.  return v2;
  #L3bcdd0.  v5:= v10.`kotlinx.coroutines.scheduling.a.parkedWorkersStack` @type ^`long` @kind wide;
  #L3bcdd4.  v0:= 2097151L;
  #L3bcdda.  v0:= v0 ^& v5 @kind long;
  #L3bcddc.  v1:= (`int`) v0 @kind l2i;
  #L3bcdde.  v3:= 2097152L;
  #L3bcde4.  v3:= v3 + v5 @kind long;
  #L3bcde6.  v7:= -2097152L;
  #L3bcdec.  v3:= v3 ^& v7 @kind long;
  #L3bcdee.  call temp:= `g`(v11) @signature `Lkotlinx/coroutines/scheduling/a$c;.g:()I` @kind virtual;
  #L3bcdf4.  v0:= temp;
  #L3bcdf6.  call temp:= `a`() @signature `Lac/p0;.a:()Z` @kind static;
  #L3bcdfc.  v7:= temp;
  #L3bcdfe.  v9:= 1I;
  #L3bce00.  if v7 == 0 then goto L3bce20;
  #L3bce04.  if v0 == 0 then goto L3bce0c;
  #L3bce08.  v7:= 1I;
  #L3bce0a.  goto L3bce0e;
  #L3bce0c.  v7:= 0I;
  #L3bce0e.  if v7 == 0 then goto L3bce14;
  #L3bce12.  goto L3bce20;
  #L3bce14.  v11:= new `java.lang.AssertionError`;
  #L3bce18.  call `<init>`(v11) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3bce1e.  throw v11;
  #L3bce20.  v7:= v10.`kotlinx.coroutines.scheduling.a.u` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L3bce24.  call temp:= `b`(v7, v1) @signature `Lkotlinx/coroutines/internal/c0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L3bce2a.  v1:= temp @kind object;
  #L3bce2c.  call `p`(v11, v1) @signature `Lkotlinx/coroutines/scheduling/a$c;.p:(Ljava/lang/Object;)V` @kind virtual;
  #L3bce32.  v1:= `@@kotlinx.coroutines.scheduling.a.v` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L3bce36.  v7:= (`long`) v0 @kind i2l;
  #L3bce38.  v7:= v7 ^| v3 @kind long;
  #L3bce3a.  v3:= v1 @kind object;
  #L3bce3c.  v4:= v10 @kind object;
  #L3bce3e.  call temp:= `compareAndSet`(v3, v4, v5, v7) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z` @kind virtual;
  #L3bce44.  v0:= temp;
  #L3bce46.  if v0 == 0 then goto L3bcdd0;
  #L3bce4a.  return v9;
}
procedure `void` `x`(`kotlinx.coroutines.scheduling.a` v8 @kind this, `kotlinx.coroutines.scheduling.a$c` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lkotlinx/coroutines/scheduling/a;.x:(Lkotlinx/coroutines/scheduling/a$c;II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3bd79c.  v2:= v8.`kotlinx.coroutines.scheduling.a.parkedWorkersStack` @type ^`long` @kind wide;
  #L3bd7a0.  v0:= 2097151L;
  #L3bd7a6.  v0:= v0 ^& v2 @kind long;
  #L3bd7a8.  v1:= (`int`) v0 @kind l2i;
  #L3bd7aa.  v4:= 2097152L;
  #L3bd7b0.  v4:= v4 + v2 @kind long;
  #L3bd7b2.  v6:= -2097152L;
  #L3bd7b8.  v4:= v4 ^& v6 @kind long;
  #L3bd7ba.  if v1 != v10 then goto L3bd7ce;
  #L3bd7be.  if v11 != 0 then goto L3bd7cc;
  #L3bd7c2.  call temp:= `o`(v8, v9) @signature `Lkotlinx/coroutines/scheduling/a;.o:(Lkotlinx/coroutines/scheduling/a$c;)I` @kind direct;
  #L3bd7c8.  v1:= temp;
  #L3bd7ca.  goto L3bd7ce;
  #L3bd7cc.  v1:= v11;
  #L3bd7ce.  if v1 < 0 then goto L3bd79c;
  #L3bd7d2.  v0:= `@@kotlinx.coroutines.scheduling.a.v` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L3bd7d6.  v6:= (`long`) v1 @kind i2l;
  #L3bd7d8.  v4:= v4 ^| v6 @kind long;
  #L3bd7da.  v1:= v8 @kind object;
  #L3bd7dc.  call temp:= `compareAndSet`(v0, v1, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z` @kind virtual;
  #L3bd7e2.  v0:= temp;
  #L3bd7e4.  if v0 == 0 then goto L3bd79c;
  #L3bd7e8.  return @kind void;
}
