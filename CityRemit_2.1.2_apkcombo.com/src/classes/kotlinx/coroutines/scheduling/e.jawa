record `kotlinx.coroutines.scheduling.e` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.scheduling.g` @kind class {
}
global `kotlinx.coroutines.scheduling.e` `@@kotlinx.coroutines.scheduling.e.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3bdc10.  v0:= new `kotlinx.coroutines.scheduling.e`;
  #L3bdc14.  call `<init>`(v0) @signature `Lkotlinx/coroutines/scheduling/e;.<init>:()V` @kind direct;
  #L3bdc1a.  `@@kotlinx.coroutines.scheduling.e.a` @type ^`kotlinx.coroutines.scheduling.e` := v0 @kind object;
  #L3bdc1e.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.e` v0 @kind this) @signature `Lkotlinx/coroutines/scheduling/e;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3bdc30.  call `<init>`(v0) @signature `Lkotlinx/coroutines/scheduling/g;.<init>:()V` @kind direct;
  #L3bdc36.  return @kind void;
}
procedure `long` `a`(`kotlinx.coroutines.scheduling.e` v2 @kind this) @signature `Lkotlinx/coroutines/scheduling/e;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bdbf4.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L3bdbfa.  v0:= temp @kind wide;
  #L3bdbfc.  return v0 @kind wide;
}
