record `kotlinx.coroutines.scheduling.a$d` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlinx.coroutines.scheduling.a$d` `@@kotlinx.coroutines.scheduling.a$d.o` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.a$d` `@@kotlinx.coroutines.scheduling.a$d.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.a$d` `@@kotlinx.coroutines.scheduling.a$d.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.a$d` `@@kotlinx.coroutines.scheduling.a$d.r` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.a$d` `@@kotlinx.coroutines.scheduling.a$d.s` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.a$d`[] `@@kotlinx.coroutines.scheduling.a$d.t` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/a$d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3bc3a8.  v0:= new `kotlinx.coroutines.scheduling.a$d`;
  #L3bc3ac.  v1:= "CPU_ACQUIRED" @kind object;
  #L3bc3b0.  v2:= 0I;
  #L3bc3b2.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/a$d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3bc3b8.  `@@kotlinx.coroutines.scheduling.a$d.o` @type ^`kotlinx.coroutines.scheduling.a$d` := v0 @kind object;
  #L3bc3bc.  v0:= new `kotlinx.coroutines.scheduling.a$d`;
  #L3bc3c0.  v1:= "BLOCKING" @kind object;
  #L3bc3c4.  v2:= 1I;
  #L3bc3c6.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/a$d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3bc3cc.  `@@kotlinx.coroutines.scheduling.a$d.p` @type ^`kotlinx.coroutines.scheduling.a$d` := v0 @kind object;
  #L3bc3d0.  v0:= new `kotlinx.coroutines.scheduling.a$d`;
  #L3bc3d4.  v1:= "PARKING" @kind object;
  #L3bc3d8.  v2:= 2I;
  #L3bc3da.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/a$d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3bc3e0.  `@@kotlinx.coroutines.scheduling.a$d.q` @type ^`kotlinx.coroutines.scheduling.a$d` := v0 @kind object;
  #L3bc3e4.  v0:= new `kotlinx.coroutines.scheduling.a$d`;
  #L3bc3e8.  v1:= "DORMANT" @kind object;
  #L3bc3ec.  v2:= 3I;
  #L3bc3ee.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/a$d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3bc3f4.  `@@kotlinx.coroutines.scheduling.a$d.r` @type ^`kotlinx.coroutines.scheduling.a$d` := v0 @kind object;
  #L3bc3f8.  v0:= new `kotlinx.coroutines.scheduling.a$d`;
  #L3bc3fc.  v1:= "TERMINATED" @kind object;
  #L3bc400.  v2:= 4I;
  #L3bc402.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/a$d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3bc408.  `@@kotlinx.coroutines.scheduling.a$d.s` @type ^`kotlinx.coroutines.scheduling.a$d` := v0 @kind object;
  #L3bc40c.  call temp:= `c`() @signature `Lkotlinx/coroutines/scheduling/a$d;.c:()[Lkotlinx/coroutines/scheduling/a$d;` @kind static;
  #L3bc412.  v0:= temp @kind object;
  #L3bc414.  `@@kotlinx.coroutines.scheduling.a$d.t` @type ^`kotlinx.coroutines.scheduling.a$d`[] := v0 @kind object;
  #L3bc418.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.a$d` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/scheduling/a$d;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3bc42c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3bc432.  return @kind void;
}
procedure `kotlinx.coroutines.scheduling.a$d`[] `c`() @signature `Lkotlinx/coroutines/scheduling/a$d;.c:()[Lkotlinx/coroutines/scheduling/a$d;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L3bc338.  v0:= 5I;
  #L3bc33a.  v0:= new `kotlinx.coroutines.scheduling.a$d`[v0];
  #L3bc33e.  v1:= `@@kotlinx.coroutines.scheduling.a$d.o` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L3bc342.  v2:= 0I;
  #L3bc344.  v0[v2]:= v1 @kind object;
  #L3bc348.  v1:= `@@kotlinx.coroutines.scheduling.a$d.p` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L3bc34c.  v2:= 1I;
  #L3bc34e.  v0[v2]:= v1 @kind object;
  #L3bc352.  v1:= `@@kotlinx.coroutines.scheduling.a$d.q` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L3bc356.  v2:= 2I;
  #L3bc358.  v0[v2]:= v1 @kind object;
  #L3bc35c.  v1:= `@@kotlinx.coroutines.scheduling.a$d.r` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L3bc360.  v2:= 3I;
  #L3bc362.  v0[v2]:= v1 @kind object;
  #L3bc366.  v1:= `@@kotlinx.coroutines.scheduling.a$d.s` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L3bc36a.  v2:= 4I;
  #L3bc36c.  v0[v2]:= v1 @kind object;
  #L3bc370.  return v0 @kind object;
}
procedure `kotlinx.coroutines.scheduling.a$d` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlinx/coroutines/scheduling/a$d;.valueOf:(Ljava/lang/String;)Lkotlinx/coroutines/scheduling/a$d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3bc314.  v0:= constclass @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L3bc318.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3bc31e.  v1:= temp @kind object;
  #L3bc320.  v1:= (`kotlinx.coroutines.scheduling.a$d`) v1 @kind object;
  #L3bc324.  return v1 @kind object;
}
procedure `kotlinx.coroutines.scheduling.a$d`[] `values`() @signature `Lkotlinx/coroutines/scheduling/a$d;.values:()[Lkotlinx/coroutines/scheduling/a$d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3bc384.  v0:= `@@kotlinx.coroutines.scheduling.a$d.t` @type ^`kotlinx.coroutines.scheduling.a$d`[] @kind object;
  #L3bc388.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3bc38e.  v0:= temp @kind object;
  #L3bc390.  v0:= (`kotlinx.coroutines.scheduling.a$d`[]) v0 @kind object;
  #L3bc394.  return v0 @kind object;
}
