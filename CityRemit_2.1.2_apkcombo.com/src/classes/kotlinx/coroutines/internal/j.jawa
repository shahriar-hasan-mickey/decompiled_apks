record `kotlinx.coroutines.internal.j` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@kotlinx.coroutines.internal.j.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.g` `@@kotlinx.coroutines.internal.j.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3b8fcc.  v0:= constclass @type ^`java.lang.Throwable` @kind object;
  #L3b8fd0.  v1:= -1I;
  #L3b8fd2.  call temp:= `f`(v0, v1) @signature `Lkotlinx/coroutines/internal/j;.f:(Ljava/lang/Class;I)I` @kind static;
  #L3b8fd8.  v0:= temp;
  #L3b8fda.  `@@kotlinx.coroutines.internal.j.a` @type ^`int` := v0;
  #L3b8fde.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/l;.a:()Z` @kind static;
  #L3b8fe4.  v0:= temp;
  #L3b8fe6.  if v0 == 0 then goto L3b8ff0;
  #L3b8fea.  v0:= `@@kotlinx.coroutines.internal.o0.a` @type ^`kotlinx.coroutines.internal.o0` @kind object;
  #L3b8fee.  goto L3b8ffa;
  #L3b8ff0.  v0:= `@@kotlinx.coroutines.internal.d.a` @type ^`kotlinx.coroutines.internal.d` @kind object;
  #L3b8ff4.  goto L3b8ffa;
  #L3b8ff6.  v0:= `@@kotlinx.coroutines.internal.o0.a` @type ^`kotlinx.coroutines.internal.o0` @kind object;
  #L3b8ffa.  `@@kotlinx.coroutines.internal.j.b` @type ^`kotlinx.coroutines.internal.g` := v0 @kind object;
  #L3b8ffe.  return @kind void;
  catch `java.lang.Throwable` @[L3b8fde..L3b8ff4] goto L3b8ff6;
}
procedure `tb.l` `a`(`java.lang.Class` v0 @kind object) @signature `Lkotlinx/coroutines/internal/j;.a:(Ljava/lang/Class;)Ltb/l;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L3b8e94.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/internal/j;.b:(Ljava/lang/Class;)Ltb/l;` @kind static;
  #L3b8e9a.  v0:= temp @kind object;
  #L3b8e9c.  return v0 @kind object;
}
procedure `tb.l` `b`(`java.lang.Class` v3 @kind object) @signature `Lkotlinx/coroutines/internal/j;.b:(Ljava/lang/Class;)Ltb/l;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3b8eb0.  v0:= `@@kotlinx.coroutines.internal.j$b.o` @type ^`kotlinx.coroutines.internal.j$b` @kind object;
  #L3b8eb4.  v1:= `@@kotlinx.coroutines.internal.j.a` @type ^`int`;
  #L3b8eb8.  v2:= 0I;
  #L3b8eba.  call temp:= `f`(v3, v2) @signature `Lkotlinx/coroutines/internal/j;.f:(Ljava/lang/Class;I)I` @kind static;
  #L3b8ec0.  v2:= temp;
  #L3b8ec2.  if v1 == v2 then goto L3b8ec8;
  #L3b8ec6.  return v0 @kind object;
  #L3b8ec8.  call temp:= `getConstructors`(v3) @signature `Ljava/lang/Class;.getConstructors:()[Ljava/lang/reflect/Constructor;` @kind virtual;
  #L3b8ece.  v3:= temp @kind object;
  #L3b8ed0.  v1:= new `kotlinx.coroutines.internal.j$a`;
  #L3b8ed4.  call `<init>`(v1) @signature `Lkotlinx/coroutines/internal/j$a;.<init>:()V` @kind direct;
  #L3b8eda.  call temp:= `p`(v3, v1) @signature `Lkb/b;.p:([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/List;` @kind static;
  #L3b8ee0.  v3:= temp @kind object;
  #L3b8ee2.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3b8ee8.  v3:= temp @kind object;
  #L3b8eea.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3b8ef0.  v1:= temp;
  #L3b8ef2.  if v1 == 0 then goto L3b8f10;
  #L3b8ef6.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3b8efc.  v1:= temp @kind object;
  #L3b8efe.  v1:= (`java.lang.reflect.Constructor`) v1 @kind object;
  #L3b8f02.  call temp:= `c`(v1) @signature `Lkotlinx/coroutines/internal/j;.c:(Ljava/lang/reflect/Constructor;)Ltb/l;` @kind static;
  #L3b8f08.  v1:= temp @kind object;
  #L3b8f0a.  if v1 == 0 then goto L3b8eea;
  #L3b8f0e.  return v1 @kind object;
  #L3b8f10.  return v0 @kind object;
}
procedure `tb.l` `c`(`java.lang.reflect.Constructor` v7 @kind object) @signature `Lkotlinx/coroutines/internal/j;.c:(Ljava/lang/reflect/Constructor;)Ltb/l;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3b8f24.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L3b8f28.  call temp:= `getParameterTypes`(v7) @signature `Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L3b8f2e.  v1:= temp @kind object;
  #L3b8f30.  v2:= length @variable v1;
  #L3b8f32.  v3:= 0I;
  #L3b8f34.  if v2 == 0 then goto L3b8fb0;
  #L3b8f38.  v4:= 0I;
  #L3b8f3a.  v5:= 1I;
  #L3b8f3c.  if v2 == v5 then goto L3b8f78;
  #L3b8f40.  v6:= 2I;
  #L3b8f42.  if v2 == v6 then goto L3b8f48;
  #L3b8f46.  goto L3b8fba;
  #L3b8f48.  v2:= v1[v4] @kind object;
  #L3b8f4c.  call temp:= `a`(v2, v0) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3b8f52.  v0:= temp;
  #L3b8f54.  if v0 == 0 then goto L3b8fba;
  #L3b8f58.  v0:= v1[v5] @kind object;
  #L3b8f5c.  v1:= constclass @type ^`java.lang.Throwable` @kind object;
  #L3b8f60.  call temp:= `a`(v0, v1) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3b8f66.  v0:= temp;
  #L3b8f68.  if v0 == 0 then goto L3b8fba;
  #L3b8f6c.  v3:= new `kotlinx.coroutines.internal.j$c`;
  #L3b8f70.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/j$c;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L3b8f76.  goto L3b8fba;
  #L3b8f78.  v1:= v1[v4] @kind object;
  #L3b8f7c.  v2:= constclass @type ^`java.lang.Throwable` @kind object;
  #L3b8f80.  call temp:= `a`(v1, v2) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3b8f86.  v2:= temp;
  #L3b8f88.  if v2 == 0 then goto L3b8f98;
  #L3b8f8c.  v3:= new `kotlinx.coroutines.internal.j$d`;
  #L3b8f90.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/j$d;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L3b8f96.  goto L3b8fba;
  #L3b8f98.  call temp:= `a`(v1, v0) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3b8f9e.  v0:= temp;
  #L3b8fa0.  if v0 == 0 then goto L3b8fba;
  #L3b8fa4.  v3:= new `kotlinx.coroutines.internal.j$e`;
  #L3b8fa8.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/j$e;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L3b8fae.  goto L3b8fba;
  #L3b8fb0.  v3:= new `kotlinx.coroutines.internal.j$f`;
  #L3b8fb4.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/j$f;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L3b8fba.  return v3 @kind object;
}
procedure `int` `d`(`java.lang.Class` v5 @kind object, `int` v6 ) @signature `Lkotlinx/coroutines/internal/j;.d:(Ljava/lang/Class;I)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3b8d30.  call temp:= `getDeclaredFields`(v5) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L3b8d36.  v0:= temp @kind object;
  #L3b8d38.  v1:= length @variable v0;
  #L3b8d3a.  v2:= 0I;
  #L3b8d3c.  v3:= 0I;
  #L3b8d3e.  if v2 >= v1 then goto L3b8d68;
  #L3b8d42.  v4:= v0[v2] @kind object;
  #L3b8d46.  call temp:= `getModifiers`(v4) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L3b8d4c.  v4:= temp;
  #L3b8d4e.  call temp:= `isStatic`(v4) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L3b8d54.  v4:= temp;
  #L3b8d56.  v4:= v4 ^~ 1;
  #L3b8d5a.  if v4 == 0 then goto L3b8d62;
  #L3b8d5e.  v3:= v3 + 1;
  #L3b8d62.  v2:= v2 + 1;
  #L3b8d66.  goto L3b8d3e;
  #L3b8d68.  v6:= v6 + v3 @kind int;
  #L3b8d6a.  call temp:= `getSuperclass`(v5) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L3b8d70.  v5:= temp @kind object;
  #L3b8d72.  if v5 != 0 then goto L3b8d30;
  #L3b8d76.  return v6;
}
procedure `int` `e`(`java.lang.Class` v0 @kind object, `int` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/internal/j;.e:(Ljava/lang/Class;IILjava/lang/Object;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3b8d0c.  v2:= v2 ^& 1;
  #L3b8d10.  if v2 == 0 then goto L3b8d16;
  #L3b8d14.  v1:= 0I;
  #L3b8d16.  call temp:= `d`(v0, v1) @signature `Lkotlinx/coroutines/internal/j;.d:(Ljava/lang/Class;I)I` @kind static;
  #L3b8d1c.  v0:= temp;
  #L3b8d1e.  return v0;
}
procedure `int` `f`(`java.lang.Class` v3 @kind object, `int` v4 ) @signature `Lkotlinx/coroutines/internal/j;.f:(Ljava/lang/Class;I)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3b8d88.  call temp:= `c`(v3) @signature `Lsb/a;.c:(Ljava/lang/Class;)Lxb/c;` @kind static;
  #L3b8d8e.  v0:= `@@jb.m.o` @type ^`jb.m$a` @kind object;
  #L3b8d92.  v0:= 0I;
  #L3b8d94.  v1:= 1I;
  #L3b8d96.  v2:= 0I;
  #L3b8d98.  call temp:= `e`(v3, v0, v1, v2) @signature `Lkotlinx/coroutines/internal/j;.e:(Ljava/lang/Class;IILjava/lang/Object;)I` @kind static;
  #L3b8d9e.  v3:= temp;
  #L3b8da0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b8da6.  v3:= temp @kind object;
  #L3b8da8.  call temp:= `a`(v3) @signature `Ljb/m;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b8dae.  v3:= temp @kind object;
  #L3b8db0.  goto L3b8dc8;
  #L3b8db2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b8db4.  v0:= `@@jb.m.o` @type ^`jb.m$a` @kind object;
  #L3b8db8.  call temp:= `a`(v3) @signature `Ljb/n;.a:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L3b8dbe.  v3:= temp @kind object;
  #L3b8dc0.  call temp:= `a`(v3) @signature `Ljb/m;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b8dc6.  v3:= temp @kind object;
  #L3b8dc8.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b8dce.  v4:= temp @kind object;
  #L3b8dd0.  call temp:= `c`(v3) @signature `Ljb/m;.c:(Ljava/lang/Object;)Z` @kind static;
  #L3b8dd6.  v0:= temp;
  #L3b8dd8.  if v0 == 0 then goto L3b8dde;
  #L3b8ddc.  v3:= v4 @kind object;
  #L3b8dde.  v3:= (`java.lang.Number`) v3 @kind object;
  #L3b8de2.  call temp:= `intValue`(v3) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3b8de8.  v3:= temp;
  #L3b8dea.  return v3;
  catch `java.lang.Throwable` @[L3b8d8e..L3b8db0] goto L3b8db2;
}
procedure `java.lang.Throwable` `g`(`java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/internal/j;.g:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3b8e08.  v0:= instanceof @variable v2 @type ^`ac.b0` @kind boolean;
  #L3b8e0c.  if v0 == 0 then goto L3b8e54;
  #L3b8e10.  v0:= `@@jb.m.o` @type ^`jb.m$a` @kind object;
  #L3b8e14.  v2:= (`ac.b0`) v2 @kind object;
  #L3b8e18.  call temp:= `a`(v2) @signature `Lac/b0;.a:()Ljava/lang/Throwable;` @kind interface;
  #L3b8e1e.  v2:= temp @kind object;
  #L3b8e20.  call temp:= `a`(v2) @signature `Ljb/m;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b8e26.  v2:= temp @kind object;
  #L3b8e28.  goto L3b8e40;
  #L3b8e2a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b8e2c.  v0:= `@@jb.m.o` @type ^`jb.m$a` @kind object;
  #L3b8e30.  call temp:= `a`(v2) @signature `Ljb/n;.a:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L3b8e36.  v2:= temp @kind object;
  #L3b8e38.  call temp:= `a`(v2) @signature `Ljb/m;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b8e3e.  v2:= temp @kind object;
  #L3b8e40.  call temp:= `c`(v2) @signature `Ljb/m;.c:(Ljava/lang/Object;)Z` @kind static;
  #L3b8e46.  v0:= temp;
  #L3b8e48.  if v0 == 0 then goto L3b8e4e;
  #L3b8e4c.  v2:= 0I;
  #L3b8e4e.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L3b8e52.  return v2 @kind object;
  #L3b8e54.  v0:= `@@kotlinx.coroutines.internal.j.b` @type ^`kotlinx.coroutines.internal.g` @kind object;
  #L3b8e58.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3b8e5e.  v1:= temp @kind object;
  #L3b8e60.  call temp:= `a`(v0, v1) @signature `Lkotlinx/coroutines/internal/g;.a:(Ljava/lang/Class;)Ltb/l;` @kind virtual;
  #L3b8e66.  v0:= temp @kind object;
  #L3b8e68.  call temp:= `invoke`(v0, v2) @signature `Ltb/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3b8e6e.  v2:= temp @kind object;
  #L3b8e70.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L3b8e74.  return v2 @kind object;
  catch `java.lang.Throwable` @[L3b8e10..L3b8e28] goto L3b8e2a;
}
