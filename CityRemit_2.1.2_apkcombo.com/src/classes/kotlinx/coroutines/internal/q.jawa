record `kotlinx.coroutines.internal.q` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.Object` `@@kotlinx.coroutines.internal.q.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3b9984.  v0:= new `kotlinx.coroutines.internal.f0`;
  #L3b9988.  v1:= "CONDITION_FALSE" @kind object;
  #L3b998c.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/f0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b9992.  `@@kotlinx.coroutines.internal.q.a` @type ^`java.lang.Object` := v0 @kind object;
  #L3b9996.  v0:= new `kotlinx.coroutines.internal.f0`;
  #L3b999a.  v1:= "LIST_EMPTY" @kind object;
  #L3b999e.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/f0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b99a4.  return @kind void;
}
procedure `java.lang.Object` `a`() @signature `Lkotlinx/coroutines/internal/q;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3b9934.  v0:= `@@kotlinx.coroutines.internal.q.a` @type ^`java.lang.Object` @kind object;
  #L3b9938.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.r` `b`(`java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/internal/q;.b:(Ljava/lang/Object;)Lkotlinx/coroutines/internal/r;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3b994c.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.internal.b0` @kind boolean;
  #L3b9950.  if v0 == 0 then goto L3b995c;
  #L3b9954.  v0:= v1 @kind object;
  #L3b9956.  v0:= (`kotlinx.coroutines.internal.b0`) v0 @kind object;
  #L3b995a.  goto L3b995e;
  #L3b995c.  v0:= 0I;
  #L3b995e.  if v0 == 0 then goto L3b996a;
  #L3b9962.  v0:= v0.`kotlinx.coroutines.internal.b0.a` @type ^`kotlinx.coroutines.internal.r` @kind object;
  #L3b9966.  if v0 != 0 then goto L3b9970;
  #L3b996a.  v0:= v1 @kind object;
  #L3b996c.  v0:= (`kotlinx.coroutines.internal.r`) v0 @kind object;
  #L3b9970.  return v0 @kind object;
}
