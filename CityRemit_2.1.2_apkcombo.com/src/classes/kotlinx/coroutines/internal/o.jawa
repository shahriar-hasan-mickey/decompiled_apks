record `kotlinx.coroutines.internal.o` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`int` v2 ) @signature `Lkotlinx/coroutines/internal/o;.a:(I)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3b96d4.  v0:= 1I;
  #L3b96d6.  if v2 < v0 then goto L3b96dc;
  #L3b96da.  goto L3b96de;
  #L3b96dc.  v0:= 0I;
  #L3b96de.  if v0 == 0 then goto L3b96e4;
  #L3b96e2.  return @kind void;
  #L3b96e4.  v0:= new `java.lang.StringBuilder`;
  #L3b96e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b96ee.  v1:= "Expected positive parallelism level, but got " @kind object;
  #L3b96f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b96f8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b96fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b9704.  v2:= temp @kind object;
  #L3b9706.  v0:= new `java.lang.IllegalArgumentException`;
  #L3b970a.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b9710.  v2:= temp @kind object;
  #L3b9712.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b9718.  throw v0;
}
