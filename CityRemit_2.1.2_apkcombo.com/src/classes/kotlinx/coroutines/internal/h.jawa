record `kotlinx.coroutines.internal.h` @kind class @AccessFlag PUBLIC_FINAL extends `ac.w0` @kind class, `kotlin.coroutines.jvm.internal.e` @kind interface, `mb.d` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.internal.h._reusableCancellableContinuation` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `ac.d0` `kotlinx.coroutines.internal.h.r` @AccessFlag PUBLIC_FINAL;
  `mb.d` `kotlinx.coroutines.internal.h.s` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `kotlinx.coroutines.internal.h.t` @AccessFlag PUBLIC;
  `java.lang.Object` `kotlinx.coroutines.internal.h.u` @AccessFlag PUBLIC_FINAL;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.internal.h.v` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3b871c.  v0:= constclass @type ^`kotlinx.coroutines.internal.h` @kind object;
  #L3b8720.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L3b8724.  v2:= "_reusableCancellableContinuation" @kind object;
  #L3b8728.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L3b872e.  v0:= temp @kind object;
  #L3b8730.  `@@kotlinx.coroutines.internal.h.v` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L3b8734.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.h` v1 @kind this, `ac.d0` v2 @kind object, `mb.d` v3 @kind object) @signature `Lkotlinx/coroutines/internal/h;.<init>:(Lac/d0;Lmb/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b8748.  v0:= -1I;
  #L3b874a.  call `<init>`(v1, v0) @signature `Lac/w0;.<init>:(I)V` @kind direct;
  #L3b8750.  v1.`kotlinx.coroutines.internal.h.r` @type ^`ac.d0` := v2 @kind object;
  #L3b8754.  v1.`kotlinx.coroutines.internal.h.s` @type ^`mb.d` := v3 @kind object;
  #L3b8758.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/i;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L3b875e.  v2:= temp @kind object;
  #L3b8760.  v1.`kotlinx.coroutines.internal.h.t` @type ^`java.lang.Object` := v2 @kind object;
  #L3b8764.  call temp:= `getContext`(v1) @signature `Lkotlinx/coroutines/internal/h;.getContext:()Lmb/g;` @kind virtual;
  #L3b876a.  v2:= temp @kind object;
  #L3b876c.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/internal/j0;.b:(Lmb/g;)Ljava/lang/Object;` @kind static;
  #L3b8772.  v2:= temp @kind object;
  #L3b8774.  v1.`kotlinx.coroutines.internal.h.u` @type ^`java.lang.Object` := v2 @kind object;
  #L3b8778.  v2:= 0I;
  #L3b877a.  v1.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` := v2 @kind object;
  #L3b877e.  return @kind void;
}
procedure `ac.l` `o`(`kotlinx.coroutines.internal.h` v2 @kind this) @signature `Lkotlinx/coroutines/internal/h;.o:()Lac/l;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L3b84bc.  v0:= v2.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L3b84c0.  v1:= instanceof @variable v0 @type ^`ac.l` @kind boolean;
  #L3b84c4.  if v1 == 0 then goto L3b84ce;
  #L3b84c8.  v0:= (`ac.l`) v0 @kind object;
  #L3b84cc.  goto L3b84d0;
  #L3b84ce.  v0:= 0I;
  #L3b84d0.  return v0 @kind object;
}
procedure `void` `a`(`kotlinx.coroutines.internal.h` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/internal/h;.a:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b87b0.  v0:= instanceof @variable v2 @type ^`ac.w` @kind boolean;
  #L3b87b4.  if v0 == 0 then goto L3b87c6;
  #L3b87b8.  v2:= (`ac.w`) v2 @kind object;
  #L3b87bc.  v2:= v2.`ac.w.b` @type ^`tb.l` @kind object;
  #L3b87c0.  call temp:= `invoke`(v2, v3) @signature `Ltb/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3b87c6.  return @kind void;
}
procedure `mb.d` `c`(`kotlinx.coroutines.internal.h` v0 @kind this) @signature `Lkotlinx/coroutines/internal/h;.c:()Lmb/d;` @AccessFlag PUBLIC {
    temp;

  #L3b86e8.  return v0 @kind object;
}
procedure `kotlin.coroutines.jvm.internal.e` `getCallerFrame`(`kotlinx.coroutines.internal.h` v2 @kind this) @signature `Lkotlinx/coroutines/internal/h;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b86c0.  v0:= v2.`kotlinx.coroutines.internal.h.s` @type ^`mb.d` @kind object;
  #L3b86c4.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.e` @kind boolean;
  #L3b86c8.  if v1 == 0 then goto L3b86d2;
  #L3b86cc.  v0:= (`kotlin.coroutines.jvm.internal.e`) v0 @kind object;
  #L3b86d0.  goto L3b86d4;
  #L3b86d2.  v0:= 0I;
  #L3b86d4.  return v0 @kind object;
}
procedure `mb.g` `getContext`(`kotlinx.coroutines.internal.h` v1 @kind this) @signature `Lkotlinx/coroutines/internal/h;.getContext:()Lmb/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b86fc.  v0:= v1.`kotlinx.coroutines.internal.h.s` @type ^`mb.d` @kind object;
  #L3b8700.  call temp:= `getContext`(v0) @signature `Lmb/d;.getContext:()Lmb/g;` @kind interface;
  #L3b8706.  v0:= temp @kind object;
  #L3b8708.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.internal.h` v1 @kind this) @signature `Lkotlinx/coroutines/internal/h;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b85b0.  v0:= 0I;
  #L3b85b2.  return v0 @kind object;
}
procedure `java.lang.Object` `i`(`kotlinx.coroutines.internal.h` v2 @kind this) @signature `Lkotlinx/coroutines/internal/h;.i:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b855c.  v0:= v2.`kotlinx.coroutines.internal.h.t` @type ^`java.lang.Object` @kind object;
  #L3b8560.  call temp:= `a`() @signature `Lac/p0;.a:()Z` @kind static;
  #L3b8566.  v1:= temp;
  #L3b8568.  if v1 == 0 then goto L3b8590;
  #L3b856c.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/i;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L3b8572.  v1:= temp @kind object;
  #L3b8574.  if v0 == v1 then goto L3b857c;
  #L3b8578.  v1:= 1I;
  #L3b857a.  goto L3b857e;
  #L3b857c.  v1:= 0I;
  #L3b857e.  if v1 == 0 then goto L3b8584;
  #L3b8582.  goto L3b8590;
  #L3b8584.  v0:= new `java.lang.AssertionError`;
  #L3b8588.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3b858e.  throw v0;
  #L3b8590.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/i;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L3b8596.  v1:= temp @kind object;
  #L3b8598.  v2.`kotlinx.coroutines.internal.h.t` @type ^`java.lang.Object` := v1 @kind object;
  #L3b859c.  return v0 @kind object;
}
procedure `void` `k`(`kotlinx.coroutines.internal.h` v2 @kind this) @signature `Lkotlinx/coroutines/internal/h;.k:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3b8790.  v0:= v2.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L3b8794.  v1:= `@@kotlinx.coroutines.internal.i.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L3b8798.  if v0 == v1 then goto L3b8790;
  #L3b879c.  return @kind void;
}
procedure `ac.l` `n`(`kotlinx.coroutines.internal.h` v4 @kind this) @signature `Lkotlinx/coroutines/internal/h;.n:()Lac/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b842c.  v0:= v4.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L3b8430.  if v0 != 0 then goto L3b8440;
  #L3b8434.  v0:= `@@kotlinx.coroutines.internal.i.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L3b8438.  v4.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` := v0 @kind object;
  #L3b843c.  v0:= 0I;
  #L3b843e.  return v0 @kind object;
  #L3b8440.  v1:= instanceof @variable v0 @type ^`ac.l` @kind boolean;
  #L3b8444.  if v1 == 0 then goto L3b8462;
  #L3b8448.  v1:= `@@kotlinx.coroutines.internal.h.v` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L3b844c.  v2:= `@@kotlinx.coroutines.internal.i.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L3b8450.  call temp:= `compareAndSet`(v1, v4, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3b8456.  v1:= temp;
  #L3b8458.  if v1 == 0 then goto L3b842c;
  #L3b845c.  v0:= (`ac.l`) v0 @kind object;
  #L3b8460.  return v0 @kind object;
  #L3b8462.  v1:= `@@kotlinx.coroutines.internal.i.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L3b8466.  if v0 == v1 then goto L3b842c;
  #L3b846a.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L3b846e.  if v1 == 0 then goto L3b8474;
  #L3b8472.  goto L3b842c;
  #L3b8474.  v1:= new `java.lang.IllegalStateException`;
  #L3b8478.  v2:= new `java.lang.StringBuilder`;
  #L3b847c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b8482.  v3:= "Inconsistent state " @kind object;
  #L3b8486.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b848c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b8492.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b8498.  v0:= temp @kind object;
  #L3b849a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b84a0.  v0:= temp @kind object;
  #L3b84a2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b84a8.  throw v1;
}
procedure `boolean` `p`(`kotlinx.coroutines.internal.h` v1 @kind this) @signature `Lkotlinx/coroutines/internal/h;.p:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3b84e4.  v0:= v1.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L3b84e8.  if v0 == 0 then goto L3b84f0;
  #L3b84ec.  v0:= 1I;
  #L3b84ee.  goto L3b84f2;
  #L3b84f0.  v0:= 0I;
  #L3b84f2.  return v0;
}
procedure `boolean` `q`(`kotlinx.coroutines.internal.h` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/internal/h;.q:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b8504.  v0:= v4.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L3b8508.  v1:= `@@kotlinx.coroutines.internal.i.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L3b850c.  call temp:= `a`(v0, v1) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3b8512.  v2:= temp;
  #L3b8514.  v3:= 1I;
  #L3b8516.  if v2 == 0 then goto L3b852c;
  #L3b851a.  v0:= `@@kotlinx.coroutines.internal.h.v` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L3b851e.  call temp:= `compareAndSet`(v0, v4, v1, v5) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3b8524.  v0:= temp;
  #L3b8526.  if v0 == 0 then goto L3b8504;
  #L3b852a.  return v3;
  #L3b852c.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L3b8530.  if v1 == 0 then goto L3b8536;
  #L3b8534.  return v3;
  #L3b8536.  v1:= `@@kotlinx.coroutines.internal.h.v` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L3b853a.  v2:= 0I;
  #L3b853c.  call temp:= `compareAndSet`(v1, v4, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3b8542.  v0:= temp;
  #L3b8544.  if v0 == 0 then goto L3b8504;
  #L3b8548.  v5:= 0I;
  #L3b854a.  return v5;
}
procedure `void` `r`(`kotlinx.coroutines.internal.h` v1 @kind this) @signature `Lkotlinx/coroutines/internal/h;.r:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3b87d8.  call `k`(v1) @signature `Lkotlinx/coroutines/internal/h;.k:()V` @kind virtual;
  #L3b87de.  call temp:= `o`(v1) @signature `Lkotlinx/coroutines/internal/h;.o:()Lac/l;` @kind direct;
  #L3b87e4.  v0:= temp @kind object;
  #L3b87e6.  if v0 == 0 then goto L3b87f0;
  #L3b87ea.  call `s`(v0) @signature `Lac/l;.s:()V` @kind virtual;
  #L3b87f0.  return @kind void;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.internal.h` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/internal/h;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b8804.  v0:= v6.`kotlinx.coroutines.internal.h.s` @type ^`mb.d` @kind object;
  #L3b8808.  call temp:= `getContext`(v0) @signature `Lmb/d;.getContext:()Lmb/g;` @kind interface;
  #L3b880e.  v0:= temp @kind object;
  #L3b8810.  v1:= 0I;
  #L3b8812.  v2:= 1I;
  #L3b8814.  call temp:= `d`(v7, v1, v2, v1) @signature `Lac/z;.d:(Ljava/lang/Object;Ltb/l;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b881a.  v3:= temp @kind object;
  #L3b881c.  v4:= v6.`kotlinx.coroutines.internal.h.r` @type ^`ac.d0` @kind object;
  #L3b8820.  call temp:= `b0`(v4, v0) @signature `Lac/d0;.b0:(Lmb/g;)Z` @kind virtual;
  #L3b8826.  v4:= temp;
  #L3b8828.  v5:= 0I;
  #L3b882a.  if v4 == 0 then goto L3b8842;
  #L3b882e.  v6.`kotlinx.coroutines.internal.h.t` @type ^`java.lang.Object` := v3 @kind object;
  #L3b8832.  v6.`ac.w0.q` @type ^`int` := v5;
  #L3b8836.  v7:= v6.`kotlinx.coroutines.internal.h.r` @type ^`ac.d0` @kind object;
  #L3b883a.  call `a0`(v7, v0, v6) @signature `Lac/d0;.a0:(Lmb/g;Ljava/lang/Runnable;)V` @kind virtual;
  #L3b8840.  goto L3b88c6;
  #L3b8842.  call temp:= `a`() @signature `Lac/p0;.a:()Z` @kind static;
  #L3b8848.  v0:= temp;
  #L3b884a.  v0:= `@@ac.i2.a` @type ^`ac.i2` @kind object;
  #L3b884e.  call temp:= `a`(v0) @signature `Lac/i2;.a:()Lac/c1;` @kind virtual;
  #L3b8854.  v0:= temp @kind object;
  #L3b8856.  call temp:= `j0`(v0) @signature `Lac/c1;.j0:()Z` @kind virtual;
  #L3b885c.  v4:= temp;
  #L3b885e.  if v4 == 0 then goto L3b8872;
  #L3b8862.  v6.`kotlinx.coroutines.internal.h.t` @type ^`java.lang.Object` := v3 @kind object;
  #L3b8866.  v6.`ac.w0.q` @type ^`int` := v5;
  #L3b886a.  call `f0`(v0, v6) @signature `Lac/c1;.f0:(Lac/w0;)V` @kind virtual;
  #L3b8870.  goto L3b88c6;
  #L3b8872.  call `h0`(v0, v2) @signature `Lac/c1;.h0:(Z)V` @kind virtual;
  #L3b8878.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/h;.getContext:()Lmb/g;` @kind virtual;
  #L3b887e.  v3:= temp @kind object;
  #L3b8880.  v4:= v6.`kotlinx.coroutines.internal.h.u` @type ^`java.lang.Object` @kind object;
  #L3b8884.  call temp:= `c`(v3, v4) @signature `Lkotlinx/coroutines/internal/j0;.c:(Lmb/g;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b888a.  v4:= temp @kind object;
  #L3b888c.  v5:= v6.`kotlinx.coroutines.internal.h.s` @type ^`mb.d` @kind object;
  #L3b8890.  call `resumeWith`(v5, v7) @signature `Lmb/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L3b8896.  v7:= `@@jb.s.a` @type ^`jb.s` @kind object;
  #L3b889a.  call `a`(v3, v4) @signature `Lkotlinx/coroutines/internal/j0;.a:(Lmb/g;Ljava/lang/Object;)V` @kind static;
  #L3b88a0.  call temp:= `l0`(v0) @signature `Lac/c1;.l0:()Z` @kind virtual;
  #L3b88a6.  v7:= temp;
  #L3b88a8.  if v7 != 0 then goto L3b88a0;
  #L3b88ac.  goto L3b88c0;
  #L3b88ae.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b88b0.  call `a`(v3, v4) @signature `Lkotlinx/coroutines/internal/j0;.a:(Lmb/g;Ljava/lang/Object;)V` @kind static;
  #L3b88b6.  throw v7;
  #L3b88b8.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b88ba.  call `h`(v6, v7, v1) @signature `Lac/w0;.h:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L3b88c0.  call `d0`(v0, v2) @signature `Lac/c1;.d0:(Z)V` @kind virtual;
  #L3b88c6.  return @kind void;
  #L3b88c8.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b88ca.  call `d0`(v0, v2) @signature `Lac/c1;.d0:(Z)V` @kind virtual;
  #L3b88d0.  throw v7;
  catch `java.lang.Throwable` @[L3b8878..L3b888c] goto L3b88b8;
  catch `java.lang.Throwable` @[L3b888c..L3b889a] goto L3b88ae;
  catch `java.lang.Throwable` @[L3b889a..L3b88b8] goto L3b88b8;
  catch `java.lang.Throwable` @[L3b88ba..L3b88c0] goto L3b88c8;
}
procedure `java.lang.Throwable` `s`(`kotlinx.coroutines.internal.h` v3 @kind this, `ac.k` v4 @kind object) @signature `Lkotlinx/coroutines/internal/h;.s:(Lac/k;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3b8624.  v0:= v3.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L3b8628.  v1:= `@@kotlinx.coroutines.internal.i.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L3b862c.  v2:= 0I;
  #L3b862e.  if v0 != v1 then goto L3b8644;
  #L3b8632.  v0:= `@@kotlinx.coroutines.internal.h.v` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L3b8636.  call temp:= `compareAndSet`(v0, v3, v1, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3b863c.  v0:= temp;
  #L3b863e.  if v0 == 0 then goto L3b8624;
  #L3b8642.  return v2 @kind object;
  #L3b8644.  v4:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L3b8648.  if v4 == 0 then goto L3b867a;
  #L3b864c.  v4:= `@@kotlinx.coroutines.internal.h.v` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L3b8650.  call temp:= `compareAndSet`(v4, v3, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3b8656.  v4:= temp;
  #L3b8658.  if v4 == 0 then goto L3b8662;
  #L3b865c.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L3b8660.  return v0 @kind object;
  #L3b8662.  v4:= new `java.lang.IllegalArgumentException`;
  #L3b8666.  v0:= "Failed requirement." @kind object;
  #L3b866a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b8670.  v0:= temp @kind object;
  #L3b8672.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b8678.  throw v4;
  #L3b867a.  v4:= new `java.lang.IllegalStateException`;
  #L3b867e.  v1:= new `java.lang.StringBuilder`;
  #L3b8682.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b8688.  v2:= "Inconsistent state " @kind object;
  #L3b868c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b8692.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b8698.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b869e.  v0:= temp @kind object;
  #L3b86a0.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b86a6.  v0:= temp @kind object;
  #L3b86a8.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b86ae.  throw v4;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.internal.h` v2 @kind this) @signature `Lkotlinx/coroutines/internal/h;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b85c4.  v0:= new `java.lang.StringBuilder`;
  #L3b85c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b85ce.  v1:= "DispatchedContinuation[" @kind object;
  #L3b85d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b85d8.  v1:= v2.`kotlinx.coroutines.internal.h.r` @type ^`ac.d0` @kind object;
  #L3b85dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b85e2.  v1:= ", " @kind object;
  #L3b85e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b85ec.  v1:= v2.`kotlinx.coroutines.internal.h.s` @type ^`mb.d` @kind object;
  #L3b85f0.  call temp:= `c`(v1) @signature `Lac/q0;.c:(Lmb/d;)Ljava/lang/String;` @kind static;
  #L3b85f6.  v1:= temp @kind object;
  #L3b85f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b85fe.  v1:= 93I;
  #L3b8602.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b8608.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b860e.  v0:= temp @kind object;
  #L3b8610.  return v0 @kind object;
}
