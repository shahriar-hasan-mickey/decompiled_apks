record `kotlinx.coroutines.internal.n` @kind class @AccessFlag PUBLIC_FINAL extends `ac.d0` @kind class, `java.lang.Runnable` @kind interface, `ac.t0` @kind interface {
  `ac.d0` `kotlinx.coroutines.internal.n.q` @AccessFlag PRIVATE_FINAL;
  `int` `kotlinx.coroutines.internal.n.r` @AccessFlag PRIVATE_FINAL;
  `int` `kotlinx.coroutines.internal.n.runningWorkers` @AccessFlag PRIVATE_VOLATILE;
  `ac.t0` `kotlinx.coroutines.internal.n.s` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
  `kotlinx.coroutines.internal.s` `kotlinx.coroutines.internal.n.t` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `kotlinx.coroutines.internal.n.u` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.n` v0 @kind this, `ac.d0` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/internal/n;.<init>:(Lac/d0;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b97b0.  call `<init>`(v0) @signature `Lac/d0;.<init>:()V` @kind direct;
  #L3b97b6.  v0.`kotlinx.coroutines.internal.n.q` @type ^`ac.d0` := v1 @kind object;
  #L3b97ba.  v0.`kotlinx.coroutines.internal.n.r` @type ^`int` := v2;
  #L3b97be.  v2:= instanceof @variable v1 @type ^`ac.t0` @kind boolean;
  #L3b97c2.  if v2 == 0 then goto L3b97cc;
  #L3b97c6.  v1:= (`ac.t0`) v1 @kind object;
  #L3b97ca.  goto L3b97ce;
  #L3b97cc.  v1:= 0I;
  #L3b97ce.  if v1 != 0 then goto L3b97da;
  #L3b97d2.  call temp:= `a`() @signature `Lac/s0;.a:()Lac/t0;` @kind static;
  #L3b97d8.  v1:= temp @kind object;
  #L3b97da.  v0.`kotlinx.coroutines.internal.n.s` @type ^`ac.t0` := v1 @kind object;
  #L3b97de.  v1:= new `kotlinx.coroutines.internal.s`;
  #L3b97e2.  v2:= 0I;
  #L3b97e4.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/internal/s;.<init>:(Z)V` @kind direct;
  #L3b97ea.  v0.`kotlinx.coroutines.internal.n.t` @type ^`kotlinx.coroutines.internal.s` := v1 @kind object;
  #L3b97ee.  v1:= new `java.lang.Object`;
  #L3b97f2.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b97f8.  v0.`kotlinx.coroutines.internal.n.u` @type ^`java.lang.Object` := v1 @kind object;
  #L3b97fc.  return @kind void;
}
procedure `boolean` `d0`(`kotlinx.coroutines.internal.n` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/internal/n;.d0:(Ljava/lang/Runnable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L3b972c.  v0:= v1.`kotlinx.coroutines.internal.n.t` @type ^`kotlinx.coroutines.internal.s` @kind object;
  #L3b9730.  call temp:= `a`(v0, v2) @signature `Lkotlinx/coroutines/internal/s;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b9736.  v2:= v1.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int`;
  #L3b973a.  v0:= v1.`kotlinx.coroutines.internal.n.r` @type ^`int`;
  #L3b973e.  if v2 < v0 then goto L3b9746;
  #L3b9742.  v2:= 1I;
  #L3b9744.  goto L3b9748;
  #L3b9746.  v2:= 0I;
  #L3b9748.  return v2;
}
procedure `boolean` `e0`(`kotlinx.coroutines.internal.n` v3 @kind this) @signature `Lkotlinx/coroutines/internal/n;.e0:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3b975c.  v0:= v3.`kotlinx.coroutines.internal.n.u` @type ^`java.lang.Object` @kind object;
  #L3b9760.  @monitorenter v0
  #L3b9762.  v1:= v3.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int`;
  #L3b9766.  v2:= v3.`kotlinx.coroutines.internal.n.r` @type ^`int`;
  #L3b976a.  if v1 < v2 then goto L3b9774;
  #L3b976e.  v1:= 0I;
  #L3b9770.  @monitorexit v0
  #L3b9772.  return v1;
  #L3b9774.  v1:= v3.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int`;
  #L3b9778.  v2:= 1I;
  #L3b977a.  v1:= v1 + v2 @kind int;
  #L3b977c.  v3.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int` := v1;
  #L3b9780.  @monitorexit v0
  #L3b9782.  return v2;
  #L3b9784.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b9786.  @monitorexit v0
  #L3b9788.  throw v1;
  catch `java.lang.Throwable` @[L3b9762..L3b976a] goto L3b9784;
  catch `java.lang.Throwable` @[L3b9774..L3b9780] goto L3b9784;
}
procedure `void` `a0`(`kotlinx.coroutines.internal.n` v0 @kind this, `mb.g` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/internal/n;.a0:(Lmb/g;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;

  #L3b9810.  call temp:= `d0`(v0, v2) @signature `Lkotlinx/coroutines/internal/n;.d0:(Ljava/lang/Runnable;)Z` @kind direct;
  #L3b9816.  v1:= temp;
  #L3b9818.  if v1 != 0 then goto L3b9832;
  #L3b981c.  call temp:= `e0`(v0) @signature `Lkotlinx/coroutines/internal/n;.e0:()Z` @kind direct;
  #L3b9822.  v1:= temp;
  #L3b9824.  if v1 == 0 then goto L3b9832;
  #L3b9828.  v1:= v0.`kotlinx.coroutines.internal.n.q` @type ^`ac.d0` @kind object;
  #L3b982c.  call `a0`(v1, v0, v0) @signature `Lac/d0;.a0:(Lmb/g;Ljava/lang/Runnable;)V` @kind virtual;
  #L3b9832.  return @kind void;
}
procedure `void` `run`(`kotlinx.coroutines.internal.n` v4 @kind this) @signature `Lkotlinx/coroutines/internal/n;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b9844.  v0:= 0I;
  #L3b9846.  v1:= 0I;
  #L3b9848.  v2:= v4.`kotlinx.coroutines.internal.n.t` @type ^`kotlinx.coroutines.internal.s` @kind object;
  #L3b984c.  call temp:= `d`(v2) @signature `Lkotlinx/coroutines/internal/s;.d:()Ljava/lang/Object;` @kind virtual;
  #L3b9852.  v2:= temp @kind object;
  #L3b9854.  v2:= (`java.lang.Runnable`) v2 @kind object;
  #L3b9858.  if v2 == 0 then goto L3b9898;
  #L3b985c.  call `run`(v2) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L3b9862.  goto L3b9870;
  #L3b9864.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b9866.  v3:= `@@mb.h.o` @type ^`mb.h` @kind object;
  #L3b986a.  call `a`(v3, v2) @signature `Lac/h0;.a:(Lmb/g;Ljava/lang/Throwable;)V` @kind static;
  #L3b9870.  v1:= v1 + 1;
  #L3b9874.  v2:= 16I;
  #L3b9878.  if v1 < v2 then goto L3b9848;
  #L3b987c.  v2:= v4.`kotlinx.coroutines.internal.n.q` @type ^`ac.d0` @kind object;
  #L3b9880.  call temp:= `b0`(v2, v4) @signature `Lac/d0;.b0:(Lmb/g;)Z` @kind virtual;
  #L3b9886.  v2:= temp;
  #L3b9888.  if v2 == 0 then goto L3b9848;
  #L3b988c.  v0:= v4.`kotlinx.coroutines.internal.n.q` @type ^`ac.d0` @kind object;
  #L3b9890.  call `a0`(v0, v4, v4) @signature `Lac/d0;.a0:(Lmb/g;Ljava/lang/Runnable;)V` @kind virtual;
  #L3b9896.  return @kind void;
  #L3b9898.  v1:= v4.`kotlinx.coroutines.internal.n.u` @type ^`java.lang.Object` @kind object;
  #L3b989c.  @monitorenter v1
  #L3b989e.  v2:= v4.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int`;
  #L3b98a2.  v2:= v2 + -1;
  #L3b98a6.  v4.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int` := v2;
  #L3b98aa.  v2:= v4.`kotlinx.coroutines.internal.n.t` @type ^`kotlinx.coroutines.internal.s` @kind object;
  #L3b98ae.  call temp:= `c`(v2) @signature `Lkotlinx/coroutines/internal/s;.c:()I` @kind virtual;
  #L3b98b4.  v2:= temp;
  #L3b98b6.  if v2 != 0 then goto L3b98be;
  #L3b98ba.  @monitorexit v1
  #L3b98bc.  return @kind void;
  #L3b98be.  v2:= v4.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int`;
  #L3b98c2.  v2:= v2 + 1;
  #L3b98c6.  v4.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int` := v2;
  #L3b98ca.  v2:= `@@jb.s.a` @type ^`jb.s` @kind object;
  #L3b98ce.  @monitorexit v1
  #L3b98d0.  goto L3b9846;
  #L3b98d2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b98d4.  @monitorexit v1
  #L3b98d6.  throw v0;
  catch `java.lang.Throwable` @[L3b985c..L3b9862] goto L3b9864;
  catch `java.lang.Throwable` @[L3b989e..L3b98b6] goto L3b98d2;
  catch `java.lang.Throwable` @[L3b98be..L3b98ce] goto L3b98d2;
}
