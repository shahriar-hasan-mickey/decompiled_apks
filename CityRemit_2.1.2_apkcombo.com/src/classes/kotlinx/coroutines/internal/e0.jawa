record `kotlinx.coroutines.internal.e0` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@kotlinx.coroutines.internal.e0.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@kotlinx.coroutines.internal.e0.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/e0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3bb418.  v0:= `@@jb.m.o` @type ^`jb.m$a` @kind object;
  #L3bb41c.  v0:= "kotlin.coroutines.jvm.internal.a" @kind object;
  #L3bb420.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3bb426.  v0:= temp @kind object;
  #L3bb428.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L3bb42e.  v0:= temp @kind object;
  #L3bb430.  call temp:= `a`(v0) @signature `Ljb/m;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3bb436.  v0:= temp @kind object;
  #L3bb438.  goto L3bb450;
  #L3bb43a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3bb43c.  v1:= `@@jb.m.o` @type ^`jb.m$a` @kind object;
  #L3bb440.  call temp:= `a`(v0) @signature `Ljb/n;.a:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L3bb446.  v0:= temp @kind object;
  #L3bb448.  call temp:= `a`(v0) @signature `Ljb/m;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3bb44e.  v0:= temp @kind object;
  #L3bb450.  call temp:= `b`(v0) @signature `Ljb/m;.b:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L3bb456.  v1:= temp @kind object;
  #L3bb458.  if v1 != 0 then goto L3bb45e;
  #L3bb45c.  goto L3bb462;
  #L3bb45e.  v0:= "kotlin.coroutines.jvm.internal.BaseContinuationImpl" @kind object;
  #L3bb462.  v0:= (`java.lang.String`) v0 @kind object;
  #L3bb466.  `@@kotlinx.coroutines.internal.e0.a` @type ^`java.lang.String` := v0 @kind object;
  #L3bb46a.  v0:= `@@jb.m.o` @type ^`jb.m$a` @kind object;
  #L3bb46e.  v0:= constclass @type ^`kotlinx.coroutines.internal.e0` @kind object;
  #L3bb472.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L3bb478.  v0:= temp @kind object;
  #L3bb47a.  call temp:= `a`(v0) @signature `Ljb/m;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3bb480.  v0:= temp @kind object;
  #L3bb482.  goto L3bb49a;
  #L3bb484.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3bb486.  v1:= `@@jb.m.o` @type ^`jb.m$a` @kind object;
  #L3bb48a.  call temp:= `a`(v0) @signature `Ljb/n;.a:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L3bb490.  v0:= temp @kind object;
  #L3bb492.  call temp:= `a`(v0) @signature `Ljb/m;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3bb498.  v0:= temp @kind object;
  #L3bb49a.  call temp:= `b`(v0) @signature `Ljb/m;.b:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L3bb4a0.  v1:= temp @kind object;
  #L3bb4a2.  if v1 != 0 then goto L3bb4a8;
  #L3bb4a6.  goto L3bb4ac;
  #L3bb4a8.  v0:= "kotlinx.coroutines.internal.StackTraceRecoveryKt" @kind object;
  #L3bb4ac.  v0:= (`java.lang.String`) v0 @kind object;
  #L3bb4b0.  `@@kotlinx.coroutines.internal.e0.b` @type ^`java.lang.String` := v0 @kind object;
  #L3bb4b4.  return @kind void;
  catch `java.lang.Throwable` @[L3bb418..L3bb438] goto L3bb43a;
  catch `java.lang.Throwable` @[L3bb46a..L3bb482] goto L3bb484;
}
procedure `java.lang.Throwable` `a`(`java.lang.Throwable` v0 @kind object, `kotlin.coroutines.jvm.internal.e` v1 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.a:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/e;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L3bb090.  call temp:= `j`(v0, v1) @signature `Lkotlinx/coroutines/internal/e0;.j:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/e;)Ljava/lang/Throwable;` @kind static;
  #L3bb096.  v0:= temp @kind object;
  #L3bb098.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `b`(`java.lang.String` v3 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.b:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3bb04c.  v0:= new `java.lang.StackTraceElement`;
  #L3bb050.  v1:= new `java.lang.StringBuilder`;
  #L3bb054.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bb05a.  v2:= "\b\b\b(" @kind object;
  #L3bb05e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bb064.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bb06a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bb070.  v3:= temp @kind object;
  #L3bb072.  v1:= "\b" @kind object;
  #L3bb076.  v2:= -1I;
  #L3bb078.  call `<init>`(v0, v3, v1, v1, v2) @signature `Ljava/lang/StackTraceElement;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L3bb07e.  return v0 @kind object;
}
procedure `jb.l` `c`(`java.lang.Throwable` v6 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.c:(Ljava/lang/Throwable;)Ljb/l;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3bb388.  call temp:= `getCause`(v6) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L3bb38e.  v0:= temp @kind object;
  #L3bb390.  v1:= 0I;
  #L3bb392.  if v0 == 0 then goto L3bb3fa;
  #L3bb396.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3bb39c.  v2:= temp @kind object;
  #L3bb39e.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3bb3a4.  v3:= temp @kind object;
  #L3bb3a6.  call temp:= `a`(v2, v3) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3bb3ac.  v2:= temp;
  #L3bb3ae.  if v2 == 0 then goto L3bb3fa;
  #L3bb3b2.  call temp:= `getStackTrace`(v6) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L3bb3b8.  v2:= temp @kind object;
  #L3bb3ba.  v3:= length @variable v2;
  #L3bb3bc.  v4:= 0I;
  #L3bb3be.  if v4 >= v3 then goto L3bb3dc;
  #L3bb3c2.  v5:= v2[v4] @kind object;
  #L3bb3c6.  call temp:= `h`(v5) @signature `Lkotlinx/coroutines/internal/e0;.h:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L3bb3cc.  v5:= temp;
  #L3bb3ce.  if v5 == 0 then goto L3bb3d6;
  #L3bb3d2.  v3:= 1I;
  #L3bb3d4.  goto L3bb3de;
  #L3bb3d6.  v4:= v4 + 1;
  #L3bb3da.  goto L3bb3be;
  #L3bb3dc.  v3:= 0I;
  #L3bb3de.  if v3 == 0 then goto L3bb3ec;
  #L3bb3e2.  call temp:= `a`(v0, v2) @signature `Ljb/p;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljb/l;` @kind static;
  #L3bb3e8.  v6:= temp @kind object;
  #L3bb3ea.  goto L3bb406;
  #L3bb3ec.  v0:= new `java.lang.StackTraceElement`[v1];
  #L3bb3f0.  call temp:= `a`(v6, v0) @signature `Ljb/p;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljb/l;` @kind static;
  #L3bb3f6.  v6:= temp @kind object;
  #L3bb3f8.  goto L3bb406;
  #L3bb3fa.  v0:= new `java.lang.StackTraceElement`[v1];
  #L3bb3fe.  call temp:= `a`(v6, v0) @signature `Ljb/p;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljb/l;` @kind static;
  #L3bb404.  v6:= temp @kind object;
  #L3bb406.  return v6 @kind object;
}
procedure `java.lang.Throwable` `d`(`java.lang.Throwable` v5 @kind object, `java.lang.Throwable` v6 @kind object, `java.util.ArrayDeque` v7 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.d:(Ljava/lang/Throwable;Ljava/lang/Throwable;Ljava/util/ArrayDeque;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3bb0ac.  v0:= "Coroutine boundary" @kind object;
  #L3bb0b0.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/internal/e0;.b:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @kind static;
  #L3bb0b6.  v0:= temp @kind object;
  #L3bb0b8.  call `addFirst`(v7, v0) @signature `Ljava/util/ArrayDeque;.addFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L3bb0be.  call temp:= `getStackTrace`(v5) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L3bb0c4.  v5:= temp @kind object;
  #L3bb0c6.  v0:= `@@kotlinx.coroutines.internal.e0.a` @type ^`java.lang.String` @kind object;
  #L3bb0ca.  call temp:= `g`(v5, v0) @signature `Lkotlinx/coroutines/internal/e0;.g:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @kind static;
  #L3bb0d0.  v0:= temp;
  #L3bb0d2.  v1:= 0I;
  #L3bb0d4.  v2:= -1I;
  #L3bb0d6.  if v0 != v2 then goto L3bb0fc;
  #L3bb0da.  v5:= new `java.lang.StackTraceElement`[v1];
  #L3bb0de.  call temp:= `toArray`(v7, v5) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3bb0e4.  v5:= temp @kind object;
  #L3bb0e6.  v7:= "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>" @kind object;
  #L3bb0ea.  call temp:= `requireNonNull`(v5, v7) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3bb0f0.  v5:= (`java.lang.StackTraceElement`[]) v5 @kind object;
  #L3bb0f4.  call `setStackTrace`(v6, v5) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L3bb0fa.  return v6 @kind object;
  #L3bb0fc.  call temp:= `size`(v7) @signature `Ljava/util/ArrayDeque;.size:()I` @kind virtual;
  #L3bb102.  v2:= temp;
  #L3bb104.  v2:= v2 + v0 @kind int;
  #L3bb106.  v2:= new `java.lang.StackTraceElement`[v2];
  #L3bb10a.  v3:= 0I;
  #L3bb10c.  if v3 >= v0 then goto L3bb11e;
  #L3bb110.  v4:= v5[v3] @kind object;
  #L3bb114.  v2[v3]:= v4 @kind object;
  #L3bb118.  v3:= v3 + 1;
  #L3bb11c.  goto L3bb10c;
  #L3bb11e.  call temp:= `iterator`(v7) @signature `Ljava/util/ArrayDeque;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3bb124.  v5:= temp @kind object;
  #L3bb126.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3bb12c.  v7:= temp;
  #L3bb12e.  if v7 == 0 then goto L3bb14c;
  #L3bb132.  v7:= v1 + 1;
  #L3bb136.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3bb13c.  v3:= temp @kind object;
  #L3bb13e.  v3:= (`java.lang.StackTraceElement`) v3 @kind object;
  #L3bb142.  v1:= v1 + v0 @kind int;
  #L3bb144.  v2[v1]:= v3 @kind object;
  #L3bb148.  v1:= v7;
  #L3bb14a.  goto L3bb126;
  #L3bb14c.  call `setStackTrace`(v6, v2) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L3bb152.  return v6 @kind object;
}
procedure `java.util.ArrayDeque` `e`(`kotlin.coroutines.jvm.internal.e` v2 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.e:(Lkotlin/coroutines/jvm/internal/e;)Ljava/util/ArrayDeque;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3bb340.  v0:= new `java.util.ArrayDeque`;
  #L3bb344.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L3bb34a.  call temp:= `getStackTraceElement`(v2) @signature `Lkotlin/coroutines/jvm/internal/e;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind interface;
  #L3bb350.  v1:= temp @kind object;
  #L3bb352.  if v1 == 0 then goto L3bb35c;
  #L3bb356.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3bb35c.  call temp:= `getCallerFrame`(v2) @signature `Lkotlin/coroutines/jvm/internal/e;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/e;` @kind interface;
  #L3bb362.  v2:= temp @kind object;
  #L3bb364.  if v2 != 0 then goto L3bb36a;
  #L3bb368.  return v0 @kind object;
  #L3bb36a.  call temp:= `getStackTraceElement`(v2) @signature `Lkotlin/coroutines/jvm/internal/e;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind interface;
  #L3bb370.  v1:= temp @kind object;
  #L3bb372.  if v1 == 0 then goto L3bb35c;
  #L3bb376.  goto L3bb356;
}
procedure `boolean` `f`(`java.lang.StackTraceElement` v2 @kind object, `java.lang.StackTraceElement` v3 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.f:(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3baf64.  call temp:= `getLineNumber`(v2) @signature `Ljava/lang/StackTraceElement;.getLineNumber:()I` @kind virtual;
  #L3baf6a.  v0:= temp;
  #L3baf6c.  call temp:= `getLineNumber`(v3) @signature `Ljava/lang/StackTraceElement;.getLineNumber:()I` @kind virtual;
  #L3baf72.  v1:= temp;
  #L3baf74.  if v0 != v1 then goto L3bafd0;
  #L3baf78.  call temp:= `getMethodName`(v2) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L3baf7e.  v0:= temp @kind object;
  #L3baf80.  call temp:= `getMethodName`(v3) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L3baf86.  v1:= temp @kind object;
  #L3baf88.  call temp:= `a`(v0, v1) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3baf8e.  v0:= temp;
  #L3baf90.  if v0 == 0 then goto L3bafd0;
  #L3baf94.  call temp:= `getFileName`(v2) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L3baf9a.  v0:= temp @kind object;
  #L3baf9c.  call temp:= `getFileName`(v3) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L3bafa2.  v1:= temp @kind object;
  #L3bafa4.  call temp:= `a`(v0, v1) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3bafaa.  v0:= temp;
  #L3bafac.  if v0 == 0 then goto L3bafd0;
  #L3bafb0.  call temp:= `getClassName`(v2) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L3bafb6.  v2:= temp @kind object;
  #L3bafb8.  call temp:= `getClassName`(v3) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L3bafbe.  v3:= temp @kind object;
  #L3bafc0.  call temp:= `a`(v2, v3) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3bafc6.  v2:= temp;
  #L3bafc8.  if v2 == 0 then goto L3bafd0;
  #L3bafcc.  v2:= 1I;
  #L3bafce.  goto L3bafd2;
  #L3bafd0.  v2:= 0I;
  #L3bafd2.  return v2;
}
procedure `int` `g`(`java.lang.StackTraceElement`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.g:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3bb010.  v0:= length @variable v3;
  #L3bb012.  v1:= 0I;
  #L3bb014.  if v1 >= v0 then goto L3bb038;
  #L3bb018.  v2:= v3[v1] @kind object;
  #L3bb01c.  call temp:= `getClassName`(v2) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L3bb022.  v2:= temp @kind object;
  #L3bb024.  call temp:= `a`(v4, v2) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3bb02a.  v2:= temp;
  #L3bb02c.  if v2 == 0 then goto L3bb032;
  #L3bb030.  goto L3bb03a;
  #L3bb032.  v1:= v1 + 1;
  #L3bb036.  goto L3bb014;
  #L3bb038.  v1:= -1I;
  #L3bb03a.  return v1;
}
procedure `boolean` `h`(`java.lang.StackTraceElement` v4 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.h:(Ljava/lang/StackTraceElement;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bafe4.  call temp:= `getClassName`(v4) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L3bafea.  v4:= temp @kind object;
  #L3bafec.  v0:= "\b\b\b" @kind object;
  #L3baff0.  v1:= 0I;
  #L3baff2.  v2:= 2I;
  #L3baff4.  v3:= 0I;
  #L3baff6.  call temp:= `m`(v4, v0, v1, v2, v3) @signature `Lzb/e;.m:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L3baffc.  v4:= temp;
  #L3baffe.  return v4;
}
procedure `void` `i`(`java.lang.StackTraceElement`[] v4 @kind object, `java.util.ArrayDeque` v5 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.i:([Ljava/lang/StackTraceElement;Ljava/util/ArrayDeque;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bb4e0.  v0:= length @variable v4;
  #L3bb4e2.  v1:= 0I;
  #L3bb4e4.  if v1 >= v0 then goto L3bb500;
  #L3bb4e8.  v2:= v4[v1] @kind object;
  #L3bb4ec.  call temp:= `h`(v2) @signature `Lkotlinx/coroutines/internal/e0;.h:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L3bb4f2.  v2:= temp;
  #L3bb4f4.  if v2 == 0 then goto L3bb4fa;
  #L3bb4f8.  goto L3bb502;
  #L3bb4fa.  v1:= v1 + 1;
  #L3bb4fe.  goto L3bb4e4;
  #L3bb500.  v1:= -1I;
  #L3bb502.  v1:= v1 + 1;
  #L3bb506.  v0:= length @variable v4;
  #L3bb508.  v0:= v0 + -1;
  #L3bb50c.  if v1 > v0 then goto L3bb546;
  #L3bb510.  v2:= v4[v0] @kind object;
  #L3bb514.  call temp:= `getLast`(v5) @signature `Ljava/util/ArrayDeque;.getLast:()Ljava/lang/Object;` @kind virtual;
  #L3bb51a.  v3:= temp @kind object;
  #L3bb51c.  v3:= (`java.lang.StackTraceElement`) v3 @kind object;
  #L3bb520.  call temp:= `f`(v2, v3) @signature `Lkotlinx/coroutines/internal/e0;.f:(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z` @kind static;
  #L3bb526.  v2:= temp;
  #L3bb528.  if v2 == 0 then goto L3bb532;
  #L3bb52c.  call temp:= `removeLast`(v5) @signature `Ljava/util/ArrayDeque;.removeLast:()Ljava/lang/Object;` @kind virtual;
  #L3bb532.  v2:= v4[v0] @kind object;
  #L3bb536.  call `addFirst`(v5, v2) @signature `Ljava/util/ArrayDeque;.addFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L3bb53c.  if v0 == v1 then goto L3bb546;
  #L3bb540.  v0:= v0 + -1;
  #L3bb544.  goto L3bb510;
  #L3bb546.  return @kind void;
}
procedure `java.lang.Throwable` `j`(`java.lang.Throwable` v4 @kind object, `kotlin.coroutines.jvm.internal.e` v5 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.j:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/e;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bb164.  call temp:= `c`(v4) @signature `Lkotlinx/coroutines/internal/e0;.c:(Ljava/lang/Throwable;)Ljb/l;` @kind static;
  #L3bb16a.  v0:= temp @kind object;
  #L3bb16c.  call temp:= `a`(v0) @signature `Ljb/l;.a:()Ljava/lang/Object;` @kind virtual;
  #L3bb172.  v1:= temp @kind object;
  #L3bb174.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L3bb178.  call temp:= `b`(v0) @signature `Ljb/l;.b:()Ljava/lang/Object;` @kind virtual;
  #L3bb17e.  v0:= temp @kind object;
  #L3bb180.  v0:= (`java.lang.StackTraceElement`[]) v0 @kind object;
  #L3bb184.  call temp:= `m`(v1) @signature `Lkotlinx/coroutines/internal/e0;.m:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L3bb18a.  v2:= temp @kind object;
  #L3bb18c.  if v2 != 0 then goto L3bb192;
  #L3bb190.  return v4 @kind object;
  #L3bb192.  call temp:= `e`(v5) @signature `Lkotlinx/coroutines/internal/e0;.e:(Lkotlin/coroutines/jvm/internal/e;)Ljava/util/ArrayDeque;` @kind static;
  #L3bb198.  v5:= temp @kind object;
  #L3bb19a.  call temp:= `isEmpty`(v5) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #L3bb1a0.  v3:= temp;
  #L3bb1a2.  if v3 == 0 then goto L3bb1a8;
  #L3bb1a6.  return v4 @kind object;
  #L3bb1a8.  if v1 == v4 then goto L3bb1b2;
  #L3bb1ac.  call `i`(v0, v5) @signature `Lkotlinx/coroutines/internal/e0;.i:([Ljava/lang/StackTraceElement;Ljava/util/ArrayDeque;)V` @kind static;
  #L3bb1b2.  call temp:= `d`(v1, v2, v5) @signature `Lkotlinx/coroutines/internal/e0;.d:(Ljava/lang/Throwable;Ljava/lang/Throwable;Ljava/util/ArrayDeque;)Ljava/lang/Throwable;` @kind static;
  #L3bb1b8.  v4:= temp @kind object;
  #L3bb1ba.  return v4 @kind object;
}
procedure `java.lang.Throwable` `k`(`java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.k:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3bb1cc.  call temp:= `d`() @signature `Lac/p0;.d:()Z` @kind static;
  #L3bb1d2.  v0:= temp;
  #L3bb1d4.  if v0 != 0 then goto L3bb1da;
  #L3bb1d8.  return v1 @kind object;
  #L3bb1da.  call temp:= `m`(v1) @signature `Lkotlinx/coroutines/internal/e0;.m:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L3bb1e0.  v0:= temp @kind object;
  #L3bb1e2.  if v0 != 0 then goto L3bb1e8;
  #L3bb1e6.  return v1 @kind object;
  #L3bb1e8.  call temp:= `l`(v0) @signature `Lkotlinx/coroutines/internal/e0;.l:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L3bb1ee.  v1:= temp @kind object;
  #L3bb1f0.  return v1 @kind object;
}
procedure `java.lang.Throwable` `l`(`java.lang.Throwable` v7 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.l:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3bb204.  call temp:= `getStackTrace`(v7) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L3bb20a.  v0:= temp @kind object;
  #L3bb20c.  v1:= length @variable v0;
  #L3bb20e.  v2:= `@@kotlinx.coroutines.internal.e0.b` @type ^`java.lang.String` @kind object;
  #L3bb212.  call temp:= `g`(v0, v2) @signature `Lkotlinx/coroutines/internal/e0;.g:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @kind static;
  #L3bb218.  v2:= temp;
  #L3bb21a.  v3:= v2 + 1;
  #L3bb21e.  v4:= `@@kotlinx.coroutines.internal.e0.a` @type ^`java.lang.String` @kind object;
  #L3bb222.  call temp:= `g`(v0, v4) @signature `Lkotlinx/coroutines/internal/e0;.g:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @kind static;
  #L3bb228.  v4:= temp;
  #L3bb22a.  v5:= 0I;
  #L3bb22c.  v6:= -1I;
  #L3bb22e.  if v4 != v6 then goto L3bb236;
  #L3bb232.  v4:= 0I;
  #L3bb234.  goto L3bb23a;
  #L3bb236.  v4:= v1 - v4 @kind int;
  #L3bb23a.  v1:= v1 - v2 @kind int;
  #L3bb23c.  v1:= v1 - v4 @kind int;
  #L3bb23e.  v2:= new `java.lang.StackTraceElement`[v1];
  #L3bb242.  if v5 >= v1 then goto L3bb26e;
  #L3bb246.  if v5 != 0 then goto L3bb258;
  #L3bb24a.  v4:= "Coroutine boundary" @kind object;
  #L3bb24e.  call temp:= `b`(v4) @signature `Lkotlinx/coroutines/internal/e0;.b:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @kind static;
  #L3bb254.  v4:= temp @kind object;
  #L3bb256.  goto L3bb264;
  #L3bb258.  v4:= v3 + v5 @kind int;
  #L3bb25c.  v4:= v4 + -1;
  #L3bb260.  v4:= v0[v4] @kind object;
  #L3bb264.  v2[v5]:= v4 @kind object;
  #L3bb268.  v5:= v5 + 1;
  #L3bb26c.  goto L3bb242;
  #L3bb26e.  call `setStackTrace`(v7, v2) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L3bb274.  return v7 @kind object;
}
procedure `java.lang.Throwable` `m`(`java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.m:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3bb288.  call temp:= `g`(v3) @signature `Lkotlinx/coroutines/internal/j;.g:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L3bb28e.  v0:= temp @kind object;
  #L3bb290.  v1:= 0I;
  #L3bb292.  if v0 != 0 then goto L3bb298;
  #L3bb296.  return v1 @kind object;
  #L3bb298.  v2:= instanceof @variable v3 @type ^`ac.b0` @kind boolean;
  #L3bb29c.  if v2 != 0 then goto L3bb2be;
  #L3bb2a0.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3bb2a6.  v2:= temp @kind object;
  #L3bb2a8.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3bb2ae.  v3:= temp @kind object;
  #L3bb2b0.  call temp:= `a`(v2, v3) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3bb2b6.  v3:= temp;
  #L3bb2b8.  if v3 != 0 then goto L3bb2be;
  #L3bb2bc.  return v1 @kind object;
  #L3bb2be.  return v0 @kind object;
}
procedure `java.lang.Throwable` `n`(`java.lang.Throwable` v6 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.n:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3bb2d0.  call temp:= `getCause`(v6) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L3bb2d6.  v0:= temp @kind object;
  #L3bb2d8.  if v0 == 0 then goto L3bb32c;
  #L3bb2dc.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3bb2e2.  v1:= temp @kind object;
  #L3bb2e4.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3bb2ea.  v2:= temp @kind object;
  #L3bb2ec.  call temp:= `a`(v1, v2) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3bb2f2.  v1:= temp;
  #L3bb2f4.  if v1 != 0 then goto L3bb2fa;
  #L3bb2f8.  goto L3bb32c;
  #L3bb2fa.  call temp:= `getStackTrace`(v6) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L3bb300.  v1:= temp @kind object;
  #L3bb302.  v2:= length @variable v1;
  #L3bb304.  v3:= 0I;
  #L3bb306.  v4:= 0I;
  #L3bb308.  if v4 >= v2 then goto L3bb326;
  #L3bb30c.  v5:= v1[v4] @kind object;
  #L3bb310.  call temp:= `h`(v5) @signature `Lkotlinx/coroutines/internal/e0;.h:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L3bb316.  v5:= temp;
  #L3bb318.  if v5 == 0 then goto L3bb320;
  #L3bb31c.  v3:= 1I;
  #L3bb31e.  goto L3bb326;
  #L3bb320.  v4:= v4 + 1;
  #L3bb324.  goto L3bb308;
  #L3bb326.  if v3 == 0 then goto L3bb32c;
  #L3bb32a.  return v0 @kind object;
  #L3bb32c.  return v6 @kind object;
}
