record `kotlinx.coroutines.internal.d0` @kind class @AccessFlag PUBLIC extends `ac.a` @kind class, `kotlin.coroutines.jvm.internal.e` @kind interface {
  `mb.d` `kotlinx.coroutines.internal.d0.q` @AccessFlag PUBLIC_FINAL;
}
procedure `ac.r1` `D0`(`kotlinx.coroutines.internal.d0` v1 @kind this) @signature `Lkotlinx/coroutines/internal/d0;.D0:()Lac/r1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3bae90.  call temp:= `U`(v1) @signature `Lac/y1;.U:()Lac/q;` @kind virtual;
  #L3bae96.  v0:= temp @kind object;
  #L3bae98.  if v0 == 0 then goto L3baea6;
  #L3bae9c.  call temp:= `getParent`(v0) @signature `Lac/q;.getParent:()Lac/r1;` @kind interface;
  #L3baea2.  v0:= temp @kind object;
  #L3baea4.  goto L3baea8;
  #L3baea6.  v0:= 0I;
  #L3baea8.  return v0 @kind object;
}
procedure `boolean` `a0`(`kotlinx.coroutines.internal.d0` v1 @kind this) @signature `Lkotlinx/coroutines/internal/d0;.a0:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L3baebc.  v0:= 1I;
  #L3baebe.  return v0;
}
procedure `kotlin.coroutines.jvm.internal.e` `getCallerFrame`(`kotlinx.coroutines.internal.d0` v2 @kind this) @signature `Lkotlinx/coroutines/internal/d0;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/e;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3baee4.  v0:= v2.`kotlinx.coroutines.internal.d0.q` @type ^`mb.d` @kind object;
  #L3baee8.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.e` @kind boolean;
  #L3baeec.  if v1 == 0 then goto L3baef6;
  #L3baef0.  v0:= (`kotlin.coroutines.jvm.internal.e`) v0 @kind object;
  #L3baef4.  goto L3baef8;
  #L3baef6.  v0:= 0I;
  #L3baef8.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.internal.d0` v1 @kind this) @signature `Lkotlinx/coroutines/internal/d0;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3baed0.  v0:= 0I;
  #L3baed2.  return v0 @kind object;
}
procedure `void` `t`(`kotlinx.coroutines.internal.d0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/internal/d0;.t:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L3baf0c.  v0:= v3.`kotlinx.coroutines.internal.d0.q` @type ^`mb.d` @kind object;
  #L3baf10.  call temp:= `b`(v0) @signature `Lnb/b;.b:(Lmb/d;)Lmb/d;` @kind static;
  #L3baf16.  v0:= temp @kind object;
  #L3baf18.  v1:= v3.`kotlinx.coroutines.internal.d0.q` @type ^`mb.d` @kind object;
  #L3baf1c.  call temp:= `a`(v4, v1) @signature `Lac/z;.a:(Ljava/lang/Object;Lmb/d;)Ljava/lang/Object;` @kind static;
  #L3baf22.  v4:= temp @kind object;
  #L3baf24.  v1:= 0I;
  #L3baf26.  v2:= 2I;
  #L3baf28.  call `c`(v0, v4, v1, v2, v1) @signature `Lkotlinx/coroutines/internal/i;.c:(Lmb/d;Ljava/lang/Object;Ltb/l;ILjava/lang/Object;)V` @kind static;
  #L3baf2e.  return @kind void;
}
procedure `void` `z0`(`kotlinx.coroutines.internal.d0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/d0;.z0:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3baf40.  v0:= v1.`kotlinx.coroutines.internal.d0.q` @type ^`mb.d` @kind object;
  #L3baf44.  call temp:= `a`(v2, v0) @signature `Lac/z;.a:(Ljava/lang/Object;Lmb/d;)Ljava/lang/Object;` @kind static;
  #L3baf4a.  v2:= temp @kind object;
  #L3baf4c.  call `resumeWith`(v0, v2) @signature `Lmb/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L3baf52.  return @kind void;
}
