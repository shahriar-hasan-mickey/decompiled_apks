record `kotlinx.coroutines.internal.j$d` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.jvm.internal.l` @kind class, `tb.l` @kind interface {
  `java.lang.reflect.Constructor` `kotlinx.coroutines.internal.j$d.o` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.j$d` v0 @kind this, `java.lang.reflect.Constructor` v1 @kind object) @signature `Lkotlinx/coroutines/internal/j$d;.<init>:(Ljava/lang/reflect/Constructor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b8b54.  v0.`kotlinx.coroutines.internal.j$d.o` @type ^`java.lang.reflect.Constructor` := v1 @kind object;
  #L3b8b58.  v1:= 1I;
  #L3b8b5a.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/l;.<init>:(I)V` @kind direct;
  #L3b8b60.  return @kind void;
}
procedure `java.lang.Throwable` `a`(`kotlinx.coroutines.internal.j$d` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/internal/j$d;.a:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3b8ad0.  v0:= `@@jb.m.o` @type ^`jb.m$a` @kind object;
  #L3b8ad4.  v0:= v3.`kotlinx.coroutines.internal.j$d.o` @type ^`java.lang.reflect.Constructor` @kind object;
  #L3b8ad8.  v1:= 1I;
  #L3b8ada.  v1:= new `java.lang.Object`[v1];
  #L3b8ade.  v2:= 0I;
  #L3b8ae0.  v1[v2]:= v4 @kind object;
  #L3b8ae4.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b8aea.  v4:= temp @kind object;
  #L3b8aec.  if v4 == 0 then goto L3b8afe;
  #L3b8af0.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L3b8af4.  call temp:= `a`(v4) @signature `Ljb/m;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b8afa.  v4:= temp @kind object;
  #L3b8afc.  goto L3b8b24;
  #L3b8afe.  v4:= new `java.lang.NullPointerException`;
  #L3b8b02.  v0:= "null cannot be cast to non-null type kotlin.Throwable" @kind object;
  #L3b8b06.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b8b0c.  throw v4;
  #L3b8b0e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b8b10.  v0:= `@@jb.m.o` @type ^`jb.m$a` @kind object;
  #L3b8b14.  call temp:= `a`(v4) @signature `Ljb/n;.a:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L3b8b1a.  v4:= temp @kind object;
  #L3b8b1c.  call temp:= `a`(v4) @signature `Ljb/m;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3b8b22.  v4:= temp @kind object;
  #L3b8b24.  call temp:= `c`(v4) @signature `Ljb/m;.c:(Ljava/lang/Object;)Z` @kind static;
  #L3b8b2a.  v0:= temp;
  #L3b8b2c.  if v0 == 0 then goto L3b8b32;
  #L3b8b30.  v4:= 0I;
  #L3b8b32.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L3b8b36.  return v4 @kind object;
  catch `java.lang.Throwable` @[L3b8ad0..L3b8b0e] goto L3b8b0e;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.internal.j$d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/internal/j$d;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3b8ab0.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L3b8ab4.  call temp:= `a`(v0, v1) @signature `Lkotlinx/coroutines/internal/j$d;.a:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3b8aba.  v1:= temp @kind object;
  #L3b8abc.  return v1 @kind object;
}
