record `kotlinx.coroutines.internal.a0` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.a0` v0 @kind this) @signature `Lkotlinx/coroutines/internal/a0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3bad38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3bad3e.  return @kind void;
}
procedure `kotlinx.coroutines.internal.c` `a`() @signature `Lkotlinx/coroutines/internal/a0;.a:()Lkotlinx/coroutines/internal/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `b`(`kotlinx.coroutines.internal.a0` v6 @kind this, `kotlinx.coroutines.internal.a0` v7 @kind object) @signature `Lkotlinx/coroutines/internal/a0;.b:(Lkotlinx/coroutines/internal/a0;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3baca0.  call temp:= `a`(v6) @signature `Lkotlinx/coroutines/internal/a0;.a:()Lkotlinx/coroutines/internal/c;` @kind virtual;
  #L3baca6.  v0:= temp @kind object;
  #L3baca8.  v1:= 0I;
  #L3bacaa.  if v0 != 0 then goto L3bacb0;
  #L3bacae.  return v1;
  #L3bacb0.  call temp:= `a`(v7) @signature `Lkotlinx/coroutines/internal/a0;.a:()Lkotlinx/coroutines/internal/c;` @kind virtual;
  #L3bacb6.  v7:= temp @kind object;
  #L3bacb8.  if v7 != 0 then goto L3bacbe;
  #L3bacbc.  return v1;
  #L3bacbe.  call temp:= `f`(v0) @signature `Lkotlinx/coroutines/internal/c;.f:()J` @kind virtual;
  #L3bacc4.  v2:= temp @kind wide;
  #L3bacc6.  call temp:= `f`(v7) @signature `Lkotlinx/coroutines/internal/c;.f:()J` @kind virtual;
  #L3baccc.  v4:= temp @kind wide;
  #L3bacce.  v7:= lcmp(v2, v4);
  #L3bacd2.  if v7 >= 0 then goto L3bacd8;
  #L3bacd6.  v1:= 1I;
  #L3bacd8.  return v1;
}
procedure `java.lang.Object` `c`(`java.lang.Object` v0 @kind object) @signature `Lkotlinx/coroutines/internal/a0;.c:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.internal.a0` v2 @kind this) @signature `Lkotlinx/coroutines/internal/a0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bacec.  v0:= new `java.lang.StringBuilder`;
  #L3bacf0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bacf6.  call temp:= `a`(v2) @signature `Lac/q0;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3bacfc.  v1:= temp @kind object;
  #L3bacfe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bad04.  v1:= 64I;
  #L3bad08.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bad0e.  call temp:= `b`(v2) @signature `Lac/q0;.b:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3bad14.  v1:= temp @kind object;
  #L3bad16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bad1c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bad22.  v0:= temp @kind object;
  #L3bad24.  return v0 @kind object;
}
