record `lc.a$c` @kind class @AccessFlag FINAL extends `qc.r` @kind interface {
  `qc.i` `lc.a$c.o` @AccessFlag PRIVATE_FINAL;
  `boolean` `lc.a$c.p` @AccessFlag PRIVATE;
  `lc.a` `lc.a$c.q` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`lc.a$c` v1 @kind this, `lc.a` v2 @kind object) @signature `Llc/a$c;.<init>:(Llc/a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3d0cf8.  v1.`lc.a$c.q` @type ^`lc.a` := v2 @kind object;
  #L3d0cfc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d0d02.  v0:= new `qc.i`;
  #L3d0d06.  v2:= v2.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d0d0a.  call temp:= `f`(v2) @signature `Lqc/r;.f:()Lqc/t;` @kind interface;
  #L3d0d10.  v2:= temp @kind object;
  #L3d0d12.  call `<init>`(v0, v2) @signature `Lqc/i;.<init>:(Lqc/t;)V` @kind direct;
  #L3d0d18.  v1.`lc.a$c.o` @type ^`qc.i` := v0 @kind object;
  #L3d0d1c.  return @kind void;
}
procedure `void` `close`(`lc.a$c` v2 @kind this) @signature `Llc/a$c;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d0d30.  @monitorenter v2
  #L3d0d32.  v0:= v2.`lc.a$c.p` @type ^`boolean` @kind boolean;
  #L3d0d36.  if v0 == 0 then goto L3d0d3e;
  #L3d0d3a.  @monitorexit v2
  #L3d0d3c.  return @kind void;
  #L3d0d3e.  v0:= 1I;
  #L3d0d40.  v2.`lc.a$c.p` @type ^`boolean` := v0 @kind boolean;
  #L3d0d44.  v0:= v2.`lc.a$c.q` @type ^`lc.a` @kind object;
  #L3d0d48.  v0:= v0.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d0d4c.  v1:= "0\r\n\r\n" @kind object;
  #L3d0d50.  call temp:= `V`(v0, v1) @signature `Lqc/d;.V:(Ljava/lang/String;)Lqc/d;` @kind interface;
  #L3d0d56.  v0:= v2.`lc.a$c.q` @type ^`lc.a` @kind object;
  #L3d0d5a.  v1:= v2.`lc.a$c.o` @type ^`qc.i` @kind object;
  #L3d0d5e.  call `g`(v0, v1) @signature `Llc/a;.g:(Lqc/i;)V` @kind virtual;
  #L3d0d64.  v0:= v2.`lc.a$c.q` @type ^`lc.a` @kind object;
  #L3d0d68.  v1:= 3I;
  #L3d0d6a.  v0.`lc.a.e` @type ^`int` := v1;
  #L3d0d6e.  @monitorexit v2
  #L3d0d70.  return @kind void;
  #L3d0d72.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d0d74.  @monitorexit v2
  #L3d0d76.  throw v0;
  catch `java.lang.Throwable` @[L3d0d32..L3d0d36] goto L3d0d72;
  catch `java.lang.Throwable` @[L3d0d40..L3d0d6e] goto L3d0d72;
}
procedure `qc.t` `f`(`lc.a$c` v1 @kind this) @signature `Llc/a$c;.f:()Lqc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d0ce0.  v0:= v1.`lc.a$c.o` @type ^`qc.i` @kind object;
  #L3d0ce4.  return v0 @kind object;
}
procedure `void` `flush`(`lc.a$c` v1 @kind this) @signature `Llc/a$c;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d0d9c.  @monitorenter v1
  #L3d0d9e.  v0:= v1.`lc.a$c.p` @type ^`boolean` @kind boolean;
  #L3d0da2.  if v0 == 0 then goto L3d0daa;
  #L3d0da6.  @monitorexit v1
  #L3d0da8.  return @kind void;
  #L3d0daa.  v0:= v1.`lc.a$c.q` @type ^`lc.a` @kind object;
  #L3d0dae.  v0:= v0.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d0db2.  call `flush`(v0) @signature `Lqc/d;.flush:()V` @kind interface;
  #L3d0db8.  @monitorexit v1
  #L3d0dba.  return @kind void;
  #L3d0dbc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d0dbe.  @monitorexit v1
  #L3d0dc0.  throw v0;
  catch `java.lang.Throwable` @[L3d0d9e..L3d0da2] goto L3d0dbc;
  catch `java.lang.Throwable` @[L3d0daa..L3d0db8] goto L3d0dbc;
}
procedure `void` `q`(`lc.a$c` v3 @kind this, `qc.c` v4 @kind object, `long` v5 ) @signature `Llc/a$c;.q:(Lqc/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d0de8.  v0:= v3.`lc.a$c.p` @type ^`boolean` @kind boolean;
  #L3d0dec.  if v0 != 0 then goto L3d0e3c;
  #L3d0df0.  v0:= 0L;
  #L3d0df4.  v2:= lcmp(v5, v0);
  #L3d0df8.  if v2 != 0 then goto L3d0dfe;
  #L3d0dfc.  return @kind void;
  #L3d0dfe.  v0:= v3.`lc.a$c.q` @type ^`lc.a` @kind object;
  #L3d0e02.  v0:= v0.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d0e06.  call temp:= `m`(v0, v5) @signature `Lqc/d;.m:(J)Lqc/d;` @kind interface;
  #L3d0e0c.  v0:= v3.`lc.a$c.q` @type ^`lc.a` @kind object;
  #L3d0e10.  v0:= v0.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d0e14.  v1:= "\r\n" @kind object;
  #L3d0e18.  call temp:= `V`(v0, v1) @signature `Lqc/d;.V:(Ljava/lang/String;)Lqc/d;` @kind interface;
  #L3d0e1e.  v0:= v3.`lc.a$c.q` @type ^`lc.a` @kind object;
  #L3d0e22.  v0:= v0.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d0e26.  call `q`(v0, v4, v5) @signature `Lqc/r;.q:(Lqc/c;J)V` @kind interface;
  #L3d0e2c.  v4:= v3.`lc.a$c.q` @type ^`lc.a` @kind object;
  #L3d0e30.  v4:= v4.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d0e34.  call temp:= `V`(v4, v1) @signature `Lqc/d;.V:(Ljava/lang/String;)Lqc/d;` @kind interface;
  #L3d0e3a.  return @kind void;
  #L3d0e3c.  v4:= new `java.lang.IllegalStateException`;
  #L3d0e40.  v5:= "closed" @kind object;
  #L3d0e44.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d0e4a.  throw v4;
}
