record `lc.a$b` @kind class @AccessFlag ABSTRACT extends `qc.s` @kind interface {
  `qc.i` `lc.a$b.o` @AccessFlag PROTECTED_FINAL;
  `boolean` `lc.a$b.p` @AccessFlag PROTECTED;
  `long` `lc.a$b.q` @AccessFlag PROTECTED;
  `lc.a` `lc.a$b.r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`lc.a$b` v2 @kind this, `lc.a` v3 @kind object) @signature `Llc/a$b;.<init>:(Llc/a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3d0c00.  v2.`lc.a$b.r` @type ^`lc.a` := v3 @kind object;
  #L3d0c04.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d0c0a.  v0:= new `qc.i`;
  #L3d0c0e.  v3:= v3.`lc.a.c` @type ^`qc.e` @kind object;
  #L3d0c12.  call temp:= `f`(v3) @signature `Lqc/s;.f:()Lqc/t;` @kind interface;
  #L3d0c18.  v3:= temp @kind object;
  #L3d0c1a.  call `<init>`(v0, v3) @signature `Lqc/i;.<init>:(Lqc/t;)V` @kind direct;
  #L3d0c20.  v2.`lc.a$b.o` @type ^`qc.i` := v0 @kind object;
  #L3d0c24.  v0:= 0L;
  #L3d0c28.  v2.`lc.a$b.q` @type ^`long` := v0 @kind wide;
  #L3d0c2c.  return @kind void;
}
procedure `void` `<init>`(`lc.a$b` v0 @kind this, `lc.a` v1 @kind object, `lc.a$a` v2 @kind object) @signature `Llc/a$b;.<init>:(Llc/a;Llc/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3d0c40.  call `<init>`(v0, v1) @signature `Llc/a$b;.<init>:(Llc/a;)V` @kind direct;
  #L3d0c46.  return @kind void;
}
procedure `long` `T`(`lc.a$b` v2 @kind this, `qc.c` v3 @kind object, `long` v4 ) @signature `Llc/a$b;.T:(Lqc/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d0b94.  v0:= v2.`lc.a$b.r` @type ^`lc.a` @kind object;
  #L3d0b98.  v0:= v0.`lc.a.c` @type ^`qc.e` @kind object;
  #L3d0b9c.  call temp:= `T`(v0, v3, v4) @signature `Lqc/s;.T:(Lqc/c;J)J` @kind interface;
  #L3d0ba2.  v3:= temp @kind wide;
  #L3d0ba4.  v0:= 0L;
  #L3d0ba8.  v5:= lcmp(v3, v0);
  #L3d0bac.  if v5 <= 0 then goto L3d0bba;
  #L3d0bb0.  v0:= v2.`lc.a$b.q` @type ^`long` @kind wide;
  #L3d0bb4.  v0:= v0 + v3 @kind long;
  #L3d0bb6.  v2.`lc.a$b.q` @type ^`long` := v0 @kind wide;
  #L3d0bba.  return v3 @kind wide;
  #L3d0bbc.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L3d0bbe.  v4:= 0I;
  #L3d0bc0.  call `a`(v2, v4, v3) @signature `Llc/a$b;.a:(ZLjava/io/IOException;)V` @kind virtual;
  #L3d0bc6.  throw v3;
  catch `java.io.IOException` @[L3d0b94..L3d0bba] goto L3d0bbc;
}
procedure `void` `a`(`lc.a$b` v9 @kind this, `boolean` v10 , `java.io.IOException` v11 @kind object) @signature `Llc/a$b;.a:(ZLjava/io/IOException;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3d0c58.  v0:= v9.`lc.a$b.r` @type ^`lc.a` @kind object;
  #L3d0c5c.  v1:= v0.`lc.a.e` @type ^`int`;
  #L3d0c60.  v2:= 6I;
  #L3d0c62.  if v1 != v2 then goto L3d0c68;
  #L3d0c66.  return @kind void;
  #L3d0c68.  v3:= 5I;
  #L3d0c6a.  if v1 != v3 then goto L3d0c9a;
  #L3d0c6e.  v1:= v9.`lc.a$b.o` @type ^`qc.i` @kind object;
  #L3d0c72.  call `g`(v0, v1) @signature `Llc/a;.g:(Lqc/i;)V` @kind virtual;
  #L3d0c78.  v5:= v9.`lc.a$b.r` @type ^`lc.a` @kind object;
  #L3d0c7c.  v5.`lc.a.e` @type ^`int` := v2;
  #L3d0c80.  v3:= v5.`lc.a.b` @type ^`jc.g` @kind object;
  #L3d0c84.  if v3 == 0 then goto L3d0c98;
  #L3d0c88.  v4:= v10 ^~ 1;
  #L3d0c8c.  v6:= v9.`lc.a$b.q` @type ^`long` @kind wide;
  #L3d0c90.  v8:= v11 @kind object;
  #L3d0c92.  call `r`(v3, v4, v5, v6, v8) @signature `Ljc/g;.r:(ZLkc/c;JLjava/io/IOException;)V` @kind virtual;
  #L3d0c98.  return @kind void;
  #L3d0c9a.  v10:= new `java.lang.IllegalStateException`;
  #L3d0c9e.  v11:= new `java.lang.StringBuilder`;
  #L3d0ca2.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d0ca8.  v0:= "state: " @kind object;
  #L3d0cac.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0cb2.  v0:= v9.`lc.a$b.r` @type ^`lc.a` @kind object;
  #L3d0cb6.  v0:= v0.`lc.a.e` @type ^`int`;
  #L3d0cba.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0cc0.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0cc6.  v11:= temp @kind object;
  #L3d0cc8.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d0cce.  throw v10;
}
procedure `qc.t` `f`(`lc.a$b` v1 @kind this) @signature `Llc/a$b;.f:()Lqc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d0be8.  v0:= v1.`lc.a$b.o` @type ^`qc.i` @kind object;
  #L3d0bec.  return v0 @kind object;
}
