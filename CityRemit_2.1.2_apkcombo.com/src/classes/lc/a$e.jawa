record `lc.a$e` @kind class @AccessFlag FINAL extends `qc.r` @kind interface {
  `qc.i` `lc.a$e.o` @AccessFlag PRIVATE_FINAL;
  `boolean` `lc.a$e.p` @AccessFlag PRIVATE;
  `long` `lc.a$e.q` @AccessFlag PRIVATE;
  `lc.a` `lc.a$e.r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`lc.a$e` v1 @kind this, `lc.a` v2 @kind object, `long` v3 ) @signature `Llc/a$e;.<init>:(Llc/a;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3d10fc.  v1.`lc.a$e.r` @type ^`lc.a` := v2 @kind object;
  #L3d1100.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d1106.  v0:= new `qc.i`;
  #L3d110a.  v2:= v2.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d110e.  call temp:= `f`(v2) @signature `Lqc/r;.f:()Lqc/t;` @kind interface;
  #L3d1114.  v2:= temp @kind object;
  #L3d1116.  call `<init>`(v0, v2) @signature `Lqc/i;.<init>:(Lqc/t;)V` @kind direct;
  #L3d111c.  v1.`lc.a$e.o` @type ^`qc.i` := v0 @kind object;
  #L3d1120.  v1.`lc.a$e.q` @type ^`long` := v3 @kind wide;
  #L3d1124.  return @kind void;
}
procedure `void` `close`(`lc.a$e` v5 @kind this) @signature `Llc/a$e;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d1138.  v0:= v5.`lc.a$e.p` @type ^`boolean` @kind boolean;
  #L3d113c.  if v0 == 0 then goto L3d1142;
  #L3d1140.  return @kind void;
  #L3d1142.  v0:= 1I;
  #L3d1144.  v5.`lc.a$e.p` @type ^`boolean` := v0 @kind boolean;
  #L3d1148.  v0:= v5.`lc.a$e.q` @type ^`long` @kind wide;
  #L3d114c.  v2:= 0L;
  #L3d1150.  v4:= lcmp(v0, v2);
  #L3d1154.  if v4 > 0 then goto L3d1172;
  #L3d1158.  v0:= v5.`lc.a$e.r` @type ^`lc.a` @kind object;
  #L3d115c.  v1:= v5.`lc.a$e.o` @type ^`qc.i` @kind object;
  #L3d1160.  call `g`(v0, v1) @signature `Llc/a;.g:(Lqc/i;)V` @kind virtual;
  #L3d1166.  v0:= v5.`lc.a$e.r` @type ^`lc.a` @kind object;
  #L3d116a.  v1:= 3I;
  #L3d116c.  v0.`lc.a.e` @type ^`int` := v1;
  #L3d1170.  return @kind void;
  #L3d1172.  v0:= new `java.net.ProtocolException`;
  #L3d1176.  v1:= "unexpected end of stream" @kind object;
  #L3d117a.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d1180.  throw v0;
}
procedure `qc.t` `f`(`lc.a$e` v1 @kind this) @signature `Llc/a$e;.f:()Lqc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d10e4.  v0:= v1.`lc.a$e.o` @type ^`qc.i` @kind object;
  #L3d10e8.  return v0 @kind object;
}
procedure `void` `flush`(`lc.a$e` v1 @kind this) @signature `Llc/a$e;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d1194.  v0:= v1.`lc.a$e.p` @type ^`boolean` @kind boolean;
  #L3d1198.  if v0 == 0 then goto L3d119e;
  #L3d119c.  return @kind void;
  #L3d119e.  v0:= v1.`lc.a$e.r` @type ^`lc.a` @kind object;
  #L3d11a2.  v0:= v0.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d11a6.  call `flush`(v0) @signature `Lqc/d;.flush:()V` @kind interface;
  #L3d11ac.  return @kind void;
}
procedure `void` `q`(`lc.a$e` v7 @kind this, `qc.c` v8 @kind object, `long` v9 ) @signature `Llc/a$e;.q:(Lqc/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d11c0.  v0:= v7.`lc.a$e.p` @type ^`boolean` @kind boolean;
  #L3d11c4.  if v0 != 0 then goto L3d1244;
  #L3d11c8.  call temp:= `h0`(v8) @signature `Lqc/c;.h0:()J` @kind virtual;
  #L3d11ce.  v1:= temp @kind wide;
  #L3d11d0.  v3:= 0L;
  #L3d11d4.  v5:= v9 @kind wide;
  #L3d11d6.  call `d`(v1, v3, v5) @signature `Lhc/c;.d:(JJJ)V` @kind static;
  #L3d11dc.  v0:= v7.`lc.a$e.q` @type ^`long` @kind wide;
  #L3d11e0.  v2:= lcmp(v9, v0);
  #L3d11e4.  if v2 > 0 then goto L3d1202;
  #L3d11e8.  v0:= v7.`lc.a$e.r` @type ^`lc.a` @kind object;
  #L3d11ec.  v0:= v0.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d11f0.  call `q`(v0, v8, v9) @signature `Lqc/r;.q:(Lqc/c;J)V` @kind interface;
  #L3d11f6.  v0:= v7.`lc.a$e.q` @type ^`long` @kind wide;
  #L3d11fa.  v0:= v0 - v9 @kind long;
  #L3d11fc.  v7.`lc.a$e.q` @type ^`long` := v0 @kind wide;
  #L3d1200.  return @kind void;
  #L3d1202.  v8:= new `java.net.ProtocolException`;
  #L3d1206.  v0:= new `java.lang.StringBuilder`;
  #L3d120a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d1210.  v1:= "expected " @kind object;
  #L3d1214.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d121a.  v1:= v7.`lc.a$e.q` @type ^`long` @kind wide;
  #L3d121e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1224.  v1:= " bytes but received " @kind object;
  #L3d1228.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d122e.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1234.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d123a.  v9:= temp @kind object;
  #L3d123c.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d1242.  throw v8;
  #L3d1244.  v8:= new `java.lang.IllegalStateException`;
  #L3d1248.  v9:= "closed" @kind object;
  #L3d124c.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d1252.  throw v8;
}
