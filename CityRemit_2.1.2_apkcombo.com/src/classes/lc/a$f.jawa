record `lc.a$f` @kind class @AccessFlag  extends `lc.a$b` @kind class {
  `long` `lc.a$f.s` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`lc.a$f` v3 @kind this, `lc.a` v4 @kind object, `long` v5 ) @signature `Llc/a$f;.<init>:(Llc/a;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3d1328.  v0:= 0I;
  #L3d132a.  call `<init>`(v3, v4, v0) @signature `Llc/a$b;.<init>:(Llc/a;Llc/a$a;)V` @kind direct;
  #L3d1330.  v3.`lc.a$f.s` @type ^`long` := v5 @kind wide;
  #L3d1334.  v1:= 0L;
  #L3d1338.  v4:= lcmp(v5, v1);
  #L3d133c.  if v4 != 0 then goto L3d1348;
  #L3d1340.  v4:= 1I;
  #L3d1342.  call `a`(v3, v4, v0) @signature `Llc/a$b;.a:(ZLjava/io/IOException;)V` @kind virtual;
  #L3d1348.  return @kind void;
}
procedure `long` `T`(`lc.a$f` v7 @kind this, `qc.c` v8 @kind object, `long` v9 ) @signature `Llc/a$f;.T:(Lqc/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d1264.  v0:= 0L;
  #L3d1268.  v2:= lcmp(v9, v0);
  #L3d126c.  if v2 < 0 then goto L3d12e8;
  #L3d1270.  v2:= v7.`lc.a$b.p` @type ^`boolean` @kind boolean;
  #L3d1274.  if v2 != 0 then goto L3d12d8;
  #L3d1278.  v2:= v7.`lc.a$f.s` @type ^`long` @kind wide;
  #L3d127c.  v4:= -1L;
  #L3d1280.  v6:= lcmp(v2, v0);
  #L3d1284.  if v6 != 0 then goto L3d128a;
  #L3d1288.  return v4 @kind wide;
  #L3d128a.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3d1290.  v9:= temp @kind wide;
  #L3d1292.  call temp:= `T`(v7, v8, v9) @signature `Llc/a$b;.T:(Lqc/c;J)J` @kind super;
  #L3d1298.  v8:= temp @kind wide;
  #L3d129a.  v10:= lcmp(v8, v4);
  #L3d129e.  if v10 == 0 then goto L3d12c0;
  #L3d12a2.  v2:= v7.`lc.a$f.s` @type ^`long` @kind wide;
  #L3d12a6.  v2:= v2 - v8 @kind long;
  #L3d12a8.  v7.`lc.a$f.s` @type ^`long` := v2 @kind wide;
  #L3d12ac.  v10:= lcmp(v2, v0);
  #L3d12b0.  if v10 != 0 then goto L3d12be;
  #L3d12b4.  v10:= 1I;
  #L3d12b6.  v0:= 0I;
  #L3d12b8.  call `a`(v7, v10, v0) @signature `Llc/a$b;.a:(ZLjava/io/IOException;)V` @kind virtual;
  #L3d12be.  return v8 @kind wide;
  #L3d12c0.  v8:= new `java.net.ProtocolException`;
  #L3d12c4.  v9:= "unexpected end of stream" @kind object;
  #L3d12c8.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d12ce.  v9:= 0I;
  #L3d12d0.  call `a`(v7, v9, v8) @signature `Llc/a$b;.a:(ZLjava/io/IOException;)V` @kind virtual;
  #L3d12d6.  throw v8;
  #L3d12d8.  v8:= new `java.lang.IllegalStateException`;
  #L3d12dc.  v9:= "closed" @kind object;
  #L3d12e0.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d12e6.  throw v8;
  #L3d12e8.  v8:= new `java.lang.IllegalArgumentException`;
  #L3d12ec.  v0:= new `java.lang.StringBuilder`;
  #L3d12f0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d12f6.  v1:= "byteCount < 0: " @kind object;
  #L3d12fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1300.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1306.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d130c.  v9:= temp @kind object;
  #L3d130e.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d1314.  throw v8;
}
procedure `void` `close`(`lc.a$f` v5 @kind this) @signature `Llc/a$f;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d135c.  v0:= v5.`lc.a$b.p` @type ^`boolean` @kind boolean;
  #L3d1360.  if v0 == 0 then goto L3d1366;
  #L3d1364.  return @kind void;
  #L3d1366.  v0:= v5.`lc.a$f.s` @type ^`long` @kind wide;
  #L3d136a.  v2:= 0L;
  #L3d136e.  v4:= lcmp(v0, v2);
  #L3d1372.  if v4 == 0 then goto L3d1394;
  #L3d1376.  v0:= 100I;
  #L3d137a.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3d137e.  call temp:= `n`(v5, v0, v1) @signature `Lhc/c;.n:(Lqc/s;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L3d1384.  v0:= temp;
  #L3d1386.  if v0 != 0 then goto L3d1394;
  #L3d138a.  v0:= 0I;
  #L3d138c.  v1:= 0I;
  #L3d138e.  call `a`(v5, v0, v1) @signature `Llc/a$b;.a:(ZLjava/io/IOException;)V` @kind virtual;
  #L3d1394.  v0:= 1I;
  #L3d1396.  v5.`lc.a$b.p` @type ^`boolean` := v0 @kind boolean;
  #L3d139a.  return @kind void;
}
