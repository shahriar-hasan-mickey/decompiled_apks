record `lc.a` @kind class @AccessFlag PUBLIC_FINAL extends `kc.c` @kind interface {
  `gc.u` `lc.a.a` @AccessFlag FINAL;
  `jc.g` `lc.a.b` @AccessFlag FINAL;
  `qc.e` `lc.a.c` @AccessFlag FINAL;
  `qc.d` `lc.a.d` @AccessFlag FINAL;
  `int` `lc.a.e` @AccessFlag ;
  `long` `lc.a.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`lc.a` v2 @kind this, `gc.u` v3 @kind object, `jc.g` v4 @kind object, `qc.e` v5 @kind object, `qc.d` v6 @kind object) @signature `Llc/a;.<init>:(Lgc/u;Ljc/g;Lqc/e;Lqc/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3d196c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d1972.  v0:= 0I;
  #L3d1974.  v2.`lc.a.e` @type ^`int` := v0;
  #L3d1978.  v0:= 262144L;
  #L3d197e.  v2.`lc.a.f` @type ^`long` := v0 @kind wide;
  #L3d1982.  v2.`lc.a.a` @type ^`gc.u` := v3 @kind object;
  #L3d1986.  v2.`lc.a.b` @type ^`jc.g` := v4 @kind object;
  #L3d198a.  v2.`lc.a.c` @type ^`qc.e` := v5 @kind object;
  #L3d198e.  v2.`lc.a.d` @type ^`qc.d` := v6 @kind object;
  #L3d1992.  return @kind void;
}
procedure `java.lang.String` `m`(`lc.a` v5 @kind this) @signature `Llc/a;.m:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d16dc.  v0:= v5.`lc.a.c` @type ^`qc.e` @kind object;
  #L3d16e0.  v1:= v5.`lc.a.f` @type ^`long` @kind wide;
  #L3d16e4.  call temp:= `L`(v0, v1) @signature `Lqc/e;.L:(J)Ljava/lang/String;` @kind interface;
  #L3d16ea.  v0:= temp @kind object;
  #L3d16ec.  v1:= v5.`lc.a.f` @type ^`long` @kind wide;
  #L3d16f0.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3d16f6.  v3:= temp;
  #L3d16f8.  v3:= (`long`) v3 @kind i2l;
  #L3d16fa.  v1:= v1 - v3 @kind long;
  #L3d16fc.  v5.`lc.a.f` @type ^`long` := v1 @kind wide;
  #L3d1700.  return v0 @kind object;
}
procedure `void` `a`(`lc.a` v1 @kind this) @signature `Llc/a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d19fc.  v0:= v1.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d1a00.  call `flush`(v0) @signature `Lqc/d;.flush:()V` @kind interface;
  #L3d1a06.  return @kind void;
}
procedure `void` `b`(`lc.a` v1 @kind this, `gc.x` v2 @kind object) @signature `Llc/a;.b:(Lgc/x;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d1af0.  v0:= v1.`lc.a.b` @type ^`jc.g` @kind object;
  #L3d1af4.  call temp:= `d`(v0) @signature `Ljc/g;.d:()Ljc/c;` @kind virtual;
  #L3d1afa.  v0:= temp @kind object;
  #L3d1afc.  call temp:= `p`(v0) @signature `Ljc/c;.p:()Lgc/b0;` @kind virtual;
  #L3d1b02.  v0:= temp @kind object;
  #L3d1b04.  call temp:= `b`(v0) @signature `Lgc/b0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L3d1b0a.  v0:= temp @kind object;
  #L3d1b0c.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3d1b12.  v0:= temp @kind object;
  #L3d1b14.  call temp:= `a`(v2, v0) @signature `Lkc/i;.a:(Lgc/x;Ljava/net/Proxy$Type;)Ljava/lang/String;` @kind static;
  #L3d1b1a.  v0:= temp @kind object;
  #L3d1b1c.  call temp:= `d`(v2) @signature `Lgc/x;.d:()Lgc/q;` @kind virtual;
  #L3d1b22.  v2:= temp @kind object;
  #L3d1b24.  call `o`(v1, v2, v0) @signature `Llc/a;.o:(Lgc/q;Ljava/lang/String;)V` @kind virtual;
  #L3d1b2a.  return @kind void;
}
procedure `void` `c`(`lc.a` v1 @kind this) @signature `Llc/a;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d1a18.  v0:= v1.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d1a1c.  call `flush`(v0) @signature `Lqc/d;.flush:()V` @kind interface;
  #L3d1a22.  return @kind void;
}
procedure `void` `cancel`(`lc.a` v1 @kind this) @signature `Llc/a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d19a4.  v0:= v1.`lc.a.b` @type ^`jc.g` @kind object;
  #L3d19a8.  call temp:= `d`(v0) @signature `Ljc/g;.d:()Ljc/c;` @kind virtual;
  #L3d19ae.  v0:= temp @kind object;
  #L3d19b0.  if v0 == 0 then goto L3d19ba;
  #L3d19b4.  call `c`(v0) @signature `Ljc/c;.c:()V` @kind virtual;
  #L3d19ba.  return @kind void;
}
procedure `gc.a0` `d`(`lc.a` v6 @kind this, `gc.z` v7 @kind object) @signature `Llc/a;.d:(Lgc/z;)Lgc/a0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d15ec.  v0:= v6.`lc.a.b` @type ^`jc.g` @kind object;
  #L3d15f0.  v1:= v0.`jc.g.f` @type ^`gc.o` @kind object;
  #L3d15f4.  v0:= v0.`jc.g.e` @type ^`gc.d` @kind object;
  #L3d15f8.  call `q`(v1, v0) @signature `Lgc/o;.q:(Lgc/d;)V` @kind virtual;
  #L3d15fe.  v0:= "Content-Type" @kind object;
  #L3d1602.  call temp:= `i`(v7, v0) @signature `Lgc/z;.i:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3d1608.  v0:= temp @kind object;
  #L3d160a.  call temp:= `c`(v7) @signature `Lkc/e;.c:(Lgc/z;)Z` @kind static;
  #L3d1610.  v1:= temp;
  #L3d1612.  if v1 != 0 then goto L3d1636;
  #L3d1616.  v1:= 0L;
  #L3d161a.  call temp:= `k`(v6, v1) @signature `Llc/a;.k:(J)Lqc/s;` @kind virtual;
  #L3d1620.  v7:= temp @kind object;
  #L3d1622.  v3:= new `kc.h`;
  #L3d1626.  call temp:= `b`(v7) @signature `Lqc/l;.b:(Lqc/s;)Lqc/e;` @kind static;
  #L3d162c.  v7:= temp @kind object;
  #L3d162e.  call `<init>`(v3, v0, v1, v7) @signature `Lkc/h;.<init>:(Ljava/lang/String;JLqc/e;)V` @kind direct;
  #L3d1634.  return v3 @kind object;
  #L3d1636.  v1:= "Transfer-Encoding" @kind object;
  #L3d163a.  call temp:= `i`(v7, v1) @signature `Lgc/z;.i:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3d1640.  v1:= temp @kind object;
  #L3d1642.  v2:= "chunked" @kind object;
  #L3d1646.  call temp:= `equalsIgnoreCase`(v2, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d164c.  v1:= temp;
  #L3d164e.  v2:= -1L;
  #L3d1652.  if v1 == 0 then goto L3d1682;
  #L3d1656.  call temp:= `E`(v7) @signature `Lgc/z;.E:()Lgc/x;` @kind virtual;
  #L3d165c.  v7:= temp @kind object;
  #L3d165e.  call temp:= `h`(v7) @signature `Lgc/x;.h:()Lgc/r;` @kind virtual;
  #L3d1664.  v7:= temp @kind object;
  #L3d1666.  call temp:= `i`(v6, v7) @signature `Llc/a;.i:(Lgc/r;)Lqc/s;` @kind virtual;
  #L3d166c.  v7:= temp @kind object;
  #L3d166e.  v1:= new `kc.h`;
  #L3d1672.  call temp:= `b`(v7) @signature `Lqc/l;.b:(Lqc/s;)Lqc/e;` @kind static;
  #L3d1678.  v7:= temp @kind object;
  #L3d167a.  call `<init>`(v1, v0, v2, v7) @signature `Lkc/h;.<init>:(Ljava/lang/String;JLqc/e;)V` @kind direct;
  #L3d1680.  return v1 @kind object;
  #L3d1682.  call temp:= `b`(v7) @signature `Lkc/e;.b:(Lgc/z;)J` @kind static;
  #L3d1688.  v4:= temp @kind wide;
  #L3d168a.  v7:= lcmp(v4, v2);
  #L3d168e.  if v7 == 0 then goto L3d16ae;
  #L3d1692.  call temp:= `k`(v6, v4) @signature `Llc/a;.k:(J)Lqc/s;` @kind virtual;
  #L3d1698.  v7:= temp @kind object;
  #L3d169a.  v1:= new `kc.h`;
  #L3d169e.  call temp:= `b`(v7) @signature `Lqc/l;.b:(Lqc/s;)Lqc/e;` @kind static;
  #L3d16a4.  v7:= temp @kind object;
  #L3d16a6.  call `<init>`(v1, v0, v4, v7) @signature `Lkc/h;.<init>:(Ljava/lang/String;JLqc/e;)V` @kind direct;
  #L3d16ac.  return v1 @kind object;
  #L3d16ae.  v7:= new `kc.h`;
  #L3d16b2.  call temp:= `l`(v6) @signature `Llc/a;.l:()Lqc/s;` @kind virtual;
  #L3d16b8.  v1:= temp @kind object;
  #L3d16ba.  call temp:= `b`(v1) @signature `Lqc/l;.b:(Lqc/s;)Lqc/e;` @kind static;
  #L3d16c0.  v1:= temp @kind object;
  #L3d16c2.  call `<init>`(v7, v0, v2, v1) @signature `Lkc/h;.<init>:(Ljava/lang/String;JLqc/e;)V` @kind direct;
  #L3d16c8.  return v7 @kind object;
}
procedure `qc.r` `e`(`lc.a` v2 @kind this, `gc.x` v3 @kind object, `long` v4 ) @signature `Llc/a;.e:(Lgc/x;J)Lqc/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d1714.  v0:= "Transfer-Encoding" @kind object;
  #L3d1718.  call temp:= `c`(v3, v0) @signature `Lgc/x;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3d171e.  v3:= temp @kind object;
  #L3d1720.  v0:= "chunked" @kind object;
  #L3d1724.  call temp:= `equalsIgnoreCase`(v0, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d172a.  v3:= temp;
  #L3d172c.  if v3 == 0 then goto L3d173a;
  #L3d1730.  call temp:= `h`(v2) @signature `Llc/a;.h:()Lqc/r;` @kind virtual;
  #L3d1736.  v3:= temp @kind object;
  #L3d1738.  return v3 @kind object;
  #L3d173a.  v0:= -1L;
  #L3d173e.  v3:= lcmp(v4, v0);
  #L3d1742.  if v3 == 0 then goto L3d1750;
  #L3d1746.  call temp:= `j`(v2, v4) @signature `Llc/a;.j:(J)Lqc/r;` @kind virtual;
  #L3d174c.  v3:= temp @kind object;
  #L3d174e.  return v3 @kind object;
  #L3d1750.  v3:= new `java.lang.IllegalStateException`;
  #L3d1754.  v4:= "Cannot stream a request body without chunked encoding or a known content length!" @kind object;
  #L3d1758.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d175e.  throw v3;
}
procedure `gc.z$a` `f`(`lc.a` v4 @kind this, `boolean` v5 ) @signature `Llc/a;.f:(Z)Lgc/z$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d14d4.  v0:= v4.`lc.a.e` @type ^`int`;
  #L3d14d8.  v1:= 3I;
  #L3d14da.  v2:= 1I;
  #L3d14dc.  if v0 == v2 then goto L3d1518;
  #L3d14e0.  if v0 != v1 then goto L3d14e6;
  #L3d14e4.  goto L3d1518;
  #L3d14e6.  v5:= new `java.lang.IllegalStateException`;
  #L3d14ea.  v0:= new `java.lang.StringBuilder`;
  #L3d14ee.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d14f4.  v1:= "state: " @kind object;
  #L3d14f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d14fe.  v1:= v4.`lc.a.e` @type ^`int`;
  #L3d1502.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1508.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d150e.  v0:= temp @kind object;
  #L3d1510.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d1516.  throw v5;
  #L3d1518.  call temp:= `m`(v4) @signature `Llc/a;.m:()Ljava/lang/String;` @kind direct;
  #L3d151e.  v0:= temp @kind object;
  #L3d1520.  call temp:= `a`(v0) @signature `Lkc/k;.a:(Ljava/lang/String;)Lkc/k;` @kind static;
  #L3d1526.  v0:= temp @kind object;
  #L3d1528.  v2:= new `gc.z$a`;
  #L3d152c.  call `<init>`(v2) @signature `Lgc/z$a;.<init>:()V` @kind direct;
  #L3d1532.  v3:= v0.`kc.k.a` @type ^`gc.v` @kind object;
  #L3d1536.  call temp:= `n`(v2, v3) @signature `Lgc/z$a;.n:(Lgc/v;)Lgc/z$a;` @kind virtual;
  #L3d153c.  v2:= temp @kind object;
  #L3d153e.  v3:= v0.`kc.k.b` @type ^`int`;
  #L3d1542.  call temp:= `g`(v2, v3) @signature `Lgc/z$a;.g:(I)Lgc/z$a;` @kind virtual;
  #L3d1548.  v2:= temp @kind object;
  #L3d154a.  v3:= v0.`kc.k.c` @type ^`java.lang.String` @kind object;
  #L3d154e.  call temp:= `k`(v2, v3) @signature `Lgc/z$a;.k:(Ljava/lang/String;)Lgc/z$a;` @kind virtual;
  #L3d1554.  v2:= temp @kind object;
  #L3d1556.  call temp:= `n`(v4) @signature `Llc/a;.n:()Lgc/q;` @kind virtual;
  #L3d155c.  v3:= temp @kind object;
  #L3d155e.  call temp:= `j`(v2, v3) @signature `Lgc/z$a;.j:(Lgc/q;)Lgc/z$a;` @kind virtual;
  #L3d1564.  v2:= temp @kind object;
  #L3d1566.  v3:= 100I;
  #L3d156a.  if v5 == 0 then goto L3d157a;
  #L3d156e.  v5:= v0.`kc.k.b` @type ^`int`;
  #L3d1572.  if v5 != v3 then goto L3d157a;
  #L3d1576.  v5:= 0I;
  #L3d1578.  return v5 @kind object;
  #L3d157a.  v5:= v0.`kc.k.b` @type ^`int`;
  #L3d157e.  if v5 != v3 then goto L3d1588;
  #L3d1582.  v4.`lc.a.e` @type ^`int` := v1;
  #L3d1586.  return v2 @kind object;
  #L3d1588.  v5:= 4I;
  #L3d158a.  v4.`lc.a.e` @type ^`int` := v5;
  #L3d158e.  return v2 @kind object;
  #L3d1590.  v5:= Exception @type ^`java.io.EOFException` @kind object;
  #L3d1592.  v0:= new `java.io.IOException`;
  #L3d1596.  v1:= new `java.lang.StringBuilder`;
  #L3d159a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d15a0.  v2:= "unexpected end of stream on " @kind object;
  #L3d15a4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d15aa.  v2:= v4.`lc.a.b` @type ^`jc.g` @kind object;
  #L3d15ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d15b4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d15ba.  v1:= temp @kind object;
  #L3d15bc.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d15c2.  call temp:= `initCause`(v0, v5) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3d15c8.  throw v0;
  catch `java.io.EOFException` @[L3d1518..L3d158e] goto L3d1590;
}
procedure `void` `g`(`lc.a` v2 @kind this, `qc.i` v3 @kind object) @signature `Llc/a;.g:(Lqc/i;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3d19cc.  call temp:= `i`(v3) @signature `Lqc/i;.i:()Lqc/t;` @kind virtual;
  #L3d19d2.  v0:= temp @kind object;
  #L3d19d4.  v1:= `@@qc.t.d` @type ^`qc.t` @kind object;
  #L3d19d8.  call temp:= `j`(v3, v1) @signature `Lqc/i;.j:(Lqc/t;)Lqc/i;` @kind virtual;
  #L3d19de.  call temp:= `a`(v0) @signature `Lqc/t;.a:()Lqc/t;` @kind virtual;
  #L3d19e4.  call temp:= `b`(v0) @signature `Lqc/t;.b:()Lqc/t;` @kind virtual;
  #L3d19ea.  return @kind void;
}
procedure `qc.r` `h`(`lc.a` v3 @kind this) @signature `Llc/a;.h:()Lqc/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d1770.  v0:= v3.`lc.a.e` @type ^`int`;
  #L3d1774.  v1:= 1I;
  #L3d1776.  if v0 != v1 then goto L3d178c;
  #L3d177a.  v0:= 2I;
  #L3d177c.  v3.`lc.a.e` @type ^`int` := v0;
  #L3d1780.  v0:= new `lc.a$c`;
  #L3d1784.  call `<init>`(v0, v3) @signature `Llc/a$c;.<init>:(Llc/a;)V` @kind direct;
  #L3d178a.  return v0 @kind object;
  #L3d178c.  v0:= new `java.lang.IllegalStateException`;
  #L3d1790.  v1:= new `java.lang.StringBuilder`;
  #L3d1794.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d179a.  v2:= "state: " @kind object;
  #L3d179e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d17a4.  v2:= v3.`lc.a.e` @type ^`int`;
  #L3d17a8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d17ae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d17b4.  v1:= temp @kind object;
  #L3d17b6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d17bc.  throw v0;
}
procedure `qc.s` `i`(`lc.a` v2 @kind this, `gc.r` v3 @kind object) @signature `Llc/a;.i:(Lgc/r;)Lqc/s;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d1830.  v0:= v2.`lc.a.e` @type ^`int`;
  #L3d1834.  v1:= 4I;
  #L3d1836.  if v0 != v1 then goto L3d184c;
  #L3d183a.  v0:= 5I;
  #L3d183c.  v2.`lc.a.e` @type ^`int` := v0;
  #L3d1840.  v0:= new `lc.a$d`;
  #L3d1844.  call `<init>`(v0, v2, v3) @signature `Llc/a$d;.<init>:(Llc/a;Lgc/r;)V` @kind direct;
  #L3d184a.  return v0 @kind object;
  #L3d184c.  v3:= new `java.lang.IllegalStateException`;
  #L3d1850.  v0:= new `java.lang.StringBuilder`;
  #L3d1854.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d185a.  v1:= "state: " @kind object;
  #L3d185e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1864.  v1:= v2.`lc.a.e` @type ^`int`;
  #L3d1868.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d186e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d1874.  v0:= temp @kind object;
  #L3d1876.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d187c.  throw v3;
}
procedure `qc.r` `j`(`lc.a` v2 @kind this, `long` v3 ) @signature `Llc/a;.j:(J)Lqc/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d17d0.  v0:= v2.`lc.a.e` @type ^`int`;
  #L3d17d4.  v1:= 1I;
  #L3d17d6.  if v0 != v1 then goto L3d17ec;
  #L3d17da.  v0:= 2I;
  #L3d17dc.  v2.`lc.a.e` @type ^`int` := v0;
  #L3d17e0.  v0:= new `lc.a$e`;
  #L3d17e4.  call `<init>`(v0, v2, v3) @signature `Llc/a$e;.<init>:(Llc/a;J)V` @kind direct;
  #L3d17ea.  return v0 @kind object;
  #L3d17ec.  v3:= new `java.lang.IllegalStateException`;
  #L3d17f0.  v4:= new `java.lang.StringBuilder`;
  #L3d17f4.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d17fa.  v0:= "state: " @kind object;
  #L3d17fe.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1804.  v0:= v2.`lc.a.e` @type ^`int`;
  #L3d1808.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d180e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d1814.  v4:= temp @kind object;
  #L3d1816.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d181c.  throw v3;
}
procedure `qc.s` `k`(`lc.a` v2 @kind this, `long` v3 ) @signature `Llc/a;.k:(J)Lqc/s;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d1890.  v0:= v2.`lc.a.e` @type ^`int`;
  #L3d1894.  v1:= 4I;
  #L3d1896.  if v0 != v1 then goto L3d18ac;
  #L3d189a.  v0:= 5I;
  #L3d189c.  v2.`lc.a.e` @type ^`int` := v0;
  #L3d18a0.  v0:= new `lc.a$f`;
  #L3d18a4.  call `<init>`(v0, v2, v3) @signature `Llc/a$f;.<init>:(Llc/a;J)V` @kind direct;
  #L3d18aa.  return v0 @kind object;
  #L3d18ac.  v3:= new `java.lang.IllegalStateException`;
  #L3d18b0.  v4:= new `java.lang.StringBuilder`;
  #L3d18b4.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d18ba.  v0:= "state: " @kind object;
  #L3d18be.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d18c4.  v0:= v2.`lc.a.e` @type ^`int`;
  #L3d18c8.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d18ce.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d18d4.  v4:= temp @kind object;
  #L3d18d6.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d18dc.  throw v3;
}
procedure `qc.s` `l`(`lc.a` v3 @kind this) @signature `Llc/a;.l:()Lqc/s;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d18f0.  v0:= v3.`lc.a.e` @type ^`int`;
  #L3d18f4.  v1:= 4I;
  #L3d18f6.  if v0 != v1 then goto L3d192a;
  #L3d18fa.  v0:= v3.`lc.a.b` @type ^`jc.g` @kind object;
  #L3d18fe.  if v0 == 0 then goto L3d191a;
  #L3d1902.  v1:= 5I;
  #L3d1904.  v3.`lc.a.e` @type ^`int` := v1;
  #L3d1908.  call `j`(v0) @signature `Ljc/g;.j:()V` @kind virtual;
  #L3d190e.  v0:= new `lc.a$g`;
  #L3d1912.  call `<init>`(v0, v3) @signature `Llc/a$g;.<init>:(Llc/a;)V` @kind direct;
  #L3d1918.  return v0 @kind object;
  #L3d191a.  v0:= new `java.lang.IllegalStateException`;
  #L3d191e.  v1:= "streamAllocation == null" @kind object;
  #L3d1922.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d1928.  throw v0;
  #L3d192a.  v0:= new `java.lang.IllegalStateException`;
  #L3d192e.  v1:= new `java.lang.StringBuilder`;
  #L3d1932.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d1938.  v2:= "state: " @kind object;
  #L3d193c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1942.  v2:= v3.`lc.a.e` @type ^`int`;
  #L3d1946.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d194c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d1952.  v1:= temp @kind object;
  #L3d1954.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d195a.  throw v0;
}
procedure `gc.q` `n`(`lc.a` v3 @kind this) @signature `Llc/a;.n:()Lgc/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d1490.  v0:= new `gc.q$a`;
  #L3d1494.  call `<init>`(v0) @signature `Lgc/q$a;.<init>:()V` @kind direct;
  #L3d149a.  call temp:= `m`(v3) @signature `Llc/a;.m:()Ljava/lang/String;` @kind direct;
  #L3d14a0.  v1:= temp @kind object;
  #L3d14a2.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3d14a8.  v2:= temp;
  #L3d14aa.  if v2 == 0 then goto L3d14ba;
  #L3d14ae.  v2:= `@@hc.a.a` @type ^`hc.a` @kind object;
  #L3d14b2.  call `a`(v2, v0, v1) @signature `Lhc/a;.a:(Lgc/q$a;Ljava/lang/String;)V` @kind virtual;
  #L3d14b8.  goto L3d149a;
  #L3d14ba.  call temp:= `d`(v0) @signature `Lgc/q$a;.d:()Lgc/q;` @kind virtual;
  #L3d14c0.  v0:= temp @kind object;
  #L3d14c2.  return v0 @kind object;
}
procedure `void` `o`(`lc.a` v4 @kind this, `gc.q` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Llc/a;.o:(Lgc/q;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d1a34.  v0:= v4.`lc.a.e` @type ^`int`;
  #L3d1a38.  if v0 != 0 then goto L3d1aae;
  #L3d1a3c.  v0:= v4.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d1a40.  call temp:= `V`(v0, v6) @signature `Lqc/d;.V:(Ljava/lang/String;)Lqc/d;` @kind interface;
  #L3d1a46.  v6:= temp @kind object;
  #L3d1a48.  v0:= "\r\n" @kind object;
  #L3d1a4c.  call temp:= `V`(v6, v0) @signature `Lqc/d;.V:(Ljava/lang/String;)Lqc/d;` @kind interface;
  #L3d1a52.  v6:= 0I;
  #L3d1a54.  call temp:= `g`(v5) @signature `Lgc/q;.g:()I` @kind virtual;
  #L3d1a5a.  v1:= temp;
  #L3d1a5c.  if v6 >= v1 then goto L3d1a9c;
  #L3d1a60.  v2:= v4.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d1a64.  call temp:= `e`(v5, v6) @signature `Lgc/q;.e:(I)Ljava/lang/String;` @kind virtual;
  #L3d1a6a.  v3:= temp @kind object;
  #L3d1a6c.  call temp:= `V`(v2, v3) @signature `Lqc/d;.V:(Ljava/lang/String;)Lqc/d;` @kind interface;
  #L3d1a72.  v2:= temp @kind object;
  #L3d1a74.  v3:= ": " @kind object;
  #L3d1a78.  call temp:= `V`(v2, v3) @signature `Lqc/d;.V:(Ljava/lang/String;)Lqc/d;` @kind interface;
  #L3d1a7e.  v2:= temp @kind object;
  #L3d1a80.  call temp:= `h`(v5, v6) @signature `Lgc/q;.h:(I)Ljava/lang/String;` @kind virtual;
  #L3d1a86.  v3:= temp @kind object;
  #L3d1a88.  call temp:= `V`(v2, v3) @signature `Lqc/d;.V:(Ljava/lang/String;)Lqc/d;` @kind interface;
  #L3d1a8e.  v2:= temp @kind object;
  #L3d1a90.  call temp:= `V`(v2, v0) @signature `Lqc/d;.V:(Ljava/lang/String;)Lqc/d;` @kind interface;
  #L3d1a96.  v6:= v6 + 1;
  #L3d1a9a.  goto L3d1a5c;
  #L3d1a9c.  v5:= v4.`lc.a.d` @type ^`qc.d` @kind object;
  #L3d1aa0.  call temp:= `V`(v5, v0) @signature `Lqc/d;.V:(Ljava/lang/String;)Lqc/d;` @kind interface;
  #L3d1aa6.  v5:= 1I;
  #L3d1aa8.  v4.`lc.a.e` @type ^`int` := v5;
  #L3d1aac.  return @kind void;
  #L3d1aae.  v5:= new `java.lang.IllegalStateException`;
  #L3d1ab2.  v6:= new `java.lang.StringBuilder`;
  #L3d1ab6.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d1abc.  v0:= "state: " @kind object;
  #L3d1ac0.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1ac6.  v0:= v4.`lc.a.e` @type ^`int`;
  #L3d1aca.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1ad0.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d1ad6.  v6:= temp @kind object;
  #L3d1ad8.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d1ade.  throw v5;
}
