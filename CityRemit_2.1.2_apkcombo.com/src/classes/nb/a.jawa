record `nb.a` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `nb.a` `@@nb.a.o` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `nb.a` `@@nb.a.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `nb.a` `@@nb.a.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `nb.a`[] `@@nb.a.r` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lnb/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3f3fc0.  v0:= new `nb.a`;
  #L3f3fc4.  v1:= "COROUTINE_SUSPENDED" @kind object;
  #L3f3fc8.  v2:= 0I;
  #L3f3fca.  call `<init>`(v0, v1, v2) @signature `Lnb/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3f3fd0.  `@@nb.a.o` @type ^`nb.a` := v0 @kind object;
  #L3f3fd4.  v0:= new `nb.a`;
  #L3f3fd8.  v1:= "UNDECIDED" @kind object;
  #L3f3fdc.  v2:= 1I;
  #L3f3fde.  call `<init>`(v0, v1, v2) @signature `Lnb/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3f3fe4.  `@@nb.a.p` @type ^`nb.a` := v0 @kind object;
  #L3f3fe8.  v0:= new `nb.a`;
  #L3f3fec.  v1:= "RESUMED" @kind object;
  #L3f3ff0.  v2:= 2I;
  #L3f3ff2.  call `<init>`(v0, v1, v2) @signature `Lnb/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3f3ff8.  `@@nb.a.q` @type ^`nb.a` := v0 @kind object;
  #L3f3ffc.  call temp:= `c`() @signature `Lnb/a;.c:()[Lnb/a;` @kind static;
  #L3f4002.  v0:= temp @kind object;
  #L3f4004.  `@@nb.a.r` @type ^`nb.a`[] := v0 @kind object;
  #L3f4008.  return @kind void;
}
procedure `void` `<init>`(`nb.a` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lnb/a;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3f401c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3f4022.  return @kind void;
}
procedure `nb.a`[] `c`() @signature `Lnb/a;.c:()[Lnb/a;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L3f3f64.  v0:= 3I;
  #L3f3f66.  v0:= new `nb.a`[v0];
  #L3f3f6a.  v1:= `@@nb.a.o` @type ^`nb.a` @kind object;
  #L3f3f6e.  v2:= 0I;
  #L3f3f70.  v0[v2]:= v1 @kind object;
  #L3f3f74.  v1:= `@@nb.a.p` @type ^`nb.a` @kind object;
  #L3f3f78.  v2:= 1I;
  #L3f3f7a.  v0[v2]:= v1 @kind object;
  #L3f3f7e.  v1:= `@@nb.a.q` @type ^`nb.a` @kind object;
  #L3f3f82.  v2:= 2I;
  #L3f3f84.  v0[v2]:= v1 @kind object;
  #L3f3f88.  return v0 @kind object;
}
procedure `nb.a` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lnb/a;.valueOf:(Ljava/lang/String;)Lnb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f3f40.  v0:= constclass @type ^`nb.a` @kind object;
  #L3f3f44.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3f3f4a.  v1:= temp @kind object;
  #L3f3f4c.  v1:= (`nb.a`) v1 @kind object;
  #L3f3f50.  return v1 @kind object;
}
procedure `nb.a`[] `values`() @signature `Lnb/a;.values:()[Lnb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f3f9c.  v0:= `@@nb.a.r` @type ^`nb.a`[] @kind object;
  #L3f3fa0.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3f3fa6.  v0:= temp @kind object;
  #L3f3fa8.  v0:= (`nb.a`[]) v0 @kind object;
  #L3f3fac.  return v0 @kind object;
}
