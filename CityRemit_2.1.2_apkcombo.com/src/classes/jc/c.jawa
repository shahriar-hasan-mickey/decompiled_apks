record `jc.c` @kind class @AccessFlag PUBLIC_FINAL extends `mc.g$j` @kind class, `gc.h` @kind interface {
  `gc.i` `jc.c.b` @AccessFlag PRIVATE_FINAL;
  `gc.b0` `jc.c.c` @AccessFlag PRIVATE_FINAL;
  `java.net.Socket` `jc.c.d` @AccessFlag PRIVATE;
  `java.net.Socket` `jc.c.e` @AccessFlag PRIVATE;
  `gc.p` `jc.c.f` @AccessFlag PRIVATE;
  `gc.v` `jc.c.g` @AccessFlag PRIVATE;
  `mc.g` `jc.c.h` @AccessFlag PRIVATE;
  `qc.e` `jc.c.i` @AccessFlag PRIVATE;
  `qc.d` `jc.c.j` @AccessFlag PRIVATE;
  `boolean` `jc.c.k` @AccessFlag PUBLIC;
  `int` `jc.c.l` @AccessFlag PUBLIC;
  `int` `jc.c.m` @AccessFlag PUBLIC;
  `java.util.List` `jc.c.n` @AccessFlag PUBLIC_FINAL;
  `long` `jc.c.o` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`jc.c` v2 @kind this, `gc.i` v3 @kind object, `gc.b0` v4 @kind object) @signature `Ljc/c;.<init>:(Lgc/i;Lgc/b0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39c738.  call `<init>`(v2) @signature `Lmc/g$j;.<init>:()V` @kind direct;
  #L39c73e.  v0:= 1I;
  #L39c740.  v2.`jc.c.m` @type ^`int` := v0;
  #L39c744.  v0:= new `java.util.ArrayList`;
  #L39c748.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L39c74e.  v2.`jc.c.n` @type ^`java.util.List` := v0 @kind object;
  #L39c752.  v0:= 9223372036854775807L;
  #L39c75c.  v2.`jc.c.o` @type ^`long` := v0 @kind wide;
  #L39c760.  v2.`jc.c.b` @type ^`gc.i` := v3 @kind object;
  #L39c764.  v2.`jc.c.c` @type ^`gc.b0` := v4 @kind object;
  #L39c768.  return @kind void;
}
procedure `void` `e`(`jc.c` v4 @kind this, `int` v5 , `int` v6 , `gc.d` v7 @kind object, `gc.o` v8 @kind object) @signature `Ljc/c;.e:(IILgc/d;Lgc/o;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39ca8c.  v0:= v4.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39ca90.  call temp:= `b`(v0) @signature `Lgc/b0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L39ca96.  v0:= temp @kind object;
  #L39ca98.  v1:= v4.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39ca9c.  call temp:= `a`(v1) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39caa2.  v1:= temp @kind object;
  #L39caa4.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L39caaa.  v2:= temp @kind object;
  #L39caac.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L39cab0.  if v2 == v3 then goto L39cad2;
  #L39cab4.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L39caba.  v2:= temp @kind object;
  #L39cabc.  v3:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L39cac0.  if v2 != v3 then goto L39cac6;
  #L39cac4.  goto L39cad2;
  #L39cac6.  v1:= new `java.net.Socket`;
  #L39caca.  call `<init>`(v1, v0) @signature `Ljava/net/Socket;.<init>:(Ljava/net/Proxy;)V` @kind direct;
  #L39cad0.  goto L39cae2;
  #L39cad2.  call temp:= `j`(v1) @signature `Lgc/a;.j:()Ljavax/net/SocketFactory;` @kind virtual;
  #L39cad8.  v1:= temp @kind object;
  #L39cada.  call temp:= `createSocket`(v1) @signature `Ljavax/net/SocketFactory;.createSocket:()Ljava/net/Socket;` @kind virtual;
  #L39cae0.  v1:= temp @kind object;
  #L39cae2.  v4.`jc.c.d` @type ^`java.net.Socket` := v1 @kind object;
  #L39cae6.  v1:= v4.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39caea.  call temp:= `d`(v1) @signature `Lgc/b0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L39caf0.  v1:= temp @kind object;
  #L39caf2.  call `f`(v8, v7, v1, v0) @signature `Lgc/o;.f:(Lgc/d;Ljava/net/InetSocketAddress;Ljava/net/Proxy;)V` @kind virtual;
  #L39caf8.  v7:= v4.`jc.c.d` @type ^`java.net.Socket` @kind object;
  #L39cafc.  call `setSoTimeout`(v7, v6) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L39cb02.  call temp:= `l`() @signature `Lnc/g;.l:()Lnc/g;` @kind static;
  #L39cb08.  v6:= temp @kind object;
  #L39cb0a.  v7:= v4.`jc.c.d` @type ^`java.net.Socket` @kind object;
  #L39cb0e.  v8:= v4.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39cb12.  call temp:= `d`(v8) @signature `Lgc/b0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L39cb18.  v8:= temp @kind object;
  #L39cb1a.  call `h`(v6, v7, v8, v5) @signature `Lnc/g;.h:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @kind virtual;
  #L39cb20.  v5:= v4.`jc.c.d` @type ^`java.net.Socket` @kind object;
  #L39cb24.  call temp:= `i`(v5) @signature `Lqc/l;.i:(Ljava/net/Socket;)Lqc/s;` @kind static;
  #L39cb2a.  v5:= temp @kind object;
  #L39cb2c.  call temp:= `b`(v5) @signature `Lqc/l;.b:(Lqc/s;)Lqc/e;` @kind static;
  #L39cb32.  v5:= temp @kind object;
  #L39cb34.  v4.`jc.c.i` @type ^`qc.e` := v5 @kind object;
  #L39cb38.  v5:= v4.`jc.c.d` @type ^`java.net.Socket` @kind object;
  #L39cb3c.  call temp:= `f`(v5) @signature `Lqc/l;.f:(Ljava/net/Socket;)Lqc/r;` @kind static;
  #L39cb42.  v5:= temp @kind object;
  #L39cb44.  call temp:= `a`(v5) @signature `Lqc/l;.a:(Lqc/r;)Lqc/d;` @kind static;
  #L39cb4a.  v5:= temp @kind object;
  #L39cb4c.  v4.`jc.c.j` @type ^`qc.d` := v5 @kind object;
  #L39cb50.  goto L39cb6c;
  #L39cb52.  v5:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L39cb54.  call temp:= `getMessage`(v5) @signature `Ljava/lang/NullPointerException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L39cb5a.  v6:= temp @kind object;
  #L39cb5c.  v7:= "throw with null exception" @kind object;
  #L39cb60.  call temp:= `equals`(v7, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39cb66.  v6:= temp;
  #L39cb68.  if v6 != 0 then goto L39cb6e;
  #L39cb6c.  return @kind void;
  #L39cb6e.  v6:= new `java.io.IOException`;
  #L39cb72.  call `<init>`(v6, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L39cb78.  throw v6;
  #L39cb7a.  v5:= Exception @type ^`java.net.ConnectException` @kind object;
  #L39cb7c.  v6:= new `java.net.ConnectException`;
  #L39cb80.  v7:= new `java.lang.StringBuilder`;
  #L39cb84.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39cb8a.  v8:= "Failed to connect to " @kind object;
  #L39cb8e.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cb94.  v8:= v4.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39cb98.  call temp:= `d`(v8) @signature `Lgc/b0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L39cb9e.  v8:= temp @kind object;
  #L39cba0.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cba6.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39cbac.  v7:= temp @kind object;
  #L39cbae.  call `<init>`(v6, v7) @signature `Ljava/net/ConnectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39cbb4.  call temp:= `initCause`(v6, v5) @signature `Ljava/net/ConnectException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L39cbba.  throw v6;
  catch `java.net.ConnectException` @[L39cb02..L39cb20] goto L39cb7a;
  catch `java.lang.NullPointerException` @[L39cb20..L39cb50] goto L39cb52;
}
procedure `void` `f`(`jc.c` v7 @kind this, `jc.b` v8 @kind object) @signature `Ljc/c;.f:(Ljc/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L39cbe8.  v0:= v7.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39cbec.  call temp:= `a`(v0) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39cbf2.  v0:= temp @kind object;
  #L39cbf4.  call temp:= `k`(v0) @signature `Lgc/a;.k:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L39cbfa.  v1:= temp @kind object;
  #L39cbfc.  v2:= 0I;
  #L39cbfe.  v3:= v7.`jc.c.d` @type ^`java.net.Socket` @kind object;
  #L39cc02.  call temp:= `l`(v0) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39cc08.  v4:= temp @kind object;
  #L39cc0a.  call temp:= `l`(v4) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39cc10.  v4:= temp @kind object;
  #L39cc12.  call temp:= `l`(v0) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39cc18.  v5:= temp @kind object;
  #L39cc1a.  call temp:= `w`(v5) @signature `Lgc/r;.w:()I` @kind virtual;
  #L39cc20.  v5:= temp;
  #L39cc22.  v6:= 1I;
  #L39cc24.  call temp:= `createSocket`(v1, v3, v4, v5, v6) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L39cc2a.  v1:= temp @kind object;
  #L39cc2c.  v1:= (`javax.net.ssl.SSLSocket`) v1 @kind object;
  #L39cc30.  call temp:= `a`(v8, v1) @signature `Ljc/b;.a:(Ljavax/net/ssl/SSLSocket;)Lgc/j;` @kind virtual;
  #L39cc36.  v8:= temp @kind object;
  #L39cc38.  call temp:= `f`(v8) @signature `Lgc/j;.f:()Z` @kind virtual;
  #L39cc3e.  v3:= temp;
  #L39cc40.  if v3 == 0 then goto L39cc6a;
  #L39cc44.  call temp:= `l`() @signature `Lnc/g;.l:()Lnc/g;` @kind static;
  #L39cc4a.  v3:= temp @kind object;
  #L39cc4c.  call temp:= `l`(v0) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39cc52.  v4:= temp @kind object;
  #L39cc54.  call temp:= `l`(v4) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39cc5a.  v4:= temp @kind object;
  #L39cc5c.  call temp:= `f`(v0) @signature `Lgc/a;.f:()Ljava/util/List;` @kind virtual;
  #L39cc62.  v5:= temp @kind object;
  #L39cc64.  call `g`(v3, v1, v4, v5) @signature `Lnc/g;.g:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L39cc6a.  call `startHandshake`(v1) @signature `Ljavax/net/ssl/SSLSocket;.startHandshake:()V` @kind virtual;
  #L39cc70.  call temp:= `getSession`(v1) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L39cc76.  v3:= temp @kind object;
  #L39cc78.  call temp:= `b`(v3) @signature `Lgc/p;.b:(Ljavax/net/ssl/SSLSession;)Lgc/p;` @kind static;
  #L39cc7e.  v4:= temp @kind object;
  #L39cc80.  call temp:= `e`(v0) @signature `Lgc/a;.e:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L39cc86.  v5:= temp @kind object;
  #L39cc88.  call temp:= `l`(v0) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39cc8e.  v6:= temp @kind object;
  #L39cc90.  call temp:= `l`(v6) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39cc96.  v6:= temp @kind object;
  #L39cc98.  call temp:= `verify`(v5, v6, v3) @signature `Ljavax/net/ssl/HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @kind interface;
  #L39cc9e.  v3:= temp;
  #L39cca0.  if v3 != 0 then goto L39cd98;
  #L39cca4.  call temp:= `c`(v4) @signature `Lgc/p;.c:()Ljava/util/List;` @kind virtual;
  #L39ccaa.  v8:= temp @kind object;
  #L39ccac.  call temp:= `isEmpty`(v8) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L39ccb2.  v2:= temp;
  #L39ccb4.  v3:= "Hostname " @kind object;
  #L39ccb8.  if v2 != 0 then goto L39cd54;
  #L39ccbc.  v2:= 0I;
  #L39ccbe.  call temp:= `get`(v8, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39ccc4.  v8:= temp @kind object;
  #L39ccc6.  v8:= (`java.security.cert.X509Certificate`) v8 @kind object;
  #L39ccca.  v2:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L39ccce.  v4:= new `java.lang.StringBuilder`;
  #L39ccd2.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39ccd8.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ccde.  call temp:= `l`(v0) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39cce4.  v0:= temp @kind object;
  #L39cce6.  call temp:= `l`(v0) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39ccec.  v0:= temp @kind object;
  #L39ccee.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ccf4.  v0:= " not verified:\n    certificate: " @kind object;
  #L39ccf8.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ccfe.  call temp:= `c`(v8) @signature `Lgc/f;.c:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L39cd04.  v0:= temp @kind object;
  #L39cd06.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cd0c.  v0:= "\n    DN: " @kind object;
  #L39cd10.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cd16.  call temp:= `getSubjectDN`(v8) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L39cd1c.  v0:= temp @kind object;
  #L39cd1e.  call temp:= `getName`(v0) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L39cd24.  v0:= temp @kind object;
  #L39cd26.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cd2c.  v0:= "\n    subjectAltNames: " @kind object;
  #L39cd30.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cd36.  call temp:= `a`(v8) @signature `Lpc/d;.a:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @kind static;
  #L39cd3c.  v8:= temp @kind object;
  #L39cd3e.  call temp:= `append`(v4, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cd44.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39cd4a.  v8:= temp @kind object;
  #L39cd4c.  call `<init>`(v2, v8) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39cd52.  throw v2;
  #L39cd54.  v8:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L39cd58.  v2:= new `java.lang.StringBuilder`;
  #L39cd5c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39cd62.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cd68.  call temp:= `l`(v0) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39cd6e.  v0:= temp @kind object;
  #L39cd70.  call temp:= `l`(v0) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39cd76.  v0:= temp @kind object;
  #L39cd78.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cd7e.  v0:= " not verified (no certificates)" @kind object;
  #L39cd82.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cd88.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39cd8e.  v0:= temp @kind object;
  #L39cd90.  call `<init>`(v8, v0) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39cd96.  throw v8;
  #L39cd98.  call temp:= `a`(v0) @signature `Lgc/a;.a:()Lgc/f;` @kind virtual;
  #L39cd9e.  v3:= temp @kind object;
  #L39cda0.  call temp:= `l`(v0) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39cda6.  v0:= temp @kind object;
  #L39cda8.  call temp:= `l`(v0) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39cdae.  v0:= temp @kind object;
  #L39cdb0.  call temp:= `c`(v4) @signature `Lgc/p;.c:()Ljava/util/List;` @kind virtual;
  #L39cdb6.  v5:= temp @kind object;
  #L39cdb8.  call `a`(v3, v0, v5) @signature `Lgc/f;.a:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L39cdbe.  call temp:= `f`(v8) @signature `Lgc/j;.f:()Z` @kind virtual;
  #L39cdc4.  v8:= temp;
  #L39cdc6.  if v8 == 0 then goto L39cdda;
  #L39cdca.  call temp:= `l`() @signature `Lnc/g;.l:()Lnc/g;` @kind static;
  #L39cdd0.  v8:= temp @kind object;
  #L39cdd2.  call temp:= `n`(v8, v1) @signature `Lnc/g;.n:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind virtual;
  #L39cdd8.  v2:= temp @kind object;
  #L39cdda.  v7.`jc.c.e` @type ^`java.net.Socket` := v1 @kind object;
  #L39cdde.  call temp:= `i`(v1) @signature `Lqc/l;.i:(Ljava/net/Socket;)Lqc/s;` @kind static;
  #L39cde4.  v8:= temp @kind object;
  #L39cde6.  call temp:= `b`(v8) @signature `Lqc/l;.b:(Lqc/s;)Lqc/e;` @kind static;
  #L39cdec.  v8:= temp @kind object;
  #L39cdee.  v7.`jc.c.i` @type ^`qc.e` := v8 @kind object;
  #L39cdf2.  v8:= v7.`jc.c.e` @type ^`java.net.Socket` @kind object;
  #L39cdf6.  call temp:= `f`(v8) @signature `Lqc/l;.f:(Ljava/net/Socket;)Lqc/r;` @kind static;
  #L39cdfc.  v8:= temp @kind object;
  #L39cdfe.  call temp:= `a`(v8) @signature `Lqc/l;.a:(Lqc/r;)Lqc/d;` @kind static;
  #L39ce04.  v8:= temp @kind object;
  #L39ce06.  v7.`jc.c.j` @type ^`qc.d` := v8 @kind object;
  #L39ce0a.  v7.`jc.c.f` @type ^`gc.p` := v4 @kind object;
  #L39ce0e.  if v2 == 0 then goto L39ce1c;
  #L39ce12.  call temp:= `c`(v2) @signature `Lgc/v;.c:(Ljava/lang/String;)Lgc/v;` @kind static;
  #L39ce18.  v8:= temp @kind object;
  #L39ce1a.  goto L39ce20;
  #L39ce1c.  v8:= `@@gc.v.q` @type ^`gc.v` @kind object;
  #L39ce20.  v7.`jc.c.g` @type ^`gc.v` := v8 @kind object;
  #L39ce24.  call temp:= `l`() @signature `Lnc/g;.l:()Lnc/g;` @kind static;
  #L39ce2a.  v8:= temp @kind object;
  #L39ce2c.  call `a`(v8, v1) @signature `Lnc/g;.a:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L39ce32.  return @kind void;
  #L39ce34.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39ce36.  v2:= v1 @kind object;
  #L39ce38.  goto L39ce60;
  #L39ce3a.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L39ce3c.  v2:= v1 @kind object;
  #L39ce3e.  goto L39ce46;
  #L39ce40.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39ce42.  goto L39ce60;
  #L39ce44.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L39ce46.  call temp:= `y`(v8) @signature `Lhc/c;.y:(Ljava/lang/AssertionError;)Z` @kind static;
  #L39ce4c.  v0:= temp;
  #L39ce4e.  if v0 == 0 then goto L39ce5e;
  #L39ce52.  v0:= new `java.io.IOException`;
  #L39ce56.  call `<init>`(v0, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L39ce5c.  throw v0;
  #L39ce5e.  throw v8;
  #L39ce60.  if v2 == 0 then goto L39ce72;
  #L39ce64.  call temp:= `l`() @signature `Lnc/g;.l:()Lnc/g;` @kind static;
  #L39ce6a.  v0:= temp @kind object;
  #L39ce6c.  call `a`(v0, v2) @signature `Lnc/g;.a:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L39ce72.  call `f`(v2) @signature `Lhc/c;.f:(Ljava/net/Socket;)V` @kind static;
  #L39ce78.  throw v8;
  catch `java.lang.AssertionError` @[L39cbfe..L39cc30] goto L39ce44;
  catch `java.lang.Throwable` @[L39cbfe..L39cc30] goto L39ce40;
  catch `java.lang.AssertionError` @[L39cc30..L39ccb4] goto L39ce3a;
  catch `java.lang.Throwable` @[L39cc30..L39ccb4] goto L39ce34;
  catch `java.lang.AssertionError` @[L39ccbe..L39ce24] goto L39ce3a;
  catch `java.lang.Throwable` @[L39ccbe..L39ce24] goto L39ce34;
  catch `java.lang.Throwable` @[L39ce46..L39ce60] goto L39ce40;
}
procedure `void` `g`(`jc.c` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `gc.d` v10 @kind object, `gc.o` v11 @kind object) @signature `Ljc/c;.g:(IIILgc/d;Lgc/o;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39cec0.  call temp:= `i`(v6) @signature `Ljc/c;.i:()Lgc/x;` @kind direct;
  #L39cec6.  v0:= temp @kind object;
  #L39cec8.  call temp:= `h`(v0) @signature `Lgc/x;.h:()Lgc/r;` @kind virtual;
  #L39cece.  v1:= temp @kind object;
  #L39ced0.  v2:= 0I;
  #L39ced2.  v3:= 21I;
  #L39ced6.  if v2 >= v3 then goto L39cf2a;
  #L39ceda.  call `e`(v6, v7, v8, v10, v11) @signature `Ljc/c;.e:(IILgc/d;Lgc/o;)V` @kind direct;
  #L39cee0.  call temp:= `h`(v6, v8, v9, v0, v1) @signature `Ljc/c;.h:(IILgc/x;Lgc/r;)Lgc/x;` @kind direct;
  #L39cee6.  v0:= temp @kind object;
  #L39cee8.  if v0 != 0 then goto L39ceee;
  #L39ceec.  goto L39cf2a;
  #L39ceee.  v3:= v6.`jc.c.d` @type ^`java.net.Socket` @kind object;
  #L39cef2.  call `f`(v3) @signature `Lhc/c;.f:(Ljava/net/Socket;)V` @kind static;
  #L39cef8.  v3:= 0I;
  #L39cefa.  v6.`jc.c.d` @type ^`java.net.Socket` := v3 @kind object;
  #L39cefe.  v6.`jc.c.j` @type ^`qc.d` := v3 @kind object;
  #L39cf02.  v6.`jc.c.i` @type ^`qc.e` := v3 @kind object;
  #L39cf06.  v4:= v6.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39cf0a.  call temp:= `d`(v4) @signature `Lgc/b0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L39cf10.  v4:= temp @kind object;
  #L39cf12.  v5:= v6.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39cf16.  call temp:= `b`(v5) @signature `Lgc/b0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L39cf1c.  v5:= temp @kind object;
  #L39cf1e.  call `d`(v11, v10, v4, v5, v3) @signature `Lgc/o;.d:(Lgc/d;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lgc/v;)V` @kind virtual;
  #L39cf24.  v2:= v2 + 1;
  #L39cf28.  goto L39ced2;
  #L39cf2a.  return @kind void;
}
procedure `gc.x` `h`(`jc.c` v8 @kind this, `int` v9 , `int` v10 , `gc.x` v11 @kind object, `gc.r` v12 @kind object) @signature `Ljc/c;.h:(IILgc/x;Lgc/r;)Lgc/x;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L39c288.  v0:= new `java.lang.StringBuilder`;
  #L39c28c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39c292.  v1:= "CONNECT " @kind object;
  #L39c296.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c29c.  v1:= 1I;
  #L39c29e.  call temp:= `q`(v12, v1) @signature `Lhc/c;.q:(Lgc/r;Z)Ljava/lang/String;` @kind static;
  #L39c2a4.  v12:= temp @kind object;
  #L39c2a6.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c2ac.  v12:= " HTTP/1.1" @kind object;
  #L39c2b0.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c2b6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39c2bc.  v12:= temp @kind object;
  #L39c2be.  v0:= new `lc.a`;
  #L39c2c2.  v1:= v8.`jc.c.i` @type ^`qc.e` @kind object;
  #L39c2c6.  v2:= v8.`jc.c.j` @type ^`qc.d` @kind object;
  #L39c2ca.  v3:= 0I;
  #L39c2cc.  call `<init>`(v0, v3, v3, v1, v2) @signature `Llc/a;.<init>:(Lgc/u;Ljc/g;Lqc/e;Lqc/d;)V` @kind direct;
  #L39c2d2.  v1:= v8.`jc.c.i` @type ^`qc.e` @kind object;
  #L39c2d6.  call temp:= `f`(v1) @signature `Lqc/s;.f:()Lqc/t;` @kind interface;
  #L39c2dc.  v1:= temp @kind object;
  #L39c2de.  v4:= (`long`) v9 @kind i2l;
  #L39c2e0.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L39c2e4.  call temp:= `g`(v1, v4, v2) @signature `Lqc/t;.g:(JLjava/util/concurrent/TimeUnit;)Lqc/t;` @kind virtual;
  #L39c2ea.  v1:= v8.`jc.c.j` @type ^`qc.d` @kind object;
  #L39c2ee.  call temp:= `f`(v1) @signature `Lqc/r;.f:()Lqc/t;` @kind interface;
  #L39c2f4.  v1:= temp @kind object;
  #L39c2f6.  v4:= (`long`) v10 @kind i2l;
  #L39c2f8.  call temp:= `g`(v1, v4, v2) @signature `Lqc/t;.g:(JLjava/util/concurrent/TimeUnit;)Lqc/t;` @kind virtual;
  #L39c2fe.  call temp:= `d`(v11) @signature `Lgc/x;.d:()Lgc/q;` @kind virtual;
  #L39c304.  v1:= temp @kind object;
  #L39c306.  call `o`(v0, v1, v12) @signature `Llc/a;.o:(Lgc/q;Ljava/lang/String;)V` @kind virtual;
  #L39c30c.  call `a`(v0) @signature `Llc/a;.a:()V` @kind virtual;
  #L39c312.  v1:= 0I;
  #L39c314.  call temp:= `f`(v0, v1) @signature `Llc/a;.f:(Z)Lgc/z$a;` @kind virtual;
  #L39c31a.  v1:= temp @kind object;
  #L39c31c.  call temp:= `p`(v1, v11) @signature `Lgc/z$a;.p:(Lgc/x;)Lgc/z$a;` @kind virtual;
  #L39c322.  v11:= temp @kind object;
  #L39c324.  call temp:= `c`(v11) @signature `Lgc/z$a;.c:()Lgc/z;` @kind virtual;
  #L39c32a.  v11:= temp @kind object;
  #L39c32c.  call temp:= `b`(v11) @signature `Lkc/e;.b:(Lgc/z;)J` @kind static;
  #L39c332.  v4:= temp @kind wide;
  #L39c334.  v6:= -1L;
  #L39c338.  v1:= lcmp(v4, v6);
  #L39c33c.  if v1 != 0 then goto L39c344;
  #L39c340.  v4:= 0L;
  #L39c344.  call temp:= `k`(v0, v4) @signature `Llc/a;.k:(J)Lqc/s;` @kind virtual;
  #L39c34a.  v0:= temp @kind object;
  #L39c34c.  v1:= 2147483647I;
  #L39c352.  call temp:= `B`(v0, v1, v2) @signature `Lhc/c;.B:(Lqc/s;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L39c358.  call `close`(v0) @signature `Lqc/s;.close:()V` @kind interface;
  #L39c35e.  call temp:= `e`(v11) @signature `Lgc/z;.e:()I` @kind virtual;
  #L39c364.  v0:= temp;
  #L39c366.  v1:= 200I;
  #L39c36a.  if v0 == v1 then goto L39c402;
  #L39c36e.  v1:= 407I;
  #L39c372.  if v0 != v1 then goto L39c3cc;
  #L39c376.  v0:= v8.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c37a.  call temp:= `a`(v0) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39c380.  v0:= temp @kind object;
  #L39c382.  call temp:= `h`(v0) @signature `Lgc/a;.h:()Lgc/b;` @kind virtual;
  #L39c388.  v0:= temp @kind object;
  #L39c38a.  v1:= v8.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c38e.  call temp:= `a`(v0, v1, v11) @signature `Lgc/b;.a:(Lgc/b0;Lgc/z;)Lgc/x;` @kind interface;
  #L39c394.  v0:= temp @kind object;
  #L39c396.  if v0 == 0 then goto L39c3bc;
  #L39c39a.  v1:= "Connection" @kind object;
  #L39c39e.  call temp:= `i`(v11, v1) @signature `Lgc/z;.i:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L39c3a4.  v11:= temp @kind object;
  #L39c3a6.  v1:= "close" @kind object;
  #L39c3aa.  call temp:= `equalsIgnoreCase`(v1, v11) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L39c3b0.  v11:= temp;
  #L39c3b2.  if v11 == 0 then goto L39c3b8;
  #L39c3b6.  return v0 @kind object;
  #L39c3b8.  v11:= v0 @kind object;
  #L39c3ba.  goto L39c2be;
  #L39c3bc.  v9:= new `java.io.IOException`;
  #L39c3c0.  v10:= "Failed to authenticate with proxy" @kind object;
  #L39c3c4.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39c3ca.  throw v9;
  #L39c3cc.  v9:= new `java.io.IOException`;
  #L39c3d0.  v10:= new `java.lang.StringBuilder`;
  #L39c3d4.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39c3da.  v12:= "Unexpected response code for CONNECT: " @kind object;
  #L39c3de.  call temp:= `append`(v10, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c3e4.  call temp:= `e`(v11) @signature `Lgc/z;.e:()I` @kind virtual;
  #L39c3ea.  v11:= temp;
  #L39c3ec.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c3f2.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39c3f8.  v10:= temp @kind object;
  #L39c3fa.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39c400.  throw v9;
  #L39c402.  v9:= v8.`jc.c.i` @type ^`qc.e` @kind object;
  #L39c406.  call temp:= `b`(v9) @signature `Lqc/e;.b:()Lqc/c;` @kind interface;
  #L39c40c.  v9:= temp @kind object;
  #L39c40e.  call temp:= `z`(v9) @signature `Lqc/c;.z:()Z` @kind virtual;
  #L39c414.  v9:= temp;
  #L39c416.  if v9 == 0 then goto L39c434;
  #L39c41a.  v9:= v8.`jc.c.j` @type ^`qc.d` @kind object;
  #L39c41e.  call temp:= `b`(v9) @signature `Lqc/d;.b:()Lqc/c;` @kind interface;
  #L39c424.  v9:= temp @kind object;
  #L39c426.  call temp:= `z`(v9) @signature `Lqc/c;.z:()Z` @kind virtual;
  #L39c42c.  v9:= temp;
  #L39c42e.  if v9 == 0 then goto L39c434;
  #L39c432.  return v3 @kind object;
  #L39c434.  v9:= new `java.io.IOException`;
  #L39c438.  v10:= "TLS tunnel buffered too many bytes!" @kind object;
  #L39c43c.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39c442.  throw v9;
}
procedure `gc.x` `i`(`jc.c` v4 @kind this) @signature `Ljc/c;.i:()Lgc/x;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39c454.  v0:= new `gc.x$a`;
  #L39c458.  call `<init>`(v0) @signature `Lgc/x$a;.<init>:()V` @kind direct;
  #L39c45e.  v1:= v4.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c462.  call temp:= `a`(v1) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39c468.  v1:= temp @kind object;
  #L39c46a.  call temp:= `l`(v1) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39c470.  v1:= temp @kind object;
  #L39c472.  call temp:= `f`(v0, v1) @signature `Lgc/x$a;.f:(Lgc/r;)Lgc/x$a;` @kind virtual;
  #L39c478.  v0:= temp @kind object;
  #L39c47a.  v1:= "CONNECT" @kind object;
  #L39c47e.  v2:= 0I;
  #L39c480.  call temp:= `d`(v0, v1, v2) @signature `Lgc/x$a;.d:(Ljava/lang/String;Lgc/y;)Lgc/x$a;` @kind virtual;
  #L39c486.  v0:= temp @kind object;
  #L39c488.  v1:= v4.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c48c.  call temp:= `a`(v1) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39c492.  v1:= temp @kind object;
  #L39c494.  call temp:= `l`(v1) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39c49a.  v1:= temp @kind object;
  #L39c49c.  v2:= 1I;
  #L39c49e.  call temp:= `q`(v1, v2) @signature `Lhc/c;.q:(Lgc/r;Z)Ljava/lang/String;` @kind static;
  #L39c4a4.  v1:= temp @kind object;
  #L39c4a6.  v2:= "Host" @kind object;
  #L39c4aa.  call temp:= `b`(v0, v2, v1) @signature `Lgc/x$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lgc/x$a;` @kind virtual;
  #L39c4b0.  v0:= temp @kind object;
  #L39c4b2.  v1:= "Proxy-Connection" @kind object;
  #L39c4b6.  v2:= "Keep-Alive" @kind object;
  #L39c4ba.  call temp:= `b`(v0, v1, v2) @signature `Lgc/x$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lgc/x$a;` @kind virtual;
  #L39c4c0.  v0:= temp @kind object;
  #L39c4c2.  call temp:= `a`() @signature `Lhc/d;.a:()Ljava/lang/String;` @kind static;
  #L39c4c8.  v1:= temp @kind object;
  #L39c4ca.  v2:= "User-Agent" @kind object;
  #L39c4ce.  call temp:= `b`(v0, v2, v1) @signature `Lgc/x$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lgc/x$a;` @kind virtual;
  #L39c4d4.  v0:= temp @kind object;
  #L39c4d6.  call temp:= `a`(v0) @signature `Lgc/x$a;.a:()Lgc/x;` @kind virtual;
  #L39c4dc.  v0:= temp @kind object;
  #L39c4de.  v1:= new `gc.z$a`;
  #L39c4e2.  call `<init>`(v1) @signature `Lgc/z$a;.<init>:()V` @kind direct;
  #L39c4e8.  call temp:= `p`(v1, v0) @signature `Lgc/z$a;.p:(Lgc/x;)Lgc/z$a;` @kind virtual;
  #L39c4ee.  v1:= temp @kind object;
  #L39c4f0.  v2:= `@@gc.v.q` @type ^`gc.v` @kind object;
  #L39c4f4.  call temp:= `n`(v1, v2) @signature `Lgc/z$a;.n:(Lgc/v;)Lgc/z$a;` @kind virtual;
  #L39c4fa.  v1:= temp @kind object;
  #L39c4fc.  v2:= 407I;
  #L39c500.  call temp:= `g`(v1, v2) @signature `Lgc/z$a;.g:(I)Lgc/z$a;` @kind virtual;
  #L39c506.  v1:= temp @kind object;
  #L39c508.  v2:= "Preemptive Authenticate" @kind object;
  #L39c50c.  call temp:= `k`(v1, v2) @signature `Lgc/z$a;.k:(Ljava/lang/String;)Lgc/z$a;` @kind virtual;
  #L39c512.  v1:= temp @kind object;
  #L39c514.  v2:= `@@hc.c.c` @type ^`gc.a0` @kind object;
  #L39c518.  call temp:= `b`(v1, v2) @signature `Lgc/z$a;.b:(Lgc/a0;)Lgc/z$a;` @kind virtual;
  #L39c51e.  v1:= temp @kind object;
  #L39c520.  v2:= -1L;
  #L39c524.  call temp:= `q`(v1, v2) @signature `Lgc/z$a;.q:(J)Lgc/z$a;` @kind virtual;
  #L39c52a.  v1:= temp @kind object;
  #L39c52c.  call temp:= `o`(v1, v2) @signature `Lgc/z$a;.o:(J)Lgc/z$a;` @kind virtual;
  #L39c532.  v1:= temp @kind object;
  #L39c534.  v2:= "Proxy-Authenticate" @kind object;
  #L39c538.  v3:= "OkHttp-Preemptive" @kind object;
  #L39c53c.  call temp:= `i`(v1, v2, v3) @signature `Lgc/z$a;.i:(Ljava/lang/String;Ljava/lang/String;)Lgc/z$a;` @kind virtual;
  #L39c542.  v1:= temp @kind object;
  #L39c544.  call temp:= `c`(v1) @signature `Lgc/z$a;.c:()Lgc/z;` @kind virtual;
  #L39c54a.  v1:= temp @kind object;
  #L39c54c.  v2:= v4.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c550.  call temp:= `a`(v2) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39c556.  v2:= temp @kind object;
  #L39c558.  call temp:= `h`(v2) @signature `Lgc/a;.h:()Lgc/b;` @kind virtual;
  #L39c55e.  v2:= temp @kind object;
  #L39c560.  v3:= v4.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c564.  call temp:= `a`(v2, v3, v1) @signature `Lgc/b;.a:(Lgc/b0;Lgc/z;)Lgc/x;` @kind interface;
  #L39c56a.  v1:= temp @kind object;
  #L39c56c.  if v1 == 0 then goto L39c572;
  #L39c570.  v0:= v1 @kind object;
  #L39c572.  return v0 @kind object;
}
procedure `void` `j`(`jc.c` v1 @kind this, `jc.b` v2 @kind object, `int` v3 , `gc.d` v4 @kind object, `gc.o` v5 @kind object) @signature `Ljc/c;.j:(Ljc/b;ILgc/d;Lgc/o;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L39cf3c.  v0:= v1.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39cf40.  call temp:= `a`(v0) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39cf46.  v0:= temp @kind object;
  #L39cf48.  call temp:= `k`(v0) @signature `Lgc/a;.k:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L39cf4e.  v0:= temp @kind object;
  #L39cf50.  if v0 != 0 then goto L39cf9e;
  #L39cf54.  v2:= v1.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39cf58.  call temp:= `a`(v2) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39cf5e.  v2:= temp @kind object;
  #L39cf60.  call temp:= `f`(v2) @signature `Lgc/a;.f:()Ljava/util/List;` @kind virtual;
  #L39cf66.  v2:= temp @kind object;
  #L39cf68.  v4:= `@@gc.v.t` @type ^`gc.v` @kind object;
  #L39cf6c.  call temp:= `contains`(v2, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L39cf72.  v2:= temp;
  #L39cf74.  if v2 == 0 then goto L39cf8c;
  #L39cf78.  v2:= v1.`jc.c.d` @type ^`java.net.Socket` @kind object;
  #L39cf7c.  v1.`jc.c.e` @type ^`java.net.Socket` := v2 @kind object;
  #L39cf80.  v1.`jc.c.g` @type ^`gc.v` := v4 @kind object;
  #L39cf84.  call `r`(v1, v3) @signature `Ljc/c;.r:(I)V` @kind direct;
  #L39cf8a.  return @kind void;
  #L39cf8c.  v2:= v1.`jc.c.d` @type ^`java.net.Socket` @kind object;
  #L39cf90.  v1.`jc.c.e` @type ^`java.net.Socket` := v2 @kind object;
  #L39cf94.  v2:= `@@gc.v.q` @type ^`gc.v` @kind object;
  #L39cf98.  v1.`jc.c.g` @type ^`gc.v` := v2 @kind object;
  #L39cf9c.  return @kind void;
  #L39cf9e.  call `u`(v5, v4) @signature `Lgc/o;.u:(Lgc/d;)V` @kind virtual;
  #L39cfa4.  call `f`(v1, v2) @signature `Ljc/c;.f:(Ljc/b;)V` @kind direct;
  #L39cfaa.  v2:= v1.`jc.c.f` @type ^`gc.p` @kind object;
  #L39cfae.  call `t`(v5, v4, v2) @signature `Lgc/o;.t:(Lgc/d;Lgc/p;)V` @kind virtual;
  #L39cfb4.  v2:= v1.`jc.c.g` @type ^`gc.v` @kind object;
  #L39cfb8.  v4:= `@@gc.v.s` @type ^`gc.v` @kind object;
  #L39cfbc.  if v2 != v4 then goto L39cfc6;
  #L39cfc0.  call `r`(v1, v3) @signature `Ljc/c;.r:(I)V` @kind direct;
  #L39cfc6.  return @kind void;
}
procedure `void` `r`(`jc.c` v5 @kind this, `int` v6 ) @signature `Ljc/c;.r:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39d02c.  v0:= v5.`jc.c.e` @type ^`java.net.Socket` @kind object;
  #L39d030.  v1:= 0I;
  #L39d032.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L39d038.  v0:= new `mc.g$h`;
  #L39d03c.  v1:= 1I;
  #L39d03e.  call `<init>`(v0, v1) @signature `Lmc/g$h;.<init>:(Z)V` @kind direct;
  #L39d044.  v1:= v5.`jc.c.e` @type ^`java.net.Socket` @kind object;
  #L39d048.  v2:= v5.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39d04c.  call temp:= `a`(v2) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39d052.  v2:= temp @kind object;
  #L39d054.  call temp:= `l`(v2) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39d05a.  v2:= temp @kind object;
  #L39d05c.  call temp:= `l`(v2) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39d062.  v2:= temp @kind object;
  #L39d064.  v3:= v5.`jc.c.i` @type ^`qc.e` @kind object;
  #L39d068.  v4:= v5.`jc.c.j` @type ^`qc.d` @kind object;
  #L39d06c.  call temp:= `d`(v0, v1, v2, v3, v4) @signature `Lmc/g$h;.d:(Ljava/net/Socket;Ljava/lang/String;Lqc/e;Lqc/d;)Lmc/g$h;` @kind virtual;
  #L39d072.  v0:= temp @kind object;
  #L39d074.  call temp:= `b`(v0, v5) @signature `Lmc/g$h;.b:(Lmc/g$j;)Lmc/g$h;` @kind virtual;
  #L39d07a.  v0:= temp @kind object;
  #L39d07c.  call temp:= `c`(v0, v6) @signature `Lmc/g$h;.c:(I)Lmc/g$h;` @kind virtual;
  #L39d082.  v6:= temp @kind object;
  #L39d084.  call temp:= `a`(v6) @signature `Lmc/g$h;.a:()Lmc/g;` @kind virtual;
  #L39d08a.  v6:= temp @kind object;
  #L39d08c.  v5.`jc.c.h` @type ^`mc.g` := v6 @kind object;
  #L39d090.  call `j0`(v6) @signature `Lmc/g;.j0:()V` @kind virtual;
  #L39d096.  return @kind void;
}
procedure `void` `a`(`jc.c` v1 @kind this, `mc.g` v2 @kind object) @signature `Ljc/c;.a:(Lmc/g;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39cfd8.  v0:= v1.`jc.c.b` @type ^`gc.i` @kind object;
  #L39cfdc.  @monitorenter v0
  #L39cfde.  call temp:= `N`(v2) @signature `Lmc/g;.N:()I` @kind virtual;
  #L39cfe4.  v2:= temp;
  #L39cfe6.  v1.`jc.c.m` @type ^`int` := v2;
  #L39cfea.  @monitorexit v0
  #L39cfec.  return @kind void;
  #L39cfee.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39cff0.  @monitorexit v0
  #L39cff2.  throw v2;
  catch `java.lang.Throwable` @[L39cfde..L39cff2] goto L39cfee;
}
procedure `void` `b`(`jc.c` v1 @kind this, `mc.i` v2 @kind object) @signature `Ljc/c;.b:(Lmc/i;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d010.  v0:= `@@mc.b.t` @type ^`mc.b` @kind object;
  #L39d014.  call `f`(v2, v0) @signature `Lmc/i;.f:(Lmc/b;)V` @kind virtual;
  #L39d01a.  return @kind void;
}
procedure `void` `c`(`jc.c` v1 @kind this) @signature `Ljc/c;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39c77c.  v0:= v1.`jc.c.d` @type ^`java.net.Socket` @kind object;
  #L39c780.  call `f`(v0) @signature `Lhc/c;.f:(Ljava/net/Socket;)V` @kind static;
  #L39c786.  return @kind void;
}
procedure `void` `d`(`jc.c` v16 @kind this, `int` v17 , `int` v18 , `int` v19 , `int` v20 , `boolean` v21 , `gc.d` v22 @kind object, `gc.o` v23 @kind object) @signature `Ljc/c;.d:(IIIIZLgc/d;Lgc/o;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L39c798.  v7:= v16 @kind object;
  #L39c79c.  v8:= v22 @kind object;
  #L39c7a0.  v9:= v23 @kind object;
  #L39c7a4.  v0:= v7.`jc.c.g` @type ^`gc.v` @kind object;
  #L39c7a8.  if v0 != 0 then goto L39ca38;
  #L39c7ac.  v0:= v7.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c7b0.  call temp:= `a`(v0) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39c7b6.  v0:= temp @kind object;
  #L39c7b8.  call temp:= `b`(v0) @signature `Lgc/a;.b:()Ljava/util/List;` @kind virtual;
  #L39c7be.  v0:= temp @kind object;
  #L39c7c0.  v10:= new `jc.b`;
  #L39c7c4.  call `<init>`(v10, v0) @signature `Ljc/b;.<init>:(Ljava/util/List;)V` @kind direct;
  #L39c7ca.  v1:= v7.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c7ce.  call temp:= `a`(v1) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39c7d4.  v1:= temp @kind object;
  #L39c7d6.  call temp:= `k`(v1) @signature `Lgc/a;.k:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L39c7dc.  v1:= temp @kind object;
  #L39c7de.  if v1 != 0 then goto L39c880;
  #L39c7e2.  v1:= `@@gc.j.h` @type ^`gc.j` @kind object;
  #L39c7e6.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L39c7ec.  v0:= temp;
  #L39c7ee.  if v0 == 0 then goto L39c866;
  #L39c7f2.  v0:= v7.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c7f6.  call temp:= `a`(v0) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39c7fc.  v0:= temp @kind object;
  #L39c7fe.  call temp:= `l`(v0) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39c804.  v0:= temp @kind object;
  #L39c806.  call temp:= `l`(v0) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39c80c.  v0:= temp @kind object;
  #L39c80e.  call temp:= `l`() @signature `Lnc/g;.l:()Lnc/g;` @kind static;
  #L39c814.  v1:= temp @kind object;
  #L39c816.  call temp:= `q`(v1, v0) @signature `Lnc/g;.q:(Ljava/lang/String;)Z` @kind virtual;
  #L39c81c.  v1:= temp;
  #L39c81e.  if v1 == 0 then goto L39c824;
  #L39c822.  goto L39c8a4;
  #L39c824.  v1:= new `jc.e`;
  #L39c828.  v2:= new `java.net.UnknownServiceException`;
  #L39c82c.  v3:= new `java.lang.StringBuilder`;
  #L39c830.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39c836.  v4:= "CLEARTEXT communication to " @kind object;
  #L39c83a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c840.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c846.  v0:= " not permitted by network security policy" @kind object;
  #L39c84a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c850.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39c856.  v0:= temp @kind object;
  #L39c858.  call `<init>`(v2, v0) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39c85e.  call `<init>`(v1, v2) @signature `Ljc/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L39c864.  throw v1;
  #L39c866.  v0:= new `jc.e`;
  #L39c86a.  v1:= new `java.net.UnknownServiceException`;
  #L39c86e.  v2:= "CLEARTEXT communication not enabled for client" @kind object;
  #L39c872.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39c878.  call `<init>`(v0, v1) @signature `Ljc/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L39c87e.  throw v0;
  #L39c880.  v0:= v7.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c884.  call temp:= `a`(v0) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39c88a.  v0:= temp @kind object;
  #L39c88c.  call temp:= `f`(v0) @signature `Lgc/a;.f:()Ljava/util/List;` @kind virtual;
  #L39c892.  v0:= temp @kind object;
  #L39c894.  v1:= `@@gc.v.t` @type ^`gc.v` @kind object;
  #L39c898.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L39c89e.  v0:= temp;
  #L39c8a0.  if v0 != 0 then goto L39ca1e;
  #L39c8a4.  v11:= 0I;
  #L39c8a6.  v12:= v11 @kind object;
  #L39c8a8.  v0:= v7.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c8ac.  call temp:= `c`(v0) @signature `Lgc/b0;.c:()Z` @kind virtual;
  #L39c8b2.  v0:= temp;
  #L39c8b4.  if v0 == 0 then goto L39c8ea;
  #L39c8b8.  v1:= v16 @kind object;
  #L39c8bc.  v2:= v17;
  #L39c8c0.  v3:= v18;
  #L39c8c4.  v4:= v19;
  #L39c8c8.  v5:= v22 @kind object;
  #L39c8cc.  v6:= v23 @kind object;
  #L39c8d0.  call `g`(v1, v2, v3, v4, v5, v6) @signature `Ljc/c;.g:(IIILgc/d;Lgc/o;)V` @kind direct;
  #L39c8d6.  v0:= v7.`jc.c.d` @type ^`java.net.Socket` @kind object;
  #L39c8da.  if v0 != 0 then goto L39c8e0;
  #L39c8de.  goto L39c924;
  #L39c8e0.  v13:= v17;
  #L39c8e4.  v14:= v18;
  #L39c8e8.  goto L39c8f8;
  #L39c8ea.  v13:= v17;
  #L39c8ee.  v14:= v18;
  #L39c8f2.  call `e`(v7, v13, v14, v8, v9) @signature `Ljc/c;.e:(IILgc/d;Lgc/o;)V` @kind direct;
  #L39c8f8.  v15:= v20;
  #L39c8fc.  call `j`(v7, v10, v15, v8, v9) @signature `Ljc/c;.j:(Ljc/b;ILgc/d;Lgc/o;)V` @kind direct;
  #L39c902.  v0:= v7.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c906.  call temp:= `d`(v0) @signature `Lgc/b0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L39c90c.  v0:= temp @kind object;
  #L39c90e.  v1:= v7.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c912.  call temp:= `b`(v1) @signature `Lgc/b0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L39c918.  v1:= temp @kind object;
  #L39c91a.  v2:= v7.`jc.c.g` @type ^`gc.v` @kind object;
  #L39c91e.  call `d`(v9, v8, v0, v1, v2) @signature `Lgc/o;.d:(Lgc/d;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lgc/v;)V` @kind virtual;
  #L39c924.  v0:= v7.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c928.  call temp:= `c`(v0) @signature `Lgc/b0;.c:()Z` @kind virtual;
  #L39c92e.  v0:= temp;
  #L39c930.  if v0 == 0 then goto L39c958;
  #L39c934.  v0:= v7.`jc.c.d` @type ^`java.net.Socket` @kind object;
  #L39c938.  if v0 == 0 then goto L39c93e;
  #L39c93c.  goto L39c958;
  #L39c93e.  v0:= new `java.net.ProtocolException`;
  #L39c942.  v1:= "Too many tunnel connections attempted: 21" @kind object;
  #L39c946.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39c94c.  v1:= new `jc.e`;
  #L39c950.  call `<init>`(v1, v0) @signature `Ljc/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L39c956.  throw v1;
  #L39c958.  v0:= v7.`jc.c.h` @type ^`mc.g` @kind object;
  #L39c95c.  if v0 == 0 then goto L39c980;
  #L39c960.  v1:= v7.`jc.c.b` @type ^`gc.i` @kind object;
  #L39c964.  @monitorenter v1
  #L39c966.  v0:= v7.`jc.c.h` @type ^`mc.g` @kind object;
  #L39c96a.  call temp:= `N`(v0) @signature `Lmc/g;.N:()I` @kind virtual;
  #L39c970.  v0:= temp;
  #L39c972.  v7.`jc.c.m` @type ^`int` := v0;
  #L39c976.  @monitorexit v1
  #L39c978.  goto L39c980;
  #L39c97a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39c97c.  @monitorexit v1
  #L39c97e.  throw v0;
  #L39c980.  return @kind void;
  #L39c982.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L39c984.  goto L39c998;
  #L39c986.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L39c988.  goto L39c994;
  #L39c98a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L39c98c.  v13:= v17;
  #L39c990.  v14:= v18;
  #L39c994.  v15:= v20;
  #L39c998.  v1:= v7.`jc.c.e` @type ^`java.net.Socket` @kind object;
  #L39c99c.  call `f`(v1) @signature `Lhc/c;.f:(Ljava/net/Socket;)V` @kind static;
  #L39c9a2.  v1:= v7.`jc.c.d` @type ^`java.net.Socket` @kind object;
  #L39c9a6.  call `f`(v1) @signature `Lhc/c;.f:(Ljava/net/Socket;)V` @kind static;
  #L39c9ac.  v7.`jc.c.e` @type ^`java.net.Socket` := v11 @kind object;
  #L39c9b0.  v7.`jc.c.d` @type ^`java.net.Socket` := v11 @kind object;
  #L39c9b4.  v7.`jc.c.i` @type ^`qc.e` := v11 @kind object;
  #L39c9b8.  v7.`jc.c.j` @type ^`qc.d` := v11 @kind object;
  #L39c9bc.  v7.`jc.c.f` @type ^`gc.p` := v11 @kind object;
  #L39c9c0.  v7.`jc.c.g` @type ^`gc.v` := v11 @kind object;
  #L39c9c4.  v7.`jc.c.h` @type ^`mc.g` := v11 @kind object;
  #L39c9c8.  v1:= v7.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c9cc.  call temp:= `d`(v1) @signature `Lgc/b0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L39c9d2.  v3:= temp @kind object;
  #L39c9d4.  v1:= v7.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c9d8.  call temp:= `b`(v1) @signature `Lgc/b0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L39c9de.  v4:= temp @kind object;
  #L39c9e0.  v5:= 0I;
  #L39c9e2.  v1:= v23 @kind object;
  #L39c9e6.  v2:= v22 @kind object;
  #L39c9ea.  v6:= v0 @kind object;
  #L39c9ec.  call `e`(v1, v2, v3, v4, v5, v6) @signature `Lgc/o;.e:(Lgc/d;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lgc/v;Ljava/io/IOException;)V` @kind virtual;
  #L39c9f2.  if v12 != 0 then goto L39ca02;
  #L39c9f6.  v12:= new `jc.e`;
  #L39c9fa.  call `<init>`(v12, v0) @signature `Ljc/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L39ca00.  goto L39ca08;
  #L39ca02.  call `a`(v12, v0) @signature `Ljc/e;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L39ca08.  if v21 == 0 then goto L39ca1c;
  #L39ca0c.  call temp:= `b`(v10, v0) @signature `Ljc/b;.b:(Ljava/io/IOException;)Z` @kind virtual;
  #L39ca12.  v0:= temp;
  #L39ca14.  if v0 == 0 then goto L39ca1c;
  #L39ca18.  goto L39c8a8;
  #L39ca1c.  throw v12;
  #L39ca1e.  v0:= new `jc.e`;
  #L39ca22.  v1:= new `java.net.UnknownServiceException`;
  #L39ca26.  v2:= "H2_PRIOR_KNOWLEDGE cannot be used with HTTPS" @kind object;
  #L39ca2a.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39ca30.  call `<init>`(v0, v1) @signature `Ljc/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L39ca36.  throw v0;
  #L39ca38.  v0:= new `java.lang.IllegalStateException`;
  #L39ca3c.  v1:= "already connected" @kind object;
  #L39ca40.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39ca46.  throw v0;
  catch `java.io.IOException` @[L39c8a8..L39c8da] goto L39c98a;
  catch `java.io.IOException` @[L39c8f2..L39c8f8] goto L39c986;
  catch `java.io.IOException` @[L39c8fc..L39c924] goto L39c982;
  catch `java.lang.Throwable` @[L39c966..L39c97e] goto L39c97a;
}
procedure `gc.p` `k`(`jc.c` v1 @kind this) @signature `Ljc/c;.k:()Lgc/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39c270.  v0:= v1.`jc.c.f` @type ^`gc.p` @kind object;
  #L39c274.  return v0 @kind object;
}
procedure `boolean` `l`(`jc.c` v4 @kind this, `gc.a` v5 @kind object, `gc.b0` v6 @kind object) @signature `Ljc/c;.l:(Lgc/a;Lgc/b0;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39bf5c.  v0:= v4.`jc.c.n` @type ^`java.util.List` @kind object;
  #L39bf60.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39bf66.  v0:= temp;
  #L39bf68.  v1:= v4.`jc.c.m` @type ^`int`;
  #L39bf6c.  v2:= 0I;
  #L39bf6e.  if v0 >= v1 then goto L39c0a6;
  #L39bf72.  v0:= v4.`jc.c.k` @type ^`boolean` @kind boolean;
  #L39bf76.  if v0 == 0 then goto L39bf7e;
  #L39bf7a.  goto L39c0a6;
  #L39bf7e.  v0:= `@@hc.a.a` @type ^`hc.a` @kind object;
  #L39bf82.  v1:= v4.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39bf86.  call temp:= `a`(v1) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39bf8c.  v1:= temp @kind object;
  #L39bf8e.  call temp:= `g`(v0, v1, v5) @signature `Lhc/a;.g:(Lgc/a;Lgc/a;)Z` @kind virtual;
  #L39bf94.  v0:= temp;
  #L39bf96.  if v0 != 0 then goto L39bf9c;
  #L39bf9a.  return v2;
  #L39bf9c.  call temp:= `l`(v5) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39bfa2.  v0:= temp @kind object;
  #L39bfa4.  call temp:= `l`(v0) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39bfaa.  v0:= temp @kind object;
  #L39bfac.  call temp:= `p`(v4) @signature `Ljc/c;.p:()Lgc/b0;` @kind virtual;
  #L39bfb2.  v1:= temp @kind object;
  #L39bfb4.  call temp:= `a`(v1) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39bfba.  v1:= temp @kind object;
  #L39bfbc.  call temp:= `l`(v1) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39bfc2.  v1:= temp @kind object;
  #L39bfc4.  call temp:= `l`(v1) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39bfca.  v1:= temp @kind object;
  #L39bfcc.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39bfd2.  v0:= temp;
  #L39bfd4.  v1:= 1I;
  #L39bfd6.  if v0 == 0 then goto L39bfdc;
  #L39bfda.  return v1;
  #L39bfdc.  v0:= v4.`jc.c.h` @type ^`mc.g` @kind object;
  #L39bfe0.  if v0 != 0 then goto L39bfe6;
  #L39bfe4.  return v2;
  #L39bfe6.  if v6 != 0 then goto L39bfec;
  #L39bfea.  return v2;
  #L39bfec.  call temp:= `b`(v6) @signature `Lgc/b0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L39bff2.  v0:= temp @kind object;
  #L39bff4.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L39bffa.  v0:= temp @kind object;
  #L39bffc.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L39c000.  if v0 == v3 then goto L39c006;
  #L39c004.  return v2;
  #L39c006.  v0:= v4.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c00a.  call temp:= `b`(v0) @signature `Lgc/b0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L39c010.  v0:= temp @kind object;
  #L39c012.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L39c018.  v0:= temp @kind object;
  #L39c01a.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L39c01e.  if v0 == v3 then goto L39c024;
  #L39c022.  return v2;
  #L39c024.  v0:= v4.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c028.  call temp:= `d`(v0) @signature `Lgc/b0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L39c02e.  v0:= temp @kind object;
  #L39c030.  call temp:= `d`(v6) @signature `Lgc/b0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L39c036.  v3:= temp @kind object;
  #L39c038.  call temp:= `equals`(v0, v3) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39c03e.  v0:= temp;
  #L39c040.  if v0 != 0 then goto L39c046;
  #L39c044.  return v2;
  #L39c046.  call temp:= `a`(v6) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39c04c.  v6:= temp @kind object;
  #L39c04e.  call temp:= `e`(v6) @signature `Lgc/a;.e:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L39c054.  v6:= temp @kind object;
  #L39c056.  v0:= `@@pc.d.a` @type ^`pc.d` @kind object;
  #L39c05a.  if v6 == v0 then goto L39c060;
  #L39c05e.  return v2;
  #L39c060.  call temp:= `l`(v5) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39c066.  v6:= temp @kind object;
  #L39c068.  call temp:= `s`(v4, v6) @signature `Ljc/c;.s:(Lgc/r;)Z` @kind virtual;
  #L39c06e.  v6:= temp;
  #L39c070.  if v6 != 0 then goto L39c076;
  #L39c074.  return v2;
  #L39c076.  call temp:= `a`(v5) @signature `Lgc/a;.a:()Lgc/f;` @kind virtual;
  #L39c07c.  v6:= temp @kind object;
  #L39c07e.  call temp:= `l`(v5) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39c084.  v5:= temp @kind object;
  #L39c086.  call temp:= `l`(v5) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39c08c.  v5:= temp @kind object;
  #L39c08e.  call temp:= `k`(v4) @signature `Ljc/c;.k:()Lgc/p;` @kind virtual;
  #L39c094.  v0:= temp @kind object;
  #L39c096.  call temp:= `c`(v0) @signature `Lgc/p;.c:()Ljava/util/List;` @kind virtual;
  #L39c09c.  v0:= temp @kind object;
  #L39c09e.  call `a`(v6, v5, v0) @signature `Lgc/f;.a:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L39c0a4.  return v1;
  #L39c0a6.  return v2;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L39c076..L39c0a4] goto L39c0a6;
}
procedure `boolean` `m`(`jc.c` v4 @kind this, `boolean` v5 ) @signature `Ljc/c;.m:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39c0c8.  v0:= v4.`jc.c.e` @type ^`java.net.Socket` @kind object;
  #L39c0cc.  call temp:= `isClosed`(v0) @signature `Ljava/net/Socket;.isClosed:()Z` @kind virtual;
  #L39c0d2.  v0:= temp;
  #L39c0d4.  v1:= 0I;
  #L39c0d6.  if v0 != 0 then goto L39c16c;
  #L39c0da.  v0:= v4.`jc.c.e` @type ^`java.net.Socket` @kind object;
  #L39c0de.  call temp:= `isInputShutdown`(v0) @signature `Ljava/net/Socket;.isInputShutdown:()Z` @kind virtual;
  #L39c0e4.  v0:= temp;
  #L39c0e6.  if v0 != 0 then goto L39c16c;
  #L39c0ea.  v0:= v4.`jc.c.e` @type ^`java.net.Socket` @kind object;
  #L39c0ee.  call temp:= `isOutputShutdown`(v0) @signature `Ljava/net/Socket;.isOutputShutdown:()Z` @kind virtual;
  #L39c0f4.  v0:= temp;
  #L39c0f6.  if v0 == 0 then goto L39c0fc;
  #L39c0fa.  goto L39c16c;
  #L39c0fc.  v0:= v4.`jc.c.h` @type ^`mc.g` @kind object;
  #L39c100.  if v0 == 0 then goto L39c116;
  #L39c104.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L39c10a.  v1:= temp @kind wide;
  #L39c10c.  call temp:= `M`(v0, v1) @signature `Lmc/g;.M:(J)Z` @kind virtual;
  #L39c112.  v5:= temp;
  #L39c114.  return v5;
  #L39c116.  v0:= 1I;
  #L39c118.  if v5 == 0 then goto L39c16a;
  #L39c11c.  v5:= v4.`jc.c.e` @type ^`java.net.Socket` @kind object;
  #L39c120.  call temp:= `getSoTimeout`(v5) @signature `Ljava/net/Socket;.getSoTimeout:()I` @kind virtual;
  #L39c126.  v5:= temp;
  #L39c128.  v2:= v4.`jc.c.e` @type ^`java.net.Socket` @kind object;
  #L39c12c.  call `setSoTimeout`(v2, v0) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L39c132.  v2:= v4.`jc.c.i` @type ^`qc.e` @kind object;
  #L39c136.  call temp:= `z`(v2) @signature `Lqc/e;.z:()Z` @kind interface;
  #L39c13c.  v2:= temp;
  #L39c13e.  if v2 == 0 then goto L39c14e;
  #L39c142.  v2:= v4.`jc.c.e` @type ^`java.net.Socket` @kind object;
  #L39c146.  call `setSoTimeout`(v2, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L39c14c.  return v1;
  #L39c14e.  v2:= v4.`jc.c.e` @type ^`java.net.Socket` @kind object;
  #L39c152.  call `setSoTimeout`(v2, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L39c158.  return v0;
  #L39c15a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39c15c.  v3:= v4.`jc.c.e` @type ^`java.net.Socket` @kind object;
  #L39c160.  call `setSoTimeout`(v3, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L39c166.  throw v2;
  #L39c168.  return v1;
  #L39c16a.  return v0;
  #L39c16c.  return v1;
  catch `java.net.SocketTimeoutException` @[L39c11c..L39c128] goto L39c16a;
  catch `java.io.IOException` @[L39c11c..L39c128] goto L39c168;
  catch `java.lang.Throwable` @[L39c128..L39c13e] goto L39c15a;
  catch `java.net.SocketTimeoutException` @[L39c142..L39c168] goto L39c16a;
  catch `java.io.IOException` @[L39c142..L39c168] goto L39c168;
}
procedure `boolean` `n`(`jc.c` v1 @kind this) @signature `Ljc/c;.n:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39c1a4.  v0:= v1.`jc.c.h` @type ^`mc.g` @kind object;
  #L39c1a8.  if v0 == 0 then goto L39c1b0;
  #L39c1ac.  v0:= 1I;
  #L39c1ae.  goto L39c1b2;
  #L39c1b0.  v0:= 0I;
  #L39c1b2.  return v0;
}
procedure `kc.c` `o`(`jc.c` v4 @kind this, `gc.u` v5 @kind object, `gc.s$a` v6 @kind object, `jc.g` v7 @kind object) @signature `Ljc/c;.o:(Lgc/u;Lgc/s$a;Ljc/g;)Lkc/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39c6ac.  v0:= v4.`jc.c.h` @type ^`mc.g` @kind object;
  #L39c6b0.  if v0 == 0 then goto L39c6c4;
  #L39c6b4.  v0:= new `mc.f`;
  #L39c6b8.  v1:= v4.`jc.c.h` @type ^`mc.g` @kind object;
  #L39c6bc.  call `<init>`(v0, v5, v6, v7, v1) @signature `Lmc/f;.<init>:(Lgc/u;Lgc/s$a;Ljc/g;Lmc/g;)V` @kind direct;
  #L39c6c2.  return v0 @kind object;
  #L39c6c4.  v0:= v4.`jc.c.e` @type ^`java.net.Socket` @kind object;
  #L39c6c8.  call temp:= `c`(v6) @signature `Lgc/s$a;.c:()I` @kind interface;
  #L39c6ce.  v1:= temp;
  #L39c6d0.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L39c6d6.  v0:= v4.`jc.c.i` @type ^`qc.e` @kind object;
  #L39c6da.  call temp:= `f`(v0) @signature `Lqc/s;.f:()Lqc/t;` @kind interface;
  #L39c6e0.  v0:= temp @kind object;
  #L39c6e2.  call temp:= `c`(v6) @signature `Lgc/s$a;.c:()I` @kind interface;
  #L39c6e8.  v1:= temp;
  #L39c6ea.  v1:= (`long`) v1 @kind i2l;
  #L39c6ec.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L39c6f0.  call temp:= `g`(v0, v1, v3) @signature `Lqc/t;.g:(JLjava/util/concurrent/TimeUnit;)Lqc/t;` @kind virtual;
  #L39c6f6.  v0:= v4.`jc.c.j` @type ^`qc.d` @kind object;
  #L39c6fa.  call temp:= `f`(v0) @signature `Lqc/r;.f:()Lqc/t;` @kind interface;
  #L39c700.  v0:= temp @kind object;
  #L39c702.  call temp:= `d`(v6) @signature `Lgc/s$a;.d:()I` @kind interface;
  #L39c708.  v6:= temp;
  #L39c70a.  v1:= (`long`) v6 @kind i2l;
  #L39c70c.  call temp:= `g`(v0, v1, v3) @signature `Lqc/t;.g:(JLjava/util/concurrent/TimeUnit;)Lqc/t;` @kind virtual;
  #L39c712.  v6:= new `lc.a`;
  #L39c716.  v0:= v4.`jc.c.i` @type ^`qc.e` @kind object;
  #L39c71a.  v1:= v4.`jc.c.j` @type ^`qc.d` @kind object;
  #L39c71e.  call `<init>`(v6, v5, v7, v0, v1) @signature `Llc/a;.<init>:(Lgc/u;Ljc/g;Lqc/e;Lqc/d;)V` @kind direct;
  #L39c724.  return v6 @kind object;
}
procedure `gc.b0` `p`(`jc.c` v1 @kind this) @signature `Ljc/c;.p:()Lgc/b0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39c584.  v0:= v1.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c588.  return v0 @kind object;
}
procedure `java.net.Socket` `q`(`jc.c` v1 @kind this) @signature `Ljc/c;.q:()Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39c694.  v0:= v1.`jc.c.e` @type ^`java.net.Socket` @kind object;
  #L39c698.  return v0 @kind object;
}
procedure `boolean` `s`(`jc.c` v4 @kind this, `gc.r` v5 @kind object) @signature `Ljc/c;.s:(Lgc/r;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39c1c4.  call temp:= `w`(v5) @signature `Lgc/r;.w:()I` @kind virtual;
  #L39c1ca.  v0:= temp;
  #L39c1cc.  v1:= v4.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c1d0.  call temp:= `a`(v1) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39c1d6.  v1:= temp @kind object;
  #L39c1d8.  call temp:= `l`(v1) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39c1de.  v1:= temp @kind object;
  #L39c1e0.  call temp:= `w`(v1) @signature `Lgc/r;.w:()I` @kind virtual;
  #L39c1e6.  v1:= temp;
  #L39c1e8.  v2:= 0I;
  #L39c1ea.  if v0 == v1 then goto L39c1f0;
  #L39c1ee.  return v2;
  #L39c1f0.  call temp:= `l`(v5) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39c1f6.  v0:= temp @kind object;
  #L39c1f8.  v1:= v4.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c1fc.  call temp:= `a`(v1) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39c202.  v1:= temp @kind object;
  #L39c204.  call temp:= `l`(v1) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39c20a.  v1:= temp @kind object;
  #L39c20c.  call temp:= `l`(v1) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39c212.  v1:= temp @kind object;
  #L39c214.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39c21a.  v0:= temp;
  #L39c21c.  v1:= 1I;
  #L39c21e.  if v0 != 0 then goto L39c25e;
  #L39c222.  v0:= v4.`jc.c.f` @type ^`gc.p` @kind object;
  #L39c226.  if v0 == 0 then goto L39c25c;
  #L39c22a.  v0:= `@@pc.d.a` @type ^`pc.d` @kind object;
  #L39c22e.  call temp:= `l`(v5) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39c234.  v5:= temp @kind object;
  #L39c236.  v3:= v4.`jc.c.f` @type ^`gc.p` @kind object;
  #L39c23a.  call temp:= `c`(v3) @signature `Lgc/p;.c:()Ljava/util/List;` @kind virtual;
  #L39c240.  v3:= temp @kind object;
  #L39c242.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39c248.  v3:= temp @kind object;
  #L39c24a.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L39c24e.  call temp:= `c`(v0, v5, v3) @signature `Lpc/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L39c254.  v5:= temp;
  #L39c256.  if v5 == 0 then goto L39c25c;
  #L39c25a.  v2:= 1I;
  #L39c25c.  return v2;
  #L39c25e.  return v1;
}
procedure `java.lang.String` `toString`(`jc.c` v2 @kind this) @signature `Ljc/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39c59c.  v0:= new `java.lang.StringBuilder`;
  #L39c5a0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39c5a6.  v1:= "Connection{" @kind object;
  #L39c5aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c5b0.  v1:= v2.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c5b4.  call temp:= `a`(v1) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39c5ba.  v1:= temp @kind object;
  #L39c5bc.  call temp:= `l`(v1) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39c5c2.  v1:= temp @kind object;
  #L39c5c4.  call temp:= `l`(v1) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L39c5ca.  v1:= temp @kind object;
  #L39c5cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c5d2.  v1:= ":" @kind object;
  #L39c5d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c5dc.  v1:= v2.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c5e0.  call temp:= `a`(v1) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L39c5e6.  v1:= temp @kind object;
  #L39c5e8.  call temp:= `l`(v1) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L39c5ee.  v1:= temp @kind object;
  #L39c5f0.  call temp:= `w`(v1) @signature `Lgc/r;.w:()I` @kind virtual;
  #L39c5f6.  v1:= temp;
  #L39c5f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c5fe.  v1:= ", proxy=" @kind object;
  #L39c602.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c608.  v1:= v2.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c60c.  call temp:= `b`(v1) @signature `Lgc/b0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L39c612.  v1:= temp @kind object;
  #L39c614.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c61a.  v1:= " hostAddress=" @kind object;
  #L39c61e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c624.  v1:= v2.`jc.c.c` @type ^`gc.b0` @kind object;
  #L39c628.  call temp:= `d`(v1) @signature `Lgc/b0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L39c62e.  v1:= temp @kind object;
  #L39c630.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c636.  v1:= " cipherSuite=" @kind object;
  #L39c63a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c640.  v1:= v2.`jc.c.f` @type ^`gc.p` @kind object;
  #L39c644.  if v1 == 0 then goto L39c652;
  #L39c648.  call temp:= `a`(v1) @signature `Lgc/p;.a:()Lgc/g;` @kind virtual;
  #L39c64e.  v1:= temp @kind object;
  #L39c650.  goto L39c656;
  #L39c652.  v1:= "none" @kind object;
  #L39c656.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c65c.  v1:= " protocol=" @kind object;
  #L39c660.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c666.  v1:= v2.`jc.c.g` @type ^`gc.v` @kind object;
  #L39c66a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c670.  v1:= 125I;
  #L39c674.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c67a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39c680.  v0:= temp @kind object;
  #L39c682.  return v0 @kind object;
}
