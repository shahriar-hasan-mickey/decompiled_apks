record `jc.g` @kind class @AccessFlag PUBLIC_FINAL {
  `gc.a` `jc.g.a` @AccessFlag PUBLIC_FINAL;
  `jc.f$a` `jc.g.b` @AccessFlag PRIVATE;
  `gc.b0` `jc.g.c` @AccessFlag PRIVATE;
  `gc.i` `jc.g.d` @AccessFlag PRIVATE_FINAL;
  `gc.d` `jc.g.e` @AccessFlag PUBLIC_FINAL;
  `gc.o` `jc.g.f` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `jc.g.g` @AccessFlag PRIVATE_FINAL;
  `jc.f` `jc.g.h` @AccessFlag PRIVATE_FINAL;
  `int` `jc.g.i` @AccessFlag PRIVATE;
  `jc.c` `jc.g.j` @AccessFlag PRIVATE;
  `boolean` `jc.g.k` @AccessFlag PRIVATE;
  `boolean` `jc.g.l` @AccessFlag PRIVATE;
  `boolean` `jc.g.m` @AccessFlag PRIVATE;
  `kc.c` `jc.g.n` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Ljc/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L39de18.  return @kind void;
}
procedure `void` `<init>`(`jc.g` v1 @kind this, `gc.i` v2 @kind object, `gc.a` v3 @kind object, `gc.d` v4 @kind object, `gc.o` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Ljc/g;.<init>:(Lgc/i;Lgc/a;Lgc/d;Lgc/o;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L39de2c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39de32.  v1.`jc.g.d` @type ^`gc.i` := v2 @kind object;
  #L39de36.  v1.`jc.g.a` @type ^`gc.a` := v3 @kind object;
  #L39de3a.  v1.`jc.g.e` @type ^`gc.d` := v4 @kind object;
  #L39de3e.  v1.`jc.g.f` @type ^`gc.o` := v5 @kind object;
  #L39de42.  v2:= new `jc.f`;
  #L39de46.  call temp:= `p`(v1) @signature `Ljc/g;.p:()Ljc/d;` @kind direct;
  #L39de4c.  v0:= temp @kind object;
  #L39de4e.  call `<init>`(v2, v3, v0, v4, v5) @signature `Ljc/f;.<init>:(Lgc/a;Ljc/d;Lgc/d;Lgc/o;)V` @kind direct;
  #L39de54.  v1.`jc.g.h` @type ^`jc.f` := v2 @kind object;
  #L39de58.  v1.`jc.g.g` @type ^`java.lang.Object` := v6 @kind object;
  #L39de5c.  return @kind void;
}
procedure `java.net.Socket` `e`(`jc.g` v1 @kind this, `boolean` v2 , `boolean` v3 , `boolean` v4 ) @signature `Ljc/g;.e:(ZZZ)Ljava/net/Socket;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L39d894.  v0:= 0I;
  #L39d896.  if v4 == 0 then goto L39d89e;
  #L39d89a.  v1.`jc.g.n` @type ^`kc.c` := v0 @kind object;
  #L39d89e.  v4:= 1I;
  #L39d8a0.  if v3 == 0 then goto L39d8a8;
  #L39d8a4.  v1.`jc.g.l` @type ^`boolean` := v4 @kind boolean;
  #L39d8a8.  v3:= v1.`jc.g.j` @type ^`jc.c` @kind object;
  #L39d8ac.  if v3 == 0 then goto L39d928;
  #L39d8b0.  if v2 == 0 then goto L39d8b8;
  #L39d8b4.  v3.`jc.c.k` @type ^`boolean` := v4 @kind boolean;
  #L39d8b8.  v2:= v1.`jc.g.n` @type ^`kc.c` @kind object;
  #L39d8bc.  if v2 != 0 then goto L39d928;
  #L39d8c0.  v2:= v1.`jc.g.l` @type ^`boolean` @kind boolean;
  #L39d8c4.  if v2 != 0 then goto L39d8d0;
  #L39d8c8.  v2:= v3.`jc.c.k` @type ^`boolean` @kind boolean;
  #L39d8cc.  if v2 == 0 then goto L39d928;
  #L39d8d0.  call `l`(v1, v3) @signature `Ljc/g;.l:(Ljc/c;)V` @kind direct;
  #L39d8d6.  v2:= v1.`jc.g.j` @type ^`jc.c` @kind object;
  #L39d8da.  v2:= v2.`jc.c.n` @type ^`java.util.List` @kind object;
  #L39d8de.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L39d8e4.  v2:= temp;
  #L39d8e6.  if v2 == 0 then goto L39d920;
  #L39d8ea.  v2:= v1.`jc.g.j` @type ^`jc.c` @kind object;
  #L39d8ee.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L39d8f4.  v3:= temp @kind wide;
  #L39d8f6.  v2.`jc.c.o` @type ^`long` := v3 @kind wide;
  #L39d8fa.  v2:= `@@hc.a.a` @type ^`hc.a` @kind object;
  #L39d8fe.  v3:= v1.`jc.g.d` @type ^`gc.i` @kind object;
  #L39d902.  v4:= v1.`jc.g.j` @type ^`jc.c` @kind object;
  #L39d906.  call temp:= `e`(v2, v3, v4) @signature `Lhc/a;.e:(Lgc/i;Ljc/c;)Z` @kind virtual;
  #L39d90c.  v2:= temp;
  #L39d90e.  if v2 == 0 then goto L39d920;
  #L39d912.  v2:= v1.`jc.g.j` @type ^`jc.c` @kind object;
  #L39d916.  call temp:= `q`(v2) @signature `Ljc/c;.q:()Ljava/net/Socket;` @kind virtual;
  #L39d91c.  v2:= temp @kind object;
  #L39d91e.  goto L39d922;
  #L39d920.  v2:= v0 @kind object;
  #L39d922.  v1.`jc.g.j` @type ^`jc.c` := v0 @kind object;
  #L39d926.  v0:= v2 @kind object;
  #L39d928.  return v0 @kind object;
}
procedure `jc.c` `f`(`jc.g` v18 @kind this, `int` v19 , `int` v20 , `int` v21 , `int` v22 , `boolean` v23 ) @signature `Ljc/g;.f:(IIIIZ)Ljc/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L39da04.  v1:= v18 @kind object;
  #L39da08.  v2:= v1.`jc.g.d` @type ^`gc.i` @kind object;
  #L39da0c.  @monitorenter v2
  #L39da0e.  v0:= v1.`jc.g.l` @type ^`boolean` @kind boolean;
  #L39da12.  if v0 != 0 then goto L39dc6a;
  #L39da16.  v0:= v1.`jc.g.n` @type ^`kc.c` @kind object;
  #L39da1a.  if v0 != 0 then goto L39dc5a;
  #L39da1e.  v0:= v1.`jc.g.m` @type ^`boolean` @kind boolean;
  #L39da22.  if v0 != 0 then goto L39dc4a;
  #L39da26.  v0:= v1.`jc.g.j` @type ^`jc.c` @kind object;
  #L39da2a.  call temp:= `n`(v18) @signature `Ljc/g;.n:()Ljava/net/Socket;` @kind direct;
  #L39da30.  v3:= temp @kind object;
  #L39da32.  v4:= v1.`jc.g.j` @type ^`jc.c` @kind object;
  #L39da36.  v5:= 0I;
  #L39da38.  if v4 == 0 then goto L39da40;
  #L39da3c.  v0:= v5 @kind object;
  #L39da3e.  goto L39da42;
  #L39da40.  v4:= v5 @kind object;
  #L39da42.  v6:= v1.`jc.g.k` @type ^`boolean` @kind boolean;
  #L39da46.  if v6 != 0 then goto L39da4c;
  #L39da4a.  v0:= v5 @kind object;
  #L39da4c.  v6:= 1I;
  #L39da4e.  v7:= 0I;
  #L39da50.  if v4 != 0 then goto L39da7c;
  #L39da54.  v8:= `@@hc.a.a` @type ^`hc.a` @kind object;
  #L39da58.  v9:= v1.`jc.g.d` @type ^`gc.i` @kind object;
  #L39da5c.  v10:= v1.`jc.g.a` @type ^`gc.a` @kind object;
  #L39da60.  call temp:= `h`(v8, v9, v10, v1, v5) @signature `Lhc/a;.h:(Lgc/i;Lgc/a;Ljc/g;Lgc/b0;)Ljc/c;` @kind virtual;
  #L39da66.  v8:= v1.`jc.g.j` @type ^`jc.c` @kind object;
  #L39da6a.  if v8 == 0 then goto L39da76;
  #L39da6e.  v4:= v8 @kind object;
  #L39da70.  v9:= 1I;
  #L39da72.  v8:= v5 @kind object;
  #L39da74.  goto L39da80;
  #L39da76.  v8:= v1.`jc.g.c` @type ^`gc.b0` @kind object;
  #L39da7a.  goto L39da7e;
  #L39da7c.  v8:= v5 @kind object;
  #L39da7e.  v9:= 0I;
  #L39da80.  @monitorexit v2
  #L39da82.  call `f`(v3) @signature `Lhc/c;.f:(Ljava/net/Socket;)V` @kind static;
  #L39da88.  if v0 == 0 then goto L39da9a;
  #L39da8c.  v2:= v1.`jc.g.f` @type ^`gc.o` @kind object;
  #L39da90.  v3:= v1.`jc.g.e` @type ^`gc.d` @kind object;
  #L39da94.  call `h`(v2, v3, v0) @signature `Lgc/o;.h:(Lgc/d;Lgc/h;)V` @kind virtual;
  #L39da9a.  if v9 == 0 then goto L39daac;
  #L39da9e.  v0:= v1.`jc.g.f` @type ^`gc.o` @kind object;
  #L39daa2.  v2:= v1.`jc.g.e` @type ^`gc.d` @kind object;
  #L39daa6.  call `g`(v0, v2, v4) @signature `Lgc/o;.g:(Lgc/d;Lgc/h;)V` @kind virtual;
  #L39daac.  if v4 == 0 then goto L39dac2;
  #L39dab0.  v0:= v1.`jc.g.j` @type ^`jc.c` @kind object;
  #L39dab4.  call temp:= `p`(v0) @signature `Ljc/c;.p:()Lgc/b0;` @kind virtual;
  #L39daba.  v0:= temp @kind object;
  #L39dabc.  v1.`jc.g.c` @type ^`gc.b0` := v0 @kind object;
  #L39dac0.  return v4 @kind object;
  #L39dac2.  if v8 != 0 then goto L39daee;
  #L39dac6.  v0:= v1.`jc.g.b` @type ^`jc.f$a` @kind object;
  #L39daca.  if v0 == 0 then goto L39dada;
  #L39dace.  call temp:= `b`(v0) @signature `Ljc/f$a;.b:()Z` @kind virtual;
  #L39dad4.  v0:= temp;
  #L39dad6.  if v0 != 0 then goto L39daee;
  #L39dada.  v0:= v1.`jc.g.h` @type ^`jc.f` @kind object;
  #L39dade.  call temp:= `e`(v0) @signature `Ljc/f;.e:()Ljc/f$a;` @kind virtual;
  #L39dae4.  v0:= temp @kind object;
  #L39dae6.  v1.`jc.g.b` @type ^`jc.f$a` := v0 @kind object;
  #L39daea.  v0:= 1I;
  #L39daec.  goto L39daf0;
  #L39daee.  v0:= 0I;
  #L39daf0.  v3:= v1.`jc.g.d` @type ^`gc.i` @kind object;
  #L39daf4.  @monitorenter v3
  #L39daf6.  v2:= v1.`jc.g.m` @type ^`boolean` @kind boolean;
  #L39dafa.  if v2 != 0 then goto L39dc34;
  #L39dafe.  if v0 == 0 then goto L39db52;
  #L39db02.  v0:= v1.`jc.g.b` @type ^`jc.f$a` @kind object;
  #L39db06.  call temp:= `a`(v0) @signature `Ljc/f$a;.a:()Ljava/util/List;` @kind virtual;
  #L39db0c.  v0:= temp @kind object;
  #L39db0e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39db14.  v2:= temp;
  #L39db16.  v10:= 0I;
  #L39db18.  if v10 >= v2 then goto L39db52;
  #L39db1c.  call temp:= `get`(v0, v10) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39db22.  v11:= temp @kind object;
  #L39db24.  v11:= (`gc.b0`) v11 @kind object;
  #L39db28.  v12:= `@@hc.a.a` @type ^`hc.a` @kind object;
  #L39db2c.  v13:= v1.`jc.g.d` @type ^`gc.i` @kind object;
  #L39db30.  v14:= v1.`jc.g.a` @type ^`gc.a` @kind object;
  #L39db34.  call temp:= `h`(v12, v13, v14, v1, v11) @signature `Lhc/a;.h:(Lgc/i;Lgc/a;Ljc/g;Lgc/b0;)Ljc/c;` @kind virtual;
  #L39db3a.  v12:= v1.`jc.g.j` @type ^`jc.c` @kind object;
  #L39db3e.  if v12 == 0 then goto L39db4c;
  #L39db42.  v1.`jc.g.c` @type ^`gc.b0` := v11 @kind object;
  #L39db46.  v4:= v12 @kind object;
  #L39db48.  v9:= 1I;
  #L39db4a.  goto L39db52;
  #L39db4c.  v10:= v10 + 1;
  #L39db50.  goto L39db18;
  #L39db52.  if v9 != 0 then goto L39db82;
  #L39db56.  if v8 != 0 then goto L39db66;
  #L39db5a.  v0:= v1.`jc.g.b` @type ^`jc.f$a` @kind object;
  #L39db5e.  call temp:= `c`(v0) @signature `Ljc/f$a;.c:()Lgc/b0;` @kind virtual;
  #L39db64.  v8:= temp @kind object;
  #L39db66.  v1.`jc.g.c` @type ^`gc.b0` := v8 @kind object;
  #L39db6a.  v1.`jc.g.i` @type ^`int` := v7;
  #L39db6e.  v4:= new `jc.c`;
  #L39db72.  v0:= v1.`jc.g.d` @type ^`gc.i` @kind object;
  #L39db76.  call `<init>`(v4, v0, v8) @signature `Ljc/c;.<init>:(Lgc/i;Lgc/b0;)V` @kind direct;
  #L39db7c.  call `a`(v1, v4, v7) @signature `Ljc/g;.a:(Ljc/c;Z)V` @kind virtual;
  #L39db82.  @monitorexit v3
  #L39db84.  if v9 == 0 then goto L39db98;
  #L39db88.  v0:= v1.`jc.g.f` @type ^`gc.o` @kind object;
  #L39db8c.  v2:= v1.`jc.g.e` @type ^`gc.d` @kind object;
  #L39db90.  call `g`(v0, v2, v4) @signature `Lgc/o;.g:(Lgc/d;Lgc/h;)V` @kind virtual;
  #L39db96.  return v4 @kind object;
  #L39db98.  v0:= v1.`jc.g.e` @type ^`gc.d` @kind object;
  #L39db9c.  v2:= v1.`jc.g.f` @type ^`gc.o` @kind object;
  #L39dba0.  v10:= v4 @kind object;
  #L39dba2.  v11:= v19;
  #L39dba6.  v12:= v20;
  #L39dbaa.  v13:= v21;
  #L39dbae.  v14:= v22;
  #L39dbb2.  v15:= v23;
  #L39dbb6.  v16:= v0 @kind object;
  #L39dbba.  v17:= v2 @kind object;
  #L39dbbe.  call `d`(v10, v11, v12, v13, v14, v15, v16, v17) @signature `Ljc/c;.d:(IIIIZLgc/d;Lgc/o;)V` @kind virtual;
  #L39dbc4.  call temp:= `p`(v18) @signature `Ljc/g;.p:()Ljc/d;` @kind direct;
  #L39dbca.  v0:= temp @kind object;
  #L39dbcc.  call temp:= `p`(v4) @signature `Ljc/c;.p:()Lgc/b0;` @kind virtual;
  #L39dbd2.  v2:= temp @kind object;
  #L39dbd4.  call `a`(v0, v2) @signature `Ljc/d;.a:(Lgc/b0;)V` @kind virtual;
  #L39dbda.  v2:= v1.`jc.g.d` @type ^`gc.i` @kind object;
  #L39dbde.  @monitorenter v2
  #L39dbe0.  v1.`jc.g.k` @type ^`boolean` := v6 @kind boolean;
  #L39dbe4.  v0:= `@@hc.a.a` @type ^`hc.a` @kind object;
  #L39dbe8.  v3:= v1.`jc.g.d` @type ^`gc.i` @kind object;
  #L39dbec.  call `i`(v0, v3, v4) @signature `Lhc/a;.i:(Lgc/i;Ljc/c;)V` @kind virtual;
  #L39dbf2.  call temp:= `n`(v4) @signature `Ljc/c;.n:()Z` @kind virtual;
  #L39dbf8.  v0:= temp;
  #L39dbfa.  if v0 == 0 then goto L39dc16;
  #L39dbfe.  v0:= `@@hc.a.a` @type ^`hc.a` @kind object;
  #L39dc02.  v3:= v1.`jc.g.d` @type ^`gc.i` @kind object;
  #L39dc06.  v4:= v1.`jc.g.a` @type ^`gc.a` @kind object;
  #L39dc0a.  call temp:= `f`(v0, v3, v4, v1) @signature `Lhc/a;.f:(Lgc/i;Lgc/a;Ljc/g;)Ljava/net/Socket;` @kind virtual;
  #L39dc10.  v5:= temp @kind object;
  #L39dc12.  v4:= v1.`jc.g.j` @type ^`jc.c` @kind object;
  #L39dc16.  @monitorexit v2
  #L39dc18.  call `f`(v5) @signature `Lhc/c;.f:(Ljava/net/Socket;)V` @kind static;
  #L39dc1e.  v0:= v1.`jc.g.f` @type ^`gc.o` @kind object;
  #L39dc22.  v2:= v1.`jc.g.e` @type ^`gc.d` @kind object;
  #L39dc26.  call `g`(v0, v2, v4) @signature `Lgc/o;.g:(Lgc/d;Lgc/h;)V` @kind virtual;
  #L39dc2c.  return v4 @kind object;
  #L39dc2e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39dc30.  @monitorexit v2
  #L39dc32.  throw v0;
  #L39dc34.  v0:= new `java.io.IOException`;
  #L39dc38.  v2:= "Canceled" @kind object;
  #L39dc3c.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39dc42.  throw v0;
  #L39dc44.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39dc46.  @monitorexit v3
  #L39dc48.  throw v0;
  #L39dc4a.  v0:= new `java.io.IOException`;
  #L39dc4e.  v3:= "Canceled" @kind object;
  #L39dc52.  call `<init>`(v0, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39dc58.  throw v0;
  #L39dc5a.  v0:= new `java.lang.IllegalStateException`;
  #L39dc5e.  v3:= "codec != null" @kind object;
  #L39dc62.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39dc68.  throw v0;
  #L39dc6a.  v0:= new `java.lang.IllegalStateException`;
  #L39dc6e.  v3:= "released" @kind object;
  #L39dc72.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39dc78.  throw v0;
  #L39dc7a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39dc7c.  @monitorexit v2
  #L39dc7e.  throw v0;
  catch `java.lang.Throwable` @[L39da0e..L39da82] goto L39dc7a;
  catch `java.lang.Throwable` @[L39daf6..L39db84] goto L39dc44;
  catch `java.lang.Throwable` @[L39dbe0..L39dc18] goto L39dc2e;
  catch `java.lang.Throwable` @[L39dc30..L39dc32] goto L39dc2e;
  catch `java.lang.Throwable` @[L39dc34..L39dc48] goto L39dc44;
  catch `java.lang.Throwable` @[L39dc4a..L39dc7e] goto L39dc7a;
}
procedure `jc.c` `g`(`jc.g` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 , `boolean` v8 , `boolean` v9 ) @signature `Ljc/g;.g:(IIIIZZ)Ljc/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L39dccc.  call temp:= `f`(v3, v4, v5, v6, v7, v8) @signature `Ljc/g;.f:(IIIIZ)Ljc/c;` @kind direct;
  #L39dcd2.  v0:= temp @kind object;
  #L39dcd4.  v1:= v3.`jc.g.d` @type ^`gc.i` @kind object;
  #L39dcd8.  @monitorenter v1
  #L39dcda.  v2:= v0.`jc.c.l` @type ^`int`;
  #L39dcde.  if v2 != 0 then goto L39dcf2;
  #L39dce2.  call temp:= `n`(v0) @signature `Ljc/c;.n:()Z` @kind virtual;
  #L39dce8.  v2:= temp;
  #L39dcea.  if v2 != 0 then goto L39dcf2;
  #L39dcee.  @monitorexit v1
  #L39dcf0.  return v0 @kind object;
  #L39dcf2.  @monitorexit v1
  #L39dcf4.  call temp:= `m`(v0, v9) @signature `Ljc/c;.m:(Z)Z` @kind virtual;
  #L39dcfa.  v1:= temp;
  #L39dcfc.  if v1 != 0 then goto L39dd08;
  #L39dd00.  call `j`(v3) @signature `Ljc/g;.j:()V` @kind virtual;
  #L39dd06.  goto L39dccc;
  #L39dd08.  return v0 @kind object;
  #L39dd0a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39dd0c.  @monitorexit v1
  #L39dd0e.  throw v4;
  catch `java.lang.Throwable` @[L39dcda..L39dcf4] goto L39dd0a;
  catch `java.lang.Throwable` @[L39dd0c..L39dd0e] goto L39dd0a;
}
procedure `void` `l`(`jc.g` v3 @kind this, `jc.c` v4 @kind object) @signature `Ljc/g;.l:(Ljc/c;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L39dffc.  v0:= v4.`jc.c.n` @type ^`java.util.List` @kind object;
  #L39e000.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39e006.  v0:= temp;
  #L39e008.  v1:= 0I;
  #L39e00a.  if v1 >= v0 then goto L39e03c;
  #L39e00e.  v2:= v4.`jc.c.n` @type ^`java.util.List` @kind object;
  #L39e012.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39e018.  v2:= temp @kind object;
  #L39e01a.  v2:= (`java.lang.ref.Reference`) v2 @kind object;
  #L39e01e.  call temp:= `get`(v2) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L39e024.  v2:= temp @kind object;
  #L39e026.  if v2 != v3 then goto L39e036;
  #L39e02a.  v4:= v4.`jc.c.n` @type ^`java.util.List` @kind object;
  #L39e02e.  call temp:= `remove`(v4, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L39e034.  return @kind void;
  #L39e036.  v1:= v1 + 1;
  #L39e03a.  goto L39e00a;
  #L39e03c.  v4:= new `java.lang.IllegalStateException`;
  #L39e040.  call `<init>`(v4) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L39e046.  throw v4;
}
procedure `java.net.Socket` `n`(`jc.g` v2 @kind this) @signature `Ljc/g;.n:()Ljava/net/Socket;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L39d9a4.  v0:= v2.`jc.g.j` @type ^`jc.c` @kind object;
  #L39d9a8.  if v0 == 0 then goto L39d9c2;
  #L39d9ac.  v0:= v0.`jc.c.k` @type ^`boolean` @kind boolean;
  #L39d9b0.  if v0 == 0 then goto L39d9c2;
  #L39d9b4.  v0:= 1I;
  #L39d9b6.  v1:= 0I;
  #L39d9b8.  call temp:= `e`(v2, v1, v1, v0) @signature `Ljc/g;.e:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L39d9be.  v0:= temp @kind object;
  #L39d9c0.  return v0 @kind object;
  #L39d9c2.  v0:= 0I;
  #L39d9c4.  return v0 @kind object;
}
procedure `jc.d` `p`(`jc.g` v2 @kind this) @signature `Ljc/g;.p:()Ljc/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L39dd34.  v0:= `@@hc.a.a` @type ^`hc.a` @kind object;
  #L39dd38.  v1:= v2.`jc.g.d` @type ^`gc.i` @kind object;
  #L39dd3c.  call temp:= `j`(v0, v1) @signature `Lhc/a;.j:(Lgc/i;)Ljc/d;` @kind virtual;
  #L39dd42.  v0:= temp @kind object;
  #L39dd44.  return v0 @kind object;
}
procedure `void` `a`(`jc.g` v1 @kind this, `jc.c` v2 @kind object, `boolean` v3 ) @signature `Ljc/g;.a:(Ljc/c;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39de70.  v0:= v1.`jc.g.j` @type ^`jc.c` @kind object;
  #L39de74.  if v0 != 0 then goto L39de9a;
  #L39de78.  v1.`jc.g.j` @type ^`jc.c` := v2 @kind object;
  #L39de7c.  v1.`jc.g.k` @type ^`boolean` := v3 @kind boolean;
  #L39de80.  v2:= v2.`jc.c.n` @type ^`java.util.List` @kind object;
  #L39de84.  v3:= new `jc.g$a`;
  #L39de88.  v0:= v1.`jc.g.g` @type ^`java.lang.Object` @kind object;
  #L39de8c.  call `<init>`(v3, v1, v0) @signature `Ljc/g$a;.<init>:(Ljc/g;Ljava/lang/Object;)V` @kind direct;
  #L39de92.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39de98.  return @kind void;
  #L39de9a.  v2:= new `java.lang.IllegalStateException`;
  #L39de9e.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L39dea4.  throw v2;
}
procedure `void` `b`(`jc.g` v3 @kind this) @signature `Ljc/g;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39deb8.  v0:= v3.`jc.g.d` @type ^`gc.i` @kind object;
  #L39debc.  @monitorenter v0
  #L39debe.  v1:= 1I;
  #L39dec0.  v3.`jc.g.m` @type ^`boolean` := v1 @kind boolean;
  #L39dec4.  v1:= v3.`jc.g.n` @type ^`kc.c` @kind object;
  #L39dec8.  v2:= v3.`jc.g.j` @type ^`jc.c` @kind object;
  #L39decc.  @monitorexit v0
  #L39dece.  if v1 == 0 then goto L39deda;
  #L39ded2.  call `cancel`(v1) @signature `Lkc/c;.cancel:()V` @kind interface;
  #L39ded8.  goto L39dee4;
  #L39deda.  if v2 == 0 then goto L39dee4;
  #L39dede.  call `c`(v2) @signature `Ljc/c;.c:()V` @kind virtual;
  #L39dee4.  return @kind void;
  #L39dee6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39dee8.  @monitorexit v0
  #L39deea.  throw v1;
  catch `java.lang.Throwable` @[L39dec0..L39dece] goto L39dee6;
  catch `java.lang.Throwable` @[L39dee8..L39deea] goto L39dee6;
}
procedure `kc.c` `c`(`jc.g` v2 @kind this) @signature `Ljc/g;.c:()Lkc/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39dd58.  v0:= v2.`jc.g.d` @type ^`gc.i` @kind object;
  #L39dd5c.  @monitorenter v0
  #L39dd5e.  v1:= v2.`jc.g.n` @type ^`kc.c` @kind object;
  #L39dd62.  @monitorexit v0
  #L39dd64.  return v1 @kind object;
  #L39dd66.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39dd68.  @monitorexit v0
  #L39dd6a.  throw v1;
  catch `java.lang.Throwable` @[L39dd5e..L39dd6a] goto L39dd66;
}
procedure `jc.c` `d`(`jc.g` v1 @kind this) @signature `Ljc/g;.d:()Ljc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d9d8.  @monitorenter v1
  #L39d9da.  v0:= v1.`jc.g.j` @type ^`jc.c` @kind object;
  #L39d9de.  @monitorexit v1
  #L39d9e0.  return v0 @kind object;
  #L39d9e2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39d9e4.  @monitorexit v1
  #L39d9e6.  throw v0;
  catch `java.lang.Throwable` @[L39d9da..L39d9de] goto L39d9e2;
}
procedure `boolean` `h`(`jc.g` v1 @kind this) @signature `Ljc/g;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d800.  v0:= v1.`jc.g.c` @type ^`gc.b0` @kind object;
  #L39d804.  if v0 != 0 then goto L39d832;
  #L39d808.  v0:= v1.`jc.g.b` @type ^`jc.f$a` @kind object;
  #L39d80c.  if v0 == 0 then goto L39d81c;
  #L39d810.  call temp:= `b`(v0) @signature `Ljc/f$a;.b:()Z` @kind virtual;
  #L39d816.  v0:= temp;
  #L39d818.  if v0 != 0 then goto L39d832;
  #L39d81c.  v0:= v1.`jc.g.h` @type ^`jc.f` @kind object;
  #L39d820.  call temp:= `c`(v0) @signature `Ljc/f;.c:()Z` @kind virtual;
  #L39d826.  v0:= temp;
  #L39d828.  if v0 == 0 then goto L39d82e;
  #L39d82c.  goto L39d832;
  #L39d82e.  v0:= 0I;
  #L39d830.  goto L39d834;
  #L39d832.  v0:= 1I;
  #L39d834.  return v0;
}
procedure `kc.c` `i`(`jc.g` v7 @kind this, `gc.u` v8 @kind object, `gc.s$a` v9 @kind object, `boolean` v10 ) @signature `Ljc/g;.i:(Lgc/u;Lgc/s$a;Z)Lkc/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L39dd88.  call temp:= `b`(v9) @signature `Lgc/s$a;.b:()I` @kind interface;
  #L39dd8e.  v1:= temp;
  #L39dd90.  call temp:= `c`(v9) @signature `Lgc/s$a;.c:()I` @kind interface;
  #L39dd96.  v2:= temp;
  #L39dd98.  call temp:= `d`(v9) @signature `Lgc/s$a;.d:()I` @kind interface;
  #L39dd9e.  v3:= temp;
  #L39dda0.  call temp:= `B`(v8) @signature `Lgc/u;.B:()I` @kind virtual;
  #L39dda6.  v4:= temp;
  #L39dda8.  call temp:= `H`(v8) @signature `Lgc/u;.H:()Z` @kind virtual;
  #L39ddae.  v5:= temp;
  #L39ddb0.  v0:= v7 @kind object;
  #L39ddb2.  v6:= v10;
  #L39ddb4.  call temp:= `g`(v0, v1, v2, v3, v4, v5, v6) @signature `Ljc/g;.g:(IIIIZZ)Ljc/c;` @kind direct;
  #L39ddba.  v10:= temp @kind object;
  #L39ddbc.  call temp:= `o`(v10, v8, v9, v7) @signature `Ljc/c;.o:(Lgc/u;Lgc/s$a;Ljc/g;)Lkc/c;` @kind virtual;
  #L39ddc2.  v8:= temp @kind object;
  #L39ddc4.  v9:= v7.`jc.g.d` @type ^`gc.i` @kind object;
  #L39ddc8.  @monitorenter v9
  #L39ddca.  v7.`jc.g.n` @type ^`kc.c` := v8 @kind object;
  #L39ddce.  @monitorexit v9
  #L39ddd0.  return v8 @kind object;
  #L39ddd2.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39ddd4.  @monitorexit v9
  #L39ddd6.  throw v8;
  #L39ddd8.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L39ddda.  v9:= new `jc.e`;
  #L39ddde.  call `<init>`(v9, v8) @signature `Ljc/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L39dde4.  throw v9;
  catch `java.io.IOException` @[L39ddb4..L39ddca] goto L39ddd8;
  catch `java.lang.Throwable` @[L39ddca..L39ddd6] goto L39ddd2;
  catch `java.io.IOException` @[L39ddd6..L39ddd8] goto L39ddd8;
}
procedure `void` `j`(`jc.g` v4 @kind this) @signature `Ljc/g;.j:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39df10.  v0:= v4.`jc.g.d` @type ^`gc.i` @kind object;
  #L39df14.  @monitorenter v0
  #L39df16.  v1:= v4.`jc.g.j` @type ^`jc.c` @kind object;
  #L39df1a.  v2:= 1I;
  #L39df1c.  v3:= 0I;
  #L39df1e.  call temp:= `e`(v4, v2, v3, v3) @signature `Ljc/g;.e:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L39df24.  v2:= temp @kind object;
  #L39df26.  v3:= v4.`jc.g.j` @type ^`jc.c` @kind object;
  #L39df2a.  if v3 == 0 then goto L39df30;
  #L39df2e.  v1:= 0I;
  #L39df30.  @monitorexit v0
  #L39df32.  call `f`(v2) @signature `Lhc/c;.f:(Ljava/net/Socket;)V` @kind static;
  #L39df38.  if v1 == 0 then goto L39df4a;
  #L39df3c.  v0:= v4.`jc.g.f` @type ^`gc.o` @kind object;
  #L39df40.  v2:= v4.`jc.g.e` @type ^`gc.d` @kind object;
  #L39df44.  call `h`(v0, v2, v1) @signature `Lgc/o;.h:(Lgc/d;Lgc/h;)V` @kind virtual;
  #L39df4a.  return @kind void;
  #L39df4c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39df4e.  @monitorexit v0
  #L39df50.  throw v1;
  catch `java.lang.Throwable` @[L39df16..L39df32] goto L39df4c;
  catch `java.lang.Throwable` @[L39df4e..L39df50] goto L39df4c;
}
procedure `void` `k`(`jc.g` v5 @kind this) @signature `Ljc/g;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39df78.  v0:= v5.`jc.g.d` @type ^`gc.i` @kind object;
  #L39df7c.  @monitorenter v0
  #L39df7e.  v1:= v5.`jc.g.j` @type ^`jc.c` @kind object;
  #L39df82.  v2:= 1I;
  #L39df84.  v3:= 0I;
  #L39df86.  call temp:= `e`(v5, v3, v2, v3) @signature `Ljc/g;.e:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L39df8c.  v2:= temp @kind object;
  #L39df8e.  v3:= v5.`jc.g.j` @type ^`jc.c` @kind object;
  #L39df92.  v4:= 0I;
  #L39df94.  if v3 == 0 then goto L39df9a;
  #L39df98.  v1:= v4 @kind object;
  #L39df9a.  @monitorexit v0
  #L39df9c.  call `f`(v2) @signature `Lhc/c;.f:(Ljava/net/Socket;)V` @kind static;
  #L39dfa2.  if v1 == 0 then goto L39dfd0;
  #L39dfa6.  v0:= `@@hc.a.a` @type ^`hc.a` @kind object;
  #L39dfaa.  v2:= v5.`jc.g.e` @type ^`gc.d` @kind object;
  #L39dfae.  call temp:= `k`(v0, v2, v4) @signature `Lhc/a;.k:(Lgc/d;Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L39dfb4.  v0:= v5.`jc.g.f` @type ^`gc.o` @kind object;
  #L39dfb8.  v2:= v5.`jc.g.e` @type ^`gc.d` @kind object;
  #L39dfbc.  call `h`(v0, v2, v1) @signature `Lgc/o;.h:(Lgc/d;Lgc/h;)V` @kind virtual;
  #L39dfc2.  v0:= v5.`jc.g.f` @type ^`gc.o` @kind object;
  #L39dfc6.  v1:= v5.`jc.g.e` @type ^`gc.d` @kind object;
  #L39dfca.  call `a`(v0, v1) @signature `Lgc/o;.a:(Lgc/d;)V` @kind virtual;
  #L39dfd0.  return @kind void;
  #L39dfd2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39dfd4.  @monitorexit v0
  #L39dfd6.  throw v1;
  catch `java.lang.Throwable` @[L39df7e..L39df9c] goto L39dfd2;
  catch `java.lang.Throwable` @[L39dfd4..L39dfd6] goto L39dfd2;
}
procedure `java.net.Socket` `m`(`jc.g` v3 @kind this, `jc.c` v4 @kind object) @signature `Ljc/g;.m:(Ljc/c;)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d93c.  v0:= v3.`jc.g.n` @type ^`kc.c` @kind object;
  #L39d940.  if v0 != 0 then goto L39d988;
  #L39d944.  v0:= v3.`jc.g.j` @type ^`jc.c` @kind object;
  #L39d948.  v0:= v0.`jc.c.n` @type ^`java.util.List` @kind object;
  #L39d94c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39d952.  v0:= temp;
  #L39d954.  v1:= 1I;
  #L39d956.  if v0 != v1 then goto L39d988;
  #L39d95a.  v0:= v3.`jc.g.j` @type ^`jc.c` @kind object;
  #L39d95e.  v0:= v0.`jc.c.n` @type ^`java.util.List` @kind object;
  #L39d962.  v2:= 0I;
  #L39d964.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39d96a.  v0:= temp @kind object;
  #L39d96c.  v0:= (`java.lang.ref.Reference`) v0 @kind object;
  #L39d970.  call temp:= `e`(v3, v1, v2, v2) @signature `Ljc/g;.e:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L39d976.  v1:= temp @kind object;
  #L39d978.  v3.`jc.g.j` @type ^`jc.c` := v4 @kind object;
  #L39d97c.  v4:= v4.`jc.c.n` @type ^`java.util.List` @kind object;
  #L39d980.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39d986.  return v1 @kind object;
  #L39d988.  v4:= new `java.lang.IllegalStateException`;
  #L39d98c.  call `<init>`(v4) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L39d992.  throw v4;
}
procedure `gc.b0` `o`(`jc.g` v1 @kind this) @signature `Ljc/g;.o:()Lgc/b0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d848.  v0:= v1.`jc.g.c` @type ^`gc.b0` @kind object;
  #L39d84c.  return v0 @kind object;
}
procedure `void` `q`(`jc.g` v6 @kind this, `java.io.IOException` v7 @kind object) @signature `Ljc/g;.q:(Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39e058.  v0:= v6.`jc.g.d` @type ^`gc.i` @kind object;
  #L39e05c.  @monitorenter v0
  #L39e05e.  v1:= instanceof @variable v7 @type ^`mc.n` @kind boolean;
  #L39e062.  v2:= 0I;
  #L39e064.  v3:= 0I;
  #L39e066.  v4:= 1I;
  #L39e068.  if v1 == 0 then goto L39e09a;
  #L39e06c.  v7:= (`mc.n`) v7 @kind object;
  #L39e070.  v7:= v7.`mc.n.o` @type ^`mc.b` @kind object;
  #L39e074.  v1:= `@@mc.b.t` @type ^`mc.b` @kind object;
  #L39e078.  if v7 != v1 then goto L39e08c;
  #L39e07c.  v7:= v6.`jc.g.i` @type ^`int`;
  #L39e080.  v7:= v7 + v4 @kind int;
  #L39e082.  v6.`jc.g.i` @type ^`int` := v7;
  #L39e086.  if v7 <= v4 then goto L39e0de;
  #L39e08a.  goto L39e094;
  #L39e08c.  v1:= `@@mc.b.u` @type ^`mc.b` @kind object;
  #L39e090.  if v7 == v1 then goto L39e0de;
  #L39e094.  v6.`jc.g.c` @type ^`gc.b0` := v3 @kind object;
  #L39e098.  goto L39e0da;
  #L39e09a.  v1:= v6.`jc.g.j` @type ^`jc.c` @kind object;
  #L39e09e.  if v1 == 0 then goto L39e0de;
  #L39e0a2.  call temp:= `n`(v1) @signature `Ljc/c;.n:()Z` @kind virtual;
  #L39e0a8.  v1:= temp;
  #L39e0aa.  if v1 == 0 then goto L39e0b6;
  #L39e0ae.  v1:= instanceof @variable v7 @type ^`mc.a` @kind boolean;
  #L39e0b2.  if v1 == 0 then goto L39e0de;
  #L39e0b6.  v1:= v6.`jc.g.j` @type ^`jc.c` @kind object;
  #L39e0ba.  v1:= v1.`jc.c.l` @type ^`int`;
  #L39e0be.  if v1 != 0 then goto L39e0da;
  #L39e0c2.  v1:= v6.`jc.g.c` @type ^`gc.b0` @kind object;
  #L39e0c6.  if v1 == 0 then goto L39e094;
  #L39e0ca.  if v7 == 0 then goto L39e094;
  #L39e0ce.  v5:= v6.`jc.g.h` @type ^`jc.f` @kind object;
  #L39e0d2.  call `a`(v5, v1, v7) @signature `Ljc/f;.a:(Lgc/b0;Ljava/io/IOException;)V` @kind virtual;
  #L39e0d8.  goto L39e094;
  #L39e0da.  v7:= 1I;
  #L39e0dc.  goto L39e0e0;
  #L39e0de.  v7:= 0I;
  #L39e0e0.  v1:= v6.`jc.g.j` @type ^`jc.c` @kind object;
  #L39e0e4.  call temp:= `e`(v6, v7, v2, v4) @signature `Ljc/g;.e:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L39e0ea.  v7:= temp @kind object;
  #L39e0ec.  v2:= v6.`jc.g.j` @type ^`jc.c` @kind object;
  #L39e0f0.  if v2 != 0 then goto L39e100;
  #L39e0f4.  v2:= v6.`jc.g.k` @type ^`boolean` @kind boolean;
  #L39e0f8.  if v2 != 0 then goto L39e0fe;
  #L39e0fc.  goto L39e100;
  #L39e0fe.  v3:= v1 @kind object;
  #L39e100.  @monitorexit v0
  #L39e102.  call `f`(v7) @signature `Lhc/c;.f:(Ljava/net/Socket;)V` @kind static;
  #L39e108.  if v3 == 0 then goto L39e11a;
  #L39e10c.  v7:= v6.`jc.g.f` @type ^`gc.o` @kind object;
  #L39e110.  v0:= v6.`jc.g.e` @type ^`gc.d` @kind object;
  #L39e114.  call `h`(v7, v0, v3) @signature `Lgc/o;.h:(Lgc/d;Lgc/h;)V` @kind virtual;
  #L39e11a.  return @kind void;
  #L39e11c.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39e11e.  @monitorexit v0
  #L39e120.  throw v7;
  catch `java.lang.Throwable` @[L39e05e..L39e102] goto L39e11c;
  catch `java.lang.Throwable` @[L39e11e..L39e120] goto L39e11c;
}
procedure `void` `r`(`jc.g` v2 @kind this, `boolean` v3 , `kc.c` v4 @kind object, `long` v5 , `java.io.IOException` v7 @kind object) @signature `Ljc/g;.r:(ZLkc/c;JLjava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39e148.  v0:= v2.`jc.g.f` @type ^`gc.o` @kind object;
  #L39e14c.  v1:= v2.`jc.g.e` @type ^`gc.d` @kind object;
  #L39e150.  call `p`(v0, v1, v5) @signature `Lgc/o;.p:(Lgc/d;J)V` @kind virtual;
  #L39e156.  v5:= v2.`jc.g.d` @type ^`gc.i` @kind object;
  #L39e15a.  @monitorenter v5
  #L39e15c.  if v4 == 0 then goto L39e1fa;
  #L39e160.  v6:= v2.`jc.g.n` @type ^`kc.c` @kind object;
  #L39e164.  if v4 != v6 then goto L39e1fa;
  #L39e168.  v4:= 1I;
  #L39e16a.  if v3 != 0 then goto L39e17c;
  #L39e16e.  v6:= v2.`jc.g.j` @type ^`jc.c` @kind object;
  #L39e172.  v0:= v6.`jc.c.l` @type ^`int`;
  #L39e176.  v0:= v0 + v4 @kind int;
  #L39e178.  v6.`jc.c.l` @type ^`int` := v0;
  #L39e17c.  v6:= v2.`jc.g.j` @type ^`jc.c` @kind object;
  #L39e180.  v0:= 0I;
  #L39e182.  call temp:= `e`(v2, v3, v0, v4) @signature `Ljc/g;.e:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L39e188.  v3:= temp @kind object;
  #L39e18a.  v4:= v2.`jc.g.j` @type ^`jc.c` @kind object;
  #L39e18e.  v0:= 0I;
  #L39e190.  if v4 == 0 then goto L39e196;
  #L39e194.  v6:= v0 @kind object;
  #L39e196.  v4:= v2.`jc.g.l` @type ^`boolean` @kind boolean;
  #L39e19a.  @monitorexit v5
  #L39e19c.  call `f`(v3) @signature `Lhc/c;.f:(Ljava/net/Socket;)V` @kind static;
  #L39e1a2.  if v6 == 0 then goto L39e1b4;
  #L39e1a6.  v3:= v2.`jc.g.f` @type ^`gc.o` @kind object;
  #L39e1aa.  v5:= v2.`jc.g.e` @type ^`gc.d` @kind object;
  #L39e1ae.  call `h`(v3, v5, v6) @signature `Lgc/o;.h:(Lgc/d;Lgc/h;)V` @kind virtual;
  #L39e1b4.  if v7 == 0 then goto L39e1d8;
  #L39e1b8.  v3:= `@@hc.a.a` @type ^`hc.a` @kind object;
  #L39e1bc.  v4:= v2.`jc.g.e` @type ^`gc.d` @kind object;
  #L39e1c0.  call temp:= `k`(v3, v4, v7) @signature `Lhc/a;.k:(Lgc/d;Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L39e1c6.  v3:= temp @kind object;
  #L39e1c8.  v4:= v2.`jc.g.f` @type ^`gc.o` @kind object;
  #L39e1cc.  v5:= v2.`jc.g.e` @type ^`gc.d` @kind object;
  #L39e1d0.  call `b`(v4, v5, v3) @signature `Lgc/o;.b:(Lgc/d;Ljava/io/IOException;)V` @kind virtual;
  #L39e1d6.  goto L39e1f8;
  #L39e1d8.  if v4 == 0 then goto L39e1f8;
  #L39e1dc.  v3:= `@@hc.a.a` @type ^`hc.a` @kind object;
  #L39e1e0.  v4:= v2.`jc.g.e` @type ^`gc.d` @kind object;
  #L39e1e4.  call temp:= `k`(v3, v4, v0) @signature `Lhc/a;.k:(Lgc/d;Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L39e1ea.  v3:= v2.`jc.g.f` @type ^`gc.o` @kind object;
  #L39e1ee.  v4:= v2.`jc.g.e` @type ^`gc.d` @kind object;
  #L39e1f2.  call `a`(v3, v4) @signature `Lgc/o;.a:(Lgc/d;)V` @kind virtual;
  #L39e1f8.  return @kind void;
  #L39e1fa.  v3:= new `java.lang.IllegalStateException`;
  #L39e1fe.  v6:= new `java.lang.StringBuilder`;
  #L39e202.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39e208.  v7:= "expected " @kind object;
  #L39e20c.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e212.  v7:= v2.`jc.g.n` @type ^`kc.c` @kind object;
  #L39e216.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e21c.  v7:= " but was " @kind object;
  #L39e220.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e226.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e22c.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39e232.  v4:= temp @kind object;
  #L39e234.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39e23a.  throw v3;
  #L39e23c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39e23e.  @monitorexit v5
  #L39e240.  throw v3;
  catch `java.lang.Throwable` @[L39e160..L39e19c] goto L39e23c;
  catch `java.lang.Throwable` @[L39e1fa..L39e240] goto L39e23c;
}
procedure `java.lang.String` `toString`(`jc.g` v1 @kind this) @signature `Ljc/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d860.  call temp:= `d`(v1) @signature `Ljc/g;.d:()Ljc/c;` @kind virtual;
  #L39d866.  v0:= temp @kind object;
  #L39d868.  if v0 == 0 then goto L39d876;
  #L39d86c.  call temp:= `toString`(v0) @signature `Ljc/c;.toString:()Ljava/lang/String;` @kind virtual;
  #L39d872.  v0:= temp @kind object;
  #L39d874.  goto L39d882;
  #L39d876.  v0:= v1.`jc.g.a` @type ^`gc.a` @kind object;
  #L39d87a.  call temp:= `toString`(v0) @signature `Lgc/a;.toString:()Ljava/lang/String;` @kind virtual;
  #L39d880.  v0:= temp @kind object;
  #L39d882.  return v0 @kind object;
}
