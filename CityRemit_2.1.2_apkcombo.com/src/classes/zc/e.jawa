record `zc.e` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `uc.i` `zc.e.o` @AccessFlag PRIVATE_FINAL;
  `byte` `zc.e.p` @AccessFlag PRIVATE_FINAL;
  `uc.c` `zc.e.q` @AccessFlag PRIVATE_FINAL;
  `uc.h` `zc.e.r` @AccessFlag PRIVATE_FINAL;
  `int` `zc.e.s` @AccessFlag PRIVATE_FINAL;
  `zc.e$b` `zc.e.t` @AccessFlag PRIVATE_FINAL;
  `uc.r` `zc.e.u` @AccessFlag PRIVATE_FINAL;
  `uc.r` `zc.e.v` @AccessFlag PRIVATE_FINAL;
  `uc.r` `zc.e.w` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`zc.e` v0 @kind this, `uc.i` v1 @kind object, `int` v2 , `uc.c` v3 @kind object, `uc.h` v4 @kind object, `int` v5 , `zc.e$b` v6 @kind object, `uc.r` v7 @kind object, `uc.r` v8 @kind object, `uc.r` v9 @kind object) @signature `Lzc/e;.<init>:(Luc/i;ILuc/c;Luc/h;ILzc/e$b;Luc/r;Luc/r;Luc/r;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L509824.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50982a.  v0.`zc.e.o` @type ^`uc.i` := v1 @kind object;
  #L50982e.  v1:= (`byte`) v2 @kind i2b;
  #L509830.  v0.`zc.e.p` @type ^`byte` := v1 @kind byte;
  #L509834.  v0.`zc.e.q` @type ^`uc.c` := v3 @kind object;
  #L509838.  v0.`zc.e.r` @type ^`uc.h` := v4 @kind object;
  #L50983c.  v0.`zc.e.s` @type ^`int` := v5;
  #L509840.  v0.`zc.e.t` @type ^`zc.e$b` := v6 @kind object;
  #L509844.  v0.`zc.e.u` @type ^`uc.r` := v7 @kind object;
  #L509848.  v0.`zc.e.v` @type ^`uc.r` := v8 @kind object;
  #L50984c.  v0.`zc.e.w` @type ^`uc.r` := v9 @kind object;
  #L509850.  return @kind void;
}
procedure `void` `a`(`zc.e` v3 @kind this, `java.lang.StringBuilder` v4 @kind object, `long` v5 ) @signature `Lzc/e;.a:(Ljava/lang/StringBuilder;J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L509864.  v0:= 10L;
  #L509868.  v2:= lcmp(v5, v0);
  #L50986c.  if v2 >= 0 then goto L509878;
  #L509870.  v0:= 0I;
  #L509872.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L509878.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L50987e.  return @kind void;
}
procedure `zc.e` `c`(`java.io.DataInput` v12 @kind object) @signature `Lzc/e;.c:(Ljava/io/DataInput;)Lzc/e;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L509ac0.  call temp:= `readInt`(v12) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L509ac6.  v0:= temp;
  #L509ac8.  v1:= v0 ^>> 28;
  #L509acc.  call temp:= `o`(v1) @signature `Luc/i;.o:(I)Luc/i;` @kind static;
  #L509ad2.  v3:= temp @kind object;
  #L509ad4.  v1:= 264241152I;
  #L509ad8.  v1:= v1 ^& v0 @kind int;
  #L509ada.  v1:= v1 ^>> 22;
  #L509ade.  v4:= v1 + -32;
  #L509ae2.  v1:= 3670016I;
  #L509ae6.  v1:= v1 ^& v0 @kind int;
  #L509ae8.  v1:= v1 ^>> 19;
  #L509aec.  if v1 != 0 then goto L509af4;
  #L509af0.  v1:= 0I;
  #L509af2.  goto L509afc;
  #L509af4.  call temp:= `e`(v1) @signature `Luc/c;.e:(I)Luc/c;` @kind static;
  #L509afa.  v1:= temp @kind object;
  #L509afc.  v5:= v1 @kind object;
  #L509afe.  v1:= 507904I;
  #L509b04.  v1:= v1 ^& v0 @kind int;
  #L509b06.  v1:= v1 ^>> 14;
  #L509b0a.  call temp:= `values`() @signature `Lzc/e$b;.values:()[Lzc/e$b;` @kind static;
  #L509b10.  v2:= temp @kind object;
  #L509b12.  v6:= v0 ^& 12288;
  #L509b16.  v6:= v6 ^>> 12;
  #L509b1a.  v8:= v2[v6] @kind object;
  #L509b1e.  v2:= v0 ^& 4080;
  #L509b22.  v2:= v2 ^>> 4;
  #L509b26.  v6:= v0 ^& 12;
  #L509b2a.  v6:= v6 ^>> 2;
  #L509b2e.  v7:= 3I;
  #L509b30.  v0:= v0 ^& v7 @kind int;
  #L509b32.  v9:= 31I;
  #L509b36.  if v1 != v9 then goto L509b44;
  #L509b3a.  call temp:= `readInt`(v12) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L509b40.  v1:= temp;
  #L509b42.  goto L509b48;
  #L509b44.  v1:= v1 * 3600;
  #L509b48.  v10:= 255I;
  #L509b4c.  if v2 != v10 then goto L509b5a;
  #L509b50.  call temp:= `readInt`(v12) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L509b56.  v2:= temp;
  #L509b58.  goto L509b62;
  #L509b5a.  v2:= v2 + -128;
  #L509b5e.  v2:= v2 * 900;
  #L509b62.  call temp:= `X`(v2) @signature `Luc/r;.X:(I)Luc/r;` @kind static;
  #L509b68.  v2:= temp @kind object;
  #L509b6a.  v10:= v2 @kind object;
  #L509b6c.  if v6 != v7 then goto L509b7a;
  #L509b70.  call temp:= `readInt`(v12) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L509b76.  v2:= temp;
  #L509b78.  goto L509b88;
  #L509b7a.  call temp:= `S`(v10) @signature `Luc/r;.S:()I` @kind virtual;
  #L509b80.  v2:= temp;
  #L509b82.  v6:= v6 * 1800;
  #L509b86.  v2:= v2 + v6 @kind int;
  #L509b88.  call temp:= `X`(v2) @signature `Luc/r;.X:(I)Luc/r;` @kind static;
  #L509b8e.  v2:= temp @kind object;
  #L509b90.  v11:= v2 @kind object;
  #L509b92.  if v0 != v7 then goto L509ba0;
  #L509b96.  call temp:= `readInt`(v12) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L509b9c.  v12:= temp;
  #L509b9e.  goto L509bae;
  #L509ba0.  call temp:= `S`(v10) @signature `Luc/r;.S:()I` @kind virtual;
  #L509ba6.  v12:= temp;
  #L509ba8.  v0:= v0 * 1800;
  #L509bac.  v12:= v12 + v0 @kind int;
  #L509bae.  call temp:= `X`(v12) @signature `Luc/r;.X:(I)Luc/r;` @kind static;
  #L509bb4.  v12:= temp @kind object;
  #L509bb6.  v0:= -28I;
  #L509bba.  if v4 < v0 then goto L509bfa;
  #L509bbe.  if v4 > v9 then goto L509bfa;
  #L509bc2.  if v4 == 0 then goto L509bfa;
  #L509bc6.  v0:= 86400I;
  #L509bcc.  call temp:= `f`(v1, v0) @signature `Lxc/d;.f:(II)I` @kind static;
  #L509bd2.  v2:= temp;
  #L509bd4.  v6:= (`long`) v2 @kind i2l;
  #L509bd6.  call temp:= `l0`(v6) @signature `Luc/h;.l0:(J)Luc/h;` @kind static;
  #L509bdc.  v6:= temp @kind object;
  #L509bde.  call temp:= `d`(v1, v0) @signature `Lxc/d;.d:(II)I` @kind static;
  #L509be4.  v7:= temp;
  #L509be6.  v0:= new `zc.e`;
  #L509bea.  v2:= v0 @kind object;
  #L509bec.  v9:= v10 @kind object;
  #L509bee.  v10:= v11 @kind object;
  #L509bf0.  v11:= v12 @kind object;
  #L509bf2.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lzc/e;.<init>:(Luc/i;ILuc/c;Luc/h;ILzc/e$b;Luc/r;Luc/r;Luc/r;)V` @kind direct;
  #L509bf8.  return v0 @kind object;
  #L509bfa.  v12:= new `java.lang.IllegalArgumentException`;
  #L509bfe.  v0:= "Day of month indicator must be between -28 and 31 inclusive excluding zero" @kind object;
  #L509c02.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L509c08.  throw v12;
}
procedure `java.lang.Object` `writeReplace`(`zc.e` v2 @kind this) @signature `Lzc/e;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L509658.  v0:= new `zc.a`;
  #L50965c.  v1:= 3I;
  #L50965e.  call `<init>`(v0, v1, v2) @signature `Lzc/a;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L509664.  return v0 @kind object;
}
procedure `zc.d` `b`(`zc.e` v4 @kind this, `int` v5 ) @signature `Lzc/e;.b:(I)Lzc/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L509a04.  v0:= v4.`zc.e.p` @type ^`byte` @kind byte;
  #L509a08.  if v0 >= 0 then goto L509a4a;
  #L509a0c.  v0:= v4.`zc.e.o` @type ^`uc.i` @kind object;
  #L509a10.  v1:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L509a14.  v2:= (`long`) v5 @kind i2l;
  #L509a16.  call temp:= `P`(v1, v2) @signature `Lvc/m;.P:(J)Z` @kind virtual;
  #L509a1c.  v1:= temp;
  #L509a1e.  call temp:= `h`(v0, v1) @signature `Luc/i;.h:(Z)I` @kind virtual;
  #L509a24.  v1:= temp;
  #L509a26.  v1:= v1 + 1;
  #L509a2a.  v2:= v4.`zc.e.p` @type ^`byte` @kind byte;
  #L509a2e.  v1:= v1 + v2 @kind int;
  #L509a30.  call temp:= `D0`(v5, v0, v1) @signature `Luc/f;.D0:(ILuc/i;I)Luc/f;` @kind static;
  #L509a36.  v5:= temp @kind object;
  #L509a38.  v0:= v4.`zc.e.q` @type ^`uc.c` @kind object;
  #L509a3c.  if v0 == 0 then goto L509a6e;
  #L509a40.  call temp:= `b`(v0) @signature `Lyc/g;.b:(Luc/c;)Lyc/f;` @kind static;
  #L509a46.  v0:= temp @kind object;
  #L509a48.  goto L509a66;
  #L509a4a.  v1:= v4.`zc.e.o` @type ^`uc.i` @kind object;
  #L509a4e.  call temp:= `D0`(v5, v1, v0) @signature `Luc/f;.D0:(ILuc/i;I)Luc/f;` @kind static;
  #L509a54.  v5:= temp @kind object;
  #L509a56.  v0:= v4.`zc.e.q` @type ^`uc.c` @kind object;
  #L509a5a.  if v0 == 0 then goto L509a6e;
  #L509a5e.  call temp:= `a`(v0) @signature `Lyc/g;.a:(Luc/c;)Lyc/f;` @kind static;
  #L509a64.  v0:= temp @kind object;
  #L509a66.  call temp:= `O0`(v5, v0) @signature `Luc/f;.O0:(Lyc/f;)Luc/f;` @kind virtual;
  #L509a6c.  v5:= temp @kind object;
  #L509a6e.  v0:= v4.`zc.e.s` @type ^`int`;
  #L509a72.  v0:= (`long`) v0 @kind i2l;
  #L509a74.  call temp:= `I0`(v5, v0) @signature `Luc/f;.I0:(J)Luc/f;` @kind virtual;
  #L509a7a.  v5:= temp @kind object;
  #L509a7c.  v0:= v4.`zc.e.r` @type ^`uc.h` @kind object;
  #L509a80.  call temp:= `z0`(v5, v0) @signature `Luc/g;.z0:(Luc/f;Luc/h;)Luc/g;` @kind static;
  #L509a86.  v5:= temp @kind object;
  #L509a88.  v0:= v4.`zc.e.t` @type ^`zc.e$b` @kind object;
  #L509a8c.  v1:= v4.`zc.e.u` @type ^`uc.r` @kind object;
  #L509a90.  v2:= v4.`zc.e.v` @type ^`uc.r` @kind object;
  #L509a94.  call temp:= `c`(v0, v5, v1, v2) @signature `Lzc/e$b;.c:(Luc/g;Luc/r;Luc/r;)Luc/g;` @kind virtual;
  #L509a9a.  v5:= temp @kind object;
  #L509a9c.  v0:= new `zc.d`;
  #L509aa0.  v1:= v4.`zc.e.v` @type ^`uc.r` @kind object;
  #L509aa4.  v2:= v4.`zc.e.w` @type ^`uc.r` @kind object;
  #L509aa8.  call `<init>`(v0, v5, v1, v2) @signature `Lzc/d;.<init>:(Luc/g;Luc/r;Luc/r;)V` @kind direct;
  #L509aae.  return v0 @kind object;
}
procedure `void` `d`(`zc.e` v12 @kind this, `java.io.DataOutput` v13 @kind object) @signature `Lzc/e;.d:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L509890.  v0:= v12.`zc.e.r` @type ^`uc.h` @kind object;
  #L509894.  call temp:= `u0`(v0) @signature `Luc/h;.u0:()I` @kind virtual;
  #L50989a.  v0:= temp;
  #L50989c.  v1:= v12.`zc.e.s` @type ^`int`;
  #L5098a0.  v2:= 86400I;
  #L5098a6.  v1:= v1 * v2 @kind int;
  #L5098aa.  v0:= v0 + v1 @kind int;
  #L5098ac.  v1:= v12.`zc.e.u` @type ^`uc.r` @kind object;
  #L5098b0.  call temp:= `S`(v1) @signature `Luc/r;.S:()I` @kind virtual;
  #L5098b6.  v1:= temp;
  #L5098b8.  v3:= v12.`zc.e.v` @type ^`uc.r` @kind object;
  #L5098bc.  call temp:= `S`(v3) @signature `Luc/r;.S:()I` @kind virtual;
  #L5098c2.  v3:= temp;
  #L5098c4.  v3:= v3 - v1 @kind int;
  #L5098c6.  v4:= v12.`zc.e.w` @type ^`uc.r` @kind object;
  #L5098ca.  call temp:= `S`(v4) @signature `Luc/r;.S:()I` @kind virtual;
  #L5098d0.  v4:= temp;
  #L5098d2.  v4:= v4 - v1 @kind int;
  #L5098d4.  v5:= v0 %% 3600;
  #L5098d8.  v6:= 31I;
  #L5098dc.  if v5 != 0 then goto L5098fc;
  #L5098e0.  if v0 > v2 then goto L5098fc;
  #L5098e4.  if v0 != v2 then goto L5098ee;
  #L5098e8.  v2:= 24I;
  #L5098ec.  goto L509900;
  #L5098ee.  v2:= v12.`zc.e.r` @type ^`uc.h` @kind object;
  #L5098f2.  call temp:= `c0`(v2) @signature `Luc/h;.c0:()I` @kind virtual;
  #L5098f8.  v2:= temp;
  #L5098fa.  goto L509900;
  #L5098fc.  v2:= 31I;
  #L509900.  v5:= v1 %% 900;
  #L509904.  v7:= 255I;
  #L509908.  if v5 != 0 then goto L509916;
  #L50990c.  v5:= v1 / 900;
  #L509910.  v5:= v5 + 128;
  #L509914.  goto L50991a;
  #L509916.  v5:= 255I;
  #L50991a.  v8:= 3600I;
  #L50991e.  v9:= 3I;
  #L509920.  v10:= 1800I;
  #L509924.  if v3 == 0 then goto L509936;
  #L509928.  if v3 == v10 then goto L509936;
  #L50992c.  if v3 != v8 then goto L509932;
  #L509930.  goto L509936;
  #L509932.  v3:= 3I;
  #L509934.  goto L509938;
  #L509936.  v3:= v3 / v10 @kind int;
  #L509938.  if v4 == 0 then goto L50994a;
  #L50993c.  if v4 == v10 then goto L50994a;
  #L509940.  if v4 != v8 then goto L509946;
  #L509944.  goto L50994a;
  #L509946.  v4:= 3I;
  #L509948.  goto L50994c;
  #L50994a.  v4:= v4 / v10 @kind int;
  #L50994c.  v8:= v12.`zc.e.q` @type ^`uc.c` @kind object;
  #L509950.  if v8 != 0 then goto L509958;
  #L509954.  v8:= 0I;
  #L509956.  goto L509960;
  #L509958.  call temp:= `getValue`(v8) @signature `Luc/c;.getValue:()I` @kind virtual;
  #L50995e.  v8:= temp;
  #L509960.  v10:= v12.`zc.e.o` @type ^`uc.i` @kind object;
  #L509964.  call temp:= `getValue`(v10) @signature `Luc/i;.getValue:()I` @kind virtual;
  #L50996a.  v10:= temp;
  #L50996c.  v10:= v10 ^< 28;
  #L509970.  v11:= v12.`zc.e.p` @type ^`byte` @kind byte;
  #L509974.  v11:= v11 + 32;
  #L509978.  v11:= v11 ^< 22;
  #L50997c.  v10:= v10 + v11 @kind int;
  #L50997e.  v8:= v8 ^< 19;
  #L509982.  v10:= v10 + v8 @kind int;
  #L509984.  v8:= v2 ^< 14;
  #L509988.  v10:= v10 + v8 @kind int;
  #L50998a.  v8:= v12.`zc.e.t` @type ^`zc.e$b` @kind object;
  #L50998e.  call temp:= `ordinal`(v8) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L509994.  v8:= temp;
  #L509996.  v8:= v8 ^< 12;
  #L50999a.  v10:= v10 + v8 @kind int;
  #L50999c.  v8:= v5 ^< 4;
  #L5099a0.  v10:= v10 + v8 @kind int;
  #L5099a2.  v8:= v3 ^< 2;
  #L5099a6.  v10:= v10 + v8 @kind int;
  #L5099a8.  v10:= v10 + v4 @kind int;
  #L5099aa.  call `writeInt`(v13, v10) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L5099b0.  if v2 != v6 then goto L5099ba;
  #L5099b4.  call `writeInt`(v13, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L5099ba.  if v5 != v7 then goto L5099c4;
  #L5099be.  call `writeInt`(v13, v1) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L5099c4.  if v3 != v9 then goto L5099da;
  #L5099c8.  v0:= v12.`zc.e.v` @type ^`uc.r` @kind object;
  #L5099cc.  call temp:= `S`(v0) @signature `Luc/r;.S:()I` @kind virtual;
  #L5099d2.  v0:= temp;
  #L5099d4.  call `writeInt`(v13, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L5099da.  if v4 != v9 then goto L5099f0;
  #L5099de.  v0:= v12.`zc.e.w` @type ^`uc.r` @kind object;
  #L5099e2.  call temp:= `S`(v0) @signature `Luc/r;.S:()I` @kind virtual;
  #L5099e8.  v0:= temp;
  #L5099ea.  call `writeInt`(v13, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L5099f0.  return @kind void;
}
procedure `boolean` `equals`(`zc.e` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lzc/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L509500.  v0:= 1I;
  #L509502.  if v5 != v4 then goto L509508;
  #L509506.  return v0;
  #L509508.  v1:= instanceof @variable v5 @type ^`zc.e` @kind boolean;
  #L50950c.  v2:= 0I;
  #L50950e.  if v1 == 0 then goto L5095a8;
  #L509512.  v5:= (`zc.e`) v5 @kind object;
  #L509516.  v1:= v4.`zc.e.o` @type ^`uc.i` @kind object;
  #L50951a.  v3:= v5.`zc.e.o` @type ^`uc.i` @kind object;
  #L50951e.  if v1 != v3 then goto L5095a4;
  #L509522.  v1:= v4.`zc.e.p` @type ^`byte` @kind byte;
  #L509526.  v3:= v5.`zc.e.p` @type ^`byte` @kind byte;
  #L50952a.  if v1 != v3 then goto L5095a4;
  #L50952e.  v1:= v4.`zc.e.q` @type ^`uc.c` @kind object;
  #L509532.  v3:= v5.`zc.e.q` @type ^`uc.c` @kind object;
  #L509536.  if v1 != v3 then goto L5095a4;
  #L50953a.  v1:= v4.`zc.e.t` @type ^`zc.e$b` @kind object;
  #L50953e.  v3:= v5.`zc.e.t` @type ^`zc.e$b` @kind object;
  #L509542.  if v1 != v3 then goto L5095a4;
  #L509546.  v1:= v4.`zc.e.s` @type ^`int`;
  #L50954a.  v3:= v5.`zc.e.s` @type ^`int`;
  #L50954e.  if v1 != v3 then goto L5095a4;
  #L509552.  v1:= v4.`zc.e.r` @type ^`uc.h` @kind object;
  #L509556.  v3:= v5.`zc.e.r` @type ^`uc.h` @kind object;
  #L50955a.  call temp:= `equals`(v1, v3) @signature `Luc/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L509560.  v1:= temp;
  #L509562.  if v1 == 0 then goto L5095a4;
  #L509566.  v1:= v4.`zc.e.u` @type ^`uc.r` @kind object;
  #L50956a.  v3:= v5.`zc.e.u` @type ^`uc.r` @kind object;
  #L50956e.  call temp:= `equals`(v1, v3) @signature `Luc/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L509574.  v1:= temp;
  #L509576.  if v1 == 0 then goto L5095a4;
  #L50957a.  v1:= v4.`zc.e.v` @type ^`uc.r` @kind object;
  #L50957e.  v3:= v5.`zc.e.v` @type ^`uc.r` @kind object;
  #L509582.  call temp:= `equals`(v1, v3) @signature `Luc/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L509588.  v1:= temp;
  #L50958a.  if v1 == 0 then goto L5095a4;
  #L50958e.  v1:= v4.`zc.e.w` @type ^`uc.r` @kind object;
  #L509592.  v5:= v5.`zc.e.w` @type ^`uc.r` @kind object;
  #L509596.  call temp:= `equals`(v1, v5) @signature `Luc/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L50959c.  v5:= temp;
  #L50959e.  if v5 == 0 then goto L5095a4;
  #L5095a2.  goto L5095a6;
  #L5095a4.  v0:= 0I;
  #L5095a6.  return v0;
  #L5095a8.  return v2;
}
procedure `int` `hashCode`(`zc.e` v2 @kind this) @signature `Lzc/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5095bc.  v0:= v2.`zc.e.r` @type ^`uc.h` @kind object;
  #L5095c0.  call temp:= `u0`(v0) @signature `Luc/h;.u0:()I` @kind virtual;
  #L5095c6.  v0:= temp;
  #L5095c8.  v1:= v2.`zc.e.s` @type ^`int`;
  #L5095cc.  v0:= v0 + v1 @kind int;
  #L5095ce.  v0:= v0 ^< 15;
  #L5095d2.  v1:= v2.`zc.e.o` @type ^`uc.i` @kind object;
  #L5095d6.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L5095dc.  v1:= temp;
  #L5095de.  v1:= v1 ^< 11;
  #L5095e2.  v0:= v0 + v1 @kind int;
  #L5095e4.  v1:= v2.`zc.e.p` @type ^`byte` @kind byte;
  #L5095e8.  v1:= v1 + 32;
  #L5095ec.  v1:= v1 ^< 5;
  #L5095f0.  v0:= v0 + v1 @kind int;
  #L5095f2.  v1:= v2.`zc.e.q` @type ^`uc.c` @kind object;
  #L5095f6.  if v1 != 0 then goto L5095fe;
  #L5095fa.  v1:= 7I;
  #L5095fc.  goto L509606;
  #L5095fe.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L509604.  v1:= temp;
  #L509606.  v1:= v1 ^< 2;
  #L50960a.  v0:= v0 + v1 @kind int;
  #L50960c.  v1:= v2.`zc.e.t` @type ^`zc.e$b` @kind object;
  #L509610.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L509616.  v1:= temp;
  #L509618.  v0:= v0 + v1 @kind int;
  #L50961a.  v1:= v2.`zc.e.u` @type ^`uc.r` @kind object;
  #L50961e.  call temp:= `hashCode`(v1) @signature `Luc/r;.hashCode:()I` @kind virtual;
  #L509624.  v1:= temp;
  #L509626.  v0:= v0 ^~ v1 @kind int;
  #L509628.  v1:= v2.`zc.e.v` @type ^`uc.r` @kind object;
  #L50962c.  call temp:= `hashCode`(v1) @signature `Luc/r;.hashCode:()I` @kind virtual;
  #L509632.  v1:= temp;
  #L509634.  v0:= v0 ^~ v1 @kind int;
  #L509636.  v1:= v2.`zc.e.w` @type ^`uc.r` @kind object;
  #L50963a.  call temp:= `hashCode`(v1) @signature `Luc/r;.hashCode:()I` @kind virtual;
  #L509640.  v1:= temp;
  #L509642.  v0:= v0 ^~ v1 @kind int;
  #L509644.  return v0;
}
procedure `java.lang.String` `toString`(`zc.e` v7 @kind this) @signature `Lzc/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L509678.  v0:= new `java.lang.StringBuilder`;
  #L50967c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L509682.  v1:= "TransitionRule[" @kind object;
  #L509686.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50968c.  v1:= v7.`zc.e.v` @type ^`uc.r` @kind object;
  #L509690.  v2:= v7.`zc.e.w` @type ^`uc.r` @kind object;
  #L509694.  call temp:= `x`(v1, v2) @signature `Luc/r;.x:(Luc/r;)I` @kind virtual;
  #L50969a.  v1:= temp;
  #L50969c.  if v1 <= 0 then goto L5096a6;
  #L5096a0.  v1:= "Gap " @kind object;
  #L5096a4.  goto L5096aa;
  #L5096a6.  v1:= "Overlap " @kind object;
  #L5096aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5096b0.  v1:= v7.`zc.e.v` @type ^`uc.r` @kind object;
  #L5096b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5096ba.  v1:= " to " @kind object;
  #L5096be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5096c4.  v1:= v7.`zc.e.w` @type ^`uc.r` @kind object;
  #L5096c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5096ce.  v1:= ", " @kind object;
  #L5096d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5096d8.  v1:= v7.`zc.e.q` @type ^`uc.c` @kind object;
  #L5096dc.  v2:= 32I;
  #L5096e0.  if v1 == 0 then goto L509748;
  #L5096e4.  v3:= v7.`zc.e.p` @type ^`byte` @kind byte;
  #L5096e8.  v4:= -1I;
  #L5096ea.  call temp:= `name`(v1) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L5096f0.  v1:= temp @kind object;
  #L5096f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5096f8.  if v3 != v4 then goto L50971a;
  #L5096fc.  v1:= " on or before last day of " @kind object;
  #L509700.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L509706.  v1:= v7.`zc.e.o` @type ^`uc.i` @kind object;
  #L50970a.  call temp:= `name`(v1) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L509710.  v1:= temp @kind object;
  #L509712.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L509718.  goto L50976a;
  #L50971a.  if v3 >= 0 then goto L50973e;
  #L50971e.  v1:= " on or before last day minus " @kind object;
  #L509722.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L509728.  v1:= v7.`zc.e.p` @type ^`byte` @kind byte;
  #L50972c.  v1:= -v1 @kind int;
  #L50972e.  v1:= v1 + -1;
  #L509732.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L509738.  v1:= " of " @kind object;
  #L50973c.  goto L509700;
  #L50973e.  v1:= " on or after " @kind object;
  #L509742.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L509748.  v1:= v7.`zc.e.o` @type ^`uc.i` @kind object;
  #L50974c.  call temp:= `name`(v1) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L509752.  v1:= temp @kind object;
  #L509754.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50975a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L509760.  v1:= v7.`zc.e.p` @type ^`byte` @kind byte;
  #L509764.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L50976a.  v1:= " at " @kind object;
  #L50976e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L509774.  v1:= v7.`zc.e.s` @type ^`int`;
  #L509778.  if v1 != 0 then goto L509788;
  #L50977c.  v1:= v7.`zc.e.r` @type ^`uc.h` @kind object;
  #L509780.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L509786.  goto L5097d6;
  #L509788.  v1:= v7.`zc.e.r` @type ^`uc.h` @kind object;
  #L50978c.  call temp:= `u0`(v1) @signature `Luc/h;.u0:()I` @kind virtual;
  #L509792.  v1:= temp;
  #L509794.  v2:= 60I;
  #L509798.  v1:= v1 / v2 @kind int;
  #L50979a.  v3:= v7.`zc.e.s` @type ^`int`;
  #L50979e.  v3:= v3 * 24;
  #L5097a2.  v3:= v3 * 60;
  #L5097a6.  v1:= v1 + v3 @kind int;
  #L5097a8.  v3:= (`long`) v1 @kind i2l;
  #L5097aa.  v5:= 60L;
  #L5097ae.  call temp:= `e`(v3, v5) @signature `Lxc/d;.e:(JJ)J` @kind static;
  #L5097b4.  v5:= temp @kind wide;
  #L5097b6.  call `a`(v7, v0, v5) @signature `Lzc/e;.a:(Ljava/lang/StringBuilder;J)V` @kind direct;
  #L5097bc.  v1:= 58I;
  #L5097c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L5097c6.  call temp:= `g`(v3, v2) @signature `Lxc/d;.g:(JI)I` @kind static;
  #L5097cc.  v1:= temp;
  #L5097ce.  v1:= (`long`) v1 @kind i2l;
  #L5097d0.  call `a`(v7, v0, v1) @signature `Lzc/e;.a:(Ljava/lang/StringBuilder;J)V` @kind direct;
  #L5097d6.  v1:= " " @kind object;
  #L5097da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5097e0.  v1:= v7.`zc.e.t` @type ^`zc.e$b` @kind object;
  #L5097e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5097ea.  v1:= ", standard offset " @kind object;
  #L5097ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5097f4.  v1:= v7.`zc.e.u` @type ^`uc.r` @kind object;
  #L5097f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5097fe.  v1:= 93I;
  #L509802.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L509808.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L50980e.  v0:= temp @kind object;
  #L509810.  return v0 @kind object;
}
