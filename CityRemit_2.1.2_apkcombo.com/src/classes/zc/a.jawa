record `zc.a` @kind class @AccessFlag FINAL extends `java.io.Externalizable` @kind interface {
  `byte` `zc.a.o` @AccessFlag PRIVATE;
  `java.lang.Object` `zc.a.p` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`zc.a` v0 @kind this) @signature `Lzc/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L5085c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5085ca.  return @kind void;
}
procedure `void` `<init>`(`zc.a` v0 @kind this, `byte` v1 , `java.lang.Object` v2 @kind object) @signature `Lzc/a;.<init>:(BLjava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5085dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5085e2.  v0.`zc.a.o` @type ^`byte` := v1 @kind byte;
  #L5085e6.  v0.`zc.a.p` @type ^`java.lang.Object` := v2 @kind object;
  #L5085ea.  return @kind void;
}
procedure `java.lang.Object` `a`(`java.io.DataInput` v1 @kind object) @signature `Lzc/a;.a:(Ljava/io/DataInput;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;

  #L508494.  call temp:= `readByte`(v1) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L50849a.  v0:= temp;
  #L50849c.  call temp:= `c`(v0, v1) @signature `Lzc/a;.c:(BLjava/io/DataInput;)Ljava/lang/Object;` @kind static;
  #L5084a2.  v1:= temp @kind object;
  #L5084a4.  return v1 @kind object;
}
procedure `long` `b`(`java.io.DataInput` v4 @kind object) @signature `Lzc/a;.b:(Ljava/io/DataInput;)J` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L508520.  call temp:= `readByte`(v4) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L508526.  v0:= temp;
  #L508528.  v1:= 255I;
  #L50852c.  v0:= v0 ^& v1 @kind int;
  #L50852e.  if v0 != v1 then goto L50853c;
  #L508532.  call temp:= `readLong`(v4) @signature `Ljava/io/DataInput;.readLong:()J` @kind interface;
  #L508538.  v0:= temp @kind wide;
  #L50853a.  return v0 @kind wide;
  #L50853c.  call temp:= `readByte`(v4) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L508542.  v2:= temp;
  #L508544.  v2:= v2 ^& v1 @kind int;
  #L508546.  call temp:= `readByte`(v4) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L50854c.  v4:= temp;
  #L50854e.  v4:= v4 ^& v1 @kind int;
  #L508550.  v0:= v0 ^< 16;
  #L508554.  v1:= v2 ^< 8;
  #L508558.  v0:= v0 + v1 @kind int;
  #L50855a.  v0:= v0 + v4 @kind int;
  #L50855c.  v0:= (`long`) v0 @kind i2l;
  #L50855e.  v2:= 900L;
  #L508562.  v0:= v0 * v2 @kind long;
  #L508566.  v2:= 4575744000L;
  #L508570.  v0:= v0 - v2 @kind long;
  #L508572.  return v0 @kind wide;
}
procedure `java.lang.Object` `c`(`byte` v1 , `java.io.DataInput` v2 @kind object) @signature `Lzc/a;.c:(BLjava/io/DataInput;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L5084b8.  v0:= 1I;
  #L5084ba.  if v1 == v0 then goto L5084ee;
  #L5084be.  v0:= 2I;
  #L5084c0.  if v1 == v0 then goto L5084e4;
  #L5084c4.  v0:= 3I;
  #L5084c6.  if v1 != v0 then goto L5084d4;
  #L5084ca.  call temp:= `c`(v2) @signature `Lzc/e;.c:(Ljava/io/DataInput;)Lzc/e;` @kind static;
  #L5084d0.  v1:= temp @kind object;
  #L5084d2.  return v1 @kind object;
  #L5084d4.  v1:= new `java.io.StreamCorruptedException`;
  #L5084d8.  v2:= "Unknown serialized type" @kind object;
  #L5084dc.  call `<init>`(v1, v2) @signature `Ljava/io/StreamCorruptedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5084e2.  throw v1;
  #L5084e4.  call temp:= `t`(v2) @signature `Lzc/d;.t:(Ljava/io/DataInput;)Lzc/d;` @kind static;
  #L5084ea.  v1:= temp @kind object;
  #L5084ec.  return v1 @kind object;
  #L5084ee.  call temp:= `k`(v2) @signature `Lzc/b;.k:(Ljava/io/DataInput;)Lzc/b;` @kind static;
  #L5084f4.  v1:= temp @kind object;
  #L5084f6.  return v1 @kind object;
}
procedure `uc.r` `d`(`java.io.DataInput` v2 @kind object) @signature `Lzc/a;.d:(Ljava/io/DataInput;)Luc/r;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L508584.  call temp:= `readByte`(v2) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L50858a.  v0:= temp;
  #L50858c.  v1:= 127I;
  #L508590.  if v0 != v1 then goto L5085a6;
  #L508594.  call temp:= `readInt`(v2) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L50859a.  v2:= temp;
  #L50859c.  call temp:= `X`(v2) @signature `Luc/r;.X:(I)Luc/r;` @kind static;
  #L5085a2.  v2:= temp @kind object;
  #L5085a4.  goto L5085b2;
  #L5085a6.  v0:= v0 * 900;
  #L5085aa.  call temp:= `X`(v0) @signature `Luc/r;.X:(I)Luc/r;` @kind static;
  #L5085b0.  v2:= temp @kind object;
  #L5085b2.  return v2 @kind object;
}
procedure `void` `e`(`long` v8 , `java.io.DataOutput` v10 @kind object) @signature `Lzc/a;.e:(JLjava/io/DataOutput;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L508628.  v0:= 255I;
  #L50862c.  v1:= -4575744000L;
  #L508636.  v3:= lcmp(v8, v1);
  #L50863a.  if v3 < 0 then goto L508698;
  #L50863e.  v1:= 10413792000L;
  #L508648.  v3:= lcmp(v8, v1);
  #L50864c.  if v3 >= 0 then goto L508698;
  #L508650.  v1:= 900L;
  #L508654.  v3:= v8 %% v1 @kind long;
  #L508658.  v5:= 0L;
  #L50865c.  v7:= lcmp(v3, v5);
  #L508660.  if v7 != 0 then goto L508698;
  #L508664.  v3:= 4575744000L;
  #L50866e.  v8:= v8 + v3 @kind long;
  #L508670.  v8:= v8 / v1 @kind long;
  #L508672.  v9:= (`int`) v8 @kind l2i;
  #L508674.  v8:= v9 ^>> 16;
  #L508678.  v8:= v8 ^& v0 @kind int;
  #L50867a.  call `writeByte`(v10, v8) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L508680.  v8:= v9 ^>> 8;
  #L508684.  v8:= v8 ^& v0 @kind int;
  #L508686.  call `writeByte`(v10, v8) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L50868c.  v8:= v9 ^& 255;
  #L508690.  call `writeByte`(v10, v8) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L508696.  goto L5086a4;
  #L508698.  call `writeByte`(v10, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L50869e.  call `writeLong`(v10, v8) @signature `Ljava/io/DataOutput;.writeLong:(J)V` @kind interface;
  #L5086a4.  return @kind void;
}
procedure `void` `f`(`byte` v1 , `java.lang.Object` v2 @kind object, `java.io.DataOutput` v3 @kind object) @signature `Lzc/a;.f:(BLjava/lang/Object;Ljava/io/DataOutput;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L5086d8.  call `writeByte`(v3, v1) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L5086de.  v0:= 1I;
  #L5086e0.  if v1 == v0 then goto L508718;
  #L5086e4.  v0:= 2I;
  #L5086e6.  if v1 == v0 then goto L50870c;
  #L5086ea.  v0:= 3I;
  #L5086ec.  if v1 != v0 then goto L5086fc;
  #L5086f0.  v2:= (`zc.e`) v2 @kind object;
  #L5086f4.  call `d`(v2, v3) @signature `Lzc/e;.d:(Ljava/io/DataOutput;)V` @kind virtual;
  #L5086fa.  goto L508722;
  #L5086fc.  v1:= new `java.io.InvalidClassException`;
  #L508700.  v2:= "Unknown serialized type" @kind object;
  #L508704.  call `<init>`(v1, v2) @signature `Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50870a.  throw v1;
  #L50870c.  v2:= (`zc.d`) v2 @kind object;
  #L508710.  call `x`(v2, v3) @signature `Lzc/d;.x:(Ljava/io/DataOutput;)V` @kind virtual;
  #L508716.  goto L508722;
  #L508718.  v2:= (`zc.b`) v2 @kind object;
  #L50871c.  call `l`(v2, v3) @signature `Lzc/b;.l:(Ljava/io/DataOutput;)V` @kind virtual;
  #L508722.  return @kind void;
}
procedure `void` `g`(`uc.r` v2 @kind object, `java.io.DataOutput` v3 @kind object) @signature `Lzc/a;.g:(Luc/r;Ljava/io/DataOutput;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L508734.  call temp:= `S`(v2) @signature `Luc/r;.S:()I` @kind virtual;
  #L50873a.  v2:= temp;
  #L50873c.  v0:= v2 %% 900;
  #L508740.  v1:= 127I;
  #L508744.  if v0 != 0 then goto L50874e;
  #L508748.  v0:= v2 / 900;
  #L50874c.  goto L508752;
  #L50874e.  v0:= 127I;
  #L508752.  call `writeByte`(v3, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L508758.  if v0 != v1 then goto L508762;
  #L50875c.  call `writeInt`(v3, v2) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L508762.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`zc.a` v1 @kind this) @signature `Lzc/a;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L508508.  v0:= v1.`zc.a.p` @type ^`java.lang.Object` @kind object;
  #L50850c.  return v0 @kind object;
}
procedure `void` `readExternal`(`zc.a` v1 @kind this, `java.io.ObjectInput` v2 @kind object) @signature `Lzc/a;.readExternal:(Ljava/io/ObjectInput;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5085fc.  call temp:= `readByte`(v2) @signature `Ljava/io/ObjectInput;.readByte:()B` @kind interface;
  #L508602.  v0:= temp;
  #L508604.  v1.`zc.a.o` @type ^`byte` := v0 @kind byte;
  #L508608.  call temp:= `c`(v0, v2) @signature `Lzc/a;.c:(BLjava/io/DataInput;)Ljava/lang/Object;` @kind static;
  #L50860e.  v2:= temp @kind object;
  #L508610.  v1.`zc.a.p` @type ^`java.lang.Object` := v2 @kind object;
  #L508614.  return @kind void;
}
procedure `void` `writeExternal`(`zc.a` v2 @kind this, `java.io.ObjectOutput` v3 @kind object) @signature `Lzc/a;.writeExternal:(Ljava/io/ObjectOutput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5086b8.  v0:= v2.`zc.a.o` @type ^`byte` @kind byte;
  #L5086bc.  v1:= v2.`zc.a.p` @type ^`java.lang.Object` @kind object;
  #L5086c0.  call `f`(v0, v1, v3) @signature `Lzc/a;.f:(BLjava/lang/Object;Ljava/io/DataOutput;)V` @kind static;
  #L5086c6.  return @kind void;
}
