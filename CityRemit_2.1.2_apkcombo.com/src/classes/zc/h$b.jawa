record `zc.h$b` @kind class @AccessFlag  extends `zc.h` @kind class {
}
procedure `void` `<init>`(`zc.h$b` v0 @kind this) @signature `Lzc/h$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L50a220.  call `<init>`(v0) @signature `Lzc/h;.<init>:()V` @kind direct;
  #L50a226.  return @kind void;
}
procedure `void` `b`(`zc.h$b` v3 @kind this) @signature `Lzc/h$b;.b:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L50a238.  v0:= constclass @type ^`zc.i` @kind object;
  #L50a23c.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L50a242.  v1:= temp @kind object;
  #L50a244.  call temp:= `load`(v0, v1) @signature `Ljava/util/ServiceLoader;.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;` @kind static;
  #L50a24a.  v0:= temp @kind object;
  #L50a24c.  call temp:= `iterator`(v0) @signature `Ljava/util/ServiceLoader;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L50a252.  v0:= temp @kind object;
  #L50a254.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L50a25a.  v1:= temp;
  #L50a25c.  if v1 == 0 then goto L50a28a;
  #L50a260.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L50a266.  v1:= temp @kind object;
  #L50a268.  v1:= (`zc.i`) v1 @kind object;
  #L50a26c.  call `f`(v1) @signature `Lzc/i;.f:(Lzc/i;)V` @kind static;
  #L50a272.  goto L50a254;
  #L50a274.  v1:= Exception @type ^`java.util.ServiceConfigurationError` @kind object;
  #L50a276.  call temp:= `getCause`(v1) @signature `Ljava/util/ServiceConfigurationError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L50a27c.  v2:= temp @kind object;
  #L50a27e.  v2:= instanceof @variable v2 @type ^`java.lang.SecurityException` @kind boolean;
  #L50a282.  if v2 == 0 then goto L50a288;
  #L50a286.  goto L50a254;
  #L50a288.  throw v1;
  #L50a28a.  return @kind void;
  catch `java.util.ServiceConfigurationError` @[L50a26c..L50a272] goto L50a274;
}
