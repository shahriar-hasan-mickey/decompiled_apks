record `ec.a` @kind class @AccessFlag PUBLIC_FINAL extends `mb.g` @kind interface {
  `java.lang.Throwable` `ec.a.o` @AccessFlag PUBLIC_FINAL;
  `mb.g` `ec.a.p` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`ec.a` v0 @kind this, `java.lang.Throwable` v1 @kind object, `mb.g` v2 @kind object) @signature `Lec/a;.<init>:(Ljava/lang/Throwable;Lmb/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L302c70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L302c76.  v0.`ec.a.o` @type ^`java.lang.Throwable` := v1 @kind object;
  #L302c7a.  v0.`ec.a.p` @type ^`mb.g` := v2 @kind object;
  #L302c7e.  return @kind void;
}
procedure `mb.g` `M`(`ec.a` v1 @kind this, `mb.g$c` v2 @kind object) @signature `Lec/a;.M:(Lmb/g$c;)Lmb/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L302c10.  v0:= v1.`ec.a.p` @type ^`mb.g` @kind object;
  #L302c14.  call temp:= `M`(v0, v2) @signature `Lmb/g;.M:(Lmb/g$c;)Lmb/g;` @kind interface;
  #L302c1a.  v2:= temp @kind object;
  #L302c1c.  return v2 @kind object;
}
procedure `java.lang.Object` `S`(`ec.a` v1 @kind this, `java.lang.Object` v2 @kind object, `tb.p` v3 @kind object) @signature `Lec/a;.S:(Ljava/lang/Object;Ltb/p;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L302bf0.  v0:= v1.`ec.a.p` @type ^`mb.g` @kind object;
  #L302bf4.  call temp:= `S`(v0, v2, v3) @signature `Lmb/g;.S:(Ljava/lang/Object;Ltb/p;)Ljava/lang/Object;` @kind interface;
  #L302bfa.  v2:= temp @kind object;
  #L302bfc.  return v2 @kind object;
}
procedure `mb.g$b` `c`(`ec.a` v1 @kind this, `mb.g$c` v2 @kind object) @signature `Lec/a;.c:(Lmb/g$c;)Lmb/g$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L302c50.  v0:= v1.`ec.a.p` @type ^`mb.g` @kind object;
  #L302c54.  call temp:= `c`(v0, v2) @signature `Lmb/g;.c:(Lmb/g$c;)Lmb/g$b;` @kind interface;
  #L302c5a.  v2:= temp @kind object;
  #L302c5c.  return v2 @kind object;
}
procedure `mb.g` `s`(`ec.a` v1 @kind this, `mb.g` v2 @kind object) @signature `Lec/a;.s:(Lmb/g;)Lmb/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L302c30.  v0:= v1.`ec.a.p` @type ^`mb.g` @kind object;
  #L302c34.  call temp:= `s`(v0, v2) @signature `Lmb/g;.s:(Lmb/g;)Lmb/g;` @kind interface;
  #L302c3a.  v2:= temp @kind object;
  #L302c3c.  return v2 @kind object;
}
