record `ec.b` @kind class @AccessFlag FINAL extends `mb.d` @kind interface {
}
global `ec.b` `@@ec.b.o` @AccessFlag PUBLIC_STATIC_FINAL;
global `mb.g` `@@ec.b.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lec/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L302ca8.  v0:= new `ec.b`;
  #L302cac.  call `<init>`(v0) @signature `Lec/b;.<init>:()V` @kind direct;
  #L302cb2.  `@@ec.b.o` @type ^`ec.b` := v0 @kind object;
  #L302cb6.  v0:= `@@mb.h.o` @type ^`mb.h` @kind object;
  #L302cba.  `@@ec.b.p` @type ^`mb.g` := v0 @kind object;
  #L302cbe.  return @kind void;
}
procedure `void` `<init>`(`ec.b` v0 @kind this) @signature `Lec/b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L302cd0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L302cd6.  return @kind void;
}
procedure `mb.g` `getContext`(`ec.b` v1 @kind this) @signature `Lec/b;.getContext:()Lmb/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L302c90.  v0:= `@@ec.b.p` @type ^`mb.g` @kind object;
  #L302c94.  return v0 @kind object;
}
procedure `void` `resumeWith`(`ec.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lec/b;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L302ce8.  return @kind void;
}
