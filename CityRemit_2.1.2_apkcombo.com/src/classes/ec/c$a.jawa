record `ec.c$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.l` @kind class, `tb.p` @kind interface {
}
global `ec.c$a` `@@ec.c$a.o` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lec/c$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L302d48.  v0:= new `ec.c$a`;
  #L302d4c.  call `<init>`(v0) @signature `Lec/c$a;.<init>:()V` @kind direct;
  #L302d52.  `@@ec.c$a.o` @type ^`ec.c$a` := v0 @kind object;
  #L302d56.  return @kind void;
}
procedure `void` `<init>`(`ec.c$a` v1 @kind this) @signature `Lec/c$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L302d68.  v0:= 2I;
  #L302d6a.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/l;.<init>:(I)V` @kind direct;
  #L302d70.  return @kind void;
}
procedure `java.lang.Integer` `a`(`ec.c$a` v0 @kind this, `int` v1 , `mb.g$b` v2 @kind object) @signature `Lec/c$a;.a:(ILmb/g$b;)Ljava/lang/Integer;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L302cfc.  v1:= v1 + 1;
  #L302d00.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L302d06.  v1:= temp @kind object;
  #L302d08.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`ec.c$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lec/c$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L302d1c.  v1:= (`java.lang.Number`) v1 @kind object;
  #L302d20.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L302d26.  v1:= temp;
  #L302d28.  v2:= (`mb.g$b`) v2 @kind object;
  #L302d2c.  call temp:= `a`(v0, v1, v2) @signature `Lec/c$a;.a:(ILmb/g$b;)Ljava/lang/Integer;` @kind virtual;
  #L302d32.  v1:= temp @kind object;
  #L302d34.  return v1 @kind object;
}
