record `gb.e` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`java.lang.String` v3 @kind object) @signature `Lgb/e;.a:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L32f360.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32f366.  v0:= temp;
  #L32f368.  v1:= 124I;
  #L32f36c.  if v0 >= v1 then goto L32f372;
  #L32f370.  goto L32f39e;
  #L32f372.  v0:= new `java.lang.StringBuilder`;
  #L32f376.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32f37c.  v2:= 0I;
  #L32f37e.  call temp:= `substring`(v3, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L32f384.  v3:= temp @kind object;
  #L32f386.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f38c.  v3:= "..." @kind object;
  #L32f390.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f396.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32f39c.  v3:= temp @kind object;
  #L32f39e.  call `a`(v3) @signature `Lh0/a;.a:(Ljava/lang/String;)V` @kind static;
  #L32f3a4.  return @kind void;
}
procedure `void` `b`() @signature `Lgb/e;.b:()V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L32f3b8.  call `b`() @signature `Lh0/a;.b:()V` @kind static;
  #L32f3be.  return @kind void;
}
