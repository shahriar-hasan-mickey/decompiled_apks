record `ac.d2` @kind class @AccessFlag PUBLIC_FINAL extends `ac.a1` @kind interface, `ac.q` @kind interface {
}
global `ac.d2` `@@ac.d2.o` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lac/d2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L16b4d4.  v0:= new `ac.d2`;
  #L16b4d8.  call `<init>`(v0) @signature `Lac/d2;.<init>:()V` @kind direct;
  #L16b4de.  `@@ac.d2.o` @type ^`ac.d2` := v0 @kind object;
  #L16b4e2.  return @kind void;
}
procedure `void` `<init>`(`ac.d2` v0 @kind this) @signature `Lac/d2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L16b4f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16b4fa.  return @kind void;
}
procedure `void` `c`(`ac.d2` v0 @kind this) @signature `Lac/d2;.c:()V` @AccessFlag PUBLIC {
    temp;

  #L16b50c.  return @kind void;
}
procedure `ac.r1` `getParent`(`ac.d2` v1 @kind this) @signature `Lac/d2;.getParent:()Lac/r1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16b494.  v0:= 0I;
  #L16b496.  return v0 @kind object;
}
procedure `boolean` `i`(`ac.d2` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lac/d2;.i:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;

  #L16b4a8.  v1:= 0I;
  #L16b4aa.  return v1;
}
procedure `java.lang.String` `toString`(`ac.d2` v1 @kind this) @signature `Lac/d2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16b4bc.  v0:= "NonDisposableHandle" @kind object;
  #L16b4c0.  return v0 @kind object;
}
