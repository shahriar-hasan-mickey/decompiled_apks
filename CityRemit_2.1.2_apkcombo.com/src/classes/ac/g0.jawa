record `ac.g0` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.List` `@@ac.g0.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lac/g0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1665f0.  call temp:= `a`() @signature `Lac/f0;.a:()Ljava/util/Iterator;` @kind static;
  #L1665f6.  v0:= temp @kind object;
  #L1665f8.  call temp:= `a`(v0) @signature `Lyb/c;.a:(Ljava/util/Iterator;)Lyb/b;` @kind static;
  #L1665fe.  v0:= temp @kind object;
  #L166600.  call temp:= `e`(v0) @signature `Lyb/c;.e:(Lyb/b;)Ljava/util/List;` @kind static;
  #L166606.  v0:= temp @kind object;
  #L166608.  `@@ac.g0.a` @type ^`java.util.List` := v0 @kind object;
  #L16660c.  return @kind void;
}
procedure `void` `a`(`mb.g` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lac/g0;.a:(Lmb/g;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L166620.  v0:= `@@ac.g0.a` @type ^`java.util.List` @kind object;
  #L166624.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16662a.  v0:= temp @kind object;
  #L16662c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L166632.  v1:= temp;
  #L166634.  if v1 == 0 then goto L16666e;
  #L166638.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16663e.  v1:= temp @kind object;
  #L166640.  v1:= (`ac.e0`) v1 @kind object;
  #L166644.  call `E`(v1, v4, v5) @signature `Lac/e0;.E:(Lmb/g;Ljava/lang/Throwable;)V` @kind interface;
  #L16664a.  goto L16662c;
  #L16664c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16664e.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L166654.  v2:= temp @kind object;
  #L166656.  call temp:= `getUncaughtExceptionHandler`(v2) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L16665c.  v3:= temp @kind object;
  #L16665e.  call temp:= `b`(v5, v1) @signature `Lac/h0;.b:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L166664.  v1:= temp @kind object;
  #L166666.  call `uncaughtException`(v3, v2, v1) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L16666c.  goto L16662c;
  #L16666e.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L166674.  v0:= temp @kind object;
  #L166676.  v1:= `@@jb.m.o` @type ^`jb.m$a` @kind object;
  #L16667a.  v1:= new `ac.u0`;
  #L16667e.  call `<init>`(v1, v4) @signature `Lac/u0;.<init>:(Lmb/g;)V` @kind direct;
  #L166684.  call `a`(v5, v1) @signature `Ljb/a;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L16668a.  v4:= `@@jb.s.a` @type ^`jb.s` @kind object;
  #L16668e.  call temp:= `a`(v4) @signature `Ljb/m;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L166694.  goto L1666aa;
  #L166696.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L166698.  v1:= `@@jb.m.o` @type ^`jb.m$a` @kind object;
  #L16669c.  call temp:= `a`(v4) @signature `Ljb/n;.a:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L1666a2.  v4:= temp @kind object;
  #L1666a4.  call temp:= `a`(v4) @signature `Ljb/m;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1666aa.  call temp:= `getUncaughtExceptionHandler`(v0) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L1666b0.  v4:= temp @kind object;
  #L1666b2.  call `uncaughtException`(v4, v0, v5) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L1666b8.  return @kind void;
  catch `java.lang.Throwable` @[L166644..L16664a] goto L16664c;
  catch `java.lang.Throwable` @[L166676..L166694] goto L166696;
}
