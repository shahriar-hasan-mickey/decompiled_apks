record `ac.s1` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.CancellationException` @kind class, `ac.b0` @kind interface {
  `ac.r1` `ac.s1.o` @AccessFlag PUBLIC_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`ac.s1` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object, `ac.r1` v3 @kind object) @signature `Lac/s1;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lac/r1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L169080.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L169086.  v0.`ac.s1.o` @type ^`ac.r1` := v3 @kind object;
  #L16908a.  if v2 == 0 then goto L169094;
  #L16908e.  call temp:= `initCause`(v0, v2) @signature `Ljava/util/concurrent/CancellationException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L169094.  return @kind void;
}
procedure `java.lang.Throwable` `a`(`ac.s1` v1 @kind this) @signature `Lac/s1;.a:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L169030.  call temp:= `b`(v1) @signature `Lac/s1;.b:()Lac/s1;` @kind virtual;
  #L169036.  v0:= temp @kind object;
  #L169038.  return v0 @kind object;
}
procedure `ac.s1` `b`(`ac.s1` v3 @kind this) @signature `Lac/s1;.b:()Lac/s1;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L168ed8.  call temp:= `c`() @signature `Lac/p0;.c:()Z` @kind static;
  #L168ede.  v0:= temp;
  #L168ee0.  if v0 == 0 then goto L168f02;
  #L168ee4.  v0:= new `ac.s1`;
  #L168ee8.  call temp:= `getMessage`(v3) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L168eee.  v1:= temp @kind object;
  #L168ef0.  call `b`(v1) @signature `Lkotlin/jvm/internal/k;.b:(Ljava/lang/Object;)V` @kind static;
  #L168ef6.  v2:= v3.`ac.s1.o` @type ^`ac.r1` @kind object;
  #L168efa.  call `<init>`(v0, v1, v3, v2) @signature `Lac/s1;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lac/r1;)V` @kind direct;
  #L168f00.  return v0 @kind object;
  #L168f02.  v0:= 0I;
  #L168f04.  return v0 @kind object;
}
procedure `boolean` `equals`(`ac.s1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lac/s1;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L168f18.  if v3 == v2 then goto L168f7a;
  #L168f1c.  v0:= instanceof @variable v3 @type ^`ac.s1` @kind boolean;
  #L168f20.  if v0 == 0 then goto L168f76;
  #L168f24.  v3:= (`ac.s1`) v3 @kind object;
  #L168f28.  call temp:= `getMessage`(v3) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L168f2e.  v0:= temp @kind object;
  #L168f30.  call temp:= `getMessage`(v2) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L168f36.  v1:= temp @kind object;
  #L168f38.  call temp:= `a`(v0, v1) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L168f3e.  v0:= temp;
  #L168f40.  if v0 == 0 then goto L168f76;
  #L168f44.  v0:= v3.`ac.s1.o` @type ^`ac.r1` @kind object;
  #L168f48.  v1:= v2.`ac.s1.o` @type ^`ac.r1` @kind object;
  #L168f4c.  call temp:= `a`(v0, v1) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L168f52.  v0:= temp;
  #L168f54.  if v0 == 0 then goto L168f76;
  #L168f58.  call temp:= `getCause`(v3) @signature `Ljava/util/concurrent/CancellationException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L168f5e.  v3:= temp @kind object;
  #L168f60.  call temp:= `getCause`(v2) @signature `Ljava/util/concurrent/CancellationException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L168f66.  v0:= temp @kind object;
  #L168f68.  call temp:= `a`(v3, v0) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L168f6e.  v3:= temp;
  #L168f70.  if v3 == 0 then goto L168f76;
  #L168f74.  goto L168f7a;
  #L168f76.  v3:= 0I;
  #L168f78.  goto L168f7c;
  #L168f7a.  v3:= 1I;
  #L168f7c.  return v3;
}
procedure `java.lang.Throwable` `fillInStackTrace`(`ac.s1` v1 @kind this) @signature `Lac/s1;.fillInStackTrace:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16904c.  call temp:= `c`() @signature `Lac/p0;.c:()Z` @kind static;
  #L169052.  v0:= temp;
  #L169054.  if v0 == 0 then goto L169062;
  #L169058.  call temp:= `fillInStackTrace`(v1) @signature `Ljava/util/concurrent/CancellationException;.fillInStackTrace:()Ljava/lang/Throwable;` @kind super;
  #L16905e.  v0:= temp @kind object;
  #L169060.  return v0 @kind object;
  #L169062.  v0:= 0I;
  #L169064.  v0:= new `java.lang.StackTraceElement`[v0];
  #L169068.  call `setStackTrace`(v1, v0) @signature `Ljava/util/concurrent/CancellationException;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L16906e.  return v1 @kind object;
}
procedure `int` `hashCode`(`ac.s1` v2 @kind this) @signature `Lac/s1;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L168f90.  call temp:= `getMessage`(v2) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L168f96.  v0:= temp @kind object;
  #L168f98.  call `b`(v0) @signature `Lkotlin/jvm/internal/k;.b:(Ljava/lang/Object;)V` @kind static;
  #L168f9e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L168fa4.  v0:= temp;
  #L168fa6.  v0:= v0 * 31;
  #L168faa.  v1:= v2.`ac.s1.o` @type ^`ac.r1` @kind object;
  #L168fae.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L168fb4.  v1:= temp;
  #L168fb6.  v0:= v0 + v1 @kind int;
  #L168fb8.  v0:= v0 * 31;
  #L168fbc.  call temp:= `getCause`(v2) @signature `Ljava/util/concurrent/CancellationException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L168fc2.  v1:= temp @kind object;
  #L168fc4.  if v1 == 0 then goto L168fd2;
  #L168fc8.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Throwable;.hashCode:()I` @kind virtual;
  #L168fce.  v1:= temp;
  #L168fd0.  goto L168fd4;
  #L168fd2.  v1:= 0I;
  #L168fd4.  v0:= v0 + v1 @kind int;
  #L168fd6.  return v0;
}
procedure `java.lang.String` `toString`(`ac.s1` v2 @kind this) @signature `Lac/s1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L168fe8.  v0:= new `java.lang.StringBuilder`;
  #L168fec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L168ff2.  call temp:= `toString`(v2) @signature `Ljava/util/concurrent/CancellationException;.toString:()Ljava/lang/String;` @kind super;
  #L168ff8.  v1:= temp @kind object;
  #L168ffa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L169000.  v1:= "; job=" @kind object;
  #L169004.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16900a.  v1:= v2.`ac.s1.o` @type ^`ac.r1` @kind object;
  #L16900e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L169014.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16901a.  v0:= temp @kind object;
  #L16901c.  return v0 @kind object;
}
