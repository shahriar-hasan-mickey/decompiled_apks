record `ac.r0` @kind class @AccessFlag PUBLIC_FINAL extends `ac.d1` @kind class, `java.lang.Runnable` @kind interface {
}
global `java.lang.Thread` `@@ac.r0._thread` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `int` `@@ac.r0.debugStatus` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `ac.r0` `@@ac.r0.v` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@ac.r0.w` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lac/r0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16719c.  v0:= new `ac.r0`;
  #L1671a0.  call `<init>`(v0) @signature `Lac/r0;.<init>:()V` @kind direct;
  #L1671a6.  `@@ac.r0.v` @type ^`ac.r0` := v0 @kind object;
  #L1671aa.  v1:= 0I;
  #L1671ac.  v2:= 1I;
  #L1671ae.  v3:= 0I;
  #L1671b0.  call `i0`(v0, v1, v2, v3) @signature `Lac/c1;.i0:(Lac/c1;ZILjava/lang/Object;)V` @kind static;
  #L1671b6.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1671ba.  v1:= 1000L;
  #L1671be.  v3:= "kotlinx.coroutines.DefaultExecutor.keepAlive" @kind object;
  #L1671c2.  call temp:= `getLong`(v3, v1) @signature `Ljava/lang/Long;.getLong:(Ljava/lang/String;J)Ljava/lang/Long;` @kind static;
  #L1671c8.  v1:= temp @kind object;
  #L1671ca.  goto L1671d4;
  #L1671cc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1671d2.  v1:= temp @kind object;
  #L1671d4.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1671da.  v1:= temp @kind wide;
  #L1671dc.  call temp:= `toNanos`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L1671e2.  v0:= temp @kind wide;
  #L1671e4.  `@@ac.r0.w` @type ^`long` := v0 @kind wide;
  #L1671e8.  return @kind void;
  catch `java.lang.SecurityException` @[L1671be..L1671ca] goto L1671cc;
}
procedure `void` `<init>`(`ac.r0` v0 @kind this) @signature `Lac/r0;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L16720c.  call `<init>`(v0) @signature `Lac/d1;.<init>:()V` @kind direct;
  #L167212.  return @kind void;
}
procedure `void` `D0`(`ac.r0` v1 @kind this) @signature `Lac/r0;.D0:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L167224.  @monitorenter v1
  #L167226.  call temp:= `G0`(v1) @signature `Lac/r0;.G0:()Z` @kind direct;
  #L16722c.  v0:= temp;
  #L16722e.  if v0 != 0 then goto L167236;
  #L167232.  @monitorexit v1
  #L167234.  return @kind void;
  #L167236.  v0:= 3I;
  #L167238.  `@@ac.r0.debugStatus` @type ^`int` := v0;
  #L16723c.  call `y0`(v1) @signature `Lac/d1;.y0:()V` @kind virtual;
  #L167242.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L167248.  @monitorexit v1
  #L16724a.  return @kind void;
  #L16724c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16724e.  @monitorexit v1
  #L167250.  throw v0;
  catch `java.lang.Throwable` @[L167226..L16722e] goto L16724c;
  catch `java.lang.Throwable` @[L167238..L167248] goto L16724c;
}
procedure `java.lang.Thread` `E0`(`ac.r0` v2 @kind this) @signature `Lac/r0;.E0:()Ljava/lang/Thread;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L167128.  @monitorenter v2
  #L16712a.  v0:= `@@ac.r0._thread` @type ^`java.lang.Thread` @kind object;
  #L16712e.  if v0 != 0 then goto L167152;
  #L167132.  v0:= new `java.lang.Thread`;
  #L167136.  v1:= "kotlinx.coroutines.DefaultExecutor" @kind object;
  #L16713a.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L167140.  `@@ac.r0._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L167144.  v1:= 1I;
  #L167146.  call `setDaemon`(v0, v1) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L16714c.  call `start`(v0) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L167152.  @monitorexit v2
  #L167154.  return v0 @kind object;
  #L167156.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L167158.  @monitorexit v2
  #L16715a.  throw v0;
  catch `java.lang.Throwable` @[L16712a..L167152] goto L167156;
}
procedure `boolean` `F0`(`ac.r0` v2 @kind this) @signature `Lac/r0;.F0:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L167088.  v0:= `@@ac.r0.debugStatus` @type ^`int`;
  #L16708c.  v1:= 4I;
  #L16708e.  if v0 != v1 then goto L167096;
  #L167092.  v0:= 1I;
  #L167094.  goto L167098;
  #L167096.  v0:= 0I;
  #L167098.  return v0;
}
procedure `boolean` `G0`(`ac.r0` v2 @kind this) @signature `Lac/r0;.G0:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1670ac.  v0:= `@@ac.r0.debugStatus` @type ^`int`;
  #L1670b0.  v1:= 2I;
  #L1670b2.  if v0 == v1 then goto L1670c2;
  #L1670b6.  v1:= 3I;
  #L1670b8.  if v0 != v1 then goto L1670be;
  #L1670bc.  goto L1670c2;
  #L1670be.  v0:= 0I;
  #L1670c0.  goto L1670c4;
  #L1670c2.  v0:= 1I;
  #L1670c4.  return v0;
}
procedure `boolean` `H0`(`ac.r0` v1 @kind this) @signature `Lac/r0;.H0:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1670d8.  @monitorenter v1
  #L1670da.  call temp:= `G0`(v1) @signature `Lac/r0;.G0:()Z` @kind direct;
  #L1670e0.  v0:= temp;
  #L1670e2.  if v0 == 0 then goto L1670ec;
  #L1670e6.  v0:= 0I;
  #L1670e8.  @monitorexit v1
  #L1670ea.  return v0;
  #L1670ec.  v0:= 1I;
  #L1670ee.  `@@ac.r0.debugStatus` @type ^`int` := v0;
  #L1670f2.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L1670f8.  @monitorexit v1
  #L1670fa.  return v0;
  #L1670fc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1670fe.  @monitorexit v1
  #L167100.  throw v0;
  catch `java.lang.Throwable` @[L1670da..L1670e2] goto L1670fc;
  catch `java.lang.Throwable` @[L1670ee..L1670f8] goto L1670fc;
}
procedure `void` `I0`(`ac.r0` v2 @kind this) @signature `Lac/r0;.I0:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L16743c.  v0:= new `java.util.concurrent.RejectedExecutionException`;
  #L167440.  v1:= "DefaultExecutor was shut down. This error indicates that Dispatchers.shutdown() was invoked prior to completion of exiting coroutines, leaving coroutines in incomplete state. Please refer to Dispatchers.shutdown documentation for more details" @kind object;
  #L167444.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/RejectedExecutionException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16744a.  throw v0;
}
procedure `java.lang.Thread` `m0`(`ac.r0` v1 @kind this) @signature `Lac/r0;.m0:()Ljava/lang/Thread;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L167178.  v0:= `@@ac.r0._thread` @type ^`java.lang.Thread` @kind object;
  #L16717c.  if v0 != 0 then goto L167188;
  #L167180.  call temp:= `E0`(v1) @signature `Lac/r0;.E0:()Ljava/lang/Thread;` @kind direct;
  #L167186.  v0:= temp @kind object;
  #L167188.  return v0 @kind object;
}
procedure `void` `n0`(`ac.r0` v0 @kind this, `long` v1 , `ac.d1$a` v3 @kind object) @signature `Lac/r0;.n0:(JLac/d1$a;)V` @AccessFlag PROTECTED {
    temp;

  #L1672a4.  call `I0`(v0) @signature `Lac/r0;.I0:()V` @kind direct;
  #L1672aa.  return @kind void;
}
procedure `void` `run`(`ac.r0` v12 @kind this) @signature `Lac/r0;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1672bc.  v0:= `@@ac.i2.a` @type ^`ac.i2` @kind object;
  #L1672c0.  call `c`(v0, v12) @signature `Lac/i2;.c:(Lac/c1;)V` @kind virtual;
  #L1672c6.  call temp:= `a`() @signature `Lac/c;.a:()Lac/b;` @kind static;
  #L1672cc.  v0:= 0I;
  #L1672ce.  call temp:= `H0`(v12) @signature `Lac/r0;.H0:()Z` @kind direct;
  #L1672d4.  v1:= temp;
  #L1672d6.  if v1 != 0 then goto L1672fe;
  #L1672da.  `@@ac.r0._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L1672de.  call `D0`(v12) @signature `Lac/r0;.D0:()V` @kind direct;
  #L1672e4.  call temp:= `a`() @signature `Lac/c;.a:()Lac/b;` @kind static;
  #L1672ea.  call temp:= `v0`(v12) @signature `Lac/d1;.v0:()Z` @kind virtual;
  #L1672f0.  v0:= temp;
  #L1672f2.  if v0 != 0 then goto L1672fc;
  #L1672f6.  call temp:= `m0`(v12) @signature `Lac/r0;.m0:()Ljava/lang/Thread;` @kind virtual;
  #L1672fc.  return @kind void;
  #L1672fe.  v1:= 9223372036854775807L;
  #L167308.  v3:= v1 @kind wide;
  #L16730a.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L167310.  call temp:= `w0`(v12) @signature `Lac/d1;.w0:()J` @kind virtual;
  #L167316.  v5:= temp @kind wide;
  #L167318.  v7:= 0L;
  #L16731c.  v9:= lcmp(v5, v1);
  #L167320.  if v9 != 0 then goto L16737a;
  #L167324.  call temp:= `a`() @signature `Lac/c;.a:()Lac/b;` @kind static;
  #L16732a.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L167330.  v9:= temp @kind wide;
  #L167332.  v11:= lcmp(v3, v1);
  #L167336.  if v11 != 0 then goto L167340;
  #L16733a.  v3:= `@@ac.r0.w` @type ^`long` @kind wide;
  #L16733e.  v3:= v3 + v9 @kind long;
  #L167340.  v9:= v3 - v9 @kind long;
  #L167344.  v11:= lcmp(v9, v7);
  #L167348.  if v11 > 0 then goto L167370;
  #L16734c.  `@@ac.r0._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L167350.  call `D0`(v12) @signature `Lac/r0;.D0:()V` @kind direct;
  #L167356.  call temp:= `a`() @signature `Lac/c;.a:()Lac/b;` @kind static;
  #L16735c.  call temp:= `v0`(v12) @signature `Lac/d1;.v0:()Z` @kind virtual;
  #L167362.  v0:= temp;
  #L167364.  if v0 != 0 then goto L16736e;
  #L167368.  call temp:= `m0`(v12) @signature `Lac/r0;.m0:()Ljava/lang/Thread;` @kind virtual;
  #L16736e.  return @kind void;
  #L167370.  call temp:= `d`(v5, v9) @signature `Lwb/d;.d:(JJ)J` @kind static;
  #L167376.  v5:= temp @kind wide;
  #L167378.  goto L16737c;
  #L16737a.  v3:= v1 @kind wide;
  #L16737c.  v9:= lcmp(v5, v7);
  #L167380.  if v9 <= 0 then goto L16730a;
  #L167384.  call temp:= `G0`(v12) @signature `Lac/r0;.G0:()Z` @kind direct;
  #L16738a.  v7:= temp;
  #L16738c.  if v7 == 0 then goto L1673b4;
  #L167390.  `@@ac.r0._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L167394.  call `D0`(v12) @signature `Lac/r0;.D0:()V` @kind direct;
  #L16739a.  call temp:= `a`() @signature `Lac/c;.a:()Lac/b;` @kind static;
  #L1673a0.  call temp:= `v0`(v12) @signature `Lac/d1;.v0:()Z` @kind virtual;
  #L1673a6.  v0:= temp;
  #L1673a8.  if v0 != 0 then goto L1673b2;
  #L1673ac.  call temp:= `m0`(v12) @signature `Lac/r0;.m0:()Ljava/lang/Thread;` @kind virtual;
  #L1673b2.  return @kind void;
  #L1673b4.  call temp:= `a`() @signature `Lac/c;.a:()Lac/b;` @kind static;
  #L1673ba.  call `parkNanos`(v12, v5) @signature `Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V` @kind static;
  #L1673c0.  goto L16730a;
  #L1673c2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1673c4.  `@@ac.r0._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L1673c8.  call `D0`(v12) @signature `Lac/r0;.D0:()V` @kind direct;
  #L1673ce.  call temp:= `a`() @signature `Lac/c;.a:()Lac/b;` @kind static;
  #L1673d4.  call temp:= `v0`(v12) @signature `Lac/d1;.v0:()Z` @kind virtual;
  #L1673da.  v0:= temp;
  #L1673dc.  if v0 != 0 then goto L1673e6;
  #L1673e0.  call temp:= `m0`(v12) @signature `Lac/r0;.m0:()Ljava/lang/Thread;` @kind virtual;
  #L1673e6.  throw v1;
  catch `java.lang.Throwable` @[L1672ce..L1672d6] goto L1673c2;
  catch `java.lang.Throwable` @[L16730a..L16733e] goto L1673c2;
  catch `java.lang.Throwable` @[L167370..L16738c] goto L1673c2;
  catch `java.lang.Throwable` @[L1673b4..L1673c0] goto L1673c2;
}
procedure `void` `s0`(`ac.r0` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lac/r0;.s0:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L167278.  call temp:= `F0`(v1) @signature `Lac/r0;.F0:()Z` @kind direct;
  #L16727e.  v0:= temp;
  #L167280.  if v0 == 0 then goto L16728a;
  #L167284.  call `I0`(v1) @signature `Lac/r0;.I0:()V` @kind direct;
  #L16728a.  call `s0`(v1, v2) @signature `Lac/d1;.s0:(Ljava/lang/Runnable;)V` @kind super;
  #L167290.  return @kind void;
}
procedure `void` `shutdown`(`ac.r0` v1 @kind this) @signature `Lac/r0;.shutdown:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16741c.  v0:= 4I;
  #L16741e.  `@@ac.r0.debugStatus` @type ^`int` := v0;
  #L167422.  call `shutdown`(v1) @signature `Lac/d1;.shutdown:()V` @kind super;
  #L167428.  return @kind void;
}
