record `ac.l1` @kind class @AccessFlag PUBLIC_FINAL extends `ac.m1` @kind interface {
  `ac.c2` `ac.l1.o` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`ac.l1` v0 @kind this, `ac.c2` v1 @kind object) @signature `Lac/l1;.<init>:(Lac/c2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L168bcc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L168bd2.  v0.`ac.l1.o` @type ^`ac.c2` := v1 @kind object;
  #L168bd6.  return @kind void;
}
procedure `boolean` `a`(`ac.l1` v1 @kind this) @signature `Lac/l1;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168b7c.  v0:= 0I;
  #L168b7e.  return v0;
}
procedure `ac.c2` `g`(`ac.l1` v1 @kind this) @signature `Lac/l1;.g:()Lac/c2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168b64.  v0:= v1.`ac.l1.o` @type ^`ac.c2` @kind object;
  #L168b68.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`ac.l1` v2 @kind this) @signature `Lac/l1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L168b90.  call temp:= `c`() @signature `Lac/p0;.c:()Z` @kind static;
  #L168b96.  v0:= temp;
  #L168b98.  if v0 == 0 then goto L168bb2;
  #L168b9c.  call temp:= `g`(v2) @signature `Lac/l1;.g:()Lac/c2;` @kind virtual;
  #L168ba2.  v0:= temp @kind object;
  #L168ba4.  v1:= "New" @kind object;
  #L168ba8.  call temp:= `y`(v0, v1) @signature `Lac/c2;.y:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L168bae.  v0:= temp @kind object;
  #L168bb0.  goto L168bba;
  #L168bb2.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind super;
  #L168bb8.  v0:= temp @kind object;
  #L168bba.  return v0 @kind object;
}
