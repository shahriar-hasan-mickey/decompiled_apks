record `ac.w` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `ac.w.a` @AccessFlag PUBLIC_FINAL;
  `tb.l` `ac.w.b` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`ac.w` v0 @kind this, `java.lang.Object` v1 @kind object, `tb.l` v2 @kind object) @signature `Lac/w;.<init>:(Ljava/lang/Object;Ltb/l;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L165da8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L165dae.  v0.`ac.w.a` @type ^`java.lang.Object` := v1 @kind object;
  #L165db2.  v0.`ac.w.b` @type ^`tb.l` := v2 @kind object;
  #L165db6.  return @kind void;
}
procedure `boolean` `equals`(`ac.w` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lac/w;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L165cc0.  v0:= 1I;
  #L165cc2.  if v4 != v5 then goto L165cc8;
  #L165cc6.  return v0;
  #L165cc8.  v1:= instanceof @variable v5 @type ^`ac.w` @kind boolean;
  #L165ccc.  v2:= 0I;
  #L165cce.  if v1 != 0 then goto L165cd4;
  #L165cd2.  return v2;
  #L165cd4.  v5:= (`ac.w`) v5 @kind object;
  #L165cd8.  v1:= v4.`ac.w.a` @type ^`java.lang.Object` @kind object;
  #L165cdc.  v3:= v5.`ac.w.a` @type ^`java.lang.Object` @kind object;
  #L165ce0.  call temp:= `a`(v1, v3) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L165ce6.  v1:= temp;
  #L165ce8.  if v1 != 0 then goto L165cee;
  #L165cec.  return v2;
  #L165cee.  v1:= v4.`ac.w.b` @type ^`tb.l` @kind object;
  #L165cf2.  v5:= v5.`ac.w.b` @type ^`tb.l` @kind object;
  #L165cf6.  call temp:= `a`(v1, v5) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L165cfc.  v5:= temp;
  #L165cfe.  if v5 != 0 then goto L165d04;
  #L165d02.  return v2;
  #L165d04.  return v0;
}
procedure `int` `hashCode`(`ac.w` v2 @kind this) @signature `Lac/w;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L165d18.  v0:= v2.`ac.w.a` @type ^`java.lang.Object` @kind object;
  #L165d1c.  if v0 != 0 then goto L165d24;
  #L165d20.  v0:= 0I;
  #L165d22.  goto L165d2c;
  #L165d24.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L165d2a.  v0:= temp;
  #L165d2c.  v0:= v0 * 31;
  #L165d30.  v1:= v2.`ac.w.b` @type ^`tb.l` @kind object;
  #L165d34.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L165d3a.  v1:= temp;
  #L165d3c.  v0:= v0 + v1 @kind int;
  #L165d3e.  return v0;
}
procedure `java.lang.String` `toString`(`ac.w` v2 @kind this) @signature `Lac/w;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L165d50.  v0:= new `java.lang.StringBuilder`;
  #L165d54.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L165d5a.  v1:= "CompletedWithCancellation(result=" @kind object;
  #L165d5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165d64.  v1:= v2.`ac.w.a` @type ^`java.lang.Object` @kind object;
  #L165d68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165d6e.  v1:= ", onCancellation=" @kind object;
  #L165d72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165d78.  v1:= v2.`ac.w.b` @type ^`tb.l` @kind object;
  #L165d7c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165d82.  v1:= 41I;
  #L165d86.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L165d8c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L165d92.  v0:= temp @kind object;
  #L165d94.  return v0 @kind object;
}
