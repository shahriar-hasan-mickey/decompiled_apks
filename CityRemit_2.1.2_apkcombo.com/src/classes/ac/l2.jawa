record `ac.l2` @kind class @AccessFlag FINAL extends `mb.g$b` @kind interface, `mb.g$c` @kind interface {
}
global `ac.l2` `@@ac.l2.o` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lac/l2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L16b858.  v0:= new `ac.l2`;
  #L16b85c.  call `<init>`(v0) @signature `Lac/l2;.<init>:()V` @kind direct;
  #L16b862.  `@@ac.l2.o` @type ^`ac.l2` := v0 @kind object;
  #L16b866.  return @kind void;
}
procedure `void` `<init>`(`ac.l2` v0 @kind this) @signature `Lac/l2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L16b878.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16b87e.  return @kind void;
}
procedure `mb.g` `M`(`ac.l2` v0 @kind this, `mb.g$c` v1 @kind object) @signature `Lac/l2;.M:(Lmb/g$c;)Lmb/g;` @AccessFlag PUBLIC {
    temp;

  #L16b7f0.  call temp:= `c`(v0, v1) @signature `Lmb/g$b$a;.c:(Lmb/g$b;Lmb/g$c;)Lmb/g;` @kind static;
  #L16b7f6.  v1:= temp @kind object;
  #L16b7f8.  return v1 @kind object;
}
procedure `java.lang.Object` `S`(`ac.l2` v0 @kind this, `java.lang.Object` v1 @kind object, `tb.p` v2 @kind object) @signature `Lac/l2;.S:(Ljava/lang/Object;Ltb/p;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L16b7d4.  call temp:= `a`(v0, v1, v2) @signature `Lmb/g$b$a;.a:(Lmb/g$b;Ljava/lang/Object;Ltb/p;)Ljava/lang/Object;` @kind static;
  #L16b7da.  v1:= temp @kind object;
  #L16b7dc.  return v1 @kind object;
}
procedure `mb.g$b` `c`(`ac.l2` v0 @kind this, `mb.g$c` v1 @kind object) @signature `Lac/l2;.c:(Lmb/g$c;)Lmb/g$b;` @AccessFlag PUBLIC {
    temp;

  #L16b828.  call temp:= `b`(v0, v1) @signature `Lmb/g$b$a;.b:(Lmb/g$b;Lmb/g$c;)Lmb/g$b;` @kind static;
  #L16b82e.  v1:= temp @kind object;
  #L16b830.  return v1 @kind object;
}
procedure `mb.g$c` `getKey`(`ac.l2` v0 @kind this) @signature `Lac/l2;.getKey:()Lmb/g$c;` @AccessFlag PUBLIC {
    temp;

  #L16b844.  return v0 @kind object;
}
procedure `mb.g` `s`(`ac.l2` v0 @kind this, `mb.g` v1 @kind object) @signature `Lac/l2;.s:(Lmb/g;)Lmb/g;` @AccessFlag PUBLIC {
    temp;

  #L16b80c.  call temp:= `d`(v0, v1) @signature `Lmb/g$b$a;.d:(Lmb/g$b;Lmb/g;)Lmb/g;` @kind static;
  #L16b812.  v1:= temp @kind object;
  #L16b814.  return v1 @kind object;
}
