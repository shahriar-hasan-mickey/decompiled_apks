record `ac.h0` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`mb.g` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lac/h0;.a:(Lmb/g;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L166710.  v0:= `@@ac.e0.b` @type ^`ac.e0$a` @kind object;
  #L166714.  call temp:= `c`(v1, v0) @signature `Lmb/g;.c:(Lmb/g$c;)Lmb/g$b;` @kind interface;
  #L16671a.  v0:= temp @kind object;
  #L16671c.  v0:= (`ac.e0`) v0 @kind object;
  #L166720.  if v0 == 0 then goto L16672c;
  #L166724.  call `E`(v0, v1, v2) @signature `Lac/e0;.E:(Lmb/g;Ljava/lang/Throwable;)V` @kind interface;
  #L16672a.  return @kind void;
  #L16672c.  call `a`(v1, v2) @signature `Lac/g0;.a:(Lmb/g;Ljava/lang/Throwable;)V` @kind static;
  #L166732.  return @kind void;
  #L166734.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L166736.  call temp:= `b`(v2, v0) @signature `Lac/h0;.b:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L16673c.  v2:= temp @kind object;
  #L16673e.  call `a`(v1, v2) @signature `Lac/g0;.a:(Lmb/g;Ljava/lang/Throwable;)V` @kind static;
  #L166744.  return @kind void;
  catch `java.lang.Throwable` @[L166710..L16672a] goto L166734;
}
procedure `java.lang.Throwable` `b`(`java.lang.Throwable` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lac/h0;.b:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1666e4.  if v2 != v3 then goto L1666ea;
  #L1666e8.  return v2 @kind object;
  #L1666ea.  v0:= new `java.lang.RuntimeException`;
  #L1666ee.  v1:= "Exception while trying to handle coroutine exception" @kind object;
  #L1666f2.  call `<init>`(v0, v1, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1666f8.  call `a`(v0, v2) @signature `Ljb/a;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L1666fe.  return v0 @kind object;
}
