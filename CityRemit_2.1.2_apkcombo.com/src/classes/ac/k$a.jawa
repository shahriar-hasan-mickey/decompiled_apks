record `ac.k$a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `a`(`ac.k` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lac/k$a;.a:(Lac/k;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L164838.  if v4 != 0 then goto L164850;
  #L16483c.  v3:= v3 ^& 2;
  #L164840.  if v3 == 0 then goto L164846;
  #L164844.  v2:= 0I;
  #L164846.  call temp:= `b`(v0, v1, v2) @signature `Lac/k;.b:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16484c.  v0:= temp @kind object;
  #L16484e.  return v0 @kind object;
  #L164850.  v0:= new `java.lang.UnsupportedOperationException`;
  #L164854.  v1:= "Super calls with default arguments not supported in this target, function: tryResume" @kind object;
  #L164858.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16485e.  throw v0;
}
