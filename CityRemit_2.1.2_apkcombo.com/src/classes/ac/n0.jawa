record `ac.n0` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `ac.n0` `@@ac.n0.o` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ac.n0` `@@ac.n0.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ac.n0` `@@ac.n0.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ac.n0` `@@ac.n0.r` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ac.n0`[] `@@ac.n0.s` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lac/n0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L166c64.  v0:= new `ac.n0`;
  #L166c68.  v1:= "DEFAULT" @kind object;
  #L166c6c.  v2:= 0I;
  #L166c6e.  call `<init>`(v0, v1, v2) @signature `Lac/n0;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L166c74.  `@@ac.n0.o` @type ^`ac.n0` := v0 @kind object;
  #L166c78.  v0:= new `ac.n0`;
  #L166c7c.  v1:= "LAZY" @kind object;
  #L166c80.  v2:= 1I;
  #L166c82.  call `<init>`(v0, v1, v2) @signature `Lac/n0;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L166c88.  `@@ac.n0.p` @type ^`ac.n0` := v0 @kind object;
  #L166c8c.  v0:= new `ac.n0`;
  #L166c90.  v1:= "ATOMIC" @kind object;
  #L166c94.  v2:= 2I;
  #L166c96.  call `<init>`(v0, v1, v2) @signature `Lac/n0;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L166c9c.  `@@ac.n0.q` @type ^`ac.n0` := v0 @kind object;
  #L166ca0.  v0:= new `ac.n0`;
  #L166ca4.  v1:= "UNDISPATCHED" @kind object;
  #L166ca8.  v2:= 3I;
  #L166caa.  call `<init>`(v0, v1, v2) @signature `Lac/n0;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L166cb0.  `@@ac.n0.r` @type ^`ac.n0` := v0 @kind object;
  #L166cb4.  call temp:= `c`() @signature `Lac/n0;.c:()[Lac/n0;` @kind static;
  #L166cba.  v0:= temp @kind object;
  #L166cbc.  `@@ac.n0.s` @type ^`ac.n0`[] := v0 @kind object;
  #L166cc0.  return @kind void;
}
procedure `void` `<init>`(`ac.n0` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lac/n0;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L166cd4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L166cda.  return @kind void;
}
procedure `ac.n0`[] `c`() @signature `Lac/n0;.c:()[Lac/n0;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L166be0.  v0:= 4I;
  #L166be2.  v0:= new `ac.n0`[v0];
  #L166be6.  v1:= `@@ac.n0.o` @type ^`ac.n0` @kind object;
  #L166bea.  v2:= 0I;
  #L166bec.  v0[v2]:= v1 @kind object;
  #L166bf0.  v1:= `@@ac.n0.p` @type ^`ac.n0` @kind object;
  #L166bf4.  v2:= 1I;
  #L166bf6.  v0[v2]:= v1 @kind object;
  #L166bfa.  v1:= `@@ac.n0.q` @type ^`ac.n0` @kind object;
  #L166bfe.  v2:= 2I;
  #L166c00.  v0[v2]:= v1 @kind object;
  #L166c04.  v1:= `@@ac.n0.r` @type ^`ac.n0` @kind object;
  #L166c08.  v2:= 3I;
  #L166c0a.  v0[v2]:= v1 @kind object;
  #L166c0e.  return v0 @kind object;
}
procedure `ac.n0` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lac/n0;.valueOf:(Ljava/lang/String;)Lac/n0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L166bbc.  v0:= constclass @type ^`ac.n0` @kind object;
  #L166bc0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L166bc6.  v1:= temp @kind object;
  #L166bc8.  v1:= (`ac.n0`) v1 @kind object;
  #L166bcc.  return v1 @kind object;
}
procedure `ac.n0`[] `values`() @signature `Lac/n0;.values:()[Lac/n0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L166c20.  v0:= `@@ac.n0.s` @type ^`ac.n0`[] @kind object;
  #L166c24.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L166c2a.  v0:= temp @kind object;
  #L166c2c.  v0:= (`ac.n0`[]) v0 @kind object;
  #L166c30.  return v0 @kind object;
}
procedure `void` `d`(`ac.n0` v6 @kind this, `tb.p` v7 @kind object, `java.lang.Object` v8 @kind object, `mb.d` v9 @kind object) @signature `Lac/n0;.d:(Ltb/p;Ljava/lang/Object;Lmb/d;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L166cec.  v0:= `@@ac.n0$a.a` @type ^`int`[] @kind object;
  #L166cf0.  call temp:= `ordinal`(v6) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L166cf6.  v1:= temp;
  #L166cf8.  v0:= v0[v1];
  #L166cfc.  v1:= 1I;
  #L166cfe.  if v0 == v1 then goto L166d32;
  #L166d02.  v1:= 2I;
  #L166d04.  if v0 == v1 then goto L166d2a;
  #L166d08.  v1:= 3I;
  #L166d0a.  if v0 == v1 then goto L166d22;
  #L166d0e.  v7:= 4I;
  #L166d10.  if v0 != v7 then goto L166d16;
  #L166d14.  goto L166d44;
  #L166d16.  v7:= new `jb.k`;
  #L166d1a.  call `<init>`(v7) @signature `Ljb/k;.<init>:()V` @kind direct;
  #L166d20.  throw v7;
  #L166d22.  call `a`(v7, v8, v9) @signature `Lfc/b;.a:(Ltb/p;Ljava/lang/Object;Lmb/d;)V` @kind static;
  #L166d28.  goto L166d44;
  #L166d2a.  call `a`(v7, v8, v9) @signature `Lmb/f;.a:(Ltb/p;Ljava/lang/Object;Lmb/d;)V` @kind static;
  #L166d30.  goto L166d44;
  #L166d32.  v3:= 0I;
  #L166d34.  v4:= 4I;
  #L166d36.  v5:= 0I;
  #L166d38.  v0:= v7 @kind object;
  #L166d3a.  v1:= v8 @kind object;
  #L166d3c.  v2:= v9 @kind object;
  #L166d3e.  call `d`(v0, v1, v2, v3, v4, v5) @signature `Lfc/a;.d:(Ltb/p;Ljava/lang/Object;Lmb/d;Ltb/l;ILjava/lang/Object;)V` @kind static;
  #L166d44.  return @kind void;
}
procedure `boolean` `e`(`ac.n0` v1 @kind this) @signature `Lac/n0;.e:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L166c44.  v0:= `@@ac.n0.p` @type ^`ac.n0` @kind object;
  #L166c48.  if v1 != v0 then goto L166c50;
  #L166c4c.  v0:= 1I;
  #L166c4e.  goto L166c52;
  #L166c50.  v0:= 0I;
  #L166c52.  return v0;
}
