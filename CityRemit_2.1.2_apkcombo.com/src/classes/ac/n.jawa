record `ac.n` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `ac.l` `a`(`mb.d` v2 @kind object) @signature `Lac/n;.a:(Lmb/d;)Lac/l;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L165698.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.internal.h` @kind boolean;
  #L16569c.  if v0 != 0 then goto L1656ae;
  #L1656a0.  v0:= new `ac.l`;
  #L1656a4.  v1:= 1I;
  #L1656a6.  call `<init>`(v0, v2, v1) @signature `Lac/l;.<init>:(Lmb/d;I)V` @kind direct;
  #L1656ac.  return v0 @kind object;
  #L1656ae.  v0:= v2 @kind object;
  #L1656b0.  v0:= (`kotlinx.coroutines.internal.h`) v0 @kind object;
  #L1656b4.  call temp:= `n`(v0) @signature `Lkotlinx/coroutines/internal/h;.n:()Lac/l;` @kind virtual;
  #L1656ba.  v0:= temp @kind object;
  #L1656bc.  if v0 == 0 then goto L1656d8;
  #L1656c0.  call temp:= `G`(v0) @signature `Lac/l;.G:()Z` @kind virtual;
  #L1656c6.  v1:= temp;
  #L1656c8.  if v1 == 0 then goto L1656ce;
  #L1656cc.  goto L1656d0;
  #L1656ce.  v0:= 0I;
  #L1656d0.  if v0 != 0 then goto L1656d6;
  #L1656d4.  goto L1656d8;
  #L1656d6.  return v0 @kind object;
  #L1656d8.  v0:= new `ac.l`;
  #L1656dc.  v1:= 2I;
  #L1656de.  call `<init>`(v0, v2, v1) @signature `Lac/l;.<init>:(Lmb/d;I)V` @kind direct;
  #L1656e4.  return v0 @kind object;
}
