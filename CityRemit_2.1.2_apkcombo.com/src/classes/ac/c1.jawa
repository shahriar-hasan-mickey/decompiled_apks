record `ac.c1` @kind class @AccessFlag PUBLIC_ABSTRACT extends `ac.d0` @kind class {
  `long` `ac.c1.q` @AccessFlag PRIVATE;
  `boolean` `ac.c1.r` @AccessFlag PRIVATE;
  `kotlinx.coroutines.internal.a` `ac.c1.s` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`ac.c1` v0 @kind this) @signature `Lac/c1;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L168770.  call `<init>`(v0) @signature `Lac/d0;.<init>:()V` @kind direct;
  #L168776.  return @kind void;
}
procedure `long` `e0`(`ac.c1` v2 @kind this, `boolean` v3 ) @signature `Lac/c1;.e0:(Z)J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L168710.  if v3 == 0 then goto L168720;
  #L168714.  v0:= 4294967296L;
  #L16871e.  goto L168724;
  #L168720.  v0:= 1L;
  #L168724.  return v0 @kind wide;
}
procedure `void` `i0`(`ac.c1` v0 @kind object, `boolean` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lac/c1;.i0:(Lac/c1;ZILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L168828.  if v3 != 0 then goto L16883e;
  #L16882c.  v2:= v2 ^& 1;
  #L168830.  if v2 == 0 then goto L168836;
  #L168834.  v1:= 0I;
  #L168836.  call `h0`(v0, v1) @signature `Lac/c1;.h0:(Z)V` @kind virtual;
  #L16883c.  return @kind void;
  #L16883e.  v0:= new `java.lang.UnsupportedOperationException`;
  #L168842.  v1:= "Super calls with default arguments not supported in this target, function: incrementUseCount" @kind object;
  #L168846.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16884c.  throw v0;
}
procedure `void` `d0`(`ac.c1` v4 @kind this, `boolean` v5 ) @signature `Lac/c1;.d0:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L168788.  v0:= v4.`ac.c1.q` @type ^`long` @kind wide;
  #L16878c.  call temp:= `e0`(v4, v5) @signature `Lac/c1;.e0:(Z)J` @kind direct;
  #L168792.  v2:= temp @kind wide;
  #L168794.  v0:= v0 - v2 @kind long;
  #L168796.  v4.`ac.c1.q` @type ^`long` := v0 @kind wide;
  #L16879a.  v2:= 0L;
  #L16879e.  v5:= lcmp(v0, v2);
  #L1687a2.  if v5 <= 0 then goto L1687a8;
  #L1687a6.  return @kind void;
  #L1687a8.  call temp:= `a`() @signature `Lac/p0;.a:()Z` @kind static;
  #L1687ae.  v5:= temp;
  #L1687b0.  if v5 == 0 then goto L1687d8;
  #L1687b4.  v0:= v4.`ac.c1.q` @type ^`long` @kind wide;
  #L1687b8.  v5:= lcmp(v0, v2);
  #L1687bc.  if v5 != 0 then goto L1687c4;
  #L1687c0.  v5:= 1I;
  #L1687c2.  goto L1687c6;
  #L1687c4.  v5:= 0I;
  #L1687c6.  if v5 == 0 then goto L1687cc;
  #L1687ca.  goto L1687d8;
  #L1687cc.  v5:= new `java.lang.AssertionError`;
  #L1687d0.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1687d6.  throw v5;
  #L1687d8.  v5:= v4.`ac.c1.r` @type ^`boolean` @kind boolean;
  #L1687dc.  if v5 == 0 then goto L1687e6;
  #L1687e0.  call `shutdown`(v4) @signature `Lac/c1;.shutdown:()V` @kind virtual;
  #L1687e6.  return @kind void;
}
procedure `void` `f0`(`ac.c1` v1 @kind this, `ac.w0` v2 @kind object) @signature `Lac/c1;.f0:(Lac/w0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1687f8.  v0:= v1.`ac.c1.s` @type ^`kotlinx.coroutines.internal.a` @kind object;
  #L1687fc.  if v0 != 0 then goto L16880e;
  #L168800.  v0:= new `kotlinx.coroutines.internal.a`;
  #L168804.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/a;.<init>:()V` @kind direct;
  #L16880a.  v1.`ac.c1.s` @type ^`kotlinx.coroutines.internal.a` := v0 @kind object;
  #L16880e.  call `a`(v0, v2) @signature `Lkotlinx/coroutines/internal/a;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L168814.  return @kind void;
}
procedure `long` `g0`(`ac.c1` v3 @kind this) @signature `Lac/c1;.g0:()J` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L168738.  v0:= v3.`ac.c1.s` @type ^`kotlinx.coroutines.internal.a` @kind object;
  #L16873c.  v1:= 9223372036854775807L;
  #L168746.  if v0 != 0 then goto L16874c;
  #L16874a.  return v1 @kind wide;
  #L16874c.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/internal/a;.c:()Z` @kind virtual;
  #L168752.  v0:= temp;
  #L168754.  if v0 == 0 then goto L16875a;
  #L168758.  goto L16875e;
  #L16875a.  v1:= 0L;
  #L16875e.  return v1 @kind wide;
}
procedure `void` `h0`(`ac.c1` v4 @kind this, `boolean` v5 ) @signature `Lac/c1;.h0:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L168860.  v0:= v4.`ac.c1.q` @type ^`long` @kind wide;
  #L168864.  call temp:= `e0`(v4, v5) @signature `Lac/c1;.e0:(Z)J` @kind direct;
  #L16886a.  v2:= temp @kind wide;
  #L16886c.  v0:= v0 + v2 @kind long;
  #L16886e.  v4.`ac.c1.q` @type ^`long` := v0 @kind wide;
  #L168872.  if v5 != 0 then goto L16887c;
  #L168876.  v5:= 1I;
  #L168878.  v4.`ac.c1.r` @type ^`boolean` := v5 @kind boolean;
  #L16887c.  return @kind void;
}
procedure `boolean` `j0`(`ac.c1` v6 @kind this) @signature `Lac/c1;.j0:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L168684.  v0:= v6.`ac.c1.q` @type ^`long` @kind wide;
  #L168688.  v2:= 1I;
  #L16868a.  call temp:= `e0`(v6, v2) @signature `Lac/c1;.e0:(Z)J` @kind direct;
  #L168690.  v3:= temp @kind wide;
  #L168692.  v5:= lcmp(v0, v3);
  #L168696.  if v5 < 0 then goto L16869c;
  #L16869a.  goto L16869e;
  #L16869c.  v2:= 0I;
  #L16869e.  return v2;
}
procedure `boolean` `k0`(`ac.c1` v1 @kind this) @signature `Lac/c1;.k0:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1686b0.  v0:= v1.`ac.c1.s` @type ^`kotlinx.coroutines.internal.a` @kind object;
  #L1686b4.  if v0 == 0 then goto L1686c2;
  #L1686b8.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/internal/a;.c:()Z` @kind virtual;
  #L1686be.  v0:= temp;
  #L1686c0.  goto L1686c4;
  #L1686c2.  v0:= 1I;
  #L1686c4.  return v0;
}
procedure `boolean` `l0`(`ac.c1` v2 @kind this) @signature `Lac/c1;.l0:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1686d8.  v0:= v2.`ac.c1.s` @type ^`kotlinx.coroutines.internal.a` @kind object;
  #L1686dc.  v1:= 0I;
  #L1686de.  if v0 != 0 then goto L1686e4;
  #L1686e2.  return v1;
  #L1686e4.  call temp:= `d`(v0) @signature `Lkotlinx/coroutines/internal/a;.d:()Ljava/lang/Object;` @kind virtual;
  #L1686ea.  v0:= temp @kind object;
  #L1686ec.  v0:= (`ac.w0`) v0 @kind object;
  #L1686f0.  if v0 != 0 then goto L1686f6;
  #L1686f4.  return v1;
  #L1686f6.  call `run`(v0) @signature `Lac/w0;.run:()V` @kind virtual;
  #L1686fc.  v0:= 1I;
  #L1686fe.  return v0;
}
procedure `void` `shutdown`(`ac.c1` v0 @kind this) @signature `Lac/c1;.shutdown:()V` @AccessFlag PUBLIC {
    temp;

  #L168890.  return @kind void;
}
