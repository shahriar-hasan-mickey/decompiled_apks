record `v1.k` @kind class @AccessFlag FINAL extends `s3.s` @kind interface {
  `s3.d0` `v1.k.o` @AccessFlag PRIVATE_FINAL;
  `v1.k$a` `v1.k.p` @AccessFlag PRIVATE_FINAL;
  `v1.r2` `v1.k.q` @AccessFlag PRIVATE;
  `s3.s` `v1.k.r` @AccessFlag PRIVATE;
  `boolean` `v1.k.s` @AccessFlag PRIVATE;
  `boolean` `v1.k.t` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`v1.k` v0 @kind this, `v1.k$a` v1 @kind object, `s3.c` v2 @kind object) @signature `Lv1/k;.<init>:(Lv1/k$a;Ls3/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48a16c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48a172.  v0.`v1.k.p` @type ^`v1.k$a` := v1 @kind object;
  #L48a176.  v1:= new `s3.d0`;
  #L48a17a.  call `<init>`(v1, v2) @signature `Ls3/d0;.<init>:(Ls3/c;)V` @kind direct;
  #L48a180.  v0.`v1.k.o` @type ^`s3.d0` := v1 @kind object;
  #L48a184.  v1:= 1I;
  #L48a186.  v0.`v1.k.s` @type ^`boolean` := v1 @kind boolean;
  #L48a18a.  return @kind void;
}
procedure `boolean` `d`(`v1.k` v1 @kind this, `boolean` v2 ) @signature `Lv1/k;.d:(Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L48a088.  v0:= v1.`v1.k.q` @type ^`v1.r2` @kind object;
  #L48a08c.  if v0 == 0 then goto L48a0c6;
  #L48a090.  call temp:= `b`(v0) @signature `Lv1/r2;.b:()Z` @kind interface;
  #L48a096.  v0:= temp;
  #L48a098.  if v0 != 0 then goto L48a0c6;
  #L48a09c.  v0:= v1.`v1.k.q` @type ^`v1.r2` @kind object;
  #L48a0a0.  call temp:= `h`(v0) @signature `Lv1/r2;.h:()Z` @kind interface;
  #L48a0a6.  v0:= temp;
  #L48a0a8.  if v0 != 0 then goto L48a0c2;
  #L48a0ac.  if v2 != 0 then goto L48a0c6;
  #L48a0b0.  v2:= v1.`v1.k.q` @type ^`v1.r2` @kind object;
  #L48a0b4.  call temp:= `l`(v2) @signature `Lv1/r2;.l:()Z` @kind interface;
  #L48a0ba.  v2:= temp;
  #L48a0bc.  if v2 == 0 then goto L48a0c2;
  #L48a0c0.  goto L48a0c6;
  #L48a0c2.  v2:= 0I;
  #L48a0c4.  goto L48a0c8;
  #L48a0c6.  v2:= 1I;
  #L48a0c8.  return v2;
}
procedure `void` `j`(`v1.k` v5 @kind this, `boolean` v6 ) @signature `Lv1/k;.j:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48a2c4.  call temp:= `d`(v5, v6) @signature `Lv1/k;.d:(Z)Z` @kind direct;
  #L48a2ca.  v6:= temp;
  #L48a2cc.  if v6 == 0 then goto L48a2ea;
  #L48a2d0.  v6:= 1I;
  #L48a2d2.  v5.`v1.k.s` @type ^`boolean` := v6 @kind boolean;
  #L48a2d6.  v6:= v5.`v1.k.t` @type ^`boolean` @kind boolean;
  #L48a2da.  if v6 == 0 then goto L48a2e8;
  #L48a2de.  v6:= v5.`v1.k.o` @type ^`s3.d0` @kind object;
  #L48a2e2.  call `b`(v6) @signature `Ls3/d0;.b:()V` @kind virtual;
  #L48a2e8.  return @kind void;
  #L48a2ea.  v6:= v5.`v1.k.r` @type ^`s3.s` @kind object;
  #L48a2ee.  call temp:= `e`(v6) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48a2f4.  v6:= temp @kind object;
  #L48a2f6.  v6:= (`s3.s`) v6 @kind object;
  #L48a2fa.  call temp:= `y`(v6) @signature `Ls3/s;.y:()J` @kind interface;
  #L48a300.  v0:= temp @kind wide;
  #L48a302.  v2:= v5.`v1.k.s` @type ^`boolean` @kind boolean;
  #L48a306.  if v2 == 0 then goto L48a342;
  #L48a30a.  v2:= v5.`v1.k.o` @type ^`s3.d0` @kind object;
  #L48a30e.  call temp:= `y`(v2) @signature `Ls3/d0;.y:()J` @kind virtual;
  #L48a314.  v2:= temp @kind wide;
  #L48a316.  v4:= lcmp(v0, v2);
  #L48a31a.  if v4 >= 0 then goto L48a32a;
  #L48a31e.  v6:= v5.`v1.k.o` @type ^`s3.d0` @kind object;
  #L48a322.  call `c`(v6) @signature `Ls3/d0;.c:()V` @kind virtual;
  #L48a328.  return @kind void;
  #L48a32a.  v2:= 0I;
  #L48a32c.  v5.`v1.k.s` @type ^`boolean` := v2 @kind boolean;
  #L48a330.  v2:= v5.`v1.k.t` @type ^`boolean` @kind boolean;
  #L48a334.  if v2 == 0 then goto L48a342;
  #L48a338.  v2:= v5.`v1.k.o` @type ^`s3.d0` @kind object;
  #L48a33c.  call `b`(v2) @signature `Ls3/d0;.b:()V` @kind virtual;
  #L48a342.  v2:= v5.`v1.k.o` @type ^`s3.d0` @kind object;
  #L48a346.  call `a`(v2, v0) @signature `Ls3/d0;.a:(J)V` @kind virtual;
  #L48a34c.  call temp:= `i`(v6) @signature `Ls3/s;.i:()Lv1/j2;` @kind interface;
  #L48a352.  v6:= temp @kind object;
  #L48a354.  v0:= v5.`v1.k.o` @type ^`s3.d0` @kind object;
  #L48a358.  call temp:= `i`(v0) @signature `Ls3/d0;.i:()Lv1/j2;` @kind virtual;
  #L48a35e.  v0:= temp @kind object;
  #L48a360.  call temp:= `equals`(v6, v0) @signature `Lv1/j2;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48a366.  v0:= temp;
  #L48a368.  if v0 != 0 then goto L48a380;
  #L48a36c.  v0:= v5.`v1.k.o` @type ^`s3.d0` @kind object;
  #L48a370.  call `e`(v0, v6) @signature `Ls3/d0;.e:(Lv1/j2;)V` @kind virtual;
  #L48a376.  v0:= v5.`v1.k.p` @type ^`v1.k$a` @kind object;
  #L48a37a.  call `u`(v0, v6) @signature `Lv1/k$a;.u:(Lv1/j2;)V` @kind interface;
  #L48a380.  return @kind void;
}
procedure `void` `a`(`v1.k` v1 @kind this, `v1.r2` v2 @kind object) @signature `Lv1/k;.a:(Lv1/r2;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48a19c.  v0:= v1.`v1.k.q` @type ^`v1.r2` @kind object;
  #L48a1a0.  if v2 != v0 then goto L48a1b4;
  #L48a1a4.  v2:= 0I;
  #L48a1a6.  v1.`v1.k.r` @type ^`s3.s` := v2 @kind object;
  #L48a1aa.  v1.`v1.k.q` @type ^`v1.r2` := v2 @kind object;
  #L48a1ae.  v2:= 1I;
  #L48a1b0.  v1.`v1.k.s` @type ^`boolean` := v2 @kind boolean;
  #L48a1b4.  return @kind void;
}
procedure `void` `b`(`v1.k` v2 @kind this, `v1.r2` v3 @kind object) @signature `Lv1/k;.b:(Lv1/r2;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48a1c8.  call temp:= `v`(v3) @signature `Lv1/r2;.v:()Ls3/s;` @kind interface;
  #L48a1ce.  v0:= temp @kind object;
  #L48a1d0.  if v0 == 0 then goto L48a214;
  #L48a1d4.  v1:= v2.`v1.k.r` @type ^`s3.s` @kind object;
  #L48a1d8.  if v0 == v1 then goto L48a214;
  #L48a1dc.  if v1 != 0 then goto L48a1fc;
  #L48a1e0.  v2.`v1.k.r` @type ^`s3.s` := v0 @kind object;
  #L48a1e4.  v2.`v1.k.q` @type ^`v1.r2` := v3 @kind object;
  #L48a1e8.  v3:= v2.`v1.k.o` @type ^`s3.d0` @kind object;
  #L48a1ec.  call temp:= `i`(v3) @signature `Ls3/d0;.i:()Lv1/j2;` @kind virtual;
  #L48a1f2.  v3:= temp @kind object;
  #L48a1f4.  call `e`(v0, v3) @signature `Ls3/s;.e:(Lv1/j2;)V` @kind interface;
  #L48a1fa.  goto L48a214;
  #L48a1fc.  v3:= new `java.lang.IllegalStateException`;
  #L48a200.  v0:= "Multiple renderer media clocks enabled." @kind object;
  #L48a204.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48a20a.  call temp:= `d`(v3) @signature `Lv1/n;.d:(Ljava/lang/RuntimeException;)Lv1/n;` @kind static;
  #L48a210.  v3:= temp @kind object;
  #L48a212.  throw v3;
  #L48a214.  return @kind void;
}
procedure `void` `c`(`v1.k` v1 @kind this, `long` v2 ) @signature `Lv1/k;.c:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48a228.  v0:= v1.`v1.k.o` @type ^`s3.d0` @kind object;
  #L48a22c.  call `a`(v0, v2) @signature `Ls3/d0;.a:(J)V` @kind virtual;
  #L48a232.  return @kind void;
}
procedure `void` `e`(`v1.k` v1 @kind this, `v1.j2` v2 @kind object) @signature `Lv1/k;.e:(Lv1/j2;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48a244.  v0:= v1.`v1.k.r` @type ^`s3.s` @kind object;
  #L48a248.  if v0 == 0 then goto L48a25e;
  #L48a24c.  call `e`(v0, v2) @signature `Ls3/s;.e:(Lv1/j2;)V` @kind interface;
  #L48a252.  v2:= v1.`v1.k.r` @type ^`s3.s` @kind object;
  #L48a256.  call temp:= `i`(v2) @signature `Ls3/s;.i:()Lv1/j2;` @kind interface;
  #L48a25c.  v2:= temp @kind object;
  #L48a25e.  v0:= v1.`v1.k.o` @type ^`s3.d0` @kind object;
  #L48a262.  call `e`(v0, v2) @signature `Ls3/d0;.e:(Lv1/j2;)V` @kind virtual;
  #L48a268.  return @kind void;
}
procedure `void` `f`(`v1.k` v1 @kind this) @signature `Lv1/k;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48a27c.  v0:= 1I;
  #L48a27e.  v1.`v1.k.t` @type ^`boolean` := v0 @kind boolean;
  #L48a282.  v0:= v1.`v1.k.o` @type ^`s3.d0` @kind object;
  #L48a286.  call `b`(v0) @signature `Ls3/d0;.b:()V` @kind virtual;
  #L48a28c.  return @kind void;
}
procedure `void` `g`(`v1.k` v1 @kind this) @signature `Lv1/k;.g:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48a2a0.  v0:= 0I;
  #L48a2a2.  v1.`v1.k.t` @type ^`boolean` := v0 @kind boolean;
  #L48a2a6.  v0:= v1.`v1.k.o` @type ^`s3.d0` @kind object;
  #L48a2aa.  call `c`(v0) @signature `Ls3/d0;.c:()V` @kind virtual;
  #L48a2b0.  return @kind void;
}
procedure `long` `h`(`v1.k` v2 @kind this, `boolean` v3 ) @signature `Lv1/k;.h:(Z)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48a11c.  call `j`(v2, v3) @signature `Lv1/k;.j:(Z)V` @kind direct;
  #L48a122.  call temp:= `y`(v2) @signature `Lv1/k;.y:()J` @kind virtual;
  #L48a128.  v0:= temp @kind wide;
  #L48a12a.  return v0 @kind wide;
}
procedure `v1.j2` `i`(`v1.k` v1 @kind this) @signature `Lv1/k;.i:()Lv1/j2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48a13c.  v0:= v1.`v1.k.r` @type ^`s3.s` @kind object;
  #L48a140.  if v0 == 0 then goto L48a14e;
  #L48a144.  call temp:= `i`(v0) @signature `Ls3/s;.i:()Lv1/j2;` @kind interface;
  #L48a14a.  v0:= temp @kind object;
  #L48a14c.  goto L48a15a;
  #L48a14e.  v0:= v1.`v1.k.o` @type ^`s3.d0` @kind object;
  #L48a152.  call temp:= `i`(v0) @signature `Ls3/d0;.i:()Lv1/j2;` @kind virtual;
  #L48a158.  v0:= temp @kind object;
  #L48a15a.  return v0 @kind object;
}
procedure `long` `y`(`v1.k` v2 @kind this) @signature `Lv1/k;.y:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48a0dc.  v0:= v2.`v1.k.s` @type ^`boolean` @kind boolean;
  #L48a0e0.  if v0 == 0 then goto L48a0f2;
  #L48a0e4.  v0:= v2.`v1.k.o` @type ^`s3.d0` @kind object;
  #L48a0e8.  call temp:= `y`(v0) @signature `Ls3/d0;.y:()J` @kind virtual;
  #L48a0ee.  v0:= temp @kind wide;
  #L48a0f0.  goto L48a10a;
  #L48a0f2.  v0:= v2.`v1.k.r` @type ^`s3.s` @kind object;
  #L48a0f6.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48a0fc.  v0:= temp @kind object;
  #L48a0fe.  v0:= (`s3.s`) v0 @kind object;
  #L48a102.  call temp:= `y`(v0) @signature `Ls3/s;.y:()J` @kind interface;
  #L48a108.  v0:= temp @kind wide;
  #L48a10a.  return v0 @kind wide;
}
