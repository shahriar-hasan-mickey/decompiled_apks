record `v1.m2` @kind class @AccessFlag PUBLIC_FINAL {
  `v1.m2$b` `v1.m2.a` @AccessFlag PRIVATE_FINAL;
  `v1.m2$a` `v1.m2.b` @AccessFlag PRIVATE_FINAL;
  `s3.c` `v1.m2.c` @AccessFlag PRIVATE_FINAL;
  `v1.d3` `v1.m2.d` @AccessFlag PRIVATE_FINAL;
  `int` `v1.m2.e` @AccessFlag PRIVATE;
  `java.lang.Object` `v1.m2.f` @AccessFlag PRIVATE;
  `android.os.Looper` `v1.m2.g` @AccessFlag PRIVATE;
  `int` `v1.m2.h` @AccessFlag PRIVATE;
  `long` `v1.m2.i` @AccessFlag PRIVATE;
  `boolean` `v1.m2.j` @AccessFlag PRIVATE;
  `boolean` `v1.m2.k` @AccessFlag PRIVATE;
  `boolean` `v1.m2.l` @AccessFlag PRIVATE;
  `boolean` `v1.m2.m` @AccessFlag PRIVATE;
  `boolean` `v1.m2.n` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`v1.m2` v0 @kind this, `v1.m2$a` v1 @kind object, `v1.m2$b` v2 @kind object, `v1.d3` v3 @kind object, `int` v4 , `s3.c` v5 @kind object, `android.os.Looper` v6 @kind object) @signature `Lv1/m2;.<init>:(Lv1/m2$a;Lv1/m2$b;Lv1/d3;ILs3/c;Landroid/os/Looper;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49cb4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49cb52.  v0.`v1.m2.b` @type ^`v1.m2$a` := v1 @kind object;
  #L49cb56.  v0.`v1.m2.a` @type ^`v1.m2$b` := v2 @kind object;
  #L49cb5a.  v0.`v1.m2.d` @type ^`v1.d3` := v3 @kind object;
  #L49cb5e.  v0.`v1.m2.g` @type ^`android.os.Looper` := v6 @kind object;
  #L49cb62.  v0.`v1.m2.c` @type ^`s3.c` := v5 @kind object;
  #L49cb66.  v0.`v1.m2.h` @type ^`int` := v4;
  #L49cb6a.  v1:= -4.9E-324D;
  #L49cb74.  v0.`v1.m2.i` @type ^`long` := v1 @kind wide;
  #L49cb78.  v1:= 1I;
  #L49cb7a.  v0.`v1.m2.j` @type ^`boolean` := v1 @kind boolean;
  #L49cb7e.  return @kind void;
}
procedure `boolean` `a`(`v1.m2` v6 @kind this, `long` v7 ) @signature `Lv1/m2;.a:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49c924.  @monitorenter v6
  #L49c926.  v0:= v6.`v1.m2.k` @type ^`boolean` @kind boolean;
  #L49c92a.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L49c930.  v0:= v6.`v1.m2.g` @type ^`android.os.Looper` @kind object;
  #L49c934.  call temp:= `getThread`(v0) @signature `Landroid/os/Looper;.getThread:()Ljava/lang/Thread;` @kind virtual;
  #L49c93a.  v0:= temp @kind object;
  #L49c93c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L49c942.  v1:= temp @kind object;
  #L49c944.  if v0 == v1 then goto L49c94c;
  #L49c948.  v0:= 1I;
  #L49c94a.  goto L49c94e;
  #L49c94c.  v0:= 0I;
  #L49c94e.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L49c954.  v0:= v6.`v1.m2.c` @type ^`s3.c` @kind object;
  #L49c958.  call temp:= `b`(v0) @signature `Ls3/c;.b:()J` @kind interface;
  #L49c95e.  v0:= temp @kind wide;
  #L49c960.  v0:= v0 + v7 @kind long;
  #L49c962.  v2:= v6.`v1.m2.m` @type ^`boolean` @kind boolean;
  #L49c966.  if v2 != 0 then goto L49c998;
  #L49c96a.  v3:= 0L;
  #L49c96e.  v5:= lcmp(v7, v3);
  #L49c972.  if v5 <= 0 then goto L49c998;
  #L49c976.  v2:= v6.`v1.m2.c` @type ^`s3.c` @kind object;
  #L49c97a.  call `d`(v2) @signature `Ls3/c;.d:()V` @kind interface;
  #L49c980.  call `wait`(v6, v7) @signature `Ljava/lang/Object;.wait:(J)V` @kind virtual;
  #L49c986.  v7:= v6.`v1.m2.c` @type ^`s3.c` @kind object;
  #L49c98a.  call temp:= `b`(v7) @signature `Ls3/c;.b:()J` @kind interface;
  #L49c990.  v7:= temp @kind wide;
  #L49c992.  v7:= v0 - v7 @kind long;
  #L49c996.  goto L49c962;
  #L49c998.  if v2 == 0 then goto L49c9a4;
  #L49c99c.  v7:= v6.`v1.m2.l` @type ^`boolean` @kind boolean;
  #L49c9a0.  @monitorexit v6
  #L49c9a2.  return v7;
  #L49c9a4.  v7:= new `java.util.concurrent.TimeoutException`;
  #L49c9a8.  v8:= "Message delivery timed out." @kind object;
  #L49c9ac.  call `<init>`(v7, v8) @signature `Ljava/util/concurrent/TimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49c9b2.  throw v7;
  #L49c9b4.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49c9b6.  @monitorexit v6
  #L49c9b8.  throw v7;
  catch `java.lang.Throwable` @[L49c926..L49c9a0] goto L49c9b4;
  catch `java.lang.Throwable` @[L49c9a4..L49c9b4] goto L49c9b4;
}
procedure `boolean` `b`(`v1.m2` v1 @kind this) @signature `Lv1/m2;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49c9e0.  v0:= v1.`v1.m2.j` @type ^`boolean` @kind boolean;
  #L49c9e4.  return v0;
}
procedure `android.os.Looper` `c`(`v1.m2` v1 @kind this) @signature `Lv1/m2;.c:()Landroid/os/Looper;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49c90c.  v0:= v1.`v1.m2.g` @type ^`android.os.Looper` @kind object;
  #L49c910.  return v0 @kind object;
}
procedure `int` `d`(`v1.m2` v1 @kind this) @signature `Lv1/m2;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49ca24.  v0:= v1.`v1.m2.h` @type ^`int`;
  #L49ca28.  return v0;
}
procedure `java.lang.Object` `e`(`v1.m2` v1 @kind this) @signature `Lv1/m2;.e:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49ca54.  v0:= v1.`v1.m2.f` @type ^`java.lang.Object` @kind object;
  #L49ca58.  return v0 @kind object;
}
procedure `long` `f`(`v1.m2` v2 @kind this) @signature `Lv1/m2;.f:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49ca6c.  v0:= v2.`v1.m2.i` @type ^`long` @kind wide;
  #L49ca70.  return v0 @kind wide;
}
procedure `v1.m2$b` `g`(`v1.m2` v1 @kind this) @signature `Lv1/m2;.g:()Lv1/m2$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49cb1c.  v0:= v1.`v1.m2.a` @type ^`v1.m2$b` @kind object;
  #L49cb20.  return v0 @kind object;
}
procedure `v1.d3` `h`(`v1.m2` v1 @kind this) @signature `Lv1/m2;.h:()Lv1/d3;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49cb34.  v0:= v1.`v1.m2.d` @type ^`v1.d3` @kind object;
  #L49cb38.  return v0 @kind object;
}
procedure `int` `i`(`v1.m2` v1 @kind this) @signature `Lv1/m2;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49ca3c.  v0:= v1.`v1.m2.e` @type ^`int`;
  #L49ca40.  return v0;
}
procedure `boolean` `j`(`v1.m2` v1 @kind this) @signature `Lv1/m2;.j:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49c9f8.  @monitorenter v1
  #L49c9fa.  v0:= v1.`v1.m2.n` @type ^`boolean` @kind boolean;
  #L49c9fe.  @monitorexit v1
  #L49ca00.  return v0;
  #L49ca02.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49ca04.  @monitorexit v1
  #L49ca06.  throw v0;
  catch `java.lang.Throwable` @[L49c9fa..L49c9fe] goto L49ca02;
}
procedure `void` `k`(`v1.m2` v1 @kind this, `boolean` v2 ) @signature `Lv1/m2;.k:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49cb90.  @monitorenter v1
  #L49cb92.  v0:= v1.`v1.m2.l` @type ^`boolean` @kind boolean;
  #L49cb96.  v2:= v2 ^| v0 @kind int;
  #L49cb98.  v1.`v1.m2.l` @type ^`boolean` := v2 @kind boolean;
  #L49cb9c.  v2:= 1I;
  #L49cb9e.  v1.`v1.m2.m` @type ^`boolean` := v2 @kind boolean;
  #L49cba2.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L49cba8.  @monitorexit v1
  #L49cbaa.  return @kind void;
  #L49cbac.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49cbae.  @monitorexit v1
  #L49cbb0.  throw v2;
  catch `java.lang.Throwable` @[L49cb92..L49cba8] goto L49cbac;
}
procedure `v1.m2` `l`(`v1.m2` v6 @kind this) @signature `Lv1/m2;.l:()Lv1/m2;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49ca84.  v0:= v6.`v1.m2.k` @type ^`boolean` @kind boolean;
  #L49ca88.  v1:= 1I;
  #L49ca8a.  v0:= v0 ^~ v1 @kind int;
  #L49ca8c.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L49ca92.  v2:= v6.`v1.m2.i` @type ^`long` @kind wide;
  #L49ca96.  v4:= -4.9E-324D;
  #L49caa0.  v0:= lcmp(v2, v4);
  #L49caa4.  if v0 != 0 then goto L49cab2;
  #L49caa8.  v0:= v6.`v1.m2.j` @type ^`boolean` @kind boolean;
  #L49caac.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L49cab2.  v6.`v1.m2.k` @type ^`boolean` := v1 @kind boolean;
  #L49cab6.  v0:= v6.`v1.m2.b` @type ^`v1.m2$a` @kind object;
  #L49caba.  call `d`(v0, v6) @signature `Lv1/m2$a;.d:(Lv1/m2;)V` @kind interface;
  #L49cac0.  return v6 @kind object;
}
procedure `v1.m2` `m`(`v1.m2` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lv1/m2;.m:(Ljava/lang/Object;)Lv1/m2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49cad4.  v0:= v1.`v1.m2.k` @type ^`boolean` @kind boolean;
  #L49cad8.  v0:= v0 ^~ 1;
  #L49cadc.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L49cae2.  v1.`v1.m2.f` @type ^`java.lang.Object` := v2 @kind object;
  #L49cae6.  return v1 @kind object;
}
procedure `v1.m2` `n`(`v1.m2` v1 @kind this, `int` v2 ) @signature `Lv1/m2;.n:(I)Lv1/m2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49caf8.  v0:= v1.`v1.m2.k` @type ^`boolean` @kind boolean;
  #L49cafc.  v0:= v0 ^~ 1;
  #L49cb00.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L49cb06.  v1.`v1.m2.e` @type ^`int` := v2;
  #L49cb0a.  return v1 @kind object;
}
