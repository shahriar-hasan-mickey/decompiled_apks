record `v1.a2` @kind class @AccessFlag FINAL {
  `v1.d3$b` `v1.a2.a` @AccessFlag PRIVATE_FINAL;
  `v1.d3$c` `v1.a2.b` @AccessFlag PRIVATE_FINAL;
  `w1.a` `v1.a2.c` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `v1.a2.d` @AccessFlag PRIVATE_FINAL;
  `long` `v1.a2.e` @AccessFlag PRIVATE;
  `int` `v1.a2.f` @AccessFlag PRIVATE;
  `boolean` `v1.a2.g` @AccessFlag PRIVATE;
  `v1.x1` `v1.a2.h` @AccessFlag PRIVATE;
  `v1.x1` `v1.a2.i` @AccessFlag PRIVATE;
  `v1.x1` `v1.a2.j` @AccessFlag PRIVATE;
  `int` `v1.a2.k` @AccessFlag PRIVATE;
  `java.lang.Object` `v1.a2.l` @AccessFlag PRIVATE;
  `long` `v1.a2.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`v1.a2` v0 @kind this, `w1.a` v1 @kind object, `android.os.Handler` v2 @kind object) @signature `Lv1/a2;.<init>:(Lw1/a;Landroid/os/Handler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49a7ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49a7b2.  v0.`v1.a2.c` @type ^`w1.a` := v1 @kind object;
  #L49a7b6.  v0.`v1.a2.d` @type ^`android.os.Handler` := v2 @kind object;
  #L49a7ba.  v1:= new `v1.d3$b`;
  #L49a7be.  call `<init>`(v1) @signature `Lv1/d3$b;.<init>:()V` @kind direct;
  #L49a7c4.  v0.`v1.a2.a` @type ^`v1.d3$b` := v1 @kind object;
  #L49a7c8.  v1:= new `v1.d3$c`;
  #L49a7cc.  call `<init>`(v1) @signature `Lv1/d3$c;.<init>:()V` @kind direct;
  #L49a7d2.  v0.`v1.a2.b` @type ^`v1.d3$c` := v1 @kind object;
  #L49a7d6.  return @kind void;
}
procedure `x2.u$b` `A`(`v1.d3` v7 @kind object, `java.lang.Object` v8 @kind object, `long` v9 , `long` v11 , `v1.d3$c` v13 @kind object, `v1.d3$b` v14 @kind object) @signature `Lv1/a2;.A:(Lv1/d3;Ljava/lang/Object;JJLv1/d3$c;Lv1/d3$b;)Lx2/u$b;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49a904.  call temp:= `h`(v7, v8, v14) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L49a90a.  v0:= v14.`v1.d3$b.q` @type ^`int`;
  #L49a90e.  call temp:= `n`(v7, v0, v13) @signature `Lv1/d3;.n:(ILv1/d3$c;)Lv1/d3$c;` @kind virtual;
  #L49a914.  call temp:= `b`(v7, v8) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L49a91a.  v0:= temp;
  #L49a91c.  v2:= v8 @kind object;
  #L49a91e.  v3:= v14.`v1.d3$b.r` @type ^`long` @kind wide;
  #L49a922.  v8:= -1I;
  #L49a924.  v5:= 0L;
  #L49a928.  v1:= lcmp(v3, v5);
  #L49a92c.  if v1 != 0 then goto L49a980;
  #L49a930.  call temp:= `e`(v14) @signature `Lv1/d3$b;.e:()I` @kind virtual;
  #L49a936.  v1:= temp;
  #L49a938.  if v1 <= 0 then goto L49a980;
  #L49a93c.  call temp:= `q`(v14) @signature `Lv1/d3$b;.q:()I` @kind virtual;
  #L49a942.  v1:= temp;
  #L49a944.  call temp:= `s`(v14, v1) @signature `Lv1/d3$b;.s:(I)Z` @kind virtual;
  #L49a94a.  v1:= temp;
  #L49a94c.  if v1 == 0 then goto L49a980;
  #L49a950.  call temp:= `g`(v14, v5) @signature `Lv1/d3$b;.g:(J)I` @kind virtual;
  #L49a956.  v1:= temp;
  #L49a958.  if v1 != v8 then goto L49a980;
  #L49a95c.  v1:= v0 + 1;
  #L49a960.  v3:= v13.`v1.d3$c.D` @type ^`int`;
  #L49a964.  if v0 >= v3 then goto L49a980;
  #L49a968.  v8:= 1I;
  #L49a96a.  call temp:= `g`(v7, v1, v14, v8) @signature `Lv1/d3;.g:(ILv1/d3$b;Z)Lv1/d3$b;` @kind virtual;
  #L49a970.  v8:= v14.`v1.d3$b.p` @type ^`java.lang.Object` @kind object;
  #L49a974.  call temp:= `e`(v8) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L49a97a.  v2:= temp @kind object;
  #L49a97c.  v0:= v1;
  #L49a97e.  goto L49a91e;
  #L49a980.  call temp:= `h`(v7, v2, v14) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L49a986.  call temp:= `g`(v14, v9) @signature `Lv1/d3$b;.g:(J)I` @kind virtual;
  #L49a98c.  v3:= temp;
  #L49a98e.  if v3 != v8 then goto L49a9a6;
  #L49a992.  call temp:= `f`(v14, v9) @signature `Lv1/d3$b;.f:(J)I` @kind virtual;
  #L49a998.  v7:= temp;
  #L49a99a.  v8:= new `x2.u$b`;
  #L49a99e.  call `<init>`(v8, v2, v11, v7) @signature `Lx2/u$b;.<init>:(Ljava/lang/Object;JI)V` @kind direct;
  #L49a9a4.  return v8 @kind object;
  #L49a9a6.  call temp:= `m`(v14, v3) @signature `Lv1/d3$b;.m:(I)I` @kind virtual;
  #L49a9ac.  v4:= temp;
  #L49a9ae.  v7:= new `x2.u$b`;
  #L49a9b2.  v1:= v7 @kind object;
  #L49a9b4.  v5:= v11 @kind wide;
  #L49a9b6.  call `<init>`(v1, v2, v3, v4, v5) @signature `Lx2/u$b;.<init>:(Ljava/lang/Object;IIJ)V` @kind direct;
  #L49a9bc.  return v7 @kind object;
}
procedure `long` `C`(`v1.a2` v5 @kind this, `v1.d3` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lv1/a2;.C:(Lv1/d3;Ljava/lang/Object;)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L499d00.  v0:= v5.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L499d04.  call temp:= `h`(v6, v7, v0) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L499d0a.  v0:= temp @kind object;
  #L499d0c.  v0:= v0.`v1.d3$b.q` @type ^`int`;
  #L499d10.  v1:= v5.`v1.a2.l` @type ^`java.lang.Object` @kind object;
  #L499d14.  v2:= -1I;
  #L499d16.  if v1 == 0 then goto L499d40;
  #L499d1a.  call temp:= `b`(v6, v1) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L499d20.  v1:= temp;
  #L499d22.  if v1 == v2 then goto L499d40;
  #L499d26.  v3:= v5.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L499d2a.  call temp:= `f`(v6, v1, v3) @signature `Lv1/d3;.f:(ILv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L499d30.  v1:= temp @kind object;
  #L499d32.  v1:= v1.`v1.d3$b.q` @type ^`int`;
  #L499d36.  if v1 != v0 then goto L499d40;
  #L499d3a.  v6:= v5.`v1.a2.m` @type ^`long` @kind wide;
  #L499d3e.  return v6 @kind wide;
  #L499d40.  v1:= v5.`v1.a2.h` @type ^`v1.x1` @kind object;
  #L499d44.  if v1 == 0 then goto L499d70;
  #L499d48.  v3:= v1.`v1.x1.b` @type ^`java.lang.Object` @kind object;
  #L499d4c.  call temp:= `equals`(v3, v7) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L499d52.  v3:= temp;
  #L499d54.  if v3 == 0 then goto L499d66;
  #L499d58.  v6:= v1.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L499d5c.  v6:= v6.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L499d60.  v6:= v6.`x2.s.d` @type ^`long` @kind wide;
  #L499d64.  return v6 @kind wide;
  #L499d66.  call temp:= `j`(v1) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L499d6c.  v1:= temp @kind object;
  #L499d6e.  goto L499d44;
  #L499d70.  v1:= v5.`v1.a2.h` @type ^`v1.x1` @kind object;
  #L499d74.  if v1 == 0 then goto L499da8;
  #L499d78.  v3:= v1.`v1.x1.b` @type ^`java.lang.Object` @kind object;
  #L499d7c.  call temp:= `b`(v6, v3) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L499d82.  v3:= temp;
  #L499d84.  if v3 == v2 then goto L499d9e;
  #L499d88.  v4:= v5.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L499d8c.  call temp:= `f`(v6, v3, v4) @signature `Lv1/d3;.f:(ILv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L499d92.  v3:= temp @kind object;
  #L499d94.  v3:= v3.`v1.d3$b.q` @type ^`int`;
  #L499d98.  if v3 != v0 then goto L499d9e;
  #L499d9c.  goto L499d58;
  #L499d9e.  call temp:= `j`(v1) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L499da4.  v1:= temp @kind object;
  #L499da6.  goto L499d74;
  #L499da8.  v0:= v5.`v1.a2.e` @type ^`long` @kind wide;
  #L499dac.  v2:= 1L;
  #L499db0.  v2:= v2 + v0 @kind long;
  #L499db2.  v5.`v1.a2.e` @type ^`long` := v2 @kind wide;
  #L499db6.  v6:= v5.`v1.a2.h` @type ^`v1.x1` @kind object;
  #L499dba.  if v6 != 0 then goto L499dc6;
  #L499dbe.  v5.`v1.a2.l` @type ^`java.lang.Object` := v7 @kind object;
  #L499dc2.  v5.`v1.a2.m` @type ^`long` := v0 @kind wide;
  #L499dc6.  return v0 @kind wide;
}
procedure `boolean` `E`(`v1.a2` v8 @kind this, `v1.d3` v9 @kind object) @signature `Lv1/a2;.E:(Lv1/d3;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L499ab8.  v0:= v8.`v1.a2.h` @type ^`v1.x1` @kind object;
  #L499abc.  v1:= 1I;
  #L499abe.  if v0 != 0 then goto L499ac4;
  #L499ac2.  return v1;
  #L499ac4.  v2:= v0.`v1.x1.b` @type ^`java.lang.Object` @kind object;
  #L499ac8.  call temp:= `b`(v9, v2) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L499ace.  v2:= temp;
  #L499ad0.  v3:= v2;
  #L499ad2.  v4:= v8.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L499ad6.  v5:= v8.`v1.a2.b` @type ^`v1.d3$c` @kind object;
  #L499ada.  v6:= v8.`v1.a2.f` @type ^`int`;
  #L499ade.  v7:= v8.`v1.a2.g` @type ^`boolean` @kind boolean;
  #L499ae2.  v2:= v9 @kind object;
  #L499ae4.  call temp:= `d`(v2, v3, v4, v5, v6, v7) @signature `Lv1/d3;.d:(ILv1/d3$b;Lv1/d3$c;IZ)I` @kind virtual;
  #L499aea.  v3:= temp;
  #L499aec.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L499af2.  v2:= temp @kind object;
  #L499af4.  if v2 == 0 then goto L499b0e;
  #L499af8.  v2:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L499afc.  v2:= v2.`v1.y1.g` @type ^`boolean` @kind boolean;
  #L499b00.  if v2 != 0 then goto L499b0e;
  #L499b04.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L499b0a.  v0:= temp @kind object;
  #L499b0c.  goto L499aec;
  #L499b0e.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L499b14.  v2:= temp @kind object;
  #L499b16.  v4:= -1I;
  #L499b18.  if v3 == v4 then goto L499b38;
  #L499b1c.  if v2 != 0 then goto L499b22;
  #L499b20.  goto L499b38;
  #L499b22.  v4:= v2.`v1.x1.b` @type ^`java.lang.Object` @kind object;
  #L499b26.  call temp:= `b`(v9, v4) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L499b2c.  v4:= temp;
  #L499b2e.  if v4 == v3 then goto L499b34;
  #L499b32.  goto L499b38;
  #L499b34.  v0:= v2 @kind object;
  #L499b36.  goto L499ad2;
  #L499b38.  call temp:= `z`(v8, v0) @signature `Lv1/a2;.z:(Lv1/x1;)Z` @kind virtual;
  #L499b3e.  v2:= temp;
  #L499b40.  v3:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L499b44.  call temp:= `r`(v8, v9, v3) @signature `Lv1/a2;.r:(Lv1/d3;Lv1/y1;)Lv1/y1;` @kind virtual;
  #L499b4a.  v9:= temp @kind object;
  #L499b4c.  v0.`v1.x1.f` @type ^`v1.y1` := v9 @kind object;
  #L499b50.  v9:= v2 ^~ 1;
  #L499b54.  return v9;
}
procedure `void` `a`(`v1.a2` v0 @kind object, `m5.q$a` v1 @kind object, `x2.u$b` v2 @kind object) @signature `Lv1/a2;.a:(Lv1/a2;Lm5/q$a;Lx2/u$b;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L49a794.  call `w`(v0, v1, v2) @signature `Lv1/a2;.w:(Lm5/q$a;Lx2/u$b;)V` @kind direct;
  #L49a79a.  return @kind void;
}
procedure `boolean` `d`(`v1.a2` v3 @kind this, `long` v4 , `long` v6 ) @signature `Lv1/a2;.d:(JJ)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L499840.  v0:= -4.9E-324D;
  #L49984a.  v2:= lcmp(v4, v0);
  #L49984e.  if v2 == 0 then goto L499860;
  #L499852.  v0:= lcmp(v4, v6);
  #L499856.  if v0 != 0 then goto L49985c;
  #L49985a.  goto L499860;
  #L49985c.  v4:= 0I;
  #L49985e.  goto L499862;
  #L499860.  v4:= 1I;
  #L499862.  return v4;
}
procedure `boolean` `e`(`v1.a2` v5 @kind this, `v1.y1` v6 @kind object, `v1.y1` v7 @kind object) @signature `Lv1/a2;.e:(Lv1/y1;Lv1/y1;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L499874.  v0:= v6.`v1.y1.b` @type ^`long` @kind wide;
  #L499878.  v2:= v7.`v1.y1.b` @type ^`long` @kind wide;
  #L49987c.  v4:= lcmp(v0, v2);
  #L499880.  if v4 != 0 then goto L49989c;
  #L499884.  v6:= v6.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L499888.  v7:= v7.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L49988c.  call temp:= `equals`(v6, v7) @signature `Lx2/s;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L499892.  v6:= temp;
  #L499894.  if v6 == 0 then goto L49989c;
  #L499898.  v6:= 1I;
  #L49989a.  goto L49989e;
  #L49989c.  v6:= 0I;
  #L49989e.  return v6;
}
procedure `v1.y1` `h`(`v1.a2` v7 @kind this, `v1.i2` v8 @kind object) @signature `Lv1/a2;.h:(Lv1/i2;)Lv1/y1;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L499f94.  v1:= v8.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L499f98.  v2:= v8.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L499f9c.  v3:= v8.`v1.i2.c` @type ^`long` @kind wide;
  #L499fa0.  v5:= v8.`v1.i2.r` @type ^`long` @kind wide;
  #L499fa4.  v0:= v7 @kind object;
  #L499fa6.  call temp:= `k`(v0, v1, v2, v3, v5) @signature `Lv1/a2;.k:(Lv1/d3;Lx2/u$b;JJ)Lv1/y1;` @kind direct;
  #L499fac.  v8:= temp @kind object;
  #L499fae.  return v8 @kind object;
}
procedure `v1.y1` `i`(`v1.a2` v19 @kind this, `v1.d3` v20 @kind object, `v1.x1` v21 @kind object, `long` v22 ) @signature `Lv1/a2;.i:(Lv1/d3;Lv1/x1;J)Lv1/y1;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L499fc0.  v9:= v19 @kind object;
  #L499fc4.  v8:= v20 @kind object;
  #L499fc8.  v10:= v21 @kind object;
  #L499fcc.  v11:= v10.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L499fd0.  call temp:= `l`(v21) @signature `Lv1/x1;.l:()J` @kind virtual;
  #L499fd6.  v0:= temp @kind wide;
  #L499fd8.  v2:= v11.`v1.y1.e` @type ^`long` @kind wide;
  #L499fdc.  v0:= v0 + v2 @kind long;
  #L499fde.  v6:= v0 - v22 @kind long;
  #L499fe2.  v0:= v11.`v1.y1.g` @type ^`boolean` @kind boolean;
  #L499fe6.  v13:= -1I;
  #L499fe8.  v14:= 1I;
  #L499fea.  v15:= -4.9E-324D;
  #L499ff4.  v17:= 0I;
  #L499ff8.  if v0 == 0 then goto L49a19e;
  #L499ffc.  v0:= v11.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L49a000.  v0:= v0.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L49a004.  call temp:= `b`(v8, v0) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L49a00a.  v1:= temp;
  #L49a00c.  v2:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a010.  v3:= v9.`v1.a2.b` @type ^`v1.d3$c` @kind object;
  #L49a014.  v0:= v9.`v1.a2.f` @type ^`int`;
  #L49a018.  v5:= v9.`v1.a2.g` @type ^`boolean` @kind boolean;
  #L49a01c.  v4:= v0;
  #L49a01e.  v0:= v20 @kind object;
  #L49a022.  call temp:= `d`(v0, v1, v2, v3, v4, v5) @signature `Lv1/d3;.d:(ILv1/d3$b;Lv1/d3$c;IZ)I` @kind virtual;
  #L49a028.  v0:= temp;
  #L49a02a.  if v0 != v13 then goto L49a030;
  #L49a02e.  return v17 @kind object;
  #L49a030.  v1:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a034.  call temp:= `g`(v8, v0, v1, v14) @signature `Lv1/d3;.g:(ILv1/d3$b;Z)Lv1/d3$b;` @kind virtual;
  #L49a03a.  v1:= temp @kind object;
  #L49a03c.  v3:= v1.`v1.d3$b.q` @type ^`int`;
  #L49a040.  v1:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a044.  v1:= v1.`v1.d3$b.p` @type ^`java.lang.Object` @kind object;
  #L49a048.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L49a04e.  v1:= temp @kind object;
  #L49a050.  v2:= v11.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L49a054.  v4:= v2.`x2.s.d` @type ^`long` @kind wide;
  #L49a058.  v2:= v9.`v1.a2.b` @type ^`v1.d3$c` @kind object;
  #L49a05c.  call temp:= `n`(v8, v3, v2) @signature `Lv1/d3;.n:(ILv1/d3$c;)Lv1/d3$c;` @kind virtual;
  #L49a062.  v2:= temp @kind object;
  #L49a064.  v2:= v2.`v1.d3$c.C` @type ^`int`;
  #L49a068.  if v2 != v0 then goto L49a0f2;
  #L49a06c.  v1:= v9.`v1.a2.b` @type ^`v1.d3$c` @kind object;
  #L49a070.  v2:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a074.  v4:= -4.9E-324D;
  #L49a07e.  v12:= 0L;
  #L49a082.  call temp:= `max`(v12, v6) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L49a088.  v6:= temp @kind wide;
  #L49a08a.  v0:= v20 @kind object;
  #L49a08e.  call temp:= `k`(v0, v1, v2, v3, v4, v6) @signature `Lv1/d3;.k:(Lv1/d3$c;Lv1/d3$b;IJJ)Landroid/util/Pair;` @kind virtual;
  #L49a094.  v0:= temp @kind object;
  #L49a096.  if v0 != 0 then goto L49a09c;
  #L49a09a.  return v17 @kind object;
  #L49a09c.  v1:= v0.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L49a0a0.  v0:= v0.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L49a0a4.  v0:= (`java.lang.Long`) v0 @kind object;
  #L49a0a8.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L49a0ae.  v4:= temp @kind wide;
  #L49a0b0.  call temp:= `j`(v21) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L49a0b6.  v0:= temp @kind object;
  #L49a0b8.  if v0 == 0 then goto L49a0da;
  #L49a0bc.  v2:= v0.`v1.x1.b` @type ^`java.lang.Object` @kind object;
  #L49a0c0.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L49a0c6.  v2:= temp;
  #L49a0c8.  if v2 == 0 then goto L49a0da;
  #L49a0cc.  v0:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L49a0d0.  v0:= v0.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L49a0d4.  v2:= v0.`x2.s.d` @type ^`long` @kind wide;
  #L49a0d8.  goto L49a0e8;
  #L49a0da.  v2:= v9.`v1.a2.e` @type ^`long` @kind wide;
  #L49a0de.  v6:= 1L;
  #L49a0e2.  v6:= v6 + v2 @kind long;
  #L49a0e4.  v9.`v1.a2.e` @type ^`long` := v6 @kind wide;
  #L49a0e8.  v12:= v4 @kind wide;
  #L49a0ea.  v17:= v15 @kind wide;
  #L49a0ee.  v4:= v2 @kind wide;
  #L49a0f0.  goto L49a0fa;
  #L49a0f2.  v12:= 0L;
  #L49a0f6.  v17:= v12 @kind wide;
  #L49a0fa.  v6:= v9.`v1.a2.b` @type ^`v1.d3$c` @kind object;
  #L49a0fe.  v7:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a102.  v0:= v20 @kind object;
  #L49a106.  v2:= v12 @kind wide;
  #L49a108.  call temp:= `A`(v0, v1, v2, v4, v6, v7) @signature `Lv1/a2;.A:(Lv1/d3;Ljava/lang/Object;JJLv1/d3$c;Lv1/d3$b;)Lx2/u$b;` @kind static;
  #L49a10e.  v2:= temp @kind object;
  #L49a110.  v0:= lcmp(v17, v15);
  #L49a114.  if v0 == 0 then goto L49a186;
  #L49a118.  v0:= v11.`v1.y1.c` @type ^`long` @kind wide;
  #L49a11c.  v3:= lcmp(v0, v15);
  #L49a120.  if v3 == 0 then goto L49a186;
  #L49a124.  v0:= v11.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L49a128.  v0:= v0.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L49a12c.  v1:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a130.  call temp:= `h`(v8, v0, v1) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L49a136.  v0:= temp @kind object;
  #L49a138.  call temp:= `e`(v0) @signature `Lv1/d3$b;.e:()I` @kind virtual;
  #L49a13e.  v0:= temp;
  #L49a140.  if v0 <= 0 then goto L49a15e;
  #L49a144.  v0:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a148.  call temp:= `q`(v0) @signature `Lv1/d3$b;.q:()I` @kind virtual;
  #L49a14e.  v1:= temp;
  #L49a150.  call temp:= `s`(v0, v1) @signature `Lv1/d3$b;.s:(I)Z` @kind virtual;
  #L49a156.  v0:= temp;
  #L49a158.  if v0 == 0 then goto L49a15e;
  #L49a15c.  goto L49a160;
  #L49a15e.  v14:= 0I;
  #L49a160.  call temp:= `b`(v2) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L49a166.  v0:= temp;
  #L49a168.  if v0 == 0 then goto L49a17a;
  #L49a16c.  if v14 == 0 then goto L49a17a;
  #L49a170.  v0:= v11.`v1.y1.c` @type ^`long` @kind wide;
  #L49a174.  v3:= v0 @kind wide;
  #L49a176.  v5:= v12 @kind wide;
  #L49a178.  goto L49a18c;
  #L49a17a.  if v14 == 0 then goto L49a186;
  #L49a17e.  v0:= v11.`v1.y1.c` @type ^`long` @kind wide;
  #L49a182.  v5:= v0 @kind wide;
  #L49a184.  goto L49a188;
  #L49a186.  v5:= v12 @kind wide;
  #L49a188.  v3:= v17 @kind wide;
  #L49a18c.  v0:= v19 @kind object;
  #L49a190.  v1:= v20 @kind object;
  #L49a194.  call temp:= `k`(v0, v1, v2, v3, v5) @signature `Lv1/a2;.k:(Lv1/d3;Lx2/u$b;JJ)Lv1/y1;` @kind direct;
  #L49a19a.  v0:= temp @kind object;
  #L49a19c.  return v0 @kind object;
  #L49a19e.  v0:= -1I;
  #L49a1a0.  v12:= 0L;
  #L49a1a4.  v10:= v11.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L49a1a8.  v1:= v10.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L49a1ac.  v2:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a1b0.  call temp:= `h`(v8, v1, v2) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L49a1b6.  call temp:= `b`(v10) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L49a1bc.  v1:= temp;
  #L49a1be.  if v1 == 0 then goto L49a296;
  #L49a1c2.  v3:= v10.`x2.s.b` @type ^`int`;
  #L49a1c6.  v1:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a1ca.  call temp:= `c`(v1, v3) @signature `Lv1/d3$b;.c:(I)I` @kind virtual;
  #L49a1d0.  v1:= temp;
  #L49a1d2.  if v1 != v0 then goto L49a1d8;
  #L49a1d6.  return v17 @kind object;
  #L49a1d8.  v0:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a1dc.  v2:= v10.`x2.s.c` @type ^`int`;
  #L49a1e0.  call temp:= `n`(v0, v3, v2) @signature `Lv1/d3$b;.n:(II)I` @kind virtual;
  #L49a1e6.  v4:= temp;
  #L49a1e8.  if v4 >= v1 then goto L49a20c;
  #L49a1ec.  v2:= v10.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L49a1f0.  v5:= v11.`v1.y1.c` @type ^`long` @kind wide;
  #L49a1f4.  v10:= v10.`x2.s.d` @type ^`long` @kind wide;
  #L49a1f8.  v0:= v19 @kind object;
  #L49a1fc.  v1:= v20 @kind object;
  #L49a200.  v7:= v10 @kind wide;
  #L49a202.  call temp:= `l`(v0, v1, v2, v3, v4, v5, v7) @signature `Lv1/a2;.l:(Lv1/d3;Ljava/lang/Object;IIJJ)Lv1/y1;` @kind direct;
  #L49a208.  v0:= temp @kind object;
  #L49a20a.  return v0 @kind object;
  #L49a20c.  v0:= v11.`v1.y1.c` @type ^`long` @kind wide;
  #L49a210.  v2:= lcmp(v0, v15);
  #L49a214.  if v2 != 0 then goto L49a258;
  #L49a218.  v1:= v9.`v1.a2.b` @type ^`v1.d3$c` @kind object;
  #L49a21c.  v2:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a220.  v3:= v2.`v1.d3$b.q` @type ^`int`;
  #L49a224.  v4:= -4.9E-324D;
  #L49a22e.  call temp:= `max`(v12, v6) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L49a234.  v6:= temp @kind wide;
  #L49a236.  v0:= v20 @kind object;
  #L49a23a.  call temp:= `k`(v0, v1, v2, v3, v4, v6) @signature `Lv1/d3;.k:(Lv1/d3$c;Lv1/d3$b;IJJ)Landroid/util/Pair;` @kind virtual;
  #L49a240.  v0:= temp @kind object;
  #L49a242.  if v0 != 0 then goto L49a248;
  #L49a246.  return v17 @kind object;
  #L49a248.  v0:= v0.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L49a24c.  v0:= (`java.lang.Long`) v0 @kind object;
  #L49a250.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L49a256.  v0:= temp @kind wide;
  #L49a258.  v2:= v10.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L49a25c.  v3:= v10.`x2.s.b` @type ^`int`;
  #L49a260.  call temp:= `n`(v9, v8, v2, v3) @signature `Lv1/a2;.n:(Lv1/d3;Ljava/lang/Object;I)J` @kind direct;
  #L49a266.  v2:= temp @kind wide;
  #L49a268.  v4:= v10.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L49a26c.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L49a272.  v5:= temp @kind wide;
  #L49a274.  v11:= v11.`v1.y1.c` @type ^`long` @kind wide;
  #L49a278.  v13:= v10.`x2.s.d` @type ^`long` @kind wide;
  #L49a27c.  v0:= v19 @kind object;
  #L49a280.  v1:= v20 @kind object;
  #L49a284.  v2:= v4 @kind object;
  #L49a286.  v3:= v5 @kind wide;
  #L49a288.  v5:= v11 @kind wide;
  #L49a28a.  v7:= v13 @kind wide;
  #L49a28c.  call temp:= `m`(v0, v1, v2, v3, v5, v7) @signature `Lv1/a2;.m:(Lv1/d3;Ljava/lang/Object;JJJ)Lv1/y1;` @kind direct;
  #L49a292.  v0:= temp @kind object;
  #L49a294.  return v0 @kind object;
  #L49a296.  v0:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a29a.  v1:= v10.`x2.s.e` @type ^`int`;
  #L49a29e.  call temp:= `m`(v0, v1) @signature `Lv1/d3$b;.m:(I)I` @kind virtual;
  #L49a2a4.  v4:= temp;
  #L49a2a6.  v0:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a2aa.  v1:= v10.`x2.s.e` @type ^`int`;
  #L49a2ae.  call temp:= `s`(v0, v1) @signature `Lv1/d3$b;.s:(I)Z` @kind virtual;
  #L49a2b4.  v0:= temp;
  #L49a2b6.  if v0 == 0 then goto L49a2d4;
  #L49a2ba.  v0:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a2be.  v1:= v10.`x2.s.e` @type ^`int`;
  #L49a2c2.  call temp:= `j`(v0, v1, v4) @signature `Lv1/d3$b;.j:(II)I` @kind virtual;
  #L49a2c8.  v0:= temp;
  #L49a2ca.  v1:= 3I;
  #L49a2cc.  if v0 != v1 then goto L49a2d4;
  #L49a2d0.  v12:= 1I;
  #L49a2d2.  goto L49a2d6;
  #L49a2d4.  v12:= 0I;
  #L49a2d6.  v0:= v9.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a2da.  v1:= v10.`x2.s.e` @type ^`int`;
  #L49a2de.  call temp:= `c`(v0, v1) @signature `Lv1/d3$b;.c:(I)I` @kind virtual;
  #L49a2e4.  v0:= temp;
  #L49a2e6.  if v4 == v0 then goto L49a314;
  #L49a2ea.  if v12 == 0 then goto L49a2f0;
  #L49a2ee.  goto L49a314;
  #L49a2f0.  v2:= v10.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L49a2f4.  v3:= v10.`x2.s.e` @type ^`int`;
  #L49a2f8.  v5:= v11.`v1.y1.e` @type ^`long` @kind wide;
  #L49a2fc.  v10:= v10.`x2.s.d` @type ^`long` @kind wide;
  #L49a300.  v0:= v19 @kind object;
  #L49a304.  v1:= v20 @kind object;
  #L49a308.  v7:= v10 @kind wide;
  #L49a30a.  call temp:= `l`(v0, v1, v2, v3, v4, v5, v7) @signature `Lv1/a2;.l:(Lv1/d3;Ljava/lang/Object;IIJJ)Lv1/y1;` @kind direct;
  #L49a310.  v0:= temp @kind object;
  #L49a312.  return v0 @kind object;
  #L49a314.  v0:= v10.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L49a318.  v1:= v10.`x2.s.e` @type ^`int`;
  #L49a31c.  call temp:= `n`(v9, v8, v0, v1) @signature `Lv1/a2;.n:(Lv1/d3;Ljava/lang/Object;I)J` @kind direct;
  #L49a322.  v3:= temp @kind wide;
  #L49a324.  v2:= v10.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L49a328.  v5:= v11.`v1.y1.e` @type ^`long` @kind wide;
  #L49a32c.  v10:= v10.`x2.s.d` @type ^`long` @kind wide;
  #L49a330.  v0:= v19 @kind object;
  #L49a334.  v1:= v20 @kind object;
  #L49a338.  v7:= v10 @kind wide;
  #L49a33a.  call temp:= `m`(v0, v1, v2, v3, v5, v7) @signature `Lv1/a2;.m:(Lv1/d3;Ljava/lang/Object;JJJ)Lv1/y1;` @kind direct;
  #L49a340.  v0:= temp @kind object;
  #L49a342.  return v0 @kind object;
}
procedure `v1.y1` `k`(`v1.a2` v12 @kind this, `v1.d3` v13 @kind object, `x2.u$b` v14 @kind object, `long` v15 , `long` v17 ) @signature `Lv1/a2;.k:(Lv1/d3;Lx2/u$b;JJ)Lv1/y1;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L49a354.  v0:= v14 @kind object;
  #L49a356.  v1:= v0.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L49a35a.  v11:= v12 @kind object;
  #L49a35c.  v2:= v11.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a360.  v3:= v13 @kind object;
  #L49a362.  call temp:= `h`(v13, v1, v2) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L49a368.  call temp:= `b`(v14) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L49a36e.  v1:= temp;
  #L49a370.  v4:= v0.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L49a374.  if v1 == 0 then goto L49a394;
  #L49a378.  v5:= v0.`x2.s.b` @type ^`int`;
  #L49a37c.  v6:= v0.`x2.s.c` @type ^`int`;
  #L49a380.  v9:= v0.`x2.s.d` @type ^`long` @kind wide;
  #L49a384.  v2:= v12 @kind object;
  #L49a386.  v3:= v13 @kind object;
  #L49a388.  v7:= v15 @kind wide;
  #L49a38a.  call temp:= `l`(v2, v3, v4, v5, v6, v7, v9) @signature `Lv1/a2;.l:(Lv1/d3;Ljava/lang/Object;IIJJ)Lv1/y1;` @kind direct;
  #L49a390.  v0:= temp @kind object;
  #L49a392.  return v0 @kind object;
  #L49a394.  v9:= v0.`x2.s.d` @type ^`long` @kind wide;
  #L49a398.  v2:= v12 @kind object;
  #L49a39a.  v3:= v13 @kind object;
  #L49a39c.  v5:= v17 @kind wide;
  #L49a3a0.  v7:= v15 @kind wide;
  #L49a3a2.  call temp:= `m`(v2, v3, v4, v5, v7, v9) @signature `Lv1/a2;.m:(Lv1/d3;Ljava/lang/Object;JJJ)Lv1/y1;` @kind direct;
  #L49a3a8.  v0:= temp @kind object;
  #L49a3aa.  return v0 @kind object;
}
procedure `v1.y1` `l`(`v1.a2` v18 @kind this, `v1.d3` v19 @kind object, `java.lang.Object` v20 @kind object, `int` v21 , `int` v22 , `long` v23 , `long` v25 ) @signature `Lv1/a2;.l:(Lv1/d3;Ljava/lang/Object;IIJJ)Lv1/y1;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L49a3bc.  v0:= v18 @kind object;
  #L49a3c0.  v7:= new `x2.u$b`;
  #L49a3c4.  v1:= v7 @kind object;
  #L49a3c6.  v2:= v20 @kind object;
  #L49a3ca.  v3:= v21;
  #L49a3ce.  v4:= v22;
  #L49a3d2.  v5:= v25 @kind wide;
  #L49a3d6.  call `<init>`(v1, v2, v3, v4, v5) @signature `Lx2/u$b;.<init>:(Ljava/lang/Object;IIJ)V` @kind direct;
  #L49a3dc.  v1:= v7.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L49a3e0.  v2:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a3e4.  v3:= v19 @kind object;
  #L49a3e8.  call temp:= `h`(v3, v1, v2) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L49a3ee.  v1:= temp @kind object;
  #L49a3f0.  v2:= v7.`x2.s.b` @type ^`int`;
  #L49a3f4.  v3:= v7.`x2.s.c` @type ^`int`;
  #L49a3f8.  call temp:= `d`(v1, v2, v3) @signature `Lv1/d3$b;.d:(II)J` @kind virtual;
  #L49a3fe.  v9:= temp @kind wide;
  #L49a400.  v1:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a404.  v2:= v21;
  #L49a408.  call temp:= `m`(v1, v2) @signature `Lv1/d3$b;.m:(I)I` @kind virtual;
  #L49a40e.  v1:= temp;
  #L49a410.  v2:= 0L;
  #L49a414.  if v4 != v1 then goto L49a426;
  #L49a418.  v1:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a41c.  call temp:= `i`(v1) @signature `Lv1/d3$b;.i:()J` @kind virtual;
  #L49a422.  v4:= temp @kind wide;
  #L49a424.  goto L49a428;
  #L49a426.  v4:= v2 @kind wide;
  #L49a428.  v1:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a42c.  v6:= v7.`x2.s.b` @type ^`int`;
  #L49a430.  call temp:= `s`(v1, v6) @signature `Lv1/d3$b;.s:(I)Z` @kind virtual;
  #L49a436.  v11:= temp;
  #L49a438.  v12:= -4.9E-324D;
  #L49a442.  v1:= lcmp(v9, v12);
  #L49a446.  if v1 == 0 then goto L49a466;
  #L49a44a.  v1:= lcmp(v4, v9);
  #L49a44e.  if v1 < 0 then goto L49a466;
  #L49a452.  v4:= 1L;
  #L49a456.  v4:= v9 - v4 @kind long;
  #L49a45a.  call temp:= `max`(v2, v4) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L49a460.  v1:= temp @kind wide;
  #L49a462.  v3:= v1 @kind wide;
  #L49a464.  goto L49a468;
  #L49a466.  v3:= v4 @kind wide;
  #L49a468.  v15:= new `v1.y1`;
  #L49a46c.  v12:= -4.9E-324D;
  #L49a476.  v14:= 0I;
  #L49a478.  v16:= 0I;
  #L49a47c.  v17:= 0I;
  #L49a480.  v1:= v15 @kind object;
  #L49a482.  v2:= v7 @kind object;
  #L49a484.  v5:= v23 @kind wide;
  #L49a488.  v7:= v12 @kind wide;
  #L49a48a.  v12:= v14;
  #L49a48c.  v13:= v16;
  #L49a490.  v14:= v17;
  #L49a494.  call `<init>`(v1, v2, v3, v5, v7, v9, v11, v12, v13, v14) @signature `Lv1/y1;.<init>:(Lx2/u$b;JJJJZZZZ)V` @kind direct;
  #L49a49a.  return v15 @kind object;
}
procedure `v1.y1` `m`(`v1.a2` v24 @kind this, `v1.d3` v25 @kind object, `java.lang.Object` v26 @kind object, `long` v27 , `long` v29 , `long` v31 ) @signature `Lv1/a2;.m:(Lv1/d3;Ljava/lang/Object;JJJ)Lv1/y1;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L49a4ac.  v0:= v24 @kind object;
  #L49a4b0.  v1:= v25 @kind object;
  #L49a4b4.  v2:= v26 @kind object;
  #L49a4b8.  v3:= v27 @kind wide;
  #L49a4bc.  v5:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a4c0.  call temp:= `h`(v1, v2, v5) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L49a4c6.  v5:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a4ca.  call temp:= `f`(v5, v3) @signature `Lv1/d3$b;.f:(J)I` @kind virtual;
  #L49a4d0.  v5:= temp;
  #L49a4d2.  v6:= 1I;
  #L49a4d4.  v7:= -1I;
  #L49a4d6.  v8:= 0I;
  #L49a4d8.  v9:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a4dc.  if v5 != v7 then goto L49a506;
  #L49a4e0.  call temp:= `e`(v9) @signature `Lv1/d3$b;.e:()I` @kind virtual;
  #L49a4e6.  v9:= temp;
  #L49a4e8.  if v9 <= 0 then goto L49a540;
  #L49a4ec.  v9:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a4f0.  call temp:= `q`(v9) @signature `Lv1/d3$b;.q:()I` @kind virtual;
  #L49a4f6.  v10:= temp;
  #L49a4f8.  call temp:= `s`(v9, v10) @signature `Lv1/d3$b;.s:(I)Z` @kind virtual;
  #L49a4fe.  v9:= temp;
  #L49a500.  if v9 == 0 then goto L49a540;
  #L49a504.  goto L49a53c;
  #L49a506.  call temp:= `s`(v9, v5) @signature `Lv1/d3$b;.s:(I)Z` @kind virtual;
  #L49a50c.  v9:= temp;
  #L49a50e.  if v9 == 0 then goto L49a540;
  #L49a512.  v9:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a516.  call temp:= `h`(v9, v5) @signature `Lv1/d3$b;.h:(I)J` @kind virtual;
  #L49a51c.  v9:= temp @kind wide;
  #L49a51e.  v11:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a522.  v12:= v11.`v1.d3$b.r` @type ^`long` @kind wide;
  #L49a526.  v14:= lcmp(v9, v12);
  #L49a52a.  if v14 != 0 then goto L49a540;
  #L49a52e.  call temp:= `r`(v11, v5) @signature `Lv1/d3$b;.r:(I)Z` @kind virtual;
  #L49a534.  v9:= temp;
  #L49a536.  if v9 == 0 then goto L49a540;
  #L49a53a.  v5:= -1I;
  #L49a53c.  v9:= 1I;
  #L49a53e.  goto L49a542;
  #L49a540.  v9:= 0I;
  #L49a542.  v11:= new `x2.u$b`;
  #L49a546.  v12:= v31 @kind wide;
  #L49a54a.  call `<init>`(v11, v2, v12, v5) @signature `Lx2/u$b;.<init>:(Ljava/lang/Object;JI)V` @kind direct;
  #L49a550.  call temp:= `s`(v0, v11) @signature `Lv1/a2;.s:(Lx2/u$b;)Z` @kind direct;
  #L49a556.  v2:= temp;
  #L49a558.  call temp:= `u`(v0, v1, v11) @signature `Lv1/a2;.u:(Lv1/d3;Lx2/u$b;)Z` @kind direct;
  #L49a55e.  v22:= temp;
  #L49a560.  call temp:= `t`(v0, v1, v11, v2) @signature `Lv1/a2;.t:(Lv1/d3;Lx2/u$b;Z)Z` @kind direct;
  #L49a566.  v23:= temp;
  #L49a568.  if v5 == v7 then goto L49a582;
  #L49a56c.  v1:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a570.  call temp:= `s`(v1, v5) @signature `Lv1/d3$b;.s:(I)Z` @kind virtual;
  #L49a576.  v1:= temp;
  #L49a578.  if v1 == 0 then goto L49a582;
  #L49a57c.  v20:= 1I;
  #L49a580.  goto L49a586;
  #L49a582.  v20:= 0I;
  #L49a586.  v12:= -4.9E-324D;
  #L49a590.  if v5 == v7 then goto L49a5a6;
  #L49a594.  v1:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a598.  call temp:= `h`(v1, v5) @signature `Lv1/d3$b;.h:(I)J` @kind virtual;
  #L49a59e.  v14:= temp @kind wide;
  #L49a5a0.  v16:= v14 @kind wide;
  #L49a5a4.  goto L49a5b8;
  #L49a5a6.  if v9 == 0 then goto L49a5b4;
  #L49a5aa.  v1:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a5ae.  v14:= v1.`v1.d3$b.r` @type ^`long` @kind wide;
  #L49a5b2.  goto L49a5a0;
  #L49a5b4.  v16:= v12 @kind wide;
  #L49a5b8.  v1:= lcmp(v16, v12);
  #L49a5bc.  if v1 == 0 then goto L49a5d4;
  #L49a5c0.  v14:= -9223372036854775808L;
  #L49a5c4.  v1:= lcmp(v16, v14);
  #L49a5c8.  if v1 != 0 then goto L49a5ce;
  #L49a5cc.  goto L49a5d4;
  #L49a5ce.  v18:= v16 @kind wide;
  #L49a5d2.  goto L49a5e0;
  #L49a5d4.  v1:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a5d8.  v14:= v1.`v1.d3$b.r` @type ^`long` @kind wide;
  #L49a5dc.  v18:= v14 @kind wide;
  #L49a5e0.  v1:= lcmp(v18, v12);
  #L49a5e4.  if v1 == 0 then goto L49a60e;
  #L49a5e8.  v1:= lcmp(v3, v18);
  #L49a5ec.  if v1 < 0 then goto L49a60e;
  #L49a5f0.  if v23 != 0 then goto L49a5fc;
  #L49a5f4.  if v9 != 0 then goto L49a5fa;
  #L49a5f8.  goto L49a5fc;
  #L49a5fa.  v6:= 0I;
  #L49a5fc.  v3:= 0L;
  #L49a600.  v5:= (`long`) v6 @kind i2l;
  #L49a602.  v5:= v18 - v5 @kind long;
  #L49a606.  call temp:= `max`(v3, v5) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L49a60c.  v3:= temp @kind wide;
  #L49a60e.  v12:= v3 @kind wide;
  #L49a610.  v1:= new `v1.y1`;
  #L49a614.  v10:= v1 @kind object;
  #L49a616.  v14:= v29 @kind wide;
  #L49a61a.  v21:= v2;
  #L49a61e.  call `<init>`(v10, v11, v12, v14, v16, v18, v20, v21, v22, v23) @signature `Lv1/y1;.<init>:(Lx2/u$b;JJJJZZZZ)V` @kind direct;
  #L49a624.  return v1 @kind object;
}
procedure `long` `n`(`v1.a2` v3 @kind this, `v1.d3` v4 @kind object, `java.lang.Object` v5 @kind object, `int` v6 ) @signature `Lv1/a2;.n:(Lv1/d3;Ljava/lang/Object;I)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L499cb4.  v0:= v3.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L499cb8.  call temp:= `h`(v4, v5, v0) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L499cbe.  v4:= v3.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L499cc2.  call temp:= `h`(v4, v6) @signature `Lv1/d3$b;.h:(I)J` @kind virtual;
  #L499cc8.  v4:= temp @kind wide;
  #L499cca.  v0:= -9223372036854775808L;
  #L499cce.  v2:= lcmp(v4, v0);
  #L499cd2.  if v2 != 0 then goto L499ce0;
  #L499cd6.  v4:= v3.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L499cda.  v4:= v4.`v1.d3$b.r` @type ^`long` @kind wide;
  #L499cde.  return v4 @kind wide;
  #L499ce0.  v0:= v3.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L499ce4.  call temp:= `k`(v0, v6) @signature `Lv1/d3$b;.k:(I)J` @kind virtual;
  #L499cea.  v0:= temp @kind wide;
  #L499cec.  v4:= v4 + v0 @kind long;
  #L499cee.  return v4 @kind wide;
}
procedure `boolean` `s`(`v1.a2` v1 @kind this, `x2.u$b` v2 @kind object) @signature `Lv1/a2;.s:(Lx2/u$b;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4998b0.  call temp:= `b`(v2) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L4998b6.  v0:= temp;
  #L4998b8.  if v0 != 0 then goto L4998ca;
  #L4998bc.  v2:= v2.`x2.s.e` @type ^`int`;
  #L4998c0.  v0:= -1I;
  #L4998c2.  if v2 != v0 then goto L4998ca;
  #L4998c6.  v2:= 1I;
  #L4998c8.  goto L4998cc;
  #L4998ca.  v2:= 0I;
  #L4998cc.  return v2;
}
procedure `boolean` `t`(`v1.a2` v6 @kind this, `v1.d3` v7 @kind object, `x2.u$b` v8 @kind object, `boolean` v9 ) @signature `Lv1/a2;.t:(Lv1/d3;Lx2/u$b;Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4998e0.  v8:= v8.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L4998e4.  call temp:= `b`(v7, v8) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L4998ea.  v1:= temp;
  #L4998ec.  v8:= v6.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L4998f0.  call temp:= `f`(v7, v1, v8) @signature `Lv1/d3;.f:(ILv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L4998f6.  v8:= temp @kind object;
  #L4998f8.  v8:= v8.`v1.d3$b.q` @type ^`int`;
  #L4998fc.  v0:= v6.`v1.a2.b` @type ^`v1.d3$c` @kind object;
  #L499900.  call temp:= `n`(v7, v8, v0) @signature `Lv1/d3;.n:(ILv1/d3$c;)Lv1/d3$c;` @kind virtual;
  #L499906.  v8:= temp @kind object;
  #L499908.  v8:= v8.`v1.d3$c.w` @type ^`boolean` @kind boolean;
  #L49990c.  if v8 != 0 then goto L499936;
  #L499910.  v2:= v6.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L499914.  v3:= v6.`v1.a2.b` @type ^`v1.d3$c` @kind object;
  #L499918.  v4:= v6.`v1.a2.f` @type ^`int`;
  #L49991c.  v5:= v6.`v1.a2.g` @type ^`boolean` @kind boolean;
  #L499920.  v0:= v7 @kind object;
  #L499922.  call temp:= `r`(v0, v1, v2, v3, v4, v5) @signature `Lv1/d3;.r:(ILv1/d3$b;Lv1/d3$c;IZ)Z` @kind virtual;
  #L499928.  v7:= temp;
  #L49992a.  if v7 == 0 then goto L499936;
  #L49992e.  if v9 == 0 then goto L499936;
  #L499932.  v7:= 1I;
  #L499934.  goto L499938;
  #L499936.  v7:= 0I;
  #L499938.  return v7;
}
procedure `boolean` `u`(`v1.a2` v3 @kind this, `v1.d3` v4 @kind object, `x2.u$b` v5 @kind object) @signature `Lv1/a2;.u:(Lv1/d3;Lx2/u$b;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L49994c.  call temp:= `s`(v3, v5) @signature `Lv1/a2;.s:(Lx2/u$b;)Z` @kind direct;
  #L499952.  v0:= temp;
  #L499954.  v1:= 0I;
  #L499956.  if v0 != 0 then goto L49995c;
  #L49995a.  return v1;
  #L49995c.  v0:= v5.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L499960.  v2:= v3.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L499964.  call temp:= `h`(v4, v0, v2) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L49996a.  v0:= temp @kind object;
  #L49996c.  v0:= v0.`v1.d3$b.q` @type ^`int`;
  #L499970.  v5:= v5.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L499974.  call temp:= `b`(v4, v5) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L49997a.  v5:= temp;
  #L49997c.  v2:= v3.`v1.a2.b` @type ^`v1.d3$c` @kind object;
  #L499980.  call temp:= `n`(v4, v0, v2) @signature `Lv1/d3;.n:(ILv1/d3$c;)Lv1/d3$c;` @kind virtual;
  #L499986.  v4:= temp @kind object;
  #L499988.  v4:= v4.`v1.d3$c.D` @type ^`int`;
  #L49998c.  if v4 != v5 then goto L499992;
  #L499990.  v1:= 1I;
  #L499992.  return v1;
}
procedure `void` `w`(`v1.a2` v1 @kind this, `m5.q$a` v2 @kind object, `x2.u$b` v3 @kind object) @signature `Lv1/a2;.w:(Lm5/q$a;Lx2/u$b;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L49a85c.  v0:= v1.`v1.a2.c` @type ^`w1.a` @kind object;
  #L49a860.  call temp:= `h`(v2) @signature `Lm5/q$a;.h:()Lm5/q;` @kind virtual;
  #L49a866.  v2:= temp @kind object;
  #L49a868.  call `l0`(v0, v2, v3) @signature `Lw1/a;.l0:(Ljava/util/List;Lx2/u$b;)V` @kind interface;
  #L49a86e.  return @kind void;
}
procedure `void` `x`(`v1.a2` v4 @kind this) @signature `Lv1/a2;.x:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L49a880.  call temp:= `N`() @signature `Lm5/q;.N:()Lm5/q$a;` @kind static;
  #L49a886.  v0:= temp @kind object;
  #L49a888.  v1:= v4.`v1.a2.h` @type ^`v1.x1` @kind object;
  #L49a88c.  if v1 == 0 then goto L49a8a8;
  #L49a890.  v2:= v1.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L49a894.  v2:= v2.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L49a898.  call temp:= `f`(v0, v2) @signature `Lm5/q$a;.f:(Ljava/lang/Object;)Lm5/q$a;` @kind virtual;
  #L49a89e.  call temp:= `j`(v1) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L49a8a4.  v1:= temp @kind object;
  #L49a8a6.  goto L49a88c;
  #L49a8a8.  v1:= v4.`v1.a2.i` @type ^`v1.x1` @kind object;
  #L49a8ac.  if v1 != 0 then goto L49a8b4;
  #L49a8b0.  v1:= 0I;
  #L49a8b2.  goto L49a8bc;
  #L49a8b4.  v1:= v1.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L49a8b8.  v1:= v1.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L49a8bc.  v2:= v4.`v1.a2.d` @type ^`android.os.Handler` @kind object;
  #L49a8c0.  v3:= new `v1.z1`;
  #L49a8c4.  call `<init>`(v3, v4, v0, v1) @signature `Lv1/z1;.<init>:(Lv1/a2;Lm5/q$a;Lx2/u$b;)V` @kind direct;
  #L49a8ca.  call temp:= `post`(v2, v3) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L49a8d0.  return @kind void;
}
procedure `x2.u$b` `B`(`v1.a2` v10 @kind this, `v1.d3` v11 @kind object, `java.lang.Object` v12 @kind object, `long` v13 ) @signature `Lv1/a2;.B:(Lv1/d3;Ljava/lang/Object;J)Lx2/u$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L49a9d0.  call temp:= `C`(v10, v11, v12) @signature `Lv1/a2;.C:(Lv1/d3;Ljava/lang/Object;)J` @kind direct;
  #L49a9d6.  v4:= temp @kind wide;
  #L49a9d8.  v0:= v10.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a9dc.  call temp:= `h`(v11, v12, v0) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L49a9e2.  v0:= v10.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a9e6.  v0:= v0.`v1.d3$b.q` @type ^`int`;
  #L49a9ea.  v1:= v10.`v1.a2.b` @type ^`v1.d3$c` @kind object;
  #L49a9ee.  call temp:= `n`(v11, v0, v1) @signature `Lv1/d3;.n:(ILv1/d3$c;)Lv1/d3$c;` @kind virtual;
  #L49a9f4.  call temp:= `b`(v11, v12) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L49a9fa.  v0:= temp;
  #L49a9fc.  v1:= 0I;
  #L49a9fe.  v2:= 0I;
  #L49aa00.  v3:= v10.`v1.a2.b` @type ^`v1.d3$c` @kind object;
  #L49aa04.  v3:= v3.`v1.d3$c.C` @type ^`int`;
  #L49aa08.  if v0 < v3 then goto L49aa78;
  #L49aa0c.  v3:= v10.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49aa10.  v6:= 1I;
  #L49aa12.  call temp:= `g`(v11, v0, v3, v6) @signature `Lv1/d3;.g:(ILv1/d3$b;Z)Lv1/d3$b;` @kind virtual;
  #L49aa18.  v3:= v10.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49aa1c.  call temp:= `e`(v3) @signature `Lv1/d3$b;.e:()I` @kind virtual;
  #L49aa22.  v3:= temp;
  #L49aa24.  if v3 <= 0 then goto L49aa2a;
  #L49aa28.  goto L49aa2c;
  #L49aa2a.  v6:= 0I;
  #L49aa2c.  v2:= v2 ^| v6 @kind int;
  #L49aa2e.  v3:= v10.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49aa32.  v7:= v3.`v1.d3$b.r` @type ^`long` @kind wide;
  #L49aa36.  call temp:= `g`(v3, v7) @signature `Lv1/d3$b;.g:(J)I` @kind virtual;
  #L49aa3c.  v3:= temp;
  #L49aa3e.  v7:= -1I;
  #L49aa40.  if v3 == v7 then goto L49aa54;
  #L49aa44.  v12:= v10.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49aa48.  v12:= v12.`v1.d3$b.p` @type ^`java.lang.Object` @kind object;
  #L49aa4c.  call temp:= `e`(v12) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L49aa52.  v12:= temp @kind object;
  #L49aa54.  if v2 == 0 then goto L49aa72;
  #L49aa58.  if v6 == 0 then goto L49aa78;
  #L49aa5c.  v3:= v10.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49aa60.  v6:= v3.`v1.d3$b.r` @type ^`long` @kind wide;
  #L49aa64.  v8:= 0L;
  #L49aa68.  v3:= lcmp(v6, v8);
  #L49aa6c.  if v3 == 0 then goto L49aa72;
  #L49aa70.  goto L49aa78;
  #L49aa72.  v0:= v0 + -1;
  #L49aa76.  goto L49aa00;
  #L49aa78.  v1:= v12 @kind object;
  #L49aa7a.  v6:= v10.`v1.a2.b` @type ^`v1.d3$c` @kind object;
  #L49aa7e.  v7:= v10.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49aa82.  v0:= v11 @kind object;
  #L49aa84.  v2:= v13 @kind wide;
  #L49aa86.  call temp:= `A`(v0, v1, v2, v4, v6, v7) @signature `Lv1/a2;.A:(Lv1/d3;Ljava/lang/Object;JJLv1/d3$c;Lv1/d3$b;)Lx2/u$b;` @kind static;
  #L49aa8c.  v11:= temp @kind object;
  #L49aa8e.  return v11 @kind object;
}
procedure `boolean` `D`(`v1.a2` v5 @kind this) @signature `Lv1/a2;.D:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L499a54.  v0:= v5.`v1.a2.j` @type ^`v1.x1` @kind object;
  #L499a58.  if v0 == 0 then goto L499aa4;
  #L499a5c.  v1:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L499a60.  v1:= v1.`v1.y1.i` @type ^`boolean` @kind boolean;
  #L499a64.  if v1 != 0 then goto L499aa0;
  #L499a68.  call temp:= `q`(v0) @signature `Lv1/x1;.q:()Z` @kind virtual;
  #L499a6e.  v0:= temp;
  #L499a70.  if v0 == 0 then goto L499aa0;
  #L499a74.  v0:= v5.`v1.a2.j` @type ^`v1.x1` @kind object;
  #L499a78.  v0:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L499a7c.  v0:= v0.`v1.y1.e` @type ^`long` @kind wide;
  #L499a80.  v2:= -4.9E-324D;
  #L499a8a.  v4:= lcmp(v0, v2);
  #L499a8e.  if v4 == 0 then goto L499aa0;
  #L499a92.  v0:= v5.`v1.a2.k` @type ^`int`;
  #L499a96.  v1:= 100I;
  #L499a9a.  if v0 >= v1 then goto L499aa0;
  #L499a9e.  goto L499aa4;
  #L499aa0.  v0:= 0I;
  #L499aa2.  goto L499aa6;
  #L499aa4.  v0:= 1I;
  #L499aa6.  return v0;
}
procedure `boolean` `F`(`v1.a2` v8 @kind this, `v1.d3` v9 @kind object, `long` v10 , `long` v12 ) @signature `Lv1/a2;.F:(Lv1/d3;JJ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L499b68.  v0:= v8.`v1.a2.h` @type ^`v1.x1` @kind object;
  #L499b6c.  v1:= 0I;
  #L499b6e.  v2:= 1I;
  #L499b70.  if v0 == 0 then goto L499c62;
  #L499b74.  v3:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L499b78.  if v1 != 0 then goto L499b86;
  #L499b7c.  call temp:= `r`(v8, v9, v3) @signature `Lv1/a2;.r:(Lv1/d3;Lv1/y1;)Lv1/y1;` @kind virtual;
  #L499b82.  v1:= temp @kind object;
  #L499b84.  goto L499bb8;
  #L499b86.  call temp:= `i`(v8, v9, v1, v10) @signature `Lv1/a2;.i:(Lv1/d3;Lv1/x1;J)Lv1/y1;` @kind direct;
  #L499b8c.  v4:= temp @kind object;
  #L499b8e.  if v4 != 0 then goto L499b9e;
  #L499b92.  call temp:= `z`(v8, v1) @signature `Lv1/a2;.z:(Lv1/x1;)Z` @kind virtual;
  #L499b98.  v9:= temp;
  #L499b9a.  v9:= v9 ^~ v2 @kind int;
  #L499b9c.  return v9;
  #L499b9e.  call temp:= `e`(v8, v3, v4) @signature `Lv1/a2;.e:(Lv1/y1;Lv1/y1;)Z` @kind direct;
  #L499ba4.  v5:= temp;
  #L499ba6.  if v5 != 0 then goto L499bb6;
  #L499baa.  call temp:= `z`(v8, v1) @signature `Lv1/a2;.z:(Lv1/x1;)Z` @kind virtual;
  #L499bb0.  v9:= temp;
  #L499bb2.  v9:= v9 ^~ v2 @kind int;
  #L499bb4.  return v9;
  #L499bb6.  v1:= v4 @kind object;
  #L499bb8.  v4:= v3.`v1.y1.c` @type ^`long` @kind wide;
  #L499bbc.  call temp:= `a`(v1, v4) @signature `Lv1/y1;.a:(J)Lv1/y1;` @kind virtual;
  #L499bc2.  v4:= temp @kind object;
  #L499bc4.  v0.`v1.x1.f` @type ^`v1.y1` := v4 @kind object;
  #L499bc8.  v3:= v3.`v1.y1.e` @type ^`long` @kind wide;
  #L499bcc.  v5:= v1.`v1.y1.e` @type ^`long` @kind wide;
  #L499bd0.  call temp:= `d`(v8, v3, v5) @signature `Lv1/a2;.d:(JJ)Z` @kind direct;
  #L499bd6.  v3:= temp;
  #L499bd8.  if v3 != 0 then goto L499c52;
  #L499bdc.  call `A`(v0) @signature `Lv1/x1;.A:()V` @kind virtual;
  #L499be2.  v9:= v1.`v1.y1.e` @type ^`long` @kind wide;
  #L499be6.  v3:= -4.9E-324D;
  #L499bf0.  v11:= lcmp(v9, v3);
  #L499bf4.  if v11 != 0 then goto L499c04;
  #L499bf8.  v9:= 9223372036854775807L;
  #L499c02.  goto L499c0c;
  #L499c04.  call temp:= `z`(v0, v9) @signature `Lv1/x1;.z:(J)J` @kind virtual;
  #L499c0a.  v9:= temp @kind wide;
  #L499c0c.  v11:= v8.`v1.a2.i` @type ^`v1.x1` @kind object;
  #L499c10.  v1:= 0I;
  #L499c12.  if v0 != v11 then goto L499c3a;
  #L499c16.  v11:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L499c1a.  v11:= v11.`v1.y1.f` @type ^`boolean` @kind boolean;
  #L499c1e.  if v11 != 0 then goto L499c3a;
  #L499c22.  v3:= -9223372036854775808L;
  #L499c26.  v11:= lcmp(v12, v3);
  #L499c2a.  if v11 == 0 then goto L499c36;
  #L499c2e.  v11:= lcmp(v12, v9);
  #L499c32.  if v11 < 0 then goto L499c3a;
  #L499c36.  v9:= 1I;
  #L499c38.  goto L499c3c;
  #L499c3a.  v9:= 0I;
  #L499c3c.  call temp:= `z`(v8, v0) @signature `Lv1/a2;.z:(Lv1/x1;)Z` @kind virtual;
  #L499c42.  v10:= temp;
  #L499c44.  if v10 != 0 then goto L499c4e;
  #L499c48.  if v9 != 0 then goto L499c4e;
  #L499c4c.  goto L499c50;
  #L499c4e.  v2:= 0I;
  #L499c50.  return v2;
  #L499c52.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L499c58.  v1:= temp @kind object;
  #L499c5a.  v7:= v1 @kind object;
  #L499c5c.  v1:= v0 @kind object;
  #L499c5e.  v0:= v7 @kind object;
  #L499c60.  goto L499b6e;
  #L499c62.  return v2;
}
procedure `boolean` `G`(`v1.a2` v0 @kind this, `v1.d3` v1 @kind object, `int` v2 ) @signature `Lv1/a2;.G:(Lv1/d3;I)Z` @AccessFlag PUBLIC {
    temp;

  #L499c74.  v0.`v1.a2.f` @type ^`int` := v2;
  #L499c78.  call temp:= `E`(v0, v1) @signature `Lv1/a2;.E:(Lv1/d3;)Z` @kind direct;
  #L499c7e.  v1:= temp;
  #L499c80.  return v1;
}
procedure `boolean` `H`(`v1.a2` v0 @kind this, `v1.d3` v1 @kind object, `boolean` v2 ) @signature `Lv1/a2;.H:(Lv1/d3;Z)Z` @AccessFlag PUBLIC {
    temp;

  #L499c94.  v0.`v1.a2.g` @type ^`boolean` := v2 @kind boolean;
  #L499c98.  call temp:= `E`(v0, v1) @signature `Lv1/a2;.E:(Lv1/d3;)Z` @kind direct;
  #L499c9e.  v1:= temp;
  #L499ca0.  return v1;
}
procedure `v1.x1` `b`(`v1.a2` v3 @kind this) @signature `Lv1/a2;.b:()Lv1/x1;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L499dd8.  v0:= v3.`v1.a2.h` @type ^`v1.x1` @kind object;
  #L499ddc.  v1:= 0I;
  #L499dde.  if v0 != 0 then goto L499de4;
  #L499de2.  return v1 @kind object;
  #L499de4.  v2:= v3.`v1.a2.i` @type ^`v1.x1` @kind object;
  #L499de8.  if v0 != v2 then goto L499df8;
  #L499dec.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L499df2.  v0:= temp @kind object;
  #L499df4.  v3.`v1.a2.i` @type ^`v1.x1` := v0 @kind object;
  #L499df8.  v0:= v3.`v1.a2.h` @type ^`v1.x1` @kind object;
  #L499dfc.  call `t`(v0) @signature `Lv1/x1;.t:()V` @kind virtual;
  #L499e02.  v0:= v3.`v1.a2.k` @type ^`int`;
  #L499e06.  v0:= v0 + -1;
  #L499e0a.  v3.`v1.a2.k` @type ^`int` := v0;
  #L499e0e.  if v0 != 0 then goto L499e32;
  #L499e12.  v3.`v1.a2.j` @type ^`v1.x1` := v1 @kind object;
  #L499e16.  v0:= v3.`v1.a2.h` @type ^`v1.x1` @kind object;
  #L499e1a.  v1:= v0.`v1.x1.b` @type ^`java.lang.Object` @kind object;
  #L499e1e.  v3.`v1.a2.l` @type ^`java.lang.Object` := v1 @kind object;
  #L499e22.  v0:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L499e26.  v0:= v0.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L499e2a.  v0:= v0.`x2.s.d` @type ^`long` @kind wide;
  #L499e2e.  v3.`v1.a2.m` @type ^`long` := v0 @kind wide;
  #L499e32.  v0:= v3.`v1.a2.h` @type ^`v1.x1` @kind object;
  #L499e36.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L499e3c.  v0:= temp @kind object;
  #L499e3e.  v3.`v1.a2.h` @type ^`v1.x1` := v0 @kind object;
  #L499e42.  call `x`(v3) @signature `Lv1/a2;.x:()V` @kind direct;
  #L499e48.  v0:= v3.`v1.a2.h` @type ^`v1.x1` @kind object;
  #L499e4c.  return v0 @kind object;
}
procedure `v1.x1` `c`(`v1.a2` v1 @kind this) @signature `Lv1/a2;.c:()Lv1/x1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L499e60.  v0:= v1.`v1.a2.i` @type ^`v1.x1` @kind object;
  #L499e64.  if v0 == 0 then goto L499e78;
  #L499e68.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L499e6e.  v0:= temp @kind object;
  #L499e70.  if v0 == 0 then goto L499e78;
  #L499e74.  v0:= 1I;
  #L499e76.  goto L499e7a;
  #L499e78.  v0:= 0I;
  #L499e7a.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L499e80.  v0:= v1.`v1.a2.i` @type ^`v1.x1` @kind object;
  #L499e84.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L499e8a.  v0:= temp @kind object;
  #L499e8c.  v1.`v1.a2.i` @type ^`v1.x1` := v0 @kind object;
  #L499e90.  call `x`(v1) @signature `Lv1/a2;.x:()V` @kind direct;
  #L499e96.  v0:= v1.`v1.a2.i` @type ^`v1.x1` @kind object;
  #L499e9a.  return v0 @kind object;
}
procedure `void` `f`(`v1.a2` v3 @kind this) @signature `Lv1/a2;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L49a7e8.  v0:= v3.`v1.a2.k` @type ^`int`;
  #L49a7ec.  if v0 != 0 then goto L49a7f2;
  #L49a7f0.  return @kind void;
  #L49a7f2.  v0:= v3.`v1.a2.h` @type ^`v1.x1` @kind object;
  #L49a7f6.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L49a7fc.  v0:= temp @kind object;
  #L49a7fe.  v0:= (`v1.x1`) v0 @kind object;
  #L49a802.  v1:= v0.`v1.x1.b` @type ^`java.lang.Object` @kind object;
  #L49a806.  v3.`v1.a2.l` @type ^`java.lang.Object` := v1 @kind object;
  #L49a80a.  v1:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L49a80e.  v1:= v1.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L49a812.  v1:= v1.`x2.s.d` @type ^`long` @kind wide;
  #L49a816.  v3.`v1.a2.m` @type ^`long` := v1 @kind wide;
  #L49a81a.  if v0 == 0 then goto L49a82e;
  #L49a81e.  call `t`(v0) @signature `Lv1/x1;.t:()V` @kind virtual;
  #L49a824.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L49a82a.  v0:= temp @kind object;
  #L49a82c.  goto L49a81a;
  #L49a82e.  v0:= 0I;
  #L49a830.  v3.`v1.a2.h` @type ^`v1.x1` := v0 @kind object;
  #L49a834.  v3.`v1.a2.j` @type ^`v1.x1` := v0 @kind object;
  #L49a838.  v3.`v1.a2.i` @type ^`v1.x1` := v0 @kind object;
  #L49a83c.  v0:= 0I;
  #L49a83e.  v3.`v1.a2.k` @type ^`int` := v0;
  #L49a842.  call `x`(v3) @signature `Lv1/a2;.x:()V` @kind direct;
  #L49a848.  return @kind void;
}
procedure `v1.x1` `g`(`v1.a2` v12 @kind this, `v1.t2`[] v13 @kind object, `q3.a0` v14 @kind object, `r3.b` v15 @kind object, `v1.d2` v16 @kind object, `v1.y1` v17 @kind object, `q3.b0` v18 @kind object) @signature `Lv1/a2;.g:([Lv1/t2;Lq3/a0;Lr3/b;Lv1/d2;Lv1/y1;Lq3/b0;)Lv1/x1;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L499eac.  v0:= v12 @kind object;
  #L499eae.  v1:= v0.`v1.a2.j` @type ^`v1.x1` @kind object;
  #L499eb2.  if v1 != 0 then goto L499ec6;
  #L499eb6.  v1:= 1000000000000L;
  #L499ec0.  v10:= v17 @kind object;
  #L499ec4.  goto L499ee6;
  #L499ec6.  call temp:= `l`(v1) @signature `Lv1/x1;.l:()J` @kind virtual;
  #L499ecc.  v1:= temp @kind wide;
  #L499ece.  v3:= v0.`v1.a2.j` @type ^`v1.x1` @kind object;
  #L499ed2.  v3:= v3.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L499ed6.  v3:= v3.`v1.y1.e` @type ^`long` @kind wide;
  #L499eda.  v1:= v1 + v3 @kind long;
  #L499edc.  v10:= v17 @kind object;
  #L499ee0.  v3:= v10.`v1.y1.b` @type ^`long` @kind wide;
  #L499ee4.  v1:= v1 - v3 @kind long;
  #L499ee6.  v5:= v1 @kind wide;
  #L499ee8.  v1:= new `v1.x1`;
  #L499eec.  v3:= v1 @kind object;
  #L499eee.  v4:= v13 @kind object;
  #L499ef0.  v7:= v14 @kind object;
  #L499ef2.  v8:= v15 @kind object;
  #L499ef4.  v9:= v16 @kind object;
  #L499ef8.  v10:= v17 @kind object;
  #L499efc.  v11:= v18 @kind object;
  #L499f00.  call `<init>`(v3, v4, v5, v7, v8, v9, v10, v11) @signature `Lv1/x1;.<init>:([Lv1/t2;JLq3/a0;Lr3/b;Lv1/d2;Lv1/y1;Lq3/b0;)V` @kind direct;
  #L499f06.  v2:= v0.`v1.a2.j` @type ^`v1.x1` @kind object;
  #L499f0a.  if v2 == 0 then goto L499f16;
  #L499f0e.  call `w`(v2, v1) @signature `Lv1/x1;.w:(Lv1/x1;)V` @kind virtual;
  #L499f14.  goto L499f1e;
  #L499f16.  v0.`v1.a2.h` @type ^`v1.x1` := v1 @kind object;
  #L499f1a.  v0.`v1.a2.i` @type ^`v1.x1` := v1 @kind object;
  #L499f1e.  v2:= 0I;
  #L499f20.  v0.`v1.a2.l` @type ^`java.lang.Object` := v2 @kind object;
  #L499f24.  v0.`v1.a2.j` @type ^`v1.x1` := v1 @kind object;
  #L499f28.  v2:= v0.`v1.a2.k` @type ^`int`;
  #L499f2c.  v2:= v2 + 1;
  #L499f30.  v0.`v1.a2.k` @type ^`int` := v2;
  #L499f34.  call `x`(v12) @signature `Lv1/a2;.x:()V` @kind direct;
  #L499f3a.  return v1 @kind object;
}
procedure `v1.x1` `j`(`v1.a2` v1 @kind this) @signature `Lv1/a2;.j:()Lv1/x1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L499f4c.  v0:= v1.`v1.a2.j` @type ^`v1.x1` @kind object;
  #L499f50.  return v0 @kind object;
}
procedure `v1.y1` `o`(`v1.a2` v1 @kind this, `long` v2 , `v1.i2` v4 @kind object) @signature `Lv1/a2;.o:(JLv1/i2;)Lv1/y1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49a638.  v0:= v1.`v1.a2.j` @type ^`v1.x1` @kind object;
  #L49a63c.  if v0 != 0 then goto L49a64a;
  #L49a640.  call temp:= `h`(v1, v4) @signature `Lv1/a2;.h:(Lv1/i2;)Lv1/y1;` @kind direct;
  #L49a646.  v2:= temp @kind object;
  #L49a648.  goto L49a656;
  #L49a64a.  v4:= v4.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L49a64e.  call temp:= `i`(v1, v4, v0, v2) @signature `Lv1/a2;.i:(Lv1/d3;Lv1/x1;J)Lv1/y1;` @kind direct;
  #L49a654.  v2:= temp @kind object;
  #L49a656.  return v2 @kind object;
}
procedure `v1.x1` `p`(`v1.a2` v1 @kind this) @signature `Lv1/a2;.p:()Lv1/x1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L499f64.  v0:= v1.`v1.a2.h` @type ^`v1.x1` @kind object;
  #L499f68.  return v0 @kind object;
}
procedure `v1.x1` `q`(`v1.a2` v1 @kind this) @signature `Lv1/a2;.q:()Lv1/x1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L499f7c.  v0:= v1.`v1.a2.i` @type ^`v1.x1` @kind object;
  #L499f80.  return v0 @kind object;
}
procedure `v1.y1` `r`(`v1.a2` v18 @kind this, `v1.d3` v19 @kind object, `v1.y1` v20 @kind object) @signature `Lv1/a2;.r:(Lv1/d3;Lv1/y1;)Lv1/y1;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L49a668.  v0:= v18 @kind object;
  #L49a66c.  v1:= v19 @kind object;
  #L49a670.  v2:= v20 @kind object;
  #L49a674.  v3:= v2.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L49a678.  call temp:= `s`(v0, v3) @signature `Lv1/a2;.s:(Lx2/u$b;)Z` @kind direct;
  #L49a67e.  v12:= temp;
  #L49a680.  call temp:= `u`(v0, v1, v3) @signature `Lv1/a2;.u:(Lv1/d3;Lx2/u$b;)Z` @kind direct;
  #L49a686.  v13:= temp;
  #L49a688.  call temp:= `t`(v0, v1, v3, v12) @signature `Lv1/a2;.t:(Lv1/d3;Lx2/u$b;Z)Z` @kind direct;
  #L49a68e.  v14:= temp;
  #L49a690.  v4:= v2.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L49a694.  v4:= v4.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L49a698.  v5:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a69c.  call temp:= `h`(v1, v4, v5) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L49a6a2.  call temp:= `b`(v3) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L49a6a8.  v1:= temp;
  #L49a6aa.  v4:= -1I;
  #L49a6ac.  v5:= -4.9E-324D;
  #L49a6b6.  if v1 != 0 then goto L49a6d2;
  #L49a6ba.  v1:= v3.`x2.s.e` @type ^`int`;
  #L49a6be.  if v1 != v4 then goto L49a6c4;
  #L49a6c2.  goto L49a6d2;
  #L49a6c4.  v7:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a6c8.  call temp:= `h`(v7, v1) @signature `Lv1/d3$b;.h:(I)J` @kind virtual;
  #L49a6ce.  v7:= temp @kind wide;
  #L49a6d0.  goto L49a6d4;
  #L49a6d2.  v7:= v5 @kind wide;
  #L49a6d4.  call temp:= `b`(v3) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L49a6da.  v1:= temp;
  #L49a6dc.  if v1 == 0 then goto L49a6f8;
  #L49a6e0.  v1:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a6e4.  v5:= v3.`x2.s.b` @type ^`int`;
  #L49a6e8.  v6:= v3.`x2.s.c` @type ^`int`;
  #L49a6ec.  call temp:= `d`(v1, v5, v6) @signature `Lv1/d3$b;.d:(II)J` @kind virtual;
  #L49a6f2.  v5:= temp @kind wide;
  #L49a6f4.  v9:= v5 @kind wide;
  #L49a6f6.  goto L49a720;
  #L49a6f8.  v1:= lcmp(v7, v5);
  #L49a6fc.  if v1 == 0 then goto L49a712;
  #L49a700.  v5:= -9223372036854775808L;
  #L49a704.  v1:= lcmp(v7, v5);
  #L49a708.  if v1 != 0 then goto L49a70e;
  #L49a70c.  goto L49a712;
  #L49a70e.  v9:= v7 @kind wide;
  #L49a710.  goto L49a720;
  #L49a712.  v1:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a716.  call temp:= `l`(v1) @signature `Lv1/d3$b;.l:()J` @kind virtual;
  #L49a71c.  v5:= temp @kind wide;
  #L49a71e.  goto L49a6f4;
  #L49a720.  call temp:= `b`(v3) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L49a726.  v1:= temp;
  #L49a728.  if v1 == 0 then goto L49a740;
  #L49a72c.  v1:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a730.  v4:= v3.`x2.s.b` @type ^`int`;
  #L49a734.  call temp:= `s`(v1, v4) @signature `Lv1/d3$b;.s:(I)Z` @kind virtual;
  #L49a73a.  v1:= temp;
  #L49a73c.  v11:= v1;
  #L49a73e.  goto L49a762;
  #L49a740.  v1:= v3.`x2.s.e` @type ^`int`;
  #L49a744.  if v1 == v4 then goto L49a75e;
  #L49a748.  v4:= v0.`v1.a2.a` @type ^`v1.d3$b` @kind object;
  #L49a74c.  call temp:= `s`(v4, v1) @signature `Lv1/d3$b;.s:(I)Z` @kind virtual;
  #L49a752.  v1:= temp;
  #L49a754.  if v1 == 0 then goto L49a75e;
  #L49a758.  v1:= 1I;
  #L49a75a.  v11:= 1I;
  #L49a75c.  goto L49a762;
  #L49a75e.  v1:= 0I;
  #L49a760.  v11:= 0I;
  #L49a762.  v15:= new `v1.y1`;
  #L49a766.  v4:= v2.`v1.y1.b` @type ^`long` @kind wide;
  #L49a76a.  v1:= v2.`v1.y1.c` @type ^`long` @kind wide;
  #L49a76e.  v16:= v1 @kind wide;
  #L49a772.  v1:= v15 @kind object;
  #L49a774.  v2:= v3 @kind object;
  #L49a776.  v3:= v4 @kind wide;
  #L49a778.  v5:= v16 @kind wide;
  #L49a77c.  call `<init>`(v1, v2, v3, v5, v7, v9, v11, v12, v13, v14) @signature `Lv1/y1;.<init>:(Lx2/u$b;JJJJZZZZ)V` @kind direct;
  #L49a782.  return v15 @kind object;
}
procedure `boolean` `v`(`v1.a2` v1 @kind this, `x2.r` v2 @kind object) @signature `Lv1/a2;.v:(Lx2/r;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4999a4.  v0:= v1.`v1.a2.j` @type ^`v1.x1` @kind object;
  #L4999a8.  if v0 == 0 then goto L4999b8;
  #L4999ac.  v0:= v0.`v1.x1.a` @type ^`x2.r` @kind object;
  #L4999b0.  if v0 != v2 then goto L4999b8;
  #L4999b4.  v2:= 1I;
  #L4999b6.  goto L4999ba;
  #L4999b8.  v2:= 0I;
  #L4999ba.  return v2;
}
procedure `void` `y`(`v1.a2` v1 @kind this, `long` v2 ) @signature `Lv1/a2;.y:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49a8e4.  v0:= v1.`v1.a2.j` @type ^`v1.x1` @kind object;
  #L49a8e8.  if v0 == 0 then goto L49a8f2;
  #L49a8ec.  call `s`(v0, v2) @signature `Lv1/x1;.s:(J)V` @kind virtual;
  #L49a8f2.  return @kind void;
}
procedure `boolean` `z`(`v1.a2` v3 @kind this, `v1.x1` v4 @kind object) @signature `Lv1/a2;.z:(Lv1/x1;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4999cc.  v0:= 1I;
  #L4999ce.  v1:= 0I;
  #L4999d0.  if v4 == 0 then goto L4999d8;
  #L4999d4.  v2:= 1I;
  #L4999d6.  goto L4999da;
  #L4999d8.  v2:= 0I;
  #L4999da.  call `f`(v2) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4999e0.  v2:= v3.`v1.a2.j` @type ^`v1.x1` @kind object;
  #L4999e4.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4999ea.  v2:= temp;
  #L4999ec.  if v2 == 0 then goto L4999f2;
  #L4999f0.  return v1;
  #L4999f2.  v3.`v1.a2.j` @type ^`v1.x1` := v4 @kind object;
  #L4999f6.  call temp:= `j`(v4) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L4999fc.  v2:= temp @kind object;
  #L4999fe.  if v2 == 0 then goto L499a2e;
  #L499a02.  call temp:= `j`(v4) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L499a08.  v4:= temp @kind object;
  #L499a0a.  v2:= v3.`v1.a2.i` @type ^`v1.x1` @kind object;
  #L499a0e.  if v4 != v2 then goto L499a1c;
  #L499a12.  v1:= v3.`v1.a2.h` @type ^`v1.x1` @kind object;
  #L499a16.  v3.`v1.a2.i` @type ^`v1.x1` := v1 @kind object;
  #L499a1a.  v1:= 1I;
  #L499a1c.  call `t`(v4) @signature `Lv1/x1;.t:()V` @kind virtual;
  #L499a22.  v2:= v3.`v1.a2.k` @type ^`int`;
  #L499a26.  v2:= v2 - v0 @kind int;
  #L499a28.  v3.`v1.a2.k` @type ^`int` := v2;
  #L499a2c.  goto L4999f6;
  #L499a2e.  v4:= v3.`v1.a2.j` @type ^`v1.x1` @kind object;
  #L499a32.  v0:= 0I;
  #L499a34.  call `w`(v4, v0) @signature `Lv1/x1;.w:(Lv1/x1;)V` @kind virtual;
  #L499a3a.  call `x`(v3) @signature `Lv1/a2;.x:()V` @kind direct;
  #L499a40.  return v1;
}
