record `v1.m1` @kind class @AccessFlag PUBLIC_FINAL extends `v1.p2` @kind class {
  `boolean` `v1.m1.p` @AccessFlag PRIVATE_FINAL;
  `boolean` `v1.m1.q` @AccessFlag PRIVATE_FINAL;
}
global `v1.g$a` `@@v1.m1.r` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lv1/m1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L495bac.  v0:= `@@v1.l1.a` @type ^`v1.l1` @kind object;
  #L495bb0.  `@@v1.m1.r` @type ^`v1.g$a` := v0 @kind object;
  #L495bb4.  return @kind void;
}
procedure `void` `<init>`(`v1.m1` v1 @kind this) @signature `Lv1/m1;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L495bc8.  call `<init>`(v1) @signature `Lv1/p2;.<init>:()V` @kind direct;
  #L495bce.  v0:= 0I;
  #L495bd0.  v1.`v1.m1.p` @type ^`boolean` := v0 @kind boolean;
  #L495bd4.  v1.`v1.m1.q` @type ^`boolean` := v0 @kind boolean;
  #L495bd8.  return @kind void;
}
procedure `void` `<init>`(`v1.m1` v1 @kind this, `boolean` v2 ) @signature `Lv1/m1;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L495bec.  call `<init>`(v1) @signature `Lv1/p2;.<init>:()V` @kind direct;
  #L495bf2.  v0:= 1I;
  #L495bf4.  v1.`v1.m1.p` @type ^`boolean` := v0 @kind boolean;
  #L495bf8.  v1.`v1.m1.q` @type ^`boolean` := v2 @kind boolean;
  #L495bfc.  return @kind void;
}
procedure `java.lang.String` `c`(`int` v1 ) @signature `Lv1/m1;.c:(I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L495afc.  v0:= 36I;
  #L495b00.  call temp:= `toString`(v1, v0) @signature `Ljava/lang/Integer;.toString:(II)Ljava/lang/String;` @kind static;
  #L495b06.  v1:= temp @kind object;
  #L495b08.  return v1 @kind object;
}
procedure `v1.m1` `d`(`android.os.Bundle` v0 @kind object) @signature `Lv1/m1;.d:(Landroid/os/Bundle;)Lv1/m1;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L495b1c.  call temp:= `e`(v0) @signature `Lv1/m1;.e:(Landroid/os/Bundle;)Lv1/m1;` @kind static;
  #L495b22.  v0:= temp @kind object;
  #L495b24.  return v0 @kind object;
}
procedure `v1.m1` `e`(`android.os.Bundle` v3 @kind object) @signature `Lv1/m1;.e:(Landroid/os/Bundle;)Lv1/m1;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L495b38.  v0:= 0I;
  #L495b3a.  call temp:= `c`(v0) @signature `Lv1/m1;.c:(I)Ljava/lang/String;` @kind static;
  #L495b40.  v1:= temp @kind object;
  #L495b42.  v2:= -1I;
  #L495b44.  call temp:= `getInt`(v3, v1, v2) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;I)I` @kind virtual;
  #L495b4a.  v1:= temp;
  #L495b4c.  v2:= 1I;
  #L495b4e.  if v1 != 0 then goto L495b56;
  #L495b52.  v1:= 1I;
  #L495b54.  goto L495b58;
  #L495b56.  v1:= 0I;
  #L495b58.  call `a`(v1) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L495b5e.  call temp:= `c`(v2) @signature `Lv1/m1;.c:(I)Ljava/lang/String;` @kind static;
  #L495b64.  v1:= temp @kind object;
  #L495b66.  call temp:= `getBoolean`(v3, v1, v0) @signature `Landroid/os/Bundle;.getBoolean:(Ljava/lang/String;Z)Z` @kind virtual;
  #L495b6c.  v1:= temp;
  #L495b6e.  if v1 == 0 then goto L495b90;
  #L495b72.  v1:= new `v1.m1`;
  #L495b76.  v2:= 2I;
  #L495b78.  call temp:= `c`(v2) @signature `Lv1/m1;.c:(I)Ljava/lang/String;` @kind static;
  #L495b7e.  v2:= temp @kind object;
  #L495b80.  call temp:= `getBoolean`(v3, v2, v0) @signature `Landroid/os/Bundle;.getBoolean:(Ljava/lang/String;Z)Z` @kind virtual;
  #L495b86.  v3:= temp;
  #L495b88.  call `<init>`(v1, v3) @signature `Lv1/m1;.<init>:(Z)V` @kind direct;
  #L495b8e.  goto L495b9a;
  #L495b90.  v1:= new `v1.m1`;
  #L495b94.  call `<init>`(v1) @signature `Lv1/m1;.<init>:()V` @kind direct;
  #L495b9a.  return v1 @kind object;
}
procedure `boolean` `equals`(`v1.m1` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lv1/m1;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L495a7c.  v0:= instanceof @variable v4 @type ^`v1.m1` @kind boolean;
  #L495a80.  v1:= 0I;
  #L495a82.  if v0 != 0 then goto L495a88;
  #L495a86.  return v1;
  #L495a88.  v4:= (`v1.m1`) v4 @kind object;
  #L495a8c.  v0:= v3.`v1.m1.q` @type ^`boolean` @kind boolean;
  #L495a90.  v2:= v4.`v1.m1.q` @type ^`boolean` @kind boolean;
  #L495a94.  if v0 != v2 then goto L495aa6;
  #L495a98.  v0:= v3.`v1.m1.p` @type ^`boolean` @kind boolean;
  #L495a9c.  v4:= v4.`v1.m1.p` @type ^`boolean` @kind boolean;
  #L495aa0.  if v0 != v4 then goto L495aa6;
  #L495aa4.  v1:= 1I;
  #L495aa6.  return v1;
}
procedure `int` `hashCode`(`v1.m1` v3 @kind this) @signature `Lv1/m1;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L495ab8.  v0:= 2I;
  #L495aba.  v0:= new `java.lang.Object`[v0];
  #L495abe.  v1:= v3.`v1.m1.p` @type ^`boolean` @kind boolean;
  #L495ac2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L495ac8.  v1:= temp @kind object;
  #L495aca.  v2:= 0I;
  #L495acc.  v0[v2]:= v1 @kind object;
  #L495ad0.  v1:= v3.`v1.m1.q` @type ^`boolean` @kind boolean;
  #L495ad4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L495ada.  v1:= temp @kind object;
  #L495adc.  v2:= 1I;
  #L495ade.  v0[v2]:= v1 @kind object;
  #L495ae2.  call temp:= `b`(v0) @signature `Ll5/i;.b:([Ljava/lang/Object;)I` @kind static;
  #L495ae8.  v0:= temp;
  #L495aea.  return v0;
}
