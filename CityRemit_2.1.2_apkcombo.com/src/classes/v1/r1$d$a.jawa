record `v1.r1$d$a` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `v1.r1$d$a.a` @AccessFlag PRIVATE;
  `long` `v1.r1$d$a.b` @AccessFlag PRIVATE;
  `boolean` `v1.r1$d$a.c` @AccessFlag PRIVATE;
  `boolean` `v1.r1$d$a.d` @AccessFlag PRIVATE;
  `boolean` `v1.r1$d$a.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`v1.r1$d$a` v2 @kind this) @signature `Lv1/r1$d$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4960bc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4960c2.  v0:= -9223372036854775808L;
  #L4960c6.  v2.`v1.r1$d$a.b` @type ^`long` := v0 @kind wide;
  #L4960ca.  return @kind void;
}
procedure `void` `<init>`(`v1.r1$d$a` v2 @kind this, `v1.r1$d` v3 @kind object) @signature `Lv1/r1$d$a;.<init>:(Lv1/r1$d;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4960dc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4960e2.  v0:= v3.`v1.r1$d.o` @type ^`long` @kind wide;
  #L4960e6.  v2.`v1.r1$d$a.a` @type ^`long` := v0 @kind wide;
  #L4960ea.  v0:= v3.`v1.r1$d.p` @type ^`long` @kind wide;
  #L4960ee.  v2.`v1.r1$d$a.b` @type ^`long` := v0 @kind wide;
  #L4960f2.  v0:= v3.`v1.r1$d.q` @type ^`boolean` @kind boolean;
  #L4960f6.  v2.`v1.r1$d$a.c` @type ^`boolean` := v0 @kind boolean;
  #L4960fa.  v0:= v3.`v1.r1$d.r` @type ^`boolean` @kind boolean;
  #L4960fe.  v2.`v1.r1$d$a.d` @type ^`boolean` := v0 @kind boolean;
  #L496102.  v3:= v3.`v1.r1$d.s` @type ^`boolean` @kind boolean;
  #L496106.  v2.`v1.r1$d$a.e` @type ^`boolean` := v3 @kind boolean;
  #L49610a.  return @kind void;
}
procedure `void` `<init>`(`v1.r1$d$a` v0 @kind this, `v1.r1$d` v1 @kind object, `v1.r1$a` v2 @kind object) @signature `Lv1/r1$d$a;.<init>:(Lv1/r1$d;Lv1/r1$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L49611c.  call `<init>`(v0, v1) @signature `Lv1/r1$d$a;.<init>:(Lv1/r1$d;)V` @kind direct;
  #L496122.  return @kind void;
}
procedure `long` `a`(`v1.r1$d$a` v2 @kind object) @signature `Lv1/r1$d$a;.a:(Lv1/r1$d$a;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L495f9c.  v0:= v2.`v1.r1$d$a.a` @type ^`long` @kind wide;
  #L495fa0.  return v0 @kind wide;
}
procedure `long` `b`(`v1.r1$d$a` v2 @kind object) @signature `Lv1/r1$d$a;.b:(Lv1/r1$d$a;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L495fb4.  v0:= v2.`v1.r1$d$a.b` @type ^`long` @kind wide;
  #L495fb8.  return v0 @kind wide;
}
procedure `boolean` `c`(`v1.r1$d$a` v0 @kind object) @signature `Lv1/r1$d$a;.c:(Lv1/r1$d$a;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L495f54.  v0:= v0.`v1.r1$d$a.c` @type ^`boolean` @kind boolean;
  #L495f58.  return v0;
}
procedure `boolean` `d`(`v1.r1$d$a` v0 @kind object) @signature `Lv1/r1$d$a;.d:(Lv1/r1$d$a;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L495f6c.  v0:= v0.`v1.r1$d$a.d` @type ^`boolean` @kind boolean;
  #L495f70.  return v0;
}
procedure `boolean` `e`(`v1.r1$d$a` v0 @kind object) @signature `Lv1/r1$d$a;.e:(Lv1/r1$d$a;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L495f84.  v0:= v0.`v1.r1$d$a.e` @type ^`boolean` @kind boolean;
  #L495f88.  return v0;
}
procedure `v1.r1$d` `f`(`v1.r1$d$a` v1 @kind this) @signature `Lv1/r1$d$a;.f:()Lv1/r1$d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L495fcc.  call temp:= `g`(v1) @signature `Lv1/r1$d$a;.g:()Lv1/r1$e;` @kind virtual;
  #L495fd2.  v0:= temp @kind object;
  #L495fd4.  return v0 @kind object;
}
procedure `v1.r1$e` `g`(`v1.r1$d$a` v2 @kind this) @signature `Lv1/r1$d$a;.g:()Lv1/r1$e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49609c.  v0:= new `v1.r1$e`;
  #L4960a0.  v1:= 0I;
  #L4960a2.  call `<init>`(v0, v2, v1) @signature `Lv1/r1$e;.<init>:(Lv1/r1$d$a;Lv1/r1$a;)V` @kind direct;
  #L4960a8.  return v0 @kind object;
}
procedure `v1.r1$d$a` `h`(`v1.r1$d$a` v3 @kind this, `long` v4 ) @signature `Lv1/r1$d$a;.h:(J)Lv1/r1$d$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L495fe8.  v0:= -9223372036854775808L;
  #L495fec.  v2:= lcmp(v4, v0);
  #L495ff0.  if v2 == 0 then goto L496006;
  #L495ff4.  v0:= 0L;
  #L495ff8.  v2:= lcmp(v4, v0);
  #L495ffc.  if v2 < 0 then goto L496002;
  #L496000.  goto L496006;
  #L496002.  v0:= 0I;
  #L496004.  goto L496008;
  #L496006.  v0:= 1I;
  #L496008.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L49600e.  v3.`v1.r1$d$a.b` @type ^`long` := v4 @kind wide;
  #L496012.  return v3 @kind object;
}
procedure `v1.r1$d$a` `i`(`v1.r1$d$a` v0 @kind this, `boolean` v1 ) @signature `Lv1/r1$d$a;.i:(Z)Lv1/r1$d$a;` @AccessFlag PUBLIC {
    temp;

  #L496024.  v0.`v1.r1$d$a.d` @type ^`boolean` := v1 @kind boolean;
  #L496028.  return v0 @kind object;
}
procedure `v1.r1$d$a` `j`(`v1.r1$d$a` v0 @kind this, `boolean` v1 ) @signature `Lv1/r1$d$a;.j:(Z)Lv1/r1$d$a;` @AccessFlag PUBLIC {
    temp;

  #L49603c.  v0.`v1.r1$d$a.c` @type ^`boolean` := v1 @kind boolean;
  #L496040.  return v0 @kind object;
}
procedure `v1.r1$d$a` `k`(`v1.r1$d$a` v3 @kind this, `long` v4 ) @signature `Lv1/r1$d$a;.k:(J)Lv1/r1$d$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L496054.  v0:= 0L;
  #L496058.  v2:= lcmp(v4, v0);
  #L49605c.  if v2 < 0 then goto L496064;
  #L496060.  v0:= 1I;
  #L496062.  goto L496066;
  #L496064.  v0:= 0I;
  #L496066.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L49606c.  v3.`v1.r1$d$a.a` @type ^`long` := v4 @kind wide;
  #L496070.  return v3 @kind object;
}
procedure `v1.r1$d$a` `l`(`v1.r1$d$a` v0 @kind this, `boolean` v1 ) @signature `Lv1/r1$d$a;.l:(Z)Lv1/r1$d$a;` @AccessFlag PUBLIC {
    temp;

  #L496084.  v0.`v1.r1$d$a.e` @type ^`boolean` := v1 @kind boolean;
  #L496088.  return v0 @kind object;
}
