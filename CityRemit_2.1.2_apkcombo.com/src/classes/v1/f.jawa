record `v1.f` @kind class @AccessFlag PUBLIC_ABSTRACT extends `v1.r2` @kind interface, `v1.t2` @kind interface {
  `int` `v1.f.o` @AccessFlag PRIVATE_FINAL;
  `v1.k1` `v1.f.p` @AccessFlag PRIVATE_FINAL;
  `v1.u2` `v1.f.q` @AccessFlag PRIVATE;
  `int` `v1.f.r` @AccessFlag PRIVATE;
  `w1.t1` `v1.f.s` @AccessFlag PRIVATE;
  `int` `v1.f.t` @AccessFlag PRIVATE;
  `x2.n0` `v1.f.u` @AccessFlag PRIVATE;
  `v1.j1`[] `v1.f.v` @AccessFlag PRIVATE;
  `long` `v1.f.w` @AccessFlag PRIVATE;
  `long` `v1.f.x` @AccessFlag PRIVATE;
  `boolean` `v1.f.y` @AccessFlag PRIVATE;
  `boolean` `v1.f.z` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`v1.f` v2 @kind this, `int` v3 ) @signature `Lv1/f;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L489378.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48937e.  v2.`v1.f.o` @type ^`int` := v3;
  #L489382.  v3:= new `v1.k1`;
  #L489386.  call `<init>`(v3) @signature `Lv1/k1;.<init>:()V` @kind direct;
  #L48938c.  v2.`v1.f.p` @type ^`v1.k1` := v3 @kind object;
  #L489390.  v0:= -9223372036854775808L;
  #L489394.  v2.`v1.f.x` @type ^`long` := v0 @kind wide;
  #L489398.  return @kind void;
}
procedure `void` `Q`(`v1.f` v1 @kind this, `long` v2 , `boolean` v4 ) @signature `Lv1/f;.Q:(JZ)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4895a0.  v0:= 0I;
  #L4895a2.  v1.`v1.f.y` @type ^`boolean` := v0 @kind boolean;
  #L4895a6.  v1.`v1.f.x` @type ^`long` := v2 @kind wide;
  #L4895aa.  call `K`(v1, v2, v4) @signature `Lv1/f;.K:(JZ)V` @kind virtual;
  #L4895b0.  return @kind void;
}
procedure `v1.n` `A`(`v1.f` v1 @kind this, `java.lang.Throwable` v2 @kind object, `v1.j1` v3 @kind object, `int` v4 ) @signature `Lv1/f;.A:(Ljava/lang/Throwable;Lv1/j1;I)Lv1/n;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L4892e0.  v0:= 0I;
  #L4892e2.  call temp:= `B`(v1, v2, v3, v0, v4) @signature `Lv1/f;.B:(Ljava/lang/Throwable;Lv1/j1;ZI)Lv1/n;` @kind virtual;
  #L4892e8.  v2:= temp @kind object;
  #L4892ea.  return v2 @kind object;
}
procedure `v1.n` `B`(`v1.f` v9 @kind this, `java.lang.Throwable` v10 @kind object, `v1.j1` v11 @kind object, `boolean` v12 , `int` v13 ) @signature `Lv1/f;.B:(Ljava/lang/Throwable;Lv1/j1;ZI)Lv1/n;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L489260.  if v11 == 0 then goto L489298;
  #L489264.  v0:= v9.`v1.f.z` @type ^`boolean` @kind boolean;
  #L489268.  if v0 != 0 then goto L489298;
  #L48926c.  v0:= 1I;
  #L48926e.  v9.`v1.f.z` @type ^`boolean` := v0 @kind boolean;
  #L489272.  v0:= 0I;
  #L489274.  call temp:= `a`(v9, v11) @signature `Lv1/t2;.a:(Lv1/j1;)I` @kind interface;
  #L48927a.  v1:= temp;
  #L48927c.  call temp:= `f`(v1) @signature `Lv1/s2;.f:(I)I` @kind static;
  #L489282.  v1:= temp;
  #L489284.  v9.`v1.f.z` @type ^`boolean` := v0 @kind boolean;
  #L489288.  v6:= v1;
  #L48928a.  goto L48929c;
  #L48928c.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48928e.  v9.`v1.f.z` @type ^`boolean` := v0 @kind boolean;
  #L489292.  throw v10;
  #L489294.  v9.`v1.f.z` @type ^`boolean` := v0 @kind boolean;
  #L489298.  v1:= 4I;
  #L48929a.  v6:= 4I;
  #L48929c.  call temp:= `d`(v9) @signature `Lv1/r2;.d:()Ljava/lang/String;` @kind interface;
  #L4892a2.  v3:= temp @kind object;
  #L4892a4.  call temp:= `E`(v9) @signature `Lv1/f;.E:()I` @kind virtual;
  #L4892aa.  v4:= temp;
  #L4892ac.  v2:= v10 @kind object;
  #L4892ae.  v5:= v11 @kind object;
  #L4892b0.  v7:= v12;
  #L4892b2.  v8:= v13;
  #L4892b4.  call temp:= `b`(v2, v3, v4, v5, v6, v7, v8) @signature `Lv1/n;.b:(Ljava/lang/Throwable;Ljava/lang/String;ILv1/j1;IZI)Lv1/n;` @kind static;
  #L4892ba.  v10:= temp @kind object;
  #L4892bc.  return v10 @kind object;
  catch `v1.n` @[L489274..L489284] goto L489294;
  catch `java.lang.Throwable` @[L489274..L489284] goto L48928c;
}
procedure `v1.u2` `C`(`v1.f` v1 @kind this) @signature `Lv1/f;.C:()Lv1/u2;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L489354.  v0:= v1.`v1.f.q` @type ^`v1.u2` @kind object;
  #L489358.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48935e.  v0:= temp @kind object;
  #L489360.  v0:= (`v1.u2`) v0 @kind object;
  #L489364.  return v0 @kind object;
}
procedure `v1.k1` `D`(`v1.f` v1 @kind this) @signature `Lv1/f;.D:()Lv1/k1;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L4892fc.  v0:= v1.`v1.f.p` @type ^`v1.k1` @kind object;
  #L489300.  call `a`(v0) @signature `Lv1/k1;.a:()V` @kind virtual;
  #L489306.  v0:= v1.`v1.f.p` @type ^`v1.k1` @kind object;
  #L48930a.  return v0 @kind object;
}
procedure `int` `E`(`v1.f` v1 @kind this) @signature `Lv1/f;.E:()I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L4890e4.  v0:= v1.`v1.f.r` @type ^`int`;
  #L4890e8.  return v0;
}
procedure `w1.t1` `F`(`v1.f` v1 @kind this) @signature `Lv1/f;.F:()Lw1/t1;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L48965c.  v0:= v1.`v1.f.s` @type ^`w1.t1` @kind object;
  #L489660.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L489666.  v0:= temp @kind object;
  #L489668.  v0:= (`w1.t1`) v0 @kind object;
  #L48966c.  return v0 @kind object;
}
procedure `v1.j1`[] `G`(`v1.f` v1 @kind this) @signature `Lv1/f;.G:()[Lv1/j1;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L48931c.  v0:= v1.`v1.f.v` @type ^`v1.j1`[] @kind object;
  #L489320.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L489326.  v0:= temp @kind object;
  #L489328.  v0:= (`v1.j1`[]) v0 @kind object;
  #L48932c.  return v0 @kind object;
}
procedure `boolean` `H`(`v1.f` v1 @kind this) @signature `Lv1/f;.H:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L4890a8.  call temp:= `l`(v1) @signature `Lv1/f;.l:()Z` @kind virtual;
  #L4890ae.  v0:= temp;
  #L4890b0.  if v0 == 0 then goto L4890ba;
  #L4890b4.  v0:= v1.`v1.f.y` @type ^`boolean` @kind boolean;
  #L4890b8.  goto L4890d2;
  #L4890ba.  v0:= v1.`v1.f.u` @type ^`x2.n0` @kind object;
  #L4890be.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4890c4.  v0:= temp @kind object;
  #L4890c6.  v0:= (`x2.n0`) v0 @kind object;
  #L4890ca.  call temp:= `h`(v0) @signature `Lx2/n0;.h:()Z` @kind interface;
  #L4890d0.  v0:= temp;
  #L4890d2.  return v0;
}
procedure `void` `I`() @signature `Lv1/f;.I:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `J`(`v1.f` v0 @kind this, `boolean` v1 , `boolean` v2 ) @signature `Lv1/f;.J:(ZZ)V` @AccessFlag PROTECTED {
    temp;

  #L4894ac.  return @kind void;
}
procedure `void` `K`(`long` v0 , `boolean` v2 ) @signature `Lv1/f;.K:(JZ)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `L`(`v1.f` v0 @kind this) @signature `Lv1/f;.L:()V` @AccessFlag PROTECTED {
    temp;

  #L4894c0.  return @kind void;
}
procedure `void` `M`(`v1.f` v0 @kind this) @signature `Lv1/f;.M:()V` @AccessFlag PROTECTED {
    temp;

  #L4894d4.  return @kind void;
}
procedure `void` `N`(`v1.f` v0 @kind this) @signature `Lv1/f;.N:()V` @AccessFlag PROTECTED {
    temp;

  #L4894e8.  return @kind void;
}
procedure `void` `O`(`v1.j1`[] v0 @kind object, `long` v1 , `long` v3 ) @signature `Lv1/f;.O:([Lv1/j1;JJ)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `P`(`v1.f` v5 @kind this, `v1.k1` v6 @kind object, `y1.g` v7 @kind object, `int` v8 ) @signature `Lv1/f;.P:(Lv1/k1;Ly1/g;I)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48912c.  v0:= v5.`v1.f.u` @type ^`x2.n0` @kind object;
  #L489130.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L489136.  v0:= temp @kind object;
  #L489138.  v0:= (`x2.n0`) v0 @kind object;
  #L48913c.  call temp:= `e`(v0, v6, v7, v8) @signature `Lx2/n0;.e:(Lv1/k1;Ly1/g;I)I` @kind interface;
  #L489142.  v8:= temp;
  #L489144.  v0:= -4I;
  #L489146.  if v8 != v0 then goto L48918c;
  #L48914a.  call temp:= `t`(v7) @signature `Ly1/a;.t:()Z` @kind virtual;
  #L489150.  v6:= temp;
  #L489152.  if v6 == 0 then goto L48916c;
  #L489156.  v6:= -9223372036854775808L;
  #L48915a.  v5.`v1.f.x` @type ^`long` := v6 @kind wide;
  #L48915e.  v6:= v5.`v1.f.y` @type ^`boolean` @kind boolean;
  #L489162.  if v6 == 0 then goto L489168;
  #L489166.  goto L48916a;
  #L489168.  v0:= -3I;
  #L48916a.  return v0;
  #L48916c.  v0:= v7.`y1.g.s` @type ^`long` @kind wide;
  #L489170.  v2:= v5.`v1.f.w` @type ^`long` @kind wide;
  #L489174.  v0:= v0 + v2 @kind long;
  #L489176.  v7.`y1.g.s` @type ^`long` := v0 @kind wide;
  #L48917a.  v6:= v5.`v1.f.x` @type ^`long` @kind wide;
  #L48917e.  call temp:= `max`(v6, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L489184.  v6:= temp @kind wide;
  #L489186.  v5.`v1.f.x` @type ^`long` := v6 @kind wide;
  #L48918a.  goto L4891de;
  #L48918c.  v7:= -5I;
  #L48918e.  if v8 != v7 then goto L4891de;
  #L489192.  v7:= v6.`v1.k1.b` @type ^`v1.j1` @kind object;
  #L489196.  call temp:= `e`(v7) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48919c.  v7:= temp @kind object;
  #L48919e.  v7:= (`v1.j1`) v7 @kind object;
  #L4891a2.  v0:= v7.`v1.j1.D` @type ^`long` @kind wide;
  #L4891a6.  v2:= 9223372036854775807L;
  #L4891b0.  v4:= lcmp(v0, v2);
  #L4891b4.  if v4 == 0 then goto L4891de;
  #L4891b8.  call temp:= `b`(v7) @signature `Lv1/j1;.b:()Lv1/j1$b;` @kind virtual;
  #L4891be.  v0:= temp @kind object;
  #L4891c0.  v1:= v7.`v1.j1.D` @type ^`long` @kind wide;
  #L4891c4.  v3:= v5.`v1.f.w` @type ^`long` @kind wide;
  #L4891c8.  v1:= v1 + v3 @kind long;
  #L4891ca.  call temp:= `i0`(v0, v1) @signature `Lv1/j1$b;.i0:(J)Lv1/j1$b;` @kind virtual;
  #L4891d0.  v7:= temp @kind object;
  #L4891d2.  call temp:= `E`(v7) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L4891d8.  v7:= temp @kind object;
  #L4891da.  v6.`v1.k1.b` @type ^`v1.j1` := v7 @kind object;
  #L4891de.  return v8;
}
procedure `int` `R`(`v1.f` v3 @kind this, `long` v4 ) @signature `Lv1/f;.R:(J)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4891f0.  v0:= v3.`v1.f.u` @type ^`x2.n0` @kind object;
  #L4891f4.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4891fa.  v0:= temp @kind object;
  #L4891fc.  v0:= (`x2.n0`) v0 @kind object;
  #L489200.  v1:= v3.`v1.f.w` @type ^`long` @kind wide;
  #L489204.  v4:= v4 - v1 @kind long;
  #L489206.  call temp:= `m`(v0, v4) @signature `Lx2/n0;.m:(J)I` @kind interface;
  #L48920c.  v4:= temp;
  #L48920e.  return v4;
}
procedure `void` `c`(`v1.f` v1 @kind this) @signature `Lv1/f;.c:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L48954c.  v0:= v1.`v1.f.t` @type ^`int`;
  #L489550.  if v0 != 0 then goto L489558;
  #L489554.  v0:= 1I;
  #L489556.  goto L48955a;
  #L489558.  v0:= 0I;
  #L48955a.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L489560.  v0:= v1.`v1.f.p` @type ^`v1.k1` @kind object;
  #L489564.  call `a`(v0) @signature `Lv1/k1;.a:()V` @kind virtual;
  #L48956a.  call `L`(v1) @signature `Lv1/f;.L:()V` @kind virtual;
  #L489570.  return @kind void;
}
procedure `void` `f`(`v1.f` v3 @kind this) @signature `Lv1/f;.f:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4893ac.  v0:= v3.`v1.f.t` @type ^`int`;
  #L4893b0.  v1:= 1I;
  #L4893b2.  v2:= 0I;
  #L4893b4.  if v0 != v1 then goto L4893ba;
  #L4893b8.  goto L4893bc;
  #L4893ba.  v1:= 0I;
  #L4893bc.  call `f`(v1) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4893c2.  v0:= v3.`v1.f.p` @type ^`v1.k1` @kind object;
  #L4893c6.  call `a`(v0) @signature `Lv1/k1;.a:()V` @kind virtual;
  #L4893cc.  v3.`v1.f.t` @type ^`int` := v2;
  #L4893d0.  v0:= 0I;
  #L4893d2.  v3.`v1.f.u` @type ^`x2.n0` := v0 @kind object;
  #L4893d6.  v3.`v1.f.v` @type ^`v1.j1`[] := v0 @kind object;
  #L4893da.  v3.`v1.f.y` @type ^`boolean` := v2 @kind boolean;
  #L4893de.  call `I`(v3) @signature `Lv1/f;.I:()V` @kind virtual;
  #L4893e4.  return @kind void;
}
procedure `x2.n0` `g`(`v1.f` v1 @kind this) @signature `Lv1/f;.g:()Lx2/n0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L489680.  v0:= v1.`v1.f.u` @type ^`x2.n0` @kind object;
  #L489684.  return v0 @kind object;
}
procedure `int` `getState`(`v1.f` v1 @kind this) @signature `Lv1/f;.getState:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4890fc.  v0:= v1.`v1.f.t` @type ^`int`;
  #L489100.  return v0;
}
procedure `int` `j`(`v1.f` v1 @kind this) @signature `Lv1/f;.j:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L489114.  v0:= v1.`v1.f.o` @type ^`int`;
  #L489118.  return v0;
}
procedure `void` `k`(`v1.f` v6 @kind this, `v1.j1`[] v7 @kind object, `x2.n0` v8 @kind object, `long` v9 , `long` v11 ) @signature `Lv1/f;.k:([Lv1/j1;Lx2/n0;JJ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4894fc.  v0:= v6.`v1.f.y` @type ^`boolean` @kind boolean;
  #L489500.  v0:= v0 ^~ 1;
  #L489504.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L48950a.  v6.`v1.f.u` @type ^`x2.n0` := v8 @kind object;
  #L48950e.  v0:= v6.`v1.f.x` @type ^`long` @kind wide;
  #L489512.  v2:= -9223372036854775808L;
  #L489516.  v8:= lcmp(v0, v2);
  #L48951a.  if v8 != 0 then goto L489522;
  #L48951e.  v6.`v1.f.x` @type ^`long` := v9 @kind wide;
  #L489522.  v6.`v1.f.v` @type ^`v1.j1`[] := v7 @kind object;
  #L489526.  v6.`v1.f.w` @type ^`long` := v11 @kind wide;
  #L48952a.  v0:= v6 @kind object;
  #L48952c.  v1:= v7 @kind object;
  #L48952e.  v2:= v9 @kind wide;
  #L489530.  v4:= v11 @kind wide;
  #L489532.  call `O`(v0, v1, v2, v4) @signature `Lv1/f;.O:([Lv1/j1;JJ)V` @kind virtual;
  #L489538.  return @kind void;
}
procedure `boolean` `l`(`v1.f` v5 @kind this) @signature `Lv1/f;.l:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L489068.  v0:= v5.`v1.f.x` @type ^`long` @kind wide;
  #L48906c.  v2:= -9223372036854775808L;
  #L489070.  v4:= lcmp(v0, v2);
  #L489074.  if v4 != 0 then goto L48907c;
  #L489078.  v0:= 1I;
  #L48907a.  goto L48907e;
  #L48907c.  v0:= 0I;
  #L48907e.  return v0;
}
procedure `int` `m`(`v1.f` v1 @kind this) @signature `Lv1/f;.m:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L489220.  v0:= 0I;
  #L489222.  return v0;
}
procedure `void` `o`(`v1.f` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lv1/f;.o:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L489454.  return @kind void;
}
procedure `void` `p`(`v1.f` v9 @kind this, `v1.u2` v10 @kind object, `v1.j1`[] v11 @kind object, `x2.n0` v12 @kind object, `long` v13 , `boolean` v15 , `boolean` v16 , `long` v17 , `long` v19 ) @signature `Lv1/f;.p:(Lv1/u2;[Lv1/j1;Lx2/n0;JZZJJ)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4893f8.  v7:= v9 @kind object;
  #L4893fa.  v8:= v15;
  #L4893fc.  v0:= v7.`v1.f.t` @type ^`int`;
  #L489400.  v1:= 1I;
  #L489402.  if v0 != 0 then goto L48940a;
  #L489406.  v0:= 1I;
  #L489408.  goto L48940c;
  #L48940a.  v0:= 0I;
  #L48940c.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L489412.  v0:= v10 @kind object;
  #L489414.  v7.`v1.f.q` @type ^`v1.u2` := v0 @kind object;
  #L489418.  v7.`v1.f.t` @type ^`int` := v1;
  #L48941c.  v0:= v16;
  #L489420.  call `J`(v9, v15, v0) @signature `Lv1/f;.J:(ZZ)V` @kind virtual;
  #L489426.  v0:= v9 @kind object;
  #L489428.  v1:= v11 @kind object;
  #L48942a.  v2:= v12 @kind object;
  #L48942c.  v3:= v17 @kind wide;
  #L489430.  v5:= v19 @kind wide;
  #L489434.  call `k`(v0, v1, v2, v3, v5) @signature `Lv1/f;.k:([Lv1/j1;Lx2/n0;JJ)V` @kind virtual;
  #L48943a.  v0:= v13 @kind wide;
  #L48943c.  call `Q`(v9, v13, v15) @signature `Lv1/f;.Q:(JZ)V` @kind direct;
  #L489442.  return @kind void;
}
procedure `void` `q`(`v1.f` v1 @kind this) @signature `Lv1/f;.q:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4895c4.  v0:= 1I;
  #L4895c6.  v1.`v1.f.y` @type ^`boolean` := v0 @kind boolean;
  #L4895ca.  return @kind void;
}
procedure `void` `r`(`v1.f` v1 @kind this) @signature `Lv1/f;.r:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L489484.  v0:= v1.`v1.f.u` @type ^`x2.n0` @kind object;
  #L489488.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48948e.  v0:= temp @kind object;
  #L489490.  v0:= (`x2.n0`) v0 @kind object;
  #L489494.  call `b`(v0) @signature `Lx2/n0;.b:()V` @kind interface;
  #L48949a.  return @kind void;
}
procedure `long` `s`(`v1.f` v2 @kind this) @signature `Lv1/f;.s:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L489234.  v0:= v2.`v1.f.x` @type ^`long` @kind wide;
  #L489238.  return v0 @kind wide;
}
procedure `void` `start`(`v1.f` v2 @kind this) @signature `Lv1/f;.start:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4895f4.  v0:= v2.`v1.f.t` @type ^`int`;
  #L4895f8.  v1:= 1I;
  #L4895fa.  if v0 != v1 then goto L489600;
  #L4895fe.  goto L489602;
  #L489600.  v1:= 0I;
  #L489602.  call `f`(v1) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L489608.  v0:= 2I;
  #L48960a.  v2.`v1.f.t` @type ^`int` := v0;
  #L48960e.  call `M`(v2) @signature `Lv1/f;.M:()V` @kind virtual;
  #L489614.  return @kind void;
}
procedure `void` `stop`(`v1.f` v3 @kind this) @signature `Lv1/f;.stop:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L489628.  v0:= v3.`v1.f.t` @type ^`int`;
  #L48962c.  v1:= 1I;
  #L48962e.  v2:= 2I;
  #L489630.  if v0 != v2 then goto L489638;
  #L489634.  v0:= 1I;
  #L489636.  goto L48963a;
  #L489638.  v0:= 0I;
  #L48963a.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L489640.  v3.`v1.f.t` @type ^`int` := v1;
  #L489644.  call `N`(v3) @signature `Lv1/f;.N:()V` @kind virtual;
  #L48964a.  return @kind void;
}
procedure `void` `t`(`v1.f` v1 @kind this, `long` v2 ) @signature `Lv1/f;.t:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L489584.  v0:= 0I;
  #L489586.  call `Q`(v1, v2, v0) @signature `Lv1/f;.Q:(JZ)V` @kind direct;
  #L48958c.  return @kind void;
}
procedure `boolean` `u`(`v1.f` v1 @kind this) @signature `Lv1/f;.u:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L489090.  v0:= v1.`v1.f.y` @type ^`boolean` @kind boolean;
  #L489094.  return v0;
}
procedure `s3.s` `v`(`v1.f` v1 @kind this) @signature `Lv1/f;.v:()Ls3/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48924c.  v0:= 0I;
  #L48924e.  return v0 @kind object;
}
procedure `void` `w`(`v1.f` v0 @kind this, `int` v1 , `w1.t1` v2 @kind object) @signature `Lv1/f;.w:(ILw1/t1;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L489468.  v0.`v1.f.r` @type ^`int` := v1;
  #L48946c.  v0.`v1.f.s` @type ^`w1.t1` := v2 @kind object;
  #L489470.  return @kind void;
}
procedure `v1.t2` `x`(`v1.f` v0 @kind this) @signature `Lv1/f;.x:()Lv1/t2;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L489340.  return v0 @kind object;
}
procedure `void` `z`(`v1.f` v0 @kind this, `float` v1 , `float` v2 ) @signature `Lv1/f;.z:(FF)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4895dc.  call `a`(v0, v1, v2) @signature `Lv1/q2;.a:(Lv1/r2;FF)V` @kind static;
  #L4895e2.  return @kind void;
}
