record `v1.c3` @kind class @AccessFlag PUBLIC_FINAL extends `v1.p2` @kind class {
  `boolean` `v1.c3.p` @AccessFlag PRIVATE_FINAL;
  `boolean` `v1.c3.q` @AccessFlag PRIVATE_FINAL;
}
global `v1.g$a` `@@v1.c3.r` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lv1/c3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L49d9f8.  v0:= `@@v1.b3.a` @type ^`v1.b3` @kind object;
  #L49d9fc.  `@@v1.c3.r` @type ^`v1.g$a` := v0 @kind object;
  #L49da00.  return @kind void;
}
procedure `void` `<init>`(`v1.c3` v1 @kind this) @signature `Lv1/c3;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L49da14.  call `<init>`(v1) @signature `Lv1/p2;.<init>:()V` @kind direct;
  #L49da1a.  v0:= 0I;
  #L49da1c.  v1.`v1.c3.p` @type ^`boolean` := v0 @kind boolean;
  #L49da20.  v1.`v1.c3.q` @type ^`boolean` := v0 @kind boolean;
  #L49da24.  return @kind void;
}
procedure `void` `<init>`(`v1.c3` v1 @kind this, `boolean` v2 ) @signature `Lv1/c3;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L49da38.  call `<init>`(v1) @signature `Lv1/p2;.<init>:()V` @kind direct;
  #L49da3e.  v0:= 1I;
  #L49da40.  v1.`v1.c3.p` @type ^`boolean` := v0 @kind boolean;
  #L49da44.  v1.`v1.c3.q` @type ^`boolean` := v2 @kind boolean;
  #L49da48.  return @kind void;
}
procedure `java.lang.String` `c`(`int` v1 ) @signature `Lv1/c3;.c:(I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L49d944.  v0:= 36I;
  #L49d948.  call temp:= `toString`(v1, v0) @signature `Ljava/lang/Integer;.toString:(II)Ljava/lang/String;` @kind static;
  #L49d94e.  v1:= temp @kind object;
  #L49d950.  return v1 @kind object;
}
procedure `v1.c3` `d`(`android.os.Bundle` v0 @kind object) @signature `Lv1/c3;.d:(Landroid/os/Bundle;)Lv1/c3;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L49d964.  call temp:= `e`(v0) @signature `Lv1/c3;.e:(Landroid/os/Bundle;)Lv1/c3;` @kind static;
  #L49d96a.  v0:= temp @kind object;
  #L49d96c.  return v0 @kind object;
}
procedure `v1.c3` `e`(`android.os.Bundle` v4 @kind object) @signature `Lv1/c3;.e:(Landroid/os/Bundle;)Lv1/c3;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L49d980.  v0:= 0I;
  #L49d982.  call temp:= `c`(v0) @signature `Lv1/c3;.c:(I)Ljava/lang/String;` @kind static;
  #L49d988.  v1:= temp @kind object;
  #L49d98a.  v2:= -1I;
  #L49d98c.  call temp:= `getInt`(v4, v1, v2) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;I)I` @kind virtual;
  #L49d992.  v1:= temp;
  #L49d994.  v2:= 1I;
  #L49d996.  v3:= 3I;
  #L49d998.  if v1 != v3 then goto L49d9a0;
  #L49d99c.  v1:= 1I;
  #L49d99e.  goto L49d9a2;
  #L49d9a0.  v1:= 0I;
  #L49d9a2.  call `a`(v1) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L49d9a8.  call temp:= `c`(v2) @signature `Lv1/c3;.c:(I)Ljava/lang/String;` @kind static;
  #L49d9ae.  v1:= temp @kind object;
  #L49d9b0.  call temp:= `getBoolean`(v4, v1, v0) @signature `Landroid/os/Bundle;.getBoolean:(Ljava/lang/String;Z)Z` @kind virtual;
  #L49d9b6.  v1:= temp;
  #L49d9b8.  if v1 == 0 then goto L49d9da;
  #L49d9bc.  v1:= new `v1.c3`;
  #L49d9c0.  v2:= 2I;
  #L49d9c2.  call temp:= `c`(v2) @signature `Lv1/c3;.c:(I)Ljava/lang/String;` @kind static;
  #L49d9c8.  v2:= temp @kind object;
  #L49d9ca.  call temp:= `getBoolean`(v4, v2, v0) @signature `Landroid/os/Bundle;.getBoolean:(Ljava/lang/String;Z)Z` @kind virtual;
  #L49d9d0.  v4:= temp;
  #L49d9d2.  call `<init>`(v1, v4) @signature `Lv1/c3;.<init>:(Z)V` @kind direct;
  #L49d9d8.  goto L49d9e4;
  #L49d9da.  v1:= new `v1.c3`;
  #L49d9de.  call `<init>`(v1) @signature `Lv1/c3;.<init>:()V` @kind direct;
  #L49d9e4.  return v1 @kind object;
}
procedure `boolean` `equals`(`v1.c3` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lv1/c3;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L49d8c4.  v0:= instanceof @variable v4 @type ^`v1.c3` @kind boolean;
  #L49d8c8.  v1:= 0I;
  #L49d8ca.  if v0 != 0 then goto L49d8d0;
  #L49d8ce.  return v1;
  #L49d8d0.  v4:= (`v1.c3`) v4 @kind object;
  #L49d8d4.  v0:= v3.`v1.c3.q` @type ^`boolean` @kind boolean;
  #L49d8d8.  v2:= v4.`v1.c3.q` @type ^`boolean` @kind boolean;
  #L49d8dc.  if v0 != v2 then goto L49d8ee;
  #L49d8e0.  v0:= v3.`v1.c3.p` @type ^`boolean` @kind boolean;
  #L49d8e4.  v4:= v4.`v1.c3.p` @type ^`boolean` @kind boolean;
  #L49d8e8.  if v0 != v4 then goto L49d8ee;
  #L49d8ec.  v1:= 1I;
  #L49d8ee.  return v1;
}
procedure `int` `hashCode`(`v1.c3` v3 @kind this) @signature `Lv1/c3;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L49d900.  v0:= 2I;
  #L49d902.  v0:= new `java.lang.Object`[v0];
  #L49d906.  v1:= v3.`v1.c3.p` @type ^`boolean` @kind boolean;
  #L49d90a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L49d910.  v1:= temp @kind object;
  #L49d912.  v2:= 0I;
  #L49d914.  v0[v2]:= v1 @kind object;
  #L49d918.  v1:= v3.`v1.c3.q` @type ^`boolean` @kind boolean;
  #L49d91c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L49d922.  v1:= temp @kind object;
  #L49d924.  v2:= 1I;
  #L49d926.  v0[v2]:= v1 @kind object;
  #L49d92a.  call temp:= `b`(v0) @signature `Ll5/i;.b:([Ljava/lang/Object;)I` @kind static;
  #L49d930.  v0:= temp;
  #L49d932.  return v0;
}
