record `v1.r1$f` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.UUID` `v1.r1$f.a` @AccessFlag PUBLIC_FINAL;
  `android.net.Uri` `v1.r1$f.b` @AccessFlag PUBLIC_FINAL;
  `m5.r` `v1.r1$f.c` @AccessFlag PUBLIC_FINAL;
  `boolean` `v1.r1$f.d` @AccessFlag PUBLIC_FINAL;
  `boolean` `v1.r1$f.e` @AccessFlag PUBLIC_FINAL;
  `boolean` `v1.r1$f.f` @AccessFlag PUBLIC_FINAL;
  `m5.q` `v1.r1$f.g` @AccessFlag PUBLIC_FINAL;
  `byte`[] `v1.r1$f.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`v1.r1$f` v1 @kind this, `v1.r1$f$a` v2 @kind object) @signature `Lv1/r1$f;.<init>:(Lv1/r1$f$a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L49673c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L496742.  call temp:= `g`(v2) @signature `Lv1/r1$f$a;.g:(Lv1/r1$f$a;)Z` @kind static;
  #L496748.  v0:= temp;
  #L49674a.  if v0 == 0 then goto L496760;
  #L49674e.  call temp:= `e`(v2) @signature `Lv1/r1$f$a;.e:(Lv1/r1$f$a;)Landroid/net/Uri;` @kind static;
  #L496754.  v0:= temp @kind object;
  #L496756.  if v0 == 0 then goto L49675c;
  #L49675a.  goto L496760;
  #L49675c.  v0:= 0I;
  #L49675e.  goto L496762;
  #L496760.  v0:= 1I;
  #L496762.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L496768.  call temp:= `f`(v2) @signature `Lv1/r1$f$a;.f:(Lv1/r1$f$a;)Ljava/util/UUID;` @kind static;
  #L49676e.  v0:= temp @kind object;
  #L496770.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L496776.  v0:= temp @kind object;
  #L496778.  v0:= (`java.util.UUID`) v0 @kind object;
  #L49677c.  v1.`v1.r1$f.a` @type ^`java.util.UUID` := v0 @kind object;
  #L496780.  call temp:= `e`(v2) @signature `Lv1/r1$f$a;.e:(Lv1/r1$f$a;)Landroid/net/Uri;` @kind static;
  #L496786.  v0:= temp @kind object;
  #L496788.  v1.`v1.r1$f.b` @type ^`android.net.Uri` := v0 @kind object;
  #L49678c.  call temp:= `h`(v2) @signature `Lv1/r1$f$a;.h:(Lv1/r1$f$a;)Lm5/r;` @kind static;
  #L496792.  call temp:= `h`(v2) @signature `Lv1/r1$f$a;.h:(Lv1/r1$f$a;)Lm5/r;` @kind static;
  #L496798.  v0:= temp @kind object;
  #L49679a.  v1.`v1.r1$f.c` @type ^`m5.r` := v0 @kind object;
  #L49679e.  call temp:= `a`(v2) @signature `Lv1/r1$f$a;.a:(Lv1/r1$f$a;)Z` @kind static;
  #L4967a4.  v0:= temp;
  #L4967a6.  v1.`v1.r1$f.d` @type ^`boolean` := v0 @kind boolean;
  #L4967aa.  call temp:= `g`(v2) @signature `Lv1/r1$f$a;.g:(Lv1/r1$f$a;)Z` @kind static;
  #L4967b0.  v0:= temp;
  #L4967b2.  v1.`v1.r1$f.f` @type ^`boolean` := v0 @kind boolean;
  #L4967b6.  call temp:= `b`(v2) @signature `Lv1/r1$f$a;.b:(Lv1/r1$f$a;)Z` @kind static;
  #L4967bc.  v0:= temp;
  #L4967be.  v1.`v1.r1$f.e` @type ^`boolean` := v0 @kind boolean;
  #L4967c2.  call temp:= `c`(v2) @signature `Lv1/r1$f$a;.c:(Lv1/r1$f$a;)Lm5/q;` @kind static;
  #L4967c8.  call temp:= `c`(v2) @signature `Lv1/r1$f$a;.c:(Lv1/r1$f$a;)Lm5/q;` @kind static;
  #L4967ce.  v0:= temp @kind object;
  #L4967d0.  v1.`v1.r1$f.g` @type ^`m5.q` := v0 @kind object;
  #L4967d4.  call temp:= `d`(v2) @signature `Lv1/r1$f$a;.d:(Lv1/r1$f$a;)[B` @kind static;
  #L4967da.  v0:= temp @kind object;
  #L4967dc.  if v0 == 0 then goto L4967fc;
  #L4967e0.  call temp:= `d`(v2) @signature `Lv1/r1$f$a;.d:(Lv1/r1$f$a;)[B` @kind static;
  #L4967e6.  v0:= temp @kind object;
  #L4967e8.  call temp:= `d`(v2) @signature `Lv1/r1$f$a;.d:(Lv1/r1$f$a;)[B` @kind static;
  #L4967ee.  v2:= temp @kind object;
  #L4967f0.  v2:= length @variable v2;
  #L4967f2.  call temp:= `copyOf`(v0, v2) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L4967f8.  v2:= temp @kind object;
  #L4967fa.  goto L4967fe;
  #L4967fc.  v2:= 0I;
  #L4967fe.  v1.`v1.r1$f.h` @type ^`byte`[] := v2 @kind object;
  #L496802.  return @kind void;
}
procedure `void` `<init>`(`v1.r1$f` v0 @kind this, `v1.r1$f$a` v1 @kind object, `v1.r1$a` v2 @kind object) @signature `Lv1/r1$f;.<init>:(Lv1/r1$f$a;Lv1/r1$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L496814.  call `<init>`(v0, v1) @signature `Lv1/r1$f;.<init>:(Lv1/r1$f$a;)V` @kind direct;
  #L49681a.  return @kind void;
}
procedure `byte`[] `a`(`v1.r1$f` v0 @kind object) @signature `Lv1/r1$f;.a:(Lv1/r1$f;)[B` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L496650.  v0:= v0.`v1.r1$f.h` @type ^`byte`[] @kind object;
  #L496654.  return v0 @kind object;
}
procedure `v1.r1$f$a` `b`(`v1.r1$f` v2 @kind this) @signature `Lv1/r1$f;.b:()Lv1/r1$f$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49671c.  v0:= new `v1.r1$f$a`;
  #L496720.  v1:= 0I;
  #L496722.  call `<init>`(v0, v2, v1) @signature `Lv1/r1$f$a;.<init>:(Lv1/r1$f;Lv1/r1$a;)V` @kind direct;
  #L496728.  return v0 @kind object;
}
procedure `byte`[] `c`(`v1.r1$f` v2 @kind this) @signature `Lv1/r1$f;.c:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L496668.  v0:= v2.`v1.r1$f.h` @type ^`byte`[] @kind object;
  #L49666c.  if v0 == 0 then goto L49667c;
  #L496670.  v1:= length @variable v0;
  #L496672.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L496678.  v0:= temp @kind object;
  #L49667a.  goto L49667e;
  #L49667c.  v0:= 0I;
  #L49667e.  return v0 @kind object;
}
procedure `boolean` `equals`(`v1.r1$f` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lv1/r1$f;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L496598.  v0:= 1I;
  #L49659a.  if v4 != v5 then goto L4965a0;
  #L49659e.  return v0;
  #L4965a0.  v1:= instanceof @variable v5 @type ^`v1.r1$f` @kind boolean;
  #L4965a4.  v2:= 0I;
  #L4965a6.  if v1 != 0 then goto L4965ac;
  #L4965aa.  return v2;
  #L4965ac.  v5:= (`v1.r1$f`) v5 @kind object;
  #L4965b0.  v1:= v4.`v1.r1$f.a` @type ^`java.util.UUID` @kind object;
  #L4965b4.  v3:= v5.`v1.r1$f.a` @type ^`java.util.UUID` @kind object;
  #L4965b8.  call temp:= `equals`(v1, v3) @signature `Ljava/util/UUID;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4965be.  v1:= temp;
  #L4965c0.  if v1 == 0 then goto L49663a;
  #L4965c4.  v1:= v4.`v1.r1$f.b` @type ^`android.net.Uri` @kind object;
  #L4965c8.  v3:= v5.`v1.r1$f.b` @type ^`android.net.Uri` @kind object;
  #L4965cc.  call temp:= `c`(v1, v3) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4965d2.  v1:= temp;
  #L4965d4.  if v1 == 0 then goto L49663a;
  #L4965d8.  v1:= v4.`v1.r1$f.c` @type ^`m5.r` @kind object;
  #L4965dc.  v3:= v5.`v1.r1$f.c` @type ^`m5.r` @kind object;
  #L4965e0.  call temp:= `c`(v1, v3) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4965e6.  v1:= temp;
  #L4965e8.  if v1 == 0 then goto L49663a;
  #L4965ec.  v1:= v4.`v1.r1$f.d` @type ^`boolean` @kind boolean;
  #L4965f0.  v3:= v5.`v1.r1$f.d` @type ^`boolean` @kind boolean;
  #L4965f4.  if v1 != v3 then goto L49663a;
  #L4965f8.  v1:= v4.`v1.r1$f.f` @type ^`boolean` @kind boolean;
  #L4965fc.  v3:= v5.`v1.r1$f.f` @type ^`boolean` @kind boolean;
  #L496600.  if v1 != v3 then goto L49663a;
  #L496604.  v1:= v4.`v1.r1$f.e` @type ^`boolean` @kind boolean;
  #L496608.  v3:= v5.`v1.r1$f.e` @type ^`boolean` @kind boolean;
  #L49660c.  if v1 != v3 then goto L49663a;
  #L496610.  v1:= v4.`v1.r1$f.g` @type ^`m5.q` @kind object;
  #L496614.  v3:= v5.`v1.r1$f.g` @type ^`m5.q` @kind object;
  #L496618.  call temp:= `equals`(v1, v3) @signature `Lm5/q;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L49661e.  v1:= temp;
  #L496620.  if v1 == 0 then goto L49663a;
  #L496624.  v1:= v4.`v1.r1$f.h` @type ^`byte`[] @kind object;
  #L496628.  v5:= v5.`v1.r1$f.h` @type ^`byte`[] @kind object;
  #L49662c.  call temp:= `equals`(v1, v5) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L496632.  v5:= temp;
  #L496634.  if v5 == 0 then goto L49663a;
  #L496638.  goto L49663c;
  #L49663a.  v0:= 0I;
  #L49663c.  return v0;
}
procedure `int` `hashCode`(`v1.r1$f` v2 @kind this) @signature `Lv1/r1$f;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L496690.  v0:= v2.`v1.r1$f.a` @type ^`java.util.UUID` @kind object;
  #L496694.  call temp:= `hashCode`(v0) @signature `Ljava/util/UUID;.hashCode:()I` @kind virtual;
  #L49669a.  v0:= temp;
  #L49669c.  v0:= v0 * 31;
  #L4966a0.  v1:= v2.`v1.r1$f.b` @type ^`android.net.Uri` @kind object;
  #L4966a4.  if v1 == 0 then goto L4966b2;
  #L4966a8.  call temp:= `hashCode`(v1) @signature `Landroid/net/Uri;.hashCode:()I` @kind virtual;
  #L4966ae.  v1:= temp;
  #L4966b0.  goto L4966b4;
  #L4966b2.  v1:= 0I;
  #L4966b4.  v0:= v0 + v1 @kind int;
  #L4966b6.  v0:= v0 * 31;
  #L4966ba.  v1:= v2.`v1.r1$f.c` @type ^`m5.r` @kind object;
  #L4966be.  call temp:= `hashCode`(v1) @signature `Lm5/r;.hashCode:()I` @kind virtual;
  #L4966c4.  v1:= temp;
  #L4966c6.  v0:= v0 + v1 @kind int;
  #L4966c8.  v0:= v0 * 31;
  #L4966cc.  v1:= v2.`v1.r1$f.d` @type ^`boolean` @kind boolean;
  #L4966d0.  v0:= v0 + v1 @kind int;
  #L4966d2.  v0:= v0 * 31;
  #L4966d6.  v1:= v2.`v1.r1$f.f` @type ^`boolean` @kind boolean;
  #L4966da.  v0:= v0 + v1 @kind int;
  #L4966dc.  v0:= v0 * 31;
  #L4966e0.  v1:= v2.`v1.r1$f.e` @type ^`boolean` @kind boolean;
  #L4966e4.  v0:= v0 + v1 @kind int;
  #L4966e6.  v0:= v0 * 31;
  #L4966ea.  v1:= v2.`v1.r1$f.g` @type ^`m5.q` @kind object;
  #L4966ee.  call temp:= `hashCode`(v1) @signature `Lm5/q;.hashCode:()I` @kind virtual;
  #L4966f4.  v1:= temp;
  #L4966f6.  v0:= v0 + v1 @kind int;
  #L4966f8.  v0:= v0 * 31;
  #L4966fc.  v1:= v2.`v1.r1$f.h` @type ^`byte`[] @kind object;
  #L496700.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L496706.  v1:= temp;
  #L496708.  v0:= v0 + v1 @kind int;
  #L49670a.  return v0;
}
