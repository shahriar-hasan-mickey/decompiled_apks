record `v1.k2$b$a` @kind class @AccessFlag PUBLIC_FINAL {
  `s3.k$b` `v1.k2$b$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Lv1/k2$b$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L49c37c.  return @kind void;
}
procedure `void` `<init>`(`v1.k2$b$a` v1 @kind this) @signature `Lv1/k2$b$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L49c390.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49c396.  v0:= new `s3.k$b`;
  #L49c39a.  call `<init>`(v0) @signature `Ls3/k$b;.<init>:()V` @kind direct;
  #L49c3a0.  v1.`v1.k2$b$a.a` @type ^`s3.k$b` := v0 @kind object;
  #L49c3a4.  return @kind void;
}
procedure `v1.k2$b$a` `a`(`v1.k2$b$a` v1 @kind this, `int` v2 ) @signature `Lv1/k2$b$a;.a:(I)Lv1/k2$b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49c304.  v0:= v1.`v1.k2$b$a.a` @type ^`s3.k$b` @kind object;
  #L49c308.  call temp:= `a`(v0, v2) @signature `Ls3/k$b;.a:(I)Ls3/k$b;` @kind virtual;
  #L49c30e.  return v1 @kind object;
}
procedure `v1.k2$b$a` `b`(`v1.k2$b$a` v1 @kind this, `v1.k2$b` v2 @kind object) @signature `Lv1/k2$b$a;.b:(Lv1/k2$b;)Lv1/k2$b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49c33c.  v0:= v1.`v1.k2$b$a.a` @type ^`s3.k$b` @kind object;
  #L49c340.  call temp:= `a`(v2) @signature `Lv1/k2$b;.a:(Lv1/k2$b;)Ls3/k;` @kind static;
  #L49c346.  v2:= temp @kind object;
  #L49c348.  call temp:= `b`(v0, v2) @signature `Ls3/k$b;.b:(Ls3/k;)Ls3/k$b;` @kind virtual;
  #L49c34e.  return v1 @kind object;
}
procedure `v1.k2$b$a` `c`(`v1.k2$b$a` v1 @kind this, `int`[] v2 @kind object) @signature `Lv1/k2$b$a;.c:([I)Lv1/k2$b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49c320.  v0:= v1.`v1.k2$b$a.a` @type ^`s3.k$b` @kind object;
  #L49c324.  call temp:= `c`(v0, v2) @signature `Ls3/k$b;.c:([I)Ls3/k$b;` @kind virtual;
  #L49c32a.  return v1 @kind object;
}
procedure `v1.k2$b$a` `d`(`v1.k2$b$a` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Lv1/k2$b$a;.d:(IZ)Lv1/k2$b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49c360.  v0:= v1.`v1.k2$b$a.a` @type ^`s3.k$b` @kind object;
  #L49c364.  call temp:= `d`(v0, v2, v3) @signature `Ls3/k$b;.d:(IZ)Ls3/k$b;` @kind virtual;
  #L49c36a.  return v1 @kind object;
}
procedure `v1.k2$b` `e`(`v1.k2$b$a` v3 @kind this) @signature `Lv1/k2$b$a;.e:()Lv1/k2$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L49c2d8.  v0:= new `v1.k2$b`;
  #L49c2dc.  v1:= v3.`v1.k2$b$a.a` @type ^`s3.k$b` @kind object;
  #L49c2e0.  call temp:= `e`(v1) @signature `Ls3/k$b;.e:()Ls3/k;` @kind virtual;
  #L49c2e6.  v1:= temp @kind object;
  #L49c2e8.  v2:= 0I;
  #L49c2ea.  call `<init>`(v0, v1, v2) @signature `Lv1/k2$b;.<init>:(Ls3/k;Lv1/k2$a;)V` @kind direct;
  #L49c2f0.  return v0 @kind object;
}
