record `v1.d2$c` @kind class @AccessFlag FINAL extends `v1.b2` @kind interface {
  `x2.p` `v1.d2$c.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `v1.d2$c.b` @AccessFlag PUBLIC_FINAL;
  `java.util.List` `v1.d2$c.c` @AccessFlag PUBLIC_FINAL;
  `int` `v1.d2$c.d` @AccessFlag PUBLIC;
  `boolean` `v1.d2$c.e` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`v1.d2$c` v1 @kind this, `x2.u` v2 @kind object, `boolean` v3 ) @signature `Lv1/d2$c;.<init>:(Lx2/u;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L49ae0c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49ae12.  v0:= new `x2.p`;
  #L49ae16.  call `<init>`(v0, v2, v3) @signature `Lx2/p;.<init>:(Lx2/u;Z)V` @kind direct;
  #L49ae1c.  v1.`v1.d2$c.a` @type ^`x2.p` := v0 @kind object;
  #L49ae20.  v2:= new `java.util.ArrayList`;
  #L49ae24.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L49ae2a.  v1.`v1.d2$c.c` @type ^`java.util.List` := v2 @kind object;
  #L49ae2e.  v2:= new `java.lang.Object`;
  #L49ae32.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49ae38.  v1.`v1.d2$c.b` @type ^`java.lang.Object` := v2 @kind object;
  #L49ae3c.  return @kind void;
}
procedure `java.lang.Object` `a`(`v1.d2$c` v1 @kind this) @signature `Lv1/d2$c;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49add4.  v0:= v1.`v1.d2$c.b` @type ^`java.lang.Object` @kind object;
  #L49add8.  return v0 @kind object;
}
procedure `v1.d3` `b`(`v1.d2$c` v1 @kind this) @signature `Lv1/d2$c;.b:()Lv1/d3;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49adec.  v0:= v1.`v1.d2$c.a` @type ^`x2.p` @kind object;
  #L49adf0.  call temp:= `Q`(v0) @signature `Lx2/p;.Q:()Lv1/d3;` @kind virtual;
  #L49adf6.  v0:= temp @kind object;
  #L49adf8.  return v0 @kind object;
}
procedure `void` `c`(`v1.d2$c` v0 @kind this, `int` v1 ) @signature `Lv1/d2$c;.c:(I)V` @AccessFlag PUBLIC {
    temp;

  #L49ae50.  v0.`v1.d2$c.d` @type ^`int` := v1;
  #L49ae54.  v1:= 0I;
  #L49ae56.  v0.`v1.d2$c.e` @type ^`boolean` := v1 @kind boolean;
  #L49ae5a.  v1:= v0.`v1.d2$c.c` @type ^`java.util.List` @kind object;
  #L49ae5e.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L49ae64.  return @kind void;
}
