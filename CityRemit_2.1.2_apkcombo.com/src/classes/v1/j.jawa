record `v1.j` @kind class @AccessFlag PUBLIC extends `v1.p1` @kind interface {
  `r3.q` `v1.j.a` @AccessFlag PRIVATE_FINAL;
  `long` `v1.j.b` @AccessFlag PRIVATE_FINAL;
  `long` `v1.j.c` @AccessFlag PRIVATE_FINAL;
  `long` `v1.j.d` @AccessFlag PRIVATE_FINAL;
  `long` `v1.j.e` @AccessFlag PRIVATE_FINAL;
  `int` `v1.j.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `v1.j.g` @AccessFlag PRIVATE_FINAL;
  `long` `v1.j.h` @AccessFlag PRIVATE_FINAL;
  `boolean` `v1.j.i` @AccessFlag PRIVATE_FINAL;
  `int` `v1.j.j` @AccessFlag PRIVATE;
  `boolean` `v1.j.k` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`v1.j` v10 @kind this) @signature `Lv1/j;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L489e78.  v1:= new `r3.q`;
  #L489e7c.  v0:= 1I;
  #L489e7e.  v2:= 65536I;
  #L489e82.  call `<init>`(v1, v0, v2) @signature `Lr3/q;.<init>:(ZI)V` @kind direct;
  #L489e88.  v2:= 50000I;
  #L489e8e.  v3:= 50000I;
  #L489e94.  v4:= 2500I;
  #L489e98.  v5:= 5000I;
  #L489e9c.  v6:= -1I;
  #L489e9e.  v7:= 0I;
  #L489ea0.  v8:= 0I;
  #L489ea2.  v9:= 0I;
  #L489ea4.  v0:= v10 @kind object;
  #L489ea6.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lv1/j;.<init>:(Lr3/q;IIIIIZIZ)V` @kind direct;
  #L489eac.  return @kind void;
}
procedure `void` `<init>`(`v1.j` v5 @kind this, `r3.q` v6 @kind object, `int` v7 , `int` v8 , `int` v9 , `int` v10 , `int` v11 , `boolean` v12 , `int` v13 , `boolean` v14 ) @signature `Lv1/j;.<init>:(Lr3/q;IIIIIZIZ)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L489ec0.  call `<init>`(v5) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L489ec6.  v0:= 0I;
  #L489ec8.  v1:= "bufferForPlaybackMs" @kind object;
  #L489ecc.  v2:= "0" @kind object;
  #L489ed0.  call `j`(v9, v0, v1, v2) @signature `Lv1/j;.j:(IILjava/lang/String;Ljava/lang/String;)V` @kind static;
  #L489ed6.  v3:= "bufferForPlaybackAfterRebufferMs" @kind object;
  #L489eda.  call `j`(v10, v0, v3, v2) @signature `Lv1/j;.j:(IILjava/lang/String;Ljava/lang/String;)V` @kind static;
  #L489ee0.  v4:= "minBufferMs" @kind object;
  #L489ee4.  call `j`(v7, v9, v4, v1) @signature `Lv1/j;.j:(IILjava/lang/String;Ljava/lang/String;)V` @kind static;
  #L489eea.  call `j`(v7, v10, v4, v3) @signature `Lv1/j;.j:(IILjava/lang/String;Ljava/lang/String;)V` @kind static;
  #L489ef0.  v1:= "maxBufferMs" @kind object;
  #L489ef4.  call `j`(v8, v7, v1, v4) @signature `Lv1/j;.j:(IILjava/lang/String;Ljava/lang/String;)V` @kind static;
  #L489efa.  v1:= "backBufferDurationMs" @kind object;
  #L489efe.  call `j`(v13, v0, v1, v2) @signature `Lv1/j;.j:(IILjava/lang/String;Ljava/lang/String;)V` @kind static;
  #L489f04.  v5.`v1.j.a` @type ^`r3.q` := v6 @kind object;
  #L489f08.  v6:= (`long`) v7 @kind i2l;
  #L489f0a.  call temp:= `A0`(v6) @signature `Ls3/l0;.A0:(J)J` @kind static;
  #L489f10.  v6:= temp @kind wide;
  #L489f12.  v5.`v1.j.b` @type ^`long` := v6 @kind wide;
  #L489f16.  v6:= (`long`) v8 @kind i2l;
  #L489f18.  call temp:= `A0`(v6) @signature `Ls3/l0;.A0:(J)J` @kind static;
  #L489f1e.  v6:= temp @kind wide;
  #L489f20.  v5.`v1.j.c` @type ^`long` := v6 @kind wide;
  #L489f24.  v6:= (`long`) v9 @kind i2l;
  #L489f26.  call temp:= `A0`(v6) @signature `Ls3/l0;.A0:(J)J` @kind static;
  #L489f2c.  v6:= temp @kind wide;
  #L489f2e.  v5.`v1.j.d` @type ^`long` := v6 @kind wide;
  #L489f32.  v6:= (`long`) v10 @kind i2l;
  #L489f34.  call temp:= `A0`(v6) @signature `Ls3/l0;.A0:(J)J` @kind static;
  #L489f3a.  v6:= temp @kind wide;
  #L489f3c.  v5.`v1.j.e` @type ^`long` := v6 @kind wide;
  #L489f40.  v5.`v1.j.f` @type ^`int` := v11;
  #L489f44.  v6:= -1I;
  #L489f46.  if v11 == v6 then goto L489f4c;
  #L489f4a.  goto L489f50;
  #L489f4c.  v11:= 13107200I;
  #L489f50.  v5.`v1.j.j` @type ^`int` := v11;
  #L489f54.  v5.`v1.j.g` @type ^`boolean` := v12 @kind boolean;
  #L489f58.  v6:= (`long`) v13 @kind i2l;
  #L489f5a.  call temp:= `A0`(v6) @signature `Ls3/l0;.A0:(J)J` @kind static;
  #L489f60.  v6:= temp @kind wide;
  #L489f62.  v5.`v1.j.h` @type ^`long` := v6 @kind wide;
  #L489f66.  v5.`v1.j.i` @type ^`boolean` := v14 @kind boolean;
  #L489f6a.  return @kind void;
}
procedure `void` `j`(`int` v0 , `int` v1 , `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lv1/j;.j:(IILjava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L489f7c.  if v0 < v1 then goto L489f84;
  #L489f80.  v0:= 1I;
  #L489f82.  goto L489f86;
  #L489f84.  v0:= 0I;
  #L489f86.  v1:= new `java.lang.StringBuilder`;
  #L489f8a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L489f90.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L489f96.  v2:= " cannot be less than " @kind object;
  #L489f9a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L489fa0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L489fa6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L489fac.  v1:= temp @kind object;
  #L489fae.  call `b`(v0, v1) @signature `Ls3/a;.b:(ZLjava/lang/Object;)V` @kind static;
  #L489fb4.  return @kind void;
}
procedure `int` `l`(`int` v1 ) @signature `Lv1/j;.l:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L489ddc.  v0:= 131072I;
  #L489de0.  goto L489e0c;
  #L489de6.  v1:= new `java.lang.IllegalArgumentException`;
  #L489dea.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L489df0.  throw v1;
  #L489df2.  return v0;
  #L489df4.  v1:= 131072000I;
  #L489df8.  return v1;
  #L489dfa.  v1:= 13107200I;
  #L489dfe.  return v1;
  #L489e00.  v1:= 144310272I;
  #L489e04.  return v1;
  #L489e06.  v1:= 0I;
  #L489e08.  return v1;
  #L489e0a.  
  #L489e0c.  switch v1
                  | -2 => goto L489e06
                  | -1 => goto L489de6
                  | 0 => goto L489e00
                  | 1 => goto L489dfa
                  | 2 => goto L489df4
                  | 3 => goto L489df2
                  | 4 => goto L489df2
                  | 5 => goto L489df2
                  | 6 => goto L489df2
                  | else => goto L489de6;
}
procedure `void` `m`(`v1.j` v2 @kind this, `boolean` v3 ) @signature `Lv1/j;.m:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48a050.  v0:= v2.`v1.j.f` @type ^`int`;
  #L48a054.  v1:= -1I;
  #L48a056.  if v0 != v1 then goto L48a05e;
  #L48a05a.  v0:= 13107200I;
  #L48a05e.  v2.`v1.j.j` @type ^`int` := v0;
  #L48a062.  v0:= 0I;
  #L48a064.  v2.`v1.j.k` @type ^`boolean` := v0 @kind boolean;
  #L48a068.  if v3 == 0 then goto L48a076;
  #L48a06c.  v3:= v2.`v1.j.a` @type ^`r3.q` @kind object;
  #L48a070.  call `g`(v3) @signature `Lr3/q;.g:()V` @kind virtual;
  #L48a076.  return @kind void;
}
procedure `boolean` `a`(`v1.j` v1 @kind this) @signature `Lv1/j;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L489c44.  v0:= v1.`v1.j.i` @type ^`boolean` @kind boolean;
  #L489c48.  return v0;
}
procedure `void` `b`(`v1.j` v1 @kind this) @signature `Lv1/j;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L489fc8.  v0:= 0I;
  #L489fca.  call `m`(v1, v0) @signature `Lv1/j;.m:(Z)V` @kind direct;
  #L489fd0.  return @kind void;
}
procedure `void` `c`(`v1.j` v1 @kind this, `v1.r2`[] v2 @kind object, `x2.v0` v3 @kind object, `q3.s`[] v4 @kind object) @signature `Lv1/j;.c:([Lv1/r2;Lx2/v0;[Lq3/s;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48a01c.  v3:= v1.`v1.j.f` @type ^`int`;
  #L48a020.  v0:= -1I;
  #L48a022.  if v3 != v0 then goto L48a02e;
  #L48a026.  call temp:= `k`(v1, v2, v4) @signature `Lv1/j;.k:([Lv1/r2;[Lq3/s;)I` @kind virtual;
  #L48a02c.  v3:= temp;
  #L48a02e.  v1.`v1.j.j` @type ^`int` := v3;
  #L48a032.  v2:= v1.`v1.j.a` @type ^`r3.q` @kind object;
  #L48a036.  call `h`(v2, v3) @signature `Lr3/q;.h:(I)V` @kind virtual;
  #L48a03c.  return @kind void;
}
procedure `void` `d`(`v1.j` v1 @kind this) @signature `Lv1/j;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L489fe4.  v0:= 1I;
  #L489fe6.  call `m`(v1, v0) @signature `Lv1/j;.m:(Z)V` @kind direct;
  #L489fec.  return @kind void;
}
procedure `boolean` `e`(`v1.j` v3 @kind this, `long` v4 , `float` v6 , `boolean` v7 , `long` v8 ) @signature `Lv1/j;.e:(JFZJ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L489d10.  call temp:= `e0`(v4, v6) @signature `Ls3/l0;.e0:(JF)J` @kind static;
  #L489d16.  v4:= temp @kind wide;
  #L489d18.  if v7 == 0 then goto L489d22;
  #L489d1c.  v6:= v3.`v1.j.e` @type ^`long` @kind wide;
  #L489d20.  goto L489d26;
  #L489d22.  v6:= v3.`v1.j.d` @type ^`long` @kind wide;
  #L489d26.  v0:= -4.9E-324D;
  #L489d30.  v2:= lcmp(v8, v0);
  #L489d34.  if v2 == 0 then goto L489d46;
  #L489d38.  v0:= 2L;
  #L489d3c.  v8:= v8 / v0 @kind long;
  #L489d3e.  call temp:= `min`(v8, v6) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L489d44.  v6:= temp @kind wide;
  #L489d46.  v8:= 0L;
  #L489d4a.  v0:= lcmp(v6, v8);
  #L489d4e.  if v0 <= 0 then goto L489d7c;
  #L489d52.  v8:= lcmp(v4, v6);
  #L489d56.  if v8 >= 0 then goto L489d7c;
  #L489d5a.  v4:= v3.`v1.j.g` @type ^`boolean` @kind boolean;
  #L489d5e.  if v4 != 0 then goto L489d78;
  #L489d62.  v4:= v3.`v1.j.a` @type ^`r3.q` @kind object;
  #L489d66.  call temp:= `f`(v4) @signature `Lr3/q;.f:()I` @kind virtual;
  #L489d6c.  v4:= temp;
  #L489d6e.  v5:= v3.`v1.j.j` @type ^`int`;
  #L489d72.  if v4 < v5 then goto L489d78;
  #L489d76.  goto L489d7c;
  #L489d78.  v4:= 0I;
  #L489d7a.  goto L489d7e;
  #L489d7c.  v4:= 1I;
  #L489d7e.  return v4;
}
procedure `boolean` `f`(`v1.j` v6 @kind this, `long` v7 , `long` v9 , `float` v11 ) @signature `Lv1/j;.f:(JJF)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L489c5c.  v7:= v6.`v1.j.a` @type ^`r3.q` @kind object;
  #L489c60.  call temp:= `f`(v7) @signature `Lr3/q;.f:()I` @kind virtual;
  #L489c66.  v7:= temp;
  #L489c68.  v8:= v6.`v1.j.j` @type ^`int`;
  #L489c6c.  v0:= 1I;
  #L489c6e.  v1:= 0I;
  #L489c70.  if v7 < v8 then goto L489c78;
  #L489c74.  v7:= 1I;
  #L489c76.  goto L489c7a;
  #L489c78.  v7:= 0I;
  #L489c7a.  v2:= v6.`v1.j.b` @type ^`long` @kind wide;
  #L489c7e.  v8:= 1.0F;
  #L489c82.  v8:= fcmpl(v11, v8);
  #L489c86.  if v8 <= 0 then goto L489c9e;
  #L489c8a.  call temp:= `Z`(v2, v11) @signature `Ls3/l0;.Z:(JF)J` @kind static;
  #L489c90.  v2:= temp @kind wide;
  #L489c92.  v4:= v6.`v1.j.c` @type ^`long` @kind wide;
  #L489c96.  call temp:= `min`(v2, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L489c9c.  v2:= temp @kind wide;
  #L489c9e.  v4:= 500000L;
  #L489ca4.  call temp:= `max`(v2, v4) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L489caa.  v2:= temp @kind wide;
  #L489cac.  v8:= lcmp(v9, v2);
  #L489cb0.  if v8 >= 0 then goto L489ce4;
  #L489cb4.  v8:= v6.`v1.j.g` @type ^`boolean` @kind boolean;
  #L489cb8.  if v8 != 0 then goto L489cc4;
  #L489cbc.  if v7 != 0 then goto L489cc2;
  #L489cc0.  goto L489cc4;
  #L489cc2.  v0:= 0I;
  #L489cc4.  v6.`v1.j.k` @type ^`boolean` := v0 @kind boolean;
  #L489cc8.  if v0 != 0 then goto L489cf8;
  #L489ccc.  v7:= lcmp(v9, v4);
  #L489cd0.  if v7 >= 0 then goto L489cf8;
  #L489cd4.  v7:= "DefaultLoadControl" @kind object;
  #L489cd8.  v8:= "Target buffer size reached with less than 500ms of buffered media data." @kind object;
  #L489cdc.  call `h`(v7, v8) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L489ce2.  goto L489cf8;
  #L489ce4.  v2:= v6.`v1.j.c` @type ^`long` @kind wide;
  #L489ce8.  v8:= lcmp(v9, v2);
  #L489cec.  if v8 >= 0 then goto L489cf4;
  #L489cf0.  if v7 == 0 then goto L489cf8;
  #L489cf4.  v6.`v1.j.k` @type ^`boolean` := v1 @kind boolean;
  #L489cf8.  v7:= v6.`v1.j.k` @type ^`boolean` @kind boolean;
  #L489cfc.  return v7;
}
procedure `r3.b` `g`(`v1.j` v1 @kind this) @signature `Lv1/j;.g:()Lr3/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L489e60.  v0:= v1.`v1.j.a` @type ^`r3.q` @kind object;
  #L489e64.  return v0 @kind object;
}
procedure `void` `h`(`v1.j` v1 @kind this) @signature `Lv1/j;.h:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48a000.  v0:= 1I;
  #L48a002.  call `m`(v1, v0) @signature `Lv1/j;.m:(Z)V` @kind direct;
  #L48a008.  return @kind void;
}
procedure `long` `i`(`v1.j` v2 @kind this) @signature `Lv1/j;.i:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L489e48.  v0:= v2.`v1.j.h` @type ^`long` @kind wide;
  #L489e4c.  return v0 @kind wide;
}
procedure `int` `k`(`v1.j` v3 @kind this, `v1.r2`[] v4 @kind object, `q3.s`[] v5 @kind object) @signature `Lv1/j;.k:([Lv1/r2;[Lq3/s;)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L489d90.  v0:= 0I;
  #L489d92.  v1:= 0I;
  #L489d94.  v2:= length @variable v4;
  #L489d96.  if v0 >= v2 then goto L489dbe;
  #L489d9a.  v2:= v5[v0] @kind object;
  #L489d9e.  if v2 == 0 then goto L489db8;
  #L489da2.  v2:= v4[v0] @kind object;
  #L489da6.  call temp:= `j`(v2) @signature `Lv1/r2;.j:()I` @kind interface;
  #L489dac.  v2:= temp;
  #L489dae.  call temp:= `l`(v2) @signature `Lv1/j;.l:(I)I` @kind static;
  #L489db4.  v2:= temp;
  #L489db6.  v1:= v1 + v2 @kind int;
  #L489db8.  v0:= v0 + 1;
  #L489dbc.  goto L489d94;
  #L489dbe.  v4:= 13107200I;
  #L489dc2.  call temp:= `max`(v4, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L489dc8.  v4:= temp;
  #L489dca.  return v4;
}
