record `v1.k2$e` @kind class @AccessFlag PUBLIC_FINAL extends `v1.g` @kind interface {
  `java.lang.Object` `v1.k2$e.o` @AccessFlag PUBLIC_FINAL;
  `int` `v1.k2$e.p` @AccessFlag PUBLIC_FINAL;
  `v1.r1` `v1.k2$e.q` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `v1.k2$e.r` @AccessFlag PUBLIC_FINAL;
  `int` `v1.k2$e.s` @AccessFlag PUBLIC_FINAL;
  `long` `v1.k2$e.t` @AccessFlag PUBLIC_FINAL;
  `long` `v1.k2$e.u` @AccessFlag PUBLIC_FINAL;
  `int` `v1.k2$e.v` @AccessFlag PUBLIC_FINAL;
  `int` `v1.k2$e.w` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<clinit>`() @signature `Lv1/k2$e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L49c8bc.  return @kind void;
}
procedure `void` `<init>`(`v1.k2$e` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `v1.r1` v3 @kind object, `java.lang.Object` v4 @kind object, `int` v5 , `long` v6 , `long` v8 , `int` v10 , `int` v11 ) @signature `Lv1/k2$e;.<init>:(Ljava/lang/Object;ILv1/r1;Ljava/lang/Object;IJJII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49c8d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49c8d6.  v0.`v1.k2$e.o` @type ^`java.lang.Object` := v1 @kind object;
  #L49c8da.  v0.`v1.k2$e.p` @type ^`int` := v2;
  #L49c8de.  v0.`v1.k2$e.q` @type ^`v1.r1` := v3 @kind object;
  #L49c8e2.  v0.`v1.k2$e.r` @type ^`java.lang.Object` := v4 @kind object;
  #L49c8e6.  v0.`v1.k2$e.s` @type ^`int` := v5;
  #L49c8ea.  v0.`v1.k2$e.t` @type ^`long` := v6 @kind wide;
  #L49c8ee.  v0.`v1.k2$e.u` @type ^`long` := v8 @kind wide;
  #L49c8f2.  v0.`v1.k2$e.v` @type ^`int` := v10;
  #L49c8f6.  v0.`v1.k2$e.w` @type ^`int` := v11;
  #L49c8fa.  return @kind void;
}
procedure `boolean` `equals`(`v1.k2$e` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lv1/k2$e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49c744.  v0:= 1I;
  #L49c746.  if v7 != v8 then goto L49c74c;
  #L49c74a.  return v0;
  #L49c74c.  v1:= 0I;
  #L49c74e.  if v8 == 0 then goto L49c7fa;
  #L49c752.  v2:= constclass @type ^`v1.k2$e` @kind object;
  #L49c756.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L49c75c.  v3:= temp @kind object;
  #L49c75e.  if v2 == v3 then goto L49c764;
  #L49c762.  goto L49c7fa;
  #L49c764.  v8:= (`v1.k2$e`) v8 @kind object;
  #L49c768.  v2:= v7.`v1.k2$e.p` @type ^`int`;
  #L49c76c.  v3:= v8.`v1.k2$e.p` @type ^`int`;
  #L49c770.  if v2 != v3 then goto L49c7f6;
  #L49c774.  v2:= v7.`v1.k2$e.s` @type ^`int`;
  #L49c778.  v3:= v8.`v1.k2$e.s` @type ^`int`;
  #L49c77c.  if v2 != v3 then goto L49c7f6;
  #L49c780.  v2:= v7.`v1.k2$e.t` @type ^`long` @kind wide;
  #L49c784.  v4:= v8.`v1.k2$e.t` @type ^`long` @kind wide;
  #L49c788.  v6:= lcmp(v2, v4);
  #L49c78c.  if v6 != 0 then goto L49c7f6;
  #L49c790.  v2:= v7.`v1.k2$e.u` @type ^`long` @kind wide;
  #L49c794.  v4:= v8.`v1.k2$e.u` @type ^`long` @kind wide;
  #L49c798.  v6:= lcmp(v2, v4);
  #L49c79c.  if v6 != 0 then goto L49c7f6;
  #L49c7a0.  v2:= v7.`v1.k2$e.v` @type ^`int`;
  #L49c7a4.  v3:= v8.`v1.k2$e.v` @type ^`int`;
  #L49c7a8.  if v2 != v3 then goto L49c7f6;
  #L49c7ac.  v2:= v7.`v1.k2$e.w` @type ^`int`;
  #L49c7b0.  v3:= v8.`v1.k2$e.w` @type ^`int`;
  #L49c7b4.  if v2 != v3 then goto L49c7f6;
  #L49c7b8.  v2:= v7.`v1.k2$e.o` @type ^`java.lang.Object` @kind object;
  #L49c7bc.  v3:= v8.`v1.k2$e.o` @type ^`java.lang.Object` @kind object;
  #L49c7c0.  call temp:= `a`(v2, v3) @signature `Ll5/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L49c7c6.  v2:= temp;
  #L49c7c8.  if v2 == 0 then goto L49c7f6;
  #L49c7cc.  v2:= v7.`v1.k2$e.r` @type ^`java.lang.Object` @kind object;
  #L49c7d0.  v3:= v8.`v1.k2$e.r` @type ^`java.lang.Object` @kind object;
  #L49c7d4.  call temp:= `a`(v2, v3) @signature `Ll5/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L49c7da.  v2:= temp;
  #L49c7dc.  if v2 == 0 then goto L49c7f6;
  #L49c7e0.  v2:= v7.`v1.k2$e.q` @type ^`v1.r1` @kind object;
  #L49c7e4.  v8:= v8.`v1.k2$e.q` @type ^`v1.r1` @kind object;
  #L49c7e8.  call temp:= `a`(v2, v8) @signature `Ll5/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L49c7ee.  v8:= temp;
  #L49c7f0.  if v8 == 0 then goto L49c7f6;
  #L49c7f4.  goto L49c7f8;
  #L49c7f6.  v0:= 0I;
  #L49c7f8.  return v0;
  #L49c7fa.  return v1;
}
procedure `int` `hashCode`(`v1.k2$e` v3 @kind this) @signature `Lv1/k2$e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L49c80c.  v0:= 9I;
  #L49c810.  v0:= new `java.lang.Object`[v0];
  #L49c814.  v1:= v3.`v1.k2$e.o` @type ^`java.lang.Object` @kind object;
  #L49c818.  v2:= 0I;
  #L49c81a.  v0[v2]:= v1 @kind object;
  #L49c81e.  v1:= v3.`v1.k2$e.p` @type ^`int`;
  #L49c822.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49c828.  v1:= temp @kind object;
  #L49c82a.  v2:= 1I;
  #L49c82c.  v0[v2]:= v1 @kind object;
  #L49c830.  v1:= v3.`v1.k2$e.q` @type ^`v1.r1` @kind object;
  #L49c834.  v2:= 2I;
  #L49c836.  v0[v2]:= v1 @kind object;
  #L49c83a.  v1:= v3.`v1.k2$e.r` @type ^`java.lang.Object` @kind object;
  #L49c83e.  v2:= 3I;
  #L49c840.  v0[v2]:= v1 @kind object;
  #L49c844.  v1:= v3.`v1.k2$e.s` @type ^`int`;
  #L49c848.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49c84e.  v1:= temp @kind object;
  #L49c850.  v2:= 4I;
  #L49c852.  v0[v2]:= v1 @kind object;
  #L49c856.  v1:= v3.`v1.k2$e.t` @type ^`long` @kind wide;
  #L49c85a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L49c860.  v1:= temp @kind object;
  #L49c862.  v2:= 5I;
  #L49c864.  v0[v2]:= v1 @kind object;
  #L49c868.  v1:= v3.`v1.k2$e.u` @type ^`long` @kind wide;
  #L49c86c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L49c872.  v1:= temp @kind object;
  #L49c874.  v2:= 6I;
  #L49c876.  v0[v2]:= v1 @kind object;
  #L49c87a.  v1:= v3.`v1.k2$e.v` @type ^`int`;
  #L49c87e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49c884.  v1:= temp @kind object;
  #L49c886.  v2:= 7I;
  #L49c888.  v0[v2]:= v1 @kind object;
  #L49c88c.  v1:= v3.`v1.k2$e.w` @type ^`int`;
  #L49c890.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L49c896.  v1:= temp @kind object;
  #L49c898.  v2:= 8I;
  #L49c89c.  v0[v2]:= v1 @kind object;
  #L49c8a0.  call temp:= `b`(v0) @signature `Ll5/i;.b:([Ljava/lang/Object;)I` @kind static;
  #L49c8a6.  v0:= temp;
  #L49c8a8.  return v0;
}
