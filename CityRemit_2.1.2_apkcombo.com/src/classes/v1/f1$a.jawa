record `v1.f1$a` @kind class @AccessFlag  extends `v1.r2$a` @kind interface {
  `v1.f1` `v1.f1$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`v1.f1$a` v0 @kind this, `v1.f1` v1 @kind object) @signature `Lv1/f1$a;.<init>:(Lv1/f1;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48c538.  v0.`v1.f1$a.a` @type ^`v1.f1` := v1 @kind object;
  #L48c53c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48c542.  return @kind void;
}
procedure `void` `a`(`v1.f1$a` v2 @kind this) @signature `Lv1/f1$a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48c554.  v0:= v2.`v1.f1$a.a` @type ^`v1.f1` @kind object;
  #L48c558.  v1:= 1I;
  #L48c55a.  call temp:= `g`(v0, v1) @signature `Lv1/f1;.g:(Lv1/f1;Z)Z` @kind static;
  #L48c560.  return @kind void;
}
procedure `void` `b`(`v1.f1$a` v2 @kind this) @signature `Lv1/f1$a;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48c574.  v0:= v2.`v1.f1$a.a` @type ^`v1.f1` @kind object;
  #L48c578.  call temp:= `i`(v0) @signature `Lv1/f1;.i:(Lv1/f1;)Ls3/m;` @kind static;
  #L48c57e.  v0:= temp @kind object;
  #L48c580.  v1:= 2I;
  #L48c582.  call temp:= `c`(v0, v1) @signature `Ls3/m;.c:(I)Z` @kind interface;
  #L48c588.  return @kind void;
}
