record `v1.p2` @kind class @AccessFlag PUBLIC_ABSTRACT extends `v1.g` @kind interface {
}
global `v1.g$a` `@@v1.p2.o` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lv1/p2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L49cf1c.  v0:= `@@v1.o2.a` @type ^`v1.o2` @kind object;
  #L49cf20.  `@@v1.p2.o` @type ^`v1.g$a` := v0 @kind object;
  #L49cf24.  return @kind void;
}
procedure `void` `<init>`(`v1.p2` v0 @kind this) @signature `Lv1/p2;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49cf38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49cf3e.  return @kind void;
}
procedure `v1.p2` `a`(`android.os.Bundle` v0 @kind object) @signature `Lv1/p2;.a:(Landroid/os/Bundle;)Lv1/p2;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L49ce74.  call temp:= `b`(v0) @signature `Lv1/p2;.b:(Landroid/os/Bundle;)Lv1/p2;` @kind static;
  #L49ce7a.  v0:= temp @kind object;
  #L49ce7c.  return v0 @kind object;
}
procedure `v1.p2` `b`(`android.os.Bundle` v3 @kind object) @signature `Lv1/p2;.b:(Landroid/os/Bundle;)Lv1/p2;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L49ce90.  v0:= 0I;
  #L49ce92.  call temp:= `c`(v0) @signature `Lv1/p2;.c:(I)Ljava/lang/String;` @kind static;
  #L49ce98.  v0:= temp @kind object;
  #L49ce9a.  v1:= -1I;
  #L49ce9c.  call temp:= `getInt`(v3, v0, v1) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;I)I` @kind virtual;
  #L49cea2.  v0:= temp;
  #L49cea4.  if v0 == 0 then goto L49cf06;
  #L49cea8.  v1:= 1I;
  #L49ceaa.  if v0 == v1 then goto L49cf00;
  #L49ceae.  v1:= 2I;
  #L49ceb0.  if v0 == v1 then goto L49cefa;
  #L49ceb4.  v1:= 3I;
  #L49ceb6.  if v0 != v1 then goto L49cecc;
  #L49ceba.  v0:= `@@v1.c3.r` @type ^`v1.g$a` @kind object;
  #L49cebe.  call temp:= `a`(v0, v3) @signature `Lv1/g$a;.a:(Landroid/os/Bundle;)Lv1/g;` @kind interface;
  #L49cec4.  v3:= temp @kind object;
  #L49cec6.  v3:= (`v1.p2`) v3 @kind object;
  #L49ceca.  return v3 @kind object;
  #L49cecc.  v3:= new `java.lang.IllegalArgumentException`;
  #L49ced0.  v1:= new `java.lang.StringBuilder`;
  #L49ced4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49ceda.  v2:= "Unknown RatingType: " @kind object;
  #L49cede.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49cee4.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L49ceea.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49cef0.  v0:= temp @kind object;
  #L49cef2.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49cef8.  throw v3;
  #L49cefa.  v0:= `@@v1.y2.r` @type ^`v1.g$a` @kind object;
  #L49cefe.  goto L49cebe;
  #L49cf00.  v0:= `@@v1.g2.q` @type ^`v1.g$a` @kind object;
  #L49cf04.  goto L49cebe;
  #L49cf06.  v0:= `@@v1.m1.r` @type ^`v1.g$a` @kind object;
  #L49cf0a.  goto L49cebe;
}
procedure `java.lang.String` `c`(`int` v1 ) @signature `Lv1/p2;.c:(I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L49ce54.  v0:= 36I;
  #L49ce58.  call temp:= `toString`(v1, v0) @signature `Ljava/lang/Integer;.toString:(II)Ljava/lang/String;` @kind static;
  #L49ce5e.  v1:= temp @kind object;
  #L49ce60.  return v1 @kind object;
}
