record `v1.r1$e` @kind class @AccessFlag PUBLIC_FINAL extends `v1.r1$d` @kind class {
}
global `v1.r1$e` `@@v1.r1$e.u` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lv1/r1$e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4963a0.  v0:= new `v1.r1$d$a`;
  #L4963a4.  call `<init>`(v0) @signature `Lv1/r1$d$a;.<init>:()V` @kind direct;
  #L4963aa.  call temp:= `g`(v0) @signature `Lv1/r1$d$a;.g:()Lv1/r1$e;` @kind virtual;
  #L4963b0.  v0:= temp @kind object;
  #L4963b2.  `@@v1.r1$e.u` @type ^`v1.r1$e` := v0 @kind object;
  #L4963b6.  return @kind void;
}
procedure `void` `<init>`(`v1.r1$e` v1 @kind this, `v1.r1$d$a` v2 @kind object) @signature `Lv1/r1$e;.<init>:(Lv1/r1$d$a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L4963c8.  v0:= 0I;
  #L4963ca.  call `<init>`(v1, v2, v0) @signature `Lv1/r1$d;.<init>:(Lv1/r1$d$a;Lv1/r1$a;)V` @kind direct;
  #L4963d0.  return @kind void;
}
procedure `void` `<init>`(`v1.r1$e` v0 @kind this, `v1.r1$d$a` v1 @kind object, `v1.r1$a` v2 @kind object) @signature `Lv1/r1$e;.<init>:(Lv1/r1$d$a;Lv1/r1$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4963e4.  call `<init>`(v0, v1) @signature `Lv1/r1$e;.<init>:(Lv1/r1$d$a;)V` @kind direct;
  #L4963ea.  return @kind void;
}
