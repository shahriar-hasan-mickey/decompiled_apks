record `v1.m` @kind class @AccessFlag PUBLIC_FINAL extends `v1.g` @kind interface {
  `int` `v1.m.o` @AccessFlag PUBLIC_FINAL;
  `int` `v1.m.p` @AccessFlag PUBLIC_FINAL;
  `int` `v1.m.q` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<clinit>`() @signature `Lv1/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L48aa74.  v0:= new `v1.m`;
  #L48aa78.  v1:= 0I;
  #L48aa7a.  call `<init>`(v0, v1, v1, v1) @signature `Lv1/m;.<init>:(III)V` @kind direct;
  #L48aa80.  return @kind void;
}
procedure `void` `<init>`(`v1.m` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Lv1/m;.<init>:(III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48aa94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48aa9a.  v0.`v1.m.o` @type ^`int` := v1;
  #L48aa9e.  v0.`v1.m.p` @type ^`int` := v2;
  #L48aaa2.  v0.`v1.m.q` @type ^`int` := v3;
  #L48aaa6.  return @kind void;
}
procedure `boolean` `equals`(`v1.m` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lv1/m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48a9f0.  v0:= 1I;
  #L48a9f2.  if v4 != v5 then goto L48a9f8;
  #L48a9f6.  return v0;
  #L48a9f8.  v1:= instanceof @variable v5 @type ^`v1.m` @kind boolean;
  #L48a9fc.  v2:= 0I;
  #L48a9fe.  if v1 != 0 then goto L48aa04;
  #L48aa02.  return v2;
  #L48aa04.  v5:= (`v1.m`) v5 @kind object;
  #L48aa08.  v1:= v4.`v1.m.o` @type ^`int`;
  #L48aa0c.  v3:= v5.`v1.m.o` @type ^`int`;
  #L48aa10.  if v1 != v3 then goto L48aa2e;
  #L48aa14.  v1:= v4.`v1.m.p` @type ^`int`;
  #L48aa18.  v3:= v5.`v1.m.p` @type ^`int`;
  #L48aa1c.  if v1 != v3 then goto L48aa2e;
  #L48aa20.  v1:= v4.`v1.m.q` @type ^`int`;
  #L48aa24.  v5:= v5.`v1.m.q` @type ^`int`;
  #L48aa28.  if v1 != v5 then goto L48aa2e;
  #L48aa2c.  goto L48aa30;
  #L48aa2e.  v0:= 0I;
  #L48aa30.  return v0;
}
procedure `int` `hashCode`(`v1.m` v2 @kind this) @signature `Lv1/m;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48aa44.  v0:= v2.`v1.m.o` @type ^`int`;
  #L48aa48.  v1:= 527I;
  #L48aa4c.  v1:= v1 + v0 @kind int;
  #L48aa4e.  v1:= v1 * 31;
  #L48aa52.  v0:= v2.`v1.m.p` @type ^`int`;
  #L48aa56.  v1:= v1 + v0 @kind int;
  #L48aa58.  v1:= v1 * 31;
  #L48aa5c.  v0:= v2.`v1.m.q` @type ^`int`;
  #L48aa60.  v1:= v1 + v0 @kind int;
  #L48aa62.  return v1;
}
