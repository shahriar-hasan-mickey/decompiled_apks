record `v1.f1` @kind class @AccessFlag FINAL extends `android.os.Handler$Callback` @kind interface, `x2.r$a` @kind interface, `q3.a0$a` @kind interface, `v1.d2$d` @kind interface, `v1.k$a` @kind interface, `v1.m2$a` @kind interface {
  `long` `v1.f1.A` @AccessFlag PRIVATE_FINAL;
  `boolean` `v1.f1.B` @AccessFlag PRIVATE_FINAL;
  `v1.k` `v1.f1.C` @AccessFlag PRIVATE_FINAL;
  `java.util.ArrayList` `v1.f1.D` @AccessFlag PRIVATE_FINAL;
  `s3.c` `v1.f1.E` @AccessFlag PRIVATE_FINAL;
  `v1.f1$f` `v1.f1.F` @AccessFlag PRIVATE_FINAL;
  `v1.a2` `v1.f1.G` @AccessFlag PRIVATE_FINAL;
  `v1.d2` `v1.f1.H` @AccessFlag PRIVATE_FINAL;
  `v1.o1` `v1.f1.I` @AccessFlag PRIVATE_FINAL;
  `long` `v1.f1.J` @AccessFlag PRIVATE_FINAL;
  `v1.w2` `v1.f1.K` @AccessFlag PRIVATE;
  `v1.i2` `v1.f1.L` @AccessFlag PRIVATE;
  `v1.f1$e` `v1.f1.M` @AccessFlag PRIVATE;
  `boolean` `v1.f1.N` @AccessFlag PRIVATE;
  `boolean` `v1.f1.O` @AccessFlag PRIVATE;
  `boolean` `v1.f1.P` @AccessFlag PRIVATE;
  `boolean` `v1.f1.Q` @AccessFlag PRIVATE;
  `boolean` `v1.f1.R` @AccessFlag PRIVATE;
  `int` `v1.f1.S` @AccessFlag PRIVATE;
  `boolean` `v1.f1.T` @AccessFlag PRIVATE;
  `boolean` `v1.f1.U` @AccessFlag PRIVATE;
  `boolean` `v1.f1.V` @AccessFlag PRIVATE;
  `boolean` `v1.f1.W` @AccessFlag PRIVATE;
  `int` `v1.f1.X` @AccessFlag PRIVATE;
  `v1.f1$h` `v1.f1.Y` @AccessFlag PRIVATE;
  `long` `v1.f1.Z` @AccessFlag PRIVATE;
  `int` `v1.f1.a0` @AccessFlag PRIVATE;
  `boolean` `v1.f1.b0` @AccessFlag PRIVATE;
  `v1.n` `v1.f1.c0` @AccessFlag PRIVATE;
  `long` `v1.f1.d0` @AccessFlag PRIVATE;
  `v1.r2`[] `v1.f1.o` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `v1.f1.p` @AccessFlag PRIVATE_FINAL;
  `v1.t2`[] `v1.f1.q` @AccessFlag PRIVATE_FINAL;
  `q3.a0` `v1.f1.r` @AccessFlag PRIVATE_FINAL;
  `q3.b0` `v1.f1.s` @AccessFlag PRIVATE_FINAL;
  `v1.p1` `v1.f1.t` @AccessFlag PRIVATE_FINAL;
  `r3.f` `v1.f1.u` @AccessFlag PRIVATE_FINAL;
  `s3.m` `v1.f1.v` @AccessFlag PRIVATE_FINAL;
  `android.os.HandlerThread` `v1.f1.w` @AccessFlag PRIVATE_FINAL;
  `android.os.Looper` `v1.f1.x` @AccessFlag PRIVATE_FINAL;
  `v1.d3$c` `v1.f1.y` @AccessFlag PRIVATE_FINAL;
  `v1.d3$b` `v1.f1.z` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`v1.f1` v11 @kind this, `v1.r2`[] v12 @kind object, `q3.a0` v13 @kind object, `q3.b0` v14 @kind object, `v1.p1` v15 @kind object, `r3.f` v16 @kind object, `int` v17 , `boolean` v18 , `w1.a` v19 @kind object, `v1.w2` v20 @kind object, `v1.o1` v21 @kind object, `long` v22 , `boolean` v24 , `android.os.Looper` v25 @kind object, `s3.c` v26 @kind object, `v1.f1$f` v27 @kind object, `w1.t1` v28 @kind object) @signature `Lv1/f1;.<init>:([Lv1/r2;Lq3/a0;Lq3/b0;Lv1/p1;Lr3/f;IZLw1/a;Lv1/w2;Lv1/o1;JZLandroid/os/Looper;Ls3/c;Lv1/f1$f;Lw1/t1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L48e07c.  v0:= v11 @kind object;
  #L48e07e.  v1:= v12 @kind object;
  #L48e080.  v2:= v13 @kind object;
  #L48e082.  v3:= v16 @kind object;
  #L48e086.  v4:= v19 @kind object;
  #L48e08a.  v5:= v26 @kind object;
  #L48e08e.  v6:= v28 @kind object;
  #L48e092.  call `<init>`(v11) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48e098.  v7:= v27 @kind object;
  #L48e09c.  v0.`v1.f1.F` @type ^`v1.f1$f` := v7 @kind object;
  #L48e0a0.  v0.`v1.f1.o` @type ^`v1.r2`[] := v1 @kind object;
  #L48e0a4.  v0.`v1.f1.r` @type ^`q3.a0` := v2 @kind object;
  #L48e0a8.  v7:= v14 @kind object;
  #L48e0aa.  v0.`v1.f1.s` @type ^`q3.b0` := v7 @kind object;
  #L48e0ae.  v8:= v15 @kind object;
  #L48e0b0.  v0.`v1.f1.t` @type ^`v1.p1` := v8 @kind object;
  #L48e0b4.  v0.`v1.f1.u` @type ^`r3.f` := v3 @kind object;
  #L48e0b8.  v9:= v17;
  #L48e0bc.  v0.`v1.f1.S` @type ^`int` := v9;
  #L48e0c0.  v9:= v18;
  #L48e0c4.  v0.`v1.f1.T` @type ^`boolean` := v9 @kind boolean;
  #L48e0c8.  v9:= v20 @kind object;
  #L48e0cc.  v0.`v1.f1.K` @type ^`v1.w2` := v9 @kind object;
  #L48e0d0.  v9:= v21 @kind object;
  #L48e0d4.  v0.`v1.f1.I` @type ^`v1.o1` := v9 @kind object;
  #L48e0d8.  v9:= v22 @kind wide;
  #L48e0dc.  v0.`v1.f1.J` @type ^`long` := v9 @kind wide;
  #L48e0e0.  v9:= v24;
  #L48e0e4.  v0.`v1.f1.O` @type ^`boolean` := v9 @kind boolean;
  #L48e0e8.  v0.`v1.f1.E` @type ^`s3.c` := v5 @kind object;
  #L48e0ec.  v9:= -4.9E-324D;
  #L48e0f6.  v0.`v1.f1.d0` @type ^`long` := v9 @kind wide;
  #L48e0fa.  call temp:= `i`(v15) @signature `Lv1/p1;.i:()J` @kind interface;
  #L48e100.  v9:= temp @kind wide;
  #L48e102.  v0.`v1.f1.A` @type ^`long` := v9 @kind wide;
  #L48e106.  call temp:= `a`(v15) @signature `Lv1/p1;.a:()Z` @kind interface;
  #L48e10c.  v8:= temp;
  #L48e10e.  v0.`v1.f1.B` @type ^`boolean` := v8 @kind boolean;
  #L48e112.  call temp:= `j`(v14) @signature `Lv1/i2;.j:(Lq3/b0;)Lv1/i2;` @kind static;
  #L48e118.  v7:= temp @kind object;
  #L48e11a.  v0.`v1.f1.L` @type ^`v1.i2` := v7 @kind object;
  #L48e11e.  v8:= new `v1.f1$e`;
  #L48e122.  call `<init>`(v8, v7) @signature `Lv1/f1$e;.<init>:(Lv1/i2;)V` @kind direct;
  #L48e128.  v0.`v1.f1.M` @type ^`v1.f1$e` := v8 @kind object;
  #L48e12c.  v7:= length @variable v1;
  #L48e12e.  v7:= new `v1.t2`[v7];
  #L48e132.  v0.`v1.f1.q` @type ^`v1.t2`[] := v7 @kind object;
  #L48e136.  v7:= 0I;
  #L48e138.  v8:= length @variable v1;
  #L48e13a.  if v7 >= v8 then goto L48e162;
  #L48e13e.  v8:= v1[v7] @kind object;
  #L48e142.  call `w`(v8, v7, v6) @signature `Lv1/r2;.w:(ILw1/t1;)V` @kind interface;
  #L48e148.  v8:= v0.`v1.f1.q` @type ^`v1.t2`[] @kind object;
  #L48e14c.  v9:= v1[v7] @kind object;
  #L48e150.  call temp:= `x`(v9) @signature `Lv1/r2;.x:()Lv1/t2;` @kind interface;
  #L48e156.  v9:= temp @kind object;
  #L48e158.  v8[v7]:= v9 @kind object;
  #L48e15c.  v7:= v7 + 1;
  #L48e160.  goto L48e138;
  #L48e162.  v1:= new `v1.k`;
  #L48e166.  call `<init>`(v1, v11, v5) @signature `Lv1/k;.<init>:(Lv1/k$a;Ls3/c;)V` @kind direct;
  #L48e16c.  v0.`v1.f1.C` @type ^`v1.k` := v1 @kind object;
  #L48e170.  v1:= new `java.util.ArrayList`;
  #L48e174.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L48e17a.  v0.`v1.f1.D` @type ^`java.util.ArrayList` := v1 @kind object;
  #L48e17e.  call temp:= `h`() @signature `Lm5/p0;.h:()Ljava/util/Set;` @kind static;
  #L48e184.  v1:= temp @kind object;
  #L48e186.  v0.`v1.f1.p` @type ^`java.util.Set` := v1 @kind object;
  #L48e18a.  v1:= new `v1.d3$c`;
  #L48e18e.  call `<init>`(v1) @signature `Lv1/d3$c;.<init>:()V` @kind direct;
  #L48e194.  v0.`v1.f1.y` @type ^`v1.d3$c` := v1 @kind object;
  #L48e198.  v1:= new `v1.d3$b`;
  #L48e19c.  call `<init>`(v1) @signature `Lv1/d3$b;.<init>:()V` @kind direct;
  #L48e1a2.  v0.`v1.f1.z` @type ^`v1.d3$b` := v1 @kind object;
  #L48e1a6.  call `b`(v13, v11, v3) @signature `Lq3/a0;.b:(Lq3/a0$a;Lr3/f;)V` @kind virtual;
  #L48e1ac.  v1:= 1I;
  #L48e1ae.  v0.`v1.f1.b0` @type ^`boolean` := v1 @kind boolean;
  #L48e1b2.  v1:= new `android.os.Handler`;
  #L48e1b6.  v2:= v25 @kind object;
  #L48e1ba.  call `<init>`(v1, v2) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L48e1c0.  v2:= new `v1.a2`;
  #L48e1c4.  call `<init>`(v2, v4, v1) @signature `Lv1/a2;.<init>:(Lw1/a;Landroid/os/Handler;)V` @kind direct;
  #L48e1ca.  v0.`v1.f1.G` @type ^`v1.a2` := v2 @kind object;
  #L48e1ce.  v2:= new `v1.d2`;
  #L48e1d2.  call `<init>`(v2, v11, v4, v1, v6) @signature `Lv1/d2;.<init>:(Lv1/d2$d;Lw1/a;Landroid/os/Handler;Lw1/t1;)V` @kind direct;
  #L48e1d8.  v0.`v1.f1.H` @type ^`v1.d2` := v2 @kind object;
  #L48e1dc.  v1:= new `android.os.HandlerThread`;
  #L48e1e0.  v2:= -16I;
  #L48e1e4.  v3:= "ExoPlayer:Playback" @kind object;
  #L48e1e8.  call `<init>`(v1, v3, v2) @signature `Landroid/os/HandlerThread;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L48e1ee.  v0.`v1.f1.w` @type ^`android.os.HandlerThread` := v1 @kind object;
  #L48e1f2.  call `start`(v1) @signature `Landroid/os/HandlerThread;.start:()V` @kind virtual;
  #L48e1f8.  call temp:= `getLooper`(v1) @signature `Landroid/os/HandlerThread;.getLooper:()Landroid/os/Looper;` @kind virtual;
  #L48e1fe.  v1:= temp @kind object;
  #L48e200.  v0.`v1.f1.x` @type ^`android.os.Looper` := v1 @kind object;
  #L48e204.  call temp:= `c`(v5, v1, v11) @signature `Ls3/c;.c:(Landroid/os/Looper;Landroid/os/Handler$Callback;)Ls3/m;` @kind interface;
  #L48e20a.  v1:= temp @kind object;
  #L48e20c.  v0.`v1.f1.v` @type ^`s3.m` := v1 @kind object;
  #L48e210.  return @kind void;
}
procedure `long` `A`(`v1.f1` v9 @kind this) @signature `Lv1/f1;.A:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L48d7cc.  v0:= v9.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d7d0.  call temp:= `q`(v0) @signature `Lv1/a2;.q:()Lv1/x1;` @kind virtual;
  #L48d7d6.  v0:= temp @kind object;
  #L48d7d8.  if v0 != 0 then goto L48d7e2;
  #L48d7dc.  v0:= 0L;
  #L48d7e0.  return v0 @kind wide;
  #L48d7e2.  call temp:= `l`(v0) @signature `Lv1/x1;.l:()J` @kind virtual;
  #L48d7e8.  v1:= temp @kind wide;
  #L48d7ea.  v3:= v0.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L48d7ee.  if v3 != 0 then goto L48d7f4;
  #L48d7f2.  return v1 @kind wide;
  #L48d7f4.  v3:= 0I;
  #L48d7f6.  v4:= v9.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48d7fa.  v5:= length @variable v4;
  #L48d7fc.  if v3 >= v5 then goto L48d85a;
  #L48d800.  v4:= v4[v3] @kind object;
  #L48d804.  call temp:= `R`(v4) @signature `Lv1/f1;.R:(Lv1/r2;)Z` @kind static;
  #L48d80a.  v4:= temp;
  #L48d80c.  if v4 == 0 then goto L48d854;
  #L48d810.  v4:= v9.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48d814.  v4:= v4[v3] @kind object;
  #L48d818.  call temp:= `g`(v4) @signature `Lv1/r2;.g:()Lx2/n0;` @kind interface;
  #L48d81e.  v4:= temp @kind object;
  #L48d820.  v5:= v0.`v1.x1.c` @type ^`x2.n0`[] @kind object;
  #L48d824.  v5:= v5[v3] @kind object;
  #L48d828.  if v4 == v5 then goto L48d82e;
  #L48d82c.  goto L48d854;
  #L48d82e.  v4:= v9.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48d832.  v4:= v4[v3] @kind object;
  #L48d836.  call temp:= `s`(v4) @signature `Lv1/r2;.s:()J` @kind interface;
  #L48d83c.  v4:= temp @kind wide;
  #L48d83e.  v6:= -9223372036854775808L;
  #L48d842.  v8:= lcmp(v4, v6);
  #L48d846.  if v8 != 0 then goto L48d84c;
  #L48d84a.  return v6 @kind wide;
  #L48d84c.  call temp:= `max`(v4, v1) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L48d852.  v1:= temp @kind wide;
  #L48d854.  v3:= v3 + 1;
  #L48d858.  goto L48d7f6;
  #L48d85a.  return v1 @kind wide;
}
procedure `void` `A0`(`v1.f1` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lv1/f1;.A0:(JJ)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L48ff44.  v0:= v1.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48ff48.  v2:= v2 + v4 @kind long;
  #L48ff4a.  v4:= 2I;
  #L48ff4c.  call temp:= `e`(v0, v4, v2) @signature `Ls3/m;.e:(IJ)Z` @kind interface;
  #L48ff52.  return @kind void;
}
procedure `android.util.Pair` `B`(`v1.f1` v9 @kind this, `v1.d3` v10 @kind object) @signature `Lv1/f1;.B:(Lv1/d3;)Landroid/util/Pair;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L48c860.  call temp:= `q`(v10) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48c866.  v0:= temp;
  #L48c868.  v1:= 0L;
  #L48c86c.  if v0 == 0 then goto L48c88a;
  #L48c870.  call temp:= `k`() @signature `Lv1/i2;.k:()Lx2/u$b;` @kind static;
  #L48c876.  v10:= temp @kind object;
  #L48c878.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L48c87e.  v0:= temp @kind object;
  #L48c880.  call temp:= `create`(v10, v0) @signature `Landroid/util/Pair;.create:(Ljava/lang/Object;Ljava/lang/Object;)Landroid/util/Pair;` @kind static;
  #L48c886.  v10:= temp @kind object;
  #L48c888.  return v10 @kind object;
  #L48c88a.  v0:= v9.`v1.f1.T` @type ^`boolean` @kind boolean;
  #L48c88e.  call temp:= `a`(v10, v0) @signature `Lv1/d3;.a:(Z)I` @kind virtual;
  #L48c894.  v6:= temp;
  #L48c896.  v4:= v9.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L48c89a.  v5:= v9.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L48c89e.  v7:= -4.9E-324D;
  #L48c8a8.  v3:= v10 @kind object;
  #L48c8aa.  call temp:= `j`(v3, v4, v5, v6, v7) @signature `Lv1/d3;.j:(Lv1/d3$c;Lv1/d3$b;IJ)Landroid/util/Pair;` @kind virtual;
  #L48c8b0.  v0:= temp @kind object;
  #L48c8b2.  v3:= v9.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48c8b6.  v4:= v0.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48c8ba.  call temp:= `B`(v3, v10, v4, v1) @signature `Lv1/a2;.B:(Lv1/d3;Ljava/lang/Object;J)Lx2/u$b;` @kind virtual;
  #L48c8c0.  v3:= temp @kind object;
  #L48c8c2.  v0:= v0.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L48c8c6.  v0:= (`java.lang.Long`) v0 @kind object;
  #L48c8ca.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L48c8d0.  v4:= temp @kind wide;
  #L48c8d2.  call temp:= `b`(v3) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L48c8d8.  v0:= temp;
  #L48c8da.  if v0 == 0 then goto L48c912;
  #L48c8de.  v0:= v3.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48c8e2.  v4:= v9.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L48c8e6.  call temp:= `h`(v10, v0, v4) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48c8ec.  v10:= v3.`x2.s.c` @type ^`int`;
  #L48c8f0.  v0:= v9.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L48c8f4.  v4:= v3.`x2.s.b` @type ^`int`;
  #L48c8f8.  call temp:= `m`(v0, v4) @signature `Lv1/d3$b;.m:(I)I` @kind virtual;
  #L48c8fe.  v0:= temp;
  #L48c900.  if v10 != v0 then goto L48c910;
  #L48c904.  v10:= v9.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L48c908.  call temp:= `i`(v10) @signature `Lv1/d3$b;.i:()J` @kind virtual;
  #L48c90e.  v1:= temp @kind wide;
  #L48c910.  v4:= v1 @kind wide;
  #L48c912.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L48c918.  v10:= temp @kind object;
  #L48c91a.  call temp:= `create`(v3, v10) @signature `Landroid/util/Pair;.create:(Ljava/lang/Object;Ljava/lang/Object;)Landroid/util/Pair;` @kind static;
  #L48c920.  v10:= temp @kind object;
  #L48c922.  return v10 @kind object;
}
procedure `void` `C0`(`v1.f1` v11 @kind this, `boolean` v12 ) @signature `Lv1/f1;.C0:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L48ff94.  v0:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48ff98.  call temp:= `p`(v0) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48ff9e.  v0:= temp @kind object;
  #L48ffa0.  v0:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48ffa4.  v0:= v0.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L48ffa8.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ffac.  v3:= v1.`v1.i2.r` @type ^`long` @kind wide;
  #L48ffb0.  v5:= 1I;
  #L48ffb2.  v6:= 0I;
  #L48ffb4.  v1:= v11 @kind object;
  #L48ffb6.  v2:= v0 @kind object;
  #L48ffb8.  call temp:= `F0`(v1, v2, v3, v5, v6) @signature `Lv1/f1;.F0:(Lx2/u$b;JZZ)J` @kind direct;
  #L48ffbe.  v3:= temp @kind wide;
  #L48ffc0.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ffc4.  v1:= v1.`v1.i2.r` @type ^`long` @kind wide;
  #L48ffc8.  v5:= lcmp(v3, v1);
  #L48ffcc.  if v5 == 0 then goto L48fff0;
  #L48ffd0.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ffd4.  v5:= v1.`v1.i2.c` @type ^`long` @kind wide;
  #L48ffd8.  v7:= v1.`v1.i2.d` @type ^`long` @kind wide;
  #L48ffdc.  v10:= 5I;
  #L48ffde.  v1:= v11 @kind object;
  #L48ffe0.  v2:= v0 @kind object;
  #L48ffe2.  v9:= v12;
  #L48ffe4.  call temp:= `M`(v1, v2, v3, v5, v7, v9, v10) @signature `Lv1/f1;.M:(Lx2/u$b;JJJZI)Lv1/i2;` @kind direct;
  #L48ffea.  v12:= temp @kind object;
  #L48ffec.  v11.`v1.f1.L` @type ^`v1.i2` := v12 @kind object;
  #L48fff0.  return @kind void;
}
procedure `long` `D`(`v1.f1` v2 @kind this) @signature `Lv1/f1;.D:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48d86c.  v0:= v2.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48d870.  v0:= v0.`v1.i2.p` @type ^`long` @kind wide;
  #L48d874.  call temp:= `E`(v2, v0) @signature `Lv1/f1;.E:(J)J` @kind direct;
  #L48d87a.  v0:= temp @kind wide;
  #L48d87c.  return v0 @kind wide;
}
procedure `void` `D0`(`v1.f1` v19 @kind this, `v1.f1$h` v20 @kind object) @signature `Lv1/f1;.D0:(Lv1/f1$h;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L490004.  v11:= v19 @kind object;
  #L490008.  v0:= v20 @kind object;
  #L49000c.  v1:= v11.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L490010.  v8:= 1I;
  #L490012.  call `b`(v1, v8) @signature `Lv1/f1$e;.b:(I)V` @kind virtual;
  #L490018.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L49001c.  v1:= v1.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L490020.  v4:= v11.`v1.f1.S` @type ^`int`;
  #L490024.  v5:= v11.`v1.f1.T` @type ^`boolean` @kind boolean;
  #L490028.  v6:= v11.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L49002c.  v7:= v11.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L490030.  v3:= 1I;
  #L490032.  v2:= v20 @kind object;
  #L490036.  call temp:= `y0`(v1, v2, v3, v4, v5, v6, v7) @signature `Lv1/f1;.y0:(Lv1/d3;Lv1/f1$h;ZIZLv1/d3$c;Lv1/d3$b;)Landroid/util/Pair;` @kind static;
  #L49003c.  v1:= temp @kind object;
  #L49003e.  v2:= 0L;
  #L490042.  v4:= -4.9E-324D;
  #L49004c.  v6:= 0I;
  #L49004e.  if v1 != 0 then goto L49009a;
  #L490052.  v7:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490056.  v7:= v7.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L49005a.  call temp:= `B`(v11, v7) @signature `Lv1/f1;.B:(Lv1/d3;)Landroid/util/Pair;` @kind direct;
  #L490060.  v7:= temp @kind object;
  #L490062.  v9:= v7.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L490066.  v9:= (`x2.u$b`) v9 @kind object;
  #L49006a.  v7:= v7.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L49006e.  v7:= (`java.lang.Long`) v7 @kind object;
  #L490072.  call temp:= `longValue`(v7) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L490078.  v12:= temp @kind wide;
  #L49007a.  v7:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L49007e.  v7:= v7.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L490082.  call temp:= `q`(v7) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L490088.  v7:= temp;
  #L49008a.  v7:= v7 ^~ v8 @kind int;
  #L49008c.  v10:= v7;
  #L49008e.  v17:= v4 @kind wide;
  #L490092.  v4:= v12 @kind wide;
  #L490094.  v12:= v17 @kind wide;
  #L490098.  goto L490146;
  #L49009a.  v7:= v1.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L49009e.  v9:= v1.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L4900a2.  v9:= (`java.lang.Long`) v9 @kind object;
  #L4900a6.  call temp:= `longValue`(v9) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4900ac.  v12:= temp @kind wide;
  #L4900ae.  v9:= v0.`v1.f1$h.c` @type ^`long` @kind wide;
  #L4900b2.  v14:= lcmp(v9, v4);
  #L4900b6.  if v14 != 0 then goto L4900be;
  #L4900ba.  v9:= v4 @kind wide;
  #L4900bc.  goto L4900c0;
  #L4900be.  v9:= v12 @kind wide;
  #L4900c0.  v14:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L4900c4.  v15:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L4900c8.  v15:= v15.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L4900cc.  call temp:= `B`(v14, v15, v7, v12) @signature `Lv1/a2;.B:(Lv1/d3;Ljava/lang/Object;J)Lx2/u$b;` @kind virtual;
  #L4900d2.  v7:= temp @kind object;
  #L4900d4.  call temp:= `b`(v7) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L4900da.  v14:= temp;
  #L4900dc.  if v14 == 0 then goto L49012a;
  #L4900e0.  v4:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L4900e4.  v4:= v4.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L4900e8.  v5:= v7.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L4900ec.  v12:= v11.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L4900f0.  call temp:= `h`(v4, v5, v12) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L4900f6.  v4:= v11.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L4900fa.  v5:= v7.`x2.s.b` @type ^`int`;
  #L4900fe.  call temp:= `m`(v4, v5) @signature `Lv1/d3$b;.m:(I)I` @kind virtual;
  #L490104.  v4:= temp;
  #L490106.  v5:= v7.`x2.s.c` @type ^`int`;
  #L49010a.  if v4 != v5 then goto L49011e;
  #L49010e.  v4:= v11.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L490112.  call temp:= `i`(v4) @signature `Lv1/d3$b;.i:()J` @kind virtual;
  #L490118.  v4:= temp @kind wide;
  #L49011a.  v12:= v4 @kind wide;
  #L49011c.  goto L490120;
  #L49011e.  v12:= v2 @kind wide;
  #L490120.  v4:= v12 @kind wide;
  #L490122.  v12:= v9 @kind wide;
  #L490124.  v10:= 1I;
  #L490126.  v9:= v7 @kind object;
  #L490128.  goto L490146;
  #L49012a.  v14:= v0.`v1.f1$h.c` @type ^`long` @kind wide;
  #L49012e.  v16:= lcmp(v14, v4);
  #L490132.  if v16 != 0 then goto L49013a;
  #L490136.  v4:= 1I;
  #L490138.  goto L49013c;
  #L49013a.  v4:= 0I;
  #L49013c.  v17:= v9 @kind wide;
  #L490140.  v10:= v4;
  #L490142.  v9:= v7 @kind object;
  #L490144.  goto L490092;
  #L490146.  v7:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L49014a.  v7:= v7.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L49014e.  call temp:= `q`(v7) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L490154.  v7:= temp;
  #L490156.  if v7 == 0 then goto L490160;
  #L49015a.  v11.`v1.f1.Y` @type ^`v1.f1$h` := v0 @kind object;
  #L49015e.  goto L49017e;
  #L490160.  v0:= 4I;
  #L490162.  if v1 != 0 then goto L490184;
  #L490166.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L49016a.  v1:= v1.`v1.i2.e` @type ^`int`;
  #L49016e.  if v1 == v8 then goto L490178;
  #L490172.  call `Z0`(v11, v0) @signature `Lv1/f1;.Z0:(I)V` @kind direct;
  #L490178.  call `r0`(v11, v6, v8, v6, v8) @signature `Lv1/f1;.r0:(ZZZZ)V` @kind direct;
  #L49017e.  v7:= v4 @kind wide;
  #L490180.  goto L49026c;
  #L490184.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490188.  v1:= v1.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L49018c.  call temp:= `equals`(v9, v1) @signature `Lx2/s;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L490192.  v1:= temp;
  #L490194.  if v1 == 0 then goto L490222;
  #L490198.  v1:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L49019c.  call temp:= `p`(v1) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L4901a2.  v1:= temp @kind object;
  #L4901a4.  if v1 == 0 then goto L4901ca;
  #L4901a8.  v7:= v1.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L4901ac.  if v7 == 0 then goto L4901ca;
  #L4901b0.  v7:= lcmp(v4, v2);
  #L4901b4.  if v7 == 0 then goto L4901ca;
  #L4901b8.  v1:= v1.`v1.x1.a` @type ^`x2.r` @kind object;
  #L4901bc.  v2:= v11.`v1.f1.K` @type ^`v1.w2` @kind object;
  #L4901c0.  call temp:= `c`(v1, v4, v2) @signature `Lx2/r;.c:(JLv1/w2;)J` @kind interface;
  #L4901c6.  v1:= temp @kind wide;
  #L4901c8.  goto L4901cc;
  #L4901ca.  v1:= v4 @kind wide;
  #L4901cc.  call temp:= `X0`(v1) @signature `Ls3/l0;.X0:(J)J` @kind static;
  #L4901d2.  v14:= temp @kind wide;
  #L4901d4.  v3:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L4901d8.  v6:= v3.`v1.i2.r` @type ^`long` @kind wide;
  #L4901dc.  call temp:= `X0`(v6) @signature `Ls3/l0;.X0:(J)J` @kind static;
  #L4901e2.  v6:= temp @kind wide;
  #L4901e4.  v3:= lcmp(v14, v6);
  #L4901e8.  if v3 != 0 then goto L490224;
  #L4901ec.  v3:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L4901f0.  v6:= v3.`v1.i2.e` @type ^`int`;
  #L4901f4.  v7:= 2I;
  #L4901f6.  if v6 == v7 then goto L490200;
  #L4901fa.  v7:= 3I;
  #L4901fc.  if v6 != v7 then goto L490224;
  #L490200.  v7:= v3.`v1.i2.r` @type ^`long` @kind wide;
  #L490204.  v0:= 2I;
  #L490206.  v1:= v19 @kind object;
  #L49020a.  v2:= v9 @kind object;
  #L49020c.  v3:= v7 @kind wide;
  #L49020e.  v5:= v12 @kind wide;
  #L490210.  v9:= v10;
  #L490212.  v10:= v0;
  #L490214.  call temp:= `M`(v1, v2, v3, v5, v7, v9, v10) @signature `Lv1/f1;.M:(Lx2/u$b;JJJZI)Lv1/i2;` @kind direct;
  #L49021a.  v0:= temp @kind object;
  #L49021c.  v11.`v1.f1.L` @type ^`v1.i2` := v0 @kind object;
  #L490220.  return @kind void;
  #L490222.  v1:= v4 @kind wide;
  #L490224.  v3:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490228.  v3:= v3.`v1.i2.e` @type ^`int`;
  #L49022c.  if v3 != v0 then goto L490234;
  #L490230.  v0:= 1I;
  #L490232.  goto L490236;
  #L490234.  v0:= 0I;
  #L490236.  call temp:= `E0`(v11, v9, v1, v0) @signature `Lv1/f1;.E0:(Lx2/u$b;JZ)J` @kind direct;
  #L49023c.  v14:= temp @kind wide;
  #L49023e.  v0:= lcmp(v4, v14);
  #L490242.  if v0 == 0 then goto L490248;
  #L490246.  goto L49024a;
  #L490248.  v8:= 0I;
  #L49024a.  v8:= v8 ^| v10 @kind int;
  #L49024c.  v0:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490250.  v4:= v0.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L490254.  v5:= v0.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L490258.  v1:= v19 @kind object;
  #L49025c.  v2:= v4 @kind object;
  #L49025e.  v3:= v9 @kind object;
  #L490260.  v6:= v12 @kind wide;
  #L490262.  call `n1`(v1, v2, v3, v4, v5, v6) @signature `Lv1/f1;.n1:(Lv1/d3;Lx2/u$b;Lv1/d3;Lx2/u$b;J)V` @kind direct;
  #L490268.  v10:= v8;
  #L49026a.  v7:= v14 @kind wide;
  #L49026c.  v0:= 2I;
  #L49026e.  v1:= v19 @kind object;
  #L490272.  v2:= v9 @kind object;
  #L490274.  v3:= v7 @kind wide;
  #L490276.  v5:= v12 @kind wide;
  #L490278.  v9:= v10;
  #L49027a.  v10:= v0;
  #L49027c.  call temp:= `M`(v1, v2, v3, v5, v7, v9, v10) @signature `Lv1/f1;.M:(Lx2/u$b;JJJZI)Lv1/i2;` @kind direct;
  #L490282.  v0:= temp @kind object;
  #L490284.  v11.`v1.f1.L` @type ^`v1.i2` := v0 @kind object;
  #L490288.  return @kind void;
  #L49028a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49028c.  v10:= v8;
  #L49028e.  v7:= v14 @kind wide;
  #L490290.  goto L490296;
  #L490292.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L490294.  v7:= v4 @kind wide;
  #L490296.  v14:= 2I;
  #L490298.  v1:= v19 @kind object;
  #L49029c.  v2:= v9 @kind object;
  #L49029e.  v3:= v7 @kind wide;
  #L4902a0.  v5:= v12 @kind wide;
  #L4902a2.  v9:= v10;
  #L4902a4.  v10:= v14;
  #L4902a6.  call temp:= `M`(v1, v2, v3, v5, v7, v9, v10) @signature `Lv1/f1;.M:(Lx2/u$b;JJJZI)Lv1/i2;` @kind direct;
  #L4902ac.  v1:= temp @kind object;
  #L4902ae.  v11.`v1.f1.L` @type ^`v1.i2` := v1 @kind object;
  #L4902b2.  throw v0;
  catch `java.lang.Throwable` @[L490146..L490204] goto L490292;
  catch `java.lang.Throwable` @[L490224..L49023e] goto L490292;
  catch `java.lang.Throwable` @[L49024c..L490268] goto L49028a;
}
procedure `long` `E`(`v1.f1` v5 @kind this, `long` v6 ) @signature `Lv1/f1;.E:(J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48d890.  v0:= v5.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d894.  call temp:= `j`(v0) @signature `Lv1/a2;.j:()Lv1/x1;` @kind virtual;
  #L48d89a.  v0:= temp @kind object;
  #L48d89c.  v1:= 0L;
  #L48d8a0.  if v0 != 0 then goto L48d8a6;
  #L48d8a4.  return v1 @kind wide;
  #L48d8a6.  v3:= v5.`v1.f1.Z` @type ^`long` @kind wide;
  #L48d8aa.  call temp:= `y`(v0, v3) @signature `Lv1/x1;.y:(J)J` @kind virtual;
  #L48d8b0.  v3:= temp @kind wide;
  #L48d8b2.  v6:= v6 - v3 @kind long;
  #L48d8b4.  call temp:= `max`(v1, v6) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L48d8ba.  v6:= temp @kind wide;
  #L48d8bc.  return v6 @kind wide;
}
procedure `long` `E0`(`v1.f1` v7 @kind this, `x2.u$b` v8 @kind object, `long` v9 , `boolean` v11 ) @signature `Lv1/f1;.E0:(Lx2/u$b;JZ)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L48d8d0.  v0:= v7.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d8d4.  call temp:= `p`(v0) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48d8da.  v0:= temp @kind object;
  #L48d8dc.  v1:= v7.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d8e0.  call temp:= `q`(v1) @signature `Lv1/a2;.q:()Lv1/x1;` @kind virtual;
  #L48d8e6.  v1:= temp @kind object;
  #L48d8e8.  if v0 == v1 then goto L48d8f2;
  #L48d8ec.  v0:= 1I;
  #L48d8ee.  v5:= 1I;
  #L48d8f0.  goto L48d8f6;
  #L48d8f2.  v0:= 0I;
  #L48d8f4.  v5:= 0I;
  #L48d8f6.  v1:= v7 @kind object;
  #L48d8f8.  v2:= v8 @kind object;
  #L48d8fa.  v3:= v9 @kind wide;
  #L48d8fc.  v6:= v11;
  #L48d8fe.  call temp:= `F0`(v1, v2, v3, v5, v6) @signature `Lv1/f1;.F0:(Lx2/u$b;JZZ)J` @kind direct;
  #L48d904.  v8:= temp @kind wide;
  #L48d906.  return v8 @kind wide;
}
procedure `void` `F`(`v1.f1` v2 @kind this, `x2.r` v3 @kind object) @signature `Lv1/f1;.F:(Lx2/r;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48e920.  v0:= v2.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48e924.  call temp:= `v`(v0, v3) @signature `Lv1/a2;.v:(Lx2/r;)Z` @kind virtual;
  #L48e92a.  v3:= temp;
  #L48e92c.  if v3 != 0 then goto L48e932;
  #L48e930.  return @kind void;
  #L48e932.  v3:= v2.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48e936.  v0:= v2.`v1.f1.Z` @type ^`long` @kind wide;
  #L48e93a.  call `y`(v3, v0) @signature `Lv1/a2;.y:(J)V` @kind virtual;
  #L48e940.  call `W`(v2) @signature `Lv1/f1;.W:()V` @kind direct;
  #L48e946.  return @kind void;
}
procedure `long` `F0`(`v1.f1` v5 @kind this, `x2.u$b` v6 @kind object, `long` v7 , `boolean` v9 , `boolean` v10 ) @signature `Lv1/f1;.F0:(Lx2/u$b;JZZ)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48d918.  call `i1`(v5) @signature `Lv1/f1;.i1:()V` @kind direct;
  #L48d91e.  v0:= 0I;
  #L48d920.  v5.`v1.f1.Q` @type ^`boolean` := v0 @kind boolean;
  #L48d924.  v1:= 2I;
  #L48d926.  if v10 != 0 then goto L48d938;
  #L48d92a.  v10:= v5.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48d92e.  v10:= v10.`v1.i2.e` @type ^`int`;
  #L48d932.  v2:= 3I;
  #L48d934.  if v10 != v2 then goto L48d93e;
  #L48d938.  call `Z0`(v5, v1) @signature `Lv1/f1;.Z0:(I)V` @kind direct;
  #L48d93e.  v10:= v5.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d942.  call temp:= `p`(v10) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48d948.  v10:= temp @kind object;
  #L48d94a.  v2:= v10 @kind object;
  #L48d94c.  if v2 == 0 then goto L48d970;
  #L48d950.  v3:= v2.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48d954.  v3:= v3.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L48d958.  call temp:= `equals`(v6, v3) @signature `Lx2/s;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48d95e.  v3:= temp;
  #L48d960.  if v3 == 0 then goto L48d966;
  #L48d964.  goto L48d970;
  #L48d966.  call temp:= `j`(v2) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L48d96c.  v2:= temp @kind object;
  #L48d96e.  goto L48d94c;
  #L48d970.  if v9 != 0 then goto L48d990;
  #L48d974.  if v10 != v2 then goto L48d990;
  #L48d978.  if v2 == 0 then goto L48d9ec;
  #L48d97c.  call temp:= `z`(v2, v7) @signature `Lv1/x1;.z:(J)J` @kind virtual;
  #L48d982.  v9:= temp @kind wide;
  #L48d984.  v3:= 0L;
  #L48d988.  v6:= lcmp(v9, v3);
  #L48d98c.  if v6 >= 0 then goto L48d9ec;
  #L48d990.  v6:= v5.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48d994.  v9:= length @variable v6;
  #L48d996.  v10:= 0I;
  #L48d998.  if v10 >= v9 then goto L48d9ac;
  #L48d99c.  v3:= v6[v10] @kind object;
  #L48d9a0.  call `o`(v5, v3) @signature `Lv1/f1;.o:(Lv1/r2;)V` @kind direct;
  #L48d9a6.  v10:= v10 + 1;
  #L48d9aa.  goto L48d998;
  #L48d9ac.  if v2 == 0 then goto L48d9ec;
  #L48d9b0.  v6:= v5.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d9b4.  call temp:= `p`(v6) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48d9ba.  v6:= temp @kind object;
  #L48d9bc.  if v6 == v2 then goto L48d9cc;
  #L48d9c0.  v6:= v5.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d9c4.  call temp:= `b`(v6) @signature `Lv1/a2;.b:()Lv1/x1;` @kind virtual;
  #L48d9ca.  goto L48d9b0;
  #L48d9cc.  v6:= v5.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d9d0.  call temp:= `z`(v6, v2) @signature `Lv1/a2;.z:(Lv1/x1;)Z` @kind virtual;
  #L48d9d6.  v9:= 1000000000000L;
  #L48d9e0.  call `x`(v2, v9) @signature `Lv1/x1;.x:(J)V` @kind virtual;
  #L48d9e6.  call `r`(v5) @signature `Lv1/f1;.r:()V` @kind direct;
  #L48d9ec.  v6:= v5.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d9f0.  if v2 == 0 then goto L48da4e;
  #L48d9f4.  call temp:= `z`(v6, v2) @signature `Lv1/a2;.z:(Lv1/x1;)Z` @kind virtual;
  #L48d9fa.  v6:= v2.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L48d9fe.  if v6 != 0 then goto L48da14;
  #L48da02.  v6:= v2.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48da06.  call temp:= `b`(v6, v7) @signature `Lv1/y1;.b:(J)Lv1/y1;` @kind virtual;
  #L48da0c.  v6:= temp @kind object;
  #L48da0e.  v2.`v1.x1.f` @type ^`v1.y1` := v6 @kind object;
  #L48da12.  goto L48da40;
  #L48da14.  v6:= v2.`v1.x1.e` @type ^`boolean` @kind boolean;
  #L48da18.  if v6 == 0 then goto L48da40;
  #L48da1c.  v6:= v2.`v1.x1.a` @type ^`x2.r` @kind object;
  #L48da20.  call temp:= `s`(v6, v7) @signature `Lx2/r;.s:(J)J` @kind interface;
  #L48da26.  v6:= temp @kind wide;
  #L48da28.  v8:= v2.`v1.x1.a` @type ^`x2.r` @kind object;
  #L48da2c.  v9:= v5.`v1.f1.A` @type ^`long` @kind wide;
  #L48da30.  v9:= v6 - v9 @kind long;
  #L48da34.  v2:= v5.`v1.f1.B` @type ^`boolean` @kind boolean;
  #L48da38.  call `r`(v8, v9, v2) @signature `Lx2/r;.r:(JZ)V` @kind interface;
  #L48da3e.  v7:= v6 @kind wide;
  #L48da40.  call `t0`(v5, v7) @signature `Lv1/f1;.t0:(J)V` @kind direct;
  #L48da46.  call `W`(v5) @signature `Lv1/f1;.W:()V` @kind direct;
  #L48da4c.  goto L48da5a;
  #L48da4e.  call `f`(v6) @signature `Lv1/a2;.f:()V` @kind virtual;
  #L48da54.  call `t0`(v5, v7) @signature `Lv1/f1;.t0:(J)V` @kind direct;
  #L48da5a.  call `H`(v5, v0) @signature `Lv1/f1;.H:(Z)V` @kind direct;
  #L48da60.  v6:= v5.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48da64.  call temp:= `c`(v6, v1) @signature `Ls3/m;.c:(I)Z` @kind interface;
  #L48da6a.  return v7 @kind wide;
}
procedure `void` `G`(`v1.f1` v1 @kind this, `java.io.IOException` v2 @kind object, `int` v3 ) @signature `Lv1/f1;.G:(Ljava/io/IOException;I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L48e958.  call temp:= `c`(v2, v3) @signature `Lv1/n;.c:(Ljava/io/IOException;I)Lv1/n;` @kind static;
  #L48e95e.  v2:= temp @kind object;
  #L48e960.  v3:= v1.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48e964.  call temp:= `p`(v3) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48e96a.  v3:= temp @kind object;
  #L48e96c.  if v3 == 0 then goto L48e980;
  #L48e970.  v3:= v3.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48e974.  v3:= v3.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L48e978.  call temp:= `a`(v2, v3) @signature `Lv1/n;.a:(Lx2/s;)Lv1/n;` @kind virtual;
  #L48e97e.  v2:= temp @kind object;
  #L48e980.  v3:= "ExoPlayerImplInternal" @kind object;
  #L48e984.  v0:= "Playback error" @kind object;
  #L48e988.  call `d`(v3, v0, v2) @signature `Ls3/q;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L48e98e.  v3:= 0I;
  #L48e990.  call `h1`(v1, v3, v3) @signature `Lv1/f1;.h1:(ZZ)V` @kind direct;
  #L48e996.  v3:= v1.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e99a.  call temp:= `e`(v3, v2) @signature `Lv1/i2;.e:(Lv1/n;)Lv1/i2;` @kind virtual;
  #L48e9a0.  v2:= temp @kind object;
  #L48e9a2.  v1.`v1.f1.L` @type ^`v1.i2` := v2 @kind object;
  #L48e9a6.  return @kind void;
}
procedure `void` `G0`(`v1.f1` v9 @kind this, `v1.m2` v10 @kind object) @signature `Lv1/f1;.G0:(Lv1/m2;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L490360.  call temp:= `f`(v10) @signature `Lv1/m2;.f:()J` @kind virtual;
  #L490366.  v0:= temp @kind wide;
  #L490368.  v2:= -4.9E-324D;
  #L490372.  v4:= lcmp(v0, v2);
  #L490376.  if v4 != 0 then goto L490382;
  #L49037a.  call `H0`(v9, v10) @signature `Lv1/f1;.H0:(Lv1/m2;)V` @kind direct;
  #L490380.  goto L4903fc;
  #L490382.  v0:= v9.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490386.  v0:= v0.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L49038a.  call temp:= `q`(v0) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L490390.  v0:= temp;
  #L490392.  if v0 == 0 then goto L4903ac;
  #L490396.  v0:= v9.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L49039a.  v1:= new `v1.f1$d`;
  #L49039e.  call `<init>`(v1, v10) @signature `Lv1/f1$d;.<init>:(Lv1/m2;)V` @kind direct;
  #L4903a4.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4903aa.  goto L4903fc;
  #L4903ac.  v0:= new `v1.f1$d`;
  #L4903b0.  call `<init>`(v0, v10) @signature `Lv1/f1$d;.<init>:(Lv1/m2;)V` @kind direct;
  #L4903b6.  v1:= v9.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L4903ba.  v4:= v1.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L4903be.  v5:= v9.`v1.f1.S` @type ^`int`;
  #L4903c2.  v6:= v9.`v1.f1.T` @type ^`boolean` @kind boolean;
  #L4903c6.  v7:= v9.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L4903ca.  v8:= v9.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L4903ce.  v2:= v0 @kind object;
  #L4903d0.  v3:= v4 @kind object;
  #L4903d2.  call temp:= `v0`(v2, v3, v4, v5, v6, v7, v8) @signature `Lv1/f1;.v0:(Lv1/f1$d;Lv1/d3;Lv1/d3;IZLv1/d3$c;Lv1/d3$b;)Z` @kind static;
  #L4903d8.  v1:= temp;
  #L4903da.  if v1 == 0 then goto L4903f4;
  #L4903de.  v10:= v9.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L4903e2.  call temp:= `add`(v10, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4903e8.  v10:= v9.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L4903ec.  call `sort`(v10) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;)V` @kind static;
  #L4903f2.  goto L4903fc;
  #L4903f4.  v0:= 0I;
  #L4903f6.  call `k`(v10, v0) @signature `Lv1/m2;.k:(Z)V` @kind virtual;
  #L4903fc.  return @kind void;
}
procedure `void` `H`(`v1.f1` v5 @kind this, `boolean` v6 ) @signature `Lv1/f1;.H:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48e9b8.  v0:= v5.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48e9bc.  call temp:= `j`(v0) @signature `Lv1/a2;.j:()Lv1/x1;` @kind virtual;
  #L48e9c2.  v0:= temp @kind object;
  #L48e9c4.  if v0 != 0 then goto L48e9d2;
  #L48e9c8.  v1:= v5.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e9cc.  v1:= v1.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48e9d0.  goto L48e9da;
  #L48e9d2.  v1:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48e9d6.  v1:= v1.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L48e9da.  v2:= v5.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e9de.  v2:= v2.`v1.i2.k` @type ^`x2.u$b` @kind object;
  #L48e9e2.  call temp:= `equals`(v2, v1) @signature `Lx2/s;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48e9e8.  v2:= temp;
  #L48e9ea.  v2:= v2 ^~ 1;
  #L48e9ee.  if v2 == 0 then goto L48ea02;
  #L48e9f2.  v3:= v5.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e9f6.  call temp:= `b`(v3, v1) @signature `Lv1/i2;.b:(Lx2/u$b;)Lv1/i2;` @kind virtual;
  #L48e9fc.  v1:= temp @kind object;
  #L48e9fe.  v5.`v1.f1.L` @type ^`v1.i2` := v1 @kind object;
  #L48ea02.  v1:= v5.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ea06.  if v0 != 0 then goto L48ea10;
  #L48ea0a.  v3:= v1.`v1.i2.r` @type ^`long` @kind wide;
  #L48ea0e.  goto L48ea18;
  #L48ea10.  call temp:= `i`(v0) @signature `Lv1/x1;.i:()J` @kind virtual;
  #L48ea16.  v3:= temp @kind wide;
  #L48ea18.  v1.`v1.i2.p` @type ^`long` := v3 @kind wide;
  #L48ea1c.  v1:= v5.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ea20.  call temp:= `D`(v5) @signature `Lv1/f1;.D:()J` @kind direct;
  #L48ea26.  v3:= temp @kind wide;
  #L48ea28.  v1.`v1.i2.q` @type ^`long` := v3 @kind wide;
  #L48ea2c.  if v2 != 0 then goto L48ea34;
  #L48ea30.  if v6 == 0 then goto L48ea56;
  #L48ea34.  if v0 == 0 then goto L48ea56;
  #L48ea38.  v6:= v0.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L48ea3c.  if v6 == 0 then goto L48ea56;
  #L48ea40.  call temp:= `n`(v0) @signature `Lv1/x1;.n:()Lx2/v0;` @kind virtual;
  #L48ea46.  v6:= temp @kind object;
  #L48ea48.  call temp:= `o`(v0) @signature `Lv1/x1;.o:()Lq3/b0;` @kind virtual;
  #L48ea4e.  v0:= temp @kind object;
  #L48ea50.  call `k1`(v5, v6, v0) @signature `Lv1/f1;.k1:(Lx2/v0;Lq3/b0;)V` @kind direct;
  #L48ea56.  return @kind void;
}
procedure `void` `H0`(`v1.f1` v2 @kind this, `v1.m2` v3 @kind object) @signature `Lv1/f1;.H0:(Lv1/m2;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L490410.  call temp:= `c`(v3) @signature `Lv1/m2;.c:()Landroid/os/Looper;` @kind virtual;
  #L490416.  v0:= temp @kind object;
  #L490418.  v1:= v2.`v1.f1.x` @type ^`android.os.Looper` @kind object;
  #L49041c.  if v0 != v1 then goto L490446;
  #L490420.  call `n`(v2, v3) @signature `Lv1/f1;.n:(Lv1/m2;)V` @kind direct;
  #L490426.  v3:= v2.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L49042a.  v3:= v3.`v1.i2.e` @type ^`int`;
  #L49042e.  v0:= 3I;
  #L490430.  v1:= 2I;
  #L490432.  if v3 == v0 then goto L49043a;
  #L490436.  if v3 != v1 then goto L49045c;
  #L49043a.  v3:= v2.`v1.f1.v` @type ^`s3.m` @kind object;
  #L49043e.  call temp:= `c`(v3, v1) @signature `Ls3/m;.c:(I)Z` @kind interface;
  #L490444.  goto L49045c;
  #L490446.  v0:= v2.`v1.f1.v` @type ^`s3.m` @kind object;
  #L49044a.  v1:= 15I;
  #L49044e.  call temp:= `g`(v0, v1, v3) @signature `Ls3/m;.g:(ILjava/lang/Object;)Ls3/m$a;` @kind interface;
  #L490454.  v3:= temp @kind object;
  #L490456.  call `a`(v3) @signature `Ls3/m$a;.a:()V` @kind interface;
  #L49045c.  return @kind void;
}
procedure `void` `I`(`v1.f1` v24 @kind this, `v1.d3` v25 @kind object, `boolean` v26 ) @signature `Lv1/f1;.I:(Lv1/d3;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L48ea68.  v11:= v24 @kind object;
  #L48ea6c.  v12:= v25 @kind object;
  #L48ea70.  v2:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ea74.  v3:= v11.`v1.f1.Y` @type ^`v1.f1$h` @kind object;
  #L48ea78.  v4:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48ea7c.  v5:= v11.`v1.f1.S` @type ^`int`;
  #L48ea80.  v6:= v11.`v1.f1.T` @type ^`boolean` @kind boolean;
  #L48ea84.  v7:= v11.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L48ea88.  v8:= v11.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L48ea8c.  v1:= v25 @kind object;
  #L48ea90.  call temp:= `x0`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lv1/f1;.x0:(Lv1/d3;Lv1/i2;Lv1/f1$h;Lv1/a2;IZLv1/d3$c;Lv1/d3$b;)Lv1/f1$g;` @kind static;
  #L48ea96.  v7:= temp @kind object;
  #L48ea98.  v8:= v7.`v1.f1$g.a` @type ^`x2.u$b` @kind object;
  #L48ea9c.  v9:= v7.`v1.f1$g.c` @type ^`long` @kind wide;
  #L48eaa0.  v0:= v7.`v1.f1$g.d` @type ^`boolean` @kind boolean;
  #L48eaa4.  v13:= v7.`v1.f1$g.b` @type ^`long` @kind wide;
  #L48eaa8.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48eaac.  v1:= v1.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48eab0.  call temp:= `equals`(v1, v8) @signature `Lx2/s;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48eab6.  v1:= temp;
  #L48eab8.  v15:= 1I;
  #L48eaba.  v5:= 0I;
  #L48eabc.  if v1 == 0 then goto L48ead8;
  #L48eac0.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48eac4.  v1:= v1.`v1.i2.r` @type ^`long` @kind wide;
  #L48eac8.  v3:= lcmp(v13, v1);
  #L48eacc.  if v3 == 0 then goto L48ead2;
  #L48ead0.  goto L48ead8;
  #L48ead2.  v16:= 0I;
  #L48ead6.  goto L48eadc;
  #L48ead8.  v16:= 1I;
  #L48eadc.  v17:= 3I;
  #L48eae0.  v6:= 0I;
  #L48eae2.  v18:= -4.9E-324D;
  #L48eaec.  v4:= 4I;
  #L48eaee.  v1:= v7.`v1.f1$g.e` @type ^`boolean` @kind boolean;
  #L48eaf2.  if v1 == 0 then goto L48eb0e;
  #L48eaf6.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48eafa.  v1:= v1.`v1.i2.e` @type ^`int`;
  #L48eafe.  if v1 == v15 then goto L48eb08;
  #L48eb02.  call `Z0`(v11, v4) @signature `Lv1/f1;.Z0:(I)V` @kind direct;
  #L48eb08.  call `r0`(v11, v5, v5, v5, v15) @signature `Lv1/f1;.r0:(ZZZZ)V` @kind direct;
  #L48eb0e.  if v16 != 0 then goto L48eb46;
  #L48eb12.  v1:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48eb16.  v3:= v11.`v1.f1.Z` @type ^`long` @kind wide;
  #L48eb1a.  call temp:= `A`(v24) @signature `Lv1/f1;.A:()J` @kind direct;
  #L48eb20.  v21:= temp @kind wide;
  #L48eb22.  v2:= v25 @kind object;
  #L48eb26.  v15:= -1I;
  #L48eb28.  v20:= 4I;
  #L48eb2c.  v15:= 0I;
  #L48eb2e.  v5:= v21 @kind wide;
  #L48eb32.  call temp:= `F`(v1, v2, v3, v5) @signature `Lv1/a2;.F:(Lv1/d3;JJ)Z` @kind virtual;
  #L48eb38.  v0:= temp;
  #L48eb3a.  if v0 != 0 then goto L48ebaa;
  #L48eb3e.  call `C0`(v11, v15) @signature `Lv1/f1;.C0:(Z)V` @kind direct;
  #L48eb44.  goto L48ebaa;
  #L48eb46.  v15:= 0I;
  #L48eb48.  v20:= 4I;
  #L48eb4c.  call temp:= `q`(v25) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48eb52.  v1:= temp;
  #L48eb54.  if v1 != 0 then goto L48ebaa;
  #L48eb58.  v1:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48eb5c.  call temp:= `p`(v1) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48eb62.  v1:= temp @kind object;
  #L48eb64.  if v1 == 0 then goto L48eba0;
  #L48eb68.  v2:= v1.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48eb6c.  v2:= v2.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L48eb70.  call temp:= `equals`(v2, v8) @signature `Lx2/s;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48eb76.  v2:= temp;
  #L48eb78.  if v2 == 0 then goto L48eb96;
  #L48eb7c.  v2:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48eb80.  v3:= v1.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48eb84.  call temp:= `r`(v2, v12, v3) @signature `Lv1/a2;.r:(Lv1/d3;Lv1/y1;)Lv1/y1;` @kind virtual;
  #L48eb8a.  v2:= temp @kind object;
  #L48eb8c.  v1.`v1.x1.f` @type ^`v1.y1` := v2 @kind object;
  #L48eb90.  call `A`(v1) @signature `Lv1/x1;.A:()V` @kind virtual;
  #L48eb96.  call temp:= `j`(v1) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L48eb9c.  v1:= temp @kind object;
  #L48eb9e.  goto L48eb64;
  #L48eba0.  call temp:= `E0`(v11, v8, v13, v0) @signature `Lv1/f1;.E0:(Lx2/u$b;JZ)J` @kind direct;
  #L48eba6.  v0:= temp @kind wide;
  #L48eba8.  v13:= v0 @kind wide;
  #L48ebaa.  v0:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ebae.  v4:= v0.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48ebb2.  v5:= v0.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48ebb6.  v0:= v7.`v1.f1$g.f` @type ^`boolean` @kind boolean;
  #L48ebba.  if v0 == 0 then goto L48ebc2;
  #L48ebbe.  v6:= v13 @kind wide;
  #L48ebc0.  goto L48ebc6;
  #L48ebc2.  v6:= v18 @kind wide;
  #L48ebc6.  v1:= v24 @kind object;
  #L48ebca.  v2:= v25 @kind object;
  #L48ebce.  v3:= v8 @kind object;
  #L48ebd0.  call `n1`(v1, v2, v3, v4, v5, v6) @signature `Lv1/f1;.n1:(Lv1/d3;Lx2/u$b;Lv1/d3;Lx2/u$b;J)V` @kind direct;
  #L48ebd6.  if v16 != 0 then goto L48ebea;
  #L48ebda.  v0:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ebde.  v0:= v0.`v1.i2.c` @type ^`long` @kind wide;
  #L48ebe2.  v2:= lcmp(v9, v0);
  #L48ebe6.  if v2 == 0 then goto L48ec66;
  #L48ebea.  v0:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ebee.  v1:= v0.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48ebf2.  v1:= v1.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48ebf6.  v0:= v0.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48ebfa.  if v16 == 0 then goto L48ec28;
  #L48ebfe.  if v26 == 0 then goto L48ec28;
  #L48ec02.  call temp:= `q`(v0) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48ec08.  v2:= temp;
  #L48ec0a.  if v2 != 0 then goto L48ec28;
  #L48ec0e.  v2:= v11.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L48ec12.  call temp:= `h`(v0, v1, v2) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48ec18.  v0:= temp @kind object;
  #L48ec1a.  v0:= v0.`v1.d3$b.t` @type ^`boolean` @kind boolean;
  #L48ec1e.  if v0 != 0 then goto L48ec28;
  #L48ec22.  v23:= 1I;
  #L48ec26.  goto L48ec2c;
  #L48ec28.  v23:= 0I;
  #L48ec2c.  v0:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ec30.  v5:= v0.`v1.i2.d` @type ^`long` @kind wide;
  #L48ec34.  call temp:= `b`(v12, v1) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L48ec3a.  v0:= temp;
  #L48ec3c.  v1:= -1I;
  #L48ec3e.  if v0 != v1 then goto L48ec46;
  #L48ec42.  v17:= 4I;
  #L48ec46.  v1:= v24 @kind object;
  #L48ec4a.  v2:= v8 @kind object;
  #L48ec4c.  v3:= v13 @kind wide;
  #L48ec4e.  v7:= v5 @kind wide;
  #L48ec50.  v5:= v9 @kind wide;
  #L48ec52.  v9:= v23;
  #L48ec56.  v10:= v17;
  #L48ec5a.  call temp:= `M`(v1, v2, v3, v5, v7, v9, v10) @signature `Lv1/f1;.M:(Lx2/u$b;JJJZI)Lv1/i2;` @kind direct;
  #L48ec60.  v0:= temp @kind object;
  #L48ec62.  v11.`v1.f1.L` @type ^`v1.i2` := v0 @kind object;
  #L48ec66.  call `s0`(v24) @signature `Lv1/f1;.s0:()V` @kind direct;
  #L48ec6c.  v0:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ec70.  v0:= v0.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48ec74.  call `w0`(v11, v12, v0) @signature `Lv1/f1;.w0:(Lv1/d3;Lv1/d3;)V` @kind direct;
  #L48ec7a.  v0:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ec7e.  call temp:= `i`(v0, v12) @signature `Lv1/i2;.i:(Lv1/d3;)Lv1/i2;` @kind virtual;
  #L48ec84.  v0:= temp @kind object;
  #L48ec86.  v11.`v1.f1.L` @type ^`v1.i2` := v0 @kind object;
  #L48ec8a.  call temp:= `q`(v25) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48ec90.  v0:= temp;
  #L48ec92.  if v0 != 0 then goto L48ec9c;
  #L48ec96.  v6:= 0I;
  #L48ec98.  v11.`v1.f1.Y` @type ^`v1.f1$h` := v6 @kind object;
  #L48ec9c.  call `H`(v11, v15) @signature `Lv1/f1;.H:(Z)V` @kind direct;
  #L48eca2.  return @kind void;
  #L48eca4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48eca6.  v6:= 0I;
  #L48eca8.  goto L48ecb2;
  #L48ecaa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48ecac.  v15:= 0I;
  #L48ecae.  v20:= 4I;
  #L48ecb2.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ecb6.  v4:= v1.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48ecba.  v5:= v1.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48ecbe.  v1:= v7.`v1.f1$g.f` @type ^`boolean` @kind boolean;
  #L48ecc2.  if v1 == 0 then goto L48ecca;
  #L48ecc6.  v18:= v13 @kind wide;
  #L48ecca.  v1:= v24 @kind object;
  #L48ecce.  v2:= v25 @kind object;
  #L48ecd2.  v3:= v8 @kind object;
  #L48ecd4.  v15:= v6 @kind object;
  #L48ecd6.  v6:= v18 @kind wide;
  #L48ecda.  call `n1`(v1, v2, v3, v4, v5, v6) @signature `Lv1/f1;.n1:(Lv1/d3;Lx2/u$b;Lv1/d3;Lx2/u$b;J)V` @kind direct;
  #L48ece0.  if v16 != 0 then goto L48ecf4;
  #L48ece4.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ece8.  v1:= v1.`v1.i2.c` @type ^`long` @kind wide;
  #L48ecec.  v3:= lcmp(v9, v1);
  #L48ecf0.  if v3 == 0 then goto L48ed70;
  #L48ecf4.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ecf8.  v2:= v1.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48ecfc.  v2:= v2.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48ed00.  v1:= v1.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48ed04.  if v16 == 0 then goto L48ed32;
  #L48ed08.  if v26 == 0 then goto L48ed32;
  #L48ed0c.  call temp:= `q`(v1) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48ed12.  v3:= temp;
  #L48ed14.  if v3 != 0 then goto L48ed32;
  #L48ed18.  v3:= v11.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L48ed1c.  call temp:= `h`(v1, v2, v3) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48ed22.  v1:= temp @kind object;
  #L48ed24.  v1:= v1.`v1.d3$b.t` @type ^`boolean` @kind boolean;
  #L48ed28.  if v1 != 0 then goto L48ed32;
  #L48ed2c.  v23:= 1I;
  #L48ed30.  goto L48ed36;
  #L48ed32.  v23:= 0I;
  #L48ed36.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ed3a.  v5:= v1.`v1.i2.d` @type ^`long` @kind wide;
  #L48ed3e.  call temp:= `b`(v12, v2) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L48ed44.  v1:= temp;
  #L48ed46.  v2:= -1I;
  #L48ed48.  if v1 != v2 then goto L48ed50;
  #L48ed4c.  v17:= 4I;
  #L48ed50.  v1:= v24 @kind object;
  #L48ed54.  v2:= v8 @kind object;
  #L48ed56.  v3:= v13 @kind wide;
  #L48ed58.  v7:= v5 @kind wide;
  #L48ed5a.  v5:= v9 @kind wide;
  #L48ed5c.  v9:= v23;
  #L48ed60.  v10:= v17;
  #L48ed64.  call temp:= `M`(v1, v2, v3, v5, v7, v9, v10) @signature `Lv1/f1;.M:(Lx2/u$b;JJJZI)Lv1/i2;` @kind direct;
  #L48ed6a.  v1:= temp @kind object;
  #L48ed6c.  v11.`v1.f1.L` @type ^`v1.i2` := v1 @kind object;
  #L48ed70.  call `s0`(v24) @signature `Lv1/f1;.s0:()V` @kind direct;
  #L48ed76.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ed7a.  v1:= v1.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48ed7e.  call `w0`(v11, v12, v1) @signature `Lv1/f1;.w0:(Lv1/d3;Lv1/d3;)V` @kind direct;
  #L48ed84.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ed88.  call temp:= `i`(v1, v12) @signature `Lv1/i2;.i:(Lv1/d3;)Lv1/i2;` @kind virtual;
  #L48ed8e.  v1:= temp @kind object;
  #L48ed90.  v11.`v1.f1.L` @type ^`v1.i2` := v1 @kind object;
  #L48ed94.  call temp:= `q`(v25) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48ed9a.  v1:= temp;
  #L48ed9c.  if v1 != 0 then goto L48eda4;
  #L48eda0.  v11.`v1.f1.Y` @type ^`v1.f1$h` := v15 @kind object;
  #L48eda4.  v1:= 0I;
  #L48eda6.  call `H`(v11, v1) @signature `Lv1/f1;.H:(Z)V` @kind direct;
  #L48edac.  throw v0;
  catch `java.lang.Throwable` @[L48eaee..L48eb22] goto L48ecaa;
  catch `java.lang.Throwable` @[L48eb32..L48eba8] goto L48eca4;
}
procedure `void` `I0`(`v1.f1` v3 @kind this, `v1.m2` v4 @kind object) @signature `Lv1/f1;.I0:(Lv1/m2;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L490470.  call temp:= `c`(v4) @signature `Lv1/m2;.c:()Landroid/os/Looper;` @kind virtual;
  #L490476.  v0:= temp @kind object;
  #L490478.  call temp:= `getThread`(v0) @signature `Landroid/os/Looper;.getThread:()Ljava/lang/Thread;` @kind virtual;
  #L49047e.  v1:= temp @kind object;
  #L490480.  call temp:= `isAlive`(v1) @signature `Ljava/lang/Thread;.isAlive:()Z` @kind virtual;
  #L490486.  v1:= temp;
  #L490488.  if v1 != 0 then goto L4904a4;
  #L49048c.  v0:= "TAG" @kind object;
  #L490490.  v1:= "Trying to send message on a dead thread." @kind object;
  #L490494.  call `h`(v0, v1) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L49049a.  v0:= 0I;
  #L49049c.  call `k`(v4, v0) @signature `Lv1/m2;.k:(Z)V` @kind virtual;
  #L4904a2.  return @kind void;
  #L4904a4.  v1:= v3.`v1.f1.E` @type ^`s3.c` @kind object;
  #L4904a8.  v2:= 0I;
  #L4904aa.  call temp:= `c`(v1, v0, v2) @signature `Ls3/c;.c:(Landroid/os/Looper;Landroid/os/Handler$Callback;)Ls3/m;` @kind interface;
  #L4904b0.  v0:= temp @kind object;
  #L4904b2.  v1:= new `v1.d1`;
  #L4904b6.  call `<init>`(v1, v3, v4) @signature `Lv1/d1;.<init>:(Lv1/f1;Lv1/m2;)V` @kind direct;
  #L4904bc.  call temp:= `i`(v0, v1) @signature `Ls3/m;.i:(Ljava/lang/Runnable;)Z` @kind interface;
  #L4904c2.  return @kind void;
}
procedure `void` `J`(`v1.f1` v11 @kind this, `x2.r` v12 @kind object) @signature `Lv1/f1;.J:(Lx2/r;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L48edd8.  v0:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48eddc.  call temp:= `v`(v0, v12) @signature `Lv1/a2;.v:(Lx2/r;)Z` @kind virtual;
  #L48ede2.  v12:= temp;
  #L48ede4.  if v12 != 0 then goto L48edea;
  #L48ede8.  return @kind void;
  #L48edea.  v12:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48edee.  call temp:= `j`(v12) @signature `Lv1/a2;.j:()Lv1/x1;` @kind virtual;
  #L48edf4.  v12:= temp @kind object;
  #L48edf6.  v0:= v11.`v1.f1.C` @type ^`v1.k` @kind object;
  #L48edfa.  call temp:= `i`(v0) @signature `Lv1/k;.i:()Lv1/j2;` @kind virtual;
  #L48ee00.  v0:= temp @kind object;
  #L48ee02.  v0:= v0.`v1.j2.o` @type ^`float`;
  #L48ee06.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ee0a.  v1:= v1.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48ee0e.  call `p`(v12, v0, v1) @signature `Lv1/x1;.p:(FLv1/d3;)V` @kind virtual;
  #L48ee14.  call temp:= `n`(v12) @signature `Lv1/x1;.n:()Lx2/v0;` @kind virtual;
  #L48ee1a.  v0:= temp @kind object;
  #L48ee1c.  call temp:= `o`(v12) @signature `Lv1/x1;.o:()Lq3/b0;` @kind virtual;
  #L48ee22.  v1:= temp @kind object;
  #L48ee24.  call `k1`(v11, v0, v1) @signature `Lv1/f1;.k1:(Lx2/v0;Lq3/b0;)V` @kind direct;
  #L48ee2a.  v0:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48ee2e.  call temp:= `p`(v0) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48ee34.  v0:= temp @kind object;
  #L48ee36.  if v12 != v0 then goto L48ee76;
  #L48ee3a.  v0:= v12.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48ee3e.  v0:= v0.`v1.y1.b` @type ^`long` @kind wide;
  #L48ee42.  call `t0`(v11, v0) @signature `Lv1/f1;.t0:(J)V` @kind direct;
  #L48ee48.  call `r`(v11) @signature `Lv1/f1;.r:()V` @kind direct;
  #L48ee4e.  v0:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48ee52.  v2:= v0.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48ee56.  v12:= v12.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48ee5a.  v7:= v12.`v1.y1.b` @type ^`long` @kind wide;
  #L48ee5e.  v5:= v0.`v1.i2.c` @type ^`long` @kind wide;
  #L48ee62.  v9:= 0I;
  #L48ee64.  v10:= 5I;
  #L48ee66.  v1:= v11 @kind object;
  #L48ee68.  v3:= v7 @kind wide;
  #L48ee6a.  call temp:= `M`(v1, v2, v3, v5, v7, v9, v10) @signature `Lv1/f1;.M:(Lx2/u$b;JJJZI)Lv1/i2;` @kind direct;
  #L48ee70.  v12:= temp @kind object;
  #L48ee72.  v11.`v1.f1.L` @type ^`v1.i2` := v12 @kind object;
  #L48ee76.  call `W`(v11) @signature `Lv1/f1;.W:()V` @kind direct;
  #L48ee7c.  return @kind void;
}
procedure `void` `J0`(`v1.f1` v5 @kind this, `long` v6 ) @signature `Lv1/f1;.J0:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4904d4.  v0:= v5.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L4904d8.  v1:= length @variable v0;
  #L4904da.  v2:= 0I;
  #L4904dc.  if v2 >= v1 then goto L4904fc;
  #L4904e0.  v3:= v0[v2] @kind object;
  #L4904e4.  call temp:= `g`(v3) @signature `Lv1/r2;.g:()Lx2/n0;` @kind interface;
  #L4904ea.  v4:= temp @kind object;
  #L4904ec.  if v4 == 0 then goto L4904f6;
  #L4904f0.  call `K0`(v5, v3, v6) @signature `Lv1/f1;.K0:(Lv1/r2;J)V` @kind direct;
  #L4904f6.  v2:= v2 + 1;
  #L4904fa.  goto L4904dc;
  #L4904fc.  return @kind void;
}
procedure `void` `K`(`v1.f1` v3 @kind this, `v1.j2` v4 @kind object, `float` v5 , `boolean` v6 , `boolean` v7 ) @signature `Lv1/f1;.K:(Lv1/j2;FZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L48eeb0.  if v6 == 0 then goto L48eed4;
  #L48eeb4.  if v7 == 0 then goto L48eec4;
  #L48eeb8.  v6:= v3.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L48eebc.  v7:= 1I;
  #L48eebe.  call `b`(v6, v7) @signature `Lv1/f1$e;.b:(I)V` @kind virtual;
  #L48eec4.  v6:= v3.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48eec8.  call temp:= `f`(v6, v4) @signature `Lv1/i2;.f:(Lv1/j2;)Lv1/i2;` @kind virtual;
  #L48eece.  v6:= temp @kind object;
  #L48eed0.  v3.`v1.f1.L` @type ^`v1.i2` := v6 @kind object;
  #L48eed4.  v6:= v4.`v1.j2.o` @type ^`float`;
  #L48eed8.  call `o1`(v3, v6) @signature `Lv1/f1;.o1:(F)V` @kind direct;
  #L48eede.  v6:= v3.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48eee2.  v7:= length @variable v6;
  #L48eee4.  v0:= 0I;
  #L48eee6.  if v0 >= v7 then goto L48ef02;
  #L48eeea.  v1:= v6[v0] @kind object;
  #L48eeee.  if v1 == 0 then goto L48eefc;
  #L48eef2.  v2:= v4.`v1.j2.o` @type ^`float`;
  #L48eef6.  call `z`(v1, v5, v2) @signature `Lv1/r2;.z:(FF)V` @kind interface;
  #L48eefc.  v0:= v0 + 1;
  #L48ef00.  goto L48eee6;
  #L48ef02.  return @kind void;
}
procedure `void` `K0`(`v1.f1` v1 @kind this, `v1.r2` v2 @kind object, `long` v3 ) @signature `Lv1/f1;.K0:(Lv1/r2;J)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L490510.  call `q`(v2) @signature `Lv1/r2;.q:()V` @kind interface;
  #L490516.  v0:= instanceof @variable v2 @type ^`g3.n` @kind boolean;
  #L49051a.  if v0 == 0 then goto L490528;
  #L49051e.  v2:= (`g3.n`) v2 @kind object;
  #L490522.  call `a0`(v2, v3) @signature `Lg3/n;.a0:(J)V` @kind virtual;
  #L490528.  return @kind void;
}
procedure `void` `L`(`v1.f1` v2 @kind this, `v1.j2` v3 @kind object, `boolean` v4 ) @signature `Lv1/f1;.L:(Lv1/j2;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48ee90.  v0:= v3.`v1.j2.o` @type ^`float`;
  #L48ee94.  v1:= 1I;
  #L48ee96.  call `K`(v2, v3, v0, v1, v4) @signature `Lv1/f1;.K:(Lv1/j2;FZZ)V` @kind direct;
  #L48ee9c.  return @kind void;
}
procedure `void` `L0`(`v1.f1` v4 @kind this, `boolean` v5 , `java.util.concurrent.atomic.AtomicBoolean` v6 @kind object) @signature `Lv1/f1;.L0:(ZLjava/util/concurrent/atomic/AtomicBoolean;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L49053c.  v0:= v4.`v1.f1.U` @type ^`boolean` @kind boolean;
  #L490540.  if v0 == v5 then goto L490584;
  #L490544.  v4.`v1.f1.U` @type ^`boolean` := v5 @kind boolean;
  #L490548.  if v5 != 0 then goto L490584;
  #L49054c.  v5:= v4.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L490550.  v0:= length @variable v5;
  #L490552.  v1:= 0I;
  #L490554.  if v1 >= v0 then goto L490584;
  #L490558.  v2:= v5[v1] @kind object;
  #L49055c.  call temp:= `R`(v2) @signature `Lv1/f1;.R:(Lv1/r2;)Z` @kind static;
  #L490562.  v3:= temp;
  #L490564.  if v3 != 0 then goto L49057e;
  #L490568.  v3:= v4.`v1.f1.p` @type ^`java.util.Set` @kind object;
  #L49056c.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L490572.  v3:= temp;
  #L490574.  if v3 == 0 then goto L49057e;
  #L490578.  call `c`(v2) @signature `Lv1/r2;.c:()V` @kind interface;
  #L49057e.  v1:= v1 + 1;
  #L490582.  goto L490554;
  #L490584.  if v6 == 0 then goto L4905a2;
  #L490588.  @monitorenter v4
  #L49058a.  v5:= 1I;
  #L49058c.  call `set`(v6, v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L490592.  call `notifyAll`(v4) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L490598.  @monitorexit v4
  #L49059a.  goto L4905a2;
  #L49059c.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L49059e.  @monitorexit v4
  #L4905a0.  throw v5;
  #L4905a2.  return @kind void;
  catch `java.lang.Throwable` @[L49058c..L4905a0] goto L49059c;
}
procedure `v1.i2` `M`(`v1.f1` v14 @kind this, `x2.u$b` v15 @kind object, `long` v16 , `long` v18 , `long` v20 , `boolean` v22 , `int` v23 ) @signature `Lv1/f1;.M:(Lx2/u$b;JJJZI)Lv1/i2;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L48df20.  v0:= v14 @kind object;
  #L48df22.  v2:= v15 @kind object;
  #L48df24.  v5:= v18 @kind wide;
  #L48df28.  v1:= v0.`v1.f1.b0` @type ^`boolean` @kind boolean;
  #L48df2c.  if v1 != 0 then goto L48df5a;
  #L48df30.  v1:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48df34.  v3:= v1.`v1.i2.r` @type ^`long` @kind wide;
  #L48df38.  v1:= lcmp(v16, v3);
  #L48df3c.  if v1 != 0 then goto L48df5a;
  #L48df40.  v1:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48df44.  v1:= v1.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48df48.  call temp:= `equals`(v15, v1) @signature `Lx2/s;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48df4e.  v1:= temp;
  #L48df50.  if v1 != 0 then goto L48df56;
  #L48df54.  goto L48df5a;
  #L48df56.  v1:= 0I;
  #L48df58.  goto L48df5c;
  #L48df5a.  v1:= 1I;
  #L48df5c.  v0.`v1.f1.b0` @type ^`boolean` := v1 @kind boolean;
  #L48df60.  call `s0`(v14) @signature `Lv1/f1;.s0:()V` @kind direct;
  #L48df66.  v1:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48df6a.  v3:= v1.`v1.i2.h` @type ^`x2.v0` @kind object;
  #L48df6e.  v4:= v1.`v1.i2.i` @type ^`q3.b0` @kind object;
  #L48df72.  v1:= v1.`v1.i2.j` @type ^`java.util.List` @kind object;
  #L48df76.  v7:= v0.`v1.f1.H` @type ^`v1.d2` @kind object;
  #L48df7a.  call temp:= `s`(v7) @signature `Lv1/d2;.s:()Z` @kind virtual;
  #L48df80.  v7:= temp;
  #L48df82.  if v7 == 0 then goto L48dfea;
  #L48df86.  v1:= v0.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48df8a.  call temp:= `p`(v1) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48df90.  v1:= temp @kind object;
  #L48df92.  if v1 != 0 then goto L48df9c;
  #L48df96.  v3:= `@@x2.v0.r` @type ^`x2.v0` @kind object;
  #L48df9a.  goto L48dfa4;
  #L48df9c.  call temp:= `n`(v1) @signature `Lv1/x1;.n:()Lx2/v0;` @kind virtual;
  #L48dfa2.  v3:= temp @kind object;
  #L48dfa4.  if v1 != 0 then goto L48dfae;
  #L48dfa8.  v4:= v0.`v1.f1.s` @type ^`q3.b0` @kind object;
  #L48dfac.  goto L48dfb6;
  #L48dfae.  call temp:= `o`(v1) @signature `Lv1/x1;.o:()Lq3/b0;` @kind virtual;
  #L48dfb4.  v4:= temp @kind object;
  #L48dfb6.  v7:= v4.`q3.b0.c` @type ^`q3.s`[] @kind object;
  #L48dfba.  call temp:= `w`(v14, v7) @signature `Lv1/f1;.w:([Lq3/s;)Lm5/q;` @kind direct;
  #L48dfc0.  v7:= temp @kind object;
  #L48dfc2.  if v1 == 0 then goto L48dfe2;
  #L48dfc6.  v8:= v1.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48dfca.  v9:= v8.`v1.y1.c` @type ^`long` @kind wide;
  #L48dfce.  v11:= lcmp(v9, v5);
  #L48dfd2.  if v11 == 0 then goto L48dfe2;
  #L48dfd6.  call temp:= `a`(v8, v5) @signature `Lv1/y1;.a:(J)Lv1/y1;` @kind virtual;
  #L48dfdc.  v8:= temp @kind object;
  #L48dfde.  v1.`v1.x1.f` @type ^`v1.y1` := v8 @kind object;
  #L48dfe2.  v11:= v3 @kind object;
  #L48dfe4.  v12:= v4 @kind object;
  #L48dfe6.  v13:= v7 @kind object;
  #L48dfe8.  goto L48e01c;
  #L48dfea.  v7:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48dfee.  v7:= v7.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48dff2.  call temp:= `equals`(v15, v7) @signature `Lx2/s;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48dff8.  v7:= temp;
  #L48dffa.  if v7 != 0 then goto L48e016;
  #L48dffe.  v1:= `@@x2.v0.r` @type ^`x2.v0` @kind object;
  #L48e002.  v3:= v0.`v1.f1.s` @type ^`q3.b0` @kind object;
  #L48e006.  call temp:= `a0`() @signature `Lm5/q;.a0:()Lm5/q;` @kind static;
  #L48e00c.  v4:= temp @kind object;
  #L48e00e.  v11:= v1 @kind object;
  #L48e010.  v12:= v3 @kind object;
  #L48e012.  v13:= v4 @kind object;
  #L48e014.  goto L48e01c;
  #L48e016.  v13:= v1 @kind object;
  #L48e018.  v11:= v3 @kind object;
  #L48e01a.  v12:= v4 @kind object;
  #L48e01c.  if v22 == 0 then goto L48e02e;
  #L48e020.  v1:= v0.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L48e024.  v3:= v23;
  #L48e028.  call `e`(v1, v3) @signature `Lv1/f1$e;.e:(I)V` @kind virtual;
  #L48e02e.  v1:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e032.  call temp:= `D`(v14) @signature `Lv1/f1;.D:()J` @kind direct;
  #L48e038.  v9:= temp @kind wide;
  #L48e03a.  v2:= v15 @kind object;
  #L48e03c.  v3:= v16 @kind wide;
  #L48e040.  v5:= v18 @kind wide;
  #L48e044.  v7:= v20 @kind wide;
  #L48e048.  call temp:= `c`(v1, v2, v3, v5, v7, v9, v11, v12, v13) @signature `Lv1/i2;.c:(Lx2/u$b;JJJJLx2/v0;Lq3/b0;Ljava/util/List;)Lv1/i2;` @kind virtual;
  #L48e04e.  v1:= temp @kind object;
  #L48e050.  return v1 @kind object;
}
procedure `void` `M0`(`v1.f1` v5 @kind this, `v1.f1$b` v6 @kind object) @signature `Lv1/f1;.M0:(Lv1/f1$b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4905c0.  v0:= v5.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L4905c4.  v1:= 1I;
  #L4905c6.  call `b`(v0, v1) @signature `Lv1/f1$e;.b:(I)V` @kind virtual;
  #L4905cc.  call temp:= `a`(v6) @signature `Lv1/f1$b;.a:(Lv1/f1$b;)I` @kind static;
  #L4905d2.  v0:= temp;
  #L4905d4.  v1:= -1I;
  #L4905d6.  if v0 == v1 then goto L490612;
  #L4905da.  v0:= new `v1.f1$h`;
  #L4905de.  v1:= new `v1.n2`;
  #L4905e2.  call temp:= `b`(v6) @signature `Lv1/f1$b;.b:(Lv1/f1$b;)Ljava/util/List;` @kind static;
  #L4905e8.  v2:= temp @kind object;
  #L4905ea.  call temp:= `c`(v6) @signature `Lv1/f1$b;.c:(Lv1/f1$b;)Lx2/p0;` @kind static;
  #L4905f0.  v3:= temp @kind object;
  #L4905f2.  call `<init>`(v1, v2, v3) @signature `Lv1/n2;.<init>:(Ljava/util/Collection;Lx2/p0;)V` @kind direct;
  #L4905f8.  call temp:= `a`(v6) @signature `Lv1/f1$b;.a:(Lv1/f1$b;)I` @kind static;
  #L4905fe.  v2:= temp;
  #L490600.  call temp:= `d`(v6) @signature `Lv1/f1$b;.d:(Lv1/f1$b;)J` @kind static;
  #L490606.  v3:= temp @kind wide;
  #L490608.  call `<init>`(v0, v1, v2, v3) @signature `Lv1/f1$h;.<init>:(Lv1/d3;IJ)V` @kind direct;
  #L49060e.  v5.`v1.f1.Y` @type ^`v1.f1$h` := v0 @kind object;
  #L490612.  v0:= v5.`v1.f1.H` @type ^`v1.d2` @kind object;
  #L490616.  call temp:= `b`(v6) @signature `Lv1/f1$b;.b:(Lv1/f1$b;)Ljava/util/List;` @kind static;
  #L49061c.  v1:= temp @kind object;
  #L49061e.  call temp:= `c`(v6) @signature `Lv1/f1$b;.c:(Lv1/f1$b;)Lx2/p0;` @kind static;
  #L490624.  v6:= temp @kind object;
  #L490626.  call temp:= `C`(v0, v1, v6) @signature `Lv1/d2;.C:(Ljava/util/List;Lx2/p0;)Lv1/d3;` @kind virtual;
  #L49062c.  v6:= temp @kind object;
  #L49062e.  v0:= 0I;
  #L490630.  call `I`(v5, v6, v0) @signature `Lv1/f1;.I:(Lv1/d3;Z)V` @kind direct;
  #L490636.  return @kind void;
}
procedure `boolean` `N`(`v1.f1` v3 @kind this, `v1.r2` v4 @kind object, `v1.x1` v5 @kind object) @signature `Lv1/f1;.N:(Lv1/r2;Lv1/x1;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L48ce4c.  call temp:= `j`(v5) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L48ce52.  v0:= temp @kind object;
  #L48ce54.  v5:= v5.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48ce58.  v5:= v5.`v1.y1.f` @type ^`boolean` @kind boolean;
  #L48ce5c.  if v5 == 0 then goto L48ce94;
  #L48ce60.  v5:= v0.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L48ce64.  if v5 == 0 then goto L48ce94;
  #L48ce68.  v5:= instanceof @variable v4 @type ^`g3.n` @kind boolean;
  #L48ce6c.  if v5 != 0 then goto L48ce90;
  #L48ce70.  v5:= instanceof @variable v4 @type ^`n2.g` @kind boolean;
  #L48ce74.  if v5 != 0 then goto L48ce90;
  #L48ce78.  call temp:= `s`(v4) @signature `Lv1/r2;.s:()J` @kind interface;
  #L48ce7e.  v4:= temp @kind wide;
  #L48ce80.  call temp:= `m`(v0) @signature `Lv1/x1;.m:()J` @kind virtual;
  #L48ce86.  v0:= temp @kind wide;
  #L48ce88.  v2:= lcmp(v4, v0);
  #L48ce8c.  if v2 < 0 then goto L48ce94;
  #L48ce90.  v4:= 1I;
  #L48ce92.  goto L48ce96;
  #L48ce94.  v4:= 0I;
  #L48ce96.  return v4;
}
procedure `boolean` `O`(`v1.f1` v6 @kind this) @signature `Lv1/f1;.O:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L48cea8.  v0:= v6.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48ceac.  call temp:= `q`(v0) @signature `Lv1/a2;.q:()Lv1/x1;` @kind virtual;
  #L48ceb2.  v0:= temp @kind object;
  #L48ceb4.  v1:= v0.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L48ceb8.  v2:= 0I;
  #L48ceba.  if v1 != 0 then goto L48cec0;
  #L48cebe.  return v2;
  #L48cec0.  v1:= 0I;
  #L48cec2.  v3:= v6.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48cec6.  v4:= length @variable v3;
  #L48cec8.  if v1 >= v4 then goto L48cf0a;
  #L48cecc.  v3:= v3[v1] @kind object;
  #L48ced0.  v4:= v0.`v1.x1.c` @type ^`x2.n0`[] @kind object;
  #L48ced4.  v4:= v4[v1] @kind object;
  #L48ced8.  call temp:= `g`(v3) @signature `Lv1/r2;.g:()Lx2/n0;` @kind interface;
  #L48cede.  v5:= temp @kind object;
  #L48cee0.  if v5 != v4 then goto L48cf08;
  #L48cee4.  if v4 == 0 then goto L48cf02;
  #L48cee8.  call temp:= `l`(v3) @signature `Lv1/r2;.l:()Z` @kind interface;
  #L48ceee.  v4:= temp;
  #L48cef0.  if v4 != 0 then goto L48cf02;
  #L48cef4.  call temp:= `N`(v6, v3, v0) @signature `Lv1/f1;.N:(Lv1/r2;Lv1/x1;)Z` @kind direct;
  #L48cefa.  v3:= temp;
  #L48cefc.  if v3 != 0 then goto L48cf02;
  #L48cf00.  goto L48cf08;
  #L48cf02.  v1:= v1 + 1;
  #L48cf06.  goto L48cec2;
  #L48cf08.  return v2;
  #L48cf0a.  v0:= 1I;
  #L48cf0c.  return v0;
}
procedure `void` `O0`(`v1.f1` v1 @kind this, `boolean` v2 ) @signature `Lv1/f1;.O0:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L490688.  v0:= v1.`v1.f1.W` @type ^`boolean` @kind boolean;
  #L49068c.  if v2 != v0 then goto L490692;
  #L490690.  return @kind void;
  #L490692.  v1.`v1.f1.W` @type ^`boolean` := v2 @kind boolean;
  #L490696.  if v2 != 0 then goto L4906b2;
  #L49069a.  v2:= v1.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L49069e.  v2:= v2.`v1.i2.o` @type ^`boolean` @kind boolean;
  #L4906a2.  if v2 == 0 then goto L4906b2;
  #L4906a6.  v2:= v1.`v1.f1.v` @type ^`s3.m` @kind object;
  #L4906aa.  v0:= 2I;
  #L4906ac.  call temp:= `c`(v2, v0) @signature `Ls3/m;.c:(I)Z` @kind interface;
  #L4906b2.  return @kind void;
}
procedure `boolean` `P`(`boolean` v1 , `x2.u$b` v2 @kind object, `long` v3 , `x2.u$b` v5 @kind object, `v1.d3$b` v6 @kind object, `long` v7 ) @signature `Lv1/f1;.P:(ZLx2/u$b;JLx2/u$b;Lv1/d3$b;J)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L48cf20.  v0:= 0I;
  #L48cf22.  if v1 != 0 then goto L48cfb0;
  #L48cf26.  v1:= lcmp(v3, v7);
  #L48cf2a.  if v1 != 0 then goto L48cfb0;
  #L48cf2e.  v1:= v2.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48cf32.  v3:= v5.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48cf36.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48cf3c.  v1:= temp;
  #L48cf3e.  if v1 != 0 then goto L48cf44;
  #L48cf42.  goto L48cfb0;
  #L48cf44.  call temp:= `b`(v2) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L48cf4a.  v1:= temp;
  #L48cf4c.  v3:= 1I;
  #L48cf4e.  if v1 == 0 then goto L48cf92;
  #L48cf52.  v1:= v2.`x2.s.b` @type ^`int`;
  #L48cf56.  call temp:= `s`(v6, v1) @signature `Lv1/d3$b;.s:(I)Z` @kind virtual;
  #L48cf5c.  v1:= temp;
  #L48cf5e.  if v1 == 0 then goto L48cf92;
  #L48cf62.  v1:= v2.`x2.s.b` @type ^`int`;
  #L48cf66.  v4:= v2.`x2.s.c` @type ^`int`;
  #L48cf6a.  call temp:= `j`(v6, v1, v4) @signature `Lv1/d3$b;.j:(II)I` @kind virtual;
  #L48cf70.  v1:= temp;
  #L48cf72.  v4:= 4I;
  #L48cf74.  if v1 == v4 then goto L48cf90;
  #L48cf78.  v1:= v2.`x2.s.b` @type ^`int`;
  #L48cf7c.  v2:= v2.`x2.s.c` @type ^`int`;
  #L48cf80.  call temp:= `j`(v6, v1, v2) @signature `Lv1/d3$b;.j:(II)I` @kind virtual;
  #L48cf86.  v1:= temp;
  #L48cf88.  v2:= 2I;
  #L48cf8a.  if v1 == v2 then goto L48cf90;
  #L48cf8e.  v0:= 1I;
  #L48cf90.  return v0;
  #L48cf92.  call temp:= `b`(v5) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L48cf98.  v1:= temp;
  #L48cf9a.  if v1 == 0 then goto L48cfb0;
  #L48cf9e.  v1:= v5.`x2.s.b` @type ^`int`;
  #L48cfa2.  call temp:= `s`(v6, v1) @signature `Lv1/d3$b;.s:(I)Z` @kind virtual;
  #L48cfa8.  v1:= temp;
  #L48cfaa.  if v1 == 0 then goto L48cfb0;
  #L48cfae.  v0:= 1I;
  #L48cfb0.  return v0;
}
procedure `void` `P0`(`v1.f1` v1 @kind this, `boolean` v2 ) @signature `Lv1/f1;.P0:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4906c4.  v1.`v1.f1.O` @type ^`boolean` := v2 @kind boolean;
  #L4906c8.  call `s0`(v1) @signature `Lv1/f1;.s0:()V` @kind direct;
  #L4906ce.  v2:= v1.`v1.f1.P` @type ^`boolean` @kind boolean;
  #L4906d2.  if v2 == 0 then goto L490702;
  #L4906d6.  v2:= v1.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L4906da.  call temp:= `q`(v2) @signature `Lv1/a2;.q:()Lv1/x1;` @kind virtual;
  #L4906e0.  v2:= temp @kind object;
  #L4906e2.  v0:= v1.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L4906e6.  call temp:= `p`(v0) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L4906ec.  v0:= temp @kind object;
  #L4906ee.  if v2 == v0 then goto L490702;
  #L4906f2.  v2:= 1I;
  #L4906f4.  call `C0`(v1, v2) @signature `Lv1/f1;.C0:(Z)V` @kind direct;
  #L4906fa.  v2:= 0I;
  #L4906fc.  call `H`(v1, v2) @signature `Lv1/f1;.H:(Z)V` @kind direct;
  #L490702.  return @kind void;
}
procedure `boolean` `Q`(`v1.f1` v6 @kind this) @signature `Lv1/f1;.Q:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L48cfc4.  v0:= v6.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48cfc8.  call temp:= `j`(v0) @signature `Lv1/a2;.j:()Lv1/x1;` @kind virtual;
  #L48cfce.  v0:= temp @kind object;
  #L48cfd0.  v1:= 0I;
  #L48cfd2.  if v0 != 0 then goto L48cfd8;
  #L48cfd6.  return v1;
  #L48cfd8.  call temp:= `k`(v0) @signature `Lv1/x1;.k:()J` @kind virtual;
  #L48cfde.  v2:= temp @kind wide;
  #L48cfe0.  v4:= -9223372036854775808L;
  #L48cfe4.  v0:= lcmp(v2, v4);
  #L48cfe8.  if v0 != 0 then goto L48cfee;
  #L48cfec.  return v1;
  #L48cfee.  v0:= 1I;
  #L48cff0.  return v0;
}
procedure `boolean` `R`(`v1.r2` v0 @kind object) @signature `Lv1/f1;.R:(Lv1/r2;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L48d004.  call temp:= `getState`(v0) @signature `Lv1/r2;.getState:()I` @kind interface;
  #L48d00a.  v0:= temp;
  #L48d00c.  if v0 == 0 then goto L48d014;
  #L48d010.  v0:= 1I;
  #L48d012.  goto L48d016;
  #L48d014.  v0:= 0I;
  #L48d016.  return v0;
}
procedure `void` `R0`(`v1.f1` v1 @kind this, `boolean` v2 , `int` v3 , `boolean` v4 , `int` v5 ) @signature `Lv1/f1;.R0:(ZIZI)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L49073c.  v0:= v1.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L490740.  call `b`(v0, v4) @signature `Lv1/f1$e;.b:(I)V` @kind virtual;
  #L490746.  v4:= v1.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L49074a.  call `c`(v4, v5) @signature `Lv1/f1$e;.c:(I)V` @kind virtual;
  #L490750.  v4:= v1.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490754.  call temp:= `d`(v4, v2, v3) @signature `Lv1/i2;.d:(ZI)Lv1/i2;` @kind virtual;
  #L49075a.  v3:= temp @kind object;
  #L49075c.  v1.`v1.f1.L` @type ^`v1.i2` := v3 @kind object;
  #L490760.  v3:= 0I;
  #L490762.  v1.`v1.f1.Q` @type ^`boolean` := v3 @kind boolean;
  #L490766.  call `g0`(v1, v2) @signature `Lv1/f1;.g0:(Z)V` @kind direct;
  #L49076c.  call temp:= `c1`(v1) @signature `Lv1/f1;.c1:()Z` @kind direct;
  #L490772.  v2:= temp;
  #L490774.  if v2 != 0 then goto L490786;
  #L490778.  call `i1`(v1) @signature `Lv1/f1;.i1:()V` @kind direct;
  #L49077e.  call `m1`(v1) @signature `Lv1/f1;.m1:()V` @kind direct;
  #L490784.  goto L4907ae;
  #L490786.  v2:= v1.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L49078a.  v2:= v2.`v1.i2.e` @type ^`int`;
  #L49078e.  v3:= 3I;
  #L490790.  v4:= 2I;
  #L490792.  if v2 != v3 then goto L4907a8;
  #L490796.  call `f1`(v1) @signature `Lv1/f1;.f1:()V` @kind direct;
  #L49079c.  v2:= v1.`v1.f1.v` @type ^`s3.m` @kind object;
  #L4907a0.  call temp:= `c`(v2, v4) @signature `Ls3/m;.c:(I)Z` @kind interface;
  #L4907a6.  goto L4907ae;
  #L4907a8.  if v2 != v4 then goto L4907ae;
  #L4907ac.  goto L49079c;
  #L4907ae.  return @kind void;
}
procedure `boolean` `S`(`v1.f1` v5 @kind this) @signature `Lv1/f1;.S:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48d028.  v0:= v5.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d02c.  call temp:= `p`(v0) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48d032.  v0:= temp @kind object;
  #L48d034.  v1:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48d038.  v1:= v1.`v1.y1.e` @type ^`long` @kind wide;
  #L48d03c.  v0:= v0.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L48d040.  if v0 == 0 then goto L48d076;
  #L48d044.  v3:= -4.9E-324D;
  #L48d04e.  v0:= lcmp(v1, v3);
  #L48d052.  if v0 == 0 then goto L48d072;
  #L48d056.  v0:= v5.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48d05a.  v3:= v0.`v1.i2.r` @type ^`long` @kind wide;
  #L48d05e.  v0:= lcmp(v3, v1);
  #L48d062.  if v0 < 0 then goto L48d072;
  #L48d066.  call temp:= `c1`(v5) @signature `Lv1/f1;.c1:()Z` @kind direct;
  #L48d06c.  v0:= temp;
  #L48d06e.  if v0 != 0 then goto L48d076;
  #L48d072.  v0:= 1I;
  #L48d074.  goto L48d078;
  #L48d076.  v0:= 0I;
  #L48d078.  return v0;
}
procedure `boolean` `T`(`v1.i2` v2 @kind object, `v1.d3$b` v3 @kind object) @signature `Lv1/f1;.T:(Lv1/i2;Lv1/d3$b;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L48d08c.  v0:= v2.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48d090.  v2:= v2.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48d094.  call temp:= `q`(v2) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48d09a.  v1:= temp;
  #L48d09c.  if v1 != 0 then goto L48d0ba;
  #L48d0a0.  v0:= v0.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48d0a4.  call temp:= `h`(v2, v0, v3) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48d0aa.  v2:= temp @kind object;
  #L48d0ac.  v2:= v2.`v1.d3$b.t` @type ^`boolean` @kind boolean;
  #L48d0b0.  if v2 == 0 then goto L48d0b6;
  #L48d0b4.  goto L48d0ba;
  #L48d0b6.  v2:= 0I;
  #L48d0b8.  goto L48d0bc;
  #L48d0ba.  v2:= 1I;
  #L48d0bc.  return v2;
}
procedure `void` `T0`(`v1.f1` v1 @kind this, `v1.j2` v2 @kind object) @signature `Lv1/f1;.T0:(Lv1/j2;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4907e8.  v0:= v1.`v1.f1.C` @type ^`v1.k` @kind object;
  #L4907ec.  call `e`(v0, v2) @signature `Lv1/k;.e:(Lv1/j2;)V` @kind virtual;
  #L4907f2.  v2:= v1.`v1.f1.C` @type ^`v1.k` @kind object;
  #L4907f6.  call temp:= `i`(v2) @signature `Lv1/k;.i:()Lv1/j2;` @kind virtual;
  #L4907fc.  v2:= temp @kind object;
  #L4907fe.  v0:= 1I;
  #L490800.  call `L`(v1, v2, v0) @signature `Lv1/f1;.L:(Lv1/j2;Z)V` @kind direct;
  #L490806.  return @kind void;
}
procedure `java.lang.Boolean` `U`(`v1.f1` v1 @kind this) @signature `Lv1/f1;.U:()Ljava/lang/Boolean;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L48d680.  v0:= v1.`v1.f1.N` @type ^`boolean` @kind boolean;
  #L48d684.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L48d68a.  v0:= temp @kind object;
  #L48d68c.  return v0 @kind object;
}
procedure `void` `V`(`v1.f1` v2 @kind this, `v1.m2` v3 @kind object) @signature `Lv1/f1;.V:(Lv1/m2;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;

  #L48ef14.  call `n`(v2, v3) @signature `Lv1/f1;.n:(Lv1/m2;)V` @kind direct;
  #L48ef1a.  return @kind void;
  #L48ef1c.  v3:= Exception @type ^`v1.n` @kind object;
  #L48ef1e.  v0:= "ExoPlayerImplInternal" @kind object;
  #L48ef22.  v1:= "Unexpected error delivering message on external thread." @kind object;
  #L48ef26.  call `d`(v0, v1, v3) @signature `Ls3/q;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L48ef2c.  v0:= new `java.lang.RuntimeException`;
  #L48ef30.  call `<init>`(v0, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L48ef36.  throw v0;
  catch `v1.n` @[L48ef14..L48ef1a] goto L48ef1c;
}
procedure `void` `V0`(`v1.f1` v2 @kind this, `int` v3 ) @signature `Lv1/f1;.V0:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L490844.  v2.`v1.f1.S` @type ^`int` := v3;
  #L490848.  v0:= v2.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L49084c.  v1:= v2.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490850.  v1:= v1.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L490854.  call temp:= `G`(v0, v1, v3) @signature `Lv1/a2;.G:(Lv1/d3;I)Z` @kind virtual;
  #L49085a.  v3:= temp;
  #L49085c.  if v3 != 0 then goto L490868;
  #L490860.  v3:= 1I;
  #L490862.  call `C0`(v2, v3) @signature `Lv1/f1;.C0:(Z)V` @kind direct;
  #L490868.  v3:= 0I;
  #L49086a.  call `H`(v2, v3) @signature `Lv1/f1;.H:(Z)V` @kind direct;
  #L490870.  return @kind void;
}
procedure `void` `W`(`v1.f1` v3 @kind this) @signature `Lv1/f1;.W:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L48ef58.  call temp:= `b1`(v3) @signature `Lv1/f1;.b1:()Z` @kind direct;
  #L48ef5e.  v0:= temp;
  #L48ef60.  v3.`v1.f1.R` @type ^`boolean` := v0 @kind boolean;
  #L48ef64.  if v0 == 0 then goto L48ef7e;
  #L48ef68.  v0:= v3.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48ef6c.  call temp:= `j`(v0) @signature `Lv1/a2;.j:()Lv1/x1;` @kind virtual;
  #L48ef72.  v0:= temp @kind object;
  #L48ef74.  v1:= v3.`v1.f1.Z` @type ^`long` @kind wide;
  #L48ef78.  call `d`(v0, v1) @signature `Lv1/x1;.d:(J)V` @kind virtual;
  #L48ef7e.  call `j1`(v3) @signature `Lv1/f1;.j1:()V` @kind direct;
  #L48ef84.  return @kind void;
}
procedure `void` `W0`(`v1.f1` v0 @kind this, `v1.w2` v1 @kind object) @signature `Lv1/f1;.W0:(Lv1/w2;)V` @AccessFlag PRIVATE {
    temp;

  #L490884.  v0.`v1.f1.K` @type ^`v1.w2` := v1 @kind object;
  #L490888.  return @kind void;
}
procedure `void` `X`(`v1.f1` v2 @kind this) @signature `Lv1/f1;.X:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48ef98.  v0:= v2.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L48ef9c.  v1:= v2.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48efa0.  call `d`(v0, v1) @signature `Lv1/f1$e;.d:(Lv1/i2;)V` @kind virtual;
  #L48efa6.  v0:= v2.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L48efaa.  call temp:= `a`(v0) @signature `Lv1/f1$e;.a:(Lv1/f1$e;)Z` @kind static;
  #L48efb0.  v0:= temp;
  #L48efb2.  if v0 == 0 then goto L48efd6;
  #L48efb6.  v0:= v2.`v1.f1.F` @type ^`v1.f1$f` @kind object;
  #L48efba.  v1:= v2.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L48efbe.  call `a`(v0, v1) @signature `Lv1/f1$f;.a:(Lv1/f1$e;)V` @kind interface;
  #L48efc4.  v0:= new `v1.f1$e`;
  #L48efc8.  v1:= v2.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48efcc.  call `<init>`(v0, v1) @signature `Lv1/f1$e;.<init>:(Lv1/i2;)V` @kind direct;
  #L48efd2.  v2.`v1.f1.M` @type ^`v1.f1$e` := v0 @kind object;
  #L48efd6.  return @kind void;
}
procedure `void` `X0`(`v1.f1` v2 @kind this, `boolean` v3 ) @signature `Lv1/f1;.X0:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L49089c.  v2.`v1.f1.T` @type ^`boolean` := v3 @kind boolean;
  #L4908a0.  v0:= v2.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L4908a4.  v1:= v2.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L4908a8.  v1:= v1.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L4908ac.  call temp:= `H`(v0, v1, v3) @signature `Lv1/a2;.H:(Lv1/d3;Z)Z` @kind virtual;
  #L4908b2.  v3:= temp;
  #L4908b4.  if v3 != 0 then goto L4908c0;
  #L4908b8.  v3:= 1I;
  #L4908ba.  call `C0`(v2, v3) @signature `Lv1/f1;.C0:(Z)V` @kind direct;
  #L4908c0.  v3:= 0I;
  #L4908c2.  call `H`(v2, v3) @signature `Lv1/f1;.H:(Z)V` @kind direct;
  #L4908c8.  return @kind void;
}
procedure `void` `Y`(`v1.f1` v7 @kind this, `long` v8 , `long` v10 ) @signature `Lv1/f1;.Y:(JJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L48efe8.  v0:= v7.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48efec.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L48eff2.  v0:= temp;
  #L48eff4.  if v0 != 0 then goto L48f1b2;
  #L48eff8.  v0:= v7.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48effc.  v0:= v0.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48f000.  call temp:= `b`(v0) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L48f006.  v0:= temp;
  #L48f008.  if v0 == 0 then goto L48f010;
  #L48f00c.  goto L48f1b2;
  #L48f010.  v0:= v7.`v1.f1.b0` @type ^`boolean` @kind boolean;
  #L48f014.  if v0 == 0 then goto L48f024;
  #L48f018.  v0:= 1L;
  #L48f01c.  v8:= v8 - v0 @kind long;
  #L48f01e.  v0:= 0I;
  #L48f020.  v7.`v1.f1.b0` @type ^`boolean` := v0 @kind boolean;
  #L48f024.  v0:= v7.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48f028.  v1:= v0.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48f02c.  v0:= v0.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48f030.  v0:= v0.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48f034.  call temp:= `b`(v1, v0) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L48f03a.  v0:= temp;
  #L48f03c.  v1:= v7.`v1.f1.a0` @type ^`int`;
  #L48f040.  v2:= v7.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48f044.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L48f04a.  v2:= temp;
  #L48f04c.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L48f052.  v1:= temp;
  #L48f054.  v2:= 0I;
  #L48f056.  if v1 <= 0 then goto L48f070;
  #L48f05a.  v3:= v7.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48f05e.  v4:= v1 + -1;
  #L48f062.  call temp:= `get`(v3, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L48f068.  v3:= temp @kind object;
  #L48f06a.  v3:= (`v1.f1$d`) v3 @kind object;
  #L48f06e.  goto L48f072;
  #L48f070.  v3:= v2 @kind object;
  #L48f072.  if v3 == 0 then goto L48f098;
  #L48f076.  v4:= v3.`v1.f1$d.p` @type ^`int`;
  #L48f07a.  if v4 > v0 then goto L48f08e;
  #L48f07e.  if v4 != v0 then goto L48f098;
  #L48f082.  v3:= v3.`v1.f1$d.q` @type ^`long` @kind wide;
  #L48f086.  v5:= lcmp(v3, v8);
  #L48f08a.  if v5 <= 0 then goto L48f098;
  #L48f08e.  v1:= v1 + -1;
  #L48f092.  if v1 <= 0 then goto L48f070;
  #L48f096.  goto L48f05a;
  #L48f098.  v3:= v7.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48f09c.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L48f0a2.  v3:= temp;
  #L48f0a4.  if v1 >= v3 then goto L48f0ba;
  #L48f0a8.  v3:= v7.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48f0ac.  call temp:= `get`(v3, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L48f0b2.  v3:= temp @kind object;
  #L48f0b4.  v3:= (`v1.f1$d`) v3 @kind object;
  #L48f0b8.  goto L48f0bc;
  #L48f0ba.  v3:= v2 @kind object;
  #L48f0bc.  if v3 == 0 then goto L48f0f6;
  #L48f0c0.  v4:= v3.`v1.f1$d.r` @type ^`java.lang.Object` @kind object;
  #L48f0c4.  if v4 == 0 then goto L48f0f6;
  #L48f0c8.  v4:= v3.`v1.f1$d.p` @type ^`int`;
  #L48f0cc.  if v4 < v0 then goto L48f0e0;
  #L48f0d0.  if v4 != v0 then goto L48f0f6;
  #L48f0d4.  v4:= v3.`v1.f1$d.q` @type ^`long` @kind wide;
  #L48f0d8.  v6:= lcmp(v4, v8);
  #L48f0dc.  if v6 > 0 then goto L48f0f6;
  #L48f0e0.  v1:= v1 + 1;
  #L48f0e4.  v3:= v7.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48f0e8.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L48f0ee.  v3:= temp;
  #L48f0f0.  if v1 >= v3 then goto L48f0ba;
  #L48f0f4.  goto L48f0a8;
  #L48f0f6.  if v3 == 0 then goto L48f1ae;
  #L48f0fa.  v4:= v3.`v1.f1$d.r` @type ^`java.lang.Object` @kind object;
  #L48f0fe.  if v4 == 0 then goto L48f1ae;
  #L48f102.  v4:= v3.`v1.f1$d.p` @type ^`int`;
  #L48f106.  if v4 != v0 then goto L48f1ae;
  #L48f10a.  v4:= v3.`v1.f1$d.q` @type ^`long` @kind wide;
  #L48f10e.  v6:= lcmp(v4, v8);
  #L48f112.  if v6 <= 0 then goto L48f1ae;
  #L48f116.  v6:= lcmp(v4, v10);
  #L48f11a.  if v6 > 0 then goto L48f1ae;
  #L48f11e.  v4:= v3.`v1.f1$d.o` @type ^`v1.m2` @kind object;
  #L48f122.  call `H0`(v7, v4) @signature `Lv1/f1;.H0:(Lv1/m2;)V` @kind direct;
  #L48f128.  v4:= v3.`v1.f1$d.o` @type ^`v1.m2` @kind object;
  #L48f12c.  call temp:= `b`(v4) @signature `Lv1/m2;.b:()Z` @kind virtual;
  #L48f132.  v4:= temp;
  #L48f134.  if v4 != 0 then goto L48f150;
  #L48f138.  v3:= v3.`v1.f1$d.o` @type ^`v1.m2` @kind object;
  #L48f13c.  call temp:= `j`(v3) @signature `Lv1/m2;.j:()Z` @kind virtual;
  #L48f142.  v3:= temp;
  #L48f144.  if v3 == 0 then goto L48f14a;
  #L48f148.  goto L48f150;
  #L48f14a.  v1:= v1 + 1;
  #L48f14e.  goto L48f15a;
  #L48f150.  v3:= v7.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48f154.  call temp:= `remove`(v3, v1) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L48f15a.  v3:= v7.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48f15e.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L48f164.  v3:= temp;
  #L48f166.  if v1 >= v3 then goto L48f17c;
  #L48f16a.  v3:= v7.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48f16e.  call temp:= `get`(v3, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L48f174.  v3:= temp @kind object;
  #L48f176.  v3:= (`v1.f1$d`) v3 @kind object;
  #L48f17a.  goto L48f0f6;
  #L48f17c.  v3:= v2 @kind object;
  #L48f17e.  goto L48f0f6;
  #L48f180.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48f182.  v9:= v3.`v1.f1$d.o` @type ^`v1.m2` @kind object;
  #L48f186.  call temp:= `b`(v9) @signature `Lv1/m2;.b:()Z` @kind virtual;
  #L48f18c.  v9:= temp;
  #L48f18e.  if v9 != 0 then goto L48f1a2;
  #L48f192.  v9:= v3.`v1.f1$d.o` @type ^`v1.m2` @kind object;
  #L48f196.  call temp:= `j`(v9) @signature `Lv1/m2;.j:()Z` @kind virtual;
  #L48f19c.  v9:= temp;
  #L48f19e.  if v9 == 0 then goto L48f1ac;
  #L48f1a2.  v9:= v7.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48f1a6.  call temp:= `remove`(v9, v1) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L48f1ac.  throw v8;
  #L48f1ae.  v7.`v1.f1.a0` @type ^`int` := v1;
  #L48f1b2.  return @kind void;
  catch `java.lang.Throwable` @[L48f11e..L48f128] goto L48f180;
}
procedure `void` `Y0`(`v1.f1` v2 @kind this, `x2.p0` v3 @kind object) @signature `Lv1/f1;.Y0:(Lx2/p0;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4908dc.  v0:= v2.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L4908e0.  v1:= 1I;
  #L4908e2.  call `b`(v0, v1) @signature `Lv1/f1$e;.b:(I)V` @kind virtual;
  #L4908e8.  v0:= v2.`v1.f1.H` @type ^`v1.d2` @kind object;
  #L4908ec.  call temp:= `D`(v0, v3) @signature `Lv1/d2;.D:(Lx2/p0;)Lv1/d3;` @kind virtual;
  #L4908f2.  v3:= temp @kind object;
  #L4908f4.  v0:= 0I;
  #L4908f6.  call `I`(v2, v3, v0) @signature `Lv1/f1;.I:(Lv1/d3;Z)V` @kind direct;
  #L4908fc.  return @kind void;
}
procedure `void` `Z`(`v1.f1` v11 @kind this) @signature `Lv1/f1;.Z:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L48f1d0.  v0:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f1d4.  v1:= v11.`v1.f1.Z` @type ^`long` @kind wide;
  #L48f1d8.  call `y`(v0, v1) @signature `Lv1/a2;.y:(J)V` @kind virtual;
  #L48f1de.  v0:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f1e2.  call temp:= `D`(v0) @signature `Lv1/a2;.D:()Z` @kind virtual;
  #L48f1e8.  v0:= temp;
  #L48f1ea.  if v0 == 0 then goto L48f260;
  #L48f1ee.  v0:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f1f2.  v1:= v11.`v1.f1.Z` @type ^`long` @kind wide;
  #L48f1f6.  v3:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48f1fa.  call temp:= `o`(v0, v1, v3) @signature `Lv1/a2;.o:(JLv1/i2;)Lv1/y1;` @kind virtual;
  #L48f200.  v0:= temp @kind object;
  #L48f202.  if v0 == 0 then goto L48f260;
  #L48f206.  v4:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f20a.  v5:= v11.`v1.f1.q` @type ^`v1.t2`[] @kind object;
  #L48f20e.  v6:= v11.`v1.f1.r` @type ^`q3.a0` @kind object;
  #L48f212.  v1:= v11.`v1.f1.t` @type ^`v1.p1` @kind object;
  #L48f216.  call temp:= `g`(v1) @signature `Lv1/p1;.g:()Lr3/b;` @kind interface;
  #L48f21c.  v7:= temp @kind object;
  #L48f21e.  v8:= v11.`v1.f1.H` @type ^`v1.d2` @kind object;
  #L48f222.  v10:= v11.`v1.f1.s` @type ^`q3.b0` @kind object;
  #L48f226.  v9:= v0 @kind object;
  #L48f228.  call temp:= `g`(v4, v5, v6, v7, v8, v9, v10) @signature `Lv1/a2;.g:([Lv1/t2;Lq3/a0;Lr3/b;Lv1/d2;Lv1/y1;Lq3/b0;)Lv1/x1;` @kind virtual;
  #L48f22e.  v1:= temp @kind object;
  #L48f230.  v2:= v1.`v1.x1.a` @type ^`x2.r` @kind object;
  #L48f234.  v3:= v0.`v1.y1.b` @type ^`long` @kind wide;
  #L48f238.  call `q`(v2, v11, v3) @signature `Lx2/r;.q:(Lx2/r$a;J)V` @kind interface;
  #L48f23e.  v2:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f242.  call temp:= `p`(v2) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48f248.  v2:= temp @kind object;
  #L48f24a.  if v2 != v1 then goto L48f258;
  #L48f24e.  v0:= v0.`v1.y1.b` @type ^`long` @kind wide;
  #L48f252.  call `t0`(v11, v0) @signature `Lv1/f1;.t0:(J)V` @kind direct;
  #L48f258.  v0:= 0I;
  #L48f25a.  call `H`(v11, v0) @signature `Lv1/f1;.H:(Z)V` @kind direct;
  #L48f260.  v0:= v11.`v1.f1.R` @type ^`boolean` @kind boolean;
  #L48f264.  if v0 == 0 then goto L48f27c;
  #L48f268.  call temp:= `Q`(v11) @signature `Lv1/f1;.Q:()Z` @kind direct;
  #L48f26e.  v0:= temp;
  #L48f270.  v11.`v1.f1.R` @type ^`boolean` := v0 @kind boolean;
  #L48f274.  call `j1`(v11) @signature `Lv1/f1;.j1:()V` @kind direct;
  #L48f27a.  goto L48f282;
  #L48f27c.  call `W`(v11) @signature `Lv1/f1;.W:()V` @kind direct;
  #L48f282.  return @kind void;
}
procedure `void` `Z0`(`v1.f1` v3 @kind this, `int` v4 ) @signature `Lv1/f1;.Z0:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L490910.  v0:= v3.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490914.  v1:= v0.`v1.i2.e` @type ^`int`;
  #L490918.  if v1 == v4 then goto L49093c;
  #L49091c.  v1:= 2I;
  #L49091e.  if v4 == v1 then goto L490930;
  #L490922.  v1:= -4.9E-324D;
  #L49092c.  v3.`v1.f1.d0` @type ^`long` := v1 @kind wide;
  #L490930.  call temp:= `g`(v0, v4) @signature `Lv1/i2;.g:(I)Lv1/i2;` @kind virtual;
  #L490936.  v4:= temp @kind object;
  #L490938.  v3.`v1.f1.L` @type ^`v1.i2` := v4 @kind object;
  #L49093c.  return @kind void;
}
procedure `void` `a0`(`v1.f1` v14 @kind this) @signature `Lv1/f1;.a0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L48f294.  v0:= 0I;
  #L48f296.  v1:= 1I;
  #L48f298.  v2:= 0I;
  #L48f29a.  call temp:= `a1`(v14) @signature `Lv1/f1;.a1:()Z` @kind direct;
  #L48f2a0.  v3:= temp;
  #L48f2a2.  if v3 == 0 then goto L48f356;
  #L48f2a6.  if v2 == 0 then goto L48f2b0;
  #L48f2aa.  call `X`(v14) @signature `Lv1/f1;.X:()V` @kind direct;
  #L48f2b0.  v2:= v14.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f2b4.  call temp:= `b`(v2) @signature `Lv1/a2;.b:()Lv1/x1;` @kind virtual;
  #L48f2ba.  v2:= temp @kind object;
  #L48f2bc.  call temp:= `e`(v2) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L48f2c2.  v2:= temp @kind object;
  #L48f2c4.  v2:= (`v1.x1`) v2 @kind object;
  #L48f2c8.  v3:= v14.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48f2cc.  v3:= v3.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48f2d0.  v3:= v3.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48f2d4.  v4:= v2.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48f2d8.  v4:= v4.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L48f2dc.  v4:= v4.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48f2e0.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48f2e6.  v3:= temp;
  #L48f2e8.  if v3 == 0 then goto L48f31e;
  #L48f2ec.  v3:= v14.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48f2f0.  v3:= v3.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48f2f4.  v4:= v3.`x2.s.b` @type ^`int`;
  #L48f2f8.  v5:= -1I;
  #L48f2fa.  if v4 != v5 then goto L48f31e;
  #L48f2fe.  v4:= v2.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48f302.  v4:= v4.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L48f306.  v6:= v4.`x2.s.b` @type ^`int`;
  #L48f30a.  if v6 != v5 then goto L48f31e;
  #L48f30e.  v3:= v3.`x2.s.e` @type ^`int`;
  #L48f312.  v4:= v4.`x2.s.e` @type ^`int`;
  #L48f316.  if v3 == v4 then goto L48f31e;
  #L48f31a.  v3:= 1I;
  #L48f31c.  goto L48f320;
  #L48f31e.  v3:= 0I;
  #L48f320.  v2:= v2.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48f324.  v5:= v2.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L48f328.  v10:= v2.`v1.y1.b` @type ^`long` @kind wide;
  #L48f32c.  v8:= v2.`v1.y1.c` @type ^`long` @kind wide;
  #L48f330.  v12:= v3 ^~ 1;
  #L48f334.  v13:= 0I;
  #L48f336.  v4:= v14 @kind object;
  #L48f338.  v6:= v10 @kind wide;
  #L48f33a.  call temp:= `M`(v4, v5, v6, v8, v10, v12, v13) @signature `Lv1/f1;.M:(Lx2/u$b;JJJZI)Lv1/i2;` @kind direct;
  #L48f340.  v2:= temp @kind object;
  #L48f342.  v14.`v1.f1.L` @type ^`v1.i2` := v2 @kind object;
  #L48f346.  call `s0`(v14) @signature `Lv1/f1;.s0:()V` @kind direct;
  #L48f34c.  call `m1`(v14) @signature `Lv1/f1;.m1:()V` @kind direct;
  #L48f352.  v2:= 1I;
  #L48f354.  goto L48f29a;
  #L48f356.  return @kind void;
}
procedure `boolean` `a1`(`v1.f1` v7 @kind this) @signature `Lv1/f1;.a1:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L48d3c0.  call temp:= `c1`(v7) @signature `Lv1/f1;.c1:()Z` @kind direct;
  #L48d3c6.  v0:= temp;
  #L48d3c8.  v1:= 0I;
  #L48d3ca.  if v0 != 0 then goto L48d3d0;
  #L48d3ce.  return v1;
  #L48d3d0.  v0:= v7.`v1.f1.P` @type ^`boolean` @kind boolean;
  #L48d3d4.  if v0 == 0 then goto L48d3da;
  #L48d3d8.  return v1;
  #L48d3da.  v0:= v7.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d3de.  call temp:= `p`(v0) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48d3e4.  v0:= temp @kind object;
  #L48d3e6.  if v0 != 0 then goto L48d3ec;
  #L48d3ea.  return v1;
  #L48d3ec.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L48d3f2.  v0:= temp @kind object;
  #L48d3f4.  if v0 == 0 then goto L48d416;
  #L48d3f8.  v2:= v7.`v1.f1.Z` @type ^`long` @kind wide;
  #L48d3fc.  call temp:= `m`(v0) @signature `Lv1/x1;.m:()J` @kind virtual;
  #L48d402.  v4:= temp @kind wide;
  #L48d404.  v6:= lcmp(v2, v4);
  #L48d408.  if v6 < 0 then goto L48d416;
  #L48d40c.  v0:= v0.`v1.x1.g` @type ^`boolean` @kind boolean;
  #L48d410.  if v0 == 0 then goto L48d416;
  #L48d414.  v1:= 1I;
  #L48d416.  return v1;
}
procedure `void` `b0`(`v1.f1` v15 @kind this) @signature `Lv1/f1;.b0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L48f368.  v0:= v15.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f36c.  call temp:= `q`(v0) @signature `Lv1/a2;.q:()Lv1/x1;` @kind virtual;
  #L48f372.  v0:= temp @kind object;
  #L48f374.  if v0 != 0 then goto L48f37a;
  #L48f378.  return @kind void;
  #L48f37a.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L48f380.  v1:= temp @kind object;
  #L48f382.  v2:= -4.9E-324D;
  #L48f38c.  v4:= 0I;
  #L48f38e.  if v1 == 0 then goto L48f4e0;
  #L48f392.  v1:= v15.`v1.f1.P` @type ^`boolean` @kind boolean;
  #L48f396.  if v1 == 0 then goto L48f39e;
  #L48f39a.  goto L48f4e0;
  #L48f39e.  call temp:= `O`(v15) @signature `Lv1/f1;.O:()Z` @kind direct;
  #L48f3a4.  v1:= temp;
  #L48f3a6.  if v1 != 0 then goto L48f3ac;
  #L48f3aa.  return @kind void;
  #L48f3ac.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L48f3b2.  v1:= temp @kind object;
  #L48f3b4.  v1:= v1.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L48f3b8.  if v1 != 0 then goto L48f3da;
  #L48f3bc.  v5:= v15.`v1.f1.Z` @type ^`long` @kind wide;
  #L48f3c0.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L48f3c6.  v1:= temp @kind object;
  #L48f3c8.  call temp:= `m`(v1) @signature `Lv1/x1;.m:()J` @kind virtual;
  #L48f3ce.  v7:= temp @kind wide;
  #L48f3d0.  v1:= lcmp(v5, v7);
  #L48f3d4.  if v1 >= 0 then goto L48f3da;
  #L48f3d8.  return @kind void;
  #L48f3da.  call temp:= `o`(v0) @signature `Lv1/x1;.o:()Lq3/b0;` @kind virtual;
  #L48f3e0.  v1:= temp @kind object;
  #L48f3e2.  v5:= v15.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f3e6.  call temp:= `c`(v5) @signature `Lv1/a2;.c:()Lv1/x1;` @kind virtual;
  #L48f3ec.  v5:= temp @kind object;
  #L48f3ee.  call temp:= `o`(v5) @signature `Lv1/x1;.o:()Lq3/b0;` @kind virtual;
  #L48f3f4.  v6:= temp @kind object;
  #L48f3f6.  v7:= v15.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48f3fa.  v11:= v7.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48f3fe.  v7:= v5.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48f402.  v10:= v7.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L48f406.  v0:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48f40a.  v12:= v0.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L48f40e.  v13:= -4.9E-324D;
  #L48f418.  v8:= v15 @kind object;
  #L48f41a.  v9:= v11 @kind object;
  #L48f41c.  call `n1`(v8, v9, v10, v11, v12, v13) @signature `Lv1/f1;.n1:(Lv1/d3;Lx2/u$b;Lv1/d3;Lx2/u$b;J)V` @kind direct;
  #L48f422.  v0:= v5.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L48f426.  if v0 == 0 then goto L48f44e;
  #L48f42a.  v0:= v5.`v1.x1.a` @type ^`x2.r` @kind object;
  #L48f42e.  call temp:= `l`(v0) @signature `Lx2/r;.l:()J` @kind interface;
  #L48f434.  v7:= temp @kind wide;
  #L48f436.  v0:= lcmp(v7, v2);
  #L48f43a.  if v0 == 0 then goto L48f44e;
  #L48f43e.  call temp:= `m`(v5) @signature `Lv1/x1;.m:()J` @kind virtual;
  #L48f444.  v0:= temp @kind wide;
  #L48f446.  call `J0`(v15, v0) @signature `Lv1/f1;.J0:(J)V` @kind direct;
  #L48f44c.  return @kind void;
  #L48f44e.  v0:= 0I;
  #L48f450.  v2:= v15.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48f454.  v2:= length @variable v2;
  #L48f456.  if v0 >= v2 then goto L48f4de;
  #L48f45a.  call temp:= `c`(v1, v0) @signature `Lq3/b0;.c:(I)Z` @kind virtual;
  #L48f460.  v2:= temp;
  #L48f462.  call temp:= `c`(v6, v0) @signature `Lq3/b0;.c:(I)Z` @kind virtual;
  #L48f468.  v3:= temp;
  #L48f46a.  if v2 == 0 then goto L48f4d8;
  #L48f46e.  v2:= v15.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48f472.  v2:= v2[v0] @kind object;
  #L48f476.  call temp:= `u`(v2) @signature `Lv1/r2;.u:()Z` @kind interface;
  #L48f47c.  v2:= temp;
  #L48f47e.  if v2 != 0 then goto L48f4d8;
  #L48f482.  v2:= v15.`v1.f1.q` @type ^`v1.t2`[] @kind object;
  #L48f486.  v2:= v2[v0] @kind object;
  #L48f48a.  call temp:= `j`(v2) @signature `Lv1/t2;.j:()I` @kind interface;
  #L48f490.  v2:= temp;
  #L48f492.  v7:= -2I;
  #L48f494.  if v2 != v7 then goto L48f49c;
  #L48f498.  v2:= 1I;
  #L48f49a.  goto L48f49e;
  #L48f49c.  v2:= 0I;
  #L48f49e.  v7:= v1.`q3.b0.b` @type ^`v1.u2`[] @kind object;
  #L48f4a2.  v7:= v7[v0] @kind object;
  #L48f4a6.  v8:= v6.`q3.b0.b` @type ^`v1.u2`[] @kind object;
  #L48f4aa.  v8:= v8[v0] @kind object;
  #L48f4ae.  if v3 == 0 then goto L48f4c2;
  #L48f4b2.  call temp:= `equals`(v8, v7) @signature `Lv1/u2;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48f4b8.  v3:= temp;
  #L48f4ba.  if v3 == 0 then goto L48f4c2;
  #L48f4be.  if v2 == 0 then goto L48f4d8;
  #L48f4c2.  v2:= v15.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48f4c6.  v2:= v2[v0] @kind object;
  #L48f4ca.  call temp:= `m`(v5) @signature `Lv1/x1;.m:()J` @kind virtual;
  #L48f4d0.  v7:= temp @kind wide;
  #L48f4d2.  call `K0`(v15, v2, v7) @signature `Lv1/f1;.K0:(Lv1/r2;J)V` @kind direct;
  #L48f4d8.  v0:= v0 + 1;
  #L48f4dc.  goto L48f450;
  #L48f4de.  return @kind void;
  #L48f4e0.  v1:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48f4e4.  v1:= v1.`v1.y1.i` @type ^`boolean` @kind boolean;
  #L48f4e8.  if v1 != 0 then goto L48f4f4;
  #L48f4ec.  v1:= v15.`v1.f1.P` @type ^`boolean` @kind boolean;
  #L48f4f0.  if v1 == 0 then goto L48f564;
  #L48f4f4.  v1:= v15.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48f4f8.  v5:= length @variable v1;
  #L48f4fa.  if v4 >= v5 then goto L48f564;
  #L48f4fe.  v1:= v1[v4] @kind object;
  #L48f502.  v5:= v0.`v1.x1.c` @type ^`x2.n0`[] @kind object;
  #L48f506.  v5:= v5[v4] @kind object;
  #L48f50a.  if v5 == 0 then goto L48f55e;
  #L48f50e.  call temp:= `g`(v1) @signature `Lv1/r2;.g:()Lx2/n0;` @kind interface;
  #L48f514.  v6:= temp @kind object;
  #L48f516.  if v6 != v5 then goto L48f55e;
  #L48f51a.  call temp:= `l`(v1) @signature `Lv1/r2;.l:()Z` @kind interface;
  #L48f520.  v5:= temp;
  #L48f522.  if v5 == 0 then goto L48f55e;
  #L48f526.  v5:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48f52a.  v5:= v5.`v1.y1.e` @type ^`long` @kind wide;
  #L48f52e.  v7:= lcmp(v5, v2);
  #L48f532.  if v7 == 0 then goto L48f556;
  #L48f536.  v7:= -9223372036854775808L;
  #L48f53a.  v9:= lcmp(v5, v7);
  #L48f53e.  if v9 == 0 then goto L48f556;
  #L48f542.  call temp:= `l`(v0) @signature `Lv1/x1;.l:()J` @kind virtual;
  #L48f548.  v5:= temp @kind wide;
  #L48f54a.  v7:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48f54e.  v7:= v7.`v1.y1.e` @type ^`long` @kind wide;
  #L48f552.  v5:= v5 + v7 @kind long;
  #L48f554.  goto L48f558;
  #L48f556.  v5:= v2 @kind wide;
  #L48f558.  call `K0`(v15, v1, v5) @signature `Lv1/f1;.K0:(Lv1/r2;J)V` @kind direct;
  #L48f55e.  v4:= v4 + 1;
  #L48f562.  goto L48f4f4;
  #L48f564.  return @kind void;
}
procedure `boolean` `b1`(`v1.f1` v9 @kind this) @signature `Lv1/f1;.b1:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L48d428.  call temp:= `Q`(v9) @signature `Lv1/f1;.Q:()Z` @kind direct;
  #L48d42e.  v0:= temp;
  #L48d430.  if v0 != 0 then goto L48d438;
  #L48d434.  v0:= 0I;
  #L48d436.  return v0;
  #L48d438.  v0:= v9.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d43c.  call temp:= `j`(v0) @signature `Lv1/a2;.j:()Lv1/x1;` @kind virtual;
  #L48d442.  v0:= temp @kind object;
  #L48d444.  call temp:= `k`(v0) @signature `Lv1/x1;.k:()J` @kind virtual;
  #L48d44a.  v1:= temp @kind wide;
  #L48d44c.  call temp:= `E`(v9, v1) @signature `Lv1/f1;.E:(J)J` @kind direct;
  #L48d452.  v6:= temp @kind wide;
  #L48d454.  v1:= v9.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d458.  call temp:= `p`(v1) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48d45e.  v1:= temp @kind object;
  #L48d460.  if v0 != v1 then goto L48d474;
  #L48d464.  v1:= v9.`v1.f1.Z` @type ^`long` @kind wide;
  #L48d468.  call temp:= `y`(v0, v1) @signature `Lv1/x1;.y:(J)J` @kind virtual;
  #L48d46e.  v0:= temp @kind wide;
  #L48d470.  v4:= v0 @kind wide;
  #L48d472.  goto L48d48c;
  #L48d474.  v1:= v9.`v1.f1.Z` @type ^`long` @kind wide;
  #L48d478.  call temp:= `y`(v0, v1) @signature `Lv1/x1;.y:(J)J` @kind virtual;
  #L48d47e.  v1:= temp @kind wide;
  #L48d480.  v0:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48d484.  v3:= v0.`v1.y1.b` @type ^`long` @kind wide;
  #L48d488.  v1:= v1 - v3 @kind long;
  #L48d48a.  v4:= v1 @kind wide;
  #L48d48c.  v3:= v9.`v1.f1.t` @type ^`v1.p1` @kind object;
  #L48d490.  v0:= v9.`v1.f1.C` @type ^`v1.k` @kind object;
  #L48d494.  call temp:= `i`(v0) @signature `Lv1/k;.i:()Lv1/j2;` @kind virtual;
  #L48d49a.  v0:= temp @kind object;
  #L48d49c.  v8:= v0.`v1.j2.o` @type ^`float`;
  #L48d4a0.  call temp:= `f`(v3, v4, v6, v8) @signature `Lv1/p1;.f:(JJF)Z` @kind interface;
  #L48d4a6.  v0:= temp;
  #L48d4a8.  return v0;
}
procedure `void` `c0`(`v1.f1` v2 @kind this) @signature `Lv1/f1;.c0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48f578.  v0:= v2.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f57c.  call temp:= `q`(v0) @signature `Lv1/a2;.q:()Lv1/x1;` @kind virtual;
  #L48f582.  v0:= temp @kind object;
  #L48f584.  if v0 == 0 then goto L48f5b4;
  #L48f588.  v1:= v2.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f58c.  call temp:= `p`(v1) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48f592.  v1:= temp @kind object;
  #L48f594.  if v1 == v0 then goto L48f5b4;
  #L48f598.  v0:= v0.`v1.x1.g` @type ^`boolean` @kind boolean;
  #L48f59c.  if v0 == 0 then goto L48f5a2;
  #L48f5a0.  goto L48f5b4;
  #L48f5a2.  call temp:= `p0`(v2) @signature `Lv1/f1;.p0:()Z` @kind direct;
  #L48f5a8.  v0:= temp;
  #L48f5aa.  if v0 == 0 then goto L48f5b4;
  #L48f5ae.  call `r`(v2) @signature `Lv1/f1;.r:()V` @kind direct;
  #L48f5b4.  return @kind void;
}
procedure `boolean` `c1`(`v1.f1` v2 @kind this) @signature `Lv1/f1;.c1:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48d4bc.  v0:= v2.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48d4c0.  v1:= v0.`v1.i2.l` @type ^`boolean` @kind boolean;
  #L48d4c4.  if v1 == 0 then goto L48d4d4;
  #L48d4c8.  v0:= v0.`v1.i2.m` @type ^`int`;
  #L48d4cc.  if v0 != 0 then goto L48d4d4;
  #L48d4d0.  v0:= 1I;
  #L48d4d2.  goto L48d4d6;
  #L48d4d4.  v0:= 0I;
  #L48d4d6.  return v0;
}
procedure `void` `d0`(`v1.f1` v2 @kind this) @signature `Lv1/f1;.d0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48f5c8.  v0:= v2.`v1.f1.H` @type ^`v1.d2` @kind object;
  #L48f5cc.  call temp:= `i`(v0) @signature `Lv1/d2;.i:()Lv1/d3;` @kind virtual;
  #L48f5d2.  v0:= temp @kind object;
  #L48f5d4.  v1:= 1I;
  #L48f5d6.  call `I`(v2, v0, v1) @signature `Lv1/f1;.I:(Lv1/d3;Z)V` @kind direct;
  #L48f5dc.  return @kind void;
}
procedure `boolean` `d1`(`v1.f1` v12 @kind this, `boolean` v13 ) @signature `Lv1/f1;.d1:(Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L48d4e8.  v0:= v12.`v1.f1.X` @type ^`int`;
  #L48d4ec.  if v0 != 0 then goto L48d4fa;
  #L48d4f0.  call temp:= `S`(v12) @signature `Lv1/f1;.S:()Z` @kind direct;
  #L48d4f6.  v13:= temp;
  #L48d4f8.  return v13;
  #L48d4fa.  v0:= 0I;
  #L48d4fc.  if v13 != 0 then goto L48d502;
  #L48d500.  return v0;
  #L48d502.  v13:= v12.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48d506.  v1:= v13.`v1.i2.g` @type ^`boolean` @kind boolean;
  #L48d50a.  v2:= 1I;
  #L48d50c.  if v1 != 0 then goto L48d512;
  #L48d510.  return v2;
  #L48d512.  v13:= v13.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48d516.  v1:= v12.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d51a.  call temp:= `p`(v1) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48d520.  v1:= temp @kind object;
  #L48d522.  v1:= v1.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48d526.  v1:= v1.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L48d52a.  call temp:= `e1`(v12, v13, v1) @signature `Lv1/f1;.e1:(Lv1/d3;Lx2/u$b;)Z` @kind direct;
  #L48d530.  v13:= temp;
  #L48d532.  if v13 == 0 then goto L48d544;
  #L48d536.  v13:= v12.`v1.f1.I` @type ^`v1.o1` @kind object;
  #L48d53a.  call temp:= `e`(v13) @signature `Lv1/o1;.e:()J` @kind interface;
  #L48d540.  v3:= temp @kind wide;
  #L48d542.  goto L48d54e;
  #L48d544.  v3:= -4.9E-324D;
  #L48d54e.  v10:= v3 @kind wide;
  #L48d550.  v13:= v12.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d554.  call temp:= `j`(v13) @signature `Lv1/a2;.j:()Lv1/x1;` @kind virtual;
  #L48d55a.  v13:= temp @kind object;
  #L48d55c.  call temp:= `q`(v13) @signature `Lv1/x1;.q:()Z` @kind virtual;
  #L48d562.  v1:= temp;
  #L48d564.  if v1 == 0 then goto L48d578;
  #L48d568.  v1:= v13.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48d56c.  v1:= v1.`v1.y1.i` @type ^`boolean` @kind boolean;
  #L48d570.  if v1 == 0 then goto L48d578;
  #L48d574.  v1:= 1I;
  #L48d576.  goto L48d57a;
  #L48d578.  v1:= 0I;
  #L48d57a.  v3:= v13.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48d57e.  v3:= v3.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L48d582.  call temp:= `b`(v3) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L48d588.  v3:= temp;
  #L48d58a.  if v3 == 0 then goto L48d59a;
  #L48d58e.  v13:= v13.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L48d592.  if v13 != 0 then goto L48d59a;
  #L48d596.  v13:= 1I;
  #L48d598.  goto L48d59c;
  #L48d59a.  v13:= 0I;
  #L48d59c.  if v1 != 0 then goto L48d5d0;
  #L48d5a0.  if v13 != 0 then goto L48d5d0;
  #L48d5a4.  v5:= v12.`v1.f1.t` @type ^`v1.p1` @kind object;
  #L48d5a8.  call temp:= `D`(v12) @signature `Lv1/f1;.D:()J` @kind direct;
  #L48d5ae.  v6:= temp @kind wide;
  #L48d5b0.  v13:= v12.`v1.f1.C` @type ^`v1.k` @kind object;
  #L48d5b4.  call temp:= `i`(v13) @signature `Lv1/k;.i:()Lv1/j2;` @kind virtual;
  #L48d5ba.  v13:= temp @kind object;
  #L48d5bc.  v8:= v13.`v1.j2.o` @type ^`float`;
  #L48d5c0.  v9:= v12.`v1.f1.Q` @type ^`boolean` @kind boolean;
  #L48d5c4.  call temp:= `e`(v5, v6, v8, v9, v10) @signature `Lv1/p1;.e:(JFZJ)Z` @kind interface;
  #L48d5ca.  v13:= temp;
  #L48d5cc.  if v13 == 0 then goto L48d5d2;
  #L48d5d0.  v0:= 1I;
  #L48d5d2.  return v0;
}
procedure `java.lang.Boolean` `e`(`v1.f1` v0 @kind object) @signature `Lv1/f1;.e:(Lv1/f1;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L48d664.  call temp:= `U`(v0) @signature `Lv1/f1;.U:()Ljava/lang/Boolean;` @kind direct;
  #L48d66a.  v0:= temp @kind object;
  #L48d66c.  return v0 @kind object;
}
procedure `void` `e0`(`v1.f1` v4 @kind this, `v1.f1$c` v5 @kind object) @signature `Lv1/f1;.e0:(Lv1/f1$c;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48f5f0.  v0:= v4.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L48f5f4.  v1:= 1I;
  #L48f5f6.  call `b`(v0, v1) @signature `Lv1/f1$e;.b:(I)V` @kind virtual;
  #L48f5fc.  v0:= v4.`v1.f1.H` @type ^`v1.d2` @kind object;
  #L48f600.  v1:= v5.`v1.f1$c.a` @type ^`int`;
  #L48f604.  v2:= v5.`v1.f1$c.b` @type ^`int`;
  #L48f608.  v3:= v5.`v1.f1$c.c` @type ^`int`;
  #L48f60c.  v5:= v5.`v1.f1$c.d` @type ^`x2.p0` @kind object;
  #L48f610.  call temp:= `v`(v0, v1, v2, v3, v5) @signature `Lv1/d2;.v:(IIILx2/p0;)Lv1/d3;` @kind virtual;
  #L48f616.  v5:= temp @kind object;
  #L48f618.  v0:= 0I;
  #L48f61a.  call `I`(v4, v5, v0) @signature `Lv1/f1;.I:(Lv1/d3;Z)V` @kind direct;
  #L48f620.  return @kind void;
}
procedure `boolean` `e1`(`v1.f1` v4 @kind this, `v1.d3` v5 @kind object, `x2.u$b` v6 @kind object) @signature `Lv1/f1;.e1:(Lv1/d3;Lx2/u$b;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48d5e4.  call temp:= `b`(v6) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L48d5ea.  v0:= temp;
  #L48d5ec.  v1:= 0I;
  #L48d5ee.  if v0 != 0 then goto L48d652;
  #L48d5f2.  call temp:= `q`(v5) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48d5f8.  v0:= temp;
  #L48d5fa.  if v0 == 0 then goto L48d600;
  #L48d5fe.  goto L48d652;
  #L48d600.  v6:= v6.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48d604.  v0:= v4.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L48d608.  call temp:= `h`(v5, v6, v0) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48d60e.  v6:= temp @kind object;
  #L48d610.  v6:= v6.`v1.d3$b.q` @type ^`int`;
  #L48d614.  v0:= v4.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L48d618.  call temp:= `n`(v5, v6, v0) @signature `Lv1/d3;.n:(ILv1/d3$c;)Lv1/d3$c;` @kind virtual;
  #L48d61e.  v5:= v4.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L48d622.  call temp:= `g`(v5) @signature `Lv1/d3$c;.g:()Z` @kind virtual;
  #L48d628.  v5:= temp;
  #L48d62a.  if v5 == 0 then goto L48d652;
  #L48d62e.  v5:= v4.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L48d632.  v6:= v5.`v1.d3$c.w` @type ^`boolean` @kind boolean;
  #L48d636.  if v6 == 0 then goto L48d652;
  #L48d63a.  v5:= v5.`v1.d3$c.t` @type ^`long` @kind wide;
  #L48d63e.  v2:= -4.9E-324D;
  #L48d648.  v0:= lcmp(v5, v2);
  #L48d64c.  if v0 == 0 then goto L48d652;
  #L48d650.  v1:= 1I;
  #L48d652.  return v1;
}
procedure `void` `f`(`v1.f1` v0 @kind object, `v1.m2` v1 @kind object) @signature `Lv1/f1;.f:(Lv1/f1;Lv1/m2;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L48e064.  call `V`(v0, v1) @signature `Lv1/f1;.V:(Lv1/m2;)V` @kind direct;
  #L48e06a.  return @kind void;
}
procedure `void` `f0`(`v1.f1` v5 @kind this) @signature `Lv1/f1;.f0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48f634.  v0:= v5.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f638.  call temp:= `p`(v0) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48f63e.  v0:= temp @kind object;
  #L48f640.  if v0 == 0 then goto L48f676;
  #L48f644.  call temp:= `o`(v0) @signature `Lv1/x1;.o:()Lq3/b0;` @kind virtual;
  #L48f64a.  v1:= temp @kind object;
  #L48f64c.  v1:= v1.`q3.b0.c` @type ^`q3.s`[] @kind object;
  #L48f650.  v2:= length @variable v1;
  #L48f652.  v3:= 0I;
  #L48f654.  if v3 >= v2 then goto L48f66c;
  #L48f658.  v4:= v1[v3] @kind object;
  #L48f65c.  if v4 == 0 then goto L48f666;
  #L48f660.  call `s`(v4) @signature `Lq3/s;.s:()V` @kind interface;
  #L48f666.  v3:= v3 + 1;
  #L48f66a.  goto L48f654;
  #L48f66c.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L48f672.  v0:= temp @kind object;
  #L48f674.  goto L48f640;
  #L48f676.  return @kind void;
}
procedure `void` `f1`(`v1.f1` v5 @kind this) @signature `Lv1/f1;.f1:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L490950.  v0:= 0I;
  #L490952.  v5.`v1.f1.Q` @type ^`boolean` := v0 @kind boolean;
  #L490956.  v1:= v5.`v1.f1.C` @type ^`v1.k` @kind object;
  #L49095a.  call `f`(v1) @signature `Lv1/k;.f:()V` @kind virtual;
  #L490960.  v1:= v5.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L490964.  v2:= length @variable v1;
  #L490966.  if v0 >= v2 then goto L490986;
  #L49096a.  v3:= v1[v0] @kind object;
  #L49096e.  call temp:= `R`(v3) @signature `Lv1/f1;.R:(Lv1/r2;)Z` @kind static;
  #L490974.  v4:= temp;
  #L490976.  if v4 == 0 then goto L490980;
  #L49097a.  call `start`(v3) @signature `Lv1/r2;.start:()V` @kind interface;
  #L490980.  v0:= v0 + 1;
  #L490984.  goto L490966;
  #L490986.  return @kind void;
}
procedure `boolean` `g`(`v1.f1` v0 @kind object, `boolean` v1 ) @signature `Lv1/f1;.g:(Lv1/f1;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L48ca74.  v0.`v1.f1.V` @type ^`boolean` := v1 @kind boolean;
  #L48ca78.  return v1;
}
procedure `void` `g0`(`v1.f1` v5 @kind this, `boolean` v6 ) @signature `Lv1/f1;.g0:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48f688.  v0:= v5.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f68c.  call temp:= `p`(v0) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48f692.  v0:= temp @kind object;
  #L48f694.  if v0 == 0 then goto L48f6ca;
  #L48f698.  call temp:= `o`(v0) @signature `Lv1/x1;.o:()Lq3/b0;` @kind virtual;
  #L48f69e.  v1:= temp @kind object;
  #L48f6a0.  v1:= v1.`q3.b0.c` @type ^`q3.s`[] @kind object;
  #L48f6a4.  v2:= length @variable v1;
  #L48f6a6.  v3:= 0I;
  #L48f6a8.  if v3 >= v2 then goto L48f6c0;
  #L48f6ac.  v4:= v1[v3] @kind object;
  #L48f6b0.  if v4 == 0 then goto L48f6ba;
  #L48f6b4.  call `i`(v4, v6) @signature `Lq3/s;.i:(Z)V` @kind interface;
  #L48f6ba.  v3:= v3 + 1;
  #L48f6be.  goto L48f6a8;
  #L48f6c0.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L48f6c6.  v0:= temp @kind object;
  #L48f6c8.  goto L48f694;
  #L48f6ca.  return @kind void;
}
procedure `void` `h0`(`v1.f1` v5 @kind this) @signature `Lv1/f1;.h0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48f6dc.  v0:= v5.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f6e0.  call temp:= `p`(v0) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48f6e6.  v0:= temp @kind object;
  #L48f6e8.  if v0 == 0 then goto L48f71e;
  #L48f6ec.  call temp:= `o`(v0) @signature `Lv1/x1;.o:()Lq3/b0;` @kind virtual;
  #L48f6f2.  v1:= temp @kind object;
  #L48f6f4.  v1:= v1.`q3.b0.c` @type ^`q3.s`[] @kind object;
  #L48f6f8.  v2:= length @variable v1;
  #L48f6fa.  v3:= 0I;
  #L48f6fc.  if v3 >= v2 then goto L48f714;
  #L48f700.  v4:= v1[v3] @kind object;
  #L48f704.  if v4 == 0 then goto L48f70e;
  #L48f708.  call `u`(v4) @signature `Lq3/s;.u:()V` @kind interface;
  #L48f70e.  v3:= v3 + 1;
  #L48f712.  goto L48f6fc;
  #L48f714.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L48f71a.  v0:= temp @kind object;
  #L48f71c.  goto L48f6e8;
  #L48f71e.  return @kind void;
}
procedure `void` `h1`(`v1.f1` v2 @kind this, `boolean` v3 , `boolean` v4 ) @signature `Lv1/f1;.h1:(ZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4909c0.  v0:= 0I;
  #L4909c2.  v1:= 1I;
  #L4909c4.  if v3 != 0 then goto L4909d6;
  #L4909c8.  v3:= v2.`v1.f1.U` @type ^`boolean` @kind boolean;
  #L4909cc.  if v3 != 0 then goto L4909d2;
  #L4909d0.  goto L4909d6;
  #L4909d2.  v3:= 0I;
  #L4909d4.  goto L4909d8;
  #L4909d6.  v3:= 1I;
  #L4909d8.  call `r0`(v2, v3, v0, v1, v0) @signature `Lv1/f1;.r0:(ZZZZ)V` @kind direct;
  #L4909de.  v3:= v2.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L4909e2.  call `b`(v3, v4) @signature `Lv1/f1$e;.b:(I)V` @kind virtual;
  #L4909e8.  v3:= v2.`v1.f1.t` @type ^`v1.p1` @kind object;
  #L4909ec.  call `h`(v3) @signature `Lv1/p1;.h:()V` @kind interface;
  #L4909f2.  call `Z0`(v2, v1) @signature `Lv1/f1;.Z0:(I)V` @kind direct;
  #L4909f8.  return @kind void;
}
procedure `s3.m` `i`(`v1.f1` v0 @kind object) @signature `Lv1/f1;.i:(Lv1/f1;)Ls3/m;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L48daf8.  v0:= v0.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48dafc.  return v0 @kind object;
}
procedure `void` `i1`(`v1.f1` v5 @kind this) @signature `Lv1/f1;.i1:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L490a0c.  v0:= v5.`v1.f1.C` @type ^`v1.k` @kind object;
  #L490a10.  call `g`(v0) @signature `Lv1/k;.g:()V` @kind virtual;
  #L490a16.  v0:= v5.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L490a1a.  v1:= length @variable v0;
  #L490a1c.  v2:= 0I;
  #L490a1e.  if v2 >= v1 then goto L490a3e;
  #L490a22.  v3:= v0[v2] @kind object;
  #L490a26.  call temp:= `R`(v3) @signature `Lv1/f1;.R:(Lv1/r2;)Z` @kind static;
  #L490a2c.  v4:= temp;
  #L490a2e.  if v4 == 0 then goto L490a38;
  #L490a32.  call `t`(v5, v3) @signature `Lv1/f1;.t:(Lv1/r2;)V` @kind direct;
  #L490a38.  v2:= v2 + 1;
  #L490a3c.  goto L490a1e;
  #L490a3e.  return @kind void;
}
procedure `void` `j1`(`v1.f1` v3 @kind this) @signature `Lv1/f1;.j1:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L490a50.  v0:= v3.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L490a54.  call temp:= `j`(v0) @signature `Lv1/a2;.j:()Lv1/x1;` @kind virtual;
  #L490a5a.  v0:= temp @kind object;
  #L490a5c.  v1:= v3.`v1.f1.R` @type ^`boolean` @kind boolean;
  #L490a60.  if v1 != 0 then goto L490a7e;
  #L490a64.  if v0 == 0 then goto L490a7a;
  #L490a68.  v0:= v0.`v1.x1.a` @type ^`x2.r` @kind object;
  #L490a6c.  call temp:= `a`(v0) @signature `Lx2/r;.a:()Z` @kind interface;
  #L490a72.  v0:= temp;
  #L490a74.  if v0 == 0 then goto L490a7a;
  #L490a78.  goto L490a7e;
  #L490a7a.  v0:= 0I;
  #L490a7c.  goto L490a80;
  #L490a7e.  v0:= 1I;
  #L490a80.  v1:= v3.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490a84.  v2:= v1.`v1.i2.g` @type ^`boolean` @kind boolean;
  #L490a88.  if v0 == v2 then goto L490a98;
  #L490a8c.  call temp:= `a`(v1, v0) @signature `Lv1/i2;.a:(Z)Lv1/i2;` @kind virtual;
  #L490a92.  v0:= temp @kind object;
  #L490a94.  v3.`v1.f1.L` @type ^`v1.i2` := v0 @kind object;
  #L490a98.  return @kind void;
}
procedure `void` `k`(`v1.f1` v2 @kind this, `v1.f1$b` v3 @kind object, `int` v4 ) @signature `Lv1/f1;.k:(Lv1/f1$b;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48e224.  v0:= v2.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L48e228.  v1:= 1I;
  #L48e22a.  call `b`(v0, v1) @signature `Lv1/f1$e;.b:(I)V` @kind virtual;
  #L48e230.  v0:= v2.`v1.f1.H` @type ^`v1.d2` @kind object;
  #L48e234.  v1:= -1I;
  #L48e236.  if v4 != v1 then goto L48e242;
  #L48e23a.  call temp:= `q`(v0) @signature `Lv1/d2;.q:()I` @kind virtual;
  #L48e240.  v4:= temp;
  #L48e242.  call temp:= `b`(v3) @signature `Lv1/f1$b;.b:(Lv1/f1$b;)Ljava/util/List;` @kind static;
  #L48e248.  v1:= temp @kind object;
  #L48e24a.  call temp:= `c`(v3) @signature `Lv1/f1$b;.c:(Lv1/f1$b;)Lx2/p0;` @kind static;
  #L48e250.  v3:= temp @kind object;
  #L48e252.  call temp:= `f`(v0, v4, v1, v3) @signature `Lv1/d2;.f:(ILjava/util/List;Lx2/p0;)Lv1/d3;` @kind virtual;
  #L48e258.  v3:= temp @kind object;
  #L48e25a.  v4:= 0I;
  #L48e25c.  call `I`(v2, v3, v4) @signature `Lv1/f1;.I:(Lv1/d3;Z)V` @kind direct;
  #L48e262.  return @kind void;
}
procedure `void` `k0`(`v1.f1` v3 @kind this) @signature `Lv1/f1;.k0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L48f82c.  v0:= v3.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L48f830.  v1:= 1I;
  #L48f832.  call `b`(v0, v1) @signature `Lv1/f1$e;.b:(I)V` @kind virtual;
  #L48f838.  v0:= 0I;
  #L48f83a.  call `r0`(v3, v0, v0, v0, v1) @signature `Lv1/f1;.r0:(ZZZZ)V` @kind direct;
  #L48f840.  v0:= v3.`v1.f1.t` @type ^`v1.p1` @kind object;
  #L48f844.  call `b`(v0) @signature `Lv1/p1;.b:()V` @kind interface;
  #L48f84a.  v0:= v3.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48f84e.  v0:= v0.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48f852.  call temp:= `q`(v0) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48f858.  v0:= temp;
  #L48f85a.  v1:= 2I;
  #L48f85c.  if v0 == 0 then goto L48f864;
  #L48f860.  v0:= 4I;
  #L48f862.  goto L48f866;
  #L48f864.  v0:= 2I;
  #L48f866.  call `Z0`(v3, v0) @signature `Lv1/f1;.Z0:(I)V` @kind direct;
  #L48f86c.  v0:= v3.`v1.f1.H` @type ^`v1.d2` @kind object;
  #L48f870.  v2:= v3.`v1.f1.u` @type ^`r3.f` @kind object;
  #L48f874.  call temp:= `b`(v2) @signature `Lr3/f;.b:()Lr3/p0;` @kind interface;
  #L48f87a.  v2:= temp @kind object;
  #L48f87c.  call `w`(v0, v2) @signature `Lv1/d2;.w:(Lr3/p0;)V` @kind virtual;
  #L48f882.  v0:= v3.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48f886.  call temp:= `c`(v0, v1) @signature `Ls3/m;.c:(I)Z` @kind interface;
  #L48f88c.  return @kind void;
}
procedure `void` `k1`(`v1.f1` v2 @kind this, `x2.v0` v3 @kind object, `q3.b0` v4 @kind object) @signature `Lv1/f1;.k1:(Lx2/v0;Lq3/b0;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L490aac.  v0:= v2.`v1.f1.t` @type ^`v1.p1` @kind object;
  #L490ab0.  v1:= v2.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L490ab4.  v4:= v4.`q3.b0.c` @type ^`q3.s`[] @kind object;
  #L490ab8.  call `c`(v0, v1, v3, v4) @signature `Lv1/p1;.c:([Lv1/r2;Lx2/v0;[Lq3/s;)V` @kind interface;
  #L490abe.  return @kind void;
}
procedure `void` `l`(`v1.f1` v1 @kind this) @signature `Lv1/f1;.l:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L48e274.  v0:= 1I;
  #L48e276.  call `C0`(v1, v0) @signature `Lv1/f1;.C0:(Z)V` @kind direct;
  #L48e27c.  return @kind void;
}
procedure `void` `l1`(`v1.f1` v1 @kind this) @signature `Lv1/f1;.l1:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L490ad0.  v0:= v1.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490ad4.  v0:= v0.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L490ad8.  call temp:= `q`(v0) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L490ade.  v0:= temp;
  #L490ae0.  if v0 != 0 then goto L490b0e;
  #L490ae4.  v0:= v1.`v1.f1.H` @type ^`v1.d2` @kind object;
  #L490ae8.  call temp:= `s`(v0) @signature `Lv1/d2;.s:()Z` @kind virtual;
  #L490aee.  v0:= temp;
  #L490af0.  if v0 != 0 then goto L490af6;
  #L490af4.  goto L490b0e;
  #L490af6.  call `Z`(v1) @signature `Lv1/f1;.Z:()V` @kind direct;
  #L490afc.  call `b0`(v1) @signature `Lv1/f1;.b0:()V` @kind direct;
  #L490b02.  call `c0`(v1) @signature `Lv1/f1;.c0:()V` @kind direct;
  #L490b08.  call `a0`(v1) @signature `Lv1/f1;.a0:()V` @kind direct;
  #L490b0e.  return @kind void;
}
procedure `void` `m0`(`v1.f1` v2 @kind this) @signature `Lv1/f1;.m0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48f8a0.  v0:= 1I;
  #L48f8a2.  v1:= 0I;
  #L48f8a4.  call `r0`(v2, v0, v1, v0, v1) @signature `Lv1/f1;.r0:(ZZZZ)V` @kind direct;
  #L48f8aa.  v1:= v2.`v1.f1.t` @type ^`v1.p1` @kind object;
  #L48f8ae.  call `d`(v1) @signature `Lv1/p1;.d:()V` @kind interface;
  #L48f8b4.  call `Z0`(v2, v0) @signature `Lv1/f1;.Z0:(I)V` @kind direct;
  #L48f8ba.  v1:= v2.`v1.f1.w` @type ^`android.os.HandlerThread` @kind object;
  #L48f8be.  call temp:= `quit`(v1) @signature `Landroid/os/HandlerThread;.quit:()Z` @kind virtual;
  #L48f8c4.  @monitorenter v2
  #L48f8c6.  v2.`v1.f1.N` @type ^`boolean` := v0 @kind boolean;
  #L48f8ca.  call `notifyAll`(v2) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L48f8d0.  @monitorexit v2
  #L48f8d2.  return @kind void;
  #L48f8d4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48f8d6.  @monitorexit v2
  #L48f8d8.  throw v0;
  catch `java.lang.Throwable` @[L48f8c6..L48f8d8] goto L48f8d4;
}
procedure `void` `m1`(`v1.f1` v11 @kind this) @signature `Lv1/f1;.m1:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L490b20.  v0:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L490b24.  call temp:= `p`(v0) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L490b2a.  v0:= temp @kind object;
  #L490b2c.  if v0 != 0 then goto L490b32;
  #L490b30.  return @kind void;
  #L490b32.  v1:= v0.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L490b36.  v2:= -4.9E-324D;
  #L490b40.  if v1 == 0 then goto L490b54;
  #L490b44.  v1:= v0.`v1.x1.a` @type ^`x2.r` @kind object;
  #L490b48.  call temp:= `l`(v1) @signature `Lx2/r;.l:()J` @kind interface;
  #L490b4e.  v4:= temp @kind wide;
  #L490b50.  v6:= v4 @kind wide;
  #L490b52.  goto L490b56;
  #L490b54.  v6:= v2 @kind wide;
  #L490b56.  v10:= 0I;
  #L490b58.  v1:= lcmp(v6, v2);
  #L490b5c.  if v1 == 0 then goto L490b98;
  #L490b60.  call `t0`(v11, v6) @signature `Lv1/f1;.t0:(J)V` @kind direct;
  #L490b66.  v0:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490b6a.  v0:= v0.`v1.i2.r` @type ^`long` @kind wide;
  #L490b6e.  v2:= lcmp(v6, v0);
  #L490b72.  if v2 == 0 then goto L490bdc;
  #L490b76.  v0:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490b7a.  v1:= v0.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L490b7e.  v4:= v0.`v1.i2.c` @type ^`long` @kind wide;
  #L490b82.  v8:= 1I;
  #L490b84.  v9:= 5I;
  #L490b86.  v0:= v11 @kind object;
  #L490b88.  v2:= v6 @kind wide;
  #L490b8a.  call temp:= `M`(v0, v1, v2, v4, v6, v8, v9) @signature `Lv1/f1;.M:(Lx2/u$b;JJJZI)Lv1/i2;` @kind direct;
  #L490b90.  v0:= temp @kind object;
  #L490b92.  v11.`v1.f1.L` @type ^`v1.i2` := v0 @kind object;
  #L490b96.  goto L490bdc;
  #L490b98.  v1:= v11.`v1.f1.C` @type ^`v1.k` @kind object;
  #L490b9c.  v2:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L490ba0.  call temp:= `q`(v2) @signature `Lv1/a2;.q:()Lv1/x1;` @kind virtual;
  #L490ba6.  v2:= temp @kind object;
  #L490ba8.  if v0 == v2 then goto L490bb0;
  #L490bac.  v2:= 1I;
  #L490bae.  goto L490bb2;
  #L490bb0.  v2:= 0I;
  #L490bb2.  call temp:= `h`(v1, v2) @signature `Lv1/k;.h:(Z)J` @kind virtual;
  #L490bb8.  v1:= temp @kind wide;
  #L490bba.  v11.`v1.f1.Z` @type ^`long` := v1 @kind wide;
  #L490bbe.  call temp:= `y`(v0, v1) @signature `Lv1/x1;.y:(J)J` @kind virtual;
  #L490bc4.  v0:= temp @kind wide;
  #L490bc6.  v2:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490bca.  v2:= v2.`v1.i2.r` @type ^`long` @kind wide;
  #L490bce.  call `Y`(v11, v2, v0) @signature `Lv1/f1;.Y:(JJ)V` @kind direct;
  #L490bd4.  v2:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490bd8.  v2.`v1.i2.r` @type ^`long` := v0 @kind wide;
  #L490bdc.  v0:= v11.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L490be0.  call temp:= `j`(v0) @signature `Lv1/a2;.j:()Lv1/x1;` @kind virtual;
  #L490be6.  v0:= temp @kind object;
  #L490be8.  v1:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490bec.  call temp:= `i`(v0) @signature `Lv1/x1;.i:()J` @kind virtual;
  #L490bf2.  v2:= temp @kind wide;
  #L490bf4.  v1.`v1.i2.p` @type ^`long` := v2 @kind wide;
  #L490bf8.  v0:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490bfc.  call temp:= `D`(v11) @signature `Lv1/f1;.D:()J` @kind direct;
  #L490c02.  v1:= temp @kind wide;
  #L490c04.  v0.`v1.i2.q` @type ^`long` := v1 @kind wide;
  #L490c08.  v0:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490c0c.  v1:= v0.`v1.i2.l` @type ^`boolean` @kind boolean;
  #L490c10.  if v1 == 0 then goto L490cb6;
  #L490c14.  v1:= v0.`v1.i2.e` @type ^`int`;
  #L490c18.  v2:= 3I;
  #L490c1a.  if v1 != v2 then goto L490cb6;
  #L490c1e.  v1:= v0.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L490c22.  v0:= v0.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L490c26.  call temp:= `e1`(v11, v1, v0) @signature `Lv1/f1;.e1:(Lv1/d3;Lx2/u$b;)Z` @kind direct;
  #L490c2c.  v0:= temp;
  #L490c2e.  if v0 == 0 then goto L490cb6;
  #L490c32.  v0:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490c36.  v0:= v0.`v1.i2.n` @type ^`v1.j2` @kind object;
  #L490c3a.  v0:= v0.`v1.j2.o` @type ^`float`;
  #L490c3e.  v1:= 1.0F;
  #L490c42.  v0:= fcmpl(v0, v1);
  #L490c46.  if v0 != 0 then goto L490cb6;
  #L490c4a.  v0:= v11.`v1.f1.I` @type ^`v1.o1` @kind object;
  #L490c4e.  call temp:= `x`(v11) @signature `Lv1/f1;.x:()J` @kind direct;
  #L490c54.  v1:= temp @kind wide;
  #L490c56.  call temp:= `D`(v11) @signature `Lv1/f1;.D:()J` @kind direct;
  #L490c5c.  v3:= temp @kind wide;
  #L490c5e.  call temp:= `c`(v0, v1, v3) @signature `Lv1/o1;.c:(JJ)F` @kind interface;
  #L490c64.  v0:= temp;
  #L490c66.  v1:= v11.`v1.f1.C` @type ^`v1.k` @kind object;
  #L490c6a.  call temp:= `i`(v1) @signature `Lv1/k;.i:()Lv1/j2;` @kind virtual;
  #L490c70.  v1:= temp @kind object;
  #L490c72.  v1:= v1.`v1.j2.o` @type ^`float`;
  #L490c76.  v1:= fcmpl(v1, v0);
  #L490c7a.  if v1 == 0 then goto L490cb6;
  #L490c7e.  v1:= v11.`v1.f1.C` @type ^`v1.k` @kind object;
  #L490c82.  v2:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490c86.  v2:= v2.`v1.i2.n` @type ^`v1.j2` @kind object;
  #L490c8a.  call temp:= `b`(v2, v0) @signature `Lv1/j2;.b:(F)Lv1/j2;` @kind virtual;
  #L490c90.  v0:= temp @kind object;
  #L490c92.  call `e`(v1, v0) @signature `Lv1/k;.e:(Lv1/j2;)V` @kind virtual;
  #L490c98.  v0:= v11.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490c9c.  v0:= v0.`v1.i2.n` @type ^`v1.j2` @kind object;
  #L490ca0.  v1:= v11.`v1.f1.C` @type ^`v1.k` @kind object;
  #L490ca4.  call temp:= `i`(v1) @signature `Lv1/k;.i:()Lv1/j2;` @kind virtual;
  #L490caa.  v1:= temp @kind object;
  #L490cac.  v1:= v1.`v1.j2.o` @type ^`float`;
  #L490cb0.  call `K`(v11, v0, v1, v10, v10) @signature `Lv1/f1;.K:(Lv1/j2;FZZ)V` @kind direct;
  #L490cb6.  return @kind void;
}
procedure `void` `n`(`v1.f1` v4 @kind this, `v1.m2` v5 @kind object) @signature `Lv1/f1;.n:(Lv1/m2;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48e290.  call temp:= `j`(v5) @signature `Lv1/m2;.j:()Z` @kind virtual;
  #L48e296.  v0:= temp;
  #L48e298.  if v0 == 0 then goto L48e29e;
  #L48e29c.  return @kind void;
  #L48e29e.  v0:= 1I;
  #L48e2a0.  call temp:= `g`(v5) @signature `Lv1/m2;.g:()Lv1/m2$b;` @kind virtual;
  #L48e2a6.  v1:= temp @kind object;
  #L48e2a8.  call temp:= `i`(v5) @signature `Lv1/m2;.i:()I` @kind virtual;
  #L48e2ae.  v2:= temp;
  #L48e2b0.  call temp:= `e`(v5) @signature `Lv1/m2;.e:()Ljava/lang/Object;` @kind virtual;
  #L48e2b6.  v3:= temp @kind object;
  #L48e2b8.  call `o`(v1, v2, v3) @signature `Lv1/m2$b;.o:(ILjava/lang/Object;)V` @kind interface;
  #L48e2be.  call `k`(v5, v0) @signature `Lv1/m2;.k:(Z)V` @kind virtual;
  #L48e2c4.  return @kind void;
  #L48e2c6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48e2c8.  call `k`(v5, v0) @signature `Lv1/m2;.k:(Z)V` @kind virtual;
  #L48e2ce.  throw v1;
  catch `java.lang.Throwable` @[L48e2a0..L48e2be] goto L48e2c6;
}
procedure `void` `n0`(`v1.f1` v2 @kind this, `int` v3 , `int` v4 , `x2.p0` v5 @kind object) @signature `Lv1/f1;.n0:(IILx2/p0;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48f8f8.  v0:= v2.`v1.f1.M` @type ^`v1.f1$e` @kind object;
  #L48f8fc.  v1:= 1I;
  #L48f8fe.  call `b`(v0, v1) @signature `Lv1/f1$e;.b:(I)V` @kind virtual;
  #L48f904.  v0:= v2.`v1.f1.H` @type ^`v1.d2` @kind object;
  #L48f908.  call temp:= `A`(v0, v3, v4, v5) @signature `Lv1/d2;.A:(IILx2/p0;)Lv1/d3;` @kind virtual;
  #L48f90e.  v3:= temp @kind object;
  #L48f910.  v4:= 0I;
  #L48f912.  call `I`(v2, v3, v4) @signature `Lv1/f1;.I:(Lv1/d3;Z)V` @kind direct;
  #L48f918.  return @kind void;
}
procedure `void` `n1`(`v1.f1` v3 @kind this, `v1.d3` v4 @kind object, `x2.u$b` v5 @kind object, `v1.d3` v6 @kind object, `x2.u$b` v7 @kind object, `long` v8 ) @signature `Lv1/f1;.n1:(Lv1/d3;Lx2/u$b;Lv1/d3;Lx2/u$b;J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L490cc8.  call temp:= `e1`(v3, v4, v5) @signature `Lv1/f1;.e1:(Lv1/d3;Lx2/u$b;)Z` @kind direct;
  #L490cce.  v0:= temp;
  #L490cd0.  if v0 != 0 then goto L490d12;
  #L490cd4.  call temp:= `b`(v5) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L490cda.  v4:= temp;
  #L490cdc.  if v4 == 0 then goto L490ce6;
  #L490ce0.  v4:= `@@v1.j2.r` @type ^`v1.j2` @kind object;
  #L490ce4.  goto L490cee;
  #L490ce6.  v4:= v3.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L490cea.  v4:= v4.`v1.i2.n` @type ^`v1.j2` @kind object;
  #L490cee.  v5:= v3.`v1.f1.C` @type ^`v1.k` @kind object;
  #L490cf2.  call temp:= `i`(v5) @signature `Lv1/k;.i:()Lv1/j2;` @kind virtual;
  #L490cf8.  v5:= temp @kind object;
  #L490cfa.  call temp:= `equals`(v5, v4) @signature `Lv1/j2;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L490d00.  v5:= temp;
  #L490d02.  if v5 != 0 then goto L490d10;
  #L490d06.  v5:= v3.`v1.f1.C` @type ^`v1.k` @kind object;
  #L490d0a.  call `e`(v5, v4) @signature `Lv1/k;.e:(Lv1/j2;)V` @kind virtual;
  #L490d10.  return @kind void;
  #L490d12.  v0:= v5.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L490d16.  v1:= v3.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L490d1a.  call temp:= `h`(v4, v0, v1) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L490d20.  v0:= temp @kind object;
  #L490d22.  v0:= v0.`v1.d3$b.q` @type ^`int`;
  #L490d26.  v1:= v3.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L490d2a.  call temp:= `n`(v4, v0, v1) @signature `Lv1/d3;.n:(ILv1/d3$c;)Lv1/d3$c;` @kind virtual;
  #L490d30.  v0:= v3.`v1.f1.I` @type ^`v1.o1` @kind object;
  #L490d34.  v1:= v3.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L490d38.  v1:= v1.`v1.d3$c.y` @type ^`v1.r1$g` @kind object;
  #L490d3c.  call temp:= `j`(v1) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L490d42.  v1:= temp @kind object;
  #L490d44.  v1:= (`v1.r1$g`) v1 @kind object;
  #L490d48.  call `b`(v0, v1) @signature `Lv1/o1;.b:(Lv1/r1$g;)V` @kind interface;
  #L490d4e.  v0:= -4.9E-324D;
  #L490d58.  v2:= lcmp(v8, v0);
  #L490d5c.  if v2 == 0 then goto L490d78;
  #L490d60.  v6:= v3.`v1.f1.I` @type ^`v1.o1` @kind object;
  #L490d64.  v5:= v5.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L490d68.  call temp:= `z`(v3, v4, v5, v8) @signature `Lv1/f1;.z:(Lv1/d3;Ljava/lang/Object;J)J` @kind direct;
  #L490d6e.  v4:= temp @kind wide;
  #L490d70.  call `d`(v6, v4) @signature `Lv1/o1;.d:(J)V` @kind interface;
  #L490d76.  goto L490dc8;
  #L490d78.  v4:= v3.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L490d7c.  v4:= v4.`v1.d3$c.o` @type ^`java.lang.Object` @kind object;
  #L490d80.  v5:= 0I;
  #L490d82.  call temp:= `q`(v6) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L490d88.  v8:= temp;
  #L490d8a.  if v8 != 0 then goto L490db2;
  #L490d8e.  v5:= v7.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L490d92.  v7:= v3.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L490d96.  call temp:= `h`(v6, v5, v7) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L490d9c.  v5:= temp @kind object;
  #L490d9e.  v5:= v5.`v1.d3$b.q` @type ^`int`;
  #L490da2.  v7:= v3.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L490da6.  call temp:= `n`(v6, v5, v7) @signature `Lv1/d3;.n:(ILv1/d3$c;)Lv1/d3$c;` @kind virtual;
  #L490dac.  v5:= temp @kind object;
  #L490dae.  v5:= v5.`v1.d3$c.o` @type ^`java.lang.Object` @kind object;
  #L490db2.  call temp:= `c`(v5, v4) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L490db8.  v4:= temp;
  #L490dba.  if v4 != 0 then goto L490dc8;
  #L490dbe.  v4:= v3.`v1.f1.I` @type ^`v1.o1` @kind object;
  #L490dc2.  call `d`(v4, v0) @signature `Lv1/o1;.d:(J)V` @kind interface;
  #L490dc8.  return @kind void;
}
procedure `void` `o`(`v1.f1` v1 @kind this, `v1.r2` v2 @kind object) @signature `Lv1/f1;.o:(Lv1/r2;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L48e2ec.  call temp:= `R`(v2) @signature `Lv1/f1;.R:(Lv1/r2;)Z` @kind static;
  #L48e2f2.  v0:= temp;
  #L48e2f4.  if v0 != 0 then goto L48e2fa;
  #L48e2f8.  return @kind void;
  #L48e2fa.  v0:= v1.`v1.f1.C` @type ^`v1.k` @kind object;
  #L48e2fe.  call `a`(v0, v2) @signature `Lv1/k;.a:(Lv1/r2;)V` @kind virtual;
  #L48e304.  call `t`(v1, v2) @signature `Lv1/f1;.t:(Lv1/r2;)V` @kind direct;
  #L48e30a.  call `f`(v2) @signature `Lv1/r2;.f:()V` @kind interface;
  #L48e310.  v2:= v1.`v1.f1.X` @type ^`int`;
  #L48e314.  v2:= v2 + -1;
  #L48e318.  v1.`v1.f1.X` @type ^`int` := v2;
  #L48e31c.  return @kind void;
}
procedure `void` `o1`(`v1.f1` v5 @kind this, `float` v6 ) @signature `Lv1/f1;.o1:(F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L490ddc.  v0:= v5.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L490de0.  call temp:= `p`(v0) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L490de6.  v0:= temp @kind object;
  #L490de8.  if v0 == 0 then goto L490e1e;
  #L490dec.  call temp:= `o`(v0) @signature `Lv1/x1;.o:()Lq3/b0;` @kind virtual;
  #L490df2.  v1:= temp @kind object;
  #L490df4.  v1:= v1.`q3.b0.c` @type ^`q3.s`[] @kind object;
  #L490df8.  v2:= length @variable v1;
  #L490dfa.  v3:= 0I;
  #L490dfc.  if v3 >= v2 then goto L490e14;
  #L490e00.  v4:= v1[v3] @kind object;
  #L490e04.  if v4 == 0 then goto L490e0e;
  #L490e08.  call `q`(v4, v6) @signature `Lq3/s;.q:(F)V` @kind interface;
  #L490e0e.  v3:= v3 + 1;
  #L490e12.  goto L490dfc;
  #L490e14.  call temp:= `j`(v0) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L490e1a.  v0:= temp @kind object;
  #L490e1c.  goto L490de8;
  #L490e1e.  return @kind void;
}
procedure `void` `p`(`v1.f1` v16 @kind this) @signature `Lv1/f1;.p:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L48e330.  v0:= v16 @kind object;
  #L48e334.  v1:= v0.`v1.f1.E` @type ^`s3.c` @kind object;
  #L48e338.  call temp:= `a`(v1) @signature `Ls3/c;.a:()J` @kind interface;
  #L48e33e.  v1:= temp @kind wide;
  #L48e340.  v3:= v0.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48e344.  v4:= 2I;
  #L48e346.  call `f`(v3, v4) @signature `Ls3/m;.f:(I)V` @kind interface;
  #L48e34c.  call `l1`(v16) @signature `Lv1/f1;.l1:()V` @kind direct;
  #L48e352.  v3:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e356.  v3:= v3.`v1.i2.e` @type ^`int`;
  #L48e35a.  v5:= 1I;
  #L48e35c.  if v3 == v5 then goto L48e70a;
  #L48e360.  v6:= 4I;
  #L48e362.  if v3 != v6 then goto L48e36a;
  #L48e366.  goto L48e70a;
  #L48e36a.  v3:= v0.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48e36e.  call temp:= `p`(v3) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48e374.  v3:= temp @kind object;
  #L48e376.  v7:= 10L;
  #L48e37a.  if v3 != 0 then goto L48e386;
  #L48e37e.  call `A0`(v0, v1, v7) @signature `Lv1/f1;.A0:(JJ)V` @kind direct;
  #L48e384.  return @kind void;
  #L48e386.  v9:= "doSomeWork" @kind object;
  #L48e38a.  call `a`(v9) @signature `Ls3/i0;.a:(Ljava/lang/String;)V` @kind static;
  #L48e390.  call `m1`(v16) @signature `Lv1/f1;.m1:()V` @kind direct;
  #L48e396.  v9:= v3.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L48e39a.  v10:= 1000L;
  #L48e39e.  v12:= 0I;
  #L48e3a0.  if v9 == 0 then goto L48e488;
  #L48e3a4.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L48e3aa.  v13:= temp @kind wide;
  #L48e3ac.  v13:= v13 * v10 @kind long;
  #L48e3b0.  v9:= v3.`v1.x1.a` @type ^`x2.r` @kind object;
  #L48e3b4.  v15:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e3b8.  v7:= v15.`v1.i2.r` @type ^`long` @kind wide;
  #L48e3bc.  v10:= v0.`v1.f1.A` @type ^`long` @kind wide;
  #L48e3c0.  v7:= v7 - v10 @kind long;
  #L48e3c2.  v10:= v0.`v1.f1.B` @type ^`boolean` @kind boolean;
  #L48e3c6.  call `r`(v9, v7, v10) @signature `Lx2/r;.r:(JZ)V` @kind interface;
  #L48e3cc.  v7:= 0I;
  #L48e3ce.  v8:= 1I;
  #L48e3d0.  v9:= 1I;
  #L48e3d2.  v10:= v0.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48e3d6.  v11:= length @variable v10;
  #L48e3d8.  if v7 >= v11 then goto L48e496;
  #L48e3dc.  v10:= v10[v7] @kind object;
  #L48e3e0.  call temp:= `R`(v10) @signature `Lv1/f1;.R:(Lv1/r2;)Z` @kind static;
  #L48e3e6.  v11:= temp;
  #L48e3e8.  if v11 != 0 then goto L48e3ee;
  #L48e3ec.  goto L48e47e;
  #L48e3ee.  v4:= v0.`v1.f1.Z` @type ^`long` @kind wide;
  #L48e3f2.  call `n`(v10, v4, v13) @signature `Lv1/r2;.n:(JJ)V` @kind interface;
  #L48e3f8.  if v8 == 0 then goto L48e40c;
  #L48e3fc.  call temp:= `b`(v10) @signature `Lv1/r2;.b:()Z` @kind interface;
  #L48e402.  v4:= temp;
  #L48e404.  if v4 == 0 then goto L48e40c;
  #L48e408.  v8:= 1I;
  #L48e40a.  goto L48e40e;
  #L48e40c.  v8:= 0I;
  #L48e40e.  v4:= v3.`v1.x1.c` @type ^`x2.n0`[] @kind object;
  #L48e412.  v4:= v4[v7] @kind object;
  #L48e416.  call temp:= `g`(v10) @signature `Lv1/r2;.g:()Lx2/n0;` @kind interface;
  #L48e41c.  v5:= temp @kind object;
  #L48e41e.  if v4 == v5 then goto L48e426;
  #L48e422.  v4:= 1I;
  #L48e424.  goto L48e428;
  #L48e426.  v4:= 0I;
  #L48e428.  if v4 != 0 then goto L48e43c;
  #L48e42c.  call temp:= `l`(v10) @signature `Lv1/r2;.l:()Z` @kind interface;
  #L48e432.  v5:= temp;
  #L48e434.  if v5 == 0 then goto L48e43c;
  #L48e438.  v5:= 1I;
  #L48e43a.  goto L48e43e;
  #L48e43c.  v5:= 0I;
  #L48e43e.  if v4 != 0 then goto L48e464;
  #L48e442.  if v5 != 0 then goto L48e464;
  #L48e446.  call temp:= `h`(v10) @signature `Lv1/r2;.h:()Z` @kind interface;
  #L48e44c.  v4:= temp;
  #L48e44e.  if v4 != 0 then goto L48e464;
  #L48e452.  call temp:= `b`(v10) @signature `Lv1/r2;.b:()Z` @kind interface;
  #L48e458.  v4:= temp;
  #L48e45a.  if v4 == 0 then goto L48e460;
  #L48e45e.  goto L48e464;
  #L48e460.  v4:= 0I;
  #L48e462.  goto L48e466;
  #L48e464.  v4:= 1I;
  #L48e466.  if v9 == 0 then goto L48e472;
  #L48e46a.  if v4 == 0 then goto L48e472;
  #L48e46e.  v9:= 1I;
  #L48e470.  goto L48e474;
  #L48e472.  v9:= 0I;
  #L48e474.  if v4 != 0 then goto L48e47e;
  #L48e478.  call `r`(v10) @signature `Lv1/r2;.r:()V` @kind interface;
  #L48e47e.  v7:= v7 + 1;
  #L48e482.  v4:= 2I;
  #L48e484.  v5:= 1I;
  #L48e486.  goto L48e3d2;
  #L48e488.  v4:= v3.`v1.x1.a` @type ^`x2.r` @kind object;
  #L48e48c.  call `p`(v4) @signature `Lx2/r;.p:()V` @kind interface;
  #L48e492.  v8:= 1I;
  #L48e494.  v9:= 1I;
  #L48e496.  v4:= v3.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48e49a.  v4:= v4.`v1.y1.e` @type ^`long` @kind wide;
  #L48e49e.  v13:= -4.9E-324D;
  #L48e4a8.  if v8 == 0 then goto L48e4d0;
  #L48e4ac.  v7:= v3.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L48e4b0.  if v7 == 0 then goto L48e4d0;
  #L48e4b4.  v7:= lcmp(v4, v13);
  #L48e4b8.  if v7 == 0 then goto L48e4cc;
  #L48e4bc.  v7:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e4c0.  v7:= v7.`v1.i2.r` @type ^`long` @kind wide;
  #L48e4c4.  v10:= lcmp(v4, v7);
  #L48e4c8.  if v10 > 0 then goto L48e4d0;
  #L48e4cc.  v4:= 1I;
  #L48e4ce.  goto L48e4d2;
  #L48e4d0.  v4:= 0I;
  #L48e4d2.  if v4 == 0 then goto L48e4f2;
  #L48e4d6.  v5:= v0.`v1.f1.P` @type ^`boolean` @kind boolean;
  #L48e4da.  if v5 == 0 then goto L48e4f2;
  #L48e4de.  v0.`v1.f1.P` @type ^`boolean` := v12 @kind boolean;
  #L48e4e2.  v5:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e4e6.  v5:= v5.`v1.i2.m` @type ^`int`;
  #L48e4ea.  v7:= 5I;
  #L48e4ec.  call `R0`(v0, v12, v5, v12, v7) @signature `Lv1/f1;.R0:(ZIZI)V` @kind direct;
  #L48e4f2.  v5:= 3I;
  #L48e4f4.  if v4 == 0 then goto L48e512;
  #L48e4f8.  v4:= v3.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48e4fc.  v4:= v4.`v1.y1.i` @type ^`boolean` @kind boolean;
  #L48e500.  if v4 == 0 then goto L48e512;
  #L48e504.  call `Z0`(v0, v6) @signature `Lv1/f1;.Z0:(I)V` @kind direct;
  #L48e50a.  call `i1`(v16) @signature `Lv1/f1;.i1:()V` @kind direct;
  #L48e510.  goto L48e5a0;
  #L48e512.  v4:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e516.  v4:= v4.`v1.i2.e` @type ^`int`;
  #L48e51a.  v7:= 2I;
  #L48e51c.  if v4 != v7 then goto L48e54c;
  #L48e520.  call temp:= `d1`(v0, v9) @signature `Lv1/f1;.d1:(Z)Z` @kind direct;
  #L48e526.  v4:= temp;
  #L48e528.  if v4 == 0 then goto L48e54c;
  #L48e52c.  call `Z0`(v0, v5) @signature `Lv1/f1;.Z0:(I)V` @kind direct;
  #L48e532.  v4:= 0I;
  #L48e534.  v0.`v1.f1.c0` @type ^`v1.n` := v4 @kind object;
  #L48e538.  call temp:= `c1`(v16) @signature `Lv1/f1;.c1:()Z` @kind direct;
  #L48e53e.  v4:= temp;
  #L48e540.  if v4 == 0 then goto L48e5a0;
  #L48e544.  call `f1`(v16) @signature `Lv1/f1;.f1:()V` @kind direct;
  #L48e54a.  goto L48e5a0;
  #L48e54c.  v4:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e550.  v4:= v4.`v1.i2.e` @type ^`int`;
  #L48e554.  if v4 != v5 then goto L48e5a0;
  #L48e558.  v4:= v0.`v1.f1.X` @type ^`int`;
  #L48e55c.  if v4 != 0 then goto L48e56e;
  #L48e560.  call temp:= `S`(v16) @signature `Lv1/f1;.S:()Z` @kind direct;
  #L48e566.  v4:= temp;
  #L48e568.  if v4 == 0 then goto L48e572;
  #L48e56c.  goto L48e5a0;
  #L48e56e.  if v9 != 0 then goto L48e5a0;
  #L48e572.  call temp:= `c1`(v16) @signature `Lv1/f1;.c1:()Z` @kind direct;
  #L48e578.  v4:= temp;
  #L48e57a.  v0.`v1.f1.Q` @type ^`boolean` := v4 @kind boolean;
  #L48e57e.  v4:= 2I;
  #L48e580.  call `Z0`(v0, v4) @signature `Lv1/f1;.Z0:(I)V` @kind direct;
  #L48e586.  v4:= v0.`v1.f1.Q` @type ^`boolean` @kind boolean;
  #L48e58a.  if v4 == 0 then goto L48e50a;
  #L48e58e.  call `h0`(v16) @signature `Lv1/f1;.h0:()V` @kind direct;
  #L48e594.  v4:= v0.`v1.f1.I` @type ^`v1.o1` @kind object;
  #L48e598.  call `a`(v4) @signature `Lv1/o1;.a:()V` @kind interface;
  #L48e59e.  goto L48e50a;
  #L48e5a0.  v4:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e5a4.  v4:= v4.`v1.i2.e` @type ^`int`;
  #L48e5a8.  v7:= 2I;
  #L48e5aa.  if v4 != v7 then goto L48e628;
  #L48e5ae.  v4:= 0I;
  #L48e5b0.  v7:= v0.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48e5b4.  v8:= length @variable v7;
  #L48e5b6.  if v4 >= v8 then goto L48e5fa;
  #L48e5ba.  v7:= v7[v4] @kind object;
  #L48e5be.  call temp:= `R`(v7) @signature `Lv1/f1;.R:(Lv1/r2;)Z` @kind static;
  #L48e5c4.  v7:= temp;
  #L48e5c6.  if v7 == 0 then goto L48e5f4;
  #L48e5ca.  v7:= v0.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48e5ce.  v7:= v7[v4] @kind object;
  #L48e5d2.  call temp:= `g`(v7) @signature `Lv1/r2;.g:()Lx2/n0;` @kind interface;
  #L48e5d8.  v7:= temp @kind object;
  #L48e5da.  v8:= v3.`v1.x1.c` @type ^`x2.n0`[] @kind object;
  #L48e5de.  v8:= v8[v4] @kind object;
  #L48e5e2.  if v7 != v8 then goto L48e5f4;
  #L48e5e6.  v7:= v0.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48e5ea.  v7:= v7[v4] @kind object;
  #L48e5ee.  call `r`(v7) @signature `Lv1/r2;.r:()V` @kind interface;
  #L48e5f4.  v4:= v4 + 1;
  #L48e5f8.  goto L48e5b0;
  #L48e5fa.  v3:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e5fe.  v4:= v3.`v1.i2.g` @type ^`boolean` @kind boolean;
  #L48e602.  if v4 != 0 then goto L48e628;
  #L48e606.  v3:= v3.`v1.i2.q` @type ^`long` @kind wide;
  #L48e60a.  v7:= 500000L;
  #L48e610.  v9:= lcmp(v3, v7);
  #L48e614.  if v9 >= 0 then goto L48e628;
  #L48e618.  call temp:= `Q`(v16) @signature `Lv1/f1;.Q:()Z` @kind direct;
  #L48e61e.  v3:= temp;
  #L48e620.  if v3 == 0 then goto L48e628;
  #L48e624.  v3:= 1I;
  #L48e626.  goto L48e62a;
  #L48e628.  v3:= 0I;
  #L48e62a.  if v3 != 0 then goto L48e634;
  #L48e62e.  v0.`v1.f1.d0` @type ^`long` := v13 @kind wide;
  #L48e632.  goto L48e664;
  #L48e634.  v3:= v0.`v1.f1.d0` @type ^`long` @kind wide;
  #L48e638.  v7:= lcmp(v3, v13);
  #L48e63c.  v3:= v0.`v1.f1.E` @type ^`s3.c` @kind object;
  #L48e640.  call temp:= `b`(v3) @signature `Ls3/c;.b:()J` @kind interface;
  #L48e646.  v3:= temp @kind wide;
  #L48e648.  if v7 != 0 then goto L48e652;
  #L48e64c.  v0.`v1.f1.d0` @type ^`long` := v3 @kind wide;
  #L48e650.  goto L48e664;
  #L48e652.  v7:= v0.`v1.f1.d0` @type ^`long` @kind wide;
  #L48e656.  v3:= v3 - v7 @kind long;
  #L48e658.  v7:= 4000L;
  #L48e65c.  v9:= lcmp(v3, v7);
  #L48e660.  if v9 >= 0 then goto L48e6fa;
  #L48e664.  call temp:= `c1`(v16) @signature `Lv1/f1;.c1:()Z` @kind direct;
  #L48e66a.  v3:= temp;
  #L48e66c.  if v3 == 0 then goto L48e680;
  #L48e670.  v3:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e674.  v3:= v3.`v1.i2.e` @type ^`int`;
  #L48e678.  if v3 != v5 then goto L48e680;
  #L48e67c.  v3:= 1I;
  #L48e67e.  goto L48e682;
  #L48e680.  v3:= 0I;
  #L48e682.  v4:= v0.`v1.f1.W` @type ^`boolean` @kind boolean;
  #L48e686.  if v4 == 0 then goto L48e69a;
  #L48e68a.  v4:= v0.`v1.f1.V` @type ^`boolean` @kind boolean;
  #L48e68e.  if v4 == 0 then goto L48e69a;
  #L48e692.  if v3 == 0 then goto L48e69a;
  #L48e696.  v15:= 1I;
  #L48e698.  goto L48e69c;
  #L48e69a.  v15:= 0I;
  #L48e69c.  v4:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e6a0.  v7:= v4.`v1.i2.o` @type ^`boolean` @kind boolean;
  #L48e6a4.  if v7 == v15 then goto L48e6b4;
  #L48e6a8.  call temp:= `h`(v4, v15) @signature `Lv1/i2;.h:(Z)Lv1/i2;` @kind virtual;
  #L48e6ae.  v4:= temp @kind object;
  #L48e6b0.  v0.`v1.f1.L` @type ^`v1.i2` := v4 @kind object;
  #L48e6b4.  v0.`v1.f1.V` @type ^`boolean` := v12 @kind boolean;
  #L48e6b8.  if v15 != 0 then goto L48e6f8;
  #L48e6bc.  v4:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e6c0.  v4:= v4.`v1.i2.e` @type ^`int`;
  #L48e6c4.  if v4 != v6 then goto L48e6ca;
  #L48e6c8.  goto L48e6f8;
  #L48e6ca.  if v3 != 0 then goto L48e6e8;
  #L48e6ce.  v3:= 2I;
  #L48e6d0.  if v4 != v3 then goto L48e6d6;
  #L48e6d4.  goto L48e6e8;
  #L48e6d6.  if v4 != v5 then goto L48e6f2;
  #L48e6da.  v3:= v0.`v1.f1.X` @type ^`int`;
  #L48e6de.  if v3 == 0 then goto L48e6f2;
  #L48e6e2.  v3:= 1000L;
  #L48e6e6.  goto L48e6ec;
  #L48e6e8.  v3:= 10L;
  #L48e6ec.  call `A0`(v0, v1, v3) @signature `Lv1/f1;.A0:(JJ)V` @kind direct;
  #L48e6f2.  call `c`() @signature `Ls3/i0;.c:()V` @kind static;
  #L48e6f8.  return @kind void;
  #L48e6fa.  v1:= new `java.lang.IllegalStateException`;
  #L48e6fe.  v2:= "Playback stuck buffering and not loading" @kind object;
  #L48e702.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48e708.  throw v1;
  #L48e70a.  return @kind void;
}
procedure `boolean` `p0`(`v1.f1` v15 @kind this) @signature `Lv1/f1;.p0:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L48d13c.  v0:= v15.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48d140.  call temp:= `q`(v0) @signature `Lv1/a2;.q:()Lv1/x1;` @kind virtual;
  #L48d146.  v0:= temp @kind object;
  #L48d148.  call temp:= `o`(v0) @signature `Lv1/x1;.o:()Lq3/b0;` @kind virtual;
  #L48d14e.  v1:= temp @kind object;
  #L48d150.  v2:= 0I;
  #L48d152.  v3:= 0I;
  #L48d154.  v4:= 0I;
  #L48d156.  v5:= v15.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48d15a.  v6:= length @variable v5;
  #L48d15c.  v7:= 1I;
  #L48d15e.  if v3 >= v6 then goto L48d1f8;
  #L48d162.  v8:= v5[v3] @kind object;
  #L48d166.  call temp:= `R`(v8) @signature `Lv1/f1;.R:(Lv1/r2;)Z` @kind static;
  #L48d16c.  v5:= temp;
  #L48d16e.  if v5 != 0 then goto L48d174;
  #L48d172.  goto L48d1f2;
  #L48d174.  call temp:= `g`(v8) @signature `Lv1/r2;.g:()Lx2/n0;` @kind interface;
  #L48d17a.  v5:= temp @kind object;
  #L48d17c.  v6:= v0.`v1.x1.c` @type ^`x2.n0`[] @kind object;
  #L48d180.  v6:= v6[v3] @kind object;
  #L48d184.  if v5 == v6 then goto L48d18c;
  #L48d188.  v5:= 1I;
  #L48d18a.  goto L48d18e;
  #L48d18c.  v5:= 0I;
  #L48d18e.  call temp:= `c`(v1, v3) @signature `Lq3/b0;.c:(I)Z` @kind virtual;
  #L48d194.  v6:= temp;
  #L48d196.  if v6 == 0 then goto L48d1a0;
  #L48d19a.  if v5 != 0 then goto L48d1a0;
  #L48d19e.  goto L48d1f2;
  #L48d1a0.  call temp:= `u`(v8) @signature `Lv1/r2;.u:()Z` @kind interface;
  #L48d1a6.  v5:= temp;
  #L48d1a8.  if v5 != 0 then goto L48d1dc;
  #L48d1ac.  v5:= v1.`q3.b0.c` @type ^`q3.s`[] @kind object;
  #L48d1b0.  v5:= v5[v3] @kind object;
  #L48d1b4.  call temp:= `y`(v5) @signature `Lv1/f1;.y:(Lq3/s;)[Lv1/j1;` @kind static;
  #L48d1ba.  v9:= temp @kind object;
  #L48d1bc.  v5:= v0.`v1.x1.c` @type ^`x2.n0`[] @kind object;
  #L48d1c0.  v10:= v5[v3] @kind object;
  #L48d1c4.  call temp:= `m`(v0) @signature `Lv1/x1;.m:()J` @kind virtual;
  #L48d1ca.  v11:= temp @kind wide;
  #L48d1cc.  call temp:= `l`(v0) @signature `Lv1/x1;.l:()J` @kind virtual;
  #L48d1d2.  v13:= temp @kind wide;
  #L48d1d4.  call `k`(v8, v9, v10, v11, v13) @signature `Lv1/r2;.k:([Lv1/j1;Lx2/n0;JJ)V` @kind interface;
  #L48d1da.  goto L48d1f2;
  #L48d1dc.  call temp:= `b`(v8) @signature `Lv1/r2;.b:()Z` @kind interface;
  #L48d1e2.  v5:= temp;
  #L48d1e4.  if v5 == 0 then goto L48d1f0;
  #L48d1e8.  call `o`(v15, v8) @signature `Lv1/f1;.o:(Lv1/r2;)V` @kind direct;
  #L48d1ee.  goto L48d1f2;
  #L48d1f0.  v4:= 1I;
  #L48d1f2.  v3:= v3 + 1;
  #L48d1f6.  goto L48d156;
  #L48d1f8.  v0:= v4 ^~ 1;
  #L48d1fc.  return v0;
}
procedure `void` `p1`(`v1.f1` v6 @kind this, `l5.o` v7 @kind object, `long` v8 ) @signature `Lv1/f1;.p1:(Ll5/o;J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L490e30.  @monitorenter v6
  #L490e32.  v0:= v6.`v1.f1.E` @type ^`s3.c` @kind object;
  #L490e36.  call temp:= `b`(v0) @signature `Ls3/c;.b:()J` @kind interface;
  #L490e3c.  v0:= temp @kind wide;
  #L490e3e.  v0:= v0 + v8 @kind long;
  #L490e40.  v2:= 0I;
  #L490e42.  call temp:= `get`(v7) @signature `Ll5/o;.get:()Ljava/lang/Object;` @kind interface;
  #L490e48.  v3:= temp @kind object;
  #L490e4a.  v3:= (`java.lang.Boolean`) v3 @kind object;
  #L490e4e.  call temp:= `booleanValue`(v3) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L490e54.  v3:= temp;
  #L490e56.  if v3 != 0 then goto L490e8e;
  #L490e5a.  v3:= 0L;
  #L490e5e.  v5:= lcmp(v8, v3);
  #L490e62.  if v5 <= 0 then goto L490e8e;
  #L490e66.  v3:= v6.`v1.f1.E` @type ^`s3.c` @kind object;
  #L490e6a.  call `d`(v3) @signature `Ls3/c;.d:()V` @kind interface;
  #L490e70.  call `wait`(v6, v8) @signature `Ljava/lang/Object;.wait:(J)V` @kind virtual;
  #L490e76.  goto L490e7c;
  #L490e78.  v8:= 1I;
  #L490e7a.  v2:= 1I;
  #L490e7c.  v8:= v6.`v1.f1.E` @type ^`s3.c` @kind object;
  #L490e80.  call temp:= `b`(v8) @signature `Ls3/c;.b:()J` @kind interface;
  #L490e86.  v8:= temp @kind wide;
  #L490e88.  v8:= v0 - v8 @kind long;
  #L490e8c.  goto L490e42;
  #L490e8e.  if v2 == 0 then goto L490ea0;
  #L490e92.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L490e98.  v7:= temp @kind object;
  #L490e9a.  call `interrupt`(v7) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L490ea0.  @monitorexit v6
  #L490ea2.  return @kind void;
  #L490ea4.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L490ea6.  @monitorexit v6
  #L490ea8.  throw v7;
  catch `java.lang.Throwable` @[L490e32..L490e56] goto L490ea4;
  catch `java.lang.InterruptedException` @[L490e66..L490e76] goto L490e78;
  catch `java.lang.Throwable` @[L490e66..L490e76] goto L490ea4;
  catch `java.lang.Throwable` @[L490e7c..L490ea0] goto L490ea4;
}
procedure `void` `q`(`v1.f1` v17 @kind this, `int` v18 , `boolean` v19 ) @signature `Lv1/f1;.q:(IZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L48e71c.  v0:= v17 @kind object;
  #L48e720.  v1:= v0.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48e724.  v1:= v1[v18] @kind object;
  #L48e728.  call temp:= `R`(v1) @signature `Lv1/f1;.R:(Lv1/r2;)Z` @kind static;
  #L48e72e.  v2:= temp;
  #L48e730.  if v2 == 0 then goto L48e736;
  #L48e734.  return @kind void;
  #L48e736.  v2:= v0.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48e73a.  call temp:= `q`(v2) @signature `Lv1/a2;.q:()Lv1/x1;` @kind virtual;
  #L48e740.  v2:= temp @kind object;
  #L48e742.  v3:= v0.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48e746.  call temp:= `p`(v3) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48e74c.  v3:= temp @kind object;
  #L48e74e.  v4:= 0I;
  #L48e750.  v5:= 1I;
  #L48e752.  if v2 != v3 then goto L48e75a;
  #L48e756.  v9:= 1I;
  #L48e758.  goto L48e75c;
  #L48e75a.  v9:= 0I;
  #L48e75c.  call temp:= `o`(v2) @signature `Lv1/x1;.o:()Lq3/b0;` @kind virtual;
  #L48e762.  v3:= temp @kind object;
  #L48e764.  v6:= v3.`q3.b0.b` @type ^`v1.u2`[] @kind object;
  #L48e768.  v6:= v6[v18] @kind object;
  #L48e76c.  v3:= v3.`q3.b0.c` @type ^`q3.s`[] @kind object;
  #L48e770.  v3:= v3[v18] @kind object;
  #L48e774.  call temp:= `y`(v3) @signature `Lv1/f1;.y:(Lq3/s;)[Lv1/j1;` @kind static;
  #L48e77a.  v7:= temp @kind object;
  #L48e77c.  call temp:= `c1`(v17) @signature `Lv1/f1;.c1:()Z` @kind direct;
  #L48e782.  v3:= temp;
  #L48e784.  if v3 == 0 then goto L48e79a;
  #L48e788.  v3:= v0.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48e78c.  v3:= v3.`v1.i2.e` @type ^`int`;
  #L48e790.  v8:= 3I;
  #L48e792.  if v3 != v8 then goto L48e79a;
  #L48e796.  v14:= 1I;
  #L48e798.  goto L48e79c;
  #L48e79a.  v14:= 0I;
  #L48e79c.  if v19 != 0 then goto L48e7a8;
  #L48e7a0.  if v14 == 0 then goto L48e7a8;
  #L48e7a4.  v8:= 1I;
  #L48e7a6.  goto L48e7aa;
  #L48e7a8.  v8:= 0I;
  #L48e7aa.  v3:= v0.`v1.f1.X` @type ^`int`;
  #L48e7ae.  v3:= v3 + v5 @kind int;
  #L48e7b0.  v0.`v1.f1.X` @type ^`int` := v3;
  #L48e7b4.  v3:= v0.`v1.f1.p` @type ^`java.util.Set` @kind object;
  #L48e7b8.  call temp:= `add`(v3, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L48e7be.  v3:= v2.`v1.x1.c` @type ^`x2.n0`[] @kind object;
  #L48e7c2.  v5:= v3[v18] @kind object;
  #L48e7c6.  v10:= v0.`v1.f1.Z` @type ^`long` @kind wide;
  #L48e7ca.  call temp:= `m`(v2) @signature `Lv1/x1;.m:()J` @kind virtual;
  #L48e7d0.  v12:= temp @kind wide;
  #L48e7d2.  call temp:= `l`(v2) @signature `Lv1/x1;.l:()J` @kind virtual;
  #L48e7d8.  v15:= temp @kind wide;
  #L48e7da.  v2:= v1 @kind object;
  #L48e7dc.  v3:= v6 @kind object;
  #L48e7de.  v4:= v7 @kind object;
  #L48e7e0.  v6:= v10 @kind wide;
  #L48e7e2.  v10:= v12 @kind wide;
  #L48e7e4.  v12:= v15 @kind wide;
  #L48e7e6.  call `p`(v2, v3, v4, v5, v6, v8, v9, v10, v12) @signature `Lv1/r2;.p:(Lv1/u2;[Lv1/j1;Lx2/n0;JZZJJ)V` @kind interface;
  #L48e7ec.  v2:= 11I;
  #L48e7f0.  v3:= new `v1.f1$a`;
  #L48e7f4.  call `<init>`(v3, v0) @signature `Lv1/f1$a;.<init>:(Lv1/f1;)V` @kind direct;
  #L48e7fa.  call `o`(v1, v2, v3) @signature `Lv1/m2$b;.o:(ILjava/lang/Object;)V` @kind interface;
  #L48e800.  v2:= v0.`v1.f1.C` @type ^`v1.k` @kind object;
  #L48e804.  call `b`(v2, v1) @signature `Lv1/k;.b:(Lv1/r2;)V` @kind virtual;
  #L48e80a.  if v14 == 0 then goto L48e814;
  #L48e80e.  call `start`(v1) @signature `Lv1/r2;.start:()V` @kind interface;
  #L48e814.  return @kind void;
}
procedure `void` `q0`(`v1.f1` v19 @kind this) @signature `Lv1/f1;.q0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L48f954.  v10:= v19 @kind object;
  #L48f958.  v0:= v10.`v1.f1.C` @type ^`v1.k` @kind object;
  #L48f95c.  call temp:= `i`(v0) @signature `Lv1/k;.i:()Lv1/j2;` @kind virtual;
  #L48f962.  v0:= temp @kind object;
  #L48f964.  v0:= v0.`v1.j2.o` @type ^`float`;
  #L48f968.  v1:= v10.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f96c.  call temp:= `p`(v1) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48f972.  v1:= temp @kind object;
  #L48f974.  v2:= v10.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f978.  call temp:= `q`(v2) @signature `Lv1/a2;.q:()Lv1/x1;` @kind virtual;
  #L48f97e.  v2:= temp @kind object;
  #L48f980.  v3:= 1I;
  #L48f982.  if v1 == 0 then goto L48fb36;
  #L48f986.  v4:= v1.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L48f98a.  if v4 != 0 then goto L48f992;
  #L48f98e.  goto L48fb36;
  #L48f992.  v4:= v10.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48f996.  v4:= v4.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48f99a.  call temp:= `v`(v1, v0, v4) @signature `Lv1/x1;.v:(FLv1/d3;)Lq3/b0;` @kind virtual;
  #L48f9a0.  v13:= temp @kind object;
  #L48f9a2.  call temp:= `o`(v1) @signature `Lv1/x1;.o:()Lq3/b0;` @kind virtual;
  #L48f9a8.  v4:= temp @kind object;
  #L48f9aa.  call temp:= `a`(v13, v4) @signature `Lq3/b0;.a:(Lq3/b0;)Z` @kind virtual;
  #L48f9b0.  v4:= temp;
  #L48f9b2.  v9:= 0I;
  #L48f9b4.  if v4 != 0 then goto L48fb20;
  #L48f9b8.  v8:= 4I;
  #L48f9ba.  v0:= v10.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f9be.  if v3 == 0 then goto L48fabe;
  #L48f9c2.  call temp:= `p`(v0) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48f9c8.  v6:= temp @kind object;
  #L48f9ca.  v0:= v10.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48f9ce.  call temp:= `z`(v0, v6) @signature `Lv1/a2;.z:(Lv1/x1;)Z` @kind virtual;
  #L48f9d4.  v16:= temp;
  #L48f9d6.  v0:= v10.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48f9da.  v0:= length @variable v0;
  #L48f9dc.  v7:= new `boolean`[v0];
  #L48f9e0.  v0:= v10.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48f9e4.  v14:= v0.`v1.i2.r` @type ^`long` @kind wide;
  #L48f9e8.  v12:= v6 @kind object;
  #L48f9ea.  v17:= v7 @kind object;
  #L48f9ee.  call temp:= `b`(v12, v13, v14, v16, v17) @signature `Lv1/x1;.b:(Lq3/b0;JZ[Z)J` @kind virtual;
  #L48f9f4.  v12:= temp @kind wide;
  #L48f9f6.  v0:= v10.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48f9fa.  v1:= v0.`v1.i2.e` @type ^`int`;
  #L48f9fe.  if v1 == v8 then goto L48fa12;
  #L48fa02.  v0:= v0.`v1.i2.r` @type ^`long` @kind wide;
  #L48fa06.  v2:= lcmp(v12, v0);
  #L48fa0a.  if v2 == 0 then goto L48fa12;
  #L48fa0e.  v14:= 1I;
  #L48fa10.  goto L48fa14;
  #L48fa12.  v14:= 0I;
  #L48fa14.  v0:= v10.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48fa18.  v1:= v0.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48fa1c.  v4:= v0.`v1.i2.c` @type ^`long` @kind wide;
  #L48fa20.  v2:= v0.`v1.i2.d` @type ^`long` @kind wide;
  #L48fa24.  v15:= 5I;
  #L48fa26.  v0:= v19 @kind object;
  #L48fa2a.  v16:= v2 @kind wide;
  #L48fa2e.  v2:= v12 @kind wide;
  #L48fa30.  v11:= v6 @kind object;
  #L48fa32.  v18:= v7 @kind object;
  #L48fa36.  v6:= v16 @kind wide;
  #L48fa3a.  v8:= v14;
  #L48fa3c.  v9:= v15;
  #L48fa3e.  call temp:= `M`(v0, v1, v2, v4, v6, v8, v9) @signature `Lv1/f1;.M:(Lx2/u$b;JJJZI)Lv1/i2;` @kind direct;
  #L48fa44.  v0:= temp @kind object;
  #L48fa46.  v10.`v1.f1.L` @type ^`v1.i2` := v0 @kind object;
  #L48fa4a.  if v14 == 0 then goto L48fa54;
  #L48fa4e.  call `t0`(v10, v12) @signature `Lv1/f1;.t0:(J)V` @kind direct;
  #L48fa54.  v0:= v10.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48fa58.  v0:= length @variable v0;
  #L48fa5a.  v0:= new `boolean`[v0];
  #L48fa5e.  v9:= 0I;
  #L48fa60.  v1:= v10.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48fa64.  v2:= length @variable v1;
  #L48fa66.  if v9 >= v2 then goto L48fab6;
  #L48fa6a.  v1:= v1[v9] @kind object;
  #L48fa6e.  call temp:= `R`(v1) @signature `Lv1/f1;.R:(Lv1/r2;)Z` @kind static;
  #L48fa74.  v2:= temp;
  #L48fa76.  v0[v9]:= v2 @kind boolean;
  #L48fa7a.  v2:= v11.`v1.x1.c` @type ^`x2.n0`[] @kind object;
  #L48fa7e.  v2:= v2[v9] @kind object;
  #L48fa82.  v3:= v0[v9] @kind boolean;
  #L48fa86.  if v3 == 0 then goto L48fab0;
  #L48fa8a.  call temp:= `g`(v1) @signature `Lv1/r2;.g:()Lx2/n0;` @kind interface;
  #L48fa90.  v3:= temp @kind object;
  #L48fa92.  if v2 == v3 then goto L48fa9e;
  #L48fa96.  call `o`(v10, v1) @signature `Lv1/f1;.o:(Lv1/r2;)V` @kind direct;
  #L48fa9c.  goto L48fab0;
  #L48fa9e.  v2:= v18[v9] @kind boolean;
  #L48faa2.  if v2 == 0 then goto L48fab0;
  #L48faa6.  v2:= v10.`v1.f1.Z` @type ^`long` @kind wide;
  #L48faaa.  call `t`(v1, v2) @signature `Lv1/r2;.t:(J)V` @kind interface;
  #L48fab0.  v9:= v9 + 1;
  #L48fab4.  goto L48fa60;
  #L48fab6.  call `s`(v10, v0) @signature `Lv1/f1;.s:([Z)V` @kind direct;
  #L48fabc.  goto L48faf0;
  #L48fabe.  call temp:= `z`(v0, v1) @signature `Lv1/a2;.z:(Lv1/x1;)Z` @kind virtual;
  #L48fac4.  v0:= v1.`v1.x1.d` @type ^`boolean` @kind boolean;
  #L48fac8.  if v0 == 0 then goto L48faf0;
  #L48facc.  v0:= v1.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48fad0.  v2:= v0.`v1.y1.b` @type ^`long` @kind wide;
  #L48fad4.  v4:= v10.`v1.f1.Z` @type ^`long` @kind wide;
  #L48fad8.  call temp:= `y`(v1, v4) @signature `Lv1/x1;.y:(J)J` @kind virtual;
  #L48fade.  v4:= temp @kind wide;
  #L48fae0.  call temp:= `max`(v2, v4) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L48fae6.  v2:= temp @kind wide;
  #L48fae8.  v4:= 0I;
  #L48faea.  call temp:= `a`(v1, v13, v2, v4) @signature `Lv1/x1;.a:(Lq3/b0;JZ)J` @kind virtual;
  #L48faf0.  v5:= 1I;
  #L48faf2.  call `H`(v10, v5) @signature `Lv1/f1;.H:(Z)V` @kind direct;
  #L48faf8.  v0:= v10.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48fafc.  v0:= v0.`v1.i2.e` @type ^`int`;
  #L48fb00.  v1:= 4I;
  #L48fb02.  if v0 == v1 then goto L48fb1e;
  #L48fb06.  call `W`(v19) @signature `Lv1/f1;.W:()V` @kind direct;
  #L48fb0c.  call `m1`(v19) @signature `Lv1/f1;.m1:()V` @kind direct;
  #L48fb12.  v0:= v10.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48fb16.  v1:= 2I;
  #L48fb18.  call temp:= `c`(v0, v1) @signature `Ls3/m;.c:(I)Z` @kind interface;
  #L48fb1e.  return @kind void;
  #L48fb20.  v4:= 0I;
  #L48fb22.  v5:= 1I;
  #L48fb24.  if v1 != v2 then goto L48fb2a;
  #L48fb28.  v3:= 0I;
  #L48fb2a.  call temp:= `j`(v1) @signature `Lv1/x1;.j:()Lv1/x1;` @kind virtual;
  #L48fb30.  v1:= temp @kind object;
  #L48fb32.  goto L48f982;
  #L48fb36.  return @kind void;
}
procedure `void` `r`(`v1.f1` v1 @kind this) @signature `Lv1/f1;.r:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L48e828.  v0:= v1.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48e82c.  v0:= length @variable v0;
  #L48e82e.  v0:= new `boolean`[v0];
  #L48e832.  call `s`(v1, v0) @signature `Lv1/f1;.s:([Z)V` @kind direct;
  #L48e838.  return @kind void;
}
procedure `void` `r0`(`v1.f1` v28 @kind this, `boolean` v29 , `boolean` v30 , `boolean` v31 , `boolean` v32 ) @signature `Lv1/f1;.r0:(ZZZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;

  #L48fb48.  v1:= v28 @kind object;
  #L48fb4c.  v0:= v1.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48fb50.  v2:= 2I;
  #L48fb52.  call `f`(v0, v2) @signature `Ls3/m;.f:(I)V` @kind interface;
  #L48fb58.  v2:= 0I;
  #L48fb5a.  v1.`v1.f1.c0` @type ^`v1.n` := v2 @kind object;
  #L48fb5e.  v3:= 0I;
  #L48fb60.  v1.`v1.f1.Q` @type ^`boolean` := v3 @kind boolean;
  #L48fb64.  v0:= v1.`v1.f1.C` @type ^`v1.k` @kind object;
  #L48fb68.  call `g`(v0) @signature `Lv1/k;.g:()V` @kind virtual;
  #L48fb6e.  v4:= 1000000000000L;
  #L48fb78.  v1.`v1.f1.Z` @type ^`long` := v4 @kind wide;
  #L48fb7c.  v4:= v1.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48fb80.  v5:= length @variable v4;
  #L48fb82.  v6:= 0I;
  #L48fb84.  v7:= "ExoPlayerImplInternal" @kind object;
  #L48fb88.  if v6 >= v5 then goto L48fbae;
  #L48fb8c.  v0:= v4[v6] @kind object;
  #L48fb90.  call `o`(v1, v0) @signature `Lv1/f1;.o:(Lv1/r2;)V` @kind direct;
  #L48fb96.  goto L48fba8;
  #L48fb98.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L48fb9a.  goto L48fb9e;
  #L48fb9c.  v0:= Exception @type ^`v1.n` @kind object;
  #L48fb9e.  v8:= "Disable failed." @kind object;
  #L48fba2.  call `d`(v7, v8, v0) @signature `Ls3/q;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L48fba8.  v6:= v6 + 1;
  #L48fbac.  goto L48fb84;
  #L48fbae.  if v29 == 0 then goto L48fbee;
  #L48fbb2.  v4:= v1.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48fbb6.  v5:= length @variable v4;
  #L48fbb8.  v6:= 0I;
  #L48fbba.  if v6 >= v5 then goto L48fbee;
  #L48fbbe.  v0:= v4[v6] @kind object;
  #L48fbc2.  v8:= v1.`v1.f1.p` @type ^`java.util.Set` @kind object;
  #L48fbc6.  call temp:= `remove`(v8, v0) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L48fbcc.  v8:= temp;
  #L48fbce.  if v8 == 0 then goto L48fbe8;
  #L48fbd2.  call `c`(v0) @signature `Lv1/r2;.c:()V` @kind interface;
  #L48fbd8.  goto L48fbe8;
  #L48fbda.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L48fbdc.  v8:= v0 @kind object;
  #L48fbde.  v0:= "Reset failed." @kind object;
  #L48fbe2.  call `d`(v7, v0, v8) @signature `Ls3/q;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L48fbe8.  v6:= v6 + 1;
  #L48fbec.  goto L48fbba;
  #L48fbee.  v1.`v1.f1.X` @type ^`int` := v3;
  #L48fbf2.  v0:= v1.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48fbf6.  v4:= v0.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48fbfa.  v5:= v0.`v1.i2.r` @type ^`long` @kind wide;
  #L48fbfe.  v0:= v1.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48fc02.  v0:= v0.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48fc06.  call temp:= `b`(v0) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L48fc0c.  v0:= temp;
  #L48fc0e.  if v0 != 0 then goto L48fc32;
  #L48fc12.  v0:= v1.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48fc16.  v7:= v1.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L48fc1a.  call temp:= `T`(v0, v7) @signature `Lv1/f1;.T:(Lv1/i2;Lv1/d3$b;)Z` @kind static;
  #L48fc20.  v0:= temp;
  #L48fc22.  if v0 == 0 then goto L48fc28;
  #L48fc26.  goto L48fc32;
  #L48fc28.  v0:= v1.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48fc2c.  v7:= v0.`v1.i2.r` @type ^`long` @kind wide;
  #L48fc30.  goto L48fc3a;
  #L48fc32.  v0:= v1.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48fc36.  v7:= v0.`v1.i2.c` @type ^`long` @kind wide;
  #L48fc3a.  if v30 == 0 then goto L48fc94;
  #L48fc3e.  v1.`v1.f1.Y` @type ^`v1.f1$h` := v2 @kind object;
  #L48fc42.  v0:= v1.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48fc46.  v0:= v0.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48fc4a.  call temp:= `B`(v1, v0) @signature `Lv1/f1;.B:(Lv1/d3;)Landroid/util/Pair;` @kind direct;
  #L48fc50.  v0:= temp @kind object;
  #L48fc52.  v4:= v0.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48fc56.  v4:= (`x2.u$b`) v4 @kind object;
  #L48fc5a.  v0:= v0.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L48fc5e.  v0:= (`java.lang.Long`) v0 @kind object;
  #L48fc62.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L48fc68.  v5:= temp @kind wide;
  #L48fc6a.  v7:= -4.9E-324D;
  #L48fc74.  v0:= v1.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48fc78.  v0:= v0.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48fc7c.  call temp:= `equals`(v4, v0) @signature `Lx2/s;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48fc82.  v0:= temp;
  #L48fc84.  if v0 != 0 then goto L48fc94;
  #L48fc88.  v0:= 1I;
  #L48fc8a.  v17:= v4 @kind object;
  #L48fc8e.  v25:= v5 @kind wide;
  #L48fc92.  goto L48fc9e;
  #L48fc94.  v17:= v4 @kind object;
  #L48fc98.  v25:= v5 @kind wide;
  #L48fc9c.  v0:= 0I;
  #L48fc9e.  v4:= v1.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48fca2.  call `f`(v4) @signature `Lv1/a2;.f:()V` @kind virtual;
  #L48fca8.  v1.`v1.f1.R` @type ^`boolean` := v3 @kind boolean;
  #L48fcac.  v3:= new `v1.i2`;
  #L48fcb0.  v4:= v1.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48fcb4.  v5:= v4.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48fcb8.  v11:= v4.`v1.i2.e` @type ^`int`;
  #L48fcbc.  if v32 == 0 then goto L48fcc2;
  #L48fcc0.  goto L48fcc6;
  #L48fcc2.  v2:= v4.`v1.i2.f` @type ^`v1.n` @kind object;
  #L48fcc6.  v12:= v2 @kind object;
  #L48fcc8.  v13:= 0I;
  #L48fcca.  if v0 == 0 then goto L48fcd4;
  #L48fcce.  v2:= `@@x2.v0.r` @type ^`x2.v0` @kind object;
  #L48fcd2.  goto L48fcd8;
  #L48fcd4.  v2:= v4.`v1.i2.h` @type ^`x2.v0` @kind object;
  #L48fcd8.  v14:= v2 @kind object;
  #L48fcda.  if v0 == 0 then goto L48fce4;
  #L48fcde.  v2:= v1.`v1.f1.s` @type ^`q3.b0` @kind object;
  #L48fce2.  goto L48fce8;
  #L48fce4.  v2:= v4.`v1.i2.i` @type ^`q3.b0` @kind object;
  #L48fce8.  v15:= v2 @kind object;
  #L48fcea.  if v0 == 0 then goto L48fcf8;
  #L48fcee.  call temp:= `a0`() @signature `Lm5/q;.a0:()Lm5/q;` @kind static;
  #L48fcf4.  v0:= temp @kind object;
  #L48fcf6.  goto L48fcfc;
  #L48fcf8.  v0:= v4.`v1.i2.j` @type ^`java.util.List` @kind object;
  #L48fcfc.  v16:= v0 @kind object;
  #L48fd00.  v0:= v1.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48fd04.  v2:= v0.`v1.i2.l` @type ^`boolean` @kind boolean;
  #L48fd08.  v18:= v2;
  #L48fd0c.  v2:= v0.`v1.i2.m` @type ^`int`;
  #L48fd10.  v19:= v2;
  #L48fd14.  v0:= v0.`v1.i2.n` @type ^`v1.j2` @kind object;
  #L48fd18.  v20:= v0 @kind object;
  #L48fd1c.  v23:= 0L;
  #L48fd20.  v27:= 0I;
  #L48fd24.  v4:= v3 @kind object;
  #L48fd26.  v6:= v17 @kind object;
  #L48fd2a.  v9:= v25 @kind wide;
  #L48fd2e.  v21:= v25 @kind wide;
  #L48fd32.  call `<init>`(v4, v5, v6, v7, v9, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v23, v25, v27) @signature `Lv1/i2;.<init>:(Lv1/d3;Lx2/u$b;JJILv1/n;ZLx2/v0;Lq3/b0;Ljava/util/List;Lx2/u$b;ZILv1/j2;JJJZ)V` @kind direct;
  #L48fd38.  v1.`v1.f1.L` @type ^`v1.i2` := v3 @kind object;
  #L48fd3c.  if v31 == 0 then goto L48fd4a;
  #L48fd40.  v0:= v1.`v1.f1.H` @type ^`v1.d2` @kind object;
  #L48fd44.  call `y`(v0) @signature `Lv1/d2;.y:()V` @kind virtual;
  #L48fd4a.  return @kind void;
  catch `v1.n` @[L48fb90..L48fb96] goto L48fb9c;
  catch `java.lang.RuntimeException` @[L48fb90..L48fb96] goto L48fb98;
  catch `java.lang.RuntimeException` @[L48fbd2..L48fbd8] goto L48fbda;
}
procedure `void` `s`(`v1.f1` v6 @kind this, `boolean`[] v7 @kind object) @signature `Lv1/f1;.s:([Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L48e84c.  v0:= v6.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48e850.  call temp:= `q`(v0) @signature `Lv1/a2;.q:()Lv1/x1;` @kind virtual;
  #L48e856.  v0:= temp @kind object;
  #L48e858.  call temp:= `o`(v0) @signature `Lv1/x1;.o:()Lq3/b0;` @kind virtual;
  #L48e85e.  v1:= temp @kind object;
  #L48e860.  v2:= 0I;
  #L48e862.  v3:= 0I;
  #L48e864.  v4:= v6.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48e868.  v4:= length @variable v4;
  #L48e86a.  if v3 >= v4 then goto L48e8a6;
  #L48e86e.  call temp:= `c`(v1, v3) @signature `Lq3/b0;.c:(I)Z` @kind virtual;
  #L48e874.  v4:= temp;
  #L48e876.  if v4 != 0 then goto L48e8a0;
  #L48e87a.  v4:= v6.`v1.f1.p` @type ^`java.util.Set` @kind object;
  #L48e87e.  v5:= v6.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48e882.  v5:= v5[v3] @kind object;
  #L48e886.  call temp:= `remove`(v4, v5) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L48e88c.  v4:= temp;
  #L48e88e.  if v4 == 0 then goto L48e8a0;
  #L48e892.  v4:= v6.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48e896.  v4:= v4[v3] @kind object;
  #L48e89a.  call `c`(v4) @signature `Lv1/r2;.c:()V` @kind interface;
  #L48e8a0.  v3:= v3 + 1;
  #L48e8a4.  goto L48e864;
  #L48e8a6.  v3:= v6.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48e8aa.  v3:= length @variable v3;
  #L48e8ac.  if v2 >= v3 then goto L48e8cc;
  #L48e8b0.  call temp:= `c`(v1, v2) @signature `Lq3/b0;.c:(I)Z` @kind virtual;
  #L48e8b6.  v3:= temp;
  #L48e8b8.  if v3 == 0 then goto L48e8c6;
  #L48e8bc.  v3:= v7[v2] @kind boolean;
  #L48e8c0.  call `q`(v6, v2, v3) @signature `Lv1/f1;.q:(IZ)V` @kind direct;
  #L48e8c6.  v2:= v2 + 1;
  #L48e8ca.  goto L48e8a6;
  #L48e8cc.  v7:= 1I;
  #L48e8ce.  v0.`v1.x1.g` @type ^`boolean` := v7 @kind boolean;
  #L48e8d2.  return @kind void;
}
procedure `void` `s0`(`v1.f1` v1 @kind this) @signature `Lv1/f1;.s0:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L48fd78.  v0:= v1.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48fd7c.  call temp:= `p`(v0) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48fd82.  v0:= temp @kind object;
  #L48fd84.  if v0 == 0 then goto L48fda0;
  #L48fd88.  v0:= v0.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48fd8c.  v0:= v0.`v1.y1.h` @type ^`boolean` @kind boolean;
  #L48fd90.  if v0 == 0 then goto L48fda0;
  #L48fd94.  v0:= v1.`v1.f1.O` @type ^`boolean` @kind boolean;
  #L48fd98.  if v0 == 0 then goto L48fda0;
  #L48fd9c.  v0:= 1I;
  #L48fd9e.  goto L48fda2;
  #L48fda0.  v0:= 0I;
  #L48fda2.  v1.`v1.f1.P` @type ^`boolean` := v0 @kind boolean;
  #L48fda6.  return @kind void;
}
procedure `void` `t`(`v1.f1` v2 @kind this, `v1.r2` v3 @kind object) @signature `Lv1/f1;.t:(Lv1/r2;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48e8e4.  call temp:= `getState`(v3) @signature `Lv1/r2;.getState:()I` @kind interface;
  #L48e8ea.  v0:= temp;
  #L48e8ec.  v1:= 2I;
  #L48e8ee.  if v0 != v1 then goto L48e8f8;
  #L48e8f2.  call `stop`(v3) @signature `Lv1/r2;.stop:()V` @kind interface;
  #L48e8f8.  return @kind void;
}
procedure `void` `t0`(`v1.f1` v4 @kind this, `long` v5 ) @signature `Lv1/f1;.t0:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48fdb8.  v0:= v4.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48fdbc.  call temp:= `p`(v0) @signature `Lv1/a2;.p:()Lv1/x1;` @kind virtual;
  #L48fdc2.  v0:= temp @kind object;
  #L48fdc4.  if v0 != 0 then goto L48fdd6;
  #L48fdc8.  v0:= 1000000000000L;
  #L48fdd2.  v5:= v5 + v0 @kind long;
  #L48fdd4.  goto L48fdde;
  #L48fdd6.  call temp:= `z`(v0, v5) @signature `Lv1/x1;.z:(J)J` @kind virtual;
  #L48fddc.  v5:= temp @kind wide;
  #L48fdde.  v4.`v1.f1.Z` @type ^`long` := v5 @kind wide;
  #L48fde2.  v0:= v4.`v1.f1.C` @type ^`v1.k` @kind object;
  #L48fde6.  call `c`(v0, v5) @signature `Lv1/k;.c:(J)V` @kind virtual;
  #L48fdec.  v5:= v4.`v1.f1.o` @type ^`v1.r2`[] @kind object;
  #L48fdf0.  v6:= length @variable v5;
  #L48fdf2.  v0:= 0I;
  #L48fdf4.  if v0 >= v6 then goto L48fe18;
  #L48fdf8.  v1:= v5[v0] @kind object;
  #L48fdfc.  call temp:= `R`(v1) @signature `Lv1/f1;.R:(Lv1/r2;)Z` @kind static;
  #L48fe02.  v2:= temp;
  #L48fe04.  if v2 == 0 then goto L48fe12;
  #L48fe08.  v2:= v4.`v1.f1.Z` @type ^`long` @kind wide;
  #L48fe0c.  call `t`(v1, v2) @signature `Lv1/r2;.t:(J)V` @kind interface;
  #L48fe12.  v0:= v0 + 1;
  #L48fe16.  goto L48fdf4;
  #L48fe18.  call `f0`(v4) @signature `Lv1/f1;.f0:()V` @kind direct;
  #L48fe1e.  return @kind void;
}
procedure `void` `u0`(`v1.d3` v4 @kind object, `v1.f1$d` v5 @kind object, `v1.d3$c` v6 @kind object, `v1.d3$b` v7 @kind object) @signature `Lv1/f1;.u0:(Lv1/d3;Lv1/f1$d;Lv1/d3$c;Lv1/d3$b;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48fe30.  v0:= v5.`v1.f1$d.r` @type ^`java.lang.Object` @kind object;
  #L48fe34.  call temp:= `h`(v4, v0, v7) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48fe3a.  v0:= temp @kind object;
  #L48fe3c.  v0:= v0.`v1.d3$b.q` @type ^`int`;
  #L48fe40.  call temp:= `n`(v4, v0, v6) @signature `Lv1/d3;.n:(ILv1/d3$c;)Lv1/d3$c;` @kind virtual;
  #L48fe46.  v6:= temp @kind object;
  #L48fe48.  v6:= v6.`v1.d3$c.D` @type ^`int`;
  #L48fe4c.  v0:= 1I;
  #L48fe4e.  call temp:= `g`(v4, v6, v7, v0) @signature `Lv1/d3;.g:(ILv1/d3$b;Z)Lv1/d3$b;` @kind virtual;
  #L48fe54.  v4:= temp @kind object;
  #L48fe56.  v4:= v4.`v1.d3$b.p` @type ^`java.lang.Object` @kind object;
  #L48fe5a.  v0:= v7.`v1.d3$b.r` @type ^`long` @kind wide;
  #L48fe5e.  v2:= -4.9E-324D;
  #L48fe68.  v7:= lcmp(v0, v2);
  #L48fe6c.  if v7 == 0 then goto L48fe78;
  #L48fe70.  v2:= 1L;
  #L48fe74.  v0:= v0 - v2 @kind long;
  #L48fe76.  goto L48fe82;
  #L48fe78.  v0:= 9223372036854775807L;
  #L48fe82.  call `d`(v5, v6, v0, v4) @signature `Lv1/f1$d;.d:(IJLjava/lang/Object;)V` @kind virtual;
  #L48fe88.  return @kind void;
}
procedure `boolean` `v0`(`v1.f1$d` v15 @kind object, `v1.d3` v16 @kind object, `v1.d3` v17 @kind object, `int` v18 , `boolean` v19 , `v1.d3$c` v20 @kind object, `v1.d3$b` v21 @kind object) @signature `Lv1/f1;.v0:(Lv1/f1$d;Lv1/d3;Lv1/d3;IZLv1/d3$c;Lv1/d3$b;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L48d210.  v0:= v15 @kind object;
  #L48d212.  v8:= v16 @kind object;
  #L48d216.  v1:= v17 @kind object;
  #L48d21a.  v9:= v20 @kind object;
  #L48d21e.  v10:= v21 @kind object;
  #L48d222.  v2:= v0.`v1.f1$d.r` @type ^`java.lang.Object` @kind object;
  #L48d226.  v11:= 0I;
  #L48d228.  v12:= 1I;
  #L48d22a.  v13:= -9223372036854775808L;
  #L48d22e.  if v2 != 0 then goto L48d2f2;
  #L48d232.  v1:= v0.`v1.f1$d.o` @type ^`v1.m2` @kind object;
  #L48d236.  call temp:= `f`(v1) @signature `Lv1/m2;.f:()J` @kind virtual;
  #L48d23c.  v1:= temp @kind wide;
  #L48d23e.  v3:= lcmp(v1, v13);
  #L48d242.  if v3 != 0 then goto L48d252;
  #L48d246.  v1:= -4.9E-324D;
  #L48d250.  goto L48d266;
  #L48d252.  v1:= v0.`v1.f1$d.o` @type ^`v1.m2` @kind object;
  #L48d256.  call temp:= `f`(v1) @signature `Lv1/m2;.f:()J` @kind virtual;
  #L48d25c.  v1:= temp @kind wide;
  #L48d25e.  call temp:= `A0`(v1) @signature `Ls3/l0;.A0:(J)J` @kind static;
  #L48d264.  v1:= temp @kind wide;
  #L48d266.  v3:= new `v1.f1$h`;
  #L48d26a.  v4:= v0.`v1.f1$d.o` @type ^`v1.m2` @kind object;
  #L48d26e.  call temp:= `h`(v4) @signature `Lv1/m2;.h:()Lv1/d3;` @kind virtual;
  #L48d274.  v4:= temp @kind object;
  #L48d276.  v5:= v0.`v1.f1$d.o` @type ^`v1.m2` @kind object;
  #L48d27a.  call temp:= `d`(v5) @signature `Lv1/m2;.d:()I` @kind virtual;
  #L48d280.  v5:= temp;
  #L48d282.  call `<init>`(v3, v4, v5, v1) @signature `Lv1/f1$h;.<init>:(Lv1/d3;IJ)V` @kind direct;
  #L48d288.  v4:= 0I;
  #L48d28a.  v1:= v16 @kind object;
  #L48d28e.  v2:= v3 @kind object;
  #L48d290.  v3:= v4;
  #L48d292.  v4:= v18;
  #L48d296.  v5:= v19;
  #L48d29a.  v6:= v20 @kind object;
  #L48d29e.  v7:= v21 @kind object;
  #L48d2a2.  call temp:= `y0`(v1, v2, v3, v4, v5, v6, v7) @signature `Lv1/f1;.y0:(Lv1/d3;Lv1/f1$h;ZIZLv1/d3$c;Lv1/d3$b;)Landroid/util/Pair;` @kind static;
  #L48d2a8.  v1:= temp @kind object;
  #L48d2aa.  if v1 != 0 then goto L48d2b0;
  #L48d2ae.  return v11;
  #L48d2b0.  v2:= v1.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48d2b4.  call temp:= `b`(v8, v2) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L48d2ba.  v2:= temp;
  #L48d2bc.  v3:= v1.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L48d2c0.  v3:= (`java.lang.Long`) v3 @kind object;
  #L48d2c4.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L48d2ca.  v3:= temp @kind wide;
  #L48d2cc.  v1:= v1.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48d2d0.  call `d`(v15, v2, v3, v1) @signature `Lv1/f1$d;.d:(IJLjava/lang/Object;)V` @kind virtual;
  #L48d2d6.  v1:= v0.`v1.f1$d.o` @type ^`v1.m2` @kind object;
  #L48d2da.  call temp:= `f`(v1) @signature `Lv1/m2;.f:()J` @kind virtual;
  #L48d2e0.  v1:= temp @kind wide;
  #L48d2e2.  v3:= lcmp(v1, v13);
  #L48d2e6.  if v3 != 0 then goto L48d2f0;
  #L48d2ea.  call `u0`(v8, v15, v9, v10) @signature `Lv1/f1;.u0:(Lv1/d3;Lv1/f1$d;Lv1/d3$c;Lv1/d3$b;)V` @kind static;
  #L48d2f0.  return v12;
  #L48d2f2.  call temp:= `b`(v8, v2) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L48d2f8.  v2:= temp;
  #L48d2fa.  v3:= -1I;
  #L48d2fc.  if v2 != v3 then goto L48d302;
  #L48d300.  return v11;
  #L48d302.  v3:= v0.`v1.f1$d.o` @type ^`v1.m2` @kind object;
  #L48d306.  call temp:= `f`(v3) @signature `Lv1/m2;.f:()J` @kind virtual;
  #L48d30c.  v3:= temp @kind wide;
  #L48d30e.  v5:= lcmp(v3, v13);
  #L48d312.  if v5 != 0 then goto L48d31e;
  #L48d316.  call `u0`(v8, v15, v9, v10) @signature `Lv1/f1;.u0:(Lv1/d3;Lv1/f1$d;Lv1/d3$c;Lv1/d3$b;)V` @kind static;
  #L48d31c.  return v12;
  #L48d31e.  v0.`v1.f1$d.p` @type ^`int` := v2;
  #L48d322.  v2:= v0.`v1.f1$d.r` @type ^`java.lang.Object` @kind object;
  #L48d326.  call temp:= `h`(v1, v2, v10) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48d32c.  v2:= v10.`v1.d3$b.t` @type ^`boolean` @kind boolean;
  #L48d330.  if v2 == 0 then goto L48d3ae;
  #L48d334.  v2:= v10.`v1.d3$b.q` @type ^`int`;
  #L48d338.  call temp:= `n`(v1, v2, v9) @signature `Lv1/d3;.n:(ILv1/d3$c;)Lv1/d3$c;` @kind virtual;
  #L48d33e.  v2:= temp @kind object;
  #L48d340.  v2:= v2.`v1.d3$c.C` @type ^`int`;
  #L48d344.  v3:= v0.`v1.f1$d.r` @type ^`java.lang.Object` @kind object;
  #L48d348.  call temp:= `b`(v1, v3) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L48d34e.  v1:= temp;
  #L48d350.  if v2 != v1 then goto L48d3ae;
  #L48d354.  v1:= v0.`v1.f1$d.q` @type ^`long` @kind wide;
  #L48d358.  call temp:= `p`(v21) @signature `Lv1/d3$b;.p:()J` @kind virtual;
  #L48d35e.  v3:= temp @kind wide;
  #L48d360.  v5:= v1 + v3 @kind long;
  #L48d364.  v1:= v0.`v1.f1$d.r` @type ^`java.lang.Object` @kind object;
  #L48d368.  call temp:= `h`(v8, v1, v10) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48d36e.  v1:= temp @kind object;
  #L48d370.  v4:= v1.`v1.d3$b.q` @type ^`int`;
  #L48d374.  v1:= v16 @kind object;
  #L48d378.  v2:= v20 @kind object;
  #L48d37c.  v3:= v21 @kind object;
  #L48d380.  call temp:= `j`(v1, v2, v3, v4, v5) @signature `Lv1/d3;.j:(Lv1/d3$c;Lv1/d3$b;IJ)Landroid/util/Pair;` @kind virtual;
  #L48d386.  v1:= temp @kind object;
  #L48d388.  v2:= v1.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48d38c.  call temp:= `b`(v8, v2) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L48d392.  v2:= temp;
  #L48d394.  v3:= v1.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L48d398.  v3:= (`java.lang.Long`) v3 @kind object;
  #L48d39c.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L48d3a2.  v3:= temp @kind wide;
  #L48d3a4.  v1:= v1.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48d3a8.  call `d`(v15, v2, v3, v1) @signature `Lv1/f1$d;.d:(IJLjava/lang/Object;)V` @kind virtual;
  #L48d3ae.  return v12;
}
procedure `m5.q` `w`(`v1.f1` v7 @kind this, `q3.s`[] v8 @kind object) @signature `Lv1/f1;.w:([Lq3/s;)Lm5/q;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L48da7c.  v0:= new `m5.q$a`;
  #L48da80.  call `<init>`(v0) @signature `Lm5/q$a;.<init>:()V` @kind direct;
  #L48da86.  v1:= length @variable v8;
  #L48da88.  v2:= 0I;
  #L48da8a.  v3:= 0I;
  #L48da8c.  v4:= 0I;
  #L48da8e.  if v3 >= v1 then goto L48dace;
  #L48da92.  v5:= v8[v3] @kind object;
  #L48da96.  if v5 == 0 then goto L48dac8;
  #L48da9a.  call temp:= `a`(v5, v2) @signature `Lq3/v;.a:(I)Lv1/j1;` @kind interface;
  #L48daa0.  v5:= temp @kind object;
  #L48daa2.  v5:= v5.`v1.j1.x` @type ^`n2.a` @kind object;
  #L48daa6.  if v5 != 0 then goto L48dac0;
  #L48daaa.  v5:= new `n2.a`;
  #L48daae.  v6:= new `n2.a$b`[v2];
  #L48dab2.  call `<init>`(v5, v6) @signature `Ln2/a;.<init>:([Ln2/a$b;)V` @kind direct;
  #L48dab8.  call temp:= `f`(v0, v5) @signature `Lm5/q$a;.f:(Ljava/lang/Object;)Lm5/q$a;` @kind virtual;
  #L48dabe.  goto L48dac8;
  #L48dac0.  call temp:= `f`(v0, v5) @signature `Lm5/q$a;.f:(Ljava/lang/Object;)Lm5/q$a;` @kind virtual;
  #L48dac6.  v4:= 1I;
  #L48dac8.  v3:= v3 + 1;
  #L48dacc.  goto L48da8e;
  #L48dace.  if v4 == 0 then goto L48dadc;
  #L48dad2.  call temp:= `h`(v0) @signature `Lm5/q$a;.h:()Lm5/q;` @kind virtual;
  #L48dad8.  v8:= temp @kind object;
  #L48dada.  goto L48dae4;
  #L48dadc.  call temp:= `a0`() @signature `Lm5/q;.a0:()Lm5/q;` @kind static;
  #L48dae2.  v8:= temp @kind object;
  #L48dae4.  return v8 @kind object;
}
procedure `void` `w0`(`v1.f1` v9 @kind this, `v1.d3` v10 @kind object, `v1.d3` v11 @kind object) @signature `Lv1/f1;.w0:(Lv1/d3;Lv1/d3;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L48fe9c.  call temp:= `q`(v10) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48fea2.  v0:= temp;
  #L48fea4.  if v0 == 0 then goto L48feb6;
  #L48fea8.  call temp:= `q`(v11) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48feae.  v0:= temp;
  #L48feb0.  if v0 == 0 then goto L48feb6;
  #L48feb4.  return @kind void;
  #L48feb6.  v0:= v9.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48feba.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L48fec0.  v0:= temp;
  #L48fec2.  v0:= v0 + -1;
  #L48fec6.  if v0 < 0 then goto L48ff28;
  #L48feca.  v1:= v9.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48fece.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L48fed4.  v1:= temp @kind object;
  #L48fed6.  v2:= v1 @kind object;
  #L48fed8.  v2:= (`v1.f1$d`) v2 @kind object;
  #L48fedc.  v5:= v9.`v1.f1.S` @type ^`int`;
  #L48fee0.  v6:= v9.`v1.f1.T` @type ^`boolean` @kind boolean;
  #L48fee4.  v7:= v9.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L48fee8.  v8:= v9.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L48feec.  v3:= v10 @kind object;
  #L48feee.  v4:= v11 @kind object;
  #L48fef0.  call temp:= `v0`(v2, v3, v4, v5, v6, v7, v8) @signature `Lv1/f1;.v0:(Lv1/f1$d;Lv1/d3;Lv1/d3;IZLv1/d3$c;Lv1/d3$b;)Z` @kind static;
  #L48fef6.  v1:= temp;
  #L48fef8.  if v1 != 0 then goto L48ff22;
  #L48fefc.  v1:= v9.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48ff00.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L48ff06.  v1:= temp @kind object;
  #L48ff08.  v1:= (`v1.f1$d`) v1 @kind object;
  #L48ff0c.  v1:= v1.`v1.f1$d.o` @type ^`v1.m2` @kind object;
  #L48ff10.  v2:= 0I;
  #L48ff12.  call `k`(v1, v2) @signature `Lv1/m2;.k:(Z)V` @kind virtual;
  #L48ff18.  v1:= v9.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48ff1c.  call temp:= `remove`(v1, v0) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L48ff22.  v0:= v0 + -1;
  #L48ff26.  goto L48fec6;
  #L48ff28.  v10:= v9.`v1.f1.D` @type ^`java.util.ArrayList` @kind object;
  #L48ff2c.  call `sort`(v10) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;)V` @kind static;
  #L48ff32.  return @kind void;
}
procedure `long` `x`(`v1.f1` v5 @kind this) @signature `Lv1/f1;.x:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48d710.  v0:= v5.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48d714.  v1:= v0.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48d718.  v2:= v0.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48d71c.  v2:= v2.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48d720.  v3:= v0.`v1.i2.r` @type ^`long` @kind wide;
  #L48d724.  call temp:= `z`(v5, v1, v2, v3) @signature `Lv1/f1;.z:(Lv1/d3;Ljava/lang/Object;J)J` @kind direct;
  #L48d72a.  v0:= temp @kind wide;
  #L48d72c.  return v0 @kind wide;
}
procedure `v1.f1$g` `x0`(`v1.d3` v30 @kind object, `v1.i2` v31 @kind object, `v1.f1$h` v32 @kind object, `v1.a2` v33 @kind object, `int` v34 , `boolean` v35 , `v1.d3$c` v36 @kind object, `v1.d3$b` v37 @kind object) @signature `Lv1/f1;.x0:(Lv1/d3;Lv1/i2;Lv1/f1$h;Lv1/a2;IZLv1/d3$c;Lv1/d3$b;)Lv1/f1$g;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;

  #L48db10.  v7:= v30 @kind object;
  #L48db14.  v8:= v31 @kind object;
  #L48db18.  v9:= v32 @kind object;
  #L48db1c.  v10:= v35;
  #L48db20.  v11:= v37 @kind object;
  #L48db24.  call temp:= `q`(v30) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48db2a.  v0:= temp;
  #L48db2c.  if v0 == 0 then goto L48db5a;
  #L48db30.  v0:= new `v1.f1$g`;
  #L48db34.  call temp:= `k`() @signature `Lv1/i2;.k:()Lx2/u$b;` @kind static;
  #L48db3a.  v2:= temp @kind object;
  #L48db3c.  v3:= 0L;
  #L48db40.  v5:= -4.9E-324D;
  #L48db4a.  v7:= 0I;
  #L48db4c.  v8:= 1I;
  #L48db4e.  v9:= 0I;
  #L48db50.  v1:= v0 @kind object;
  #L48db52.  call `<init>`(v1, v2, v3, v5, v7, v8, v9) @signature `Lv1/f1$g;.<init>:(Lx2/u$b;JJZZZ)V` @kind direct;
  #L48db58.  return v0 @kind object;
  #L48db5a.  v14:= v8.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48db5e.  v12:= v14.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48db62.  call temp:= `T`(v8, v11) @signature `Lv1/f1;.T:(Lv1/i2;Lv1/d3$b;)Z` @kind static;
  #L48db68.  v13:= temp;
  #L48db6a.  v0:= v8.`v1.i2.b` @type ^`x2.u$b` @kind object;
  #L48db6e.  call temp:= `b`(v0) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L48db74.  v0:= temp;
  #L48db76.  if v0 != 0 then goto L48db86;
  #L48db7a.  if v13 == 0 then goto L48db80;
  #L48db7e.  goto L48db86;
  #L48db80.  v0:= v8.`v1.i2.r` @type ^`long` @kind wide;
  #L48db84.  goto L48db8a;
  #L48db86.  v0:= v8.`v1.i2.c` @type ^`long` @kind wide;
  #L48db8a.  v15:= v0 @kind wide;
  #L48db8c.  v17:= -4.9E-324D;
  #L48db96.  v6:= -1I;
  #L48db98.  v19:= 0I;
  #L48db9c.  v20:= 1I;
  #L48dba0.  if v9 == 0 then goto L48dc4a;
  #L48dba4.  v2:= 1I;
  #L48dba6.  v0:= v30 @kind object;
  #L48dbaa.  v1:= v32 @kind object;
  #L48dbae.  v3:= v34;
  #L48dbb2.  v4:= v35;
  #L48dbb6.  v5:= v36 @kind object;
  #L48dbba.  v21:= v14 @kind object;
  #L48dbbe.  v14:= -1I;
  #L48dbc0.  v6:= v37 @kind object;
  #L48dbc4.  call temp:= `y0`(v0, v1, v2, v3, v4, v5, v6) @signature `Lv1/f1;.y0:(Lv1/d3;Lv1/f1$h;ZIZLv1/d3$c;Lv1/d3$b;)Landroid/util/Pair;` @kind static;
  #L48dbca.  v0:= temp @kind object;
  #L48dbcc.  if v0 != 0 then goto L48dbe4;
  #L48dbd0.  call temp:= `a`(v7, v10) @signature `Lv1/d3;.a:(Z)I` @kind virtual;
  #L48dbd6.  v0:= temp;
  #L48dbd8.  v6:= v0;
  #L48dbda.  v0:= v15 @kind wide;
  #L48dbdc.  v2:= 0I;
  #L48dbde.  v3:= 0I;
  #L48dbe0.  v4:= 1I;
  #L48dbe2.  goto L48dc30;
  #L48dbe4.  v1:= v9.`v1.f1$h.c` @type ^`long` @kind wide;
  #L48dbe8.  v3:= lcmp(v1, v17);
  #L48dbec.  if v3 != 0 then goto L48dc06;
  #L48dbf0.  v0:= v0.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48dbf4.  call temp:= `h`(v7, v0, v11) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48dbfa.  v0:= temp @kind object;
  #L48dbfc.  v6:= v0.`v1.d3$b.q` @type ^`int`;
  #L48dc00.  v0:= v15 @kind wide;
  #L48dc02.  v2:= 0I;
  #L48dc04.  goto L48dc1e;
  #L48dc06.  v12:= v0.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48dc0a.  v0:= v0.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L48dc0e.  v0:= (`java.lang.Long`) v0 @kind object;
  #L48dc12.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L48dc18.  v0:= temp @kind wide;
  #L48dc1a.  v2:= 1I;
  #L48dc1c.  v6:= -1I;
  #L48dc1e.  v3:= v8.`v1.i2.e` @type ^`int`;
  #L48dc22.  v4:= 4I;
  #L48dc24.  if v3 != v4 then goto L48dc2c;
  #L48dc28.  v3:= 1I;
  #L48dc2a.  goto L48dc2e;
  #L48dc2c.  v3:= 0I;
  #L48dc2e.  v4:= 0I;
  #L48dc30.  v9:= v36 @kind object;
  #L48dc34.  v29:= v2;
  #L48dc38.  v27:= v3;
  #L48dc3c.  v28:= v4;
  #L48dc40.  v3:= v6;
  #L48dc42.  v6:= v21 @kind object;
  #L48dc46.  goto L48dda6;
  #L48dc4a.  v21:= v14 @kind object;
  #L48dc4e.  v14:= -1I;
  #L48dc50.  v0:= v8.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48dc54.  call temp:= `q`(v0) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48dc5a.  v0:= temp;
  #L48dc5c.  if v0 == 0 then goto L48dc84;
  #L48dc60.  call temp:= `a`(v7, v10) @signature `Lv1/d3;.a:(Z)I` @kind virtual;
  #L48dc66.  v0:= temp;
  #L48dc68.  v9:= v36 @kind object;
  #L48dc6c.  v3:= v0;
  #L48dc6e.  v0:= v15 @kind wide;
  #L48dc70.  v6:= v21 @kind object;
  #L48dc74.  v27:= 0I;
  #L48dc78.  v28:= 0I;
  #L48dc7c.  v29:= 0I;
  #L48dc80.  goto L48dda6;
  #L48dc84.  call temp:= `b`(v7, v12) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L48dc8a.  v0:= temp;
  #L48dc8c.  if v0 != v14 then goto L48dce6;
  #L48dc90.  v5:= v8.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48dc94.  v0:= v36 @kind object;
  #L48dc98.  v1:= v37 @kind object;
  #L48dc9c.  v2:= v34;
  #L48dca0.  v3:= v35;
  #L48dca4.  v4:= v12 @kind object;
  #L48dca6.  v6:= v30 @kind object;
  #L48dcaa.  call temp:= `z0`(v0, v1, v2, v3, v4, v5, v6) @signature `Lv1/f1;.z0:(Lv1/d3$c;Lv1/d3$b;IZLjava/lang/Object;Lv1/d3;Lv1/d3;)Ljava/lang/Object;` @kind static;
  #L48dcb0.  v0:= temp @kind object;
  #L48dcb2.  if v0 != 0 then goto L48dcc2;
  #L48dcb6.  call temp:= `a`(v7, v10) @signature `Lv1/d3;.a:(Z)I` @kind virtual;
  #L48dcbc.  v0:= temp;
  #L48dcbe.  v4:= 1I;
  #L48dcc0.  goto L48dcd0;
  #L48dcc2.  call temp:= `h`(v7, v0, v11) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48dcc8.  v0:= temp @kind object;
  #L48dcca.  v0:= v0.`v1.d3$b.q` @type ^`int`;
  #L48dcce.  v4:= 0I;
  #L48dcd0.  v9:= v36 @kind object;
  #L48dcd4.  v3:= v0;
  #L48dcd6.  v28:= v4;
  #L48dcda.  v0:= v15 @kind wide;
  #L48dcdc.  v6:= v21 @kind object;
  #L48dce0.  v27:= 0I;
  #L48dce4.  goto L48dc7c;
  #L48dce6.  v0:= lcmp(v15, v17);
  #L48dcea.  if v0 != 0 then goto L48dcfc;
  #L48dcee.  call temp:= `h`(v7, v12, v11) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48dcf4.  v0:= temp @kind object;
  #L48dcf6.  v0:= v0.`v1.d3$b.q` @type ^`int`;
  #L48dcfa.  goto L48dc68;
  #L48dcfc.  if v13 == 0 then goto L48dd96;
  #L48dd00.  v0:= v8.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48dd04.  v6:= v21 @kind object;
  #L48dd08.  v1:= v6.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48dd0c.  call temp:= `h`(v0, v1, v11) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48dd12.  v0:= v8.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48dd16.  v1:= v11.`v1.d3$b.q` @type ^`int`;
  #L48dd1a.  v9:= v36 @kind object;
  #L48dd1e.  call temp:= `n`(v0, v1, v9) @signature `Lv1/d3;.n:(ILv1/d3$c;)Lv1/d3$c;` @kind virtual;
  #L48dd24.  v0:= temp @kind object;
  #L48dd26.  v0:= v0.`v1.d3$c.C` @type ^`int`;
  #L48dd2a.  v1:= v8.`v1.i2.a` @type ^`v1.d3` @kind object;
  #L48dd2e.  v2:= v6.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48dd32.  call temp:= `b`(v1, v2) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L48dd38.  v1:= temp;
  #L48dd3a.  if v0 != v1 then goto L48dd84;
  #L48dd3e.  call temp:= `p`(v37) @signature `Lv1/d3$b;.p:()J` @kind virtual;
  #L48dd44.  v0:= temp @kind wide;
  #L48dd46.  v4:= v15 + v0 @kind long;
  #L48dd4a.  call temp:= `h`(v7, v12, v11) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48dd50.  v0:= temp @kind object;
  #L48dd52.  v3:= v0.`v1.d3$b.q` @type ^`int`;
  #L48dd56.  v0:= v30 @kind object;
  #L48dd5a.  v1:= v36 @kind object;
  #L48dd5e.  v2:= v37 @kind object;
  #L48dd62.  call temp:= `j`(v0, v1, v2, v3, v4) @signature `Lv1/d3;.j:(Lv1/d3$c;Lv1/d3$b;IJ)Landroid/util/Pair;` @kind virtual;
  #L48dd68.  v0:= temp @kind object;
  #L48dd6a.  v1:= v0.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48dd6e.  v0:= v0.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L48dd72.  v0:= (`java.lang.Long`) v0 @kind object;
  #L48dd76.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L48dd7c.  v2:= temp @kind wide;
  #L48dd7e.  v12:= v1 @kind object;
  #L48dd80.  v0:= v2 @kind wide;
  #L48dd82.  goto L48dd86;
  #L48dd84.  v0:= v15 @kind wide;
  #L48dd86.  v3:= -1I;
  #L48dd88.  v27:= 0I;
  #L48dd8c.  v28:= 0I;
  #L48dd90.  v29:= 1I;
  #L48dd94.  goto L48dda6;
  #L48dd96.  v9:= v36 @kind object;
  #L48dd9a.  v6:= v21 @kind object;
  #L48dd9e.  v0:= v15 @kind wide;
  #L48dda0.  v3:= -1I;
  #L48dda2.  goto L48dc74;
  #L48dda6.  if v3 == v14 then goto L48dde6;
  #L48ddaa.  v4:= -4.9E-324D;
  #L48ddb4.  v0:= v30 @kind object;
  #L48ddb8.  v1:= v36 @kind object;
  #L48ddbc.  v2:= v37 @kind object;
  #L48ddc0.  call temp:= `j`(v0, v1, v2, v3, v4) @signature `Lv1/d3;.j:(Lv1/d3$c;Lv1/d3$b;IJ)Landroid/util/Pair;` @kind virtual;
  #L48ddc6.  v0:= temp @kind object;
  #L48ddc8.  v12:= v0.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48ddcc.  v0:= v0.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L48ddd0.  v0:= (`java.lang.Long`) v0 @kind object;
  #L48ddd4.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L48ddda.  v0:= temp @kind wide;
  #L48dddc.  v2:= v33 @kind object;
  #L48dde0.  v25:= v17 @kind wide;
  #L48dde4.  goto L48ddee;
  #L48dde6.  v2:= v33 @kind object;
  #L48ddea.  v25:= v0 @kind wide;
  #L48ddee.  call temp:= `B`(v2, v7, v12, v0) @signature `Lv1/a2;.B:(Lv1/d3;Ljava/lang/Object;J)Lx2/u$b;` @kind virtual;
  #L48ddf4.  v2:= temp @kind object;
  #L48ddf6.  v3:= v2.`x2.s.e` @type ^`int`;
  #L48ddfa.  if v3 == v14 then goto L48de10;
  #L48ddfe.  v4:= v6.`x2.s.e` @type ^`int`;
  #L48de02.  if v4 == v14 then goto L48de0c;
  #L48de06.  if v3 < v4 then goto L48de0c;
  #L48de0a.  goto L48de10;
  #L48de0c.  v3:= 0I;
  #L48de0e.  goto L48de12;
  #L48de10.  v3:= 1I;
  #L48de12.  v4:= v6.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48de16.  call temp:= `equals`(v4, v12) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48de1c.  v4:= temp;
  #L48de1e.  if v4 == 0 then goto L48de40;
  #L48de22.  call temp:= `b`(v6) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L48de28.  v4:= temp;
  #L48de2a.  if v4 != 0 then goto L48de40;
  #L48de2e.  call temp:= `b`(v2) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L48de34.  v4:= temp;
  #L48de36.  if v4 != 0 then goto L48de40;
  #L48de3a.  if v3 == 0 then goto L48de40;
  #L48de3e.  goto L48de44;
  #L48de40.  v20:= 0I;
  #L48de44.  call temp:= `h`(v7, v12, v11) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48de4a.  v17:= temp @kind object;
  #L48de4c.  v12:= v13;
  #L48de4e.  v13:= v6 @kind object;
  #L48de50.  v3:= v6 @kind object;
  #L48de52.  v14:= v15 @kind wide;
  #L48de54.  v16:= v2 @kind object;
  #L48de58.  v18:= v25 @kind wide;
  #L48de5c.  call temp:= `P`(v12, v13, v14, v16, v17, v18) @signature `Lv1/f1;.P:(ZLx2/u$b;JLx2/u$b;Lv1/d3$b;J)Z` @kind static;
  #L48de62.  v4:= temp;
  #L48de64.  if v20 != 0 then goto L48de6c;
  #L48de68.  if v4 == 0 then goto L48de6e;
  #L48de6c.  v2:= v3 @kind object;
  #L48de6e.  call temp:= `b`(v2) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L48de74.  v4:= temp;
  #L48de76.  if v4 == 0 then goto L48deb8;
  #L48de7a.  call temp:= `equals`(v2, v3) @signature `Lx2/s;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48de80.  v0:= temp;
  #L48de82.  if v0 == 0 then goto L48de8c;
  #L48de86.  v0:= v8.`v1.i2.r` @type ^`long` @kind wide;
  #L48de8a.  goto L48deb8;
  #L48de8c.  v0:= v2.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L48de90.  call temp:= `h`(v7, v0, v11) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48de96.  v0:= v2.`x2.s.c` @type ^`int`;
  #L48de9a.  v1:= v2.`x2.s.b` @type ^`int`;
  #L48de9e.  call temp:= `m`(v11, v1) @signature `Lv1/d3$b;.m:(I)I` @kind virtual;
  #L48dea4.  v1:= temp;
  #L48dea6.  if v0 != v1 then goto L48deb4;
  #L48deaa.  call temp:= `i`(v37) @signature `Lv1/d3$b;.i:()J` @kind virtual;
  #L48deb0.  v0:= temp @kind wide;
  #L48deb2.  goto L48deb8;
  #L48deb4.  v0:= 0L;
  #L48deb8.  v23:= v0 @kind wide;
  #L48debc.  v0:= new `v1.f1$g`;
  #L48dec0.  v21:= v0 @kind object;
  #L48dec4.  v22:= v2 @kind object;
  #L48dec8.  call `<init>`(v21, v22, v23, v25, v27, v28, v29) @signature `Lv1/f1$g;.<init>:(Lx2/u$b;JJZZZ)V` @kind direct;
  #L48dece.  return v0 @kind object;
}
procedure `v1.j1`[] `y`(`q3.s` v4 @kind object) @signature `Lv1/f1;.y:(Lq3/s;)[Lv1/j1;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48dee0.  v0:= 0I;
  #L48dee2.  if v4 == 0 then goto L48def0;
  #L48dee6.  call temp:= `length`(v4) @signature `Lq3/v;.length:()I` @kind interface;
  #L48deec.  v1:= temp;
  #L48deee.  goto L48def2;
  #L48def0.  v1:= 0I;
  #L48def2.  v2:= new `v1.j1`[v1];
  #L48def6.  if v0 >= v1 then goto L48df0c;
  #L48defa.  call temp:= `a`(v4, v0) @signature `Lq3/v;.a:(I)Lv1/j1;` @kind interface;
  #L48df00.  v3:= temp @kind object;
  #L48df02.  v2[v0]:= v3 @kind object;
  #L48df06.  v0:= v0 + 1;
  #L48df0a.  goto L48def6;
  #L48df0c.  return v2 @kind object;
}
procedure `android.util.Pair` `y0`(`v1.d3` v12 @kind object, `v1.f1$h` v13 @kind object, `boolean` v14 , `int` v15 , `boolean` v16 , `v1.d3$c` v17 @kind object, `v1.d3$b` v18 @kind object) @signature `Lv1/f1;.y0:(Lv1/d3;Lv1/f1$h;ZIZLv1/d3$c;Lv1/d3$b;)Landroid/util/Pair;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L48c934.  v7:= v12 @kind object;
  #L48c936.  v0:= v13 @kind object;
  #L48c938.  v8:= v18 @kind object;
  #L48c93c.  v1:= v0.`v1.f1$h.a` @type ^`v1.d3` @kind object;
  #L48c940.  call temp:= `q`(v12) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48c946.  v2:= temp;
  #L48c948.  v9:= 0I;
  #L48c94a.  if v2 == 0 then goto L48c950;
  #L48c94e.  return v9 @kind object;
  #L48c950.  call temp:= `q`(v1) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L48c956.  v2:= temp;
  #L48c958.  if v2 == 0 then goto L48c960;
  #L48c95c.  v10:= v7 @kind object;
  #L48c95e.  goto L48c962;
  #L48c960.  v10:= v1 @kind object;
  #L48c962.  v4:= v0.`v1.f1$h.b` @type ^`int`;
  #L48c966.  v5:= v0.`v1.f1$h.c` @type ^`long` @kind wide;
  #L48c96a.  v1:= v10 @kind object;
  #L48c96c.  v2:= v17 @kind object;
  #L48c970.  v3:= v18 @kind object;
  #L48c974.  call temp:= `j`(v1, v2, v3, v4, v5) @signature `Lv1/d3;.j:(Lv1/d3$c;Lv1/d3$b;IJ)Landroid/util/Pair;` @kind virtual;
  #L48c97a.  v1:= temp @kind object;
  #L48c97c.  call temp:= `equals`(v12, v10) @signature `Lv1/d3;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48c982.  v2:= temp;
  #L48c984.  if v2 == 0 then goto L48c98a;
  #L48c988.  return v1 @kind object;
  #L48c98a.  v2:= v1.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48c98e.  call temp:= `b`(v12, v2) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L48c994.  v2:= temp;
  #L48c996.  v3:= -1I;
  #L48c998.  if v2 == v3 then goto L48c9fc;
  #L48c99c.  v2:= v1.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48c9a0.  call temp:= `h`(v10, v2, v8) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48c9a6.  v2:= temp @kind object;
  #L48c9a8.  v2:= v2.`v1.d3$b.t` @type ^`boolean` @kind boolean;
  #L48c9ac.  if v2 == 0 then goto L48c9fa;
  #L48c9b0.  v2:= v8.`v1.d3$b.q` @type ^`int`;
  #L48c9b4.  v11:= v17 @kind object;
  #L48c9b8.  call temp:= `n`(v10, v2, v11) @signature `Lv1/d3;.n:(ILv1/d3$c;)Lv1/d3$c;` @kind virtual;
  #L48c9be.  v2:= temp @kind object;
  #L48c9c0.  v2:= v2.`v1.d3$c.C` @type ^`int`;
  #L48c9c4.  v3:= v1.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48c9c8.  call temp:= `b`(v10, v3) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L48c9ce.  v3:= temp;
  #L48c9d0.  if v2 != v3 then goto L48c9fa;
  #L48c9d4.  v1:= v1.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48c9d8.  call temp:= `h`(v12, v1, v8) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48c9de.  v1:= temp @kind object;
  #L48c9e0.  v3:= v1.`v1.d3$b.q` @type ^`int`;
  #L48c9e4.  v4:= v0.`v1.f1$h.c` @type ^`long` @kind wide;
  #L48c9e8.  v0:= v12 @kind object;
  #L48c9ea.  v1:= v17 @kind object;
  #L48c9ee.  v2:= v18 @kind object;
  #L48c9f2.  call temp:= `j`(v0, v1, v2, v3, v4) @signature `Lv1/d3;.j:(Lv1/d3$c;Lv1/d3$b;IJ)Landroid/util/Pair;` @kind virtual;
  #L48c9f8.  v1:= temp @kind object;
  #L48c9fa.  return v1 @kind object;
  #L48c9fc.  v11:= v17 @kind object;
  #L48ca00.  if v14 == 0 then goto L48ca50;
  #L48ca04.  v4:= v1.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L48ca08.  v0:= v17 @kind object;
  #L48ca0c.  v1:= v18 @kind object;
  #L48ca10.  v2:= v15;
  #L48ca12.  v3:= v16;
  #L48ca16.  v5:= v10 @kind object;
  #L48ca18.  v6:= v12 @kind object;
  #L48ca1a.  call temp:= `z0`(v0, v1, v2, v3, v4, v5, v6) @signature `Lv1/f1;.z0:(Lv1/d3$c;Lv1/d3$b;IZLjava/lang/Object;Lv1/d3;Lv1/d3;)Ljava/lang/Object;` @kind static;
  #L48ca20.  v0:= temp @kind object;
  #L48ca22.  if v0 == 0 then goto L48ca50;
  #L48ca26.  call temp:= `h`(v12, v0, v8) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48ca2c.  v0:= temp @kind object;
  #L48ca2e.  v3:= v0.`v1.d3$b.q` @type ^`int`;
  #L48ca32.  v4:= -4.9E-324D;
  #L48ca3c.  v0:= v12 @kind object;
  #L48ca3e.  v1:= v17 @kind object;
  #L48ca42.  v2:= v18 @kind object;
  #L48ca46.  call temp:= `j`(v0, v1, v2, v3, v4) @signature `Lv1/d3;.j:(Lv1/d3$c;Lv1/d3$b;IJ)Landroid/util/Pair;` @kind virtual;
  #L48ca4c.  v0:= temp @kind object;
  #L48ca4e.  return v0 @kind object;
  #L48ca50.  return v9 @kind object;
  catch `java.lang.IndexOutOfBoundsException` @[L48c962..L48c97c] goto L48ca50;
}
procedure `long` `z`(`v1.f1` v4 @kind this, `v1.d3` v5 @kind object, `java.lang.Object` v6 @kind object, `long` v7 ) @signature `Lv1/f1;.z:(Lv1/d3;Ljava/lang/Object;J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48d740.  v0:= v4.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L48d744.  call temp:= `h`(v5, v6, v0) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L48d74a.  v6:= temp @kind object;
  #L48d74c.  v6:= v6.`v1.d3$b.q` @type ^`int`;
  #L48d750.  v0:= v4.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L48d754.  call temp:= `n`(v5, v6, v0) @signature `Lv1/d3;.n:(ILv1/d3$c;)Lv1/d3$c;` @kind virtual;
  #L48d75a.  v5:= v4.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L48d75e.  v0:= v5.`v1.d3$c.t` @type ^`long` @kind wide;
  #L48d762.  v2:= -4.9E-324D;
  #L48d76c.  v6:= lcmp(v0, v2);
  #L48d770.  if v6 == 0 then goto L48d7ba;
  #L48d774.  call temp:= `g`(v5) @signature `Lv1/d3$c;.g:()Z` @kind virtual;
  #L48d77a.  v5:= temp;
  #L48d77c.  if v5 == 0 then goto L48d7ba;
  #L48d780.  v5:= v4.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L48d784.  v6:= v5.`v1.d3$c.w` @type ^`boolean` @kind boolean;
  #L48d788.  if v6 != 0 then goto L48d78e;
  #L48d78c.  goto L48d7ba;
  #L48d78e.  call temp:= `c`(v5) @signature `Lv1/d3$c;.c:()J` @kind virtual;
  #L48d794.  v5:= temp @kind wide;
  #L48d796.  v0:= v4.`v1.f1.y` @type ^`v1.d3$c` @kind object;
  #L48d79a.  v0:= v0.`v1.d3$c.t` @type ^`long` @kind wide;
  #L48d79e.  v5:= v5 - v0 @kind long;
  #L48d7a0.  call temp:= `A0`(v5) @signature `Ls3/l0;.A0:(J)J` @kind static;
  #L48d7a6.  v5:= temp @kind wide;
  #L48d7a8.  v0:= v4.`v1.f1.z` @type ^`v1.d3$b` @kind object;
  #L48d7ac.  call temp:= `p`(v0) @signature `Lv1/d3$b;.p:()J` @kind virtual;
  #L48d7b2.  v0:= temp @kind wide;
  #L48d7b4.  v7:= v7 + v0 @kind long;
  #L48d7b6.  v5:= v5 - v7 @kind long;
  #L48d7b8.  return v5 @kind wide;
  #L48d7ba.  return v2 @kind wide;
}
procedure `java.lang.Object` `z0`(`v1.d3$c` v9 @kind object, `v1.d3$b` v10 @kind object, `int` v11 , `boolean` v12 , `java.lang.Object` v13 @kind object, `v1.d3` v14 @kind object, `v1.d3` v15 @kind object) @signature `Lv1/f1;.z0:(Lv1/d3$c;Lv1/d3$b;IZLjava/lang/Object;Lv1/d3;Lv1/d3;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L48d6a0.  call temp:= `b`(v14, v13) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L48d6a6.  v13:= temp;
  #L48d6a8.  call temp:= `i`(v14) @signature `Lv1/d3;.i:()I` @kind virtual;
  #L48d6ae.  v0:= temp;
  #L48d6b0.  v1:= -1I;
  #L48d6b2.  v2:= 0I;
  #L48d6b4.  v4:= v13;
  #L48d6b6.  v13:= -1I;
  #L48d6b8.  if v2 >= v0 then goto L48d6ee;
  #L48d6bc.  if v13 != v1 then goto L48d6ee;
  #L48d6c0.  v3:= v14 @kind object;
  #L48d6c2.  v5:= v10 @kind object;
  #L48d6c4.  v6:= v9 @kind object;
  #L48d6c6.  v7:= v11;
  #L48d6c8.  v8:= v12;
  #L48d6ca.  call temp:= `d`(v3, v4, v5, v6, v7, v8) @signature `Lv1/d3;.d:(ILv1/d3$b;Lv1/d3$c;IZ)I` @kind virtual;
  #L48d6d0.  v4:= temp;
  #L48d6d2.  if v4 != v1 then goto L48d6d8;
  #L48d6d6.  goto L48d6ee;
  #L48d6d8.  call temp:= `m`(v14, v4) @signature `Lv1/d3;.m:(I)Ljava/lang/Object;` @kind virtual;
  #L48d6de.  v13:= temp @kind object;
  #L48d6e0.  call temp:= `b`(v15, v13) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L48d6e6.  v13:= temp;
  #L48d6e8.  v2:= v2 + 1;
  #L48d6ec.  goto L48d6b8;
  #L48d6ee.  if v13 != v1 then goto L48d6f6;
  #L48d6f2.  v9:= 0I;
  #L48d6f4.  goto L48d6fe;
  #L48d6f6.  call temp:= `m`(v15, v13) @signature `Lv1/d3;.m:(I)Ljava/lang/Object;` @kind virtual;
  #L48d6fc.  v9:= temp @kind object;
  #L48d6fe.  return v9 @kind object;
}
procedure `void` `B0`(`v1.f1` v2 @kind this, `v1.d3` v3 @kind object, `int` v4 , `long` v5 ) @signature `Lv1/f1;.B0:(Lv1/d3;IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48ff64.  v0:= v2.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48ff68.  v1:= new `v1.f1$h`;
  #L48ff6c.  call `<init>`(v1, v3, v4, v5) @signature `Lv1/f1$h;.<init>:(Lv1/d3;IJ)V` @kind direct;
  #L48ff72.  v3:= 3I;
  #L48ff74.  call temp:= `g`(v0, v3, v1) @signature `Ls3/m;.g:(ILjava/lang/Object;)Ls3/m$a;` @kind interface;
  #L48ff7a.  v3:= temp @kind object;
  #L48ff7c.  call `a`(v3) @signature `Ls3/m$a;.a:()V` @kind interface;
  #L48ff82.  return @kind void;
}
procedure `android.os.Looper` `C`(`v1.f1` v1 @kind this) @signature `Lv1/f1;.C:()Landroid/os/Looper;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48c848.  v0:= v1.`v1.f1.x` @type ^`android.os.Looper` @kind object;
  #L48c84c.  return v0 @kind object;
}
procedure `void` `N0`(`v1.f1` v9 @kind this, `java.util.List` v10 @kind object, `int` v11 , `long` v12 , `x2.p0` v14 @kind object) @signature `Lv1/f1;.N0:(Ljava/util/List;IJLx2/p0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L490648.  v0:= v9.`v1.f1.v` @type ^`s3.m` @kind object;
  #L49064c.  v8:= new `v1.f1$b`;
  #L490650.  v7:= 0I;
  #L490652.  v1:= v8 @kind object;
  #L490654.  v2:= v10 @kind object;
  #L490656.  v3:= v14 @kind object;
  #L490658.  v4:= v11;
  #L49065a.  v5:= v12 @kind wide;
  #L49065c.  call `<init>`(v1, v2, v3, v4, v5, v7) @signature `Lv1/f1$b;.<init>:(Ljava/util/List;Lx2/p0;IJLv1/f1$a;)V` @kind direct;
  #L490662.  v10:= 17I;
  #L490666.  call temp:= `g`(v0, v10, v8) @signature `Ls3/m;.g:(ILjava/lang/Object;)Ls3/m$a;` @kind interface;
  #L49066c.  v10:= temp @kind object;
  #L49066e.  call `a`(v10) @signature `Ls3/m$a;.a:()V` @kind interface;
  #L490674.  return @kind void;
}
procedure `void` `Q0`(`v1.f1` v2 @kind this, `boolean` v3 , `int` v4 ) @signature `Lv1/f1;.Q0:(ZI)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L490714.  v0:= v2.`v1.f1.v` @type ^`s3.m` @kind object;
  #L490718.  v1:= 1I;
  #L49071a.  call temp:= `b`(v0, v1, v3, v4) @signature `Ls3/m;.b:(III)Ls3/m$a;` @kind interface;
  #L490720.  v3:= temp @kind object;
  #L490722.  call `a`(v3) @signature `Ls3/m$a;.a:()V` @kind interface;
  #L490728.  return @kind void;
}
procedure `void` `S0`(`v1.f1` v2 @kind this, `v1.j2` v3 @kind object) @signature `Lv1/f1;.S0:(Lv1/j2;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4907c0.  v0:= v2.`v1.f1.v` @type ^`s3.m` @kind object;
  #L4907c4.  v1:= 4I;
  #L4907c6.  call temp:= `g`(v0, v1, v3) @signature `Ls3/m;.g:(ILjava/lang/Object;)Ls3/m$a;` @kind interface;
  #L4907cc.  v3:= temp @kind object;
  #L4907ce.  call `a`(v3) @signature `Ls3/m$a;.a:()V` @kind interface;
  #L4907d4.  return @kind void;
}
procedure `void` `U0`(`v1.f1` v3 @kind this, `int` v4 ) @signature `Lv1/f1;.U0:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L490818.  v0:= v3.`v1.f1.v` @type ^`s3.m` @kind object;
  #L49081c.  v1:= 11I;
  #L490820.  v2:= 0I;
  #L490822.  call temp:= `b`(v0, v1, v4, v2) @signature `Ls3/m;.b:(III)Ls3/m$a;` @kind interface;
  #L490828.  v4:= temp @kind object;
  #L49082a.  call `a`(v4) @signature `Ls3/m$a;.a:()V` @kind interface;
  #L490830.  return @kind void;
}
procedure `void` `a`(`v1.f1` v2 @kind this) @signature `Lv1/f1;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48f79c.  v0:= v2.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48f7a0.  v1:= 22I;
  #L48f7a4.  call temp:= `c`(v0, v1) @signature `Ls3/m;.c:(I)Z` @kind interface;
  #L48f7aa.  return @kind void;
}
procedure `void` `c`(`v1.f1` v2 @kind this) @signature `Lv1/f1;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48f7e4.  v0:= v2.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48f7e8.  v1:= 10I;
  #L48f7ec.  call temp:= `c`(v0, v1) @signature `Ls3/m;.c:(I)Z` @kind interface;
  #L48f7f2.  return @kind void;
}
procedure `void` `d`(`v1.f1` v2 @kind this, `v1.m2` v3 @kind object) @signature `Lv1/f1;.d:(Lv1/m2;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4902e4.  @monitorenter v2
  #L4902e6.  v0:= v2.`v1.f1.N` @type ^`boolean` @kind boolean;
  #L4902ea.  if v0 != 0 then goto L49031a;
  #L4902ee.  v0:= v2.`v1.f1.w` @type ^`android.os.HandlerThread` @kind object;
  #L4902f2.  call temp:= `isAlive`(v0) @signature `Landroid/os/HandlerThread;.isAlive:()Z` @kind virtual;
  #L4902f8.  v0:= temp;
  #L4902fa.  if v0 != 0 then goto L490300;
  #L4902fe.  goto L49031a;
  #L490300.  v0:= v2.`v1.f1.v` @type ^`s3.m` @kind object;
  #L490304.  v1:= 14I;
  #L490308.  call temp:= `g`(v0, v1, v3) @signature `Ls3/m;.g:(ILjava/lang/Object;)Ls3/m$a;` @kind interface;
  #L49030e.  v3:= temp @kind object;
  #L490310.  call `a`(v3) @signature `Ls3/m$a;.a:()V` @kind interface;
  #L490316.  @monitorexit v2
  #L490318.  return @kind void;
  #L49031a.  v0:= "ExoPlayerImplInternal" @kind object;
  #L49031e.  v1:= "Ignoring messages sent after release." @kind object;
  #L490322.  call `h`(v0, v1) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L490328.  v0:= 0I;
  #L49032a.  call `k`(v3, v0) @signature `Lv1/m2;.k:(Z)V` @kind virtual;
  #L490330.  @monitorexit v2
  #L490332.  return @kind void;
  #L490334.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L490336.  @monitorexit v2
  #L490338.  throw v3;
  catch `java.lang.Throwable` @[L4902e6..L490316] goto L490334;
  catch `java.lang.Throwable` @[L49031a..L490330] goto L490334;
}
procedure `void` `g1`(`v1.f1` v2 @kind this) @signature `Lv1/f1;.g1:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L490998.  v0:= v2.`v1.f1.v` @type ^`s3.m` @kind object;
  #L49099c.  v1:= 6I;
  #L49099e.  call temp:= `j`(v0, v1) @signature `Ls3/m;.j:(I)Ls3/m$a;` @kind interface;
  #L4909a4.  v0:= temp @kind object;
  #L4909a6.  call `a`(v0) @signature `Ls3/m$a;.a:()V` @kind interface;
  #L4909ac.  return @kind void;
}
procedure `void` `h`(`v1.f1` v2 @kind this, `x2.r` v3 @kind object) @signature `Lv1/f1;.h:(Lx2/r;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48f7bc.  v0:= v2.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48f7c0.  v1:= 8I;
  #L48f7c4.  call temp:= `g`(v0, v1, v3) @signature `Ls3/m;.g:(ILjava/lang/Object;)Ls3/m$a;` @kind interface;
  #L48f7ca.  v3:= temp @kind object;
  #L48f7cc.  call `a`(v3) @signature `Ls3/m$a;.a:()V` @kind interface;
  #L48f7d2.  return @kind void;
}
procedure `boolean` `handleMessage`(`v1.f1` v7 @kind this, `android.os.Message` v8 @kind object) @signature `Lv1/f1;.handleMessage:(Landroid/os/Message;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L48ca8c.  v0:= "Playback error" @kind object;
  #L48ca90.  v1:= "ExoPlayerImplInternal" @kind object;
  #L48ca94.  v2:= 1000I;
  #L48ca98.  v3:= 0I;
  #L48ca9a.  v4:= 1I;
  #L48ca9c.  v5:= v8.`android.os.Message.what` @type ^`int`;
  #L48caa0.  goto L48cda4;
  #L48caa6.  return v3;
  #L48caa8.  call `l`(v7) @signature `Lv1/f1;.l:()V` @kind direct;
  #L48caae.  goto L48cd9c;
  #L48cab2.  v8:= v8.`android.os.Message.arg1` @type ^`int`;
  #L48cab6.  if v8 != v4 then goto L48cabe;
  #L48caba.  v8:= 1I;
  #L48cabc.  goto L48cac0;
  #L48cabe.  v8:= 0I;
  #L48cac0.  call `O0`(v7, v8) @signature `Lv1/f1;.O0:(Z)V` @kind direct;
  #L48cac6.  goto L48cd9c;
  #L48caca.  v8:= v8.`android.os.Message.arg1` @type ^`int`;
  #L48cace.  if v8 == 0 then goto L48cad6;
  #L48cad2.  v8:= 1I;
  #L48cad4.  goto L48cad8;
  #L48cad6.  v8:= 0I;
  #L48cad8.  call `P0`(v7, v8) @signature `Lv1/f1;.P0:(Z)V` @kind direct;
  #L48cade.  goto L48cd9c;
  #L48cae2.  call `d0`(v7) @signature `Lv1/f1;.d0:()V` @kind direct;
  #L48cae8.  goto L48cd9c;
  #L48caec.  v8:= v8.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L48caf0.  v8:= (`x2.p0`) v8 @kind object;
  #L48caf4.  call `Y0`(v7, v8) @signature `Lv1/f1;.Y0:(Lx2/p0;)V` @kind direct;
  #L48cafa.  goto L48cd9c;
  #L48cafe.  v5:= v8.`android.os.Message.arg1` @type ^`int`;
  #L48cb02.  v6:= v8.`android.os.Message.arg2` @type ^`int`;
  #L48cb06.  v8:= v8.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L48cb0a.  v8:= (`x2.p0`) v8 @kind object;
  #L48cb0e.  call `n0`(v7, v5, v6, v8) @signature `Lv1/f1;.n0:(IILx2/p0;)V` @kind direct;
  #L48cb14.  goto L48cd9c;
  #L48cb18.  v8:= v8.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L48cb1c.  v8:= (`v1.f1$c`) v8 @kind object;
  #L48cb20.  call `e0`(v7, v8) @signature `Lv1/f1;.e0:(Lv1/f1$c;)V` @kind direct;
  #L48cb26.  goto L48cd9c;
  #L48cb2a.  v5:= v8.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L48cb2e.  v5:= (`v1.f1$b`) v5 @kind object;
  #L48cb32.  v8:= v8.`android.os.Message.arg1` @type ^`int`;
  #L48cb36.  call `k`(v7, v5, v8) @signature `Lv1/f1;.k:(Lv1/f1$b;I)V` @kind direct;
  #L48cb3c.  goto L48cd9c;
  #L48cb40.  v8:= v8.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L48cb44.  v8:= (`v1.f1$b`) v8 @kind object;
  #L48cb48.  call `M0`(v7, v8) @signature `Lv1/f1;.M0:(Lv1/f1$b;)V` @kind direct;
  #L48cb4e.  goto L48cd9c;
  #L48cb52.  v8:= v8.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L48cb56.  v8:= (`v1.j2`) v8 @kind object;
  #L48cb5a.  call `L`(v7, v8, v3) @signature `Lv1/f1;.L:(Lv1/j2;Z)V` @kind direct;
  #L48cb60.  goto L48cd9c;
  #L48cb64.  v8:= v8.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L48cb68.  v8:= (`v1.m2`) v8 @kind object;
  #L48cb6c.  call `I0`(v7, v8) @signature `Lv1/f1;.I0:(Lv1/m2;)V` @kind direct;
  #L48cb72.  goto L48cd9c;
  #L48cb76.  v8:= v8.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L48cb7a.  v8:= (`v1.m2`) v8 @kind object;
  #L48cb7e.  call `G0`(v7, v8) @signature `Lv1/f1;.G0:(Lv1/m2;)V` @kind direct;
  #L48cb84.  goto L48cd9c;
  #L48cb88.  v5:= v8.`android.os.Message.arg1` @type ^`int`;
  #L48cb8c.  if v5 == 0 then goto L48cb94;
  #L48cb90.  v5:= 1I;
  #L48cb92.  goto L48cb96;
  #L48cb94.  v5:= 0I;
  #L48cb96.  v8:= v8.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L48cb9a.  v8:= (`java.util.concurrent.atomic.AtomicBoolean`) v8 @kind object;
  #L48cb9e.  call `L0`(v7, v5, v8) @signature `Lv1/f1;.L0:(ZLjava/util/concurrent/atomic/AtomicBoolean;)V` @kind direct;
  #L48cba4.  goto L48cd9c;
  #L48cba8.  v8:= v8.`android.os.Message.arg1` @type ^`int`;
  #L48cbac.  if v8 == 0 then goto L48cbb4;
  #L48cbb0.  v8:= 1I;
  #L48cbb2.  goto L48cbb6;
  #L48cbb4.  v8:= 0I;
  #L48cbb6.  call `X0`(v7, v8) @signature `Lv1/f1;.X0:(Z)V` @kind direct;
  #L48cbbc.  goto L48cd9c;
  #L48cbc0.  v8:= v8.`android.os.Message.arg1` @type ^`int`;
  #L48cbc4.  call `V0`(v7, v8) @signature `Lv1/f1;.V0:(I)V` @kind direct;
  #L48cbca.  goto L48cd9c;
  #L48cbce.  call `q0`(v7) @signature `Lv1/f1;.q0:()V` @kind direct;
  #L48cbd4.  goto L48cd9c;
  #L48cbd8.  v8:= v8.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L48cbdc.  v8:= (`x2.r`) v8 @kind object;
  #L48cbe0.  call `F`(v7, v8) @signature `Lv1/f1;.F:(Lx2/r;)V` @kind direct;
  #L48cbe6.  goto L48cd9c;
  #L48cbea.  v8:= v8.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L48cbee.  v8:= (`x2.r`) v8 @kind object;
  #L48cbf2.  call `J`(v7, v8) @signature `Lv1/f1;.J:(Lx2/r;)V` @kind direct;
  #L48cbf8.  goto L48cd9c;
  #L48cbfc.  call `m0`(v7) @signature `Lv1/f1;.m0:()V` @kind direct;
  #L48cc02.  return v4;
  #L48cc04.  call `h1`(v7, v3, v4) @signature `Lv1/f1;.h1:(ZZ)V` @kind direct;
  #L48cc0a.  goto L48cd9c;
  #L48cc0e.  v8:= v8.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L48cc12.  v8:= (`v1.w2`) v8 @kind object;
  #L48cc16.  call `W0`(v7, v8) @signature `Lv1/f1;.W0:(Lv1/w2;)V` @kind direct;
  #L48cc1c.  goto L48cd9c;
  #L48cc20.  v8:= v8.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L48cc24.  v8:= (`v1.j2`) v8 @kind object;
  #L48cc28.  call `T0`(v7, v8) @signature `Lv1/f1;.T0:(Lv1/j2;)V` @kind direct;
  #L48cc2e.  goto L48cd9c;
  #L48cc32.  v8:= v8.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L48cc36.  v8:= (`v1.f1$h`) v8 @kind object;
  #L48cc3a.  call `D0`(v7, v8) @signature `Lv1/f1;.D0:(Lv1/f1$h;)V` @kind direct;
  #L48cc40.  goto L48cd9c;
  #L48cc44.  call `p`(v7) @signature `Lv1/f1;.p:()V` @kind direct;
  #L48cc4a.  goto L48cd9c;
  #L48cc4e.  v5:= v8.`android.os.Message.arg1` @type ^`int`;
  #L48cc52.  if v5 == 0 then goto L48cc5a;
  #L48cc56.  v5:= 1I;
  #L48cc58.  goto L48cc5c;
  #L48cc5a.  v5:= 0I;
  #L48cc5c.  v8:= v8.`android.os.Message.arg2` @type ^`int`;
  #L48cc60.  call `R0`(v7, v5, v8, v4, v4) @signature `Lv1/f1;.R0:(ZIZI)V` @kind direct;
  #L48cc66.  goto L48cd9c;
  #L48cc6a.  call `k0`(v7) @signature `Lv1/f1;.k0:()V` @kind direct;
  #L48cc70.  goto L48cd9c;
  #L48cc74.  v8:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L48cc76.  v5:= instanceof @variable v8 @type ^`java.lang.IllegalStateException` @kind boolean;
  #L48cc7a.  if v5 != 0 then goto L48cc86;
  #L48cc7e.  v5:= instanceof @variable v8 @type ^`java.lang.IllegalArgumentException` @kind boolean;
  #L48cc82.  if v5 == 0 then goto L48cc8a;
  #L48cc86.  v2:= 1004I;
  #L48cc8a.  call temp:= `e`(v8, v2) @signature `Lv1/n;.e:(Ljava/lang/RuntimeException;I)Lv1/n;` @kind static;
  #L48cc90.  v8:= temp @kind object;
  #L48cc92.  call `d`(v1, v0, v8) @signature `Ls3/q;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L48cc98.  call `h1`(v7, v4, v3) @signature `Lv1/f1;.h1:(ZZ)V` @kind direct;
  #L48cc9e.  v0:= v7.`v1.f1.L` @type ^`v1.i2` @kind object;
  #L48cca2.  call temp:= `e`(v0, v8) @signature `Lv1/i2;.e:(Lv1/n;)Lv1/i2;` @kind virtual;
  #L48cca8.  v8:= temp @kind object;
  #L48ccaa.  v7.`v1.f1.L` @type ^`v1.i2` := v8 @kind object;
  #L48ccae.  goto L48cd9c;
  #L48ccb2.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L48ccb4.  v0:= 2000I;
  #L48ccb8.  goto L48cd1e;
  #L48ccba.  v8:= Exception @type ^`x2.b` @kind object;
  #L48ccbc.  v0:= 1002I;
  #L48ccc0.  goto L48cd1e;
  #L48ccc2.  v8:= Exception @type ^`r3.m` @kind object;
  #L48ccc4.  v0:= v8.`r3.m.o` @type ^`int`;
  #L48ccc8.  goto L48cd1e;
  #L48ccca.  v8:= Exception @type ^`v1.e2` @kind object;
  #L48cccc.  v0:= v8.`v1.e2.p` @type ^`int`;
  #L48ccd0.  if v0 != v4 then goto L48ccf0;
  #L48ccd4.  v0:= v8.`v1.e2.o` @type ^`boolean` @kind boolean;
  #L48ccd8.  if v0 == 0 then goto L48cce6;
  #L48ccdc.  v0:= 3001I;
  #L48cce0.  v2:= 3001I;
  #L48cce4.  goto L48cd10;
  #L48cce6.  v0:= 3003I;
  #L48ccea.  v2:= 3003I;
  #L48ccee.  goto L48cd10;
  #L48ccf0.  v1:= 4I;
  #L48ccf2.  if v0 != v1 then goto L48cd10;
  #L48ccf6.  v0:= v8.`v1.e2.o` @type ^`boolean` @kind boolean;
  #L48ccfa.  if v0 == 0 then goto L48cd08;
  #L48ccfe.  v0:= 3002I;
  #L48cd02.  v2:= 3002I;
  #L48cd06.  goto L48cd10;
  #L48cd08.  v0:= 3004I;
  #L48cd0c.  v2:= 3004I;
  #L48cd10.  call `G`(v7, v8, v2) @signature `Lv1/f1;.G:(Ljava/io/IOException;I)V` @kind direct;
  #L48cd16.  goto L48cd9c;
  #L48cd18.  v8:= Exception @type ^`z1.o$a` @kind object;
  #L48cd1a.  v0:= v8.`z1.o$a.o` @type ^`int`;
  #L48cd1e.  call `G`(v7, v8, v0) @signature `Lv1/f1;.G:(Ljava/io/IOException;I)V` @kind direct;
  #L48cd24.  goto L48cd9c;
  #L48cd26.  v8:= Exception @type ^`v1.n` @kind object;
  #L48cd28.  v2:= v8.`v1.n.q` @type ^`int`;
  #L48cd2c.  if v2 != v4 then goto L48cd50;
  #L48cd30.  v2:= v7.`v1.f1.G` @type ^`v1.a2` @kind object;
  #L48cd34.  call temp:= `q`(v2) @signature `Lv1/a2;.q:()Lv1/x1;` @kind virtual;
  #L48cd3a.  v2:= temp @kind object;
  #L48cd3c.  if v2 == 0 then goto L48cd50;
  #L48cd40.  v2:= v2.`v1.x1.f` @type ^`v1.y1` @kind object;
  #L48cd44.  v2:= v2.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L48cd48.  call temp:= `a`(v8, v2) @signature `Lv1/n;.a:(Lx2/s;)Lv1/n;` @kind virtual;
  #L48cd4e.  v8:= temp @kind object;
  #L48cd50.  v2:= v8.`v1.n.w` @type ^`boolean` @kind boolean;
  #L48cd54.  if v2 == 0 then goto L48cd86;
  #L48cd58.  v2:= v7.`v1.f1.c0` @type ^`v1.n` @kind object;
  #L48cd5c.  if v2 != 0 then goto L48cd86;
  #L48cd60.  v0:= "Recoverable renderer error" @kind object;
  #L48cd64.  call `i`(v1, v0, v8) @signature `Ls3/q;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L48cd6a.  v7.`v1.f1.c0` @type ^`v1.n` := v8 @kind object;
  #L48cd6e.  v0:= v7.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48cd72.  v1:= 25I;
  #L48cd76.  call temp:= `g`(v0, v1, v8) @signature `Ls3/m;.g:(ILjava/lang/Object;)Ls3/m$a;` @kind interface;
  #L48cd7c.  v8:= temp @kind object;
  #L48cd7e.  call temp:= `k`(v0, v8) @signature `Ls3/m;.k:(Ls3/m$a;)Z` @kind interface;
  #L48cd84.  goto L48cd9c;
  #L48cd86.  v2:= v7.`v1.f1.c0` @type ^`v1.n` @kind object;
  #L48cd8a.  if v2 == 0 then goto L48cc92;
  #L48cd8e.  call `addSuppressed`(v2, v8) @signature `Ljava/lang/Exception;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L48cd94.  v8:= v7.`v1.f1.c0` @type ^`v1.n` @kind object;
  #L48cd98.  goto L48cc92;
  #L48cd9c.  call `X`(v7) @signature `Lv1/f1;.X:()V` @kind direct;
  #L48cda2.  return v4;
  #L48cda4.  switch v5
                  | 0 => goto L48cc6a
                  | 1 => goto L48cc4e
                  | 2 => goto L48cc44
                  | 3 => goto L48cc32
                  | 4 => goto L48cc20
                  | 5 => goto L48cc0e
                  | 6 => goto L48cc04
                  | 7 => goto L48cbfc
                  | 8 => goto L48cbea
                  | 9 => goto L48cbd8
                  | 10 => goto L48cbce
                  | 11 => goto L48cbc0
                  | 12 => goto L48cba8
                  | 13 => goto L48cb88
                  | 14 => goto L48cb76
                  | 15 => goto L48cb64
                  | 16 => goto L48cb52
                  | 17 => goto L48cb40
                  | 18 => goto L48cb2a
                  | 19 => goto L48cb18
                  | 20 => goto L48cafe
                  | 21 => goto L48caec
                  | 22 => goto L48cae2
                  | 23 => goto L48caca
                  | 24 => goto L48cab2
                  | 25 => goto L48caa8
                  | else => goto L48caa6;
  catch `v1.n` @[L48ca9c..L48cc70] goto L48cd26;
  catch `z1.o$a` @[L48ca9c..L48cc70] goto L48cd18;
  catch `v1.e2` @[L48ca9c..L48cc70] goto L48ccca;
  catch `r3.m` @[L48ca9c..L48cc70] goto L48ccc2;
  catch `x2.b` @[L48ca9c..L48cc70] goto L48ccba;
  catch `java.io.IOException` @[L48ca9c..L48cc70] goto L48ccb2;
  catch `java.lang.RuntimeException` @[L48ca9c..L48cc70] goto L48cc74;
}
procedure `void` `i0`(`v1.f1` v2 @kind this, `x2.r` v3 @kind object) @signature `Lv1/f1;.i0:(Lx2/r;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48f730.  v0:= v2.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48f734.  v1:= 9I;
  #L48f738.  call temp:= `g`(v0, v1, v3) @signature `Ls3/m;.g:(ILjava/lang/Object;)Ls3/m$a;` @kind interface;
  #L48f73e.  v3:= temp @kind object;
  #L48f740.  call `a`(v3) @signature `Ls3/m$a;.a:()V` @kind interface;
  #L48f746.  return @kind void;
}
procedure `void` `j0`(`v1.f1` v2 @kind this) @signature `Lv1/f1;.j0:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48f804.  v0:= v2.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48f808.  v1:= 0I;
  #L48f80a.  call temp:= `j`(v0, v1) @signature `Ls3/m;.j:(I)Ls3/m$a;` @kind interface;
  #L48f810.  v0:= temp @kind object;
  #L48f812.  call `a`(v0) @signature `Ls3/m$a;.a:()V` @kind interface;
  #L48f818.  return @kind void;
}
procedure `boolean` `l0`(`v1.f1` v3 @kind this) @signature `Lv1/f1;.l0:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48d0d0.  @monitorenter v3
  #L48d0d2.  v0:= v3.`v1.f1.N` @type ^`boolean` @kind boolean;
  #L48d0d6.  if v0 != 0 then goto L48d114;
  #L48d0da.  v0:= v3.`v1.f1.w` @type ^`android.os.HandlerThread` @kind object;
  #L48d0de.  call temp:= `isAlive`(v0) @signature `Landroid/os/HandlerThread;.isAlive:()Z` @kind virtual;
  #L48d0e4.  v0:= temp;
  #L48d0e6.  if v0 != 0 then goto L48d0ec;
  #L48d0ea.  goto L48d114;
  #L48d0ec.  v0:= v3.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48d0f0.  v1:= 7I;
  #L48d0f2.  call temp:= `c`(v0, v1) @signature `Ls3/m;.c:(I)Z` @kind interface;
  #L48d0f8.  v0:= new `v1.e1`;
  #L48d0fc.  call `<init>`(v0, v3) @signature `Lv1/e1;.<init>:(Lv1/f1;)V` @kind direct;
  #L48d102.  v1:= v3.`v1.f1.J` @type ^`long` @kind wide;
  #L48d106.  call `p1`(v3, v0, v1) @signature `Lv1/f1;.p1:(Ll5/o;J)V` @kind direct;
  #L48d10c.  v0:= v3.`v1.f1.N` @type ^`boolean` @kind boolean;
  #L48d110.  @monitorexit v3
  #L48d112.  return v0;
  #L48d114.  v0:= 1I;
  #L48d116.  @monitorexit v3
  #L48d118.  return v0;
  #L48d11a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48d11c.  @monitorexit v3
  #L48d11e.  throw v0;
  catch `java.lang.Throwable` @[L48d0d2..L48d110] goto L48d11a;
}
procedure `void` `m`(`v1.f1` v0 @kind this, `x2.o0` v1 @kind object) @signature `Lv1/f1;.m:(Lx2/o0;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48f758.  v1:= (`x2.r`) v1 @kind object;
  #L48f75c.  call `i0`(v0, v1) @signature `Lv1/f1;.i0:(Lx2/r;)V` @kind virtual;
  #L48f762.  return @kind void;
}
procedure `void` `o0`(`v1.f1` v2 @kind this, `int` v3 , `int` v4 , `x2.p0` v5 @kind object) @signature `Lv1/f1;.o0:(IILx2/p0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48f92c.  v0:= v2.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48f930.  v1:= 20I;
  #L48f934.  call temp:= `d`(v0, v1, v3, v4, v5) @signature `Ls3/m;.d:(IIILjava/lang/Object;)Ls3/m$a;` @kind interface;
  #L48f93a.  v3:= temp @kind object;
  #L48f93c.  call `a`(v3) @signature `Ls3/m$a;.a:()V` @kind interface;
  #L48f942.  return @kind void;
}
procedure `void` `u`(`v1.f1` v2 @kind this, `v1.j2` v3 @kind object) @signature `Lv1/f1;.u:(Lv1/j2;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48f774.  v0:= v2.`v1.f1.v` @type ^`s3.m` @kind object;
  #L48f778.  v1:= 16I;
  #L48f77c.  call temp:= `g`(v0, v1, v3) @signature `Ls3/m;.g:(ILjava/lang/Object;)Ls3/m$a;` @kind interface;
  #L48f782.  v3:= temp @kind object;
  #L48f784.  call `a`(v3) @signature `Ls3/m$a;.a:()V` @kind interface;
  #L48f78a.  return @kind void;
}
procedure `void` `v`(`v1.f1` v0 @kind this, `long` v1 ) @signature `Lv1/f1;.v:(J)V` @AccessFlag PUBLIC {
    temp;

  #L48e90c.  return @kind void;
}
