record `v1.y1` @kind class @AccessFlag FINAL {
  `x2.u$b` `v1.y1.a` @AccessFlag PUBLIC_FINAL;
  `long` `v1.y1.b` @AccessFlag PUBLIC_FINAL;
  `long` `v1.y1.c` @AccessFlag PUBLIC_FINAL;
  `long` `v1.y1.d` @AccessFlag PUBLIC_FINAL;
  `long` `v1.y1.e` @AccessFlag PUBLIC_FINAL;
  `boolean` `v1.y1.f` @AccessFlag PUBLIC_FINAL;
  `boolean` `v1.y1.g` @AccessFlag PUBLIC_FINAL;
  `boolean` `v1.y1.h` @AccessFlag PUBLIC_FINAL;
  `boolean` `v1.y1.i` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`v1.y1` v8 @kind this, `x2.u$b` v9 @kind object, `long` v10 , `long` v12 , `long` v14 , `long` v16 , `boolean` v18 , `boolean` v19 , `boolean` v20 , `boolean` v21 ) @signature `Lv1/y1;.<init>:(Lx2/u$b;JJJJZZZZ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L499754.  v0:= v8 @kind object;
  #L499756.  v1:= v18;
  #L49975a.  v2:= v19;
  #L49975e.  v3:= v20;
  #L499762.  v4:= v21;
  #L499766.  call `<init>`(v8) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49976c.  v5:= 0I;
  #L49976e.  v6:= 1I;
  #L499770.  if v4 == 0 then goto L49977e;
  #L499774.  if v2 == 0 then goto L49977a;
  #L499778.  goto L49977e;
  #L49977a.  v7:= 0I;
  #L49977c.  goto L499780;
  #L49977e.  v7:= 1I;
  #L499780.  call `a`(v7) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L499786.  if v3 == 0 then goto L499794;
  #L49978a.  if v2 == 0 then goto L499790;
  #L49978e.  goto L499794;
  #L499790.  v7:= 0I;
  #L499792.  goto L499796;
  #L499794.  v7:= 1I;
  #L499796.  call `a`(v7) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L49979c.  if v1 == 0 then goto L4997ac;
  #L4997a0.  if v2 != 0 then goto L4997ae;
  #L4997a4.  if v3 != 0 then goto L4997ae;
  #L4997a8.  if v4 != 0 then goto L4997ae;
  #L4997ac.  v5:= 1I;
  #L4997ae.  call `a`(v5) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L4997b4.  v5:= v9 @kind object;
  #L4997b6.  v0.`v1.y1.a` @type ^`x2.u$b` := v5 @kind object;
  #L4997ba.  v5:= v10 @kind wide;
  #L4997bc.  v0.`v1.y1.b` @type ^`long` := v5 @kind wide;
  #L4997c0.  v5:= v12 @kind wide;
  #L4997c2.  v0.`v1.y1.c` @type ^`long` := v5 @kind wide;
  #L4997c6.  v5:= v14 @kind wide;
  #L4997c8.  v0.`v1.y1.d` @type ^`long` := v5 @kind wide;
  #L4997cc.  v5:= v16 @kind wide;
  #L4997d0.  v0.`v1.y1.e` @type ^`long` := v5 @kind wide;
  #L4997d4.  v0.`v1.y1.f` @type ^`boolean` := v1 @kind boolean;
  #L4997d8.  v0.`v1.y1.g` @type ^`boolean` := v2 @kind boolean;
  #L4997dc.  v0.`v1.y1.h` @type ^`boolean` := v3 @kind boolean;
  #L4997e0.  v0.`v1.y1.i` @type ^`boolean` := v4 @kind boolean;
  #L4997e4.  return @kind void;
}
procedure `v1.y1` `a`(`v1.y1` v17 @kind this, `long` v18 ) @signature `Lv1/y1;.a:(J)Lv1/y1;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L49969c.  v0:= v17 @kind object;
  #L4996a0.  v1:= v0.`v1.y1.c` @type ^`long` @kind wide;
  #L4996a4.  v3:= lcmp(v18, v1);
  #L4996a8.  if v3 != 0 then goto L4996b0;
  #L4996ac.  v1:= v0 @kind object;
  #L4996ae.  goto L4996e4;
  #L4996b0.  v1:= new `v1.y1`;
  #L4996b4.  v4:= v0.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L4996b8.  v5:= v0.`v1.y1.b` @type ^`long` @kind wide;
  #L4996bc.  v9:= v0.`v1.y1.d` @type ^`long` @kind wide;
  #L4996c0.  v11:= v0.`v1.y1.e` @type ^`long` @kind wide;
  #L4996c4.  v13:= v0.`v1.y1.f` @type ^`boolean` @kind boolean;
  #L4996c8.  v14:= v0.`v1.y1.g` @type ^`boolean` @kind boolean;
  #L4996cc.  v15:= v0.`v1.y1.h` @type ^`boolean` @kind boolean;
  #L4996d0.  v2:= v0.`v1.y1.i` @type ^`boolean` @kind boolean;
  #L4996d4.  v3:= v1 @kind object;
  #L4996d6.  v7:= v18 @kind wide;
  #L4996da.  v16:= v2;
  #L4996de.  call `<init>`(v3, v4, v5, v7, v9, v11, v13, v14, v15, v16) @signature `Lv1/y1;.<init>:(Lx2/u$b;JJJJZZZZ)V` @kind direct;
  #L4996e4.  return v1 @kind object;
}
procedure `v1.y1` `b`(`v1.y1` v17 @kind this, `long` v18 ) @signature `Lv1/y1;.b:(J)Lv1/y1;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L4996f8.  v0:= v17 @kind object;
  #L4996fc.  v1:= v0.`v1.y1.b` @type ^`long` @kind wide;
  #L499700.  v3:= lcmp(v18, v1);
  #L499704.  if v3 != 0 then goto L49970c;
  #L499708.  v1:= v0 @kind object;
  #L49970a.  goto L499740;
  #L49970c.  v1:= new `v1.y1`;
  #L499710.  v4:= v0.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L499714.  v7:= v0.`v1.y1.c` @type ^`long` @kind wide;
  #L499718.  v9:= v0.`v1.y1.d` @type ^`long` @kind wide;
  #L49971c.  v11:= v0.`v1.y1.e` @type ^`long` @kind wide;
  #L499720.  v13:= v0.`v1.y1.f` @type ^`boolean` @kind boolean;
  #L499724.  v14:= v0.`v1.y1.g` @type ^`boolean` @kind boolean;
  #L499728.  v15:= v0.`v1.y1.h` @type ^`boolean` @kind boolean;
  #L49972c.  v2:= v0.`v1.y1.i` @type ^`boolean` @kind boolean;
  #L499730.  v3:= v1 @kind object;
  #L499732.  v5:= v18 @kind wide;
  #L499736.  v16:= v2;
  #L49973a.  call `<init>`(v3, v4, v5, v7, v9, v11, v13, v14, v15, v16) @signature `Lv1/y1;.<init>:(Lx2/u$b;JJJJZZZZ)V` @kind direct;
  #L499740.  return v1 @kind object;
}
procedure `boolean` `equals`(`v1.y1` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lv1/y1;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L499560.  v0:= 1I;
  #L499562.  if v7 != v8 then goto L499568;
  #L499566.  return v0;
  #L499568.  v1:= 0I;
  #L49956a.  if v8 == 0 then goto L49960e;
  #L49956e.  v2:= constclass @type ^`v1.y1` @kind object;
  #L499572.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L499578.  v3:= temp @kind object;
  #L49957a.  if v2 == v3 then goto L499580;
  #L49957e.  goto L49960e;
  #L499580.  v8:= (`v1.y1`) v8 @kind object;
  #L499584.  v2:= v7.`v1.y1.b` @type ^`long` @kind wide;
  #L499588.  v4:= v8.`v1.y1.b` @type ^`long` @kind wide;
  #L49958c.  v6:= lcmp(v2, v4);
  #L499590.  if v6 != 0 then goto L49960a;
  #L499594.  v2:= v7.`v1.y1.c` @type ^`long` @kind wide;
  #L499598.  v4:= v8.`v1.y1.c` @type ^`long` @kind wide;
  #L49959c.  v6:= lcmp(v2, v4);
  #L4995a0.  if v6 != 0 then goto L49960a;
  #L4995a4.  v2:= v7.`v1.y1.d` @type ^`long` @kind wide;
  #L4995a8.  v4:= v8.`v1.y1.d` @type ^`long` @kind wide;
  #L4995ac.  v6:= lcmp(v2, v4);
  #L4995b0.  if v6 != 0 then goto L49960a;
  #L4995b4.  v2:= v7.`v1.y1.e` @type ^`long` @kind wide;
  #L4995b8.  v4:= v8.`v1.y1.e` @type ^`long` @kind wide;
  #L4995bc.  v6:= lcmp(v2, v4);
  #L4995c0.  if v6 != 0 then goto L49960a;
  #L4995c4.  v2:= v7.`v1.y1.f` @type ^`boolean` @kind boolean;
  #L4995c8.  v3:= v8.`v1.y1.f` @type ^`boolean` @kind boolean;
  #L4995cc.  if v2 != v3 then goto L49960a;
  #L4995d0.  v2:= v7.`v1.y1.g` @type ^`boolean` @kind boolean;
  #L4995d4.  v3:= v8.`v1.y1.g` @type ^`boolean` @kind boolean;
  #L4995d8.  if v2 != v3 then goto L49960a;
  #L4995dc.  v2:= v7.`v1.y1.h` @type ^`boolean` @kind boolean;
  #L4995e0.  v3:= v8.`v1.y1.h` @type ^`boolean` @kind boolean;
  #L4995e4.  if v2 != v3 then goto L49960a;
  #L4995e8.  v2:= v7.`v1.y1.i` @type ^`boolean` @kind boolean;
  #L4995ec.  v3:= v8.`v1.y1.i` @type ^`boolean` @kind boolean;
  #L4995f0.  if v2 != v3 then goto L49960a;
  #L4995f4.  v2:= v7.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L4995f8.  v8:= v8.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L4995fc.  call temp:= `c`(v2, v8) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L499602.  v8:= temp;
  #L499604.  if v8 == 0 then goto L49960a;
  #L499608.  goto L49960c;
  #L49960a.  v0:= 0I;
  #L49960c.  return v0;
  #L49960e.  return v1;
}
procedure `int` `hashCode`(`v1.y1` v4 @kind this) @signature `Lv1/y1;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L499620.  v0:= v4.`v1.y1.a` @type ^`x2.u$b` @kind object;
  #L499624.  call temp:= `hashCode`(v0) @signature `Lx2/s;.hashCode:()I` @kind virtual;
  #L49962a.  v0:= temp;
  #L49962c.  v1:= 527I;
  #L499630.  v1:= v1 + v0 @kind int;
  #L499632.  v1:= v1 * 31;
  #L499636.  v2:= v4.`v1.y1.b` @type ^`long` @kind wide;
  #L49963a.  v0:= (`int`) v2 @kind l2i;
  #L49963c.  v1:= v1 + v0 @kind int;
  #L49963e.  v1:= v1 * 31;
  #L499642.  v2:= v4.`v1.y1.c` @type ^`long` @kind wide;
  #L499646.  v0:= (`int`) v2 @kind l2i;
  #L499648.  v1:= v1 + v0 @kind int;
  #L49964a.  v1:= v1 * 31;
  #L49964e.  v2:= v4.`v1.y1.d` @type ^`long` @kind wide;
  #L499652.  v0:= (`int`) v2 @kind l2i;
  #L499654.  v1:= v1 + v0 @kind int;
  #L499656.  v1:= v1 * 31;
  #L49965a.  v2:= v4.`v1.y1.e` @type ^`long` @kind wide;
  #L49965e.  v0:= (`int`) v2 @kind l2i;
  #L499660.  v1:= v1 + v0 @kind int;
  #L499662.  v1:= v1 * 31;
  #L499666.  v0:= v4.`v1.y1.f` @type ^`boolean` @kind boolean;
  #L49966a.  v1:= v1 + v0 @kind int;
  #L49966c.  v1:= v1 * 31;
  #L499670.  v0:= v4.`v1.y1.g` @type ^`boolean` @kind boolean;
  #L499674.  v1:= v1 + v0 @kind int;
  #L499676.  v1:= v1 * 31;
  #L49967a.  v0:= v4.`v1.y1.h` @type ^`boolean` @kind boolean;
  #L49967e.  v1:= v1 + v0 @kind int;
  #L499680.  v1:= v1 * 31;
  #L499684.  v0:= v4.`v1.y1.i` @type ^`boolean` @kind boolean;
  #L499688.  v1:= v1 + v0 @kind int;
  #L49968a.  return v1;
}
