record `v1.r1$g` @kind class @AccessFlag PUBLIC_FINAL extends `v1.g` @kind interface {
  `long` `v1.r1$g.o` @AccessFlag PUBLIC_FINAL;
  `long` `v1.r1$g.p` @AccessFlag PUBLIC_FINAL;
  `long` `v1.r1$g.q` @AccessFlag PUBLIC_FINAL;
  `float` `v1.r1$g.r` @AccessFlag PUBLIC_FINAL;
  `float` `v1.r1$g.s` @AccessFlag PUBLIC_FINAL;
}
global `v1.r1$g` `@@v1.r1$g.t` @AccessFlag PUBLIC_STATIC_FINAL;
global `v1.g$a` `@@v1.r1$g.u` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lv1/r1$g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L496c18.  v0:= new `v1.r1$g$a`;
  #L496c1c.  call `<init>`(v0) @signature `Lv1/r1$g$a;.<init>:()V` @kind direct;
  #L496c22.  call temp:= `f`(v0) @signature `Lv1/r1$g$a;.f:()Lv1/r1$g;` @kind virtual;
  #L496c28.  v0:= temp @kind object;
  #L496c2a.  `@@v1.r1$g.t` @type ^`v1.r1$g` := v0 @kind object;
  #L496c2e.  v0:= `@@v1.t1.a` @type ^`v1.t1` @kind object;
  #L496c32.  `@@v1.r1$g.u` @type ^`v1.g$a` := v0 @kind object;
  #L496c36.  return @kind void;
}
procedure `void` `<init>`(`v1.r1$g` v0 @kind this, `long` v1 , `long` v3 , `long` v5 , `float` v7 , `float` v8 ) @signature `Lv1/r1$g;.<init>:(JJJFF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L496c48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L496c4e.  v0.`v1.r1$g.o` @type ^`long` := v1 @kind wide;
  #L496c52.  v0.`v1.r1$g.p` @type ^`long` := v3 @kind wide;
  #L496c56.  v0.`v1.r1$g.q` @type ^`long` := v5 @kind wide;
  #L496c5a.  v0.`v1.r1$g.r` @type ^`float` := v7;
  #L496c5e.  v0.`v1.r1$g.s` @type ^`float` := v8;
  #L496c62.  return @kind void;
}
procedure `void` `<init>`(`v1.r1$g` v9 @kind this, `v1.r1$g$a` v10 @kind object) @signature `Lv1/r1$g;.<init>:(Lv1/r1$g$a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L496c74.  call temp:= `a`(v10) @signature `Lv1/r1$g$a;.a:(Lv1/r1$g$a;)J` @kind static;
  #L496c7a.  v1:= temp @kind wide;
  #L496c7c.  call temp:= `b`(v10) @signature `Lv1/r1$g$a;.b:(Lv1/r1$g$a;)J` @kind static;
  #L496c82.  v3:= temp @kind wide;
  #L496c84.  call temp:= `c`(v10) @signature `Lv1/r1$g$a;.c:(Lv1/r1$g$a;)J` @kind static;
  #L496c8a.  v5:= temp @kind wide;
  #L496c8c.  call temp:= `d`(v10) @signature `Lv1/r1$g$a;.d:(Lv1/r1$g$a;)F` @kind static;
  #L496c92.  v7:= temp;
  #L496c94.  call temp:= `e`(v10) @signature `Lv1/r1$g$a;.e:(Lv1/r1$g$a;)F` @kind static;
  #L496c9a.  v8:= temp;
  #L496c9c.  v0:= v9 @kind object;
  #L496c9e.  call `<init>`(v0, v1, v3, v5, v7, v8) @signature `Lv1/r1$g;.<init>:(JJJFF)V` @kind direct;
  #L496ca4.  return @kind void;
}
procedure `void` `<init>`(`v1.r1$g` v0 @kind this, `v1.r1$g$a` v1 @kind object, `v1.r1$a` v2 @kind object) @signature `Lv1/r1$g;.<init>:(Lv1/r1$g$a;Lv1/r1$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L496cb8.  call `<init>`(v0, v1) @signature `Lv1/r1$g;.<init>:(Lv1/r1$g$a;)V` @kind direct;
  #L496cbe.  return @kind void;
}
procedure `v1.r1$g` `a`(`android.os.Bundle` v0 @kind object) @signature `Lv1/r1$g;.a:(Landroid/os/Bundle;)Lv1/r1$g;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L496b48.  call temp:= `d`(v0) @signature `Lv1/r1$g;.d:(Landroid/os/Bundle;)Lv1/r1$g;` @kind static;
  #L496b4e.  v0:= temp @kind object;
  #L496b50.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`int` v1 ) @signature `Lv1/r1$g;.c:(I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L496b28.  v0:= 36I;
  #L496b2c.  call temp:= `toString`(v1, v0) @signature `Ljava/lang/Integer;.toString:(II)Ljava/lang/String;` @kind static;
  #L496b32.  v1:= temp @kind object;
  #L496b34.  return v1 @kind object;
}
procedure `v1.r1$g` `d`(`android.os.Bundle` v11 @kind object) @signature `Lv1/r1$g;.d:(Landroid/os/Bundle;)Lv1/r1$g;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L496b64.  v9:= new `v1.r1$g`;
  #L496b68.  v0:= 0I;
  #L496b6a.  call temp:= `c`(v0) @signature `Lv1/r1$g;.c:(I)Ljava/lang/String;` @kind static;
  #L496b70.  v0:= temp @kind object;
  #L496b72.  v1:= -4.9E-324D;
  #L496b7c.  call temp:= `getLong`(v11, v0, v1) @signature `Landroid/os/Bundle;.getLong:(Ljava/lang/String;J)J` @kind virtual;
  #L496b82.  v3:= temp @kind wide;
  #L496b84.  v0:= 1I;
  #L496b86.  call temp:= `c`(v0) @signature `Lv1/r1$g;.c:(I)Ljava/lang/String;` @kind static;
  #L496b8c.  v0:= temp @kind object;
  #L496b8e.  call temp:= `getLong`(v11, v0, v1) @signature `Landroid/os/Bundle;.getLong:(Ljava/lang/String;J)J` @kind virtual;
  #L496b94.  v5:= temp @kind wide;
  #L496b96.  v0:= 2I;
  #L496b98.  call temp:= `c`(v0) @signature `Lv1/r1$g;.c:(I)Ljava/lang/String;` @kind static;
  #L496b9e.  v0:= temp @kind object;
  #L496ba0.  call temp:= `getLong`(v11, v0, v1) @signature `Landroid/os/Bundle;.getLong:(Ljava/lang/String;J)J` @kind virtual;
  #L496ba6.  v7:= temp @kind wide;
  #L496ba8.  v0:= 3I;
  #L496baa.  call temp:= `c`(v0) @signature `Lv1/r1$g;.c:(I)Ljava/lang/String;` @kind static;
  #L496bb0.  v0:= temp @kind object;
  #L496bb2.  v1:= -8388609I;
  #L496bb8.  call temp:= `getFloat`(v11, v0, v1) @signature `Landroid/os/Bundle;.getFloat:(Ljava/lang/String;F)F` @kind virtual;
  #L496bbe.  v10:= temp;
  #L496bc0.  v0:= 4I;
  #L496bc2.  call temp:= `c`(v0) @signature `Lv1/r1$g;.c:(I)Ljava/lang/String;` @kind static;
  #L496bc8.  v0:= temp @kind object;
  #L496bca.  call temp:= `getFloat`(v11, v0, v1) @signature `Landroid/os/Bundle;.getFloat:(Ljava/lang/String;F)F` @kind virtual;
  #L496bd0.  v11:= temp;
  #L496bd2.  v0:= v9 @kind object;
  #L496bd4.  v1:= v3 @kind wide;
  #L496bd6.  v3:= v5 @kind wide;
  #L496bd8.  v5:= v7 @kind wide;
  #L496bda.  v7:= v10;
  #L496bdc.  v8:= v11;
  #L496bde.  call `<init>`(v0, v1, v3, v5, v7, v8) @signature `Lv1/r1$g;.<init>:(JJJFF)V` @kind direct;
  #L496be4.  return v9 @kind object;
}
procedure `v1.r1$g$a` `b`(`v1.r1$g` v2 @kind this) @signature `Lv1/r1$g;.b:()Lv1/r1$g$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L496bf8.  v0:= new `v1.r1$g$a`;
  #L496bfc.  v1:= 0I;
  #L496bfe.  call `<init>`(v0, v2, v1) @signature `Lv1/r1$g$a;.<init>:(Lv1/r1$g;Lv1/r1$a;)V` @kind direct;
  #L496c04.  return v0 @kind object;
}
procedure `boolean` `equals`(`v1.r1$g` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lv1/r1$g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L496a24.  v0:= 1I;
  #L496a26.  if v7 != v8 then goto L496a2c;
  #L496a2a.  return v0;
  #L496a2c.  v1:= instanceof @variable v8 @type ^`v1.r1$g` @kind boolean;
  #L496a30.  v2:= 0I;
  #L496a32.  if v1 != 0 then goto L496a38;
  #L496a36.  return v2;
  #L496a38.  v8:= (`v1.r1$g`) v8 @kind object;
  #L496a3c.  v3:= v7.`v1.r1$g.o` @type ^`long` @kind wide;
  #L496a40.  v5:= v8.`v1.r1$g.o` @type ^`long` @kind wide;
  #L496a44.  v1:= lcmp(v3, v5);
  #L496a48.  if v1 != 0 then goto L496a8e;
  #L496a4c.  v3:= v7.`v1.r1$g.p` @type ^`long` @kind wide;
  #L496a50.  v5:= v8.`v1.r1$g.p` @type ^`long` @kind wide;
  #L496a54.  v1:= lcmp(v3, v5);
  #L496a58.  if v1 != 0 then goto L496a8e;
  #L496a5c.  v3:= v7.`v1.r1$g.q` @type ^`long` @kind wide;
  #L496a60.  v5:= v8.`v1.r1$g.q` @type ^`long` @kind wide;
  #L496a64.  v1:= lcmp(v3, v5);
  #L496a68.  if v1 != 0 then goto L496a8e;
  #L496a6c.  v1:= v7.`v1.r1$g.r` @type ^`float`;
  #L496a70.  v3:= v8.`v1.r1$g.r` @type ^`float`;
  #L496a74.  v1:= fcmpl(v1, v3);
  #L496a78.  if v1 != 0 then goto L496a8e;
  #L496a7c.  v1:= v7.`v1.r1$g.s` @type ^`float`;
  #L496a80.  v8:= v8.`v1.r1$g.s` @type ^`float`;
  #L496a84.  v8:= fcmpl(v1, v8);
  #L496a88.  if v8 != 0 then goto L496a8e;
  #L496a8c.  goto L496a90;
  #L496a8e.  v0:= 0I;
  #L496a90.  return v0;
}
procedure `int` `hashCode`(`v1.r1$g` v7 @kind this) @signature `Lv1/r1$g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L496aa4.  v0:= v7.`v1.r1$g.o` @type ^`long` @kind wide;
  #L496aa8.  v2:= 32I;
  #L496aac.  v3:= v0 ^>> v2 @kind long;
  #L496ab0.  v0:= v0 ^~ v3 @kind long;
  #L496ab2.  v1:= (`int`) v0 @kind l2i;
  #L496ab4.  v1:= v1 * 31;
  #L496ab8.  v3:= v7.`v1.r1$g.p` @type ^`long` @kind wide;
  #L496abc.  v5:= v3 ^>> v2 @kind long;
  #L496ac0.  v3:= v3 ^~ v5 @kind long;
  #L496ac2.  v0:= (`int`) v3 @kind l2i;
  #L496ac4.  v1:= v1 + v0 @kind int;
  #L496ac6.  v1:= v1 * 31;
  #L496aca.  v3:= v7.`v1.r1$g.q` @type ^`long` @kind wide;
  #L496ace.  v5:= v3 ^>> v2 @kind long;
  #L496ad2.  v2:= v3 ^~ v5 @kind long;
  #L496ad6.  v0:= (`int`) v2 @kind l2i;
  #L496ad8.  v1:= v1 + v0 @kind int;
  #L496ada.  v1:= v1 * 31;
  #L496ade.  v0:= v7.`v1.r1$g.r` @type ^`float`;
  #L496ae2.  v2:= 0I;
  #L496ae4.  v3:= 0I;
  #L496ae6.  v4:= fcmpl(v0, v3);
  #L496aea.  if v4 == 0 then goto L496af8;
  #L496aee.  call temp:= `floatToIntBits`(v0) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L496af4.  v0:= temp;
  #L496af6.  goto L496afa;
  #L496af8.  v0:= 0I;
  #L496afa.  v1:= v1 + v0 @kind int;
  #L496afc.  v1:= v1 * 31;
  #L496b00.  v0:= v7.`v1.r1$g.s` @type ^`float`;
  #L496b04.  v3:= fcmpl(v0, v3);
  #L496b08.  if v3 == 0 then goto L496b14;
  #L496b0c.  call temp:= `floatToIntBits`(v0) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L496b12.  v2:= temp;
  #L496b14.  v1:= v1 + v2 @kind int;
  #L496b16.  return v1;
}
