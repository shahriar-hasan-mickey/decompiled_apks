record `v1.d3$b` @kind class @AccessFlag PUBLIC_FINAL extends `v1.g` @kind interface {
  `java.lang.Object` `v1.d3$b.o` @AccessFlag PUBLIC;
  `java.lang.Object` `v1.d3$b.p` @AccessFlag PUBLIC;
  `int` `v1.d3$b.q` @AccessFlag PUBLIC;
  `long` `v1.d3$b.r` @AccessFlag PUBLIC;
  `long` `v1.d3$b.s` @AccessFlag PUBLIC;
  `boolean` `v1.d3$b.t` @AccessFlag PUBLIC;
  `y2.c` `v1.d3$b.u` @AccessFlag PRIVATE;
}
global `v1.g$a` `@@v1.d3$b.v` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lv1/d3$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L49e054.  v0:= `@@v1.e3.a` @type ^`v1.e3` @kind object;
  #L49e058.  `@@v1.d3$b.v` @type ^`v1.g$a` := v0 @kind object;
  #L49e05c.  return @kind void;
}
procedure `void` `<init>`(`v1.d3$b` v1 @kind this) @signature `Lv1/d3$b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L49e070.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49e076.  v0:= `@@y2.c.u` @type ^`y2.c` @kind object;
  #L49e07a.  v1.`v1.d3$b.u` @type ^`y2.c` := v0 @kind object;
  #L49e07e.  return @kind void;
}
procedure `v1.d3$b` `a`(`android.os.Bundle` v0 @kind object) @signature `Lv1/d3$b;.a:(Landroid/os/Bundle;)Lv1/d3$b;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L49df2c.  call temp:= `b`(v0) @signature `Lv1/d3$b;.b:(Landroid/os/Bundle;)Lv1/d3$b;` @kind static;
  #L49df32.  v0:= temp @kind object;
  #L49df34.  return v0 @kind object;
}
procedure `v1.d3$b` `b`(`android.os.Bundle` v12 @kind object) @signature `Lv1/d3$b;.b:(Landroid/os/Bundle;)Lv1/d3$b;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L49df48.  v0:= 0I;
  #L49df4a.  call temp:= `t`(v0) @signature `Lv1/d3$b;.t:(I)Ljava/lang/String;` @kind static;
  #L49df50.  v1:= temp @kind object;
  #L49df52.  call temp:= `getInt`(v12, v1, v0) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;I)I` @kind virtual;
  #L49df58.  v5:= temp;
  #L49df5a.  v0:= 1I;
  #L49df5c.  call temp:= `t`(v0) @signature `Lv1/d3$b;.t:(I)Ljava/lang/String;` @kind static;
  #L49df62.  v0:= temp @kind object;
  #L49df64.  v1:= -4.9E-324D;
  #L49df6e.  call temp:= `getLong`(v12, v0, v1) @signature `Landroid/os/Bundle;.getLong:(Ljava/lang/String;J)J` @kind virtual;
  #L49df74.  v6:= temp @kind wide;
  #L49df76.  v0:= 2I;
  #L49df78.  call temp:= `t`(v0) @signature `Lv1/d3$b;.t:(I)Ljava/lang/String;` @kind static;
  #L49df7e.  v0:= temp @kind object;
  #L49df80.  v1:= 0L;
  #L49df84.  call temp:= `getLong`(v12, v0, v1) @signature `Landroid/os/Bundle;.getLong:(Ljava/lang/String;J)J` @kind virtual;
  #L49df8a.  v8:= temp @kind wide;
  #L49df8c.  v0:= 3I;
  #L49df8e.  call temp:= `t`(v0) @signature `Lv1/d3$b;.t:(I)Ljava/lang/String;` @kind static;
  #L49df94.  v0:= temp @kind object;
  #L49df96.  call temp:= `getBoolean`(v12, v0) @signature `Landroid/os/Bundle;.getBoolean:(Ljava/lang/String;)Z` @kind virtual;
  #L49df9c.  v11:= temp;
  #L49df9e.  v0:= 4I;
  #L49dfa0.  call temp:= `t`(v0) @signature `Lv1/d3$b;.t:(I)Ljava/lang/String;` @kind static;
  #L49dfa6.  v0:= temp @kind object;
  #L49dfa8.  call temp:= `getBundle`(v12, v0) @signature `Landroid/os/Bundle;.getBundle:(Ljava/lang/String;)Landroid/os/Bundle;` @kind virtual;
  #L49dfae.  v12:= temp @kind object;
  #L49dfb0.  if v12 == 0 then goto L49dfc6;
  #L49dfb4.  v0:= `@@y2.c.w` @type ^`v1.g$a` @kind object;
  #L49dfb8.  call temp:= `a`(v0, v12) @signature `Lv1/g$a;.a:(Landroid/os/Bundle;)Lv1/g;` @kind interface;
  #L49dfbe.  v12:= temp @kind object;
  #L49dfc0.  v12:= (`y2.c`) v12 @kind object;
  #L49dfc4.  goto L49dfca;
  #L49dfc6.  v12:= `@@y2.c.u` @type ^`y2.c` @kind object;
  #L49dfca.  v10:= v12 @kind object;
  #L49dfcc.  v12:= new `v1.d3$b`;
  #L49dfd0.  call `<init>`(v12) @signature `Lv1/d3$b;.<init>:()V` @kind direct;
  #L49dfd6.  v3:= 0I;
  #L49dfd8.  v4:= 0I;
  #L49dfda.  v2:= v12 @kind object;
  #L49dfdc.  call temp:= `v`(v2, v3, v4, v5, v6, v8, v10, v11) @signature `Lv1/d3$b;.v:(Ljava/lang/Object;Ljava/lang/Object;IJJLy2/c;Z)Lv1/d3$b;` @kind virtual;
  #L49dfe2.  return v12 @kind object;
}
procedure `java.lang.String` `t`(`int` v1 ) @signature `Lv1/d3$b;.t:(I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L49de1c.  v0:= 36I;
  #L49de20.  call temp:= `toString`(v1, v0) @signature `Ljava/lang/Integer;.toString:(II)Ljava/lang/String;` @kind static;
  #L49de26.  v1:= temp @kind object;
  #L49de28.  return v1 @kind object;
}
procedure `int` `c`(`v1.d3$b` v1 @kind this, `int` v2 ) @signature `Lv1/d3$b;.c:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49dc60.  v0:= v1.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49dc64.  call temp:= `c`(v0, v2) @signature `Ly2/c;.c:(I)Ly2/c$a;` @kind virtual;
  #L49dc6a.  v2:= temp @kind object;
  #L49dc6c.  v2:= v2.`y2.c$a.p` @type ^`int`;
  #L49dc70.  return v2;
}
procedure `long` `d`(`v1.d3$b` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lv1/d3$b;.d:(II)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49de3c.  v0:= v2.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49de40.  call temp:= `c`(v0, v3) @signature `Ly2/c;.c:(I)Ly2/c$a;` @kind virtual;
  #L49de46.  v3:= temp @kind object;
  #L49de48.  v0:= v3.`y2.c$a.p` @type ^`int`;
  #L49de4c.  v1:= -1I;
  #L49de4e.  if v0 == v1 then goto L49de5c;
  #L49de52.  v3:= v3.`y2.c$a.s` @type ^`long`[] @kind object;
  #L49de56.  v0:= v3[v4] @kind wide;
  #L49de5a.  goto L49de66;
  #L49de5c.  v0:= -4.9E-324D;
  #L49de66.  return v0 @kind wide;
}
procedure `int` `e`(`v1.d3$b` v1 @kind this) @signature `Lv1/d3$b;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49dc84.  v0:= v1.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49dc88.  v0:= v0.`y2.c.p` @type ^`int`;
  #L49dc8c.  return v0;
}
procedure `boolean` `equals`(`v1.d3$b` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lv1/d3$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L49db58.  v0:= 1I;
  #L49db5a.  if v7 != v8 then goto L49db60;
  #L49db5e.  return v0;
  #L49db60.  v1:= 0I;
  #L49db62.  if v8 == 0 then goto L49dbfe;
  #L49db66.  v2:= constclass @type ^`v1.d3$b` @kind object;
  #L49db6a.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L49db70.  v3:= temp @kind object;
  #L49db72.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L49db78.  v2:= temp;
  #L49db7a.  if v2 != 0 then goto L49db80;
  #L49db7e.  goto L49dbfe;
  #L49db80.  v8:= (`v1.d3$b`) v8 @kind object;
  #L49db84.  v2:= v7.`v1.d3$b.o` @type ^`java.lang.Object` @kind object;
  #L49db88.  v3:= v8.`v1.d3$b.o` @type ^`java.lang.Object` @kind object;
  #L49db8c.  call temp:= `c`(v2, v3) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L49db92.  v2:= temp;
  #L49db94.  if v2 == 0 then goto L49dbfa;
  #L49db98.  v2:= v7.`v1.d3$b.p` @type ^`java.lang.Object` @kind object;
  #L49db9c.  v3:= v8.`v1.d3$b.p` @type ^`java.lang.Object` @kind object;
  #L49dba0.  call temp:= `c`(v2, v3) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L49dba6.  v2:= temp;
  #L49dba8.  if v2 == 0 then goto L49dbfa;
  #L49dbac.  v2:= v7.`v1.d3$b.q` @type ^`int`;
  #L49dbb0.  v3:= v8.`v1.d3$b.q` @type ^`int`;
  #L49dbb4.  if v2 != v3 then goto L49dbfa;
  #L49dbb8.  v2:= v7.`v1.d3$b.r` @type ^`long` @kind wide;
  #L49dbbc.  v4:= v8.`v1.d3$b.r` @type ^`long` @kind wide;
  #L49dbc0.  v6:= lcmp(v2, v4);
  #L49dbc4.  if v6 != 0 then goto L49dbfa;
  #L49dbc8.  v2:= v7.`v1.d3$b.s` @type ^`long` @kind wide;
  #L49dbcc.  v4:= v8.`v1.d3$b.s` @type ^`long` @kind wide;
  #L49dbd0.  v6:= lcmp(v2, v4);
  #L49dbd4.  if v6 != 0 then goto L49dbfa;
  #L49dbd8.  v2:= v7.`v1.d3$b.t` @type ^`boolean` @kind boolean;
  #L49dbdc.  v3:= v8.`v1.d3$b.t` @type ^`boolean` @kind boolean;
  #L49dbe0.  if v2 != v3 then goto L49dbfa;
  #L49dbe4.  v2:= v7.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49dbe8.  v8:= v8.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49dbec.  call temp:= `c`(v2, v8) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L49dbf2.  v8:= temp;
  #L49dbf4.  if v8 == 0 then goto L49dbfa;
  #L49dbf8.  goto L49dbfc;
  #L49dbfa.  v0:= 0I;
  #L49dbfc.  return v0;
  #L49dbfe.  return v1;
}
procedure `int` `f`(`v1.d3$b` v3 @kind this, `long` v4 ) @signature `Lv1/d3$b;.f:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L49dca0.  v0:= v3.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49dca4.  v1:= v3.`v1.d3$b.r` @type ^`long` @kind wide;
  #L49dca8.  call temp:= `d`(v0, v4, v1) @signature `Ly2/c;.d:(JJ)I` @kind virtual;
  #L49dcae.  v4:= temp;
  #L49dcb0.  return v4;
}
procedure `int` `g`(`v1.d3$b` v3 @kind this, `long` v4 ) @signature `Lv1/d3$b;.g:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L49dcc4.  v0:= v3.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49dcc8.  v1:= v3.`v1.d3$b.r` @type ^`long` @kind wide;
  #L49dccc.  call temp:= `e`(v0, v4, v1) @signature `Ly2/c;.e:(JJ)I` @kind virtual;
  #L49dcd2.  v4:= temp;
  #L49dcd4.  return v4;
}
procedure `long` `h`(`v1.d3$b` v2 @kind this, `int` v3 ) @signature `Lv1/d3$b;.h:(I)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49de78.  v0:= v2.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49de7c.  call temp:= `c`(v0, v3) @signature `Ly2/c;.c:(I)Ly2/c$a;` @kind virtual;
  #L49de82.  v3:= temp @kind object;
  #L49de84.  v0:= v3.`y2.c$a.o` @type ^`long` @kind wide;
  #L49de88.  return v0 @kind wide;
}
procedure `int` `hashCode`(`v1.d3$b` v6 @kind this) @signature `Lv1/d3$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L49dd88.  v0:= v6.`v1.d3$b.o` @type ^`java.lang.Object` @kind object;
  #L49dd8c.  v1:= 0I;
  #L49dd8e.  if v0 != 0 then goto L49dd96;
  #L49dd92.  v0:= 0I;
  #L49dd94.  goto L49dd9e;
  #L49dd96.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L49dd9c.  v0:= temp;
  #L49dd9e.  v2:= 217I;
  #L49dda2.  v2:= v2 + v0 @kind int;
  #L49dda4.  v2:= v2 * 31;
  #L49dda8.  v0:= v6.`v1.d3$b.p` @type ^`java.lang.Object` @kind object;
  #L49ddac.  if v0 != 0 then goto L49ddb2;
  #L49ddb0.  goto L49ddba;
  #L49ddb2.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L49ddb8.  v1:= temp;
  #L49ddba.  v2:= v2 + v1 @kind int;
  #L49ddbc.  v2:= v2 * 31;
  #L49ddc0.  v0:= v6.`v1.d3$b.q` @type ^`int`;
  #L49ddc4.  v2:= v2 + v0 @kind int;
  #L49ddc6.  v2:= v2 * 31;
  #L49ddca.  v0:= v6.`v1.d3$b.r` @type ^`long` @kind wide;
  #L49ddce.  v3:= 32I;
  #L49ddd2.  v4:= v0 ^>> v3 @kind long;
  #L49ddd6.  v0:= v0 ^~ v4 @kind long;
  #L49ddd8.  v1:= (`int`) v0 @kind l2i;
  #L49ddda.  v2:= v2 + v1 @kind int;
  #L49dddc.  v2:= v2 * 31;
  #L49dde0.  v0:= v6.`v1.d3$b.s` @type ^`long` @kind wide;
  #L49dde4.  v3:= v0 ^>> v3 @kind long;
  #L49dde8.  v0:= v0 ^~ v3 @kind long;
  #L49ddea.  v1:= (`int`) v0 @kind l2i;
  #L49ddec.  v2:= v2 + v1 @kind int;
  #L49ddee.  v2:= v2 * 31;
  #L49ddf2.  v0:= v6.`v1.d3$b.t` @type ^`boolean` @kind boolean;
  #L49ddf6.  v2:= v2 + v0 @kind int;
  #L49ddf8.  v2:= v2 * 31;
  #L49ddfc.  v0:= v6.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49de00.  call temp:= `hashCode`(v0) @signature `Ly2/c;.hashCode:()I` @kind virtual;
  #L49de06.  v0:= temp;
  #L49de08.  v2:= v2 + v0 @kind int;
  #L49de0a.  return v2;
}
procedure `long` `i`(`v1.d3$b` v2 @kind this) @signature `Lv1/d3$b;.i:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49de9c.  v0:= v2.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49dea0.  v0:= v0.`y2.c.q` @type ^`long` @kind wide;
  #L49dea4.  return v0 @kind wide;
}
procedure `int` `j`(`v1.d3$b` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lv1/d3$b;.j:(II)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49dce8.  v0:= v2.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49dcec.  call temp:= `c`(v0, v3) @signature `Ly2/c;.c:(I)Ly2/c$a;` @kind virtual;
  #L49dcf2.  v3:= temp @kind object;
  #L49dcf4.  v0:= v3.`y2.c$a.p` @type ^`int`;
  #L49dcf8.  v1:= -1I;
  #L49dcfa.  if v0 == v1 then goto L49dd08;
  #L49dcfe.  v3:= v3.`y2.c$a.r` @type ^`int`[] @kind object;
  #L49dd02.  v3:= v3[v4];
  #L49dd06.  goto L49dd0a;
  #L49dd08.  v3:= 0I;
  #L49dd0a.  return v3;
}
procedure `long` `k`(`v1.d3$b` v2 @kind this, `int` v3 ) @signature `Lv1/d3$b;.k:(I)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49deb8.  v0:= v2.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49debc.  call temp:= `c`(v0, v3) @signature `Ly2/c;.c:(I)Ly2/c$a;` @kind virtual;
  #L49dec2.  v3:= temp @kind object;
  #L49dec4.  v0:= v3.`y2.c$a.t` @type ^`long` @kind wide;
  #L49dec8.  return v0 @kind wide;
}
procedure `long` `l`(`v1.d3$b` v2 @kind this) @signature `Lv1/d3$b;.l:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49dedc.  v0:= v2.`v1.d3$b.r` @type ^`long` @kind wide;
  #L49dee0.  return v0 @kind wide;
}
procedure `int` `m`(`v1.d3$b` v1 @kind this, `int` v2 ) @signature `Lv1/d3$b;.m:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49dd1c.  v0:= v1.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49dd20.  call temp:= `c`(v0, v2) @signature `Ly2/c;.c:(I)Ly2/c$a;` @kind virtual;
  #L49dd26.  v2:= temp @kind object;
  #L49dd28.  call temp:= `e`(v2) @signature `Ly2/c$a;.e:()I` @kind virtual;
  #L49dd2e.  v2:= temp;
  #L49dd30.  return v2;
}
procedure `int` `n`(`v1.d3$b` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lv1/d3$b;.n:(II)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49dd44.  v0:= v1.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49dd48.  call temp:= `c`(v0, v2) @signature `Ly2/c;.c:(I)Ly2/c$a;` @kind virtual;
  #L49dd4e.  v2:= temp @kind object;
  #L49dd50.  call temp:= `f`(v2, v3) @signature `Ly2/c$a;.f:(I)I` @kind virtual;
  #L49dd56.  v2:= temp;
  #L49dd58.  return v2;
}
procedure `long` `o`(`v1.d3$b` v2 @kind this) @signature `Lv1/d3$b;.o:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49def4.  v0:= v2.`v1.d3$b.s` @type ^`long` @kind wide;
  #L49def8.  call temp:= `X0`(v0) @signature `Ls3/l0;.X0:(J)J` @kind static;
  #L49defe.  v0:= temp @kind wide;
  #L49df00.  return v0 @kind wide;
}
procedure `long` `p`(`v1.d3$b` v2 @kind this) @signature `Lv1/d3$b;.p:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49df14.  v0:= v2.`v1.d3$b.s` @type ^`long` @kind wide;
  #L49df18.  return v0 @kind wide;
}
procedure `int` `q`(`v1.d3$b` v1 @kind this) @signature `Lv1/d3$b;.q:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49dd6c.  v0:= v1.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49dd70.  v0:= v0.`y2.c.s` @type ^`int`;
  #L49dd74.  return v0;
}
procedure `boolean` `r`(`v1.d3$b` v1 @kind this, `int` v2 ) @signature `Lv1/d3$b;.r:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49dc10.  v0:= v1.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49dc14.  call temp:= `c`(v0, v2) @signature `Ly2/c;.c:(I)Ly2/c$a;` @kind virtual;
  #L49dc1a.  v2:= temp @kind object;
  #L49dc1c.  call temp:= `g`(v2) @signature `Ly2/c$a;.g:()Z` @kind virtual;
  #L49dc22.  v2:= temp;
  #L49dc24.  v2:= v2 ^~ 1;
  #L49dc28.  return v2;
}
procedure `boolean` `s`(`v1.d3$b` v1 @kind this, `int` v2 ) @signature `Lv1/d3$b;.s:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49dc3c.  v0:= v1.`v1.d3$b.u` @type ^`y2.c` @kind object;
  #L49dc40.  call temp:= `c`(v0, v2) @signature `Ly2/c;.c:(I)Ly2/c$a;` @kind virtual;
  #L49dc46.  v2:= temp @kind object;
  #L49dc48.  v2:= v2.`y2.c$a.u` @type ^`boolean` @kind boolean;
  #L49dc4c.  return v2;
}
procedure `v1.d3$b` `u`(`v1.d3$b` v10 @kind this, `java.lang.Object` v11 @kind object, `java.lang.Object` v12 @kind object, `int` v13 , `long` v14 , `long` v16 ) @signature `Lv1/d3$b;.u:(Ljava/lang/Object;Ljava/lang/Object;IJJ)Lv1/d3$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L49dff4.  v8:= `@@y2.c.u` @type ^`y2.c` @kind object;
  #L49dff8.  v9:= 0I;
  #L49dffa.  v0:= v10 @kind object;
  #L49dffc.  v1:= v11 @kind object;
  #L49dffe.  v2:= v12 @kind object;
  #L49e000.  v3:= v13;
  #L49e002.  v4:= v14 @kind wide;
  #L49e004.  v6:= v16 @kind wide;
  #L49e008.  call temp:= `v`(v0, v1, v2, v3, v4, v6, v8, v9) @signature `Lv1/d3$b;.v:(Ljava/lang/Object;Ljava/lang/Object;IJJLy2/c;Z)Lv1/d3$b;` @kind virtual;
  #L49e00e.  v0:= temp @kind object;
  #L49e010.  return v0 @kind object;
}
procedure `v1.d3$b` `v`(`v1.d3$b` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `int` v3 , `long` v4 , `long` v6 , `y2.c` v8 @kind object, `boolean` v9 ) @signature `Lv1/d3$b;.v:(Ljava/lang/Object;Ljava/lang/Object;IJJLy2/c;Z)Lv1/d3$b;` @AccessFlag PUBLIC {
    temp;

  #L49e024.  v0.`v1.d3$b.o` @type ^`java.lang.Object` := v1 @kind object;
  #L49e028.  v0.`v1.d3$b.p` @type ^`java.lang.Object` := v2 @kind object;
  #L49e02c.  v0.`v1.d3$b.q` @type ^`int` := v3;
  #L49e030.  v0.`v1.d3$b.r` @type ^`long` := v4 @kind wide;
  #L49e034.  v0.`v1.d3$b.s` @type ^`long` := v6 @kind wide;
  #L49e038.  v0.`v1.d3$b.u` @type ^`y2.c` := v8 @kind object;
  #L49e03c.  v0.`v1.d3$b.t` @type ^`boolean` := v9 @kind boolean;
  #L49e040.  return v0 @kind object;
}
