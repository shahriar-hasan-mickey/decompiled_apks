record `x6.y` @kind class @AccessFlag PUBLIC {
  `a7.d` `x6.y.a` @AccessFlag PRIVATE;
  `x6.g0` `x6.y.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `x6.y.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `x6.y.d` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `x6.y.e` @AccessFlag PRIVATE_FINAL;
  `x6.y$s` `x6.y.f` @AccessFlag PRIVATE_FINAL;
  `z6.e` `x6.y.g` @AccessFlag PRIVATE_FINAL;
  `e7.c` `x6.y.h` @AccessFlag PRIVATE_FINAL;
  `long` `x6.y.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`x6.y` v2 @kind this, `x6.g` v3 @kind object, `z6.e` v4 @kind object, `x6.y$s` v5 @kind object) @signature `Lx6/y;.<init>:(Lx6/g;Lz6/e;Lx6/y$s;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4ed960.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ed966.  v0:= 1L;
  #L4ed96a.  v2.`x6.y.i` @type ^`long` := v0 @kind wide;
  #L4ed96e.  call temp:= `f`() @signature `La7/d;.f:()La7/d;` @kind static;
  #L4ed974.  v0:= temp @kind object;
  #L4ed976.  v2.`x6.y.a` @type ^`a7.d` := v0 @kind object;
  #L4ed97a.  v0:= new `x6.g0`;
  #L4ed97e.  call `<init>`(v0) @signature `Lx6/g0;.<init>:()V` @kind direct;
  #L4ed984.  v2.`x6.y.b` @type ^`x6.g0` := v0 @kind object;
  #L4ed988.  v0:= new `java.util.HashMap`;
  #L4ed98c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4ed992.  v2.`x6.y.c` @type ^`java.util.Map` := v0 @kind object;
  #L4ed996.  v0:= new `java.util.HashMap`;
  #L4ed99a.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4ed9a0.  v2.`x6.y.d` @type ^`java.util.Map` := v0 @kind object;
  #L4ed9a4.  v0:= new `java.util.HashSet`;
  #L4ed9a8.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L4ed9ae.  v2.`x6.y.e` @type ^`java.util.Set` := v0 @kind object;
  #L4ed9b2.  v2.`x6.y.f` @type ^`x6.y$s` := v5 @kind object;
  #L4ed9b6.  v2.`x6.y.g` @type ^`z6.e` := v4 @kind object;
  #L4ed9ba.  v4:= "SyncTree" @kind object;
  #L4ed9be.  call temp:= `q`(v3, v4) @signature `Lx6/g;.q:(Ljava/lang/String;)Le7/c;` @kind virtual;
  #L4ed9c4.  v3:= temp @kind object;
  #L4ed9c6.  v2.`x6.y.h` @type ^`e7.c` := v3 @kind object;
  #L4ed9ca.  return @kind void;
}
procedure `java.util.List` `D`(`x6.y` v3 @kind this, `c7.i` v4 @kind object, `y6.d` v5 @kind object) @signature `Lx6/y;.D:(Lc7/i;Ly6/d;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4ed62c.  call temp:= `e`(v4) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L4ed632.  v4:= temp @kind object;
  #L4ed634.  v0:= v3.`x6.y.a` @type ^`a7.d` @kind object;
  #L4ed638.  call temp:= `y`(v0, v4) @signature `La7/d;.y:(Lx6/l;)Ljava/lang/Object;` @kind virtual;
  #L4ed63e.  v0:= temp @kind object;
  #L4ed640.  v0:= (`x6.w`) v0 @kind object;
  #L4ed644.  if v0 == 0 then goto L4ed64c;
  #L4ed648.  v1:= 1I;
  #L4ed64a.  goto L4ed64e;
  #L4ed64c.  v1:= 0I;
  #L4ed64e.  v2:= "Missing sync point for query tag that we're tracking" @kind object;
  #L4ed652.  call `g`(v1, v2) @signature `La7/m;.g:(ZLjava/lang/String;)V` @kind static;
  #L4ed658.  v1:= v3.`x6.y.b` @type ^`x6.g0` @kind object;
  #L4ed65c.  call temp:= `h`(v1, v4) @signature `Lx6/g0;.h:(Lx6/l;)Lx6/h0;` @kind virtual;
  #L4ed662.  v4:= temp @kind object;
  #L4ed664.  v1:= 0I;
  #L4ed666.  call temp:= `b`(v0, v5, v4, v1) @signature `Lx6/w;.b:(Ly6/d;Lx6/h0;Lf7/n;)Ljava/util/List;` @kind virtual;
  #L4ed66c.  v4:= temp @kind object;
  #L4ed66e.  return v4 @kind object;
}
procedure `java.util.List` `K`(`x6.y` v1 @kind this, `a7.d` v2 @kind object) @signature `Lx6/y;.K:(La7/d;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4ed83c.  v0:= new `java.util.ArrayList`;
  #L4ed840.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4ed846.  call `L`(v1, v2, v0) @signature `Lx6/y;.L:(La7/d;Ljava/util/List;)V` @kind direct;
  #L4ed84c.  return v0 @kind object;
}
procedure `void` `L`(`x6.y` v2 @kind this, `a7.d` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lx6/y;.L:(La7/d;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4eda0c.  call temp:= `getValue`(v3) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4eda12.  v0:= temp @kind object;
  #L4eda14.  v0:= (`x6.w`) v0 @kind object;
  #L4eda18.  if v0 == 0 then goto L4eda38;
  #L4eda1c.  call temp:= `h`(v0) @signature `Lx6/w;.h:()Z` @kind virtual;
  #L4eda22.  v1:= temp;
  #L4eda24.  if v1 == 0 then goto L4eda38;
  #L4eda28.  call temp:= `e`(v0) @signature `Lx6/w;.e:()Lc7/j;` @kind virtual;
  #L4eda2e.  v3:= temp @kind object;
  #L4eda30.  call temp:= `add`(v4, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4eda36.  goto L4eda86;
  #L4eda38.  if v0 == 0 then goto L4eda4a;
  #L4eda3c.  call temp:= `f`(v0) @signature `Lx6/w;.f:()Ljava/util/List;` @kind virtual;
  #L4eda42.  v0:= temp @kind object;
  #L4eda44.  call temp:= `addAll`(v4, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4eda4a.  call temp:= `N`(v3) @signature `La7/d;.N:()Lu6/c;` @kind virtual;
  #L4eda50.  v3:= temp @kind object;
  #L4eda52.  call temp:= `iterator`(v3) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4eda58.  v3:= temp @kind object;
  #L4eda5a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eda60.  v0:= temp;
  #L4eda62.  if v0 == 0 then goto L4eda86;
  #L4eda66.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eda6c.  v0:= temp @kind object;
  #L4eda6e.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L4eda72.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4eda78.  v0:= temp @kind object;
  #L4eda7a.  v0:= (`a7.d`) v0 @kind object;
  #L4eda7e.  call `L`(v2, v0, v4) @signature `Lx6/y;.L:(La7/d;Ljava/util/List;)V` @kind direct;
  #L4eda84.  goto L4eda5a;
  #L4eda86.  return @kind void;
}
procedure `x6.z` `M`(`x6.y` v5 @kind this) @signature `Lx6/y;.M:()Lx6/z;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4edc54.  v0:= new `x6.z`;
  #L4edc58.  v1:= v5.`x6.y.i` @type ^`long` @kind wide;
  #L4edc5c.  v3:= 1L;
  #L4edc60.  v3:= v3 + v1 @kind long;
  #L4edc62.  v5.`x6.y.i` @type ^`long` := v3 @kind wide;
  #L4edc66.  call `<init>`(v0, v1) @signature `Lx6/z;.<init>:(J)V` @kind direct;
  #L4edc6c.  return v0 @kind object;
}
procedure `f7.n` `P`(`x6.y` v8 @kind this, `c7.i` v9 @kind object) @signature `Lx6/y;.P:(Lc7/i;)Lf7/n;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4ed15c.  call temp:= `e`(v9) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L4ed162.  v0:= temp @kind object;
  #L4ed164.  v1:= v8.`x6.y.a` @type ^`a7.d` @kind object;
  #L4ed168.  v2:= 0I;
  #L4ed16a.  v3:= 0I;
  #L4ed16c.  v4:= v0 @kind object;
  #L4ed16e.  v5:= 0I;
  #L4ed170.  call temp:= `isEmpty`(v1) @signature `La7/d;.isEmpty:()Z` @kind virtual;
  #L4ed176.  v6:= temp;
  #L4ed178.  v7:= 1I;
  #L4ed17a.  if v6 != 0 then goto L4ed1e8;
  #L4ed17e.  call temp:= `getValue`(v1) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4ed184.  v6:= temp @kind object;
  #L4ed186.  v6:= (`x6.w`) v6 @kind object;
  #L4ed18a.  if v6 == 0 then goto L4ed1b4;
  #L4ed18e.  if v3 == 0 then goto L4ed194;
  #L4ed192.  goto L4ed19c;
  #L4ed194.  call temp:= `d`(v6, v4) @signature `Lx6/w;.d:(Lx6/l;)Lf7/n;` @kind virtual;
  #L4ed19a.  v3:= temp @kind object;
  #L4ed19c.  if v5 != 0 then goto L4ed1b2;
  #L4ed1a0.  call temp:= `h`(v6) @signature `Lx6/w;.h:()Z` @kind virtual;
  #L4ed1a6.  v5:= temp;
  #L4ed1a8.  if v5 == 0 then goto L4ed1ae;
  #L4ed1ac.  goto L4ed1b2;
  #L4ed1ae.  v5:= 0I;
  #L4ed1b0.  goto L4ed1b4;
  #L4ed1b2.  v5:= 1I;
  #L4ed1b4.  call temp:= `isEmpty`(v4) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L4ed1ba.  v6:= temp;
  #L4ed1bc.  if v6 == 0 then goto L4ed1ce;
  #L4ed1c0.  v6:= "" @kind object;
  #L4ed1c4.  call temp:= `h`(v6) @signature `Lf7/b;.h:(Ljava/lang/String;)Lf7/b;` @kind static;
  #L4ed1ca.  v6:= temp @kind object;
  #L4ed1cc.  goto L4ed1d6;
  #L4ed1ce.  call temp:= `h0`(v4) @signature `Lx6/l;.h0:()Lf7/b;` @kind virtual;
  #L4ed1d4.  v6:= temp @kind object;
  #L4ed1d6.  call temp:= `G`(v1, v6) @signature `La7/d;.G:(Lf7/b;)La7/d;` @kind virtual;
  #L4ed1dc.  v1:= temp @kind object;
  #L4ed1de.  call temp:= `k0`(v4) @signature `Lx6/l;.k0:()Lx6/l;` @kind virtual;
  #L4ed1e4.  v4:= temp @kind object;
  #L4ed1e6.  goto L4ed170;
  #L4ed1e8.  v1:= v8.`x6.y.a` @type ^`a7.d` @kind object;
  #L4ed1ec.  call temp:= `y`(v1, v0) @signature `La7/d;.y:(Lx6/l;)Ljava/lang/Object;` @kind virtual;
  #L4ed1f2.  v1:= temp @kind object;
  #L4ed1f4.  v1:= (`x6.w`) v1 @kind object;
  #L4ed1f8.  if v1 != 0 then goto L4ed21c;
  #L4ed1fc.  v1:= new `x6.w`;
  #L4ed200.  v4:= v8.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed204.  call `<init>`(v1, v4) @signature `Lx6/w;.<init>:(Lz6/e;)V` @kind direct;
  #L4ed20a.  v4:= v8.`x6.y.a` @type ^`a7.d` @kind object;
  #L4ed20e.  call temp:= `Y`(v4, v0, v1) @signature `La7/d;.Y:(Lx6/l;Ljava/lang/Object;)La7/d;` @kind virtual;
  #L4ed214.  v4:= temp @kind object;
  #L4ed216.  v8.`x6.y.a` @type ^`a7.d` := v4 @kind object;
  #L4ed21a.  goto L4ed232;
  #L4ed21c.  if v3 == 0 then goto L4ed222;
  #L4ed220.  goto L4ed232;
  #L4ed222.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4ed228.  v3:= temp @kind object;
  #L4ed22a.  call temp:= `d`(v1, v3) @signature `Lx6/w;.d:(Lx6/l;)Lf7/n;` @kind virtual;
  #L4ed230.  v3:= temp @kind object;
  #L4ed232.  v4:= new `c7.a`;
  #L4ed236.  if v3 == 0 then goto L4ed23e;
  #L4ed23a.  v5:= v3 @kind object;
  #L4ed23c.  goto L4ed246;
  #L4ed23e.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L4ed244.  v5:= temp @kind object;
  #L4ed246.  call temp:= `c`(v9) @signature `Lc7/i;.c:()Lf7/h;` @kind virtual;
  #L4ed24c.  v6:= temp @kind object;
  #L4ed24e.  call temp:= `h`(v5, v6) @signature `Lf7/i;.h:(Lf7/n;Lf7/h;)Lf7/i;` @kind static;
  #L4ed254.  v5:= temp @kind object;
  #L4ed256.  if v3 == 0 then goto L4ed25c;
  #L4ed25a.  goto L4ed25e;
  #L4ed25c.  v7:= 0I;
  #L4ed25e.  call `<init>`(v4, v5, v7, v2) @signature `Lc7/a;.<init>:(Lf7/i;ZZ)V` @kind direct;
  #L4ed264.  v2:= v8.`x6.y.b` @type ^`x6.g0` @kind object;
  #L4ed268.  call temp:= `h`(v2, v0) @signature `Lx6/g0;.h:(Lx6/l;)Lx6/h0;` @kind virtual;
  #L4ed26e.  v0:= temp @kind object;
  #L4ed270.  call temp:= `g`(v1, v9, v0, v4) @signature `Lx6/w;.g:(Lc7/i;Lx6/h0;Lc7/a;)Lc7/j;` @kind virtual;
  #L4ed276.  v9:= temp @kind object;
  #L4ed278.  call temp:= `d`(v9) @signature `Lc7/j;.d:()Lf7/n;` @kind virtual;
  #L4ed27e.  v9:= temp @kind object;
  #L4ed280.  return v9 @kind object;
}
procedure `c7.i` `R`(`x6.y` v1 @kind this, `c7.i` v2 @kind object) @signature `Lx6/y;.R:(Lc7/i;)Lc7/i;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4ecfc0.  call temp:= `g`(v2) @signature `Lc7/i;.g:()Z` @kind virtual;
  #L4ecfc6.  v0:= temp;
  #L4ecfc8.  if v0 == 0 then goto L4ecfe8;
  #L4ecfcc.  call temp:= `f`(v2) @signature `Lc7/i;.f:()Z` @kind virtual;
  #L4ecfd2.  v0:= temp;
  #L4ecfd4.  if v0 != 0 then goto L4ecfe8;
  #L4ecfd8.  call temp:= `e`(v2) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L4ecfde.  v2:= temp @kind object;
  #L4ecfe0.  call temp:= `a`(v2) @signature `Lc7/i;.a:(Lx6/l;)Lc7/i;` @kind static;
  #L4ecfe6.  v2:= temp @kind object;
  #L4ecfe8.  return v2 @kind object;
}
procedure `c7.i` `S`(`x6.y` v1 @kind this, `x6.z` v2 @kind object) @signature `Lx6/y;.S:(Lx6/z;)Lc7/i;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4ecffc.  v0:= v1.`x6.y.c` @type ^`java.util.Map` @kind object;
  #L4ed000.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4ed006.  v2:= temp @kind object;
  #L4ed008.  v2:= (`c7.i`) v2 @kind object;
  #L4ed00c.  return v2 @kind object;
}
procedure `java.util.List` `V`(`x6.y` v8 @kind this, `c7.i` v9 @kind object, `x6.i` v10 @kind object, `s6.b` v11 @kind object, `boolean` v12 ) @signature `Lx6/y;.V:(Lc7/i;Lx6/i;Ls6/b;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4ed8ac.  v0:= v8.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed8b0.  v7:= new `x6.y$d`;
  #L4ed8b4.  v1:= v7 @kind object;
  #L4ed8b6.  v2:= v8 @kind object;
  #L4ed8b8.  v3:= v9 @kind object;
  #L4ed8ba.  v4:= v10 @kind object;
  #L4ed8bc.  v5:= v11 @kind object;
  #L4ed8be.  v6:= v12;
  #L4ed8c0.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lx6/y$d;.<init>:(Lx6/y;Lc7/i;Lx6/i;Ls6/b;Z)V` @kind direct;
  #L4ed8c6.  call temp:= `g`(v0, v7) @signature `Lz6/e;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #L4ed8cc.  v9:= temp @kind object;
  #L4ed8ce.  v9:= (`java.util.List`) v9 @kind object;
  #L4ed8d2.  return v9 @kind object;
}
procedure `void` `Y`(`x6.y` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lx6/y;.Y:(Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4edb08.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4edb0e.  v4:= temp @kind object;
  #L4edb10.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4edb16.  v0:= temp;
  #L4edb18.  if v0 == 0 then goto L4edb62;
  #L4edb1c.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4edb22.  v0:= temp @kind object;
  #L4edb24.  v0:= (`c7.i`) v0 @kind object;
  #L4edb28.  call temp:= `g`(v0) @signature `Lc7/i;.g:()Z` @kind virtual;
  #L4edb2e.  v1:= temp;
  #L4edb30.  if v1 != 0 then goto L4edb10;
  #L4edb34.  call temp:= `b0`(v3, v0) @signature `Lx6/y;.b0:(Lc7/i;)Lx6/z;` @kind virtual;
  #L4edb3a.  v1:= temp @kind object;
  #L4edb3c.  if v1 == 0 then goto L4edb44;
  #L4edb40.  v2:= 1I;
  #L4edb42.  goto L4edb46;
  #L4edb44.  v2:= 0I;
  #L4edb46.  call `f`(v2) @signature `La7/m;.f:(Z)V` @kind static;
  #L4edb4c.  v2:= v3.`x6.y.d` @type ^`java.util.Map` @kind object;
  #L4edb50.  call temp:= `remove`(v2, v0) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4edb56.  v0:= v3.`x6.y.c` @type ^`java.util.Map` @kind object;
  #L4edb5a.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4edb60.  goto L4edb10;
  #L4edb62.  return @kind void;
}
procedure `f7.n` `a`(`x6.y` v0 @kind object, `c7.i` v1 @kind object) @signature `Lx6/y;.a:(Lx6/y;Lc7/i;)Lf7/n;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L4ed078.  call temp:= `P`(v0, v1) @signature `Lx6/y;.P:(Lc7/i;)Lf7/n;` @kind direct;
  #L4ed07e.  v0:= temp @kind object;
  #L4ed080.  return v0 @kind object;
}
procedure `void` `a0`(`x6.y` v3 @kind this, `c7.i` v4 @kind object, `c7.j` v5 @kind object) @signature `Lx6/y;.a0:(Lc7/i;Lc7/j;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4edb9c.  call temp:= `e`(v4) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L4edba2.  v0:= temp @kind object;
  #L4edba4.  call temp:= `b0`(v3, v4) @signature `Lx6/y;.b0:(Lc7/i;)Lx6/z;` @kind virtual;
  #L4edbaa.  v1:= temp @kind object;
  #L4edbac.  v2:= new `x6.y$r`;
  #L4edbb0.  call `<init>`(v2, v3, v5) @signature `Lx6/y$r;.<init>:(Lx6/y;Lc7/j;)V` @kind direct;
  #L4edbb6.  v5:= v3.`x6.y.f` @type ^`x6.y$s` @kind object;
  #L4edbba.  call temp:= `R`(v3, v4) @signature `Lx6/y;.R:(Lc7/i;)Lc7/i;` @kind direct;
  #L4edbc0.  v4:= temp @kind object;
  #L4edbc2.  call `a`(v5, v4, v1, v2, v2) @signature `Lx6/y$s;.a:(Lc7/i;Lx6/z;Lv6/g;Lx6/y$p;)V` @kind interface;
  #L4edbc8.  v4:= v3.`x6.y.a` @type ^`a7.d` @kind object;
  #L4edbcc.  call temp:= `b0`(v4, v0) @signature `La7/d;.b0:(Lx6/l;)La7/d;` @kind virtual;
  #L4edbd2.  v4:= temp @kind object;
  #L4edbd4.  if v1 == 0 then goto L4edbfc;
  #L4edbd8.  call temp:= `getValue`(v4) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4edbde.  v4:= temp @kind object;
  #L4edbe0.  v4:= (`x6.w`) v4 @kind object;
  #L4edbe4.  call temp:= `h`(v4) @signature `Lx6/w;.h:()Z` @kind virtual;
  #L4edbea.  v4:= temp;
  #L4edbec.  v4:= v4 ^~ 1;
  #L4edbf0.  v5:= "If we're adding a query, it shouldn't be shadowed" @kind object;
  #L4edbf4.  call `g`(v4, v5) @signature `La7/m;.g:(ZLjava/lang/String;)V` @kind static;
  #L4edbfa.  goto L4edc0c;
  #L4edbfc.  v5:= new `x6.y$e`;
  #L4edc00.  call `<init>`(v5, v3) @signature `Lx6/y$e;.<init>:(Lx6/y;)V` @kind direct;
  #L4edc06.  call `u`(v4, v5) @signature `La7/d;.u:(La7/d$c;)V` @kind virtual;
  #L4edc0c.  return @kind void;
}
procedure `e7.c` `b`(`x6.y` v0 @kind object) @signature `Lx6/y;.b:(Lx6/y;)Le7/c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ed060.  v0:= v0.`x6.y.h` @type ^`e7.c` @kind object;
  #L4ed064.  return v0 @kind object;
}
procedure `z6.e` `c`(`x6.y` v0 @kind object) @signature `Lx6/y;.c:(Lx6/y;)Lz6/e;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4edcbc.  v0:= v0.`x6.y.g` @type ^`z6.e` @kind object;
  #L4edcc0.  return v0 @kind object;
}
procedure `void` `d`(`x6.y` v0 @kind object, `c7.i` v1 @kind object, `c7.j` v2 @kind object) @signature `Lx6/y;.d:(Lx6/y;Lc7/i;Lc7/j;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ed9dc.  call `a0`(v0, v1, v2) @signature `Lx6/y;.a0:(Lc7/i;Lc7/j;)V` @kind direct;
  #L4ed9e2.  return @kind void;
}
procedure `java.util.List` `e`(`x6.y` v0 @kind object, `a7.d` v1 @kind object) @signature `Lx6/y;.e:(Lx6/y;La7/d;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ed294.  call temp:= `K`(v0, v1) @signature `Lx6/y;.K:(La7/d;)Ljava/util/List;` @kind direct;
  #L4ed29a.  v0:= temp @kind object;
  #L4ed29c.  return v0 @kind object;
}
procedure `c7.i` `f`(`x6.y` v0 @kind object, `c7.i` v1 @kind object) @signature `Lx6/y;.f:(Lx6/y;Lc7/i;)Lc7/i;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ecf88.  call temp:= `R`(v0, v1) @signature `Lx6/y;.R:(Lc7/i;)Lc7/i;` @kind direct;
  #L4ecf8e.  v0:= temp @kind object;
  #L4ecf90.  return v0 @kind object;
}
procedure `x6.y$s` `g`(`x6.y` v0 @kind object) @signature `Lx6/y;.g:(Lx6/y;)Lx6/y$s;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4edc20.  v0:= v0.`x6.y.f` @type ^`x6.y$s` @kind object;
  #L4edc24.  return v0 @kind object;
}
procedure `void` `h`(`x6.y` v0 @kind object, `java.util.List` v1 @kind object) @signature `Lx6/y;.h:(Lx6/y;Ljava/util/List;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ed9f4.  call `Y`(v0, v1) @signature `Lx6/y;.Y:(Ljava/util/List;)V` @kind direct;
  #L4ed9fa.  return @kind void;
}
procedure `java.util.List` `i`(`x6.y` v0 @kind object, `y6.d` v1 @kind object, `a7.d` v2 @kind object, `f7.n` v3 @kind object, `x6.h0` v4 @kind object) @signature `Lx6/y;.i:(Lx6/y;Ly6/d;La7/d;Lf7/n;Lx6/h0;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ed2b0.  call temp:= `w`(v0, v1, v2, v3, v4) @signature `Lx6/y;.w:(Ly6/d;La7/d;Lf7/n;Lx6/h0;)Ljava/util/List;` @kind direct;
  #L4ed2b6.  v0:= temp @kind object;
  #L4ed2b8.  return v0 @kind object;
}
procedure `x6.g0` `j`(`x6.y` v0 @kind object) @signature `Lx6/y;.j:(Lx6/y;)Lx6/g0;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4edca4.  v0:= v0.`x6.y.b` @type ^`x6.g0` @kind object;
  #L4edca8.  return v0 @kind object;
}
procedure `java.util.List` `k`(`x6.y` v0 @kind object, `y6.d` v1 @kind object) @signature `Lx6/y;.k:(Lx6/y;Ly6/d;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ed2cc.  call temp:= `y`(v0, v1) @signature `Lx6/y;.y:(Ly6/d;)Ljava/util/List;` @kind direct;
  #L4ed2d2.  v0:= temp @kind object;
  #L4ed2d4.  return v0 @kind object;
}
procedure `c7.i` `l`(`x6.y` v0 @kind object, `x6.z` v1 @kind object) @signature `Lx6/y;.l:(Lx6/y;Lx6/z;)Lc7/i;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ecfa4.  call temp:= `S`(v0, v1) @signature `Lx6/y;.S:(Lx6/z;)Lc7/i;` @kind direct;
  #L4ecfaa.  v0:= temp @kind object;
  #L4ecfac.  return v0 @kind object;
}
procedure `java.util.List` `m`(`x6.y` v0 @kind object, `c7.i` v1 @kind object, `y6.d` v2 @kind object) @signature `Lx6/y;.m:(Lx6/y;Lc7/i;Ly6/d;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ed2e8.  call temp:= `D`(v0, v1, v2) @signature `Lx6/y;.D:(Lc7/i;Ly6/d;)Ljava/util/List;` @kind direct;
  #L4ed2ee.  v0:= temp @kind object;
  #L4ed2f0.  return v0 @kind object;
}
procedure `a7.d` `n`(`x6.y` v0 @kind object) @signature `Lx6/y;.n:(Lx6/y;)La7/d;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ecf58.  v0:= v0.`x6.y.a` @type ^`a7.d` @kind object;
  #L4ecf5c.  return v0 @kind object;
}
procedure `a7.d` `o`(`x6.y` v0 @kind object, `a7.d` v1 @kind object) @signature `Lx6/y;.o:(Lx6/y;La7/d;)La7/d;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ecf70.  v0.`x6.y.a` @type ^`a7.d` := v1 @kind object;
  #L4ecf74.  return v1 @kind object;
}
procedure `java.util.Map` `p`(`x6.y` v0 @kind object) @signature `Lx6/y;.p:(Lx6/y;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ed930.  v0:= v0.`x6.y.d` @type ^`java.util.Map` @kind object;
  #L4ed934.  return v0 @kind object;
}
procedure `x6.z` `q`(`x6.y` v0 @kind object) @signature `Lx6/y;.q:(Lx6/y;)Lx6/z;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4edc38.  call temp:= `M`(v0) @signature `Lx6/y;.M:()Lx6/z;` @kind direct;
  #L4edc3e.  v0:= temp @kind object;
  #L4edc40.  return v0 @kind object;
}
procedure `java.util.Map` `r`(`x6.y` v0 @kind object) @signature `Lx6/y;.r:(Lx6/y;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ed948.  v0:= v0.`x6.y.c` @type ^`java.util.Map` @kind object;
  #L4ed94c.  return v0 @kind object;
}
procedure `java.util.List` `w`(`x6.y` v9 @kind this, `y6.d` v10 @kind object, `a7.d` v11 @kind object, `f7.n` v12 @kind object, `x6.h0` v13 @kind object) @signature `Lx6/y;.w:(Ly6/d;La7/d;Lf7/n;Lx6/h0;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4ed3b0.  call temp:= `getValue`(v11) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4ed3b6.  v0:= temp @kind object;
  #L4ed3b8.  v0:= (`x6.w`) v0 @kind object;
  #L4ed3bc.  if v12 != 0 then goto L4ed3d4;
  #L4ed3c0.  if v0 == 0 then goto L4ed3d4;
  #L4ed3c4.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4ed3ca.  v12:= temp @kind object;
  #L4ed3cc.  call temp:= `d`(v0, v12) @signature `Lx6/w;.d:(Lx6/l;)Lf7/n;` @kind virtual;
  #L4ed3d2.  v12:= temp @kind object;
  #L4ed3d4.  v7:= new `java.util.ArrayList`;
  #L4ed3d8.  call `<init>`(v7) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4ed3de.  call temp:= `N`(v11) @signature `La7/d;.N:()Lu6/c;` @kind virtual;
  #L4ed3e4.  v11:= temp @kind object;
  #L4ed3e6.  v8:= new `x6.y$f`;
  #L4ed3ea.  v1:= v8 @kind object;
  #L4ed3ec.  v2:= v9 @kind object;
  #L4ed3ee.  v3:= v12 @kind object;
  #L4ed3f0.  v4:= v13 @kind object;
  #L4ed3f2.  v5:= v10 @kind object;
  #L4ed3f4.  v6:= v7 @kind object;
  #L4ed3f6.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lx6/y$f;.<init>:(Lx6/y;Lf7/n;Lx6/h0;Ly6/d;Ljava/util/List;)V` @kind direct;
  #L4ed3fc.  call `u`(v11, v8) @signature `Lu6/c;.u:(Lu6/h$b;)V` @kind virtual;
  #L4ed402.  if v0 == 0 then goto L4ed414;
  #L4ed406.  call temp:= `b`(v0, v10, v13, v12) @signature `Lx6/w;.b:(Ly6/d;Lx6/h0;Lf7/n;)Ljava/util/List;` @kind virtual;
  #L4ed40c.  v10:= temp @kind object;
  #L4ed40e.  call temp:= `addAll`(v7, v10) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4ed414.  return v7 @kind object;
}
procedure `java.util.List` `x`(`x6.y` v5 @kind this, `y6.d` v6 @kind object, `a7.d` v7 @kind object, `f7.n` v8 @kind object, `x6.h0` v9 @kind object) @signature `Lx6/y;.x:(Ly6/d;La7/d;Lf7/n;Lx6/h0;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ed428.  call temp:= `a`(v6) @signature `Ly6/d;.a:()Lx6/l;` @kind virtual;
  #L4ed42e.  v0:= temp @kind object;
  #L4ed430.  call temp:= `isEmpty`(v0) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L4ed436.  v0:= temp;
  #L4ed438.  if v0 == 0 then goto L4ed446;
  #L4ed43c.  call temp:= `w`(v5, v6, v7, v8, v9) @signature `Lx6/y;.w:(Ly6/d;La7/d;Lf7/n;Lx6/h0;)Ljava/util/List;` @kind direct;
  #L4ed442.  v6:= temp @kind object;
  #L4ed444.  return v6 @kind object;
  #L4ed446.  call temp:= `getValue`(v7) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4ed44c.  v0:= temp @kind object;
  #L4ed44e.  v0:= (`x6.w`) v0 @kind object;
  #L4ed452.  if v8 != 0 then goto L4ed46a;
  #L4ed456.  if v0 == 0 then goto L4ed46a;
  #L4ed45a.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4ed460.  v8:= temp @kind object;
  #L4ed462.  call temp:= `d`(v0, v8) @signature `Lx6/w;.d:(Lx6/l;)Lf7/n;` @kind virtual;
  #L4ed468.  v8:= temp @kind object;
  #L4ed46a.  v1:= new `java.util.ArrayList`;
  #L4ed46e.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4ed474.  call temp:= `a`(v6) @signature `Ly6/d;.a:()Lx6/l;` @kind virtual;
  #L4ed47a.  v2:= temp @kind object;
  #L4ed47c.  call temp:= `h0`(v2) @signature `Lx6/l;.h0:()Lf7/b;` @kind virtual;
  #L4ed482.  v2:= temp @kind object;
  #L4ed484.  call temp:= `d`(v6, v2) @signature `Ly6/d;.d:(Lf7/b;)Ly6/d;` @kind virtual;
  #L4ed48a.  v3:= temp @kind object;
  #L4ed48c.  call temp:= `N`(v7) @signature `La7/d;.N:()Lu6/c;` @kind virtual;
  #L4ed492.  v7:= temp @kind object;
  #L4ed494.  call temp:= `f`(v7, v2) @signature `Lu6/c;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4ed49a.  v7:= temp @kind object;
  #L4ed49c.  v7:= (`a7.d`) v7 @kind object;
  #L4ed4a0.  if v7 == 0 then goto L4ed4ce;
  #L4ed4a4.  if v3 == 0 then goto L4ed4ce;
  #L4ed4a8.  if v8 == 0 then goto L4ed4b6;
  #L4ed4ac.  call temp:= `z`(v8, v2) @signature `Lf7/n;.z:(Lf7/b;)Lf7/n;` @kind interface;
  #L4ed4b2.  v4:= temp @kind object;
  #L4ed4b4.  goto L4ed4b8;
  #L4ed4b6.  v4:= 0I;
  #L4ed4b8.  call temp:= `h`(v9, v2) @signature `Lx6/h0;.h:(Lf7/b;)Lx6/h0;` @kind virtual;
  #L4ed4be.  v2:= temp @kind object;
  #L4ed4c0.  call temp:= `x`(v5, v3, v7, v4, v2) @signature `Lx6/y;.x:(Ly6/d;La7/d;Lf7/n;Lx6/h0;)Ljava/util/List;` @kind direct;
  #L4ed4c6.  v7:= temp @kind object;
  #L4ed4c8.  call temp:= `addAll`(v1, v7) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4ed4ce.  if v0 == 0 then goto L4ed4e0;
  #L4ed4d2.  call temp:= `b`(v0, v6, v9, v8) @signature `Lx6/w;.b:(Ly6/d;Lx6/h0;Lf7/n;)Ljava/util/List;` @kind virtual;
  #L4ed4d8.  v6:= temp @kind object;
  #L4ed4da.  call temp:= `addAll`(v1, v6) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4ed4e0.  return v1 @kind object;
}
procedure `java.util.List` `y`(`x6.y` v3 @kind this, `y6.d` v4 @kind object) @signature `Lx6/y;.y:(Ly6/d;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4ed4f4.  v0:= v3.`x6.y.a` @type ^`a7.d` @kind object;
  #L4ed4f8.  v1:= v3.`x6.y.b` @type ^`x6.g0` @kind object;
  #L4ed4fc.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4ed502.  v2:= temp @kind object;
  #L4ed504.  call temp:= `h`(v1, v2) @signature `Lx6/g0;.h:(Lx6/l;)Lx6/h0;` @kind virtual;
  #L4ed50a.  v1:= temp @kind object;
  #L4ed50c.  v2:= 0I;
  #L4ed50e.  call temp:= `x`(v3, v4, v0, v2, v1) @signature `Lx6/y;.x:(Ly6/d;La7/d;Lf7/n;Lx6/h0;)Ljava/util/List;` @kind direct;
  #L4ed514.  v4:= temp @kind object;
  #L4ed516.  return v4 @kind object;
}
procedure `java.util.List` `A`(`x6.y` v2 @kind this, `x6.l` v3 @kind object, `f7.n` v4 @kind object) @signature `Lx6/y;.A:(Lx6/l;Lf7/n;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ed554.  v0:= v2.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed558.  v1:= new `x6.y$k`;
  #L4ed55c.  call `<init>`(v1, v2, v3, v4) @signature `Lx6/y$k;.<init>:(Lx6/y;Lx6/l;Lf7/n;)V` @kind direct;
  #L4ed562.  call temp:= `g`(v0, v1) @signature `Lz6/e;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #L4ed568.  v3:= temp @kind object;
  #L4ed56a.  v3:= (`java.util.List`) v3 @kind object;
  #L4ed56e.  return v3 @kind object;
}
procedure `java.util.List` `B`(`x6.y` v2 @kind this, `x6.l` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lx6/y;.B:(Lx6/l;Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ed580.  v0:= v2.`x6.y.a` @type ^`a7.d` @kind object;
  #L4ed584.  call temp:= `y`(v0, v3) @signature `La7/d;.y:(Lx6/l;)Ljava/lang/Object;` @kind virtual;
  #L4ed58a.  v0:= temp @kind object;
  #L4ed58c.  v0:= (`x6.w`) v0 @kind object;
  #L4ed590.  if v0 != 0 then goto L4ed59e;
  #L4ed594.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4ed59a.  v3:= temp @kind object;
  #L4ed59c.  return v3 @kind object;
  #L4ed59e.  call temp:= `e`(v0) @signature `Lx6/w;.e:()Lc7/j;` @kind virtual;
  #L4ed5a4.  v0:= temp @kind object;
  #L4ed5a6.  if v0 == 0 then goto L4ed5e6;
  #L4ed5aa.  call temp:= `i`(v0) @signature `Lc7/j;.i:()Lf7/n;` @kind virtual;
  #L4ed5b0.  v0:= temp @kind object;
  #L4ed5b2.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4ed5b8.  v4:= temp @kind object;
  #L4ed5ba.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ed5c0.  v1:= temp;
  #L4ed5c2.  if v1 == 0 then goto L4ed5dc;
  #L4ed5c6.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ed5cc.  v1:= temp @kind object;
  #L4ed5ce.  v1:= (`f7.s`) v1 @kind object;
  #L4ed5d2.  call temp:= `a`(v1, v0) @signature `Lf7/s;.a:(Lf7/n;)Lf7/n;` @kind virtual;
  #L4ed5d8.  v0:= temp @kind object;
  #L4ed5da.  goto L4ed5ba;
  #L4ed5dc.  call temp:= `A`(v2, v3, v0) @signature `Lx6/y;.A:(Lx6/l;Lf7/n;)Ljava/util/List;` @kind virtual;
  #L4ed5e2.  v3:= temp @kind object;
  #L4ed5e4.  return v3 @kind object;
  #L4ed5e6.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4ed5ec.  v3:= temp @kind object;
  #L4ed5ee.  return v3 @kind object;
}
procedure `java.util.List` `C`(`x6.y` v2 @kind this, `x6.z` v3 @kind object) @signature `Lx6/y;.C:(Lx6/z;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ed600.  v0:= v2.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed604.  v1:= new `x6.y$n`;
  #L4ed608.  call `<init>`(v1, v2, v3) @signature `Lx6/y$n;.<init>:(Lx6/y;Lx6/z;)V` @kind direct;
  #L4ed60e.  call temp:= `g`(v0, v1) @signature `Lz6/e;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #L4ed614.  v3:= temp @kind object;
  #L4ed616.  v3:= (`java.util.List`) v3 @kind object;
  #L4ed61a.  return v3 @kind object;
}
procedure `java.util.List` `E`(`x6.y` v2 @kind this, `x6.l` v3 @kind object, `java.util.Map` v4 @kind object, `x6.z` v5 @kind object) @signature `Lx6/y;.E:(Lx6/l;Ljava/util/Map;Lx6/z;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ed680.  v0:= v2.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed684.  v1:= new `x6.y$a`;
  #L4ed688.  call `<init>`(v1, v2, v5, v3, v4) @signature `Lx6/y$a;.<init>:(Lx6/y;Lx6/z;Lx6/l;Ljava/util/Map;)V` @kind direct;
  #L4ed68e.  call temp:= `g`(v0, v1) @signature `Lz6/e;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #L4ed694.  v3:= temp @kind object;
  #L4ed696.  v3:= (`java.util.List`) v3 @kind object;
  #L4ed69a.  return v3 @kind object;
}
procedure `java.util.List` `F`(`x6.y` v2 @kind this, `x6.l` v3 @kind object, `f7.n` v4 @kind object, `x6.z` v5 @kind object) @signature `Lx6/y;.F:(Lx6/l;Lf7/n;Lx6/z;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ed6ac.  v0:= v2.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed6b0.  v1:= new `x6.y$o`;
  #L4ed6b4.  call `<init>`(v1, v2, v5, v3, v4) @signature `Lx6/y$o;.<init>:(Lx6/y;Lx6/z;Lx6/l;Lf7/n;)V` @kind direct;
  #L4ed6ba.  call temp:= `g`(v0, v1) @signature `Lz6/e;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #L4ed6c0.  v3:= temp @kind object;
  #L4ed6c2.  v3:= (`java.util.List`) v3 @kind object;
  #L4ed6c6.  return v3 @kind object;
}
procedure `java.util.List` `G`(`x6.y` v6 @kind this, `x6.l` v7 @kind object, `java.util.List` v8 @kind object, `x6.z` v9 @kind object) @signature `Lx6/y;.G:(Lx6/l;Ljava/util/List;Lx6/z;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4ed6d8.  call temp:= `S`(v6, v9) @signature `Lx6/y;.S:(Lx6/z;)Lc7/i;` @kind direct;
  #L4ed6de.  v0:= temp @kind object;
  #L4ed6e0.  if v0 == 0 then goto L4ed780;
  #L4ed6e4.  call temp:= `e`(v0) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L4ed6ea.  v1:= temp @kind object;
  #L4ed6ec.  call temp:= `equals`(v7, v1) @signature `Lx6/l;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4ed6f2.  v1:= temp;
  #L4ed6f4.  call `f`(v1) @signature `La7/m;.f:(Z)V` @kind static;
  #L4ed6fa.  v1:= v6.`x6.y.a` @type ^`a7.d` @kind object;
  #L4ed6fe.  call temp:= `e`(v0) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L4ed704.  v2:= temp @kind object;
  #L4ed706.  call temp:= `y`(v1, v2) @signature `La7/d;.y:(Lx6/l;)Ljava/lang/Object;` @kind virtual;
  #L4ed70c.  v1:= temp @kind object;
  #L4ed70e.  v1:= (`x6.w`) v1 @kind object;
  #L4ed712.  v2:= 1I;
  #L4ed714.  v3:= 0I;
  #L4ed716.  if v1 == 0 then goto L4ed71e;
  #L4ed71a.  v4:= 1I;
  #L4ed71c.  goto L4ed720;
  #L4ed71e.  v4:= 0I;
  #L4ed720.  v5:= "Missing sync point for query tag that we're tracking" @kind object;
  #L4ed724.  call `g`(v4, v5) @signature `La7/m;.g:(ZLjava/lang/String;)V` @kind static;
  #L4ed72a.  call temp:= `l`(v1, v0) @signature `Lx6/w;.l:(Lc7/i;)Lc7/j;` @kind virtual;
  #L4ed730.  v0:= temp @kind object;
  #L4ed732.  if v0 == 0 then goto L4ed738;
  #L4ed736.  goto L4ed73a;
  #L4ed738.  v2:= 0I;
  #L4ed73a.  v1:= "Missing view for query tag that we're tracking" @kind object;
  #L4ed73e.  call `g`(v2, v1) @signature `La7/m;.g:(ZLjava/lang/String;)V` @kind static;
  #L4ed744.  call temp:= `i`(v0) @signature `Lc7/j;.i:()Lf7/n;` @kind virtual;
  #L4ed74a.  v0:= temp @kind object;
  #L4ed74c.  call temp:= `iterator`(v8) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4ed752.  v8:= temp @kind object;
  #L4ed754.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ed75a.  v1:= temp;
  #L4ed75c.  if v1 == 0 then goto L4ed776;
  #L4ed760.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ed766.  v1:= temp @kind object;
  #L4ed768.  v1:= (`f7.s`) v1 @kind object;
  #L4ed76c.  call temp:= `a`(v1, v0) @signature `Lf7/s;.a:(Lf7/n;)Lf7/n;` @kind virtual;
  #L4ed772.  v0:= temp @kind object;
  #L4ed774.  goto L4ed754;
  #L4ed776.  call temp:= `F`(v6, v7, v0, v9) @signature `Lx6/y;.F:(Lx6/l;Lf7/n;Lx6/z;)Ljava/util/List;` @kind virtual;
  #L4ed77c.  v7:= temp @kind object;
  #L4ed77e.  return v7 @kind object;
  #L4ed780.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4ed786.  v7:= temp @kind object;
  #L4ed788.  return v7 @kind object;
}
procedure `java.util.List` `H`(`x6.y` v11 @kind this, `x6.l` v12 @kind object, `x6.b` v13 @kind object, `x6.b` v14 @kind object, `long` v15 , `boolean` v17 ) @signature `Lx6/y;.H:(Lx6/l;Lx6/b;Lx6/b;JZ)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4ed79c.  v8:= v11 @kind object;
  #L4ed79e.  v9:= v8.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed7a2.  v10:= new `x6.y$h`;
  #L4ed7a6.  v0:= v10 @kind object;
  #L4ed7a8.  v1:= v11 @kind object;
  #L4ed7aa.  v2:= v17;
  #L4ed7ae.  v3:= v12 @kind object;
  #L4ed7b0.  v4:= v13 @kind object;
  #L4ed7b2.  v5:= v15 @kind wide;
  #L4ed7b4.  v7:= v14 @kind object;
  #L4ed7b6.  call `<init>`(v0, v1, v2, v3, v4, v5, v7) @signature `Lx6/y$h;.<init>:(Lx6/y;ZLx6/l;Lx6/b;JLx6/b;)V` @kind direct;
  #L4ed7bc.  call temp:= `g`(v9, v10) @signature `Lz6/e;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #L4ed7c2.  v0:= temp @kind object;
  #L4ed7c4.  v0:= (`java.util.List`) v0 @kind object;
  #L4ed7c8.  return v0 @kind object;
}
procedure `java.util.List` `I`(`x6.y` v12 @kind this, `x6.l` v13 @kind object, `f7.n` v14 @kind object, `f7.n` v15 @kind object, `long` v16 , `boolean` v18 , `boolean` v19 ) @signature `Lx6/y;.I:(Lx6/l;Lf7/n;Lf7/n;JZZ)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L4ed7dc.  if v18 != 0 then goto L4ed7ea;
  #L4ed7e0.  if v19 != 0 then goto L4ed7e6;
  #L4ed7e4.  goto L4ed7ea;
  #L4ed7e6.  v0:= 0I;
  #L4ed7e8.  goto L4ed7ec;
  #L4ed7ea.  v0:= 1I;
  #L4ed7ec.  v1:= "We shouldn't be persisting non-visible writes." @kind object;
  #L4ed7f0.  call `g`(v0, v1) @signature `La7/m;.g:(ZLjava/lang/String;)V` @kind static;
  #L4ed7f6.  v9:= v12 @kind object;
  #L4ed7f8.  v10:= v9.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed7fc.  v11:= new `x6.y$g`;
  #L4ed800.  v0:= v11 @kind object;
  #L4ed802.  v1:= v12 @kind object;
  #L4ed804.  v2:= v19;
  #L4ed808.  v3:= v13 @kind object;
  #L4ed80a.  v4:= v14 @kind object;
  #L4ed80c.  v5:= v16 @kind wide;
  #L4ed810.  v7:= v15 @kind object;
  #L4ed812.  v8:= v18;
  #L4ed816.  call `<init>`(v0, v1, v2, v3, v4, v5, v7, v8) @signature `Lx6/y$g;.<init>:(Lx6/y;ZLx6/l;Lf7/n;JLf7/n;Z)V` @kind direct;
  #L4ed81c.  call temp:= `g`(v10, v11) @signature `Lz6/e;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #L4ed822.  v0:= temp @kind object;
  #L4ed824.  v0:= (`java.util.List`) v0 @kind object;
  #L4ed828.  return v0 @kind object;
}
procedure `f7.n` `J`(`x6.y` v6 @kind this, `x6.l` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lx6/y;.J:(Lx6/l;Ljava/util/List;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4ed094.  v0:= v6.`x6.y.a` @type ^`a7.d` @kind object;
  #L4ed098.  call temp:= `getValue`(v0) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4ed09e.  v1:= temp @kind object;
  #L4ed0a0.  v1:= (`x6.w`) v1 @kind object;
  #L4ed0a4.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4ed0aa.  v1:= temp @kind object;
  #L4ed0ac.  v2:= 0I;
  #L4ed0ae.  v3:= v7 @kind object;
  #L4ed0b0.  call temp:= `h0`(v3) @signature `Lx6/l;.h0:()Lf7/b;` @kind virtual;
  #L4ed0b6.  v4:= temp @kind object;
  #L4ed0b8.  call temp:= `k0`(v3) @signature `Lx6/l;.k0:()Lx6/l;` @kind virtual;
  #L4ed0be.  v3:= temp @kind object;
  #L4ed0c0.  call temp:= `b0`(v1, v4) @signature `Lx6/l;.b0:(Lf7/b;)Lx6/l;` @kind virtual;
  #L4ed0c6.  v1:= temp @kind object;
  #L4ed0c8.  call temp:= `j0`(v1, v7) @signature `Lx6/l;.j0:(Lx6/l;Lx6/l;)Lx6/l;` @kind static;
  #L4ed0ce.  v5:= temp @kind object;
  #L4ed0d0.  if v4 == 0 then goto L4ed0de;
  #L4ed0d4.  call temp:= `G`(v0, v4) @signature `La7/d;.G:(Lf7/b;)La7/d;` @kind virtual;
  #L4ed0da.  v0:= temp @kind object;
  #L4ed0dc.  goto L4ed0e6;
  #L4ed0de.  call temp:= `f`() @signature `La7/d;.f:()La7/d;` @kind static;
  #L4ed0e4.  v0:= temp @kind object;
  #L4ed0e6.  call temp:= `getValue`(v0) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4ed0ec.  v4:= temp @kind object;
  #L4ed0ee.  v4:= (`x6.w`) v4 @kind object;
  #L4ed0f2.  if v4 == 0 then goto L4ed0fe;
  #L4ed0f6.  call temp:= `d`(v4, v5) @signature `Lx6/w;.d:(Lx6/l;)Lf7/n;` @kind virtual;
  #L4ed0fc.  v2:= temp @kind object;
  #L4ed0fe.  call temp:= `isEmpty`(v3) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L4ed104.  v4:= temp;
  #L4ed106.  if v4 != 0 then goto L4ed10e;
  #L4ed10a.  if v2 == 0 then goto L4ed0b0;
  #L4ed10e.  v0:= v6.`x6.y.b` @type ^`x6.g0` @kind object;
  #L4ed112.  v1:= 1I;
  #L4ed114.  call temp:= `d`(v0, v7, v2, v8, v1) @signature `Lx6/g0;.d:(Lx6/l;Lf7/n;Ljava/util/List;Z)Lf7/n;` @kind virtual;
  #L4ed11a.  v7:= temp @kind object;
  #L4ed11c.  return v7 @kind object;
}
procedure `f7.n` `N`(`x6.y` v2 @kind this, `c7.i` v3 @kind object) @signature `Lx6/y;.N:(Lc7/i;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ed130.  v0:= v2.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed134.  v1:= new `x6.x`;
  #L4ed138.  call `<init>`(v1, v2, v3) @signature `Lx6/x;.<init>:(Lx6/y;Lc7/i;)V` @kind direct;
  #L4ed13e.  call temp:= `g`(v0, v1) @signature `Lz6/e;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #L4ed144.  v3:= temp @kind object;
  #L4ed146.  v3:= (`f7.n`) v3 @kind object;
  #L4ed14a.  return v3 @kind object;
}
procedure `void` `O`(`x6.y` v1 @kind this, `c7.i` v2 @kind object, `boolean` v3 , `boolean` v4 ) @signature `Lx6/y;.O:(Lc7/i;ZZ)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eda98.  if v3 == 0 then goto L4edac8;
  #L4eda9c.  v0:= v1.`x6.y.e` @type ^`java.util.Set` @kind object;
  #L4edaa0.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4edaa6.  v0:= temp;
  #L4edaa8.  if v0 != 0 then goto L4edac8;
  #L4edaac.  v3:= new `x6.y$q`;
  #L4edab0.  call `<init>`(v3, v2) @signature `Lx6/y$q;.<init>:(Lc7/i;)V` @kind direct;
  #L4edab6.  call temp:= `u`(v1, v3, v4) @signature `Lx6/y;.u:(Lx6/i;Z)Ljava/util/List;` @kind virtual;
  #L4edabc.  v3:= v1.`x6.y.e` @type ^`java.util.Set` @kind object;
  #L4edac0.  call temp:= `add`(v3, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4edac6.  goto L4edaf6;
  #L4edac8.  if v3 != 0 then goto L4edaf6;
  #L4edacc.  v3:= v1.`x6.y.e` @type ^`java.util.Set` @kind object;
  #L4edad0.  call temp:= `contains`(v3, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4edad6.  v3:= temp;
  #L4edad8.  if v3 == 0 then goto L4edaf6;
  #L4edadc.  v3:= new `x6.y$q`;
  #L4edae0.  call `<init>`(v3, v2) @signature `Lx6/y$q;.<init>:(Lc7/i;)V` @kind direct;
  #L4edae6.  call temp:= `X`(v1, v3, v4) @signature `Lx6/y;.X:(Lx6/i;Z)Ljava/util/List;` @kind virtual;
  #L4edaec.  v3:= v1.`x6.y.e` @type ^`java.util.Set` @kind object;
  #L4edaf0.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L4edaf6.  return @kind void;
}
procedure `com.google.firebase.database.a` `Q`(`x6.y` v2 @kind this, `com.google.firebase.database.i` v3 @kind object) @signature `Lx6/y;.Q:(Lcom/google/firebase/database/i;)Lcom/google/firebase/database/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ed020.  call temp:= `t`(v3) @signature `Lcom/google/firebase/database/i;.t:()Lcom/google/firebase/database/b;` @kind virtual;
  #L4ed026.  v0:= temp @kind object;
  #L4ed028.  v1:= v2.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed02c.  call temp:= `u`(v3) @signature `Lcom/google/firebase/database/i;.u:()Lc7/i;` @kind virtual;
  #L4ed032.  v3:= temp @kind object;
  #L4ed034.  call temp:= `n`(v1, v3) @signature `Lz6/e;.n:(Lc7/i;)Lc7/a;` @kind interface;
  #L4ed03a.  v3:= temp @kind object;
  #L4ed03c.  call temp:= `a`(v3) @signature `Lc7/a;.a:()Lf7/i;` @kind virtual;
  #L4ed042.  v3:= temp @kind object;
  #L4ed044.  call temp:= `a`(v0, v3) @signature `Lcom/google/firebase/database/e;.a:(Lcom/google/firebase/database/b;Lf7/i;)Lcom/google/firebase/database/a;` @kind static;
  #L4ed04a.  v3:= temp @kind object;
  #L4ed04c.  return v3 @kind object;
}
procedure `java.util.List` `T`(`x6.y` v2 @kind this, `c7.i` v3 @kind object, `s6.b` v4 @kind object) @signature `Lx6/y;.T:(Lc7/i;Ls6/b;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ed860.  v0:= 0I;
  #L4ed862.  v1:= 0I;
  #L4ed864.  call temp:= `V`(v2, v3, v0, v4, v1) @signature `Lx6/y;.V:(Lc7/i;Lx6/i;Ls6/b;Z)Ljava/util/List;` @kind direct;
  #L4ed86a.  v3:= temp @kind object;
  #L4ed86c.  return v3 @kind object;
}
procedure `java.util.List` `U`(`x6.y` v2 @kind this) @signature `Lx6/y;.U:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ed880.  v0:= v2.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed884.  v1:= new `x6.y$j`;
  #L4ed888.  call `<init>`(v1, v2) @signature `Lx6/y$j;.<init>:(Lx6/y;)V` @kind direct;
  #L4ed88e.  call temp:= `g`(v0, v1) @signature `Lz6/e;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #L4ed894.  v0:= temp @kind object;
  #L4ed896.  v0:= (`java.util.List`) v0 @kind object;
  #L4ed89a.  return v0 @kind object;
}
procedure `java.util.List` `W`(`x6.y` v3 @kind this, `x6.i` v4 @kind object) @signature `Lx6/y;.W:(Lx6/i;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ed8e4.  call temp:= `e`(v4) @signature `Lx6/i;.e:()Lc7/i;` @kind virtual;
  #L4ed8ea.  v0:= temp @kind object;
  #L4ed8ec.  v1:= 0I;
  #L4ed8ee.  v2:= 0I;
  #L4ed8f0.  call temp:= `V`(v3, v0, v4, v1, v2) @signature `Lx6/y;.V:(Lc7/i;Lx6/i;Ls6/b;Z)Ljava/util/List;` @kind direct;
  #L4ed8f6.  v4:= temp @kind object;
  #L4ed8f8.  return v4 @kind object;
}
procedure `java.util.List` `X`(`x6.y` v2 @kind this, `x6.i` v3 @kind object, `boolean` v4 ) @signature `Lx6/y;.X:(Lx6/i;Z)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ed90c.  call temp:= `e`(v3) @signature `Lx6/i;.e:()Lc7/i;` @kind virtual;
  #L4ed912.  v0:= temp @kind object;
  #L4ed914.  v1:= 0I;
  #L4ed916.  call temp:= `V`(v2, v0, v3, v1, v4) @signature `Lx6/y;.V:(Lc7/i;Lx6/i;Ls6/b;Z)Ljava/util/List;` @kind direct;
  #L4ed91c.  v3:= temp @kind object;
  #L4ed91e.  return v3 @kind object;
}
procedure `void` `Z`(`x6.y` v2 @kind this, `c7.i` v3 @kind object) @signature `Lx6/y;.Z:(Lc7/i;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4edb74.  v0:= v2.`x6.y.g` @type ^`z6.e` @kind object;
  #L4edb78.  v1:= new `x6.y$b`;
  #L4edb7c.  call `<init>`(v1, v2, v3) @signature `Lx6/y$b;.<init>:(Lx6/y;Lc7/i;)V` @kind direct;
  #L4edb82.  call temp:= `g`(v0, v1) @signature `Lz6/e;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #L4edb88.  return @kind void;
}
procedure `x6.z` `b0`(`x6.y` v1 @kind this, `c7.i` v2 @kind object) @signature `Lx6/y;.b0:(Lc7/i;)Lx6/z;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4edc80.  v0:= v1.`x6.y.d` @type ^`java.util.Map` @kind object;
  #L4edc84.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4edc8a.  v2:= temp @kind object;
  #L4edc8c.  v2:= (`x6.z`) v2 @kind object;
  #L4edc90.  return v2 @kind object;
}
procedure `java.util.List` `s`(`x6.y` v9 @kind this, `long` v10 , `boolean` v12 , `boolean` v13 , `a7.a` v14 @kind object) @signature `Lx6/y;.s:(JZZLa7/a;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4ed304.  v0:= v9.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed308.  v8:= new `x6.y$i`;
  #L4ed30c.  v1:= v8 @kind object;
  #L4ed30e.  v2:= v9 @kind object;
  #L4ed310.  v3:= v13;
  #L4ed312.  v4:= v10 @kind wide;
  #L4ed314.  v6:= v12;
  #L4ed316.  v7:= v14 @kind object;
  #L4ed318.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lx6/y$i;.<init>:(Lx6/y;ZJZLa7/a;)V` @kind direct;
  #L4ed31e.  call temp:= `g`(v0, v8) @signature `Lz6/e;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #L4ed324.  v10:= temp @kind object;
  #L4ed326.  v10:= (`java.util.List`) v10 @kind object;
  #L4ed32a.  return v10 @kind object;
}
procedure `java.util.List` `t`(`x6.y` v1 @kind this, `x6.i` v2 @kind object) @signature `Lx6/y;.t:(Lx6/i;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ed33c.  v0:= 0I;
  #L4ed33e.  call temp:= `u`(v1, v2, v0) @signature `Lx6/y;.u:(Lx6/i;Z)Ljava/util/List;` @kind virtual;
  #L4ed344.  v2:= temp @kind object;
  #L4ed346.  return v2 @kind object;
}
procedure `java.util.List` `u`(`x6.y` v2 @kind this, `x6.i` v3 @kind object, `boolean` v4 ) @signature `Lx6/y;.u:(Lx6/i;Z)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ed358.  v0:= v2.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed35c.  v1:= new `x6.y$c`;
  #L4ed360.  call `<init>`(v1, v2, v3, v4) @signature `Lx6/y$c;.<init>:(Lx6/y;Lx6/i;Z)V` @kind direct;
  #L4ed366.  call temp:= `g`(v0, v1) @signature `Lz6/e;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #L4ed36c.  v3:= temp @kind object;
  #L4ed36e.  v3:= (`java.util.List`) v3 @kind object;
  #L4ed372.  return v3 @kind object;
}
procedure `java.util.List` `v`(`x6.y` v2 @kind this, `x6.l` v3 @kind object) @signature `Lx6/y;.v:(Lx6/l;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ed384.  v0:= v2.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed388.  v1:= new `x6.y$m`;
  #L4ed38c.  call `<init>`(v1, v2, v3) @signature `Lx6/y$m;.<init>:(Lx6/y;Lx6/l;)V` @kind direct;
  #L4ed392.  call temp:= `g`(v0, v1) @signature `Lz6/e;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #L4ed398.  v3:= temp @kind object;
  #L4ed39a.  v3:= (`java.util.List`) v3 @kind object;
  #L4ed39e.  return v3 @kind object;
}
procedure `java.util.List` `z`(`x6.y` v2 @kind this, `x6.l` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lx6/y;.z:(Lx6/l;Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ed528.  v0:= v2.`x6.y.g` @type ^`z6.e` @kind object;
  #L4ed52c.  v1:= new `x6.y$l`;
  #L4ed530.  call `<init>`(v1, v2, v4, v3) @signature `Lx6/y$l;.<init>:(Lx6/y;Ljava/util/Map;Lx6/l;)V` @kind direct;
  #L4ed536.  call temp:= `g`(v0, v1) @signature `Lz6/e;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #L4ed53c.  v3:= temp @kind object;
  #L4ed53e.  v3:= (`java.util.List`) v3 @kind object;
  #L4ed542.  return v3 @kind object;
}
