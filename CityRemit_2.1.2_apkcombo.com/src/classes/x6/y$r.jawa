record `x6.y$r` @kind class @AccessFlag  extends `v6.g` @kind interface, `x6.y$p` @kind interface {
  `c7.j` `x6.y$r.a` @AccessFlag PRIVATE_FINAL;
  `x6.z` `x6.y$r.b` @AccessFlag PRIVATE_FINAL;
  `x6.y` `x6.y$r.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.y$r` v0 @kind this, `x6.y` v1 @kind object, `c7.j` v2 @kind object) @signature `Lx6/y$r;.<init>:(Lx6/y;Lc7/j;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ecf0c.  v0.`x6.y$r.c` @type ^`x6.y` := v1 @kind object;
  #L4ecf10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ecf16.  v0.`x6.y$r.a` @type ^`c7.j` := v2 @kind object;
  #L4ecf1a.  call temp:= `h`(v2) @signature `Lc7/j;.h:()Lc7/i;` @kind virtual;
  #L4ecf20.  v2:= temp @kind object;
  #L4ecf22.  call temp:= `b0`(v1, v2) @signature `Lx6/y;.b0:(Lc7/i;)Lx6/z;` @kind virtual;
  #L4ecf28.  v1:= temp @kind object;
  #L4ecf2a.  v0.`x6.y$r.b` @type ^`x6.z` := v1 @kind object;
  #L4ecf2e.  return @kind void;
}
procedure `x6.z` `e`(`x6.y$r` v0 @kind object) @signature `Lx6/y$r;.e:(Lx6/y$r;)Lx6/z;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4ecf40.  v0:= v0.`x6.y$r.b` @type ^`x6.z` @kind object;
  #L4ecf44.  return v0 @kind object;
}
procedure `v6.a` `a`(`x6.y$r` v4 @kind this) @signature `Lx6/y$r;.a:()Lv6/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ece88.  v0:= v4.`x6.y$r.a` @type ^`c7.j` @kind object;
  #L4ece8c.  call temp:= `i`(v0) @signature `Lc7/j;.i:()Lf7/n;` @kind virtual;
  #L4ece92.  v0:= temp @kind object;
  #L4ece94.  call temp:= `b`(v0) @signature `Lf7/d;.b:(Lf7/n;)Lf7/d;` @kind static;
  #L4ece9a.  v0:= temp @kind object;
  #L4ece9c.  call temp:= `e`(v0) @signature `Lf7/d;.e:()Ljava/util/List;` @kind virtual;
  #L4ecea2.  v1:= temp @kind object;
  #L4ecea4.  v2:= new `java.util.ArrayList`;
  #L4ecea8.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4eceae.  v3:= temp;
  #L4eceb0.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L4eceb6.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4ecebc.  v1:= temp @kind object;
  #L4ecebe.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ecec4.  v3:= temp;
  #L4ecec6.  if v3 == 0 then goto L4ecee6;
  #L4ececa.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eced0.  v3:= temp @kind object;
  #L4eced2.  v3:= (`x6.l`) v3 @kind object;
  #L4eced6.  call temp:= `a0`(v3) @signature `Lx6/l;.a0:()Ljava/util/List;` @kind virtual;
  #L4ecedc.  v3:= temp @kind object;
  #L4ecede.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4ecee4.  goto L4ecebe;
  #L4ecee6.  v1:= new `v6.a`;
  #L4eceea.  call temp:= `d`(v0) @signature `Lf7/d;.d:()Ljava/util/List;` @kind virtual;
  #L4ecef0.  v0:= temp @kind object;
  #L4ecef2.  call `<init>`(v1, v2, v0) @signature `Lv6/a;.<init>:(Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L4ecef8.  return v1 @kind object;
}
procedure `java.util.List` `b`(`x6.y$r` v3 @kind this, `s6.b` v4 @kind object) @signature `Lx6/y$r;.b:(Ls6/b;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ecdc0.  if v4 != 0 then goto L4ecdfc;
  #L4ecdc4.  v4:= v3.`x6.y$r.a` @type ^`c7.j` @kind object;
  #L4ecdc8.  call temp:= `h`(v4) @signature `Lc7/j;.h:()Lc7/i;` @kind virtual;
  #L4ecdce.  v4:= temp @kind object;
  #L4ecdd0.  v0:= v3.`x6.y$r.b` @type ^`x6.z` @kind object;
  #L4ecdd4.  if v0 == 0 then goto L4ecde6;
  #L4ecdd8.  v4:= v3.`x6.y$r.c` @type ^`x6.y` @kind object;
  #L4ecddc.  call temp:= `C`(v4, v0) @signature `Lx6/y;.C:(Lx6/z;)Ljava/util/List;` @kind virtual;
  #L4ecde2.  v4:= temp @kind object;
  #L4ecde4.  return v4 @kind object;
  #L4ecde6.  v0:= v3.`x6.y$r.c` @type ^`x6.y` @kind object;
  #L4ecdea.  call temp:= `e`(v4) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L4ecdf0.  v4:= temp @kind object;
  #L4ecdf2.  call temp:= `v`(v0, v4) @signature `Lx6/y;.v:(Lx6/l;)Ljava/util/List;` @kind virtual;
  #L4ecdf8.  v4:= temp @kind object;
  #L4ecdfa.  return v4 @kind object;
  #L4ecdfc.  v0:= v3.`x6.y$r.c` @type ^`x6.y` @kind object;
  #L4ece00.  call temp:= `b`(v0) @signature `Lx6/y;.b:(Lx6/y;)Le7/c;` @kind static;
  #L4ece06.  v0:= temp @kind object;
  #L4ece08.  v1:= new `java.lang.StringBuilder`;
  #L4ece0c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ece12.  v2:= "Listen at " @kind object;
  #L4ece16.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ece1c.  v2:= v3.`x6.y$r.a` @type ^`c7.j` @kind object;
  #L4ece20.  call temp:= `h`(v2) @signature `Lc7/j;.h:()Lc7/i;` @kind virtual;
  #L4ece26.  v2:= temp @kind object;
  #L4ece28.  call temp:= `e`(v2) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L4ece2e.  v2:= temp @kind object;
  #L4ece30.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ece36.  v2:= " failed: " @kind object;
  #L4ece3a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ece40.  call temp:= `toString`(v4) @signature `Ls6/b;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ece46.  v2:= temp @kind object;
  #L4ece48.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ece4e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ece54.  v1:= temp @kind object;
  #L4ece56.  call `i`(v0, v1) @signature `Le7/c;.i:(Ljava/lang/String;)V` @kind virtual;
  #L4ece5c.  v0:= v3.`x6.y$r.c` @type ^`x6.y` @kind object;
  #L4ece60.  v1:= v3.`x6.y$r.a` @type ^`c7.j` @kind object;
  #L4ece64.  call temp:= `h`(v1) @signature `Lc7/j;.h:()Lc7/i;` @kind virtual;
  #L4ece6a.  v1:= temp @kind object;
  #L4ece6c.  call temp:= `T`(v0, v1, v4) @signature `Lx6/y;.T:(Lc7/i;Ls6/b;)Ljava/util/List;` @kind virtual;
  #L4ece72.  v4:= temp @kind object;
  #L4ece74.  return v4 @kind object;
}
procedure `boolean` `c`(`x6.y$r` v5 @kind this) @signature `Lx6/y$r;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ecd60.  v0:= v5.`x6.y$r.a` @type ^`c7.j` @kind object;
  #L4ecd64.  call temp:= `i`(v0) @signature `Lc7/j;.i:()Lf7/n;` @kind virtual;
  #L4ecd6a.  v0:= temp @kind object;
  #L4ecd6c.  call temp:= `b`(v0) @signature `La7/e;.b:(Lf7/n;)J` @kind static;
  #L4ecd72.  v0:= temp @kind wide;
  #L4ecd74.  v2:= 1024L;
  #L4ecd78.  v4:= lcmp(v0, v2);
  #L4ecd7c.  if v4 <= 0 then goto L4ecd84;
  #L4ecd80.  v0:= 1I;
  #L4ecd82.  goto L4ecd86;
  #L4ecd84.  v0:= 0I;
  #L4ecd86.  return v0;
}
procedure `java.lang.String` `d`(`x6.y$r` v1 @kind this) @signature `Lx6/y$r;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ecd98.  v0:= v1.`x6.y$r.a` @type ^`c7.j` @kind object;
  #L4ecd9c.  call temp:= `i`(v0) @signature `Lc7/j;.i:()Lf7/n;` @kind virtual;
  #L4ecda2.  v0:= temp @kind object;
  #L4ecda4.  call temp:= `Z`(v0) @signature `Lf7/n;.Z:()Ljava/lang/String;` @kind interface;
  #L4ecdaa.  v0:= temp @kind object;
  #L4ecdac.  return v0 @kind object;
}
