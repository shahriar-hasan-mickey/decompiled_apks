record `x6.y$g` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `boolean` `x6.y$g.a` @AccessFlag FINAL_SYNTHETIC;
  `x6.l` `x6.y$g.b` @AccessFlag FINAL_SYNTHETIC;
  `f7.n` `x6.y$g.c` @AccessFlag FINAL_SYNTHETIC;
  `long` `x6.y$g.d` @AccessFlag FINAL_SYNTHETIC;
  `f7.n` `x6.y$g.e` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `x6.y$g.f` @AccessFlag FINAL_SYNTHETIC;
  `x6.y` `x6.y$g.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.y$g` v0 @kind this, `x6.y` v1 @kind object, `boolean` v2 , `x6.l` v3 @kind object, `f7.n` v4 @kind object, `long` v5 , `f7.n` v7 @kind object, `boolean` v8 ) @signature `Lx6/y$g;.<init>:(Lx6/y;ZLx6/l;Lf7/n;JLf7/n;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ec574.  v0.`x6.y$g.g` @type ^`x6.y` := v1 @kind object;
  #L4ec578.  v0.`x6.y$g.a` @type ^`boolean` := v2 @kind boolean;
  #L4ec57c.  v0.`x6.y$g.b` @type ^`x6.l` := v3 @kind object;
  #L4ec580.  v0.`x6.y$g.c` @type ^`f7.n` := v4 @kind object;
  #L4ec584.  v0.`x6.y$g.d` @type ^`long` := v5 @kind wide;
  #L4ec588.  v0.`x6.y$g.e` @type ^`f7.n` := v7 @kind object;
  #L4ec58c.  v0.`x6.y$g.f` @type ^`boolean` := v8 @kind boolean;
  #L4ec590.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ec596.  return @kind void;
}
procedure `java.util.List` `a`(`x6.y$g` v5 @kind this) @signature `Lx6/y$g;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ec4dc.  v0:= v5.`x6.y$g.a` @type ^`boolean` @kind boolean;
  #L4ec4e0.  if v0 == 0 then goto L4ec502;
  #L4ec4e4.  v0:= v5.`x6.y$g.g` @type ^`x6.y` @kind object;
  #L4ec4e8.  call temp:= `c`(v0) @signature `Lx6/y;.c:(Lx6/y;)Lz6/e;` @kind static;
  #L4ec4ee.  v0:= temp @kind object;
  #L4ec4f0.  v1:= v5.`x6.y$g.b` @type ^`x6.l` @kind object;
  #L4ec4f4.  v2:= v5.`x6.y$g.c` @type ^`f7.n` @kind object;
  #L4ec4f8.  v3:= v5.`x6.y$g.d` @type ^`long` @kind wide;
  #L4ec4fc.  call `d`(v0, v1, v2, v3) @signature `Lz6/e;.d:(Lx6/l;Lf7/n;J)V` @kind interface;
  #L4ec502.  v0:= v5.`x6.y$g.g` @type ^`x6.y` @kind object;
  #L4ec506.  call temp:= `j`(v0) @signature `Lx6/y;.j:(Lx6/y;)Lx6/g0;` @kind static;
  #L4ec50c.  v0:= temp @kind object;
  #L4ec50e.  v1:= v5.`x6.y$g.b` @type ^`x6.l` @kind object;
  #L4ec512.  v2:= v5.`x6.y$g.e` @type ^`f7.n` @kind object;
  #L4ec516.  v3:= v5.`x6.y$g.d` @type ^`long` @kind wide;
  #L4ec51a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4ec520.  v3:= temp @kind object;
  #L4ec522.  v4:= v5.`x6.y$g.f` @type ^`boolean` @kind boolean;
  #L4ec526.  call `b`(v0, v1, v2, v3, v4) @signature `Lx6/g0;.b:(Lx6/l;Lf7/n;Ljava/lang/Long;Z)V` @kind virtual;
  #L4ec52c.  v0:= v5.`x6.y$g.f` @type ^`boolean` @kind boolean;
  #L4ec530.  if v0 != 0 then goto L4ec53e;
  #L4ec534.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4ec53a.  v0:= temp @kind object;
  #L4ec53c.  return v0 @kind object;
  #L4ec53e.  v0:= v5.`x6.y$g.g` @type ^`x6.y` @kind object;
  #L4ec542.  v1:= new `y6.f`;
  #L4ec546.  v2:= `@@y6.e.d` @type ^`y6.e` @kind object;
  #L4ec54a.  v3:= v5.`x6.y$g.b` @type ^`x6.l` @kind object;
  #L4ec54e.  v4:= v5.`x6.y$g.e` @type ^`f7.n` @kind object;
  #L4ec552.  call `<init>`(v1, v2, v3, v4) @signature `Ly6/f;.<init>:(Ly6/e;Lx6/l;Lf7/n;)V` @kind direct;
  #L4ec558.  call temp:= `k`(v0, v1) @signature `Lx6/y;.k:(Lx6/y;Ly6/d;)Ljava/util/List;` @kind static;
  #L4ec55e.  v0:= temp @kind object;
  #L4ec560.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`x6.y$g` v1 @kind this) @signature `Lx6/y$g;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4ec4c0.  call temp:= `a`(v1) @signature `Lx6/y$g;.a:()Ljava/util/List;` @kind virtual;
  #L4ec4c6.  v0:= temp @kind object;
  #L4ec4c8.  return v0 @kind object;
}
