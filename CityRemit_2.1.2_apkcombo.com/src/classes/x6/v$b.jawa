record `x6.v$b` @kind class @AccessFlag  extends `x6.v$c` @kind interface {
  `x6.l` `x6.v$b.a` @AccessFlag FINAL_SYNTHETIC;
  `x6.v$d` `x6.v$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.v$b` v0 @kind this, `x6.v` v1 @kind object, `x6.l` v2 @kind object, `x6.v$d` v3 @kind object) @signature `Lx6/v$b;.<init>:(Lx6/v;Lx6/l;Lx6/v$d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4eb260.  v0.`x6.v$b.a` @type ^`x6.l` := v2 @kind object;
  #L4eb264.  v0.`x6.v$b.b` @type ^`x6.v$d` := v3 @kind object;
  #L4eb268.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4eb26e.  return @kind void;
}
procedure `void` `a`(`x6.v$b` v1 @kind this, `f7.b` v2 @kind object, `x6.v` v3 @kind object) @signature `Lx6/v$b;.a:(Lf7/b;Lx6/v;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eb280.  v0:= v1.`x6.v$b.a` @type ^`x6.l` @kind object;
  #L4eb284.  call temp:= `b0`(v0, v2) @signature `Lx6/l;.b0:(Lf7/b;)Lx6/l;` @kind virtual;
  #L4eb28a.  v2:= temp @kind object;
  #L4eb28c.  v0:= v1.`x6.v$b.b` @type ^`x6.v$d` @kind object;
  #L4eb290.  call `b`(v3, v2, v0) @signature `Lx6/v;.b:(Lx6/l;Lx6/v$d;)V` @kind virtual;
  #L4eb296.  return @kind void;
}
