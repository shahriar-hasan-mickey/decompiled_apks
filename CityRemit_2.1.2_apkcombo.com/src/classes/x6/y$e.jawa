record `x6.y$e` @kind class @AccessFlag  extends `a7.d$c` @kind interface {
  `x6.y` `x6.y$e.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.y$e` v0 @kind this, `x6.y` v1 @kind object) @signature `Lx6/y$e;.<init>:(Lx6/y;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ec400.  v0.`x6.y$e.a` @type ^`x6.y` := v1 @kind object;
  #L4ec404.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ec40a.  return @kind void;
}
procedure `java.lang.Object` `a`(`x6.y$e` v0 @kind this, `x6.l` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lx6/y$e;.a:(Lx6/l;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4ec318.  v2:= (`x6.w`) v2 @kind object;
  #L4ec31c.  v3:= (`java.lang.Void`) v3 @kind object;
  #L4ec320.  call temp:= `b`(v0, v1, v2, v3) @signature `Lx6/y$e;.b:(Lx6/l;Lx6/w;Ljava/lang/Void;)Ljava/lang/Void;` @kind virtual;
  #L4ec326.  v1:= temp @kind object;
  #L4ec328.  return v1 @kind object;
}
procedure `java.lang.Void` `b`(`x6.y$e` v2 @kind this, `x6.l` v3 @kind object, `x6.w` v4 @kind object, `java.lang.Void` v5 @kind object) @signature `Lx6/y$e;.b:(Lx6/l;Lx6/w;Ljava/lang/Void;)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ec33c.  call temp:= `isEmpty`(v3) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L4ec342.  v3:= temp;
  #L4ec344.  if v3 != 0 then goto L4ec390;
  #L4ec348.  call temp:= `h`(v4) @signature `Lx6/w;.h:()Z` @kind virtual;
  #L4ec34e.  v3:= temp;
  #L4ec350.  if v3 == 0 then goto L4ec390;
  #L4ec354.  call temp:= `e`(v4) @signature `Lx6/w;.e:()Lc7/j;` @kind virtual;
  #L4ec35a.  v3:= temp @kind object;
  #L4ec35c.  call temp:= `h`(v3) @signature `Lc7/j;.h:()Lc7/i;` @kind virtual;
  #L4ec362.  v3:= temp @kind object;
  #L4ec364.  v4:= v2.`x6.y$e.a` @type ^`x6.y` @kind object;
  #L4ec368.  call temp:= `g`(v4) @signature `Lx6/y;.g:(Lx6/y;)Lx6/y$s;` @kind static;
  #L4ec36e.  v4:= temp @kind object;
  #L4ec370.  v5:= v2.`x6.y$e.a` @type ^`x6.y` @kind object;
  #L4ec374.  call temp:= `f`(v5, v3) @signature `Lx6/y;.f:(Lx6/y;Lc7/i;)Lc7/i;` @kind static;
  #L4ec37a.  v5:= temp @kind object;
  #L4ec37c.  v0:= v2.`x6.y$e.a` @type ^`x6.y` @kind object;
  #L4ec380.  call temp:= `b0`(v0, v3) @signature `Lx6/y;.b0:(Lc7/i;)Lx6/z;` @kind virtual;
  #L4ec386.  v3:= temp @kind object;
  #L4ec388.  call `b`(v4, v5, v3) @signature `Lx6/y$s;.b:(Lc7/i;Lx6/z;)V` @kind interface;
  #L4ec38e.  goto L4ec3ec;
  #L4ec390.  call temp:= `f`(v4) @signature `Lx6/w;.f:()Ljava/util/List;` @kind virtual;
  #L4ec396.  v3:= temp @kind object;
  #L4ec398.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4ec39e.  v3:= temp @kind object;
  #L4ec3a0.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ec3a6.  v4:= temp;
  #L4ec3a8.  if v4 == 0 then goto L4ec3ec;
  #L4ec3ac.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ec3b2.  v4:= temp @kind object;
  #L4ec3b4.  v4:= (`c7.j`) v4 @kind object;
  #L4ec3b8.  call temp:= `h`(v4) @signature `Lc7/j;.h:()Lc7/i;` @kind virtual;
  #L4ec3be.  v4:= temp @kind object;
  #L4ec3c0.  v5:= v2.`x6.y$e.a` @type ^`x6.y` @kind object;
  #L4ec3c4.  call temp:= `g`(v5) @signature `Lx6/y;.g:(Lx6/y;)Lx6/y$s;` @kind static;
  #L4ec3ca.  v5:= temp @kind object;
  #L4ec3cc.  v0:= v2.`x6.y$e.a` @type ^`x6.y` @kind object;
  #L4ec3d0.  call temp:= `f`(v0, v4) @signature `Lx6/y;.f:(Lx6/y;Lc7/i;)Lc7/i;` @kind static;
  #L4ec3d6.  v0:= temp @kind object;
  #L4ec3d8.  v1:= v2.`x6.y$e.a` @type ^`x6.y` @kind object;
  #L4ec3dc.  call temp:= `b0`(v1, v4) @signature `Lx6/y;.b0:(Lc7/i;)Lx6/z;` @kind virtual;
  #L4ec3e2.  v4:= temp @kind object;
  #L4ec3e4.  call `b`(v5, v0, v4) @signature `Lx6/y$s;.b:(Lc7/i;Lx6/z;)V` @kind interface;
  #L4ec3ea.  goto L4ec3a0;
  #L4ec3ec.  v3:= 0I;
  #L4ec3ee.  return v3 @kind object;
}
