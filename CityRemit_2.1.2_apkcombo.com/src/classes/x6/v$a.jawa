record `x6.v$a` @kind class @AccessFlag  extends `f7.c$c` @kind class {
  `x6.l` `x6.v$a.a` @AccessFlag FINAL_SYNTHETIC;
  `x6.v` `x6.v$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.v$a` v0 @kind this, `x6.v` v1 @kind object, `x6.l` v2 @kind object) @signature `Lx6/v$a;.<init>:(Lx6/v;Lx6/l;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4eb218.  v0.`x6.v$a.b` @type ^`x6.v` := v1 @kind object;
  #L4eb21c.  v0.`x6.v$a.a` @type ^`x6.l` := v2 @kind object;
  #L4eb220.  call `<init>`(v0) @signature `Lf7/c$c;.<init>:()V` @kind direct;
  #L4eb226.  return @kind void;
}
procedure `void` `b`(`x6.v$a` v2 @kind this, `f7.b` v3 @kind object, `f7.n` v4 @kind object) @signature `Lx6/v$a;.b:(Lf7/b;Lf7/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4eb238.  v0:= v2.`x6.v$a.b` @type ^`x6.v` @kind object;
  #L4eb23c.  v1:= v2.`x6.v$a.a` @type ^`x6.l` @kind object;
  #L4eb240.  call temp:= `b0`(v1, v3) @signature `Lx6/l;.b0:(Lf7/b;)Lx6/l;` @kind virtual;
  #L4eb246.  v3:= temp @kind object;
  #L4eb248.  call `d`(v0, v3, v4) @signature `Lx6/v;.d:(Lx6/l;Lf7/n;)V` @kind virtual;
  #L4eb24e.  return @kind void;
}
