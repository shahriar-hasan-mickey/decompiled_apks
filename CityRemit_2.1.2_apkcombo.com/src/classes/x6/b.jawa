record `x6.b` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Iterable` @kind interface {
  `a7.d` `x6.b.o` @AccessFlag PRIVATE_FINAL;
}
global `x6.b` `@@x6.b.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx6/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4e611c.  v0:= new `x6.b`;
  #L4e6120.  v1:= new `a7.d`;
  #L4e6124.  v2:= 0I;
  #L4e6126.  call `<init>`(v1, v2) @signature `La7/d;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4e612c.  call `<init>`(v0, v1) @signature `Lx6/b;.<init>:(La7/d;)V` @kind direct;
  #L4e6132.  `@@x6.b.p` @type ^`x6.b` := v0 @kind object;
  #L4e6136.  return @kind void;
}
procedure `void` `<init>`(`x6.b` v0 @kind this, `a7.d` v1 @kind object) @signature `Lx6/b;.<init>:(La7/d;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4e6148.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e614e.  v0.`x6.b.o` @type ^`a7.d` := v1 @kind object;
  #L4e6152.  return @kind void;
}
procedure `x6.b` `G`(`java.util.Map` v4 @kind object) @signature `Lx6/b;.G:(Ljava/util/Map;)Lx6/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e6304.  call temp:= `f`() @signature `La7/d;.f:()La7/d;` @kind static;
  #L4e630a.  v0:= temp @kind object;
  #L4e630c.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L4e6312.  v4:= temp @kind object;
  #L4e6314.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4e631a.  v4:= temp @kind object;
  #L4e631c.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e6322.  v1:= temp;
  #L4e6324.  if v1 == 0 then goto L4e6360;
  #L4e6328.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e632e.  v1:= temp @kind object;
  #L4e6330.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L4e6334.  v2:= new `a7.d`;
  #L4e6338.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4e633e.  v3:= temp @kind object;
  #L4e6340.  v3:= (`f7.n`) v3 @kind object;
  #L4e6344.  call `<init>`(v2, v3) @signature `La7/d;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4e634a.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4e6350.  v1:= temp @kind object;
  #L4e6352.  v1:= (`x6.l`) v1 @kind object;
  #L4e6356.  call temp:= `a0`(v0, v1, v2) @signature `La7/d;.a0:(Lx6/l;La7/d;)La7/d;` @kind virtual;
  #L4e635c.  v0:= temp @kind object;
  #L4e635e.  goto L4e631c;
  #L4e6360.  v4:= new `x6.b`;
  #L4e6364.  call `<init>`(v4, v0) @signature `Lx6/b;.<init>:(La7/d;)V` @kind direct;
  #L4e636a.  return v4 @kind object;
}
procedure `x6.b` `N`(`java.util.Map` v4 @kind object) @signature `Lx6/b;.N:(Ljava/util/Map;)Lx6/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e637c.  call temp:= `f`() @signature `La7/d;.f:()La7/d;` @kind static;
  #L4e6382.  v0:= temp @kind object;
  #L4e6384.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L4e638a.  v4:= temp @kind object;
  #L4e638c.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4e6392.  v4:= temp @kind object;
  #L4e6394.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e639a.  v1:= temp;
  #L4e639c.  if v1 == 0 then goto L4e63e6;
  #L4e63a0.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e63a6.  v1:= temp @kind object;
  #L4e63a8.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L4e63ac.  v2:= new `a7.d`;
  #L4e63b0.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4e63b6.  v3:= temp @kind object;
  #L4e63b8.  call temp:= `a`(v3) @signature `Lf7/o;.a:(Ljava/lang/Object;)Lf7/n;` @kind static;
  #L4e63be.  v3:= temp @kind object;
  #L4e63c0.  call `<init>`(v2, v3) @signature `La7/d;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4e63c6.  v3:= new `x6.l`;
  #L4e63ca.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4e63d0.  v1:= temp @kind object;
  #L4e63d2.  v1:= (`java.lang.String`) v1 @kind object;
  #L4e63d6.  call `<init>`(v3, v1) @signature `Lx6/l;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e63dc.  call temp:= `a0`(v0, v3, v2) @signature `La7/d;.a0:(Lx6/l;La7/d;)La7/d;` @kind virtual;
  #L4e63e2.  v0:= temp @kind object;
  #L4e63e4.  goto L4e6394;
  #L4e63e6.  v4:= new `x6.b`;
  #L4e63ea.  call `<init>`(v4, v0) @signature `Lx6/b;.<init>:(La7/d;)V` @kind direct;
  #L4e63f0.  return v4 @kind object;
}
procedure `f7.n` `n`(`x6.b` v4 @kind this, `x6.l` v5 @kind object, `a7.d` v6 @kind object, `f7.n` v7 @kind object) @signature `Lx6/b;.n:(Lx6/l;La7/d;Lf7/n;)Lf7/n;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e5d9c.  call temp:= `getValue`(v6) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4e5da2.  v0:= temp @kind object;
  #L4e5da4.  if v0 == 0 then goto L4e5dbe;
  #L4e5da8.  call temp:= `getValue`(v6) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4e5dae.  v6:= temp @kind object;
  #L4e5db0.  v6:= (`f7.n`) v6 @kind object;
  #L4e5db4.  call temp:= `U`(v7, v5, v6) @signature `Lf7/n;.U:(Lx6/l;Lf7/n;)Lf7/n;` @kind interface;
  #L4e5dba.  v5:= temp @kind object;
  #L4e5dbc.  return v5 @kind object;
  #L4e5dbe.  v0:= 0I;
  #L4e5dc0.  call temp:= `N`(v6) @signature `La7/d;.N:()Lu6/c;` @kind virtual;
  #L4e5dc6.  v6:= temp @kind object;
  #L4e5dc8.  call temp:= `iterator`(v6) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4e5dce.  v6:= temp @kind object;
  #L4e5dd0.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e5dd6.  v1:= temp;
  #L4e5dd8.  if v1 == 0 then goto L4e5e48;
  #L4e5ddc.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e5de2.  v1:= temp @kind object;
  #L4e5de4.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L4e5de8.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4e5dee.  v2:= temp @kind object;
  #L4e5df0.  v2:= (`a7.d`) v2 @kind object;
  #L4e5df4.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4e5dfa.  v1:= temp @kind object;
  #L4e5dfc.  v1:= (`f7.b`) v1 @kind object;
  #L4e5e00.  call temp:= `t`(v1) @signature `Lf7/b;.t:()Z` @kind virtual;
  #L4e5e06.  v3:= temp;
  #L4e5e08.  if v3 == 0 then goto L4e5e36;
  #L4e5e0c.  call temp:= `getValue`(v2) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4e5e12.  v0:= temp @kind object;
  #L4e5e14.  if v0 == 0 then goto L4e5e1c;
  #L4e5e18.  v0:= 1I;
  #L4e5e1a.  goto L4e5e1e;
  #L4e5e1c.  v0:= 0I;
  #L4e5e1e.  v1:= "Priority writes must always be leaf nodes" @kind object;
  #L4e5e22.  call `g`(v0, v1) @signature `La7/m;.g:(ZLjava/lang/String;)V` @kind static;
  #L4e5e28.  call temp:= `getValue`(v2) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4e5e2e.  v0:= temp @kind object;
  #L4e5e30.  v0:= (`f7.n`) v0 @kind object;
  #L4e5e34.  goto L4e5dd0;
  #L4e5e36.  call temp:= `b0`(v5, v1) @signature `Lx6/l;.b0:(Lf7/b;)Lx6/l;` @kind virtual;
  #L4e5e3c.  v1:= temp @kind object;
  #L4e5e3e.  call temp:= `n`(v4, v1, v2, v7) @signature `Lx6/b;.n:(Lx6/l;La7/d;Lf7/n;)Lf7/n;` @kind direct;
  #L4e5e44.  v7:= temp @kind object;
  #L4e5e46.  goto L4e5dd0;
  #L4e5e48.  call temp:= `H`(v7, v5) @signature `Lf7/n;.H:(Lx6/l;)Lf7/n;` @kind interface;
  #L4e5e4e.  v6:= temp @kind object;
  #L4e5e50.  call temp:= `isEmpty`(v6) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L4e5e56.  v6:= temp;
  #L4e5e58.  if v6 != 0 then goto L4e5e78;
  #L4e5e5c.  if v0 == 0 then goto L4e5e78;
  #L4e5e60.  call temp:= `o`() @signature `Lf7/b;.o:()Lf7/b;` @kind static;
  #L4e5e66.  v6:= temp @kind object;
  #L4e5e68.  call temp:= `b0`(v5, v6) @signature `Lx6/l;.b0:(Lf7/b;)Lx6/l;` @kind virtual;
  #L4e5e6e.  v5:= temp @kind object;
  #L4e5e70.  call temp:= `U`(v7, v5, v0) @signature `Lf7/n;.U:(Lx6/l;Lf7/n;)Lf7/n;` @kind interface;
  #L4e5e76.  v7:= temp @kind object;
  #L4e5e78.  return v7 @kind object;
}
procedure `x6.b` `y`() @signature `Lx6/b;.y:()Lx6/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4e62ec.  v0:= `@@x6.b.p` @type ^`x6.b` @kind object;
  #L4e62f0.  return v0 @kind object;
}
procedure `java.util.List` `O`(`x6.b` v5 @kind this) @signature `Lx6/b;.O:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4e5f8c.  v0:= new `java.util.ArrayList`;
  #L4e5f90.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4e5f96.  v1:= v5.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e5f9a.  call temp:= `getValue`(v1) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4e5fa0.  v1:= temp @kind object;
  #L4e5fa2.  if v1 == 0 then goto L4e5ff8;
  #L4e5fa6.  v1:= v5.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e5faa.  call temp:= `getValue`(v1) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4e5fb0.  v1:= temp @kind object;
  #L4e5fb2.  v1:= (`f7.n`) v1 @kind object;
  #L4e5fb6.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4e5fbc.  v1:= temp @kind object;
  #L4e5fbe.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e5fc4.  v2:= temp;
  #L4e5fc6.  if v2 == 0 then goto L4e6066;
  #L4e5fca.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e5fd0.  v2:= temp @kind object;
  #L4e5fd2.  v2:= (`f7.m`) v2 @kind object;
  #L4e5fd6.  v3:= new `f7.m`;
  #L4e5fda.  call temp:= `c`(v2) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L4e5fe0.  v4:= temp @kind object;
  #L4e5fe2.  call temp:= `d`(v2) @signature `Lf7/m;.d:()Lf7/n;` @kind virtual;
  #L4e5fe8.  v2:= temp @kind object;
  #L4e5fea.  call `<init>`(v3, v4, v2) @signature `Lf7/m;.<init>:(Lf7/b;Lf7/n;)V` @kind direct;
  #L4e5ff0.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4e5ff6.  goto L4e5fbe;
  #L4e5ff8.  v1:= v5.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e5ffc.  call temp:= `N`(v1) @signature `La7/d;.N:()Lu6/c;` @kind virtual;
  #L4e6002.  v1:= temp @kind object;
  #L4e6004.  call temp:= `iterator`(v1) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4e600a.  v1:= temp @kind object;
  #L4e600c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e6012.  v2:= temp;
  #L4e6014.  if v2 == 0 then goto L4e6066;
  #L4e6018.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e601e.  v2:= temp @kind object;
  #L4e6020.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L4e6024.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4e602a.  v3:= temp @kind object;
  #L4e602c.  v3:= (`a7.d`) v3 @kind object;
  #L4e6030.  call temp:= `getValue`(v3) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4e6036.  v4:= temp @kind object;
  #L4e6038.  if v4 == 0 then goto L4e600c;
  #L4e603c.  v4:= new `f7.m`;
  #L4e6040.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4e6046.  v2:= temp @kind object;
  #L4e6048.  v2:= (`f7.b`) v2 @kind object;
  #L4e604c.  call temp:= `getValue`(v3) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4e6052.  v3:= temp @kind object;
  #L4e6054.  v3:= (`f7.n`) v3 @kind object;
  #L4e6058.  call `<init>`(v4, v2, v3) @signature `Lf7/m;.<init>:(Lf7/b;Lf7/n;)V` @kind direct;
  #L4e605e.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4e6064.  goto L4e600c;
  #L4e6066.  return v0 @kind object;
}
procedure `f7.n` `Q`(`x6.b` v2 @kind this, `x6.l` v3 @kind object) @signature `Lx6/b;.Q:(Lx6/l;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e5e8c.  v0:= v2.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e5e90.  call temp:= `l`(v0, v3) @signature `La7/d;.l:(Lx6/l;)Lx6/l;` @kind virtual;
  #L4e5e96.  v0:= temp @kind object;
  #L4e5e98.  if v0 == 0 then goto L4e5ebe;
  #L4e5e9c.  v1:= v2.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e5ea0.  call temp:= `y`(v1, v0) @signature `La7/d;.y:(Lx6/l;)Ljava/lang/Object;` @kind virtual;
  #L4e5ea6.  v1:= temp @kind object;
  #L4e5ea8.  v1:= (`f7.n`) v1 @kind object;
  #L4e5eac.  call temp:= `j0`(v0, v3) @signature `Lx6/l;.j0:(Lx6/l;Lx6/l;)Lx6/l;` @kind static;
  #L4e5eb2.  v3:= temp @kind object;
  #L4e5eb4.  call temp:= `H`(v1, v3) @signature `Lf7/n;.H:(Lx6/l;)Lf7/n;` @kind interface;
  #L4e5eba.  v3:= temp @kind object;
  #L4e5ebc.  return v3 @kind object;
  #L4e5ebe.  v3:= 0I;
  #L4e5ec0.  return v3 @kind object;
}
procedure `java.util.Map` `S`(`x6.b` v3 @kind this, `boolean` v4 ) @signature `Lx6/b;.S:(Z)Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4e60ec.  v0:= new `java.util.HashMap`;
  #L4e60f0.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4e60f6.  v1:= v3.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e60fa.  v2:= new `x6.b$b`;
  #L4e60fe.  call `<init>`(v2, v3, v0, v4) @signature `Lx6/b$b;.<init>:(Lx6/b;Ljava/util/Map;Z)V` @kind direct;
  #L4e6104.  call `u`(v1, v2) @signature `La7/d;.u:(La7/d$c;)V` @kind virtual;
  #L4e610a.  return v0 @kind object;
}
procedure `boolean` `T`(`x6.b` v0 @kind this, `x6.l` v1 @kind object) @signature `Lx6/b;.T:(Lx6/l;)Z` @AccessFlag PUBLIC {
    temp;

  #L4e5d30.  call temp:= `Q`(v0, v1) @signature `Lx6/b;.Q:(Lx6/l;)Lf7/n;` @kind virtual;
  #L4e5d36.  v1:= temp @kind object;
  #L4e5d38.  if v1 == 0 then goto L4e5d40;
  #L4e5d3c.  v1:= 1I;
  #L4e5d3e.  goto L4e5d42;
  #L4e5d40.  v1:= 0I;
  #L4e5d42.  return v1;
}
procedure `x6.b` `Y`(`x6.b` v2 @kind this, `x6.l` v3 @kind object) @signature `Lx6/b;.Y:(Lx6/l;)Lx6/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e6404.  call temp:= `isEmpty`(v3) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L4e640a.  v0:= temp;
  #L4e640c.  if v0 == 0 then goto L4e6416;
  #L4e6410.  v3:= `@@x6.b.p` @type ^`x6.b` @kind object;
  #L4e6414.  return v3 @kind object;
  #L4e6416.  v0:= v2.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e641a.  call temp:= `f`() @signature `La7/d;.f:()La7/d;` @kind static;
  #L4e6420.  v1:= temp @kind object;
  #L4e6422.  call temp:= `a0`(v0, v3, v1) @signature `La7/d;.a0:(Lx6/l;La7/d;)La7/d;` @kind virtual;
  #L4e6428.  v3:= temp @kind object;
  #L4e642a.  v0:= new `x6.b`;
  #L4e642e.  call `<init>`(v0, v3) @signature `Lx6/b;.<init>:(La7/d;)V` @kind direct;
  #L4e6434.  return v0 @kind object;
}
procedure `f7.n` `a0`(`x6.b` v1 @kind this) @signature `Lx6/b;.a0:()Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e5ed4.  v0:= v1.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e5ed8.  call temp:= `getValue`(v0) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L4e5ede.  v0:= temp @kind object;
  #L4e5ee0.  v0:= (`f7.n`) v0 @kind object;
  #L4e5ee4.  return v0 @kind object;
}
procedure `x6.b` `b`(`x6.b` v3 @kind this, `f7.b` v4 @kind object, `f7.n` v5 @kind object) @signature `Lx6/b;.b:(Lf7/b;Lf7/n;)Lx6/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4e6164.  v0:= new `x6.l`;
  #L4e6168.  v1:= 1I;
  #L4e616a.  v1:= new `f7.b`[v1];
  #L4e616e.  v2:= 0I;
  #L4e6170.  v1[v2]:= v4 @kind object;
  #L4e6174.  call `<init>`(v0, v1) @signature `Lx6/l;.<init>:([Lf7/b;)V` @kind direct;
  #L4e617a.  call temp:= `f`(v3, v0, v5) @signature `Lx6/b;.f:(Lx6/l;Lf7/n;)Lx6/b;` @kind virtual;
  #L4e6180.  v4:= temp @kind object;
  #L4e6182.  return v4 @kind object;
}
procedure `boolean` `equals`(`x6.b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lx6/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4e5ce0.  v0:= 1I;
  #L4e5ce2.  if v4 != v3 then goto L4e5ce8;
  #L4e5ce6.  return v0;
  #L4e5ce8.  if v4 == 0 then goto L4e5d1c;
  #L4e5cec.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4e5cf2.  v1:= temp @kind object;
  #L4e5cf4.  v2:= constclass @type ^`x6.b` @kind object;
  #L4e5cf8.  if v1 == v2 then goto L4e5cfe;
  #L4e5cfc.  goto L4e5d1c;
  #L4e5cfe.  v4:= (`x6.b`) v4 @kind object;
  #L4e5d02.  call temp:= `S`(v4, v0) @signature `Lx6/b;.S:(Z)Ljava/util/Map;` @kind virtual;
  #L4e5d08.  v4:= temp @kind object;
  #L4e5d0a.  call temp:= `S`(v3, v0) @signature `Lx6/b;.S:(Z)Ljava/util/Map;` @kind virtual;
  #L4e5d10.  v0:= temp @kind object;
  #L4e5d12.  call temp:= `equals`(v4, v0) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L4e5d18.  v4:= temp;
  #L4e5d1a.  return v4;
  #L4e5d1c.  v4:= 0I;
  #L4e5d1e.  return v4;
}
procedure `x6.b` `f`(`x6.b` v3 @kind this, `x6.l` v4 @kind object, `f7.n` v5 @kind object) @signature `Lx6/b;.f:(Lx6/l;Lf7/n;)Lx6/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4e6194.  call temp:= `isEmpty`(v4) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L4e619a.  v0:= temp;
  #L4e619c.  if v0 == 0 then goto L4e61b6;
  #L4e61a0.  v4:= new `x6.b`;
  #L4e61a4.  v0:= new `a7.d`;
  #L4e61a8.  call `<init>`(v0, v5) @signature `La7/d;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4e61ae.  call `<init>`(v4, v0) @signature `Lx6/b;.<init>:(La7/d;)V` @kind direct;
  #L4e61b4.  return v4 @kind object;
  #L4e61b6.  v0:= v3.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e61ba.  call temp:= `l`(v0, v4) @signature `La7/d;.l:(Lx6/l;)Lx6/l;` @kind virtual;
  #L4e61c0.  v0:= temp @kind object;
  #L4e61c2.  if v0 == 0 then goto L4e6234;
  #L4e61c6.  call temp:= `j0`(v0, v4) @signature `Lx6/l;.j0:(Lx6/l;Lx6/l;)Lx6/l;` @kind static;
  #L4e61cc.  v4:= temp @kind object;
  #L4e61ce.  v1:= v3.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e61d2.  call temp:= `y`(v1, v0) @signature `La7/d;.y:(Lx6/l;)Ljava/lang/Object;` @kind virtual;
  #L4e61d8.  v1:= temp @kind object;
  #L4e61da.  v1:= (`f7.n`) v1 @kind object;
  #L4e61de.  call temp:= `f0`(v4) @signature `Lx6/l;.f0:()Lf7/b;` @kind virtual;
  #L4e61e4.  v2:= temp @kind object;
  #L4e61e6.  if v2 == 0 then goto L4e6214;
  #L4e61ea.  call temp:= `t`(v2) @signature `Lf7/b;.t:()Z` @kind virtual;
  #L4e61f0.  v2:= temp;
  #L4e61f2.  if v2 == 0 then goto L4e6214;
  #L4e61f6.  call temp:= `i0`(v4) @signature `Lx6/l;.i0:()Lx6/l;` @kind virtual;
  #L4e61fc.  v2:= temp @kind object;
  #L4e61fe.  call temp:= `H`(v1, v2) @signature `Lf7/n;.H:(Lx6/l;)Lf7/n;` @kind interface;
  #L4e6204.  v2:= temp @kind object;
  #L4e6206.  call temp:= `isEmpty`(v2) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L4e620c.  v2:= temp;
  #L4e620e.  if v2 == 0 then goto L4e6214;
  #L4e6212.  return v3 @kind object;
  #L4e6214.  call temp:= `U`(v1, v4, v5) @signature `Lf7/n;.U:(Lx6/l;Lf7/n;)Lf7/n;` @kind interface;
  #L4e621a.  v4:= temp @kind object;
  #L4e621c.  v5:= new `x6.b`;
  #L4e6220.  v1:= v3.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e6224.  call temp:= `Y`(v1, v0, v4) @signature `La7/d;.Y:(Lx6/l;Ljava/lang/Object;)La7/d;` @kind virtual;
  #L4e622a.  v4:= temp @kind object;
  #L4e622c.  call `<init>`(v5, v4) @signature `Lx6/b;.<init>:(La7/d;)V` @kind direct;
  #L4e6232.  return v5 @kind object;
  #L4e6234.  v0:= new `a7.d`;
  #L4e6238.  call `<init>`(v0, v5) @signature `La7/d;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4e623e.  v5:= v3.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e6242.  call temp:= `a0`(v5, v4, v0) @signature `La7/d;.a0:(Lx6/l;La7/d;)La7/d;` @kind virtual;
  #L4e6248.  v4:= temp @kind object;
  #L4e624a.  v5:= new `x6.b`;
  #L4e624e.  call `<init>`(v5, v4) @signature `Lx6/b;.<init>:(La7/d;)V` @kind direct;
  #L4e6254.  return v5 @kind object;
}
procedure `x6.b` `h`(`x6.b` v1 @kind this, `x6.l` v2 @kind object, `x6.b` v3 @kind object) @signature `Lx6/b;.h:(Lx6/l;Lx6/b;)Lx6/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e6268.  v3:= v3.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e626c.  v0:= new `x6.b$a`;
  #L4e6270.  call `<init>`(v0, v1, v2) @signature `Lx6/b$a;.<init>:(Lx6/b;Lx6/l;)V` @kind direct;
  #L4e6276.  call temp:= `n`(v3, v1, v0) @signature `La7/d;.n:(Ljava/lang/Object;La7/d$c;)Ljava/lang/Object;` @kind virtual;
  #L4e627c.  v2:= temp @kind object;
  #L4e627e.  v2:= (`x6.b`) v2 @kind object;
  #L4e6282.  return v2 @kind object;
}
procedure `int` `hashCode`(`x6.b` v1 @kind this) @signature `Lx6/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e5ef8.  v0:= 1I;
  #L4e5efa.  call temp:= `S`(v1, v0) @signature `Lx6/b;.S:(Z)Ljava/util/Map;` @kind virtual;
  #L4e5f00.  v0:= temp @kind object;
  #L4e5f02.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L4e5f08.  v0:= temp;
  #L4e5f0a.  return v0;
}
procedure `boolean` `isEmpty`(`x6.b` v1 @kind this) @signature `Lx6/b;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e5d54.  v0:= v1.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e5d58.  call temp:= `isEmpty`(v0) @signature `La7/d;.isEmpty:()Z` @kind virtual;
  #L4e5d5e.  v0:= temp;
  #L4e5d60.  return v0;
}
procedure `java.util.Iterator` `iterator`(`x6.b` v1 @kind this) @signature `Lx6/b;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e5f6c.  v0:= v1.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e5f70.  call temp:= `iterator`(v0) @signature `La7/d;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4e5f76.  v0:= temp @kind object;
  #L4e5f78.  return v0 @kind object;
}
procedure `f7.n` `l`(`x6.b` v2 @kind this, `f7.n` v3 @kind object) @signature `Lx6/b;.l:(Lf7/n;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e5d74.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4e5d7a.  v0:= temp @kind object;
  #L4e5d7c.  v1:= v2.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e5d80.  call temp:= `n`(v2, v0, v1, v3) @signature `Lx6/b;.n:(Lx6/l;La7/d;Lf7/n;)Lf7/n;` @kind direct;
  #L4e5d86.  v3:= temp @kind object;
  #L4e5d88.  return v3 @kind object;
}
procedure `x6.b` `p`(`x6.b` v2 @kind this, `x6.l` v3 @kind object) @signature `Lx6/b;.p:(Lx6/l;)Lx6/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e6294.  call temp:= `isEmpty`(v3) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L4e629a.  v0:= temp;
  #L4e629c.  if v0 == 0 then goto L4e62a2;
  #L4e62a0.  return v2 @kind object;
  #L4e62a2.  call temp:= `Q`(v2, v3) @signature `Lx6/b;.Q:(Lx6/l;)Lf7/n;` @kind virtual;
  #L4e62a8.  v0:= temp @kind object;
  #L4e62aa.  if v0 == 0 then goto L4e62c4;
  #L4e62ae.  v3:= new `x6.b`;
  #L4e62b2.  v1:= new `a7.d`;
  #L4e62b6.  call `<init>`(v1, v0) @signature `La7/d;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L4e62bc.  call `<init>`(v3, v1) @signature `Lx6/b;.<init>:(La7/d;)V` @kind direct;
  #L4e62c2.  return v3 @kind object;
  #L4e62c4.  v0:= new `x6.b`;
  #L4e62c8.  v1:= v2.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e62cc.  call temp:= `b0`(v1, v3) @signature `La7/d;.b0:(Lx6/l;)La7/d;` @kind virtual;
  #L4e62d2.  v3:= temp @kind object;
  #L4e62d4.  call `<init>`(v0, v3) @signature `Lx6/b;.<init>:(La7/d;)V` @kind direct;
  #L4e62da.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`x6.b` v2 @kind this) @signature `Lx6/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e5f1c.  v0:= new `java.lang.StringBuilder`;
  #L4e5f20.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4e5f26.  v1:= "CompoundWrite{" @kind object;
  #L4e5f2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e5f30.  v1:= 1I;
  #L4e5f32.  call temp:= `S`(v2, v1) @signature `Lx6/b;.S:(Z)Ljava/util/Map;` @kind virtual;
  #L4e5f38.  v1:= temp @kind object;
  #L4e5f3a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4e5f40.  v1:= temp @kind object;
  #L4e5f42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e5f48.  v1:= "}" @kind object;
  #L4e5f4c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e5f52.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4e5f58.  v0:= temp @kind object;
  #L4e5f5a.  return v0 @kind object;
}
procedure `java.util.Map` `u`(`x6.b` v5 @kind this) @signature `Lx6/b;.u:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4e6078.  v0:= new `java.util.HashMap`;
  #L4e607c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4e6082.  v1:= v5.`x6.b.o` @type ^`a7.d` @kind object;
  #L4e6086.  call temp:= `N`(v1) @signature `La7/d;.N:()Lu6/c;` @kind virtual;
  #L4e608c.  v1:= temp @kind object;
  #L4e608e.  call temp:= `iterator`(v1) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4e6094.  v1:= temp @kind object;
  #L4e6096.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e609c.  v2:= temp;
  #L4e609e.  if v2 == 0 then goto L4e60d8;
  #L4e60a2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e60a8.  v2:= temp @kind object;
  #L4e60aa.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L4e60ae.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4e60b4.  v3:= temp @kind object;
  #L4e60b6.  v3:= (`f7.b`) v3 @kind object;
  #L4e60ba.  v4:= new `x6.b`;
  #L4e60be.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4e60c4.  v2:= temp @kind object;
  #L4e60c6.  v2:= (`a7.d`) v2 @kind object;
  #L4e60ca.  call `<init>`(v4, v2) @signature `Lx6/b;.<init>:(La7/d;)V` @kind direct;
  #L4e60d0.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4e60d6.  goto L4e6096;
  #L4e60d8.  return v0 @kind object;
}
