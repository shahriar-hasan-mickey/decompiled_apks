record `x6.n$c` @kind class @AccessFlag  extends `v6.p` @kind interface {
  `x6.l` `x6.n$c.a` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Map` `x6.n$c.b` @AccessFlag FINAL_SYNTHETIC;
  `com.google.firebase.database.b$e` `x6.n$c.c` @AccessFlag FINAL_SYNTHETIC;
  `x6.n` `x6.n$c.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.n$c` v0 @kind this, `x6.n` v1 @kind object, `x6.l` v2 @kind object, `java.util.Map` v3 @kind object, `com.google.firebase.database.b$e` v4 @kind object) @signature `Lx6/n$c;.<init>:(Lx6/n;Lx6/l;Ljava/util/Map;Lcom/google/firebase/database/b$e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e7944.  v0.`x6.n$c.d` @type ^`x6.n` := v1 @kind object;
  #L4e7948.  v0.`x6.n$c.a` @type ^`x6.l` := v2 @kind object;
  #L4e794c.  v0.`x6.n$c.b` @type ^`java.util.Map` := v3 @kind object;
  #L4e7950.  v0.`x6.n$c.c` @type ^`com.google.firebase.database.b$e` := v4 @kind object;
  #L4e7954.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e795a.  return @kind void;
}
procedure `void` `a`(`x6.n$c` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lx6/n$c;.a:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e796c.  call temp:= `y`(v5, v6) @signature `Lx6/n;.y:(Ljava/lang/String;Ljava/lang/String;)Ls6/b;` @kind static;
  #L4e7972.  v5:= temp @kind object;
  #L4e7974.  v6:= v4.`x6.n$c.d` @type ^`x6.n` @kind object;
  #L4e7978.  v0:= v4.`x6.n$c.a` @type ^`x6.l` @kind object;
  #L4e797c.  v1:= "onDisconnect().updateChildren" @kind object;
  #L4e7980.  call `z`(v6, v1, v0, v5) @signature `Lx6/n;.z:(Lx6/n;Ljava/lang/String;Lx6/l;Ls6/b;)V` @kind static;
  #L4e7986.  if v5 != 0 then goto L4e79ee;
  #L4e798a.  v6:= v4.`x6.n$c.b` @type ^`java.util.Map` @kind object;
  #L4e798e.  call temp:= `entrySet`(v6) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L4e7994.  v6:= temp @kind object;
  #L4e7996.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4e799c.  v6:= temp @kind object;
  #L4e799e.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e79a4.  v0:= temp;
  #L4e79a6.  if v0 == 0 then goto L4e79ee;
  #L4e79aa.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e79b0.  v0:= temp @kind object;
  #L4e79b2.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L4e79b6.  v1:= v4.`x6.n$c.d` @type ^`x6.n` @kind object;
  #L4e79ba.  call temp:= `k`(v1) @signature `Lx6/n;.k:(Lx6/n;)Lx6/v;` @kind static;
  #L4e79c0.  v1:= temp @kind object;
  #L4e79c2.  v2:= v4.`x6.n$c.a` @type ^`x6.l` @kind object;
  #L4e79c6.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4e79cc.  v3:= temp @kind object;
  #L4e79ce.  v3:= (`x6.l`) v3 @kind object;
  #L4e79d2.  call temp:= `c0`(v2, v3) @signature `Lx6/l;.c0:(Lx6/l;)Lx6/l;` @kind virtual;
  #L4e79d8.  v2:= temp @kind object;
  #L4e79da.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4e79e0.  v0:= temp @kind object;
  #L4e79e2.  v0:= (`f7.n`) v0 @kind object;
  #L4e79e6.  call `d`(v1, v2, v0) @signature `Lx6/v;.d:(Lx6/l;Lf7/n;)V` @kind virtual;
  #L4e79ec.  goto L4e799e;
  #L4e79ee.  v6:= v4.`x6.n$c.d` @type ^`x6.n` @kind object;
  #L4e79f2.  v0:= v4.`x6.n$c.c` @type ^`com.google.firebase.database.b$e` @kind object;
  #L4e79f6.  v1:= v4.`x6.n$c.a` @type ^`x6.l` @kind object;
  #L4e79fa.  call `G`(v6, v0, v5, v1) @signature `Lx6/n;.G:(Lcom/google/firebase/database/b$e;Ls6/b;Lx6/l;)V` @kind virtual;
  #L4e7a00.  return @kind void;
}
