record `x6.t` @kind class @AccessFlag PUBLIC {
}
procedure `f7.n` `a`(`f7.n` v0 @kind object, `x6.f0` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lx6/t;.a:(Lf7/n;Lx6/f0;Ljava/util/Map;)Lf7/n;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4eade4.  call temp:= `i`(v0, v1, v2) @signature `Lx6/t;.i:(Lf7/n;Lx6/f0;Ljava/util/Map;)Lf7/n;` @kind static;
  #L4eadea.  v0:= temp @kind object;
  #L4eadec.  return v0 @kind object;
}
procedure `boolean` `b`(`java.lang.Number` v1 @kind object) @signature `Lx6/t;.b:(Ljava/lang/Number;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4eadbc.  v0:= instanceof @variable v1 @type ^`java.lang.Double` @kind boolean;
  #L4eadc0.  if v0 != 0 then goto L4eadd0;
  #L4eadc4.  v1:= instanceof @variable v1 @type ^`java.lang.Float` @kind boolean;
  #L4eadc8.  if v1 != 0 then goto L4eadd0;
  #L4eadcc.  v1:= 1I;
  #L4eadce.  goto L4eadd2;
  #L4eadd0.  v1:= 0I;
  #L4eadd2.  return v1;
}
procedure `java.util.Map` `c`(`a7.a` v3 @kind object) @signature `Lx6/t;.c:(La7/a;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4eb0c0.  v0:= new `java.util.HashMap`;
  #L4eb0c4.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4eb0ca.  call temp:= `a`(v3) @signature `La7/a;.a:()J` @kind interface;
  #L4eb0d0.  v1:= temp @kind wide;
  #L4eb0d2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4eb0d8.  v3:= temp @kind object;
  #L4eb0da.  v1:= "timestamp" @kind object;
  #L4eb0de.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4eb0e4.  return v0 @kind object;
}
procedure `java.lang.Object` `d`(`java.util.Map` v6 @kind object, `x6.f0` v7 @kind object, `java.util.Map` v8 @kind object) @signature `Lx6/t;.d:(Ljava/util/Map;Lx6/f0;Ljava/util/Map;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4eaf44.  v8:= "increment" @kind object;
  #L4eaf48.  call temp:= `containsKey`(v6, v8) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4eaf4e.  v0:= temp;
  #L4eaf50.  v1:= 0I;
  #L4eaf52.  if v0 != 0 then goto L4eaf58;
  #L4eaf56.  return v1 @kind object;
  #L4eaf58.  call temp:= `get`(v6, v8) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4eaf5e.  v6:= temp @kind object;
  #L4eaf60.  v8:= instanceof @variable v6 @type ^`java.lang.Number` @kind boolean;
  #L4eaf64.  if v8 != 0 then goto L4eaf6a;
  #L4eaf68.  return v1 @kind object;
  #L4eaf6a.  v6:= (`java.lang.Number`) v6 @kind object;
  #L4eaf6e.  call temp:= `b`(v7) @signature `Lx6/f0;.b:()Lf7/n;` @kind virtual;
  #L4eaf74.  v7:= temp @kind object;
  #L4eaf76.  call temp:= `A`(v7) @signature `Lf7/n;.A:()Z` @kind interface;
  #L4eaf7c.  v8:= temp;
  #L4eaf7e.  if v8 == 0 then goto L4eb002;
  #L4eaf82.  call temp:= `getValue`(v7) @signature `Lf7/n;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4eaf88.  v8:= temp @kind object;
  #L4eaf8a.  v8:= instanceof @variable v8 @type ^`java.lang.Number` @kind boolean;
  #L4eaf8e.  if v8 != 0 then goto L4eaf94;
  #L4eaf92.  goto L4eb002;
  #L4eaf94.  call temp:= `getValue`(v7) @signature `Lf7/n;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4eaf9a.  v7:= temp @kind object;
  #L4eaf9c.  v7:= (`java.lang.Number`) v7 @kind object;
  #L4eafa0.  call temp:= `b`(v6) @signature `Lx6/t;.b:(Ljava/lang/Number;)Z` @kind static;
  #L4eafa6.  v8:= temp;
  #L4eafa8.  if v8 == 0 then goto L4eafe8;
  #L4eafac.  call temp:= `b`(v7) @signature `Lx6/t;.b:(Ljava/lang/Number;)Z` @kind static;
  #L4eafb2.  v8:= temp;
  #L4eafb4.  if v8 == 0 then goto L4eafe8;
  #L4eafb8.  call temp:= `longValue`(v6) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L4eafbe.  v0:= temp @kind wide;
  #L4eafc0.  call temp:= `longValue`(v7) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L4eafc6.  v2:= temp @kind wide;
  #L4eafc8.  v4:= v0 + v2 @kind long;
  #L4eafcc.  v0:= v0 ^~ v4 @kind long;
  #L4eafce.  v2:= v2 ^~ v4 @kind long;
  #L4eafd0.  v0:= v0 ^& v2 @kind long;
  #L4eafd2.  v2:= 0L;
  #L4eafd6.  v8:= lcmp(v0, v2);
  #L4eafda.  if v8 < 0 then goto L4eafe8;
  #L4eafde.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4eafe4.  v6:= temp @kind object;
  #L4eafe6.  return v6 @kind object;
  #L4eafe8.  call temp:= `doubleValue`(v6) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L4eafee.  v0:= temp @kind wide;
  #L4eaff0.  call temp:= `doubleValue`(v7) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L4eaff6.  v6:= temp @kind wide;
  #L4eaff8.  v0:= v0 + v6 @kind double;
  #L4eaffa.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L4eb000.  v6:= temp @kind object;
  #L4eb002.  return v6 @kind object;
}
procedure `java.lang.Object` `e`(`java.lang.Object` v3 @kind object, `x6.f0` v4 @kind object, `java.util.Map` v5 @kind object) @signature `Lx6/t;.e:(Ljava/lang/Object;Lx6/f0;Ljava/util/Map;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4eb014.  v0:= instanceof @variable v3 @type ^`java.util.Map` @kind boolean;
  #L4eb018.  if v0 != 0 then goto L4eb01e;
  #L4eb01c.  return v3 @kind object;
  #L4eb01e.  v0:= v3 @kind object;
  #L4eb020.  v0:= (`java.util.Map`) v0 @kind object;
  #L4eb024.  v1:= ".sv" @kind object;
  #L4eb028.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4eb02e.  v2:= temp;
  #L4eb030.  if v2 != 0 then goto L4eb036;
  #L4eb034.  return v3 @kind object;
  #L4eb036.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4eb03c.  v0:= temp @kind object;
  #L4eb03e.  v1:= 0I;
  #L4eb040.  v2:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L4eb044.  if v2 == 0 then goto L4eb056;
  #L4eb048.  v0:= (`java.lang.String`) v0 @kind object;
  #L4eb04c.  call temp:= `j`(v0, v5) @signature `Lx6/t;.j:(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;` @kind static;
  #L4eb052.  v1:= temp @kind object;
  #L4eb054.  goto L4eb06a;
  #L4eb056.  v2:= instanceof @variable v0 @type ^`java.util.Map` @kind boolean;
  #L4eb05a.  if v2 == 0 then goto L4eb06a;
  #L4eb05e.  v0:= (`java.util.Map`) v0 @kind object;
  #L4eb062.  call temp:= `d`(v0, v4, v5) @signature `Lx6/t;.d:(Ljava/util/Map;Lx6/f0;Ljava/util/Map;)Ljava/lang/Object;` @kind static;
  #L4eb068.  v1:= temp @kind object;
  #L4eb06a.  if v1 != 0 then goto L4eb070;
  #L4eb06e.  return v3 @kind object;
  #L4eb070.  return v1 @kind object;
}
procedure `x6.b` `f`(`x6.b` v4 @kind object, `x6.y` v5 @kind object, `x6.l` v6 @kind object, `java.util.Map` v7 @kind object) @signature `Lx6/t;.f:(Lx6/b;Lx6/y;Lx6/l;Ljava/util/Map;)Lx6/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4eb0f8.  call temp:= `y`() @signature `Lx6/b;.y:()Lx6/b;` @kind static;
  #L4eb0fe.  v0:= temp @kind object;
  #L4eb100.  call temp:= `iterator`(v4) @signature `Lx6/b;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4eb106.  v4:= temp @kind object;
  #L4eb108.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eb10e.  v1:= temp;
  #L4eb110.  if v1 == 0 then goto L4eb168;
  #L4eb114.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eb11a.  v1:= temp @kind object;
  #L4eb11c.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L4eb120.  v2:= new `x6.f0$a`;
  #L4eb124.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4eb12a.  v3:= temp @kind object;
  #L4eb12c.  v3:= (`x6.l`) v3 @kind object;
  #L4eb130.  call temp:= `c0`(v6, v3) @signature `Lx6/l;.c0:(Lx6/l;)Lx6/l;` @kind virtual;
  #L4eb136.  v3:= temp @kind object;
  #L4eb138.  call `<init>`(v2, v5, v3) @signature `Lx6/f0$a;.<init>:(Lx6/y;Lx6/l;)V` @kind direct;
  #L4eb13e.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4eb144.  v3:= temp @kind object;
  #L4eb146.  v3:= (`x6.l`) v3 @kind object;
  #L4eb14a.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4eb150.  v1:= temp @kind object;
  #L4eb152.  v1:= (`f7.n`) v1 @kind object;
  #L4eb156.  call temp:= `i`(v1, v2, v7) @signature `Lx6/t;.i:(Lf7/n;Lx6/f0;Ljava/util/Map;)Lf7/n;` @kind static;
  #L4eb15c.  v1:= temp @kind object;
  #L4eb15e.  call temp:= `f`(v0, v3, v1) @signature `Lx6/b;.f:(Lx6/l;Lf7/n;)Lx6/b;` @kind virtual;
  #L4eb164.  v0:= temp @kind object;
  #L4eb166.  goto L4eb108;
  #L4eb168.  return v0 @kind object;
}
procedure `f7.n` `g`(`f7.n` v1 @kind object, `f7.n` v2 @kind object, `java.util.Map` v3 @kind object) @signature `Lx6/t;.g:(Lf7/n;Lf7/n;Ljava/util/Map;)Lf7/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4eae00.  v0:= new `x6.f0$b`;
  #L4eae04.  call `<init>`(v0, v2) @signature `Lx6/f0$b;.<init>:(Lf7/n;)V` @kind direct;
  #L4eae0a.  call temp:= `i`(v1, v0, v3) @signature `Lx6/t;.i:(Lf7/n;Lx6/f0;Ljava/util/Map;)Lf7/n;` @kind static;
  #L4eae10.  v1:= temp @kind object;
  #L4eae12.  return v1 @kind object;
}
procedure `f7.n` `h`(`f7.n` v1 @kind object, `x6.y` v2 @kind object, `x6.l` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lx6/t;.h:(Lf7/n;Lx6/y;Lx6/l;Ljava/util/Map;)Lf7/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4eae24.  v0:= new `x6.f0$a`;
  #L4eae28.  call `<init>`(v0, v2, v3) @signature `Lx6/f0$a;.<init>:(Lx6/y;Lx6/l;)V` @kind direct;
  #L4eae2e.  call temp:= `i`(v1, v0, v4) @signature `Lx6/t;.i:(Lf7/n;Lx6/f0;Ljava/util/Map;)Lf7/n;` @kind static;
  #L4eae34.  v1:= temp @kind object;
  #L4eae36.  return v1 @kind object;
}
procedure `f7.n` `i`(`f7.n` v3 @kind object, `x6.f0` v4 @kind object, `java.util.Map` v5 @kind object) @signature `Lx6/t;.i:(Lf7/n;Lx6/f0;Ljava/util/Map;)Lf7/n;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4eae48.  call temp:= `q`(v3) @signature `Lf7/n;.q:()Lf7/n;` @kind interface;
  #L4eae4e.  v0:= temp @kind object;
  #L4eae50.  call temp:= `getValue`(v0) @signature `Lf7/n;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4eae56.  v0:= temp @kind object;
  #L4eae58.  v1:= ".priority" @kind object;
  #L4eae5c.  call temp:= `h`(v1) @signature `Lf7/b;.h:(Ljava/lang/String;)Lf7/b;` @kind static;
  #L4eae62.  v1:= temp @kind object;
  #L4eae64.  call temp:= `a`(v4, v1) @signature `Lx6/f0;.a:(Lf7/b;)Lx6/f0;` @kind virtual;
  #L4eae6a.  v1:= temp @kind object;
  #L4eae6c.  call temp:= `e`(v0, v1, v5) @signature `Lx6/t;.e:(Ljava/lang/Object;Lx6/f0;Ljava/util/Map;)Ljava/lang/Object;` @kind static;
  #L4eae72.  v1:= temp @kind object;
  #L4eae74.  call temp:= `A`(v3) @signature `Lf7/n;.A:()Z` @kind interface;
  #L4eae7a.  v2:= temp;
  #L4eae7c.  if v2 == 0 then goto L4eaec6;
  #L4eae80.  call temp:= `getValue`(v3) @signature `Lf7/n;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4eae86.  v2:= temp @kind object;
  #L4eae88.  call temp:= `e`(v2, v4, v5) @signature `Lx6/t;.e:(Ljava/lang/Object;Lx6/f0;Ljava/util/Map;)Ljava/lang/Object;` @kind static;
  #L4eae8e.  v4:= temp @kind object;
  #L4eae90.  call temp:= `getValue`(v3) @signature `Lf7/n;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4eae96.  v5:= temp @kind object;
  #L4eae98.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4eae9e.  v5:= temp;
  #L4eaea0.  if v5 == 0 then goto L4eaeb4;
  #L4eaea4.  call temp:= `d`(v1, v0) @signature `La7/m;.d:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4eaeaa.  v5:= temp;
  #L4eaeac.  if v5 != 0 then goto L4eaeb2;
  #L4eaeb0.  goto L4eaeb4;
  #L4eaeb2.  return v3 @kind object;
  #L4eaeb4.  call temp:= `c`(v1) @signature `Lf7/r;.c:(Ljava/lang/Object;)Lf7/n;` @kind static;
  #L4eaeba.  v3:= temp @kind object;
  #L4eaebc.  call temp:= `b`(v4, v3) @signature `Lf7/o;.b:(Ljava/lang/Object;Lf7/n;)Lf7/n;` @kind static;
  #L4eaec2.  v3:= temp @kind object;
  #L4eaec4.  return v3 @kind object;
  #L4eaec6.  call temp:= `isEmpty`(v3) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L4eaecc.  v0:= temp;
  #L4eaece.  if v0 == 0 then goto L4eaed4;
  #L4eaed2.  return v3 @kind object;
  #L4eaed4.  v3:= (`f7.c`) v3 @kind object;
  #L4eaed8.  v0:= new `x6.u`;
  #L4eaedc.  call `<init>`(v0, v3) @signature `Lx6/u;.<init>:(Lf7/n;)V` @kind direct;
  #L4eaee2.  v2:= new `x6.t$a`;
  #L4eaee6.  call `<init>`(v2, v4, v5, v0) @signature `Lx6/t$a;.<init>:(Lx6/f0;Ljava/util/Map;Lx6/u;)V` @kind direct;
  #L4eaeec.  call `T`(v3, v2) @signature `Lf7/c;.T:(Lf7/c$c;)V` @kind virtual;
  #L4eaef2.  call temp:= `b`(v0) @signature `Lx6/u;.b:()Lf7/n;` @kind virtual;
  #L4eaef8.  v3:= temp @kind object;
  #L4eaefa.  call temp:= `q`(v3) @signature `Lf7/n;.q:()Lf7/n;` @kind interface;
  #L4eaf00.  v3:= temp @kind object;
  #L4eaf02.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4eaf08.  v3:= temp;
  #L4eaf0a.  if v3 != 0 then goto L4eaf28;
  #L4eaf0e.  call temp:= `b`(v0) @signature `Lx6/u;.b:()Lf7/n;` @kind virtual;
  #L4eaf14.  v3:= temp @kind object;
  #L4eaf16.  call temp:= `c`(v1) @signature `Lf7/r;.c:(Ljava/lang/Object;)Lf7/n;` @kind static;
  #L4eaf1c.  v4:= temp @kind object;
  #L4eaf1e.  call temp:= `E`(v3, v4) @signature `Lf7/n;.E:(Lf7/n;)Lf7/n;` @kind interface;
  #L4eaf24.  v3:= temp @kind object;
  #L4eaf26.  return v3 @kind object;
  #L4eaf28.  call temp:= `b`(v0) @signature `Lx6/u;.b:()Lf7/n;` @kind virtual;
  #L4eaf2e.  v3:= temp @kind object;
  #L4eaf30.  return v3 @kind object;
}
procedure `java.lang.Object` `j`(`java.lang.String` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lx6/t;.j:(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;

  #L4eb084.  v0:= "timestamp" @kind object;
  #L4eb088.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4eb08e.  v0:= temp;
  #L4eb090.  if v0 == 0 then goto L4eb0aa;
  #L4eb094.  call temp:= `containsKey`(v2, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4eb09a.  v0:= temp;
  #L4eb09c.  if v0 == 0 then goto L4eb0aa;
  #L4eb0a0.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4eb0a6.  v1:= temp @kind object;
  #L4eb0a8.  return v1 @kind object;
  #L4eb0aa.  v1:= 0I;
  #L4eb0ac.  return v1 @kind object;
}
