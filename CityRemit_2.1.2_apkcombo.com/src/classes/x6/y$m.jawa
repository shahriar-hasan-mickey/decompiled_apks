record `x6.y$m` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `x6.l` `x6.y$m.a` @AccessFlag FINAL_SYNTHETIC;
  `x6.y` `x6.y$m.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.y$m` v0 @kind this, `x6.y` v1 @kind object, `x6.l` v2 @kind object) @signature `Lx6/y$m;.<init>:(Lx6/y;Lx6/l;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ecaa0.  v0.`x6.y$m.b` @type ^`x6.y` := v1 @kind object;
  #L4ecaa4.  v0.`x6.y$m.a` @type ^`x6.l` := v2 @kind object;
  #L4ecaa8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ecaae.  return @kind void;
}
procedure `java.util.List` `a`(`x6.y$m` v4 @kind this) @signature `Lx6/y$m;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4eca50.  v0:= v4.`x6.y$m.b` @type ^`x6.y` @kind object;
  #L4eca54.  call temp:= `c`(v0) @signature `Lx6/y;.c:(Lx6/y;)Lz6/e;` @kind static;
  #L4eca5a.  v0:= temp @kind object;
  #L4eca5c.  v1:= v4.`x6.y$m.a` @type ^`x6.l` @kind object;
  #L4eca60.  call temp:= `a`(v1) @signature `Lc7/i;.a:(Lx6/l;)Lc7/i;` @kind static;
  #L4eca66.  v1:= temp @kind object;
  #L4eca68.  call `f`(v0, v1) @signature `Lz6/e;.f:(Lc7/i;)V` @kind interface;
  #L4eca6e.  v0:= v4.`x6.y$m.b` @type ^`x6.y` @kind object;
  #L4eca72.  v1:= new `y6.b`;
  #L4eca76.  v2:= `@@y6.e.e` @type ^`y6.e` @kind object;
  #L4eca7a.  v3:= v4.`x6.y$m.a` @type ^`x6.l` @kind object;
  #L4eca7e.  call `<init>`(v1, v2, v3) @signature `Ly6/b;.<init>:(Ly6/e;Lx6/l;)V` @kind direct;
  #L4eca84.  call temp:= `k`(v0, v1) @signature `Lx6/y;.k:(Lx6/y;Ly6/d;)Ljava/util/List;` @kind static;
  #L4eca8a.  v0:= temp @kind object;
  #L4eca8c.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`x6.y$m` v1 @kind this) @signature `Lx6/y$m;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4eca34.  call temp:= `a`(v1) @signature `Lx6/y$m;.a:()Ljava/util/List;` @kind virtual;
  #L4eca3a.  v0:= temp @kind object;
  #L4eca3c.  return v0 @kind object;
}
