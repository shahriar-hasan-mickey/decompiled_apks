record `x6.a0$a` @kind class @AccessFlag  extends `x6.a0` @kind interface {
}
procedure `void` `<init>`(`x6.a0$a` v0 @kind this) @signature `Lx6/a0$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4eddbc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4eddc2.  return @kind void;
}
procedure `void` `a`(`x6.a0$a` v0 @kind this, `java.lang.Thread` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lx6/a0$a;.a:(Ljava/lang/Thread;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L4eddec.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L4eddf2.  return @kind void;
}
procedure `void` `b`(`x6.a0$a` v0 @kind this, `java.lang.Thread` v1 @kind object, `boolean` v2 ) @signature `Lx6/a0$a;.b:(Ljava/lang/Thread;Z)V` @AccessFlag PUBLIC {
    temp;

  #L4eddd4.  call `setDaemon`(v1, v2) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L4eddda.  return @kind void;
}
procedure `void` `c`(`x6.a0$a` v0 @kind this, `java.lang.Thread` v1 @kind object, `java.lang.Thread$UncaughtExceptionHandler` v2 @kind object) @signature `Lx6/a0$a;.c:(Ljava/lang/Thread;Ljava/lang/Thread$UncaughtExceptionHandler;)V` @AccessFlag PUBLIC {
    temp;

  #L4ede04.  call `setUncaughtExceptionHandler`(v1, v2) @signature `Ljava/lang/Thread;.setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V` @kind virtual;
  #L4ede0a.  return @kind void;
}
