record `x6.y$h` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `boolean` `x6.y$h.a` @AccessFlag FINAL_SYNTHETIC;
  `x6.l` `x6.y$h.b` @AccessFlag FINAL_SYNTHETIC;
  `x6.b` `x6.y$h.c` @AccessFlag FINAL_SYNTHETIC;
  `long` `x6.y$h.d` @AccessFlag FINAL_SYNTHETIC;
  `x6.b` `x6.y$h.e` @AccessFlag FINAL_SYNTHETIC;
  `x6.y` `x6.y$h.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.y$h` v0 @kind this, `x6.y` v1 @kind object, `boolean` v2 , `x6.l` v3 @kind object, `x6.b` v4 @kind object, `long` v5 , `x6.b` v7 @kind object) @signature `Lx6/y$h;.<init>:(Lx6/y;ZLx6/l;Lx6/b;JLx6/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ec644.  v0.`x6.y$h.f` @type ^`x6.y` := v1 @kind object;
  #L4ec648.  v0.`x6.y$h.a` @type ^`boolean` := v2 @kind boolean;
  #L4ec64c.  v0.`x6.y$h.b` @type ^`x6.l` := v3 @kind object;
  #L4ec650.  v0.`x6.y$h.c` @type ^`x6.b` := v4 @kind object;
  #L4ec654.  v0.`x6.y$h.d` @type ^`long` := v5 @kind wide;
  #L4ec658.  v0.`x6.y$h.e` @type ^`x6.b` := v7 @kind object;
  #L4ec65c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ec662.  return @kind void;
}
procedure `java.util.List` `a`(`x6.y$h` v5 @kind this) @signature `Lx6/y$h;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ec5c4.  v0:= v5.`x6.y$h.a` @type ^`boolean` @kind boolean;
  #L4ec5c8.  if v0 == 0 then goto L4ec5ea;
  #L4ec5cc.  v0:= v5.`x6.y$h.f` @type ^`x6.y` @kind object;
  #L4ec5d0.  call temp:= `c`(v0) @signature `Lx6/y;.c:(Lx6/y;)Lz6/e;` @kind static;
  #L4ec5d6.  v0:= temp @kind object;
  #L4ec5d8.  v1:= v5.`x6.y$h.b` @type ^`x6.l` @kind object;
  #L4ec5dc.  v2:= v5.`x6.y$h.c` @type ^`x6.b` @kind object;
  #L4ec5e0.  v3:= v5.`x6.y$h.d` @type ^`long` @kind wide;
  #L4ec5e4.  call `a`(v0, v1, v2, v3) @signature `Lz6/e;.a:(Lx6/l;Lx6/b;J)V` @kind interface;
  #L4ec5ea.  v0:= v5.`x6.y$h.f` @type ^`x6.y` @kind object;
  #L4ec5ee.  call temp:= `j`(v0) @signature `Lx6/y;.j:(Lx6/y;)Lx6/g0;` @kind static;
  #L4ec5f4.  v0:= temp @kind object;
  #L4ec5f6.  v1:= v5.`x6.y$h.b` @type ^`x6.l` @kind object;
  #L4ec5fa.  v2:= v5.`x6.y$h.e` @type ^`x6.b` @kind object;
  #L4ec5fe.  v3:= v5.`x6.y$h.d` @type ^`long` @kind wide;
  #L4ec602.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4ec608.  v3:= temp @kind object;
  #L4ec60a.  call `a`(v0, v1, v2, v3) @signature `Lx6/g0;.a:(Lx6/l;Lx6/b;Ljava/lang/Long;)V` @kind virtual;
  #L4ec610.  v0:= v5.`x6.y$h.f` @type ^`x6.y` @kind object;
  #L4ec614.  v1:= new `y6.c`;
  #L4ec618.  v2:= `@@y6.e.d` @type ^`y6.e` @kind object;
  #L4ec61c.  v3:= v5.`x6.y$h.b` @type ^`x6.l` @kind object;
  #L4ec620.  v4:= v5.`x6.y$h.e` @type ^`x6.b` @kind object;
  #L4ec624.  call `<init>`(v1, v2, v3, v4) @signature `Ly6/c;.<init>:(Ly6/e;Lx6/l;Lx6/b;)V` @kind direct;
  #L4ec62a.  call temp:= `k`(v0, v1) @signature `Lx6/y;.k:(Lx6/y;Ly6/d;)Ljava/util/List;` @kind static;
  #L4ec630.  v0:= temp @kind object;
  #L4ec632.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`x6.y$h` v1 @kind this) @signature `Lx6/y$h;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4ec5a8.  call temp:= `a`(v1) @signature `Lx6/y$h;.a:()Ljava/util/List;` @kind virtual;
  #L4ec5ae.  v0:= temp @kind object;
  #L4ec5b0.  return v0 @kind object;
}
