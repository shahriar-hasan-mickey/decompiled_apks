record `x6.y$o` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `x6.z` `x6.y$o.a` @AccessFlag FINAL_SYNTHETIC;
  `x6.l` `x6.y$o.b` @AccessFlag FINAL_SYNTHETIC;
  `f7.n` `x6.y$o.c` @AccessFlag FINAL_SYNTHETIC;
  `x6.y` `x6.y$o.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.y$o` v0 @kind this, `x6.y` v1 @kind object, `x6.z` v2 @kind object, `x6.l` v3 @kind object, `f7.n` v4 @kind object) @signature `Lx6/y$o;.<init>:(Lx6/y;Lx6/z;Lx6/l;Lf7/n;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ecc28.  v0.`x6.y$o.d` @type ^`x6.y` := v1 @kind object;
  #L4ecc2c.  v0.`x6.y$o.a` @type ^`x6.z` := v2 @kind object;
  #L4ecc30.  v0.`x6.y$o.b` @type ^`x6.l` := v3 @kind object;
  #L4ecc34.  v0.`x6.y$o.c` @type ^`f7.n` := v4 @kind object;
  #L4ecc38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ecc3e.  return @kind void;
}
procedure `java.util.List` `a`(`x6.y$o` v5 @kind this) @signature `Lx6/y$o;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ecb88.  v0:= v5.`x6.y$o.d` @type ^`x6.y` @kind object;
  #L4ecb8c.  v1:= v5.`x6.y$o.a` @type ^`x6.z` @kind object;
  #L4ecb90.  call temp:= `l`(v0, v1) @signature `Lx6/y;.l:(Lx6/y;Lx6/z;)Lc7/i;` @kind static;
  #L4ecb96.  v0:= temp @kind object;
  #L4ecb98.  if v0 == 0 then goto L4ecc0e;
  #L4ecb9c.  call temp:= `e`(v0) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L4ecba2.  v1:= temp @kind object;
  #L4ecba4.  v2:= v5.`x6.y$o.b` @type ^`x6.l` @kind object;
  #L4ecba8.  call temp:= `j0`(v1, v2) @signature `Lx6/l;.j0:(Lx6/l;Lx6/l;)Lx6/l;` @kind static;
  #L4ecbae.  v1:= temp @kind object;
  #L4ecbb0.  call temp:= `isEmpty`(v1) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L4ecbb6.  v2:= temp;
  #L4ecbb8.  if v2 == 0 then goto L4ecbc0;
  #L4ecbbc.  v2:= v0 @kind object;
  #L4ecbbe.  goto L4ecbcc;
  #L4ecbc0.  v2:= v5.`x6.y$o.b` @type ^`x6.l` @kind object;
  #L4ecbc4.  call temp:= `a`(v2) @signature `Lc7/i;.a:(Lx6/l;)Lc7/i;` @kind static;
  #L4ecbca.  v2:= temp @kind object;
  #L4ecbcc.  v3:= v5.`x6.y$o.d` @type ^`x6.y` @kind object;
  #L4ecbd0.  call temp:= `c`(v3) @signature `Lx6/y;.c:(Lx6/y;)Lz6/e;` @kind static;
  #L4ecbd6.  v3:= temp @kind object;
  #L4ecbd8.  v4:= v5.`x6.y$o.c` @type ^`f7.n` @kind object;
  #L4ecbdc.  call `k`(v3, v2, v4) @signature `Lz6/e;.k:(Lc7/i;Lf7/n;)V` @kind interface;
  #L4ecbe2.  v2:= new `y6.f`;
  #L4ecbe6.  call temp:= `d`(v0) @signature `Lc7/i;.d:()Lc7/h;` @kind virtual;
  #L4ecbec.  v3:= temp @kind object;
  #L4ecbee.  call temp:= `a`(v3) @signature `Ly6/e;.a:(Lc7/h;)Ly6/e;` @kind static;
  #L4ecbf4.  v3:= temp @kind object;
  #L4ecbf6.  v4:= v5.`x6.y$o.c` @type ^`f7.n` @kind object;
  #L4ecbfa.  call `<init>`(v2, v3, v1, v4) @signature `Ly6/f;.<init>:(Ly6/e;Lx6/l;Lf7/n;)V` @kind direct;
  #L4ecc00.  v1:= v5.`x6.y$o.d` @type ^`x6.y` @kind object;
  #L4ecc04.  call temp:= `m`(v1, v0, v2) @signature `Lx6/y;.m:(Lx6/y;Lc7/i;Ly6/d;)Ljava/util/List;` @kind static;
  #L4ecc0a.  v0:= temp @kind object;
  #L4ecc0c.  return v0 @kind object;
  #L4ecc0e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4ecc14.  v0:= temp @kind object;
  #L4ecc16.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`x6.y$o` v1 @kind this) @signature `Lx6/y$o;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4ecb6c.  call temp:= `a`(v1) @signature `Lx6/y$o;.a:()Ljava/util/List;` @kind virtual;
  #L4ecb72.  v0:= temp @kind object;
  #L4ecb74.  return v0 @kind object;
}
