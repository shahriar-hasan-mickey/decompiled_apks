record `x6.y$a` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `x6.z` `x6.y$a.a` @AccessFlag FINAL_SYNTHETIC;
  `x6.l` `x6.y$a.b` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Map` `x6.y$a.c` @AccessFlag FINAL_SYNTHETIC;
  `x6.y` `x6.y$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.y$a` v0 @kind this, `x6.y` v1 @kind object, `x6.z` v2 @kind object, `x6.l` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lx6/y$a;.<init>:(Lx6/y;Lx6/z;Lx6/l;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ebbec.  v0.`x6.y$a.d` @type ^`x6.y` := v1 @kind object;
  #L4ebbf0.  v0.`x6.y$a.a` @type ^`x6.z` := v2 @kind object;
  #L4ebbf4.  v0.`x6.y$a.b` @type ^`x6.l` := v3 @kind object;
  #L4ebbf8.  v0.`x6.y$a.c` @type ^`java.util.Map` := v4 @kind object;
  #L4ebbfc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ebc02.  return @kind void;
}
procedure `java.util.List` `a`(`x6.y$a` v5 @kind this) @signature `Lx6/y$a;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ebb60.  v0:= v5.`x6.y$a.d` @type ^`x6.y` @kind object;
  #L4ebb64.  v1:= v5.`x6.y$a.a` @type ^`x6.z` @kind object;
  #L4ebb68.  call temp:= `l`(v0, v1) @signature `Lx6/y;.l:(Lx6/y;Lx6/z;)Lc7/i;` @kind static;
  #L4ebb6e.  v0:= temp @kind object;
  #L4ebb70.  if v0 == 0 then goto L4ebbd2;
  #L4ebb74.  call temp:= `e`(v0) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L4ebb7a.  v1:= temp @kind object;
  #L4ebb7c.  v2:= v5.`x6.y$a.b` @type ^`x6.l` @kind object;
  #L4ebb80.  call temp:= `j0`(v1, v2) @signature `Lx6/l;.j0:(Lx6/l;Lx6/l;)Lx6/l;` @kind static;
  #L4ebb86.  v1:= temp @kind object;
  #L4ebb88.  v2:= v5.`x6.y$a.c` @type ^`java.util.Map` @kind object;
  #L4ebb8c.  call temp:= `G`(v2) @signature `Lx6/b;.G:(Ljava/util/Map;)Lx6/b;` @kind static;
  #L4ebb92.  v2:= temp @kind object;
  #L4ebb94.  v3:= v5.`x6.y$a.d` @type ^`x6.y` @kind object;
  #L4ebb98.  call temp:= `c`(v3) @signature `Lx6/y;.c:(Lx6/y;)Lz6/e;` @kind static;
  #L4ebb9e.  v3:= temp @kind object;
  #L4ebba0.  v4:= v5.`x6.y$a.b` @type ^`x6.l` @kind object;
  #L4ebba4.  call `m`(v3, v4, v2) @signature `Lz6/e;.m:(Lx6/l;Lx6/b;)V` @kind interface;
  #L4ebbaa.  v3:= new `y6.c`;
  #L4ebbae.  call temp:= `d`(v0) @signature `Lc7/i;.d:()Lc7/h;` @kind virtual;
  #L4ebbb4.  v4:= temp @kind object;
  #L4ebbb6.  call temp:= `a`(v4) @signature `Ly6/e;.a:(Lc7/h;)Ly6/e;` @kind static;
  #L4ebbbc.  v4:= temp @kind object;
  #L4ebbbe.  call `<init>`(v3, v4, v1, v2) @signature `Ly6/c;.<init>:(Ly6/e;Lx6/l;Lx6/b;)V` @kind direct;
  #L4ebbc4.  v1:= v5.`x6.y$a.d` @type ^`x6.y` @kind object;
  #L4ebbc8.  call temp:= `m`(v1, v0, v3) @signature `Lx6/y;.m:(Lx6/y;Lc7/i;Ly6/d;)Ljava/util/List;` @kind static;
  #L4ebbce.  v0:= temp @kind object;
  #L4ebbd0.  return v0 @kind object;
  #L4ebbd2.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4ebbd8.  v0:= temp @kind object;
  #L4ebbda.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`x6.y$a` v1 @kind this) @signature `Lx6/y$a;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4ebb44.  call temp:= `a`(v1) @signature `Lx6/y$a;.a:()Ljava/util/List;` @kind virtual;
  #L4ebb4a.  v0:= temp @kind object;
  #L4ebb4c.  return v0 @kind object;
}
