record `x6.n$l` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `x6.n$z` `x6.n$l.o` @AccessFlag FINAL_SYNTHETIC;
  `x6.n` `x6.n$l.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.n$l` v0 @kind this, `x6.n` v1 @kind object, `x6.n$z` v2 @kind object) @signature `Lx6/n$l;.<init>:(Lx6/n;Lx6/n$z;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e7ec4.  v0.`x6.n$l.p` @type ^`x6.n` := v1 @kind object;
  #L4e7ec8.  v0.`x6.n$l.o` @type ^`x6.n$z` := v2 @kind object;
  #L4e7ecc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e7ed2.  return @kind void;
}
procedure `void` `run`(`x6.n$l` v4 @kind this) @signature `Lx6/n$l;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e7ee4.  v0:= v4.`x6.n$l.p` @type ^`x6.n` @kind object;
  #L4e7ee8.  v1:= new `x6.e0`;
  #L4e7eec.  v2:= v4.`x6.n$l.o` @type ^`x6.n$z` @kind object;
  #L4e7ef0.  call temp:= `D`(v2) @signature `Lx6/n$z;.D:(Lx6/n$z;)Ls6/i;` @kind static;
  #L4e7ef6.  v2:= temp @kind object;
  #L4e7ef8.  v3:= v4.`x6.n$l.o` @type ^`x6.n$z` @kind object;
  #L4e7efc.  call temp:= `x`(v3) @signature `Lx6/n$z;.x:(Lx6/n$z;)Lx6/l;` @kind static;
  #L4e7f02.  v3:= temp @kind object;
  #L4e7f04.  call temp:= `a`(v3) @signature `Lc7/i;.a:(Lx6/l;)Lc7/i;` @kind static;
  #L4e7f0a.  v3:= temp @kind object;
  #L4e7f0c.  call `<init>`(v1, v0, v2, v3) @signature `Lx6/e0;.<init>:(Lx6/n;Ls6/i;Lc7/i;)V` @kind direct;
  #L4e7f12.  call `b0`(v0, v1) @signature `Lx6/n;.b0:(Lx6/i;)V` @kind virtual;
  #L4e7f18.  return @kind void;
}
