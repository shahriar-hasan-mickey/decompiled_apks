record `x6.t$a` @kind class @AccessFlag  extends `f7.c$c` @kind class {
  `x6.f0` `x6.t$a.a` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Map` `x6.t$a.b` @AccessFlag FINAL_SYNTHETIC;
  `x6.u` `x6.t$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.t$a` v0 @kind this, `x6.f0` v1 @kind object, `java.util.Map` v2 @kind object, `x6.u` v3 @kind object) @signature `Lx6/t$a;.<init>:(Lx6/f0;Ljava/util/Map;Lx6/u;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ead4c.  v0.`x6.t$a.a` @type ^`x6.f0` := v1 @kind object;
  #L4ead50.  v0.`x6.t$a.b` @type ^`java.util.Map` := v2 @kind object;
  #L4ead54.  v0.`x6.t$a.c` @type ^`x6.u` := v3 @kind object;
  #L4ead58.  call `<init>`(v0) @signature `Lf7/c$c;.<init>:()V` @kind direct;
  #L4ead5e.  return @kind void;
}
procedure `void` `b`(`x6.t$a` v2 @kind this, `f7.b` v3 @kind object, `f7.n` v4 @kind object) @signature `Lx6/t$a;.b:(Lf7/b;Lf7/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ead70.  v0:= v2.`x6.t$a.a` @type ^`x6.f0` @kind object;
  #L4ead74.  call temp:= `a`(v0, v3) @signature `Lx6/f0;.a:(Lf7/b;)Lx6/f0;` @kind virtual;
  #L4ead7a.  v0:= temp @kind object;
  #L4ead7c.  v1:= v2.`x6.t$a.b` @type ^`java.util.Map` @kind object;
  #L4ead80.  call temp:= `a`(v4, v0, v1) @signature `Lx6/t;.a:(Lf7/n;Lx6/f0;Ljava/util/Map;)Lf7/n;` @kind static;
  #L4ead86.  v0:= temp @kind object;
  #L4ead88.  if v0 == v4 then goto L4eada8;
  #L4ead8c.  v4:= v2.`x6.t$a.c` @type ^`x6.u` @kind object;
  #L4ead90.  v1:= new `x6.l`;
  #L4ead94.  call temp:= `d`(v3) @signature `Lf7/b;.d:()Ljava/lang/String;` @kind virtual;
  #L4ead9a.  v3:= temp @kind object;
  #L4ead9c.  call `<init>`(v1, v3) @signature `Lx6/l;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4eada2.  call `c`(v4, v1, v0) @signature `Lx6/u;.c:(Lx6/l;Lf7/n;)V` @kind virtual;
  #L4eada8.  return @kind void;
}
