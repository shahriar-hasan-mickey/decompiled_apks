record `x6.w` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `x6.w.a` @AccessFlag PRIVATE_FINAL;
  `z6.e` `x6.w.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`x6.w` v1 @kind this, `z6.e` v2 @kind object) @signature `Lx6/w;.<init>:(Lz6/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4ebad4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ebada.  v0:= new `java.util.HashMap`;
  #L4ebade.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4ebae4.  v1.`x6.w.a` @type ^`java.util.Map` := v0 @kind object;
  #L4ebae8.  v1.`x6.w.b` @type ^`z6.e` := v2 @kind object;
  #L4ebaec.  return @kind void;
}
procedure `java.util.List` `c`(`x6.w` v4 @kind this, `c7.j` v5 @kind object, `y6.d` v6 @kind object, `x6.h0` v7 @kind object, `f7.n` v8 @kind object) @signature `Lx6/w;.c:(Lc7/j;Ly6/d;Lx6/h0;Lf7/n;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4eb998.  call temp:= `b`(v5, v6, v7, v8) @signature `Lc7/j;.b:(Ly6/d;Lx6/h0;Lf7/n;)Lc7/j$a;` @kind virtual;
  #L4eb99e.  v6:= temp @kind object;
  #L4eb9a0.  call temp:= `h`(v5) @signature `Lc7/j;.h:()Lc7/i;` @kind virtual;
  #L4eb9a6.  v7:= temp @kind object;
  #L4eb9a8.  call temp:= `g`(v7) @signature `Lc7/i;.g:()Z` @kind virtual;
  #L4eb9ae.  v7:= temp;
  #L4eb9b0.  if v7 != 0 then goto L4eba4e;
  #L4eb9b4.  v7:= new `java.util.HashSet`;
  #L4eb9b8.  call `<init>`(v7) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L4eb9be.  v8:= new `java.util.HashSet`;
  #L4eb9c2.  call `<init>`(v8) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L4eb9c8.  v0:= v6.`c7.j$a.b` @type ^`java.util.List` @kind object;
  #L4eb9cc.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4eb9d2.  v0:= temp @kind object;
  #L4eb9d4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eb9da.  v1:= temp;
  #L4eb9dc.  if v1 == 0 then goto L4eba24;
  #L4eb9e0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eb9e6.  v1:= temp @kind object;
  #L4eb9e8.  v1:= (`c7.c`) v1 @kind object;
  #L4eb9ec.  call temp:= `j`(v1) @signature `Lc7/c;.j:()Lc7/e$a;` @kind virtual;
  #L4eb9f2.  v2:= temp @kind object;
  #L4eb9f4.  v3:= `@@c7.e$a.p` @type ^`c7.e$a` @kind object;
  #L4eb9f8.  if v2 != v3 then goto L4eba0c;
  #L4eb9fc.  call temp:= `i`(v1) @signature `Lc7/c;.i:()Lf7/b;` @kind virtual;
  #L4eba02.  v1:= temp @kind object;
  #L4eba04.  call temp:= `add`(v8, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4eba0a.  goto L4eb9d4;
  #L4eba0c.  v3:= `@@c7.e$a.o` @type ^`c7.e$a` @kind object;
  #L4eba10.  if v2 != v3 then goto L4eb9d4;
  #L4eba14.  call temp:= `i`(v1) @signature `Lc7/c;.i:()Lf7/b;` @kind virtual;
  #L4eba1a.  v1:= temp @kind object;
  #L4eba1c.  call temp:= `add`(v7, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4eba22.  goto L4eb9d4;
  #L4eba24.  call temp:= `isEmpty`(v8) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L4eba2a.  v0:= temp;
  #L4eba2c.  if v0 == 0 then goto L4eba3c;
  #L4eba30.  call temp:= `isEmpty`(v7) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L4eba36.  v0:= temp;
  #L4eba38.  if v0 != 0 then goto L4eba4e;
  #L4eba3c.  v0:= v4.`x6.w.b` @type ^`z6.e` @kind object;
  #L4eba40.  call temp:= `h`(v5) @signature `Lc7/j;.h:()Lc7/i;` @kind virtual;
  #L4eba46.  v5:= temp @kind object;
  #L4eba48.  call `h`(v0, v5, v8, v7) @signature `Lz6/e;.h:(Lc7/i;Ljava/util/Set;Ljava/util/Set;)V` @kind interface;
  #L4eba4e.  v5:= v6.`c7.j$a.a` @type ^`java.util.List` @kind object;
  #L4eba52.  return v5 @kind object;
}
procedure `java.util.List` `a`(`x6.w` v3 @kind this, `x6.i` v4 @kind object, `x6.h0` v5 @kind object, `c7.a` v6 @kind object) @signature `Lx6/w;.a:(Lx6/i;Lx6/h0;Lc7/a;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4eb830.  call temp:= `e`(v4) @signature `Lx6/i;.e:()Lc7/i;` @kind virtual;
  #L4eb836.  v0:= temp @kind object;
  #L4eb838.  call temp:= `g`(v3, v0, v5, v6) @signature `Lx6/w;.g:(Lc7/i;Lx6/h0;Lc7/a;)Lc7/j;` @kind virtual;
  #L4eb83e.  v5:= temp @kind object;
  #L4eb840.  call temp:= `g`(v0) @signature `Lc7/i;.g:()Z` @kind virtual;
  #L4eb846.  v6:= temp;
  #L4eb848.  if v6 != 0 then goto L4eb898;
  #L4eb84c.  v6:= new `java.util.HashSet`;
  #L4eb850.  call `<init>`(v6) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L4eb856.  call temp:= `f`(v5) @signature `Lc7/j;.f:()Lf7/n;` @kind virtual;
  #L4eb85c.  v1:= temp @kind object;
  #L4eb85e.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4eb864.  v1:= temp @kind object;
  #L4eb866.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eb86c.  v2:= temp;
  #L4eb86e.  if v2 == 0 then goto L4eb88e;
  #L4eb872.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eb878.  v2:= temp @kind object;
  #L4eb87a.  v2:= (`f7.m`) v2 @kind object;
  #L4eb87e.  call temp:= `c`(v2) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L4eb884.  v2:= temp @kind object;
  #L4eb886.  call temp:= `add`(v6, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4eb88c.  goto L4eb866;
  #L4eb88e.  v1:= v3.`x6.w.b` @type ^`z6.e` @kind object;
  #L4eb892.  call `j`(v1, v0, v6) @signature `Lz6/e;.j:(Lc7/i;Ljava/util/Set;)V` @kind interface;
  #L4eb898.  v6:= v3.`x6.w.a` @type ^`java.util.Map` @kind object;
  #L4eb89c.  call temp:= `d`(v0) @signature `Lc7/i;.d:()Lc7/h;` @kind virtual;
  #L4eb8a2.  v1:= temp @kind object;
  #L4eb8a4.  call temp:= `containsKey`(v6, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4eb8aa.  v6:= temp;
  #L4eb8ac.  if v6 != 0 then goto L4eb8c2;
  #L4eb8b0.  v6:= v3.`x6.w.a` @type ^`java.util.Map` @kind object;
  #L4eb8b4.  call temp:= `d`(v0) @signature `Lc7/i;.d:()Lc7/h;` @kind virtual;
  #L4eb8ba.  v1:= temp @kind object;
  #L4eb8bc.  call temp:= `put`(v6, v1, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4eb8c2.  v6:= v3.`x6.w.a` @type ^`java.util.Map` @kind object;
  #L4eb8c6.  call temp:= `d`(v0) @signature `Lc7/i;.d:()Lc7/h;` @kind virtual;
  #L4eb8cc.  v0:= temp @kind object;
  #L4eb8ce.  call temp:= `put`(v6, v0, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4eb8d4.  call `a`(v5, v4) @signature `Lc7/j;.a:(Lx6/i;)V` @kind virtual;
  #L4eb8da.  call temp:= `g`(v5, v4) @signature `Lc7/j;.g:(Lx6/i;)Ljava/util/List;` @kind virtual;
  #L4eb8e0.  v4:= temp @kind object;
  #L4eb8e2.  return v4 @kind object;
}
procedure `java.util.List` `b`(`x6.w` v3 @kind this, `y6.d` v4 @kind object, `x6.h0` v5 @kind object, `f7.n` v6 @kind object) @signature `Lx6/w;.b:(Ly6/d;Lx6/h0;Lf7/n;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4eb8f4.  call temp:= `b`(v4) @signature `Ly6/d;.b:()Ly6/e;` @kind virtual;
  #L4eb8fa.  v0:= temp @kind object;
  #L4eb8fc.  call temp:= `b`(v0) @signature `Ly6/e;.b:()Lc7/h;` @kind virtual;
  #L4eb902.  v0:= temp @kind object;
  #L4eb904.  if v0 == 0 then goto L4eb932;
  #L4eb908.  v1:= v3.`x6.w.a` @type ^`java.util.Map` @kind object;
  #L4eb90c.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4eb912.  v0:= temp @kind object;
  #L4eb914.  v0:= (`c7.j`) v0 @kind object;
  #L4eb918.  if v0 == 0 then goto L4eb920;
  #L4eb91c.  v1:= 1I;
  #L4eb91e.  goto L4eb922;
  #L4eb920.  v1:= 0I;
  #L4eb922.  call `f`(v1) @signature `La7/m;.f:(Z)V` @kind static;
  #L4eb928.  call temp:= `c`(v3, v0, v4, v5, v6) @signature `Lx6/w;.c:(Lc7/j;Ly6/d;Lx6/h0;Lf7/n;)Ljava/util/List;` @kind direct;
  #L4eb92e.  v4:= temp @kind object;
  #L4eb930.  return v4 @kind object;
  #L4eb932.  v0:= new `java.util.ArrayList`;
  #L4eb936.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4eb93c.  v1:= v3.`x6.w.a` @type ^`java.util.Map` @kind object;
  #L4eb940.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L4eb946.  v1:= temp @kind object;
  #L4eb948.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4eb94e.  v1:= temp @kind object;
  #L4eb950.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eb956.  v2:= temp;
  #L4eb958.  if v2 == 0 then goto L4eb984;
  #L4eb95c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eb962.  v2:= temp @kind object;
  #L4eb964.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L4eb968.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4eb96e.  v2:= temp @kind object;
  #L4eb970.  v2:= (`c7.j`) v2 @kind object;
  #L4eb974.  call temp:= `c`(v3, v2, v4, v5, v6) @signature `Lx6/w;.c:(Lc7/j;Ly6/d;Lx6/h0;Lf7/n;)Ljava/util/List;` @kind direct;
  #L4eb97a.  v2:= temp @kind object;
  #L4eb97c.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4eb982.  goto L4eb950;
  #L4eb984.  return v0 @kind object;
}
procedure `f7.n` `d`(`x6.w` v2 @kind this, `x6.l` v3 @kind object) @signature `Lx6/w;.d:(Lx6/l;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4eb7e0.  v0:= v2.`x6.w.a` @type ^`java.util.Map` @kind object;
  #L4eb7e4.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L4eb7ea.  v0:= temp @kind object;
  #L4eb7ec.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4eb7f2.  v0:= temp @kind object;
  #L4eb7f4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eb7fa.  v1:= temp;
  #L4eb7fc.  if v1 == 0 then goto L4eb81a;
  #L4eb800.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eb806.  v1:= temp @kind object;
  #L4eb808.  v1:= (`c7.j`) v1 @kind object;
  #L4eb80c.  call temp:= `e`(v1, v3) @signature `Lc7/j;.e:(Lx6/l;)Lf7/n;` @kind virtual;
  #L4eb812.  v1:= temp @kind object;
  #L4eb814.  if v1 == 0 then goto L4eb7f4;
  #L4eb818.  return v1 @kind object;
  #L4eb81a.  v3:= 0I;
  #L4eb81c.  return v3 @kind object;
}
procedure `c7.j` `e`(`x6.w` v3 @kind this) @signature `Lx6/w;.e:()Lc7/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4eb68c.  v0:= v3.`x6.w.a` @type ^`java.util.Map` @kind object;
  #L4eb690.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L4eb696.  v0:= temp @kind object;
  #L4eb698.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4eb69e.  v0:= temp @kind object;
  #L4eb6a0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eb6a6.  v1:= temp;
  #L4eb6a8.  if v1 == 0 then goto L4eb6da;
  #L4eb6ac.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eb6b2.  v1:= temp @kind object;
  #L4eb6b4.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L4eb6b8.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4eb6be.  v1:= temp @kind object;
  #L4eb6c0.  v1:= (`c7.j`) v1 @kind object;
  #L4eb6c4.  call temp:= `h`(v1) @signature `Lc7/j;.h:()Lc7/i;` @kind virtual;
  #L4eb6ca.  v2:= temp @kind object;
  #L4eb6cc.  call temp:= `g`(v2) @signature `Lc7/i;.g:()Z` @kind virtual;
  #L4eb6d2.  v2:= temp;
  #L4eb6d4.  if v2 == 0 then goto L4eb6a0;
  #L4eb6d8.  return v1 @kind object;
  #L4eb6da.  v0:= 0I;
  #L4eb6dc.  return v0 @kind object;
}
procedure `java.util.List` `f`(`x6.w` v4 @kind this) @signature `Lx6/w;.f:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4eba64.  v0:= new `java.util.ArrayList`;
  #L4eba68.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4eba6e.  v1:= v4.`x6.w.a` @type ^`java.util.Map` @kind object;
  #L4eba72.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L4eba78.  v1:= temp @kind object;
  #L4eba7a.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4eba80.  v1:= temp @kind object;
  #L4eba82.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eba88.  v2:= temp;
  #L4eba8a.  if v2 == 0 then goto L4ebac2;
  #L4eba8e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eba94.  v2:= temp @kind object;
  #L4eba96.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L4eba9a.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4ebaa0.  v2:= temp @kind object;
  #L4ebaa2.  v2:= (`c7.j`) v2 @kind object;
  #L4ebaa6.  call temp:= `h`(v2) @signature `Lc7/j;.h:()Lc7/i;` @kind virtual;
  #L4ebaac.  v3:= temp @kind object;
  #L4ebaae.  call temp:= `g`(v3) @signature `Lc7/i;.g:()Z` @kind virtual;
  #L4ebab4.  v3:= temp;
  #L4ebab6.  if v3 != 0 then goto L4eba82;
  #L4ebaba.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4ebac0.  goto L4eba82;
  #L4ebac2.  return v0 @kind object;
}
procedure `c7.j` `g`(`x6.w` v4 @kind this, `c7.i` v5 @kind object, `x6.h0` v6 @kind object, `c7.a` v7 @kind object) @signature `Lx6/w;.g:(Lc7/i;Lx6/h0;Lc7/a;)Lc7/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4eb6f0.  v0:= v4.`x6.w.a` @type ^`java.util.Map` @kind object;
  #L4eb6f4.  call temp:= `d`(v5) @signature `Lc7/i;.d:()Lc7/h;` @kind virtual;
  #L4eb6fa.  v1:= temp @kind object;
  #L4eb6fc.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4eb702.  v0:= temp @kind object;
  #L4eb704.  v0:= (`c7.j`) v0 @kind object;
  #L4eb708.  if v0 != 0 then goto L4eb78e;
  #L4eb70c.  call temp:= `f`(v7) @signature `Lc7/a;.f:()Z` @kind virtual;
  #L4eb712.  v0:= temp;
  #L4eb714.  if v0 == 0 then goto L4eb722;
  #L4eb718.  call temp:= `b`(v7) @signature `Lc7/a;.b:()Lf7/n;` @kind virtual;
  #L4eb71e.  v0:= temp @kind object;
  #L4eb720.  goto L4eb724;
  #L4eb722.  v0:= 0I;
  #L4eb724.  call temp:= `b`(v6, v0) @signature `Lx6/h0;.b:(Lf7/n;)Lf7/n;` @kind virtual;
  #L4eb72a.  v0:= temp @kind object;
  #L4eb72c.  v1:= 0I;
  #L4eb72e.  if v0 == 0 then goto L4eb736;
  #L4eb732.  v6:= 1I;
  #L4eb734.  goto L4eb75e;
  #L4eb736.  call temp:= `b`(v7) @signature `Lc7/a;.b:()Lf7/n;` @kind virtual;
  #L4eb73c.  v0:= temp @kind object;
  #L4eb73e.  if v0 == 0 then goto L4eb74c;
  #L4eb742.  call temp:= `b`(v7) @signature `Lc7/a;.b:()Lf7/n;` @kind virtual;
  #L4eb748.  v0:= temp @kind object;
  #L4eb74a.  goto L4eb754;
  #L4eb74c.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L4eb752.  v0:= temp @kind object;
  #L4eb754.  call temp:= `e`(v6, v0) @signature `Lx6/h0;.e:(Lf7/n;)Lf7/n;` @kind virtual;
  #L4eb75a.  v0:= temp @kind object;
  #L4eb75c.  v6:= 0I;
  #L4eb75e.  call temp:= `c`(v5) @signature `Lc7/i;.c:()Lf7/h;` @kind virtual;
  #L4eb764.  v2:= temp @kind object;
  #L4eb766.  call temp:= `h`(v0, v2) @signature `Lf7/i;.h:(Lf7/n;Lf7/h;)Lf7/i;` @kind static;
  #L4eb76c.  v0:= temp @kind object;
  #L4eb76e.  v2:= new `c7.k`;
  #L4eb772.  v3:= new `c7.a`;
  #L4eb776.  call `<init>`(v3, v0, v6, v1) @signature `Lc7/a;.<init>:(Lf7/i;ZZ)V` @kind direct;
  #L4eb77c.  call `<init>`(v2, v3, v7) @signature `Lc7/k;.<init>:(Lc7/a;Lc7/a;)V` @kind direct;
  #L4eb782.  v6:= new `c7.j`;
  #L4eb786.  call `<init>`(v6, v5, v2) @signature `Lc7/j;.<init>:(Lc7/i;Lc7/k;)V` @kind direct;
  #L4eb78c.  return v6 @kind object;
  #L4eb78e.  return v0 @kind object;
}
procedure `boolean` `h`(`x6.w` v1 @kind this) @signature `Lx6/w;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eb624.  call temp:= `e`(v1) @signature `Lx6/w;.e:()Lc7/j;` @kind virtual;
  #L4eb62a.  v0:= temp @kind object;
  #L4eb62c.  if v0 == 0 then goto L4eb634;
  #L4eb630.  v0:= 1I;
  #L4eb632.  goto L4eb636;
  #L4eb634.  v0:= 0I;
  #L4eb636.  return v0;
}
procedure `boolean` `i`(`x6.w` v1 @kind this) @signature `Lx6/w;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eb648.  v0:= v1.`x6.w.a` @type ^`java.util.Map` @kind object;
  #L4eb64c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L4eb652.  v0:= temp;
  #L4eb654.  return v0;
}
procedure `a7.g` `j`(`x6.w` v6 @kind this, `c7.i` v7 @kind object, `x6.i` v8 @kind object, `s6.b` v9 @kind object) @signature `Lx6/w;.j:(Lc7/i;Lx6/i;Ls6/b;)La7/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4eb4d4.  v0:= new `java.util.ArrayList`;
  #L4eb4d8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4eb4de.  v1:= new `java.util.ArrayList`;
  #L4eb4e2.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4eb4e8.  call temp:= `h`(v6) @signature `Lx6/w;.h:()Z` @kind virtual;
  #L4eb4ee.  v2:= temp;
  #L4eb4f0.  call temp:= `f`(v7) @signature `Lc7/i;.f:()Z` @kind virtual;
  #L4eb4f6.  v3:= temp;
  #L4eb4f8.  if v3 == 0 then goto L4eb578;
  #L4eb4fc.  v3:= v6.`x6.w.a` @type ^`java.util.Map` @kind object;
  #L4eb500.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L4eb506.  v3:= temp @kind object;
  #L4eb508.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4eb50e.  v3:= temp @kind object;
  #L4eb510.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eb516.  v4:= temp;
  #L4eb518.  if v4 == 0 then goto L4eb5e2;
  #L4eb51c.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eb522.  v4:= temp @kind object;
  #L4eb524.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L4eb528.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4eb52e.  v4:= temp @kind object;
  #L4eb530.  v4:= (`c7.j`) v4 @kind object;
  #L4eb534.  call temp:= `k`(v4, v8, v9) @signature `Lc7/j;.k:(Lx6/i;Ls6/b;)Ljava/util/List;` @kind virtual;
  #L4eb53a.  v5:= temp @kind object;
  #L4eb53c.  call temp:= `addAll`(v1, v5) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4eb542.  call temp:= `j`(v4) @signature `Lc7/j;.j:()Z` @kind virtual;
  #L4eb548.  v5:= temp;
  #L4eb54a.  if v5 == 0 then goto L4eb510;
  #L4eb54e.  call `remove`(v3) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L4eb554.  call temp:= `h`(v4) @signature `Lc7/j;.h:()Lc7/i;` @kind virtual;
  #L4eb55a.  v5:= temp @kind object;
  #L4eb55c.  call temp:= `g`(v5) @signature `Lc7/i;.g:()Z` @kind virtual;
  #L4eb562.  v5:= temp;
  #L4eb564.  if v5 != 0 then goto L4eb510;
  #L4eb568.  call temp:= `h`(v4) @signature `Lc7/j;.h:()Lc7/i;` @kind virtual;
  #L4eb56e.  v4:= temp @kind object;
  #L4eb570.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4eb576.  goto L4eb510;
  #L4eb578.  v3:= v6.`x6.w.a` @type ^`java.util.Map` @kind object;
  #L4eb57c.  call temp:= `d`(v7) @signature `Lc7/i;.d:()Lc7/h;` @kind virtual;
  #L4eb582.  v4:= temp @kind object;
  #L4eb584.  call temp:= `get`(v3, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4eb58a.  v3:= temp @kind object;
  #L4eb58c.  v3:= (`c7.j`) v3 @kind object;
  #L4eb590.  if v3 == 0 then goto L4eb5e2;
  #L4eb594.  call temp:= `k`(v3, v8, v9) @signature `Lc7/j;.k:(Lx6/i;Ls6/b;)Ljava/util/List;` @kind virtual;
  #L4eb59a.  v8:= temp @kind object;
  #L4eb59c.  call temp:= `addAll`(v1, v8) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4eb5a2.  call temp:= `j`(v3) @signature `Lc7/j;.j:()Z` @kind virtual;
  #L4eb5a8.  v8:= temp;
  #L4eb5aa.  if v8 == 0 then goto L4eb5e2;
  #L4eb5ae.  v8:= v6.`x6.w.a` @type ^`java.util.Map` @kind object;
  #L4eb5b2.  call temp:= `d`(v7) @signature `Lc7/i;.d:()Lc7/h;` @kind virtual;
  #L4eb5b8.  v9:= temp @kind object;
  #L4eb5ba.  call temp:= `remove`(v8, v9) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4eb5c0.  call temp:= `h`(v3) @signature `Lc7/j;.h:()Lc7/i;` @kind virtual;
  #L4eb5c6.  v8:= temp @kind object;
  #L4eb5c8.  call temp:= `g`(v8) @signature `Lc7/i;.g:()Z` @kind virtual;
  #L4eb5ce.  v8:= temp;
  #L4eb5d0.  if v8 != 0 then goto L4eb5e2;
  #L4eb5d4.  call temp:= `h`(v3) @signature `Lc7/j;.h:()Lc7/i;` @kind virtual;
  #L4eb5da.  v8:= temp @kind object;
  #L4eb5dc.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4eb5e2.  if v2 == 0 then goto L4eb608;
  #L4eb5e6.  call temp:= `h`(v6) @signature `Lx6/w;.h:()Z` @kind virtual;
  #L4eb5ec.  v8:= temp;
  #L4eb5ee.  if v8 != 0 then goto L4eb608;
  #L4eb5f2.  call temp:= `e`(v7) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L4eb5f8.  v7:= temp @kind object;
  #L4eb5fa.  call temp:= `a`(v7) @signature `Lc7/i;.a:(Lx6/l;)Lc7/i;` @kind static;
  #L4eb600.  v7:= temp @kind object;
  #L4eb602.  call temp:= `add`(v0, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4eb608.  v7:= new `a7.g`;
  #L4eb60c.  call `<init>`(v7, v0, v1) @signature `La7/g;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L4eb612.  return v7 @kind object;
}
procedure `boolean` `k`(`x6.w` v0 @kind this, `c7.i` v1 @kind object) @signature `Lx6/w;.k:(Lc7/i;)Z` @AccessFlag PUBLIC {
    temp;

  #L4eb668.  call temp:= `l`(v0, v1) @signature `Lx6/w;.l:(Lc7/i;)Lc7/j;` @kind virtual;
  #L4eb66e.  v1:= temp @kind object;
  #L4eb670.  if v1 == 0 then goto L4eb678;
  #L4eb674.  v1:= 1I;
  #L4eb676.  goto L4eb67a;
  #L4eb678.  v1:= 0I;
  #L4eb67a.  return v1;
}
procedure `c7.j` `l`(`x6.w` v1 @kind this, `c7.i` v2 @kind object) @signature `Lx6/w;.l:(Lc7/i;)Lc7/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eb7a0.  call temp:= `g`(v2) @signature `Lc7/i;.g:()Z` @kind virtual;
  #L4eb7a6.  v0:= temp;
  #L4eb7a8.  if v0 == 0 then goto L4eb7b6;
  #L4eb7ac.  call temp:= `e`(v1) @signature `Lx6/w;.e:()Lc7/j;` @kind virtual;
  #L4eb7b2.  v2:= temp @kind object;
  #L4eb7b4.  return v2 @kind object;
  #L4eb7b6.  v0:= v1.`x6.w.a` @type ^`java.util.Map` @kind object;
  #L4eb7ba.  call temp:= `d`(v2) @signature `Lc7/i;.d:()Lc7/h;` @kind virtual;
  #L4eb7c0.  v2:= temp @kind object;
  #L4eb7c2.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4eb7c8.  v2:= temp @kind object;
  #L4eb7ca.  v2:= (`c7.j`) v2 @kind object;
  #L4eb7ce.  return v2 @kind object;
}
