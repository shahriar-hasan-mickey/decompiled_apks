record `x6.y$n` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `x6.z` `x6.y$n.a` @AccessFlag FINAL_SYNTHETIC;
  `x6.y` `x6.y$n.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.y$n` v0 @kind this, `x6.y` v1 @kind object, `x6.z` v2 @kind object) @signature `Lx6/y$n;.<init>:(Lx6/y;Lx6/z;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ecb4c.  v0.`x6.y$n.b` @type ^`x6.y` := v1 @kind object;
  #L4ecb50.  v0.`x6.y$n.a` @type ^`x6.z` := v2 @kind object;
  #L4ecb54.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ecb5a.  return @kind void;
}
procedure `java.util.List` `a`(`x6.y$n` v4 @kind this) @signature `Lx6/y$n;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ecadc.  v0:= v4.`x6.y$n.b` @type ^`x6.y` @kind object;
  #L4ecae0.  v1:= v4.`x6.y$n.a` @type ^`x6.z` @kind object;
  #L4ecae4.  call temp:= `l`(v0, v1) @signature `Lx6/y;.l:(Lx6/y;Lx6/z;)Lc7/i;` @kind static;
  #L4ecaea.  v0:= temp @kind object;
  #L4ecaec.  if v0 == 0 then goto L4ecb32;
  #L4ecaf0.  v1:= v4.`x6.y$n.b` @type ^`x6.y` @kind object;
  #L4ecaf4.  call temp:= `c`(v1) @signature `Lx6/y;.c:(Lx6/y;)Lz6/e;` @kind static;
  #L4ecafa.  v1:= temp @kind object;
  #L4ecafc.  call `f`(v1, v0) @signature `Lz6/e;.f:(Lc7/i;)V` @kind interface;
  #L4ecb02.  v1:= new `y6.b`;
  #L4ecb06.  call temp:= `d`(v0) @signature `Lc7/i;.d:()Lc7/h;` @kind virtual;
  #L4ecb0c.  v2:= temp @kind object;
  #L4ecb0e.  call temp:= `a`(v2) @signature `Ly6/e;.a:(Lc7/h;)Ly6/e;` @kind static;
  #L4ecb14.  v2:= temp @kind object;
  #L4ecb16.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4ecb1c.  v3:= temp @kind object;
  #L4ecb1e.  call `<init>`(v1, v2, v3) @signature `Ly6/b;.<init>:(Ly6/e;Lx6/l;)V` @kind direct;
  #L4ecb24.  v2:= v4.`x6.y$n.b` @type ^`x6.y` @kind object;
  #L4ecb28.  call temp:= `m`(v2, v0, v1) @signature `Lx6/y;.m:(Lx6/y;Lc7/i;Ly6/d;)Ljava/util/List;` @kind static;
  #L4ecb2e.  v0:= temp @kind object;
  #L4ecb30.  return v0 @kind object;
  #L4ecb32.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4ecb38.  v0:= temp @kind object;
  #L4ecb3a.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`x6.y$n` v1 @kind this) @signature `Lx6/y$n;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4ecac0.  call temp:= `a`(v1) @signature `Lx6/y$n;.a:()Ljava/util/List;` @kind virtual;
  #L4ecac6.  v0:= temp @kind object;
  #L4ecac8.  return v0 @kind object;
}
