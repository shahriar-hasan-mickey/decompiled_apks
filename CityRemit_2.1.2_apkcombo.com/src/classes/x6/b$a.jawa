record `x6.b$a` @kind class @AccessFlag  extends `a7.d$c` @kind interface {
  `x6.l` `x6.b$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.b$a` v0 @kind this, `x6.b` v1 @kind object, `x6.l` v2 @kind object) @signature `Lx6/b$a;.<init>:(Lx6/b;Lx6/l;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e5c24.  v0.`x6.b$a.a` @type ^`x6.l` := v2 @kind object;
  #L4e5c28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e5c2e.  return @kind void;
}
procedure `java.lang.Object` `a`(`x6.b$a` v0 @kind this, `x6.l` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lx6/b$a;.a:(Lx6/l;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4e5c00.  v2:= (`f7.n`) v2 @kind object;
  #L4e5c04.  v3:= (`x6.b`) v3 @kind object;
  #L4e5c08.  call temp:= `b`(v0, v1, v2, v3) @signature `Lx6/b$a;.b:(Lx6/l;Lf7/n;Lx6/b;)Lx6/b;` @kind virtual;
  #L4e5c0e.  v1:= temp @kind object;
  #L4e5c10.  return v1 @kind object;
}
procedure `x6.b` `b`(`x6.b$a` v1 @kind this, `x6.l` v2 @kind object, `f7.n` v3 @kind object, `x6.b` v4 @kind object) @signature `Lx6/b$a;.b:(Lx6/l;Lf7/n;Lx6/b;)Lx6/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e5c40.  v0:= v1.`x6.b$a.a` @type ^`x6.l` @kind object;
  #L4e5c44.  call temp:= `c0`(v0, v2) @signature `Lx6/l;.c0:(Lx6/l;)Lx6/l;` @kind virtual;
  #L4e5c4a.  v2:= temp @kind object;
  #L4e5c4c.  call temp:= `f`(v4, v2, v3) @signature `Lx6/b;.f:(Lx6/l;Lf7/n;)Lx6/b;` @kind virtual;
  #L4e5c52.  v2:= temp @kind object;
  #L4e5c54.  return v2 @kind object;
}
