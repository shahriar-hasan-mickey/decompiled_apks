record `x6.h` @kind class @AccessFlag PUBLIC extends `x6.g` @kind class {
}
procedure `void` `<init>`(`x6.h` v0 @kind this) @signature `Lx6/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e6d08.  call `<init>`(v0) @signature `Lx6/g;.<init>:()V` @kind direct;
  #L4e6d0e.  return @kind void;
}
procedure `void` `I`(`x6.h` v0 @kind this, `x6.b0` v1 @kind object) @signature `Lx6/h;.I:(Lx6/b0;)V` @AccessFlag PUBLIC {
    temp;

  #L4e6d20.  v0.`x6.g.d` @type ^`x6.b0` := v1 @kind object;
  #L4e6d24.  return @kind void;
}
procedure `void` `J`(`x6.h` v0 @kind this, `x6.b0` v1 @kind object) @signature `Lx6/h;.J:(Lx6/b0;)V` @AccessFlag PUBLIC {
    temp;

  #L4e6d38.  v0.`x6.g.c` @type ^`x6.b0` := v1 @kind object;
  #L4e6d3c.  return @kind void;
}
procedure `void` `K`(`x6.h` v0 @kind this, `y5.d` v1 @kind object) @signature `Lx6/h;.K:(Ly5/d;)V` @AccessFlag PUBLIC {
    temp;

  #L4e6d50.  @monitorenter v0
  #L4e6d52.  v0.`x6.g.l` @type ^`y5.d` := v1 @kind object;
  #L4e6d56.  @monitorexit v0
  #L4e6d58.  return @kind void;
  #L4e6d5a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e6d5c.  @monitorexit v0
  #L4e6d5e.  throw v1;
  catch `java.lang.Throwable` @[L4e6d52..L4e6d56] goto L4e6d5a;
}
procedure `void` `L`(`x6.h` v3 @kind this, `com.google.firebase.database.f` v4 @kind object) @signature `Lx6/h;.L:(Lcom/google/firebase/database/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4e6d7c.  @monitorenter v3
  #L4e6d7e.  call `b`(v3) @signature `Lx6/g;.b:()V` @kind virtual;
  #L4e6d84.  v0:= `@@x6.h$a.a` @type ^`int`[] @kind object;
  #L4e6d88.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4e6d8e.  v1:= temp;
  #L4e6d90.  v0:= v0[v1];
  #L4e6d94.  v1:= 1I;
  #L4e6d96.  if v0 == v1 then goto L4e6dfc;
  #L4e6d9a.  v1:= 2I;
  #L4e6d9c.  if v0 == v1 then goto L4e6df6;
  #L4e6da0.  v1:= 3I;
  #L4e6da2.  if v0 == v1 then goto L4e6df0;
  #L4e6da6.  v1:= 4I;
  #L4e6da8.  if v0 == v1 then goto L4e6dea;
  #L4e6dac.  v1:= 5I;
  #L4e6dae.  if v0 != v1 then goto L4e6dbc;
  #L4e6db2.  v4:= `@@e7.d$a.s` @type ^`e7.d$a` @kind object;
  #L4e6db6.  v3.`x6.g.i` @type ^`e7.d$a` := v4 @kind object;
  #L4e6dba.  goto L4e6e02;
  #L4e6dbc.  v0:= new `java.lang.IllegalArgumentException`;
  #L4e6dc0.  v1:= new `java.lang.StringBuilder`;
  #L4e6dc4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4e6dca.  v2:= "Unknown log level: " @kind object;
  #L4e6dce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e6dd4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e6dda.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4e6de0.  v4:= temp @kind object;
  #L4e6de2.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e6de8.  throw v0;
  #L4e6dea.  v4:= `@@e7.d$a.r` @type ^`e7.d$a` @kind object;
  #L4e6dee.  goto L4e6db6;
  #L4e6df0.  v4:= `@@e7.d$a.q` @type ^`e7.d$a` @kind object;
  #L4e6df4.  goto L4e6db6;
  #L4e6df6.  v4:= `@@e7.d$a.p` @type ^`e7.d$a` @kind object;
  #L4e6dfa.  goto L4e6db6;
  #L4e6dfc.  v4:= `@@e7.d$a.o` @type ^`e7.d$a` @kind object;
  #L4e6e00.  goto L4e6db6;
  #L4e6e02.  @monitorexit v3
  #L4e6e04.  return @kind void;
  #L4e6e06.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e6e08.  @monitorexit v3
  #L4e6e0a.  throw v4;
  catch `java.lang.Throwable` @[L4e6d7e..L4e6e00] goto L4e6e06;
}
procedure `void` `M`(`x6.h` v3 @kind this, `long` v4 ) @signature `Lx6/h;.M:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4e6e28.  @monitorenter v3
  #L4e6e2a.  call `b`(v3) @signature `Lx6/g;.b:()V` @kind virtual;
  #L4e6e30.  v0:= 1048576L;
  #L4e6e36.  v2:= lcmp(v4, v0);
  #L4e6e3a.  if v2 < 0 then goto L4e6e64;
  #L4e6e3e.  v0:= 104857600L;
  #L4e6e44.  v2:= lcmp(v4, v0);
  #L4e6e48.  if v2 > 0 then goto L4e6e54;
  #L4e6e4c.  v3.`x6.g.k` @type ^`long` := v4 @kind wide;
  #L4e6e50.  @monitorexit v3
  #L4e6e52.  return @kind void;
  #L4e6e54.  v4:= new `s6.c`;
  #L4e6e58.  v5:= "Firebase Database currently doesn't support a cache size larger than 100MB" @kind object;
  #L4e6e5c.  call `<init>`(v4, v5) @signature `Ls6/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e6e62.  throw v4;
  #L4e6e64.  v4:= new `s6.c`;
  #L4e6e68.  v5:= "The minimum cache size must be at least 1MB" @kind object;
  #L4e6e6c.  call `<init>`(v4, v5) @signature `Ls6/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e6e72.  throw v4;
  #L4e6e74.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e6e76.  @monitorexit v3
  #L4e6e78.  throw v4;
  catch `java.lang.Throwable` @[L4e6e2a..L4e6e50] goto L4e6e74;
  catch `java.lang.Throwable` @[L4e6e54..L4e6e74] goto L4e6e74;
}
procedure `void` `N`(`x6.h` v0 @kind this, `boolean` v1 ) @signature `Lx6/h;.N:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L4e6ea0.  @monitorenter v0
  #L4e6ea2.  call `b`(v0) @signature `Lx6/g;.b:()V` @kind virtual;
  #L4e6ea8.  v0.`x6.g.j` @type ^`boolean` := v1 @kind boolean;
  #L4e6eac.  @monitorexit v0
  #L4e6eae.  return @kind void;
  #L4e6eb0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e6eb2.  @monitorexit v0
  #L4e6eb4.  throw v1;
  catch `java.lang.Throwable` @[L4e6ea2..L4e6eac] goto L4e6eb0;
}
procedure `void` `O`(`x6.h` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lx6/h;.O:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4e6ed4.  @monitorenter v1
  #L4e6ed6.  call `b`(v1) @signature `Lx6/g;.b:()V` @kind virtual;
  #L4e6edc.  if v2 == 0 then goto L4e6ef4;
  #L4e6ee0.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4e6ee6.  v0:= temp;
  #L4e6ee8.  if v0 != 0 then goto L4e6ef4;
  #L4e6eec.  v1.`x6.g.f` @type ^`java.lang.String` := v2 @kind object;
  #L4e6ef0.  @monitorexit v1
  #L4e6ef2.  return @kind void;
  #L4e6ef4.  v2:= new `java.lang.IllegalArgumentException`;
  #L4e6ef8.  v0:= "Session identifier is not allowed to be empty or null!" @kind object;
  #L4e6efc.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e6f02.  throw v2;
  #L4e6f04.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4e6f06.  @monitorexit v1
  #L4e6f08.  throw v2;
  catch `java.lang.Throwable` @[L4e6ed6..L4e6ef0] goto L4e6f04;
  catch `java.lang.Throwable` @[L4e6ef4..L4e6f04] goto L4e6f04;
}
