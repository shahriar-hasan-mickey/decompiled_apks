record `x6.y$i` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `boolean` `x6.y$i.a` @AccessFlag FINAL_SYNTHETIC;
  `long` `x6.y$i.b` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `x6.y$i.c` @AccessFlag FINAL_SYNTHETIC;
  `a7.a` `x6.y$i.d` @AccessFlag FINAL_SYNTHETIC;
  `x6.y` `x6.y$i.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x6.y$i` v0 @kind this, `x6.y` v1 @kind object, `boolean` v2 , `long` v3 , `boolean` v5 , `a7.a` v6 @kind object) @signature `Lx6/y$i;.<init>:(Lx6/y;ZJZLa7/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4ec828.  v0.`x6.y$i.e` @type ^`x6.y` := v1 @kind object;
  #L4ec82c.  v0.`x6.y$i.a` @type ^`boolean` := v2 @kind boolean;
  #L4ec830.  v0.`x6.y$i.b` @type ^`long` := v3 @kind wide;
  #L4ec834.  v0.`x6.y$i.c` @type ^`boolean` := v5 @kind boolean;
  #L4ec838.  v0.`x6.y$i.d` @type ^`a7.a` := v6 @kind object;
  #L4ec83c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ec842.  return @kind void;
}
procedure `java.util.List` `a`(`x6.y$i` v6 @kind this) @signature `Lx6/y$i;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4ec690.  v0:= v6.`x6.y$i.a` @type ^`boolean` @kind boolean;
  #L4ec694.  if v0 == 0 then goto L4ec6ae;
  #L4ec698.  v0:= v6.`x6.y$i.e` @type ^`x6.y` @kind object;
  #L4ec69c.  call temp:= `c`(v0) @signature `Lx6/y;.c:(Lx6/y;)Lz6/e;` @kind static;
  #L4ec6a2.  v0:= temp @kind object;
  #L4ec6a4.  v1:= v6.`x6.y$i.b` @type ^`long` @kind wide;
  #L4ec6a8.  call `c`(v0, v1) @signature `Lz6/e;.c:(J)V` @kind interface;
  #L4ec6ae.  v0:= v6.`x6.y$i.e` @type ^`x6.y` @kind object;
  #L4ec6b2.  call temp:= `j`(v0) @signature `Lx6/y;.j:(Lx6/y;)Lx6/g0;` @kind static;
  #L4ec6b8.  v0:= temp @kind object;
  #L4ec6ba.  v1:= v6.`x6.y$i.b` @type ^`long` @kind wide;
  #L4ec6be.  call temp:= `i`(v0, v1) @signature `Lx6/g0;.i:(J)Lx6/c0;` @kind virtual;
  #L4ec6c4.  v0:= temp @kind object;
  #L4ec6c6.  v1:= v6.`x6.y$i.e` @type ^`x6.y` @kind object;
  #L4ec6ca.  call temp:= `j`(v1) @signature `Lx6/y;.j:(Lx6/y;)Lx6/g0;` @kind static;
  #L4ec6d0.  v1:= temp @kind object;
  #L4ec6d2.  v2:= v6.`x6.y$i.b` @type ^`long` @kind wide;
  #L4ec6d6.  call temp:= `m`(v1, v2) @signature `Lx6/g0;.m:(J)Z` @kind virtual;
  #L4ec6dc.  v1:= temp;
  #L4ec6de.  call temp:= `f`(v0) @signature `Lx6/c0;.f:()Z` @kind virtual;
  #L4ec6e4.  v2:= temp;
  #L4ec6e6.  if v2 == 0 then goto L4ec778;
  #L4ec6ea.  v2:= v6.`x6.y$i.c` @type ^`boolean` @kind boolean;
  #L4ec6ee.  if v2 != 0 then goto L4ec778;
  #L4ec6f2.  v2:= v6.`x6.y$i.d` @type ^`a7.a` @kind object;
  #L4ec6f6.  call temp:= `c`(v2) @signature `Lx6/t;.c:(La7/a;)Ljava/util/Map;` @kind static;
  #L4ec6fc.  v2:= temp @kind object;
  #L4ec6fe.  call temp:= `e`(v0) @signature `Lx6/c0;.e:()Z` @kind virtual;
  #L4ec704.  v3:= temp;
  #L4ec706.  if v3 == 0 then goto L4ec742;
  #L4ec70a.  call temp:= `b`(v0) @signature `Lx6/c0;.b:()Lf7/n;` @kind virtual;
  #L4ec710.  v3:= temp @kind object;
  #L4ec712.  v4:= v6.`x6.y$i.e` @type ^`x6.y` @kind object;
  #L4ec716.  call temp:= `c`(v0) @signature `Lx6/c0;.c:()Lx6/l;` @kind virtual;
  #L4ec71c.  v5:= temp @kind object;
  #L4ec71e.  call temp:= `h`(v3, v4, v5, v2) @signature `Lx6/t;.h:(Lf7/n;Lx6/y;Lx6/l;Ljava/util/Map;)Lf7/n;` @kind static;
  #L4ec724.  v2:= temp @kind object;
  #L4ec726.  v3:= v6.`x6.y$i.e` @type ^`x6.y` @kind object;
  #L4ec72a.  call temp:= `c`(v3) @signature `Lx6/y;.c:(Lx6/y;)Lz6/e;` @kind static;
  #L4ec730.  v3:= temp @kind object;
  #L4ec732.  call temp:= `c`(v0) @signature `Lx6/c0;.c:()Lx6/l;` @kind virtual;
  #L4ec738.  v4:= temp @kind object;
  #L4ec73a.  call `i`(v3, v4, v2) @signature `Lz6/e;.i:(Lx6/l;Lf7/n;)V` @kind interface;
  #L4ec740.  goto L4ec778;
  #L4ec742.  call temp:= `a`(v0) @signature `Lx6/c0;.a:()Lx6/b;` @kind virtual;
  #L4ec748.  v3:= temp @kind object;
  #L4ec74a.  v4:= v6.`x6.y$i.e` @type ^`x6.y` @kind object;
  #L4ec74e.  call temp:= `c`(v0) @signature `Lx6/c0;.c:()Lx6/l;` @kind virtual;
  #L4ec754.  v5:= temp @kind object;
  #L4ec756.  call temp:= `f`(v3, v4, v5, v2) @signature `Lx6/t;.f:(Lx6/b;Lx6/y;Lx6/l;Ljava/util/Map;)Lx6/b;` @kind static;
  #L4ec75c.  v2:= temp @kind object;
  #L4ec75e.  v3:= v6.`x6.y$i.e` @type ^`x6.y` @kind object;
  #L4ec762.  call temp:= `c`(v3) @signature `Lx6/y;.c:(Lx6/y;)Lz6/e;` @kind static;
  #L4ec768.  v3:= temp @kind object;
  #L4ec76a.  call temp:= `c`(v0) @signature `Lx6/c0;.c:()Lx6/l;` @kind virtual;
  #L4ec770.  v4:= temp @kind object;
  #L4ec772.  call `l`(v3, v4, v2) @signature `Lz6/e;.l:(Lx6/l;Lx6/b;)V` @kind interface;
  #L4ec778.  if v1 != 0 then goto L4ec786;
  #L4ec77c.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4ec782.  v0:= temp @kind object;
  #L4ec784.  return v0 @kind object;
  #L4ec786.  call temp:= `f`() @signature `La7/d;.f:()La7/d;` @kind static;
  #L4ec78c.  v1:= temp @kind object;
  #L4ec78e.  call temp:= `e`(v0) @signature `Lx6/c0;.e:()Z` @kind virtual;
  #L4ec794.  v2:= temp;
  #L4ec796.  if v2 == 0 then goto L4ec7b0;
  #L4ec79a.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4ec7a0.  v2:= temp @kind object;
  #L4ec7a2.  v3:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4ec7a6.  call temp:= `Y`(v1, v2, v3) @signature `La7/d;.Y:(Lx6/l;Ljava/lang/Object;)La7/d;` @kind virtual;
  #L4ec7ac.  v1:= temp @kind object;
  #L4ec7ae.  goto L4ec7f2;
  #L4ec7b0.  call temp:= `a`(v0) @signature `Lx6/c0;.a:()Lx6/b;` @kind virtual;
  #L4ec7b6.  v2:= temp @kind object;
  #L4ec7b8.  call temp:= `iterator`(v2) @signature `Lx6/b;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4ec7be.  v2:= temp @kind object;
  #L4ec7c0.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ec7c6.  v3:= temp;
  #L4ec7c8.  if v3 == 0 then goto L4ec7f2;
  #L4ec7cc.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ec7d2.  v3:= temp @kind object;
  #L4ec7d4.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L4ec7d8.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4ec7de.  v3:= temp @kind object;
  #L4ec7e0.  v3:= (`x6.l`) v3 @kind object;
  #L4ec7e4.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4ec7e8.  call temp:= `Y`(v1, v3, v4) @signature `La7/d;.Y:(Lx6/l;Ljava/lang/Object;)La7/d;` @kind virtual;
  #L4ec7ee.  v1:= temp @kind object;
  #L4ec7f0.  goto L4ec7c0;
  #L4ec7f2.  v2:= v6.`x6.y$i.e` @type ^`x6.y` @kind object;
  #L4ec7f6.  v3:= new `y6.a`;
  #L4ec7fa.  call temp:= `c`(v0) @signature `Lx6/c0;.c:()Lx6/l;` @kind virtual;
  #L4ec800.  v0:= temp @kind object;
  #L4ec802.  v4:= v6.`x6.y$i.c` @type ^`boolean` @kind boolean;
  #L4ec806.  call `<init>`(v3, v0, v1, v4) @signature `Ly6/a;.<init>:(Lx6/l;La7/d;Z)V` @kind direct;
  #L4ec80c.  call temp:= `k`(v2, v3) @signature `Lx6/y;.k:(Lx6/y;Ly6/d;)Ljava/util/List;` @kind static;
  #L4ec812.  v0:= temp @kind object;
  #L4ec814.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`x6.y$i` v1 @kind this) @signature `Lx6/y$i;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4ec674.  call temp:= `a`(v1) @signature `Lx6/y$i;.a:()Ljava/util/List;` @kind virtual;
  #L4ec67a.  v0:= temp @kind object;
  #L4ec67c.  return v0 @kind object;
}
