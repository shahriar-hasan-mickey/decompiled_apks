record `x6.g0` @kind class @AccessFlag PUBLIC {
  `x6.b` `x6.g0.a` @AccessFlag PRIVATE;
  `java.util.List` `x6.g0.b` @AccessFlag PRIVATE;
  `java.lang.Long` `x6.g0.c` @AccessFlag PRIVATE;
}
global `a7.i` `@@x6.g0.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx6/g0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4ef084.  v0:= new `x6.g0$b`;
  #L4ef088.  call `<init>`(v0) @signature `Lx6/g0$b;.<init>:()V` @kind direct;
  #L4ef08e.  `@@x6.g0.d` @type ^`a7.i` := v0 @kind object;
  #L4ef092.  return @kind void;
}
procedure `void` `<init>`(`x6.g0` v2 @kind this) @signature `Lx6/g0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4ef0a4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ef0aa.  call temp:= `y`() @signature `Lx6/b;.y:()Lx6/b;` @kind static;
  #L4ef0b0.  v0:= temp @kind object;
  #L4ef0b2.  v2.`x6.g0.a` @type ^`x6.b` := v0 @kind object;
  #L4ef0b6.  v0:= new `java.util.ArrayList`;
  #L4ef0ba.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4ef0c0.  v2.`x6.g0.b` @type ^`java.util.List` := v0 @kind object;
  #L4ef0c4.  v0:= -1L;
  #L4ef0c8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4ef0ce.  v0:= temp @kind object;
  #L4ef0d0.  v2.`x6.g0.c` @type ^`java.lang.Long` := v0 @kind object;
  #L4ef0d4.  return @kind void;
}
procedure `x6.b` `j`(`java.util.List` v4 @kind object, `a7.i` v5 @kind object, `x6.l` v6 @kind object) @signature `Lx6/g0;.j:(Ljava/util/List;La7/i;Lx6/l;)Lx6/b;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4ef240.  call temp:= `y`() @signature `Lx6/b;.y:()Lx6/b;` @kind static;
  #L4ef246.  v0:= temp @kind object;
  #L4ef248.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4ef24e.  v4:= temp @kind object;
  #L4ef250.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ef256.  v1:= temp;
  #L4ef258.  if v1 == 0 then goto L4ef352;
  #L4ef25c.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ef262.  v1:= temp @kind object;
  #L4ef264.  v1:= (`x6.c0`) v1 @kind object;
  #L4ef268.  call temp:= `a`(v5, v1) @signature `La7/i;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L4ef26e.  v2:= temp;
  #L4ef270.  if v2 == 0 then goto L4ef250;
  #L4ef274.  call temp:= `c`(v1) @signature `Lx6/c0;.c:()Lx6/l;` @kind virtual;
  #L4ef27a.  v2:= temp @kind object;
  #L4ef27c.  call temp:= `e`(v1) @signature `Lx6/c0;.e:()Z` @kind virtual;
  #L4ef282.  v3:= temp;
  #L4ef284.  if v3 == 0 then goto L4ef2e4;
  #L4ef288.  call temp:= `e0`(v6, v2) @signature `Lx6/l;.e0:(Lx6/l;)Z` @kind virtual;
  #L4ef28e.  v3:= temp;
  #L4ef290.  if v3 == 0 then goto L4ef2ae;
  #L4ef294.  call temp:= `j0`(v6, v2) @signature `Lx6/l;.j0:(Lx6/l;Lx6/l;)Lx6/l;` @kind static;
  #L4ef29a.  v2:= temp @kind object;
  #L4ef29c.  call temp:= `b`(v1) @signature `Lx6/c0;.b:()Lf7/n;` @kind virtual;
  #L4ef2a2.  v1:= temp @kind object;
  #L4ef2a4.  call temp:= `f`(v0, v2, v1) @signature `Lx6/b;.f:(Lx6/l;Lf7/n;)Lx6/b;` @kind virtual;
  #L4ef2aa.  v0:= temp @kind object;
  #L4ef2ac.  goto L4ef250;
  #L4ef2ae.  call temp:= `e0`(v2, v6) @signature `Lx6/l;.e0:(Lx6/l;)Z` @kind virtual;
  #L4ef2b4.  v3:= temp;
  #L4ef2b6.  if v3 == 0 then goto L4ef250;
  #L4ef2ba.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4ef2c0.  v3:= temp @kind object;
  #L4ef2c2.  call temp:= `b`(v1) @signature `Lx6/c0;.b:()Lf7/n;` @kind virtual;
  #L4ef2c8.  v1:= temp @kind object;
  #L4ef2ca.  call temp:= `j0`(v2, v6) @signature `Lx6/l;.j0:(Lx6/l;Lx6/l;)Lx6/l;` @kind static;
  #L4ef2d0.  v2:= temp @kind object;
  #L4ef2d2.  call temp:= `H`(v1, v2) @signature `Lf7/n;.H:(Lx6/l;)Lf7/n;` @kind interface;
  #L4ef2d8.  v1:= temp @kind object;
  #L4ef2da.  call temp:= `f`(v0, v3, v1) @signature `Lx6/b;.f:(Lx6/l;Lf7/n;)Lx6/b;` @kind virtual;
  #L4ef2e0.  v0:= temp @kind object;
  #L4ef2e2.  goto L4ef250;
  #L4ef2e4.  call temp:= `e0`(v6, v2) @signature `Lx6/l;.e0:(Lx6/l;)Z` @kind virtual;
  #L4ef2ea.  v3:= temp;
  #L4ef2ec.  if v3 == 0 then goto L4ef30a;
  #L4ef2f0.  call temp:= `j0`(v6, v2) @signature `Lx6/l;.j0:(Lx6/l;Lx6/l;)Lx6/l;` @kind static;
  #L4ef2f6.  v2:= temp @kind object;
  #L4ef2f8.  call temp:= `a`(v1) @signature `Lx6/c0;.a:()Lx6/b;` @kind virtual;
  #L4ef2fe.  v1:= temp @kind object;
  #L4ef300.  call temp:= `h`(v0, v2, v1) @signature `Lx6/b;.h:(Lx6/l;Lx6/b;)Lx6/b;` @kind virtual;
  #L4ef306.  v0:= temp @kind object;
  #L4ef308.  goto L4ef250;
  #L4ef30a.  call temp:= `e0`(v2, v6) @signature `Lx6/l;.e0:(Lx6/l;)Z` @kind virtual;
  #L4ef310.  v3:= temp;
  #L4ef312.  if v3 == 0 then goto L4ef250;
  #L4ef316.  call temp:= `j0`(v2, v6) @signature `Lx6/l;.j0:(Lx6/l;Lx6/l;)Lx6/l;` @kind static;
  #L4ef31c.  v2:= temp @kind object;
  #L4ef31e.  call temp:= `isEmpty`(v2) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L4ef324.  v3:= temp;
  #L4ef326.  if v3 == 0 then goto L4ef334;
  #L4ef32a.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4ef330.  v2:= temp @kind object;
  #L4ef332.  goto L4ef2f8;
  #L4ef334.  call temp:= `a`(v1) @signature `Lx6/c0;.a:()Lx6/b;` @kind virtual;
  #L4ef33a.  v1:= temp @kind object;
  #L4ef33c.  call temp:= `Q`(v1, v2) @signature `Lx6/b;.Q:(Lx6/l;)Lf7/n;` @kind virtual;
  #L4ef342.  v1:= temp @kind object;
  #L4ef344.  if v1 == 0 then goto L4ef250;
  #L4ef348.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4ef34e.  v2:= temp @kind object;
  #L4ef350.  goto L4ef2a4;
  #L4ef352.  return v0 @kind object;
}
procedure `boolean` `l`(`x6.g0` v3 @kind this, `x6.c0` v4 @kind object, `x6.l` v5 @kind object) @signature `Lx6/g0;.l:(Lx6/c0;Lx6/l;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4eeaac.  call temp:= `e`(v4) @signature `Lx6/c0;.e:()Z` @kind virtual;
  #L4eeab2.  v0:= temp;
  #L4eeab4.  if v0 == 0 then goto L4eeaca;
  #L4eeab8.  call temp:= `c`(v4) @signature `Lx6/c0;.c:()Lx6/l;` @kind virtual;
  #L4eeabe.  v4:= temp @kind object;
  #L4eeac0.  call temp:= `e0`(v4, v5) @signature `Lx6/l;.e0:(Lx6/l;)Z` @kind virtual;
  #L4eeac6.  v4:= temp;
  #L4eeac8.  return v4;
  #L4eeaca.  call temp:= `a`(v4) @signature `Lx6/c0;.a:()Lx6/b;` @kind virtual;
  #L4eead0.  v0:= temp @kind object;
  #L4eead2.  call temp:= `iterator`(v0) @signature `Lx6/b;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4eead8.  v0:= temp @kind object;
  #L4eeada.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eeae0.  v1:= temp;
  #L4eeae2.  if v1 == 0 then goto L4eeb1e;
  #L4eeae6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eeaec.  v1:= temp @kind object;
  #L4eeaee.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L4eeaf2.  call temp:= `c`(v4) @signature `Lx6/c0;.c:()Lx6/l;` @kind virtual;
  #L4eeaf8.  v2:= temp @kind object;
  #L4eeafa.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4eeb00.  v1:= temp @kind object;
  #L4eeb02.  v1:= (`x6.l`) v1 @kind object;
  #L4eeb06.  call temp:= `c0`(v2, v1) @signature `Lx6/l;.c0:(Lx6/l;)Lx6/l;` @kind virtual;
  #L4eeb0c.  v1:= temp @kind object;
  #L4eeb0e.  call temp:= `e0`(v1, v5) @signature `Lx6/l;.e0:(Lx6/l;)Z` @kind virtual;
  #L4eeb14.  v1:= temp;
  #L4eeb16.  if v1 == 0 then goto L4eeada;
  #L4eeb1a.  v4:= 1I;
  #L4eeb1c.  return v4;
  #L4eeb1e.  v4:= 0I;
  #L4eeb20.  return v4;
}
procedure `void` `n`(`x6.g0` v3 @kind this) @signature `Lx6/g0;.n:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4ef1cc.  v0:= v3.`x6.g0.b` @type ^`java.util.List` @kind object;
  #L4ef1d0.  v1:= `@@x6.g0.d` @type ^`a7.i` @kind object;
  #L4ef1d4.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4ef1da.  v2:= temp @kind object;
  #L4ef1dc.  call temp:= `j`(v0, v1, v2) @signature `Lx6/g0;.j:(Ljava/util/List;La7/i;Lx6/l;)Lx6/b;` @kind static;
  #L4ef1e2.  v0:= temp @kind object;
  #L4ef1e4.  v3.`x6.g0.a` @type ^`x6.b` := v0 @kind object;
  #L4ef1e8.  v0:= v3.`x6.g0.b` @type ^`java.util.List` @kind object;
  #L4ef1ec.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4ef1f2.  v0:= temp;
  #L4ef1f4.  if v0 <= 0 then goto L4ef21e;
  #L4ef1f8.  v0:= v3.`x6.g0.b` @type ^`java.util.List` @kind object;
  #L4ef1fc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4ef202.  v1:= temp;
  #L4ef204.  v1:= v1 + -1;
  #L4ef208.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4ef20e.  v0:= temp @kind object;
  #L4ef210.  v0:= (`x6.c0`) v0 @kind object;
  #L4ef214.  call temp:= `d`(v0) @signature `Lx6/c0;.d:()J` @kind virtual;
  #L4ef21a.  v0:= temp @kind wide;
  #L4ef21c.  goto L4ef222;
  #L4ef21e.  v0:= -1L;
  #L4ef222.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4ef228.  v0:= temp @kind object;
  #L4ef22a.  v3.`x6.g0.c` @type ^`java.lang.Long` := v0 @kind object;
  #L4ef22e.  return @kind void;
}
procedure `void` `a`(`x6.g0` v5 @kind this, `x6.l` v6 @kind object, `x6.b` v7 @kind object, `java.lang.Long` v8 @kind object) @signature `Lx6/g0;.a:(Lx6/l;Lx6/b;Ljava/lang/Long;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ef0e8.  call temp:= `longValue`(v8) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4ef0ee.  v0:= temp @kind wide;
  #L4ef0f0.  v2:= v5.`x6.g0.c` @type ^`java.lang.Long` @kind object;
  #L4ef0f4.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4ef0fa.  v2:= temp @kind wide;
  #L4ef0fc.  v4:= lcmp(v0, v2);
  #L4ef100.  if v4 <= 0 then goto L4ef108;
  #L4ef104.  v0:= 1I;
  #L4ef106.  goto L4ef10a;
  #L4ef108.  v0:= 0I;
  #L4ef10a.  call `f`(v0) @signature `La7/m;.f:(Z)V` @kind static;
  #L4ef110.  v0:= v5.`x6.g0.b` @type ^`java.util.List` @kind object;
  #L4ef114.  v1:= new `x6.c0`;
  #L4ef118.  call temp:= `longValue`(v8) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4ef11e.  v2:= temp @kind wide;
  #L4ef120.  call `<init>`(v1, v2, v6, v7) @signature `Lx6/c0;.<init>:(JLx6/l;Lx6/b;)V` @kind direct;
  #L4ef126.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4ef12c.  v0:= v5.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4ef130.  call temp:= `h`(v0, v6, v7) @signature `Lx6/b;.h:(Lx6/l;Lx6/b;)Lx6/b;` @kind virtual;
  #L4ef136.  v6:= temp @kind object;
  #L4ef138.  v5.`x6.g0.a` @type ^`x6.b` := v6 @kind object;
  #L4ef13c.  v5.`x6.g0.c` @type ^`java.lang.Long` := v8 @kind object;
  #L4ef140.  return @kind void;
}
procedure `void` `b`(`x6.g0` v8 @kind this, `x6.l` v9 @kind object, `f7.n` v10 @kind object, `java.lang.Long` v11 @kind object, `boolean` v12 ) @signature `Lx6/g0;.b:(Lx6/l;Lf7/n;Ljava/lang/Long;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4ef154.  call temp:= `longValue`(v11) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4ef15a.  v0:= temp @kind wide;
  #L4ef15c.  v2:= v8.`x6.g0.c` @type ^`java.lang.Long` @kind object;
  #L4ef160.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4ef166.  v2:= temp @kind wide;
  #L4ef168.  v4:= lcmp(v0, v2);
  #L4ef16c.  if v4 <= 0 then goto L4ef174;
  #L4ef170.  v0:= 1I;
  #L4ef172.  goto L4ef176;
  #L4ef174.  v0:= 0I;
  #L4ef176.  call `f`(v0) @signature `La7/m;.f:(Z)V` @kind static;
  #L4ef17c.  v0:= v8.`x6.g0.b` @type ^`java.util.List` @kind object;
  #L4ef180.  v7:= new `x6.c0`;
  #L4ef184.  call temp:= `longValue`(v11) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4ef18a.  v2:= temp @kind wide;
  #L4ef18c.  v1:= v7 @kind object;
  #L4ef18e.  v4:= v9 @kind object;
  #L4ef190.  v5:= v10 @kind object;
  #L4ef192.  v6:= v12;
  #L4ef194.  call `<init>`(v1, v2, v4, v5, v6) @signature `Lx6/c0;.<init>:(JLx6/l;Lf7/n;Z)V` @kind direct;
  #L4ef19a.  call temp:= `add`(v0, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4ef1a0.  if v12 == 0 then goto L4ef1b4;
  #L4ef1a4.  v12:= v8.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4ef1a8.  call temp:= `f`(v12, v9, v10) @signature `Lx6/b;.f:(Lx6/l;Lf7/n;)Lx6/b;` @kind virtual;
  #L4ef1ae.  v9:= temp @kind object;
  #L4ef1b0.  v8.`x6.g0.a` @type ^`x6.b` := v9 @kind object;
  #L4ef1b4.  v8.`x6.g0.c` @type ^`java.lang.Long` := v11 @kind object;
  #L4ef1b8.  return @kind void;
}
procedure `f7.n` `c`(`x6.g0` v1 @kind this, `x6.l` v2 @kind object, `f7.b` v3 @kind object, `c7.a` v4 @kind object) @signature `Lx6/g0;.c:(Lx6/l;Lf7/b;Lc7/a;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eed38.  call temp:= `b0`(v2, v3) @signature `Lx6/l;.b0:(Lf7/b;)Lx6/l;` @kind virtual;
  #L4eed3e.  v2:= temp @kind object;
  #L4eed40.  v0:= v1.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4eed44.  call temp:= `Q`(v0, v2) @signature `Lx6/b;.Q:(Lx6/l;)Lf7/n;` @kind virtual;
  #L4eed4a.  v0:= temp @kind object;
  #L4eed4c.  if v0 == 0 then goto L4eed52;
  #L4eed50.  return v0 @kind object;
  #L4eed52.  call temp:= `c`(v4, v3) @signature `Lc7/a;.c:(Lf7/b;)Z` @kind virtual;
  #L4eed58.  v0:= temp;
  #L4eed5a.  if v0 == 0 then goto L4eed84;
  #L4eed5e.  v0:= v1.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4eed62.  call temp:= `p`(v0, v2) @signature `Lx6/b;.p:(Lx6/l;)Lx6/b;` @kind virtual;
  #L4eed68.  v2:= temp @kind object;
  #L4eed6a.  call temp:= `b`(v4) @signature `Lc7/a;.b:()Lf7/n;` @kind virtual;
  #L4eed70.  v4:= temp @kind object;
  #L4eed72.  call temp:= `z`(v4, v3) @signature `Lf7/n;.z:(Lf7/b;)Lf7/n;` @kind interface;
  #L4eed78.  v3:= temp @kind object;
  #L4eed7a.  call temp:= `l`(v2, v3) @signature `Lx6/b;.l:(Lf7/n;)Lf7/n;` @kind virtual;
  #L4eed80.  v2:= temp @kind object;
  #L4eed82.  return v2 @kind object;
  #L4eed84.  v2:= 0I;
  #L4eed86.  return v2 @kind object;
}
procedure `f7.n` `d`(`x6.g0` v3 @kind this, `x6.l` v4 @kind object, `f7.n` v5 @kind object, `java.util.List` v6 @kind object, `boolean` v7 ) @signature `Lx6/g0;.d:(Lx6/l;Lf7/n;Ljava/util/List;Z)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4eed98.  call temp:= `isEmpty`(v6) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4eed9e.  v0:= temp;
  #L4eeda0.  v1:= 0I;
  #L4eeda2.  if v0 == 0 then goto L4eee08;
  #L4eeda6.  if v7 != 0 then goto L4eee08;
  #L4eedaa.  v6:= v3.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4eedae.  call temp:= `Q`(v6, v4) @signature `Lx6/b;.Q:(Lx6/l;)Lf7/n;` @kind virtual;
  #L4eedb4.  v6:= temp @kind object;
  #L4eedb6.  if v6 == 0 then goto L4eedbc;
  #L4eedba.  return v6 @kind object;
  #L4eedbc.  v6:= v3.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4eedc0.  call temp:= `p`(v6, v4) @signature `Lx6/b;.p:(Lx6/l;)Lx6/b;` @kind virtual;
  #L4eedc6.  v4:= temp @kind object;
  #L4eedc8.  call temp:= `isEmpty`(v4) @signature `Lx6/b;.isEmpty:()Z` @kind virtual;
  #L4eedce.  v6:= temp;
  #L4eedd0.  if v6 == 0 then goto L4eedd6;
  #L4eedd4.  return v5 @kind object;
  #L4eedd6.  if v5 != 0 then goto L4eedf0;
  #L4eedda.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4eede0.  v6:= temp @kind object;
  #L4eede2.  call temp:= `T`(v4, v6) @signature `Lx6/b;.T:(Lx6/l;)Z` @kind virtual;
  #L4eede8.  v6:= temp;
  #L4eedea.  if v6 != 0 then goto L4eedf0;
  #L4eedee.  return v1 @kind object;
  #L4eedf0.  if v5 == 0 then goto L4eedf6;
  #L4eedf4.  goto L4eedfe;
  #L4eedf6.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L4eedfc.  v5:= temp @kind object;
  #L4eedfe.  call temp:= `l`(v4, v5) @signature `Lx6/b;.l:(Lf7/n;)Lf7/n;` @kind virtual;
  #L4eee04.  v4:= temp @kind object;
  #L4eee06.  return v4 @kind object;
  #L4eee08.  v0:= v3.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4eee0c.  call temp:= `p`(v0, v4) @signature `Lx6/b;.p:(Lx6/l;)Lx6/b;` @kind virtual;
  #L4eee12.  v0:= temp @kind object;
  #L4eee14.  if v7 != 0 then goto L4eee26;
  #L4eee18.  call temp:= `isEmpty`(v0) @signature `Lx6/b;.isEmpty:()Z` @kind virtual;
  #L4eee1e.  v2:= temp;
  #L4eee20.  if v2 == 0 then goto L4eee26;
  #L4eee24.  return v5 @kind object;
  #L4eee26.  if v7 != 0 then goto L4eee44;
  #L4eee2a.  if v5 != 0 then goto L4eee44;
  #L4eee2e.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4eee34.  v2:= temp @kind object;
  #L4eee36.  call temp:= `T`(v0, v2) @signature `Lx6/b;.T:(Lx6/l;)Z` @kind virtual;
  #L4eee3c.  v0:= temp;
  #L4eee3e.  if v0 != 0 then goto L4eee44;
  #L4eee42.  return v1 @kind object;
  #L4eee44.  v0:= new `x6.g0$a`;
  #L4eee48.  call `<init>`(v0, v3, v7, v6, v4) @signature `Lx6/g0$a;.<init>:(Lx6/g0;ZLjava/util/List;Lx6/l;)V` @kind direct;
  #L4eee4e.  v6:= v3.`x6.g0.b` @type ^`java.util.List` @kind object;
  #L4eee52.  call temp:= `j`(v6, v0, v4) @signature `Lx6/g0;.j:(Ljava/util/List;La7/i;Lx6/l;)Lx6/b;` @kind static;
  #L4eee58.  v4:= temp @kind object;
  #L4eee5a.  if v5 == 0 then goto L4eee60;
  #L4eee5e.  goto L4eee68;
  #L4eee60.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L4eee66.  v5:= temp @kind object;
  #L4eee68.  call temp:= `l`(v4, v5) @signature `Lx6/b;.l:(Lf7/n;)Lf7/n;` @kind virtual;
  #L4eee6e.  v4:= temp @kind object;
  #L4eee70.  return v4 @kind object;
}
procedure `f7.n` `e`(`x6.g0` v6 @kind this, `x6.l` v7 @kind object, `f7.n` v8 @kind object) @signature `Lx6/g0;.e:(Lx6/l;Lf7/n;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4eee84.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L4eee8a.  v0:= temp @kind object;
  #L4eee8c.  v1:= v6.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4eee90.  call temp:= `Q`(v1, v7) @signature `Lx6/b;.Q:(Lx6/l;)Lf7/n;` @kind virtual;
  #L4eee96.  v1:= temp @kind object;
  #L4eee98.  if v1 == 0 then goto L4eeee4;
  #L4eee9c.  call temp:= `A`(v1) @signature `Lf7/n;.A:()Z` @kind interface;
  #L4eeea2.  v7:= temp;
  #L4eeea4.  if v7 != 0 then goto L4eeee2;
  #L4eeea8.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4eeeae.  v7:= temp @kind object;
  #L4eeeb0.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eeeb6.  v8:= temp;
  #L4eeeb8.  if v8 == 0 then goto L4eeee2;
  #L4eeebc.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eeec2.  v8:= temp @kind object;
  #L4eeec4.  v8:= (`f7.m`) v8 @kind object;
  #L4eeec8.  call temp:= `c`(v8) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L4eeece.  v1:= temp @kind object;
  #L4eeed0.  call temp:= `d`(v8) @signature `Lf7/m;.d:()Lf7/n;` @kind virtual;
  #L4eeed6.  v8:= temp @kind object;
  #L4eeed8.  call temp:= `m`(v0, v1, v8) @signature `Lf7/n;.m:(Lf7/b;Lf7/n;)Lf7/n;` @kind interface;
  #L4eeede.  v0:= temp @kind object;
  #L4eeee0.  goto L4eeeb0;
  #L4eeee2.  return v0 @kind object;
  #L4eeee4.  v1:= v6.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4eeee8.  call temp:= `p`(v1, v7) @signature `Lx6/b;.p:(Lx6/l;)Lx6/b;` @kind virtual;
  #L4eeeee.  v7:= temp @kind object;
  #L4eeef0.  call temp:= `iterator`(v8) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4eeef6.  v8:= temp @kind object;
  #L4eeef8.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eeefe.  v1:= temp;
  #L4eef00.  if v1 == 0 then goto L4eef58;
  #L4eef04.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eef0a.  v1:= temp @kind object;
  #L4eef0c.  v1:= (`f7.m`) v1 @kind object;
  #L4eef10.  v2:= new `x6.l`;
  #L4eef14.  v3:= 1I;
  #L4eef16.  v3:= new `f7.b`[v3];
  #L4eef1a.  v4:= 0I;
  #L4eef1c.  call temp:= `c`(v1) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L4eef22.  v5:= temp @kind object;
  #L4eef24.  v3[v4]:= v5 @kind object;
  #L4eef28.  call `<init>`(v2, v3) @signature `Lx6/l;.<init>:([Lf7/b;)V` @kind direct;
  #L4eef2e.  call temp:= `p`(v7, v2) @signature `Lx6/b;.p:(Lx6/l;)Lx6/b;` @kind virtual;
  #L4eef34.  v2:= temp @kind object;
  #L4eef36.  call temp:= `d`(v1) @signature `Lf7/m;.d:()Lf7/n;` @kind virtual;
  #L4eef3c.  v3:= temp @kind object;
  #L4eef3e.  call temp:= `l`(v2, v3) @signature `Lx6/b;.l:(Lf7/n;)Lf7/n;` @kind virtual;
  #L4eef44.  v2:= temp @kind object;
  #L4eef46.  call temp:= `c`(v1) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L4eef4c.  v1:= temp @kind object;
  #L4eef4e.  call temp:= `m`(v0, v1, v2) @signature `Lf7/n;.m:(Lf7/b;Lf7/n;)Lf7/n;` @kind interface;
  #L4eef54.  v0:= temp @kind object;
  #L4eef56.  goto L4eeef8;
  #L4eef58.  call temp:= `O`(v7) @signature `Lx6/b;.O:()Ljava/util/List;` @kind virtual;
  #L4eef5e.  v7:= temp @kind object;
  #L4eef60.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4eef66.  v7:= temp @kind object;
  #L4eef68.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eef6e.  v8:= temp;
  #L4eef70.  if v8 == 0 then goto L4eef9a;
  #L4eef74.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eef7a.  v8:= temp @kind object;
  #L4eef7c.  v8:= (`f7.m`) v8 @kind object;
  #L4eef80.  call temp:= `c`(v8) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L4eef86.  v1:= temp @kind object;
  #L4eef88.  call temp:= `d`(v8) @signature `Lf7/m;.d:()Lf7/n;` @kind virtual;
  #L4eef8e.  v8:= temp @kind object;
  #L4eef90.  call temp:= `m`(v0, v1, v8) @signature `Lf7/n;.m:(Lf7/b;Lf7/n;)Lf7/n;` @kind interface;
  #L4eef96.  v0:= temp @kind object;
  #L4eef98.  goto L4eef68;
  #L4eef9a.  return v0 @kind object;
}
procedure `f7.n` `f`(`x6.g0` v1 @kind this, `x6.l` v2 @kind object, `x6.l` v3 @kind object, `f7.n` v4 @kind object, `f7.n` v5 @kind object) @signature `Lx6/g0;.f:(Lx6/l;Lx6/l;Lf7/n;Lf7/n;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4eefac.  if v4 != 0 then goto L4eefba;
  #L4eefb0.  if v5 == 0 then goto L4eefb6;
  #L4eefb4.  goto L4eefba;
  #L4eefb6.  v4:= 0I;
  #L4eefb8.  goto L4eefbc;
  #L4eefba.  v4:= 1I;
  #L4eefbc.  v0:= "Either existingEventSnap or existingServerSnap must exist" @kind object;
  #L4eefc0.  call `g`(v4, v0) @signature `La7/m;.g:(ZLjava/lang/String;)V` @kind static;
  #L4eefc6.  call temp:= `c0`(v2, v3) @signature `Lx6/l;.c0:(Lx6/l;)Lx6/l;` @kind virtual;
  #L4eefcc.  v2:= temp @kind object;
  #L4eefce.  v4:= v1.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4eefd2.  call temp:= `T`(v4, v2) @signature `Lx6/b;.T:(Lx6/l;)Z` @kind virtual;
  #L4eefd8.  v4:= temp;
  #L4eefda.  if v4 == 0 then goto L4eefe2;
  #L4eefde.  v2:= 0I;
  #L4eefe0.  return v2 @kind object;
  #L4eefe2.  v4:= v1.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4eefe6.  call temp:= `p`(v4, v2) @signature `Lx6/b;.p:(Lx6/l;)Lx6/b;` @kind virtual;
  #L4eefec.  v2:= temp @kind object;
  #L4eefee.  call temp:= `isEmpty`(v2) @signature `Lx6/b;.isEmpty:()Z` @kind virtual;
  #L4eeff4.  v4:= temp;
  #L4eeff6.  if v4 == 0 then goto L4ef004;
  #L4eeffa.  call temp:= `H`(v5, v3) @signature `Lf7/n;.H:(Lx6/l;)Lf7/n;` @kind interface;
  #L4ef000.  v2:= temp @kind object;
  #L4ef002.  return v2 @kind object;
  #L4ef004.  call temp:= `H`(v5, v3) @signature `Lf7/n;.H:(Lx6/l;)Lf7/n;` @kind interface;
  #L4ef00a.  v3:= temp @kind object;
  #L4ef00c.  call temp:= `l`(v2, v3) @signature `Lx6/b;.l:(Lf7/n;)Lf7/n;` @kind virtual;
  #L4ef012.  v2:= temp @kind object;
  #L4ef014.  return v2 @kind object;
}
procedure `f7.m` `g`(`x6.g0` v2 @kind this, `x6.l` v3 @kind object, `f7.n` v4 @kind object, `f7.m` v5 @kind object, `boolean` v6 , `f7.h` v7 @kind object) @signature `Lx6/g0;.g:(Lx6/l;Lf7/n;Lf7/m;ZLf7/h;)Lf7/m;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4eecb4.  v0:= v2.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4eecb8.  call temp:= `p`(v0, v3) @signature `Lx6/b;.p:(Lx6/l;)Lx6/b;` @kind virtual;
  #L4eecbe.  v3:= temp @kind object;
  #L4eecc0.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4eecc6.  v0:= temp @kind object;
  #L4eecc8.  call temp:= `Q`(v3, v0) @signature `Lx6/b;.Q:(Lx6/l;)Lf7/n;` @kind virtual;
  #L4eecce.  v0:= temp @kind object;
  #L4eecd0.  v1:= 0I;
  #L4eecd2.  if v0 == 0 then goto L4eecd8;
  #L4eecd6.  goto L4eece4;
  #L4eecd8.  if v4 == 0 then goto L4eed24;
  #L4eecdc.  call temp:= `l`(v3, v4) @signature `Lx6/b;.l:(Lf7/n;)Lf7/n;` @kind virtual;
  #L4eece2.  v0:= temp @kind object;
  #L4eece4.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4eecea.  v3:= temp @kind object;
  #L4eecec.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eecf2.  v4:= temp;
  #L4eecf4.  if v4 == 0 then goto L4eed24;
  #L4eecf8.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eecfe.  v4:= temp @kind object;
  #L4eed00.  v4:= (`f7.m`) v4 @kind object;
  #L4eed04.  call temp:= `a`(v7, v4, v5, v6) @signature `Lf7/h;.a:(Lf7/m;Lf7/m;Z)I` @kind virtual;
  #L4eed0a.  v0:= temp;
  #L4eed0c.  if v0 <= 0 then goto L4eecec;
  #L4eed10.  if v1 == 0 then goto L4eed20;
  #L4eed14.  call temp:= `a`(v7, v4, v1, v6) @signature `Lf7/h;.a:(Lf7/m;Lf7/m;Z)I` @kind virtual;
  #L4eed1a.  v0:= temp;
  #L4eed1c.  if v0 >= 0 then goto L4eecec;
  #L4eed20.  v1:= v4 @kind object;
  #L4eed22.  goto L4eecec;
  #L4eed24.  return v1 @kind object;
}
procedure `x6.h0` `h`(`x6.g0` v1 @kind this, `x6.l` v2 @kind object) @signature `Lx6/g0;.h:(Lx6/l;)Lx6/h0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ef3b0.  v0:= new `x6.h0`;
  #L4ef3b4.  call `<init>`(v0, v2, v1) @signature `Lx6/h0;.<init>:(Lx6/l;Lx6/g0;)V` @kind direct;
  #L4ef3ba.  return v0 @kind object;
}
procedure `x6.c0` `i`(`x6.g0` v5 @kind this, `long` v6 ) @signature `Lx6/g0;.i:(J)Lx6/c0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4ef364.  v0:= v5.`x6.g0.b` @type ^`java.util.List` @kind object;
  #L4ef368.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4ef36e.  v0:= temp @kind object;
  #L4ef370.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4ef376.  v1:= temp;
  #L4ef378.  if v1 == 0 then goto L4ef39a;
  #L4ef37c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4ef382.  v1:= temp @kind object;
  #L4ef384.  v1:= (`x6.c0`) v1 @kind object;
  #L4ef388.  call temp:= `d`(v1) @signature `Lx6/c0;.d:()J` @kind virtual;
  #L4ef38e.  v2:= temp @kind wide;
  #L4ef390.  v4:= lcmp(v2, v6);
  #L4ef394.  if v4 != 0 then goto L4ef370;
  #L4ef398.  return v1 @kind object;
  #L4ef39a.  v6:= 0I;
  #L4ef39c.  return v6 @kind object;
}
procedure `java.util.List` `k`(`x6.g0` v2 @kind this) @signature `Lx6/g0;.k:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ef048.  v0:= new `java.util.ArrayList`;
  #L4ef04c.  v1:= v2.`x6.g0.b` @type ^`java.util.List` @kind object;
  #L4ef050.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4ef056.  call temp:= `y`() @signature `Lx6/b;.y:()Lx6/b;` @kind static;
  #L4ef05c.  v1:= temp @kind object;
  #L4ef05e.  v2.`x6.g0.a` @type ^`x6.b` := v1 @kind object;
  #L4ef062.  v1:= new `java.util.ArrayList`;
  #L4ef066.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4ef06c.  v2.`x6.g0.b` @type ^`java.util.List` := v1 @kind object;
  #L4ef070.  return v0 @kind object;
}
procedure `boolean` `m`(`x6.g0` v7 @kind this, `long` v8 ) @signature `Lx6/g0;.m:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4eeb34.  v0:= v7.`x6.g0.b` @type ^`java.util.List` @kind object;
  #L4eeb38.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4eeb3e.  v0:= temp @kind object;
  #L4eeb40.  v1:= 0I;
  #L4eeb42.  v2:= 0I;
  #L4eeb44.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eeb4a.  v3:= temp;
  #L4eeb4c.  if v3 == 0 then goto L4eeb74;
  #L4eeb50.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eeb56.  v3:= temp @kind object;
  #L4eeb58.  v3:= (`x6.c0`) v3 @kind object;
  #L4eeb5c.  call temp:= `d`(v3) @signature `Lx6/c0;.d:()J` @kind virtual;
  #L4eeb62.  v4:= temp @kind wide;
  #L4eeb64.  v6:= lcmp(v4, v8);
  #L4eeb68.  if v6 != 0 then goto L4eeb6e;
  #L4eeb6c.  goto L4eeb76;
  #L4eeb6e.  v2:= v2 + 1;
  #L4eeb72.  goto L4eeb44;
  #L4eeb74.  v3:= 0I;
  #L4eeb76.  v8:= 1I;
  #L4eeb78.  if v3 == 0 then goto L4eeb80;
  #L4eeb7c.  v9:= 1I;
  #L4eeb7e.  goto L4eeb82;
  #L4eeb80.  v9:= 0I;
  #L4eeb82.  v0:= "removeWrite called with nonexistent writeId" @kind object;
  #L4eeb86.  call `g`(v9, v0) @signature `La7/m;.g:(ZLjava/lang/String;)V` @kind static;
  #L4eeb8c.  v9:= v7.`x6.g0.b` @type ^`java.util.List` @kind object;
  #L4eeb90.  call temp:= `remove`(v9, v3) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L4eeb96.  call temp:= `f`(v3) @signature `Lx6/c0;.f:()Z` @kind virtual;
  #L4eeb9c.  v9:= temp;
  #L4eeb9e.  v0:= v7.`x6.g0.b` @type ^`java.util.List` @kind object;
  #L4eeba2.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4eeba8.  v0:= temp;
  #L4eebaa.  v0:= v0 - v8 @kind int;
  #L4eebac.  v4:= 0I;
  #L4eebae.  if v9 == 0 then goto L4eec12;
  #L4eebb2.  if v0 < 0 then goto L4eec12;
  #L4eebb6.  v5:= v7.`x6.g0.b` @type ^`java.util.List` @kind object;
  #L4eebba.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4eebc0.  v5:= temp @kind object;
  #L4eebc2.  v5:= (`x6.c0`) v5 @kind object;
  #L4eebc6.  call temp:= `f`(v5) @signature `Lx6/c0;.f:()Z` @kind virtual;
  #L4eebcc.  v6:= temp;
  #L4eebce.  if v6 == 0 then goto L4eec0c;
  #L4eebd2.  if v0 < v2 then goto L4eebee;
  #L4eebd6.  call temp:= `c`(v3) @signature `Lx6/c0;.c:()Lx6/l;` @kind virtual;
  #L4eebdc.  v6:= temp @kind object;
  #L4eebde.  call temp:= `l`(v7, v5, v6) @signature `Lx6/g0;.l:(Lx6/c0;Lx6/l;)Z` @kind direct;
  #L4eebe4.  v6:= temp;
  #L4eebe6.  if v6 == 0 then goto L4eebee;
  #L4eebea.  v9:= 0I;
  #L4eebec.  goto L4eec0c;
  #L4eebee.  call temp:= `c`(v3) @signature `Lx6/c0;.c:()Lx6/l;` @kind virtual;
  #L4eebf4.  v6:= temp @kind object;
  #L4eebf6.  call temp:= `c`(v5) @signature `Lx6/c0;.c:()Lx6/l;` @kind virtual;
  #L4eebfc.  v5:= temp @kind object;
  #L4eebfe.  call temp:= `e0`(v6, v5) @signature `Lx6/l;.e0:(Lx6/l;)Z` @kind virtual;
  #L4eec04.  v5:= temp;
  #L4eec06.  if v5 == 0 then goto L4eec0c;
  #L4eec0a.  v4:= 1I;
  #L4eec0c.  v0:= v0 + -1;
  #L4eec10.  goto L4eebae;
  #L4eec12.  if v9 != 0 then goto L4eec18;
  #L4eec16.  return v1;
  #L4eec18.  if v4 == 0 then goto L4eec24;
  #L4eec1c.  call `n`(v7) @signature `Lx6/g0;.n:()V` @kind direct;
  #L4eec22.  return v8;
  #L4eec24.  call temp:= `e`(v3) @signature `Lx6/c0;.e:()Z` @kind virtual;
  #L4eec2a.  v9:= temp;
  #L4eec2c.  if v9 == 0 then goto L4eec4a;
  #L4eec30.  v9:= v7.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4eec34.  call temp:= `c`(v3) @signature `Lx6/c0;.c:()Lx6/l;` @kind virtual;
  #L4eec3a.  v0:= temp @kind object;
  #L4eec3c.  call temp:= `Y`(v9, v0) @signature `Lx6/b;.Y:(Lx6/l;)Lx6/b;` @kind virtual;
  #L4eec42.  v9:= temp @kind object;
  #L4eec44.  v7.`x6.g0.a` @type ^`x6.b` := v9 @kind object;
  #L4eec48.  goto L4eeca0;
  #L4eec4a.  call temp:= `a`(v3) @signature `Lx6/c0;.a:()Lx6/b;` @kind virtual;
  #L4eec50.  v9:= temp @kind object;
  #L4eec52.  call temp:= `iterator`(v9) @signature `Lx6/b;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4eec58.  v9:= temp @kind object;
  #L4eec5a.  call temp:= `hasNext`(v9) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4eec60.  v0:= temp;
  #L4eec62.  if v0 == 0 then goto L4eeca0;
  #L4eec66.  call temp:= `next`(v9) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4eec6c.  v0:= temp @kind object;
  #L4eec6e.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L4eec72.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4eec78.  v0:= temp @kind object;
  #L4eec7a.  v0:= (`x6.l`) v0 @kind object;
  #L4eec7e.  v1:= v7.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4eec82.  call temp:= `c`(v3) @signature `Lx6/c0;.c:()Lx6/l;` @kind virtual;
  #L4eec88.  v2:= temp @kind object;
  #L4eec8a.  call temp:= `c0`(v2, v0) @signature `Lx6/l;.c0:(Lx6/l;)Lx6/l;` @kind virtual;
  #L4eec90.  v0:= temp @kind object;
  #L4eec92.  call temp:= `Y`(v1, v0) @signature `Lx6/b;.Y:(Lx6/l;)Lx6/b;` @kind virtual;
  #L4eec98.  v0:= temp @kind object;
  #L4eec9a.  v7.`x6.g0.a` @type ^`x6.b` := v0 @kind object;
  #L4eec9e.  goto L4eec5a;
  #L4eeca0.  return v8;
}
procedure `f7.n` `o`(`x6.g0` v1 @kind this, `x6.l` v2 @kind object) @signature `Lx6/g0;.o:(Lx6/l;)Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ef028.  v0:= v1.`x6.g0.a` @type ^`x6.b` @kind object;
  #L4ef02c.  call temp:= `Q`(v0, v2) @signature `Lx6/b;.Q:(Lx6/l;)Lf7/n;` @kind virtual;
  #L4ef032.  v2:= temp @kind object;
  #L4ef034.  return v2 @kind object;
}
