record `l4.c` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<clinit>`() @signature `Ll4/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c3f04.  v0:= constclass @type ^`l4.c` @kind object;
  #L3c3f08.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L3c3f0e.  return @kind void;
}
procedure `void` `<init>`(`l4.c` v0 @kind this) @signature `Ll4/c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3c3f20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c3f26.  return @kind void;
}
procedure `android.os.Parcelable` `a`(`android.os.Parcel` v1 @kind object, `android.os.Parcelable$Creator` v2 @kind object) @signature `Ll4/c;.a:(Landroid/os/Parcel;Landroid/os/Parcelable$Creator;)Landroid/os/Parcelable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c3ed4.  call temp:= `readInt`(v1) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L3c3eda.  v0:= temp;
  #L3c3edc.  if v0 != 0 then goto L3c3ee4;
  #L3c3ee0.  v1:= 0I;
  #L3c3ee2.  return v1 @kind object;
  #L3c3ee4.  call temp:= `createFromParcel`(v2, v1) @signature `Landroid/os/Parcelable$Creator;.createFromParcel:(Landroid/os/Parcel;)Ljava/lang/Object;` @kind interface;
  #L3c3eea.  v1:= temp @kind object;
  #L3c3eec.  v1:= (`android.os.Parcelable`) v1 @kind object;
  #L3c3ef0.  return v1 @kind object;
}
procedure `void` `b`(`android.os.Parcel` v2 @kind object, `android.os.Parcelable` v3 @kind object) @signature `Ll4/c;.b:(Landroid/os/Parcel;Landroid/os/Parcelable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3c3f38.  v0:= 0I;
  #L3c3f3a.  if v3 != 0 then goto L3c3f46;
  #L3c3f3e.  call `writeInt`(v2, v0) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L3c3f44.  return @kind void;
  #L3c3f46.  v1:= 1I;
  #L3c3f48.  call `writeInt`(v2, v1) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L3c3f4e.  call `writeToParcel`(v3, v2, v0) @signature `Landroid/os/Parcelable;.writeToParcel:(Landroid/os/Parcel;I)V` @kind interface;
  #L3c3f54.  return @kind void;
}
procedure `void` `c`(`android.os.Parcel` v0 @kind object, `android.os.IInterface` v1 @kind object) @signature `Ll4/c;.c:(Landroid/os/Parcel;Landroid/os/IInterface;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3c3f68.  if v1 != 0 then goto L3c3f76;
  #L3c3f6c.  v1:= 0I;
  #L3c3f6e.  call `writeStrongBinder`(v0, v1) @signature `Landroid/os/Parcel;.writeStrongBinder:(Landroid/os/IBinder;)V` @kind virtual;
  #L3c3f74.  return @kind void;
  #L3c3f76.  call temp:= `asBinder`(v1) @signature `Landroid/os/IInterface;.asBinder:()Landroid/os/IBinder;` @kind interface;
  #L3c3f7c.  v1:= temp @kind object;
  #L3c3f7e.  goto L3c3f6e;
}
