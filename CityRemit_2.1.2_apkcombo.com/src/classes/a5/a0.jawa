record `a5.a0` @kind class @AccessFlag FINAL extends `a5.j0` @kind interface {
  `java.util.concurrent.Executor` `a5.a0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `a5.a0.b` @AccessFlag PRIVATE_FINAL;
  `a5.e` `a5.a0.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a5.a0` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `a5.e` v3 @kind object) @signature `La5/a0;.<init>:(Ljava/util/concurrent/Executor;La5/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15e3c8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e3ce.  v0:= new `java.lang.Object`;
  #L15e3d2.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e3d8.  v1.`a5.a0.b` @type ^`java.lang.Object` := v0 @kind object;
  #L15e3dc.  v1.`a5.a0.a` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L15e3e0.  v1.`a5.a0.c` @type ^`a5.e` := v3 @kind object;
  #L15e3e4.  return @kind void;
}
procedure `a5.e` `a`(`a5.a0` v0 @kind object) @signature `La5/a0;.a:(La5/a0;)La5/e;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L15e398.  v0:= v0.`a5.a0.c` @type ^`a5.e` @kind object;
  #L15e39c.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`a5.a0` v0 @kind object) @signature `La5/a0;.b:(La5/a0;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L15e3b0.  v0:= v0.`a5.a0.b` @type ^`java.lang.Object` @kind object;
  #L15e3b4.  return v0 @kind object;
}
procedure `void` `d`(`a5.a0` v1 @kind this, `a5.l` v2 @kind object) @signature `La5/a0;.d:(La5/l;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15e3f8.  call temp:= `n`(v2) @signature `La5/l;.n:()Z` @kind virtual;
  #L15e3fe.  v2:= temp;
  #L15e400.  if v2 == 0 then goto L15e434;
  #L15e404.  v2:= v1.`a5.a0.b` @type ^`java.lang.Object` @kind object;
  #L15e408.  @monitorenter v2
  #L15e40a.  v0:= v1.`a5.a0.c` @type ^`a5.e` @kind object;
  #L15e40e.  if v0 != 0 then goto L15e416;
  #L15e412.  @monitorexit v2
  #L15e414.  return @kind void;
  #L15e416.  @monitorexit v2
  #L15e418.  v2:= v1.`a5.a0.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L15e41c.  v0:= new `a5.z`;
  #L15e420.  call `<init>`(v0, v1) @signature `La5/z;.<init>:(La5/a0;)V` @kind direct;
  #L15e426.  call `execute`(v2, v0) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L15e42c.  return @kind void;
  #L15e42e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15e430.  @monitorexit v2
  #L15e432.  throw v0;
  #L15e434.  return @kind void;
  catch `java.lang.Throwable` @[L15e40a..L15e418] goto L15e42e;
  catch `java.lang.Throwable` @[L15e430..L15e432] goto L15e42e;
}
