record `a5.o` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `a`(`a5.l` v2 @kind object) @signature `La5/o;.a:(La5/l;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L15db60.  call `h`() @signature `Lcom/google/android/gms/common/internal/h;.h:()V` @kind static;
  #L15db66.  v0:= "Task must not be null" @kind object;
  #L15db6a.  call temp:= `k`(v2, v0) @signature `Lcom/google/android/gms/common/internal/h;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15db70.  call temp:= `o`(v2) @signature `La5/l;.o:()Z` @kind virtual;
  #L15db76.  v0:= temp;
  #L15db78.  if v0 == 0 then goto L15db86;
  #L15db7c.  call temp:= `i`(v2) @signature `La5/o;.i:(La5/l;)Ljava/lang/Object;` @kind static;
  #L15db82.  v2:= temp @kind object;
  #L15db84.  return v2 @kind object;
  #L15db86.  v0:= new `a5.r`;
  #L15db8a.  v1:= 0I;
  #L15db8c.  call `<init>`(v0, v1) @signature `La5/r;.<init>:(La5/q;)V` @kind direct;
  #L15db92.  call `j`(v2, v0) @signature `La5/o;.j:(La5/l;La5/s;)V` @kind static;
  #L15db98.  call `d`(v0) @signature `La5/r;.d:()V` @kind virtual;
  #L15db9e.  call temp:= `i`(v2) @signature `La5/o;.i:(La5/l;)Ljava/lang/Object;` @kind static;
  #L15dba4.  v2:= temp @kind object;
  #L15dba6.  return v2 @kind object;
}
procedure `java.lang.Object` `b`(`a5.l` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `La5/o;.b:(La5/l;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L15dbb8.  call `h`() @signature `Lcom/google/android/gms/common/internal/h;.h:()V` @kind static;
  #L15dbbe.  v0:= "Task must not be null" @kind object;
  #L15dbc2.  call temp:= `k`(v2, v0) @signature `Lcom/google/android/gms/common/internal/h;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15dbc8.  v0:= "TimeUnit must not be null" @kind object;
  #L15dbcc.  call temp:= `k`(v5, v0) @signature `Lcom/google/android/gms/common/internal/h;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15dbd2.  call temp:= `o`(v2) @signature `La5/l;.o:()Z` @kind virtual;
  #L15dbd8.  v0:= temp;
  #L15dbda.  if v0 == 0 then goto L15dbe8;
  #L15dbde.  call temp:= `i`(v2) @signature `La5/o;.i:(La5/l;)Ljava/lang/Object;` @kind static;
  #L15dbe4.  v2:= temp @kind object;
  #L15dbe6.  return v2 @kind object;
  #L15dbe8.  v0:= new `a5.r`;
  #L15dbec.  v1:= 0I;
  #L15dbee.  call `<init>`(v0, v1) @signature `La5/r;.<init>:(La5/q;)V` @kind direct;
  #L15dbf4.  call `j`(v2, v0) @signature `La5/o;.j:(La5/l;La5/s;)V` @kind static;
  #L15dbfa.  call temp:= `e`(v0, v3, v5) @signature `La5/r;.e:(JLjava/util/concurrent/TimeUnit;)Z` @kind virtual;
  #L15dc00.  v3:= temp;
  #L15dc02.  if v3 == 0 then goto L15dc10;
  #L15dc06.  call temp:= `i`(v2) @signature `La5/o;.i:(La5/l;)Ljava/lang/Object;` @kind static;
  #L15dc0c.  v2:= temp @kind object;
  #L15dc0e.  return v2 @kind object;
  #L15dc10.  v2:= new `java.util.concurrent.TimeoutException`;
  #L15dc14.  v3:= "Timed out waiting for Task" @kind object;
  #L15dc18.  call `<init>`(v2, v3) @signature `Ljava/util/concurrent/TimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15dc1e.  throw v2;
}
procedure `a5.l` `c`(`java.util.concurrent.Executor` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `La5/o;.c:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Callable;)La5/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L15d9d8.  v0:= "Executor must not be null" @kind object;
  #L15d9dc.  call temp:= `k`(v2, v0) @signature `Lcom/google/android/gms/common/internal/h;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15d9e2.  v0:= "Callback must not be null" @kind object;
  #L15d9e6.  call temp:= `k`(v3, v0) @signature `Lcom/google/android/gms/common/internal/h;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15d9ec.  v0:= new `a5.o0`;
  #L15d9f0.  call `<init>`(v0) @signature `La5/o0;.<init>:()V` @kind direct;
  #L15d9f6.  v1:= new `a5.p0`;
  #L15d9fa.  call `<init>`(v1, v0, v3) @signature `La5/p0;.<init>:(La5/o0;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L15da00.  call `execute`(v2, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L15da06.  return v0 @kind object;
}
procedure `a5.l` `d`() @signature `La5/o;.d:()La5/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15da18.  v0:= new `a5.o0`;
  #L15da1c.  call `<init>`(v0) @signature `La5/o0;.<init>:()V` @kind direct;
  #L15da22.  call temp:= `u`(v0) @signature `La5/o0;.u:()Z` @kind virtual;
  #L15da28.  return v0 @kind object;
}
procedure `a5.l` `e`(`java.lang.Exception` v1 @kind object) @signature `La5/o;.e:(Ljava/lang/Exception;)La5/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15da3c.  v0:= new `a5.o0`;
  #L15da40.  call `<init>`(v0) @signature `La5/o0;.<init>:()V` @kind direct;
  #L15da46.  call `s`(v0, v1) @signature `La5/o0;.s:(Ljava/lang/Exception;)V` @kind virtual;
  #L15da4c.  return v0 @kind object;
}
procedure `a5.l` `f`(`java.lang.Object` v1 @kind object) @signature `La5/o;.f:(Ljava/lang/Object;)La5/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15da60.  v0:= new `a5.o0`;
  #L15da64.  call `<init>`(v0) @signature `La5/o0;.<init>:()V` @kind direct;
  #L15da6a.  call `t`(v0, v1) @signature `La5/o0;.t:(Ljava/lang/Object;)V` @kind virtual;
  #L15da70.  return v0 @kind object;
}
procedure `a5.l` `g`(`java.util.Collection` v3 @kind object) @signature `La5/o;.g:(Ljava/util/Collection;)La5/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L15dac0.  if v3 == 0 then goto L15db44;
  #L15dac4.  call temp:= `isEmpty`(v3) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L15daca.  v0:= temp;
  #L15dacc.  if v0 == 0 then goto L15dad2;
  #L15dad0.  goto L15db44;
  #L15dad2.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15dad8.  v0:= temp @kind object;
  #L15dada.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15dae0.  v1:= temp;
  #L15dae2.  if v1 == 0 then goto L15dafe;
  #L15dae6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15daec.  v1:= temp @kind object;
  #L15daee.  v1:= (`a5.l`) v1 @kind object;
  #L15daf2.  v2:= "null tasks are not accepted" @kind object;
  #L15daf6.  call temp:= `requireNonNull`(v1, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L15dafc.  goto L15dada;
  #L15dafe.  v0:= new `a5.o0`;
  #L15db02.  call `<init>`(v0) @signature `La5/o0;.<init>:()V` @kind direct;
  #L15db08.  v1:= new `a5.t`;
  #L15db0c.  call temp:= `size`(v3) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L15db12.  v2:= temp;
  #L15db14.  call `<init>`(v1, v2, v0) @signature `La5/t;.<init>:(ILa5/o0;)V` @kind direct;
  #L15db1a.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15db20.  v3:= temp @kind object;
  #L15db22.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15db28.  v2:= temp;
  #L15db2a.  if v2 == 0 then goto L15db42;
  #L15db2e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15db34.  v2:= temp @kind object;
  #L15db36.  v2:= (`a5.l`) v2 @kind object;
  #L15db3a.  call `j`(v2, v1) @signature `La5/o;.j:(La5/l;La5/s;)V` @kind static;
  #L15db40.  goto L15db22;
  #L15db42.  return v0 @kind object;
  #L15db44.  v3:= 0I;
  #L15db46.  call temp:= `f`(v3) @signature `La5/o;.f:(Ljava/lang/Object;)La5/l;` @kind static;
  #L15db4c.  v3:= temp @kind object;
  #L15db4e.  return v3 @kind object;
}
procedure `a5.l` `h`(`a5.l`[] v1 @kind object) @signature `La5/o;.h:([La5/l;)La5/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15da84.  if v1 == 0 then goto L15daa2;
  #L15da88.  v0:= length @variable v1;
  #L15da8a.  if v0 != 0 then goto L15da90;
  #L15da8e.  goto L15daa2;
  #L15da90.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L15da96.  v1:= temp @kind object;
  #L15da98.  call temp:= `g`(v1) @signature `La5/o;.g:(Ljava/util/Collection;)La5/l;` @kind static;
  #L15da9e.  v1:= temp @kind object;
  #L15daa0.  return v1 @kind object;
  #L15daa2.  v1:= 0I;
  #L15daa4.  call temp:= `f`(v1) @signature `La5/o;.f:(Ljava/lang/Object;)La5/l;` @kind static;
  #L15daaa.  v1:= temp @kind object;
  #L15daac.  return v1 @kind object;
}
procedure `java.lang.Object` `i`(`a5.l` v1 @kind object) @signature `La5/o;.i:(La5/l;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L15dc30.  call temp:= `p`(v1) @signature `La5/l;.p:()Z` @kind virtual;
  #L15dc36.  v0:= temp;
  #L15dc38.  if v0 == 0 then goto L15dc46;
  #L15dc3c.  call temp:= `l`(v1) @signature `La5/l;.l:()Ljava/lang/Object;` @kind virtual;
  #L15dc42.  v1:= temp @kind object;
  #L15dc44.  return v1 @kind object;
  #L15dc46.  call temp:= `n`(v1) @signature `La5/l;.n:()Z` @kind virtual;
  #L15dc4c.  v0:= temp;
  #L15dc4e.  if v0 == 0 then goto L15dc62;
  #L15dc52.  v1:= new `java.util.concurrent.CancellationException`;
  #L15dc56.  v0:= "Task is already canceled" @kind object;
  #L15dc5a.  call `<init>`(v1, v0) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15dc60.  throw v1;
  #L15dc62.  v0:= new `java.util.concurrent.ExecutionException`;
  #L15dc66.  call temp:= `k`(v1) @signature `La5/l;.k:()Ljava/lang/Exception;` @kind virtual;
  #L15dc6c.  v1:= temp @kind object;
  #L15dc6e.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15dc74.  throw v0;
}
procedure `void` `j`(`a5.l` v1 @kind object, `a5.s` v2 @kind object) @signature `La5/o;.j:(La5/l;La5/s;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L15dc88.  v0:= `@@a5.n.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L15dc8c.  call temp:= `g`(v1, v0, v2) @signature `La5/l;.g:(Ljava/util/concurrent/Executor;La5/h;)La5/l;` @kind virtual;
  #L15dc92.  call temp:= `e`(v1, v0, v2) @signature `La5/l;.e:(Ljava/util/concurrent/Executor;La5/g;)La5/l;` @kind virtual;
  #L15dc98.  call temp:= `a`(v1, v0, v2) @signature `La5/l;.a:(Ljava/util/concurrent/Executor;La5/e;)La5/l;` @kind virtual;
  #L15dc9e.  return @kind void;
}
