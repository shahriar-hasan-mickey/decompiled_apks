record `a5.l` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`a5.l` v0 @kind this) @signature `La5/l;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15dcb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15dcb6.  return @kind void;
}
procedure `a5.l` `a`(`a5.l` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `a5.e` v2 @kind object) @signature `La5/l;.a:(Ljava/util/concurrent/Executor;La5/e;)La5/l;` @AccessFlag PUBLIC {
    temp;

  #L15d8d8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L15d8dc.  v2:= "addOnCanceledListener is not implemented" @kind object;
  #L15d8e0.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d8e6.  throw v1;
}
procedure `a5.l` `b`(`a5.l` v1 @kind this, `a5.f` v2 @kind object) @signature `La5/l;.b:(La5/f;)La5/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15d8f8.  v2:= new `java.lang.UnsupportedOperationException`;
  #L15d8fc.  v0:= "addOnCompleteListener is not implemented" @kind object;
  #L15d900.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d906.  throw v2;
}
procedure `a5.l` `c`(`a5.l` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `a5.f` v2 @kind object) @signature `La5/l;.c:(Ljava/util/concurrent/Executor;La5/f;)La5/l;` @AccessFlag PUBLIC {
    temp;

  #L15d918.  v1:= new `java.lang.UnsupportedOperationException`;
  #L15d91c.  v2:= "addOnCompleteListener is not implemented" @kind object;
  #L15d920.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d926.  throw v1;
}
procedure `a5.l` `d`(`a5.g` v0 @kind object) @signature `La5/l;.d:(La5/g;)La5/l;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `a5.l` `e`(`java.util.concurrent.Executor` v0 @kind object, `a5.g` v1 @kind object) @signature `La5/l;.e:(Ljava/util/concurrent/Executor;La5/g;)La5/l;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `a5.l` `f`(`a5.h` v0 @kind object) @signature `La5/l;.f:(La5/h;)La5/l;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `a5.l` `g`(`java.util.concurrent.Executor` v0 @kind object, `a5.h` v1 @kind object) @signature `La5/l;.g:(Ljava/util/concurrent/Executor;La5/h;)La5/l;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `a5.l` `h`(`a5.l` v1 @kind this, `a5.c` v2 @kind object) @signature `La5/l;.h:(La5/c;)La5/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15d938.  v2:= new `java.lang.UnsupportedOperationException`;
  #L15d93c.  v0:= "continueWith is not implemented" @kind object;
  #L15d940.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d946.  throw v2;
}
procedure `a5.l` `i`(`a5.l` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `a5.c` v2 @kind object) @signature `La5/l;.i:(Ljava/util/concurrent/Executor;La5/c;)La5/l;` @AccessFlag PUBLIC {
    temp;

  #L15d958.  v1:= new `java.lang.UnsupportedOperationException`;
  #L15d95c.  v2:= "continueWith is not implemented" @kind object;
  #L15d960.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d966.  throw v1;
}
procedure `a5.l` `j`(`a5.l` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `a5.c` v2 @kind object) @signature `La5/l;.j:(Ljava/util/concurrent/Executor;La5/c;)La5/l;` @AccessFlag PUBLIC {
    temp;

  #L15d978.  v1:= new `java.lang.UnsupportedOperationException`;
  #L15d97c.  v2:= "continueWithTask is not implemented" @kind object;
  #L15d980.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d986.  throw v1;
}
procedure `java.lang.Exception` `k`() @signature `La5/l;.k:()Ljava/lang/Exception;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `l`() @signature `La5/l;.l:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `m`(`java.lang.Class` v0 @kind object) @signature `La5/l;.m:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `n`() @signature `La5/l;.n:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `o`() @signature `La5/l;.o:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `p`() @signature `La5/l;.p:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `a5.l` `q`(`a5.l` v1 @kind this, `a5.k` v2 @kind object) @signature `La5/l;.q:(La5/k;)La5/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15d998.  v2:= new `java.lang.UnsupportedOperationException`;
  #L15d99c.  v0:= "onSuccessTask is not implemented" @kind object;
  #L15d9a0.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d9a6.  throw v2;
}
procedure `a5.l` `r`(`a5.l` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `a5.k` v2 @kind object) @signature `La5/l;.r:(Ljava/util/concurrent/Executor;La5/k;)La5/l;` @AccessFlag PUBLIC {
    temp;

  #L15d9b8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L15d9bc.  v2:= "onSuccessTask is not implemented" @kind object;
  #L15d9c0.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d9c6.  throw v1;
}
