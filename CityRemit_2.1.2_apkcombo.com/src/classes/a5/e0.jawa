record `a5.e0` @kind class @AccessFlag FINAL extends `a5.j0` @kind interface {
  `java.util.concurrent.Executor` `a5.e0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `a5.e0.b` @AccessFlag PRIVATE_FINAL;
  `a5.g` `a5.e0.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a5.e0` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `a5.g` v3 @kind object) @signature `La5/e0;.<init>:(Ljava/util/concurrent/Executor;La5/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15e644.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e64a.  v0:= new `java.lang.Object`;
  #L15e64e.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e654.  v1.`a5.e0.b` @type ^`java.lang.Object` := v0 @kind object;
  #L15e658.  v1.`a5.e0.a` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L15e65c.  v1.`a5.e0.c` @type ^`a5.g` := v3 @kind object;
  #L15e660.  return @kind void;
}
procedure `a5.g` `a`(`a5.e0` v0 @kind object) @signature `La5/e0;.a:(La5/e0;)La5/g;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L15e614.  v0:= v0.`a5.e0.c` @type ^`a5.g` @kind object;
  #L15e618.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`a5.e0` v0 @kind object) @signature `La5/e0;.b:(La5/e0;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L15e62c.  v0:= v0.`a5.e0.b` @type ^`java.lang.Object` @kind object;
  #L15e630.  return v0 @kind object;
}
procedure `void` `d`(`a5.e0` v2 @kind this, `a5.l` v3 @kind object) @signature `La5/e0;.d:(La5/l;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15e674.  call temp:= `p`(v3) @signature `La5/l;.p:()Z` @kind virtual;
  #L15e67a.  v0:= temp;
  #L15e67c.  if v0 != 0 then goto L15e6bc;
  #L15e680.  call temp:= `n`(v3) @signature `La5/l;.n:()Z` @kind virtual;
  #L15e686.  v0:= temp;
  #L15e688.  if v0 != 0 then goto L15e6bc;
  #L15e68c.  v0:= v2.`a5.e0.b` @type ^`java.lang.Object` @kind object;
  #L15e690.  @monitorenter v0
  #L15e692.  v1:= v2.`a5.e0.c` @type ^`a5.g` @kind object;
  #L15e696.  if v1 != 0 then goto L15e69e;
  #L15e69a.  @monitorexit v0
  #L15e69c.  return @kind void;
  #L15e69e.  @monitorexit v0
  #L15e6a0.  v0:= v2.`a5.e0.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L15e6a4.  v1:= new `a5.d0`;
  #L15e6a8.  call `<init>`(v1, v2, v3) @signature `La5/d0;.<init>:(La5/e0;La5/l;)V` @kind direct;
  #L15e6ae.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L15e6b4.  return @kind void;
  #L15e6b6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15e6b8.  @monitorexit v0
  #L15e6ba.  throw v3;
  #L15e6bc.  return @kind void;
  catch `java.lang.Throwable` @[L15e692..L15e6a0] goto L15e6b6;
  catch `java.lang.Throwable` @[L15e6b8..L15e6ba] goto L15e6b6;
}
