record `a5.d` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.IllegalStateException` @kind class {
}
procedure `void` `<init>`(`a5.d` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `La5/d;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L15d770.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L15d776.  return @kind void;
}
procedure `java.lang.IllegalStateException` `a`(`a5.l` v4 @kind object) @signature `La5/d;.a:(La5/l;)Ljava/lang/IllegalStateException;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15d6c0.  call temp:= `o`(v4) @signature `La5/l;.o:()Z` @kind virtual;
  #L15d6c6.  v0:= temp;
  #L15d6c8.  if v0 != 0 then goto L15d6dc;
  #L15d6cc.  v4:= new `java.lang.IllegalStateException`;
  #L15d6d0.  v0:= "DuplicateTaskCompletionException can only be created from completed Task." @kind object;
  #L15d6d4.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d6da.  return v4 @kind object;
  #L15d6dc.  call temp:= `k`(v4) @signature `La5/l;.k:()Ljava/lang/Exception;` @kind virtual;
  #L15d6e2.  v0:= temp @kind object;
  #L15d6e4.  if v0 == 0 then goto L15d6ee;
  #L15d6e8.  v4:= "failure" @kind object;
  #L15d6ec.  goto L15d72e;
  #L15d6ee.  call temp:= `p`(v4) @signature `La5/l;.p:()Z` @kind virtual;
  #L15d6f4.  v1:= temp;
  #L15d6f6.  if v1 == 0 then goto L15d718;
  #L15d6fa.  call temp:= `l`(v4) @signature `La5/l;.l:()Ljava/lang/Object;` @kind virtual;
  #L15d700.  v4:= temp @kind object;
  #L15d702.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15d708.  v4:= temp @kind object;
  #L15d70a.  v1:= "result " @kind object;
  #L15d70e.  call temp:= `concat`(v1, v4) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L15d714.  v4:= temp @kind object;
  #L15d716.  goto L15d72e;
  #L15d718.  call temp:= `n`(v4) @signature `La5/l;.n:()Z` @kind virtual;
  #L15d71e.  v4:= temp;
  #L15d720.  if v4 == 0 then goto L15d72a;
  #L15d724.  v4:= "cancellation" @kind object;
  #L15d728.  goto L15d72e;
  #L15d72a.  v4:= "unknown issue" @kind object;
  #L15d72e.  v1:= new `a5.d`;
  #L15d732.  v2:= "Complete with: " @kind object;
  #L15d736.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15d73c.  v3:= temp;
  #L15d73e.  if v3 == 0 then goto L15d74c;
  #L15d742.  call temp:= `concat`(v2, v4) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L15d748.  v4:= temp @kind object;
  #L15d74a.  goto L15d756;
  #L15d74c.  v4:= new `java.lang.String`;
  #L15d750.  call `<init>`(v4, v2) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d756.  call `<init>`(v1, v4, v0) @signature `La5/d;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L15d75c.  return v1 @kind object;
}
