record `a5.b0` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `a5.l` `a5.b0.o` @AccessFlag FINAL_SYNTHETIC;
  `a5.c0` `a5.b0.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a5.b0` v0 @kind this, `a5.c0` v1 @kind object, `a5.l` v2 @kind object) @signature `La5/b0;.<init>:(La5/c0;La5/l;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L15e45c.  v0.`a5.b0.p` @type ^`a5.c0` := v1 @kind object;
  #L15e460.  v0.`a5.b0.o` @type ^`a5.l` := v2 @kind object;
  #L15e464.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e46a.  return @kind void;
}
procedure `void` `run`(`a5.b0` v3 @kind this) @signature `La5/b0;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15e47c.  v0:= v3.`a5.b0.p` @type ^`a5.c0` @kind object;
  #L15e480.  call temp:= `b`(v0) @signature `La5/c0;.b:(La5/c0;)Ljava/lang/Object;` @kind static;
  #L15e486.  v0:= temp @kind object;
  #L15e488.  @monitorenter v0
  #L15e48a.  v1:= v3.`a5.b0.p` @type ^`a5.c0` @kind object;
  #L15e48e.  call temp:= `a`(v1) @signature `La5/c0;.a:(La5/c0;)La5/f;` @kind static;
  #L15e494.  v2:= temp @kind object;
  #L15e496.  if v2 == 0 then goto L15e4ac;
  #L15e49a.  call temp:= `a`(v1) @signature `La5/c0;.a:(La5/c0;)La5/f;` @kind static;
  #L15e4a0.  v1:= temp @kind object;
  #L15e4a2.  v2:= v3.`a5.b0.o` @type ^`a5.l` @kind object;
  #L15e4a6.  call `a`(v1, v2) @signature `La5/f;.a:(La5/l;)V` @kind interface;
  #L15e4ac.  @monitorexit v0
  #L15e4ae.  return @kind void;
  #L15e4b0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15e4b2.  @monitorexit v0
  #L15e4b4.  throw v1;
  catch `java.lang.Throwable` @[L15e48a..L15e4b4] goto L15e4b0;
}
