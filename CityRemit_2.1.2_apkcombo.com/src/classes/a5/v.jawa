record `a5.v` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `a5.l` `a5.v.o` @AccessFlag FINAL_SYNTHETIC;
  `a5.w` `a5.v.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a5.v` v0 @kind this, `a5.w` v1 @kind object, `a5.l` v2 @kind object) @signature `La5/v;.<init>:(La5/w;La5/l;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L15dff4.  v0.`a5.v.p` @type ^`a5.w` := v1 @kind object;
  #L15dff8.  v0.`a5.v.o` @type ^`a5.l` := v2 @kind object;
  #L15dffc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e002.  return @kind void;
}
procedure `void` `run`(`a5.v` v2 @kind this) @signature `La5/v;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15e014.  v0:= v2.`a5.v.o` @type ^`a5.l` @kind object;
  #L15e018.  call temp:= `n`(v0) @signature `La5/l;.n:()Z` @kind virtual;
  #L15e01e.  v0:= temp;
  #L15e020.  if v0 == 0 then goto L15e038;
  #L15e024.  v0:= v2.`a5.v.p` @type ^`a5.w` @kind object;
  #L15e028.  call temp:= `b`(v0) @signature `La5/w;.b:(La5/w;)La5/o0;` @kind static;
  #L15e02e.  v0:= temp @kind object;
  #L15e030.  call temp:= `u`(v0) @signature `La5/o0;.u:()Z` @kind virtual;
  #L15e036.  return @kind void;
  #L15e038.  v0:= v2.`a5.v.p` @type ^`a5.w` @kind object;
  #L15e03c.  call temp:= `a`(v0) @signature `La5/w;.a:(La5/w;)La5/c;` @kind static;
  #L15e042.  v0:= temp @kind object;
  #L15e044.  v1:= v2.`a5.v.o` @type ^`a5.l` @kind object;
  #L15e048.  call temp:= `a`(v0, v1) @signature `La5/c;.a:(La5/l;)Ljava/lang/Object;` @kind interface;
  #L15e04e.  v0:= temp @kind object;
  #L15e050.  v1:= v2.`a5.v.p` @type ^`a5.w` @kind object;
  #L15e054.  call temp:= `b`(v1) @signature `La5/w;.b:(La5/w;)La5/o0;` @kind static;
  #L15e05a.  v1:= temp @kind object;
  #L15e05c.  call `t`(v1, v0) @signature `La5/o0;.t:(Ljava/lang/Object;)V` @kind virtual;
  #L15e062.  return @kind void;
  #L15e064.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L15e066.  v1:= v2.`a5.v.p` @type ^`a5.w` @kind object;
  #L15e06a.  call temp:= `b`(v1) @signature `La5/w;.b:(La5/w;)La5/o0;` @kind static;
  #L15e070.  v1:= temp @kind object;
  #L15e072.  call `s`(v1, v0) @signature `La5/o0;.s:(Ljava/lang/Exception;)V` @kind virtual;
  #L15e078.  return @kind void;
  #L15e07a.  v0:= Exception @type ^`a5.j` @kind object;
  #L15e07c.  call temp:= `getCause`(v0) @signature `Ljava/lang/RuntimeException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L15e082.  v1:= temp @kind object;
  #L15e084.  v1:= instanceof @variable v1 @type ^`java.lang.Exception` @kind boolean;
  #L15e088.  if v1 == 0 then goto L15e0ac;
  #L15e08c.  v1:= v2.`a5.v.p` @type ^`a5.w` @kind object;
  #L15e090.  call temp:= `b`(v1) @signature `La5/w;.b:(La5/w;)La5/o0;` @kind static;
  #L15e096.  v1:= temp @kind object;
  #L15e098.  call temp:= `getCause`(v0) @signature `Ljava/lang/RuntimeException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L15e09e.  v0:= temp @kind object;
  #L15e0a0.  v0:= (`java.lang.Exception`) v0 @kind object;
  #L15e0a4.  call `s`(v1, v0) @signature `La5/o0;.s:(Ljava/lang/Exception;)V` @kind virtual;
  #L15e0aa.  return @kind void;
  #L15e0ac.  v1:= v2.`a5.v.p` @type ^`a5.w` @kind object;
  #L15e0b0.  call temp:= `b`(v1) @signature `La5/w;.b:(La5/w;)La5/o0;` @kind static;
  #L15e0b6.  v1:= temp @kind object;
  #L15e0b8.  call `s`(v1, v0) @signature `La5/o0;.s:(Ljava/lang/Exception;)V` @kind virtual;
  #L15e0be.  return @kind void;
  catch `a5.j` @[L15e038..L15e050] goto L15e07a;
  catch `java.lang.Exception` @[L15e038..L15e050] goto L15e064;
}
