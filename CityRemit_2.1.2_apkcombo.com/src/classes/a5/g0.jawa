record `a5.g0` @kind class @AccessFlag FINAL extends `a5.j0` @kind interface {
  `java.util.concurrent.Executor` `a5.g0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `a5.g0.b` @AccessFlag PRIVATE_FINAL;
  `a5.h` `a5.g0.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a5.g0` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `a5.h` v3 @kind object) @signature `La5/g0;.<init>:(Ljava/util/concurrent/Executor;La5/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15e794.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e79a.  v0:= new `java.lang.Object`;
  #L15e79e.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e7a4.  v1.`a5.g0.b` @type ^`java.lang.Object` := v0 @kind object;
  #L15e7a8.  v1.`a5.g0.a` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L15e7ac.  v1.`a5.g0.c` @type ^`a5.h` := v3 @kind object;
  #L15e7b0.  return @kind void;
}
procedure `a5.h` `a`(`a5.g0` v0 @kind object) @signature `La5/g0;.a:(La5/g0;)La5/h;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L15e764.  v0:= v0.`a5.g0.c` @type ^`a5.h` @kind object;
  #L15e768.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`a5.g0` v0 @kind object) @signature `La5/g0;.b:(La5/g0;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L15e77c.  v0:= v0.`a5.g0.b` @type ^`java.lang.Object` @kind object;
  #L15e780.  return v0 @kind object;
}
procedure `void` `d`(`a5.g0` v2 @kind this, `a5.l` v3 @kind object) @signature `La5/g0;.d:(La5/l;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15e7c4.  call temp:= `p`(v3) @signature `La5/l;.p:()Z` @kind virtual;
  #L15e7ca.  v0:= temp;
  #L15e7cc.  if v0 == 0 then goto L15e800;
  #L15e7d0.  v0:= v2.`a5.g0.b` @type ^`java.lang.Object` @kind object;
  #L15e7d4.  @monitorenter v0
  #L15e7d6.  v1:= v2.`a5.g0.c` @type ^`a5.h` @kind object;
  #L15e7da.  if v1 != 0 then goto L15e7e2;
  #L15e7de.  @monitorexit v0
  #L15e7e0.  return @kind void;
  #L15e7e2.  @monitorexit v0
  #L15e7e4.  v0:= v2.`a5.g0.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L15e7e8.  v1:= new `a5.f0`;
  #L15e7ec.  call `<init>`(v1, v2, v3) @signature `La5/f0;.<init>:(La5/g0;La5/l;)V` @kind direct;
  #L15e7f2.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L15e7f8.  return @kind void;
  #L15e7fa.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15e7fc.  @monitorexit v0
  #L15e7fe.  throw v3;
  #L15e800.  return @kind void;
  catch `java.lang.Throwable` @[L15e7d6..L15e7e4] goto L15e7fa;
  catch `java.lang.Throwable` @[L15e7fc..L15e7fe] goto L15e7fa;
}
