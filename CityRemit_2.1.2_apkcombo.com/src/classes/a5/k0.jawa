record `a5.k0` @kind class @AccessFlag FINAL {
  `java.lang.Object` `a5.k0.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Queue` `a5.k0.b` @AccessFlag PRIVATE;
  `boolean` `a5.k0.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a5.k0` v1 @kind this) @signature `La5/k0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L15e9d8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e9de.  v0:= new `java.lang.Object`;
  #L15e9e2.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e9e8.  v1.`a5.k0.a` @type ^`java.lang.Object` := v0 @kind object;
  #L15e9ec.  return @kind void;
}
procedure `void` `a`(`a5.k0` v2 @kind this, `a5.j0` v3 @kind object) @signature `La5/k0;.a:(La5/j0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15ea00.  v0:= v2.`a5.k0.a` @type ^`java.lang.Object` @kind object;
  #L15ea04.  @monitorenter v0
  #L15ea06.  v1:= v2.`a5.k0.b` @type ^`java.util.Queue` @kind object;
  #L15ea0a.  if v1 != 0 then goto L15ea1c;
  #L15ea0e.  v1:= new `java.util.ArrayDeque`;
  #L15ea12.  call `<init>`(v1) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L15ea18.  v2.`a5.k0.b` @type ^`java.util.Queue` := v1 @kind object;
  #L15ea1c.  v1:= v2.`a5.k0.b` @type ^`java.util.Queue` @kind object;
  #L15ea20.  call temp:= `add`(v1, v3) @signature `Ljava/util/Queue;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15ea26.  @monitorexit v0
  #L15ea28.  return @kind void;
  #L15ea2a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15ea2c.  @monitorexit v0
  #L15ea2e.  throw v3;
  catch `java.lang.Throwable` @[L15ea06..L15ea2e] goto L15ea2a;
}
procedure `void` `b`(`a5.k0` v2 @kind this, `a5.l` v3 @kind object) @signature `La5/k0;.b:(La5/l;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15ea4c.  v0:= v2.`a5.k0.a` @type ^`java.lang.Object` @kind object;
  #L15ea50.  @monitorenter v0
  #L15ea52.  v1:= v2.`a5.k0.b` @type ^`java.util.Queue` @kind object;
  #L15ea56.  if v1 == 0 then goto L15eaa0;
  #L15ea5a.  v1:= v2.`a5.k0.c` @type ^`boolean` @kind boolean;
  #L15ea5e.  if v1 == 0 then goto L15ea64;
  #L15ea62.  goto L15eaa0;
  #L15ea64.  v1:= 1I;
  #L15ea66.  v2.`a5.k0.c` @type ^`boolean` := v1 @kind boolean;
  #L15ea6a.  @monitorexit v0
  #L15ea6c.  v1:= v2.`a5.k0.a` @type ^`java.lang.Object` @kind object;
  #L15ea70.  @monitorenter v1
  #L15ea72.  v0:= v2.`a5.k0.b` @type ^`java.util.Queue` @kind object;
  #L15ea76.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L15ea7c.  v0:= temp @kind object;
  #L15ea7e.  v0:= (`a5.j0`) v0 @kind object;
  #L15ea82.  if v0 != 0 then goto L15ea90;
  #L15ea86.  v3:= 0I;
  #L15ea88.  v2.`a5.k0.c` @type ^`boolean` := v3 @kind boolean;
  #L15ea8c.  @monitorexit v1
  #L15ea8e.  return @kind void;
  #L15ea90.  @monitorexit v1
  #L15ea92.  call `d`(v0, v3) @signature `La5/j0;.d:(La5/l;)V` @kind interface;
  #L15ea98.  goto L15ea6c;
  #L15ea9a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15ea9c.  @monitorexit v1
  #L15ea9e.  throw v3;
  #L15eaa0.  @monitorexit v0
  #L15eaa2.  return @kind void;
  #L15eaa4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15eaa6.  @monitorexit v0
  #L15eaa8.  throw v3;
  catch `java.lang.Throwable` @[L15ea52..L15ea6c] goto L15eaa4;
  catch `java.lang.Throwable` @[L15ea72..L15ea92] goto L15ea9a;
  catch `java.lang.Throwable` @[L15ea9c..L15ea9e] goto L15ea9a;
  catch `java.lang.Throwable` @[L15eaa0..L15eaa8] goto L15eaa4;
}
