record `c7.g$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.util.ArrayList` `c7.g$a.o` @AccessFlag FINAL_SYNTHETIC;
  `c7.g` `c7.g$a.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`c7.g$a` v0 @kind this, `c7.g` v1 @kind object, `java.util.ArrayList` v2 @kind object) @signature `Lc7/g$a;.<init>:(Lc7/g;Ljava/util/ArrayList;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1f75f4.  v0.`c7.g$a.p` @type ^`c7.g` := v1 @kind object;
  #L1f75f8.  v0.`c7.g$a.o` @type ^`java.util.ArrayList` := v2 @kind object;
  #L1f75fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f7602.  return @kind void;
}
procedure `void` `run`(`c7.g$a` v5 @kind this) @signature `Lc7/g$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1f7614.  v0:= v5.`c7.g$a.o` @type ^`java.util.ArrayList` @kind object;
  #L1f7618.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1f761e.  v0:= temp @kind object;
  #L1f7620.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1f7626.  v1:= temp;
  #L1f7628.  if v1 == 0 then goto L1f769a;
  #L1f762c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1f7632.  v1:= temp @kind object;
  #L1f7634.  v1:= (`c7.e`) v1 @kind object;
  #L1f7638.  v2:= v5.`c7.g$a.p` @type ^`c7.g` @kind object;
  #L1f763c.  call temp:= `a`(v2) @signature `Lc7/g;.a:(Lc7/g;)Le7/c;` @kind static;
  #L1f7642.  v2:= temp @kind object;
  #L1f7644.  call temp:= `f`(v2) @signature `Le7/c;.f:()Z` @kind virtual;
  #L1f764a.  v2:= temp;
  #L1f764c.  if v2 == 0 then goto L1f7692;
  #L1f7650.  v2:= v5.`c7.g$a.p` @type ^`c7.g` @kind object;
  #L1f7654.  call temp:= `a`(v2) @signature `Lc7/g;.a:(Lc7/g;)Le7/c;` @kind static;
  #L1f765a.  v2:= temp @kind object;
  #L1f765c.  v3:= new `java.lang.StringBuilder`;
  #L1f7660.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f7666.  v4:= "Raising " @kind object;
  #L1f766a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f7670.  call temp:= `toString`(v1) @signature `Lc7/e;.toString:()Ljava/lang/String;` @kind interface;
  #L1f7676.  v4:= temp @kind object;
  #L1f7678.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f767e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f7684.  v3:= temp @kind object;
  #L1f7686.  v4:= 0I;
  #L1f7688.  v4:= new `java.lang.Object`[v4];
  #L1f768c.  call `b`(v2, v3, v4) @signature `Le7/c;.b:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L1f7692.  call `a`(v1) @signature `Lc7/e;.a:()V` @kind interface;
  #L1f7698.  goto L1f7620;
  #L1f769a.  return @kind void;
}
