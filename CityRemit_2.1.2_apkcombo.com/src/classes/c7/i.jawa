record `c7.i` @kind class @AccessFlag PUBLIC_FINAL {
  `x6.l` `c7.i.a` @AccessFlag PRIVATE_FINAL;
  `c7.h` `c7.i.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c7.i` v0 @kind this, `x6.l` v1 @kind object, `c7.h` v2 @kind object) @signature `Lc7/i;.<init>:(Lx6/l;Lc7/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1f8460.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f8466.  v0.`c7.i.a` @type ^`x6.l` := v1 @kind object;
  #L1f846a.  v0.`c7.i.b` @type ^`c7.h` := v2 @kind object;
  #L1f846e.  return @kind void;
}
procedure `c7.i` `a`(`x6.l` v2 @kind object) @signature `Lc7/i;.a:(Lx6/l;)Lc7/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1f8388.  v0:= new `c7.i`;
  #L1f838c.  v1:= `@@c7.h.i` @type ^`c7.h` @kind object;
  #L1f8390.  call `<init>`(v0, v2, v1) @signature `Lc7/i;.<init>:(Lx6/l;Lc7/h;)V` @kind direct;
  #L1f8396.  return v0 @kind object;
}
procedure `c7.i` `b`(`x6.l` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lc7/i;.b:(Lx6/l;Ljava/util/Map;)Lc7/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1f83a8.  call temp:= `c`(v2) @signature `Lc7/h;.c:(Ljava/util/Map;)Lc7/h;` @kind static;
  #L1f83ae.  v2:= temp @kind object;
  #L1f83b0.  v0:= new `c7.i`;
  #L1f83b4.  call `<init>`(v0, v1, v2) @signature `Lc7/i;.<init>:(Lx6/l;Lc7/h;)V` @kind direct;
  #L1f83ba.  return v0 @kind object;
}
procedure `f7.h` `c`(`c7.i` v1 @kind this) @signature `Lc7/i;.c:()Lf7/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f83cc.  v0:= v1.`c7.i.b` @type ^`c7.h` @kind object;
  #L1f83d0.  call temp:= `d`(v0) @signature `Lc7/h;.d:()Lf7/h;` @kind virtual;
  #L1f83d6.  v0:= temp @kind object;
  #L1f83d8.  return v0 @kind object;
}
procedure `c7.h` `d`(`c7.i` v1 @kind this) @signature `Lc7/i;.d:()Lc7/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f8370.  v0:= v1.`c7.i.b` @type ^`c7.h` @kind object;
  #L1f8374.  return v0 @kind object;
}
procedure `x6.l` `e`(`c7.i` v1 @kind this) @signature `Lc7/i;.e:()Lx6/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f8480.  v0:= v1.`c7.i.a` @type ^`x6.l` @kind object;
  #L1f8484.  return v0 @kind object;
}
procedure `boolean` `equals`(`c7.i` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lc7/i;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f82cc.  v0:= 1I;
  #L1f82ce.  if v4 != v5 then goto L1f82d4;
  #L1f82d2.  return v0;
  #L1f82d4.  v1:= 0I;
  #L1f82d6.  if v5 == 0 then goto L1f831e;
  #L1f82da.  v2:= constclass @type ^`c7.i` @kind object;
  #L1f82de.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1f82e4.  v3:= temp @kind object;
  #L1f82e6.  if v2 == v3 then goto L1f82ec;
  #L1f82ea.  goto L1f831e;
  #L1f82ec.  v5:= (`c7.i`) v5 @kind object;
  #L1f82f0.  v2:= v4.`c7.i.a` @type ^`x6.l` @kind object;
  #L1f82f4.  v3:= v5.`c7.i.a` @type ^`x6.l` @kind object;
  #L1f82f8.  call temp:= `equals`(v2, v3) @signature `Lx6/l;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f82fe.  v2:= temp;
  #L1f8300.  if v2 != 0 then goto L1f8306;
  #L1f8304.  return v1;
  #L1f8306.  v2:= v4.`c7.i.b` @type ^`c7.h` @kind object;
  #L1f830a.  v5:= v5.`c7.i.b` @type ^`c7.h` @kind object;
  #L1f830e.  call temp:= `equals`(v2, v5) @signature `Lc7/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f8314.  v5:= temp;
  #L1f8316.  if v5 != 0 then goto L1f831c;
  #L1f831a.  return v1;
  #L1f831c.  return v0;
  #L1f831e.  return v1;
}
procedure `boolean` `f`(`c7.i` v1 @kind this) @signature `Lc7/i;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f8330.  v0:= v1.`c7.i.b` @type ^`c7.h` @kind object;
  #L1f8334.  call temp:= `p`(v0) @signature `Lc7/h;.p:()Z` @kind virtual;
  #L1f833a.  v0:= temp;
  #L1f833c.  return v0;
}
procedure `boolean` `g`(`c7.i` v1 @kind this) @signature `Lc7/i;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f8350.  v0:= v1.`c7.i.b` @type ^`c7.h` @kind object;
  #L1f8354.  call temp:= `u`(v0) @signature `Lc7/h;.u:()Z` @kind virtual;
  #L1f835a.  v0:= temp;
  #L1f835c.  return v0;
}
procedure `int` `hashCode`(`c7.i` v2 @kind this) @signature `Lc7/i;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f83ec.  v0:= v2.`c7.i.a` @type ^`x6.l` @kind object;
  #L1f83f0.  call temp:= `hashCode`(v0) @signature `Lx6/l;.hashCode:()I` @kind virtual;
  #L1f83f6.  v0:= temp;
  #L1f83f8.  v0:= v0 * 31;
  #L1f83fc.  v1:= v2.`c7.i.b` @type ^`c7.h` @kind object;
  #L1f8400.  call temp:= `hashCode`(v1) @signature `Lc7/h;.hashCode:()I` @kind virtual;
  #L1f8406.  v1:= temp;
  #L1f8408.  v0:= v0 + v1 @kind int;
  #L1f840a.  return v0;
}
procedure `java.lang.String` `toString`(`c7.i` v2 @kind this) @signature `Lc7/i;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f841c.  v0:= new `java.lang.StringBuilder`;
  #L1f8420.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f8426.  v1:= v2.`c7.i.a` @type ^`x6.l` @kind object;
  #L1f842a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8430.  v1:= ":" @kind object;
  #L1f8434.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f843a.  v1:= v2.`c7.i.b` @type ^`c7.h` @kind object;
  #L1f843e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8444.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f844a.  v0:= temp @kind object;
  #L1f844c.  return v0 @kind object;
}
