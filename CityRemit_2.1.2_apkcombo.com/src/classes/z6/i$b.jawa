record `z6.i$b` @kind class @AccessFlag  extends `a7.i` @kind interface {
}
procedure `void` `<init>`(`z6.i$b` v0 @kind this) @signature `Lz6/i$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L504afc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L504b02.  return @kind void;
}
procedure `boolean` `a`(`z6.i$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lz6/i$b;.a:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L504aa8.  v1:= (`java.util.Map`) v1 @kind object;
  #L504aac.  call temp:= `b`(v0, v1) @signature `Lz6/i$b;.b:(Ljava/util/Map;)Z` @kind virtual;
  #L504ab2.  v1:= temp;
  #L504ab4.  return v1;
}
procedure `boolean` `b`(`z6.i$b` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lz6/i$b;.b:(Ljava/util/Map;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L504ac8.  v0:= `@@c7.h.i` @type ^`c7.h` @kind object;
  #L504acc.  call temp:= `get`(v2, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L504ad2.  v2:= temp @kind object;
  #L504ad4.  v2:= (`z6.h`) v2 @kind object;
  #L504ad8.  if v2 == 0 then goto L504ae8;
  #L504adc.  v2:= v2.`z6.h.e` @type ^`boolean` @kind boolean;
  #L504ae0.  if v2 == 0 then goto L504ae8;
  #L504ae4.  v2:= 1I;
  #L504ae6.  goto L504aea;
  #L504ae8.  v2:= 0I;
  #L504aea.  return v2;
}
