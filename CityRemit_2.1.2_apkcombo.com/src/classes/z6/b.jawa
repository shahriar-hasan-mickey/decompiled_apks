record `z6.b` @kind class @AccessFlag PUBLIC extends `z6.e` @kind interface {
  `z6.f` `z6.b.a` @AccessFlag PRIVATE_FINAL;
  `z6.i` `z6.b.b` @AccessFlag PRIVATE_FINAL;
  `e7.c` `z6.b.c` @AccessFlag PRIVATE_FINAL;
  `z6.a` `z6.b.d` @AccessFlag PRIVATE_FINAL;
  `long` `z6.b.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`z6.b` v1 @kind this, `x6.g` v2 @kind object, `z6.f` v3 @kind object, `z6.a` v4 @kind object) @signature `Lz6/b;.<init>:(Lx6/g;Lz6/f;Lz6/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L503eb8.  v0:= new `a7.b`;
  #L503ebc.  call `<init>`(v0) @signature `La7/b;.<init>:()V` @kind direct;
  #L503ec2.  call `<init>`(v1, v2, v3, v4, v0) @signature `Lz6/b;.<init>:(Lx6/g;Lz6/f;Lz6/a;La7/a;)V` @kind direct;
  #L503ec8.  return @kind void;
}
procedure `void` `<init>`(`z6.b` v2 @kind this, `x6.g` v3 @kind object, `z6.f` v4 @kind object, `z6.a` v5 @kind object, `a7.a` v6 @kind object) @signature `Lz6/b;.<init>:(Lx6/g;Lz6/f;Lz6/a;La7/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L503edc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L503ee2.  v0:= 0L;
  #L503ee6.  v2.`z6.b.e` @type ^`long` := v0 @kind wide;
  #L503eea.  v2.`z6.b.a` @type ^`z6.f` := v4 @kind object;
  #L503eee.  v0:= "Persistence" @kind object;
  #L503ef2.  call temp:= `q`(v3, v0) @signature `Lx6/g;.q:(Ljava/lang/String;)Le7/c;` @kind virtual;
  #L503ef8.  v3:= temp @kind object;
  #L503efa.  v2.`z6.b.c` @type ^`e7.c` := v3 @kind object;
  #L503efe.  v0:= new `z6.i`;
  #L503f02.  call `<init>`(v0, v4, v3, v6) @signature `Lz6/i;.<init>:(Lz6/f;Le7/c;La7/a;)V` @kind direct;
  #L503f08.  v2.`z6.b.b` @type ^`z6.i` := v0 @kind object;
  #L503f0c.  v2.`z6.b.d` @type ^`z6.a` := v5 @kind object;
  #L503f10.  return @kind void;
}
procedure `void` `q`(`z6.b` v7 @kind this) @signature `Lz6/b;.q:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L503fb8.  v0:= v7.`z6.b.e` @type ^`long` @kind wide;
  #L503fbc.  v2:= 1L;
  #L503fc0.  v0:= v0 + v2 @kind long;
  #L503fc2.  v7.`z6.b.e` @type ^`long` := v0 @kind wide;
  #L503fc6.  v2:= v7.`z6.b.d` @type ^`z6.a` @kind object;
  #L503fca.  call temp:= `d`(v2, v0) @signature `Lz6/a;.d:(J)Z` @kind interface;
  #L503fd0.  v0:= temp;
  #L503fd2.  if v0 == 0 then goto L5040f0;
  #L503fd6.  v0:= v7.`z6.b.c` @type ^`e7.c` @kind object;
  #L503fda.  call temp:= `f`(v0) @signature `Le7/c;.f:()Z` @kind virtual;
  #L503fe0.  v0:= temp;
  #L503fe2.  v1:= 0I;
  #L503fe4.  if v0 == 0 then goto L503ffa;
  #L503fe8.  v0:= v7.`z6.b.c` @type ^`e7.c` @kind object;
  #L503fec.  v2:= new `java.lang.Object`[v1];
  #L503ff0.  v3:= "Reached prune check threshold." @kind object;
  #L503ff4.  call `b`(v0, v3, v2) @signature `Le7/c;.b:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L503ffa.  v2:= 0L;
  #L503ffe.  v7.`z6.b.e` @type ^`long` := v2 @kind wide;
  #L504002.  v0:= 1I;
  #L504004.  v2:= v7.`z6.b.a` @type ^`z6.f` @kind object;
  #L504008.  call temp:= `o`(v2) @signature `Lz6/f;.o:()J` @kind interface;
  #L50400e.  v2:= temp @kind wide;
  #L504010.  v4:= v7.`z6.b.c` @type ^`e7.c` @kind object;
  #L504014.  call temp:= `f`(v4) @signature `Le7/c;.f:()Z` @kind virtual;
  #L50401a.  v4:= temp;
  #L50401c.  if v4 == 0 then goto L504050;
  #L504020.  v4:= v7.`z6.b.c` @type ^`e7.c` @kind object;
  #L504024.  v5:= new `java.lang.StringBuilder`;
  #L504028.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50402e.  v6:= "Cache size: " @kind object;
  #L504032.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504038.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L50403e.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L504044.  v5:= temp @kind object;
  #L504046.  v6:= new `java.lang.Object`[v1];
  #L50404a.  call `b`(v4, v5, v6) @signature `Le7/c;.b:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L504050.  if v0 == 0 then goto L5040f0;
  #L504054.  v4:= v7.`z6.b.d` @type ^`z6.a` @kind object;
  #L504058.  v5:= v7.`z6.b.b` @type ^`z6.i` @kind object;
  #L50405c.  call temp:= `f`(v5) @signature `Lz6/i;.f:()J` @kind virtual;
  #L504062.  v5:= temp @kind wide;
  #L504064.  call temp:= `a`(v4, v2, v5) @signature `Lz6/a;.a:(JJ)Z` @kind interface;
  #L50406a.  v2:= temp;
  #L50406c.  if v2 == 0 then goto L5040f0;
  #L504070.  v2:= v7.`z6.b.b` @type ^`z6.i` @kind object;
  #L504074.  v3:= v7.`z6.b.d` @type ^`z6.a` @kind object;
  #L504078.  call temp:= `p`(v2, v3) @signature `Lz6/i;.p:(Lz6/a;)Lz6/g;` @kind virtual;
  #L50407e.  v2:= temp @kind object;
  #L504080.  call temp:= `e`(v2) @signature `Lz6/g;.e:()Z` @kind virtual;
  #L504086.  v3:= temp;
  #L504088.  if v3 == 0 then goto L5040a0;
  #L50408c.  v3:= v7.`z6.b.a` @type ^`z6.f` @kind object;
  #L504090.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L504096.  v4:= temp @kind object;
  #L504098.  call `n`(v3, v4, v2) @signature `Lz6/f;.n:(Lx6/l;Lz6/g;)V` @kind interface;
  #L50409e.  goto L5040a2;
  #L5040a0.  v0:= 0I;
  #L5040a2.  v2:= v7.`z6.b.a` @type ^`z6.f` @kind object;
  #L5040a6.  call temp:= `o`(v2) @signature `Lz6/f;.o:()J` @kind interface;
  #L5040ac.  v2:= temp @kind wide;
  #L5040ae.  v4:= v7.`z6.b.c` @type ^`e7.c` @kind object;
  #L5040b2.  call temp:= `f`(v4) @signature `Le7/c;.f:()Z` @kind virtual;
  #L5040b8.  v4:= temp;
  #L5040ba.  if v4 == 0 then goto L504050;
  #L5040be.  v4:= v7.`z6.b.c` @type ^`e7.c` @kind object;
  #L5040c2.  v5:= new `java.lang.StringBuilder`;
  #L5040c6.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5040cc.  v6:= "Cache size after prune: " @kind object;
  #L5040d0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5040d6.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L5040dc.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5040e2.  v5:= temp @kind object;
  #L5040e4.  v6:= new `java.lang.Object`[v1];
  #L5040e8.  call `b`(v4, v5, v6) @signature `Le7/c;.b:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L5040ee.  goto L504050;
  #L5040f0.  return @kind void;
}
procedure `void` `a`(`z6.b` v1 @kind this, `x6.l` v2 @kind object, `x6.b` v3 @kind object, `long` v4 ) @signature `Lz6/b;.a:(Lx6/l;Lx6/b;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50413c.  v0:= v1.`z6.b.a` @type ^`z6.f` @kind object;
  #L504140.  call `a`(v0, v2, v3, v4) @signature `Lz6/f;.a:(Lx6/l;Lx6/b;J)V` @kind interface;
  #L504146.  return @kind void;
}
procedure `void` `b`(`z6.b` v1 @kind this) @signature `Lz6/b;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L504104.  v0:= v1.`z6.b.a` @type ^`z6.f` @kind object;
  #L504108.  call `b`(v0) @signature `Lz6/f;.b:()V` @kind interface;
  #L50410e.  return @kind void;
}
procedure `void` `c`(`z6.b` v1 @kind this, `long` v2 ) @signature `Lz6/b;.c:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L504120.  v0:= v1.`z6.b.a` @type ^`z6.f` @kind object;
  #L504124.  call `c`(v0, v2) @signature `Lz6/f;.c:(J)V` @kind interface;
  #L50412a.  return @kind void;
}
procedure `void` `d`(`z6.b` v1 @kind this, `x6.l` v2 @kind object, `f7.n` v3 @kind object, `long` v4 ) @signature `Lz6/b;.d:(Lx6/l;Lf7/n;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L504158.  v0:= v1.`z6.b.a` @type ^`z6.f` @kind object;
  #L50415c.  call `d`(v0, v2, v3, v4) @signature `Lz6/f;.d:(Lx6/l;Lf7/n;J)V` @kind interface;
  #L504162.  return @kind void;
}
procedure `java.util.List` `e`(`z6.b` v1 @kind this) @signature `Lz6/b;.e:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503e98.  v0:= v1.`z6.b.a` @type ^`z6.f` @kind object;
  #L503e9c.  call temp:= `e`(v0) @signature `Lz6/f;.e:()Ljava/util/List;` @kind interface;
  #L503ea2.  v0:= temp @kind object;
  #L503ea4.  return v0 @kind object;
}
procedure `void` `f`(`z6.b` v1 @kind this, `c7.i` v2 @kind object) @signature `Lz6/b;.f:(Lc7/i;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L504190.  call temp:= `g`(v2) @signature `Lc7/i;.g:()Z` @kind virtual;
  #L504196.  v0:= temp;
  #L504198.  if v0 == 0 then goto L5041b0;
  #L50419c.  v0:= v1.`z6.b.b` @type ^`z6.i` @kind object;
  #L5041a0.  call temp:= `e`(v2) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L5041a6.  v2:= temp @kind object;
  #L5041a8.  call `t`(v0, v2) @signature `Lz6/i;.t:(Lx6/l;)V` @kind virtual;
  #L5041ae.  goto L5041ba;
  #L5041b0.  v0:= v1.`z6.b.b` @type ^`z6.i` @kind object;
  #L5041b4.  call `w`(v0, v2) @signature `Lz6/i;.w:(Lc7/i;)V` @kind virtual;
  #L5041ba.  return @kind void;
}
procedure `java.lang.Object` `g`(`z6.b` v2 @kind this, `java.util.concurrent.Callable` v3 @kind object) @signature `Lz6/b;.g:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L503e1c.  v0:= v2.`z6.b.a` @type ^`z6.f` @kind object;
  #L503e20.  call `g`(v0) @signature `Lz6/f;.g:()V` @kind interface;
  #L503e26.  call temp:= `call`(v3) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L503e2c.  v3:= temp @kind object;
  #L503e2e.  v0:= v2.`z6.b.a` @type ^`z6.f` @kind object;
  #L503e32.  call `s`(v0) @signature `Lz6/f;.s:()V` @kind interface;
  #L503e38.  v0:= v2.`z6.b.a` @type ^`z6.f` @kind object;
  #L503e3c.  call `f`(v0) @signature `Lz6/f;.f:()V` @kind interface;
  #L503e42.  return v3 @kind object;
  #L503e44.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L503e46.  v0:= v2.`z6.b.c` @type ^`e7.c` @kind object;
  #L503e4a.  v1:= "Caught Throwable." @kind object;
  #L503e4e.  call `c`(v0, v1, v3) @signature `Le7/c;.c:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L503e54.  v0:= new `java.lang.RuntimeException`;
  #L503e58.  call `<init>`(v0, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L503e5e.  throw v0;
  #L503e60.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L503e62.  v0:= v2.`z6.b.a` @type ^`z6.f` @kind object;
  #L503e66.  call `f`(v0) @signature `Lz6/f;.f:()V` @kind interface;
  #L503e6c.  throw v3;
  catch `java.lang.Throwable` @[L503e26..L503e38] goto L503e44;
  catch `java.lang.Throwable` @[L503e46..L503e60] goto L503e60;
}
procedure `void` `h`(`z6.b` v3 @kind this, `c7.i` v4 @kind object, `java.util.Set` v5 @kind object, `java.util.Set` v6 @kind object) @signature `Lz6/b;.h:(Lc7/i;Ljava/util/Set;Ljava/util/Set;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L5042b8.  call temp:= `g`(v4) @signature `Lc7/i;.g:()Z` @kind virtual;
  #L5042be.  v0:= temp;
  #L5042c0.  v1:= 1I;
  #L5042c2.  v0:= v0 ^~ v1 @kind int;
  #L5042c4.  v2:= "We should only track keys for filtered queries." @kind object;
  #L5042c8.  call `g`(v0, v2) @signature `La7/m;.g:(ZLjava/lang/String;)V` @kind static;
  #L5042ce.  v0:= v3.`z6.b.b` @type ^`z6.i` @kind object;
  #L5042d2.  call temp:= `i`(v0, v4) @signature `Lz6/i;.i:(Lc7/i;)Lz6/h;` @kind virtual;
  #L5042d8.  v4:= temp @kind object;
  #L5042da.  if v4 == 0 then goto L5042e8;
  #L5042de.  v0:= v4.`z6.h.e` @type ^`boolean` @kind boolean;
  #L5042e2.  if v0 == 0 then goto L5042e8;
  #L5042e6.  goto L5042ea;
  #L5042e8.  v1:= 0I;
  #L5042ea.  v0:= "We only expect tracked keys for currently-active queries." @kind object;
  #L5042ee.  call `g`(v1, v0) @signature `La7/m;.g:(ZLjava/lang/String;)V` @kind static;
  #L5042f4.  v0:= v3.`z6.b.a` @type ^`z6.f` @kind object;
  #L5042f8.  v1:= v4.`z6.h.a` @type ^`long` @kind wide;
  #L5042fc.  call `t`(v0, v1, v5, v6) @signature `Lz6/f;.t:(JLjava/util/Set;Ljava/util/Set;)V` @kind interface;
  #L504302.  return @kind void;
}
procedure `void` `i`(`z6.b` v1 @kind this, `x6.l` v2 @kind object, `f7.n` v3 @kind object) @signature `Lz6/b;.i:(Lx6/l;Lf7/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503f24.  v0:= v1.`z6.b.b` @type ^`z6.i` @kind object;
  #L503f28.  call temp:= `l`(v0, v2) @signature `Lz6/i;.l:(Lx6/l;)Z` @kind virtual;
  #L503f2e.  v0:= temp;
  #L503f30.  if v0 != 0 then goto L503f48;
  #L503f34.  v0:= v1.`z6.b.a` @type ^`z6.f` @kind object;
  #L503f38.  call `r`(v0, v2, v3) @signature `Lz6/f;.r:(Lx6/l;Lf7/n;)V` @kind interface;
  #L503f3e.  v3:= v1.`z6.b.b` @type ^`z6.i` @kind object;
  #L503f42.  call `g`(v3, v2) @signature `Lz6/i;.g:(Lx6/l;)V` @kind virtual;
  #L503f48.  return @kind void;
}
procedure `void` `j`(`z6.b` v3 @kind this, `c7.i` v4 @kind object, `java.util.Set` v5 @kind object) @signature `Lz6/b;.j:(Lc7/i;Ljava/util/Set;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L5041e8.  call temp:= `g`(v4) @signature `Lc7/i;.g:()Z` @kind virtual;
  #L5041ee.  v0:= temp;
  #L5041f0.  v1:= 1I;
  #L5041f2.  v0:= v0 ^~ v1 @kind int;
  #L5041f4.  v2:= "We should only track keys for filtered queries." @kind object;
  #L5041f8.  call `g`(v0, v2) @signature `La7/m;.g:(ZLjava/lang/String;)V` @kind static;
  #L5041fe.  v0:= v3.`z6.b.b` @type ^`z6.i` @kind object;
  #L504202.  call temp:= `i`(v0, v4) @signature `Lz6/i;.i:(Lc7/i;)Lz6/h;` @kind virtual;
  #L504208.  v4:= temp @kind object;
  #L50420a.  if v4 == 0 then goto L504218;
  #L50420e.  v0:= v4.`z6.h.e` @type ^`boolean` @kind boolean;
  #L504212.  if v0 == 0 then goto L504218;
  #L504216.  goto L50421a;
  #L504218.  v1:= 0I;
  #L50421a.  v0:= "We only expect tracked keys for currently-active queries." @kind object;
  #L50421e.  call `g`(v1, v0) @signature `La7/m;.g:(ZLjava/lang/String;)V` @kind static;
  #L504224.  v0:= v3.`z6.b.a` @type ^`z6.f` @kind object;
  #L504228.  v1:= v4.`z6.h.a` @type ^`long` @kind wide;
  #L50422c.  call `l`(v0, v1, v5) @signature `Lz6/f;.l:(JLjava/util/Set;)V` @kind interface;
  #L504232.  return @kind void;
}
procedure `void` `k`(`z6.b` v2 @kind this, `c7.i` v3 @kind object, `f7.n` v4 @kind object) @signature `Lz6/b;.k:(Lc7/i;Lf7/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L504244.  call temp:= `g`(v3) @signature `Lc7/i;.g:()Z` @kind virtual;
  #L50424a.  v0:= temp;
  #L50424c.  if v0 == 0 then goto L504264;
  #L504250.  v0:= v2.`z6.b.a` @type ^`z6.f` @kind object;
  #L504254.  call temp:= `e`(v3) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L50425a.  v1:= temp @kind object;
  #L50425c.  call `r`(v0, v1, v4) @signature `Lz6/f;.r:(Lx6/l;Lf7/n;)V` @kind interface;
  #L504262.  goto L504276;
  #L504264.  v0:= v2.`z6.b.a` @type ^`z6.f` @kind object;
  #L504268.  call temp:= `e`(v3) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L50426e.  v1:= temp @kind object;
  #L504270.  call `m`(v0, v1, v4) @signature `Lz6/f;.m:(Lx6/l;Lf7/n;)V` @kind interface;
  #L504276.  call `f`(v2, v3) @signature `Lz6/b;.f:(Lc7/i;)V` @kind virtual;
  #L50427c.  call `q`(v2) @signature `Lz6/b;.q:()V` @kind direct;
  #L504282.  return @kind void;
}
procedure `void` `l`(`z6.b` v2 @kind this, `x6.l` v3 @kind object, `x6.b` v4 @kind object) @signature `Lz6/b;.l:(Lx6/l;Lx6/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L503f5c.  call temp:= `iterator`(v4) @signature `Lx6/b;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L503f62.  v4:= temp @kind object;
  #L503f64.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L503f6a.  v0:= temp;
  #L503f6c.  if v0 == 0 then goto L503fa4;
  #L503f70.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L503f76.  v0:= temp @kind object;
  #L503f78.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L503f7c.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L503f82.  v1:= temp @kind object;
  #L503f84.  v1:= (`x6.l`) v1 @kind object;
  #L503f88.  call temp:= `c0`(v3, v1) @signature `Lx6/l;.c0:(Lx6/l;)Lx6/l;` @kind virtual;
  #L503f8e.  v1:= temp @kind object;
  #L503f90.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L503f96.  v0:= temp @kind object;
  #L503f98.  v0:= (`f7.n`) v0 @kind object;
  #L503f9c.  call `i`(v2, v1, v0) @signature `Lz6/b;.i:(Lx6/l;Lf7/n;)V` @kind virtual;
  #L503fa2.  goto L503f64;
  #L503fa4.  return @kind void;
}
procedure `void` `m`(`z6.b` v1 @kind this, `x6.l` v2 @kind object, `x6.b` v3 @kind object) @signature `Lz6/b;.m:(Lx6/l;Lx6/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L504294.  v0:= v1.`z6.b.a` @type ^`z6.f` @kind object;
  #L504298.  call `u`(v0, v2, v3) @signature `Lz6/f;.u:(Lx6/l;Lx6/b;)V` @kind interface;
  #L50429e.  call `q`(v1) @signature `Lz6/b;.q:()V` @kind direct;
  #L5042a4.  return @kind void;
}
procedure `c7.a` `n`(`z6.b` v7 @kind this, `c7.i` v8 @kind object) @signature `Lz6/b;.n:(Lc7/i;)Lc7/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L503d1c.  v0:= v7.`z6.b.b` @type ^`z6.i` @kind object;
  #L503d20.  call temp:= `n`(v0, v8) @signature `Lz6/i;.n:(Lc7/i;)Z` @kind virtual;
  #L503d26.  v0:= temp;
  #L503d28.  v1:= 1I;
  #L503d2a.  v2:= 0I;
  #L503d2c.  if v0 == 0 then goto L503d6c;
  #L503d30.  v0:= v7.`z6.b.b` @type ^`z6.i` @kind object;
  #L503d34.  call temp:= `i`(v0, v8) @signature `Lz6/i;.i:(Lc7/i;)Lz6/h;` @kind virtual;
  #L503d3a.  v0:= temp @kind object;
  #L503d3c.  call temp:= `g`(v8) @signature `Lc7/i;.g:()Z` @kind virtual;
  #L503d42.  v3:= temp;
  #L503d44.  if v3 != 0 then goto L503d66;
  #L503d48.  if v0 == 0 then goto L503d66;
  #L503d4c.  v3:= v0.`z6.h.d` @type ^`boolean` @kind boolean;
  #L503d50.  if v3 == 0 then goto L503d66;
  #L503d54.  v3:= v7.`z6.b.a` @type ^`z6.f` @kind object;
  #L503d58.  v4:= v0.`z6.h.a` @type ^`long` @kind wide;
  #L503d5c.  call temp:= `i`(v3, v4) @signature `Lz6/f;.i:(J)Ljava/util/Set;` @kind interface;
  #L503d62.  v0:= temp @kind object;
  #L503d64.  goto L503d68;
  #L503d66.  v0:= 0I;
  #L503d68.  v3:= 1I;
  #L503d6a.  goto L503d82;
  #L503d6c.  v0:= v7.`z6.b.b` @type ^`z6.i` @kind object;
  #L503d70.  call temp:= `e`(v8) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L503d76.  v3:= temp @kind object;
  #L503d78.  call temp:= `j`(v0, v3) @signature `Lz6/i;.j:(Lx6/l;)Ljava/util/Set;` @kind virtual;
  #L503d7e.  v0:= temp @kind object;
  #L503d80.  v3:= 0I;
  #L503d82.  v4:= v7.`z6.b.a` @type ^`z6.f` @kind object;
  #L503d86.  call temp:= `e`(v8) @signature `Lc7/i;.e:()Lx6/l;` @kind virtual;
  #L503d8c.  v5:= temp @kind object;
  #L503d8e.  call temp:= `p`(v4, v5) @signature `Lz6/f;.p:(Lx6/l;)Lf7/n;` @kind interface;
  #L503d94.  v4:= temp @kind object;
  #L503d96.  if v0 == 0 then goto L503df0;
  #L503d9a.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L503da0.  v2:= temp @kind object;
  #L503da2.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L503da8.  v0:= temp @kind object;
  #L503daa.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L503db0.  v5:= temp;
  #L503db2.  if v5 == 0 then goto L503dd4;
  #L503db6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L503dbc.  v5:= temp @kind object;
  #L503dbe.  v5:= (`f7.b`) v5 @kind object;
  #L503dc2.  call temp:= `z`(v4, v5) @signature `Lf7/n;.z:(Lf7/b;)Lf7/n;` @kind interface;
  #L503dc8.  v6:= temp @kind object;
  #L503dca.  call temp:= `m`(v2, v5, v6) @signature `Lf7/n;.m:(Lf7/b;Lf7/n;)Lf7/n;` @kind interface;
  #L503dd0.  v2:= temp @kind object;
  #L503dd2.  goto L503daa;
  #L503dd4.  v0:= new `c7.a`;
  #L503dd8.  call temp:= `c`(v8) @signature `Lc7/i;.c:()Lf7/h;` @kind virtual;
  #L503dde.  v8:= temp @kind object;
  #L503de0.  call temp:= `h`(v2, v8) @signature `Lf7/i;.h:(Lf7/n;Lf7/h;)Lf7/i;` @kind static;
  #L503de6.  v8:= temp @kind object;
  #L503de8.  call `<init>`(v0, v8, v3, v1) @signature `Lc7/a;.<init>:(Lf7/i;ZZ)V` @kind direct;
  #L503dee.  return v0 @kind object;
  #L503df0.  v0:= new `c7.a`;
  #L503df4.  call temp:= `c`(v8) @signature `Lc7/i;.c:()Lf7/h;` @kind virtual;
  #L503dfa.  v8:= temp @kind object;
  #L503dfc.  call temp:= `h`(v4, v8) @signature `Lf7/i;.h:(Lf7/n;Lf7/h;)Lf7/i;` @kind static;
  #L503e02.  v8:= temp @kind object;
  #L503e04.  call `<init>`(v0, v8, v3, v2) @signature `Lc7/a;.<init>:(Lf7/i;ZZ)V` @kind direct;
  #L503e0a.  return v0 @kind object;
}
procedure `void` `o`(`z6.b` v1 @kind this, `c7.i` v2 @kind object) @signature `Lz6/b;.o:(Lc7/i;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5041cc.  v0:= v1.`z6.b.b` @type ^`z6.i` @kind object;
  #L5041d0.  call `x`(v0, v2) @signature `Lz6/i;.x:(Lc7/i;)V` @kind virtual;
  #L5041d6.  return @kind void;
}
procedure `void` `p`(`z6.b` v1 @kind this, `c7.i` v2 @kind object) @signature `Lz6/b;.p:(Lc7/i;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L504174.  v0:= v1.`z6.b.b` @type ^`z6.i` @kind object;
  #L504178.  call `u`(v0, v2) @signature `Lz6/i;.u:(Lc7/i;)V` @kind virtual;
  #L50417e.  return @kind void;
}
