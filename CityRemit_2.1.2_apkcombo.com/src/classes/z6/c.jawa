record `z6.c` @kind class @AccessFlag PUBLIC extends `z6.a` @kind interface {
  `long` `z6.c.a` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`z6.c` v0 @kind this, `long` v1 ) @signature `Lz6/c;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L50439c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5043a2.  v0.`z6.c.a` @type ^`long` := v1 @kind wide;
  #L5043a6.  return @kind void;
}
procedure `boolean` `a`(`z6.c` v3 @kind this, `long` v4 , `long` v6 ) @signature `Lz6/c;.a:(JJ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L504338.  v0:= v3.`z6.c.a` @type ^`long` @kind wide;
  #L50433c.  v2:= lcmp(v4, v0);
  #L504340.  if v2 > 0 then goto L504356;
  #L504344.  v4:= 1000L;
  #L504348.  v0:= lcmp(v6, v4);
  #L50434c.  if v0 <= 0 then goto L504352;
  #L504350.  goto L504356;
  #L504352.  v4:= 0I;
  #L504354.  goto L504358;
  #L504356.  v4:= 1I;
  #L504358.  return v4;
}
procedure `float` `b`(`z6.c` v1 @kind this) @signature `Lz6/c;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50436c.  v0:= 1045220557I;
  #L504372.  return v0;
}
procedure `long` `c`(`z6.c` v2 @kind this) @signature `Lz6/c;.c:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L504384.  v0:= 1000L;
  #L504388.  return v0 @kind wide;
}
procedure `boolean` `d`(`z6.c` v3 @kind this, `long` v4 ) @signature `Lz6/c;.d:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L504314.  v0:= 1000L;
  #L504318.  v2:= lcmp(v4, v0);
  #L50431c.  if v2 <= 0 then goto L504324;
  #L504320.  v4:= 1I;
  #L504322.  goto L504326;
  #L504324.  v4:= 0I;
  #L504326.  return v4;
}
