record `z6.i$e` @kind class @AccessFlag  extends `a7.d$c` @kind interface {
  `z6.i` `z6.i$e.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`z6.i$e` v0 @kind this, `z6.i` v1 @kind object) @signature `Lz6/i$e;.<init>:(Lz6/i;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L504c50.  v0.`z6.i$e.a` @type ^`z6.i` := v1 @kind object;
  #L504c54.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L504c5a.  return @kind void;
}
procedure `java.lang.Object` `a`(`z6.i$e` v0 @kind this, `x6.l` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lz6/i$e;.a:(Lx6/l;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L504bc8.  v2:= (`java.util.Map`) v2 @kind object;
  #L504bcc.  v3:= (`java.lang.Void`) v3 @kind object;
  #L504bd0.  call temp:= `b`(v0, v1, v2, v3) @signature `Lz6/i$e;.b:(Lx6/l;Ljava/util/Map;Ljava/lang/Void;)Ljava/lang/Void;` @kind virtual;
  #L504bd6.  v1:= temp @kind object;
  #L504bd8.  return v1 @kind object;
}
procedure `java.lang.Void` `b`(`z6.i$e` v0 @kind this, `x6.l` v1 @kind object, `java.util.Map` v2 @kind object, `java.lang.Void` v3 @kind object) @signature `Lz6/i$e;.b:(Lx6/l;Ljava/util/Map;Ljava/lang/Void;)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;

  #L504bec.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L504bf2.  v1:= temp @kind object;
  #L504bf4.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L504bfa.  v1:= temp @kind object;
  #L504bfc.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L504c02.  v2:= temp;
  #L504c04.  if v2 == 0 then goto L504c3c;
  #L504c08.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L504c0e.  v2:= temp @kind object;
  #L504c10.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L504c14.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L504c1a.  v2:= temp @kind object;
  #L504c1c.  v2:= (`z6.h`) v2 @kind object;
  #L504c20.  v3:= v2.`z6.h.d` @type ^`boolean` @kind boolean;
  #L504c24.  if v3 != 0 then goto L504bfc;
  #L504c28.  v3:= v0.`z6.i$e.a` @type ^`z6.i` @kind object;
  #L504c2c.  call temp:= `b`(v2) @signature `Lz6/h;.b:()Lz6/h;` @kind virtual;
  #L504c32.  v2:= temp @kind object;
  #L504c34.  call `b`(v3, v2) @signature `Lz6/i;.b:(Lz6/i;Lz6/h;)V` @kind static;
  #L504c3a.  goto L504bfc;
  #L504c3c.  v1:= 0I;
  #L504c3e.  return v1 @kind object;
}
