record `i1.l` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`i1.l` v0 @kind this) @signature `Li1/l;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3523fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L352402.  return @kind void;
}
procedure `i1.l$a` `a`() @signature `Li1/l;.a:()Li1/l$a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L352398.  v0:= new `i1.f$b`;
  #L35239c.  call `<init>`(v0) @signature `Li1/f$b;.<init>:()V` @kind direct;
  #L3523a2.  return v0 @kind object;
}
procedure `i1.l$a` `i`(`java.lang.String` v1 @kind object) @signature `Li1/l;.i:(Ljava/lang/String;)Li1/l$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3523b4.  call temp:= `a`() @signature `Li1/l;.a:()Li1/l$a;` @kind static;
  #L3523ba.  v0:= temp @kind object;
  #L3523bc.  call temp:= `g`(v0, v1) @signature `Li1/l$a;.g:(Ljava/lang/String;)Li1/l$a;` @kind virtual;
  #L3523c2.  v1:= temp @kind object;
  #L3523c4.  return v1 @kind object;
}
procedure `i1.l$a` `j`(`byte`[] v1 @kind object) @signature `Li1/l;.j:([B)Li1/l$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3523d8.  call temp:= `a`() @signature `Li1/l;.a:()Li1/l$a;` @kind static;
  #L3523de.  v0:= temp @kind object;
  #L3523e0.  call temp:= `f`(v0, v1) @signature `Li1/l$a;.f:([B)Li1/l$a;` @kind virtual;
  #L3523e6.  v1:= temp @kind object;
  #L3523e8.  return v1 @kind object;
}
procedure `java.lang.Integer` `b`() @signature `Li1/l;.b:()Ljava/lang/Integer;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `c`() @signature `Li1/l;.c:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `d`() @signature `Li1/l;.d:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `i1.o` `e`() @signature `Li1/l;.e:()Li1/o;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `f`() @signature `Li1/l;.f:()[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `g`() @signature `Li1/l;.g:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `h`() @signature `Li1/l;.h:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
