record `i1.e$b` @kind class @AccessFlag FINAL extends `i1.k$a` @kind class {
  `i1.k$b` `i1.e$b.a` @AccessFlag PRIVATE;
  `i1.a` `i1.e$b.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`i1.e$b` v0 @kind this) @signature `Li1/e$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3512fc.  call `<init>`(v0) @signature `Li1/k$a;.<init>:()V` @kind direct;
  #L351302.  return @kind void;
}
procedure `i1.k` `a`(`i1.e$b` v4 @kind this) @signature `Li1/e$b;.a:()Li1/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3512a4.  v0:= new `i1.e`;
  #L3512a8.  v1:= v4.`i1.e$b.a` @type ^`i1.k$b` @kind object;
  #L3512ac.  v2:= v4.`i1.e$b.b` @type ^`i1.a` @kind object;
  #L3512b0.  v3:= 0I;
  #L3512b2.  call `<init>`(v0, v1, v2, v3) @signature `Li1/e;.<init>:(Li1/k$b;Li1/a;Li1/e$a;)V` @kind direct;
  #L3512b8.  return v0 @kind object;
}
procedure `i1.k$a` `b`(`i1.e$b` v0 @kind this, `i1.a` v1 @kind object) @signature `Li1/e$b;.b:(Li1/a;)Li1/k$a;` @AccessFlag PUBLIC {
    temp;

  #L3512cc.  v0.`i1.e$b.b` @type ^`i1.a` := v1 @kind object;
  #L3512d0.  return v0 @kind object;
}
procedure `i1.k$a` `c`(`i1.e$b` v0 @kind this, `i1.k$b` v1 @kind object) @signature `Li1/e$b;.c:(Li1/k$b;)Li1/k$a;` @AccessFlag PUBLIC {
    temp;

  #L3512e4.  v0.`i1.e$b.a` @type ^`i1.k$b` := v1 @kind object;
  #L3512e8.  return v0 @kind object;
}
