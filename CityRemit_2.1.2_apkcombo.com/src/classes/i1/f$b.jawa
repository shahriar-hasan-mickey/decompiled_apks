record `i1.f$b` @kind class @AccessFlag FINAL extends `i1.l$a` @kind class {
  `java.lang.Long` `i1.f$b.a` @AccessFlag PRIVATE;
  `java.lang.Integer` `i1.f$b.b` @AccessFlag PRIVATE;
  `java.lang.Long` `i1.f$b.c` @AccessFlag PRIVATE;
  `byte`[] `i1.f$b.d` @AccessFlag PRIVATE;
  `java.lang.String` `i1.f$b.e` @AccessFlag PRIVATE;
  `java.lang.Long` `i1.f$b.f` @AccessFlag PRIVATE;
  `i1.o` `i1.f$b.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`i1.f$b` v0 @kind this) @signature `Li1/f$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L351668.  call `<init>`(v0) @signature `Li1/l$a;.<init>:()V` @kind direct;
  #L35166e.  return @kind void;
}
procedure `i1.l` `a`(`i1.f$b` v14 @kind this) @signature `Li1/f$b;.a:()Li1/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L351498.  v0:= v14.`i1.f$b.a` @type ^`java.lang.Long` @kind object;
  #L35149c.  v1:= "" @kind object;
  #L3514a0.  if v0 != 0 then goto L3514c6;
  #L3514a4.  v0:= new `java.lang.StringBuilder`;
  #L3514a8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3514ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3514b4.  v1:= " eventTimeMs" @kind object;
  #L3514b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3514be.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3514c4.  v1:= temp @kind object;
  #L3514c6.  v0:= v14.`i1.f$b.c` @type ^`java.lang.Long` @kind object;
  #L3514ca.  if v0 != 0 then goto L3514f0;
  #L3514ce.  v0:= new `java.lang.StringBuilder`;
  #L3514d2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3514d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3514de.  v1:= " eventUptimeMs" @kind object;
  #L3514e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3514e8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3514ee.  v1:= temp @kind object;
  #L3514f0.  v0:= v14.`i1.f$b.f` @type ^`java.lang.Long` @kind object;
  #L3514f4.  if v0 != 0 then goto L35151a;
  #L3514f8.  v0:= new `java.lang.StringBuilder`;
  #L3514fc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L351502.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351508.  v1:= " timezoneOffsetSeconds" @kind object;
  #L35150c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351512.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L351518.  v1:= temp @kind object;
  #L35151a.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L351520.  v0:= temp;
  #L351522.  if v0 == 0 then goto L35156a;
  #L351526.  v0:= new `i1.f`;
  #L35152a.  v1:= v14.`i1.f$b.a` @type ^`java.lang.Long` @kind object;
  #L35152e.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L351534.  v3:= temp @kind wide;
  #L351536.  v5:= v14.`i1.f$b.b` @type ^`java.lang.Integer` @kind object;
  #L35153a.  v1:= v14.`i1.f$b.c` @type ^`java.lang.Long` @kind object;
  #L35153e.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L351544.  v6:= temp @kind wide;
  #L351546.  v8:= v14.`i1.f$b.d` @type ^`byte`[] @kind object;
  #L35154a.  v9:= v14.`i1.f$b.e` @type ^`java.lang.String` @kind object;
  #L35154e.  v1:= v14.`i1.f$b.f` @type ^`java.lang.Long` @kind object;
  #L351552.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L351558.  v10:= temp @kind wide;
  #L35155a.  v12:= v14.`i1.f$b.g` @type ^`i1.o` @kind object;
  #L35155e.  v13:= 0I;
  #L351560.  v2:= v0 @kind object;
  #L351562.  call `<init>`(v2, v3, v5, v6, v8, v9, v10, v12, v13) @signature `Li1/f;.<init>:(JLjava/lang/Integer;J[BLjava/lang/String;JLi1/o;Li1/f$a;)V` @kind direct;
  #L351568.  return v0 @kind object;
  #L35156a.  v0:= new `java.lang.IllegalStateException`;
  #L35156e.  v2:= new `java.lang.StringBuilder`;
  #L351572.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L351578.  v3:= "Missing required properties:" @kind object;
  #L35157c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351582.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351588.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35158e.  v1:= temp @kind object;
  #L351590.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L351596.  throw v0;
}
procedure `i1.l$a` `b`(`i1.f$b` v0 @kind this, `java.lang.Integer` v1 @kind object) @signature `Li1/f$b;.b:(Ljava/lang/Integer;)Li1/l$a;` @AccessFlag PUBLIC {
    temp;

  #L3515a8.  v0.`i1.f$b.b` @type ^`java.lang.Integer` := v1 @kind object;
  #L3515ac.  return v0 @kind object;
}
procedure `i1.l$a` `c`(`i1.f$b` v0 @kind this, `long` v1 ) @signature `Li1/f$b;.c:(J)Li1/l$a;` @AccessFlag PUBLIC {
    temp;

  #L3515c0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3515c6.  v1:= temp @kind object;
  #L3515c8.  v0.`i1.f$b.a` @type ^`java.lang.Long` := v1 @kind object;
  #L3515cc.  return v0 @kind object;
}
procedure `i1.l$a` `d`(`i1.f$b` v0 @kind this, `long` v1 ) @signature `Li1/f$b;.d:(J)Li1/l$a;` @AccessFlag PUBLIC {
    temp;

  #L3515e0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3515e6.  v1:= temp @kind object;
  #L3515e8.  v0.`i1.f$b.c` @type ^`java.lang.Long` := v1 @kind object;
  #L3515ec.  return v0 @kind object;
}
procedure `i1.l$a` `e`(`i1.f$b` v0 @kind this, `i1.o` v1 @kind object) @signature `Li1/f$b;.e:(Li1/o;)Li1/l$a;` @AccessFlag PUBLIC {
    temp;

  #L351600.  v0.`i1.f$b.g` @type ^`i1.o` := v1 @kind object;
  #L351604.  return v0 @kind object;
}
procedure `i1.l$a` `f`(`i1.f$b` v0 @kind this, `byte`[] v1 @kind object) @signature `Li1/f$b;.f:([B)Li1/l$a;` @AccessFlag  {
    temp;

  #L351618.  v0.`i1.f$b.d` @type ^`byte`[] := v1 @kind object;
  #L35161c.  return v0 @kind object;
}
procedure `i1.l$a` `g`(`i1.f$b` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Li1/f$b;.g:(Ljava/lang/String;)Li1/l$a;` @AccessFlag  {
    temp;

  #L351630.  v0.`i1.f$b.e` @type ^`java.lang.String` := v1 @kind object;
  #L351634.  return v0 @kind object;
}
procedure `i1.l$a` `h`(`i1.f$b` v0 @kind this, `long` v1 ) @signature `Li1/f$b;.h:(J)Li1/l$a;` @AccessFlag PUBLIC {
    temp;

  #L351648.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L35164e.  v1:= temp @kind object;
  #L351650.  v0.`i1.f$b.f` @type ^`java.lang.Long` := v1 @kind object;
  #L351654.  return v0 @kind object;
}
