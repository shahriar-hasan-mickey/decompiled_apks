record `i1.e` @kind class @AccessFlag FINAL extends `i1.k` @kind class {
  `i1.k$b` `i1.e.a` @AccessFlag PRIVATE_FINAL;
  `i1.a` `i1.e.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`i1.e` v0 @kind this, `i1.k$b` v1 @kind object, `i1.a` v2 @kind object) @signature `Li1/e;.<init>:(Li1/k$b;Li1/a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L351460.  call `<init>`(v0) @signature `Li1/k;.<init>:()V` @kind direct;
  #L351466.  v0.`i1.e.a` @type ^`i1.k$b` := v1 @kind object;
  #L35146a.  v0.`i1.e.b` @type ^`i1.a` := v2 @kind object;
  #L35146e.  return @kind void;
}
procedure `void` `<init>`(`i1.e` v0 @kind this, `i1.k$b` v1 @kind object, `i1.a` v2 @kind object, `i1.e$a` v3 @kind object) @signature `Li1/e;.<init>:(Li1/k$b;Li1/a;Li1/e$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L351480.  call `<init>`(v0, v1, v2) @signature `Li1/e;.<init>:(Li1/k$b;Li1/a;)V` @kind direct;
  #L351486.  return @kind void;
}
procedure `i1.a` `b`(`i1.e` v1 @kind this) @signature `Li1/e;.b:()Li1/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351390.  v0:= v1.`i1.e.b` @type ^`i1.a` @kind object;
  #L351394.  return v0 @kind object;
}
procedure `i1.k$b` `c`(`i1.e` v1 @kind this) @signature `Li1/e;.c:()Li1/k$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3513a8.  v0:= v1.`i1.e.a` @type ^`i1.k$b` @kind object;
  #L3513ac.  return v0 @kind object;
}
procedure `boolean` `equals`(`i1.e` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Li1/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L351314.  v0:= 1I;
  #L351316.  if v5 != v4 then goto L35131c;
  #L35131a.  return v0;
  #L35131c.  v1:= instanceof @variable v5 @type ^`i1.k` @kind boolean;
  #L351320.  v2:= 0I;
  #L351322.  if v1 == 0 then goto L35137c;
  #L351326.  v5:= (`i1.k`) v5 @kind object;
  #L35132a.  v1:= v4.`i1.e.a` @type ^`i1.k$b` @kind object;
  #L35132e.  if v1 != 0 then goto L351340;
  #L351332.  call temp:= `c`(v5) @signature `Li1/k;.c:()Li1/k$b;` @kind virtual;
  #L351338.  v1:= temp @kind object;
  #L35133a.  if v1 != 0 then goto L351378;
  #L35133e.  goto L351354;
  #L351340.  call temp:= `c`(v5) @signature `Li1/k;.c:()Li1/k$b;` @kind virtual;
  #L351346.  v3:= temp @kind object;
  #L351348.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L35134e.  v1:= temp;
  #L351350.  if v1 == 0 then goto L351378;
  #L351354.  v1:= v4.`i1.e.b` @type ^`i1.a` @kind object;
  #L351358.  call temp:= `b`(v5) @signature `Li1/k;.b:()Li1/a;` @kind virtual;
  #L35135e.  v5:= temp @kind object;
  #L351360.  if v1 != 0 then goto L35136a;
  #L351364.  if v5 != 0 then goto L351378;
  #L351368.  goto L35137a;
  #L35136a.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L351370.  v5:= temp;
  #L351372.  if v5 == 0 then goto L351378;
  #L351376.  goto L35137a;
  #L351378.  v0:= 0I;
  #L35137a.  return v0;
  #L35137c.  return v2;
}
procedure `int` `hashCode`(`i1.e` v3 @kind this) @signature `Li1/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3513c0.  v0:= v3.`i1.e.a` @type ^`i1.k$b` @kind object;
  #L3513c4.  v1:= 0I;
  #L3513c6.  if v0 != 0 then goto L3513ce;
  #L3513ca.  v0:= 0I;
  #L3513cc.  goto L3513d6;
  #L3513ce.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L3513d4.  v0:= temp;
  #L3513d6.  v2:= 1000003I;
  #L3513dc.  v0:= v0 ^~ v2 @kind int;
  #L3513de.  v0:= v0 * v2 @kind int;
  #L3513e2.  v2:= v3.`i1.e.b` @type ^`i1.a` @kind object;
  #L3513e6.  if v2 != 0 then goto L3513ec;
  #L3513ea.  goto L3513f4;
  #L3513ec.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3513f2.  v1:= temp;
  #L3513f4.  v0:= v0 ^~ v1 @kind int;
  #L3513f6.  return v0;
}
procedure `java.lang.String` `toString`(`i1.e` v2 @kind this) @signature `Li1/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L351408.  v0:= new `java.lang.StringBuilder`;
  #L35140c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L351412.  v1:= "ClientInfo{clientType=" @kind object;
  #L351416.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35141c.  v1:= v2.`i1.e.a` @type ^`i1.k$b` @kind object;
  #L351420.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351426.  v1:= ", androidClientInfo=" @kind object;
  #L35142a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351430.  v1:= v2.`i1.e.b` @type ^`i1.a` @kind object;
  #L351434.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35143a.  v1:= "}" @kind object;
  #L35143e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351444.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35144a.  v0:= temp @kind object;
  #L35144c.  return v0 @kind object;
}
