record `i1.n` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`i1.n` v0 @kind this) @signature `Li1/n;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L352588.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35258e.  return @kind void;
}
procedure `i1.n` `a`(`long` v1 ) @signature `Li1/n;.a:(J)Li1/n;` @AccessFlag STATIC {
    temp;
    v0;

  #L3524a0.  v0:= new `i1.h`;
  #L3524a4.  call `<init>`(v0, v1) @signature `Li1/h;.<init>:(J)V` @kind direct;
  #L3524aa.  return v0 @kind object;
}
procedure `i1.n` `b`(`java.io.Reader` v3 @kind object) @signature `Li1/n;.b:(Ljava/io/Reader;)Li1/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3524bc.  v0:= new `android.util.JsonReader`;
  #L3524c0.  call `<init>`(v0, v3) @signature `Landroid/util/JsonReader;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L3524c6.  call `beginObject`(v0) @signature `Landroid/util/JsonReader;.beginObject:()V` @kind virtual;
  #L3524cc.  call temp:= `hasNext`(v0) @signature `Landroid/util/JsonReader;.hasNext:()Z` @kind virtual;
  #L3524d2.  v3:= temp;
  #L3524d4.  if v3 == 0 then goto L352540;
  #L3524d8.  call temp:= `nextName`(v0) @signature `Landroid/util/JsonReader;.nextName:()Ljava/lang/String;` @kind virtual;
  #L3524de.  v3:= temp @kind object;
  #L3524e0.  v1:= "nextRequestWaitMillis" @kind object;
  #L3524e4.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3524ea.  v3:= temp;
  #L3524ec.  if v3 == 0 then goto L352538;
  #L3524f0.  call temp:= `peek`(v0) @signature `Landroid/util/JsonReader;.peek:()Landroid/util/JsonToken;` @kind virtual;
  #L3524f6.  v3:= temp @kind object;
  #L3524f8.  v1:= `@@android.util.JsonToken.STRING` @type ^`android.util.JsonToken` @kind object;
  #L3524fc.  if v3 != v1 then goto L352520;
  #L352500.  call temp:= `nextString`(v0) @signature `Landroid/util/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L352506.  v3:= temp @kind object;
  #L352508.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L35250e.  v1:= temp @kind wide;
  #L352510.  call temp:= `a`(v1) @signature `Li1/n;.a:(J)Li1/n;` @kind static;
  #L352516.  v3:= temp @kind object;
  #L352518.  call `close`(v0) @signature `Landroid/util/JsonReader;.close:()V` @kind virtual;
  #L35251e.  return v3 @kind object;
  #L352520.  call temp:= `nextLong`(v0) @signature `Landroid/util/JsonReader;.nextLong:()J` @kind virtual;
  #L352526.  v1:= temp @kind wide;
  #L352528.  call temp:= `a`(v1) @signature `Li1/n;.a:(J)Li1/n;` @kind static;
  #L35252e.  v3:= temp @kind object;
  #L352530.  call `close`(v0) @signature `Landroid/util/JsonReader;.close:()V` @kind virtual;
  #L352536.  return v3 @kind object;
  #L352538.  call `skipValue`(v0) @signature `Landroid/util/JsonReader;.skipValue:()V` @kind virtual;
  #L35253e.  goto L3524cc;
  #L352540.  v3:= new `java.io.IOException`;
  #L352544.  v1:= "Response is missing nextRequestWaitMillis field." @kind object;
  #L352548.  call `<init>`(v3, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35254e.  throw v3;
  #L352550.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L352552.  call `close`(v0) @signature `Landroid/util/JsonReader;.close:()V` @kind virtual;
  #L352558.  throw v3;
  catch `java.lang.Throwable` @[L3524c6..L352518] goto L352550;
  catch `java.lang.Throwable` @[L352520..L352530] goto L352550;
  catch `java.lang.Throwable` @[L352538..L352550] goto L352550;
}
procedure `long` `c`() @signature `Li1/n;.c:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
