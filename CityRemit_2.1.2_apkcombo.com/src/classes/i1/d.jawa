record `i1.d` @kind class @AccessFlag FINAL extends `i1.j` @kind class {
  `java.util.List` `i1.d.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`i1.d` v1 @kind this, `java.util.List` v2 @kind object) @signature `Li1/d;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L35127c.  call `<init>`(v1) @signature `Li1/j;.<init>:()V` @kind direct;
  #L351282.  v0:= "Null logRequests" @kind object;
  #L351286.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L35128c.  v1.`i1.d.a` @type ^`java.util.List` := v2 @kind object;
  #L351290.  return @kind void;
}
procedure `java.util.List` `c`(`i1.d` v1 @kind this) @signature `Li1/d;.c:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351264.  v0:= v1.`i1.d.a` @type ^`java.util.List` @kind object;
  #L351268.  return v0 @kind object;
}
procedure `boolean` `equals`(`i1.d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Li1/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3511b8.  if v2 != v1 then goto L3511c0;
  #L3511bc.  v2:= 1I;
  #L3511be.  return v2;
  #L3511c0.  v0:= instanceof @variable v2 @type ^`i1.j` @kind boolean;
  #L3511c4.  if v0 == 0 then goto L3511e2;
  #L3511c8.  v2:= (`i1.j`) v2 @kind object;
  #L3511cc.  v0:= v1.`i1.d.a` @type ^`java.util.List` @kind object;
  #L3511d0.  call temp:= `c`(v2) @signature `Li1/j;.c:()Ljava/util/List;` @kind virtual;
  #L3511d6.  v2:= temp @kind object;
  #L3511d8.  call temp:= `equals`(v0, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3511de.  v2:= temp;
  #L3511e0.  return v2;
  #L3511e2.  v2:= 0I;
  #L3511e4.  return v2;
}
procedure `int` `hashCode`(`i1.d` v2 @kind this) @signature `Li1/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3511f8.  v0:= v2.`i1.d.a` @type ^`java.util.List` @kind object;
  #L3511fc.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L351202.  v0:= temp;
  #L351204.  v1:= 1000003I;
  #L35120a.  v0:= v0 ^~ v1 @kind int;
  #L35120c.  return v0;
}
procedure `java.lang.String` `toString`(`i1.d` v2 @kind this) @signature `Li1/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L351220.  v0:= new `java.lang.StringBuilder`;
  #L351224.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35122a.  v1:= "BatchedLogRequest{logRequests=" @kind object;
  #L35122e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351234.  v1:= v2.`i1.d.a` @type ^`java.util.List` @kind object;
  #L351238.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35123e.  v1:= "}" @kind object;
  #L351242.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351248.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35124e.  v0:= temp @kind object;
  #L351250.  return v0 @kind object;
}
