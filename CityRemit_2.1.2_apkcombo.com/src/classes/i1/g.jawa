record `i1.g` @kind class @AccessFlag FINAL extends `i1.m` @kind class {
  `long` `i1.g.a` @AccessFlag PRIVATE_FINAL;
  `long` `i1.g.b` @AccessFlag PRIVATE_FINAL;
  `i1.k` `i1.g.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.Integer` `i1.g.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `i1.g.e` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `i1.g.f` @AccessFlag PRIVATE_FINAL;
  `i1.p` `i1.g.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`i1.g` v0 @kind this, `long` v1 , `long` v3 , `i1.k` v5 @kind object, `java.lang.Integer` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object, `i1.p` v9 @kind object) @signature `Li1/g;.<init>:(JJLi1/k;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/List;Li1/p;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L351eec.  call `<init>`(v0) @signature `Li1/m;.<init>:()V` @kind direct;
  #L351ef2.  v0.`i1.g.a` @type ^`long` := v1 @kind wide;
  #L351ef6.  v0.`i1.g.b` @type ^`long` := v3 @kind wide;
  #L351efa.  v0.`i1.g.c` @type ^`i1.k` := v5 @kind object;
  #L351efe.  v0.`i1.g.d` @type ^`java.lang.Integer` := v6 @kind object;
  #L351f02.  v0.`i1.g.e` @type ^`java.lang.String` := v7 @kind object;
  #L351f06.  v0.`i1.g.f` @type ^`java.util.List` := v8 @kind object;
  #L351f0a.  v0.`i1.g.g` @type ^`i1.p` := v9 @kind object;
  #L351f0e.  return @kind void;
}
procedure `void` `<init>`(`i1.g` v0 @kind this, `long` v1 , `long` v3 , `i1.k` v5 @kind object, `java.lang.Integer` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object, `i1.p` v9 @kind object, `i1.g$a` v10 @kind object) @signature `Li1/g;.<init>:(JJLi1/k;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/List;Li1/p;Li1/g$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L351f20.  call `<init>`(v0, v1, v3, v5, v6, v7, v8, v9) @signature `Li1/g;.<init>:(JJLi1/k;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/List;Li1/p;)V` @kind direct;
  #L351f26.  return @kind void;
}
procedure `i1.k` `b`(`i1.g` v1 @kind this) @signature `Li1/g;.b:()Li1/k;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351cc4.  v0:= v1.`i1.g.c` @type ^`i1.k` @kind object;
  #L351cc8.  return v0 @kind object;
}
procedure `java.util.List` `c`(`i1.g` v1 @kind this) @signature `Li1/g;.c:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351ea4.  v0:= v1.`i1.g.f` @type ^`java.util.List` @kind object;
  #L351ea8.  return v0 @kind object;
}
procedure `java.lang.Integer` `d`(`i1.g` v1 @kind this) @signature `Li1/g;.d:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351db8.  v0:= v1.`i1.g.d` @type ^`java.lang.Integer` @kind object;
  #L351dbc.  return v0 @kind object;
}
procedure `java.lang.String` `e`(`i1.g` v1 @kind this) @signature `Li1/g;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351dd0.  v0:= v1.`i1.g.e` @type ^`java.lang.String` @kind object;
  #L351dd4.  return v0 @kind object;
}
procedure `boolean` `equals`(`i1.g` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Li1/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L351ba4.  v0:= 1I;
  #L351ba6.  if v8 != v7 then goto L351bac;
  #L351baa.  return v0;
  #L351bac.  v1:= instanceof @variable v8 @type ^`i1.m` @kind boolean;
  #L351bb0.  v2:= 0I;
  #L351bb2.  if v1 == 0 then goto L351cb2;
  #L351bb6.  v8:= (`i1.m`) v8 @kind object;
  #L351bba.  v3:= v7.`i1.g.a` @type ^`long` @kind wide;
  #L351bbe.  call temp:= `g`(v8) @signature `Li1/m;.g:()J` @kind virtual;
  #L351bc4.  v5:= temp @kind wide;
  #L351bc6.  v1:= lcmp(v3, v5);
  #L351bca.  if v1 != 0 then goto L351cae;
  #L351bce.  v3:= v7.`i1.g.b` @type ^`long` @kind wide;
  #L351bd2.  call temp:= `h`(v8) @signature `Li1/m;.h:()J` @kind virtual;
  #L351bd8.  v5:= temp @kind wide;
  #L351bda.  v1:= lcmp(v3, v5);
  #L351bde.  if v1 != 0 then goto L351cae;
  #L351be2.  v1:= v7.`i1.g.c` @type ^`i1.k` @kind object;
  #L351be6.  if v1 != 0 then goto L351bf8;
  #L351bea.  call temp:= `b`(v8) @signature `Li1/m;.b:()Li1/k;` @kind virtual;
  #L351bf0.  v1:= temp @kind object;
  #L351bf2.  if v1 != 0 then goto L351cae;
  #L351bf6.  goto L351c0c;
  #L351bf8.  call temp:= `b`(v8) @signature `Li1/m;.b:()Li1/k;` @kind virtual;
  #L351bfe.  v3:= temp @kind object;
  #L351c00.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L351c06.  v1:= temp;
  #L351c08.  if v1 == 0 then goto L351cae;
  #L351c0c.  v1:= v7.`i1.g.d` @type ^`java.lang.Integer` @kind object;
  #L351c10.  if v1 != 0 then goto L351c22;
  #L351c14.  call temp:= `d`(v8) @signature `Li1/m;.d:()Ljava/lang/Integer;` @kind virtual;
  #L351c1a.  v1:= temp @kind object;
  #L351c1c.  if v1 != 0 then goto L351cae;
  #L351c20.  goto L351c36;
  #L351c22.  call temp:= `d`(v8) @signature `Li1/m;.d:()Ljava/lang/Integer;` @kind virtual;
  #L351c28.  v3:= temp @kind object;
  #L351c2a.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L351c30.  v1:= temp;
  #L351c32.  if v1 == 0 then goto L351cae;
  #L351c36.  v1:= v7.`i1.g.e` @type ^`java.lang.String` @kind object;
  #L351c3a.  if v1 != 0 then goto L351c4c;
  #L351c3e.  call temp:= `e`(v8) @signature `Li1/m;.e:()Ljava/lang/String;` @kind virtual;
  #L351c44.  v1:= temp @kind object;
  #L351c46.  if v1 != 0 then goto L351cae;
  #L351c4a.  goto L351c60;
  #L351c4c.  call temp:= `e`(v8) @signature `Li1/m;.e:()Ljava/lang/String;` @kind virtual;
  #L351c52.  v3:= temp @kind object;
  #L351c54.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L351c5a.  v1:= temp;
  #L351c5c.  if v1 == 0 then goto L351cae;
  #L351c60.  v1:= v7.`i1.g.f` @type ^`java.util.List` @kind object;
  #L351c64.  if v1 != 0 then goto L351c76;
  #L351c68.  call temp:= `c`(v8) @signature `Li1/m;.c:()Ljava/util/List;` @kind virtual;
  #L351c6e.  v1:= temp @kind object;
  #L351c70.  if v1 != 0 then goto L351cae;
  #L351c74.  goto L351c8a;
  #L351c76.  call temp:= `c`(v8) @signature `Li1/m;.c:()Ljava/util/List;` @kind virtual;
  #L351c7c.  v3:= temp @kind object;
  #L351c7e.  call temp:= `equals`(v1, v3) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L351c84.  v1:= temp;
  #L351c86.  if v1 == 0 then goto L351cae;
  #L351c8a.  v1:= v7.`i1.g.g` @type ^`i1.p` @kind object;
  #L351c8e.  call temp:= `f`(v8) @signature `Li1/m;.f:()Li1/p;` @kind virtual;
  #L351c94.  v8:= temp @kind object;
  #L351c96.  if v1 != 0 then goto L351ca0;
  #L351c9a.  if v8 != 0 then goto L351cae;
  #L351c9e.  goto L351cb0;
  #L351ca0.  call temp:= `equals`(v1, v8) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L351ca6.  v8:= temp;
  #L351ca8.  if v8 == 0 then goto L351cae;
  #L351cac.  goto L351cb0;
  #L351cae.  v0:= 0I;
  #L351cb0.  return v0;
  #L351cb2.  return v2;
}
procedure `i1.p` `f`(`i1.g` v1 @kind this) @signature `Li1/g;.f:()Li1/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L351cdc.  v0:= v1.`i1.g.g` @type ^`i1.p` @kind object;
  #L351ce0.  return v0 @kind object;
}
procedure `long` `g`(`i1.g` v2 @kind this) @signature `Li1/g;.g:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L351ebc.  v0:= v2.`i1.g.a` @type ^`long` @kind wide;
  #L351ec0.  return v0 @kind wide;
}
procedure `long` `h`(`i1.g` v2 @kind this) @signature `Li1/g;.h:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L351ed4.  v0:= v2.`i1.g.b` @type ^`long` @kind wide;
  #L351ed8.  return v0 @kind wide;
}
procedure `int` `hashCode`(`i1.g` v7 @kind this) @signature `Li1/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L351cf4.  v0:= v7.`i1.g.a` @type ^`long` @kind wide;
  #L351cf8.  v2:= 32I;
  #L351cfc.  v3:= v0 ^>> v2 @kind long;
  #L351d00.  v0:= v0 ^~ v3 @kind long;
  #L351d02.  v1:= (`int`) v0 @kind l2i;
  #L351d04.  v0:= 1000003I;
  #L351d0a.  v1:= v1 ^~ v0 @kind int;
  #L351d0c.  v1:= v1 * v0 @kind int;
  #L351d10.  v3:= v7.`i1.g.b` @type ^`long` @kind wide;
  #L351d14.  v5:= v3 ^>> v2 @kind long;
  #L351d18.  v2:= v5 ^~ v3 @kind long;
  #L351d1c.  v3:= (`int`) v2 @kind l2i;
  #L351d1e.  v1:= v1 ^~ v3 @kind int;
  #L351d20.  v1:= v1 * v0 @kind int;
  #L351d24.  v2:= v7.`i1.g.c` @type ^`i1.k` @kind object;
  #L351d28.  v3:= 0I;
  #L351d2a.  if v2 != 0 then goto L351d32;
  #L351d2e.  v2:= 0I;
  #L351d30.  goto L351d3a;
  #L351d32.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L351d38.  v2:= temp;
  #L351d3a.  v1:= v1 ^~ v2 @kind int;
  #L351d3c.  v1:= v1 * v0 @kind int;
  #L351d40.  v2:= v7.`i1.g.d` @type ^`java.lang.Integer` @kind object;
  #L351d44.  if v2 != 0 then goto L351d4c;
  #L351d48.  v2:= 0I;
  #L351d4a.  goto L351d54;
  #L351d4c.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Integer;.hashCode:()I` @kind virtual;
  #L351d52.  v2:= temp;
  #L351d54.  v1:= v1 ^~ v2 @kind int;
  #L351d56.  v1:= v1 * v0 @kind int;
  #L351d5a.  v2:= v7.`i1.g.e` @type ^`java.lang.String` @kind object;
  #L351d5e.  if v2 != 0 then goto L351d66;
  #L351d62.  v2:= 0I;
  #L351d64.  goto L351d6e;
  #L351d66.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L351d6c.  v2:= temp;
  #L351d6e.  v1:= v1 ^~ v2 @kind int;
  #L351d70.  v1:= v1 * v0 @kind int;
  #L351d74.  v2:= v7.`i1.g.f` @type ^`java.util.List` @kind object;
  #L351d78.  if v2 != 0 then goto L351d80;
  #L351d7c.  v2:= 0I;
  #L351d7e.  goto L351d88;
  #L351d80.  call temp:= `hashCode`(v2) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L351d86.  v2:= temp;
  #L351d88.  v1:= v1 ^~ v2 @kind int;
  #L351d8a.  v1:= v1 * v0 @kind int;
  #L351d8e.  v0:= v7.`i1.g.g` @type ^`i1.p` @kind object;
  #L351d92.  if v0 != 0 then goto L351d98;
  #L351d96.  goto L351da0;
  #L351d98.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L351d9e.  v3:= temp;
  #L351da0.  v0:= v1 ^~ v3 @kind int;
  #L351da4.  return v0;
}
procedure `java.lang.String` `toString`(`i1.g` v3 @kind this) @signature `Li1/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L351de8.  v0:= new `java.lang.StringBuilder`;
  #L351dec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L351df2.  v1:= "LogRequest{requestTimeMs=" @kind object;
  #L351df6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351dfc.  v1:= v3.`i1.g.a` @type ^`long` @kind wide;
  #L351e00.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L351e06.  v1:= ", requestUptimeMs=" @kind object;
  #L351e0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351e10.  v1:= v3.`i1.g.b` @type ^`long` @kind wide;
  #L351e14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L351e1a.  v1:= ", clientInfo=" @kind object;
  #L351e1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351e24.  v1:= v3.`i1.g.c` @type ^`i1.k` @kind object;
  #L351e28.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351e2e.  v1:= ", logSource=" @kind object;
  #L351e32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351e38.  v1:= v3.`i1.g.d` @type ^`java.lang.Integer` @kind object;
  #L351e3c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351e42.  v1:= ", logSourceName=" @kind object;
  #L351e46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351e4c.  v1:= v3.`i1.g.e` @type ^`java.lang.String` @kind object;
  #L351e50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351e56.  v1:= ", logEvents=" @kind object;
  #L351e5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351e60.  v1:= v3.`i1.g.f` @type ^`java.util.List` @kind object;
  #L351e64.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351e6a.  v1:= ", qosTier=" @kind object;
  #L351e6e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351e74.  v1:= v3.`i1.g.g` @type ^`i1.p` @kind object;
  #L351e78.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351e7e.  v1:= "}" @kind object;
  #L351e82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L351e88.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L351e8e.  v0:= temp @kind object;
  #L351e90.  return v0 @kind object;
}
