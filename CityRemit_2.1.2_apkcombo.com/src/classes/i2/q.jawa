record `i2.q` @kind class @AccessFlag FINAL {
  `i2.c` `i2.q.a` @AccessFlag PUBLIC;
  `long` `i2.q.b` @AccessFlag PUBLIC;
  `long` `i2.q.c` @AccessFlag PUBLIC;
  `long` `i2.q.d` @AccessFlag PUBLIC;
  `int` `i2.q.e` @AccessFlag PUBLIC;
  `int` `i2.q.f` @AccessFlag PUBLIC;
  `long`[] `i2.q.g` @AccessFlag PUBLIC;
  `int`[] `i2.q.h` @AccessFlag PUBLIC;
  `int`[] `i2.q.i` @AccessFlag PUBLIC;
  `long`[] `i2.q.j` @AccessFlag PUBLIC;
  `boolean`[] `i2.q.k` @AccessFlag PUBLIC;
  `boolean` `i2.q.l` @AccessFlag PUBLIC;
  `boolean`[] `i2.q.m` @AccessFlag PUBLIC;
  `i2.p` `i2.q.n` @AccessFlag PUBLIC;
  `s3.z` `i2.q.o` @AccessFlag PUBLIC_FINAL;
  `boolean` `i2.q.p` @AccessFlag PUBLIC;
  `long` `i2.q.q` @AccessFlag PUBLIC;
  `boolean` `i2.q.r` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`i2.q` v2 @kind this) @signature `Li2/q;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L35bd98.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35bd9e.  v0:= 0I;
  #L35bda0.  v1:= new `long`[v0];
  #L35bda4.  v2.`i2.q.g` @type ^`long`[] := v1 @kind object;
  #L35bda8.  v1:= new `int`[v0];
  #L35bdac.  v2.`i2.q.h` @type ^`int`[] := v1 @kind object;
  #L35bdb0.  v1:= new `int`[v0];
  #L35bdb4.  v2.`i2.q.i` @type ^`int`[] := v1 @kind object;
  #L35bdb8.  v1:= new `long`[v0];
  #L35bdbc.  v2.`i2.q.j` @type ^`long`[] := v1 @kind object;
  #L35bdc0.  v1:= new `boolean`[v0];
  #L35bdc4.  v2.`i2.q.k` @type ^`boolean`[] := v1 @kind object;
  #L35bdc8.  v0:= new `boolean`[v0];
  #L35bdcc.  v2.`i2.q.m` @type ^`boolean`[] := v0 @kind object;
  #L35bdd0.  v0:= new `s3.z`;
  #L35bdd4.  call `<init>`(v0) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L35bdda.  v2.`i2.q.o` @type ^`s3.z` := v0 @kind object;
  #L35bdde.  return @kind void;
}
procedure `void` `a`(`i2.q` v3 @kind this, `a2.m` v4 @kind object) @signature `Li2/q;.a:(La2/m;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L35bdf0.  v0:= v3.`i2.q.o` @type ^`s3.z` @kind object;
  #L35bdf4.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L35bdfa.  v0:= temp @kind object;
  #L35bdfc.  v1:= v3.`i2.q.o` @type ^`s3.z` @kind object;
  #L35be00.  call temp:= `f`(v1) @signature `Ls3/z;.f:()I` @kind virtual;
  #L35be06.  v1:= temp;
  #L35be08.  v2:= 0I;
  #L35be0a.  call `readFully`(v4, v0, v2, v1) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L35be10.  v4:= v3.`i2.q.o` @type ^`s3.z` @kind object;
  #L35be14.  call `O`(v4, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L35be1a.  v3.`i2.q.p` @type ^`boolean` := v2 @kind boolean;
  #L35be1e.  return @kind void;
}
procedure `void` `b`(`i2.q` v3 @kind this, `s3.z` v4 @kind object) @signature `Li2/q;.b:(Ls3/z;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L35be30.  v0:= v3.`i2.q.o` @type ^`s3.z` @kind object;
  #L35be34.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L35be3a.  v0:= temp @kind object;
  #L35be3c.  v1:= v3.`i2.q.o` @type ^`s3.z` @kind object;
  #L35be40.  call temp:= `f`(v1) @signature `Ls3/z;.f:()I` @kind virtual;
  #L35be46.  v1:= temp;
  #L35be48.  v2:= 0I;
  #L35be4a.  call `j`(v4, v0, v2, v1) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L35be50.  v4:= v3.`i2.q.o` @type ^`s3.z` @kind object;
  #L35be54.  call `O`(v4, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L35be5a.  v3.`i2.q.p` @type ^`boolean` := v2 @kind boolean;
  #L35be5e.  return @kind void;
}
procedure `long` `c`(`i2.q` v3 @kind this, `int` v4 ) @signature `Li2/q;.c:(I)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L35bd7c.  v0:= v3.`i2.q.j` @type ^`long`[] @kind object;
  #L35bd80.  v1:= v0[v4] @kind wide;
  #L35bd84.  return v1 @kind wide;
}
procedure `void` `d`(`i2.q` v1 @kind this, `int` v2 ) @signature `Li2/q;.d:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35be70.  v0:= v1.`i2.q.o` @type ^`s3.z` @kind object;
  #L35be74.  call `K`(v0, v2) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L35be7a.  v2:= 1I;
  #L35be7c.  v1.`i2.q.l` @type ^`boolean` := v2 @kind boolean;
  #L35be80.  v1.`i2.q.p` @type ^`boolean` := v2 @kind boolean;
  #L35be84.  return @kind void;
}
procedure `void` `e`(`i2.q` v1 @kind this, `int` v2 , `int` v3 ) @signature `Li2/q;.e:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35be98.  v1.`i2.q.e` @type ^`int` := v2;
  #L35be9c.  v1.`i2.q.f` @type ^`int` := v3;
  #L35bea0.  v0:= v1.`i2.q.h` @type ^`int`[] @kind object;
  #L35bea4.  v0:= length @variable v0;
  #L35bea6.  if v0 >= v2 then goto L35beba;
  #L35beaa.  v0:= new `long`[v2];
  #L35beae.  v1.`i2.q.g` @type ^`long`[] := v0 @kind object;
  #L35beb2.  v2:= new `int`[v2];
  #L35beb6.  v1.`i2.q.h` @type ^`int`[] := v2 @kind object;
  #L35beba.  v2:= v1.`i2.q.i` @type ^`int`[] @kind object;
  #L35bebe.  v2:= length @variable v2;
  #L35bec0.  if v2 >= v3 then goto L35beec;
  #L35bec4.  v3:= v3 * 125;
  #L35bec8.  v3:= v3 / 100;
  #L35becc.  v2:= new `int`[v3];
  #L35bed0.  v1.`i2.q.i` @type ^`int`[] := v2 @kind object;
  #L35bed4.  v2:= new `long`[v3];
  #L35bed8.  v1.`i2.q.j` @type ^`long`[] := v2 @kind object;
  #L35bedc.  v2:= new `boolean`[v3];
  #L35bee0.  v1.`i2.q.k` @type ^`boolean`[] := v2 @kind object;
  #L35bee4.  v2:= new `boolean`[v3];
  #L35bee8.  v1.`i2.q.m` @type ^`boolean`[] := v2 @kind object;
  #L35beec.  return @kind void;
}
procedure `void` `f`(`i2.q` v3 @kind this) @signature `Li2/q;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L35bf00.  v0:= 0I;
  #L35bf02.  v3.`i2.q.e` @type ^`int` := v0;
  #L35bf06.  v1:= 0L;
  #L35bf0a.  v3.`i2.q.q` @type ^`long` := v1 @kind wide;
  #L35bf0e.  v3.`i2.q.r` @type ^`boolean` := v0 @kind boolean;
  #L35bf12.  v3.`i2.q.l` @type ^`boolean` := v0 @kind boolean;
  #L35bf16.  v3.`i2.q.p` @type ^`boolean` := v0 @kind boolean;
  #L35bf1a.  v0:= 0I;
  #L35bf1c.  v3.`i2.q.n` @type ^`i2.p` := v0 @kind object;
  #L35bf20.  return @kind void;
}
procedure `boolean` `g`(`i2.q` v1 @kind this, `int` v2 ) @signature `Li2/q;.g:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35bd50.  v0:= v1.`i2.q.l` @type ^`boolean` @kind boolean;
  #L35bd54.  if v0 == 0 then goto L35bd68;
  #L35bd58.  v0:= v1.`i2.q.m` @type ^`boolean`[] @kind object;
  #L35bd5c.  v2:= v0[v2] @kind boolean;
  #L35bd60.  if v2 == 0 then goto L35bd68;
  #L35bd64.  v2:= 1I;
  #L35bd66.  goto L35bd6a;
  #L35bd68.  v2:= 0I;
  #L35bd6a.  return v2;
}
