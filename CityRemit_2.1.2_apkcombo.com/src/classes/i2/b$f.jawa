record `i2.b$f` @kind class @AccessFlag FINAL extends `i2.b$c` @kind interface {
  `s3.z` `i2.b$f.a` @AccessFlag PRIVATE_FINAL;
  `int` `i2.b$f.b` @AccessFlag PRIVATE_FINAL;
  `int` `i2.b$f.c` @AccessFlag PRIVATE_FINAL;
  `int` `i2.b$f.d` @AccessFlag PRIVATE;
  `int` `i2.b$f.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`i2.b$f` v1 @kind this, `i2.a$b` v2 @kind object) @signature `Li2/b$f;.<init>:(Li2/a$b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L353424.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35342a.  v2:= v2.`i2.a$b.b` @type ^`s3.z` @kind object;
  #L35342e.  v1.`i2.b$f.a` @type ^`s3.z` := v2 @kind object;
  #L353432.  v0:= 12I;
  #L353436.  call `O`(v2, v0) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L35343c.  call temp:= `G`(v2) @signature `Ls3/z;.G:()I` @kind virtual;
  #L353442.  v0:= temp;
  #L353444.  v0:= v0 ^& 255;
  #L353448.  v1.`i2.b$f.c` @type ^`int` := v0;
  #L35344c.  call temp:= `G`(v2) @signature `Ls3/z;.G:()I` @kind virtual;
  #L353452.  v2:= temp;
  #L353454.  v1.`i2.b$f.b` @type ^`int` := v2;
  #L353458.  return @kind void;
}
procedure `int` `a`(`i2.b$f` v1 @kind this) @signature `Li2/b$f;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L353380.  v0:= -1I;
  #L353382.  return v0;
}
procedure `int` `b`(`i2.b$f` v1 @kind this) @signature `Li2/b$f;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L353394.  v0:= v1.`i2.b$f.b` @type ^`int`;
  #L353398.  return v0;
}
procedure `int` `c`(`i2.b$f` v2 @kind this) @signature `Li2/b$f;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3533ac.  v0:= v2.`i2.b$f.c` @type ^`int`;
  #L3533b0.  v1:= 8I;
  #L3533b4.  if v0 != v1 then goto L3533c6;
  #L3533b8.  v0:= v2.`i2.b$f.a` @type ^`s3.z` @kind object;
  #L3533bc.  call temp:= `C`(v0) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3533c2.  v0:= temp;
  #L3533c4.  return v0;
  #L3533c6.  v1:= 16I;
  #L3533ca.  if v0 != v1 then goto L3533dc;
  #L3533ce.  v0:= v2.`i2.b$f.a` @type ^`s3.z` @kind object;
  #L3533d2.  call temp:= `I`(v0) @signature `Ls3/z;.I:()I` @kind virtual;
  #L3533d8.  v0:= temp;
  #L3533da.  return v0;
  #L3533dc.  v0:= v2.`i2.b$f.d` @type ^`int`;
  #L3533e0.  v1:= v0 + 1;
  #L3533e4.  v2.`i2.b$f.d` @type ^`int` := v1;
  #L3533e8.  v0:= v0 %% 2;
  #L3533ec.  if v0 != 0 then goto L35340a;
  #L3533f0.  v0:= v2.`i2.b$f.a` @type ^`s3.z` @kind object;
  #L3533f4.  call temp:= `C`(v0) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3533fa.  v0:= temp;
  #L3533fc.  v2.`i2.b$f.e` @type ^`int` := v0;
  #L353400.  v0:= v0 ^& 240;
  #L353404.  v0:= v0 ^> 4;
  #L353408.  return v0;
  #L35340a.  v0:= v2.`i2.b$f.e` @type ^`int`;
  #L35340e.  v0:= v0 ^& 15;
  #L353412.  return v0;
}
