record `i2.l` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `byte`[] `a`(`java.util.UUID` v1 @kind object, `byte`[] v2 @kind object) @signature `Li2/l;.a:(Ljava/util/UUID;[B)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35b04c.  v0:= 0I;
  #L35b04e.  call temp:= `b`(v1, v0, v2) @signature `Li2/l;.b:(Ljava/util/UUID;[Ljava/util/UUID;[B)[B` @kind static;
  #L35b054.  v1:= temp @kind object;
  #L35b056.  return v1 @kind object;
}
procedure `byte`[] `b`(`java.util.UUID` v5 @kind object, `java.util.UUID`[] v6 @kind object, `byte`[] v7 @kind object) @signature `Li2/l;.b:(Ljava/util/UUID;[Ljava/util/UUID;[B)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L35b068.  v0:= 0I;
  #L35b06a.  if v7 == 0 then goto L35b072;
  #L35b06e.  v1:= length @variable v7;
  #L35b070.  goto L35b074;
  #L35b072.  v1:= 0I;
  #L35b074.  v1:= v1 + 32;
  #L35b078.  if v6 == 0 then goto L35b088;
  #L35b07c.  v2:= length @variable v6;
  #L35b07e.  v2:= v2 * 16;
  #L35b082.  v2:= v2 + 4;
  #L35b086.  v1:= v1 + v2 @kind int;
  #L35b088.  call temp:= `allocate`(v1) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L35b08e.  v2:= temp @kind object;
  #L35b090.  call temp:= `putInt`(v2, v1) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L35b096.  v1:= 1886614376I;
  #L35b09c.  call temp:= `putInt`(v2, v1) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L35b0a2.  if v6 == 0 then goto L35b0ac;
  #L35b0a6.  v1:= 16777216I;
  #L35b0aa.  goto L35b0ae;
  #L35b0ac.  v1:= 0I;
  #L35b0ae.  call temp:= `putInt`(v2, v1) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L35b0b4.  call temp:= `getMostSignificantBits`(v5) @signature `Ljava/util/UUID;.getMostSignificantBits:()J` @kind virtual;
  #L35b0ba.  v3:= temp @kind wide;
  #L35b0bc.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L35b0c2.  call temp:= `getLeastSignificantBits`(v5) @signature `Ljava/util/UUID;.getLeastSignificantBits:()J` @kind virtual;
  #L35b0c8.  v3:= temp @kind wide;
  #L35b0ca.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L35b0d0.  if v6 == 0 then goto L35b108;
  #L35b0d4.  v5:= length @variable v6;
  #L35b0d6.  call temp:= `putInt`(v2, v5) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L35b0dc.  v5:= length @variable v6;
  #L35b0de.  if v0 >= v5 then goto L35b108;
  #L35b0e2.  v1:= v6[v0] @kind object;
  #L35b0e6.  call temp:= `getMostSignificantBits`(v1) @signature `Ljava/util/UUID;.getMostSignificantBits:()J` @kind virtual;
  #L35b0ec.  v3:= temp @kind wide;
  #L35b0ee.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L35b0f4.  call temp:= `getLeastSignificantBits`(v1) @signature `Ljava/util/UUID;.getLeastSignificantBits:()J` @kind virtual;
  #L35b0fa.  v3:= temp @kind wide;
  #L35b0fc.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L35b102.  v0:= v0 + 1;
  #L35b106.  goto L35b0de;
  #L35b108.  if v7 == 0 then goto L35b120;
  #L35b10c.  v5:= length @variable v7;
  #L35b10e.  if v5 == 0 then goto L35b120;
  #L35b112.  v5:= length @variable v7;
  #L35b114.  call temp:= `putInt`(v2, v5) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L35b11a.  call temp:= `put`(v2, v7) @signature `Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L35b120.  call temp:= `array`(v2) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L35b126.  v5:= temp @kind object;
  #L35b128.  return v5 @kind object;
}
procedure `boolean` `c`(`byte`[] v0 @kind object) @signature `Li2/l;.c:([B)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L35b028.  call temp:= `d`(v0) @signature `Li2/l;.d:([B)Li2/l$a;` @kind static;
  #L35b02e.  v0:= temp @kind object;
  #L35b030.  if v0 == 0 then goto L35b038;
  #L35b034.  v0:= 1I;
  #L35b036.  goto L35b03a;
  #L35b038.  v0:= 0I;
  #L35b03a.  return v0;
}
procedure `i2.l$a` `d`(`byte`[] v9 @kind object) @signature `Li2/l;.d:([B)Li2/l$a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L35b1cc.  v0:= new `s3.z`;
  #L35b1d0.  call `<init>`(v0, v9) @signature `Ls3/z;.<init>:([B)V` @kind direct;
  #L35b1d6.  call temp:= `f`(v0) @signature `Ls3/z;.f:()I` @kind virtual;
  #L35b1dc.  v9:= temp;
  #L35b1de.  v1:= 0I;
  #L35b1e0.  v2:= 32I;
  #L35b1e4.  if v9 >= v2 then goto L35b1ea;
  #L35b1e8.  return v1 @kind object;
  #L35b1ea.  v9:= 0I;
  #L35b1ec.  call `O`(v0, v9) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L35b1f2.  call temp:= `m`(v0) @signature `Ls3/z;.m:()I` @kind virtual;
  #L35b1f8.  v2:= temp;
  #L35b1fa.  call temp:= `a`(v0) @signature `Ls3/z;.a:()I` @kind virtual;
  #L35b200.  v3:= temp;
  #L35b202.  v3:= v3 + 4;
  #L35b206.  if v2 == v3 then goto L35b20c;
  #L35b20a.  return v1 @kind object;
  #L35b20c.  call temp:= `m`(v0) @signature `Ls3/z;.m:()I` @kind virtual;
  #L35b212.  v2:= temp;
  #L35b214.  v3:= 1886614376I;
  #L35b21a.  if v2 == v3 then goto L35b220;
  #L35b21e.  return v1 @kind object;
  #L35b220.  call temp:= `m`(v0) @signature `Ls3/z;.m:()I` @kind virtual;
  #L35b226.  v2:= temp;
  #L35b228.  call temp:= `c`(v2) @signature `Li2/a;.c:(I)I` @kind static;
  #L35b22e.  v2:= temp;
  #L35b230.  v3:= 1I;
  #L35b232.  if v2 <= v3 then goto L35b264;
  #L35b236.  v9:= new `java.lang.StringBuilder`;
  #L35b23a.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35b240.  v0:= "Unsupported pssh version: " @kind object;
  #L35b244.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35b24a.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L35b250.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35b256.  v9:= temp @kind object;
  #L35b258.  v0:= "PsshAtomUtil" @kind object;
  #L35b25c.  call `h`(v0, v9) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L35b262.  return v1 @kind object;
  #L35b264.  v4:= new `java.util.UUID`;
  #L35b268.  call temp:= `v`(v0) @signature `Ls3/z;.v:()J` @kind virtual;
  #L35b26e.  v5:= temp @kind wide;
  #L35b270.  call temp:= `v`(v0) @signature `Ls3/z;.v:()J` @kind virtual;
  #L35b276.  v7:= temp @kind wide;
  #L35b278.  call `<init>`(v4, v5, v7) @signature `Ljava/util/UUID;.<init>:(JJ)V` @kind direct;
  #L35b27e.  if v2 != v3 then goto L35b294;
  #L35b282.  call temp:= `G`(v0) @signature `Ls3/z;.G:()I` @kind virtual;
  #L35b288.  v3:= temp;
  #L35b28a.  v3:= v3 * 16;
  #L35b28e.  call `P`(v0, v3) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L35b294.  call temp:= `G`(v0) @signature `Ls3/z;.G:()I` @kind virtual;
  #L35b29a.  v3:= temp;
  #L35b29c.  call temp:= `a`(v0) @signature `Ls3/z;.a:()I` @kind virtual;
  #L35b2a2.  v5:= temp;
  #L35b2a4.  if v3 == v5 then goto L35b2aa;
  #L35b2a8.  return v1 @kind object;
  #L35b2aa.  v1:= new `byte`[v3];
  #L35b2ae.  call `j`(v0, v1, v9, v3) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L35b2b4.  v9:= new `i2.l$a`;
  #L35b2b8.  call `<init>`(v9, v4, v2, v1) @signature `Li2/l$a;.<init>:(Ljava/util/UUID;I[B)V` @kind direct;
  #L35b2be.  return v9 @kind object;
}
procedure `byte`[] `e`(`byte`[] v3 @kind object, `java.util.UUID` v4 @kind object) @signature `Li2/l;.e:([BLjava/util/UUID;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L35b13c.  call temp:= `d`(v3) @signature `Li2/l;.d:([B)Li2/l$a;` @kind static;
  #L35b142.  v3:= temp @kind object;
  #L35b144.  v0:= 0I;
  #L35b146.  if v3 != 0 then goto L35b14c;
  #L35b14a.  return v0 @kind object;
  #L35b14c.  call temp:= `a`(v3) @signature `Li2/l$a;.a:(Li2/l$a;)Ljava/util/UUID;` @kind static;
  #L35b152.  v1:= temp @kind object;
  #L35b154.  call temp:= `equals`(v4, v1) @signature `Ljava/util/UUID;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L35b15a.  v1:= temp;
  #L35b15c.  if v1 != 0 then goto L35b1b0;
  #L35b160.  v1:= new `java.lang.StringBuilder`;
  #L35b164.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35b16a.  v2:= "UUID mismatch. Expected: " @kind object;
  #L35b16e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35b174.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35b17a.  v4:= ", got: " @kind object;
  #L35b17e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35b184.  call temp:= `a`(v3) @signature `Li2/l$a;.a:(Li2/l$a;)Ljava/util/UUID;` @kind static;
  #L35b18a.  v3:= temp @kind object;
  #L35b18c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35b192.  v3:= "." @kind object;
  #L35b196.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35b19c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35b1a2.  v3:= temp @kind object;
  #L35b1a4.  v4:= "PsshAtomUtil" @kind object;
  #L35b1a8.  call `h`(v4, v3) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L35b1ae.  return v0 @kind object;
  #L35b1b0.  call temp:= `c`(v3) @signature `Li2/l$a;.c:(Li2/l$a;)[B` @kind static;
  #L35b1b6.  v3:= temp @kind object;
  #L35b1b8.  return v3 @kind object;
}
procedure `java.util.UUID` `f`(`byte`[] v0 @kind object) @signature `Li2/l;.f:([B)Ljava/util/UUID;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L35b2fc.  call temp:= `d`(v0) @signature `Li2/l;.d:([B)Li2/l$a;` @kind static;
  #L35b302.  v0:= temp @kind object;
  #L35b304.  if v0 != 0 then goto L35b30c;
  #L35b308.  v0:= 0I;
  #L35b30a.  return v0 @kind object;
  #L35b30c.  call temp:= `a`(v0) @signature `Li2/l$a;.a:(Li2/l$a;)Ljava/util/UUID;` @kind static;
  #L35b312.  v0:= temp @kind object;
  #L35b314.  return v0 @kind object;
}
procedure `int` `g`(`byte`[] v0 @kind object) @signature `Li2/l;.g:([B)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L35b2d0.  call temp:= `d`(v0) @signature `Li2/l;.d:([B)Li2/l$a;` @kind static;
  #L35b2d6.  v0:= temp @kind object;
  #L35b2d8.  if v0 != 0 then goto L35b2e0;
  #L35b2dc.  v0:= -1I;
  #L35b2de.  return v0;
  #L35b2e0.  call temp:= `b`(v0) @signature `Li2/l$a;.b:(Li2/l$a;)I` @kind static;
  #L35b2e6.  v0:= temp;
  #L35b2e8.  return v0;
}
