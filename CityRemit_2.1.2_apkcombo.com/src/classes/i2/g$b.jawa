record `i2.g$b` @kind class @AccessFlag FINAL {
  `a2.d0` `i2.g$b.a` @AccessFlag PUBLIC_FINAL;
  `i2.q` `i2.g$b.b` @AccessFlag PUBLIC_FINAL;
  `s3.z` `i2.g$b.c` @AccessFlag PUBLIC_FINAL;
  `i2.r` `i2.g$b.d` @AccessFlag PUBLIC;
  `i2.c` `i2.g$b.e` @AccessFlag PUBLIC;
  `int` `i2.g$b.f` @AccessFlag PUBLIC;
  `int` `i2.g$b.g` @AccessFlag PUBLIC;
  `int` `i2.g$b.h` @AccessFlag PUBLIC;
  `int` `i2.g$b.i` @AccessFlag PUBLIC;
  `s3.z` `i2.g$b.j` @AccessFlag PRIVATE_FINAL;
  `s3.z` `i2.g$b.k` @AccessFlag PRIVATE_FINAL;
  `boolean` `i2.g$b.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`i2.g$b` v1 @kind this, `a2.d0` v2 @kind object, `i2.r` v3 @kind object, `i2.c` v4 @kind object) @signature `Li2/g$b;.<init>:(La2/d0;Li2/r;Li2/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3567ec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3567f2.  v1.`i2.g$b.a` @type ^`a2.d0` := v2 @kind object;
  #L3567f6.  v1.`i2.g$b.d` @type ^`i2.r` := v3 @kind object;
  #L3567fa.  v1.`i2.g$b.e` @type ^`i2.c` := v4 @kind object;
  #L3567fe.  v2:= new `i2.q`;
  #L356802.  call `<init>`(v2) @signature `Li2/q;.<init>:()V` @kind direct;
  #L356808.  v1.`i2.g$b.b` @type ^`i2.q` := v2 @kind object;
  #L35680c.  v2:= new `s3.z`;
  #L356810.  call `<init>`(v2) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L356816.  v1.`i2.g$b.c` @type ^`s3.z` := v2 @kind object;
  #L35681a.  v2:= new `s3.z`;
  #L35681e.  v0:= 1I;
  #L356820.  call `<init>`(v2, v0) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L356826.  v1.`i2.g$b.j` @type ^`s3.z` := v2 @kind object;
  #L35682a.  v2:= new `s3.z`;
  #L35682e.  call `<init>`(v2) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L356834.  v1.`i2.g$b.k` @type ^`s3.z` := v2 @kind object;
  #L356838.  call `j`(v1, v3, v4) @signature `Li2/g$b;.j:(Li2/r;Li2/c;)V` @kind virtual;
  #L35683e.  return @kind void;
}
procedure `boolean` `a`(`i2.g$b` v0 @kind object) @signature `Li2/g$b;.a:(Li2/g$b;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L356420.  v0:= v0.`i2.g$b.l` @type ^`boolean` @kind boolean;
  #L356424.  return v0;
}
procedure `boolean` `b`(`i2.g$b` v0 @kind object, `boolean` v1 ) @signature `Li2/g$b;.b:(Li2/g$b;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L356438.  v0.`i2.g$b.l` @type ^`boolean` := v1 @kind boolean;
  #L35643c.  return v1;
}
procedure `int` `c`(`i2.g$b` v2 @kind this) @signature `Li2/g$b;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L356508.  v0:= v2.`i2.g$b.l` @type ^`boolean` @kind boolean;
  #L35650c.  if v0 != 0 then goto L356522;
  #L356510.  v0:= v2.`i2.g$b.d` @type ^`i2.r` @kind object;
  #L356514.  v0:= v0.`i2.r.g` @type ^`int`[] @kind object;
  #L356518.  v1:= v2.`i2.g$b.f` @type ^`int`;
  #L35651c.  v0:= v0[v1];
  #L356520.  goto L35653c;
  #L356522.  v0:= v2.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L356526.  v0:= v0.`i2.q.k` @type ^`boolean`[] @kind object;
  #L35652a.  v1:= v2.`i2.g$b.f` @type ^`int`;
  #L35652e.  v0:= v0[v1] @kind boolean;
  #L356532.  if v0 == 0 then goto L35653a;
  #L356536.  v0:= 1I;
  #L356538.  goto L35653c;
  #L35653a.  v0:= 0I;
  #L35653c.  call temp:= `g`(v2) @signature `Li2/g$b;.g:()Li2/p;` @kind virtual;
  #L356542.  v1:= temp @kind object;
  #L356544.  if v1 == 0 then goto L35654e;
  #L356548.  v1:= 2.0F;
  #L35654c.  v0:= v0 ^| v1 @kind int;
  #L35654e.  return v0;
}
procedure `long` `d`(`i2.g$b` v3 @kind this) @signature `Li2/g$b;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L356774.  v0:= v3.`i2.g$b.l` @type ^`boolean` @kind boolean;
  #L356778.  if v0 != 0 then goto L35678e;
  #L35677c.  v0:= v3.`i2.g$b.d` @type ^`i2.r` @kind object;
  #L356780.  v0:= v0.`i2.r.c` @type ^`long`[] @kind object;
  #L356784.  v1:= v3.`i2.g$b.f` @type ^`int`;
  #L356788.  v1:= v0[v1] @kind wide;
  #L35678c.  goto L35679e;
  #L35678e.  v0:= v3.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L356792.  v0:= v0.`i2.q.g` @type ^`long`[] @kind object;
  #L356796.  v1:= v3.`i2.g$b.h` @type ^`int`;
  #L35679a.  v1:= v0[v1] @kind wide;
  #L35679e.  return v1 @kind wide;
}
procedure `long` `e`(`i2.g$b` v3 @kind this) @signature `Li2/g$b;.e:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3567b0.  v0:= v3.`i2.g$b.l` @type ^`boolean` @kind boolean;
  #L3567b4.  if v0 != 0 then goto L3567ca;
  #L3567b8.  v0:= v3.`i2.g$b.d` @type ^`i2.r` @kind object;
  #L3567bc.  v0:= v0.`i2.r.f` @type ^`long`[] @kind object;
  #L3567c0.  v1:= v3.`i2.g$b.f` @type ^`int`;
  #L3567c4.  v1:= v0[v1] @kind wide;
  #L3567c8.  goto L3567da;
  #L3567ca.  v0:= v3.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L3567ce.  v1:= v3.`i2.g$b.f` @type ^`int`;
  #L3567d2.  call temp:= `c`(v0, v1) @signature `Li2/q;.c:(I)J` @kind virtual;
  #L3567d8.  v1:= temp @kind wide;
  #L3567da.  return v1 @kind wide;
}
procedure `int` `f`(`i2.g$b` v2 @kind this) @signature `Li2/g$b;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L356560.  v0:= v2.`i2.g$b.l` @type ^`boolean` @kind boolean;
  #L356564.  if v0 != 0 then goto L35657a;
  #L356568.  v0:= v2.`i2.g$b.d` @type ^`i2.r` @kind object;
  #L35656c.  v0:= v0.`i2.r.d` @type ^`int`[] @kind object;
  #L356570.  v1:= v2.`i2.g$b.f` @type ^`int`;
  #L356574.  v0:= v0[v1];
  #L356578.  goto L35658a;
  #L35657a.  v0:= v2.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L35657e.  v0:= v0.`i2.q.i` @type ^`int`[] @kind object;
  #L356582.  v1:= v2.`i2.g$b.f` @type ^`int`;
  #L356586.  v0:= v0[v1];
  #L35658a.  return v0;
}
procedure `i2.p` `g`(`i2.g$b` v3 @kind this) @signature `Li2/g$b;.g:()Li2/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3564a4.  v0:= v3.`i2.g$b.l` @type ^`boolean` @kind boolean;
  #L3564a8.  v1:= 0I;
  #L3564aa.  if v0 != 0 then goto L3564b0;
  #L3564ae.  return v1 @kind object;
  #L3564b0.  v0:= v3.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L3564b4.  v0:= v0.`i2.q.a` @type ^`i2.c` @kind object;
  #L3564b8.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3564be.  v0:= temp @kind object;
  #L3564c0.  v0:= (`i2.c`) v0 @kind object;
  #L3564c4.  v0:= v0.`i2.c.a` @type ^`int`;
  #L3564c8.  v2:= v3.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L3564cc.  v2:= v2.`i2.q.n` @type ^`i2.p` @kind object;
  #L3564d0.  if v2 == 0 then goto L3564d6;
  #L3564d4.  goto L3564e6;
  #L3564d6.  v2:= v3.`i2.g$b.d` @type ^`i2.r` @kind object;
  #L3564da.  v2:= v2.`i2.r.a` @type ^`i2.o` @kind object;
  #L3564de.  call temp:= `a`(v2, v0) @signature `Li2/o;.a:(I)Li2/p;` @kind virtual;
  #L3564e4.  v2:= temp @kind object;
  #L3564e6.  if v2 == 0 then goto L3564f4;
  #L3564ea.  v0:= v2.`i2.p.a` @type ^`boolean` @kind boolean;
  #L3564ee.  if v0 == 0 then goto L3564f4;
  #L3564f2.  v1:= v2 @kind object;
  #L3564f4.  return v1 @kind object;
}
procedure `boolean` `h`(`i2.g$b` v5 @kind this) @signature `Li2/g$b;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L356450.  v0:= v5.`i2.g$b.f` @type ^`int`;
  #L356454.  v1:= 1I;
  #L356456.  v0:= v0 + v1 @kind int;
  #L356458.  v5.`i2.g$b.f` @type ^`int` := v0;
  #L35645c.  v0:= v5.`i2.g$b.l` @type ^`boolean` @kind boolean;
  #L356460.  v2:= 0I;
  #L356462.  if v0 != 0 then goto L356468;
  #L356466.  return v2;
  #L356468.  v0:= v5.`i2.g$b.g` @type ^`int`;
  #L35646c.  v0:= v0 + v1 @kind int;
  #L35646e.  v5.`i2.g$b.g` @type ^`int` := v0;
  #L356472.  v3:= v5.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L356476.  v3:= v3.`i2.q.h` @type ^`int`[] @kind object;
  #L35647a.  v4:= v5.`i2.g$b.h` @type ^`int`;
  #L35647e.  v3:= v3[v4];
  #L356482.  if v0 != v3 then goto L356492;
  #L356486.  v4:= v4 + v1 @kind int;
  #L356488.  v5.`i2.g$b.h` @type ^`int` := v4;
  #L35648c.  v5.`i2.g$b.g` @type ^`int` := v2;
  #L356490.  return v2;
  #L356492.  return v1;
}
procedure `int` `i`(`i2.g$b` v10 @kind this, `int` v11 , `int` v12 ) @signature `Li2/g$b;.i:(II)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35659c.  call temp:= `g`(v10) @signature `Li2/g$b;.g:()Li2/p;` @kind virtual;
  #L3565a2.  v0:= temp @kind object;
  #L3565a4.  v1:= 0I;
  #L3565a6.  if v0 != 0 then goto L3565ac;
  #L3565aa.  return v1;
  #L3565ac.  v2:= v0.`i2.p.d` @type ^`int`;
  #L3565b0.  if v2 == 0 then goto L3565be;
  #L3565b4.  v0:= v10.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L3565b8.  v0:= v0.`i2.q.o` @type ^`s3.z` @kind object;
  #L3565bc.  goto L3565e6;
  #L3565be.  v0:= v0.`i2.p.e` @type ^`byte`[] @kind object;
  #L3565c2.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3565c8.  v0:= temp @kind object;
  #L3565ca.  v0:= (`byte`[]) v0 @kind object;
  #L3565ce.  v2:= v10.`i2.g$b.k` @type ^`s3.z` @kind object;
  #L3565d2.  v3:= length @variable v0;
  #L3565d4.  call `M`(v2, v0, v3) @signature `Ls3/z;.M:([BI)V` @kind virtual;
  #L3565da.  v2:= v10.`i2.g$b.k` @type ^`s3.z` @kind object;
  #L3565de.  v0:= length @variable v0;
  #L3565e0.  v9:= v2 @kind object;
  #L3565e2.  v2:= v0;
  #L3565e4.  v0:= v9 @kind object;
  #L3565e6.  v3:= v10.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L3565ea.  v4:= v10.`i2.g$b.f` @type ^`int`;
  #L3565ee.  call temp:= `g`(v3, v4) @signature `Li2/q;.g:(I)Z` @kind virtual;
  #L3565f4.  v3:= temp;
  #L3565f6.  v4:= 1I;
  #L3565f8.  if v3 != 0 then goto L356606;
  #L3565fc.  if v12 == 0 then goto L356602;
  #L356600.  goto L356606;
  #L356602.  v5:= 0I;
  #L356604.  goto L356608;
  #L356606.  v5:= 1I;
  #L356608.  v6:= v10.`i2.g$b.j` @type ^`s3.z` @kind object;
  #L35660c.  call temp:= `d`(v6) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L356612.  v6:= temp @kind object;
  #L356614.  if v5 == 0 then goto L35661e;
  #L356618.  v7:= 128I;
  #L35661c.  goto L356620;
  #L35661e.  v7:= 0I;
  #L356620.  v7:= v7 ^| v2 @kind int;
  #L356622.  v7:= (`byte`) v7 @kind i2b;
  #L356624.  v6[v1]:= v7 @kind byte;
  #L356628.  v6:= v10.`i2.g$b.j` @type ^`s3.z` @kind object;
  #L35662c.  call `O`(v6, v1) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L356632.  v6:= v10.`i2.g$b.a` @type ^`a2.d0` @kind object;
  #L356636.  v7:= v10.`i2.g$b.j` @type ^`s3.z` @kind object;
  #L35663a.  call `a`(v6, v7, v4, v4) @signature `La2/d0;.a:(Ls3/z;II)V` @kind interface;
  #L356640.  v6:= v10.`i2.g$b.a` @type ^`a2.d0` @kind object;
  #L356644.  call `a`(v6, v0, v2, v4) @signature `La2/d0;.a:(Ls3/z;II)V` @kind interface;
  #L35664a.  if v5 != 0 then goto L356652;
  #L35664e.  v2:= v2 + v4 @kind int;
  #L356650.  return v2;
  #L356652.  v0:= 6I;
  #L356654.  v5:= 3I;
  #L356656.  v6:= 2I;
  #L356658.  v7:= 8I;
  #L35665c.  if v3 != 0 then goto L3566e4;
  #L356660.  v3:= v10.`i2.g$b.c` @type ^`s3.z` @kind object;
  #L356664.  call `K`(v3, v7) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L35666a.  v3:= v10.`i2.g$b.c` @type ^`s3.z` @kind object;
  #L35666e.  call temp:= `d`(v3) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L356674.  v3:= temp @kind object;
  #L356676.  v3[v1]:= v1 @kind byte;
  #L35667a.  v3[v4]:= v4 @kind byte;
  #L35667e.  v1:= v12 ^> 8;
  #L356682.  v1:= v1 ^& 255;
  #L356686.  v1:= (`byte`) v1 @kind i2b;
  #L356688.  v3[v6]:= v1 @kind byte;
  #L35668c.  v12:= v12 ^& 255;
  #L356690.  v12:= (`byte`) v12 @kind i2b;
  #L356692.  v3[v5]:= v12 @kind byte;
  #L356696.  v12:= 4I;
  #L356698.  v1:= v11 ^> 24;
  #L35669c.  v1:= v1 ^& 255;
  #L3566a0.  v1:= (`byte`) v1 @kind i2b;
  #L3566a2.  v3[v12]:= v1 @kind byte;
  #L3566a6.  v12:= 5I;
  #L3566a8.  v1:= v11 ^> 16;
  #L3566ac.  v1:= v1 ^& 255;
  #L3566b0.  v1:= (`byte`) v1 @kind i2b;
  #L3566b2.  v3[v12]:= v1 @kind byte;
  #L3566b6.  v12:= v11 ^> 8;
  #L3566ba.  v12:= v12 ^& 255;
  #L3566be.  v12:= (`byte`) v12 @kind i2b;
  #L3566c0.  v3[v0]:= v12 @kind byte;
  #L3566c4.  v12:= 7I;
  #L3566c6.  v11:= v11 ^& 255;
  #L3566ca.  v11:= (`byte`) v11 @kind i2b;
  #L3566cc.  v3[v12]:= v11 @kind byte;
  #L3566d0.  v11:= v10.`i2.g$b.a` @type ^`a2.d0` @kind object;
  #L3566d4.  v12:= v10.`i2.g$b.c` @type ^`s3.z` @kind object;
  #L3566d8.  call `a`(v11, v12, v7, v4) @signature `La2/d0;.a:(Ls3/z;II)V` @kind interface;
  #L3566de.  v2:= v2 + v4 @kind int;
  #L3566e0.  v2:= v2 + v7 @kind int;
  #L3566e2.  return v2;
  #L3566e4.  v11:= v10.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L3566e8.  v11:= v11.`i2.q.o` @type ^`s3.z` @kind object;
  #L3566ec.  call temp:= `I`(v11) @signature `Ls3/z;.I:()I` @kind virtual;
  #L3566f2.  v3:= temp;
  #L3566f4.  v8:= -2I;
  #L3566f6.  call `P`(v11, v8) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L3566fc.  v3:= v3 * 6;
  #L356700.  v3:= v3 + v6 @kind int;
  #L356702.  if v12 == 0 then goto L356754;
  #L356706.  v0:= v10.`i2.g$b.c` @type ^`s3.z` @kind object;
  #L35670a.  call `K`(v0, v3) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L356710.  v0:= v10.`i2.g$b.c` @type ^`s3.z` @kind object;
  #L356714.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L35671a.  v0:= temp @kind object;
  #L35671c.  call `j`(v11, v0, v1, v3) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L356722.  v11:= v0[v6] @kind byte;
  #L356726.  v11:= v11 ^& 255;
  #L35672a.  v11:= v11 ^< v7 @kind int;
  #L35672c.  v1:= v0[v5] @kind byte;
  #L356730.  v1:= v1 ^& 255;
  #L356734.  v11:= v11 ^| v1 @kind int;
  #L356736.  v11:= v11 + v12 @kind int;
  #L356738.  v12:= v11 ^> 8;
  #L35673c.  v12:= v12 ^& 255;
  #L356740.  v12:= (`byte`) v12 @kind i2b;
  #L356742.  v0[v6]:= v12 @kind byte;
  #L356746.  v11:= v11 ^& 255;
  #L35674a.  v11:= (`byte`) v11 @kind i2b;
  #L35674c.  v0[v5]:= v11 @kind byte;
  #L356750.  v11:= v10.`i2.g$b.c` @type ^`s3.z` @kind object;
  #L356754.  v12:= v10.`i2.g$b.a` @type ^`a2.d0` @kind object;
  #L356758.  call `a`(v12, v11, v3, v4) @signature `La2/d0;.a:(Ls3/z;II)V` @kind interface;
  #L35675e.  v2:= v2 + v4 @kind int;
  #L356760.  v2:= v2 + v3 @kind int;
  #L356762.  return v2;
}
procedure `void` `j`(`i2.g$b` v0 @kind this, `i2.r` v1 @kind object, `i2.c` v2 @kind object) @signature `Li2/g$b;.j:(Li2/r;Li2/c;)V` @AccessFlag PUBLIC {
    temp;

  #L356850.  v0.`i2.g$b.d` @type ^`i2.r` := v1 @kind object;
  #L356854.  v0.`i2.g$b.e` @type ^`i2.c` := v2 @kind object;
  #L356858.  v2:= v0.`i2.g$b.a` @type ^`a2.d0` @kind object;
  #L35685c.  v1:= v1.`i2.r.a` @type ^`i2.o` @kind object;
  #L356860.  v1:= v1.`i2.o.f` @type ^`v1.j1` @kind object;
  #L356864.  call `b`(v2, v1) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L35686a.  call `k`(v0) @signature `Li2/g$b;.k:()V` @kind virtual;
  #L356870.  return @kind void;
}
procedure `void` `k`(`i2.g$b` v1 @kind this) @signature `Li2/g$b;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L356884.  v0:= v1.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L356888.  call `f`(v0) @signature `Li2/q;.f:()V` @kind virtual;
  #L35688e.  v0:= 0I;
  #L356890.  v1.`i2.g$b.f` @type ^`int` := v0;
  #L356894.  v1.`i2.g$b.h` @type ^`int` := v0;
  #L356898.  v1.`i2.g$b.g` @type ^`int` := v0;
  #L35689c.  v1.`i2.g$b.i` @type ^`int` := v0;
  #L3568a0.  v1.`i2.g$b.l` @type ^`boolean` := v0 @kind boolean;
  #L3568a4.  return @kind void;
}
procedure `void` `l`(`i2.g$b` v4 @kind this, `long` v5 ) @signature `Li2/g$b;.l:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3568b8.  v0:= v4.`i2.g$b.f` @type ^`int`;
  #L3568bc.  v1:= v4.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L3568c0.  v2:= v1.`i2.q.f` @type ^`int`;
  #L3568c4.  if v0 >= v2 then goto L3568f2;
  #L3568c8.  call temp:= `c`(v1, v0) @signature `Li2/q;.c:(I)J` @kind virtual;
  #L3568ce.  v1:= temp @kind wide;
  #L3568d0.  v3:= lcmp(v1, v5);
  #L3568d4.  if v3 >= 0 then goto L3568f2;
  #L3568d8.  v1:= v4.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L3568dc.  v1:= v1.`i2.q.k` @type ^`boolean`[] @kind object;
  #L3568e0.  v1:= v1[v0] @kind boolean;
  #L3568e4.  if v1 == 0 then goto L3568ec;
  #L3568e8.  v4.`i2.g$b.i` @type ^`int` := v0;
  #L3568ec.  v0:= v0 + 1;
  #L3568f0.  goto L3568bc;
  #L3568f2.  return @kind void;
}
procedure `void` `m`(`i2.g$b` v3 @kind this) @signature `Li2/g$b;.m:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L356904.  call temp:= `g`(v3) @signature `Li2/g$b;.g:()Li2/p;` @kind virtual;
  #L35690a.  v0:= temp @kind object;
  #L35690c.  if v0 != 0 then goto L356912;
  #L356910.  return @kind void;
  #L356912.  v1:= v3.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L356916.  v1:= v1.`i2.q.o` @type ^`s3.z` @kind object;
  #L35691a.  v0:= v0.`i2.p.d` @type ^`int`;
  #L35691e.  if v0 == 0 then goto L356928;
  #L356922.  call `P`(v1, v0) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L356928.  v0:= v3.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L35692c.  v2:= v3.`i2.g$b.f` @type ^`int`;
  #L356930.  call temp:= `g`(v0, v2) @signature `Li2/q;.g:(I)Z` @kind virtual;
  #L356936.  v0:= temp;
  #L356938.  if v0 == 0 then goto L35694e;
  #L35693c.  call temp:= `I`(v1) @signature `Ls3/z;.I:()I` @kind virtual;
  #L356942.  v0:= temp;
  #L356944.  v0:= v0 * 6;
  #L356948.  call `P`(v1, v0) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L35694e.  return @kind void;
}
procedure `void` `n`(`i2.g$b` v2 @kind this, `z1.m` v3 @kind object) @signature `Li2/g$b;.n:(Lz1/m;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L356960.  v0:= v2.`i2.g$b.d` @type ^`i2.r` @kind object;
  #L356964.  v0:= v0.`i2.r.a` @type ^`i2.o` @kind object;
  #L356968.  v1:= v2.`i2.g$b.b` @type ^`i2.q` @kind object;
  #L35696c.  v1:= v1.`i2.q.a` @type ^`i2.c` @kind object;
  #L356970.  call temp:= `j`(v1) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L356976.  v1:= temp @kind object;
  #L356978.  v1:= (`i2.c`) v1 @kind object;
  #L35697c.  v1:= v1.`i2.c.a` @type ^`int`;
  #L356980.  call temp:= `a`(v0, v1) @signature `Li2/o;.a:(I)Li2/p;` @kind virtual;
  #L356986.  v0:= temp @kind object;
  #L356988.  if v0 == 0 then goto L356992;
  #L35698c.  v0:= v0.`i2.p.b` @type ^`java.lang.String` @kind object;
  #L356990.  goto L356994;
  #L356992.  v0:= 0I;
  #L356994.  call temp:= `c`(v3, v0) @signature `Lz1/m;.c:(Ljava/lang/String;)Lz1/m;` @kind virtual;
  #L35699a.  v3:= temp @kind object;
  #L35699c.  v0:= v2.`i2.g$b.d` @type ^`i2.r` @kind object;
  #L3569a0.  v0:= v0.`i2.r.a` @type ^`i2.o` @kind object;
  #L3569a4.  v0:= v0.`i2.o.f` @type ^`v1.j1` @kind object;
  #L3569a8.  call temp:= `b`(v0) @signature `Lv1/j1;.b:()Lv1/j1$b;` @kind virtual;
  #L3569ae.  v0:= temp @kind object;
  #L3569b0.  call temp:= `M`(v0, v3) @signature `Lv1/j1$b;.M:(Lz1/m;)Lv1/j1$b;` @kind virtual;
  #L3569b6.  v3:= temp @kind object;
  #L3569b8.  call temp:= `E`(v3) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L3569be.  v3:= temp @kind object;
  #L3569c0.  v0:= v2.`i2.g$b.a` @type ^`a2.d0` @kind object;
  #L3569c4.  call `b`(v0, v3) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L3569ca.  return @kind void;
}
