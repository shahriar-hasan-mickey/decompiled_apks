record `i2.a` @kind class @AccessFlag ABSTRACT {
  `int` `i2.a.a` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`i2.a` v0 @kind this, `int` v1 ) @signature `Li2/a;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3561fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L356202.  v0.`i2.a.a` @type ^`int` := v1;
  #L356206.  return @kind void;
}
procedure `java.lang.String` `a`(`int` v2 ) @signature `Li2/a;.a:(I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L356170.  v0:= new `java.lang.StringBuilder`;
  #L356174.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35617a.  v1:= "" @kind object;
  #L35617e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L356184.  v1:= v2 ^> 24;
  #L356188.  v1:= v1 ^& 255;
  #L35618c.  v1:= (`char`) v1 @kind i2c;
  #L35618e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L356194.  v1:= v2 ^> 16;
  #L356198.  v1:= v1 ^& 255;
  #L35619c.  v1:= (`char`) v1 @kind i2c;
  #L35619e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3561a4.  v1:= v2 ^> 8;
  #L3561a8.  v1:= v1 ^& 255;
  #L3561ac.  v1:= (`char`) v1 @kind i2c;
  #L3561ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3561b4.  v2:= v2 ^& 255;
  #L3561b8.  v2:= (`char`) v2 @kind i2c;
  #L3561ba.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3561c0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3561c6.  v2:= temp @kind object;
  #L3561c8.  return v2 @kind object;
}
procedure `int` `b`(`int` v1 ) @signature `Li2/a;.b:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L356138.  v0:= 16777215I;
  #L35613e.  v1:= v1 ^& v0 @kind int;
  #L356140.  return v1;
}
procedure `int` `c`(`int` v0 ) @signature `Li2/a;.c:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L356154.  v0:= v0 ^> 24;
  #L356158.  v0:= v0 ^& 255;
  #L35615c.  return v0;
}
procedure `java.lang.String` `toString`(`i2.a` v1 @kind this) @signature `Li2/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3561dc.  v0:= v1.`i2.a.a` @type ^`int`;
  #L3561e0.  call temp:= `a`(v0) @signature `Li2/a;.a:(I)Ljava/lang/String;` @kind static;
  #L3561e6.  v0:= temp @kind object;
  #L3561e8.  return v0 @kind object;
}
