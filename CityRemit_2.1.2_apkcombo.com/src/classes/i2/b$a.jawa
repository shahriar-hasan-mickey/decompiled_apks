record `i2.b$a` @kind class @AccessFlag FINAL {
  `int` `i2.b$a.a` @AccessFlag PUBLIC_FINAL;
  `int` `i2.b$a.b` @AccessFlag PUBLIC;
  `int` `i2.b$a.c` @AccessFlag PUBLIC;
  `long` `i2.b$a.d` @AccessFlag PUBLIC;
  `boolean` `i2.b$a.e` @AccessFlag PRIVATE_FINAL;
  `s3.z` `i2.b$a.f` @AccessFlag PRIVATE_FINAL;
  `s3.z` `i2.b$a.g` @AccessFlag PRIVATE_FINAL;
  `int` `i2.b$a.h` @AccessFlag PRIVATE;
  `int` `i2.b$a.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`i2.b$a` v0 @kind this, `s3.z` v1 @kind object, `s3.z` v2 @kind object, `boolean` v3 ) @signature `Li2/b$a;.<init>:(Ls3/z;Ls3/z;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L353150.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L353156.  v0.`i2.b$a.g` @type ^`s3.z` := v1 @kind object;
  #L35315a.  v0.`i2.b$a.f` @type ^`s3.z` := v2 @kind object;
  #L35315e.  v0.`i2.b$a.e` @type ^`boolean` := v3 @kind boolean;
  #L353162.  v3:= 12I;
  #L353166.  call `O`(v2, v3) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L35316c.  call temp:= `G`(v2) @signature `Ls3/z;.G:()I` @kind virtual;
  #L353172.  v2:= temp;
  #L353174.  v0.`i2.b$a.a` @type ^`int` := v2;
  #L353178.  call `O`(v1, v3) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L35317e.  call temp:= `G`(v1) @signature `Ls3/z;.G:()I` @kind virtual;
  #L353184.  v2:= temp;
  #L353186.  v0.`i2.b$a.i` @type ^`int` := v2;
  #L35318a.  call temp:= `m`(v1) @signature `Ls3/z;.m:()I` @kind virtual;
  #L353190.  v1:= temp;
  #L353192.  v2:= 1I;
  #L353194.  if v1 != v2 then goto L35319a;
  #L353198.  goto L35319c;
  #L35319a.  v2:= 0I;
  #L35319c.  v1:= "first_chunk must be 1" @kind object;
  #L3531a0.  call `a`(v2, v1) @signature `La2/o;.a:(ZLjava/lang/String;)V` @kind static;
  #L3531a6.  v1:= -1I;
  #L3531a8.  v0.`i2.b$a.b` @type ^`int` := v1;
  #L3531ac.  return @kind void;
}
procedure `boolean` `a`(`i2.b$a` v4 @kind this) @signature `Li2/b$a;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3530b4.  v0:= v4.`i2.b$a.b` @type ^`int`;
  #L3530b8.  v1:= 1I;
  #L3530ba.  v0:= v0 + v1 @kind int;
  #L3530bc.  v4.`i2.b$a.b` @type ^`int` := v0;
  #L3530c0.  v2:= v4.`i2.b$a.a` @type ^`int`;
  #L3530c4.  if v0 != v2 then goto L3530cc;
  #L3530c8.  v0:= 0I;
  #L3530ca.  return v0;
  #L3530cc.  v0:= v4.`i2.b$a.e` @type ^`boolean` @kind boolean;
  #L3530d0.  if v0 == 0 then goto L3530e2;
  #L3530d4.  v0:= v4.`i2.b$a.f` @type ^`s3.z` @kind object;
  #L3530d8.  call temp:= `H`(v0) @signature `Ls3/z;.H:()J` @kind virtual;
  #L3530de.  v2:= temp @kind wide;
  #L3530e0.  goto L3530ee;
  #L3530e2.  v0:= v4.`i2.b$a.f` @type ^`s3.z` @kind object;
  #L3530e6.  call temp:= `E`(v0) @signature `Ls3/z;.E:()J` @kind virtual;
  #L3530ec.  v2:= temp @kind wide;
  #L3530ee.  v4.`i2.b$a.d` @type ^`long` := v2 @kind wide;
  #L3530f2.  v0:= v4.`i2.b$a.b` @type ^`int`;
  #L3530f6.  v2:= v4.`i2.b$a.h` @type ^`int`;
  #L3530fa.  if v0 != v2 then goto L35313e;
  #L3530fe.  v0:= v4.`i2.b$a.g` @type ^`s3.z` @kind object;
  #L353102.  call temp:= `G`(v0) @signature `Ls3/z;.G:()I` @kind virtual;
  #L353108.  v0:= temp;
  #L35310a.  v4.`i2.b$a.c` @type ^`int` := v0;
  #L35310e.  v0:= v4.`i2.b$a.g` @type ^`s3.z` @kind object;
  #L353112.  v2:= 4I;
  #L353114.  call `P`(v0, v2) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L35311a.  v0:= v4.`i2.b$a.i` @type ^`int`;
  #L35311e.  v0:= v0 - v1 @kind int;
  #L353120.  v4.`i2.b$a.i` @type ^`int` := v0;
  #L353124.  if v0 <= 0 then goto L353138;
  #L353128.  v0:= v4.`i2.b$a.g` @type ^`s3.z` @kind object;
  #L35312c.  call temp:= `G`(v0) @signature `Ls3/z;.G:()I` @kind virtual;
  #L353132.  v0:= temp;
  #L353134.  v0:= v0 - v1 @kind int;
  #L353136.  goto L35313a;
  #L353138.  v0:= -1I;
  #L35313a.  v4.`i2.b$a.h` @type ^`int` := v0;
  #L35313e.  return v1;
}
