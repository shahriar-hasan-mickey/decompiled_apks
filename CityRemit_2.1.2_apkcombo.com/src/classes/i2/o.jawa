record `i2.o` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `i2.o.a` @AccessFlag PUBLIC_FINAL;
  `int` `i2.o.b` @AccessFlag PUBLIC_FINAL;
  `long` `i2.o.c` @AccessFlag PUBLIC_FINAL;
  `long` `i2.o.d` @AccessFlag PUBLIC_FINAL;
  `long` `i2.o.e` @AccessFlag PUBLIC_FINAL;
  `v1.j1` `i2.o.f` @AccessFlag PUBLIC_FINAL;
  `int` `i2.o.g` @AccessFlag PUBLIC_FINAL;
  `long`[] `i2.o.h` @AccessFlag PUBLIC_FINAL;
  `long`[] `i2.o.i` @AccessFlag PUBLIC_FINAL;
  `int` `i2.o.j` @AccessFlag PUBLIC_FINAL;
  `i2.p`[] `i2.o.k` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`i2.o` v0 @kind this, `int` v1 , `int` v2 , `long` v3 , `long` v5 , `long` v7 , `v1.j1` v9 @kind object, `int` v10 , `i2.p`[] v11 @kind object, `int` v12 , `long`[] v13 @kind object, `long`[] v14 @kind object) @signature `Li2/o;.<init>:(IIJJJLv1/j1;I[Li2/p;I[J[J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L35c06c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35c072.  v0.`i2.o.a` @type ^`int` := v1;
  #L35c076.  v0.`i2.o.b` @type ^`int` := v2;
  #L35c07a.  v0.`i2.o.c` @type ^`long` := v3 @kind wide;
  #L35c07e.  v0.`i2.o.d` @type ^`long` := v5 @kind wide;
  #L35c082.  v0.`i2.o.e` @type ^`long` := v7 @kind wide;
  #L35c086.  v0.`i2.o.f` @type ^`v1.j1` := v9 @kind object;
  #L35c08a.  v0.`i2.o.g` @type ^`int` := v10;
  #L35c08e.  v0.`i2.o.k` @type ^`i2.p`[] := v11 @kind object;
  #L35c092.  v0.`i2.o.j` @type ^`int` := v12;
  #L35c096.  v0.`i2.o.h` @type ^`long`[] := v13 @kind object;
  #L35c09a.  v0.`i2.o.i` @type ^`long`[] := v14 @kind object;
  #L35c09e.  return @kind void;
}
procedure `i2.p` `a`(`i2.o` v1 @kind this, `int` v2 ) @signature `Li2/o;.a:(I)Li2/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35c048.  v0:= v1.`i2.o.k` @type ^`i2.p`[] @kind object;
  #L35c04c.  if v0 != 0 then goto L35c054;
  #L35c050.  v2:= 0I;
  #L35c052.  goto L35c058;
  #L35c054.  v2:= v0[v2] @kind object;
  #L35c058.  return v2 @kind object;
}
