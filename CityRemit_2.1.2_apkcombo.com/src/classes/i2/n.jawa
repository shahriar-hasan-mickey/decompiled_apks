record `i2.n` @kind class @AccessFlag FINAL {
}
global `int`[] `@@i2.n.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Li2/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L35bb54.  v0:= 29I;
  #L35bb58.  v0:= new `int`[v0];
  #L35bb5c.  goto L35bb68;
  #L35bb62.  `@@i2.n.a` @type ^`int`[] := v0 @kind object;
  #L35bb66.  return @kind void;
  #L35bb68.  v0:= (1769172845I, 1769172786I, 1769172787I, 1769172788I, 1769172789I, 1769172790I, 1769172793I, 1635148593I, 1752589105I, 1751479857I, 1635135537I, 1836069937I, 1836069938I, 862401121I, 862401122I, 862417462I, 862417718I, 862414134I, 862414646I, 1295275552I, 1295270176I, 1714714144I, 1801741417I, 1295275600I, 1903435808I, 1297305174I, 1684175153I, 1769172332I, 1885955686I) @kind object;
  #L35bbe3.  goto L35bb62;
}
procedure `boolean` `a`(`int` v5 , `boolean` v6 ) @signature `Li2/n;.a:(IZ)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L35b8c0.  v0:= v5 ^>> 8;
  #L35b8c4.  v1:= 1I;
  #L35b8c6.  v2:= 3368816I;
  #L35b8cc.  if v0 != v2 then goto L35b8d2;
  #L35b8d0.  return v1;
  #L35b8d2.  v0:= 1751476579I;
  #L35b8d8.  if v5 != v0 then goto L35b8e2;
  #L35b8dc.  if v6 == 0 then goto L35b8e2;
  #L35b8e0.  return v1;
  #L35b8e2.  v6:= `@@i2.n.a` @type ^`int`[] @kind object;
  #L35b8e6.  v0:= length @variable v6;
  #L35b8e8.  v2:= 0I;
  #L35b8ea.  v3:= 0I;
  #L35b8ec.  if v3 >= v0 then goto L35b900;
  #L35b8f0.  v4:= v6[v3];
  #L35b8f4.  if v4 != v5 then goto L35b8fa;
  #L35b8f8.  return v1;
  #L35b8fa.  v3:= v3 + 1;
  #L35b8fe.  goto L35b8ec;
  #L35b900.  return v2;
}
procedure `boolean` `b`(`a2.m` v2 @kind object) @signature `Li2/n;.b:(La2/m;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L35b914.  v0:= 1I;
  #L35b916.  v1:= 0I;
  #L35b918.  call temp:= `c`(v2, v0, v1) @signature `Li2/n;.c:(La2/m;ZZ)Z` @kind static;
  #L35b91e.  v2:= temp;
  #L35b920.  return v2;
}
procedure `boolean` `c`(`a2.m` v22 @kind object, `boolean` v23 , `boolean` v24 ) @signature `Li2/n;.c:(La2/m;ZZ)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L35b934.  v0:= v22 @kind object;
  #L35b938.  call temp:= `a`(v22) @signature `La2/m;.a:()J` @kind interface;
  #L35b93e.  v1:= temp @kind wide;
  #L35b940.  v3:= 4096L;
  #L35b944.  v5:= -1L;
  #L35b948.  v7:= lcmp(v1, v5);
  #L35b94c.  if v7 == 0 then goto L35b95c;
  #L35b950.  v8:= lcmp(v1, v3);
  #L35b954.  if v8 <= 0 then goto L35b95a;
  #L35b958.  goto L35b95c;
  #L35b95a.  v3:= v1 @kind wide;
  #L35b95c.  v4:= (`int`) v3 @kind l2i;
  #L35b95e.  v3:= new `s3.z`;
  #L35b962.  v8:= 64I;
  #L35b966.  call `<init>`(v3, v8) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L35b96c.  v8:= 0I;
  #L35b96e.  v9:= 0I;
  #L35b970.  v10:= 0I;
  #L35b972.  v11:= 1I;
  #L35b974.  if v9 >= v4 then goto L35bb0c;
  #L35b978.  v12:= 8I;
  #L35b97c.  call `K`(v3, v12) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L35b982.  call temp:= `d`(v3) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L35b988.  v13:= temp @kind object;
  #L35b98a.  call temp:= `m`(v0, v13, v8, v12, v11) @signature `La2/m;.m:([BIIZ)Z` @kind interface;
  #L35b990.  v13:= temp;
  #L35b992.  if v13 != 0 then goto L35b99a;
  #L35b996.  goto L35bb0c;
  #L35b99a.  call temp:= `E`(v3) @signature `Ls3/z;.E:()J` @kind virtual;
  #L35b9a0.  v13:= temp @kind wide;
  #L35b9a2.  call temp:= `m`(v3) @signature `Ls3/z;.m:()I` @kind virtual;
  #L35b9a8.  v15:= temp;
  #L35b9aa.  v16:= 1L;
  #L35b9ae.  v11:= 16I;
  #L35b9b2.  v18:= lcmp(v13, v16);
  #L35b9b6.  if v18 != 0 then goto L35b9d8;
  #L35b9ba.  call temp:= `d`(v3) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L35b9c0.  v13:= temp @kind object;
  #L35b9c2.  call `o`(v0, v13, v12, v12) @signature `La2/m;.o:([BII)V` @kind interface;
  #L35b9c8.  call `N`(v3, v11) @signature `Ls3/z;.N:(I)V` @kind virtual;
  #L35b9ce.  call temp:= `v`(v3) @signature `Ls3/z;.v:()J` @kind virtual;
  #L35b9d4.  v13:= temp @kind wide;
  #L35b9d6.  goto L35ba0a;
  #L35b9d8.  v16:= 0L;
  #L35b9dc.  v11:= lcmp(v13, v16);
  #L35b9e0.  if v11 != 0 then goto L35ba06;
  #L35b9e4.  call temp:= `a`(v22) @signature `La2/m;.a:()J` @kind interface;
  #L35b9ea.  v16:= temp @kind wide;
  #L35b9ec.  v11:= lcmp(v16, v5);
  #L35b9f0.  if v11 == 0 then goto L35ba06;
  #L35b9f4.  call temp:= `n`(v22) @signature `La2/m;.n:()J` @kind interface;
  #L35b9fa.  v13:= temp @kind wide;
  #L35b9fc.  v16:= v16 - v13 @kind long;
  #L35ba00.  v13:= (`long`) v12 @kind i2l;
  #L35ba02.  v13:= v16 + v13 @kind long;
  #L35ba06.  v11:= 8I;
  #L35ba0a.  v5:= (`long`) v11 @kind i2l;
  #L35ba0c.  v18:= lcmp(v13, v5);
  #L35ba10.  if v18 >= 0 then goto L35ba16;
  #L35ba14.  return v8;
  #L35ba16.  v9:= v9 + v11 @kind int;
  #L35ba18.  v11:= 1836019574I;
  #L35ba1e.  if v15 != v11 then goto L35ba3c;
  #L35ba22.  v5:= (`int`) v13 @kind l2i;
  #L35ba24.  v4:= v4 + v5 @kind int;
  #L35ba26.  if v7 == 0 then goto L35ba36;
  #L35ba2a.  v5:= (`long`) v4 @kind i2l;
  #L35ba2c.  v11:= lcmp(v5, v1);
  #L35ba30.  if v11 <= 0 then goto L35ba36;
  #L35ba34.  v4:= (`int`) v1 @kind l2i;
  #L35ba36.  v5:= -1L;
  #L35ba3a.  goto L35b972;
  #L35ba3c.  v11:= 1836019558I;
  #L35ba42.  if v15 == v11 then goto L35bb04;
  #L35ba46.  v11:= 1836475768I;
  #L35ba4c.  if v15 != v11 then goto L35ba52;
  #L35ba50.  goto L35bb04;
  #L35ba52.  v18:= v1 @kind wide;
  #L35ba56.  v1:= (`long`) v9 @kind i2l;
  #L35ba58.  v1:= v1 + v13 @kind long;
  #L35ba5a.  v1:= v1 - v5 @kind long;
  #L35ba5c.  v20:= v9;
  #L35ba60.  v8:= (`long`) v4 @kind i2l;
  #L35ba62.  v21:= lcmp(v1, v8);
  #L35ba66.  if v21 < 0 then goto L35ba6c;
  #L35ba6a.  goto L35bb0c;
  #L35ba6c.  v13:= v13 - v5 @kind long;
  #L35ba6e.  v1:= (`int`) v13 @kind l2i;
  #L35ba70.  v9:= v20 + v1 @kind int;
  #L35ba74.  v2:= 1718909296I;
  #L35ba7a.  if v15 != v2 then goto L35bae6;
  #L35ba7e.  v2:= 0I;
  #L35ba80.  if v1 >= v12 then goto L35ba86;
  #L35ba84.  return v2;
  #L35ba86.  call `K`(v3, v1) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L35ba8c.  call temp:= `d`(v3) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L35ba92.  v5:= temp @kind object;
  #L35ba94.  call `o`(v0, v5, v2, v1) @signature `La2/m;.o:([BII)V` @kind interface;
  #L35ba9a.  v1:= v1 / 4;
  #L35ba9e.  v2:= 0I;
  #L35baa0.  if v2 >= v1 then goto L35bada;
  #L35baa4.  v5:= 1I;
  #L35baa6.  if v2 != v5 then goto L35bab8;
  #L35baaa.  v6:= 4I;
  #L35baac.  call `P`(v3, v6) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L35bab2.  v8:= v24;
  #L35bab6.  goto L35bad4;
  #L35bab8.  call temp:= `m`(v3) @signature `Ls3/z;.m:()I` @kind virtual;
  #L35babe.  v6:= temp;
  #L35bac0.  v8:= v24;
  #L35bac4.  call temp:= `a`(v6, v8) @signature `Li2/n;.a:(IZ)Z` @kind static;
  #L35baca.  v6:= temp;
  #L35bacc.  if v6 == 0 then goto L35bad4;
  #L35bad0.  v10:= 1I;
  #L35bad2.  goto L35bade;
  #L35bad4.  v2:= v2 + 1;
  #L35bad8.  goto L35baa0;
  #L35bada.  v8:= v24;
  #L35bade.  v2:= 0I;
  #L35bae0.  if v10 != 0 then goto L35baf6;
  #L35bae4.  return v2;
  #L35bae6.  v8:= v24;
  #L35baea.  v2:= 0I;
  #L35baec.  if v1 == 0 then goto L35baf6;
  #L35baf0.  call `p`(v0, v1) @signature `La2/m;.p:(I)V` @kind interface;
  #L35baf6.  v1:= v18 @kind wide;
  #L35bafa.  v5:= -1L;
  #L35bafe.  v8:= 0I;
  #L35bb00.  goto L35b972;
  #L35bb04.  v2:= 0I;
  #L35bb06.  v5:= 1I;
  #L35bb08.  v0:= 1I;
  #L35bb0a.  goto L35bb12;
  #L35bb0c.  v2:= 0I;
  #L35bb0e.  v5:= 1I;
  #L35bb10.  v0:= 0I;
  #L35bb12.  if v10 == 0 then goto L35bb22;
  #L35bb16.  v1:= v23;
  #L35bb1a.  if v1 != v0 then goto L35bb22;
  #L35bb1e.  v8:= 1I;
  #L35bb20.  goto L35bb24;
  #L35bb22.  v8:= 0I;
  #L35bb24.  return v8;
}
procedure `boolean` `d`(`a2.m` v1 @kind object, `boolean` v2 ) @signature `Li2/n;.d:(La2/m;Z)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35bb38.  v0:= 0I;
  #L35bb3a.  call temp:= `c`(v1, v0, v2) @signature `Li2/n;.c:(La2/m;ZZ)Z` @kind static;
  #L35bb40.  v1:= temp;
  #L35bb42.  return v1;
}
