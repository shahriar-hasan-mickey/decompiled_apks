record `i2.a$a` @kind class @AccessFlag FINAL extends `i2.a` @kind class {
  `long` `i2.a$a.b` @AccessFlag PUBLIC_FINAL;
  `java.util.List` `i2.a$a.c` @AccessFlag PUBLIC_FINAL;
  `java.util.List` `i2.a$a.d` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`i2.a$a` v0 @kind this, `int` v1 , `long` v2 ) @signature `Li2/a$a;.<init>:(IJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L353028.  call `<init>`(v0, v1) @signature `Li2/a;.<init>:(I)V` @kind direct;
  #L35302e.  v0.`i2.a$a.b` @type ^`long` := v2 @kind wide;
  #L353032.  v1:= new `java.util.ArrayList`;
  #L353036.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L35303c.  v0.`i2.a$a.c` @type ^`java.util.List` := v1 @kind object;
  #L353040.  v1:= new `java.util.ArrayList`;
  #L353044.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L35304a.  v0.`i2.a$a.d` @type ^`java.util.List` := v1 @kind object;
  #L35304e.  return @kind void;
}
procedure `void` `d`(`i2.a$a` v1 @kind this, `i2.a$a` v2 @kind object) @signature `Li2/a$a;.d:(Li2/a$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L353060.  v0:= v1.`i2.a$a.d` @type ^`java.util.List` @kind object;
  #L353064.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L35306a.  return @kind void;
}
procedure `void` `e`(`i2.a$a` v1 @kind this, `i2.a$b` v2 @kind object) @signature `Li2/a$a;.e:(Li2/a$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35307c.  v0:= v1.`i2.a$a.c` @type ^`java.util.List` @kind object;
  #L353080.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L353086.  return @kind void;
}
procedure `i2.a$a` `f`(`i2.a$a` v4 @kind this, `int` v5 ) @signature `Li2/a$a;.f:(I)Li2/a$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L352f18.  v0:= v4.`i2.a$a.d` @type ^`java.util.List` @kind object;
  #L352f1c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L352f22.  v0:= temp;
  #L352f24.  v1:= 0I;
  #L352f26.  if v1 >= v0 then goto L352f4a;
  #L352f2a.  v2:= v4.`i2.a$a.d` @type ^`java.util.List` @kind object;
  #L352f2e.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L352f34.  v2:= temp @kind object;
  #L352f36.  v2:= (`i2.a$a`) v2 @kind object;
  #L352f3a.  v3:= v2.`i2.a.a` @type ^`int`;
  #L352f3e.  if v3 != v5 then goto L352f44;
  #L352f42.  return v2 @kind object;
  #L352f44.  v1:= v1 + 1;
  #L352f48.  goto L352f26;
  #L352f4a.  v5:= 0I;
  #L352f4c.  return v5 @kind object;
}
procedure `i2.a$b` `g`(`i2.a$a` v4 @kind this, `int` v5 ) @signature `Li2/a$a;.g:(I)Li2/a$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L352f60.  v0:= v4.`i2.a$a.c` @type ^`java.util.List` @kind object;
  #L352f64.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L352f6a.  v0:= temp;
  #L352f6c.  v1:= 0I;
  #L352f6e.  if v1 >= v0 then goto L352f92;
  #L352f72.  v2:= v4.`i2.a$a.c` @type ^`java.util.List` @kind object;
  #L352f76.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L352f7c.  v2:= temp @kind object;
  #L352f7e.  v2:= (`i2.a$b`) v2 @kind object;
  #L352f82.  v3:= v2.`i2.a.a` @type ^`int`;
  #L352f86.  if v3 != v5 then goto L352f8c;
  #L352f8a.  return v2 @kind object;
  #L352f8c.  v1:= v1 + 1;
  #L352f90.  goto L352f6e;
  #L352f92.  v5:= 0I;
  #L352f94.  return v5 @kind object;
}
procedure `java.lang.String` `toString`(`i2.a$a` v2 @kind this) @signature `Li2/a$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L352fa8.  v0:= new `java.lang.StringBuilder`;
  #L352fac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L352fb2.  v1:= v2.`i2.a.a` @type ^`int`;
  #L352fb6.  call temp:= `a`(v1) @signature `Li2/a;.a:(I)Ljava/lang/String;` @kind static;
  #L352fbc.  v1:= temp @kind object;
  #L352fbe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L352fc4.  v1:= " leaves: " @kind object;
  #L352fc8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L352fce.  v1:= v2.`i2.a$a.c` @type ^`java.util.List` @kind object;
  #L352fd2.  call temp:= `toArray`(v1) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L352fd8.  v1:= temp @kind object;
  #L352fda.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L352fe0.  v1:= temp @kind object;
  #L352fe2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L352fe8.  v1:= " containers: " @kind object;
  #L352fec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L352ff2.  v1:= v2.`i2.a$a.d` @type ^`java.util.List` @kind object;
  #L352ff6.  call temp:= `toArray`(v1) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L352ffc.  v1:= temp @kind object;
  #L352ffe.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L353004.  v1:= temp @kind object;
  #L353006.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35300c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L353012.  v0:= temp @kind object;
  #L353014.  return v0 @kind object;
}
