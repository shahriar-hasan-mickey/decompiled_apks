record `i2.m` @kind class @AccessFlag FINAL {
  `java.util.List` `i2.m.a` @AccessFlag PRIVATE_FINAL;
  `int` `i2.m.b` @AccessFlag PRIVATE;
  `int` `i2.m.c` @AccessFlag PRIVATE;
}
global `l5.m` `@@i2.m.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `l5.m` `@@i2.m.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Li2/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L35b5d8.  v0:= 58I;
  #L35b5dc.  call temp:= `d`(v0) @signature `Ll5/m;.d:(C)Ll5/m;` @kind static;
  #L35b5e2.  v0:= temp @kind object;
  #L35b5e4.  `@@i2.m.d` @type ^`l5.m` := v0 @kind object;
  #L35b5e8.  v0:= 42I;
  #L35b5ec.  call temp:= `d`(v0) @signature `Ll5/m;.d:(C)Ll5/m;` @kind static;
  #L35b5f2.  v0:= temp @kind object;
  #L35b5f4.  `@@i2.m.e` @type ^`l5.m` := v0 @kind object;
  #L35b5f8.  return @kind void;
}
procedure `void` `<init>`(`i2.m` v1 @kind this) @signature `Li2/m;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L35b60c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35b612.  v0:= new `java.util.ArrayList`;
  #L35b616.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L35b61c.  v1.`i2.m.a` @type ^`java.util.List` := v0 @kind object;
  #L35b620.  v0:= 0I;
  #L35b622.  v1.`i2.m.b` @type ^`int` := v0;
  #L35b626.  return @kind void;
}
procedure `void` `a`(`i2.m` v4 @kind this, `a2.m` v5 @kind object, `a2.z` v6 @kind object) @signature `Li2/m;.a:(La2/m;La2/z;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35b638.  v0:= new `s3.z`;
  #L35b63c.  v1:= 8I;
  #L35b640.  call `<init>`(v0, v1) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L35b646.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L35b64c.  v2:= temp @kind object;
  #L35b64e.  v3:= 0I;
  #L35b650.  call `readFully`(v5, v2, v3, v1) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L35b656.  call temp:= `p`(v0) @signature `Ls3/z;.p:()I` @kind virtual;
  #L35b65c.  v2:= temp;
  #L35b65e.  v2:= v2 + v1 @kind int;
  #L35b660.  v4.`i2.m.c` @type ^`int` := v2;
  #L35b664.  call temp:= `m`(v0) @signature `Ls3/z;.m:()I` @kind virtual;
  #L35b66a.  v0:= temp;
  #L35b66c.  v1:= 1397048916I;
  #L35b672.  if v0 == v1 then goto L35b680;
  #L35b676.  v0:= 0L;
  #L35b67a.  v6.`a2.z.a` @type ^`long` := v0 @kind wide;
  #L35b67e.  return @kind void;
  #L35b680.  call temp:= `q`(v5) @signature `La2/m;.q:()J` @kind interface;
  #L35b686.  v0:= temp @kind wide;
  #L35b688.  v5:= v4.`i2.m.c` @type ^`int`;
  #L35b68c.  v5:= v5 + -12;
  #L35b690.  v2:= (`long`) v5 @kind i2l;
  #L35b692.  v0:= v0 - v2 @kind long;
  #L35b694.  v6.`a2.z.a` @type ^`long` := v0 @kind wide;
  #L35b698.  v5:= 2I;
  #L35b69a.  v4.`i2.m.b` @type ^`int` := v5;
  #L35b69e.  return @kind void;
}
procedure `int` `b`(`java.lang.String` v2 @kind object) @signature `Li2/m;.b:(Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L35b348.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L35b34e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L35b354.  v0:= temp;
  #L35b356.  v1:= -1I;
  #L35b358.  goto L35b400;
  #L35b35e.  goto L35b3cc;
  #L35b360.  v0:= "Super_SlowMotion_BGM" @kind object;
  #L35b364.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L35b36a.  v2:= temp;
  #L35b36c.  if v2 != 0 then goto L35b372;
  #L35b370.  goto L35b3cc;
  #L35b372.  v1:= 4I;
  #L35b374.  goto L35b3cc;
  #L35b376.  v0:= "Super_SlowMotion_Deflickering_On" @kind object;
  #L35b37a.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L35b380.  v2:= temp;
  #L35b382.  if v2 != 0 then goto L35b388;
  #L35b386.  goto L35b3cc;
  #L35b388.  v1:= 3I;
  #L35b38a.  goto L35b3cc;
  #L35b38c.  v0:= "Super_SlowMotion_Data" @kind object;
  #L35b390.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L35b396.  v2:= temp;
  #L35b398.  if v2 != 0 then goto L35b39e;
  #L35b39c.  goto L35b3cc;
  #L35b39e.  v1:= 2I;
  #L35b3a0.  goto L35b3cc;
  #L35b3a2.  v0:= "Super_SlowMotion_Edit_Data" @kind object;
  #L35b3a6.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L35b3ac.  v2:= temp;
  #L35b3ae.  if v2 != 0 then goto L35b3b4;
  #L35b3b2.  goto L35b3cc;
  #L35b3b4.  v1:= 1I;
  #L35b3b6.  goto L35b3cc;
  #L35b3b8.  v0:= "SlowMotion_Data" @kind object;
  #L35b3bc.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L35b3c2.  v2:= temp;
  #L35b3c4.  if v2 != 0 then goto L35b3ca;
  #L35b3c8.  goto L35b3cc;
  #L35b3ca.  v1:= 0I;
  #L35b3cc.  goto L35b42c;
  #L35b3d2.  v2:= 0I;
  #L35b3d4.  v0:= "Invalid SEF name" @kind object;
  #L35b3d8.  call temp:= `a`(v0, v2) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L35b3de.  v2:= temp @kind object;
  #L35b3e0.  throw v2;
  #L35b3e2.  v2:= 2817I;
  #L35b3e6.  return v2;
  #L35b3e8.  v2:= 2820I;
  #L35b3ec.  return v2;
  #L35b3ee.  v2:= 2816I;
  #L35b3f2.  return v2;
  #L35b3f4.  v2:= 2819I;
  #L35b3f8.  return v2;
  #L35b3fa.  v2:= 2192I;
  #L35b3fe.  return v2;
  #L35b400.  switch v0
                  | -1711564334 => goto L35b3b8
                  | -1332107749 => goto L35b3a2
                  | -1251387154 => goto L35b38c
                  | -830665521 => goto L35b376
                  | 1760745220 => goto L35b360
                  | else => goto L35b35e;
  #L35b42c.  switch v1
                  | 0 => goto L35b3fa
                  | 1 => goto L35b3f4
                  | 2 => goto L35b3ee
                  | 3 => goto L35b3e8
                  | 4 => goto L35b3e2
                  | else => goto L35b3d2;
}
procedure `void` `d`(`i2.m` v12 @kind this, `a2.m` v13 @kind object, `a2.z` v14 @kind object) @signature `Li2/m;.d:(La2/m;La2/z;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L35b6b0.  call temp:= `a`(v13) @signature `La2/m;.a:()J` @kind interface;
  #L35b6b6.  v0:= temp @kind wide;
  #L35b6b8.  v2:= v12.`i2.m.c` @type ^`int`;
  #L35b6bc.  v2:= v2 + -12;
  #L35b6c0.  v3:= 8I;
  #L35b6c4.  v2:= v2 - v3 @kind int;
  #L35b6c6.  v4:= new `s3.z`;
  #L35b6ca.  call `<init>`(v4, v2) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L35b6d0.  call temp:= `d`(v4) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L35b6d6.  v5:= temp @kind object;
  #L35b6d8.  v6:= 0I;
  #L35b6da.  call `readFully`(v13, v5, v6, v2) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L35b6e0.  v13:= 0I;
  #L35b6e2.  v5:= v2 / 12;
  #L35b6e6.  if v13 >= v5 then goto L35b762;
  #L35b6ea.  v5:= 2I;
  #L35b6ec.  call `P`(v4, v5) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L35b6f2.  call temp:= `r`(v4) @signature `Ls3/z;.r:()S` @kind virtual;
  #L35b6f8.  v5:= temp;
  #L35b6fa.  v7:= 2192I;
  #L35b6fe.  if v5 == v7 then goto L35b72a;
  #L35b702.  v7:= 2816I;
  #L35b706.  if v5 == v7 then goto L35b72a;
  #L35b70a.  v7:= 2817I;
  #L35b70e.  if v5 == v7 then goto L35b72a;
  #L35b712.  v7:= 2819I;
  #L35b716.  if v5 == v7 then goto L35b72a;
  #L35b71a.  v7:= 2820I;
  #L35b71e.  if v5 == v7 then goto L35b72a;
  #L35b722.  call `P`(v4, v3) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L35b728.  goto L35b75c;
  #L35b72a.  v7:= v12.`i2.m.c` @type ^`int`;
  #L35b72e.  v7:= (`long`) v7 @kind i2l;
  #L35b730.  v7:= v0 - v7 @kind long;
  #L35b734.  call temp:= `p`(v4) @signature `Ls3/z;.p:()I` @kind virtual;
  #L35b73a.  v9:= temp;
  #L35b73c.  v9:= (`long`) v9 @kind i2l;
  #L35b73e.  v7:= v7 - v9 @kind long;
  #L35b740.  call temp:= `p`(v4) @signature `Ls3/z;.p:()I` @kind virtual;
  #L35b746.  v9:= temp;
  #L35b748.  v10:= v12.`i2.m.a` @type ^`java.util.List` @kind object;
  #L35b74c.  v11:= new `i2.m$a`;
  #L35b750.  call `<init>`(v11, v5, v7, v9) @signature `Li2/m$a;.<init>:(IJI)V` @kind direct;
  #L35b756.  call temp:= `add`(v10, v11) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L35b75c.  v13:= v13 + 1;
  #L35b760.  goto L35b6e2;
  #L35b762.  v13:= v12.`i2.m.a` @type ^`java.util.List` @kind object;
  #L35b766.  call temp:= `isEmpty`(v13) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L35b76c.  v13:= temp;
  #L35b76e.  if v13 == 0 then goto L35b77c;
  #L35b772.  v0:= 0L;
  #L35b776.  v14.`a2.z.a` @type ^`long` := v0 @kind wide;
  #L35b77a.  return @kind void;
  #L35b77c.  v13:= 3I;
  #L35b77e.  v12.`i2.m.b` @type ^`int` := v13;
  #L35b782.  v13:= v12.`i2.m.a` @type ^`java.util.List` @kind object;
  #L35b786.  call temp:= `get`(v13, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35b78c.  v13:= temp @kind object;
  #L35b78e.  v13:= (`i2.m$a`) v13 @kind object;
  #L35b792.  v0:= v13.`i2.m$a.a` @type ^`long` @kind wide;
  #L35b796.  goto L35b776;
}
procedure `void` `e`(`i2.m` v6 @kind this, `a2.m` v7 @kind object, `java.util.List` v8 @kind object) @signature `Li2/m;.e:(La2/m;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L35b7a8.  call temp:= `q`(v7) @signature `La2/m;.q:()J` @kind interface;
  #L35b7ae.  v0:= temp @kind wide;
  #L35b7b0.  call temp:= `a`(v7) @signature `La2/m;.a:()J` @kind interface;
  #L35b7b6.  v2:= temp @kind wide;
  #L35b7b8.  call temp:= `q`(v7) @signature `La2/m;.q:()J` @kind interface;
  #L35b7be.  v4:= temp @kind wide;
  #L35b7c0.  v2:= v2 - v4 @kind long;
  #L35b7c2.  v4:= v6.`i2.m.c` @type ^`int`;
  #L35b7c6.  v4:= (`long`) v4 @kind i2l;
  #L35b7c8.  v2:= v2 - v4 @kind long;
  #L35b7ca.  v3:= (`int`) v2 @kind l2i;
  #L35b7cc.  v2:= new `s3.z`;
  #L35b7d0.  call `<init>`(v2, v3) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L35b7d6.  call temp:= `d`(v2) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L35b7dc.  v4:= temp @kind object;
  #L35b7de.  v5:= 0I;
  #L35b7e0.  call `readFully`(v7, v4, v5, v3) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L35b7e6.  v7:= v6.`i2.m.a` @type ^`java.util.List` @kind object;
  #L35b7ea.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L35b7f0.  v7:= temp;
  #L35b7f2.  if v5 >= v7 then goto L35b888;
  #L35b7f6.  v7:= v6.`i2.m.a` @type ^`java.util.List` @kind object;
  #L35b7fa.  call temp:= `get`(v7, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35b800.  v7:= temp @kind object;
  #L35b802.  v7:= (`i2.m$a`) v7 @kind object;
  #L35b806.  v3:= v7.`i2.m$a.a` @type ^`long` @kind wide;
  #L35b80a.  v3:= v3 - v0 @kind long;
  #L35b80c.  v4:= (`int`) v3 @kind l2i;
  #L35b80e.  call `O`(v2, v4) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L35b814.  v3:= 4I;
  #L35b816.  call `P`(v2, v3) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L35b81c.  call temp:= `p`(v2) @signature `Ls3/z;.p:()I` @kind virtual;
  #L35b822.  v3:= temp;
  #L35b824.  call temp:= `z`(v2, v3) @signature `Ls3/z;.z:(I)Ljava/lang/String;` @kind virtual;
  #L35b82a.  v4:= temp @kind object;
  #L35b82c.  call temp:= `b`(v4) @signature `Li2/m;.b:(Ljava/lang/String;)I` @kind static;
  #L35b832.  v4:= temp;
  #L35b834.  v7:= v7.`i2.m$a.b` @type ^`int`;
  #L35b838.  v3:= v3 + 8;
  #L35b83c.  v7:= v7 - v3 @kind int;
  #L35b83e.  v3:= 2192I;
  #L35b842.  if v4 == v3 then goto L35b874;
  #L35b846.  v7:= 2816I;
  #L35b84a.  if v4 == v7 then goto L35b882;
  #L35b84e.  v7:= 2817I;
  #L35b852.  if v4 == v7 then goto L35b882;
  #L35b856.  v7:= 2819I;
  #L35b85a.  if v4 == v7 then goto L35b882;
  #L35b85e.  v7:= 2820I;
  #L35b862.  if v4 != v7 then goto L35b868;
  #L35b866.  goto L35b882;
  #L35b868.  v7:= new `java.lang.IllegalStateException`;
  #L35b86c.  call `<init>`(v7) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L35b872.  throw v7;
  #L35b874.  call temp:= `f`(v2, v7) @signature `Li2/m;.f:(Ls3/z;I)Lt2/c;` @kind static;
  #L35b87a.  v7:= temp @kind object;
  #L35b87c.  call temp:= `add`(v8, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L35b882.  v5:= v5 + 1;
  #L35b886.  goto L35b7e6;
  #L35b888.  return @kind void;
}
procedure `t2.c` `f`(`s3.z` v12 @kind object, `int` v13 ) @signature `Li2/m;.f:(Ls3/z;I)Lt2/c;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L35b4e0.  v0:= new `java.util.ArrayList`;
  #L35b4e4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L35b4ea.  call temp:= `z`(v12, v13) @signature `Ls3/z;.z:(I)Ljava/lang/String;` @kind virtual;
  #L35b4f0.  v12:= temp @kind object;
  #L35b4f2.  v13:= `@@i2.m.e` @type ^`l5.m` @kind object;
  #L35b4f6.  call temp:= `f`(v13, v12) @signature `Ll5/m;.f:(Ljava/lang/CharSequence;)Ljava/util/List;` @kind virtual;
  #L35b4fc.  v12:= temp @kind object;
  #L35b4fe.  v13:= 0I;
  #L35b500.  v1:= 0I;
  #L35b502.  call temp:= `size`(v12) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L35b508.  v2:= temp;
  #L35b50a.  if v1 >= v2 then goto L35b5aa;
  #L35b50e.  v2:= `@@i2.m.d` @type ^`l5.m` @kind object;
  #L35b512.  call temp:= `get`(v12, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35b518.  v3:= temp @kind object;
  #L35b51a.  v3:= (`java.lang.CharSequence`) v3 @kind object;
  #L35b51e.  call temp:= `f`(v2, v3) @signature `Ll5/m;.f:(Ljava/lang/CharSequence;)Ljava/util/List;` @kind virtual;
  #L35b524.  v2:= temp @kind object;
  #L35b526.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L35b52c.  v3:= temp;
  #L35b52e.  v4:= 3I;
  #L35b530.  v5:= 0I;
  #L35b532.  if v3 != v4 then goto L35b5a0;
  #L35b536.  call temp:= `get`(v2, v13) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35b53c.  v3:= temp @kind object;
  #L35b53e.  v3:= (`java.lang.String`) v3 @kind object;
  #L35b542.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L35b548.  v7:= temp @kind wide;
  #L35b54a.  v3:= 1I;
  #L35b54c.  call temp:= `get`(v2, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35b552.  v4:= temp @kind object;
  #L35b554.  v4:= (`java.lang.String`) v4 @kind object;
  #L35b558.  call temp:= `parseLong`(v4) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L35b55e.  v9:= temp @kind wide;
  #L35b560.  v4:= 2I;
  #L35b562.  call temp:= `get`(v2, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35b568.  v2:= temp @kind object;
  #L35b56a.  v2:= (`java.lang.String`) v2 @kind object;
  #L35b56e.  call temp:= `parseInt`(v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L35b574.  v2:= temp;
  #L35b576.  v2:= v2 - v3 @kind int;
  #L35b578.  v11:= v3 ^< v2 @kind int;
  #L35b57c.  v2:= new `t2.c$b`;
  #L35b580.  v6:= v2 @kind object;
  #L35b582.  call `<init>`(v6, v7, v9, v11) @signature `Lt2/c$b;.<init>:(JJI)V` @kind direct;
  #L35b588.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L35b58e.  v1:= v1 + 1;
  #L35b592.  goto L35b502;
  #L35b594.  v12:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L35b596.  call temp:= `a`(v5, v12) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L35b59c.  v12:= temp @kind object;
  #L35b59e.  throw v12;
  #L35b5a0.  call temp:= `a`(v5, v5) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L35b5a6.  v12:= temp @kind object;
  #L35b5a8.  throw v12;
  #L35b5aa.  v12:= new `t2.c`;
  #L35b5ae.  call `<init>`(v12, v0) @signature `Lt2/c;.<init>:(Ljava/util/List;)V` @kind direct;
  #L35b5b4.  return v12 @kind object;
  catch `java.lang.NumberFormatException` @[L35b536..L35b58e] goto L35b594;
}
procedure `int` `c`(`i2.m` v8 @kind this, `a2.m` v9 @kind object, `a2.z` v10 @kind object, `java.util.List` v11 @kind object) @signature `Li2/m;.c:(La2/m;La2/z;Ljava/util/List;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L35b458.  v0:= v8.`i2.m.b` @type ^`int`;
  #L35b45c.  v1:= 0L;
  #L35b460.  v3:= 1I;
  #L35b462.  if v0 == 0 then goto L35b49e;
  #L35b466.  if v0 == v3 then goto L35b496;
  #L35b46a.  v4:= 2I;
  #L35b46c.  if v0 == v4 then goto L35b48e;
  #L35b470.  v4:= 3I;
  #L35b472.  if v0 != v4 then goto L35b482;
  #L35b476.  call `e`(v8, v9, v11) @signature `Li2/m;.e:(La2/m;Ljava/util/List;)V` @kind direct;
  #L35b47c.  v10.`a2.z.a` @type ^`long` := v1 @kind wide;
  #L35b480.  goto L35b4cc;
  #L35b482.  v9:= new `java.lang.IllegalStateException`;
  #L35b486.  call `<init>`(v9) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L35b48c.  throw v9;
  #L35b48e.  call `d`(v8, v9, v10) @signature `Li2/m;.d:(La2/m;La2/z;)V` @kind direct;
  #L35b494.  goto L35b4cc;
  #L35b496.  call `a`(v8, v9, v10) @signature `Li2/m;.a:(La2/m;La2/z;)V` @kind direct;
  #L35b49c.  goto L35b4cc;
  #L35b49e.  call temp:= `a`(v9) @signature `La2/m;.a:()J` @kind interface;
  #L35b4a4.  v4:= temp @kind wide;
  #L35b4a6.  v6:= -1L;
  #L35b4aa.  v9:= lcmp(v4, v6);
  #L35b4ae.  if v9 == 0 then goto L35b4c4;
  #L35b4b2.  v6:= 8L;
  #L35b4b6.  v9:= lcmp(v4, v6);
  #L35b4ba.  if v9 >= 0 then goto L35b4c0;
  #L35b4be.  goto L35b4c4;
  #L35b4c0.  v1:= v4 - v6 @kind long;
  #L35b4c4.  v10.`a2.z.a` @type ^`long` := v1 @kind wide;
  #L35b4c8.  v8.`i2.m.b` @type ^`int` := v3;
  #L35b4cc.  return v3;
}
procedure `void` `g`(`i2.m` v1 @kind this) @signature `Li2/m;.g:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35b89c.  v0:= v1.`i2.m.a` @type ^`java.util.List` @kind object;
  #L35b8a0.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L35b8a6.  v0:= 0I;
  #L35b8a8.  v1.`i2.m.b` @type ^`int` := v0;
  #L35b8ac.  return @kind void;
}
