record `o.b$a` @kind class @AccessFlag  extends `o.f` @kind class {
  `o.b` `o.b$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`o.b$a` v0 @kind this, `o.b` v1 @kind object) @signature `Lo/b$a;.<init>:(Lo/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f5f1c.  v0.`o.b$a.d` @type ^`o.b` := v1 @kind object;
  #L3f5f20.  call `<init>`(v0) @signature `Lo/f;.<init>:()V` @kind direct;
  #L3f5f26.  return @kind void;
}
procedure `void` `a`(`o.b$a` v1 @kind this) @signature `Lo/b$a;.a:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3f5f38.  v0:= v1.`o.b$a.d` @type ^`o.b` @kind object;
  #L3f5f3c.  call `clear`(v0) @signature `Lo/b;.clear:()V` @kind virtual;
  #L3f5f42.  return @kind void;
}
procedure `java.lang.Object` `b`(`o.b$a` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lo/b$a;.b:(II)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;

  #L3f5ebc.  v2:= v0.`o.b$a.d` @type ^`o.b` @kind object;
  #L3f5ec0.  v2:= v2.`o.b.p` @type ^`java.lang.Object`[] @kind object;
  #L3f5ec4.  v1:= v2[v1] @kind object;
  #L3f5ec8.  return v1 @kind object;
}
procedure `java.util.Map` `c`(`o.b$a` v2 @kind this) @signature `Lo/b$a;.c:()Ljava/util/Map;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3f5efc.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3f5f00.  v1:= "not a map" @kind object;
  #L3f5f04.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f5f0a.  throw v0;
}
procedure `int` `d`(`o.b$a` v1 @kind this) @signature `Lo/b$a;.d:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3f5e60.  v0:= v1.`o.b$a.d` @type ^`o.b` @kind object;
  #L3f5e64.  v0:= v0.`o.b.q` @type ^`int`;
  #L3f5e68.  return v0;
}
procedure `int` `e`(`o.b$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lo/b$a;.e:(Ljava/lang/Object;)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3f5e7c.  v0:= v1.`o.b$a.d` @type ^`o.b` @kind object;
  #L3f5e80.  call temp:= `indexOf`(v0, v2) @signature `Lo/b;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L3f5e86.  v2:= temp;
  #L3f5e88.  return v2;
}
procedure `int` `f`(`o.b$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lo/b$a;.f:(Ljava/lang/Object;)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3f5e9c.  v0:= v1.`o.b$a.d` @type ^`o.b` @kind object;
  #L3f5ea0.  call temp:= `indexOf`(v0, v2) @signature `Lo/b;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L3f5ea6.  v2:= temp;
  #L3f5ea8.  return v2;
}
procedure `void` `g`(`o.b$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lo/b$a;.g:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L3f5f54.  v2:= v0.`o.b$a.d` @type ^`o.b` @kind object;
  #L3f5f58.  call temp:= `add`(v2, v1) @signature `Lo/b;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f5f5e.  return @kind void;
}
procedure `void` `h`(`o.b$a` v1 @kind this, `int` v2 ) @signature `Lo/b$a;.h:(I)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3f5f70.  v0:= v1.`o.b$a.d` @type ^`o.b` @kind object;
  #L3f5f74.  call temp:= `u`(v0, v2) @signature `Lo/b;.u:(I)Ljava/lang/Object;` @kind virtual;
  #L3f5f7a.  return @kind void;
}
procedure `java.lang.Object` `i`(`o.b$a` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lo/b$a;.i:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;

  #L3f5edc.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3f5ee0.  v2:= "not a map" @kind object;
  #L3f5ee4.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f5eea.  throw v1;
}
