record `mc.h$a` @kind class @AccessFlag FINAL extends `qc.s` @kind interface {
  `qc.e` `mc.h$a.o` @AccessFlag PRIVATE_FINAL;
  `int` `mc.h$a.p` @AccessFlag ;
  `byte` `mc.h$a.q` @AccessFlag ;
  `int` `mc.h$a.r` @AccessFlag ;
  `int` `mc.h$a.s` @AccessFlag ;
  `short` `mc.h$a.t` @AccessFlag ;
}
procedure `void` `<init>`(`mc.h$a` v0 @kind this, `qc.e` v1 @kind object) @signature `Lmc/h$a;.<init>:(Lqc/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e94ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e94f2.  v0.`mc.h$a.o` @type ^`qc.e` := v1 @kind object;
  #L3e94f6.  return @kind void;
}
procedure `void` `a`(`mc.h$a` v7 @kind this) @signature `Lmc/h$a;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e951c.  v0:= v7.`mc.h$a.r` @type ^`int`;
  #L3e9520.  v1:= v7.`mc.h$a.o` @type ^`qc.e` @kind object;
  #L3e9524.  call temp:= `s`(v1) @signature `Lmc/h;.s:(Lqc/e;)I` @kind static;
  #L3e952a.  v1:= temp;
  #L3e952c.  v7.`mc.h$a.s` @type ^`int` := v1;
  #L3e9530.  v7.`mc.h$a.p` @type ^`int` := v1;
  #L3e9534.  v1:= v7.`mc.h$a.o` @type ^`qc.e` @kind object;
  #L3e9538.  call temp:= `readByte`(v1) @signature `Lqc/e;.readByte:()B` @kind interface;
  #L3e953e.  v1:= temp;
  #L3e9540.  v1:= v1 ^& 255;
  #L3e9544.  v1:= (`byte`) v1 @kind i2b;
  #L3e9546.  v2:= v7.`mc.h$a.o` @type ^`qc.e` @kind object;
  #L3e954a.  call temp:= `readByte`(v2) @signature `Lqc/e;.readByte:()B` @kind interface;
  #L3e9550.  v2:= temp;
  #L3e9552.  v2:= v2 ^& 255;
  #L3e9556.  v2:= (`byte`) v2 @kind i2b;
  #L3e9558.  v7.`mc.h$a.q` @type ^`byte` := v2 @kind byte;
  #L3e955c.  v2:= `@@mc.h.s` @type ^`java.util.logging.Logger` @kind object;
  #L3e9560.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L3e9564.  call temp:= `isLoggable`(v2, v3) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L3e956a.  v3:= temp;
  #L3e956c.  v4:= 1I;
  #L3e956e.  if v3 == 0 then goto L3e958c;
  #L3e9572.  v3:= v7.`mc.h$a.r` @type ^`int`;
  #L3e9576.  v5:= v7.`mc.h$a.p` @type ^`int`;
  #L3e957a.  v6:= v7.`mc.h$a.q` @type ^`byte` @kind byte;
  #L3e957e.  call temp:= `b`(v4, v3, v5, v1, v6) @signature `Lmc/e;.b:(ZIIBB)Ljava/lang/String;` @kind static;
  #L3e9584.  v3:= temp @kind object;
  #L3e9586.  call `fine`(v2, v3) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L3e958c.  v2:= v7.`mc.h$a.o` @type ^`qc.e` @kind object;
  #L3e9590.  call temp:= `readInt`(v2) @signature `Lqc/e;.readInt:()I` @kind interface;
  #L3e9596.  v2:= temp;
  #L3e9598.  v3:= 2147483647I;
  #L3e959e.  v2:= v2 ^& v3 @kind int;
  #L3e95a0.  v7.`mc.h$a.r` @type ^`int` := v2;
  #L3e95a4.  v3:= 9I;
  #L3e95a8.  v5:= 0I;
  #L3e95aa.  if v1 != v3 then goto L3e95c6;
  #L3e95ae.  if v2 != v0 then goto L3e95b4;
  #L3e95b2.  return @kind void;
  #L3e95b4.  v0:= new `java.lang.Object`[v5];
  #L3e95b8.  v1:= "TYPE_CONTINUATION streamId changed" @kind object;
  #L3e95bc.  call temp:= `d`(v1, v0) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e95c2.  v0:= temp @kind object;
  #L3e95c4.  throw v0;
  #L3e95c6.  v0:= new `java.lang.Object`[v4];
  #L3e95ca.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L3e95d0.  v1:= temp @kind object;
  #L3e95d2.  v0[v5]:= v1 @kind object;
  #L3e95d6.  v1:= "%s != TYPE_CONTINUATION" @kind object;
  #L3e95da.  call temp:= `d`(v1, v0) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e95e0.  v0:= temp @kind object;
  #L3e95e2.  throw v0;
}
procedure `long` `T`(`mc.h$a` v6 @kind this, `qc.c` v7 @kind object, `long` v8 ) @signature `Lmc/h$a;.T:(Lqc/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e9454.  v0:= v6.`mc.h$a.s` @type ^`int`;
  #L3e9458.  v1:= -1L;
  #L3e945c.  if v0 != 0 then goto L3e948c;
  #L3e9460.  v0:= v6.`mc.h$a.o` @type ^`qc.e` @kind object;
  #L3e9464.  v3:= v6.`mc.h$a.t` @type ^`short` @kind short;
  #L3e9468.  v3:= (`long`) v3 @kind i2l;
  #L3e946a.  call `d`(v0, v3) @signature `Lqc/e;.d:(J)V` @kind interface;
  #L3e9470.  v0:= 0I;
  #L3e9472.  v6.`mc.h$a.t` @type ^`short` := v0 @kind char;
  #L3e9476.  v0:= v6.`mc.h$a.q` @type ^`byte` @kind byte;
  #L3e947a.  v0:= v0 ^& 4;
  #L3e947e.  if v0 == 0 then goto L3e9484;
  #L3e9482.  return v1 @kind wide;
  #L3e9484.  call `a`(v6) @signature `Lmc/h$a;.a:()V` @kind direct;
  #L3e948a.  goto L3e9454;
  #L3e948c.  v3:= v6.`mc.h$a.o` @type ^`qc.e` @kind object;
  #L3e9490.  v4:= (`long`) v0 @kind i2l;
  #L3e9492.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3e9498.  v8:= temp @kind wide;
  #L3e949a.  call temp:= `T`(v3, v7, v8) @signature `Lqc/s;.T:(Lqc/c;J)J` @kind interface;
  #L3e94a0.  v7:= temp @kind wide;
  #L3e94a2.  v9:= lcmp(v7, v1);
  #L3e94a6.  if v9 != 0 then goto L3e94ac;
  #L3e94aa.  return v1 @kind wide;
  #L3e94ac.  v9:= v6.`mc.h$a.s` @type ^`int`;
  #L3e94b0.  v0:= (`long`) v9 @kind i2l;
  #L3e94b2.  v0:= v0 - v7 @kind long;
  #L3e94b4.  v9:= (`int`) v0 @kind l2i;
  #L3e94b6.  v6.`mc.h$a.s` @type ^`int` := v9;
  #L3e94ba.  return v7 @kind wide;
}
procedure `void` `close`(`mc.h$a` v0 @kind this) @signature `Lmc/h$a;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L3e9508.  return @kind void;
}
procedure `qc.t` `f`(`mc.h$a` v1 @kind this) @signature `Lmc/h$a;.f:()Lqc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e94cc.  v0:= v1.`mc.h$a.o` @type ^`qc.e` @kind object;
  #L3e94d0.  call temp:= `f`(v0) @signature `Lqc/s;.f:()Lqc/t;` @kind interface;
  #L3e94d6.  v0:= temp @kind object;
  #L3e94d8.  return v0 @kind object;
}
