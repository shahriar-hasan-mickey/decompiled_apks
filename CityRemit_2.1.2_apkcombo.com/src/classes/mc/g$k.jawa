record `mc.g$k` @kind class @AccessFlag FINAL extends `hc.b` @kind class {
  `boolean` `mc.g$k.p` @AccessFlag FINAL;
  `int` `mc.g$k.q` @AccessFlag FINAL;
  `int` `mc.g$k.r` @AccessFlag FINAL;
  `mc.g` `mc.g$k.s` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`mc.g$k` v2 @kind this, `mc.g` v3 @kind object, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Lmc/g$k;.<init>:(Lmc/g;ZII)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e7e0c.  v2.`mc.g$k.s` @type ^`mc.g` := v3 @kind object;
  #L3e7e10.  v0:= 3I;
  #L3e7e12.  v0:= new `java.lang.Object`[v0];
  #L3e7e16.  v3:= v3.`mc.g.r` @type ^`java.lang.String` @kind object;
  #L3e7e1a.  v1:= 0I;
  #L3e7e1c.  v0[v1]:= v3 @kind object;
  #L3e7e20.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e7e26.  v3:= temp @kind object;
  #L3e7e28.  v1:= 1I;
  #L3e7e2a.  v0[v1]:= v3 @kind object;
  #L3e7e2e.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e7e34.  v3:= temp @kind object;
  #L3e7e36.  v1:= 2I;
  #L3e7e38.  v0[v1]:= v3 @kind object;
  #L3e7e3c.  v3:= "OkHttp %s ping %08x%08x" @kind object;
  #L3e7e40.  call `<init>`(v2, v3, v0) @signature `Lhc/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e7e46.  v2.`mc.g$k.p` @type ^`boolean` := v4 @kind boolean;
  #L3e7e4a.  v2.`mc.g$k.q` @type ^`int` := v5;
  #L3e7e4e.  v2.`mc.g$k.r` @type ^`int` := v6;
  #L3e7e52.  return @kind void;
}
procedure `void` `k`(`mc.g$k` v4 @kind this) @signature `Lmc/g$k;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e7e64.  v0:= v4.`mc.g$k.s` @type ^`mc.g` @kind object;
  #L3e7e68.  v1:= v4.`mc.g$k.p` @type ^`boolean` @kind boolean;
  #L3e7e6c.  v2:= v4.`mc.g$k.q` @type ^`int`;
  #L3e7e70.  v3:= v4.`mc.g$k.r` @type ^`int`;
  #L3e7e74.  call `n0`(v0, v1, v2, v3) @signature `Lmc/g;.n0:(ZII)V` @kind virtual;
  #L3e7e7a.  return @kind void;
}
