record `mc.g$j` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `mc.g$j` `@@mc.g$j.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lmc/g$j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e7dc0.  v0:= new `mc.g$j$a`;
  #L3e7dc4.  call `<init>`(v0) @signature `Lmc/g$j$a;.<init>:()V` @kind direct;
  #L3e7dca.  `@@mc.g$j.a` @type ^`mc.g$j` := v0 @kind object;
  #L3e7dce.  return @kind void;
}
procedure `void` `<init>`(`mc.g$j` v0 @kind this) @signature `Lmc/g$j;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e7de0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e7de6.  return @kind void;
}
procedure `void` `a`(`mc.g$j` v0 @kind this, `mc.g` v1 @kind object) @signature `Lmc/g$j;.a:(Lmc/g;)V` @AccessFlag PUBLIC {
    temp;

  #L3e7df8.  return @kind void;
}
procedure `void` `b`(`mc.i` v0 @kind object) @signature `Lmc/g$j;.b:(Lmc/i;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
