record `mc.g$e` @kind class @AccessFlag  extends `hc.b` @kind class {
  `int` `mc.g$e.p` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `mc.g$e.q` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `mc.g$e.r` @AccessFlag FINAL_SYNTHETIC;
  `mc.g` `mc.g$e.s` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`mc.g$e` v0 @kind this, `mc.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Lmc/g$e;.<init>:(Lmc/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e7a28.  v0.`mc.g$e.s` @type ^`mc.g` := v1 @kind object;
  #L3e7a2c.  v0.`mc.g$e.p` @type ^`int` := v4;
  #L3e7a30.  v0.`mc.g$e.q` @type ^`java.util.List` := v5 @kind object;
  #L3e7a34.  v0.`mc.g$e.r` @type ^`boolean` := v6 @kind boolean;
  #L3e7a38.  call `<init>`(v0, v2, v3) @signature `Lhc/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e7a3e.  return @kind void;
}
procedure `void` `k`(`mc.g$e` v4 @kind this) @signature `Lmc/g$e;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e7a50.  v0:= v4.`mc.g$e.s` @type ^`mc.g` @kind object;
  #L3e7a54.  v0:= v0.`mc.g.x` @type ^`mc.l` @kind object;
  #L3e7a58.  v1:= v4.`mc.g$e.p` @type ^`int`;
  #L3e7a5c.  v2:= v4.`mc.g$e.q` @type ^`java.util.List` @kind object;
  #L3e7a60.  v3:= v4.`mc.g$e.r` @type ^`boolean` @kind boolean;
  #L3e7a64.  call temp:= `b`(v0, v1, v2, v3) @signature `Lmc/l;.b:(ILjava/util/List;Z)Z` @kind interface;
  #L3e7a6a.  v0:= temp;
  #L3e7a6c.  if v0 == 0 then goto L3e7a86;
  #L3e7a70.  v1:= v4.`mc.g$e.s` @type ^`mc.g` @kind object;
  #L3e7a74.  v1:= v1.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e7a78.  v2:= v4.`mc.g$e.p` @type ^`int`;
  #L3e7a7c.  v3:= `@@mc.b.u` @type ^`mc.b` @kind object;
  #L3e7a80.  call `E`(v1, v2, v3) @signature `Lmc/j;.E:(ILmc/b;)V` @kind virtual;
  #L3e7a86.  if v0 != 0 then goto L3e7a92;
  #L3e7a8a.  v0:= v4.`mc.g$e.r` @type ^`boolean` @kind boolean;
  #L3e7a8e.  if v0 == 0 then goto L3e7abc;
  #L3e7a92.  v0:= v4.`mc.g$e.s` @type ^`mc.g` @kind object;
  #L3e7a96.  @monitorenter v0
  #L3e7a98.  v1:= v4.`mc.g$e.s` @type ^`mc.g` @kind object;
  #L3e7a9c.  v1:= v1.`mc.g.L` @type ^`java.util.Set` @kind object;
  #L3e7aa0.  v2:= v4.`mc.g$e.p` @type ^`int`;
  #L3e7aa4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e7aaa.  v2:= temp @kind object;
  #L3e7aac.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7ab2.  @monitorexit v0
  #L3e7ab4.  goto L3e7abc;
  #L3e7ab6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e7ab8.  @monitorexit v0
  #L3e7aba.  throw v1;
  #L3e7abc.  return @kind void;
  catch `java.io.IOException` @[L3e7a70..L3e7a98] goto L3e7abc;
  catch `java.lang.Throwable` @[L3e7a98..L3e7aba] goto L3e7ab6;
  catch `java.io.IOException` @[L3e7aba..L3e7abc] goto L3e7abc;
}
