record `mc.g$l` @kind class @AccessFlag  extends `hc.b` @kind class, `mc.h$b` @kind interface {
  `mc.h` `mc.g$l.p` @AccessFlag FINAL;
  `mc.g` `mc.g$l.q` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`mc.g$l` v2 @kind this, `mc.g` v3 @kind object, `mc.h` v4 @kind object) @signature `Lmc/g$l;.<init>:(Lmc/g;Lmc/h;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e7fc8.  v2.`mc.g$l.q` @type ^`mc.g` := v3 @kind object;
  #L3e7fcc.  v0:= 1I;
  #L3e7fce.  v0:= new `java.lang.Object`[v0];
  #L3e7fd2.  v3:= v3.`mc.g.r` @type ^`java.lang.String` @kind object;
  #L3e7fd6.  v1:= 0I;
  #L3e7fd8.  v0[v1]:= v3 @kind object;
  #L3e7fdc.  v3:= "OkHttp %s" @kind object;
  #L3e7fe0.  call `<init>`(v2, v3, v0) @signature `Lhc/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e7fe6.  v2.`mc.g$l.p` @type ^`mc.h` := v4 @kind object;
  #L3e7fea.  return @kind void;
}
procedure `void` `a`(`mc.g$l` v1 @kind this, `int` v2 , `mc.b` v3 @kind object) @signature `Lmc/g$l;.a:(ILmc/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8580.  v0:= v1.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8584.  call temp:= `f0`(v0, v2) @signature `Lmc/g;.f0:(I)Z` @kind virtual;
  #L3e858a.  v0:= temp;
  #L3e858c.  if v0 == 0 then goto L3e859c;
  #L3e8590.  v0:= v1.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8594.  call `e0`(v0, v2, v3) @signature `Lmc/g;.e0:(ILmc/b;)V` @kind virtual;
  #L3e859a.  return @kind void;
  #L3e859c.  v0:= v1.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e85a0.  call temp:= `g0`(v0, v2) @signature `Lmc/g;.g0:(I)Lmc/i;` @kind virtual;
  #L3e85a6.  v2:= temp @kind object;
  #L3e85a8.  if v2 == 0 then goto L3e85b2;
  #L3e85ac.  call `r`(v2, v3) @signature `Lmc/i;.r:(Lmc/b;)V` @kind virtual;
  #L3e85b2.  return @kind void;
}
procedure `void` `b`(`mc.g$l` v0 @kind this) @signature `Lmc/g$l;.b:()V` @AccessFlag PUBLIC {
    temp;

  #L3e7ffc.  return @kind void;
}
procedure `void` `c`(`mc.g$l` v3 @kind this, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Lmc/g$l;.c:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e84b0.  v0:= 1I;
  #L3e84b2.  if v4 == 0 then goto L3e8504;
  #L3e84b6.  v4:= v3.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e84ba.  @monitorenter v4
  #L3e84bc.  if v5 != v0 then goto L3e84d0;
  #L3e84c0.  v5:= v3.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e84c4.  call temp:= `e`(v5) @signature `Lmc/g;.e:(Lmc/g;)J` @kind static;
  #L3e84ca.  goto L3e84fc;
  #L3e84cc.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e84ce.  goto L3e8500;
  #L3e84d0.  v6:= 2I;
  #L3e84d2.  if v5 != v6 then goto L3e84e2;
  #L3e84d6.  v5:= v3.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e84da.  call temp:= `x`(v5) @signature `Lmc/g;.x:(Lmc/g;)J` @kind static;
  #L3e84e0.  goto L3e84fc;
  #L3e84e2.  v6:= 3I;
  #L3e84e4.  if v5 != v6 then goto L3e84fc;
  #L3e84e8.  v5:= v3.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e84ec.  call temp:= `E`(v5) @signature `Lmc/g;.E:(Lmc/g;)J` @kind static;
  #L3e84f2.  v5:= v3.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e84f6.  call `notifyAll`(v5) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L3e84fc.  @monitorexit v4
  #L3e84fe.  goto L3e8524;
  #L3e8500.  @monitorexit v4
  #L3e8502.  throw v5;
  #L3e8504.  v4:= v3.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8508.  call temp:= `v`(v4) @signature `Lmc/g;.v:(Lmc/g;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L3e850e.  v4:= temp @kind object;
  #L3e8510.  v1:= new `mc.g$k`;
  #L3e8514.  v2:= v3.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8518.  call `<init>`(v1, v2, v0, v5, v6) @signature `Lmc/g$k;.<init>:(Lmc/g;ZII)V` @kind direct;
  #L3e851e.  call `execute`(v4, v1) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3e8524.  return @kind void;
  catch `java.lang.Throwable` @[L3e84c0..L3e8502] goto L3e84cc;
  catch `java.util.concurrent.RejectedExecutionException` @[L3e8504..L3e8524] goto L3e8524;
}
procedure `void` `d`(`mc.g$l` v3 @kind this, `int` v4 , `mc.b` v5 @kind object, `qc.f` v6 @kind object) @signature `Lmc/g$l;.d:(ILmc/b;Lqc/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e82d4.  call temp:= `D`(v6) @signature `Lqc/f;.D:()I` @kind virtual;
  #L3e82da.  v5:= v3.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e82de.  @monitorenter v5
  #L3e82e0.  v6:= v3.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e82e4.  v6:= v6.`mc.g.q` @type ^`java.util.Map` @kind object;
  #L3e82e8.  call temp:= `values`(v6) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L3e82ee.  v6:= temp @kind object;
  #L3e82f0.  v0:= v3.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e82f4.  v0:= v0.`mc.g.q` @type ^`java.util.Map` @kind object;
  #L3e82f8.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3e82fe.  v0:= temp;
  #L3e8300.  v0:= new `mc.i`[v0];
  #L3e8304.  call temp:= `toArray`(v6, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3e830a.  v6:= temp @kind object;
  #L3e830c.  v6:= (`mc.i`[]) v6 @kind object;
  #L3e8310.  v0:= v3.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8314.  v1:= 1I;
  #L3e8316.  call temp:= `o`(v0, v1) @signature `Lmc/g;.o:(Lmc/g;Z)Z` @kind static;
  #L3e831c.  @monitorexit v5
  #L3e831e.  v5:= length @variable v6;
  #L3e8320.  v0:= 0I;
  #L3e8322.  if v0 >= v5 then goto L3e8364;
  #L3e8326.  v1:= v6[v0] @kind object;
  #L3e832a.  call temp:= `i`(v1) @signature `Lmc/i;.i:()I` @kind virtual;
  #L3e8330.  v2:= temp;
  #L3e8332.  if v2 <= v4 then goto L3e835e;
  #L3e8336.  call temp:= `l`(v1) @signature `Lmc/i;.l:()Z` @kind virtual;
  #L3e833c.  v2:= temp;
  #L3e833e.  if v2 == 0 then goto L3e835e;
  #L3e8342.  v2:= `@@mc.b.t` @type ^`mc.b` @kind object;
  #L3e8346.  call `r`(v1, v2) @signature `Lmc/i;.r:(Lmc/b;)V` @kind virtual;
  #L3e834c.  v2:= v3.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8350.  call temp:= `i`(v1) @signature `Lmc/i;.i:()I` @kind virtual;
  #L3e8356.  v1:= temp;
  #L3e8358.  call temp:= `g0`(v2, v1) @signature `Lmc/g;.g0:(I)Lmc/i;` @kind virtual;
  #L3e835e.  v0:= v0 + 1;
  #L3e8362.  goto L3e8322;
  #L3e8364.  return @kind void;
  #L3e8366.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8368.  @monitorexit v5
  #L3e836a.  throw v4;
  catch `java.lang.Throwable` @[L3e82e0..L3e831e] goto L3e8366;
  catch `java.lang.Throwable` @[L3e8368..L3e836a] goto L3e8366;
}
procedure `void` `e`(`mc.g$l` v8 @kind this, `boolean` v9 , `mc.m` v10 @kind object) @signature `Lmc/g$l;.e:(ZLmc/m;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e85c4.  v0:= v8.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e85c8.  call temp:= `v`(v0) @signature `Lmc/g;.v:(Lmc/g;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L3e85ce.  v0:= temp @kind object;
  #L3e85d0.  v7:= new `mc.g$l$b`;
  #L3e85d4.  v3:= "OkHttp %s ACK Settings" @kind object;
  #L3e85d8.  v1:= 1I;
  #L3e85da.  v4:= new `java.lang.Object`[v1];
  #L3e85de.  v1:= 0I;
  #L3e85e0.  v2:= v8.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e85e4.  v2:= v2.`mc.g.r` @type ^`java.lang.String` @kind object;
  #L3e85e8.  v4[v1]:= v2 @kind object;
  #L3e85ec.  v1:= v7 @kind object;
  #L3e85ee.  v2:= v8 @kind object;
  #L3e85f0.  v5:= v9;
  #L3e85f2.  v6:= v10 @kind object;
  #L3e85f4.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lmc/g$l$b;.<init>:(Lmc/g$l;Ljava/lang/String;[Ljava/lang/Object;ZLmc/m;)V` @kind direct;
  #L3e85fa.  call `execute`(v0, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3e8600.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L3e85c4..L3e8600] goto L3e8600;
}
procedure `void` `f`(`mc.g$l` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `boolean` v4 ) @signature `Lmc/g$l;.f:(IIIZ)V` @AccessFlag PUBLIC {
    temp;

  #L3e8550.  return @kind void;
}
procedure `void` `g`(`mc.g$l` v9 @kind this, `boolean` v10 , `int` v11 , `int` v12 , `java.util.List` v13 @kind object) @signature `Lmc/g$l;.g:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3e8390.  v12:= v9.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8394.  call temp:= `f0`(v12, v11) @signature `Lmc/g;.f0:(I)Z` @kind virtual;
  #L3e839a.  v12:= temp;
  #L3e839c.  if v12 == 0 then goto L3e83ac;
  #L3e83a0.  v12:= v9.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e83a4.  call `c0`(v12, v11, v13, v10) @signature `Lmc/g;.c0:(ILjava/util/List;Z)V` @kind virtual;
  #L3e83aa.  return @kind void;
  #L3e83ac.  v12:= v9.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e83b0.  @monitorenter v12
  #L3e83b2.  v0:= v9.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e83b6.  call temp:= `K`(v0, v11) @signature `Lmc/g;.K:(I)Lmc/i;` @kind virtual;
  #L3e83bc.  v0:= temp @kind object;
  #L3e83be.  if v0 != 0 then goto L3e8472;
  #L3e83c2.  v0:= v9.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e83c6.  call temp:= `k`(v0) @signature `Lmc/g;.k:(Lmc/g;)Z` @kind static;
  #L3e83cc.  v0:= temp;
  #L3e83ce.  if v0 == 0 then goto L3e83d6;
  #L3e83d2.  @monitorexit v12
  #L3e83d4.  return @kind void;
  #L3e83d6.  v0:= v9.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e83da.  v1:= v0.`mc.g.s` @type ^`int`;
  #L3e83de.  if v11 > v1 then goto L3e83e6;
  #L3e83e2.  @monitorexit v12
  #L3e83e4.  return @kind void;
  #L3e83e6.  v1:= v11 %% 2;
  #L3e83ea.  v0:= v0.`mc.g.t` @type ^`int`;
  #L3e83ee.  v2:= 2I;
  #L3e83f0.  v0:= v0 %% v2 @kind int;
  #L3e83f2.  if v1 != v0 then goto L3e83fa;
  #L3e83f6.  @monitorexit v12
  #L3e83f8.  return @kind void;
  #L3e83fa.  call temp:= `F`(v13) @signature `Lhc/c;.F:(Ljava/util/List;)Lgc/q;` @kind static;
  #L3e8400.  v8:= temp @kind object;
  #L3e8402.  v13:= new `mc.i`;
  #L3e8406.  v5:= v9.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e840a.  v6:= 0I;
  #L3e840c.  v3:= v13 @kind object;
  #L3e840e.  v4:= v11;
  #L3e8410.  v7:= v10;
  #L3e8412.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lmc/i;.<init>:(ILmc/g;ZZLgc/q;)V` @kind direct;
  #L3e8418.  v10:= v9.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e841c.  v10.`mc.g.s` @type ^`int` := v11;
  #L3e8420.  v10:= v10.`mc.g.q` @type ^`java.util.Map` @kind object;
  #L3e8424.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e842a.  v0:= temp @kind object;
  #L3e842c.  call temp:= `put`(v10, v0, v13) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e8432.  call temp:= `s`() @signature `Lmc/g;.s:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L3e8438.  v10:= temp @kind object;
  #L3e843a.  v0:= new `mc.g$l$a`;
  #L3e843e.  v1:= "OkHttp %s stream %d" @kind object;
  #L3e8442.  v2:= new `java.lang.Object`[v2];
  #L3e8446.  v3:= 0I;
  #L3e8448.  v4:= v9.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e844c.  v4:= v4.`mc.g.r` @type ^`java.lang.String` @kind object;
  #L3e8450.  v2[v3]:= v4 @kind object;
  #L3e8454.  v3:= 1I;
  #L3e8456.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e845c.  v11:= temp @kind object;
  #L3e845e.  v2[v3]:= v11 @kind object;
  #L3e8462.  call `<init>`(v0, v9, v1, v2, v13) @signature `Lmc/g$l$a;.<init>:(Lmc/g$l;Ljava/lang/String;[Ljava/lang/Object;Lmc/i;)V` @kind direct;
  #L3e8468.  call `execute`(v10, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3e846e.  @monitorexit v12
  #L3e8470.  return @kind void;
  #L3e8472.  @monitorexit v12
  #L3e8474.  call `q`(v0, v13) @signature `Lmc/i;.q:(Ljava/util/List;)V` @kind virtual;
  #L3e847a.  if v10 == 0 then goto L3e8484;
  #L3e847e.  call `p`(v0) @signature `Lmc/i;.p:()V` @kind virtual;
  #L3e8484.  return @kind void;
  #L3e8486.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8488.  @monitorexit v12
  #L3e848a.  throw v10;
  catch `java.lang.Throwable` @[L3e83b2..L3e8474] goto L3e8486;
  catch `java.lang.Throwable` @[L3e8488..L3e848a] goto L3e8486;
}
procedure `void` `h`(`mc.g$l` v3 @kind this, `int` v4 , `long` v5 ) @signature `Lmc/g$l;.h:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e8624.  v0:= v3.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8628.  if v4 != 0 then goto L3e864c;
  #L3e862c.  @monitorenter v0
  #L3e862e.  v4:= v3.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8632.  v1:= v4.`mc.g.F` @type ^`long` @kind wide;
  #L3e8636.  v1:= v1 + v5 @kind long;
  #L3e8638.  v4.`mc.g.F` @type ^`long` := v1 @kind wide;
  #L3e863c.  call `notifyAll`(v4) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L3e8642.  @monitorexit v0
  #L3e8644.  goto L3e866a;
  #L3e8646.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8648.  @monitorexit v0
  #L3e864a.  throw v4;
  #L3e864c.  call temp:= `K`(v0, v4) @signature `Lmc/g;.K:(I)Lmc/i;` @kind virtual;
  #L3e8652.  v4:= temp @kind object;
  #L3e8654.  if v4 == 0 then goto L3e866a;
  #L3e8658.  @monitorenter v4
  #L3e865a.  call `c`(v4, v5) @signature `Lmc/i;.c:(J)V` @kind virtual;
  #L3e8660.  @monitorexit v4
  #L3e8662.  goto L3e866a;
  #L3e8664.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8666.  @monitorexit v4
  #L3e8668.  throw v5;
  #L3e866a.  return @kind void;
  catch `java.lang.Throwable` @[L3e862e..L3e864a] goto L3e8646;
  catch `java.lang.Throwable` @[L3e865a..L3e8668] goto L3e8664;
}
procedure `void` `i`(`mc.g$l` v0 @kind this, `int` v1 , `int` v2 , `java.util.List` v3 @kind object) @signature `Lmc/g$l;.i:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L3e8564.  v1:= v0.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8568.  call `d0`(v1, v2, v3) @signature `Lmc/g;.d0:(ILjava/util/List;)V` @kind virtual;
  #L3e856e.  return @kind void;
}
procedure `void` `j`(`mc.g$l` v2 @kind this, `boolean` v3 , `int` v4 , `qc.e` v5 @kind object, `int` v6 ) @signature `Lmc/g$l;.j:(ZILqc/e;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e819c.  v0:= v2.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e81a0.  call temp:= `f0`(v0, v4) @signature `Lmc/g;.f0:(I)Z` @kind virtual;
  #L3e81a6.  v0:= temp;
  #L3e81a8.  if v0 == 0 then goto L3e81b8;
  #L3e81ac.  v0:= v2.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e81b0.  call `a0`(v0, v4, v5, v6, v3) @signature `Lmc/g;.a0:(ILqc/e;IZ)V` @kind virtual;
  #L3e81b6.  return @kind void;
  #L3e81b8.  v0:= v2.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e81bc.  call temp:= `K`(v0, v4) @signature `Lmc/g;.K:(I)Lmc/i;` @kind virtual;
  #L3e81c2.  v0:= temp @kind object;
  #L3e81c4.  if v0 != 0 then goto L3e81ea;
  #L3e81c8.  v3:= v2.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e81cc.  v0:= `@@mc.b.q` @type ^`mc.b` @kind object;
  #L3e81d0.  call `p0`(v3, v4, v0) @signature `Lmc/g;.p0:(ILmc/b;)V` @kind virtual;
  #L3e81d6.  v3:= v2.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e81da.  v0:= (`long`) v6 @kind i2l;
  #L3e81dc.  call `l0`(v3, v0) @signature `Lmc/g;.l0:(J)V` @kind virtual;
  #L3e81e2.  call `d`(v5, v0) @signature `Lqc/e;.d:(J)V` @kind interface;
  #L3e81e8.  return @kind void;
  #L3e81ea.  call `o`(v0, v5, v6) @signature `Lmc/i;.o:(Lqc/e;I)V` @kind virtual;
  #L3e81f0.  if v3 == 0 then goto L3e81fa;
  #L3e81f4.  call `p`(v0) @signature `Lmc/i;.p:()V` @kind virtual;
  #L3e81fa.  return @kind void;
}
procedure `void` `k`(`mc.g$l` v4 @kind this) @signature `Lmc/g$l;.k:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e820c.  v0:= `@@mc.b.r` @type ^`mc.b` @kind object;
  #L3e8210.  v1:= v4.`mc.g$l.p` @type ^`mc.h` @kind object;
  #L3e8214.  call `e`(v1, v4) @signature `Lmc/h;.e:(Lmc/h$b;)V` @kind virtual;
  #L3e821a.  v1:= v4.`mc.g$l.p` @type ^`mc.h` @kind object;
  #L3e821e.  v2:= 0I;
  #L3e8220.  call temp:= `c`(v1, v2, v4) @signature `Lmc/h;.c:(ZLmc/h$b;)Z` @kind virtual;
  #L3e8226.  v1:= temp;
  #L3e8228.  if v1 == 0 then goto L3e822e;
  #L3e822c.  goto L3e821a;
  #L3e822e.  v1:= `@@mc.b.p` @type ^`mc.b` @kind object;
  #L3e8232.  v0:= `@@mc.b.u` @type ^`mc.b` @kind object;
  #L3e8236.  v2:= v4.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e823a.  call `G`(v2, v1, v0) @signature `Lmc/g;.G:(Lmc/b;Lmc/b;)V` @kind virtual;
  #L3e8240.  goto L3e8258;
  #L3e8242.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8244.  v1:= v0 @kind object;
  #L3e8246.  goto L3e8266;
  #L3e8248.  v1:= v0 @kind object;
  #L3e824a.  v0:= `@@mc.b.q` @type ^`mc.b` @kind object;
  #L3e824e.  v1:= v4.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8252.  call `G`(v1, v0, v0) @signature `Lmc/g;.G:(Lmc/b;Lmc/b;)V` @kind virtual;
  #L3e8258.  v0:= v4.`mc.g$l.p` @type ^`mc.h` @kind object;
  #L3e825c.  call `e`(v0) @signature `Lhc/c;.e:(Ljava/io/Closeable;)V` @kind static;
  #L3e8262.  return @kind void;
  #L3e8264.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8266.  v3:= v4.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e826a.  call `G`(v3, v1, v0) @signature `Lmc/g;.G:(Lmc/b;Lmc/b;)V` @kind virtual;
  #L3e8270.  v0:= v4.`mc.g$l.p` @type ^`mc.h` @kind object;
  #L3e8274.  call `e`(v0) @signature `Lhc/c;.e:(Ljava/io/Closeable;)V` @kind static;
  #L3e827a.  throw v2;
  catch `java.io.IOException` @[L3e8210..L3e8232] goto L3e8248;
  catch `java.lang.Throwable` @[L3e8210..L3e8232] goto L3e8242;
  catch `java.io.IOException` @[L3e8232..L3e8236] goto L3e824a;
  catch `java.lang.Throwable` @[L3e8232..L3e8236] goto L3e8264;
  catch `java.io.IOException` @[L3e8236..L3e8240] goto L3e8258;
  catch `java.lang.Throwable` @[L3e824a..L3e824e] goto L3e8264;
  catch `java.io.IOException` @[L3e824e..L3e8258] goto L3e8258;
  catch `java.io.IOException` @[L3e8266..L3e8270] goto L3e8270;
}
procedure `void` `l`(`mc.g$l` v5 @kind this, `boolean` v6 , `mc.m` v7 @kind object) @signature `Lmc/g$l;.l:(ZLmc/m;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e8010.  v0:= v5.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8014.  v0:= v0.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e8018.  @monitorenter v0
  #L3e801a.  v1:= v5.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e801e.  @monitorenter v1
  #L3e8020.  v2:= v5.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8024.  v2:= v2.`mc.g.H` @type ^`mc.m` @kind object;
  #L3e8028.  call temp:= `d`(v2) @signature `Lmc/m;.d:()I` @kind virtual;
  #L3e802e.  v2:= temp;
  #L3e8030.  if v6 == 0 then goto L3e8042;
  #L3e8034.  v6:= v5.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8038.  v6:= v6.`mc.g.H` @type ^`mc.m` @kind object;
  #L3e803c.  call `a`(v6) @signature `Lmc/m;.a:()V` @kind virtual;
  #L3e8042.  v6:= v5.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8046.  v6:= v6.`mc.g.H` @type ^`mc.m` @kind object;
  #L3e804a.  call `h`(v6, v7) @signature `Lmc/m;.h:(Lmc/m;)V` @kind virtual;
  #L3e8050.  v6:= v5.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8054.  v6:= v6.`mc.g.H` @type ^`mc.m` @kind object;
  #L3e8058.  call temp:= `d`(v6) @signature `Lmc/m;.d:()I` @kind virtual;
  #L3e805e.  v6:= temp;
  #L3e8060.  v7:= -1I;
  #L3e8062.  v3:= 0I;
  #L3e8064.  if v6 == v7 then goto L3e80b8;
  #L3e8068.  if v6 == v2 then goto L3e80b8;
  #L3e806c.  v6:= v6 - v2 @kind int;
  #L3e806e.  v6:= (`long`) v6 @kind i2l;
  #L3e8070.  v2:= v5.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8074.  v2:= v2.`mc.g.q` @type ^`java.util.Map` @kind object;
  #L3e8078.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3e807e.  v2:= temp;
  #L3e8080.  if v2 != 0 then goto L3e80bc;
  #L3e8084.  v2:= v5.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8088.  v2:= v2.`mc.g.q` @type ^`java.util.Map` @kind object;
  #L3e808c.  call temp:= `values`(v2) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L3e8092.  v2:= temp @kind object;
  #L3e8094.  v3:= v5.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8098.  v3:= v3.`mc.g.q` @type ^`java.util.Map` @kind object;
  #L3e809c.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3e80a2.  v3:= temp;
  #L3e80a4.  v3:= new `mc.i`[v3];
  #L3e80a8.  call temp:= `toArray`(v2, v3) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3e80ae.  v2:= temp @kind object;
  #L3e80b0.  v2:= (`mc.i`[]) v2 @kind object;
  #L3e80b4.  v3:= v2 @kind object;
  #L3e80b6.  goto L3e80bc;
  #L3e80b8.  v6:= 0L;
  #L3e80bc.  @monitorexit v1
  #L3e80be.  v1:= v5.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e80c2.  v2:= v1.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e80c6.  v1:= v1.`mc.g.H` @type ^`mc.m` @kind object;
  #L3e80ca.  call `a`(v2, v1) @signature `Lmc/j;.a:(Lmc/m;)V` @kind virtual;
  #L3e80d0.  goto L3e80dc;
  #L3e80d2.  v1:= v5.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e80d6.  call `a`(v1) @signature `Lmc/g;.a:(Lmc/g;)V` @kind static;
  #L3e80dc.  @monitorexit v0
  #L3e80de.  v0:= 0I;
  #L3e80e0.  if v3 == 0 then goto L3e8106;
  #L3e80e4.  v1:= length @variable v3;
  #L3e80e6.  v2:= 0I;
  #L3e80e8.  if v2 >= v1 then goto L3e8106;
  #L3e80ec.  v4:= v3[v2] @kind object;
  #L3e80f0.  @monitorenter v4
  #L3e80f2.  call `c`(v4, v6) @signature `Lmc/i;.c:(J)V` @kind virtual;
  #L3e80f8.  @monitorexit v4
  #L3e80fa.  v2:= v2 + 1;
  #L3e80fe.  goto L3e80e8;
  #L3e8100.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8102.  @monitorexit v4
  #L3e8104.  throw v6;
  #L3e8106.  call temp:= `s`() @signature `Lmc/g;.s:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L3e810c.  v6:= temp @kind object;
  #L3e810e.  v7:= new `mc.g$l$c`;
  #L3e8112.  v1:= "OkHttp %s settings" @kind object;
  #L3e8116.  v2:= 1I;
  #L3e8118.  v2:= new `java.lang.Object`[v2];
  #L3e811c.  v3:= v5.`mc.g$l.q` @type ^`mc.g` @kind object;
  #L3e8120.  v3:= v3.`mc.g.r` @type ^`java.lang.String` @kind object;
  #L3e8124.  v2[v0]:= v3 @kind object;
  #L3e8128.  call `<init>`(v7, v5, v1, v2) @signature `Lmc/g$l$c;.<init>:(Lmc/g$l;Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e812e.  call `execute`(v6, v7) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3e8134.  return @kind void;
  #L3e8136.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8138.  @monitorexit v1
  #L3e813a.  throw v6;
  #L3e813c.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e813e.  @monitorexit v0
  #L3e8140.  throw v6;
  catch `java.lang.Throwable` @[L3e801a..L3e8020] goto L3e813c;
  catch `java.lang.Throwable` @[L3e8020..L3e80be] goto L3e8136;
  catch `java.io.IOException` @[L3e80be..L3e80d0] goto L3e80d2;
  catch `java.lang.Throwable` @[L3e80be..L3e80d0] goto L3e813c;
  catch `java.lang.Throwable` @[L3e80d2..L3e80de] goto L3e813c;
  catch `java.lang.Throwable` @[L3e80f2..L3e8104] goto L3e8100;
  catch `java.lang.Throwable` @[L3e8138..L3e813a] goto L3e8136;
  catch `java.lang.Throwable` @[L3e813a..L3e8140] goto L3e813c;
}
