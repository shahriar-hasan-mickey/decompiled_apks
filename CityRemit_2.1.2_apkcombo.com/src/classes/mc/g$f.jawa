record `mc.g$f` @kind class @AccessFlag  extends `hc.b` @kind class {
  `int` `mc.g$f.p` @AccessFlag FINAL_SYNTHETIC;
  `qc.c` `mc.g$f.q` @AccessFlag FINAL_SYNTHETIC;
  `int` `mc.g$f.r` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `mc.g$f.s` @AccessFlag FINAL_SYNTHETIC;
  `mc.g` `mc.g$f.t` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`mc.g$f` v0 @kind this, `mc.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `qc.c` v5 @kind object, `int` v6 , `boolean` v7 ) @signature `Lmc/g$f;.<init>:(Lmc/g;Ljava/lang/String;[Ljava/lang/Object;ILqc/c;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e7af0.  v0.`mc.g$f.t` @type ^`mc.g` := v1 @kind object;
  #L3e7af4.  v0.`mc.g$f.p` @type ^`int` := v4;
  #L3e7af8.  v0.`mc.g$f.q` @type ^`qc.c` := v5 @kind object;
  #L3e7afc.  v0.`mc.g$f.r` @type ^`int` := v6;
  #L3e7b00.  v0.`mc.g$f.s` @type ^`boolean` := v7 @kind boolean;
  #L3e7b04.  call `<init>`(v0, v2, v3) @signature `Lhc/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e7b0a.  return @kind void;
}
procedure `void` `k`(`mc.g$f` v5 @kind this) @signature `Lmc/g$f;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e7b1c.  v0:= v5.`mc.g$f.t` @type ^`mc.g` @kind object;
  #L3e7b20.  v0:= v0.`mc.g.x` @type ^`mc.l` @kind object;
  #L3e7b24.  v1:= v5.`mc.g$f.p` @type ^`int`;
  #L3e7b28.  v2:= v5.`mc.g$f.q` @type ^`qc.c` @kind object;
  #L3e7b2c.  v3:= v5.`mc.g$f.r` @type ^`int`;
  #L3e7b30.  v4:= v5.`mc.g$f.s` @type ^`boolean` @kind boolean;
  #L3e7b34.  call temp:= `d`(v0, v1, v2, v3, v4) @signature `Lmc/l;.d:(ILqc/e;IZ)Z` @kind interface;
  #L3e7b3a.  v0:= temp;
  #L3e7b3c.  if v0 == 0 then goto L3e7b56;
  #L3e7b40.  v1:= v5.`mc.g$f.t` @type ^`mc.g` @kind object;
  #L3e7b44.  v1:= v1.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e7b48.  v2:= v5.`mc.g$f.p` @type ^`int`;
  #L3e7b4c.  v3:= `@@mc.b.u` @type ^`mc.b` @kind object;
  #L3e7b50.  call `E`(v1, v2, v3) @signature `Lmc/j;.E:(ILmc/b;)V` @kind virtual;
  #L3e7b56.  if v0 != 0 then goto L3e7b62;
  #L3e7b5a.  v0:= v5.`mc.g$f.s` @type ^`boolean` @kind boolean;
  #L3e7b5e.  if v0 == 0 then goto L3e7b8c;
  #L3e7b62.  v0:= v5.`mc.g$f.t` @type ^`mc.g` @kind object;
  #L3e7b66.  @monitorenter v0
  #L3e7b68.  v1:= v5.`mc.g$f.t` @type ^`mc.g` @kind object;
  #L3e7b6c.  v1:= v1.`mc.g.L` @type ^`java.util.Set` @kind object;
  #L3e7b70.  v2:= v5.`mc.g$f.p` @type ^`int`;
  #L3e7b74.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e7b7a.  v2:= temp @kind object;
  #L3e7b7c.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7b82.  @monitorexit v0
  #L3e7b84.  goto L3e7b8c;
  #L3e7b86.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e7b88.  @monitorexit v0
  #L3e7b8a.  throw v1;
  #L3e7b8c.  return @kind void;
  catch `java.io.IOException` @[L3e7b1c..L3e7b68] goto L3e7b8c;
  catch `java.lang.Throwable` @[L3e7b68..L3e7b8a] goto L3e7b86;
  catch `java.io.IOException` @[L3e7b8a..L3e7b8c] goto L3e7b8c;
}
