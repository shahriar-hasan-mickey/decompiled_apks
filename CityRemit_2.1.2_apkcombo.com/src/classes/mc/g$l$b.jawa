record `mc.g$l$b` @kind class @AccessFlag  extends `hc.b` @kind class {
  `boolean` `mc.g$l$b.p` @AccessFlag FINAL_SYNTHETIC;
  `mc.m` `mc.g$l$b.q` @AccessFlag FINAL_SYNTHETIC;
  `mc.g$l` `mc.g$l$b.r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`mc.g$l$b` v0 @kind this, `mc.g$l` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `boolean` v4 , `mc.m` v5 @kind object) @signature `Lmc/g$l$b;.<init>:(Lmc/g$l;Ljava/lang/String;[Ljava/lang/Object;ZLmc/m;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e7f40.  v0.`mc.g$l$b.r` @type ^`mc.g$l` := v1 @kind object;
  #L3e7f44.  v0.`mc.g$l$b.p` @type ^`boolean` := v4 @kind boolean;
  #L3e7f48.  v0.`mc.g$l$b.q` @type ^`mc.m` := v5 @kind object;
  #L3e7f4c.  call `<init>`(v0, v2, v3) @signature `Lhc/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e7f52.  return @kind void;
}
procedure `void` `k`(`mc.g$l$b` v3 @kind this) @signature `Lmc/g$l$b;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e7f64.  v0:= v3.`mc.g$l$b.r` @type ^`mc.g$l` @kind object;
  #L3e7f68.  v1:= v3.`mc.g$l$b.p` @type ^`boolean` @kind boolean;
  #L3e7f6c.  v2:= v3.`mc.g$l$b.q` @type ^`mc.m` @kind object;
  #L3e7f70.  call `l`(v0, v1, v2) @signature `Lmc/g$l;.l:(ZLmc/m;)V` @kind virtual;
  #L3e7f76.  return @kind void;
}
