record `mc.g$d` @kind class @AccessFlag  extends `hc.b` @kind class {
  `int` `mc.g$d.p` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `mc.g$d.q` @AccessFlag FINAL_SYNTHETIC;
  `mc.g` `mc.g$d.r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`mc.g$d` v0 @kind this, `mc.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `java.util.List` v5 @kind object) @signature `Lmc/g$d;.<init>:(Lmc/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e7974.  v0.`mc.g$d.r` @type ^`mc.g` := v1 @kind object;
  #L3e7978.  v0.`mc.g$d.p` @type ^`int` := v4;
  #L3e797c.  v0.`mc.g$d.q` @type ^`java.util.List` := v5 @kind object;
  #L3e7980.  call `<init>`(v0, v2, v3) @signature `Lhc/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e7986.  return @kind void;
}
procedure `void` `k`(`mc.g$d` v3 @kind this) @signature `Lmc/g$d;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e7998.  v0:= v3.`mc.g$d.r` @type ^`mc.g` @kind object;
  #L3e799c.  v0:= v0.`mc.g.x` @type ^`mc.l` @kind object;
  #L3e79a0.  v1:= v3.`mc.g$d.p` @type ^`int`;
  #L3e79a4.  v2:= v3.`mc.g$d.q` @type ^`java.util.List` @kind object;
  #L3e79a8.  call temp:= `a`(v0, v1, v2) @signature `Lmc/l;.a:(ILjava/util/List;)Z` @kind interface;
  #L3e79ae.  v0:= temp;
  #L3e79b0.  if v0 == 0 then goto L3e79f4;
  #L3e79b4.  v0:= v3.`mc.g$d.r` @type ^`mc.g` @kind object;
  #L3e79b8.  v0:= v0.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e79bc.  v1:= v3.`mc.g$d.p` @type ^`int`;
  #L3e79c0.  v2:= `@@mc.b.u` @type ^`mc.b` @kind object;
  #L3e79c4.  call `E`(v0, v1, v2) @signature `Lmc/j;.E:(ILmc/b;)V` @kind virtual;
  #L3e79ca.  v0:= v3.`mc.g$d.r` @type ^`mc.g` @kind object;
  #L3e79ce.  @monitorenter v0
  #L3e79d0.  v1:= v3.`mc.g$d.r` @type ^`mc.g` @kind object;
  #L3e79d4.  v1:= v1.`mc.g.L` @type ^`java.util.Set` @kind object;
  #L3e79d8.  v2:= v3.`mc.g$d.p` @type ^`int`;
  #L3e79dc.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e79e2.  v2:= temp @kind object;
  #L3e79e4.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3e79ea.  @monitorexit v0
  #L3e79ec.  goto L3e79f4;
  #L3e79ee.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e79f0.  @monitorexit v0
  #L3e79f2.  throw v1;
  #L3e79f4.  return @kind void;
  catch `java.io.IOException` @[L3e79b4..L3e79d0] goto L3e79f4;
  catch `java.lang.Throwable` @[L3e79d0..L3e79f2] goto L3e79ee;
  catch `java.io.IOException` @[L3e79f2..L3e79f4] goto L3e79f4;
}
