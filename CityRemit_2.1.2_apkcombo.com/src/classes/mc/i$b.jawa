record `mc.i$b` @kind class @AccessFlag FINAL extends `qc.s` @kind interface {
  `qc.c` `mc.i$b.o` @AccessFlag PRIVATE_FINAL;
  `qc.c` `mc.i$b.p` @AccessFlag PRIVATE_FINAL;
  `long` `mc.i$b.q` @AccessFlag PRIVATE_FINAL;
  `boolean` `mc.i$b.r` @AccessFlag ;
  `boolean` `mc.i$b.s` @AccessFlag ;
  `mc.i` `mc.i$b.t` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<clinit>`() @signature `Lmc/i$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L3ea4a8.  return @kind void;
}
procedure `void` `<init>`(`mc.i$b` v0 @kind this, `mc.i` v1 @kind object, `long` v2 ) @signature `Lmc/i$b;.<init>:(Lmc/i;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ea4bc.  v0.`mc.i$b.t` @type ^`mc.i` := v1 @kind object;
  #L3ea4c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ea4c6.  v1:= new `qc.c`;
  #L3ea4ca.  call `<init>`(v1) @signature `Lqc/c;.<init>:()V` @kind direct;
  #L3ea4d0.  v0.`mc.i$b.o` @type ^`qc.c` := v1 @kind object;
  #L3ea4d4.  v1:= new `qc.c`;
  #L3ea4d8.  call `<init>`(v1) @signature `Lqc/c;.<init>:()V` @kind direct;
  #L3ea4de.  v0.`mc.i$b.p` @type ^`qc.c` := v1 @kind object;
  #L3ea4e2.  v0.`mc.i$b.q` @type ^`long` := v2 @kind wide;
  #L3ea4e6.  return @kind void;
}
procedure `void` `c`(`mc.i$b` v1 @kind this, `long` v2 ) @signature `Lmc/i$b;.c:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ea740.  v0:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea744.  v0:= v0.`mc.i.d` @type ^`mc.g` @kind object;
  #L3ea748.  call `l0`(v0, v2) @signature `Lmc/g;.l0:(J)V` @kind virtual;
  #L3ea74e.  return @kind void;
}
procedure `long` `T`(`mc.i$b` v16 @kind this, `qc.c` v17 @kind object, `long` v18 ) @signature `Lmc/i$b;.T:(Lqc/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3ea25c.  v1:= v16 @kind object;
  #L3ea260.  v2:= v18 @kind wide;
  #L3ea264.  v4:= 0L;
  #L3ea268.  v0:= lcmp(v2, v4);
  #L3ea26c.  if v0 < 0 then goto L3ea41c;
  #L3ea270.  v6:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea274.  @monitorenter v6
  #L3ea276.  v0:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea27a.  v0:= v0.`mc.i.j` @type ^`mc.i$c` @kind object;
  #L3ea27e.  call `k`(v0) @signature `Lqc/a;.k:()V` @kind virtual;
  #L3ea284.  v0:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea288.  v7:= v0.`mc.i.l` @type ^`mc.b` @kind object;
  #L3ea28c.  if v7 == 0 then goto L3ea292;
  #L3ea290.  goto L3ea294;
  #L3ea292.  v7:= 0I;
  #L3ea294.  v9:= v1.`mc.i$b.r` @type ^`boolean` @kind boolean;
  #L3ea298.  if v9 != 0 then goto L3ea3f4;
  #L3ea29c.  call temp:= `a`(v0) @signature `Lmc/i;.a:(Lmc/i;)Ljava/util/Deque;` @kind static;
  #L3ea2a2.  v0:= temp @kind object;
  #L3ea2a4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L3ea2aa.  v0:= temp;
  #L3ea2ac.  if v0 != 0 then goto L3ea2ee;
  #L3ea2b0.  v0:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea2b4.  call temp:= `b`(v0) @signature `Lmc/i;.b:(Lmc/i;)Lmc/c$a;` @kind static;
  #L3ea2ba.  v0:= temp @kind object;
  #L3ea2bc.  if v0 == 0 then goto L3ea2ee;
  #L3ea2c0.  v0:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea2c4.  call temp:= `a`(v0) @signature `Lmc/i;.a:(Lmc/i;)Ljava/util/Deque;` @kind static;
  #L3ea2ca.  v0:= temp @kind object;
  #L3ea2cc.  call temp:= `removeFirst`(v0) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L3ea2d2.  v0:= temp @kind object;
  #L3ea2d4.  v8:= v0 @kind object;
  #L3ea2d6.  v8:= (`gc.q`) v8 @kind object;
  #L3ea2da.  v0:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea2de.  call temp:= `b`(v0) @signature `Lmc/i;.b:(Lmc/i;)Lmc/c$a;` @kind static;
  #L3ea2e4.  v0:= temp @kind object;
  #L3ea2e6.  v13:= v17 @kind object;
  #L3ea2ea.  v10:= v0 @kind object;
  #L3ea2ec.  goto L3ea3a8;
  #L3ea2ee.  v0:= v1.`mc.i$b.p` @type ^`qc.c` @kind object;
  #L3ea2f2.  call temp:= `h0`(v0) @signature `Lqc/c;.h0:()J` @kind virtual;
  #L3ea2f8.  v11:= temp @kind wide;
  #L3ea2fa.  v0:= lcmp(v11, v4);
  #L3ea2fe.  if v0 <= 0 then goto L3ea376;
  #L3ea302.  v0:= v1.`mc.i$b.p` @type ^`qc.c` @kind object;
  #L3ea306.  call temp:= `h0`(v0) @signature `Lqc/c;.h0:()J` @kind virtual;
  #L3ea30c.  v11:= temp @kind wide;
  #L3ea30e.  call temp:= `min`(v2, v11) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3ea314.  v11:= temp @kind wide;
  #L3ea316.  v13:= v17 @kind object;
  #L3ea31a.  call temp:= `T`(v0, v13, v11) @signature `Lqc/c;.T:(Lqc/c;J)J` @kind virtual;
  #L3ea320.  v11:= temp @kind wide;
  #L3ea322.  v0:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea326.  v14:= v0.`mc.i.a` @type ^`long` @kind wide;
  #L3ea32a.  v14:= v14 + v11 @kind long;
  #L3ea32c.  v0.`mc.i.a` @type ^`long` := v14 @kind wide;
  #L3ea330.  if v7 != 0 then goto L3ea370;
  #L3ea334.  v0:= v0.`mc.i.d` @type ^`mc.g` @kind object;
  #L3ea338.  v0:= v0.`mc.g.G` @type ^`mc.m` @kind object;
  #L3ea33c.  call temp:= `d`(v0) @signature `Lmc/m;.d:()I` @kind virtual;
  #L3ea342.  v0:= temp;
  #L3ea344.  v0:= v0 / 2;
  #L3ea348.  v8:= (`long`) v0 @kind i2l;
  #L3ea34a.  v0:= lcmp(v14, v8);
  #L3ea34e.  if v0 < 0 then goto L3ea370;
  #L3ea352.  v0:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea356.  v8:= v0.`mc.i.d` @type ^`mc.g` @kind object;
  #L3ea35a.  v9:= v0.`mc.i.c` @type ^`int`;
  #L3ea35e.  v14:= v0.`mc.i.a` @type ^`long` @kind wide;
  #L3ea362.  call `q0`(v8, v9, v14) @signature `Lmc/g;.q0:(IJ)V` @kind virtual;
  #L3ea368.  v0:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea36c.  v0.`mc.i.a` @type ^`long` := v4 @kind wide;
  #L3ea370.  v8:= 0I;
  #L3ea372.  v10:= 0I;
  #L3ea374.  goto L3ea3ac;
  #L3ea376.  v13:= v17 @kind object;
  #L3ea37a.  v0:= v1.`mc.i$b.s` @type ^`boolean` @kind boolean;
  #L3ea37e.  if v0 != 0 then goto L3ea3a4;
  #L3ea382.  if v7 != 0 then goto L3ea3a4;
  #L3ea386.  v0:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea38a.  call `t`(v0) @signature `Lmc/i;.t:()V` @kind virtual;
  #L3ea390.  v0:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea394.  v0:= v0.`mc.i.j` @type ^`mc.i$c` @kind object;
  #L3ea398.  call `u`(v0) @signature `Lmc/i$c;.u:()V` @kind virtual;
  #L3ea39e.  @monitorexit v6
  #L3ea3a0.  goto L3ea270;
  #L3ea3a4.  v8:= 0I;
  #L3ea3a6.  v10:= 0I;
  #L3ea3a8.  v11:= -1L;
  #L3ea3ac.  v0:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea3b0.  v0:= v0.`mc.i.j` @type ^`mc.i$c` @kind object;
  #L3ea3b4.  call `u`(v0) @signature `Lmc/i$c;.u:()V` @kind virtual;
  #L3ea3ba.  @monitorexit v6
  #L3ea3bc.  if v8 == 0 then goto L3ea3ce;
  #L3ea3c0.  if v10 == 0 then goto L3ea3ce;
  #L3ea3c4.  call `a`(v10, v8) @signature `Lmc/c$a;.a:(Lgc/q;)V` @kind interface;
  #L3ea3ca.  goto L3ea270;
  #L3ea3ce.  v2:= -1L;
  #L3ea3d2.  v0:= lcmp(v11, v2);
  #L3ea3d6.  if v0 == 0 then goto L3ea3e2;
  #L3ea3da.  call `c`(v1, v11) @signature `Lmc/i$b;.c:(J)V` @kind direct;
  #L3ea3e0.  return v11 @kind wide;
  #L3ea3e2.  if v7 != 0 then goto L3ea3e8;
  #L3ea3e6.  return v2 @kind wide;
  #L3ea3e8.  v0:= new `mc.n`;
  #L3ea3ec.  call `<init>`(v0, v7) @signature `Lmc/n;.<init>:(Lmc/b;)V` @kind direct;
  #L3ea3f2.  throw v0;
  #L3ea3f4.  v0:= new `java.io.IOException`;
  #L3ea3f8.  v2:= "stream closed" @kind object;
  #L3ea3fc.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ea402.  throw v0;
  #L3ea404.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea406.  v2:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea40a.  v2:= v2.`mc.i.j` @type ^`mc.i$c` @kind object;
  #L3ea40e.  call `u`(v2) @signature `Lmc/i$c;.u:()V` @kind virtual;
  #L3ea414.  throw v0;
  #L3ea416.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea418.  @monitorexit v6
  #L3ea41a.  throw v0;
  #L3ea41c.  v0:= new `java.lang.IllegalArgumentException`;
  #L3ea420.  v4:= new `java.lang.StringBuilder`;
  #L3ea424.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ea42a.  v5:= "byteCount < 0: " @kind object;
  #L3ea42e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ea434.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ea43a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ea440.  v2:= temp @kind object;
  #L3ea442.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ea448.  throw v0;
  catch `java.lang.Throwable` @[L3ea276..L3ea284] goto L3ea416;
  catch `java.lang.Throwable` @[L3ea284..L3ea390] goto L3ea404;
  catch `java.lang.Throwable` @[L3ea390..L3ea3bc] goto L3ea416;
  catch `java.lang.Throwable` @[L3ea3f4..L3ea404] goto L3ea404;
  catch `java.lang.Throwable` @[L3ea406..L3ea41a] goto L3ea416;
}
procedure `void` `a`(`mc.i$b` v11 @kind this, `qc.e` v12 @kind object, `long` v13 ) @signature `Lmc/i$b;.a:(Lqc/e;J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3ea604.  v0:= 0L;
  #L3ea608.  v2:= lcmp(v13, v0);
  #L3ea60c.  if v2 <= 0 then goto L3ea706;
  #L3ea610.  v2:= v11.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea614.  @monitorenter v2
  #L3ea616.  v3:= v11.`mc.i$b.s` @type ^`boolean` @kind boolean;
  #L3ea61a.  v4:= v11.`mc.i$b.p` @type ^`qc.c` @kind object;
  #L3ea61e.  call temp:= `h0`(v4) @signature `Lqc/c;.h0:()J` @kind virtual;
  #L3ea624.  v4:= temp @kind wide;
  #L3ea626.  v4:= v4 + v13 @kind long;
  #L3ea628.  v6:= v11.`mc.i$b.q` @type ^`long` @kind wide;
  #L3ea62c.  v8:= 1I;
  #L3ea62e.  v9:= 0I;
  #L3ea630.  v10:= lcmp(v4, v6);
  #L3ea634.  if v10 <= 0 then goto L3ea63c;
  #L3ea638.  v4:= 1I;
  #L3ea63a.  goto L3ea63e;
  #L3ea63c.  v4:= 0I;
  #L3ea63e.  @monitorexit v2
  #L3ea640.  if v4 == 0 then goto L3ea65a;
  #L3ea644.  call `d`(v12, v13) @signature `Lqc/e;.d:(J)V` @kind interface;
  #L3ea64a.  v12:= v11.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea64e.  v13:= `@@mc.b.s` @type ^`mc.b` @kind object;
  #L3ea652.  call `h`(v12, v13) @signature `Lmc/i;.h:(Lmc/b;)V` @kind virtual;
  #L3ea658.  return @kind void;
  #L3ea65a.  if v3 == 0 then goto L3ea666;
  #L3ea65e.  call `d`(v12, v13) @signature `Lqc/e;.d:(J)V` @kind interface;
  #L3ea664.  return @kind void;
  #L3ea666.  v2:= v11.`mc.i$b.o` @type ^`qc.c` @kind object;
  #L3ea66a.  call temp:= `T`(v12, v2, v13) @signature `Lqc/s;.T:(Lqc/c;J)J` @kind interface;
  #L3ea670.  v2:= temp @kind wide;
  #L3ea672.  v4:= -1L;
  #L3ea676.  v6:= lcmp(v2, v4);
  #L3ea67a.  if v6 == 0 then goto L3ea6f4;
  #L3ea67e.  v13:= v13 - v2 @kind long;
  #L3ea680.  v2:= v11.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea684.  @monitorenter v2
  #L3ea686.  v3:= v11.`mc.i$b.r` @type ^`boolean` @kind boolean;
  #L3ea68a.  if v3 == 0 then goto L3ea6a6;
  #L3ea68e.  v3:= v11.`mc.i$b.o` @type ^`qc.c` @kind object;
  #L3ea692.  call temp:= `h0`(v3) @signature `Lqc/c;.h0:()J` @kind virtual;
  #L3ea698.  v3:= temp @kind wide;
  #L3ea69a.  v5:= v11.`mc.i$b.o` @type ^`qc.c` @kind object;
  #L3ea69e.  call `a`(v5) @signature `Lqc/c;.a:()V` @kind virtual;
  #L3ea6a4.  goto L3ea6dc;
  #L3ea6a6.  v3:= v11.`mc.i$b.p` @type ^`qc.c` @kind object;
  #L3ea6aa.  call temp:= `h0`(v3) @signature `Lqc/c;.h0:()J` @kind virtual;
  #L3ea6b0.  v3:= temp @kind wide;
  #L3ea6b2.  v5:= lcmp(v3, v0);
  #L3ea6b6.  if v5 != 0 then goto L3ea6bc;
  #L3ea6ba.  goto L3ea6be;
  #L3ea6bc.  v8:= 0I;
  #L3ea6be.  v3:= v11.`mc.i$b.p` @type ^`qc.c` @kind object;
  #L3ea6c2.  v4:= v11.`mc.i$b.o` @type ^`qc.c` @kind object;
  #L3ea6c6.  call temp:= `o0`(v3, v4) @signature `Lqc/c;.o0:(Lqc/s;)J` @kind virtual;
  #L3ea6cc.  if v8 == 0 then goto L3ea6da;
  #L3ea6d0.  v3:= v11.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea6d4.  call `notifyAll`(v3) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L3ea6da.  v3:= v0 @kind wide;
  #L3ea6dc.  @monitorexit v2
  #L3ea6de.  v2:= lcmp(v3, v0);
  #L3ea6e2.  if v2 <= 0 then goto L3ea604;
  #L3ea6e6.  call `c`(v11, v3) @signature `Lmc/i$b;.c:(J)V` @kind direct;
  #L3ea6ec.  goto L3ea604;
  #L3ea6ee.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea6f0.  @monitorexit v2
  #L3ea6f2.  throw v12;
  #L3ea6f4.  v12:= new `java.io.EOFException`;
  #L3ea6f8.  call `<init>`(v12) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L3ea6fe.  throw v12;
  #L3ea700.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea702.  @monitorexit v2
  #L3ea704.  throw v12;
  #L3ea706.  return @kind void;
  catch `java.lang.Throwable` @[L3ea616..L3ea640] goto L3ea700;
  catch `java.lang.Throwable` @[L3ea686..L3ea6de] goto L3ea6ee;
  catch `java.lang.Throwable` @[L3ea6f0..L3ea6f2] goto L3ea6ee;
  catch `java.lang.Throwable` @[L3ea702..L3ea704] goto L3ea700;
}
procedure `void` `close`(`mc.i$b` v8 @kind this) @signature `Lmc/i$b;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ea4f8.  v0:= v8.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea4fc.  @monitorenter v0
  #L3ea4fe.  v1:= 1I;
  #L3ea500.  v8.`mc.i$b.r` @type ^`boolean` := v1 @kind boolean;
  #L3ea504.  v1:= v8.`mc.i$b.p` @type ^`qc.c` @kind object;
  #L3ea508.  call temp:= `h0`(v1) @signature `Lqc/c;.h0:()J` @kind virtual;
  #L3ea50e.  v1:= temp @kind wide;
  #L3ea510.  v3:= v8.`mc.i$b.p` @type ^`qc.c` @kind object;
  #L3ea514.  call `a`(v3) @signature `Lqc/c;.a:()V` @kind virtual;
  #L3ea51a.  v3:= v8.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea51e.  call temp:= `a`(v3) @signature `Lmc/i;.a:(Lmc/i;)Ljava/util/Deque;` @kind static;
  #L3ea524.  v3:= temp @kind object;
  #L3ea526.  call temp:= `isEmpty`(v3) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L3ea52c.  v3:= temp;
  #L3ea52e.  v4:= 0I;
  #L3ea530.  if v3 != 0 then goto L3ea580;
  #L3ea534.  v3:= v8.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea538.  call temp:= `b`(v3) @signature `Lmc/i;.b:(Lmc/i;)Lmc/c$a;` @kind static;
  #L3ea53e.  v3:= temp @kind object;
  #L3ea540.  if v3 == 0 then goto L3ea580;
  #L3ea544.  v4:= new `java.util.ArrayList`;
  #L3ea548.  v3:= v8.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea54c.  call temp:= `a`(v3) @signature `Lmc/i;.a:(Lmc/i;)Ljava/util/Deque;` @kind static;
  #L3ea552.  v3:= temp @kind object;
  #L3ea554.  call `<init>`(v4, v3) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3ea55a.  v3:= v8.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea55e.  call temp:= `a`(v3) @signature `Lmc/i;.a:(Lmc/i;)Ljava/util/Deque;` @kind static;
  #L3ea564.  v3:= temp @kind object;
  #L3ea566.  call `clear`(v3) @signature `Ljava/util/Deque;.clear:()V` @kind interface;
  #L3ea56c.  v3:= v8.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea570.  call temp:= `b`(v3) @signature `Lmc/i;.b:(Lmc/i;)Lmc/c$a;` @kind static;
  #L3ea576.  v3:= temp @kind object;
  #L3ea578.  v7:= v4 @kind object;
  #L3ea57a.  v4:= v3 @kind object;
  #L3ea57c.  v3:= v7 @kind object;
  #L3ea57e.  goto L3ea582;
  #L3ea580.  v3:= v4 @kind object;
  #L3ea582.  v5:= v8.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea586.  call `notifyAll`(v5) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L3ea58c.  @monitorexit v0
  #L3ea58e.  v5:= 0L;
  #L3ea592.  v0:= lcmp(v1, v5);
  #L3ea596.  if v0 <= 0 then goto L3ea5a0;
  #L3ea59a.  call `c`(v8, v1) @signature `Lmc/i$b;.c:(J)V` @kind direct;
  #L3ea5a0.  v0:= v8.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea5a4.  call `d`(v0) @signature `Lmc/i;.d:()V` @kind virtual;
  #L3ea5aa.  if v4 == 0 then goto L3ea5d6;
  #L3ea5ae.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ea5b4.  v0:= temp @kind object;
  #L3ea5b6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ea5bc.  v1:= temp;
  #L3ea5be.  if v1 == 0 then goto L3ea5d6;
  #L3ea5c2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ea5c8.  v1:= temp @kind object;
  #L3ea5ca.  v1:= (`gc.q`) v1 @kind object;
  #L3ea5ce.  call `a`(v4, v1) @signature `Lmc/c$a;.a:(Lgc/q;)V` @kind interface;
  #L3ea5d4.  goto L3ea5b6;
  #L3ea5d6.  return @kind void;
  #L3ea5d8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea5da.  @monitorexit v0
  #L3ea5dc.  throw v1;
  catch `java.lang.Throwable` @[L3ea500..L3ea58e] goto L3ea5d8;
  catch `java.lang.Throwable` @[L3ea5da..L3ea5dc] goto L3ea5d8;
}
procedure `qc.t` `f`(`mc.i$b` v1 @kind this) @signature `Lmc/i$b;.f:()Lqc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea48c.  v0:= v1.`mc.i$b.t` @type ^`mc.i` @kind object;
  #L3ea490.  v0:= v0.`mc.i.j` @type ^`mc.i$c` @kind object;
  #L3ea494.  return v0 @kind object;
}
