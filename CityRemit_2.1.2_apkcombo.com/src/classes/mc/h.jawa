record `mc.h` @kind class @AccessFlag FINAL extends `java.io.Closeable` @kind interface {
  `qc.e` `mc.h.o` @AccessFlag PRIVATE_FINAL;
  `mc.h$a` `mc.h.p` @AccessFlag PRIVATE_FINAL;
  `boolean` `mc.h.q` @AccessFlag PRIVATE_FINAL;
  `mc.d$a` `mc.h.r` @AccessFlag FINAL;
}
global `java.util.logging.Logger` `@@mc.h.s` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lmc/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e9848.  v0:= constclass @type ^`mc.e` @kind object;
  #L3e984c.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3e9852.  v0:= temp @kind object;
  #L3e9854.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L3e985a.  v0:= temp @kind object;
  #L3e985c.  `@@mc.h.s` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L3e9860.  return @kind void;
}
procedure `void` `<init>`(`mc.h` v1 @kind this, `qc.e` v2 @kind object, `boolean` v3 ) @signature `Lmc/h;.<init>:(Lqc/e;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e9874.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e987a.  v1.`mc.h.o` @type ^`qc.e` := v2 @kind object;
  #L3e987e.  v1.`mc.h.q` @type ^`boolean` := v3 @kind boolean;
  #L3e9882.  v3:= new `mc.h$a`;
  #L3e9886.  call `<init>`(v3, v2) @signature `Lmc/h$a;.<init>:(Lqc/e;)V` @kind direct;
  #L3e988c.  v1.`mc.h.p` @type ^`mc.h$a` := v3 @kind object;
  #L3e9890.  v2:= new `mc.d$a`;
  #L3e9894.  v0:= 4096I;
  #L3e9898.  call `<init>`(v2, v0, v3) @signature `Lmc/d$a;.<init>:(ILqc/s;)V` @kind direct;
  #L3e989e.  v1.`mc.h.r` @type ^`mc.d$a` := v2 @kind object;
  #L3e98a2.  return @kind void;
}
procedure `void` `E`(`mc.h` v1 @kind this, `mc.h$b` v2 @kind object, `int` v3 , `byte` v4 , `int` v5 ) @signature `Lmc/h;.E:(Lmc/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e9c14.  v4:= 0I;
  #L3e9c16.  v0:= 5I;
  #L3e9c18.  if v3 != v0 then goto L3e9c3a;
  #L3e9c1c.  if v5 == 0 then goto L3e9c28;
  #L3e9c20.  call `x`(v1, v2, v5) @signature `Lmc/h;.x:(Lmc/h$b;I)V` @kind direct;
  #L3e9c26.  return @kind void;
  #L3e9c28.  v2:= new `java.lang.Object`[v4];
  #L3e9c2c.  v3:= "TYPE_PRIORITY streamId == 0" @kind object;
  #L3e9c30.  call temp:= `d`(v3, v2) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9c36.  v2:= temp @kind object;
  #L3e9c38.  throw v2;
  #L3e9c3a.  v2:= 1I;
  #L3e9c3c.  v2:= new `java.lang.Object`[v2];
  #L3e9c40.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9c46.  v3:= temp @kind object;
  #L3e9c48.  v2[v4]:= v3 @kind object;
  #L3e9c4c.  v3:= "TYPE_PRIORITY length: %d != 5" @kind object;
  #L3e9c50.  call temp:= `d`(v3, v2) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9c56.  v2:= temp @kind object;
  #L3e9c58.  throw v2;
}
procedure `void` `G`(`mc.h` v3 @kind this, `mc.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `Lmc/h;.G:(Lmc/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e9c6c.  v0:= 0I;
  #L3e9c6e.  if v7 == 0 then goto L3e9cbc;
  #L3e9c72.  v1:= v6 ^& 8;
  #L3e9c76.  if v1 == 0 then goto L3e9c8c;
  #L3e9c7a.  v0:= v3.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9c7e.  call temp:= `readByte`(v0) @signature `Lqc/e;.readByte:()B` @kind interface;
  #L3e9c84.  v0:= temp;
  #L3e9c86.  v0:= v0 ^& 255;
  #L3e9c8a.  v0:= (`short`) v0 @kind i2s;
  #L3e9c8c.  v1:= v3.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9c90.  call temp:= `readInt`(v1) @signature `Lqc/e;.readInt:()I` @kind interface;
  #L3e9c96.  v1:= temp;
  #L3e9c98.  v2:= 2147483647I;
  #L3e9c9e.  v1:= v1 ^& v2 @kind int;
  #L3e9ca0.  v5:= v5 + -4;
  #L3e9ca4.  call temp:= `a`(v5, v6, v0) @signature `Lmc/h;.a:(IBS)I` @kind static;
  #L3e9caa.  v5:= temp;
  #L3e9cac.  call temp:= `k`(v3, v5, v0, v6, v7) @signature `Lmc/h;.k:(ISBI)Ljava/util/List;` @kind direct;
  #L3e9cb2.  v5:= temp @kind object;
  #L3e9cb4.  call `i`(v4, v7, v1, v5) @signature `Lmc/h$b;.i:(IILjava/util/List;)V` @kind interface;
  #L3e9cba.  return @kind void;
  #L3e9cbc.  v4:= new `java.lang.Object`[v0];
  #L3e9cc0.  v5:= "PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0" @kind object;
  #L3e9cc4.  call temp:= `d`(v5, v4) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9cca.  v4:= temp @kind object;
  #L3e9ccc.  throw v4;
}
procedure `void` `J`(`mc.h` v2 @kind this, `mc.h$b` v3 @kind object, `int` v4 , `byte` v5 , `int` v6 ) @signature `Lmc/h;.J:(Lmc/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e9ce0.  v5:= 1I;
  #L3e9ce2.  v0:= 0I;
  #L3e9ce4.  v1:= 4I;
  #L3e9ce6.  if v4 != v1 then goto L3e9d3e;
  #L3e9cea.  if v6 == 0 then goto L3e9d2c;
  #L3e9cee.  v4:= v2.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9cf2.  call temp:= `readInt`(v4) @signature `Lqc/e;.readInt:()I` @kind interface;
  #L3e9cf8.  v4:= temp;
  #L3e9cfa.  call temp:= `c`(v4) @signature `Lmc/b;.c:(I)Lmc/b;` @kind static;
  #L3e9d00.  v1:= temp @kind object;
  #L3e9d02.  if v1 == 0 then goto L3e9d0e;
  #L3e9d06.  call `a`(v3, v6, v1) @signature `Lmc/h$b;.a:(ILmc/b;)V` @kind interface;
  #L3e9d0c.  return @kind void;
  #L3e9d0e.  v3:= new `java.lang.Object`[v5];
  #L3e9d12.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9d18.  v4:= temp @kind object;
  #L3e9d1a.  v3[v0]:= v4 @kind object;
  #L3e9d1e.  v4:= "TYPE_RST_STREAM unexpected error code: %d" @kind object;
  #L3e9d22.  call temp:= `d`(v4, v3) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9d28.  v3:= temp @kind object;
  #L3e9d2a.  throw v3;
  #L3e9d2c.  v3:= new `java.lang.Object`[v0];
  #L3e9d30.  v4:= "TYPE_RST_STREAM streamId == 0" @kind object;
  #L3e9d34.  call temp:= `d`(v4, v3) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9d3a.  v3:= temp @kind object;
  #L3e9d3c.  throw v3;
  #L3e9d3e.  v3:= new `java.lang.Object`[v5];
  #L3e9d42.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9d48.  v4:= temp @kind object;
  #L3e9d4a.  v3[v0]:= v4 @kind object;
  #L3e9d4e.  v4:= "TYPE_RST_STREAM length: %d != 4" @kind object;
  #L3e9d52.  call temp:= `d`(v4, v3) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9d58.  v3:= temp @kind object;
  #L3e9d5a.  throw v3;
}
procedure `void` `K`(`mc.h` v6 @kind this, `mc.h$b` v7 @kind object, `int` v8 , `byte` v9 , `int` v10 ) @signature `Lmc/h;.K:(Lmc/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e9d6c.  v0:= 0I;
  #L3e9d6e.  if v10 != 0 then goto L3e9e88;
  #L3e9d72.  v10:= 1I;
  #L3e9d74.  v9:= v9 ^& v10 @kind int;
  #L3e9d76.  if v9 == 0 then goto L3e9d98;
  #L3e9d7a.  if v8 != 0 then goto L3e9d86;
  #L3e9d7e.  call `b`(v7) @signature `Lmc/h$b;.b:()V` @kind interface;
  #L3e9d84.  return @kind void;
  #L3e9d86.  v7:= new `java.lang.Object`[v0];
  #L3e9d8a.  v8:= "FRAME_SIZE_ERROR ack frame should be empty!" @kind object;
  #L3e9d8e.  call temp:= `d`(v8, v7) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9d94.  v7:= temp @kind object;
  #L3e9d96.  throw v7;
  #L3e9d98.  v9:= v8 %% 6;
  #L3e9d9c.  if v9 != 0 then goto L3e9e6a;
  #L3e9da0.  v9:= new `mc.m`;
  #L3e9da4.  call `<init>`(v9) @signature `Lmc/m;.<init>:()V` @kind direct;
  #L3e9daa.  v1:= 0I;
  #L3e9dac.  if v1 >= v8 then goto L3e9e62;
  #L3e9db0.  v2:= v6.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9db4.  call temp:= `readShort`(v2) @signature `Lqc/e;.readShort:()S` @kind interface;
  #L3e9dba.  v2:= temp;
  #L3e9dbc.  v3:= 65535I;
  #L3e9dc2.  v2:= v2 ^& v3 @kind int;
  #L3e9dc4.  v3:= v6.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9dc8.  call temp:= `readInt`(v3) @signature `Lqc/e;.readInt:()I` @kind interface;
  #L3e9dce.  v3:= temp;
  #L3e9dd0.  v4:= 2I;
  #L3e9dd2.  v5:= 4I;
  #L3e9dd4.  if v2 == v4 then goto L3e9e3a;
  #L3e9dd8.  v4:= 3I;
  #L3e9dda.  if v2 == v4 then goto L3e9e36;
  #L3e9dde.  if v2 == v5 then goto L3e9e1c;
  #L3e9de2.  v4:= 5I;
  #L3e9de4.  if v2 == v4 then goto L3e9dea;
  #L3e9de8.  goto L3e9e56;
  #L3e9dea.  v4:= 16384I;
  #L3e9dee.  if v3 < v4 then goto L3e9dfe;
  #L3e9df2.  v4:= 16777215I;
  #L3e9df8.  if v3 > v4 then goto L3e9dfe;
  #L3e9dfc.  goto L3e9e56;
  #L3e9dfe.  v7:= new `java.lang.Object`[v10];
  #L3e9e02.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9e08.  v8:= temp @kind object;
  #L3e9e0a.  v7[v0]:= v8 @kind object;
  #L3e9e0e.  v8:= "PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s" @kind object;
  #L3e9e12.  call temp:= `d`(v8, v7) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9e18.  v7:= temp @kind object;
  #L3e9e1a.  throw v7;
  #L3e9e1c.  v2:= 7I;
  #L3e9e1e.  if v3 < 0 then goto L3e9e24;
  #L3e9e22.  goto L3e9e56;
  #L3e9e24.  v7:= new `java.lang.Object`[v0];
  #L3e9e28.  v8:= "PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1" @kind object;
  #L3e9e2c.  call temp:= `d`(v8, v7) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9e32.  v7:= temp @kind object;
  #L3e9e34.  throw v7;
  #L3e9e36.  v2:= 4I;
  #L3e9e38.  goto L3e9e56;
  #L3e9e3a.  if v3 == 0 then goto L3e9e56;
  #L3e9e3e.  if v3 != v10 then goto L3e9e44;
  #L3e9e42.  goto L3e9e56;
  #L3e9e44.  v7:= new `java.lang.Object`[v0];
  #L3e9e48.  v8:= "PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1" @kind object;
  #L3e9e4c.  call temp:= `d`(v8, v7) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9e52.  v7:= temp @kind object;
  #L3e9e54.  throw v7;
  #L3e9e56.  call temp:= `i`(v9, v2, v3) @signature `Lmc/m;.i:(II)Lmc/m;` @kind virtual;
  #L3e9e5c.  v1:= v1 + 6;
  #L3e9e60.  goto L3e9dac;
  #L3e9e62.  call `e`(v7, v0, v9) @signature `Lmc/h$b;.e:(ZLmc/m;)V` @kind interface;
  #L3e9e68.  return @kind void;
  #L3e9e6a.  v7:= new `java.lang.Object`[v10];
  #L3e9e6e.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9e74.  v8:= temp @kind object;
  #L3e9e76.  v7[v0]:= v8 @kind object;
  #L3e9e7a.  v8:= "TYPE_SETTINGS length %% 6 != 0: %s" @kind object;
  #L3e9e7e.  call temp:= `d`(v8, v7) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9e84.  v7:= temp @kind object;
  #L3e9e86.  throw v7;
  #L3e9e88.  v7:= new `java.lang.Object`[v0];
  #L3e9e8c.  v8:= "TYPE_SETTINGS streamId != 0" @kind object;
  #L3e9e90.  call temp:= `d`(v8, v7) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9e96.  v7:= temp @kind object;
  #L3e9e98.  throw v7;
}
procedure `void` `M`(`mc.h` v5 @kind this, `mc.h$b` v6 @kind object, `int` v7 , `byte` v8 , `int` v9 ) @signature `Lmc/h;.M:(Lmc/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e9eac.  v8:= 0I;
  #L3e9eae.  v0:= 1I;
  #L3e9eb0.  v1:= 4I;
  #L3e9eb2.  if v7 != v1 then goto L3e9efe;
  #L3e9eb6.  v7:= v5.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9eba.  call temp:= `readInt`(v7) @signature `Lqc/e;.readInt:()I` @kind interface;
  #L3e9ec0.  v7:= temp;
  #L3e9ec2.  v1:= (`long`) v7 @kind i2l;
  #L3e9ec4.  v3:= 2147483647L;
  #L3e9eca.  v1:= v1 ^& v3 @kind long;
  #L3e9ecc.  v3:= 0L;
  #L3e9ed0.  v7:= lcmp(v1, v3);
  #L3e9ed4.  if v7 == 0 then goto L3e9ee0;
  #L3e9ed8.  call `h`(v6, v9, v1) @signature `Lmc/h$b;.h:(IJ)V` @kind interface;
  #L3e9ede.  return @kind void;
  #L3e9ee0.  v6:= new `java.lang.Object`[v0];
  #L3e9ee4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3e9eea.  v7:= temp @kind object;
  #L3e9eec.  v6[v8]:= v7 @kind object;
  #L3e9ef0.  v7:= "windowSizeIncrement was 0" @kind object;
  #L3e9ef4.  call temp:= `d`(v7, v6) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9efa.  v6:= temp @kind object;
  #L3e9efc.  throw v6;
  #L3e9efe.  v6:= new `java.lang.Object`[v0];
  #L3e9f02.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9f08.  v7:= temp @kind object;
  #L3e9f0a.  v6[v8]:= v7 @kind object;
  #L3e9f0e.  v7:= "TYPE_WINDOW_UPDATE length !=4: %s" @kind object;
  #L3e9f12.  call temp:= `d`(v7, v6) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9f18.  v6:= temp @kind object;
  #L3e9f1a.  throw v6;
}
procedure `int` `a`(`int` v1 , `byte` v2 , `short` v3 ) @signature `Lmc/h;.a:(IBS)I` @AccessFlag STATIC {
    temp;
    v0;

  #L3e976c.  v2:= v2 ^& 8;
  #L3e9770.  if v2 == 0 then goto L3e9778;
  #L3e9774.  v1:= v1 + -1;
  #L3e9778.  if v3 > v1 then goto L3e9782;
  #L3e977c.  v1:= v1 - v3 @kind int;
  #L3e977e.  v1:= (`short`) v1 @kind i2s;
  #L3e9780.  return v1;
  #L3e9782.  v2:= 2I;
  #L3e9784.  v2:= new `java.lang.Object`[v2];
  #L3e9788.  v0:= 0I;
  #L3e978a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L3e9790.  v3:= temp @kind object;
  #L3e9792.  v2[v0]:= v3 @kind object;
  #L3e9796.  v3:= 1I;
  #L3e9798.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e979e.  v1:= temp @kind object;
  #L3e97a0.  v2[v3]:= v1 @kind object;
  #L3e97a4.  v1:= "PROTOCOL_ERROR padding %s > remaining length %s" @kind object;
  #L3e97a8.  call temp:= `d`(v1, v2) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e97ae.  v1:= temp @kind object;
  #L3e97b0.  throw v1;
}
procedure `void` `h`(`mc.h` v4 @kind this, `mc.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `Lmc/h;.h:(Lmc/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e9988.  v0:= 0I;
  #L3e998a.  if v8 == 0 then goto L3e99fa;
  #L3e998e.  v1:= v7 ^& 1;
  #L3e9992.  v2:= 1I;
  #L3e9994.  if v1 == 0 then goto L3e999c;
  #L3e9998.  v1:= 1I;
  #L3e999a.  goto L3e999e;
  #L3e999c.  v1:= 0I;
  #L3e999e.  v3:= v7 ^& 32;
  #L3e99a2.  if v3 == 0 then goto L3e99a8;
  #L3e99a6.  goto L3e99aa;
  #L3e99a8.  v2:= 0I;
  #L3e99aa.  if v2 != 0 then goto L3e99e8;
  #L3e99ae.  v2:= v7 ^& 8;
  #L3e99b2.  if v2 == 0 then goto L3e99c8;
  #L3e99b6.  v0:= v4.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e99ba.  call temp:= `readByte`(v0) @signature `Lqc/e;.readByte:()B` @kind interface;
  #L3e99c0.  v0:= temp;
  #L3e99c2.  v0:= v0 ^& 255;
  #L3e99c6.  v0:= (`short`) v0 @kind i2s;
  #L3e99c8.  call temp:= `a`(v6, v7, v0) @signature `Lmc/h;.a:(IBS)I` @kind static;
  #L3e99ce.  v6:= temp;
  #L3e99d0.  v7:= v4.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e99d4.  call `j`(v5, v1, v8, v7, v6) @signature `Lmc/h$b;.j:(ZILqc/e;I)V` @kind interface;
  #L3e99da.  v5:= v4.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e99de.  v6:= (`long`) v0 @kind i2l;
  #L3e99e0.  call `d`(v5, v6) @signature `Lqc/e;.d:(J)V` @kind interface;
  #L3e99e6.  return @kind void;
  #L3e99e8.  v5:= new `java.lang.Object`[v0];
  #L3e99ec.  v6:= "PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA" @kind object;
  #L3e99f0.  call temp:= `d`(v6, v5) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e99f6.  v5:= temp @kind object;
  #L3e99f8.  throw v5;
  #L3e99fa.  v5:= new `java.lang.Object`[v0];
  #L3e99fe.  v6:= "PROTOCOL_ERROR: TYPE_DATA streamId == 0" @kind object;
  #L3e9a02.  call temp:= `d`(v6, v5) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9a08.  v5:= temp @kind object;
  #L3e9a0a.  throw v5;
}
procedure `void` `i`(`mc.h` v3 @kind this, `mc.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `Lmc/h;.i:(Lmc/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e9a1c.  v6:= 1I;
  #L3e9a1e.  v0:= 8I;
  #L3e9a22.  v1:= 0I;
  #L3e9a24.  if v5 < v0 then goto L3e9aa0;
  #L3e9a28.  if v7 != 0 then goto L3e9a8e;
  #L3e9a2c.  v7:= v3.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9a30.  call temp:= `readInt`(v7) @signature `Lqc/e;.readInt:()I` @kind interface;
  #L3e9a36.  v7:= temp;
  #L3e9a38.  v2:= v3.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9a3c.  call temp:= `readInt`(v2) @signature `Lqc/e;.readInt:()I` @kind interface;
  #L3e9a42.  v2:= temp;
  #L3e9a44.  v5:= v5 - v0 @kind int;
  #L3e9a46.  call temp:= `c`(v2) @signature `Lmc/b;.c:(I)Lmc/b;` @kind static;
  #L3e9a4c.  v0:= temp @kind object;
  #L3e9a4e.  if v0 == 0 then goto L3e9a70;
  #L3e9a52.  v6:= `@@qc.f.s` @type ^`qc.f` @kind object;
  #L3e9a56.  if v5 <= 0 then goto L3e9a68;
  #L3e9a5a.  v6:= v3.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9a5e.  v1:= (`long`) v5 @kind i2l;
  #L3e9a60.  call temp:= `n`(v6, v1) @signature `Lqc/e;.n:(J)Lqc/f;` @kind interface;
  #L3e9a66.  v6:= temp @kind object;
  #L3e9a68.  call `d`(v4, v7, v0, v6) @signature `Lmc/h$b;.d:(ILmc/b;Lqc/f;)V` @kind interface;
  #L3e9a6e.  return @kind void;
  #L3e9a70.  v4:= new `java.lang.Object`[v6];
  #L3e9a74.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9a7a.  v5:= temp @kind object;
  #L3e9a7c.  v4[v1]:= v5 @kind object;
  #L3e9a80.  v5:= "TYPE_GOAWAY unexpected error code: %d" @kind object;
  #L3e9a84.  call temp:= `d`(v5, v4) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9a8a.  v4:= temp @kind object;
  #L3e9a8c.  throw v4;
  #L3e9a8e.  v4:= new `java.lang.Object`[v1];
  #L3e9a92.  v5:= "TYPE_GOAWAY streamId != 0" @kind object;
  #L3e9a96.  call temp:= `d`(v5, v4) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9a9c.  v4:= temp @kind object;
  #L3e9a9e.  throw v4;
  #L3e9aa0.  v4:= new `java.lang.Object`[v6];
  #L3e9aa4.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9aaa.  v5:= temp @kind object;
  #L3e9aac.  v4[v1]:= v5 @kind object;
  #L3e9ab0.  v5:= "TYPE_GOAWAY length < 8: %s" @kind object;
  #L3e9ab4.  call temp:= `d`(v5, v4) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9aba.  v4:= temp @kind object;
  #L3e9abc.  throw v4;
}
procedure `java.util.List` `k`(`mc.h` v1 @kind this, `int` v2 , `short` v3 , `byte` v4 , `int` v5 ) @signature `Lmc/h;.k:(ISBI)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e9808.  v0:= v1.`mc.h.p` @type ^`mc.h$a` @kind object;
  #L3e980c.  v0.`mc.h$a.s` @type ^`int` := v2;
  #L3e9810.  v0.`mc.h$a.p` @type ^`int` := v2;
  #L3e9814.  v0.`mc.h$a.t` @type ^`short` := v3 @kind char;
  #L3e9818.  v0.`mc.h$a.q` @type ^`byte` := v4 @kind byte;
  #L3e981c.  v0.`mc.h$a.r` @type ^`int` := v5;
  #L3e9820.  v2:= v1.`mc.h.r` @type ^`mc.d$a` @kind object;
  #L3e9824.  call `k`(v2) @signature `Lmc/d$a;.k:()V` @kind virtual;
  #L3e982a.  v2:= v1.`mc.h.r` @type ^`mc.d$a` @kind object;
  #L3e982e.  call temp:= `e`(v2) @signature `Lmc/d$a;.e:()Ljava/util/List;` @kind virtual;
  #L3e9834.  v2:= temp @kind object;
  #L3e9836.  return v2 @kind object;
}
procedure `void` `o`(`mc.h` v3 @kind this, `mc.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `Lmc/h;.o:(Lmc/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e9ad0.  v0:= 0I;
  #L3e9ad2.  if v7 == 0 then goto L3e9b2a;
  #L3e9ad6.  v1:= v6 ^& 1;
  #L3e9ada.  if v1 == 0 then goto L3e9ae2;
  #L3e9ade.  v1:= 1I;
  #L3e9ae0.  goto L3e9ae4;
  #L3e9ae2.  v1:= 0I;
  #L3e9ae4.  v2:= v6 ^& 8;
  #L3e9ae8.  if v2 == 0 then goto L3e9afe;
  #L3e9aec.  v0:= v3.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9af0.  call temp:= `readByte`(v0) @signature `Lqc/e;.readByte:()B` @kind interface;
  #L3e9af6.  v0:= temp;
  #L3e9af8.  v0:= v0 ^& 255;
  #L3e9afc.  v0:= (`short`) v0 @kind i2s;
  #L3e9afe.  v2:= v6 ^& 32;
  #L3e9b02.  if v2 == 0 then goto L3e9b10;
  #L3e9b06.  call `x`(v3, v4, v7) @signature `Lmc/h;.x:(Lmc/h$b;I)V` @kind direct;
  #L3e9b0c.  v5:= v5 + -5;
  #L3e9b10.  call temp:= `a`(v5, v6, v0) @signature `Lmc/h;.a:(IBS)I` @kind static;
  #L3e9b16.  v5:= temp;
  #L3e9b18.  call temp:= `k`(v3, v5, v0, v6, v7) @signature `Lmc/h;.k:(ISBI)Ljava/util/List;` @kind direct;
  #L3e9b1e.  v5:= temp @kind object;
  #L3e9b20.  v6:= -1I;
  #L3e9b22.  call `g`(v4, v1, v7, v6, v5) @signature `Lmc/h$b;.g:(ZIILjava/util/List;)V` @kind interface;
  #L3e9b28.  return @kind void;
  #L3e9b2a.  v4:= new `java.lang.Object`[v0];
  #L3e9b2e.  v5:= "PROTOCOL_ERROR: TYPE_HEADERS streamId == 0" @kind object;
  #L3e9b32.  call temp:= `d`(v5, v4) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9b38.  v4:= temp @kind object;
  #L3e9b3a.  throw v4;
}
procedure `int` `s`(`qc.e` v2 @kind object) @signature `Lmc/h;.s:(Lqc/e;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3e97c4.  call temp:= `readByte`(v2) @signature `Lqc/e;.readByte:()B` @kind interface;
  #L3e97ca.  v0:= temp;
  #L3e97cc.  v0:= v0 ^& 255;
  #L3e97d0.  v0:= v0 ^< 16;
  #L3e97d4.  call temp:= `readByte`(v2) @signature `Lqc/e;.readByte:()B` @kind interface;
  #L3e97da.  v1:= temp;
  #L3e97dc.  v1:= v1 ^& 255;
  #L3e97e0.  v1:= v1 ^< 8;
  #L3e97e4.  v0:= v0 ^| v1 @kind int;
  #L3e97e6.  call temp:= `readByte`(v2) @signature `Lqc/e;.readByte:()B` @kind interface;
  #L3e97ec.  v2:= temp;
  #L3e97ee.  v2:= v2 ^& 255;
  #L3e97f2.  v2:= v2 ^| v0 @kind int;
  #L3e97f4.  return v2;
}
procedure `void` `v`(`mc.h` v3 @kind this, `mc.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `Lmc/h;.v:(Lmc/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e9b4c.  v0:= 0I;
  #L3e9b4e.  v1:= 1I;
  #L3e9b50.  v2:= 8I;
  #L3e9b54.  if v5 != v2 then goto L3e9b96;
  #L3e9b58.  if v7 != 0 then goto L3e9b84;
  #L3e9b5c.  v5:= v3.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9b60.  call temp:= `readInt`(v5) @signature `Lqc/e;.readInt:()I` @kind interface;
  #L3e9b66.  v5:= temp;
  #L3e9b68.  v7:= v3.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9b6c.  call temp:= `readInt`(v7) @signature `Lqc/e;.readInt:()I` @kind interface;
  #L3e9b72.  v7:= temp;
  #L3e9b74.  v6:= v6 ^& v1 @kind int;
  #L3e9b76.  if v6 == 0 then goto L3e9b7c;
  #L3e9b7a.  v0:= 1I;
  #L3e9b7c.  call `c`(v4, v0, v5, v7) @signature `Lmc/h$b;.c:(ZII)V` @kind interface;
  #L3e9b82.  return @kind void;
  #L3e9b84.  v4:= new `java.lang.Object`[v0];
  #L3e9b88.  v5:= "TYPE_PING streamId != 0" @kind object;
  #L3e9b8c.  call temp:= `d`(v5, v4) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9b92.  v4:= temp @kind object;
  #L3e9b94.  throw v4;
  #L3e9b96.  v4:= new `java.lang.Object`[v1];
  #L3e9b9a.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9ba0.  v5:= temp @kind object;
  #L3e9ba2.  v4[v0]:= v5 @kind object;
  #L3e9ba6.  v5:= "TYPE_PING length != 8: %s" @kind object;
  #L3e9baa.  call temp:= `d`(v5, v4) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9bb0.  v4:= temp @kind object;
  #L3e9bb2.  throw v4;
}
procedure `void` `x`(`mc.h` v4 @kind this, `mc.h$b` v5 @kind object, `int` v6 ) @signature `Lmc/h;.x:(Lmc/h$b;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e9bc4.  v0:= v4.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9bc8.  call temp:= `readInt`(v0) @signature `Lqc/e;.readInt:()I` @kind interface;
  #L3e9bce.  v0:= temp;
  #L3e9bd0.  v1:= -2147483648I;
  #L3e9bd4.  v1:= v1 ^& v0 @kind int;
  #L3e9bd6.  v2:= 1I;
  #L3e9bd8.  if v1 == 0 then goto L3e9be0;
  #L3e9bdc.  v1:= 1I;
  #L3e9bde.  goto L3e9be2;
  #L3e9be0.  v1:= 0I;
  #L3e9be2.  v3:= 2147483647I;
  #L3e9be8.  v0:= v0 ^& v3 @kind int;
  #L3e9bea.  v3:= v4.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9bee.  call temp:= `readByte`(v3) @signature `Lqc/e;.readByte:()B` @kind interface;
  #L3e9bf4.  v3:= temp;
  #L3e9bf6.  v3:= v3 ^& 255;
  #L3e9bfa.  v3:= v3 + v2 @kind int;
  #L3e9bfc.  call `f`(v5, v6, v0, v3, v1) @signature `Lmc/h$b;.f:(IIIZ)V` @kind interface;
  #L3e9c02.  return @kind void;
}
procedure `boolean` `c`(`mc.h` v6 @kind this, `boolean` v7 , `mc.h$b` v8 @kind object) @signature `Lmc/h;.c:(ZLmc/h$b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e95f4.  v0:= 0I;
  #L3e95f6.  v1:= v6.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e95fa.  v2:= 9L;
  #L3e95fe.  call `U`(v1, v2) @signature `Lqc/e;.U:(J)V` @kind interface;
  #L3e9604.  v1:= v6.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9608.  call temp:= `s`(v1) @signature `Lmc/h;.s:(Lqc/e;)I` @kind static;
  #L3e960e.  v1:= temp;
  #L3e9610.  v2:= 1I;
  #L3e9612.  if v1 < 0 then goto L3e96fe;
  #L3e9616.  v3:= 16384I;
  #L3e961a.  if v1 > v3 then goto L3e96fe;
  #L3e961e.  v3:= v6.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9622.  call temp:= `readByte`(v3) @signature `Lqc/e;.readByte:()B` @kind interface;
  #L3e9628.  v3:= temp;
  #L3e962a.  v3:= v3 ^& 255;
  #L3e962e.  v3:= (`byte`) v3 @kind i2b;
  #L3e9630.  if v7 == 0 then goto L3e965a;
  #L3e9634.  v7:= 4I;
  #L3e9636.  if v3 != v7 then goto L3e963c;
  #L3e963a.  goto L3e965a;
  #L3e963c.  v7:= new `java.lang.Object`[v2];
  #L3e9640.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L3e9646.  v8:= temp @kind object;
  #L3e9648.  v7[v0]:= v8 @kind object;
  #L3e964c.  v8:= "Expected a SETTINGS frame but was %s" @kind object;
  #L3e9650.  call temp:= `d`(v8, v7) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9656.  v7:= temp @kind object;
  #L3e9658.  throw v7;
  #L3e965a.  v7:= v6.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e965e.  call temp:= `readByte`(v7) @signature `Lqc/e;.readByte:()B` @kind interface;
  #L3e9664.  v7:= temp;
  #L3e9666.  v7:= v7 ^& 255;
  #L3e966a.  v7:= (`byte`) v7 @kind i2b;
  #L3e966c.  v0:= v6.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9670.  call temp:= `readInt`(v0) @signature `Lqc/e;.readInt:()I` @kind interface;
  #L3e9676.  v0:= temp;
  #L3e9678.  v4:= 2147483647I;
  #L3e967e.  v0:= v0 ^& v4 @kind int;
  #L3e9680.  v4:= `@@mc.h.s` @type ^`java.util.logging.Logger` @kind object;
  #L3e9684.  v5:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L3e9688.  call temp:= `isLoggable`(v4, v5) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L3e968e.  v5:= temp;
  #L3e9690.  if v5 == 0 then goto L3e96a2;
  #L3e9694.  call temp:= `b`(v2, v0, v1, v3, v7) @signature `Lmc/e;.b:(ZIIBB)Ljava/lang/String;` @kind static;
  #L3e969a.  v5:= temp @kind object;
  #L3e969c.  call `fine`(v4, v5) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L3e96a2.  goto L3e9720;
  #L3e96a8.  v7:= v6.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e96ac.  v0:= (`long`) v1 @kind i2l;
  #L3e96ae.  call `d`(v7, v0) @signature `Lqc/e;.d:(J)V` @kind interface;
  #L3e96b4.  goto L3e96fc;
  #L3e96b6.  call `M`(v6, v8, v1, v7, v0) @signature `Lmc/h;.M:(Lmc/h$b;IBI)V` @kind direct;
  #L3e96bc.  goto L3e96fc;
  #L3e96be.  call `i`(v6, v8, v1, v7, v0) @signature `Lmc/h;.i:(Lmc/h$b;IBI)V` @kind direct;
  #L3e96c4.  goto L3e96fc;
  #L3e96c6.  call `v`(v6, v8, v1, v7, v0) @signature `Lmc/h;.v:(Lmc/h$b;IBI)V` @kind direct;
  #L3e96cc.  goto L3e96fc;
  #L3e96ce.  call `G`(v6, v8, v1, v7, v0) @signature `Lmc/h;.G:(Lmc/h$b;IBI)V` @kind direct;
  #L3e96d4.  goto L3e96fc;
  #L3e96d6.  call `K`(v6, v8, v1, v7, v0) @signature `Lmc/h;.K:(Lmc/h$b;IBI)V` @kind direct;
  #L3e96dc.  goto L3e96fc;
  #L3e96de.  call `J`(v6, v8, v1, v7, v0) @signature `Lmc/h;.J:(Lmc/h$b;IBI)V` @kind direct;
  #L3e96e4.  goto L3e96fc;
  #L3e96e6.  call `E`(v6, v8, v1, v7, v0) @signature `Lmc/h;.E:(Lmc/h$b;IBI)V` @kind direct;
  #L3e96ec.  goto L3e96fc;
  #L3e96ee.  call `o`(v6, v8, v1, v7, v0) @signature `Lmc/h;.o:(Lmc/h$b;IBI)V` @kind direct;
  #L3e96f4.  goto L3e96fc;
  #L3e96f6.  call `h`(v6, v8, v1, v7, v0) @signature `Lmc/h;.h:(Lmc/h$b;IBI)V` @kind direct;
  #L3e96fc.  return v2;
  #L3e96fe.  v7:= new `java.lang.Object`[v2];
  #L3e9702.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9708.  v8:= temp @kind object;
  #L3e970a.  v7[v0]:= v8 @kind object;
  #L3e970e.  v8:= "FRAME_SIZE_ERROR: %s" @kind object;
  #L3e9712.  call temp:= `d`(v8, v7) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9718.  v7:= temp @kind object;
  #L3e971a.  throw v7;
  #L3e971c.  return v0;
  #L3e971e.  
  #L3e9720.  switch v3
                  | 0 => goto L3e96f6
                  | 1 => goto L3e96ee
                  | 2 => goto L3e96e6
                  | 3 => goto L3e96de
                  | 4 => goto L3e96d6
                  | 5 => goto L3e96ce
                  | 6 => goto L3e96c6
                  | 7 => goto L3e96be
                  | 8 => goto L3e96b6
                  | else => goto L3e96a8;
  catch `java.io.IOException` @[L3e95f6..L3e9604] goto L3e971c;
}
procedure `void` `close`(`mc.h` v1 @kind this) @signature `Lmc/h;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e98b4.  v0:= v1.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e98b8.  call `close`(v0) @signature `Lqc/s;.close:()V` @kind interface;
  #L3e98be.  return @kind void;
}
procedure `void` `e`(`mc.h` v6 @kind this, `mc.h$b` v7 @kind object) @signature `Lmc/h;.e:(Lmc/h$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e98d0.  v0:= v6.`mc.h.q` @type ^`boolean` @kind boolean;
  #L3e98d4.  v1:= 0I;
  #L3e98d6.  v2:= 1I;
  #L3e98d8.  if v0 == 0 then goto L3e98fc;
  #L3e98dc.  call temp:= `c`(v6, v2, v7) @signature `Lmc/h;.c:(ZLmc/h$b;)Z` @kind virtual;
  #L3e98e2.  v7:= temp;
  #L3e98e4.  if v7 == 0 then goto L3e98ea;
  #L3e98e8.  goto L3e9958;
  #L3e98ea.  v7:= new `java.lang.Object`[v1];
  #L3e98ee.  v0:= "Required SETTINGS preface not received" @kind object;
  #L3e98f2.  call temp:= `d`(v0, v7) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e98f8.  v7:= temp @kind object;
  #L3e98fa.  throw v7;
  #L3e98fc.  v7:= v6.`mc.h.o` @type ^`qc.e` @kind object;
  #L3e9900.  v0:= `@@mc.e.a` @type ^`qc.f` @kind object;
  #L3e9904.  call temp:= `D`(v0) @signature `Lqc/f;.D:()I` @kind virtual;
  #L3e990a.  v3:= temp;
  #L3e990c.  v3:= (`long`) v3 @kind i2l;
  #L3e990e.  call temp:= `n`(v7, v3) @signature `Lqc/e;.n:(J)Lqc/f;` @kind interface;
  #L3e9914.  v7:= temp @kind object;
  #L3e9916.  v3:= `@@mc.h.s` @type ^`java.util.logging.Logger` @kind object;
  #L3e991a.  v4:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L3e991e.  call temp:= `isLoggable`(v3, v4) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L3e9924.  v4:= temp;
  #L3e9926.  if v4 == 0 then goto L3e994c;
  #L3e992a.  v4:= new `java.lang.Object`[v2];
  #L3e992e.  call temp:= `r`(v7) @signature `Lqc/f;.r:()Ljava/lang/String;` @kind virtual;
  #L3e9934.  v5:= temp @kind object;
  #L3e9936.  v4[v1]:= v5 @kind object;
  #L3e993a.  v5:= "<< CONNECTION %s" @kind object;
  #L3e993e.  call temp:= `p`(v5, v4) @signature `Lhc/c;.p:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3e9944.  v4:= temp @kind object;
  #L3e9946.  call `fine`(v3, v4) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L3e994c.  call temp:= `equals`(v0, v7) @signature `Lqc/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e9952.  v0:= temp;
  #L3e9954.  if v0 == 0 then goto L3e995a;
  #L3e9958.  return @kind void;
  #L3e995a.  v0:= new `java.lang.Object`[v2];
  #L3e995e.  call temp:= `P`(v7) @signature `Lqc/f;.P:()Ljava/lang/String;` @kind virtual;
  #L3e9964.  v7:= temp @kind object;
  #L3e9966.  v0[v1]:= v7 @kind object;
  #L3e996a.  v7:= "Expected a connection header but was %s" @kind object;
  #L3e996e.  call temp:= `d`(v7, v0) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3e9974.  v7:= temp @kind object;
  #L3e9976.  throw v7;
}
