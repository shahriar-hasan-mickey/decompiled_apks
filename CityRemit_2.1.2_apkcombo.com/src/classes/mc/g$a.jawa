record `mc.g$a` @kind class @AccessFlag  extends `hc.b` @kind class {
  `int` `mc.g$a.p` @AccessFlag FINAL_SYNTHETIC;
  `mc.b` `mc.g$a.q` @AccessFlag FINAL_SYNTHETIC;
  `mc.g` `mc.g$a.r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`mc.g$a` v0 @kind this, `mc.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `mc.b` v5 @kind object) @signature `Lmc/g$a;.<init>:(Lmc/g;Ljava/lang/String;[Ljava/lang/Object;ILmc/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e786c.  v0.`mc.g$a.r` @type ^`mc.g` := v1 @kind object;
  #L3e7870.  v0.`mc.g$a.p` @type ^`int` := v4;
  #L3e7874.  v0.`mc.g$a.q` @type ^`mc.b` := v5 @kind object;
  #L3e7878.  call `<init>`(v0, v2, v3) @signature `Lhc/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e787e.  return @kind void;
}
procedure `void` `k`(`mc.g$a` v3 @kind this) @signature `Lmc/g$a;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e7890.  v0:= v3.`mc.g$a.r` @type ^`mc.g` @kind object;
  #L3e7894.  v1:= v3.`mc.g$a.p` @type ^`int`;
  #L3e7898.  v2:= v3.`mc.g$a.q` @type ^`mc.b` @kind object;
  #L3e789c.  call `o0`(v0, v1, v2) @signature `Lmc/g;.o0:(ILmc/b;)V` @kind virtual;
  #L3e78a2.  goto L3e78ae;
  #L3e78a4.  v0:= v3.`mc.g$a.r` @type ^`mc.g` @kind object;
  #L3e78a8.  call `a`(v0) @signature `Lmc/g;.a:(Lmc/g;)V` @kind static;
  #L3e78ae.  return @kind void;
  catch `java.io.IOException` @[L3e7890..L3e78a2] goto L3e78a4;
}
