record `mc.g$c` @kind class @AccessFlag  extends `hc.b` @kind class {
  `mc.g` `mc.g$c.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`mc.g$c` v0 @kind this, `mc.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lmc/g$c;.<init>:(Lmc/g;Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e7938.  v0.`mc.g$c.p` @type ^`mc.g` := v1 @kind object;
  #L3e793c.  call `<init>`(v0, v2, v3) @signature `Lhc/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e7942.  return @kind void;
}
procedure `void` `k`(`mc.g$c` v3 @kind this) @signature `Lmc/g$c;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e7954.  v0:= v3.`mc.g$c.p` @type ^`mc.g` @kind object;
  #L3e7958.  v1:= 0I;
  #L3e795a.  v2:= 2I;
  #L3e795c.  call `n0`(v0, v1, v2, v1) @signature `Lmc/g;.n0:(ZII)V` @kind virtual;
  #L3e7962.  return @kind void;
}
