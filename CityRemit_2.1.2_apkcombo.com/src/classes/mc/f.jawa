record `mc.f` @kind class @AccessFlag PUBLIC_FINAL extends `kc.c` @kind interface {
  `gc.s$a` `mc.f.a` @AccessFlag PRIVATE_FINAL;
  `jc.g` `mc.f.b` @AccessFlag FINAL;
  `mc.g` `mc.f.c` @AccessFlag PRIVATE_FINAL;
  `mc.i` `mc.f.d` @AccessFlag PRIVATE;
  `gc.v` `mc.f.e` @AccessFlag PRIVATE_FINAL;
}
global `java.util.List` `@@mc.f.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@mc.f.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lmc/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3e76ac.  v0:= "connection" @kind object;
  #L3e76b0.  v1:= "host" @kind object;
  #L3e76b4.  v2:= "keep-alive" @kind object;
  #L3e76b8.  v3:= "proxy-connection" @kind object;
  #L3e76bc.  v4:= "te" @kind object;
  #L3e76c0.  v5:= "transfer-encoding" @kind object;
  #L3e76c4.  v6:= "encoding" @kind object;
  #L3e76c8.  v7:= "upgrade" @kind object;
  #L3e76cc.  v8:= ":method" @kind object;
  #L3e76d0.  v9:= ":path" @kind object;
  #L3e76d4.  v10:= ":scheme" @kind object;
  #L3e76d8.  v11:= ":authority" @kind object;
  #L3e76dc.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11];
  #L3e76e2.  v0:= temp @kind object;
  #L3e76e4.  call temp:= `s`(v0) @signature `Lhc/c;.s:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3e76ea.  v0:= temp @kind object;
  #L3e76ec.  `@@mc.f.f` @type ^`java.util.List` := v0 @kind object;
  #L3e76f0.  v1:= "connection" @kind object;
  #L3e76f4.  v2:= "host" @kind object;
  #L3e76f8.  v3:= "keep-alive" @kind object;
  #L3e76fc.  v4:= "proxy-connection" @kind object;
  #L3e7700.  v5:= "te" @kind object;
  #L3e7704.  v6:= "transfer-encoding" @kind object;
  #L3e7708.  v7:= "encoding" @kind object;
  #L3e770c.  v8:= "upgrade" @kind object;
  #L3e7710.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8];
  #L3e7716.  v0:= temp @kind object;
  #L3e7718.  call temp:= `s`(v0) @signature `Lhc/c;.s:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3e771e.  v0:= temp @kind object;
  #L3e7720.  `@@mc.f.g` @type ^`java.util.List` := v0 @kind object;
  #L3e7724.  return @kind void;
}
procedure `void` `<init>`(`mc.f` v0 @kind this, `gc.u` v1 @kind object, `gc.s$a` v2 @kind object, `jc.g` v3 @kind object, `mc.g` v4 @kind object) @signature `Lmc/f;.<init>:(Lgc/u;Lgc/s$a;Ljc/g;Lmc/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e7738.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e773e.  v0.`mc.f.a` @type ^`gc.s$a` := v2 @kind object;
  #L3e7742.  v0.`mc.f.b` @type ^`jc.g` := v3 @kind object;
  #L3e7746.  v0.`mc.f.c` @type ^`mc.g` := v4 @kind object;
  #L3e774a.  call temp:= `C`(v1) @signature `Lgc/u;.C:()Ljava/util/List;` @kind virtual;
  #L3e7750.  v1:= temp @kind object;
  #L3e7752.  v2:= `@@gc.v.t` @type ^`gc.v` @kind object;
  #L3e7756.  call temp:= `contains`(v1, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e775c.  v1:= temp;
  #L3e775e.  if v1 == 0 then goto L3e7764;
  #L3e7762.  goto L3e7768;
  #L3e7764.  v2:= `@@gc.v.s` @type ^`gc.v` @kind object;
  #L3e7768.  v0.`mc.f.e` @type ^`gc.v` := v2 @kind object;
  #L3e776c.  return @kind void;
}
procedure `java.util.List` `g`(`gc.x` v6 @kind object) @signature `Lmc/f;.g:(Lgc/x;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e7574.  call temp:= `d`(v6) @signature `Lgc/x;.d:()Lgc/q;` @kind virtual;
  #L3e757a.  v0:= temp @kind object;
  #L3e757c.  v1:= new `java.util.ArrayList`;
  #L3e7580.  call temp:= `g`(v0) @signature `Lgc/q;.g:()I` @kind virtual;
  #L3e7586.  v2:= temp;
  #L3e7588.  v2:= v2 + 4;
  #L3e758c.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3e7592.  v2:= new `mc.c`;
  #L3e7596.  v3:= `@@mc.c.f` @type ^`qc.f` @kind object;
  #L3e759a.  call temp:= `f`(v6) @signature `Lgc/x;.f:()Ljava/lang/String;` @kind virtual;
  #L3e75a0.  v4:= temp @kind object;
  #L3e75a2.  call `<init>`(v2, v3, v4) @signature `Lmc/c;.<init>:(Lqc/f;Ljava/lang/String;)V` @kind direct;
  #L3e75a8.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e75ae.  v2:= new `mc.c`;
  #L3e75b2.  v3:= `@@mc.c.g` @type ^`qc.f` @kind object;
  #L3e75b6.  call temp:= `h`(v6) @signature `Lgc/x;.h:()Lgc/r;` @kind virtual;
  #L3e75bc.  v4:= temp @kind object;
  #L3e75be.  call temp:= `c`(v4) @signature `Lkc/i;.c:(Lgc/r;)Ljava/lang/String;` @kind static;
  #L3e75c4.  v4:= temp @kind object;
  #L3e75c6.  call `<init>`(v2, v3, v4) @signature `Lmc/c;.<init>:(Lqc/f;Ljava/lang/String;)V` @kind direct;
  #L3e75cc.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e75d2.  v2:= "Host" @kind object;
  #L3e75d6.  call temp:= `c`(v6, v2) @signature `Lgc/x;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e75dc.  v2:= temp @kind object;
  #L3e75de.  if v2 == 0 then goto L3e75f6;
  #L3e75e2.  v3:= new `mc.c`;
  #L3e75e6.  v4:= `@@mc.c.i` @type ^`qc.f` @kind object;
  #L3e75ea.  call `<init>`(v3, v4, v2) @signature `Lmc/c;.<init>:(Lqc/f;Ljava/lang/String;)V` @kind direct;
  #L3e75f0.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e75f6.  v2:= new `mc.c`;
  #L3e75fa.  v3:= `@@mc.c.h` @type ^`qc.f` @kind object;
  #L3e75fe.  call temp:= `h`(v6) @signature `Lgc/x;.h:()Lgc/r;` @kind virtual;
  #L3e7604.  v6:= temp @kind object;
  #L3e7606.  call temp:= `B`(v6) @signature `Lgc/r;.B:()Ljava/lang/String;` @kind virtual;
  #L3e760c.  v6:= temp @kind object;
  #L3e760e.  call `<init>`(v2, v3, v6) @signature `Lmc/c;.<init>:(Lqc/f;Ljava/lang/String;)V` @kind direct;
  #L3e7614.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e761a.  v6:= 0I;
  #L3e761c.  call temp:= `g`(v0) @signature `Lgc/q;.g:()I` @kind virtual;
  #L3e7622.  v2:= temp;
  #L3e7624.  if v6 >= v2 then goto L3e767a;
  #L3e7628.  call temp:= `e`(v0, v6) @signature `Lgc/q;.e:(I)Ljava/lang/String;` @kind virtual;
  #L3e762e.  v3:= temp @kind object;
  #L3e7630.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L3e7634.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3e763a.  v3:= temp @kind object;
  #L3e763c.  call temp:= `k`(v3) @signature `Lqc/f;.k:(Ljava/lang/String;)Lqc/f;` @kind static;
  #L3e7642.  v3:= temp @kind object;
  #L3e7644.  v4:= `@@mc.f.f` @type ^`java.util.List` @kind object;
  #L3e7648.  call temp:= `P`(v3) @signature `Lqc/f;.P:()Ljava/lang/String;` @kind virtual;
  #L3e764e.  v5:= temp @kind object;
  #L3e7650.  call temp:= `contains`(v4, v5) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7656.  v4:= temp;
  #L3e7658.  if v4 != 0 then goto L3e7674;
  #L3e765c.  v4:= new `mc.c`;
  #L3e7660.  call temp:= `h`(v0, v6) @signature `Lgc/q;.h:(I)Ljava/lang/String;` @kind virtual;
  #L3e7666.  v5:= temp @kind object;
  #L3e7668.  call `<init>`(v4, v3, v5) @signature `Lmc/c;.<init>:(Lqc/f;Ljava/lang/String;)V` @kind direct;
  #L3e766e.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7674.  v6:= v6 + 1;
  #L3e7678.  goto L3e7624;
  #L3e767a.  return v1 @kind object;
}
procedure `gc.z$a` `h`(`gc.q` v7 @kind object, `gc.v` v8 @kind object) @signature `Lmc/f;.h:(Lgc/q;Lgc/v;)Lgc/z$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e73e4.  v0:= new `gc.q$a`;
  #L3e73e8.  call `<init>`(v0) @signature `Lgc/q$a;.<init>:()V` @kind direct;
  #L3e73ee.  call temp:= `g`(v7) @signature `Lgc/q;.g:()I` @kind virtual;
  #L3e73f4.  v1:= temp;
  #L3e73f6.  v2:= 0I;
  #L3e73f8.  v3:= 0I;
  #L3e73fa.  if v3 >= v1 then goto L3e746a;
  #L3e73fe.  call temp:= `e`(v7, v3) @signature `Lgc/q;.e:(I)Ljava/lang/String;` @kind virtual;
  #L3e7404.  v4:= temp @kind object;
  #L3e7406.  call temp:= `h`(v7, v3) @signature `Lgc/q;.h:(I)Ljava/lang/String;` @kind virtual;
  #L3e740c.  v5:= temp @kind object;
  #L3e740e.  v6:= ":status" @kind object;
  #L3e7412.  call temp:= `equals`(v4, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e7418.  v6:= temp;
  #L3e741a.  if v6 == 0 then goto L3e744a;
  #L3e741e.  v2:= new `java.lang.StringBuilder`;
  #L3e7422.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e7428.  v4:= "HTTP/1.1 " @kind object;
  #L3e742c.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7432.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7438.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e743e.  v2:= temp @kind object;
  #L3e7440.  call temp:= `a`(v2) @signature `Lkc/k;.a:(Ljava/lang/String;)Lkc/k;` @kind static;
  #L3e7446.  v2:= temp @kind object;
  #L3e7448.  goto L3e7464;
  #L3e744a.  v6:= `@@mc.f.g` @type ^`java.util.List` @kind object;
  #L3e744e.  call temp:= `contains`(v6, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7454.  v6:= temp;
  #L3e7456.  if v6 != 0 then goto L3e7464;
  #L3e745a.  v6:= `@@hc.a.a` @type ^`hc.a` @kind object;
  #L3e745e.  call `b`(v6, v0, v4, v5) @signature `Lhc/a;.b:(Lgc/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L3e7464.  v3:= v3 + 1;
  #L3e7468.  goto L3e73fa;
  #L3e746a.  if v2 == 0 then goto L3e74aa;
  #L3e746e.  v7:= new `gc.z$a`;
  #L3e7472.  call `<init>`(v7) @signature `Lgc/z$a;.<init>:()V` @kind direct;
  #L3e7478.  call temp:= `n`(v7, v8) @signature `Lgc/z$a;.n:(Lgc/v;)Lgc/z$a;` @kind virtual;
  #L3e747e.  v7:= temp @kind object;
  #L3e7480.  v8:= v2.`kc.k.b` @type ^`int`;
  #L3e7484.  call temp:= `g`(v7, v8) @signature `Lgc/z$a;.g:(I)Lgc/z$a;` @kind virtual;
  #L3e748a.  v7:= temp @kind object;
  #L3e748c.  v8:= v2.`kc.k.c` @type ^`java.lang.String` @kind object;
  #L3e7490.  call temp:= `k`(v7, v8) @signature `Lgc/z$a;.k:(Ljava/lang/String;)Lgc/z$a;` @kind virtual;
  #L3e7496.  v7:= temp @kind object;
  #L3e7498.  call temp:= `d`(v0) @signature `Lgc/q$a;.d:()Lgc/q;` @kind virtual;
  #L3e749e.  v8:= temp @kind object;
  #L3e74a0.  call temp:= `j`(v7, v8) @signature `Lgc/z$a;.j:(Lgc/q;)Lgc/z$a;` @kind virtual;
  #L3e74a6.  v7:= temp @kind object;
  #L3e74a8.  return v7 @kind object;
  #L3e74aa.  v7:= new `java.net.ProtocolException`;
  #L3e74ae.  v8:= "Expected ':status' header not present" @kind object;
  #L3e74b2.  call `<init>`(v7, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e74b8.  throw v7;
}
procedure `void` `a`(`mc.f` v1 @kind this) @signature `Lmc/f;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e77a4.  v0:= v1.`mc.f.d` @type ^`mc.i` @kind object;
  #L3e77a8.  call temp:= `j`(v0) @signature `Lmc/i;.j:()Lqc/r;` @kind virtual;
  #L3e77ae.  v0:= temp @kind object;
  #L3e77b0.  call `close`(v0) @signature `Lqc/r;.close:()V` @kind interface;
  #L3e77b6.  return @kind void;
}
procedure `void` `b`(`mc.f` v3 @kind this, `gc.x` v4 @kind object) @signature `Lmc/f;.b:(Lgc/x;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e77e4.  v0:= v3.`mc.f.d` @type ^`mc.i` @kind object;
  #L3e77e8.  if v0 == 0 then goto L3e77ee;
  #L3e77ec.  return @kind void;
  #L3e77ee.  call temp:= `a`(v4) @signature `Lgc/x;.a:()Lgc/y;` @kind virtual;
  #L3e77f4.  v0:= temp @kind object;
  #L3e77f6.  if v0 == 0 then goto L3e77fe;
  #L3e77fa.  v0:= 1I;
  #L3e77fc.  goto L3e7800;
  #L3e77fe.  v0:= 0I;
  #L3e7800.  call temp:= `g`(v4) @signature `Lmc/f;.g:(Lgc/x;)Ljava/util/List;` @kind static;
  #L3e7806.  v4:= temp @kind object;
  #L3e7808.  v1:= v3.`mc.f.c` @type ^`mc.g` @kind object;
  #L3e780c.  call temp:= `S`(v1, v4, v0) @signature `Lmc/g;.S:(Ljava/util/List;Z)Lmc/i;` @kind virtual;
  #L3e7812.  v4:= temp @kind object;
  #L3e7814.  v3.`mc.f.d` @type ^`mc.i` := v4 @kind object;
  #L3e7818.  call temp:= `n`(v4) @signature `Lmc/i;.n:()Lqc/t;` @kind virtual;
  #L3e781e.  v4:= temp @kind object;
  #L3e7820.  v0:= v3.`mc.f.a` @type ^`gc.s$a` @kind object;
  #L3e7824.  call temp:= `c`(v0) @signature `Lgc/s$a;.c:()I` @kind interface;
  #L3e782a.  v0:= temp;
  #L3e782c.  v0:= (`long`) v0 @kind i2l;
  #L3e782e.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e7832.  call temp:= `g`(v4, v0, v2) @signature `Lqc/t;.g:(JLjava/util/concurrent/TimeUnit;)Lqc/t;` @kind virtual;
  #L3e7838.  v4:= v3.`mc.f.d` @type ^`mc.i` @kind object;
  #L3e783c.  call temp:= `u`(v4) @signature `Lmc/i;.u:()Lqc/t;` @kind virtual;
  #L3e7842.  v4:= temp @kind object;
  #L3e7844.  v0:= v3.`mc.f.a` @type ^`gc.s$a` @kind object;
  #L3e7848.  call temp:= `d`(v0) @signature `Lgc/s$a;.d:()I` @kind interface;
  #L3e784e.  v0:= temp;
  #L3e7850.  v0:= (`long`) v0 @kind i2l;
  #L3e7852.  call temp:= `g`(v4, v0, v2) @signature `Lqc/t;.g:(JLjava/util/concurrent/TimeUnit;)Lqc/t;` @kind virtual;
  #L3e7858.  return @kind void;
}
procedure `void` `c`(`mc.f` v1 @kind this) @signature `Lmc/f;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e77c8.  v0:= v1.`mc.f.c` @type ^`mc.g` @kind object;
  #L3e77cc.  call `flush`(v0) @signature `Lmc/g;.flush:()V` @kind virtual;
  #L3e77d2.  return @kind void;
}
procedure `void` `cancel`(`mc.f` v2 @kind this) @signature `Lmc/f;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7780.  v0:= v2.`mc.f.d` @type ^`mc.i` @kind object;
  #L3e7784.  if v0 == 0 then goto L3e7792;
  #L3e7788.  v1:= `@@mc.b.u` @type ^`mc.b` @kind object;
  #L3e778c.  call `h`(v0, v1) @signature `Lmc/i;.h:(Lmc/b;)V` @kind virtual;
  #L3e7792.  return @kind void;
}
procedure `gc.a0` `d`(`mc.f` v4 @kind this, `gc.z` v5 @kind object) @signature `Lmc/f;.d:(Lgc/z;)Lgc/a0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e7514.  v0:= v4.`mc.f.b` @type ^`jc.g` @kind object;
  #L3e7518.  v1:= v0.`jc.g.f` @type ^`gc.o` @kind object;
  #L3e751c.  v0:= v0.`jc.g.e` @type ^`gc.d` @kind object;
  #L3e7520.  call `q`(v1, v0) @signature `Lgc/o;.q:(Lgc/d;)V` @kind virtual;
  #L3e7526.  v0:= "Content-Type" @kind object;
  #L3e752a.  call temp:= `i`(v5, v0) @signature `Lgc/z;.i:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e7530.  v0:= temp @kind object;
  #L3e7532.  call temp:= `b`(v5) @signature `Lkc/e;.b:(Lgc/z;)J` @kind static;
  #L3e7538.  v1:= temp @kind wide;
  #L3e753a.  v5:= new `mc.f$a`;
  #L3e753e.  v3:= v4.`mc.f.d` @type ^`mc.i` @kind object;
  #L3e7542.  call temp:= `k`(v3) @signature `Lmc/i;.k:()Lqc/s;` @kind virtual;
  #L3e7548.  v3:= temp @kind object;
  #L3e754a.  call `<init>`(v5, v4, v3) @signature `Lmc/f$a;.<init>:(Lmc/f;Lqc/s;)V` @kind direct;
  #L3e7550.  v3:= new `kc.h`;
  #L3e7554.  call temp:= `b`(v5) @signature `Lqc/l;.b:(Lqc/s;)Lqc/e;` @kind static;
  #L3e755a.  v5:= temp @kind object;
  #L3e755c.  call `<init>`(v3, v0, v1, v5) @signature `Lkc/h;.<init>:(Ljava/lang/String;JLqc/e;)V` @kind direct;
  #L3e7562.  return v3 @kind object;
}
procedure `qc.r` `e`(`mc.f` v0 @kind this, `gc.x` v1 @kind object, `long` v2 ) @signature `Lmc/f;.e:(Lgc/x;J)Lqc/r;` @AccessFlag PUBLIC {
    temp;

  #L3e768c.  v1:= v0.`mc.f.d` @type ^`mc.i` @kind object;
  #L3e7690.  call temp:= `j`(v1) @signature `Lmc/i;.j:()Lqc/r;` @kind virtual;
  #L3e7696.  v1:= temp @kind object;
  #L3e7698.  return v1 @kind object;
}
procedure `gc.z$a` `f`(`mc.f` v2 @kind this, `boolean` v3 ) @signature `Lmc/f;.f:(Z)Lgc/z$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e74cc.  v0:= v2.`mc.f.d` @type ^`mc.i` @kind object;
  #L3e74d0.  call temp:= `s`(v0) @signature `Lmc/i;.s:()Lgc/q;` @kind virtual;
  #L3e74d6.  v0:= temp @kind object;
  #L3e74d8.  v1:= v2.`mc.f.e` @type ^`gc.v` @kind object;
  #L3e74dc.  call temp:= `h`(v0, v1) @signature `Lmc/f;.h:(Lgc/q;Lgc/v;)Lgc/z$a;` @kind static;
  #L3e74e2.  v0:= temp @kind object;
  #L3e74e4.  if v3 == 0 then goto L3e7500;
  #L3e74e8.  v3:= `@@hc.a.a` @type ^`hc.a` @kind object;
  #L3e74ec.  call temp:= `d`(v3, v0) @signature `Lhc/a;.d:(Lgc/z$a;)I` @kind virtual;
  #L3e74f2.  v3:= temp;
  #L3e74f4.  v1:= 100I;
  #L3e74f8.  if v3 != v1 then goto L3e7500;
  #L3e74fc.  v3:= 0I;
  #L3e74fe.  return v3 @kind object;
  #L3e7500.  return v0 @kind object;
}
