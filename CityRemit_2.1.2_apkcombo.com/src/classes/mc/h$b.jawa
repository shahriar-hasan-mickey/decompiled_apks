record `mc.h$b` @kind interface @AccessFlag ABSTRACT_INTERFACE {
}
procedure `void` `a`(`int` v0 , `mc.b` v1 @kind object) @signature `Lmc/h$b;.a:(ILmc/b;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`() @signature `Lmc/h$b;.b:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `c`(`boolean` v0 , `int` v1 , `int` v2 ) @signature `Lmc/h$b;.c:(ZII)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `d`(`int` v0 , `mc.b` v1 @kind object, `qc.f` v2 @kind object) @signature `Lmc/h$b;.d:(ILmc/b;Lqc/f;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `e`(`boolean` v0 , `mc.m` v1 @kind object) @signature `Lmc/h$b;.e:(ZLmc/m;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `f`(`int` v0 , `int` v1 , `int` v2 , `boolean` v3 ) @signature `Lmc/h$b;.f:(IIIZ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `g`(`boolean` v0 , `int` v1 , `int` v2 , `java.util.List` v3 @kind object) @signature `Lmc/h$b;.g:(ZIILjava/util/List;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `h`(`int` v0 , `long` v1 ) @signature `Lmc/h$b;.h:(IJ)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `i`(`int` v0 , `int` v1 , `java.util.List` v2 @kind object) @signature `Lmc/h$b;.i:(IILjava/util/List;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `j`(`boolean` v0 , `int` v1 , `qc.e` v2 @kind object, `int` v3 ) @signature `Lmc/h$b;.j:(ZILqc/e;I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
