record `mc.k$a` @kind class @AccessFlag FINAL {
  `mc.k$a`[] `mc.k$a.a` @AccessFlag FINAL;
  `int` `mc.k$a.b` @AccessFlag FINAL;
  `int` `mc.k$a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`mc.k$a` v1 @kind this) @signature `Lmc/k$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3ebb50.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ebb56.  v0:= 256I;
  #L3ebb5a.  v0:= new `mc.k$a`[v0];
  #L3ebb5e.  v1.`mc.k$a.a` @type ^`mc.k$a`[] := v0 @kind object;
  #L3ebb62.  v0:= 0I;
  #L3ebb64.  v1.`mc.k$a.b` @type ^`int` := v0;
  #L3ebb68.  v1.`mc.k$a.c` @type ^`int` := v0;
  #L3ebb6c.  return @kind void;
}
procedure `void` `<init>`(`mc.k$a` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lmc/k$a;.<init>:(II)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3ebb80.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ebb86.  v0:= 0I;
  #L3ebb88.  v1.`mc.k$a.a` @type ^`mc.k$a`[] := v0 @kind object;
  #L3ebb8c.  v1.`mc.k$a.b` @type ^`int` := v2;
  #L3ebb90.  v2:= v3 ^& 7;
  #L3ebb94.  if v2 != 0 then goto L3ebb9c;
  #L3ebb98.  v2:= 8I;
  #L3ebb9c.  v1.`mc.k$a.c` @type ^`int` := v2;
  #L3ebba0.  return @kind void;
}
