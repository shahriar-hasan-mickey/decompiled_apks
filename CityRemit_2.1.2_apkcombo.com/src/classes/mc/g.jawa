record `mc.g` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `long` `mc.g.A` @AccessFlag PRIVATE;
  `long` `mc.g.B` @AccessFlag PRIVATE;
  `long` `mc.g.C` @AccessFlag PRIVATE;
  `long` `mc.g.D` @AccessFlag PRIVATE;
  `long` `mc.g.E` @AccessFlag ;
  `long` `mc.g.F` @AccessFlag ;
  `mc.m` `mc.g.G` @AccessFlag ;
  `mc.m` `mc.g.H` @AccessFlag FINAL;
  `java.net.Socket` `mc.g.I` @AccessFlag FINAL;
  `mc.j` `mc.g.J` @AccessFlag FINAL;
  `mc.g$l` `mc.g.K` @AccessFlag FINAL;
  `java.util.Set` `mc.g.L` @AccessFlag FINAL;
  `boolean` `mc.g.o` @AccessFlag FINAL;
  `mc.g$j` `mc.g.p` @AccessFlag FINAL;
  `java.util.Map` `mc.g.q` @AccessFlag FINAL;
  `java.lang.String` `mc.g.r` @AccessFlag FINAL;
  `int` `mc.g.s` @AccessFlag ;
  `int` `mc.g.t` @AccessFlag ;
  `boolean` `mc.g.u` @AccessFlag PRIVATE;
  `java.util.concurrent.ScheduledExecutorService` `mc.g.v` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ExecutorService` `mc.g.w` @AccessFlag PRIVATE_FINAL;
  `mc.l` `mc.g.x` @AccessFlag FINAL;
  `long` `mc.g.y` @AccessFlag PRIVATE;
  `long` `mc.g.z` @AccessFlag PRIVATE;
}
global `java.util.concurrent.ExecutorService` `@@mc.g.M` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lmc/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3e8a44.  v0:= constclass @type ^`mc.g` @kind object;
  #L3e8a48.  v0:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L3e8a4c.  v2:= 0I;
  #L3e8a4e.  v3:= 2147483647I;
  #L3e8a54.  v4:= 60L;
  #L3e8a58.  v6:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e8a5c.  v7:= new `java.util.concurrent.SynchronousQueue`;
  #L3e8a60.  call `<init>`(v7) @signature `Ljava/util/concurrent/SynchronousQueue;.<init>:()V` @kind direct;
  #L3e8a66.  v1:= 1I;
  #L3e8a68.  v8:= "OkHttp Http2Connection" @kind object;
  #L3e8a6c.  call temp:= `E`(v8, v1) @signature `Lhc/c;.E:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L3e8a72.  v8:= temp @kind object;
  #L3e8a74.  v1:= v0 @kind object;
  #L3e8a76.  call `<init>`(v1, v2, v3, v4, v6, v7, v8) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L3e8a7c.  `@@mc.g.M` @type ^`java.util.concurrent.ExecutorService` := v0 @kind object;
  #L3e8a80.  return @kind void;
}
procedure `void` `<init>`(`mc.g` v24 @kind this, `mc.g$h` v25 @kind object) @signature `Lmc/g;.<init>:(Lmc/g$h;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L3e8a94.  v0:= v24 @kind object;
  #L3e8a98.  v1:= v25 @kind object;
  #L3e8a9c.  call `<init>`(v24) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e8aa2.  v2:= new `java.util.LinkedHashMap`;
  #L3e8aa6.  call `<init>`(v2) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L3e8aac.  v0.`mc.g.q` @type ^`java.util.Map` := v2 @kind object;
  #L3e8ab0.  v2:= 0L;
  #L3e8ab4.  v0.`mc.g.y` @type ^`long` := v2 @kind wide;
  #L3e8ab8.  v0.`mc.g.z` @type ^`long` := v2 @kind wide;
  #L3e8abc.  v0.`mc.g.A` @type ^`long` := v2 @kind wide;
  #L3e8ac0.  v0.`mc.g.B` @type ^`long` := v2 @kind wide;
  #L3e8ac4.  v0.`mc.g.C` @type ^`long` := v2 @kind wide;
  #L3e8ac8.  v0.`mc.g.D` @type ^`long` := v2 @kind wide;
  #L3e8acc.  v0.`mc.g.E` @type ^`long` := v2 @kind wide;
  #L3e8ad0.  v2:= new `mc.m`;
  #L3e8ad4.  call `<init>`(v2) @signature `Lmc/m;.<init>:()V` @kind direct;
  #L3e8ada.  v0.`mc.g.G` @type ^`mc.m` := v2 @kind object;
  #L3e8ade.  v2:= new `mc.m`;
  #L3e8ae2.  call `<init>`(v2) @signature `Lmc/m;.<init>:()V` @kind direct;
  #L3e8ae8.  v0.`mc.g.H` @type ^`mc.m` := v2 @kind object;
  #L3e8aec.  v3:= new `java.util.LinkedHashSet`;
  #L3e8af0.  call `<init>`(v3) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L3e8af6.  v0.`mc.g.L` @type ^`java.util.Set` := v3 @kind object;
  #L3e8afa.  v3:= v1.`mc.g$h.f` @type ^`mc.l` @kind object;
  #L3e8afe.  v0.`mc.g.x` @type ^`mc.l` := v3 @kind object;
  #L3e8b02.  v3:= v1.`mc.g$h.g` @type ^`boolean` @kind boolean;
  #L3e8b06.  v0.`mc.g.o` @type ^`boolean` := v3 @kind boolean;
  #L3e8b0a.  v4:= v1.`mc.g$h.e` @type ^`mc.g$j` @kind object;
  #L3e8b0e.  v0.`mc.g.p` @type ^`mc.g$j` := v4 @kind object;
  #L3e8b12.  v4:= 2I;
  #L3e8b14.  v5:= 1I;
  #L3e8b16.  if v3 == 0 then goto L3e8b1e;
  #L3e8b1a.  v6:= 1I;
  #L3e8b1c.  goto L3e8b20;
  #L3e8b1e.  v6:= 2I;
  #L3e8b20.  v0.`mc.g.t` @type ^`int` := v6;
  #L3e8b24.  if v3 == 0 then goto L3e8b2e;
  #L3e8b28.  v6:= v6 + v4 @kind int;
  #L3e8b2a.  v0.`mc.g.t` @type ^`int` := v6;
  #L3e8b2e.  v4:= 7I;
  #L3e8b30.  if v3 == 0 then goto L3e8b42;
  #L3e8b34.  v6:= v0.`mc.g.G` @type ^`mc.m` @kind object;
  #L3e8b38.  v7:= 16777216I;
  #L3e8b3c.  call temp:= `i`(v6, v4, v7) @signature `Lmc/m;.i:(II)Lmc/m;` @kind virtual;
  #L3e8b42.  v6:= v1.`mc.g$h.b` @type ^`java.lang.String` @kind object;
  #L3e8b46.  v0.`mc.g.r` @type ^`java.lang.String` := v6 @kind object;
  #L3e8b4a.  v7:= new `java.util.concurrent.ScheduledThreadPoolExecutor`;
  #L3e8b4e.  v8:= new `java.lang.Object`[v5];
  #L3e8b52.  v14:= 0I;
  #L3e8b54.  v8[v14]:= v6 @kind object;
  #L3e8b58.  v9:= "OkHttp %s Writer" @kind object;
  #L3e8b5c.  call temp:= `p`(v9, v8) @signature `Lhc/c;.p:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3e8b62.  v8:= temp @kind object;
  #L3e8b64.  call temp:= `E`(v8, v14) @signature `Lhc/c;.E:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L3e8b6a.  v8:= temp @kind object;
  #L3e8b6c.  call `<init>`(v7, v5, v8) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<init>:(ILjava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L3e8b72.  v0.`mc.g.v` @type ^`java.util.concurrent.ScheduledExecutorService` := v7 @kind object;
  #L3e8b76.  v8:= v1.`mc.g$h.h` @type ^`int`;
  #L3e8b7a.  if v8 == 0 then goto L3e8ba0;
  #L3e8b7e.  v8:= new `mc.g$i`;
  #L3e8b82.  call `<init>`(v8, v0) @signature `Lmc/g$i;.<init>:(Lmc/g;)V` @kind direct;
  #L3e8b88.  v9:= v1.`mc.g$h.h` @type ^`int`;
  #L3e8b8c.  v10:= (`long`) v9 @kind i2l;
  #L3e8b8e.  v12:= (`long`) v9 @kind i2l;
  #L3e8b90.  v15:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e8b94.  v9:= v10 @kind wide;
  #L3e8b96.  v11:= v12 @kind wide;
  #L3e8b98.  v13:= v15 @kind object;
  #L3e8b9a.  call temp:= `scheduleAtFixedRate`(v7, v8, v9, v11, v13) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L3e8ba0.  v7:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L3e8ba4.  v17:= 0I;
  #L3e8ba8.  v18:= 1I;
  #L3e8bac.  v19:= 60L;
  #L3e8bb0.  v21:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e8bb4.  v22:= new `java.util.concurrent.LinkedBlockingQueue`;
  #L3e8bb8.  call `<init>`(v22) @signature `Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V` @kind direct;
  #L3e8bbe.  v8:= new `java.lang.Object`[v5];
  #L3e8bc2.  v8[v14]:= v6 @kind object;
  #L3e8bc6.  v6:= "OkHttp %s Push Observer" @kind object;
  #L3e8bca.  call temp:= `p`(v6, v8) @signature `Lhc/c;.p:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3e8bd0.  v6:= temp @kind object;
  #L3e8bd2.  call temp:= `E`(v6, v5) @signature `Lhc/c;.E:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L3e8bd8.  v23:= temp @kind object;
  #L3e8bda.  v16:= v7 @kind object;
  #L3e8bde.  call `<init>`(v16, v17, v18, v19, v21, v22, v23) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L3e8be4.  v0.`mc.g.w` @type ^`java.util.concurrent.ExecutorService` := v7 @kind object;
  #L3e8be8.  v5:= 65535I;
  #L3e8bee.  call temp:= `i`(v2, v4, v5) @signature `Lmc/m;.i:(II)Lmc/m;` @kind virtual;
  #L3e8bf4.  v4:= 5I;
  #L3e8bf6.  v5:= 16384I;
  #L3e8bfa.  call temp:= `i`(v2, v4, v5) @signature `Lmc/m;.i:(II)Lmc/m;` @kind virtual;
  #L3e8c00.  call temp:= `d`(v2) @signature `Lmc/m;.d:()I` @kind virtual;
  #L3e8c06.  v2:= temp;
  #L3e8c08.  v4:= (`long`) v2 @kind i2l;
  #L3e8c0a.  v0.`mc.g.F` @type ^`long` := v4 @kind wide;
  #L3e8c0e.  v2:= v1.`mc.g$h.a` @type ^`java.net.Socket` @kind object;
  #L3e8c12.  v0.`mc.g.I` @type ^`java.net.Socket` := v2 @kind object;
  #L3e8c16.  v2:= new `mc.j`;
  #L3e8c1a.  v4:= v1.`mc.g$h.d` @type ^`qc.d` @kind object;
  #L3e8c1e.  call `<init>`(v2, v4, v3) @signature `Lmc/j;.<init>:(Lqc/d;Z)V` @kind direct;
  #L3e8c24.  v0.`mc.g.J` @type ^`mc.j` := v2 @kind object;
  #L3e8c28.  v2:= new `mc.g$l`;
  #L3e8c2c.  v4:= new `mc.h`;
  #L3e8c30.  v1:= v1.`mc.g$h.c` @type ^`qc.e` @kind object;
  #L3e8c34.  call `<init>`(v4, v1, v3) @signature `Lmc/h;.<init>:(Lqc/e;Z)V` @kind direct;
  #L3e8c3a.  call `<init>`(v2, v0, v4) @signature `Lmc/g$l;.<init>:(Lmc/g;Lmc/h;)V` @kind direct;
  #L3e8c40.  v0.`mc.g.K` @type ^`mc.g$l` := v2 @kind object;
  #L3e8c44.  return @kind void;
}
procedure `long` `E`(`mc.g` v4 @kind object) @signature `Lmc/g;.E:(Lmc/g;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e8844.  v0:= v4.`mc.g.C` @type ^`long` @kind wide;
  #L3e8848.  v2:= 1L;
  #L3e884c.  v2:= v2 + v0 @kind long;
  #L3e884e.  v4.`mc.g.C` @type ^`long` := v2 @kind wide;
  #L3e8852.  return v0 @kind wide;
}
procedure `void` `J`(`mc.g` v1 @kind this) @signature `Lmc/g;.J:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e8da4.  v0:= `@@mc.b.q` @type ^`mc.b` @kind object;
  #L3e8da8.  call `G`(v1, v0, v0) @signature `Lmc/g;.G:(Lmc/b;Lmc/b;)V` @kind virtual;
  #L3e8dae.  return @kind void;
  catch `java.io.IOException` @[L3e8da4..L3e8dae] goto L3e8dae;
}
procedure `mc.i` `O`(`mc.g` v10 @kind this, `int` v11 , `java.util.List` v12 @kind object, `boolean` v13 ) @signature `Lmc/g;.O:(ILjava/util/List;Z)Lmc/i;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3e88a4.  v6:= v13 ^~ 1;
  #L3e88a8.  v4:= 0I;
  #L3e88aa.  v7:= v10.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e88ae.  @monitorenter v7
  #L3e88b0.  @monitorenter v10
  #L3e88b2.  v0:= v10.`mc.g.t` @type ^`int`;
  #L3e88b6.  v1:= 1073741823I;
  #L3e88bc.  if v0 <= v1 then goto L3e88ca;
  #L3e88c0.  v0:= `@@mc.b.t` @type ^`mc.b` @kind object;
  #L3e88c4.  call `i0`(v10, v0) @signature `Lmc/g;.i0:(Lmc/b;)V` @kind virtual;
  #L3e88ca.  v0:= v10.`mc.g.u` @type ^`boolean` @kind boolean;
  #L3e88ce.  if v0 != 0 then goto L3e897e;
  #L3e88d2.  v8:= v10.`mc.g.t` @type ^`int`;
  #L3e88d6.  v0:= v8 + 2;
  #L3e88da.  v10.`mc.g.t` @type ^`int` := v0;
  #L3e88de.  v9:= new `mc.i`;
  #L3e88e2.  v5:= 0I;
  #L3e88e4.  v0:= v9 @kind object;
  #L3e88e6.  v1:= v8;
  #L3e88e8.  v2:= v10 @kind object;
  #L3e88ea.  v3:= v6;
  #L3e88ec.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lmc/i;.<init>:(ILmc/g;ZZLgc/q;)V` @kind direct;
  #L3e88f2.  if v13 == 0 then goto L3e8918;
  #L3e88f6.  v0:= v10.`mc.g.F` @type ^`long` @kind wide;
  #L3e88fa.  v2:= 0L;
  #L3e88fe.  v13:= lcmp(v0, v2);
  #L3e8902.  if v13 == 0 then goto L3e8918;
  #L3e8906.  v0:= v9.`mc.i.b` @type ^`long` @kind wide;
  #L3e890a.  v13:= lcmp(v0, v2);
  #L3e890e.  if v13 != 0 then goto L3e8914;
  #L3e8912.  goto L3e8918;
  #L3e8914.  v13:= 0I;
  #L3e8916.  goto L3e891a;
  #L3e8918.  v13:= 1I;
  #L3e891a.  call temp:= `m`(v9) @signature `Lmc/i;.m:()Z` @kind virtual;
  #L3e8920.  v0:= temp;
  #L3e8922.  if v0 == 0 then goto L3e8938;
  #L3e8926.  v0:= v10.`mc.g.q` @type ^`java.util.Map` @kind object;
  #L3e892a.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e8930.  v1:= temp @kind object;
  #L3e8932.  call temp:= `put`(v0, v1, v9) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e8938.  @monitorexit v10
  #L3e893a.  if v11 != 0 then goto L3e894a;
  #L3e893e.  v0:= v10.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e8942.  call `J`(v0, v6, v8, v11, v12) @signature `Lmc/j;.J:(ZIILjava/util/List;)V` @kind virtual;
  #L3e8948.  goto L3e895c;
  #L3e894a.  v0:= v10.`mc.g.o` @type ^`boolean` @kind boolean;
  #L3e894e.  if v0 != 0 then goto L3e896e;
  #L3e8952.  v0:= v10.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e8956.  call `x`(v0, v11, v8, v12) @signature `Lmc/j;.x:(IILjava/util/List;)V` @kind virtual;
  #L3e895c.  @monitorexit v7
  #L3e895e.  if v13 == 0 then goto L3e896c;
  #L3e8962.  v11:= v10.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e8966.  call `flush`(v11) @signature `Lmc/j;.flush:()V` @kind virtual;
  #L3e896c.  return v9 @kind object;
  #L3e896e.  v11:= new `java.lang.IllegalArgumentException`;
  #L3e8972.  v12:= "client streams shouldn't have associated stream IDs" @kind object;
  #L3e8976.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e897c.  throw v11;
  #L3e897e.  v11:= new `mc.a`;
  #L3e8982.  call `<init>`(v11) @signature `Lmc/a;.<init>:()V` @kind direct;
  #L3e8988.  throw v11;
  #L3e898a.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e898c.  @monitorexit v10
  #L3e898e.  throw v11;
  #L3e8990.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8992.  @monitorexit v7
  #L3e8994.  throw v11;
  catch `java.lang.Throwable` @[L3e88b0..L3e88b2] goto L3e8990;
  catch `java.lang.Throwable` @[L3e88b2..L3e893a] goto L3e898a;
  catch `java.lang.Throwable` @[L3e893e..L3e895e] goto L3e8990;
  catch `java.lang.Throwable` @[L3e896e..L3e897e] goto L3e8990;
  catch `java.lang.Throwable` @[L3e897e..L3e898e] goto L3e898a;
  catch `java.lang.Throwable` @[L3e898e..L3e8994] goto L3e8990;
}
procedure `void` `a`(`mc.g` v0 @kind object) @signature `Lmc/g;.a:(Lmc/g;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3e8c58.  call `J`(v0) @signature `Lmc/g;.J:()V` @kind direct;
  #L3e8c5e.  return @kind void;
}
procedure `void` `b0`(`mc.g` v1 @kind this, `hc.b` v2 @kind object) @signature `Lmc/g;.b0:(Lhc/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e8ea0.  @monitorenter v1
  #L3e8ea2.  v0:= v1.`mc.g.u` @type ^`boolean` @kind boolean;
  #L3e8ea6.  if v0 != 0 then goto L3e8eb4;
  #L3e8eaa.  v0:= v1.`mc.g.w` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e8eae.  call `execute`(v0, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3e8eb4.  @monitorexit v1
  #L3e8eb6.  return @kind void;
  #L3e8eb8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8eba.  @monitorexit v1
  #L3e8ebc.  throw v2;
  catch `java.lang.Throwable` @[L3e8ea2..L3e8eb4] goto L3e8eb8;
}
procedure `long` `c`(`mc.g` v2 @kind object) @signature `Lmc/g;.c:(Lmc/g;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L3e87b4.  v0:= v2.`mc.g.z` @type ^`long` @kind wide;
  #L3e87b8.  return v0 @kind wide;
}
procedure `long` `e`(`mc.g` v4 @kind object) @signature `Lmc/g;.e:(Lmc/g;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e87cc.  v0:= v4.`mc.g.z` @type ^`long` @kind wide;
  #L3e87d0.  v2:= 1L;
  #L3e87d4.  v2:= v2 + v0 @kind long;
  #L3e87d6.  v4.`mc.g.z` @type ^`long` := v2 @kind wide;
  #L3e87da.  return v0 @kind wide;
}
procedure `long` `h`(`mc.g` v2 @kind object) @signature `Lmc/g;.h:(Lmc/g;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L3e87ec.  v0:= v2.`mc.g.y` @type ^`long` @kind wide;
  #L3e87f0.  return v0 @kind wide;
}
procedure `long` `i`(`mc.g` v4 @kind object) @signature `Lmc/g;.i:(Lmc/g;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e8804.  v0:= v4.`mc.g.y` @type ^`long` @kind wide;
  #L3e8808.  v2:= 1L;
  #L3e880c.  v2:= v2 + v0 @kind long;
  #L3e880e.  v4.`mc.g.y` @type ^`long` := v2 @kind wide;
  #L3e8812.  return v0 @kind wide;
}
procedure `boolean` `k`(`mc.g` v0 @kind object) @signature `Lmc/g;.k:(Lmc/g;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3e8694.  v0:= v0.`mc.g.u` @type ^`boolean` @kind boolean;
  #L3e8698.  return v0;
}
procedure `boolean` `o`(`mc.g` v0 @kind object, `boolean` v1 ) @signature `Lmc/g;.o:(Lmc/g;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3e86ac.  v0.`mc.g.u` @type ^`boolean` := v1 @kind boolean;
  #L3e86b0.  return v1;
}
procedure `java.util.concurrent.ExecutorService` `s`() @signature `Lmc/g;.s:()Ljava/util/concurrent/ExecutorService;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L3e8784.  v0:= `@@mc.g.M` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e8788.  return v0 @kind object;
}
procedure `java.util.concurrent.ScheduledExecutorService` `v`(`mc.g` v0 @kind object) @signature `Lmc/g;.v:(Lmc/g;)Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3e879c.  v0:= v0.`mc.g.v` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L3e87a0.  return v0 @kind object;
}
procedure `long` `x`(`mc.g` v4 @kind object) @signature `Lmc/g;.x:(Lmc/g;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e8824.  v0:= v4.`mc.g.B` @type ^`long` @kind wide;
  #L3e8828.  v2:= 1L;
  #L3e882c.  v2:= v2 + v0 @kind long;
  #L3e882e.  v4.`mc.g.B` @type ^`long` := v2 @kind wide;
  #L3e8832.  return v0 @kind wide;
}
procedure `void` `G`(`mc.g` v4 @kind this, `mc.b` v5 @kind object, `mc.b` v6 @kind object) @signature `Lmc/g;.G:(Lmc/b;Lmc/b;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e8c90.  v0:= 0I;
  #L3e8c92.  call `i0`(v4, v5) @signature `Lmc/g;.i0:(Lmc/b;)V` @kind virtual;
  #L3e8c98.  v5:= v0 @kind object;
  #L3e8c9a.  goto L3e8c9e;
  #L3e8c9c.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L3e8c9e.  @monitorenter v4
  #L3e8ca0.  v1:= v4.`mc.g.q` @type ^`java.util.Map` @kind object;
  #L3e8ca4.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3e8caa.  v1:= temp;
  #L3e8cac.  if v1 != 0 then goto L3e8ce2;
  #L3e8cb0.  v0:= v4.`mc.g.q` @type ^`java.util.Map` @kind object;
  #L3e8cb4.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L3e8cba.  v0:= temp @kind object;
  #L3e8cbc.  v1:= v4.`mc.g.q` @type ^`java.util.Map` @kind object;
  #L3e8cc0.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3e8cc6.  v1:= temp;
  #L3e8cc8.  v1:= new `mc.i`[v1];
  #L3e8ccc.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3e8cd2.  v0:= temp @kind object;
  #L3e8cd4.  v0:= (`mc.i`[]) v0 @kind object;
  #L3e8cd8.  v1:= v4.`mc.g.q` @type ^`java.util.Map` @kind object;
  #L3e8cdc.  call `clear`(v1) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3e8ce2.  @monitorexit v4
  #L3e8ce4.  if v0 == 0 then goto L3e8d0a;
  #L3e8ce8.  v1:= length @variable v0;
  #L3e8cea.  v2:= 0I;
  #L3e8cec.  if v2 >= v1 then goto L3e8d0a;
  #L3e8cf0.  v3:= v0[v2] @kind object;
  #L3e8cf4.  call `f`(v3, v6) @signature `Lmc/i;.f:(Lmc/b;)V` @kind virtual;
  #L3e8cfa.  goto L3e8d04;
  #L3e8cfc.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L3e8cfe.  if v5 == 0 then goto L3e8d04;
  #L3e8d02.  v5:= v3 @kind object;
  #L3e8d04.  v2:= v2 + 1;
  #L3e8d08.  goto L3e8cec;
  #L3e8d0a.  v6:= v4.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e8d0e.  call `close`(v6) @signature `Lmc/j;.close:()V` @kind virtual;
  #L3e8d14.  goto L3e8d1e;
  #L3e8d16.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L3e8d18.  if v5 != 0 then goto L3e8d1e;
  #L3e8d1c.  v5:= v6 @kind object;
  #L3e8d1e.  v6:= v4.`mc.g.I` @type ^`java.net.Socket` @kind object;
  #L3e8d22.  call `close`(v6) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L3e8d28.  goto L3e8d2c;
  #L3e8d2a.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L3e8d2c.  v6:= v4.`mc.g.v` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L3e8d30.  call `shutdown`(v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L3e8d36.  v6:= v4.`mc.g.w` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3e8d3a.  call `shutdown`(v6) @signature `Ljava/util/concurrent/ExecutorService;.shutdown:()V` @kind interface;
  #L3e8d40.  if v5 != 0 then goto L3e8d46;
  #L3e8d44.  return @kind void;
  #L3e8d46.  throw v5;
  #L3e8d48.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8d4a.  @monitorexit v4
  #L3e8d4c.  throw v5;
  catch `java.io.IOException` @[L3e8c92..L3e8c98] goto L3e8c9c;
  catch `java.lang.Throwable` @[L3e8ca0..L3e8ce4] goto L3e8d48;
  catch `java.io.IOException` @[L3e8cf4..L3e8cfa] goto L3e8cfc;
  catch `java.io.IOException` @[L3e8d0a..L3e8d14] goto L3e8d16;
  catch `java.io.IOException` @[L3e8d1e..L3e8d28] goto L3e8d2a;
  catch `java.lang.Throwable` @[L3e8d4a..L3e8d4c] goto L3e8d48;
}
procedure `mc.i` `K`(`mc.g` v1 @kind this, `int` v2 ) @signature `Lmc/g;.K:(I)Lmc/i;` @AccessFlag  {
    temp;
    v0;

  #L3e8864.  @monitorenter v1
  #L3e8866.  v0:= v1.`mc.g.q` @type ^`java.util.Map` @kind object;
  #L3e886a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e8870.  v2:= temp @kind object;
  #L3e8872.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e8878.  v2:= temp @kind object;
  #L3e887a.  v2:= (`mc.i`) v2 @kind object;
  #L3e887e.  @monitorexit v1
  #L3e8880.  return v2 @kind object;
  #L3e8882.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8884.  @monitorexit v1
  #L3e8886.  throw v2;
  catch `java.lang.Throwable` @[L3e8866..L3e887e] goto L3e8882;
}
procedure `boolean` `M`(`mc.g` v6 @kind this, `long` v7 ) @signature `Lmc/g;.M:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e86c4.  @monitorenter v6
  #L3e86c6.  v0:= v6.`mc.g.u` @type ^`boolean` @kind boolean;
  #L3e86ca.  v1:= 0I;
  #L3e86cc.  if v0 == 0 then goto L3e86d4;
  #L3e86d0.  @monitorexit v6
  #L3e86d2.  return v1;
  #L3e86d4.  v2:= v6.`mc.g.B` @type ^`long` @kind wide;
  #L3e86d8.  v4:= v6.`mc.g.A` @type ^`long` @kind wide;
  #L3e86dc.  v0:= lcmp(v2, v4);
  #L3e86e0.  if v0 >= 0 then goto L3e86f4;
  #L3e86e4.  v2:= v6.`mc.g.D` @type ^`long` @kind wide;
  #L3e86e8.  v0:= lcmp(v7, v2);
  #L3e86ec.  if v0 < 0 then goto L3e86f4;
  #L3e86f0.  @monitorexit v6
  #L3e86f2.  return v1;
  #L3e86f4.  v7:= 1I;
  #L3e86f6.  @monitorexit v6
  #L3e86f8.  return v7;
  #L3e86fa.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e86fc.  @monitorexit v6
  #L3e86fe.  throw v7;
  catch `java.lang.Throwable` @[L3e86c6..L3e86ca] goto L3e86fa;
  catch `java.lang.Throwable` @[L3e86d4..L3e86e8] goto L3e86fa;
}
procedure `int` `N`(`mc.g` v2 @kind this) @signature `Lmc/g;.N:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8748.  @monitorenter v2
  #L3e874a.  v0:= v2.`mc.g.H` @type ^`mc.m` @kind object;
  #L3e874e.  v1:= 2147483647I;
  #L3e8754.  call temp:= `e`(v0, v1) @signature `Lmc/m;.e:(I)I` @kind virtual;
  #L3e875a.  v0:= temp;
  #L3e875c.  @monitorexit v2
  #L3e875e.  return v0;
  #L3e8760.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8762.  @monitorexit v2
  #L3e8764.  throw v0;
  catch `java.lang.Throwable` @[L3e874a..L3e875c] goto L3e8760;
}
procedure `mc.i` `S`(`mc.g` v1 @kind this, `java.util.List` v2 @kind object, `boolean` v3 ) @signature `Lmc/g;.S:(Ljava/util/List;Z)Lmc/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e89e0.  v0:= 0I;
  #L3e89e2.  call temp:= `O`(v1, v0, v2, v3) @signature `Lmc/g;.O:(ILjava/util/List;Z)Lmc/i;` @kind direct;
  #L3e89e8.  v2:= temp @kind object;
  #L3e89ea.  return v2 @kind object;
}
procedure `void` `a0`(`mc.g` v8 @kind this, `int` v9 , `qc.e` v10 @kind object, `int` v11 , `boolean` v12 ) @signature `Lmc/g;.a0:(ILqc/e;IZ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e8dec.  v5:= new `qc.c`;
  #L3e8df0.  call `<init>`(v5) @signature `Lqc/c;.<init>:()V` @kind direct;
  #L3e8df6.  v0:= (`long`) v11 @kind i2l;
  #L3e8df8.  call `U`(v10, v0) @signature `Lqc/e;.U:(J)V` @kind interface;
  #L3e8dfe.  call temp:= `T`(v10, v5, v0) @signature `Lqc/s;.T:(Lqc/c;J)J` @kind interface;
  #L3e8e04.  call temp:= `h0`(v5) @signature `Lqc/c;.h0:()J` @kind virtual;
  #L3e8e0a.  v2:= temp @kind wide;
  #L3e8e0c.  v10:= lcmp(v2, v0);
  #L3e8e10.  if v10 != 0 then goto L3e8e52;
  #L3e8e14.  v10:= new `mc.g$f`;
  #L3e8e18.  v0:= 2I;
  #L3e8e1a.  v3:= new `java.lang.Object`[v0];
  #L3e8e1e.  v0:= 0I;
  #L3e8e20.  v1:= v8.`mc.g.r` @type ^`java.lang.String` @kind object;
  #L3e8e24.  v3[v0]:= v1 @kind object;
  #L3e8e28.  v0:= 1I;
  #L3e8e2a.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e8e30.  v1:= temp @kind object;
  #L3e8e32.  v3[v0]:= v1 @kind object;
  #L3e8e36.  v2:= "OkHttp %s Push Data[%s]" @kind object;
  #L3e8e3a.  v0:= v10 @kind object;
  #L3e8e3c.  v1:= v8 @kind object;
  #L3e8e3e.  v4:= v9;
  #L3e8e40.  v6:= v11;
  #L3e8e42.  v7:= v12;
  #L3e8e44.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lmc/g$f;.<init>:(Lmc/g;Ljava/lang/String;[Ljava/lang/Object;ILqc/c;IZ)V` @kind direct;
  #L3e8e4a.  call `b0`(v8, v10) @signature `Lmc/g;.b0:(Lhc/b;)V` @kind direct;
  #L3e8e50.  return @kind void;
  #L3e8e52.  v9:= new `java.io.IOException`;
  #L3e8e56.  v10:= new `java.lang.StringBuilder`;
  #L3e8e5a.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e8e60.  call temp:= `h0`(v5) @signature `Lqc/c;.h0:()J` @kind virtual;
  #L3e8e66.  v0:= temp @kind wide;
  #L3e8e68.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e8e6e.  v12:= " != " @kind object;
  #L3e8e72.  call temp:= `append`(v10, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e8e78.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e8e7e.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e8e84.  v10:= temp @kind object;
  #L3e8e86.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e8e8c.  throw v9;
}
procedure `void` `c0`(`mc.g` v8 @kind this, `int` v9 , `java.util.List` v10 @kind object, `boolean` v11 ) @signature `Lmc/g;.c0:(ILjava/util/List;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e8edc.  v7:= new `mc.g$e`;
  #L3e8ee0.  v2:= "OkHttp %s Push Headers[%s]" @kind object;
  #L3e8ee4.  v0:= 2I;
  #L3e8ee6.  v3:= new `java.lang.Object`[v0];
  #L3e8eea.  v0:= 0I;
  #L3e8eec.  v1:= v8.`mc.g.r` @type ^`java.lang.String` @kind object;
  #L3e8ef0.  v3[v0]:= v1 @kind object;
  #L3e8ef4.  v0:= 1I;
  #L3e8ef6.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e8efc.  v1:= temp @kind object;
  #L3e8efe.  v3[v0]:= v1 @kind object;
  #L3e8f02.  v0:= v7 @kind object;
  #L3e8f04.  v1:= v8 @kind object;
  #L3e8f06.  v4:= v9;
  #L3e8f08.  v5:= v10 @kind object;
  #L3e8f0a.  v6:= v11;
  #L3e8f0c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lmc/g$e;.<init>:(Lmc/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V` @kind direct;
  #L3e8f12.  call `b0`(v8, v7) @signature `Lmc/g;.b0:(Lhc/b;)V` @kind direct;
  #L3e8f18.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L3e8edc..L3e8f18] goto L3e8f18;
}
procedure `void` `close`(`mc.g` v2 @kind this) @signature `Lmc/g;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8c70.  v0:= `@@mc.b.p` @type ^`mc.b` @kind object;
  #L3e8c74.  v1:= `@@mc.b.u` @type ^`mc.b` @kind object;
  #L3e8c78.  call `G`(v2, v0, v1) @signature `Lmc/g;.G:(Lmc/b;Lmc/b;)V` @kind virtual;
  #L3e8c7e.  return @kind void;
}
procedure `void` `d0`(`mc.g` v8 @kind this, `int` v9 , `java.util.List` v10 @kind object) @signature `Lmc/g;.d0:(ILjava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e8f3c.  @monitorenter v8
  #L3e8f3e.  v0:= v8.`mc.g.L` @type ^`java.util.Set` @kind object;
  #L3e8f42.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e8f48.  v1:= temp @kind object;
  #L3e8f4a.  call temp:= `contains`(v0, v1) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e8f50.  v0:= temp;
  #L3e8f52.  if v0 == 0 then goto L3e8f64;
  #L3e8f56.  v10:= `@@mc.b.q` @type ^`mc.b` @kind object;
  #L3e8f5a.  call `p0`(v8, v9, v10) @signature `Lmc/g;.p0:(ILmc/b;)V` @kind virtual;
  #L3e8f60.  @monitorexit v8
  #L3e8f62.  return @kind void;
  #L3e8f64.  v0:= v8.`mc.g.L` @type ^`java.util.Set` @kind object;
  #L3e8f68.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e8f6e.  v1:= temp @kind object;
  #L3e8f70.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e8f76.  @monitorexit v8
  #L3e8f78.  v0:= new `mc.g$d`;
  #L3e8f7c.  v4:= "OkHttp %s Push Request[%s]" @kind object;
  #L3e8f80.  v1:= 2I;
  #L3e8f82.  v5:= new `java.lang.Object`[v1];
  #L3e8f86.  v1:= 0I;
  #L3e8f88.  v2:= v8.`mc.g.r` @type ^`java.lang.String` @kind object;
  #L3e8f8c.  v5[v1]:= v2 @kind object;
  #L3e8f90.  v1:= 1I;
  #L3e8f92.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e8f98.  v2:= temp @kind object;
  #L3e8f9a.  v5[v1]:= v2 @kind object;
  #L3e8f9e.  v2:= v0 @kind object;
  #L3e8fa0.  v3:= v8 @kind object;
  #L3e8fa2.  v6:= v9;
  #L3e8fa4.  v7:= v10 @kind object;
  #L3e8fa6.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lmc/g$d;.<init>:(Lmc/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;)V` @kind direct;
  #L3e8fac.  call `b0`(v8, v0) @signature `Lmc/g;.b0:(Lhc/b;)V` @kind direct;
  #L3e8fb2.  return @kind void;
  #L3e8fb4.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8fb6.  @monitorexit v8
  #L3e8fb8.  throw v9;
  catch `java.lang.Throwable` @[L3e8f3e..L3e8f78] goto L3e8fb4;
  catch `java.util.concurrent.RejectedExecutionException` @[L3e8f78..L3e8fb2] goto L3e8fb2;
  catch `java.lang.Throwable` @[L3e8fb6..L3e8fb8] goto L3e8fb4;
}
procedure `void` `e0`(`mc.g` v7 @kind this, `int` v8 , `mc.b` v9 @kind object) @signature `Lmc/g;.e0:(ILmc/b;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e8fec.  v6:= new `mc.g$g`;
  #L3e8ff0.  v0:= 2I;
  #L3e8ff2.  v3:= new `java.lang.Object`[v0];
  #L3e8ff6.  v0:= v7.`mc.g.r` @type ^`java.lang.String` @kind object;
  #L3e8ffa.  v1:= 0I;
  #L3e8ffc.  v3[v1]:= v0 @kind object;
  #L3e9000.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9006.  v0:= temp @kind object;
  #L3e9008.  v1:= 1I;
  #L3e900a.  v3[v1]:= v0 @kind object;
  #L3e900e.  v2:= "OkHttp %s Push Reset[%s]" @kind object;
  #L3e9012.  v0:= v6 @kind object;
  #L3e9014.  v1:= v7 @kind object;
  #L3e9016.  v4:= v8;
  #L3e9018.  v5:= v9 @kind object;
  #L3e901a.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lmc/g$g;.<init>:(Lmc/g;Ljava/lang/String;[Ljava/lang/Object;ILmc/b;)V` @kind direct;
  #L3e9020.  call `b0`(v7, v6) @signature `Lmc/g;.b0:(Lhc/b;)V` @kind direct;
  #L3e9026.  return @kind void;
}
procedure `boolean` `f0`(`mc.g` v1 @kind this, `int` v2 ) @signature `Lmc/g;.f0:(I)Z` @AccessFlag  {
    temp;
    v0;

  #L3e8724.  v0:= 1I;
  #L3e8726.  if v2 == 0 then goto L3e8732;
  #L3e872a.  v2:= v2 ^& v0 @kind int;
  #L3e872c.  if v2 != 0 then goto L3e8732;
  #L3e8730.  goto L3e8734;
  #L3e8732.  v0:= 0I;
  #L3e8734.  return v0;
}
procedure `void` `flush`(`mc.g` v1 @kind this) @signature `Lmc/g;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8dd0.  v0:= v1.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e8dd4.  call `flush`(v0) @signature `Lmc/j;.flush:()V` @kind virtual;
  #L3e8dda.  return @kind void;
}
procedure `mc.i` `g0`(`mc.g` v1 @kind this, `int` v2 ) @signature `Lmc/g;.g0:(I)Lmc/i;` @AccessFlag  {
    temp;
    v0;

  #L3e89fc.  @monitorenter v1
  #L3e89fe.  v0:= v1.`mc.g.q` @type ^`java.util.Map` @kind object;
  #L3e8a02.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e8a08.  v2:= temp @kind object;
  #L3e8a0a.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e8a10.  v2:= temp @kind object;
  #L3e8a12.  v2:= (`mc.i`) v2 @kind object;
  #L3e8a16.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L3e8a1c.  @monitorexit v1
  #L3e8a1e.  return v2 @kind object;
  #L3e8a20.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e8a22.  @monitorexit v1
  #L3e8a24.  throw v2;
  catch `java.lang.Throwable` @[L3e89fe..L3e8a1c] goto L3e8a20;
}
procedure `void` `h0`(`mc.g` v6 @kind this) @signature `Lmc/g;.h0:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e9038.  @monitorenter v6
  #L3e903a.  v0:= v6.`mc.g.B` @type ^`long` @kind wide;
  #L3e903e.  v2:= v6.`mc.g.A` @type ^`long` @kind wide;
  #L3e9042.  v4:= lcmp(v0, v2);
  #L3e9046.  if v4 >= 0 then goto L3e904e;
  #L3e904a.  @monitorexit v6
  #L3e904c.  return @kind void;
  #L3e904e.  v0:= 1L;
  #L3e9052.  v2:= v2 + v0 @kind long;
  #L3e9054.  v6.`mc.g.A` @type ^`long` := v2 @kind wide;
  #L3e9058.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L3e905e.  v0:= temp @kind wide;
  #L3e9060.  v2:= 1000000000L;
  #L3e9066.  v0:= v0 + v2 @kind long;
  #L3e9068.  v6.`mc.g.D` @type ^`long` := v0 @kind wide;
  #L3e906c.  @monitorexit v6
  #L3e906e.  v0:= v6.`mc.g.v` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L3e9072.  v1:= new `mc.g$c`;
  #L3e9076.  v2:= "OkHttp %s ping" @kind object;
  #L3e907a.  v3:= 1I;
  #L3e907c.  v3:= new `java.lang.Object`[v3];
  #L3e9080.  v4:= 0I;
  #L3e9082.  v5:= v6.`mc.g.r` @type ^`java.lang.String` @kind object;
  #L3e9086.  v3[v4]:= v5 @kind object;
  #L3e908a.  call `<init>`(v1, v6, v2, v3) @signature `Lmc/g$c;.<init>:(Lmc/g;Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e9090.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3e9096.  return @kind void;
  #L3e9098.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e909a.  @monitorexit v6
  #L3e909c.  throw v0;
  catch `java.lang.Throwable` @[L3e903a..L3e906e] goto L3e9098;
  catch `java.util.concurrent.RejectedExecutionException` @[L3e906e..L3e9096] goto L3e9096;
  catch `java.lang.Throwable` @[L3e909a..L3e909c] goto L3e9098;
}
procedure `void` `i0`(`mc.g` v4 @kind this, `mc.b` v5 @kind object) @signature `Lmc/g;.i0:(Lmc/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e90d0.  v0:= v4.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e90d4.  @monitorenter v0
  #L3e90d6.  @monitorenter v4
  #L3e90d8.  v1:= v4.`mc.g.u` @type ^`boolean` @kind boolean;
  #L3e90dc.  if v1 == 0 then goto L3e90e6;
  #L3e90e0.  @monitorexit v4
  #L3e90e2.  @monitorexit v0
  #L3e90e4.  return @kind void;
  #L3e90e6.  v1:= 1I;
  #L3e90e8.  v4.`mc.g.u` @type ^`boolean` := v1 @kind boolean;
  #L3e90ec.  v1:= v4.`mc.g.s` @type ^`int`;
  #L3e90f0.  @monitorexit v4
  #L3e90f2.  v2:= v4.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e90f6.  v3:= `@@hc.c.a` @type ^`byte`[] @kind object;
  #L3e90fa.  call `k`(v2, v1, v5, v3) @signature `Lmc/j;.k:(ILmc/b;[B)V` @kind virtual;
  #L3e9100.  @monitorexit v0
  #L3e9102.  return @kind void;
  #L3e9104.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e9106.  @monitorexit v4
  #L3e9108.  throw v5;
  #L3e910a.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e910c.  @monitorexit v0
  #L3e910e.  throw v5;
  catch `java.lang.Throwable` @[L3e90d6..L3e90d8] goto L3e910a;
  catch `java.lang.Throwable` @[L3e90d8..L3e90e2] goto L3e9104;
  catch `java.lang.Throwable` @[L3e90e2..L3e90e4] goto L3e910a;
  catch `java.lang.Throwable` @[L3e90e8..L3e90f2] goto L3e9104;
  catch `java.lang.Throwable` @[L3e90f2..L3e9102] goto L3e910a;
  catch `java.lang.Throwable` @[L3e9106..L3e9108] goto L3e9104;
  catch `java.lang.Throwable` @[L3e9108..L3e910e] goto L3e910a;
}
procedure `void` `j0`(`mc.g` v1 @kind this) @signature `Lmc/g;.j0:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9160.  v0:= 1I;
  #L3e9162.  call `k0`(v1, v0) @signature `Lmc/g;.k0:(Z)V` @kind virtual;
  #L3e9168.  return @kind void;
}
procedure `void` `k0`(`mc.g` v5 @kind this, `boolean` v6 ) @signature `Lmc/g;.k0:(Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e917c.  if v6 == 0 then goto L3e91be;
  #L3e9180.  v6:= v5.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e9184.  call `c`(v6) @signature `Lmc/j;.c:()V` @kind virtual;
  #L3e918a.  v6:= v5.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e918e.  v0:= v5.`mc.g.G` @type ^`mc.m` @kind object;
  #L3e9192.  call `G`(v6, v0) @signature `Lmc/j;.G:(Lmc/m;)V` @kind virtual;
  #L3e9198.  v6:= v5.`mc.g.G` @type ^`mc.m` @kind object;
  #L3e919c.  call temp:= `d`(v6) @signature `Lmc/m;.d:()I` @kind virtual;
  #L3e91a2.  v6:= temp;
  #L3e91a4.  v0:= 65535I;
  #L3e91aa.  if v6 == v0 then goto L3e91be;
  #L3e91ae.  v1:= v5.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e91b2.  v2:= 0I;
  #L3e91b4.  v6:= v6 - v0 @kind int;
  #L3e91b6.  v3:= (`long`) v6 @kind i2l;
  #L3e91b8.  call `K`(v1, v2, v3) @signature `Lmc/j;.K:(IJ)V` @kind virtual;
  #L3e91be.  v6:= new `java.lang.Thread`;
  #L3e91c2.  v0:= v5.`mc.g.K` @type ^`mc.g$l` @kind object;
  #L3e91c6.  call `<init>`(v6, v0) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L3e91cc.  call `start`(v6) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L3e91d2.  return @kind void;
}
procedure `void` `l0`(`mc.g` v3 @kind this, `long` v4 ) @signature `Lmc/g;.l0:(J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3e91e4.  @monitorenter v3
  #L3e91e6.  v0:= v3.`mc.g.E` @type ^`long` @kind wide;
  #L3e91ea.  v0:= v0 + v4 @kind long;
  #L3e91ec.  v3.`mc.g.E` @type ^`long` := v0 @kind wide;
  #L3e91f0.  v4:= v3.`mc.g.G` @type ^`mc.m` @kind object;
  #L3e91f4.  call temp:= `d`(v4) @signature `Lmc/m;.d:()I` @kind virtual;
  #L3e91fa.  v4:= temp;
  #L3e91fc.  v4:= v4 / 2;
  #L3e9200.  v4:= (`long`) v4 @kind i2l;
  #L3e9202.  v2:= lcmp(v0, v4);
  #L3e9206.  if v2 < 0 then goto L3e921e;
  #L3e920a.  v4:= 0I;
  #L3e920c.  v0:= v3.`mc.g.E` @type ^`long` @kind wide;
  #L3e9210.  call `q0`(v3, v4, v0) @signature `Lmc/g;.q0:(IJ)V` @kind virtual;
  #L3e9216.  v4:= 0L;
  #L3e921a.  v3.`mc.g.E` @type ^`long` := v4 @kind wide;
  #L3e921e.  @monitorexit v3
  #L3e9220.  return @kind void;
  #L3e9222.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e9224.  @monitorexit v3
  #L3e9226.  throw v4;
  catch `java.lang.Throwable` @[L3e91e6..L3e921e] goto L3e9222;
}
procedure `void` `m0`(`mc.g` v8 @kind this, `int` v9 , `boolean` v10 , `qc.c` v11 @kind object, `long` v12 ) @signature `Lmc/g;.m0:(IZLqc/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e9244.  v0:= 0I;
  #L3e9246.  v1:= 0L;
  #L3e924a.  v3:= lcmp(v12, v1);
  #L3e924e.  if v3 != 0 then goto L3e925e;
  #L3e9252.  v12:= v8.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e9256.  call `e`(v12, v10, v9, v11, v0) @signature `Lmc/j;.e:(ZILqc/c;I)V` @kind virtual;
  #L3e925c.  return @kind void;
  #L3e925e.  v3:= lcmp(v12, v1);
  #L3e9262.  if v3 <= 0 then goto L3e9312;
  #L3e9266.  @monitorenter v8
  #L3e9268.  v3:= v8.`mc.g.F` @type ^`long` @kind wide;
  #L3e926c.  v5:= lcmp(v3, v1);
  #L3e9270.  if v5 > 0 then goto L3e92a4;
  #L3e9274.  v3:= v8.`mc.g.q` @type ^`java.util.Map` @kind object;
  #L3e9278.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e927e.  v4:= temp @kind object;
  #L3e9280.  call temp:= `containsKey`(v3, v4) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L3e9286.  v3:= temp;
  #L3e9288.  if v3 == 0 then goto L3e9294;
  #L3e928c.  call `wait`(v8) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L3e9292.  goto L3e9268;
  #L3e9294.  v9:= new `java.io.IOException`;
  #L3e9298.  v10:= "stream closed" @kind object;
  #L3e929c.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e92a2.  throw v9;
  #L3e92a4.  call temp:= `min`(v12, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3e92aa.  v3:= temp @kind wide;
  #L3e92ac.  v4:= (`int`) v3 @kind l2i;
  #L3e92ae.  v3:= v8.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e92b2.  call temp:= `s`(v3) @signature `Lmc/j;.s:()I` @kind virtual;
  #L3e92b8.  v3:= temp;
  #L3e92ba.  call temp:= `min`(v4, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3e92c0.  v3:= temp;
  #L3e92c2.  v4:= v8.`mc.g.F` @type ^`long` @kind wide;
  #L3e92c6.  v6:= (`long`) v3 @kind i2l;
  #L3e92c8.  v4:= v4 - v6 @kind long;
  #L3e92ca.  v8.`mc.g.F` @type ^`long` := v4 @kind wide;
  #L3e92ce.  @monitorexit v8
  #L3e92d0.  v12:= v12 - v6 @kind long;
  #L3e92d2.  v4:= v8.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e92d6.  if v10 == 0 then goto L3e92e6;
  #L3e92da.  v5:= lcmp(v12, v1);
  #L3e92de.  if v5 != 0 then goto L3e92e6;
  #L3e92e2.  v5:= 1I;
  #L3e92e4.  goto L3e92e8;
  #L3e92e6.  v5:= 0I;
  #L3e92e8.  call `e`(v4, v5, v9, v11, v3) @signature `Lmc/j;.e:(ZILqc/c;I)V` @kind virtual;
  #L3e92ee.  goto L3e925e;
  #L3e92f0.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e92f2.  goto L3e930e;
  #L3e92f4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3e92fa.  v9:= temp @kind object;
  #L3e92fc.  call `interrupt`(v9) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L3e9302.  v9:= new `java.io.InterruptedIOException`;
  #L3e9306.  call `<init>`(v9) @signature `Ljava/io/InterruptedIOException;.<init>:()V` @kind direct;
  #L3e930c.  throw v9;
  #L3e930e.  @monitorexit v8
  #L3e9310.  throw v9;
  #L3e9312.  return @kind void;
  catch `java.lang.InterruptedException` @[L3e9268..L3e92a4] goto L3e92f4;
  catch `java.lang.Throwable` @[L3e9268..L3e92a4] goto L3e92f0;
  catch `java.lang.Throwable` @[L3e92a4..L3e92d0] goto L3e92f0;
  catch `java.lang.Throwable` @[L3e92f4..L3e9310] goto L3e92f0;
}
procedure `void` `n0`(`mc.g` v1 @kind this, `boolean` v2 , `int` v3 , `int` v4 ) @signature `Lmc/g;.n0:(ZII)V` @AccessFlag  {
    temp;
    v0;

  #L3e9344.  v0:= v1.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e9348.  call `v`(v0, v2, v3, v4) @signature `Lmc/j;.v:(ZII)V` @kind virtual;
  #L3e934e.  goto L3e9356;
  #L3e9350.  call `J`(v1) @signature `Lmc/g;.J:()V` @kind direct;
  #L3e9356.  return @kind void;
  catch `java.io.IOException` @[L3e9344..L3e934e] goto L3e9350;
}
procedure `void` `o0`(`mc.g` v1 @kind this, `int` v2 , `mc.b` v3 @kind object) @signature `Lmc/g;.o0:(ILmc/b;)V` @AccessFlag  {
    temp;
    v0;

  #L3e9378.  v0:= v1.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e937c.  call `E`(v0, v2, v3) @signature `Lmc/j;.E:(ILmc/b;)V` @kind virtual;
  #L3e9382.  return @kind void;
}
procedure `void` `p0`(`mc.g` v8 @kind this, `int` v9 , `mc.b` v10 @kind object) @signature `Lmc/g;.p0:(ILmc/b;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e9394.  v0:= v8.`mc.g.v` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L3e9398.  v7:= new `mc.g$a`;
  #L3e939c.  v3:= "OkHttp %s stream %d" @kind object;
  #L3e93a0.  v1:= 2I;
  #L3e93a2.  v4:= new `java.lang.Object`[v1];
  #L3e93a6.  v1:= 0I;
  #L3e93a8.  v2:= v8.`mc.g.r` @type ^`java.lang.String` @kind object;
  #L3e93ac.  v4[v1]:= v2 @kind object;
  #L3e93b0.  v1:= 1I;
  #L3e93b2.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e93b8.  v2:= temp @kind object;
  #L3e93ba.  v4[v1]:= v2 @kind object;
  #L3e93be.  v1:= v7 @kind object;
  #L3e93c0.  v2:= v8 @kind object;
  #L3e93c2.  v5:= v9;
  #L3e93c4.  v6:= v10 @kind object;
  #L3e93c6.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lmc/g$a;.<init>:(Lmc/g;Ljava/lang/String;[Ljava/lang/Object;ILmc/b;)V` @kind direct;
  #L3e93cc.  call `execute`(v0, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3e93d2.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L3e9394..L3e93d2] goto L3e93d2;
}
procedure `void` `q0`(`mc.g` v9 @kind this, `int` v10 , `long` v11 ) @signature `Lmc/g;.q0:(IJ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3e93f4.  v0:= v9.`mc.g.v` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L3e93f8.  v8:= new `mc.g$b`;
  #L3e93fc.  v3:= "OkHttp Window Update %s stream %d" @kind object;
  #L3e9400.  v1:= 2I;
  #L3e9402.  v4:= new `java.lang.Object`[v1];
  #L3e9406.  v1:= 0I;
  #L3e9408.  v2:= v9.`mc.g.r` @type ^`java.lang.String` @kind object;
  #L3e940c.  v4[v1]:= v2 @kind object;
  #L3e9410.  v1:= 1I;
  #L3e9412.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9418.  v2:= temp @kind object;
  #L3e941a.  v4[v1]:= v2 @kind object;
  #L3e941e.  v1:= v8 @kind object;
  #L3e9420.  v2:= v9 @kind object;
  #L3e9422.  v5:= v10;
  #L3e9424.  v6:= v11 @kind wide;
  #L3e9426.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lmc/g$b;.<init>:(Lmc/g;Ljava/lang/String;[Ljava/lang/Object;IJ)V` @kind direct;
  #L3e942c.  call `execute`(v0, v8) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3e9432.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L3e93f4..L3e9432] goto L3e9432;
}
