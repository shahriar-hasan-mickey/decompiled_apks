record `mc.l` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `mc.l` `@@mc.l.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lmc/l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ec428.  v0:= new `mc.l$a`;
  #L3ec42c.  call `<init>`(v0) @signature `Lmc/l$a;.<init>:()V` @kind direct;
  #L3ec432.  `@@mc.l.a` @type ^`mc.l` := v0 @kind object;
  #L3ec436.  return @kind void;
}
procedure `boolean` `a`(`int` v0 , `java.util.List` v1 @kind object) @signature `Lmc/l;.a:(ILjava/util/List;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `b`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Lmc/l;.b:(ILjava/util/List;Z)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `c`(`int` v0 , `mc.b` v1 @kind object) @signature `Lmc/l;.c:(ILmc/b;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `d`(`int` v0 , `qc.e` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lmc/l;.d:(ILqc/e;IZ)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
