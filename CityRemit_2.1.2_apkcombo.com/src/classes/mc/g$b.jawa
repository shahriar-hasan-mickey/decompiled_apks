record `mc.g$b` @kind class @AccessFlag  extends `hc.b` @kind class {
  `int` `mc.g$b.p` @AccessFlag FINAL_SYNTHETIC;
  `long` `mc.g$b.q` @AccessFlag FINAL_SYNTHETIC;
  `mc.g` `mc.g$b.r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`mc.g$b` v0 @kind this, `mc.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `long` v5 ) @signature `Lmc/g$b;.<init>:(Lmc/g;Ljava/lang/String;[Ljava/lang/Object;IJ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e78d0.  v0.`mc.g$b.r` @type ^`mc.g` := v1 @kind object;
  #L3e78d4.  v0.`mc.g$b.p` @type ^`int` := v4;
  #L3e78d8.  v0.`mc.g$b.q` @type ^`long` := v5 @kind wide;
  #L3e78dc.  call `<init>`(v0, v2, v3) @signature `Lhc/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e78e2.  return @kind void;
}
procedure `void` `k`(`mc.g$b` v4 @kind this) @signature `Lmc/g$b;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e78f4.  v0:= v4.`mc.g$b.r` @type ^`mc.g` @kind object;
  #L3e78f8.  v0:= v0.`mc.g.J` @type ^`mc.j` @kind object;
  #L3e78fc.  v1:= v4.`mc.g$b.p` @type ^`int`;
  #L3e7900.  v2:= v4.`mc.g$b.q` @type ^`long` @kind wide;
  #L3e7904.  call `K`(v0, v1, v2) @signature `Lmc/j;.K:(IJ)V` @kind virtual;
  #L3e790a.  goto L3e7916;
  #L3e790c.  v0:= v4.`mc.g$b.r` @type ^`mc.g` @kind object;
  #L3e7910.  call `a`(v0) @signature `Lmc/g;.a:(Lmc/g;)V` @kind static;
  #L3e7916.  return @kind void;
  catch `java.io.IOException` @[L3e78f4..L3e790a] goto L3e790c;
}
