record `mc.e` @kind class @AccessFlag PUBLIC_FINAL {
}
global `qc.f` `@@mc.e.a` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@mc.e.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@mc.e.c` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@mc.e.d` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lmc/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3eb920.  v0:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L3eb924.  call temp:= `k`(v0) @signature `Lqc/f;.k:(Ljava/lang/String;)Lqc/f;` @kind static;
  #L3eb92a.  v0:= temp @kind object;
  #L3eb92c.  `@@mc.e.a` @type ^`qc.f` := v0 @kind object;
  #L3eb930.  v1:= "DATA" @kind object;
  #L3eb934.  v2:= "HEADERS" @kind object;
  #L3eb938.  v3:= "PRIORITY" @kind object;
  #L3eb93c.  v4:= "RST_STREAM" @kind object;
  #L3eb940.  v5:= "SETTINGS" @kind object;
  #L3eb944.  v6:= "PUSH_PROMISE" @kind object;
  #L3eb948.  v7:= "PING" @kind object;
  #L3eb94c.  v8:= "GOAWAY" @kind object;
  #L3eb950.  v9:= "WINDOW_UPDATE" @kind object;
  #L3eb954.  v10:= "CONTINUATION" @kind object;
  #L3eb958.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8, v9, v10];
  #L3eb95e.  v0:= temp @kind object;
  #L3eb960.  `@@mc.e.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L3eb964.  v0:= 64I;
  #L3eb968.  v0:= new `java.lang.String`[v0];
  #L3eb96c.  `@@mc.e.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L3eb970.  v0:= 256I;
  #L3eb974.  v0:= new `java.lang.String`[v0];
  #L3eb978.  `@@mc.e.d` @type ^`java.lang.String`[] := v0 @kind object;
  #L3eb97c.  v0:= 0I;
  #L3eb97e.  v1:= 0I;
  #L3eb980.  v2:= `@@mc.e.d` @type ^`java.lang.String`[] @kind object;
  #L3eb984.  v3:= length @variable v2;
  #L3eb986.  v4:= 32I;
  #L3eb98a.  v5:= 1I;
  #L3eb98c.  if v1 >= v3 then goto L3eb9c2;
  #L3eb990.  v3:= new `java.lang.Object`[v5];
  #L3eb994.  call temp:= `toBinaryString`(v1) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L3eb99a.  v5:= temp @kind object;
  #L3eb99c.  v3[v0]:= v5 @kind object;
  #L3eb9a0.  v5:= "%8s" @kind object;
  #L3eb9a4.  call temp:= `p`(v5, v3) @signature `Lhc/c;.p:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3eb9aa.  v3:= temp @kind object;
  #L3eb9ac.  v5:= 48I;
  #L3eb9b0.  call temp:= `replace`(v3, v4, v5) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L3eb9b6.  v3:= temp @kind object;
  #L3eb9b8.  v2[v1]:= v3 @kind object;
  #L3eb9bc.  v1:= v1 + 1;
  #L3eb9c0.  goto L3eb980;
  #L3eb9c2.  v1:= `@@mc.e.c` @type ^`java.lang.String`[] @kind object;
  #L3eb9c6.  v2:= "" @kind object;
  #L3eb9ca.  v1[v0]:= v2 @kind object;
  #L3eb9ce.  v2:= "END_STREAM" @kind object;
  #L3eb9d2.  v1[v5]:= v2 @kind object;
  #L3eb9d6.  v2:= new `int`[v5];
  #L3eb9da.  v2[v0]:= v5;
  #L3eb9de.  v3:= "PADDED" @kind object;
  #L3eb9e2.  v6:= 8I;
  #L3eb9e6.  v1[v6]:= v3 @kind object;
  #L3eb9ea.  v1:= 0I;
  #L3eb9ec.  v3:= "|PADDED" @kind object;
  #L3eb9f0.  if v1 >= v5 then goto L3eba2c;
  #L3eb9f4.  v7:= v2[v1];
  #L3eb9f8.  v8:= `@@mc.e.c` @type ^`java.lang.String`[] @kind object;
  #L3eb9fc.  v9:= v7 ^| 8;
  #L3eba00.  v10:= new `java.lang.StringBuilder`;
  #L3eba04.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3eba0a.  v7:= v8[v7] @kind object;
  #L3eba0e.  call temp:= `append`(v10, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eba14.  call temp:= `append`(v10, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eba1a.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3eba20.  v3:= temp @kind object;
  #L3eba22.  v8[v9]:= v3 @kind object;
  #L3eba26.  v1:= v1 + 1;
  #L3eba2a.  goto L3eb9ec;
  #L3eba2c.  v1:= `@@mc.e.c` @type ^`java.lang.String`[] @kind object;
  #L3eba30.  v7:= 4I;
  #L3eba32.  v8:= "END_HEADERS" @kind object;
  #L3eba36.  v1[v7]:= v8 @kind object;
  #L3eba3a.  v7:= "PRIORITY" @kind object;
  #L3eba3e.  v1[v4]:= v7 @kind object;
  #L3eba42.  v4:= 36I;
  #L3eba46.  v7:= "END_HEADERS|PRIORITY" @kind object;
  #L3eba4a.  v1[v4]:= v7 @kind object;
  #L3eba4e.  v1:= 3I;
  #L3eba50.  v4:= new `int`[v1];
  #L3eba54.  goto L3ebb14;
  #L3eba5a.  v7:= 0I;
  #L3eba5c.  if v7 >= v1 then goto L3ebaee;
  #L3eba60.  v8:= v4[v7];
  #L3eba64.  v9:= 0I;
  #L3eba66.  if v9 >= v5 then goto L3ebae8;
  #L3eba6a.  v10:= v2[v9];
  #L3eba6e.  v11:= `@@mc.e.c` @type ^`java.lang.String`[] @kind object;
  #L3eba72.  v12:= v10 ^| v8 @kind int;
  #L3eba76.  v13:= new `java.lang.StringBuilder`;
  #L3eba7a.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3eba80.  v14:= v11[v10] @kind object;
  #L3eba84.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eba8a.  v14:= 124I;
  #L3eba8e.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eba94.  v15:= v11[v8] @kind object;
  #L3eba98.  call temp:= `append`(v13, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eba9e.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ebaa4.  v13:= temp @kind object;
  #L3ebaa6.  v11[v12]:= v13 @kind object;
  #L3ebaaa.  v12:= v12 ^| v6 @kind int;
  #L3ebaac.  v13:= new `java.lang.StringBuilder`;
  #L3ebab0.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ebab6.  v10:= v11[v10] @kind object;
  #L3ebaba.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebac0.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebac6.  v10:= v11[v8] @kind object;
  #L3ebaca.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebad0.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebad6.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ebadc.  v10:= temp @kind object;
  #L3ebade.  v11[v12]:= v10 @kind object;
  #L3ebae2.  v9:= v9 + 1;
  #L3ebae6.  goto L3eba66;
  #L3ebae8.  v7:= v7 + 1;
  #L3ebaec.  goto L3eba5c;
  #L3ebaee.  v1:= `@@mc.e.c` @type ^`java.lang.String`[] @kind object;
  #L3ebaf2.  v2:= length @variable v1;
  #L3ebaf4.  if v0 >= v2 then goto L3ebb12;
  #L3ebaf8.  v2:= v1[v0] @kind object;
  #L3ebafc.  if v2 != 0 then goto L3ebb0c;
  #L3ebb00.  v2:= `@@mc.e.d` @type ^`java.lang.String`[] @kind object;
  #L3ebb04.  v2:= v2[v0] @kind object;
  #L3ebb08.  v1[v0]:= v2 @kind object;
  #L3ebb0c.  v0:= v0 + 1;
  #L3ebb10.  goto L3ebaee;
  #L3ebb12.  return @kind void;
  #L3ebb14.  v4:= (4I, 32I, 36I) @kind object;
  #L3ebb27.  goto L3eba5a;
}
procedure `void` `<init>`(`mc.e` v0 @kind this) @signature `Lmc/e;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3ebb38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ebb3e.  return @kind void;
}
procedure `java.lang.String` `a`(`byte` v2 , `byte` v3 ) @signature `Lmc/e;.a:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3eb7d4.  if v3 != 0 then goto L3eb7de;
  #L3eb7d8.  v2:= "" @kind object;
  #L3eb7dc.  return v2 @kind object;
  #L3eb7de.  v0:= 2I;
  #L3eb7e0.  if v2 == v0 then goto L3eb872;
  #L3eb7e4.  v0:= 3I;
  #L3eb7e6.  if v2 == v0 then goto L3eb872;
  #L3eb7ea.  v0:= 4I;
  #L3eb7ec.  if v2 == v0 then goto L3eb85c;
  #L3eb7f0.  v0:= 6I;
  #L3eb7f2.  if v2 == v0 then goto L3eb85c;
  #L3eb7f6.  v0:= 7I;
  #L3eb7f8.  if v2 == v0 then goto L3eb872;
  #L3eb7fc.  v0:= 8I;
  #L3eb800.  if v2 == v0 then goto L3eb872;
  #L3eb804.  v0:= `@@mc.e.c` @type ^`java.lang.String`[] @kind object;
  #L3eb808.  v1:= length @variable v0;
  #L3eb80a.  if v3 >= v1 then goto L3eb814;
  #L3eb80e.  v0:= v0[v3] @kind object;
  #L3eb812.  goto L3eb81c;
  #L3eb814.  v0:= `@@mc.e.d` @type ^`java.lang.String`[] @kind object;
  #L3eb818.  v0:= v0[v3] @kind object;
  #L3eb81c.  v1:= 5I;
  #L3eb81e.  if v2 != v1 then goto L3eb83c;
  #L3eb822.  v1:= v3 ^& 4;
  #L3eb826.  if v1 == 0 then goto L3eb83c;
  #L3eb82a.  v2:= "HEADERS" @kind object;
  #L3eb82e.  v3:= "PUSH_PROMISE" @kind object;
  #L3eb832.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L3eb838.  v2:= temp @kind object;
  #L3eb83a.  return v2 @kind object;
  #L3eb83c.  if v2 != 0 then goto L3eb85a;
  #L3eb840.  v2:= v3 ^& 32;
  #L3eb844.  if v2 == 0 then goto L3eb85a;
  #L3eb848.  v2:= "PRIORITY" @kind object;
  #L3eb84c.  v3:= "COMPRESSED" @kind object;
  #L3eb850.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L3eb856.  v2:= temp @kind object;
  #L3eb858.  return v2 @kind object;
  #L3eb85a.  return v0 @kind object;
  #L3eb85c.  v2:= 1I;
  #L3eb85e.  if v3 != v2 then goto L3eb868;
  #L3eb862.  v2:= "ACK" @kind object;
  #L3eb866.  goto L3eb870;
  #L3eb868.  v2:= `@@mc.e.d` @type ^`java.lang.String`[] @kind object;
  #L3eb86c.  v2:= v2[v3] @kind object;
  #L3eb870.  return v2 @kind object;
  #L3eb872.  v2:= `@@mc.e.d` @type ^`java.lang.String`[] @kind object;
  #L3eb876.  v2:= v2[v3] @kind object;
  #L3eb87a.  return v2 @kind object;
}
procedure `java.lang.String` `b`(`boolean` v4 , `int` v5 , `int` v6 , `byte` v7 , `byte` v8 ) @signature `Lmc/e;.b:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3eb88c.  v0:= `@@mc.e.b` @type ^`java.lang.String`[] @kind object;
  #L3eb890.  v1:= length @variable v0;
  #L3eb892.  v2:= 0I;
  #L3eb894.  v3:= 1I;
  #L3eb896.  if v7 >= v1 then goto L3eb8a0;
  #L3eb89a.  v0:= v0[v7] @kind object;
  #L3eb89e.  goto L3eb8bc;
  #L3eb8a0.  v0:= new `java.lang.Object`[v3];
  #L3eb8a4.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L3eb8aa.  v1:= temp @kind object;
  #L3eb8ac.  v0[v2]:= v1 @kind object;
  #L3eb8b0.  v1:= "0x%02x" @kind object;
  #L3eb8b4.  call temp:= `p`(v1, v0) @signature `Lhc/c;.p:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3eb8ba.  v0:= temp @kind object;
  #L3eb8bc.  call temp:= `a`(v7, v8) @signature `Lmc/e;.a:(BB)Ljava/lang/String;` @kind static;
  #L3eb8c2.  v7:= temp @kind object;
  #L3eb8c4.  v8:= 5I;
  #L3eb8c6.  v8:= new `java.lang.Object`[v8];
  #L3eb8ca.  if v4 == 0 then goto L3eb8d4;
  #L3eb8ce.  v4:= "<<" @kind object;
  #L3eb8d2.  goto L3eb8d8;
  #L3eb8d4.  v4:= ">>" @kind object;
  #L3eb8d8.  v8[v2]:= v4 @kind object;
  #L3eb8dc.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb8e2.  v4:= temp @kind object;
  #L3eb8e4.  v8[v3]:= v4 @kind object;
  #L3eb8e8.  v4:= 2I;
  #L3eb8ea.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb8f0.  v5:= temp @kind object;
  #L3eb8f2.  v8[v4]:= v5 @kind object;
  #L3eb8f6.  v4:= 3I;
  #L3eb8f8.  v8[v4]:= v0 @kind object;
  #L3eb8fc.  v4:= 4I;
  #L3eb8fe.  v8[v4]:= v7 @kind object;
  #L3eb902.  v4:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L3eb906.  call temp:= `p`(v4, v8) @signature `Lhc/c;.p:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3eb90c.  v4:= temp @kind object;
  #L3eb90e.  return v4 @kind object;
}
procedure `java.lang.IllegalArgumentException` `c`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lmc/e;.c:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {
    temp;
    v0;

  #L3eb7b0.  v0:= new `java.lang.IllegalArgumentException`;
  #L3eb7b4.  call temp:= `p`(v1, v2) @signature `Lhc/c;.p:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3eb7ba.  v1:= temp @kind object;
  #L3eb7bc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eb7c2.  throw v0;
}
procedure `java.io.IOException` `d`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lmc/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC {
    temp;
    v0;

  #L3eb78c.  v0:= new `java.io.IOException`;
  #L3eb790.  call temp:= `p`(v1, v2) @signature `Lhc/c;.p:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3eb796.  v1:= temp @kind object;
  #L3eb798.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eb79e.  throw v0;
}
