record `mc.c` @kind class @AccessFlag PUBLIC_FINAL {
  `qc.f` `mc.c.a` @AccessFlag PUBLIC_FINAL;
  `qc.f` `mc.c.b` @AccessFlag PUBLIC_FINAL;
  `int` `mc.c.c` @AccessFlag FINAL;
}
global `qc.f` `@@mc.c.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `qc.f` `@@mc.c.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `qc.f` `@@mc.c.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `qc.f` `@@mc.c.g` @AccessFlag PUBLIC_STATIC_FINAL;
global `qc.f` `@@mc.c.h` @AccessFlag PUBLIC_STATIC_FINAL;
global `qc.f` `@@mc.c.i` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lmc/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e5ff4.  v0:= ":" @kind object;
  #L3e5ff8.  call temp:= `k`(v0) @signature `Lqc/f;.k:(Ljava/lang/String;)Lqc/f;` @kind static;
  #L3e5ffe.  v0:= temp @kind object;
  #L3e6000.  `@@mc.c.d` @type ^`qc.f` := v0 @kind object;
  #L3e6004.  v0:= ":status" @kind object;
  #L3e6008.  call temp:= `k`(v0) @signature `Lqc/f;.k:(Ljava/lang/String;)Lqc/f;` @kind static;
  #L3e600e.  v0:= temp @kind object;
  #L3e6010.  `@@mc.c.e` @type ^`qc.f` := v0 @kind object;
  #L3e6014.  v0:= ":method" @kind object;
  #L3e6018.  call temp:= `k`(v0) @signature `Lqc/f;.k:(Ljava/lang/String;)Lqc/f;` @kind static;
  #L3e601e.  v0:= temp @kind object;
  #L3e6020.  `@@mc.c.f` @type ^`qc.f` := v0 @kind object;
  #L3e6024.  v0:= ":path" @kind object;
  #L3e6028.  call temp:= `k`(v0) @signature `Lqc/f;.k:(Ljava/lang/String;)Lqc/f;` @kind static;
  #L3e602e.  v0:= temp @kind object;
  #L3e6030.  `@@mc.c.g` @type ^`qc.f` := v0 @kind object;
  #L3e6034.  v0:= ":scheme" @kind object;
  #L3e6038.  call temp:= `k`(v0) @signature `Lqc/f;.k:(Ljava/lang/String;)Lqc/f;` @kind static;
  #L3e603e.  v0:= temp @kind object;
  #L3e6040.  `@@mc.c.h` @type ^`qc.f` := v0 @kind object;
  #L3e6044.  v0:= ":authority" @kind object;
  #L3e6048.  call temp:= `k`(v0) @signature `Lqc/f;.k:(Ljava/lang/String;)Lqc/f;` @kind static;
  #L3e604e.  v0:= temp @kind object;
  #L3e6050.  `@@mc.c.i` @type ^`qc.f` := v0 @kind object;
  #L3e6054.  return @kind void;
}
procedure `void` `<init>`(`mc.c` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lmc/c;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e6068.  call temp:= `k`(v1) @signature `Lqc/f;.k:(Ljava/lang/String;)Lqc/f;` @kind static;
  #L3e606e.  v1:= temp @kind object;
  #L3e6070.  call temp:= `k`(v2) @signature `Lqc/f;.k:(Ljava/lang/String;)Lqc/f;` @kind static;
  #L3e6076.  v2:= temp @kind object;
  #L3e6078.  call `<init>`(v0, v1, v2) @signature `Lmc/c;.<init>:(Lqc/f;Lqc/f;)V` @kind direct;
  #L3e607e.  return @kind void;
}
procedure `void` `<init>`(`mc.c` v0 @kind this, `qc.f` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lmc/c;.<init>:(Lqc/f;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e6090.  call temp:= `k`(v2) @signature `Lqc/f;.k:(Ljava/lang/String;)Lqc/f;` @kind static;
  #L3e6096.  v2:= temp @kind object;
  #L3e6098.  call `<init>`(v0, v1, v2) @signature `Lmc/c;.<init>:(Lqc/f;Lqc/f;)V` @kind direct;
  #L3e609e.  return @kind void;
}
procedure `void` `<init>`(`mc.c` v0 @kind this, `qc.f` v1 @kind object, `qc.f` v2 @kind object) @signature `Lmc/c;.<init>:(Lqc/f;Lqc/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e60b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e60b6.  v0.`mc.c.a` @type ^`qc.f` := v1 @kind object;
  #L3e60ba.  v0.`mc.c.b` @type ^`qc.f` := v2 @kind object;
  #L3e60be.  call temp:= `D`(v1) @signature `Lqc/f;.D:()I` @kind virtual;
  #L3e60c4.  v1:= temp;
  #L3e60c6.  v1:= v1 + 32;
  #L3e60ca.  call temp:= `D`(v2) @signature `Lqc/f;.D:()I` @kind virtual;
  #L3e60d0.  v2:= temp;
  #L3e60d2.  v1:= v1 + v2 @kind int;
  #L3e60d4.  v0.`mc.c.c` @type ^`int` := v1;
  #L3e60d8.  return @kind void;
}
procedure `boolean` `equals`(`mc.c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lmc/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e5f28.  v0:= instanceof @variable v4 @type ^`mc.c` @kind boolean;
  #L3e5f2c.  v1:= 0I;
  #L3e5f2e.  if v0 == 0 then goto L3e5f60;
  #L3e5f32.  v4:= (`mc.c`) v4 @kind object;
  #L3e5f36.  v0:= v3.`mc.c.a` @type ^`qc.f` @kind object;
  #L3e5f3a.  v2:= v4.`mc.c.a` @type ^`qc.f` @kind object;
  #L3e5f3e.  call temp:= `equals`(v0, v2) @signature `Lqc/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e5f44.  v0:= temp;
  #L3e5f46.  if v0 == 0 then goto L3e5f60;
  #L3e5f4a.  v0:= v3.`mc.c.b` @type ^`qc.f` @kind object;
  #L3e5f4e.  v4:= v4.`mc.c.b` @type ^`qc.f` @kind object;
  #L3e5f52.  call temp:= `equals`(v0, v4) @signature `Lqc/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e5f58.  v4:= temp;
  #L3e5f5a.  if v4 == 0 then goto L3e5f60;
  #L3e5f5e.  v1:= 1I;
  #L3e5f60.  return v1;
}
procedure `int` `hashCode`(`mc.c` v2 @kind this) @signature `Lmc/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e5f74.  v0:= v2.`mc.c.a` @type ^`qc.f` @kind object;
  #L3e5f78.  call temp:= `hashCode`(v0) @signature `Lqc/f;.hashCode:()I` @kind virtual;
  #L3e5f7e.  v0:= temp;
  #L3e5f80.  v1:= 527I;
  #L3e5f84.  v1:= v1 + v0 @kind int;
  #L3e5f86.  v1:= v1 * 31;
  #L3e5f8a.  v0:= v2.`mc.c.b` @type ^`qc.f` @kind object;
  #L3e5f8e.  call temp:= `hashCode`(v0) @signature `Lqc/f;.hashCode:()I` @kind virtual;
  #L3e5f94.  v0:= temp;
  #L3e5f96.  v1:= v1 + v0 @kind int;
  #L3e5f98.  return v1;
}
procedure `java.lang.String` `toString`(`mc.c` v3 @kind this) @signature `Lmc/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e5fac.  v0:= 2I;
  #L3e5fae.  v0:= new `java.lang.Object`[v0];
  #L3e5fb2.  v1:= v3.`mc.c.a` @type ^`qc.f` @kind object;
  #L3e5fb6.  call temp:= `P`(v1) @signature `Lqc/f;.P:()Ljava/lang/String;` @kind virtual;
  #L3e5fbc.  v1:= temp @kind object;
  #L3e5fbe.  v2:= 0I;
  #L3e5fc0.  v0[v2]:= v1 @kind object;
  #L3e5fc4.  v1:= v3.`mc.c.b` @type ^`qc.f` @kind object;
  #L3e5fc8.  call temp:= `P`(v1) @signature `Lqc/f;.P:()Ljava/lang/String;` @kind virtual;
  #L3e5fce.  v1:= temp @kind object;
  #L3e5fd0.  v2:= 1I;
  #L3e5fd2.  v0[v2]:= v1 @kind object;
  #L3e5fd6.  v1:= "%s: %s" @kind object;
  #L3e5fda.  call temp:= `p`(v1, v0) @signature `Lhc/c;.p:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3e5fe0.  v0:= temp @kind object;
  #L3e5fe2.  return v0 @kind object;
}
