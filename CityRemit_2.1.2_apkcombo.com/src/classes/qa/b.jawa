record `qa.b` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `qa.b.o` @AccessFlag PRIVATE_FINAL;
}
global `qa.b` `@@qa.b.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `qa.b` `@@qa.b.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `qa.b` `@@qa.b.r` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `qa.b` `@@qa.b.s` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `qa.b`[] `@@qa.b.t` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lqa/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L42947c.  v0:= new `qa.b`;
  #L429480.  v1:= "off" @kind object;
  #L429484.  v2:= 0I;
  #L429486.  call `<init>`(v0, v1, v2, v1) @signature `Lqa/b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L42948c.  `@@qa.b.p` @type ^`qa.b` := v0 @kind object;
  #L429490.  v1:= new `qa.b`;
  #L429494.  v3:= "auto" @kind object;
  #L429498.  v4:= 1I;
  #L42949a.  call `<init>`(v1, v3, v4, v3) @signature `Lqa/b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L4294a0.  `@@qa.b.q` @type ^`qa.b` := v1 @kind object;
  #L4294a4.  v3:= new `qa.b`;
  #L4294a8.  v5:= "always" @kind object;
  #L4294ac.  v6:= 2I;
  #L4294ae.  call `<init>`(v3, v5, v6, v5) @signature `Lqa/b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L4294b4.  `@@qa.b.r` @type ^`qa.b` := v3 @kind object;
  #L4294b8.  v5:= new `qa.b`;
  #L4294bc.  v7:= "torch" @kind object;
  #L4294c0.  v8:= 3I;
  #L4294c2.  call `<init>`(v5, v7, v8, v7) @signature `Lqa/b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L4294c8.  `@@qa.b.s` @type ^`qa.b` := v5 @kind object;
  #L4294cc.  v7:= 4I;
  #L4294ce.  v7:= new `qa.b`[v7];
  #L4294d2.  v7[v2]:= v0 @kind object;
  #L4294d6.  v7[v4]:= v1 @kind object;
  #L4294da.  v7[v6]:= v3 @kind object;
  #L4294de.  v7[v8]:= v5 @kind object;
  #L4294e2.  `@@qa.b.t` @type ^`qa.b`[] := v7 @kind object;
  #L4294e6.  return @kind void;
}
procedure `void` `<init>`(`qa.b` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lqa/b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4294f8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4294fe.  v0.`qa.b.o` @type ^`java.lang.String` := v3 @kind object;
  #L429502.  return @kind void;
}
procedure `qa.b` `c`(`java.lang.String` v5 @kind object) @signature `Lqa/b;.c:(Ljava/lang/String;)Lqa/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4293f4.  call temp:= `values`() @signature `Lqa/b;.values:()[Lqa/b;` @kind static;
  #L4293fa.  v0:= temp @kind object;
  #L4293fc.  v1:= length @variable v0;
  #L4293fe.  v2:= 0I;
  #L429400.  if v2 >= v1 then goto L429420;
  #L429404.  v3:= v0[v2] @kind object;
  #L429408.  v4:= v3.`qa.b.o` @type ^`java.lang.String` @kind object;
  #L42940c.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L429412.  v4:= temp;
  #L429414.  if v4 == 0 then goto L42941a;
  #L429418.  return v3 @kind object;
  #L42941a.  v2:= v2 + 1;
  #L42941e.  goto L429400;
  #L429420.  v5:= 0I;
  #L429422.  return v5 @kind object;
}
procedure `qa.b` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lqa/b;.valueOf:(Ljava/lang/String;)Lqa/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L429434.  v0:= constclass @type ^`qa.b` @kind object;
  #L429438.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L42943e.  v1:= temp @kind object;
  #L429440.  v1:= (`qa.b`) v1 @kind object;
  #L429444.  return v1 @kind object;
}
procedure `qa.b`[] `values`() @signature `Lqa/b;.values:()[Lqa/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L429458.  v0:= `@@qa.b.t` @type ^`qa.b`[] @kind object;
  #L42945c.  call temp:= `clone`(v0) @signature `[Lqa/b;.clone:()Ljava/lang/Object;` @kind virtual;
  #L429462.  v0:= temp @kind object;
  #L429464.  v0:= (`qa.b`[]) v0 @kind object;
  #L429468.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`qa.b` v1 @kind this) @signature `Lqa/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4293dc.  v0:= v1.`qa.b.o` @type ^`java.lang.String` @kind object;
  #L4293e0.  return v0 @kind object;
}
