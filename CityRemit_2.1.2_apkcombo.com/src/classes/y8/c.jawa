record `y8.c` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.Comparator` @kind interface {
}
global `y8.c` `@@y8.c.o` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ly8/c;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f7930.  v0:= new `y8.c`;
  #L4f7934.  call `<init>`(v0) @signature `Ly8/c;.<init>:()V` @kind direct;
  #L4f793a.  `@@y8.c.o` @type ^`y8.c` := v0 @kind object;
  #L4f793e.  return @kind void;
}
procedure `void` `<init>`(`y8.c` v0 @kind this) @signature `Ly8/c;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4f7950.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f7956.  return @kind void;
}
procedure `int` `compare`(`y8.c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Ly8/c;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4f78f4.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L4f78f8.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L4f78fc.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4f7902.  v1:= temp @kind object;
  #L4f7904.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L4f7908.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4f790e.  v2:= temp @kind object;
  #L4f7910.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L4f7914.  call temp:= `compareTo`(v1, v2) @signature `Ljava/lang/Integer;.compareTo:(Ljava/lang/Integer;)I` @kind virtual;
  #L4f791a.  v1:= temp;
  #L4f791c.  return v1;
}
