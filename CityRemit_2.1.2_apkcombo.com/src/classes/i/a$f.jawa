record `i.a$f` @kind class @AccessFlag  extends `android.animation.TimeInterpolator` @kind interface {
  `int`[] `i.a$f.a` @AccessFlag PRIVATE;
  `int` `i.a$f.b` @AccessFlag PRIVATE;
  `int` `i.a$f.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`i.a$f` v0 @kind this, `android.graphics.drawable.AnimationDrawable` v1 @kind object, `boolean` v2 ) @signature `Li/a$f;.<init>:(Landroid/graphics/drawable/AnimationDrawable;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L34736c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L347372.  call temp:= `b`(v0, v1, v2) @signature `Li/a$f;.b:(Landroid/graphics/drawable/AnimationDrawable;Z)I` @kind virtual;
  #L347378.  return @kind void;
}
procedure `int` `a`(`i.a$f` v1 @kind this) @signature `Li/a$f;.a:()I` @AccessFlag  {
    temp;
    v0;

  #L3472ec.  v0:= v1.`i.a$f.c` @type ^`int`;
  #L3472f0.  return v0;
}
procedure `int` `b`(`i.a$f` v5 @kind this, `android.graphics.drawable.AnimationDrawable` v6 @kind object, `boolean` v7 ) @signature `Li/a$f;.b:(Landroid/graphics/drawable/AnimationDrawable;Z)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L347304.  call temp:= `getNumberOfFrames`(v6) @signature `Landroid/graphics/drawable/AnimationDrawable;.getNumberOfFrames:()I` @kind virtual;
  #L34730a.  v0:= temp;
  #L34730c.  v5.`i.a$f.b` @type ^`int` := v0;
  #L347310.  v1:= v5.`i.a$f.a` @type ^`int`[] @kind object;
  #L347314.  if v1 == 0 then goto L34731e;
  #L347318.  v1:= length @variable v1;
  #L34731a.  if v1 >= v0 then goto L347326;
  #L34731e.  v1:= new `int`[v0];
  #L347322.  v5.`i.a$f.a` @type ^`int`[] := v1 @kind object;
  #L347326.  v1:= v5.`i.a$f.a` @type ^`int`[] @kind object;
  #L34732a.  v2:= 0I;
  #L34732c.  v3:= 0I;
  #L34732e.  if v2 >= v0 then goto L347356;
  #L347332.  if v7 == 0 then goto L347340;
  #L347336.  v4:= v0 - v2 @kind int;
  #L34733a.  v4:= v4 + -1;
  #L34733e.  goto L347342;
  #L347340.  v4:= v2;
  #L347342.  call temp:= `getDuration`(v6, v4) @signature `Landroid/graphics/drawable/AnimationDrawable;.getDuration:(I)I` @kind virtual;
  #L347348.  v4:= temp;
  #L34734a.  v1[v2]:= v4;
  #L34734e.  v3:= v3 + v4 @kind int;
  #L347350.  v2:= v2 + 1;
  #L347354.  goto L34732e;
  #L347356.  v5.`i.a$f.c` @type ^`int` := v3;
  #L34735a.  return v3;
}
procedure `float` `getInterpolation`(`i.a$f` v4 @kind this, `float` v5 ) @signature `Li/a$f;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34728c.  v0:= v4.`i.a$f.c` @type ^`int`;
  #L347290.  v0:= (`float`) v0 @kind i2f;
  #L347292.  v5:= v5 * v0 @kind float;
  #L347296.  v0:= 0.5F;
  #L34729a.  v5:= v5 + v0 @kind float;
  #L34729c.  v5:= (`int`) v5 @kind f2i;
  #L34729e.  v0:= v4.`i.a$f.b` @type ^`int`;
  #L3472a2.  v1:= v4.`i.a$f.a` @type ^`int`[] @kind object;
  #L3472a6.  v2:= 0I;
  #L3472a8.  if v2 >= v0 then goto L3472c0;
  #L3472ac.  v3:= v1[v2];
  #L3472b0.  if v5 < v3 then goto L3472c0;
  #L3472b4.  v3:= v1[v2];
  #L3472b8.  v5:= v5 - v3 @kind int;
  #L3472ba.  v2:= v2 + 1;
  #L3472be.  goto L3472a8;
  #L3472c0.  if v2 >= v0 then goto L3472d0;
  #L3472c4.  v5:= (`float`) v5 @kind i2f;
  #L3472c6.  v1:= v4.`i.a$f.c` @type ^`int`;
  #L3472ca.  v1:= (`float`) v1 @kind i2f;
  #L3472cc.  v5:= v5 / v1 @kind float;
  #L3472ce.  goto L3472d2;
  #L3472d0.  v5:= 0I;
  #L3472d2.  v1:= (`float`) v2 @kind i2f;
  #L3472d4.  v0:= (`float`) v0 @kind i2f;
  #L3472d6.  v1:= v1 / v0 @kind float;
  #L3472d8.  v1:= v1 + v5 @kind float;
  #L3472da.  return v1;
}
