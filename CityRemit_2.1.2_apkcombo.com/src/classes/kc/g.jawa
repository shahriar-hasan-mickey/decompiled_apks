record `kc.g` @kind class @AccessFlag PUBLIC_FINAL extends `gc.s$a` @kind interface {
  `java.util.List` `kc.g.a` @AccessFlag PRIVATE_FINAL;
  `jc.g` `kc.g.b` @AccessFlag PRIVATE_FINAL;
  `kc.c` `kc.g.c` @AccessFlag PRIVATE_FINAL;
  `jc.c` `kc.g.d` @AccessFlag PRIVATE_FINAL;
  `int` `kc.g.e` @AccessFlag PRIVATE_FINAL;
  `gc.x` `kc.g.f` @AccessFlag PRIVATE_FINAL;
  `gc.d` `kc.g.g` @AccessFlag PRIVATE_FINAL;
  `gc.o` `kc.g.h` @AccessFlag PRIVATE_FINAL;
  `int` `kc.g.i` @AccessFlag PRIVATE_FINAL;
  `int` `kc.g.j` @AccessFlag PRIVATE_FINAL;
  `int` `kc.g.k` @AccessFlag PRIVATE_FINAL;
  `int` `kc.g.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kc.g` v0 @kind this, `java.util.List` v1 @kind object, `jc.g` v2 @kind object, `kc.c` v3 @kind object, `jc.c` v4 @kind object, `int` v5 , `gc.x` v6 @kind object, `gc.d` v7 @kind object, `gc.o` v8 @kind object, `int` v9 , `int` v10 , `int` v11 ) @signature `Lkc/g;.<init>:(Ljava/util/List;Ljc/g;Lkc/c;Ljc/c;ILgc/x;Lgc/d;Lgc/o;III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b4be0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b4be6.  v0.`kc.g.a` @type ^`java.util.List` := v1 @kind object;
  #L3b4bea.  v0.`kc.g.d` @type ^`jc.c` := v4 @kind object;
  #L3b4bee.  v0.`kc.g.b` @type ^`jc.g` := v2 @kind object;
  #L3b4bf2.  v0.`kc.g.c` @type ^`kc.c` := v3 @kind object;
  #L3b4bf6.  v0.`kc.g.e` @type ^`int` := v5;
  #L3b4bfa.  v0.`kc.g.f` @type ^`gc.x` := v6 @kind object;
  #L3b4bfe.  v0.`kc.g.g` @type ^`gc.d` := v7 @kind object;
  #L3b4c02.  v0.`kc.g.h` @type ^`gc.o` := v8 @kind object;
  #L3b4c06.  v0.`kc.g.i` @type ^`int` := v9;
  #L3b4c0a.  v0.`kc.g.j` @type ^`int` := v10;
  #L3b4c0e.  v0.`kc.g.k` @type ^`int` := v11;
  #L3b4c12.  return @kind void;
}
procedure `gc.z` `a`(`kc.g` v3 @kind this, `gc.x` v4 @kind object) @signature `Lkc/g;.a:(Lgc/x;)Lgc/z;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b490c.  v0:= v3.`kc.g.b` @type ^`jc.g` @kind object;
  #L3b4910.  v1:= v3.`kc.g.c` @type ^`kc.c` @kind object;
  #L3b4914.  v2:= v3.`kc.g.d` @type ^`jc.c` @kind object;
  #L3b4918.  call temp:= `j`(v3, v4, v0, v1, v2) @signature `Lkc/g;.j:(Lgc/x;Ljc/g;Lkc/c;Ljc/c;)Lgc/z;` @kind virtual;
  #L3b491e.  v4:= temp @kind object;
  #L3b4920.  return v4 @kind object;
}
procedure `int` `b`(`kc.g` v1 @kind this) @signature `Lkc/g;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b4b68.  v0:= v1.`kc.g.i` @type ^`int`;
  #L3b4b6c.  return v0;
}
procedure `int` `c`(`kc.g` v1 @kind this) @signature `Lkc/g;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b4b80.  v0:= v1.`kc.g.j` @type ^`int`;
  #L3b4b84.  return v0;
}
procedure `int` `d`(`kc.g` v1 @kind this) @signature `Lkc/g;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b4b98.  v0:= v1.`kc.g.k` @type ^`int`;
  #L3b4b9c.  return v0;
}
procedure `gc.x` `e`(`kc.g` v1 @kind this) @signature `Lkc/g;.e:()Lgc/x;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b48f4.  v0:= v1.`kc.g.f` @type ^`gc.x` @kind object;
  #L3b48f8.  return v0 @kind object;
}
procedure `gc.d` `f`(`kc.g` v1 @kind this) @signature `Lkc/g;.f:()Lgc/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b48ac.  v0:= v1.`kc.g.g` @type ^`gc.d` @kind object;
  #L3b48b0.  return v0 @kind object;
}
procedure `gc.h` `g`(`kc.g` v1 @kind this) @signature `Lkc/g;.g:()Lgc/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b48c4.  v0:= v1.`kc.g.d` @type ^`jc.c` @kind object;
  #L3b48c8.  return v0 @kind object;
}
procedure `gc.o` `h`(`kc.g` v1 @kind this) @signature `Lkc/g;.h:()Lgc/o;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b48dc.  v0:= v1.`kc.g.h` @type ^`gc.o` @kind object;
  #L3b48e0.  return v0 @kind object;
}
procedure `kc.c` `i`(`kc.g` v1 @kind this) @signature `Lkc/g;.i:()Lkc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b4bc8.  v0:= v1.`kc.g.c` @type ^`kc.c` @kind object;
  #L3b4bcc.  return v0 @kind object;
}
procedure `gc.z` `j`(`kc.g` v17 @kind this, `gc.x` v18 @kind object, `jc.g` v19 @kind object, `kc.c` v20 @kind object, `jc.c` v21 @kind object) @signature `Lkc/g;.j:(Lgc/x;Ljc/g;Lkc/c;Ljc/c;)Lgc/z;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L3b4934.  v0:= v17 @kind object;
  #L3b4938.  v1:= v0.`kc.g.e` @type ^`int`;
  #L3b493c.  v2:= v0.`kc.g.a` @type ^`java.util.List` @kind object;
  #L3b4940.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3b4946.  v2:= temp;
  #L3b4948.  if v1 >= v2 then goto L3b4b4a;
  #L3b494c.  v1:= v0.`kc.g.l` @type ^`int`;
  #L3b4950.  v2:= 1I;
  #L3b4952.  v1:= v1 + v2 @kind int;
  #L3b4954.  v0.`kc.g.l` @type ^`int` := v1;
  #L3b4958.  v1:= v0.`kc.g.c` @type ^`kc.c` @kind object;
  #L3b495c.  v3:= "network interceptor " @kind object;
  #L3b4960.  if v1 == 0 then goto L3b49c4;
  #L3b4964.  v1:= v0.`kc.g.d` @type ^`jc.c` @kind object;
  #L3b4968.  call temp:= `h`(v18) @signature `Lgc/x;.h:()Lgc/r;` @kind virtual;
  #L3b496e.  v4:= temp @kind object;
  #L3b4970.  call temp:= `s`(v1, v4) @signature `Ljc/c;.s:(Lgc/r;)Z` @kind virtual;
  #L3b4976.  v1:= temp;
  #L3b4978.  if v1 == 0 then goto L3b497e;
  #L3b497c.  goto L3b49c4;
  #L3b497e.  v1:= new `java.lang.IllegalStateException`;
  #L3b4982.  v4:= new `java.lang.StringBuilder`;
  #L3b4986.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b498c.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4992.  v3:= v0.`kc.g.a` @type ^`java.util.List` @kind object;
  #L3b4996.  v5:= v0.`kc.g.e` @type ^`int`;
  #L3b499a.  v5:= v5 - v2 @kind int;
  #L3b499c.  call temp:= `get`(v3, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3b49a2.  v2:= temp @kind object;
  #L3b49a4.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b49aa.  v2:= " must retain the same host and port" @kind object;
  #L3b49ae.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b49b4.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b49ba.  v2:= temp @kind object;
  #L3b49bc.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b49c2.  throw v1;
  #L3b49c4.  v1:= v0.`kc.g.c` @type ^`kc.c` @kind object;
  #L3b49c8.  v4:= " must call proceed() exactly once" @kind object;
  #L3b49cc.  if v1 == 0 then goto L3b4a1c;
  #L3b49d0.  v1:= v0.`kc.g.l` @type ^`int`;
  #L3b49d4.  if v1 > v2 then goto L3b49da;
  #L3b49d8.  goto L3b4a1c;
  #L3b49da.  v1:= new `java.lang.IllegalStateException`;
  #L3b49de.  v5:= new `java.lang.StringBuilder`;
  #L3b49e2.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b49e8.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b49ee.  v3:= v0.`kc.g.a` @type ^`java.util.List` @kind object;
  #L3b49f2.  v6:= v0.`kc.g.e` @type ^`int`;
  #L3b49f6.  v6:= v6 - v2 @kind int;
  #L3b49f8.  call temp:= `get`(v3, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3b49fe.  v2:= temp @kind object;
  #L3b4a00.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4a06.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4a0c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b4a12.  v2:= temp @kind object;
  #L3b4a14.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b4a1a.  throw v1;
  #L3b4a1c.  v1:= new `kc.g`;
  #L3b4a20.  v6:= v0.`kc.g.a` @type ^`java.util.List` @kind object;
  #L3b4a24.  v5:= v0.`kc.g.e` @type ^`int`;
  #L3b4a28.  v10:= v5 + 1;
  #L3b4a2c.  v12:= v0.`kc.g.g` @type ^`gc.d` @kind object;
  #L3b4a30.  v13:= v0.`kc.g.h` @type ^`gc.o` @kind object;
  #L3b4a34.  v14:= v0.`kc.g.i` @type ^`int`;
  #L3b4a38.  v15:= v0.`kc.g.j` @type ^`int`;
  #L3b4a3c.  v11:= v0.`kc.g.k` @type ^`int`;
  #L3b4a40.  v5:= v1 @kind object;
  #L3b4a42.  v7:= v19 @kind object;
  #L3b4a46.  v8:= v20 @kind object;
  #L3b4a4a.  v9:= v21 @kind object;
  #L3b4a4e.  v16:= v11;
  #L3b4a52.  v11:= v18 @kind object;
  #L3b4a56.  call `<init>`(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lkc/g;.<init>:(Ljava/util/List;Ljc/g;Lkc/c;Ljc/c;ILgc/x;Lgc/d;Lgc/o;III)V` @kind direct;
  #L3b4a5c.  v5:= v0.`kc.g.a` @type ^`java.util.List` @kind object;
  #L3b4a60.  v6:= v0.`kc.g.e` @type ^`int`;
  #L3b4a64.  call temp:= `get`(v5, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3b4a6a.  v5:= temp @kind object;
  #L3b4a6c.  v5:= (`gc.s`) v5 @kind object;
  #L3b4a70.  call temp:= `a`(v5, v1) @signature `Lgc/s;.a:(Lgc/s$a;)Lgc/z;` @kind interface;
  #L3b4a76.  v6:= temp @kind object;
  #L3b4a78.  if v20 == 0 then goto L3b4acc;
  #L3b4a7c.  v7:= v0.`kc.g.e` @type ^`int`;
  #L3b4a80.  v7:= v7 + v2 @kind int;
  #L3b4a82.  v8:= v0.`kc.g.a` @type ^`java.util.List` @kind object;
  #L3b4a86.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3b4a8c.  v8:= temp;
  #L3b4a8e.  if v7 >= v8 then goto L3b4acc;
  #L3b4a92.  v1:= v1.`kc.g.l` @type ^`int`;
  #L3b4a96.  if v1 != v2 then goto L3b4a9c;
  #L3b4a9a.  goto L3b4acc;
  #L3b4a9c.  v1:= new `java.lang.IllegalStateException`;
  #L3b4aa0.  v2:= new `java.lang.StringBuilder`;
  #L3b4aa4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b4aaa.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4ab0.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4ab6.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4abc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b4ac2.  v2:= temp @kind object;
  #L3b4ac4.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b4aca.  throw v1;
  #L3b4acc.  v1:= "interceptor " @kind object;
  #L3b4ad0.  if v6 == 0 then goto L3b4b16;
  #L3b4ad4.  call temp:= `a`(v6) @signature `Lgc/z;.a:()Lgc/a0;` @kind virtual;
  #L3b4ada.  v2:= temp @kind object;
  #L3b4adc.  if v2 == 0 then goto L3b4ae2;
  #L3b4ae0.  return v6 @kind object;
  #L3b4ae2.  v2:= new `java.lang.IllegalStateException`;
  #L3b4ae6.  v3:= new `java.lang.StringBuilder`;
  #L3b4aea.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b4af0.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4af6.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4afc.  v1:= " returned a response with no body" @kind object;
  #L3b4b00.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4b06.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b4b0c.  v1:= temp @kind object;
  #L3b4b0e.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b4b14.  throw v2;
  #L3b4b16.  v2:= new `java.lang.NullPointerException`;
  #L3b4b1a.  v3:= new `java.lang.StringBuilder`;
  #L3b4b1e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b4b24.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4b2a.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4b30.  v1:= " returned null" @kind object;
  #L3b4b34.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4b3a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b4b40.  v1:= temp @kind object;
  #L3b4b42.  call `<init>`(v2, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b4b48.  throw v2;
  #L3b4b4a.  v1:= new `java.lang.AssertionError`;
  #L3b4b4e.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3b4b54.  throw v1;
}
procedure `jc.g` `k`(`kc.g` v1 @kind this) @signature `Lkc/g;.k:()Ljc/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b4bb0.  v0:= v1.`kc.g.b` @type ^`jc.g` @kind object;
  #L3b4bb4.  return v0 @kind object;
}
