record `kc.e` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<clinit>`() @signature `Lkc/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b46f8.  v0:= "\"\\" @kind object;
  #L3b46fc.  call temp:= `k`(v0) @signature `Lqc/f;.k:(Ljava/lang/String;)Lqc/f;` @kind static;
  #L3b4702.  v0:= "\t ,=" @kind object;
  #L3b4706.  call temp:= `k`(v0) @signature `Lqc/f;.k:(Ljava/lang/String;)Lqc/f;` @kind static;
  #L3b470c.  return @kind void;
}
procedure `long` `a`(`gc.q` v2 @kind object) @signature `Lkc/e;.a:(Lgc/q;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b4678.  v0:= "Content-Length" @kind object;
  #L3b467c.  call temp:= `c`(v2, v0) @signature `Lgc/q;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3b4682.  v2:= temp @kind object;
  #L3b4684.  call temp:= `h`(v2) @signature `Lkc/e;.h:(Ljava/lang/String;)J` @kind static;
  #L3b468a.  v0:= temp @kind wide;
  #L3b468c.  return v0 @kind wide;
}
procedure `long` `b`(`gc.z` v2 @kind object) @signature `Lkc/e;.b:(Lgc/z;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b46a0.  call temp:= `o`(v2) @signature `Lgc/z;.o:()Lgc/q;` @kind virtual;
  #L3b46a6.  v2:= temp @kind object;
  #L3b46a8.  call temp:= `a`(v2) @signature `Lkc/e;.a:(Lgc/q;)J` @kind static;
  #L3b46ae.  v0:= temp @kind wide;
  #L3b46b0.  return v0 @kind wide;
}
procedure `boolean` `c`(`gc.z` v8 @kind object) @signature `Lkc/e;.c:(Lgc/z;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3b4510.  call temp:= `E`(v8) @signature `Lgc/z;.E:()Lgc/x;` @kind virtual;
  #L3b4516.  v0:= temp @kind object;
  #L3b4518.  call temp:= `f`(v0) @signature `Lgc/x;.f:()Ljava/lang/String;` @kind virtual;
  #L3b451e.  v0:= temp @kind object;
  #L3b4520.  v1:= "HEAD" @kind object;
  #L3b4524.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b452a.  v0:= temp;
  #L3b452c.  v1:= 0I;
  #L3b452e.  if v0 == 0 then goto L3b4534;
  #L3b4532.  return v1;
  #L3b4534.  call temp:= `e`(v8) @signature `Lgc/z;.e:()I` @kind virtual;
  #L3b453a.  v0:= temp;
  #L3b453c.  v2:= 100I;
  #L3b4540.  v3:= 1I;
  #L3b4542.  if v0 < v2 then goto L3b454e;
  #L3b4546.  v2:= 200I;
  #L3b454a.  if v0 < v2 then goto L3b4560;
  #L3b454e.  v2:= 204I;
  #L3b4552.  if v0 == v2 then goto L3b4560;
  #L3b4556.  v2:= 304I;
  #L3b455a.  if v0 == v2 then goto L3b4560;
  #L3b455e.  return v3;
  #L3b4560.  call temp:= `b`(v8) @signature `Lkc/e;.b:(Lgc/z;)J` @kind static;
  #L3b4566.  v4:= temp @kind wide;
  #L3b4568.  v6:= -1L;
  #L3b456c.  v0:= lcmp(v4, v6);
  #L3b4570.  if v0 != 0 then goto L3b4594;
  #L3b4574.  v0:= "Transfer-Encoding" @kind object;
  #L3b4578.  call temp:= `i`(v8, v0) @signature `Lgc/z;.i:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3b457e.  v8:= temp @kind object;
  #L3b4580.  v0:= "chunked" @kind object;
  #L3b4584.  call temp:= `equalsIgnoreCase`(v0, v8) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3b458a.  v8:= temp;
  #L3b458c.  if v8 == 0 then goto L3b4592;
  #L3b4590.  goto L3b4594;
  #L3b4592.  return v1;
  #L3b4594.  return v3;
}
procedure `int` `d`(`java.lang.String` v3 @kind object, `int` v4 ) @signature `Lkc/e;.d:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3b45a8.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3b45ae.  v3:= temp @kind wide;
  #L3b45b0.  v0:= 2147483647L;
  #L3b45b6.  v2:= lcmp(v3, v0);
  #L3b45ba.  if v2 <= 0 then goto L3b45c6;
  #L3b45be.  v3:= 2147483647I;
  #L3b45c4.  return v3;
  #L3b45c6.  v0:= 0L;
  #L3b45ca.  v2:= lcmp(v3, v0);
  #L3b45ce.  if v2 >= 0 then goto L3b45d6;
  #L3b45d2.  v3:= 0I;
  #L3b45d4.  return v3;
  #L3b45d6.  v4:= (`int`) v3 @kind l2i;
  #L3b45d8.  return v4;
  catch `java.lang.NumberFormatException` @[L3b45a8..L3b45b0] goto L3b45d8;
}
procedure `void` `e`(`gc.l` v1 @kind object, `gc.r` v2 @kind object, `gc.q` v3 @kind object) @signature `Lkc/e;.e:(Lgc/l;Lgc/r;Lgc/q;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b4720.  v0:= `@@gc.l.a` @type ^`gc.l` @kind object;
  #L3b4724.  if v1 != v0 then goto L3b472a;
  #L3b4728.  return @kind void;
  #L3b472a.  call temp:= `f`(v2, v3) @signature `Lgc/k;.f:(Lgc/r;Lgc/q;)Ljava/util/List;` @kind static;
  #L3b4730.  v3:= temp @kind object;
  #L3b4732.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3b4738.  v0:= temp;
  #L3b473a.  if v0 == 0 then goto L3b4740;
  #L3b473e.  return @kind void;
  #L3b4740.  call `a`(v1, v2, v3) @signature `Lgc/l;.a:(Lgc/r;Ljava/util/List;)V` @kind interface;
  #L3b4746.  return @kind void;
}
procedure `int` `f`(`java.lang.String` v2 @kind object, `int` v3 , `java.lang.String` v4 @kind object) @signature `Lkc/e;.f:(Ljava/lang/String;ILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b45fc.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b4602.  v0:= temp;
  #L3b4604.  if v3 >= v0 then goto L3b4626;
  #L3b4608.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3b460e.  v0:= temp;
  #L3b4610.  call temp:= `indexOf`(v4, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3b4616.  v0:= temp;
  #L3b4618.  v1:= -1I;
  #L3b461a.  if v0 == v1 then goto L3b4620;
  #L3b461e.  goto L3b4626;
  #L3b4620.  v3:= v3 + 1;
  #L3b4624.  goto L3b45fc;
  #L3b4626.  return v3;
}
procedure `int` `g`(`java.lang.String` v2 @kind object, `int` v3 ) @signature `Lkc/e;.g:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b4638.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b463e.  v0:= temp;
  #L3b4640.  if v3 >= v0 then goto L3b4664;
  #L3b4644.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3b464a.  v0:= temp;
  #L3b464c.  v1:= 32I;
  #L3b4650.  if v0 == v1 then goto L3b465e;
  #L3b4654.  v1:= 9I;
  #L3b4658.  if v0 == v1 then goto L3b465e;
  #L3b465c.  goto L3b4664;
  #L3b465e.  v3:= v3 + 1;
  #L3b4662.  goto L3b4638;
  #L3b4664.  return v3;
}
procedure `long` `h`(`java.lang.String` v2 @kind object) @signature `Lkc/e;.h:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3b46c4.  v0:= -1L;
  #L3b46c8.  if v2 != 0 then goto L3b46ce;
  #L3b46cc.  return v0 @kind wide;
  #L3b46ce.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3b46d4.  v0:= temp @kind wide;
  #L3b46d6.  return v0 @kind wide;
  catch `java.lang.NumberFormatException` @[L3b46ce..L3b46d6] goto L3b46d6;
}
