record `kc.i` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`gc.x` v2 @kind object, `java.net.Proxy$Type` v3 @kind object) @signature `Lkc/i;.a:(Lgc/x;Ljava/net/Proxy$Type;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b4ca0.  v0:= new `java.lang.StringBuilder`;
  #L3b4ca4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b4caa.  call temp:= `f`(v2) @signature `Lgc/x;.f:()Ljava/lang/String;` @kind virtual;
  #L3b4cb0.  v1:= temp @kind object;
  #L3b4cb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4cb8.  v1:= 32I;
  #L3b4cbc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4cc2.  call temp:= `b`(v2, v3) @signature `Lkc/i;.b:(Lgc/x;Ljava/net/Proxy$Type;)Z` @kind static;
  #L3b4cc8.  v3:= temp;
  #L3b4cca.  call temp:= `h`(v2) @signature `Lgc/x;.h:()Lgc/r;` @kind virtual;
  #L3b4cd0.  v2:= temp @kind object;
  #L3b4cd2.  if v3 == 0 then goto L3b4cde;
  #L3b4cd6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4cdc.  goto L3b4cec;
  #L3b4cde.  call temp:= `c`(v2) @signature `Lkc/i;.c:(Lgc/r;)Ljava/lang/String;` @kind static;
  #L3b4ce4.  v2:= temp @kind object;
  #L3b4ce6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4cec.  v2:= " HTTP/1.1" @kind object;
  #L3b4cf0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4cf6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b4cfc.  v2:= temp @kind object;
  #L3b4cfe.  return v2 @kind object;
}
procedure `boolean` `b`(`gc.x` v0 @kind object, `java.net.Proxy$Type` v1 @kind object) @signature `Lkc/i;.b:(Lgc/x;Ljava/net/Proxy$Type;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3b4c74.  call temp:= `e`(v0) @signature `Lgc/x;.e:()Z` @kind virtual;
  #L3b4c7a.  v0:= temp;
  #L3b4c7c.  if v0 != 0 then goto L3b4c8c;
  #L3b4c80.  v0:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L3b4c84.  if v1 != v0 then goto L3b4c8c;
  #L3b4c88.  v0:= 1I;
  #L3b4c8a.  goto L3b4c8e;
  #L3b4c8c.  v0:= 0I;
  #L3b4c8e.  return v0;
}
procedure `java.lang.String` `c`(`gc.r` v2 @kind object) @signature `Lkc/i;.c:(Lgc/r;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b4d10.  call temp:= `g`(v2) @signature `Lgc/r;.g:()Ljava/lang/String;` @kind virtual;
  #L3b4d16.  v0:= temp @kind object;
  #L3b4d18.  call temp:= `i`(v2) @signature `Lgc/r;.i:()Ljava/lang/String;` @kind virtual;
  #L3b4d1e.  v2:= temp @kind object;
  #L3b4d20.  if v2 == 0 then goto L3b4d4c;
  #L3b4d24.  v1:= new `java.lang.StringBuilder`;
  #L3b4d28.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b4d2e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4d34.  v0:= 63I;
  #L3b4d38.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4d3e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b4d44.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b4d4a.  v0:= temp @kind object;
  #L3b4d4c.  return v0 @kind object;
}
