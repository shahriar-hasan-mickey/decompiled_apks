record `kc.k` @kind class @AccessFlag PUBLIC_FINAL {
  `gc.v` `kc.k.a` @AccessFlag PUBLIC_FINAL;
  `int` `kc.k.b` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `kc.k.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kc.k` v0 @kind this, `gc.v` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lkc/k;.<init>:(Lgc/v;ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b57a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b57a6.  v0.`kc.k.a` @type ^`gc.v` := v1 @kind object;
  #L3b57aa.  v0.`kc.k.b` @type ^`int` := v2;
  #L3b57ae.  v0.`kc.k.c` @type ^`java.lang.String` := v3 @kind object;
  #L3b57b2.  return @kind void;
}
procedure `kc.k` `a`(`java.lang.String` v8 @kind object) @signature `Lkc/k;.a:(Ljava/lang/String;)Lkc/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3b55bc.  v0:= "HTTP/1." @kind object;
  #L3b55c0.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3b55c6.  v0:= temp;
  #L3b55c8.  v1:= 32I;
  #L3b55cc.  v2:= 4I;
  #L3b55ce.  v3:= 9I;
  #L3b55d2.  v4:= "Unexpected status line: " @kind object;
  #L3b55d6.  if v0 == 0 then goto L3b566e;
  #L3b55da.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b55e0.  v0:= temp;
  #L3b55e2.  if v0 < v3 then goto L3b5644;
  #L3b55e6.  v0:= 8I;
  #L3b55ea.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3b55f0.  v0:= temp;
  #L3b55f2.  if v0 != v1 then goto L3b5644;
  #L3b55f6.  v0:= 7I;
  #L3b55f8.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3b55fe.  v0:= temp;
  #L3b5600.  v0:= v0 + -48;
  #L3b5604.  if v0 != 0 then goto L3b560e;
  #L3b5608.  v0:= `@@gc.v.p` @type ^`gc.v` @kind object;
  #L3b560c.  goto L3b5684;
  #L3b560e.  v5:= 1I;
  #L3b5610.  if v0 != v5 then goto L3b561a;
  #L3b5614.  v0:= `@@gc.v.q` @type ^`gc.v` @kind object;
  #L3b5618.  goto L3b5684;
  #L3b561a.  v0:= new `java.net.ProtocolException`;
  #L3b561e.  v1:= new `java.lang.StringBuilder`;
  #L3b5622.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b5628.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b562e.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b5634.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b563a.  v8:= temp @kind object;
  #L3b563c.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b5642.  throw v0;
  #L3b5644.  v0:= new `java.net.ProtocolException`;
  #L3b5648.  v1:= new `java.lang.StringBuilder`;
  #L3b564c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b5652.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b5658.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b565e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b5664.  v8:= temp @kind object;
  #L3b5666.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b566c.  throw v0;
  #L3b566e.  v0:= "ICY " @kind object;
  #L3b5672.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3b5678.  v0:= temp;
  #L3b567a.  if v0 == 0 then goto L3b5756;
  #L3b567e.  v0:= `@@gc.v.p` @type ^`gc.v` @kind object;
  #L3b5682.  v3:= 4I;
  #L3b5684.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b568a.  v5:= temp;
  #L3b568c.  v6:= v3 + 3;
  #L3b5690.  if v5 < v6 then goto L3b572c;
  #L3b5694.  call temp:= `substring`(v8, v3, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3b569a.  v5:= temp @kind object;
  #L3b569c.  call temp:= `parseInt`(v5) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3b56a2.  v5:= temp;
  #L3b56a4.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b56aa.  v7:= temp;
  #L3b56ac.  if v7 <= v6 then goto L3b56f2;
  #L3b56b0.  call temp:= `charAt`(v8, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3b56b6.  v6:= temp;
  #L3b56b8.  if v6 != v1 then goto L3b56c8;
  #L3b56bc.  v3:= v3 + v2 @kind int;
  #L3b56be.  call temp:= `substring`(v8, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3b56c4.  v8:= temp @kind object;
  #L3b56c6.  goto L3b56f6;
  #L3b56c8.  v0:= new `java.net.ProtocolException`;
  #L3b56cc.  v1:= new `java.lang.StringBuilder`;
  #L3b56d0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b56d6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b56dc.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b56e2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b56e8.  v8:= temp @kind object;
  #L3b56ea.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b56f0.  throw v0;
  #L3b56f2.  v8:= "" @kind object;
  #L3b56f6.  v1:= new `kc.k`;
  #L3b56fa.  call `<init>`(v1, v0, v5, v8) @signature `Lkc/k;.<init>:(Lgc/v;ILjava/lang/String;)V` @kind direct;
  #L3b5700.  return v1 @kind object;
  #L3b5702.  v0:= new `java.net.ProtocolException`;
  #L3b5706.  v1:= new `java.lang.StringBuilder`;
  #L3b570a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b5710.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b5716.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b571c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b5722.  v8:= temp @kind object;
  #L3b5724.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b572a.  throw v0;
  #L3b572c.  v0:= new `java.net.ProtocolException`;
  #L3b5730.  v1:= new `java.lang.StringBuilder`;
  #L3b5734.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b573a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b5740.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b5746.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b574c.  v8:= temp @kind object;
  #L3b574e.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b5754.  throw v0;
  #L3b5756.  v0:= new `java.net.ProtocolException`;
  #L3b575a.  v1:= new `java.lang.StringBuilder`;
  #L3b575e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b5764.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b576a.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b5770.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b5776.  v8:= temp @kind object;
  #L3b5778.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b577e.  throw v0;
  catch `java.lang.NumberFormatException` @[L3b5694..L3b56a4] goto L3b5702;
}
procedure `java.lang.String` `toString`(`kc.k` v3 @kind this) @signature `Lkc/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3b5550.  v0:= new `java.lang.StringBuilder`;
  #L3b5554.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b555a.  v1:= v3.`kc.k.a` @type ^`gc.v` @kind object;
  #L3b555e.  v2:= `@@gc.v.p` @type ^`gc.v` @kind object;
  #L3b5562.  if v1 != v2 then goto L3b556c;
  #L3b5566.  v1:= "HTTP/1.0" @kind object;
  #L3b556a.  goto L3b5570;
  #L3b556c.  v1:= "HTTP/1.1" @kind object;
  #L3b5570.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b5576.  v1:= 32I;
  #L3b557a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b5580.  v2:= v3.`kc.k.b` @type ^`int`;
  #L3b5584.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b558a.  v2:= v3.`kc.k.c` @type ^`java.lang.String` @kind object;
  #L3b558e.  if v2 == 0 then goto L3b55a2;
  #L3b5592.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b5598.  v1:= v3.`kc.k.c` @type ^`java.lang.String` @kind object;
  #L3b559c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b55a2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b55a8.  v0:= temp @kind object;
  #L3b55aa.  return v0 @kind object;
}
