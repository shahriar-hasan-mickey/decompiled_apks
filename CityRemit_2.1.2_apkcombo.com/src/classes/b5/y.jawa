record `b5.y` @kind class @AccessFlag FINAL extends `b5.d$a` @kind class {
  `int` `b5.y.a` @AccessFlag PRIVATE;
  `boolean` `b5.y.b` @AccessFlag PRIVATE;
  `byte` `b5.y.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`b5.y` v0 @kind this) @signature `Lb5/y;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1f1724.  call `<init>`(v0) @signature `Lb5/d$a;.<init>:()V` @kind direct;
  #L1f172a.  return @kind void;
}
procedure `b5.d` `a`(`b5.y` v4 @kind this) @signature `Lb5/y;.a:()Lb5/d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f1654.  v0:= v4.`b5.y.c` @type ^`byte` @kind byte;
  #L1f1658.  v1:= 3I;
  #L1f165a.  if v0 == v1 then goto L1f16b4;
  #L1f165e.  v0:= new `java.lang.StringBuilder`;
  #L1f1662.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f1668.  v1:= v4.`b5.y.c` @type ^`byte` @kind byte;
  #L1f166c.  v1:= v1 ^& 1;
  #L1f1670.  if v1 != 0 then goto L1f167e;
  #L1f1674.  v1:= " appUpdateType" @kind object;
  #L1f1678.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f167e.  v1:= v4.`b5.y.c` @type ^`byte` @kind byte;
  #L1f1682.  v1:= v1 ^& 2;
  #L1f1686.  if v1 != 0 then goto L1f1694;
  #L1f168a.  v1:= " allowAssetPackDeletion" @kind object;
  #L1f168e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f1694.  v1:= new `java.lang.IllegalStateException`;
  #L1f1698.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f169e.  v0:= temp @kind object;
  #L1f16a0.  v2:= "Missing required properties:" @kind object;
  #L1f16a4.  call temp:= `concat`(v2, v0) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1f16aa.  v0:= temp @kind object;
  #L1f16ac.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f16b2.  throw v1;
  #L1f16b4.  v0:= new `b5.a0`;
  #L1f16b8.  v1:= v4.`b5.y.a` @type ^`int`;
  #L1f16bc.  v2:= v4.`b5.y.b` @type ^`boolean` @kind boolean;
  #L1f16c0.  v3:= 0I;
  #L1f16c2.  call `<init>`(v0, v1, v2, v3) @signature `Lb5/a0;.<init>:(IZLb5/z;)V` @kind direct;
  #L1f16c8.  return v0 @kind object;
}
procedure `b5.d$a` `b`(`b5.y` v0 @kind this, `boolean` v1 ) @signature `Lb5/y;.b:(Z)Lb5/d$a;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1f16dc.  v0.`b5.y.b` @type ^`boolean` := v1 @kind boolean;
  #L1f16e0.  v1:= v0.`b5.y.c` @type ^`byte` @kind byte;
  #L1f16e4.  v1:= v1 ^| 2;
  #L1f16e8.  v1:= (`byte`) v1 @kind i2b;
  #L1f16ea.  v0.`b5.y.c` @type ^`byte` := v1 @kind byte;
  #L1f16ee.  return v0 @kind object;
}
procedure `b5.d$a` `c`(`b5.y` v0 @kind this, `int` v1 ) @signature `Lb5/y;.c:(I)Lb5/d$a;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1f1700.  v0.`b5.y.a` @type ^`int` := v1;
  #L1f1704.  v1:= v0.`b5.y.c` @type ^`byte` @kind byte;
  #L1f1708.  v1:= v1 ^| 1;
  #L1f170c.  v1:= (`byte`) v1 @kind i2b;
  #L1f170e.  v0.`b5.y.c` @type ^`byte` := v1 @kind byte;
  #L1f1712.  return v0 @kind object;
}
