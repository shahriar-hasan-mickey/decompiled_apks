record `b5.d` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`b5.d` v0 @kind this) @signature `Lb5/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1f07fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f0802.  return @kind void;
}
procedure `b5.d` `c`(`int` v0 ) @signature `Lb5/d;.c:(I)Lb5/d;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1f07ac.  call temp:= `d`(v0) @signature `Lb5/d;.d:(I)Lb5/d$a;` @kind static;
  #L1f07b2.  v0:= temp @kind object;
  #L1f07b4.  call temp:= `a`(v0) @signature `Lb5/d$a;.a:()Lb5/d;` @kind virtual;
  #L1f07ba.  v0:= temp @kind object;
  #L1f07bc.  return v0 @kind object;
}
procedure `b5.d$a` `d`(`int` v1 ) @signature `Lb5/d;.d:(I)Lb5/d$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1f07d0.  v0:= new `b5.y`;
  #L1f07d4.  call `<init>`(v0) @signature `Lb5/y;.<init>:()V` @kind direct;
  #L1f07da.  call temp:= `c`(v0, v1) @signature `Lb5/y;.c:(I)Lb5/d$a;` @kind virtual;
  #L1f07e0.  v1:= 0I;
  #L1f07e2.  call temp:= `b`(v0, v1) @signature `Lb5/d$a;.b:(Z)Lb5/d$a;` @kind virtual;
  #L1f07e8.  return v0 @kind object;
}
procedure `boolean` `a`() @signature `Lb5/d;.a:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `b`() @signature `Lb5/d;.b:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
