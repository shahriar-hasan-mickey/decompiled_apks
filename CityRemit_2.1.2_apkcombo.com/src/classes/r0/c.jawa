record `r0.c` @kind class @AccessFlag PUBLIC extends `r0.t` @kind interface {
  `ha.k$d` `r0.c.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`r0.c` v0 @kind this, `ha.k$d` v1 @kind object) @signature `Lr0/c;.<init>:(Lha/k$d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42f254.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42f25a.  v0.`r0.c.a` @type ^`ha.k$d` := v1 @kind object;
  #L42f25e.  return @kind void;
}
procedure `void` `a`(`r0.c` v3 @kind this, `q0.b` v4 @kind object) @signature `Lr0/c;.a:(Lq0/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42f270.  v0:= v3.`r0.c.a` @type ^`ha.k$d` @kind object;
  #L42f274.  call temp:= `toString`(v4) @signature `Lq0/b;.toString:()Ljava/lang/String;` @kind virtual;
  #L42f27a.  v1:= temp @kind object;
  #L42f27c.  call temp:= `c`(v4) @signature `Lq0/b;.c:()Ljava/lang/String;` @kind virtual;
  #L42f282.  v4:= temp @kind object;
  #L42f284.  v2:= 0I;
  #L42f286.  call `b`(v0, v1, v4, v2) @signature `Lha/k$d;.b:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L42f28c.  return @kind void;
}
procedure `void` `b`(`r0.c` v1 @kind this, `boolean` v2 ) @signature `Lr0/c;.b:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f2a0.  v0:= v1.`r0.c.a` @type ^`ha.k$d` @kind object;
  #L42f2a4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L42f2aa.  v2:= temp @kind object;
  #L42f2ac.  call `a`(v0, v2) @signature `Lha/k$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L42f2b2.  return @kind void;
}
