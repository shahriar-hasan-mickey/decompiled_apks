record `r0.n` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `r0.n` `@@r0.n.o` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `r0.n` `@@r0.n.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `r0.n`[] `@@r0.n.q` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lr0/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L42febc.  v0:= new `r0.n`;
  #L42fec0.  v1:= "reduced" @kind object;
  #L42fec4.  v2:= 0I;
  #L42fec6.  call `<init>`(v0, v1, v2) @signature `Lr0/n;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L42fecc.  `@@r0.n.o` @type ^`r0.n` := v0 @kind object;
  #L42fed0.  v1:= new `r0.n`;
  #L42fed4.  v3:= "precise" @kind object;
  #L42fed8.  v4:= 1I;
  #L42feda.  call `<init>`(v1, v3, v4) @signature `Lr0/n;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L42fee0.  `@@r0.n.p` @type ^`r0.n` := v1 @kind object;
  #L42fee4.  v3:= 2I;
  #L42fee6.  v3:= new `r0.n`[v3];
  #L42feea.  v3[v2]:= v0 @kind object;
  #L42feee.  v3[v4]:= v1 @kind object;
  #L42fef2.  `@@r0.n.q` @type ^`r0.n`[] := v3 @kind object;
  #L42fef6.  return @kind void;
}
procedure `void` `<init>`(`r0.n` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lr0/n;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L42ff08.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L42ff0e.  return @kind void;
}
procedure `r0.n` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lr0/n;.valueOf:(Ljava/lang/String;)Lr0/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42fe74.  v0:= constclass @type ^`r0.n` @kind object;
  #L42fe78.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L42fe7e.  v1:= temp @kind object;
  #L42fe80.  v1:= (`r0.n`) v1 @kind object;
  #L42fe84.  return v1 @kind object;
}
procedure `r0.n`[] `values`() @signature `Lr0/n;.values:()[Lr0/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42fe98.  v0:= `@@r0.n.q` @type ^`r0.n`[] @kind object;
  #L42fe9c.  call temp:= `clone`(v0) @signature `[Lr0/n;.clone:()Ljava/lang/Object;` @kind virtual;
  #L42fea2.  v0:= temp @kind object;
  #L42fea4.  v0:= (`r0.n`[]) v0 @kind object;
  #L42fea8.  return v0 @kind object;
}
