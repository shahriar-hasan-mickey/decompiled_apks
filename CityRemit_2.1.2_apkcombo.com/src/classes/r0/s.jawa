record `r0.s` @kind class @AccessFlag PUBLIC {
  `r0.l` `r0.s.a` @AccessFlag PRIVATE_FINAL;
  `long` `r0.s.b` @AccessFlag PRIVATE_FINAL;
  `long` `r0.s.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `r0.s.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`r0.s` v0 @kind this, `r0.l` v1 @kind object, `long` v2 , `long` v4 , `boolean` v6 ) @signature `Lr0/s;.<init>:(Lr0/l;JJZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4309d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4309d6.  v0.`r0.s.a` @type ^`r0.l` := v1 @kind object;
  #L4309da.  v0.`r0.s.b` @type ^`long` := v2 @kind wide;
  #L4309de.  v0.`r0.s.c` @type ^`long` := v4 @kind wide;
  #L4309e2.  v0.`r0.s.d` @type ^`boolean` := v6 @kind boolean;
  #L4309e6.  return @kind void;
}
procedure `r0.s` `e`(`java.util.Map` v12 @kind object) @signature `Lr0/s;.e:(Ljava/util/Map;)Lr0/s;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L4308c4.  if v12 != 0 then goto L4308e4;
  #L4308c8.  v12:= new `r0.s`;
  #L4308cc.  v1:= `@@r0.l.s` @type ^`r0.l` @kind object;
  #L4308d0.  v2:= 0L;
  #L4308d4.  v4:= 5000L;
  #L4308d8.  v6:= 0I;
  #L4308da.  v0:= v12 @kind object;
  #L4308dc.  call `<init>`(v0, v1, v2, v4, v6) @signature `Lr0/s;.<init>:(Lr0/l;JJZ)V` @kind direct;
  #L4308e2.  return v12 @kind object;
  #L4308e4.  v0:= "accuracy" @kind object;
  #L4308e8.  call temp:= `get`(v12, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4308ee.  v0:= temp @kind object;
  #L4308f0.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L4308f4.  v1:= "distanceFilter" @kind object;
  #L4308f8.  call temp:= `get`(v12, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4308fe.  v1:= temp @kind object;
  #L430900.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L430904.  v2:= "timeInterval" @kind object;
  #L430908.  call temp:= `get`(v12, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43090e.  v2:= temp @kind object;
  #L430910.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L430914.  v3:= "useMSLAltitude" @kind object;
  #L430918.  call temp:= `get`(v12, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43091e.  v12:= temp @kind object;
  #L430920.  v12:= (`java.lang.Boolean`) v12 @kind object;
  #L430924.  v3:= `@@r0.l.s` @type ^`r0.l` @kind object;
  #L430928.  v4:= 1I;
  #L43092a.  if v0 == 0 then goto L43096e;
  #L43092e.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L430934.  v0:= temp;
  #L430936.  if v0 == 0 then goto L43096a;
  #L43093a.  if v0 == v4 then goto L430964;
  #L43093e.  v5:= 2I;
  #L430940.  if v0 == v5 then goto L43095e;
  #L430944.  v5:= 3I;
  #L430946.  if v0 == v5 then goto L430958;
  #L43094a.  v5:= 5I;
  #L43094c.  if v0 == v5 then goto L430952;
  #L430950.  goto L43096e;
  #L430952.  v3:= `@@r0.l.t` @type ^`r0.l` @kind object;
  #L430956.  goto L43096e;
  #L430958.  v3:= `@@r0.l.r` @type ^`r0.l` @kind object;
  #L43095c.  goto L43096e;
  #L43095e.  v3:= `@@r0.l.q` @type ^`r0.l` @kind object;
  #L430962.  goto L43096e;
  #L430964.  v3:= `@@r0.l.p` @type ^`r0.l` @kind object;
  #L430968.  goto L43096e;
  #L43096a.  v3:= `@@r0.l.o` @type ^`r0.l` @kind object;
  #L43096e.  v6:= v3 @kind object;
  #L430970.  v0:= new `r0.s`;
  #L430974.  if v1 == 0 then goto L430984;
  #L430978.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L43097e.  v1:= temp;
  #L430980.  v7:= (`long`) v1 @kind i2l;
  #L430982.  goto L430988;
  #L430984.  v7:= 0L;
  #L430988.  if v2 == 0 then goto L430998;
  #L43098c.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L430992.  v1:= temp;
  #L430994.  v1:= (`long`) v1 @kind i2l;
  #L430996.  goto L43099c;
  #L430998.  v1:= 5000L;
  #L43099c.  v9:= v1 @kind wide;
  #L43099e.  if v12 == 0 then goto L4309b2;
  #L4309a2.  call temp:= `booleanValue`(v12) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L4309a8.  v12:= temp;
  #L4309aa.  if v12 == 0 then goto L4309b2;
  #L4309ae.  v11:= 1I;
  #L4309b0.  goto L4309b6;
  #L4309b2.  v4:= 0I;
  #L4309b4.  v11:= 0I;
  #L4309b6.  v5:= v0 @kind object;
  #L4309b8.  call `<init>`(v5, v6, v7, v9, v11) @signature `Lr0/s;.<init>:(Lr0/l;JJZ)V` @kind direct;
  #L4309be.  return v0 @kind object;
}
procedure `r0.l` `a`(`r0.s` v1 @kind this) @signature `Lr0/s;.a:()Lr0/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4308ac.  v0:= v1.`r0.s.a` @type ^`r0.l` @kind object;
  #L4308b0.  return v0 @kind object;
}
procedure `long` `b`(`r0.s` v2 @kind this) @signature `Lr0/s;.b:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43087c.  v0:= v2.`r0.s.b` @type ^`long` @kind wide;
  #L430880.  return v0 @kind wide;
}
procedure `long` `c`(`r0.s` v2 @kind this) @signature `Lr0/s;.c:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L430894.  v0:= v2.`r0.s.c` @type ^`long` @kind wide;
  #L430898.  return v0 @kind wide;
}
procedure `boolean` `d`(`r0.s` v1 @kind this) @signature `Lr0/s;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430864.  v0:= v1.`r0.s.d` @type ^`boolean` @kind boolean;
  #L430868.  return v0;
}
