record `z1.m$b` @kind class @AccessFlag PUBLIC_FINAL extends `android.os.Parcelable` @kind interface {
  `int` `z1.m$b.o` @AccessFlag PRIVATE;
  `java.util.UUID` `z1.m$b.p` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `z1.m$b.q` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `z1.m$b.r` @AccessFlag PUBLIC_FINAL;
  `byte`[] `z1.m$b.s` @AccessFlag PUBLIC_FINAL;
}
global `android.os.Parcelable$Creator` `@@z1.m$b.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lz1/m$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fd254.  v0:= new `z1.m$b$a`;
  #L4fd258.  call `<init>`(v0) @signature `Lz1/m$b$a;.<init>:()V` @kind direct;
  #L4fd25e.  `@@z1.m$b.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L4fd262.  return @kind void;
}
procedure `void` `<init>`(`z1.m$b` v5 @kind this, `android.os.Parcel` v6 @kind object) @signature `Lz1/m$b;.<init>:(Landroid/os/Parcel;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fd274.  call `<init>`(v5) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fd27a.  v0:= new `java.util.UUID`;
  #L4fd27e.  call temp:= `readLong`(v6) @signature `Landroid/os/Parcel;.readLong:()J` @kind virtual;
  #L4fd284.  v1:= temp @kind wide;
  #L4fd286.  call temp:= `readLong`(v6) @signature `Landroid/os/Parcel;.readLong:()J` @kind virtual;
  #L4fd28c.  v3:= temp @kind wide;
  #L4fd28e.  call `<init>`(v0, v1, v3) @signature `Ljava/util/UUID;.<init>:(JJ)V` @kind direct;
  #L4fd294.  v5.`z1.m$b.p` @type ^`java.util.UUID` := v0 @kind object;
  #L4fd298.  call temp:= `readString`(v6) @signature `Landroid/os/Parcel;.readString:()Ljava/lang/String;` @kind virtual;
  #L4fd29e.  v0:= temp @kind object;
  #L4fd2a0.  v5.`z1.m$b.q` @type ^`java.lang.String` := v0 @kind object;
  #L4fd2a4.  call temp:= `readString`(v6) @signature `Landroid/os/Parcel;.readString:()Ljava/lang/String;` @kind virtual;
  #L4fd2aa.  v0:= temp @kind object;
  #L4fd2ac.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fd2b2.  v0:= temp @kind object;
  #L4fd2b4.  v0:= (`java.lang.String`) v0 @kind object;
  #L4fd2b8.  v5.`z1.m$b.r` @type ^`java.lang.String` := v0 @kind object;
  #L4fd2bc.  call temp:= `createByteArray`(v6) @signature `Landroid/os/Parcel;.createByteArray:()[B` @kind virtual;
  #L4fd2c2.  v6:= temp @kind object;
  #L4fd2c4.  v5.`z1.m$b.s` @type ^`byte`[] := v6 @kind object;
  #L4fd2c8.  return @kind void;
}
procedure `void` `<init>`(`z1.m$b` v0 @kind this, `java.util.UUID` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `byte`[] v4 @kind object) @signature `Lz1/m$b;.<init>:(Ljava/util/UUID;Ljava/lang/String;Ljava/lang/String;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4fd2f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fd2fe.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fd304.  v1:= temp @kind object;
  #L4fd306.  v1:= (`java.util.UUID`) v1 @kind object;
  #L4fd30a.  v0.`z1.m$b.p` @type ^`java.util.UUID` := v1 @kind object;
  #L4fd30e.  v0.`z1.m$b.q` @type ^`java.lang.String` := v2 @kind object;
  #L4fd312.  call temp:= `e`(v3) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fd318.  v1:= temp @kind object;
  #L4fd31a.  v1:= (`java.lang.String`) v1 @kind object;
  #L4fd31e.  v0.`z1.m$b.r` @type ^`java.lang.String` := v1 @kind object;
  #L4fd322.  v0.`z1.m$b.s` @type ^`byte`[] := v4 @kind object;
  #L4fd326.  return @kind void;
}
procedure `void` `<init>`(`z1.m$b` v1 @kind this, `java.util.UUID` v2 @kind object, `java.lang.String` v3 @kind object, `byte`[] v4 @kind object) @signature `Lz1/m$b;.<init>:(Ljava/util/UUID;Ljava/lang/String;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fd2dc.  v0:= 0I;
  #L4fd2de.  call `<init>`(v1, v2, v0, v3, v4) @signature `Lz1/m$b;.<init>:(Ljava/util/UUID;Ljava/lang/String;Ljava/lang/String;[B)V` @kind direct;
  #L4fd2e4.  return @kind void;
}
procedure `boolean` `a`(`z1.m$b` v1 @kind this, `z1.m$b` v2 @kind object) @signature `Lz1/m$b;.a:(Lz1/m$b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd0b8.  call temp:= `c`(v1) @signature `Lz1/m$b;.c:()Z` @kind virtual;
  #L4fd0be.  v0:= temp;
  #L4fd0c0.  if v0 == 0 then goto L4fd0e4;
  #L4fd0c4.  call temp:= `c`(v2) @signature `Lz1/m$b;.c:()Z` @kind virtual;
  #L4fd0ca.  v0:= temp;
  #L4fd0cc.  if v0 != 0 then goto L4fd0e4;
  #L4fd0d0.  v2:= v2.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd0d4.  call temp:= `d`(v1, v2) @signature `Lz1/m$b;.d:(Ljava/util/UUID;)Z` @kind virtual;
  #L4fd0da.  v2:= temp;
  #L4fd0dc.  if v2 == 0 then goto L4fd0e4;
  #L4fd0e0.  v2:= 1I;
  #L4fd0e2.  goto L4fd0e6;
  #L4fd0e4.  v2:= 0I;
  #L4fd0e6.  return v2;
}
procedure `z1.m$b` `b`(`z1.m$b` v4 @kind this, `byte`[] v5 @kind object) @signature `Lz1/m$b;.b:([B)Lz1/m$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fd38c.  v0:= new `z1.m$b`;
  #L4fd390.  v1:= v4.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd394.  v2:= v4.`z1.m$b.q` @type ^`java.lang.String` @kind object;
  #L4fd398.  v3:= v4.`z1.m$b.r` @type ^`java.lang.String` @kind object;
  #L4fd39c.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lz1/m$b;.<init>:(Ljava/util/UUID;Ljava/lang/String;Ljava/lang/String;[B)V` @kind direct;
  #L4fd3a2.  return v0 @kind object;
}
procedure `boolean` `c`(`z1.m$b` v1 @kind this) @signature `Lz1/m$b;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd174.  v0:= v1.`z1.m$b.s` @type ^`byte`[] @kind object;
  #L4fd178.  if v0 == 0 then goto L4fd180;
  #L4fd17c.  v0:= 1I;
  #L4fd17e.  goto L4fd182;
  #L4fd180.  v0:= 0I;
  #L4fd182.  return v0;
}
procedure `boolean` `d`(`z1.m$b` v2 @kind this, `java.util.UUID` v3 @kind object) @signature `Lz1/m$b;.d:(Ljava/util/UUID;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fd194.  v0:= `@@v1.h.a` @type ^`java.util.UUID` @kind object;
  #L4fd198.  v1:= v2.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd19c.  call temp:= `equals`(v0, v1) @signature `Ljava/util/UUID;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fd1a2.  v0:= temp;
  #L4fd1a4.  if v0 != 0 then goto L4fd1be;
  #L4fd1a8.  v0:= v2.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd1ac.  call temp:= `equals`(v3, v0) @signature `Ljava/util/UUID;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fd1b2.  v3:= temp;
  #L4fd1b4.  if v3 == 0 then goto L4fd1ba;
  #L4fd1b8.  goto L4fd1be;
  #L4fd1ba.  v3:= 0I;
  #L4fd1bc.  goto L4fd1c0;
  #L4fd1be.  v3:= 1I;
  #L4fd1c0.  return v3;
}
procedure `int` `describeContents`(`z1.m$b` v1 @kind this) @signature `Lz1/m$b;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd1d4.  v0:= 0I;
  #L4fd1d6.  return v0;
}
procedure `boolean` `equals`(`z1.m$b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lz1/m$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fd0f8.  v0:= instanceof @variable v5 @type ^`z1.m$b` @kind boolean;
  #L4fd0fc.  v1:= 0I;
  #L4fd0fe.  if v0 != 0 then goto L4fd104;
  #L4fd102.  return v1;
  #L4fd104.  v0:= 1I;
  #L4fd106.  if v5 != v4 then goto L4fd10c;
  #L4fd10a.  return v0;
  #L4fd10c.  v5:= (`z1.m$b`) v5 @kind object;
  #L4fd110.  v2:= v4.`z1.m$b.q` @type ^`java.lang.String` @kind object;
  #L4fd114.  v3:= v5.`z1.m$b.q` @type ^`java.lang.String` @kind object;
  #L4fd118.  call temp:= `c`(v2, v3) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4fd11e.  v2:= temp;
  #L4fd120.  if v2 == 0 then goto L4fd162;
  #L4fd124.  v2:= v4.`z1.m$b.r` @type ^`java.lang.String` @kind object;
  #L4fd128.  v3:= v5.`z1.m$b.r` @type ^`java.lang.String` @kind object;
  #L4fd12c.  call temp:= `c`(v2, v3) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4fd132.  v2:= temp;
  #L4fd134.  if v2 == 0 then goto L4fd162;
  #L4fd138.  v2:= v4.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd13c.  v3:= v5.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd140.  call temp:= `c`(v2, v3) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4fd146.  v2:= temp;
  #L4fd148.  if v2 == 0 then goto L4fd162;
  #L4fd14c.  v2:= v4.`z1.m$b.s` @type ^`byte`[] @kind object;
  #L4fd150.  v5:= v5.`z1.m$b.s` @type ^`byte`[] @kind object;
  #L4fd154.  call temp:= `equals`(v2, v5) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L4fd15a.  v5:= temp;
  #L4fd15c.  if v5 == 0 then goto L4fd162;
  #L4fd160.  v1:= 1I;
  #L4fd162.  return v1;
}
procedure `int` `hashCode`(`z1.m$b` v2 @kind this) @signature `Lz1/m$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fd1e8.  v0:= v2.`z1.m$b.o` @type ^`int`;
  #L4fd1ec.  if v0 != 0 then goto L4fd23e;
  #L4fd1f0.  v0:= v2.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd1f4.  call temp:= `hashCode`(v0) @signature `Ljava/util/UUID;.hashCode:()I` @kind virtual;
  #L4fd1fa.  v0:= temp;
  #L4fd1fc.  v0:= v0 * 31;
  #L4fd200.  v1:= v2.`z1.m$b.q` @type ^`java.lang.String` @kind object;
  #L4fd204.  if v1 != 0 then goto L4fd20c;
  #L4fd208.  v1:= 0I;
  #L4fd20a.  goto L4fd214;
  #L4fd20c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4fd212.  v1:= temp;
  #L4fd214.  v0:= v0 + v1 @kind int;
  #L4fd216.  v0:= v0 * 31;
  #L4fd21a.  v1:= v2.`z1.m$b.r` @type ^`java.lang.String` @kind object;
  #L4fd21e.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4fd224.  v1:= temp;
  #L4fd226.  v0:= v0 + v1 @kind int;
  #L4fd228.  v0:= v0 * 31;
  #L4fd22c.  v1:= v2.`z1.m$b.s` @type ^`byte`[] @kind object;
  #L4fd230.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L4fd236.  v1:= temp;
  #L4fd238.  v0:= v0 + v1 @kind int;
  #L4fd23a.  v2.`z1.m$b.o` @type ^`int` := v0;
  #L4fd23e.  v0:= v2.`z1.m$b.o` @type ^`int`;
  #L4fd242.  return v0;
}
procedure `void` `writeToParcel`(`z1.m$b` v2 @kind this, `android.os.Parcel` v3 @kind object, `int` v4 ) @signature `Lz1/m$b;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fd338.  v4:= v2.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd33c.  call temp:= `getMostSignificantBits`(v4) @signature `Ljava/util/UUID;.getMostSignificantBits:()J` @kind virtual;
  #L4fd342.  v0:= temp @kind wide;
  #L4fd344.  call `writeLong`(v3, v0) @signature `Landroid/os/Parcel;.writeLong:(J)V` @kind virtual;
  #L4fd34a.  v4:= v2.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd34e.  call temp:= `getLeastSignificantBits`(v4) @signature `Ljava/util/UUID;.getLeastSignificantBits:()J` @kind virtual;
  #L4fd354.  v0:= temp @kind wide;
  #L4fd356.  call `writeLong`(v3, v0) @signature `Landroid/os/Parcel;.writeLong:(J)V` @kind virtual;
  #L4fd35c.  v4:= v2.`z1.m$b.q` @type ^`java.lang.String` @kind object;
  #L4fd360.  call `writeString`(v3, v4) @signature `Landroid/os/Parcel;.writeString:(Ljava/lang/String;)V` @kind virtual;
  #L4fd366.  v4:= v2.`z1.m$b.r` @type ^`java.lang.String` @kind object;
  #L4fd36a.  call `writeString`(v3, v4) @signature `Landroid/os/Parcel;.writeString:(Ljava/lang/String;)V` @kind virtual;
  #L4fd370.  v4:= v2.`z1.m$b.s` @type ^`byte`[] @kind object;
  #L4fd374.  call `writeByteArray`(v3, v4) @signature `Landroid/os/Parcel;.writeByteArray:([B)V` @kind virtual;
  #L4fd37a.  return @kind void;
}
