record `z1.h` @kind class @AccessFlag PUBLIC extends `z1.y` @kind interface {
  `java.util.UUID` `z1.h.b` @AccessFlag PRIVATE_FINAL;
  `z1.g0$c` `z1.h.c` @AccessFlag PRIVATE_FINAL;
  `z1.n0` `z1.h.d` @AccessFlag PRIVATE_FINAL;
  `java.util.HashMap` `z1.h.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `z1.h.f` @AccessFlag PRIVATE_FINAL;
  `int`[] `z1.h.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `z1.h.h` @AccessFlag PRIVATE_FINAL;
  `z1.h$g` `z1.h.i` @AccessFlag PRIVATE_FINAL;
  `r3.g0` `z1.h.j` @AccessFlag PRIVATE_FINAL;
  `z1.h$h` `z1.h.k` @AccessFlag PRIVATE_FINAL;
  `long` `z1.h.l` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `z1.h.m` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `z1.h.n` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `z1.h.o` @AccessFlag PRIVATE_FINAL;
  `int` `z1.h.p` @AccessFlag PRIVATE;
  `z1.g0` `z1.h.q` @AccessFlag PRIVATE;
  `z1.g` `z1.h.r` @AccessFlag PRIVATE;
  `z1.g` `z1.h.s` @AccessFlag PRIVATE;
  `android.os.Looper` `z1.h.t` @AccessFlag PRIVATE;
  `android.os.Handler` `z1.h.u` @AccessFlag PRIVATE;
  `int` `z1.h.v` @AccessFlag PRIVATE;
  `byte`[] `z1.h.w` @AccessFlag PRIVATE;
  `w1.t1` `z1.h.x` @AccessFlag PRIVATE;
  `z1.h$d` `z1.h.y` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`z1.h` v2 @kind this, `java.util.UUID` v3 @kind object, `z1.g0$c` v4 @kind object, `z1.n0` v5 @kind object, `java.util.HashMap` v6 @kind object, `boolean` v7 , `int`[] v8 @kind object, `boolean` v9 , `r3.g0` v10 @kind object, `long` v11 ) @signature `Lz1/h;.<init>:(Ljava/util/UUID;Lz1/g0$c;Lz1/n0;Ljava/util/HashMap;Z[IZLr3/g0;J)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4fbd5c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fbd62.  call temp:= `e`(v3) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fbd68.  v0:= `@@v1.h.b` @type ^`java.util.UUID` @kind object;
  #L4fbd6c.  call temp:= `equals`(v0, v3) @signature `Ljava/util/UUID;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fbd72.  v0:= temp;
  #L4fbd74.  v0:= v0 ^~ 1;
  #L4fbd78.  v1:= "Use C.CLEARKEY_UUID instead" @kind object;
  #L4fbd7c.  call `b`(v0, v1) @signature `Ls3/a;.b:(ZLjava/lang/Object;)V` @kind static;
  #L4fbd82.  v2.`z1.h.b` @type ^`java.util.UUID` := v3 @kind object;
  #L4fbd86.  v2.`z1.h.c` @type ^`z1.g0$c` := v4 @kind object;
  #L4fbd8a.  v2.`z1.h.d` @type ^`z1.n0` := v5 @kind object;
  #L4fbd8e.  v2.`z1.h.e` @type ^`java.util.HashMap` := v6 @kind object;
  #L4fbd92.  v2.`z1.h.f` @type ^`boolean` := v7 @kind boolean;
  #L4fbd96.  v2.`z1.h.g` @type ^`int`[] := v8 @kind object;
  #L4fbd9a.  v2.`z1.h.h` @type ^`boolean` := v9 @kind boolean;
  #L4fbd9e.  v2.`z1.h.j` @type ^`r3.g0` := v10 @kind object;
  #L4fbda2.  v3:= new `z1.h$g`;
  #L4fbda6.  call `<init>`(v3, v2) @signature `Lz1/h$g;.<init>:(Lz1/h;)V` @kind direct;
  #L4fbdac.  v2.`z1.h.i` @type ^`z1.h$g` := v3 @kind object;
  #L4fbdb0.  v3:= new `z1.h$h`;
  #L4fbdb4.  v4:= 0I;
  #L4fbdb6.  call `<init>`(v3, v2, v4) @signature `Lz1/h$h;.<init>:(Lz1/h;Lz1/h$a;)V` @kind direct;
  #L4fbdbc.  v2.`z1.h.k` @type ^`z1.h$h` := v3 @kind object;
  #L4fbdc0.  v3:= 0I;
  #L4fbdc2.  v2.`z1.h.v` @type ^`int` := v3;
  #L4fbdc6.  v3:= new `java.util.ArrayList`;
  #L4fbdca.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4fbdd0.  v2.`z1.h.m` @type ^`java.util.List` := v3 @kind object;
  #L4fbdd4.  call temp:= `h`() @signature `Lm5/p0;.h:()Ljava/util/Set;` @kind static;
  #L4fbdda.  v3:= temp @kind object;
  #L4fbddc.  v2.`z1.h.n` @type ^`java.util.Set` := v3 @kind object;
  #L4fbde0.  call temp:= `h`() @signature `Lm5/p0;.h:()Ljava/util/Set;` @kind static;
  #L4fbde6.  v3:= temp @kind object;
  #L4fbde8.  v2.`z1.h.o` @type ^`java.util.Set` := v3 @kind object;
  #L4fbdec.  v2.`z1.h.l` @type ^`long` := v11 @kind wide;
  #L4fbdf0.  return @kind void;
}
procedure `void` `<init>`(`z1.h` v0 @kind this, `java.util.UUID` v1 @kind object, `z1.g0$c` v2 @kind object, `z1.n0` v3 @kind object, `java.util.HashMap` v4 @kind object, `boolean` v5 , `int`[] v6 @kind object, `boolean` v7 , `r3.g0` v8 @kind object, `long` v9 , `z1.h$a` v11 @kind object) @signature `Lz1/h;.<init>:(Ljava/util/UUID;Lz1/g0$c;Lz1/n0;Ljava/util/HashMap;Z[IZLr3/g0;JLz1/h$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4fbe04.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lz1/h;.<init>:(Ljava/util/UUID;Lz1/g0$c;Lz1/n0;Ljava/util/HashMap;Z[IZLr3/g0;J)V` @kind direct;
  #L4fbe0a.  return @kind void;
}
procedure `void` `A`(`z1.h` v1 @kind this, `android.os.Looper` v2 @kind object) @signature `Lz1/h;.A:(Landroid/os/Looper;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fbe34.  @monitorenter v1
  #L4fbe36.  v0:= v1.`z1.h.t` @type ^`android.os.Looper` @kind object;
  #L4fbe3a.  if v0 != 0 then goto L4fbe52;
  #L4fbe3e.  v1.`z1.h.t` @type ^`android.os.Looper` := v2 @kind object;
  #L4fbe42.  v0:= new `android.os.Handler`;
  #L4fbe46.  call `<init>`(v0, v2) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L4fbe4c.  v1.`z1.h.u` @type ^`android.os.Handler` := v0 @kind object;
  #L4fbe50.  goto L4fbe6c;
  #L4fbe52.  if v0 != v2 then goto L4fbe5a;
  #L4fbe56.  v2:= 1I;
  #L4fbe58.  goto L4fbe5c;
  #L4fbe5a.  v2:= 0I;
  #L4fbe5c.  call `f`(v2) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4fbe62.  v2:= v1.`z1.h.u` @type ^`android.os.Handler` @kind object;
  #L4fbe66.  call temp:= `e`(v2) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fbe6c.  @monitorexit v1
  #L4fbe6e.  return @kind void;
  #L4fbe70.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4fbe72.  @monitorexit v1
  #L4fbe74.  throw v2;
  catch `java.lang.Throwable` @[L4fbe36..L4fbe6c] goto L4fbe70;
}
procedure `z1.o` `B`(`z1.h` v4 @kind this, `int` v5 , `boolean` v6 ) @signature `Lz1/h;.B:(IZ)Lz1/o;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fc484.  v0:= v4.`z1.h.q` @type ^`z1.g0` @kind object;
  #L4fc488.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fc48e.  v0:= temp @kind object;
  #L4fc490.  v0:= (`z1.g0`) v0 @kind object;
  #L4fc494.  call temp:= `l`(v0) @signature `Lz1/g0;.l:()I` @kind interface;
  #L4fc49a.  v1:= temp;
  #L4fc49c.  v2:= 1I;
  #L4fc49e.  v3:= 2I;
  #L4fc4a0.  if v1 != v3 then goto L4fc4b0;
  #L4fc4a4.  v1:= `@@z1.h0.d` @type ^`boolean` @kind boolean;
  #L4fc4a8.  if v1 == 0 then goto L4fc4b0;
  #L4fc4ac.  v1:= 1I;
  #L4fc4ae.  goto L4fc4b2;
  #L4fc4b0.  v1:= 0I;
  #L4fc4b2.  v3:= 0I;
  #L4fc4b4.  if v1 != 0 then goto L4fc50c;
  #L4fc4b8.  v1:= v4.`z1.h.g` @type ^`int`[] @kind object;
  #L4fc4bc.  call temp:= `x0`(v1, v5) @signature `Ls3/l0;.x0:([II)I` @kind static;
  #L4fc4c2.  v5:= temp;
  #L4fc4c4.  v1:= -1I;
  #L4fc4c6.  if v5 == v1 then goto L4fc50c;
  #L4fc4ca.  call temp:= `l`(v0) @signature `Lz1/g0;.l:()I` @kind interface;
  #L4fc4d0.  v5:= temp;
  #L4fc4d2.  if v5 != v2 then goto L4fc4d8;
  #L4fc4d6.  goto L4fc50c;
  #L4fc4d8.  v5:= v4.`z1.h.r` @type ^`z1.g` @kind object;
  #L4fc4dc.  if v5 != 0 then goto L4fc500;
  #L4fc4e0.  call temp:= `a0`() @signature `Lm5/q;.a0:()Lm5/q;` @kind static;
  #L4fc4e6.  v5:= temp @kind object;
  #L4fc4e8.  call temp:= `y`(v4, v5, v2, v3, v6) @signature `Lz1/h;.y:(Ljava/util/List;ZLz1/w$a;Z)Lz1/g;` @kind direct;
  #L4fc4ee.  v5:= temp @kind object;
  #L4fc4f0.  v6:= v4.`z1.h.m` @type ^`java.util.List` @kind object;
  #L4fc4f4.  call temp:= `add`(v6, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fc4fa.  v4.`z1.h.r` @type ^`z1.g` := v5 @kind object;
  #L4fc4fe.  goto L4fc506;
  #L4fc500.  call `c`(v5, v3) @signature `Lz1/g;.c:(Lz1/w$a;)V` @kind virtual;
  #L4fc506.  v5:= v4.`z1.h.r` @type ^`z1.g` @kind object;
  #L4fc50a.  return v5 @kind object;
  #L4fc50c.  return v3 @kind object;
}
procedure `void` `C`(`z1.h` v1 @kind this, `android.os.Looper` v2 @kind object) @signature `Lz1/h;.C:(Landroid/os/Looper;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fbe94.  v0:= v1.`z1.h.y` @type ^`z1.h$d` @kind object;
  #L4fbe98.  if v0 != 0 then goto L4fbeaa;
  #L4fbe9c.  v0:= new `z1.h$d`;
  #L4fbea0.  call `<init>`(v0, v1, v2) @signature `Lz1/h$d;.<init>:(Lz1/h;Landroid/os/Looper;)V` @kind direct;
  #L4fbea6.  v1.`z1.h.y` @type ^`z1.h$d` := v0 @kind object;
  #L4fbeaa.  return @kind void;
}
procedure `void` `D`(`z1.h` v1 @kind this) @signature `Lz1/h;.D:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fbebc.  v0:= v1.`z1.h.q` @type ^`z1.g0` @kind object;
  #L4fbec0.  if v0 == 0 then goto L4fbf08;
  #L4fbec4.  v0:= v1.`z1.h.p` @type ^`int`;
  #L4fbec8.  if v0 != 0 then goto L4fbf08;
  #L4fbecc.  v0:= v1.`z1.h.m` @type ^`java.util.List` @kind object;
  #L4fbed0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4fbed6.  v0:= temp;
  #L4fbed8.  if v0 == 0 then goto L4fbf08;
  #L4fbedc.  v0:= v1.`z1.h.n` @type ^`java.util.Set` @kind object;
  #L4fbee0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L4fbee6.  v0:= temp;
  #L4fbee8.  if v0 == 0 then goto L4fbf08;
  #L4fbeec.  v0:= v1.`z1.h.q` @type ^`z1.g0` @kind object;
  #L4fbef0.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fbef6.  v0:= temp @kind object;
  #L4fbef8.  v0:= (`z1.g0`) v0 @kind object;
  #L4fbefc.  call `a`(v0) @signature `Lz1/g0;.a:()V` @kind interface;
  #L4fbf02.  v0:= 0I;
  #L4fbf04.  v1.`z1.h.q` @type ^`z1.g0` := v0 @kind object;
  #L4fbf08.  return @kind void;
}
procedure `void` `E`(`z1.h` v3 @kind this) @signature `Lz1/h;.E:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4fc030.  v0:= v3.`z1.h.o` @type ^`java.util.Set` @kind object;
  #L4fc034.  call temp:= `N`(v0) @signature `Lm5/s;.N:(Ljava/util/Collection;)Lm5/s;` @kind static;
  #L4fc03a.  v0:= temp @kind object;
  #L4fc03c.  call temp:= `u`(v0) @signature `Lm5/o;.u:()Lm5/s0;` @kind virtual;
  #L4fc042.  v0:= temp @kind object;
  #L4fc044.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4fc04a.  v1:= temp;
  #L4fc04c.  if v1 == 0 then goto L4fc066;
  #L4fc050.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4fc056.  v1:= temp @kind object;
  #L4fc058.  v1:= (`z1.o`) v1 @kind object;
  #L4fc05c.  v2:= 0I;
  #L4fc05e.  call `e`(v1, v2) @signature `Lz1/o;.e:(Lz1/w$a;)V` @kind interface;
  #L4fc064.  goto L4fc044;
  #L4fc066.  return @kind void;
}
procedure `void` `F`(`z1.h` v2 @kind this) @signature `Lz1/h;.F:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4fc078.  v0:= v2.`z1.h.n` @type ^`java.util.Set` @kind object;
  #L4fc07c.  call temp:= `N`(v0) @signature `Lm5/s;.N:(Ljava/util/Collection;)Lm5/s;` @kind static;
  #L4fc082.  v0:= temp @kind object;
  #L4fc084.  call temp:= `u`(v0) @signature `Lm5/o;.u:()Lm5/s0;` @kind virtual;
  #L4fc08a.  v0:= temp @kind object;
  #L4fc08c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4fc092.  v1:= temp;
  #L4fc094.  if v1 == 0 then goto L4fc0ac;
  #L4fc098.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4fc09e.  v1:= temp @kind object;
  #L4fc0a0.  v1:= (`z1.h$f`) v1 @kind object;
  #L4fc0a4.  call `a`(v1) @signature `Lz1/h$f;.a:()V` @kind virtual;
  #L4fc0aa.  goto L4fc08c;
  #L4fc0ac.  return @kind void;
}
procedure `void` `H`(`z1.h` v4 @kind this, `z1.o` v5 @kind object, `z1.w$a` v6 @kind object) @signature `Lz1/h;.H:(Lz1/o;Lz1/w$a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fc11c.  call `e`(v5, v6) @signature `Lz1/o;.e:(Lz1/w$a;)V` @kind interface;
  #L4fc122.  v0:= v4.`z1.h.l` @type ^`long` @kind wide;
  #L4fc126.  v2:= -4.9E-324D;
  #L4fc130.  v6:= lcmp(v0, v2);
  #L4fc134.  if v6 == 0 then goto L4fc140;
  #L4fc138.  v6:= 0I;
  #L4fc13a.  call `e`(v5, v6) @signature `Lz1/o;.e:(Lz1/w$a;)V` @kind interface;
  #L4fc140.  return @kind void;
}
procedure `z1.g` `g`(`z1.h` v0 @kind object) @signature `Lz1/h;.g:(Lz1/h;)Lz1/g;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fc154.  v0:= v0.`z1.h.s` @type ^`z1.g` @kind object;
  #L4fc158.  return v0 @kind object;
}
procedure `z1.g` `h`(`z1.h` v0 @kind object, `z1.g` v1 @kind object) @signature `Lz1/h;.h:(Lz1/h;Lz1/g;)Lz1/g;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fc16c.  v0.`z1.h.s` @type ^`z1.g` := v1 @kind object;
  #L4fc170.  return v1 @kind object;
}
procedure `z1.h$g` `i`(`z1.h` v0 @kind object) @signature `Lz1/h;.i:(Lz1/h;)Lz1/h$g;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fc2f8.  v0:= v0.`z1.h.i` @type ^`z1.h$g` @kind object;
  #L4fc2fc.  return v0 @kind object;
}
procedure `void` `j`(`z1.h` v0 @kind object) @signature `Lz1/h;.j:(Lz1/h;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fbe1c.  call `D`(v0) @signature `Lz1/h;.D:()V` @kind direct;
  #L4fbe22.  return @kind void;
}
procedure `java.util.Set` `k`(`z1.h` v0 @kind object) @signature `Lz1/h;.k:(Lz1/h;)Ljava/util/Set;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fbd14.  v0:= v0.`z1.h.n` @type ^`java.util.Set` @kind object;
  #L4fbd18.  return v0 @kind object;
}
procedure `android.os.Looper` `l`(`z1.h` v0 @kind object) @signature `Lz1/h;.l:(Lz1/h;)Landroid/os/Looper;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fba9c.  v0:= v0.`z1.h.t` @type ^`android.os.Looper` @kind object;
  #L4fbaa0.  return v0 @kind object;
}
procedure `z1.o` `m`(`z1.h` v0 @kind object, `android.os.Looper` v1 @kind object, `z1.w$a` v2 @kind object, `v1.j1` v3 @kind object, `boolean` v4 ) @signature `Lz1/h;.m:(Lz1/h;Landroid/os/Looper;Lz1/w$a;Lv1/j1;Z)Lz1/o;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fc310.  call temp:= `u`(v0, v1, v2, v3, v4) @signature `Lz1/h;.u:(Landroid/os/Looper;Lz1/w$a;Lv1/j1;Z)Lz1/o;` @kind direct;
  #L4fc316.  v0:= temp @kind object;
  #L4fc318.  return v0 @kind object;
}
procedure `java.util.List` `n`(`z1.h` v0 @kind object) @signature `Lz1/h;.n:(Lz1/h;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fbc78.  v0:= v0.`z1.h.m` @type ^`java.util.List` @kind object;
  #L4fbc7c.  return v0 @kind object;
}
procedure `long` `o`(`z1.h` v2 @kind object) @signature `Lz1/h;.o:(Lz1/h;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L4fbd44.  v0:= v2.`z1.h.l` @type ^`long` @kind wide;
  #L4fbd48.  return v0 @kind wide;
}
procedure `java.util.Set` `p`(`z1.h` v0 @kind object) @signature `Lz1/h;.p:(Lz1/h;)Ljava/util/Set;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fbd2c.  v0:= v0.`z1.h.o` @type ^`java.util.Set` @kind object;
  #L4fbd30.  return v0 @kind object;
}
procedure `android.os.Handler` `q`(`z1.h` v0 @kind object) @signature `Lz1/h;.q:(Lz1/h;)Landroid/os/Handler;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fba84.  v0:= v0.`z1.h.u` @type ^`android.os.Handler` @kind object;
  #L4fba88.  return v0 @kind object;
}
procedure `int` `r`(`z1.h` v0 @kind object) @signature `Lz1/h;.r:(Lz1/h;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fbbf8.  v0:= v0.`z1.h.p` @type ^`int`;
  #L4fbbfc.  return v0;
}
procedure `z1.g` `s`(`z1.h` v0 @kind object) @signature `Lz1/h;.s:(Lz1/h;)Lz1/g;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fc184.  v0:= v0.`z1.h.r` @type ^`z1.g` @kind object;
  #L4fc188.  return v0 @kind object;
}
procedure `z1.g` `t`(`z1.h` v0 @kind object, `z1.g` v1 @kind object) @signature `Lz1/h;.t:(Lz1/h;Lz1/g;)Lz1/g;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fc19c.  v0.`z1.h.r` @type ^`z1.g` := v1 @kind object;
  #L4fc1a0.  return v1 @kind object;
}
procedure `z1.o` `u`(`z1.h` v4 @kind this, `android.os.Looper` v5 @kind object, `z1.w$a` v6 @kind object, `v1.j1` v7 @kind object, `boolean` v8 ) @signature `Lz1/h;.u:(Landroid/os/Looper;Lz1/w$a;Lv1/j1;Z)Lz1/o;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fc32c.  call `C`(v4, v5) @signature `Lz1/h;.C:(Landroid/os/Looper;)V` @kind direct;
  #L4fc332.  v5:= v7.`v1.j1.C` @type ^`z1.m` @kind object;
  #L4fc336.  if v5 != 0 then goto L4fc350;
  #L4fc33a.  v5:= v7.`v1.j1.z` @type ^`java.lang.String` @kind object;
  #L4fc33e.  call temp:= `k`(v5) @signature `Ls3/u;.k:(Ljava/lang/String;)I` @kind static;
  #L4fc344.  v5:= temp;
  #L4fc346.  call temp:= `B`(v4, v5, v8) @signature `Lz1/h;.B:(IZ)Lz1/o;` @kind direct;
  #L4fc34c.  v5:= temp @kind object;
  #L4fc34e.  return v5 @kind object;
  #L4fc350.  v7:= v4.`z1.h.w` @type ^`byte`[] @kind object;
  #L4fc354.  v0:= 0I;
  #L4fc356.  v1:= 0I;
  #L4fc358.  if v7 != 0 then goto L4fc3c0;
  #L4fc35c.  call temp:= `e`(v5) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fc362.  v5:= temp @kind object;
  #L4fc364.  v5:= (`z1.m`) v5 @kind object;
  #L4fc368.  v7:= v4.`z1.h.b` @type ^`java.util.UUID` @kind object;
  #L4fc36c.  call temp:= `z`(v5, v7, v0) @signature `Lz1/h;.z:(Lz1/m;Ljava/util/UUID;Z)Ljava/util/List;` @kind static;
  #L4fc372.  v5:= temp @kind object;
  #L4fc374.  call temp:= `isEmpty`(v5) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4fc37a.  v7:= temp;
  #L4fc37c.  if v7 == 0 then goto L4fc3c2;
  #L4fc380.  v5:= new `z1.h$e`;
  #L4fc384.  v7:= v4.`z1.h.b` @type ^`java.util.UUID` @kind object;
  #L4fc388.  call `<init>`(v5, v7, v1) @signature `Lz1/h$e;.<init>:(Ljava/util/UUID;Lz1/h$a;)V` @kind direct;
  #L4fc38e.  v7:= "DefaultDrmSessionMgr" @kind object;
  #L4fc392.  v8:= "DRM error" @kind object;
  #L4fc396.  call `d`(v7, v8, v5) @signature `Ls3/q;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L4fc39c.  if v6 == 0 then goto L4fc3a6;
  #L4fc3a0.  call `l`(v6, v5) @signature `Lz1/w$a;.l:(Ljava/lang/Exception;)V` @kind virtual;
  #L4fc3a6.  v6:= new `z1.e0`;
  #L4fc3aa.  v7:= new `z1.o$a`;
  #L4fc3ae.  v8:= 6003I;
  #L4fc3b2.  call `<init>`(v7, v5, v8) @signature `Lz1/o$a;.<init>:(Ljava/lang/Throwable;I)V` @kind direct;
  #L4fc3b8.  call `<init>`(v6, v7) @signature `Lz1/e0;.<init>:(Lz1/o$a;)V` @kind direct;
  #L4fc3be.  return v6 @kind object;
  #L4fc3c0.  v5:= v1 @kind object;
  #L4fc3c2.  v7:= v4.`z1.h.f` @type ^`boolean` @kind boolean;
  #L4fc3c6.  if v7 != 0 then goto L4fc3d0;
  #L4fc3ca.  v1:= v4.`z1.h.s` @type ^`z1.g` @kind object;
  #L4fc3ce.  goto L4fc406;
  #L4fc3d0.  v7:= v4.`z1.h.m` @type ^`java.util.List` @kind object;
  #L4fc3d4.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4fc3da.  v7:= temp @kind object;
  #L4fc3dc.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4fc3e2.  v2:= temp;
  #L4fc3e4.  if v2 == 0 then goto L4fc406;
  #L4fc3e8.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4fc3ee.  v2:= temp @kind object;
  #L4fc3f0.  v2:= (`z1.g`) v2 @kind object;
  #L4fc3f4.  v3:= v2.`z1.g.a` @type ^`java.util.List` @kind object;
  #L4fc3f8.  call temp:= `c`(v3, v5) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4fc3fe.  v3:= temp;
  #L4fc400.  if v3 == 0 then goto L4fc3dc;
  #L4fc404.  v1:= v2 @kind object;
  #L4fc406.  if v1 != 0 then goto L4fc42a;
  #L4fc40a.  call temp:= `y`(v4, v5, v0, v6, v8) @signature `Lz1/h;.y:(Ljava/util/List;ZLz1/w$a;Z)Lz1/g;` @kind direct;
  #L4fc410.  v1:= temp @kind object;
  #L4fc412.  v5:= v4.`z1.h.f` @type ^`boolean` @kind boolean;
  #L4fc416.  if v5 != 0 then goto L4fc41e;
  #L4fc41a.  v4.`z1.h.s` @type ^`z1.g` := v1 @kind object;
  #L4fc41e.  v5:= v4.`z1.h.m` @type ^`java.util.List` @kind object;
  #L4fc422.  call temp:= `add`(v5, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fc428.  goto L4fc430;
  #L4fc42a.  call `c`(v1, v6) @signature `Lz1/g;.c:(Lz1/w$a;)V` @kind virtual;
  #L4fc430.  return v1 @kind object;
}
procedure `boolean` `v`(`z1.o` v3 @kind object) @signature `Lz1/h;.v:(Lz1/o;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4fbab4.  call temp:= `getState`(v3) @signature `Lz1/o;.getState:()I` @kind interface;
  #L4fbaba.  v0:= temp;
  #L4fbabc.  v1:= 1I;
  #L4fbabe.  if v0 != v1 then goto L4fbaf4;
  #L4fbac2.  v0:= `@@s3.l0.a` @type ^`int`;
  #L4fbac6.  v2:= 19I;
  #L4fbaca.  if v0 < v2 then goto L4fbaf6;
  #L4fbace.  call temp:= `g`(v3) @signature `Lz1/o;.g:()Lz1/o$a;` @kind interface;
  #L4fbad4.  v3:= temp @kind object;
  #L4fbad6.  call temp:= `e`(v3) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fbadc.  v3:= temp @kind object;
  #L4fbade.  v3:= (`z1.o$a`) v3 @kind object;
  #L4fbae2.  call temp:= `getCause`(v3) @signature `Ljava/io/IOException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L4fbae8.  v3:= temp @kind object;
  #L4fbaea.  v3:= instanceof @variable v3 @type ^`android.media.ResourceBusyException` @kind boolean;
  #L4fbaee.  if v3 == 0 then goto L4fbaf4;
  #L4fbaf2.  goto L4fbaf6;
  #L4fbaf4.  v1:= 0I;
  #L4fbaf6.  return v1;
}
procedure `boolean` `w`(`z1.h` v4 @kind this, `z1.m` v5 @kind object) @signature `Lz1/h;.w:(Lz1/m;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fbb08.  v0:= v4.`z1.h.w` @type ^`byte`[] @kind object;
  #L4fbb0c.  v1:= 1I;
  #L4fbb0e.  if v0 == 0 then goto L4fbb14;
  #L4fbb12.  return v1;
  #L4fbb14.  v0:= v4.`z1.h.b` @type ^`java.util.UUID` @kind object;
  #L4fbb18.  call temp:= `z`(v5, v0, v1) @signature `Lz1/h;.z:(Lz1/m;Ljava/util/UUID;Z)Ljava/util/List;` @kind static;
  #L4fbb1e.  v0:= temp @kind object;
  #L4fbb20.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4fbb26.  v0:= temp;
  #L4fbb28.  v2:= 0I;
  #L4fbb2a.  if v0 == 0 then goto L4fbb82;
  #L4fbb2e.  v0:= v5.`z1.m.r` @type ^`int`;
  #L4fbb32.  if v0 != v1 then goto L4fbb80;
  #L4fbb36.  call temp:= `e`(v5, v2) @signature `Lz1/m;.e:(I)Lz1/m$b;` @kind virtual;
  #L4fbb3c.  v0:= temp @kind object;
  #L4fbb3e.  v3:= `@@v1.h.b` @type ^`java.util.UUID` @kind object;
  #L4fbb42.  call temp:= `d`(v0, v3) @signature `Lz1/m$b;.d:(Ljava/util/UUID;)Z` @kind virtual;
  #L4fbb48.  v0:= temp;
  #L4fbb4a.  if v0 == 0 then goto L4fbb80;
  #L4fbb4e.  v0:= new `java.lang.StringBuilder`;
  #L4fbb52.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fbb58.  v3:= "DrmInitData only contains common PSSH SchemeData. Assuming support for: " @kind object;
  #L4fbb5c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbb62.  v3:= v4.`z1.h.b` @type ^`java.util.UUID` @kind object;
  #L4fbb66.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbb6c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fbb72.  v0:= temp @kind object;
  #L4fbb74.  v3:= "DefaultDrmSessionMgr" @kind object;
  #L4fbb78.  call `h`(v3, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L4fbb7e.  goto L4fbb82;
  #L4fbb80.  return v2;
  #L4fbb82.  v5:= v5.`z1.m.q` @type ^`java.lang.String` @kind object;
  #L4fbb86.  if v5 == 0 then goto L4fbbe4;
  #L4fbb8a.  v0:= "cenc" @kind object;
  #L4fbb8e.  call temp:= `equals`(v0, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fbb94.  v0:= temp;
  #L4fbb96.  if v0 == 0 then goto L4fbb9c;
  #L4fbb9a.  goto L4fbbe4;
  #L4fbb9c.  v0:= "cbcs" @kind object;
  #L4fbba0.  call temp:= `equals`(v0, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fbba6.  v0:= temp;
  #L4fbba8.  if v0 == 0 then goto L4fbbbe;
  #L4fbbac.  v5:= `@@s3.l0.a` @type ^`int`;
  #L4fbbb0.  v0:= 25I;
  #L4fbbb4.  if v5 < v0 then goto L4fbbba;
  #L4fbbb8.  goto L4fbbbc;
  #L4fbbba.  v1:= 0I;
  #L4fbbbc.  return v1;
  #L4fbbbe.  v0:= "cbc1" @kind object;
  #L4fbbc2.  call temp:= `equals`(v0, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fbbc8.  v0:= temp;
  #L4fbbca.  if v0 != 0 then goto L4fbbe2;
  #L4fbbce.  v0:= "cens" @kind object;
  #L4fbbd2.  call temp:= `equals`(v0, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fbbd8.  v5:= temp;
  #L4fbbda.  if v5 == 0 then goto L4fbbe0;
  #L4fbbde.  goto L4fbbe2;
  #L4fbbe0.  return v1;
  #L4fbbe2.  return v2;
  #L4fbbe4.  return v1;
}
procedure `z1.g` `x`(`z1.h` v17 @kind this, `java.util.List` v18 @kind object, `boolean` v19 , `z1.w$a` v20 @kind object) @signature `Lz1/h;.x:(Ljava/util/List;ZLz1/w$a;)Lz1/g;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L4fc1b4.  v0:= v17 @kind object;
  #L4fc1b8.  v1:= v0.`z1.h.q` @type ^`z1.g0` @kind object;
  #L4fc1bc.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fc1c2.  v1:= v0.`z1.h.h` @type ^`boolean` @kind boolean;
  #L4fc1c6.  v9:= v1 ^| v19 @kind int;
  #L4fc1ca.  v1:= new `z1.g`;
  #L4fc1ce.  v3:= v0.`z1.h.b` @type ^`java.util.UUID` @kind object;
  #L4fc1d2.  v4:= v0.`z1.h.q` @type ^`z1.g0` @kind object;
  #L4fc1d6.  v5:= v0.`z1.h.i` @type ^`z1.h$g` @kind object;
  #L4fc1da.  v6:= v0.`z1.h.k` @type ^`z1.h$h` @kind object;
  #L4fc1de.  v8:= v0.`z1.h.v` @type ^`int`;
  #L4fc1e2.  v11:= v0.`z1.h.w` @type ^`byte`[] @kind object;
  #L4fc1e6.  v12:= v0.`z1.h.e` @type ^`java.util.HashMap` @kind object;
  #L4fc1ea.  v13:= v0.`z1.h.d` @type ^`z1.n0` @kind object;
  #L4fc1ee.  v2:= v0.`z1.h.t` @type ^`android.os.Looper` @kind object;
  #L4fc1f2.  call temp:= `e`(v2) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fc1f8.  v2:= temp @kind object;
  #L4fc1fa.  v14:= v2 @kind object;
  #L4fc1fc.  v14:= (`android.os.Looper`) v14 @kind object;
  #L4fc200.  v15:= v0.`z1.h.j` @type ^`r3.g0` @kind object;
  #L4fc204.  v2:= v0.`z1.h.x` @type ^`w1.t1` @kind object;
  #L4fc208.  call temp:= `e`(v2) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fc20e.  v2:= temp @kind object;
  #L4fc210.  v16:= v2 @kind object;
  #L4fc214.  v16:= (`w1.t1`) v16 @kind object;
  #L4fc218.  v2:= v1 @kind object;
  #L4fc21a.  v7:= v18 @kind object;
  #L4fc21e.  v10:= v19;
  #L4fc222.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lz1/g;.<init>:(Ljava/util/UUID;Lz1/g0;Lz1/g$a;Lz1/g$b;Ljava/util/List;IZZ[BLjava/util/HashMap;Lz1/n0;Landroid/os/Looper;Lr3/g0;Lw1/t1;)V` @kind direct;
  #L4fc228.  v2:= v20 @kind object;
  #L4fc22c.  call `c`(v1, v2) @signature `Lz1/g;.c:(Lz1/w$a;)V` @kind virtual;
  #L4fc232.  v2:= v0.`z1.h.l` @type ^`long` @kind wide;
  #L4fc236.  v4:= -4.9E-324D;
  #L4fc240.  v6:= lcmp(v2, v4);
  #L4fc244.  if v6 == 0 then goto L4fc250;
  #L4fc248.  v2:= 0I;
  #L4fc24a.  call `c`(v1, v2) @signature `Lz1/g;.c:(Lz1/w$a;)V` @kind virtual;
  #L4fc250.  return v1 @kind object;
}
procedure `z1.g` `y`(`z1.h` v2 @kind this, `java.util.List` v3 @kind object, `boolean` v4 , `z1.w$a` v5 @kind object, `boolean` v6 ) @signature `Lz1/h;.y:(Ljava/util/List;ZLz1/w$a;Z)Lz1/g;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4fc264.  call temp:= `x`(v2, v3, v4, v5) @signature `Lz1/h;.x:(Ljava/util/List;ZLz1/w$a;)Lz1/g;` @kind direct;
  #L4fc26a.  v0:= temp @kind object;
  #L4fc26c.  call temp:= `v`(v0) @signature `Lz1/h;.v:(Lz1/o;)Z` @kind static;
  #L4fc272.  v1:= temp;
  #L4fc274.  if v1 == 0 then goto L4fc29c;
  #L4fc278.  v1:= v2.`z1.h.o` @type ^`java.util.Set` @kind object;
  #L4fc27c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L4fc282.  v1:= temp;
  #L4fc284.  if v1 != 0 then goto L4fc29c;
  #L4fc288.  call `E`(v2) @signature `Lz1/h;.E:()V` @kind direct;
  #L4fc28e.  call `H`(v2, v0, v5) @signature `Lz1/h;.H:(Lz1/o;Lz1/w$a;)V` @kind direct;
  #L4fc294.  call temp:= `x`(v2, v3, v4, v5) @signature `Lz1/h;.x:(Ljava/util/List;ZLz1/w$a;)Lz1/g;` @kind direct;
  #L4fc29a.  v0:= temp @kind object;
  #L4fc29c.  call temp:= `v`(v0) @signature `Lz1/h;.v:(Lz1/o;)Z` @kind static;
  #L4fc2a2.  v1:= temp;
  #L4fc2a4.  if v1 == 0 then goto L4fc2e6;
  #L4fc2a8.  if v6 == 0 then goto L4fc2e6;
  #L4fc2ac.  v6:= v2.`z1.h.n` @type ^`java.util.Set` @kind object;
  #L4fc2b0.  call temp:= `isEmpty`(v6) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L4fc2b6.  v6:= temp;
  #L4fc2b8.  if v6 != 0 then goto L4fc2e6;
  #L4fc2bc.  call `F`(v2) @signature `Lz1/h;.F:()V` @kind direct;
  #L4fc2c2.  v6:= v2.`z1.h.o` @type ^`java.util.Set` @kind object;
  #L4fc2c6.  call temp:= `isEmpty`(v6) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L4fc2cc.  v6:= temp;
  #L4fc2ce.  if v6 != 0 then goto L4fc2d8;
  #L4fc2d2.  call `E`(v2) @signature `Lz1/h;.E:()V` @kind direct;
  #L4fc2d8.  call `H`(v2, v0, v5) @signature `Lz1/h;.H:(Lz1/o;Lz1/w$a;)V` @kind direct;
  #L4fc2de.  call temp:= `x`(v2, v3, v4, v5) @signature `Lz1/h;.x:(Ljava/util/List;ZLz1/w$a;)Lz1/g;` @kind direct;
  #L4fc2e4.  v0:= temp @kind object;
  #L4fc2e6.  return v0 @kind object;
}
procedure `java.util.List` `z`(`z1.m` v5 @kind object, `java.util.UUID` v6 @kind object, `boolean` v7 ) @signature `Lz1/h;.z:(Lz1/m;Ljava/util/UUID;Z)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fbc90.  v0:= new `java.util.ArrayList`;
  #L4fbc94.  v1:= v5.`z1.m.r` @type ^`int`;
  #L4fbc98.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L4fbc9e.  v1:= 0I;
  #L4fbca0.  v2:= 0I;
  #L4fbca2.  v3:= v5.`z1.m.r` @type ^`int`;
  #L4fbca6.  if v2 >= v3 then goto L4fbd02;
  #L4fbcaa.  call temp:= `e`(v5, v2) @signature `Lz1/m;.e:(I)Lz1/m$b;` @kind virtual;
  #L4fbcb0.  v3:= temp @kind object;
  #L4fbcb2.  call temp:= `d`(v3, v6) @signature `Lz1/m$b;.d:(Ljava/util/UUID;)Z` @kind virtual;
  #L4fbcb8.  v4:= temp;
  #L4fbcba.  if v4 != 0 then goto L4fbce4;
  #L4fbcbe.  v4:= `@@v1.h.c` @type ^`java.util.UUID` @kind object;
  #L4fbcc2.  call temp:= `equals`(v4, v6) @signature `Ljava/util/UUID;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fbcc8.  v4:= temp;
  #L4fbcca.  if v4 == 0 then goto L4fbce0;
  #L4fbcce.  v4:= `@@v1.h.b` @type ^`java.util.UUID` @kind object;
  #L4fbcd2.  call temp:= `d`(v3, v4) @signature `Lz1/m$b;.d:(Ljava/util/UUID;)Z` @kind virtual;
  #L4fbcd8.  v4:= temp;
  #L4fbcda.  if v4 == 0 then goto L4fbce0;
  #L4fbcde.  goto L4fbce4;
  #L4fbce0.  v4:= 0I;
  #L4fbce2.  goto L4fbce6;
  #L4fbce4.  v4:= 1I;
  #L4fbce6.  if v4 == 0 then goto L4fbcfc;
  #L4fbcea.  v4:= v3.`z1.m$b.s` @type ^`byte`[] @kind object;
  #L4fbcee.  if v4 != 0 then goto L4fbcf6;
  #L4fbcf2.  if v7 == 0 then goto L4fbcfc;
  #L4fbcf6.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fbcfc.  v2:= v2 + 1;
  #L4fbd00.  goto L4fbca2;
  #L4fbd02.  return v0 @kind object;
}
procedure `void` `G`(`z1.h` v1 @kind this, `int` v2 , `byte`[] v3 @kind object) @signature `Lz1/h;.G:(I[B)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc0c0.  v0:= v1.`z1.h.m` @type ^`java.util.List` @kind object;
  #L4fc0c4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4fc0ca.  v0:= temp;
  #L4fc0cc.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4fc0d2.  v0:= 1I;
  #L4fc0d4.  if v2 == v0 then goto L4fc0de;
  #L4fc0d8.  v0:= 3I;
  #L4fc0da.  if v2 != v0 then goto L4fc0e4;
  #L4fc0de.  call temp:= `e`(v3) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fc0e4.  v1.`z1.h.v` @type ^`int` := v2;
  #L4fc0e8.  v1.`z1.h.w` @type ^`byte`[] := v3 @kind object;
  #L4fc0ec.  return @kind void;
}
procedure `void` `a`(`z1.h` v5 @kind this) @signature `Lz1/h;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fbfb4.  v0:= v5.`z1.h.p` @type ^`int`;
  #L4fbfb8.  v0:= v0 + -1;
  #L4fbfbc.  v5.`z1.h.p` @type ^`int` := v0;
  #L4fbfc0.  if v0 == 0 then goto L4fbfc6;
  #L4fbfc4.  return @kind void;
  #L4fbfc6.  v0:= v5.`z1.h.l` @type ^`long` @kind wide;
  #L4fbfca.  v2:= -4.9E-324D;
  #L4fbfd4.  v4:= lcmp(v0, v2);
  #L4fbfd8.  if v4 == 0 then goto L4fc012;
  #L4fbfdc.  v0:= new `java.util.ArrayList`;
  #L4fbfe0.  v1:= v5.`z1.h.m` @type ^`java.util.List` @kind object;
  #L4fbfe4.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4fbfea.  v1:= 0I;
  #L4fbfec.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fbff2.  v2:= temp;
  #L4fbff4.  if v1 >= v2 then goto L4fc012;
  #L4fbff8.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fbffe.  v2:= temp @kind object;
  #L4fc000.  v2:= (`z1.g`) v2 @kind object;
  #L4fc004.  v3:= 0I;
  #L4fc006.  call `e`(v2, v3) @signature `Lz1/g;.e:(Lz1/w$a;)V` @kind virtual;
  #L4fc00c.  v1:= v1 + 1;
  #L4fc010.  goto L4fbfec;
  #L4fc012.  call `F`(v5) @signature `Lz1/h;.F:()V` @kind direct;
  #L4fc018.  call `D`(v5) @signature `Lz1/h;.D:()V` @kind direct;
  #L4fc01e.  return @kind void;
}
procedure `void` `b`(`z1.h` v6 @kind this) @signature `Lz1/h;.b:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fbf1c.  v0:= v6.`z1.h.p` @type ^`int`;
  #L4fbf20.  v1:= v0 + 1;
  #L4fbf24.  v6.`z1.h.p` @type ^`int` := v1;
  #L4fbf28.  if v0 == 0 then goto L4fbf2e;
  #L4fbf2c.  return @kind void;
  #L4fbf2e.  v0:= v6.`z1.h.q` @type ^`z1.g0` @kind object;
  #L4fbf32.  v1:= 0I;
  #L4fbf34.  if v0 != 0 then goto L4fbf5e;
  #L4fbf38.  v0:= v6.`z1.h.c` @type ^`z1.g0$c` @kind object;
  #L4fbf3c.  v2:= v6.`z1.h.b` @type ^`java.util.UUID` @kind object;
  #L4fbf40.  call temp:= `a`(v0, v2) @signature `Lz1/g0$c;.a:(Ljava/util/UUID;)Lz1/g0;` @kind interface;
  #L4fbf46.  v0:= temp @kind object;
  #L4fbf48.  v6.`z1.h.q` @type ^`z1.g0` := v0 @kind object;
  #L4fbf4c.  v2:= new `z1.h$c`;
  #L4fbf50.  call `<init>`(v2, v6, v1) @signature `Lz1/h$c;.<init>:(Lz1/h;Lz1/h$a;)V` @kind direct;
  #L4fbf56.  call `b`(v0, v2) @signature `Lz1/g0;.b:(Lz1/g0$b;)V` @kind interface;
  #L4fbf5c.  goto L4fbfa2;
  #L4fbf5e.  v2:= v6.`z1.h.l` @type ^`long` @kind wide;
  #L4fbf62.  v4:= -4.9E-324D;
  #L4fbf6c.  v0:= lcmp(v2, v4);
  #L4fbf70.  if v0 == 0 then goto L4fbfa2;
  #L4fbf74.  v0:= 0I;
  #L4fbf76.  v2:= v6.`z1.h.m` @type ^`java.util.List` @kind object;
  #L4fbf7a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fbf80.  v2:= temp;
  #L4fbf82.  if v0 >= v2 then goto L4fbfa2;
  #L4fbf86.  v2:= v6.`z1.h.m` @type ^`java.util.List` @kind object;
  #L4fbf8a.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fbf90.  v2:= temp @kind object;
  #L4fbf92.  v2:= (`z1.g`) v2 @kind object;
  #L4fbf96.  call `c`(v2, v1) @signature `Lz1/g;.c:(Lz1/w$a;)V` @kind virtual;
  #L4fbf9c.  v0:= v0 + 1;
  #L4fbfa0.  goto L4fbf76;
  #L4fbfa2.  return @kind void;
}
procedure `z1.o` `c`(`z1.h` v2 @kind this, `z1.w$a` v3 @kind object, `v1.j1` v4 @kind object) @signature `Lz1/h;.c:(Lz1/w$a;Lv1/j1;)Lz1/o;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fc444.  v0:= v2.`z1.h.p` @type ^`int`;
  #L4fc448.  v1:= 1I;
  #L4fc44a.  if v0 <= 0 then goto L4fc452;
  #L4fc44e.  v0:= 1I;
  #L4fc450.  goto L4fc454;
  #L4fc452.  v0:= 0I;
  #L4fc454.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4fc45a.  v0:= v2.`z1.h.t` @type ^`android.os.Looper` @kind object;
  #L4fc45e.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fc464.  v0:= v2.`z1.h.t` @type ^`android.os.Looper` @kind object;
  #L4fc468.  call temp:= `u`(v2, v0, v3, v4, v1) @signature `Lz1/h;.u:(Landroid/os/Looper;Lz1/w$a;Lv1/j1;Z)Lz1/o;` @kind direct;
  #L4fc46e.  v3:= temp @kind object;
  #L4fc470.  return v3 @kind object;
}
procedure `void` `d`(`z1.h` v0 @kind this, `android.os.Looper` v1 @kind object, `w1.t1` v2 @kind object) @signature `Lz1/h;.d:(Landroid/os/Looper;Lw1/t1;)V` @AccessFlag PUBLIC {
    temp;

  #L4fc100.  call `A`(v0, v1) @signature `Lz1/h;.A:(Landroid/os/Looper;)V` @kind direct;
  #L4fc106.  v0.`z1.h.x` @type ^`w1.t1` := v2 @kind object;
  #L4fc10a.  return @kind void;
}
procedure `int` `e`(`z1.h` v2 @kind this, `v1.j1` v3 @kind object) @signature `Lz1/h;.e:(Lv1/j1;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fbc10.  v0:= v2.`z1.h.q` @type ^`z1.g0` @kind object;
  #L4fbc14.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fbc1a.  v0:= temp @kind object;
  #L4fbc1c.  v0:= (`z1.g0`) v0 @kind object;
  #L4fbc20.  call temp:= `l`(v0) @signature `Lz1/g0;.l:()I` @kind interface;
  #L4fbc26.  v0:= temp;
  #L4fbc28.  v1:= v3.`v1.j1.C` @type ^`z1.m` @kind object;
  #L4fbc2c.  if v1 != 0 then goto L4fbc54;
  #L4fbc30.  v3:= v3.`v1.j1.z` @type ^`java.lang.String` @kind object;
  #L4fbc34.  call temp:= `k`(v3) @signature `Ls3/u;.k:(Ljava/lang/String;)I` @kind static;
  #L4fbc3a.  v3:= temp;
  #L4fbc3c.  v1:= v2.`z1.h.g` @type ^`int`[] @kind object;
  #L4fbc40.  call temp:= `x0`(v1, v3) @signature `Ls3/l0;.x0:([II)I` @kind static;
  #L4fbc46.  v3:= temp;
  #L4fbc48.  v1:= -1I;
  #L4fbc4a.  if v3 == v1 then goto L4fbc50;
  #L4fbc4e.  goto L4fbc52;
  #L4fbc50.  v0:= 0I;
  #L4fbc52.  return v0;
  #L4fbc54.  call temp:= `w`(v2, v1) @signature `Lz1/h;.w:(Lz1/m;)Z` @kind direct;
  #L4fbc5a.  v3:= temp;
  #L4fbc5c.  if v3 == 0 then goto L4fbc62;
  #L4fbc60.  goto L4fbc64;
  #L4fbc62.  v0:= 1I;
  #L4fbc64.  return v0;
}
procedure `z1.y$b` `f`(`z1.h` v1 @kind this, `z1.w$a` v2 @kind object, `v1.j1` v3 @kind object) @signature `Lz1/h;.f:(Lz1/w$a;Lv1/j1;)Lz1/y$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc520.  v0:= v1.`z1.h.p` @type ^`int`;
  #L4fc524.  if v0 <= 0 then goto L4fc52c;
  #L4fc528.  v0:= 1I;
  #L4fc52a.  goto L4fc52e;
  #L4fc52c.  v0:= 0I;
  #L4fc52e.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4fc534.  v0:= v1.`z1.h.t` @type ^`android.os.Looper` @kind object;
  #L4fc538.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fc53e.  v0:= new `z1.h$f`;
  #L4fc542.  call `<init>`(v0, v1, v2) @signature `Lz1/h$f;.<init>:(Lz1/h;Lz1/w$a;)V` @kind direct;
  #L4fc548.  call `d`(v0, v3) @signature `Lz1/h$f;.d:(Lv1/j1;)V` @kind virtual;
  #L4fc54e.  return v0 @kind object;
}
