record `z1.f` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `s3.g` @kind interface {
}
global `z1.f` `@@z1.f.a` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lz1/f;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L4facf0.  v0:= new `z1.f`;
  #L4facf4.  call `<init>`(v0) @signature `Lz1/f;.<init>:()V` @kind direct;
  #L4facfa.  `@@z1.f.a` @type ^`z1.f` := v0 @kind object;
  #L4facfe.  return @kind void;
}
procedure `void` `<init>`(`z1.f` v0 @kind this) @signature `Lz1/f;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4fad10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fad16.  return @kind void;
}
procedure `void` `accept`(`z1.f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lz1/f;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4fad28.  v1:= (`z1.w$a`) v1 @kind object;
  #L4fad2c.  call `j`(v1) @signature `Lz1/w$a;.j:()V` @kind virtual;
  #L4fad32.  return @kind void;
}
