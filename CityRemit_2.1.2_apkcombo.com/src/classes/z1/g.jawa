record `z1.g` @kind class @AccessFlag  extends `z1.o` @kind interface {
  `java.util.List` `z1.g.a` @AccessFlag PUBLIC_FINAL;
  `z1.g0` `z1.g.b` @AccessFlag PRIVATE_FINAL;
  `z1.g$a` `z1.g.c` @AccessFlag PRIVATE_FINAL;
  `z1.g$b` `z1.g.d` @AccessFlag PRIVATE_FINAL;
  `int` `z1.g.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `z1.g.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `z1.g.g` @AccessFlag PRIVATE_FINAL;
  `java.util.HashMap` `z1.g.h` @AccessFlag PRIVATE_FINAL;
  `s3.h` `z1.g.i` @AccessFlag PRIVATE_FINAL;
  `r3.g0` `z1.g.j` @AccessFlag PRIVATE_FINAL;
  `w1.t1` `z1.g.k` @AccessFlag PRIVATE_FINAL;
  `z1.n0` `z1.g.l` @AccessFlag FINAL;
  `java.util.UUID` `z1.g.m` @AccessFlag FINAL;
  `z1.g$e` `z1.g.n` @AccessFlag FINAL;
  `int` `z1.g.o` @AccessFlag PRIVATE;
  `int` `z1.g.p` @AccessFlag PRIVATE;
  `android.os.HandlerThread` `z1.g.q` @AccessFlag PRIVATE;
  `z1.g$c` `z1.g.r` @AccessFlag PRIVATE;
  `y1.b` `z1.g.s` @AccessFlag PRIVATE;
  `z1.o$a` `z1.g.t` @AccessFlag PRIVATE;
  `byte`[] `z1.g.u` @AccessFlag PRIVATE;
  `byte`[] `z1.g.v` @AccessFlag PRIVATE;
  `z1.g0$a` `z1.g.w` @AccessFlag PRIVATE;
  `z1.g0$d` `z1.g.x` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`z1.g` v1 @kind this, `java.util.UUID` v2 @kind object, `z1.g0` v3 @kind object, `z1.g$a` v4 @kind object, `z1.g$b` v5 @kind object, `java.util.List` v6 @kind object, `int` v7 , `boolean` v8 , `boolean` v9 , `byte`[] v10 @kind object, `java.util.HashMap` v11 @kind object, `z1.n0` v12 @kind object, `android.os.Looper` v13 @kind object, `r3.g0` v14 @kind object, `w1.t1` v15 @kind object) @signature `Lz1/g;.<init>:(Ljava/util/UUID;Lz1/g0;Lz1/g$a;Lz1/g$b;Ljava/util/List;IZZ[BLjava/util/HashMap;Lz1/n0;Landroid/os/Looper;Lr3/g0;Lw1/t1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fc7e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fc7ee.  v0:= 1I;
  #L4fc7f0.  if v7 == v0 then goto L4fc7fa;
  #L4fc7f4.  v0:= 3I;
  #L4fc7f6.  if v7 != v0 then goto L4fc800;
  #L4fc7fa.  call temp:= `e`(v10) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fc800.  v1.`z1.g.m` @type ^`java.util.UUID` := v2 @kind object;
  #L4fc804.  v1.`z1.g.c` @type ^`z1.g$a` := v4 @kind object;
  #L4fc808.  v1.`z1.g.d` @type ^`z1.g$b` := v5 @kind object;
  #L4fc80c.  v1.`z1.g.b` @type ^`z1.g0` := v3 @kind object;
  #L4fc810.  v1.`z1.g.e` @type ^`int` := v7;
  #L4fc814.  v1.`z1.g.f` @type ^`boolean` := v8 @kind boolean;
  #L4fc818.  v1.`z1.g.g` @type ^`boolean` := v9 @kind boolean;
  #L4fc81c.  if v10 == 0 then goto L4fc828;
  #L4fc820.  v1.`z1.g.v` @type ^`byte`[] := v10 @kind object;
  #L4fc824.  v2:= 0I;
  #L4fc826.  goto L4fc83c;
  #L4fc828.  call temp:= `e`(v6) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fc82e.  v2:= temp @kind object;
  #L4fc830.  v2:= (`java.util.List`) v2 @kind object;
  #L4fc834.  call temp:= `unmodifiableList`(v2) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L4fc83a.  v2:= temp @kind object;
  #L4fc83c.  v1.`z1.g.a` @type ^`java.util.List` := v2 @kind object;
  #L4fc840.  v1.`z1.g.h` @type ^`java.util.HashMap` := v11 @kind object;
  #L4fc844.  v1.`z1.g.l` @type ^`z1.n0` := v12 @kind object;
  #L4fc848.  v2:= new `s3.h`;
  #L4fc84c.  call `<init>`(v2) @signature `Ls3/h;.<init>:()V` @kind direct;
  #L4fc852.  v1.`z1.g.i` @type ^`s3.h` := v2 @kind object;
  #L4fc856.  v1.`z1.g.j` @type ^`r3.g0` := v14 @kind object;
  #L4fc85a.  v1.`z1.g.k` @type ^`w1.t1` := v15 @kind object;
  #L4fc85e.  v2:= 2I;
  #L4fc860.  v1.`z1.g.o` @type ^`int` := v2;
  #L4fc864.  v2:= new `z1.g$e`;
  #L4fc868.  call `<init>`(v2, v1, v13) @signature `Lz1/g$e;.<init>:(Lz1/g;Landroid/os/Looper;)V` @kind direct;
  #L4fc86e.  v1.`z1.g.n` @type ^`z1.g$e` := v2 @kind object;
  #L4fc872.  return @kind void;
}
procedure `void` `B`(`z1.g` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lz1/g;.B:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fcd58.  v0:= v1.`z1.g.x` @type ^`z1.g0$d` @kind object;
  #L4fcd5c.  if v2 != v0 then goto L4fcdc0;
  #L4fcd60.  v2:= v1.`z1.g.o` @type ^`int`;
  #L4fcd64.  v0:= 2I;
  #L4fcd66.  if v2 == v0 then goto L4fcd78;
  #L4fcd6a.  call temp:= `r`(v1) @signature `Lz1/g;.r:()Z` @kind direct;
  #L4fcd70.  v2:= temp;
  #L4fcd72.  if v2 != 0 then goto L4fcd78;
  #L4fcd76.  goto L4fcdc0;
  #L4fcd78.  v2:= 0I;
  #L4fcd7a.  v1.`z1.g.x` @type ^`z1.g0$d` := v2 @kind object;
  #L4fcd7e.  v2:= instanceof @variable v3 @type ^`java.lang.Exception` @kind boolean;
  #L4fcd82.  if v2 == 0 then goto L4fcd98;
  #L4fcd86.  v2:= v1.`z1.g.c` @type ^`z1.g$a` @kind object;
  #L4fcd8a.  v3:= (`java.lang.Exception`) v3 @kind object;
  #L4fcd8e.  v0:= 0I;
  #L4fcd90.  call `b`(v2, v3, v0) @signature `Lz1/g$a;.b:(Ljava/lang/Exception;Z)V` @kind interface;
  #L4fcd96.  return @kind void;
  #L4fcd98.  v2:= v1.`z1.g.b` @type ^`z1.g0` @kind object;
  #L4fcd9c.  v3:= (`byte`[]) v3 @kind object;
  #L4fcda0.  call `j`(v2, v3) @signature `Lz1/g0;.j:([B)V` @kind interface;
  #L4fcda6.  v2:= v1.`z1.g.c` @type ^`z1.g$a` @kind object;
  #L4fcdaa.  call `a`(v2) @signature `Lz1/g$a;.a:()V` @kind interface;
  #L4fcdb0.  return @kind void;
  #L4fcdb2.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L4fcdb4.  v3:= v1.`z1.g.c` @type ^`z1.g$a` @kind object;
  #L4fcdb8.  v0:= 1I;
  #L4fcdba.  call `b`(v3, v2, v0) @signature `Lz1/g$a;.b:(Ljava/lang/Exception;Z)V` @kind interface;
  #L4fcdc0.  return @kind void;
  catch `java.lang.Exception` @[L4fcd98..L4fcda6] goto L4fcdb2;
}
procedure `boolean` `C`(`z1.g` v4 @kind this) @signature `Lz1/g;.C:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fc5ac.  call temp:= `r`(v4) @signature `Lz1/g;.r:()Z` @kind direct;
  #L4fc5b2.  v0:= temp;
  #L4fc5b4.  v1:= 1I;
  #L4fc5b6.  if v0 == 0 then goto L4fc5bc;
  #L4fc5ba.  return v1;
  #L4fc5bc.  v0:= v4.`z1.g.b` @type ^`z1.g0` @kind object;
  #L4fc5c0.  call temp:= `n`(v0) @signature `Lz1/g0;.n:()[B` @kind interface;
  #L4fc5c6.  v0:= temp @kind object;
  #L4fc5c8.  v4.`z1.g.u` @type ^`byte`[] := v0 @kind object;
  #L4fc5cc.  v2:= v4.`z1.g.b` @type ^`z1.g0` @kind object;
  #L4fc5d0.  v3:= v4.`z1.g.k` @type ^`w1.t1` @kind object;
  #L4fc5d4.  call `g`(v2, v0, v3) @signature `Lz1/g0;.g:([BLw1/t1;)V` @kind interface;
  #L4fc5da.  v0:= v4.`z1.g.b` @type ^`z1.g0` @kind object;
  #L4fc5de.  v2:= v4.`z1.g.u` @type ^`byte`[] @kind object;
  #L4fc5e2.  call temp:= `m`(v0, v2) @signature `Lz1/g0;.m:([B)Ly1/b;` @kind interface;
  #L4fc5e8.  v0:= temp @kind object;
  #L4fc5ea.  v4.`z1.g.s` @type ^`y1.b` := v0 @kind object;
  #L4fc5ee.  v0:= 3I;
  #L4fc5f0.  v4.`z1.g.o` @type ^`int` := v0;
  #L4fc5f4.  v2:= new `z1.b`;
  #L4fc5f8.  call `<init>`(v2, v0) @signature `Lz1/b;.<init>:(I)V` @kind direct;
  #L4fc5fe.  call `n`(v4, v2) @signature `Lz1/g;.n:(Ls3/g;)V` @kind direct;
  #L4fc604.  v0:= v4.`z1.g.u` @type ^`byte`[] @kind object;
  #L4fc608.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fc60e.  return v1;
  #L4fc610.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L4fc612.  call `u`(v4, v0, v1) @signature `Lz1/g;.u:(Ljava/lang/Exception;I)V` @kind direct;
  #L4fc618.  goto L4fc624;
  #L4fc61a.  v0:= v4.`z1.g.c` @type ^`z1.g$a` @kind object;
  #L4fc61e.  call `c`(v0, v4) @signature `Lz1/g$a;.c:(Lz1/g;)V` @kind interface;
  #L4fc624.  v0:= 0I;
  #L4fc626.  return v0;
  catch `android.media.NotProvisionedException` @[L4fc5bc..L4fc60e] goto L4fc61a;
  catch `java.lang.Exception` @[L4fc5bc..L4fc60e] goto L4fc610;
}
procedure `void` `D`(`z1.g` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `boolean` v7 ) @signature `Lz1/g;.D:([BIZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fcde4.  v0:= 1I;
  #L4fcde6.  v1:= v4.`z1.g.b` @type ^`z1.g0` @kind object;
  #L4fcdea.  v2:= v4.`z1.g.a` @type ^`java.util.List` @kind object;
  #L4fcdee.  v3:= v4.`z1.g.h` @type ^`java.util.HashMap` @kind object;
  #L4fcdf2.  call temp:= `k`(v1, v5, v2, v6, v3) @signature `Lz1/g0;.k:([BLjava/util/List;ILjava/util/HashMap;)Lz1/g0$a;` @kind interface;
  #L4fcdf8.  v5:= temp @kind object;
  #L4fcdfa.  v4.`z1.g.w` @type ^`z1.g0$a` := v5 @kind object;
  #L4fcdfe.  v5:= v4.`z1.g.r` @type ^`z1.g$c` @kind object;
  #L4fce02.  call temp:= `j`(v5) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fce08.  v5:= temp @kind object;
  #L4fce0a.  v5:= (`z1.g$c`) v5 @kind object;
  #L4fce0e.  v6:= v4.`z1.g.w` @type ^`z1.g0$a` @kind object;
  #L4fce12.  call temp:= `e`(v6) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fce18.  v6:= temp @kind object;
  #L4fce1a.  call `b`(v5, v0, v6, v7) @signature `Lz1/g$c;.b:(ILjava/lang/Object;Z)V` @kind virtual;
  #L4fce20.  goto L4fce2a;
  #L4fce22.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L4fce24.  call `w`(v4, v5, v0) @signature `Lz1/g;.w:(Ljava/lang/Exception;Z)V` @kind direct;
  #L4fce2a.  return @kind void;
  catch `java.lang.Exception` @[L4fcde6..L4fce20] goto L4fce22;
}
procedure `boolean` `F`(`z1.g` v4 @kind this) @signature `Lz1/g;.F:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fc690.  v0:= 1I;
  #L4fc692.  v1:= v4.`z1.g.b` @type ^`z1.g0` @kind object;
  #L4fc696.  v2:= v4.`z1.g.u` @type ^`byte`[] @kind object;
  #L4fc69a.  v3:= v4.`z1.g.v` @type ^`byte`[] @kind object;
  #L4fc69e.  call `d`(v1, v2, v3) @signature `Lz1/g0;.d:([B[B)V` @kind interface;
  #L4fc6a4.  return v0;
  #L4fc6a6.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L4fc6a8.  call `u`(v4, v1, v0) @signature `Lz1/g;.u:(Ljava/lang/Exception;I)V` @kind direct;
  #L4fc6ae.  v0:= 0I;
  #L4fc6b0.  return v0;
  catch `java.lang.Exception` @[L4fc692..L4fc6a4] goto L4fc6a6;
}
procedure `void` `i`(`java.lang.Exception` v0 @kind object, `z1.w$a` v1 @kind object) @signature `Lz1/g;.i:(Ljava/lang/Exception;Lz1/w$a;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L4fc7b8.  call `s`(v0, v1) @signature `Lz1/g;.s:(Ljava/lang/Exception;Lz1/w$a;)V` @kind static;
  #L4fc7be.  return @kind void;
}
procedure `void` `j`(`int` v0 , `z1.w$a` v1 @kind object) @signature `Lz1/g;.j:(ILz1/w$a;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L4fc7d0.  call `t`(v0, v1) @signature `Lz1/g;.t:(ILz1/w$a;)V` @kind static;
  #L4fc7d6.  return @kind void;
}
procedure `void` `k`(`z1.g` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lz1/g;.k:(Lz1/g;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fc884.  call `B`(v0, v1, v2) @signature `Lz1/g;.B:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L4fc88a.  return @kind void;
}
procedure `void` `l`(`z1.g` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lz1/g;.l:(Lz1/g;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fc89c.  call `v`(v0, v1, v2) @signature `Lz1/g;.v:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L4fc8a2.  return @kind void;
}
procedure `r3.g0` `m`(`z1.g` v0 @kind object) @signature `Lz1/g;.m:(Lz1/g;)Lr3/g0;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fc7a0.  v0:= v0.`z1.g.j` @type ^`r3.g0` @kind object;
  #L4fc7a4.  return v0 @kind object;
}
procedure `void` `n`(`z1.g` v2 @kind this, `s3.g` v3 @kind object) @signature `Lz1/g;.n:(Ls3/g;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4fc9b4.  v0:= v2.`z1.g.i` @type ^`s3.h` @kind object;
  #L4fc9b8.  call temp:= `r`(v0) @signature `Ls3/h;.r:()Ljava/util/Set;` @kind virtual;
  #L4fc9be.  v0:= temp @kind object;
  #L4fc9c0.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4fc9c6.  v0:= temp @kind object;
  #L4fc9c8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4fc9ce.  v1:= temp;
  #L4fc9d0.  if v1 == 0 then goto L4fc9e8;
  #L4fc9d4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4fc9da.  v1:= temp @kind object;
  #L4fc9dc.  v1:= (`z1.w$a`) v1 @kind object;
  #L4fc9e0.  call `accept`(v3, v1) @signature `Ls3/g;.accept:(Ljava/lang/Object;)V` @kind interface;
  #L4fc9e6.  goto L4fc9c8;
  #L4fc9e8.  return @kind void;
}
procedure `void` `o`(`z1.g` v8 @kind this, `boolean` v9 ) @signature `Lz1/g;.o:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4fc9fc.  v0:= v8.`z1.g.g` @type ^`boolean` @kind boolean;
  #L4fca00.  if v0 == 0 then goto L4fca06;
  #L4fca04.  return @kind void;
  #L4fca06.  v0:= v8.`z1.g.u` @type ^`byte`[] @kind object;
  #L4fca0a.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fca10.  v0:= temp @kind object;
  #L4fca12.  v0:= (`byte`[]) v0 @kind object;
  #L4fca16.  v1:= v8.`z1.g.e` @type ^`int`;
  #L4fca1a.  v2:= 1I;
  #L4fca1c.  v3:= 2I;
  #L4fca1e.  if v1 == 0 then goto L4fca70;
  #L4fca22.  if v1 == v2 then goto L4fca70;
  #L4fca26.  if v1 == v3 then goto L4fca54;
  #L4fca2a.  v0:= 3I;
  #L4fca2c.  if v1 == v0 then goto L4fca34;
  #L4fca30.  goto L4fcb0c;
  #L4fca34.  v1:= v8.`z1.g.v` @type ^`byte`[] @kind object;
  #L4fca38.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fca3e.  v1:= v8.`z1.g.u` @type ^`byte`[] @kind object;
  #L4fca42.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fca48.  v1:= v8.`z1.g.v` @type ^`byte`[] @kind object;
  #L4fca4c.  call `D`(v8, v1, v0, v9) @signature `Lz1/g;.D:([BIZ)V` @kind direct;
  #L4fca52.  goto L4fcb0c;
  #L4fca54.  v1:= v8.`z1.g.v` @type ^`byte`[] @kind object;
  #L4fca58.  if v1 == 0 then goto L4fca68;
  #L4fca5c.  call temp:= `F`(v8) @signature `Lz1/g;.F:()Z` @kind direct;
  #L4fca62.  v1:= temp;
  #L4fca64.  if v1 == 0 then goto L4fcb0c;
  #L4fca68.  call `D`(v8, v0, v3, v9) @signature `Lz1/g;.D:([BIZ)V` @kind direct;
  #L4fca6e.  goto L4fcb0c;
  #L4fca70.  v1:= v8.`z1.g.v` @type ^`byte`[] @kind object;
  #L4fca74.  if v1 != 0 then goto L4fca80;
  #L4fca78.  call `D`(v8, v0, v2, v9) @signature `Lz1/g;.D:([BIZ)V` @kind direct;
  #L4fca7e.  goto L4fcb0c;
  #L4fca80.  v1:= v8.`z1.g.o` @type ^`int`;
  #L4fca84.  v2:= 4I;
  #L4fca86.  if v1 == v2 then goto L4fca96;
  #L4fca8a.  call temp:= `F`(v8) @signature `Lz1/g;.F:()Z` @kind direct;
  #L4fca90.  v1:= temp;
  #L4fca92.  if v1 == 0 then goto L4fcb0c;
  #L4fca96.  call temp:= `p`(v8) @signature `Lz1/g;.p:()J` @kind direct;
  #L4fca9c.  v4:= temp @kind wide;
  #L4fca9e.  v1:= v8.`z1.g.e` @type ^`int`;
  #L4fcaa2.  if v1 != 0 then goto L4fcae0;
  #L4fcaa6.  v6:= 60L;
  #L4fcaaa.  v1:= lcmp(v4, v6);
  #L4fcaae.  if v1 > 0 then goto L4fcae0;
  #L4fcab2.  v1:= new `java.lang.StringBuilder`;
  #L4fcab6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fcabc.  v2:= "Offline license has expired or will expire soon. Remaining seconds: " @kind object;
  #L4fcac0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fcac6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fcacc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fcad2.  v1:= temp @kind object;
  #L4fcad4.  v2:= "DefaultDrmSession" @kind object;
  #L4fcad8.  call `b`(v2, v1) @signature `Ls3/q;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L4fcade.  goto L4fca68;
  #L4fcae0.  v0:= 0L;
  #L4fcae4.  v9:= lcmp(v4, v0);
  #L4fcae8.  if v9 > 0 then goto L4fcafe;
  #L4fcaec.  v9:= new `z1.m0`;
  #L4fcaf0.  call `<init>`(v9) @signature `Lz1/m0;.<init>:()V` @kind direct;
  #L4fcaf6.  call `u`(v8, v9, v3) @signature `Lz1/g;.u:(Ljava/lang/Exception;I)V` @kind direct;
  #L4fcafc.  goto L4fcb0c;
  #L4fcafe.  v8.`z1.g.o` @type ^`int` := v2;
  #L4fcb02.  v9:= `@@z1.f.a` @type ^`z1.f` @kind object;
  #L4fcb06.  call `n`(v8, v9) @signature `Lz1/g;.n:(Ls3/g;)V` @kind direct;
  #L4fcb0c.  return @kind void;
}
procedure `long` `p`(`z1.g` v5 @kind this) @signature `Lz1/g;.p:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fc730.  v0:= `@@v1.h.d` @type ^`java.util.UUID` @kind object;
  #L4fc734.  v1:= v5.`z1.g.m` @type ^`java.util.UUID` @kind object;
  #L4fc738.  call temp:= `equals`(v0, v1) @signature `Ljava/util/UUID;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fc73e.  v0:= temp;
  #L4fc740.  if v0 != 0 then goto L4fc750;
  #L4fc744.  v0:= 9223372036854775807L;
  #L4fc74e.  return v0 @kind wide;
  #L4fc750.  call temp:= `b`(v5) @signature `Lz1/q0;.b:(Lz1/o;)Landroid/util/Pair;` @kind static;
  #L4fc756.  v0:= temp @kind object;
  #L4fc758.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fc75e.  v0:= temp @kind object;
  #L4fc760.  v0:= (`android.util.Pair`) v0 @kind object;
  #L4fc764.  v1:= v0.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L4fc768.  v1:= (`java.lang.Long`) v1 @kind object;
  #L4fc76c.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4fc772.  v1:= temp @kind wide;
  #L4fc774.  v0:= v0.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L4fc778.  v0:= (`java.lang.Long`) v0 @kind object;
  #L4fc77c.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4fc782.  v3:= temp @kind wide;
  #L4fc784.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L4fc78a.  v0:= temp @kind wide;
  #L4fc78c.  return v0 @kind wide;
}
procedure `boolean` `r`(`z1.g` v2 @kind this) @signature `Lz1/g;.r:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4fc580.  v0:= v2.`z1.g.o` @type ^`int`;
  #L4fc584.  v1:= 3I;
  #L4fc586.  if v0 == v1 then goto L4fc596;
  #L4fc58a.  v1:= 4I;
  #L4fc58c.  if v0 != v1 then goto L4fc592;
  #L4fc590.  goto L4fc596;
  #L4fc592.  v0:= 0I;
  #L4fc594.  goto L4fc598;
  #L4fc596.  v0:= 1I;
  #L4fc598.  return v0;
}
procedure `void` `s`(`java.lang.Exception` v0 @kind object, `z1.w$a` v1 @kind object) @signature `Lz1/g;.s:(Ljava/lang/Exception;Lz1/w$a;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L4fcb20.  call `l`(v1, v0) @signature `Lz1/w$a;.l:(Ljava/lang/Exception;)V` @kind virtual;
  #L4fcb26.  return @kind void;
}
procedure `void` `t`(`int` v0 , `z1.w$a` v1 @kind object) @signature `Lz1/g;.t:(ILz1/w$a;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L4fcb38.  call `k`(v1, v0) @signature `Lz1/w$a;.k:(I)V` @kind virtual;
  #L4fcb3e.  return @kind void;
}
procedure `void` `u`(`z1.g` v1 @kind this, `java.lang.Exception` v2 @kind object, `int` v3 ) @signature `Lz1/g;.u:(Ljava/lang/Exception;I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fcb50.  v0:= new `z1.o$a`;
  #L4fcb54.  call temp:= `a`(v2, v3) @signature `Lz1/c0;.a:(Ljava/lang/Exception;I)I` @kind static;
  #L4fcb5a.  v3:= temp;
  #L4fcb5c.  call `<init>`(v0, v2, v3) @signature `Lz1/o$a;.<init>:(Ljava/lang/Throwable;I)V` @kind direct;
  #L4fcb62.  v1.`z1.g.t` @type ^`z1.o$a` := v0 @kind object;
  #L4fcb66.  v3:= "DefaultDrmSession" @kind object;
  #L4fcb6a.  v0:= "DRM session error" @kind object;
  #L4fcb6e.  call `d`(v3, v0, v2) @signature `Ls3/q;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L4fcb74.  v3:= new `z1.c`;
  #L4fcb78.  call `<init>`(v3, v2) @signature `Lz1/c;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L4fcb7e.  call `n`(v1, v3) @signature `Lz1/g;.n:(Ls3/g;)V` @kind direct;
  #L4fcb84.  v2:= v1.`z1.g.o` @type ^`int`;
  #L4fcb88.  v3:= 4I;
  #L4fcb8a.  if v2 == v3 then goto L4fcb94;
  #L4fcb8e.  v2:= 1I;
  #L4fcb90.  v1.`z1.g.o` @type ^`int` := v2;
  #L4fcb94.  return @kind void;
}
procedure `void` `v`(`z1.g` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lz1/g;.v:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fcba8.  v0:= v1.`z1.g.w` @type ^`z1.g0$a` @kind object;
  #L4fcbac.  if v2 != v0 then goto L4fcc58;
  #L4fcbb0.  call temp:= `r`(v1) @signature `Lz1/g;.r:()Z` @kind direct;
  #L4fcbb6.  v2:= temp;
  #L4fcbb8.  if v2 != 0 then goto L4fcbbe;
  #L4fcbbc.  goto L4fcc58;
  #L4fcbbe.  v2:= 0I;
  #L4fcbc0.  v1.`z1.g.w` @type ^`z1.g0$a` := v2 @kind object;
  #L4fcbc4.  v2:= instanceof @variable v3 @type ^`java.lang.Exception` @kind boolean;
  #L4fcbc8.  if v2 == 0 then goto L4fcbda;
  #L4fcbcc.  v3:= (`java.lang.Exception`) v3 @kind object;
  #L4fcbd0.  v2:= 0I;
  #L4fcbd2.  call `w`(v1, v3, v2) @signature `Lz1/g;.w:(Ljava/lang/Exception;Z)V` @kind direct;
  #L4fcbd8.  return @kind void;
  #L4fcbda.  v3:= (`byte`[]) v3 @kind object;
  #L4fcbde.  v2:= v1.`z1.g.e` @type ^`int`;
  #L4fcbe2.  v0:= 3I;
  #L4fcbe4.  if v2 != v0 then goto L4fcc0e;
  #L4fcbe8.  v2:= v1.`z1.g.b` @type ^`z1.g0` @kind object;
  #L4fcbec.  v0:= v1.`z1.g.v` @type ^`byte`[] @kind object;
  #L4fcbf0.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fcbf6.  v0:= temp @kind object;
  #L4fcbf8.  v0:= (`byte`[]) v0 @kind object;
  #L4fcbfc.  call temp:= `h`(v2, v0, v3) @signature `Lz1/g0;.h:([B[B)[B` @kind interface;
  #L4fcc02.  v2:= `@@z1.e.a` @type ^`z1.e` @kind object;
  #L4fcc06.  call `n`(v1, v2) @signature `Lz1/g;.n:(Ls3/g;)V` @kind direct;
  #L4fcc0c.  goto L4fcc58;
  #L4fcc0e.  v2:= v1.`z1.g.b` @type ^`z1.g0` @kind object;
  #L4fcc12.  v0:= v1.`z1.g.u` @type ^`byte`[] @kind object;
  #L4fcc16.  call temp:= `h`(v2, v0, v3) @signature `Lz1/g0;.h:([B[B)[B` @kind interface;
  #L4fcc1c.  v2:= temp @kind object;
  #L4fcc1e.  v3:= v1.`z1.g.e` @type ^`int`;
  #L4fcc22.  v0:= 2I;
  #L4fcc24.  if v3 == v0 then goto L4fcc34;
  #L4fcc28.  if v3 != 0 then goto L4fcc42;
  #L4fcc2c.  v3:= v1.`z1.g.v` @type ^`byte`[] @kind object;
  #L4fcc30.  if v3 == 0 then goto L4fcc42;
  #L4fcc34.  if v2 == 0 then goto L4fcc42;
  #L4fcc38.  v3:= length @variable v2;
  #L4fcc3a.  if v3 == 0 then goto L4fcc42;
  #L4fcc3e.  v1.`z1.g.v` @type ^`byte`[] := v2 @kind object;
  #L4fcc42.  v2:= 4I;
  #L4fcc44.  v1.`z1.g.o` @type ^`int` := v2;
  #L4fcc48.  v2:= `@@z1.d.a` @type ^`z1.d` @kind object;
  #L4fcc4c.  goto L4fcc06;
  #L4fcc4e.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L4fcc50.  v3:= 1I;
  #L4fcc52.  call `w`(v1, v2, v3) @signature `Lz1/g;.w:(Ljava/lang/Exception;Z)V` @kind direct;
  #L4fcc58.  return @kind void;
  catch `java.lang.Exception` @[L4fcbda..L4fcc4c] goto L4fcc4e;
}
procedure `void` `w`(`z1.g` v1 @kind this, `java.lang.Exception` v2 @kind object, `boolean` v3 ) @signature `Lz1/g;.w:(Ljava/lang/Exception;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fcc7c.  v0:= instanceof @variable v2 @type ^`android.media.NotProvisionedException` @kind boolean;
  #L4fcc80.  if v0 == 0 then goto L4fcc90;
  #L4fcc84.  v2:= v1.`z1.g.c` @type ^`z1.g$a` @kind object;
  #L4fcc88.  call `c`(v2, v1) @signature `Lz1/g$a;.c:(Lz1/g;)V` @kind interface;
  #L4fcc8e.  goto L4fcca0;
  #L4fcc90.  if v3 == 0 then goto L4fcc98;
  #L4fcc94.  v3:= 1I;
  #L4fcc96.  goto L4fcc9a;
  #L4fcc98.  v3:= 2I;
  #L4fcc9a.  call `u`(v1, v2, v3) @signature `Lz1/g;.u:(Ljava/lang/Exception;I)V` @kind direct;
  #L4fcca0.  return @kind void;
}
procedure `void` `x`(`z1.g` v2 @kind this) @signature `Lz1/g;.x:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4fccb4.  v0:= v2.`z1.g.e` @type ^`int`;
  #L4fccb8.  if v0 != 0 then goto L4fccd8;
  #L4fccbc.  v0:= v2.`z1.g.o` @type ^`int`;
  #L4fccc0.  v1:= 4I;
  #L4fccc2.  if v0 != v1 then goto L4fccd8;
  #L4fccc6.  v0:= v2.`z1.g.u` @type ^`byte`[] @kind object;
  #L4fccca.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fccd0.  v0:= 0I;
  #L4fccd2.  call `o`(v2, v0) @signature `Lz1/g;.o:(Z)V` @kind direct;
  #L4fccd8.  return @kind void;
}
procedure `void` `A`(`z1.g` v0 @kind this, `java.lang.Exception` v1 @kind object, `boolean` v2 ) @signature `Lz1/g;.A:(Ljava/lang/Exception;Z)V` @AccessFlag PUBLIC {
    temp;

  #L4fcd34.  if v2 == 0 then goto L4fcd3c;
  #L4fcd38.  v2:= 1I;
  #L4fcd3a.  goto L4fcd3e;
  #L4fcd3c.  v2:= 3I;
  #L4fcd3e.  call `u`(v0, v1, v2) @signature `Lz1/g;.u:(Ljava/lang/Exception;I)V` @kind direct;
  #L4fcd44.  return @kind void;
}
procedure `void` `E`(`z1.g` v4 @kind this) @signature `Lz1/g;.E:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fce4c.  v0:= v4.`z1.g.b` @type ^`z1.g0` @kind object;
  #L4fce50.  call temp:= `i`(v0) @signature `Lz1/g0;.i:()Lz1/g0$d;` @kind interface;
  #L4fce56.  v0:= temp @kind object;
  #L4fce58.  v4.`z1.g.x` @type ^`z1.g0$d` := v0 @kind object;
  #L4fce5c.  v0:= v4.`z1.g.r` @type ^`z1.g$c` @kind object;
  #L4fce60.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fce66.  v0:= temp @kind object;
  #L4fce68.  v0:= (`z1.g$c`) v0 @kind object;
  #L4fce6c.  v1:= v4.`z1.g.x` @type ^`z1.g0$d` @kind object;
  #L4fce70.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fce76.  v1:= temp @kind object;
  #L4fce78.  v2:= 0I;
  #L4fce7a.  v3:= 1I;
  #L4fce7c.  call `b`(v0, v2, v1, v3) @signature `Lz1/g$c;.b:(ILjava/lang/Object;Z)V` @kind virtual;
  #L4fce82.  return @kind void;
}
procedure `boolean` `a`(`z1.g` v1 @kind this) @signature `Lz1/g;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc648.  v0:= v1.`z1.g.f` @type ^`boolean` @kind boolean;
  #L4fc64c.  return v0;
}
procedure `java.util.Map` `b`(`z1.g` v2 @kind this) @signature `Lz1/g;.b:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fc6ec.  v0:= v2.`z1.g.u` @type ^`byte`[] @kind object;
  #L4fc6f0.  if v0 != 0 then goto L4fc6f8;
  #L4fc6f4.  v0:= 0I;
  #L4fc6f6.  goto L4fc704;
  #L4fc6f8.  v1:= v2.`z1.g.b` @type ^`z1.g0` @kind object;
  #L4fc6fc.  call temp:= `e`(v1, v0) @signature `Lz1/g0;.e:([B)Ljava/util/Map;` @kind interface;
  #L4fc702.  v0:= temp @kind object;
  #L4fc704.  return v0 @kind object;
}
procedure `void` `c`(`z1.g` v3 @kind this, `z1.w$a` v4 @kind object) @signature `Lz1/g;.c:(Lz1/w$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fc8b4.  v0:= v3.`z1.g.p` @type ^`int`;
  #L4fc8b8.  v1:= 0I;
  #L4fc8ba.  if v0 >= 0 then goto L4fc8f2;
  #L4fc8be.  v0:= new `java.lang.StringBuilder`;
  #L4fc8c2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc8c8.  v2:= "Session reference count less than zero: " @kind object;
  #L4fc8cc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc8d2.  v2:= v3.`z1.g.p` @type ^`int`;
  #L4fc8d6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc8dc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fc8e2.  v0:= temp @kind object;
  #L4fc8e4.  v2:= "DefaultDrmSession" @kind object;
  #L4fc8e8.  call `c`(v2, v0) @signature `Ls3/q;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L4fc8ee.  v3.`z1.g.p` @type ^`int` := v1;
  #L4fc8f2.  if v4 == 0 then goto L4fc900;
  #L4fc8f6.  v0:= v3.`z1.g.i` @type ^`s3.h` @kind object;
  #L4fc8fa.  call `b`(v0, v4) @signature `Ls3/h;.b:(Ljava/lang/Object;)V` @kind virtual;
  #L4fc900.  v0:= v3.`z1.g.p` @type ^`int`;
  #L4fc904.  v2:= 1I;
  #L4fc906.  v0:= v0 + v2 @kind int;
  #L4fc908.  v3.`z1.g.p` @type ^`int` := v0;
  #L4fc90c.  if v0 != v2 then goto L4fc968;
  #L4fc910.  v4:= v3.`z1.g.o` @type ^`int`;
  #L4fc914.  v0:= 2I;
  #L4fc916.  if v4 != v0 then goto L4fc91c;
  #L4fc91a.  v1:= 1I;
  #L4fc91c.  call `f`(v1) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4fc922.  v4:= new `android.os.HandlerThread`;
  #L4fc926.  v0:= "ExoPlayer:DrmRequestHandler" @kind object;
  #L4fc92a.  call `<init>`(v4, v0) @signature `Landroid/os/HandlerThread;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc930.  v3.`z1.g.q` @type ^`android.os.HandlerThread` := v4 @kind object;
  #L4fc934.  call `start`(v4) @signature `Landroid/os/HandlerThread;.start:()V` @kind virtual;
  #L4fc93a.  v4:= new `z1.g$c`;
  #L4fc93e.  v0:= v3.`z1.g.q` @type ^`android.os.HandlerThread` @kind object;
  #L4fc942.  call temp:= `getLooper`(v0) @signature `Landroid/os/HandlerThread;.getLooper:()Landroid/os/Looper;` @kind virtual;
  #L4fc948.  v0:= temp @kind object;
  #L4fc94a.  call `<init>`(v4, v3, v0) @signature `Lz1/g$c;.<init>:(Lz1/g;Landroid/os/Looper;)V` @kind direct;
  #L4fc950.  v3.`z1.g.r` @type ^`z1.g$c` := v4 @kind object;
  #L4fc954.  call temp:= `C`(v3) @signature `Lz1/g;.C:()Z` @kind direct;
  #L4fc95a.  v4:= temp;
  #L4fc95c.  if v4 == 0 then goto L4fc992;
  #L4fc960.  call `o`(v3, v2) @signature `Lz1/g;.o:(Z)V` @kind direct;
  #L4fc966.  goto L4fc992;
  #L4fc968.  if v4 == 0 then goto L4fc992;
  #L4fc96c.  call temp:= `r`(v3) @signature `Lz1/g;.r:()Z` @kind direct;
  #L4fc972.  v0:= temp;
  #L4fc974.  if v0 == 0 then goto L4fc992;
  #L4fc978.  v0:= v3.`z1.g.i` @type ^`s3.h` @kind object;
  #L4fc97c.  call temp:= `f`(v0, v4) @signature `Ls3/h;.f:(Ljava/lang/Object;)I` @kind virtual;
  #L4fc982.  v0:= temp;
  #L4fc984.  if v0 != v2 then goto L4fc992;
  #L4fc988.  v0:= v3.`z1.g.o` @type ^`int`;
  #L4fc98c.  call `k`(v4, v0) @signature `Lz1/w$a;.k:(I)V` @kind virtual;
  #L4fc992.  v4:= v3.`z1.g.d` @type ^`z1.g$b` @kind object;
  #L4fc996.  v0:= v3.`z1.g.p` @type ^`int`;
  #L4fc99a.  call `b`(v4, v3, v0) @signature `Lz1/g$b;.b:(Lz1/g;I)V` @kind interface;
  #L4fc9a0.  return @kind void;
}
procedure `java.util.UUID` `d`(`z1.g` v1 @kind this) @signature `Lz1/g;.d:()Ljava/util/UUID;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4fc718.  v0:= v1.`z1.g.m` @type ^`java.util.UUID` @kind object;
  #L4fc71c.  return v0 @kind object;
}
procedure `void` `e`(`z1.g` v3 @kind this, `z1.w$a` v4 @kind object) @signature `Lz1/g;.e:(Lz1/w$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fce94.  v0:= v3.`z1.g.p` @type ^`int`;
  #L4fce98.  if v0 > 0 then goto L4fceac;
  #L4fce9c.  v4:= "DefaultDrmSession" @kind object;
  #L4fcea0.  v0:= "release() called on a session that's already fully released." @kind object;
  #L4fcea4.  call `c`(v4, v0) @signature `Ls3/q;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L4fceaa.  return @kind void;
  #L4fceac.  v0:= v0 + -1;
  #L4fceb0.  v3.`z1.g.p` @type ^`int` := v0;
  #L4fceb4.  if v0 != 0 then goto L4fcf30;
  #L4fceb8.  v0:= 0I;
  #L4fceba.  v3.`z1.g.o` @type ^`int` := v0;
  #L4fcebe.  v0:= v3.`z1.g.n` @type ^`z1.g$e` @kind object;
  #L4fcec2.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fcec8.  v0:= temp @kind object;
  #L4fceca.  v0:= (`z1.g$e`) v0 @kind object;
  #L4fcece.  v1:= 0I;
  #L4fced0.  call `removeCallbacksAndMessages`(v0, v1) @signature `Landroid/os/Handler;.removeCallbacksAndMessages:(Ljava/lang/Object;)V` @kind virtual;
  #L4fced6.  v0:= v3.`z1.g.r` @type ^`z1.g$c` @kind object;
  #L4fceda.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fcee0.  v0:= temp @kind object;
  #L4fcee2.  v0:= (`z1.g$c`) v0 @kind object;
  #L4fcee6.  call `c`(v0) @signature `Lz1/g$c;.c:()V` @kind virtual;
  #L4fceec.  v3.`z1.g.r` @type ^`z1.g$c` := v1 @kind object;
  #L4fcef0.  v0:= v3.`z1.g.q` @type ^`android.os.HandlerThread` @kind object;
  #L4fcef4.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fcefa.  v0:= temp @kind object;
  #L4fcefc.  v0:= (`android.os.HandlerThread`) v0 @kind object;
  #L4fcf00.  call temp:= `quit`(v0) @signature `Landroid/os/HandlerThread;.quit:()Z` @kind virtual;
  #L4fcf06.  v3.`z1.g.q` @type ^`android.os.HandlerThread` := v1 @kind object;
  #L4fcf0a.  v3.`z1.g.s` @type ^`y1.b` := v1 @kind object;
  #L4fcf0e.  v3.`z1.g.t` @type ^`z1.o$a` := v1 @kind object;
  #L4fcf12.  v3.`z1.g.w` @type ^`z1.g0$a` := v1 @kind object;
  #L4fcf16.  v3.`z1.g.x` @type ^`z1.g0$d` := v1 @kind object;
  #L4fcf1a.  v0:= v3.`z1.g.u` @type ^`byte`[] @kind object;
  #L4fcf1e.  if v0 == 0 then goto L4fcf30;
  #L4fcf22.  v2:= v3.`z1.g.b` @type ^`z1.g0` @kind object;
  #L4fcf26.  call `f`(v2, v0) @signature `Lz1/g0;.f:([B)V` @kind interface;
  #L4fcf2c.  v3.`z1.g.u` @type ^`byte`[] := v1 @kind object;
  #L4fcf30.  if v4 == 0 then goto L4fcf54;
  #L4fcf34.  v0:= v3.`z1.g.i` @type ^`s3.h` @kind object;
  #L4fcf38.  call `h`(v0, v4) @signature `Ls3/h;.h:(Ljava/lang/Object;)V` @kind virtual;
  #L4fcf3e.  v0:= v3.`z1.g.i` @type ^`s3.h` @kind object;
  #L4fcf42.  call temp:= `f`(v0, v4) @signature `Ls3/h;.f:(Ljava/lang/Object;)I` @kind virtual;
  #L4fcf48.  v0:= temp;
  #L4fcf4a.  if v0 != 0 then goto L4fcf54;
  #L4fcf4e.  call `m`(v4) @signature `Lz1/w$a;.m:()V` @kind virtual;
  #L4fcf54.  v4:= v3.`z1.g.d` @type ^`z1.g$b` @kind object;
  #L4fcf58.  v0:= v3.`z1.g.p` @type ^`int`;
  #L4fcf5c.  call `a`(v4, v3, v0) @signature `Lz1/g$b;.a:(Lz1/g;I)V` @kind interface;
  #L4fcf62.  return @kind void;
}
procedure `boolean` `f`(`z1.g` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lz1/g;.f:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fc660.  v0:= v2.`z1.g.b` @type ^`z1.g0` @kind object;
  #L4fc664.  v1:= v2.`z1.g.u` @type ^`byte`[] @kind object;
  #L4fc668.  call temp:= `h`(v1) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fc66e.  v1:= temp @kind object;
  #L4fc670.  v1:= (`byte`[]) v1 @kind object;
  #L4fc674.  call temp:= `c`(v0, v1, v3) @signature `Lz1/g0;.c:([BLjava/lang/String;)Z` @kind interface;
  #L4fc67a.  v3:= temp;
  #L4fc67c.  return v3;
}
procedure `z1.o$a` `g`(`z1.g` v2 @kind this) @signature `Lz1/g;.g:()Lz1/o$a;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4fcf8c.  v0:= v2.`z1.g.o` @type ^`int`;
  #L4fcf90.  v1:= 1I;
  #L4fcf92.  if v0 != v1 then goto L4fcf9c;
  #L4fcf96.  v0:= v2.`z1.g.t` @type ^`z1.o$a` @kind object;
  #L4fcf9a.  goto L4fcf9e;
  #L4fcf9c.  v0:= 0I;
  #L4fcf9e.  return v0 @kind object;
}
procedure `int` `getState`(`z1.g` v1 @kind this) @signature `Lz1/g;.getState:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4fc6d4.  v0:= v1.`z1.g.o` @type ^`int`;
  #L4fc6d8.  return v0;
}
procedure `y1.b` `h`(`z1.g` v1 @kind this) @signature `Lz1/g;.h:()Ly1/b;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4fcf74.  v0:= v1.`z1.g.s` @type ^`y1.b` @kind object;
  #L4fcf78.  return v0 @kind object;
}
procedure `boolean` `q`(`z1.g` v1 @kind this, `byte`[] v2 @kind object) @signature `Lz1/g;.q:([B)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc560.  v0:= v1.`z1.g.u` @type ^`byte`[] @kind object;
  #L4fc564.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L4fc56a.  v2:= temp;
  #L4fc56c.  return v2;
}
procedure `void` `y`(`z1.g` v1 @kind this, `int` v2 ) @signature `Lz1/g;.y:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fccec.  v0:= 2I;
  #L4fccee.  if v2 == v0 then goto L4fccf4;
  #L4fccf2.  goto L4fccfa;
  #L4fccf4.  call `x`(v1) @signature `Lz1/g;.x:()V` @kind direct;
  #L4fccfa.  return @kind void;
}
procedure `void` `z`(`z1.g` v1 @kind this) @signature `Lz1/g;.z:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fcd0c.  call temp:= `C`(v1) @signature `Lz1/g;.C:()Z` @kind direct;
  #L4fcd12.  v0:= temp;
  #L4fcd14.  if v0 == 0 then goto L4fcd20;
  #L4fcd18.  v0:= 1I;
  #L4fcd1a.  call `o`(v1, v0) @signature `Lz1/g;.o:(Z)V` @kind direct;
  #L4fcd20.  return @kind void;
}
