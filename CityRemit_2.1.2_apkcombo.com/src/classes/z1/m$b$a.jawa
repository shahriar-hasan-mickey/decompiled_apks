record `z1.m$b$a` @kind class @AccessFlag  extends `android.os.Parcelable$Creator` @kind interface {
}
procedure `void` `<init>`(`z1.m$b$a` v0 @kind this) @signature `Lz1/m$b$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fd06c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fd072.  return @kind void;
}
procedure `z1.m$b` `a`(`z1.m$b$a` v1 @kind this, `android.os.Parcel` v2 @kind object) @signature `Lz1/m$b$a;.a:(Landroid/os/Parcel;)Lz1/m$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd084.  v0:= new `z1.m$b`;
  #L4fd088.  call `<init>`(v0, v2) @signature `Lz1/m$b;.<init>:(Landroid/os/Parcel;)V` @kind direct;
  #L4fd08e.  return v0 @kind object;
}
procedure `z1.m$b`[] `b`(`z1.m$b$a` v0 @kind this, `int` v1 ) @signature `Lz1/m$b$a;.b:(I)[Lz1/m$b;` @AccessFlag PUBLIC {
    temp;

  #L4fd0a0.  v1:= new `z1.m$b`[v1];
  #L4fd0a4.  return v1 @kind object;
}
procedure `java.lang.Object` `createFromParcel`(`z1.m$b$a` v0 @kind this, `android.os.Parcel` v1 @kind object) @signature `Lz1/m$b$a;.createFromParcel:(Landroid/os/Parcel;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4fd034.  call temp:= `a`(v0, v1) @signature `Lz1/m$b$a;.a:(Landroid/os/Parcel;)Lz1/m$b;` @kind virtual;
  #L4fd03a.  v1:= temp @kind object;
  #L4fd03c.  return v1 @kind object;
}
procedure `java.lang.Object`[] `newArray`(`z1.m$b$a` v0 @kind this, `int` v1 ) @signature `Lz1/m$b$a;.newArray:(I)[Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4fd050.  call temp:= `b`(v0, v1) @signature `Lz1/m$b$a;.b:(I)[Lz1/m$b;` @kind virtual;
  #L4fd056.  v1:= temp @kind object;
  #L4fd058.  return v1 @kind object;
}
