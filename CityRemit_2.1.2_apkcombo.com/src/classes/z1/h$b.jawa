record `z1.h$b` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.HashMap` `z1.h$b.a` @AccessFlag PRIVATE_FINAL;
  `java.util.UUID` `z1.h$b.b` @AccessFlag PRIVATE;
  `z1.g0$c` `z1.h$b.c` @AccessFlag PRIVATE;
  `boolean` `z1.h$b.d` @AccessFlag PRIVATE;
  `int`[] `z1.h$b.e` @AccessFlag PRIVATE;
  `boolean` `z1.h$b.f` @AccessFlag PRIVATE;
  `r3.g0` `z1.h$b.g` @AccessFlag PRIVATE;
  `long` `z1.h$b.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`z1.h$b` v2 @kind this) @signature `Lz1/h$b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4fb0b4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fb0ba.  v0:= new `java.util.HashMap`;
  #L4fb0be.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4fb0c4.  v2.`z1.h$b.a` @type ^`java.util.HashMap` := v0 @kind object;
  #L4fb0c8.  v0:= `@@v1.h.d` @type ^`java.util.UUID` @kind object;
  #L4fb0cc.  v2.`z1.h$b.b` @type ^`java.util.UUID` := v0 @kind object;
  #L4fb0d0.  v0:= `@@z1.k0.d` @type ^`z1.g0$c` @kind object;
  #L4fb0d4.  v2.`z1.h$b.c` @type ^`z1.g0$c` := v0 @kind object;
  #L4fb0d8.  v0:= new `r3.x`;
  #L4fb0dc.  call `<init>`(v0) @signature `Lr3/x;.<init>:()V` @kind direct;
  #L4fb0e2.  v2.`z1.h$b.g` @type ^`r3.g0` := v0 @kind object;
  #L4fb0e6.  v0:= 0I;
  #L4fb0e8.  v0:= new `int`[v0];
  #L4fb0ec.  v2.`z1.h$b.e` @type ^`int`[] := v0 @kind object;
  #L4fb0f0.  v0:= 300000L;
  #L4fb0f6.  v2.`z1.h$b.h` @type ^`long` := v0 @kind wide;
  #L4fb0fa.  return @kind void;
}
procedure `z1.h` `a`(`z1.h$b` v13 @kind this, `z1.n0` v14 @kind object) @signature `Lz1/h$b;.a:(Lz1/n0;)Lz1/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L4fb10c.  v12:= new `z1.h`;
  #L4fb110.  v1:= v13.`z1.h$b.b` @type ^`java.util.UUID` @kind object;
  #L4fb114.  v2:= v13.`z1.h$b.c` @type ^`z1.g0$c` @kind object;
  #L4fb118.  v4:= v13.`z1.h$b.a` @type ^`java.util.HashMap` @kind object;
  #L4fb11c.  v5:= v13.`z1.h$b.d` @type ^`boolean` @kind boolean;
  #L4fb120.  v6:= v13.`z1.h$b.e` @type ^`int`[] @kind object;
  #L4fb124.  v7:= v13.`z1.h$b.f` @type ^`boolean` @kind boolean;
  #L4fb128.  v8:= v13.`z1.h$b.g` @type ^`r3.g0` @kind object;
  #L4fb12c.  v9:= v13.`z1.h$b.h` @type ^`long` @kind wide;
  #L4fb130.  v11:= 0I;
  #L4fb132.  v0:= v12 @kind object;
  #L4fb134.  v3:= v14 @kind object;
  #L4fb136.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v11) @signature `Lz1/h;.<init>:(Ljava/util/UUID;Lz1/g0$c;Lz1/n0;Ljava/util/HashMap;Z[IZLr3/g0;JLz1/h$a;)V` @kind direct;
  #L4fb13c.  return v12 @kind object;
}
procedure `z1.h$b` `b`(`z1.h$b` v0 @kind this, `boolean` v1 ) @signature `Lz1/h$b;.b:(Z)Lz1/h$b;` @AccessFlag PUBLIC {
    temp;

  #L4fb150.  v0.`z1.h$b.d` @type ^`boolean` := v1 @kind boolean;
  #L4fb154.  return v0 @kind object;
}
procedure `z1.h$b` `c`(`z1.h$b` v0 @kind this, `boolean` v1 ) @signature `Lz1/h$b;.c:(Z)Lz1/h$b;` @AccessFlag PUBLIC {
    temp;

  #L4fb168.  v0.`z1.h$b.f` @type ^`boolean` := v1 @kind boolean;
  #L4fb16c.  return v0 @kind object;
}
procedure `z1.h$b` `d`(`z1.h$b` v6 @kind this, `int`[] v7 @kind object) @signature `Lz1/h$b;.d:([I)Lz1/h$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fb180.  v0:= length @variable v7;
  #L4fb182.  v1:= 0I;
  #L4fb184.  v2:= 0I;
  #L4fb186.  if v2 >= v0 then goto L4fb1aa;
  #L4fb18a.  v3:= v7[v2];
  #L4fb18e.  v4:= 2I;
  #L4fb190.  v5:= 1I;
  #L4fb192.  if v3 == v4 then goto L4fb19e;
  #L4fb196.  if v3 != v5 then goto L4fb19c;
  #L4fb19a.  goto L4fb19e;
  #L4fb19c.  v5:= 0I;
  #L4fb19e.  call `a`(v5) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L4fb1a4.  v2:= v2 + 1;
  #L4fb1a8.  goto L4fb186;
  #L4fb1aa.  call temp:= `clone`(v7) @signature `[I.clone:()Ljava/lang/Object;` @kind virtual;
  #L4fb1b0.  v7:= temp @kind object;
  #L4fb1b2.  v7:= (`int`[]) v7 @kind object;
  #L4fb1b6.  v6.`z1.h$b.e` @type ^`int`[] := v7 @kind object;
  #L4fb1ba.  return v6 @kind object;
}
procedure `z1.h$b` `e`(`z1.h$b` v0 @kind this, `java.util.UUID` v1 @kind object, `z1.g0$c` v2 @kind object) @signature `Lz1/h$b;.e:(Ljava/util/UUID;Lz1/g0$c;)Lz1/h$b;` @AccessFlag PUBLIC {
    temp;

  #L4fb1cc.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fb1d2.  v1:= temp @kind object;
  #L4fb1d4.  v1:= (`java.util.UUID`) v1 @kind object;
  #L4fb1d8.  v0.`z1.h$b.b` @type ^`java.util.UUID` := v1 @kind object;
  #L4fb1dc.  call temp:= `e`(v2) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fb1e2.  v1:= temp @kind object;
  #L4fb1e4.  v1:= (`z1.g0$c`) v1 @kind object;
  #L4fb1e8.  v0.`z1.h$b.c` @type ^`z1.g0$c` := v1 @kind object;
  #L4fb1ec.  return v0 @kind object;
}
