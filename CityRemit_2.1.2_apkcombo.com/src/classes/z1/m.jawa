record `z1.m` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Comparator` @kind interface, `android.os.Parcelable` @kind interface {
  `z1.m$b`[] `z1.m.o` @AccessFlag PRIVATE_FINAL;
  `int` `z1.m.p` @AccessFlag PRIVATE;
  `java.lang.String` `z1.m.q` @AccessFlag PUBLIC_FINAL;
  `int` `z1.m.r` @AccessFlag PUBLIC_FINAL;
}
global `android.os.Parcelable$Creator` `@@z1.m.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lz1/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fd528.  v0:= new `z1.m$a`;
  #L4fd52c.  call `<init>`(v0) @signature `Lz1/m$a;.<init>:()V` @kind direct;
  #L4fd532.  `@@z1.m.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L4fd536.  return @kind void;
}
procedure `void` `<init>`(`z1.m` v1 @kind this, `android.os.Parcel` v2 @kind object) @signature `Lz1/m;.<init>:(Landroid/os/Parcel;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4fd548.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fd54e.  call temp:= `readString`(v2) @signature `Landroid/os/Parcel;.readString:()Ljava/lang/String;` @kind virtual;
  #L4fd554.  v0:= temp @kind object;
  #L4fd556.  v1.`z1.m.q` @type ^`java.lang.String` := v0 @kind object;
  #L4fd55a.  v0:= `@@z1.m$b.CREATOR` @type ^`android.os.Parcelable$Creator` @kind object;
  #L4fd55e.  call temp:= `createTypedArray`(v2, v0) @signature `Landroid/os/Parcel;.createTypedArray:(Landroid/os/Parcelable$Creator;)[Ljava/lang/Object;` @kind virtual;
  #L4fd564.  v2:= temp @kind object;
  #L4fd566.  v2:= (`z1.m$b`[]) v2 @kind object;
  #L4fd56a.  call temp:= `j`(v2) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fd570.  v2:= temp @kind object;
  #L4fd572.  v2:= (`z1.m$b`[]) v2 @kind object;
  #L4fd576.  v1.`z1.m.o` @type ^`z1.m$b`[] := v2 @kind object;
  #L4fd57a.  v2:= length @variable v2;
  #L4fd57c.  v1.`z1.m.r` @type ^`int` := v2;
  #L4fd580.  return @kind void;
}
procedure `void` `<init>`(`z1.m` v2 @kind this, `java.lang.String` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lz1/m;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4fd5d4.  v0:= 0I;
  #L4fd5d6.  v1:= new `z1.m$b`[v0];
  #L4fd5da.  call temp:= `toArray`(v4, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L4fd5e0.  v4:= temp @kind object;
  #L4fd5e2.  v4:= (`z1.m$b`[]) v4 @kind object;
  #L4fd5e6.  call `<init>`(v2, v3, v0, v4) @signature `Lz1/m;.<init>:(Ljava/lang/String;Z[Lz1/m$b;)V` @kind direct;
  #L4fd5ec.  return @kind void;
}
procedure `void` `<init>`(`z1.m` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `z1.m$b`[] v3 @kind object) @signature `Lz1/m;.<init>:(Ljava/lang/String;Z[Lz1/m$b;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4fd594.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fd59a.  v0.`z1.m.q` @type ^`java.lang.String` := v1 @kind object;
  #L4fd59e.  if v2 == 0 then goto L4fd5b0;
  #L4fd5a2.  call temp:= `clone`(v3) @signature `[Lz1/m$b;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4fd5a8.  v1:= temp @kind object;
  #L4fd5aa.  v3:= v1 @kind object;
  #L4fd5ac.  v3:= (`z1.m$b`[]) v3 @kind object;
  #L4fd5b0.  v0.`z1.m.o` @type ^`z1.m$b`[] := v3 @kind object;
  #L4fd5b4.  v1:= length @variable v3;
  #L4fd5b6.  v0.`z1.m.r` @type ^`int` := v1;
  #L4fd5ba.  call `sort`(v3, v0) @signature `Ljava/util/Arrays;.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V` @kind static;
  #L4fd5c0.  return @kind void;
}
procedure `void` `<init>`(`z1.m` v1 @kind this, `java.lang.String` v2 @kind object, `z1.m$b`[] v3 @kind object) @signature `Lz1/m;.<init>:(Ljava/lang/String;[Lz1/m$b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fd600.  v0:= 1I;
  #L4fd602.  call `<init>`(v1, v2, v0, v3) @signature `Lz1/m;.<init>:(Ljava/lang/String;Z[Lz1/m$b;)V` @kind direct;
  #L4fd608.  return @kind void;
}
procedure `void` `<init>`(`z1.m` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lz1/m;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4fd61c.  v0:= 0I;
  #L4fd61e.  v1:= new `z1.m$b`[v0];
  #L4fd622.  call temp:= `toArray`(v3, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L4fd628.  v3:= temp @kind object;
  #L4fd62a.  v3:= (`z1.m$b`[]) v3 @kind object;
  #L4fd62e.  v1:= 0I;
  #L4fd630.  call `<init>`(v2, v1, v0, v3) @signature `Lz1/m;.<init>:(Ljava/lang/String;Z[Lz1/m$b;)V` @kind direct;
  #L4fd636.  return @kind void;
}
procedure `void` `<init>`(`z1.m` v1 @kind this, `z1.m$b`[] v2 @kind object) @signature `Lz1/m;.<init>:([Lz1/m$b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fd648.  v0:= 0I;
  #L4fd64a.  call `<init>`(v1, v0, v2) @signature `Lz1/m;.<init>:(Ljava/lang/String;[Lz1/m$b;)V` @kind direct;
  #L4fd650.  return @kind void;
}
procedure `boolean` `b`(`java.util.ArrayList` v3 @kind object, `int` v4 , `java.util.UUID` v5 @kind object) @signature `Lz1/m;.b:(Ljava/util/ArrayList;ILjava/util/UUID;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4fd3b4.  v0:= 0I;
  #L4fd3b6.  v1:= 0I;
  #L4fd3b8.  if v1 >= v4 then goto L4fd3e2;
  #L4fd3bc.  call temp:= `get`(v3, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4fd3c2.  v2:= temp @kind object;
  #L4fd3c4.  v2:= (`z1.m$b`) v2 @kind object;
  #L4fd3c8.  v2:= v2.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd3cc.  call temp:= `equals`(v2, v5) @signature `Ljava/util/UUID;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fd3d2.  v2:= temp;
  #L4fd3d4.  if v2 == 0 then goto L4fd3dc;
  #L4fd3d8.  v3:= 1I;
  #L4fd3da.  return v3;
  #L4fd3dc.  v1:= v1 + 1;
  #L4fd3e0.  goto L4fd3b8;
  #L4fd3e2.  return v0;
}
procedure `z1.m` `d`(`z1.m` v8 @kind object, `z1.m` v9 @kind object) @signature `Lz1/m;.d:(Lz1/m;Lz1/m;)Lz1/m;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4fd6c0.  v0:= new `java.util.ArrayList`;
  #L4fd6c4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4fd6ca.  v1:= 0I;
  #L4fd6cc.  v2:= 0I;
  #L4fd6ce.  if v8 == 0 then goto L4fd6fe;
  #L4fd6d2.  v3:= v8.`z1.m.q` @type ^`java.lang.String` @kind object;
  #L4fd6d6.  v8:= v8.`z1.m.o` @type ^`z1.m$b`[] @kind object;
  #L4fd6da.  v4:= length @variable v8;
  #L4fd6dc.  v5:= 0I;
  #L4fd6de.  if v5 >= v4 then goto L4fd700;
  #L4fd6e2.  v6:= v8[v5] @kind object;
  #L4fd6e6.  call temp:= `c`(v6) @signature `Lz1/m$b;.c:()Z` @kind virtual;
  #L4fd6ec.  v7:= temp;
  #L4fd6ee.  if v7 == 0 then goto L4fd6f8;
  #L4fd6f2.  call temp:= `add`(v0, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fd6f8.  v5:= v5 + 1;
  #L4fd6fc.  goto L4fd6de;
  #L4fd6fe.  v3:= v2 @kind object;
  #L4fd700.  if v9 == 0 then goto L4fd74c;
  #L4fd704.  if v3 != 0 then goto L4fd70e;
  #L4fd708.  v8:= v9.`z1.m.q` @type ^`java.lang.String` @kind object;
  #L4fd70c.  v3:= v8 @kind object;
  #L4fd70e.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L4fd714.  v8:= temp;
  #L4fd716.  v9:= v9.`z1.m.o` @type ^`z1.m$b`[] @kind object;
  #L4fd71a.  v4:= length @variable v9;
  #L4fd71c.  if v1 >= v4 then goto L4fd74c;
  #L4fd720.  v5:= v9[v1] @kind object;
  #L4fd724.  call temp:= `c`(v5) @signature `Lz1/m$b;.c:()Z` @kind virtual;
  #L4fd72a.  v6:= temp;
  #L4fd72c.  if v6 == 0 then goto L4fd746;
  #L4fd730.  v6:= v5.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd734.  call temp:= `b`(v0, v8, v6) @signature `Lz1/m;.b:(Ljava/util/ArrayList;ILjava/util/UUID;)Z` @kind static;
  #L4fd73a.  v6:= temp;
  #L4fd73c.  if v6 != 0 then goto L4fd746;
  #L4fd740.  call temp:= `add`(v0, v5) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fd746.  v1:= v1 + 1;
  #L4fd74a.  goto L4fd71c;
  #L4fd74c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L4fd752.  v8:= temp;
  #L4fd754.  if v8 == 0 then goto L4fd75a;
  #L4fd758.  goto L4fd764;
  #L4fd75a.  v2:= new `z1.m`;
  #L4fd75e.  call `<init>`(v2, v3, v0) @signature `Lz1/m;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L4fd764.  return v2 @kind object;
}
procedure `int` `a`(`z1.m` v2 @kind this, `z1.m$b` v3 @kind object, `z1.m$b` v4 @kind object) @signature `Lz1/m;.a:(Lz1/m$b;Lz1/m$b;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fd47c.  v0:= `@@v1.h.a` @type ^`java.util.UUID` @kind object;
  #L4fd480.  v1:= v3.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd484.  call temp:= `equals`(v0, v1) @signature `Ljava/util/UUID;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fd48a.  v1:= temp;
  #L4fd48c.  if v1 == 0 then goto L4fd4a8;
  #L4fd490.  v3:= v4.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd494.  call temp:= `equals`(v0, v3) @signature `Ljava/util/UUID;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fd49a.  v3:= temp;
  #L4fd49c.  if v3 == 0 then goto L4fd4a4;
  #L4fd4a0.  v3:= 0I;
  #L4fd4a2.  goto L4fd4b8;
  #L4fd4a4.  v3:= 1I;
  #L4fd4a6.  goto L4fd4b8;
  #L4fd4a8.  v3:= v3.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd4ac.  v4:= v4.`z1.m$b.p` @type ^`java.util.UUID` @kind object;
  #L4fd4b0.  call temp:= `compareTo`(v3, v4) @signature `Ljava/util/UUID;.compareTo:(Ljava/util/UUID;)I` @kind virtual;
  #L4fd4b6.  v3:= temp;
  #L4fd4b8.  return v3;
}
procedure `z1.m` `c`(`z1.m` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lz1/m;.c:(Ljava/lang/String;)Lz1/m;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fd68c.  v0:= v3.`z1.m.q` @type ^`java.lang.String` @kind object;
  #L4fd690.  call temp:= `c`(v0, v4) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4fd696.  v0:= temp;
  #L4fd698.  if v0 == 0 then goto L4fd69e;
  #L4fd69c.  return v3 @kind object;
  #L4fd69e.  v0:= new `z1.m`;
  #L4fd6a2.  v1:= 0I;
  #L4fd6a4.  v2:= v3.`z1.m.o` @type ^`z1.m$b`[] @kind object;
  #L4fd6a8.  call `<init>`(v0, v4, v1, v2) @signature `Lz1/m;.<init>:(Ljava/lang/String;Z[Lz1/m$b;)V` @kind direct;
  #L4fd6ae.  return v0 @kind object;
}
procedure `int` `compare`(`z1.m` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lz1/m;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4fd458.  v1:= (`z1.m$b`) v1 @kind object;
  #L4fd45c.  v2:= (`z1.m$b`) v2 @kind object;
  #L4fd460.  call temp:= `a`(v0, v1, v2) @signature `Lz1/m;.a:(Lz1/m$b;Lz1/m$b;)I` @kind virtual;
  #L4fd466.  v1:= temp;
  #L4fd468.  return v1;
}
procedure `int` `describeContents`(`z1.m` v1 @kind this) @signature `Lz1/m;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd4cc.  v0:= 0I;
  #L4fd4ce.  return v0;
}
procedure `z1.m$b` `e`(`z1.m` v1 @kind this, `int` v2 ) @signature `Lz1/m;.e:(I)Lz1/m$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd7e0.  v0:= v1.`z1.m.o` @type ^`z1.m$b`[] @kind object;
  #L4fd7e4.  v2:= v0[v2] @kind object;
  #L4fd7e8.  return v2 @kind object;
}
procedure `boolean` `equals`(`z1.m` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lz1/m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fd3f4.  v0:= 1I;
  #L4fd3f6.  if v4 != v5 then goto L4fd3fc;
  #L4fd3fa.  return v0;
  #L4fd3fc.  v1:= 0I;
  #L4fd3fe.  if v5 == 0 then goto L4fd446;
  #L4fd402.  v2:= constclass @type ^`z1.m` @kind object;
  #L4fd406.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4fd40c.  v3:= temp @kind object;
  #L4fd40e.  if v2 == v3 then goto L4fd414;
  #L4fd412.  goto L4fd446;
  #L4fd414.  v5:= (`z1.m`) v5 @kind object;
  #L4fd418.  v2:= v4.`z1.m.q` @type ^`java.lang.String` @kind object;
  #L4fd41c.  v3:= v5.`z1.m.q` @type ^`java.lang.String` @kind object;
  #L4fd420.  call temp:= `c`(v2, v3) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4fd426.  v2:= temp;
  #L4fd428.  if v2 == 0 then goto L4fd442;
  #L4fd42c.  v2:= v4.`z1.m.o` @type ^`z1.m$b`[] @kind object;
  #L4fd430.  v5:= v5.`z1.m.o` @type ^`z1.m$b`[] @kind object;
  #L4fd434.  call temp:= `equals`(v2, v5) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L4fd43a.  v5:= temp;
  #L4fd43c.  if v5 == 0 then goto L4fd442;
  #L4fd440.  goto L4fd444;
  #L4fd442.  v0:= 0I;
  #L4fd444.  return v0;
  #L4fd446.  return v1;
}
procedure `z1.m` `f`(`z1.m` v2 @kind this, `z1.m` v3 @kind object) @signature `Lz1/m;.f:(Lz1/m;)Lz1/m;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fd778.  v0:= v2.`z1.m.q` @type ^`java.lang.String` @kind object;
  #L4fd77c.  if v0 == 0 then goto L4fd79a;
  #L4fd780.  v1:= v3.`z1.m.q` @type ^`java.lang.String` @kind object;
  #L4fd784.  if v1 == 0 then goto L4fd79a;
  #L4fd788.  call temp:= `equals`(v0, v1) @signature `Landroid/text/TextUtils;.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @kind static;
  #L4fd78e.  v0:= temp;
  #L4fd790.  if v0 == 0 then goto L4fd796;
  #L4fd794.  goto L4fd79a;
  #L4fd796.  v0:= 0I;
  #L4fd798.  goto L4fd79c;
  #L4fd79a.  v0:= 1I;
  #L4fd79c.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4fd7a2.  v0:= v2.`z1.m.q` @type ^`java.lang.String` @kind object;
  #L4fd7a6.  if v0 == 0 then goto L4fd7ac;
  #L4fd7aa.  goto L4fd7b0;
  #L4fd7ac.  v0:= v3.`z1.m.q` @type ^`java.lang.String` @kind object;
  #L4fd7b0.  v1:= v2.`z1.m.o` @type ^`z1.m$b`[] @kind object;
  #L4fd7b4.  v3:= v3.`z1.m.o` @type ^`z1.m$b`[] @kind object;
  #L4fd7b8.  call temp:= `E0`(v1, v3) @signature `Ls3/l0;.E0:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L4fd7be.  v3:= temp @kind object;
  #L4fd7c0.  v3:= (`z1.m$b`[]) v3 @kind object;
  #L4fd7c4.  v1:= new `z1.m`;
  #L4fd7c8.  call `<init>`(v1, v0, v3) @signature `Lz1/m;.<init>:(Ljava/lang/String;[Lz1/m$b;)V` @kind direct;
  #L4fd7ce.  return v1 @kind object;
}
procedure `int` `hashCode`(`z1.m` v2 @kind this) @signature `Lz1/m;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fd4e0.  v0:= v2.`z1.m.p` @type ^`int`;
  #L4fd4e4.  if v0 != 0 then goto L4fd512;
  #L4fd4e8.  v0:= v2.`z1.m.q` @type ^`java.lang.String` @kind object;
  #L4fd4ec.  if v0 != 0 then goto L4fd4f4;
  #L4fd4f0.  v0:= 0I;
  #L4fd4f2.  goto L4fd4fc;
  #L4fd4f4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4fd4fa.  v0:= temp;
  #L4fd4fc.  v0:= v0 * 31;
  #L4fd500.  v1:= v2.`z1.m.o` @type ^`z1.m$b`[] @kind object;
  #L4fd504.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L4fd50a.  v1:= temp;
  #L4fd50c.  v0:= v0 + v1 @kind int;
  #L4fd50e.  v2.`z1.m.p` @type ^`int` := v0;
  #L4fd512.  v0:= v2.`z1.m.p` @type ^`int`;
  #L4fd516.  return v0;
}
procedure `void` `writeToParcel`(`z1.m` v1 @kind this, `android.os.Parcel` v2 @kind object, `int` v3 ) @signature `Lz1/m;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd664.  v3:= v1.`z1.m.q` @type ^`java.lang.String` @kind object;
  #L4fd668.  call `writeString`(v2, v3) @signature `Landroid/os/Parcel;.writeString:(Ljava/lang/String;)V` @kind virtual;
  #L4fd66e.  v3:= v1.`z1.m.o` @type ^`z1.m$b`[] @kind object;
  #L4fd672.  v0:= 0I;
  #L4fd674.  call `writeTypedArray`(v2, v3, v0) @signature `Landroid/os/Parcel;.writeTypedArray:([Landroid/os/Parcelable;I)V` @kind virtual;
  #L4fd67a.  return @kind void;
}
