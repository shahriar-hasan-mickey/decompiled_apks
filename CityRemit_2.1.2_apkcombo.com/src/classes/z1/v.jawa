record `z1.v` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `z1.w$a` `z1.v.o` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `z1.w` `z1.v.p` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.lang.Exception` `z1.v.q` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`z1.v` v0 @kind this, `z1.w$a` v1 @kind object, `z1.w` v2 @kind object, `java.lang.Exception` v3 @kind object) @signature `Lz1/v;.<init>:(Lz1/w$a;Lz1/w;Ljava/lang/Exception;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4fd9a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fd9aa.  v0.`z1.v.o` @type ^`z1.w$a` := v1 @kind object;
  #L4fd9ae.  v0.`z1.v.p` @type ^`z1.w` := v2 @kind object;
  #L4fd9b2.  v0.`z1.v.q` @type ^`java.lang.Exception` := v3 @kind object;
  #L4fd9b6.  return @kind void;
}
procedure `void` `run`(`z1.v` v3 @kind this) @signature `Lz1/v;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4fd9c8.  v0:= v3.`z1.v.o` @type ^`z1.w$a` @kind object;
  #L4fd9cc.  v1:= v3.`z1.v.p` @type ^`z1.w` @kind object;
  #L4fd9d0.  v2:= v3.`z1.v.q` @type ^`java.lang.Exception` @kind object;
  #L4fd9d4.  call `e`(v0, v1, v2) @signature `Lz1/w$a;.e:(Lz1/w$a;Lz1/w;Ljava/lang/Exception;)V` @kind static;
  #L4fd9da.  return @kind void;
}
