record `z1.e0` @kind class @AccessFlag PUBLIC_FINAL extends `z1.o` @kind interface {
  `z1.o$a` `z1.e0.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`z1.e0` v0 @kind this, `z1.o$a` v1 @kind object) @signature `Lz1/e0;.<init>:(Lz1/o$a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4fe36c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fe372.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fe378.  v1:= temp @kind object;
  #L4fe37a.  v1:= (`z1.o$a`) v1 @kind object;
  #L4fe37e.  v0.`z1.e0.a` @type ^`z1.o$a` := v1 @kind object;
  #L4fe382.  return @kind void;
}
procedure `boolean` `a`(`z1.e0` v1 @kind this) @signature `Lz1/e0;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe304.  v0:= 0I;
  #L4fe306.  return v0;
}
procedure `java.util.Map` `b`(`z1.e0` v1 @kind this) @signature `Lz1/e0;.b:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe340.  v0:= 0I;
  #L4fe342.  return v0 @kind object;
}
procedure `void` `c`(`z1.e0` v0 @kind this, `z1.w$a` v1 @kind object) @signature `Lz1/e0;.c:(Lz1/w$a;)V` @AccessFlag PUBLIC {
    temp;

  #L4fe394.  return @kind void;
}
procedure `java.util.UUID` `d`(`z1.e0` v1 @kind this) @signature `Lz1/e0;.d:()Ljava/util/UUID;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4fe354.  v0:= `@@v1.h.a` @type ^`java.util.UUID` @kind object;
  #L4fe358.  return v0 @kind object;
}
procedure `void` `e`(`z1.e0` v0 @kind this, `z1.w$a` v1 @kind object) @signature `Lz1/e0;.e:(Lz1/w$a;)V` @AccessFlag PUBLIC {
    temp;

  #L4fe3a8.  return @kind void;
}
procedure `boolean` `f`(`z1.e0` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lz1/e0;.f:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;

  #L4fe318.  v1:= 0I;
  #L4fe31a.  return v1;
}
procedure `z1.o$a` `g`(`z1.e0` v1 @kind this) @signature `Lz1/e0;.g:()Lz1/o$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe3d0.  v0:= v1.`z1.e0.a` @type ^`z1.o$a` @kind object;
  #L4fe3d4.  return v0 @kind object;
}
procedure `int` `getState`(`z1.e0` v1 @kind this) @signature `Lz1/e0;.getState:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe32c.  v0:= 1I;
  #L4fe32e.  return v0;
}
procedure `y1.b` `h`(`z1.e0` v1 @kind this) @signature `Lz1/e0;.h:()Ly1/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe3bc.  v0:= 0I;
  #L4fe3be.  return v0 @kind object;
}
