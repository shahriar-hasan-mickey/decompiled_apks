record `z1.h0` @kind class @AccessFlag PUBLIC_FINAL extends `y1.b` @kind interface {
  `java.util.UUID` `z1.h0.a` @AccessFlag PUBLIC_FINAL;
  `byte`[] `z1.h0.b` @AccessFlag PUBLIC_FINAL;
  `boolean` `z1.h0.c` @AccessFlag PUBLIC_FINAL;
}
global `boolean` `@@z1.h0.d` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lz1/h0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4fe49c.  v0:= `@@s3.l0.c` @type ^`java.lang.String` @kind object;
  #L4fe4a0.  v1:= "Amazon" @kind object;
  #L4fe4a4.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fe4aa.  v0:= temp;
  #L4fe4ac.  if v0 == 0 then goto L4fe4d8;
  #L4fe4b0.  v0:= `@@s3.l0.d` @type ^`java.lang.String` @kind object;
  #L4fe4b4.  v1:= "AFTM" @kind object;
  #L4fe4b8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fe4be.  v1:= temp;
  #L4fe4c0.  if v1 != 0 then goto L4fe4d4;
  #L4fe4c4.  v1:= "AFTB" @kind object;
  #L4fe4c8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fe4ce.  v0:= temp;
  #L4fe4d0.  if v0 == 0 then goto L4fe4d8;
  #L4fe4d4.  v0:= 1I;
  #L4fe4d6.  goto L4fe4da;
  #L4fe4d8.  v0:= 0I;
  #L4fe4da.  `@@z1.h0.d` @type ^`boolean` := v0 @kind boolean;
  #L4fe4de.  return @kind void;
}
procedure `void` `<init>`(`z1.h0` v0 @kind this, `java.util.UUID` v1 @kind object, `byte`[] v2 @kind object, `boolean` v3 ) @signature `Lz1/h0;.<init>:(Ljava/util/UUID;[BZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4fe4f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fe4f6.  v0.`z1.h0.a` @type ^`java.util.UUID` := v1 @kind object;
  #L4fe4fa.  v0.`z1.h0.b` @type ^`byte`[] := v2 @kind object;
  #L4fe4fe.  v0.`z1.h0.c` @type ^`boolean` := v3 @kind boolean;
  #L4fe502.  return @kind void;
}
