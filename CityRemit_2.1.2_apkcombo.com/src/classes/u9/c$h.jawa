record `u9.c$h` @kind class @AccessFlag  extends `u9.c$d` @kind interface {
  `java.util.concurrent.ExecutorService` `u9.c$h.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentLinkedQueue` `u9.c$h.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `u9.c$h.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`u9.c$h` v1 @kind this, `java.util.concurrent.ExecutorService` v2 @kind object) @signature `Lu9/c$h;.<init>:(Ljava/util/concurrent/ExecutorService;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L47bff4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47bffa.  v1.`u9.c$h.a` @type ^`java.util.concurrent.ExecutorService` := v2 @kind object;
  #L47bffe.  v2:= new `java.util.concurrent.ConcurrentLinkedQueue`;
  #L47c002.  call `<init>`(v2) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V` @kind direct;
  #L47c008.  v1.`u9.c$h.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` := v2 @kind object;
  #L47c00c.  v2:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L47c010.  v0:= 0I;
  #L47c012.  call `<init>`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L47c018.  v1.`u9.c$h.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v2 @kind object;
  #L47c01c.  return @kind void;
}
procedure `void` `b`(`u9.c$h` v0 @kind object) @signature `Lu9/c$h;.b:(Lu9/c$h;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L47bfc4.  call `e`(v0) @signature `Lu9/c$h;.e:()V` @kind direct;
  #L47bfca.  return @kind void;
}
procedure `void` `c`(`u9.c$h` v0 @kind object) @signature `Lu9/c$h;.c:(Lu9/c$h;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L47bfdc.  call `f`(v0) @signature `Lu9/c$h;.f:()V` @kind direct;
  #L47bfe2.  return @kind void;
}
procedure `void` `d`(`u9.c$h` v3 @kind this) @signature `Lu9/c$h;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47c060.  v0:= v3.`u9.c$h.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L47c064.  v1:= 0I;
  #L47c066.  v2:= 1I;
  #L47c068.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L47c06e.  v0:= temp;
  #L47c070.  if v0 == 0 then goto L47c0f0;
  #L47c074.  v0:= v3.`u9.c$h.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L47c078.  call temp:= `poll`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L47c07e.  v0:= temp @kind object;
  #L47c080.  v0:= (`java.lang.Runnable`) v0 @kind object;
  #L47c084.  if v0 == 0 then goto L47c08e;
  #L47c088.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L47c08e.  v0:= v3.`u9.c$h.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L47c092.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L47c098.  v0:= v3.`u9.c$h.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L47c09c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L47c0a2.  v0:= temp;
  #L47c0a4.  if v0 != 0 then goto L47c0f0;
  #L47c0a8.  v0:= v3.`u9.c$h.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L47c0ac.  v1:= new `u9.e`;
  #L47c0b0.  call `<init>`(v1, v3) @signature `Lu9/e;.<init>:(Lu9/c$h;)V` @kind direct;
  #L47c0b6.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L47c0bc.  goto L47c0f0;
  #L47c0be.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L47c0c0.  v2:= v3.`u9.c$h.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L47c0c4.  call `set`(v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L47c0ca.  v1:= v3.`u9.c$h.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L47c0ce.  call temp:= `isEmpty`(v1) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L47c0d4.  v1:= temp;
  #L47c0d6.  if v1 != 0 then goto L47c0ee;
  #L47c0da.  v1:= v3.`u9.c$h.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L47c0de.  v2:= new `u9.e`;
  #L47c0e2.  call `<init>`(v2, v3) @signature `Lu9/e;.<init>:(Lu9/c$h;)V` @kind direct;
  #L47c0e8.  call `execute`(v1, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L47c0ee.  throw v0;
  #L47c0f0.  return @kind void;
  catch `java.lang.Throwable` @[L47c074..L47c08e] goto L47c0be;
}
procedure `void` `e`(`u9.c$h` v0 @kind this) @signature `Lu9/c$h;.e:()V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;

  #L47c110.  call `d`(v0) @signature `Lu9/c$h;.d:()V` @kind direct;
  #L47c116.  return @kind void;
}
procedure `void` `f`(`u9.c$h` v0 @kind this) @signature `Lu9/c$h;.f:()V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;

  #L47c128.  call `d`(v0) @signature `Lu9/c$h;.d:()V` @kind direct;
  #L47c12e.  return @kind void;
}
procedure `void` `a`(`u9.c$h` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lu9/c$h;.a:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47c030.  v0:= v1.`u9.c$h.b` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L47c034.  call temp:= `add`(v0, v2) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L47c03a.  v2:= v1.`u9.c$h.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L47c03e.  v0:= new `u9.d`;
  #L47c042.  call `<init>`(v0, v1) @signature `Lu9/d;.<init>:(Lu9/c$h;)V` @kind direct;
  #L47c048.  call `execute`(v2, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L47c04e.  return @kind void;
}
