record `u9.a$c` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `u9.a$c.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `u9.a$c.b` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `u9.a$c.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`u9.a$c` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lu9/a$c;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47b8e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47b8e6.  v0.`u9.a$c.a` @type ^`java.lang.String` := v1 @kind object;
  #L47b8ea.  v1:= 0I;
  #L47b8ec.  v0.`u9.a$c.b` @type ^`java.lang.String` := v1 @kind object;
  #L47b8f0.  v0.`u9.a$c.c` @type ^`java.lang.String` := v2 @kind object;
  #L47b8f4.  return @kind void;
}
procedure `void` `<init>`(`u9.a$c` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lu9/a$c;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47b908.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47b90e.  v0.`u9.a$c.a` @type ^`java.lang.String` := v1 @kind object;
  #L47b912.  v0.`u9.a$c.b` @type ^`java.lang.String` := v2 @kind object;
  #L47b916.  v0.`u9.a$c.c` @type ^`java.lang.String` := v3 @kind object;
  #L47b91a.  return @kind void;
}
procedure `boolean` `equals`(`u9.a$c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lu9/a$c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47b7f8.  if v3 != v4 then goto L47b800;
  #L47b7fc.  v4:= 1I;
  #L47b7fe.  return v4;
  #L47b800.  v0:= 0I;
  #L47b802.  if v4 == 0 then goto L47b844;
  #L47b806.  v1:= constclass @type ^`u9.a$c` @kind object;
  #L47b80a.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L47b810.  v2:= temp @kind object;
  #L47b812.  if v1 == v2 then goto L47b818;
  #L47b816.  goto L47b844;
  #L47b818.  v4:= (`u9.a$c`) v4 @kind object;
  #L47b81c.  v1:= v3.`u9.a$c.a` @type ^`java.lang.String` @kind object;
  #L47b820.  v2:= v4.`u9.a$c.a` @type ^`java.lang.String` @kind object;
  #L47b824.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L47b82a.  v1:= temp;
  #L47b82c.  if v1 != 0 then goto L47b832;
  #L47b830.  return v0;
  #L47b832.  v0:= v3.`u9.a$c.c` @type ^`java.lang.String` @kind object;
  #L47b836.  v4:= v4.`u9.a$c.c` @type ^`java.lang.String` @kind object;
  #L47b83a.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L47b840.  v4:= temp;
  #L47b842.  return v4;
  #L47b844.  return v0;
}
procedure `int` `hashCode`(`u9.a$c` v2 @kind this) @signature `Lu9/a$c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47b858.  v0:= v2.`u9.a$c.a` @type ^`java.lang.String` @kind object;
  #L47b85c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L47b862.  v0:= temp;
  #L47b864.  v0:= v0 * 31;
  #L47b868.  v1:= v2.`u9.a$c.c` @type ^`java.lang.String` @kind object;
  #L47b86c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L47b872.  v1:= temp;
  #L47b874.  v0:= v0 + v1 @kind int;
  #L47b876.  return v0;
}
procedure `java.lang.String` `toString`(`u9.a$c` v2 @kind this) @signature `Lu9/a$c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47b888.  v0:= new `java.lang.StringBuilder`;
  #L47b88c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47b892.  v1:= "DartEntrypoint( bundle path: " @kind object;
  #L47b896.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47b89c.  v1:= v2.`u9.a$c.a` @type ^`java.lang.String` @kind object;
  #L47b8a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47b8a6.  v1:= ", function: " @kind object;
  #L47b8aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47b8b0.  v1:= v2.`u9.a$c.c` @type ^`java.lang.String` @kind object;
  #L47b8b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47b8ba.  v1:= " )" @kind object;
  #L47b8be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47b8c4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47b8ca.  v0:= temp @kind object;
  #L47b8cc.  return v0 @kind object;
}
