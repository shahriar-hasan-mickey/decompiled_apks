record `fb.b$i` @kind class @AccessFlag PUBLIC {
  `java.lang.Long` `fb.b$i.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`fb.b$i` v0 @kind this) @signature `Lfb/b$i;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L310fb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L310fbe.  return @kind void;
}
procedure `void` `<init>`(`fb.b$i` v0 @kind this, `fb.b$a` v1 @kind object) @signature `Lfb/b$i;.<init>:(Lfb/b$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L310fd0.  call `<init>`(v0) @signature `Lfb/b$i;.<init>:()V` @kind direct;
  #L310fd6.  return @kind void;
}
procedure `fb.b$i` `a`(`java.util.Map` v3 @kind object) @signature `Lfb/b$i;.a:(Ljava/util/Map;)Lfb/b$i;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L310f10.  v0:= new `fb.b$i`;
  #L310f14.  call `<init>`(v0) @signature `Lfb/b$i;.<init>:()V` @kind direct;
  #L310f1a.  v1:= "textureId" @kind object;
  #L310f1e.  call temp:= `get`(v3, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L310f24.  v3:= temp @kind object;
  #L310f26.  if v3 != 0 then goto L310f2e;
  #L310f2a.  v3:= 0I;
  #L310f2c.  goto L310f5a;
  #L310f2e.  v1:= instanceof @variable v3 @type ^`java.lang.Integer` @kind boolean;
  #L310f32.  if v1 == 0 then goto L310f46;
  #L310f36.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L310f3a.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L310f40.  v3:= temp;
  #L310f42.  v1:= (`long`) v3 @kind i2l;
  #L310f44.  goto L310f52;
  #L310f46.  v3:= (`java.lang.Long`) v3 @kind object;
  #L310f4a.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L310f50.  v1:= temp @kind wide;
  #L310f52.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L310f58.  v3:= temp @kind object;
  #L310f5a.  call `c`(v0, v3) @signature `Lfb/b$i;.c:(Ljava/lang/Long;)V` @kind virtual;
  #L310f60.  return v0 @kind object;
}
procedure `java.lang.Long` `b`(`fb.b$i` v1 @kind this) @signature `Lfb/b$i;.b:()Ljava/lang/Long;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L310f74.  v0:= v1.`fb.b$i.a` @type ^`java.lang.Long` @kind object;
  #L310f78.  return v0 @kind object;
}
procedure `void` `c`(`fb.b$i` v1 @kind this, `java.lang.Long` v2 @kind object) @signature `Lfb/b$i;.c:(Ljava/lang/Long;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L310fe8.  if v2 == 0 then goto L310ff2;
  #L310fec.  v1.`fb.b$i.a` @type ^`java.lang.Long` := v2 @kind object;
  #L310ff0.  return @kind void;
  #L310ff2.  v2:= new `java.lang.IllegalStateException`;
  #L310ff6.  v0:= "Nonnull field \"textureId\" is null." @kind object;
  #L310ffa.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L311000.  throw v2;
}
procedure `java.util.Map` `d`(`fb.b$i` v3 @kind this) @signature `Lfb/b$i;.d:()Ljava/util/Map;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L310f8c.  v0:= new `java.util.HashMap`;
  #L310f90.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L310f96.  v1:= v3.`fb.b$i.a` @type ^`java.lang.Long` @kind object;
  #L310f9a.  v2:= "textureId" @kind object;
  #L310f9e.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L310fa4.  return v0 @kind object;
}
