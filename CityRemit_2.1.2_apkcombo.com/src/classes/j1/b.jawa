record `j1.b` @kind class @AccessFlag FINAL extends `j1.i` @kind class {
  `java.lang.String` `j1.b.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Integer` `j1.b.b` @AccessFlag PRIVATE_FINAL;
  `j1.h` `j1.b.c` @AccessFlag PRIVATE_FINAL;
  `long` `j1.b.d` @AccessFlag PRIVATE_FINAL;
  `long` `j1.b.e` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `j1.b.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`j1.b` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Integer` v2 @kind object, `j1.h` v3 @kind object, `long` v4 , `long` v6 , `java.util.Map` v8 @kind object) @signature `Lj1/b;.<init>:(Ljava/lang/String;Ljava/lang/Integer;Lj1/h;JJLjava/util/Map;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L38ffa0.  call `<init>`(v0) @signature `Lj1/i;.<init>:()V` @kind direct;
  #L38ffa6.  v0.`j1.b.a` @type ^`java.lang.String` := v1 @kind object;
  #L38ffaa.  v0.`j1.b.b` @type ^`java.lang.Integer` := v2 @kind object;
  #L38ffae.  v0.`j1.b.c` @type ^`j1.h` := v3 @kind object;
  #L38ffb2.  v0.`j1.b.d` @type ^`long` := v4 @kind wide;
  #L38ffb6.  v0.`j1.b.e` @type ^`long` := v6 @kind wide;
  #L38ffba.  v0.`j1.b.f` @type ^`java.util.Map` := v8 @kind object;
  #L38ffbe.  return @kind void;
}
procedure `void` `<init>`(`j1.b` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Integer` v2 @kind object, `j1.h` v3 @kind object, `long` v4 , `long` v6 , `java.util.Map` v8 @kind object, `j1.b$a` v9 @kind object) @signature `Lj1/b;.<init>:(Ljava/lang/String;Ljava/lang/Integer;Lj1/h;JJLjava/util/Map;Lj1/b$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L38ffd0.  call `<init>`(v0, v1, v2, v3, v4, v6, v8) @signature `Lj1/b;.<init>:(Ljava/lang/String;Ljava/lang/Integer;Lj1/h;JJLjava/util/Map;)V` @kind direct;
  #L38ffd6.  return @kind void;
}
procedure `java.util.Map` `c`(`j1.b` v1 @kind this) @signature `Lj1/b;.c:()Ljava/util/Map;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L38ff58.  v0:= v1.`j1.b.f` @type ^`java.util.Map` @kind object;
  #L38ff5c.  return v0 @kind object;
}
procedure `java.lang.Integer` `d`(`j1.b` v1 @kind this) @signature `Lj1/b;.d:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38fe80.  v0:= v1.`j1.b.b` @type ^`java.lang.Integer` @kind object;
  #L38fe84.  return v0 @kind object;
}
procedure `j1.h` `e`(`j1.b` v1 @kind this) @signature `Lj1/b;.e:()Lj1/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38fe68.  v0:= v1.`j1.b.c` @type ^`j1.h` @kind object;
  #L38fe6c.  return v0 @kind object;
}
procedure `boolean` `equals`(`j1.b` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lj1/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L38fd14.  v0:= 1I;
  #L38fd16.  if v8 != v7 then goto L38fd1c;
  #L38fd1a.  return v0;
  #L38fd1c.  v1:= instanceof @variable v8 @type ^`j1.i` @kind boolean;
  #L38fd20.  v2:= 0I;
  #L38fd22.  if v1 == 0 then goto L38fdca;
  #L38fd26.  v8:= (`j1.i`) v8 @kind object;
  #L38fd2a.  v1:= v7.`j1.b.a` @type ^`java.lang.String` @kind object;
  #L38fd2e.  call temp:= `j`(v8) @signature `Lj1/i;.j:()Ljava/lang/String;` @kind virtual;
  #L38fd34.  v3:= temp @kind object;
  #L38fd36.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38fd3c.  v1:= temp;
  #L38fd3e.  if v1 == 0 then goto L38fdc6;
  #L38fd42.  v1:= v7.`j1.b.b` @type ^`java.lang.Integer` @kind object;
  #L38fd46.  if v1 != 0 then goto L38fd58;
  #L38fd4a.  call temp:= `d`(v8) @signature `Lj1/i;.d:()Ljava/lang/Integer;` @kind virtual;
  #L38fd50.  v1:= temp @kind object;
  #L38fd52.  if v1 != 0 then goto L38fdc6;
  #L38fd56.  goto L38fd6c;
  #L38fd58.  call temp:= `d`(v8) @signature `Lj1/i;.d:()Ljava/lang/Integer;` @kind virtual;
  #L38fd5e.  v3:= temp @kind object;
  #L38fd60.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38fd66.  v1:= temp;
  #L38fd68.  if v1 == 0 then goto L38fdc6;
  #L38fd6c.  v1:= v7.`j1.b.c` @type ^`j1.h` @kind object;
  #L38fd70.  call temp:= `e`(v8) @signature `Lj1/i;.e:()Lj1/h;` @kind virtual;
  #L38fd76.  v3:= temp @kind object;
  #L38fd78.  call temp:= `equals`(v1, v3) @signature `Lj1/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38fd7e.  v1:= temp;
  #L38fd80.  if v1 == 0 then goto L38fdc6;
  #L38fd84.  v3:= v7.`j1.b.d` @type ^`long` @kind wide;
  #L38fd88.  call temp:= `f`(v8) @signature `Lj1/i;.f:()J` @kind virtual;
  #L38fd8e.  v5:= temp @kind wide;
  #L38fd90.  v1:= lcmp(v3, v5);
  #L38fd94.  if v1 != 0 then goto L38fdc6;
  #L38fd98.  v3:= v7.`j1.b.e` @type ^`long` @kind wide;
  #L38fd9c.  call temp:= `k`(v8) @signature `Lj1/i;.k:()J` @kind virtual;
  #L38fda2.  v5:= temp @kind wide;
  #L38fda4.  v1:= lcmp(v3, v5);
  #L38fda8.  if v1 != 0 then goto L38fdc6;
  #L38fdac.  v1:= v7.`j1.b.f` @type ^`java.util.Map` @kind object;
  #L38fdb0.  call temp:= `c`(v8) @signature `Lj1/i;.c:()Ljava/util/Map;` @kind virtual;
  #L38fdb6.  v8:= temp @kind object;
  #L38fdb8.  call temp:= `equals`(v1, v8) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L38fdbe.  v8:= temp;
  #L38fdc0.  if v8 == 0 then goto L38fdc6;
  #L38fdc4.  goto L38fdc8;
  #L38fdc6.  v0:= 0I;
  #L38fdc8.  return v0;
  #L38fdca.  return v2;
}
procedure `long` `f`(`j1.b` v2 @kind this) @signature `Lj1/b;.f:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38ff70.  v0:= v2.`j1.b.d` @type ^`long` @kind wide;
  #L38ff74.  return v0 @kind wide;
}
procedure `int` `hashCode`(`j1.b` v7 @kind this) @signature `Lj1/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L38fddc.  v0:= v7.`j1.b.a` @type ^`java.lang.String` @kind object;
  #L38fde0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L38fde6.  v0:= temp;
  #L38fde8.  v1:= 1000003I;
  #L38fdee.  v0:= v0 ^~ v1 @kind int;
  #L38fdf0.  v0:= v0 * v1 @kind int;
  #L38fdf4.  v2:= v7.`j1.b.b` @type ^`java.lang.Integer` @kind object;
  #L38fdf8.  if v2 != 0 then goto L38fe00;
  #L38fdfc.  v2:= 0I;
  #L38fdfe.  goto L38fe08;
  #L38fe00.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Integer;.hashCode:()I` @kind virtual;
  #L38fe06.  v2:= temp;
  #L38fe08.  v0:= v0 ^~ v2 @kind int;
  #L38fe0a.  v0:= v0 * v1 @kind int;
  #L38fe0e.  v2:= v7.`j1.b.c` @type ^`j1.h` @kind object;
  #L38fe12.  call temp:= `hashCode`(v2) @signature `Lj1/h;.hashCode:()I` @kind virtual;
  #L38fe18.  v2:= temp;
  #L38fe1a.  v0:= v0 ^~ v2 @kind int;
  #L38fe1c.  v0:= v0 * v1 @kind int;
  #L38fe20.  v2:= v7.`j1.b.d` @type ^`long` @kind wide;
  #L38fe24.  v4:= 32I;
  #L38fe28.  v5:= v2 ^>> v4 @kind long;
  #L38fe2c.  v2:= v2 ^~ v5 @kind long;
  #L38fe2e.  v3:= (`int`) v2 @kind l2i;
  #L38fe30.  v0:= v0 ^~ v3 @kind int;
  #L38fe32.  v0:= v0 * v1 @kind int;
  #L38fe36.  v2:= v7.`j1.b.e` @type ^`long` @kind wide;
  #L38fe3a.  v4:= v2 ^>> v4 @kind long;
  #L38fe3e.  v2:= v2 ^~ v4 @kind long;
  #L38fe40.  v3:= (`int`) v2 @kind l2i;
  #L38fe42.  v0:= v0 ^~ v3 @kind int;
  #L38fe44.  v0:= v0 * v1 @kind int;
  #L38fe48.  v1:= v7.`j1.b.f` @type ^`java.util.Map` @kind object;
  #L38fe4c.  call temp:= `hashCode`(v1) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L38fe52.  v1:= temp;
  #L38fe54.  v0:= v0 ^~ v1 @kind int;
  #L38fe56.  return v0;
}
procedure `java.lang.String` `j`(`j1.b` v1 @kind this) @signature `Lj1/b;.j:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38fe98.  v0:= v1.`j1.b.a` @type ^`java.lang.String` @kind object;
  #L38fe9c.  return v0 @kind object;
}
procedure `long` `k`(`j1.b` v2 @kind this) @signature `Lj1/b;.k:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38ff88.  v0:= v2.`j1.b.e` @type ^`long` @kind wide;
  #L38ff8c.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`j1.b` v3 @kind this) @signature `Lj1/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38feb0.  v0:= new `java.lang.StringBuilder`;
  #L38feb4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38feba.  v1:= "EventInternal{transportName=" @kind object;
  #L38febe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38fec4.  v1:= v3.`j1.b.a` @type ^`java.lang.String` @kind object;
  #L38fec8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38fece.  v1:= ", code=" @kind object;
  #L38fed2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38fed8.  v1:= v3.`j1.b.b` @type ^`java.lang.Integer` @kind object;
  #L38fedc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38fee2.  v1:= ", encodedPayload=" @kind object;
  #L38fee6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38feec.  v1:= v3.`j1.b.c` @type ^`j1.h` @kind object;
  #L38fef0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38fef6.  v1:= ", eventMillis=" @kind object;
  #L38fefa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38ff00.  v1:= v3.`j1.b.d` @type ^`long` @kind wide;
  #L38ff04.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L38ff0a.  v1:= ", uptimeMillis=" @kind object;
  #L38ff0e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38ff14.  v1:= v3.`j1.b.e` @type ^`long` @kind wide;
  #L38ff18.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L38ff1e.  v1:= ", autoMetadata=" @kind object;
  #L38ff22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38ff28.  v1:= v3.`j1.b.f` @type ^`java.util.Map` @kind object;
  #L38ff2c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38ff32.  v1:= "}" @kind object;
  #L38ff36.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38ff3c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38ff42.  v0:= temp @kind object;
  #L38ff44.  return v0 @kind object;
}
