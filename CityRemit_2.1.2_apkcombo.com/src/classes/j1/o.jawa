record `j1.o` @kind class @AccessFlag ABSTRACT {
}
procedure `void` `<init>`(`j1.o` v0 @kind this) @signature `Lj1/o;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L390fe8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L390fee.  return @kind void;
}
procedure `j1.o$a` `a`() @signature `Lj1/o;.a:()Lj1/o$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L390fcc.  v0:= new `j1.c$b`;
  #L390fd0.  call `<init>`(v0) @signature `Lj1/c$b;.<init>:()V` @kind direct;
  #L390fd6.  return v0 @kind object;
}
procedure `h1.b` `b`() @signature `Lj1/o;.b:()Lh1/b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `h1.c` `c`() @signature `Lj1/o;.c:()Lh1/c;` @AccessFlag ABSTRACT {

  # return;
}
procedure `byte`[] `d`(`j1.o` v2 @kind this) @signature `Lj1/o;.d:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L390f94.  call temp:= `e`(v2) @signature `Lj1/o;.e:()Lh1/e;` @kind virtual;
  #L390f9a.  v0:= temp @kind object;
  #L390f9c.  call temp:= `c`(v2) @signature `Lj1/o;.c:()Lh1/c;` @kind virtual;
  #L390fa2.  v1:= temp @kind object;
  #L390fa4.  call temp:= `b`(v1) @signature `Lh1/c;.b:()Ljava/lang/Object;` @kind virtual;
  #L390faa.  v1:= temp @kind object;
  #L390fac.  call temp:= `apply`(v0, v1) @signature `Lh1/e;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L390fb2.  v0:= temp @kind object;
  #L390fb4.  v0:= (`byte`[]) v0 @kind object;
  #L390fb8.  return v0 @kind object;
}
procedure `h1.e` `e`() @signature `Lj1/o;.e:()Lh1/e;` @AccessFlag ABSTRACT {

  # return;
}
procedure `j1.p` `f`() @signature `Lj1/o;.f:()Lj1/p;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `g`() @signature `Lj1/o;.g:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
