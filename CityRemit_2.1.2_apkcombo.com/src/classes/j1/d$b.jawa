record `j1.d$b` @kind class @AccessFlag FINAL extends `j1.p$a` @kind class {
  `java.lang.String` `j1.d$b.a` @AccessFlag PRIVATE;
  `byte`[] `j1.d$b.b` @AccessFlag PRIVATE;
  `h1.d` `j1.d$b.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`j1.d$b` v0 @kind this) @signature `Lj1/d$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L390560.  call `<init>`(v0) @signature `Lj1/p$a;.<init>:()V` @kind direct;
  #L390566.  return @kind void;
}
procedure `j1.p` `a`(`j1.d$b` v5 @kind this) @signature `Lj1/d$b;.a:()Lj1/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39044c.  v0:= v5.`j1.d$b.a` @type ^`java.lang.String` @kind object;
  #L390450.  v1:= "" @kind object;
  #L390454.  if v0 != 0 then goto L39047a;
  #L390458.  v0:= new `java.lang.StringBuilder`;
  #L39045c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L390462.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L390468.  v1:= " backendName" @kind object;
  #L39046c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L390472.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L390478.  v1:= temp @kind object;
  #L39047a.  v0:= v5.`j1.d$b.c` @type ^`h1.d` @kind object;
  #L39047e.  if v0 != 0 then goto L3904a4;
  #L390482.  v0:= new `java.lang.StringBuilder`;
  #L390486.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39048c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L390492.  v1:= " priority" @kind object;
  #L390496.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39049c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3904a2.  v1:= temp @kind object;
  #L3904a4.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3904aa.  v0:= temp;
  #L3904ac.  if v0 == 0 then goto L3904ca;
  #L3904b0.  v0:= new `j1.d`;
  #L3904b4.  v1:= v5.`j1.d$b.a` @type ^`java.lang.String` @kind object;
  #L3904b8.  v2:= v5.`j1.d$b.b` @type ^`byte`[] @kind object;
  #L3904bc.  v3:= v5.`j1.d$b.c` @type ^`h1.d` @kind object;
  #L3904c0.  v4:= 0I;
  #L3904c2.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lj1/d;.<init>:(Ljava/lang/String;[BLh1/d;Lj1/d$a;)V` @kind direct;
  #L3904c8.  return v0 @kind object;
  #L3904ca.  v0:= new `java.lang.IllegalStateException`;
  #L3904ce.  v2:= new `java.lang.StringBuilder`;
  #L3904d2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3904d8.  v3:= "Missing required properties:" @kind object;
  #L3904dc.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3904e2.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3904e8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3904ee.  v1:= temp @kind object;
  #L3904f0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3904f6.  throw v0;
}
procedure `j1.p$a` `b`(`j1.d$b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lj1/d$b;.b:(Ljava/lang/String;)Lj1/p$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L390508.  v0:= "Null backendName" @kind object;
  #L39050c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L390512.  v1.`j1.d$b.a` @type ^`java.lang.String` := v2 @kind object;
  #L390516.  return v1 @kind object;
}
procedure `j1.p$a` `c`(`j1.d$b` v0 @kind this, `byte`[] v1 @kind object) @signature `Lj1/d$b;.c:([B)Lj1/p$a;` @AccessFlag PUBLIC {
    temp;

  #L390528.  v0.`j1.d$b.b` @type ^`byte`[] := v1 @kind object;
  #L39052c.  return v0 @kind object;
}
procedure `j1.p$a` `d`(`j1.d$b` v1 @kind this, `h1.d` v2 @kind object) @signature `Lj1/d$b;.d:(Lh1/d;)Lj1/p$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L390540.  v0:= "Null priority" @kind object;
  #L390544.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L39054a.  v1.`j1.d$b.c` @type ^`h1.d` := v2 @kind object;
  #L39054e.  return v1 @kind object;
}
