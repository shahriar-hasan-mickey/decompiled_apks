record `j1.c` @kind class @AccessFlag FINAL extends `j1.o` @kind class {
  `j1.p` `j1.c.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `j1.c.b` @AccessFlag PRIVATE_FINAL;
  `h1.c` `j1.c.c` @AccessFlag PRIVATE_FINAL;
  `h1.e` `j1.c.d` @AccessFlag PRIVATE_FINAL;
  `h1.b` `j1.c.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`j1.c` v0 @kind this, `j1.p` v1 @kind object, `java.lang.String` v2 @kind object, `h1.c` v3 @kind object, `h1.e` v4 @kind object, `h1.b` v5 @kind object) @signature `Lj1/c;.<init>:(Lj1/p;Ljava/lang/String;Lh1/c;Lh1/e;Lh1/b;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L390408.  call `<init>`(v0) @signature `Lj1/o;.<init>:()V` @kind direct;
  #L39040e.  v0.`j1.c.a` @type ^`j1.p` := v1 @kind object;
  #L390412.  v0.`j1.c.b` @type ^`java.lang.String` := v2 @kind object;
  #L390416.  v0.`j1.c.c` @type ^`h1.c` := v3 @kind object;
  #L39041a.  v0.`j1.c.d` @type ^`h1.e` := v4 @kind object;
  #L39041e.  v0.`j1.c.e` @type ^`h1.b` := v5 @kind object;
  #L390422.  return @kind void;
}
procedure `void` `<init>`(`j1.c` v0 @kind this, `j1.p` v1 @kind object, `java.lang.String` v2 @kind object, `h1.c` v3 @kind object, `h1.e` v4 @kind object, `h1.b` v5 @kind object, `j1.c$a` v6 @kind object) @signature `Lj1/c;.<init>:(Lj1/p;Ljava/lang/String;Lh1/c;Lh1/e;Lh1/b;Lj1/c$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L390434.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lj1/c;.<init>:(Lj1/p;Ljava/lang/String;Lh1/c;Lh1/e;Lh1/b;)V` @kind direct;
  #L39043a.  return @kind void;
}
procedure `h1.b` `b`(`j1.c` v1 @kind this) @signature `Lj1/c;.b:()Lh1/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39028c.  v0:= v1.`j1.c.e` @type ^`h1.b` @kind object;
  #L390290.  return v0 @kind object;
}
procedure `h1.c` `c`(`j1.c` v1 @kind this) @signature `Lj1/c;.c:()Lh1/c;` @AccessFlag  {
    temp;
    v0;

  #L3902a4.  v0:= v1.`j1.c.c` @type ^`h1.c` @kind object;
  #L3902a8.  return v0 @kind object;
}
procedure `h1.e` `e`(`j1.c` v1 @kind this) @signature `Lj1/c;.e:()Lh1/e;` @AccessFlag  {
    temp;
    v0;

  #L3902bc.  v0:= v1.`j1.c.d` @type ^`h1.e` @kind object;
  #L3902c0.  return v0 @kind object;
}
procedure `boolean` `equals`(`j1.c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lj1/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3901e4.  v0:= 1I;
  #L3901e6.  if v5 != v4 then goto L3901ec;
  #L3901ea.  return v0;
  #L3901ec.  v1:= instanceof @variable v5 @type ^`j1.o` @kind boolean;
  #L3901f0.  v2:= 0I;
  #L3901f2.  if v1 == 0 then goto L390278;
  #L3901f6.  v5:= (`j1.o`) v5 @kind object;
  #L3901fa.  v1:= v4.`j1.c.a` @type ^`j1.p` @kind object;
  #L3901fe.  call temp:= `f`(v5) @signature `Lj1/o;.f:()Lj1/p;` @kind virtual;
  #L390204.  v3:= temp @kind object;
  #L390206.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39020c.  v1:= temp;
  #L39020e.  if v1 == 0 then goto L390274;
  #L390212.  v1:= v4.`j1.c.b` @type ^`java.lang.String` @kind object;
  #L390216.  call temp:= `g`(v5) @signature `Lj1/o;.g:()Ljava/lang/String;` @kind virtual;
  #L39021c.  v3:= temp @kind object;
  #L39021e.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L390224.  v1:= temp;
  #L390226.  if v1 == 0 then goto L390274;
  #L39022a.  v1:= v4.`j1.c.c` @type ^`h1.c` @kind object;
  #L39022e.  call temp:= `c`(v5) @signature `Lj1/o;.c:()Lh1/c;` @kind virtual;
  #L390234.  v3:= temp @kind object;
  #L390236.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39023c.  v1:= temp;
  #L39023e.  if v1 == 0 then goto L390274;
  #L390242.  v1:= v4.`j1.c.d` @type ^`h1.e` @kind object;
  #L390246.  call temp:= `e`(v5) @signature `Lj1/o;.e:()Lh1/e;` @kind virtual;
  #L39024c.  v3:= temp @kind object;
  #L39024e.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L390254.  v1:= temp;
  #L390256.  if v1 == 0 then goto L390274;
  #L39025a.  v1:= v4.`j1.c.e` @type ^`h1.b` @kind object;
  #L39025e.  call temp:= `b`(v5) @signature `Lj1/o;.b:()Lh1/b;` @kind virtual;
  #L390264.  v5:= temp @kind object;
  #L390266.  call temp:= `equals`(v1, v5) @signature `Lh1/b;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39026c.  v5:= temp;
  #L39026e.  if v5 == 0 then goto L390274;
  #L390272.  goto L390276;
  #L390274.  v0:= 0I;
  #L390276.  return v0;
  #L390278.  return v2;
}
procedure `j1.p` `f`(`j1.c` v1 @kind this) @signature `Lj1/c;.f:()Lj1/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L390344.  v0:= v1.`j1.c.a` @type ^`j1.p` @kind object;
  #L390348.  return v0 @kind object;
}
procedure `java.lang.String` `g`(`j1.c` v1 @kind this) @signature `Lj1/c;.g:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39035c.  v0:= v1.`j1.c.b` @type ^`java.lang.String` @kind object;
  #L390360.  return v0 @kind object;
}
procedure `int` `hashCode`(`j1.c` v3 @kind this) @signature `Lj1/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3902d4.  v0:= v3.`j1.c.a` @type ^`j1.p` @kind object;
  #L3902d8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3902de.  v0:= temp;
  #L3902e0.  v1:= 1000003I;
  #L3902e6.  v0:= v0 ^~ v1 @kind int;
  #L3902e8.  v0:= v0 * v1 @kind int;
  #L3902ec.  v2:= v3.`j1.c.b` @type ^`java.lang.String` @kind object;
  #L3902f0.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3902f6.  v2:= temp;
  #L3902f8.  v0:= v0 ^~ v2 @kind int;
  #L3902fa.  v0:= v0 * v1 @kind int;
  #L3902fe.  v2:= v3.`j1.c.c` @type ^`h1.c` @kind object;
  #L390302.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L390308.  v2:= temp;
  #L39030a.  v0:= v0 ^~ v2 @kind int;
  #L39030c.  v0:= v0 * v1 @kind int;
  #L390310.  v2:= v3.`j1.c.d` @type ^`h1.e` @kind object;
  #L390314.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L39031a.  v2:= temp;
  #L39031c.  v0:= v0 ^~ v2 @kind int;
  #L39031e.  v0:= v0 * v1 @kind int;
  #L390322.  v1:= v3.`j1.c.e` @type ^`h1.b` @kind object;
  #L390326.  call temp:= `hashCode`(v1) @signature `Lh1/b;.hashCode:()I` @kind virtual;
  #L39032c.  v1:= temp;
  #L39032e.  v0:= v0 ^~ v1 @kind int;
  #L390330.  return v0;
}
procedure `java.lang.String` `toString`(`j1.c` v2 @kind this) @signature `Lj1/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L390374.  v0:= new `java.lang.StringBuilder`;
  #L390378.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39037e.  v1:= "SendRequest{transportContext=" @kind object;
  #L390382.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L390388.  v1:= v2.`j1.c.a` @type ^`j1.p` @kind object;
  #L39038c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L390392.  v1:= ", transportName=" @kind object;
  #L390396.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39039c.  v1:= v2.`j1.c.b` @type ^`java.lang.String` @kind object;
  #L3903a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3903a6.  v1:= ", event=" @kind object;
  #L3903aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3903b0.  v1:= v2.`j1.c.c` @type ^`h1.c` @kind object;
  #L3903b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3903ba.  v1:= ", transformer=" @kind object;
  #L3903be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3903c4.  v1:= v2.`j1.c.d` @type ^`h1.e` @kind object;
  #L3903c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3903ce.  v1:= ", encoding=" @kind object;
  #L3903d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3903d8.  v1:= v2.`j1.c.e` @type ^`h1.b` @kind object;
  #L3903dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3903e2.  v1:= "}" @kind object;
  #L3903e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3903ec.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3903f2.  v0:= temp @kind object;
  #L3903f4.  return v0 @kind object;
}
