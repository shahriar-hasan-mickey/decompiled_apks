record `j1.l` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `j1.p` `a`(`h1.f` v1 @kind object) @signature `Lj1/l;.a:(Lh1/f;)Lj1/p;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L390dfc.  v0:= instanceof @variable v1 @type ^`j1.s` @kind boolean;
  #L390e00.  if v0 == 0 then goto L390e12;
  #L390e04.  v1:= (`j1.s`) v1 @kind object;
  #L390e08.  call temp:= `d`(v1) @signature `Lj1/s;.d:()Lj1/p;` @kind virtual;
  #L390e0e.  v1:= temp @kind object;
  #L390e10.  return v1 @kind object;
  #L390e12.  v1:= new `java.lang.IllegalArgumentException`;
  #L390e16.  v0:= "Expected instance of TransportImpl." @kind object;
  #L390e1a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L390e20.  throw v1;
}
procedure `void` `b`(`h1.f` v1 @kind object, `h1.d` v2 @kind object) @signature `Lj1/l;.b:(Lh1/f;Lh1/d;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L390e34.  call temp:= `a`(v1) @signature `Lj1/l;.a:(Lh1/f;)Lj1/p;` @kind static;
  #L390e3a.  v1:= temp @kind object;
  #L390e3c.  call temp:= `f`(v1, v2) @signature `Lj1/p;.f:(Lh1/d;)Lj1/p;` @kind virtual;
  #L390e42.  v1:= temp @kind object;
  #L390e44.  call temp:= `c`() @signature `Lj1/u;.c:()Lj1/u;` @kind static;
  #L390e4a.  v2:= temp @kind object;
  #L390e4c.  call temp:= `e`(v2) @signature `Lj1/u;.e:()Lq1/p;` @kind virtual;
  #L390e52.  v2:= temp @kind object;
  #L390e54.  v0:= 1I;
  #L390e56.  call temp:= `u`(v2, v1, v0) @signature `Lq1/p;.u:(Lj1/p;I)Lcom/google/android/datatransport/runtime/backends/e;` @kind virtual;
  #L390e5c.  return @kind void;
}
