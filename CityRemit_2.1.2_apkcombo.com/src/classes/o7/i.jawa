record `o7.i` @kind class @AccessFlag  extends `l7.g` @kind interface {
  `boolean` `o7.i.a` @AccessFlag PRIVATE;
  `boolean` `o7.i.b` @AccessFlag PRIVATE;
  `l7.c` `o7.i.c` @AccessFlag PRIVATE;
  `o7.f` `o7.i.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`o7.i` v1 @kind this, `o7.f` v2 @kind object) @signature `Lo7/i;.<init>:(Lo7/f;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3ff618.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ff61e.  v0:= 0I;
  #L3ff620.  v1.`o7.i.a` @type ^`boolean` := v0 @kind boolean;
  #L3ff624.  v1.`o7.i.b` @type ^`boolean` := v0 @kind boolean;
  #L3ff628.  v1.`o7.i.d` @type ^`o7.f` := v2 @kind object;
  #L3ff62c.  return @kind void;
}
procedure `void` `a`(`o7.i` v2 @kind this) @signature `Lo7/i;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ff640.  v0:= v2.`o7.i.a` @type ^`boolean` @kind boolean;
  #L3ff644.  if v0 != 0 then goto L3ff650;
  #L3ff648.  v0:= 1I;
  #L3ff64a.  v2.`o7.i.a` @type ^`boolean` := v0 @kind boolean;
  #L3ff64e.  return @kind void;
  #L3ff650.  v0:= new `l7.b`;
  #L3ff654.  v1:= "Cannot encode a second value in the ValueEncoderContext" @kind object;
  #L3ff658.  call `<init>`(v0, v1) @signature `Ll7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ff65e.  throw v0;
}
procedure `void` `b`(`o7.i` v1 @kind this, `l7.c` v2 @kind object, `boolean` v3 ) @signature `Lo7/i;.b:(Ll7/c;Z)V` @AccessFlag  {
    temp;
    v0;

  #L3ff670.  v0:= 0I;
  #L3ff672.  v1.`o7.i.a` @type ^`boolean` := v0 @kind boolean;
  #L3ff676.  v1.`o7.i.c` @type ^`l7.c` := v2 @kind object;
  #L3ff67a.  v1.`o7.i.b` @type ^`boolean` := v3 @kind boolean;
  #L3ff67e.  return @kind void;
}
procedure `l7.g` `d`(`o7.i` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lo7/i;.d:(Ljava/lang/String;)Ll7/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ff5ec.  call `a`(v3) @signature `Lo7/i;.a:()V` @kind direct;
  #L3ff5f2.  v0:= v3.`o7.i.d` @type ^`o7.f` @kind object;
  #L3ff5f6.  v1:= v3.`o7.i.c` @type ^`l7.c` @kind object;
  #L3ff5fa.  v2:= v3.`o7.i.b` @type ^`boolean` @kind boolean;
  #L3ff5fe.  call temp:= `h`(v0, v1, v4, v2) @signature `Lo7/f;.h:(Ll7/c;Ljava/lang/Object;Z)Ll7/e;` @kind virtual;
  #L3ff604.  return v3 @kind object;
}
procedure `l7.g` `e`(`o7.i` v3 @kind this, `boolean` v4 ) @signature `Lo7/i;.e:(Z)Ll7/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ff5c0.  call `a`(v3) @signature `Lo7/i;.a:()V` @kind direct;
  #L3ff5c6.  v0:= v3.`o7.i.d` @type ^`o7.f` @kind object;
  #L3ff5ca.  v1:= v3.`o7.i.c` @type ^`l7.c` @kind object;
  #L3ff5ce.  v2:= v3.`o7.i.b` @type ^`boolean` @kind boolean;
  #L3ff5d2.  call temp:= `n`(v0, v1, v4, v2) @signature `Lo7/f;.n:(Ll7/c;ZZ)Lo7/f;` @kind virtual;
  #L3ff5d8.  return v3 @kind object;
}
