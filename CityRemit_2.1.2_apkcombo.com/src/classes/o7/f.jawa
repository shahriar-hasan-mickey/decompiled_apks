record `o7.f` @kind class @AccessFlag FINAL extends `l7.e` @kind interface {
  `java.io.OutputStream` `o7.f.a` @AccessFlag PRIVATE;
  `java.util.Map` `o7.f.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `o7.f.c` @AccessFlag PRIVATE_FINAL;
  `l7.d` `o7.f.d` @AccessFlag PRIVATE_FINAL;
  `o7.i` `o7.f.e` @AccessFlag PRIVATE_FINAL;
}
global `java.nio.charset.Charset` `@@o7.f.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `l7.c` `@@o7.f.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `l7.c` `@@o7.f.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `l7.d` `@@o7.f.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lo7/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3ff1c4.  v0:= "UTF-8" @kind object;
  #L3ff1c8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3ff1ce.  v0:= temp @kind object;
  #L3ff1d0.  `@@o7.f.f` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L3ff1d4.  v0:= "key" @kind object;
  #L3ff1d8.  call temp:= `a`(v0) @signature `Ll7/c;.a:(Ljava/lang/String;)Ll7/c$b;` @kind static;
  #L3ff1de.  v0:= temp @kind object;
  #L3ff1e0.  call temp:= `b`() @signature `Lo7/a;.b:()Lo7/a;` @kind static;
  #L3ff1e6.  v1:= temp @kind object;
  #L3ff1e8.  v2:= 1I;
  #L3ff1ea.  call temp:= `c`(v1, v2) @signature `Lo7/a;.c:(I)Lo7/a;` @kind virtual;
  #L3ff1f0.  v1:= temp @kind object;
  #L3ff1f2.  call temp:= `a`(v1) @signature `Lo7/a;.a:()Lo7/d;` @kind virtual;
  #L3ff1f8.  v1:= temp @kind object;
  #L3ff1fa.  call temp:= `b`(v0, v1) @signature `Ll7/c$b;.b:(Ljava/lang/annotation/Annotation;)Ll7/c$b;` @kind virtual;
  #L3ff200.  v0:= temp @kind object;
  #L3ff202.  call temp:= `a`(v0) @signature `Ll7/c$b;.a:()Ll7/c;` @kind virtual;
  #L3ff208.  v0:= temp @kind object;
  #L3ff20a.  `@@o7.f.g` @type ^`l7.c` := v0 @kind object;
  #L3ff20e.  v0:= "value" @kind object;
  #L3ff212.  call temp:= `a`(v0) @signature `Ll7/c;.a:(Ljava/lang/String;)Ll7/c$b;` @kind static;
  #L3ff218.  v0:= temp @kind object;
  #L3ff21a.  call temp:= `b`() @signature `Lo7/a;.b:()Lo7/a;` @kind static;
  #L3ff220.  v1:= temp @kind object;
  #L3ff222.  v2:= 2I;
  #L3ff224.  call temp:= `c`(v1, v2) @signature `Lo7/a;.c:(I)Lo7/a;` @kind virtual;
  #L3ff22a.  v1:= temp @kind object;
  #L3ff22c.  call temp:= `a`(v1) @signature `Lo7/a;.a:()Lo7/d;` @kind virtual;
  #L3ff232.  v1:= temp @kind object;
  #L3ff234.  call temp:= `b`(v0, v1) @signature `Ll7/c$b;.b:(Ljava/lang/annotation/Annotation;)Ll7/c$b;` @kind virtual;
  #L3ff23a.  v0:= temp @kind object;
  #L3ff23c.  call temp:= `a`(v0) @signature `Ll7/c$b;.a:()Ll7/c;` @kind virtual;
  #L3ff242.  v0:= temp @kind object;
  #L3ff244.  `@@o7.f.h` @type ^`l7.c` := v0 @kind object;
  #L3ff248.  v0:= `@@o7.e.a` @type ^`o7.e` @kind object;
  #L3ff24c.  `@@o7.f.i` @type ^`l7.d` := v0 @kind object;
  #L3ff250.  return @kind void;
}
procedure `void` `<init>`(`o7.f` v1 @kind this, `java.io.OutputStream` v2 @kind object, `java.util.Map` v3 @kind object, `java.util.Map` v4 @kind object, `l7.d` v5 @kind object) @signature `Lo7/f;.<init>:(Ljava/io/OutputStream;Ljava/util/Map;Ljava/util/Map;Ll7/d;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3ff264.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ff26a.  v0:= new `o7.i`;
  #L3ff26e.  call `<init>`(v0, v1) @signature `Lo7/i;.<init>:(Lo7/f;)V` @kind direct;
  #L3ff274.  v1.`o7.f.e` @type ^`o7.i` := v0 @kind object;
  #L3ff278.  v1.`o7.f.a` @type ^`java.io.OutputStream` := v2 @kind object;
  #L3ff27c.  v1.`o7.f.b` @type ^`java.util.Map` := v3 @kind object;
  #L3ff280.  v1.`o7.f.c` @type ^`java.util.Map` := v4 @kind object;
  #L3ff284.  v1.`o7.f.d` @type ^`l7.d` := v5 @kind object;
  #L3ff288.  return @kind void;
}
procedure `void` `d`(`java.util.Map$Entry` v0 @kind object, `l7.e` v1 @kind object) @signature `Lo7/f;.d:(Ljava/util/Map$Entry;Ll7/e;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3ff1ac.  call `v`(v0, v1) @signature `Lo7/f;.v:(Ljava/util/Map$Entry;Ll7/e;)V` @kind static;
  #L3ff1b2.  return @kind void;
}
procedure `java.nio.ByteBuffer` `o`(`int` v1 ) @signature `Lo7/f;.o:(I)Ljava/nio/ByteBuffer;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3fea74.  call temp:= `allocate`(v1) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L3fea7a.  v1:= temp @kind object;
  #L3fea7c.  v0:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L3fea80.  call temp:= `order`(v1, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3fea86.  v1:= temp @kind object;
  #L3fea88.  return v1 @kind object;
}
procedure `long` `p`(`o7.f` v2 @kind this, `l7.d` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lo7/f;.p:(Ll7/d;Ljava/lang/Object;)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fee00.  v0:= new `o7.b`;
  #L3fee04.  call `<init>`(v0) @signature `Lo7/b;.<init>:()V` @kind direct;
  #L3fee0a.  v1:= v2.`o7.f.a` @type ^`java.io.OutputStream` @kind object;
  #L3fee0e.  v2.`o7.f.a` @type ^`java.io.OutputStream` := v0 @kind object;
  #L3fee12.  call `a`(v3, v4, v2) @signature `Ll7/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L3fee18.  v2.`o7.f.a` @type ^`java.io.OutputStream` := v1 @kind object;
  #L3fee1c.  call temp:= `a`(v0) @signature `Lo7/b;.a:()J` @kind virtual;
  #L3fee22.  v3:= temp @kind wide;
  #L3fee24.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3fee2a.  return v3 @kind wide;
  #L3fee2c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fee2e.  v2.`o7.f.a` @type ^`java.io.OutputStream` := v1 @kind object;
  #L3fee32.  throw v3;
  #L3fee34.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fee36.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3fee3c.  goto L3fee46;
  #L3fee3e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fee40.  call `addSuppressed`(v3, v4) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3fee46.  throw v3;
  catch `java.lang.Throwable` @[L3fee0a..L3fee12] goto L3fee34;
  catch `java.lang.Throwable` @[L3fee12..L3fee18] goto L3fee2c;
  catch `java.lang.Throwable` @[L3fee18..L3fee24] goto L3fee34;
  catch `java.lang.Throwable` @[L3fee2e..L3fee34] goto L3fee34;
  catch `java.lang.Throwable` @[L3fee36..L3fee3c] goto L3fee3e;
}
procedure `o7.f` `q`(`o7.f` v4 @kind this, `l7.d` v5 @kind object, `l7.c` v6 @kind object, `java.lang.Object` v7 @kind object, `boolean` v8 ) @signature `Lo7/f;.q:(Ll7/d;Ll7/c;Ljava/lang/Object;Z)Lo7/f;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff0c4.  call temp:= `p`(v4, v5, v7) @signature `Lo7/f;.p:(Ll7/d;Ljava/lang/Object;)J` @kind direct;
  #L3ff0ca.  v0:= temp @kind wide;
  #L3ff0cc.  if v8 == 0 then goto L3ff0de;
  #L3ff0d0.  v2:= 0L;
  #L3ff0d4.  v8:= lcmp(v0, v2);
  #L3ff0d8.  if v8 != 0 then goto L3ff0de;
  #L3ff0dc.  return v4 @kind object;
  #L3ff0de.  call temp:= `u`(v6) @signature `Lo7/f;.u:(Ll7/c;)I` @kind static;
  #L3ff0e4.  v6:= temp;
  #L3ff0e6.  v6:= v6 ^< 3;
  #L3ff0ea.  v6:= v6 ^| 2;
  #L3ff0ee.  call `w`(v4, v6) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3ff0f4.  call `x`(v4, v0) @signature `Lo7/f;.x:(J)V` @kind direct;
  #L3ff0fa.  call `a`(v5, v7, v4) @signature `Ll7/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L3ff100.  return v4 @kind object;
}
procedure `o7.f` `r`(`o7.f` v1 @kind this, `l7.f` v2 @kind object, `l7.c` v3 @kind object, `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lo7/f;.r:(Ll7/f;Ll7/c;Ljava/lang/Object;Z)Lo7/f;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ff114.  v0:= v1.`o7.f.e` @type ^`o7.i` @kind object;
  #L3ff118.  call `b`(v0, v3, v5) @signature `Lo7/i;.b:(Ll7/c;Z)V` @kind virtual;
  #L3ff11e.  v3:= v1.`o7.f.e` @type ^`o7.i` @kind object;
  #L3ff122.  call `a`(v2, v4, v3) @signature `Ll7/f;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L3ff128.  return v1 @kind object;
}
procedure `o7.d` `t`(`l7.c` v1 @kind object) @signature `Lo7/f;.t:(Ll7/c;)Lo7/d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3fee88.  v0:= constclass @type ^`o7.d` @kind object;
  #L3fee8c.  call temp:= `c`(v1, v0) @signature `Ll7/c;.c:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3fee92.  v1:= temp @kind object;
  #L3fee94.  v1:= (`o7.d`) v1 @kind object;
  #L3fee98.  if v1 == 0 then goto L3fee9e;
  #L3fee9c.  return v1 @kind object;
  #L3fee9e.  v1:= new `l7.b`;
  #L3feea2.  v0:= "Field has no @Protobuf config" @kind object;
  #L3feea6.  call `<init>`(v1, v0) @signature `Ll7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3feeac.  throw v1;
}
procedure `int` `u`(`l7.c` v1 @kind object) @signature `Lo7/f;.u:(Ll7/c;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3fea34.  v0:= constclass @type ^`o7.d` @kind object;
  #L3fea38.  call temp:= `c`(v1, v0) @signature `Ll7/c;.c:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3fea3e.  v1:= temp @kind object;
  #L3fea40.  v1:= (`o7.d`) v1 @kind object;
  #L3fea44.  if v1 == 0 then goto L3fea52;
  #L3fea48.  call temp:= `tag`(v1) @signature `Lo7/d;.tag:()I` @kind interface;
  #L3fea4e.  v1:= temp;
  #L3fea50.  return v1;
  #L3fea52.  v1:= new `l7.b`;
  #L3fea56.  v0:= "Field has no @Protobuf config" @kind object;
  #L3fea5a.  call `<init>`(v1, v0) @signature `Ll7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fea60.  throw v1;
}
procedure `void` `v`(`java.util.Map$Entry` v2 @kind object, `l7.e` v3 @kind object) @signature `Lo7/f;.v:(Ljava/util/Map$Entry;Ll7/e;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L3ff29c.  v0:= `@@o7.f.g` @type ^`l7.c` @kind object;
  #L3ff2a0.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3ff2a6.  v1:= temp @kind object;
  #L3ff2a8.  call temp:= `f`(v3, v0, v1) @signature `Ll7/e;.f:(Ll7/c;Ljava/lang/Object;)Ll7/e;` @kind interface;
  #L3ff2ae.  v0:= `@@o7.f.h` @type ^`l7.c` @kind object;
  #L3ff2b2.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3ff2b8.  v2:= temp @kind object;
  #L3ff2ba.  call temp:= `f`(v3, v0, v2) @signature `Ll7/e;.f:(Ll7/c;Ljava/lang/Object;)Ll7/e;` @kind interface;
  #L3ff2c0.  return @kind void;
}
procedure `void` `w`(`o7.f` v5 @kind this, `int` v6 ) @signature `Lo7/f;.w:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ff2d4.  v0:= v6 ^& -128;
  #L3ff2d8.  v0:= (`long`) v0 @kind i2l;
  #L3ff2da.  v2:= 0L;
  #L3ff2de.  v4:= lcmp(v0, v2);
  #L3ff2e2.  v0:= v5.`o7.f.a` @type ^`java.io.OutputStream` @kind object;
  #L3ff2e6.  if v4 == 0 then goto L3ff2fe;
  #L3ff2ea.  v1:= v6 ^& 127;
  #L3ff2ee.  v1:= v1 ^| 128;
  #L3ff2f2.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L3ff2f8.  v6:= v6 ^>> 7;
  #L3ff2fc.  goto L3ff2d4;
  #L3ff2fe.  v6:= v6 ^& 127;
  #L3ff302.  call `write`(v0, v6) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L3ff308.  return @kind void;
}
procedure `void` `x`(`o7.f` v5 @kind this, `long` v6 ) @signature `Lo7/f;.x:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ff31c.  v0:= -128L;
  #L3ff320.  v0:= v0 ^& v6 @kind long;
  #L3ff322.  v2:= 0L;
  #L3ff326.  v4:= lcmp(v0, v2);
  #L3ff32a.  v0:= v5.`o7.f.a` @type ^`java.io.OutputStream` @kind object;
  #L3ff32e.  if v4 == 0 then goto L3ff348;
  #L3ff332.  v1:= (`int`) v6 @kind l2i;
  #L3ff334.  v1:= v1 ^& 127;
  #L3ff338.  v1:= v1 ^| 128;
  #L3ff33c.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L3ff342.  v0:= 7I;
  #L3ff344.  v6:= v6 ^>> v0 @kind long;
  #L3ff346.  goto L3ff31c;
  #L3ff348.  v7:= (`int`) v6 @kind l2i;
  #L3ff34a.  v6:= v7 ^& 127;
  #L3ff34e.  call `write`(v0, v6) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L3ff354.  return @kind void;
}
procedure `l7.e` `a`(`o7.f` v0 @kind this, `l7.c` v1 @kind object, `int` v2 ) @signature `Lo7/f;.a:(Ll7/c;I)Ll7/e;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3feb74.  call temp:= `i`(v0, v1, v2) @signature `Lo7/f;.i:(Ll7/c;I)Lo7/f;` @kind virtual;
  #L3feb7a.  v1:= temp @kind object;
  #L3feb7c.  return v1 @kind object;
}
procedure `l7.e` `b`(`o7.f` v0 @kind this, `l7.c` v1 @kind object, `long` v2 ) @signature `Lo7/f;.b:(Ll7/c;J)Ll7/e;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3fede4.  call temp:= `k`(v0, v1, v2) @signature `Lo7/f;.k:(Ll7/c;J)Lo7/f;` @kind virtual;
  #L3fedea.  v1:= temp @kind object;
  #L3fedec.  return v1 @kind object;
}
procedure `l7.e` `c`(`o7.f` v0 @kind this, `l7.c` v1 @kind object, `boolean` v2 ) @signature `Lo7/f;.c:(Ll7/c;Z)Ll7/e;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3fea9c.  call temp:= `m`(v0, v1, v2) @signature `Lo7/f;.m:(Ll7/c;Z)Lo7/f;` @kind virtual;
  #L3feaa2.  v1:= temp @kind object;
  #L3feaa4.  return v1 @kind object;
}
procedure `l7.e` `e`(`o7.f` v2 @kind this, `l7.c` v3 @kind object, `double` v4 , `boolean` v6 ) @signature `Lo7/f;.e:(Ll7/c;DZ)Ll7/e;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3feab8.  if v6 == 0 then goto L3feaca;
  #L3feabc.  v0:= 0L;
  #L3feac0.  v6:= dcmpl(v4, v0);
  #L3feac4.  if v6 != 0 then goto L3feaca;
  #L3feac8.  return v2 @kind object;
  #L3feaca.  call temp:= `u`(v3) @signature `Lo7/f;.u:(Ll7/c;)I` @kind static;
  #L3fead0.  v3:= temp;
  #L3fead2.  v3:= v3 ^< 3;
  #L3fead6.  v3:= v3 ^| 1;
  #L3feada.  call `w`(v2, v3) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3feae0.  v3:= v2.`o7.f.a` @type ^`java.io.OutputStream` @kind object;
  #L3feae4.  v6:= 8I;
  #L3feae8.  call temp:= `o`(v6) @signature `Lo7/f;.o:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L3feaee.  v6:= temp @kind object;
  #L3feaf0.  call temp:= `putDouble`(v6, v4) @signature `Ljava/nio/ByteBuffer;.putDouble:(D)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3feaf6.  v4:= temp @kind object;
  #L3feaf8.  call temp:= `array`(v4) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L3feafe.  v4:= temp @kind object;
  #L3feb00.  call `write`(v3, v4) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L3feb06.  return v2 @kind object;
}
procedure `l7.e` `f`(`o7.f` v1 @kind this, `l7.c` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lo7/f;.f:(Ll7/c;Ljava/lang/Object;)Ll7/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3feb90.  v0:= 1I;
  #L3feb92.  call temp:= `h`(v1, v2, v3, v0) @signature `Lo7/f;.h:(Ll7/c;Ljava/lang/Object;Z)Ll7/e;` @kind virtual;
  #L3feb98.  v2:= temp @kind object;
  #L3feb9a.  return v2 @kind object;
}
procedure `l7.e` `g`(`o7.f` v0 @kind this, `l7.c` v1 @kind object, `float` v2 , `boolean` v3 ) @signature `Lo7/f;.g:(Ll7/c;FZ)Ll7/e;` @AccessFlag  {
    temp;

  #L3feb18.  if v3 == 0 then goto L3feb28;
  #L3feb1c.  v3:= 0I;
  #L3feb1e.  v3:= fcmpl(v2, v3);
  #L3feb22.  if v3 != 0 then goto L3feb28;
  #L3feb26.  return v0 @kind object;
  #L3feb28.  call temp:= `u`(v1) @signature `Lo7/f;.u:(Ll7/c;)I` @kind static;
  #L3feb2e.  v1:= temp;
  #L3feb30.  v1:= v1 ^< 3;
  #L3feb34.  v1:= v1 ^| 5;
  #L3feb38.  call `w`(v0, v1) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3feb3e.  v1:= v0.`o7.f.a` @type ^`java.io.OutputStream` @kind object;
  #L3feb42.  v3:= 4I;
  #L3feb44.  call temp:= `o`(v3) @signature `Lo7/f;.o:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L3feb4a.  v3:= temp @kind object;
  #L3feb4c.  call temp:= `putFloat`(v3, v2) @signature `Ljava/nio/ByteBuffer;.putFloat:(F)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3feb52.  v2:= temp @kind object;
  #L3feb54.  call temp:= `array`(v2) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L3feb5a.  v2:= temp @kind object;
  #L3feb5c.  call `write`(v1, v2) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L3feb62.  return v0 @kind object;
}
procedure `l7.e` `h`(`o7.f` v2 @kind this, `l7.c` v3 @kind object, `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lo7/f;.h:(Ll7/c;Ljava/lang/Object;Z)Ll7/e;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3febac.  if v4 != 0 then goto L3febb2;
  #L3febb0.  return v2 @kind object;
  #L3febb2.  v0:= instanceof @variable v4 @type ^`java.lang.CharSequence` @kind boolean;
  #L3febb6.  if v0 == 0 then goto L3fec0e;
  #L3febba.  v4:= (`java.lang.CharSequence`) v4 @kind object;
  #L3febbe.  if v5 == 0 then goto L3febd0;
  #L3febc2.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3febc8.  v5:= temp;
  #L3febca.  if v5 != 0 then goto L3febd0;
  #L3febce.  return v2 @kind object;
  #L3febd0.  call temp:= `u`(v3) @signature `Lo7/f;.u:(Ll7/c;)I` @kind static;
  #L3febd6.  v3:= temp;
  #L3febd8.  v3:= v3 ^< 3;
  #L3febdc.  v3:= v3 ^| 2;
  #L3febe0.  call `w`(v2, v3) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3febe6.  call temp:= `toString`(v4) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L3febec.  v3:= temp @kind object;
  #L3febee.  v4:= `@@o7.f.f` @type ^`java.nio.charset.Charset` @kind object;
  #L3febf2.  call temp:= `getBytes`(v3, v4) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3febf8.  v3:= temp @kind object;
  #L3febfa.  v4:= length @variable v3;
  #L3febfc.  call `w`(v2, v4) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3fec02.  v4:= v2.`o7.f.a` @type ^`java.io.OutputStream` @kind object;
  #L3fec06.  call `write`(v4, v3) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L3fec0c.  return v2 @kind object;
  #L3fec0e.  v0:= instanceof @variable v4 @type ^`java.util.Collection` @kind boolean;
  #L3fec12.  v1:= 0I;
  #L3fec14.  if v0 == 0 then goto L3fec42;
  #L3fec18.  v4:= (`java.util.Collection`) v4 @kind object;
  #L3fec1c.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3fec22.  v4:= temp @kind object;
  #L3fec24.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3fec2a.  v5:= temp;
  #L3fec2c.  if v5 == 0 then goto L3fec40;
  #L3fec30.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3fec36.  v5:= temp @kind object;
  #L3fec38.  call temp:= `h`(v2, v3, v5, v1) @signature `Lo7/f;.h:(Ll7/c;Ljava/lang/Object;Z)Ll7/e;` @kind virtual;
  #L3fec3e.  goto L3fec24;
  #L3fec40.  return v2 @kind object;
  #L3fec42.  v0:= instanceof @variable v4 @type ^`java.util.Map` @kind boolean;
  #L3fec46.  if v0 == 0 then goto L3fec84;
  #L3fec4a.  v4:= (`java.util.Map`) v4 @kind object;
  #L3fec4e.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3fec54.  v4:= temp @kind object;
  #L3fec56.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3fec5c.  v4:= temp @kind object;
  #L3fec5e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3fec64.  v5:= temp;
  #L3fec66.  if v5 == 0 then goto L3fec82;
  #L3fec6a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3fec70.  v5:= temp @kind object;
  #L3fec72.  v5:= (`java.util.Map$Entry`) v5 @kind object;
  #L3fec76.  v0:= `@@o7.f.i` @type ^`l7.d` @kind object;
  #L3fec7a.  call temp:= `q`(v2, v0, v3, v5, v1) @signature `Lo7/f;.q:(Ll7/d;Ll7/c;Ljava/lang/Object;Z)Lo7/f;` @kind direct;
  #L3fec80.  goto L3fec5e;
  #L3fec82.  return v2 @kind object;
  #L3fec84.  v0:= instanceof @variable v4 @type ^`java.lang.Double` @kind boolean;
  #L3fec88.  if v0 == 0 then goto L3feca2;
  #L3fec8c.  v4:= (`java.lang.Double`) v4 @kind object;
  #L3fec90.  call temp:= `doubleValue`(v4) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3fec96.  v0:= temp @kind wide;
  #L3fec98.  call temp:= `e`(v2, v3, v0, v5) @signature `Lo7/f;.e:(Ll7/c;DZ)Ll7/e;` @kind virtual;
  #L3fec9e.  v3:= temp @kind object;
  #L3feca0.  return v3 @kind object;
  #L3feca2.  v0:= instanceof @variable v4 @type ^`java.lang.Float` @kind boolean;
  #L3feca6.  if v0 == 0 then goto L3fecc0;
  #L3fecaa.  v4:= (`java.lang.Float`) v4 @kind object;
  #L3fecae.  call temp:= `floatValue`(v4) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3fecb4.  v4:= temp;
  #L3fecb6.  call temp:= `g`(v2, v3, v4, v5) @signature `Lo7/f;.g:(Ll7/c;FZ)Ll7/e;` @kind virtual;
  #L3fecbc.  v3:= temp @kind object;
  #L3fecbe.  return v3 @kind object;
  #L3fecc0.  v0:= instanceof @variable v4 @type ^`java.lang.Number` @kind boolean;
  #L3fecc4.  if v0 == 0 then goto L3fecde;
  #L3fecc8.  v4:= (`java.lang.Number`) v4 @kind object;
  #L3feccc.  call temp:= `longValue`(v4) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L3fecd2.  v0:= temp @kind wide;
  #L3fecd4.  call temp:= `l`(v2, v3, v0, v5) @signature `Lo7/f;.l:(Ll7/c;JZ)Lo7/f;` @kind virtual;
  #L3fecda.  v3:= temp @kind object;
  #L3fecdc.  return v3 @kind object;
  #L3fecde.  v0:= instanceof @variable v4 @type ^`java.lang.Boolean` @kind boolean;
  #L3fece2.  if v0 == 0 then goto L3fecfc;
  #L3fece6.  v4:= (`java.lang.Boolean`) v4 @kind object;
  #L3fecea.  call temp:= `booleanValue`(v4) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3fecf0.  v4:= temp;
  #L3fecf2.  call temp:= `n`(v2, v3, v4, v5) @signature `Lo7/f;.n:(Ll7/c;ZZ)Lo7/f;` @kind virtual;
  #L3fecf8.  v3:= temp @kind object;
  #L3fecfa.  return v3 @kind object;
  #L3fecfc.  v0:= instanceof @variable v4 @type ^`byte`[] @kind boolean;
  #L3fed00.  if v0 == 0 then goto L3fed3e;
  #L3fed04.  v4:= (`byte`[]) v4 @kind object;
  #L3fed08.  if v5 == 0 then goto L3fed14;
  #L3fed0c.  v5:= length @variable v4;
  #L3fed0e.  if v5 != 0 then goto L3fed14;
  #L3fed12.  return v2 @kind object;
  #L3fed14.  call temp:= `u`(v3) @signature `Lo7/f;.u:(Ll7/c;)I` @kind static;
  #L3fed1a.  v3:= temp;
  #L3fed1c.  v3:= v3 ^< 3;
  #L3fed20.  v3:= v3 ^| 2;
  #L3fed24.  call `w`(v2, v3) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3fed2a.  v3:= length @variable v4;
  #L3fed2c.  call `w`(v2, v3) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3fed32.  v3:= v2.`o7.f.a` @type ^`java.io.OutputStream` @kind object;
  #L3fed36.  call `write`(v3, v4) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L3fed3c.  return v2 @kind object;
  #L3fed3e.  v0:= v2.`o7.f.b` @type ^`java.util.Map` @kind object;
  #L3fed42.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3fed48.  v1:= temp @kind object;
  #L3fed4a.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3fed50.  v0:= temp @kind object;
  #L3fed52.  v0:= (`l7.d`) v0 @kind object;
  #L3fed56.  if v0 == 0 then goto L3fed64;
  #L3fed5a.  call temp:= `q`(v2, v0, v3, v4, v5) @signature `Lo7/f;.q:(Ll7/d;Ll7/c;Ljava/lang/Object;Z)Lo7/f;` @kind direct;
  #L3fed60.  v3:= temp @kind object;
  #L3fed62.  return v3 @kind object;
  #L3fed64.  v0:= v2.`o7.f.c` @type ^`java.util.Map` @kind object;
  #L3fed68.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3fed6e.  v1:= temp @kind object;
  #L3fed70.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3fed76.  v0:= temp @kind object;
  #L3fed78.  v0:= (`l7.f`) v0 @kind object;
  #L3fed7c.  if v0 == 0 then goto L3fed8a;
  #L3fed80.  call temp:= `r`(v2, v0, v3, v4, v5) @signature `Lo7/f;.r:(Ll7/f;Ll7/c;Ljava/lang/Object;Z)Lo7/f;` @kind direct;
  #L3fed86.  v3:= temp @kind object;
  #L3fed88.  return v3 @kind object;
  #L3fed8a.  v0:= instanceof @variable v4 @type ^`o7.c` @kind boolean;
  #L3fed8e.  if v0 == 0 then goto L3feda8;
  #L3fed92.  v4:= (`o7.c`) v4 @kind object;
  #L3fed96.  call temp:= `f`(v4) @signature `Lo7/c;.f:()I` @kind interface;
  #L3fed9c.  v4:= temp;
  #L3fed9e.  call temp:= `i`(v2, v3, v4) @signature `Lo7/f;.i:(Ll7/c;I)Lo7/f;` @kind virtual;
  #L3feda4.  v3:= temp @kind object;
  #L3feda6.  return v3 @kind object;
  #L3feda8.  v0:= instanceof @variable v4 @type ^`java.lang.Enum` @kind boolean;
  #L3fedac.  if v0 == 0 then goto L3fedc6;
  #L3fedb0.  v4:= (`java.lang.Enum`) v4 @kind object;
  #L3fedb4.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3fedba.  v4:= temp;
  #L3fedbc.  call temp:= `i`(v2, v3, v4) @signature `Lo7/f;.i:(Ll7/c;I)Lo7/f;` @kind virtual;
  #L3fedc2.  v3:= temp @kind object;
  #L3fedc4.  return v3 @kind object;
  #L3fedc6.  v0:= v2.`o7.f.d` @type ^`l7.d` @kind object;
  #L3fedca.  call temp:= `q`(v2, v0, v3, v4, v5) @signature `Lo7/f;.q:(Ll7/d;Ll7/c;Ljava/lang/Object;Z)Lo7/f;` @kind direct;
  #L3fedd0.  v3:= temp @kind object;
  #L3fedd2.  return v3 @kind object;
}
procedure `o7.f` `i`(`o7.f` v1 @kind this, `l7.c` v2 @kind object, `int` v3 ) @signature `Lo7/f;.i:(Ll7/c;I)Lo7/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3feef8.  v0:= 1I;
  #L3feefa.  call temp:= `j`(v1, v2, v3, v0) @signature `Lo7/f;.j:(Ll7/c;IZ)Lo7/f;` @kind virtual;
  #L3fef00.  v2:= temp @kind object;
  #L3fef02.  return v2 @kind object;
}
procedure `o7.f` `j`(`o7.f` v2 @kind this, `l7.c` v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lo7/f;.j:(Ll7/c;IZ)Lo7/f;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3fef14.  if v5 == 0 then goto L3fef1e;
  #L3fef18.  if v4 != 0 then goto L3fef1e;
  #L3fef1c.  return v2 @kind object;
  #L3fef1e.  call temp:= `t`(v3) @signature `Lo7/f;.t:(Ll7/c;)Lo7/d;` @kind static;
  #L3fef24.  v3:= temp @kind object;
  #L3fef26.  v5:= `@@o7.f$a.a` @type ^`int`[] @kind object;
  #L3fef2a.  call temp:= `intEncoding`(v3) @signature `Lo7/d;.intEncoding:()Lo7/d$a;` @kind interface;
  #L3fef30.  v0:= temp @kind object;
  #L3fef32.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3fef38.  v0:= temp;
  #L3fef3a.  v5:= v5[v0];
  #L3fef3e.  v0:= 1I;
  #L3fef40.  v1:= 3I;
  #L3fef42.  if v5 == v0 then goto L3fefae;
  #L3fef46.  v0:= 2I;
  #L3fef48.  if v5 == v0 then goto L3fef8c;
  #L3fef4c.  if v5 == v1 then goto L3fef52;
  #L3fef50.  goto L3fefc4;
  #L3fef52.  call temp:= `tag`(v3) @signature `Lo7/d;.tag:()I` @kind interface;
  #L3fef58.  v3:= temp;
  #L3fef5a.  v3:= v3 ^< v1 @kind int;
  #L3fef5c.  v3:= v3 ^| 5;
  #L3fef60.  call `w`(v2, v3) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3fef66.  v3:= v2.`o7.f.a` @type ^`java.io.OutputStream` @kind object;
  #L3fef6a.  v5:= 4I;
  #L3fef6c.  call temp:= `o`(v5) @signature `Lo7/f;.o:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L3fef72.  v5:= temp @kind object;
  #L3fef74.  call temp:= `putInt`(v5, v4) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3fef7a.  v4:= temp @kind object;
  #L3fef7c.  call temp:= `array`(v4) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L3fef82.  v4:= temp @kind object;
  #L3fef84.  call `write`(v3, v4) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L3fef8a.  goto L3fefc4;
  #L3fef8c.  call temp:= `tag`(v3) @signature `Lo7/d;.tag:()I` @kind interface;
  #L3fef92.  v3:= temp;
  #L3fef94.  v3:= v3 ^< v1 @kind int;
  #L3fef96.  call `w`(v2, v3) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3fef9c.  v3:= v4 ^< 1;
  #L3fefa0.  v4:= v4 ^> 31;
  #L3fefa4.  v3:= v3 ^~ v4 @kind int;
  #L3fefa6.  call `w`(v2, v3) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3fefac.  goto L3fefc4;
  #L3fefae.  call temp:= `tag`(v3) @signature `Lo7/d;.tag:()I` @kind interface;
  #L3fefb4.  v3:= temp;
  #L3fefb6.  v3:= v3 ^< v1 @kind int;
  #L3fefb8.  call `w`(v2, v3) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3fefbe.  call `w`(v2, v4) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3fefc4.  return v2 @kind object;
}
procedure `o7.f` `k`(`o7.f` v1 @kind this, `l7.c` v2 @kind object, `long` v3 ) @signature `Lo7/f;.k:(Ll7/c;J)Lo7/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fefd8.  v0:= 1I;
  #L3fefda.  call temp:= `l`(v1, v2, v3, v0) @signature `Lo7/f;.l:(Ll7/c;JZ)Lo7/f;` @kind virtual;
  #L3fefe0.  v2:= temp @kind object;
  #L3fefe2.  return v2 @kind object;
}
procedure `o7.f` `l`(`o7.f` v3 @kind this, `l7.c` v4 @kind object, `long` v5 , `boolean` v7 ) @signature `Lo7/f;.l:(Ll7/c;JZ)Lo7/f;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3feff4.  if v7 == 0 then goto L3ff006;
  #L3feff8.  v0:= 0L;
  #L3feffc.  v7:= lcmp(v5, v0);
  #L3ff000.  if v7 != 0 then goto L3ff006;
  #L3ff004.  return v3 @kind object;
  #L3ff006.  call temp:= `t`(v4) @signature `Lo7/f;.t:(Ll7/c;)Lo7/d;` @kind static;
  #L3ff00c.  v4:= temp @kind object;
  #L3ff00e.  v7:= `@@o7.f$a.a` @type ^`int`[] @kind object;
  #L3ff012.  call temp:= `intEncoding`(v4) @signature `Lo7/d;.intEncoding:()Lo7/d$a;` @kind interface;
  #L3ff018.  v0:= temp @kind object;
  #L3ff01a.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3ff020.  v0:= temp;
  #L3ff022.  v7:= v7[v0];
  #L3ff026.  v0:= 1I;
  #L3ff028.  v1:= 3I;
  #L3ff02a.  if v7 == v0 then goto L3ff09a;
  #L3ff02e.  v2:= 2I;
  #L3ff030.  if v7 == v2 then goto L3ff074;
  #L3ff034.  if v7 == v1 then goto L3ff03a;
  #L3ff038.  goto L3ff0b0;
  #L3ff03a.  call temp:= `tag`(v4) @signature `Lo7/d;.tag:()I` @kind interface;
  #L3ff040.  v4:= temp;
  #L3ff042.  v4:= v4 ^< v1 @kind int;
  #L3ff044.  v4:= v4 ^| v0 @kind int;
  #L3ff046.  call `w`(v3, v4) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3ff04c.  v4:= v3.`o7.f.a` @type ^`java.io.OutputStream` @kind object;
  #L3ff050.  v7:= 8I;
  #L3ff054.  call temp:= `o`(v7) @signature `Lo7/f;.o:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L3ff05a.  v7:= temp @kind object;
  #L3ff05c.  call temp:= `putLong`(v7, v5) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3ff062.  v5:= temp @kind object;
  #L3ff064.  call temp:= `array`(v5) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L3ff06a.  v5:= temp @kind object;
  #L3ff06c.  call `write`(v4, v5) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L3ff072.  goto L3ff0b0;
  #L3ff074.  call temp:= `tag`(v4) @signature `Lo7/d;.tag:()I` @kind interface;
  #L3ff07a.  v4:= temp;
  #L3ff07c.  v4:= v4 ^< v1 @kind int;
  #L3ff07e.  call `w`(v3, v4) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3ff084.  v0:= v5 ^< v0 @kind long;
  #L3ff088.  v4:= 63I;
  #L3ff08c.  v4:= v5 ^> v4 @kind long;
  #L3ff090.  v4:= v4 ^~ v0 @kind long;
  #L3ff092.  call `x`(v3, v4) @signature `Lo7/f;.x:(J)V` @kind direct;
  #L3ff098.  goto L3ff0b0;
  #L3ff09a.  call temp:= `tag`(v4) @signature `Lo7/d;.tag:()I` @kind interface;
  #L3ff0a0.  v4:= temp;
  #L3ff0a2.  v4:= v4 ^< v1 @kind int;
  #L3ff0a4.  call `w`(v3, v4) @signature `Lo7/f;.w:(I)V` @kind direct;
  #L3ff0aa.  call `x`(v3, v5) @signature `Lo7/f;.x:(J)V` @kind direct;
  #L3ff0b0.  return v3 @kind object;
}
procedure `o7.f` `m`(`o7.f` v1 @kind this, `l7.c` v2 @kind object, `boolean` v3 ) @signature `Lo7/f;.m:(Ll7/c;Z)Lo7/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3feec0.  v0:= 1I;
  #L3feec2.  call temp:= `n`(v1, v2, v3, v0) @signature `Lo7/f;.n:(Ll7/c;ZZ)Lo7/f;` @kind virtual;
  #L3feec8.  v2:= temp @kind object;
  #L3feeca.  return v2 @kind object;
}
procedure `o7.f` `n`(`o7.f` v0 @kind this, `l7.c` v1 @kind object, `boolean` v2 , `boolean` v3 ) @signature `Lo7/f;.n:(Ll7/c;ZZ)Lo7/f;` @AccessFlag  {
    temp;

  #L3feedc.  call temp:= `j`(v0, v1, v2, v3) @signature `Lo7/f;.j:(Ll7/c;IZ)Lo7/f;` @kind virtual;
  #L3feee2.  v1:= temp @kind object;
  #L3feee4.  return v1 @kind object;
}
procedure `o7.f` `s`(`o7.f` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lo7/f;.s:(Ljava/lang/Object;)Lo7/f;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3ff13c.  if v4 != 0 then goto L3ff142;
  #L3ff140.  return v3 @kind object;
  #L3ff142.  v0:= v3.`o7.f.b` @type ^`java.util.Map` @kind object;
  #L3ff146.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3ff14c.  v1:= temp @kind object;
  #L3ff14e.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3ff154.  v0:= temp @kind object;
  #L3ff156.  v0:= (`l7.d`) v0 @kind object;
  #L3ff15a.  if v0 == 0 then goto L3ff166;
  #L3ff15e.  call `a`(v0, v4, v3) @signature `Ll7/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L3ff164.  return v3 @kind object;
  #L3ff166.  v0:= new `l7.b`;
  #L3ff16a.  v1:= new `java.lang.StringBuilder`;
  #L3ff16e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ff174.  v2:= "No encoder for " @kind object;
  #L3ff178.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff17e.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3ff184.  v4:= temp @kind object;
  #L3ff186.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff18c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ff192.  v4:= temp @kind object;
  #L3ff194.  call `<init>`(v0, v4) @signature `Ll7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ff19a.  throw v0;
}
