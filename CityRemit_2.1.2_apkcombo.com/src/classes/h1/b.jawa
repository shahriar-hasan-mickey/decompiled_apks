record `h1.b` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `h1.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h1.b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lh1/b;.<init>:(Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3377b8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3377be.  v0:= "name is null" @kind object;
  #L3377c2.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3377c8.  v1.`h1.b.a` @type ^`java.lang.String` := v2 @kind object;
  #L3377cc.  return @kind void;
}
procedure `h1.b` `b`(`java.lang.String` v1 @kind object) @signature `Lh1/b;.b:(Ljava/lang/String;)Lh1/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L337718.  v0:= new `h1.b`;
  #L33771c.  call `<init>`(v0, v1) @signature `Lh1/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L337722.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`h1.b` v1 @kind this) @signature `Lh1/b;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33775c.  v0:= v1.`h1.b.a` @type ^`java.lang.String` @kind object;
  #L337760.  return v0 @kind object;
}
procedure `boolean` `equals`(`h1.b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lh1/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3376dc.  if v1 != v2 then goto L3376e4;
  #L3376e0.  v2:= 1I;
  #L3376e2.  return v2;
  #L3376e4.  v0:= instanceof @variable v2 @type ^`h1.b` @kind boolean;
  #L3376e8.  if v0 != 0 then goto L3376f0;
  #L3376ec.  v2:= 0I;
  #L3376ee.  return v2;
  #L3376f0.  v0:= v1.`h1.b.a` @type ^`java.lang.String` @kind object;
  #L3376f4.  v2:= (`h1.b`) v2 @kind object;
  #L3376f8.  v2:= v2.`h1.b.a` @type ^`java.lang.String` @kind object;
  #L3376fc.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L337702.  v2:= temp;
  #L337704.  return v2;
}
procedure `int` `hashCode`(`h1.b` v2 @kind this) @signature `Lh1/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L337734.  v0:= v2.`h1.b.a` @type ^`java.lang.String` @kind object;
  #L337738.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L33773e.  v0:= temp;
  #L337740.  v1:= 1000003I;
  #L337746.  v0:= v0 ^~ v1 @kind int;
  #L337748.  return v0;
}
procedure `java.lang.String` `toString`(`h1.b` v2 @kind this) @signature `Lh1/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L337774.  v0:= new `java.lang.StringBuilder`;
  #L337778.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33777e.  v1:= "Encoding{name=\"" @kind object;
  #L337782.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337788.  v1:= v2.`h1.b.a` @type ^`java.lang.String` @kind object;
  #L33778c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337792.  v1:= "\"}" @kind object;
  #L337796.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33779c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3377a2.  v0:= temp @kind object;
  #L3377a4.  return v0 @kind object;
}
