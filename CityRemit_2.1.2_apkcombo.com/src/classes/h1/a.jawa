record `h1.a` @kind class @AccessFlag FINAL extends `h1.c` @kind class {
  `java.lang.Integer` `h1.a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `h1.a.b` @AccessFlag PRIVATE_FINAL;
  `h1.d` `h1.a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h1.a` v0 @kind this, `java.lang.Integer` v1 @kind object, `java.lang.Object` v2 @kind object, `h1.d` v3 @kind object) @signature `Lh1/a;.<init>:(Ljava/lang/Integer;Ljava/lang/Object;Lh1/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3376a4.  call `<init>`(v0) @signature `Lh1/c;.<init>:()V` @kind direct;
  #L3376aa.  v0.`h1.a.a` @type ^`java.lang.Integer` := v1 @kind object;
  #L3376ae.  v1:= "Null payload" @kind object;
  #L3376b2.  call temp:= `requireNonNull`(v2, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3376b8.  v0.`h1.a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L3376bc.  v1:= "Null priority" @kind object;
  #L3376c0.  call temp:= `requireNonNull`(v3, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3376c6.  v0.`h1.a.c` @type ^`h1.d` := v3 @kind object;
  #L3376ca.  return @kind void;
}
procedure `java.lang.Integer` `a`(`h1.a` v1 @kind this) @signature `Lh1/a;.a:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L337608.  v0:= v1.`h1.a.a` @type ^`java.lang.Integer` @kind object;
  #L33760c.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`h1.a` v1 @kind this) @signature `Lh1/a;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L337620.  v0:= v1.`h1.a.b` @type ^`java.lang.Object` @kind object;
  #L337624.  return v0 @kind object;
}
procedure `h1.d` `c`(`h1.a` v1 @kind this) @signature `Lh1/a;.c:()Lh1/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33759c.  v0:= v1.`h1.a.c` @type ^`h1.d` @kind object;
  #L3375a0.  return v0 @kind object;
}
procedure `boolean` `equals`(`h1.a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lh1/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L337514.  v0:= 1I;
  #L337516.  if v5 != v4 then goto L33751c;
  #L33751a.  return v0;
  #L33751c.  v1:= instanceof @variable v5 @type ^`h1.c` @kind boolean;
  #L337520.  v2:= 0I;
  #L337522.  if v1 == 0 then goto L33758a;
  #L337526.  v5:= (`h1.c`) v5 @kind object;
  #L33752a.  v1:= v4.`h1.a.a` @type ^`java.lang.Integer` @kind object;
  #L33752e.  if v1 != 0 then goto L337540;
  #L337532.  call temp:= `a`(v5) @signature `Lh1/c;.a:()Ljava/lang/Integer;` @kind virtual;
  #L337538.  v1:= temp @kind object;
  #L33753a.  if v1 != 0 then goto L337586;
  #L33753e.  goto L337554;
  #L337540.  call temp:= `a`(v5) @signature `Lh1/c;.a:()Ljava/lang/Integer;` @kind virtual;
  #L337546.  v3:= temp @kind object;
  #L337548.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33754e.  v1:= temp;
  #L337550.  if v1 == 0 then goto L337586;
  #L337554.  v1:= v4.`h1.a.b` @type ^`java.lang.Object` @kind object;
  #L337558.  call temp:= `b`(v5) @signature `Lh1/c;.b:()Ljava/lang/Object;` @kind virtual;
  #L33755e.  v3:= temp @kind object;
  #L337560.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L337566.  v1:= temp;
  #L337568.  if v1 == 0 then goto L337586;
  #L33756c.  v1:= v4.`h1.a.c` @type ^`h1.d` @kind object;
  #L337570.  call temp:= `c`(v5) @signature `Lh1/c;.c:()Lh1/d;` @kind virtual;
  #L337576.  v5:= temp @kind object;
  #L337578.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33757e.  v5:= temp;
  #L337580.  if v5 == 0 then goto L337586;
  #L337584.  goto L337588;
  #L337586.  v0:= 0I;
  #L337588.  return v0;
  #L33758a.  return v2;
}
procedure `int` `hashCode`(`h1.a` v3 @kind this) @signature `Lh1/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3375b4.  v0:= v3.`h1.a.a` @type ^`java.lang.Integer` @kind object;
  #L3375b8.  if v0 != 0 then goto L3375c0;
  #L3375bc.  v0:= 0I;
  #L3375be.  goto L3375c8;
  #L3375c0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Integer;.hashCode:()I` @kind virtual;
  #L3375c6.  v0:= temp;
  #L3375c8.  v1:= 1000003I;
  #L3375ce.  v0:= v0 ^~ v1 @kind int;
  #L3375d0.  v0:= v0 * v1 @kind int;
  #L3375d4.  v2:= v3.`h1.a.b` @type ^`java.lang.Object` @kind object;
  #L3375d8.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3375de.  v2:= temp;
  #L3375e0.  v0:= v0 ^~ v2 @kind int;
  #L3375e2.  v0:= v0 * v1 @kind int;
  #L3375e6.  v1:= v3.`h1.a.c` @type ^`h1.d` @kind object;
  #L3375ea.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L3375f0.  v1:= temp;
  #L3375f2.  v0:= v0 ^~ v1 @kind int;
  #L3375f4.  return v0;
}
procedure `java.lang.String` `toString`(`h1.a` v2 @kind this) @signature `Lh1/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L337638.  v0:= new `java.lang.StringBuilder`;
  #L33763c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L337642.  v1:= "Event{code=" @kind object;
  #L337646.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33764c.  v1:= v2.`h1.a.a` @type ^`java.lang.Integer` @kind object;
  #L337650.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337656.  v1:= ", payload=" @kind object;
  #L33765a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337660.  v1:= v2.`h1.a.b` @type ^`java.lang.Object` @kind object;
  #L337664.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33766a.  v1:= ", priority=" @kind object;
  #L33766e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337674.  v1:= v2.`h1.a.c` @type ^`h1.d` @kind object;
  #L337678.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33767e.  v1:= "}" @kind object;
  #L337682.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337688.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33768e.  v0:= temp @kind object;
  #L337690.  return v0 @kind object;
}
