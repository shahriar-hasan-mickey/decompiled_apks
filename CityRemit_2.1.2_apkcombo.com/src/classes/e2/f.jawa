record `e2.f` @kind class @AccessFlag FINAL extends `e2.e` @kind class {
  `s3.z` `e2.f.b` @AccessFlag PRIVATE_FINAL;
  `s3.z` `e2.f.c` @AccessFlag PRIVATE_FINAL;
  `int` `e2.f.d` @AccessFlag PRIVATE;
  `boolean` `e2.f.e` @AccessFlag PRIVATE;
  `boolean` `e2.f.f` @AccessFlag PRIVATE;
  `int` `e2.f.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e2.f` v1 @kind this, `a2.d0` v2 @kind object) @signature `Le2/f;.<init>:(La2/d0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2fdb24.  call `<init>`(v1, v2) @signature `Le2/e;.<init>:(La2/d0;)V` @kind direct;
  #L2fdb2a.  v2:= new `s3.z`;
  #L2fdb2e.  v0:= `@@s3.v.a` @type ^`byte`[] @kind object;
  #L2fdb32.  call `<init>`(v2, v0) @signature `Ls3/z;.<init>:([B)V` @kind direct;
  #L2fdb38.  v1.`e2.f.b` @type ^`s3.z` := v2 @kind object;
  #L2fdb3c.  v2:= new `s3.z`;
  #L2fdb40.  v0:= 4I;
  #L2fdb42.  call `<init>`(v2, v0) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L2fdb48.  v1.`e2.f.c` @type ^`s3.z` := v2 @kind object;
  #L2fdb4c.  return @kind void;
}
procedure `boolean` `b`(`e2.f` v3 @kind this, `s3.z` v4 @kind object) @signature `Le2/f;.b:(Ls3/z;)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L2fd90c.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L2fd912.  v4:= temp;
  #L2fd914.  v0:= v4 ^> 4;
  #L2fd918.  v0:= v0 ^& 15;
  #L2fd91c.  v4:= v4 ^& 15;
  #L2fd920.  v1:= 7I;
  #L2fd922.  if v4 != v1 then goto L2fd938;
  #L2fd926.  v3.`e2.f.g` @type ^`int` := v0;
  #L2fd92a.  v4:= 5I;
  #L2fd92c.  if v0 == v4 then goto L2fd934;
  #L2fd930.  v4:= 1I;
  #L2fd932.  goto L2fd936;
  #L2fd934.  v4:= 0I;
  #L2fd936.  return v4;
  #L2fd938.  v0:= new `e2.e$a`;
  #L2fd93c.  v1:= new `java.lang.StringBuilder`;
  #L2fd940.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fd946.  v2:= "Video format not supported: " @kind object;
  #L2fd94a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd950.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fd956.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fd95c.  v4:= temp @kind object;
  #L2fd95e.  call `<init>`(v0, v4) @signature `Le2/e$a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fd964.  throw v0;
}
procedure `boolean` `c`(`e2.f` v10 @kind this, `s3.z` v11 @kind object, `long` v12 ) @signature `Le2/f;.c:(Ls3/z;J)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2fd978.  call temp:= `C`(v11) @signature `Ls3/z;.C:()I` @kind virtual;
  #L2fd97e.  v0:= temp;
  #L2fd980.  call temp:= `n`(v11) @signature `Ls3/z;.n:()I` @kind virtual;
  #L2fd986.  v1:= temp;
  #L2fd988.  v1:= (`long`) v1 @kind i2l;
  #L2fd98a.  v3:= 1000L;
  #L2fd98e.  v1:= v1 * v3 @kind long;
  #L2fd992.  v4:= v12 + v1 @kind long;
  #L2fd996.  v12:= 1I;
  #L2fd998.  v13:= 0I;
  #L2fd99a.  if v0 != 0 then goto L2fda4c;
  #L2fd99e.  v1:= v10.`e2.f.e` @type ^`boolean` @kind boolean;
  #L2fd9a2.  if v1 != 0 then goto L2fda4c;
  #L2fd9a6.  v0:= new `s3.z`;
  #L2fd9aa.  call temp:= `a`(v11) @signature `Ls3/z;.a:()I` @kind virtual;
  #L2fd9b0.  v1:= temp;
  #L2fd9b2.  v1:= new `byte`[v1];
  #L2fd9b6.  call `<init>`(v0, v1) @signature `Ls3/z;.<init>:([B)V` @kind direct;
  #L2fd9bc.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L2fd9c2.  v1:= temp @kind object;
  #L2fd9c4.  call temp:= `a`(v11) @signature `Ls3/z;.a:()I` @kind virtual;
  #L2fd9ca.  v2:= temp;
  #L2fd9cc.  call `j`(v11, v1, v13, v2) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L2fd9d2.  call temp:= `b`(v0) @signature `Lt3/a;.b:(Ls3/z;)Lt3/a;` @kind static;
  #L2fd9d8.  v11:= temp @kind object;
  #L2fd9da.  v0:= v11.`t3.a.b` @type ^`int`;
  #L2fd9de.  v10.`e2.f.d` @type ^`int` := v0;
  #L2fd9e2.  v0:= new `v1.j1$b`;
  #L2fd9e6.  call `<init>`(v0) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L2fd9ec.  v1:= "video/avc" @kind object;
  #L2fd9f0.  call temp:= `e0`(v0, v1) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L2fd9f6.  v0:= temp @kind object;
  #L2fd9f8.  v1:= v11.`t3.a.f` @type ^`java.lang.String` @kind object;
  #L2fd9fc.  call temp:= `I`(v0, v1) @signature `Lv1/j1$b;.I:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L2fda02.  v0:= temp @kind object;
  #L2fda04.  v1:= v11.`t3.a.c` @type ^`int`;
  #L2fda08.  call temp:= `j0`(v0, v1) @signature `Lv1/j1$b;.j0:(I)Lv1/j1$b;` @kind virtual;
  #L2fda0e.  v0:= temp @kind object;
  #L2fda10.  v1:= v11.`t3.a.d` @type ^`int`;
  #L2fda14.  call temp:= `Q`(v0, v1) @signature `Lv1/j1$b;.Q:(I)Lv1/j1$b;` @kind virtual;
  #L2fda1a.  v0:= temp @kind object;
  #L2fda1c.  v1:= v11.`t3.a.e` @type ^`float`;
  #L2fda20.  call temp:= `a0`(v0, v1) @signature `Lv1/j1$b;.a0:(F)Lv1/j1$b;` @kind virtual;
  #L2fda26.  v0:= temp @kind object;
  #L2fda28.  v11:= v11.`t3.a.a` @type ^`java.util.List` @kind object;
  #L2fda2c.  call temp:= `T`(v0, v11) @signature `Lv1/j1$b;.T:(Ljava/util/List;)Lv1/j1$b;` @kind virtual;
  #L2fda32.  v11:= temp @kind object;
  #L2fda34.  call temp:= `E`(v11) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L2fda3a.  v11:= temp @kind object;
  #L2fda3c.  v0:= v10.`e2.e.a` @type ^`a2.d0` @kind object;
  #L2fda40.  call `b`(v0, v11) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L2fda46.  v10.`e2.f.e` @type ^`boolean` := v12 @kind boolean;
  #L2fda4a.  return v13;
  #L2fda4c.  if v0 != v12 then goto L2fdb10;
  #L2fda50.  v0:= v10.`e2.f.e` @type ^`boolean` @kind boolean;
  #L2fda54.  if v0 == 0 then goto L2fdb10;
  #L2fda58.  v0:= v10.`e2.f.g` @type ^`int`;
  #L2fda5c.  if v0 != v12 then goto L2fda64;
  #L2fda60.  v6:= 1I;
  #L2fda62.  goto L2fda66;
  #L2fda64.  v6:= 0I;
  #L2fda66.  v0:= v10.`e2.f.f` @type ^`boolean` @kind boolean;
  #L2fda6a.  if v0 != 0 then goto L2fda74;
  #L2fda6e.  if v6 != 0 then goto L2fda74;
  #L2fda72.  return v13;
  #L2fda74.  v0:= v10.`e2.f.c` @type ^`s3.z` @kind object;
  #L2fda78.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L2fda7e.  v0:= temp @kind object;
  #L2fda80.  v0[v13]:= v13 @kind byte;
  #L2fda84.  v0[v12]:= v13 @kind byte;
  #L2fda88.  v1:= 2I;
  #L2fda8a.  v0[v1]:= v13 @kind byte;
  #L2fda8e.  v0:= v10.`e2.f.d` @type ^`int`;
  #L2fda92.  v1:= 4I;
  #L2fda94.  v0:= v0 - 4;
  #L2fda98.  v7:= 0I;
  #L2fda9a.  call temp:= `a`(v11) @signature `Ls3/z;.a:()I` @kind virtual;
  #L2fdaa0.  v2:= temp;
  #L2fdaa2.  if v2 <= 0 then goto L2fdafc;
  #L2fdaa6.  v2:= v10.`e2.f.c` @type ^`s3.z` @kind object;
  #L2fdaaa.  call temp:= `d`(v2) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L2fdab0.  v2:= temp @kind object;
  #L2fdab2.  v3:= v10.`e2.f.d` @type ^`int`;
  #L2fdab6.  call `j`(v11, v2, v0, v3) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L2fdabc.  v2:= v10.`e2.f.c` @type ^`s3.z` @kind object;
  #L2fdac0.  call `O`(v2, v13) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L2fdac6.  v2:= v10.`e2.f.c` @type ^`s3.z` @kind object;
  #L2fdaca.  call temp:= `G`(v2) @signature `Ls3/z;.G:()I` @kind virtual;
  #L2fdad0.  v2:= temp;
  #L2fdad2.  v3:= v10.`e2.f.b` @type ^`s3.z` @kind object;
  #L2fdad6.  call `O`(v3, v13) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L2fdadc.  v3:= v10.`e2.e.a` @type ^`a2.d0` @kind object;
  #L2fdae0.  v8:= v10.`e2.f.b` @type ^`s3.z` @kind object;
  #L2fdae4.  call `c`(v3, v8, v1) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L2fdaea.  v7:= v7 + 4;
  #L2fdaee.  v3:= v10.`e2.e.a` @type ^`a2.d0` @kind object;
  #L2fdaf2.  call `c`(v3, v11, v2) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L2fdaf8.  v7:= v7 + v2 @kind int;
  #L2fdafa.  goto L2fda9a;
  #L2fdafc.  v3:= v10.`e2.e.a` @type ^`a2.d0` @kind object;
  #L2fdb00.  v8:= 0I;
  #L2fdb02.  v9:= 0I;
  #L2fdb04.  call `f`(v3, v4, v6, v7, v8, v9) @signature `La2/d0;.f:(JIIILa2/d0$a;)V` @kind interface;
  #L2fdb0a.  v10.`e2.f.f` @type ^`boolean` := v12 @kind boolean;
  #L2fdb0e.  return v12;
  #L2fdb10.  return v13;
}
