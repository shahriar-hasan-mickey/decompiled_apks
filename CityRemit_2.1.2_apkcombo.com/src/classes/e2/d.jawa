record `e2.d` @kind class @AccessFlag FINAL extends `e2.e` @kind class {
  `long` `e2.d.b` @AccessFlag PRIVATE;
  `long`[] `e2.d.c` @AccessFlag PRIVATE;
  `long`[] `e2.d.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e2.d` v2 @kind this) @signature `Le2/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2fd85c.  v0:= new `a2.k`;
  #L2fd860.  call `<init>`(v0) @signature `La2/k;.<init>:()V` @kind direct;
  #L2fd866.  call `<init>`(v2, v0) @signature `Le2/e;.<init>:(La2/d0;)V` @kind direct;
  #L2fd86c.  v0:= -4.9E-324D;
  #L2fd876.  v2.`e2.d.b` @type ^`long` := v0 @kind wide;
  #L2fd87a.  v0:= 0I;
  #L2fd87c.  v1:= new `long`[v0];
  #L2fd880.  v2.`e2.d.c` @type ^`long`[] := v1 @kind object;
  #L2fd884.  v0:= new `long`[v0];
  #L2fd888.  v2.`e2.d.d` @type ^`long`[] := v0 @kind object;
  #L2fd88c.  return @kind void;
}
procedure `java.lang.Boolean` `g`(`s3.z` v1 @kind object) @signature `Le2/d;.g:(Ls3/z;)Ljava/lang/Boolean;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2fd5d8.  call temp:= `C`(v1) @signature `Ls3/z;.C:()I` @kind virtual;
  #L2fd5de.  v1:= temp;
  #L2fd5e0.  v0:= 1I;
  #L2fd5e2.  if v1 != v0 then goto L2fd5e8;
  #L2fd5e6.  goto L2fd5ea;
  #L2fd5e8.  v0:= 0I;
  #L2fd5ea.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2fd5f0.  v1:= temp @kind object;
  #L2fd5f2.  return v1 @kind object;
}
procedure `java.lang.Object` `h`(`s3.z` v1 @kind object, `int` v2 ) @signature `Le2/d;.h:(Ls3/z;I)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2fd630.  if v2 == 0 then goto L2fd69e;
  #L2fd634.  v0:= 1I;
  #L2fd636.  if v2 == v0 then goto L2fd694;
  #L2fd63a.  v0:= 2I;
  #L2fd63c.  if v2 == v0 then goto L2fd68a;
  #L2fd640.  v0:= 3I;
  #L2fd642.  if v2 == v0 then goto L2fd680;
  #L2fd646.  v0:= 8I;
  #L2fd64a.  if v2 == v0 then goto L2fd676;
  #L2fd64e.  v0:= 10I;
  #L2fd652.  if v2 == v0 then goto L2fd66c;
  #L2fd656.  v0:= 11I;
  #L2fd65a.  if v2 == v0 then goto L2fd662;
  #L2fd65e.  v1:= 0I;
  #L2fd660.  return v1 @kind object;
  #L2fd662.  call temp:= `i`(v1) @signature `Le2/d;.i:(Ls3/z;)Ljava/util/Date;` @kind static;
  #L2fd668.  v1:= temp @kind object;
  #L2fd66a.  return v1 @kind object;
  #L2fd66c.  call temp:= `m`(v1) @signature `Le2/d;.m:(Ls3/z;)Ljava/util/ArrayList;` @kind static;
  #L2fd672.  v1:= temp @kind object;
  #L2fd674.  return v1 @kind object;
  #L2fd676.  call temp:= `k`(v1) @signature `Le2/d;.k:(Ls3/z;)Ljava/util/HashMap;` @kind static;
  #L2fd67c.  v1:= temp @kind object;
  #L2fd67e.  return v1 @kind object;
  #L2fd680.  call temp:= `l`(v1) @signature `Le2/d;.l:(Ls3/z;)Ljava/util/HashMap;` @kind static;
  #L2fd686.  v1:= temp @kind object;
  #L2fd688.  return v1 @kind object;
  #L2fd68a.  call temp:= `n`(v1) @signature `Le2/d;.n:(Ls3/z;)Ljava/lang/String;` @kind static;
  #L2fd690.  v1:= temp @kind object;
  #L2fd692.  return v1 @kind object;
  #L2fd694.  call temp:= `g`(v1) @signature `Le2/d;.g:(Ls3/z;)Ljava/lang/Boolean;` @kind static;
  #L2fd69a.  v1:= temp @kind object;
  #L2fd69c.  return v1 @kind object;
  #L2fd69e.  call temp:= `j`(v1) @signature `Le2/d;.j:(Ls3/z;)Ljava/lang/Double;` @kind static;
  #L2fd6a4.  v1:= temp @kind object;
  #L2fd6a6.  return v1 @kind object;
}
procedure `java.util.Date` `i`(`s3.z` v3 @kind object) @signature `Le2/d;.i:(Ls3/z;)Ljava/util/Date;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2fd740.  v0:= new `java.util.Date`;
  #L2fd744.  call temp:= `j`(v3) @signature `Le2/d;.j:(Ls3/z;)Ljava/lang/Double;` @kind static;
  #L2fd74a.  v1:= temp @kind object;
  #L2fd74c.  call temp:= `doubleValue`(v1) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L2fd752.  v1:= temp @kind wide;
  #L2fd754.  v1:= (`long`) v1 @kind d2l;
  #L2fd756.  call `<init>`(v0, v1) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L2fd75c.  v1:= 2I;
  #L2fd75e.  call `P`(v3, v1) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L2fd764.  return v0 @kind object;
}
procedure `java.lang.Double` `j`(`s3.z` v2 @kind object) @signature `Le2/d;.j:(Ls3/z;)Ljava/lang/Double;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2fd604.  call temp:= `v`(v2) @signature `Ls3/z;.v:()J` @kind virtual;
  #L2fd60a.  v0:= temp @kind wide;
  #L2fd60c.  call temp:= `longBitsToDouble`(v0) @signature `Ljava/lang/Double;.longBitsToDouble:(J)D` @kind static;
  #L2fd612.  v0:= temp @kind wide;
  #L2fd614.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L2fd61a.  v2:= temp @kind object;
  #L2fd61c.  return v2 @kind object;
}
procedure `java.util.HashMap` `k`(`s3.z` v5 @kind object) @signature `Le2/d;.k:(Ls3/z;)Ljava/util/HashMap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2fd778.  call temp:= `G`(v5) @signature `Ls3/z;.G:()I` @kind virtual;
  #L2fd77e.  v0:= temp;
  #L2fd780.  v1:= new `java.util.HashMap`;
  #L2fd784.  call `<init>`(v1, v0) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L2fd78a.  v2:= 0I;
  #L2fd78c.  if v2 >= v0 then goto L2fd7b8;
  #L2fd790.  call temp:= `n`(v5) @signature `Le2/d;.n:(Ls3/z;)Ljava/lang/String;` @kind static;
  #L2fd796.  v3:= temp @kind object;
  #L2fd798.  call temp:= `o`(v5) @signature `Le2/d;.o:(Ls3/z;)I` @kind static;
  #L2fd79e.  v4:= temp;
  #L2fd7a0.  call temp:= `h`(v5, v4) @signature `Le2/d;.h:(Ls3/z;I)Ljava/lang/Object;` @kind static;
  #L2fd7a6.  v4:= temp @kind object;
  #L2fd7a8.  if v4 == 0 then goto L2fd7b2;
  #L2fd7ac.  call temp:= `put`(v1, v3, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2fd7b2.  v2:= v2 + 1;
  #L2fd7b6.  goto L2fd78c;
  #L2fd7b8.  return v1 @kind object;
}
procedure `java.util.HashMap` `l`(`s3.z` v4 @kind object) @signature `Le2/d;.l:(Ls3/z;)Ljava/util/HashMap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2fd7cc.  v0:= new `java.util.HashMap`;
  #L2fd7d0.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2fd7d6.  call temp:= `n`(v4) @signature `Le2/d;.n:(Ls3/z;)Ljava/lang/String;` @kind static;
  #L2fd7dc.  v1:= temp @kind object;
  #L2fd7de.  call temp:= `o`(v4) @signature `Le2/d;.o:(Ls3/z;)I` @kind static;
  #L2fd7e4.  v2:= temp;
  #L2fd7e6.  v3:= 9I;
  #L2fd7ea.  if v2 != v3 then goto L2fd7f0;
  #L2fd7ee.  return v0 @kind object;
  #L2fd7f0.  call temp:= `h`(v4, v2) @signature `Le2/d;.h:(Ls3/z;I)Ljava/lang/Object;` @kind static;
  #L2fd7f6.  v2:= temp @kind object;
  #L2fd7f8.  if v2 == 0 then goto L2fd7d6;
  #L2fd7fc.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2fd802.  goto L2fd7d6;
}
procedure `java.util.ArrayList` `m`(`s3.z` v4 @kind object) @signature `Le2/d;.m:(Ls3/z;)Ljava/util/ArrayList;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2fd6f4.  call temp:= `G`(v4) @signature `Ls3/z;.G:()I` @kind virtual;
  #L2fd6fa.  v0:= temp;
  #L2fd6fc.  v1:= new `java.util.ArrayList`;
  #L2fd700.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2fd706.  v2:= 0I;
  #L2fd708.  if v2 >= v0 then goto L2fd72c;
  #L2fd70c.  call temp:= `o`(v4) @signature `Le2/d;.o:(Ls3/z;)I` @kind static;
  #L2fd712.  v3:= temp;
  #L2fd714.  call temp:= `h`(v4, v3) @signature `Le2/d;.h:(Ls3/z;I)Ljava/lang/Object;` @kind static;
  #L2fd71a.  v3:= temp @kind object;
  #L2fd71c.  if v3 == 0 then goto L2fd726;
  #L2fd720.  call temp:= `add`(v1, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2fd726.  v2:= v2 + 1;
  #L2fd72a.  goto L2fd708;
  #L2fd72c.  return v1 @kind object;
}
procedure `java.lang.String` `n`(`s3.z` v3 @kind object) @signature `Le2/d;.n:(Ls3/z;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2fd6b8.  call temp:= `I`(v3) @signature `Ls3/z;.I:()I` @kind virtual;
  #L2fd6be.  v0:= temp;
  #L2fd6c0.  call temp:= `e`(v3) @signature `Ls3/z;.e:()I` @kind virtual;
  #L2fd6c6.  v1:= temp;
  #L2fd6c8.  call `P`(v3, v0) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L2fd6ce.  v2:= new `java.lang.String`;
  #L2fd6d2.  call temp:= `d`(v3) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L2fd6d8.  v3:= temp @kind object;
  #L2fd6da.  call `<init>`(v2, v3, v1, v0) @signature `Ljava/lang/String;.<init>:([BII)V` @kind direct;
  #L2fd6e0.  return v2 @kind object;
}
procedure `int` `o`(`s3.z` v0 @kind object) @signature `Le2/d;.o:(Ls3/z;)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L2fd5bc.  call temp:= `C`(v0) @signature `Ls3/z;.C:()I` @kind virtual;
  #L2fd5c2.  v0:= temp;
  #L2fd5c4.  return v0;
}
procedure `boolean` `b`(`e2.d` v0 @kind this, `s3.z` v1 @kind object) @signature `Le2/d;.b:(Ls3/z;)Z` @AccessFlag PROTECTED {
    temp;

  #L2fd438.  v1:= 1I;
  #L2fd43a.  return v1;
}
procedure `boolean` `c`(`e2.d` v9 @kind this, `s3.z` v10 @kind object, `long` v11 ) @signature `Le2/d;.c:(Ls3/z;J)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2fd44c.  call temp:= `o`(v10) @signature `Le2/d;.o:(Ls3/z;)I` @kind static;
  #L2fd452.  v11:= temp;
  #L2fd454.  v12:= 0I;
  #L2fd456.  v0:= 2I;
  #L2fd458.  if v11 == v0 then goto L2fd45e;
  #L2fd45c.  return v12;
  #L2fd45e.  call temp:= `n`(v10) @signature `Le2/d;.n:(Ls3/z;)Ljava/lang/String;` @kind static;
  #L2fd464.  v11:= temp @kind object;
  #L2fd466.  v0:= "onMetaData" @kind object;
  #L2fd46a.  call temp:= `equals`(v0, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2fd470.  v11:= temp;
  #L2fd472.  if v11 != 0 then goto L2fd478;
  #L2fd476.  return v12;
  #L2fd478.  call temp:= `a`(v10) @signature `Ls3/z;.a:()I` @kind virtual;
  #L2fd47e.  v11:= temp;
  #L2fd480.  if v11 != 0 then goto L2fd486;
  #L2fd484.  return v12;
  #L2fd486.  call temp:= `o`(v10) @signature `Le2/d;.o:(Ls3/z;)I` @kind static;
  #L2fd48c.  v11:= temp;
  #L2fd48e.  v0:= 8I;
  #L2fd492.  if v11 == v0 then goto L2fd498;
  #L2fd496.  return v12;
  #L2fd498.  call temp:= `k`(v10) @signature `Le2/d;.k:(Ls3/z;)Ljava/util/HashMap;` @kind static;
  #L2fd49e.  v10:= temp @kind object;
  #L2fd4a0.  v11:= "duration" @kind object;
  #L2fd4a4.  call temp:= `get`(v10, v11) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2fd4aa.  v11:= temp @kind object;
  #L2fd4ac.  v0:= instanceof @variable v11 @type ^`java.lang.Double` @kind boolean;
  #L2fd4b0.  v1:= 1000000.0D;
  #L2fd4ba.  if v0 == 0 then goto L2fd4e0;
  #L2fd4be.  v11:= (`java.lang.Double`) v11 @kind object;
  #L2fd4c2.  call temp:= `doubleValue`(v11) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L2fd4c8.  v3:= temp @kind wide;
  #L2fd4ca.  v5:= 0L;
  #L2fd4ce.  v11:= dcmpl(v3, v5);
  #L2fd4d2.  if v11 <= 0 then goto L2fd4e0;
  #L2fd4d6.  v3:= v3 * v1 @kind double;
  #L2fd4da.  v3:= (`long`) v3 @kind d2l;
  #L2fd4dc.  v9.`e2.d.b` @type ^`long` := v3 @kind wide;
  #L2fd4e0.  v11:= "keyframes" @kind object;
  #L2fd4e4.  call temp:= `get`(v10, v11) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2fd4ea.  v10:= temp @kind object;
  #L2fd4ec.  v11:= instanceof @variable v10 @type ^`java.util.Map` @kind boolean;
  #L2fd4f0.  if v11 == 0 then goto L2fd5aa;
  #L2fd4f4.  v10:= (`java.util.Map`) v10 @kind object;
  #L2fd4f8.  v11:= "filepositions" @kind object;
  #L2fd4fc.  call temp:= `get`(v10, v11) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2fd502.  v11:= temp @kind object;
  #L2fd504.  v0:= "times" @kind object;
  #L2fd508.  call temp:= `get`(v10, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2fd50e.  v10:= temp @kind object;
  #L2fd510.  v0:= instanceof @variable v11 @type ^`java.util.List` @kind boolean;
  #L2fd514.  if v0 == 0 then goto L2fd5aa;
  #L2fd518.  v0:= instanceof @variable v10 @type ^`java.util.List` @kind boolean;
  #L2fd51c.  if v0 == 0 then goto L2fd5aa;
  #L2fd520.  v11:= (`java.util.List`) v11 @kind object;
  #L2fd524.  v10:= (`java.util.List`) v10 @kind object;
  #L2fd528.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2fd52e.  v0:= temp;
  #L2fd530.  v3:= new `long`[v0];
  #L2fd534.  v9.`e2.d.c` @type ^`long`[] := v3 @kind object;
  #L2fd538.  v3:= new `long`[v0];
  #L2fd53c.  v9.`e2.d.d` @type ^`long`[] := v3 @kind object;
  #L2fd540.  v3:= 0I;
  #L2fd542.  if v3 >= v0 then goto L2fd5aa;
  #L2fd546.  call temp:= `get`(v11, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2fd54c.  v4:= temp @kind object;
  #L2fd54e.  call temp:= `get`(v10, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2fd554.  v5:= temp @kind object;
  #L2fd556.  v6:= instanceof @variable v5 @type ^`java.lang.Double` @kind boolean;
  #L2fd55a.  if v6 == 0 then goto L2fd59a;
  #L2fd55e.  v6:= instanceof @variable v4 @type ^`java.lang.Double` @kind boolean;
  #L2fd562.  if v6 == 0 then goto L2fd59a;
  #L2fd566.  v6:= v9.`e2.d.c` @type ^`long`[] @kind object;
  #L2fd56a.  v5:= (`java.lang.Double`) v5 @kind object;
  #L2fd56e.  call temp:= `doubleValue`(v5) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L2fd574.  v7:= temp @kind wide;
  #L2fd576.  v7:= v7 * v1 @kind double;
  #L2fd57a.  v7:= (`long`) v7 @kind d2l;
  #L2fd57c.  v6[v3]:= v7 @kind wide;
  #L2fd580.  v5:= v9.`e2.d.d` @type ^`long`[] @kind object;
  #L2fd584.  v4:= (`java.lang.Double`) v4 @kind object;
  #L2fd588.  call temp:= `longValue`(v4) @signature `Ljava/lang/Double;.longValue:()J` @kind virtual;
  #L2fd58e.  v6:= temp @kind wide;
  #L2fd590.  v5[v3]:= v6 @kind wide;
  #L2fd594.  v3:= v3 + 1;
  #L2fd598.  goto L2fd542;
  #L2fd59a.  v10:= new `long`[v12];
  #L2fd59e.  v9.`e2.d.c` @type ^`long`[] := v10 @kind object;
  #L2fd5a2.  v10:= new `long`[v12];
  #L2fd5a6.  v9.`e2.d.d` @type ^`long`[] := v10 @kind object;
  #L2fd5aa.  return v12;
}
procedure `long` `d`(`e2.d` v2 @kind this) @signature `Le2/d;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2fd814.  v0:= v2.`e2.d.b` @type ^`long` @kind wide;
  #L2fd818.  return v0 @kind wide;
}
procedure `long`[] `e`(`e2.d` v1 @kind this) @signature `Le2/d;.e:()[J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fd82c.  v0:= v1.`e2.d.d` @type ^`long`[] @kind object;
  #L2fd830.  return v0 @kind object;
}
procedure `long`[] `f`(`e2.d` v1 @kind this) @signature `Le2/d;.f:()[J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fd844.  v0:= v1.`e2.d.c` @type ^`long`[] @kind object;
  #L2fd848.  return v0 @kind object;
}
