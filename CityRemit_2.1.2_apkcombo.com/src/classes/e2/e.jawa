record `e2.e` @kind class @AccessFlag ABSTRACT {
  `a2.d0` `e2.e.a` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`e2.e` v0 @kind this, `a2.d0` v1 @kind object) @signature `Le2/e;.<init>:(La2/d0;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L2fd8f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fd8f6.  v0.`e2.e.a` @type ^`a2.d0` := v1 @kind object;
  #L2fd8fa.  return @kind void;
}
procedure `boolean` `a`(`e2.e` v1 @kind this, `s3.z` v2 @kind object, `long` v3 ) @signature `Le2/e;.a:(Ls3/z;J)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fd8c0.  call temp:= `b`(v1, v2) @signature `Le2/e;.b:(Ls3/z;)Z` @kind virtual;
  #L2fd8c6.  v0:= temp;
  #L2fd8c8.  if v0 == 0 then goto L2fd8dc;
  #L2fd8cc.  call temp:= `c`(v1, v2, v3) @signature `Le2/e;.c:(Ls3/z;J)Z` @kind virtual;
  #L2fd8d2.  v2:= temp;
  #L2fd8d4.  if v2 == 0 then goto L2fd8dc;
  #L2fd8d8.  v2:= 1I;
  #L2fd8da.  goto L2fd8de;
  #L2fd8dc.  v2:= 0I;
  #L2fd8de.  return v2;
}
procedure `boolean` `b`(`s3.z` v0 @kind object) @signature `Le2/e;.b:(Ls3/z;)Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `c`(`s3.z` v0 @kind object, `long` v1 ) @signature `Le2/e;.c:(Ls3/z;J)Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
