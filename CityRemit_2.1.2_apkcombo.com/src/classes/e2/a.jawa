record `e2.a` @kind class @AccessFlag FINAL extends `e2.e` @kind class {
  `boolean` `e2.a.b` @AccessFlag PRIVATE;
  `boolean` `e2.a.c` @AccessFlag PRIVATE;
  `int` `e2.a.d` @AccessFlag PRIVATE;
}
global `int`[] `@@e2.a.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le2/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2fccf8.  v0:= 4I;
  #L2fccfa.  v0:= new `int`[v0];
  #L2fccfe.  goto L2fcd0c;
  #L2fcd04.  `@@e2.a.e` @type ^`int`[] := v0 @kind object;
  #L2fcd08.  return @kind void;
  #L2fcd0a.  
  #L2fcd0c.  v0:= (5512I, 11025I, 22050I, 44100I) @kind object;
  #L2fcd23.  goto L2fcd04;
}
procedure `void` `<init>`(`e2.a` v0 @kind this, `a2.d0` v1 @kind object) @signature `Le2/a;.<init>:(La2/d0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2fcd34.  call `<init>`(v0, v1) @signature `Le2/e;.<init>:(La2/d0;)V` @kind direct;
  #L2fcd3a.  return @kind void;
}
procedure `boolean` `b`(`e2.a` v3 @kind this, `s3.z` v4 @kind object) @signature `Le2/a;.b:(Ls3/z;)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L2fcad8.  v0:= v3.`e2.a.b` @type ^`boolean` @kind boolean;
  #L2fcadc.  v1:= 1I;
  #L2fcade.  if v0 != 0 then goto L2fcbd0;
  #L2fcae2.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L2fcae8.  v4:= temp;
  #L2fcaea.  v0:= v4 ^> 4;
  #L2fcaee.  v0:= v0 ^& 15;
  #L2fcaf2.  v3.`e2.a.d` @type ^`int` := v0;
  #L2fcaf6.  v2:= 2I;
  #L2fcaf8.  if v0 != v2 then goto L2fcb48;
  #L2fcafc.  v4:= v4 ^> v2 @kind int;
  #L2fcafe.  v4:= v4 ^& 3;
  #L2fcb02.  v0:= `@@e2.a.e` @type ^`int`[] @kind object;
  #L2fcb06.  v4:= v0[v4];
  #L2fcb0a.  v0:= new `v1.j1$b`;
  #L2fcb0e.  call `<init>`(v0) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L2fcb14.  v2:= "audio/mpeg" @kind object;
  #L2fcb18.  call temp:= `e0`(v0, v2) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L2fcb1e.  v0:= temp @kind object;
  #L2fcb20.  call temp:= `H`(v0, v1) @signature `Lv1/j1$b;.H:(I)Lv1/j1$b;` @kind virtual;
  #L2fcb26.  v0:= temp @kind object;
  #L2fcb28.  call temp:= `f0`(v0, v4) @signature `Lv1/j1$b;.f0:(I)Lv1/j1$b;` @kind virtual;
  #L2fcb2e.  v4:= temp @kind object;
  #L2fcb30.  call temp:= `E`(v4) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L2fcb36.  v4:= temp @kind object;
  #L2fcb38.  v0:= v3.`e2.e.a` @type ^`a2.d0` @kind object;
  #L2fcb3c.  call `b`(v0, v4) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L2fcb42.  v3.`e2.a.c` @type ^`boolean` := v1 @kind boolean;
  #L2fcb46.  goto L2fcbca;
  #L2fcb48.  v4:= 7I;
  #L2fcb4a.  if v0 == v4 then goto L2fcb94;
  #L2fcb4e.  v2:= 8I;
  #L2fcb52.  if v0 != v2 then goto L2fcb58;
  #L2fcb56.  goto L2fcb94;
  #L2fcb58.  v4:= 10I;
  #L2fcb5c.  if v0 != v4 then goto L2fcb62;
  #L2fcb60.  goto L2fcbca;
  #L2fcb62.  v4:= new `e2.e$a`;
  #L2fcb66.  v0:= new `java.lang.StringBuilder`;
  #L2fcb6a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fcb70.  v1:= "Audio format not supported: " @kind object;
  #L2fcb74.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fcb7a.  v1:= v3.`e2.a.d` @type ^`int`;
  #L2fcb7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fcb84.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fcb8a.  v0:= temp @kind object;
  #L2fcb8c.  call `<init>`(v4, v0) @signature `Le2/e$a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fcb92.  throw v4;
  #L2fcb94.  if v0 != v4 then goto L2fcb9e;
  #L2fcb98.  v4:= "audio/g711-alaw" @kind object;
  #L2fcb9c.  goto L2fcba2;
  #L2fcb9e.  v4:= "audio/g711-mlaw" @kind object;
  #L2fcba2.  v0:= new `v1.j1$b`;
  #L2fcba6.  call `<init>`(v0) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L2fcbac.  call temp:= `e0`(v0, v4) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L2fcbb2.  v4:= temp @kind object;
  #L2fcbb4.  call temp:= `H`(v4, v1) @signature `Lv1/j1$b;.H:(I)Lv1/j1$b;` @kind virtual;
  #L2fcbba.  v4:= temp @kind object;
  #L2fcbbc.  v0:= 8000I;
  #L2fcbc0.  call temp:= `f0`(v4, v0) @signature `Lv1/j1$b;.f0:(I)Lv1/j1$b;` @kind virtual;
  #L2fcbc6.  v4:= temp @kind object;
  #L2fcbc8.  goto L2fcb30;
  #L2fcbca.  v3.`e2.a.b` @type ^`boolean` := v1 @kind boolean;
  #L2fcbce.  goto L2fcbd6;
  #L2fcbd0.  call `P`(v4, v1) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L2fcbd6.  return v1;
}
procedure `boolean` `c`(`e2.a` v12 @kind this, `s3.z` v13 @kind object, `long` v14 ) @signature `Le2/a;.c:(Ls3/z;J)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2fcbe8.  v0:= v12.`e2.a.d` @type ^`int`;
  #L2fcbec.  v1:= 1I;
  #L2fcbee.  v2:= 2I;
  #L2fcbf0.  if v0 != v2 then goto L2fcc1a;
  #L2fcbf4.  call temp:= `a`(v13) @signature `Ls3/z;.a:()I` @kind virtual;
  #L2fcbfa.  v7:= temp;
  #L2fcbfc.  v0:= v12.`e2.e.a` @type ^`a2.d0` @kind object;
  #L2fcc00.  call `c`(v0, v13, v7) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L2fcc06.  v3:= v12.`e2.e.a` @type ^`a2.d0` @kind object;
  #L2fcc0a.  v6:= 1I;
  #L2fcc0c.  v8:= 0I;
  #L2fcc0e.  v9:= 0I;
  #L2fcc10.  v4:= v14 @kind wide;
  #L2fcc12.  call `f`(v3, v4, v6, v7, v8, v9) @signature `La2/d0;.f:(JIIILa2/d0$a;)V` @kind interface;
  #L2fcc18.  return v1;
  #L2fcc1a.  call temp:= `C`(v13) @signature `Ls3/z;.C:()I` @kind virtual;
  #L2fcc20.  v0:= temp;
  #L2fcc22.  v2:= 0I;
  #L2fcc24.  if v0 != 0 then goto L2fccac;
  #L2fcc28.  v3:= v12.`e2.a.c` @type ^`boolean` @kind boolean;
  #L2fcc2c.  if v3 != 0 then goto L2fccac;
  #L2fcc30.  call temp:= `a`(v13) @signature `Ls3/z;.a:()I` @kind virtual;
  #L2fcc36.  v14:= temp;
  #L2fcc38.  v15:= new `byte`[v14];
  #L2fcc3c.  call `j`(v13, v15, v2, v14) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L2fcc42.  call temp:= `f`(v15) @signature `Lx1/a;.f:([B)Lx1/a$b;` @kind static;
  #L2fcc48.  v13:= temp @kind object;
  #L2fcc4a.  v14:= new `v1.j1$b`;
  #L2fcc4e.  call `<init>`(v14) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L2fcc54.  v0:= "audio/mp4a-latm" @kind object;
  #L2fcc58.  call temp:= `e0`(v14, v0) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L2fcc5e.  v14:= temp @kind object;
  #L2fcc60.  v0:= v13.`x1.a$b.c` @type ^`java.lang.String` @kind object;
  #L2fcc64.  call temp:= `I`(v14, v0) @signature `Lv1/j1$b;.I:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L2fcc6a.  v14:= temp @kind object;
  #L2fcc6c.  v0:= v13.`x1.a$b.b` @type ^`int`;
  #L2fcc70.  call temp:= `H`(v14, v0) @signature `Lv1/j1$b;.H:(I)Lv1/j1$b;` @kind virtual;
  #L2fcc76.  v14:= temp @kind object;
  #L2fcc78.  v13:= v13.`x1.a$b.a` @type ^`int`;
  #L2fcc7c.  call temp:= `f0`(v14, v13) @signature `Lv1/j1$b;.f0:(I)Lv1/j1$b;` @kind virtual;
  #L2fcc82.  v13:= temp @kind object;
  #L2fcc84.  call temp:= `singletonList`(v15) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2fcc8a.  v14:= temp @kind object;
  #L2fcc8c.  call temp:= `T`(v13, v14) @signature `Lv1/j1$b;.T:(Ljava/util/List;)Lv1/j1$b;` @kind virtual;
  #L2fcc92.  v13:= temp @kind object;
  #L2fcc94.  call temp:= `E`(v13) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L2fcc9a.  v13:= temp @kind object;
  #L2fcc9c.  v14:= v12.`e2.e.a` @type ^`a2.d0` @kind object;
  #L2fcca0.  call `b`(v14, v13) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L2fcca6.  v12.`e2.a.c` @type ^`boolean` := v1 @kind boolean;
  #L2fccaa.  return v2;
  #L2fccac.  v3:= v12.`e2.a.d` @type ^`int`;
  #L2fccb0.  v4:= 10I;
  #L2fccb4.  if v3 != v4 then goto L2fccc0;
  #L2fccb8.  if v0 != v1 then goto L2fccbe;
  #L2fccbc.  goto L2fccc0;
  #L2fccbe.  return v2;
  #L2fccc0.  call temp:= `a`(v13) @signature `Ls3/z;.a:()I` @kind virtual;
  #L2fccc6.  v9:= temp;
  #L2fccc8.  v0:= v12.`e2.e.a` @type ^`a2.d0` @kind object;
  #L2fcccc.  call `c`(v0, v13, v9) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L2fccd2.  v5:= v12.`e2.e.a` @type ^`a2.d0` @kind object;
  #L2fccd6.  v8:= 1I;
  #L2fccd8.  v10:= 0I;
  #L2fccda.  v11:= 0I;
  #L2fccdc.  v6:= v14 @kind wide;
  #L2fccde.  call `f`(v5, v6, v8, v9, v10, v11) @signature `La2/d0;.f:(JIIILa2/d0$a;)V` @kind interface;
  #L2fcce4.  return v1;
}
