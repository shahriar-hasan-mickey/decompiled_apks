record `w1.q1` @kind class @AccessFlag PUBLIC_FINAL extends `w1.s1` @kind interface {
  `v1.d3$c` `w1.q1.a` @AccessFlag PRIVATE_FINAL;
  `v1.d3$b` `w1.q1.b` @AccessFlag PRIVATE_FINAL;
  `java.util.HashMap` `w1.q1.c` @AccessFlag PRIVATE_FINAL;
  `l5.o` `w1.q1.d` @AccessFlag PRIVATE_FINAL;
  `w1.s1$a` `w1.q1.e` @AccessFlag PRIVATE;
  `v1.d3` `w1.q1.f` @AccessFlag PRIVATE;
  `java.lang.String` `w1.q1.g` @AccessFlag PRIVATE;
}
global `l5.o` `@@w1.q1.h` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Random` `@@w1.q1.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lw1/q1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4b6144.  v0:= `@@w1.p1.o` @type ^`w1.p1` @kind object;
  #L4b6148.  `@@w1.q1.h` @type ^`l5.o` := v0 @kind object;
  #L4b614c.  v0:= new `java.util.Random`;
  #L4b6150.  call `<init>`(v0) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L4b6156.  `@@w1.q1.i` @type ^`java.util.Random` := v0 @kind object;
  #L4b615a.  return @kind void;
}
procedure `void` `<init>`(`w1.q1` v1 @kind this) @signature `Lw1/q1;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4b616c.  v0:= `@@w1.q1.h` @type ^`l5.o` @kind object;
  #L4b6170.  call `<init>`(v1, v0) @signature `Lw1/q1;.<init>:(Ll5/o;)V` @kind direct;
  #L4b6176.  return @kind void;
}
procedure `void` `<init>`(`w1.q1` v0 @kind this, `l5.o` v1 @kind object) @signature `Lw1/q1;.<init>:(Ll5/o;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b6188.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b618e.  v0.`w1.q1.d` @type ^`l5.o` := v1 @kind object;
  #L4b6192.  v1:= new `v1.d3$c`;
  #L4b6196.  call `<init>`(v1) @signature `Lv1/d3$c;.<init>:()V` @kind direct;
  #L4b619c.  v0.`w1.q1.a` @type ^`v1.d3$c` := v1 @kind object;
  #L4b61a0.  v1:= new `v1.d3$b`;
  #L4b61a4.  call `<init>`(v1) @signature `Lv1/d3$b;.<init>:()V` @kind direct;
  #L4b61aa.  v0.`w1.q1.b` @type ^`v1.d3$b` := v1 @kind object;
  #L4b61ae.  v1:= new `java.util.HashMap`;
  #L4b61b2.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4b61b8.  v0.`w1.q1.c` @type ^`java.util.HashMap` := v1 @kind object;
  #L4b61bc.  v1:= `@@v1.d3.o` @type ^`v1.d3` @kind object;
  #L4b61c0.  v0.`w1.q1.f` @type ^`v1.d3` := v1 @kind object;
  #L4b61c4.  return @kind void;
}
procedure `java.lang.String` `h`() @signature `Lw1/q1;.h:()Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L4b6050.  call temp:= `k`() @signature `Lw1/q1;.k:()Ljava/lang/String;` @kind static;
  #L4b6056.  v0:= temp @kind object;
  #L4b6058.  return v0 @kind object;
}
procedure `v1.d3$c` `i`(`w1.q1` v0 @kind object) @signature `Lw1/q1;.i:(Lw1/q1;)Lv1/d3$c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b612c.  v0:= v0.`w1.q1.a` @type ^`v1.d3$c` @kind object;
  #L4b6130.  return v0 @kind object;
}
procedure `v1.d3$b` `j`(`w1.q1` v0 @kind object) @signature `Lw1/q1;.j:(Lw1/q1;)Lv1/d3$b;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b6114.  v0:= v0.`w1.q1.b` @type ^`v1.d3$b` @kind object;
  #L4b6118.  return v0 @kind object;
}
procedure `java.lang.String` `k`() @signature `Lw1/q1;.k:()Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4b606c.  v0:= 12I;
  #L4b6070.  v0:= new `byte`[v0];
  #L4b6074.  v1:= `@@w1.q1.i` @type ^`java.util.Random` @kind object;
  #L4b6078.  call `nextBytes`(v1, v0) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L4b607e.  v1:= 10I;
  #L4b6082.  call temp:= `encodeToString`(v0, v1) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L4b6088.  v0:= temp @kind object;
  #L4b608a.  return v0 @kind object;
}
procedure `w1.q1$a` `l`(`w1.q1` v10 @kind this, `int` v11 , `x2.u$b` v12 @kind object) @signature `Lw1/q1;.l:(ILx2/u$b;)Lw1/q1$a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4b6794.  v0:= v10.`w1.q1.c` @type ^`java.util.HashMap` @kind object;
  #L4b6798.  call temp:= `values`(v0) @signature `Ljava/util/HashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L4b679e.  v0:= temp @kind object;
  #L4b67a0.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b67a6.  v0:= temp @kind object;
  #L4b67a8.  v1:= 0I;
  #L4b67aa.  v2:= 9223372036854775807L;
  #L4b67b4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b67ba.  v4:= temp;
  #L4b67bc.  if v4 == 0 then goto L4b682e;
  #L4b67c0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b67c6.  v4:= temp @kind object;
  #L4b67c8.  v4:= (`w1.q1$a`) v4 @kind object;
  #L4b67cc.  call `k`(v4, v11, v12) @signature `Lw1/q1$a;.k:(ILx2/u$b;)V` @kind virtual;
  #L4b67d2.  call temp:= `i`(v4, v11, v12) @signature `Lw1/q1$a;.i:(ILx2/u$b;)Z` @kind virtual;
  #L4b67d8.  v5:= temp;
  #L4b67da.  if v5 == 0 then goto L4b67b4;
  #L4b67de.  call temp:= `b`(v4) @signature `Lw1/q1$a;.b:(Lw1/q1$a;)J` @kind static;
  #L4b67e4.  v5:= temp @kind wide;
  #L4b67e6.  v7:= -1L;
  #L4b67ea.  v9:= lcmp(v5, v7);
  #L4b67ee.  if v9 == 0 then goto L4b6828;
  #L4b67f2.  v7:= lcmp(v5, v2);
  #L4b67f6.  if v7 >= 0 then goto L4b67fc;
  #L4b67fa.  goto L4b6828;
  #L4b67fc.  if v7 != 0 then goto L4b67b4;
  #L4b6800.  call temp:= `j`(v1) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4b6806.  v5:= temp @kind object;
  #L4b6808.  v5:= (`w1.q1$a`) v5 @kind object;
  #L4b680c.  call temp:= `h`(v5) @signature `Lw1/q1$a;.h:(Lw1/q1$a;)Lx2/u$b;` @kind static;
  #L4b6812.  v5:= temp @kind object;
  #L4b6814.  if v5 == 0 then goto L4b67b4;
  #L4b6818.  call temp:= `h`(v4) @signature `Lw1/q1$a;.h:(Lw1/q1$a;)Lx2/u$b;` @kind static;
  #L4b681e.  v5:= temp @kind object;
  #L4b6820.  if v5 == 0 then goto L4b67b4;
  #L4b6824.  v1:= v4 @kind object;
  #L4b6826.  goto L4b67b4;
  #L4b6828.  v1:= v4 @kind object;
  #L4b682a.  v2:= v5 @kind wide;
  #L4b682c.  goto L4b67b4;
  #L4b682e.  if v1 != 0 then goto L4b6856;
  #L4b6832.  v0:= v10.`w1.q1.d` @type ^`l5.o` @kind object;
  #L4b6836.  call temp:= `get`(v0) @signature `Ll5/o;.get:()Ljava/lang/Object;` @kind interface;
  #L4b683c.  v0:= temp @kind object;
  #L4b683e.  v0:= (`java.lang.String`) v0 @kind object;
  #L4b6842.  v1:= new `w1.q1$a`;
  #L4b6846.  call `<init>`(v1, v10, v0, v11, v12) @signature `Lw1/q1$a;.<init>:(Lw1/q1;Ljava/lang/String;ILx2/u$b;)V` @kind direct;
  #L4b684c.  v11:= v10.`w1.q1.c` @type ^`java.util.HashMap` @kind object;
  #L4b6850.  call temp:= `put`(v11, v0, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4b6856.  return v1 @kind object;
}
procedure `void` `m`(`w1.q1` v7 @kind this, `w1.c$a` v8 @kind object) @signature `Lw1/q1;.m:(Lw1/c$a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4b6278.  v0:= v8.`w1.c$a.b` @type ^`v1.d3` @kind object;
  #L4b627c.  call temp:= `q`(v0) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L4b6282.  v0:= temp;
  #L4b6284.  if v0 == 0 then goto L4b6290;
  #L4b6288.  v8:= 0I;
  #L4b628a.  v7.`w1.q1.g` @type ^`java.lang.String` := v8 @kind object;
  #L4b628e.  return @kind void;
  #L4b6290.  v0:= v7.`w1.q1.c` @type ^`java.util.HashMap` @kind object;
  #L4b6294.  v1:= v7.`w1.q1.g` @type ^`java.lang.String` @kind object;
  #L4b6298.  call temp:= `get`(v0, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4b629e.  v0:= temp @kind object;
  #L4b62a0.  v0:= (`w1.q1$a`) v0 @kind object;
  #L4b62a4.  v1:= v8.`w1.c$a.c` @type ^`int`;
  #L4b62a8.  v2:= v8.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b62ac.  call temp:= `l`(v7, v1, v2) @signature `Lw1/q1;.l:(ILx2/u$b;)Lw1/q1$a;` @kind direct;
  #L4b62b2.  v1:= temp @kind object;
  #L4b62b4.  call temp:= `a`(v1) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @kind static;
  #L4b62ba.  v2:= temp @kind object;
  #L4b62bc.  v7.`w1.q1.g` @type ^`java.lang.String` := v2 @kind object;
  #L4b62c0.  call `f`(v7, v8) @signature `Lw1/q1;.f:(Lw1/c$a;)V` @kind virtual;
  #L4b62c6.  v2:= v8.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b62ca.  if v2 == 0 then goto L4b636e;
  #L4b62ce.  call temp:= `b`(v2) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L4b62d4.  v2:= temp;
  #L4b62d6.  if v2 == 0 then goto L4b636e;
  #L4b62da.  if v0 == 0 then goto L4b6332;
  #L4b62de.  call temp:= `b`(v0) @signature `Lw1/q1$a;.b:(Lw1/q1$a;)J` @kind static;
  #L4b62e4.  v2:= temp @kind wide;
  #L4b62e6.  v4:= v8.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b62ea.  v4:= v4.`x2.s.d` @type ^`long` @kind wide;
  #L4b62ee.  v6:= lcmp(v2, v4);
  #L4b62f2.  if v6 != 0 then goto L4b6332;
  #L4b62f6.  call temp:= `h`(v0) @signature `Lw1/q1$a;.h:(Lw1/q1$a;)Lx2/u$b;` @kind static;
  #L4b62fc.  v2:= temp @kind object;
  #L4b62fe.  if v2 == 0 then goto L4b6332;
  #L4b6302.  call temp:= `h`(v0) @signature `Lw1/q1$a;.h:(Lw1/q1$a;)Lx2/u$b;` @kind static;
  #L4b6308.  v2:= temp @kind object;
  #L4b630a.  v2:= v2.`x2.s.b` @type ^`int`;
  #L4b630e.  v3:= v8.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b6312.  v3:= v3.`x2.s.b` @type ^`int`;
  #L4b6316.  if v2 != v3 then goto L4b6332;
  #L4b631a.  call temp:= `h`(v0) @signature `Lw1/q1$a;.h:(Lw1/q1$a;)Lx2/u$b;` @kind static;
  #L4b6320.  v0:= temp @kind object;
  #L4b6322.  v0:= v0.`x2.s.c` @type ^`int`;
  #L4b6326.  v2:= v8.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b632a.  v2:= v2.`x2.s.c` @type ^`int`;
  #L4b632e.  if v0 == v2 then goto L4b636e;
  #L4b6332.  v0:= new `x2.u$b`;
  #L4b6336.  v2:= v8.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b633a.  v3:= v2.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L4b633e.  v4:= v2.`x2.s.d` @type ^`long` @kind wide;
  #L4b6342.  call `<init>`(v0, v3, v4) @signature `Lx2/u$b;.<init>:(Ljava/lang/Object;J)V` @kind direct;
  #L4b6348.  v2:= v8.`w1.c$a.c` @type ^`int`;
  #L4b634c.  call temp:= `l`(v7, v2, v0) @signature `Lw1/q1;.l:(ILx2/u$b;)Lw1/q1$a;` @kind direct;
  #L4b6352.  v0:= temp @kind object;
  #L4b6354.  v2:= v7.`w1.q1.e` @type ^`w1.s1$a` @kind object;
  #L4b6358.  call temp:= `a`(v0) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @kind static;
  #L4b635e.  v0:= temp @kind object;
  #L4b6360.  call temp:= `a`(v1) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @kind static;
  #L4b6366.  v1:= temp @kind object;
  #L4b6368.  call `W`(v2, v8, v0, v1) @signature `Lw1/s1$a;.W:(Lw1/c$a;Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L4b636e.  return @kind void;
}
procedure `java.lang.String` `a`(`w1.q1` v1 @kind this) @signature `Lw1/q1;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b609c.  @monitorenter v1
  #L4b609e.  v0:= v1.`w1.q1.g` @type ^`java.lang.String` @kind object;
  #L4b60a2.  @monitorexit v1
  #L4b60a4.  return v0 @kind object;
  #L4b60a6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b60a8.  @monitorexit v1
  #L4b60aa.  throw v0;
  catch `java.lang.Throwable` @[L4b609e..L4b60a2] goto L4b60a6;
}
procedure `void` `b`(`w1.q1` v5 @kind this, `w1.c$a` v6 @kind object) @signature `Lw1/q1;.b:(Lw1/c$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b66c0.  @monitorenter v5
  #L4b66c2.  v0:= v5.`w1.q1.e` @type ^`w1.s1$a` @kind object;
  #L4b66c6.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4b66cc.  v0:= v5.`w1.q1.f` @type ^`v1.d3` @kind object;
  #L4b66d0.  v1:= v6.`w1.c$a.b` @type ^`v1.d3` @kind object;
  #L4b66d4.  v5.`w1.q1.f` @type ^`v1.d3` := v1 @kind object;
  #L4b66d8.  v1:= v5.`w1.q1.c` @type ^`java.util.HashMap` @kind object;
  #L4b66dc.  call temp:= `values`(v1) @signature `Ljava/util/HashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L4b66e2.  v1:= temp @kind object;
  #L4b66e4.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b66ea.  v1:= temp @kind object;
  #L4b66ec.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b66f2.  v2:= temp;
  #L4b66f4.  if v2 == 0 then goto L4b6766;
  #L4b66f8.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b66fe.  v2:= temp @kind object;
  #L4b6700.  v2:= (`w1.q1$a`) v2 @kind object;
  #L4b6704.  v3:= v5.`w1.q1.f` @type ^`v1.d3` @kind object;
  #L4b6708.  call temp:= `m`(v2, v0, v3) @signature `Lw1/q1$a;.m:(Lv1/d3;Lv1/d3;)Z` @kind virtual;
  #L4b670e.  v3:= temp;
  #L4b6710.  if v3 == 0 then goto L4b6720;
  #L4b6714.  call temp:= `j`(v2, v6) @signature `Lw1/q1$a;.j:(Lw1/c$a;)Z` @kind virtual;
  #L4b671a.  v3:= temp;
  #L4b671c.  if v3 == 0 then goto L4b66ec;
  #L4b6720.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L4b6726.  call temp:= `d`(v2) @signature `Lw1/q1$a;.d:(Lw1/q1$a;)Z` @kind static;
  #L4b672c.  v3:= temp;
  #L4b672e.  if v3 == 0 then goto L4b66ec;
  #L4b6732.  call temp:= `a`(v2) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @kind static;
  #L4b6738.  v3:= temp @kind object;
  #L4b673a.  v4:= v5.`w1.q1.g` @type ^`java.lang.String` @kind object;
  #L4b673e.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b6744.  v3:= temp;
  #L4b6746.  if v3 == 0 then goto L4b6750;
  #L4b674a.  v3:= 0I;
  #L4b674c.  v5.`w1.q1.g` @type ^`java.lang.String` := v3 @kind object;
  #L4b6750.  v3:= v5.`w1.q1.e` @type ^`w1.s1$a` @kind object;
  #L4b6754.  call temp:= `a`(v2) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @kind static;
  #L4b675a.  v2:= temp @kind object;
  #L4b675c.  v4:= 0I;
  #L4b675e.  call `h0`(v3, v6, v2, v4) @signature `Lw1/s1$a;.h0:(Lw1/c$a;Ljava/lang/String;Z)V` @kind interface;
  #L4b6764.  goto L4b66ec;
  #L4b6766.  call `m`(v5, v6) @signature `Lw1/q1;.m:(Lw1/c$a;)V` @kind direct;
  #L4b676c.  @monitorexit v5
  #L4b676e.  return @kind void;
  #L4b6770.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b6772.  @monitorexit v5
  #L4b6774.  throw v6;
  catch `java.lang.Throwable` @[L4b66c2..L4b676c] goto L4b6770;
}
procedure `java.lang.String` `c`(`w1.q1` v2 @kind this, `v1.d3` v3 @kind object, `x2.u$b` v4 @kind object) @signature `Lw1/q1;.c:(Lv1/d3;Lx2/u$b;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b60c8.  @monitorenter v2
  #L4b60ca.  v0:= v4.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L4b60ce.  v1:= v2.`w1.q1.b` @type ^`v1.d3$b` @kind object;
  #L4b60d2.  call temp:= `h`(v3, v0, v1) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L4b60d8.  v3:= temp @kind object;
  #L4b60da.  v3:= v3.`v1.d3$b.q` @type ^`int`;
  #L4b60de.  call temp:= `l`(v2, v3, v4) @signature `Lw1/q1;.l:(ILx2/u$b;)Lw1/q1$a;` @kind direct;
  #L4b60e4.  v3:= temp @kind object;
  #L4b60e6.  call temp:= `a`(v3) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @kind static;
  #L4b60ec.  v3:= temp @kind object;
  #L4b60ee.  @monitorexit v2
  #L4b60f0.  return v3 @kind object;
  #L4b60f2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b60f4.  @monitorexit v2
  #L4b60f6.  throw v3;
  catch `java.lang.Throwable` @[L4b60ca..L4b60ee] goto L4b60f2;
}
procedure `void` `d`(`w1.q1` v0 @kind this, `w1.s1$a` v1 @kind object) @signature `Lw1/q1;.d:(Lw1/s1$a;)V` @AccessFlag PUBLIC {
    temp;

  #L4b6260.  v0.`w1.q1.e` @type ^`w1.s1$a` := v1 @kind object;
  #L4b6264.  return @kind void;
}
procedure `void` `e`(`w1.q1` v4 @kind this, `w1.c$a` v5 @kind object) @signature `Lw1/q1;.e:(Lw1/c$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b61d8.  @monitorenter v4
  #L4b61da.  v0:= 0I;
  #L4b61dc.  v4.`w1.q1.g` @type ^`java.lang.String` := v0 @kind object;
  #L4b61e0.  v0:= v4.`w1.q1.c` @type ^`java.util.HashMap` @kind object;
  #L4b61e4.  call temp:= `values`(v0) @signature `Ljava/util/HashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L4b61ea.  v0:= temp @kind object;
  #L4b61ec.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b61f2.  v0:= temp @kind object;
  #L4b61f4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b61fa.  v1:= temp;
  #L4b61fc.  if v1 == 0 then goto L4b6238;
  #L4b6200.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b6206.  v1:= temp @kind object;
  #L4b6208.  v1:= (`w1.q1$a`) v1 @kind object;
  #L4b620c.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L4b6212.  call temp:= `d`(v1) @signature `Lw1/q1$a;.d:(Lw1/q1$a;)Z` @kind static;
  #L4b6218.  v2:= temp;
  #L4b621a.  if v2 == 0 then goto L4b61f4;
  #L4b621e.  v2:= v4.`w1.q1.e` @type ^`w1.s1$a` @kind object;
  #L4b6222.  if v2 == 0 then goto L4b61f4;
  #L4b6226.  call temp:= `a`(v1) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @kind static;
  #L4b622c.  v1:= temp @kind object;
  #L4b622e.  v3:= 0I;
  #L4b6230.  call `h0`(v2, v5, v1, v3) @signature `Lw1/s1$a;.h0:(Lw1/c$a;Ljava/lang/String;Z)V` @kind interface;
  #L4b6236.  goto L4b61f4;
  #L4b6238.  @monitorexit v4
  #L4b623a.  return @kind void;
  #L4b623c.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b623e.  @monitorexit v4
  #L4b6240.  throw v5;
  catch `java.lang.Throwable` @[L4b61dc..L4b6236] goto L4b623c;
}
procedure `void` `f`(`w1.q1` v24 @kind this, `w1.c$a` v25 @kind object) @signature `Lw1/q1;.f:(Lw1/c$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L4b6380.  v1:= v24 @kind object;
  #L4b6384.  v0:= v25 @kind object;
  #L4b6388.  @monitorenter v24
  #L4b638a.  v2:= v1.`w1.q1.e` @type ^`w1.s1$a` @kind object;
  #L4b638e.  call temp:= `e`(v2) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4b6394.  v2:= v0.`w1.c$a.b` @type ^`v1.d3` @kind object;
  #L4b6398.  call temp:= `q`(v2) @signature `Lv1/d3;.q:()Z` @kind virtual;
  #L4b639e.  v2:= temp;
  #L4b63a0.  if v2 == 0 then goto L4b63a8;
  #L4b63a4.  @monitorexit v24
  #L4b63a6.  return @kind void;
  #L4b63a8.  v2:= v1.`w1.q1.c` @type ^`java.util.HashMap` @kind object;
  #L4b63ac.  v3:= v1.`w1.q1.g` @type ^`java.lang.String` @kind object;
  #L4b63b0.  call temp:= `get`(v2, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4b63b6.  v2:= temp @kind object;
  #L4b63b8.  v2:= (`w1.q1$a`) v2 @kind object;
  #L4b63bc.  v3:= v0.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b63c0.  v4:= 1I;
  #L4b63c2.  if v3 == 0 then goto L4b6416;
  #L4b63c6.  if v2 == 0 then goto L4b6416;
  #L4b63ca.  call temp:= `b`(v2) @signature `Lw1/q1$a;.b:(Lw1/q1$a;)J` @kind static;
  #L4b63d0.  v5:= temp @kind wide;
  #L4b63d2.  v7:= -1L;
  #L4b63d6.  v3:= 0I;
  #L4b63d8.  v9:= lcmp(v5, v7);
  #L4b63dc.  if v9 != 0 then goto L4b63f4;
  #L4b63e0.  call temp:= `c`(v2) @signature `Lw1/q1$a;.c:(Lw1/q1$a;)I` @kind static;
  #L4b63e6.  v2:= temp;
  #L4b63e8.  v5:= v0.`w1.c$a.c` @type ^`int`;
  #L4b63ec.  if v2 == v5 then goto L4b640e;
  #L4b63f0.  v3:= 1I;
  #L4b63f2.  goto L4b640e;
  #L4b63f4.  v5:= v0.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b63f8.  v5:= v5.`x2.s.d` @type ^`long` @kind wide;
  #L4b63fc.  call temp:= `b`(v2) @signature `Lw1/q1$a;.b:(Lw1/q1$a;)J` @kind static;
  #L4b6402.  v7:= temp @kind wide;
  #L4b6404.  v2:= lcmp(v5, v7);
  #L4b6408.  if v2 >= 0 then goto L4b640e;
  #L4b640c.  goto L4b63f0;
  #L4b640e.  if v3 == 0 then goto L4b6416;
  #L4b6412.  @monitorexit v24
  #L4b6414.  return @kind void;
  #L4b6416.  v2:= v0.`w1.c$a.c` @type ^`int`;
  #L4b641a.  v3:= v0.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b641e.  call temp:= `l`(v1, v2, v3) @signature `Lw1/q1;.l:(ILx2/u$b;)Lw1/q1$a;` @kind direct;
  #L4b6424.  v2:= temp @kind object;
  #L4b6426.  v3:= v1.`w1.q1.g` @type ^`java.lang.String` @kind object;
  #L4b642a.  if v3 != 0 then goto L4b643a;
  #L4b642e.  call temp:= `a`(v2) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @kind static;
  #L4b6434.  v3:= temp @kind object;
  #L4b6436.  v1.`w1.q1.g` @type ^`java.lang.String` := v3 @kind object;
  #L4b643a.  v3:= v0.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b643e.  if v3 == 0 then goto L4b6532;
  #L4b6442.  call temp:= `b`(v3) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L4b6448.  v3:= temp;
  #L4b644a.  if v3 == 0 then goto L4b6532;
  #L4b644e.  v10:= new `x2.u$b`;
  #L4b6452.  v3:= v0.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b6456.  v5:= v3.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L4b645a.  v6:= v3.`x2.s.d` @type ^`long` @kind wide;
  #L4b645e.  v3:= v3.`x2.s.b` @type ^`int`;
  #L4b6462.  call `<init>`(v10, v5, v6, v3) @signature `Lx2/u$b;.<init>:(Ljava/lang/Object;JI)V` @kind direct;
  #L4b6468.  v3:= v0.`w1.c$a.c` @type ^`int`;
  #L4b646c.  call temp:= `l`(v1, v3, v10) @signature `Lw1/q1;.l:(ILx2/u$b;)Lw1/q1$a;` @kind direct;
  #L4b6472.  v3:= temp @kind object;
  #L4b6474.  call temp:= `d`(v3) @signature `Lw1/q1$a;.d:(Lw1/q1$a;)Z` @kind static;
  #L4b647a.  v5:= temp;
  #L4b647c.  if v5 != 0 then goto L4b6532;
  #L4b6480.  call temp:= `e`(v3, v4) @signature `Lw1/q1$a;.e:(Lw1/q1$a;Z)Z` @kind static;
  #L4b6486.  v5:= v0.`w1.c$a.b` @type ^`v1.d3` @kind object;
  #L4b648a.  v6:= v0.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b648e.  v6:= v6.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L4b6492.  v7:= v1.`w1.q1.b` @type ^`v1.d3$b` @kind object;
  #L4b6496.  call temp:= `h`(v5, v6, v7) @signature `Lv1/d3;.h:(Ljava/lang/Object;Lv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L4b649c.  v5:= v1.`w1.q1.b` @type ^`v1.d3$b` @kind object;
  #L4b64a0.  v6:= v0.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b64a4.  v6:= v6.`x2.s.b` @type ^`int`;
  #L4b64a8.  call temp:= `h`(v5, v6) @signature `Lv1/d3$b;.h:(I)J` @kind virtual;
  #L4b64ae.  v5:= temp @kind wide;
  #L4b64b0.  call temp:= `X0`(v5) @signature `Ls3/l0;.X0:(J)J` @kind static;
  #L4b64b6.  v5:= temp @kind wide;
  #L4b64b8.  v7:= v1.`w1.q1.b` @type ^`v1.d3$b` @kind object;
  #L4b64bc.  call temp:= `o`(v7) @signature `Lv1/d3$b;.o:()J` @kind virtual;
  #L4b64c2.  v7:= temp @kind wide;
  #L4b64c4.  v5:= v5 + v7 @kind long;
  #L4b64c6.  v7:= 0L;
  #L4b64ca.  call temp:= `max`(v7, v5) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L4b64d0.  v11:= temp @kind wide;
  #L4b64d2.  v15:= new `w1.c$a`;
  #L4b64d6.  v6:= v0.`w1.c$a.a` @type ^`long` @kind wide;
  #L4b64da.  v8:= v0.`w1.c$a.b` @type ^`v1.d3` @kind object;
  #L4b64de.  v9:= v0.`w1.c$a.c` @type ^`int`;
  #L4b64e2.  v13:= v0.`w1.c$a.f` @type ^`v1.d3` @kind object;
  #L4b64e6.  v14:= v0.`w1.c$a.g` @type ^`int`;
  #L4b64ea.  v5:= v0.`w1.c$a.h` @type ^`x2.u$b` @kind object;
  #L4b64ee.  v16:= v5 @kind object;
  #L4b64f2.  v4:= v0.`w1.c$a.i` @type ^`long` @kind wide;
  #L4b64f6.  v20:= v2 @kind object;
  #L4b64fa.  v21:= v3 @kind object;
  #L4b64fe.  v2:= v0.`w1.c$a.j` @type ^`long` @kind wide;
  #L4b6502.  v22:= v4 @kind wide;
  #L4b6506.  v4:= v16 @kind object;
  #L4b650a.  v16:= v22 @kind wide;
  #L4b650e.  v5:= v15 @kind object;
  #L4b6510.  v0:= v15 @kind object;
  #L4b6512.  v15:= v4 @kind object;
  #L4b6514.  v18:= v2 @kind wide;
  #L4b6518.  call `<init>`(v5, v6, v8, v9, v10, v11, v13, v14, v15, v16, v18) @signature `Lw1/c$a;.<init>:(JLv1/d3;ILx2/u$b;JLv1/d3;ILx2/u$b;JJ)V` @kind direct;
  #L4b651e.  v2:= v1.`w1.q1.e` @type ^`w1.s1$a` @kind object;
  #L4b6522.  call temp:= `a`(v21) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @kind static;
  #L4b6528.  v3:= temp @kind object;
  #L4b652a.  call `v`(v2, v0, v3) @signature `Lw1/s1$a;.v:(Lw1/c$a;Ljava/lang/String;)V` @kind interface;
  #L4b6530.  goto L4b6536;
  #L4b6532.  v20:= v2 @kind object;
  #L4b6536.  call temp:= `d`(v20) @signature `Lw1/q1$a;.d:(Lw1/q1$a;)Z` @kind static;
  #L4b653c.  v0:= temp;
  #L4b653e.  if v0 != 0 then goto L4b6566;
  #L4b6542.  v0:= v20 @kind object;
  #L4b6546.  v2:= 1I;
  #L4b6548.  call temp:= `e`(v0, v2) @signature `Lw1/q1$a;.e:(Lw1/q1$a;Z)Z` @kind static;
  #L4b654e.  v2:= v1.`w1.q1.e` @type ^`w1.s1$a` @kind object;
  #L4b6552.  call temp:= `a`(v0) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @kind static;
  #L4b6558.  v3:= temp @kind object;
  #L4b655a.  v4:= v25 @kind object;
  #L4b655e.  call `v`(v2, v4, v3) @signature `Lw1/s1$a;.v:(Lw1/c$a;Ljava/lang/String;)V` @kind interface;
  #L4b6564.  goto L4b656e;
  #L4b6566.  v4:= v25 @kind object;
  #L4b656a.  v0:= v20 @kind object;
  #L4b656e.  call temp:= `a`(v0) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @kind static;
  #L4b6574.  v2:= temp @kind object;
  #L4b6576.  v3:= v1.`w1.q1.g` @type ^`java.lang.String` @kind object;
  #L4b657a.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b6580.  v2:= temp;
  #L4b6582.  if v2 == 0 then goto L4b65ac;
  #L4b6586.  call temp:= `f`(v0) @signature `Lw1/q1$a;.f:(Lw1/q1$a;)Z` @kind static;
  #L4b658c.  v2:= temp;
  #L4b658e.  if v2 != 0 then goto L4b65ac;
  #L4b6592.  v2:= 1I;
  #L4b6594.  call temp:= `g`(v0, v2) @signature `Lw1/q1$a;.g:(Lw1/q1$a;Z)Z` @kind static;
  #L4b659a.  v2:= v1.`w1.q1.e` @type ^`w1.s1$a` @kind object;
  #L4b659e.  call temp:= `a`(v0) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @kind static;
  #L4b65a4.  v0:= temp @kind object;
  #L4b65a6.  call `g`(v2, v4, v0) @signature `Lw1/s1$a;.g:(Lw1/c$a;Ljava/lang/String;)V` @kind interface;
  #L4b65ac.  @monitorexit v24
  #L4b65ae.  return @kind void;
  #L4b65b0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b65b2.  @monitorexit v24
  #L4b65b4.  throw v0;
  catch `java.lang.Throwable` @[L4b638a..L4b63a0] goto L4b65b0;
  catch `java.lang.Throwable` @[L4b63a8..L4b6404] goto L4b65b0;
  catch `java.lang.Throwable` @[L4b6416..L4b65ac] goto L4b65b0;
}
procedure `void` `g`(`w1.q1` v6 @kind this, `w1.c$a` v7 @kind object, `int` v8 ) @signature `Lw1/q1;.g:(Lw1/c$a;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4b65e4.  @monitorenter v6
  #L4b65e6.  v0:= v6.`w1.q1.e` @type ^`w1.s1$a` @kind object;
  #L4b65ea.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4b65f0.  v0:= 1I;
  #L4b65f2.  v1:= 0I;
  #L4b65f4.  if v8 != 0 then goto L4b65fc;
  #L4b65f8.  v8:= 1I;
  #L4b65fa.  goto L4b65fe;
  #L4b65fc.  v8:= 0I;
  #L4b65fe.  v2:= v6.`w1.q1.c` @type ^`java.util.HashMap` @kind object;
  #L4b6602.  call temp:= `values`(v2) @signature `Ljava/util/HashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L4b6608.  v2:= temp @kind object;
  #L4b660a.  call temp:= `iterator`(v2) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4b6610.  v2:= temp @kind object;
  #L4b6612.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4b6618.  v3:= temp;
  #L4b661a.  if v3 == 0 then goto L4b6694;
  #L4b661e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4b6624.  v3:= temp @kind object;
  #L4b6626.  v3:= (`w1.q1$a`) v3 @kind object;
  #L4b662a.  call temp:= `j`(v3, v7) @signature `Lw1/q1$a;.j:(Lw1/c$a;)Z` @kind virtual;
  #L4b6630.  v4:= temp;
  #L4b6632.  if v4 == 0 then goto L4b6612;
  #L4b6636.  call `remove`(v2) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L4b663c.  call temp:= `d`(v3) @signature `Lw1/q1$a;.d:(Lw1/q1$a;)Z` @kind static;
  #L4b6642.  v4:= temp;
  #L4b6644.  if v4 == 0 then goto L4b6612;
  #L4b6648.  call temp:= `a`(v3) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @kind static;
  #L4b664e.  v4:= temp @kind object;
  #L4b6650.  v5:= v6.`w1.q1.g` @type ^`java.lang.String` @kind object;
  #L4b6654.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b665a.  v4:= temp;
  #L4b665c.  if v8 == 0 then goto L4b6674;
  #L4b6660.  if v4 == 0 then goto L4b6674;
  #L4b6664.  call temp:= `f`(v3) @signature `Lw1/q1$a;.f:(Lw1/q1$a;)Z` @kind static;
  #L4b666a.  v5:= temp;
  #L4b666c.  if v5 == 0 then goto L4b6674;
  #L4b6670.  v5:= 1I;
  #L4b6672.  goto L4b6676;
  #L4b6674.  v5:= 0I;
  #L4b6676.  if v4 == 0 then goto L4b6680;
  #L4b667a.  v4:= 0I;
  #L4b667c.  v6.`w1.q1.g` @type ^`java.lang.String` := v4 @kind object;
  #L4b6680.  v4:= v6.`w1.q1.e` @type ^`w1.s1$a` @kind object;
  #L4b6684.  call temp:= `a`(v3) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @kind static;
  #L4b668a.  v3:= temp @kind object;
  #L4b668c.  call `h0`(v4, v7, v3, v5) @signature `Lw1/s1$a;.h0:(Lw1/c$a;Ljava/lang/String;Z)V` @kind interface;
  #L4b6692.  goto L4b6612;
  #L4b6694.  call `m`(v6, v7) @signature `Lw1/q1;.m:(Lw1/c$a;)V` @kind direct;
  #L4b669a.  @monitorexit v6
  #L4b669c.  return @kind void;
  #L4b669e.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4b66a0.  @monitorexit v6
  #L4b66a2.  throw v7;
  catch `java.lang.Throwable` @[L4b65e6..L4b669a] goto L4b669e;
}
