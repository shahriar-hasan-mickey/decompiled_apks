record `w1.q1$a` @kind class @AccessFlag FINAL {
  `java.lang.String` `w1.q1$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `w1.q1$a.b` @AccessFlag PRIVATE;
  `long` `w1.q1$a.c` @AccessFlag PRIVATE;
  `x2.u$b` `w1.q1$a.d` @AccessFlag PRIVATE;
  `boolean` `w1.q1$a.e` @AccessFlag PRIVATE;
  `boolean` `w1.q1$a.f` @AccessFlag PRIVATE;
  `w1.q1` `w1.q1$a.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`w1.q1$a` v0 @kind this, `w1.q1` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `x2.u$b` v4 @kind object) @signature `Lw1/q1$a;.<init>:(Lw1/q1;Ljava/lang/String;ILx2/u$b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4b5fb4.  v0.`w1.q1$a.g` @type ^`w1.q1` := v1 @kind object;
  #L4b5fb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4b5fbe.  v0.`w1.q1$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L4b5fc2.  v0.`w1.q1$a.b` @type ^`int` := v3;
  #L4b5fc6.  if v4 != 0 then goto L4b5fd0;
  #L4b5fca.  v1:= -1L;
  #L4b5fce.  goto L4b5fd4;
  #L4b5fd0.  v1:= v4.`x2.s.d` @type ^`long` @kind wide;
  #L4b5fd4.  v0.`w1.q1$a.c` @type ^`long` := v1 @kind wide;
  #L4b5fd8.  if v4 == 0 then goto L4b5fec;
  #L4b5fdc.  call temp:= `b`(v4) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L4b5fe2.  v1:= temp;
  #L4b5fe4.  if v1 == 0 then goto L4b5fec;
  #L4b5fe8.  v0.`w1.q1$a.d` @type ^`x2.u$b` := v4 @kind object;
  #L4b5fec.  return @kind void;
}
procedure `java.lang.String` `a`(`w1.q1$a` v0 @kind object) @signature `Lw1/q1$a;.a:(Lw1/q1$a;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b5f84.  v0:= v0.`w1.q1$a.a` @type ^`java.lang.String` @kind object;
  #L4b5f88.  return v0 @kind object;
}
procedure `long` `b`(`w1.q1$a` v2 @kind object) @signature `Lw1/q1$a;.b:(Lw1/q1$a;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L4b5f9c.  v0:= v2.`w1.q1$a.c` @type ^`long` @kind wide;
  #L4b5fa0.  return v0 @kind wide;
}
procedure `int` `c`(`w1.q1$a` v0 @kind object) @signature `Lw1/q1$a;.c:(Lw1/q1$a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b5ed0.  v0:= v0.`w1.q1$a.b` @type ^`int`;
  #L4b5ed4.  return v0;
}
procedure `boolean` `d`(`w1.q1$a` v0 @kind object) @signature `Lw1/q1$a;.d:(Lw1/q1$a;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b5cb8.  v0:= v0.`w1.q1$a.e` @type ^`boolean` @kind boolean;
  #L4b5cbc.  return v0;
}
procedure `boolean` `e`(`w1.q1$a` v0 @kind object, `boolean` v1 ) @signature `Lw1/q1$a;.e:(Lw1/q1$a;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b5cd0.  v0.`w1.q1$a.e` @type ^`boolean` := v1 @kind boolean;
  #L4b5cd4.  return v1;
}
procedure `boolean` `f`(`w1.q1$a` v0 @kind object) @signature `Lw1/q1$a;.f:(Lw1/q1$a;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b5ce8.  v0:= v0.`w1.q1$a.f` @type ^`boolean` @kind boolean;
  #L4b5cec.  return v0;
}
procedure `boolean` `g`(`w1.q1$a` v0 @kind object, `boolean` v1 ) @signature `Lw1/q1$a;.g:(Lw1/q1$a;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b5d00.  v0.`w1.q1$a.f` @type ^`boolean` := v1 @kind boolean;
  #L4b5d04.  return v1;
}
procedure `x2.u$b` `h`(`w1.q1$a` v0 @kind object) @signature `Lw1/q1$a;.h:(Lw1/q1$a;)Lx2/u$b;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4b6038.  v0:= v0.`w1.q1$a.d` @type ^`x2.u$b` @kind object;
  #L4b603c.  return v0 @kind object;
}
procedure `int` `l`(`w1.q1$a` v2 @kind this, `v1.d3` v3 @kind object, `v1.d3` v4 @kind object, `int` v5 ) @signature `Lw1/q1$a;.l:(Lv1/d3;Lv1/d3;I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b5ee8.  call temp:= `p`(v3) @signature `Lv1/d3;.p:()I` @kind virtual;
  #L4b5eee.  v0:= temp;
  #L4b5ef0.  v1:= -1I;
  #L4b5ef2.  if v5 < v0 then goto L4b5f08;
  #L4b5ef6.  call temp:= `p`(v4) @signature `Lv1/d3;.p:()I` @kind virtual;
  #L4b5efc.  v3:= temp;
  #L4b5efe.  if v5 >= v3 then goto L4b5f04;
  #L4b5f02.  goto L4b5f06;
  #L4b5f04.  v5:= -1I;
  #L4b5f06.  return v5;
  #L4b5f08.  v0:= v2.`w1.q1$a.g` @type ^`w1.q1` @kind object;
  #L4b5f0c.  call temp:= `i`(v0) @signature `Lw1/q1;.i:(Lw1/q1;)Lv1/d3$c;` @kind static;
  #L4b5f12.  v0:= temp @kind object;
  #L4b5f14.  call temp:= `n`(v3, v5, v0) @signature `Lv1/d3;.n:(ILv1/d3$c;)Lv1/d3$c;` @kind virtual;
  #L4b5f1a.  v5:= v2.`w1.q1$a.g` @type ^`w1.q1` @kind object;
  #L4b5f1e.  call temp:= `i`(v5) @signature `Lw1/q1;.i:(Lw1/q1;)Lv1/d3$c;` @kind static;
  #L4b5f24.  v5:= temp @kind object;
  #L4b5f26.  v5:= v5.`v1.d3$c.C` @type ^`int`;
  #L4b5f2a.  v0:= v2.`w1.q1$a.g` @type ^`w1.q1` @kind object;
  #L4b5f2e.  call temp:= `i`(v0) @signature `Lw1/q1;.i:(Lw1/q1;)Lv1/d3$c;` @kind static;
  #L4b5f34.  v0:= temp @kind object;
  #L4b5f36.  v0:= v0.`v1.d3$c.D` @type ^`int`;
  #L4b5f3a.  if v5 > v0 then goto L4b5f72;
  #L4b5f3e.  call temp:= `m`(v3, v5) @signature `Lv1/d3;.m:(I)Ljava/lang/Object;` @kind virtual;
  #L4b5f44.  v0:= temp @kind object;
  #L4b5f46.  call temp:= `b`(v4, v0) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L4b5f4c.  v0:= temp;
  #L4b5f4e.  if v0 == v1 then goto L4b5f6c;
  #L4b5f52.  v3:= v2.`w1.q1$a.g` @type ^`w1.q1` @kind object;
  #L4b5f56.  call temp:= `j`(v3) @signature `Lw1/q1;.j:(Lw1/q1;)Lv1/d3$b;` @kind static;
  #L4b5f5c.  v3:= temp @kind object;
  #L4b5f5e.  call temp:= `f`(v4, v0, v3) @signature `Lv1/d3;.f:(ILv1/d3$b;)Lv1/d3$b;` @kind virtual;
  #L4b5f64.  v3:= temp @kind object;
  #L4b5f66.  v3:= v3.`v1.d3$b.q` @type ^`int`;
  #L4b5f6a.  return v3;
  #L4b5f6c.  v5:= v5 + 1;
  #L4b5f70.  goto L4b5f2a;
  #L4b5f72.  return v1;
}
procedure `boolean` `i`(`w1.q1$a` v7 @kind this, `int` v8 , `x2.u$b` v9 @kind object) @signature `Lw1/q1$a;.i:(ILx2/u$b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4b5d18.  v0:= 1I;
  #L4b5d1a.  v1:= 0I;
  #L4b5d1c.  if v9 != 0 then goto L4b5d2e;
  #L4b5d20.  v9:= v7.`w1.q1$a.b` @type ^`int`;
  #L4b5d24.  if v8 != v9 then goto L4b5d2a;
  #L4b5d28.  goto L4b5d2c;
  #L4b5d2a.  v0:= 0I;
  #L4b5d2c.  return v0;
  #L4b5d2e.  v8:= v7.`w1.q1$a.d` @type ^`x2.u$b` @kind object;
  #L4b5d32.  if v8 != 0 then goto L4b5d58;
  #L4b5d36.  call temp:= `b`(v9) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L4b5d3c.  v8:= temp;
  #L4b5d3e.  if v8 != 0 then goto L4b5d54;
  #L4b5d42.  v8:= v9.`x2.s.d` @type ^`long` @kind wide;
  #L4b5d46.  v2:= v7.`w1.q1$a.c` @type ^`long` @kind wide;
  #L4b5d4a.  v4:= lcmp(v8, v2);
  #L4b5d4e.  if v4 != 0 then goto L4b5d54;
  #L4b5d52.  goto L4b5d56;
  #L4b5d54.  v0:= 0I;
  #L4b5d56.  return v0;
  #L4b5d58.  v2:= v9.`x2.s.d` @type ^`long` @kind wide;
  #L4b5d5c.  v4:= v8.`x2.s.d` @type ^`long` @kind wide;
  #L4b5d60.  v6:= lcmp(v2, v4);
  #L4b5d64.  if v6 != 0 then goto L4b5d82;
  #L4b5d68.  v2:= v9.`x2.s.b` @type ^`int`;
  #L4b5d6c.  v3:= v8.`x2.s.b` @type ^`int`;
  #L4b5d70.  if v2 != v3 then goto L4b5d82;
  #L4b5d74.  v9:= v9.`x2.s.c` @type ^`int`;
  #L4b5d78.  v8:= v8.`x2.s.c` @type ^`int`;
  #L4b5d7c.  if v9 != v8 then goto L4b5d82;
  #L4b5d80.  goto L4b5d84;
  #L4b5d82.  v0:= 0I;
  #L4b5d84.  return v0;
}
procedure `boolean` `j`(`w1.q1$a` v10 @kind this, `w1.c$a` v11 @kind object) @signature `Lw1/q1$a;.j:(Lw1/c$a;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4b5d98.  v0:= v10.`w1.q1$a.c` @type ^`long` @kind wide;
  #L4b5d9c.  v2:= 0I;
  #L4b5d9e.  v3:= -1L;
  #L4b5da2.  v5:= lcmp(v0, v3);
  #L4b5da6.  if v5 != 0 then goto L4b5dac;
  #L4b5daa.  return v2;
  #L4b5dac.  v3:= v11.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b5db0.  v4:= 1I;
  #L4b5db2.  if v3 != 0 then goto L4b5dc6;
  #L4b5db6.  v0:= v10.`w1.q1$a.b` @type ^`int`;
  #L4b5dba.  v11:= v11.`w1.c$a.c` @type ^`int`;
  #L4b5dbe.  if v0 == v11 then goto L4b5dc4;
  #L4b5dc2.  v2:= 1I;
  #L4b5dc4.  return v2;
  #L4b5dc6.  v5:= v3.`x2.s.d` @type ^`long` @kind wide;
  #L4b5dca.  v7:= lcmp(v5, v0);
  #L4b5dce.  if v7 <= 0 then goto L4b5dd4;
  #L4b5dd2.  return v4;
  #L4b5dd4.  v0:= v10.`w1.q1$a.d` @type ^`x2.u$b` @kind object;
  #L4b5dd8.  if v0 != 0 then goto L4b5dde;
  #L4b5ddc.  return v2;
  #L4b5dde.  v0:= v11.`w1.c$a.b` @type ^`v1.d3` @kind object;
  #L4b5de2.  v1:= v3.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L4b5de6.  call temp:= `b`(v0, v1) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L4b5dec.  v0:= temp;
  #L4b5dee.  v1:= v11.`w1.c$a.b` @type ^`v1.d3` @kind object;
  #L4b5df2.  v3:= v10.`w1.q1$a.d` @type ^`x2.u$b` @kind object;
  #L4b5df6.  v3:= v3.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L4b5dfa.  call temp:= `b`(v1, v3) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L4b5e00.  v1:= temp;
  #L4b5e02.  v3:= v11.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b5e06.  v5:= v3.`x2.s.d` @type ^`long` @kind wide;
  #L4b5e0a.  v7:= v10.`w1.q1$a.d` @type ^`x2.u$b` @kind object;
  #L4b5e0e.  v7:= v7.`x2.s.d` @type ^`long` @kind wide;
  #L4b5e12.  v9:= lcmp(v5, v7);
  #L4b5e16.  if v9 < 0 then goto L4b5e72;
  #L4b5e1a.  if v0 >= v1 then goto L4b5e20;
  #L4b5e1e.  goto L4b5e72;
  #L4b5e20.  if v0 <= v1 then goto L4b5e26;
  #L4b5e24.  return v4;
  #L4b5e26.  call temp:= `b`(v3) @signature `Lx2/s;.b:()Z` @kind virtual;
  #L4b5e2c.  v0:= temp;
  #L4b5e2e.  v11:= v11.`w1.c$a.d` @type ^`x2.u$b` @kind object;
  #L4b5e32.  if v0 == 0 then goto L4b5e5a;
  #L4b5e36.  v0:= v11.`x2.s.b` @type ^`int`;
  #L4b5e3a.  v11:= v11.`x2.s.c` @type ^`int`;
  #L4b5e3e.  v1:= v10.`w1.q1$a.d` @type ^`x2.u$b` @kind object;
  #L4b5e42.  v3:= v1.`x2.s.b` @type ^`int`;
  #L4b5e46.  if v0 > v3 then goto L4b5e56;
  #L4b5e4a.  if v0 != v3 then goto L4b5e58;
  #L4b5e4e.  v0:= v1.`x2.s.c` @type ^`int`;
  #L4b5e52.  if v11 <= v0 then goto L4b5e58;
  #L4b5e56.  v2:= 1I;
  #L4b5e58.  return v2;
  #L4b5e5a.  v11:= v11.`x2.s.e` @type ^`int`;
  #L4b5e5e.  v0:= -1I;
  #L4b5e60.  if v11 == v0 then goto L4b5e70;
  #L4b5e64.  v0:= v10.`w1.q1$a.d` @type ^`x2.u$b` @kind object;
  #L4b5e68.  v0:= v0.`x2.s.b` @type ^`int`;
  #L4b5e6c.  if v11 <= v0 then goto L4b5e72;
  #L4b5e70.  v2:= 1I;
  #L4b5e72.  return v2;
}
procedure `void` `k`(`w1.q1$a` v5 @kind this, `int` v6 , `x2.u$b` v7 @kind object) @signature `Lw1/q1$a;.k:(ILx2/u$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b6000.  v0:= v5.`w1.q1$a.c` @type ^`long` @kind wide;
  #L4b6004.  v2:= -1L;
  #L4b6008.  v4:= lcmp(v0, v2);
  #L4b600c.  if v4 != 0 then goto L4b6024;
  #L4b6010.  v0:= v5.`w1.q1$a.b` @type ^`int`;
  #L4b6014.  if v6 != v0 then goto L4b6024;
  #L4b6018.  if v7 == 0 then goto L4b6024;
  #L4b601c.  v6:= v7.`x2.s.d` @type ^`long` @kind wide;
  #L4b6020.  v5.`w1.q1$a.c` @type ^`long` := v6 @kind wide;
  #L4b6024.  return @kind void;
}
procedure `boolean` `m`(`w1.q1$a` v3 @kind this, `v1.d3` v4 @kind object, `v1.d3` v5 @kind object) @signature `Lw1/q1$a;.m:(Lv1/d3;Lv1/d3;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b5e84.  v0:= v3.`w1.q1$a.b` @type ^`int`;
  #L4b5e88.  call temp:= `l`(v3, v4, v5, v0) @signature `Lw1/q1$a;.l:(Lv1/d3;Lv1/d3;I)I` @kind direct;
  #L4b5e8e.  v4:= temp;
  #L4b5e90.  v3.`w1.q1$a.b` @type ^`int` := v4;
  #L4b5e94.  v0:= 0I;
  #L4b5e96.  v1:= -1I;
  #L4b5e98.  if v4 != v1 then goto L4b5e9e;
  #L4b5e9c.  return v0;
  #L4b5e9e.  v4:= v3.`w1.q1$a.d` @type ^`x2.u$b` @kind object;
  #L4b5ea2.  v2:= 1I;
  #L4b5ea4.  if v4 != 0 then goto L4b5eaa;
  #L4b5ea8.  return v2;
  #L4b5eaa.  v4:= v4.`x2.s.a` @type ^`java.lang.Object` @kind object;
  #L4b5eae.  call temp:= `b`(v5, v4) @signature `Lv1/d3;.b:(Ljava/lang/Object;)I` @kind virtual;
  #L4b5eb4.  v4:= temp;
  #L4b5eb6.  if v4 == v1 then goto L4b5ebc;
  #L4b5eba.  v0:= 1I;
  #L4b5ebc.  return v0;
}
