record `s5.c` @kind class @AccessFlag PUBLIC extends `p5.q` @kind interface {
}
global `java.util.logging.Logger` `@@s5.c.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ls5/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4651ac.  v0:= constclass @type ^`s5.c` @kind object;
  #L4651b0.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L4651b6.  v0:= temp @kind object;
  #L4651b8.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L4651be.  v0:= temp @kind object;
  #L4651c0.  `@@s5.c.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L4651c4.  return @kind void;
}
procedure `void` `<init>`(`s5.c` v0 @kind this) @signature `Ls5/c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4651d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4651de.  return @kind void;
}
procedure `java.util.logging.Logger` `d`() @signature `Ls5/c;.d:()Ljava/util/logging/Logger;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L465178.  v0:= `@@s5.c.a` @type ^`java.util.logging.Logger` @kind object;
  #L46517c.  return v0 @kind object;
}
procedure `void` `e`() @signature `Ls5/c;.e:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4651f0.  v0:= new `s5.c`;
  #L4651f4.  call `<init>`(v0) @signature `Ls5/c;.<init>:()V` @kind direct;
  #L4651fa.  call `r`(v0) @signature `Lp5/r;.r:(Lp5/q;)V` @kind static;
  #L465200.  return @kind void;
}
procedure `java.lang.Class` `a`(`s5.c` v1 @kind this) @signature `Ls5/c;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46512c.  v0:= constclass @type ^`p5.d` @kind object;
  #L465130.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`s5.c` v0 @kind this, `p5.p` v1 @kind object) @signature `Ls5/c;.b:(Lp5/p;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L46515c.  call temp:= `f`(v0, v1) @signature `Ls5/c;.f:(Lp5/p;)Lp5/d;` @kind virtual;
  #L465162.  v1:= temp @kind object;
  #L465164.  return v1 @kind object;
}
procedure `java.lang.Class` `c`(`s5.c` v1 @kind this) @signature `Ls5/c;.c:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L465144.  v0:= constclass @type ^`p5.d` @kind object;
  #L465148.  return v0 @kind object;
}
procedure `p5.d` `f`(`s5.c` v1 @kind this, `p5.p` v2 @kind object) @signature `Ls5/c;.f:(Lp5/p;)Lp5/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L465190.  v0:= new `s5.c$a`;
  #L465194.  call `<init>`(v0, v2) @signature `Ls5/c$a;.<init>:(Lp5/p;)V` @kind direct;
  #L46519a.  return v0 @kind object;
}
