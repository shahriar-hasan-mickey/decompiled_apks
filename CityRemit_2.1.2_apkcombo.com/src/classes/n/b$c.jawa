record `n.b$c` @kind class @AccessFlag  extends `java.util.Map$Entry` @kind interface {
  `java.lang.Object` `n.b$c.o` @AccessFlag FINAL;
  `java.lang.Object` `n.b$c.p` @AccessFlag FINAL;
  `n.b$c` `n.b$c.q` @AccessFlag ;
  `n.b$c` `n.b$c.r` @AccessFlag ;
}
procedure `void` `<init>`(`n.b$c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Ln/b$c;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ec8fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ec902.  v0.`n.b$c.o` @type ^`java.lang.Object` := v1 @kind object;
  #L3ec906.  v0.`n.b$c.p` @type ^`java.lang.Object` := v2 @kind object;
  #L3ec90a.  return @kind void;
}
procedure `boolean` `equals`(`n.b$c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/b$c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ec7e4.  v0:= 1I;
  #L3ec7e6.  if v5 != v4 then goto L3ec7ec;
  #L3ec7ea.  return v0;
  #L3ec7ec.  v1:= instanceof @variable v5 @type ^`n.b$c` @kind boolean;
  #L3ec7f0.  v2:= 0I;
  #L3ec7f2.  if v1 != 0 then goto L3ec7f8;
  #L3ec7f6.  return v2;
  #L3ec7f8.  v5:= (`n.b$c`) v5 @kind object;
  #L3ec7fc.  v1:= v4.`n.b$c.o` @type ^`java.lang.Object` @kind object;
  #L3ec800.  v3:= v5.`n.b$c.o` @type ^`java.lang.Object` @kind object;
  #L3ec804.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ec80a.  v1:= temp;
  #L3ec80c.  if v1 == 0 then goto L3ec826;
  #L3ec810.  v1:= v4.`n.b$c.p` @type ^`java.lang.Object` @kind object;
  #L3ec814.  v5:= v5.`n.b$c.p` @type ^`java.lang.Object` @kind object;
  #L3ec818.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ec81e.  v5:= temp;
  #L3ec820.  if v5 == 0 then goto L3ec826;
  #L3ec824.  goto L3ec828;
  #L3ec826.  v0:= 0I;
  #L3ec828.  return v0;
}
procedure `java.lang.Object` `getKey`(`n.b$c` v1 @kind this) @signature `Ln/b$c;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec868.  v0:= v1.`n.b$c.o` @type ^`java.lang.Object` @kind object;
  #L3ec86c.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`n.b$c` v1 @kind this) @signature `Ln/b$c;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec880.  v0:= v1.`n.b$c.p` @type ^`java.lang.Object` @kind object;
  #L3ec884.  return v0 @kind object;
}
procedure `int` `hashCode`(`n.b$c` v2 @kind this) @signature `Ln/b$c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ec83c.  v0:= v2.`n.b$c.o` @type ^`java.lang.Object` @kind object;
  #L3ec840.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3ec846.  v0:= temp;
  #L3ec848.  v1:= v2.`n.b$c.p` @type ^`java.lang.Object` @kind object;
  #L3ec84c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3ec852.  v1:= temp;
  #L3ec854.  v0:= v0 ^~ v1 @kind int;
  #L3ec856.  return v0;
}
procedure `java.lang.Object` `setValue`(`n.b$c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ln/b$c;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec898.  v2:= new `java.lang.UnsupportedOperationException`;
  #L3ec89c.  v0:= "An entry modification is not supported" @kind object;
  #L3ec8a0.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ec8a6.  throw v2;
}
procedure `java.lang.String` `toString`(`n.b$c` v2 @kind this) @signature `Ln/b$c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ec8b8.  v0:= new `java.lang.StringBuilder`;
  #L3ec8bc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec8c2.  v1:= v2.`n.b$c.o` @type ^`java.lang.Object` @kind object;
  #L3ec8c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec8cc.  v1:= "=" @kind object;
  #L3ec8d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec8d6.  v1:= v2.`n.b$c.p` @type ^`java.lang.Object` @kind object;
  #L3ec8da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec8e0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec8e6.  v0:= temp @kind object;
  #L3ec8e8.  return v0 @kind object;
}
