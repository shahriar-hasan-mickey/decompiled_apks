record `m1.d` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `m1.d.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `m1.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Lm1/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d28e4.  v0:= new `m1.d$a`;
  #L3d28e8.  call `<init>`(v0) @signature `Lm1/d$a;.<init>:()V` @kind direct;
  #L3d28ee.  call temp:= `a`(v0) @signature `Lm1/d$a;.a:()Lm1/d;` @kind virtual;
  #L3d28f4.  return @kind void;
}
procedure `void` `<init>`(`m1.d` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.List` v2 @kind object) @signature `Lm1/d;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d2908.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d290e.  v0.`m1.d.a` @type ^`java.lang.String` := v1 @kind object;
  #L3d2912.  v0.`m1.d.b` @type ^`java.util.List` := v2 @kind object;
  #L3d2916.  return @kind void;
}
procedure `m1.d$a` `c`() @signature `Lm1/d;.c:()Lm1/d$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d28c8.  v0:= new `m1.d$a`;
  #L3d28cc.  call `<init>`(v0) @signature `Lm1/d$a;.<init>:()V` @kind direct;
  #L3d28d2.  return v0 @kind object;
}
procedure `java.util.List` `a`(`m1.d` v1 @kind this) @signature `Lm1/d;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d28b0.  v0:= v1.`m1.d.b` @type ^`java.util.List` @kind object;
  #L3d28b4.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`m1.d` v1 @kind this) @signature `Lm1/d;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d2898.  v0:= v1.`m1.d.a` @type ^`java.lang.String` @kind object;
  #L3d289c.  return v0 @kind object;
}
