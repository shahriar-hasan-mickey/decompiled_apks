record `m1.c` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `m1.c.a` @AccessFlag PRIVATE_FINAL;
  `m1.c$b` `m1.c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Lm1/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d27c8.  v0:= new `m1.c$a`;
  #L3d27cc.  call `<init>`(v0) @signature `Lm1/c$a;.<init>:()V` @kind direct;
  #L3d27d2.  call temp:= `a`(v0) @signature `Lm1/c$a;.a:()Lm1/c;` @kind virtual;
  #L3d27d8.  return @kind void;
}
procedure `void` `<init>`(`m1.c` v0 @kind this, `long` v1 , `m1.c$b` v3 @kind object) @signature `Lm1/c;.<init>:(JLm1/c$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d27ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d27f2.  v0.`m1.c.a` @type ^`long` := v1 @kind wide;
  #L3d27f6.  v0.`m1.c.b` @type ^`m1.c$b` := v3 @kind object;
  #L3d27fa.  return @kind void;
}
procedure `m1.c$a` `c`() @signature `Lm1/c;.c:()Lm1/c$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d2794.  v0:= new `m1.c$a`;
  #L3d2798.  call `<init>`(v0) @signature `Lm1/c$a;.<init>:()V` @kind direct;
  #L3d279e.  return v0 @kind object;
}
procedure `long` `a`(`m1.c` v2 @kind this) @signature `Lm1/c;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d277c.  v0:= v2.`m1.c.a` @type ^`long` @kind wide;
  #L3d2780.  return v0 @kind wide;
}
procedure `m1.c$b` `b`(`m1.c` v1 @kind this) @signature `Lm1/c;.b:()Lm1/c$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d27b0.  v0:= v1.`m1.c.b` @type ^`m1.c$b` @kind object;
  #L3d27b4.  return v0 @kind object;
}
