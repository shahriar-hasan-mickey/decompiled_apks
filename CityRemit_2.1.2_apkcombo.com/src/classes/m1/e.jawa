record `m1.e` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `m1.e.a` @AccessFlag PRIVATE_FINAL;
  `long` `m1.e.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Lm1/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d29ec.  v0:= new `m1.e$a`;
  #L3d29f0.  call `<init>`(v0) @signature `Lm1/e$a;.<init>:()V` @kind direct;
  #L3d29f6.  call temp:= `a`(v0) @signature `Lm1/e$a;.a:()Lm1/e;` @kind virtual;
  #L3d29fc.  return @kind void;
}
procedure `void` `<init>`(`m1.e` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lm1/e;.<init>:(JJ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d2a10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d2a16.  v0.`m1.e.a` @type ^`long` := v1 @kind wide;
  #L3d2a1a.  v0.`m1.e.b` @type ^`long` := v3 @kind wide;
  #L3d2a1e.  return @kind void;
}
procedure `m1.e$a` `c`() @signature `Lm1/e;.c:()Lm1/e$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d29d0.  v0:= new `m1.e$a`;
  #L3d29d4.  call `<init>`(v0) @signature `Lm1/e$a;.<init>:()V` @kind direct;
  #L3d29da.  return v0 @kind object;
}
procedure `long` `a`(`m1.e` v2 @kind this) @signature `Lm1/e;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d29a0.  v0:= v2.`m1.e.a` @type ^`long` @kind wide;
  #L3d29a4.  return v0 @kind wide;
}
procedure `long` `b`(`m1.e` v2 @kind this) @signature `Lm1/e;.b:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d29b8.  v0:= v2.`m1.e.b` @type ^`long` @kind wide;
  #L3d29bc.  return v0 @kind wide;
}
