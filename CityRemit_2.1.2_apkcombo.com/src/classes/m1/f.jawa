record `m1.f` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `m1.f.a` @AccessFlag PRIVATE_FINAL;
  `long` `m1.f.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Lm1/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d2af4.  v0:= new `m1.f$a`;
  #L3d2af8.  call `<init>`(v0) @signature `Lm1/f$a;.<init>:()V` @kind direct;
  #L3d2afe.  call temp:= `a`(v0) @signature `Lm1/f$a;.a:()Lm1/f;` @kind virtual;
  #L3d2b04.  return @kind void;
}
procedure `void` `<init>`(`m1.f` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lm1/f;.<init>:(JJ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d2b18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d2b1e.  v0.`m1.f.a` @type ^`long` := v1 @kind wide;
  #L3d2b22.  v0.`m1.f.b` @type ^`long` := v3 @kind wide;
  #L3d2b26.  return @kind void;
}
procedure `m1.f$a` `c`() @signature `Lm1/f;.c:()Lm1/f$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d2ad8.  v0:= new `m1.f$a`;
  #L3d2adc.  call `<init>`(v0) @signature `Lm1/f$a;.<init>:()V` @kind direct;
  #L3d2ae2.  return v0 @kind object;
}
procedure `long` `a`(`m1.f` v2 @kind this) @signature `Lm1/f;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d2aa8.  v0:= v2.`m1.f.b` @type ^`long` @kind wide;
  #L3d2aac.  return v0 @kind wide;
}
procedure `long` `b`(`m1.f` v2 @kind this) @signature `Lm1/f;.b:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d2ac0.  v0:= v2.`m1.f.a` @type ^`long` @kind wide;
  #L3d2ac4.  return v0 @kind wide;
}
