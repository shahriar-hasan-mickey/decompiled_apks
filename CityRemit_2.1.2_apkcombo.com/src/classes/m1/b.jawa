record `m1.b` @kind class @AccessFlag PUBLIC_FINAL {
  `m1.e` `m1.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Lm1/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d2580.  v0:= new `m1.b$a`;
  #L3d2584.  call `<init>`(v0) @signature `Lm1/b$a;.<init>:()V` @kind direct;
  #L3d258a.  call temp:= `a`(v0) @signature `Lm1/b$a;.a:()Lm1/b;` @kind virtual;
  #L3d2590.  return @kind void;
}
procedure `void` `<init>`(`m1.b` v0 @kind this, `m1.e` v1 @kind object) @signature `Lm1/b;.<init>:(Lm1/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d25a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d25aa.  v0.`m1.b.a` @type ^`m1.e` := v1 @kind object;
  #L3d25ae.  return @kind void;
}
procedure `m1.b$a` `b`() @signature `Lm1/b;.b:()Lm1/b$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d254c.  v0:= new `m1.b$a`;
  #L3d2550.  call `<init>`(v0) @signature `Lm1/b$a;.<init>:()V` @kind direct;
  #L3d2556.  return v0 @kind object;
}
procedure `m1.e` `a`(`m1.b` v1 @kind this) @signature `Lm1/b;.a:()Lm1/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d2568.  v0:= v1.`m1.b.a` @type ^`m1.e` @kind object;
  #L3d256c.  return v0 @kind object;
}
