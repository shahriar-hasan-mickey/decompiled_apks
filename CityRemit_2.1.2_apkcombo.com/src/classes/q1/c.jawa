record `q1.c` @kind class @AccessFlag PUBLIC extends `q1.v` @kind interface {
  `android.content.Context` `q1.c.a` @AccessFlag PRIVATE_FINAL;
  `r1.d` `q1.c.b` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.scheduling.jobscheduling.c` `q1.c.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`q1.c` v0 @kind this, `android.content.Context` v1 @kind object, `r1.d` v2 @kind object, `com.google.android.datatransport.runtime.scheduling.jobscheduling.c` v3 @kind object) @signature `Lq1/c;.<init>:(Landroid/content/Context;Lr1/d;Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40c704.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40c70a.  v0.`q1.c.a` @type ^`android.content.Context` := v1 @kind object;
  #L40c70e.  v0.`q1.c.b` @type ^`r1.d` := v2 @kind object;
  #L40c712.  v0.`q1.c.c` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.c` := v3 @kind object;
  #L40c716.  return @kind void;
}
procedure `boolean` `d`(`q1.c` v4 @kind this, `android.app.job.JobScheduler` v5 @kind object, `int` v6 , `int` v7 ) @signature `Lq1/c;.d:(Landroid/app/job/JobScheduler;II)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40c5ec.  call temp:= `getAllPendingJobs`(v5) @signature `Landroid/app/job/JobScheduler;.getAllPendingJobs:()Ljava/util/List;` @kind virtual;
  #L40c5f2.  v5:= temp @kind object;
  #L40c5f4.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40c5fa.  v5:= temp @kind object;
  #L40c5fc.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L40c602.  v0:= temp;
  #L40c604.  v1:= 0I;
  #L40c606.  if v0 == 0 then goto L40c63c;
  #L40c60a.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L40c610.  v0:= temp @kind object;
  #L40c612.  v0:= (`android.app.job.JobInfo`) v0 @kind object;
  #L40c616.  call temp:= `getExtras`(v0) @signature `Landroid/app/job/JobInfo;.getExtras:()Landroid/os/PersistableBundle;` @kind virtual;
  #L40c61c.  v2:= temp @kind object;
  #L40c61e.  v3:= "attemptNumber" @kind object;
  #L40c622.  call temp:= `getInt`(v2, v3) @signature `Landroid/os/PersistableBundle;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L40c628.  v2:= temp;
  #L40c62a.  call temp:= `getId`(v0) @signature `Landroid/app/job/JobInfo;.getId:()I` @kind virtual;
  #L40c630.  v0:= temp;
  #L40c632.  if v0 != v6 then goto L40c5fc;
  #L40c636.  if v2 < v7 then goto L40c63c;
  #L40c63a.  v1:= 1I;
  #L40c63c.  return v1;
}
procedure `void` `a`(`q1.c` v12 @kind this, `j1.p` v13 @kind object, `int` v14 , `boolean` v15 ) @signature `Lq1/c;.a:(Lj1/p;IZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L40c744.  v0:= new `android.content.ComponentName`;
  #L40c748.  v1:= v12.`q1.c.a` @type ^`android.content.Context` @kind object;
  #L40c74c.  v2:= constclass @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService` @kind object;
  #L40c750.  call `<init>`(v0, v1, v2) @signature `Landroid/content/ComponentName;.<init>:(Landroid/content/Context;Ljava/lang/Class;)V` @kind direct;
  #L40c756.  v1:= v12.`q1.c.a` @type ^`android.content.Context` @kind object;
  #L40c75a.  v2:= "jobscheduler" @kind object;
  #L40c75e.  call temp:= `getSystemService`(v1, v2) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L40c764.  v1:= temp @kind object;
  #L40c766.  v1:= (`android.app.job.JobScheduler`) v1 @kind object;
  #L40c76a.  call temp:= `c`(v12, v13) @signature `Lq1/c;.c:(Lj1/p;)I` @kind virtual;
  #L40c770.  v2:= temp;
  #L40c772.  v3:= "JobInfoScheduler" @kind object;
  #L40c776.  if v15 != 0 then goto L40c792;
  #L40c77a.  call temp:= `d`(v12, v1, v2, v14) @signature `Lq1/c;.d:(Landroid/app/job/JobScheduler;II)Z` @kind direct;
  #L40c780.  v15:= temp;
  #L40c782.  if v15 == 0 then goto L40c792;
  #L40c786.  v14:= "Upload for context %s is already scheduled. Returning..." @kind object;
  #L40c78a.  call `b`(v3, v14, v13) @signature `Ln1/a;.b:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L40c790.  return @kind void;
  #L40c792.  v15:= v12.`q1.c.b` @type ^`r1.d` @kind object;
  #L40c796.  call temp:= `P`(v15, v13) @signature `Lr1/d;.P:(Lj1/p;)J` @kind interface;
  #L40c79c.  v10:= temp @kind wide;
  #L40c79e.  v4:= v12.`q1.c.c` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.c` @kind object;
  #L40c7a2.  v5:= new `android.app.job.JobInfo$Builder`;
  #L40c7a6.  call `<init>`(v5, v2, v0) @signature `Landroid/app/job/JobInfo$Builder;.<init>:(ILandroid/content/ComponentName;)V` @kind direct;
  #L40c7ac.  call temp:= `d`(v13) @signature `Lj1/p;.d:()Lh1/d;` @kind virtual;
  #L40c7b2.  v6:= temp @kind object;
  #L40c7b4.  v7:= v10 @kind wide;
  #L40c7b6.  v9:= v14;
  #L40c7b8.  call temp:= `c`(v4, v5, v6, v7, v9) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/c;.c:(Landroid/app/job/JobInfo$Builder;Lh1/d;JI)Landroid/app/job/JobInfo$Builder;` @kind virtual;
  #L40c7be.  v15:= temp @kind object;
  #L40c7c0.  v0:= new `android.os.PersistableBundle`;
  #L40c7c4.  call `<init>`(v0) @signature `Landroid/os/PersistableBundle;.<init>:()V` @kind direct;
  #L40c7ca.  v4:= "attemptNumber" @kind object;
  #L40c7ce.  call `putInt`(v0, v4, v14) @signature `Landroid/os/PersistableBundle;.putInt:(Ljava/lang/String;I)V` @kind virtual;
  #L40c7d4.  call temp:= `b`(v13) @signature `Lj1/p;.b:()Ljava/lang/String;` @kind virtual;
  #L40c7da.  v4:= temp @kind object;
  #L40c7dc.  v5:= "backendName" @kind object;
  #L40c7e0.  call `putString`(v0, v5, v4) @signature `Landroid/os/PersistableBundle;.putString:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L40c7e6.  call temp:= `d`(v13) @signature `Lj1/p;.d:()Lh1/d;` @kind virtual;
  #L40c7ec.  v4:= temp @kind object;
  #L40c7ee.  call temp:= `a`(v4) @signature `Lu1/a;.a:(Lh1/d;)I` @kind static;
  #L40c7f4.  v4:= temp;
  #L40c7f6.  v5:= "priority" @kind object;
  #L40c7fa.  call `putInt`(v0, v5, v4) @signature `Landroid/os/PersistableBundle;.putInt:(Ljava/lang/String;I)V` @kind virtual;
  #L40c800.  call temp:= `c`(v13) @signature `Lj1/p;.c:()[B` @kind virtual;
  #L40c806.  v4:= temp @kind object;
  #L40c808.  v5:= 0I;
  #L40c80a.  if v4 == 0 then goto L40c828;
  #L40c80e.  call temp:= `c`(v13) @signature `Lj1/p;.c:()[B` @kind virtual;
  #L40c814.  v4:= temp @kind object;
  #L40c816.  call temp:= `encodeToString`(v4, v5) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L40c81c.  v4:= temp @kind object;
  #L40c81e.  v6:= "extras" @kind object;
  #L40c822.  call `putString`(v0, v6, v4) @signature `Landroid/os/PersistableBundle;.putString:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L40c828.  call temp:= `setExtras`(v15, v0) @signature `Landroid/app/job/JobInfo$Builder;.setExtras:(Landroid/os/PersistableBundle;)Landroid/app/job/JobInfo$Builder;` @kind virtual;
  #L40c82e.  v0:= 5I;
  #L40c830.  v0:= new `java.lang.Object`[v0];
  #L40c834.  v0[v5]:= v13 @kind object;
  #L40c838.  v4:= 1I;
  #L40c83a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40c840.  v2:= temp @kind object;
  #L40c842.  v0[v4]:= v2 @kind object;
  #L40c846.  v2:= 2I;
  #L40c848.  v4:= v12.`q1.c.c` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.c` @kind object;
  #L40c84c.  call temp:= `d`(v13) @signature `Lj1/p;.d:()Lh1/d;` @kind virtual;
  #L40c852.  v13:= temp @kind object;
  #L40c854.  call temp:= `g`(v4, v13, v10, v14) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/c;.g:(Lh1/d;JI)J` @kind virtual;
  #L40c85a.  v4:= temp @kind wide;
  #L40c85c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L40c862.  v13:= temp @kind object;
  #L40c864.  v0[v2]:= v13 @kind object;
  #L40c868.  v13:= 3I;
  #L40c86a.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L40c870.  v2:= temp @kind object;
  #L40c872.  v0[v13]:= v2 @kind object;
  #L40c876.  v13:= 4I;
  #L40c878.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40c87e.  v14:= temp @kind object;
  #L40c880.  v0[v13]:= v14 @kind object;
  #L40c884.  v13:= "Scheduling upload for context %s with jobId=%d in %dms(Backend next call timestamp %d). Attempt %d" @kind object;
  #L40c888.  call `c`(v3, v13, v0) @signature `Ln1/a;.c:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L40c88e.  call temp:= `build`(v15) @signature `Landroid/app/job/JobInfo$Builder;.build:()Landroid/app/job/JobInfo;` @kind virtual;
  #L40c894.  v13:= temp @kind object;
  #L40c896.  call temp:= `schedule`(v1, v13) @signature `Landroid/app/job/JobScheduler;.schedule:(Landroid/app/job/JobInfo;)I` @kind virtual;
  #L40c89c.  return @kind void;
}
procedure `void` `b`(`q1.c` v1 @kind this, `j1.p` v2 @kind object, `int` v3 ) @signature `Lq1/c;.b:(Lj1/p;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c728.  v0:= 0I;
  #L40c72a.  call `a`(v1, v2, v3, v0) @signature `Lq1/c;.a:(Lj1/p;IZ)V` @kind virtual;
  #L40c730.  return @kind void;
}
procedure `int` `c`(`q1.c` v4 @kind this, `j1.p` v5 @kind object) @signature `Lq1/c;.c:(Lj1/p;)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40c650.  v0:= new `java.util.zip.Adler32`;
  #L40c654.  call `<init>`(v0) @signature `Ljava/util/zip/Adler32;.<init>:()V` @kind direct;
  #L40c65a.  v1:= v4.`q1.c.a` @type ^`android.content.Context` @kind object;
  #L40c65e.  call temp:= `getPackageName`(v1) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L40c664.  v1:= temp @kind object;
  #L40c666.  v2:= "UTF-8" @kind object;
  #L40c66a.  call temp:= `forName`(v2) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L40c670.  v3:= temp @kind object;
  #L40c672.  call temp:= `getBytes`(v1, v3) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L40c678.  v1:= temp @kind object;
  #L40c67a.  call `update`(v0, v1) @signature `Ljava/util/zip/Adler32;.update:([B)V` @kind virtual;
  #L40c680.  call temp:= `b`(v5) @signature `Lj1/p;.b:()Ljava/lang/String;` @kind virtual;
  #L40c686.  v1:= temp @kind object;
  #L40c688.  call temp:= `forName`(v2) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L40c68e.  v2:= temp @kind object;
  #L40c690.  call temp:= `getBytes`(v1, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L40c696.  v1:= temp @kind object;
  #L40c698.  call `update`(v0, v1) @signature `Ljava/util/zip/Adler32;.update:([B)V` @kind virtual;
  #L40c69e.  v1:= 4I;
  #L40c6a0.  call temp:= `allocate`(v1) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L40c6a6.  v1:= temp @kind object;
  #L40c6a8.  call temp:= `d`(v5) @signature `Lj1/p;.d:()Lh1/d;` @kind virtual;
  #L40c6ae.  v2:= temp @kind object;
  #L40c6b0.  call temp:= `a`(v2) @signature `Lu1/a;.a:(Lh1/d;)I` @kind static;
  #L40c6b6.  v2:= temp;
  #L40c6b8.  call temp:= `putInt`(v1, v2) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L40c6be.  v1:= temp @kind object;
  #L40c6c0.  call temp:= `array`(v1) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L40c6c6.  v1:= temp @kind object;
  #L40c6c8.  call `update`(v0, v1) @signature `Ljava/util/zip/Adler32;.update:([B)V` @kind virtual;
  #L40c6ce.  call temp:= `c`(v5) @signature `Lj1/p;.c:()[B` @kind virtual;
  #L40c6d4.  v1:= temp @kind object;
  #L40c6d6.  if v1 == 0 then goto L40c6e8;
  #L40c6da.  call temp:= `c`(v5) @signature `Lj1/p;.c:()[B` @kind virtual;
  #L40c6e0.  v5:= temp @kind object;
  #L40c6e2.  call `update`(v0, v5) @signature `Ljava/util/zip/Adler32;.update:([B)V` @kind virtual;
  #L40c6e8.  call temp:= `getValue`(v0) @signature `Ljava/util/zip/Adler32;.getValue:()J` @kind virtual;
  #L40c6ee.  v0:= temp @kind wide;
  #L40c6f0.  v5:= (`int`) v0 @kind l2i;
  #L40c6f2.  return v5;
}
