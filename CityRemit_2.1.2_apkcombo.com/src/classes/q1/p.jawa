record `q1.p` @kind class @AccessFlag PUBLIC {
  `android.content.Context` `q1.p.a` @AccessFlag PRIVATE_FINAL;
  `k1.b` `q1.p.b` @AccessFlag PRIVATE_FINAL;
  `r1.d` `q1.p.c` @AccessFlag PRIVATE_FINAL;
  `q1.v` `q1.p.d` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `q1.p.e` @AccessFlag PRIVATE_FINAL;
  `s1.b` `q1.p.f` @AccessFlag PRIVATE_FINAL;
  `t1.a` `q1.p.g` @AccessFlag PRIVATE_FINAL;
  `t1.a` `q1.p.h` @AccessFlag PRIVATE_FINAL;
  `r1.c` `q1.p.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`q1.p` v0 @kind this, `android.content.Context` v1 @kind object, `k1.b` v2 @kind object, `r1.d` v3 @kind object, `q1.v` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object, `s1.b` v6 @kind object, `t1.a` v7 @kind object, `t1.a` v8 @kind object, `r1.c` v9 @kind object) @signature `Lq1/p;.<init>:(Landroid/content/Context;Lk1/b;Lr1/d;Lq1/v;Ljava/util/concurrent/Executor;Ls1/b;Lt1/a;Lt1/a;Lr1/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40d314.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40d31a.  v0.`q1.p.a` @type ^`android.content.Context` := v1 @kind object;
  #L40d31e.  v0.`q1.p.b` @type ^`k1.b` := v2 @kind object;
  #L40d322.  v0.`q1.p.c` @type ^`r1.d` := v3 @kind object;
  #L40d326.  v0.`q1.p.d` @type ^`q1.v` := v4 @kind object;
  #L40d32a.  v0.`q1.p.e` @type ^`java.util.concurrent.Executor` := v5 @kind object;
  #L40d32e.  v0.`q1.p.f` @type ^`s1.b` := v6 @kind object;
  #L40d332.  v0.`q1.p.g` @type ^`t1.a` := v7 @kind object;
  #L40d336.  v0.`q1.p.h` @type ^`t1.a` := v8 @kind object;
  #L40d33a.  v0.`q1.p.i` @type ^`r1.c` := v9 @kind object;
  #L40d33e.  return @kind void;
}
procedure `void` `a`(`q1.p` v0 @kind object, `j1.p` v1 @kind object, `int` v2 , `java.lang.Runnable` v3 @kind object) @signature `Lq1/p;.a:(Lq1/p;Lj1/p;ILjava/lang/Runnable;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L40d2fc.  call `t`(v0, v1, v2, v3) @signature `Lq1/p;.t:(Lj1/p;ILjava/lang/Runnable;)V` @kind direct;
  #L40d302.  return @kind void;
}
procedure `java.lang.Boolean` `b`(`q1.p` v0 @kind object, `j1.p` v1 @kind object) @signature `Lq1/p;.b:(Lq1/p;Lj1/p;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L40d09c.  call temp:= `l`(v0, v1) @signature `Lq1/p;.l:(Lj1/p;)Ljava/lang/Boolean;` @kind direct;
  #L40d0a2.  v0:= temp @kind object;
  #L40d0a4.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`q1.p` v0 @kind object, `java.util.Map` v1 @kind object) @signature `Lq1/p;.c:(Lq1/p;Ljava/util/Map;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L40d11c.  call temp:= `q`(v0, v1) @signature `Lq1/p;.q:(Ljava/util/Map;)Ljava/lang/Object;` @kind direct;
  #L40d122.  v0:= temp @kind object;
  #L40d124.  return v0 @kind object;
}
procedure `java.lang.Iterable` `d`(`q1.p` v0 @kind object, `j1.p` v1 @kind object) @signature `Lq1/p;.d:(Lq1/p;Lj1/p;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L40d0e0.  call temp:= `m`(v0, v1) @signature `Lq1/p;.m:(Lj1/p;)Ljava/lang/Iterable;` @kind direct;
  #L40d0e6.  v0:= temp @kind object;
  #L40d0e8.  return v0 @kind object;
}
procedure `java.lang.Object` `e`(`q1.p` v0 @kind object, `java.lang.Iterable` v1 @kind object, `j1.p` v2 @kind object, `long` v3 ) @signature `Lq1/p;.e:(Lq1/p;Ljava/lang/Iterable;Lj1/p;J)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L40d138.  call temp:= `n`(v0, v1, v2, v3) @signature `Lq1/p;.n:(Ljava/lang/Iterable;Lj1/p;J)Ljava/lang/Object;` @kind direct;
  #L40d13e.  v0:= temp @kind object;
  #L40d140.  return v0 @kind object;
}
procedure `java.lang.Object` `f`(`q1.p` v0 @kind object, `j1.p` v1 @kind object, `long` v2 ) @signature `Lq1/p;.f:(Lq1/p;Lj1/p;J)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L40d154.  call temp:= `r`(v0, v1, v2) @signature `Lq1/p;.r:(Lj1/p;J)Ljava/lang/Object;` @kind direct;
  #L40d15a.  v0:= temp @kind object;
  #L40d15c.  return v0 @kind object;
}
procedure `java.lang.Object` `g`(`q1.p` v0 @kind object, `java.lang.Iterable` v1 @kind object) @signature `Lq1/p;.g:(Lq1/p;Ljava/lang/Iterable;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L40d170.  call temp:= `o`(v0, v1) @signature `Lq1/p;.o:(Ljava/lang/Iterable;)Ljava/lang/Object;` @kind direct;
  #L40d176.  v0:= temp @kind object;
  #L40d178.  return v0 @kind object;
}
procedure `java.lang.Object` `h`(`q1.p` v0 @kind object, `j1.p` v1 @kind object, `int` v2 ) @signature `Lq1/p;.h:(Lq1/p;Lj1/p;I)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L40d18c.  call temp:= `s`(v0, v1, v2) @signature `Lq1/p;.s:(Lj1/p;I)Ljava/lang/Object;` @kind direct;
  #L40d192.  v0:= temp @kind object;
  #L40d194.  return v0 @kind object;
}
procedure `java.lang.Object` `i`(`q1.p` v0 @kind object) @signature `Lq1/p;.i:(Lq1/p;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L40d1a8.  call temp:= `p`(v0) @signature `Lq1/p;.p:()Ljava/lang/Object;` @kind direct;
  #L40d1ae.  v0:= temp @kind object;
  #L40d1b0.  return v0 @kind object;
}
procedure `java.lang.Boolean` `l`(`q1.p` v1 @kind this, `j1.p` v2 @kind object) @signature `Lq1/p;.l:(Lj1/p;)Ljava/lang/Boolean;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L40d0b8.  v0:= v1.`q1.p.c` @type ^`r1.d` @kind object;
  #L40d0bc.  call temp:= `X`(v0, v2) @signature `Lr1/d;.X:(Lj1/p;)Z` @kind interface;
  #L40d0c2.  v2:= temp;
  #L40d0c4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L40d0ca.  v2:= temp @kind object;
  #L40d0cc.  return v2 @kind object;
}
procedure `java.lang.Iterable` `m`(`q1.p` v1 @kind this, `j1.p` v2 @kind object) @signature `Lq1/p;.m:(Lj1/p;)Ljava/lang/Iterable;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L40d0fc.  v0:= v1.`q1.p.c` @type ^`r1.d` @kind object;
  #L40d100.  call temp:= `w`(v0, v2) @signature `Lr1/d;.w:(Lj1/p;)Ljava/lang/Iterable;` @kind interface;
  #L40d106.  v2:= temp @kind object;
  #L40d108.  return v2 @kind object;
}
procedure `java.lang.Object` `n`(`q1.p` v2 @kind this, `java.lang.Iterable` v3 @kind object, `j1.p` v4 @kind object, `long` v5 ) @signature `Lq1/p;.n:(Ljava/lang/Iterable;Lj1/p;J)Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;

  #L40d1c4.  v0:= v2.`q1.p.c` @type ^`r1.d` @kind object;
  #L40d1c8.  call `Q`(v0, v3) @signature `Lr1/d;.Q:(Ljava/lang/Iterable;)V` @kind interface;
  #L40d1ce.  v3:= v2.`q1.p.c` @type ^`r1.d` @kind object;
  #L40d1d2.  v0:= v2.`q1.p.g` @type ^`t1.a` @kind object;
  #L40d1d6.  call temp:= `a`(v0) @signature `Lt1/a;.a:()J` @kind interface;
  #L40d1dc.  v0:= temp @kind wide;
  #L40d1de.  v0:= v0 + v5 @kind long;
  #L40d1e0.  call `F`(v3, v4, v0) @signature `Lr1/d;.F:(Lj1/p;J)V` @kind interface;
  #L40d1e6.  v3:= 0I;
  #L40d1e8.  return v3 @kind object;
}
procedure `java.lang.Object` `o`(`q1.p` v1 @kind this, `java.lang.Iterable` v2 @kind object) @signature `Lq1/p;.o:(Ljava/lang/Iterable;)Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L40d1fc.  v0:= v1.`q1.p.c` @type ^`r1.d` @kind object;
  #L40d200.  call `l`(v0, v2) @signature `Lr1/d;.l:(Ljava/lang/Iterable;)V` @kind interface;
  #L40d206.  v2:= 0I;
  #L40d208.  return v2 @kind object;
}
procedure `java.lang.Object` `p`(`q1.p` v1 @kind this) @signature `Lq1/p;.p:()Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L40d21c.  v0:= v1.`q1.p.i` @type ^`r1.c` @kind object;
  #L40d220.  call `h`(v0) @signature `Lr1/c;.h:()V` @kind interface;
  #L40d226.  v0:= 0I;
  #L40d228.  return v0 @kind object;
}
procedure `java.lang.Object` `q`(`q1.p` v5 @kind this, `java.util.Map` v6 @kind object) @signature `Lq1/p;.q:(Ljava/util/Map;)Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L40d23c.  call temp:= `entrySet`(v6) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L40d242.  v6:= temp @kind object;
  #L40d244.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40d24a.  v6:= temp @kind object;
  #L40d24c.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L40d252.  v0:= temp;
  #L40d254.  if v0 == 0 then goto L40d296;
  #L40d258.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L40d25e.  v0:= temp @kind object;
  #L40d260.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L40d264.  v1:= v5.`q1.p.i` @type ^`r1.c` @kind object;
  #L40d268.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L40d26e.  v2:= temp @kind object;
  #L40d270.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L40d274.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40d27a.  v2:= temp;
  #L40d27c.  v2:= (`long`) v2 @kind i2l;
  #L40d27e.  v4:= `@@m1.c$b.u` @type ^`m1.c$b` @kind object;
  #L40d282.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L40d288.  v0:= temp @kind object;
  #L40d28a.  v0:= (`java.lang.String`) v0 @kind object;
  #L40d28e.  call `e`(v1, v2, v4, v0) @signature `Lr1/c;.e:(JLm1/c$b;Ljava/lang/String;)V` @kind interface;
  #L40d294.  goto L40d24c;
  #L40d296.  v6:= 0I;
  #L40d298.  return v6 @kind object;
}
procedure `java.lang.Object` `r`(`q1.p` v3 @kind this, `j1.p` v4 @kind object, `long` v5 ) @signature `Lq1/p;.r:(Lj1/p;J)Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L40d2ac.  v0:= v3.`q1.p.c` @type ^`r1.d` @kind object;
  #L40d2b0.  v1:= v3.`q1.p.g` @type ^`t1.a` @kind object;
  #L40d2b4.  call temp:= `a`(v1) @signature `Lt1/a;.a:()J` @kind interface;
  #L40d2ba.  v1:= temp @kind wide;
  #L40d2bc.  v1:= v1 + v5 @kind long;
  #L40d2be.  call `F`(v0, v4, v1) @signature `Lr1/d;.F:(Lj1/p;J)V` @kind interface;
  #L40d2c4.  v4:= 0I;
  #L40d2c6.  return v4 @kind object;
}
procedure `java.lang.Object` `s`(`q1.p` v1 @kind this, `j1.p` v2 @kind object, `int` v3 ) @signature `Lq1/p;.s:(Lj1/p;I)Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L40d2d8.  v0:= v1.`q1.p.d` @type ^`q1.v` @kind object;
  #L40d2dc.  v3:= v3 + 1;
  #L40d2e0.  call `b`(v0, v2, v3) @signature `Lq1/v;.b:(Lj1/p;I)V` @kind interface;
  #L40d2e6.  v2:= 0I;
  #L40d2e8.  return v2 @kind object;
}
procedure `void` `t`(`q1.p` v3 @kind this, `j1.p` v4 @kind object, `int` v5 , `java.lang.Runnable` v6 @kind object) @signature `Lq1/p;.t:(Lj1/p;ILjava/lang/Runnable;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L40d350.  v0:= v3.`q1.p.f` @type ^`s1.b` @kind object;
  #L40d354.  v1:= v3.`q1.p.c` @type ^`r1.d` @kind object;
  #L40d358.  call temp:= `requireNonNull`(v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L40d35e.  v2:= new `q1.f`;
  #L40d362.  call `<init>`(v2, v1) @signature `Lq1/f;.<init>:(Lr1/d;)V` @kind direct;
  #L40d368.  call temp:= `a`(v0, v2) @signature `Ls1/b;.a:(Ls1/b$a;)Ljava/lang/Object;` @kind interface;
  #L40d36e.  call temp:= `k`(v3) @signature `Lq1/p;.k:()Z` @kind virtual;
  #L40d374.  v0:= temp;
  #L40d376.  if v0 != 0 then goto L40d390;
  #L40d37a.  v0:= v3.`q1.p.f` @type ^`s1.b` @kind object;
  #L40d37e.  v1:= new `q1.j`;
  #L40d382.  call `<init>`(v1, v3, v4, v5) @signature `Lq1/j;.<init>:(Lq1/p;Lj1/p;I)V` @kind direct;
  #L40d388.  call temp:= `a`(v0, v1) @signature `Ls1/b;.a:(Ls1/b$a;)Ljava/lang/Object;` @kind interface;
  #L40d38e.  goto L40d3aa;
  #L40d390.  call temp:= `u`(v3, v4, v5) @signature `Lq1/p;.u:(Lj1/p;I)Lcom/google/android/datatransport/runtime/backends/e;` @kind virtual;
  #L40d396.  goto L40d3aa;
  #L40d398.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40d39a.  goto L40d3b2;
  #L40d39c.  v0:= v3.`q1.p.d` @type ^`q1.v` @kind object;
  #L40d3a0.  v5:= v5 + 1;
  #L40d3a4.  call `b`(v0, v4, v5) @signature `Lq1/v;.b:(Lj1/p;I)V` @kind interface;
  #L40d3aa.  call `run`(v6) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L40d3b0.  return @kind void;
  #L40d3b2.  call `run`(v6) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L40d3b8.  throw v4;
  catch `s1.a` @[L40d350..L40d396] goto L40d39c;
  catch `java.lang.Throwable` @[L40d350..L40d396] goto L40d398;
  catch `java.lang.Throwable` @[L40d39c..L40d3aa] goto L40d398;
}
procedure `j1.i` `j`(`q1.p` v4 @kind this, `k1.g` v5 @kind object) @signature `Lq1/p;.j:(Lk1/g;)Lj1/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40cff4.  v0:= v4.`q1.p.f` @type ^`s1.b` @kind object;
  #L40cff8.  v1:= v4.`q1.p.i` @type ^`r1.c` @kind object;
  #L40cffc.  call temp:= `requireNonNull`(v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L40d002.  v2:= new `q1.o`;
  #L40d006.  call `<init>`(v2, v1) @signature `Lq1/o;.<init>:(Lr1/c;)V` @kind direct;
  #L40d00c.  call temp:= `a`(v0, v2) @signature `Ls1/b;.a:(Ls1/b$a;)Ljava/lang/Object;` @kind interface;
  #L40d012.  v0:= temp @kind object;
  #L40d014.  v0:= (`m1.a`) v0 @kind object;
  #L40d018.  call temp:= `a`() @signature `Lj1/i;.a:()Lj1/i$a;` @kind static;
  #L40d01e.  v1:= temp @kind object;
  #L40d020.  v2:= v4.`q1.p.g` @type ^`t1.a` @kind object;
  #L40d024.  call temp:= `a`(v2) @signature `Lt1/a;.a:()J` @kind interface;
  #L40d02a.  v2:= temp @kind wide;
  #L40d02c.  call temp:= `i`(v1, v2) @signature `Lj1/i$a;.i:(J)Lj1/i$a;` @kind virtual;
  #L40d032.  v1:= temp @kind object;
  #L40d034.  v2:= v4.`q1.p.h` @type ^`t1.a` @kind object;
  #L40d038.  call temp:= `a`(v2) @signature `Lt1/a;.a:()J` @kind interface;
  #L40d03e.  v2:= temp @kind wide;
  #L40d040.  call temp:= `k`(v1, v2) @signature `Lj1/i$a;.k:(J)Lj1/i$a;` @kind virtual;
  #L40d046.  v1:= temp @kind object;
  #L40d048.  v2:= "GDT_CLIENT_METRICS" @kind object;
  #L40d04c.  call temp:= `j`(v1, v2) @signature `Lj1/i$a;.j:(Ljava/lang/String;)Lj1/i$a;` @kind virtual;
  #L40d052.  v1:= temp @kind object;
  #L40d054.  v2:= new `j1.h`;
  #L40d058.  v3:= "proto" @kind object;
  #L40d05c.  call temp:= `b`(v3) @signature `Lh1/b;.b:(Ljava/lang/String;)Lh1/b;` @kind static;
  #L40d062.  v3:= temp @kind object;
  #L40d064.  call temp:= `f`(v0) @signature `Lm1/a;.f:()[B` @kind virtual;
  #L40d06a.  v0:= temp @kind object;
  #L40d06c.  call `<init>`(v2, v3, v0) @signature `Lj1/h;.<init>:(Lh1/b;[B)V` @kind direct;
  #L40d072.  call temp:= `h`(v1, v2) @signature `Lj1/i$a;.h:(Lj1/h;)Lj1/i$a;` @kind virtual;
  #L40d078.  v0:= temp @kind object;
  #L40d07a.  call temp:= `d`(v0) @signature `Lj1/i$a;.d:()Lj1/i;` @kind virtual;
  #L40d080.  v0:= temp @kind object;
  #L40d082.  call temp:= `a`(v5, v0) @signature `Lk1/g;.a:(Lj1/i;)Lj1/i;` @kind interface;
  #L40d088.  v5:= temp @kind object;
  #L40d08a.  return v5 @kind object;
}
procedure `boolean` `k`(`q1.p` v2 @kind this) @signature `Lq1/p;.k:()Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L40cd3c.  v0:= v2.`q1.p.a` @type ^`android.content.Context` @kind object;
  #L40cd40.  v1:= "connectivity" @kind object;
  #L40cd44.  call temp:= `getSystemService`(v0, v1) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L40cd4a.  v0:= temp @kind object;
  #L40cd4c.  v0:= (`android.net.ConnectivityManager`) v0 @kind object;
  #L40cd50.  call temp:= `getActiveNetworkInfo`(v0) @signature `Landroid/net/ConnectivityManager;.getActiveNetworkInfo:()Landroid/net/NetworkInfo;` @kind virtual;
  #L40cd56.  v0:= temp @kind object;
  #L40cd58.  if v0 == 0 then goto L40cd6c;
  #L40cd5c.  call temp:= `isConnected`(v0) @signature `Landroid/net/NetworkInfo;.isConnected:()Z` @kind virtual;
  #L40cd62.  v0:= temp;
  #L40cd64.  if v0 == 0 then goto L40cd6c;
  #L40cd68.  v0:= 1I;
  #L40cd6a.  goto L40cd6e;
  #L40cd6c.  v0:= 0I;
  #L40cd6e.  return v0;
}
procedure `com.google.android.datatransport.runtime.backends.e` `u`(`q1.p` v11 @kind this, `j1.p` v12 @kind object, `int` v13 ) @signature `Lq1/p;.u:(Lj1/p;I)Lcom/google/android/datatransport/runtime/backends/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L40cd80.  v0:= v11.`q1.p.b` @type ^`k1.b` @kind object;
  #L40cd84.  call temp:= `b`(v12) @signature `Lj1/p;.b:()Ljava/lang/String;` @kind virtual;
  #L40cd8a.  v1:= temp @kind object;
  #L40cd8c.  call temp:= `a`(v0, v1) @signature `Lk1/b;.a:(Ljava/lang/String;)Lk1/g;` @kind interface;
  #L40cd92.  v0:= temp @kind object;
  #L40cd94.  v1:= 0L;
  #L40cd98.  call temp:= `e`(v1) @signature `Lcom/google/android/datatransport/runtime/backends/e;.e:(J)Lcom/google/android/datatransport/runtime/backends/e;` @kind static;
  #L40cd9e.  v3:= temp @kind object;
  #L40cda0.  v8:= v1 @kind wide;
  #L40cda2.  v1:= v11.`q1.p.f` @type ^`s1.b` @kind object;
  #L40cda6.  v2:= new `q1.h`;
  #L40cdaa.  call `<init>`(v2, v11, v12) @signature `Lq1/h;.<init>:(Lq1/p;Lj1/p;)V` @kind direct;
  #L40cdb0.  call temp:= `a`(v1, v2) @signature `Ls1/b;.a:(Ls1/b$a;)Ljava/lang/Object;` @kind interface;
  #L40cdb6.  v1:= temp @kind object;
  #L40cdb8.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L40cdbc.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L40cdc2.  v1:= temp;
  #L40cdc4.  if v1 == 0 then goto L40cfce;
  #L40cdc8.  v1:= v11.`q1.p.f` @type ^`s1.b` @kind object;
  #L40cdcc.  v2:= new `q1.i`;
  #L40cdd0.  call `<init>`(v2, v11, v12) @signature `Lq1/i;.<init>:(Lq1/p;Lj1/p;)V` @kind direct;
  #L40cdd6.  call temp:= `a`(v1, v2) @signature `Ls1/b;.a:(Ls1/b$a;)Ljava/lang/Object;` @kind interface;
  #L40cddc.  v1:= temp @kind object;
  #L40cdde.  v6:= v1 @kind object;
  #L40cde0.  v6:= (`java.lang.Iterable`) v6 @kind object;
  #L40cde4.  call temp:= `iterator`(v6) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40cdea.  v1:= temp @kind object;
  #L40cdec.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L40cdf2.  v1:= temp;
  #L40cdf4.  if v1 != 0 then goto L40cdfa;
  #L40cdf8.  return v3 @kind object;
  #L40cdfa.  if v0 != 0 then goto L40ce18;
  #L40cdfe.  v1:= "Uploader" @kind object;
  #L40ce02.  v2:= "Unknown backend for %s, deleting event batch for it..." @kind object;
  #L40ce06.  call `b`(v1, v2, v12) @signature `Ln1/a;.b:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L40ce0c.  call temp:= `a`() @signature `Lcom/google/android/datatransport/runtime/backends/e;.a:()Lcom/google/android/datatransport/runtime/backends/e;` @kind static;
  #L40ce12.  v1:= temp @kind object;
  #L40ce14.  v3:= v1 @kind object;
  #L40ce16.  goto L40ce9e;
  #L40ce18.  v1:= new `java.util.ArrayList`;
  #L40ce1c.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L40ce22.  call temp:= `iterator`(v6) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40ce28.  v2:= temp @kind object;
  #L40ce2a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L40ce30.  v3:= temp;
  #L40ce32.  if v3 == 0 then goto L40ce52;
  #L40ce36.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L40ce3c.  v3:= temp @kind object;
  #L40ce3e.  v3:= (`r1.k`) v3 @kind object;
  #L40ce42.  call temp:= `b`(v3) @signature `Lr1/k;.b:()Lj1/i;` @kind virtual;
  #L40ce48.  v3:= temp @kind object;
  #L40ce4a.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L40ce50.  goto L40ce2a;
  #L40ce52.  call temp:= `e`(v12) @signature `Lj1/p;.e:()Z` @kind virtual;
  #L40ce58.  v2:= temp;
  #L40ce5a.  if v2 == 0 then goto L40ce6c;
  #L40ce5e.  call temp:= `j`(v11, v0) @signature `Lq1/p;.j:(Lk1/g;)Lj1/i;` @kind virtual;
  #L40ce64.  v2:= temp @kind object;
  #L40ce66.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L40ce6c.  call temp:= `a`() @signature `Lcom/google/android/datatransport/runtime/backends/d;.a:()Lcom/google/android/datatransport/runtime/backends/d$a;` @kind static;
  #L40ce72.  v2:= temp @kind object;
  #L40ce74.  call temp:= `b`(v2, v1) @signature `Lcom/google/android/datatransport/runtime/backends/d$a;.b:(Ljava/lang/Iterable;)Lcom/google/android/datatransport/runtime/backends/d$a;` @kind virtual;
  #L40ce7a.  v1:= temp @kind object;
  #L40ce7c.  call temp:= `c`(v12) @signature `Lj1/p;.c:()[B` @kind virtual;
  #L40ce82.  v2:= temp @kind object;
  #L40ce84.  call temp:= `c`(v1, v2) @signature `Lcom/google/android/datatransport/runtime/backends/d$a;.c:([B)Lcom/google/android/datatransport/runtime/backends/d$a;` @kind virtual;
  #L40ce8a.  v1:= temp @kind object;
  #L40ce8c.  call temp:= `a`(v1) @signature `Lcom/google/android/datatransport/runtime/backends/d$a;.a:()Lcom/google/android/datatransport/runtime/backends/d;` @kind virtual;
  #L40ce92.  v1:= temp @kind object;
  #L40ce94.  call temp:= `b`(v0, v1) @signature `Lk1/g;.b:(Lcom/google/android/datatransport/runtime/backends/d;)Lcom/google/android/datatransport/runtime/backends/e;` @kind interface;
  #L40ce9a.  v1:= temp @kind object;
  #L40ce9c.  goto L40ce14;
  #L40ce9e.  call temp:= `c`(v3) @signature `Lcom/google/android/datatransport/runtime/backends/e;.c:()Lcom/google/android/datatransport/runtime/backends/e$a;` @kind virtual;
  #L40cea4.  v1:= temp @kind object;
  #L40cea6.  v2:= `@@com.google.android.datatransport.runtime.backends.e$a.p` @type ^`com.google.android.datatransport.runtime.backends.e$a` @kind object;
  #L40ceaa.  v10:= 1I;
  #L40ceac.  if v1 != v2 then goto L40ced8;
  #L40ceb0.  v0:= v11.`q1.p.f` @type ^`s1.b` @kind object;
  #L40ceb4.  v1:= new `q1.m`;
  #L40ceb8.  v4:= v1 @kind object;
  #L40ceba.  v5:= v11 @kind object;
  #L40cebc.  v7:= v12 @kind object;
  #L40cebe.  call `<init>`(v4, v5, v6, v7, v8) @signature `Lq1/m;.<init>:(Lq1/p;Ljava/lang/Iterable;Lj1/p;J)V` @kind direct;
  #L40cec4.  call temp:= `a`(v0, v1) @signature `Ls1/b;.a:(Ls1/b$a;)Ljava/lang/Object;` @kind interface;
  #L40ceca.  v0:= v11.`q1.p.d` @type ^`q1.v` @kind object;
  #L40cece.  v13:= v13 + v10 @kind int;
  #L40ced0.  call `a`(v0, v12, v13, v10) @signature `Lq1/v;.a:(Lj1/p;IZ)V` @kind interface;
  #L40ced6.  return v3 @kind object;
  #L40ced8.  v1:= v11.`q1.p.f` @type ^`s1.b` @kind object;
  #L40cedc.  v2:= new `q1.l`;
  #L40cee0.  call `<init>`(v2, v11, v6) @signature `Lq1/l;.<init>:(Lq1/p;Ljava/lang/Iterable;)V` @kind direct;
  #L40cee6.  call temp:= `a`(v1, v2) @signature `Ls1/b;.a:(Ls1/b$a;)Ljava/lang/Object;` @kind interface;
  #L40ceec.  call temp:= `c`(v3) @signature `Lcom/google/android/datatransport/runtime/backends/e;.c:()Lcom/google/android/datatransport/runtime/backends/e$a;` @kind virtual;
  #L40cef2.  v1:= temp @kind object;
  #L40cef4.  v2:= `@@com.google.android.datatransport.runtime.backends.e$a.o` @type ^`com.google.android.datatransport.runtime.backends.e$a` @kind object;
  #L40cef8.  if v1 != v2 then goto L40cf30;
  #L40cefc.  call temp:= `b`(v3) @signature `Lcom/google/android/datatransport/runtime/backends/e;.b:()J` @kind virtual;
  #L40cf02.  v1:= temp @kind wide;
  #L40cf04.  call temp:= `max`(v8, v1) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L40cf0a.  v1:= temp @kind wide;
  #L40cf0c.  call temp:= `e`(v12) @signature `Lj1/p;.e:()Z` @kind virtual;
  #L40cf12.  v4:= temp;
  #L40cf14.  if v4 == 0 then goto L40cda0;
  #L40cf18.  v4:= v11.`q1.p.f` @type ^`s1.b` @kind object;
  #L40cf1c.  v5:= new `q1.g`;
  #L40cf20.  call `<init>`(v5, v11) @signature `Lq1/g;.<init>:(Lq1/p;)V` @kind direct;
  #L40cf26.  call temp:= `a`(v4, v5) @signature `Ls1/b;.a:(Ls1/b$a;)Ljava/lang/Object;` @kind interface;
  #L40cf2c.  goto L40cda0;
  #L40cf30.  call temp:= `c`(v3) @signature `Lcom/google/android/datatransport/runtime/backends/e;.c:()Lcom/google/android/datatransport/runtime/backends/e$a;` @kind virtual;
  #L40cf36.  v1:= temp @kind object;
  #L40cf38.  v2:= `@@com.google.android.datatransport.runtime.backends.e$a.r` @type ^`com.google.android.datatransport.runtime.backends.e$a` @kind object;
  #L40cf3c.  if v1 != v2 then goto L40cda2;
  #L40cf40.  v1:= new `java.util.HashMap`;
  #L40cf44.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L40cf4a.  call temp:= `iterator`(v6) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40cf50.  v2:= temp @kind object;
  #L40cf52.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L40cf58.  v4:= temp;
  #L40cf5a.  if v4 == 0 then goto L40cfb6;
  #L40cf5e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L40cf64.  v4:= temp @kind object;
  #L40cf66.  v4:= (`r1.k`) v4 @kind object;
  #L40cf6a.  call temp:= `b`(v4) @signature `Lr1/k;.b:()Lj1/i;` @kind virtual;
  #L40cf70.  v4:= temp @kind object;
  #L40cf72.  call temp:= `j`(v4) @signature `Lj1/i;.j:()Ljava/lang/String;` @kind virtual;
  #L40cf78.  v4:= temp @kind object;
  #L40cf7a.  call temp:= `containsKey`(v1, v4) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L40cf80.  v5:= temp;
  #L40cf82.  if v5 != 0 then goto L40cf90;
  #L40cf86.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40cf8c.  v5:= temp @kind object;
  #L40cf8e.  goto L40cfae;
  #L40cf90.  call temp:= `get`(v1, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40cf96.  v5:= temp @kind object;
  #L40cf98.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L40cf9c.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40cfa2.  v5:= temp;
  #L40cfa4.  v5:= v5 + v10 @kind int;
  #L40cfa6.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40cfac.  v5:= temp @kind object;
  #L40cfae.  call temp:= `put`(v1, v4, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40cfb4.  goto L40cf52;
  #L40cfb6.  v2:= v11.`q1.p.f` @type ^`s1.b` @kind object;
  #L40cfba.  v4:= new `q1.n`;
  #L40cfbe.  call `<init>`(v4, v11, v1) @signature `Lq1/n;.<init>:(Lq1/p;Ljava/util/Map;)V` @kind direct;
  #L40cfc4.  call temp:= `a`(v2, v4) @signature `Ls1/b;.a:(Ls1/b$a;)Ljava/lang/Object;` @kind interface;
  #L40cfca.  goto L40cda2;
  #L40cfce.  v13:= v11.`q1.p.f` @type ^`s1.b` @kind object;
  #L40cfd2.  v0:= new `q1.k`;
  #L40cfd6.  call `<init>`(v0, v11, v12, v8) @signature `Lq1/k;.<init>:(Lq1/p;Lj1/p;J)V` @kind direct;
  #L40cfdc.  call temp:= `a`(v13, v0) @signature `Ls1/b;.a:(Ls1/b$a;)Ljava/lang/Object;` @kind interface;
  #L40cfe2.  return v3 @kind object;
}
procedure `void` `v`(`q1.p` v2 @kind this, `j1.p` v3 @kind object, `int` v4 , `java.lang.Runnable` v5 @kind object) @signature `Lq1/p;.v:(Lj1/p;ILjava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40d3e4.  v0:= v2.`q1.p.e` @type ^`java.util.concurrent.Executor` @kind object;
  #L40d3e8.  v1:= new `q1.e`;
  #L40d3ec.  call `<init>`(v1, v2, v3, v4, v5) @signature `Lq1/e;.<init>:(Lq1/p;Lj1/p;ILjava/lang/Runnable;)V` @kind direct;
  #L40d3f2.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L40d3f8.  return @kind void;
}
