record `q1.t` @kind class @AccessFlag PUBLIC {
  `java.util.concurrent.Executor` `q1.t.a` @AccessFlag PRIVATE_FINAL;
  `r1.d` `q1.t.b` @AccessFlag PRIVATE_FINAL;
  `q1.v` `q1.t.c` @AccessFlag PRIVATE_FINAL;
  `s1.b` `q1.t.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`q1.t` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `r1.d` v2 @kind object, `q1.v` v3 @kind object, `s1.b` v4 @kind object) @signature `Lq1/t;.<init>:(Ljava/util/concurrent/Executor;Lr1/d;Lq1/v;Ls1/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L40d5dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40d5e2.  v0.`q1.t.a` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L40d5e6.  v0.`q1.t.b` @type ^`r1.d` := v2 @kind object;
  #L40d5ea.  v0.`q1.t.c` @type ^`q1.v` := v3 @kind object;
  #L40d5ee.  v0.`q1.t.d` @type ^`s1.b` := v4 @kind object;
  #L40d5f2.  return @kind void;
}
procedure `java.lang.Object` `a`(`q1.t` v0 @kind object) @signature `Lq1/t;.a:(Lq1/t;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L40d558.  call temp:= `d`(v0) @signature `Lq1/t;.d:()Ljava/lang/Object;` @kind direct;
  #L40d55e.  v0:= temp @kind object;
  #L40d560.  return v0 @kind object;
}
procedure `void` `b`(`q1.t` v0 @kind object) @signature `Lq1/t;.b:(Lq1/t;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L40d5c4.  call `e`(v0) @signature `Lq1/t;.e:()V` @kind direct;
  #L40d5ca.  return @kind void;
}
procedure `java.lang.Object` `d`(`q1.t` v4 @kind this) @signature `Lq1/t;.d:()Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40d574.  v0:= v4.`q1.t.b` @type ^`r1.d` @kind object;
  #L40d578.  call temp:= `C`(v0) @signature `Lr1/d;.C:()Ljava/lang/Iterable;` @kind interface;
  #L40d57e.  v0:= temp @kind object;
  #L40d580.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40d586.  v0:= temp @kind object;
  #L40d588.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L40d58e.  v1:= temp;
  #L40d590.  if v1 == 0 then goto L40d5ae;
  #L40d594.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L40d59a.  v1:= temp @kind object;
  #L40d59c.  v1:= (`j1.p`) v1 @kind object;
  #L40d5a0.  v2:= v4.`q1.t.c` @type ^`q1.v` @kind object;
  #L40d5a4.  v3:= 1I;
  #L40d5a6.  call `b`(v2, v1, v3) @signature `Lq1/v;.b:(Lj1/p;I)V` @kind interface;
  #L40d5ac.  goto L40d588;
  #L40d5ae.  v0:= 0I;
  #L40d5b0.  return v0 @kind object;
}
procedure `void` `e`(`q1.t` v2 @kind this) @signature `Lq1/t;.e:()V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;

  #L40d62c.  v0:= v2.`q1.t.d` @type ^`s1.b` @kind object;
  #L40d630.  v1:= new `q1.s`;
  #L40d634.  call `<init>`(v1, v2) @signature `Lq1/s;.<init>:(Lq1/t;)V` @kind direct;
  #L40d63a.  call temp:= `a`(v0, v1) @signature `Ls1/b;.a:(Ls1/b$a;)Ljava/lang/Object;` @kind interface;
  #L40d640.  return @kind void;
}
procedure `void` `c`(`q1.t` v2 @kind this) @signature `Lq1/t;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40d604.  v0:= v2.`q1.t.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L40d608.  v1:= new `q1.r`;
  #L40d60c.  call `<init>`(v1, v2) @signature `Lq1/r;.<init>:(Lq1/t;)V` @kind direct;
  #L40d612.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L40d618.  return @kind void;
}
