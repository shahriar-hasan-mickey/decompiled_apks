record `k8.a` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `k8.a.a` @AccessFlag FINAL;
  `java.lang.reflect.Type` `k8.a.b` @AccessFlag FINAL;
  `int` `k8.a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`k8.a` v2 @kind this) @signature `Lk8/a;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3acd18.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3acd1e.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3acd24.  v0:= temp @kind object;
  #L3acd26.  call temp:= `d`(v0) @signature `Lk8/a;.d:(Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L3acd2c.  v0:= temp @kind object;
  #L3acd2e.  v2.`k8.a.b` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L3acd32.  call temp:= `k`(v0) @signature `Lf8/b;.k:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L3acd38.  v1:= temp @kind object;
  #L3acd3a.  v2.`k8.a.a` @type ^`java.lang.Class` := v1 @kind object;
  #L3acd3e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3acd44.  v0:= temp;
  #L3acd46.  v2.`k8.a.c` @type ^`int` := v0;
  #L3acd4a.  return @kind void;
}
procedure `void` `<init>`(`k8.a` v1 @kind this, `java.lang.reflect.Type` v2 @kind object) @signature `Lk8/a;.<init>:(Ljava/lang/reflect/Type;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3acd5c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3acd62.  call temp:= `b`(v2) @signature `Lf8/a;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3acd68.  v2:= temp @kind object;
  #L3acd6a.  v2:= (`java.lang.reflect.Type`) v2 @kind object;
  #L3acd6e.  call temp:= `b`(v2) @signature `Lf8/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L3acd74.  v2:= temp @kind object;
  #L3acd76.  v1.`k8.a.b` @type ^`java.lang.reflect.Type` := v2 @kind object;
  #L3acd7a.  call temp:= `k`(v2) @signature `Lf8/b;.k:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L3acd80.  v0:= temp @kind object;
  #L3acd82.  v1.`k8.a.a` @type ^`java.lang.Class` := v0 @kind object;
  #L3acd86.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3acd8c.  v2:= temp;
  #L3acd8e.  v1.`k8.a.c` @type ^`int` := v2;
  #L3acd92.  return @kind void;
}
procedure `k8.a` `a`(`java.lang.Class` v1 @kind object) @signature `Lk8/a;.a:(Ljava/lang/Class;)Lk8/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3acce0.  v0:= new `k8.a`;
  #L3acce4.  call `<init>`(v0, v1) @signature `Lk8/a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L3accea.  return v0 @kind object;
}
procedure `k8.a` `b`(`java.lang.reflect.Type` v1 @kind object) @signature `Lk8/a;.b:(Ljava/lang/reflect/Type;)Lk8/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3accfc.  v0:= new `k8.a`;
  #L3acd00.  call `<init>`(v0, v1) @signature `Lk8/a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L3acd06.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `d`(`java.lang.Class` v1 @kind object) @signature `Lk8/a;.d:(Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;

  #L3acc7c.  call temp:= `getGenericSuperclass`(v1) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L3acc82.  v1:= temp @kind object;
  #L3acc84.  v0:= instanceof @variable v1 @type ^`java.lang.Class` @kind boolean;
  #L3acc88.  if v0 != 0 then goto L3acca8;
  #L3acc8c.  v1:= (`java.lang.reflect.ParameterizedType`) v1 @kind object;
  #L3acc90.  call temp:= `getActualTypeArguments`(v1) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L3acc96.  v1:= temp @kind object;
  #L3acc98.  v0:= 0I;
  #L3acc9a.  v1:= v1[v0] @kind object;
  #L3acc9e.  call temp:= `b`(v1) @signature `Lf8/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L3acca4.  v1:= temp @kind object;
  #L3acca6.  return v1 @kind object;
  #L3acca8.  v1:= new `java.lang.RuntimeException`;
  #L3accac.  v0:= "Missing type parameter." @kind object;
  #L3accb0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3accb6.  throw v1;
}
procedure `java.lang.Class` `c`(`k8.a` v1 @kind this) @signature `Lk8/a;.c:()Ljava/lang/Class;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3acc44.  v0:= v1.`k8.a.a` @type ^`java.lang.Class` @kind object;
  #L3acc48.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `e`(`k8.a` v1 @kind this) @signature `Lk8/a;.e:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3accc8.  v0:= v1.`k8.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L3acccc.  return v0 @kind object;
}
procedure `boolean` `equals`(`k8.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lk8/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3acbf4.  v0:= instanceof @variable v2 @type ^`k8.a` @kind boolean;
  #L3acbf8.  if v0 == 0 then goto L3acc18;
  #L3acbfc.  v0:= v1.`k8.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L3acc00.  v2:= (`k8.a`) v2 @kind object;
  #L3acc04.  v2:= v2.`k8.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L3acc08.  call temp:= `f`(v0, v2) @signature `Lf8/b;.f:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @kind static;
  #L3acc0e.  v2:= temp;
  #L3acc10.  if v2 == 0 then goto L3acc18;
  #L3acc14.  v2:= 1I;
  #L3acc16.  goto L3acc1a;
  #L3acc18.  v2:= 0I;
  #L3acc1a.  return v2;
}
procedure `int` `hashCode`(`k8.a` v1 @kind this) @signature `Lk8/a;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3acc2c.  v0:= v1.`k8.a.c` @type ^`int`;
  #L3acc30.  return v0;
}
procedure `java.lang.String` `toString`(`k8.a` v1 @kind this) @signature `Lk8/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3acc5c.  v0:= v1.`k8.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L3acc60.  call temp:= `u`(v0) @signature `Lf8/b;.u:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L3acc66.  v0:= temp @kind object;
  #L3acc68.  return v0 @kind object;
}
