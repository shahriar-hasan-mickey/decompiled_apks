record `ic.a$a` @kind class @AccessFlag  extends `qc.s` @kind interface {
  `boolean` `ic.a$a.o` @AccessFlag ;
  `qc.e` `ic.a$a.p` @AccessFlag FINAL_SYNTHETIC;
  `ic.b` `ic.a$a.q` @AccessFlag FINAL_SYNTHETIC;
  `qc.d` `ic.a$a.r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`ic.a$a` v0 @kind this, `ic.a` v1 @kind object, `qc.e` v2 @kind object, `ic.b` v3 @kind object, `qc.d` v4 @kind object) @signature `Lic/a$a;.<init>:(Lic/a;Lqc/e;Lic/b;Lqc/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L35e4cc.  v0.`ic.a$a.p` @type ^`qc.e` := v2 @kind object;
  #L35e4d0.  v0.`ic.a$a.q` @type ^`ic.b` := v3 @kind object;
  #L35e4d4.  v0.`ic.a$a.r` @type ^`qc.d` := v4 @kind object;
  #L35e4d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35e4de.  return @kind void;
}
procedure `long` `T`(`ic.a$a` v8 @kind this, `qc.c` v9 @kind object, `long` v10 ) @signature `Lic/a$a;.T:(Lqc/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L35e410.  v0:= 1I;
  #L35e412.  v1:= v8.`ic.a$a.p` @type ^`qc.e` @kind object;
  #L35e416.  call temp:= `T`(v1, v9, v10) @signature `Lqc/s;.T:(Lqc/c;J)J` @kind interface;
  #L35e41c.  v10:= temp @kind wide;
  #L35e41e.  v1:= -1L;
  #L35e422.  v3:= lcmp(v10, v1);
  #L35e426.  if v3 != 0 then goto L35e442;
  #L35e42a.  v9:= v8.`ic.a$a.o` @type ^`boolean` @kind boolean;
  #L35e42e.  if v9 != 0 then goto L35e440;
  #L35e432.  v8.`ic.a$a.o` @type ^`boolean` := v0 @kind boolean;
  #L35e436.  v9:= v8.`ic.a$a.r` @type ^`qc.d` @kind object;
  #L35e43a.  call `close`(v9) @signature `Lqc/r;.close:()V` @kind interface;
  #L35e440.  return v1 @kind wide;
  #L35e442.  v0:= v8.`ic.a$a.r` @type ^`qc.d` @kind object;
  #L35e446.  call temp:= `b`(v0) @signature `Lqc/d;.b:()Lqc/c;` @kind interface;
  #L35e44c.  v3:= temp @kind object;
  #L35e44e.  call temp:= `h0`(v9) @signature `Lqc/c;.h0:()J` @kind virtual;
  #L35e454.  v0:= temp @kind wide;
  #L35e456.  v4:= v0 - v10 @kind long;
  #L35e45a.  v2:= v9 @kind object;
  #L35e45c.  v6:= v10 @kind wide;
  #L35e45e.  call temp:= `J`(v2, v3, v4, v6) @signature `Lqc/c;.J:(Lqc/c;JJ)Lqc/c;` @kind virtual;
  #L35e464.  v9:= v8.`ic.a$a.r` @type ^`qc.d` @kind object;
  #L35e468.  call temp:= `I`(v9) @signature `Lqc/d;.I:()Lqc/d;` @kind interface;
  #L35e46e.  return v10 @kind wide;
  #L35e470.  v9:= Exception @type ^`java.io.IOException` @kind object;
  #L35e472.  v10:= v8.`ic.a$a.o` @type ^`boolean` @kind boolean;
  #L35e476.  if v10 != 0 then goto L35e488;
  #L35e47a.  v8.`ic.a$a.o` @type ^`boolean` := v0 @kind boolean;
  #L35e47e.  v10:= v8.`ic.a$a.q` @type ^`ic.b` @kind object;
  #L35e482.  call `b`(v10) @signature `Lic/b;.b:()V` @kind interface;
  #L35e488.  throw v9;
  catch `java.io.IOException` @[L35e412..L35e41e] goto L35e470;
}
procedure `void` `close`(`ic.a$a` v2 @kind this) @signature `Lic/a$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35e4f0.  v0:= v2.`ic.a$a.o` @type ^`boolean` @kind boolean;
  #L35e4f4.  if v0 != 0 then goto L35e51c;
  #L35e4f8.  v0:= 100I;
  #L35e4fc.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L35e500.  call temp:= `n`(v2, v0, v1) @signature `Lhc/c;.n:(Lqc/s;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L35e506.  v0:= temp;
  #L35e508.  if v0 != 0 then goto L35e51c;
  #L35e50c.  v0:= 1I;
  #L35e50e.  v2.`ic.a$a.o` @type ^`boolean` := v0 @kind boolean;
  #L35e512.  v0:= v2.`ic.a$a.q` @type ^`ic.b` @kind object;
  #L35e516.  call `b`(v0) @signature `Lic/b;.b:()V` @kind interface;
  #L35e51c.  v0:= v2.`ic.a$a.p` @type ^`qc.e` @kind object;
  #L35e520.  call `close`(v0) @signature `Lqc/s;.close:()V` @kind interface;
  #L35e526.  return @kind void;
}
procedure `qc.t` `f`(`ic.a$a` v1 @kind this) @signature `Lic/a$a;.f:()Lqc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35e4ac.  v0:= v1.`ic.a$a.p` @type ^`qc.e` @kind object;
  #L35e4b0.  call temp:= `f`(v0) @signature `Lqc/s;.f:()Lqc/t;` @kind interface;
  #L35e4b6.  v0:= temp @kind object;
  #L35e4b8.  return v0 @kind object;
}
