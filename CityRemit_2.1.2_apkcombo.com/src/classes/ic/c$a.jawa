record `ic.c$a` @kind class @AccessFlag PUBLIC {
  `long` `ic.c$a.a` @AccessFlag FINAL;
  `gc.x` `ic.c$a.b` @AccessFlag FINAL;
  `gc.z` `ic.c$a.c` @AccessFlag FINAL;
  `java.util.Date` `ic.c$a.d` @AccessFlag PRIVATE;
  `java.lang.String` `ic.c$a.e` @AccessFlag PRIVATE;
  `java.util.Date` `ic.c$a.f` @AccessFlag PRIVATE;
  `java.lang.String` `ic.c$a.g` @AccessFlag PRIVATE;
  `java.util.Date` `ic.c$a.h` @AccessFlag PRIVATE;
  `long` `ic.c$a.i` @AccessFlag PRIVATE;
  `long` `ic.c$a.j` @AccessFlag PRIVATE;
  `java.lang.String` `ic.c$a.k` @AccessFlag PRIVATE;
  `int` `ic.c$a.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`ic.c$a` v3 @kind this, `long` v4 , `gc.x` v6 @kind object, `gc.z` v7 @kind object) @signature `Lic/c$a;.<init>:(JLgc/x;Lgc/z;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L35eeec.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35eef2.  v0:= -1I;
  #L35eef4.  v3.`ic.c$a.l` @type ^`int` := v0;
  #L35eef8.  v3.`ic.c$a.a` @type ^`long` := v4 @kind wide;
  #L35eefc.  v3.`ic.c$a.b` @type ^`gc.x` := v6 @kind object;
  #L35ef00.  v3.`ic.c$a.c` @type ^`gc.z` := v7 @kind object;
  #L35ef04.  if v7 == 0 then goto L35efe0;
  #L35ef08.  call temp:= `G`(v7) @signature `Lgc/z;.G:()J` @kind virtual;
  #L35ef0e.  v4:= temp @kind wide;
  #L35ef10.  v3.`ic.c$a.i` @type ^`long` := v4 @kind wide;
  #L35ef14.  call temp:= `x`(v7) @signature `Lgc/z;.x:()J` @kind virtual;
  #L35ef1a.  v4:= temp @kind wide;
  #L35ef1c.  v3.`ic.c$a.j` @type ^`long` := v4 @kind wide;
  #L35ef20.  call temp:= `o`(v7) @signature `Lgc/z;.o:()Lgc/q;` @kind virtual;
  #L35ef26.  v4:= temp @kind object;
  #L35ef28.  v5:= 0I;
  #L35ef2a.  call temp:= `g`(v4) @signature `Lgc/q;.g:()I` @kind virtual;
  #L35ef30.  v6:= temp;
  #L35ef32.  if v5 >= v6 then goto L35efe0;
  #L35ef36.  call temp:= `e`(v4, v5) @signature `Lgc/q;.e:(I)Ljava/lang/String;` @kind virtual;
  #L35ef3c.  v7:= temp @kind object;
  #L35ef3e.  call temp:= `h`(v4, v5) @signature `Lgc/q;.h:(I)Ljava/lang/String;` @kind virtual;
  #L35ef44.  v1:= temp @kind object;
  #L35ef46.  v2:= "Date" @kind object;
  #L35ef4a.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L35ef50.  v2:= temp;
  #L35ef52.  if v2 == 0 then goto L35ef68;
  #L35ef56.  call temp:= `b`(v1) @signature `Lkc/d;.b:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L35ef5c.  v7:= temp @kind object;
  #L35ef5e.  v3.`ic.c$a.d` @type ^`java.util.Date` := v7 @kind object;
  #L35ef62.  v3.`ic.c$a.e` @type ^`java.lang.String` := v1 @kind object;
  #L35ef66.  goto L35efda;
  #L35ef68.  v2:= "Expires" @kind object;
  #L35ef6c.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L35ef72.  v2:= temp;
  #L35ef74.  if v2 == 0 then goto L35ef86;
  #L35ef78.  call temp:= `b`(v1) @signature `Lkc/d;.b:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L35ef7e.  v7:= temp @kind object;
  #L35ef80.  v3.`ic.c$a.h` @type ^`java.util.Date` := v7 @kind object;
  #L35ef84.  goto L35efda;
  #L35ef86.  v2:= "Last-Modified" @kind object;
  #L35ef8a.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L35ef90.  v2:= temp;
  #L35ef92.  if v2 == 0 then goto L35efa8;
  #L35ef96.  call temp:= `b`(v1) @signature `Lkc/d;.b:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L35ef9c.  v7:= temp @kind object;
  #L35ef9e.  v3.`ic.c$a.f` @type ^`java.util.Date` := v7 @kind object;
  #L35efa2.  v3.`ic.c$a.g` @type ^`java.lang.String` := v1 @kind object;
  #L35efa6.  goto L35efda;
  #L35efa8.  v2:= "ETag" @kind object;
  #L35efac.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L35efb2.  v2:= temp;
  #L35efb4.  if v2 == 0 then goto L35efbe;
  #L35efb8.  v3.`ic.c$a.k` @type ^`java.lang.String` := v1 @kind object;
  #L35efbc.  goto L35efda;
  #L35efbe.  v2:= "Age" @kind object;
  #L35efc2.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L35efc8.  v7:= temp;
  #L35efca.  if v7 == 0 then goto L35efda;
  #L35efce.  call temp:= `d`(v1, v0) @signature `Lkc/e;.d:(Ljava/lang/String;I)I` @kind static;
  #L35efd4.  v7:= temp;
  #L35efd6.  v3.`ic.c$a.l` @type ^`int` := v7;
  #L35efda.  v5:= v5 + 1;
  #L35efde.  goto L35ef32;
  #L35efe0.  return @kind void;
}
procedure `long` `a`(`ic.c$a` v9 @kind this) @signature `Lic/c$a;.a:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L35eda4.  v0:= v9.`ic.c$a.d` @type ^`java.util.Date` @kind object;
  #L35eda8.  v1:= 0L;
  #L35edac.  if v0 == 0 then goto L35edc6;
  #L35edb0.  v3:= v9.`ic.c$a.j` @type ^`long` @kind wide;
  #L35edb4.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L35edba.  v5:= temp @kind wide;
  #L35edbc.  v3:= v3 - v5 @kind long;
  #L35edbe.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L35edc4.  v1:= temp @kind wide;
  #L35edc6.  v0:= v9.`ic.c$a.l` @type ^`int`;
  #L35edca.  v3:= -1I;
  #L35edcc.  if v0 == v3 then goto L35ede6;
  #L35edd0.  v3:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L35edd4.  v4:= (`long`) v0 @kind i2l;
  #L35edd6.  call temp:= `toMillis`(v3, v4) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L35eddc.  v3:= temp @kind wide;
  #L35edde.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L35ede4.  v1:= temp @kind wide;
  #L35ede6.  v3:= v9.`ic.c$a.j` @type ^`long` @kind wide;
  #L35edea.  v5:= v9.`ic.c$a.i` @type ^`long` @kind wide;
  #L35edee.  v5:= v3 - v5 @kind long;
  #L35edf2.  v7:= v9.`ic.c$a.a` @type ^`long` @kind wide;
  #L35edf6.  v7:= v7 - v3 @kind long;
  #L35edf8.  v1:= v1 + v5 @kind long;
  #L35edfa.  v1:= v1 + v7 @kind long;
  #L35edfc.  return v1 @kind wide;
}
procedure `long` `b`(`ic.c$a` v7 @kind this) @signature `Lic/c$a;.b:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L35ee10.  v0:= v7.`ic.c$a.c` @type ^`gc.z` @kind object;
  #L35ee14.  call temp:= `c`(v0) @signature `Lgc/z;.c:()Lgc/c;` @kind virtual;
  #L35ee1a.  v0:= temp @kind object;
  #L35ee1c.  call temp:= `d`(v0) @signature `Lgc/c;.d:()I` @kind virtual;
  #L35ee22.  v1:= temp;
  #L35ee24.  v2:= -1I;
  #L35ee26.  if v1 == v2 then goto L35ee42;
  #L35ee2a.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L35ee2e.  call temp:= `d`(v0) @signature `Lgc/c;.d:()I` @kind virtual;
  #L35ee34.  v0:= temp;
  #L35ee36.  v2:= (`long`) v0 @kind i2l;
  #L35ee38.  call temp:= `toMillis`(v1, v2) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L35ee3e.  v0:= temp @kind wide;
  #L35ee40.  return v0 @kind wide;
  #L35ee42.  v0:= v7.`ic.c$a.h` @type ^`java.util.Date` @kind object;
  #L35ee46.  v1:= 0L;
  #L35ee4a.  if v0 == 0 then goto L35ee7e;
  #L35ee4e.  v0:= v7.`ic.c$a.d` @type ^`java.util.Date` @kind object;
  #L35ee52.  if v0 == 0 then goto L35ee60;
  #L35ee56.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L35ee5c.  v3:= temp @kind wide;
  #L35ee5e.  goto L35ee64;
  #L35ee60.  v3:= v7.`ic.c$a.j` @type ^`long` @kind wide;
  #L35ee64.  v0:= v7.`ic.c$a.h` @type ^`java.util.Date` @kind object;
  #L35ee68.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L35ee6e.  v5:= temp @kind wide;
  #L35ee70.  v5:= v5 - v3 @kind long;
  #L35ee72.  v0:= lcmp(v5, v1);
  #L35ee76.  if v0 <= 0 then goto L35ee7c;
  #L35ee7a.  v1:= v5 @kind wide;
  #L35ee7c.  return v1 @kind wide;
  #L35ee7e.  v0:= v7.`ic.c$a.f` @type ^`java.util.Date` @kind object;
  #L35ee82.  if v0 == 0 then goto L35eeda;
  #L35ee86.  v0:= v7.`ic.c$a.c` @type ^`gc.z` @kind object;
  #L35ee8a.  call temp:= `E`(v0) @signature `Lgc/z;.E:()Lgc/x;` @kind virtual;
  #L35ee90.  v0:= temp @kind object;
  #L35ee92.  call temp:= `h`(v0) @signature `Lgc/x;.h:()Lgc/r;` @kind virtual;
  #L35ee98.  v0:= temp @kind object;
  #L35ee9a.  call temp:= `x`(v0) @signature `Lgc/r;.x:()Ljava/lang/String;` @kind virtual;
  #L35eea0.  v0:= temp @kind object;
  #L35eea2.  if v0 != 0 then goto L35eeda;
  #L35eea6.  v0:= v7.`ic.c$a.d` @type ^`java.util.Date` @kind object;
  #L35eeaa.  if v0 == 0 then goto L35eeb8;
  #L35eeae.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L35eeb4.  v3:= temp @kind wide;
  #L35eeb6.  goto L35eebc;
  #L35eeb8.  v3:= v7.`ic.c$a.i` @type ^`long` @kind wide;
  #L35eebc.  v0:= v7.`ic.c$a.f` @type ^`java.util.Date` @kind object;
  #L35eec0.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L35eec6.  v5:= temp @kind wide;
  #L35eec8.  v3:= v3 - v5 @kind long;
  #L35eeca.  v0:= lcmp(v3, v1);
  #L35eece.  if v0 <= 0 then goto L35eeda;
  #L35eed2.  v0:= 10L;
  #L35eed6.  v1:= v3 / v0 @kind long;
  #L35eeda.  return v1 @kind wide;
}
procedure `ic.c` `d`(`ic.c$a` v13 @kind this) @signature `Lic/c$a;.d:()Lic/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L35eb48.  v0:= v13.`ic.c$a.c` @type ^`gc.z` @kind object;
  #L35eb4c.  v1:= 0I;
  #L35eb4e.  if v0 != 0 then goto L35eb62;
  #L35eb52.  v0:= new `ic.c`;
  #L35eb56.  v2:= v13.`ic.c$a.b` @type ^`gc.x` @kind object;
  #L35eb5a.  call `<init>`(v0, v2, v1) @signature `Lic/c;.<init>:(Lgc/x;Lgc/z;)V` @kind direct;
  #L35eb60.  return v0 @kind object;
  #L35eb62.  v0:= v13.`ic.c$a.b` @type ^`gc.x` @kind object;
  #L35eb66.  call temp:= `e`(v0) @signature `Lgc/x;.e:()Z` @kind virtual;
  #L35eb6c.  v0:= temp;
  #L35eb6e.  if v0 == 0 then goto L35eb92;
  #L35eb72.  v0:= v13.`ic.c$a.c` @type ^`gc.z` @kind object;
  #L35eb76.  call temp:= `h`(v0) @signature `Lgc/z;.h:()Lgc/p;` @kind virtual;
  #L35eb7c.  v0:= temp @kind object;
  #L35eb7e.  if v0 != 0 then goto L35eb92;
  #L35eb82.  v0:= new `ic.c`;
  #L35eb86.  v2:= v13.`ic.c$a.b` @type ^`gc.x` @kind object;
  #L35eb8a.  call `<init>`(v0, v2, v1) @signature `Lic/c;.<init>:(Lgc/x;Lgc/z;)V` @kind direct;
  #L35eb90.  return v0 @kind object;
  #L35eb92.  v0:= v13.`ic.c$a.c` @type ^`gc.z` @kind object;
  #L35eb96.  v2:= v13.`ic.c$a.b` @type ^`gc.x` @kind object;
  #L35eb9a.  call temp:= `a`(v0, v2) @signature `Lic/c;.a:(Lgc/z;Lgc/x;)Z` @kind static;
  #L35eba0.  v0:= temp;
  #L35eba2.  if v0 != 0 then goto L35ebb6;
  #L35eba6.  v0:= new `ic.c`;
  #L35ebaa.  v2:= v13.`ic.c$a.b` @type ^`gc.x` @kind object;
  #L35ebae.  call `<init>`(v0, v2, v1) @signature `Lic/c;.<init>:(Lgc/x;Lgc/z;)V` @kind direct;
  #L35ebb4.  return v0 @kind object;
  #L35ebb6.  v0:= v13.`ic.c$a.b` @type ^`gc.x` @kind object;
  #L35ebba.  call temp:= `b`(v0) @signature `Lgc/x;.b:()Lgc/c;` @kind virtual;
  #L35ebc0.  v0:= temp @kind object;
  #L35ebc2.  call temp:= `h`(v0) @signature `Lgc/c;.h:()Z` @kind virtual;
  #L35ebc8.  v2:= temp;
  #L35ebca.  if v2 != 0 then goto L35ed82;
  #L35ebce.  v2:= v13.`ic.c$a.b` @type ^`gc.x` @kind object;
  #L35ebd2.  call temp:= `e`(v2) @signature `Lic/c$a;.e:(Lgc/x;)Z` @kind static;
  #L35ebd8.  v2:= temp;
  #L35ebda.  if v2 == 0 then goto L35ebe2;
  #L35ebde.  goto L35ed82;
  #L35ebe2.  v2:= v13.`ic.c$a.c` @type ^`gc.z` @kind object;
  #L35ebe6.  call temp:= `c`(v2) @signature `Lgc/z;.c:()Lgc/c;` @kind virtual;
  #L35ebec.  v2:= temp @kind object;
  #L35ebee.  call temp:= `a`(v13) @signature `Lic/c$a;.a:()J` @kind direct;
  #L35ebf4.  v3:= temp @kind wide;
  #L35ebf6.  call temp:= `b`(v13) @signature `Lic/c$a;.b:()J` @kind direct;
  #L35ebfc.  v5:= temp @kind wide;
  #L35ebfe.  call temp:= `d`(v0) @signature `Lgc/c;.d:()I` @kind virtual;
  #L35ec04.  v7:= temp;
  #L35ec06.  v8:= -1I;
  #L35ec08.  if v7 == v8 then goto L35ec2a;
  #L35ec0c.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L35ec10.  call temp:= `d`(v0) @signature `Lgc/c;.d:()I` @kind virtual;
  #L35ec16.  v9:= temp;
  #L35ec18.  v9:= (`long`) v9 @kind i2l;
  #L35ec1a.  call temp:= `toMillis`(v7, v9) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L35ec20.  v9:= temp @kind wide;
  #L35ec22.  call temp:= `min`(v5, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L35ec28.  v5:= temp @kind wide;
  #L35ec2a.  call temp:= `f`(v0) @signature `Lgc/c;.f:()I` @kind virtual;
  #L35ec30.  v7:= temp;
  #L35ec32.  v9:= 0L;
  #L35ec36.  if v7 == v8 then goto L35ec52;
  #L35ec3a.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L35ec3e.  call temp:= `f`(v0) @signature `Lgc/c;.f:()I` @kind virtual;
  #L35ec44.  v11:= temp;
  #L35ec46.  v11:= (`long`) v11 @kind i2l;
  #L35ec48.  call temp:= `toMillis`(v7, v11) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L35ec4e.  v11:= temp @kind wide;
  #L35ec50.  goto L35ec54;
  #L35ec52.  v11:= v9 @kind wide;
  #L35ec54.  call temp:= `g`(v2) @signature `Lgc/c;.g:()Z` @kind virtual;
  #L35ec5a.  v7:= temp;
  #L35ec5c.  if v7 != 0 then goto L35ec82;
  #L35ec60.  call temp:= `e`(v0) @signature `Lgc/c;.e:()I` @kind virtual;
  #L35ec66.  v7:= temp;
  #L35ec68.  if v7 == v8 then goto L35ec82;
  #L35ec6c.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L35ec70.  call temp:= `e`(v0) @signature `Lgc/c;.e:()I` @kind virtual;
  #L35ec76.  v0:= temp;
  #L35ec78.  v8:= (`long`) v0 @kind i2l;
  #L35ec7a.  call temp:= `toMillis`(v7, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L35ec80.  v9:= temp @kind wide;
  #L35ec82.  call temp:= `h`(v2) @signature `Lgc/c;.h:()Z` @kind virtual;
  #L35ec88.  v0:= temp;
  #L35ec8a.  if v0 != 0 then goto L35ecf4;
  #L35ec8e.  v11:= v11 + v3 @kind long;
  #L35ec90.  v9:= v9 + v5 @kind long;
  #L35ec92.  v0:= lcmp(v11, v9);
  #L35ec96.  if v0 >= 0 then goto L35ecf4;
  #L35ec9a.  v0:= v13.`ic.c$a.c` @type ^`gc.z` @kind object;
  #L35ec9e.  call temp:= `s`(v0) @signature `Lgc/z;.s:()Lgc/z$a;` @kind virtual;
  #L35eca4.  v0:= temp @kind object;
  #L35eca6.  v2:= "Warning" @kind object;
  #L35ecaa.  v7:= lcmp(v11, v5);
  #L35ecae.  if v7 < 0 then goto L35ecbc;
  #L35ecb2.  v5:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L35ecb6.  call temp:= `a`(v0, v2, v5) @signature `Lgc/z$a;.a:(Ljava/lang/String;Ljava/lang/String;)Lgc/z$a;` @kind virtual;
  #L35ecbc.  v5:= 86400000L;
  #L35ecc2.  v7:= lcmp(v3, v5);
  #L35ecc6.  if v7 <= 0 then goto L35ece0;
  #L35ecca.  call temp:= `f`(v13) @signature `Lic/c$a;.f:()Z` @kind direct;
  #L35ecd0.  v3:= temp;
  #L35ecd2.  if v3 == 0 then goto L35ece0;
  #L35ecd6.  v3:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L35ecda.  call temp:= `a`(v0, v2, v3) @signature `Lgc/z$a;.a:(Ljava/lang/String;Ljava/lang/String;)Lgc/z$a;` @kind virtual;
  #L35ece0.  v2:= new `ic.c`;
  #L35ece4.  call temp:= `c`(v0) @signature `Lgc/z$a;.c:()Lgc/z;` @kind virtual;
  #L35ecea.  v0:= temp @kind object;
  #L35ecec.  call `<init>`(v2, v1, v0) @signature `Lic/c;.<init>:(Lgc/x;Lgc/z;)V` @kind direct;
  #L35ecf2.  return v2 @kind object;
  #L35ecf4.  v0:= v13.`ic.c$a.k` @type ^`java.lang.String` @kind object;
  #L35ecf8.  v2:= "If-Modified-Since" @kind object;
  #L35ecfc.  if v0 == 0 then goto L35ed06;
  #L35ed00.  v2:= "If-None-Match" @kind object;
  #L35ed04.  goto L35ed20;
  #L35ed06.  v0:= v13.`ic.c$a.f` @type ^`java.util.Date` @kind object;
  #L35ed0a.  if v0 == 0 then goto L35ed14;
  #L35ed0e.  v0:= v13.`ic.c$a.g` @type ^`java.lang.String` @kind object;
  #L35ed12.  goto L35ed20;
  #L35ed14.  v0:= v13.`ic.c$a.d` @type ^`java.util.Date` @kind object;
  #L35ed18.  if v0 == 0 then goto L35ed72;
  #L35ed1c.  v0:= v13.`ic.c$a.e` @type ^`java.lang.String` @kind object;
  #L35ed20.  v1:= v13.`ic.c$a.b` @type ^`gc.x` @kind object;
  #L35ed24.  call temp:= `d`(v1) @signature `Lgc/x;.d:()Lgc/q;` @kind virtual;
  #L35ed2a.  v1:= temp @kind object;
  #L35ed2c.  call temp:= `f`(v1) @signature `Lgc/q;.f:()Lgc/q$a;` @kind virtual;
  #L35ed32.  v1:= temp @kind object;
  #L35ed34.  v3:= `@@hc.a.a` @type ^`hc.a` @kind object;
  #L35ed38.  call `b`(v3, v1, v2, v0) @signature `Lhc/a;.b:(Lgc/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L35ed3e.  v0:= v13.`ic.c$a.b` @type ^`gc.x` @kind object;
  #L35ed42.  call temp:= `g`(v0) @signature `Lgc/x;.g:()Lgc/x$a;` @kind virtual;
  #L35ed48.  v0:= temp @kind object;
  #L35ed4a.  call temp:= `d`(v1) @signature `Lgc/q$a;.d:()Lgc/q;` @kind virtual;
  #L35ed50.  v1:= temp @kind object;
  #L35ed52.  call temp:= `c`(v0, v1) @signature `Lgc/x$a;.c:(Lgc/q;)Lgc/x$a;` @kind virtual;
  #L35ed58.  v0:= temp @kind object;
  #L35ed5a.  call temp:= `a`(v0) @signature `Lgc/x$a;.a:()Lgc/x;` @kind virtual;
  #L35ed60.  v0:= temp @kind object;
  #L35ed62.  v1:= new `ic.c`;
  #L35ed66.  v2:= v13.`ic.c$a.c` @type ^`gc.z` @kind object;
  #L35ed6a.  call `<init>`(v1, v0, v2) @signature `Lic/c;.<init>:(Lgc/x;Lgc/z;)V` @kind direct;
  #L35ed70.  return v1 @kind object;
  #L35ed72.  v0:= new `ic.c`;
  #L35ed76.  v2:= v13.`ic.c$a.b` @type ^`gc.x` @kind object;
  #L35ed7a.  call `<init>`(v0, v2, v1) @signature `Lic/c;.<init>:(Lgc/x;Lgc/z;)V` @kind direct;
  #L35ed80.  return v0 @kind object;
  #L35ed82.  v0:= new `ic.c`;
  #L35ed86.  v2:= v13.`ic.c$a.b` @type ^`gc.x` @kind object;
  #L35ed8a.  call `<init>`(v0, v2, v1) @signature `Lic/c;.<init>:(Lgc/x;Lgc/z;)V` @kind direct;
  #L35ed90.  return v0 @kind object;
}
procedure `boolean` `e`(`gc.x` v1 @kind object) @signature `Lic/c$a;.e:(Lgc/x;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L35ea88.  v0:= "If-Modified-Since" @kind object;
  #L35ea8c.  call temp:= `c`(v1, v0) @signature `Lgc/x;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L35ea92.  v0:= temp @kind object;
  #L35ea94.  if v0 != 0 then goto L35eaae;
  #L35ea98.  v0:= "If-None-Match" @kind object;
  #L35ea9c.  call temp:= `c`(v1, v0) @signature `Lgc/x;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L35eaa2.  v1:= temp @kind object;
  #L35eaa4.  if v1 == 0 then goto L35eaaa;
  #L35eaa8.  goto L35eaae;
  #L35eaaa.  v1:= 0I;
  #L35eaac.  goto L35eab0;
  #L35eaae.  v1:= 1I;
  #L35eab0.  return v1;
}
procedure `boolean` `f`(`ic.c$a` v2 @kind this) @signature `Lic/c$a;.f:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L35eac4.  v0:= v2.`ic.c$a.c` @type ^`gc.z` @kind object;
  #L35eac8.  call temp:= `c`(v0) @signature `Lgc/z;.c:()Lgc/c;` @kind virtual;
  #L35eace.  v0:= temp @kind object;
  #L35ead0.  call temp:= `d`(v0) @signature `Lgc/c;.d:()I` @kind virtual;
  #L35ead6.  v0:= temp;
  #L35ead8.  v1:= -1I;
  #L35eada.  if v0 != v1 then goto L35eaea;
  #L35eade.  v0:= v2.`ic.c$a.h` @type ^`java.util.Date` @kind object;
  #L35eae2.  if v0 != 0 then goto L35eaea;
  #L35eae6.  v0:= 1I;
  #L35eae8.  goto L35eaec;
  #L35eaea.  v0:= 0I;
  #L35eaec.  return v0;
}
procedure `ic.c` `c`(`ic.c$a` v2 @kind this) @signature `Lic/c$a;.c:()Lic/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35eb00.  call temp:= `d`(v2) @signature `Lic/c$a;.d:()Lic/c;` @kind direct;
  #L35eb06.  v0:= temp @kind object;
  #L35eb08.  v1:= v0.`ic.c.a` @type ^`gc.x` @kind object;
  #L35eb0c.  if v1 == 0 then goto L35eb34;
  #L35eb10.  v1:= v2.`ic.c$a.b` @type ^`gc.x` @kind object;
  #L35eb14.  call temp:= `b`(v1) @signature `Lgc/x;.b:()Lgc/c;` @kind virtual;
  #L35eb1a.  v1:= temp @kind object;
  #L35eb1c.  call temp:= `j`(v1) @signature `Lgc/c;.j:()Z` @kind virtual;
  #L35eb22.  v1:= temp;
  #L35eb24.  if v1 == 0 then goto L35eb34;
  #L35eb28.  v0:= new `ic.c`;
  #L35eb2c.  v1:= 0I;
  #L35eb2e.  call `<init>`(v0, v1, v1) @signature `Lic/c;.<init>:(Lgc/x;Lgc/z;)V` @kind direct;
  #L35eb34.  return v0 @kind object;
}
