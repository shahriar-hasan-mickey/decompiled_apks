record `h5.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Runnable` @kind interface {
  `k5.p` `h5.b.o` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h5.b` v1 @kind this) @signature `Lh5/b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L33d13c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33d142.  v0:= 0I;
  #L33d144.  v1.`h5.b.o` @type ^`k5.p` := v0 @kind object;
  #L33d148.  return @kind void;
}
procedure `void` `<init>`(`h5.b` v0 @kind this, `k5.p` v1 @kind object) @signature `Lh5/b;.<init>:(Lk5/p;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L33d15c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33d162.  v0.`h5.b.o` @type ^`k5.p` := v1 @kind object;
  #L33d166.  return @kind void;
}
procedure `void` `a`() @signature `Lh5/b;.a:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `k5.p` `b`(`h5.b` v1 @kind this) @signature `Lh5/b;.b:()Lk5/p;` @AccessFlag FINAL {
    temp;
    v0;

  #L33d124.  v0:= v1.`h5.b.o` @type ^`k5.p` @kind object;
  #L33d128.  return v0 @kind object;
}
procedure `void` `c`(`h5.b` v1 @kind this, `java.lang.Exception` v2 @kind object) @signature `Lh5/b;.c:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33d1ac.  v0:= v1.`h5.b.o` @type ^`k5.p` @kind object;
  #L33d1b0.  if v0 == 0 then goto L33d1ba;
  #L33d1b4.  call temp:= `d`(v0, v2) @signature `Lk5/p;.d:(Ljava/lang/Exception;)Z` @kind virtual;
  #L33d1ba.  return @kind void;
}
procedure `void` `run`(`h5.b` v1 @kind this) @signature `Lh5/b;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33d178.  call `a`(v1) @signature `Lh5/b;.a:()V` @kind virtual;
  #L33d17e.  return @kind void;
  #L33d180.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L33d182.  call `c`(v1, v0) @signature `Lh5/b;.c:(Ljava/lang/Exception;)V` @kind virtual;
  #L33d188.  return @kind void;
  catch `java.lang.Exception` @[L33d178..L33d17e] goto L33d180;
}
