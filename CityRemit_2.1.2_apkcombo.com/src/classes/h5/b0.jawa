record `h5.b0` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `a`(`java.lang.Object` v1 @kind object) @signature `Lh5/b0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L33e710.  v0:= "Cannot return null from a non-@Nullable @Provides method" @kind object;
  #L33e714.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L33e71a.  return v1 @kind object;
}
procedure `void` `b`(`java.lang.Object` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lh5/b0;.b:(Ljava/lang/Object;Ljava/lang/Class;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L33e72c.  if v1 == 0 then goto L33e732;
  #L33e730.  return @kind void;
  #L33e732.  v1:= new `java.lang.IllegalStateException`;
  #L33e736.  call temp:= `getCanonicalName`(v2) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L33e73c.  v2:= temp @kind object;
  #L33e73e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L33e744.  v2:= temp @kind object;
  #L33e746.  v0:= " must be set" @kind object;
  #L33e74a.  call temp:= `concat`(v2, v0) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L33e750.  v2:= temp @kind object;
  #L33e752.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33e758.  throw v1;
}
