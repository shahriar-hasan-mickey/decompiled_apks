record `h5.z` @kind class @AccessFlag PUBLIC_FINAL extends `h5.c0` @kind interface {
  `h5.c0` `h5.z.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`h5.z` v0 @kind this) @signature `Lh5/z;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L33e558.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33e55e.  return @kind void;
}
procedure `void` `a`(`h5.c0` v1 @kind object, `h5.c0` v2 @kind object) @signature `Lh5/z;.a:(Lh5/c0;Lh5/c0;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L33e570.  v1:= (`h5.z`) v1 @kind object;
  #L33e574.  v0:= v1.`h5.z.a` @type ^`h5.c0` @kind object;
  #L33e578.  if v0 != 0 then goto L33e582;
  #L33e57c.  v1.`h5.z.a` @type ^`h5.c0` := v2 @kind object;
  #L33e580.  return @kind void;
  #L33e582.  v1:= new `java.lang.IllegalStateException`;
  #L33e586.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L33e58c.  throw v1;
}
procedure `java.lang.Object` `zza`(`h5.z` v1 @kind this) @signature `Lh5/z;.zza:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33e528.  v0:= v1.`h5.z.a` @type ^`h5.c0` @kind object;
  #L33e52c.  if v0 == 0 then goto L33e53a;
  #L33e530.  call temp:= `zza`(v0) @signature `Lh5/c0;.zza:()Ljava/lang/Object;` @kind interface;
  #L33e536.  v0:= temp @kind object;
  #L33e538.  return v0 @kind object;
  #L33e53a.  v0:= new `java.lang.IllegalStateException`;
  #L33e53e.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L33e544.  throw v0;
}
