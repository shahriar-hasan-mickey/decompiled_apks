record `h5.a0` @kind class @AccessFlag PUBLIC_FINAL extends `h5.c0` @kind interface, `h5.y` @kind interface {
  `h5.c0` `h5.a0.a` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `h5.a0.b` @AccessFlag PRIVATE_VOLATILE;
}
global `java.lang.Object` `@@h5.a0.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh5/a0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L33e6cc.  v0:= new `java.lang.Object`;
  #L33e6d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33e6d6.  `@@h5.a0.c` @type ^`java.lang.Object` := v0 @kind object;
  #L33e6da.  return @kind void;
}
procedure `void` `<init>`(`h5.a0` v1 @kind this, `h5.c0` v2 @kind object) @signature `Lh5/a0;.<init>:(Lh5/c0;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L33e6ec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33e6f2.  v0:= `@@h5.a0.c` @type ^`java.lang.Object` @kind object;
  #L33e6f6.  v1.`h5.a0.b` @type ^`java.lang.Object` := v0 @kind object;
  #L33e6fa.  v1.`h5.a0.a` @type ^`h5.c0` := v2 @kind object;
  #L33e6fe.  return @kind void;
}
procedure `h5.y` `a`(`h5.c0` v1 @kind object) @signature `Lh5/a0;.a:(Lh5/c0;)Lh5/y;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L33e5a0.  v0:= instanceof @variable v1 @type ^`h5.y` @kind boolean;
  #L33e5a4.  if v0 == 0 then goto L33e5ae;
  #L33e5a8.  v1:= (`h5.y`) v1 @kind object;
  #L33e5ac.  return v1 @kind object;
  #L33e5ae.  v0:= new `h5.a0`;
  #L33e5b2.  call temp:= `requireNonNull`(v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33e5b8.  call `<init>`(v0, v1) @signature `Lh5/a0;.<init>:(Lh5/c0;)V` @kind direct;
  #L33e5be.  return v0 @kind object;
}
procedure `h5.c0` `b`(`h5.c0` v1 @kind object) @signature `Lh5/a0;.b:(Lh5/c0;)Lh5/c0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L33e5d0.  call temp:= `requireNonNull`(v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33e5d6.  v0:= instanceof @variable v1 @type ^`h5.a0` @kind boolean;
  #L33e5da.  if v0 == 0 then goto L33e5e0;
  #L33e5de.  return v1 @kind object;
  #L33e5e0.  v0:= new `h5.a0`;
  #L33e5e4.  call `<init>`(v0, v1) @signature `Lh5/a0;.<init>:(Lh5/c0;)V` @kind direct;
  #L33e5ea.  return v0 @kind object;
}
procedure `java.lang.Object` `zza`(`h5.a0` v5 @kind this) @signature `Lh5/a0;.zza:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L33e5fc.  v0:= v5.`h5.a0.b` @type ^`java.lang.Object` @kind object;
  #L33e600.  v1:= `@@h5.a0.c` @type ^`java.lang.Object` @kind object;
  #L33e604.  if v0 != v1 then goto L33e6ae;
  #L33e608.  @monitorenter v5
  #L33e60a.  v0:= v5.`h5.a0.b` @type ^`java.lang.Object` @kind object;
  #L33e60e.  if v0 != v1 then goto L33e6a4;
  #L33e612.  v0:= v5.`h5.a0.a` @type ^`h5.c0` @kind object;
  #L33e616.  call temp:= `zza`(v0) @signature `Lh5/c0;.zza:()Ljava/lang/Object;` @kind interface;
  #L33e61c.  v0:= temp @kind object;
  #L33e61e.  v2:= v5.`h5.a0.b` @type ^`java.lang.Object` @kind object;
  #L33e622.  if v2 == v1 then goto L33e69a;
  #L33e626.  if v2 != v0 then goto L33e62c;
  #L33e62a.  goto L33e69a;
  #L33e62c.  v1:= new `java.lang.IllegalStateException`;
  #L33e630.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L33e636.  v2:= temp @kind object;
  #L33e638.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L33e63e.  v0:= temp @kind object;
  #L33e640.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33e646.  v3:= temp;
  #L33e648.  v3:= v3 + 118;
  #L33e64c.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33e652.  v4:= temp;
  #L33e654.  v3:= v3 + v4 @kind int;
  #L33e656.  v4:= new `java.lang.StringBuilder`;
  #L33e65a.  call `<init>`(v4, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L33e660.  v3:= "Scoped provider was invoked recursively returning different results: " @kind object;
  #L33e664.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33e66a.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33e670.  v2:= " & " @kind object;
  #L33e674.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33e67a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33e680.  v0:= ". This is likely due to a circular dependency." @kind object;
  #L33e684.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33e68a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33e690.  v0:= temp @kind object;
  #L33e692.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33e698.  throw v1;
  #L33e69a.  v5.`h5.a0.b` @type ^`java.lang.Object` := v0 @kind object;
  #L33e69e.  v1:= 0I;
  #L33e6a0.  v5.`h5.a0.a` @type ^`h5.c0` := v1 @kind object;
  #L33e6a4.  @monitorexit v5
  #L33e6a6.  goto L33e6ae;
  #L33e6a8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33e6aa.  @monitorexit v5
  #L33e6ac.  throw v0;
  #L33e6ae.  return v0 @kind object;
  catch `java.lang.Throwable` @[L33e60a..L33e6ac] goto L33e6a8;
}
