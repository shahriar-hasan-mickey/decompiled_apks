record `t3.e` @kind class @AccessFlag FINAL {
  `t3.e$a` `t3.e.a` @AccessFlag PRIVATE;
  `t3.e$a` `t3.e.b` @AccessFlag PRIVATE;
  `boolean` `t3.e.c` @AccessFlag PRIVATE;
  `boolean` `t3.e.d` @AccessFlag PRIVATE;
  `long` `t3.e.e` @AccessFlag PRIVATE;
  `int` `t3.e.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`t3.e` v2 @kind this) @signature `Lt3/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L468c88.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L468c8e.  v0:= new `t3.e$a`;
  #L468c92.  call `<init>`(v0) @signature `Lt3/e$a;.<init>:()V` @kind direct;
  #L468c98.  v2.`t3.e.a` @type ^`t3.e$a` := v0 @kind object;
  #L468c9c.  v0:= new `t3.e$a`;
  #L468ca0.  call `<init>`(v0) @signature `Lt3/e$a;.<init>:()V` @kind direct;
  #L468ca6.  v2.`t3.e.b` @type ^`t3.e$a` := v0 @kind object;
  #L468caa.  v0:= -4.9E-324D;
  #L468cb4.  v2.`t3.e.e` @type ^`long` := v0 @kind wide;
  #L468cb8.  return @kind void;
}
procedure `long` `a`(`t3.e` v2 @kind this) @signature `Lt3/e;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L468c18.  call temp:= `e`(v2) @signature `Lt3/e;.e:()Z` @kind virtual;
  #L468c1e.  v0:= temp;
  #L468c20.  if v0 == 0 then goto L468c32;
  #L468c24.  v0:= v2.`t3.e.a` @type ^`t3.e$a` @kind object;
  #L468c28.  call temp:= `a`(v0) @signature `Lt3/e$a;.a:()J` @kind virtual;
  #L468c2e.  v0:= temp @kind wide;
  #L468c30.  goto L468c3c;
  #L468c32.  v0:= -4.9E-324D;
  #L468c3c.  return v0 @kind wide;
}
procedure `float` `b`(`t3.e` v4 @kind this) @signature `Lt3/e;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L468bc0.  call temp:= `e`(v4) @signature `Lt3/e;.e:()Z` @kind virtual;
  #L468bc6.  v0:= temp;
  #L468bc8.  if v0 == 0 then goto L468bea;
  #L468bcc.  v0:= 1.0E9D;
  #L468bd6.  v2:= v4.`t3.e.a` @type ^`t3.e$a` @kind object;
  #L468bda.  call temp:= `a`(v2) @signature `Lt3/e$a;.a:()J` @kind virtual;
  #L468be0.  v2:= temp @kind wide;
  #L468be2.  v2:= (`double`) v2 @kind l2d;
  #L468be4.  v0:= v0 / v2 @kind double;
  #L468be6.  v0:= (`float`) v0 @kind d2f;
  #L468be8.  goto L468bee;
  #L468bea.  v0:= -1.0F;
  #L468bee.  return v0;
}
procedure `int` `c`(`t3.e` v1 @kind this) @signature `Lt3/e;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L468c00.  v0:= v1.`t3.e.f` @type ^`int`;
  #L468c04.  return v0;
}
procedure `long` `d`(`t3.e` v2 @kind this) @signature `Lt3/e;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L468c50.  call temp:= `e`(v2) @signature `Lt3/e;.e:()Z` @kind virtual;
  #L468c56.  v0:= temp;
  #L468c58.  if v0 == 0 then goto L468c6a;
  #L468c5c.  v0:= v2.`t3.e.a` @type ^`t3.e$a` @kind object;
  #L468c60.  call temp:= `b`(v0) @signature `Lt3/e$a;.b:()J` @kind virtual;
  #L468c66.  v0:= temp @kind wide;
  #L468c68.  goto L468c74;
  #L468c6a.  v0:= -4.9E-324D;
  #L468c74.  return v0 @kind wide;
}
procedure `boolean` `e`(`t3.e` v1 @kind this) @signature `Lt3/e;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L468ba0.  v0:= v1.`t3.e.a` @type ^`t3.e$a` @kind object;
  #L468ba4.  call temp:= `e`(v0) @signature `Lt3/e$a;.e:()Z` @kind virtual;
  #L468baa.  v0:= temp;
  #L468bac.  return v0;
}
procedure `void` `f`(`t3.e` v7 @kind this, `long` v8 ) @signature `Lt3/e;.f:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L468ccc.  v0:= v7.`t3.e.a` @type ^`t3.e$a` @kind object;
  #L468cd0.  call `f`(v0, v8) @signature `Lt3/e$a;.f:(J)V` @kind virtual;
  #L468cd6.  v0:= v7.`t3.e.a` @type ^`t3.e$a` @kind object;
  #L468cda.  call temp:= `e`(v0) @signature `Lt3/e$a;.e:()Z` @kind virtual;
  #L468ce0.  v0:= temp;
  #L468ce2.  v1:= 1I;
  #L468ce4.  v2:= 0I;
  #L468ce6.  if v0 == 0 then goto L468cf8;
  #L468cea.  v0:= v7.`t3.e.d` @type ^`boolean` @kind boolean;
  #L468cee.  if v0 != 0 then goto L468cf8;
  #L468cf2.  v7.`t3.e.c` @type ^`boolean` := v2 @kind boolean;
  #L468cf6.  goto L468d4c;
  #L468cf8.  v3:= v7.`t3.e.e` @type ^`long` @kind wide;
  #L468cfc.  v5:= -4.9E-324D;
  #L468d06.  v0:= lcmp(v3, v5);
  #L468d0a.  if v0 == 0 then goto L468d4c;
  #L468d0e.  v0:= v7.`t3.e.c` @type ^`boolean` @kind boolean;
  #L468d12.  if v0 == 0 then goto L468d26;
  #L468d16.  v0:= v7.`t3.e.b` @type ^`t3.e$a` @kind object;
  #L468d1a.  call temp:= `d`(v0) @signature `Lt3/e$a;.d:()Z` @kind virtual;
  #L468d20.  v0:= temp;
  #L468d22.  if v0 == 0 then goto L468d3e;
  #L468d26.  v0:= v7.`t3.e.b` @type ^`t3.e$a` @kind object;
  #L468d2a.  call `g`(v0) @signature `Lt3/e$a;.g:()V` @kind virtual;
  #L468d30.  v0:= v7.`t3.e.b` @type ^`t3.e$a` @kind object;
  #L468d34.  v3:= v7.`t3.e.e` @type ^`long` @kind wide;
  #L468d38.  call `f`(v0, v3) @signature `Lt3/e$a;.f:(J)V` @kind virtual;
  #L468d3e.  v7.`t3.e.c` @type ^`boolean` := v1 @kind boolean;
  #L468d42.  v0:= v7.`t3.e.b` @type ^`t3.e$a` @kind object;
  #L468d46.  call `f`(v0, v8) @signature `Lt3/e$a;.f:(J)V` @kind virtual;
  #L468d4c.  v0:= v7.`t3.e.c` @type ^`boolean` @kind boolean;
  #L468d50.  if v0 == 0 then goto L468d7c;
  #L468d54.  v0:= v7.`t3.e.b` @type ^`t3.e$a` @kind object;
  #L468d58.  call temp:= `e`(v0) @signature `Lt3/e$a;.e:()Z` @kind virtual;
  #L468d5e.  v0:= temp;
  #L468d60.  if v0 == 0 then goto L468d7c;
  #L468d64.  v0:= v7.`t3.e.a` @type ^`t3.e$a` @kind object;
  #L468d68.  v3:= v7.`t3.e.b` @type ^`t3.e$a` @kind object;
  #L468d6c.  v7.`t3.e.a` @type ^`t3.e$a` := v3 @kind object;
  #L468d70.  v7.`t3.e.b` @type ^`t3.e$a` := v0 @kind object;
  #L468d74.  v7.`t3.e.c` @type ^`boolean` := v2 @kind boolean;
  #L468d78.  v7.`t3.e.d` @type ^`boolean` := v2 @kind boolean;
  #L468d7c.  v7.`t3.e.e` @type ^`long` := v8 @kind wide;
  #L468d80.  v8:= v7.`t3.e.a` @type ^`t3.e$a` @kind object;
  #L468d84.  call temp:= `e`(v8) @signature `Lt3/e$a;.e:()Z` @kind virtual;
  #L468d8a.  v8:= temp;
  #L468d8c.  if v8 == 0 then goto L468d92;
  #L468d90.  goto L468d9a;
  #L468d92.  v8:= v7.`t3.e.f` @type ^`int`;
  #L468d96.  v2:= v8 + 1;
  #L468d9a.  v7.`t3.e.f` @type ^`int` := v2;
  #L468d9e.  return @kind void;
}
procedure `void` `g`(`t3.e` v3 @kind this) @signature `Lt3/e;.g:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L468db0.  v0:= v3.`t3.e.a` @type ^`t3.e$a` @kind object;
  #L468db4.  call `g`(v0) @signature `Lt3/e$a;.g:()V` @kind virtual;
  #L468dba.  v0:= v3.`t3.e.b` @type ^`t3.e$a` @kind object;
  #L468dbe.  call `g`(v0) @signature `Lt3/e$a;.g:()V` @kind virtual;
  #L468dc4.  v0:= 0I;
  #L468dc6.  v3.`t3.e.c` @type ^`boolean` := v0 @kind boolean;
  #L468dca.  v1:= -4.9E-324D;
  #L468dd4.  v3.`t3.e.e` @type ^`long` := v1 @kind wide;
  #L468dd8.  v3.`t3.e.f` @type ^`int` := v0;
  #L468ddc.  return @kind void;
}
