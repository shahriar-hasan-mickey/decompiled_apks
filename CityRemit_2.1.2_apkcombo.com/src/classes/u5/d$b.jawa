record `u5.d$b` @kind class @AccessFlag  extends `p5.o` @kind interface {
  `p5.p` `u5.d$b.a` @AccessFlag PRIVATE_FINAL;
  `byte`[] `u5.d$b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`u5.d$b` v2 @kind this, `p5.p` v3 @kind object) @signature `Lu5/d$b;.<init>:(Lp5/p;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L478ffc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L479002.  v0:= 1I;
  #L479004.  v0:= new `byte`[v0];
  #L479008.  v1:= 0I;
  #L47900a.  v0[v1]:= v1 @kind byte;
  #L47900e.  v2.`u5.d$b.b` @type ^`byte`[] := v0 @kind object;
  #L479012.  v2.`u5.d$b.a` @type ^`p5.p` := v3 @kind object;
  #L479016.  return @kind void;
}
procedure `void` `<init>`(`u5.d$b` v0 @kind this, `p5.p` v1 @kind object, `u5.d$a` v2 @kind object) @signature `Lu5/d$b;.<init>:(Lp5/p;Lu5/d$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L479028.  call `<init>`(v0, v1) @signature `Lu5/d$b;.<init>:(Lp5/p;)V` @kind direct;
  #L47902e.  return @kind void;
}
procedure `void` `a`(`u5.d$b` v6 @kind this, `byte`[] v7 @kind object, `byte`[] v8 @kind object) @signature `Lu5/d$b;.a:([B[B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L479040.  v0:= length @variable v7;
  #L479042.  v1:= 5I;
  #L479044.  if v0 <= v1 then goto L47916c;
  #L479048.  call temp:= `copyOf`(v7, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L47904e.  v0:= temp @kind object;
  #L479050.  v2:= length @variable v7;
  #L479052.  call temp:= `copyOfRange`(v7, v1, v2) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L479058.  v1:= temp @kind object;
  #L47905a.  v2:= v6.`u5.d$b.a` @type ^`p5.p` @kind object;
  #L47905e.  call temp:= `c`(v2, v0) @signature `Lp5/p;.c:([B)Ljava/util/List;` @kind virtual;
  #L479064.  v0:= temp @kind object;
  #L479066.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L47906c.  v0:= temp @kind object;
  #L47906e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L479074.  v2:= temp;
  #L479076.  if v2 == 0 then goto L479118;
  #L47907a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L479080.  v2:= temp @kind object;
  #L479082.  v2:= (`p5.p$b`) v2 @kind object;
  #L479086.  call temp:= `b`(v2) @signature `Lp5/p$b;.b:()Lw5/i0;` @kind virtual;
  #L47908c.  v3:= temp @kind object;
  #L47908e.  v4:= `@@w5.i0.r` @type ^`w5.i0` @kind object;
  #L479092.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L479098.  v3:= temp;
  #L47909a.  if v3 == 0 then goto L4790d0;
  #L47909e.  call temp:= `c`(v2) @signature `Lp5/p$b;.c:()Ljava/lang/Object;` @kind virtual;
  #L4790a4.  v2:= temp @kind object;
  #L4790a6.  v2:= (`p5.o`) v2 @kind object;
  #L4790aa.  v3:= 2I;
  #L4790ac.  v3:= new `byte`[][v3];
  #L4790b0.  v4:= 0I;
  #L4790b2.  v3[v4]:= v8 @kind object;
  #L4790b6.  v4:= 1I;
  #L4790b8.  v5:= v6.`u5.d$b.b` @type ^`byte`[] @kind object;
  #L4790bc.  v3[v4]:= v5 @kind object;
  #L4790c0.  call temp:= `a`(v3) @signature `Lx5/g;.a:([[B)[B` @kind static;
  #L4790c6.  v3:= temp @kind object;
  #L4790c8.  call `a`(v2, v1, v3) @signature `Lp5/o;.a:([B[B)V` @kind interface;
  #L4790ce.  goto L4790e2;
  #L4790d0.  call temp:= `c`(v2) @signature `Lp5/p$b;.c:()Ljava/lang/Object;` @kind virtual;
  #L4790d6.  v2:= temp @kind object;
  #L4790d8.  v2:= (`p5.o`) v2 @kind object;
  #L4790dc.  call `a`(v2, v1, v8) @signature `Lp5/o;.a:([B[B)V` @kind interface;
  #L4790e2.  return @kind void;
  #L4790e4.  v2:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L4790e6.  call temp:= `d`() @signature `Lu5/d;.d:()Ljava/util/logging/Logger;` @kind static;
  #L4790ec.  v3:= temp @kind object;
  #L4790ee.  v4:= new `java.lang.StringBuilder`;
  #L4790f2.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4790f8.  v5:= "tag prefix matches a key, but cannot verify: " @kind object;
  #L4790fc.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L479102.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L479108.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47910e.  v2:= temp @kind object;
  #L479110.  call `info`(v3, v2) @signature `Ljava/util/logging/Logger;.info:(Ljava/lang/String;)V` @kind virtual;
  #L479116.  goto L47906e;
  #L479118.  v0:= v6.`u5.d$b.a` @type ^`p5.p` @kind object;
  #L47911c.  call temp:= `e`(v0) @signature `Lp5/p;.e:()Ljava/util/List;` @kind virtual;
  #L479122.  v0:= temp @kind object;
  #L479124.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L47912a.  v0:= temp @kind object;
  #L47912c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L479132.  v1:= temp;
  #L479134.  if v1 == 0 then goto L47915c;
  #L479138.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L47913e.  v1:= temp @kind object;
  #L479140.  v1:= (`p5.p$b`) v1 @kind object;
  #L479144.  call temp:= `c`(v1) @signature `Lp5/p$b;.c:()Ljava/lang/Object;` @kind virtual;
  #L47914a.  v1:= temp @kind object;
  #L47914c.  v1:= (`p5.o`) v1 @kind object;
  #L479150.  call `a`(v1, v7, v8) @signature `Lp5/o;.a:([B[B)V` @kind interface;
  #L479156.  return @kind void;
  #L479158.  
  #L47915a.  goto L47912c;
  #L47915c.  v7:= new `java.security.GeneralSecurityException`;
  #L479160.  v8:= "invalid MAC" @kind object;
  #L479164.  call `<init>`(v7, v8) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47916a.  throw v7;
  #L47916c.  v7:= new `java.security.GeneralSecurityException`;
  #L479170.  v8:= "tag too short" @kind object;
  #L479174.  call `<init>`(v7, v8) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47917a.  throw v7;
  catch `java.security.GeneralSecurityException` @[L479086..L4790e2] goto L4790e4;
  catch `java.security.GeneralSecurityException` @[L479144..L479156] goto L479158;
}
procedure `byte`[] `b`(`u5.d$b` v5 @kind this, `byte`[] v6 @kind object) @signature `Lu5/d$b;.b:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L478f14.  v0:= v5.`u5.d$b.a` @type ^`p5.p` @kind object;
  #L478f18.  call temp:= `b`(v0) @signature `Lp5/p;.b:()Lp5/p$b;` @kind virtual;
  #L478f1e.  v0:= temp @kind object;
  #L478f20.  call temp:= `b`(v0) @signature `Lp5/p$b;.b:()Lw5/i0;` @kind virtual;
  #L478f26.  v0:= temp @kind object;
  #L478f28.  v1:= `@@w5.i0.r` @type ^`w5.i0` @kind object;
  #L478f2c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L478f32.  v0:= temp;
  #L478f34.  v1:= 1I;
  #L478f36.  v2:= 0I;
  #L478f38.  v3:= 2I;
  #L478f3a.  if v0 == 0 then goto L478fa0;
  #L478f3e.  v0:= new `byte`[][v3];
  #L478f42.  v4:= v5.`u5.d$b.a` @type ^`p5.p` @kind object;
  #L478f46.  call temp:= `b`(v4) @signature `Lp5/p;.b:()Lp5/p$b;` @kind virtual;
  #L478f4c.  v4:= temp @kind object;
  #L478f4e.  call temp:= `a`(v4) @signature `Lp5/p$b;.a:()[B` @kind virtual;
  #L478f54.  v4:= temp @kind object;
  #L478f56.  v0[v2]:= v4 @kind object;
  #L478f5a.  v4:= v5.`u5.d$b.a` @type ^`p5.p` @kind object;
  #L478f5e.  call temp:= `b`(v4) @signature `Lp5/p;.b:()Lp5/p$b;` @kind virtual;
  #L478f64.  v4:= temp @kind object;
  #L478f66.  call temp:= `c`(v4) @signature `Lp5/p$b;.c:()Ljava/lang/Object;` @kind virtual;
  #L478f6c.  v4:= temp @kind object;
  #L478f6e.  v4:= (`p5.o`) v4 @kind object;
  #L478f72.  v3:= new `byte`[][v3];
  #L478f76.  v3[v2]:= v6 @kind object;
  #L478f7a.  v6:= v5.`u5.d$b.b` @type ^`byte`[] @kind object;
  #L478f7e.  v3[v1]:= v6 @kind object;
  #L478f82.  call temp:= `a`(v3) @signature `Lx5/g;.a:([[B)[B` @kind static;
  #L478f88.  v6:= temp @kind object;
  #L478f8a.  call temp:= `b`(v4, v6) @signature `Lp5/o;.b:([B)[B` @kind interface;
  #L478f90.  v6:= temp @kind object;
  #L478f92.  v0[v1]:= v6 @kind object;
  #L478f96.  call temp:= `a`(v0) @signature `Lx5/g;.a:([[B)[B` @kind static;
  #L478f9c.  v6:= temp @kind object;
  #L478f9e.  return v6 @kind object;
  #L478fa0.  v0:= new `byte`[][v3];
  #L478fa4.  v3:= v5.`u5.d$b.a` @type ^`p5.p` @kind object;
  #L478fa8.  call temp:= `b`(v3) @signature `Lp5/p;.b:()Lp5/p$b;` @kind virtual;
  #L478fae.  v3:= temp @kind object;
  #L478fb0.  call temp:= `a`(v3) @signature `Lp5/p$b;.a:()[B` @kind virtual;
  #L478fb6.  v3:= temp @kind object;
  #L478fb8.  v0[v2]:= v3 @kind object;
  #L478fbc.  v2:= v5.`u5.d$b.a` @type ^`p5.p` @kind object;
  #L478fc0.  call temp:= `b`(v2) @signature `Lp5/p;.b:()Lp5/p$b;` @kind virtual;
  #L478fc6.  v2:= temp @kind object;
  #L478fc8.  call temp:= `c`(v2) @signature `Lp5/p$b;.c:()Ljava/lang/Object;` @kind virtual;
  #L478fce.  v2:= temp @kind object;
  #L478fd0.  v2:= (`p5.o`) v2 @kind object;
  #L478fd4.  call temp:= `b`(v2, v6) @signature `Lp5/o;.b:([B)[B` @kind interface;
  #L478fda.  v6:= temp @kind object;
  #L478fdc.  v0[v1]:= v6 @kind object;
  #L478fe0.  call temp:= `a`(v0) @signature `Lx5/g;.a:([[B)[B` @kind static;
  #L478fe6.  v6:= temp @kind object;
  #L478fe8.  return v6 @kind object;
}
