record `u5.b` @kind class @AccessFlag PUBLIC_FINAL extends `p5.h` @kind class {
}
procedure `void` `<init>`(`u5.b` v4 @kind this) @signature `Lu5/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L478c8c.  v0:= constclass @type ^`w5.v` @kind object;
  #L478c90.  v1:= 1I;
  #L478c92.  v1:= new `p5.h$b`[v1];
  #L478c96.  v2:= new `u5.b$a`;
  #L478c9a.  v3:= constclass @type ^`p5.o` @kind object;
  #L478c9e.  call `<init>`(v2, v3) @signature `Lu5/b$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L478ca4.  v3:= 0I;
  #L478ca6.  v1[v3]:= v2 @kind object;
  #L478caa.  call `<init>`(v4, v0, v1) @signature `Lp5/h;.<init>:(Ljava/lang/Class;[Lp5/h$b;)V` @kind direct;
  #L478cb0.  return @kind void;
}
procedure `void` `j`(`w5.x` v0 @kind object) @signature `Lu5/b;.j:(Lw5/x;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L478cc4.  call `o`(v0) @signature `Lu5/b;.o:(Lw5/x;)V` @kind static;
  #L478cca.  return @kind void;
}
procedure `void` `m`(`boolean` v1 ) @signature `Lu5/b;.m:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L478cdc.  v0:= new `u5.b`;
  #L478ce0.  call `<init>`(v0) @signature `Lu5/b;.<init>:()V` @kind direct;
  #L478ce6.  call `q`(v0, v1) @signature `Lp5/r;.q:(Lp5/h;Z)V` @kind static;
  #L478cec.  return @kind void;
}
procedure `void` `o`(`w5.x` v3 @kind object) @signature `Lu5/b;.o:(Lw5/x;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L478d7c.  call temp:= `Q`(v3) @signature `Lw5/x;.Q:()I` @kind virtual;
  #L478d82.  v0:= temp;
  #L478d84.  v1:= 10I;
  #L478d88.  if v0 < v1 then goto L478e24;
  #L478d8c.  v0:= `@@u5.b$c.a` @type ^`int`[] @kind object;
  #L478d90.  call temp:= `P`(v3) @signature `Lw5/x;.P:()Lw5/u;` @kind virtual;
  #L478d96.  v1:= temp @kind object;
  #L478d98.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L478d9e.  v1:= temp;
  #L478da0.  v0:= v0[v1];
  #L478da4.  v1:= 1I;
  #L478da6.  v2:= "tag size too big" @kind object;
  #L478daa.  if v0 == v1 then goto L478e06;
  #L478dae.  v1:= 2I;
  #L478db0.  if v0 == v1 then goto L478de8;
  #L478db4.  v1:= 3I;
  #L478db6.  if v0 != v1 then goto L478dd8;
  #L478dba.  call temp:= `Q`(v3) @signature `Lw5/x;.Q:()I` @kind virtual;
  #L478dc0.  v3:= temp;
  #L478dc2.  v0:= 64I;
  #L478dc6.  if v3 > v0 then goto L478dcc;
  #L478dca.  goto L478e16;
  #L478dcc.  v3:= new `java.security.GeneralSecurityException`;
  #L478dd0.  call `<init>`(v3, v2) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L478dd6.  throw v3;
  #L478dd8.  v3:= new `java.security.GeneralSecurityException`;
  #L478ddc.  v0:= "unknown hash type" @kind object;
  #L478de0.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L478de6.  throw v3;
  #L478de8.  call temp:= `Q`(v3) @signature `Lw5/x;.Q:()I` @kind virtual;
  #L478dee.  v3:= temp;
  #L478df0.  v0:= 32I;
  #L478df4.  if v3 > v0 then goto L478dfa;
  #L478df8.  goto L478e16;
  #L478dfa.  v3:= new `java.security.GeneralSecurityException`;
  #L478dfe.  call `<init>`(v3, v2) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L478e04.  throw v3;
  #L478e06.  call temp:= `Q`(v3) @signature `Lw5/x;.Q:()I` @kind virtual;
  #L478e0c.  v3:= temp;
  #L478e0e.  v0:= 20I;
  #L478e12.  if v3 > v0 then goto L478e18;
  #L478e16.  return @kind void;
  #L478e18.  v3:= new `java.security.GeneralSecurityException`;
  #L478e1c.  call `<init>`(v3, v2) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L478e22.  throw v3;
  #L478e24.  v3:= new `java.security.GeneralSecurityException`;
  #L478e28.  v0:= "tag size too small" @kind object;
  #L478e2c.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L478e32.  throw v3;
}
procedure `java.lang.String` `c`(`u5.b` v1 @kind this) @signature `Lu5/b;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L478c54.  v0:= "type.googleapis.com/google.crypto.tink.HmacKey" @kind object;
  #L478c58.  return v0 @kind object;
}
procedure `p5.h$a` `e`(`u5.b` v2 @kind this) @signature `Lu5/b;.e:()Lp5/h$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L478c6c.  v0:= new `u5.b$b`;
  #L478c70.  v1:= constclass @type ^`w5.w` @kind object;
  #L478c74.  call `<init>`(v0, v2, v1) @signature `Lu5/b$b;.<init>:(Lu5/b;Ljava/lang/Class;)V` @kind direct;
  #L478c7a.  return v0 @kind object;
}
procedure `w5.y$c` `f`(`u5.b` v1 @kind this) @signature `Lu5/b;.f:()Lw5/y$c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L478e68.  v0:= `@@w5.y$c.q` @type ^`w5.y$c` @kind object;
  #L478e6c.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.s0` `g`(`u5.b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.i` v1 @kind object) @signature `Lu5/b;.g:(Lcom/google/crypto/tink/shaded/protobuf/i;)Lcom/google/crypto/tink/shaded/protobuf/s0;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L478c24.  call temp:= `l`(v0, v1) @signature `Lu5/b;.l:(Lcom/google/crypto/tink/shaded/protobuf/i;)Lw5/v;` @kind virtual;
  #L478c2a.  v1:= temp @kind object;
  #L478c2c.  return v1 @kind object;
}
procedure `void` `i`(`u5.b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.s0` v1 @kind object) @signature `Lu5/b;.i:(Lcom/google/crypto/tink/shaded/protobuf/s0;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L478d00.  v1:= (`w5.v`) v1 @kind object;
  #L478d04.  call `n`(v0, v1) @signature `Lu5/b;.n:(Lw5/v;)V` @kind virtual;
  #L478d0a.  return @kind void;
}
procedure `int` `k`(`u5.b` v1 @kind this) @signature `Lu5/b;.k:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L478c40.  v0:= 0I;
  #L478c42.  return v0;
}
procedure `w5.v` `l`(`u5.b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.i` v2 @kind object) @signature `Lu5/b;.l:(Lcom/google/crypto/tink/shaded/protobuf/i;)Lw5/v;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L478e44.  call temp:= `b`() @signature `Lcom/google/crypto/tink/shaded/protobuf/q;.b:()Lcom/google/crypto/tink/shaded/protobuf/q;` @kind static;
  #L478e4a.  v0:= temp @kind object;
  #L478e4c.  call temp:= `W`(v2, v0) @signature `Lw5/v;.W:(Lcom/google/crypto/tink/shaded/protobuf/i;Lcom/google/crypto/tink/shaded/protobuf/q;)Lw5/v;` @kind static;
  #L478e52.  v2:= temp @kind object;
  #L478e54.  return v2 @kind object;
}
procedure `void` `n`(`u5.b` v2 @kind this, `w5.v` v3 @kind object) @signature `Lu5/b;.n:(Lw5/v;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L478d1c.  call temp:= `U`(v3) @signature `Lw5/v;.U:()I` @kind virtual;
  #L478d22.  v0:= temp;
  #L478d24.  call temp:= `k`(v2) @signature `Lu5/b;.k:()I` @kind virtual;
  #L478d2a.  v1:= temp;
  #L478d2c.  call `c`(v0, v1) @signature `Lx5/w;.c:(II)V` @kind static;
  #L478d32.  call temp:= `S`(v3) @signature `Lw5/v;.S:()Lcom/google/crypto/tink/shaded/protobuf/i;` @kind virtual;
  #L478d38.  v0:= temp @kind object;
  #L478d3a.  call temp:= `size`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/i;.size:()I` @kind virtual;
  #L478d40.  v0:= temp;
  #L478d42.  v1:= 16I;
  #L478d46.  if v0 < v1 then goto L478d5a;
  #L478d4a.  call temp:= `T`(v3) @signature `Lw5/v;.T:()Lw5/x;` @kind virtual;
  #L478d50.  v3:= temp @kind object;
  #L478d52.  call `o`(v3) @signature `Lu5/b;.o:(Lw5/x;)V` @kind static;
  #L478d58.  return @kind void;
  #L478d5a.  v3:= new `java.security.GeneralSecurityException`;
  #L478d5e.  v0:= "key too short" @kind object;
  #L478d62.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L478d68.  throw v3;
}
