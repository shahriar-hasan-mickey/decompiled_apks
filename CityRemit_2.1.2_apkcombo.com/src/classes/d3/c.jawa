record `d3.c` @kind class @AccessFlag PUBLIC_FINAL extends `d3.l` @kind interface, `r3.h0$b` @kind interface {
  `d3.g` `d3.c.A` @AccessFlag PRIVATE;
  `boolean` `d3.c.B` @AccessFlag PRIVATE;
  `long` `d3.c.C` @AccessFlag PRIVATE;
  `c3.d` `d3.c.o` @AccessFlag PRIVATE_FINAL;
  `d3.k` `d3.c.p` @AccessFlag PRIVATE_FINAL;
  `r3.g0` `d3.c.q` @AccessFlag PRIVATE_FINAL;
  `java.util.HashMap` `d3.c.r` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.CopyOnWriteArrayList` `d3.c.s` @AccessFlag PRIVATE_FINAL;
  `double` `d3.c.t` @AccessFlag PRIVATE_FINAL;
  `x2.b0$a` `d3.c.u` @AccessFlag PRIVATE;
  `r3.h0` `d3.c.v` @AccessFlag PRIVATE;
  `android.os.Handler` `d3.c.w` @AccessFlag PRIVATE;
  `d3.l$e` `d3.c.x` @AccessFlag PRIVATE;
  `d3.h` `d3.c.y` @AccessFlag PRIVATE;
  `android.net.Uri` `d3.c.z` @AccessFlag PRIVATE;
}
global `d3.l$a` `@@d3.c.D` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ld3/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f39ac.  v0:= `@@d3.b.a` @type ^`d3.b` @kind object;
  #L2f39b0.  `@@d3.c.D` @type ^`d3.l$a` := v0 @kind object;
  #L2f39b4.  return @kind void;
}
procedure `void` `<init>`(`d3.c` v6 @kind this, `c3.d` v7 @kind object, `r3.g0` v8 @kind object, `d3.k` v9 @kind object) @signature `Ld3/c;.<init>:(Lc3/d;Lr3/g0;Ld3/k;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2f39c8.  v4:= 3.5D;
  #L2f39cc.  v0:= v6 @kind object;
  #L2f39ce.  v1:= v7 @kind object;
  #L2f39d0.  v2:= v8 @kind object;
  #L2f39d2.  v3:= v9 @kind object;
  #L2f39d4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ld3/c;.<init>:(Lc3/d;Lr3/g0;Ld3/k;D)V` @kind direct;
  #L2f39da.  return @kind void;
}
procedure `void` `<init>`(`d3.c` v0 @kind this, `c3.d` v1 @kind object, `r3.g0` v2 @kind object, `d3.k` v3 @kind object, `double` v4 ) @signature `Ld3/c;.<init>:(Lc3/d;Lr3/g0;Ld3/k;D)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f39ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f39f2.  v0.`d3.c.o` @type ^`c3.d` := v1 @kind object;
  #L2f39f6.  v0.`d3.c.p` @type ^`d3.k` := v3 @kind object;
  #L2f39fa.  v0.`d3.c.q` @type ^`r3.g0` := v2 @kind object;
  #L2f39fe.  v0.`d3.c.t` @type ^`double` := v4 @kind wide;
  #L2f3a02.  v1:= new `java.util.concurrent.CopyOnWriteArrayList`;
  #L2f3a06.  call `<init>`(v1) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:()V` @kind direct;
  #L2f3a0c.  v0.`d3.c.s` @type ^`java.util.concurrent.CopyOnWriteArrayList` := v1 @kind object;
  #L2f3a10.  v1:= new `java.util.HashMap`;
  #L2f3a14.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2f3a1a.  v0.`d3.c.r` @type ^`java.util.HashMap` := v1 @kind object;
  #L2f3a1e.  v1:= -4.9E-324D;
  #L2f3a28.  v0.`d3.c.C` @type ^`long` := v1 @kind wide;
  #L2f3a2c.  return @kind void;
}
procedure `java.util.HashMap` `A`(`d3.c` v0 @kind object) @signature `Ld3/c;.A:(Ld3/c;)Ljava/util/HashMap;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2f37e8.  v0:= v0.`d3.c.r` @type ^`java.util.HashMap` @kind object;
  #L2f37ec.  return v0 @kind object;
}
procedure `c3.d` `B`(`d3.c` v0 @kind object) @signature `Ld3/c;.B:(Ld3/c;)Lc3/d;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2f3614.  v0:= v0.`d3.c.o` @type ^`c3.d` @kind object;
  #L2f3618.  return v0 @kind object;
}
procedure `x2.b0$a` `C`(`d3.c` v0 @kind object) @signature `Ld3/c;.C:(Ld3/c;)Lx2/b0$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2f3f28.  v0:= v0.`d3.c.u` @type ^`x2.b0$a` @kind object;
  #L2f3f2c.  return v0 @kind object;
}
procedure `r3.g0` `D`(`d3.c` v0 @kind object) @signature `Ld3/c;.D:(Ld3/c;)Lr3/g0;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2f38ac.  v0:= v0.`d3.c.q` @type ^`r3.g0` @kind object;
  #L2f38b0.  return v0 @kind object;
}
procedure `void` `E`(`d3.c` v5 @kind this, `java.util.List` v6 @kind object) @signature `Ld3/c;.E:(Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f3a7c.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2f3a82.  v0:= temp;
  #L2f3a84.  v1:= 0I;
  #L2f3a86.  if v1 >= v0 then goto L2f3ab0;
  #L2f3a8a.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f3a90.  v2:= temp @kind object;
  #L2f3a92.  v2:= (`android.net.Uri`) v2 @kind object;
  #L2f3a96.  v3:= new `d3.c$c`;
  #L2f3a9a.  call `<init>`(v3, v5, v2) @signature `Ld3/c$c;.<init>:(Ld3/c;Landroid/net/Uri;)V` @kind direct;
  #L2f3aa0.  v4:= v5.`d3.c.r` @type ^`java.util.HashMap` @kind object;
  #L2f3aa4.  call temp:= `put`(v4, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2f3aaa.  v1:= v1 + 1;
  #L2f3aae.  goto L2f3a86;
  #L2f3ab0.  return @kind void;
}
procedure `d3.g$d` `F`(`d3.g` v4 @kind object, `d3.g` v5 @kind object) @signature `Ld3/c;.F:(Ld3/g;Ld3/g;)Ld3/g$d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f36e0.  v0:= v5.`d3.g.k` @type ^`long` @kind wide;
  #L2f36e4.  v2:= v4.`d3.g.k` @type ^`long` @kind wide;
  #L2f36e8.  v0:= v0 - v2 @kind long;
  #L2f36ea.  v5:= (`int`) v0 @kind l2i;
  #L2f36ec.  v4:= v4.`d3.g.r` @type ^`java.util.List` @kind object;
  #L2f36f0.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2f36f6.  v0:= temp;
  #L2f36f8.  if v5 >= v0 then goto L2f370a;
  #L2f36fc.  call temp:= `get`(v4, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f3702.  v4:= temp @kind object;
  #L2f3704.  v4:= (`d3.g$d`) v4 @kind object;
  #L2f3708.  goto L2f370c;
  #L2f370a.  v4:= 0I;
  #L2f370c.  return v4 @kind object;
}
procedure `d3.g` `G`(`d3.c` v2 @kind this, `d3.g` v3 @kind object, `d3.g` v4 @kind object) @signature `Ld3/c;.G:(Ld3/g;Ld3/g;)Ld3/g;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2f3660.  call temp:= `f`(v4, v3) @signature `Ld3/g;.f:(Ld3/g;)Z` @kind virtual;
  #L2f3666.  v0:= temp;
  #L2f3668.  if v0 != 0 then goto L2f367e;
  #L2f366c.  v4:= v4.`d3.g.o` @type ^`boolean` @kind boolean;
  #L2f3670.  if v4 == 0 then goto L2f367c;
  #L2f3674.  call temp:= `d`(v3) @signature `Ld3/g;.d:()Ld3/g;` @kind virtual;
  #L2f367a.  v3:= temp @kind object;
  #L2f367c.  return v3 @kind object;
  #L2f367e.  call temp:= `I`(v2, v3, v4) @signature `Ld3/c;.I:(Ld3/g;Ld3/g;)J` @kind direct;
  #L2f3684.  v0:= temp @kind wide;
  #L2f3686.  call temp:= `H`(v2, v3, v4) @signature `Ld3/c;.H:(Ld3/g;Ld3/g;)I` @kind direct;
  #L2f368c.  v3:= temp;
  #L2f368e.  call temp:= `c`(v4, v0, v3) @signature `Ld3/g;.c:(JI)Ld3/g;` @kind virtual;
  #L2f3694.  v3:= temp @kind object;
  #L2f3696.  return v3 @kind object;
}
procedure `int` `H`(`d3.c` v3 @kind this, `d3.g` v4 @kind object, `d3.g` v5 @kind object) @signature `Ld3/c;.H:(Ld3/g;Ld3/g;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2f3780.  v0:= v5.`d3.g.i` @type ^`boolean` @kind boolean;
  #L2f3784.  if v0 == 0 then goto L2f378e;
  #L2f3788.  v4:= v5.`d3.g.j` @type ^`int`;
  #L2f378c.  return v4;
  #L2f378e.  v0:= v3.`d3.c.A` @type ^`d3.g` @kind object;
  #L2f3792.  v1:= 0I;
  #L2f3794.  if v0 == 0 then goto L2f379e;
  #L2f3798.  v0:= v0.`d3.g.j` @type ^`int`;
  #L2f379c.  goto L2f37a0;
  #L2f379e.  v0:= 0I;
  #L2f37a0.  if v4 != 0 then goto L2f37a6;
  #L2f37a4.  return v0;
  #L2f37a6.  call temp:= `F`(v4, v5) @signature `Ld3/c;.F:(Ld3/g;Ld3/g;)Ld3/g$d;` @kind static;
  #L2f37ac.  v2:= temp @kind object;
  #L2f37ae.  if v2 == 0 then goto L2f37d4;
  #L2f37b2.  v4:= v4.`d3.g.j` @type ^`int`;
  #L2f37b6.  v0:= v2.`d3.g$e.r` @type ^`int`;
  #L2f37ba.  v4:= v4 + v0 @kind int;
  #L2f37bc.  v5:= v5.`d3.g.r` @type ^`java.util.List` @kind object;
  #L2f37c0.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f37c6.  v5:= temp @kind object;
  #L2f37c8.  v5:= (`d3.g$d`) v5 @kind object;
  #L2f37cc.  v5:= v5.`d3.g$e.r` @type ^`int`;
  #L2f37d0.  v4:= v4 - v5 @kind int;
  #L2f37d2.  return v4;
  #L2f37d4.  return v0;
}
procedure `long` `I`(`d3.c` v8 @kind this, `d3.g` v9 @kind object, `d3.g` v10 @kind object) @signature `Ld3/c;.I:(Ld3/g;Ld3/g;)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2f3830.  v0:= v10.`d3.g.p` @type ^`boolean` @kind boolean;
  #L2f3834.  if v0 == 0 then goto L2f383e;
  #L2f3838.  v9:= v10.`d3.g.h` @type ^`long` @kind wide;
  #L2f383c.  return v9 @kind wide;
  #L2f383e.  v0:= v8.`d3.c.A` @type ^`d3.g` @kind object;
  #L2f3842.  if v0 == 0 then goto L2f384c;
  #L2f3846.  v0:= v0.`d3.g.h` @type ^`long` @kind wide;
  #L2f384a.  goto L2f3850;
  #L2f384c.  v0:= 0L;
  #L2f3850.  if v9 != 0 then goto L2f3856;
  #L2f3854.  return v0 @kind wide;
  #L2f3856.  v2:= v9.`d3.g.r` @type ^`java.util.List` @kind object;
  #L2f385a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2f3860.  v2:= temp;
  #L2f3862.  call temp:= `F`(v9, v10) @signature `Ld3/c;.F:(Ld3/g;Ld3/g;)Ld3/g$d;` @kind static;
  #L2f3868.  v3:= temp @kind object;
  #L2f386a.  if v3 == 0 then goto L2f387a;
  #L2f386e.  v9:= v9.`d3.g.h` @type ^`long` @kind wide;
  #L2f3872.  v0:= v3.`d3.g$e.s` @type ^`long` @kind wide;
  #L2f3876.  v9:= v9 + v0 @kind long;
  #L2f3878.  return v9 @kind wide;
  #L2f387a.  v2:= (`long`) v2 @kind i2l;
  #L2f387c.  v4:= v10.`d3.g.k` @type ^`long` @kind wide;
  #L2f3880.  v6:= v9.`d3.g.k` @type ^`long` @kind wide;
  #L2f3884.  v4:= v4 - v6 @kind long;
  #L2f3886.  v10:= lcmp(v2, v4);
  #L2f388a.  if v10 != 0 then goto L2f3898;
  #L2f388e.  call temp:= `e`(v9) @signature `Ld3/g;.e:()J` @kind virtual;
  #L2f3894.  v9:= temp @kind wide;
  #L2f3896.  return v9 @kind wide;
  #L2f3898.  return v0 @kind wide;
}
procedure `android.net.Uri` `J`(`d3.c` v3 @kind this, `android.net.Uri` v4 @kind object) @signature `Ld3/c;.J:(Landroid/net/Uri;)Landroid/net/Uri;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2f33a0.  v0:= v3.`d3.c.A` @type ^`d3.g` @kind object;
  #L2f33a4.  if v0 == 0 then goto L2f340a;
  #L2f33a8.  v1:= v0.`d3.g.v` @type ^`d3.g$f` @kind object;
  #L2f33ac.  v1:= v1.`d3.g$f.e` @type ^`boolean` @kind boolean;
  #L2f33b0.  if v1 == 0 then goto L2f340a;
  #L2f33b4.  v0:= v0.`d3.g.t` @type ^`java.util.Map` @kind object;
  #L2f33b8.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2f33be.  v0:= temp @kind object;
  #L2f33c0.  v0:= (`d3.g$c`) v0 @kind object;
  #L2f33c4.  if v0 == 0 then goto L2f340a;
  #L2f33c8.  call temp:= `buildUpon`(v4) @signature `Landroid/net/Uri;.buildUpon:()Landroid/net/Uri$Builder;` @kind virtual;
  #L2f33ce.  v4:= temp @kind object;
  #L2f33d0.  v1:= v0.`d3.g$c.b` @type ^`long` @kind wide;
  #L2f33d4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(J)Ljava/lang/String;` @kind static;
  #L2f33da.  v1:= temp @kind object;
  #L2f33dc.  v2:= "_HLS_msn" @kind object;
  #L2f33e0.  call temp:= `appendQueryParameter`(v4, v2, v1) @signature `Landroid/net/Uri$Builder;.appendQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri$Builder;` @kind virtual;
  #L2f33e6.  v0:= v0.`d3.g$c.c` @type ^`int`;
  #L2f33ea.  v1:= -1I;
  #L2f33ec.  if v0 == v1 then goto L2f3402;
  #L2f33f0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2f33f6.  v0:= temp @kind object;
  #L2f33f8.  v1:= "_HLS_part" @kind object;
  #L2f33fc.  call temp:= `appendQueryParameter`(v4, v1, v0) @signature `Landroid/net/Uri$Builder;.appendQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri$Builder;` @kind virtual;
  #L2f3402.  call temp:= `build`(v4) @signature `Landroid/net/Uri$Builder;.build:()Landroid/net/Uri;` @kind virtual;
  #L2f3408.  v4:= temp @kind object;
  #L2f340a.  return v4 @kind object;
}
procedure `boolean` `K`(`d3.c` v4 @kind this, `android.net.Uri` v5 @kind object) @signature `Ld3/c;.K:(Landroid/net/Uri;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2f34e8.  v0:= v4.`d3.c.y` @type ^`d3.h` @kind object;
  #L2f34ec.  v0:= v0.`d3.h.e` @type ^`java.util.List` @kind object;
  #L2f34f0.  v1:= 0I;
  #L2f34f2.  v2:= 0I;
  #L2f34f4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2f34fa.  v3:= temp;
  #L2f34fc.  if v2 >= v3 then goto L2f3526;
  #L2f3500.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f3506.  v3:= temp @kind object;
  #L2f3508.  v3:= (`d3.h$b`) v3 @kind object;
  #L2f350c.  v3:= v3.`d3.h$b.a` @type ^`android.net.Uri` @kind object;
  #L2f3510.  call temp:= `equals`(v5, v3) @signature `Landroid/net/Uri;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f3516.  v3:= temp;
  #L2f3518.  if v3 == 0 then goto L2f3520;
  #L2f351c.  v5:= 1I;
  #L2f351e.  return v5;
  #L2f3520.  v2:= v2 + 1;
  #L2f3524.  goto L2f34f4;
  #L2f3526.  return v1;
}
procedure `boolean` `L`(`d3.c` v10 @kind this) @signature `Ld3/c;.L:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2f3538.  v0:= v10.`d3.c.y` @type ^`d3.h` @kind object;
  #L2f353c.  v0:= v0.`d3.h.e` @type ^`java.util.List` @kind object;
  #L2f3540.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2f3546.  v1:= temp;
  #L2f3548.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L2f354e.  v2:= temp @kind wide;
  #L2f3550.  v4:= 0I;
  #L2f3552.  v5:= 0I;
  #L2f3554.  if v5 >= v1 then goto L2f35b8;
  #L2f3558.  v6:= v10.`d3.c.r` @type ^`java.util.HashMap` @kind object;
  #L2f355c.  call temp:= `get`(v0, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f3562.  v7:= temp @kind object;
  #L2f3564.  v7:= (`d3.h$b`) v7 @kind object;
  #L2f3568.  v7:= v7.`d3.h$b.a` @type ^`android.net.Uri` @kind object;
  #L2f356c.  call temp:= `get`(v6, v7) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2f3572.  v6:= temp @kind object;
  #L2f3574.  v6:= (`d3.c$c`) v6 @kind object;
  #L2f3578.  call temp:= `e`(v6) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2f357e.  v6:= temp @kind object;
  #L2f3580.  v6:= (`d3.c$c`) v6 @kind object;
  #L2f3584.  call temp:= `d`(v6) @signature `Ld3/c$c;.d:(Ld3/c$c;)J` @kind static;
  #L2f358a.  v7:= temp @kind wide;
  #L2f358c.  v9:= lcmp(v2, v7);
  #L2f3590.  if v9 <= 0 then goto L2f35b2;
  #L2f3594.  call temp:= `e`(v6) @signature `Ld3/c$c;.e:(Ld3/c$c;)Landroid/net/Uri;` @kind static;
  #L2f359a.  v0:= temp @kind object;
  #L2f359c.  v10.`d3.c.z` @type ^`android.net.Uri` := v0 @kind object;
  #L2f35a0.  call temp:= `J`(v10, v0) @signature `Ld3/c;.J:(Landroid/net/Uri;)Landroid/net/Uri;` @kind direct;
  #L2f35a6.  v0:= temp @kind object;
  #L2f35a8.  call `f`(v6, v0) @signature `Ld3/c$c;.f:(Ld3/c$c;Landroid/net/Uri;)V` @kind static;
  #L2f35ae.  v0:= 1I;
  #L2f35b0.  return v0;
  #L2f35b2.  v5:= v5 + 1;
  #L2f35b6.  goto L2f3554;
  #L2f35b8.  return v4;
}
procedure `void` `M`(`d3.c` v3 @kind this, `android.net.Uri` v4 @kind object) @signature `Ld3/c;.M:(Landroid/net/Uri;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2f3ac4.  v0:= v3.`d3.c.z` @type ^`android.net.Uri` @kind object;
  #L2f3ac8.  call temp:= `equals`(v4, v0) @signature `Landroid/net/Uri;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f3ace.  v0:= temp;
  #L2f3ad0.  if v0 != 0 then goto L2f3b38;
  #L2f3ad4.  call temp:= `K`(v3, v4) @signature `Ld3/c;.K:(Landroid/net/Uri;)Z` @kind direct;
  #L2f3ada.  v0:= temp;
  #L2f3adc.  if v0 == 0 then goto L2f3b38;
  #L2f3ae0.  v0:= v3.`d3.c.A` @type ^`d3.g` @kind object;
  #L2f3ae4.  if v0 == 0 then goto L2f3af2;
  #L2f3ae8.  v0:= v0.`d3.g.o` @type ^`boolean` @kind boolean;
  #L2f3aec.  if v0 == 0 then goto L2f3af2;
  #L2f3af0.  goto L2f3b38;
  #L2f3af2.  v3.`d3.c.z` @type ^`android.net.Uri` := v4 @kind object;
  #L2f3af6.  v0:= v3.`d3.c.r` @type ^`java.util.HashMap` @kind object;
  #L2f3afa.  call temp:= `get`(v0, v4) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2f3b00.  v0:= temp @kind object;
  #L2f3b02.  v0:= (`d3.c$c`) v0 @kind object;
  #L2f3b06.  call temp:= `g`(v0) @signature `Ld3/c$c;.g:(Ld3/c$c;)Ld3/g;` @kind static;
  #L2f3b0c.  v1:= temp @kind object;
  #L2f3b0e.  if v1 == 0 then goto L2f3b2a;
  #L2f3b12.  v2:= v1.`d3.g.o` @type ^`boolean` @kind boolean;
  #L2f3b16.  if v2 == 0 then goto L2f3b2a;
  #L2f3b1a.  v3.`d3.c.A` @type ^`d3.g` := v1 @kind object;
  #L2f3b1e.  v4:= v3.`d3.c.x` @type ^`d3.l$e` @kind object;
  #L2f3b22.  call `d`(v4, v1) @signature `Ld3/l$e;.d:(Ld3/g;)V` @kind interface;
  #L2f3b28.  goto L2f3b38;
  #L2f3b2a.  call temp:= `J`(v3, v4) @signature `Ld3/c;.J:(Landroid/net/Uri;)Landroid/net/Uri;` @kind direct;
  #L2f3b30.  v4:= temp @kind object;
  #L2f3b32.  call `f`(v0, v4) @signature `Ld3/c$c;.f:(Ld3/c$c;Landroid/net/Uri;)V` @kind static;
  #L2f3b38.  return @kind void;
}
procedure `boolean` `N`(`d3.c` v3 @kind this, `android.net.Uri` v4 @kind object, `r3.g0$c` v5 @kind object, `boolean` v6 ) @signature `Ld3/c;.N:(Landroid/net/Uri;Lr3/g0$c;Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2f35cc.  v0:= v3.`d3.c.s` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L2f35d0.  call temp:= `iterator`(v0) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L2f35d6.  v0:= temp @kind object;
  #L2f35d8.  v1:= 0I;
  #L2f35da.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2f35e0.  v2:= temp;
  #L2f35e2.  if v2 == 0 then goto L2f3602;
  #L2f35e6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2f35ec.  v2:= temp @kind object;
  #L2f35ee.  v2:= (`d3.l$b`) v2 @kind object;
  #L2f35f2.  call temp:= `n`(v2, v4, v5, v6) @signature `Ld3/l$b;.n:(Landroid/net/Uri;Lr3/g0$c;Z)Z` @kind interface;
  #L2f35f8.  v2:= temp;
  #L2f35fa.  v2:= v2 ^~ 1;
  #L2f35fe.  v1:= v1 ^| v2 @kind int;
  #L2f3600.  goto L2f35da;
  #L2f3602.  return v1;
}
procedure `void` `R`(`d3.c` v2 @kind this, `android.net.Uri` v3 @kind object, `d3.g` v4 @kind object) @signature `Ld3/c;.R:(Landroid/net/Uri;Ld3/g;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2f3d3c.  v0:= v2.`d3.c.z` @type ^`android.net.Uri` @kind object;
  #L2f3d40.  call temp:= `equals`(v3, v0) @signature `Landroid/net/Uri;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f3d46.  v3:= temp;
  #L2f3d48.  if v3 == 0 then goto L2f3d76;
  #L2f3d4c.  v3:= v2.`d3.c.A` @type ^`d3.g` @kind object;
  #L2f3d50.  if v3 != 0 then goto L2f3d68;
  #L2f3d54.  v3:= v4.`d3.g.o` @type ^`boolean` @kind boolean;
  #L2f3d58.  v3:= v3 ^~ 1;
  #L2f3d5c.  v2.`d3.c.B` @type ^`boolean` := v3 @kind boolean;
  #L2f3d60.  v0:= v4.`d3.g.h` @type ^`long` @kind wide;
  #L2f3d64.  v2.`d3.c.C` @type ^`long` := v0 @kind wide;
  #L2f3d68.  v2.`d3.c.A` @type ^`d3.g` := v4 @kind object;
  #L2f3d6c.  v3:= v2.`d3.c.x` @type ^`d3.l$e` @kind object;
  #L2f3d70.  call `d`(v3, v4) @signature `Ld3/l$e;.d:(Ld3/g;)V` @kind interface;
  #L2f3d76.  v3:= v2.`d3.c.s` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L2f3d7a.  call temp:= `iterator`(v3) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L2f3d80.  v3:= temp @kind object;
  #L2f3d82.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2f3d88.  v4:= temp;
  #L2f3d8a.  if v4 == 0 then goto L2f3da2;
  #L2f3d8e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2f3d94.  v4:= temp @kind object;
  #L2f3d96.  v4:= (`d3.l$b`) v4 @kind object;
  #L2f3d9a.  call `e`(v4) @signature `Ld3/l$b;.e:()V` @kind interface;
  #L2f3da0.  goto L2f3d82;
  #L2f3da2.  return @kind void;
}
procedure `boolean` `m`(`d3.c` v0 @kind object, `android.net.Uri` v1 @kind object, `r3.g0$c` v2 @kind object, `boolean` v3 ) @signature `Ld3/c;.m:(Ld3/c;Landroid/net/Uri;Lr3/g0$c;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2f3434.  call temp:= `N`(v0, v1, v2, v3) @signature `Ld3/c;.N:(Landroid/net/Uri;Lr3/g0$c;Z)Z` @kind direct;
  #L2f343a.  v0:= temp;
  #L2f343c.  return v0;
}
procedure `android.os.Handler` `o`(`d3.c` v0 @kind object) @signature `Ld3/c;.o:(Ld3/c;)Landroid/os/Handler;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2f341c.  v0:= v0.`d3.c.w` @type ^`android.os.Handler` @kind object;
  #L2f3420.  return v0 @kind object;
}
procedure `d3.h` `p`(`d3.c` v0 @kind object) @signature `Ld3/c;.p:(Ld3/c;)Ld3/h;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2f3720.  v0:= v0.`d3.c.y` @type ^`d3.h` @kind object;
  #L2f3724.  return v0 @kind object;
}
procedure `d3.k` `q`(`d3.c` v0 @kind object) @signature `Ld3/c;.q:(Ld3/c;)Ld3/k;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2f3750.  v0:= v0.`d3.c.p` @type ^`d3.k` @kind object;
  #L2f3754.  return v0 @kind object;
}
procedure `d3.g` `r`(`d3.c` v0 @kind object, `d3.g` v1 @kind object, `d3.g` v2 @kind object) @signature `Ld3/c;.r:(Ld3/c;Ld3/g;Ld3/g;)Ld3/g;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2f362c.  call temp:= `G`(v0, v1, v2) @signature `Ld3/c;.G:(Ld3/g;Ld3/g;)Ld3/g;` @kind direct;
  #L2f3632.  v0:= temp @kind object;
  #L2f3634.  return v0 @kind object;
}
procedure `void` `s`(`d3.c` v0 @kind object, `android.net.Uri` v1 @kind object, `d3.g` v2 @kind object) @signature `Ld3/c;.s:(Ld3/c;Landroid/net/Uri;Ld3/g;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2f3a40.  call `R`(v0, v1, v2) @signature `Ld3/c;.R:(Landroid/net/Uri;Ld3/g;)V` @kind direct;
  #L2f3a46.  return @kind void;
}
procedure `double` `v`(`d3.c` v2 @kind object) @signature `Ld3/c;.v:(Ld3/c;)D` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L2f3768.  v0:= v2.`d3.c.t` @type ^`double` @kind wide;
  #L2f376c.  return v0 @kind wide;
}
procedure `android.net.Uri` `w`(`d3.c` v0 @kind object) @signature `Ld3/c;.w:(Ld3/c;)Landroid/net/Uri;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2f3388.  v0:= v0.`d3.c.z` @type ^`android.net.Uri` @kind object;
  #L2f338c.  return v0 @kind object;
}
procedure `boolean` `x`(`d3.c` v0 @kind object) @signature `Ld3/c;.x:(Ld3/c;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2f3450.  call temp:= `L`(v0) @signature `Ld3/c;.L:()Z` @kind direct;
  #L2f3456.  v0:= temp;
  #L2f3458.  return v0;
}
procedure `java.util.concurrent.CopyOnWriteArrayList` `y`(`d3.c` v0 @kind object) @signature `Ld3/c;.y:(Ld3/c;)Ljava/util/concurrent/CopyOnWriteArrayList;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2f3800.  v0:= v0.`d3.c.s` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L2f3804.  return v0 @kind object;
}
procedure `d3.g` `z`(`d3.c` v0 @kind object) @signature `Ld3/c;.z:(Ld3/c;)Ld3/g;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2f3648.  v0:= v0.`d3.c.A` @type ^`d3.g` @kind object;
  #L2f364c.  return v0 @kind object;
}
procedure `void` `O`(`d3.c` v15 @kind this, `r3.j0` v16 @kind object, `long` v17 , `long` v19 , `boolean` v21 ) @signature `Ld3/c;.O:(Lr3/j0;JJZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L2f3bc0.  v0:= v15 @kind object;
  #L2f3bc2.  v1:= v16 @kind object;
  #L2f3bc6.  v14:= new `x2.n`;
  #L2f3bca.  v3:= v1.`r3.j0.a` @type ^`long` @kind wide;
  #L2f3bce.  v5:= v1.`r3.j0.b` @type ^`r3.p` @kind object;
  #L2f3bd2.  call temp:= `f`(v16) @signature `Lr3/j0;.f:()Landroid/net/Uri;` @kind virtual;
  #L2f3bd8.  v6:= temp @kind object;
  #L2f3bda.  call temp:= `d`(v16) @signature `Lr3/j0;.d:()Ljava/util/Map;` @kind virtual;
  #L2f3be0.  v7:= temp @kind object;
  #L2f3be2.  call temp:= `c`(v16) @signature `Lr3/j0;.c:()J` @kind virtual;
  #L2f3be8.  v12:= temp @kind wide;
  #L2f3bea.  v2:= v14 @kind object;
  #L2f3bec.  v8:= v17 @kind wide;
  #L2f3bf0.  v10:= v19 @kind wide;
  #L2f3bf4.  call `<init>`(v2, v3, v5, v6, v7, v8, v10, v12) @signature `Lx2/n;.<init>:(JLr3/p;Landroid/net/Uri;Ljava/util/Map;JJJ)V` @kind direct;
  #L2f3bfa.  v2:= v0.`d3.c.q` @type ^`r3.g0` @kind object;
  #L2f3bfe.  v3:= v1.`r3.j0.a` @type ^`long` @kind wide;
  #L2f3c02.  call `a`(v2, v3) @signature `Lr3/g0;.a:(J)V` @kind interface;
  #L2f3c08.  v1:= v0.`d3.c.u` @type ^`x2.b0$a` @kind object;
  #L2f3c0c.  v2:= 4I;
  #L2f3c0e.  call `q`(v1, v14, v2) @signature `Lx2/b0$a;.q:(Lx2/n;I)V` @kind virtual;
  #L2f3c14.  return @kind void;
}
procedure `void` `P`(`d3.c` v17 @kind this, `r3.j0` v18 @kind object, `long` v19 , `long` v21 ) @signature `Ld3/c;.P:(Lr3/j0;JJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L2f3c44.  v0:= v17 @kind object;
  #L2f3c48.  v1:= v18 @kind object;
  #L2f3c4c.  call temp:= `e`(v18) @signature `Lr3/j0;.e:()Ljava/lang/Object;` @kind virtual;
  #L2f3c52.  v2:= temp @kind object;
  #L2f3c54.  v2:= (`d3.i`) v2 @kind object;
  #L2f3c58.  v3:= instanceof @variable v2 @type ^`d3.g` @kind boolean;
  #L2f3c5c.  if v3 == 0 then goto L2f3c6e;
  #L2f3c60.  v4:= v2.`d3.i.a` @type ^`java.lang.String` @kind object;
  #L2f3c64.  call temp:= `e`(v4) @signature `Ld3/h;.e:(Ljava/lang/String;)Ld3/h;` @kind static;
  #L2f3c6a.  v4:= temp @kind object;
  #L2f3c6c.  goto L2f3c74;
  #L2f3c6e.  v4:= v2 @kind object;
  #L2f3c70.  v4:= (`d3.h`) v4 @kind object;
  #L2f3c74.  v0.`d3.c.y` @type ^`d3.h` := v4 @kind object;
  #L2f3c78.  v5:= v4.`d3.h.e` @type ^`java.util.List` @kind object;
  #L2f3c7c.  v6:= 0I;
  #L2f3c7e.  call temp:= `get`(v5, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2f3c84.  v5:= temp @kind object;
  #L2f3c86.  v5:= (`d3.h$b`) v5 @kind object;
  #L2f3c8a.  v5:= v5.`d3.h$b.a` @type ^`android.net.Uri` @kind object;
  #L2f3c8e.  v0.`d3.c.z` @type ^`android.net.Uri` := v5 @kind object;
  #L2f3c92.  v5:= v0.`d3.c.s` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L2f3c96.  v6:= new `d3.c$b`;
  #L2f3c9a.  v7:= 0I;
  #L2f3c9c.  call `<init>`(v6, v0, v7) @signature `Ld3/c$b;.<init>:(Ld3/c;Ld3/c$a;)V` @kind direct;
  #L2f3ca2.  call temp:= `add`(v5, v6) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f3ca8.  v4:= v4.`d3.h.d` @type ^`java.util.List` @kind object;
  #L2f3cac.  call `E`(v0, v4) @signature `Ld3/c;.E:(Ljava/util/List;)V` @kind direct;
  #L2f3cb2.  v4:= new `x2.n`;
  #L2f3cb6.  v6:= v1.`r3.j0.a` @type ^`long` @kind wide;
  #L2f3cba.  v8:= v1.`r3.j0.b` @type ^`r3.p` @kind object;
  #L2f3cbe.  call temp:= `f`(v18) @signature `Lr3/j0;.f:()Landroid/net/Uri;` @kind virtual;
  #L2f3cc4.  v9:= temp @kind object;
  #L2f3cc6.  call temp:= `d`(v18) @signature `Lr3/j0;.d:()Ljava/util/Map;` @kind virtual;
  #L2f3ccc.  v10:= temp @kind object;
  #L2f3cce.  call temp:= `c`(v18) @signature `Lr3/j0;.c:()J` @kind virtual;
  #L2f3cd4.  v15:= temp @kind wide;
  #L2f3cd6.  v5:= v4 @kind object;
  #L2f3cd8.  v11:= v19 @kind wide;
  #L2f3cdc.  v13:= v21 @kind wide;
  #L2f3ce0.  call `<init>`(v5, v6, v8, v9, v10, v11, v13, v15) @signature `Lx2/n;.<init>:(JLr3/p;Landroid/net/Uri;Ljava/util/Map;JJJ)V` @kind direct;
  #L2f3ce6.  v5:= v0.`d3.c.r` @type ^`java.util.HashMap` @kind object;
  #L2f3cea.  v6:= v0.`d3.c.z` @type ^`android.net.Uri` @kind object;
  #L2f3cee.  call temp:= `get`(v5, v6) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2f3cf4.  v5:= temp @kind object;
  #L2f3cf6.  v5:= (`d3.c$c`) v5 @kind object;
  #L2f3cfa.  if v3 == 0 then goto L2f3d0a;
  #L2f3cfe.  v2:= (`d3.g`) v2 @kind object;
  #L2f3d02.  call `c`(v5, v2, v4) @signature `Ld3/c$c;.c:(Ld3/c$c;Ld3/g;Lx2/n;)V` @kind static;
  #L2f3d08.  goto L2f3d10;
  #L2f3d0a.  call `m`(v5) @signature `Ld3/c$c;.m:()V` @kind virtual;
  #L2f3d10.  v2:= v0.`d3.c.q` @type ^`r3.g0` @kind object;
  #L2f3d14.  v5:= v1.`r3.j0.a` @type ^`long` @kind wide;
  #L2f3d18.  call `a`(v2, v5) @signature `Lr3/g0;.a:(J)V` @kind interface;
  #L2f3d1e.  v1:= v0.`d3.c.u` @type ^`x2.b0$a` @kind object;
  #L2f3d22.  v2:= 4I;
  #L2f3d24.  call `t`(v1, v4, v2) @signature `Lx2/b0$a;.t:(Lx2/n;I)V` @kind virtual;
  #L2f3d2a.  return @kind void;
}
procedure `r3.h0$c` `Q`(`d3.c` v16 @kind this, `r3.j0` v17 @kind object, `long` v18 , `long` v20 , `java.io.IOException` v22 @kind object, `int` v23 ) @signature `Ld3/c;.Q:(Lr3/j0;JJLjava/io/IOException;I)Lr3/h0$c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L2f38e4.  v0:= v16 @kind object;
  #L2f38e8.  v1:= v17 @kind object;
  #L2f38ec.  v2:= v22 @kind object;
  #L2f38f0.  v15:= new `x2.n`;
  #L2f38f4.  v4:= v1.`r3.j0.a` @type ^`long` @kind wide;
  #L2f38f8.  v6:= v1.`r3.j0.b` @type ^`r3.p` @kind object;
  #L2f38fc.  call temp:= `f`(v17) @signature `Lr3/j0;.f:()Landroid/net/Uri;` @kind virtual;
  #L2f3902.  v7:= temp @kind object;
  #L2f3904.  call temp:= `d`(v17) @signature `Lr3/j0;.d:()Ljava/util/Map;` @kind virtual;
  #L2f390a.  v8:= temp @kind object;
  #L2f390c.  call temp:= `c`(v17) @signature `Lr3/j0;.c:()J` @kind virtual;
  #L2f3912.  v13:= temp @kind wide;
  #L2f3914.  v3:= v15 @kind object;
  #L2f3916.  v9:= v18 @kind wide;
  #L2f391a.  v11:= v20 @kind wide;
  #L2f391e.  call `<init>`(v3, v4, v6, v7, v8, v9, v11, v13) @signature `Lx2/n;.<init>:(JLr3/p;Landroid/net/Uri;Ljava/util/Map;JJJ)V` @kind direct;
  #L2f3924.  v3:= new `x2.q`;
  #L2f3928.  v4:= v1.`r3.j0.c` @type ^`int`;
  #L2f392c.  call `<init>`(v3, v4) @signature `Lx2/q;.<init>:(I)V` @kind direct;
  #L2f3932.  v4:= v0.`d3.c.q` @type ^`r3.g0` @kind object;
  #L2f3936.  v5:= new `r3.g0$c`;
  #L2f393a.  v6:= v23;
  #L2f393e.  call `<init>`(v5, v15, v3, v2, v6) @signature `Lr3/g0$c;.<init>:(Lx2/n;Lx2/q;Ljava/io/IOException;I)V` @kind direct;
  #L2f3944.  call temp:= `c`(v4, v5) @signature `Lr3/g0;.c:(Lr3/g0$c;)J` @kind interface;
  #L2f394a.  v3:= temp @kind wide;
  #L2f394c.  v5:= 0I;
  #L2f394e.  v6:= -4.9E-324D;
  #L2f3958.  v8:= lcmp(v3, v6);
  #L2f395c.  if v8 != 0 then goto L2f3964;
  #L2f3960.  v6:= 1I;
  #L2f3962.  goto L2f3966;
  #L2f3964.  v6:= 0I;
  #L2f3966.  v7:= v0.`d3.c.u` @type ^`x2.b0$a` @kind object;
  #L2f396a.  v8:= v1.`r3.j0.c` @type ^`int`;
  #L2f396e.  call `x`(v7, v15, v8, v2, v6) @signature `Lx2/b0$a;.x:(Lx2/n;ILjava/io/IOException;Z)V` @kind virtual;
  #L2f3974.  if v6 == 0 then goto L2f3986;
  #L2f3978.  v2:= v0.`d3.c.q` @type ^`r3.g0` @kind object;
  #L2f397c.  v7:= v1.`r3.j0.a` @type ^`long` @kind wide;
  #L2f3980.  call `a`(v2, v7) @signature `Lr3/g0;.a:(J)V` @kind interface;
  #L2f3986.  if v6 == 0 then goto L2f3990;
  #L2f398a.  v1:= `@@r3.h0.f` @type ^`r3.h0$c` @kind object;
  #L2f398e.  goto L2f3998;
  #L2f3990.  call temp:= `h`(v5, v3) @signature `Lr3/h0;.h:(ZJ)Lr3/h0$c;` @kind static;
  #L2f3996.  v1:= temp @kind object;
  #L2f3998.  return v1 @kind object;
}
procedure `boolean` `a`(`d3.c` v1 @kind this) @signature `Ld3/c;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f34a4.  v0:= v1.`d3.c.B` @type ^`boolean` @kind boolean;
  #L2f34a8.  return v0;
}
procedure `d3.h` `b`(`d3.c` v1 @kind this) @signature `Ld3/c;.b:()Ld3/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f3738.  v0:= v1.`d3.c.y` @type ^`d3.h` @kind object;
  #L2f373c.  return v0 @kind object;
}
procedure `boolean` `c`(`d3.c` v1 @kind this, `android.net.Uri` v2 @kind object, `long` v3 ) @signature `Ld3/c;.c:(Landroid/net/Uri;J)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f346c.  v0:= v1.`d3.c.r` @type ^`java.util.HashMap` @kind object;
  #L2f3470.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2f3476.  v2:= temp @kind object;
  #L2f3478.  v2:= (`d3.c$c`) v2 @kind object;
  #L2f347c.  if v2 == 0 then goto L2f348e;
  #L2f3480.  call temp:= `b`(v2, v3) @signature `Ld3/c$c;.b:(Ld3/c$c;J)Z` @kind static;
  #L2f3486.  v2:= temp;
  #L2f3488.  v2:= v2 ^~ 1;
  #L2f348c.  return v2;
  #L2f348e.  v2:= 0I;
  #L2f3490.  return v2;
}
procedure `boolean` `d`(`d3.c` v1 @kind this, `android.net.Uri` v2 @kind object) @signature `Ld3/c;.d:(Landroid/net/Uri;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f34bc.  v0:= v1.`d3.c.r` @type ^`java.util.HashMap` @kind object;
  #L2f34c0.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2f34c6.  v2:= temp @kind object;
  #L2f34c8.  v2:= (`d3.c$c`) v2 @kind object;
  #L2f34cc.  call temp:= `k`(v2) @signature `Ld3/c$c;.k:()Z` @kind virtual;
  #L2f34d2.  v2:= temp;
  #L2f34d4.  return v2;
}
procedure `void` `e`(`d3.c` v1 @kind this) @signature `Ld3/c;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f3b74.  v0:= v1.`d3.c.v` @type ^`r3.h0` @kind object;
  #L2f3b78.  if v0 == 0 then goto L2f3b82;
  #L2f3b7c.  call `b`(v0) @signature `Lr3/h0;.b:()V` @kind virtual;
  #L2f3b82.  v0:= v1.`d3.c.z` @type ^`android.net.Uri` @kind object;
  #L2f3b86.  if v0 == 0 then goto L2f3b90;
  #L2f3b8a.  call `g`(v1, v0) @signature `Ld3/c;.g:(Landroid/net/Uri;)V` @kind virtual;
  #L2f3b90.  return @kind void;
}
procedure `void` `f`(`d3.c` v1 @kind this, `d3.l$b` v2 @kind object) @signature `Ld3/c;.f:(Ld3/l$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f3a58.  call temp:= `e`(v2) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2f3a5e.  v0:= v1.`d3.c.s` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L2f3a62.  call temp:= `add`(v0, v2) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f3a68.  return @kind void;
}
procedure `void` `g`(`d3.c` v1 @kind this, `android.net.Uri` v2 @kind object) @signature `Ld3/c;.g:(Landroid/net/Uri;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f3b4c.  v0:= v1.`d3.c.r` @type ^`java.util.HashMap` @kind object;
  #L2f3b50.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2f3b56.  v2:= temp @kind object;
  #L2f3b58.  v2:= (`d3.c$c`) v2 @kind object;
  #L2f3b5c.  call `q`(v2) @signature `Ld3/c$c;.q:()V` @kind virtual;
  #L2f3b62.  return @kind void;
}
procedure `void` `h`(`d3.c` v1 @kind this, `android.net.Uri` v2 @kind object) @signature `Ld3/c;.h:(Landroid/net/Uri;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f3db4.  v0:= v1.`d3.c.r` @type ^`java.util.HashMap` @kind object;
  #L2f3db8.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2f3dbe.  v2:= temp @kind object;
  #L2f3dc0.  v2:= (`d3.c$c`) v2 @kind object;
  #L2f3dc4.  call `m`(v2) @signature `Ld3/c$c;.m:()V` @kind virtual;
  #L2f3dca.  return @kind void;
}
procedure `d3.g` `i`(`d3.c` v1 @kind this, `android.net.Uri` v2 @kind object, `boolean` v3 ) @signature `Ld3/c;.i:(Landroid/net/Uri;Z)Ld3/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f36a8.  v0:= v1.`d3.c.r` @type ^`java.util.HashMap` @kind object;
  #L2f36ac.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2f36b2.  v0:= temp @kind object;
  #L2f36b4.  v0:= (`d3.c$c`) v0 @kind object;
  #L2f36b8.  call temp:= `j`(v0) @signature `Ld3/c$c;.j:()Ld3/g;` @kind virtual;
  #L2f36be.  v0:= temp @kind object;
  #L2f36c0.  if v0 == 0 then goto L2f36ce;
  #L2f36c4.  if v3 == 0 then goto L2f36ce;
  #L2f36c8.  call `M`(v1, v2) @signature `Ld3/c;.M:(Landroid/net/Uri;)V` @kind direct;
  #L2f36ce.  return v0 @kind object;
}
procedure `void` `j`(`d3.c` v1 @kind this, `d3.l$b` v2 @kind object) @signature `Ld3/c;.j:(Ld3/l$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f3ddc.  v0:= v1.`d3.c.s` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L2f3de0.  call temp:= `remove`(v0, v2) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f3de6.  return @kind void;
}
procedure `void` `k`(`d3.c` v7 @kind this, `android.net.Uri` v8 @kind object, `x2.b0$a` v9 @kind object, `d3.l$e` v10 @kind object) @signature `Ld3/c;.k:(Landroid/net/Uri;Lx2/b0$a;Ld3/l$e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2f3df8.  call temp:= `w`() @signature `Ls3/l0;.w:()Landroid/os/Handler;` @kind static;
  #L2f3dfe.  v0:= temp @kind object;
  #L2f3e00.  v7.`d3.c.w` @type ^`android.os.Handler` := v0 @kind object;
  #L2f3e04.  v7.`d3.c.u` @type ^`x2.b0$a` := v9 @kind object;
  #L2f3e08.  v7.`d3.c.x` @type ^`d3.l$e` := v10 @kind object;
  #L2f3e0c.  v10:= new `r3.j0`;
  #L2f3e10.  v0:= v7.`d3.c.o` @type ^`c3.d` @kind object;
  #L2f3e14.  v1:= 4I;
  #L2f3e16.  call temp:= `a`(v0, v1) @signature `Lc3/d;.a:(I)Lr3/l;` @kind interface;
  #L2f3e1c.  v0:= temp @kind object;
  #L2f3e1e.  v2:= v7.`d3.c.p` @type ^`d3.k` @kind object;
  #L2f3e22.  call temp:= `b`(v2) @signature `Ld3/k;.b:()Lr3/j0$a;` @kind interface;
  #L2f3e28.  v2:= temp @kind object;
  #L2f3e2a.  call `<init>`(v10, v0, v8, v1, v2) @signature `Lr3/j0;.<init>:(Lr3/l;Landroid/net/Uri;ILr3/j0$a;)V` @kind direct;
  #L2f3e30.  v8:= v7.`d3.c.v` @type ^`r3.h0` @kind object;
  #L2f3e34.  if v8 != 0 then goto L2f3e3c;
  #L2f3e38.  v8:= 1I;
  #L2f3e3a.  goto L2f3e3e;
  #L2f3e3c.  v8:= 0I;
  #L2f3e3e.  call `f`(v8) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L2f3e44.  v8:= new `r3.h0`;
  #L2f3e48.  v0:= "DefaultHlsPlaylistTracker:MultivariantPlaylist" @kind object;
  #L2f3e4c.  call `<init>`(v8, v0) @signature `Lr3/h0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f3e52.  v7.`d3.c.v` @type ^`r3.h0` := v8 @kind object;
  #L2f3e56.  v0:= v7.`d3.c.q` @type ^`r3.g0` @kind object;
  #L2f3e5a.  v1:= v10.`r3.j0.c` @type ^`int`;
  #L2f3e5e.  call temp:= `d`(v0, v1) @signature `Lr3/g0;.d:(I)I` @kind interface;
  #L2f3e64.  v0:= temp;
  #L2f3e66.  call temp:= `n`(v8, v10, v7, v0) @signature `Lr3/h0;.n:(Lr3/h0$e;Lr3/h0$b;I)J` @kind virtual;
  #L2f3e6c.  v5:= temp @kind wide;
  #L2f3e6e.  v8:= new `x2.n`;
  #L2f3e72.  v2:= v10.`r3.j0.a` @type ^`long` @kind wide;
  #L2f3e76.  v4:= v10.`r3.j0.b` @type ^`r3.p` @kind object;
  #L2f3e7a.  v1:= v8 @kind object;
  #L2f3e7c.  call `<init>`(v1, v2, v4, v5) @signature `Lx2/n;.<init>:(JLr3/p;J)V` @kind direct;
  #L2f3e82.  v10:= v10.`r3.j0.c` @type ^`int`;
  #L2f3e86.  call `z`(v9, v8, v10) @signature `Lx2/b0$a;.z:(Lx2/n;I)V` @kind virtual;
  #L2f3e8c.  return @kind void;
}
procedure `long` `l`(`d3.c` v2 @kind this) @signature `Ld3/c;.l:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f3818.  v0:= v2.`d3.c.C` @type ^`long` @kind wide;
  #L2f381c.  return v0 @kind wide;
}
procedure `void` `n`(`d3.c` v0 @kind this, `r3.h0$e` v1 @kind object, `long` v2 , `long` v4 , `boolean` v6 ) @signature `Ld3/c;.n:(Lr3/h0$e;JJZ)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f3ba4.  v1:= (`r3.j0`) v1 @kind object;
  #L2f3ba8.  call `O`(v0, v1, v2, v4, v6) @signature `Ld3/c;.O:(Lr3/j0;JJZ)V` @kind virtual;
  #L2f3bae.  return @kind void;
}
procedure `void` `stop`(`d3.c` v3 @kind this) @signature `Ld3/c;.stop:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2f3ea0.  v0:= 0I;
  #L2f3ea2.  v3.`d3.c.z` @type ^`android.net.Uri` := v0 @kind object;
  #L2f3ea6.  v3.`d3.c.A` @type ^`d3.g` := v0 @kind object;
  #L2f3eaa.  v3.`d3.c.y` @type ^`d3.h` := v0 @kind object;
  #L2f3eae.  v1:= -4.9E-324D;
  #L2f3eb8.  v3.`d3.c.C` @type ^`long` := v1 @kind wide;
  #L2f3ebc.  v1:= v3.`d3.c.v` @type ^`r3.h0` @kind object;
  #L2f3ec0.  call `l`(v1) @signature `Lr3/h0;.l:()V` @kind virtual;
  #L2f3ec6.  v3.`d3.c.v` @type ^`r3.h0` := v0 @kind object;
  #L2f3eca.  v1:= v3.`d3.c.r` @type ^`java.util.HashMap` @kind object;
  #L2f3ece.  call temp:= `values`(v1) @signature `Ljava/util/HashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L2f3ed4.  v1:= temp @kind object;
  #L2f3ed6.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2f3edc.  v1:= temp @kind object;
  #L2f3ede.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2f3ee4.  v2:= temp;
  #L2f3ee6.  if v2 == 0 then goto L2f3efe;
  #L2f3eea.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2f3ef0.  v2:= temp @kind object;
  #L2f3ef2.  v2:= (`d3.c$c`) v2 @kind object;
  #L2f3ef6.  call `x`(v2) @signature `Ld3/c$c;.x:()V` @kind virtual;
  #L2f3efc.  goto L2f3ede;
  #L2f3efe.  v1:= v3.`d3.c.w` @type ^`android.os.Handler` @kind object;
  #L2f3f02.  call `removeCallbacksAndMessages`(v1, v0) @signature `Landroid/os/Handler;.removeCallbacksAndMessages:(Ljava/lang/Object;)V` @kind virtual;
  #L2f3f08.  v3.`d3.c.w` @type ^`android.os.Handler` := v0 @kind object;
  #L2f3f0c.  v0:= v3.`d3.c.r` @type ^`java.util.HashMap` @kind object;
  #L2f3f10.  call `clear`(v0) @signature `Ljava/util/HashMap;.clear:()V` @kind virtual;
  #L2f3f16.  return @kind void;
}
procedure `r3.h0$c` `t`(`d3.c` v0 @kind this, `r3.h0$e` v1 @kind object, `long` v2 , `long` v4 , `java.io.IOException` v6 @kind object, `int` v7 ) @signature `Ld3/c;.t:(Lr3/h0$e;JJLjava/io/IOException;I)Lr3/h0$c;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f38c4.  v1:= (`r3.j0`) v1 @kind object;
  #L2f38c8.  call temp:= `Q`(v0, v1, v2, v4, v6, v7) @signature `Ld3/c;.Q:(Lr3/j0;JJLjava/io/IOException;I)Lr3/h0$c;` @kind virtual;
  #L2f38ce.  v1:= temp @kind object;
  #L2f38d0.  return v1 @kind object;
}
procedure `void` `u`(`d3.c` v0 @kind this, `r3.h0$e` v1 @kind object, `long` v2 , `long` v4 ) @signature `Ld3/c;.u:(Lr3/h0$e;JJ)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f3c28.  v1:= (`r3.j0`) v1 @kind object;
  #L2f3c2c.  call `P`(v0, v1, v2, v4) @signature `Ld3/c;.P:(Lr3/j0;JJ)V` @kind virtual;
  #L2f3c32.  return @kind void;
}
