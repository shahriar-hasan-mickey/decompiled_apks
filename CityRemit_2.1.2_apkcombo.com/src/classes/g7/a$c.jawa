record `g7.a$c` @kind class @AccessFlag  extends `g7.a$b` @kind interface {
  `java.lang.StringBuilder` `g7.a$c.a` @AccessFlag PRIVATE;
  `java.nio.ByteBuffer` `g7.a$c.b` @AccessFlag PRIVATE;
}
global `java.lang.ThreadLocal` `@@g7.a$c.c` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lg7/a$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L322fbc.  v0:= new `g7.a$c$a`;
  #L322fc0.  call `<init>`(v0) @signature `Lg7/a$c$a;.<init>:()V` @kind direct;
  #L322fc6.  `@@g7.a$c.c` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L322fca.  v0:= new `g7.a$c$b`;
  #L322fce.  call `<init>`(v0) @signature `Lg7/a$c$b;.<init>:()V` @kind direct;
  #L322fd4.  return @kind void;
}
procedure `void` `<init>`(`g7.a$c` v1 @kind this) @signature `Lg7/a$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L322fe8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L322fee.  v0:= new `java.lang.StringBuilder`;
  #L322ff2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L322ff8.  v1.`g7.a$c.a` @type ^`java.lang.StringBuilder` := v0 @kind object;
  #L322ffc.  return @kind void;
}
procedure `java.lang.String` `c`(`g7.a$c` v1 @kind this, `byte`[] v2 @kind object) @signature `Lg7/a$c;.c:([B)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L322f6c.  call temp:= `wrap`(v2) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L322f72.  v2:= temp @kind object;
  #L322f74.  v0:= `@@g7.a$c.c` @type ^`java.lang.ThreadLocal` @kind object;
  #L322f78.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L322f7e.  v0:= temp @kind object;
  #L322f80.  v0:= (`java.nio.charset.CharsetDecoder`) v0 @kind object;
  #L322f84.  call temp:= `decode`(v0, v2) @signature `Ljava/nio/charset/CharsetDecoder;.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;` @kind virtual;
  #L322f8a.  v2:= temp @kind object;
  #L322f8c.  call temp:= `toString`(v2) @signature `Ljava/nio/CharBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L322f92.  v2:= temp @kind object;
  #L322f94.  return v2 @kind object;
  #L322f96.  v2:= 0I;
  #L322f98.  return v2 @kind object;
  catch `java.nio.charset.CharacterCodingException` @[L322f6c..L322f94] goto L322f96;
}
procedure `boolean` `a`(`g7.a$c` v1 @kind this, `byte`[] v2 @kind object) @signature `Lg7/a$c;.a:([B)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L322f08.  call temp:= `c`(v1, v2) @signature `Lg7/a$c;.c:([B)Ljava/lang/String;` @kind direct;
  #L322f0e.  v2:= temp @kind object;
  #L322f10.  if v2 == 0 then goto L322f22;
  #L322f14.  v0:= v1.`g7.a$c.a` @type ^`java.lang.StringBuilder` @kind object;
  #L322f18.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L322f1e.  v2:= 1I;
  #L322f20.  return v2;
  #L322f22.  v2:= 0I;
  #L322f24.  return v2;
}
procedure `g7.g` `b`(`g7.a$c` v2 @kind this) @signature `Lg7/a$c;.b:()Lg7/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L322f38.  v0:= v2.`g7.a$c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L322f3c.  if v0 == 0 then goto L322f44;
  #L322f40.  v0:= 0I;
  #L322f42.  return v0 @kind object;
  #L322f44.  v0:= new `g7.g`;
  #L322f48.  v1:= v2.`g7.a$c.a` @type ^`java.lang.StringBuilder` @kind object;
  #L322f4c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L322f52.  v1:= temp @kind object;
  #L322f54.  call `<init>`(v0, v1) @signature `Lg7/g;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L322f5a.  return v0 @kind object;
}
