record `g7.h` @kind class @AccessFlag  {
  `java.io.DataInputStream` `g7.h.a` @AccessFlag PRIVATE;
  `g7.c` `g7.h.b` @AccessFlag PRIVATE;
  `g7.d` `g7.h.c` @AccessFlag PRIVATE;
  `byte`[] `g7.h.d` @AccessFlag PRIVATE;
  `g7.a$b` `g7.h.e` @AccessFlag PRIVATE;
  `boolean` `g7.h.f` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`g7.h` v1 @kind this, `g7.c` v2 @kind object) @signature `Lg7/h;.<init>:(Lg7/c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3237f8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3237fe.  v0:= 0I;
  #L323800.  v1.`g7.h.a` @type ^`java.io.DataInputStream` := v0 @kind object;
  #L323804.  v1.`g7.h.b` @type ^`g7.c` := v0 @kind object;
  #L323808.  v1.`g7.h.c` @type ^`g7.d` := v0 @kind object;
  #L32380c.  v0:= 112I;
  #L323810.  v0:= new `byte`[v0];
  #L323814.  v1.`g7.h.d` @type ^`byte`[] := v0 @kind object;
  #L323818.  v0:= 0I;
  #L32381a.  v1.`g7.h.f` @type ^`boolean` := v0 @kind boolean;
  #L32381e.  v1.`g7.h.b` @type ^`g7.c` := v2 @kind object;
  #L323822.  return @kind void;
}
procedure `void` `a`(`g7.h` v1 @kind this, `boolean` v2 , `byte` v3 , `byte`[] v4 @kind object) @signature `Lg7/h;.a:(ZB[B)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L323834.  v0:= 9I;
  #L323838.  if v3 != v0 then goto L323858;
  #L32383c.  if v2 == 0 then goto L323848;
  #L323840.  call `c`(v1, v4) @signature `Lg7/h;.c:([B)V` @kind direct;
  #L323846.  goto L3238e6;
  #L323848.  v2:= new `g7.e`;
  #L32384c.  v3:= "PING must not fragment across frames" @kind object;
  #L323850.  call `<init>`(v2, v3) @signature `Lg7/e;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L323856.  throw v2;
  #L323858.  v0:= v1.`g7.h.e` @type ^`g7.a$b` @kind object;
  #L32385c.  if v0 == 0 then goto L323876;
  #L323860.  if v3 != 0 then goto L323866;
  #L323864.  goto L323876;
  #L323866.  v2:= new `g7.e`;
  #L32386a.  v3:= "Failed to continue outstanding frame" @kind object;
  #L32386e.  call `<init>`(v2, v3) @signature `Lg7/e;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L323874.  throw v2;
  #L323876.  if v0 != 0 then goto L323890;
  #L32387a.  if v3 == 0 then goto L323880;
  #L32387e.  goto L323890;
  #L323880.  v2:= new `g7.e`;
  #L323884.  v3:= "Received continuing frame, but there's nothing to continue" @kind object;
  #L323888.  call `<init>`(v2, v3) @signature `Lg7/e;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32388e.  throw v2;
  #L323890.  if v0 != 0 then goto L3238a0;
  #L323894.  call temp:= `a`(v3) @signature `Lg7/a;.a:(B)Lg7/a$b;` @kind static;
  #L32389a.  v3:= temp @kind object;
  #L32389c.  v1.`g7.h.e` @type ^`g7.a$b` := v3 @kind object;
  #L3238a0.  v3:= v1.`g7.h.e` @type ^`g7.a$b` @kind object;
  #L3238a4.  call temp:= `a`(v3, v4) @signature `Lg7/a$b;.a:([B)Z` @kind interface;
  #L3238aa.  v3:= temp;
  #L3238ac.  if v3 == 0 then goto L3238e8;
  #L3238b0.  if v2 == 0 then goto L3238e6;
  #L3238b4.  v2:= v1.`g7.h.e` @type ^`g7.a$b` @kind object;
  #L3238b8.  call temp:= `b`(v2) @signature `Lg7/a$b;.b:()Lg7/g;` @kind interface;
  #L3238be.  v2:= temp @kind object;
  #L3238c0.  v3:= 0I;
  #L3238c2.  v1.`g7.h.e` @type ^`g7.a$b` := v3 @kind object;
  #L3238c6.  if v2 == 0 then goto L3238d6;
  #L3238ca.  v3:= v1.`g7.h.c` @type ^`g7.d` @kind object;
  #L3238ce.  call `d`(v3, v2) @signature `Lg7/d;.d:(Lg7/g;)V` @kind interface;
  #L3238d4.  goto L3238e6;
  #L3238d6.  v2:= new `g7.e`;
  #L3238da.  v3:= "Failed to decode whole message" @kind object;
  #L3238de.  call `<init>`(v2, v3) @signature `Lg7/e;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3238e4.  throw v2;
  #L3238e6.  return @kind void;
  #L3238e8.  v2:= new `g7.e`;
  #L3238ec.  v3:= "Failed to decode frame" @kind object;
  #L3238f0.  call `<init>`(v2, v3) @signature `Lg7/e;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3238f6.  throw v2;
}
procedure `void` `b`(`g7.h` v1 @kind this, `g7.e` v2 @kind object) @signature `Lg7/h;.b:(Lg7/e;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L323908.  call `h`(v1) @signature `Lg7/h;.h:()V` @kind virtual;
  #L32390e.  v0:= v1.`g7.h.b` @type ^`g7.c` @kind object;
  #L323912.  call `k`(v0, v2) @signature `Lg7/c;.k:(Lg7/e;)V` @kind virtual;
  #L323918.  return @kind void;
}
procedure `void` `c`(`g7.h` v2 @kind this, `byte`[] v3 @kind object) @signature `Lg7/h;.c:([B)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L32392c.  v0:= length @variable v3;
  #L32392e.  v1:= 125I;
  #L323932.  if v0 > v1 then goto L323942;
  #L323936.  v0:= v2.`g7.h.b` @type ^`g7.c` @kind object;
  #L32393a.  call `m`(v0, v3) @signature `Lg7/c;.m:([B)V` @kind virtual;
  #L323940.  return @kind void;
  #L323942.  v3:= new `g7.e`;
  #L323946.  v0:= "PING frame too long" @kind object;
  #L32394a.  call `<init>`(v3, v0) @signature `Lg7/e;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L323950.  throw v3;
}
procedure `long` `d`(`g7.h` v5 @kind this, `byte`[] v6 @kind object, `int` v7 ) @signature `Lg7/h;.d:([BI)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L323740.  v0:= v7 + 0;
  #L323744.  v0:= v6[v0] @kind byte;
  #L323748.  v0:= (`long`) v0 @kind i2l;
  #L32374a.  v2:= 56I;
  #L32374e.  v0:= v0 ^< v2 @kind long;
  #L323750.  v2:= v7 + 1;
  #L323754.  v2:= v6[v2] @kind byte;
  #L323758.  v2:= v2 ^& 255;
  #L32375c.  v2:= (`long`) v2 @kind i2l;
  #L32375e.  v4:= 48I;
  #L323762.  v2:= v2 ^< v4 @kind long;
  #L323764.  v0:= v0 + v2 @kind long;
  #L323766.  v2:= v7 + 2;
  #L32376a.  v2:= v6[v2] @kind byte;
  #L32376e.  v2:= v2 ^& 255;
  #L323772.  v2:= (`long`) v2 @kind i2l;
  #L323774.  v4:= 40I;
  #L323778.  v2:= v2 ^< v4 @kind long;
  #L32377a.  v0:= v0 + v2 @kind long;
  #L32377c.  v2:= v7 + 3;
  #L323780.  v2:= v6[v2] @kind byte;
  #L323784.  v2:= v2 ^& 255;
  #L323788.  v2:= (`long`) v2 @kind i2l;
  #L32378a.  v4:= 32I;
  #L32378e.  v2:= v2 ^< v4 @kind long;
  #L323790.  v0:= v0 + v2 @kind long;
  #L323792.  v2:= v7 + 4;
  #L323796.  v2:= v6[v2] @kind byte;
  #L32379a.  v2:= v2 ^& 255;
  #L32379e.  v2:= (`long`) v2 @kind i2l;
  #L3237a0.  v4:= 24I;
  #L3237a4.  v2:= v2 ^< v4 @kind long;
  #L3237a6.  v0:= v0 + v2 @kind long;
  #L3237a8.  v2:= v7 + 5;
  #L3237ac.  v2:= v6[v2] @kind byte;
  #L3237b0.  v2:= v2 ^& 255;
  #L3237b4.  v2:= v2 ^< 16;
  #L3237b8.  v2:= (`long`) v2 @kind i2l;
  #L3237ba.  v0:= v0 + v2 @kind long;
  #L3237bc.  v2:= v7 + 6;
  #L3237c0.  v2:= v6[v2] @kind byte;
  #L3237c4.  v2:= v2 ^& 255;
  #L3237c8.  v2:= v2 ^< 8;
  #L3237cc.  v2:= (`long`) v2 @kind i2l;
  #L3237ce.  v0:= v0 + v2 @kind long;
  #L3237d0.  v7:= v7 + 7;
  #L3237d4.  v6:= v6[v7] @kind byte;
  #L3237d8.  v6:= v6 ^& 255;
  #L3237dc.  v6:= v6 ^< 0;
  #L3237e0.  v6:= (`long`) v6 @kind i2l;
  #L3237e2.  v0:= v0 + v6 @kind long;
  #L3237e4.  return v0 @kind wide;
}
procedure `int` `e`(`g7.h` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lg7/h;.e:([BII)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L323724.  v0:= v1.`g7.h.a` @type ^`java.io.DataInputStream` @kind object;
  #L323728.  call `readFully`(v0, v2, v3, v4) @signature `Ljava/io/DataInputStream;.readFully:([BII)V` @kind virtual;
  #L32372e.  return v4;
}
procedure `void` `f`(`g7.h` v12 @kind this) @signature `Lg7/h;.f:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L323964.  v0:= v12.`g7.h.b` @type ^`g7.c` @kind object;
  #L323968.  call temp:= `g`(v0) @signature `Lg7/c;.g:()Lg7/d;` @kind virtual;
  #L32396e.  v0:= temp @kind object;
  #L323970.  v12.`g7.h.c` @type ^`g7.d` := v0 @kind object;
  #L323974.  v0:= v12.`g7.h.f` @type ^`boolean` @kind boolean;
  #L323978.  if v0 != 0 then goto L323ae8;
  #L32397c.  v0:= v12.`g7.h.d` @type ^`byte`[] @kind object;
  #L323980.  v1:= 1I;
  #L323982.  v2:= 0I;
  #L323984.  call temp:= `e`(v12, v0, v2, v1) @signature `Lg7/h;.e:([BII)I` @kind direct;
  #L32398a.  v0:= temp;
  #L32398c.  v0:= v0 + v2 @kind int;
  #L32398e.  v3:= v12.`g7.h.d` @type ^`byte`[] @kind object;
  #L323992.  v4:= v3[v2] @kind byte;
  #L323996.  v4:= v4 ^& 128;
  #L32399a.  if v4 == 0 then goto L3239a2;
  #L32399e.  v4:= 1I;
  #L3239a0.  goto L3239a4;
  #L3239a2.  v4:= 0I;
  #L3239a4.  v5:= v3[v2] @kind byte;
  #L3239a8.  v5:= v5 ^& 112;
  #L3239ac.  if v5 == 0 then goto L3239b4;
  #L3239b0.  v5:= 1I;
  #L3239b2.  goto L3239b6;
  #L3239b4.  v5:= 0I;
  #L3239b6.  if v5 != 0 then goto L323aac;
  #L3239ba.  v5:= v3[v2] @kind byte;
  #L3239be.  v5:= v5 ^& 15;
  #L3239c2.  v5:= (`byte`) v5 @kind i2b;
  #L3239c4.  call temp:= `e`(v12, v3, v0, v1) @signature `Lg7/h;.e:([BII)I` @kind direct;
  #L3239ca.  v3:= temp;
  #L3239cc.  v0:= v0 + v3 @kind int;
  #L3239ce.  v3:= v12.`g7.h.d` @type ^`byte`[] @kind object;
  #L3239d2.  v6:= v3[v1] @kind byte;
  #L3239d6.  v7:= 0L;
  #L3239da.  v9:= 126I;
  #L3239de.  v10:= 2I;
  #L3239e0.  v11:= 8I;
  #L3239e4.  if v6 >= v9 then goto L3239ec;
  #L3239e8.  v7:= (`long`) v6 @kind i2l;
  #L3239ea.  goto L323a38;
  #L3239ec.  if v6 != v9 then goto L323a18;
  #L3239f0.  call temp:= `e`(v12, v3, v0, v10) @signature `Lg7/h;.e:([BII)I` @kind direct;
  #L3239f6.  v0:= v12.`g7.h.d` @type ^`byte`[] @kind object;
  #L3239fa.  v3:= v0[v10] @kind byte;
  #L3239fe.  v3:= v3 ^& 255;
  #L323a02.  v6:= (`long`) v3 @kind i2l;
  #L323a04.  v6:= v6 ^< v11 @kind long;
  #L323a06.  v3:= 3I;
  #L323a08.  v0:= v0[v3] @kind byte;
  #L323a0c.  v0:= v0 ^& 255;
  #L323a10.  v8:= (`long`) v0 @kind i2l;
  #L323a12.  v7:= v6 ^| v8 @kind long;
  #L323a16.  goto L323a38;
  #L323a18.  v9:= 127I;
  #L323a1c.  if v6 != v9 then goto L323a38;
  #L323a20.  call temp:= `e`(v12, v3, v0, v11) @signature `Lg7/h;.e:([BII)I` @kind direct;
  #L323a26.  v3:= temp;
  #L323a28.  v0:= v0 + v3 @kind int;
  #L323a2a.  v3:= v12.`g7.h.d` @type ^`byte`[] @kind object;
  #L323a2e.  v0:= v0 - v11 @kind int;
  #L323a30.  call temp:= `d`(v12, v3, v0) @signature `Lg7/h;.d:([BI)J` @kind direct;
  #L323a36.  v7:= temp @kind wide;
  #L323a38.  v0:= (`int`) v7 @kind l2i;
  #L323a3a.  v3:= new `byte`[v0];
  #L323a3e.  call temp:= `e`(v12, v3, v2, v0) @signature `Lg7/h;.e:([BII)I` @kind direct;
  #L323a44.  if v5 != v11 then goto L323a54;
  #L323a48.  v0:= v12.`g7.h.b` @type ^`g7.c` @kind object;
  #L323a4c.  call `l`(v0) @signature `Lg7/c;.l:()V` @kind virtual;
  #L323a52.  goto L323974;
  #L323a54.  v0:= 10I;
  #L323a58.  if v5 != v0 then goto L323a5e;
  #L323a5c.  goto L323974;
  #L323a5e.  if v5 == v1 then goto L323aa2;
  #L323a62.  if v5 == v10 then goto L323aa2;
  #L323a66.  v0:= 9I;
  #L323a6a.  if v5 == v0 then goto L323aa2;
  #L323a6e.  if v5 != 0 then goto L323a74;
  #L323a72.  goto L323aa2;
  #L323a74.  v0:= new `g7.e`;
  #L323a78.  v1:= new `java.lang.StringBuilder`;
  #L323a7c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L323a82.  v2:= "Unsupported opcode: " @kind object;
  #L323a86.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L323a8c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L323a92.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L323a98.  v1:= temp @kind object;
  #L323a9a.  call `<init>`(v0, v1) @signature `Lg7/e;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L323aa0.  throw v0;
  #L323aa2.  call `a`(v12, v4, v5, v3) @signature `Lg7/h;.a:(ZB[B)V` @kind direct;
  #L323aa8.  goto L323974;
  #L323aac.  v0:= new `g7.e`;
  #L323ab0.  v1:= "Invalid frame received" @kind object;
  #L323ab4.  call `<init>`(v0, v1) @signature `Lg7/e;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L323aba.  throw v0;
  #L323abc.  v0:= Exception @type ^`g7.e` @kind object;
  #L323abe.  call `b`(v12, v0) @signature `Lg7/h;.b:(Lg7/e;)V` @kind direct;
  #L323ac4.  goto L323974;
  #L323ac8.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L323aca.  v1:= new `g7.e`;
  #L323ace.  v2:= "IO Error" @kind object;
  #L323ad2.  call `<init>`(v1, v2, v0) @signature `Lg7/e;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L323ad8.  call `b`(v12, v1) @signature `Lg7/h;.b:(Lg7/e;)V` @kind direct;
  #L323ade.  goto L323974;
  #L323ae2.  
  #L323ae4.  goto L323974;
  #L323ae8.  return @kind void;
  catch `java.net.SocketTimeoutException` @[L32397c..L323abc] goto L323ae2;
  catch `java.io.IOException` @[L32397c..L323abc] goto L323ac8;
  catch `g7.e` @[L32397c..L323abc] goto L323abc;
}
procedure `void` `g`(`g7.h` v0 @kind this, `java.io.DataInputStream` v1 @kind object) @signature `Lg7/h;.g:(Ljava/io/DataInputStream;)V` @AccessFlag  {
    temp;

  #L323b14.  v0.`g7.h.a` @type ^`java.io.DataInputStream` := v1 @kind object;
  #L323b18.  return @kind void;
}
procedure `void` `h`(`g7.h` v1 @kind this) @signature `Lg7/h;.h:()V` @AccessFlag  {
    temp;
    v0;

  #L323b2c.  v0:= 1I;
  #L323b2e.  v1.`g7.h.f` @type ^`boolean` := v0 @kind boolean;
  #L323b32.  return @kind void;
}
