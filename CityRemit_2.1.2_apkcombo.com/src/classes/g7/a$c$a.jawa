record `g7.a$c$a` @kind class @AccessFlag  extends `java.lang.ThreadLocal` @kind class {
}
procedure `void` `<init>`(`g7.a$c$a` v0 @kind this) @signature `Lg7/a$c$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L322e80.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L322e86.  return @kind void;
}
procedure `java.nio.charset.CharsetDecoder` `a`(`g7.a$c$a` v2 @kind this) @signature `Lg7/a$c$a;.a:()Ljava/nio/charset/CharsetDecoder;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L322e44.  v0:= "UTF8" @kind object;
  #L322e48.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L322e4e.  v0:= temp @kind object;
  #L322e50.  call temp:= `newDecoder`(v0) @signature `Ljava/nio/charset/Charset;.newDecoder:()Ljava/nio/charset/CharsetDecoder;` @kind virtual;
  #L322e56.  v0:= temp @kind object;
  #L322e58.  v1:= `@@java.nio.charset.CodingErrorAction.REPORT` @type ^`java.nio.charset.CodingErrorAction` @kind object;
  #L322e5c.  call temp:= `onMalformedInput`(v0, v1) @signature `Ljava/nio/charset/CharsetDecoder;.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;` @kind virtual;
  #L322e62.  v1:= `@@java.nio.charset.CodingErrorAction.REPORT` @type ^`java.nio.charset.CodingErrorAction` @kind object;
  #L322e66.  call temp:= `onUnmappableCharacter`(v0, v1) @signature `Ljava/nio/charset/CharsetDecoder;.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;` @kind virtual;
  #L322e6c.  return v0 @kind object;
}
procedure `java.lang.Object` `initialValue`(`g7.a$c$a` v1 @kind this) @signature `Lg7/a$c$a;.initialValue:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L322e28.  call temp:= `a`(v1) @signature `Lg7/a$c$a;.a:()Ljava/nio/charset/CharsetDecoder;` @kind virtual;
  #L322e2e.  v0:= temp @kind object;
  #L322e30.  return v0 @kind object;
}
