record `pb.a` @kind class @AccessFlag PUBLIC extends `ob.a` @kind class {
}
procedure `void` `<init>`(`pb.a` v0 @kind this) @signature `Lpb/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40b884.  call `<init>`(v0) @signature `Lob/a;.<init>:()V` @kind direct;
  #L40b88a.  return @kind void;
}
procedure `boolean` `c`(`pb.a` v1 @kind this, `int` v2 ) @signature `Lpb/a;.c:(I)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L40b854.  v0:= `@@pb.a$a.a` @type ^`java.lang.Integer` @kind object;
  #L40b858.  if v0 == 0 then goto L40b86e;
  #L40b85c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L40b862.  v0:= temp;
  #L40b864.  if v0 < v2 then goto L40b86a;
  #L40b868.  goto L40b86e;
  #L40b86a.  v2:= 0I;
  #L40b86c.  goto L40b870;
  #L40b86e.  v2:= 1I;
  #L40b870.  return v2;
}
procedure `void` `a`(`pb.a` v1 @kind this, `java.lang.Throwable` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lpb/a;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40b89c.  v0:= "cause" @kind object;
  #L40b8a0.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L40b8a6.  v0:= "exception" @kind object;
  #L40b8aa.  call `e`(v3, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L40b8b0.  v0:= 19I;
  #L40b8b4.  call temp:= `c`(v1, v0) @signature `Lpb/a;.c:(I)Z` @kind direct;
  #L40b8ba.  v0:= temp;
  #L40b8bc.  if v0 == 0 then goto L40b8c8;
  #L40b8c0.  call `addSuppressed`(v2, v3) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L40b8c6.  goto L40b8ce;
  #L40b8c8.  call `a`(v1, v2, v3) @signature `Lob/a;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind super;
  #L40b8ce.  return @kind void;
}
