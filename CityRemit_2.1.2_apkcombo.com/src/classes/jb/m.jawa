record `jb.m` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
}
global `jb.m$a` `@@jb.m.o` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ljb/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39bb1c.  v0:= new `jb.m$a`;
  #L39bb20.  v1:= 0I;
  #L39bb22.  call `<init>`(v0, v1) @signature `Ljb/m$a;.<init>:(Lkotlin/jvm/internal/g;)V` @kind direct;
  #L39bb28.  `@@jb.m.o` @type ^`jb.m$a` := v0 @kind object;
  #L39bb2c.  return @kind void;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object) @signature `Ljb/m;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L39bae0.  return v0 @kind object;
}
procedure `java.lang.Throwable` `b`(`java.lang.Object` v1 @kind object) @signature `Ljb/m;.b:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L39baf4.  v0:= instanceof @variable v1 @type ^`jb.m$b` @kind boolean;
  #L39baf8.  if v0 == 0 then goto L39bb06;
  #L39bafc.  v1:= (`jb.m$b`) v1 @kind object;
  #L39bb00.  v1:= v1.`jb.m$b.o` @type ^`java.lang.Throwable` @kind object;
  #L39bb04.  goto L39bb08;
  #L39bb06.  v1:= 0I;
  #L39bb08.  return v1 @kind object;
}
procedure `boolean` `c`(`java.lang.Object` v0 @kind object) @signature `Ljb/m;.c:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L39baac.  v0:= instanceof @variable v0 @type ^`jb.m$b` @kind boolean;
  #L39bab0.  return v0;
}
procedure `boolean` `d`(`java.lang.Object` v0 @kind object) @signature `Ljb/m;.d:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L39bac4.  v0:= instanceof @variable v0 @type ^`jb.m$b` @kind boolean;
  #L39bac8.  v0:= v0 ^~ 1;
  #L39bacc.  return v0;
}
