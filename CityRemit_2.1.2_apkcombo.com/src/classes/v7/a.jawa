record `v7.a` @kind class @AccessFlag FINAL extends `v7.d` @kind class {
  `java.lang.String` `v7.a.a` @AccessFlag PRIVATE_FINAL;
  `v7.c$a` `v7.a.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `v7.a.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `v7.a.d` @AccessFlag PRIVATE_FINAL;
  `long` `v7.a.e` @AccessFlag PRIVATE_FINAL;
  `long` `v7.a.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `v7.a.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`v7.a` v0 @kind this, `java.lang.String` v1 @kind object, `v7.c$a` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `long` v5 , `long` v7 , `java.lang.String` v9 @kind object) @signature `Lv7/a;.<init>:(Ljava/lang/String;Lv7/c$a;Ljava/lang/String;Ljava/lang/String;JJLjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4a5134.  call `<init>`(v0) @signature `Lv7/d;.<init>:()V` @kind direct;
  #L4a513a.  v0.`v7.a.a` @type ^`java.lang.String` := v1 @kind object;
  #L4a513e.  v0.`v7.a.b` @type ^`v7.c$a` := v2 @kind object;
  #L4a5142.  v0.`v7.a.c` @type ^`java.lang.String` := v3 @kind object;
  #L4a5146.  v0.`v7.a.d` @type ^`java.lang.String` := v4 @kind object;
  #L4a514a.  v0.`v7.a.e` @type ^`long` := v5 @kind wide;
  #L4a514e.  v0.`v7.a.f` @type ^`long` := v7 @kind wide;
  #L4a5152.  v0.`v7.a.g` @type ^`java.lang.String` := v9 @kind object;
  #L4a5156.  return @kind void;
}
procedure `void` `<init>`(`v7.a` v0 @kind this, `java.lang.String` v1 @kind object, `v7.c$a` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `long` v5 , `long` v7 , `java.lang.String` v9 @kind object, `v7.a$a` v10 @kind object) @signature `Lv7/a;.<init>:(Ljava/lang/String;Lv7/c$a;Ljava/lang/String;Ljava/lang/String;JJLjava/lang/String;Lv7/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4a5168.  call `<init>`(v0, v1, v2, v3, v4, v5, v7, v9) @signature `Lv7/a;.<init>:(Ljava/lang/String;Lv7/c$a;Ljava/lang/String;Ljava/lang/String;JJLjava/lang/String;)V` @kind direct;
  #L4a516e.  return @kind void;
}
procedure `java.lang.String` `b`(`v7.a` v1 @kind this) @signature `Lv7/a;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a4fb0.  v0:= v1.`v7.a.c` @type ^`java.lang.String` @kind object;
  #L4a4fb4.  return v0 @kind object;
}
procedure `long` `c`(`v7.a` v2 @kind this) @signature `Lv7/a;.c:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a50cc.  v0:= v2.`v7.a.e` @type ^`long` @kind wide;
  #L4a50d0.  return v0 @kind wide;
}
procedure `java.lang.String` `d`(`v7.a` v1 @kind this) @signature `Lv7/a;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a4fc8.  v0:= v1.`v7.a.a` @type ^`java.lang.String` @kind object;
  #L4a4fcc.  return v0 @kind object;
}
procedure `java.lang.String` `e`(`v7.a` v1 @kind this) @signature `Lv7/a;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a4fe0.  v0:= v1.`v7.a.g` @type ^`java.lang.String` @kind object;
  #L4a4fe4.  return v0 @kind object;
}
procedure `boolean` `equals`(`v7.a` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lv7/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4a4de8.  v0:= 1I;
  #L4a4dea.  if v8 != v7 then goto L4a4df0;
  #L4a4dee.  return v0;
  #L4a4df0.  v1:= instanceof @variable v8 @type ^`v7.d` @kind boolean;
  #L4a4df4.  v2:= 0I;
  #L4a4df6.  if v1 == 0 then goto L4a4ee4;
  #L4a4dfa.  v8:= (`v7.d`) v8 @kind object;
  #L4a4dfe.  v1:= v7.`v7.a.a` @type ^`java.lang.String` @kind object;
  #L4a4e02.  if v1 != 0 then goto L4a4e14;
  #L4a4e06.  call temp:= `d`(v8) @signature `Lv7/d;.d:()Ljava/lang/String;` @kind virtual;
  #L4a4e0c.  v1:= temp @kind object;
  #L4a4e0e.  if v1 != 0 then goto L4a4ee0;
  #L4a4e12.  goto L4a4e28;
  #L4a4e14.  call temp:= `d`(v8) @signature `Lv7/d;.d:()Ljava/lang/String;` @kind virtual;
  #L4a4e1a.  v3:= temp @kind object;
  #L4a4e1c.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4a4e22.  v1:= temp;
  #L4a4e24.  if v1 == 0 then goto L4a4ee0;
  #L4a4e28.  v1:= v7.`v7.a.b` @type ^`v7.c$a` @kind object;
  #L4a4e2c.  call temp:= `g`(v8) @signature `Lv7/d;.g:()Lv7/c$a;` @kind virtual;
  #L4a4e32.  v3:= temp @kind object;
  #L4a4e34.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4a4e3a.  v1:= temp;
  #L4a4e3c.  if v1 == 0 then goto L4a4ee0;
  #L4a4e40.  v1:= v7.`v7.a.c` @type ^`java.lang.String` @kind object;
  #L4a4e44.  if v1 != 0 then goto L4a4e56;
  #L4a4e48.  call temp:= `b`(v8) @signature `Lv7/d;.b:()Ljava/lang/String;` @kind virtual;
  #L4a4e4e.  v1:= temp @kind object;
  #L4a4e50.  if v1 != 0 then goto L4a4ee0;
  #L4a4e54.  goto L4a4e6a;
  #L4a4e56.  call temp:= `b`(v8) @signature `Lv7/d;.b:()Ljava/lang/String;` @kind virtual;
  #L4a4e5c.  v3:= temp @kind object;
  #L4a4e5e.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4a4e64.  v1:= temp;
  #L4a4e66.  if v1 == 0 then goto L4a4ee0;
  #L4a4e6a.  v1:= v7.`v7.a.d` @type ^`java.lang.String` @kind object;
  #L4a4e6e.  if v1 != 0 then goto L4a4e80;
  #L4a4e72.  call temp:= `f`(v8) @signature `Lv7/d;.f:()Ljava/lang/String;` @kind virtual;
  #L4a4e78.  v1:= temp @kind object;
  #L4a4e7a.  if v1 != 0 then goto L4a4ee0;
  #L4a4e7e.  goto L4a4e94;
  #L4a4e80.  call temp:= `f`(v8) @signature `Lv7/d;.f:()Ljava/lang/String;` @kind virtual;
  #L4a4e86.  v3:= temp @kind object;
  #L4a4e88.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4a4e8e.  v1:= temp;
  #L4a4e90.  if v1 == 0 then goto L4a4ee0;
  #L4a4e94.  v3:= v7.`v7.a.e` @type ^`long` @kind wide;
  #L4a4e98.  call temp:= `c`(v8) @signature `Lv7/d;.c:()J` @kind virtual;
  #L4a4e9e.  v5:= temp @kind wide;
  #L4a4ea0.  v1:= lcmp(v3, v5);
  #L4a4ea4.  if v1 != 0 then goto L4a4ee0;
  #L4a4ea8.  v3:= v7.`v7.a.f` @type ^`long` @kind wide;
  #L4a4eac.  call temp:= `h`(v8) @signature `Lv7/d;.h:()J` @kind virtual;
  #L4a4eb2.  v5:= temp @kind wide;
  #L4a4eb4.  v1:= lcmp(v3, v5);
  #L4a4eb8.  if v1 != 0 then goto L4a4ee0;
  #L4a4ebc.  v1:= v7.`v7.a.g` @type ^`java.lang.String` @kind object;
  #L4a4ec0.  call temp:= `e`(v8) @signature `Lv7/d;.e:()Ljava/lang/String;` @kind virtual;
  #L4a4ec6.  v8:= temp @kind object;
  #L4a4ec8.  if v1 != 0 then goto L4a4ed2;
  #L4a4ecc.  if v8 != 0 then goto L4a4ee0;
  #L4a4ed0.  goto L4a4ee2;
  #L4a4ed2.  call temp:= `equals`(v1, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4a4ed8.  v8:= temp;
  #L4a4eda.  if v8 == 0 then goto L4a4ee0;
  #L4a4ede.  goto L4a4ee2;
  #L4a4ee0.  v0:= 0I;
  #L4a4ee2.  return v0;
  #L4a4ee4.  return v2;
}
procedure `java.lang.String` `f`(`v7.a` v1 @kind this) @signature `Lv7/a;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a4ff8.  v0:= v1.`v7.a.d` @type ^`java.lang.String` @kind object;
  #L4a4ffc.  return v0 @kind object;
}
procedure `v7.c$a` `g`(`v7.a` v1 @kind this) @signature `Lv7/a;.g:()Lv7/c$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a50fc.  v0:= v1.`v7.a.b` @type ^`v7.c$a` @kind object;
  #L4a5100.  return v0 @kind object;
}
procedure `long` `h`(`v7.a` v2 @kind this) @signature `Lv7/a;.h:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a50e4.  v0:= v2.`v7.a.f` @type ^`long` @kind wide;
  #L4a50e8.  return v0 @kind wide;
}
procedure `int` `hashCode`(`v7.a` v8 @kind this) @signature `Lv7/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4a4ef8.  v0:= v8.`v7.a.a` @type ^`java.lang.String` @kind object;
  #L4a4efc.  v1:= 0I;
  #L4a4efe.  if v0 != 0 then goto L4a4f06;
  #L4a4f02.  v0:= 0I;
  #L4a4f04.  goto L4a4f0e;
  #L4a4f06.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4a4f0c.  v0:= temp;
  #L4a4f0e.  v2:= 1000003I;
  #L4a4f14.  v0:= v0 ^~ v2 @kind int;
  #L4a4f16.  v0:= v0 * v2 @kind int;
  #L4a4f1a.  v3:= v8.`v7.a.b` @type ^`v7.c$a` @kind object;
  #L4a4f1e.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L4a4f24.  v3:= temp;
  #L4a4f26.  v0:= v0 ^~ v3 @kind int;
  #L4a4f28.  v0:= v0 * v2 @kind int;
  #L4a4f2c.  v3:= v8.`v7.a.c` @type ^`java.lang.String` @kind object;
  #L4a4f30.  if v3 != 0 then goto L4a4f38;
  #L4a4f34.  v3:= 0I;
  #L4a4f36.  goto L4a4f40;
  #L4a4f38.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4a4f3e.  v3:= temp;
  #L4a4f40.  v0:= v0 ^~ v3 @kind int;
  #L4a4f42.  v0:= v0 * v2 @kind int;
  #L4a4f46.  v3:= v8.`v7.a.d` @type ^`java.lang.String` @kind object;
  #L4a4f4a.  if v3 != 0 then goto L4a4f52;
  #L4a4f4e.  v3:= 0I;
  #L4a4f50.  goto L4a4f5a;
  #L4a4f52.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4a4f58.  v3:= temp;
  #L4a4f5a.  v0:= v0 ^~ v3 @kind int;
  #L4a4f5c.  v0:= v0 * v2 @kind int;
  #L4a4f60.  v3:= v8.`v7.a.e` @type ^`long` @kind wide;
  #L4a4f64.  v5:= 32I;
  #L4a4f68.  v6:= v3 ^>> v5 @kind long;
  #L4a4f6c.  v3:= v3 ^~ v6 @kind long;
  #L4a4f6e.  v4:= (`int`) v3 @kind l2i;
  #L4a4f70.  v0:= v0 ^~ v4 @kind int;
  #L4a4f72.  v0:= v0 * v2 @kind int;
  #L4a4f76.  v3:= v8.`v7.a.f` @type ^`long` @kind wide;
  #L4a4f7a.  v5:= v3 ^>> v5 @kind long;
  #L4a4f7e.  v3:= v3 ^~ v5 @kind long;
  #L4a4f80.  v4:= (`int`) v3 @kind l2i;
  #L4a4f82.  v0:= v0 ^~ v4 @kind int;
  #L4a4f84.  v0:= v0 * v2 @kind int;
  #L4a4f88.  v2:= v8.`v7.a.g` @type ^`java.lang.String` @kind object;
  #L4a4f8c.  if v2 != 0 then goto L4a4f92;
  #L4a4f90.  goto L4a4f9a;
  #L4a4f92.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4a4f98.  v1:= temp;
  #L4a4f9a.  v0:= v0 ^~ v1 @kind int;
  #L4a4f9c.  return v0;
}
procedure `v7.d$a` `n`(`v7.a` v2 @kind this) @signature `Lv7/a;.n:()Lv7/d$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a5114.  v0:= new `v7.a$b`;
  #L4a5118.  v1:= 0I;
  #L4a511a.  call `<init>`(v0, v2, v1) @signature `Lv7/a$b;.<init>:(Lv7/d;Lv7/a$a;)V` @kind direct;
  #L4a5120.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`v7.a` v3 @kind this) @signature `Lv7/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a5010.  v0:= new `java.lang.StringBuilder`;
  #L4a5014.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a501a.  v1:= "PersistedInstallationEntry{firebaseInstallationId=" @kind object;
  #L4a501e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5024.  v1:= v3.`v7.a.a` @type ^`java.lang.String` @kind object;
  #L4a5028.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a502e.  v1:= ", registrationStatus=" @kind object;
  #L4a5032.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5038.  v1:= v3.`v7.a.b` @type ^`v7.c$a` @kind object;
  #L4a503c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5042.  v1:= ", authToken=" @kind object;
  #L4a5046.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a504c.  v1:= v3.`v7.a.c` @type ^`java.lang.String` @kind object;
  #L4a5050.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5056.  v1:= ", refreshToken=" @kind object;
  #L4a505a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5060.  v1:= v3.`v7.a.d` @type ^`java.lang.String` @kind object;
  #L4a5064.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a506a.  v1:= ", expiresInSecs=" @kind object;
  #L4a506e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5074.  v1:= v3.`v7.a.e` @type ^`long` @kind wide;
  #L4a5078.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a507e.  v1:= ", tokenCreationEpochInSecs=" @kind object;
  #L4a5082.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5088.  v1:= v3.`v7.a.f` @type ^`long` @kind wide;
  #L4a508c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5092.  v1:= ", fisError=" @kind object;
  #L4a5096.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a509c.  v1:= v3.`v7.a.g` @type ^`java.lang.String` @kind object;
  #L4a50a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a50a6.  v1:= "}" @kind object;
  #L4a50aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a50b0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a50b6.  v0:= temp @kind object;
  #L4a50b8.  return v0 @kind object;
}
