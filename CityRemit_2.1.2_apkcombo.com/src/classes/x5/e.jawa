record `x5.e` @kind class @AccessFlag  {
}
procedure `byte`[] `a`(`byte`[] v2 @kind object) @signature `Lx5/e;.a:([B)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L4e2600.  v0:= length @variable v2;
  #L4e2602.  v1:= 16I;
  #L4e2606.  if v0 >= v1 then goto L4e261e;
  #L4e260a.  call temp:= `copyOf`(v2, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L4e2610.  v0:= temp @kind object;
  #L4e2612.  v2:= length @variable v2;
  #L4e2614.  v1:= -128I;
  #L4e2618.  v0[v2]:= v1 @kind byte;
  #L4e261c.  return v0 @kind object;
  #L4e261e.  v2:= new `java.lang.IllegalArgumentException`;
  #L4e2622.  v0:= "x must be smaller than a block." @kind object;
  #L4e2626.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e262c.  throw v2;
}
procedure `byte`[] `b`(`byte`[] v6 @kind object) @signature `Lx5/e;.b:([B)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4e2640.  v0:= length @variable v6;
  #L4e2642.  v1:= 16I;
  #L4e2646.  if v0 != v1 then goto L4e26b0;
  #L4e264a.  v0:= new `byte`[v1];
  #L4e264e.  v2:= 0I;
  #L4e2650.  v3:= 0I;
  #L4e2652.  v4:= 15I;
  #L4e2656.  if v3 >= v1 then goto L4e2694;
  #L4e265a.  v5:= v6[v3] @kind byte;
  #L4e265e.  v5:= v5 ^< 1;
  #L4e2662.  v5:= v5 ^& 254;
  #L4e2666.  v5:= (`byte`) v5 @kind i2b;
  #L4e2668.  v0[v3]:= v5 @kind byte;
  #L4e266c.  if v3 >= v4 then goto L4e268e;
  #L4e2670.  v4:= v0[v3] @kind byte;
  #L4e2674.  v5:= v3 + 1;
  #L4e2678.  v5:= v6[v5] @kind byte;
  #L4e267c.  v5:= v5 ^> 7;
  #L4e2680.  v5:= v5 ^& 1;
  #L4e2684.  v5:= (`byte`) v5 @kind i2b;
  #L4e2686.  v4:= v4 ^| v5 @kind int;
  #L4e2688.  v4:= (`byte`) v4 @kind i2b;
  #L4e268a.  v0[v3]:= v4 @kind byte;
  #L4e268e.  v3:= v3 + 1;
  #L4e2692.  goto L4e2652;
  #L4e2694.  v1:= v0[v4] @kind byte;
  #L4e2698.  v6:= v6[v2] @kind byte;
  #L4e269c.  v6:= v6 ^> 7;
  #L4e26a0.  v6:= v6 ^& 135;
  #L4e26a4.  v6:= (`byte`) v6 @kind i2b;
  #L4e26a6.  v6:= v6 ^~ v1 @kind int;
  #L4e26a8.  v6:= (`byte`) v6 @kind i2b;
  #L4e26aa.  v0[v4]:= v6 @kind byte;
  #L4e26ae.  return v0 @kind object;
  #L4e26b0.  v6:= new `java.lang.IllegalArgumentException`;
  #L4e26b4.  v0:= "value must be a block." @kind object;
  #L4e26b8.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e26be.  throw v6;
}
