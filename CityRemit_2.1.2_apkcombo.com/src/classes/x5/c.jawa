record `x5.c` @kind class @AccessFlag PUBLIC_FINAL extends `p5.a` @kind interface {
  `javax.crypto.SecretKey` `x5.c.a` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.ThreadLocal` `@@x5.c.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx5/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4e221c.  v0:= new `x5.c$a`;
  #L4e2220.  call `<init>`(v0) @signature `Lx5/c$a;.<init>:()V` @kind direct;
  #L4e2226.  `@@x5.c.b` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L4e222a.  return @kind void;
}
procedure `void` `<init>`(`x5.c` v2 @kind this, `byte`[] v3 @kind object) @signature `Lx5/c;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4e223c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e2242.  v0:= length @variable v3;
  #L4e2244.  call `a`(v0) @signature `Lx5/w;.a:(I)V` @kind static;
  #L4e224a.  v0:= new `javax.crypto.spec.SecretKeySpec`;
  #L4e224e.  v1:= "AES" @kind object;
  #L4e2252.  call `<init>`(v0, v3, v1) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L4e2258.  v2.`x5.c.a` @type ^`javax.crypto.SecretKey` := v0 @kind object;
  #L4e225c.  return @kind void;
}
procedure `java.security.spec.AlgorithmParameterSpec` `c`(`byte`[] v2 @kind object) @signature `Lx5/c;.c:([B)Ljava/security/spec/AlgorithmParameterSpec;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4e21b4.  v0:= length @variable v2;
  #L4e21b6.  v1:= 0I;
  #L4e21b8.  call temp:= `d`(v2, v1, v0) @signature `Lx5/c;.d:([BII)Ljava/security/spec/AlgorithmParameterSpec;` @kind static;
  #L4e21be.  v2:= temp @kind object;
  #L4e21c0.  return v2 @kind object;
}
procedure `java.security.spec.AlgorithmParameterSpec` `d`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lx5/c;.d:([BII)Ljava/security/spec/AlgorithmParameterSpec;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4e21d4.  call temp:= `b`() @signature `Lx5/v;.b:()Z` @kind static;
  #L4e21da.  v0:= temp;
  #L4e21dc.  if v0 == 0 then goto L4e21fc;
  #L4e21e0.  call temp:= `a`() @signature `Lx5/v;.a:()I` @kind static;
  #L4e21e6.  v0:= temp;
  #L4e21e8.  v1:= 19I;
  #L4e21ec.  if v0 > v1 then goto L4e21fc;
  #L4e21f0.  v0:= new `javax.crypto.spec.IvParameterSpec`;
  #L4e21f4.  call `<init>`(v0, v2, v3, v4) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([BII)V` @kind direct;
  #L4e21fa.  return v0 @kind object;
  #L4e21fc.  v0:= new `javax.crypto.spec.GCMParameterSpec`;
  #L4e2200.  v1:= 128I;
  #L4e2204.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ljavax/crypto/spec/GCMParameterSpec;.<init>:(I[BII)V` @kind direct;
  #L4e220a.  return v0 @kind object;
}
procedure `byte`[] `a`(`x5.c` v11 @kind this, `byte`[] v12 @kind object, `byte`[] v13 @kind object) @signature `Lx5/c;.a:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4e20c0.  v0:= length @variable v12;
  #L4e20c2.  v1:= 2147483619I;
  #L4e20c8.  if v0 > v1 then goto L4e2194;
  #L4e20cc.  v0:= length @variable v12;
  #L4e20ce.  v1:= 12I;
  #L4e20d2.  v0:= v0 + v1 @kind int;
  #L4e20d4.  v2:= 16I;
  #L4e20d8.  v0:= v0 + v2 @kind int;
  #L4e20da.  v0:= new `byte`[v0];
  #L4e20de.  call temp:= `c`(v1) @signature `Lx5/u;.c:(I)[B` @kind static;
  #L4e20e4.  v3:= temp @kind object;
  #L4e20e6.  v9:= 0I;
  #L4e20e8.  call `arraycopy`(v3, v9, v0, v9, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4e20ee.  call temp:= `c`(v3) @signature `Lx5/c;.c:([B)Ljava/security/spec/AlgorithmParameterSpec;` @kind static;
  #L4e20f4.  v1:= temp @kind object;
  #L4e20f6.  v3:= `@@x5.c.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L4e20fa.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e2100.  v4:= temp @kind object;
  #L4e2102.  v4:= (`javax.crypto.Cipher`) v4 @kind object;
  #L4e2106.  v5:= v11.`x5.c.a` @type ^`javax.crypto.SecretKey` @kind object;
  #L4e210a.  v10:= 1I;
  #L4e210c.  call `init`(v4, v10, v5, v1) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L4e2112.  if v13 == 0 then goto L4e212e;
  #L4e2116.  v1:= length @variable v13;
  #L4e2118.  if v1 == 0 then goto L4e212e;
  #L4e211c.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e2122.  v1:= temp @kind object;
  #L4e2124.  v1:= (`javax.crypto.Cipher`) v1 @kind object;
  #L4e2128.  call `updateAAD`(v1, v13) @signature `Ljavax/crypto/Cipher;.updateAAD:([B)V` @kind virtual;
  #L4e212e.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e2134.  v13:= temp @kind object;
  #L4e2136.  v3:= v13 @kind object;
  #L4e2138.  v3:= (`javax.crypto.Cipher`) v3 @kind object;
  #L4e213c.  v5:= 0I;
  #L4e213e.  v6:= length @variable v12;
  #L4e2140.  v8:= 12I;
  #L4e2144.  v4:= v12 @kind object;
  #L4e2146.  v7:= v0 @kind object;
  #L4e2148.  call temp:= `doFinal`(v3, v4, v5, v6, v7, v8) @signature `Ljavax/crypto/Cipher;.doFinal:([BII[BI)I` @kind virtual;
  #L4e214e.  v13:= temp;
  #L4e2150.  v1:= length @variable v12;
  #L4e2152.  v1:= v1 + v2 @kind int;
  #L4e2154.  if v13 != v1 then goto L4e215a;
  #L4e2158.  return v0 @kind object;
  #L4e215a.  v12:= length @variable v12;
  #L4e215c.  v13:= v13 - v12 @kind int;
  #L4e215e.  v12:= new `java.security.GeneralSecurityException`;
  #L4e2162.  v0:= 2I;
  #L4e2164.  v0:= new `java.lang.Object`[v0];
  #L4e2168.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4e216e.  v1:= temp @kind object;
  #L4e2170.  v0[v9]:= v1 @kind object;
  #L4e2174.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4e217a.  v13:= temp @kind object;
  #L4e217c.  v0[v10]:= v13 @kind object;
  #L4e2180.  v13:= "encryption failed; GCM tag must be %s bytes, but got only %s bytes" @kind object;
  #L4e2184.  call temp:= `format`(v13, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4e218a.  v13:= temp @kind object;
  #L4e218c.  call `<init>`(v12, v13) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e2192.  throw v12;
  #L4e2194.  v12:= new `java.security.GeneralSecurityException`;
  #L4e2198.  v13:= "plaintext too long" @kind object;
  #L4e219c.  call `<init>`(v12, v13) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e21a2.  throw v12;
}
procedure `byte`[] `b`(`x5.c` v6 @kind this, `byte`[] v7 @kind object, `byte`[] v8 @kind object) @signature `Lx5/c;.b:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4e2034.  v0:= length @variable v7;
  #L4e2036.  v1:= 28I;
  #L4e203a.  if v0 < v1 then goto L4e209e;
  #L4e203e.  v0:= 0I;
  #L4e2040.  v1:= 12I;
  #L4e2044.  call temp:= `d`(v7, v0, v1) @signature `Lx5/c;.d:([BII)Ljava/security/spec/AlgorithmParameterSpec;` @kind static;
  #L4e204a.  v0:= temp @kind object;
  #L4e204c.  v2:= `@@x5.c.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L4e2050.  call temp:= `get`(v2) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e2056.  v3:= temp @kind object;
  #L4e2058.  v3:= (`javax.crypto.Cipher`) v3 @kind object;
  #L4e205c.  v4:= 2I;
  #L4e205e.  v5:= v6.`x5.c.a` @type ^`javax.crypto.SecretKey` @kind object;
  #L4e2062.  call `init`(v3, v4, v5, v0) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L4e2068.  if v8 == 0 then goto L4e2084;
  #L4e206c.  v0:= length @variable v8;
  #L4e206e.  if v0 == 0 then goto L4e2084;
  #L4e2072.  call temp:= `get`(v2) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e2078.  v0:= temp @kind object;
  #L4e207a.  v0:= (`javax.crypto.Cipher`) v0 @kind object;
  #L4e207e.  call `updateAAD`(v0, v8) @signature `Ljavax/crypto/Cipher;.updateAAD:([B)V` @kind virtual;
  #L4e2084.  call temp:= `get`(v2) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e208a.  v8:= temp @kind object;
  #L4e208c.  v8:= (`javax.crypto.Cipher`) v8 @kind object;
  #L4e2090.  v0:= length @variable v7;
  #L4e2092.  v0:= v0 - v1 @kind int;
  #L4e2094.  call temp:= `doFinal`(v8, v7, v1, v0) @signature `Ljavax/crypto/Cipher;.doFinal:([BII)[B` @kind virtual;
  #L4e209a.  v7:= temp @kind object;
  #L4e209c.  return v7 @kind object;
  #L4e209e.  v7:= new `java.security.GeneralSecurityException`;
  #L4e20a2.  v8:= "ciphertext too short" @kind object;
  #L4e20a6.  call `<init>`(v7, v8) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e20ac.  throw v7;
}
