record `x5.t` @kind class @AccessFlag PUBLIC extends `p5.o` @kind interface {
  `v5.a` `x5.t.a` @AccessFlag PRIVATE_FINAL;
  `int` `x5.t.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`x5.t` v1 @kind this, `v5.a` v2 @kind object, `int` v3 ) @signature `Lx5/t;.<init>:(Lv5/a;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4e53ac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e53b2.  v1.`x5.t.a` @type ^`v5.a` := v2 @kind object;
  #L4e53b6.  v1.`x5.t.b` @type ^`int` := v3;
  #L4e53ba.  v0:= 10I;
  #L4e53be.  if v3 < v0 then goto L4e53d0;
  #L4e53c2.  v0:= 0I;
  #L4e53c4.  v0:= new `byte`[v0];
  #L4e53c8.  call temp:= `a`(v2, v0, v3) @signature `Lv5/a;.a:([BI)[B` @kind interface;
  #L4e53ce.  return @kind void;
  #L4e53d0.  v2:= new `java.security.InvalidAlgorithmParameterException`;
  #L4e53d4.  v3:= "tag size too small, need at least 10 bytes" @kind object;
  #L4e53d8.  call `<init>`(v2, v3) @signature `Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e53de.  throw v2;
}
procedure `void` `a`(`x5.t` v0 @kind this, `byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lx5/t;.a:([B[B)V` @AccessFlag PUBLIC {
    temp;

  #L4e53f0.  call temp:= `b`(v0, v2) @signature `Lx5/t;.b:([B)[B` @kind virtual;
  #L4e53f6.  v2:= temp @kind object;
  #L4e53f8.  call temp:= `b`(v2, v1) @signature `Lx5/g;.b:([B[B)Z` @kind static;
  #L4e53fe.  v1:= temp;
  #L4e5400.  if v1 == 0 then goto L4e5406;
  #L4e5404.  return @kind void;
  #L4e5406.  v1:= new `java.security.GeneralSecurityException`;
  #L4e540a.  v2:= "invalid MAC" @kind object;
  #L4e540e.  call `<init>`(v1, v2) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e5414.  throw v1;
}
procedure `byte`[] `b`(`x5.t` v2 @kind this, `byte`[] v3 @kind object) @signature `Lx5/t;.b:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4e5388.  v0:= v2.`x5.t.a` @type ^`v5.a` @kind object;
  #L4e538c.  v1:= v2.`x5.t.b` @type ^`int`;
  #L4e5390.  call temp:= `a`(v0, v3, v1) @signature `Lv5/a;.a:([BI)[B` @kind interface;
  #L4e5396.  v3:= temp @kind object;
  #L4e5398.  return v3 @kind object;
}
