record `x5.d` @kind class @AccessFlag PUBLIC_FINAL extends `p5.d` @kind interface {
  `x5.r` `x5.d.a` @AccessFlag PRIVATE_FINAL;
  `byte`[] `x5.d.b` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Collection` `@@x5.d.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@x5.d.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@x5.d.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx5/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4e24f8.  v0:= 1I;
  #L4e24fa.  v0:= new `java.lang.Integer`[v0];
  #L4e24fe.  v1:= 64I;
  #L4e2502.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4e2508.  v1:= temp @kind object;
  #L4e250a.  v2:= 0I;
  #L4e250c.  v0[v2]:= v1 @kind object;
  #L4e2510.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L4e2516.  v0:= temp @kind object;
  #L4e2518.  `@@x5.d.c` @type ^`java.util.Collection` := v0 @kind object;
  #L4e251c.  v0:= 16I;
  #L4e2520.  v1:= new `byte`[v0];
  #L4e2524.  `@@x5.d.d` @type ^`byte`[] := v1 @kind object;
  #L4e2528.  v0:= new `byte`[v0];
  #L4e252c.  goto L4e2538;
  #L4e2532.  `@@x5.d.e` @type ^`byte`[] := v0 @kind object;
  #L4e2536.  return @kind void;
  #L4e2538.  v0:= (0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 1I) @kind object;
  #L4e254f.  goto L4e2532;
}
procedure `void` `<init>`(`x5.d` v3 @kind this, `byte`[] v4 @kind object) @signature `Lx5/d;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4e2560.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e2566.  v0:= `@@x5.d.c` @type ^`java.util.Collection` @kind object;
  #L4e256a.  v1:= length @variable v4;
  #L4e256c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4e2572.  v1:= temp @kind object;
  #L4e2574.  call temp:= `contains`(v0, v1) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4e257a.  v0:= temp;
  #L4e257c.  if v0 == 0 then goto L4e25b4;
  #L4e2580.  v0:= 0I;
  #L4e2582.  v1:= length @variable v4;
  #L4e2584.  v1:= v1 / 2;
  #L4e2588.  call temp:= `copyOfRange`(v4, v0, v1) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L4e258e.  v0:= temp @kind object;
  #L4e2590.  v1:= length @variable v4;
  #L4e2592.  v1:= v1 / 2;
  #L4e2596.  v2:= length @variable v4;
  #L4e2598.  call temp:= `copyOfRange`(v4, v1, v2) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L4e259e.  v4:= temp @kind object;
  #L4e25a0.  v3.`x5.d.b` @type ^`byte`[] := v4 @kind object;
  #L4e25a4.  v4:= new `x5.r`;
  #L4e25a8.  call `<init>`(v4, v0) @signature `Lx5/r;.<init>:([B)V` @kind direct;
  #L4e25ae.  v3.`x5.d.a` @type ^`x5.r` := v4 @kind object;
  #L4e25b2.  return @kind void;
  #L4e25b4.  v0:= new `java.security.InvalidKeyException`;
  #L4e25b8.  v1:= new `java.lang.StringBuilder`;
  #L4e25bc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4e25c2.  v2:= "invalid key size: " @kind object;
  #L4e25c6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e25cc.  v4:= length @variable v4;
  #L4e25ce.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e25d4.  v4:= " bytes; key must have 64 bytes" @kind object;
  #L4e25d8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e25de.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4e25e4.  v4:= temp @kind object;
  #L4e25e6.  call `<init>`(v0, v4) @signature `Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e25ec.  throw v0;
}
procedure `byte`[] `c`(`x5.d` v6 @kind this, `byte`[][] v7 @kind object) @signature `Lx5/d;.c:([[B)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4e2438.  v0:= length @variable v7;
  #L4e243a.  v1:= 16I;
  #L4e243e.  if v0 != 0 then goto L4e2454;
  #L4e2442.  v7:= v6.`x5.d.a` @type ^`x5.r` @kind object;
  #L4e2446.  v0:= `@@x5.d.e` @type ^`byte`[] @kind object;
  #L4e244a.  call temp:= `a`(v7, v0, v1) @signature `Lx5/r;.a:([BI)[B` @kind virtual;
  #L4e2450.  v7:= temp @kind object;
  #L4e2452.  return v7 @kind object;
  #L4e2454.  v0:= v6.`x5.d.a` @type ^`x5.r` @kind object;
  #L4e2458.  v2:= `@@x5.d.d` @type ^`byte`[] @kind object;
  #L4e245c.  call temp:= `a`(v0, v2, v1) @signature `Lx5/r;.a:([BI)[B` @kind virtual;
  #L4e2462.  v0:= temp @kind object;
  #L4e2464.  v2:= 0I;
  #L4e2466.  v3:= 0I;
  #L4e2468.  v4:= length @variable v7;
  #L4e246a.  v4:= v4 + -1;
  #L4e246e.  if v3 >= v4 then goto L4e24a6;
  #L4e2472.  v4:= v7[v3] @kind object;
  #L4e2476.  if v4 != 0 then goto L4e2480;
  #L4e247a.  v4:= new `byte`[v2];
  #L4e247e.  goto L4e2484;
  #L4e2480.  v4:= v7[v3] @kind object;
  #L4e2484.  call temp:= `b`(v0) @signature `Lx5/e;.b:([B)[B` @kind static;
  #L4e248a.  v0:= temp @kind object;
  #L4e248c.  v5:= v6.`x5.d.a` @type ^`x5.r` @kind object;
  #L4e2490.  call temp:= `a`(v5, v4, v1) @signature `Lx5/r;.a:([BI)[B` @kind virtual;
  #L4e2496.  v4:= temp @kind object;
  #L4e2498.  call temp:= `e`(v0, v4) @signature `Lx5/g;.e:([B[B)[B` @kind static;
  #L4e249e.  v0:= temp @kind object;
  #L4e24a0.  v3:= v3 + 1;
  #L4e24a4.  goto L4e2468;
  #L4e24a6.  v2:= length @variable v7;
  #L4e24a8.  v2:= v2 + -1;
  #L4e24ac.  v7:= v7[v2] @kind object;
  #L4e24b0.  v2:= length @variable v7;
  #L4e24b2.  if v2 < v1 then goto L4e24c0;
  #L4e24b6.  call temp:= `f`(v7, v0) @signature `Lx5/g;.f:([B[B)[B` @kind static;
  #L4e24bc.  v7:= temp @kind object;
  #L4e24be.  goto L4e24d8;
  #L4e24c0.  call temp:= `a`(v7) @signature `Lx5/e;.a:([B)[B` @kind static;
  #L4e24c6.  v7:= temp @kind object;
  #L4e24c8.  call temp:= `b`(v0) @signature `Lx5/e;.b:([B)[B` @kind static;
  #L4e24ce.  v0:= temp @kind object;
  #L4e24d0.  call temp:= `e`(v7, v0) @signature `Lx5/g;.e:([B[B)[B` @kind static;
  #L4e24d6.  v7:= temp @kind object;
  #L4e24d8.  v0:= v6.`x5.d.a` @type ^`x5.r` @kind object;
  #L4e24dc.  call temp:= `a`(v0, v7, v1) @signature `Lx5/r;.a:([BI)[B` @kind virtual;
  #L4e24e2.  v7:= temp @kind object;
  #L4e24e4.  return v7 @kind object;
}
procedure `byte`[] `a`(`x5.d` v8 @kind this, `byte`[] v9 @kind object, `byte`[] v10 @kind object) @signature `Lx5/d;.a:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4e236c.  v0:= length @variable v9;
  #L4e236e.  v1:= 2147483631I;
  #L4e2374.  if v0 > v1 then goto L4e2416;
  #L4e2378.  v0:= `@@x5.m.f` @type ^`x5.m` @kind object;
  #L4e237c.  v1:= "AES/CTR/NoPadding" @kind object;
  #L4e2380.  call temp:= `a`(v0, v1) @signature `Lx5/m;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L4e2386.  v0:= temp @kind object;
  #L4e2388.  v0:= (`javax.crypto.Cipher`) v0 @kind object;
  #L4e238c.  v1:= 2I;
  #L4e238e.  v2:= new `byte`[][v1];
  #L4e2392.  v3:= 0I;
  #L4e2394.  v2[v3]:= v10 @kind object;
  #L4e2398.  v10:= 1I;
  #L4e239a.  v2[v10]:= v9 @kind object;
  #L4e239e.  call temp:= `c`(v8, v2) @signature `Lx5/d;.c:([[B)[B` @kind direct;
  #L4e23a4.  v2:= temp @kind object;
  #L4e23a6.  call temp:= `clone`(v2) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L4e23ac.  v4:= temp @kind object;
  #L4e23ae.  v4:= (`byte`[]) v4 @kind object;
  #L4e23b2.  v5:= 8I;
  #L4e23b6.  v6:= v4[v5] @kind byte;
  #L4e23ba.  v6:= v6 ^& 127;
  #L4e23be.  v6:= (`byte`) v6 @kind i2b;
  #L4e23c0.  v4[v5]:= v6 @kind byte;
  #L4e23c4.  v5:= 12I;
  #L4e23c8.  v6:= v4[v5] @kind byte;
  #L4e23cc.  v6:= v6 ^& 127;
  #L4e23d0.  v6:= (`byte`) v6 @kind i2b;
  #L4e23d2.  v4[v5]:= v6 @kind byte;
  #L4e23d6.  v5:= new `javax.crypto.spec.SecretKeySpec`;
  #L4e23da.  v6:= v8.`x5.d.b` @type ^`byte`[] @kind object;
  #L4e23de.  v7:= "AES" @kind object;
  #L4e23e2.  call `<init>`(v5, v6, v7) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L4e23e8.  v6:= new `javax.crypto.spec.IvParameterSpec`;
  #L4e23ec.  call `<init>`(v6, v4) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L4e23f2.  call `init`(v0, v10, v5, v6) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L4e23f8.  call temp:= `doFinal`(v0, v9) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L4e23fe.  v9:= temp @kind object;
  #L4e2400.  v0:= new `byte`[][v1];
  #L4e2404.  v0[v3]:= v2 @kind object;
  #L4e2408.  v0[v10]:= v9 @kind object;
  #L4e240c.  call temp:= `a`(v0) @signature `Lx5/g;.a:([[B)[B` @kind static;
  #L4e2412.  v9:= temp @kind object;
  #L4e2414.  return v9 @kind object;
  #L4e2416.  v9:= new `java.security.GeneralSecurityException`;
  #L4e241a.  v10:= "plaintext too long" @kind object;
  #L4e241e.  call `<init>`(v9, v10) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e2424.  throw v9;
}
procedure `byte`[] `b`(`x5.d` v8 @kind this, `byte`[] v9 @kind object, `byte`[] v10 @kind object) @signature `Lx5/d;.b:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4e2270.  v0:= length @variable v9;
  #L4e2272.  v1:= 16I;
  #L4e2276.  if v0 < v1 then goto L4e234c;
  #L4e227a.  v0:= `@@x5.m.f` @type ^`x5.m` @kind object;
  #L4e227e.  v2:= "AES/CTR/NoPadding" @kind object;
  #L4e2282.  call temp:= `a`(v0, v2) @signature `Lx5/m;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L4e2288.  v0:= temp @kind object;
  #L4e228a.  v0:= (`javax.crypto.Cipher`) v0 @kind object;
  #L4e228e.  v2:= 0I;
  #L4e2290.  call temp:= `copyOfRange`(v9, v2, v1) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L4e2296.  v3:= temp @kind object;
  #L4e2298.  call temp:= `clone`(v3) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L4e229e.  v4:= temp @kind object;
  #L4e22a0.  v4:= (`byte`[]) v4 @kind object;
  #L4e22a4.  v5:= 8I;
  #L4e22a8.  v6:= v4[v5] @kind byte;
  #L4e22ac.  v6:= v6 ^& 127;
  #L4e22b0.  v6:= (`byte`) v6 @kind i2b;
  #L4e22b2.  v4[v5]:= v6 @kind byte;
  #L4e22b6.  v5:= 12I;
  #L4e22ba.  v6:= v4[v5] @kind byte;
  #L4e22be.  v6:= v6 ^& 127;
  #L4e22c2.  v6:= (`byte`) v6 @kind i2b;
  #L4e22c4.  v4[v5]:= v6 @kind byte;
  #L4e22c8.  v5:= new `javax.crypto.spec.SecretKeySpec`;
  #L4e22cc.  v6:= v8.`x5.d.b` @type ^`byte`[] @kind object;
  #L4e22d0.  v7:= "AES" @kind object;
  #L4e22d4.  call `<init>`(v5, v6, v7) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L4e22da.  v6:= new `javax.crypto.spec.IvParameterSpec`;
  #L4e22de.  call `<init>`(v6, v4) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L4e22e4.  v4:= 2I;
  #L4e22e6.  call `init`(v0, v4, v5, v6) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L4e22ec.  v5:= length @variable v9;
  #L4e22ee.  call temp:= `copyOfRange`(v9, v1, v5) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L4e22f4.  v9:= temp @kind object;
  #L4e22f6.  call temp:= `doFinal`(v0, v9) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L4e22fc.  v0:= temp @kind object;
  #L4e22fe.  v9:= length @variable v9;
  #L4e2300.  if v9 != 0 then goto L4e2318;
  #L4e2304.  if v0 != 0 then goto L4e2318;
  #L4e2308.  call temp:= `b`() @signature `Lx5/v;.b:()Z` @kind static;
  #L4e230e.  v9:= temp;
  #L4e2310.  if v9 == 0 then goto L4e2318;
  #L4e2314.  v0:= new `byte`[v2];
  #L4e2318.  v9:= new `byte`[][v4];
  #L4e231c.  v9[v2]:= v10 @kind object;
  #L4e2320.  v10:= 1I;
  #L4e2322.  v9[v10]:= v0 @kind object;
  #L4e2326.  call temp:= `c`(v8, v9) @signature `Lx5/d;.c:([[B)[B` @kind direct;
  #L4e232c.  v9:= temp @kind object;
  #L4e232e.  call temp:= `b`(v3, v9) @signature `Lx5/g;.b:([B[B)Z` @kind static;
  #L4e2334.  v9:= temp;
  #L4e2336.  if v9 == 0 then goto L4e233c;
  #L4e233a.  return v0 @kind object;
  #L4e233c.  v9:= new `javax.crypto.AEADBadTagException`;
  #L4e2340.  v10:= "Integrity check failed." @kind object;
  #L4e2344.  call `<init>`(v9, v10) @signature `Ljavax/crypto/AEADBadTagException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e234a.  throw v9;
  #L4e234c.  v9:= new `java.security.GeneralSecurityException`;
  #L4e2350.  v10:= "Ciphertext too short." @kind object;
  #L4e2354.  call `<init>`(v9, v10) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e235a.  throw v9;
}
