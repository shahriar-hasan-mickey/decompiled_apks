record `x5.h` @kind class @AccessFlag  extends `x5.i` @kind class {
}
procedure `void` `<init>`(`x5.h` v0 @kind this, `byte`[] v1 @kind object, `int` v2 ) @signature `Lx5/h;.<init>:([BI)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e432c.  call `<init>`(v0, v1, v2) @signature `Lx5/i;.<init>:([BI)V` @kind direct;
  #L4e4332.  return @kind void;
}
procedure `int`[] `d`(`x5.h` v3 @kind this, `int`[] v4 @kind object, `int` v5 ) @signature `Lx5/h;.d:([II)[I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4e42b0.  v0:= length @variable v4;
  #L4e42b2.  call temp:= `g`(v3) @signature `Lx5/h;.g:()I` @kind virtual;
  #L4e42b8.  v1:= temp;
  #L4e42ba.  v1:= v1 / 4;
  #L4e42be.  v2:= 0I;
  #L4e42c0.  if v0 != v1 then goto L4e42ec;
  #L4e42c4.  v0:= 16I;
  #L4e42c8.  v0:= new `int`[v0];
  #L4e42cc.  v1:= v3.`x5.i.a` @type ^`int`[] @kind object;
  #L4e42d0.  call `k`(v0, v1) @signature `Lx5/i;.k:([I[I)V` @kind static;
  #L4e42d6.  v1:= 12I;
  #L4e42da.  v0[v1]:= v5;
  #L4e42de.  v5:= 13I;
  #L4e42e2.  v1:= length @variable v4;
  #L4e42e4.  call `arraycopy`(v4, v2, v0, v5, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4e42ea.  return v0 @kind object;
  #L4e42ec.  v5:= new `java.lang.IllegalArgumentException`;
  #L4e42f0.  v0:= 1I;
  #L4e42f2.  v0:= new `java.lang.Object`[v0];
  #L4e42f6.  v4:= length @variable v4;
  #L4e42f8.  v4:= v4 * 32;
  #L4e42fc.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4e4302.  v4:= temp @kind object;
  #L4e4304.  v0[v2]:= v4 @kind object;
  #L4e4308.  v4:= "ChaCha20 uses 96-bit nonces, but got a %d-bit nonce" @kind object;
  #L4e430c.  call temp:= `format`(v4, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4e4312.  v4:= temp @kind object;
  #L4e4314.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e431a.  throw v5;
}
procedure `int` `g`(`x5.h` v1 @kind this) @signature `Lx5/h;.g:()I` @AccessFlag  {
    temp;
    v0;

  #L4e4298.  v0:= 12I;
  #L4e429c.  return v0;
}
