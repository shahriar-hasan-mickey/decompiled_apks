record `x5.f$c` @kind class @AccessFlag  extends `x5.f$a` @kind class {
  `byte`[] `x5.f$c.c` @AccessFlag PRIVATE_FINAL;
  `int` `x5.f$c.d` @AccessFlag ;
  `int` `x5.f$c.e` @AccessFlag PRIVATE;
  `boolean` `x5.f$c.f` @AccessFlag PUBLIC_FINAL;
  `boolean` `x5.f$c.g` @AccessFlag PUBLIC_FINAL;
  `boolean` `x5.f$c.h` @AccessFlag PUBLIC_FINAL;
  `byte`[] `x5.f$c.i` @AccessFlag PRIVATE_FINAL;
}
global `byte`[] `@@x5.f$c.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@x5.f$c.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx5/f$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4e357c.  v0:= 64I;
  #L4e3580.  v1:= new `byte`[v0];
  #L4e3584.  goto L4e35a0;
  #L4e358a.  `@@x5.f$c.j` @type ^`byte`[] := v1 @kind object;
  #L4e358e.  v0:= new `byte`[v0];
  #L4e3592.  goto L4e35e8;
  #L4e3598.  `@@x5.f$c.k` @type ^`byte`[] := v0 @kind object;
  #L4e359c.  return @kind void;
  #L4e359e.  
  #L4e35a0.  v1:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 43I, 47I) @kind object;
  #L4e35e7.  goto L4e358a;
  #L4e35e8.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 45I, 95I) @kind object;
  #L4e362f.  goto L4e3598;
}
procedure `void` `<init>`(`x5.f$c` v3 @kind this, `int` v4 , `byte`[] v5 @kind object) @signature `Lx5/f$c;.<init>:(I[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4e3640.  call `<init>`(v3) @signature `Lx5/f$a;.<init>:()V` @kind direct;
  #L4e3646.  v3.`x5.f$a.a` @type ^`byte`[] := v5 @kind object;
  #L4e364a.  v5:= v4 ^& 1;
  #L4e364e.  v0:= 0I;
  #L4e3650.  v1:= 1I;
  #L4e3652.  if v5 != 0 then goto L4e365a;
  #L4e3656.  v5:= 1I;
  #L4e3658.  goto L4e365c;
  #L4e365a.  v5:= 0I;
  #L4e365c.  v3.`x5.f$c.f` @type ^`boolean` := v5 @kind boolean;
  #L4e3660.  v5:= v4 ^& 2;
  #L4e3664.  if v5 != 0 then goto L4e366c;
  #L4e3668.  v5:= 1I;
  #L4e366a.  goto L4e366e;
  #L4e366c.  v5:= 0I;
  #L4e366e.  v3.`x5.f$c.g` @type ^`boolean` := v5 @kind boolean;
  #L4e3672.  v2:= v4 ^& 4;
  #L4e3676.  if v2 == 0 then goto L4e367c;
  #L4e367a.  goto L4e367e;
  #L4e367c.  v1:= 0I;
  #L4e367e.  v3.`x5.f$c.h` @type ^`boolean` := v1 @kind boolean;
  #L4e3682.  v4:= v4 ^& 8;
  #L4e3686.  if v4 != 0 then goto L4e3690;
  #L4e368a.  v4:= `@@x5.f$c.j` @type ^`byte`[] @kind object;
  #L4e368e.  goto L4e3694;
  #L4e3690.  v4:= `@@x5.f$c.k` @type ^`byte`[] @kind object;
  #L4e3694.  v3.`x5.f$c.i` @type ^`byte`[] := v4 @kind object;
  #L4e3698.  v4:= 2I;
  #L4e369a.  v4:= new `byte`[v4];
  #L4e369e.  v3.`x5.f$c.c` @type ^`byte`[] := v4 @kind object;
  #L4e36a2.  v3.`x5.f$c.d` @type ^`int` := v0;
  #L4e36a6.  if v5 == 0 then goto L4e36b0;
  #L4e36aa.  v4:= 19I;
  #L4e36ae.  goto L4e36b2;
  #L4e36b0.  v4:= -1I;
  #L4e36b2.  v3.`x5.f$c.e` @type ^`int` := v4;
  #L4e36b6.  return @kind void;
}
procedure `boolean` `a`(`x5.f$c` v17 @kind this, `byte`[] v18 @kind object, `int` v19 , `int` v20 , `boolean` v21 ) @signature `Lx5/f$c;.a:([BIIZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L4e31b0.  v0:= v17 @kind object;
  #L4e31b4.  v1:= v0.`x5.f$c.i` @type ^`byte`[] @kind object;
  #L4e31b8.  v2:= v0.`x5.f$a.a` @type ^`byte`[] @kind object;
  #L4e31bc.  v3:= v0.`x5.f$c.e` @type ^`int`;
  #L4e31c0.  v4:= v20 + v19 @kind int;
  #L4e31c4.  v5:= v0.`x5.f$c.d` @type ^`int`;
  #L4e31c8.  v6:= -1I;
  #L4e31ca.  v7:= 0I;
  #L4e31cc.  v8:= 2I;
  #L4e31ce.  v9:= 1I;
  #L4e31d0.  if v5 == v9 then goto L4e3212;
  #L4e31d4.  if v5 == v8 then goto L4e31da;
  #L4e31d8.  goto L4e3250;
  #L4e31da.  v5:= v19 + 1;
  #L4e31de.  if v5 > v4 then goto L4e3250;
  #L4e31e2.  v10:= v0.`x5.f$c.c` @type ^`byte`[] @kind object;
  #L4e31e6.  v11:= v10[v7] @kind byte;
  #L4e31ea.  v11:= v11 ^& 255;
  #L4e31ee.  v11:= v11 ^< 16;
  #L4e31f2.  v10:= v10[v9] @kind byte;
  #L4e31f6.  v10:= v10 ^& 255;
  #L4e31fa.  v10:= v10 ^< 8;
  #L4e31fe.  v10:= v10 ^| v11 @kind int;
  #L4e3200.  v11:= v18[v19] @kind byte;
  #L4e3204.  v11:= v11 ^& 255;
  #L4e3208.  v10:= v10 ^| v11 @kind int;
  #L4e320a.  v0.`x5.f$c.d` @type ^`int` := v7;
  #L4e320e.  v11:= v5;
  #L4e3210.  goto L4e3256;
  #L4e3212.  v5:= v19 + 2;
  #L4e3216.  if v5 > v4 then goto L4e3250;
  #L4e321a.  v5:= v0.`x5.f$c.c` @type ^`byte`[] @kind object;
  #L4e321e.  v5:= v5[v7] @kind byte;
  #L4e3222.  v5:= v5 ^& 255;
  #L4e3226.  v5:= v5 ^< 16;
  #L4e322a.  v10:= v19 + 1;
  #L4e322e.  v11:= v18[v19] @kind byte;
  #L4e3232.  v11:= v11 ^& 255;
  #L4e3236.  v11:= v11 ^< 8;
  #L4e323a.  v5:= v5 ^| v11 @kind int;
  #L4e323c.  v11:= v10 + 1;
  #L4e3240.  v10:= v18[v10] @kind byte;
  #L4e3244.  v10:= v10 ^& 255;
  #L4e3248.  v10:= v10 ^| v5 @kind int;
  #L4e324a.  v0.`x5.f$c.d` @type ^`int` := v7;
  #L4e324e.  goto L4e3256;
  #L4e3250.  v11:= v19;
  #L4e3254.  v10:= -1I;
  #L4e3256.  v12:= 4I;
  #L4e3258.  v13:= 13I;
  #L4e325c.  v14:= 10I;
  #L4e3260.  if v10 == v6 then goto L4e32ce;
  #L4e3264.  v6:= v10 ^> 18;
  #L4e3268.  v6:= v6 ^& 63;
  #L4e326c.  v6:= v1[v6] @kind byte;
  #L4e3270.  v2[v7]:= v6 @kind byte;
  #L4e3274.  v6:= v10 ^> 12;
  #L4e3278.  v6:= v6 ^& 63;
  #L4e327c.  v6:= v1[v6] @kind byte;
  #L4e3280.  v2[v9]:= v6 @kind byte;
  #L4e3284.  v6:= v10 ^> 6;
  #L4e3288.  v6:= v6 ^& 63;
  #L4e328c.  v6:= v1[v6] @kind byte;
  #L4e3290.  v2[v8]:= v6 @kind byte;
  #L4e3294.  v6:= v10 ^& 63;
  #L4e3298.  v6:= v1[v6] @kind byte;
  #L4e329c.  v10:= 3I;
  #L4e329e.  v2[v10]:= v6 @kind byte;
  #L4e32a2.  v3:= v3 + -1;
  #L4e32a6.  if v3 != 0 then goto L4e32ca;
  #L4e32aa.  v3:= v0.`x5.f$c.h` @type ^`boolean` @kind boolean;
  #L4e32ae.  if v3 == 0 then goto L4e32ba;
  #L4e32b2.  v3:= 5I;
  #L4e32b4.  v2[v12]:= v13 @kind byte;
  #L4e32b8.  goto L4e32bc;
  #L4e32ba.  v3:= 4I;
  #L4e32bc.  v6:= v3 + 1;
  #L4e32c0.  v2[v3]:= v14 @kind byte;
  #L4e32c4.  v3:= 19I;
  #L4e32c8.  goto L4e32d0;
  #L4e32ca.  v6:= 4I;
  #L4e32cc.  goto L4e32d0;
  #L4e32ce.  v6:= 0I;
  #L4e32d0.  v10:= v11 + 3;
  #L4e32d4.  if v10 > v4 then goto L4e337c;
  #L4e32d8.  v15:= v18[v11] @kind byte;
  #L4e32dc.  v15:= v15 ^& 255;
  #L4e32e0.  v15:= v15 ^< 16;
  #L4e32e4.  v16:= v11 + 1;
  #L4e32e8.  v5:= v18[v16] @kind byte;
  #L4e32ec.  v5:= v5 ^& 255;
  #L4e32f0.  v5:= v5 ^< 8;
  #L4e32f4.  v5:= v5 ^| v15 @kind int;
  #L4e32f6.  v11:= v11 + 2;
  #L4e32fa.  v11:= v18[v11] @kind byte;
  #L4e32fe.  v11:= v11 ^& 255;
  #L4e3302.  v5:= v5 ^| v11 @kind int;
  #L4e3304.  v11:= v5 ^> 18;
  #L4e3308.  v11:= v11 ^& 63;
  #L4e330c.  v11:= v1[v11] @kind byte;
  #L4e3310.  v2[v6]:= v11 @kind byte;
  #L4e3314.  v11:= v6 + 1;
  #L4e3318.  v15:= v5 ^> 12;
  #L4e331c.  v15:= v15 ^& 63;
  #L4e3320.  v15:= v1[v15] @kind byte;
  #L4e3324.  v2[v11]:= v15 @kind byte;
  #L4e3328.  v11:= v6 + 2;
  #L4e332c.  v15:= v5 ^> 6;
  #L4e3330.  v15:= v15 ^& 63;
  #L4e3334.  v15:= v1[v15] @kind byte;
  #L4e3338.  v2[v11]:= v15 @kind byte;
  #L4e333c.  v11:= v6 + 3;
  #L4e3340.  v5:= v5 ^& 63;
  #L4e3344.  v5:= v1[v5] @kind byte;
  #L4e3348.  v2[v11]:= v5 @kind byte;
  #L4e334c.  v6:= v6 + 4;
  #L4e3350.  v3:= v3 + -1;
  #L4e3354.  if v3 != 0 then goto L4e3378;
  #L4e3358.  v3:= v0.`x5.f$c.h` @type ^`boolean` @kind boolean;
  #L4e335c.  if v3 == 0 then goto L4e336a;
  #L4e3360.  v3:= v6 + 1;
  #L4e3364.  v2[v6]:= v13 @kind byte;
  #L4e3368.  v6:= v3;
  #L4e336a.  v3:= v6 + 1;
  #L4e336e.  v2[v6]:= v14 @kind byte;
  #L4e3372.  v6:= v3;
  #L4e3374.  v11:= v10;
  #L4e3376.  goto L4e32c4;
  #L4e3378.  v11:= v10;
  #L4e337a.  goto L4e32d0;
  #L4e337c.  if v21 == 0 then goto L4e350e;
  #L4e3380.  v5:= v0.`x5.f$c.d` @type ^`int`;
  #L4e3384.  v10:= v11 - v5 @kind int;
  #L4e3388.  v15:= v4 + -1;
  #L4e338c.  v16:= 61I;
  #L4e3390.  if v10 != v15 then goto L4e3418;
  #L4e3394.  if v5 <= 0 then goto L4e33a4;
  #L4e3398.  v4:= v0.`x5.f$c.c` @type ^`byte`[] @kind object;
  #L4e339c.  v4:= v4[v7] @kind byte;
  #L4e33a0.  v7:= 1I;
  #L4e33a2.  goto L4e33a8;
  #L4e33a4.  v4:= v18[v11] @kind byte;
  #L4e33a8.  v4:= v4 ^& 255;
  #L4e33ac.  v4:= v4 ^< v12 @kind int;
  #L4e33ae.  v5:= v5 - v7 @kind int;
  #L4e33b0.  v0.`x5.f$c.d` @type ^`int` := v5;
  #L4e33b4.  v5:= v6 + 1;
  #L4e33b8.  v7:= v4 ^> 6;
  #L4e33bc.  v7:= v7 ^& 63;
  #L4e33c0.  v7:= v1[v7] @kind byte;
  #L4e33c4.  v2[v6]:= v7 @kind byte;
  #L4e33c8.  v6:= v5 + 1;
  #L4e33cc.  v4:= v4 ^& 63;
  #L4e33d0.  v1:= v1[v4] @kind byte;
  #L4e33d4.  v2[v5]:= v1 @kind byte;
  #L4e33d8.  v1:= v0.`x5.f$c.f` @type ^`boolean` @kind boolean;
  #L4e33dc.  if v1 == 0 then goto L4e33f0;
  #L4e33e0.  v1:= v6 + 1;
  #L4e33e4.  v2[v6]:= v16 @kind byte;
  #L4e33e8.  v6:= v1 + 1;
  #L4e33ec.  v2[v1]:= v16 @kind byte;
  #L4e33f0.  v1:= v0.`x5.f$c.g` @type ^`boolean` @kind boolean;
  #L4e33f4.  if v1 == 0 then goto L4e3560;
  #L4e33f8.  v1:= v0.`x5.f$c.h` @type ^`boolean` @kind boolean;
  #L4e33fc.  if v1 == 0 then goto L4e340a;
  #L4e3400.  v1:= v6 + 1;
  #L4e3404.  v2[v6]:= v13 @kind byte;
  #L4e3408.  v6:= v1;
  #L4e340a.  v1:= v6 + 1;
  #L4e340e.  v2[v6]:= v14 @kind byte;
  #L4e3412.  v6:= v1;
  #L4e3414.  goto L4e3560;
  #L4e3418.  v10:= v11 - v5 @kind int;
  #L4e341c.  v4:= v4 - v8 @kind int;
  #L4e341e.  if v10 != v4 then goto L4e34de;
  #L4e3422.  if v5 <= v9 then goto L4e3432;
  #L4e3426.  v4:= v0.`x5.f$c.c` @type ^`byte`[] @kind object;
  #L4e342a.  v4:= v4[v7] @kind byte;
  #L4e342e.  v7:= 1I;
  #L4e3430.  goto L4e343e;
  #L4e3432.  v4:= v11 + 1;
  #L4e3436.  v10:= v18[v11] @kind byte;
  #L4e343a.  v11:= v4;
  #L4e343c.  v4:= v10;
  #L4e343e.  v4:= v4 ^& 255;
  #L4e3442.  v4:= v4 ^< v14 @kind int;
  #L4e3444.  if v5 <= 0 then goto L4e3456;
  #L4e3448.  v10:= v0.`x5.f$c.c` @type ^`byte`[] @kind object;
  #L4e344c.  v11:= v7 + 1;
  #L4e3450.  v7:= v10[v7] @kind byte;
  #L4e3454.  goto L4e345e;
  #L4e3456.  v10:= v18[v11] @kind byte;
  #L4e345a.  v11:= v7;
  #L4e345c.  v7:= v10;
  #L4e345e.  v7:= v7 ^& 255;
  #L4e3462.  v7:= v7 ^< v8 @kind int;
  #L4e3464.  v4:= v4 ^| v7 @kind int;
  #L4e3466.  v5:= v5 - v11 @kind int;
  #L4e3468.  v0.`x5.f$c.d` @type ^`int` := v5;
  #L4e346c.  v5:= v6 + 1;
  #L4e3470.  v7:= v4 ^> 12;
  #L4e3474.  v7:= v7 ^& 63;
  #L4e3478.  v7:= v1[v7] @kind byte;
  #L4e347c.  v2[v6]:= v7 @kind byte;
  #L4e3480.  v6:= v5 + 1;
  #L4e3484.  v7:= v4 ^> 6;
  #L4e3488.  v7:= v7 ^& 63;
  #L4e348c.  v7:= v1[v7] @kind byte;
  #L4e3490.  v2[v5]:= v7 @kind byte;
  #L4e3494.  v5:= v6 + 1;
  #L4e3498.  v4:= v4 ^& 63;
  #L4e349c.  v1:= v1[v4] @kind byte;
  #L4e34a0.  v2[v6]:= v1 @kind byte;
  #L4e34a4.  v1:= v0.`x5.f$c.f` @type ^`boolean` @kind boolean;
  #L4e34a8.  if v1 == 0 then goto L4e34b6;
  #L4e34ac.  v1:= v5 + 1;
  #L4e34b0.  v2[v5]:= v16 @kind byte;
  #L4e34b4.  v5:= v1;
  #L4e34b6.  v1:= v0.`x5.f$c.g` @type ^`boolean` @kind boolean;
  #L4e34ba.  if v1 == 0 then goto L4e34da;
  #L4e34be.  v1:= v0.`x5.f$c.h` @type ^`boolean` @kind boolean;
  #L4e34c2.  if v1 == 0 then goto L4e34d0;
  #L4e34c6.  v1:= v5 + 1;
  #L4e34ca.  v2[v5]:= v13 @kind byte;
  #L4e34ce.  v5:= v1;
  #L4e34d0.  v1:= v5 + 1;
  #L4e34d4.  v2[v5]:= v14 @kind byte;
  #L4e34d8.  v5:= v1;
  #L4e34da.  v6:= v5;
  #L4e34dc.  goto L4e3560;
  #L4e34de.  v1:= v0.`x5.f$c.g` @type ^`boolean` @kind boolean;
  #L4e34e2.  if v1 == 0 then goto L4e3560;
  #L4e34e6.  if v6 <= 0 then goto L4e3560;
  #L4e34ea.  v1:= 19I;
  #L4e34ee.  if v3 == v1 then goto L4e3560;
  #L4e34f2.  v1:= v0.`x5.f$c.h` @type ^`boolean` @kind boolean;
  #L4e34f6.  if v1 == 0 then goto L4e3504;
  #L4e34fa.  v1:= v6 + 1;
  #L4e34fe.  v2[v6]:= v13 @kind byte;
  #L4e3502.  v6:= v1;
  #L4e3504.  v1:= v6 + 1;
  #L4e3508.  v2[v6]:= v14 @kind byte;
  #L4e350c.  goto L4e3412;
  #L4e350e.  v1:= v4 + -1;
  #L4e3512.  if v11 != v1 then goto L4e3530;
  #L4e3516.  v1:= v0.`x5.f$c.c` @type ^`byte`[] @kind object;
  #L4e351a.  v2:= v0.`x5.f$c.d` @type ^`int`;
  #L4e351e.  v4:= v2 + 1;
  #L4e3522.  v0.`x5.f$c.d` @type ^`int` := v4;
  #L4e3526.  v4:= v18[v11] @kind byte;
  #L4e352a.  v1[v2]:= v4 @kind byte;
  #L4e352e.  goto L4e3560;
  #L4e3530.  v4:= v4 - v8 @kind int;
  #L4e3532.  if v11 != v4 then goto L4e3560;
  #L4e3536.  v1:= v0.`x5.f$c.c` @type ^`byte`[] @kind object;
  #L4e353a.  v2:= v0.`x5.f$c.d` @type ^`int`;
  #L4e353e.  v4:= v2 + 1;
  #L4e3542.  v0.`x5.f$c.d` @type ^`int` := v4;
  #L4e3546.  v5:= v18[v11] @kind byte;
  #L4e354a.  v1[v2]:= v5 @kind byte;
  #L4e354e.  v2:= v4 + 1;
  #L4e3552.  v0.`x5.f$c.d` @type ^`int` := v2;
  #L4e3556.  v11:= v11 + v9 @kind int;
  #L4e3558.  v2:= v18[v11] @kind byte;
  #L4e355c.  v1[v4]:= v2 @kind byte;
  #L4e3560.  v0.`x5.f$a.b` @type ^`int` := v6;
  #L4e3564.  v0.`x5.f$c.e` @type ^`int` := v3;
  #L4e3568.  return v9;
}
