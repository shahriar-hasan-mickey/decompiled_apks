record `x5.m` @kind class @AccessFlag PUBLIC_FINAL {
  `x5.n` `x5.m.a` @AccessFlag PRIVATE;
  `java.util.List` `x5.m.b` @AccessFlag PRIVATE;
  `boolean` `x5.m.c` @AccessFlag PRIVATE;
}
global `java.util.logging.Logger` `@@x5.m.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@x5.m.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `x5.m` `@@x5.m.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `x5.m` `@@x5.m.g` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx5/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4e45a4.  v0:= constclass @type ^`x5.m` @kind object;
  #L4e45a8.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L4e45ae.  v0:= temp @kind object;
  #L4e45b0.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L4e45b6.  v0:= temp @kind object;
  #L4e45b8.  `@@x5.m.d` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L4e45bc.  call temp:= `b`() @signature `Lx5/v;.b:()Z` @kind static;
  #L4e45c2.  v0:= temp;
  #L4e45c4.  if v0 == 0 then goto L4e45e2;
  #L4e45c8.  v0:= "GmsCore_OpenSSL" @kind object;
  #L4e45cc.  v1:= "AndroidOpenSSL" @kind object;
  #L4e45d0.  temp:= new `java.lang.String`[v0, v1];
  #L4e45d6.  v0:= temp @kind object;
  #L4e45d8.  call temp:= `b`(v0) @signature `Lx5/m;.b:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L4e45de.  v0:= temp @kind object;
  #L4e45e0.  goto L4e45ec;
  #L4e45e2.  v0:= new `java.util.ArrayList`;
  #L4e45e6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4e45ec.  `@@x5.m.e` @type ^`java.util.List` := v0 @kind object;
  #L4e45f0.  v0:= new `x5.m`;
  #L4e45f4.  v1:= new `x5.n$a`;
  #L4e45f8.  call `<init>`(v1) @signature `Lx5/n$a;.<init>:()V` @kind direct;
  #L4e45fe.  call `<init>`(v0, v1) @signature `Lx5/m;.<init>:(Lx5/n;)V` @kind direct;
  #L4e4604.  `@@x5.m.f` @type ^`x5.m` := v0 @kind object;
  #L4e4608.  v0:= new `x5.m`;
  #L4e460c.  v1:= new `x5.n$e`;
  #L4e4610.  call `<init>`(v1) @signature `Lx5/n$e;.<init>:()V` @kind direct;
  #L4e4616.  call `<init>`(v0, v1) @signature `Lx5/m;.<init>:(Lx5/n;)V` @kind direct;
  #L4e461c.  `@@x5.m.g` @type ^`x5.m` := v0 @kind object;
  #L4e4620.  v0:= new `x5.m`;
  #L4e4624.  v1:= new `x5.n$g`;
  #L4e4628.  call `<init>`(v1) @signature `Lx5/n$g;.<init>:()V` @kind direct;
  #L4e462e.  call `<init>`(v0, v1) @signature `Lx5/m;.<init>:(Lx5/n;)V` @kind direct;
  #L4e4634.  v0:= new `x5.m`;
  #L4e4638.  v1:= new `x5.n$f`;
  #L4e463c.  call `<init>`(v1) @signature `Lx5/n$f;.<init>:()V` @kind direct;
  #L4e4642.  call `<init>`(v0, v1) @signature `Lx5/m;.<init>:(Lx5/n;)V` @kind direct;
  #L4e4648.  v0:= new `x5.m`;
  #L4e464c.  v1:= new `x5.n$b`;
  #L4e4650.  call `<init>`(v1) @signature `Lx5/n$b;.<init>:()V` @kind direct;
  #L4e4656.  call `<init>`(v0, v1) @signature `Lx5/m;.<init>:(Lx5/n;)V` @kind direct;
  #L4e465c.  v0:= new `x5.m`;
  #L4e4660.  v1:= new `x5.n$d`;
  #L4e4664.  call `<init>`(v1) @signature `Lx5/n$d;.<init>:()V` @kind direct;
  #L4e466a.  call `<init>`(v0, v1) @signature `Lx5/m;.<init>:(Lx5/n;)V` @kind direct;
  #L4e4670.  v0:= new `x5.m`;
  #L4e4674.  v1:= new `x5.n$c`;
  #L4e4678.  call `<init>`(v1) @signature `Lx5/n$c;.<init>:()V` @kind direct;
  #L4e467e.  call `<init>`(v0, v1) @signature `Lx5/m;.<init>:(Lx5/n;)V` @kind direct;
  #L4e4684.  return @kind void;
}
procedure `void` `<init>`(`x5.m` v0 @kind this, `x5.n` v1 @kind object) @signature `Lx5/m;.<init>:(Lx5/n;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e4698.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e469e.  v0.`x5.m.a` @type ^`x5.n` := v1 @kind object;
  #L4e46a2.  v1:= `@@x5.m.e` @type ^`java.util.List` @kind object;
  #L4e46a6.  v0.`x5.m.b` @type ^`java.util.List` := v1 @kind object;
  #L4e46aa.  v1:= 1I;
  #L4e46ac.  v0.`x5.m.c` @type ^`boolean` := v1 @kind boolean;
  #L4e46b0.  return @kind void;
}
procedure `java.util.List` `b`(`java.lang.String`[] v7 @kind object) @signature `Lx5/m;.b:([Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4e4540.  v0:= new `java.util.ArrayList`;
  #L4e4544.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4e454a.  v1:= length @variable v7;
  #L4e454c.  v2:= 0I;
  #L4e454e.  v3:= 0I;
  #L4e4550.  if v3 >= v1 then goto L4e4592;
  #L4e4554.  v4:= v7[v3] @kind object;
  #L4e4558.  call temp:= `getProvider`(v4) @signature `Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;` @kind static;
  #L4e455e.  v5:= temp @kind object;
  #L4e4560.  if v5 == 0 then goto L4e456c;
  #L4e4564.  call temp:= `add`(v0, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4e456a.  goto L4e458c;
  #L4e456c.  v5:= `@@x5.m.d` @type ^`java.util.logging.Logger` @kind object;
  #L4e4570.  v6:= 1I;
  #L4e4572.  v6:= new `java.lang.Object`[v6];
  #L4e4576.  v6[v2]:= v4 @kind object;
  #L4e457a.  v4:= "Provider %s not available" @kind object;
  #L4e457e.  call temp:= `format`(v4, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4e4584.  v4:= temp @kind object;
  #L4e4586.  call `info`(v5, v4) @signature `Ljava/util/logging/Logger;.info:(Ljava/lang/String;)V` @kind virtual;
  #L4e458c.  v3:= v3 + 1;
  #L4e4590.  goto L4e4550;
  #L4e4592.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`x5.m` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lx5/m;.a:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4e44b8.  v0:= v5.`x5.m.b` @type ^`java.util.List` @kind object;
  #L4e44bc.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4e44c2.  v0:= temp @kind object;
  #L4e44c4.  v1:= 0I;
  #L4e44c6.  v2:= v1 @kind object;
  #L4e44c8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4e44ce.  v3:= temp;
  #L4e44d0.  if v3 == 0 then goto L4e44f8;
  #L4e44d4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4e44da.  v3:= temp @kind object;
  #L4e44dc.  v3:= (`java.security.Provider`) v3 @kind object;
  #L4e44e0.  v4:= v5.`x5.m.a` @type ^`x5.n` @kind object;
  #L4e44e4.  call temp:= `a`(v4, v6, v3) @signature `Lx5/n;.a:(Ljava/lang/String;Ljava/security/Provider;)Ljava/lang/Object;` @kind interface;
  #L4e44ea.  v6:= temp @kind object;
  #L4e44ec.  return v6 @kind object;
  #L4e44ee.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L4e44f0.  if v2 != 0 then goto L4e44c8;
  #L4e44f4.  v2:= v3 @kind object;
  #L4e44f6.  goto L4e44c8;
  #L4e44f8.  v0:= v5.`x5.m.c` @type ^`boolean` @kind boolean;
  #L4e44fc.  if v0 == 0 then goto L4e450e;
  #L4e4500.  v0:= v5.`x5.m.a` @type ^`x5.n` @kind object;
  #L4e4504.  call temp:= `a`(v0, v6, v1) @signature `Lx5/n;.a:(Ljava/lang/String;Ljava/security/Provider;)Ljava/lang/Object;` @kind interface;
  #L4e450a.  v6:= temp @kind object;
  #L4e450c.  return v6 @kind object;
  #L4e450e.  v6:= new `java.security.GeneralSecurityException`;
  #L4e4512.  v0:= "No good Provider found." @kind object;
  #L4e4516.  call `<init>`(v6, v0, v2) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L4e451c.  throw v6;
  catch `java.lang.Exception` @[L4e44e0..L4e44ec] goto L4e44ee;
}
