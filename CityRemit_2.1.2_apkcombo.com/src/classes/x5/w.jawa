record `x5.w` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<clinit>`() @signature `Lx5/w;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4e55e4.  v0:= 4I;
  #L4e55e6.  v1:= new `java.lang.Object`[v0];
  #L4e55ea.  v2:= 0I;
  #L4e55ec.  v3:= "([0-9a-zA-Z\\-\\.\\_~])+" @kind object;
  #L4e55f0.  v1[v2]:= v3 @kind object;
  #L4e55f4.  v4:= 1I;
  #L4e55f6.  v1[v4]:= v3 @kind object;
  #L4e55fa.  v5:= 2I;
  #L4e55fc.  v1[v5]:= v3 @kind object;
  #L4e5600.  v6:= 3I;
  #L4e5602.  v1[v6]:= v3 @kind object;
  #L4e5606.  v7:= "^projects/%s/locations/%s/keyRings/%s/cryptoKeys/%s$" @kind object;
  #L4e560a.  call temp:= `format`(v7, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4e5610.  v1:= temp @kind object;
  #L4e5612.  call temp:= `compile`(v1, v5) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;` @kind static;
  #L4e5618.  v1:= 5I;
  #L4e561a.  v1:= new `java.lang.Object`[v1];
  #L4e561e.  v1[v2]:= v3 @kind object;
  #L4e5622.  v1[v4]:= v3 @kind object;
  #L4e5626.  v1[v5]:= v3 @kind object;
  #L4e562a.  v1[v6]:= v3 @kind object;
  #L4e562e.  v1[v0]:= v3 @kind object;
  #L4e5632.  v0:= "^projects/%s/locations/%s/keyRings/%s/cryptoKeys/%s/cryptoKeyVersions/%s$" @kind object;
  #L4e5636.  call temp:= `format`(v0, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4e563c.  v0:= temp @kind object;
  #L4e563e.  call temp:= `compile`(v0, v5) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;` @kind static;
  #L4e5644.  return @kind void;
}
procedure `void` `a`(`int` v3 ) @signature `Lx5/w;.a:(I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4e5658.  v0:= 16I;
  #L4e565c.  if v3 == v0 then goto L4e569a;
  #L4e5660.  v0:= 32I;
  #L4e5664.  if v3 != v0 then goto L4e566a;
  #L4e5668.  goto L4e569a;
  #L4e566a.  v0:= new `java.security.InvalidAlgorithmParameterException`;
  #L4e566e.  v1:= 1I;
  #L4e5670.  v1:= new `java.lang.Object`[v1];
  #L4e5674.  v2:= 0I;
  #L4e5676.  v3:= v3 * 8;
  #L4e567a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4e5680.  v3:= temp @kind object;
  #L4e5682.  v1[v2]:= v3 @kind object;
  #L4e5686.  v3:= "invalid key size %d; only 128-bit and 256-bit AES keys are supported" @kind object;
  #L4e568a.  call temp:= `format`(v3, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4e5690.  v3:= temp @kind object;
  #L4e5692.  call `<init>`(v0, v3) @signature `Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e5698.  throw v0;
  #L4e569a.  return @kind void;
}
procedure `java.lang.String` `b`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lx5/w;.b:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4e5584.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L4e5588.  call temp:= `toLowerCase`(v3, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4e558e.  v0:= temp @kind object;
  #L4e5590.  call temp:= `startsWith`(v0, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4e5596.  v0:= temp;
  #L4e5598.  if v0 == 0 then goto L4e55ae;
  #L4e559c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4e55a2.  v2:= temp;
  #L4e55a4.  call temp:= `substring`(v3, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L4e55aa.  v2:= temp @kind object;
  #L4e55ac.  return v2 @kind object;
  #L4e55ae.  v3:= new `java.lang.IllegalArgumentException`;
  #L4e55b2.  v0:= 1I;
  #L4e55b4.  v0:= new `java.lang.Object`[v0];
  #L4e55b8.  v1:= 0I;
  #L4e55ba.  v0[v1]:= v2 @kind object;
  #L4e55be.  v2:= "key URI must start with %s" @kind object;
  #L4e55c2.  call temp:= `format`(v2, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4e55c8.  v2:= temp @kind object;
  #L4e55ca.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e55d0.  throw v3;
}
procedure `void` `c`(`int` v3 , `int` v4 ) @signature `Lx5/w;.c:(II)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4e56ac.  if v3 < 0 then goto L4e56b6;
  #L4e56b0.  if v3 > v4 then goto L4e56b6;
  #L4e56b4.  return @kind void;
  #L4e56b6.  v0:= new `java.security.GeneralSecurityException`;
  #L4e56ba.  v1:= 2I;
  #L4e56bc.  v1:= new `java.lang.Object`[v1];
  #L4e56c0.  v2:= 0I;
  #L4e56c2.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4e56c8.  v3:= temp @kind object;
  #L4e56ca.  v1[v2]:= v3 @kind object;
  #L4e56ce.  v3:= 1I;
  #L4e56d0.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4e56d6.  v4:= temp @kind object;
  #L4e56d8.  v1[v3]:= v4 @kind object;
  #L4e56dc.  v3:= "key has version %d; only keys with version in range [0..%d] are supported" @kind object;
  #L4e56e0.  call temp:= `format`(v3, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4e56e6.  v3:= temp @kind object;
  #L4e56e8.  call `<init>`(v0, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e56ee.  throw v0;
}
