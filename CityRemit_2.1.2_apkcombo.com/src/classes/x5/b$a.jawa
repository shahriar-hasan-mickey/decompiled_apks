record `x5.b$a` @kind class @AccessFlag  extends `java.lang.ThreadLocal` @kind class {
}
procedure `void` `<init>`(`x5.b$a` v0 @kind this) @signature `Lx5/b$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4e1a74.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L4e1a7a.  return @kind void;
}
procedure `javax.crypto.Cipher` `a`(`x5.b$a` v2 @kind this) @signature `Lx5/b$a;.a:()Ljavax/crypto/Cipher;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4e1a30.  v0:= `@@x5.m.f` @type ^`x5.m` @kind object;
  #L4e1a34.  v1:= "AES/ECB/NOPADDING" @kind object;
  #L4e1a38.  call temp:= `a`(v0, v1) @signature `Lx5/m;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L4e1a3e.  v0:= temp @kind object;
  #L4e1a40.  v0:= (`javax.crypto.Cipher`) v0 @kind object;
  #L4e1a44.  return v0 @kind object;
  #L4e1a46.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L4e1a48.  v1:= new `java.lang.IllegalStateException`;
  #L4e1a4c.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L4e1a52.  throw v1;
  catch `java.security.GeneralSecurityException` @[L4e1a30..L4e1a44] goto L4e1a46;
}
procedure `java.lang.Object` `initialValue`(`x5.b$a` v1 @kind this) @signature `Lx5/b$a;.initialValue:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L4e1a14.  call temp:= `a`(v1) @signature `Lx5/b$a;.a:()Ljavax/crypto/Cipher;` @kind virtual;
  #L4e1a1a.  v0:= temp @kind object;
  #L4e1a1c.  return v0 @kind object;
}
