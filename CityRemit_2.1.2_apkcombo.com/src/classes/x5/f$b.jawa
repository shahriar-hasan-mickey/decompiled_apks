record `x5.f$b` @kind class @AccessFlag  extends `x5.f$a` @kind class {
  `int` `x5.f$b.c` @AccessFlag PRIVATE;
  `int` `x5.f$b.d` @AccessFlag PRIVATE;
  `int`[] `x5.f$b.e` @AccessFlag PRIVATE_FINAL;
}
global `int`[] `@@x5.f$b.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@x5.f$b.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx5/f$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4e2930.  v0:= 256I;
  #L4e2934.  v1:= new `int`[v0];
  #L4e2938.  goto L4e2954;
  #L4e293e.  `@@x5.f$b.f` @type ^`int`[] := v1 @kind object;
  #L4e2942.  v0:= new `int`[v0];
  #L4e2946.  goto L4e2d5c;
  #L4e294c.  `@@x5.f$b.g` @type ^`int`[] := v0 @kind object;
  #L4e2950.  return @kind void;
  #L4e2952.  
  #L4e2954.  v1:= (-1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, 62I, -1I, -1I, -1I, 63I, 52I, 53I, 54I, 55I, 56I, 57I, 58I, 59I, 60I, 61I, -1I, -1I, -1I, -2I, -1I, -1I, -1I, 0I, 1I, 2I, 3I, 4I, 5I, 6I, 7I, 8I, 9I, 10I, 11I, 12I, 13I, 14I, 15I, 16I, 17I, 18I, 19I, 20I, 21I, 22I, 23I, 24I, 25I, -1I, -1I, -1I, -1I, -1I, -1I, 26I, 27I, 28I, 29I, 30I, 31I, 32I, 33I, 34I, 35I, 36I, 37I, 38I, 39I, 40I, 41I, 42I, 43I, 44I, 45I, 46I, 47I, 48I, 49I, 50I, 51I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I) @kind object;
  #L4e2d5b.  goto L4e293e;
  #L4e2d5c.  v0:= (-1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, 62I, -1I, -1I, 52I, 53I, 54I, 55I, 56I, 57I, 58I, 59I, 60I, 61I, -1I, -1I, -1I, -2I, -1I, -1I, -1I, 0I, 1I, 2I, 3I, 4I, 5I, 6I, 7I, 8I, 9I, 10I, 11I, 12I, 13I, 14I, 15I, 16I, 17I, 18I, 19I, 20I, 21I, 22I, 23I, 24I, 25I, -1I, -1I, -1I, -1I, 63I, -1I, 26I, 27I, 28I, 29I, 30I, 31I, 32I, 33I, 34I, 35I, 36I, 37I, 38I, 39I, 40I, 41I, 42I, 43I, 44I, 45I, 46I, 47I, 48I, 49I, 50I, 51I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I, -1I) @kind object;
  #L4e3163.  goto L4e294c;
}
procedure `void` `<init>`(`x5.f$b` v0 @kind this, `int` v1 , `byte`[] v2 @kind object) @signature `Lx5/f$b;.<init>:(I[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4e3174.  call `<init>`(v0) @signature `Lx5/f$a;.<init>:()V` @kind direct;
  #L4e317a.  v0.`x5.f$a.a` @type ^`byte`[] := v2 @kind object;
  #L4e317e.  v1:= v1 ^& 8;
  #L4e3182.  if v1 != 0 then goto L4e318c;
  #L4e3186.  v1:= `@@x5.f$b.f` @type ^`int`[] @kind object;
  #L4e318a.  goto L4e3190;
  #L4e318c.  v1:= `@@x5.f$b.g` @type ^`int`[] @kind object;
  #L4e3190.  v0.`x5.f$b.e` @type ^`int`[] := v1 @kind object;
  #L4e3194.  v1:= 0I;
  #L4e3196.  v0.`x5.f$b.c` @type ^`int` := v1;
  #L4e319a.  v0.`x5.f$b.d` @type ^`int` := v1;
  #L4e319e.  return @kind void;
}
procedure `boolean` `a`(`x5.f$b` v16 @kind this, `byte`[] v17 @kind object, `int` v18 , `int` v19 , `boolean` v20 ) @signature `Lx5/f$b;.a:([BIIZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L4e26e8.  v0:= v16 @kind object;
  #L4e26ec.  v1:= v0.`x5.f$b.c` @type ^`int`;
  #L4e26f0.  v2:= 0I;
  #L4e26f2.  v3:= 6I;
  #L4e26f4.  if v1 != v3 then goto L4e26fa;
  #L4e26f8.  return v2;
  #L4e26fa.  v4:= v19 + v18 @kind int;
  #L4e26fe.  v5:= v0.`x5.f$b.d` @type ^`int`;
  #L4e2702.  v6:= v0.`x5.f$a.a` @type ^`byte`[] @kind object;
  #L4e2706.  v7:= v0.`x5.f$b.e` @type ^`int`[] @kind object;
  #L4e270a.  v8:= v5;
  #L4e270c.  v9:= 0I;
  #L4e270e.  v5:= v1;
  #L4e2710.  v1:= v18;
  #L4e2714.  v10:= 3I;
  #L4e2716.  v11:= 4I;
  #L4e2718.  v12:= 2I;
  #L4e271a.  v13:= 1I;
  #L4e271c.  if v1 >= v4 then goto L4e28c6;
  #L4e2720.  if v5 != 0 then goto L4e27ae;
  #L4e2724.  v14:= v1 + 4;
  #L4e2728.  if v14 > v4 then goto L4e27a6;
  #L4e272c.  v8:= v17[v1] @kind byte;
  #L4e2730.  v8:= v8 ^& 255;
  #L4e2734.  v8:= v7[v8];
  #L4e2738.  v8:= v8 ^< 18;
  #L4e273c.  v15:= v1 + 1;
  #L4e2740.  v15:= v17[v15] @kind byte;
  #L4e2744.  v15:= v15 ^& 255;
  #L4e2748.  v15:= v7[v15];
  #L4e274c.  v15:= v15 ^< 12;
  #L4e2750.  v8:= v8 ^| v15 @kind int;
  #L4e2752.  v15:= v1 + 2;
  #L4e2756.  v15:= v17[v15] @kind byte;
  #L4e275a.  v15:= v15 ^& 255;
  #L4e275e.  v15:= v7[v15];
  #L4e2762.  v15:= v15 ^< v3 @kind int;
  #L4e2764.  v8:= v8 ^| v15 @kind int;
  #L4e2766.  v15:= v1 + 3;
  #L4e276a.  v15:= v17[v15] @kind byte;
  #L4e276e.  v15:= v15 ^& 255;
  #L4e2772.  v15:= v7[v15];
  #L4e2776.  v8:= v8 ^| v15 @kind int;
  #L4e2778.  if v8 < 0 then goto L4e27a6;
  #L4e277c.  v1:= v9 + 2;
  #L4e2780.  v15:= (`byte`) v8 @kind i2b;
  #L4e2782.  v6[v1]:= v15 @kind byte;
  #L4e2786.  v1:= v9 + 1;
  #L4e278a.  v15:= v8 ^> 8;
  #L4e278e.  v15:= (`byte`) v15 @kind i2b;
  #L4e2790.  v6[v1]:= v15 @kind byte;
  #L4e2794.  v1:= v8 ^> 16;
  #L4e2798.  v1:= (`byte`) v1 @kind i2b;
  #L4e279a.  v6[v9]:= v1 @kind byte;
  #L4e279e.  v9:= v9 + 3;
  #L4e27a2.  v1:= v14;
  #L4e27a4.  goto L4e2724;
  #L4e27a6.  if v1 < v4 then goto L4e27ae;
  #L4e27aa.  goto L4e28c6;
  #L4e27ae.  v14:= v1 + 1;
  #L4e27b2.  v1:= v17[v1] @kind byte;
  #L4e27b6.  v1:= v1 ^& 255;
  #L4e27ba.  v1:= v7[v1];
  #L4e27be.  v15:= 5I;
  #L4e27c0.  v2:= -1I;
  #L4e27c2.  if v5 == 0 then goto L4e28a6;
  #L4e27c6.  if v5 == v13 then goto L4e288e;
  #L4e27ca.  v13:= -2I;
  #L4e27cc.  if v5 == v12 then goto L4e286a;
  #L4e27d0.  if v5 == v10 then goto L4e2804;
  #L4e27d4.  if v5 == v11 then goto L4e27ec;
  #L4e27d8.  if v5 == v15 then goto L4e27e0;
  #L4e27dc.  goto L4e28be;
  #L4e27e0.  if v1 == v2 then goto L4e28be;
  #L4e27e4.  v0.`x5.f$b.c` @type ^`int` := v3;
  #L4e27e8.  v10:= 0I;
  #L4e27ea.  return v10;
  #L4e27ec.  v10:= 0I;
  #L4e27ee.  if v1 != v13 then goto L4e27fa;
  #L4e27f2.  v5:= v5 + 1;
  #L4e27f6.  goto L4e28be;
  #L4e27fa.  if v1 == v2 then goto L4e28be;
  #L4e27fe.  v0.`x5.f$b.c` @type ^`int` := v3;
  #L4e2802.  return v10;
  #L4e2804.  if v1 < 0 then goto L4e283a;
  #L4e2808.  v2:= v8 ^< 6;
  #L4e280c.  v1:= v1 ^| v2 @kind int;
  #L4e280e.  v2:= v9 + 2;
  #L4e2812.  v5:= (`byte`) v1 @kind i2b;
  #L4e2814.  v6[v2]:= v5 @kind byte;
  #L4e2818.  v2:= v9 + 1;
  #L4e281c.  v5:= v1 ^> 8;
  #L4e2820.  v5:= (`byte`) v5 @kind i2b;
  #L4e2822.  v6[v2]:= v5 @kind byte;
  #L4e2826.  v2:= v1 ^> 16;
  #L4e282a.  v2:= (`byte`) v2 @kind i2b;
  #L4e282c.  v6[v9]:= v2 @kind byte;
  #L4e2830.  v9:= v9 + 3;
  #L4e2834.  v8:= v1;
  #L4e2836.  v5:= 0I;
  #L4e2838.  goto L4e28be;
  #L4e283a.  if v1 != v13 then goto L4e285e;
  #L4e283e.  v1:= v9 + 1;
  #L4e2842.  v2:= v8 ^> 2;
  #L4e2846.  v2:= (`byte`) v2 @kind i2b;
  #L4e2848.  v6[v1]:= v2 @kind byte;
  #L4e284c.  v1:= v8 ^> 10;
  #L4e2850.  v1:= (`byte`) v1 @kind i2b;
  #L4e2852.  v6[v9]:= v1 @kind byte;
  #L4e2856.  v9:= v9 + 2;
  #L4e285a.  v5:= 5I;
  #L4e285c.  goto L4e28be;
  #L4e285e.  if v1 == v2 then goto L4e28be;
  #L4e2862.  v0.`x5.f$b.c` @type ^`int` := v3;
  #L4e2866.  v1:= 0I;
  #L4e2868.  return v1;
  #L4e286a.  if v1 < 0 then goto L4e2870;
  #L4e286e.  goto L4e2894;
  #L4e2870.  if v1 != v13 then goto L4e2888;
  #L4e2874.  v1:= v9 + 1;
  #L4e2878.  v2:= v8 ^> 4;
  #L4e287c.  v2:= (`byte`) v2 @kind i2b;
  #L4e287e.  v6[v9]:= v2 @kind byte;
  #L4e2882.  v9:= v1;
  #L4e2884.  v5:= 4I;
  #L4e2886.  goto L4e28be;
  #L4e2888.  if v1 == v2 then goto L4e28be;
  #L4e288c.  goto L4e27e4;
  #L4e288e.  v10:= 0I;
  #L4e2890.  if v1 < 0 then goto L4e289c;
  #L4e2894.  v2:= v8 ^< 6;
  #L4e2898.  v1:= v1 ^| v2 @kind int;
  #L4e289a.  goto L4e28ac;
  #L4e289c.  if v1 == v2 then goto L4e28be;
  #L4e28a0.  v0.`x5.f$b.c` @type ^`int` := v3;
  #L4e28a4.  return v10;
  #L4e28a6.  v10:= 0I;
  #L4e28a8.  if v1 < 0 then goto L4e28b4;
  #L4e28ac.  v5:= v5 + 1;
  #L4e28b0.  v8:= v1;
  #L4e28b2.  goto L4e28be;
  #L4e28b4.  if v1 == v2 then goto L4e28be;
  #L4e28b8.  v0.`x5.f$b.c` @type ^`int` := v3;
  #L4e28bc.  return v10;
  #L4e28be.  v1:= v14;
  #L4e28c0.  v2:= 0I;
  #L4e28c2.  goto L4e2714;
  #L4e28c6.  if v20 != 0 then goto L4e28d8;
  #L4e28ca.  v0.`x5.f$b.c` @type ^`int` := v5;
  #L4e28ce.  v0.`x5.f$b.d` @type ^`int` := v8;
  #L4e28d2.  v0.`x5.f$a.b` @type ^`int` := v9;
  #L4e28d6.  return v13;
  #L4e28d8.  if v5 == v13 then goto L4e2862;
  #L4e28dc.  if v5 == v12 then goto L4e2908;
  #L4e28e0.  if v5 == v10 then goto L4e28ea;
  #L4e28e4.  if v5 == v11 then goto L4e2862;
  #L4e28e8.  goto L4e2918;
  #L4e28ea.  v1:= v9 + 1;
  #L4e28ee.  v2:= v8 ^> 10;
  #L4e28f2.  v2:= (`byte`) v2 @kind i2b;
  #L4e28f4.  v6[v9]:= v2 @kind byte;
  #L4e28f8.  v9:= v1 + 1;
  #L4e28fc.  v2:= v8 ^> 2;
  #L4e2900.  v2:= (`byte`) v2 @kind i2b;
  #L4e2902.  v6[v1]:= v2 @kind byte;
  #L4e2906.  goto L4e2918;
  #L4e2908.  v1:= v9 + 1;
  #L4e290c.  v2:= v8 ^> 4;
  #L4e2910.  v2:= (`byte`) v2 @kind i2b;
  #L4e2912.  v6[v9]:= v2 @kind byte;
  #L4e2916.  v9:= v1;
  #L4e2918.  v0.`x5.f$b.c` @type ^`int` := v5;
  #L4e291c.  goto L4e28d2;
}
