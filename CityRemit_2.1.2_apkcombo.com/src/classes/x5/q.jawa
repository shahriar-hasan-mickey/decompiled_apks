record `x5.q` @kind class @AccessFlag  {
}
procedure `byte`[] `a`(`byte`[] v53 @kind object, `byte`[] v54 @kind object) @signature `Lx5/q;.a:([B[B)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;
    v31;
    v32;
    v33;
    v34;
    v35;
    v36;
    v37;
    v38;
    v39;
    v40;
    v41;
    v42;
    v43;
    v44;
    v45;
    v46;
    v47;
    v48;
    v49;
    v50;
    v51;
    v52;

  #L4e4a50.  v0:= v53 @kind object;
  #L4e4a54.  v1:= v54 @kind object;
  #L4e4a58.  v2:= length @variable v0;
  #L4e4a5a.  v3:= 32I;
  #L4e4a5e.  if v2 != v3 then goto L4e4e20;
  #L4e4a62.  v2:= 0I;
  #L4e4a64.  call temp:= `c`(v0, v2, v2) @signature `Lx5/q;.c:([BII)J` @kind static;
  #L4e4a6a.  v4:= temp @kind wide;
  #L4e4a6c.  v6:= 67108863L;
  #L4e4a72.  v4:= v4 ^& v6 @kind long;
  #L4e4a74.  v8:= 3I;
  #L4e4a76.  v9:= 2I;
  #L4e4a78.  call temp:= `c`(v0, v8, v9) @signature `Lx5/q;.c:([BII)J` @kind static;
  #L4e4a7e.  v10:= temp @kind wide;
  #L4e4a80.  v12:= 67108611L;
  #L4e4a86.  v10:= v10 ^& v12 @kind long;
  #L4e4a88.  v12:= 6I;
  #L4e4a8a.  v13:= 4I;
  #L4e4a8c.  call temp:= `c`(v0, v12, v13) @signature `Lx5/q;.c:([BII)J` @kind static;
  #L4e4a92.  v14:= temp @kind wide;
  #L4e4a94.  v16:= 67092735L;
  #L4e4a9a.  v14:= v14 ^& v16 @kind long;
  #L4e4a9e.  v3:= 9I;
  #L4e4aa2.  call temp:= `c`(v0, v3, v12) @signature `Lx5/q;.c:([BII)J` @kind static;
  #L4e4aa8.  v17:= temp @kind wide;
  #L4e4aaa.  v19:= 66076671L;
  #L4e4ab0.  v17:= v17 ^& v19 @kind long;
  #L4e4ab4.  v6:= 12I;
  #L4e4ab8.  v7:= 8I;
  #L4e4abc.  call temp:= `c`(v0, v6, v7) @signature `Lx5/q;.c:([BII)J` @kind static;
  #L4e4ac2.  v21:= temp @kind wide;
  #L4e4ac4.  v23:= 1048575L;
  #L4e4aca.  v21:= v21 ^& v23 @kind long;
  #L4e4ace.  v23:= 5L;
  #L4e4ad2.  v25:= v10 * v23 @kind long;
  #L4e4ad6.  v27:= v14 * v23 @kind long;
  #L4e4ada.  v29:= v17 * v23 @kind long;
  #L4e4ade.  v31:= v21 * v23 @kind long;
  #L4e4ae2.  v6:= 17I;
  #L4e4ae6.  v6:= new `byte`[v6];
  #L4e4aea.  v33:= 0L;
  #L4e4aee.  v35:= v33 @kind wide;
  #L4e4af2.  v37:= v35 @kind wide;
  #L4e4af6.  v39:= v37 @kind wide;
  #L4e4afa.  v41:= v39 @kind wide;
  #L4e4afe.  v7:= 0I;
  #L4e4b00.  v3:= length @variable v1;
  #L4e4b02.  v12:= 16I;
  #L4e4b06.  v43:= 26I;
  #L4e4b0a.  if v7 >= v3 then goto L4e4c92;
  #L4e4b0e.  call `b`(v6, v1, v7) @signature `Lx5/q;.b:([B[BI)V` @kind static;
  #L4e4b14.  call temp:= `c`(v6, v2, v2) @signature `Lx5/q;.c:([BII)J` @kind static;
  #L4e4b1a.  v44:= temp @kind wide;
  #L4e4b1c.  v41:= v41 + v44 @kind long;
  #L4e4b20.  call temp:= `c`(v6, v8, v9) @signature `Lx5/q;.c:([BII)J` @kind static;
  #L4e4b26.  v44:= temp @kind wide;
  #L4e4b28.  v33:= v33 + v44 @kind long;
  #L4e4b2c.  v3:= 6I;
  #L4e4b2e.  call temp:= `c`(v6, v3, v13) @signature `Lx5/q;.c:([BII)J` @kind static;
  #L4e4b34.  v44:= temp @kind wide;
  #L4e4b36.  v35:= v35 + v44 @kind long;
  #L4e4b3a.  v8:= 9I;
  #L4e4b3e.  call temp:= `c`(v6, v8, v3) @signature `Lx5/q;.c:([BII)J` @kind static;
  #L4e4b44.  v45:= temp @kind wide;
  #L4e4b46.  v37:= v37 + v45 @kind long;
  #L4e4b4a.  v3:= 8I;
  #L4e4b4e.  v8:= 12I;
  #L4e4b52.  call temp:= `c`(v6, v8, v3) @signature `Lx5/q;.c:([BII)J` @kind static;
  #L4e4b58.  v45:= temp @kind wide;
  #L4e4b5a.  v3:= v6[v12] @kind byte;
  #L4e4b5e.  v8:= 24I;
  #L4e4b62.  v3:= v3 ^< v8 @kind int;
  #L4e4b64.  v2:= (`long`) v3 @kind i2l;
  #L4e4b66.  v2:= v45 ^| v2 @kind long;
  #L4e4b6a.  v39:= v39 + v2 @kind long;
  #L4e4b6e.  v2:= v41 * v4 @kind long;
  #L4e4b72.  v45:= v33 * v31 @kind long;
  #L4e4b76.  v2:= v2 + v45 @kind long;
  #L4e4b7a.  v45:= v35 * v29 @kind long;
  #L4e4b7e.  v2:= v2 + v45 @kind long;
  #L4e4b82.  v45:= v37 * v27 @kind long;
  #L4e4b86.  v2:= v2 + v45 @kind long;
  #L4e4b8a.  v45:= v39 * v25 @kind long;
  #L4e4b8e.  v2:= v2 + v45 @kind long;
  #L4e4b92.  v45:= v41 * v10 @kind long;
  #L4e4b96.  v47:= v33 * v4 @kind long;
  #L4e4b9a.  v45:= v45 + v47 @kind long;
  #L4e4b9e.  v47:= v35 * v31 @kind long;
  #L4e4ba2.  v45:= v45 + v47 @kind long;
  #L4e4ba6.  v47:= v37 * v29 @kind long;
  #L4e4baa.  v45:= v45 + v47 @kind long;
  #L4e4bae.  v47:= v39 * v27 @kind long;
  #L4e4bb2.  v45:= v45 + v47 @kind long;
  #L4e4bb6.  v47:= v41 * v14 @kind long;
  #L4e4bba.  v49:= v33 * v10 @kind long;
  #L4e4bbe.  v47:= v47 + v49 @kind long;
  #L4e4bc2.  v49:= v35 * v4 @kind long;
  #L4e4bc6.  v47:= v47 + v49 @kind long;
  #L4e4bca.  v49:= v37 * v31 @kind long;
  #L4e4bce.  v47:= v47 + v49 @kind long;
  #L4e4bd2.  v49:= v39 * v29 @kind long;
  #L4e4bd6.  v47:= v47 + v49 @kind long;
  #L4e4bda.  v49:= v41 * v17 @kind long;
  #L4e4bde.  v51:= v33 * v14 @kind long;
  #L4e4be2.  v49:= v49 + v51 @kind long;
  #L4e4be6.  v51:= v35 * v10 @kind long;
  #L4e4bea.  v49:= v49 + v51 @kind long;
  #L4e4bee.  v51:= v37 * v4 @kind long;
  #L4e4bf2.  v49:= v49 + v51 @kind long;
  #L4e4bf6.  v51:= v39 * v31 @kind long;
  #L4e4bfa.  v49:= v49 + v51 @kind long;
  #L4e4bfe.  v41:= v41 * v21 @kind long;
  #L4e4c02.  v33:= v33 * v17 @kind long;
  #L4e4c06.  v41:= v41 + v33 @kind long;
  #L4e4c0a.  v35:= v35 * v14 @kind long;
  #L4e4c0e.  v41:= v41 + v35 @kind long;
  #L4e4c12.  v37:= v37 * v10 @kind long;
  #L4e4c16.  v41:= v41 + v37 @kind long;
  #L4e4c1a.  v39:= v39 * v4 @kind long;
  #L4e4c1e.  v41:= v41 + v39 @kind long;
  #L4e4c22.  v33:= v2 ^> v43 @kind long;
  #L4e4c26.  v19:= 67108863L;
  #L4e4c2c.  v2:= v2 ^& v19 @kind long;
  #L4e4c30.  v45:= v45 + v33 @kind long;
  #L4e4c34.  v33:= v45 ^> v43 @kind long;
  #L4e4c38.  v35:= v45 ^& v19 @kind long;
  #L4e4c3c.  v47:= v47 + v33 @kind long;
  #L4e4c40.  v33:= v47 ^> v43 @kind long;
  #L4e4c44.  v37:= v47 ^& v19 @kind long;
  #L4e4c48.  v49:= v49 + v33 @kind long;
  #L4e4c4c.  v33:= v49 ^> v43 @kind long;
  #L4e4c50.  v39:= v49 ^& v19 @kind long;
  #L4e4c54.  v41:= v41 + v33 @kind long;
  #L4e4c58.  v33:= v41 ^> v43 @kind long;
  #L4e4c5c.  v41:= v41 ^& v19 @kind long;
  #L4e4c60.  v33:= v33 * v23 @kind long;
  #L4e4c64.  v2:= v2 + v33 @kind long;
  #L4e4c68.  v33:= v2 ^> v43 @kind long;
  #L4e4c6c.  v2:= v2 ^& v19 @kind long;
  #L4e4c70.  v33:= v35 + v33 @kind long;
  #L4e4c74.  v7:= v7 + 16;
  #L4e4c78.  v35:= v37 @kind wide;
  #L4e4c7c.  v37:= v39 @kind wide;
  #L4e4c80.  v39:= v41 @kind wide;
  #L4e4c84.  v8:= 3I;
  #L4e4c86.  v12:= 6I;
  #L4e4c88.  v41:= v2 @kind wide;
  #L4e4c8c.  v2:= 0I;
  #L4e4c8e.  goto L4e4b00;
  #L4e4c92.  v19:= 67108863L;
  #L4e4c98.  v1:= v33 ^> v43 @kind long;
  #L4e4c9c.  v3:= v33 ^& v19 @kind long;
  #L4e4ca0.  v35:= v35 + v1 @kind long;
  #L4e4ca4.  v1:= v35 ^> v43 @kind long;
  #L4e4ca8.  v5:= v35 ^& v19 @kind long;
  #L4e4cac.  v37:= v37 + v1 @kind long;
  #L4e4cb0.  v1:= v37 ^> v43 @kind long;
  #L4e4cb4.  v9:= v37 ^& v19 @kind long;
  #L4e4cb8.  v39:= v39 + v1 @kind long;
  #L4e4cbc.  v1:= v39 ^> v43 @kind long;
  #L4e4cc0.  v14:= v39 ^& v19 @kind long;
  #L4e4cc4.  v1:= v1 * v23 @kind long;
  #L4e4cc8.  v41:= v41 + v1 @kind long;
  #L4e4ccc.  v1:= v41 ^> v43 @kind long;
  #L4e4cd0.  v17:= v41 ^& v19 @kind long;
  #L4e4cd4.  v3:= v3 + v1 @kind long;
  #L4e4cd6.  v23:= v17 + v23 @kind long;
  #L4e4cda.  v1:= v23 ^> v43 @kind long;
  #L4e4cde.  v21:= v23 ^& v19 @kind long;
  #L4e4ce2.  v1:= v1 + v3 @kind long;
  #L4e4ce4.  v23:= v1 ^> v43 @kind long;
  #L4e4ce8.  v1:= v1 ^& v19 @kind long;
  #L4e4cec.  v23:= v5 + v23 @kind long;
  #L4e4cf0.  v25:= v23 ^> v43 @kind long;
  #L4e4cf4.  v23:= v23 ^& v19 @kind long;
  #L4e4cf8.  v25:= v9 + v25 @kind long;
  #L4e4cfc.  v27:= v25 ^> v43 @kind long;
  #L4e4d00.  v19:= v25 ^& v19 @kind long;
  #L4e4d04.  v27:= v14 + v27 @kind long;
  #L4e4d08.  v25:= 67108864L;
  #L4e4d0e.  v27:= v27 - v25 @kind long;
  #L4e4d12.  v7:= 63I;
  #L4e4d16.  v12:= v27 ^> v7 @kind long;
  #L4e4d1a.  v17:= v17 ^& v12 @kind long;
  #L4e4d1e.  v3:= v3 ^& v12 @kind long;
  #L4e4d20.  v5:= v5 ^& v12 @kind long;
  #L4e4d22.  v9:= v9 ^& v12 @kind long;
  #L4e4d24.  v14:= v14 ^& v12 @kind long;
  #L4e4d26.  v12:= ~v12 @kind long;
  #L4e4d28.  v21:= v21 ^& v12 @kind long;
  #L4e4d2c.  v17:= v17 ^| v21 @kind long;
  #L4e4d30.  v1:= v1 ^& v12 @kind long;
  #L4e4d32.  v1:= v1 ^| v3 @kind long;
  #L4e4d34.  v3:= v23 ^& v12 @kind long;
  #L4e4d38.  v3:= v3 ^| v5 @kind long;
  #L4e4d3a.  v5:= v19 ^& v12 @kind long;
  #L4e4d3e.  v5:= v5 ^| v9 @kind long;
  #L4e4d40.  v9:= v27 ^& v12 @kind long;
  #L4e4d44.  v9:= v9 ^| v14 @kind long;
  #L4e4d46.  v12:= v1 ^< v43 @kind long;
  #L4e4d4a.  v12:= v17 ^| v12 @kind long;
  #L4e4d4e.  v14:= 4294967295L;
  #L4e4d58.  v12:= v12 ^& v14 @kind long;
  #L4e4d5a.  v7:= 6I;
  #L4e4d5c.  v1:= v1 ^> v7 @kind long;
  #L4e4d5e.  v7:= 20I;
  #L4e4d62.  v17:= v3 ^< v7 @kind long;
  #L4e4d66.  v1:= v1 ^| v17 @kind long;
  #L4e4d6a.  v1:= v1 ^& v14 @kind long;
  #L4e4d6c.  v17:= 12I;
  #L4e4d70.  v3:= v3 ^> v17 @kind long;
  #L4e4d74.  v17:= 14I;
  #L4e4d78.  v17:= v5 ^< v17 @kind long;
  #L4e4d7c.  v3:= v3 ^| v17 @kind long;
  #L4e4d80.  v3:= v3 ^& v14 @kind long;
  #L4e4d82.  v17:= 18I;
  #L4e4d86.  v5:= v5 ^> v17 @kind long;
  #L4e4d8a.  v17:= 8I;
  #L4e4d8e.  v9:= v9 ^< v17 @kind long;
  #L4e4d92.  v5:= v5 ^| v9 @kind long;
  #L4e4d94.  v5:= v5 ^& v14 @kind long;
  #L4e4d96.  v9:= 16I;
  #L4e4d9a.  call temp:= `d`(v0, v9) @signature `Lx5/q;.d:([BI)J` @kind static;
  #L4e4da0.  v17:= temp @kind wide;
  #L4e4da2.  v12:= v12 + v17 @kind long;
  #L4e4da6.  v9:= v12 ^& v14 @kind long;
  #L4e4daa.  call temp:= `d`(v0, v7) @signature `Lx5/q;.d:([BI)J` @kind static;
  #L4e4db0.  v17:= temp @kind wide;
  #L4e4db2.  v1:= v1 + v17 @kind long;
  #L4e4db6.  v7:= 32I;
  #L4e4dba.  v12:= v12 ^> v7 @kind long;
  #L4e4dbc.  v1:= v1 + v12 @kind long;
  #L4e4dbe.  v12:= v1 ^& v14 @kind long;
  #L4e4dc2.  v8:= 24I;
  #L4e4dc6.  call temp:= `d`(v0, v8) @signature `Lx5/q;.d:([BI)J` @kind static;
  #L4e4dcc.  v17:= temp @kind wide;
  #L4e4dce.  v3:= v3 + v17 @kind long;
  #L4e4dd2.  v1:= v1 ^> v7 @kind long;
  #L4e4dd4.  v3:= v3 + v1 @kind long;
  #L4e4dd6.  v1:= v3 ^& v14 @kind long;
  #L4e4dda.  v8:= 28I;
  #L4e4dde.  call temp:= `d`(v0, v8) @signature `Lx5/q;.d:([BI)J` @kind static;
  #L4e4de4.  v17:= temp @kind wide;
  #L4e4de6.  v5:= v5 + v17 @kind long;
  #L4e4dea.  v3:= v3 ^> v7 @kind long;
  #L4e4dec.  v5:= v5 + v3 @kind long;
  #L4e4dee.  v3:= v5 ^& v14 @kind long;
  #L4e4df2.  v0:= 16I;
  #L4e4df6.  v0:= new `byte`[v0];
  #L4e4dfa.  v5:= 0I;
  #L4e4dfc.  call `e`(v0, v9, v5) @signature `Lx5/q;.e:([BJI)V` @kind static;
  #L4e4e02.  v5:= 4I;
  #L4e4e04.  call `e`(v0, v12, v5) @signature `Lx5/q;.e:([BJI)V` @kind static;
  #L4e4e0a.  v5:= 8I;
  #L4e4e0e.  call `e`(v0, v1, v5) @signature `Lx5/q;.e:([BJI)V` @kind static;
  #L4e4e14.  v1:= 12I;
  #L4e4e18.  call `e`(v0, v3, v1) @signature `Lx5/q;.e:([BJI)V` @kind static;
  #L4e4e1e.  return v0 @kind object;
  #L4e4e20.  v0:= new `java.lang.IllegalArgumentException`;
  #L4e4e24.  v1:= "The key length in bytes must be 32." @kind object;
  #L4e4e28.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e4e2e.  throw v0;
}
procedure `void` `b`(`byte`[] v3 @kind object, `byte`[] v4 @kind object, `int` v5 ) @signature `Lx5/q;.b:([B[BI)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4e4ec4.  v0:= length @variable v4;
  #L4e4ec6.  v0:= v0 - v5 @kind int;
  #L4e4ec8.  v1:= 16I;
  #L4e4ecc.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L4e4ed2.  v0:= temp;
  #L4e4ed4.  v2:= 0I;
  #L4e4ed6.  call `arraycopy`(v4, v5, v3, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4e4edc.  v4:= 1I;
  #L4e4ede.  v3[v0]:= v4 @kind byte;
  #L4e4ee2.  if v0 == v1 then goto L4e4ef0;
  #L4e4ee6.  v0:= v0 + v4 @kind int;
  #L4e4ee8.  v4:= length @variable v3;
  #L4e4eea.  call `fill`(v3, v0, v4, v2) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #L4e4ef0.  return @kind void;
}
procedure `long` `c`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lx5/q;.c:([BII)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4e4e40.  call temp:= `d`(v2, v3) @signature `Lx5/q;.d:([BI)J` @kind static;
  #L4e4e46.  v2:= temp @kind wide;
  #L4e4e48.  v2:= v2 ^> v4 @kind long;
  #L4e4e4a.  v0:= 67108863L;
  #L4e4e50.  v2:= v2 ^& v0 @kind long;
  #L4e4e52.  return v2 @kind wide;
}
procedure `long` `d`(`byte`[] v2 @kind object, `int` v3 ) @signature `Lx5/q;.d:([BI)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4e4e64.  v0:= v2[v3] @kind byte;
  #L4e4e68.  v0:= v0 ^& 255;
  #L4e4e6c.  v1:= v3 + 1;
  #L4e4e70.  v1:= v2[v1] @kind byte;
  #L4e4e74.  v1:= v1 ^& 255;
  #L4e4e78.  v1:= v1 ^< 8;
  #L4e4e7c.  v0:= v0 ^| v1 @kind int;
  #L4e4e7e.  v1:= v3 + 2;
  #L4e4e82.  v1:= v2[v1] @kind byte;
  #L4e4e86.  v1:= v1 ^& 255;
  #L4e4e8a.  v1:= v1 ^< 16;
  #L4e4e8e.  v0:= v0 ^| v1 @kind int;
  #L4e4e90.  v3:= v3 + 3;
  #L4e4e94.  v2:= v2[v3] @kind byte;
  #L4e4e98.  v2:= v2 ^& 255;
  #L4e4e9c.  v2:= v2 ^< 24;
  #L4e4ea0.  v2:= v2 ^| v0 @kind int;
  #L4e4ea2.  v2:= (`long`) v2 @kind i2l;
  #L4e4ea4.  v0:= 4294967295L;
  #L4e4eae.  v2:= v2 ^& v0 @kind long;
  #L4e4eb0.  return v2 @kind wide;
}
procedure `void` `e`(`byte`[] v4 @kind object, `long` v5 , `int` v7 ) @signature `Lx5/q;.e:([BJI)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4e4f04.  v0:= 0I;
  #L4e4f06.  v1:= 4I;
  #L4e4f08.  if v0 >= v1 then goto L4e4f2a;
  #L4e4f0c.  v1:= v7 + v0 @kind int;
  #L4e4f10.  v2:= 255L;
  #L4e4f14.  v2:= v2 ^& v5 @kind long;
  #L4e4f16.  v3:= (`int`) v2 @kind l2i;
  #L4e4f18.  v2:= (`byte`) v3 @kind i2b;
  #L4e4f1a.  v4[v1]:= v2 @kind byte;
  #L4e4f1e.  v0:= v0 + 1;
  #L4e4f22.  v1:= 8I;
  #L4e4f26.  v5:= v5 ^> v1 @kind long;
  #L4e4f28.  goto L4e4f06;
  #L4e4f2a.  return @kind void;
}
procedure `void` `f`(`byte`[] v0 @kind object, `byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lx5/q;.f:([B[B[B)V` @AccessFlag STATIC {
    temp;

  #L4e4f3c.  call temp:= `a`(v0, v1) @signature `Lx5/q;.a:([B[B)[B` @kind static;
  #L4e4f42.  v0:= temp @kind object;
  #L4e4f44.  call temp:= `b`(v0, v2) @signature `Lx5/g;.b:([B[B)Z` @kind static;
  #L4e4f4a.  v0:= temp;
  #L4e4f4c.  if v0 == 0 then goto L4e4f52;
  #L4e4f50.  return @kind void;
  #L4e4f52.  v0:= new `java.security.GeneralSecurityException`;
  #L4e4f56.  v1:= "invalid MAC" @kind object;
  #L4e4f5a.  call `<init>`(v0, v1) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e4f60.  throw v0;
}
