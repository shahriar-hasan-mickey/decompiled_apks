record `x5.a` @kind class @AccessFlag PUBLIC_FINAL extends `x5.p` @kind interface {
  `javax.crypto.spec.SecretKeySpec` `x5.a.a` @AccessFlag PRIVATE_FINAL;
  `int` `x5.a.b` @AccessFlag PRIVATE_FINAL;
  `int` `x5.a.c` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.ThreadLocal` `@@x5.a.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx5/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4e1908.  v0:= new `x5.a$a`;
  #L4e190c.  call `<init>`(v0) @signature `Lx5/a$a;.<init>:()V` @kind direct;
  #L4e1912.  `@@x5.a.d` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L4e1916.  return @kind void;
}
procedure `void` `<init>`(`x5.a` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lx5/a;.<init>:([BI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4e1928.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4e192e.  v0:= length @variable v3;
  #L4e1930.  call `a`(v0) @signature `Lx5/w;.a:(I)V` @kind static;
  #L4e1936.  v0:= new `javax.crypto.spec.SecretKeySpec`;
  #L4e193a.  v1:= "AES" @kind object;
  #L4e193e.  call `<init>`(v0, v3, v1) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L4e1944.  v2.`x5.a.a` @type ^`javax.crypto.spec.SecretKeySpec` := v0 @kind object;
  #L4e1948.  v3:= `@@x5.a.d` @type ^`java.lang.ThreadLocal` @kind object;
  #L4e194c.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e1952.  v3:= temp @kind object;
  #L4e1954.  v3:= (`javax.crypto.Cipher`) v3 @kind object;
  #L4e1958.  call temp:= `getBlockSize`(v3) @signature `Ljavax/crypto/Cipher;.getBlockSize:()I` @kind virtual;
  #L4e195e.  v3:= temp;
  #L4e1960.  v2.`x5.a.c` @type ^`int` := v3;
  #L4e1964.  v0:= 12I;
  #L4e1968.  if v4 < v0 then goto L4e1976;
  #L4e196c.  if v4 > v3 then goto L4e1976;
  #L4e1970.  v2.`x5.a.b` @type ^`int` := v4;
  #L4e1974.  return @kind void;
  #L4e1976.  v3:= new `java.security.GeneralSecurityException`;
  #L4e197a.  v4:= "invalid IV size" @kind object;
  #L4e197e.  call `<init>`(v3, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e1984.  throw v3;
}
procedure `void` `c`(`x5.a` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 , `byte`[] v11 @kind object, `int` v12 , `byte`[] v13 @kind object, `boolean` v14 ) @signature `Lx5/a;.c:([BII[BI[BZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4e1998.  v0:= `@@x5.a.d` @type ^`java.lang.ThreadLocal` @kind object;
  #L4e199c.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L4e19a2.  v0:= temp @kind object;
  #L4e19a4.  v1:= v0 @kind object;
  #L4e19a6.  v1:= (`javax.crypto.Cipher`) v1 @kind object;
  #L4e19aa.  v0:= v7.`x5.a.c` @type ^`int`;
  #L4e19ae.  v0:= new `byte`[v0];
  #L4e19b2.  v2:= v7.`x5.a.b` @type ^`int`;
  #L4e19b6.  v3:= 0I;
  #L4e19b8.  call `arraycopy`(v13, v3, v0, v3, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4e19be.  v13:= new `javax.crypto.spec.IvParameterSpec`;
  #L4e19c2.  call `<init>`(v13, v0) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L4e19c8.  if v14 == 0 then goto L4e19d0;
  #L4e19cc.  v14:= 1I;
  #L4e19ce.  goto L4e19d2;
  #L4e19d0.  v14:= 2I;
  #L4e19d2.  v0:= v7.`x5.a.a` @type ^`javax.crypto.spec.SecretKeySpec` @kind object;
  #L4e19d6.  call `init`(v1, v14, v0, v13) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L4e19dc.  v2:= v8 @kind object;
  #L4e19de.  v3:= v9;
  #L4e19e0.  v4:= v10;
  #L4e19e2.  v5:= v11 @kind object;
  #L4e19e4.  v6:= v12;
  #L4e19e6.  call temp:= `doFinal`(v1, v2, v3, v4, v5, v6) @signature `Ljavax/crypto/Cipher;.doFinal:([BII[BI)I` @kind virtual;
  #L4e19ec.  v8:= temp;
  #L4e19ee.  if v8 != v10 then goto L4e19f4;
  #L4e19f2.  return @kind void;
  #L4e19f4.  v8:= new `java.security.GeneralSecurityException`;
  #L4e19f8.  v9:= "stored output's length does not match input's length" @kind object;
  #L4e19fc.  call `<init>`(v8, v9) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e1a02.  throw v8;
}
procedure `byte`[] `a`(`x5.a` v10 @kind this, `byte`[] v11 @kind object) @signature `Lx5/a;.a:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4e187c.  v0:= length @variable v11;
  #L4e187e.  v1:= v10.`x5.a.b` @type ^`int`;
  #L4e1882.  v2:= 2147483647I;
  #L4e1888.  v3:= v2 - v1 @kind int;
  #L4e188c.  if v0 > v3 then goto L4e18c4;
  #L4e1890.  v0:= length @variable v11;
  #L4e1892.  v0:= v0 + v1 @kind int;
  #L4e1894.  v0:= new `byte`[v0];
  #L4e1898.  call temp:= `c`(v1) @signature `Lx5/u;.c:(I)[B` @kind static;
  #L4e189e.  v8:= temp @kind object;
  #L4e18a0.  v1:= v10.`x5.a.b` @type ^`int`;
  #L4e18a4.  v2:= 0I;
  #L4e18a6.  call `arraycopy`(v8, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4e18ac.  v4:= 0I;
  #L4e18ae.  v5:= length @variable v11;
  #L4e18b0.  v7:= v10.`x5.a.b` @type ^`int`;
  #L4e18b4.  v9:= 1I;
  #L4e18b6.  v2:= v10 @kind object;
  #L4e18b8.  v3:= v11 @kind object;
  #L4e18ba.  v6:= v0 @kind object;
  #L4e18bc.  call `c`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lx5/a;.c:([BII[BI[BZ)V` @kind direct;
  #L4e18c2.  return v0 @kind object;
  #L4e18c4.  v11:= new `java.security.GeneralSecurityException`;
  #L4e18c8.  v0:= new `java.lang.StringBuilder`;
  #L4e18cc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4e18d2.  v1:= "plaintext length can not exceed " @kind object;
  #L4e18d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e18dc.  v1:= v10.`x5.a.b` @type ^`int`;
  #L4e18e0.  v2:= v2 - v1 @kind int;
  #L4e18e2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4e18e8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4e18ee.  v0:= temp @kind object;
  #L4e18f0.  call `<init>`(v11, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e18f6.  throw v11;
}
procedure `byte`[] `b`(`x5.a` v10 @kind this, `byte`[] v11 @kind object) @signature `Lx5/a;.b:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4e1820.  v0:= length @variable v11;
  #L4e1822.  v1:= v10.`x5.a.b` @type ^`int`;
  #L4e1826.  if v0 < v1 then goto L4e185a;
  #L4e182a.  v8:= new `byte`[v1];
  #L4e182e.  v0:= 0I;
  #L4e1830.  call `arraycopy`(v11, v0, v8, v0, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4e1836.  v0:= length @variable v11;
  #L4e1838.  v4:= v10.`x5.a.b` @type ^`int`;
  #L4e183c.  v0:= v0 - v4 @kind int;
  #L4e183e.  v0:= new `byte`[v0];
  #L4e1842.  v1:= length @variable v11;
  #L4e1844.  v5:= v1 - v4 @kind int;
  #L4e1848.  v7:= 0I;
  #L4e184a.  v9:= 0I;
  #L4e184c.  v2:= v10 @kind object;
  #L4e184e.  v3:= v11 @kind object;
  #L4e1850.  v6:= v0 @kind object;
  #L4e1852.  call `c`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lx5/a;.c:([BII[BI[BZ)V` @kind direct;
  #L4e1858.  return v0 @kind object;
  #L4e185a.  v11:= new `java.security.GeneralSecurityException`;
  #L4e185e.  v0:= "ciphertext too short" @kind object;
  #L4e1862.  call `<init>`(v11, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4e1868.  throw v11;
}
