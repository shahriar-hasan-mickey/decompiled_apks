record `t6.o$c` @kind class @AccessFlag  extends `android.database.sqlite.SQLiteOpenHelper` @kind class {
}
procedure `void` `<init>`(`t6.o$c` v2 @kind this, `android.content.Context` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lt6/o$c;.<init>:(Landroid/content/Context;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L46f604.  v0:= 0I;
  #L46f606.  v1:= 2I;
  #L46f608.  call `<init>`(v2, v3, v4, v0, v1) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L46f60e.  return @kind void;
}
procedure `void` `a`(`t6.o$c` v2 @kind this, `android.database.sqlite.SQLiteDatabase` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lt6/o$c;.a:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L46f620.  v0:= new `java.lang.StringBuilder`;
  #L46f624.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46f62a.  v1:= "DROP TABLE IF EXISTS " @kind object;
  #L46f62e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46f634.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46f63a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46f640.  v4:= temp @kind object;
  #L46f642.  call `execSQL`(v3, v4) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L46f648.  return @kind void;
}
procedure `void` `onCreate`(`t6.o$c` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Lt6/o$c;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46f65c.  v0:= "CREATE TABLE serverCache (path TEXT PRIMARY KEY, value BLOB);" @kind object;
  #L46f660.  call `execSQL`(v2, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L46f666.  v0:= "CREATE TABLE writes (id INTEGER, path TEXT, type TEXT, part INTEGER, node BLOB, UNIQUE (id, part));" @kind object;
  #L46f66a.  call `execSQL`(v2, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L46f670.  v0:= "CREATE TABLE trackedQueries (id INTEGER PRIMARY KEY, path TEXT, queryParams TEXT, lastUse INTEGER, complete INTEGER, active INTEGER);" @kind object;
  #L46f674.  call `execSQL`(v2, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L46f67a.  v0:= "CREATE TABLE trackedKeys (id INTEGER, key TEXT);" @kind object;
  #L46f67e.  call `execSQL`(v2, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L46f684.  return @kind void;
}
procedure `void` `onUpgrade`(`t6.o$c` v3 @kind this, `android.database.sqlite.SQLiteDatabase` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lt6/o$c;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L46f698.  v0:= 1I;
  #L46f69a.  v1:= 2I;
  #L46f69c.  if v6 != v1 then goto L46f6a4;
  #L46f6a0.  v1:= 1I;
  #L46f6a2.  goto L46f6a6;
  #L46f6a4.  v1:= 0I;
  #L46f6a6.  v2:= "Why is onUpgrade() called with a different version?" @kind object;
  #L46f6aa.  call `g`(v1, v2) @signature `La7/m;.g:(ZLjava/lang/String;)V` @kind static;
  #L46f6b0.  if v5 > v0 then goto L46f6e8;
  #L46f6b4.  v5:= "serverCache" @kind object;
  #L46f6b8.  call `a`(v3, v4, v5) @signature `Lt6/o$c;.a:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V` @kind direct;
  #L46f6be.  v5:= "CREATE TABLE serverCache (path TEXT PRIMARY KEY, value BLOB);" @kind object;
  #L46f6c2.  call `execSQL`(v4, v5) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L46f6c8.  v5:= "complete" @kind object;
  #L46f6cc.  call `a`(v3, v4, v5) @signature `Lt6/o$c;.a:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V` @kind direct;
  #L46f6d2.  v5:= "CREATE TABLE trackedKeys (id INTEGER, key TEXT);" @kind object;
  #L46f6d6.  call `execSQL`(v4, v5) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L46f6dc.  v5:= "CREATE TABLE trackedQueries (id INTEGER PRIMARY KEY, path TEXT, queryParams TEXT, lastUse INTEGER, complete INTEGER, active INTEGER);" @kind object;
  #L46f6e0.  call `execSQL`(v4, v5) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L46f6e6.  return @kind void;
  #L46f6e8.  v4:= new `java.lang.AssertionError`;
  #L46f6ec.  v5:= new `java.lang.StringBuilder`;
  #L46f6f0.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46f6f6.  v0:= "We don't handle upgrading to " @kind object;
  #L46f6fa.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46f700.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L46f706.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46f70c.  v5:= temp @kind object;
  #L46f70e.  call `<init>`(v4, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L46f714.  throw v4;
}
