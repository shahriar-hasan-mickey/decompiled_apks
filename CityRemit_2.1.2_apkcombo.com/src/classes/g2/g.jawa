record `g2.g` @kind class @AccessFlag FINAL {
  `byte`[] `g2.g.a` @AccessFlag PRIVATE_FINAL;
  `int` `g2.g.b` @AccessFlag PRIVATE;
  `int` `g2.g.c` @AccessFlag PRIVATE;
}
global `long`[] `@@g2.g.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lg2/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L320544.  v0:= 8I;
  #L320548.  v0:= new `long`[v0];
  #L32054c.  goto L320558;
  #L320552.  `@@g2.g.d` @type ^`long`[] := v0 @kind object;
  #L320556.  return @kind void;
  #L320558.  v0:= (128L, 64L, 32L, 16L, 8L, 4L, 2L, 1L) @kind object;
  #L32059f.  goto L320552;
}
procedure `void` `<init>`(`g2.g` v1 @kind this) @signature `Lg2/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3205b0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3205b6.  v0:= 8I;
  #L3205ba.  v0:= new `byte`[v0];
  #L3205be.  v1.`g2.g.a` @type ^`byte`[] := v0 @kind object;
  #L3205c2.  return @kind void;
}
procedure `long` `a`(`byte`[] v6 @kind object, `int` v7 , `boolean` v8 ) @signature `Lg2/g;.a:([BIZ)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L320454.  v0:= 0I;
  #L320456.  v0:= v6[v0] @kind byte;
  #L32045a.  v0:= (`long`) v0 @kind i2l;
  #L32045c.  v2:= 255L;
  #L320460.  v0:= v0 ^& v2 @kind long;
  #L320462.  if v8 == 0 then goto L320476;
  #L320466.  v8:= `@@g2.g.d` @type ^`long`[] @kind object;
  #L32046a.  v4:= v7 + -1;
  #L32046e.  v4:= v8[v4] @kind wide;
  #L320472.  v4:= ~v4 @kind long;
  #L320474.  v0:= v0 ^& v4 @kind long;
  #L320476.  v8:= 1I;
  #L320478.  if v8 >= v7 then goto L320492;
  #L32047c.  v4:= 8I;
  #L320480.  v0:= v0 ^< v4 @kind long;
  #L320482.  v4:= v6[v8] @kind byte;
  #L320486.  v4:= (`long`) v4 @kind i2l;
  #L320488.  v4:= v4 ^& v2 @kind long;
  #L32048a.  v0:= v0 ^| v4 @kind long;
  #L32048c.  v8:= v8 + 1;
  #L320490.  goto L320478;
  #L320492.  return v0 @kind wide;
}
procedure `int` `c`(`int` v6 ) @signature `Lg2/g;.c:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L320418.  v0:= 0I;
  #L32041a.  v1:= `@@g2.g.d` @type ^`long`[] @kind object;
  #L32041e.  v2:= length @variable v1;
  #L320420.  if v0 >= v2 then goto L320440;
  #L320424.  v2:= v1[v0] @kind wide;
  #L320428.  v4:= (`long`) v6 @kind i2l;
  #L32042a.  v1:= v2 ^& v4 @kind long;
  #L32042e.  v3:= 0L;
  #L320432.  v5:= lcmp(v1, v3);
  #L320436.  v0:= v0 + 1;
  #L32043a.  if v5 == 0 then goto L32041a;
  #L32043e.  goto L320442;
  #L320440.  v0:= -1I;
  #L320442.  return v0;
}
procedure `int` `b`(`g2.g` v1 @kind this) @signature `Lg2/g;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L320400.  v0:= v1.`g2.g.c` @type ^`int`;
  #L320404.  return v0;
}
procedure `long` `d`(`g2.g` v3 @kind this, `a2.m` v4 @kind object, `boolean` v5 , `boolean` v6 , `int` v7 ) @signature `Lg2/g;.d:(La2/m;ZZI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3204a4.  v0:= v3.`g2.g.b` @type ^`int`;
  #L3204a8.  v1:= 0I;
  #L3204aa.  v2:= 1I;
  #L3204ac.  if v0 != 0 then goto L3204fa;
  #L3204b0.  v0:= v3.`g2.g.a` @type ^`byte`[] @kind object;
  #L3204b4.  call temp:= `f`(v4, v0, v1, v2, v5) @signature `La2/m;.f:([BIIZ)Z` @kind interface;
  #L3204ba.  v5:= temp;
  #L3204bc.  if v5 != 0 then goto L3204c6;
  #L3204c0.  v4:= -1L;
  #L3204c4.  return v4 @kind wide;
  #L3204c6.  v5:= v3.`g2.g.a` @type ^`byte`[] @kind object;
  #L3204ca.  v5:= v5[v1] @kind byte;
  #L3204ce.  v5:= v5 ^& 255;
  #L3204d2.  call temp:= `c`(v5) @signature `Lg2/g;.c:(I)I` @kind static;
  #L3204d8.  v5:= temp;
  #L3204da.  v3.`g2.g.c` @type ^`int` := v5;
  #L3204de.  v0:= -1I;
  #L3204e0.  if v5 == v0 then goto L3204ea;
  #L3204e4.  v3.`g2.g.b` @type ^`int` := v2;
  #L3204e8.  goto L3204fa;
  #L3204ea.  v4:= new `java.lang.IllegalStateException`;
  #L3204ee.  v5:= "No valid varint length mask found" @kind object;
  #L3204f2.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3204f8.  throw v4;
  #L3204fa.  v5:= v3.`g2.g.c` @type ^`int`;
  #L3204fe.  if v5 <= v7 then goto L32050c;
  #L320502.  v3.`g2.g.b` @type ^`int` := v1;
  #L320506.  v4:= -2L;
  #L32050a.  return v4 @kind wide;
  #L32050c.  if v5 == v2 then goto L32051c;
  #L320510.  v7:= v3.`g2.g.a` @type ^`byte`[] @kind object;
  #L320514.  v5:= v5 - v2 @kind int;
  #L320516.  call `readFully`(v4, v7, v2, v5) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L32051c.  v3.`g2.g.b` @type ^`int` := v1;
  #L320520.  v4:= v3.`g2.g.a` @type ^`byte`[] @kind object;
  #L320524.  v5:= v3.`g2.g.c` @type ^`int`;
  #L320528.  call temp:= `a`(v4, v5, v6) @signature `Lg2/g;.a:([BIZ)J` @kind static;
  #L32052e.  v4:= temp @kind wide;
  #L320530.  return v4 @kind wide;
}
procedure `void` `e`(`g2.g` v1 @kind this) @signature `Lg2/g;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3205d4.  v0:= 0I;
  #L3205d6.  v1.`g2.g.b` @type ^`int` := v0;
  #L3205da.  v1.`g2.g.c` @type ^`int` := v0;
  #L3205de.  return @kind void;
}
