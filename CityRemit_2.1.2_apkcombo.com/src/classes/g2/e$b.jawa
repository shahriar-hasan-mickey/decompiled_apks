record `g2.e$b` @kind class @AccessFlag FINAL extends `g2.b` @kind interface {
  `g2.e` `g2.e$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`g2.e$b` v0 @kind this, `g2.e` v1 @kind object) @signature `Lg2/e$b;.<init>:(Lg2/e;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L31bfb0.  v0.`g2.e$b.a` @type ^`g2.e` := v1 @kind object;
  #L31bfb4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31bfba.  return @kind void;
}
procedure `void` `<init>`(`g2.e$b` v0 @kind this, `g2.e` v1 @kind object, `g2.e$a` v2 @kind object) @signature `Lg2/e$b;.<init>:(Lg2/e;Lg2/e$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L31bfcc.  call `<init>`(v0, v1) @signature `Lg2/e$b;.<init>:(Lg2/e;)V` @kind direct;
  #L31bfd2.  return @kind void;
}
procedure `void` `a`(`g2.e$b` v1 @kind this, `int` v2 ) @signature `Lg2/e$b;.a:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31c000.  v0:= v1.`g2.e$b.a` @type ^`g2.e` @kind object;
  #L31c004.  call `p`(v0, v2) @signature `Lg2/e;.p:(I)V` @kind virtual;
  #L31c00a.  return @kind void;
}
procedure `int` `b`(`g2.e$b` v1 @kind this, `int` v2 ) @signature `Lg2/e$b;.b:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31bf90.  v0:= v1.`g2.e$b.a` @type ^`g2.e` @kind object;
  #L31bf94.  call temp:= `v`(v0, v2) @signature `Lg2/e;.v:(I)I` @kind virtual;
  #L31bf9a.  v2:= temp;
  #L31bf9c.  return v2;
}
procedure `void` `c`(`g2.e$b` v1 @kind this, `int` v2 , `double` v3 ) @signature `Lg2/e$b;.c:(ID)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31c01c.  v0:= v1.`g2.e$b.a` @type ^`g2.e` @kind object;
  #L31c020.  call `s`(v0, v2, v3) @signature `Lg2/e;.s:(ID)V` @kind virtual;
  #L31c026.  return @kind void;
}
procedure `void` `d`(`g2.e$b` v1 @kind this, `int` v2 , `int` v3 , `a2.m` v4 @kind object) @signature `Lg2/e$b;.d:(IILa2/m;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31bfe4.  v0:= v1.`g2.e$b.a` @type ^`g2.e` @kind object;
  #L31bfe8.  call `m`(v0, v2, v3, v4) @signature `Lg2/e;.m:(IILa2/m;)V` @kind virtual;
  #L31bfee.  return @kind void;
}
procedure `boolean` `e`(`g2.e$b` v1 @kind this, `int` v2 ) @signature `Lg2/e$b;.e:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31bf70.  v0:= v1.`g2.e$b.a` @type ^`g2.e` @kind object;
  #L31bf74.  call temp:= `A`(v0, v2) @signature `Lg2/e;.A:(I)Z` @kind virtual;
  #L31bf7a.  v2:= temp;
  #L31bf7c.  return v2;
}
procedure `void` `f`(`g2.e$b` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lg2/e$b;.f:(ILjava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31c078.  v0:= v1.`g2.e$b.a` @type ^`g2.e` @kind object;
  #L31c07c.  call `I`(v0, v2, v3) @signature `Lg2/e;.I:(ILjava/lang/String;)V` @kind virtual;
  #L31c082.  return @kind void;
}
procedure `void` `g`(`g2.e$b` v6 @kind this, `int` v7 , `long` v8 , `long` v10 ) @signature `Lg2/e$b;.g:(IJJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L31c054.  v0:= v6.`g2.e$b.a` @type ^`g2.e` @kind object;
  #L31c058.  v1:= v7;
  #L31c05a.  v2:= v8 @kind wide;
  #L31c05c.  v4:= v10 @kind wide;
  #L31c05e.  call `H`(v0, v1, v2, v4) @signature `Lg2/e;.H:(IJJ)V` @kind virtual;
  #L31c064.  return @kind void;
}
procedure `void` `h`(`g2.e$b` v1 @kind this, `int` v2 , `long` v3 ) @signature `Lg2/e$b;.h:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31c038.  v0:= v1.`g2.e$b.a` @type ^`g2.e` @kind object;
  #L31c03c.  call `y`(v0, v2, v3) @signature `Lg2/e;.y:(IJ)V` @kind virtual;
  #L31c042.  return @kind void;
}
