record `g2.e` @kind class @AccessFlag PUBLIC extends `a2.l` @kind interface {
  `long` `g2.e.A` @AccessFlag PRIVATE;
  `long` `g2.e.B` @AccessFlag PRIVATE;
  `s3.r` `g2.e.C` @AccessFlag PRIVATE;
  `s3.r` `g2.e.D` @AccessFlag PRIVATE;
  `boolean` `g2.e.E` @AccessFlag PRIVATE;
  `boolean` `g2.e.F` @AccessFlag PRIVATE;
  `int` `g2.e.G` @AccessFlag PRIVATE;
  `long` `g2.e.H` @AccessFlag PRIVATE;
  `long` `g2.e.I` @AccessFlag PRIVATE;
  `int` `g2.e.J` @AccessFlag PRIVATE;
  `int` `g2.e.K` @AccessFlag PRIVATE;
  `int`[] `g2.e.L` @AccessFlag PRIVATE;
  `int` `g2.e.M` @AccessFlag PRIVATE;
  `int` `g2.e.N` @AccessFlag PRIVATE;
  `int` `g2.e.O` @AccessFlag PRIVATE;
  `int` `g2.e.P` @AccessFlag PRIVATE;
  `boolean` `g2.e.Q` @AccessFlag PRIVATE;
  `long` `g2.e.R` @AccessFlag PRIVATE;
  `int` `g2.e.S` @AccessFlag PRIVATE;
  `int` `g2.e.T` @AccessFlag PRIVATE;
  `int` `g2.e.U` @AccessFlag PRIVATE;
  `boolean` `g2.e.V` @AccessFlag PRIVATE;
  `boolean` `g2.e.W` @AccessFlag PRIVATE;
  `boolean` `g2.e.X` @AccessFlag PRIVATE;
  `int` `g2.e.Y` @AccessFlag PRIVATE;
  `byte` `g2.e.Z` @AccessFlag PRIVATE;
  `g2.c` `g2.e.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `g2.e.a0` @AccessFlag PRIVATE;
  `g2.g` `g2.e.b` @AccessFlag PRIVATE_FINAL;
  `a2.n` `g2.e.b0` @AccessFlag PRIVATE;
  `android.util.SparseArray` `g2.e.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `g2.e.d` @AccessFlag PRIVATE_FINAL;
  `s3.z` `g2.e.e` @AccessFlag PRIVATE_FINAL;
  `s3.z` `g2.e.f` @AccessFlag PRIVATE_FINAL;
  `s3.z` `g2.e.g` @AccessFlag PRIVATE_FINAL;
  `s3.z` `g2.e.h` @AccessFlag PRIVATE_FINAL;
  `s3.z` `g2.e.i` @AccessFlag PRIVATE_FINAL;
  `s3.z` `g2.e.j` @AccessFlag PRIVATE_FINAL;
  `s3.z` `g2.e.k` @AccessFlag PRIVATE_FINAL;
  `s3.z` `g2.e.l` @AccessFlag PRIVATE_FINAL;
  `s3.z` `g2.e.m` @AccessFlag PRIVATE_FINAL;
  `s3.z` `g2.e.n` @AccessFlag PRIVATE_FINAL;
  `java.nio.ByteBuffer` `g2.e.o` @AccessFlag PRIVATE;
  `long` `g2.e.p` @AccessFlag PRIVATE;
  `long` `g2.e.q` @AccessFlag PRIVATE;
  `long` `g2.e.r` @AccessFlag PRIVATE;
  `long` `g2.e.s` @AccessFlag PRIVATE;
  `long` `g2.e.t` @AccessFlag PRIVATE;
  `g2.e$c` `g2.e.u` @AccessFlag PRIVATE;
  `boolean` `g2.e.v` @AccessFlag PRIVATE;
  `int` `g2.e.w` @AccessFlag PRIVATE;
  `long` `g2.e.x` @AccessFlag PRIVATE;
  `boolean` `g2.e.y` @AccessFlag PRIVATE;
  `long` `g2.e.z` @AccessFlag PRIVATE;
}
global `byte`[] `@@g2.e.c0` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@g2.e.d0` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@g2.e.e0` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@g2.e.f0` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.UUID` `@@g2.e.g0` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@g2.e.h0` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lg2/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31e65c.  v0:= `@@g2.d.b` @type ^`g2.d` @kind object;
  #L31e660.  v0:= 32I;
  #L31e664.  v1:= new `byte`[v0];
  #L31e668.  goto L31e734;
  #L31e66e.  `@@g2.e.c0` @type ^`byte`[] := v1 @kind object;
  #L31e672.  v1:= "Format: Start, End, ReadOrder, Layer, Style, Name, MarginL, MarginR, MarginV, Effect, Text" @kind object;
  #L31e676.  call temp:= `l0`(v1) @signature `Ls3/l0;.l0:(Ljava/lang/String;)[B` @kind static;
  #L31e67c.  v1:= temp @kind object;
  #L31e67e.  `@@g2.e.d0` @type ^`byte`[] := v1 @kind object;
  #L31e682.  v0:= new `byte`[v0];
  #L31e686.  goto L31e75c;
  #L31e68c.  `@@g2.e.e0` @type ^`byte`[] := v0 @kind object;
  #L31e690.  v0:= 38I;
  #L31e694.  v0:= new `byte`[v0];
  #L31e698.  goto L31e784;
  #L31e69e.  `@@g2.e.f0` @type ^`byte`[] := v0 @kind object;
  #L31e6a2.  v0:= new `java.util.UUID`;
  #L31e6a6.  v1:= 72057594037932032L;
  #L31e6b0.  v3:= -3.607411173533E-312D;
  #L31e6ba.  call `<init>`(v0, v1, v3) @signature `Ljava/util/UUID;.<init>:(JJ)V` @kind direct;
  #L31e6c0.  `@@g2.e.g0` @type ^`java.util.UUID` := v0 @kind object;
  #L31e6c4.  v0:= new `java.util.HashMap`;
  #L31e6c8.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L31e6ce.  v1:= 0I;
  #L31e6d0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L31e6d6.  v1:= temp @kind object;
  #L31e6d8.  v2:= "htc_video_rotA-000" @kind object;
  #L31e6dc.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L31e6e2.  v1:= 90I;
  #L31e6e6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L31e6ec.  v1:= temp @kind object;
  #L31e6ee.  v2:= "htc_video_rotA-090" @kind object;
  #L31e6f2.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L31e6f8.  v1:= 180I;
  #L31e6fc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L31e702.  v1:= temp @kind object;
  #L31e704.  v2:= "htc_video_rotA-180" @kind object;
  #L31e708.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L31e70e.  v1:= 270I;
  #L31e712.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L31e718.  v1:= temp @kind object;
  #L31e71a.  v2:= "htc_video_rotA-270" @kind object;
  #L31e71e.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L31e724.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L31e72a.  v0:= temp @kind object;
  #L31e72c.  `@@g2.e.h0` @type ^`java.util.Map` := v0 @kind object;
  #L31e730.  return @kind void;
  #L31e732.  
  #L31e734.  v1:= (49I, 10I, 48I, 48I, 58I, 48I, 48I, 58I, 48I, 48I, 44I, 48I, 48I, 48I, 32I, 45I, 45I, 62I, 32I, 48I, 48I, 58I, 48I, 48I, 58I, 48I, 48I, 44I, 48I, 48I, 48I, 10I) @kind object;
  #L31e75b.  goto L31e66e;
  #L31e75c.  v0:= (68I, 105I, 97I, 108I, 111I, 103I, 117I, 101I, 58I, 32I, 48I, 58I, 48I, 48I, 58I, 48I, 48I, 58I, 48I, 48I, 44I, 48I, 58I, 48I, 48I, 58I, 48I, 48I, 58I, 48I, 48I, 44I) @kind object;
  #L31e783.  goto L31e68c;
  #L31e784.  v0:= (87I, 69I, 66I, 86I, 84I, 84I, 10I, 10I, 48I, 48I, 58I, 48I, 48I, 58I, 48I, 48I, 46I, 48I, 48I, 48I, 32I, 45I, 45I, 62I, 32I, 48I, 48I, 58I, 48I, 48I, 58I, 48I, 48I, 46I, 48I, 48I, 48I, 10I) @kind object;
  #L31e7b1.  goto L31e69e;
}
procedure `void` `<init>`(`g2.e` v1 @kind this) @signature `Lg2/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L31e7c4.  v0:= 0I;
  #L31e7c6.  call `<init>`(v1, v0) @signature `Lg2/e;.<init>:(I)V` @kind direct;
  #L31e7cc.  return @kind void;
}
procedure `void` `<init>`(`g2.e` v1 @kind this, `int` v2 ) @signature `Lg2/e;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L31e920.  v0:= new `g2.a`;
  #L31e924.  call `<init>`(v0) @signature `Lg2/a;.<init>:()V` @kind direct;
  #L31e92a.  call `<init>`(v1, v0, v2) @signature `Lg2/e;.<init>:(Lg2/c;I)V` @kind direct;
  #L31e930.  return @kind void;
}
procedure `void` `<init>`(`g2.e` v4 @kind this, `g2.c` v5 @kind object, `int` v6 ) @signature `Lg2/e;.<init>:(Lg2/c;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L31e7e0.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31e7e6.  v0:= -1L;
  #L31e7ea.  v4.`g2.e.q` @type ^`long` := v0 @kind wide;
  #L31e7ee.  v2:= -4.9E-324D;
  #L31e7f8.  v4.`g2.e.r` @type ^`long` := v2 @kind wide;
  #L31e7fc.  v4.`g2.e.s` @type ^`long` := v2 @kind wide;
  #L31e800.  v4.`g2.e.t` @type ^`long` := v2 @kind wide;
  #L31e804.  v4.`g2.e.z` @type ^`long` := v0 @kind wide;
  #L31e808.  v4.`g2.e.A` @type ^`long` := v0 @kind wide;
  #L31e80c.  v4.`g2.e.B` @type ^`long` := v2 @kind wide;
  #L31e810.  v4.`g2.e.a` @type ^`g2.c` := v5 @kind object;
  #L31e814.  v0:= new `g2.e$b`;
  #L31e818.  v1:= 0I;
  #L31e81a.  call `<init>`(v0, v4, v1) @signature `Lg2/e$b;.<init>:(Lg2/e;Lg2/e$a;)V` @kind direct;
  #L31e820.  call `d`(v5, v0) @signature `Lg2/c;.d:(Lg2/b;)V` @kind interface;
  #L31e826.  v5:= 1I;
  #L31e828.  v6:= v6 ^& v5 @kind int;
  #L31e82a.  if v6 != 0 then goto L31e832;
  #L31e82e.  v6:= 1I;
  #L31e830.  goto L31e834;
  #L31e832.  v6:= 0I;
  #L31e834.  v4.`g2.e.d` @type ^`boolean` := v6 @kind boolean;
  #L31e838.  v6:= new `g2.g`;
  #L31e83c.  call `<init>`(v6) @signature `Lg2/g;.<init>:()V` @kind direct;
  #L31e842.  v4.`g2.e.b` @type ^`g2.g` := v6 @kind object;
  #L31e846.  v6:= new `android.util.SparseArray`;
  #L31e84a.  call `<init>`(v6) @signature `Landroid/util/SparseArray;.<init>:()V` @kind direct;
  #L31e850.  v4.`g2.e.c` @type ^`android.util.SparseArray` := v6 @kind object;
  #L31e854.  v6:= new `s3.z`;
  #L31e858.  v0:= 4I;
  #L31e85a.  call `<init>`(v6, v0) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L31e860.  v4.`g2.e.g` @type ^`s3.z` := v6 @kind object;
  #L31e864.  v6:= new `s3.z`;
  #L31e868.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L31e86e.  v1:= temp @kind object;
  #L31e870.  v2:= -1I;
  #L31e872.  call temp:= `putInt`(v1, v2) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L31e878.  v1:= temp @kind object;
  #L31e87a.  call temp:= `array`(v1) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L31e880.  v1:= temp @kind object;
  #L31e882.  call `<init>`(v6, v1) @signature `Ls3/z;.<init>:([B)V` @kind direct;
  #L31e888.  v4.`g2.e.h` @type ^`s3.z` := v6 @kind object;
  #L31e88c.  v6:= new `s3.z`;
  #L31e890.  call `<init>`(v6, v0) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L31e896.  v4.`g2.e.i` @type ^`s3.z` := v6 @kind object;
  #L31e89a.  v6:= new `s3.z`;
  #L31e89e.  v1:= `@@s3.v.a` @type ^`byte`[] @kind object;
  #L31e8a2.  call `<init>`(v6, v1) @signature `Ls3/z;.<init>:([B)V` @kind direct;
  #L31e8a8.  v4.`g2.e.e` @type ^`s3.z` := v6 @kind object;
  #L31e8ac.  v6:= new `s3.z`;
  #L31e8b0.  call `<init>`(v6, v0) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L31e8b6.  v4.`g2.e.f` @type ^`s3.z` := v6 @kind object;
  #L31e8ba.  v6:= new `s3.z`;
  #L31e8be.  call `<init>`(v6) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L31e8c4.  v4.`g2.e.j` @type ^`s3.z` := v6 @kind object;
  #L31e8c8.  v6:= new `s3.z`;
  #L31e8cc.  call `<init>`(v6) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L31e8d2.  v4.`g2.e.k` @type ^`s3.z` := v6 @kind object;
  #L31e8d6.  v6:= new `s3.z`;
  #L31e8da.  v0:= 8I;
  #L31e8de.  call `<init>`(v6, v0) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L31e8e4.  v4.`g2.e.l` @type ^`s3.z` := v6 @kind object;
  #L31e8e8.  v6:= new `s3.z`;
  #L31e8ec.  call `<init>`(v6) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L31e8f2.  v4.`g2.e.m` @type ^`s3.z` := v6 @kind object;
  #L31e8f6.  v6:= new `s3.z`;
  #L31e8fa.  call `<init>`(v6) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L31e900.  v4.`g2.e.n` @type ^`s3.z` := v6 @kind object;
  #L31e904.  v5:= new `int`[v5];
  #L31e908.  v4.`g2.e.L` @type ^`int`[] := v5 @kind object;
  #L31e90c.  return @kind void;
}
procedure `a2.l`[] `B`() @signature `Lg2/e;.B:()[La2/l;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L31d3bc.  v0:= 1I;
  #L31d3be.  v0:= new `a2.l`[v0];
  #L31d3c2.  v1:= new `g2.e`;
  #L31d3c6.  call `<init>`(v1) @signature `Lg2/e;.<init>:()V` @kind direct;
  #L31d3cc.  v2:= 0I;
  #L31d3ce.  v0[v2]:= v1 @kind object;
  #L31d3d2.  return v0 @kind object;
}
procedure `boolean` `C`(`g2.e` v5 @kind this, `a2.z` v6 @kind object, `long` v7 ) @signature `Lg2/e;.C:(La2/z;J)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31dad4.  v0:= v5.`g2.e.y` @type ^`boolean` @kind boolean;
  #L31dad8.  v1:= 1I;
  #L31dada.  v2:= 0I;
  #L31dadc.  if v0 == 0 then goto L31daf2;
  #L31dae0.  v5.`g2.e.A` @type ^`long` := v7 @kind wide;
  #L31dae4.  v7:= v5.`g2.e.z` @type ^`long` @kind wide;
  #L31dae8.  v6.`a2.z.a` @type ^`long` := v7 @kind wide;
  #L31daec.  v5.`g2.e.y` @type ^`boolean` := v2 @kind boolean;
  #L31daf0.  return v1;
  #L31daf2.  v7:= v5.`g2.e.v` @type ^`boolean` @kind boolean;
  #L31daf6.  if v7 == 0 then goto L31db14;
  #L31dafa.  v7:= v5.`g2.e.A` @type ^`long` @kind wide;
  #L31dafe.  v3:= -1L;
  #L31db02.  v0:= lcmp(v7, v3);
  #L31db06.  if v0 == 0 then goto L31db14;
  #L31db0a.  v6.`a2.z.a` @type ^`long` := v7 @kind wide;
  #L31db0e.  v5.`g2.e.A` @type ^`long` := v3 @kind wide;
  #L31db12.  return v1;
  #L31db14.  return v2;
}
procedure `void` `D`(`g2.e` v3 @kind this, `a2.m` v4 @kind object, `int` v5 ) @signature `Lg2/e;.D:(La2/m;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L31fccc.  v0:= v3.`g2.e.g` @type ^`s3.z` @kind object;
  #L31fcd0.  call temp:= `f`(v0) @signature `Ls3/z;.f:()I` @kind virtual;
  #L31fcd6.  v0:= temp;
  #L31fcd8.  if v0 < v5 then goto L31fcde;
  #L31fcdc.  return @kind void;
  #L31fcde.  v0:= v3.`g2.e.g` @type ^`s3.z` @kind object;
  #L31fce2.  call temp:= `b`(v0) @signature `Ls3/z;.b:()I` @kind virtual;
  #L31fce8.  v0:= temp;
  #L31fcea.  if v0 >= v5 then goto L31fd0c;
  #L31fcee.  v0:= v3.`g2.e.g` @type ^`s3.z` @kind object;
  #L31fcf2.  call temp:= `b`(v0) @signature `Ls3/z;.b:()I` @kind virtual;
  #L31fcf8.  v1:= temp;
  #L31fcfa.  v1:= v1 * 2;
  #L31fcfe.  call temp:= `max`(v1, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L31fd04.  v1:= temp;
  #L31fd06.  call `c`(v0, v1) @signature `Ls3/z;.c:(I)V` @kind virtual;
  #L31fd0c.  v0:= v3.`g2.e.g` @type ^`s3.z` @kind object;
  #L31fd10.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31fd16.  v0:= temp @kind object;
  #L31fd18.  v1:= v3.`g2.e.g` @type ^`s3.z` @kind object;
  #L31fd1c.  call temp:= `f`(v1) @signature `Ls3/z;.f:()I` @kind virtual;
  #L31fd22.  v1:= temp;
  #L31fd24.  v2:= v3.`g2.e.g` @type ^`s3.z` @kind object;
  #L31fd28.  call temp:= `f`(v2) @signature `Ls3/z;.f:()I` @kind virtual;
  #L31fd2e.  v2:= temp;
  #L31fd30.  v2:= v5 - v2 @kind int;
  #L31fd34.  call `readFully`(v4, v0, v1, v2) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L31fd3a.  v4:= v3.`g2.e.g` @type ^`s3.z` @kind object;
  #L31fd3e.  call `N`(v4, v5) @signature `Ls3/z;.N:(I)V` @kind virtual;
  #L31fd44.  return @kind void;
}
procedure `void` `E`(`g2.e` v2 @kind this) @signature `Lg2/e;.E:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L31fd6c.  v0:= 0I;
  #L31fd6e.  v2.`g2.e.S` @type ^`int` := v0;
  #L31fd72.  v2.`g2.e.T` @type ^`int` := v0;
  #L31fd76.  v2.`g2.e.U` @type ^`int` := v0;
  #L31fd7a.  v2.`g2.e.V` @type ^`boolean` := v0 @kind boolean;
  #L31fd7e.  v2.`g2.e.W` @type ^`boolean` := v0 @kind boolean;
  #L31fd82.  v2.`g2.e.X` @type ^`boolean` := v0 @kind boolean;
  #L31fd86.  v2.`g2.e.Y` @type ^`int` := v0;
  #L31fd8a.  v2.`g2.e.Z` @type ^`byte` := v0 @kind byte;
  #L31fd8e.  v2.`g2.e.a0` @type ^`boolean` := v0 @kind boolean;
  #L31fd92.  v1:= v2.`g2.e.j` @type ^`s3.z` @kind object;
  #L31fd96.  call `K`(v1, v0) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L31fd9c.  return @kind void;
}
procedure `long` `F`(`g2.e` v6 @kind this, `long` v7 ) @signature `Lg2/e;.F:(J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L31e614.  v2:= v6.`g2.e.r` @type ^`long` @kind wide;
  #L31e618.  v0:= -4.9E-324D;
  #L31e622.  v4:= lcmp(v2, v0);
  #L31e626.  if v4 == 0 then goto L31e63a;
  #L31e62a.  v4:= 1000L;
  #L31e62e.  v0:= v7 @kind wide;
  #L31e630.  call temp:= `M0`(v0, v2, v4) @signature `Ls3/l0;.M0:(JJJ)J` @kind static;
  #L31e636.  v7:= temp @kind wide;
  #L31e638.  return v7 @kind wide;
  #L31e63a.  v7:= 0I;
  #L31e63c.  v8:= "Can't scale timecode prior to timecodeScale being set." @kind object;
  #L31e640.  call temp:= `a`(v8, v7) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31e646.  v7:= temp @kind object;
  #L31e648.  throw v7;
}
procedure `void` `G`(`java.lang.String` v5 @kind object, `long` v6 , `byte`[] v8 @kind object) @signature `Lg2/e;.G:(Ljava/lang/String;J[B)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31fe1c.  call temp:= `hashCode`(v5) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L31fe22.  call temp:= `hashCode`(v5) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L31fe28.  v0:= temp;
  #L31fe2a.  v1:= 0I;
  #L31fe2c.  v2:= -1I;
  #L31fe2e.  goto L31fed0;
  #L31fe34.  goto L31fe76;
  #L31fe36.  v0:= "S_TEXT/UTF8" @kind object;
  #L31fe3a.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31fe40.  v5:= temp;
  #L31fe42.  if v5 != 0 then goto L31fe48;
  #L31fe46.  goto L31fe76;
  #L31fe48.  v2:= 2I;
  #L31fe4a.  goto L31fe76;
  #L31fe4c.  v0:= "S_TEXT/WEBVTT" @kind object;
  #L31fe50.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31fe56.  v5:= temp;
  #L31fe58.  if v5 != 0 then goto L31fe5e;
  #L31fe5c.  goto L31fe76;
  #L31fe5e.  v2:= 1I;
  #L31fe60.  goto L31fe76;
  #L31fe62.  v0:= "S_TEXT/ASS" @kind object;
  #L31fe66.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31fe6c.  v5:= temp;
  #L31fe6e.  if v5 != 0 then goto L31fe74;
  #L31fe72.  goto L31fe76;
  #L31fe74.  v2:= 0I;
  #L31fe76.  v3:= 1000L;
  #L31fe7a.  goto L31feec;
  #L31fe80.  v5:= new `java.lang.IllegalArgumentException`;
  #L31fe84.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L31fe8a.  throw v5;
  #L31fe8c.  v5:= "%02d:%02d:%02d,%03d" @kind object;
  #L31fe90.  call temp:= `t`(v6, v5, v3) @signature `Lg2/e;.t:(JLjava/lang/String;J)[B` @kind static;
  #L31fe96.  v5:= temp @kind object;
  #L31fe98.  v6:= 19I;
  #L31fe9c.  goto L31fec4;
  #L31fe9e.  v5:= "%02d:%02d:%02d.%03d" @kind object;
  #L31fea2.  call temp:= `t`(v6, v5, v3) @signature `Lg2/e;.t:(JLjava/lang/String;J)[B` @kind static;
  #L31fea8.  v5:= temp @kind object;
  #L31feaa.  v6:= 25I;
  #L31feae.  goto L31fec4;
  #L31feb0.  v2:= 10000L;
  #L31feb4.  v5:= "%01d:%02d:%02d:%02d" @kind object;
  #L31feb8.  call temp:= `t`(v6, v5, v2) @signature `Lg2/e;.t:(JLjava/lang/String;J)[B` @kind static;
  #L31febe.  v5:= temp @kind object;
  #L31fec0.  v6:= 21I;
  #L31fec4.  v7:= length @variable v5;
  #L31fec6.  call `arraycopy`(v5, v1, v8, v6, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L31fecc.  return @kind void;
  #L31fece.  
  #L31fed0.  switch v0
                  | 738597099 => goto L31fe62
                  | 1045209816 => goto L31fe4c
                  | 1422270023 => goto L31fe36
                  | else => goto L31fe34;
  #L31feec.  switch v2
                  | 0 => goto L31feb0
                  | 1 => goto L31fe9e
                  | 2 => goto L31fe8c
                  | else => goto L31fe80;
}
procedure `int` `J`(`g2.e` v10 @kind this, `a2.m` v11 @kind object, `g2.e$c` v12 @kind object, `int` v13 , `boolean` v14 ) @signature `Lg2/e;.J:(La2/m;Lg2/e$c;IZ)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L31e010.  v0:= v12.`g2.e$c.b` @type ^`java.lang.String` @kind object;
  #L31e014.  v1:= "S_TEXT/UTF8" @kind object;
  #L31e018.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31e01e.  v0:= temp;
  #L31e020.  if v0 == 0 then goto L31e038;
  #L31e024.  v12:= `@@g2.e.c0` @type ^`byte`[] @kind object;
  #L31e028.  call `K`(v10, v11, v12, v13) @signature `Lg2/e;.K:(La2/m;[BI)V` @kind direct;
  #L31e02e.  call temp:= `r`(v10) @signature `Lg2/e;.r:()I` @kind direct;
  #L31e034.  v11:= temp;
  #L31e036.  return v11;
  #L31e038.  v0:= v12.`g2.e$c.b` @type ^`java.lang.String` @kind object;
  #L31e03c.  v1:= "S_TEXT/ASS" @kind object;
  #L31e040.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31e046.  v0:= temp;
  #L31e048.  if v0 == 0 then goto L31e058;
  #L31e04c.  v12:= `@@g2.e.e0` @type ^`byte`[] @kind object;
  #L31e050.  call `K`(v10, v11, v12, v13) @signature `Lg2/e;.K:(La2/m;[BI)V` @kind direct;
  #L31e056.  goto L31e02e;
  #L31e058.  v0:= v12.`g2.e$c.b` @type ^`java.lang.String` @kind object;
  #L31e05c.  v1:= "S_TEXT/WEBVTT" @kind object;
  #L31e060.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31e066.  v0:= temp;
  #L31e068.  if v0 == 0 then goto L31e078;
  #L31e06c.  v12:= `@@g2.e.f0` @type ^`byte`[] @kind object;
  #L31e070.  call `K`(v10, v11, v12, v13) @signature `Lg2/e;.K:(La2/m;[BI)V` @kind direct;
  #L31e076.  goto L31e02e;
  #L31e078.  v0:= v12.`g2.e$c.X` @type ^`a2.d0` @kind object;
  #L31e07c.  v1:= v10.`g2.e.V` @type ^`boolean` @kind boolean;
  #L31e080.  v2:= 4I;
  #L31e082.  v3:= 2I;
  #L31e084.  v4:= 1I;
  #L31e086.  v5:= 0I;
  #L31e088.  if v1 != 0 then goto L31e3ee;
  #L31e08c.  v1:= v12.`g2.e$c.h` @type ^`boolean` @kind boolean;
  #L31e090.  if v1 == 0 then goto L31e31a;
  #L31e094.  v1:= v10.`g2.e.O` @type ^`int`;
  #L31e098.  v6:= -1073741825I;
  #L31e09e.  v1:= v1 ^& v6 @kind int;
  #L31e0a0.  v10.`g2.e.O` @type ^`int` := v1;
  #L31e0a4.  v1:= v10.`g2.e.W` @type ^`boolean` @kind boolean;
  #L31e0a8.  v6:= 128I;
  #L31e0ac.  if v1 != 0 then goto L31e10c;
  #L31e0b0.  v1:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e0b4.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31e0ba.  v1:= temp @kind object;
  #L31e0bc.  call `readFully`(v11, v1, v5, v4) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L31e0c2.  v1:= v10.`g2.e.S` @type ^`int`;
  #L31e0c6.  v1:= v1 + v4 @kind int;
  #L31e0c8.  v10.`g2.e.S` @type ^`int` := v1;
  #L31e0cc.  v1:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e0d0.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31e0d6.  v1:= temp @kind object;
  #L31e0d8.  v1:= v1[v5] @kind byte;
  #L31e0dc.  v1:= v1 ^& v6 @kind int;
  #L31e0de.  if v1 == v6 then goto L31e0fc;
  #L31e0e2.  v1:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e0e6.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31e0ec.  v1:= temp @kind object;
  #L31e0ee.  v1:= v1[v5] @kind byte;
  #L31e0f2.  v10.`g2.e.Z` @type ^`byte` := v1 @kind byte;
  #L31e0f6.  v10.`g2.e.W` @type ^`boolean` := v4 @kind boolean;
  #L31e0fa.  goto L31e10c;
  #L31e0fc.  v11:= 0I;
  #L31e0fe.  v12:= "Extension bit is set in signal byte" @kind object;
  #L31e102.  call temp:= `a`(v12, v11) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31e108.  v11:= temp @kind object;
  #L31e10a.  throw v11;
  #L31e10c.  v1:= v10.`g2.e.Z` @type ^`byte` @kind byte;
  #L31e110.  v7:= v1 ^& 1;
  #L31e114.  if v7 != v4 then goto L31e11c;
  #L31e118.  v7:= 1I;
  #L31e11a.  goto L31e11e;
  #L31e11c.  v7:= 0I;
  #L31e11e.  if v7 == 0 then goto L31e32e;
  #L31e122.  v1:= v1 ^& v3 @kind int;
  #L31e124.  if v1 != v3 then goto L31e12c;
  #L31e128.  v1:= 1I;
  #L31e12a.  goto L31e12e;
  #L31e12c.  v1:= 0I;
  #L31e12e.  v7:= v10.`g2.e.O` @type ^`int`;
  #L31e132.  v8:= 2.0F;
  #L31e136.  v7:= v7 ^| v8 @kind int;
  #L31e138.  v10.`g2.e.O` @type ^`int` := v7;
  #L31e13c.  v7:= v10.`g2.e.a0` @type ^`boolean` @kind boolean;
  #L31e140.  if v7 != 0 then goto L31e1c0;
  #L31e144.  v7:= v10.`g2.e.l` @type ^`s3.z` @kind object;
  #L31e148.  call temp:= `d`(v7) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31e14e.  v7:= temp @kind object;
  #L31e150.  v8:= 8I;
  #L31e154.  call `readFully`(v11, v7, v5, v8) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L31e15a.  v7:= v10.`g2.e.S` @type ^`int`;
  #L31e15e.  v7:= v7 + v8 @kind int;
  #L31e160.  v10.`g2.e.S` @type ^`int` := v7;
  #L31e164.  v10.`g2.e.a0` @type ^`boolean` := v4 @kind boolean;
  #L31e168.  v7:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e16c.  call temp:= `d`(v7) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31e172.  v7:= temp @kind object;
  #L31e174.  if v1 == 0 then goto L31e17a;
  #L31e178.  goto L31e17c;
  #L31e17a.  v6:= 0I;
  #L31e17c.  v6:= v6 ^| v8 @kind int;
  #L31e17e.  v6:= (`byte`) v6 @kind i2b;
  #L31e180.  v7[v5]:= v6 @kind byte;
  #L31e184.  v6:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e188.  call `O`(v6, v5) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L31e18e.  v6:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e192.  call `a`(v0, v6, v4, v4) @signature `La2/d0;.a:(Ls3/z;II)V` @kind interface;
  #L31e198.  v6:= v10.`g2.e.T` @type ^`int`;
  #L31e19c.  v6:= v6 + v4 @kind int;
  #L31e19e.  v10.`g2.e.T` @type ^`int` := v6;
  #L31e1a2.  v6:= v10.`g2.e.l` @type ^`s3.z` @kind object;
  #L31e1a6.  call `O`(v6, v5) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L31e1ac.  v6:= v10.`g2.e.l` @type ^`s3.z` @kind object;
  #L31e1b0.  call `a`(v0, v6, v8, v4) @signature `La2/d0;.a:(Ls3/z;II)V` @kind interface;
  #L31e1b6.  v6:= v10.`g2.e.T` @type ^`int`;
  #L31e1ba.  v6:= v6 + v8 @kind int;
  #L31e1bc.  v10.`g2.e.T` @type ^`int` := v6;
  #L31e1c0.  if v1 == 0 then goto L31e32e;
  #L31e1c4.  v1:= v10.`g2.e.X` @type ^`boolean` @kind boolean;
  #L31e1c8.  if v1 != 0 then goto L31e206;
  #L31e1cc.  v1:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e1d0.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31e1d6.  v1:= temp @kind object;
  #L31e1d8.  call `readFully`(v11, v1, v5, v4) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L31e1de.  v1:= v10.`g2.e.S` @type ^`int`;
  #L31e1e2.  v1:= v1 + v4 @kind int;
  #L31e1e4.  v10.`g2.e.S` @type ^`int` := v1;
  #L31e1e8.  v1:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e1ec.  call `O`(v1, v5) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L31e1f2.  v1:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e1f6.  call temp:= `C`(v1) @signature `Ls3/z;.C:()I` @kind virtual;
  #L31e1fc.  v1:= temp;
  #L31e1fe.  v10.`g2.e.Y` @type ^`int` := v1;
  #L31e202.  v10.`g2.e.X` @type ^`boolean` := v4 @kind boolean;
  #L31e206.  v1:= v10.`g2.e.Y` @type ^`int`;
  #L31e20a.  v1:= v1 * 4;
  #L31e20e.  v6:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e212.  call `K`(v6, v1) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L31e218.  v6:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e21c.  call temp:= `d`(v6) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31e222.  v6:= temp @kind object;
  #L31e224.  call `readFully`(v11, v6, v5, v1) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L31e22a.  v6:= v10.`g2.e.S` @type ^`int`;
  #L31e22e.  v6:= v6 + v1 @kind int;
  #L31e230.  v10.`g2.e.S` @type ^`int` := v6;
  #L31e234.  v1:= v10.`g2.e.Y` @type ^`int`;
  #L31e238.  v1:= v1 / v3 @kind int;
  #L31e23a.  v1:= v1 + v4 @kind int;
  #L31e23c.  v1:= (`short`) v1 @kind i2s;
  #L31e23e.  v6:= v1 * 6;
  #L31e242.  v6:= v6 + v3 @kind int;
  #L31e244.  v7:= v10.`g2.e.o` @type ^`java.nio.ByteBuffer` @kind object;
  #L31e248.  if v7 == 0 then goto L31e258;
  #L31e24c.  call temp:= `capacity`(v7) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L31e252.  v7:= temp;
  #L31e254.  if v7 >= v6 then goto L31e264;
  #L31e258.  call temp:= `allocate`(v6) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L31e25e.  v7:= temp @kind object;
  #L31e260.  v10.`g2.e.o` @type ^`java.nio.ByteBuffer` := v7 @kind object;
  #L31e264.  v7:= v10.`g2.e.o` @type ^`java.nio.ByteBuffer` @kind object;
  #L31e268.  call temp:= `position`(v7, v5) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L31e26e.  v7:= v10.`g2.e.o` @type ^`java.nio.ByteBuffer` @kind object;
  #L31e272.  call temp:= `putShort`(v7, v1) @signature `Ljava/nio/ByteBuffer;.putShort:(S)Ljava/nio/ByteBuffer;` @kind virtual;
  #L31e278.  v1:= 0I;
  #L31e27a.  v7:= 0I;
  #L31e27c.  v8:= v10.`g2.e.Y` @type ^`int`;
  #L31e280.  if v1 >= v8 then goto L31e2c0;
  #L31e284.  v8:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e288.  call temp:= `G`(v8) @signature `Ls3/z;.G:()I` @kind virtual;
  #L31e28e.  v8:= temp;
  #L31e290.  v9:= v1 %% 2;
  #L31e294.  if v9 != 0 then goto L31e2aa;
  #L31e298.  v9:= v10.`g2.e.o` @type ^`java.nio.ByteBuffer` @kind object;
  #L31e29c.  v7:= v8 - v7 @kind int;
  #L31e2a0.  v7:= (`short`) v7 @kind i2s;
  #L31e2a2.  call temp:= `putShort`(v9, v7) @signature `Ljava/nio/ByteBuffer;.putShort:(S)Ljava/nio/ByteBuffer;` @kind virtual;
  #L31e2a8.  goto L31e2b8;
  #L31e2aa.  v9:= v10.`g2.e.o` @type ^`java.nio.ByteBuffer` @kind object;
  #L31e2ae.  v7:= v8 - v7 @kind int;
  #L31e2b2.  call temp:= `putInt`(v9, v7) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L31e2b8.  v1:= v1 + 1;
  #L31e2bc.  v7:= v8;
  #L31e2be.  goto L31e27c;
  #L31e2c0.  v1:= v10.`g2.e.S` @type ^`int`;
  #L31e2c4.  v1:= v13 - v1 @kind int;
  #L31e2c8.  v1:= v1 - v7 @kind int;
  #L31e2ca.  v8:= v8 %% v3 @kind int;
  #L31e2cc.  v7:= v10.`g2.e.o` @type ^`java.nio.ByteBuffer` @kind object;
  #L31e2d0.  if v8 != v4 then goto L31e2dc;
  #L31e2d4.  call temp:= `putInt`(v7, v1) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L31e2da.  goto L31e2ee;
  #L31e2dc.  v1:= (`short`) v1 @kind i2s;
  #L31e2de.  call temp:= `putShort`(v7, v1) @signature `Ljava/nio/ByteBuffer;.putShort:(S)Ljava/nio/ByteBuffer;` @kind virtual;
  #L31e2e4.  v1:= v10.`g2.e.o` @type ^`java.nio.ByteBuffer` @kind object;
  #L31e2e8.  call temp:= `putInt`(v1, v5) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L31e2ee.  v1:= v10.`g2.e.m` @type ^`s3.z` @kind object;
  #L31e2f2.  v7:= v10.`g2.e.o` @type ^`java.nio.ByteBuffer` @kind object;
  #L31e2f6.  call temp:= `array`(v7) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L31e2fc.  v7:= temp @kind object;
  #L31e2fe.  call `M`(v1, v7, v6) @signature `Ls3/z;.M:([BI)V` @kind virtual;
  #L31e304.  v1:= v10.`g2.e.m` @type ^`s3.z` @kind object;
  #L31e308.  call `a`(v0, v1, v6, v4) @signature `La2/d0;.a:(Ls3/z;II)V` @kind interface;
  #L31e30e.  v1:= v10.`g2.e.T` @type ^`int`;
  #L31e312.  v1:= v1 + v6 @kind int;
  #L31e314.  v10.`g2.e.T` @type ^`int` := v1;
  #L31e318.  goto L31e32e;
  #L31e31a.  v1:= v12.`g2.e$c.i` @type ^`byte`[] @kind object;
  #L31e31e.  if v1 == 0 then goto L31e32e;
  #L31e322.  v6:= v10.`g2.e.j` @type ^`s3.z` @kind object;
  #L31e326.  v7:= length @variable v1;
  #L31e328.  call `M`(v6, v1, v7) @signature `Ls3/z;.M:([BI)V` @kind virtual;
  #L31e32e.  call temp:= `e`(v12, v14) @signature `Lg2/e$c;.e:(Lg2/e$c;Z)Z` @kind static;
  #L31e334.  v14:= temp;
  #L31e336.  if v14 == 0 then goto L31e3ea;
  #L31e33a.  v14:= v10.`g2.e.O` @type ^`int`;
  #L31e33e.  v1:= 268435456I;
  #L31e342.  v14:= v14 ^| v1 @kind int;
  #L31e344.  v10.`g2.e.O` @type ^`int` := v14;
  #L31e348.  v14:= v10.`g2.e.n` @type ^`s3.z` @kind object;
  #L31e34c.  call `K`(v14, v5) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L31e352.  v14:= v10.`g2.e.j` @type ^`s3.z` @kind object;
  #L31e356.  call temp:= `f`(v14) @signature `Ls3/z;.f:()I` @kind virtual;
  #L31e35c.  v14:= temp;
  #L31e35e.  v14:= v14 + v13 @kind int;
  #L31e360.  v1:= v10.`g2.e.S` @type ^`int`;
  #L31e364.  v14:= v14 - v1 @kind int;
  #L31e366.  v1:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e36a.  call `K`(v1, v2) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L31e370.  v1:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e374.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31e37a.  v1:= temp @kind object;
  #L31e37c.  v6:= v14 ^> 24;
  #L31e380.  v6:= v6 ^& 255;
  #L31e384.  v6:= (`byte`) v6 @kind i2b;
  #L31e386.  v1[v5]:= v6 @kind byte;
  #L31e38a.  v1:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e38e.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31e394.  v1:= temp @kind object;
  #L31e396.  v6:= v14 ^> 16;
  #L31e39a.  v6:= v6 ^& 255;
  #L31e39e.  v6:= (`byte`) v6 @kind i2b;
  #L31e3a0.  v1[v4]:= v6 @kind byte;
  #L31e3a4.  v1:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e3a8.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31e3ae.  v1:= temp @kind object;
  #L31e3b0.  v6:= v14 ^> 8;
  #L31e3b4.  v6:= v6 ^& 255;
  #L31e3b8.  v6:= (`byte`) v6 @kind i2b;
  #L31e3ba.  v1[v3]:= v6 @kind byte;
  #L31e3be.  v1:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e3c2.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31e3c8.  v1:= temp @kind object;
  #L31e3ca.  v6:= 3I;
  #L31e3cc.  v14:= v14 ^& 255;
  #L31e3d0.  v14:= (`byte`) v14 @kind i2b;
  #L31e3d2.  v1[v6]:= v14 @kind byte;
  #L31e3d6.  v14:= v10.`g2.e.g` @type ^`s3.z` @kind object;
  #L31e3da.  call `a`(v0, v14, v2, v3) @signature `La2/d0;.a:(Ls3/z;II)V` @kind interface;
  #L31e3e0.  v14:= v10.`g2.e.T` @type ^`int`;
  #L31e3e4.  v14:= v14 + v2 @kind int;
  #L31e3e6.  v10.`g2.e.T` @type ^`int` := v14;
  #L31e3ea.  v10.`g2.e.V` @type ^`boolean` := v4 @kind boolean;
  #L31e3ee.  v14:= v10.`g2.e.j` @type ^`s3.z` @kind object;
  #L31e3f2.  call temp:= `f`(v14) @signature `Ls3/z;.f:()I` @kind virtual;
  #L31e3f8.  v14:= temp;
  #L31e3fa.  v13:= v13 + v14 @kind int;
  #L31e3fc.  v14:= v12.`g2.e$c.b` @type ^`java.lang.String` @kind object;
  #L31e400.  v1:= "V_MPEG4/ISO/AVC" @kind object;
  #L31e404.  call temp:= `equals`(v1, v14) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31e40a.  v14:= temp;
  #L31e40c.  if v14 != 0 then goto L31e47c;
  #L31e410.  v14:= v12.`g2.e$c.b` @type ^`java.lang.String` @kind object;
  #L31e414.  v1:= "V_MPEGH/ISO/HEVC" @kind object;
  #L31e418.  call temp:= `equals`(v1, v14) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31e41e.  v14:= temp;
  #L31e420.  if v14 == 0 then goto L31e426;
  #L31e424.  goto L31e47c;
  #L31e426.  v14:= v12.`g2.e$c.T` @type ^`a2.e0` @kind object;
  #L31e42a.  if v14 == 0 then goto L31e452;
  #L31e42e.  v14:= v10.`g2.e.j` @type ^`s3.z` @kind object;
  #L31e432.  call temp:= `f`(v14) @signature `Ls3/z;.f:()I` @kind virtual;
  #L31e438.  v14:= temp;
  #L31e43a.  if v14 != 0 then goto L31e440;
  #L31e43e.  goto L31e442;
  #L31e440.  v4:= 0I;
  #L31e442.  call `f`(v4) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L31e448.  v14:= v12.`g2.e$c.T` @type ^`a2.e0` @kind object;
  #L31e44c.  call `d`(v14, v11) @signature `La2/e0;.d:(La2/m;)V` @kind virtual;
  #L31e452.  v14:= v10.`g2.e.S` @type ^`int`;
  #L31e456.  if v14 >= v13 then goto L31e51e;
  #L31e45a.  v14:= v13 - v14 @kind int;
  #L31e45e.  call temp:= `L`(v10, v11, v0, v14) @signature `Lg2/e;.L:(La2/m;La2/d0;I)I` @kind direct;
  #L31e464.  v14:= temp;
  #L31e466.  v1:= v10.`g2.e.S` @type ^`int`;
  #L31e46a.  v1:= v1 + v14 @kind int;
  #L31e46c.  v10.`g2.e.S` @type ^`int` := v1;
  #L31e470.  v1:= v10.`g2.e.T` @type ^`int`;
  #L31e474.  v1:= v1 + v14 @kind int;
  #L31e476.  v10.`g2.e.T` @type ^`int` := v1;
  #L31e47a.  goto L31e452;
  #L31e47c.  v14:= v10.`g2.e.f` @type ^`s3.z` @kind object;
  #L31e480.  call temp:= `d`(v14) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31e486.  v14:= temp @kind object;
  #L31e488.  v14[v5]:= v5 @kind byte;
  #L31e48c.  v14[v4]:= v5 @kind byte;
  #L31e490.  v14[v3]:= v5 @kind byte;
  #L31e494.  v1:= v12.`g2.e$c.Y` @type ^`int`;
  #L31e498.  v3:= v1 - 4;
  #L31e49c.  v4:= v10.`g2.e.S` @type ^`int`;
  #L31e4a0.  if v4 >= v13 then goto L31e51e;
  #L31e4a4.  v4:= v10.`g2.e.U` @type ^`int`;
  #L31e4a8.  if v4 != 0 then goto L31e4f6;
  #L31e4ac.  call `M`(v10, v11, v14, v3, v1) @signature `Lg2/e;.M:(La2/m;[BII)V` @kind direct;
  #L31e4b2.  v4:= v10.`g2.e.S` @type ^`int`;
  #L31e4b6.  v4:= v4 + v1 @kind int;
  #L31e4b8.  v10.`g2.e.S` @type ^`int` := v4;
  #L31e4bc.  v4:= v10.`g2.e.f` @type ^`s3.z` @kind object;
  #L31e4c0.  call `O`(v4, v5) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L31e4c6.  v4:= v10.`g2.e.f` @type ^`s3.z` @kind object;
  #L31e4ca.  call temp:= `G`(v4) @signature `Ls3/z;.G:()I` @kind virtual;
  #L31e4d0.  v4:= temp;
  #L31e4d2.  v10.`g2.e.U` @type ^`int` := v4;
  #L31e4d6.  v4:= v10.`g2.e.e` @type ^`s3.z` @kind object;
  #L31e4da.  call `O`(v4, v5) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L31e4e0.  v4:= v10.`g2.e.e` @type ^`s3.z` @kind object;
  #L31e4e4.  call `c`(v0, v4, v2) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L31e4ea.  v4:= v10.`g2.e.T` @type ^`int`;
  #L31e4ee.  v4:= v4 + v2 @kind int;
  #L31e4f0.  v10.`g2.e.T` @type ^`int` := v4;
  #L31e4f4.  goto L31e49c;
  #L31e4f6.  call temp:= `L`(v10, v11, v0, v4) @signature `Lg2/e;.L:(La2/m;La2/d0;I)I` @kind direct;
  #L31e4fc.  v4:= temp;
  #L31e4fe.  v6:= v10.`g2.e.S` @type ^`int`;
  #L31e502.  v6:= v6 + v4 @kind int;
  #L31e504.  v10.`g2.e.S` @type ^`int` := v6;
  #L31e508.  v6:= v10.`g2.e.T` @type ^`int`;
  #L31e50c.  v6:= v6 + v4 @kind int;
  #L31e50e.  v10.`g2.e.T` @type ^`int` := v6;
  #L31e512.  v6:= v10.`g2.e.U` @type ^`int`;
  #L31e516.  v6:= v6 - v4 @kind int;
  #L31e518.  v10.`g2.e.U` @type ^`int` := v6;
  #L31e51c.  goto L31e49c;
  #L31e51e.  v11:= v12.`g2.e$c.b` @type ^`java.lang.String` @kind object;
  #L31e522.  v12:= "A_VORBIS" @kind object;
  #L31e526.  call temp:= `equals`(v12, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31e52c.  v11:= temp;
  #L31e52e.  if v11 == 0 then goto L31e550;
  #L31e532.  v11:= v10.`g2.e.h` @type ^`s3.z` @kind object;
  #L31e536.  call `O`(v11, v5) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L31e53c.  v11:= v10.`g2.e.h` @type ^`s3.z` @kind object;
  #L31e540.  call `c`(v0, v11, v2) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L31e546.  v11:= v10.`g2.e.T` @type ^`int`;
  #L31e54a.  v11:= v11 + v2 @kind int;
  #L31e54c.  v10.`g2.e.T` @type ^`int` := v11;
  #L31e550.  call temp:= `r`(v10) @signature `Lg2/e;.r:()I` @kind direct;
  #L31e556.  v11:= temp;
  #L31e558.  return v11;
}
procedure `void` `K`(`g2.e` v4 @kind this, `a2.m` v5 @kind object, `byte`[] v6 @kind object, `int` v7 ) @signature `Lg2/e;.K:(La2/m;[BI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L320118.  v0:= length @variable v6;
  #L32011a.  v0:= v0 + v7 @kind int;
  #L32011c.  v1:= v4.`g2.e.k` @type ^`s3.z` @kind object;
  #L320120.  call temp:= `b`(v1) @signature `Ls3/z;.b:()I` @kind virtual;
  #L320126.  v1:= temp;
  #L320128.  v2:= 0I;
  #L32012a.  if v1 >= v0 then goto L320146;
  #L32012e.  v1:= v4.`g2.e.k` @type ^`s3.z` @kind object;
  #L320132.  v3:= v0 + v7 @kind int;
  #L320136.  call temp:= `copyOf`(v6, v3) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L32013c.  v3:= temp @kind object;
  #L32013e.  call `L`(v1, v3) @signature `Ls3/z;.L:([B)V` @kind virtual;
  #L320144.  goto L32015a;
  #L320146.  v1:= v4.`g2.e.k` @type ^`s3.z` @kind object;
  #L32014a.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L320150.  v1:= temp @kind object;
  #L320152.  v3:= length @variable v6;
  #L320154.  call `arraycopy`(v6, v2, v1, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L32015a.  v1:= v4.`g2.e.k` @type ^`s3.z` @kind object;
  #L32015e.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L320164.  v1:= temp @kind object;
  #L320166.  v6:= length @variable v6;
  #L320168.  call `readFully`(v5, v1, v6, v7) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L32016e.  v5:= v4.`g2.e.k` @type ^`s3.z` @kind object;
  #L320172.  call `O`(v5, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L320178.  v5:= v4.`g2.e.k` @type ^`s3.z` @kind object;
  #L32017c.  call `N`(v5, v0) @signature `Ls3/z;.N:(I)V` @kind virtual;
  #L320182.  return @kind void;
}
procedure `int` `L`(`g2.e` v1 @kind this, `a2.m` v2 @kind object, `a2.d0` v3 @kind object, `int` v4 ) @signature `Lg2/e;.L:(La2/m;La2/d0;I)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L31e56c.  v0:= v1.`g2.e.j` @type ^`s3.z` @kind object;
  #L31e570.  call temp:= `a`(v0) @signature `Ls3/z;.a:()I` @kind virtual;
  #L31e576.  v0:= temp;
  #L31e578.  if v0 <= 0 then goto L31e590;
  #L31e57c.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L31e582.  v2:= temp;
  #L31e584.  v4:= v1.`g2.e.j` @type ^`s3.z` @kind object;
  #L31e588.  call `c`(v3, v4, v2) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L31e58e.  goto L31e59a;
  #L31e590.  v0:= 0I;
  #L31e592.  call temp:= `d`(v3, v2, v4, v0) @signature `La2/d0;.d:(Lr3/i;IZ)I` @kind interface;
  #L31e598.  v2:= temp;
  #L31e59a.  return v2;
}
procedure `void` `M`(`g2.e` v2 @kind this, `a2.m` v3 @kind object, `byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lg2/e;.M:(La2/m;[BII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L320194.  v0:= v2.`g2.e.j` @type ^`s3.z` @kind object;
  #L320198.  call temp:= `a`(v0) @signature `Ls3/z;.a:()I` @kind virtual;
  #L32019e.  v0:= temp;
  #L3201a0.  call temp:= `min`(v6, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3201a6.  v0:= temp;
  #L3201a8.  v1:= v5 + v0 @kind int;
  #L3201ac.  v6:= v6 - v0 @kind int;
  #L3201ae.  call `readFully`(v3, v4, v1, v6) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L3201b4.  if v0 <= 0 then goto L3201c2;
  #L3201b8.  v3:= v2.`g2.e.j` @type ^`s3.z` @kind object;
  #L3201bc.  call `j`(v3, v4, v5, v0) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L3201c2.  return @kind void;
}
procedure `a2.l`[] `c`() @signature `Lg2/e;.c:()[La2/l;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L31d3a0.  call temp:= `B`() @signature `Lg2/e;.B:()[La2/l;` @kind static;
  #L31d3a6.  v0:= temp @kind object;
  #L31d3a8.  return v0 @kind object;
}
procedure `byte`[] `e`() @signature `Lg2/e;.e:()[B` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L31db4c.  v0:= `@@g2.e.d0` @type ^`byte`[] @kind object;
  #L31db50.  return v0 @kind object;
}
procedure `java.util.Map` `f`() @signature `Lg2/e;.f:()Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L31e5e4.  v0:= `@@g2.e.h0` @type ^`java.util.Map` @kind object;
  #L31e5e8.  return v0 @kind object;
}
procedure `java.util.UUID` `h`() @signature `Lg2/e;.h:()Ljava/util/UUID;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L31e5fc.  v0:= `@@g2.e.g0` @type ^`java.util.UUID` @kind object;
  #L31e600.  return v0 @kind object;
}
procedure `void` `i`(`g2.e` v2 @kind this, `int` v3 ) @signature `Lg2/e;.i:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L31e944.  v0:= v2.`g2.e.C` @type ^`s3.r` @kind object;
  #L31e948.  if v0 == 0 then goto L31e956;
  #L31e94c.  v0:= v2.`g2.e.D` @type ^`s3.r` @kind object;
  #L31e950.  if v0 == 0 then goto L31e956;
  #L31e954.  return @kind void;
  #L31e956.  v0:= new `java.lang.StringBuilder`;
  #L31e95a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31e960.  v1:= "Element " @kind object;
  #L31e964.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e96a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e970.  v3:= " must be in a Cues" @kind object;
  #L31e974.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e97a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e980.  v3:= temp @kind object;
  #L31e982.  v0:= 0I;
  #L31e984.  call temp:= `a`(v3, v0) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31e98a.  v3:= temp @kind object;
  #L31e98c.  throw v3;
}
procedure `void` `k`(`g2.e` v2 @kind this, `int` v3 ) @signature `Lg2/e;.k:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L31e9a0.  v0:= v2.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31e9a4.  if v0 == 0 then goto L31e9aa;
  #L31e9a8.  return @kind void;
  #L31e9aa.  v0:= new `java.lang.StringBuilder`;
  #L31e9ae.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31e9b4.  v1:= "Element " @kind object;
  #L31e9b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e9be.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e9c4.  v3:= " must be in a TrackEntry" @kind object;
  #L31e9c8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31e9ce.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31e9d4.  v3:= temp @kind object;
  #L31e9d6.  v0:= 0I;
  #L31e9d8.  call temp:= `a`(v3, v0) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31e9de.  v3:= temp @kind object;
  #L31e9e0.  throw v3;
}
procedure `void` `l`(`g2.e` v1 @kind this) @signature `Lg2/e;.l:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L31e9f4.  v0:= v1.`g2.e.b0` @type ^`a2.n` @kind object;
  #L31e9f8.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L31e9fe.  return @kind void;
}
procedure `a2.a0` `n`(`g2.e` v11 @kind this, `s3.r` v12 @kind object, `s3.r` v13 @kind object) @signature `Lg2/e;.n:(Ls3/r;Ls3/r;)La2/a0;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L31d3e4.  v0:= v11.`g2.e.q` @type ^`long` @kind wide;
  #L31d3e8.  v2:= -1L;
  #L31d3ec.  v4:= lcmp(v0, v2);
  #L31d3f0.  if v4 == 0 then goto L31d534;
  #L31d3f4.  v0:= v11.`g2.e.t` @type ^`long` @kind wide;
  #L31d3f8.  v2:= -4.9E-324D;
  #L31d402.  v4:= lcmp(v0, v2);
  #L31d406.  if v4 == 0 then goto L31d534;
  #L31d40a.  if v12 == 0 then goto L31d534;
  #L31d40e.  call temp:= `c`(v12) @signature `Ls3/r;.c:()I` @kind virtual;
  #L31d414.  v0:= temp;
  #L31d416.  if v0 == 0 then goto L31d534;
  #L31d41a.  if v13 == 0 then goto L31d534;
  #L31d41e.  call temp:= `c`(v13) @signature `Ls3/r;.c:()I` @kind virtual;
  #L31d424.  v0:= temp;
  #L31d426.  call temp:= `c`(v12) @signature `Ls3/r;.c:()I` @kind virtual;
  #L31d42c.  v1:= temp;
  #L31d42e.  if v0 == v1 then goto L31d436;
  #L31d432.  goto L31d534;
  #L31d436.  call temp:= `c`(v12) @signature `Ls3/r;.c:()I` @kind virtual;
  #L31d43c.  v0:= temp;
  #L31d43e.  v1:= new `int`[v0];
  #L31d442.  v2:= new `long`[v0];
  #L31d446.  v3:= new `long`[v0];
  #L31d44a.  v4:= new `long`[v0];
  #L31d44e.  v5:= 0I;
  #L31d450.  v6:= 0I;
  #L31d452.  if v6 >= v0 then goto L31d47a;
  #L31d456.  call temp:= `b`(v12, v6) @signature `Ls3/r;.b:(I)J` @kind virtual;
  #L31d45c.  v7:= temp @kind wide;
  #L31d45e.  v4[v6]:= v7 @kind wide;
  #L31d462.  v7:= v11.`g2.e.q` @type ^`long` @kind wide;
  #L31d466.  call temp:= `b`(v13, v6) @signature `Ls3/r;.b:(I)J` @kind virtual;
  #L31d46c.  v9:= temp @kind wide;
  #L31d46e.  v7:= v7 + v9 @kind long;
  #L31d470.  v2[v6]:= v7 @kind wide;
  #L31d474.  v6:= v6 + 1;
  #L31d478.  goto L31d452;
  #L31d47a.  v12:= v0 + -1;
  #L31d47e.  if v5 >= v12 then goto L31d4a8;
  #L31d482.  v12:= v5 + 1;
  #L31d486.  v6:= v2[v12] @kind wide;
  #L31d48a.  v8:= v2[v5] @kind wide;
  #L31d48e.  v6:= v6 - v8 @kind long;
  #L31d490.  v13:= (`int`) v6 @kind l2i;
  #L31d492.  v1[v5]:= v13;
  #L31d496.  v6:= v4[v12] @kind wide;
  #L31d49a.  v8:= v4[v5] @kind wide;
  #L31d49e.  v6:= v6 - v8 @kind long;
  #L31d4a0.  v3[v5]:= v6 @kind wide;
  #L31d4a4.  v5:= v12;
  #L31d4a6.  goto L31d47a;
  #L31d4a8.  v5:= v11.`g2.e.q` @type ^`long` @kind wide;
  #L31d4ac.  v7:= v11.`g2.e.p` @type ^`long` @kind wide;
  #L31d4b0.  v5:= v5 + v7 @kind long;
  #L31d4b2.  v7:= v2[v12] @kind wide;
  #L31d4b6.  v5:= v5 - v7 @kind long;
  #L31d4b8.  v13:= (`int`) v5 @kind l2i;
  #L31d4ba.  v1[v12]:= v13;
  #L31d4be.  v5:= v11.`g2.e.t` @type ^`long` @kind wide;
  #L31d4c2.  v7:= v4[v12] @kind wide;
  #L31d4c6.  v5:= v5 - v7 @kind long;
  #L31d4c8.  v3[v12]:= v5 @kind wide;
  #L31d4cc.  v5:= v3[v12] @kind wide;
  #L31d4d0.  v7:= 0L;
  #L31d4d4.  v13:= lcmp(v5, v7);
  #L31d4d8.  if v13 > 0 then goto L31d528;
  #L31d4dc.  v13:= new `java.lang.StringBuilder`;
  #L31d4e0.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31d4e6.  v0:= "Discarding last cue point with unexpected duration: " @kind object;
  #L31d4ea.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31d4f0.  call temp:= `append`(v13, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31d4f6.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31d4fc.  v13:= temp @kind object;
  #L31d4fe.  v0:= "MatroskaExtractor" @kind object;
  #L31d502.  call `h`(v0, v13) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L31d508.  call temp:= `copyOf`(v1, v12) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L31d50e.  v1:= temp @kind object;
  #L31d510.  call temp:= `copyOf`(v2, v12) @signature `Ljava/util/Arrays;.copyOf:([JI)[J` @kind static;
  #L31d516.  v2:= temp @kind object;
  #L31d518.  call temp:= `copyOf`(v3, v12) @signature `Ljava/util/Arrays;.copyOf:([JI)[J` @kind static;
  #L31d51e.  v3:= temp @kind object;
  #L31d520.  call temp:= `copyOf`(v4, v12) @signature `Ljava/util/Arrays;.copyOf:([JI)[J` @kind static;
  #L31d526.  v4:= temp @kind object;
  #L31d528.  v12:= new `a2.d`;
  #L31d52c.  call `<init>`(v12, v1, v2, v3, v4) @signature `La2/d;.<init>:([I[J[J[J)V` @kind direct;
  #L31d532.  return v12 @kind object;
  #L31d534.  v12:= new `a2.a0$b`;
  #L31d538.  v0:= v11.`g2.e.t` @type ^`long` @kind wide;
  #L31d53c.  call `<init>`(v12, v0) @signature `La2/a0$b;.<init>:(J)V` @kind direct;
  #L31d542.  return v12 @kind object;
}
procedure `void` `o`(`g2.e` v9 @kind this, `g2.e$c` v10 @kind object, `long` v11 , `int` v13 , `int` v14 , `int` v15 ) @signature `Lg2/e;.o:(Lg2/e$c;JIII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L31f01c.  v0:= v10.`g2.e$c.T` @type ^`a2.e0` @kind object;
  #L31f020.  v8:= 1I;
  #L31f022.  if v0 == 0 then goto L31f040;
  #L31f026.  v1:= v10.`g2.e$c.X` @type ^`a2.d0` @kind object;
  #L31f02a.  v7:= v10.`g2.e$c.j` @type ^`a2.d0$a` @kind object;
  #L31f02e.  v2:= v11 @kind wide;
  #L31f030.  v4:= v13;
  #L31f032.  v5:= v14;
  #L31f034.  v6:= v15;
  #L31f036.  call `c`(v0, v1, v2, v4, v5, v6, v7) @signature `La2/e0;.c:(La2/d0;JIIILa2/d0$a;)V` @kind virtual;
  #L31f03c.  goto L31f180;
  #L31f040.  v0:= v10.`g2.e$c.b` @type ^`java.lang.String` @kind object;
  #L31f044.  v1:= "S_TEXT/UTF8" @kind object;
  #L31f048.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31f04e.  v0:= temp;
  #L31f050.  if v0 != 0 then goto L31f07c;
  #L31f054.  v0:= v10.`g2.e$c.b` @type ^`java.lang.String` @kind object;
  #L31f058.  v1:= "S_TEXT/ASS" @kind object;
  #L31f05c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31f062.  v0:= temp;
  #L31f064.  if v0 != 0 then goto L31f07c;
  #L31f068.  v0:= v10.`g2.e$c.b` @type ^`java.lang.String` @kind object;
  #L31f06c.  v1:= "S_TEXT/WEBVTT" @kind object;
  #L31f070.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31f076.  v0:= temp;
  #L31f078.  if v0 == 0 then goto L31f12c;
  #L31f07c.  v0:= v9.`g2.e.K` @type ^`int`;
  #L31f080.  v1:= "MatroskaExtractor" @kind object;
  #L31f084.  if v0 <= v8 then goto L31f094;
  #L31f088.  v0:= "Skipping subtitle sample in laced block." @kind object;
  #L31f08c.  call `h`(v1, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L31f092.  goto L31f12c;
  #L31f094.  v2:= v9.`g2.e.I` @type ^`long` @kind wide;
  #L31f098.  v4:= -4.9E-324D;
  #L31f0a2.  v0:= lcmp(v2, v4);
  #L31f0a6.  if v0 != 0 then goto L31f0b0;
  #L31f0aa.  v0:= "Skipping subtitle sample with no duration." @kind object;
  #L31f0ae.  goto L31f08c;
  #L31f0b0.  v0:= v10.`g2.e$c.b` @type ^`java.lang.String` @kind object;
  #L31f0b4.  v1:= v9.`g2.e.k` @type ^`s3.z` @kind object;
  #L31f0b8.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31f0be.  v1:= temp @kind object;
  #L31f0c0.  call `G`(v0, v2, v1) @signature `Lg2/e;.G:(Ljava/lang/String;J[B)V` @kind static;
  #L31f0c6.  v0:= v9.`g2.e.k` @type ^`s3.z` @kind object;
  #L31f0ca.  call temp:= `e`(v0) @signature `Ls3/z;.e:()I` @kind virtual;
  #L31f0d0.  v0:= temp;
  #L31f0d2.  v1:= v9.`g2.e.k` @type ^`s3.z` @kind object;
  #L31f0d6.  call temp:= `f`(v1) @signature `Ls3/z;.f:()I` @kind virtual;
  #L31f0dc.  v1:= temp;
  #L31f0de.  if v0 >= v1 then goto L31f108;
  #L31f0e2.  v1:= v9.`g2.e.k` @type ^`s3.z` @kind object;
  #L31f0e6.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31f0ec.  v1:= temp @kind object;
  #L31f0ee.  v1:= v1[v0] @kind byte;
  #L31f0f2.  if v1 != 0 then goto L31f102;
  #L31f0f6.  v1:= v9.`g2.e.k` @type ^`s3.z` @kind object;
  #L31f0fa.  call `N`(v1, v0) @signature `Ls3/z;.N:(I)V` @kind virtual;
  #L31f100.  goto L31f108;
  #L31f102.  v0:= v0 + 1;
  #L31f106.  goto L31f0d2;
  #L31f108.  v0:= v10.`g2.e$c.X` @type ^`a2.d0` @kind object;
  #L31f10c.  v1:= v9.`g2.e.k` @type ^`s3.z` @kind object;
  #L31f110.  call temp:= `f`(v1) @signature `Ls3/z;.f:()I` @kind virtual;
  #L31f116.  v2:= temp;
  #L31f118.  call `c`(v0, v1, v2) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L31f11e.  v0:= v9.`g2.e.k` @type ^`s3.z` @kind object;
  #L31f122.  call temp:= `f`(v0) @signature `Ls3/z;.f:()I` @kind virtual;
  #L31f128.  v0:= temp;
  #L31f12a.  v14:= v14 + v0 @kind int;
  #L31f12c.  v0:= 268435456I;
  #L31f130.  v0:= v0 ^& v13 @kind int;
  #L31f132.  if v0 == 0 then goto L31f16a;
  #L31f136.  v0:= v9.`g2.e.K` @type ^`int`;
  #L31f13a.  if v0 <= v8 then goto L31f14c;
  #L31f13e.  v0:= v9.`g2.e.n` @type ^`s3.z` @kind object;
  #L31f142.  v1:= 0I;
  #L31f144.  call `K`(v0, v1) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L31f14a.  goto L31f16a;
  #L31f14c.  v0:= v9.`g2.e.n` @type ^`s3.z` @kind object;
  #L31f150.  call temp:= `f`(v0) @signature `Ls3/z;.f:()I` @kind virtual;
  #L31f156.  v0:= temp;
  #L31f158.  v1:= v10.`g2.e$c.X` @type ^`a2.d0` @kind object;
  #L31f15c.  v2:= v9.`g2.e.n` @type ^`s3.z` @kind object;
  #L31f160.  v3:= 2I;
  #L31f162.  call `a`(v1, v2, v0, v3) @signature `La2/d0;.a:(Ls3/z;II)V` @kind interface;
  #L31f168.  v14:= v14 + v0 @kind int;
  #L31f16a.  v4:= v14;
  #L31f16c.  v0:= v10.`g2.e$c.X` @type ^`a2.d0` @kind object;
  #L31f170.  v6:= v10.`g2.e$c.j` @type ^`a2.d0$a` @kind object;
  #L31f174.  v1:= v11 @kind wide;
  #L31f176.  v3:= v13;
  #L31f178.  v5:= v15;
  #L31f17a.  call `f`(v0, v1, v3, v4, v5, v6) @signature `La2/d0;.f:(JIIILa2/d0$a;)V` @kind interface;
  #L31f180.  v9.`g2.e.F` @type ^`boolean` := v8 @kind boolean;
  #L31f184.  return @kind void;
}
procedure `int`[] `q`(`int`[] v1 @kind object, `int` v2 ) @signature `Lg2/e;.q:([II)[I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L31e5ac.  if v1 != 0 then goto L31e5b6;
  #L31e5b0.  v1:= new `int`[v2];
  #L31e5b4.  return v1 @kind object;
  #L31e5b6.  v0:= length @variable v1;
  #L31e5b8.  if v0 < v2 then goto L31e5be;
  #L31e5bc.  return v1 @kind object;
  #L31e5be.  v1:= length @variable v1;
  #L31e5c0.  v1:= v1 * 2;
  #L31e5c4.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L31e5ca.  v1:= temp;
  #L31e5cc.  v1:= new `int`[v1];
  #L31e5d0.  return v1 @kind object;
}
procedure `int` `r`(`g2.e` v1 @kind this) @signature `Lg2/e;.r:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L31dc58.  v0:= v1.`g2.e.T` @type ^`int`;
  #L31dc5c.  call `E`(v1) @signature `Lg2/e;.E:()V` @kind direct;
  #L31dc62.  return v0;
}
procedure `byte`[] `t`(`long` v10 , `java.lang.String` v12 @kind object, `long` v13 ) @signature `Lg2/e;.t:(JLjava/lang/String;J)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L31db64.  v0:= 1I;
  #L31db66.  v1:= 0I;
  #L31db68.  v2:= -4.9E-324D;
  #L31db72.  v4:= lcmp(v10, v2);
  #L31db76.  if v4 == 0 then goto L31db7e;
  #L31db7a.  v2:= 1I;
  #L31db7c.  goto L31db80;
  #L31db7e.  v2:= 0I;
  #L31db80.  call `a`(v2) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L31db86.  v2:= 3600000000L;
  #L31db90.  v2:= v10 / v2 @kind long;
  #L31db94.  v3:= (`int`) v2 @kind l2i;
  #L31db96.  v4:= (`long`) v3 @kind i2l;
  #L31db98.  v6:= 3600L;
  #L31db9c.  v4:= v4 * v6 @kind long;
  #L31dba0.  v6:= 1000000L;
  #L31dba6.  v4:= v4 * v6 @kind long;
  #L31dbaa.  v10:= v10 - v4 @kind long;
  #L31dbac.  v4:= 60000000L;
  #L31dbb2.  v4:= v10 / v4 @kind long;
  #L31dbb6.  v2:= (`int`) v4 @kind l2i;
  #L31dbb8.  v4:= (`long`) v2 @kind i2l;
  #L31dbba.  v8:= 60L;
  #L31dbbe.  v4:= v4 * v8 @kind long;
  #L31dbc2.  v4:= v4 * v6 @kind long;
  #L31dbc6.  v10:= v10 - v4 @kind long;
  #L31dbc8.  v4:= v10 / v6 @kind long;
  #L31dbcc.  v5:= (`int`) v4 @kind l2i;
  #L31dbce.  v8:= (`long`) v5 @kind i2l;
  #L31dbd0.  v8:= v8 * v6 @kind long;
  #L31dbd4.  v10:= v10 - v8 @kind long;
  #L31dbd6.  v10:= v10 / v13 @kind long;
  #L31dbd8.  v11:= (`int`) v10 @kind l2i;
  #L31dbda.  v10:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L31dbde.  v13:= 4I;
  #L31dbe0.  v13:= new `java.lang.Object`[v13];
  #L31dbe4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L31dbea.  v14:= temp @kind object;
  #L31dbec.  v13[v1]:= v14 @kind object;
  #L31dbf0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L31dbf6.  v14:= temp @kind object;
  #L31dbf8.  v13[v0]:= v14 @kind object;
  #L31dbfc.  v14:= 2I;
  #L31dbfe.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L31dc04.  v0:= temp @kind object;
  #L31dc06.  v13[v14]:= v0 @kind object;
  #L31dc0a.  v14:= 3I;
  #L31dc0c.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L31dc12.  v11:= temp @kind object;
  #L31dc14.  v13[v14]:= v11 @kind object;
  #L31dc18.  call temp:= `format`(v10, v12, v13) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31dc1e.  v10:= temp @kind object;
  #L31dc20.  call temp:= `l0`(v10) @signature `Ls3/l0;.l0:(Ljava/lang/String;)[B` @kind static;
  #L31dc26.  v10:= temp @kind object;
  #L31dc28.  return v10 @kind object;
}
procedure `boolean` `z`(`java.lang.String` v4 @kind object) @signature `Lg2/e;.z:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L31d554.  call temp:= `hashCode`(v4) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L31d55a.  call temp:= `hashCode`(v4) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L31d560.  v0:= temp;
  #L31d562.  v1:= 1I;
  #L31d564.  v2:= 0I;
  #L31d566.  v3:= -1I;
  #L31d568.  goto L31d8e8;
  #L31d56e.  goto L31d8dc;
  #L31d572.  v0:= "A_OPUS" @kind object;
  #L31d576.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d57c.  v4:= temp;
  #L31d57e.  if v4 != 0 then goto L31d586;
  #L31d582.  goto L31d8dc;
  #L31d586.  v3:= 32I;
  #L31d58a.  goto L31d8dc;
  #L31d58e.  v0:= "A_FLAC" @kind object;
  #L31d592.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d598.  v4:= temp;
  #L31d59a.  if v4 != 0 then goto L31d5a2;
  #L31d59e.  goto L31d8dc;
  #L31d5a2.  v3:= 31I;
  #L31d5a6.  goto L31d8dc;
  #L31d5aa.  v0:= "A_EAC3" @kind object;
  #L31d5ae.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d5b4.  v4:= temp;
  #L31d5b6.  if v4 != 0 then goto L31d5be;
  #L31d5ba.  goto L31d8dc;
  #L31d5be.  v3:= 30I;
  #L31d5c2.  goto L31d8dc;
  #L31d5c6.  v0:= "V_MPEG2" @kind object;
  #L31d5ca.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d5d0.  v4:= temp;
  #L31d5d2.  if v4 != 0 then goto L31d5da;
  #L31d5d6.  goto L31d8dc;
  #L31d5da.  v3:= 29I;
  #L31d5de.  goto L31d8dc;
  #L31d5e2.  v0:= "S_TEXT/UTF8" @kind object;
  #L31d5e6.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d5ec.  v4:= temp;
  #L31d5ee.  if v4 != 0 then goto L31d5f6;
  #L31d5f2.  goto L31d8dc;
  #L31d5f6.  v3:= 28I;
  #L31d5fa.  goto L31d8dc;
  #L31d5fe.  v0:= "S_TEXT/WEBVTT" @kind object;
  #L31d602.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d608.  v4:= temp;
  #L31d60a.  if v4 != 0 then goto L31d612;
  #L31d60e.  goto L31d8dc;
  #L31d612.  v3:= 27I;
  #L31d616.  goto L31d8dc;
  #L31d61a.  v0:= "V_MPEGH/ISO/HEVC" @kind object;
  #L31d61e.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d624.  v4:= temp;
  #L31d626.  if v4 != 0 then goto L31d62e;
  #L31d62a.  goto L31d8dc;
  #L31d62e.  v3:= 26I;
  #L31d632.  goto L31d8dc;
  #L31d636.  v0:= "S_TEXT/ASS" @kind object;
  #L31d63a.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d640.  v4:= temp;
  #L31d642.  if v4 != 0 then goto L31d64a;
  #L31d646.  goto L31d8dc;
  #L31d64a.  v3:= 25I;
  #L31d64e.  goto L31d8dc;
  #L31d652.  v0:= "A_PCM/INT/LIT" @kind object;
  #L31d656.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d65c.  v4:= temp;
  #L31d65e.  if v4 != 0 then goto L31d666;
  #L31d662.  goto L31d8dc;
  #L31d666.  v3:= 24I;
  #L31d66a.  goto L31d8dc;
  #L31d66e.  v0:= "A_PCM/INT/BIG" @kind object;
  #L31d672.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d678.  v4:= temp;
  #L31d67a.  if v4 != 0 then goto L31d682;
  #L31d67e.  goto L31d8dc;
  #L31d682.  v3:= 23I;
  #L31d686.  goto L31d8dc;
  #L31d68a.  v0:= "A_PCM/FLOAT/IEEE" @kind object;
  #L31d68e.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d694.  v4:= temp;
  #L31d696.  if v4 != 0 then goto L31d69e;
  #L31d69a.  goto L31d8dc;
  #L31d69e.  v3:= 22I;
  #L31d6a2.  goto L31d8dc;
  #L31d6a6.  v0:= "A_DTS/EXPRESS" @kind object;
  #L31d6aa.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d6b0.  v4:= temp;
  #L31d6b2.  if v4 != 0 then goto L31d6ba;
  #L31d6b6.  goto L31d8dc;
  #L31d6ba.  v3:= 21I;
  #L31d6be.  goto L31d8dc;
  #L31d6c2.  v0:= "V_THEORA" @kind object;
  #L31d6c6.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d6cc.  v4:= temp;
  #L31d6ce.  if v4 != 0 then goto L31d6d6;
  #L31d6d2.  goto L31d8dc;
  #L31d6d6.  v3:= 20I;
  #L31d6da.  goto L31d8dc;
  #L31d6de.  v0:= "S_HDMV/PGS" @kind object;
  #L31d6e2.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d6e8.  v4:= temp;
  #L31d6ea.  if v4 != 0 then goto L31d6f2;
  #L31d6ee.  goto L31d8dc;
  #L31d6f2.  v3:= 19I;
  #L31d6f6.  goto L31d8dc;
  #L31d6fa.  v0:= "V_VP9" @kind object;
  #L31d6fe.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d704.  v4:= temp;
  #L31d706.  if v4 != 0 then goto L31d70e;
  #L31d70a.  goto L31d8dc;
  #L31d70e.  v3:= 18I;
  #L31d712.  goto L31d8dc;
  #L31d716.  v0:= "V_VP8" @kind object;
  #L31d71a.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d720.  v4:= temp;
  #L31d722.  if v4 != 0 then goto L31d72a;
  #L31d726.  goto L31d8dc;
  #L31d72a.  v3:= 17I;
  #L31d72e.  goto L31d8dc;
  #L31d732.  v0:= "V_AV1" @kind object;
  #L31d736.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d73c.  v4:= temp;
  #L31d73e.  if v4 != 0 then goto L31d746;
  #L31d742.  goto L31d8dc;
  #L31d746.  v3:= 16I;
  #L31d74a.  goto L31d8dc;
  #L31d74e.  v0:= "A_DTS" @kind object;
  #L31d752.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d758.  v4:= temp;
  #L31d75a.  if v4 != 0 then goto L31d762;
  #L31d75e.  goto L31d8dc;
  #L31d762.  v3:= 15I;
  #L31d766.  goto L31d8dc;
  #L31d76a.  v0:= "A_AC3" @kind object;
  #L31d76e.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d774.  v4:= temp;
  #L31d776.  if v4 != 0 then goto L31d77e;
  #L31d77a.  goto L31d8dc;
  #L31d77e.  v3:= 14I;
  #L31d782.  goto L31d8dc;
  #L31d786.  v0:= "A_AAC" @kind object;
  #L31d78a.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d790.  v4:= temp;
  #L31d792.  if v4 != 0 then goto L31d79a;
  #L31d796.  goto L31d8dc;
  #L31d79a.  v3:= 13I;
  #L31d79e.  goto L31d8dc;
  #L31d7a2.  v0:= "A_DTS/LOSSLESS" @kind object;
  #L31d7a6.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d7ac.  v4:= temp;
  #L31d7ae.  if v4 != 0 then goto L31d7b6;
  #L31d7b2.  goto L31d8dc;
  #L31d7b6.  v3:= 12I;
  #L31d7ba.  goto L31d8dc;
  #L31d7be.  v0:= "S_VOBSUB" @kind object;
  #L31d7c2.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d7c8.  v4:= temp;
  #L31d7ca.  if v4 != 0 then goto L31d7d2;
  #L31d7ce.  goto L31d8dc;
  #L31d7d2.  v3:= 11I;
  #L31d7d6.  goto L31d8dc;
  #L31d7da.  v0:= "V_MPEG4/ISO/AVC" @kind object;
  #L31d7de.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d7e4.  v4:= temp;
  #L31d7e6.  if v4 != 0 then goto L31d7ee;
  #L31d7ea.  goto L31d8dc;
  #L31d7ee.  v3:= 10I;
  #L31d7f2.  goto L31d8dc;
  #L31d7f6.  v0:= "V_MPEG4/ISO/ASP" @kind object;
  #L31d7fa.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d800.  v4:= temp;
  #L31d802.  if v4 != 0 then goto L31d80a;
  #L31d806.  goto L31d8dc;
  #L31d80a.  v3:= 9I;
  #L31d80e.  goto L31d8dc;
  #L31d812.  v0:= "S_DVBSUB" @kind object;
  #L31d816.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d81c.  v4:= temp;
  #L31d81e.  if v4 != 0 then goto L31d826;
  #L31d822.  goto L31d8dc;
  #L31d826.  v3:= 8I;
  #L31d82a.  goto L31d8dc;
  #L31d82e.  v0:= "V_MS/VFW/FOURCC" @kind object;
  #L31d832.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d838.  v4:= temp;
  #L31d83a.  if v4 != 0 then goto L31d840;
  #L31d83e.  goto L31d8dc;
  #L31d840.  v3:= 7I;
  #L31d842.  goto L31d8dc;
  #L31d844.  v0:= "A_MPEG/L3" @kind object;
  #L31d848.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d84e.  v4:= temp;
  #L31d850.  if v4 != 0 then goto L31d856;
  #L31d854.  goto L31d8dc;
  #L31d856.  v3:= 6I;
  #L31d858.  goto L31d8dc;
  #L31d85a.  v0:= "A_MPEG/L2" @kind object;
  #L31d85e.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d864.  v4:= temp;
  #L31d866.  if v4 != 0 then goto L31d86c;
  #L31d86a.  goto L31d8dc;
  #L31d86c.  v3:= 5I;
  #L31d86e.  goto L31d8dc;
  #L31d870.  v0:= "A_VORBIS" @kind object;
  #L31d874.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d87a.  v4:= temp;
  #L31d87c.  if v4 != 0 then goto L31d882;
  #L31d880.  goto L31d8dc;
  #L31d882.  v3:= 4I;
  #L31d884.  goto L31d8dc;
  #L31d886.  v0:= "A_TRUEHD" @kind object;
  #L31d88a.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d890.  v4:= temp;
  #L31d892.  if v4 != 0 then goto L31d898;
  #L31d896.  goto L31d8dc;
  #L31d898.  v3:= 3I;
  #L31d89a.  goto L31d8dc;
  #L31d89c.  v0:= "A_MS/ACM" @kind object;
  #L31d8a0.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d8a6.  v4:= temp;
  #L31d8a8.  if v4 != 0 then goto L31d8ae;
  #L31d8ac.  goto L31d8dc;
  #L31d8ae.  v3:= 2I;
  #L31d8b0.  goto L31d8dc;
  #L31d8b2.  v0:= "V_MPEG4/ISO/SP" @kind object;
  #L31d8b6.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d8bc.  v4:= temp;
  #L31d8be.  if v4 != 0 then goto L31d8c4;
  #L31d8c2.  goto L31d8dc;
  #L31d8c4.  v3:= 1I;
  #L31d8c6.  goto L31d8dc;
  #L31d8c8.  v0:= "V_MPEG4/ISO/AP" @kind object;
  #L31d8cc.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31d8d2.  v4:= temp;
  #L31d8d4.  if v4 != 0 then goto L31d8da;
  #L31d8d8.  goto L31d8dc;
  #L31d8da.  v3:= 0I;
  #L31d8dc.  goto L31d9f4;
  #L31d8e2.  return v2;
  #L31d8e4.  return v1;
  #L31d8e6.  
  #L31d8e8.  switch v0
                  | -2095576542 => goto L31d8c8
                  | -2095575984 => goto L31d8b2
                  | -1985379776 => goto L31d89c
                  | -1784763192 => goto L31d886
                  | -1730367663 => goto L31d870
                  | -1482641358 => goto L31d85a
                  | -1482641357 => goto L31d844
                  | -1373388978 => goto L31d82e
                  | -933872740 => goto L31d812
                  | -538363189 => goto L31d7f6
                  | -538363109 => goto L31d7da
                  | -425012669 => goto L31d7be
                  | -356037306 => goto L31d7a2
                  | 62923557 => goto L31d786
                  | 62923603 => goto L31d76a
                  | 62927045 => goto L31d74e
                  | 82318131 => goto L31d732
                  | 82338133 => goto L31d716
                  | 82338134 => goto L31d6fa
                  | 99146302 => goto L31d6de
                  | 444813526 => goto L31d6c2
                  | 542569478 => goto L31d6a6
                  | 635596514 => goto L31d68a
                  | 725948237 => goto L31d66e
                  | 725957860 => goto L31d652
                  | 738597099 => goto L31d636
                  | 855502857 => goto L31d61a
                  | 1045209816 => goto L31d5fe
                  | 1422270023 => goto L31d5e2
                  | 1809237540 => goto L31d5c6
                  | 1950749482 => goto L31d5aa
                  | 1950789798 => goto L31d58e
                  | 1951062397 => goto L31d572
                  | else => goto L31d56e;
  #L31d9f4.  switch v3
                  | 0 => goto L31d8e4
                  | 1 => goto L31d8e4
                  | 2 => goto L31d8e4
                  | 3 => goto L31d8e4
                  | 4 => goto L31d8e4
                  | 5 => goto L31d8e4
                  | 6 => goto L31d8e4
                  | 7 => goto L31d8e4
                  | 8 => goto L31d8e4
                  | 9 => goto L31d8e4
                  | 10 => goto L31d8e4
                  | 11 => goto L31d8e4
                  | 12 => goto L31d8e4
                  | 13 => goto L31d8e4
                  | 14 => goto L31d8e4
                  | 15 => goto L31d8e4
                  | 16 => goto L31d8e4
                  | 17 => goto L31d8e4
                  | 18 => goto L31d8e4
                  | 19 => goto L31d8e4
                  | 20 => goto L31d8e4
                  | 21 => goto L31d8e4
                  | 22 => goto L31d8e4
                  | 23 => goto L31d8e4
                  | 24 => goto L31d8e4
                  | 25 => goto L31d8e4
                  | 26 => goto L31d8e4
                  | 27 => goto L31d8e4
                  | 28 => goto L31d8e4
                  | 29 => goto L31d8e4
                  | 30 => goto L31d8e4
                  | 31 => goto L31d8e4
                  | 32 => goto L31d8e4
                  | else => goto L31d8e2;
}
procedure `boolean` `A`(`g2.e` v1 @kind this, `int` v2 ) @signature `Lg2/e;.A:(I)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L31da90.  v0:= 357149030I;
  #L31da96.  if v2 == v0 then goto L31dabe;
  #L31da9a.  v0:= 524531317I;
  #L31daa0.  if v2 == v0 then goto L31dabe;
  #L31daa4.  v0:= 475249515I;
  #L31daaa.  if v2 == v0 then goto L31dabe;
  #L31daae.  v0:= 374648427I;
  #L31dab4.  if v2 != v0 then goto L31daba;
  #L31dab8.  goto L31dabe;
  #L31daba.  v2:= 0I;
  #L31dabc.  goto L31dac0;
  #L31dabe.  v2:= 1I;
  #L31dac0.  return v2;
}
procedure `void` `H`(`g2.e` v5 @kind this, `int` v6 , `long` v7 , `long` v9 ) @signature `Lg2/e;.H:(IJJ)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31ff10.  call `l`(v5) @signature `Lg2/e;.l:()V` @kind direct;
  #L31ff16.  v0:= 160I;
  #L31ff1a.  v1:= 0I;
  #L31ff1c.  if v6 == v0 then goto L32003c;
  #L31ff20.  v0:= 174I;
  #L31ff24.  if v6 == v0 then goto L32002c;
  #L31ff28.  v0:= 187I;
  #L31ff2c.  if v6 == v0 then goto L320026;
  #L31ff30.  v0:= 19899I;
  #L31ff34.  v1:= -1L;
  #L31ff38.  if v6 == v0 then goto L32001a;
  #L31ff3c.  v0:= 20533I;
  #L31ff40.  v3:= 1I;
  #L31ff42.  if v6 == v0 then goto L32000c;
  #L31ff46.  v0:= 21968I;
  #L31ff4a.  if v6 == v0 then goto L31fffe;
  #L31ff4e.  v0:= 408125543I;
  #L31ff54.  if v6 == v0 then goto L31ffce;
  #L31ff58.  v7:= 475249515I;
  #L31ff5e.  if v6 == v7 then goto L31ffb0;
  #L31ff62.  v7:= 524531317I;
  #L31ff68.  if v6 == v7 then goto L31ff70;
  #L31ff6c.  goto L320048;
  #L31ff70.  v6:= v5.`g2.e.v` @type ^`boolean` @kind boolean;
  #L31ff74.  if v6 != 0 then goto L320048;
  #L31ff78.  v6:= v5.`g2.e.d` @type ^`boolean` @kind boolean;
  #L31ff7c.  if v6 == 0 then goto L31ff92;
  #L31ff80.  v6:= v5.`g2.e.z` @type ^`long` @kind wide;
  #L31ff84.  v8:= lcmp(v6, v1);
  #L31ff88.  if v8 == 0 then goto L31ff92;
  #L31ff8c.  v5.`g2.e.y` @type ^`boolean` := v3 @kind boolean;
  #L31ff90.  goto L320048;
  #L31ff92.  v6:= v5.`g2.e.b0` @type ^`a2.n` @kind object;
  #L31ff96.  v7:= new `a2.a0$b`;
  #L31ff9a.  v8:= v5.`g2.e.t` @type ^`long` @kind wide;
  #L31ff9e.  call `<init>`(v7, v8) @signature `La2/a0$b;.<init>:(J)V` @kind direct;
  #L31ffa4.  call `m`(v6, v7) @signature `La2/n;.m:(La2/a0;)V` @kind interface;
  #L31ffaa.  v5.`g2.e.v` @type ^`boolean` := v3 @kind boolean;
  #L31ffae.  goto L320048;
  #L31ffb0.  v6:= new `s3.r`;
  #L31ffb4.  call `<init>`(v6) @signature `Ls3/r;.<init>:()V` @kind direct;
  #L31ffba.  v5.`g2.e.C` @type ^`s3.r` := v6 @kind object;
  #L31ffbe.  v6:= new `s3.r`;
  #L31ffc2.  call `<init>`(v6) @signature `Ls3/r;.<init>:()V` @kind direct;
  #L31ffc8.  v5.`g2.e.D` @type ^`s3.r` := v6 @kind object;
  #L31ffcc.  goto L320048;
  #L31ffce.  v3:= v5.`g2.e.q` @type ^`long` @kind wide;
  #L31ffd2.  v6:= lcmp(v3, v1);
  #L31ffd6.  if v6 == 0 then goto L31fff4;
  #L31ffda.  v6:= lcmp(v3, v7);
  #L31ffde.  if v6 != 0 then goto L31ffe4;
  #L31ffe2.  goto L31fff4;
  #L31ffe4.  v6:= 0I;
  #L31ffe6.  v7:= "Multiple Segment elements not supported" @kind object;
  #L31ffea.  call temp:= `a`(v7, v6) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31fff0.  v6:= temp @kind object;
  #L31fff2.  throw v6;
  #L31fff4.  v5.`g2.e.q` @type ^`long` := v7 @kind wide;
  #L31fff8.  v5.`g2.e.p` @type ^`long` := v9 @kind wide;
  #L31fffc.  goto L320048;
  #L31fffe.  call temp:= `u`(v5, v6) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L320004.  v6:= temp @kind object;
  #L320006.  v6.`g2.e$c.x` @type ^`boolean` := v3 @kind boolean;
  #L32000a.  goto L320048;
  #L32000c.  call temp:= `u`(v5, v6) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L320012.  v6:= temp @kind object;
  #L320014.  v6.`g2.e$c.h` @type ^`boolean` := v3 @kind boolean;
  #L320018.  goto L320048;
  #L32001a.  v6:= -1I;
  #L32001c.  v5.`g2.e.w` @type ^`int` := v6;
  #L320020.  v5.`g2.e.x` @type ^`long` := v1 @kind wide;
  #L320024.  goto L320048;
  #L320026.  v5.`g2.e.E` @type ^`boolean` := v1 @kind boolean;
  #L32002a.  goto L320048;
  #L32002c.  v6:= new `g2.e$c`;
  #L320030.  call `<init>`(v6) @signature `Lg2/e$c;.<init>:()V` @kind direct;
  #L320036.  v5.`g2.e.u` @type ^`g2.e$c` := v6 @kind object;
  #L32003a.  goto L320048;
  #L32003c.  v5.`g2.e.Q` @type ^`boolean` := v1 @kind boolean;
  #L320040.  v6:= 0L;
  #L320044.  v5.`g2.e.R` @type ^`long` := v6 @kind wide;
  #L320048.  return @kind void;
}
procedure `void` `I`(`g2.e` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lg2/e;.I:(ILjava/lang/String;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L32005c.  v0:= 134I;
  #L320060.  if v2 == v0 then goto L3200f8;
  #L320064.  v0:= 17026I;
  #L320068.  if v2 == v0 then goto L32009e;
  #L32006c.  v0:= 21358I;
  #L320070.  if v2 == v0 then goto L320090;
  #L320074.  v0:= 2274716I;
  #L32007a.  if v2 == v0 then goto L320080;
  #L32007e.  goto L320104;
  #L320080.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L320086.  v2:= temp @kind object;
  #L320088.  call temp:= `d`(v2, v3) @signature `Lg2/e$c;.d:(Lg2/e$c;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L32008e.  goto L320104;
  #L320090.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L320096.  v2:= temp @kind object;
  #L320098.  v2.`g2.e$c.a` @type ^`java.lang.String` := v3 @kind object;
  #L32009c.  goto L320104;
  #L32009e.  v2:= "webm" @kind object;
  #L3200a2.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3200a8.  v2:= temp;
  #L3200aa.  if v2 != 0 then goto L320104;
  #L3200ae.  v2:= "matroska" @kind object;
  #L3200b2.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3200b8.  v2:= temp;
  #L3200ba.  if v2 == 0 then goto L3200c0;
  #L3200be.  goto L320104;
  #L3200c0.  v2:= new `java.lang.StringBuilder`;
  #L3200c4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3200ca.  v0:= "DocType " @kind object;
  #L3200ce.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3200d4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3200da.  v3:= " not supported" @kind object;
  #L3200de.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3200e4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3200ea.  v2:= temp @kind object;
  #L3200ec.  v3:= 0I;
  #L3200ee.  call temp:= `a`(v2, v3) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L3200f4.  v2:= temp @kind object;
  #L3200f6.  throw v2;
  #L3200f8.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L3200fe.  v2:= temp @kind object;
  #L320100.  v2.`g2.e$c.b` @type ^`java.lang.String` := v3 @kind object;
  #L320104.  return @kind void;
}
procedure `void` `a`(`g2.e` v0 @kind this) @signature `Lg2/e;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L31fd58.  return @kind void;
}
procedure `void` `b`(`g2.e` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lg2/e;.b:(JJ)V` @AccessFlag PUBLIC {
    temp;

  #L31fdb0.  v1:= -4.9E-324D;
  #L31fdba.  v0.`g2.e.B` @type ^`long` := v1 @kind wide;
  #L31fdbe.  v1:= 0I;
  #L31fdc0.  v0.`g2.e.G` @type ^`int` := v1;
  #L31fdc4.  v2:= v0.`g2.e.a` @type ^`g2.c` @kind object;
  #L31fdc8.  call `c`(v2) @signature `Lg2/c;.c:()V` @kind interface;
  #L31fdce.  v2:= v0.`g2.e.b` @type ^`g2.g` @kind object;
  #L31fdd2.  call `e`(v2) @signature `Lg2/g;.e:()V` @kind virtual;
  #L31fdd8.  call `E`(v0) @signature `Lg2/e;.E:()V` @kind direct;
  #L31fdde.  v2:= v0.`g2.e.c` @type ^`android.util.SparseArray` @kind object;
  #L31fde2.  call temp:= `size`(v2) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L31fde8.  v2:= temp;
  #L31fdea.  if v1 >= v2 then goto L31fe0a;
  #L31fdee.  v2:= v0.`g2.e.c` @type ^`android.util.SparseArray` @kind object;
  #L31fdf2.  call temp:= `valueAt`(v2, v1) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L31fdf8.  v2:= temp @kind object;
  #L31fdfa.  v2:= (`g2.e$c`) v2 @kind object;
  #L31fdfe.  call `n`(v2) @signature `Lg2/e$c;.n:()V` @kind virtual;
  #L31fe04.  v1:= v1 + 1;
  #L31fe08.  goto L31fdde;
  #L31fe0a.  return @kind void;
}
procedure `void` `d`(`g2.e` v0 @kind this, `a2.n` v1 @kind object) @signature `Lg2/e;.d:(La2/n;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L31f6ac.  v0.`g2.e.b0` @type ^`a2.n` := v1 @kind object;
  #L31f6b0.  return @kind void;
}
procedure `boolean` `g`(`g2.e` v1 @kind this, `a2.m` v2 @kind object) @signature `Lg2/e;.g:(La2/m;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L31db28.  v0:= new `g2.f`;
  #L31db2c.  call `<init>`(v0) @signature `Lg2/f;.<init>:()V` @kind direct;
  #L31db32.  call temp:= `b`(v0, v2) @signature `Lg2/f;.b:(La2/m;)Z` @kind virtual;
  #L31db38.  v2:= temp;
  #L31db3a.  return v2;
}
procedure `int` `j`(`g2.e` v5 @kind this, `a2.m` v6 @kind object, `a2.z` v7 @kind object) @signature `Lg2/e;.j:(La2/m;La2/z;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31df88.  v0:= 0I;
  #L31df8a.  v5.`g2.e.F` @type ^`boolean` := v0 @kind boolean;
  #L31df8e.  v1:= 1I;
  #L31df90.  v2:= 1I;
  #L31df92.  if v2 == 0 then goto L31dfc4;
  #L31df96.  v3:= v5.`g2.e.F` @type ^`boolean` @kind boolean;
  #L31df9a.  if v3 != 0 then goto L31dfc4;
  #L31df9e.  v2:= v5.`g2.e.a` @type ^`g2.c` @kind object;
  #L31dfa2.  call temp:= `b`(v2, v6) @signature `Lg2/c;.b:(La2/m;)Z` @kind interface;
  #L31dfa8.  v2:= temp;
  #L31dfaa.  if v2 == 0 then goto L31df92;
  #L31dfae.  call temp:= `q`(v6) @signature `La2/m;.q:()J` @kind interface;
  #L31dfb4.  v3:= temp @kind wide;
  #L31dfb6.  call temp:= `C`(v5, v7, v3) @signature `Lg2/e;.C:(La2/z;J)Z` @kind direct;
  #L31dfbc.  v3:= temp;
  #L31dfbe.  if v3 == 0 then goto L31df92;
  #L31dfc2.  return v1;
  #L31dfc4.  if v2 != 0 then goto L31dffe;
  #L31dfc8.  v6:= v5.`g2.e.c` @type ^`android.util.SparseArray` @kind object;
  #L31dfcc.  call temp:= `size`(v6) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L31dfd2.  v6:= temp;
  #L31dfd4.  if v0 >= v6 then goto L31dffa;
  #L31dfd8.  v6:= v5.`g2.e.c` @type ^`android.util.SparseArray` @kind object;
  #L31dfdc.  call temp:= `valueAt`(v6, v0) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L31dfe2.  v6:= temp @kind object;
  #L31dfe4.  v6:= (`g2.e$c`) v6 @kind object;
  #L31dfe8.  call `a`(v6) @signature `Lg2/e$c;.a:(Lg2/e$c;)V` @kind static;
  #L31dfee.  call `j`(v6) @signature `Lg2/e$c;.j:()V` @kind virtual;
  #L31dff4.  v0:= v0 + 1;
  #L31dff8.  goto L31dfc8;
  #L31dffa.  v6:= -1I;
  #L31dffc.  return v6;
  #L31dffe.  return v0;
}
procedure `void` `m`(`g2.e` v21 @kind this, `int` v22 , `int` v23 , `a2.m` v24 @kind object) @signature `Lg2/e;.m:(IILa2/m;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L31ea10.  v7:= v21 @kind object;
  #L31ea14.  v0:= v22;
  #L31ea18.  v1:= v23;
  #L31ea1c.  v8:= v24 @kind object;
  #L31ea20.  v2:= 161I;
  #L31ea24.  v3:= 163I;
  #L31ea28.  v4:= 0I;
  #L31ea2a.  v5:= 2I;
  #L31ea2c.  v9:= 0I;
  #L31ea2e.  v10:= 1I;
  #L31ea30.  if v0 == v2 then goto L31eb9a;
  #L31ea34.  if v0 == v3 then goto L31eb9a;
  #L31ea38.  v2:= 165I;
  #L31ea3c.  if v0 == v2 then goto L31eb6e;
  #L31ea40.  v2:= 16877I;
  #L31ea44.  if v0 == v2 then goto L31eb5c;
  #L31ea48.  v2:= 16981I;
  #L31ea4c.  if v0 == v2 then goto L31eb40;
  #L31ea50.  v2:= 18402I;
  #L31ea54.  if v0 == v2 then goto L31eb1c;
  #L31ea58.  v2:= 21419I;
  #L31ea5c.  if v0 == v2 then goto L31ead4;
  #L31ea60.  v2:= 25506I;
  #L31ea64.  if v0 == v2 then goto L31eab8;
  #L31ea68.  v2:= 30322I;
  #L31ea6c.  if v0 != v2 then goto L31ea8c;
  #L31ea70.  call `k`(v21, v22) @signature `Lg2/e;.k:(I)V` @kind direct;
  #L31ea76.  v0:= v7.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31ea7a.  v2:= new `byte`[v1];
  #L31ea7e.  v0.`g2.e$c.v` @type ^`byte`[] := v2 @kind object;
  #L31ea82.  call `readFully`(v8, v2, v9, v1) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L31ea88.  goto L31f00a;
  #L31ea8c.  v1:= new `java.lang.StringBuilder`;
  #L31ea90.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31ea96.  v2:= "Unexpected id: " @kind object;
  #L31ea9a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31eaa0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31eaa6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31eaac.  v0:= temp @kind object;
  #L31eaae.  call temp:= `a`(v0, v4) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31eab4.  v0:= temp @kind object;
  #L31eab6.  throw v0;
  #L31eab8.  call `k`(v21, v22) @signature `Lg2/e;.k:(I)V` @kind direct;
  #L31eabe.  v0:= v7.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31eac2.  v2:= new `byte`[v1];
  #L31eac6.  v0.`g2.e$c.k` @type ^`byte`[] := v2 @kind object;
  #L31eaca.  call `readFully`(v8, v2, v9, v1) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L31ead0.  goto L31f00a;
  #L31ead4.  v0:= v7.`g2.e.i` @type ^`s3.z` @kind object;
  #L31ead8.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31eade.  v0:= temp @kind object;
  #L31eae0.  call `fill`(v0, v9) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L31eae6.  v0:= v7.`g2.e.i` @type ^`s3.z` @kind object;
  #L31eaea.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31eaf0.  v0:= temp @kind object;
  #L31eaf2.  v2:= v1 - 4;
  #L31eaf6.  call `readFully`(v8, v0, v2, v1) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L31eafc.  v0:= v7.`g2.e.i` @type ^`s3.z` @kind object;
  #L31eb00.  call `O`(v0, v9) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L31eb06.  v0:= v7.`g2.e.i` @type ^`s3.z` @kind object;
  #L31eb0a.  call temp:= `E`(v0) @signature `Ls3/z;.E:()J` @kind virtual;
  #L31eb10.  v0:= temp @kind wide;
  #L31eb12.  v1:= (`int`) v0 @kind l2i;
  #L31eb14.  v7.`g2.e.w` @type ^`int` := v1;
  #L31eb18.  goto L31f00a;
  #L31eb1c.  v2:= new `byte`[v1];
  #L31eb20.  call `readFully`(v8, v2, v9, v1) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L31eb26.  call temp:= `u`(v21, v22) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31eb2c.  v0:= temp @kind object;
  #L31eb2e.  v1:= new `a2.d0$a`;
  #L31eb32.  call `<init>`(v1, v10, v2, v9, v9) @signature `La2/d0$a;.<init>:(I[BII)V` @kind direct;
  #L31eb38.  v0.`g2.e$c.j` @type ^`a2.d0$a` := v1 @kind object;
  #L31eb3c.  goto L31f00a;
  #L31eb40.  call `k`(v21, v22) @signature `Lg2/e;.k:(I)V` @kind direct;
  #L31eb46.  v0:= v7.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31eb4a.  v2:= new `byte`[v1];
  #L31eb4e.  v0.`g2.e$c.i` @type ^`byte`[] := v2 @kind object;
  #L31eb52.  call `readFully`(v8, v2, v9, v1) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L31eb58.  goto L31f00a;
  #L31eb5c.  call temp:= `u`(v21, v22) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31eb62.  v0:= temp @kind object;
  #L31eb64.  call `w`(v7, v0, v8, v1) @signature `Lg2/e;.w:(Lg2/e$c;La2/m;I)V` @kind virtual;
  #L31eb6a.  goto L31f00a;
  #L31eb6e.  v0:= v7.`g2.e.G` @type ^`int`;
  #L31eb72.  if v0 == v5 then goto L31eb78;
  #L31eb76.  return @kind void;
  #L31eb78.  v0:= v7.`g2.e.c` @type ^`android.util.SparseArray` @kind object;
  #L31eb7c.  v2:= v7.`g2.e.M` @type ^`int`;
  #L31eb80.  call temp:= `get`(v0, v2) @signature `Landroid/util/SparseArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L31eb86.  v0:= temp @kind object;
  #L31eb88.  v0:= (`g2.e$c`) v0 @kind object;
  #L31eb8c.  v2:= v7.`g2.e.P` @type ^`int`;
  #L31eb90.  call `x`(v7, v0, v2, v8, v1) @signature `Lg2/e;.x:(Lg2/e$c;ILa2/m;I)V` @kind virtual;
  #L31eb96.  goto L31f00a;
  #L31eb9a.  v2:= v7.`g2.e.G` @type ^`int`;
  #L31eb9e.  v6:= 8I;
  #L31eba2.  if v2 != 0 then goto L31ebe4;
  #L31eba6.  v2:= v7.`g2.e.b` @type ^`g2.g` @kind object;
  #L31ebaa.  call temp:= `d`(v2, v8, v9, v10, v6) @signature `Lg2/g;.d:(La2/m;ZZI)J` @kind virtual;
  #L31ebb0.  v11:= temp @kind wide;
  #L31ebb2.  v2:= (`int`) v11 @kind l2i;
  #L31ebb4.  v7.`g2.e.M` @type ^`int` := v2;
  #L31ebb8.  v2:= v7.`g2.e.b` @type ^`g2.g` @kind object;
  #L31ebbc.  call temp:= `b`(v2) @signature `Lg2/g;.b:()I` @kind virtual;
  #L31ebc2.  v2:= temp;
  #L31ebc4.  v7.`g2.e.N` @type ^`int` := v2;
  #L31ebc8.  v11:= -4.9E-324D;
  #L31ebd2.  v7.`g2.e.I` @type ^`long` := v11 @kind wide;
  #L31ebd6.  v7.`g2.e.G` @type ^`int` := v10;
  #L31ebda.  v2:= v7.`g2.e.g` @type ^`s3.z` @kind object;
  #L31ebde.  call `K`(v2, v9) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L31ebe4.  v2:= v7.`g2.e.c` @type ^`android.util.SparseArray` @kind object;
  #L31ebe8.  v11:= v7.`g2.e.M` @type ^`int`;
  #L31ebec.  call temp:= `get`(v2, v11) @signature `Landroid/util/SparseArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L31ebf2.  v2:= temp @kind object;
  #L31ebf4.  v11:= v2 @kind object;
  #L31ebf6.  v11:= (`g2.e$c`) v11 @kind object;
  #L31ebfa.  if v11 != 0 then goto L31ec12;
  #L31ebfe.  v0:= v7.`g2.e.N` @type ^`int`;
  #L31ec02.  v0:= v1 - v0 @kind int;
  #L31ec06.  call `j`(v8, v0) @signature `La2/m;.j:(I)V` @kind interface;
  #L31ec0c.  v7.`g2.e.G` @type ^`int` := v9;
  #L31ec10.  return @kind void;
  #L31ec12.  call `a`(v11) @signature `Lg2/e$c;.a:(Lg2/e$c;)V` @kind static;
  #L31ec18.  v2:= v7.`g2.e.G` @type ^`int`;
  #L31ec1c.  if v2 != v10 then goto L31ef74;
  #L31ec20.  v2:= 3I;
  #L31ec22.  call `D`(v7, v8, v2) @signature `Lg2/e;.D:(La2/m;I)V` @kind direct;
  #L31ec28.  v12:= v7.`g2.e.g` @type ^`s3.z` @kind object;
  #L31ec2c.  call temp:= `d`(v12) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31ec32.  v12:= temp @kind object;
  #L31ec34.  v12:= v12[v5] @kind byte;
  #L31ec38.  v12:= v12 ^& 6;
  #L31ec3c.  v12:= v12 ^> v10 @kind int;
  #L31ec3e.  v13:= 255I;
  #L31ec42.  if v12 != 0 then goto L31ec6e;
  #L31ec46.  v7.`g2.e.K` @type ^`int` := v10;
  #L31ec4a.  v4:= v7.`g2.e.L` @type ^`int`[] @kind object;
  #L31ec4e.  call temp:= `q`(v4, v10) @signature `Lg2/e;.q:([II)[I` @kind static;
  #L31ec54.  v4:= temp @kind object;
  #L31ec56.  v7.`g2.e.L` @type ^`int`[] := v4 @kind object;
  #L31ec5a.  v12:= v7.`g2.e.N` @type ^`int`;
  #L31ec5e.  v1:= v1 - v12 @kind int;
  #L31ec60.  v1:= v1 - v2 @kind int;
  #L31ec62.  v4[v9]:= v1;
  #L31ec66.  v19:= v11 @kind object;
  #L31ec6a.  goto L31eebc;
  #L31ec6e.  v14:= 4I;
  #L31ec70.  call `D`(v7, v8, v14) @signature `Lg2/e;.D:(La2/m;I)V` @kind direct;
  #L31ec76.  v15:= v7.`g2.e.g` @type ^`s3.z` @kind object;
  #L31ec7a.  call temp:= `d`(v15) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31ec80.  v15:= temp @kind object;
  #L31ec82.  v15:= v15[v2] @kind byte;
  #L31ec86.  v15:= v15 ^& v13 @kind int;
  #L31ec88.  v15:= v15 + v10 @kind int;
  #L31ec8a.  v7.`g2.e.K` @type ^`int` := v15;
  #L31ec8e.  v3:= v7.`g2.e.L` @type ^`int`[] @kind object;
  #L31ec92.  call temp:= `q`(v3, v15) @signature `Lg2/e;.q:([II)[I` @kind static;
  #L31ec98.  v3:= temp @kind object;
  #L31ec9a.  v7.`g2.e.L` @type ^`int`[] := v3 @kind object;
  #L31ec9e.  if v12 != v5 then goto L31ecb8;
  #L31eca2.  v2:= v7.`g2.e.N` @type ^`int`;
  #L31eca6.  v1:= v1 - v2 @kind int;
  #L31eca8.  v1:= v1 - v14 @kind int;
  #L31ecaa.  v2:= v7.`g2.e.K` @type ^`int`;
  #L31ecae.  v1:= v1 / v2 @kind int;
  #L31ecb0.  call `fill`(v3, v9, v2, v1) @signature `Ljava/util/Arrays;.fill:([IIII)V` @kind static;
  #L31ecb6.  goto L31ec66;
  #L31ecb8.  if v12 != v10 then goto L31ed26;
  #L31ecbc.  v2:= 0I;
  #L31ecbe.  v3:= 0I;
  #L31ecc0.  v4:= v7.`g2.e.K` @type ^`int`;
  #L31ecc4.  v12:= v4 + -1;
  #L31ecc8.  if v2 >= v12 then goto L31ed10;
  #L31eccc.  v4:= v7.`g2.e.L` @type ^`int`[] @kind object;
  #L31ecd0.  v4[v2]:= v9;
  #L31ecd4.  v14:= v14 + v10 @kind int;
  #L31ecd6.  call `D`(v7, v8, v14) @signature `Lg2/e;.D:(La2/m;I)V` @kind direct;
  #L31ecdc.  v4:= v7.`g2.e.g` @type ^`s3.z` @kind object;
  #L31ece0.  call temp:= `d`(v4) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31ece6.  v4:= temp @kind object;
  #L31ece8.  v12:= v14 + -1;
  #L31ecec.  v4:= v4[v12] @kind byte;
  #L31ecf0.  v4:= v4 ^& v13 @kind int;
  #L31ecf2.  v12:= v7.`g2.e.L` @type ^`int`[] @kind object;
  #L31ecf6.  v15:= v12[v2];
  #L31ecfa.  v15:= v15 + v4 @kind int;
  #L31ecfc.  v12[v2]:= v15;
  #L31ed00.  if v4 == v13 then goto L31ecd4;
  #L31ed04.  v4:= v12[v2];
  #L31ed08.  v3:= v3 + v4 @kind int;
  #L31ed0a.  v2:= v2 + 1;
  #L31ed0e.  goto L31ecc0;
  #L31ed10.  v2:= v7.`g2.e.L` @type ^`int`[] @kind object;
  #L31ed14.  v4:= v4 - v10 @kind int;
  #L31ed16.  v12:= v7.`g2.e.N` @type ^`int`;
  #L31ed1a.  v1:= v1 - v12 @kind int;
  #L31ed1c.  v1:= v1 - v14 @kind int;
  #L31ed1e.  v1:= v1 - v3 @kind int;
  #L31ed20.  v2[v4]:= v1;
  #L31ed24.  goto L31ec66;
  #L31ed26.  if v12 != v2 then goto L31ef48;
  #L31ed2a.  v2:= 0I;
  #L31ed2c.  v3:= 0I;
  #L31ed2e.  v12:= v7.`g2.e.K` @type ^`int`;
  #L31ed32.  v15:= v12 + -1;
  #L31ed36.  if v2 >= v15 then goto L31eea2;
  #L31ed3a.  v12:= v7.`g2.e.L` @type ^`int`[] @kind object;
  #L31ed3e.  v12[v2]:= v9;
  #L31ed42.  v14:= v14 + 1;
  #L31ed46.  call `D`(v7, v8, v14) @signature `Lg2/e;.D:(La2/m;I)V` @kind direct;
  #L31ed4c.  v12:= v7.`g2.e.g` @type ^`s3.z` @kind object;
  #L31ed50.  call temp:= `d`(v12) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31ed56.  v12:= temp @kind object;
  #L31ed58.  v15:= v14 + -1;
  #L31ed5c.  v12:= v12[v15] @kind byte;
  #L31ed60.  if v12 == 0 then goto L31ee94;
  #L31ed64.  v16:= 0L;
  #L31ed68.  v12:= 0I;
  #L31ed6a.  if v12 >= v6 then goto L31ee2c;
  #L31ed6e.  v18:= v12 - 7;
  #L31ed72.  v5:= v10 ^< v18 @kind int;
  #L31ed76.  v9:= v7.`g2.e.g` @type ^`s3.z` @kind object;
  #L31ed7a.  call temp:= `d`(v9) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31ed80.  v9:= temp @kind object;
  #L31ed82.  v9:= v9[v15] @kind byte;
  #L31ed86.  v9:= v9 ^& v5 @kind int;
  #L31ed88.  if v9 == 0 then goto L31ee18;
  #L31ed8c.  v14:= v14 + v12 @kind int;
  #L31ed8e.  call `D`(v7, v8, v14) @signature `Lg2/e;.D:(La2/m;I)V` @kind direct;
  #L31ed94.  v9:= v7.`g2.e.g` @type ^`s3.z` @kind object;
  #L31ed98.  call temp:= `d`(v9) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31ed9e.  v9:= temp @kind object;
  #L31eda0.  v16:= v15 + 1;
  #L31eda4.  v9:= v9[v15] @kind byte;
  #L31eda8.  v9:= v9 ^& v13 @kind int;
  #L31edaa.  v5:= ~v5 @kind int;
  #L31edac.  v5:= v5 ^& v9 @kind int;
  #L31edae.  v19:= v11 @kind object;
  #L31edb2.  v10:= (`long`) v5 @kind i2l;
  #L31edb4.  v5:= v16;
  #L31edb8.  v16:= v10 @kind wide;
  #L31edbc.  if v5 >= v14 then goto L31edf0;
  #L31edc0.  v10:= v16 ^< v6 @kind long;
  #L31edc4.  v15:= v7.`g2.e.g` @type ^`s3.z` @kind object;
  #L31edc8.  call temp:= `d`(v15) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31edce.  v15:= temp @kind object;
  #L31edd0.  v16:= v5 + 1;
  #L31edd4.  v5:= v15[v5] @kind byte;
  #L31edd8.  v5:= v5 ^& v13 @kind int;
  #L31edda.  v20:= v14;
  #L31edde.  v13:= (`long`) v5 @kind i2l;
  #L31ede0.  v10:= v10 ^| v13 @kind long;
  #L31ede2.  v5:= v16;
  #L31ede6.  v14:= v20;
  #L31edea.  v13:= 255I;
  #L31edee.  goto L31edb8;
  #L31edf0.  v20:= v14;
  #L31edf4.  if v2 <= 0 then goto L31ee0e;
  #L31edf8.  v12:= v12 * 7;
  #L31edfc.  v12:= v12 + 6;
  #L31ee00.  v10:= 1L;
  #L31ee04.  v12:= v10 ^< v12 @kind long;
  #L31ee08.  v12:= v12 - v10 @kind long;
  #L31ee0a.  v16:= v16 - v12 @kind long;
  #L31ee0e.  v10:= v16 @kind wide;
  #L31ee12.  v14:= v20;
  #L31ee16.  goto L31ee34;
  #L31ee18.  v19:= v11 @kind object;
  #L31ee1c.  v12:= v12 + 1;
  #L31ee20.  v5:= 2I;
  #L31ee22.  v9:= 0I;
  #L31ee24.  v10:= 1I;
  #L31ee26.  v13:= 255I;
  #L31ee2a.  goto L31ed6a;
  #L31ee2c.  v19:= v11 @kind object;
  #L31ee30.  v10:= v16 @kind wide;
  #L31ee34.  v12:= -2147483648L;
  #L31ee3a.  v5:= lcmp(v10, v12);
  #L31ee3e.  if v5 < 0 then goto L31ee86;
  #L31ee42.  v12:= 2147483647L;
  #L31ee48.  v5:= lcmp(v10, v12);
  #L31ee4c.  if v5 > 0 then goto L31ee86;
  #L31ee50.  v5:= (`int`) v10 @kind l2i;
  #L31ee52.  v10:= v7.`g2.e.L` @type ^`int`[] @kind object;
  #L31ee56.  if v2 != 0 then goto L31ee5c;
  #L31ee5a.  goto L31ee66;
  #L31ee5c.  v11:= v2 + -1;
  #L31ee60.  v11:= v10[v11];
  #L31ee64.  v5:= v5 + v11 @kind int;
  #L31ee66.  v10[v2]:= v5;
  #L31ee6a.  v5:= v10[v2];
  #L31ee6e.  v3:= v3 + v5 @kind int;
  #L31ee70.  v2:= v2 + 1;
  #L31ee74.  v11:= v19 @kind object;
  #L31ee78.  v5:= 2I;
  #L31ee7a.  v9:= 0I;
  #L31ee7c.  v10:= 1I;
  #L31ee7e.  v13:= 255I;
  #L31ee82.  goto L31ed2e;
  #L31ee86.  v0:= "EBML lacing sample size out of range." @kind object;
  #L31ee8a.  call temp:= `a`(v0, v4) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31ee90.  v0:= temp @kind object;
  #L31ee92.  throw v0;
  #L31ee94.  v0:= "No valid varint length mask found" @kind object;
  #L31ee98.  call temp:= `a`(v0, v4) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31ee9e.  v0:= temp @kind object;
  #L31eea0.  throw v0;
  #L31eea2.  v19:= v11 @kind object;
  #L31eea6.  v2:= v7.`g2.e.L` @type ^`int`[] @kind object;
  #L31eeaa.  v4:= 1I;
  #L31eeac.  v12:= v12 - v4 @kind int;
  #L31eeae.  v4:= v7.`g2.e.N` @type ^`int`;
  #L31eeb2.  v1:= v1 - v4 @kind int;
  #L31eeb4.  v1:= v1 - v14 @kind int;
  #L31eeb6.  v1:= v1 - v3 @kind int;
  #L31eeb8.  v2[v12]:= v1;
  #L31eebc.  v1:= v7.`g2.e.g` @type ^`s3.z` @kind object;
  #L31eec0.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31eec6.  v1:= temp @kind object;
  #L31eec8.  v2:= 0I;
  #L31eeca.  v1:= v1[v2] @kind byte;
  #L31eece.  v1:= v1 ^< v6 @kind int;
  #L31eed0.  v2:= v7.`g2.e.g` @type ^`s3.z` @kind object;
  #L31eed4.  call temp:= `d`(v2) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31eeda.  v2:= temp @kind object;
  #L31eedc.  v3:= 1I;
  #L31eede.  v2:= v2[v3] @kind byte;
  #L31eee2.  v3:= 255I;
  #L31eee6.  v2:= v2 ^& v3 @kind int;
  #L31eee8.  v1:= v1 ^| v2 @kind int;
  #L31eeea.  v2:= v7.`g2.e.B` @type ^`long` @kind wide;
  #L31eeee.  v4:= (`long`) v1 @kind i2l;
  #L31eef0.  call temp:= `F`(v7, v4) @signature `Lg2/e;.F:(J)J` @kind direct;
  #L31eef6.  v4:= temp @kind wide;
  #L31eef8.  v2:= v2 + v4 @kind long;
  #L31eefa.  v7.`g2.e.H` @type ^`long` := v2 @kind wide;
  #L31eefe.  v10:= v19 @kind object;
  #L31ef02.  v1:= v10.`g2.e$c.d` @type ^`int`;
  #L31ef06.  v2:= 2I;
  #L31ef08.  if v1 == v2 then goto L31ef34;
  #L31ef0c.  v1:= 163I;
  #L31ef10.  if v0 != v1 then goto L31ef30;
  #L31ef14.  v1:= v7.`g2.e.g` @type ^`s3.z` @kind object;
  #L31ef18.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31ef1e.  v1:= temp @kind object;
  #L31ef20.  v1:= v1[v2] @kind byte;
  #L31ef24.  v2:= 128I;
  #L31ef28.  v1:= v1 ^& v2 @kind int;
  #L31ef2a.  if v1 != v2 then goto L31ef30;
  #L31ef2e.  goto L31ef34;
  #L31ef30.  v1:= 0I;
  #L31ef32.  goto L31ef36;
  #L31ef34.  v1:= 1I;
  #L31ef36.  v7.`g2.e.O` @type ^`int` := v1;
  #L31ef3a.  v1:= 2I;
  #L31ef3c.  v7.`g2.e.G` @type ^`int` := v1;
  #L31ef40.  v1:= 0I;
  #L31ef42.  v7.`g2.e.J` @type ^`int` := v1;
  #L31ef46.  goto L31ef76;
  #L31ef48.  v0:= new `java.lang.StringBuilder`;
  #L31ef4c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31ef52.  v1:= "Unexpected lacing value: " @kind object;
  #L31ef56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31ef5c.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31ef62.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31ef68.  v0:= temp @kind object;
  #L31ef6a.  call temp:= `a`(v0, v4) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31ef70.  v0:= temp @kind object;
  #L31ef72.  throw v0;
  #L31ef74.  v10:= v11 @kind object;
  #L31ef76.  v1:= 163I;
  #L31ef7a.  if v0 != v1 then goto L31efdc;
  #L31ef7e.  v0:= v7.`g2.e.J` @type ^`int`;
  #L31ef82.  v1:= v7.`g2.e.K` @type ^`int`;
  #L31ef86.  if v0 >= v1 then goto L31efd4;
  #L31ef8a.  v1:= v7.`g2.e.L` @type ^`int`[] @kind object;
  #L31ef8e.  v0:= v1[v0];
  #L31ef92.  v1:= 0I;
  #L31ef94.  call temp:= `J`(v7, v8, v10, v0, v1) @signature `Lg2/e;.J:(La2/m;Lg2/e$c;IZ)I` @kind direct;
  #L31ef9a.  v5:= temp;
  #L31ef9c.  v0:= v7.`g2.e.H` @type ^`long` @kind wide;
  #L31efa0.  v2:= v7.`g2.e.J` @type ^`int`;
  #L31efa4.  v3:= v10.`g2.e$c.e` @type ^`int`;
  #L31efa8.  v2:= v2 * v3 @kind int;
  #L31efac.  v2:= v2 / 1000;
  #L31efb0.  v2:= (`long`) v2 @kind i2l;
  #L31efb2.  v2:= v2 + v0 @kind long;
  #L31efb4.  v4:= v7.`g2.e.O` @type ^`int`;
  #L31efb8.  v6:= 0I;
  #L31efba.  v0:= v21 @kind object;
  #L31efbe.  v1:= v10 @kind object;
  #L31efc0.  call `o`(v0, v1, v2, v4, v5, v6) @signature `Lg2/e;.o:(Lg2/e$c;JIII)V` @kind direct;
  #L31efc6.  v0:= v7.`g2.e.J` @type ^`int`;
  #L31efca.  v1:= 1I;
  #L31efcc.  v0:= v0 + v1 @kind int;
  #L31efce.  v7.`g2.e.J` @type ^`int` := v0;
  #L31efd2.  goto L31ef7e;
  #L31efd4.  v0:= 0I;
  #L31efd6.  v7.`g2.e.G` @type ^`int` := v0;
  #L31efda.  goto L31f00a;
  #L31efdc.  v1:= 1I;
  #L31efde.  v0:= v7.`g2.e.J` @type ^`int`;
  #L31efe2.  v2:= v7.`g2.e.K` @type ^`int`;
  #L31efe6.  if v0 >= v2 then goto L31f00a;
  #L31efea.  v2:= v7.`g2.e.L` @type ^`int`[] @kind object;
  #L31efee.  v3:= v2[v0];
  #L31eff2.  call temp:= `J`(v7, v8, v10, v3, v1) @signature `Lg2/e;.J:(La2/m;Lg2/e$c;IZ)I` @kind direct;
  #L31eff8.  v3:= temp;
  #L31effa.  v2[v0]:= v3;
  #L31effe.  v0:= v7.`g2.e.J` @type ^`int`;
  #L31f002.  v0:= v0 + v1 @kind int;
  #L31f004.  v7.`g2.e.J` @type ^`int` := v0;
  #L31f008.  goto L31efde;
  #L31f00a.  return @kind void;
}
procedure `void` `p`(`g2.e` v10 @kind this, `int` v11 ) @signature `Lg2/e;.p:(I)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L31f198.  call `l`(v10) @signature `Lg2/e;.l:()V` @kind direct;
  #L31f19e.  v0:= 160I;
  #L31f1a2.  v1:= 0I;
  #L31f1a4.  if v11 == v0 then goto L31f39e;
  #L31f1a8.  v0:= 174I;
  #L31f1ac.  v2:= 0I;
  #L31f1ae.  if v11 == v0 then goto L31f348;
  #L31f1b2.  v0:= 19899I;
  #L31f1b6.  v3:= 475249515I;
  #L31f1bc.  if v11 == v0 then goto L31f314;
  #L31f1c0.  v0:= 25152I;
  #L31f1c4.  v4:= 1I;
  #L31f1c6.  if v11 == v0 then goto L31f2b4;
  #L31f1ca.  v0:= 28032I;
  #L31f1ce.  if v11 == v0 then goto L31f288;
  #L31f1d2.  v0:= 357149030I;
  #L31f1d8.  if v11 == v0 then goto L31f24c;
  #L31f1dc.  v0:= 374648427I;
  #L31f1e2.  if v11 == v0 then goto L31f220;
  #L31f1e6.  if v11 == v3 then goto L31f1ee;
  #L31f1ea.  goto L31f494;
  #L31f1ee.  v11:= v10.`g2.e.v` @type ^`boolean` @kind boolean;
  #L31f1f2.  if v11 != 0 then goto L31f214;
  #L31f1f6.  v11:= v10.`g2.e.b0` @type ^`a2.n` @kind object;
  #L31f1fa.  v0:= v10.`g2.e.C` @type ^`s3.r` @kind object;
  #L31f1fe.  v1:= v10.`g2.e.D` @type ^`s3.r` @kind object;
  #L31f202.  call temp:= `n`(v10, v0, v1) @signature `Lg2/e;.n:(Ls3/r;Ls3/r;)La2/a0;` @kind direct;
  #L31f208.  v0:= temp @kind object;
  #L31f20a.  call `m`(v11, v0) @signature `La2/n;.m:(La2/a0;)V` @kind interface;
  #L31f210.  v10.`g2.e.v` @type ^`boolean` := v4 @kind boolean;
  #L31f214.  v10.`g2.e.C` @type ^`s3.r` := v2 @kind object;
  #L31f218.  v10.`g2.e.D` @type ^`s3.r` := v2 @kind object;
  #L31f21c.  goto L31f494;
  #L31f220.  v11:= v10.`g2.e.c` @type ^`android.util.SparseArray` @kind object;
  #L31f224.  call temp:= `size`(v11) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L31f22a.  v11:= temp;
  #L31f22c.  if v11 == 0 then goto L31f23e;
  #L31f230.  v11:= v10.`g2.e.b0` @type ^`a2.n` @kind object;
  #L31f234.  call `h`(v11) @signature `La2/n;.h:()V` @kind interface;
  #L31f23a.  goto L31f494;
  #L31f23e.  v11:= "No valid tracks were found" @kind object;
  #L31f242.  call temp:= `a`(v11, v2) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31f248.  v11:= temp @kind object;
  #L31f24a.  throw v11;
  #L31f24c.  v0:= v10.`g2.e.r` @type ^`long` @kind wide;
  #L31f250.  v2:= -4.9E-324D;
  #L31f25a.  v11:= lcmp(v0, v2);
  #L31f25e.  if v11 != 0 then goto L31f26c;
  #L31f262.  v0:= 1000000L;
  #L31f268.  v10.`g2.e.r` @type ^`long` := v0 @kind wide;
  #L31f26c.  v0:= v10.`g2.e.s` @type ^`long` @kind wide;
  #L31f270.  v11:= lcmp(v0, v2);
  #L31f274.  if v11 == 0 then goto L31f494;
  #L31f278.  call temp:= `F`(v10, v0) @signature `Lg2/e;.F:(J)J` @kind direct;
  #L31f27e.  v0:= temp @kind wide;
  #L31f280.  v10.`g2.e.t` @type ^`long` := v0 @kind wide;
  #L31f284.  goto L31f494;
  #L31f288.  call `k`(v10, v11) @signature `Lg2/e;.k:(I)V` @kind direct;
  #L31f28e.  v11:= v10.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f292.  v0:= v11.`g2.e$c.h` @type ^`boolean` @kind boolean;
  #L31f296.  if v0 == 0 then goto L31f494;
  #L31f29a.  v11:= v11.`g2.e$c.i` @type ^`byte`[] @kind object;
  #L31f29e.  if v11 != 0 then goto L31f2a6;
  #L31f2a2.  goto L31f494;
  #L31f2a6.  v11:= "Combining encryption and compression is not supported" @kind object;
  #L31f2aa.  call temp:= `a`(v11, v2) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31f2b0.  v11:= temp @kind object;
  #L31f2b2.  throw v11;
  #L31f2b4.  call `k`(v10, v11) @signature `Lg2/e;.k:(I)V` @kind direct;
  #L31f2ba.  v11:= v10.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f2be.  v0:= v11.`g2.e$c.h` @type ^`boolean` @kind boolean;
  #L31f2c2.  if v0 == 0 then goto L31f494;
  #L31f2c6.  v0:= v11.`g2.e$c.j` @type ^`a2.d0$a` @kind object;
  #L31f2ca.  if v0 == 0 then goto L31f306;
  #L31f2ce.  v0:= new `z1.m`;
  #L31f2d2.  v2:= new `z1.m$b`[v4];
  #L31f2d6.  v3:= new `z1.m$b`;
  #L31f2da.  v4:= `@@v1.h.a` @type ^`java.util.UUID` @kind object;
  #L31f2de.  v5:= v10.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f2e2.  v5:= v5.`g2.e$c.j` @type ^`a2.d0$a` @kind object;
  #L31f2e6.  v5:= v5.`a2.d0$a.b` @type ^`byte`[] @kind object;
  #L31f2ea.  v6:= "video/webm" @kind object;
  #L31f2ee.  call `<init>`(v3, v4, v6, v5) @signature `Lz1/m$b;.<init>:(Ljava/util/UUID;Ljava/lang/String;[B)V` @kind direct;
  #L31f2f4.  v2[v1]:= v3 @kind object;
  #L31f2f8.  call `<init>`(v0, v2) @signature `Lz1/m;.<init>:([Lz1/m$b;)V` @kind direct;
  #L31f2fe.  v11.`g2.e$c.l` @type ^`z1.m` := v0 @kind object;
  #L31f302.  goto L31f494;
  #L31f306.  v11:= "Encrypted Track found but ContentEncKeyID was not found" @kind object;
  #L31f30a.  call temp:= `a`(v11, v2) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31f310.  v11:= temp @kind object;
  #L31f312.  throw v11;
  #L31f314.  v11:= v10.`g2.e.w` @type ^`int`;
  #L31f318.  v0:= -1I;
  #L31f31a.  if v11 == v0 then goto L31f33a;
  #L31f31e.  v0:= v10.`g2.e.x` @type ^`long` @kind wide;
  #L31f322.  v4:= -1L;
  #L31f326.  v6:= lcmp(v0, v4);
  #L31f32a.  if v6 == 0 then goto L31f33a;
  #L31f32e.  if v11 != v3 then goto L31f494;
  #L31f332.  v10.`g2.e.z` @type ^`long` := v0 @kind wide;
  #L31f336.  goto L31f494;
  #L31f33a.  v11:= "Mandatory element SeekID or SeekPosition not found" @kind object;
  #L31f33e.  call temp:= `a`(v11, v2) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31f344.  v11:= temp @kind object;
  #L31f346.  throw v11;
  #L31f348.  v11:= v10.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f34c.  call temp:= `h`(v11) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L31f352.  v11:= temp @kind object;
  #L31f354.  v11:= (`g2.e$c`) v11 @kind object;
  #L31f358.  v0:= v11.`g2.e$c.b` @type ^`java.lang.String` @kind object;
  #L31f35c.  if v0 == 0 then goto L31f390;
  #L31f360.  call temp:= `z`(v0) @signature `Lg2/e;.z:(Ljava/lang/String;)Z` @kind static;
  #L31f366.  v0:= temp;
  #L31f368.  if v0 == 0 then goto L31f388;
  #L31f36c.  v0:= v10.`g2.e.b0` @type ^`a2.n` @kind object;
  #L31f370.  v1:= v11.`g2.e$c.c` @type ^`int`;
  #L31f374.  call `i`(v11, v0, v1) @signature `Lg2/e$c;.i:(La2/n;I)V` @kind virtual;
  #L31f37a.  v0:= v10.`g2.e.c` @type ^`android.util.SparseArray` @kind object;
  #L31f37e.  v1:= v11.`g2.e$c.c` @type ^`int`;
  #L31f382.  call `put`(v0, v1, v11) @signature `Landroid/util/SparseArray;.put:(ILjava/lang/Object;)V` @kind virtual;
  #L31f388.  v10.`g2.e.u` @type ^`g2.e$c` := v2 @kind object;
  #L31f38c.  goto L31f494;
  #L31f390.  v11:= "CodecId is missing in TrackEntry element" @kind object;
  #L31f394.  call temp:= `a`(v11, v2) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31f39a.  v11:= temp @kind object;
  #L31f39c.  throw v11;
  #L31f39e.  v11:= v10.`g2.e.G` @type ^`int`;
  #L31f3a2.  v0:= 2I;
  #L31f3a4.  if v11 == v0 then goto L31f3aa;
  #L31f3a8.  return @kind void;
  #L31f3aa.  v11:= v10.`g2.e.c` @type ^`android.util.SparseArray` @kind object;
  #L31f3ae.  v0:= v10.`g2.e.M` @type ^`int`;
  #L31f3b2.  call temp:= `get`(v11, v0) @signature `Landroid/util/SparseArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L31f3b8.  v11:= temp @kind object;
  #L31f3ba.  v11:= (`g2.e$c`) v11 @kind object;
  #L31f3be.  call `a`(v11) @signature `Lg2/e$c;.a:(Lg2/e$c;)V` @kind static;
  #L31f3c4.  v2:= v10.`g2.e.R` @type ^`long` @kind wide;
  #L31f3c8.  v4:= 0L;
  #L31f3cc.  v0:= lcmp(v2, v4);
  #L31f3d0.  if v0 <= 0 then goto L31f41e;
  #L31f3d4.  v0:= v11.`g2.e$c.b` @type ^`java.lang.String` @kind object;
  #L31f3d8.  v2:= "A_OPUS" @kind object;
  #L31f3dc.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31f3e2.  v0:= temp;
  #L31f3e4.  if v0 == 0 then goto L31f41e;
  #L31f3e8.  v0:= v10.`g2.e.n` @type ^`s3.z` @kind object;
  #L31f3ec.  v2:= 8I;
  #L31f3f0.  call temp:= `allocate`(v2) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L31f3f6.  v2:= temp @kind object;
  #L31f3f8.  v3:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L31f3fc.  call temp:= `order`(v2, v3) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L31f402.  v2:= temp @kind object;
  #L31f404.  v3:= v10.`g2.e.R` @type ^`long` @kind wide;
  #L31f408.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L31f40e.  v2:= temp @kind object;
  #L31f410.  call temp:= `array`(v2) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L31f416.  v2:= temp @kind object;
  #L31f418.  call `L`(v0, v2) @signature `Ls3/z;.L:([B)V` @kind virtual;
  #L31f41e.  v0:= 0I;
  #L31f420.  v2:= 0I;
  #L31f422.  v3:= v10.`g2.e.K` @type ^`int`;
  #L31f426.  if v0 >= v3 then goto L31f43a;
  #L31f42a.  v3:= v10.`g2.e.L` @type ^`int`[] @kind object;
  #L31f42e.  v3:= v3[v0];
  #L31f432.  v2:= v2 + v3 @kind int;
  #L31f434.  v0:= v0 + 1;
  #L31f438.  goto L31f422;
  #L31f43a.  v0:= 0I;
  #L31f43c.  v3:= v10.`g2.e.K` @type ^`int`;
  #L31f440.  if v0 >= v3 then goto L31f490;
  #L31f444.  v3:= v10.`g2.e.H` @type ^`long` @kind wide;
  #L31f448.  v5:= v11.`g2.e$c.e` @type ^`int`;
  #L31f44c.  v5:= v5 * v0 @kind int;
  #L31f450.  v5:= v5 / 1000;
  #L31f454.  v5:= (`long`) v5 @kind i2l;
  #L31f456.  v4:= v3 + v5 @kind long;
  #L31f45a.  v3:= v10.`g2.e.O` @type ^`int`;
  #L31f45e.  if v0 != 0 then goto L31f46e;
  #L31f462.  v6:= v10.`g2.e.Q` @type ^`boolean` @kind boolean;
  #L31f466.  if v6 != 0 then goto L31f46e;
  #L31f46a.  v3:= v3 ^| 1;
  #L31f46e.  v6:= v3;
  #L31f470.  v3:= v10.`g2.e.L` @type ^`int`[] @kind object;
  #L31f474.  v7:= v3[v0];
  #L31f478.  v9:= v2 - v7 @kind int;
  #L31f47c.  v2:= v10 @kind object;
  #L31f47e.  v3:= v11 @kind object;
  #L31f480.  v8:= v9;
  #L31f482.  call `o`(v2, v3, v4, v6, v7, v8) @signature `Lg2/e;.o:(Lg2/e$c;JIII)V` @kind direct;
  #L31f488.  v0:= v0 + 1;
  #L31f48c.  v2:= v9;
  #L31f48e.  goto L31f43c;
  #L31f490.  v10.`g2.e.G` @type ^`int` := v1;
  #L31f494.  return @kind void;
}
procedure `void` `s`(`g2.e` v1 @kind this, `int` v2 , `double` v3 ) @signature `Lg2/e;.s:(ID)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L31f4a8.  v0:= 181I;
  #L31f4ac.  if v2 == v0 then goto L31f5a2;
  #L31f4b0.  v0:= 17545I;
  #L31f4b4.  if v2 == v0 then goto L31f59a;
  #L31f4b8.  goto L31f5b4;
  #L31f4be.  goto L31f5e4;
  #L31f4c4.  goto L31f5b0;
  #L31f4c8.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f4ce.  v2:= temp @kind object;
  #L31f4d0.  v3:= (`float`) v3 @kind d2f;
  #L31f4d2.  v2.`g2.e$c.u` @type ^`float` := v3;
  #L31f4d6.  goto L31f5b0;
  #L31f4da.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f4e0.  v2:= temp @kind object;
  #L31f4e2.  v3:= (`float`) v3 @kind d2f;
  #L31f4e4.  v2.`g2.e$c.t` @type ^`float` := v3;
  #L31f4e8.  goto L31f5b0;
  #L31f4ea.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f4f0.  v2:= temp @kind object;
  #L31f4f2.  v3:= (`float`) v3 @kind d2f;
  #L31f4f4.  v2.`g2.e$c.s` @type ^`float` := v3;
  #L31f4f8.  goto L31f5b0;
  #L31f4fa.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f500.  v2:= temp @kind object;
  #L31f502.  v3:= (`float`) v3 @kind d2f;
  #L31f504.  v2.`g2.e$c.M` @type ^`float` := v3;
  #L31f508.  goto L31f5b0;
  #L31f50a.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f510.  v2:= temp @kind object;
  #L31f512.  v3:= (`float`) v3 @kind d2f;
  #L31f514.  v2.`g2.e$c.L` @type ^`float` := v3;
  #L31f518.  goto L31f5b0;
  #L31f51a.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f520.  v2:= temp @kind object;
  #L31f522.  v3:= (`float`) v3 @kind d2f;
  #L31f524.  v2.`g2.e$c.K` @type ^`float` := v3;
  #L31f528.  goto L31f5b0;
  #L31f52a.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f530.  v2:= temp @kind object;
  #L31f532.  v3:= (`float`) v3 @kind d2f;
  #L31f534.  v2.`g2.e$c.J` @type ^`float` := v3;
  #L31f538.  goto L31f5b0;
  #L31f53a.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f540.  v2:= temp @kind object;
  #L31f542.  v3:= (`float`) v3 @kind d2f;
  #L31f544.  v2.`g2.e$c.I` @type ^`float` := v3;
  #L31f548.  goto L31f5b0;
  #L31f54a.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f550.  v2:= temp @kind object;
  #L31f552.  v3:= (`float`) v3 @kind d2f;
  #L31f554.  v2.`g2.e$c.H` @type ^`float` := v3;
  #L31f558.  goto L31f5b0;
  #L31f55a.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f560.  v2:= temp @kind object;
  #L31f562.  v3:= (`float`) v3 @kind d2f;
  #L31f564.  v2.`g2.e$c.G` @type ^`float` := v3;
  #L31f568.  goto L31f5b0;
  #L31f56a.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f570.  v2:= temp @kind object;
  #L31f572.  v3:= (`float`) v3 @kind d2f;
  #L31f574.  v2.`g2.e$c.F` @type ^`float` := v3;
  #L31f578.  goto L31f5b0;
  #L31f57a.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f580.  v2:= temp @kind object;
  #L31f582.  v3:= (`float`) v3 @kind d2f;
  #L31f584.  v2.`g2.e$c.E` @type ^`float` := v3;
  #L31f588.  goto L31f5b0;
  #L31f58a.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f590.  v2:= temp @kind object;
  #L31f592.  v3:= (`float`) v3 @kind d2f;
  #L31f594.  v2.`g2.e$c.D` @type ^`float` := v3;
  #L31f598.  goto L31f5b0;
  #L31f59a.  v2:= (`long`) v3 @kind d2l;
  #L31f59c.  v1.`g2.e.s` @type ^`long` := v2 @kind wide;
  #L31f5a0.  goto L31f5b0;
  #L31f5a2.  call temp:= `u`(v1, v2) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f5a8.  v2:= temp @kind object;
  #L31f5aa.  v3:= (`int`) v3 @kind d2i;
  #L31f5ac.  v2.`g2.e$c.Q` @type ^`int` := v3;
  #L31f5b0.  return @kind void;
  #L31f5b2.  
  #L31f5b4.  switch v2
                  | 21969 => goto L31f58a
                  | 21970 => goto L31f57a
                  | 21971 => goto L31f56a
                  | 21972 => goto L31f55a
                  | 21973 => goto L31f54a
                  | 21974 => goto L31f53a
                  | 21975 => goto L31f52a
                  | 21976 => goto L31f51a
                  | 21977 => goto L31f50a
                  | 21978 => goto L31f4fa
                  | else => goto L31f4be;
  #L31f5e4.  switch v2
                  | 30323 => goto L31f4ea
                  | 30324 => goto L31f4da
                  | 30325 => goto L31f4c8
                  | else => goto L31f4c4;
}
procedure `g2.e$c` `u`(`g2.e` v0 @kind this, `int` v1 ) @signature `Lg2/e;.u:(I)Lg2/e$c;` @AccessFlag PROTECTED {
    temp;

  #L31dc3c.  call `k`(v0, v1) @signature `Lg2/e;.k:(I)V` @kind direct;
  #L31dc42.  v1:= v0.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31dc46.  return v1 @kind object;
}
procedure `int` `v`(`g2.e` v0 @kind this, `int` v1 ) @signature `Lg2/e;.v:(I)I` @AccessFlag PROTECTED {
    temp;

  #L31dc74.  goto L31dc94;
  #L31dc7a.  v1:= 0I;
  #L31dc7c.  return v1;
  #L31dc7e.  v1:= 5I;
  #L31dc80.  return v1;
  #L31dc82.  v1:= 4I;
  #L31dc84.  return v1;
  #L31dc86.  v1:= 1I;
  #L31dc88.  return v1;
  #L31dc8a.  v1:= 3I;
  #L31dc8c.  return v1;
  #L31dc8e.  v1:= 2I;
  #L31dc90.  return v1;
  #L31dc92.  
  #L31dc94.  switch v1
                  | 131 => goto L31dc8e
                  | 134 => goto L31dc8a
                  | 136 => goto L31dc8e
                  | 155 => goto L31dc8e
                  | 159 => goto L31dc8e
                  | 160 => goto L31dc86
                  | 161 => goto L31dc82
                  | 163 => goto L31dc82
                  | 165 => goto L31dc82
                  | 166 => goto L31dc86
                  | 174 => goto L31dc86
                  | 176 => goto L31dc8e
                  | 179 => goto L31dc8e
                  | 181 => goto L31dc7e
                  | 183 => goto L31dc86
                  | 186 => goto L31dc8e
                  | 187 => goto L31dc86
                  | 215 => goto L31dc8e
                  | 224 => goto L31dc86
                  | 225 => goto L31dc86
                  | 231 => goto L31dc8e
                  | 238 => goto L31dc8e
                  | 241 => goto L31dc8e
                  | 251 => goto L31dc8e
                  | 16868 => goto L31dc86
                  | 16871 => goto L31dc8e
                  | 16877 => goto L31dc82
                  | 16980 => goto L31dc8e
                  | 16981 => goto L31dc82
                  | 17026 => goto L31dc8a
                  | 17029 => goto L31dc8e
                  | 17143 => goto L31dc8e
                  | 17545 => goto L31dc7e
                  | 18401 => goto L31dc8e
                  | 18402 => goto L31dc82
                  | 18407 => goto L31dc86
                  | 18408 => goto L31dc8e
                  | 19899 => goto L31dc86
                  | 20529 => goto L31dc8e
                  | 20530 => goto L31dc8e
                  | 20532 => goto L31dc86
                  | 20533 => goto L31dc86
                  | 21358 => goto L31dc8a
                  | 21419 => goto L31dc82
                  | 21420 => goto L31dc8e
                  | 21432 => goto L31dc8e
                  | 21680 => goto L31dc8e
                  | 21682 => goto L31dc8e
                  | 21690 => goto L31dc8e
                  | 21930 => goto L31dc8e
                  | 21936 => goto L31dc86
                  | 21945 => goto L31dc8e
                  | 21946 => goto L31dc8e
                  | 21947 => goto L31dc8e
                  | 21948 => goto L31dc8e
                  | 21949 => goto L31dc8e
                  | 21968 => goto L31dc86
                  | 21969 => goto L31dc7e
                  | 21970 => goto L31dc7e
                  | 21971 => goto L31dc7e
                  | 21972 => goto L31dc7e
                  | 21973 => goto L31dc7e
                  | 21974 => goto L31dc7e
                  | 21975 => goto L31dc7e
                  | 21976 => goto L31dc7e
                  | 21977 => goto L31dc7e
                  | 21978 => goto L31dc7e
                  | 21998 => goto L31dc8e
                  | 22186 => goto L31dc8e
                  | 22203 => goto L31dc8e
                  | 25152 => goto L31dc86
                  | 25188 => goto L31dc8e
                  | 25506 => goto L31dc82
                  | 28032 => goto L31dc86
                  | 30113 => goto L31dc86
                  | 30114 => goto L31dc8e
                  | 30320 => goto L31dc86
                  | 30321 => goto L31dc8e
                  | 30322 => goto L31dc82
                  | 30323 => goto L31dc7e
                  | 30324 => goto L31dc7e
                  | 30325 => goto L31dc7e
                  | 2274716 => goto L31dc8a
                  | 2352003 => goto L31dc8e
                  | 2807729 => goto L31dc8e
                  | 290298740 => goto L31dc86
                  | 357149030 => goto L31dc86
                  | 374648427 => goto L31dc86
                  | 408125543 => goto L31dc86
                  | 440786851 => goto L31dc86
                  | 475249515 => goto L31dc86
                  | 524531317 => goto L31dc86
                  | else => goto L31dc7a;
}
procedure `void` `w`(`g2.e` v2 @kind this, `g2.e$c` v3 @kind object, `a2.m` v4 @kind object, `int` v5 ) @signature `Lg2/e;.w:(Lg2/e$c;La2/m;I)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L31f608.  call temp:= `b`(v3) @signature `Lg2/e$c;.b:(Lg2/e$c;)I` @kind static;
  #L31f60e.  v0:= temp;
  #L31f610.  v1:= 1685485123I;
  #L31f616.  if v0 == v1 then goto L31f636;
  #L31f61a.  call temp:= `b`(v3) @signature `Lg2/e$c;.b:(Lg2/e$c;)I` @kind static;
  #L31f620.  v0:= temp;
  #L31f622.  v1:= 1685480259I;
  #L31f628.  if v0 != v1 then goto L31f62e;
  #L31f62c.  goto L31f636;
  #L31f62e.  call `j`(v4, v5) @signature `La2/m;.j:(I)V` @kind interface;
  #L31f634.  goto L31f646;
  #L31f636.  v0:= new `byte`[v5];
  #L31f63a.  v3.`g2.e$c.N` @type ^`byte`[] := v0 @kind object;
  #L31f63e.  v3:= 0I;
  #L31f640.  call `readFully`(v4, v0, v3, v5) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L31f646.  return @kind void;
}
procedure `void` `x`(`g2.e` v1 @kind this, `g2.e$c` v2 @kind object, `int` v3 , `a2.m` v4 @kind object, `int` v5 ) @signature `Lg2/e;.x:(Lg2/e$c;ILa2/m;I)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L31f658.  v0:= 4I;
  #L31f65a.  if v3 != v0 then goto L31f692;
  #L31f65e.  v2:= v2.`g2.e$c.b` @type ^`java.lang.String` @kind object;
  #L31f662.  v3:= "V_VP9" @kind object;
  #L31f666.  call temp:= `equals`(v3, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31f66c.  v2:= temp;
  #L31f66e.  if v2 == 0 then goto L31f692;
  #L31f672.  v2:= v1.`g2.e.n` @type ^`s3.z` @kind object;
  #L31f676.  call `K`(v2, v5) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L31f67c.  v2:= v1.`g2.e.n` @type ^`s3.z` @kind object;
  #L31f680.  call temp:= `d`(v2) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L31f686.  v2:= temp @kind object;
  #L31f688.  v3:= 0I;
  #L31f68a.  call `readFully`(v4, v2, v3, v5) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L31f690.  goto L31f698;
  #L31f692.  call `j`(v4, v5) @signature `La2/m;.j:(I)V` @kind interface;
  #L31f698.  return @kind void;
}
procedure `void` `y`(`g2.e` v8 @kind this, `int` v9 , `long` v10 ) @signature `Lg2/e;.y:(IJ)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L31f6c4.  v0:= 20529I;
  #L31f6c8.  v1:= 0I;
  #L31f6ca.  v2:= " not supported" @kind object;
  #L31f6ce.  if v9 == v0 then goto L31fb5c;
  #L31f6d2.  v0:= 20530I;
  #L31f6d6.  v3:= 1L;
  #L31f6da.  if v9 == v0 then goto L31fb20;
  #L31f6de.  v0:= 0I;
  #L31f6e0.  v5:= 3I;
  #L31f6e2.  v6:= 2I;
  #L31f6e4.  v7:= 1I;
  #L31f6e6.  goto L31fb9c;
  #L31f6ec.  v0:= -1I;
  #L31f6ee.  goto L31fca0;
  #L31f6f4.  goto L31fb68;
  #L31f6f8.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f6fe.  v9:= temp @kind object;
  #L31f700.  v11:= (`int`) v10 @kind l2i;
  #L31f702.  v9.`g2.e$c.C` @type ^`int` := v11;
  #L31f706.  goto L31fb68;
  #L31f70a.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f710.  v9:= temp @kind object;
  #L31f712.  v11:= (`int`) v10 @kind l2i;
  #L31f714.  v9.`g2.e$c.B` @type ^`int` := v11;
  #L31f718.  goto L31fb68;
  #L31f71c.  call `k`(v8, v9) @signature `Lg2/e;.k:(I)V` @kind direct;
  #L31f722.  v9:= v8.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f726.  v9.`g2.e$c.x` @type ^`boolean` := v7 @kind boolean;
  #L31f72a.  v9:= (`int`) v10 @kind l2i;
  #L31f72c.  call temp:= `b`(v9) @signature `Lt3/c;.b:(I)I` @kind static;
  #L31f732.  v9:= temp;
  #L31f734.  if v9 == v0 then goto L31fb68;
  #L31f738.  v10:= v8.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f73c.  v10.`g2.e$c.y` @type ^`int` := v9;
  #L31f740.  goto L31fb68;
  #L31f744.  call `k`(v8, v9) @signature `Lg2/e;.k:(I)V` @kind direct;
  #L31f74a.  v9:= (`int`) v10 @kind l2i;
  #L31f74c.  call temp:= `c`(v9) @signature `Lt3/c;.c:(I)I` @kind static;
  #L31f752.  v9:= temp;
  #L31f754.  if v9 == v0 then goto L31fb68;
  #L31f758.  v10:= v8.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f75c.  v10.`g2.e$c.z` @type ^`int` := v9;
  #L31f760.  goto L31fb68;
  #L31f764.  call `k`(v8, v9) @signature `Lg2/e;.k:(I)V` @kind direct;
  #L31f76a.  v9:= (`int`) v10 @kind l2i;
  #L31f76c.  if v9 == v7 then goto L31f784;
  #L31f770.  if v9 == v6 then goto L31f778;
  #L31f774.  goto L31fb68;
  #L31f778.  v9:= v8.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f77c.  v9.`g2.e$c.A` @type ^`int` := v7;
  #L31f780.  goto L31fb68;
  #L31f784.  v9:= v8.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f788.  v9.`g2.e$c.A` @type ^`int` := v6;
  #L31f78c.  goto L31fb68;
  #L31f790.  v8.`g2.e.r` @type ^`long` := v10 @kind wide;
  #L31f794.  goto L31fb68;
  #L31f798.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f79e.  v9:= temp @kind object;
  #L31f7a0.  v11:= (`int`) v10 @kind l2i;
  #L31f7a2.  v9.`g2.e$c.e` @type ^`int` := v11;
  #L31f7a6.  goto L31fb68;
  #L31f7aa.  call `k`(v8, v9) @signature `Lg2/e;.k:(I)V` @kind direct;
  #L31f7b0.  v9:= (`int`) v10 @kind l2i;
  #L31f7b2.  if v9 == 0 then goto L31f7ea;
  #L31f7b6.  if v9 == v7 then goto L31f7de;
  #L31f7ba.  if v9 == v6 then goto L31f7d2;
  #L31f7be.  if v9 == v5 then goto L31f7c6;
  #L31f7c2.  goto L31fb68;
  #L31f7c6.  v9:= v8.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f7ca.  v9.`g2.e$c.r` @type ^`int` := v5;
  #L31f7ce.  goto L31fb68;
  #L31f7d2.  v9:= v8.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f7d6.  v9.`g2.e$c.r` @type ^`int` := v6;
  #L31f7da.  goto L31fb68;
  #L31f7de.  v9:= v8.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f7e2.  v9.`g2.e$c.r` @type ^`int` := v7;
  #L31f7e6.  goto L31fb68;
  #L31f7ea.  v9:= v8.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f7ee.  v9.`g2.e$c.r` @type ^`int` := v0;
  #L31f7f2.  goto L31fb68;
  #L31f7f6.  v8.`g2.e.R` @type ^`long` := v10 @kind wide;
  #L31f7fa.  goto L31fb68;
  #L31f7fe.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f804.  v9:= temp @kind object;
  #L31f806.  v11:= (`int`) v10 @kind l2i;
  #L31f808.  v9.`g2.e$c.P` @type ^`int` := v11;
  #L31f80c.  goto L31fb68;
  #L31f810.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f816.  v9:= temp @kind object;
  #L31f818.  v9.`g2.e$c.S` @type ^`long` := v10 @kind wide;
  #L31f81c.  goto L31fb68;
  #L31f820.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f826.  v9:= temp @kind object;
  #L31f828.  v9.`g2.e$c.R` @type ^`long` := v10 @kind wide;
  #L31f82c.  goto L31fb68;
  #L31f830.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f836.  v9:= temp @kind object;
  #L31f838.  v11:= (`int`) v10 @kind l2i;
  #L31f83a.  v9.`g2.e$c.f` @type ^`int` := v11;
  #L31f83e.  goto L31fb68;
  #L31f842.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f848.  v9:= temp @kind object;
  #L31f84a.  v1:= lcmp(v10, v3);
  #L31f84e.  if v1 != 0 then goto L31f854;
  #L31f852.  v0:= 1I;
  #L31f854.  v9.`g2.e$c.U` @type ^`boolean` := v0 @kind boolean;
  #L31f858.  goto L31fb68;
  #L31f85c.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f862.  v9:= temp @kind object;
  #L31f864.  v11:= (`int`) v10 @kind l2i;
  #L31f866.  v9.`g2.e$c.p` @type ^`int` := v11;
  #L31f86a.  goto L31fb68;
  #L31f86e.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f874.  v9:= temp @kind object;
  #L31f876.  v11:= (`int`) v10 @kind l2i;
  #L31f878.  v9.`g2.e$c.q` @type ^`int` := v11;
  #L31f87c.  goto L31fb68;
  #L31f880.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31f886.  v9:= temp @kind object;
  #L31f888.  v11:= (`int`) v10 @kind l2i;
  #L31f88a.  v9.`g2.e$c.o` @type ^`int` := v11;
  #L31f88e.  goto L31fb68;
  #L31f892.  v11:= (`int`) v10 @kind l2i;
  #L31f894.  call `k`(v8, v9) @signature `Lg2/e;.k:(I)V` @kind direct;
  #L31f89a.  if v11 == 0 then goto L31f8d6;
  #L31f89e.  if v11 == v7 then goto L31f8ca;
  #L31f8a2.  if v11 == v5 then goto L31f8be;
  #L31f8a6.  v9:= 15I;
  #L31f8aa.  if v11 == v9 then goto L31f8b2;
  #L31f8ae.  goto L31fb68;
  #L31f8b2.  v9:= v8.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f8b6.  v9.`g2.e$c.w` @type ^`int` := v5;
  #L31f8ba.  goto L31fb68;
  #L31f8be.  v9:= v8.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f8c2.  v9.`g2.e$c.w` @type ^`int` := v7;
  #L31f8c6.  goto L31fb68;
  #L31f8ca.  v9:= v8.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f8ce.  v9.`g2.e$c.w` @type ^`int` := v6;
  #L31f8d2.  goto L31fb68;
  #L31f8d6.  v9:= v8.`g2.e.u` @type ^`g2.e$c` @kind object;
  #L31f8da.  v9.`g2.e$c.w` @type ^`int` := v0;
  #L31f8de.  goto L31fb68;
  #L31f8e2.  v0:= v8.`g2.e.q` @type ^`long` @kind wide;
  #L31f8e6.  v10:= v10 + v0 @kind long;
  #L31f8e8.  v8.`g2.e.x` @type ^`long` := v10 @kind wide;
  #L31f8ec.  goto L31fb68;
  #L31f8f0.  v9:= lcmp(v10, v3);
  #L31f8f4.  if v9 != 0 then goto L31f8fc;
  #L31f8f8.  goto L31fb68;
  #L31f8fc.  v9:= new `java.lang.StringBuilder`;
  #L31f900.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31f906.  v0:= "AESSettingsCipherMode " @kind object;
  #L31f90a.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31f910.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31f916.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31f91c.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31f922.  v9:= temp @kind object;
  #L31f924.  call temp:= `a`(v9, v1) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31f92a.  v9:= temp @kind object;
  #L31f92c.  throw v9;
  #L31f92e.  v3:= 5L;
  #L31f932.  v9:= lcmp(v10, v3);
  #L31f936.  if v9 != 0 then goto L31f93e;
  #L31f93a.  goto L31fb68;
  #L31f93e.  v9:= new `java.lang.StringBuilder`;
  #L31f942.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31f948.  v0:= "ContentEncAlgo " @kind object;
  #L31f94c.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31f952.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31f958.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31f95e.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31f964.  v9:= temp @kind object;
  #L31f966.  call temp:= `a`(v9, v1) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31f96c.  v9:= temp @kind object;
  #L31f96e.  throw v9;
  #L31f970.  v9:= lcmp(v10, v3);
  #L31f974.  if v9 != 0 then goto L31f97c;
  #L31f978.  goto L31fb68;
  #L31f97c.  v9:= new `java.lang.StringBuilder`;
  #L31f980.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31f986.  v0:= "EBMLReadVersion " @kind object;
  #L31f98a.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31f990.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31f996.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31f99c.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31f9a2.  v9:= temp @kind object;
  #L31f9a4.  call temp:= `a`(v9, v1) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31f9aa.  v9:= temp @kind object;
  #L31f9ac.  throw v9;
  #L31f9ae.  v9:= lcmp(v10, v3);
  #L31f9b2.  if v9 < 0 then goto L31f9c6;
  #L31f9b6.  v3:= 2L;
  #L31f9ba.  v9:= lcmp(v10, v3);
  #L31f9be.  if v9 > 0 then goto L31f9c6;
  #L31f9c2.  goto L31fb68;
  #L31f9c6.  v9:= new `java.lang.StringBuilder`;
  #L31f9ca.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31f9d0.  v0:= "DocTypeReadVersion " @kind object;
  #L31f9d4.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31f9da.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31f9e0.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31f9e6.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31f9ec.  v9:= temp @kind object;
  #L31f9ee.  call temp:= `a`(v9, v1) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31f9f4.  v9:= temp @kind object;
  #L31f9f6.  throw v9;
  #L31f9f8.  v3:= 3L;
  #L31f9fc.  v9:= lcmp(v10, v3);
  #L31fa00.  if v9 != 0 then goto L31fa08;
  #L31fa04.  goto L31fb68;
  #L31fa08.  v9:= new `java.lang.StringBuilder`;
  #L31fa0c.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31fa12.  v0:= "ContentCompAlgo " @kind object;
  #L31fa16.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fa1c.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fa22.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fa28.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31fa2e.  v9:= temp @kind object;
  #L31fa30.  call temp:= `a`(v9, v1) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31fa36.  v9:= temp @kind object;
  #L31fa38.  throw v9;
  #L31fa3a.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31fa40.  v9:= temp @kind object;
  #L31fa42.  v11:= (`int`) v10 @kind l2i;
  #L31fa44.  call temp:= `c`(v9, v11) @signature `Lg2/e$c;.c:(Lg2/e$c;I)I` @kind static;
  #L31fa4a.  goto L31fb68;
  #L31fa4e.  v8.`g2.e.Q` @type ^`boolean` := v7 @kind boolean;
  #L31fa52.  goto L31fb68;
  #L31fa56.  v0:= v8.`g2.e.E` @type ^`boolean` @kind boolean;
  #L31fa5a.  if v0 != 0 then goto L31fb68;
  #L31fa5e.  call `i`(v8, v9) @signature `Lg2/e;.i:(I)V` @kind direct;
  #L31fa64.  v9:= v8.`g2.e.D` @type ^`s3.r` @kind object;
  #L31fa68.  call `a`(v9, v10) @signature `Ls3/r;.a:(J)V` @kind virtual;
  #L31fa6e.  v8.`g2.e.E` @type ^`boolean` := v7 @kind boolean;
  #L31fa72.  goto L31fb68;
  #L31fa76.  v9:= (`int`) v10 @kind l2i;
  #L31fa78.  v8.`g2.e.P` @type ^`int` := v9;
  #L31fa7c.  goto L31fb68;
  #L31fa80.  call temp:= `F`(v8, v10) @signature `Lg2/e;.F:(J)J` @kind direct;
  #L31fa86.  v9:= temp @kind wide;
  #L31fa88.  v8.`g2.e.B` @type ^`long` := v9 @kind wide;
  #L31fa8c.  goto L31fb68;
  #L31fa90.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31fa96.  v9:= temp @kind object;
  #L31fa98.  v11:= (`int`) v10 @kind l2i;
  #L31fa9a.  v9.`g2.e$c.c` @type ^`int` := v11;
  #L31fa9e.  goto L31fb68;
  #L31faa0.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31faa6.  v9:= temp @kind object;
  #L31faa8.  v11:= (`int`) v10 @kind l2i;
  #L31faaa.  v9.`g2.e$c.n` @type ^`int` := v11;
  #L31faae.  goto L31fb68;
  #L31fab0.  call `i`(v8, v9) @signature `Lg2/e;.i:(I)V` @kind direct;
  #L31fab6.  v9:= v8.`g2.e.C` @type ^`s3.r` @kind object;
  #L31faba.  call temp:= `F`(v8, v10) @signature `Lg2/e;.F:(J)J` @kind direct;
  #L31fac0.  v10:= temp @kind wide;
  #L31fac2.  call `a`(v9, v10) @signature `Ls3/r;.a:(J)V` @kind virtual;
  #L31fac8.  goto L31fb68;
  #L31faca.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31fad0.  v9:= temp @kind object;
  #L31fad2.  v11:= (`int`) v10 @kind l2i;
  #L31fad4.  v9.`g2.e$c.m` @type ^`int` := v11;
  #L31fad8.  goto L31fb68;
  #L31fada.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31fae0.  v9:= temp @kind object;
  #L31fae2.  v11:= (`int`) v10 @kind l2i;
  #L31fae4.  v9.`g2.e$c.O` @type ^`int` := v11;
  #L31fae8.  goto L31fb68;
  #L31faea.  call temp:= `F`(v8, v10) @signature `Lg2/e;.F:(J)J` @kind direct;
  #L31faf0.  v9:= temp @kind wide;
  #L31faf2.  v8.`g2.e.I` @type ^`long` := v9 @kind wide;
  #L31faf6.  goto L31fb68;
  #L31faf8.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31fafe.  v9:= temp @kind object;
  #L31fb00.  v1:= lcmp(v10, v3);
  #L31fb04.  if v1 != 0 then goto L31fb0a;
  #L31fb08.  v0:= 1I;
  #L31fb0a.  v9.`g2.e$c.V` @type ^`boolean` := v0 @kind boolean;
  #L31fb0e.  goto L31fb68;
  #L31fb10.  call temp:= `u`(v8, v9) @signature `Lg2/e;.u:(I)Lg2/e$c;` @kind virtual;
  #L31fb16.  v9:= temp @kind object;
  #L31fb18.  v11:= (`int`) v10 @kind l2i;
  #L31fb1a.  v9.`g2.e$c.d` @type ^`int` := v11;
  #L31fb1e.  goto L31fb68;
  #L31fb20.  v9:= lcmp(v10, v3);
  #L31fb24.  if v9 != 0 then goto L31fb2a;
  #L31fb28.  goto L31fb68;
  #L31fb2a.  v9:= new `java.lang.StringBuilder`;
  #L31fb2e.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31fb34.  v0:= "ContentEncodingScope " @kind object;
  #L31fb38.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fb3e.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fb44.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fb4a.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31fb50.  v9:= temp @kind object;
  #L31fb52.  call temp:= `a`(v9, v1) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31fb58.  v9:= temp @kind object;
  #L31fb5a.  throw v9;
  #L31fb5c.  v3:= 0L;
  #L31fb60.  v9:= lcmp(v10, v3);
  #L31fb64.  if v9 != 0 then goto L31fb6a;
  #L31fb68.  return @kind void;
  #L31fb6a.  v9:= new `java.lang.StringBuilder`;
  #L31fb6e.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31fb74.  v0:= "ContentEncodingOrder " @kind object;
  #L31fb78.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fb7e.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fb84.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31fb8a.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31fb90.  v9:= temp @kind object;
  #L31fb92.  call temp:= `a`(v9, v1) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L31fb98.  v9:= temp @kind object;
  #L31fb9a.  throw v9;
  #L31fb9c.  switch v9
                  | 131 => goto L31fb10
                  | 136 => goto L31faf8
                  | 155 => goto L31faea
                  | 159 => goto L31fada
                  | 176 => goto L31faca
                  | 179 => goto L31fab0
                  | 186 => goto L31faa0
                  | 215 => goto L31fa90
                  | 231 => goto L31fa80
                  | 238 => goto L31fa76
                  | 241 => goto L31fa56
                  | 251 => goto L31fa4e
                  | 16871 => goto L31fa3a
                  | 16980 => goto L31f9f8
                  | 17029 => goto L31f9ae
                  | 17143 => goto L31f970
                  | 18401 => goto L31f92e
                  | 18408 => goto L31f8f0
                  | 21420 => goto L31f8e2
                  | 21432 => goto L31f892
                  | 21680 => goto L31f880
                  | 21682 => goto L31f86e
                  | 21690 => goto L31f85c
                  | 21930 => goto L31f842
                  | 21998 => goto L31f830
                  | 22186 => goto L31f820
                  | 22203 => goto L31f810
                  | 25188 => goto L31f7fe
                  | 30114 => goto L31f7f6
                  | 30321 => goto L31f7aa
                  | 2352003 => goto L31f798
                  | 2807729 => goto L31f790
                  | else => goto L31f6ec;
  #L31fca0.  switch v9
                  | 21945 => goto L31f764
                  | 21946 => goto L31f744
                  | 21947 => goto L31f71c
                  | 21948 => goto L31f70a
                  | 21949 => goto L31f6f8
                  | else => goto L31f6f4;
}
