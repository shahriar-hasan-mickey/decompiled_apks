record `n3.d` @kind class @AccessFlag FINAL {
  `java.lang.String` `n3.d.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `n3.d.b` @AccessFlag PUBLIC_FINAL;
  `boolean` `n3.d.c` @AccessFlag PUBLIC_FINAL;
  `long` `n3.d.d` @AccessFlag PUBLIC_FINAL;
  `long` `n3.d.e` @AccessFlag PUBLIC_FINAL;
  `n3.g` `n3.d.f` @AccessFlag PUBLIC_FINAL;
  `java.lang.String`[] `n3.d.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `n3.d.h` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `n3.d.i` @AccessFlag PUBLIC_FINAL;
  `n3.d` `n3.d.j` @AccessFlag PUBLIC_FINAL;
  `java.util.HashMap` `n3.d.k` @AccessFlag PRIVATE_FINAL;
  `java.util.HashMap` `n3.d.l` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `n3.d.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`n3.d` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `long` v3 , `long` v5 , `n3.g` v7 @kind object, `java.lang.String`[] v8 @kind object, `java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `n3.d` v11 @kind object) @signature `Ln3/d;.<init>:(Ljava/lang/String;Ljava/lang/String;JJLn3/g;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ln3/d;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3f03ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f03b2.  v0.`n3.d.a` @type ^`java.lang.String` := v1 @kind object;
  #L3f03b6.  v0.`n3.d.b` @type ^`java.lang.String` := v2 @kind object;
  #L3f03ba.  v0.`n3.d.i` @type ^`java.lang.String` := v10 @kind object;
  #L3f03be.  v0.`n3.d.f` @type ^`n3.g` := v7 @kind object;
  #L3f03c2.  v0.`n3.d.g` @type ^`java.lang.String`[] := v8 @kind object;
  #L3f03c6.  if v2 == 0 then goto L3f03ce;
  #L3f03ca.  v1:= 1I;
  #L3f03cc.  goto L3f03d0;
  #L3f03ce.  v1:= 0I;
  #L3f03d0.  v0.`n3.d.c` @type ^`boolean` := v1 @kind boolean;
  #L3f03d4.  v0.`n3.d.d` @type ^`long` := v3 @kind wide;
  #L3f03d8.  v0.`n3.d.e` @type ^`long` := v5 @kind wide;
  #L3f03dc.  call temp:= `e`(v9) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f03e2.  v1:= temp @kind object;
  #L3f03e4.  v1:= (`java.lang.String`) v1 @kind object;
  #L3f03e8.  v0.`n3.d.h` @type ^`java.lang.String` := v1 @kind object;
  #L3f03ec.  v0.`n3.d.j` @type ^`n3.d` := v11 @kind object;
  #L3f03f0.  v1:= new `java.util.HashMap`;
  #L3f03f4.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3f03fa.  v0.`n3.d.k` @type ^`java.util.HashMap` := v1 @kind object;
  #L3f03fe.  v1:= new `java.util.HashMap`;
  #L3f0402.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3f0408.  v0.`n3.d.l` @type ^`java.util.HashMap` := v1 @kind object;
  #L3f040c.  return @kind void;
}
procedure `void` `b`(`n3.d` v9 @kind this, `java.util.Map` v10 @kind object, `g3.b$b` v11 @kind object, `int` v12 , `int` v13 , `int` v14 ) @signature `Ln3/d;.b:(Ljava/util/Map;Lg3/b$b;III)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3f0454.  v0:= v9.`n3.d.f` @type ^`n3.g` @kind object;
  #L3f0458.  v1:= v9.`n3.d.g` @type ^`java.lang.String`[] @kind object;
  #L3f045c.  call temp:= `f`(v0, v1, v10) @signature `Ln3/f;.f:(Ln3/g;[Ljava/lang/String;Ljava/util/Map;)Ln3/g;` @kind static;
  #L3f0462.  v0:= temp @kind object;
  #L3f0464.  call temp:= `e`(v11) @signature `Lg3/b$b;.e:()Ljava/lang/CharSequence;` @kind virtual;
  #L3f046a.  v1:= temp @kind object;
  #L3f046c.  v1:= (`android.text.SpannableStringBuilder`) v1 @kind object;
  #L3f0470.  if v1 != 0 then goto L3f0484;
  #L3f0474.  v1:= new `android.text.SpannableStringBuilder`;
  #L3f0478.  call `<init>`(v1) @signature `Landroid/text/SpannableStringBuilder;.<init>:()V` @kind direct;
  #L3f047e.  call temp:= `o`(v11, v1) @signature `Lg3/b$b;.o:(Ljava/lang/CharSequence;)Lg3/b$b;` @kind virtual;
  #L3f0484.  v2:= v1 @kind object;
  #L3f0486.  if v0 == 0 then goto L3f0518;
  #L3f048a.  v6:= v9.`n3.d.j` @type ^`n3.d` @kind object;
  #L3f048e.  v3:= v12;
  #L3f0490.  v4:= v13;
  #L3f0492.  v5:= v0 @kind object;
  #L3f0494.  v7:= v10 @kind object;
  #L3f0496.  v8:= v14;
  #L3f0498.  call `a`(v2, v3, v4, v5, v6, v7, v8) @signature `Ln3/f;.a:(Landroid/text/Spannable;IILn3/g;Ln3/d;Ljava/util/Map;I)V` @kind static;
  #L3f049e.  v10:= v9.`n3.d.a` @type ^`java.lang.String` @kind object;
  #L3f04a2.  v12:= "p" @kind object;
  #L3f04a6.  call temp:= `equals`(v12, v10) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f04ac.  v10:= temp;
  #L3f04ae.  if v10 == 0 then goto L3f0518;
  #L3f04b2.  call temp:= `k`(v0) @signature `Ln3/g;.k:()F` @kind virtual;
  #L3f04b8.  v10:= temp;
  #L3f04ba.  v12:= 2139095039I;
  #L3f04c0.  v10:= fcmpl(v10, v12);
  #L3f04c4.  if v10 == 0 then goto L3f04e4;
  #L3f04c8.  call temp:= `k`(v0) @signature `Ln3/g;.k:()F` @kind virtual;
  #L3f04ce.  v10:= temp;
  #L3f04d0.  v12:= -90.0F;
  #L3f04d4.  v10:= v10 * v12 @kind float;
  #L3f04d8.  v12:= 100.0F;
  #L3f04dc.  v10:= v10 / v12 @kind float;
  #L3f04de.  call temp:= `m`(v11, v10) @signature `Lg3/b$b;.m:(F)Lg3/b$b;` @kind virtual;
  #L3f04e4.  call temp:= `m`(v0) @signature `Ln3/g;.m:()Landroid/text/Layout$Alignment;` @kind virtual;
  #L3f04ea.  v10:= temp @kind object;
  #L3f04ec.  if v10 == 0 then goto L3f04fe;
  #L3f04f0.  call temp:= `m`(v0) @signature `Ln3/g;.m:()Landroid/text/Layout$Alignment;` @kind virtual;
  #L3f04f6.  v10:= temp @kind object;
  #L3f04f8.  call temp:= `p`(v11, v10) @signature `Lg3/b$b;.p:(Landroid/text/Layout$Alignment;)Lg3/b$b;` @kind virtual;
  #L3f04fe.  call temp:= `h`(v0) @signature `Ln3/g;.h:()Landroid/text/Layout$Alignment;` @kind virtual;
  #L3f0504.  v10:= temp @kind object;
  #L3f0506.  if v10 == 0 then goto L3f0518;
  #L3f050a.  call temp:= `h`(v0) @signature `Ln3/g;.h:()Landroid/text/Layout$Alignment;` @kind virtual;
  #L3f0510.  v10:= temp @kind object;
  #L3f0512.  call temp:= `j`(v11, v10) @signature `Lg3/b$b;.j:(Landroid/text/Layout$Alignment;)Lg3/b$b;` @kind virtual;
  #L3f0518.  return @kind void;
}
procedure `n3.d` `c`(`java.lang.String` v13 @kind object, `long` v14 , `long` v16 , `n3.g` v18 @kind object, `java.lang.String`[] v19 @kind object, `java.lang.String` v20 @kind object, `java.lang.String` v21 @kind object, `n3.d` v22 @kind object) @signature `Ln3/d;.c:(Ljava/lang/String;JJLn3/g;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ln3/d;)Ln3/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3f02f4.  v12:= new `n3.d`;
  #L3f02f8.  v2:= 0I;
  #L3f02fa.  v0:= v12 @kind object;
  #L3f02fc.  v1:= v13 @kind object;
  #L3f02fe.  v3:= v14 @kind wide;
  #L3f0300.  v5:= v16 @kind wide;
  #L3f0304.  v7:= v18 @kind object;
  #L3f0308.  v8:= v19 @kind object;
  #L3f030c.  v9:= v20 @kind object;
  #L3f0310.  v10:= v21 @kind object;
  #L3f0314.  v11:= v22 @kind object;
  #L3f0318.  call `<init>`(v0, v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Ln3/d;.<init>:(Ljava/lang/String;Ljava/lang/String;JJLn3/g;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ln3/d;)V` @kind direct;
  #L3f031e.  return v12 @kind object;
}
procedure `n3.d` `d`(`java.lang.String` v13 @kind object) @signature `Ln3/d;.d:(Ljava/lang/String;)Ln3/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3f0330.  v12:= new `n3.d`;
  #L3f0334.  call temp:= `b`(v13) @signature `Ln3/f;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3f033a.  v2:= temp @kind object;
  #L3f033c.  v1:= 0I;
  #L3f033e.  v3:= -4.9E-324D;
  #L3f0348.  v5:= -4.9E-324D;
  #L3f0352.  v7:= 0I;
  #L3f0354.  v8:= 0I;
  #L3f0356.  v9:= "" @kind object;
  #L3f035a.  v10:= 0I;
  #L3f035c.  v11:= 0I;
  #L3f035e.  v0:= v12 @kind object;
  #L3f0360.  call `<init>`(v0, v1, v2, v3, v5, v7, v8, v9, v10, v11) @signature `Ln3/d;.<init>:(Ljava/lang/String;Ljava/lang/String;JJLn3/g;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ln3/d;)V` @kind direct;
  #L3f0366.  return v12 @kind object;
}
procedure `void` `e`(`android.text.SpannableStringBuilder` v7 @kind object) @signature `Ln3/d;.e:(Landroid/text/SpannableStringBuilder;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f052c.  call temp:= `length`(v7) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L3f0532.  v0:= temp;
  #L3f0534.  v1:= constclass @type ^`n3.a` @kind object;
  #L3f0538.  v2:= 0I;
  #L3f053a.  call temp:= `getSpans`(v7, v2, v0, v1) @signature `Landroid/text/SpannableStringBuilder;.getSpans:(IILjava/lang/Class;)[Ljava/lang/Object;` @kind virtual;
  #L3f0540.  v0:= temp @kind object;
  #L3f0542.  v0:= (`n3.a`[]) v0 @kind object;
  #L3f0546.  v1:= length @variable v0;
  #L3f0548.  v3:= 0I;
  #L3f054a.  if v3 >= v1 then goto L3f0572;
  #L3f054e.  v4:= v0[v3] @kind object;
  #L3f0552.  call temp:= `getSpanStart`(v7, v4) @signature `Landroid/text/SpannableStringBuilder;.getSpanStart:(Ljava/lang/Object;)I` @kind virtual;
  #L3f0558.  v5:= temp;
  #L3f055a.  call temp:= `getSpanEnd`(v7, v4) @signature `Landroid/text/SpannableStringBuilder;.getSpanEnd:(Ljava/lang/Object;)I` @kind virtual;
  #L3f0560.  v4:= temp;
  #L3f0562.  v6:= "" @kind object;
  #L3f0566.  call temp:= `replace`(v7, v5, v4, v6) @signature `Landroid/text/SpannableStringBuilder;.replace:(IILjava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L3f056c.  v3:= v3 + 1;
  #L3f0570.  goto L3f054a;
  #L3f0572.  v0:= 0I;
  #L3f0574.  call temp:= `length`(v7) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L3f057a.  v1:= temp;
  #L3f057c.  v3:= 32I;
  #L3f0580.  if v0 >= v1 then goto L3f05c8;
  #L3f0584.  call temp:= `charAt`(v7, v0) @signature `Landroid/text/SpannableStringBuilder;.charAt:(I)C` @kind virtual;
  #L3f058a.  v1:= temp;
  #L3f058c.  if v1 != v3 then goto L3f05c2;
  #L3f0590.  v1:= v0 + 1;
  #L3f0594.  v4:= v1;
  #L3f0596.  call temp:= `length`(v7) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L3f059c.  v5:= temp;
  #L3f059e.  if v4 >= v5 then goto L3f05b4;
  #L3f05a2.  call temp:= `charAt`(v7, v4) @signature `Landroid/text/SpannableStringBuilder;.charAt:(I)C` @kind virtual;
  #L3f05a8.  v5:= temp;
  #L3f05aa.  if v5 != v3 then goto L3f05b4;
  #L3f05ae.  v4:= v4 + 1;
  #L3f05b2.  goto L3f0596;
  #L3f05b4.  v4:= v4 - v1 @kind int;
  #L3f05b6.  if v4 <= 0 then goto L3f05c2;
  #L3f05ba.  v4:= v4 + v0 @kind int;
  #L3f05bc.  call temp:= `delete`(v7, v0, v4) @signature `Landroid/text/SpannableStringBuilder;.delete:(II)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L3f05c2.  v0:= v0 + 1;
  #L3f05c6.  goto L3f0574;
  #L3f05c8.  call temp:= `length`(v7) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L3f05ce.  v0:= temp;
  #L3f05d0.  v1:= 1I;
  #L3f05d2.  if v0 <= 0 then goto L3f05e8;
  #L3f05d6.  call temp:= `charAt`(v7, v2) @signature `Landroid/text/SpannableStringBuilder;.charAt:(I)C` @kind virtual;
  #L3f05dc.  v0:= temp;
  #L3f05de.  if v0 != v3 then goto L3f05e8;
  #L3f05e2.  call temp:= `delete`(v7, v2, v1) @signature `Landroid/text/SpannableStringBuilder;.delete:(II)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L3f05e8.  v0:= 0I;
  #L3f05ea.  call temp:= `length`(v7) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L3f05f0.  v4:= temp;
  #L3f05f2.  v4:= v4 - v1 @kind int;
  #L3f05f4.  v5:= 10I;
  #L3f05f8.  if v0 >= v4 then goto L3f0628;
  #L3f05fc.  call temp:= `charAt`(v7, v0) @signature `Landroid/text/SpannableStringBuilder;.charAt:(I)C` @kind virtual;
  #L3f0602.  v4:= temp;
  #L3f0604.  if v4 != v5 then goto L3f0622;
  #L3f0608.  v4:= v0 + 1;
  #L3f060c.  call temp:= `charAt`(v7, v4) @signature `Landroid/text/SpannableStringBuilder;.charAt:(I)C` @kind virtual;
  #L3f0612.  v5:= temp;
  #L3f0614.  if v5 != v3 then goto L3f0622;
  #L3f0618.  v5:= v0 + 2;
  #L3f061c.  call temp:= `delete`(v7, v4, v5) @signature `Landroid/text/SpannableStringBuilder;.delete:(II)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L3f0622.  v0:= v0 + 1;
  #L3f0626.  goto L3f05ea;
  #L3f0628.  call temp:= `length`(v7) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L3f062e.  v0:= temp;
  #L3f0630.  if v0 <= 0 then goto L3f0662;
  #L3f0634.  call temp:= `length`(v7) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L3f063a.  v0:= temp;
  #L3f063c.  v0:= v0 - v1 @kind int;
  #L3f063e.  call temp:= `charAt`(v7, v0) @signature `Landroid/text/SpannableStringBuilder;.charAt:(I)C` @kind virtual;
  #L3f0644.  v0:= temp;
  #L3f0646.  if v0 != v3 then goto L3f0662;
  #L3f064a.  call temp:= `length`(v7) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L3f0650.  v0:= temp;
  #L3f0652.  v0:= v0 - v1 @kind int;
  #L3f0654.  call temp:= `length`(v7) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L3f065a.  v4:= temp;
  #L3f065c.  call temp:= `delete`(v7, v0, v4) @signature `Landroid/text/SpannableStringBuilder;.delete:(II)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L3f0662.  call temp:= `length`(v7) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L3f0668.  v0:= temp;
  #L3f066a.  v0:= v0 - v1 @kind int;
  #L3f066c.  if v2 >= v0 then goto L3f0698;
  #L3f0670.  call temp:= `charAt`(v7, v2) @signature `Landroid/text/SpannableStringBuilder;.charAt:(I)C` @kind virtual;
  #L3f0676.  v0:= temp;
  #L3f0678.  if v0 != v3 then goto L3f0692;
  #L3f067c.  v0:= v2 + 1;
  #L3f0680.  call temp:= `charAt`(v7, v0) @signature `Landroid/text/SpannableStringBuilder;.charAt:(I)C` @kind virtual;
  #L3f0686.  v4:= temp;
  #L3f0688.  if v4 != v5 then goto L3f0692;
  #L3f068c.  call temp:= `delete`(v7, v2, v0) @signature `Landroid/text/SpannableStringBuilder;.delete:(II)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L3f0692.  v2:= v2 + 1;
  #L3f0696.  goto L3f0662;
  #L3f0698.  call temp:= `length`(v7) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L3f069e.  v0:= temp;
  #L3f06a0.  if v0 <= 0 then goto L3f06d2;
  #L3f06a4.  call temp:= `length`(v7) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L3f06aa.  v0:= temp;
  #L3f06ac.  v0:= v0 - v1 @kind int;
  #L3f06ae.  call temp:= `charAt`(v7, v0) @signature `Landroid/text/SpannableStringBuilder;.charAt:(I)C` @kind virtual;
  #L3f06b4.  v0:= temp;
  #L3f06b6.  if v0 != v5 then goto L3f06d2;
  #L3f06ba.  call temp:= `length`(v7) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L3f06c0.  v0:= temp;
  #L3f06c2.  v0:= v0 - v1 @kind int;
  #L3f06c4.  call temp:= `length`(v7) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L3f06ca.  v1:= temp;
  #L3f06cc.  call temp:= `delete`(v7, v0, v1) @signature `Landroid/text/SpannableStringBuilder;.delete:(II)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L3f06d2.  return @kind void;
}
procedure `void` `i`(`n3.d` v6 @kind this, `java.util.TreeSet` v7 @kind object, `boolean` v8 ) @signature `Ln3/d;.i:(Ljava/util/TreeSet;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f06e4.  v0:= v6.`n3.d.a` @type ^`java.lang.String` @kind object;
  #L3f06e8.  v1:= "p" @kind object;
  #L3f06ec.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f06f2.  v0:= temp;
  #L3f06f4.  v1:= v6.`n3.d.a` @type ^`java.lang.String` @kind object;
  #L3f06f8.  v2:= "div" @kind object;
  #L3f06fc.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f0702.  v1:= temp;
  #L3f0704.  if v8 != 0 then goto L3f0718;
  #L3f0708.  if v0 != 0 then goto L3f0718;
  #L3f070c.  if v1 == 0 then goto L3f0756;
  #L3f0710.  v1:= v6.`n3.d.i` @type ^`java.lang.String` @kind object;
  #L3f0714.  if v1 == 0 then goto L3f0756;
  #L3f0718.  v1:= v6.`n3.d.d` @type ^`long` @kind wide;
  #L3f071c.  v3:= -4.9E-324D;
  #L3f0726.  v5:= lcmp(v1, v3);
  #L3f072a.  if v5 == 0 then goto L3f073c;
  #L3f072e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3f0734.  v1:= temp @kind object;
  #L3f0736.  call temp:= `add`(v7, v1) @signature `Ljava/util/TreeSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f073c.  v1:= v6.`n3.d.e` @type ^`long` @kind wide;
  #L3f0740.  v5:= lcmp(v1, v3);
  #L3f0744.  if v5 == 0 then goto L3f0756;
  #L3f0748.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3f074e.  v1:= temp @kind object;
  #L3f0750.  call temp:= `add`(v7, v1) @signature `Ljava/util/TreeSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f0756.  v1:= v6.`n3.d.m` @type ^`java.util.List` @kind object;
  #L3f075a.  if v1 != 0 then goto L3f0760;
  #L3f075e.  return @kind void;
  #L3f0760.  v1:= 0I;
  #L3f0762.  v2:= 0I;
  #L3f0764.  v3:= v6.`n3.d.m` @type ^`java.util.List` @kind object;
  #L3f0768.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3f076e.  v3:= temp;
  #L3f0770.  if v2 >= v3 then goto L3f07a0;
  #L3f0774.  v3:= v6.`n3.d.m` @type ^`java.util.List` @kind object;
  #L3f0778.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3f077e.  v3:= temp @kind object;
  #L3f0780.  v3:= (`n3.d`) v3 @kind object;
  #L3f0784.  if v8 != 0 then goto L3f0792;
  #L3f0788.  if v0 == 0 then goto L3f078e;
  #L3f078c.  goto L3f0792;
  #L3f078e.  v4:= 0I;
  #L3f0790.  goto L3f0794;
  #L3f0792.  v4:= 1I;
  #L3f0794.  call `i`(v3, v7, v4) @signature `Ln3/d;.i:(Ljava/util/TreeSet;Z)V` @kind direct;
  #L3f079a.  v2:= v2 + 1;
  #L3f079e.  goto L3f0764;
  #L3f07a0.  return @kind void;
}
procedure `android.text.SpannableStringBuilder` `k`(`java.lang.String` v2 @kind object, `java.util.Map` v3 @kind object) @signature `Ln3/d;.k:(Ljava/lang/String;Ljava/util/Map;)Landroid/text/SpannableStringBuilder;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3eff80.  call temp:= `containsKey`(v3, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L3eff86.  v0:= temp;
  #L3eff88.  if v0 != 0 then goto L3effac;
  #L3eff8c.  v0:= new `g3.b$b`;
  #L3eff90.  call `<init>`(v0) @signature `Lg3/b$b;.<init>:()V` @kind direct;
  #L3eff96.  v1:= new `android.text.SpannableStringBuilder`;
  #L3eff9a.  call `<init>`(v1) @signature `Landroid/text/SpannableStringBuilder;.<init>:()V` @kind direct;
  #L3effa0.  call temp:= `o`(v0, v1) @signature `Lg3/b$b;.o:(Ljava/lang/CharSequence;)Lg3/b$b;` @kind virtual;
  #L3effa6.  call temp:= `put`(v3, v2, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3effac.  call temp:= `get`(v3, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3effb2.  v2:= temp @kind object;
  #L3effb4.  v2:= (`g3.b$b`) v2 @kind object;
  #L3effb8.  call temp:= `e`(v2) @signature `Lg3/b$b;.e:()Ljava/lang/CharSequence;` @kind virtual;
  #L3effbe.  v2:= temp @kind object;
  #L3effc0.  call temp:= `e`(v2) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3effc6.  v2:= temp @kind object;
  #L3effc8.  v2:= (`android.text.SpannableStringBuilder`) v2 @kind object;
  #L3effcc.  return v2 @kind object;
}
procedure `void` `n`(`n3.d` v2 @kind this, `long` v3 , `java.lang.String` v5 @kind object, `java.util.List` v6 @kind object) @signature `Ln3/d;.n:(JLjava/lang/String;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3f07b4.  v0:= v2.`n3.d.h` @type ^`java.lang.String` @kind object;
  #L3f07b8.  v1:= "" @kind object;
  #L3f07bc.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f07c2.  v0:= temp;
  #L3f07c4.  if v0 == 0 then goto L3f07ca;
  #L3f07c8.  goto L3f07ce;
  #L3f07ca.  v5:= v2.`n3.d.h` @type ^`java.lang.String` @kind object;
  #L3f07ce.  call temp:= `m`(v2, v3) @signature `Ln3/d;.m:(J)Z` @kind virtual;
  #L3f07d4.  v0:= temp;
  #L3f07d6.  if v0 == 0 then goto L3f080c;
  #L3f07da.  v0:= v2.`n3.d.a` @type ^`java.lang.String` @kind object;
  #L3f07de.  v1:= "div" @kind object;
  #L3f07e2.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f07e8.  v0:= temp;
  #L3f07ea.  if v0 == 0 then goto L3f080c;
  #L3f07ee.  v0:= v2.`n3.d.i` @type ^`java.lang.String` @kind object;
  #L3f07f2.  if v0 == 0 then goto L3f080c;
  #L3f07f6.  v3:= new `android.util.Pair`;
  #L3f07fa.  v4:= v2.`n3.d.i` @type ^`java.lang.String` @kind object;
  #L3f07fe.  call `<init>`(v3, v5, v4) @signature `Landroid/util/Pair;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L3f0804.  call temp:= `add`(v6, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f080a.  return @kind void;
  #L3f080c.  v0:= 0I;
  #L3f080e.  call temp:= `g`(v2) @signature `Ln3/d;.g:()I` @kind virtual;
  #L3f0814.  v1:= temp;
  #L3f0816.  if v0 >= v1 then goto L3f082e;
  #L3f081a.  call temp:= `f`(v2, v0) @signature `Ln3/d;.f:(I)Ln3/d;` @kind virtual;
  #L3f0820.  v1:= temp @kind object;
  #L3f0822.  call `n`(v1, v3, v5, v6) @signature `Ln3/d;.n:(JLjava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3f0828.  v0:= v0 + 1;
  #L3f082c.  goto L3f080e;
  #L3f082e.  return @kind void;
}
procedure `void` `o`(`n3.d` v16 @kind this, `long` v17 , `java.util.Map` v19 @kind object, `java.util.Map` v20 @kind object, `java.lang.String` v21 @kind object, `java.util.Map` v22 @kind object) @signature `Ln3/d;.o:(JLjava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3f0840.  v6:= v16 @kind object;
  #L3f0844.  call temp:= `m`(v16, v17) @signature `Ln3/d;.m:(J)Z` @kind virtual;
  #L3f084a.  v0:= temp;
  #L3f084c.  if v0 != 0 then goto L3f0852;
  #L3f0850.  return @kind void;
  #L3f0852.  v0:= v6.`n3.d.h` @type ^`java.lang.String` @kind object;
  #L3f0856.  v1:= "" @kind object;
  #L3f085a.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f0860.  v0:= temp;
  #L3f0862.  if v0 == 0 then goto L3f086c;
  #L3f0866.  v14:= v21 @kind object;
  #L3f086a.  goto L3f0872;
  #L3f086c.  v0:= v6.`n3.d.h` @type ^`java.lang.String` @kind object;
  #L3f0870.  v14:= v0 @kind object;
  #L3f0872.  v0:= v6.`n3.d.l` @type ^`java.util.HashMap` @kind object;
  #L3f0876.  call temp:= `entrySet`(v0) @signature `Ljava/util/HashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L3f087c.  v0:= temp @kind object;
  #L3f087e.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f0884.  v7:= temp @kind object;
  #L3f0886.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f088c.  v0:= temp;
  #L3f088e.  v1:= 0I;
  #L3f0890.  if v0 == 0 then goto L3f094a;
  #L3f0894.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f089a.  v0:= temp @kind object;
  #L3f089c.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L3f08a0.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3f08a6.  v2:= temp @kind object;
  #L3f08a8.  v2:= (`java.lang.String`) v2 @kind object;
  #L3f08ac.  v3:= v6.`n3.d.k` @type ^`java.util.HashMap` @kind object;
  #L3f08b0.  call temp:= `containsKey`(v3, v2) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f08b6.  v3:= temp;
  #L3f08b8.  if v3 == 0 then goto L3f08d8;
  #L3f08bc.  v1:= v6.`n3.d.k` @type ^`java.util.HashMap` @kind object;
  #L3f08c0.  call temp:= `get`(v1, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f08c6.  v1:= temp @kind object;
  #L3f08c8.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L3f08cc.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3f08d2.  v1:= temp;
  #L3f08d4.  v3:= v1;
  #L3f08d6.  goto L3f08da;
  #L3f08d8.  v3:= 0I;
  #L3f08da.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3f08e0.  v0:= temp @kind object;
  #L3f08e2.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3f08e6.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3f08ec.  v4:= temp;
  #L3f08ee.  if v3 == v4 then goto L3f0940;
  #L3f08f2.  v15:= v22 @kind object;
  #L3f08f6.  call temp:= `get`(v15, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f08fc.  v0:= temp @kind object;
  #L3f08fe.  v0:= (`g3.b$b`) v0 @kind object;
  #L3f0902.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f0908.  v0:= temp @kind object;
  #L3f090a.  v2:= v0 @kind object;
  #L3f090c.  v2:= (`g3.b$b`) v2 @kind object;
  #L3f0910.  v13:= v20 @kind object;
  #L3f0914.  call temp:= `get`(v13, v14) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f091a.  v0:= temp @kind object;
  #L3f091c.  v0:= (`n3.e`) v0 @kind object;
  #L3f0920.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f0926.  v0:= temp @kind object;
  #L3f0928.  v0:= (`n3.e`) v0 @kind object;
  #L3f092c.  v5:= v0.`n3.e.j` @type ^`int`;
  #L3f0930.  v0:= v16 @kind object;
  #L3f0934.  v1:= v19 @kind object;
  #L3f0938.  call `b`(v0, v1, v2, v3, v4, v5) @signature `Ln3/d;.b:(Ljava/util/Map;Lg3/b$b;III)V` @kind direct;
  #L3f093e.  goto L3f0886;
  #L3f0940.  v13:= v20 @kind object;
  #L3f0944.  v15:= v22 @kind object;
  #L3f0948.  goto L3f0886;
  #L3f094a.  v13:= v20 @kind object;
  #L3f094e.  v15:= v22 @kind object;
  #L3f0952.  call temp:= `g`(v16) @signature `Ln3/d;.g:()I` @kind virtual;
  #L3f0958.  v0:= temp;
  #L3f095a.  if v1 >= v0 then goto L3f0988;
  #L3f095e.  call temp:= `f`(v6, v1) @signature `Ln3/d;.f:(I)Ln3/d;` @kind virtual;
  #L3f0964.  v7:= temp @kind object;
  #L3f0966.  v8:= v17 @kind wide;
  #L3f096a.  v10:= v19 @kind object;
  #L3f096e.  v11:= v20 @kind object;
  #L3f0972.  v12:= v14 @kind object;
  #L3f0974.  v13:= v22 @kind object;
  #L3f0978.  call `o`(v7, v8, v10, v11, v12, v13) @signature `Ln3/d;.o:(JLjava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;)V` @kind direct;
  #L3f097e.  v1:= v1 + 1;
  #L3f0982.  v13:= v20 @kind object;
  #L3f0986.  goto L3f0952;
  #L3f0988.  return @kind void;
}
procedure `void` `p`(`n3.d` v9 @kind this, `long` v10 , `boolean` v12 , `java.lang.String` v13 @kind object, `java.util.Map` v14 @kind object) @signature `Ln3/d;.p:(JZLjava/lang/String;Ljava/util/Map;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3f099c.  v0:= v9.`n3.d.k` @type ^`java.util.HashMap` @kind object;
  #L3f09a0.  call `clear`(v0) @signature `Ljava/util/HashMap;.clear:()V` @kind virtual;
  #L3f09a6.  v0:= v9.`n3.d.l` @type ^`java.util.HashMap` @kind object;
  #L3f09aa.  call `clear`(v0) @signature `Ljava/util/HashMap;.clear:()V` @kind virtual;
  #L3f09b0.  v0:= v9.`n3.d.a` @type ^`java.lang.String` @kind object;
  #L3f09b4.  v1:= "metadata" @kind object;
  #L3f09b8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f09be.  v0:= temp;
  #L3f09c0.  if v0 == 0 then goto L3f09c6;
  #L3f09c4.  return @kind void;
  #L3f09c6.  v0:= v9.`n3.d.h` @type ^`java.lang.String` @kind object;
  #L3f09ca.  v1:= "" @kind object;
  #L3f09ce.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f09d4.  v0:= temp;
  #L3f09d6.  if v0 == 0 then goto L3f09dc;
  #L3f09da.  goto L3f09e0;
  #L3f09dc.  v13:= v9.`n3.d.h` @type ^`java.lang.String` @kind object;
  #L3f09e0.  v0:= v9.`n3.d.c` @type ^`boolean` @kind boolean;
  #L3f09e4.  if v0 == 0 then goto L3f0a0e;
  #L3f09e8.  if v12 == 0 then goto L3f0a0e;
  #L3f09ec.  call temp:= `k`(v13, v14) @signature `Ln3/d;.k:(Ljava/lang/String;Ljava/util/Map;)Landroid/text/SpannableStringBuilder;` @kind static;
  #L3f09f2.  v10:= temp @kind object;
  #L3f09f4.  v11:= v9.`n3.d.b` @type ^`java.lang.String` @kind object;
  #L3f09f8.  call temp:= `e`(v11) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f09fe.  v11:= temp @kind object;
  #L3f0a00.  v11:= (`java.lang.CharSequence`) v11 @kind object;
  #L3f0a04.  call temp:= `append`(v10, v11) @signature `Landroid/text/SpannableStringBuilder;.append:(Ljava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L3f0a0a.  goto L3f0b86;
  #L3f0a0e.  v0:= v9.`n3.d.a` @type ^`java.lang.String` @kind object;
  #L3f0a12.  v1:= "br" @kind object;
  #L3f0a16.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f0a1c.  v0:= temp;
  #L3f0a1e.  if v0 == 0 then goto L3f0a3c;
  #L3f0a22.  if v12 == 0 then goto L3f0a3c;
  #L3f0a26.  call temp:= `k`(v13, v14) @signature `Ln3/d;.k:(Ljava/lang/String;Ljava/util/Map;)Landroid/text/SpannableStringBuilder;` @kind static;
  #L3f0a2c.  v10:= temp @kind object;
  #L3f0a2e.  v11:= 10I;
  #L3f0a32.  call temp:= `append`(v10, v11) @signature `Landroid/text/SpannableStringBuilder;.append:(C)Landroid/text/SpannableStringBuilder;` @kind virtual;
  #L3f0a38.  goto L3f0b86;
  #L3f0a3c.  call temp:= `m`(v9, v10) @signature `Ln3/d;.m:(J)Z` @kind virtual;
  #L3f0a42.  v0:= temp;
  #L3f0a44.  if v0 == 0 then goto L3f0b86;
  #L3f0a48.  call temp:= `entrySet`(v14) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3f0a4e.  v0:= temp @kind object;
  #L3f0a50.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f0a56.  v0:= temp @kind object;
  #L3f0a58.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f0a5e.  v1:= temp;
  #L3f0a60.  if v1 == 0 then goto L3f0ab8;
  #L3f0a64.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f0a6a.  v1:= temp @kind object;
  #L3f0a6c.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L3f0a70.  v2:= v9.`n3.d.k` @type ^`java.util.HashMap` @kind object;
  #L3f0a74.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3f0a7a.  v3:= temp @kind object;
  #L3f0a7c.  v3:= (`java.lang.String`) v3 @kind object;
  #L3f0a80.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3f0a86.  v1:= temp @kind object;
  #L3f0a88.  v1:= (`g3.b$b`) v1 @kind object;
  #L3f0a8c.  call temp:= `e`(v1) @signature `Lg3/b$b;.e:()Ljava/lang/CharSequence;` @kind virtual;
  #L3f0a92.  v1:= temp @kind object;
  #L3f0a94.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f0a9a.  v1:= temp @kind object;
  #L3f0a9c.  v1:= (`java.lang.CharSequence`) v1 @kind object;
  #L3f0aa0.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3f0aa6.  v1:= temp;
  #L3f0aa8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f0aae.  v1:= temp @kind object;
  #L3f0ab0.  call temp:= `put`(v2, v3, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f0ab6.  goto L3f0a58;
  #L3f0ab8.  v0:= v9.`n3.d.a` @type ^`java.lang.String` @kind object;
  #L3f0abc.  v1:= "p" @kind object;
  #L3f0ac0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f0ac6.  v6:= temp;
  #L3f0ac8.  v7:= 0I;
  #L3f0aca.  v8:= 0I;
  #L3f0acc.  call temp:= `g`(v9) @signature `Ln3/d;.g:()I` @kind virtual;
  #L3f0ad2.  v0:= temp;
  #L3f0ad4.  if v8 >= v0 then goto L3f0b04;
  #L3f0ad8.  call temp:= `f`(v9, v8) @signature `Ln3/d;.f:(I)Ln3/d;` @kind virtual;
  #L3f0ade.  v0:= temp @kind object;
  #L3f0ae0.  if v12 != 0 then goto L3f0aee;
  #L3f0ae4.  if v6 == 0 then goto L3f0aea;
  #L3f0ae8.  goto L3f0aee;
  #L3f0aea.  v3:= 0I;
  #L3f0aec.  goto L3f0af2;
  #L3f0aee.  v1:= 1I;
  #L3f0af0.  v3:= 1I;
  #L3f0af2.  v1:= v10 @kind wide;
  #L3f0af4.  v4:= v13 @kind object;
  #L3f0af6.  v5:= v14 @kind object;
  #L3f0af8.  call `p`(v0, v1, v3, v4, v5) @signature `Ln3/d;.p:(JZLjava/lang/String;Ljava/util/Map;)V` @kind direct;
  #L3f0afe.  v8:= v8 + 1;
  #L3f0b02.  goto L3f0acc;
  #L3f0b04.  if v6 == 0 then goto L3f0b16;
  #L3f0b08.  call temp:= `k`(v13, v14) @signature `Ln3/d;.k:(Ljava/lang/String;Ljava/util/Map;)Landroid/text/SpannableStringBuilder;` @kind static;
  #L3f0b0e.  v10:= temp @kind object;
  #L3f0b10.  call `c`(v10) @signature `Ln3/f;.c:(Landroid/text/SpannableStringBuilder;)V` @kind static;
  #L3f0b16.  call temp:= `entrySet`(v14) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3f0b1c.  v10:= temp @kind object;
  #L3f0b1e.  call temp:= `iterator`(v10) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f0b24.  v10:= temp @kind object;
  #L3f0b26.  call temp:= `hasNext`(v10) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f0b2c.  v11:= temp;
  #L3f0b2e.  if v11 == 0 then goto L3f0b86;
  #L3f0b32.  call temp:= `next`(v10) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f0b38.  v11:= temp @kind object;
  #L3f0b3a.  v11:= (`java.util.Map$Entry`) v11 @kind object;
  #L3f0b3e.  v12:= v9.`n3.d.l` @type ^`java.util.HashMap` @kind object;
  #L3f0b42.  call temp:= `getKey`(v11) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3f0b48.  v13:= temp @kind object;
  #L3f0b4a.  v13:= (`java.lang.String`) v13 @kind object;
  #L3f0b4e.  call temp:= `getValue`(v11) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3f0b54.  v11:= temp @kind object;
  #L3f0b56.  v11:= (`g3.b$b`) v11 @kind object;
  #L3f0b5a.  call temp:= `e`(v11) @signature `Lg3/b$b;.e:()Ljava/lang/CharSequence;` @kind virtual;
  #L3f0b60.  v11:= temp @kind object;
  #L3f0b62.  call temp:= `e`(v11) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f0b68.  v11:= temp @kind object;
  #L3f0b6a.  v11:= (`java.lang.CharSequence`) v11 @kind object;
  #L3f0b6e.  call temp:= `length`(v11) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3f0b74.  v11:= temp;
  #L3f0b76.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f0b7c.  v11:= temp @kind object;
  #L3f0b7e.  call temp:= `put`(v12, v13, v11) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f0b84.  goto L3f0b26;
  #L3f0b86.  return @kind void;
}
procedure `void` `a`(`n3.d` v1 @kind this, `n3.d` v2 @kind object) @signature `Ln3/d;.a:(Ln3/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0420.  v0:= v1.`n3.d.m` @type ^`java.util.List` @kind object;
  #L3f0424.  if v0 != 0 then goto L3f0436;
  #L3f0428.  v0:= new `java.util.ArrayList`;
  #L3f042c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3f0432.  v1.`n3.d.m` @type ^`java.util.List` := v0 @kind object;
  #L3f0436.  v0:= v1.`n3.d.m` @type ^`java.util.List` @kind object;
  #L3f043a.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f0440.  return @kind void;
}
procedure `n3.d` `f`(`n3.d` v1 @kind this, `int` v2 ) @signature `Ln3/d;.f:(I)Ln3/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0378.  v0:= v1.`n3.d.m` @type ^`java.util.List` @kind object;
  #L3f037c.  if v0 == 0 then goto L3f038e;
  #L3f0380.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3f0386.  v2:= temp @kind object;
  #L3f0388.  v2:= (`n3.d`) v2 @kind object;
  #L3f038c.  return v2 @kind object;
  #L3f038e.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L3f0392.  call `<init>`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L3f0398.  throw v2;
}
procedure `int` `g`(`n3.d` v1 @kind this) @signature `Ln3/d;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0058.  v0:= v1.`n3.d.m` @type ^`java.util.List` @kind object;
  #L3f005c.  if v0 != 0 then goto L3f0064;
  #L3f0060.  v0:= 0I;
  #L3f0062.  goto L3f006c;
  #L3f0064.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3f006a.  v0:= temp;
  #L3f006c.  return v0;
}
procedure `java.util.List` `h`(`n3.d` v9 @kind this, `long` v10 , `java.util.Map` v12 @kind object, `java.util.Map` v13 @kind object, `java.util.Map` v14 @kind object) @signature `Ln3/d;.h:(JLjava/util/Map;Ljava/util/Map;Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3f0098.  v0:= new `java.util.ArrayList`;
  #L3f009c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3f00a2.  v1:= v9.`n3.d.h` @type ^`java.lang.String` @kind object;
  #L3f00a6.  call `n`(v9, v10, v1, v0) @signature `Ln3/d;.n:(JLjava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3f00ac.  v1:= new `java.util.TreeMap`;
  #L3f00b0.  call `<init>`(v1) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L3f00b6.  v6:= v9.`n3.d.h` @type ^`java.lang.String` @kind object;
  #L3f00ba.  v5:= 0I;
  #L3f00bc.  v2:= v9 @kind object;
  #L3f00be.  v3:= v10 @kind wide;
  #L3f00c0.  v7:= v1 @kind object;
  #L3f00c2.  call `p`(v2, v3, v5, v6, v7) @signature `Ln3/d;.p:(JZLjava/lang/String;Ljava/util/Map;)V` @kind direct;
  #L3f00c8.  v7:= v9.`n3.d.h` @type ^`java.lang.String` @kind object;
  #L3f00cc.  v5:= v12 @kind object;
  #L3f00ce.  v6:= v13 @kind object;
  #L3f00d0.  v8:= v1 @kind object;
  #L3f00d2.  call `o`(v2, v3, v5, v6, v7, v8) @signature `Ln3/d;.o:(JLjava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;)V` @kind direct;
  #L3f00d8.  v10:= new `java.util.ArrayList`;
  #L3f00dc.  call `<init>`(v10) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3f00e2.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f00e8.  v11:= temp @kind object;
  #L3f00ea.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f00f0.  v12:= temp;
  #L3f00f2.  if v12 == 0 then goto L3f01ba;
  #L3f00f6.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f00fc.  v12:= temp @kind object;
  #L3f00fe.  v12:= (`android.util.Pair`) v12 @kind object;
  #L3f0102.  v0:= v12.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L3f0106.  call temp:= `get`(v14, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f010c.  v0:= temp @kind object;
  #L3f010e.  v0:= (`java.lang.String`) v0 @kind object;
  #L3f0112.  if v0 != 0 then goto L3f0118;
  #L3f0116.  goto L3f00ea;
  #L3f0118.  v2:= 0I;
  #L3f011a.  call temp:= `decode`(v0, v2) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L3f0120.  v0:= temp @kind object;
  #L3f0122.  v3:= length @variable v0;
  #L3f0124.  call temp:= `decodeByteArray`(v0, v2, v3) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BII)Landroid/graphics/Bitmap;` @kind static;
  #L3f012a.  v0:= temp @kind object;
  #L3f012c.  v12:= v12.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L3f0130.  call temp:= `get`(v13, v12) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f0136.  v12:= temp @kind object;
  #L3f0138.  v12:= (`n3.e`) v12 @kind object;
  #L3f013c.  call temp:= `e`(v12) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f0142.  v12:= temp @kind object;
  #L3f0144.  v12:= (`n3.e`) v12 @kind object;
  #L3f0148.  v3:= new `g3.b$b`;
  #L3f014c.  call `<init>`(v3) @signature `Lg3/b$b;.<init>:()V` @kind direct;
  #L3f0152.  call temp:= `f`(v3, v0) @signature `Lg3/b$b;.f:(Landroid/graphics/Bitmap;)Lg3/b$b;` @kind virtual;
  #L3f0158.  v0:= temp @kind object;
  #L3f015a.  v3:= v12.`n3.e.b` @type ^`float`;
  #L3f015e.  call temp:= `k`(v0, v3) @signature `Lg3/b$b;.k:(F)Lg3/b$b;` @kind virtual;
  #L3f0164.  v0:= temp @kind object;
  #L3f0166.  call temp:= `l`(v0, v2) @signature `Lg3/b$b;.l:(I)Lg3/b$b;` @kind virtual;
  #L3f016c.  v0:= temp @kind object;
  #L3f016e.  v3:= v12.`n3.e.c` @type ^`float`;
  #L3f0172.  call temp:= `h`(v0, v3, v2) @signature `Lg3/b$b;.h:(FI)Lg3/b$b;` @kind virtual;
  #L3f0178.  v0:= temp @kind object;
  #L3f017a.  v2:= v12.`n3.e.e` @type ^`int`;
  #L3f017e.  call temp:= `i`(v0, v2) @signature `Lg3/b$b;.i:(I)Lg3/b$b;` @kind virtual;
  #L3f0184.  v0:= temp @kind object;
  #L3f0186.  v2:= v12.`n3.e.f` @type ^`float`;
  #L3f018a.  call temp:= `n`(v0, v2) @signature `Lg3/b$b;.n:(F)Lg3/b$b;` @kind virtual;
  #L3f0190.  v0:= temp @kind object;
  #L3f0192.  v2:= v12.`n3.e.g` @type ^`float`;
  #L3f0196.  call temp:= `g`(v0, v2) @signature `Lg3/b$b;.g:(F)Lg3/b$b;` @kind virtual;
  #L3f019c.  v0:= temp @kind object;
  #L3f019e.  v12:= v12.`n3.e.j` @type ^`int`;
  #L3f01a2.  call temp:= `r`(v0, v12) @signature `Lg3/b$b;.r:(I)Lg3/b$b;` @kind virtual;
  #L3f01a8.  v12:= temp @kind object;
  #L3f01aa.  call temp:= `a`(v12) @signature `Lg3/b$b;.a:()Lg3/b;` @kind virtual;
  #L3f01b0.  v12:= temp @kind object;
  #L3f01b2.  call temp:= `add`(v10, v12) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f01b8.  goto L3f00ea;
  #L3f01ba.  call temp:= `entrySet`(v1) @signature `Ljava/util/TreeMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L3f01c0.  v11:= temp @kind object;
  #L3f01c2.  call temp:= `iterator`(v11) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f01c8.  v11:= temp @kind object;
  #L3f01ca.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f01d0.  v12:= temp;
  #L3f01d2.  if v12 == 0 then goto L3f027c;
  #L3f01d6.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f01dc.  v12:= temp @kind object;
  #L3f01de.  v12:= (`java.util.Map$Entry`) v12 @kind object;
  #L3f01e2.  call temp:= `getKey`(v12) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3f01e8.  v14:= temp @kind object;
  #L3f01ea.  call temp:= `get`(v13, v14) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f01f0.  v14:= temp @kind object;
  #L3f01f2.  v14:= (`n3.e`) v14 @kind object;
  #L3f01f6.  call temp:= `e`(v14) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f01fc.  v14:= temp @kind object;
  #L3f01fe.  v14:= (`n3.e`) v14 @kind object;
  #L3f0202.  call temp:= `getValue`(v12) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3f0208.  v12:= temp @kind object;
  #L3f020a.  v12:= (`g3.b$b`) v12 @kind object;
  #L3f020e.  call temp:= `e`(v12) @signature `Lg3/b$b;.e:()Ljava/lang/CharSequence;` @kind virtual;
  #L3f0214.  v0:= temp @kind object;
  #L3f0216.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3f021c.  v0:= temp @kind object;
  #L3f021e.  v0:= (`android.text.SpannableStringBuilder`) v0 @kind object;
  #L3f0222.  call `e`(v0) @signature `Ln3/d;.e:(Landroid/text/SpannableStringBuilder;)V` @kind static;
  #L3f0228.  v0:= v14.`n3.e.c` @type ^`float`;
  #L3f022c.  v1:= v14.`n3.e.d` @type ^`int`;
  #L3f0230.  call temp:= `h`(v12, v0, v1) @signature `Lg3/b$b;.h:(FI)Lg3/b$b;` @kind virtual;
  #L3f0236.  v0:= v14.`n3.e.e` @type ^`int`;
  #L3f023a.  call temp:= `i`(v12, v0) @signature `Lg3/b$b;.i:(I)Lg3/b$b;` @kind virtual;
  #L3f0240.  v0:= v14.`n3.e.b` @type ^`float`;
  #L3f0244.  call temp:= `k`(v12, v0) @signature `Lg3/b$b;.k:(F)Lg3/b$b;` @kind virtual;
  #L3f024a.  v0:= v14.`n3.e.f` @type ^`float`;
  #L3f024e.  call temp:= `n`(v12, v0) @signature `Lg3/b$b;.n:(F)Lg3/b$b;` @kind virtual;
  #L3f0254.  v0:= v14.`n3.e.i` @type ^`float`;
  #L3f0258.  v1:= v14.`n3.e.h` @type ^`int`;
  #L3f025c.  call temp:= `q`(v12, v0, v1) @signature `Lg3/b$b;.q:(FI)Lg3/b$b;` @kind virtual;
  #L3f0262.  v14:= v14.`n3.e.j` @type ^`int`;
  #L3f0266.  call temp:= `r`(v12, v14) @signature `Lg3/b$b;.r:(I)Lg3/b$b;` @kind virtual;
  #L3f026c.  call temp:= `a`(v12) @signature `Lg3/b$b;.a:()Lg3/b;` @kind virtual;
  #L3f0272.  v12:= temp @kind object;
  #L3f0274.  call temp:= `add`(v10, v12) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f027a.  goto L3f01ca;
  #L3f027c.  return v10 @kind object;
}
procedure `long`[] `j`(`n3.d` v6 @kind this) @signature `Ln3/d;.j:()[J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f0290.  v0:= new `java.util.TreeSet`;
  #L3f0294.  call `<init>`(v0) @signature `Ljava/util/TreeSet;.<init>:()V` @kind direct;
  #L3f029a.  v1:= 0I;
  #L3f029c.  call `i`(v6, v0, v1) @signature `Ln3/d;.i:(Ljava/util/TreeSet;Z)V` @kind direct;
  #L3f02a2.  call temp:= `size`(v0) @signature `Ljava/util/TreeSet;.size:()I` @kind virtual;
  #L3f02a8.  v2:= temp;
  #L3f02aa.  v2:= new `long`[v2];
  #L3f02ae.  call temp:= `iterator`(v0) @signature `Ljava/util/TreeSet;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3f02b4.  v0:= temp @kind object;
  #L3f02b6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f02bc.  v3:= temp;
  #L3f02be.  if v3 == 0 then goto L3f02e2;
  #L3f02c2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f02c8.  v3:= temp @kind object;
  #L3f02ca.  v3:= (`java.lang.Long`) v3 @kind object;
  #L3f02ce.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3f02d4.  v3:= temp @kind wide;
  #L3f02d6.  v5:= v1 + 1;
  #L3f02da.  v2[v1]:= v3 @kind wide;
  #L3f02de.  v1:= v5;
  #L3f02e0.  goto L3f02b6;
  #L3f02e2.  return v2 @kind object;
}
procedure `java.lang.String`[] `l`(`n3.d` v1 @kind this) @signature `Ln3/d;.l:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0080.  v0:= v1.`n3.d.g` @type ^`java.lang.String`[] @kind object;
  #L3f0084.  return v0 @kind object;
}
procedure `boolean` `m`(`n3.d` v7 @kind this, `long` v8 ) @signature `Ln3/d;.m:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3effe0.  v0:= v7.`n3.d.d` @type ^`long` @kind wide;
  #L3effe4.  v2:= -4.9E-324D;
  #L3effee.  v4:= lcmp(v0, v2);
  #L3efff2.  if v4 != 0 then goto L3f0002;
  #L3efff6.  v4:= v7.`n3.d.e` @type ^`long` @kind wide;
  #L3efffa.  v6:= lcmp(v4, v2);
  #L3efffe.  if v6 == 0 then goto L3f003e;
  #L3f0002.  v4:= lcmp(v0, v8);
  #L3f0006.  if v4 > 0 then goto L3f0016;
  #L3f000a.  v4:= v7.`n3.d.e` @type ^`long` @kind wide;
  #L3f000e.  v6:= lcmp(v4, v2);
  #L3f0012.  if v6 == 0 then goto L3f003e;
  #L3f0016.  v4:= lcmp(v0, v2);
  #L3f001a.  if v4 != 0 then goto L3f002a;
  #L3f001e.  v2:= v7.`n3.d.e` @type ^`long` @kind wide;
  #L3f0022.  v4:= lcmp(v8, v2);
  #L3f0026.  if v4 < 0 then goto L3f003e;
  #L3f002a.  v2:= lcmp(v0, v8);
  #L3f002e.  if v2 > 0 then goto L3f0042;
  #L3f0032.  v0:= v7.`n3.d.e` @type ^`long` @kind wide;
  #L3f0036.  v2:= lcmp(v8, v0);
  #L3f003a.  if v2 >= 0 then goto L3f0042;
  #L3f003e.  v8:= 1I;
  #L3f0040.  goto L3f0044;
  #L3f0042.  v8:= 0I;
  #L3f0044.  return v8;
}
