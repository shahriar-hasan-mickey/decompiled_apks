record `s2.b` @kind class @AccessFlag PUBLIC_FINAL extends `s2.i` @kind class {
  `byte`[] `s2.b.p` @AccessFlag PUBLIC_FINAL;
}
global `android.os.Parcelable$Creator` `@@s2.b.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ls2/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L45606c.  v0:= new `s2.b$a`;
  #L456070.  call `<init>`(v0) @signature `Ls2/b$a;.<init>:()V` @kind direct;
  #L456076.  `@@s2.b.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L45607a.  return @kind void;
}
procedure `void` `<init>`(`s2.b` v1 @kind this, `android.os.Parcel` v2 @kind object) @signature `Ls2/b;.<init>:(Landroid/os/Parcel;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L45608c.  call temp:= `readString`(v2) @signature `Landroid/os/Parcel;.readString:()Ljava/lang/String;` @kind virtual;
  #L456092.  v0:= temp @kind object;
  #L456094.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45609a.  v0:= temp @kind object;
  #L45609c.  v0:= (`java.lang.String`) v0 @kind object;
  #L4560a0.  call `<init>`(v1, v0) @signature `Ls2/i;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4560a6.  call temp:= `createByteArray`(v2) @signature `Landroid/os/Parcel;.createByteArray:()[B` @kind virtual;
  #L4560ac.  v2:= temp @kind object;
  #L4560ae.  call temp:= `j`(v2) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4560b4.  v2:= temp @kind object;
  #L4560b6.  v2:= (`byte`[]) v2 @kind object;
  #L4560ba.  v1.`s2.b.p` @type ^`byte`[] := v2 @kind object;
  #L4560be.  return @kind void;
}
procedure `void` `<init>`(`s2.b` v0 @kind this, `java.lang.String` v1 @kind object, `byte`[] v2 @kind object) @signature `Ls2/b;.<init>:(Ljava/lang/String;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4560d0.  call `<init>`(v0, v1) @signature `Ls2/i;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4560d6.  v0.`s2.b.p` @type ^`byte`[] := v2 @kind object;
  #L4560da.  return @kind void;
}
procedure `boolean` `equals`(`s2.b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ls2/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L455fd0.  v0:= 1I;
  #L455fd2.  if v4 != v5 then goto L455fd8;
  #L455fd6.  return v0;
  #L455fd8.  v1:= 0I;
  #L455fda.  if v5 == 0 then goto L456022;
  #L455fde.  v2:= constclass @type ^`s2.b` @kind object;
  #L455fe2.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L455fe8.  v3:= temp @kind object;
  #L455fea.  if v2 == v3 then goto L455ff0;
  #L455fee.  goto L456022;
  #L455ff0.  v5:= (`s2.b`) v5 @kind object;
  #L455ff4.  v2:= v4.`s2.i.o` @type ^`java.lang.String` @kind object;
  #L455ff8.  v3:= v5.`s2.i.o` @type ^`java.lang.String` @kind object;
  #L455ffc.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L456002.  v2:= temp;
  #L456004.  if v2 == 0 then goto L45601e;
  #L456008.  v2:= v4.`s2.b.p` @type ^`byte`[] @kind object;
  #L45600c.  v5:= v5.`s2.b.p` @type ^`byte`[] @kind object;
  #L456010.  call temp:= `equals`(v2, v5) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L456016.  v5:= temp;
  #L456018.  if v5 == 0 then goto L45601e;
  #L45601c.  goto L456020;
  #L45601e.  v0:= 0I;
  #L456020.  return v0;
  #L456022.  return v1;
}
procedure `int` `hashCode`(`s2.b` v2 @kind this) @signature `Ls2/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L456034.  v0:= v2.`s2.i.o` @type ^`java.lang.String` @kind object;
  #L456038.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L45603e.  v0:= temp;
  #L456040.  v1:= 527I;
  #L456044.  v1:= v1 + v0 @kind int;
  #L456046.  v1:= v1 * 31;
  #L45604a.  v0:= v2.`s2.b.p` @type ^`byte`[] @kind object;
  #L45604e.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L456054.  v0:= temp;
  #L456056.  v1:= v1 + v0 @kind int;
  #L456058.  return v1;
}
procedure `void` `writeToParcel`(`s2.b` v0 @kind this, `android.os.Parcel` v1 @kind object, `int` v2 ) @signature `Ls2/b;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;

  #L4560ec.  v2:= v0.`s2.i.o` @type ^`java.lang.String` @kind object;
  #L4560f0.  call `writeString`(v1, v2) @signature `Landroid/os/Parcel;.writeString:(Ljava/lang/String;)V` @kind virtual;
  #L4560f6.  v2:= v0.`s2.b.p` @type ^`byte`[] @kind object;
  #L4560fa.  call `writeByteArray`(v1, v2) @signature `Landroid/os/Parcel;.writeByteArray:([B)V` @kind virtual;
  #L456100.  return @kind void;
}
