record `s2.h` @kind class @AccessFlag PUBLIC_FINAL extends `n2.h` @kind class {
  `s2.h$a` `s2.h.a` @AccessFlag PRIVATE_FINAL;
}
global `s2.h$a` `@@s2.h.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ls2/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L457f3c.  v0:= `@@s2.g.a` @type ^`s2.g` @kind object;
  #L457f40.  `@@s2.h.b` @type ^`s2.h$a` := v0 @kind object;
  #L457f44.  return @kind void;
}
procedure `void` `<init>`(`s2.h` v1 @kind this) @signature `Ls2/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L457f58.  v0:= 0I;
  #L457f5a.  call `<init>`(v1, v0) @signature `Ls2/h;.<init>:(Ls2/h$a;)V` @kind direct;
  #L457f60.  return @kind void;
}
procedure `void` `<init>`(`s2.h` v0 @kind this, `s2.h$a` v1 @kind object) @signature `Ls2/h;.<init>:(Ls2/h$a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L457f74.  call `<init>`(v0) @signature `Ln2/h;.<init>:()V` @kind direct;
  #L457f7a.  v0.`s2.h.a` @type ^`s2.h$a` := v1 @kind object;
  #L457f7e.  return @kind void;
}
procedure `int` `A`(`s3.z` v5 @kind object, `int` v6 ) @signature `Ls2/h;.A:(Ls3/z;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L456f98.  call temp:= `d`(v5) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L456f9e.  v0:= temp @kind object;
  #L456fa0.  call temp:= `e`(v5) @signature `Ls3/z;.e:()I` @kind virtual;
  #L456fa6.  v5:= temp;
  #L456fa8.  v1:= v5;
  #L456faa.  v2:= v1 + 1;
  #L456fae.  v3:= v5 + v6 @kind int;
  #L456fb2.  if v2 >= v3 then goto L456fea;
  #L456fb6.  v3:= v0[v1] @kind byte;
  #L456fba.  v4:= 255I;
  #L456fbe.  v3:= v3 ^& v4 @kind int;
  #L456fc0.  if v3 != v4 then goto L456fe6;
  #L456fc4.  v3:= v0[v2] @kind byte;
  #L456fc8.  if v3 != 0 then goto L456fe6;
  #L456fcc.  v3:= v1 - v5 @kind int;
  #L456fd0.  v1:= v1 + 2;
  #L456fd4.  v3:= v6 - v3 @kind int;
  #L456fd8.  v3:= v3 + -2;
  #L456fdc.  call `arraycopy`(v0, v1, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L456fe2.  v6:= v6 + -1;
  #L456fe6.  v1:= v2;
  #L456fe8.  goto L456faa;
  #L456fea.  return v6;
}
procedure `boolean` `B`(`s3.z` v18 @kind object, `int` v19 , `int` v20 , `boolean` v21 ) @signature `Ls2/h;.B:(Ls3/z;IIZ)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L456d34.  v1:= v18 @kind object;
  #L456d38.  v0:= v19;
  #L456d3c.  call temp:= `e`(v18) @signature `Ls3/z;.e:()I` @kind virtual;
  #L456d42.  v2:= temp;
  #L456d44.  call temp:= `a`(v18) @signature `Ls3/z;.a:()I` @kind virtual;
  #L456d4a.  v3:= temp;
  #L456d4c.  v4:= 1I;
  #L456d4e.  v5:= v20;
  #L456d52.  if v3 < v5 then goto L456e8a;
  #L456d56.  v3:= 3I;
  #L456d58.  v6:= 0I;
  #L456d5a.  if v0 < v3 then goto L456d78;
  #L456d5e.  call temp:= `m`(v18) @signature `Ls3/z;.m:()I` @kind virtual;
  #L456d64.  v7:= temp;
  #L456d66.  call temp:= `E`(v18) @signature `Ls3/z;.E:()J` @kind virtual;
  #L456d6c.  v8:= temp @kind wide;
  #L456d6e.  call temp:= `I`(v18) @signature `Ls3/z;.I:()I` @kind virtual;
  #L456d74.  v10:= temp;
  #L456d76.  goto L456d8c;
  #L456d78.  call temp:= `F`(v18) @signature `Ls3/z;.F:()I` @kind virtual;
  #L456d7e.  v7:= temp;
  #L456d80.  call temp:= `F`(v18) @signature `Ls3/z;.F:()I` @kind virtual;
  #L456d86.  v8:= temp;
  #L456d88.  v8:= (`long`) v8 @kind i2l;
  #L456d8a.  v10:= 0I;
  #L456d8c.  v11:= 0L;
  #L456d90.  if v7 != 0 then goto L456da8;
  #L456d94.  v7:= lcmp(v8, v11);
  #L456d98.  if v7 != 0 then goto L456da8;
  #L456d9c.  if v10 != 0 then goto L456da8;
  #L456da0.  call `O`(v1, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L456da6.  return v4;
  #L456da8.  v7:= 4I;
  #L456daa.  if v0 != v7 then goto L456e0a;
  #L456dae.  if v21 != 0 then goto L456e0a;
  #L456db2.  v13:= 8421504L;
  #L456db8.  v13:= v13 ^& v8 @kind long;
  #L456dba.  v15:= lcmp(v13, v11);
  #L456dbe.  if v15 == 0 then goto L456dca;
  #L456dc2.  call `O`(v1, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L456dc8.  return v6;
  #L456dca.  v11:= 255L;
  #L456dce.  v13:= v8 ^& v11 @kind long;
  #L456dd2.  v15:= 8I;
  #L456dd6.  v15:= v8 ^> v15 @kind long;
  #L456dda.  v15:= v15 ^& v11 @kind long;
  #L456ddc.  v17:= 7I;
  #L456de0.  v15:= v15 ^< v17 @kind long;
  #L456de4.  v13:= v13 ^| v15 @kind long;
  #L456de6.  v15:= 16I;
  #L456dea.  v15:= v8 ^> v15 @kind long;
  #L456dee.  v15:= v15 ^& v11 @kind long;
  #L456df0.  v17:= 14I;
  #L456df4.  v15:= v15 ^< v17 @kind long;
  #L456df8.  v13:= v13 ^| v15 @kind long;
  #L456dfa.  v15:= 24I;
  #L456dfe.  v8:= v8 ^> v15 @kind long;
  #L456e00.  v8:= v8 ^& v11 @kind long;
  #L456e02.  v11:= 21I;
  #L456e06.  v8:= v8 ^< v11 @kind long;
  #L456e08.  v8:= v8 ^| v13 @kind long;
  #L456e0a.  if v0 != v7 then goto L456e2a;
  #L456e0e.  v3:= v10 ^& 64;
  #L456e12.  if v3 == 0 then goto L456e1a;
  #L456e16.  v3:= 1I;
  #L456e18.  goto L456e1c;
  #L456e1a.  v3:= 0I;
  #L456e1c.  v7:= v10 ^& 1;
  #L456e20.  if v7 == 0 then goto L456e26;
  #L456e24.  goto L456e4a;
  #L456e26.  v4:= 0I;
  #L456e28.  goto L456e4a;
  #L456e2a.  if v0 != v3 then goto L456e46;
  #L456e2e.  v3:= v10 ^& 32;
  #L456e32.  if v3 == 0 then goto L456e3a;
  #L456e36.  v3:= 1I;
  #L456e38.  goto L456e3c;
  #L456e3a.  v3:= 0I;
  #L456e3c.  v7:= v10 ^& 128;
  #L456e40.  if v7 == 0 then goto L456e26;
  #L456e44.  goto L456e4a;
  #L456e46.  v3:= 0I;
  #L456e48.  goto L456e26;
  #L456e4a.  if v4 == 0 then goto L456e52;
  #L456e4e.  v3:= v3 + 4;
  #L456e52.  v3:= (`long`) v3 @kind i2l;
  #L456e54.  v7:= lcmp(v8, v3);
  #L456e58.  if v7 >= 0 then goto L456e64;
  #L456e5c.  call `O`(v1, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L456e62.  return v6;
  #L456e64.  call temp:= `a`(v18) @signature `Ls3/z;.a:()I` @kind virtual;
  #L456e6a.  v3:= temp;
  #L456e6c.  v3:= (`long`) v3 @kind i2l;
  #L456e6e.  v7:= lcmp(v3, v8);
  #L456e72.  if v7 >= 0 then goto L456e7e;
  #L456e76.  call `O`(v1, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L456e7c.  return v6;
  #L456e7e.  v3:= (`int`) v8 @kind l2i;
  #L456e80.  call `P`(v1, v3) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L456e86.  goto L456d44;
  #L456e8a.  call `O`(v1, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L456e90.  return v4;
  #L456e92.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L456e94.  call `O`(v1, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L456e9a.  throw v0;
  catch `java.lang.Throwable` @[L456d44..L456d88] goto L456e92;
  catch `java.lang.Throwable` @[L456e64..L456e6c] goto L456e92;
  catch `java.lang.Throwable` @[L456e80..L456e86] goto L456e92;
}
procedure `boolean` `c`(`int` v0 , `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Ls2/h;.c:(IIIII)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L456d04.  call temp:= `z`(v0, v1, v2, v3, v4) @signature `Ls2/h;.z:(IIIII)Z` @kind static;
  #L456d0a.  v0:= temp;
  #L456d0c.  return v0;
}
procedure `byte`[] `d`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Ls2/h;.d:([BII)[B` @AccessFlag PRIVATE_STATIC {
    temp;

  #L456ec8.  if v2 > v1 then goto L456ed2;
  #L456ecc.  v0:= `@@s3.l0.f` @type ^`byte`[] @kind object;
  #L456ed0.  return v0 @kind object;
  #L456ed2.  call temp:= `copyOfRange`(v0, v1, v2) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L456ed8.  v0:= temp @kind object;
  #L456eda.  return v0 @kind object;
}
procedure `s2.a` `f`(`s3.z` v7 @kind object, `int` v8 , `int` v9 ) @signature `Ls2/h;.f:(Ls3/z;II)Ls2/a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L457258.  call temp:= `C`(v7) @signature `Ls3/z;.C:()I` @kind virtual;
  #L45725e.  v0:= temp;
  #L457260.  call temp:= `v`(v0) @signature `Ls2/h;.v:(I)Ljava/lang/String;` @kind static;
  #L457266.  v1:= temp @kind object;
  #L457268.  v8:= v8 + -1;
  #L45726c.  v2:= new `byte`[v8];
  #L457270.  v3:= 0I;
  #L457272.  call `j`(v7, v2, v3, v8) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L457278.  v7:= "image/" @kind object;
  #L45727c.  v4:= "ISO-8859-1" @kind object;
  #L457280.  v5:= 2I;
  #L457282.  if v9 != v5 then goto L4572d0;
  #L457286.  v9:= new `java.lang.StringBuilder`;
  #L45728a.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L457290.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L457296.  v7:= new `java.lang.String`;
  #L45729a.  v6:= 3I;
  #L45729c.  call `<init>`(v7, v2, v3, v6, v4) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L4572a2.  call temp:= `e`(v7) @signature `Ll5/b;.e:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4572a8.  v7:= temp @kind object;
  #L4572aa.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4572b0.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4572b6.  v7:= temp @kind object;
  #L4572b8.  v9:= "image/jpg" @kind object;
  #L4572bc.  call temp:= `equals`(v9, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4572c2.  v9:= temp;
  #L4572c4.  if v9 == 0 then goto L4572cc;
  #L4572c8.  v7:= "image/jpeg" @kind object;
  #L4572cc.  v9:= 2I;
  #L4572ce.  goto L45731e;
  #L4572d0.  call temp:= `y`(v2, v3) @signature `Ls2/h;.y:([BI)I` @kind static;
  #L4572d6.  v9:= temp;
  #L4572d8.  v6:= new `java.lang.String`;
  #L4572dc.  call `<init>`(v6, v2, v3, v9, v4) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L4572e2.  call temp:= `e`(v6) @signature `Ll5/b;.e:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4572e8.  v3:= temp @kind object;
  #L4572ea.  v4:= 47I;
  #L4572ee.  call temp:= `indexOf`(v3, v4) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L4572f4.  v4:= temp;
  #L4572f6.  v6:= -1I;
  #L4572f8.  if v4 != v6 then goto L45731c;
  #L4572fc.  v4:= new `java.lang.StringBuilder`;
  #L457300.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L457306.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45730c.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L457312.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L457318.  v7:= temp @kind object;
  #L45731a.  goto L45731e;
  #L45731c.  v7:= v3 @kind object;
  #L45731e.  v3:= v9 + 1;
  #L457322.  v3:= v2[v3] @kind byte;
  #L457326.  v3:= v3 ^& 255;
  #L45732a.  v9:= v9 + v5 @kind int;
  #L45732c.  call temp:= `x`(v2, v9, v0) @signature `Ls2/h;.x:([BII)I` @kind static;
  #L457332.  v4:= temp;
  #L457334.  v5:= new `java.lang.String`;
  #L457338.  v6:= v4 - v9 @kind int;
  #L45733c.  call `<init>`(v5, v2, v9, v6, v1) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L457342.  call temp:= `u`(v0) @signature `Ls2/h;.u:(I)I` @kind static;
  #L457348.  v9:= temp;
  #L45734a.  v4:= v4 + v9 @kind int;
  #L45734c.  call temp:= `d`(v2, v4, v8) @signature `Ls2/h;.d:([BII)[B` @kind static;
  #L457352.  v8:= temp @kind object;
  #L457354.  v9:= new `s2.a`;
  #L457358.  call `<init>`(v9, v7, v5, v3, v8) @signature `Ls2/a;.<init>:(Ljava/lang/String;Ljava/lang/String;I[B)V` @kind direct;
  #L45735e.  return v9 @kind object;
}
procedure `s2.b` `g`(`s3.z` v2 @kind object, `int` v3 , `java.lang.String` v4 @kind object) @signature `Ls2/h;.g:(Ls3/z;ILjava/lang/String;)Ls2/b;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L457370.  v0:= new `byte`[v3];
  #L457374.  v1:= 0I;
  #L457376.  call `j`(v2, v0, v1, v3) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L45737c.  v2:= new `s2.b`;
  #L457380.  call `<init>`(v2, v4, v0) @signature `Ls2/b;.<init>:(Ljava/lang/String;[B)V` @kind direct;
  #L457386.  return v2 @kind object;
}
procedure `s2.c` `h`(`s3.z` v15 @kind object, `int` v16 , `int` v17 , `boolean` v18 , `int` v19 , `s2.h$a` v20 @kind object) @signature `Ls2/h;.h:(Ls3/z;IIZILs2/h$a;)Ls2/c;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L457398.  v0:= v15 @kind object;
  #L45739a.  call temp:= `e`(v15) @signature `Ls3/z;.e:()I` @kind virtual;
  #L4573a0.  v1:= temp;
  #L4573a2.  call temp:= `d`(v15) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L4573a8.  v2:= temp @kind object;
  #L4573aa.  call temp:= `y`(v2, v1) @signature `Ls2/h;.y:([BI)I` @kind static;
  #L4573b0.  v2:= temp;
  #L4573b2.  v4:= new `java.lang.String`;
  #L4573b6.  call temp:= `d`(v15) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L4573bc.  v3:= temp @kind object;
  #L4573be.  v5:= v2 - v1 @kind int;
  #L4573c2.  v6:= "ISO-8859-1" @kind object;
  #L4573c6.  call `<init>`(v4, v3, v1, v5, v6) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L4573cc.  v2:= v2 + 1;
  #L4573d0.  call `O`(v15, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L4573d6.  call temp:= `m`(v15) @signature `Ls3/z;.m:()I` @kind virtual;
  #L4573dc.  v5:= temp;
  #L4573de.  call temp:= `m`(v15) @signature `Ls3/z;.m:()I` @kind virtual;
  #L4573e4.  v6:= temp;
  #L4573e6.  call temp:= `E`(v15) @signature `Ls3/z;.E:()J` @kind virtual;
  #L4573ec.  v2:= temp @kind wide;
  #L4573ee.  v7:= -1L;
  #L4573f2.  v9:= 4294967295L;
  #L4573fc.  v11:= lcmp(v2, v9);
  #L457400.  if v11 != 0 then goto L457408;
  #L457404.  v11:= v7 @kind wide;
  #L457406.  goto L45740a;
  #L457408.  v11:= v2 @kind wide;
  #L45740a.  call temp:= `E`(v15) @signature `Ls3/z;.E:()J` @kind virtual;
  #L457410.  v2:= temp @kind wide;
  #L457412.  v13:= lcmp(v2, v9);
  #L457416.  if v13 != 0 then goto L45741e;
  #L45741a.  v9:= v7 @kind wide;
  #L45741c.  goto L457420;
  #L45741e.  v9:= v2 @kind wide;
  #L457420.  v2:= new `java.util.ArrayList`;
  #L457424.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L45742a.  v1:= v1 + v16 @kind int;
  #L45742e.  call temp:= `e`(v15) @signature `Ls3/z;.e:()I` @kind virtual;
  #L457434.  v3:= temp;
  #L457436.  if v3 >= v1 then goto L45745e;
  #L45743a.  v3:= v17;
  #L45743e.  v7:= v18;
  #L457442.  v8:= v19;
  #L457446.  v13:= v20 @kind object;
  #L45744a.  call temp:= `k`(v3, v15, v7, v8, v13) @signature `Ls2/h;.k:(ILs3/z;ZILs2/h$a;)Ls2/i;` @kind static;
  #L457450.  v14:= temp @kind object;
  #L457452.  if v14 == 0 then goto L45742e;
  #L457456.  call temp:= `add`(v2, v14) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L45745c.  goto L45742e;
  #L45745e.  v0:= 0I;
  #L457460.  v0:= new `s2.i`[v0];
  #L457464.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L45746a.  v0:= temp @kind object;
  #L45746c.  v0:= (`s2.i`[]) v0 @kind object;
  #L457470.  v1:= new `s2.c`;
  #L457474.  v3:= v1 @kind object;
  #L457476.  v7:= v11 @kind wide;
  #L457478.  v11:= v0 @kind object;
  #L45747a.  call `<init>`(v3, v4, v5, v6, v7, v9, v11) @signature `Ls2/c;.<init>:(Ljava/lang/String;IIJJ[Ls2/i;)V` @kind direct;
  #L457480.  return v1 @kind object;
}
procedure `s2.d` `i`(`s3.z` v16 @kind object, `int` v17 , `int` v18 , `boolean` v19 , `int` v20 , `s2.h$a` v21 @kind object) @signature `Ls2/h;.i:(Ls3/z;IIZILs2/h$a;)Ls2/d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L457494.  v0:= v16 @kind object;
  #L457498.  call temp:= `e`(v16) @signature `Ls3/z;.e:()I` @kind virtual;
  #L45749e.  v1:= temp;
  #L4574a0.  call temp:= `d`(v16) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L4574a6.  v2:= temp @kind object;
  #L4574a8.  call temp:= `y`(v2, v1) @signature `Ls2/h;.y:([BI)I` @kind static;
  #L4574ae.  v2:= temp;
  #L4574b0.  v3:= new `java.lang.String`;
  #L4574b4.  call temp:= `d`(v16) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L4574ba.  v4:= temp @kind object;
  #L4574bc.  v5:= v2 - v1 @kind int;
  #L4574c0.  v6:= "ISO-8859-1" @kind object;
  #L4574c4.  call `<init>`(v3, v4, v1, v5, v6) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L4574ca.  v4:= 1I;
  #L4574cc.  v2:= v2 + v4 @kind int;
  #L4574ce.  call `O`(v0, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L4574d4.  call temp:= `C`(v16) @signature `Ls3/z;.C:()I` @kind virtual;
  #L4574da.  v2:= temp;
  #L4574dc.  v5:= v2 ^& 2;
  #L4574e0.  v7:= 0I;
  #L4574e2.  if v5 == 0 then goto L4574ea;
  #L4574e6.  v5:= 1I;
  #L4574e8.  goto L4574ec;
  #L4574ea.  v5:= 0I;
  #L4574ec.  v2:= v2 ^& v4 @kind int;
  #L4574ee.  if v2 == 0 then goto L4574f6;
  #L4574f2.  v2:= 1I;
  #L4574f4.  goto L4574f8;
  #L4574f6.  v2:= 0I;
  #L4574f8.  call temp:= `C`(v16) @signature `Ls3/z;.C:()I` @kind virtual;
  #L4574fe.  v8:= temp;
  #L457500.  v9:= new `java.lang.String`[v8];
  #L457504.  v10:= 0I;
  #L457506.  if v10 >= v8 then goto L45754a;
  #L45750a.  call temp:= `e`(v16) @signature `Ls3/z;.e:()I` @kind virtual;
  #L457510.  v11:= temp;
  #L457512.  call temp:= `d`(v16) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L457518.  v12:= temp @kind object;
  #L45751a.  call temp:= `y`(v12, v11) @signature `Ls2/h;.y:([BI)I` @kind static;
  #L457520.  v12:= temp;
  #L457522.  v13:= new `java.lang.String`;
  #L457526.  call temp:= `d`(v16) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L45752c.  v14:= temp @kind object;
  #L45752e.  v15:= v12 - v11 @kind int;
  #L457532.  call `<init>`(v13, v14, v11, v15, v6) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L457538.  v9[v10]:= v13 @kind object;
  #L45753c.  v12:= v12 + v4 @kind int;
  #L45753e.  call `O`(v0, v12) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L457544.  v10:= v10 + 1;
  #L457548.  goto L457506;
  #L45754a.  v4:= new `java.util.ArrayList`;
  #L45754e.  call `<init>`(v4) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L457554.  v1:= v1 + v17 @kind int;
  #L457558.  call temp:= `e`(v16) @signature `Ls3/z;.e:()I` @kind virtual;
  #L45755e.  v6:= temp;
  #L457560.  if v6 >= v1 then goto L457588;
  #L457564.  v6:= v18;
  #L457568.  v8:= v19;
  #L45756c.  v10:= v20;
  #L457570.  v11:= v21 @kind object;
  #L457574.  call temp:= `k`(v6, v0, v8, v10, v11) @signature `Ls2/h;.k:(ILs3/z;ZILs2/h$a;)Ls2/i;` @kind static;
  #L45757a.  v12:= temp @kind object;
  #L45757c.  if v12 == 0 then goto L457558;
  #L457580.  call temp:= `add`(v4, v12) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L457586.  goto L457558;
  #L457588.  v0:= new `s2.i`[v7];
  #L45758c.  call temp:= `toArray`(v4, v0) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L457592.  v0:= temp @kind object;
  #L457594.  v0:= (`s2.i`[]) v0 @kind object;
  #L457598.  v1:= new `s2.d`;
  #L45759c.  v16:= v1 @kind object;
  #L4575a0.  v17:= v3 @kind object;
  #L4575a4.  v18:= v5;
  #L4575a8.  v19:= v2;
  #L4575ac.  v20:= v9 @kind object;
  #L4575b0.  v21:= v0 @kind object;
  #L4575b4.  call `<init>`(v16, v17, v18, v19, v20, v21) @signature `Ls2/d;.<init>:(Ljava/lang/String;ZZ[Ljava/lang/String;[Ls2/i;)V` @kind direct;
  #L4575ba.  return v1 @kind object;
}
procedure `s2.e` `j`(`s3.z` v7 @kind object, `int` v8 ) @signature `Ls2/h;.j:(Ls3/z;I)Ls2/e;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4575cc.  v0:= 4I;
  #L4575ce.  if v8 >= v0 then goto L4575d6;
  #L4575d2.  v7:= 0I;
  #L4575d4.  return v7 @kind object;
  #L4575d6.  call temp:= `C`(v7) @signature `Ls3/z;.C:()I` @kind virtual;
  #L4575dc.  v1:= temp;
  #L4575de.  call temp:= `v`(v1) @signature `Ls2/h;.v:(I)Ljava/lang/String;` @kind static;
  #L4575e4.  v2:= temp @kind object;
  #L4575e6.  v3:= 3I;
  #L4575e8.  v4:= new `byte`[v3];
  #L4575ec.  v5:= 0I;
  #L4575ee.  call `j`(v7, v4, v5, v3) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L4575f4.  v6:= new `java.lang.String`;
  #L4575f8.  call `<init>`(v6, v4, v5, v3) @signature `Ljava/lang/String;.<init>:([BII)V` @kind direct;
  #L4575fe.  v8:= v8 - v0 @kind int;
  #L457600.  v0:= new `byte`[v8];
  #L457604.  call `j`(v7, v0, v5, v8) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L45760a.  call temp:= `x`(v0, v5, v1) @signature `Ls2/h;.x:([BII)I` @kind static;
  #L457610.  v7:= temp;
  #L457612.  v8:= new `java.lang.String`;
  #L457616.  call `<init>`(v8, v0, v5, v7, v2) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L45761c.  call temp:= `u`(v1) @signature `Ls2/h;.u:(I)I` @kind static;
  #L457622.  v3:= temp;
  #L457624.  v7:= v7 + v3 @kind int;
  #L457626.  call temp:= `x`(v0, v7, v1) @signature `Ls2/h;.x:([BII)I` @kind static;
  #L45762c.  v1:= temp;
  #L45762e.  call temp:= `p`(v0, v7, v1, v2) @signature `Ls2/h;.p:([BIILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L457634.  v7:= temp @kind object;
  #L457636.  v0:= new `s2.e`;
  #L45763a.  call `<init>`(v0, v6, v8, v7) @signature `Ls2/e;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L457640.  return v0 @kind object;
}
procedure `s2.i` `k`(`int` v19 , `s3.z` v20 @kind object, `boolean` v21 , `int` v22 , `s2.h$a` v23 @kind object) @signature `Ls2/h;.k:(ILs3/z;ZILs2/h$a;)Ls2/i;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L457850.  v0:= v19;
  #L457854.  v7:= v20 @kind object;
  #L457858.  call temp:= `C`(v20) @signature `Ls3/z;.C:()I` @kind virtual;
  #L45785e.  v8:= temp;
  #L457860.  call temp:= `C`(v20) @signature `Ls3/z;.C:()I` @kind virtual;
  #L457866.  v9:= temp;
  #L457868.  call temp:= `C`(v20) @signature `Ls3/z;.C:()I` @kind virtual;
  #L45786e.  v10:= temp;
  #L457870.  v11:= 3I;
  #L457872.  if v0 < v11 then goto L457882;
  #L457876.  call temp:= `C`(v20) @signature `Ls3/z;.C:()I` @kind virtual;
  #L45787c.  v1:= temp;
  #L45787e.  v13:= v1;
  #L457880.  goto L457884;
  #L457882.  v13:= 0I;
  #L457884.  v14:= 4I;
  #L457886.  if v0 != v14 then goto L4578c8;
  #L45788a.  call temp:= `G`(v20) @signature `Ls3/z;.G:()I` @kind virtual;
  #L457890.  v1:= temp;
  #L457892.  if v21 != 0 then goto L4578c4;
  #L457896.  v2:= v1 ^& 255;
  #L45789a.  v3:= v1 ^> 8;
  #L45789e.  v3:= v3 ^& 255;
  #L4578a2.  v3:= v3 ^< 7;
  #L4578a6.  v2:= v2 ^| v3 @kind int;
  #L4578a8.  v3:= v1 ^> 16;
  #L4578ac.  v3:= v3 ^& 255;
  #L4578b0.  v3:= v3 ^< 14;
  #L4578b4.  v2:= v2 ^| v3 @kind int;
  #L4578b6.  v1:= v1 ^> 24;
  #L4578ba.  v1:= v1 ^& 255;
  #L4578be.  v1:= v1 ^< 21;
  #L4578c2.  v1:= v1 ^| v2 @kind int;
  #L4578c4.  v15:= v1;
  #L4578c6.  goto L4578e0;
  #L4578c8.  if v0 != v11 then goto L4578d6;
  #L4578cc.  call temp:= `G`(v20) @signature `Ls3/z;.G:()I` @kind virtual;
  #L4578d2.  v1:= temp;
  #L4578d4.  goto L4578c4;
  #L4578d6.  call temp:= `F`(v20) @signature `Ls3/z;.F:()I` @kind virtual;
  #L4578dc.  v1:= temp;
  #L4578de.  goto L4578c4;
  #L4578e0.  if v0 < v11 then goto L4578f0;
  #L4578e4.  call temp:= `I`(v20) @signature `Ls3/z;.I:()I` @kind virtual;
  #L4578ea.  v1:= temp;
  #L4578ec.  v6:= v1;
  #L4578ee.  goto L4578f2;
  #L4578f0.  v6:= 0I;
  #L4578f2.  v16:= 0I;
  #L4578f6.  if v8 != 0 then goto L45791e;
  #L4578fa.  if v9 != 0 then goto L45791e;
  #L4578fe.  if v10 != 0 then goto L45791e;
  #L457902.  if v13 != 0 then goto L45791e;
  #L457906.  if v15 != 0 then goto L45791e;
  #L45790a.  if v6 != 0 then goto L45791e;
  #L45790e.  call temp:= `f`(v20) @signature `Ls3/z;.f:()I` @kind virtual;
  #L457914.  v0:= temp;
  #L457916.  call `O`(v7, v0) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L45791c.  return v16 @kind object;
  #L45791e.  call temp:= `e`(v20) @signature `Ls3/z;.e:()I` @kind virtual;
  #L457924.  v1:= temp;
  #L457926.  v5:= v1 + v15 @kind int;
  #L45792a.  call temp:= `f`(v20) @signature `Ls3/z;.f:()I` @kind virtual;
  #L457930.  v1:= temp;
  #L457932.  v4:= "Id3Decoder" @kind object;
  #L457936.  if v5 <= v1 then goto L457954;
  #L45793a.  v0:= "Frame size exceeds remaining tag data" @kind object;
  #L45793e.  call `h`(v4, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L457944.  call temp:= `f`(v20) @signature `Ls3/z;.f:()I` @kind virtual;
  #L45794a.  v0:= temp;
  #L45794c.  call `O`(v7, v0) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L457952.  return v16 @kind object;
  #L457954.  if v23 == 0 then goto L457984;
  #L457958.  v1:= v23 @kind object;
  #L45795c.  v2:= v19;
  #L457960.  v3:= v8;
  #L457962.  v12:= v4 @kind object;
  #L457964.  v4:= v9;
  #L457966.  v14:= v5;
  #L457968.  v5:= v10;
  #L45796a.  v18:= v6;
  #L45796e.  v6:= v13;
  #L457970.  call temp:= `a`(v1, v2, v3, v4, v5, v6) @signature `Ls2/h$a;.a:(IIIII)Z` @kind interface;
  #L457976.  v1:= temp;
  #L457978.  if v1 != 0 then goto L45798c;
  #L45797c.  call `O`(v7, v14) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L457982.  return v16 @kind object;
  #L457984.  v12:= v4 @kind object;
  #L457986.  v14:= v5;
  #L457988.  v18:= v6;
  #L45798c.  v1:= 1I;
  #L45798e.  if v0 != v11 then goto L4579c8;
  #L457992.  v2:= v18;
  #L457996.  v3:= v2 ^& 128;
  #L45799a.  if v3 == 0 then goto L4579a2;
  #L45799e.  v3:= 1I;
  #L4579a0.  goto L4579a4;
  #L4579a2.  v3:= 0I;
  #L4579a4.  v4:= v2 ^& 64;
  #L4579a8.  if v4 == 0 then goto L4579b0;
  #L4579ac.  v4:= 1I;
  #L4579ae.  goto L4579b2;
  #L4579b0.  v4:= 0I;
  #L4579b2.  v2:= v2 ^& 32;
  #L4579b6.  if v2 == 0 then goto L4579be;
  #L4579ba.  v2:= 1I;
  #L4579bc.  goto L4579c0;
  #L4579be.  v2:= 0I;
  #L4579c0.  v17:= v3;
  #L4579c4.  v6:= 0I;
  #L4579c6.  goto L457a34;
  #L4579c8.  v2:= v18;
  #L4579cc.  v3:= 4I;
  #L4579ce.  if v0 != v3 then goto L457a28;
  #L4579d2.  v3:= v2 ^& 64;
  #L4579d6.  if v3 == 0 then goto L4579de;
  #L4579da.  v3:= 1I;
  #L4579dc.  goto L4579e0;
  #L4579de.  v3:= 0I;
  #L4579e0.  v4:= v2 ^& 8;
  #L4579e4.  if v4 == 0 then goto L4579ec;
  #L4579e8.  v4:= 1I;
  #L4579ea.  goto L4579ee;
  #L4579ec.  v4:= 0I;
  #L4579ee.  v5:= v2 ^& 4;
  #L4579f2.  if v5 == 0 then goto L4579fa;
  #L4579f6.  v5:= 1I;
  #L4579f8.  goto L4579fc;
  #L4579fa.  v5:= 0I;
  #L4579fc.  v6:= v2 ^& 2;
  #L457a00.  if v6 == 0 then goto L457a08;
  #L457a04.  v6:= 1I;
  #L457a06.  goto L457a0a;
  #L457a08.  v6:= 0I;
  #L457a0a.  v2:= v2 ^& v1 @kind int;
  #L457a0c.  if v2 == 0 then goto L457a16;
  #L457a10.  v17:= 1I;
  #L457a14.  goto L457a1a;
  #L457a16.  v17:= 0I;
  #L457a1a.  v2:= v3;
  #L457a1c.  v3:= v17;
  #L457a20.  v17:= v4;
  #L457a24.  v4:= v5;
  #L457a26.  goto L457a34;
  #L457a28.  v2:= 0I;
  #L457a2a.  v3:= 0I;
  #L457a2c.  v4:= 0I;
  #L457a2e.  v6:= 0I;
  #L457a30.  v17:= 0I;
  #L457a34.  if v17 != 0 then goto L457c9a;
  #L457a38.  if v4 == 0 then goto L457a40;
  #L457a3c.  goto L457c9a;
  #L457a40.  if v2 == 0 then goto L457a4e;
  #L457a44.  v15:= v15 + -1;
  #L457a48.  call `P`(v7, v1) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L457a4e.  if v3 == 0 then goto L457a5e;
  #L457a52.  v15:= v15 + -4;
  #L457a56.  v1:= 4I;
  #L457a58.  call `P`(v7, v1) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L457a5e.  if v6 == 0 then goto L457a6a;
  #L457a62.  call temp:= `A`(v7, v15) @signature `Ls2/h;.A:(Ls3/z;I)I` @kind static;
  #L457a68.  v15:= temp;
  #L457a6a.  v1:= 84I;
  #L457a6e.  v2:= 2I;
  #L457a70.  v3:= 88I;
  #L457a74.  if v8 != v1 then goto L457a94;
  #L457a78.  if v9 != v3 then goto L457a94;
  #L457a7c.  if v10 != v3 then goto L457a94;
  #L457a80.  if v0 == v2 then goto L457a88;
  #L457a84.  if v13 != v3 then goto L457a94;
  #L457a88.  call temp:= `r`(v7, v15) @signature `Ls2/h;.r:(Ls3/z;I)Ls2/m;` @kind static;
  #L457a8e.  v1:= temp @kind object;
  #L457a90.  goto L457c34;
  #L457a94.  if v8 != v1 then goto L457ab2;
  #L457a98.  call temp:= `w`(v0, v8, v9, v10, v13) @signature `Ls2/h;.w:(IIIII)Ljava/lang/String;` @kind static;
  #L457a9e.  v1:= temp @kind object;
  #L457aa0.  call temp:= `q`(v7, v15, v1) @signature `Ls2/h;.q:(Ls3/z;ILjava/lang/String;)Ls2/m;` @kind static;
  #L457aa6.  v1:= temp @kind object;
  #L457aa8.  goto L457c34;
  #L457aac.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L457aae.  goto L457c92;
  #L457ab2.  v4:= 87I;
  #L457ab6.  if v8 != v4 then goto L457ad6;
  #L457aba.  if v9 != v3 then goto L457ad6;
  #L457abe.  if v10 != v3 then goto L457ad6;
  #L457ac2.  if v0 == v2 then goto L457aca;
  #L457ac6.  if v13 != v3 then goto L457ad6;
  #L457aca.  call temp:= `t`(v7, v15) @signature `Ls2/h;.t:(Ls3/z;I)Ls2/n;` @kind static;
  #L457ad0.  v1:= temp @kind object;
  #L457ad2.  goto L457c34;
  #L457ad6.  if v8 != v4 then goto L457aee;
  #L457ada.  call temp:= `w`(v0, v8, v9, v10, v13) @signature `Ls2/h;.w:(IIIII)Ljava/lang/String;` @kind static;
  #L457ae0.  v1:= temp @kind object;
  #L457ae2.  call temp:= `s`(v7, v15, v1) @signature `Ls2/h;.s:(Ls3/z;ILjava/lang/String;)Ls2/n;` @kind static;
  #L457ae8.  v1:= temp @kind object;
  #L457aea.  goto L457c34;
  #L457aee.  v3:= 73I;
  #L457af2.  v4:= 80I;
  #L457af6.  if v8 != v4 then goto L457b1a;
  #L457afa.  v5:= 82I;
  #L457afe.  if v9 != v5 then goto L457b1a;
  #L457b02.  if v10 != v3 then goto L457b1a;
  #L457b06.  v5:= 86I;
  #L457b0a.  if v13 != v5 then goto L457b1a;
  #L457b0e.  call temp:= `o`(v7, v15) @signature `Ls2/h;.o:(Ls3/z;I)Ls2/l;` @kind static;
  #L457b14.  v1:= temp @kind object;
  #L457b16.  goto L457c34;
  #L457b1a.  v5:= 71I;
  #L457b1e.  v6:= 79I;
  #L457b22.  if v8 != v5 then goto L457b4a;
  #L457b26.  v5:= 69I;
  #L457b2a.  if v9 != v5 then goto L457b4a;
  #L457b2e.  if v10 != v6 then goto L457b4a;
  #L457b32.  v5:= 66I;
  #L457b36.  if v13 == v5 then goto L457b3e;
  #L457b3a.  if v0 != v2 then goto L457b4a;
  #L457b3e.  call temp:= `l`(v7, v15) @signature `Ls2/h;.l:(Ls3/z;I)Ls2/f;` @kind static;
  #L457b44.  v1:= temp @kind object;
  #L457b46.  goto L457c34;
  #L457b4a.  v5:= 65I;
  #L457b4e.  v11:= 67I;
  #L457b52.  if v0 != v2 then goto L457b64;
  #L457b56.  if v8 != v4 then goto L457b80;
  #L457b5a.  if v9 != v3 then goto L457b80;
  #L457b5e.  if v10 != v11 then goto L457b80;
  #L457b62.  goto L457b74;
  #L457b64.  if v8 != v5 then goto L457b80;
  #L457b68.  if v9 != v4 then goto L457b80;
  #L457b6c.  if v10 != v3 then goto L457b80;
  #L457b70.  if v13 != v11 then goto L457b80;
  #L457b74.  call temp:= `f`(v7, v15, v0) @signature `Ls2/h;.f:(Ls3/z;II)Ls2/a;` @kind static;
  #L457b7a.  v1:= temp @kind object;
  #L457b7c.  goto L457c34;
  #L457b80.  v3:= 77I;
  #L457b84.  if v8 != v11 then goto L457ba2;
  #L457b88.  if v9 != v6 then goto L457ba2;
  #L457b8c.  if v10 != v3 then goto L457ba2;
  #L457b90.  if v13 == v3 then goto L457b98;
  #L457b94.  if v0 != v2 then goto L457ba2;
  #L457b98.  call temp:= `j`(v7, v15) @signature `Ls2/h;.j:(Ls3/z;I)Ls2/e;` @kind static;
  #L457b9e.  v1:= temp @kind object;
  #L457ba0.  goto L457c34;
  #L457ba2.  if v8 != v11 then goto L457bd6;
  #L457ba6.  v2:= 72I;
  #L457baa.  if v9 != v2 then goto L457bd6;
  #L457bae.  if v10 != v5 then goto L457bd6;
  #L457bb2.  if v13 != v4 then goto L457bd6;
  #L457bb6.  v1:= v20 @kind object;
  #L457bba.  v2:= v15;
  #L457bbc.  v3:= v19;
  #L457bc0.  v4:= v21;
  #L457bc4.  v5:= v22;
  #L457bc8.  v6:= v23 @kind object;
  #L457bcc.  call temp:= `h`(v1, v2, v3, v4, v5, v6) @signature `Ls2/h;.h:(Ls3/z;IIZILs2/h$a;)Ls2/c;` @kind static;
  #L457bd2.  v1:= temp @kind object;
  #L457bd4.  goto L457c34;
  #L457bd6.  if v8 != v11 then goto L457c06;
  #L457bda.  if v9 != v1 then goto L457c06;
  #L457bde.  if v10 != v6 then goto L457c06;
  #L457be2.  if v13 != v11 then goto L457c06;
  #L457be6.  v1:= v20 @kind object;
  #L457bea.  v2:= v15;
  #L457bec.  v3:= v19;
  #L457bf0.  v4:= v21;
  #L457bf4.  v5:= v22;
  #L457bf8.  v6:= v23 @kind object;
  #L457bfc.  call temp:= `i`(v1, v2, v3, v4, v5, v6) @signature `Ls2/h;.i:(Ls3/z;IIZILs2/h$a;)Ls2/d;` @kind static;
  #L457c02.  v1:= temp @kind object;
  #L457c04.  goto L457c34;
  #L457c06.  if v8 != v3 then goto L457c24;
  #L457c0a.  v2:= 76I;
  #L457c0e.  if v9 != v2 then goto L457c24;
  #L457c12.  if v10 != v2 then goto L457c24;
  #L457c16.  if v13 != v1 then goto L457c24;
  #L457c1a.  call temp:= `n`(v7, v15) @signature `Ls2/h;.n:(Ls3/z;I)Ls2/k;` @kind static;
  #L457c20.  v1:= temp @kind object;
  #L457c22.  goto L457c34;
  #L457c24.  call temp:= `w`(v0, v8, v9, v10, v13) @signature `Ls2/h;.w:(IIIII)Ljava/lang/String;` @kind static;
  #L457c2a.  v1:= temp @kind object;
  #L457c2c.  call temp:= `g`(v7, v15, v1) @signature `Ls2/h;.g:(Ls3/z;ILjava/lang/String;)Ls2/b;` @kind static;
  #L457c32.  v1:= temp @kind object;
  #L457c34.  if v1 != 0 then goto L457c78;
  #L457c38.  v2:= new `java.lang.StringBuilder`;
  #L457c3c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L457c42.  v3:= "Failed to decode frame: id=" @kind object;
  #L457c46.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L457c4c.  call temp:= `w`(v0, v8, v9, v10, v13) @signature `Ls2/h;.w:(IIIII)Ljava/lang/String;` @kind static;
  #L457c52.  v0:= temp @kind object;
  #L457c54.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L457c5a.  v0:= ", frameSize=" @kind object;
  #L457c5e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L457c64.  call temp:= `append`(v2, v15) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L457c6a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L457c70.  v0:= temp @kind object;
  #L457c72.  call `h`(v12, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L457c78.  call `O`(v7, v14) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L457c7e.  return v1 @kind object;
  #L457c80.  v0:= "Unsupported character encoding" @kind object;
  #L457c84.  call `h`(v12, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L457c8a.  call `O`(v7, v14) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L457c90.  return v16 @kind object;
  #L457c92.  call `O`(v7, v14) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L457c98.  throw v0;
  #L457c9a.  v0:= "Skipping unsupported compressed or encrypted frame" @kind object;
  #L457c9e.  call `h`(v12, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L457ca4.  call `O`(v7, v14) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L457caa.  return v16 @kind object;
  catch `java.io.UnsupportedEncodingException` @[L457a88..L457c78] goto L457c80;
  catch `java.lang.Throwable` @[L457a88..L457c78] goto L457aac;
  catch `java.lang.Throwable` @[L457c80..L457c8a] goto L457aac;
}
procedure `s2.f` `l`(`s3.z` v6 @kind object, `int` v7 ) @signature `Ls2/h;.l:(Ls3/z;I)Ls2/f;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L457654.  call temp:= `C`(v6) @signature `Ls3/z;.C:()I` @kind virtual;
  #L45765a.  v0:= temp;
  #L45765c.  call temp:= `v`(v0) @signature `Ls2/h;.v:(I)Ljava/lang/String;` @kind static;
  #L457662.  v1:= temp @kind object;
  #L457664.  v7:= v7 + -1;
  #L457668.  v2:= new `byte`[v7];
  #L45766c.  v3:= 0I;
  #L45766e.  call `j`(v6, v2, v3, v7) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L457674.  call temp:= `y`(v2, v3) @signature `Ls2/h;.y:([BI)I` @kind static;
  #L45767a.  v6:= temp;
  #L45767c.  v4:= new `java.lang.String`;
  #L457680.  v5:= "ISO-8859-1" @kind object;
  #L457684.  call `<init>`(v4, v2, v3, v6, v5) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L45768a.  v6:= v6 + 1;
  #L45768e.  call temp:= `x`(v2, v6, v0) @signature `Ls2/h;.x:([BII)I` @kind static;
  #L457694.  v3:= temp;
  #L457696.  call temp:= `p`(v2, v6, v3, v1) @signature `Ls2/h;.p:([BIILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L45769c.  v6:= temp @kind object;
  #L45769e.  call temp:= `u`(v0) @signature `Ls2/h;.u:(I)I` @kind static;
  #L4576a4.  v5:= temp;
  #L4576a6.  v3:= v3 + v5 @kind int;
  #L4576a8.  call temp:= `x`(v2, v3, v0) @signature `Ls2/h;.x:([BII)I` @kind static;
  #L4576ae.  v5:= temp;
  #L4576b0.  call temp:= `p`(v2, v3, v5, v1) @signature `Ls2/h;.p:([BIILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L4576b6.  v1:= temp @kind object;
  #L4576b8.  call temp:= `u`(v0) @signature `Ls2/h;.u:(I)I` @kind static;
  #L4576be.  v0:= temp;
  #L4576c0.  v5:= v5 + v0 @kind int;
  #L4576c2.  call temp:= `d`(v2, v5, v7) @signature `Ls2/h;.d:([BII)[B` @kind static;
  #L4576c8.  v7:= temp @kind object;
  #L4576ca.  v0:= new `s2.f`;
  #L4576ce.  call `<init>`(v0, v4, v6, v1, v7) @signature `Ls2/f;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)V` @kind direct;
  #L4576d4.  return v0 @kind object;
}
procedure `s2.h$b` `m`(`s3.z` v9 @kind object) @signature `Ls2/h;.m:(Ls3/z;)Ls2/h$b;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4576e8.  call temp:= `a`(v9) @signature `Ls3/z;.a:()I` @kind virtual;
  #L4576ee.  v0:= temp;
  #L4576f0.  v1:= 0I;
  #L4576f2.  v2:= "Id3Decoder" @kind object;
  #L4576f6.  v3:= 10I;
  #L4576fa.  if v0 >= v3 then goto L45770a;
  #L4576fe.  v9:= "Data too short to be an ID3 tag" @kind object;
  #L457702.  call `h`(v2, v9) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L457708.  return v1 @kind object;
  #L45770a.  call temp:= `F`(v9) @signature `Ls3/z;.F:()I` @kind virtual;
  #L457710.  v0:= temp;
  #L457712.  v3:= 4801587I;
  #L457718.  v4:= 0I;
  #L45771a.  v5:= 1I;
  #L45771c.  if v0 == v3 then goto L457760;
  #L457720.  v9:= new `java.lang.StringBuilder`;
  #L457724.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45772a.  v3:= "Unexpected first three bytes of ID3 tag header: 0x" @kind object;
  #L45772e.  call temp:= `append`(v9, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L457734.  v3:= new `java.lang.Object`[v5];
  #L457738.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45773e.  v0:= temp @kind object;
  #L457740.  v3[v4]:= v0 @kind object;
  #L457744.  v0:= "%06X" @kind object;
  #L457748.  call temp:= `format`(v0, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L45774e.  v0:= temp @kind object;
  #L457750.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L457756.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45775c.  v9:= temp @kind object;
  #L45775e.  goto L457702;
  #L457760.  call temp:= `C`(v9) @signature `Ls3/z;.C:()I` @kind virtual;
  #L457766.  v0:= temp;
  #L457768.  call `P`(v9, v5) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L45776e.  call temp:= `C`(v9) @signature `Ls3/z;.C:()I` @kind virtual;
  #L457774.  v3:= temp;
  #L457776.  call temp:= `B`(v9) @signature `Ls3/z;.B:()I` @kind virtual;
  #L45777c.  v6:= temp;
  #L45777e.  v7:= 2I;
  #L457780.  v8:= 4I;
  #L457782.  if v0 != v7 then goto L45779e;
  #L457786.  v9:= v3 ^& 64;
  #L45778a.  if v9 == 0 then goto L457792;
  #L45778e.  v9:= 1I;
  #L457790.  goto L457794;
  #L457792.  v9:= 0I;
  #L457794.  if v9 == 0 then goto L45780a;
  #L457798.  v9:= "Skipped ID3 tag with majorVersion=2 and undefined compression scheme" @kind object;
  #L45779c.  goto L457702;
  #L45779e.  v7:= 3I;
  #L4577a0.  if v0 != v7 then goto L4577ca;
  #L4577a4.  v1:= v3 ^& 64;
  #L4577a8.  if v1 == 0 then goto L4577b0;
  #L4577ac.  v1:= 1I;
  #L4577ae.  goto L4577b2;
  #L4577b0.  v1:= 0I;
  #L4577b2.  if v1 == 0 then goto L45780a;
  #L4577b6.  call temp:= `m`(v9) @signature `Ls3/z;.m:()I` @kind virtual;
  #L4577bc.  v1:= temp;
  #L4577be.  call `P`(v9, v1) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L4577c4.  v1:= v1 + v8 @kind int;
  #L4577c6.  v6:= v6 - v1 @kind int;
  #L4577c8.  goto L45780a;
  #L4577ca.  if v0 != v8 then goto L457824;
  #L4577ce.  v1:= v3 ^& 64;
  #L4577d2.  if v1 == 0 then goto L4577da;
  #L4577d6.  v1:= 1I;
  #L4577d8.  goto L4577dc;
  #L4577da.  v1:= 0I;
  #L4577dc.  if v1 == 0 then goto L4577f4;
  #L4577e0.  call temp:= `B`(v9) @signature `Ls3/z;.B:()I` @kind virtual;
  #L4577e6.  v1:= temp;
  #L4577e8.  v2:= v1 + -4;
  #L4577ec.  call `P`(v9, v2) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L4577f2.  v6:= v6 - v1 @kind int;
  #L4577f4.  v9:= v3 ^& 16;
  #L4577f8.  if v9 == 0 then goto L457800;
  #L4577fc.  v9:= 1I;
  #L4577fe.  goto L457802;
  #L457800.  v9:= 0I;
  #L457802.  if v9 == 0 then goto L45780a;
  #L457806.  v6:= v6 + -10;
  #L45780a.  if v0 >= v8 then goto L457818;
  #L45780e.  v9:= v3 ^& 128;
  #L457812.  if v9 == 0 then goto L457818;
  #L457816.  v4:= 1I;
  #L457818.  v9:= new `s2.h$b`;
  #L45781c.  call `<init>`(v9, v0, v4, v6) @signature `Ls2/h$b;.<init>:(IZI)V` @kind direct;
  #L457822.  return v9 @kind object;
  #L457824.  v9:= new `java.lang.StringBuilder`;
  #L457828.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45782e.  v3:= "Skipped ID3 tag with unsupported majorVersion=" @kind object;
  #L457832.  call temp:= `append`(v9, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L457838.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45783e.  goto L457756;
}
procedure `s2.k` `n`(`s3.z` v10 @kind object, `int` v11 ) @signature `Ls2/h;.n:(Ls3/z;I)Ls2/k;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L457cd8.  call temp:= `I`(v10) @signature `Ls3/z;.I:()I` @kind virtual;
  #L457cde.  v1:= temp;
  #L457ce0.  call temp:= `F`(v10) @signature `Ls3/z;.F:()I` @kind virtual;
  #L457ce6.  v2:= temp;
  #L457ce8.  call temp:= `F`(v10) @signature `Ls3/z;.F:()I` @kind virtual;
  #L457cee.  v3:= temp;
  #L457cf0.  call temp:= `C`(v10) @signature `Ls3/z;.C:()I` @kind virtual;
  #L457cf6.  v0:= temp;
  #L457cf8.  call temp:= `C`(v10) @signature `Ls3/z;.C:()I` @kind virtual;
  #L457cfe.  v4:= temp;
  #L457d00.  v5:= new `s3.y`;
  #L457d04.  call `<init>`(v5) @signature `Ls3/y;.<init>:()V` @kind direct;
  #L457d0a.  call `m`(v5, v10) @signature `Ls3/y;.m:(Ls3/z;)V` @kind virtual;
  #L457d10.  v11:= v11 + -10;
  #L457d14.  v11:= v11 * 8;
  #L457d18.  v10:= v0 + v4 @kind int;
  #L457d1c.  v11:= v11 / v10 @kind int;
  #L457d1e.  v10:= new `int`[v11];
  #L457d22.  v6:= new `int`[v11];
  #L457d26.  v7:= 0I;
  #L457d28.  if v7 >= v11 then goto L457d4a;
  #L457d2c.  call temp:= `h`(v5, v0) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L457d32.  v8:= temp;
  #L457d34.  call temp:= `h`(v5, v4) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L457d3a.  v9:= temp;
  #L457d3c.  v10[v7]:= v8;
  #L457d40.  v6[v7]:= v9;
  #L457d44.  v7:= v7 + 1;
  #L457d48.  goto L457d28;
  #L457d4a.  v11:= new `s2.k`;
  #L457d4e.  v0:= v11 @kind object;
  #L457d50.  v4:= v10 @kind object;
  #L457d52.  v5:= v6 @kind object;
  #L457d54.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Ls2/k;.<init>:(III[I[I)V` @kind direct;
  #L457d5a.  return v11 @kind object;
}
procedure `s2.l` `o`(`s3.z` v4 @kind object, `int` v5 ) @signature `Ls2/h;.o:(Ls3/z;I)Ls2/l;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L457d6c.  v0:= new `byte`[v5];
  #L457d70.  v1:= 0I;
  #L457d72.  call `j`(v4, v0, v1, v5) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L457d78.  call temp:= `y`(v0, v1) @signature `Ls2/h;.y:([BI)I` @kind static;
  #L457d7e.  v4:= temp;
  #L457d80.  v2:= new `java.lang.String`;
  #L457d84.  v3:= "ISO-8859-1" @kind object;
  #L457d88.  call `<init>`(v2, v0, v1, v4, v3) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L457d8e.  v4:= v4 + 1;
  #L457d92.  call temp:= `d`(v0, v4, v5) @signature `Ls2/h;.d:([BII)[B` @kind static;
  #L457d98.  v4:= temp @kind object;
  #L457d9a.  v5:= new `s2.l`;
  #L457d9e.  call `<init>`(v5, v2, v4) @signature `Ls2/l;.<init>:(Ljava/lang/String;[B)V` @kind direct;
  #L457da4.  return v5 @kind object;
}
procedure `java.lang.String` `p`(`byte`[] v1 @kind object, `int` v2 , `int` v3 , `java.lang.String` v4 @kind object) @signature `Ls2/h;.p:([BIILjava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L456ffc.  if v3 <= v2 then goto L457016;
  #L457000.  v0:= length @variable v1;
  #L457002.  if v3 <= v0 then goto L457008;
  #L457006.  goto L457016;
  #L457008.  v0:= new `java.lang.String`;
  #L45700c.  v3:= v3 - v2 @kind int;
  #L45700e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L457014.  return v0 @kind object;
  #L457016.  v1:= "" @kind object;
  #L45701a.  return v1 @kind object;
}
procedure `s2.m` `q`(`s3.z` v5 @kind object, `int` v6 , `java.lang.String` v7 @kind object) @signature `Ls2/h;.q:(Ls3/z;ILjava/lang/String;)Ls2/m;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L457db8.  v0:= 0I;
  #L457dba.  v1:= 1I;
  #L457dbc.  if v6 >= v1 then goto L457dc2;
  #L457dc0.  return v0 @kind object;
  #L457dc2.  call temp:= `C`(v5) @signature `Ls3/z;.C:()I` @kind virtual;
  #L457dc8.  v2:= temp;
  #L457dca.  call temp:= `v`(v2) @signature `Ls2/h;.v:(I)Ljava/lang/String;` @kind static;
  #L457dd0.  v3:= temp @kind object;
  #L457dd2.  v6:= v6 - v1 @kind int;
  #L457dd4.  v1:= new `byte`[v6];
  #L457dd8.  v4:= 0I;
  #L457dda.  call `j`(v5, v1, v4, v6) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L457de0.  call temp:= `x`(v1, v4, v2) @signature `Ls2/h;.x:([BII)I` @kind static;
  #L457de6.  v5:= temp;
  #L457de8.  v6:= new `java.lang.String`;
  #L457dec.  call `<init>`(v6, v1, v4, v5, v3) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L457df2.  v5:= new `s2.m`;
  #L457df6.  call `<init>`(v5, v7, v0, v6) @signature `Ls2/m;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L457dfc.  return v5 @kind object;
}
procedure `s2.m` `r`(`s3.z` v4 @kind object, `int` v5 ) @signature `Ls2/h;.r:(Ls3/z;I)Ls2/m;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L457e10.  v0:= 1I;
  #L457e12.  if v5 >= v0 then goto L457e1a;
  #L457e16.  v4:= 0I;
  #L457e18.  return v4 @kind object;
  #L457e1a.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L457e20.  v1:= temp;
  #L457e22.  call temp:= `v`(v1) @signature `Ls2/h;.v:(I)Ljava/lang/String;` @kind static;
  #L457e28.  v2:= temp @kind object;
  #L457e2a.  v5:= v5 - v0 @kind int;
  #L457e2c.  v0:= new `byte`[v5];
  #L457e30.  v3:= 0I;
  #L457e32.  call `j`(v4, v0, v3, v5) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L457e38.  call temp:= `x`(v0, v3, v1) @signature `Ls2/h;.x:([BII)I` @kind static;
  #L457e3e.  v4:= temp;
  #L457e40.  v5:= new `java.lang.String`;
  #L457e44.  call `<init>`(v5, v0, v3, v4, v2) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L457e4a.  call temp:= `u`(v1) @signature `Ls2/h;.u:(I)I` @kind static;
  #L457e50.  v3:= temp;
  #L457e52.  v4:= v4 + v3 @kind int;
  #L457e54.  call temp:= `x`(v0, v4, v1) @signature `Ls2/h;.x:([BII)I` @kind static;
  #L457e5a.  v1:= temp;
  #L457e5c.  call temp:= `p`(v0, v4, v1, v2) @signature `Ls2/h;.p:([BIILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L457e62.  v4:= temp @kind object;
  #L457e64.  v0:= new `s2.m`;
  #L457e68.  v1:= "TXXX" @kind object;
  #L457e6c.  call `<init>`(v0, v1, v5, v4) @signature `Ls2/m;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L457e72.  return v0 @kind object;
}
procedure `s2.n` `s`(`s3.z` v3 @kind object, `int` v4 , `java.lang.String` v5 @kind object) @signature `Ls2/h;.s:(Ls3/z;ILjava/lang/String;)Ls2/n;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L457e84.  v0:= new `byte`[v4];
  #L457e88.  v1:= 0I;
  #L457e8a.  call `j`(v3, v0, v1, v4) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L457e90.  call temp:= `y`(v0, v1) @signature `Ls2/h;.y:([BI)I` @kind static;
  #L457e96.  v3:= temp;
  #L457e98.  v4:= new `java.lang.String`;
  #L457e9c.  v2:= "ISO-8859-1" @kind object;
  #L457ea0.  call `<init>`(v4, v0, v1, v3, v2) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L457ea6.  v3:= new `s2.n`;
  #L457eaa.  v0:= 0I;
  #L457eac.  call `<init>`(v3, v5, v0, v4) @signature `Ls2/n;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L457eb2.  return v3 @kind object;
}
procedure `s2.n` `t`(`s3.z` v4 @kind object, `int` v5 ) @signature `Ls2/h;.t:(Ls3/z;I)Ls2/n;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L457ec4.  v0:= 1I;
  #L457ec6.  if v5 >= v0 then goto L457ece;
  #L457eca.  v4:= 0I;
  #L457ecc.  return v4 @kind object;
  #L457ece.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L457ed4.  v1:= temp;
  #L457ed6.  call temp:= `v`(v1) @signature `Ls2/h;.v:(I)Ljava/lang/String;` @kind static;
  #L457edc.  v2:= temp @kind object;
  #L457ede.  v5:= v5 - v0 @kind int;
  #L457ee0.  v0:= new `byte`[v5];
  #L457ee4.  v3:= 0I;
  #L457ee6.  call `j`(v4, v0, v3, v5) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L457eec.  call temp:= `x`(v0, v3, v1) @signature `Ls2/h;.x:([BII)I` @kind static;
  #L457ef2.  v4:= temp;
  #L457ef4.  v5:= new `java.lang.String`;
  #L457ef8.  call `<init>`(v5, v0, v3, v4, v2) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L457efe.  call temp:= `u`(v1) @signature `Ls2/h;.u:(I)I` @kind static;
  #L457f04.  v1:= temp;
  #L457f06.  v4:= v4 + v1 @kind int;
  #L457f08.  call temp:= `y`(v0, v4) @signature `Ls2/h;.y:([BI)I` @kind static;
  #L457f0e.  v1:= temp;
  #L457f10.  v2:= "ISO-8859-1" @kind object;
  #L457f14.  call temp:= `p`(v0, v4, v1, v2) @signature `Ls2/h;.p:([BIILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L457f1a.  v4:= temp @kind object;
  #L457f1c.  v0:= new `s2.n`;
  #L457f20.  v1:= "WXXX" @kind object;
  #L457f24.  call `<init>`(v0, v1, v5, v4) @signature `Ls2/n;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L457f2a.  return v0 @kind object;
}
procedure `int` `u`(`int` v1 ) @signature `Ls2/h;.u:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L456eec.  if v1 == 0 then goto L456efc;
  #L456ef0.  v0:= 3I;
  #L456ef2.  if v1 != v0 then goto L456ef8;
  #L456ef6.  goto L456efc;
  #L456ef8.  v1:= 2I;
  #L456efa.  goto L456efe;
  #L456efc.  v1:= 1I;
  #L456efe.  return v1;
}
procedure `java.lang.String` `v`(`int` v1 ) @signature `Ls2/h;.v:(I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L45702c.  v0:= 1I;
  #L45702e.  if v1 == v0 then goto L457050;
  #L457032.  v0:= 2I;
  #L457034.  if v1 == v0 then goto L45704a;
  #L457038.  v0:= 3I;
  #L45703a.  if v1 == v0 then goto L457044;
  #L45703e.  v1:= "ISO-8859-1" @kind object;
  #L457042.  return v1 @kind object;
  #L457044.  v1:= "UTF-8" @kind object;
  #L457048.  return v1 @kind object;
  #L45704a.  v1:= "UTF-16BE" @kind object;
  #L45704e.  return v1 @kind object;
  #L457050.  v1:= "UTF-16" @kind object;
  #L457054.  return v1 @kind object;
}
procedure `java.lang.String` `w`(`int` v5 , `int` v6 , `int` v7 , `int` v8 , `int` v9 ) @signature `Ls2/h;.w:(IIIII)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L457068.  v0:= 3I;
  #L45706a.  v1:= 1I;
  #L45706c.  v2:= 0I;
  #L45706e.  v3:= 2I;
  #L457070.  if v5 != v3 then goto L4570ae;
  #L457074.  v5:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L457078.  v9:= new `java.lang.Object`[v0];
  #L45707c.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L457082.  v6:= temp @kind object;
  #L457084.  v9[v2]:= v6 @kind object;
  #L457088.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45708e.  v6:= temp @kind object;
  #L457090.  v9[v1]:= v6 @kind object;
  #L457094.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45709a.  v6:= temp @kind object;
  #L45709c.  v9[v3]:= v6 @kind object;
  #L4570a0.  v6:= "%c%c%c" @kind object;
  #L4570a4.  call temp:= `format`(v5, v6, v9) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4570aa.  v5:= temp @kind object;
  #L4570ac.  goto L4570f4;
  #L4570ae.  v5:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L4570b2.  v4:= 4I;
  #L4570b4.  v4:= new `java.lang.Object`[v4];
  #L4570b8.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4570be.  v6:= temp @kind object;
  #L4570c0.  v4[v2]:= v6 @kind object;
  #L4570c4.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4570ca.  v6:= temp @kind object;
  #L4570cc.  v4[v1]:= v6 @kind object;
  #L4570d0.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4570d6.  v6:= temp @kind object;
  #L4570d8.  v4[v3]:= v6 @kind object;
  #L4570dc.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4570e2.  v6:= temp @kind object;
  #L4570e4.  v4[v0]:= v6 @kind object;
  #L4570e8.  v6:= "%c%c%c%c" @kind object;
  #L4570ec.  call temp:= `format`(v5, v6, v4) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4570f2.  v5:= temp @kind object;
  #L4570f4.  return v5 @kind object;
}
procedure `int` `x`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Ls2/h;.x:([BII)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L456f10.  call temp:= `y`(v2, v3) @signature `Ls2/h;.y:([BI)I` @kind static;
  #L456f16.  v0:= temp;
  #L456f18.  if v4 == 0 then goto L456f5a;
  #L456f1c.  v1:= 3I;
  #L456f1e.  if v4 != v1 then goto L456f24;
  #L456f22.  goto L456f5a;
  #L456f24.  v4:= length @variable v2;
  #L456f26.  v4:= v4 + -1;
  #L456f2a.  if v0 >= v4 then goto L456f56;
  #L456f2e.  v4:= v0 - v3 @kind int;
  #L456f32.  v4:= v4 %% 2;
  #L456f36.  if v4 != 0 then goto L456f48;
  #L456f3a.  v4:= v0 + 1;
  #L456f3e.  v4:= v2[v4] @kind byte;
  #L456f42.  if v4 != 0 then goto L456f48;
  #L456f46.  return v0;
  #L456f48.  v0:= v0 + 1;
  #L456f4c.  call temp:= `y`(v2, v0) @signature `Ls2/h;.y:([BI)I` @kind static;
  #L456f52.  v0:= temp;
  #L456f54.  goto L456f24;
  #L456f56.  v2:= length @variable v2;
  #L456f58.  return v2;
  #L456f5a.  return v0;
}
procedure `int` `y`(`byte`[] v1 @kind object, `int` v2 ) @signature `Ls2/h;.y:([BI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L456f6c.  v0:= length @variable v1;
  #L456f6e.  if v2 >= v0 then goto L456f82;
  #L456f72.  v0:= v1[v2] @kind byte;
  #L456f76.  if v0 != 0 then goto L456f7c;
  #L456f7a.  return v2;
  #L456f7c.  v2:= v2 + 1;
  #L456f80.  goto L456f6c;
  #L456f82.  v1:= length @variable v1;
  #L456f84.  return v1;
}
procedure `boolean` `z`(`int` v0 , `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Ls2/h;.z:(IIIII)Z` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L456d20.  v0:= 0I;
  #L456d22.  return v0;
}
procedure `n2.a` `b`(`s2.h` v0 @kind this, `n2.e` v1 @kind object, `java.nio.ByteBuffer` v2 @kind object) @signature `Ls2/h;.b:(Ln2/e;Ljava/nio/ByteBuffer;)Ln2/a;` @AccessFlag PROTECTED {
    temp;

  #L45722c.  call temp:= `array`(v2) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L457232.  v1:= temp @kind object;
  #L457234.  call temp:= `limit`(v2) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L45723a.  v2:= temp;
  #L45723c.  call temp:= `e`(v0, v1, v2) @signature `Ls2/h;.e:([BI)Ln2/a;` @kind virtual;
  #L457242.  v1:= temp @kind object;
  #L457244.  return v1 @kind object;
}
procedure `n2.a` `e`(`s2.h` v6 @kind this, `byte`[] v7 @kind object, `int` v8 ) @signature `Ls2/h;.e:([BI)Ln2/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L457108.  v0:= new `java.util.ArrayList`;
  #L45710c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L457112.  v1:= new `s3.z`;
  #L457116.  call `<init>`(v1, v7, v8) @signature `Ls3/z;.<init>:([BI)V` @kind direct;
  #L45711c.  call temp:= `m`(v1) @signature `Ls2/h;.m:(Ls3/z;)Ls2/h$b;` @kind static;
  #L457122.  v7:= temp @kind object;
  #L457124.  v8:= 0I;
  #L457126.  if v7 != 0 then goto L45712c;
  #L45712a.  return v8 @kind object;
  #L45712c.  call temp:= `e`(v1) @signature `Ls3/z;.e:()I` @kind virtual;
  #L457132.  v2:= temp;
  #L457134.  call temp:= `a`(v7) @signature `Ls2/h$b;.a:(Ls2/h$b;)I` @kind static;
  #L45713a.  v3:= temp;
  #L45713c.  v4:= 2I;
  #L45713e.  if v3 != v4 then goto L457146;
  #L457142.  v3:= 6I;
  #L457144.  goto L45714a;
  #L457146.  v3:= 10I;
  #L45714a.  call temp:= `b`(v7) @signature `Ls2/h$b;.b:(Ls2/h$b;)I` @kind static;
  #L457150.  v4:= temp;
  #L457152.  call temp:= `c`(v7) @signature `Ls2/h$b;.c:(Ls2/h$b;)Z` @kind static;
  #L457158.  v5:= temp;
  #L45715a.  if v5 == 0 then goto L45716e;
  #L45715e.  call temp:= `b`(v7) @signature `Ls2/h$b;.b:(Ls2/h$b;)I` @kind static;
  #L457164.  v4:= temp;
  #L457166.  call temp:= `A`(v1, v4) @signature `Ls2/h;.A:(Ls3/z;I)I` @kind static;
  #L45716c.  v4:= temp;
  #L45716e.  v2:= v2 + v4 @kind int;
  #L457170.  call `N`(v1, v2) @signature `Ls3/z;.N:(I)V` @kind virtual;
  #L457176.  call temp:= `a`(v7) @signature `Ls2/h$b;.a:(Ls2/h$b;)I` @kind static;
  #L45717c.  v2:= temp;
  #L45717e.  v4:= 0I;
  #L457180.  call temp:= `B`(v1, v2, v3, v4) @signature `Ls2/h;.B:(Ls3/z;IIZ)Z` @kind static;
  #L457186.  v2:= temp;
  #L457188.  v5:= 1I;
  #L45718a.  if v2 != 0 then goto L4571e2;
  #L45718e.  call temp:= `a`(v7) @signature `Ls2/h$b;.a:(Ls2/h$b;)I` @kind static;
  #L457194.  v2:= temp;
  #L457196.  v4:= 4I;
  #L457198.  if v2 != v4 then goto L4571ac;
  #L45719c.  call temp:= `B`(v1, v4, v3, v5) @signature `Ls2/h;.B:(Ls3/z;IIZ)Z` @kind static;
  #L4571a2.  v2:= temp;
  #L4571a4.  if v2 == 0 then goto L4571ac;
  #L4571a8.  v4:= 1I;
  #L4571aa.  goto L4571e2;
  #L4571ac.  v0:= new `java.lang.StringBuilder`;
  #L4571b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4571b6.  v1:= "Failed to validate ID3 tag with majorVersion=" @kind object;
  #L4571ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4571c0.  call temp:= `a`(v7) @signature `Ls2/h$b;.a:(Ls2/h$b;)I` @kind static;
  #L4571c6.  v7:= temp;
  #L4571c8.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4571ce.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4571d4.  v7:= temp @kind object;
  #L4571d6.  v0:= "Id3Decoder" @kind object;
  #L4571da.  call `h`(v0, v7) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L4571e0.  return v8 @kind object;
  #L4571e2.  call temp:= `a`(v1) @signature `Ls3/z;.a:()I` @kind virtual;
  #L4571e8.  v8:= temp;
  #L4571ea.  if v8 < v3 then goto L45720e;
  #L4571ee.  call temp:= `a`(v7) @signature `Ls2/h$b;.a:(Ls2/h$b;)I` @kind static;
  #L4571f4.  v8:= temp;
  #L4571f6.  v2:= v6.`s2.h.a` @type ^`s2.h$a` @kind object;
  #L4571fa.  call temp:= `k`(v8, v1, v4, v3, v2) @signature `Ls2/h;.k:(ILs3/z;ZILs2/h$a;)Ls2/i;` @kind static;
  #L457200.  v8:= temp @kind object;
  #L457202.  if v8 == 0 then goto L4571e2;
  #L457206.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45720c.  goto L4571e2;
  #L45720e.  v7:= new `n2.a`;
  #L457212.  call `<init>`(v7, v0) @signature `Ln2/a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L457218.  return v7 @kind object;
}
