record `s2.i` @kind class @AccessFlag PUBLIC_ABSTRACT extends `n2.a$b` @kind interface {
  `java.lang.String` `s2.i.o` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`s2.i` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Ls2/i;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L457ff4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L457ffa.  v0.`s2.i.o` @type ^`java.lang.String` := v1 @kind object;
  #L457ffe.  return @kind void;
}
procedure `byte`[] `S`(`s2.i` v1 @kind this) @signature `Ls2/i;.S:()[B` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L457f90.  call temp:= `a`(v1) @signature `Ln2/b;.a:(Ln2/a$b;)[B` @kind static;
  #L457f96.  v0:= temp @kind object;
  #L457f98.  return v0 @kind object;
}
procedure `void` `T`(`s2.i` v0 @kind this, `v1.w1$b` v1 @kind object) @signature `Ls2/i;.T:(Lv1/w1$b;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L458010.  call `c`(v0, v1) @signature `Ln2/b;.c:(Ln2/a$b;Lv1/w1$b;)V` @kind static;
  #L458016.  return @kind void;
}
procedure `int` `describeContents`(`s2.i` v1 @kind this) @signature `Ls2/i;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457fac.  v0:= 0I;
  #L457fae.  return v0;
}
procedure `v1.j1` `h`(`s2.i` v1 @kind this) @signature `Ls2/i;.h:()Lv1/j1;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L457fd8.  call temp:= `b`(v1) @signature `Ln2/b;.b:(Ln2/a$b;)Lv1/j1;` @kind static;
  #L457fde.  v0:= temp @kind object;
  #L457fe0.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`s2.i` v1 @kind this) @signature `Ls2/i;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457fc0.  v0:= v1.`s2.i.o` @type ^`java.lang.String` @kind object;
  #L457fc4.  return v0 @kind object;
}
