record `s2.c` @kind class @AccessFlag PUBLIC_FINAL extends `s2.i` @kind class {
  `java.lang.String` `s2.c.p` @AccessFlag PUBLIC_FINAL;
  `int` `s2.c.q` @AccessFlag PUBLIC_FINAL;
  `int` `s2.c.r` @AccessFlag PUBLIC_FINAL;
  `long` `s2.c.s` @AccessFlag PUBLIC_FINAL;
  `long` `s2.c.t` @AccessFlag PUBLIC_FINAL;
  `s2.i`[] `s2.c.u` @AccessFlag PRIVATE_FINAL;
}
global `android.os.Parcelable$Creator` `@@s2.c.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ls2/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4562a0.  v0:= new `s2.c$a`;
  #L4562a4.  call `<init>`(v0) @signature `Ls2/c$a;.<init>:()V` @kind direct;
  #L4562aa.  `@@s2.c.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L4562ae.  return @kind void;
}
procedure `void` `<init>`(`s2.c` v4 @kind this, `android.os.Parcel` v5 @kind object) @signature `Ls2/c;.<init>:(Landroid/os/Parcel;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4562c0.  v0:= "CHAP" @kind object;
  #L4562c4.  call `<init>`(v4, v0) @signature `Ls2/i;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4562ca.  call temp:= `readString`(v5) @signature `Landroid/os/Parcel;.readString:()Ljava/lang/String;` @kind virtual;
  #L4562d0.  v0:= temp @kind object;
  #L4562d2.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4562d8.  v0:= temp @kind object;
  #L4562da.  v0:= (`java.lang.String`) v0 @kind object;
  #L4562de.  v4.`s2.c.p` @type ^`java.lang.String` := v0 @kind object;
  #L4562e2.  call temp:= `readInt`(v5) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L4562e8.  v0:= temp;
  #L4562ea.  v4.`s2.c.q` @type ^`int` := v0;
  #L4562ee.  call temp:= `readInt`(v5) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L4562f4.  v0:= temp;
  #L4562f6.  v4.`s2.c.r` @type ^`int` := v0;
  #L4562fa.  call temp:= `readLong`(v5) @signature `Landroid/os/Parcel;.readLong:()J` @kind virtual;
  #L456300.  v0:= temp @kind wide;
  #L456302.  v4.`s2.c.s` @type ^`long` := v0 @kind wide;
  #L456306.  call temp:= `readLong`(v5) @signature `Landroid/os/Parcel;.readLong:()J` @kind virtual;
  #L45630c.  v0:= temp @kind wide;
  #L45630e.  v4.`s2.c.t` @type ^`long` := v0 @kind wide;
  #L456312.  call temp:= `readInt`(v5) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L456318.  v0:= temp;
  #L45631a.  v1:= new `s2.i`[v0];
  #L45631e.  v4.`s2.c.u` @type ^`s2.i`[] := v1 @kind object;
  #L456322.  v1:= 0I;
  #L456324.  if v1 >= v0 then goto L45634e;
  #L456328.  v2:= v4.`s2.c.u` @type ^`s2.i`[] @kind object;
  #L45632c.  v3:= constclass @type ^`s2.i` @kind object;
  #L456330.  call temp:= `getClassLoader`(v3) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L456336.  v3:= temp @kind object;
  #L456338.  call temp:= `readParcelable`(v5, v3) @signature `Landroid/os/Parcel;.readParcelable:(Ljava/lang/ClassLoader;)Landroid/os/Parcelable;` @kind virtual;
  #L45633e.  v3:= temp @kind object;
  #L456340.  v3:= (`s2.i`) v3 @kind object;
  #L456344.  v2[v1]:= v3 @kind object;
  #L456348.  v1:= v1 + 1;
  #L45634c.  goto L456324;
  #L45634e.  return @kind void;
}
procedure `void` `<init>`(`s2.c` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `long` v5 , `long` v7 , `s2.i`[] v9 @kind object) @signature `Ls2/c;.<init>:(Ljava/lang/String;IIJJ[Ls2/i;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L456360.  v0:= "CHAP" @kind object;
  #L456364.  call `<init>`(v1, v0) @signature `Ls2/i;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45636a.  v1.`s2.c.p` @type ^`java.lang.String` := v2 @kind object;
  #L45636e.  v1.`s2.c.q` @type ^`int` := v3;
  #L456372.  v1.`s2.c.r` @type ^`int` := v4;
  #L456376.  v1.`s2.c.s` @type ^`long` := v5 @kind wide;
  #L45637a.  v1.`s2.c.t` @type ^`long` := v7 @kind wide;
  #L45637e.  v1.`s2.c.u` @type ^`s2.i`[] := v9 @kind object;
  #L456382.  return @kind void;
}
procedure `int` `describeContents`(`s2.c` v1 @kind this) @signature `Ls2/c;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456234.  v0:= 0I;
  #L456236.  return v0;
}
procedure `boolean` `equals`(`s2.c` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Ls2/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L456198.  v0:= 1I;
  #L45619a.  if v7 != v8 then goto L4561a0;
  #L45619e.  return v0;
  #L4561a0.  v1:= 0I;
  #L4561a2.  if v8 == 0 then goto L456222;
  #L4561a6.  v2:= constclass @type ^`s2.c` @kind object;
  #L4561aa.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4561b0.  v3:= temp @kind object;
  #L4561b2.  if v2 == v3 then goto L4561b8;
  #L4561b6.  goto L456222;
  #L4561b8.  v8:= (`s2.c`) v8 @kind object;
  #L4561bc.  v2:= v7.`s2.c.q` @type ^`int`;
  #L4561c0.  v3:= v8.`s2.c.q` @type ^`int`;
  #L4561c4.  if v2 != v3 then goto L45621e;
  #L4561c8.  v2:= v7.`s2.c.r` @type ^`int`;
  #L4561cc.  v3:= v8.`s2.c.r` @type ^`int`;
  #L4561d0.  if v2 != v3 then goto L45621e;
  #L4561d4.  v2:= v7.`s2.c.s` @type ^`long` @kind wide;
  #L4561d8.  v4:= v8.`s2.c.s` @type ^`long` @kind wide;
  #L4561dc.  v6:= lcmp(v2, v4);
  #L4561e0.  if v6 != 0 then goto L45621e;
  #L4561e4.  v2:= v7.`s2.c.t` @type ^`long` @kind wide;
  #L4561e8.  v4:= v8.`s2.c.t` @type ^`long` @kind wide;
  #L4561ec.  v6:= lcmp(v2, v4);
  #L4561f0.  if v6 != 0 then goto L45621e;
  #L4561f4.  v2:= v7.`s2.c.p` @type ^`java.lang.String` @kind object;
  #L4561f8.  v3:= v8.`s2.c.p` @type ^`java.lang.String` @kind object;
  #L4561fc.  call temp:= `c`(v2, v3) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L456202.  v2:= temp;
  #L456204.  if v2 == 0 then goto L45621e;
  #L456208.  v2:= v7.`s2.c.u` @type ^`s2.i`[] @kind object;
  #L45620c.  v8:= v8.`s2.c.u` @type ^`s2.i`[] @kind object;
  #L456210.  call temp:= `equals`(v2, v8) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L456216.  v8:= temp;
  #L456218.  if v8 == 0 then goto L45621e;
  #L45621c.  goto L456220;
  #L45621e.  v0:= 0I;
  #L456220.  return v0;
  #L456222.  return v1;
}
procedure `int` `hashCode`(`s2.c` v4 @kind this) @signature `Ls2/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L456248.  v0:= v4.`s2.c.q` @type ^`int`;
  #L45624c.  v1:= 527I;
  #L456250.  v1:= v1 + v0 @kind int;
  #L456252.  v1:= v1 * 31;
  #L456256.  v0:= v4.`s2.c.r` @type ^`int`;
  #L45625a.  v1:= v1 + v0 @kind int;
  #L45625c.  v1:= v1 * 31;
  #L456260.  v2:= v4.`s2.c.s` @type ^`long` @kind wide;
  #L456264.  v0:= (`int`) v2 @kind l2i;
  #L456266.  v1:= v1 + v0 @kind int;
  #L456268.  v1:= v1 * 31;
  #L45626c.  v2:= v4.`s2.c.t` @type ^`long` @kind wide;
  #L456270.  v0:= (`int`) v2 @kind l2i;
  #L456272.  v1:= v1 + v0 @kind int;
  #L456274.  v1:= v1 * 31;
  #L456278.  v0:= v4.`s2.c.p` @type ^`java.lang.String` @kind object;
  #L45627c.  if v0 == 0 then goto L45628a;
  #L456280.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L456286.  v0:= temp;
  #L456288.  goto L45628c;
  #L45628a.  v0:= 0I;
  #L45628c.  v1:= v1 + v0 @kind int;
  #L45628e.  return v1;
}
procedure `void` `writeToParcel`(`s2.c` v4 @kind this, `android.os.Parcel` v5 @kind object, `int` v6 ) @signature `Ls2/c;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L456394.  v6:= v4.`s2.c.p` @type ^`java.lang.String` @kind object;
  #L456398.  call `writeString`(v5, v6) @signature `Landroid/os/Parcel;.writeString:(Ljava/lang/String;)V` @kind virtual;
  #L45639e.  v6:= v4.`s2.c.q` @type ^`int`;
  #L4563a2.  call `writeInt`(v5, v6) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L4563a8.  v6:= v4.`s2.c.r` @type ^`int`;
  #L4563ac.  call `writeInt`(v5, v6) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L4563b2.  v0:= v4.`s2.c.s` @type ^`long` @kind wide;
  #L4563b6.  call `writeLong`(v5, v0) @signature `Landroid/os/Parcel;.writeLong:(J)V` @kind virtual;
  #L4563bc.  v0:= v4.`s2.c.t` @type ^`long` @kind wide;
  #L4563c0.  call `writeLong`(v5, v0) @signature `Landroid/os/Parcel;.writeLong:(J)V` @kind virtual;
  #L4563c6.  v6:= v4.`s2.c.u` @type ^`s2.i`[] @kind object;
  #L4563ca.  v6:= length @variable v6;
  #L4563cc.  call `writeInt`(v5, v6) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L4563d2.  v6:= v4.`s2.c.u` @type ^`s2.i`[] @kind object;
  #L4563d6.  v0:= length @variable v6;
  #L4563d8.  v1:= 0I;
  #L4563da.  v2:= 0I;
  #L4563dc.  if v2 >= v0 then goto L4563f0;
  #L4563e0.  v3:= v6[v2] @kind object;
  #L4563e4.  call `writeParcelable`(v5, v3, v1) @signature `Landroid/os/Parcel;.writeParcelable:(Landroid/os/Parcelable;I)V` @kind virtual;
  #L4563ea.  v2:= v2 + 1;
  #L4563ee.  goto L4563dc;
  #L4563f0.  return @kind void;
}
