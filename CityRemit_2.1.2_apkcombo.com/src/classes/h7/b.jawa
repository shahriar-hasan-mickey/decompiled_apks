record `h7.b` @kind class @AccessFlag PUBLIC {
}
procedure `java.util.Map` `a`(`java.lang.String` v1 @kind object) @signature `Lh7/b;.a:(Ljava/lang/String;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L33f5a4.  v0:= new `org.json.JSONObject`;
  #L33f5a8.  call `<init>`(v0, v1) @signature `Lorg/json/JSONObject;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33f5ae.  call temp:= `h`(v0) @signature `Lh7/b;.h:(Lorg/json/JSONObject;)Ljava/util/Map;` @kind static;
  #L33f5b4.  v1:= temp @kind object;
  #L33f5b6.  return v1 @kind object;
  #L33f5b8.  v1:= Exception @type ^`org.json.JSONException` @kind object;
  #L33f5ba.  v0:= new `java.io.IOException`;
  #L33f5be.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L33f5c4.  throw v0;
  catch `org.json.JSONException` @[L33f5a4..L33f5b6] goto L33f5b8;
}
procedure `java.lang.Object` `b`(`java.lang.String` v1 @kind object) @signature `Lh7/b;.b:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L33f3d8.  v0:= new `org.json.JSONTokener`;
  #L33f3dc.  call `<init>`(v0, v1) @signature `Lorg/json/JSONTokener;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33f3e2.  call temp:= `nextValue`(v0) @signature `Lorg/json/JSONTokener;.nextValue:()Ljava/lang/Object;` @kind virtual;
  #L33f3e8.  v1:= temp @kind object;
  #L33f3ea.  call temp:= `f`(v1) @signature `Lh7/b;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33f3f0.  v1:= temp @kind object;
  #L33f3f2.  return v1 @kind object;
  #L33f3f4.  v1:= Exception @type ^`org.json.JSONException` @kind object;
  #L33f3f6.  v0:= new `java.io.IOException`;
  #L33f3fa.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L33f400.  throw v0;
  catch `org.json.JSONException` @[L33f3d8..L33f3f2] goto L33f3f4;
}
procedure `java.lang.String` `c`(`java.util.Map` v0 @kind object) @signature `Lh7/b;.c:(Ljava/util/Map;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L33f474.  call temp:= `d`(v0) @signature `Lh7/b;.d:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L33f47a.  v0:= temp @kind object;
  #L33f47c.  return v0 @kind object;
}
procedure `java.lang.String` `d`(`java.lang.Object` v2 @kind object) @signature `Lh7/b;.d:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L33f490.  if v2 != 0 then goto L33f49a;
  #L33f494.  v2:= "null" @kind object;
  #L33f498.  return v2 @kind object;
  #L33f49a.  v0:= instanceof @variable v2 @type ^`java.lang.String` @kind boolean;
  #L33f49e.  if v0 == 0 then goto L33f4b0;
  #L33f4a2.  v2:= (`java.lang.String`) v2 @kind object;
  #L33f4a6.  call temp:= `quote`(v2) @signature `Lorg/json/JSONObject;.quote:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L33f4ac.  v2:= temp @kind object;
  #L33f4ae.  return v2 @kind object;
  #L33f4b0.  v0:= instanceof @variable v2 @type ^`java.lang.Number` @kind boolean;
  #L33f4b4.  if v0 == 0 then goto L33f4d8;
  #L33f4b8.  v2:= (`java.lang.Number`) v2 @kind object;
  #L33f4bc.  call temp:= `numberToString`(v2) @signature `Lorg/json/JSONObject;.numberToString:(Ljava/lang/Number;)Ljava/lang/String;` @kind static;
  #L33f4c2.  v2:= temp @kind object;
  #L33f4c4.  return v2 @kind object;
  #L33f4c6.  v2:= Exception @type ^`org.json.JSONException` @kind object;
  #L33f4c8.  v0:= new `java.io.IOException`;
  #L33f4cc.  v1:= "Could not serialize number" @kind object;
  #L33f4d0.  call `<init>`(v0, v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L33f4d6.  throw v0;
  #L33f4d8.  v0:= instanceof @variable v2 @type ^`java.lang.Boolean` @kind boolean;
  #L33f4dc.  if v0 == 0 then goto L33f4fc;
  #L33f4e0.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L33f4e4.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L33f4ea.  v2:= temp;
  #L33f4ec.  if v2 == 0 then goto L33f4f6;
  #L33f4f0.  v2:= "true" @kind object;
  #L33f4f4.  goto L33f4fa;
  #L33f4f6.  v2:= "false" @kind object;
  #L33f4fa.  return v2 @kind object;
  #L33f4fc.  v0:= new `org.json.JSONStringer`;
  #L33f500.  call `<init>`(v0) @signature `Lorg/json/JSONStringer;.<init>:()V` @kind direct;
  #L33f506.  call `e`(v2, v0) @signature `Lh7/b;.e:(Ljava/lang/Object;Lorg/json/JSONStringer;)V` @kind static;
  #L33f50c.  call temp:= `toString`(v0) @signature `Lorg/json/JSONStringer;.toString:()Ljava/lang/String;` @kind virtual;
  #L33f512.  v2:= temp @kind object;
  #L33f514.  return v2 @kind object;
  #L33f516.  v2:= Exception @type ^`org.json.JSONException` @kind object;
  #L33f518.  v0:= new `java.io.IOException`;
  #L33f51c.  v1:= "Failed to serialize JSON" @kind object;
  #L33f520.  call `<init>`(v0, v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L33f526.  throw v0;
  catch `org.json.JSONException` @[L33f4b8..L33f4c4] goto L33f4c6;
  catch `org.json.JSONException` @[L33f4fc..L33f514] goto L33f516;
}
procedure `void` `e`(`java.lang.Object` v2 @kind object, `org.json.JSONStringer` v3 @kind object) @signature `Lh7/b;.e:(Ljava/lang/Object;Lorg/json/JSONStringer;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L33f644.  v0:= instanceof @variable v2 @type ^`java.util.Map` @kind boolean;
  #L33f648.  if v0 == 0 then goto L33f6a8;
  #L33f64c.  call temp:= `object`(v3) @signature `Lorg/json/JSONStringer;.object:()Lorg/json/JSONStringer;` @kind virtual;
  #L33f652.  v2:= (`java.util.Map`) v2 @kind object;
  #L33f656.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L33f65c.  v2:= temp @kind object;
  #L33f65e.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L33f664.  v2:= temp @kind object;
  #L33f666.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L33f66c.  v0:= temp;
  #L33f66e.  if v0 == 0 then goto L33f6a0;
  #L33f672.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L33f678.  v0:= temp @kind object;
  #L33f67a.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L33f67e.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L33f684.  v1:= temp @kind object;
  #L33f686.  v1:= (`java.lang.String`) v1 @kind object;
  #L33f68a.  call temp:= `key`(v3, v1) @signature `Lorg/json/JSONStringer;.key:(Ljava/lang/String;)Lorg/json/JSONStringer;` @kind virtual;
  #L33f690.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L33f696.  v0:= temp @kind object;
  #L33f698.  call `e`(v0, v3) @signature `Lh7/b;.e:(Ljava/lang/Object;Lorg/json/JSONStringer;)V` @kind static;
  #L33f69e.  goto L33f666;
  #L33f6a0.  call temp:= `endObject`(v3) @signature `Lorg/json/JSONStringer;.endObject:()Lorg/json/JSONStringer;` @kind virtual;
  #L33f6a6.  goto L33f6ec;
  #L33f6a8.  v0:= instanceof @variable v2 @type ^`java.util.Collection` @kind boolean;
  #L33f6ac.  if v0 == 0 then goto L33f6e6;
  #L33f6b0.  v2:= (`java.util.Collection`) v2 @kind object;
  #L33f6b4.  call temp:= `array`(v3) @signature `Lorg/json/JSONStringer;.array:()Lorg/json/JSONStringer;` @kind virtual;
  #L33f6ba.  call temp:= `iterator`(v2) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L33f6c0.  v2:= temp @kind object;
  #L33f6c2.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L33f6c8.  v0:= temp;
  #L33f6ca.  if v0 == 0 then goto L33f6de;
  #L33f6ce.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L33f6d4.  v0:= temp @kind object;
  #L33f6d6.  call `e`(v0, v3) @signature `Lh7/b;.e:(Ljava/lang/Object;Lorg/json/JSONStringer;)V` @kind static;
  #L33f6dc.  goto L33f6c2;
  #L33f6de.  call temp:= `endArray`(v3) @signature `Lorg/json/JSONStringer;.endArray:()Lorg/json/JSONStringer;` @kind virtual;
  #L33f6e4.  goto L33f6ec;
  #L33f6e6.  call temp:= `value`(v3, v2) @signature `Lorg/json/JSONStringer;.value:(Ljava/lang/Object;)Lorg/json/JSONStringer;` @kind virtual;
  #L33f6ec.  return @kind void;
}
procedure `java.lang.Object` `f`(`java.lang.Object` v1 @kind object) @signature `Lh7/b;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L33f424.  v0:= instanceof @variable v1 @type ^`org.json.JSONObject` @kind boolean;
  #L33f428.  if v0 == 0 then goto L33f43a;
  #L33f42c.  v1:= (`org.json.JSONObject`) v1 @kind object;
  #L33f430.  call temp:= `h`(v1) @signature `Lh7/b;.h:(Lorg/json/JSONObject;)Ljava/util/Map;` @kind static;
  #L33f436.  v1:= temp @kind object;
  #L33f438.  return v1 @kind object;
  #L33f43a.  v0:= instanceof @variable v1 @type ^`org.json.JSONArray` @kind boolean;
  #L33f43e.  if v0 == 0 then goto L33f450;
  #L33f442.  v1:= (`org.json.JSONArray`) v1 @kind object;
  #L33f446.  call temp:= `g`(v1) @signature `Lh7/b;.g:(Lorg/json/JSONArray;)Ljava/util/List;` @kind static;
  #L33f44c.  v1:= temp @kind object;
  #L33f44e.  return v1 @kind object;
  #L33f450.  v0:= `@@org.json.JSONObject.NULL` @type ^`java.lang.Object` @kind object;
  #L33f454.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33f45a.  v0:= temp;
  #L33f45c.  if v0 == 0 then goto L33f462;
  #L33f460.  v1:= 0I;
  #L33f462.  return v1 @kind object;
}
procedure `java.util.List` `g`(`org.json.JSONArray` v3 @kind object) @signature `Lh7/b;.g:(Lorg/json/JSONArray;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L33f554.  v0:= new `java.util.ArrayList`;
  #L33f558.  call temp:= `length`(v3) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L33f55e.  v1:= temp;
  #L33f560.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L33f566.  v1:= 0I;
  #L33f568.  call temp:= `length`(v3) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L33f56e.  v2:= temp;
  #L33f570.  if v1 >= v2 then goto L33f590;
  #L33f574.  call temp:= `get`(v3, v1) @signature `Lorg/json/JSONArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L33f57a.  v2:= temp @kind object;
  #L33f57c.  call temp:= `f`(v2) @signature `Lh7/b;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33f582.  v2:= temp @kind object;
  #L33f584.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L33f58a.  v1:= v1 + 1;
  #L33f58e.  goto L33f568;
  #L33f590.  return v0 @kind object;
}
procedure `java.util.Map` `h`(`org.json.JSONObject` v4 @kind object) @signature `Lh7/b;.h:(Lorg/json/JSONObject;)Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33f5e8.  v0:= new `java.util.HashMap`;
  #L33f5ec.  call temp:= `length`(v4) @signature `Lorg/json/JSONObject;.length:()I` @kind virtual;
  #L33f5f2.  v1:= temp;
  #L33f5f4.  call `<init>`(v0, v1) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L33f5fa.  call temp:= `keys`(v4) @signature `Lorg/json/JSONObject;.keys:()Ljava/util/Iterator;` @kind virtual;
  #L33f600.  v1:= temp @kind object;
  #L33f602.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L33f608.  v2:= temp;
  #L33f60a.  if v2 == 0 then goto L33f632;
  #L33f60e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L33f614.  v2:= temp @kind object;
  #L33f616.  v2:= (`java.lang.String`) v2 @kind object;
  #L33f61a.  call temp:= `get`(v4, v2) @signature `Lorg/json/JSONObject;.get:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L33f620.  v3:= temp @kind object;
  #L33f622.  call temp:= `f`(v3) @signature `Lh7/b;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33f628.  v3:= temp @kind object;
  #L33f62a.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L33f630.  goto L33f602;
  #L33f632.  return v0 @kind object;
}
