record `h7.a` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `h7.a.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `h7.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h7.a` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lh7/a;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L33f3b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33f3be.  v0.`h7.a.a` @type ^`java.lang.String` := v1 @kind object;
  #L33f3c2.  v0.`h7.a.b` @type ^`java.util.Map` := v2 @kind object;
  #L33f3c6.  return @kind void;
}
procedure `h7.a` `c`(`java.lang.String` v2 @kind object) @signature `Lh7/a;.c:(Ljava/lang/String;)Lh7/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L33f304.  v0:= "gauth|" @kind object;
  #L33f308.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L33f30e.  v0:= temp;
  #L33f310.  if v0 != 0 then goto L33f318;
  #L33f314.  v2:= 0I;
  #L33f316.  return v2 @kind object;
  #L33f318.  v0:= 6I;
  #L33f31a.  call temp:= `substring`(v2, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L33f320.  v2:= temp @kind object;
  #L33f322.  call temp:= `a`(v2) @signature `Lh7/b;.a:(Ljava/lang/String;)Ljava/util/Map;` @kind static;
  #L33f328.  v2:= temp @kind object;
  #L33f32a.  v0:= "token" @kind object;
  #L33f32e.  call temp:= `get`(v2, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L33f334.  v0:= temp @kind object;
  #L33f336.  v0:= (`java.lang.String`) v0 @kind object;
  #L33f33a.  v1:= "auth" @kind object;
  #L33f33e.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L33f344.  v2:= temp @kind object;
  #L33f346.  v2:= (`java.util.Map`) v2 @kind object;
  #L33f34a.  v1:= new `h7.a`;
  #L33f34e.  call `<init>`(v1, v0, v2) @signature `Lh7/a;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @kind direct;
  #L33f354.  return v1 @kind object;
  #L33f356.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L33f358.  v0:= new `java.lang.RuntimeException`;
  #L33f35c.  v1:= "Failed to parse gauth token" @kind object;
  #L33f360.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L33f366.  throw v0;
  catch `java.io.IOException` @[L33f322..L33f354] goto L33f356;
}
procedure `java.util.Map` `a`(`h7.a` v1 @kind this) @signature `Lh7/a;.a:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33f3a0.  v0:= v1.`h7.a.b` @type ^`java.util.Map` @kind object;
  #L33f3a4.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`h7.a` v1 @kind this) @signature `Lh7/a;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33f388.  v0:= v1.`h7.a.a` @type ^`java.lang.String` @kind object;
  #L33f38c.  return v0 @kind object;
}
