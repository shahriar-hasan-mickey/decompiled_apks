record `j3.a$a` @kind class @AccessFlag FINAL {
  `s3.z` `j3.a$a.a` @AccessFlag PRIVATE_FINAL;
  `int`[] `j3.a$a.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `j3.a$a.c` @AccessFlag PRIVATE;
  `int` `j3.a$a.d` @AccessFlag PRIVATE;
  `int` `j3.a$a.e` @AccessFlag PRIVATE;
  `int` `j3.a$a.f` @AccessFlag PRIVATE;
  `int` `j3.a$a.g` @AccessFlag PRIVATE;
  `int` `j3.a$a.h` @AccessFlag PRIVATE;
  `int` `j3.a$a.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`j3.a$a` v1 @kind this) @signature `Lj3/a$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3934c0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3934c6.  v0:= new `s3.z`;
  #L3934ca.  call `<init>`(v0) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L3934d0.  v1.`j3.a$a.a` @type ^`s3.z` := v0 @kind object;
  #L3934d4.  v0:= 256I;
  #L3934d8.  v0:= new `int`[v0];
  #L3934dc.  v1.`j3.a$a.b` @type ^`int`[] := v0 @kind object;
  #L3934e0.  return @kind void;
}
procedure `void` `a`(`j3.a$a` v0 @kind object, `s3.z` v1 @kind object, `int` v2 ) @signature `Lj3/a$a;.a:(Lj3/a$a;Ls3/z;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3934f4.  call `g`(v0, v1, v2) @signature `Lj3/a$a;.g:(Ls3/z;I)V` @kind direct;
  #L3934fa.  return @kind void;
}
procedure `void` `b`(`j3.a$a` v0 @kind object, `s3.z` v1 @kind object, `int` v2 ) @signature `Lj3/a$a;.b:(Lj3/a$a;Ls3/z;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L39350c.  call `e`(v0, v1, v2) @signature `Lj3/a$a;.e:(Ls3/z;I)V` @kind direct;
  #L393512.  return @kind void;
}
procedure `void` `c`(`j3.a$a` v0 @kind object, `s3.z` v1 @kind object, `int` v2 ) @signature `Lj3/a$a;.c:(Lj3/a$a;Ls3/z;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L393524.  call `f`(v0, v1, v2) @signature `Lj3/a$a;.f:(Ls3/z;I)V` @kind direct;
  #L39352a.  return @kind void;
}
procedure `void` `e`(`j3.a$a` v3 @kind this, `s3.z` v4 @kind object, `int` v5 ) @signature `Lj3/a$a;.e:(Ls3/z;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L39353c.  v0:= 4I;
  #L39353e.  if v5 >= v0 then goto L393544;
  #L393542.  return @kind void;
  #L393544.  v1:= 3I;
  #L393546.  call `P`(v4, v1) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L39354c.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L393552.  v1:= temp;
  #L393554.  v1:= v1 ^& 128;
  #L393558.  if v1 == 0 then goto L393560;
  #L39355c.  v1:= 1I;
  #L39355e.  goto L393562;
  #L393560.  v1:= 0I;
  #L393562.  v5:= v5 + -4;
  #L393566.  if v1 == 0 then goto L3935a8;
  #L39356a.  v1:= 7I;
  #L39356c.  if v5 >= v1 then goto L393572;
  #L393570.  return @kind void;
  #L393572.  call temp:= `F`(v4) @signature `Ls3/z;.F:()I` @kind virtual;
  #L393578.  v1:= temp;
  #L39357a.  if v1 >= v0 then goto L393580;
  #L39357e.  return @kind void;
  #L393580.  call temp:= `I`(v4) @signature `Ls3/z;.I:()I` @kind virtual;
  #L393586.  v2:= temp;
  #L393588.  v3.`j3.a$a.h` @type ^`int` := v2;
  #L39358c.  call temp:= `I`(v4) @signature `Ls3/z;.I:()I` @kind virtual;
  #L393592.  v2:= temp;
  #L393594.  v3.`j3.a$a.i` @type ^`int` := v2;
  #L393598.  v2:= v3.`j3.a$a.a` @type ^`s3.z` @kind object;
  #L39359c.  v1:= v1 - v0 @kind int;
  #L39359e.  call `K`(v2, v1) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L3935a4.  v5:= v5 + -7;
  #L3935a8.  v0:= v3.`j3.a$a.a` @type ^`s3.z` @kind object;
  #L3935ac.  call temp:= `e`(v0) @signature `Ls3/z;.e:()I` @kind virtual;
  #L3935b2.  v0:= temp;
  #L3935b4.  v1:= v3.`j3.a$a.a` @type ^`s3.z` @kind object;
  #L3935b8.  call temp:= `f`(v1) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3935be.  v1:= temp;
  #L3935c0.  if v0 >= v1 then goto L3935f0;
  #L3935c4.  if v5 <= 0 then goto L3935f0;
  #L3935c8.  v1:= v1 - v0 @kind int;
  #L3935ca.  call temp:= `min`(v5, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3935d0.  v5:= temp;
  #L3935d2.  v1:= v3.`j3.a$a.a` @type ^`s3.z` @kind object;
  #L3935d6.  call temp:= `d`(v1) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3935dc.  v1:= temp @kind object;
  #L3935de.  call `j`(v4, v1, v0, v5) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L3935e4.  v4:= v3.`j3.a$a.a` @type ^`s3.z` @kind object;
  #L3935e8.  v0:= v0 + v5 @kind int;
  #L3935ea.  call `O`(v4, v0) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3935f0.  return @kind void;
}
procedure `void` `f`(`j3.a$a` v1 @kind this, `s3.z` v2 @kind object, `int` v3 ) @signature `Lj3/a$a;.f:(Ls3/z;I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L393604.  v0:= 19I;
  #L393608.  if v3 >= v0 then goto L39360e;
  #L39360c.  return @kind void;
  #L39360e.  call temp:= `I`(v2) @signature `Ls3/z;.I:()I` @kind virtual;
  #L393614.  v3:= temp;
  #L393616.  v1.`j3.a$a.d` @type ^`int` := v3;
  #L39361a.  call temp:= `I`(v2) @signature `Ls3/z;.I:()I` @kind virtual;
  #L393620.  v3:= temp;
  #L393622.  v1.`j3.a$a.e` @type ^`int` := v3;
  #L393626.  v3:= 11I;
  #L39362a.  call `P`(v2, v3) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L393630.  call temp:= `I`(v2) @signature `Ls3/z;.I:()I` @kind virtual;
  #L393636.  v3:= temp;
  #L393638.  v1.`j3.a$a.f` @type ^`int` := v3;
  #L39363c.  call temp:= `I`(v2) @signature `Ls3/z;.I:()I` @kind virtual;
  #L393642.  v2:= temp;
  #L393644.  v1.`j3.a$a.g` @type ^`int` := v2;
  #L393648.  return @kind void;
}
procedure `void` `g`(`j3.a$a` v17 @kind this, `s3.z` v18 @kind object, `int` v19 ) @signature `Lj3/a$a;.g:(Ls3/z;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L39365c.  v0:= v17 @kind object;
  #L393660.  v1:= v19 %% 5;
  #L393664.  v2:= 2I;
  #L393666.  if v1 == v2 then goto L39366c;
  #L39366a.  return @kind void;
  #L39366c.  v1:= v18 @kind object;
  #L393670.  call `P`(v1, v2) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L393676.  v2:= v0.`j3.a$a.b` @type ^`int`[] @kind object;
  #L39367a.  v3:= 0I;
  #L39367c.  call `fill`(v2, v3) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L393682.  v2:= v19 / 5;
  #L393686.  v4:= 0I;
  #L393688.  if v4 >= v2 then goto L39374e;
  #L39368c.  call temp:= `C`(v18) @signature `Ls3/z;.C:()I` @kind virtual;
  #L393692.  v5:= temp;
  #L393694.  call temp:= `C`(v18) @signature `Ls3/z;.C:()I` @kind virtual;
  #L39369a.  v6:= temp;
  #L39369c.  call temp:= `C`(v18) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3936a2.  v7:= temp;
  #L3936a4.  call temp:= `C`(v18) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3936aa.  v8:= temp;
  #L3936ac.  call temp:= `C`(v18) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3936b2.  v9:= temp;
  #L3936b4.  v10:= (`double`) v6 @kind i2d;
  #L3936b6.  v12:= 1.402D;
  #L3936c0.  v7:= v7 + -128;
  #L3936c4.  v6:= (`double`) v7 @kind i2d;
  #L3936c6.  v12:= v12 * v6 @kind double;
  #L3936ca.  v12:= v12 + v10 @kind double;
  #L3936cc.  v12:= (`int`) v12 @kind d2i;
  #L3936ce.  v13:= 0.34414D;
  #L3936d8.  v8:= v8 + -128;
  #L3936dc.  v19:= v4;
  #L3936e0.  v3:= (`double`) v8 @kind i2d;
  #L3936e2.  v13:= v13 * v3 @kind double;
  #L3936e6.  v13:= v10 - v13 @kind double;
  #L3936ea.  v15:= 0.71414D;
  #L3936f4.  v6:= v6 * v15 @kind double;
  #L3936f8.  v13:= v13 - v6 @kind double;
  #L3936fa.  v6:= (`int`) v13 @kind d2i;
  #L3936fc.  v7:= 1.772D;
  #L393706.  v3:= v3 * v7 @kind double;
  #L39370a.  v10:= v10 + v3 @kind double;
  #L39370c.  v3:= (`int`) v10 @kind d2i;
  #L39370e.  v4:= v0.`j3.a$a.b` @type ^`int`[] @kind object;
  #L393712.  v7:= v9 ^< 24;
  #L393716.  v8:= 255I;
  #L39371a.  v9:= 0I;
  #L39371c.  call temp:= `q`(v12, v9, v8) @signature `Ls3/l0;.q:(III)I` @kind static;
  #L393722.  v10:= temp;
  #L393724.  v10:= v10 ^< 16;
  #L393728.  v7:= v7 ^| v10 @kind int;
  #L39372a.  call temp:= `q`(v6, v9, v8) @signature `Ls3/l0;.q:(III)I` @kind static;
  #L393730.  v6:= temp;
  #L393732.  v6:= v6 ^< 8;
  #L393736.  v6:= v6 ^| v7 @kind int;
  #L393738.  call temp:= `q`(v3, v9, v8) @signature `Ls3/l0;.q:(III)I` @kind static;
  #L39373e.  v3:= temp;
  #L393740.  v3:= v3 ^| v6 @kind int;
  #L393742.  v4[v5]:= v3;
  #L393746.  v4:= v19 + 1;
  #L39374a.  v3:= 0I;
  #L39374c.  goto L393688;
  #L39374e.  v1:= 1I;
  #L393750.  v0.`j3.a$a.c` @type ^`boolean` := v1 @kind boolean;
  #L393754.  return @kind void;
}
procedure `g3.b` `d`(`j3.a$a` v7 @kind this) @signature `Lj3/a$a;.d:()Lg3/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L393318.  v0:= v7.`j3.a$a.d` @type ^`int`;
  #L39331c.  if v0 == 0 then goto L3934ac;
  #L393320.  v0:= v7.`j3.a$a.e` @type ^`int`;
  #L393324.  if v0 == 0 then goto L3934ac;
  #L393328.  v0:= v7.`j3.a$a.h` @type ^`int`;
  #L39332c.  if v0 == 0 then goto L3934ac;
  #L393330.  v0:= v7.`j3.a$a.i` @type ^`int`;
  #L393334.  if v0 == 0 then goto L3934ac;
  #L393338.  v0:= v7.`j3.a$a.a` @type ^`s3.z` @kind object;
  #L39333c.  call temp:= `f`(v0) @signature `Ls3/z;.f:()I` @kind virtual;
  #L393342.  v0:= temp;
  #L393344.  if v0 == 0 then goto L3934ac;
  #L393348.  v0:= v7.`j3.a$a.a` @type ^`s3.z` @kind object;
  #L39334c.  call temp:= `e`(v0) @signature `Ls3/z;.e:()I` @kind virtual;
  #L393352.  v0:= temp;
  #L393354.  v1:= v7.`j3.a$a.a` @type ^`s3.z` @kind object;
  #L393358.  call temp:= `f`(v1) @signature `Ls3/z;.f:()I` @kind virtual;
  #L39335e.  v1:= temp;
  #L393360.  if v0 != v1 then goto L3934ac;
  #L393364.  v0:= v7.`j3.a$a.c` @type ^`boolean` @kind boolean;
  #L393368.  if v0 != 0 then goto L393370;
  #L39336c.  goto L3934ac;
  #L393370.  v0:= v7.`j3.a$a.a` @type ^`s3.z` @kind object;
  #L393374.  v1:= 0I;
  #L393376.  call `O`(v0, v1) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L39337c.  v0:= v7.`j3.a$a.h` @type ^`int`;
  #L393380.  v2:= v7.`j3.a$a.i` @type ^`int`;
  #L393384.  v0:= v0 * v2 @kind int;
  #L393388.  v2:= new `int`[v0];
  #L39338c.  v3:= 0I;
  #L39338e.  if v3 >= v0 then goto L393414;
  #L393392.  v4:= v7.`j3.a$a.a` @type ^`s3.z` @kind object;
  #L393396.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L39339c.  v4:= temp;
  #L39339e.  if v4 == 0 then goto L3933b6;
  #L3933a2.  v5:= v3 + 1;
  #L3933a6.  v6:= v7.`j3.a$a.b` @type ^`int`[] @kind object;
  #L3933aa.  v4:= v6[v4];
  #L3933ae.  v2[v3]:= v4;
  #L3933b2.  v3:= v5;
  #L3933b4.  goto L39338e;
  #L3933b6.  v4:= v7.`j3.a$a.a` @type ^`s3.z` @kind object;
  #L3933ba.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3933c0.  v4:= temp;
  #L3933c2.  if v4 == 0 then goto L39338e;
  #L3933c6.  v5:= v4 ^& 64;
  #L3933ca.  if v5 != 0 then goto L3933d4;
  #L3933ce.  v5:= v4 ^& 63;
  #L3933d2.  goto L3933ea;
  #L3933d4.  v5:= v4 ^& 63;
  #L3933d8.  v5:= v5 ^< 8;
  #L3933dc.  v6:= v7.`j3.a$a.a` @type ^`s3.z` @kind object;
  #L3933e0.  call temp:= `C`(v6) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3933e6.  v6:= temp;
  #L3933e8.  v5:= v5 ^| v6 @kind int;
  #L3933ea.  v4:= v4 ^& 128;
  #L3933ee.  if v4 != 0 then goto L3933f6;
  #L3933f2.  v4:= 0I;
  #L3933f4.  goto L39340a;
  #L3933f6.  v4:= v7.`j3.a$a.b` @type ^`int`[] @kind object;
  #L3933fa.  v6:= v7.`j3.a$a.a` @type ^`s3.z` @kind object;
  #L3933fe.  call temp:= `C`(v6) @signature `Ls3/z;.C:()I` @kind virtual;
  #L393404.  v6:= temp;
  #L393406.  v4:= v4[v6];
  #L39340a.  v5:= v5 + v3 @kind int;
  #L39340c.  call `fill`(v2, v3, v5, v4) @signature `Ljava/util/Arrays;.fill:([IIII)V` @kind static;
  #L393412.  goto L3933b2;
  #L393414.  v0:= v7.`j3.a$a.h` @type ^`int`;
  #L393418.  v3:= v7.`j3.a$a.i` @type ^`int`;
  #L39341c.  v4:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L393420.  call temp:= `createBitmap`(v2, v0, v3, v4) @signature `Landroid/graphics/Bitmap;.createBitmap:([IIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L393426.  v0:= temp @kind object;
  #L393428.  v2:= new `g3.b$b`;
  #L39342c.  call `<init>`(v2) @signature `Lg3/b$b;.<init>:()V` @kind direct;
  #L393432.  call temp:= `f`(v2, v0) @signature `Lg3/b$b;.f:(Landroid/graphics/Bitmap;)Lg3/b$b;` @kind virtual;
  #L393438.  v0:= temp @kind object;
  #L39343a.  v2:= v7.`j3.a$a.f` @type ^`int`;
  #L39343e.  v2:= (`float`) v2 @kind i2f;
  #L393440.  v3:= v7.`j3.a$a.d` @type ^`int`;
  #L393444.  v3:= (`float`) v3 @kind i2f;
  #L393446.  v2:= v2 / v3 @kind float;
  #L393448.  call temp:= `k`(v0, v2) @signature `Lg3/b$b;.k:(F)Lg3/b$b;` @kind virtual;
  #L39344e.  v0:= temp @kind object;
  #L393450.  call temp:= `l`(v0, v1) @signature `Lg3/b$b;.l:(I)Lg3/b$b;` @kind virtual;
  #L393456.  v0:= temp @kind object;
  #L393458.  v2:= v7.`j3.a$a.g` @type ^`int`;
  #L39345c.  v2:= (`float`) v2 @kind i2f;
  #L39345e.  v3:= v7.`j3.a$a.e` @type ^`int`;
  #L393462.  v3:= (`float`) v3 @kind i2f;
  #L393464.  v2:= v2 / v3 @kind float;
  #L393466.  call temp:= `h`(v0, v2, v1) @signature `Lg3/b$b;.h:(FI)Lg3/b$b;` @kind virtual;
  #L39346c.  v0:= temp @kind object;
  #L39346e.  call temp:= `i`(v0, v1) @signature `Lg3/b$b;.i:(I)Lg3/b$b;` @kind virtual;
  #L393474.  v0:= temp @kind object;
  #L393476.  v1:= v7.`j3.a$a.h` @type ^`int`;
  #L39347a.  v1:= (`float`) v1 @kind i2f;
  #L39347c.  v2:= v7.`j3.a$a.d` @type ^`int`;
  #L393480.  v2:= (`float`) v2 @kind i2f;
  #L393482.  v1:= v1 / v2 @kind float;
  #L393484.  call temp:= `n`(v0, v1) @signature `Lg3/b$b;.n:(F)Lg3/b$b;` @kind virtual;
  #L39348a.  v0:= temp @kind object;
  #L39348c.  v1:= v7.`j3.a$a.i` @type ^`int`;
  #L393490.  v1:= (`float`) v1 @kind i2f;
  #L393492.  v2:= v7.`j3.a$a.e` @type ^`int`;
  #L393496.  v2:= (`float`) v2 @kind i2f;
  #L393498.  v1:= v1 / v2 @kind float;
  #L39349a.  call temp:= `g`(v0, v1) @signature `Lg3/b$b;.g:(F)Lg3/b$b;` @kind virtual;
  #L3934a0.  v0:= temp @kind object;
  #L3934a2.  call temp:= `a`(v0) @signature `Lg3/b$b;.a:()Lg3/b;` @kind virtual;
  #L3934a8.  v0:= temp @kind object;
  #L3934aa.  return v0 @kind object;
  #L3934ac.  v0:= 0I;
  #L3934ae.  return v0 @kind object;
}
procedure `void` `h`(`j3.a$a` v2 @kind this) @signature `Lj3/a$a;.h:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L393768.  v0:= 0I;
  #L39376a.  v2.`j3.a$a.d` @type ^`int` := v0;
  #L39376e.  v2.`j3.a$a.e` @type ^`int` := v0;
  #L393772.  v2.`j3.a$a.f` @type ^`int` := v0;
  #L393776.  v2.`j3.a$a.g` @type ^`int` := v0;
  #L39377a.  v2.`j3.a$a.h` @type ^`int` := v0;
  #L39377e.  v2.`j3.a$a.i` @type ^`int` := v0;
  #L393782.  v1:= v2.`j3.a$a.a` @type ^`s3.z` @kind object;
  #L393786.  call `K`(v1, v0) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L39378c.  v2.`j3.a$a.c` @type ^`boolean` := v0 @kind boolean;
  #L393790.  return @kind void;
}
