record `uc.d` @kind class @AccessFlag PUBLIC_FINAL extends `yc.h` @kind interface, `java.lang.Comparable` @kind interface, `java.io.Serializable` @kind interface {
  `long` `uc.d.o` @AccessFlag PRIVATE_FINAL;
  `int` `uc.d.p` @AccessFlag PRIVATE_FINAL;
}
global `uc.d` `@@uc.d.q` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Luc/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47d9e4.  v0:= new `uc.d`;
  #L47d9e8.  v1:= 0L;
  #L47d9ec.  v3:= 0I;
  #L47d9ee.  call `<init>`(v0, v1, v3) @signature `Luc/d;.<init>:(JI)V` @kind direct;
  #L47d9f4.  `@@uc.d.q` @type ^`uc.d` := v0 @kind object;
  #L47d9f8.  v0:= 1000000000L;
  #L47d9fe.  call temp:= `valueOf`(v0) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L47da04.  v0:= "([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?" @kind object;
  #L47da08.  v1:= 2I;
  #L47da0a.  call temp:= `compile`(v0, v1) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;` @kind static;
  #L47da10.  return @kind void;
}
procedure `void` `<init>`(`uc.d` v0 @kind this, `long` v1 , `int` v3 ) @signature `Luc/d;.<init>:(JI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L47da24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47da2a.  v0.`uc.d.o` @type ^`long` := v1 @kind wide;
  #L47da2e.  v0.`uc.d.p` @type ^`int` := v3;
  #L47da32.  return @kind void;
}
procedure `uc.d` `e`(`long` v5 , `int` v7 ) @signature `Luc/d;.e:(JI)Luc/d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47d8ec.  v0:= (`long`) v7 @kind i2l;
  #L47d8ee.  v0:= v0 ^| v5 @kind long;
  #L47d8f0.  v2:= 0L;
  #L47d8f4.  v4:= lcmp(v0, v2);
  #L47d8f8.  if v4 != 0 then goto L47d902;
  #L47d8fc.  v5:= `@@uc.d.q` @type ^`uc.d` @kind object;
  #L47d900.  return v5 @kind object;
  #L47d902.  v0:= new `uc.d`;
  #L47d906.  call `<init>`(v0, v5, v7) @signature `Luc/d;.<init>:(JI)V` @kind direct;
  #L47d90c.  return v0 @kind object;
}
procedure `uc.d` `i`(`long` v4 ) @signature `Luc/d;.i:(J)Luc/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47d920.  v0:= 1000000000L;
  #L47d926.  v2:= v4 / v0 @kind long;
  #L47d92a.  v4:= v4 %% v0 @kind long;
  #L47d92c.  v5:= (`int`) v4 @kind l2i;
  #L47d92e.  if v5 >= 0 then goto L47d940;
  #L47d932.  v4:= 1000000000I;
  #L47d938.  v5:= v5 + v4 @kind int;
  #L47d93a.  v0:= 1L;
  #L47d93e.  v2:= v2 - v0 @kind long;
  #L47d940.  call temp:= `e`(v2, v5) @signature `Luc/d;.e:(JI)Luc/d;` @kind static;
  #L47d946.  v4:= temp @kind object;
  #L47d948.  return v4 @kind object;
}
procedure `uc.d` `j`(`long` v1 ) @signature `Luc/d;.j:(J)Luc/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47d95c.  v0:= 0I;
  #L47d95e.  call temp:= `e`(v1, v0) @signature `Luc/d;.e:(JI)Luc/d;` @kind static;
  #L47d964.  v1:= temp @kind object;
  #L47d966.  return v1 @kind object;
}
procedure `uc.d` `k`(`long` v2 , `long` v4 ) @signature `Luc/d;.k:(JJ)Luc/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47d978.  v0:= 1000000000L;
  #L47d97e.  call temp:= `e`(v4, v0) @signature `Lxc/d;.e:(JJ)J` @kind static;
  #L47d984.  v0:= temp @kind wide;
  #L47d986.  call temp:= `k`(v2, v0) @signature `Lxc/d;.k:(JJ)J` @kind static;
  #L47d98c.  v2:= temp @kind wide;
  #L47d98e.  v0:= 1000000000I;
  #L47d994.  call temp:= `g`(v4, v0) @signature `Lxc/d;.g:(JI)I` @kind static;
  #L47d99a.  v4:= temp;
  #L47d99c.  call temp:= `e`(v2, v4) @signature `Luc/d;.e:(JI)Luc/d;` @kind static;
  #L47d9a2.  v2:= temp @kind object;
  #L47d9a4.  return v2 @kind object;
}
procedure `uc.d` `o`(`java.io.DataInput` v4 @kind object) @signature `Luc/d;.o:(Ljava/io/DataInput;)Luc/d;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47d9b8.  call temp:= `readLong`(v4) @signature `Ljava/io/DataInput;.readLong:()J` @kind interface;
  #L47d9be.  v0:= temp @kind wide;
  #L47d9c0.  call temp:= `readInt`(v4) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L47d9c6.  v4:= temp;
  #L47d9c8.  v2:= (`long`) v4 @kind i2l;
  #L47d9ca.  call temp:= `k`(v0, v2) @signature `Luc/d;.k:(JJ)Luc/d;` @kind static;
  #L47d9d0.  v4:= temp @kind object;
  #L47d9d2.  return v4 @kind object;
}
procedure `java.lang.Object` `readResolve`(`uc.d` v2 @kind this) @signature `Luc/d;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L47d73c.  v0:= new `java.io.InvalidObjectException`;
  #L47d740.  v1:= "Deserialization via serialization delegate" @kind object;
  #L47d744.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47d74a.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`uc.d` v2 @kind this) @signature `Luc/d;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L47d75c.  v0:= new `uc.n`;
  #L47d760.  v1:= 1I;
  #L47d762.  call `<init>`(v0, v1, v2) @signature `Luc/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L47d768.  return v0 @kind object;
}
procedure `yc.d` `c`(`uc.d` v5 @kind this, `yc.d` v6 @kind object) @signature `Luc/d;.c:(Lyc/d;)Lyc/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47da6c.  v0:= v5.`uc.d.o` @type ^`long` @kind wide;
  #L47da70.  v2:= 0L;
  #L47da74.  v4:= lcmp(v0, v2);
  #L47da78.  if v4 == 0 then goto L47da88;
  #L47da7c.  v2:= `@@yc.b.s` @type ^`yc.b` @kind object;
  #L47da80.  call temp:= `D`(v6, v0, v2) @signature `Lyc/d;.D:(JLyc/l;)Lyc/d;` @kind interface;
  #L47da86.  v6:= temp @kind object;
  #L47da88.  v0:= v5.`uc.d.p` @type ^`int`;
  #L47da8c.  if v0 == 0 then goto L47da9e;
  #L47da90.  v0:= (`long`) v0 @kind i2l;
  #L47da92.  v2:= `@@yc.b.p` @type ^`yc.b` @kind object;
  #L47da96.  call temp:= `D`(v6, v0, v2) @signature `Lyc/d;.D:(JLyc/l;)Lyc/d;` @kind interface;
  #L47da9c.  v6:= temp @kind object;
  #L47da9e.  return v6 @kind object;
}
procedure `int` `compareTo`(`uc.d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Luc/d;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L47d6bc.  v1:= (`uc.d`) v1 @kind object;
  #L47d6c0.  call temp:= `d`(v0, v1) @signature `Luc/d;.d:(Luc/d;)I` @kind virtual;
  #L47d6c6.  v1:= temp;
  #L47d6c8.  return v1;
}
procedure `int` `d`(`uc.d` v4 @kind this, `uc.d` v5 @kind object) @signature `Luc/d;.d:(Luc/d;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47d6dc.  v0:= v4.`uc.d.o` @type ^`long` @kind wide;
  #L47d6e0.  v2:= v5.`uc.d.o` @type ^`long` @kind wide;
  #L47d6e4.  call temp:= `b`(v0, v2) @signature `Lxc/d;.b:(JJ)I` @kind static;
  #L47d6ea.  v0:= temp;
  #L47d6ec.  if v0 == 0 then goto L47d6f2;
  #L47d6f0.  return v0;
  #L47d6f2.  v0:= v4.`uc.d.p` @type ^`int`;
  #L47d6f6.  v5:= v5.`uc.d.p` @type ^`int`;
  #L47d6fa.  v0:= v0 - v5 @kind int;
  #L47d6fc.  return v0;
}
procedure `boolean` `equals`(`uc.d` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Luc/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47d670.  v0:= 1I;
  #L47d672.  if v7 != v8 then goto L47d678;
  #L47d676.  return v0;
  #L47d678.  v1:= instanceof @variable v8 @type ^`uc.d` @kind boolean;
  #L47d67c.  v2:= 0I;
  #L47d67e.  if v1 == 0 then goto L47d6a8;
  #L47d682.  v8:= (`uc.d`) v8 @kind object;
  #L47d686.  v3:= v7.`uc.d.o` @type ^`long` @kind wide;
  #L47d68a.  v5:= v8.`uc.d.o` @type ^`long` @kind wide;
  #L47d68e.  v1:= lcmp(v3, v5);
  #L47d692.  if v1 != 0 then goto L47d6a4;
  #L47d696.  v1:= v7.`uc.d.p` @type ^`int`;
  #L47d69a.  v8:= v8.`uc.d.p` @type ^`int`;
  #L47d69e.  if v1 != v8 then goto L47d6a4;
  #L47d6a2.  goto L47d6a6;
  #L47d6a4.  v0:= 0I;
  #L47d6a6.  return v0;
  #L47d6a8.  return v2;
}
procedure `long` `h`(`uc.d` v2 @kind this) @signature `Luc/d;.h:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47d8d4.  v0:= v2.`uc.d.o` @type ^`long` @kind wide;
  #L47d8d8.  return v0 @kind wide;
}
procedure `int` `hashCode`(`uc.d` v4 @kind this) @signature `Luc/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47d710.  v0:= v4.`uc.d.o` @type ^`long` @kind wide;
  #L47d714.  v2:= 32I;
  #L47d718.  v2:= v0 ^>> v2 @kind long;
  #L47d71c.  v0:= v0 ^~ v2 @kind long;
  #L47d71e.  v1:= (`int`) v0 @kind l2i;
  #L47d720.  v0:= v4.`uc.d.p` @type ^`int`;
  #L47d724.  v0:= v0 * 51;
  #L47d728.  v1:= v1 + v0 @kind int;
  #L47d72a.  return v1;
}
procedure `void` `r`(`uc.d` v2 @kind this, `java.io.DataOutput` v3 @kind object) @signature `Luc/d;.r:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L47da44.  v0:= v2.`uc.d.o` @type ^`long` @kind wide;
  #L47da48.  call `writeLong`(v3, v0) @signature `Ljava/io/DataOutput;.writeLong:(J)V` @kind interface;
  #L47da4e.  v0:= v2.`uc.d.p` @type ^`int`;
  #L47da52.  call `writeInt`(v3, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L47da58.  return @kind void;
}
procedure `java.lang.String` `toString`(`uc.d` v8 @kind this) @signature `Luc/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L47d77c.  v0:= `@@uc.d.q` @type ^`uc.d` @kind object;
  #L47d780.  if v8 != v0 then goto L47d78a;
  #L47d784.  v0:= "PT0S" @kind object;
  #L47d788.  return v0 @kind object;
  #L47d78a.  v0:= v8.`uc.d.o` @type ^`long` @kind wide;
  #L47d78e.  v2:= 3600L;
  #L47d792.  v4:= v0 / v2 @kind long;
  #L47d796.  v2:= v0 %% v2 @kind long;
  #L47d79a.  v6:= 60L;
  #L47d79e.  v2:= v2 / v6 @kind long;
  #L47d7a0.  v3:= (`int`) v2 @kind l2i;
  #L47d7a2.  v0:= v0 %% v6 @kind long;
  #L47d7a4.  v1:= (`int`) v0 @kind l2i;
  #L47d7a6.  v0:= new `java.lang.StringBuilder`;
  #L47d7aa.  v2:= 24I;
  #L47d7ae.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L47d7b4.  v2:= "PT" @kind object;
  #L47d7b8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47d7be.  v6:= 0L;
  #L47d7c2.  v2:= lcmp(v4, v6);
  #L47d7c6.  if v2 == 0 then goto L47d7da;
  #L47d7ca.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L47d7d0.  v2:= 72I;
  #L47d7d4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L47d7da.  if v3 == 0 then goto L47d7ee;
  #L47d7de.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47d7e4.  v2:= 77I;
  #L47d7e8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L47d7ee.  if v1 != 0 then goto L47d812;
  #L47d7f2.  v2:= v8.`uc.d.p` @type ^`int`;
  #L47d7f6.  if v2 != 0 then goto L47d812;
  #L47d7fa.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L47d800.  v2:= temp;
  #L47d802.  v3:= 2I;
  #L47d804.  if v2 <= v3 then goto L47d812;
  #L47d808.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47d80e.  v0:= temp @kind object;
  #L47d810.  return v0 @kind object;
  #L47d812.  if v1 >= 0 then goto L47d83c;
  #L47d816.  v2:= v8.`uc.d.p` @type ^`int`;
  #L47d81a.  if v2 <= 0 then goto L47d83c;
  #L47d81e.  v2:= -1I;
  #L47d820.  if v1 != v2 then goto L47d830;
  #L47d824.  v2:= "-0" @kind object;
  #L47d828.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47d82e.  goto L47d842;
  #L47d830.  v2:= v1 + 1;
  #L47d834.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47d83a.  goto L47d842;
  #L47d83c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47d842.  v2:= v8.`uc.d.p` @type ^`int`;
  #L47d846.  if v2 <= 0 then goto L47d8b0;
  #L47d84a.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L47d850.  v2:= temp;
  #L47d852.  if v1 >= 0 then goto L47d864;
  #L47d856.  v1:= 2000000000I;
  #L47d85c.  v3:= v8.`uc.d.p` @type ^`int`;
  #L47d860.  v1:= v1 - v3 @kind int;
  #L47d862.  goto L47d870;
  #L47d864.  v1:= v8.`uc.d.p` @type ^`int`;
  #L47d868.  v3:= 1000000000I;
  #L47d86e.  v1:= v1 + v3 @kind int;
  #L47d870.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47d876.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L47d87c.  v1:= temp;
  #L47d87e.  v1:= v1 + -1;
  #L47d882.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/StringBuilder;.charAt:(I)C` @kind virtual;
  #L47d888.  v1:= temp;
  #L47d88a.  v3:= 48I;
  #L47d88e.  if v1 != v3 then goto L47d8a6;
  #L47d892.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L47d898.  v1:= temp;
  #L47d89a.  v1:= v1 + -1;
  #L47d89e.  call `setLength`(v0, v1) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L47d8a4.  goto L47d876;
  #L47d8a6.  v1:= 46I;
  #L47d8aa.  call `setCharAt`(v0, v2, v1) @signature `Ljava/lang/StringBuilder;.setCharAt:(IC)V` @kind virtual;
  #L47d8b0.  v1:= 83I;
  #L47d8b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L47d8ba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47d8c0.  v0:= temp @kind object;
  #L47d8c2.  return v0 @kind object;
}
