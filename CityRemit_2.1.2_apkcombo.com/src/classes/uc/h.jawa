record `uc.h` @kind class @AccessFlag PUBLIC_FINAL extends `xc.c` @kind class, `yc.d` @kind interface, `yc.f` @kind interface, `java.lang.Comparable` @kind interface, `java.io.Serializable` @kind interface {
  `byte` `uc.h.o` @AccessFlag PRIVATE_FINAL;
  `byte` `uc.h.p` @AccessFlag PRIVATE_FINAL;
  `byte` `uc.h.q` @AccessFlag PRIVATE_FINAL;
  `int` `uc.h.r` @AccessFlag PRIVATE_FINAL;
}
global `uc.h` `@@uc.h.s` @AccessFlag PUBLIC_STATIC_FINAL;
global `uc.h` `@@uc.h.t` @AccessFlag PUBLIC_STATIC_FINAL;
global `uc.h`[] `@@uc.h.u` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Luc/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L481fa8.  v0:= new `uc.h$a`;
  #L481fac.  call `<init>`(v0) @signature `Luc/h$a;.<init>:()V` @kind direct;
  #L481fb2.  v0:= 24I;
  #L481fb6.  v0:= new `uc.h`[v0];
  #L481fba.  `@@uc.h.u` @type ^`uc.h`[] := v0 @kind object;
  #L481fbe.  v0:= 0I;
  #L481fc0.  v1:= 0I;
  #L481fc2.  v2:= `@@uc.h.u` @type ^`uc.h`[] @kind object;
  #L481fc6.  v3:= length @variable v2;
  #L481fc8.  if v1 >= v3 then goto L481fe0;
  #L481fcc.  v3:= new `uc.h`;
  #L481fd0.  call `<init>`(v3, v1, v0, v0, v0) @signature `Luc/h;.<init>:(IIII)V` @kind direct;
  #L481fd6.  v2[v1]:= v3 @kind object;
  #L481fda.  v1:= v1 + 1;
  #L481fde.  goto L481fc2;
  #L481fe0.  v1:= v2[v0] @kind object;
  #L481fe4.  v1:= 12I;
  #L481fe8.  v1:= v2[v1] @kind object;
  #L481fec.  v0:= v2[v0] @kind object;
  #L481ff0.  `@@uc.h.s` @type ^`uc.h` := v0 @kind object;
  #L481ff4.  v0:= new `uc.h`;
  #L481ff8.  v1:= 23I;
  #L481ffc.  v2:= 999999999I;
  #L482002.  v3:= 59I;
  #L482006.  call `<init>`(v0, v1, v3, v3, v2) @signature `Luc/h;.<init>:(IIII)V` @kind direct;
  #L48200c.  `@@uc.h.t` @type ^`uc.h` := v0 @kind object;
  #L482010.  return @kind void;
}
procedure `void` `<init>`(`uc.h` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Luc/h;.<init>:(IIII)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L482024.  call `<init>`(v0) @signature `Lxc/c;.<init>:()V` @kind direct;
  #L48202a.  v1:= (`byte`) v1 @kind i2b;
  #L48202c.  v0.`uc.h.o` @type ^`byte` := v1 @kind byte;
  #L482030.  v1:= (`byte`) v2 @kind i2b;
  #L482032.  v0.`uc.h.p` @type ^`byte` := v1 @kind byte;
  #L482036.  v1:= (`byte`) v3 @kind i2b;
  #L482038.  v0.`uc.h.q` @type ^`byte` := v1 @kind byte;
  #L48203c.  v0.`uc.h.r` @type ^`int` := v4;
  #L482040.  return @kind void;
}
procedure `uc.h` `X`(`int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Luc/h;.X:(IIII)Luc/h;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L481690.  v0:= v2 ^| v3 @kind int;
  #L481694.  v0:= v0 ^| v4 @kind int;
  #L481696.  if v0 != 0 then goto L4816a4;
  #L48169a.  v2:= `@@uc.h.u` @type ^`uc.h`[] @kind object;
  #L48169e.  v1:= v2[v1] @kind object;
  #L4816a2.  return v1 @kind object;
  #L4816a4.  v0:= new `uc.h`;
  #L4816a8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Luc/h;.<init>:(IIII)V` @kind direct;
  #L4816ae.  return v0 @kind object;
}
procedure `uc.h` `a0`(`yc.e` v3 @kind object) @signature `Luc/h;.a0:(Lyc/e;)Luc/h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4816c0.  call temp:= `c`() @signature `Lyc/j;.c:()Lyc/k;` @kind static;
  #L4816c6.  v0:= temp @kind object;
  #L4816c8.  call temp:= `j`(v3, v0) @signature `Lyc/e;.j:(Lyc/k;)Ljava/lang/Object;` @kind interface;
  #L4816ce.  v0:= temp @kind object;
  #L4816d0.  v0:= (`uc.h`) v0 @kind object;
  #L4816d4.  if v0 == 0 then goto L4816da;
  #L4816d8.  return v0 @kind object;
  #L4816da.  v0:= new `uc.b`;
  #L4816de.  v1:= new `java.lang.StringBuilder`;
  #L4816e2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4816e8.  v2:= "Unable to obtain LocalTime from TemporalAccessor: " @kind object;
  #L4816ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4816f2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4816f8.  v2:= ", type " @kind object;
  #L4816fc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L481702.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L481708.  v3:= temp @kind object;
  #L48170a.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L481710.  v3:= temp @kind object;
  #L481712.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L481718.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48171e.  v3:= temp @kind object;
  #L481720.  call `<init>`(v0, v3) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L481726.  throw v0;
}
procedure `int` `b0`(`uc.h` v4 @kind this, `yc.i` v5 @kind object) @signature `Luc/h;.b0:(Lyc/i;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L481200.  v0:= `@@uc.h$b.a` @type ^`int`[] @kind object;
  #L481204.  v1:= v5 @kind object;
  #L481206.  v1:= (`yc.a`) v1 @kind object;
  #L48120a.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L481210.  v1:= temp;
  #L481212.  v0:= v0[v1];
  #L481216.  v1:= "Field too large for an int: " @kind object;
  #L48121a.  v2:= 12I;
  #L48121e.  goto L481338;
  #L481224.  v0:= new `yc.m`;
  #L481228.  v1:= new `java.lang.StringBuilder`;
  #L48122c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L481232.  v2:= "Unsupported field: " @kind object;
  #L481236.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48123c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L481242.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L481248.  v5:= temp @kind object;
  #L48124a.  call `<init>`(v0, v5) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L481250.  throw v0;
  #L481252.  v5:= v4.`uc.h.o` @type ^`byte` @kind byte;
  #L481256.  v5:= v5 / v2 @kind int;
  #L481258.  return v5;
  #L48125a.  v5:= v4.`uc.h.o` @type ^`byte` @kind byte;
  #L48125e.  if v5 != 0 then goto L481266;
  #L481262.  v5:= 24I;
  #L481266.  return v5;
  #L481268.  v5:= v4.`uc.h.o` @type ^`byte` @kind byte;
  #L48126c.  return v5;
  #L48126e.  v5:= v4.`uc.h.o` @type ^`byte` @kind byte;
  #L481272.  v5:= v5 %% v2 @kind int;
  #L481274.  v0:= v5 %% 12;
  #L481278.  if v0 != 0 then goto L48127e;
  #L48127c.  goto L481280;
  #L48127e.  v2:= v5;
  #L481280.  return v2;
  #L481282.  v5:= v4.`uc.h.o` @type ^`byte` @kind byte;
  #L481286.  v5:= v5 %% v2 @kind int;
  #L481288.  return v5;
  #L48128a.  v5:= v4.`uc.h.o` @type ^`byte` @kind byte;
  #L48128e.  v5:= v5 * 60;
  #L481292.  v0:= v4.`uc.h.p` @type ^`byte` @kind byte;
  #L481296.  v5:= v5 + v0 @kind int;
  #L481298.  return v5;
  #L48129a.  v5:= v4.`uc.h.p` @type ^`byte` @kind byte;
  #L48129e.  return v5;
  #L4812a0.  call temp:= `u0`(v4) @signature `Luc/h;.u0:()I` @kind virtual;
  #L4812a6.  v5:= temp;
  #L4812a8.  return v5;
  #L4812aa.  v5:= v4.`uc.h.q` @type ^`byte` @kind byte;
  #L4812ae.  return v5;
  #L4812b0.  call temp:= `t0`(v4) @signature `Luc/h;.t0:()J` @kind virtual;
  #L4812b6.  v0:= temp @kind wide;
  #L4812b8.  v2:= 1000000L;
  #L4812be.  v0:= v0 / v2 @kind long;
  #L4812c0.  v5:= (`int`) v0 @kind l2i;
  #L4812c2.  return v5;
  #L4812c4.  v5:= v4.`uc.h.r` @type ^`int`;
  #L4812c8.  v0:= 1000000I;
  #L4812ce.  v5:= v5 / v0 @kind int;
  #L4812d0.  return v5;
  #L4812d2.  v0:= new `uc.b`;
  #L4812d6.  v2:= new `java.lang.StringBuilder`;
  #L4812da.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4812e0.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4812e6.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4812ec.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4812f2.  v5:= temp @kind object;
  #L4812f4.  call `<init>`(v0, v5) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4812fa.  throw v0;
  #L4812fc.  v5:= v4.`uc.h.r` @type ^`int`;
  #L481300.  v5:= v5 / 1000;
  #L481304.  return v5;
  #L481306.  v0:= new `uc.b`;
  #L48130a.  v2:= new `java.lang.StringBuilder`;
  #L48130e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L481314.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48131a.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L481320.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L481326.  v5:= temp @kind object;
  #L481328.  call `<init>`(v0, v5) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48132e.  throw v0;
  #L481330.  v5:= v4.`uc.h.r` @type ^`int`;
  #L481334.  return v5;
  #L481336.  
  #L481338.  switch v0
                  | 1 => goto L481330
                  | 2 => goto L481306
                  | 3 => goto L4812fc
                  | 4 => goto L4812d2
                  | 5 => goto L4812c4
                  | 6 => goto L4812b0
                  | 7 => goto L4812aa
                  | 8 => goto L4812a0
                  | 9 => goto L48129a
                  | 10 => goto L48128a
                  | 11 => goto L481282
                  | 12 => goto L48126e
                  | 13 => goto L481268
                  | 14 => goto L48125a
                  | 15 => goto L481252
                  | else => goto L481224;
}
procedure `uc.h` `h0`(`int` v3 , `int` v4 ) @signature `Luc/h;.h0:(II)Luc/h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L481780.  v0:= `@@yc.a.E` @type ^`yc.a` @kind object;
  #L481784.  v1:= (`long`) v3 @kind i2l;
  #L481786.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L48178c.  if v4 != 0 then goto L48179a;
  #L481790.  v4:= `@@uc.h.u` @type ^`uc.h`[] @kind object;
  #L481794.  v3:= v4[v3] @kind object;
  #L481798.  return v3 @kind object;
  #L48179a.  v0:= `@@yc.a.A` @type ^`yc.a` @kind object;
  #L48179e.  v1:= (`long`) v4 @kind i2l;
  #L4817a0.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4817a6.  v0:= new `uc.h`;
  #L4817aa.  v1:= 0I;
  #L4817ac.  call `<init>`(v0, v3, v4, v1, v1) @signature `Luc/h;.<init>:(IIII)V` @kind direct;
  #L4817b2.  return v0 @kind object;
}
procedure `uc.h` `i0`(`int` v3 , `int` v4 , `int` v5 ) @signature `Luc/h;.i0:(III)Luc/h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4817c4.  v0:= `@@yc.a.E` @type ^`yc.a` @kind object;
  #L4817c8.  v1:= (`long`) v3 @kind i2l;
  #L4817ca.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4817d0.  v0:= v4 ^| v5 @kind int;
  #L4817d4.  if v0 != 0 then goto L4817e2;
  #L4817d8.  v4:= `@@uc.h.u` @type ^`uc.h`[] @kind object;
  #L4817dc.  v3:= v4[v3] @kind object;
  #L4817e0.  return v3 @kind object;
  #L4817e2.  v0:= `@@yc.a.A` @type ^`yc.a` @kind object;
  #L4817e6.  v1:= (`long`) v4 @kind i2l;
  #L4817e8.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4817ee.  v0:= `@@yc.a.y` @type ^`yc.a` @kind object;
  #L4817f2.  v1:= (`long`) v5 @kind i2l;
  #L4817f4.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4817fa.  v0:= new `uc.h`;
  #L4817fe.  v1:= 0I;
  #L481800.  call `<init>`(v0, v3, v4, v5, v1) @signature `Luc/h;.<init>:(IIII)V` @kind direct;
  #L481806.  return v0 @kind object;
}
procedure `uc.h` `j0`(`int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Luc/h;.j0:(IIII)Luc/h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L481818.  v0:= `@@yc.a.E` @type ^`yc.a` @kind object;
  #L48181c.  v1:= (`long`) v3 @kind i2l;
  #L48181e.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L481824.  v0:= `@@yc.a.A` @type ^`yc.a` @kind object;
  #L481828.  v1:= (`long`) v4 @kind i2l;
  #L48182a.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L481830.  v0:= `@@yc.a.y` @type ^`yc.a` @kind object;
  #L481834.  v1:= (`long`) v5 @kind i2l;
  #L481836.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L48183c.  v0:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L481840.  v1:= (`long`) v6 @kind i2l;
  #L481842.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L481848.  call temp:= `X`(v3, v4, v5, v6) @signature `Luc/h;.X:(IIII)Luc/h;` @kind static;
  #L48184e.  v3:= temp @kind object;
  #L481850.  return v3 @kind object;
}
procedure `uc.h` `k0`(`long` v8 ) @signature `Luc/h;.k0:(J)Luc/h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L481864.  v0:= `@@yc.a.t` @type ^`yc.a` @kind object;
  #L481868.  call temp:= `s`(v0, v8) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L48186e.  v0:= 3600000000000L;
  #L481878.  v2:= v8 / v0 @kind long;
  #L48187c.  v3:= (`int`) v2 @kind l2i;
  #L48187e.  v4:= (`long`) v3 @kind i2l;
  #L481880.  v4:= v4 * v0 @kind long;
  #L481884.  v8:= v8 - v4 @kind long;
  #L481886.  v0:= 60000000000L;
  #L481890.  v4:= v8 / v0 @kind long;
  #L481894.  v2:= (`int`) v4 @kind l2i;
  #L481896.  v4:= (`long`) v2 @kind i2l;
  #L481898.  v4:= v4 * v0 @kind long;
  #L48189c.  v8:= v8 - v4 @kind long;
  #L48189e.  v0:= 1000000000L;
  #L4818a4.  v4:= v8 / v0 @kind long;
  #L4818a8.  v5:= (`int`) v4 @kind l2i;
  #L4818aa.  v6:= (`long`) v5 @kind i2l;
  #L4818ac.  v6:= v6 * v0 @kind long;
  #L4818b0.  v8:= v8 - v6 @kind long;
  #L4818b2.  v9:= (`int`) v8 @kind l2i;
  #L4818b4.  call temp:= `X`(v3, v2, v5, v9) @signature `Luc/h;.X:(IIII)Luc/h;` @kind static;
  #L4818ba.  v8:= temp @kind object;
  #L4818bc.  return v8 @kind object;
}
procedure `uc.h` `l0`(`long` v4 ) @signature `Luc/h;.l0:(J)Luc/h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4818d0.  v0:= `@@yc.a.z` @type ^`yc.a` @kind object;
  #L4818d4.  call temp:= `s`(v0, v4) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4818da.  v0:= 3600L;
  #L4818de.  v0:= v4 / v0 @kind long;
  #L4818e2.  v1:= (`int`) v0 @kind l2i;
  #L4818e4.  v0:= v1 * 3600;
  #L4818e8.  v2:= (`long`) v0 @kind i2l;
  #L4818ea.  v4:= v4 - v2 @kind long;
  #L4818ec.  v2:= 60L;
  #L4818f0.  v2:= v4 / v2 @kind long;
  #L4818f4.  v0:= (`int`) v2 @kind l2i;
  #L4818f6.  v2:= v0 * 60;
  #L4818fa.  v2:= (`long`) v2 @kind i2l;
  #L4818fc.  v4:= v4 - v2 @kind long;
  #L4818fe.  v5:= (`int`) v4 @kind l2i;
  #L481900.  v4:= 0I;
  #L481902.  call temp:= `X`(v1, v0, v5, v4) @signature `Luc/h;.X:(IIII)Luc/h;` @kind static;
  #L481908.  v4:= temp @kind object;
  #L48190a.  return v4 @kind object;
}
procedure `uc.h` `m0`(`long` v4 , `int` v6 ) @signature `Luc/h;.m0:(JI)Luc/h;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48191c.  v0:= `@@yc.a.z` @type ^`yc.a` @kind object;
  #L481920.  call temp:= `s`(v0, v4) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L481926.  v0:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L48192a.  v1:= (`long`) v6 @kind i2l;
  #L48192c.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L481932.  v0:= 3600L;
  #L481936.  v0:= v4 / v0 @kind long;
  #L48193a.  v1:= (`int`) v0 @kind l2i;
  #L48193c.  v0:= v1 * 3600;
  #L481940.  v2:= (`long`) v0 @kind i2l;
  #L481942.  v4:= v4 - v2 @kind long;
  #L481944.  v2:= 60L;
  #L481948.  v2:= v4 / v2 @kind long;
  #L48194c.  v0:= (`int`) v2 @kind l2i;
  #L48194e.  v2:= v0 * 60;
  #L481952.  v2:= (`long`) v2 @kind i2l;
  #L481954.  v4:= v4 - v2 @kind long;
  #L481956.  v5:= (`int`) v4 @kind l2i;
  #L481958.  call temp:= `X`(v1, v0, v5, v6) @signature `Luc/h;.X:(IIII)Luc/h;` @kind static;
  #L48195e.  v4:= temp @kind object;
  #L481960.  return v4 @kind object;
}
procedure `java.lang.Object` `readResolve`(`uc.h` v2 @kind this) @signature `Luc/h;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4814bc.  v0:= new `java.io.InvalidObjectException`;
  #L4814c0.  v1:= "Deserialization via serialization delegate" @kind object;
  #L4814c4.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4814ca.  throw v0;
}
procedure `uc.h` `s0`(`java.io.DataInput` v5 @kind object) @signature `Luc/h;.s0:(Ljava/io/DataInput;)Luc/h;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L481c24.  call temp:= `readByte`(v5) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L481c2a.  v0:= temp;
  #L481c2c.  v1:= 0I;
  #L481c2e.  if v0 >= 0 then goto L481c3a;
  #L481c32.  v0:= ~v0 @kind int;
  #L481c34.  v5:= 0I;
  #L481c36.  v2:= 0I;
  #L481c38.  goto L481c72;
  #L481c3a.  call temp:= `readByte`(v5) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L481c40.  v2:= temp;
  #L481c42.  if v2 >= 0 then goto L481c50;
  #L481c46.  v5:= ~v2 @kind int;
  #L481c48.  v2:= 0I;
  #L481c4a.  v1:= v5;
  #L481c4c.  v5:= 0I;
  #L481c4e.  goto L481c72;
  #L481c50.  call temp:= `readByte`(v5) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L481c56.  v3:= temp;
  #L481c58.  if v3 >= 0 then goto L481c62;
  #L481c5c.  v5:= ~v3 @kind int;
  #L481c5e.  v1:= v2;
  #L481c60.  goto L481c36;
  #L481c62.  call temp:= `readInt`(v5) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L481c68.  v1:= temp;
  #L481c6a.  v5:= v3;
  #L481c6c.  v4:= v2;
  #L481c6e.  v2:= v1;
  #L481c70.  v1:= v4;
  #L481c72.  call temp:= `j0`(v0, v1, v5, v2) @signature `Luc/h;.j0:(IIII)Luc/h;` @kind static;
  #L481c78.  v5:= temp @kind object;
  #L481c7a.  return v5 @kind object;
}
procedure `java.lang.Object` `writeReplace`(`uc.h` v2 @kind this) @signature `Luc/h;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4814dc.  v0:= new `uc.n`;
  #L4814e0.  v1:= 5I;
  #L4814e2.  call `<init>`(v0, v1, v2) @signature `Luc/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L4814e8.  return v0 @kind object;
}
procedure `uc.h` `A0`(`uc.h` v3 @kind this, `int` v4 ) @signature `Luc/h;.A0:(I)Luc/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L481f50.  v0:= v3.`uc.h.q` @type ^`byte` @kind byte;
  #L481f54.  if v0 != v4 then goto L481f5a;
  #L481f58.  return v3 @kind object;
  #L481f5a.  v0:= `@@yc.a.y` @type ^`yc.a` @kind object;
  #L481f5e.  v1:= (`long`) v4 @kind i2l;
  #L481f60.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L481f66.  v0:= v3.`uc.h.o` @type ^`byte` @kind byte;
  #L481f6a.  v1:= v3.`uc.h.p` @type ^`byte` @kind byte;
  #L481f6e.  v2:= v3.`uc.h.r` @type ^`int`;
  #L481f72.  call temp:= `X`(v0, v1, v4, v2) @signature `Luc/h;.X:(IIII)Luc/h;` @kind static;
  #L481f78.  v4:= temp @kind object;
  #L481f7a.  return v4 @kind object;
}
procedure `long` `B`(`uc.h` v4 @kind this, `yc.i` v5 @kind object) @signature `Luc/h;.B:(Lyc/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4815e0.  v0:= instanceof @variable v5 @type ^`yc.a` @kind boolean;
  #L4815e4.  if v0 == 0 then goto L48161e;
  #L4815e8.  v0:= `@@yc.a.t` @type ^`yc.a` @kind object;
  #L4815ec.  if v5 != v0 then goto L4815fa;
  #L4815f0.  call temp:= `t0`(v4) @signature `Luc/h;.t0:()J` @kind virtual;
  #L4815f6.  v0:= temp @kind wide;
  #L4815f8.  return v0 @kind wide;
  #L4815fa.  v0:= `@@yc.a.v` @type ^`yc.a` @kind object;
  #L4815fe.  if v5 != v0 then goto L481612;
  #L481602.  call temp:= `t0`(v4) @signature `Luc/h;.t0:()J` @kind virtual;
  #L481608.  v0:= temp @kind wide;
  #L48160a.  v2:= 1000L;
  #L48160e.  v0:= v0 / v2 @kind long;
  #L481610.  return v0 @kind wide;
  #L481612.  call temp:= `b0`(v4, v5) @signature `Luc/h;.b0:(Lyc/i;)I` @kind direct;
  #L481618.  v5:= temp;
  #L48161a.  v0:= (`long`) v5 @kind i2l;
  #L48161c.  return v0 @kind wide;
  #L48161e.  call temp:= `o`(v5, v4) @signature `Lyc/i;.o:(Lyc/e;)J` @kind interface;
  #L481624.  v0:= temp @kind wide;
  #L481626.  return v0 @kind wide;
}
procedure `void` `B0`(`uc.h` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Luc/h;.B0:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L482054.  v0:= v1.`uc.h.r` @type ^`int`;
  #L482058.  if v0 != 0 then goto L4820a4;
  #L48205c.  v0:= v1.`uc.h.q` @type ^`byte` @kind byte;
  #L482060.  if v0 != 0 then goto L482082;
  #L482064.  v0:= v1.`uc.h.p` @type ^`byte` @kind byte;
  #L482068.  if v0 != 0 then goto L482072;
  #L48206c.  v0:= v1.`uc.h.o` @type ^`byte` @kind byte;
  #L482070.  goto L48209a;
  #L482072.  v0:= v1.`uc.h.o` @type ^`byte` @kind byte;
  #L482076.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L48207c.  v0:= v1.`uc.h.p` @type ^`byte` @kind byte;
  #L482080.  goto L48209a;
  #L482082.  v0:= v1.`uc.h.o` @type ^`byte` @kind byte;
  #L482086.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L48208c.  v0:= v1.`uc.h.p` @type ^`byte` @kind byte;
  #L482090.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L482096.  v0:= v1.`uc.h.q` @type ^`byte` @kind byte;
  #L48209a.  v0:= ~v0 @kind int;
  #L48209c.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L4820a2.  goto L4820cc;
  #L4820a4.  v0:= v1.`uc.h.o` @type ^`byte` @kind byte;
  #L4820a8.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L4820ae.  v0:= v1.`uc.h.p` @type ^`byte` @kind byte;
  #L4820b2.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L4820b8.  v0:= v1.`uc.h.q` @type ^`byte` @kind byte;
  #L4820bc.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L4820c2.  v0:= v1.`uc.h.r` @type ^`int`;
  #L4820c6.  call `writeInt`(v2, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L4820cc.  return @kind void;
}
procedure `yc.d` `D`(`uc.h` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Luc/h;.D:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L482124.  call temp:= `n0`(v0, v1, v3) @signature `Luc/h;.n0:(JLyc/l;)Luc/h;` @kind virtual;
  #L48212a.  v1:= temp @kind object;
  #L48212c.  return v1 @kind object;
}
procedure `int` `F`(`uc.h` v1 @kind this, `yc.i` v2 @kind object) @signature `Luc/h;.F:(Lyc/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4811d4.  v0:= instanceof @variable v2 @type ^`yc.a` @kind boolean;
  #L4811d8.  if v0 == 0 then goto L4811e6;
  #L4811dc.  call temp:= `b0`(v1, v2) @signature `Luc/h;.b0:(Lyc/i;)I` @kind direct;
  #L4811e2.  v2:= temp;
  #L4811e4.  return v2;
  #L4811e6.  call temp:= `F`(v1, v2) @signature `Lxc/c;.F:(Lyc/i;)I` @kind super;
  #L4811ec.  v2:= temp;
  #L4811ee.  return v2;
}
procedure `yc.d` `I`(`uc.h` v3 @kind this, `yc.d` v4 @kind object) @signature `Luc/h;.I:(Lyc/d;)Lyc/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4820e0.  v0:= `@@yc.a.t` @type ^`yc.a` @kind object;
  #L4820e4.  call temp:= `t0`(v3) @signature `Luc/h;.t0:()J` @kind virtual;
  #L4820ea.  v1:= temp @kind wide;
  #L4820ec.  call temp:= `P`(v4, v0, v1) @signature `Lyc/d;.P:(Lyc/i;J)Lyc/d;` @kind interface;
  #L4820f2.  v4:= temp @kind object;
  #L4820f4.  return v4 @kind object;
}
procedure `yc.d` `L`(`uc.h` v0 @kind this, `yc.f` v1 @kind object) @signature `Luc/h;.L:(Lyc/f;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L482140.  call temp:= `v0`(v0, v1) @signature `Luc/h;.v0:(Lyc/f;)Luc/h;` @kind virtual;
  #L482146.  v1:= temp @kind object;
  #L482148.  return v1 @kind object;
}
procedure `yc.d` `P`(`uc.h` v0 @kind this, `yc.i` v1 @kind object, `long` v2 ) @signature `Luc/h;.P:(Lyc/i;J)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48215c.  call temp:= `w0`(v0, v1, v2) @signature `Luc/h;.w0:(Lyc/i;J)Luc/h;` @kind virtual;
  #L482162.  v1:= temp @kind object;
  #L482164.  return v1 @kind object;
}
procedure `uc.l` `T`(`uc.h` v0 @kind this, `uc.r` v1 @kind object) @signature `Luc/h;.T:(Luc/r;)Luc/l;` @AccessFlag PUBLIC {
    temp;

  #L481f8c.  call temp:= `b0`(v0, v1) @signature `Luc/l;.b0:(Luc/h;Luc/r;)Luc/l;` @kind static;
  #L481f92.  v1:= temp @kind object;
  #L481f94.  return v1 @kind object;
}
procedure `int` `V`(`uc.h` v2 @kind this, `uc.h` v3 @kind object) @signature `Luc/h;.V:(Luc/h;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L481174.  v0:= v2.`uc.h.o` @type ^`byte` @kind byte;
  #L481178.  v1:= v3.`uc.h.o` @type ^`byte` @kind byte;
  #L48117c.  call temp:= `a`(v0, v1) @signature `Lxc/d;.a:(II)I` @kind static;
  #L481182.  v0:= temp;
  #L481184.  if v0 != 0 then goto L4811c0;
  #L481188.  v0:= v2.`uc.h.p` @type ^`byte` @kind byte;
  #L48118c.  v1:= v3.`uc.h.p` @type ^`byte` @kind byte;
  #L481190.  call temp:= `a`(v0, v1) @signature `Lxc/d;.a:(II)I` @kind static;
  #L481196.  v0:= temp;
  #L481198.  if v0 != 0 then goto L4811c0;
  #L48119c.  v0:= v2.`uc.h.q` @type ^`byte` @kind byte;
  #L4811a0.  v1:= v3.`uc.h.q` @type ^`byte` @kind byte;
  #L4811a4.  call temp:= `a`(v0, v1) @signature `Lxc/d;.a:(II)I` @kind static;
  #L4811aa.  v0:= temp;
  #L4811ac.  if v0 != 0 then goto L4811c0;
  #L4811b0.  v0:= v2.`uc.h.r` @type ^`int`;
  #L4811b4.  v3:= v3.`uc.h.r` @type ^`int`;
  #L4811b8.  call temp:= `a`(v0, v3) @signature `Lxc/d;.a:(II)I` @kind static;
  #L4811be.  v0:= temp;
  #L4811c0.  return v0;
}
procedure `int` `c0`(`uc.h` v1 @kind this) @signature `Luc/h;.c0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48138c.  v0:= v1.`uc.h.o` @type ^`byte` @kind byte;
  #L481390.  return v0;
}
procedure `int` `compareTo`(`uc.h` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Luc/h;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L481154.  v1:= (`uc.h`) v1 @kind object;
  #L481158.  call temp:= `V`(v0, v1) @signature `Luc/h;.V:(Luc/h;)I` @kind virtual;
  #L48115e.  v1:= temp;
  #L481160.  return v1;
}
procedure `boolean` `d`(`uc.h` v1 @kind this, `yc.i` v2 @kind object) @signature `Luc/h;.d:(Lyc/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L481118.  v0:= instanceof @variable v2 @type ^`yc.a` @kind boolean;
  #L48111c.  if v0 == 0 then goto L48112a;
  #L481120.  call temp:= `i`(v2) @signature `Lyc/i;.i:()Z` @kind interface;
  #L481126.  v2:= temp;
  #L481128.  return v2;
  #L48112a.  if v2 == 0 then goto L48113e;
  #L48112e.  call temp:= `j`(v2, v1) @signature `Lyc/i;.j:(Lyc/e;)Z` @kind interface;
  #L481134.  v2:= temp;
  #L481136.  if v2 == 0 then goto L48113e;
  #L48113a.  v2:= 1I;
  #L48113c.  goto L481140;
  #L48113e.  v2:= 0I;
  #L481140.  return v2;
}
procedure `int` `d0`(`uc.h` v1 @kind this) @signature `Luc/h;.d0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4813a4.  v0:= v1.`uc.h.p` @type ^`byte` @kind byte;
  #L4813a8.  return v0;
}
procedure `int` `e0`(`uc.h` v1 @kind this) @signature `Luc/h;.e0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4813bc.  v0:= v1.`uc.h.r` @type ^`int`;
  #L4813c0.  return v0;
}
procedure `boolean` `equals`(`uc.h` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Luc/h;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4810b8.  v0:= 1I;
  #L4810ba.  if v4 != v5 then goto L4810c0;
  #L4810be.  return v0;
  #L4810c0.  v1:= instanceof @variable v5 @type ^`uc.h` @kind boolean;
  #L4810c4.  v2:= 0I;
  #L4810c6.  if v1 == 0 then goto L481104;
  #L4810ca.  v5:= (`uc.h`) v5 @kind object;
  #L4810ce.  v1:= v4.`uc.h.o` @type ^`byte` @kind byte;
  #L4810d2.  v3:= v5.`uc.h.o` @type ^`byte` @kind byte;
  #L4810d6.  if v1 != v3 then goto L481100;
  #L4810da.  v1:= v4.`uc.h.p` @type ^`byte` @kind byte;
  #L4810de.  v3:= v5.`uc.h.p` @type ^`byte` @kind byte;
  #L4810e2.  if v1 != v3 then goto L481100;
  #L4810e6.  v1:= v4.`uc.h.q` @type ^`byte` @kind byte;
  #L4810ea.  v3:= v5.`uc.h.q` @type ^`byte` @kind byte;
  #L4810ee.  if v1 != v3 then goto L481100;
  #L4810f2.  v1:= v4.`uc.h.r` @type ^`int`;
  #L4810f6.  v5:= v5.`uc.h.r` @type ^`int`;
  #L4810fa.  if v1 != v5 then goto L481100;
  #L4810fe.  goto L481102;
  #L481100.  v0:= 0I;
  #L481102.  return v0;
  #L481104.  return v2;
}
procedure `int` `f0`(`uc.h` v1 @kind this) @signature `Luc/h;.f0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4813d4.  v0:= v1.`uc.h.q` @type ^`byte` @kind byte;
  #L4813d8.  return v0;
}
procedure `uc.h` `g0`(`uc.h` v3 @kind this, `long` v4 , `yc.l` v6 @kind object) @signature `Luc/h;.g0:(JLyc/l;)Luc/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L481738.  v0:= -9223372036854775808L;
  #L48173c.  v2:= lcmp(v4, v0);
  #L481740.  if v2 != 0 then goto L481764;
  #L481744.  v4:= 9223372036854775807L;
  #L48174e.  call temp:= `n0`(v3, v4, v6) @signature `Luc/h;.n0:(JLyc/l;)Luc/h;` @kind virtual;
  #L481754.  v4:= temp @kind object;
  #L481756.  v0:= 1L;
  #L48175a.  call temp:= `n0`(v4, v0, v6) @signature `Luc/h;.n0:(JLyc/l;)Luc/h;` @kind virtual;
  #L481760.  v4:= temp @kind object;
  #L481762.  goto L48176e;
  #L481764.  v4:= -v4 @kind long;
  #L481766.  call temp:= `n0`(v3, v4, v6) @signature `Luc/h;.n0:(JLyc/l;)Luc/h;` @kind virtual;
  #L48176c.  v4:= temp @kind object;
  #L48176e.  return v4 @kind object;
}
procedure `int` `hashCode`(`uc.h` v4 @kind this) @signature `Luc/h;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4813ec.  call temp:= `t0`(v4) @signature `Luc/h;.t0:()J` @kind virtual;
  #L4813f2.  v0:= temp @kind wide;
  #L4813f4.  v2:= 32I;
  #L4813f8.  v2:= v0 ^>> v2 @kind long;
  #L4813fc.  v0:= v0 ^~ v2 @kind long;
  #L4813fe.  v1:= (`int`) v0 @kind l2i;
  #L481400.  return v1;
}
procedure `java.lang.Object` `j`(`uc.h` v1 @kind this, `yc.k` v2 @kind object) @signature `Luc/h;.j:(Lyc/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L481440.  call temp:= `e`() @signature `Lyc/j;.e:()Lyc/k;` @kind static;
  #L481446.  v0:= temp @kind object;
  #L481448.  if v2 != v0 then goto L481452;
  #L48144c.  v2:= `@@yc.b.p` @type ^`yc.b` @kind object;
  #L481450.  return v2 @kind object;
  #L481452.  call temp:= `c`() @signature `Lyc/j;.c:()Lyc/k;` @kind static;
  #L481458.  v0:= temp @kind object;
  #L48145a.  if v2 != v0 then goto L481460;
  #L48145e.  return v1 @kind object;
  #L481460.  call temp:= `a`() @signature `Lyc/j;.a:()Lyc/k;` @kind static;
  #L481466.  v0:= temp @kind object;
  #L481468.  if v2 == v0 then goto L4814a8;
  #L48146c.  call temp:= `g`() @signature `Lyc/j;.g:()Lyc/k;` @kind static;
  #L481472.  v0:= temp @kind object;
  #L481474.  if v2 == v0 then goto L4814a8;
  #L481478.  call temp:= `f`() @signature `Lyc/j;.f:()Lyc/k;` @kind static;
  #L48147e.  v0:= temp @kind object;
  #L481480.  if v2 == v0 then goto L4814a8;
  #L481484.  call temp:= `d`() @signature `Lyc/j;.d:()Lyc/k;` @kind static;
  #L48148a.  v0:= temp @kind object;
  #L48148c.  if v2 == v0 then goto L4814a8;
  #L481490.  call temp:= `b`() @signature `Lyc/j;.b:()Lyc/k;` @kind static;
  #L481496.  v0:= temp @kind object;
  #L481498.  if v2 != v0 then goto L48149e;
  #L48149c.  goto L4814a8;
  #L48149e.  call temp:= `a`(v2, v1) @signature `Lyc/k;.a:(Lyc/e;)Ljava/lang/Object;` @kind interface;
  #L4814a4.  v2:= temp @kind object;
  #L4814a6.  return v2 @kind object;
  #L4814a8.  v2:= 0I;
  #L4814aa.  return v2 @kind object;
}
procedure `uc.h` `n0`(`uc.h` v2 @kind this, `long` v3 , `yc.l` v5 @kind object) @signature `Luc/h;.n0:(JLyc/l;)Luc/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L481974.  v0:= instanceof @variable v5 @type ^`yc.b` @kind boolean;
  #L481978.  if v0 == 0 then goto L481a40;
  #L48197c.  v0:= v5 @kind object;
  #L48197e.  v0:= (`yc.b`) v0 @kind object;
  #L481982.  v1:= `@@uc.h$b.b` @type ^`int`[] @kind object;
  #L481986.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L48198c.  v0:= temp;
  #L48198e.  v0:= v1[v0];
  #L481992.  goto L481a50;
  #L481998.  v3:= new `yc.m`;
  #L48199c.  v4:= new `java.lang.StringBuilder`;
  #L4819a0.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4819a6.  v0:= "Unsupported unit: " @kind object;
  #L4819aa.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4819b0.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4819b6.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4819bc.  v4:= temp @kind object;
  #L4819be.  call `<init>`(v3, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4819c4.  throw v3;
  #L4819c6.  v0:= 2L;
  #L4819ca.  v3:= v3 %% v0 @kind long;
  #L4819cc.  v0:= 12L;
  #L4819d0.  v3:= v3 * v0 @kind long;
  #L4819d4.  call temp:= `o0`(v2, v3) @signature `Luc/h;.o0:(J)Luc/h;` @kind virtual;
  #L4819da.  v3:= temp @kind object;
  #L4819dc.  return v3 @kind object;
  #L4819de.  call temp:= `o0`(v2, v3) @signature `Luc/h;.o0:(J)Luc/h;` @kind virtual;
  #L4819e4.  v3:= temp @kind object;
  #L4819e6.  return v3 @kind object;
  #L4819e8.  call temp:= `p0`(v2, v3) @signature `Luc/h;.p0:(J)Luc/h;` @kind virtual;
  #L4819ee.  v3:= temp @kind object;
  #L4819f0.  return v3 @kind object;
  #L4819f2.  call temp:= `r0`(v2, v3) @signature `Luc/h;.r0:(J)Luc/h;` @kind virtual;
  #L4819f8.  v3:= temp @kind object;
  #L4819fa.  return v3 @kind object;
  #L4819fc.  v0:= 86400000L;
  #L481a02.  v3:= v3 %% v0 @kind long;
  #L481a04.  v0:= 1000000L;
  #L481a0a.  v3:= v3 * v0 @kind long;
  #L481a0e.  call temp:= `q0`(v2, v3) @signature `Luc/h;.q0:(J)Luc/h;` @kind virtual;
  #L481a14.  v3:= temp @kind object;
  #L481a16.  return v3 @kind object;
  #L481a18.  v0:= 86400000000L;
  #L481a22.  v3:= v3 %% v0 @kind long;
  #L481a24.  v0:= 1000L;
  #L481a28.  v3:= v3 * v0 @kind long;
  #L481a2c.  call temp:= `q0`(v2, v3) @signature `Luc/h;.q0:(J)Luc/h;` @kind virtual;
  #L481a32.  v3:= temp @kind object;
  #L481a34.  return v3 @kind object;
  #L481a36.  call temp:= `q0`(v2, v3) @signature `Luc/h;.q0:(J)Luc/h;` @kind virtual;
  #L481a3c.  v3:= temp @kind object;
  #L481a3e.  return v3 @kind object;
  #L481a40.  call temp:= `d`(v5, v2, v3) @signature `Lyc/l;.d:(Lyc/d;J)Lyc/d;` @kind interface;
  #L481a46.  v3:= temp @kind object;
  #L481a48.  v3:= (`uc.h`) v3 @kind object;
  #L481a4c.  return v3 @kind object;
  #L481a4e.  
  #L481a50.  switch v0
                  | 1 => goto L481a36
                  | 2 => goto L481a18
                  | 3 => goto L4819fc
                  | 4 => goto L4819f2
                  | 5 => goto L4819e8
                  | 6 => goto L4819de
                  | 7 => goto L4819c6
                  | else => goto L481998;
}
procedure `uc.h` `o0`(`uc.h` v3 @kind this, `long` v4 ) @signature `Luc/h;.o0:(J)Luc/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L481a84.  v0:= 0L;
  #L481a88.  v2:= lcmp(v4, v0);
  #L481a8c.  if v2 != 0 then goto L481a92;
  #L481a90.  return v3 @kind object;
  #L481a92.  v0:= 24L;
  #L481a96.  v4:= v4 %% v0 @kind long;
  #L481a98.  v5:= (`int`) v4 @kind l2i;
  #L481a9a.  v4:= v3.`uc.h.o` @type ^`byte` @kind byte;
  #L481a9e.  v5:= v5 + v4 @kind int;
  #L481aa0.  v5:= v5 + 24;
  #L481aa4.  v5:= v5 %% 24;
  #L481aa8.  v4:= v3.`uc.h.p` @type ^`byte` @kind byte;
  #L481aac.  v0:= v3.`uc.h.q` @type ^`byte` @kind byte;
  #L481ab0.  v1:= v3.`uc.h.r` @type ^`int`;
  #L481ab4.  call temp:= `X`(v5, v4, v0, v1) @signature `Luc/h;.X:(IIII)Luc/h;` @kind static;
  #L481aba.  v4:= temp @kind object;
  #L481abc.  return v4 @kind object;
}
procedure `uc.h` `p0`(`uc.h` v3 @kind this, `long` v4 ) @signature `Luc/h;.p0:(J)Luc/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L481ad0.  v0:= 0L;
  #L481ad4.  v2:= lcmp(v4, v0);
  #L481ad8.  if v2 != 0 then goto L481ade;
  #L481adc.  return v3 @kind object;
  #L481ade.  v0:= v3.`uc.h.o` @type ^`byte` @kind byte;
  #L481ae2.  v0:= v0 * 60;
  #L481ae6.  v1:= v3.`uc.h.p` @type ^`byte` @kind byte;
  #L481aea.  v0:= v0 + v1 @kind int;
  #L481aec.  v1:= 1440L;
  #L481af0.  v4:= v4 %% v1 @kind long;
  #L481af2.  v5:= (`int`) v4 @kind l2i;
  #L481af4.  v5:= v5 + v0 @kind int;
  #L481af6.  v5:= v5 + 1440;
  #L481afa.  v5:= v5 %% 1440;
  #L481afe.  if v0 != v5 then goto L481b04;
  #L481b02.  return v3 @kind object;
  #L481b04.  v4:= v5 / 60;
  #L481b08.  v5:= v5 %% 60;
  #L481b0c.  v0:= v3.`uc.h.q` @type ^`byte` @kind byte;
  #L481b10.  v1:= v3.`uc.h.r` @type ^`int`;
  #L481b14.  call temp:= `X`(v4, v5, v0, v1) @signature `Luc/h;.X:(IIII)Luc/h;` @kind static;
  #L481b1a.  v4:= temp @kind object;
  #L481b1c.  return v4 @kind object;
}
procedure `uc.h` `q0`(`uc.h` v8 @kind this, `long` v9 ) @signature `Luc/h;.q0:(J)Luc/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L481b30.  v0:= 0L;
  #L481b34.  v2:= lcmp(v9, v0);
  #L481b38.  if v2 != 0 then goto L481b3e;
  #L481b3c.  return v8 @kind object;
  #L481b3e.  call temp:= `t0`(v8) @signature `Luc/h;.t0:()J` @kind virtual;
  #L481b44.  v0:= temp @kind wide;
  #L481b46.  v2:= 86400000000000L;
  #L481b50.  v9:= v9 %% v2 @kind long;
  #L481b52.  v9:= v9 + v0 @kind long;
  #L481b54.  v9:= v9 + v2 @kind long;
  #L481b56.  v9:= v9 %% v2 @kind long;
  #L481b58.  v2:= lcmp(v0, v9);
  #L481b5c.  if v2 != 0 then goto L481b62;
  #L481b60.  return v8 @kind object;
  #L481b62.  v0:= 3600000000000L;
  #L481b6c.  v0:= v9 / v0 @kind long;
  #L481b70.  v1:= (`int`) v0 @kind l2i;
  #L481b72.  v2:= 60000000000L;
  #L481b7c.  v2:= v9 / v2 @kind long;
  #L481b80.  v4:= 60L;
  #L481b84.  v2:= v2 %% v4 @kind long;
  #L481b86.  v0:= (`int`) v2 @kind l2i;
  #L481b88.  v2:= 1000000000L;
  #L481b8e.  v6:= v9 / v2 @kind long;
  #L481b92.  v6:= v6 %% v4 @kind long;
  #L481b94.  v4:= (`int`) v6 @kind l2i;
  #L481b96.  v9:= v9 %% v2 @kind long;
  #L481b98.  v10:= (`int`) v9 @kind l2i;
  #L481b9a.  call temp:= `X`(v1, v0, v4, v10) @signature `Luc/h;.X:(IIII)Luc/h;` @kind static;
  #L481ba0.  v9:= temp @kind object;
  #L481ba2.  return v9 @kind object;
}
procedure `yc.d` `r`(`uc.h` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Luc/h;.r:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L482108.  call temp:= `g0`(v0, v1, v3) @signature `Luc/h;.g0:(JLyc/l;)Luc/h;` @kind virtual;
  #L48210e.  v1:= temp @kind object;
  #L482110.  return v1 @kind object;
}
procedure `uc.h` `r0`(`uc.h` v3 @kind this, `long` v4 ) @signature `Luc/h;.r0:(J)Luc/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L481bb4.  v0:= 0L;
  #L481bb8.  v2:= lcmp(v4, v0);
  #L481bbc.  if v2 != 0 then goto L481bc2;
  #L481bc0.  return v3 @kind object;
  #L481bc2.  v0:= v3.`uc.h.o` @type ^`byte` @kind byte;
  #L481bc6.  v0:= v0 * 3600;
  #L481bca.  v1:= v3.`uc.h.p` @type ^`byte` @kind byte;
  #L481bce.  v1:= v1 * 60;
  #L481bd2.  v0:= v0 + v1 @kind int;
  #L481bd4.  v1:= v3.`uc.h.q` @type ^`byte` @kind byte;
  #L481bd8.  v0:= v0 + v1 @kind int;
  #L481bda.  v1:= 86400L;
  #L481be0.  v4:= v4 %% v1 @kind long;
  #L481be2.  v5:= (`int`) v4 @kind l2i;
  #L481be4.  v5:= v5 + v0 @kind int;
  #L481be6.  v4:= 86400I;
  #L481bec.  v5:= v5 + v4 @kind int;
  #L481bee.  v5:= v5 %% v4 @kind int;
  #L481bf0.  if v0 != v5 then goto L481bf6;
  #L481bf4.  return v3 @kind object;
  #L481bf6.  v4:= v5 / 3600;
  #L481bfa.  v0:= v5 / 60;
  #L481bfe.  v0:= v0 %% 60;
  #L481c02.  v5:= v5 %% 60;
  #L481c06.  v1:= v3.`uc.h.r` @type ^`int`;
  #L481c0a.  call temp:= `X`(v4, v0, v5, v1) @signature `Luc/h;.X:(IIII)Luc/h;` @kind static;
  #L481c10.  v4:= temp @kind object;
  #L481c12.  return v4 @kind object;
}
procedure `yc.n` `t`(`uc.h` v0 @kind this, `yc.i` v1 @kind object) @signature `Luc/h;.t:(Lyc/i;)Lyc/n;` @AccessFlag PUBLIC {
    temp;

  #L482178.  call temp:= `t`(v0, v1) @signature `Lxc/c;.t:(Lyc/i;)Lyc/n;` @kind super;
  #L48217e.  v1:= temp @kind object;
  #L482180.  return v1 @kind object;
}
procedure `long` `t0`(`uc.h` v6 @kind this) @signature `Luc/h;.t0:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L481638.  v0:= v6.`uc.h.o` @type ^`byte` @kind byte;
  #L48163c.  v0:= (`long`) v0 @kind i2l;
  #L48163e.  v2:= 3600000000000L;
  #L481648.  v0:= v0 * v2 @kind long;
  #L48164c.  v2:= v6.`uc.h.p` @type ^`byte` @kind byte;
  #L481650.  v2:= (`long`) v2 @kind i2l;
  #L481652.  v4:= 60000000000L;
  #L48165c.  v2:= v2 * v4 @kind long;
  #L481660.  v0:= v0 + v2 @kind long;
  #L481662.  v2:= v6.`uc.h.q` @type ^`byte` @kind byte;
  #L481666.  v2:= (`long`) v2 @kind i2l;
  #L481668.  v4:= 1000000000L;
  #L48166e.  v2:= v2 * v4 @kind long;
  #L481672.  v0:= v0 + v2 @kind long;
  #L481674.  v2:= v6.`uc.h.r` @type ^`int`;
  #L481678.  v2:= (`long`) v2 @kind i2l;
  #L48167a.  v0:= v0 + v2 @kind long;
  #L48167c.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`uc.h` v8 @kind this) @signature `Luc/h;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4814fc.  v0:= new `java.lang.StringBuilder`;
  #L481500.  v1:= 18I;
  #L481504.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L48150a.  v1:= v8.`uc.h.o` @type ^`byte` @kind byte;
  #L48150e.  v2:= v8.`uc.h.p` @type ^`byte` @kind byte;
  #L481512.  v3:= v8.`uc.h.q` @type ^`byte` @kind byte;
  #L481516.  v4:= v8.`uc.h.r` @type ^`int`;
  #L48151a.  v5:= 10I;
  #L48151e.  if v1 >= v5 then goto L481528;
  #L481522.  v6:= "0" @kind object;
  #L481526.  goto L48152c;
  #L481528.  v6:= "" @kind object;
  #L48152c.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L481532.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L481538.  v1:= ":0" @kind object;
  #L48153c.  v6:= ":" @kind object;
  #L481540.  if v2 >= v5 then goto L481548;
  #L481544.  v7:= v1 @kind object;
  #L481546.  goto L48154a;
  #L481548.  v7:= v6 @kind object;
  #L48154a.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L481550.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L481556.  if v3 > 0 then goto L48155e;
  #L48155a.  if v4 <= 0 then goto L4815c6;
  #L48155e.  if v3 >= v5 then goto L481564;
  #L481562.  goto L481566;
  #L481564.  v1:= v6 @kind object;
  #L481566.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48156c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L481572.  if v4 <= 0 then goto L4815c6;
  #L481576.  v1:= 46I;
  #L48157a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L481580.  v1:= 1000000I;
  #L481586.  v2:= v4 %% v1 @kind int;
  #L48158a.  v3:= 1I;
  #L48158c.  if v2 != 0 then goto L4815ae;
  #L481590.  v4:= v4 / v1 @kind int;
  #L481592.  v4:= v4 + 1000;
  #L481596.  call temp:= `toString`(v4) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L48159c.  v1:= temp @kind object;
  #L48159e.  call temp:= `substring`(v1, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L4815a4.  v1:= temp @kind object;
  #L4815a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4815ac.  goto L4815c6;
  #L4815ae.  v2:= v4 %% 1000;
  #L4815b2.  if v2 != 0 then goto L4815bc;
  #L4815b6.  v4:= v4 / 1000;
  #L4815ba.  goto L4815c2;
  #L4815bc.  v1:= 1000000000I;
  #L4815c2.  v4:= v4 + v1 @kind int;
  #L4815c4.  goto L481596;
  #L4815c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4815cc.  v0:= temp @kind object;
  #L4815ce.  return v0 @kind object;
}
procedure `int` `u0`(`uc.h` v2 @kind this) @signature `Luc/h;.u0:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L481414.  v0:= v2.`uc.h.o` @type ^`byte` @kind byte;
  #L481418.  v0:= v0 * 3600;
  #L48141c.  v1:= v2.`uc.h.p` @type ^`byte` @kind byte;
  #L481420.  v1:= v1 * 60;
  #L481424.  v0:= v0 + v1 @kind int;
  #L481426.  v1:= v2.`uc.h.q` @type ^`byte` @kind byte;
  #L48142a.  v0:= v0 + v1 @kind int;
  #L48142c.  return v0;
}
procedure `uc.h` `v0`(`uc.h` v1 @kind this, `yc.f` v2 @kind object) @signature `Luc/h;.v0:(Lyc/f;)Luc/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L481c8c.  v0:= instanceof @variable v2 @type ^`uc.h` @kind boolean;
  #L481c90.  if v0 == 0 then goto L481c9a;
  #L481c94.  v2:= (`uc.h`) v2 @kind object;
  #L481c98.  return v2 @kind object;
  #L481c9a.  call temp:= `I`(v2, v1) @signature `Lyc/f;.I:(Lyc/d;)Lyc/d;` @kind interface;
  #L481ca0.  v2:= temp @kind object;
  #L481ca2.  v2:= (`uc.h`) v2 @kind object;
  #L481ca6.  return v2 @kind object;
}
procedure `uc.h` `w0`(`uc.h` v5 @kind this, `yc.i` v6 @kind object, `long` v7 ) @signature `Luc/h;.w0:(Lyc/i;J)Luc/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L481cb8.  v0:= instanceof @variable v6 @type ^`yc.a` @kind boolean;
  #L481cbc.  if v0 == 0 then goto L481e3a;
  #L481cc0.  v0:= v6 @kind object;
  #L481cc2.  v0:= (`yc.a`) v0 @kind object;
  #L481cc6.  call temp:= `s`(v0, v7) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L481ccc.  v1:= `@@uc.h$b.a` @type ^`int`[] @kind object;
  #L481cd0.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L481cd6.  v0:= temp;
  #L481cd8.  v0:= v1[v0];
  #L481cdc.  v1:= 0L;
  #L481ce0.  v3:= 12L;
  #L481ce4.  goto L481e48;
  #L481cea.  v7:= new `yc.m`;
  #L481cee.  v8:= new `java.lang.StringBuilder`;
  #L481cf2.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L481cf8.  v0:= "Unsupported field: " @kind object;
  #L481cfc.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L481d02.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L481d08.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L481d0e.  v6:= temp @kind object;
  #L481d10.  call `<init>`(v7, v6) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L481d16.  throw v7;
  #L481d18.  v6:= v5.`uc.h.o` @type ^`byte` @kind byte;
  #L481d1c.  v6:= v6 / 12;
  #L481d20.  v0:= (`long`) v6 @kind i2l;
  #L481d22.  v7:= v7 - v0 @kind long;
  #L481d24.  v7:= v7 * v3 @kind long;
  #L481d28.  call temp:= `o0`(v5, v7) @signature `Luc/h;.o0:(J)Luc/h;` @kind virtual;
  #L481d2e.  v6:= temp @kind object;
  #L481d30.  return v6 @kind object;
  #L481d32.  v3:= 24L;
  #L481d36.  v6:= lcmp(v7, v3);
  #L481d3a.  if v6 != 0 then goto L481d40;
  #L481d3e.  v7:= v1 @kind wide;
  #L481d40.  v6:= (`int`) v7 @kind l2i;
  #L481d42.  call temp:= `x0`(v5, v6) @signature `Luc/h;.x0:(I)Luc/h;` @kind virtual;
  #L481d48.  v6:= temp @kind object;
  #L481d4a.  return v6 @kind object;
  #L481d4c.  v6:= (`int`) v7 @kind l2i;
  #L481d4e.  call temp:= `x0`(v5, v6) @signature `Luc/h;.x0:(I)Luc/h;` @kind virtual;
  #L481d54.  v6:= temp @kind object;
  #L481d56.  return v6 @kind object;
  #L481d58.  v6:= lcmp(v7, v3);
  #L481d5c.  if v6 != 0 then goto L481d62;
  #L481d60.  v7:= v1 @kind wide;
  #L481d62.  v6:= v5.`uc.h.o` @type ^`byte` @kind byte;
  #L481d66.  v6:= v6 %% 12;
  #L481d6a.  v0:= (`long`) v6 @kind i2l;
  #L481d6c.  v7:= v7 - v0 @kind long;
  #L481d6e.  call temp:= `o0`(v5, v7) @signature `Luc/h;.o0:(J)Luc/h;` @kind virtual;
  #L481d74.  v6:= temp @kind object;
  #L481d76.  return v6 @kind object;
  #L481d78.  v6:= v5.`uc.h.o` @type ^`byte` @kind byte;
  #L481d7c.  v6:= v6 %% 12;
  #L481d80.  v0:= (`long`) v6 @kind i2l;
  #L481d82.  v7:= v7 - v0 @kind long;
  #L481d84.  call temp:= `o0`(v5, v7) @signature `Luc/h;.o0:(J)Luc/h;` @kind virtual;
  #L481d8a.  v6:= temp @kind object;
  #L481d8c.  return v6 @kind object;
  #L481d8e.  v6:= v5.`uc.h.o` @type ^`byte` @kind byte;
  #L481d92.  v6:= v6 * 60;
  #L481d96.  v0:= v5.`uc.h.p` @type ^`byte` @kind byte;
  #L481d9a.  v6:= v6 + v0 @kind int;
  #L481d9c.  v0:= (`long`) v6 @kind i2l;
  #L481d9e.  v7:= v7 - v0 @kind long;
  #L481da0.  call temp:= `p0`(v5, v7) @signature `Luc/h;.p0:(J)Luc/h;` @kind virtual;
  #L481da6.  v6:= temp @kind object;
  #L481da8.  return v6 @kind object;
  #L481daa.  v6:= (`int`) v7 @kind l2i;
  #L481dac.  call temp:= `y0`(v5, v6) @signature `Luc/h;.y0:(I)Luc/h;` @kind virtual;
  #L481db2.  v6:= temp @kind object;
  #L481db4.  return v6 @kind object;
  #L481db6.  call temp:= `u0`(v5) @signature `Luc/h;.u0:()I` @kind virtual;
  #L481dbc.  v6:= temp;
  #L481dbe.  v0:= (`long`) v6 @kind i2l;
  #L481dc0.  v7:= v7 - v0 @kind long;
  #L481dc2.  call temp:= `r0`(v5, v7) @signature `Luc/h;.r0:(J)Luc/h;` @kind virtual;
  #L481dc8.  v6:= temp @kind object;
  #L481dca.  return v6 @kind object;
  #L481dcc.  v6:= (`int`) v7 @kind l2i;
  #L481dce.  call temp:= `A0`(v5, v6) @signature `Luc/h;.A0:(I)Luc/h;` @kind virtual;
  #L481dd4.  v6:= temp @kind object;
  #L481dd6.  return v6 @kind object;
  #L481dd8.  v0:= 1000000L;
  #L481dde.  v7:= v7 * v0 @kind long;
  #L481de2.  call temp:= `k0`(v7) @signature `Luc/h;.k0:(J)Luc/h;` @kind static;
  #L481de8.  v6:= temp @kind object;
  #L481dea.  return v6 @kind object;
  #L481dec.  v6:= (`int`) v7 @kind l2i;
  #L481dee.  v7:= 1000000I;
  #L481df4.  v6:= v6 * v7 @kind int;
  #L481df8.  call temp:= `z0`(v5, v6) @signature `Luc/h;.z0:(I)Luc/h;` @kind virtual;
  #L481dfe.  v6:= temp @kind object;
  #L481e00.  return v6 @kind object;
  #L481e02.  v0:= 1000L;
  #L481e06.  v7:= v7 * v0 @kind long;
  #L481e0a.  call temp:= `k0`(v7) @signature `Luc/h;.k0:(J)Luc/h;` @kind static;
  #L481e10.  v6:= temp @kind object;
  #L481e12.  return v6 @kind object;
  #L481e14.  v6:= (`int`) v7 @kind l2i;
  #L481e16.  v6:= v6 * 1000;
  #L481e1a.  call temp:= `z0`(v5, v6) @signature `Luc/h;.z0:(I)Luc/h;` @kind virtual;
  #L481e20.  v6:= temp @kind object;
  #L481e22.  return v6 @kind object;
  #L481e24.  call temp:= `k0`(v7) @signature `Luc/h;.k0:(J)Luc/h;` @kind static;
  #L481e2a.  v6:= temp @kind object;
  #L481e2c.  return v6 @kind object;
  #L481e2e.  v6:= (`int`) v7 @kind l2i;
  #L481e30.  call temp:= `z0`(v5, v6) @signature `Luc/h;.z0:(I)Luc/h;` @kind virtual;
  #L481e36.  v6:= temp @kind object;
  #L481e38.  return v6 @kind object;
  #L481e3a.  call temp:= `e`(v6, v5, v7) @signature `Lyc/i;.e:(Lyc/d;J)Lyc/d;` @kind interface;
  #L481e40.  v6:= temp @kind object;
  #L481e42.  v6:= (`uc.h`) v6 @kind object;
  #L481e46.  return v6 @kind object;
  #L481e48.  switch v0
                  | 1 => goto L481e2e
                  | 2 => goto L481e24
                  | 3 => goto L481e14
                  | 4 => goto L481e02
                  | 5 => goto L481dec
                  | 6 => goto L481dd8
                  | 7 => goto L481dcc
                  | 8 => goto L481db6
                  | 9 => goto L481daa
                  | 10 => goto L481d8e
                  | 11 => goto L481d78
                  | 12 => goto L481d58
                  | 13 => goto L481d4c
                  | 14 => goto L481d32
                  | 15 => goto L481d18
                  | else => goto L481cea;
}
procedure `uc.h` `x0`(`uc.h` v3 @kind this, `int` v4 ) @signature `Luc/h;.x0:(I)Luc/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L481e9c.  v0:= v3.`uc.h.o` @type ^`byte` @kind byte;
  #L481ea0.  if v0 != v4 then goto L481ea6;
  #L481ea4.  return v3 @kind object;
  #L481ea6.  v0:= `@@yc.a.E` @type ^`yc.a` @kind object;
  #L481eaa.  v1:= (`long`) v4 @kind i2l;
  #L481eac.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L481eb2.  v0:= v3.`uc.h.p` @type ^`byte` @kind byte;
  #L481eb6.  v1:= v3.`uc.h.q` @type ^`byte` @kind byte;
  #L481eba.  v2:= v3.`uc.h.r` @type ^`int`;
  #L481ebe.  call temp:= `X`(v4, v0, v1, v2) @signature `Luc/h;.X:(IIII)Luc/h;` @kind static;
  #L481ec4.  v4:= temp @kind object;
  #L481ec6.  return v4 @kind object;
}
procedure `uc.h` `y0`(`uc.h` v3 @kind this, `int` v4 ) @signature `Luc/h;.y0:(I)Luc/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L481ed8.  v0:= v3.`uc.h.p` @type ^`byte` @kind byte;
  #L481edc.  if v0 != v4 then goto L481ee2;
  #L481ee0.  return v3 @kind object;
  #L481ee2.  v0:= `@@yc.a.A` @type ^`yc.a` @kind object;
  #L481ee6.  v1:= (`long`) v4 @kind i2l;
  #L481ee8.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L481eee.  v0:= v3.`uc.h.o` @type ^`byte` @kind byte;
  #L481ef2.  v1:= v3.`uc.h.q` @type ^`byte` @kind byte;
  #L481ef6.  v2:= v3.`uc.h.r` @type ^`int`;
  #L481efa.  call temp:= `X`(v0, v4, v1, v2) @signature `Luc/h;.X:(IIII)Luc/h;` @kind static;
  #L481f00.  v4:= temp @kind object;
  #L481f02.  return v4 @kind object;
}
procedure `uc.h` `z0`(`uc.h` v3 @kind this, `int` v4 ) @signature `Luc/h;.z0:(I)Luc/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L481f14.  v0:= v3.`uc.h.r` @type ^`int`;
  #L481f18.  if v0 != v4 then goto L481f1e;
  #L481f1c.  return v3 @kind object;
  #L481f1e.  v0:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L481f22.  v1:= (`long`) v4 @kind i2l;
  #L481f24.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L481f2a.  v0:= v3.`uc.h.o` @type ^`byte` @kind byte;
  #L481f2e.  v1:= v3.`uc.h.p` @type ^`byte` @kind byte;
  #L481f32.  v2:= v3.`uc.h.q` @type ^`byte` @kind byte;
  #L481f36.  call temp:= `X`(v0, v1, v2, v4) @signature `Luc/h;.X:(IIII)Luc/h;` @kind static;
  #L481f3c.  v4:= temp @kind object;
  #L481f3e.  return v4 @kind object;
}
