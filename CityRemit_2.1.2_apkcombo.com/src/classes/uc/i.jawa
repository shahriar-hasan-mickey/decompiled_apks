record `uc.i` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `yc.e` @kind interface, `yc.f` @kind interface {
}
global `uc.i`[] `@@uc.i.A` @AccessFlag PRIVATE_STATIC_FINAL;
global `uc.i`[] `@@uc.i.B` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `uc.i` `@@uc.i.o` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `uc.i` `@@uc.i.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `uc.i` `@@uc.i.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `uc.i` `@@uc.i.r` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `uc.i` `@@uc.i.s` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `uc.i` `@@uc.i.t` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `uc.i` `@@uc.i.u` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `uc.i` `@@uc.i.v` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `uc.i` `@@uc.i.w` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `uc.i` `@@uc.i.x` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `uc.i` `@@uc.i.y` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `uc.i` `@@uc.i.z` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Luc/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L482ed8.  v0:= new `uc.i`;
  #L482edc.  v1:= "JANUARY" @kind object;
  #L482ee0.  v2:= 0I;
  #L482ee2.  call `<init>`(v0, v1, v2) @signature `Luc/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L482ee8.  `@@uc.i.o` @type ^`uc.i` := v0 @kind object;
  #L482eec.  v1:= new `uc.i`;
  #L482ef0.  v3:= "FEBRUARY" @kind object;
  #L482ef4.  v4:= 1I;
  #L482ef6.  call `<init>`(v1, v3, v4) @signature `Luc/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L482efc.  `@@uc.i.p` @type ^`uc.i` := v1 @kind object;
  #L482f00.  v3:= new `uc.i`;
  #L482f04.  v5:= "MARCH" @kind object;
  #L482f08.  v6:= 2I;
  #L482f0a.  call `<init>`(v3, v5, v6) @signature `Luc/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L482f10.  `@@uc.i.q` @type ^`uc.i` := v3 @kind object;
  #L482f14.  v5:= new `uc.i`;
  #L482f18.  v7:= "APRIL" @kind object;
  #L482f1c.  v8:= 3I;
  #L482f1e.  call `<init>`(v5, v7, v8) @signature `Luc/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L482f24.  `@@uc.i.r` @type ^`uc.i` := v5 @kind object;
  #L482f28.  v7:= new `uc.i`;
  #L482f2c.  v9:= "MAY" @kind object;
  #L482f30.  v10:= 4I;
  #L482f32.  call `<init>`(v7, v9, v10) @signature `Luc/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L482f38.  `@@uc.i.s` @type ^`uc.i` := v7 @kind object;
  #L482f3c.  v9:= new `uc.i`;
  #L482f40.  v11:= "JUNE" @kind object;
  #L482f44.  v12:= 5I;
  #L482f46.  call `<init>`(v9, v11, v12) @signature `Luc/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L482f4c.  `@@uc.i.t` @type ^`uc.i` := v9 @kind object;
  #L482f50.  v11:= new `uc.i`;
  #L482f54.  v13:= "JULY" @kind object;
  #L482f58.  v14:= 6I;
  #L482f5a.  call `<init>`(v11, v13, v14) @signature `Luc/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L482f60.  `@@uc.i.u` @type ^`uc.i` := v11 @kind object;
  #L482f64.  v13:= new `uc.i`;
  #L482f68.  v15:= "AUGUST" @kind object;
  #L482f6c.  v14:= 7I;
  #L482f6e.  call `<init>`(v13, v15, v14) @signature `Luc/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L482f74.  `@@uc.i.v` @type ^`uc.i` := v13 @kind object;
  #L482f78.  v15:= new `uc.i`;
  #L482f7c.  v14:= "SEPTEMBER" @kind object;
  #L482f80.  v12:= 8I;
  #L482f84.  call `<init>`(v15, v14, v12) @signature `Luc/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L482f8a.  `@@uc.i.w` @type ^`uc.i` := v15 @kind object;
  #L482f8e.  v14:= new `uc.i`;
  #L482f92.  v12:= "OCTOBER" @kind object;
  #L482f96.  v10:= 9I;
  #L482f9a.  call `<init>`(v14, v12, v10) @signature `Luc/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L482fa0.  `@@uc.i.x` @type ^`uc.i` := v14 @kind object;
  #L482fa4.  v12:= new `uc.i`;
  #L482fa8.  v10:= "NOVEMBER" @kind object;
  #L482fac.  v8:= 10I;
  #L482fb0.  call `<init>`(v12, v10, v8) @signature `Luc/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L482fb6.  `@@uc.i.y` @type ^`uc.i` := v12 @kind object;
  #L482fba.  v10:= new `uc.i`;
  #L482fbe.  v8:= "DECEMBER" @kind object;
  #L482fc2.  v6:= 11I;
  #L482fc6.  call `<init>`(v10, v8, v6) @signature `Luc/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L482fcc.  `@@uc.i.z` @type ^`uc.i` := v10 @kind object;
  #L482fd0.  v8:= 12I;
  #L482fd4.  v8:= new `uc.i`[v8];
  #L482fd8.  v8[v2]:= v0 @kind object;
  #L482fdc.  v8[v4]:= v1 @kind object;
  #L482fe0.  v0:= 2I;
  #L482fe2.  v8[v0]:= v3 @kind object;
  #L482fe6.  v0:= 3I;
  #L482fe8.  v8[v0]:= v5 @kind object;
  #L482fec.  v0:= 4I;
  #L482fee.  v8[v0]:= v7 @kind object;
  #L482ff2.  v0:= 5I;
  #L482ff4.  v8[v0]:= v9 @kind object;
  #L482ff8.  v0:= 6I;
  #L482ffa.  v8[v0]:= v11 @kind object;
  #L482ffe.  v0:= 7I;
  #L483000.  v8[v0]:= v13 @kind object;
  #L483004.  v0:= 8I;
  #L483008.  v8[v0]:= v15 @kind object;
  #L48300c.  v0:= 9I;
  #L483010.  v8[v0]:= v14 @kind object;
  #L483014.  v0:= 10I;
  #L483018.  v8[v0]:= v12 @kind object;
  #L48301c.  v8[v6]:= v10 @kind object;
  #L483020.  `@@uc.i.B` @type ^`uc.i`[] := v8 @kind object;
  #L483024.  v0:= new `uc.i$a`;
  #L483028.  call `<init>`(v0) @signature `Luc/i$a;.<init>:()V` @kind direct;
  #L48302e.  call temp:= `values`() @signature `Luc/i;.values:()[Luc/i;` @kind static;
  #L483034.  v0:= temp @kind object;
  #L483036.  `@@uc.i.A` @type ^`uc.i`[] := v0 @kind object;
  #L48303a.  return @kind void;
}
procedure `void` `<init>`(`uc.i` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Luc/i;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L48304c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L483052.  return @kind void;
}
procedure `uc.i` `e`(`yc.e` v4 @kind object) @signature `Luc/i;.e:(Lyc/e;)Luc/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L482d50.  v0:= instanceof @variable v4 @type ^`uc.i` @kind boolean;
  #L482d54.  if v0 == 0 then goto L482d5e;
  #L482d58.  v4:= (`uc.i`) v4 @kind object;
  #L482d5c.  return v4 @kind object;
  #L482d5e.  v0:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L482d62.  call temp:= `k`(v4) @signature `Lvc/h;.k:(Lyc/e;)Lvc/h;` @kind static;
  #L482d68.  v1:= temp @kind object;
  #L482d6a.  call temp:= `equals`(v0, v1) @signature `Lvc/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L482d70.  v0:= temp;
  #L482d72.  if v0 != 0 then goto L482d7e;
  #L482d76.  call temp:= `m0`(v4) @signature `Luc/f;.m0:(Lyc/e;)Luc/f;` @kind static;
  #L482d7c.  v4:= temp @kind object;
  #L482d7e.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L482d82.  call temp:= `F`(v4, v0) @signature `Lyc/e;.F:(Lyc/i;)I` @kind interface;
  #L482d88.  v0:= temp;
  #L482d8a.  call temp:= `o`(v0) @signature `Luc/i;.o:(I)Luc/i;` @kind static;
  #L482d90.  v4:= temp @kind object;
  #L482d92.  return v4 @kind object;
  #L482d94.  v0:= Exception @type ^`uc.b` @kind object;
  #L482d96.  v1:= new `uc.b`;
  #L482d9a.  v2:= new `java.lang.StringBuilder`;
  #L482d9e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L482da4.  v3:= "Unable to obtain Month from TemporalAccessor: " @kind object;
  #L482da8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482dae.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482db4.  v3:= ", type " @kind object;
  #L482db8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482dbe.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L482dc4.  v4:= temp @kind object;
  #L482dc6.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L482dcc.  v4:= temp @kind object;
  #L482dce.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482dd4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L482dda.  v4:= temp @kind object;
  #L482ddc.  call `<init>`(v1, v4, v0) @signature `Luc/b;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L482de2.  throw v1;
  catch `uc.b` @[L482d5e..L482d92] goto L482d94;
}
procedure `uc.i` `o`(`int` v3 ) @signature `Luc/i;.o:(I)Luc/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L482e04.  v0:= 1I;
  #L482e06.  if v3 < v0 then goto L482e1e;
  #L482e0a.  v1:= 12I;
  #L482e0e.  if v3 > v1 then goto L482e1e;
  #L482e12.  v1:= `@@uc.i.A` @type ^`uc.i`[] @kind object;
  #L482e16.  v3:= v3 - v0 @kind int;
  #L482e18.  v3:= v1[v3] @kind object;
  #L482e1c.  return v3 @kind object;
  #L482e1e.  v0:= new `uc.b`;
  #L482e22.  v1:= new `java.lang.StringBuilder`;
  #L482e26.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L482e2c.  v2:= "Invalid value for MonthOfYear: " @kind object;
  #L482e30.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482e36.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L482e3c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L482e42.  v3:= temp @kind object;
  #L482e44.  call `<init>`(v0, v3) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L482e4a.  throw v0;
}
procedure `uc.i` `valueOf`(`java.lang.String` v1 @kind object) @signature `Luc/i;.valueOf:(Ljava/lang/String;)Luc/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L482e90.  v0:= constclass @type ^`uc.i` @kind object;
  #L482e94.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L482e9a.  v1:= temp @kind object;
  #L482e9c.  v1:= (`uc.i`) v1 @kind object;
  #L482ea0.  return v1 @kind object;
}
procedure `uc.i`[] `values`() @signature `Luc/i;.values:()[Luc/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L482eb4.  v0:= `@@uc.i.B` @type ^`uc.i`[] @kind object;
  #L482eb8.  call temp:= `clone`(v0) @signature `[Luc/i;.clone:()Ljava/lang/Object;` @kind virtual;
  #L482ebe.  v0:= temp @kind object;
  #L482ec0.  v0:= (`uc.i`[]) v0 @kind object;
  #L482ec4.  return v0 @kind object;
}
procedure `long` `B`(`uc.i` v3 @kind this, `yc.i` v4 @kind object) @signature `Luc/i;.B:(Lyc/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L482cec.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L482cf0.  if v4 != v0 then goto L482d00;
  #L482cf4.  call temp:= `getValue`(v3) @signature `Luc/i;.getValue:()I` @kind virtual;
  #L482cfa.  v4:= temp;
  #L482cfc.  v0:= (`long`) v4 @kind i2l;
  #L482cfe.  return v0 @kind wide;
  #L482d00.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L482d04.  if v0 != 0 then goto L482d12;
  #L482d08.  call temp:= `o`(v4, v3) @signature `Lyc/i;.o:(Lyc/e;)J` @kind interface;
  #L482d0e.  v0:= temp @kind wide;
  #L482d10.  return v0 @kind wide;
  #L482d12.  v0:= new `yc.m`;
  #L482d16.  v1:= new `java.lang.StringBuilder`;
  #L482d1a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L482d20.  v2:= "Unsupported field: " @kind object;
  #L482d24.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482d2a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482d30.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L482d36.  v4:= temp @kind object;
  #L482d38.  call `<init>`(v0, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L482d3e.  throw v0;
}
procedure `int` `F`(`uc.i` v3 @kind this, `yc.i` v4 @kind object) @signature `Luc/i;.F:(Lyc/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L482b14.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L482b18.  if v4 != v0 then goto L482b26;
  #L482b1c.  call temp:= `getValue`(v3) @signature `Luc/i;.getValue:()I` @kind virtual;
  #L482b22.  v4:= temp;
  #L482b24.  return v4;
  #L482b26.  call temp:= `t`(v3, v4) @signature `Luc/i;.t:(Lyc/i;)Lyc/n;` @kind virtual;
  #L482b2c.  v0:= temp @kind object;
  #L482b2e.  call temp:= `B`(v3, v4) @signature `Luc/i;.B:(Lyc/i;)J` @kind virtual;
  #L482b34.  v1:= temp @kind wide;
  #L482b36.  call temp:= `a`(v0, v1, v4) @signature `Lyc/n;.a:(JLyc/i;)I` @kind virtual;
  #L482b3c.  v4:= temp;
  #L482b3e.  return v4;
}
procedure `yc.d` `I`(`uc.i` v3 @kind this, `yc.d` v4 @kind object) @signature `Luc/i;.I:(Lyc/d;)Lyc/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L483064.  call temp:= `k`(v4) @signature `Lvc/h;.k:(Lyc/e;)Lvc/h;` @kind static;
  #L48306a.  v0:= temp @kind object;
  #L48306c.  v1:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L483070.  call temp:= `equals`(v0, v1) @signature `Lvc/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L483076.  v0:= temp;
  #L483078.  if v0 == 0 then goto L483094;
  #L48307c.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L483080.  call temp:= `getValue`(v3) @signature `Luc/i;.getValue:()I` @kind virtual;
  #L483086.  v1:= temp;
  #L483088.  v1:= (`long`) v1 @kind i2l;
  #L48308a.  call temp:= `P`(v4, v0, v1) @signature `Lyc/d;.P:(Lyc/i;J)Lyc/d;` @kind interface;
  #L483090.  v4:= temp @kind object;
  #L483092.  return v4 @kind object;
  #L483094.  v4:= new `uc.b`;
  #L483098.  v0:= "Adjustment only supported on ISO date-time" @kind object;
  #L48309c.  call `<init>`(v4, v0) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4830a2.  throw v4;
}
procedure `int` `c`(`uc.i` v2 @kind this, `boolean` v3 ) @signature `Luc/i;.c:(Z)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L482a74.  v0:= `@@uc.i$b.a` @type ^`int`[] @kind object;
  #L482a78.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L482a7e.  v1:= temp;
  #L482a80.  v0:= v0[v1];
  #L482a84.  goto L482ad0;
  #L482a8a.  v3:= v3 + 335;
  #L482a8e.  return v3;
  #L482a90.  v3:= v3 + 274;
  #L482a94.  return v3;
  #L482a96.  v3:= v3 + 213;
  #L482a9a.  return v3;
  #L482a9c.  v3:= v3 + 182;
  #L482aa0.  return v3;
  #L482aa2.  v3:= v3 + 121;
  #L482aa6.  return v3;
  #L482aa8.  v3:= v3 + 60;
  #L482aac.  return v3;
  #L482aae.  v3:= 1I;
  #L482ab0.  return v3;
  #L482ab2.  v3:= v3 + 305;
  #L482ab6.  return v3;
  #L482ab8.  v3:= v3 + 244;
  #L482abc.  return v3;
  #L482abe.  v3:= v3 + 152;
  #L482ac2.  return v3;
  #L482ac4.  v3:= v3 + 91;
  #L482ac8.  return v3;
  #L482aca.  v3:= 32I;
  #L482ace.  return v3;
  #L482ad0.  switch v0
                  | 1 => goto L482aca
                  | 2 => goto L482ac4
                  | 3 => goto L482abe
                  | 4 => goto L482ab8
                  | 5 => goto L482ab2
                  | 6 => goto L482aae
                  | 7 => goto L482aa8
                  | 8 => goto L482aa2
                  | 9 => goto L482a9c
                  | 10 => goto L482a96
                  | 11 => goto L482a90
                  | else => goto L482a8a;
}
procedure `boolean` `d`(`uc.i` v3 @kind this, `yc.i` v4 @kind object) @signature `Luc/i;.d:(Lyc/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L482a34.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L482a38.  v1:= 1I;
  #L482a3a.  v2:= 0I;
  #L482a3c.  if v0 == 0 then goto L482a4e;
  #L482a40.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L482a44.  if v4 != v0 then goto L482a4a;
  #L482a48.  goto L482a4c;
  #L482a4a.  v1:= 0I;
  #L482a4c.  return v1;
  #L482a4e.  if v4 == 0 then goto L482a60;
  #L482a52.  call temp:= `j`(v4, v3) @signature `Lyc/i;.j:(Lyc/e;)Z` @kind interface;
  #L482a58.  v4:= temp;
  #L482a5a.  if v4 == 0 then goto L482a60;
  #L482a5e.  goto L482a62;
  #L482a60.  v1:= 0I;
  #L482a62.  return v1;
}
procedure `int` `getValue`(`uc.i` v1 @kind this) @signature `Luc/i;.getValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L482b50.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L482b56.  v0:= temp;
  #L482b58.  v0:= v0 + 1;
  #L482b5c.  return v0;
}
procedure `int` `h`(`uc.i` v2 @kind this, `boolean` v3 ) @signature `Luc/i;.h:(Z)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L482b70.  v0:= `@@uc.i$b.a` @type ^`int`[] @kind object;
  #L482b74.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L482b7a.  v1:= temp;
  #L482b7c.  v0:= v0[v1];
  #L482b80.  v1:= 1I;
  #L482b82.  if v0 == v1 then goto L482baa;
  #L482b86.  v3:= 2I;
  #L482b88.  if v0 == v3 then goto L482ba4;
  #L482b8c.  v3:= 3I;
  #L482b8e.  if v0 == v3 then goto L482ba4;
  #L482b92.  v3:= 4I;
  #L482b94.  if v0 == v3 then goto L482ba4;
  #L482b98.  v3:= 5I;
  #L482b9a.  if v0 == v3 then goto L482ba4;
  #L482b9e.  v3:= 31I;
  #L482ba2.  return v3;
  #L482ba4.  v3:= 30I;
  #L482ba8.  return v3;
  #L482baa.  if v3 == 0 then goto L482bb4;
  #L482bae.  v3:= 29I;
  #L482bb2.  goto L482bb8;
  #L482bb4.  v3:= 28I;
  #L482bb8.  return v3;
}
procedure `int` `i`(`uc.i` v2 @kind this) @signature `Luc/i;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L482bcc.  v0:= `@@uc.i$b.a` @type ^`int`[] @kind object;
  #L482bd0.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L482bd6.  v1:= temp;
  #L482bd8.  v0:= v0[v1];
  #L482bdc.  v1:= 1I;
  #L482bde.  if v0 == v1 then goto L482c06;
  #L482be2.  v1:= 2I;
  #L482be4.  if v0 == v1 then goto L482c00;
  #L482be8.  v1:= 3I;
  #L482bea.  if v0 == v1 then goto L482c00;
  #L482bee.  v1:= 4I;
  #L482bf0.  if v0 == v1 then goto L482c00;
  #L482bf4.  v1:= 5I;
  #L482bf6.  if v0 == v1 then goto L482c00;
  #L482bfa.  v0:= 31I;
  #L482bfe.  return v0;
  #L482c00.  v0:= 30I;
  #L482c04.  return v0;
  #L482c06.  v0:= 29I;
  #L482c0a.  return v0;
}
procedure `java.lang.Object` `j`(`uc.i` v1 @kind this, `yc.k` v2 @kind object) @signature `Luc/i;.j:(Lyc/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L482c6c.  call temp:= `a`() @signature `Lyc/j;.a:()Lyc/k;` @kind static;
  #L482c72.  v0:= temp @kind object;
  #L482c74.  if v2 != v0 then goto L482c7e;
  #L482c78.  v2:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L482c7c.  return v2 @kind object;
  #L482c7e.  call temp:= `e`() @signature `Lyc/j;.e:()Lyc/k;` @kind static;
  #L482c84.  v0:= temp @kind object;
  #L482c86.  if v2 != v0 then goto L482c90;
  #L482c8a.  v2:= `@@yc.b.y` @type ^`yc.b` @kind object;
  #L482c8e.  return v2 @kind object;
  #L482c90.  call temp:= `b`() @signature `Lyc/j;.b:()Lyc/k;` @kind static;
  #L482c96.  v0:= temp @kind object;
  #L482c98.  if v2 == v0 then goto L482cd8;
  #L482c9c.  call temp:= `c`() @signature `Lyc/j;.c:()Lyc/k;` @kind static;
  #L482ca2.  v0:= temp @kind object;
  #L482ca4.  if v2 == v0 then goto L482cd8;
  #L482ca8.  call temp:= `f`() @signature `Lyc/j;.f:()Lyc/k;` @kind static;
  #L482cae.  v0:= temp @kind object;
  #L482cb0.  if v2 == v0 then goto L482cd8;
  #L482cb4.  call temp:= `g`() @signature `Lyc/j;.g:()Lyc/k;` @kind static;
  #L482cba.  v0:= temp @kind object;
  #L482cbc.  if v2 == v0 then goto L482cd8;
  #L482cc0.  call temp:= `d`() @signature `Lyc/j;.d:()Lyc/k;` @kind static;
  #L482cc6.  v0:= temp @kind object;
  #L482cc8.  if v2 != v0 then goto L482cce;
  #L482ccc.  goto L482cd8;
  #L482cce.  call temp:= `a`(v2, v1) @signature `Lyc/k;.a:(Lyc/e;)Ljava/lang/Object;` @kind interface;
  #L482cd4.  v2:= temp @kind object;
  #L482cd6.  return v2 @kind object;
  #L482cd8.  v2:= 0I;
  #L482cda.  return v2 @kind object;
}
procedure `int` `k`(`uc.i` v2 @kind this) @signature `Luc/i;.k:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L482c1c.  v0:= `@@uc.i$b.a` @type ^`int`[] @kind object;
  #L482c20.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L482c26.  v1:= temp;
  #L482c28.  v0:= v0[v1];
  #L482c2c.  v1:= 1I;
  #L482c2e.  if v0 == v1 then goto L482c56;
  #L482c32.  v1:= 2I;
  #L482c34.  if v0 == v1 then goto L482c50;
  #L482c38.  v1:= 3I;
  #L482c3a.  if v0 == v1 then goto L482c50;
  #L482c3e.  v1:= 4I;
  #L482c40.  if v0 == v1 then goto L482c50;
  #L482c44.  v1:= 5I;
  #L482c46.  if v0 == v1 then goto L482c50;
  #L482c4a.  v0:= 31I;
  #L482c4e.  return v0;
  #L482c50.  v0:= 30I;
  #L482c54.  return v0;
  #L482c56.  v0:= 28I;
  #L482c5a.  return v0;
}
procedure `uc.i` `s`(`uc.i` v2 @kind this, `long` v3 ) @signature `Luc/i;.s:(J)Luc/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L482e5c.  v0:= 12L;
  #L482e60.  v3:= v3 %% v0 @kind long;
  #L482e62.  v4:= (`int`) v3 @kind l2i;
  #L482e64.  v3:= `@@uc.i.A` @type ^`uc.i`[] @kind object;
  #L482e68.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L482e6e.  v0:= temp;
  #L482e70.  v4:= v4 + 12;
  #L482e74.  v0:= v0 + v4 @kind int;
  #L482e76.  v0:= v0 %% 12;
  #L482e7a.  v3:= v3[v0] @kind object;
  #L482e7e.  return v3 @kind object;
}
procedure `yc.n` `t`(`uc.i` v3 @kind this, `yc.i` v4 @kind object) @signature `Luc/i;.t:(Lyc/i;)Lyc/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4830b4.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L4830b8.  if v4 != v0 then goto L4830c6;
  #L4830bc.  call temp:= `k`(v4) @signature `Lyc/i;.k:()Lyc/n;` @kind interface;
  #L4830c2.  v4:= temp @kind object;
  #L4830c4.  return v4 @kind object;
  #L4830c6.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4830ca.  if v0 != 0 then goto L4830d8;
  #L4830ce.  call temp:= `h`(v4, v3) @signature `Lyc/i;.h:(Lyc/e;)Lyc/n;` @kind interface;
  #L4830d4.  v4:= temp @kind object;
  #L4830d6.  return v4 @kind object;
  #L4830d8.  v0:= new `yc.m`;
  #L4830dc.  v1:= new `java.lang.StringBuilder`;
  #L4830e0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4830e6.  v2:= "Unsupported field: " @kind object;
  #L4830ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4830f0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4830f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4830fc.  v4:= temp @kind object;
  #L4830fe.  call `<init>`(v0, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L483104.  throw v0;
}
