record `uc.k` @kind class @AccessFlag PUBLIC_FINAL extends `xc.b` @kind class, `yc.f` @kind interface, `java.lang.Comparable` @kind interface, `java.io.Serializable` @kind interface {
  `uc.g` `uc.k.o` @AccessFlag PRIVATE_FINAL;
  `uc.r` `uc.k.p` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Luc/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L483a04.  v0:= `@@uc.g.q` @type ^`uc.g` @kind object;
  #L483a08.  v1:= `@@uc.r.u` @type ^`uc.r` @kind object;
  #L483a0c.  call temp:= `l0`(v0, v1) @signature `Luc/g;.l0:(Luc/r;)Luc/k;` @kind virtual;
  #L483a12.  v0:= `@@uc.g.r` @type ^`uc.g` @kind object;
  #L483a16.  v1:= `@@uc.r.t` @type ^`uc.r` @kind object;
  #L483a1a.  call temp:= `l0`(v0, v1) @signature `Luc/g;.l0:(Luc/r;)Luc/k;` @kind virtual;
  #L483a20.  v0:= new `uc.k$a`;
  #L483a24.  call `<init>`(v0) @signature `Luc/k$a;.<init>:()V` @kind direct;
  #L483a2a.  v0:= new `uc.k$b`;
  #L483a2e.  call `<init>`(v0) @signature `Luc/k$b;.<init>:()V` @kind direct;
  #L483a34.  return @kind void;
}
procedure `void` `<init>`(`uc.k` v1 @kind this, `uc.g` v2 @kind object, `uc.r` v3 @kind object) @signature `Luc/k;.<init>:(Luc/g;Luc/r;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L483a48.  call `<init>`(v1) @signature `Lxc/b;.<init>:()V` @kind direct;
  #L483a4e.  v0:= "dateTime" @kind object;
  #L483a52.  call temp:= `i`(v2, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L483a58.  v2:= temp @kind object;
  #L483a5a.  v2:= (`uc.g`) v2 @kind object;
  #L483a5e.  v1.`uc.k.o` @type ^`uc.g` := v2 @kind object;
  #L483a62.  v2:= "offset" @kind object;
  #L483a66.  call temp:= `i`(v3, v2) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L483a6c.  v2:= temp @kind object;
  #L483a6e.  v2:= (`uc.r`) v2 @kind object;
  #L483a72.  v1.`uc.k.p` @type ^`uc.r` := v2 @kind object;
  #L483a76.  return @kind void;
}
procedure `uc.k` `X`(`yc.e` v3 @kind object) @signature `Luc/k;.X:(Lyc/e;)Luc/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L48369c.  v0:= instanceof @variable v3 @type ^`uc.k` @kind boolean;
  #L4836a0.  if v0 == 0 then goto L4836aa;
  #L4836a4.  v3:= (`uc.k`) v3 @kind object;
  #L4836a8.  return v3 @kind object;
  #L4836aa.  call temp:= `K`(v3) @signature `Luc/r;.K:(Lyc/e;)Luc/r;` @kind static;
  #L4836b0.  v0:= temp @kind object;
  #L4836b2.  call temp:= `o0`(v3) @signature `Luc/g;.o0:(Lyc/e;)Luc/g;` @kind static;
  #L4836b8.  v1:= temp @kind object;
  #L4836ba.  call temp:= `d0`(v1, v0) @signature `Luc/k;.d0:(Luc/g;Luc/r;)Luc/k;` @kind static;
  #L4836c0.  v3:= temp @kind object;
  #L4836c2.  return v3 @kind object;
  #L4836c4.  call temp:= `X`(v3) @signature `Luc/e;.X:(Lyc/e;)Luc/e;` @kind static;
  #L4836ca.  v1:= temp @kind object;
  #L4836cc.  call temp:= `e0`(v1, v0) @signature `Luc/k;.e0:(Luc/e;Luc/q;)Luc/k;` @kind static;
  #L4836d2.  v3:= temp @kind object;
  #L4836d4.  return v3 @kind object;
  #L4836d6.  v0:= new `uc.b`;
  #L4836da.  v1:= new `java.lang.StringBuilder`;
  #L4836de.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4836e4.  v2:= "Unable to obtain OffsetDateTime from TemporalAccessor: " @kind object;
  #L4836e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4836ee.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4836f4.  v2:= ", type " @kind object;
  #L4836f8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4836fe.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L483704.  v3:= temp @kind object;
  #L483706.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L48370c.  v3:= temp @kind object;
  #L48370e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L483714.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48371a.  v3:= temp @kind object;
  #L48371c.  call `<init>`(v0, v3) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L483722.  throw v0;
  catch `uc.b` @[L4836aa..L4836b2] goto L4836d6;
  catch `uc.b` @[L4836b2..L4836c2] goto L4836c4;
  catch `uc.b` @[L4836c4..L4836d4] goto L4836d6;
}
procedure `uc.k` `d0`(`uc.g` v1 @kind object, `uc.r` v2 @kind object) @signature `Luc/k;.d0:(Luc/g;Luc/r;)Luc/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4837a0.  v0:= new `uc.k`;
  #L4837a4.  call `<init>`(v0, v1, v2) @signature `Luc/k;.<init>:(Luc/g;Luc/r;)V` @kind direct;
  #L4837aa.  return v0 @kind object;
}
procedure `uc.k` `e0`(`uc.e` v2 @kind object, `uc.q` v3 @kind object) @signature `Luc/k;.e0:(Luc/e;Luc/q;)Luc/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4837bc.  v0:= "instant" @kind object;
  #L4837c0.  call temp:= `i`(v2, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4837c6.  v0:= "zone" @kind object;
  #L4837ca.  call temp:= `i`(v3, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4837d0.  call temp:= `h`(v3) @signature `Luc/q;.h:()Lzc/f;` @kind virtual;
  #L4837d6.  v3:= temp @kind object;
  #L4837d8.  call temp:= `a`(v3, v2) @signature `Lzc/f;.a:(Luc/e;)Luc/r;` @kind virtual;
  #L4837de.  v3:= temp @kind object;
  #L4837e0.  call temp:= `a0`(v2) @signature `Luc/e;.a0:()J` @kind virtual;
  #L4837e6.  v0:= temp @kind wide;
  #L4837e8.  call temp:= `b0`(v2) @signature `Luc/e;.b0:()I` @kind virtual;
  #L4837ee.  v2:= temp;
  #L4837f0.  call temp:= `A0`(v0, v2, v3) @signature `Luc/g;.A0:(JILuc/r;)Luc/g;` @kind static;
  #L4837f6.  v2:= temp @kind object;
  #L4837f8.  v0:= new `uc.k`;
  #L4837fc.  call `<init>`(v0, v2, v3) @signature `Luc/k;.<init>:(Luc/g;Luc/r;)V` @kind direct;
  #L483802.  return v0 @kind object;
}
procedure `uc.k` `g0`(`java.io.DataInput` v1 @kind object) @signature `Luc/k;.g0:(Ljava/io/DataInput;)Luc/k;` @AccessFlag STATIC {
    temp;
    v0;

  #L483854.  call temp:= `L0`(v1) @signature `Luc/g;.L0:(Ljava/io/DataInput;)Luc/g;` @kind static;
  #L48385a.  v0:= temp @kind object;
  #L48385c.  call temp:= `b0`(v1) @signature `Luc/r;.b0:(Ljava/io/DataInput;)Luc/r;` @kind static;
  #L483862.  v1:= temp @kind object;
  #L483864.  call temp:= `d0`(v0, v1) @signature `Luc/k;.d0:(Luc/g;Luc/r;)Luc/k;` @kind static;
  #L48386a.  v1:= temp @kind object;
  #L48386c.  return v1 @kind object;
}
procedure `uc.k` `l0`(`uc.k` v1 @kind this, `uc.g` v2 @kind object, `uc.r` v3 @kind object) @signature `Luc/k;.l0:(Luc/g;Luc/r;)Luc/k;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L483880.  v0:= v1.`uc.k.o` @type ^`uc.g` @kind object;
  #L483884.  if v0 != v2 then goto L48389a;
  #L483888.  v0:= v1.`uc.k.p` @type ^`uc.r` @kind object;
  #L48388c.  call temp:= `equals`(v0, v3) @signature `Luc/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L483892.  v0:= temp;
  #L483894.  if v0 == 0 then goto L48389a;
  #L483898.  return v1 @kind object;
  #L48389a.  v0:= new `uc.k`;
  #L48389e.  call `<init>`(v0, v2, v3) @signature `Luc/k;.<init>:(Luc/g;Luc/r;)V` @kind direct;
  #L4838a4.  return v0 @kind object;
}
procedure `java.lang.Object` `readResolve`(`uc.k` v2 @kind this) @signature `Luc/k;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L483528.  v0:= new `java.io.InvalidObjectException`;
  #L48352c.  v1:= "Deserialization via serialization delegate" @kind object;
  #L483530.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L483536.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`uc.k` v2 @kind this) @signature `Luc/k;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L483548.  v0:= new `uc.n`;
  #L48354c.  v1:= 69I;
  #L483550.  call `<init>`(v0, v1, v2) @signature `Luc/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L483556.  return v0 @kind object;
}
procedure `long` `B`(`uc.k` v2 @kind this, `yc.i` v3 @kind object) @signature `Luc/k;.B:(Lyc/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4835b0.  v0:= instanceof @variable v3 @type ^`yc.a` @kind boolean;
  #L4835b4.  if v0 == 0 then goto L483606;
  #L4835b8.  v0:= `@@uc.k$c.a` @type ^`int`[] @kind object;
  #L4835bc.  v1:= v3 @kind object;
  #L4835be.  v1:= (`yc.a`) v1 @kind object;
  #L4835c2.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4835c8.  v1:= temp;
  #L4835ca.  v0:= v0[v1];
  #L4835ce.  v1:= 1I;
  #L4835d0.  if v0 == v1 then goto L4835fc;
  #L4835d4.  v1:= 2I;
  #L4835d6.  if v0 == v1 then goto L4835e8;
  #L4835da.  v0:= v2.`uc.k.o` @type ^`uc.g` @kind object;
  #L4835de.  call temp:= `B`(v0, v3) @signature `Luc/g;.B:(Lyc/i;)J` @kind virtual;
  #L4835e4.  v0:= temp @kind wide;
  #L4835e6.  return v0 @kind wide;
  #L4835e8.  call temp:= `b0`(v2) @signature `Luc/k;.b0:()Luc/r;` @kind virtual;
  #L4835ee.  v3:= temp @kind object;
  #L4835f0.  call temp:= `S`(v3) @signature `Luc/r;.S:()I` @kind virtual;
  #L4835f6.  v3:= temp;
  #L4835f8.  v0:= (`long`) v3 @kind i2l;
  #L4835fa.  return v0 @kind wide;
  #L4835fc.  call temp:= `h0`(v2) @signature `Luc/k;.h0:()J` @kind virtual;
  #L483602.  v0:= temp @kind wide;
  #L483604.  return v0 @kind wide;
  #L483606.  call temp:= `o`(v3, v2) @signature `Lyc/i;.o:(Lyc/e;)J` @kind interface;
  #L48360c.  v0:= temp @kind wide;
  #L48360e.  return v0 @kind wide;
}
procedure `yc.d` `D`(`uc.k` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Luc/k;.D:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L483b34.  call temp:= `f0`(v0, v1, v3) @signature `Luc/k;.f0:(JLyc/l;)Luc/k;` @kind virtual;
  #L483b3a.  v1:= temp @kind object;
  #L483b3c.  return v1 @kind object;
}
procedure `int` `F`(`uc.k` v3 @kind this, `yc.i` v4 @kind object) @signature `Luc/k;.F:(Lyc/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4833a8.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4833ac.  if v0 == 0 then goto L483420;
  #L4833b0.  v0:= `@@uc.k$c.a` @type ^`int`[] @kind object;
  #L4833b4.  v1:= v4 @kind object;
  #L4833b6.  v1:= (`yc.a`) v1 @kind object;
  #L4833ba.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4833c0.  v1:= temp;
  #L4833c2.  v0:= v0[v1];
  #L4833c6.  v1:= 1I;
  #L4833c8.  if v0 == v1 then goto L4833f2;
  #L4833cc.  v1:= 2I;
  #L4833ce.  if v0 == v1 then goto L4833e0;
  #L4833d2.  v0:= v3.`uc.k.o` @type ^`uc.g` @kind object;
  #L4833d6.  call temp:= `F`(v0, v4) @signature `Luc/g;.F:(Lyc/i;)I` @kind virtual;
  #L4833dc.  v4:= temp;
  #L4833de.  return v4;
  #L4833e0.  call temp:= `b0`(v3) @signature `Luc/k;.b0:()Luc/r;` @kind virtual;
  #L4833e6.  v4:= temp @kind object;
  #L4833e8.  call temp:= `S`(v4) @signature `Luc/r;.S:()I` @kind virtual;
  #L4833ee.  v4:= temp;
  #L4833f0.  return v4;
  #L4833f2.  v0:= new `uc.b`;
  #L4833f6.  v1:= new `java.lang.StringBuilder`;
  #L4833fa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L483400.  v2:= "Field too large for an int: " @kind object;
  #L483404.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48340a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L483410.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L483416.  v4:= temp @kind object;
  #L483418.  call `<init>`(v0, v4) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48341e.  throw v0;
  #L483420.  call temp:= `F`(v3, v4) @signature `Lxc/c;.F:(Lyc/i;)I` @kind super;
  #L483426.  v4:= temp;
  #L483428.  return v4;
}
procedure `yc.d` `I`(`uc.k` v3 @kind this, `yc.d` v4 @kind object) @signature `Luc/k;.I:(Lyc/d;)Lyc/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L483ab0.  v0:= `@@yc.a.M` @type ^`yc.a` @kind object;
  #L483ab4.  call temp:= `i0`(v3) @signature `Luc/k;.i0:()Luc/f;` @kind virtual;
  #L483aba.  v1:= temp @kind object;
  #L483abc.  call temp:= `g0`(v1) @signature `Luc/f;.g0:()J` @kind virtual;
  #L483ac2.  v1:= temp @kind wide;
  #L483ac4.  call temp:= `P`(v4, v0, v1) @signature `Lyc/d;.P:(Lyc/i;J)Lyc/d;` @kind interface;
  #L483aca.  v4:= temp @kind object;
  #L483acc.  v0:= `@@yc.a.t` @type ^`yc.a` @kind object;
  #L483ad0.  call temp:= `k0`(v3) @signature `Luc/k;.k0:()Luc/h;` @kind virtual;
  #L483ad6.  v1:= temp @kind object;
  #L483ad8.  call temp:= `t0`(v1) @signature `Luc/h;.t0:()J` @kind virtual;
  #L483ade.  v1:= temp @kind wide;
  #L483ae0.  call temp:= `P`(v4, v0, v1) @signature `Lyc/d;.P:(Lyc/i;J)Lyc/d;` @kind interface;
  #L483ae6.  v4:= temp @kind object;
  #L483ae8.  v0:= `@@yc.a.V` @type ^`yc.a` @kind object;
  #L483aec.  call temp:= `b0`(v3) @signature `Luc/k;.b0:()Luc/r;` @kind virtual;
  #L483af2.  v1:= temp @kind object;
  #L483af4.  call temp:= `S`(v1) @signature `Luc/r;.S:()I` @kind virtual;
  #L483afa.  v1:= temp;
  #L483afc.  v1:= (`long`) v1 @kind i2l;
  #L483afe.  call temp:= `P`(v4, v0, v1) @signature `Lyc/d;.P:(Lyc/i;J)Lyc/d;` @kind interface;
  #L483b04.  v4:= temp @kind object;
  #L483b06.  return v4 @kind object;
}
procedure `yc.d` `L`(`uc.k` v0 @kind this, `yc.f` v1 @kind object) @signature `Luc/k;.L:(Lyc/f;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L483b50.  call temp:= `m0`(v0, v1) @signature `Luc/k;.m0:(Lyc/f;)Luc/k;` @kind virtual;
  #L483b56.  v1:= temp @kind object;
  #L483b58.  return v1 @kind object;
}
procedure `yc.d` `P`(`uc.k` v0 @kind this, `yc.i` v1 @kind object, `long` v2 ) @signature `Luc/k;.P:(Lyc/i;J)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L483b6c.  call temp:= `n0`(v0, v1, v2) @signature `Luc/k;.n0:(Lyc/i;J)Luc/k;` @kind virtual;
  #L483b72.  v1:= temp @kind object;
  #L483b74.  return v1 @kind object;
}
procedure `int` `V`(`uc.k` v4 @kind this, `uc.k` v5 @kind object) @signature `Luc/k;.V:(Luc/k;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L483304.  call temp:= `b0`(v4) @signature `Luc/k;.b0:()Luc/r;` @kind virtual;
  #L48330a.  v0:= temp @kind object;
  #L48330c.  call temp:= `b0`(v5) @signature `Luc/k;.b0:()Luc/r;` @kind virtual;
  #L483312.  v1:= temp @kind object;
  #L483314.  call temp:= `equals`(v0, v1) @signature `Luc/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48331a.  v0:= temp;
  #L48331c.  if v0 == 0 then goto L48333a;
  #L483320.  call temp:= `j0`(v4) @signature `Luc/k;.j0:()Luc/g;` @kind virtual;
  #L483326.  v0:= temp @kind object;
  #L483328.  call temp:= `j0`(v5) @signature `Luc/k;.j0:()Luc/g;` @kind virtual;
  #L48332e.  v5:= temp @kind object;
  #L483330.  call temp:= `X`(v0, v5) @signature `Luc/g;.X:(Lvc/c;)I` @kind virtual;
  #L483336.  v5:= temp;
  #L483338.  return v5;
  #L48333a.  call temp:= `h0`(v4) @signature `Luc/k;.h0:()J` @kind virtual;
  #L483340.  v0:= temp @kind wide;
  #L483342.  call temp:= `h0`(v5) @signature `Luc/k;.h0:()J` @kind virtual;
  #L483348.  v2:= temp @kind wide;
  #L48334a.  call temp:= `b`(v0, v2) @signature `Lxc/d;.b:(JJ)I` @kind static;
  #L483350.  v0:= temp;
  #L483352.  if v0 != 0 then goto L483394;
  #L483356.  call temp:= `k0`(v4) @signature `Luc/k;.k0:()Luc/h;` @kind virtual;
  #L48335c.  v0:= temp @kind object;
  #L48335e.  call temp:= `e0`(v0) @signature `Luc/h;.e0:()I` @kind virtual;
  #L483364.  v0:= temp;
  #L483366.  call temp:= `k0`(v5) @signature `Luc/k;.k0:()Luc/h;` @kind virtual;
  #L48336c.  v1:= temp @kind object;
  #L48336e.  call temp:= `e0`(v1) @signature `Luc/h;.e0:()I` @kind virtual;
  #L483374.  v1:= temp;
  #L483376.  v0:= v0 - v1 @kind int;
  #L483378.  if v0 != 0 then goto L483394;
  #L48337c.  call temp:= `j0`(v4) @signature `Luc/k;.j0:()Luc/g;` @kind virtual;
  #L483382.  v0:= temp @kind object;
  #L483384.  call temp:= `j0`(v5) @signature `Luc/k;.j0:()Luc/g;` @kind virtual;
  #L48338a.  v5:= temp @kind object;
  #L48338c.  call temp:= `X`(v0, v5) @signature `Luc/g;.X:(Lvc/c;)I` @kind virtual;
  #L483392.  v0:= temp;
  #L483394.  return v0;
}
procedure `int` `a0`(`uc.k` v1 @kind this) @signature `Luc/k;.a0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48343c.  v0:= v1.`uc.k.o` @type ^`uc.g` @kind object;
  #L483440.  call temp:= `u0`(v0) @signature `Luc/g;.u0:()I` @kind virtual;
  #L483446.  v0:= temp;
  #L483448.  return v0;
}
procedure `uc.r` `b0`(`uc.k` v1 @kind this) @signature `Luc/k;.b0:()Luc/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4839ec.  v0:= v1.`uc.k.p` @type ^`uc.r` @kind object;
  #L4839f0.  return v0 @kind object;
}
procedure `uc.k` `c0`(`uc.k` v3 @kind this, `long` v4 , `yc.l` v6 @kind object) @signature `Luc/k;.c0:(JLyc/l;)Luc/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L483758.  v0:= -9223372036854775808L;
  #L48375c.  v2:= lcmp(v4, v0);
  #L483760.  if v2 != 0 then goto L483784;
  #L483764.  v4:= 9223372036854775807L;
  #L48376e.  call temp:= `f0`(v3, v4, v6) @signature `Luc/k;.f0:(JLyc/l;)Luc/k;` @kind virtual;
  #L483774.  v4:= temp @kind object;
  #L483776.  v0:= 1L;
  #L48377a.  call temp:= `f0`(v4, v0, v6) @signature `Luc/k;.f0:(JLyc/l;)Luc/k;` @kind virtual;
  #L483780.  v4:= temp @kind object;
  #L483782.  goto L48378e;
  #L483784.  v4:= -v4 @kind long;
  #L483786.  call temp:= `f0`(v3, v4, v6) @signature `Luc/k;.f0:(JLyc/l;)Luc/k;` @kind virtual;
  #L48378c.  v4:= temp @kind object;
  #L48378e.  return v4 @kind object;
}
procedure `int` `compareTo`(`uc.k` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Luc/k;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4832e4.  v1:= (`uc.k`) v1 @kind object;
  #L4832e8.  call temp:= `V`(v0, v1) @signature `Luc/k;.V:(Luc/k;)I` @kind virtual;
  #L4832ee.  v1:= temp;
  #L4832f0.  return v1;
}
procedure `boolean` `d`(`uc.k` v1 @kind this, `yc.i` v2 @kind object) @signature `Luc/k;.d:(Lyc/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4832b0.  v0:= instanceof @variable v2 @type ^`yc.a` @kind boolean;
  #L4832b4.  if v0 != 0 then goto L4832ce;
  #L4832b8.  if v2 == 0 then goto L4832ca;
  #L4832bc.  call temp:= `j`(v2, v1) @signature `Lyc/i;.j:(Lyc/e;)Z` @kind interface;
  #L4832c2.  v2:= temp;
  #L4832c4.  if v2 == 0 then goto L4832ca;
  #L4832c8.  goto L4832ce;
  #L4832ca.  v2:= 0I;
  #L4832cc.  goto L4832d0;
  #L4832ce.  v2:= 1I;
  #L4832d0.  return v2;
}
procedure `boolean` `equals`(`uc.k` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Luc/k;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L483258.  v0:= 1I;
  #L48325a.  if v4 != v5 then goto L483260;
  #L48325e.  return v0;
  #L483260.  v1:= instanceof @variable v5 @type ^`uc.k` @kind boolean;
  #L483264.  v2:= 0I;
  #L483266.  if v1 == 0 then goto L48329c;
  #L48326a.  v5:= (`uc.k`) v5 @kind object;
  #L48326e.  v1:= v4.`uc.k.o` @type ^`uc.g` @kind object;
  #L483272.  v3:= v5.`uc.k.o` @type ^`uc.g` @kind object;
  #L483276.  call temp:= `equals`(v1, v3) @signature `Luc/g;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48327c.  v1:= temp;
  #L48327e.  if v1 == 0 then goto L483298;
  #L483282.  v1:= v4.`uc.k.p` @type ^`uc.r` @kind object;
  #L483286.  v5:= v5.`uc.k.p` @type ^`uc.r` @kind object;
  #L48328a.  call temp:= `equals`(v1, v5) @signature `Luc/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L483290.  v5:= temp;
  #L483292.  if v5 == 0 then goto L483298;
  #L483296.  goto L48329a;
  #L483298.  v0:= 0I;
  #L48329a.  return v0;
  #L48329c.  return v2;
}
procedure `uc.k` `f0`(`uc.k` v1 @kind this, `long` v2 , `yc.l` v4 @kind object) @signature `Luc/k;.f0:(JLyc/l;)Luc/k;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L483814.  v0:= instanceof @variable v4 @type ^`yc.b` @kind boolean;
  #L483818.  if v0 == 0 then goto L483836;
  #L48381c.  v0:= v1.`uc.k.o` @type ^`uc.g` @kind object;
  #L483820.  call temp:= `D0`(v0, v2, v4) @signature `Luc/g;.D0:(JLyc/l;)Luc/g;` @kind virtual;
  #L483826.  v2:= temp @kind object;
  #L483828.  v3:= v1.`uc.k.p` @type ^`uc.r` @kind object;
  #L48382c.  call temp:= `l0`(v1, v2, v3) @signature `Luc/k;.l0:(Luc/g;Luc/r;)Luc/k;` @kind direct;
  #L483832.  v2:= temp @kind object;
  #L483834.  return v2 @kind object;
  #L483836.  call temp:= `d`(v4, v1, v2) @signature `Lyc/l;.d:(Lyc/d;J)Lyc/d;` @kind interface;
  #L48383c.  v2:= temp @kind object;
  #L48383e.  v2:= (`uc.k`) v2 @kind object;
  #L483842.  return v2 @kind object;
}
procedure `long` `h0`(`uc.k` v2 @kind this) @signature `Luc/k;.h0:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L483620.  v0:= v2.`uc.k.o` @type ^`uc.g` @kind object;
  #L483624.  v1:= v2.`uc.k.p` @type ^`uc.r` @kind object;
  #L483628.  call temp:= `f0`(v0, v1) @signature `Lvc/c;.f0:(Luc/r;)J` @kind virtual;
  #L48362e.  v0:= temp @kind wide;
  #L483630.  return v0 @kind wide;
}
procedure `int` `hashCode`(`uc.k` v2 @kind this) @signature `Luc/k;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48345c.  v0:= v2.`uc.k.o` @type ^`uc.g` @kind object;
  #L483460.  call temp:= `hashCode`(v0) @signature `Luc/g;.hashCode:()I` @kind virtual;
  #L483466.  v0:= temp;
  #L483468.  v1:= v2.`uc.k.p` @type ^`uc.r` @kind object;
  #L48346c.  call temp:= `hashCode`(v1) @signature `Luc/r;.hashCode:()I` @kind virtual;
  #L483472.  v1:= temp;
  #L483474.  v0:= v0 ^~ v1 @kind int;
  #L483476.  return v0;
}
procedure `uc.f` `i0`(`uc.k` v1 @kind this) @signature `Luc/k;.i0:()Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L483644.  v0:= v1.`uc.k.o` @type ^`uc.g` @kind object;
  #L483648.  call temp:= `M0`(v0) @signature `Luc/g;.M0:()Luc/f;` @kind virtual;
  #L48364e.  v0:= temp @kind object;
  #L483650.  return v0 @kind object;
}
procedure `java.lang.Object` `j`(`uc.k` v1 @kind this, `yc.k` v2 @kind object) @signature `Luc/k;.j:(Lyc/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L483488.  call temp:= `a`() @signature `Lyc/j;.a:()Lyc/k;` @kind static;
  #L48348e.  v0:= temp @kind object;
  #L483490.  if v2 != v0 then goto L48349a;
  #L483494.  v2:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L483498.  return v2 @kind object;
  #L48349a.  call temp:= `e`() @signature `Lyc/j;.e:()Lyc/k;` @kind static;
  #L4834a0.  v0:= temp @kind object;
  #L4834a2.  if v2 != v0 then goto L4834ac;
  #L4834a6.  v2:= `@@yc.b.p` @type ^`yc.b` @kind object;
  #L4834aa.  return v2 @kind object;
  #L4834ac.  call temp:= `d`() @signature `Lyc/j;.d:()Lyc/k;` @kind static;
  #L4834b2.  v0:= temp @kind object;
  #L4834b4.  if v2 == v0 then goto L48350c;
  #L4834b8.  call temp:= `f`() @signature `Lyc/j;.f:()Lyc/k;` @kind static;
  #L4834be.  v0:= temp @kind object;
  #L4834c0.  if v2 != v0 then goto L4834c6;
  #L4834c4.  goto L48350c;
  #L4834c6.  call temp:= `b`() @signature `Lyc/j;.b:()Lyc/k;` @kind static;
  #L4834cc.  v0:= temp @kind object;
  #L4834ce.  if v2 != v0 then goto L4834dc;
  #L4834d2.  call temp:= `i0`(v1) @signature `Luc/k;.i0:()Luc/f;` @kind virtual;
  #L4834d8.  v2:= temp @kind object;
  #L4834da.  return v2 @kind object;
  #L4834dc.  call temp:= `c`() @signature `Lyc/j;.c:()Lyc/k;` @kind static;
  #L4834e2.  v0:= temp @kind object;
  #L4834e4.  if v2 != v0 then goto L4834f2;
  #L4834e8.  call temp:= `k0`(v1) @signature `Luc/k;.k0:()Luc/h;` @kind virtual;
  #L4834ee.  v2:= temp @kind object;
  #L4834f0.  return v2 @kind object;
  #L4834f2.  call temp:= `g`() @signature `Lyc/j;.g:()Lyc/k;` @kind static;
  #L4834f8.  v0:= temp @kind object;
  #L4834fa.  if v2 != v0 then goto L483502;
  #L4834fe.  v2:= 0I;
  #L483500.  return v2 @kind object;
  #L483502.  call temp:= `j`(v1, v2) @signature `Lxc/c;.j:(Lyc/k;)Ljava/lang/Object;` @kind super;
  #L483508.  v2:= temp @kind object;
  #L48350a.  return v2 @kind object;
  #L48350c.  call temp:= `b0`(v1) @signature `Luc/k;.b0:()Luc/r;` @kind virtual;
  #L483512.  v2:= temp @kind object;
  #L483514.  return v2 @kind object;
}
procedure `uc.g` `j0`(`uc.k` v1 @kind this) @signature `Luc/k;.j0:()Luc/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L483664.  v0:= v1.`uc.k.o` @type ^`uc.g` @kind object;
  #L483668.  return v0 @kind object;
}
procedure `uc.h` `k0`(`uc.k` v1 @kind this) @signature `Luc/k;.k0:()Luc/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48367c.  v0:= v1.`uc.k.o` @type ^`uc.g` @kind object;
  #L483680.  call temp:= `i0`(v0) @signature `Luc/g;.i0:()Luc/h;` @kind virtual;
  #L483686.  v0:= temp @kind object;
  #L483688.  return v0 @kind object;
}
procedure `uc.k` `m0`(`uc.k` v1 @kind this, `yc.f` v2 @kind object) @signature `Luc/k;.m0:(Lyc/f;)Luc/k;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4838b8.  v0:= instanceof @variable v2 @type ^`uc.f` @kind boolean;
  #L4838bc.  if v0 != 0 then goto L483922;
  #L4838c0.  v0:= instanceof @variable v2 @type ^`uc.h` @kind boolean;
  #L4838c4.  if v0 != 0 then goto L483922;
  #L4838c8.  v0:= instanceof @variable v2 @type ^`uc.g` @kind boolean;
  #L4838cc.  if v0 == 0 then goto L4838d2;
  #L4838d0.  goto L483922;
  #L4838d2.  v0:= instanceof @variable v2 @type ^`uc.e` @kind boolean;
  #L4838d6.  if v0 == 0 then goto L4838ec;
  #L4838da.  v2:= (`uc.e`) v2 @kind object;
  #L4838de.  v0:= v1.`uc.k.p` @type ^`uc.r` @kind object;
  #L4838e2.  call temp:= `e0`(v2, v0) @signature `Luc/k;.e0:(Luc/e;Luc/q;)Luc/k;` @kind static;
  #L4838e8.  v2:= temp @kind object;
  #L4838ea.  return v2 @kind object;
  #L4838ec.  v0:= instanceof @variable v2 @type ^`uc.r` @kind boolean;
  #L4838f0.  if v0 == 0 then goto L483906;
  #L4838f4.  v0:= v1.`uc.k.o` @type ^`uc.g` @kind object;
  #L4838f8.  v2:= (`uc.r`) v2 @kind object;
  #L4838fc.  call temp:= `l0`(v1, v0, v2) @signature `Luc/k;.l0:(Luc/g;Luc/r;)Luc/k;` @kind direct;
  #L483902.  v2:= temp @kind object;
  #L483904.  return v2 @kind object;
  #L483906.  v0:= instanceof @variable v2 @type ^`uc.k` @kind boolean;
  #L48390a.  if v0 == 0 then goto L483914;
  #L48390e.  v2:= (`uc.k`) v2 @kind object;
  #L483912.  return v2 @kind object;
  #L483914.  call temp:= `I`(v2, v1) @signature `Lyc/f;.I:(Lyc/d;)Lyc/d;` @kind interface;
  #L48391a.  v2:= temp @kind object;
  #L48391c.  v2:= (`uc.k`) v2 @kind object;
  #L483920.  return v2 @kind object;
  #L483922.  v0:= v1.`uc.k.o` @type ^`uc.g` @kind object;
  #L483926.  call temp:= `O0`(v0, v2) @signature `Luc/g;.O0:(Lyc/f;)Luc/g;` @kind virtual;
  #L48392c.  v2:= temp @kind object;
  #L48392e.  v0:= v1.`uc.k.p` @type ^`uc.r` @kind object;
  #L483932.  call temp:= `l0`(v1, v2, v0) @signature `Luc/k;.l0:(Luc/g;Luc/r;)Luc/k;` @kind direct;
  #L483938.  v2:= temp @kind object;
  #L48393a.  return v2 @kind object;
}
procedure `uc.k` `n0`(`uc.k` v3 @kind this, `yc.i` v4 @kind object, `long` v5 ) @signature `Luc/k;.n0:(Lyc/i;J)Luc/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48394c.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L483950.  if v0 == 0 then goto L4839ce;
  #L483954.  v0:= v4 @kind object;
  #L483956.  v0:= (`yc.a`) v0 @kind object;
  #L48395a.  v1:= `@@uc.k$c.a` @type ^`int`[] @kind object;
  #L48395e.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L483964.  v2:= temp;
  #L483966.  v1:= v1[v2];
  #L48396a.  v2:= 1I;
  #L48396c.  if v1 == v2 then goto L4839ae;
  #L483970.  v2:= 2I;
  #L483972.  if v1 == v2 then goto L483990;
  #L483976.  v0:= v3.`uc.k.o` @type ^`uc.g` @kind object;
  #L48397a.  call temp:= `P0`(v0, v4, v5) @signature `Luc/g;.P0:(Lyc/i;J)Luc/g;` @kind virtual;
  #L483980.  v4:= temp @kind object;
  #L483982.  v5:= v3.`uc.k.p` @type ^`uc.r` @kind object;
  #L483986.  call temp:= `l0`(v3, v4, v5) @signature `Luc/k;.l0:(Luc/g;Luc/r;)Luc/k;` @kind direct;
  #L48398c.  v4:= temp @kind object;
  #L48398e.  return v4 @kind object;
  #L483990.  v4:= v3.`uc.k.o` @type ^`uc.g` @kind object;
  #L483994.  call temp:= `r`(v0, v5) @signature `Lyc/a;.r:(J)I` @kind virtual;
  #L48399a.  v5:= temp;
  #L48399c.  call temp:= `X`(v5) @signature `Luc/r;.X:(I)Luc/r;` @kind static;
  #L4839a2.  v5:= temp @kind object;
  #L4839a4.  call temp:= `l0`(v3, v4, v5) @signature `Luc/k;.l0:(Luc/g;Luc/r;)Luc/k;` @kind direct;
  #L4839aa.  v4:= temp @kind object;
  #L4839ac.  return v4 @kind object;
  #L4839ae.  call temp:= `a0`(v3) @signature `Luc/k;.a0:()I` @kind virtual;
  #L4839b4.  v4:= temp;
  #L4839b6.  v0:= (`long`) v4 @kind i2l;
  #L4839b8.  call temp:= `f0`(v5, v0) @signature `Luc/e;.f0:(JJ)Luc/e;` @kind static;
  #L4839be.  v4:= temp @kind object;
  #L4839c0.  v5:= v3.`uc.k.p` @type ^`uc.r` @kind object;
  #L4839c4.  call temp:= `e0`(v4, v5) @signature `Luc/k;.e0:(Luc/e;Luc/q;)Luc/k;` @kind static;
  #L4839ca.  v4:= temp @kind object;
  #L4839cc.  return v4 @kind object;
  #L4839ce.  call temp:= `e`(v4, v3, v5) @signature `Lyc/i;.e:(Lyc/d;J)Lyc/d;` @kind interface;
  #L4839d4.  v4:= temp @kind object;
  #L4839d6.  v4:= (`uc.k`) v4 @kind object;
  #L4839da.  return v4 @kind object;
}
procedure `void` `o0`(`uc.k` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Luc/k;.o0:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L483a88.  v0:= v1.`uc.k.o` @type ^`uc.g` @kind object;
  #L483a8c.  call `Q0`(v0, v2) @signature `Luc/g;.Q0:(Ljava/io/DataOutput;)V` @kind virtual;
  #L483a92.  v0:= v1.`uc.k.p` @type ^`uc.r` @kind object;
  #L483a96.  call `e0`(v0, v2) @signature `Luc/r;.e0:(Ljava/io/DataOutput;)V` @kind virtual;
  #L483a9c.  return @kind void;
}
procedure `yc.d` `r`(`uc.k` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Luc/k;.r:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L483b18.  call temp:= `c0`(v0, v1, v3) @signature `Luc/k;.c0:(JLyc/l;)Luc/k;` @kind virtual;
  #L483b1e.  v1:= temp @kind object;
  #L483b20.  return v1 @kind object;
}
procedure `yc.n` `t`(`uc.k` v1 @kind this, `yc.i` v2 @kind object) @signature `Luc/k;.t:(Lyc/i;)Lyc/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L483b88.  v0:= instanceof @variable v2 @type ^`yc.a` @kind boolean;
  #L483b8c.  if v0 == 0 then goto L483bba;
  #L483b90.  v0:= `@@yc.a.U` @type ^`yc.a` @kind object;
  #L483b94.  if v2 == v0 then goto L483bb0;
  #L483b98.  v0:= `@@yc.a.V` @type ^`yc.a` @kind object;
  #L483b9c.  if v2 != v0 then goto L483ba2;
  #L483ba0.  goto L483bb0;
  #L483ba2.  v0:= v1.`uc.k.o` @type ^`uc.g` @kind object;
  #L483ba6.  call temp:= `t`(v0, v2) @signature `Luc/g;.t:(Lyc/i;)Lyc/n;` @kind virtual;
  #L483bac.  v2:= temp @kind object;
  #L483bae.  return v2 @kind object;
  #L483bb0.  call temp:= `k`(v2) @signature `Lyc/i;.k:()Lyc/n;` @kind interface;
  #L483bb6.  v2:= temp @kind object;
  #L483bb8.  return v2 @kind object;
  #L483bba.  call temp:= `h`(v2, v1) @signature `Lyc/i;.h:(Lyc/e;)Lyc/n;` @kind interface;
  #L483bc0.  v2:= temp @kind object;
  #L483bc2.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`uc.k` v2 @kind this) @signature `Luc/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L483568.  v0:= new `java.lang.StringBuilder`;
  #L48356c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L483572.  v1:= v2.`uc.k.o` @type ^`uc.g` @kind object;
  #L483576.  call temp:= `toString`(v1) @signature `Luc/g;.toString:()Ljava/lang/String;` @kind virtual;
  #L48357c.  v1:= temp @kind object;
  #L48357e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L483584.  v1:= v2.`uc.k.p` @type ^`uc.r` @kind object;
  #L483588.  call temp:= `toString`(v1) @signature `Luc/r;.toString:()Ljava/lang/String;` @kind virtual;
  #L48358e.  v1:= temp @kind object;
  #L483590.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L483596.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48359c.  v0:= temp @kind object;
  #L48359e.  return v0 @kind object;
}
