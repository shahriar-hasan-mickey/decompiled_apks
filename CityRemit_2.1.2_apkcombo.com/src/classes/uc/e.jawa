record `uc.e` @kind class @AccessFlag PUBLIC_FINAL extends `xc.c` @kind class, `yc.d` @kind interface, `yc.f` @kind interface, `java.lang.Comparable` @kind interface, `java.io.Serializable` @kind interface {
  `long` `uc.e.o` @AccessFlag PRIVATE_FINAL;
  `int` `uc.e.p` @AccessFlag PRIVATE_FINAL;
}
global `uc.e` `@@uc.e.q` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Luc/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47e5d4.  v0:= new `uc.e`;
  #L47e5d8.  v1:= 0L;
  #L47e5dc.  v3:= 0I;
  #L47e5de.  call `<init>`(v0, v1, v3) @signature `Luc/e;.<init>:(JI)V` @kind direct;
  #L47e5e4.  `@@uc.e.q` @type ^`uc.e` := v0 @kind object;
  #L47e5e8.  v3:= -31557014167219200L;
  #L47e5f2.  call temp:= `f0`(v3, v1) @signature `Luc/e;.f0:(JJ)Luc/e;` @kind static;
  #L47e5f8.  v0:= 31556889864403199L;
  #L47e602.  v2:= 999999999L;
  #L47e608.  call temp:= `f0`(v0, v2) @signature `Luc/e;.f0:(JJ)Luc/e;` @kind static;
  #L47e60e.  v0:= new `uc.e$a`;
  #L47e612.  call `<init>`(v0) @signature `Luc/e$a;.<init>:()V` @kind direct;
  #L47e618.  return @kind void;
}
procedure `void` `<init>`(`uc.e` v0 @kind this, `long` v1 , `int` v3 ) @signature `Luc/e;.<init>:(JI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L47e62c.  call `<init>`(v0) @signature `Lxc/c;.<init>:()V` @kind direct;
  #L47e632.  v0.`uc.e.o` @type ^`long` := v1 @kind wide;
  #L47e636.  v0.`uc.e.p` @type ^`int` := v3;
  #L47e63a.  return @kind void;
}
procedure `uc.e` `V`(`long` v5 , `int` v7 ) @signature `Luc/e;.V:(JI)Luc/e;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47e0a8.  v0:= (`long`) v7 @kind i2l;
  #L47e0aa.  v0:= v0 ^| v5 @kind long;
  #L47e0ac.  v2:= 0L;
  #L47e0b0.  v4:= lcmp(v0, v2);
  #L47e0b4.  if v4 != 0 then goto L47e0be;
  #L47e0b8.  v5:= `@@uc.e.q` @type ^`uc.e` @kind object;
  #L47e0bc.  return v5 @kind object;
  #L47e0be.  v0:= -31557014167219200L;
  #L47e0c8.  v2:= lcmp(v5, v0);
  #L47e0cc.  if v2 < 0 then goto L47e0ee;
  #L47e0d0.  v0:= 31556889864403199L;
  #L47e0da.  v2:= lcmp(v5, v0);
  #L47e0de.  if v2 > 0 then goto L47e0ee;
  #L47e0e2.  v0:= new `uc.e`;
  #L47e0e6.  call `<init>`(v0, v5, v7) @signature `Luc/e;.<init>:(JI)V` @kind direct;
  #L47e0ec.  return v0 @kind object;
  #L47e0ee.  v5:= new `uc.b`;
  #L47e0f2.  v6:= "Instant exceeds minimum or maximum instant" @kind object;
  #L47e0f6.  call `<init>`(v5, v6) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47e0fc.  throw v5;
}
procedure `uc.e` `X`(`yc.e` v4 @kind object) @signature `Luc/e;.X:(Lyc/e;)Luc/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47e110.  v0:= `@@yc.a.U` @type ^`yc.a` @kind object;
  #L47e114.  call temp:= `B`(v4, v0) @signature `Lyc/e;.B:(Lyc/i;)J` @kind interface;
  #L47e11a.  v0:= temp @kind wide;
  #L47e11c.  v2:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L47e120.  call temp:= `F`(v4, v2) @signature `Lyc/e;.F:(Lyc/i;)I` @kind interface;
  #L47e126.  v2:= temp;
  #L47e128.  v2:= (`long`) v2 @kind i2l;
  #L47e12a.  call temp:= `f0`(v0, v2) @signature `Luc/e;.f0:(JJ)Luc/e;` @kind static;
  #L47e130.  v4:= temp @kind object;
  #L47e132.  return v4 @kind object;
  #L47e134.  v0:= Exception @type ^`uc.b` @kind object;
  #L47e136.  v1:= new `uc.b`;
  #L47e13a.  v2:= new `java.lang.StringBuilder`;
  #L47e13e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47e144.  v3:= "Unable to obtain Instant from TemporalAccessor: " @kind object;
  #L47e148.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47e14e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47e154.  v3:= ", type " @kind object;
  #L47e158.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47e15e.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L47e164.  v4:= temp @kind object;
  #L47e166.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L47e16c.  v4:= temp @kind object;
  #L47e16e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47e174.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47e17a.  v4:= temp @kind object;
  #L47e17c.  call `<init>`(v1, v4, v0) @signature `Luc/b;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L47e182.  throw v1;
  catch `uc.b` @[L47e110..L47e132] goto L47e134;
}
procedure `uc.e` `d0`(`long` v3 ) @signature `Luc/e;.d0:(J)Luc/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L47e1ec.  v0:= 1000L;
  #L47e1f0.  call temp:= `e`(v3, v0) @signature `Lxc/d;.e:(JJ)J` @kind static;
  #L47e1f6.  v0:= temp @kind wide;
  #L47e1f8.  v2:= 1000I;
  #L47e1fc.  call temp:= `g`(v3, v2) @signature `Lxc/d;.g:(JI)I` @kind static;
  #L47e202.  v3:= temp;
  #L47e204.  v4:= 1000000I;
  #L47e20a.  v3:= v3 * v4 @kind int;
  #L47e20e.  call temp:= `V`(v0, v3) @signature `Luc/e;.V:(JI)Luc/e;` @kind static;
  #L47e214.  v3:= temp @kind object;
  #L47e216.  return v3 @kind object;
}
procedure `uc.e` `e0`(`long` v1 ) @signature `Luc/e;.e0:(J)Luc/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47e228.  v0:= 0I;
  #L47e22a.  call temp:= `V`(v1, v0) @signature `Luc/e;.V:(JI)Luc/e;` @kind static;
  #L47e230.  v1:= temp @kind object;
  #L47e232.  return v1 @kind object;
}
procedure `uc.e` `f0`(`long` v2 , `long` v4 ) @signature `Luc/e;.f0:(JJ)Luc/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47e244.  v0:= 1000000000L;
  #L47e24a.  call temp:= `e`(v4, v0) @signature `Lxc/d;.e:(JJ)J` @kind static;
  #L47e250.  v0:= temp @kind wide;
  #L47e252.  call temp:= `k`(v2, v0) @signature `Lxc/d;.k:(JJ)J` @kind static;
  #L47e258.  v2:= temp @kind wide;
  #L47e25a.  v0:= 1000000000I;
  #L47e260.  call temp:= `g`(v4, v0) @signature `Lxc/d;.g:(JI)I` @kind static;
  #L47e266.  v4:= temp;
  #L47e268.  call temp:= `V`(v2, v4) @signature `Luc/e;.V:(JI)Luc/e;` @kind static;
  #L47e26e.  v2:= temp @kind object;
  #L47e270.  return v2 @kind object;
}
procedure `uc.e` `g0`(`uc.e` v5 @kind this, `long` v6 , `long` v8 ) @signature `Luc/e;.g0:(JJ)Luc/e;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47e284.  v0:= v6 ^| v8 @kind long;
  #L47e288.  v2:= 0L;
  #L47e28c.  v4:= lcmp(v0, v2);
  #L47e290.  if v4 != 0 then goto L47e296;
  #L47e294.  return v5 @kind object;
  #L47e296.  v0:= v5.`uc.e.o` @type ^`long` @kind wide;
  #L47e29a.  call temp:= `k`(v0, v6) @signature `Lxc/d;.k:(JJ)J` @kind static;
  #L47e2a0.  v6:= temp @kind wide;
  #L47e2a2.  v0:= 1000000000L;
  #L47e2a8.  v2:= v8 / v0 @kind long;
  #L47e2ac.  call temp:= `k`(v6, v2) @signature `Lxc/d;.k:(JJ)J` @kind static;
  #L47e2b2.  v6:= temp @kind wide;
  #L47e2b4.  v8:= v8 %% v0 @kind long;
  #L47e2b6.  v0:= v5.`uc.e.p` @type ^`int`;
  #L47e2ba.  v0:= (`long`) v0 @kind i2l;
  #L47e2bc.  v0:= v0 + v8 @kind long;
  #L47e2be.  call temp:= `f0`(v6, v0) @signature `Luc/e;.f0:(JJ)Luc/e;` @kind static;
  #L47e2c4.  v6:= temp @kind object;
  #L47e2c6.  return v6 @kind object;
}
procedure `uc.e` `l0`(`java.io.DataInput` v4 @kind object) @signature `Luc/e;.l0:(Ljava/io/DataInput;)Luc/e;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47e478.  call temp:= `readLong`(v4) @signature `Ljava/io/DataInput;.readLong:()J` @kind interface;
  #L47e47e.  v0:= temp @kind wide;
  #L47e480.  call temp:= `readInt`(v4) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L47e486.  v4:= temp;
  #L47e488.  v2:= (`long`) v4 @kind i2l;
  #L47e48a.  call temp:= `f0`(v0, v2) @signature `Luc/e;.f0:(JJ)Luc/e;` @kind static;
  #L47e490.  v4:= temp @kind object;
  #L47e492.  return v4 @kind object;
}
procedure `java.lang.Object` `readResolve`(`uc.e` v2 @kind this) @signature `Luc/e;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L47df24.  v0:= new `java.io.InvalidObjectException`;
  #L47df28.  v1:= "Deserialization via serialization delegate" @kind object;
  #L47df2c.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47df32.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`uc.e` v2 @kind this) @signature `Luc/e;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L47df44.  v0:= new `uc.n`;
  #L47df48.  v1:= 2I;
  #L47df4a.  call `<init>`(v0, v1, v2) @signature `Luc/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L47df50.  return v0 @kind object;
}
procedure `long` `B`(`uc.e` v3 @kind this, `yc.i` v4 @kind object) @signature `Luc/e;.B:(Lyc/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47df9c.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L47dfa0.  if v0 == 0 then goto L47e026;
  #L47dfa4.  v0:= `@@uc.e$b.a` @type ^`int`[] @kind object;
  #L47dfa8.  v1:= v4 @kind object;
  #L47dfaa.  v1:= (`yc.a`) v1 @kind object;
  #L47dfae.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L47dfb4.  v1:= temp;
  #L47dfb6.  v0:= v0[v1];
  #L47dfba.  v1:= 1I;
  #L47dfbc.  if v0 == v1 then goto L47e020;
  #L47dfc0.  v1:= 2I;
  #L47dfc2.  if v0 == v1 then goto L47e016;
  #L47dfc6.  v1:= 3I;
  #L47dfc8.  if v0 == v1 then goto L47e006;
  #L47dfcc.  v1:= 4I;
  #L47dfce.  if v0 != v1 then goto L47dfd8;
  #L47dfd2.  v0:= v3.`uc.e.o` @type ^`long` @kind wide;
  #L47dfd6.  return v0 @kind wide;
  #L47dfd8.  v0:= new `yc.m`;
  #L47dfdc.  v1:= new `java.lang.StringBuilder`;
  #L47dfe0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47dfe6.  v2:= "Unsupported field: " @kind object;
  #L47dfea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47dff0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47dff6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47dffc.  v4:= temp @kind object;
  #L47dffe.  call `<init>`(v0, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47e004.  throw v0;
  #L47e006.  v4:= v3.`uc.e.p` @type ^`int`;
  #L47e00a.  v0:= 1000000I;
  #L47e010.  v4:= v4 / v0 @kind int;
  #L47e012.  v0:= (`long`) v4 @kind i2l;
  #L47e014.  return v0 @kind wide;
  #L47e016.  v4:= v3.`uc.e.p` @type ^`int`;
  #L47e01a.  v4:= v4 / 1000;
  #L47e01e.  goto L47e012;
  #L47e020.  v4:= v3.`uc.e.p` @type ^`int`;
  #L47e024.  goto L47e012;
  #L47e026.  call temp:= `o`(v4, v3) @signature `Lyc/i;.o:(Lyc/e;)J` @kind interface;
  #L47e02c.  v0:= temp @kind wide;
  #L47e02e.  return v0 @kind wide;
}
procedure `yc.d` `D`(`uc.e` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Luc/e;.D:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L47e6c4.  call temp:= `h0`(v0, v1, v3) @signature `Luc/e;.h0:(JLyc/l;)Luc/e;` @kind virtual;
  #L47e6ca.  v1:= temp @kind object;
  #L47e6cc.  return v1 @kind object;
}
procedure `int` `F`(`uc.e` v3 @kind this, `yc.i` v4 @kind object) @signature `Luc/e;.F:(Lyc/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47ddbc.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L47ddc0.  if v0 == 0 then goto L47de38;
  #L47ddc4.  v0:= `@@uc.e$b.a` @type ^`int`[] @kind object;
  #L47ddc8.  v1:= v4 @kind object;
  #L47ddca.  v1:= (`yc.a`) v1 @kind object;
  #L47ddce.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L47ddd4.  v1:= temp;
  #L47ddd6.  v0:= v0[v1];
  #L47ddda.  v1:= 1I;
  #L47dddc.  if v0 == v1 then goto L47de32;
  #L47dde0.  v1:= 2I;
  #L47dde2.  if v0 == v1 then goto L47de28;
  #L47dde6.  v1:= 3I;
  #L47dde8.  if v0 != v1 then goto L47ddfa;
  #L47ddec.  v4:= v3.`uc.e.p` @type ^`int`;
  #L47ddf0.  v0:= 1000000I;
  #L47ddf6.  v4:= v4 / v0 @kind int;
  #L47ddf8.  return v4;
  #L47ddfa.  v0:= new `yc.m`;
  #L47ddfe.  v1:= new `java.lang.StringBuilder`;
  #L47de02.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47de08.  v2:= "Unsupported field: " @kind object;
  #L47de0c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47de12.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47de18.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47de1e.  v4:= temp @kind object;
  #L47de20.  call `<init>`(v0, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47de26.  throw v0;
  #L47de28.  v4:= v3.`uc.e.p` @type ^`int`;
  #L47de2c.  v4:= v4 / 1000;
  #L47de30.  return v4;
  #L47de32.  v4:= v3.`uc.e.p` @type ^`int`;
  #L47de36.  return v4;
  #L47de38.  call temp:= `t`(v3, v4) @signature `Luc/e;.t:(Lyc/i;)Lyc/n;` @kind virtual;
  #L47de3e.  v0:= temp @kind object;
  #L47de40.  call temp:= `o`(v4, v3) @signature `Lyc/i;.o:(Lyc/e;)J` @kind interface;
  #L47de46.  v1:= temp @kind wide;
  #L47de48.  call temp:= `a`(v0, v1, v4) @signature `Lyc/n;.a:(JLyc/i;)I` @kind virtual;
  #L47de4e.  v4:= temp;
  #L47de50.  return v4;
}
procedure `yc.d` `I`(`uc.e` v3 @kind this, `yc.d` v4 @kind object) @signature `Luc/e;.I:(Lyc/d;)Lyc/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47e674.  v0:= `@@yc.a.U` @type ^`yc.a` @kind object;
  #L47e678.  v1:= v3.`uc.e.o` @type ^`long` @kind wide;
  #L47e67c.  call temp:= `P`(v4, v0, v1) @signature `Lyc/d;.P:(Lyc/i;J)Lyc/d;` @kind interface;
  #L47e682.  v4:= temp @kind object;
  #L47e684.  v0:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L47e688.  v1:= v3.`uc.e.p` @type ^`int`;
  #L47e68c.  v1:= (`long`) v1 @kind i2l;
  #L47e68e.  call temp:= `P`(v4, v0, v1) @signature `Lyc/d;.P:(Lyc/i;J)Lyc/d;` @kind interface;
  #L47e694.  v4:= temp @kind object;
  #L47e696.  return v4 @kind object;
}
procedure `yc.d` `L`(`uc.e` v0 @kind this, `yc.f` v1 @kind object) @signature `Luc/e;.L:(Lyc/f;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L47e6e0.  call temp:= `n0`(v0, v1) @signature `Luc/e;.n0:(Lyc/f;)Luc/e;` @kind virtual;
  #L47e6e6.  v1:= temp @kind object;
  #L47e6e8.  return v1 @kind object;
}
procedure `yc.d` `P`(`uc.e` v0 @kind this, `yc.i` v1 @kind object, `long` v2 ) @signature `Luc/e;.P:(Lyc/i;J)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L47e6fc.  call temp:= `o0`(v0, v1, v2) @signature `Luc/e;.o0:(Lyc/i;J)Luc/e;` @kind virtual;
  #L47e702.  v1:= temp @kind object;
  #L47e704.  return v1 @kind object;
}
procedure `int` `T`(`uc.e` v4 @kind this, `uc.e` v5 @kind object) @signature `Luc/e;.T:(Luc/e;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47dd88.  v0:= v4.`uc.e.o` @type ^`long` @kind wide;
  #L47dd8c.  v2:= v5.`uc.e.o` @type ^`long` @kind wide;
  #L47dd90.  call temp:= `b`(v0, v2) @signature `Lxc/d;.b:(JJ)I` @kind static;
  #L47dd96.  v0:= temp;
  #L47dd98.  if v0 == 0 then goto L47dd9e;
  #L47dd9c.  return v0;
  #L47dd9e.  v0:= v4.`uc.e.p` @type ^`int`;
  #L47dda2.  v5:= v5.`uc.e.p` @type ^`int`;
  #L47dda6.  v0:= v0 - v5 @kind int;
  #L47dda8.  return v0;
}
procedure `long` `a0`(`uc.e` v2 @kind this) @signature `Luc/e;.a0:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47df84.  v0:= v2.`uc.e.o` @type ^`long` @kind wide;
  #L47df88.  return v0 @kind wide;
}
procedure `int` `b0`(`uc.e` v1 @kind this) @signature `Luc/e;.b0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47de64.  v0:= v1.`uc.e.p` @type ^`int`;
  #L47de68.  return v0;
}
procedure `uc.e` `c0`(`uc.e` v3 @kind this, `long` v4 , `yc.l` v6 @kind object) @signature `Luc/e;.c0:(JLyc/l;)Luc/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47e1a4.  v0:= -9223372036854775808L;
  #L47e1a8.  v2:= lcmp(v4, v0);
  #L47e1ac.  if v2 != 0 then goto L47e1d0;
  #L47e1b0.  v4:= 9223372036854775807L;
  #L47e1ba.  call temp:= `h0`(v3, v4, v6) @signature `Luc/e;.h0:(JLyc/l;)Luc/e;` @kind virtual;
  #L47e1c0.  v4:= temp @kind object;
  #L47e1c2.  v0:= 1L;
  #L47e1c6.  call temp:= `h0`(v4, v0, v6) @signature `Luc/e;.h0:(JLyc/l;)Luc/e;` @kind virtual;
  #L47e1cc.  v4:= temp @kind object;
  #L47e1ce.  goto L47e1da;
  #L47e1d0.  v4:= -v4 @kind long;
  #L47e1d2.  call temp:= `h0`(v3, v4, v6) @signature `Luc/e;.h0:(JLyc/l;)Luc/e;` @kind virtual;
  #L47e1d8.  v4:= temp @kind object;
  #L47e1da.  return v4 @kind object;
}
procedure `int` `compareTo`(`uc.e` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Luc/e;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L47dd68.  v1:= (`uc.e`) v1 @kind object;
  #L47dd6c.  call temp:= `T`(v0, v1) @signature `Luc/e;.T:(Luc/e;)I` @kind virtual;
  #L47dd72.  v1:= temp;
  #L47dd74.  return v1;
}
procedure `boolean` `d`(`uc.e` v3 @kind this, `yc.i` v4 @kind object) @signature `Luc/e;.d:(Lyc/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47dd10.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L47dd14.  v1:= 1I;
  #L47dd16.  v2:= 0I;
  #L47dd18.  if v0 == 0 then goto L47dd42;
  #L47dd1c.  v0:= `@@yc.a.U` @type ^`yc.a` @kind object;
  #L47dd20.  if v4 == v0 then goto L47dd40;
  #L47dd24.  v0:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L47dd28.  if v4 == v0 then goto L47dd40;
  #L47dd2c.  v0:= `@@yc.a.u` @type ^`yc.a` @kind object;
  #L47dd30.  if v4 == v0 then goto L47dd40;
  #L47dd34.  v0:= `@@yc.a.w` @type ^`yc.a` @kind object;
  #L47dd38.  if v4 != v0 then goto L47dd3e;
  #L47dd3c.  goto L47dd40;
  #L47dd3e.  v1:= 0I;
  #L47dd40.  return v1;
  #L47dd42.  if v4 == 0 then goto L47dd54;
  #L47dd46.  call temp:= `j`(v4, v3) @signature `Lyc/i;.j:(Lyc/e;)Z` @kind interface;
  #L47dd4c.  v4:= temp;
  #L47dd4e.  if v4 == 0 then goto L47dd54;
  #L47dd52.  goto L47dd56;
  #L47dd54.  v1:= 0I;
  #L47dd56.  return v1;
}
procedure `boolean` `equals`(`uc.e` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Luc/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47dcc4.  v0:= 1I;
  #L47dcc6.  if v7 != v8 then goto L47dccc;
  #L47dcca.  return v0;
  #L47dccc.  v1:= instanceof @variable v8 @type ^`uc.e` @kind boolean;
  #L47dcd0.  v2:= 0I;
  #L47dcd2.  if v1 == 0 then goto L47dcfc;
  #L47dcd6.  v8:= (`uc.e`) v8 @kind object;
  #L47dcda.  v3:= v7.`uc.e.o` @type ^`long` @kind wide;
  #L47dcde.  v5:= v8.`uc.e.o` @type ^`long` @kind wide;
  #L47dce2.  v1:= lcmp(v3, v5);
  #L47dce6.  if v1 != 0 then goto L47dcf8;
  #L47dcea.  v1:= v7.`uc.e.p` @type ^`int`;
  #L47dcee.  v8:= v8.`uc.e.p` @type ^`int`;
  #L47dcf2.  if v1 != v8 then goto L47dcf8;
  #L47dcf6.  goto L47dcfa;
  #L47dcf8.  v0:= 0I;
  #L47dcfa.  return v0;
  #L47dcfc.  return v2;
}
procedure `uc.e` `h0`(`uc.e` v4 @kind this, `long` v5 , `yc.l` v7 @kind object) @signature `Luc/e;.h0:(JLyc/l;)Luc/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47e2d8.  v0:= instanceof @variable v7 @type ^`yc.b` @kind boolean;
  #L47e2dc.  if v0 == 0 then goto L47e3c2;
  #L47e2e0.  v0:= `@@uc.e$b.b` @type ^`int`[] @kind object;
  #L47e2e4.  v1:= v7 @kind object;
  #L47e2e6.  v1:= (`yc.b`) v1 @kind object;
  #L47e2ea.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L47e2f0.  v1:= temp;
  #L47e2f2.  v0:= v0[v1];
  #L47e2f6.  goto L47e3d0;
  #L47e2fc.  v5:= new `yc.m`;
  #L47e300.  v6:= new `java.lang.StringBuilder`;
  #L47e304.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47e30a.  v0:= "Unsupported unit: " @kind object;
  #L47e30e.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47e314.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47e31a.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47e320.  v6:= temp @kind object;
  #L47e322.  call `<init>`(v5, v6) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47e328.  throw v5;
  #L47e32a.  v7:= 86400I;
  #L47e330.  call temp:= `l`(v5, v7) @signature `Lxc/d;.l:(JI)J` @kind static;
  #L47e336.  v5:= temp @kind wide;
  #L47e338.  call temp:= `k0`(v4, v5) @signature `Luc/e;.k0:(J)Luc/e;` @kind virtual;
  #L47e33e.  v5:= temp @kind object;
  #L47e340.  return v5 @kind object;
  #L47e342.  v7:= 43200I;
  #L47e348.  call temp:= `l`(v5, v7) @signature `Lxc/d;.l:(JI)J` @kind static;
  #L47e34e.  v5:= temp @kind wide;
  #L47e350.  call temp:= `k0`(v4, v5) @signature `Luc/e;.k0:(J)Luc/e;` @kind virtual;
  #L47e356.  v5:= temp @kind object;
  #L47e358.  return v5 @kind object;
  #L47e35a.  v7:= 3600I;
  #L47e35e.  call temp:= `l`(v5, v7) @signature `Lxc/d;.l:(JI)J` @kind static;
  #L47e364.  v5:= temp @kind wide;
  #L47e366.  call temp:= `k0`(v4, v5) @signature `Luc/e;.k0:(J)Luc/e;` @kind virtual;
  #L47e36c.  v5:= temp @kind object;
  #L47e36e.  return v5 @kind object;
  #L47e370.  v7:= 60I;
  #L47e374.  call temp:= `l`(v5, v7) @signature `Lxc/d;.l:(JI)J` @kind static;
  #L47e37a.  v5:= temp @kind wide;
  #L47e37c.  call temp:= `k0`(v4, v5) @signature `Luc/e;.k0:(J)Luc/e;` @kind virtual;
  #L47e382.  v5:= temp @kind object;
  #L47e384.  return v5 @kind object;
  #L47e386.  call temp:= `k0`(v4, v5) @signature `Luc/e;.k0:(J)Luc/e;` @kind virtual;
  #L47e38c.  v5:= temp @kind object;
  #L47e38e.  return v5 @kind object;
  #L47e390.  call temp:= `i0`(v4, v5) @signature `Luc/e;.i0:(J)Luc/e;` @kind virtual;
  #L47e396.  v5:= temp @kind object;
  #L47e398.  return v5 @kind object;
  #L47e39a.  v0:= 1000000L;
  #L47e3a0.  v2:= v5 / v0 @kind long;
  #L47e3a4.  v5:= v5 %% v0 @kind long;
  #L47e3a6.  v0:= 1000L;
  #L47e3aa.  v5:= v5 * v0 @kind long;
  #L47e3ae.  call temp:= `g0`(v4, v2, v5) @signature `Luc/e;.g0:(JJ)Luc/e;` @kind direct;
  #L47e3b4.  v5:= temp @kind object;
  #L47e3b6.  return v5 @kind object;
  #L47e3b8.  call temp:= `j0`(v4, v5) @signature `Luc/e;.j0:(J)Luc/e;` @kind virtual;
  #L47e3be.  v5:= temp @kind object;
  #L47e3c0.  return v5 @kind object;
  #L47e3c2.  call temp:= `d`(v7, v4, v5) @signature `Lyc/l;.d:(Lyc/d;J)Lyc/d;` @kind interface;
  #L47e3c8.  v5:= temp @kind object;
  #L47e3ca.  v5:= (`uc.e`) v5 @kind object;
  #L47e3ce.  return v5 @kind object;
  #L47e3d0.  switch v0
                  | 1 => goto L47e3b8
                  | 2 => goto L47e39a
                  | 3 => goto L47e390
                  | 4 => goto L47e386
                  | 5 => goto L47e370
                  | 6 => goto L47e35a
                  | 7 => goto L47e342
                  | 8 => goto L47e32a
                  | else => goto L47e2fc;
}
procedure `int` `hashCode`(`uc.e` v4 @kind this) @signature `Luc/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47de7c.  v0:= v4.`uc.e.o` @type ^`long` @kind wide;
  #L47de80.  v2:= 32I;
  #L47de84.  v2:= v0 ^>> v2 @kind long;
  #L47de88.  v0:= v0 ^~ v2 @kind long;
  #L47de8a.  v1:= (`int`) v0 @kind l2i;
  #L47de8c.  v0:= v4.`uc.e.p` @type ^`int`;
  #L47de90.  v0:= v0 * 51;
  #L47de94.  v1:= v1 + v0 @kind int;
  #L47de96.  return v1;
}
procedure `uc.e` `i0`(`uc.e` v4 @kind this, `long` v5 ) @signature `Luc/e;.i0:(J)Luc/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47e408.  v0:= 1000L;
  #L47e40c.  v2:= v5 / v0 @kind long;
  #L47e410.  v5:= v5 %% v0 @kind long;
  #L47e412.  v0:= 1000000L;
  #L47e418.  v5:= v5 * v0 @kind long;
  #L47e41c.  call temp:= `g0`(v4, v2, v5) @signature `Luc/e;.g0:(JJ)Luc/e;` @kind direct;
  #L47e422.  v5:= temp @kind object;
  #L47e424.  return v5 @kind object;
}
procedure `java.lang.Object` `j`(`uc.e` v1 @kind this, `yc.k` v2 @kind object) @signature `Luc/e;.j:(Lyc/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47dea8.  call temp:= `e`() @signature `Lyc/j;.e:()Lyc/k;` @kind static;
  #L47deae.  v0:= temp @kind object;
  #L47deb0.  if v2 != v0 then goto L47deba;
  #L47deb4.  v2:= `@@yc.b.p` @type ^`yc.b` @kind object;
  #L47deb8.  return v2 @kind object;
  #L47deba.  call temp:= `b`() @signature `Lyc/j;.b:()Lyc/k;` @kind static;
  #L47dec0.  v0:= temp @kind object;
  #L47dec2.  if v2 == v0 then goto L47df0e;
  #L47dec6.  call temp:= `c`() @signature `Lyc/j;.c:()Lyc/k;` @kind static;
  #L47decc.  v0:= temp @kind object;
  #L47dece.  if v2 == v0 then goto L47df0e;
  #L47ded2.  call temp:= `a`() @signature `Lyc/j;.a:()Lyc/k;` @kind static;
  #L47ded8.  v0:= temp @kind object;
  #L47deda.  if v2 == v0 then goto L47df0e;
  #L47dede.  call temp:= `g`() @signature `Lyc/j;.g:()Lyc/k;` @kind static;
  #L47dee4.  v0:= temp @kind object;
  #L47dee6.  if v2 == v0 then goto L47df0e;
  #L47deea.  call temp:= `f`() @signature `Lyc/j;.f:()Lyc/k;` @kind static;
  #L47def0.  v0:= temp @kind object;
  #L47def2.  if v2 == v0 then goto L47df0e;
  #L47def6.  call temp:= `d`() @signature `Lyc/j;.d:()Lyc/k;` @kind static;
  #L47defc.  v0:= temp @kind object;
  #L47defe.  if v2 != v0 then goto L47df04;
  #L47df02.  goto L47df0e;
  #L47df04.  call temp:= `a`(v2, v1) @signature `Lyc/k;.a:(Lyc/e;)Ljava/lang/Object;` @kind interface;
  #L47df0a.  v2:= temp @kind object;
  #L47df0c.  return v2 @kind object;
  #L47df0e.  v2:= 0I;
  #L47df10.  return v2 @kind object;
}
procedure `uc.e` `j0`(`uc.e` v2 @kind this, `long` v3 ) @signature `Luc/e;.j0:(J)Luc/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47e438.  v0:= 0L;
  #L47e43c.  call temp:= `g0`(v2, v0, v3) @signature `Luc/e;.g0:(JJ)Luc/e;` @kind direct;
  #L47e442.  v3:= temp @kind object;
  #L47e444.  return v3 @kind object;
}
procedure `uc.e` `k0`(`uc.e` v2 @kind this, `long` v3 ) @signature `Luc/e;.k0:(J)Luc/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47e458.  v0:= 0L;
  #L47e45c.  call temp:= `g0`(v2, v3, v0) @signature `Luc/e;.g0:(JJ)Luc/e;` @kind direct;
  #L47e462.  v3:= temp @kind object;
  #L47e464.  return v3 @kind object;
}
procedure `long` `m0`(`uc.e` v8 @kind this) @signature `Luc/e;.m0:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L47e040.  v0:= v8.`uc.e.o` @type ^`long` @kind wide;
  #L47e044.  v2:= 1000000I;
  #L47e04a.  v3:= 1000L;
  #L47e04e.  v5:= 0L;
  #L47e052.  v7:= lcmp(v0, v5);
  #L47e056.  if v7 < 0 then goto L47e074;
  #L47e05a.  call temp:= `m`(v0, v3) @signature `Lxc/d;.m:(JJ)J` @kind static;
  #L47e060.  v0:= temp @kind wide;
  #L47e062.  v3:= v8.`uc.e.p` @type ^`int`;
  #L47e066.  v3:= v3 / v2 @kind int;
  #L47e068.  v2:= (`long`) v3 @kind i2l;
  #L47e06a.  call temp:= `k`(v0, v2) @signature `Lxc/d;.k:(JJ)J` @kind static;
  #L47e070.  v0:= temp @kind wide;
  #L47e072.  return v0 @kind wide;
  #L47e074.  v5:= 1L;
  #L47e078.  v0:= v0 + v5 @kind long;
  #L47e07a.  call temp:= `m`(v0, v3) @signature `Lxc/d;.m:(JJ)J` @kind static;
  #L47e080.  v0:= temp @kind wide;
  #L47e082.  v5:= v8.`uc.e.p` @type ^`int`;
  #L47e086.  v5:= v5 / v2 @kind int;
  #L47e088.  v5:= (`long`) v5 @kind i2l;
  #L47e08a.  v3:= v3 - v5 @kind long;
  #L47e08c.  call temp:= `o`(v0, v3) @signature `Lxc/d;.o:(JJ)J` @kind static;
  #L47e092.  v0:= temp @kind wide;
  #L47e094.  return v0 @kind wide;
}
procedure `uc.e` `n0`(`uc.e` v0 @kind this, `yc.f` v1 @kind object) @signature `Luc/e;.n0:(Lyc/f;)Luc/e;` @AccessFlag PUBLIC {
    temp;

  #L47e4a4.  call temp:= `I`(v1, v0) @signature `Lyc/f;.I:(Lyc/d;)Lyc/d;` @kind interface;
  #L47e4aa.  v1:= temp @kind object;
  #L47e4ac.  v1:= (`uc.e`) v1 @kind object;
  #L47e4b0.  return v1 @kind object;
}
procedure `uc.e` `o0`(`uc.e` v2 @kind this, `yc.i` v3 @kind object, `long` v4 ) @signature `Luc/e;.o0:(Lyc/i;J)Luc/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47e4c4.  v0:= instanceof @variable v3 @type ^`yc.a` @kind boolean;
  #L47e4c8.  if v0 == 0 then goto L47e5b4;
  #L47e4cc.  v0:= v3 @kind object;
  #L47e4ce.  v0:= (`yc.a`) v0 @kind object;
  #L47e4d2.  call temp:= `s`(v0, v4) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L47e4d8.  v1:= `@@uc.e$b.a` @type ^`int`[] @kind object;
  #L47e4dc.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L47e4e2.  v0:= temp;
  #L47e4e4.  v0:= v1[v0];
  #L47e4e8.  v1:= 1I;
  #L47e4ea.  if v0 == v1 then goto L47e592;
  #L47e4ee.  v1:= 2I;
  #L47e4f0.  if v0 == v1 then goto L47e572;
  #L47e4f4.  v1:= 3I;
  #L47e4f6.  if v0 == v1 then goto L47e54c;
  #L47e4fa.  v1:= 4I;
  #L47e4fc.  if v0 != v1 then goto L47e51e;
  #L47e500.  v0:= v2.`uc.e.o` @type ^`long` @kind wide;
  #L47e504.  v3:= lcmp(v4, v0);
  #L47e508.  if v3 == 0 then goto L47e51a;
  #L47e50c.  v3:= v2.`uc.e.p` @type ^`int`;
  #L47e510.  call temp:= `V`(v4, v3) @signature `Luc/e;.V:(JI)Luc/e;` @kind static;
  #L47e516.  v3:= temp @kind object;
  #L47e518.  goto L47e51c;
  #L47e51a.  v3:= v2 @kind object;
  #L47e51c.  return v3 @kind object;
  #L47e51e.  v4:= new `yc.m`;
  #L47e522.  v5:= new `java.lang.StringBuilder`;
  #L47e526.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47e52c.  v0:= "Unsupported field: " @kind object;
  #L47e530.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47e536.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47e53c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47e542.  v3:= temp @kind object;
  #L47e544.  call `<init>`(v4, v3) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47e54a.  throw v4;
  #L47e54c.  v3:= (`int`) v4 @kind l2i;
  #L47e54e.  v4:= 1000000I;
  #L47e554.  v3:= v3 * v4 @kind int;
  #L47e558.  v4:= v2.`uc.e.p` @type ^`int`;
  #L47e55c.  if v3 == v4 then goto L47e56e;
  #L47e560.  v4:= v2.`uc.e.o` @type ^`long` @kind wide;
  #L47e564.  call temp:= `V`(v4, v3) @signature `Luc/e;.V:(JI)Luc/e;` @kind static;
  #L47e56a.  v3:= temp @kind object;
  #L47e56c.  goto L47e570;
  #L47e56e.  v3:= v2 @kind object;
  #L47e570.  return v3 @kind object;
  #L47e572.  v3:= (`int`) v4 @kind l2i;
  #L47e574.  v3:= v3 * 1000;
  #L47e578.  v4:= v2.`uc.e.p` @type ^`int`;
  #L47e57c.  if v3 == v4 then goto L47e58e;
  #L47e580.  v4:= v2.`uc.e.o` @type ^`long` @kind wide;
  #L47e584.  call temp:= `V`(v4, v3) @signature `Luc/e;.V:(JI)Luc/e;` @kind static;
  #L47e58a.  v3:= temp @kind object;
  #L47e58c.  goto L47e590;
  #L47e58e.  v3:= v2 @kind object;
  #L47e590.  return v3 @kind object;
  #L47e592.  v3:= v2.`uc.e.p` @type ^`int`;
  #L47e596.  v0:= (`long`) v3 @kind i2l;
  #L47e598.  v3:= lcmp(v4, v0);
  #L47e59c.  if v3 == 0 then goto L47e5b0;
  #L47e5a0.  v0:= v2.`uc.e.o` @type ^`long` @kind wide;
  #L47e5a4.  v3:= (`int`) v4 @kind l2i;
  #L47e5a6.  call temp:= `V`(v0, v3) @signature `Luc/e;.V:(JI)Luc/e;` @kind static;
  #L47e5ac.  v3:= temp @kind object;
  #L47e5ae.  goto L47e5b2;
  #L47e5b0.  v3:= v2 @kind object;
  #L47e5b2.  return v3 @kind object;
  #L47e5b4.  call temp:= `e`(v3, v2, v4) @signature `Lyc/i;.e:(Lyc/d;J)Lyc/d;` @kind interface;
  #L47e5ba.  v3:= temp @kind object;
  #L47e5bc.  v3:= (`uc.e`) v3 @kind object;
  #L47e5c0.  return v3 @kind object;
}
procedure `void` `p0`(`uc.e` v2 @kind this, `java.io.DataOutput` v3 @kind object) @signature `Luc/e;.p0:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L47e64c.  v0:= v2.`uc.e.o` @type ^`long` @kind wide;
  #L47e650.  call `writeLong`(v3, v0) @signature `Ljava/io/DataOutput;.writeLong:(J)V` @kind interface;
  #L47e656.  v0:= v2.`uc.e.p` @type ^`int`;
  #L47e65a.  call `writeInt`(v3, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L47e660.  return @kind void;
}
procedure `yc.d` `r`(`uc.e` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Luc/e;.r:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L47e6a8.  call temp:= `c0`(v0, v1, v3) @signature `Luc/e;.c0:(JLyc/l;)Luc/e;` @kind virtual;
  #L47e6ae.  v1:= temp @kind object;
  #L47e6b0.  return v1 @kind object;
}
procedure `yc.n` `t`(`uc.e` v0 @kind this, `yc.i` v1 @kind object) @signature `Luc/e;.t:(Lyc/i;)Lyc/n;` @AccessFlag PUBLIC {
    temp;

  #L47e718.  call temp:= `t`(v0, v1) @signature `Lxc/c;.t:(Lyc/i;)Lyc/n;` @kind super;
  #L47e71e.  v1:= temp @kind object;
  #L47e720.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`uc.e` v1 @kind this) @signature `Luc/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47df64.  v0:= `@@wc.b.l` @type ^`wc.b` @kind object;
  #L47df68.  call temp:= `b`(v0, v1) @signature `Lwc/b;.b:(Lyc/e;)Ljava/lang/String;` @kind virtual;
  #L47df6e.  v0:= temp @kind object;
  #L47df70.  return v0 @kind object;
}
