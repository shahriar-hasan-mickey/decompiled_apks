record `uc.s` @kind class @AccessFlag FINAL extends `uc.q` @kind class {
  `java.lang.String` `uc.s.o` @AccessFlag PRIVATE_FINAL;
  `zc.f` `uc.s.p` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
global `java.util.regex.Pattern` `@@uc.s.q` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Luc/s;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4872ac.  v0:= "[A-Za-z][A-Za-z0-9~/._+-]+" @kind object;
  #L4872b0.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L4872b6.  v0:= temp @kind object;
  #L4872b8.  `@@uc.s.q` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L4872bc.  return @kind void;
}
procedure `void` `<init>`(`uc.s` v0 @kind this, `java.lang.String` v1 @kind object, `zc.f` v2 @kind object) @signature `Luc/s;.<init>:(Ljava/lang/String;Lzc/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4872d0.  call `<init>`(v0) @signature `Luc/q;.<init>:()V` @kind direct;
  #L4872d6.  v0.`uc.s.o` @type ^`java.lang.String` := v1 @kind object;
  #L4872da.  v0.`uc.s.p` @type ^`zc.f` := v2 @kind object;
  #L4872de.  return @kind void;
}
procedure `uc.q` `K`(`java.io.DataInput` v0 @kind object) @signature `Luc/s;.K:(Ljava/io/DataInput;)Luc/q;` @AccessFlag STATIC {
    temp;

  #L486fb4.  call temp:= `readUTF`(v0) @signature `Ljava/io/DataInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L486fba.  v0:= temp @kind object;
  #L486fbc.  call temp:= `x`(v0) @signature `Luc/s;.x:(Ljava/lang/String;)Luc/s;` @kind static;
  #L486fc2.  v0:= temp @kind object;
  #L486fc4.  return v0 @kind object;
}
procedure `java.lang.Object` `readResolve`(`uc.s` v2 @kind this) @signature `Luc/s;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L486f5c.  v0:= new `java.io.InvalidObjectException`;
  #L486f60.  v1:= "Deserialization via serialization delegate" @kind object;
  #L486f64.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L486f6a.  throw v0;
}
procedure `uc.s` `v`(`java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Luc/s;.v:(Ljava/lang/String;Z)Luc/s;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L486fd8.  v0:= "zoneId" @kind object;
  #L486fdc.  call temp:= `i`(v3, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L486fe2.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L486fe8.  v0:= temp;
  #L486fea.  v1:= 2I;
  #L486fec.  if v0 < v1 then goto L487048;
  #L486ff0.  v0:= `@@uc.s.q` @type ^`java.util.regex.Pattern` @kind object;
  #L486ff4.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L486ffa.  v0:= temp @kind object;
  #L486ffc.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L487002.  v0:= temp;
  #L487004.  if v0 == 0 then goto L487048;
  #L487008.  v0:= 0I;
  #L48700a.  v1:= 1I;
  #L48700c.  call temp:= `c`(v3, v1) @signature `Lzc/i;.c:(Ljava/lang/String;Z)Lzc/f;` @kind static;
  #L487012.  v0:= temp @kind object;
  #L487014.  goto L48703a;
  #L487016.  v1:= Exception @type ^`zc.g` @kind object;
  #L487018.  v2:= "GMT0" @kind object;
  #L48701c.  call temp:= `equals`(v3, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L487022.  v2:= temp;
  #L487024.  if v2 == 0 then goto L487036;
  #L487028.  v4:= `@@uc.r.s` @type ^`uc.r` @kind object;
  #L48702c.  call temp:= `h`(v4) @signature `Luc/r;.h:()Lzc/f;` @kind virtual;
  #L487032.  v0:= temp @kind object;
  #L487034.  goto L48703a;
  #L487036.  if v4 != 0 then goto L487046;
  #L48703a.  v4:= new `uc.s`;
  #L48703e.  call `<init>`(v4, v3, v0) @signature `Luc/s;.<init>:(Ljava/lang/String;Lzc/f;)V` @kind direct;
  #L487044.  return v4 @kind object;
  #L487046.  throw v1;
  #L487048.  v4:= new `uc.b`;
  #L48704c.  v0:= new `java.lang.StringBuilder`;
  #L487050.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L487056.  v1:= "Invalid ID for region-based ZoneId, invalid format: " @kind object;
  #L48705a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L487060.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L487066.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48706c.  v3:= temp @kind object;
  #L48706e.  call `<init>`(v4, v3) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L487074.  throw v4;
  catch `zc.g` @[L48700c..L487014] goto L487016;
}
procedure `java.lang.Object` `writeReplace`(`uc.s` v2 @kind this) @signature `Luc/s;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L486f7c.  v0:= new `uc.n`;
  #L486f80.  v1:= 7I;
  #L486f82.  call `<init>`(v0, v1, v2) @signature `Luc/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L486f88.  return v0 @kind object;
}
procedure `uc.s` `x`(`java.lang.String` v5 @kind object) @signature `Luc/s;.x:(Ljava/lang/String;)Luc/s;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L487098.  v0:= "Z" @kind object;
  #L48709c.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4870a2.  v0:= temp;
  #L4870a4.  if v0 != 0 then goto L48726c;
  #L4870a8.  v0:= "+" @kind object;
  #L4870ac.  call temp:= `startsWith`(v5, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4870b2.  v0:= temp;
  #L4870b4.  if v0 != 0 then goto L48726c;
  #L4870b8.  v0:= "-" @kind object;
  #L4870bc.  call temp:= `startsWith`(v5, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4870c2.  v0:= temp;
  #L4870c4.  if v0 != 0 then goto L48726c;
  #L4870c8.  v0:= "UTC" @kind object;
  #L4870cc.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4870d2.  v0:= temp;
  #L4870d4.  if v0 != 0 then goto L487254;
  #L4870d8.  v0:= "GMT" @kind object;
  #L4870dc.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4870e2.  v0:= temp;
  #L4870e4.  if v0 != 0 then goto L487254;
  #L4870e8.  v0:= "UT" @kind object;
  #L4870ec.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4870f2.  v1:= temp;
  #L4870f4.  if v1 == 0 then goto L4870fc;
  #L4870f8.  goto L487254;
  #L4870fc.  v1:= "UTC+" @kind object;
  #L487100.  call temp:= `startsWith`(v5, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L487106.  v1:= temp;
  #L487108.  v2:= 0I;
  #L48710a.  if v1 != 0 then goto L4871d8;
  #L48710e.  v1:= "GMT+" @kind object;
  #L487112.  call temp:= `startsWith`(v5, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L487118.  v1:= temp;
  #L48711a.  if v1 != 0 then goto L4871d8;
  #L48711e.  v1:= "UTC-" @kind object;
  #L487122.  call temp:= `startsWith`(v5, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L487128.  v1:= temp;
  #L48712a.  if v1 != 0 then goto L4871d8;
  #L48712e.  v1:= "GMT-" @kind object;
  #L487132.  call temp:= `startsWith`(v5, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L487138.  v1:= temp;
  #L48713a.  if v1 == 0 then goto L487140;
  #L48713e.  goto L4871d8;
  #L487140.  v1:= "UT+" @kind object;
  #L487144.  call temp:= `startsWith`(v5, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L48714a.  v1:= temp;
  #L48714c.  if v1 != 0 then goto L48716c;
  #L487150.  v1:= "UT-" @kind object;
  #L487154.  call temp:= `startsWith`(v5, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L48715a.  v1:= temp;
  #L48715c.  if v1 == 0 then goto L487162;
  #L487160.  goto L48716c;
  #L487162.  call temp:= `v`(v5, v2) @signature `Luc/s;.v:(Ljava/lang/String;Z)Luc/s;` @kind static;
  #L487168.  v5:= temp @kind object;
  #L48716a.  return v5 @kind object;
  #L48716c.  v1:= 2I;
  #L48716e.  call temp:= `substring`(v5, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L487174.  v5:= temp @kind object;
  #L487176.  call temp:= `T`(v5) @signature `Luc/r;.T:(Ljava/lang/String;)Luc/r;` @kind static;
  #L48717c.  v5:= temp @kind object;
  #L48717e.  call temp:= `S`(v5) @signature `Luc/r;.S:()I` @kind virtual;
  #L487184.  v1:= temp;
  #L487186.  if v1 != 0 then goto L48719e;
  #L48718a.  v1:= new `uc.s`;
  #L48718e.  call temp:= `h`(v5) @signature `Luc/r;.h:()Lzc/f;` @kind virtual;
  #L487194.  v5:= temp @kind object;
  #L487196.  call `<init>`(v1, v0, v5) @signature `Luc/s;.<init>:(Ljava/lang/String;Lzc/f;)V` @kind direct;
  #L48719c.  return v1 @kind object;
  #L48719e.  v1:= new `uc.s`;
  #L4871a2.  v2:= new `java.lang.StringBuilder`;
  #L4871a6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4871ac.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4871b2.  call temp:= `e`(v5) @signature `Luc/r;.e:()Ljava/lang/String;` @kind virtual;
  #L4871b8.  v0:= temp @kind object;
  #L4871ba.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4871c0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4871c6.  v0:= temp @kind object;
  #L4871c8.  call temp:= `h`(v5) @signature `Luc/r;.h:()Lzc/f;` @kind virtual;
  #L4871ce.  v5:= temp @kind object;
  #L4871d0.  call `<init>`(v1, v0, v5) @signature `Luc/s;.<init>:(Ljava/lang/String;Lzc/f;)V` @kind direct;
  #L4871d6.  return v1 @kind object;
  #L4871d8.  v0:= 3I;
  #L4871da.  call temp:= `substring`(v5, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L4871e0.  v1:= temp @kind object;
  #L4871e2.  call temp:= `T`(v1) @signature `Luc/r;.T:(Ljava/lang/String;)Luc/r;` @kind static;
  #L4871e8.  v1:= temp @kind object;
  #L4871ea.  call temp:= `S`(v1) @signature `Luc/r;.S:()I` @kind virtual;
  #L4871f0.  v3:= temp;
  #L4871f2.  if v3 != 0 then goto L487212;
  #L4871f6.  v3:= new `uc.s`;
  #L4871fa.  call temp:= `substring`(v5, v2, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L487200.  v5:= temp @kind object;
  #L487202.  call temp:= `h`(v1) @signature `Luc/r;.h:()Lzc/f;` @kind virtual;
  #L487208.  v0:= temp @kind object;
  #L48720a.  call `<init>`(v3, v5, v0) @signature `Luc/s;.<init>:(Ljava/lang/String;Lzc/f;)V` @kind direct;
  #L487210.  return v3 @kind object;
  #L487212.  v3:= new `uc.s`;
  #L487216.  v4:= new `java.lang.StringBuilder`;
  #L48721a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L487220.  call temp:= `substring`(v5, v2, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L487226.  v5:= temp @kind object;
  #L487228.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48722e.  call temp:= `e`(v1) @signature `Luc/r;.e:()Ljava/lang/String;` @kind virtual;
  #L487234.  v5:= temp @kind object;
  #L487236.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48723c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L487242.  v5:= temp @kind object;
  #L487244.  call temp:= `h`(v1) @signature `Luc/r;.h:()Lzc/f;` @kind virtual;
  #L48724a.  v0:= temp @kind object;
  #L48724c.  call `<init>`(v3, v5, v0) @signature `Luc/s;.<init>:(Ljava/lang/String;Lzc/f;)V` @kind direct;
  #L487252.  return v3 @kind object;
  #L487254.  v0:= new `uc.s`;
  #L487258.  v1:= `@@uc.r.s` @type ^`uc.r` @kind object;
  #L48725c.  call temp:= `h`(v1) @signature `Luc/r;.h:()Lzc/f;` @kind virtual;
  #L487262.  v1:= temp @kind object;
  #L487264.  call `<init>`(v0, v5, v1) @signature `Luc/s;.<init>:(Ljava/lang/String;Lzc/f;)V` @kind direct;
  #L48726a.  return v0 @kind object;
  #L48726c.  v0:= new `uc.b`;
  #L487270.  v1:= new `java.lang.StringBuilder`;
  #L487274.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48727a.  v2:= "Invalid ID for region-based ZoneId, invalid format: " @kind object;
  #L48727e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L487284.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48728a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L487290.  v5:= temp @kind object;
  #L487292.  call `<init>`(v0, v5) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L487298.  throw v0;
}
procedure `void` `S`(`uc.s` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Luc/s;.S:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L487310.  v0:= v1.`uc.s.o` @type ^`java.lang.String` @kind object;
  #L487314.  call `writeUTF`(v2, v0) @signature `Ljava/io/DataOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L48731a.  return @kind void;
}
procedure `java.lang.String` `e`(`uc.s` v1 @kind this) @signature `Luc/s;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L486f9c.  v0:= v1.`uc.s.o` @type ^`java.lang.String` @kind object;
  #L486fa0.  return v0 @kind object;
}
procedure `zc.f` `h`(`uc.s` v2 @kind this) @signature `Luc/s;.h:()Lzc/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48732c.  v0:= v2.`uc.s.p` @type ^`zc.f` @kind object;
  #L487330.  if v0 == 0 then goto L487336;
  #L487334.  goto L487344;
  #L487336.  v0:= v2.`uc.s.o` @type ^`java.lang.String` @kind object;
  #L48733a.  v1:= 0I;
  #L48733c.  call temp:= `c`(v0, v1) @signature `Lzc/i;.c:(Ljava/lang/String;Z)Lzc/f;` @kind static;
  #L487342.  v0:= temp @kind object;
  #L487344.  return v0 @kind object;
}
procedure `void` `s`(`uc.s` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Luc/s;.s:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L4872f0.  v0:= 7I;
  #L4872f2.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L4872f8.  call `S`(v1, v2) @signature `Luc/s;.S:(Ljava/io/DataOutput;)V` @kind virtual;
  #L4872fe.  return @kind void;
}
