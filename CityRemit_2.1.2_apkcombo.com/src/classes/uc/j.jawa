record `uc.j` @kind class @AccessFlag PUBLIC_FINAL extends `xc.c` @kind class, `yc.f` @kind interface, `java.lang.Comparable` @kind interface, `java.io.Serializable` @kind interface {
  `int` `uc.j.o` @AccessFlag PRIVATE_FINAL;
  `int` `uc.j.p` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Luc/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4828ac.  v0:= new `uc.j$a`;
  #L4828b0.  call `<init>`(v0) @signature `Luc/j$a;.<init>:()V` @kind direct;
  #L4828b6.  v0:= new `wc.c`;
  #L4828ba.  call `<init>`(v0) @signature `Lwc/c;.<init>:()V` @kind direct;
  #L4828c0.  v1:= "--" @kind object;
  #L4828c4.  call temp:= `f`(v0, v1) @signature `Lwc/c;.f:(Ljava/lang/String;)Lwc/c;` @kind virtual;
  #L4828ca.  v0:= temp @kind object;
  #L4828cc.  v1:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L4828d0.  v2:= 2I;
  #L4828d2.  call temp:= `k`(v0, v1, v2) @signature `Lwc/c;.k:(Lyc/i;I)Lwc/c;` @kind virtual;
  #L4828d8.  v0:= temp @kind object;
  #L4828da.  v1:= 45I;
  #L4828de.  call temp:= `e`(v0, v1) @signature `Lwc/c;.e:(C)Lwc/c;` @kind virtual;
  #L4828e4.  v0:= temp @kind object;
  #L4828e6.  v1:= `@@yc.a.K` @type ^`yc.a` @kind object;
  #L4828ea.  call temp:= `k`(v0, v1, v2) @signature `Lwc/c;.k:(Lyc/i;I)Lwc/c;` @kind virtual;
  #L4828f0.  v0:= temp @kind object;
  #L4828f2.  call temp:= `s`(v0) @signature `Lwc/c;.s:()Lwc/b;` @kind virtual;
  #L4828f8.  return @kind void;
}
procedure `void` `<init>`(`uc.j` v0 @kind this, `int` v1 , `int` v2 ) @signature `Luc/j;.<init>:(II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L48290c.  call `<init>`(v0) @signature `Lxc/c;.<init>:()V` @kind direct;
  #L482912.  v0.`uc.j.o` @type ^`int` := v1;
  #L482916.  v0.`uc.j.p` @type ^`int` := v2;
  #L48291a.  return @kind void;
}
procedure `uc.j` `V`(`yc.e` v3 @kind object) @signature `Luc/j;.V:(Lyc/e;)Luc/j;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L482710.  v0:= instanceof @variable v3 @type ^`uc.j` @kind boolean;
  #L482714.  if v0 == 0 then goto L48271e;
  #L482718.  v3:= (`uc.j`) v3 @kind object;
  #L48271c.  return v3 @kind object;
  #L48271e.  v0:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L482722.  call temp:= `k`(v3) @signature `Lvc/h;.k:(Lyc/e;)Lvc/h;` @kind static;
  #L482728.  v1:= temp @kind object;
  #L48272a.  call temp:= `equals`(v0, v1) @signature `Lvc/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L482730.  v0:= temp;
  #L482732.  if v0 != 0 then goto L48273e;
  #L482736.  call temp:= `m0`(v3) @signature `Luc/f;.m0:(Lyc/e;)Luc/f;` @kind static;
  #L48273c.  v3:= temp @kind object;
  #L48273e.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L482742.  call temp:= `F`(v3, v0) @signature `Lyc/e;.F:(Lyc/i;)I` @kind interface;
  #L482748.  v0:= temp;
  #L48274a.  v1:= `@@yc.a.K` @type ^`yc.a` @kind object;
  #L48274e.  call temp:= `F`(v3, v1) @signature `Lyc/e;.F:(Lyc/i;)I` @kind interface;
  #L482754.  v1:= temp;
  #L482756.  call temp:= `a0`(v0, v1) @signature `Luc/j;.a0:(II)Luc/j;` @kind static;
  #L48275c.  v3:= temp @kind object;
  #L48275e.  return v3 @kind object;
  #L482760.  v0:= new `uc.b`;
  #L482764.  v1:= new `java.lang.StringBuilder`;
  #L482768.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48276e.  v2:= "Unable to obtain MonthDay from TemporalAccessor: " @kind object;
  #L482772.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482778.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48277e.  v2:= ", type " @kind object;
  #L482782.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482788.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L48278e.  v3:= temp @kind object;
  #L482790.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L482796.  v3:= temp @kind object;
  #L482798.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48279e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4827a4.  v3:= temp @kind object;
  #L4827a6.  call `<init>`(v0, v3) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4827ac.  throw v0;
  catch `uc.b` @[L48271e..L48275e] goto L482760;
}
procedure `uc.j` `a0`(`int` v0 , `int` v1 ) @signature `Luc/j;.a0:(II)Luc/j;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4827d0.  call temp:= `o`(v0) @signature `Luc/i;.o:(I)Luc/i;` @kind static;
  #L4827d6.  v0:= temp @kind object;
  #L4827d8.  call temp:= `b0`(v0, v1) @signature `Luc/j;.b0:(Luc/i;I)Luc/j;` @kind static;
  #L4827de.  v0:= temp @kind object;
  #L4827e0.  return v0 @kind object;
}
procedure `uc.j` `b0`(`uc.i` v3 @kind object, `int` v4 ) @signature `Luc/j;.b0:(Luc/i;I)Luc/j;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4827f4.  v0:= "month" @kind object;
  #L4827f8.  call temp:= `i`(v3, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4827fe.  v0:= `@@yc.a.K` @type ^`yc.a` @kind object;
  #L482802.  v1:= (`long`) v4 @kind i2l;
  #L482804.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L48280a.  call temp:= `i`(v3) @signature `Luc/i;.i:()I` @kind virtual;
  #L482810.  v0:= temp;
  #L482812.  if v4 > v0 then goto L48282a;
  #L482816.  v0:= new `uc.j`;
  #L48281a.  call temp:= `getValue`(v3) @signature `Luc/i;.getValue:()I` @kind virtual;
  #L482820.  v3:= temp;
  #L482822.  call `<init>`(v0, v3, v4) @signature `Luc/j;.<init>:(II)V` @kind direct;
  #L482828.  return v0 @kind object;
  #L48282a.  v0:= new `uc.b`;
  #L48282e.  v1:= new `java.lang.StringBuilder`;
  #L482832.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L482838.  v2:= "Illegal value for DayOfMonth field, value " @kind object;
  #L48283c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482842.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L482848.  v4:= " is not valid for month " @kind object;
  #L48284c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482852.  call temp:= `name`(v3) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L482858.  v3:= temp @kind object;
  #L48285a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482860.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L482866.  v3:= temp @kind object;
  #L482868.  call `<init>`(v0, v3) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48286e.  throw v0;
}
procedure `uc.j` `c0`(`java.io.DataInput` v1 @kind object) @signature `Luc/j;.c0:(Ljava/io/DataInput;)Luc/j;` @AccessFlag STATIC {
    temp;
    v0;

  #L482880.  call temp:= `readByte`(v1) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L482886.  v0:= temp;
  #L482888.  call temp:= `readByte`(v1) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L48288e.  v1:= temp;
  #L482890.  call temp:= `a0`(v0, v1) @signature `Luc/j;.a0:(II)Luc/j;` @kind static;
  #L482896.  v1:= temp @kind object;
  #L482898.  return v1 @kind object;
}
procedure `java.lang.Object` `readResolve`(`uc.j` v2 @kind this) @signature `Luc/j;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4825b8.  v0:= new `java.io.InvalidObjectException`;
  #L4825bc.  v1:= "Deserialization via serialization delegate" @kind object;
  #L4825c0.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4825c6.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`uc.j` v2 @kind this) @signature `Luc/j;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4825d8.  v0:= new `uc.n`;
  #L4825dc.  v1:= 64I;
  #L4825e0.  call `<init>`(v0, v1, v2) @signature `Luc/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L4825e6.  return v0 @kind object;
}
procedure `long` `B`(`uc.j` v3 @kind this, `yc.i` v4 @kind object) @signature `Luc/j;.B:(Lyc/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L482670.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L482674.  if v0 == 0 then goto L4826d6;
  #L482678.  v0:= `@@uc.j$b.a` @type ^`int`[] @kind object;
  #L48267c.  v1:= v4 @kind object;
  #L48267e.  v1:= (`yc.a`) v1 @kind object;
  #L482682.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L482688.  v1:= temp;
  #L48268a.  v0:= v0[v1];
  #L48268e.  v1:= 1I;
  #L482690.  if v0 == v1 then goto L4826d0;
  #L482694.  v1:= 2I;
  #L482696.  if v0 != v1 then goto L4826a2;
  #L48269a.  v4:= v3.`uc.j.o` @type ^`int`;
  #L48269e.  v0:= (`long`) v4 @kind i2l;
  #L4826a0.  return v0 @kind wide;
  #L4826a2.  v0:= new `yc.m`;
  #L4826a6.  v1:= new `java.lang.StringBuilder`;
  #L4826aa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4826b0.  v2:= "Unsupported field: " @kind object;
  #L4826b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4826ba.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4826c0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4826c6.  v4:= temp @kind object;
  #L4826c8.  call `<init>`(v0, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4826ce.  throw v0;
  #L4826d0.  v4:= v3.`uc.j.p` @type ^`int`;
  #L4826d4.  goto L48269e;
  #L4826d6.  call temp:= `o`(v4, v3) @signature `Lyc/i;.o:(Lyc/e;)J` @kind interface;
  #L4826dc.  v0:= temp @kind wide;
  #L4826de.  return v0 @kind wide;
}
procedure `int` `F`(`uc.j` v3 @kind this, `yc.i` v4 @kind object) @signature `Luc/j;.F:(Lyc/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L482540.  call temp:= `t`(v3, v4) @signature `Luc/j;.t:(Lyc/i;)Lyc/n;` @kind virtual;
  #L482546.  v0:= temp @kind object;
  #L482548.  call temp:= `B`(v3, v4) @signature `Luc/j;.B:(Lyc/i;)J` @kind virtual;
  #L48254e.  v1:= temp @kind wide;
  #L482550.  call temp:= `a`(v0, v1, v4) @signature `Lyc/n;.a:(JLyc/i;)I` @kind virtual;
  #L482556.  v4:= temp;
  #L482558.  return v4;
}
procedure `yc.d` `I`(`uc.j` v5 @kind this, `yc.d` v6 @kind object) @signature `Luc/j;.I:(Lyc/d;)Lyc/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L482954.  call temp:= `k`(v6) @signature `Lvc/h;.k:(Lyc/e;)Lvc/h;` @kind static;
  #L48295a.  v0:= temp @kind object;
  #L48295c.  v1:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L482960.  call temp:= `equals`(v0, v1) @signature `Lvc/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L482966.  v0:= temp;
  #L482968.  if v0 == 0 then goto L4829aa;
  #L48296c.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L482970.  v1:= v5.`uc.j.o` @type ^`int`;
  #L482974.  v1:= (`long`) v1 @kind i2l;
  #L482976.  call temp:= `P`(v6, v0, v1) @signature `Lyc/d;.P:(Lyc/i;J)Lyc/d;` @kind interface;
  #L48297c.  v6:= temp @kind object;
  #L48297e.  v0:= `@@yc.a.K` @type ^`yc.a` @kind object;
  #L482982.  call temp:= `t`(v6, v0) @signature `Lyc/e;.t:(Lyc/i;)Lyc/n;` @kind interface;
  #L482988.  v1:= temp @kind object;
  #L48298a.  call temp:= `c`(v1) @signature `Lyc/n;.c:()J` @kind virtual;
  #L482990.  v1:= temp @kind wide;
  #L482992.  v3:= v5.`uc.j.p` @type ^`int`;
  #L482996.  v3:= (`long`) v3 @kind i2l;
  #L482998.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L48299e.  v1:= temp @kind wide;
  #L4829a0.  call temp:= `P`(v6, v0, v1) @signature `Lyc/d;.P:(Lyc/i;J)Lyc/d;` @kind interface;
  #L4829a6.  v6:= temp @kind object;
  #L4829a8.  return v6 @kind object;
  #L4829aa.  v6:= new `uc.b`;
  #L4829ae.  v0:= "Adjustment only supported on ISO date-time" @kind object;
  #L4829b2.  call `<init>`(v6, v0) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4829b8.  throw v6;
}
procedure `int` `T`(`uc.j` v2 @kind this, `uc.j` v3 @kind object) @signature `Luc/j;.T:(Luc/j;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L482514.  v0:= v2.`uc.j.o` @type ^`int`;
  #L482518.  v1:= v3.`uc.j.o` @type ^`int`;
  #L48251c.  v0:= v0 - v1 @kind int;
  #L48251e.  if v0 != 0 then goto L48252c;
  #L482522.  v0:= v2.`uc.j.p` @type ^`int`;
  #L482526.  v3:= v3.`uc.j.p` @type ^`int`;
  #L48252a.  v0:= v0 - v3 @kind int;
  #L48252c.  return v0;
}
procedure `uc.i` `X`(`uc.j` v1 @kind this) @signature `Luc/j;.X:()Luc/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4826f0.  v0:= v1.`uc.j.o` @type ^`int`;
  #L4826f4.  call temp:= `o`(v0) @signature `Luc/i;.o:(I)Luc/i;` @kind static;
  #L4826fa.  v0:= temp @kind object;
  #L4826fc.  return v0 @kind object;
}
procedure `int` `compareTo`(`uc.j` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Luc/j;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4824f4.  v1:= (`uc.j`) v1 @kind object;
  #L4824f8.  call temp:= `T`(v0, v1) @signature `Luc/j;.T:(Luc/j;)I` @kind virtual;
  #L4824fe.  v1:= temp;
  #L482500.  return v1;
}
procedure `boolean` `d`(`uc.j` v3 @kind this, `yc.i` v4 @kind object) @signature `Luc/j;.d:(Lyc/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4824ac.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4824b0.  v1:= 1I;
  #L4824b2.  v2:= 0I;
  #L4824b4.  if v0 == 0 then goto L4824ce;
  #L4824b8.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L4824bc.  if v4 == v0 then goto L4824cc;
  #L4824c0.  v0:= `@@yc.a.K` @type ^`yc.a` @kind object;
  #L4824c4.  if v4 != v0 then goto L4824ca;
  #L4824c8.  goto L4824cc;
  #L4824ca.  v1:= 0I;
  #L4824cc.  return v1;
  #L4824ce.  if v4 == 0 then goto L4824e0;
  #L4824d2.  call temp:= `j`(v4, v3) @signature `Lyc/i;.j:(Lyc/e;)Z` @kind interface;
  #L4824d8.  v4:= temp;
  #L4824da.  if v4 == 0 then goto L4824e0;
  #L4824de.  goto L4824e2;
  #L4824e0.  v1:= 0I;
  #L4824e2.  return v1;
}
procedure `void` `d0`(`uc.j` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Luc/j;.d0:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L48292c.  v0:= v1.`uc.j.o` @type ^`int`;
  #L482930.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L482936.  v0:= v1.`uc.j.p` @type ^`int`;
  #L48293a.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L482940.  return @kind void;
}
procedure `boolean` `equals`(`uc.j` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Luc/j;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L482464.  v0:= 1I;
  #L482466.  if v4 != v5 then goto L48246c;
  #L48246a.  return v0;
  #L48246c.  v1:= instanceof @variable v5 @type ^`uc.j` @kind boolean;
  #L482470.  v2:= 0I;
  #L482472.  if v1 == 0 then goto L482498;
  #L482476.  v5:= (`uc.j`) v5 @kind object;
  #L48247a.  v1:= v4.`uc.j.o` @type ^`int`;
  #L48247e.  v3:= v5.`uc.j.o` @type ^`int`;
  #L482482.  if v1 != v3 then goto L482494;
  #L482486.  v1:= v4.`uc.j.p` @type ^`int`;
  #L48248a.  v5:= v5.`uc.j.p` @type ^`int`;
  #L48248e.  if v1 != v5 then goto L482494;
  #L482492.  goto L482496;
  #L482494.  v0:= 0I;
  #L482496.  return v0;
  #L482498.  return v2;
}
procedure `int` `hashCode`(`uc.j` v2 @kind this) @signature `Luc/j;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48256c.  v0:= v2.`uc.j.o` @type ^`int`;
  #L482570.  v0:= v0 ^< 6;
  #L482574.  v1:= v2.`uc.j.p` @type ^`int`;
  #L482578.  v0:= v0 + v1 @kind int;
  #L48257a.  return v0;
}
procedure `java.lang.Object` `j`(`uc.j` v1 @kind this, `yc.k` v2 @kind object) @signature `Luc/j;.j:(Lyc/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48258c.  call temp:= `a`() @signature `Lyc/j;.a:()Lyc/k;` @kind static;
  #L482592.  v0:= temp @kind object;
  #L482594.  if v2 != v0 then goto L48259e;
  #L482598.  v2:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L48259c.  return v2 @kind object;
  #L48259e.  call temp:= `j`(v1, v2) @signature `Lxc/c;.j:(Lyc/k;)Ljava/lang/Object;` @kind super;
  #L4825a4.  v2:= temp @kind object;
  #L4825a6.  return v2 @kind object;
}
procedure `yc.n` `t`(`uc.j` v7 @kind this, `yc.i` v8 @kind object) @signature `Luc/j;.t:(Lyc/i;)Lyc/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4829cc.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L4829d0.  if v8 != v0 then goto L4829de;
  #L4829d4.  call temp:= `k`(v8) @signature `Lyc/i;.k:()Lyc/n;` @kind interface;
  #L4829da.  v8:= temp @kind object;
  #L4829dc.  return v8 @kind object;
  #L4829de.  v0:= `@@yc.a.K` @type ^`yc.a` @kind object;
  #L4829e2.  if v8 != v0 then goto L482a18;
  #L4829e6.  v1:= 1L;
  #L4829ea.  call temp:= `X`(v7) @signature `Luc/j;.X:()Luc/i;` @kind virtual;
  #L4829f0.  v8:= temp @kind object;
  #L4829f2.  call temp:= `k`(v8) @signature `Luc/i;.k:()I` @kind virtual;
  #L4829f8.  v8:= temp;
  #L4829fa.  v3:= (`long`) v8 @kind i2l;
  #L4829fc.  call temp:= `X`(v7) @signature `Luc/j;.X:()Luc/i;` @kind virtual;
  #L482a02.  v8:= temp @kind object;
  #L482a04.  call temp:= `i`(v8) @signature `Luc/i;.i:()I` @kind virtual;
  #L482a0a.  v8:= temp;
  #L482a0c.  v5:= (`long`) v8 @kind i2l;
  #L482a0e.  call temp:= `j`(v1, v3, v5) @signature `Lyc/n;.j:(JJJ)Lyc/n;` @kind static;
  #L482a14.  v8:= temp @kind object;
  #L482a16.  return v8 @kind object;
  #L482a18.  call temp:= `t`(v7, v8) @signature `Lxc/c;.t:(Lyc/i;)Lyc/n;` @kind super;
  #L482a1e.  v8:= temp @kind object;
  #L482a20.  return v8 @kind object;
}
procedure `java.lang.String` `toString`(`uc.j` v3 @kind this) @signature `Luc/j;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4825f8.  v0:= new `java.lang.StringBuilder`;
  #L4825fc.  v1:= 10I;
  #L482600.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L482606.  v2:= "--" @kind object;
  #L48260a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482610.  v2:= v3.`uc.j.o` @type ^`int`;
  #L482614.  if v2 >= v1 then goto L48261e;
  #L482618.  v2:= "0" @kind object;
  #L48261c.  goto L482622;
  #L48261e.  v2:= "" @kind object;
  #L482622.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L482628.  v2:= v3.`uc.j.o` @type ^`int`;
  #L48262c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L482632.  v2:= v3.`uc.j.p` @type ^`int`;
  #L482636.  if v2 >= v1 then goto L482640;
  #L48263a.  v1:= "-0" @kind object;
  #L48263e.  goto L482644;
  #L482640.  v1:= "-" @kind object;
  #L482644.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48264a.  v1:= v3.`uc.j.p` @type ^`int`;
  #L48264e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L482654.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48265a.  v0:= temp @kind object;
  #L48265c.  return v0 @kind object;
}
