record `uc.t` @kind class @AccessFlag PUBLIC_FINAL extends `vc.f` @kind class, `java.io.Serializable` @kind interface {
  `uc.g` `uc.t.o` @AccessFlag PRIVATE_FINAL;
  `uc.r` `uc.t.p` @AccessFlag PRIVATE_FINAL;
  `uc.q` `uc.t.q` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Luc/t;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L487ff4.  v0:= new `uc.t$a`;
  #L487ff8.  call `<init>`(v0) @signature `Luc/t$a;.<init>:()V` @kind direct;
  #L487ffe.  return @kind void;
}
procedure `void` `<init>`(`uc.t` v0 @kind this, `uc.g` v1 @kind object, `uc.r` v2 @kind object, `uc.q` v3 @kind object) @signature `Luc/t;.<init>:(Luc/g;Luc/r;Luc/q;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L488010.  call `<init>`(v0) @signature `Lvc/f;.<init>:()V` @kind direct;
  #L488016.  v0.`uc.t.o` @type ^`uc.g` := v1 @kind object;
  #L48801a.  v0.`uc.t.p` @type ^`uc.r` := v2 @kind object;
  #L48801e.  v0.`uc.t.q` @type ^`uc.q` := v3 @kind object;
  #L488022.  return @kind void;
}
procedure `uc.t` `A0`(`uc.g` v1 @kind object, `uc.q` v2 @kind object) @signature `Luc/t;.A0:(Luc/g;Luc/q;)Luc/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L487a60.  v0:= 0I;
  #L487a62.  call temp:= `E0`(v1, v2, v0) @signature `Luc/t;.E0:(Luc/g;Luc/q;Luc/r;)Luc/t;` @kind static;
  #L487a68.  v1:= temp @kind object;
  #L487a6a.  return v1 @kind object;
}
procedure `uc.t` `B0`(`uc.e` v2 @kind object, `uc.q` v3 @kind object) @signature `Luc/t;.B0:(Luc/e;Luc/q;)Luc/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L487a7c.  v0:= "instant" @kind object;
  #L487a80.  call temp:= `i`(v2, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L487a86.  v0:= "zone" @kind object;
  #L487a8a.  call temp:= `i`(v3, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L487a90.  call temp:= `a0`(v2) @signature `Luc/e;.a0:()J` @kind virtual;
  #L487a96.  v0:= temp @kind wide;
  #L487a98.  call temp:= `b0`(v2) @signature `Luc/e;.b0:()I` @kind virtual;
  #L487a9e.  v2:= temp;
  #L487aa0.  call temp:= `m0`(v0, v2, v3) @signature `Luc/t;.m0:(JILuc/q;)Luc/t;` @kind static;
  #L487aa6.  v2:= temp @kind object;
  #L487aa8.  return v2 @kind object;
}
procedure `uc.t` `C0`(`uc.g` v2 @kind object, `uc.r` v3 @kind object, `uc.q` v4 @kind object) @signature `Luc/t;.C0:(Luc/g;Luc/r;Luc/q;)Luc/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L487abc.  v0:= "localDateTime" @kind object;
  #L487ac0.  call temp:= `i`(v2, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L487ac6.  v0:= "offset" @kind object;
  #L487aca.  call temp:= `i`(v3, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L487ad0.  v0:= "zone" @kind object;
  #L487ad4.  call temp:= `i`(v4, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L487ada.  call temp:= `f0`(v2, v3) @signature `Lvc/c;.f0:(Luc/r;)J` @kind virtual;
  #L487ae0.  v0:= temp @kind wide;
  #L487ae2.  call temp:= `u0`(v2) @signature `Luc/g;.u0:()I` @kind virtual;
  #L487ae8.  v2:= temp;
  #L487aea.  call temp:= `m0`(v0, v2, v4) @signature `Luc/t;.m0:(JILuc/q;)Luc/t;` @kind static;
  #L487af0.  v2:= temp @kind object;
  #L487af2.  return v2 @kind object;
}
procedure `uc.t` `D0`(`uc.g` v1 @kind object, `uc.r` v2 @kind object, `uc.q` v3 @kind object) @signature `Luc/t;.D0:(Luc/g;Luc/r;Luc/q;)Luc/t;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L487b04.  v0:= "localDateTime" @kind object;
  #L487b08.  call temp:= `i`(v1, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L487b0e.  v0:= "offset" @kind object;
  #L487b12.  call temp:= `i`(v2, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L487b18.  v0:= "zone" @kind object;
  #L487b1c.  call temp:= `i`(v3, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L487b22.  v0:= instanceof @variable v3 @type ^`uc.r` @kind boolean;
  #L487b26.  if v0 == 0 then goto L487b48;
  #L487b2a.  call temp:= `equals`(v2, v3) @signature `Luc/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L487b30.  v0:= temp;
  #L487b32.  if v0 == 0 then goto L487b38;
  #L487b36.  goto L487b48;
  #L487b38.  v1:= new `java.lang.IllegalArgumentException`;
  #L487b3c.  v2:= "ZoneId must match ZoneOffset" @kind object;
  #L487b40.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L487b46.  throw v1;
  #L487b48.  v0:= new `uc.t`;
  #L487b4c.  call `<init>`(v0, v1, v2, v3) @signature `Luc/t;.<init>:(Luc/g;Luc/r;Luc/q;)V` @kind direct;
  #L487b52.  return v0 @kind object;
}
procedure `uc.t` `E0`(`uc.g` v5 @kind object, `uc.q` v6 @kind object, `uc.r` v7 @kind object) @signature `Luc/t;.E0:(Luc/g;Luc/q;Luc/r;)Luc/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L487b64.  v0:= "localDateTime" @kind object;
  #L487b68.  call temp:= `i`(v5, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L487b6e.  v0:= "zone" @kind object;
  #L487b72.  call temp:= `i`(v6, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L487b78.  v0:= instanceof @variable v6 @type ^`uc.r` @kind boolean;
  #L487b7c.  if v0 == 0 then goto L487b92;
  #L487b80.  v7:= new `uc.t`;
  #L487b84.  v0:= v6 @kind object;
  #L487b86.  v0:= (`uc.r`) v0 @kind object;
  #L487b8a.  call `<init>`(v7, v5, v0, v6) @signature `Luc/t;.<init>:(Luc/g;Luc/r;Luc/q;)V` @kind direct;
  #L487b90.  return v7 @kind object;
  #L487b92.  call temp:= `h`(v6) @signature `Luc/q;.h:()Lzc/f;` @kind virtual;
  #L487b98.  v0:= temp @kind object;
  #L487b9a.  call temp:= `c`(v0, v5) @signature `Lzc/f;.c:(Luc/g;)Ljava/util/List;` @kind virtual;
  #L487ba0.  v1:= temp @kind object;
  #L487ba2.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L487ba8.  v2:= temp;
  #L487baa.  v3:= 1I;
  #L487bac.  v4:= 0I;
  #L487bae.  if v2 != v3 then goto L487bc0;
  #L487bb2.  call temp:= `get`(v1, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L487bb8.  v7:= temp @kind object;
  #L487bba.  v7:= (`uc.r`) v7 @kind object;
  #L487bbe.  goto L487c1e;
  #L487bc0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L487bc6.  v2:= temp;
  #L487bc8.  if v2 != 0 then goto L487bf6;
  #L487bcc.  call temp:= `b`(v0, v5) @signature `Lzc/f;.b:(Luc/g;)Lzc/d;` @kind virtual;
  #L487bd2.  v7:= temp @kind object;
  #L487bd4.  call temp:= `h`(v7) @signature `Lzc/d;.h:()Luc/d;` @kind virtual;
  #L487bda.  v0:= temp @kind object;
  #L487bdc.  call temp:= `h`(v0) @signature `Luc/d;.h:()J` @kind virtual;
  #L487be2.  v0:= temp @kind wide;
  #L487be4.  call temp:= `I0`(v5, v0) @signature `Luc/g;.I0:(J)Luc/g;` @kind virtual;
  #L487bea.  v5:= temp @kind object;
  #L487bec.  call temp:= `k`(v7) @signature `Lzc/d;.k:()Luc/r;` @kind virtual;
  #L487bf2.  v7:= temp @kind object;
  #L487bf4.  goto L487c1e;
  #L487bf6.  if v7 == 0 then goto L487c08;
  #L487bfa.  call temp:= `contains`(v1, v7) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L487c00.  v0:= temp;
  #L487c02.  if v0 == 0 then goto L487c08;
  #L487c06.  goto L487c1e;
  #L487c08.  call temp:= `get`(v1, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L487c0e.  v7:= temp @kind object;
  #L487c10.  v0:= "offset" @kind object;
  #L487c14.  call temp:= `i`(v7, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L487c1a.  v7:= temp @kind object;
  #L487c1c.  goto L487bba;
  #L487c1e.  v0:= new `uc.t`;
  #L487c22.  call `<init>`(v0, v5, v7, v6) @signature `Luc/t;.<init>:(Luc/g;Luc/r;Luc/q;)V` @kind direct;
  #L487c28.  return v0 @kind object;
}
procedure `uc.t` `H0`(`java.io.DataInput` v2 @kind object) @signature `Luc/t;.H0:(Ljava/io/DataInput;)Luc/t;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L487cc4.  call temp:= `L0`(v2) @signature `Luc/g;.L0:(Ljava/io/DataInput;)Luc/g;` @kind static;
  #L487cca.  v0:= temp @kind object;
  #L487ccc.  call temp:= `b0`(v2) @signature `Luc/r;.b0:(Ljava/io/DataInput;)Luc/r;` @kind static;
  #L487cd2.  v1:= temp @kind object;
  #L487cd4.  call temp:= `a`(v2) @signature `Luc/n;.a:(Ljava/io/DataInput;)Ljava/lang/Object;` @kind static;
  #L487cda.  v2:= temp @kind object;
  #L487cdc.  v2:= (`uc.q`) v2 @kind object;
  #L487ce0.  call temp:= `D0`(v0, v1, v2) @signature `Luc/t;.D0:(Luc/g;Luc/r;Luc/q;)Luc/t;` @kind static;
  #L487ce6.  v2:= temp @kind object;
  #L487ce8.  return v2 @kind object;
}
procedure `uc.t` `I0`(`uc.t` v2 @kind this, `uc.g` v3 @kind object) @signature `Luc/t;.I0:(Luc/g;)Luc/t;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L487cfc.  v0:= v2.`uc.t.p` @type ^`uc.r` @kind object;
  #L487d00.  v1:= v2.`uc.t.q` @type ^`uc.q` @kind object;
  #L487d04.  call temp:= `C0`(v3, v0, v1) @signature `Luc/t;.C0:(Luc/g;Luc/r;Luc/q;)Luc/t;` @kind static;
  #L487d0a.  v3:= temp @kind object;
  #L487d0c.  return v3 @kind object;
}
procedure `uc.t` `J0`(`uc.t` v2 @kind this, `uc.g` v3 @kind object) @signature `Luc/t;.J0:(Luc/g;)Luc/t;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L487d20.  v0:= v2.`uc.t.q` @type ^`uc.q` @kind object;
  #L487d24.  v1:= v2.`uc.t.p` @type ^`uc.r` @kind object;
  #L487d28.  call temp:= `E0`(v3, v0, v1) @signature `Luc/t;.E0:(Luc/g;Luc/q;Luc/r;)Luc/t;` @kind static;
  #L487d2e.  v3:= temp @kind object;
  #L487d30.  return v3 @kind object;
}
procedure `uc.t` `K0`(`uc.t` v3 @kind this, `uc.r` v4 @kind object) @signature `Luc/t;.K0:(Luc/r;)Luc/t;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L487d44.  v0:= v3.`uc.t.p` @type ^`uc.r` @kind object;
  #L487d48.  call temp:= `equals`(v4, v0) @signature `Luc/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L487d4e.  v0:= temp;
  #L487d50.  if v0 != 0 then goto L487d84;
  #L487d54.  v0:= v3.`uc.t.q` @type ^`uc.q` @kind object;
  #L487d58.  call temp:= `h`(v0) @signature `Luc/q;.h:()Lzc/f;` @kind virtual;
  #L487d5e.  v0:= temp @kind object;
  #L487d60.  v1:= v3.`uc.t.o` @type ^`uc.g` @kind object;
  #L487d64.  call temp:= `e`(v0, v1, v4) @signature `Lzc/f;.e:(Luc/g;Luc/r;)Z` @kind virtual;
  #L487d6a.  v0:= temp;
  #L487d6c.  if v0 == 0 then goto L487d84;
  #L487d70.  v0:= new `uc.t`;
  #L487d74.  v1:= v3.`uc.t.o` @type ^`uc.g` @kind object;
  #L487d78.  v2:= v3.`uc.t.q` @type ^`uc.q` @kind object;
  #L487d7c.  call `<init>`(v0, v1, v4, v2) @signature `Luc/t;.<init>:(Luc/g;Luc/r;Luc/q;)V` @kind direct;
  #L487d82.  return v0 @kind object;
  #L487d84.  return v3 @kind object;
}
procedure `uc.t` `m0`(`long` v3 , `int` v5 , `uc.q` v6 @kind object) @signature `Luc/t;.m0:(JILuc/q;)Luc/t;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L487884.  call temp:= `h`(v6) @signature `Luc/q;.h:()Lzc/f;` @kind virtual;
  #L48788a.  v0:= temp @kind object;
  #L48788c.  v1:= (`long`) v5 @kind i2l;
  #L48788e.  call temp:= `f0`(v3, v1) @signature `Luc/e;.f0:(JJ)Luc/e;` @kind static;
  #L487894.  v1:= temp @kind object;
  #L487896.  call temp:= `a`(v0, v1) @signature `Lzc/f;.a:(Luc/e;)Luc/r;` @kind virtual;
  #L48789c.  v0:= temp @kind object;
  #L48789e.  call temp:= `A0`(v3, v5, v0) @signature `Luc/g;.A0:(JILuc/r;)Luc/g;` @kind static;
  #L4878a4.  v3:= temp @kind object;
  #L4878a6.  v4:= new `uc.t`;
  #L4878aa.  call `<init>`(v4, v3, v0, v6) @signature `Luc/t;.<init>:(Luc/g;Luc/r;Luc/q;)V` @kind direct;
  #L4878b0.  return v4 @kind object;
}
procedure `uc.t` `n0`(`yc.e` v4 @kind object) @signature `Luc/t;.n0:(Lyc/e;)Luc/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4878c4.  v0:= instanceof @variable v4 @type ^`uc.t` @kind boolean;
  #L4878c8.  if v0 == 0 then goto L4878d2;
  #L4878cc.  v4:= (`uc.t`) v4 @kind object;
  #L4878d0.  return v4 @kind object;
  #L4878d2.  call temp:= `c`(v4) @signature `Luc/q;.c:(Lyc/e;)Luc/q;` @kind static;
  #L4878d8.  v0:= temp @kind object;
  #L4878da.  v1:= `@@yc.a.U` @type ^`yc.a` @kind object;
  #L4878de.  call temp:= `d`(v4, v1) @signature `Lyc/e;.d:(Lyc/i;)Z` @kind interface;
  #L4878e4.  v2:= temp;
  #L4878e6.  if v2 == 0 then goto L487908;
  #L4878ea.  call temp:= `B`(v4, v1) @signature `Lyc/e;.B:(Lyc/i;)J` @kind interface;
  #L4878f0.  v1:= temp @kind wide;
  #L4878f2.  v3:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L4878f6.  call temp:= `F`(v4, v3) @signature `Lyc/e;.F:(Lyc/i;)I` @kind interface;
  #L4878fc.  v3:= temp;
  #L4878fe.  call temp:= `m0`(v1, v3, v0) @signature `Luc/t;.m0:(JILuc/q;)Luc/t;` @kind static;
  #L487904.  v4:= temp @kind object;
  #L487906.  return v4 @kind object;
  #L487908.  call temp:= `o0`(v4) @signature `Luc/g;.o0:(Lyc/e;)Luc/g;` @kind static;
  #L48790e.  v1:= temp @kind object;
  #L487910.  call temp:= `A0`(v1, v0) @signature `Luc/t;.A0:(Luc/g;Luc/q;)Luc/t;` @kind static;
  #L487916.  v4:= temp @kind object;
  #L487918.  return v4 @kind object;
  #L48791a.  v0:= new `uc.b`;
  #L48791e.  v1:= new `java.lang.StringBuilder`;
  #L487922.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L487928.  v2:= "Unable to obtain ZonedDateTime from TemporalAccessor: " @kind object;
  #L48792c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L487932.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L487938.  v2:= ", type " @kind object;
  #L48793c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L487942.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L487948.  v4:= temp @kind object;
  #L48794a.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L487950.  v4:= temp @kind object;
  #L487952.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L487958.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48795e.  v4:= temp @kind object;
  #L487960.  call `<init>`(v0, v4) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L487966.  throw v0;
  catch `uc.b` @[L4878d2..L4878e6] goto L48791a;
  catch `uc.b` @[L4878ea..L487906] goto L487908;
  catch `uc.b` @[L487908..L487918] goto L48791a;
}
procedure `java.lang.Object` `readResolve`(`uc.t` v2 @kind this) @signature `Luc/t;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L487698.  v0:= new `java.io.InvalidObjectException`;
  #L48769c.  v1:= "Deserialization via serialization delegate" @kind object;
  #L4876a0.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4876a6.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`uc.t` v2 @kind this) @signature `Luc/t;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4876b8.  v0:= new `uc.n`;
  #L4876bc.  v1:= 6I;
  #L4876be.  call `<init>`(v0, v1, v2) @signature `Luc/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L4876c4.  return v0 @kind object;
}
procedure `uc.t` `x0`(`uc.a` v1 @kind object) @signature `Luc/t;.x0:(Luc/a;)Luc/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4879e4.  v0:= "clock" @kind object;
  #L4879e8.  call temp:= `i`(v1, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4879ee.  call temp:= `b`(v1) @signature `Luc/a;.b:()Luc/e;` @kind virtual;
  #L4879f4.  v0:= temp @kind object;
  #L4879f6.  call temp:= `a`(v1) @signature `Luc/a;.a:()Luc/q;` @kind virtual;
  #L4879fc.  v1:= temp @kind object;
  #L4879fe.  call temp:= `B0`(v0, v1) @signature `Luc/t;.B0:(Luc/e;Luc/q;)Luc/t;` @kind static;
  #L487a04.  v1:= temp @kind object;
  #L487a06.  return v1 @kind object;
}
procedure `uc.t` `y0`(`uc.q` v0 @kind object) @signature `Luc/t;.y0:(Luc/q;)Luc/t;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L487a18.  call temp:= `c`(v0) @signature `Luc/a;.c:(Luc/q;)Luc/a;` @kind static;
  #L487a1e.  v0:= temp @kind object;
  #L487a20.  call temp:= `x0`(v0) @signature `Luc/t;.x0:(Luc/a;)Luc/t;` @kind static;
  #L487a26.  v0:= temp @kind object;
  #L487a28.  return v0 @kind object;
}
procedure `uc.t` `z0`(`int` v0 , `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 , `uc.q` v7 @kind object) @signature `Luc/t;.z0:(IIIIIIILuc/q;)Luc/t;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L487a3c.  call temp:= `y0`(v0, v1, v2, v3, v4, v5, v6) @signature `Luc/g;.y0:(IIIIIII)Luc/g;` @kind static;
  #L487a42.  v0:= temp @kind object;
  #L487a44.  v1:= 0I;
  #L487a46.  call temp:= `E0`(v0, v7, v1) @signature `Luc/t;.E0:(Luc/g;Luc/q;Luc/r;)Luc/t;` @kind static;
  #L487a4c.  v0:= temp @kind object;
  #L487a4e.  return v0 @kind object;
}
procedure `long` `B`(`uc.t` v2 @kind this, `yc.i` v3 @kind object) @signature `Luc/t;.B:(Lyc/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48776c.  v0:= instanceof @variable v3 @type ^`yc.a` @kind boolean;
  #L487770.  if v0 == 0 then goto L4877c2;
  #L487774.  v0:= `@@uc.t$b.a` @type ^`int`[] @kind object;
  #L487778.  v1:= v3 @kind object;
  #L48777a.  v1:= (`yc.a`) v1 @kind object;
  #L48777e.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L487784.  v1:= temp;
  #L487786.  v0:= v0[v1];
  #L48778a.  v1:= 1I;
  #L48778c.  if v0 == v1 then goto L4877b8;
  #L487790.  v1:= 2I;
  #L487792.  if v0 == v1 then goto L4877a4;
  #L487796.  v0:= v2.`uc.t.o` @type ^`uc.g` @kind object;
  #L48779a.  call temp:= `B`(v0, v3) @signature `Luc/g;.B:(Lyc/i;)J` @kind virtual;
  #L4877a0.  v0:= temp @kind wide;
  #L4877a2.  return v0 @kind wide;
  #L4877a4.  call temp:= `X`(v2) @signature `Luc/t;.X:()Luc/r;` @kind virtual;
  #L4877aa.  v3:= temp @kind object;
  #L4877ac.  call temp:= `S`(v3) @signature `Luc/r;.S:()I` @kind virtual;
  #L4877b2.  v3:= temp;
  #L4877b4.  v0:= (`long`) v3 @kind i2l;
  #L4877b6.  return v0 @kind wide;
  #L4877b8.  call temp:= `e0`(v2) @signature `Lvc/f;.e0:()J` @kind virtual;
  #L4877be.  v0:= temp @kind wide;
  #L4877c0.  return v0 @kind wide;
  #L4877c2.  call temp:= `o`(v3, v2) @signature `Lyc/i;.o:(Lyc/e;)J` @kind interface;
  #L4877c8.  v0:= temp @kind wide;
  #L4877ca.  return v0 @kind wide;
}
procedure `yc.d` `D`(`uc.t` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Luc/t;.D:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L488080.  call temp:= `F0`(v0, v1, v3) @signature `Luc/t;.F0:(JLyc/l;)Luc/t;` @kind virtual;
  #L488086.  v1:= temp @kind object;
  #L488088.  return v1 @kind object;
}
procedure `int` `F`(`uc.t` v3 @kind this, `yc.i` v4 @kind object) @signature `Luc/t;.F:(Lyc/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4874b0.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4874b4.  if v0 == 0 then goto L487528;
  #L4874b8.  v0:= `@@uc.t$b.a` @type ^`int`[] @kind object;
  #L4874bc.  v1:= v4 @kind object;
  #L4874be.  v1:= (`yc.a`) v1 @kind object;
  #L4874c2.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4874c8.  v1:= temp;
  #L4874ca.  v0:= v0[v1];
  #L4874ce.  v1:= 1I;
  #L4874d0.  if v0 == v1 then goto L4874fa;
  #L4874d4.  v1:= 2I;
  #L4874d6.  if v0 == v1 then goto L4874e8;
  #L4874da.  v0:= v3.`uc.t.o` @type ^`uc.g` @kind object;
  #L4874de.  call temp:= `F`(v0, v4) @signature `Luc/g;.F:(Lyc/i;)I` @kind virtual;
  #L4874e4.  v4:= temp;
  #L4874e6.  return v4;
  #L4874e8.  call temp:= `X`(v3) @signature `Luc/t;.X:()Luc/r;` @kind virtual;
  #L4874ee.  v4:= temp @kind object;
  #L4874f0.  call temp:= `S`(v4) @signature `Luc/r;.S:()I` @kind virtual;
  #L4874f6.  v4:= temp;
  #L4874f8.  return v4;
  #L4874fa.  v0:= new `uc.b`;
  #L4874fe.  v1:= new `java.lang.StringBuilder`;
  #L487502.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L487508.  v2:= "Field too large for an int: " @kind object;
  #L48750c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L487512.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L487518.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48751e.  v4:= temp @kind object;
  #L487520.  call `<init>`(v0, v4) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L487526.  throw v0;
  #L487528.  call temp:= `F`(v3, v4) @signature `Lvc/f;.F:(Lyc/i;)I` @kind super;
  #L48752e.  v4:= temp;
  #L487530.  return v4;
}
procedure `uc.t` `F0`(`uc.t` v1 @kind this, `long` v2 , `yc.l` v4 @kind object) @signature `Luc/t;.F0:(JLyc/l;)Luc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487c3c.  v0:= instanceof @variable v4 @type ^`yc.b` @kind boolean;
  #L487c40.  if v0 == 0 then goto L487c7c;
  #L487c44.  call temp:= `c`(v4) @signature `Lyc/l;.c:()Z` @kind interface;
  #L487c4a.  v0:= temp;
  #L487c4c.  if v0 == 0 then goto L487c66;
  #L487c50.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L487c54.  call temp:= `D0`(v0, v2, v4) @signature `Luc/g;.D0:(JLyc/l;)Luc/g;` @kind virtual;
  #L487c5a.  v2:= temp @kind object;
  #L487c5c.  call temp:= `J0`(v1, v2) @signature `Luc/t;.J0:(Luc/g;)Luc/t;` @kind direct;
  #L487c62.  v2:= temp @kind object;
  #L487c64.  return v2 @kind object;
  #L487c66.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L487c6a.  call temp:= `D0`(v0, v2, v4) @signature `Luc/g;.D0:(JLyc/l;)Luc/g;` @kind virtual;
  #L487c70.  v2:= temp @kind object;
  #L487c72.  call temp:= `I0`(v1, v2) @signature `Luc/t;.I0:(Luc/g;)Luc/t;` @kind direct;
  #L487c78.  v2:= temp @kind object;
  #L487c7a.  return v2 @kind object;
  #L487c7c.  call temp:= `d`(v4, v1, v2) @signature `Lyc/l;.d:(Lyc/d;J)Lyc/d;` @kind interface;
  #L487c82.  v2:= temp @kind object;
  #L487c84.  v2:= (`uc.t`) v2 @kind object;
  #L487c88.  return v2 @kind object;
}
procedure `uc.t` `G0`(`uc.t` v1 @kind this, `long` v2 ) @signature `Luc/t;.G0:(J)Luc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487c9c.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L487ca0.  call temp:= `E0`(v0, v2) @signature `Luc/g;.E0:(J)Luc/g;` @kind virtual;
  #L487ca6.  v2:= temp @kind object;
  #L487ca8.  call temp:= `J0`(v1, v2) @signature `Luc/t;.J0:(Luc/g;)Luc/t;` @kind direct;
  #L487cae.  v2:= temp @kind object;
  #L487cb0.  return v2 @kind object;
}
procedure `yc.d` `L`(`uc.t` v0 @kind this, `yc.f` v1 @kind object) @signature `Luc/t;.L:(Lyc/f;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48809c.  call temp:= `N0`(v0, v1) @signature `Luc/t;.N0:(Lyc/f;)Luc/t;` @kind virtual;
  #L4880a2.  v1:= temp @kind object;
  #L4880a4.  return v1 @kind object;
}
procedure `uc.f` `L0`(`uc.t` v1 @kind this) @signature `Luc/t;.L0:()Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4877fc.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L487800.  call temp:= `M0`(v0) @signature `Luc/g;.M0:()Luc/f;` @kind virtual;
  #L487806.  v0:= temp @kind object;
  #L487808.  return v0 @kind object;
}
procedure `uc.g` `M0`(`uc.t` v1 @kind this) @signature `Luc/t;.M0:()Luc/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48781c.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L487820.  return v0 @kind object;
}
procedure `uc.t` `N0`(`uc.t` v3 @kind this, `yc.f` v4 @kind object) @signature `Luc/t;.N0:(Lyc/f;)Luc/t;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L487d98.  v0:= instanceof @variable v4 @type ^`uc.f` @kind boolean;
  #L487d9c.  if v0 == 0 then goto L487dc2;
  #L487da0.  v4:= (`uc.f`) v4 @kind object;
  #L487da4.  v0:= v3.`uc.t.o` @type ^`uc.g` @kind object;
  #L487da8.  call temp:= `i0`(v0) @signature `Luc/g;.i0:()Luc/h;` @kind virtual;
  #L487dae.  v0:= temp @kind object;
  #L487db0.  call temp:= `z0`(v4, v0) @signature `Luc/g;.z0:(Luc/f;Luc/h;)Luc/g;` @kind static;
  #L487db6.  v4:= temp @kind object;
  #L487db8.  call temp:= `J0`(v3, v4) @signature `Luc/t;.J0:(Luc/g;)Luc/t;` @kind direct;
  #L487dbe.  v4:= temp @kind object;
  #L487dc0.  return v4 @kind object;
  #L487dc2.  v0:= instanceof @variable v4 @type ^`uc.h` @kind boolean;
  #L487dc6.  if v0 == 0 then goto L487dec;
  #L487dca.  v0:= v3.`uc.t.o` @type ^`uc.g` @kind object;
  #L487dce.  call temp:= `M0`(v0) @signature `Luc/g;.M0:()Luc/f;` @kind virtual;
  #L487dd4.  v0:= temp @kind object;
  #L487dd6.  v4:= (`uc.h`) v4 @kind object;
  #L487dda.  call temp:= `z0`(v0, v4) @signature `Luc/g;.z0:(Luc/f;Luc/h;)Luc/g;` @kind static;
  #L487de0.  v4:= temp @kind object;
  #L487de2.  call temp:= `J0`(v3, v4) @signature `Luc/t;.J0:(Luc/g;)Luc/t;` @kind direct;
  #L487de8.  v4:= temp @kind object;
  #L487dea.  return v4 @kind object;
  #L487dec.  v0:= instanceof @variable v4 @type ^`uc.g` @kind boolean;
  #L487df0.  if v0 == 0 then goto L487e02;
  #L487df4.  v4:= (`uc.g`) v4 @kind object;
  #L487df8.  call temp:= `J0`(v3, v4) @signature `Luc/t;.J0:(Luc/g;)Luc/t;` @kind direct;
  #L487dfe.  v4:= temp @kind object;
  #L487e00.  return v4 @kind object;
  #L487e02.  v0:= instanceof @variable v4 @type ^`uc.e` @kind boolean;
  #L487e06.  if v0 == 0 then goto L487e2c;
  #L487e0a.  v4:= (`uc.e`) v4 @kind object;
  #L487e0e.  call temp:= `a0`(v4) @signature `Luc/e;.a0:()J` @kind virtual;
  #L487e14.  v0:= temp @kind wide;
  #L487e16.  call temp:= `b0`(v4) @signature `Luc/e;.b0:()I` @kind virtual;
  #L487e1c.  v4:= temp;
  #L487e1e.  v2:= v3.`uc.t.q` @type ^`uc.q` @kind object;
  #L487e22.  call temp:= `m0`(v0, v4, v2) @signature `Luc/t;.m0:(JILuc/q;)Luc/t;` @kind static;
  #L487e28.  v4:= temp @kind object;
  #L487e2a.  return v4 @kind object;
  #L487e2c.  v0:= instanceof @variable v4 @type ^`uc.r` @kind boolean;
  #L487e30.  if v0 == 0 then goto L487e42;
  #L487e34.  v4:= (`uc.r`) v4 @kind object;
  #L487e38.  call temp:= `K0`(v3, v4) @signature `Luc/t;.K0:(Luc/r;)Luc/t;` @kind direct;
  #L487e3e.  v4:= temp @kind object;
  #L487e40.  return v4 @kind object;
  #L487e42.  call temp:= `I`(v4, v3) @signature `Lyc/f;.I:(Lyc/d;)Lyc/d;` @kind interface;
  #L487e48.  v4:= temp @kind object;
  #L487e4a.  v4:= (`uc.t`) v4 @kind object;
  #L487e4e.  return v4 @kind object;
}
procedure `uc.t` `O0`(`uc.t` v3 @kind this, `yc.i` v4 @kind object, `long` v5 ) @signature `Luc/t;.O0:(Lyc/i;J)Luc/t;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L487e60.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L487e64.  if v0 == 0 then goto L487ed0;
  #L487e68.  v0:= v4 @kind object;
  #L487e6a.  v0:= (`yc.a`) v0 @kind object;
  #L487e6e.  v1:= `@@uc.t$b.a` @type ^`int`[] @kind object;
  #L487e72.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L487e78.  v2:= temp;
  #L487e7a.  v1:= v1[v2];
  #L487e7e.  v2:= 1I;
  #L487e80.  if v1 == v2 then goto L487eba;
  #L487e84.  v2:= 2I;
  #L487e86.  if v1 == v2 then goto L487ea0;
  #L487e8a.  v0:= v3.`uc.t.o` @type ^`uc.g` @kind object;
  #L487e8e.  call temp:= `P0`(v0, v4, v5) @signature `Luc/g;.P0:(Lyc/i;J)Luc/g;` @kind virtual;
  #L487e94.  v4:= temp @kind object;
  #L487e96.  call temp:= `J0`(v3, v4) @signature `Luc/t;.J0:(Luc/g;)Luc/t;` @kind direct;
  #L487e9c.  v4:= temp @kind object;
  #L487e9e.  return v4 @kind object;
  #L487ea0.  call temp:= `r`(v0, v5) @signature `Lyc/a;.r:(J)I` @kind virtual;
  #L487ea6.  v4:= temp;
  #L487ea8.  call temp:= `X`(v4) @signature `Luc/r;.X:(I)Luc/r;` @kind static;
  #L487eae.  v4:= temp @kind object;
  #L487eb0.  call temp:= `K0`(v3, v4) @signature `Luc/t;.K0:(Luc/r;)Luc/t;` @kind direct;
  #L487eb6.  v4:= temp @kind object;
  #L487eb8.  return v4 @kind object;
  #L487eba.  call temp:= `t0`(v3) @signature `Luc/t;.t0:()I` @kind virtual;
  #L487ec0.  v4:= temp;
  #L487ec2.  v0:= v3.`uc.t.q` @type ^`uc.q` @kind object;
  #L487ec6.  call temp:= `m0`(v5, v4, v0) @signature `Luc/t;.m0:(JILuc/q;)Luc/t;` @kind static;
  #L487ecc.  v4:= temp @kind object;
  #L487ece.  return v4 @kind object;
  #L487ed0.  call temp:= `e`(v4, v3, v5) @signature `Lyc/i;.e:(Lyc/d;J)Lyc/d;` @kind interface;
  #L487ed6.  v4:= temp @kind object;
  #L487ed8.  v4:= (`uc.t`) v4 @kind object;
  #L487edc.  return v4 @kind object;
}
procedure `yc.d` `P`(`uc.t` v0 @kind this, `yc.i` v1 @kind object, `long` v2 ) @signature `Luc/t;.P:(Lyc/i;J)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4880b8.  call temp:= `O0`(v0, v1, v2) @signature `Luc/t;.O0:(Lyc/i;J)Luc/t;` @kind virtual;
  #L4880be.  v1:= temp @kind object;
  #L4880c0.  return v1 @kind object;
}
procedure `uc.t` `P0`(`uc.t` v2 @kind this, `uc.q` v3 @kind object) @signature `Luc/t;.P0:(Luc/q;)Luc/t;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L487ef0.  v0:= "zone" @kind object;
  #L487ef4.  call temp:= `i`(v3, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L487efa.  v0:= v2.`uc.t.q` @type ^`uc.q` @kind object;
  #L487efe.  call temp:= `equals`(v0, v3) @signature `Luc/q;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L487f04.  v0:= temp;
  #L487f06.  if v0 == 0 then goto L487f0e;
  #L487f0a.  v3:= v2 @kind object;
  #L487f0c.  goto L487f1e;
  #L487f0e.  v0:= v2.`uc.t.o` @type ^`uc.g` @kind object;
  #L487f12.  v1:= v2.`uc.t.p` @type ^`uc.r` @kind object;
  #L487f16.  call temp:= `E0`(v0, v3, v1) @signature `Luc/t;.E0:(Luc/g;Luc/q;Luc/r;)Luc/t;` @kind static;
  #L487f1c.  v3:= temp @kind object;
  #L487f1e.  return v3 @kind object;
}
procedure `void` `Q0`(`uc.t` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Luc/t;.Q0:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L488034.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L488038.  call `Q0`(v0, v2) @signature `Luc/g;.Q0:(Ljava/io/DataOutput;)V` @kind virtual;
  #L48803e.  v0:= v1.`uc.t.p` @type ^`uc.r` @kind object;
  #L488042.  call `e0`(v0, v2) @signature `Luc/r;.e0:(Ljava/io/DataOutput;)V` @kind virtual;
  #L488048.  v0:= v1.`uc.t.q` @type ^`uc.q` @kind object;
  #L48804c.  call `s`(v0, v2) @signature `Luc/q;.s:(Ljava/io/DataOutput;)V` @kind virtual;
  #L488052.  return @kind void;
}
procedure `uc.r` `X`(`uc.t` v1 @kind this) @signature `Luc/t;.X:()Luc/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48786c.  v0:= v1.`uc.t.p` @type ^`uc.r` @kind object;
  #L487870.  return v0 @kind object;
}
procedure `uc.q` `a0`(`uc.t` v1 @kind this) @signature `Luc/t;.a0:()Luc/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487854.  v0:= v1.`uc.t.q` @type ^`uc.q` @kind object;
  #L487858.  return v0 @kind object;
}
procedure `vc.f` `c0`(`uc.t` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Luc/t;.c0:(JLyc/l;)Lvc/f;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L487f68.  call temp:= `w0`(v0, v1, v3) @signature `Luc/t;.w0:(JLyc/l;)Luc/t;` @kind virtual;
  #L487f6e.  v1:= temp @kind object;
  #L487f70.  return v1 @kind object;
}
procedure `boolean` `d`(`uc.t` v1 @kind this, `yc.i` v2 @kind object) @signature `Luc/t;.d:(Lyc/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48747c.  v0:= instanceof @variable v2 @type ^`yc.a` @kind boolean;
  #L487480.  if v0 != 0 then goto L48749a;
  #L487484.  if v2 == 0 then goto L487496;
  #L487488.  call temp:= `j`(v2, v1) @signature `Lyc/i;.j:(Lyc/e;)Z` @kind interface;
  #L48748e.  v2:= temp;
  #L487490.  if v2 == 0 then goto L487496;
  #L487494.  goto L48749a;
  #L487496.  v2:= 0I;
  #L487498.  goto L48749c;
  #L48749a.  v2:= 1I;
  #L48749c.  return v2;
}
procedure `vc.f` `d0`(`uc.t` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Luc/t;.d0:(JLyc/l;)Lvc/f;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L487f84.  call temp:= `F0`(v0, v1, v3) @signature `Luc/t;.F0:(JLyc/l;)Luc/t;` @kind virtual;
  #L487f8a.  v1:= temp @kind object;
  #L487f8c.  return v1 @kind object;
}
procedure `boolean` `equals`(`uc.t` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Luc/t;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L487410.  v0:= 1I;
  #L487412.  if v4 != v5 then goto L487418;
  #L487416.  return v0;
  #L487418.  v1:= instanceof @variable v5 @type ^`uc.t` @kind boolean;
  #L48741c.  v2:= 0I;
  #L48741e.  if v1 == 0 then goto L487468;
  #L487422.  v5:= (`uc.t`) v5 @kind object;
  #L487426.  v1:= v4.`uc.t.o` @type ^`uc.g` @kind object;
  #L48742a.  v3:= v5.`uc.t.o` @type ^`uc.g` @kind object;
  #L48742e.  call temp:= `equals`(v1, v3) @signature `Luc/g;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L487434.  v1:= temp;
  #L487436.  if v1 == 0 then goto L487464;
  #L48743a.  v1:= v4.`uc.t.p` @type ^`uc.r` @kind object;
  #L48743e.  v3:= v5.`uc.t.p` @type ^`uc.r` @kind object;
  #L487442.  call temp:= `equals`(v1, v3) @signature `Luc/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L487448.  v1:= temp;
  #L48744a.  if v1 == 0 then goto L487464;
  #L48744e.  v1:= v4.`uc.t.q` @type ^`uc.q` @kind object;
  #L487452.  v5:= v5.`uc.t.q` @type ^`uc.q` @kind object;
  #L487456.  call temp:= `equals`(v1, v5) @signature `Luc/q;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48745c.  v5:= temp;
  #L48745e.  if v5 == 0 then goto L487464;
  #L487462.  goto L487466;
  #L487464.  v0:= 0I;
  #L487466.  return v0;
  #L487468.  return v2;
}
procedure `vc.b` `g0`(`uc.t` v1 @kind this) @signature `Luc/t;.g0:()Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L487f30.  call temp:= `L0`(v1) @signature `Luc/t;.L0:()Luc/f;` @kind virtual;
  #L487f36.  v0:= temp @kind object;
  #L487f38.  return v0 @kind object;
}
procedure `vc.c` `h0`(`uc.t` v1 @kind this) @signature `Luc/t;.h0:()Lvc/c;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L487f4c.  call temp:= `M0`(v1) @signature `Luc/t;.M0:()Luc/g;` @kind virtual;
  #L487f52.  v0:= temp @kind object;
  #L487f54.  return v0 @kind object;
}
procedure `int` `hashCode`(`uc.t` v3 @kind this) @signature `Luc/t;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L487624.  v0:= v3.`uc.t.o` @type ^`uc.g` @kind object;
  #L487628.  call temp:= `hashCode`(v0) @signature `Luc/g;.hashCode:()I` @kind virtual;
  #L48762e.  v0:= temp;
  #L487630.  v1:= v3.`uc.t.p` @type ^`uc.r` @kind object;
  #L487634.  call temp:= `hashCode`(v1) @signature `Luc/r;.hashCode:()I` @kind virtual;
  #L48763a.  v1:= temp;
  #L48763c.  v0:= v0 ^~ v1 @kind int;
  #L48763e.  v1:= v3.`uc.t.q` @type ^`uc.q` @kind object;
  #L487642.  call temp:= `hashCode`(v1) @signature `Luc/q;.hashCode:()I` @kind virtual;
  #L487648.  v1:= temp;
  #L48764a.  v2:= 3I;
  #L48764c.  call temp:= `rotateLeft`(v1, v2) @signature `Ljava/lang/Integer;.rotateLeft:(II)I` @kind static;
  #L487652.  v1:= temp;
  #L487654.  v0:= v0 ^~ v1 @kind int;
  #L487656.  return v0;
}
procedure `uc.h` `i0`(`uc.t` v1 @kind this) @signature `Luc/t;.i0:()Luc/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487834.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L487838.  call temp:= `i0`(v0) @signature `Luc/g;.i0:()Luc/h;` @kind virtual;
  #L48783e.  v0:= temp @kind object;
  #L487840.  return v0 @kind object;
}
procedure `java.lang.Object` `j`(`uc.t` v1 @kind this, `yc.k` v2 @kind object) @signature `Luc/t;.j:(Lyc/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487668.  call temp:= `b`() @signature `Lyc/j;.b:()Lyc/k;` @kind static;
  #L48766e.  v0:= temp @kind object;
  #L487670.  if v2 != v0 then goto L48767e;
  #L487674.  call temp:= `L0`(v1) @signature `Luc/t;.L0:()Luc/f;` @kind virtual;
  #L48767a.  v2:= temp @kind object;
  #L48767c.  return v2 @kind object;
  #L48767e.  call temp:= `j`(v1, v2) @signature `Lvc/f;.j:(Lyc/k;)Ljava/lang/Object;` @kind super;
  #L487684.  v2:= temp @kind object;
  #L487686.  return v2 @kind object;
}
procedure `vc.f` `j0`(`uc.t` v0 @kind this, `yc.f` v1 @kind object) @signature `Luc/t;.j0:(Lyc/f;)Lvc/f;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L487fa0.  call temp:= `N0`(v0, v1) @signature `Luc/t;.N0:(Lyc/f;)Luc/t;` @kind virtual;
  #L487fa6.  v1:= temp @kind object;
  #L487fa8.  return v1 @kind object;
}
procedure `vc.f` `k0`(`uc.t` v0 @kind this, `yc.i` v1 @kind object, `long` v2 ) @signature `Luc/t;.k0:(Lyc/i;J)Lvc/f;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L487fbc.  call temp:= `O0`(v0, v1, v2) @signature `Luc/t;.O0:(Lyc/i;J)Luc/t;` @kind virtual;
  #L487fc2.  v1:= temp @kind object;
  #L487fc4.  return v1 @kind object;
}
procedure `vc.f` `l0`(`uc.t` v0 @kind this, `uc.q` v1 @kind object) @signature `Luc/t;.l0:(Luc/q;)Lvc/f;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L487fd8.  call temp:= `P0`(v0, v1) @signature `Luc/t;.P0:(Luc/q;)Luc/t;` @kind virtual;
  #L487fde.  v1:= temp @kind object;
  #L487fe0.  return v1 @kind object;
}
procedure `int` `o0`(`uc.t` v1 @kind this) @signature `Luc/t;.o0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487544.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L487548.  call temp:= `p0`(v0) @signature `Luc/g;.p0:()I` @kind virtual;
  #L48754e.  v0:= temp;
  #L487550.  return v0;
}
procedure `uc.c` `p0`(`uc.t` v1 @kind this) @signature `Luc/t;.p0:()Luc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4877dc.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L4877e0.  call temp:= `q0`(v0) @signature `Luc/g;.q0:()Luc/c;` @kind virtual;
  #L4877e6.  v0:= temp @kind object;
  #L4877e8.  return v0 @kind object;
}
procedure `int` `q0`(`uc.t` v1 @kind this) @signature `Luc/t;.q0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487564.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L487568.  call temp:= `r0`(v0) @signature `Luc/g;.r0:()I` @kind virtual;
  #L48756e.  v0:= temp;
  #L487570.  return v0;
}
procedure `yc.d` `r`(`uc.t` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Luc/t;.r:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L488064.  call temp:= `w0`(v0, v1, v3) @signature `Luc/t;.w0:(JLyc/l;)Luc/t;` @kind virtual;
  #L48806a.  v1:= temp @kind object;
  #L48806c.  return v1 @kind object;
}
procedure `int` `r0`(`uc.t` v1 @kind this) @signature `Luc/t;.r0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487584.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L487588.  call temp:= `s0`(v0) @signature `Luc/g;.s0:()I` @kind virtual;
  #L48758e.  v0:= temp;
  #L487590.  return v0;
}
procedure `int` `s0`(`uc.t` v1 @kind this) @signature `Luc/t;.s0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4875a4.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L4875a8.  call temp:= `t0`(v0) @signature `Luc/g;.t0:()I` @kind virtual;
  #L4875ae.  v0:= temp;
  #L4875b0.  return v0;
}
procedure `yc.n` `t`(`uc.t` v1 @kind this, `yc.i` v2 @kind object) @signature `Luc/t;.t:(Lyc/i;)Lyc/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4880d4.  v0:= instanceof @variable v2 @type ^`yc.a` @kind boolean;
  #L4880d8.  if v0 == 0 then goto L488106;
  #L4880dc.  v0:= `@@yc.a.U` @type ^`yc.a` @kind object;
  #L4880e0.  if v2 == v0 then goto L4880fc;
  #L4880e4.  v0:= `@@yc.a.V` @type ^`yc.a` @kind object;
  #L4880e8.  if v2 != v0 then goto L4880ee;
  #L4880ec.  goto L4880fc;
  #L4880ee.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L4880f2.  call temp:= `t`(v0, v2) @signature `Luc/g;.t:(Lyc/i;)Lyc/n;` @kind virtual;
  #L4880f8.  v2:= temp @kind object;
  #L4880fa.  return v2 @kind object;
  #L4880fc.  call temp:= `k`(v2) @signature `Lyc/i;.k:()Lyc/n;` @kind interface;
  #L488102.  v2:= temp @kind object;
  #L488104.  return v2 @kind object;
  #L488106.  call temp:= `h`(v2, v1) @signature `Lyc/i;.h:(Lyc/e;)Lyc/n;` @kind interface;
  #L48810c.  v2:= temp @kind object;
  #L48810e.  return v2 @kind object;
}
procedure `int` `t0`(`uc.t` v1 @kind this) @signature `Luc/t;.t0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4875c4.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L4875c8.  call temp:= `u0`(v0) @signature `Luc/g;.u0:()I` @kind virtual;
  #L4875ce.  v0:= temp;
  #L4875d0.  return v0;
}
procedure `java.lang.String` `toString`(`uc.t` v3 @kind this) @signature `Luc/t;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4876d8.  v0:= new `java.lang.StringBuilder`;
  #L4876dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4876e2.  v1:= v3.`uc.t.o` @type ^`uc.g` @kind object;
  #L4876e6.  call temp:= `toString`(v1) @signature `Luc/g;.toString:()Ljava/lang/String;` @kind virtual;
  #L4876ec.  v1:= temp @kind object;
  #L4876ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4876f4.  v1:= v3.`uc.t.p` @type ^`uc.r` @kind object;
  #L4876f8.  call temp:= `toString`(v1) @signature `Luc/r;.toString:()Ljava/lang/String;` @kind virtual;
  #L4876fe.  v1:= temp @kind object;
  #L487700.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L487706.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48770c.  v0:= temp @kind object;
  #L48770e.  v1:= v3.`uc.t.p` @type ^`uc.r` @kind object;
  #L487712.  v2:= v3.`uc.t.q` @type ^`uc.q` @kind object;
  #L487716.  if v1 == v2 then goto L487758;
  #L48771a.  v1:= new `java.lang.StringBuilder`;
  #L48771e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L487724.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48772a.  v0:= 91I;
  #L48772e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L487734.  v0:= v3.`uc.t.q` @type ^`uc.q` @kind object;
  #L487738.  call temp:= `toString`(v0) @signature `Luc/q;.toString:()Ljava/lang/String;` @kind virtual;
  #L48773e.  v0:= temp @kind object;
  #L487740.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L487746.  v0:= 93I;
  #L48774a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L487750.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L487756.  v0:= temp @kind object;
  #L487758.  return v0 @kind object;
}
procedure `int` `u0`(`uc.t` v1 @kind this) @signature `Luc/t;.u0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4875e4.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L4875e8.  call temp:= `v0`(v0) @signature `Luc/g;.v0:()I` @kind virtual;
  #L4875ee.  v0:= temp;
  #L4875f0.  return v0;
}
procedure `int` `v0`(`uc.t` v1 @kind this) @signature `Luc/t;.v0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L487604.  v0:= v1.`uc.t.o` @type ^`uc.g` @kind object;
  #L487608.  call temp:= `w0`(v0) @signature `Luc/g;.w0:()I` @kind virtual;
  #L48760e.  v0:= temp;
  #L487610.  return v0;
}
procedure `uc.t` `w0`(`uc.t` v3 @kind this, `long` v4 , `yc.l` v6 @kind object) @signature `Luc/t;.w0:(JLyc/l;)Luc/t;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48799c.  v0:= -9223372036854775808L;
  #L4879a0.  v2:= lcmp(v4, v0);
  #L4879a4.  if v2 != 0 then goto L4879c8;
  #L4879a8.  v4:= 9223372036854775807L;
  #L4879b2.  call temp:= `F0`(v3, v4, v6) @signature `Luc/t;.F0:(JLyc/l;)Luc/t;` @kind virtual;
  #L4879b8.  v4:= temp @kind object;
  #L4879ba.  v0:= 1L;
  #L4879be.  call temp:= `F0`(v4, v0, v6) @signature `Luc/t;.F0:(JLyc/l;)Luc/t;` @kind virtual;
  #L4879c4.  v4:= temp @kind object;
  #L4879c6.  goto L4879d2;
  #L4879c8.  v4:= -v4 @kind long;
  #L4879ca.  call temp:= `F0`(v3, v4, v6) @signature `Luc/t;.F0:(JLyc/l;)Luc/t;` @kind virtual;
  #L4879d0.  v4:= temp @kind object;
  #L4879d2.  return v4 @kind object;
}
