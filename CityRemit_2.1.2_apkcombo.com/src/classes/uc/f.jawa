record `uc.f` @kind class @AccessFlag PUBLIC_FINAL extends `vc.b` @kind class, `java.io.Serializable` @kind interface {
  `int` `uc.f.o` @AccessFlag PRIVATE_FINAL;
  `short` `uc.f.p` @AccessFlag PRIVATE_FINAL;
  `short` `uc.f.q` @AccessFlag PRIVATE_FINAL;
}
global `uc.f` `@@uc.f.r` @AccessFlag PUBLIC_STATIC_FINAL;
global `uc.f` `@@uc.f.s` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Luc/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L480b00.  v0:= -999999999I;
  #L480b06.  v1:= 1I;
  #L480b08.  call temp:= `C0`(v0, v1, v1) @signature `Luc/f;.C0:(III)Luc/f;` @kind static;
  #L480b0e.  v0:= temp @kind object;
  #L480b10.  `@@uc.f.r` @type ^`uc.f` := v0 @kind object;
  #L480b14.  v0:= 999999999I;
  #L480b1a.  v1:= 12I;
  #L480b1e.  v2:= 31I;
  #L480b22.  call temp:= `C0`(v0, v1, v2) @signature `Luc/f;.C0:(III)Luc/f;` @kind static;
  #L480b28.  v0:= temp @kind object;
  #L480b2a.  `@@uc.f.s` @type ^`uc.f` := v0 @kind object;
  #L480b2e.  v0:= new `uc.f$a`;
  #L480b32.  call `<init>`(v0) @signature `Luc/f$a;.<init>:()V` @kind direct;
  #L480b38.  return @kind void;
}
procedure `void` `<init>`(`uc.f` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Luc/f;.<init>:(III)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L480b4c.  call `<init>`(v0) @signature `Lvc/b;.<init>:()V` @kind direct;
  #L480b52.  v0.`uc.f.o` @type ^`int` := v1;
  #L480b56.  v1:= (`short`) v2 @kind i2s;
  #L480b58.  v0.`uc.f.p` @type ^`short` := v1 @kind char;
  #L480b5c.  v1:= (`short`) v3 @kind i2s;
  #L480b5e.  v0.`uc.f.q` @type ^`short` := v1 @kind char;
  #L480b62.  return @kind void;
}
procedure `uc.f` `C0`(`int` v3 , `int` v4 , `int` v5 ) @signature `Luc/f;.C0:(III)Luc/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4801c8.  v0:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L4801cc.  v1:= (`long`) v3 @kind i2l;
  #L4801ce.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4801d4.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L4801d8.  v1:= (`long`) v4 @kind i2l;
  #L4801da.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4801e0.  v0:= `@@yc.a.K` @type ^`yc.a` @kind object;
  #L4801e4.  v1:= (`long`) v5 @kind i2l;
  #L4801e6.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4801ec.  call temp:= `o`(v4) @signature `Luc/i;.o:(I)Luc/i;` @kind static;
  #L4801f2.  v4:= temp @kind object;
  #L4801f4.  call temp:= `l0`(v3, v4, v5) @signature `Luc/f;.l0:(ILuc/i;I)Luc/f;` @kind static;
  #L4801fa.  v3:= temp @kind object;
  #L4801fc.  return v3 @kind object;
}
procedure `uc.f` `D0`(`int` v3 , `uc.i` v4 @kind object, `int` v5 ) @signature `Luc/f;.D0:(ILuc/i;I)Luc/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L480210.  v0:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L480214.  v1:= (`long`) v3 @kind i2l;
  #L480216.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L48021c.  v0:= "month" @kind object;
  #L480220.  call temp:= `i`(v4, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L480226.  v0:= `@@yc.a.K` @type ^`yc.a` @kind object;
  #L48022a.  v1:= (`long`) v5 @kind i2l;
  #L48022c.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L480232.  call temp:= `l0`(v3, v4, v5) @signature `Luc/f;.l0:(ILuc/i;I)Luc/f;` @kind static;
  #L480238.  v3:= temp @kind object;
  #L48023a.  return v3 @kind object;
}
procedure `uc.f` `E0`(`long` v22 ) @signature `Luc/f;.E0:(J)Luc/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L48024c.  v0:= v22 @kind wide;
  #L480250.  v2:= `@@yc.a.M` @type ^`yc.a` @kind object;
  #L480254.  call temp:= `s`(v2, v0) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L48025a.  v2:= 719528L;
  #L480260.  v0:= v0 + v2 @kind long;
  #L480262.  v2:= 60L;
  #L480266.  v0:= v0 - v2 @kind long;
  #L480268.  v2:= 1L;
  #L48026c.  v4:= 146097L;
  #L480272.  v6:= 0L;
  #L480276.  v8:= 400L;
  #L48027a.  v10:= lcmp(v0, v6);
  #L48027e.  if v10 >= 0 then goto L480298;
  #L480282.  v10:= v0 + v2 @kind long;
  #L480286.  v10:= v10 / v4 @kind long;
  #L480288.  v10:= v10 - v2 @kind long;
  #L48028a.  v12:= v10 * v8 @kind long;
  #L48028e.  v10:= -v10 @kind long;
  #L480290.  v10:= v10 * v4 @kind long;
  #L480294.  v0:= v0 + v10 @kind long;
  #L480296.  goto L48029a;
  #L480298.  v12:= v6 @kind wide;
  #L48029a.  v10:= v0 * v8 @kind long;
  #L48029e.  v14:= 591L;
  #L4802a2.  v10:= v10 + v14 @kind long;
  #L4802a4.  v10:= v10 / v4 @kind long;
  #L4802a6.  v4:= 365L;
  #L4802aa.  v14:= v10 * v4 @kind long;
  #L4802ae.  v16:= 4L;
  #L4802b2.  v18:= v10 / v16 @kind long;
  #L4802b6.  v14:= v14 + v18 @kind long;
  #L4802ba.  v18:= 100L;
  #L4802be.  v20:= v10 / v18 @kind long;
  #L4802c2.  v14:= v14 - v20 @kind long;
  #L4802c6.  v20:= v10 / v8 @kind long;
  #L4802ca.  v14:= v14 + v20 @kind long;
  #L4802ce.  v14:= v0 - v14 @kind long;
  #L4802d2.  v20:= lcmp(v14, v6);
  #L4802d6.  if v20 >= 0 then goto L4802f6;
  #L4802da.  v10:= v10 - v2 @kind long;
  #L4802dc.  v4:= v4 * v10 @kind long;
  #L4802e0.  v2:= v10 / v16 @kind long;
  #L4802e4.  v4:= v4 + v2 @kind long;
  #L4802e6.  v2:= v10 / v18 @kind long;
  #L4802ea.  v4:= v4 - v2 @kind long;
  #L4802ec.  v2:= v10 / v8 @kind long;
  #L4802f0.  v4:= v4 + v2 @kind long;
  #L4802f2.  v14:= v0 - v4 @kind long;
  #L4802f6.  v10:= v10 + v12 @kind long;
  #L4802f8.  v0:= (`int`) v14 @kind l2i;
  #L4802fa.  v1:= v0 * 5;
  #L4802fe.  v1:= v1 + 2;
  #L480302.  v1:= v1 / 153;
  #L480306.  v2:= v1 + 2;
  #L48030a.  v2:= v2 %% 12;
  #L48030e.  v2:= v2 + 1;
  #L480312.  v3:= v1 * 306;
  #L480316.  v3:= v3 + 5;
  #L48031a.  v3:= v3 / 10;
  #L48031e.  v0:= v0 - v3 @kind int;
  #L480320.  v0:= v0 + 1;
  #L480324.  v1:= v1 / 10;
  #L480328.  v3:= (`long`) v1 @kind i2l;
  #L48032a.  v10:= v10 + v3 @kind long;
  #L48032c.  v1:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L480330.  call temp:= `r`(v1, v10) @signature `Lyc/a;.r:(J)I` @kind virtual;
  #L480336.  v1:= temp;
  #L480338.  v3:= new `uc.f`;
  #L48033c.  call `<init>`(v3, v1, v2, v0) @signature `Luc/f;.<init>:(III)V` @kind direct;
  #L480342.  return v3 @kind object;
}
procedure `uc.f` `F0`(`int` v5 , `int` v6 ) @signature `Luc/f;.F0:(II)Luc/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L480354.  v0:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L480358.  v1:= (`long`) v5 @kind i2l;
  #L48035a.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L480360.  v0:= `@@yc.a.L` @type ^`yc.a` @kind object;
  #L480364.  v3:= (`long`) v6 @kind i2l;
  #L480366.  call temp:= `s`(v0, v3) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L48036c.  v0:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L480370.  call temp:= `P`(v0, v1) @signature `Lvc/m;.P:(J)Z` @kind virtual;
  #L480376.  v0:= temp;
  #L480378.  v1:= 366I;
  #L48037c.  if v6 != v1 then goto L4803be;
  #L480380.  if v0 == 0 then goto L480386;
  #L480384.  goto L4803be;
  #L480386.  v6:= new `uc.b`;
  #L48038a.  v0:= new `java.lang.StringBuilder`;
  #L48038e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L480394.  v1:= "Invalid date 'DayOfYear 366' as '" @kind object;
  #L480398.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48039e.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4803a4.  v5:= "' is not a leap year" @kind object;
  #L4803a8.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4803ae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4803b4.  v5:= temp @kind object;
  #L4803b6.  call `<init>`(v6, v5) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4803bc.  throw v6;
  #L4803be.  v1:= v6 + -1;
  #L4803c2.  v1:= v1 / 31;
  #L4803c6.  v1:= v1 + 1;
  #L4803ca.  call temp:= `o`(v1) @signature `Luc/i;.o:(I)Luc/i;` @kind static;
  #L4803d0.  v1:= temp @kind object;
  #L4803d2.  call temp:= `c`(v1, v0) @signature `Luc/i;.c:(Z)I` @kind virtual;
  #L4803d8.  v2:= temp;
  #L4803da.  call temp:= `h`(v1, v0) @signature `Luc/i;.h:(Z)I` @kind virtual;
  #L4803e0.  v3:= temp;
  #L4803e2.  v2:= v2 + v3 @kind int;
  #L4803e4.  v2:= v2 + -1;
  #L4803e8.  if v6 <= v2 then goto L4803f8;
  #L4803ec.  v2:= 1L;
  #L4803f0.  call temp:= `s`(v1, v2) @signature `Luc/i;.s:(J)Luc/i;` @kind virtual;
  #L4803f6.  v1:= temp @kind object;
  #L4803f8.  call temp:= `c`(v1, v0) @signature `Luc/i;.c:(Z)I` @kind virtual;
  #L4803fe.  v0:= temp;
  #L480400.  v6:= v6 - v0 @kind int;
  #L480402.  v6:= v6 + 1;
  #L480406.  call temp:= `l0`(v5, v1, v6) @signature `Luc/f;.l0:(ILuc/i;I)Luc/f;` @kind static;
  #L48040c.  v5:= temp @kind object;
  #L48040e.  return v5 @kind object;
}
procedure `uc.f` `M0`(`java.io.DataInput` v2 @kind object) @signature `Luc/f;.M0:(Ljava/io/DataInput;)Luc/f;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L48066c.  call temp:= `readInt`(v2) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L480672.  v0:= temp;
  #L480674.  call temp:= `readByte`(v2) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L48067a.  v1:= temp;
  #L48067c.  call temp:= `readByte`(v2) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L480682.  v2:= temp;
  #L480684.  call temp:= `C0`(v0, v1, v2) @signature `Luc/f;.C0:(III)Luc/f;` @kind static;
  #L48068a.  v2:= temp @kind object;
  #L48068c.  return v2 @kind object;
}
procedure `uc.f` `N0`(`int` v3 , `int` v4 , `int` v5 ) @signature `Luc/f;.N0:(III)Luc/f;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4806a0.  v0:= 2I;
  #L4806a2.  if v4 == v0 then goto L4806d2;
  #L4806a6.  v0:= 4I;
  #L4806a8.  if v4 == v0 then goto L4806c4;
  #L4806ac.  v0:= 6I;
  #L4806ae.  if v4 == v0 then goto L4806c4;
  #L4806b2.  v0:= 9I;
  #L4806b6.  if v4 == v0 then goto L4806c4;
  #L4806ba.  v0:= 11I;
  #L4806be.  if v4 == v0 then goto L4806c4;
  #L4806c2.  goto L4806f0;
  #L4806c4.  v0:= 30I;
  #L4806c8.  call temp:= `min`(v5, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L4806ce.  v5:= temp;
  #L4806d0.  goto L4806f0;
  #L4806d2.  v0:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L4806d6.  v1:= (`long`) v3 @kind i2l;
  #L4806d8.  call temp:= `P`(v0, v1) @signature `Lvc/m;.P:(J)Z` @kind virtual;
  #L4806de.  v0:= temp;
  #L4806e0.  if v0 == 0 then goto L4806ea;
  #L4806e4.  v0:= 29I;
  #L4806e8.  goto L4806c8;
  #L4806ea.  v0:= 28I;
  #L4806ee.  goto L4806c8;
  #L4806f0.  call temp:= `C0`(v3, v4, v5) @signature `Luc/f;.C0:(III)Luc/f;` @kind static;
  #L4806f6.  v3:= temp @kind object;
  #L4806f8.  return v3 @kind object;
}
procedure `uc.f` `l0`(`int` v3 , `uc.i` v4 @kind object, `int` v5 ) @signature `Luc/f;.l0:(ILuc/i;I)Luc/f;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L47ffa0.  v0:= 28I;
  #L47ffa4.  if v5 <= v0 then goto L480052;
  #L47ffa8.  v0:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L47ffac.  v1:= (`long`) v3 @kind i2l;
  #L47ffae.  call temp:= `P`(v0, v1) @signature `Lvc/m;.P:(J)Z` @kind virtual;
  #L47ffb4.  v0:= temp;
  #L47ffb6.  call temp:= `h`(v4, v0) @signature `Luc/i;.h:(Z)I` @kind virtual;
  #L47ffbc.  v0:= temp;
  #L47ffbe.  if v5 <= v0 then goto L480052;
  #L47ffc2.  v0:= 29I;
  #L47ffc6.  if v5 != v0 then goto L480002;
  #L47ffca.  v4:= new `uc.b`;
  #L47ffce.  v5:= new `java.lang.StringBuilder`;
  #L47ffd2.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47ffd8.  v0:= "Invalid date 'February 29' as '" @kind object;
  #L47ffdc.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47ffe2.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47ffe8.  v3:= "' is not a leap year" @kind object;
  #L47ffec.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fff2.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47fff8.  v3:= temp @kind object;
  #L47fffa.  call `<init>`(v4, v3) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L480000.  throw v4;
  #L480002.  v3:= new `uc.b`;
  #L480006.  v0:= new `java.lang.StringBuilder`;
  #L48000a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L480010.  v1:= "Invalid date '" @kind object;
  #L480014.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48001a.  call temp:= `name`(v4) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L480020.  v4:= temp @kind object;
  #L480022.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L480028.  v4:= " " @kind object;
  #L48002c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L480032.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L480038.  v4:= "'" @kind object;
  #L48003c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L480042.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L480048.  v4:= temp @kind object;
  #L48004a.  call `<init>`(v3, v4) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L480050.  throw v3;
  #L480052.  v0:= new `uc.f`;
  #L480056.  call temp:= `getValue`(v4) @signature `Luc/i;.getValue:()I` @kind virtual;
  #L48005c.  v4:= temp;
  #L48005e.  call `<init>`(v0, v3, v4, v5) @signature `Luc/f;.<init>:(III)V` @kind direct;
  #L480064.  return v0 @kind object;
}
procedure `uc.f` `m0`(`yc.e` v3 @kind object) @signature `Luc/f;.m0:(Lyc/e;)Luc/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L480078.  call temp:= `b`() @signature `Lyc/j;.b:()Lyc/k;` @kind static;
  #L48007e.  v0:= temp @kind object;
  #L480080.  call temp:= `j`(v3, v0) @signature `Lyc/e;.j:(Lyc/k;)Ljava/lang/Object;` @kind interface;
  #L480086.  v0:= temp @kind object;
  #L480088.  v0:= (`uc.f`) v0 @kind object;
  #L48008c.  if v0 == 0 then goto L480092;
  #L480090.  return v0 @kind object;
  #L480092.  v0:= new `uc.b`;
  #L480096.  v1:= new `java.lang.StringBuilder`;
  #L48009a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4800a0.  v2:= "Unable to obtain LocalDate from TemporalAccessor: " @kind object;
  #L4800a4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4800aa.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4800b0.  v2:= ", type " @kind object;
  #L4800b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4800ba.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4800c0.  v3:= temp @kind object;
  #L4800c2.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L4800c8.  v3:= temp @kind object;
  #L4800ca.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4800d0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4800d6.  v3:= temp @kind object;
  #L4800d8.  call `<init>`(v0, v3) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4800de.  throw v0;
}
procedure `int` `n0`(`uc.f` v3 @kind this, `yc.i` v4 @kind object) @signature `Luc/f;.n0:(Lyc/i;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47fa58.  v0:= `@@uc.f$b.a` @type ^`int`[] @kind object;
  #L47fa5c.  v1:= v4 @kind object;
  #L47fa5e.  v1:= (`yc.a`) v1 @kind object;
  #L47fa62.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L47fa68.  v1:= temp;
  #L47fa6a.  v0:= v0[v1];
  #L47fa6e.  v1:= "Field too large for an int: " @kind object;
  #L47fa72.  v2:= 1I;
  #L47fa74.  goto L47fb88;
  #L47fa7a.  v0:= new `yc.m`;
  #L47fa7e.  v1:= new `java.lang.StringBuilder`;
  #L47fa82.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47fa88.  v2:= "Unsupported field: " @kind object;
  #L47fa8c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fa92.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fa98.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47fa9e.  v4:= temp @kind object;
  #L47faa0.  call `<init>`(v0, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47faa6.  throw v0;
  #L47faa8.  v4:= v3.`uc.f.o` @type ^`int`;
  #L47faac.  if v4 < v2 then goto L47fab2;
  #L47fab0.  goto L47fab4;
  #L47fab2.  v2:= 0I;
  #L47fab4.  return v2;
  #L47fab6.  v4:= v3.`uc.f.o` @type ^`int`;
  #L47faba.  return v4;
  #L47fabc.  v0:= new `uc.b`;
  #L47fac0.  v2:= new `java.lang.StringBuilder`;
  #L47fac4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47faca.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fad0.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fad6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47fadc.  v4:= temp @kind object;
  #L47fade.  call `<init>`(v0, v4) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47fae4.  throw v0;
  #L47fae6.  v4:= v3.`uc.f.p` @type ^`short` @kind short;
  #L47faea.  return v4;
  #L47faec.  call temp:= `r0`(v3) @signature `Luc/f;.r0:()I` @kind virtual;
  #L47faf2.  v4:= temp;
  #L47faf4.  v4:= v4 - v2 @kind int;
  #L47faf6.  v4:= v4 / 7;
  #L47fafa.  v4:= v4 + v2 @kind int;
  #L47fafc.  return v4;
  #L47fafe.  v0:= new `uc.b`;
  #L47fb02.  v2:= new `java.lang.StringBuilder`;
  #L47fb06.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47fb0c.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fb12.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fb18.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47fb1e.  v4:= temp @kind object;
  #L47fb20.  call `<init>`(v0, v4) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47fb26.  throw v0;
  #L47fb28.  call temp:= `r0`(v3) @signature `Luc/f;.r0:()I` @kind virtual;
  #L47fb2e.  v4:= temp;
  #L47fb30.  v4:= v4 - v2 @kind int;
  #L47fb32.  v4:= v4 %% 7;
  #L47fb36.  v4:= v4 + v2 @kind int;
  #L47fb38.  return v4;
  #L47fb3a.  v4:= v3.`uc.f.q` @type ^`short` @kind short;
  #L47fb3e.  v4:= v4 - v2 @kind int;
  #L47fb40.  v4:= v4 %% 7;
  #L47fb44.  v4:= v4 + v2 @kind int;
  #L47fb46.  return v4;
  #L47fb48.  call temp:= `q0`(v3) @signature `Luc/f;.q0:()Luc/c;` @kind virtual;
  #L47fb4e.  v4:= temp @kind object;
  #L47fb50.  call temp:= `getValue`(v4) @signature `Luc/c;.getValue:()I` @kind virtual;
  #L47fb56.  v4:= temp;
  #L47fb58.  return v4;
  #L47fb5a.  v4:= v3.`uc.f.o` @type ^`int`;
  #L47fb5e.  if v4 < v2 then goto L47fb64;
  #L47fb62.  goto L47fb68;
  #L47fb64.  v4:= v4 - 1;
  #L47fb68.  return v4;
  #L47fb6a.  v4:= v3.`uc.f.q` @type ^`short` @kind short;
  #L47fb6e.  v4:= v4 - v2 @kind int;
  #L47fb70.  v4:= v4 / 7;
  #L47fb74.  v4:= v4 + v2 @kind int;
  #L47fb76.  return v4;
  #L47fb78.  call temp:= `r0`(v3) @signature `Luc/f;.r0:()I` @kind virtual;
  #L47fb7e.  v4:= temp;
  #L47fb80.  return v4;
  #L47fb82.  v4:= v3.`uc.f.q` @type ^`short` @kind short;
  #L47fb86.  return v4;
  #L47fb88.  switch v0
                  | 1 => goto L47fb82
                  | 2 => goto L47fb78
                  | 3 => goto L47fb6a
                  | 4 => goto L47fb5a
                  | 5 => goto L47fb48
                  | 6 => goto L47fb3a
                  | 7 => goto L47fb28
                  | 8 => goto L47fafe
                  | 9 => goto L47faec
                  | 10 => goto L47fae6
                  | 11 => goto L47fabc
                  | 12 => goto L47fab6
                  | 13 => goto L47faa8
                  | else => goto L47fa7a;
}
procedure `java.lang.Object` `readResolve`(`uc.f` v2 @kind this) @signature `Luc/f;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L47fd2c.  v0:= new `java.io.InvalidObjectException`;
  #L47fd30.  v1:= "Deserialization via serialization delegate" @kind object;
  #L47fd34.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47fd3a.  throw v0;
}
procedure `long` `u0`(`uc.f` v4 @kind this) @signature `Luc/f;.u0:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47fe74.  v0:= v4.`uc.f.o` @type ^`int`;
  #L47fe78.  v0:= (`long`) v0 @kind i2l;
  #L47fe7a.  v2:= 12L;
  #L47fe7e.  v0:= v0 * v2 @kind long;
  #L47fe82.  v2:= v4.`uc.f.p` @type ^`short` @kind short;
  #L47fe86.  v2:= v2 + -1;
  #L47fe8a.  v2:= (`long`) v2 @kind i2l;
  #L47fe8c.  v0:= v0 + v2 @kind long;
  #L47fe8e.  return v0 @kind wide;
}
procedure `java.lang.Object` `writeReplace`(`uc.f` v2 @kind this) @signature `Luc/f;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L47fd4c.  v0:= new `uc.n`;
  #L47fd50.  v1:= 3I;
  #L47fd52.  call `<init>`(v0, v1, v2) @signature `Luc/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L47fd58.  return v0 @kind object;
}
procedure `uc.f` `A0`(`uc.f` v3 @kind this, `long` v4 ) @signature `Luc/f;.A0:(J)Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L480138.  v0:= -9223372036854775808L;
  #L48013c.  v2:= lcmp(v4, v0);
  #L480140.  if v2 != 0 then goto L480164;
  #L480144.  v4:= 9223372036854775807L;
  #L48014e.  call temp:= `I0`(v3, v4) @signature `Luc/f;.I0:(J)Luc/f;` @kind virtual;
  #L480154.  v4:= temp @kind object;
  #L480156.  v0:= 1L;
  #L48015a.  call temp:= `I0`(v4, v0) @signature `Luc/f;.I0:(J)Luc/f;` @kind virtual;
  #L480160.  v4:= temp @kind object;
  #L480162.  goto L48016e;
  #L480164.  v4:= -v4 @kind long;
  #L480166.  call temp:= `I0`(v3, v4) @signature `Luc/f;.I0:(J)Luc/f;` @kind virtual;
  #L48016c.  v4:= temp @kind object;
  #L48016e.  return v4 @kind object;
}
procedure `long` `B`(`uc.f` v2 @kind this, `yc.i` v3 @kind object) @signature `Luc/f;.B:(Lyc/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47fe20.  v0:= instanceof @variable v3 @type ^`yc.a` @kind boolean;
  #L47fe24.  if v0 == 0 then goto L47fe58;
  #L47fe28.  v0:= `@@yc.a.M` @type ^`yc.a` @kind object;
  #L47fe2c.  if v3 != v0 then goto L47fe3a;
  #L47fe30.  call temp:= `g0`(v2) @signature `Luc/f;.g0:()J` @kind virtual;
  #L47fe36.  v0:= temp @kind wide;
  #L47fe38.  return v0 @kind wide;
  #L47fe3a.  v0:= `@@yc.a.Q` @type ^`yc.a` @kind object;
  #L47fe3e.  if v3 != v0 then goto L47fe4c;
  #L47fe42.  call temp:= `u0`(v2) @signature `Luc/f;.u0:()J` @kind direct;
  #L47fe48.  v0:= temp @kind wide;
  #L47fe4a.  return v0 @kind wide;
  #L47fe4c.  call temp:= `n0`(v2, v3) @signature `Luc/f;.n0:(Lyc/i;)I` @kind direct;
  #L47fe52.  v3:= temp;
  #L47fe54.  v0:= (`long`) v3 @kind i2l;
  #L47fe56.  return v0 @kind wide;
  #L47fe58.  call temp:= `o`(v3, v2) @signature `Lyc/i;.o:(Lyc/e;)J` @kind interface;
  #L47fe5e.  v0:= temp @kind wide;
  #L47fe60.  return v0 @kind wide;
}
procedure `uc.f` `B0`(`uc.f` v3 @kind this, `long` v4 ) @signature `Luc/f;.B0:(J)Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L480180.  v0:= -9223372036854775808L;
  #L480184.  v2:= lcmp(v4, v0);
  #L480188.  if v2 != 0 then goto L4801ac;
  #L48018c.  v4:= 9223372036854775807L;
  #L480196.  call temp:= `L0`(v3, v4) @signature `Luc/f;.L0:(J)Luc/f;` @kind virtual;
  #L48019c.  v4:= temp @kind object;
  #L48019e.  v0:= 1L;
  #L4801a2.  call temp:= `L0`(v4, v0) @signature `Luc/f;.L0:(J)Luc/f;` @kind virtual;
  #L4801a8.  v4:= temp @kind object;
  #L4801aa.  goto L4801b6;
  #L4801ac.  v4:= -v4 @kind long;
  #L4801ae.  call temp:= `L0`(v3, v4) @signature `Luc/f;.L0:(J)Luc/f;` @kind virtual;
  #L4801b4.  v4:= temp @kind object;
  #L4801b6.  return v4 @kind object;
}
procedure `yc.d` `D`(`uc.f` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Luc/f;.D:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L480bdc.  call temp:= `G0`(v0, v1, v3) @signature `Luc/f;.G0:(JLyc/l;)Luc/f;` @kind virtual;
  #L480be2.  v1:= temp @kind object;
  #L480be4.  return v1 @kind object;
}
procedure `int` `F`(`uc.f` v1 @kind this, `yc.i` v2 @kind object) @signature `Luc/f;.F:(Lyc/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fa2c.  v0:= instanceof @variable v2 @type ^`yc.a` @kind boolean;
  #L47fa30.  if v0 == 0 then goto L47fa3e;
  #L47fa34.  call temp:= `n0`(v1, v2) @signature `Luc/f;.n0:(Lyc/i;)I` @kind direct;
  #L47fa3a.  v2:= temp;
  #L47fa3c.  return v2;
  #L47fa3e.  call temp:= `F`(v1, v2) @signature `Lxc/c;.F:(Lyc/i;)I` @kind super;
  #L47fa44.  v2:= temp;
  #L47fa46.  return v2;
}
procedure `uc.f` `G0`(`uc.f` v2 @kind this, `long` v3 , `yc.l` v5 @kind object) @signature `Luc/f;.G0:(JLyc/l;)Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L480420.  v0:= instanceof @variable v5 @type ^`yc.b` @kind boolean;
  #L480424.  if v0 == 0 then goto L4804fa;
  #L480428.  v0:= v5 @kind object;
  #L48042a.  v0:= (`yc.b`) v0 @kind object;
  #L48042e.  v1:= `@@uc.f$b.b` @type ^`int`[] @kind object;
  #L480432.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L480438.  v0:= temp;
  #L48043a.  v0:= v1[v0];
  #L48043e.  goto L480508;
  #L480444.  v3:= new `yc.m`;
  #L480448.  v4:= new `java.lang.StringBuilder`;
  #L48044c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L480452.  v0:= "Unsupported unit: " @kind object;
  #L480456.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48045c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L480462.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L480468.  v4:= temp @kind object;
  #L48046a.  call `<init>`(v3, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L480470.  throw v3;
  #L480472.  v5:= `@@yc.a.T` @type ^`yc.a` @kind object;
  #L480476.  call temp:= `B`(v2, v5) @signature `Luc/f;.B:(Lyc/i;)J` @kind virtual;
  #L48047c.  v0:= temp @kind wide;
  #L48047e.  call temp:= `k`(v0, v3) @signature `Lxc/d;.k:(JJ)J` @kind static;
  #L480484.  v3:= temp @kind wide;
  #L480486.  call temp:= `P0`(v2, v5, v3) @signature `Luc/f;.P0:(Lyc/i;J)Luc/f;` @kind virtual;
  #L48048c.  v3:= temp @kind object;
  #L48048e.  return v3 @kind object;
  #L480490.  v5:= 1000I;
  #L480494.  call temp:= `l`(v3, v5) @signature `Lxc/d;.l:(JI)J` @kind static;
  #L48049a.  v3:= temp @kind wide;
  #L48049c.  call temp:= `L0`(v2, v3) @signature `Luc/f;.L0:(J)Luc/f;` @kind virtual;
  #L4804a2.  v3:= temp @kind object;
  #L4804a4.  return v3 @kind object;
  #L4804a6.  v5:= 100I;
  #L4804aa.  call temp:= `l`(v3, v5) @signature `Lxc/d;.l:(JI)J` @kind static;
  #L4804b0.  v3:= temp @kind wide;
  #L4804b2.  call temp:= `L0`(v2, v3) @signature `Luc/f;.L0:(J)Luc/f;` @kind virtual;
  #L4804b8.  v3:= temp @kind object;
  #L4804ba.  return v3 @kind object;
  #L4804bc.  v5:= 10I;
  #L4804c0.  call temp:= `l`(v3, v5) @signature `Lxc/d;.l:(JI)J` @kind static;
  #L4804c6.  v3:= temp @kind wide;
  #L4804c8.  call temp:= `L0`(v2, v3) @signature `Luc/f;.L0:(J)Luc/f;` @kind virtual;
  #L4804ce.  v3:= temp @kind object;
  #L4804d0.  return v3 @kind object;
  #L4804d2.  call temp:= `L0`(v2, v3) @signature `Luc/f;.L0:(J)Luc/f;` @kind virtual;
  #L4804d8.  v3:= temp @kind object;
  #L4804da.  return v3 @kind object;
  #L4804dc.  call temp:= `J0`(v2, v3) @signature `Luc/f;.J0:(J)Luc/f;` @kind virtual;
  #L4804e2.  v3:= temp @kind object;
  #L4804e4.  return v3 @kind object;
  #L4804e6.  call temp:= `K0`(v2, v3) @signature `Luc/f;.K0:(J)Luc/f;` @kind virtual;
  #L4804ec.  v3:= temp @kind object;
  #L4804ee.  return v3 @kind object;
  #L4804f0.  call temp:= `I0`(v2, v3) @signature `Luc/f;.I0:(J)Luc/f;` @kind virtual;
  #L4804f6.  v3:= temp @kind object;
  #L4804f8.  return v3 @kind object;
  #L4804fa.  call temp:= `d`(v5, v2, v3) @signature `Lyc/l;.d:(Lyc/d;J)Lyc/d;` @kind interface;
  #L480500.  v3:= temp @kind object;
  #L480502.  v3:= (`uc.f`) v3 @kind object;
  #L480506.  return v3 @kind object;
  #L480508.  switch v0
                  | 1 => goto L4804f0
                  | 2 => goto L4804e6
                  | 3 => goto L4804dc
                  | 4 => goto L4804d2
                  | 5 => goto L4804bc
                  | 6 => goto L4804a6
                  | 7 => goto L480490
                  | 8 => goto L480472
                  | else => goto L480444;
}
procedure `uc.f` `H0`(`uc.f` v0 @kind this, `yc.h` v1 @kind object) @signature `Luc/f;.H0:(Lyc/h;)Luc/f;` @AccessFlag PUBLIC {
    temp;

  #L480540.  call temp:= `c`(v1, v0) @signature `Lyc/h;.c:(Lyc/d;)Lyc/d;` @kind interface;
  #L480546.  v1:= temp @kind object;
  #L480548.  v1:= (`uc.f`) v1 @kind object;
  #L48054c.  return v1 @kind object;
}
procedure `yc.d` `I`(`uc.f` v0 @kind this, `yc.d` v1 @kind object) @signature `Luc/f;.I:(Lyc/d;)Lyc/d;` @AccessFlag PUBLIC {
    temp;

  #L480ba4.  call temp:= `I`(v0, v1) @signature `Lvc/b;.I:(Lyc/d;)Lyc/d;` @kind super;
  #L480baa.  v1:= temp @kind object;
  #L480bac.  return v1 @kind object;
}
procedure `uc.f` `I0`(`uc.f` v3 @kind this, `long` v4 ) @signature `Luc/f;.I0:(J)Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L480560.  v0:= 0L;
  #L480564.  v2:= lcmp(v4, v0);
  #L480568.  if v2 != 0 then goto L48056e;
  #L48056c.  return v3 @kind object;
  #L48056e.  call temp:= `g0`(v3) @signature `Luc/f;.g0:()J` @kind virtual;
  #L480574.  v0:= temp @kind wide;
  #L480576.  call temp:= `k`(v0, v4) @signature `Lxc/d;.k:(JJ)J` @kind static;
  #L48057c.  v4:= temp @kind wide;
  #L48057e.  call temp:= `E0`(v4) @signature `Luc/f;.E0:(J)Luc/f;` @kind static;
  #L480584.  v4:= temp @kind object;
  #L480586.  return v4 @kind object;
}
procedure `uc.f` `J0`(`uc.f` v6 @kind this, `long` v7 ) @signature `Luc/f;.J0:(J)Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L480598.  v0:= 0L;
  #L48059c.  v2:= lcmp(v7, v0);
  #L4805a0.  if v2 != 0 then goto L4805a6;
  #L4805a4.  return v6 @kind object;
  #L4805a6.  v0:= v6.`uc.f.o` @type ^`int`;
  #L4805aa.  v0:= (`long`) v0 @kind i2l;
  #L4805ac.  v2:= 12L;
  #L4805b0.  v0:= v0 * v2 @kind long;
  #L4805b4.  v4:= v6.`uc.f.p` @type ^`short` @kind short;
  #L4805b8.  v4:= v4 + -1;
  #L4805bc.  v4:= (`long`) v4 @kind i2l;
  #L4805be.  v0:= v0 + v4 @kind long;
  #L4805c0.  v0:= v0 + v7 @kind long;
  #L4805c2.  v7:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L4805c6.  call temp:= `e`(v0, v2) @signature `Lxc/d;.e:(JJ)J` @kind static;
  #L4805cc.  v2:= temp @kind wide;
  #L4805ce.  call temp:= `r`(v7, v2) @signature `Lyc/a;.r:(J)I` @kind virtual;
  #L4805d4.  v7:= temp;
  #L4805d6.  v8:= 12I;
  #L4805da.  call temp:= `g`(v0, v8) @signature `Lxc/d;.g:(JI)I` @kind static;
  #L4805e0.  v8:= temp;
  #L4805e2.  v8:= v8 + 1;
  #L4805e6.  v0:= v6.`uc.f.q` @type ^`short` @kind short;
  #L4805ea.  call temp:= `N0`(v7, v8, v0) @signature `Luc/f;.N0:(III)Luc/f;` @kind static;
  #L4805f0.  v7:= temp @kind object;
  #L4805f2.  return v7 @kind object;
}
procedure `uc.f` `K0`(`uc.f` v1 @kind this, `long` v2 ) @signature `Luc/f;.K0:(J)Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480604.  v0:= 7I;
  #L480606.  call temp:= `l`(v2, v0) @signature `Lxc/d;.l:(JI)J` @kind static;
  #L48060c.  v2:= temp @kind wide;
  #L48060e.  call temp:= `I0`(v1, v2) @signature `Luc/f;.I0:(J)Luc/f;` @kind virtual;
  #L480614.  v2:= temp @kind object;
  #L480616.  return v2 @kind object;
}
procedure `yc.d` `L`(`uc.f` v0 @kind this, `yc.f` v1 @kind object) @signature `Luc/f;.L:(Lyc/f;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L480bf8.  call temp:= `O0`(v0, v1) @signature `Luc/f;.O0:(Lyc/f;)Luc/f;` @kind virtual;
  #L480bfe.  v1:= temp @kind object;
  #L480c00.  return v1 @kind object;
}
procedure `uc.f` `L0`(`uc.f` v3 @kind this, `long` v4 ) @signature `Luc/f;.L0:(J)Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L480628.  v0:= 0L;
  #L48062c.  v2:= lcmp(v4, v0);
  #L480630.  if v2 != 0 then goto L480636;
  #L480634.  return v3 @kind object;
  #L480636.  v0:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L48063a.  v1:= v3.`uc.f.o` @type ^`int`;
  #L48063e.  v1:= (`long`) v1 @kind i2l;
  #L480640.  v1:= v1 + v4 @kind long;
  #L480642.  call temp:= `r`(v0, v1) @signature `Lyc/a;.r:(J)I` @kind virtual;
  #L480648.  v4:= temp;
  #L48064a.  v5:= v3.`uc.f.p` @type ^`short` @kind short;
  #L48064e.  v0:= v3.`uc.f.q` @type ^`short` @kind short;
  #L480652.  call temp:= `N0`(v4, v5, v0) @signature `Luc/f;.N0:(III)Luc/f;` @kind static;
  #L480658.  v4:= temp @kind object;
  #L48065a.  return v4 @kind object;
}
procedure `uc.f` `O0`(`uc.f` v1 @kind this, `yc.f` v2 @kind object) @signature `Luc/f;.O0:(Lyc/f;)Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48070c.  v0:= instanceof @variable v2 @type ^`uc.f` @kind boolean;
  #L480710.  if v0 == 0 then goto L48071a;
  #L480714.  v2:= (`uc.f`) v2 @kind object;
  #L480718.  return v2 @kind object;
  #L48071a.  call temp:= `I`(v2, v1) @signature `Lyc/f;.I:(Lyc/d;)Lyc/d;` @kind interface;
  #L480720.  v2:= temp @kind object;
  #L480722.  v2:= (`uc.f`) v2 @kind object;
  #L480726.  return v2 @kind object;
}
procedure `yc.d` `P`(`uc.f` v0 @kind this, `yc.i` v1 @kind object, `long` v2 ) @signature `Luc/f;.P:(Lyc/i;J)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L480c14.  call temp:= `P0`(v0, v1, v2) @signature `Luc/f;.P0:(Lyc/i;J)Luc/f;` @kind virtual;
  #L480c1a.  v1:= temp @kind object;
  #L480c1c.  return v1 @kind object;
}
procedure `uc.f` `P0`(`uc.f` v4 @kind this, `yc.i` v5 @kind object, `long` v6 ) @signature `Luc/f;.P0:(Lyc/i;J)Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L480738.  v0:= instanceof @variable v5 @type ^`yc.a` @kind boolean;
  #L48073c.  if v0 == 0 then goto L4808a8;
  #L480740.  v0:= v5 @kind object;
  #L480742.  v0:= (`yc.a`) v0 @kind object;
  #L480746.  call temp:= `s`(v0, v6) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L48074c.  v1:= `@@uc.f$b.a` @type ^`int`[] @kind object;
  #L480750.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L480756.  v0:= temp;
  #L480758.  v0:= v1[v0];
  #L48075c.  v1:= 1I;
  #L48075e.  goto L4808b8;
  #L480764.  v6:= new `yc.m`;
  #L480768.  v7:= new `java.lang.StringBuilder`;
  #L48076c.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L480772.  v0:= "Unsupported field: " @kind object;
  #L480776.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48077c.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L480782.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L480788.  v5:= temp @kind object;
  #L48078a.  call `<init>`(v6, v5) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L480790.  throw v6;
  #L480792.  v5:= `@@yc.a.T` @type ^`yc.a` @kind object;
  #L480796.  call temp:= `B`(v4, v5) @signature `Luc/f;.B:(Lyc/i;)J` @kind virtual;
  #L48079c.  v2:= temp @kind wide;
  #L48079e.  v5:= lcmp(v2, v6);
  #L4807a2.  if v5 != 0 then goto L4807aa;
  #L4807a6.  v5:= v4 @kind object;
  #L4807a8.  goto L4807b8;
  #L4807aa.  v5:= v4.`uc.f.o` @type ^`int`;
  #L4807ae.  v1:= v1 - v5 @kind int;
  #L4807b0.  call temp:= `T0`(v4, v1) @signature `Luc/f;.T0:(I)Luc/f;` @kind virtual;
  #L4807b6.  v5:= temp @kind object;
  #L4807b8.  return v5 @kind object;
  #L4807ba.  v5:= (`int`) v6 @kind l2i;
  #L4807bc.  call temp:= `T0`(v4, v5) @signature `Luc/f;.T0:(I)Luc/f;` @kind virtual;
  #L4807c2.  v5:= temp @kind object;
  #L4807c4.  return v5 @kind object;
  #L4807c6.  v5:= `@@yc.a.Q` @type ^`yc.a` @kind object;
  #L4807ca.  call temp:= `B`(v4, v5) @signature `Luc/f;.B:(Lyc/i;)J` @kind virtual;
  #L4807d0.  v0:= temp @kind wide;
  #L4807d2.  v6:= v6 - v0 @kind long;
  #L4807d4.  call temp:= `J0`(v4, v6) @signature `Luc/f;.J0:(J)Luc/f;` @kind virtual;
  #L4807da.  v5:= temp @kind object;
  #L4807dc.  return v5 @kind object;
  #L4807de.  v5:= (`int`) v6 @kind l2i;
  #L4807e0.  call temp:= `S0`(v4, v5) @signature `Luc/f;.S0:(I)Luc/f;` @kind virtual;
  #L4807e6.  v5:= temp @kind object;
  #L4807e8.  return v5 @kind object;
  #L4807ea.  v5:= `@@yc.a.O` @type ^`yc.a` @kind object;
  #L4807ee.  call temp:= `B`(v4, v5) @signature `Luc/f;.B:(Lyc/i;)J` @kind virtual;
  #L4807f4.  v0:= temp @kind wide;
  #L4807f6.  v6:= v6 - v0 @kind long;
  #L4807f8.  call temp:= `K0`(v4, v6) @signature `Luc/f;.K0:(J)Luc/f;` @kind virtual;
  #L4807fe.  v5:= temp @kind object;
  #L480800.  return v5 @kind object;
  #L480802.  call temp:= `E0`(v6) @signature `Luc/f;.E0:(J)Luc/f;` @kind static;
  #L480808.  v5:= temp @kind object;
  #L48080a.  return v5 @kind object;
  #L48080c.  v5:= `@@yc.a.J` @type ^`yc.a` @kind object;
  #L480810.  call temp:= `B`(v4, v5) @signature `Luc/f;.B:(Lyc/i;)J` @kind virtual;
  #L480816.  v0:= temp @kind wide;
  #L480818.  v6:= v6 - v0 @kind long;
  #L48081a.  call temp:= `I0`(v4, v6) @signature `Luc/f;.I0:(J)Luc/f;` @kind virtual;
  #L480820.  v5:= temp @kind object;
  #L480822.  return v5 @kind object;
  #L480824.  v5:= `@@yc.a.I` @type ^`yc.a` @kind object;
  #L480828.  call temp:= `B`(v4, v5) @signature `Luc/f;.B:(Lyc/i;)J` @kind virtual;
  #L48082e.  v0:= temp @kind wide;
  #L480830.  v6:= v6 - v0 @kind long;
  #L480832.  call temp:= `I0`(v4, v6) @signature `Luc/f;.I0:(J)Luc/f;` @kind virtual;
  #L480838.  v5:= temp @kind object;
  #L48083a.  return v5 @kind object;
  #L48083c.  call temp:= `q0`(v4) @signature `Luc/f;.q0:()Luc/c;` @kind virtual;
  #L480842.  v5:= temp @kind object;
  #L480844.  call temp:= `getValue`(v5) @signature `Luc/c;.getValue:()I` @kind virtual;
  #L48084a.  v5:= temp;
  #L48084c.  v0:= (`long`) v5 @kind i2l;
  #L48084e.  v6:= v6 - v0 @kind long;
  #L480850.  call temp:= `I0`(v4, v6) @signature `Luc/f;.I0:(J)Luc/f;` @kind virtual;
  #L480856.  v5:= temp @kind object;
  #L480858.  return v5 @kind object;
  #L48085a.  v5:= v4.`uc.f.o` @type ^`int`;
  #L48085e.  if v5 < v1 then goto L480864;
  #L480862.  goto L48086c;
  #L480864.  v0:= 1L;
  #L480868.  v6:= v0 - v6 @kind long;
  #L48086c.  v5:= (`int`) v6 @kind l2i;
  #L48086e.  call temp:= `T0`(v4, v5) @signature `Luc/f;.T0:(I)Luc/f;` @kind virtual;
  #L480874.  v5:= temp @kind object;
  #L480876.  return v5 @kind object;
  #L480878.  v5:= `@@yc.a.N` @type ^`yc.a` @kind object;
  #L48087c.  call temp:= `B`(v4, v5) @signature `Luc/f;.B:(Lyc/i;)J` @kind virtual;
  #L480882.  v0:= temp @kind wide;
  #L480884.  v6:= v6 - v0 @kind long;
  #L480886.  call temp:= `K0`(v4, v6) @signature `Luc/f;.K0:(J)Luc/f;` @kind virtual;
  #L48088c.  v5:= temp @kind object;
  #L48088e.  return v5 @kind object;
  #L480890.  v5:= (`int`) v6 @kind l2i;
  #L480892.  call temp:= `R0`(v4, v5) @signature `Luc/f;.R0:(I)Luc/f;` @kind virtual;
  #L480898.  v5:= temp @kind object;
  #L48089a.  return v5 @kind object;
  #L48089c.  v5:= (`int`) v6 @kind l2i;
  #L48089e.  call temp:= `Q0`(v4, v5) @signature `Luc/f;.Q0:(I)Luc/f;` @kind virtual;
  #L4808a4.  v5:= temp @kind object;
  #L4808a6.  return v5 @kind object;
  #L4808a8.  call temp:= `e`(v5, v4, v6) @signature `Lyc/i;.e:(Lyc/d;J)Lyc/d;` @kind interface;
  #L4808ae.  v5:= temp @kind object;
  #L4808b0.  v5:= (`uc.f`) v5 @kind object;
  #L4808b4.  return v5 @kind object;
  #L4808b6.  
  #L4808b8.  switch v0
                  | 1 => goto L48089c
                  | 2 => goto L480890
                  | 3 => goto L480878
                  | 4 => goto L48085a
                  | 5 => goto L48083c
                  | 6 => goto L480824
                  | 7 => goto L48080c
                  | 8 => goto L480802
                  | 9 => goto L4807ea
                  | 10 => goto L4807de
                  | 11 => goto L4807c6
                  | 12 => goto L4807ba
                  | 13 => goto L480792
                  | else => goto L480764;
}
procedure `uc.f` `Q0`(`uc.f` v2 @kind this, `int` v3 ) @signature `Luc/f;.Q0:(I)Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L480904.  v0:= v2.`uc.f.q` @type ^`short` @kind short;
  #L480908.  if v0 != v3 then goto L48090e;
  #L48090c.  return v2 @kind object;
  #L48090e.  v0:= v2.`uc.f.o` @type ^`int`;
  #L480912.  v1:= v2.`uc.f.p` @type ^`short` @kind short;
  #L480916.  call temp:= `C0`(v0, v1, v3) @signature `Luc/f;.C0:(III)Luc/f;` @kind static;
  #L48091c.  v3:= temp @kind object;
  #L48091e.  return v3 @kind object;
}
procedure `uc.f` `R0`(`uc.f` v1 @kind this, `int` v2 ) @signature `Luc/f;.R0:(I)Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480930.  call temp:= `r0`(v1) @signature `Luc/f;.r0:()I` @kind virtual;
  #L480936.  v0:= temp;
  #L480938.  if v0 != v2 then goto L48093e;
  #L48093c.  return v1 @kind object;
  #L48093e.  v0:= v1.`uc.f.o` @type ^`int`;
  #L480942.  call temp:= `F0`(v0, v2) @signature `Luc/f;.F0:(II)Luc/f;` @kind static;
  #L480948.  v2:= temp @kind object;
  #L48094a.  return v2 @kind object;
}
procedure `uc.f` `S0`(`uc.f` v3 @kind this, `int` v4 ) @signature `Luc/f;.S0:(I)Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48095c.  v0:= v3.`uc.f.p` @type ^`short` @kind short;
  #L480960.  if v0 != v4 then goto L480966;
  #L480964.  return v3 @kind object;
  #L480966.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L48096a.  v1:= (`long`) v4 @kind i2l;
  #L48096c.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L480972.  v0:= v3.`uc.f.o` @type ^`int`;
  #L480976.  v1:= v3.`uc.f.q` @type ^`short` @kind short;
  #L48097a.  call temp:= `N0`(v0, v4, v1) @signature `Luc/f;.N0:(III)Luc/f;` @kind static;
  #L480980.  v4:= temp @kind object;
  #L480982.  return v4 @kind object;
}
procedure `uc.f` `T0`(`uc.f` v3 @kind this, `int` v4 ) @signature `Luc/f;.T0:(I)Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L480994.  v0:= v3.`uc.f.o` @type ^`int`;
  #L480998.  if v0 != v4 then goto L48099e;
  #L48099c.  return v3 @kind object;
  #L48099e.  v0:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L4809a2.  v1:= (`long`) v4 @kind i2l;
  #L4809a4.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4809aa.  v0:= v3.`uc.f.p` @type ^`short` @kind short;
  #L4809ae.  v1:= v3.`uc.f.q` @type ^`short` @kind short;
  #L4809b2.  call temp:= `N0`(v4, v0, v1) @signature `Luc/f;.N0:(III)Luc/f;` @kind static;
  #L4809b8.  v4:= temp @kind object;
  #L4809ba.  return v4 @kind object;
}
procedure `void` `U0`(`uc.f` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Luc/f;.U0:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L480b74.  v0:= v1.`uc.f.o` @type ^`int`;
  #L480b78.  call `writeInt`(v2, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L480b7e.  v0:= v1.`uc.f.p` @type ^`short` @kind short;
  #L480b82.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L480b88.  v0:= v1.`uc.f.q` @type ^`short` @kind short;
  #L480b8c.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L480b92.  return @kind void;
}
procedure `vc.c` `V`(`uc.f` v0 @kind this, `uc.h` v1 @kind object) @signature `Luc/f;.V:(Luc/h;)Lvc/c;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L480a94.  call temp:= `j0`(v0, v1) @signature `Luc/f;.j0:(Luc/h;)Luc/g;` @kind virtual;
  #L480a9a.  v1:= temp @kind object;
  #L480a9c.  return v1 @kind object;
}
procedure `int` `X`(`uc.f` v1 @kind this, `vc.b` v2 @kind object) @signature `Luc/f;.X:(Lvc/b;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f9c4.  v0:= instanceof @variable v2 @type ^`uc.f` @kind boolean;
  #L47f9c8.  if v0 == 0 then goto L47f9da;
  #L47f9cc.  v2:= (`uc.f`) v2 @kind object;
  #L47f9d0.  call temp:= `k0`(v1, v2) @signature `Luc/f;.k0:(Luc/f;)I` @kind virtual;
  #L47f9d6.  v2:= temp;
  #L47f9d8.  return v2;
  #L47f9da.  call temp:= `X`(v1, v2) @signature `Lvc/b;.X:(Lvc/b;)I` @kind super;
  #L47f9e0.  v2:= temp;
  #L47f9e2.  return v2;
}
procedure `vc.h` `a0`(`uc.f` v1 @kind this) @signature `Luc/f;.a0:()Lvc/h;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L480ab0.  call temp:= `o0`(v1) @signature `Luc/f;.o0:()Lvc/m;` @kind virtual;
  #L480ab6.  v0:= temp @kind object;
  #L480ab8.  return v0 @kind object;
}
procedure `vc.i` `b0`(`uc.f` v1 @kind this) @signature `Luc/f;.b0:()Lvc/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480acc.  call temp:= `b0`(v1) @signature `Lvc/b;.b0:()Lvc/i;` @kind super;
  #L480ad2.  v0:= temp @kind object;
  #L480ad4.  return v0 @kind object;
}
procedure `boolean` `c0`(`uc.f` v1 @kind this, `vc.b` v2 @kind object) @signature `Luc/f;.c0:(Lvc/b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47f928.  v0:= instanceof @variable v2 @type ^`uc.f` @kind boolean;
  #L47f92c.  if v0 == 0 then goto L47f948;
  #L47f930.  v2:= (`uc.f`) v2 @kind object;
  #L47f934.  call temp:= `k0`(v1, v2) @signature `Luc/f;.k0:(Luc/f;)I` @kind virtual;
  #L47f93a.  v2:= temp;
  #L47f93c.  if v2 >= 0 then goto L47f944;
  #L47f940.  v2:= 1I;
  #L47f942.  goto L47f946;
  #L47f944.  v2:= 0I;
  #L47f946.  return v2;
  #L47f948.  call temp:= `c0`(v1, v2) @signature `Lvc/b;.c0:(Lvc/b;)Z` @kind super;
  #L47f94e.  v2:= temp;
  #L47f950.  return v2;
}
procedure `int` `compareTo`(`uc.f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Luc/f;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L47f9a4.  v1:= (`vc.b`) v1 @kind object;
  #L47f9a8.  call temp:= `X`(v0, v1) @signature `Luc/f;.X:(Lvc/b;)I` @kind virtual;
  #L47f9ae.  v1:= temp;
  #L47f9b0.  return v1;
}
procedure `boolean` `d`(`uc.f` v0 @kind this, `yc.i` v1 @kind object) @signature `Luc/f;.d:(Lyc/i;)Z` @AccessFlag PUBLIC {
    temp;

  #L47f988.  call temp:= `d`(v0, v1) @signature `Lvc/b;.d:(Lyc/i;)Z` @kind super;
  #L47f98e.  v1:= temp;
  #L47f990.  return v1;
}
procedure `vc.b` `d0`(`uc.f` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Luc/f;.d0:(JLyc/l;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L480a08.  call temp:= `z0`(v0, v1, v3) @signature `Luc/f;.z0:(JLyc/l;)Luc/f;` @kind virtual;
  #L480a0e.  v1:= temp @kind object;
  #L480a10.  return v1 @kind object;
}
procedure `vc.b` `e0`(`uc.f` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Luc/f;.e0:(JLyc/l;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L480a24.  call temp:= `G0`(v0, v1, v3) @signature `Luc/f;.G0:(JLyc/l;)Luc/f;` @kind virtual;
  #L480a2a.  v1:= temp @kind object;
  #L480a2c.  return v1 @kind object;
}
procedure `boolean` `equals`(`uc.f` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Luc/f;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47f8ec.  v0:= 1I;
  #L47f8ee.  if v3 != v4 then goto L47f8f4;
  #L47f8f2.  return v0;
  #L47f8f4.  v1:= instanceof @variable v4 @type ^`uc.f` @kind boolean;
  #L47f8f8.  v2:= 0I;
  #L47f8fa.  if v1 == 0 then goto L47f914;
  #L47f8fe.  v4:= (`uc.f`) v4 @kind object;
  #L47f902.  call temp:= `k0`(v3, v4) @signature `Luc/f;.k0:(Luc/f;)I` @kind virtual;
  #L47f908.  v4:= temp;
  #L47f90a.  if v4 != 0 then goto L47f910;
  #L47f90e.  goto L47f912;
  #L47f910.  v0:= 0I;
  #L47f912.  return v0;
  #L47f914.  return v2;
}
procedure `vc.b` `f0`(`uc.f` v0 @kind this, `yc.h` v1 @kind object) @signature `Luc/f;.f0:(Lyc/h;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L480a40.  call temp:= `H0`(v0, v1) @signature `Luc/f;.H0:(Lyc/h;)Luc/f;` @kind virtual;
  #L480a46.  v1:= temp @kind object;
  #L480a48.  return v1 @kind object;
}
procedure `long` `g0`(`uc.f` v12 @kind this) @signature `Luc/f;.g0:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L47fea0.  v0:= v12.`uc.f.o` @type ^`int`;
  #L47fea4.  v0:= (`long`) v0 @kind i2l;
  #L47fea6.  v2:= v12.`uc.f.p` @type ^`short` @kind short;
  #L47feaa.  v2:= (`long`) v2 @kind i2l;
  #L47feac.  v4:= 365L;
  #L47feb0.  v4:= v4 * v0 @kind long;
  #L47feb4.  v6:= 0L;
  #L47feb8.  v4:= v4 + v6 @kind long;
  #L47feba.  v8:= lcmp(v0, v6);
  #L47febe.  if v8 < 0 then goto L47feee;
  #L47fec2.  v6:= 3L;
  #L47fec6.  v6:= v6 + v0 @kind long;
  #L47fec8.  v8:= 4L;
  #L47fecc.  v6:= v6 / v8 @kind long;
  #L47fece.  v8:= 99L;
  #L47fed2.  v8:= v8 + v0 @kind long;
  #L47fed4.  v10:= 100L;
  #L47fed8.  v8:= v8 / v10 @kind long;
  #L47feda.  v6:= v6 - v8 @kind long;
  #L47fedc.  v8:= 399L;
  #L47fee0.  v0:= v0 + v8 @kind long;
  #L47fee2.  v8:= 400L;
  #L47fee6.  v0:= v0 / v8 @kind long;
  #L47fee8.  v6:= v6 + v0 @kind long;
  #L47feea.  v4:= v4 + v6 @kind long;
  #L47feec.  goto L47ff0a;
  #L47feee.  v6:= -4L;
  #L47fef2.  v6:= v0 / v6 @kind long;
  #L47fef6.  v8:= -100L;
  #L47fefa.  v8:= v0 / v8 @kind long;
  #L47fefe.  v6:= v6 - v8 @kind long;
  #L47ff00.  v8:= -400L;
  #L47ff04.  v0:= v0 / v8 @kind long;
  #L47ff06.  v6:= v6 + v0 @kind long;
  #L47ff08.  v4:= v4 - v6 @kind long;
  #L47ff0a.  v0:= 367L;
  #L47ff0e.  v0:= v0 * v2 @kind long;
  #L47ff12.  v6:= 362L;
  #L47ff16.  v0:= v0 - v6 @kind long;
  #L47ff18.  v6:= 12L;
  #L47ff1c.  v0:= v0 / v6 @kind long;
  #L47ff1e.  v4:= v4 + v0 @kind long;
  #L47ff20.  v0:= v12.`uc.f.q` @type ^`short` @kind short;
  #L47ff24.  v0:= v0 + -1;
  #L47ff28.  v0:= (`long`) v0 @kind i2l;
  #L47ff2a.  v4:= v4 + v0 @kind long;
  #L47ff2c.  v0:= 2L;
  #L47ff30.  v6:= lcmp(v2, v0);
  #L47ff34.  if v6 <= 0 then goto L47ff4c;
  #L47ff38.  v0:= 1L;
  #L47ff3c.  v4:= v4 - v0 @kind long;
  #L47ff3e.  call temp:= `w0`(v12) @signature `Luc/f;.w0:()Z` @kind virtual;
  #L47ff44.  v2:= temp;
  #L47ff46.  if v2 != 0 then goto L47ff4c;
  #L47ff4a.  v4:= v4 - v0 @kind long;
  #L47ff4c.  v0:= 719528L;
  #L47ff52.  v4:= v4 - v0 @kind long;
  #L47ff54.  return v4 @kind wide;
}
procedure `vc.b` `h0`(`uc.f` v0 @kind this, `yc.f` v1 @kind object) @signature `Luc/f;.h0:(Lyc/f;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L480a5c.  call temp:= `O0`(v0, v1) @signature `Luc/f;.O0:(Lyc/f;)Luc/f;` @kind virtual;
  #L480a62.  v1:= temp @kind object;
  #L480a64.  return v1 @kind object;
}
procedure `int` `hashCode`(`uc.f` v4 @kind this) @signature `Luc/f;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47fc50.  v0:= v4.`uc.f.o` @type ^`int`;
  #L47fc54.  v1:= v4.`uc.f.p` @type ^`short` @kind short;
  #L47fc58.  v2:= v4.`uc.f.q` @type ^`short` @kind short;
  #L47fc5c.  v3:= v0 ^& -2048;
  #L47fc60.  v0:= v0 ^< 11;
  #L47fc64.  v1:= v1 ^< 6;
  #L47fc68.  v0:= v0 + v1 @kind int;
  #L47fc6a.  v0:= v0 + v2 @kind int;
  #L47fc6c.  v0:= v0 ^~ v3 @kind int;
  #L47fc6e.  return v0;
}
procedure `vc.b` `i0`(`uc.f` v0 @kind this, `yc.i` v1 @kind object, `long` v2 ) @signature `Luc/f;.i0:(Lyc/i;J)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L480a78.  call temp:= `P0`(v0, v1, v2) @signature `Luc/f;.P0:(Lyc/i;J)Luc/f;` @kind virtual;
  #L480a7e.  v1:= temp @kind object;
  #L480a80.  return v1 @kind object;
}
procedure `java.lang.Object` `j`(`uc.f` v1 @kind this, `yc.k` v2 @kind object) @signature `Luc/f;.j:(Lyc/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fd04.  call temp:= `b`() @signature `Lyc/j;.b:()Lyc/k;` @kind static;
  #L47fd0a.  v0:= temp @kind object;
  #L47fd0c.  if v2 != v0 then goto L47fd12;
  #L47fd10.  return v1 @kind object;
  #L47fd12.  call temp:= `j`(v1, v2) @signature `Lvc/b;.j:(Lyc/k;)Ljava/lang/Object;` @kind super;
  #L47fd18.  v2:= temp @kind object;
  #L47fd1a.  return v2 @kind object;
}
procedure `uc.g` `j0`(`uc.f` v0 @kind this, `uc.h` v1 @kind object) @signature `Luc/f;.j0:(Luc/h;)Luc/g;` @AccessFlag PUBLIC {
    temp;

  #L4809cc.  call temp:= `z0`(v0, v1) @signature `Luc/g;.z0:(Luc/f;Luc/h;)Luc/g;` @kind static;
  #L4809d2.  v1:= temp @kind object;
  #L4809d4.  return v1 @kind object;
}
procedure `int` `k0`(`uc.f` v2 @kind this, `uc.f` v3 @kind object) @signature `Luc/f;.k0:(Luc/f;)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L47f9f4.  v0:= v2.`uc.f.o` @type ^`int`;
  #L47f9f8.  v1:= v3.`uc.f.o` @type ^`int`;
  #L47f9fc.  v0:= v0 - v1 @kind int;
  #L47f9fe.  if v0 != 0 then goto L47fa1a;
  #L47fa02.  v0:= v2.`uc.f.p` @type ^`short` @kind short;
  #L47fa06.  v1:= v3.`uc.f.p` @type ^`short` @kind short;
  #L47fa0a.  v0:= v0 - v1 @kind int;
  #L47fa0c.  if v0 != 0 then goto L47fa1a;
  #L47fa10.  v0:= v2.`uc.f.q` @type ^`short` @kind short;
  #L47fa14.  v3:= v3.`uc.f.q` @type ^`short` @kind short;
  #L47fa18.  v0:= v0 - v3 @kind int;
  #L47fa1a.  return v0;
}
procedure `vc.m` `o0`(`uc.f` v1 @kind this) @signature `Luc/f;.o0:()Lvc/m;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480ae8.  v0:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L480aec.  return v0 @kind object;
}
procedure `int` `p0`(`uc.f` v1 @kind this) @signature `Luc/f;.p0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fbd4.  v0:= v1.`uc.f.q` @type ^`short` @kind short;
  #L47fbd8.  return v0;
}
procedure `uc.c` `q0`(`uc.f` v4 @kind this) @signature `Luc/f;.q0:()Luc/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47ff68.  call temp:= `g0`(v4) @signature `Luc/f;.g0:()J` @kind virtual;
  #L47ff6e.  v0:= temp @kind wide;
  #L47ff70.  v2:= 3L;
  #L47ff74.  v0:= v0 + v2 @kind long;
  #L47ff76.  v2:= 7I;
  #L47ff78.  call temp:= `g`(v0, v2) @signature `Lxc/d;.g:(JI)I` @kind static;
  #L47ff7e.  v0:= temp;
  #L47ff80.  v0:= v0 + 1;
  #L47ff84.  call temp:= `e`(v0) @signature `Luc/c;.e:(I)Luc/c;` @kind static;
  #L47ff8a.  v0:= temp @kind object;
  #L47ff8c.  return v0 @kind object;
}
procedure `yc.d` `r`(`uc.f` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Luc/f;.r:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L480bc0.  call temp:= `z0`(v0, v1, v3) @signature `Luc/f;.z0:(JLyc/l;)Luc/f;` @kind virtual;
  #L480bc6.  v1:= temp @kind object;
  #L480bc8.  return v1 @kind object;
}
procedure `int` `r0`(`uc.f` v2 @kind this) @signature `Luc/f;.r0:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47fbec.  call temp:= `s0`(v2) @signature `Luc/f;.s0:()Luc/i;` @kind virtual;
  #L47fbf2.  v0:= temp @kind object;
  #L47fbf4.  call temp:= `w0`(v2) @signature `Luc/f;.w0:()Z` @kind virtual;
  #L47fbfa.  v1:= temp;
  #L47fbfc.  call temp:= `c`(v0, v1) @signature `Luc/i;.c:(Z)I` @kind virtual;
  #L47fc02.  v0:= temp;
  #L47fc04.  v1:= v2.`uc.f.q` @type ^`short` @kind short;
  #L47fc08.  v0:= v0 + v1 @kind int;
  #L47fc0a.  v0:= v0 + -1;
  #L47fc0e.  return v0;
}
procedure `uc.i` `s0`(`uc.f` v1 @kind this) @signature `Luc/f;.s0:()Luc/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4809e8.  v0:= v1.`uc.f.p` @type ^`short` @kind short;
  #L4809ec.  call temp:= `o`(v0) @signature `Luc/i;.o:(I)Luc/i;` @kind static;
  #L4809f2.  v0:= temp @kind object;
  #L4809f4.  return v0 @kind object;
}
procedure `yc.n` `t`(`uc.f` v4 @kind this, `yc.i` v5 @kind object) @signature `Luc/f;.t:(Lyc/i;)Lyc/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L480c30.  v0:= instanceof @variable v5 @type ^`yc.a` @kind boolean;
  #L480c34.  if v0 == 0 then goto L480d20;
  #L480c38.  v0:= v5 @kind object;
  #L480c3a.  v0:= (`yc.a`) v0 @kind object;
  #L480c3e.  call temp:= `c`(v0) @signature `Lyc/a;.c:()Z` @kind virtual;
  #L480c44.  v1:= temp;
  #L480c46.  if v1 == 0 then goto L480cf2;
  #L480c4a.  v1:= `@@uc.f$b.a` @type ^`int`[] @kind object;
  #L480c4e.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L480c54.  v0:= temp;
  #L480c56.  v0:= v1[v0];
  #L480c5a.  v1:= 1I;
  #L480c5c.  v2:= 1L;
  #L480c60.  if v0 == v1 then goto L480ce8;
  #L480c64.  v1:= 2I;
  #L480c66.  if v0 == v1 then goto L480cd4;
  #L480c6a.  v1:= 3I;
  #L480c6c.  if v0 == v1 then goto L480ca4;
  #L480c70.  v1:= 4I;
  #L480c72.  if v0 == v1 then goto L480c80;
  #L480c76.  call temp:= `k`(v5) @signature `Lyc/i;.k:()Lyc/n;` @kind interface;
  #L480c7c.  v5:= temp @kind object;
  #L480c7e.  return v5 @kind object;
  #L480c80.  call temp:= `v0`(v4) @signature `Luc/f;.v0:()I` @kind virtual;
  #L480c86.  v5:= temp;
  #L480c88.  if v5 > 0 then goto L480c94;
  #L480c8c.  v0:= 1000000000L;
  #L480c92.  goto L480c9a;
  #L480c94.  v0:= 999999999L;
  #L480c9a.  call temp:= `i`(v2, v0) @signature `Lyc/n;.i:(JJ)Lyc/n;` @kind static;
  #L480ca0.  v5:= temp @kind object;
  #L480ca2.  return v5 @kind object;
  #L480ca4.  call temp:= `s0`(v4) @signature `Luc/f;.s0:()Luc/i;` @kind virtual;
  #L480caa.  v5:= temp @kind object;
  #L480cac.  v0:= `@@uc.i.p` @type ^`uc.i` @kind object;
  #L480cb0.  if v5 != v0 then goto L480cc6;
  #L480cb4.  call temp:= `w0`(v4) @signature `Luc/f;.w0:()Z` @kind virtual;
  #L480cba.  v5:= temp;
  #L480cbc.  if v5 != 0 then goto L480cc6;
  #L480cc0.  v0:= 4L;
  #L480cc4.  goto L480cca;
  #L480cc6.  v0:= 5L;
  #L480cca.  call temp:= `i`(v2, v0) @signature `Lyc/n;.i:(JJ)Lyc/n;` @kind static;
  #L480cd0.  v5:= temp @kind object;
  #L480cd2.  return v5 @kind object;
  #L480cd4.  call temp:= `y0`(v4) @signature `Luc/f;.y0:()I` @kind virtual;
  #L480cda.  v5:= temp;
  #L480cdc.  v0:= (`long`) v5 @kind i2l;
  #L480cde.  call temp:= `i`(v2, v0) @signature `Lyc/n;.i:(JJ)Lyc/n;` @kind static;
  #L480ce4.  v5:= temp @kind object;
  #L480ce6.  return v5 @kind object;
  #L480ce8.  call temp:= `x0`(v4) @signature `Luc/f;.x0:()I` @kind virtual;
  #L480cee.  v5:= temp;
  #L480cf0.  goto L480cdc;
  #L480cf2.  v0:= new `yc.m`;
  #L480cf6.  v1:= new `java.lang.StringBuilder`;
  #L480cfa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L480d00.  v2:= "Unsupported field: " @kind object;
  #L480d04.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L480d0a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L480d10.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L480d16.  v5:= temp @kind object;
  #L480d18.  call `<init>`(v0, v5) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L480d1e.  throw v0;
  #L480d20.  call temp:= `h`(v5, v4) @signature `Lyc/i;.h:(Lyc/e;)Lyc/n;` @kind interface;
  #L480d26.  v5:= temp @kind object;
  #L480d28.  return v5 @kind object;
}
procedure `int` `t0`(`uc.f` v1 @kind this) @signature `Luc/f;.t0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fc20.  v0:= v1.`uc.f.p` @type ^`short` @kind short;
  #L47fc24.  return v0;
}
procedure `java.lang.String` `toString`(`uc.f` v7 @kind this) @signature `Luc/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47fd6c.  v0:= v7.`uc.f.o` @type ^`int`;
  #L47fd70.  v1:= v7.`uc.f.p` @type ^`short` @kind short;
  #L47fd74.  v2:= v7.`uc.f.q` @type ^`short` @kind short;
  #L47fd78.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L47fd7e.  v3:= temp;
  #L47fd80.  v4:= new `java.lang.StringBuilder`;
  #L47fd84.  v5:= 10I;
  #L47fd88.  call `<init>`(v4, v5) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L47fd8e.  v6:= 1000I;
  #L47fd92.  if v3 >= v6 then goto L47fdbc;
  #L47fd96.  if v0 >= 0 then goto L47fda8;
  #L47fd9a.  v0:= v0 + -10000;
  #L47fd9e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fda4.  v0:= 1I;
  #L47fda6.  goto L47fdb4;
  #L47fda8.  v0:= v0 + 10000;
  #L47fdac.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fdb2.  v0:= 0I;
  #L47fdb4.  call temp:= `deleteCharAt`(v4, v0) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fdba.  goto L47fdd4;
  #L47fdbc.  v3:= 9999I;
  #L47fdc0.  if v0 <= v3 then goto L47fdce;
  #L47fdc4.  v3:= 43I;
  #L47fdc8.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fdce.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fdd4.  v0:= "-0" @kind object;
  #L47fdd8.  v3:= "-" @kind object;
  #L47fddc.  if v1 >= v5 then goto L47fde4;
  #L47fde0.  v6:= v0 @kind object;
  #L47fde2.  goto L47fde6;
  #L47fde4.  v6:= v3 @kind object;
  #L47fde6.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fdec.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fdf2.  if v2 >= v5 then goto L47fdf8;
  #L47fdf6.  goto L47fdfa;
  #L47fdf8.  v0:= v3 @kind object;
  #L47fdfa.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fe00.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L47fe06.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47fe0c.  v0:= temp @kind object;
  #L47fe0e.  return v0 @kind object;
}
procedure `int` `v0`(`uc.f` v1 @kind this) @signature `Luc/f;.v0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fc38.  v0:= v1.`uc.f.o` @type ^`int`;
  #L47fc3c.  return v0;
}
procedure `boolean` `w0`(`uc.f` v3 @kind this) @signature `Luc/f;.w0:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L47f964.  v0:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L47f968.  v1:= v3.`uc.f.o` @type ^`int`;
  #L47f96c.  v1:= (`long`) v1 @kind i2l;
  #L47f96e.  call temp:= `P`(v0, v1) @signature `Lvc/m;.P:(J)Z` @kind virtual;
  #L47f974.  v0:= temp;
  #L47f976.  return v0;
}
procedure `int` `x0`(`uc.f` v2 @kind this) @signature `Luc/f;.x0:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47fc80.  v0:= v2.`uc.f.p` @type ^`short` @kind short;
  #L47fc84.  v1:= 2I;
  #L47fc86.  if v0 == v1 then goto L47fcb2;
  #L47fc8a.  v1:= 4I;
  #L47fc8c.  if v0 == v1 then goto L47fcac;
  #L47fc90.  v1:= 6I;
  #L47fc92.  if v0 == v1 then goto L47fcac;
  #L47fc96.  v1:= 9I;
  #L47fc9a.  if v0 == v1 then goto L47fcac;
  #L47fc9e.  v1:= 11I;
  #L47fca2.  if v0 == v1 then goto L47fcac;
  #L47fca6.  v0:= 31I;
  #L47fcaa.  return v0;
  #L47fcac.  v0:= 30I;
  #L47fcb0.  return v0;
  #L47fcb2.  call temp:= `w0`(v2) @signature `Luc/f;.w0:()Z` @kind virtual;
  #L47fcb8.  v0:= temp;
  #L47fcba.  if v0 == 0 then goto L47fcc4;
  #L47fcbe.  v0:= 29I;
  #L47fcc2.  goto L47fcc8;
  #L47fcc4.  v0:= 28I;
  #L47fcc8.  return v0;
}
procedure `int` `y0`(`uc.f` v1 @kind this) @signature `Luc/f;.y0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47fcdc.  call temp:= `w0`(v1) @signature `Luc/f;.w0:()Z` @kind virtual;
  #L47fce2.  v0:= temp;
  #L47fce4.  if v0 == 0 then goto L47fcee;
  #L47fce8.  v0:= 366I;
  #L47fcec.  goto L47fcf2;
  #L47fcee.  v0:= 365I;
  #L47fcf2.  return v0;
}
procedure `uc.f` `z0`(`uc.f` v3 @kind this, `long` v4 , `yc.l` v6 @kind object) @signature `Luc/f;.z0:(JLyc/l;)Luc/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4800f0.  v0:= -9223372036854775808L;
  #L4800f4.  v2:= lcmp(v4, v0);
  #L4800f8.  if v2 != 0 then goto L48011c;
  #L4800fc.  v4:= 9223372036854775807L;
  #L480106.  call temp:= `G0`(v3, v4, v6) @signature `Luc/f;.G0:(JLyc/l;)Luc/f;` @kind virtual;
  #L48010c.  v4:= temp @kind object;
  #L48010e.  v0:= 1L;
  #L480112.  call temp:= `G0`(v4, v0, v6) @signature `Luc/f;.G0:(JLyc/l;)Luc/f;` @kind virtual;
  #L480118.  v4:= temp @kind object;
  #L48011a.  goto L480126;
  #L48011c.  v4:= -v4 @kind long;
  #L48011e.  call temp:= `G0`(v3, v4, v6) @signature `Luc/f;.G0:(JLyc/l;)Luc/f;` @kind virtual;
  #L480124.  v4:= temp @kind object;
  #L480126.  return v4 @kind object;
}
