record `uc.q` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Serializable` @kind interface {
}
procedure `void` `<clinit>`() @signature `Luc/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4862ac.  v0:= new `uc.q$a`;
  #L4862b0.  call `<init>`(v0) @signature `Luc/q$a;.<init>:()V` @kind direct;
  #L4862b6.  v0:= new `java.util.HashMap`;
  #L4862ba.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4862c0.  v1:= "ACT" @kind object;
  #L4862c4.  v2:= "Australia/Darwin" @kind object;
  #L4862c8.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4862ce.  v1:= "AET" @kind object;
  #L4862d2.  v2:= "Australia/Sydney" @kind object;
  #L4862d6.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4862dc.  v1:= "AGT" @kind object;
  #L4862e0.  v2:= "America/Argentina/Buenos_Aires" @kind object;
  #L4862e4.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4862ea.  v1:= "ART" @kind object;
  #L4862ee.  v2:= "Africa/Cairo" @kind object;
  #L4862f2.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4862f8.  v1:= "AST" @kind object;
  #L4862fc.  v2:= "America/Anchorage" @kind object;
  #L486300.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L486306.  v1:= "BET" @kind object;
  #L48630a.  v2:= "America/Sao_Paulo" @kind object;
  #L48630e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L486314.  v1:= "BST" @kind object;
  #L486318.  v2:= "Asia/Dhaka" @kind object;
  #L48631c.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L486322.  v1:= "CAT" @kind object;
  #L486326.  v2:= "Africa/Harare" @kind object;
  #L48632a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L486330.  v1:= "CNT" @kind object;
  #L486334.  v2:= "America/St_Johns" @kind object;
  #L486338.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L48633e.  v1:= "CST" @kind object;
  #L486342.  v2:= "America/Chicago" @kind object;
  #L486346.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L48634c.  v1:= "CTT" @kind object;
  #L486350.  v2:= "Asia/Shanghai" @kind object;
  #L486354.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L48635a.  v1:= "EAT" @kind object;
  #L48635e.  v2:= "Africa/Addis_Ababa" @kind object;
  #L486362.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L486368.  v1:= "ECT" @kind object;
  #L48636c.  v2:= "Europe/Paris" @kind object;
  #L486370.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L486376.  v1:= "IET" @kind object;
  #L48637a.  v2:= "America/Indiana/Indianapolis" @kind object;
  #L48637e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L486384.  v1:= "IST" @kind object;
  #L486388.  v2:= "Asia/Kolkata" @kind object;
  #L48638c.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L486392.  v1:= "JST" @kind object;
  #L486396.  v2:= "Asia/Tokyo" @kind object;
  #L48639a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4863a0.  v1:= "MIT" @kind object;
  #L4863a4.  v2:= "Pacific/Apia" @kind object;
  #L4863a8.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4863ae.  v1:= "NET" @kind object;
  #L4863b2.  v2:= "Asia/Yerevan" @kind object;
  #L4863b6.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4863bc.  v1:= "NST" @kind object;
  #L4863c0.  v2:= "Pacific/Auckland" @kind object;
  #L4863c4.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4863ca.  v1:= "PLT" @kind object;
  #L4863ce.  v2:= "Asia/Karachi" @kind object;
  #L4863d2.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4863d8.  v1:= "PNT" @kind object;
  #L4863dc.  v2:= "America/Phoenix" @kind object;
  #L4863e0.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4863e6.  v1:= "PRT" @kind object;
  #L4863ea.  v2:= "America/Puerto_Rico" @kind object;
  #L4863ee.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4863f4.  v1:= "PST" @kind object;
  #L4863f8.  v2:= "America/Los_Angeles" @kind object;
  #L4863fc.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L486402.  v1:= "SST" @kind object;
  #L486406.  v2:= "Pacific/Guadalcanal" @kind object;
  #L48640a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L486410.  v1:= "VST" @kind object;
  #L486414.  v2:= "Asia/Ho_Chi_Minh" @kind object;
  #L486418.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L48641e.  v1:= "EST" @kind object;
  #L486422.  v2:= "-05:00" @kind object;
  #L486426.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L48642c.  v1:= "MST" @kind object;
  #L486430.  v2:= "-07:00" @kind object;
  #L486434.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L48643a.  v1:= "HST" @kind object;
  #L48643e.  v2:= "-10:00" @kind object;
  #L486442.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L486448.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L48644e.  return @kind void;
}
procedure `void` `<init>`(`uc.q` v2 @kind this) @signature `Luc/q;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L486460.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L486466.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L48646c.  v0:= temp @kind object;
  #L48646e.  v1:= constclass @type ^`uc.r` @kind object;
  #L486472.  if v0 == v1 then goto L486498;
  #L486476.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L48647c.  v0:= temp @kind object;
  #L48647e.  v1:= constclass @type ^`uc.s` @kind object;
  #L486482.  if v0 != v1 then goto L486488;
  #L486486.  goto L486498;
  #L486488.  v0:= new `java.lang.AssertionError`;
  #L48648c.  v1:= "Invalid subclass" @kind object;
  #L486490.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L486496.  throw v0;
  #L486498.  return @kind void;
}
procedure `uc.q` `c`(`yc.e` v3 @kind object) @signature `Luc/q;.c:(Lyc/e;)Luc/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L485ec4.  call temp:= `f`() @signature `Lyc/j;.f:()Lyc/k;` @kind static;
  #L485eca.  v0:= temp @kind object;
  #L485ecc.  call temp:= `j`(v3, v0) @signature `Lyc/e;.j:(Lyc/k;)Ljava/lang/Object;` @kind interface;
  #L485ed2.  v0:= temp @kind object;
  #L485ed4.  v0:= (`uc.q`) v0 @kind object;
  #L485ed8.  if v0 == 0 then goto L485ede;
  #L485edc.  return v0 @kind object;
  #L485ede.  v0:= new `uc.b`;
  #L485ee2.  v1:= new `java.lang.StringBuilder`;
  #L485ee6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L485eec.  v2:= "Unable to obtain ZoneId from TemporalAccessor: " @kind object;
  #L485ef0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L485ef6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L485efc.  v2:= ", type " @kind object;
  #L485f00.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L485f06.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L485f0c.  v3:= temp @kind object;
  #L485f0e.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L485f14.  v3:= temp @kind object;
  #L485f16.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L485f1c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L485f22.  v3:= temp @kind object;
  #L485f24.  call `<init>`(v0, v3) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L485f2a.  throw v0;
}
procedure `uc.q` `k`(`java.lang.String` v5 @kind object) @signature `Luc/q;.k:(Ljava/lang/String;)Luc/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L485f80.  v0:= "zoneId" @kind object;
  #L485f84.  call temp:= `i`(v5, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L485f8a.  v0:= "Z" @kind object;
  #L485f8e.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L485f94.  v0:= temp;
  #L485f96.  if v0 == 0 then goto L485fa0;
  #L485f9a.  v5:= `@@uc.r.s` @type ^`uc.r` @kind object;
  #L485f9e.  return v5 @kind object;
  #L485fa0.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L485fa6.  v0:= temp;
  #L485fa8.  v1:= 1I;
  #L485faa.  if v0 == v1 then goto L486180;
  #L485fae.  v0:= "+" @kind object;
  #L485fb2.  call temp:= `startsWith`(v5, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L485fb8.  v0:= temp;
  #L485fba.  if v0 != 0 then goto L486176;
  #L485fbe.  v0:= "-" @kind object;
  #L485fc2.  call temp:= `startsWith`(v5, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L485fc8.  v0:= temp;
  #L485fca.  if v0 == 0 then goto L485fd2;
  #L485fce.  goto L486176;
  #L485fd2.  v0:= "UTC" @kind object;
  #L485fd6.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L485fdc.  v0:= temp;
  #L485fde.  if v0 != 0 then goto L48615e;
  #L485fe2.  v0:= "GMT" @kind object;
  #L485fe6.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L485fec.  v0:= temp;
  #L485fee.  if v0 != 0 then goto L48615e;
  #L485ff2.  v0:= "UT" @kind object;
  #L485ff6.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L485ffc.  v2:= temp;
  #L485ffe.  if v2 == 0 then goto L486006;
  #L486002.  goto L48615e;
  #L486006.  v2:= "UTC+" @kind object;
  #L48600a.  call temp:= `startsWith`(v5, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L486010.  v2:= temp;
  #L486012.  if v2 != 0 then goto L4860e0;
  #L486016.  v2:= "GMT+" @kind object;
  #L48601a.  call temp:= `startsWith`(v5, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L486020.  v2:= temp;
  #L486022.  if v2 != 0 then goto L4860e0;
  #L486026.  v2:= "UTC-" @kind object;
  #L48602a.  call temp:= `startsWith`(v5, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L486030.  v2:= temp;
  #L486032.  if v2 != 0 then goto L4860e0;
  #L486036.  v2:= "GMT-" @kind object;
  #L48603a.  call temp:= `startsWith`(v5, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L486040.  v2:= temp;
  #L486042.  if v2 == 0 then goto L486048;
  #L486046.  goto L4860e0;
  #L486048.  v2:= "UT+" @kind object;
  #L48604c.  call temp:= `startsWith`(v5, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L486052.  v2:= temp;
  #L486054.  if v2 != 0 then goto L486074;
  #L486058.  v2:= "UT-" @kind object;
  #L48605c.  call temp:= `startsWith`(v5, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L486062.  v2:= temp;
  #L486064.  if v2 == 0 then goto L48606a;
  #L486068.  goto L486074;
  #L48606a.  call temp:= `v`(v5, v1) @signature `Luc/s;.v:(Ljava/lang/String;Z)Luc/s;` @kind static;
  #L486070.  v5:= temp @kind object;
  #L486072.  return v5 @kind object;
  #L486074.  v1:= 2I;
  #L486076.  call temp:= `substring`(v5, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L48607c.  v5:= temp @kind object;
  #L48607e.  call temp:= `T`(v5) @signature `Luc/r;.T:(Ljava/lang/String;)Luc/r;` @kind static;
  #L486084.  v5:= temp @kind object;
  #L486086.  call temp:= `S`(v5) @signature `Luc/r;.S:()I` @kind virtual;
  #L48608c.  v1:= temp;
  #L48608e.  if v1 != 0 then goto L4860a6;
  #L486092.  v1:= new `uc.s`;
  #L486096.  call temp:= `h`(v5) @signature `Luc/r;.h:()Lzc/f;` @kind virtual;
  #L48609c.  v5:= temp @kind object;
  #L48609e.  call `<init>`(v1, v0, v5) @signature `Luc/s;.<init>:(Ljava/lang/String;Lzc/f;)V` @kind direct;
  #L4860a4.  return v1 @kind object;
  #L4860a6.  v1:= new `uc.s`;
  #L4860aa.  v2:= new `java.lang.StringBuilder`;
  #L4860ae.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4860b4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4860ba.  call temp:= `e`(v5) @signature `Luc/r;.e:()Ljava/lang/String;` @kind virtual;
  #L4860c0.  v0:= temp @kind object;
  #L4860c2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4860c8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4860ce.  v0:= temp @kind object;
  #L4860d0.  call temp:= `h`(v5) @signature `Luc/r;.h:()Lzc/f;` @kind virtual;
  #L4860d6.  v5:= temp @kind object;
  #L4860d8.  call `<init>`(v1, v0, v5) @signature `Luc/s;.<init>:(Ljava/lang/String;Lzc/f;)V` @kind direct;
  #L4860de.  return v1 @kind object;
  #L4860e0.  v0:= 3I;
  #L4860e2.  call temp:= `substring`(v5, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L4860e8.  v1:= temp @kind object;
  #L4860ea.  call temp:= `T`(v1) @signature `Luc/r;.T:(Ljava/lang/String;)Luc/r;` @kind static;
  #L4860f0.  v1:= temp @kind object;
  #L4860f2.  call temp:= `S`(v1) @signature `Luc/r;.S:()I` @kind virtual;
  #L4860f8.  v2:= temp;
  #L4860fa.  v3:= 0I;
  #L4860fc.  if v2 != 0 then goto L48611c;
  #L486100.  v2:= new `uc.s`;
  #L486104.  call temp:= `substring`(v5, v3, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L48610a.  v5:= temp @kind object;
  #L48610c.  call temp:= `h`(v1) @signature `Luc/r;.h:()Lzc/f;` @kind virtual;
  #L486112.  v0:= temp @kind object;
  #L486114.  call `<init>`(v2, v5, v0) @signature `Luc/s;.<init>:(Ljava/lang/String;Lzc/f;)V` @kind direct;
  #L48611a.  return v2 @kind object;
  #L48611c.  v2:= new `uc.s`;
  #L486120.  v4:= new `java.lang.StringBuilder`;
  #L486124.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48612a.  call temp:= `substring`(v5, v3, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L486130.  v5:= temp @kind object;
  #L486132.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L486138.  call temp:= `e`(v1) @signature `Luc/r;.e:()Ljava/lang/String;` @kind virtual;
  #L48613e.  v5:= temp @kind object;
  #L486140.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L486146.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48614c.  v5:= temp @kind object;
  #L48614e.  call temp:= `h`(v1) @signature `Luc/r;.h:()Lzc/f;` @kind virtual;
  #L486154.  v0:= temp @kind object;
  #L486156.  call `<init>`(v2, v5, v0) @signature `Luc/s;.<init>:(Ljava/lang/String;Lzc/f;)V` @kind direct;
  #L48615c.  return v2 @kind object;
  #L48615e.  v0:= new `uc.s`;
  #L486162.  v1:= `@@uc.r.s` @type ^`uc.r` @kind object;
  #L486166.  call temp:= `h`(v1) @signature `Luc/r;.h:()Lzc/f;` @kind virtual;
  #L48616c.  v1:= temp @kind object;
  #L48616e.  call `<init>`(v0, v5, v1) @signature `Luc/s;.<init>:(Ljava/lang/String;Lzc/f;)V` @kind direct;
  #L486174.  return v0 @kind object;
  #L486176.  call temp:= `T`(v5) @signature `Luc/r;.T:(Ljava/lang/String;)Luc/r;` @kind static;
  #L48617c.  v5:= temp @kind object;
  #L48617e.  return v5 @kind object;
  #L486180.  v0:= new `uc.b`;
  #L486184.  v1:= new `java.lang.StringBuilder`;
  #L486188.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48618e.  v2:= "Invalid zone: " @kind object;
  #L486192.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L486198.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48619e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4861a4.  v5:= temp @kind object;
  #L4861a6.  call `<init>`(v0, v5) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4861ac.  throw v0;
}
procedure `uc.q` `o`(`java.lang.String` v2 @kind object, `uc.r` v3 @kind object) @signature `Luc/q;.o:(Ljava/lang/String;Luc/r;)Luc/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4861c0.  v0:= "prefix" @kind object;
  #L4861c4.  call temp:= `i`(v2, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4861ca.  v0:= "offset" @kind object;
  #L4861ce.  call temp:= `i`(v3, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4861d4.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4861da.  v0:= temp;
  #L4861dc.  if v0 != 0 then goto L4861e2;
  #L4861e0.  return v3 @kind object;
  #L4861e2.  v0:= "GMT" @kind object;
  #L4861e6.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4861ec.  v0:= temp;
  #L4861ee.  if v0 != 0 then goto L486242;
  #L4861f2.  v0:= "UTC" @kind object;
  #L4861f6.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4861fc.  v0:= temp;
  #L4861fe.  if v0 != 0 then goto L486242;
  #L486202.  v0:= "UT" @kind object;
  #L486206.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L48620c.  v0:= temp;
  #L48620e.  if v0 == 0 then goto L486214;
  #L486212.  goto L486242;
  #L486214.  v3:= new `java.lang.IllegalArgumentException`;
  #L486218.  v0:= new `java.lang.StringBuilder`;
  #L48621c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L486222.  v1:= "Invalid prefix, must be GMT, UTC or UT: " @kind object;
  #L486226.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48622c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L486232.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L486238.  v2:= temp @kind object;
  #L48623a.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L486240.  throw v3;
  #L486242.  call temp:= `S`(v3) @signature `Luc/r;.S:()I` @kind virtual;
  #L486248.  v0:= temp;
  #L48624a.  if v0 != 0 then goto L486262;
  #L48624e.  v0:= new `uc.s`;
  #L486252.  call temp:= `h`(v3) @signature `Luc/r;.h:()Lzc/f;` @kind virtual;
  #L486258.  v3:= temp @kind object;
  #L48625a.  call `<init>`(v0, v2, v3) @signature `Luc/s;.<init>:(Ljava/lang/String;Lzc/f;)V` @kind direct;
  #L486260.  return v0 @kind object;
  #L486262.  v0:= new `uc.s`;
  #L486266.  v1:= new `java.lang.StringBuilder`;
  #L48626a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L486270.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L486276.  call temp:= `e`(v3) @signature `Luc/r;.e:()Ljava/lang/String;` @kind virtual;
  #L48627c.  v2:= temp @kind object;
  #L48627e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L486284.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48628a.  v2:= temp @kind object;
  #L48628c.  call temp:= `h`(v3) @signature `Luc/r;.h:()Lzc/f;` @kind virtual;
  #L486292.  v3:= temp @kind object;
  #L486294.  call `<init>`(v0, v2, v3) @signature `Luc/s;.<init>:(Ljava/lang/String;Lzc/f;)V` @kind direct;
  #L48629a.  return v0 @kind object;
}
procedure `java.lang.String` `e`() @signature `Luc/q;.e:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`uc.q` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Luc/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L485e40.  if v1 != v2 then goto L485e48;
  #L485e44.  v2:= 1I;
  #L485e46.  return v2;
  #L485e48.  v0:= instanceof @variable v2 @type ^`uc.q` @kind boolean;
  #L485e4c.  if v0 == 0 then goto L485e6e;
  #L485e50.  v2:= (`uc.q`) v2 @kind object;
  #L485e54.  call temp:= `e`(v1) @signature `Luc/q;.e:()Ljava/lang/String;` @kind virtual;
  #L485e5a.  v0:= temp @kind object;
  #L485e5c.  call temp:= `e`(v2) @signature `Luc/q;.e:()Ljava/lang/String;` @kind virtual;
  #L485e62.  v2:= temp @kind object;
  #L485e64.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L485e6a.  v2:= temp;
  #L485e6c.  return v2;
  #L485e6e.  v2:= 0I;
  #L485e70.  return v2;
}
procedure `zc.f` `h`() @signature `Luc/q;.h:()Lzc/f;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`uc.q` v1 @kind this) @signature `Luc/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L485e84.  call temp:= `e`(v1) @signature `Luc/q;.e:()Ljava/lang/String;` @kind virtual;
  #L485e8a.  v0:= temp @kind object;
  #L485e8c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L485e92.  v0:= temp;
  #L485e94.  return v0;
}
procedure `uc.q` `i`(`uc.q` v2 @kind this) @signature `Luc/q;.i:()Luc/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L485f3c.  call temp:= `h`(v2) @signature `Luc/q;.h:()Lzc/f;` @kind virtual;
  #L485f42.  v0:= temp @kind object;
  #L485f44.  call temp:= `d`(v0) @signature `Lzc/f;.d:()Z` @kind virtual;
  #L485f4a.  v1:= temp;
  #L485f4c.  if v1 == 0 then goto L485f5e;
  #L485f50.  v1:= `@@uc.e.q` @type ^`uc.e` @kind object;
  #L485f54.  call temp:= `a`(v0, v1) @signature `Lzc/f;.a:(Luc/e;)Luc/r;` @kind virtual;
  #L485f5a.  v0:= temp @kind object;
  #L485f5c.  return v0 @kind object;
  #L485f5e.  return v2 @kind object;
  catch `zc.g` @[L485f3c..L485f5c] goto L485f5e;
}
procedure `void` `s`(`java.io.DataOutput` v0 @kind object) @signature `Luc/q;.s:(Ljava/io/DataOutput;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`(`uc.q` v1 @kind this) @signature `Luc/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L485ea8.  call temp:= `e`(v1) @signature `Luc/q;.e:()Ljava/lang/String;` @kind virtual;
  #L485eae.  v0:= temp @kind object;
  #L485eb0.  return v0 @kind object;
}
