record `h8.a` @kind class @AccessFlag PUBLIC {
}
global `java.util.TimeZone` `@@h8.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh8/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L33fce0.  v0:= "UTC" @kind object;
  #L33fce4.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L33fcea.  v0:= temp @kind object;
  #L33fcec.  `@@h8.a.a` @type ^`java.util.TimeZone` := v0 @kind object;
  #L33fcf0.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v1 @kind object, `int` v2 , `char` v3 ) @signature `Lh8/a;.a:(Ljava/lang/String;IC)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L33f700.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33f706.  v0:= temp;
  #L33f708.  if v2 >= v0 then goto L33f71c;
  #L33f70c.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L33f712.  v1:= temp;
  #L33f714.  if v1 != v3 then goto L33f71c;
  #L33f718.  v1:= 1I;
  #L33f71a.  goto L33f71e;
  #L33f71c.  v1:= 0I;
  #L33f71e.  return v1;
}
procedure `int` `b`(`java.lang.String` v2 @kind object, `int` v3 ) @signature `Lh8/a;.b:(Ljava/lang/String;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L33f730.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33f736.  v0:= temp;
  #L33f738.  if v3 >= v0 then goto L33f75e;
  #L33f73c.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L33f742.  v0:= temp;
  #L33f744.  v1:= 48I;
  #L33f748.  if v0 < v1 then goto L33f75c;
  #L33f74c.  v1:= 57I;
  #L33f750.  if v0 <= v1 then goto L33f756;
  #L33f754.  goto L33f75c;
  #L33f756.  v3:= v3 + 1;
  #L33f75a.  goto L33f730;
  #L33f75c.  return v3;
  #L33f75e.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33f764.  v2:= temp;
  #L33f766.  return v2;
}
procedure `java.util.Date` `c`(`java.lang.String` v17 @kind object, `java.text.ParsePosition` v18 @kind object) @signature `Lh8/a;.c:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L33f864.  v1:= v17 @kind object;
  #L33f868.  v2:= v18 @kind object;
  #L33f86c.  call temp:= `getIndex`(v18) @signature `Ljava/text/ParsePosition;.getIndex:()I` @kind virtual;
  #L33f872.  v0:= temp;
  #L33f874.  v3:= v0 + 4;
  #L33f878.  call temp:= `d`(v1, v0, v3) @signature `Lh8/a;.d:(Ljava/lang/String;II)I` @kind static;
  #L33f87e.  v0:= temp;
  #L33f880.  v4:= 45I;
  #L33f884.  call temp:= `a`(v1, v3, v4) @signature `Lh8/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L33f88a.  v5:= temp;
  #L33f88c.  if v5 == 0 then goto L33f894;
  #L33f890.  v3:= v3 + 1;
  #L33f894.  v5:= v3 + 2;
  #L33f898.  call temp:= `d`(v1, v3, v5) @signature `Lh8/a;.d:(Ljava/lang/String;II)I` @kind static;
  #L33f89e.  v3:= temp;
  #L33f8a0.  call temp:= `a`(v1, v5, v4) @signature `Lh8/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L33f8a6.  v6:= temp;
  #L33f8a8.  if v6 == 0 then goto L33f8b0;
  #L33f8ac.  v5:= v5 + 1;
  #L33f8b0.  v6:= v5 + 2;
  #L33f8b4.  call temp:= `d`(v1, v5, v6) @signature `Lh8/a;.d:(Ljava/lang/String;II)I` @kind static;
  #L33f8ba.  v5:= temp;
  #L33f8bc.  v7:= 84I;
  #L33f8c0.  call temp:= `a`(v1, v6, v7) @signature `Lh8/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L33f8c6.  v7:= temp;
  #L33f8c8.  v8:= 1I;
  #L33f8ca.  if v7 != 0 then goto L33f8f6;
  #L33f8ce.  call temp:= `length`(v17) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33f8d4.  v9:= temp;
  #L33f8d6.  if v9 > v6 then goto L33f8f6;
  #L33f8da.  v4:= new `java.util.GregorianCalendar`;
  #L33f8de.  v3:= v3 - v8 @kind int;
  #L33f8e0.  call `<init>`(v4, v0, v3, v5) @signature `Ljava/util/GregorianCalendar;.<init>:(III)V` @kind direct;
  #L33f8e6.  call `setIndex`(v2, v6) @signature `Ljava/text/ParsePosition;.setIndex:(I)V` @kind virtual;
  #L33f8ec.  call temp:= `getTime`(v4) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L33f8f2.  v0:= temp @kind object;
  #L33f8f4.  return v0 @kind object;
  #L33f8f6.  v9:= 43I;
  #L33f8fa.  v10:= 90I;
  #L33f8fe.  v12:= 2I;
  #L33f900.  if v7 == 0 then goto L33f9ee;
  #L33f904.  v6:= v6 + 1;
  #L33f908.  v7:= v6 + 2;
  #L33f90c.  call temp:= `d`(v1, v6, v7) @signature `Lh8/a;.d:(Ljava/lang/String;II)I` @kind static;
  #L33f912.  v6:= temp;
  #L33f914.  v13:= 58I;
  #L33f918.  call temp:= `a`(v1, v7, v13) @signature `Lh8/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L33f91e.  v14:= temp;
  #L33f920.  if v14 == 0 then goto L33f928;
  #L33f924.  v7:= v7 + 1;
  #L33f928.  v14:= v7 + 2;
  #L33f92c.  call temp:= `d`(v1, v7, v14) @signature `Lh8/a;.d:(Ljava/lang/String;II)I` @kind static;
  #L33f932.  v7:= temp;
  #L33f934.  call temp:= `a`(v1, v14, v13) @signature `Lh8/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L33f93a.  v13:= temp;
  #L33f93c.  if v13 == 0 then goto L33f944;
  #L33f940.  v14:= v14 + 1;
  #L33f944.  call temp:= `length`(v17) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33f94a.  v13:= temp;
  #L33f94c.  if v13 <= v14 then goto L33f9e4;
  #L33f950.  call temp:= `charAt`(v1, v14) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L33f956.  v13:= temp;
  #L33f958.  if v13 == v10 then goto L33f9e4;
  #L33f95c.  if v13 == v9 then goto L33f9e4;
  #L33f960.  if v13 == v4 then goto L33f9e4;
  #L33f964.  v13:= v14 + 2;
  #L33f968.  call temp:= `d`(v1, v14, v13) @signature `Lh8/a;.d:(Ljava/lang/String;II)I` @kind static;
  #L33f96e.  v14:= temp;
  #L33f970.  v15:= 59I;
  #L33f974.  if v14 <= v15 then goto L33f984;
  #L33f978.  v15:= 63I;
  #L33f97c.  if v14 >= v15 then goto L33f984;
  #L33f980.  v14:= 59I;
  #L33f984.  v15:= 46I;
  #L33f988.  call temp:= `a`(v1, v13, v15) @signature `Lh8/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L33f98e.  v15:= temp;
  #L33f990.  if v15 == 0 then goto L33f9da;
  #L33f994.  v13:= v13 + 1;
  #L33f998.  v15:= v13 + 1;
  #L33f99c.  call temp:= `b`(v1, v15) @signature `Lh8/a;.b:(Ljava/lang/String;I)I` @kind static;
  #L33f9a2.  v15:= temp;
  #L33f9a4.  v11:= v13 + 3;
  #L33f9a8.  call temp:= `min`(v15, v11) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L33f9ae.  v11:= temp;
  #L33f9b0.  call temp:= `d`(v1, v13, v11) @signature `Lh8/a;.d:(Ljava/lang/String;II)I` @kind static;
  #L33f9b6.  v16:= temp;
  #L33f9b8.  v11:= v11 - v13 @kind int;
  #L33f9ba.  if v11 == v8 then goto L33f9ca;
  #L33f9be.  if v11 == v12 then goto L33f9c4;
  #L33f9c2.  goto L33f9ce;
  #L33f9c4.  v16:= v16 * 10;
  #L33f9c8.  goto L33f9ce;
  #L33f9ca.  v16:= v16 * 100;
  #L33f9ce.  v11:= v7;
  #L33f9d0.  v13:= v16;
  #L33f9d4.  v7:= v6;
  #L33f9d6.  v6:= v15;
  #L33f9d8.  goto L33f9f6;
  #L33f9da.  v11:= v7;
  #L33f9dc.  v7:= v6;
  #L33f9de.  v6:= v13;
  #L33f9e0.  v13:= 0I;
  #L33f9e2.  goto L33f9f6;
  #L33f9e4.  v11:= v7;
  #L33f9e6.  v13:= 0I;
  #L33f9e8.  v7:= v6;
  #L33f9ea.  v6:= v14;
  #L33f9ec.  goto L33f9f4;
  #L33f9ee.  v7:= 0I;
  #L33f9f0.  v11:= 0I;
  #L33f9f2.  v13:= 0I;
  #L33f9f4.  v14:= 0I;
  #L33f9f6.  call temp:= `length`(v17) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33f9fc.  v15:= temp;
  #L33f9fe.  if v15 <= v6 then goto L33fbcc;
  #L33fa02.  call temp:= `charAt`(v1, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L33fa08.  v15:= temp;
  #L33fa0a.  v12:= 5I;
  #L33fa0c.  if v15 != v10 then goto L33fa1a;
  #L33fa10.  v4:= `@@h8.a.a` @type ^`java.util.TimeZone` @kind object;
  #L33fa14.  v6:= v6 + v8 @kind int;
  #L33fa16.  goto L33fb6a;
  #L33fa1a.  if v15 == v9 then goto L33fa5c;
  #L33fa1e.  if v15 != v4 then goto L33fa24;
  #L33fa22.  goto L33fa5c;
  #L33fa24.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L33fa28.  v3:= new `java.lang.StringBuilder`;
  #L33fa2c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33fa32.  v4:= "Invalid time zone indicator '" @kind object;
  #L33fa36.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fa3c.  call temp:= `append`(v3, v15) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fa42.  v4:= "'" @kind object;
  #L33fa46.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fa4c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33fa52.  v3:= temp @kind object;
  #L33fa54.  call `<init>`(v0, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33fa5a.  throw v0;
  #L33fa5c.  call temp:= `substring`(v1, v6) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L33fa62.  v4:= temp @kind object;
  #L33fa64.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33fa6a.  v9:= temp;
  #L33fa6c.  if v9 < v12 then goto L33fa72;
  #L33fa70.  goto L33fa94;
  #L33fa72.  v9:= new `java.lang.StringBuilder`;
  #L33fa76.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33fa7c.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fa82.  v4:= "00" @kind object;
  #L33fa86.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fa8c.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33fa92.  v4:= temp @kind object;
  #L33fa94.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33fa9a.  v9:= temp;
  #L33fa9c.  v6:= v6 + v9 @kind int;
  #L33fa9e.  v9:= "+0000" @kind object;
  #L33faa2.  call temp:= `equals`(v9, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33faa8.  v9:= temp;
  #L33faaa.  if v9 != 0 then goto L33fb66;
  #L33faae.  v9:= "+00:00" @kind object;
  #L33fab2.  call temp:= `equals`(v9, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33fab8.  v9:= temp;
  #L33faba.  if v9 == 0 then goto L33fac0;
  #L33fabe.  goto L33fb66;
  #L33fac0.  v9:= new `java.lang.StringBuilder`;
  #L33fac4.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33faca.  v10:= "GMT" @kind object;
  #L33face.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fad4.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fada.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33fae0.  v4:= temp @kind object;
  #L33fae2.  call temp:= `getTimeZone`(v4) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L33fae8.  v9:= temp @kind object;
  #L33faea.  call temp:= `getID`(v9) @signature `Ljava/util/TimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L33faf0.  v10:= temp @kind object;
  #L33faf2.  call temp:= `equals`(v10, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33faf8.  v15:= temp;
  #L33fafa.  if v15 != 0 then goto L33fb62;
  #L33fafe.  v15:= ":" @kind object;
  #L33fb02.  v12:= "" @kind object;
  #L33fb06.  call temp:= `replace`(v10, v15, v12) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L33fb0c.  v10:= temp @kind object;
  #L33fb0e.  call temp:= `equals`(v10, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33fb14.  v10:= temp;
  #L33fb16.  if v10 == 0 then goto L33fb1c;
  #L33fb1a.  goto L33fb62;
  #L33fb1c.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L33fb20.  v3:= new `java.lang.StringBuilder`;
  #L33fb24.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33fb2a.  v5:= "Mismatching time zone indicator: " @kind object;
  #L33fb2e.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fb34.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fb3a.  v4:= " given, resolves to " @kind object;
  #L33fb3e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fb44.  call temp:= `getID`(v9) @signature `Ljava/util/TimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L33fb4a.  v4:= temp @kind object;
  #L33fb4c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fb52.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33fb58.  v3:= temp @kind object;
  #L33fb5a.  call `<init>`(v0, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33fb60.  throw v0;
  #L33fb62.  v4:= v9 @kind object;
  #L33fb64.  goto L33fb6a;
  #L33fb66.  v4:= `@@h8.a.a` @type ^`java.util.TimeZone` @kind object;
  #L33fb6a.  v9:= new `java.util.GregorianCalendar`;
  #L33fb6e.  call `<init>`(v9, v4) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L33fb74.  v4:= 0I;
  #L33fb76.  call `setLenient`(v9, v4) @signature `Ljava/util/Calendar;.setLenient:(Z)V` @kind virtual;
  #L33fb7c.  call `set`(v9, v8, v0) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L33fb82.  v3:= v3 - v8 @kind int;
  #L33fb84.  v0:= 2I;
  #L33fb86.  call `set`(v9, v0, v3) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L33fb8c.  v0:= 5I;
  #L33fb8e.  call `set`(v9, v0, v5) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L33fb94.  v0:= 11I;
  #L33fb98.  call `set`(v9, v0, v7) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L33fb9e.  v0:= 12I;
  #L33fba2.  call `set`(v9, v0, v11) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L33fba8.  v0:= 13I;
  #L33fbac.  call `set`(v9, v0, v14) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L33fbb2.  v0:= 14I;
  #L33fbb6.  call `set`(v9, v0, v13) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L33fbbc.  call `setIndex`(v2, v6) @signature `Ljava/text/ParsePosition;.setIndex:(I)V` @kind virtual;
  #L33fbc2.  call temp:= `getTime`(v9) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L33fbc8.  v0:= temp @kind object;
  #L33fbca.  return v0 @kind object;
  #L33fbcc.  v0:= new `java.lang.IllegalArgumentException`;
  #L33fbd0.  v3:= "No time zone indicator" @kind object;
  #L33fbd4.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33fbda.  throw v0;
  #L33fbdc.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L33fbde.  goto L33fbe6;
  #L33fbe0.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L33fbe2.  goto L33fbe6;
  #L33fbe4.  v0:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L33fbe6.  if v1 != 0 then goto L33fbee;
  #L33fbea.  v1:= 0I;
  #L33fbec.  goto L33fc16;
  #L33fbee.  v3:= new `java.lang.StringBuilder`;
  #L33fbf2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33fbf8.  v4:= 34I;
  #L33fbfc.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fc02.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fc08.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fc0e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33fc14.  v1:= temp @kind object;
  #L33fc16.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L33fc1c.  v3:= temp @kind object;
  #L33fc1e.  if v3 == 0 then goto L33fc2e;
  #L33fc22.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L33fc28.  v4:= temp;
  #L33fc2a.  if v4 == 0 then goto L33fc6a;
  #L33fc2e.  v3:= new `java.lang.StringBuilder`;
  #L33fc32.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33fc38.  v4:= "(" @kind object;
  #L33fc3c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fc42.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L33fc48.  v4:= temp @kind object;
  #L33fc4a.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L33fc50.  v4:= temp @kind object;
  #L33fc52.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fc58.  v4:= ")" @kind object;
  #L33fc5c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fc62.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33fc68.  v3:= temp @kind object;
  #L33fc6a.  v4:= new `java.text.ParseException`;
  #L33fc6e.  v5:= new `java.lang.StringBuilder`;
  #L33fc72.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33fc78.  v6:= "Failed to parse date [" @kind object;
  #L33fc7c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fc82.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fc88.  v1:= "]: " @kind object;
  #L33fc8c.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fc92.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33fc98.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33fc9e.  v1:= temp @kind object;
  #L33fca0.  call temp:= `getIndex`(v18) @signature `Ljava/text/ParsePosition;.getIndex:()I` @kind virtual;
  #L33fca6.  v2:= temp;
  #L33fca8.  call `<init>`(v4, v1, v2) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L33fcae.  call temp:= `initCause`(v4, v0) @signature `Ljava/text/ParseException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L33fcb4.  throw v4;
  catch `java.lang.IndexOutOfBoundsException` @[L33f86c..L33fbdc] goto L33fbe4;
  catch `java.lang.NumberFormatException` @[L33f86c..L33fbdc] goto L33fbe0;
  catch `java.lang.IllegalArgumentException` @[L33f86c..L33fbdc] goto L33fbdc;
}
procedure `int` `d`(`java.lang.String` v5 @kind object, `int` v6 , `int` v7 ) @signature `Lh8/a;.d:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L33f778.  if v6 < 0 then goto L33f848;
  #L33f77c.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33f782.  v0:= temp;
  #L33f784.  if v7 > v0 then goto L33f848;
  #L33f788.  if v6 > v7 then goto L33f848;
  #L33f78c.  v0:= 0I;
  #L33f78e.  v1:= "Invalid number: " @kind object;
  #L33f792.  v2:= 10I;
  #L33f796.  if v6 >= v7 then goto L33f7e8;
  #L33f79a.  v0:= v6 + 1;
  #L33f79e.  call temp:= `charAt`(v5, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L33f7a4.  v3:= temp;
  #L33f7a6.  call temp:= `digit`(v3, v2) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L33f7ac.  v3:= temp;
  #L33f7ae.  if v3 < 0 then goto L33f7b6;
  #L33f7b2.  v3:= -v3 @kind int;
  #L33f7b4.  goto L33f7ec;
  #L33f7b6.  v0:= new `java.lang.NumberFormatException`;
  #L33f7ba.  v2:= new `java.lang.StringBuilder`;
  #L33f7be.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33f7c4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f7ca.  call temp:= `substring`(v5, v6, v7) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L33f7d0.  v5:= temp @kind object;
  #L33f7d2.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f7d8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33f7de.  v5:= temp @kind object;
  #L33f7e0.  call `<init>`(v0, v5) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33f7e6.  throw v0;
  #L33f7e8.  v0:= v6;
  #L33f7ea.  v3:= 0I;
  #L33f7ec.  if v0 >= v7 then goto L33f844;
  #L33f7f0.  v4:= v0 + 1;
  #L33f7f4.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L33f7fa.  v0:= temp;
  #L33f7fc.  call temp:= `digit`(v0, v2) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L33f802.  v0:= temp;
  #L33f804.  if v0 < 0 then goto L33f812;
  #L33f808.  v3:= v3 * 10;
  #L33f80c.  v3:= v3 - v0 @kind int;
  #L33f80e.  v0:= v4;
  #L33f810.  goto L33f7ec;
  #L33f812.  v0:= new `java.lang.NumberFormatException`;
  #L33f816.  v2:= new `java.lang.StringBuilder`;
  #L33f81a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33f820.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f826.  call temp:= `substring`(v5, v6, v7) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L33f82c.  v5:= temp @kind object;
  #L33f82e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33f834.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33f83a.  v5:= temp @kind object;
  #L33f83c.  call `<init>`(v0, v5) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33f842.  throw v0;
  #L33f844.  v5:= -v3 @kind int;
  #L33f846.  return v5;
  #L33f848.  v6:= new `java.lang.NumberFormatException`;
  #L33f84c.  call `<init>`(v6, v5) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33f852.  throw v6;
}
