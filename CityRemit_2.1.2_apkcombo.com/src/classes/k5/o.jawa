record `k5.o` @kind class @AccessFlag FINAL {
  `java.lang.Object` `k5.o.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Queue` `k5.o.b` @AccessFlag PRIVATE;
  `boolean` `k5.o.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`k5.o` v1 @kind this) @signature `Lk5/o;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3aa3f4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3aa3fa.  v0:= new `java.lang.Object`;
  #L3aa3fe.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3aa404.  v1.`k5.o.a` @type ^`java.lang.Object` := v0 @kind object;
  #L3aa408.  return @kind void;
}
procedure `void` `a`(`k5.o` v2 @kind this, `k5.n` v3 @kind object) @signature `Lk5/o;.a:(Lk5/n;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3aa41c.  v0:= v2.`k5.o.a` @type ^`java.lang.Object` @kind object;
  #L3aa420.  @monitorenter v0
  #L3aa422.  v1:= v2.`k5.o.b` @type ^`java.util.Queue` @kind object;
  #L3aa426.  if v1 != 0 then goto L3aa438;
  #L3aa42a.  v1:= new `java.util.ArrayDeque`;
  #L3aa42e.  call `<init>`(v1) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L3aa434.  v2.`k5.o.b` @type ^`java.util.Queue` := v1 @kind object;
  #L3aa438.  v1:= v2.`k5.o.b` @type ^`java.util.Queue` @kind object;
  #L3aa43c.  call temp:= `add`(v1, v3) @signature `Ljava/util/Queue;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3aa442.  @monitorexit v0
  #L3aa444.  return @kind void;
  #L3aa446.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3aa448.  @monitorexit v0
  #L3aa44a.  throw v3;
  catch `java.lang.Throwable` @[L3aa422..L3aa44a] goto L3aa446;
}
procedure `void` `b`(`k5.o` v2 @kind this, `k5.e` v3 @kind object) @signature `Lk5/o;.b:(Lk5/e;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3aa468.  v0:= v2.`k5.o.a` @type ^`java.lang.Object` @kind object;
  #L3aa46c.  @monitorenter v0
  #L3aa46e.  v1:= v2.`k5.o.b` @type ^`java.util.Queue` @kind object;
  #L3aa472.  if v1 == 0 then goto L3aa4bc;
  #L3aa476.  v1:= v2.`k5.o.c` @type ^`boolean` @kind boolean;
  #L3aa47a.  if v1 == 0 then goto L3aa480;
  #L3aa47e.  goto L3aa4bc;
  #L3aa480.  v1:= 1I;
  #L3aa482.  v2.`k5.o.c` @type ^`boolean` := v1 @kind boolean;
  #L3aa486.  @monitorexit v0
  #L3aa488.  v1:= v2.`k5.o.a` @type ^`java.lang.Object` @kind object;
  #L3aa48c.  @monitorenter v1
  #L3aa48e.  v0:= v2.`k5.o.b` @type ^`java.util.Queue` @kind object;
  #L3aa492.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L3aa498.  v0:= temp @kind object;
  #L3aa49a.  v0:= (`k5.n`) v0 @kind object;
  #L3aa49e.  if v0 != 0 then goto L3aa4ac;
  #L3aa4a2.  v3:= 0I;
  #L3aa4a4.  v2.`k5.o.c` @type ^`boolean` := v3 @kind boolean;
  #L3aa4a8.  @monitorexit v1
  #L3aa4aa.  return @kind void;
  #L3aa4ac.  @monitorexit v1
  #L3aa4ae.  call `a`(v0, v3) @signature `Lk5/n;.a:(Lk5/e;)V` @kind interface;
  #L3aa4b4.  goto L3aa488;
  #L3aa4b6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3aa4b8.  @monitorexit v1
  #L3aa4ba.  throw v3;
  #L3aa4bc.  @monitorexit v0
  #L3aa4be.  return @kind void;
  #L3aa4c0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3aa4c2.  @monitorexit v0
  #L3aa4c4.  throw v3;
  catch `java.lang.Throwable` @[L3aa46e..L3aa488] goto L3aa4c0;
  catch `java.lang.Throwable` @[L3aa48e..L3aa4ae] goto L3aa4b6;
  catch `java.lang.Throwable` @[L3aa4b8..L3aa4ba] goto L3aa4b6;
  catch `java.lang.Throwable` @[L3aa4bc..L3aa4c4] goto L3aa4c0;
}
