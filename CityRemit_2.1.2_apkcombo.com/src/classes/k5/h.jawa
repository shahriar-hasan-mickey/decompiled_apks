record `k5.h` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `k5.e` `k5.h.o` @AccessFlag FINAL_SYNTHETIC;
  `k5.i` `k5.h.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`k5.h` v0 @kind this, `k5.i` v1 @kind object, `k5.e` v2 @kind object) @signature `Lk5/h;.<init>:(Lk5/i;Lk5/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3aa040.  v0.`k5.h.p` @type ^`k5.i` := v1 @kind object;
  #L3aa044.  v0.`k5.h.o` @type ^`k5.e` := v2 @kind object;
  #L3aa048.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3aa04e.  return @kind void;
}
procedure `void` `run`(`k5.h` v3 @kind this) @signature `Lk5/h;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3aa060.  v0:= v3.`k5.h.p` @type ^`k5.i` @kind object;
  #L3aa064.  call temp:= `c`(v0) @signature `Lk5/i;.c:(Lk5/i;)Ljava/lang/Object;` @kind static;
  #L3aa06a.  v0:= temp @kind object;
  #L3aa06c.  @monitorenter v0
  #L3aa06e.  v1:= v3.`k5.h.p` @type ^`k5.i` @kind object;
  #L3aa072.  call temp:= `b`(v1) @signature `Lk5/i;.b:(Lk5/i;)Lk5/a;` @kind static;
  #L3aa078.  v2:= temp @kind object;
  #L3aa07a.  if v2 == 0 then goto L3aa090;
  #L3aa07e.  call temp:= `b`(v1) @signature `Lk5/i;.b:(Lk5/i;)Lk5/a;` @kind static;
  #L3aa084.  v1:= temp @kind object;
  #L3aa086.  v2:= v3.`k5.h.o` @type ^`k5.e` @kind object;
  #L3aa08a.  call `a`(v1, v2) @signature `Lk5/a;.a:(Lk5/e;)V` @kind interface;
  #L3aa090.  @monitorexit v0
  #L3aa092.  return @kind void;
  #L3aa094.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3aa096.  @monitorexit v0
  #L3aa098.  throw v1;
  catch `java.lang.Throwable` @[L3aa06e..L3aa098] goto L3aa094;
}
