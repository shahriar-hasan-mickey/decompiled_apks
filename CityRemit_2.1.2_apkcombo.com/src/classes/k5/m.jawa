record `k5.m` @kind class @AccessFlag FINAL extends `k5.n` @kind interface {
  `java.util.concurrent.Executor` `k5.m.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `k5.m.b` @AccessFlag PRIVATE_FINAL;
  `k5.c` `k5.m.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`k5.m` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `k5.c` v3 @kind object) @signature `Lk5/m;.<init>:(Ljava/util/concurrent/Executor;Lk5/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3aa360.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3aa366.  v0:= new `java.lang.Object`;
  #L3aa36a.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3aa370.  v1.`k5.m.b` @type ^`java.lang.Object` := v0 @kind object;
  #L3aa374.  v1.`k5.m.a` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L3aa378.  v1.`k5.m.c` @type ^`k5.c` := v3 @kind object;
  #L3aa37c.  return @kind void;
}
procedure `k5.c` `b`(`k5.m` v0 @kind object) @signature `Lk5/m;.b:(Lk5/m;)Lk5/c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3aa348.  v0:= v0.`k5.m.c` @type ^`k5.c` @kind object;
  #L3aa34c.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`k5.m` v0 @kind object) @signature `Lk5/m;.c:(Lk5/m;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3aa330.  v0:= v0.`k5.m.b` @type ^`java.lang.Object` @kind object;
  #L3aa334.  return v0 @kind object;
}
procedure `void` `a`(`k5.m` v2 @kind this, `k5.e` v3 @kind object) @signature `Lk5/m;.a:(Lk5/e;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3aa390.  call temp:= `i`(v3) @signature `Lk5/e;.i:()Z` @kind virtual;
  #L3aa396.  v0:= temp;
  #L3aa398.  if v0 == 0 then goto L3aa3cc;
  #L3aa39c.  v0:= v2.`k5.m.b` @type ^`java.lang.Object` @kind object;
  #L3aa3a0.  @monitorenter v0
  #L3aa3a2.  v1:= v2.`k5.m.c` @type ^`k5.c` @kind object;
  #L3aa3a6.  if v1 != 0 then goto L3aa3ae;
  #L3aa3aa.  @monitorexit v0
  #L3aa3ac.  return @kind void;
  #L3aa3ae.  @monitorexit v0
  #L3aa3b0.  v0:= v2.`k5.m.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L3aa3b4.  v1:= new `k5.l`;
  #L3aa3b8.  call `<init>`(v1, v2, v3) @signature `Lk5/l;.<init>:(Lk5/m;Lk5/e;)V` @kind direct;
  #L3aa3be.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3aa3c4.  return @kind void;
  #L3aa3c6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3aa3c8.  @monitorexit v0
  #L3aa3ca.  throw v3;
  #L3aa3cc.  return @kind void;
  catch `java.lang.Throwable` @[L3aa3a2..L3aa3b0] goto L3aa3c6;
  catch `java.lang.Throwable` @[L3aa3c8..L3aa3ca] goto L3aa3c6;
}
