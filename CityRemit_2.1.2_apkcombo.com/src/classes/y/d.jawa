record `y.d` @kind class @AccessFlag ABSTRACT extends `android.view.animation.Interpolator` @kind interface {
  `float`[] `y.d.a` @AccessFlag PRIVATE_FINAL;
  `float` `y.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`y.d` v1 @kind this, `float`[] v2 @kind object) @signature `Ly/d;.<init>:([F)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L4f1250.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f1256.  v1.`y.d.a` @type ^`float`[] := v2 @kind object;
  #L4f125a.  v2:= length @variable v2;
  #L4f125c.  v2:= v2 + -1;
  #L4f1260.  v2:= (`float`) v2 @kind i2f;
  #L4f1262.  v0:= 1.0F;
  #L4f1266.  v0:= v0 / v2 @kind float;
  #L4f1268.  v1.`y.d.b` @type ^`float` := v0;
  #L4f126c.  return @kind void;
}
procedure `float` `getInterpolation`(`y.d` v4 @kind this, `float` v5 ) @signature `Ly/d;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f11d8.  v0:= 1.0F;
  #L4f11dc.  v1:= fcmpl(v5, v0);
  #L4f11e0.  if v1 < 0 then goto L4f11e6;
  #L4f11e4.  return v0;
  #L4f11e6.  v0:= 0I;
  #L4f11e8.  v1:= fcmpg(v5, v0);
  #L4f11ec.  if v1 > 0 then goto L4f11f2;
  #L4f11f0.  return v0;
  #L4f11f2.  v0:= v4.`y.d.a` @type ^`float`[] @kind object;
  #L4f11f6.  v1:= length @variable v0;
  #L4f11f8.  v1:= v1 + -1;
  #L4f11fc.  v1:= (`float`) v1 @kind i2f;
  #L4f11fe.  v1:= v1 * v5 @kind float;
  #L4f1202.  v1:= (`int`) v1 @kind f2i;
  #L4f1204.  v0:= length @variable v0;
  #L4f1206.  v0:= v0 + -2;
  #L4f120a.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L4f1210.  v0:= temp;
  #L4f1212.  v1:= (`float`) v0 @kind i2f;
  #L4f1214.  v2:= v4.`y.d.b` @type ^`float`;
  #L4f1218.  v1:= v1 * v2 @kind float;
  #L4f121c.  v5:= v5 - v1 @kind float;
  #L4f121e.  v5:= v5 / v2 @kind float;
  #L4f1220.  v1:= v4.`y.d.a` @type ^`float`[] @kind object;
  #L4f1224.  v2:= v1[v0];
  #L4f1228.  v3:= v0 + 1;
  #L4f122c.  v3:= v1[v3];
  #L4f1230.  v0:= v1[v0];
  #L4f1234.  v3:= v3 - v0 @kind float;
  #L4f1236.  v5:= v5 * v3 @kind float;
  #L4f123a.  v2:= v2 + v5 @kind float;
  #L4f123c.  return v2;
}
