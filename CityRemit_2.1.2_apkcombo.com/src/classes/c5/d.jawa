record `c5.d` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.io.FilenameFilter` @kind interface {
  `java.lang.String` `c5.d.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`c5.d` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lc5/d;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1f68f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f68fa.  v0.`c5.d.a` @type ^`java.lang.String` := v1 @kind object;
  #L1f68fe.  return @kind void;
}
procedure `boolean` `accept`(`c5.d` v1 @kind this, `java.io.File` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lc5/d;.accept:(Ljava/io/File;Ljava/lang/String;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1f68a8.  v2:= v1.`c5.d.a` @type ^`java.lang.String` @kind object;
  #L1f68ac.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1f68b2.  v2:= temp @kind object;
  #L1f68b4.  v0:= "-" @kind object;
  #L1f68b8.  call temp:= `concat`(v2, v0) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1f68be.  v2:= temp @kind object;
  #L1f68c0.  call temp:= `startsWith`(v3, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1f68c6.  v2:= temp;
  #L1f68c8.  if v2 == 0 then goto L1f68e0;
  #L1f68cc.  v2:= ".apk" @kind object;
  #L1f68d0.  call temp:= `endsWith`(v3, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1f68d6.  v2:= temp;
  #L1f68d8.  if v2 == 0 then goto L1f68e0;
  #L1f68dc.  v2:= 1I;
  #L1f68de.  return v2;
  #L1f68e0.  v2:= 0I;
  #L1f68e2.  return v2;
}
