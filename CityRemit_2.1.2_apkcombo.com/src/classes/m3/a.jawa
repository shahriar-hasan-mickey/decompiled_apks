record `m3.a` @kind class @AccessFlag PUBLIC_FINAL extends `g3.f` @kind class {
  `java.lang.StringBuilder` `m3.a.n` @AccessFlag PRIVATE_FINAL;
  `java.util.ArrayList` `m3.a.o` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@m3.a.p` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@m3.a.q` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lm3/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3db1e8.  v0:= "\\s*((?:(\\d+):)?(\\d+):(\\d+)(?:,(\\d+))?)\\s*-->\\s*((?:(\\d+):)?(\\d+):(\\d+)(?:,(\\d+))?)\\s*" @kind object;
  #L3db1ec.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3db1f2.  v0:= temp @kind object;
  #L3db1f4.  `@@m3.a.p` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L3db1f8.  v0:= "\\{\\\\.*?\\}" @kind object;
  #L3db1fc.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3db202.  v0:= temp @kind object;
  #L3db204.  `@@m3.a.q` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L3db208.  return @kind void;
}
procedure `void` `<init>`(`m3.a` v1 @kind this) @signature `Lm3/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3db21c.  v0:= "SubripDecoder" @kind object;
  #L3db220.  call `<init>`(v1, v0) @signature `Lg3/f;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3db226.  v0:= new `java.lang.StringBuilder`;
  #L3db22a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3db230.  v1.`m3.a.n` @type ^`java.lang.StringBuilder` := v0 @kind object;
  #L3db234.  v0:= new `java.util.ArrayList`;
  #L3db238.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3db23e.  v1.`m3.a.o` @type ^`java.util.ArrayList` := v0 @kind object;
  #L3db242.  return @kind void;
}
procedure `g3.b` `C`(`m3.a` v16 @kind this, `android.text.Spanned` v17 @kind object, `java.lang.String` v18 @kind object) @signature `Lm3/a;.C:(Landroid/text/Spanned;Ljava/lang/String;)Lg3/b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3dabf4.  v0:= v18 @kind object;
  #L3dabf8.  v1:= new `g3.b$b`;
  #L3dabfc.  call `<init>`(v1) @signature `Lg3/b$b;.<init>:()V` @kind direct;
  #L3dac02.  v2:= v17 @kind object;
  #L3dac06.  call temp:= `o`(v1, v2) @signature `Lg3/b$b;.o:(Ljava/lang/CharSequence;)Lg3/b$b;` @kind virtual;
  #L3dac0c.  v1:= temp @kind object;
  #L3dac0e.  if v0 != 0 then goto L3dac1c;
  #L3dac12.  call temp:= `a`(v1) @signature `Lg3/b$b;.a:()Lg3/b;` @kind virtual;
  #L3dac18.  v0:= temp @kind object;
  #L3dac1a.  return v0 @kind object;
  #L3dac1c.  call temp:= `hashCode`(v18) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3dac22.  v2:= temp;
  #L3dac24.  v6:= "{\\an9}" @kind object;
  #L3dac28.  v7:= "{\\an8}" @kind object;
  #L3dac2c.  v8:= "{\\an7}" @kind object;
  #L3dac30.  v9:= "{\\an6}" @kind object;
  #L3dac34.  v10:= "{\\an5}" @kind object;
  #L3dac38.  v11:= "{\\an4}" @kind object;
  #L3dac3c.  v12:= "{\\an3}" @kind object;
  #L3dac40.  v13:= "{\\an2}" @kind object;
  #L3dac44.  v14:= "{\\an1}" @kind object;
  #L3dac48.  v4:= 4I;
  #L3dac4a.  v5:= 3I;
  #L3dac4c.  v15:= 2I;
  #L3dac4e.  v3:= 1I;
  #L3dac50.  goto L3dae34;
  #L3dac56.  goto L3dacea;
  #L3dac58.  call temp:= `equals`(v0, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dac5e.  v2:= temp;
  #L3dac60.  if v2 == 0 then goto L3dacea;
  #L3dac64.  v2:= 5I;
  #L3dac66.  goto L3dacec;
  #L3dac68.  call temp:= `equals`(v0, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dac6e.  v2:= temp;
  #L3dac70.  if v2 == 0 then goto L3dacea;
  #L3dac74.  v2:= 8I;
  #L3dac78.  goto L3dacec;
  #L3dac7a.  call temp:= `equals`(v0, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dac80.  v2:= temp;
  #L3dac82.  if v2 == 0 then goto L3dacea;
  #L3dac86.  v2:= 2I;
  #L3dac88.  goto L3dacec;
  #L3dac8a.  call temp:= `equals`(v0, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dac90.  v2:= temp;
  #L3dac92.  if v2 == 0 then goto L3dacea;
  #L3dac96.  v2:= 4I;
  #L3dac98.  goto L3dacec;
  #L3dac9a.  call temp:= `equals`(v0, v10) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3daca0.  v2:= temp;
  #L3daca2.  if v2 == 0 then goto L3dacea;
  #L3daca6.  v2:= 7I;
  #L3daca8.  goto L3dacec;
  #L3dacaa.  call temp:= `equals`(v0, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dacb0.  v2:= temp;
  #L3dacb2.  if v2 == 0 then goto L3dacea;
  #L3dacb6.  v2:= 1I;
  #L3dacb8.  goto L3dacec;
  #L3dacba.  call temp:= `equals`(v0, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dacc0.  v2:= temp;
  #L3dacc2.  if v2 == 0 then goto L3dacea;
  #L3dacc6.  v2:= 3I;
  #L3dacc8.  goto L3dacec;
  #L3dacca.  call temp:= `equals`(v0, v13) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dacd0.  v2:= temp;
  #L3dacd2.  if v2 == 0 then goto L3dacea;
  #L3dacd6.  v2:= 6I;
  #L3dacd8.  goto L3dacec;
  #L3dacda.  call temp:= `equals`(v0, v14) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dace0.  v2:= temp;
  #L3dace2.  if v2 == 0 then goto L3dacea;
  #L3dace6.  v2:= 0I;
  #L3dace8.  goto L3dacec;
  #L3dacea.  v2:= -1I;
  #L3dacec.  if v2 == 0 then goto L3dad16;
  #L3dacf0.  if v2 == v3 then goto L3dad16;
  #L3dacf4.  if v2 == v15 then goto L3dad16;
  #L3dacf8.  if v2 == v5 then goto L3dad0e;
  #L3dacfc.  if v2 == v4 then goto L3dad0e;
  #L3dad00.  v4:= 5I;
  #L3dad02.  if v2 == v4 then goto L3dad0e;
  #L3dad06.  call temp:= `l`(v1, v3) @signature `Lg3/b$b;.l:(I)Lg3/b$b;` @kind virtual;
  #L3dad0c.  goto L3dad1e;
  #L3dad0e.  call temp:= `l`(v1, v15) @signature `Lg3/b$b;.l:(I)Lg3/b$b;` @kind virtual;
  #L3dad14.  goto L3dad1e;
  #L3dad16.  v2:= 0I;
  #L3dad18.  call temp:= `l`(v1, v2) @signature `Lg3/b$b;.l:(I)Lg3/b$b;` @kind virtual;
  #L3dad1e.  call temp:= `hashCode`(v18) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3dad24.  v2:= temp;
  #L3dad26.  goto L3dae80;
  #L3dad2c.  goto L3dadc0;
  #L3dad2e.  call temp:= `equals`(v0, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dad34.  v0:= temp;
  #L3dad36.  if v0 == 0 then goto L3dadc0;
  #L3dad3a.  v0:= 5I;
  #L3dad3c.  goto L3dadc2;
  #L3dad3e.  call temp:= `equals`(v0, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dad44.  v0:= temp;
  #L3dad46.  if v0 == 0 then goto L3dadc0;
  #L3dad4a.  v0:= 4I;
  #L3dad4c.  goto L3dadc2;
  #L3dad4e.  call temp:= `equals`(v0, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dad54.  v0:= temp;
  #L3dad56.  if v0 == 0 then goto L3dadc0;
  #L3dad5a.  v0:= 3I;
  #L3dad5c.  goto L3dadc2;
  #L3dad5e.  call temp:= `equals`(v0, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dad64.  v0:= temp;
  #L3dad66.  if v0 == 0 then goto L3dadc0;
  #L3dad6a.  v0:= 8I;
  #L3dad6e.  goto L3dadc2;
  #L3dad70.  call temp:= `equals`(v0, v10) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dad76.  v0:= temp;
  #L3dad78.  if v0 == 0 then goto L3dadc0;
  #L3dad7c.  v0:= 7I;
  #L3dad7e.  goto L3dadc2;
  #L3dad80.  call temp:= `equals`(v0, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dad86.  v0:= temp;
  #L3dad88.  if v0 == 0 then goto L3dadc0;
  #L3dad8c.  v0:= 6I;
  #L3dad8e.  goto L3dadc2;
  #L3dad90.  call temp:= `equals`(v0, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dad96.  v0:= temp;
  #L3dad98.  if v0 == 0 then goto L3dadc0;
  #L3dad9c.  v0:= 2I;
  #L3dad9e.  goto L3dadc2;
  #L3dada0.  call temp:= `equals`(v0, v13) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dada6.  v0:= temp;
  #L3dada8.  if v0 == 0 then goto L3dadc0;
  #L3dadac.  v0:= 1I;
  #L3dadae.  goto L3dadc2;
  #L3dadb0.  call temp:= `equals`(v0, v14) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dadb6.  v0:= temp;
  #L3dadb8.  if v0 == 0 then goto L3dadc0;
  #L3dadbc.  v0:= 0I;
  #L3dadbe.  goto L3dadc2;
  #L3dadc0.  v0:= -1I;
  #L3dadc2.  if v0 == 0 then goto L3dadf0;
  #L3dadc6.  if v0 == v3 then goto L3dadf0;
  #L3dadca.  if v0 == v15 then goto L3dadf0;
  #L3dadce.  if v0 == v5 then goto L3dade6;
  #L3dadd2.  v2:= 4I;
  #L3dadd4.  if v0 == v2 then goto L3dade6;
  #L3dadd8.  v2:= 5I;
  #L3dadda.  if v0 == v2 then goto L3dade6;
  #L3dadde.  call temp:= `i`(v1, v3) @signature `Lg3/b$b;.i:(I)Lg3/b$b;` @kind virtual;
  #L3dade4.  goto L3dadf6;
  #L3dade6.  v0:= 0I;
  #L3dade8.  call temp:= `i`(v1, v0) @signature `Lg3/b$b;.i:(I)Lg3/b$b;` @kind virtual;
  #L3dadee.  goto L3dadf6;
  #L3dadf0.  call temp:= `i`(v1, v15) @signature `Lg3/b$b;.i:(I)Lg3/b$b;` @kind virtual;
  #L3dadf6.  call temp:= `d`(v1) @signature `Lg3/b$b;.d:()I` @kind virtual;
  #L3dadfc.  v0:= temp;
  #L3dadfe.  call temp:= `D`(v0) @signature `Lm3/a;.D:(I)F` @kind static;
  #L3dae04.  v0:= temp;
  #L3dae06.  call temp:= `k`(v1, v0) @signature `Lg3/b$b;.k:(F)Lg3/b$b;` @kind virtual;
  #L3dae0c.  v0:= temp @kind object;
  #L3dae0e.  call temp:= `c`(v1) @signature `Lg3/b$b;.c:()I` @kind virtual;
  #L3dae14.  v1:= temp;
  #L3dae16.  call temp:= `D`(v1) @signature `Lm3/a;.D:(I)F` @kind static;
  #L3dae1c.  v1:= temp;
  #L3dae1e.  v2:= 0I;
  #L3dae20.  call temp:= `h`(v0, v1, v2) @signature `Lg3/b$b;.h:(FI)Lg3/b$b;` @kind virtual;
  #L3dae26.  v0:= temp @kind object;
  #L3dae28.  call temp:= `a`(v0) @signature `Lg3/b$b;.a:()Lg3/b;` @kind virtual;
  #L3dae2e.  v0:= temp @kind object;
  #L3dae30.  return v0 @kind object;
  #L3dae32.  
  #L3dae34.  switch v2
                  | -685620710 => goto L3dacda
                  | -685620679 => goto L3dacca
                  | -685620648 => goto L3dacba
                  | -685620617 => goto L3dacaa
                  | -685620586 => goto L3dac9a
                  | -685620555 => goto L3dac8a
                  | -685620524 => goto L3dac7a
                  | -685620493 => goto L3dac68
                  | -685620462 => goto L3dac58
                  | else => goto L3dac56;
  #L3dae80.  switch v2
                  | -685620710 => goto L3dadb0
                  | -685620679 => goto L3dada0
                  | -685620648 => goto L3dad90
                  | -685620617 => goto L3dad80
                  | -685620586 => goto L3dad70
                  | -685620555 => goto L3dad5e
                  | -685620524 => goto L3dad4e
                  | -685620493 => goto L3dad3e
                  | -685620462 => goto L3dad2e
                  | else => goto L3dad2c;
}
procedure `float` `D`(`int` v1 ) @signature `Lm3/a;.D:(I)F` @AccessFlag STATIC {
    temp;
    v0;

  #L3dabb0.  if v1 == 0 then goto L3dabda;
  #L3dabb4.  v0:= 1I;
  #L3dabb6.  if v1 == v0 then goto L3dabd4;
  #L3dabba.  v0:= 2I;
  #L3dabbc.  if v1 != v0 then goto L3dabc8;
  #L3dabc0.  v1:= 1064011039I;
  #L3dabc6.  return v1;
  #L3dabc8.  v1:= new `java.lang.IllegalArgumentException`;
  #L3dabcc.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3dabd2.  throw v1;
  #L3dabd4.  v1:= 0.5F;
  #L3dabd8.  return v1;
  #L3dabda.  v1:= 1034147594I;
  #L3dabe0.  return v1;
}
procedure `long` `E`(`java.util.regex.Matcher` v9 @kind object, `int` v10 ) @signature `Lm3/a;.E:(Ljava/util/regex/Matcher;I)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3db134.  v0:= v10 + 1;
  #L3db138.  call temp:= `group`(v9, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3db13e.  v0:= temp @kind object;
  #L3db140.  v1:= 60L;
  #L3db144.  v3:= 1000L;
  #L3db148.  if v0 == 0 then goto L3db162;
  #L3db14c.  call temp:= `parseLong`(v0) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3db152.  v5:= temp @kind wide;
  #L3db154.  v5:= v5 * v1 @kind long;
  #L3db158.  v5:= v5 * v1 @kind long;
  #L3db15c.  v5:= v5 * v3 @kind long;
  #L3db160.  goto L3db166;
  #L3db162.  v5:= 0L;
  #L3db166.  v0:= v10 + 2;
  #L3db16a.  call temp:= `group`(v9, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3db170.  v0:= temp @kind object;
  #L3db172.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3db178.  v0:= temp @kind object;
  #L3db17a.  v0:= (`java.lang.String`) v0 @kind object;
  #L3db17e.  call temp:= `parseLong`(v0) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3db184.  v7:= temp @kind wide;
  #L3db186.  v7:= v7 * v1 @kind long;
  #L3db18a.  v7:= v7 * v3 @kind long;
  #L3db18e.  v5:= v5 + v7 @kind long;
  #L3db190.  v0:= v10 + 3;
  #L3db194.  call temp:= `group`(v9, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3db19a.  v0:= temp @kind object;
  #L3db19c.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3db1a2.  v0:= temp @kind object;
  #L3db1a4.  v0:= (`java.lang.String`) v0 @kind object;
  #L3db1a8.  call temp:= `parseLong`(v0) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3db1ae.  v0:= temp @kind wide;
  #L3db1b0.  v0:= v0 * v3 @kind long;
  #L3db1b4.  v5:= v5 + v0 @kind long;
  #L3db1b6.  v10:= v10 + 4;
  #L3db1ba.  call temp:= `group`(v9, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3db1c0.  v9:= temp @kind object;
  #L3db1c2.  if v9 == 0 then goto L3db1d0;
  #L3db1c6.  call temp:= `parseLong`(v9) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3db1cc.  v9:= temp @kind wide;
  #L3db1ce.  v5:= v5 + v9 @kind long;
  #L3db1d0.  v5:= v5 * v3 @kind long;
  #L3db1d4.  return v5 @kind wide;
}
procedure `java.lang.String` `F`(`m3.a` v6 @kind this, `java.lang.String` v7 @kind object, `java.util.ArrayList` v8 @kind object) @signature `Lm3/a;.F:(Ljava/lang/String;Ljava/util/ArrayList;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3db0bc.  call temp:= `trim`(v7) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3db0c2.  v7:= temp @kind object;
  #L3db0c4.  v0:= new `java.lang.StringBuilder`;
  #L3db0c8.  call `<init>`(v0, v7) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3db0ce.  v1:= `@@m3.a.q` @type ^`java.util.regex.Pattern` @kind object;
  #L3db0d2.  call temp:= `matcher`(v1, v7) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3db0d8.  v7:= temp @kind object;
  #L3db0da.  v1:= 0I;
  #L3db0dc.  call temp:= `find`(v7) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L3db0e2.  v2:= temp;
  #L3db0e4.  if v2 == 0 then goto L3db11a;
  #L3db0e8.  call temp:= `group`(v7) @signature `Ljava/util/regex/Matcher;.group:()Ljava/lang/String;` @kind virtual;
  #L3db0ee.  v2:= temp @kind object;
  #L3db0f0.  call temp:= `add`(v8, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3db0f6.  call temp:= `start`(v7) @signature `Ljava/util/regex/Matcher;.start:()I` @kind virtual;
  #L3db0fc.  v3:= temp;
  #L3db0fe.  v3:= v3 - v1 @kind int;
  #L3db100.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3db106.  v2:= temp;
  #L3db108.  v4:= v3 + v2 @kind int;
  #L3db10c.  v5:= "" @kind object;
  #L3db110.  call temp:= `replace`(v0, v3, v4, v5) @signature `Ljava/lang/StringBuilder;.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3db116.  v1:= v1 + v2 @kind int;
  #L3db118.  goto L3db0dc;
  #L3db11a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3db120.  v7:= temp @kind object;
  #L3db122.  return v7 @kind object;
}
procedure `g3.g` `A`(`m3.a` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `boolean` v9 ) @signature `Lm3/a;.A:([BIZ)Lg3/g;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3daedc.  v9:= "SubripDecoder" @kind object;
  #L3daee0.  v0:= new `java.util.ArrayList`;
  #L3daee4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3daeea.  v1:= new `s3.r`;
  #L3daeee.  call `<init>`(v1) @signature `Ls3/r;.<init>:()V` @kind direct;
  #L3daef4.  v2:= new `s3.z`;
  #L3daef8.  call `<init>`(v2, v7, v8) @signature `Ls3/z;.<init>:([BI)V` @kind direct;
  #L3daefe.  call temp:= `o`(v2) @signature `Ls3/z;.o:()Ljava/lang/String;` @kind virtual;
  #L3daf04.  v7:= temp @kind object;
  #L3daf06.  v8:= 0I;
  #L3daf08.  if v7 == 0 then goto L3db078;
  #L3daf0c.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3daf12.  v3:= temp;
  #L3daf14.  if v3 != 0 then goto L3daf1a;
  #L3daf18.  goto L3daefe;
  #L3daf1a.  call temp:= `parseInt`(v7) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3daf20.  call temp:= `o`(v2) @signature `Ls3/z;.o:()Ljava/lang/String;` @kind virtual;
  #L3daf26.  v7:= temp @kind object;
  #L3daf28.  if v7 != 0 then goto L3daf3a;
  #L3daf2c.  v7:= "Unexpected end" @kind object;
  #L3daf30.  call `h`(v9, v7) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3daf36.  goto L3db078;
  #L3daf3a.  v3:= `@@m3.a.p` @type ^`java.util.regex.Pattern` @kind object;
  #L3daf3e.  call temp:= `matcher`(v3, v7) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3daf44.  v3:= temp @kind object;
  #L3daf46.  call temp:= `matches`(v3) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L3daf4c.  v4:= temp;
  #L3daf4e.  if v4 == 0 then goto L3db03c;
  #L3daf52.  v7:= 1I;
  #L3daf54.  call temp:= `E`(v3, v7) @signature `Lm3/a;.E:(Ljava/util/regex/Matcher;I)J` @kind static;
  #L3daf5a.  v4:= temp @kind wide;
  #L3daf5c.  call `a`(v1, v4) @signature `Ls3/r;.a:(J)V` @kind virtual;
  #L3daf62.  v7:= 6I;
  #L3daf64.  call temp:= `E`(v3, v7) @signature `Lm3/a;.E:(Ljava/util/regex/Matcher;I)J` @kind static;
  #L3daf6a.  v3:= temp @kind wide;
  #L3daf6c.  call `a`(v1, v3) @signature `Ls3/r;.a:(J)V` @kind virtual;
  #L3daf72.  v7:= v6.`m3.a.n` @type ^`java.lang.StringBuilder` @kind object;
  #L3daf76.  call `setLength`(v7, v8) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L3daf7c.  v7:= v6.`m3.a.o` @type ^`java.util.ArrayList` @kind object;
  #L3daf80.  call `clear`(v7) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L3daf86.  call temp:= `o`(v2) @signature `Ls3/z;.o:()Ljava/lang/String;` @kind virtual;
  #L3daf8c.  v7:= temp @kind object;
  #L3daf8e.  call temp:= `isEmpty`(v7) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L3daf94.  v3:= temp;
  #L3daf96.  if v3 != 0 then goto L3dafd0;
  #L3daf9a.  v3:= v6.`m3.a.n` @type ^`java.lang.StringBuilder` @kind object;
  #L3daf9e.  call temp:= `length`(v3) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3dafa4.  v3:= temp;
  #L3dafa6.  if v3 <= 0 then goto L3dafb8;
  #L3dafaa.  v3:= v6.`m3.a.n` @type ^`java.lang.StringBuilder` @kind object;
  #L3dafae.  v4:= "<br>" @kind object;
  #L3dafb2.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dafb8.  v3:= v6.`m3.a.n` @type ^`java.lang.StringBuilder` @kind object;
  #L3dafbc.  v4:= v6.`m3.a.o` @type ^`java.util.ArrayList` @kind object;
  #L3dafc0.  call temp:= `F`(v6, v7, v4) @signature `Lm3/a;.F:(Ljava/lang/String;Ljava/util/ArrayList;)Ljava/lang/String;` @kind direct;
  #L3dafc6.  v7:= temp @kind object;
  #L3dafc8.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dafce.  goto L3daf86;
  #L3dafd0.  v7:= v6.`m3.a.n` @type ^`java.lang.StringBuilder` @kind object;
  #L3dafd4.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dafda.  v7:= temp @kind object;
  #L3dafdc.  call temp:= `fromHtml`(v7) @signature `Landroid/text/Html;.fromHtml:(Ljava/lang/String;)Landroid/text/Spanned;` @kind static;
  #L3dafe2.  v7:= temp @kind object;
  #L3dafe4.  v3:= 0I;
  #L3dafe6.  v4:= v6.`m3.a.o` @type ^`java.util.ArrayList` @kind object;
  #L3dafea.  call temp:= `size`(v4) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L3daff0.  v4:= temp;
  #L3daff2.  if v8 >= v4 then goto L3db020;
  #L3daff6.  v4:= v6.`m3.a.o` @type ^`java.util.ArrayList` @kind object;
  #L3daffa.  call temp:= `get`(v4, v8) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3db000.  v4:= temp @kind object;
  #L3db002.  v4:= (`java.lang.String`) v4 @kind object;
  #L3db006.  v5:= "\\{\\\\an[1-9]\\}" @kind object;
  #L3db00a.  call temp:= `matches`(v4, v5) @signature `Ljava/lang/String;.matches:(Ljava/lang/String;)Z` @kind virtual;
  #L3db010.  v5:= temp;
  #L3db012.  if v5 == 0 then goto L3db01a;
  #L3db016.  v3:= v4 @kind object;
  #L3db018.  goto L3db020;
  #L3db01a.  v8:= v8 + 1;
  #L3db01e.  goto L3dafe6;
  #L3db020.  call temp:= `C`(v6, v7, v3) @signature `Lm3/a;.C:(Landroid/text/Spanned;Ljava/lang/String;)Lg3/b;` @kind direct;
  #L3db026.  v7:= temp @kind object;
  #L3db028.  call temp:= `add`(v0, v7) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3db02e.  v7:= `@@g3.b.F` @type ^`g3.b` @kind object;
  #L3db032.  call temp:= `add`(v0, v7) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3db038.  goto L3daefe;
  #L3db03c.  v8:= new `java.lang.StringBuilder`;
  #L3db040.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3db046.  v3:= "Skipping invalid timing: " @kind object;
  #L3db04a.  goto L3db05a;
  #L3db04c.  v8:= new `java.lang.StringBuilder`;
  #L3db050.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3db056.  v3:= "Skipping invalid index: " @kind object;
  #L3db05a.  call temp:= `append`(v8, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3db060.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3db066.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3db06c.  v7:= temp @kind object;
  #L3db06e.  call `h`(v9, v7) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3db074.  goto L3daefe;
  #L3db078.  v7:= new `g3.b`[v8];
  #L3db07c.  call temp:= `toArray`(v0, v7) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L3db082.  v7:= temp @kind object;
  #L3db084.  v7:= (`g3.b`[]) v7 @kind object;
  #L3db088.  call temp:= `d`(v1) @signature `Ls3/r;.d:()[J` @kind virtual;
  #L3db08e.  v8:= temp @kind object;
  #L3db090.  v9:= new `m3.b`;
  #L3db094.  call `<init>`(v9, v7, v8) @signature `Lm3/b;.<init>:([Lg3/b;[J)V` @kind direct;
  #L3db09a.  return v9 @kind object;
  catch `java.lang.NumberFormatException` @[L3daf1a..L3daf20] goto L3db04c;
}
