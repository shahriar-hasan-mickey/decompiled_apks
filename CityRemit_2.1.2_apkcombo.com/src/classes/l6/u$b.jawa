record `l6.u$b` @kind class @AccessFlag FINAL extends `l6.a0$e$e$a` @kind class {
  `java.lang.Integer` `l6.u$b.a` @AccessFlag PRIVATE;
  `java.lang.String` `l6.u$b.b` @AccessFlag PRIVATE;
  `java.lang.String` `l6.u$b.c` @AccessFlag PRIVATE;
  `java.lang.Boolean` `l6.u$b.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`l6.u$b` v0 @kind this) @signature `Ll6/u$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3cb590.  call `<init>`(v0) @signature `Ll6/a0$e$e$a;.<init>:()V` @kind direct;
  #L3cb596.  return @kind void;
}
procedure `l6.a0$e$e` `a`(`l6.u$b` v8 @kind this) @signature `Ll6/u$b;.a:()Ll6/a0$e$e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3cb3e8.  v0:= v8.`l6.u$b.a` @type ^`java.lang.Integer` @kind object;
  #L3cb3ec.  v1:= "" @kind object;
  #L3cb3f0.  if v0 != 0 then goto L3cb416;
  #L3cb3f4.  v0:= new `java.lang.StringBuilder`;
  #L3cb3f8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cb3fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb404.  v1:= " platform" @kind object;
  #L3cb408.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb40e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cb414.  v1:= temp @kind object;
  #L3cb416.  v0:= v8.`l6.u$b.b` @type ^`java.lang.String` @kind object;
  #L3cb41a.  if v0 != 0 then goto L3cb440;
  #L3cb41e.  v0:= new `java.lang.StringBuilder`;
  #L3cb422.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cb428.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb42e.  v1:= " version" @kind object;
  #L3cb432.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb438.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cb43e.  v1:= temp @kind object;
  #L3cb440.  v0:= v8.`l6.u$b.c` @type ^`java.lang.String` @kind object;
  #L3cb444.  if v0 != 0 then goto L3cb46a;
  #L3cb448.  v0:= new `java.lang.StringBuilder`;
  #L3cb44c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cb452.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb458.  v1:= " buildVersion" @kind object;
  #L3cb45c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb462.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cb468.  v1:= temp @kind object;
  #L3cb46a.  v0:= v8.`l6.u$b.d` @type ^`java.lang.Boolean` @kind object;
  #L3cb46e.  if v0 != 0 then goto L3cb494;
  #L3cb472.  v0:= new `java.lang.StringBuilder`;
  #L3cb476.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cb47c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb482.  v1:= " jailbroken" @kind object;
  #L3cb486.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb48c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cb492.  v1:= temp @kind object;
  #L3cb494.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3cb49a.  v0:= temp;
  #L3cb49c.  if v0 == 0 then goto L3cb4d0;
  #L3cb4a0.  v0:= new `l6.u`;
  #L3cb4a4.  v1:= v8.`l6.u$b.a` @type ^`java.lang.Integer` @kind object;
  #L3cb4a8.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3cb4ae.  v3:= temp;
  #L3cb4b0.  v4:= v8.`l6.u$b.b` @type ^`java.lang.String` @kind object;
  #L3cb4b4.  v5:= v8.`l6.u$b.c` @type ^`java.lang.String` @kind object;
  #L3cb4b8.  v1:= v8.`l6.u$b.d` @type ^`java.lang.Boolean` @kind object;
  #L3cb4bc.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3cb4c2.  v6:= temp;
  #L3cb4c4.  v7:= 0I;
  #L3cb4c6.  v2:= v0 @kind object;
  #L3cb4c8.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Ll6/u;.<init>:(ILjava/lang/String;Ljava/lang/String;ZLl6/u$a;)V` @kind direct;
  #L3cb4ce.  return v0 @kind object;
  #L3cb4d0.  v0:= new `java.lang.IllegalStateException`;
  #L3cb4d4.  v2:= new `java.lang.StringBuilder`;
  #L3cb4d8.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cb4de.  v3:= "Missing required properties:" @kind object;
  #L3cb4e2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb4e8.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb4ee.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cb4f4.  v1:= temp @kind object;
  #L3cb4f6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cb4fc.  throw v0;
}
procedure `l6.a0$e$e$a` `b`(`l6.u$b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Ll6/u$b;.b:(Ljava/lang/String;)Ll6/a0$e$e$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cb510.  v0:= "Null buildVersion" @kind object;
  #L3cb514.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cb51a.  v1.`l6.u$b.c` @type ^`java.lang.String` := v2 @kind object;
  #L3cb51e.  return v1 @kind object;
}
procedure `l6.a0$e$e$a` `c`(`l6.u$b` v0 @kind this, `boolean` v1 ) @signature `Ll6/u$b;.c:(Z)Ll6/a0$e$e$a;` @AccessFlag PUBLIC {
    temp;

  #L3cb530.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3cb536.  v1:= temp @kind object;
  #L3cb538.  v0.`l6.u$b.d` @type ^`java.lang.Boolean` := v1 @kind object;
  #L3cb53c.  return v0 @kind object;
}
procedure `l6.a0$e$e$a` `d`(`l6.u$b` v0 @kind this, `int` v1 ) @signature `Ll6/u$b;.d:(I)Ll6/a0$e$e$a;` @AccessFlag PUBLIC {
    temp;

  #L3cb550.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3cb556.  v1:= temp @kind object;
  #L3cb558.  v0.`l6.u$b.a` @type ^`java.lang.Integer` := v1 @kind object;
  #L3cb55c.  return v0 @kind object;
}
procedure `l6.a0$e$e$a` `e`(`l6.u$b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Ll6/u$b;.e:(Ljava/lang/String;)Ll6/a0$e$e$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cb570.  v0:= "Null version" @kind object;
  #L3cb574.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cb57a.  v1.`l6.u$b.b` @type ^`java.lang.String` := v2 @kind object;
  #L3cb57e.  return v1 @kind object;
}
