record `l6.q` @kind class @AccessFlag FINAL extends `l6.a0$e$d$a$b$e` @kind class {
  `java.lang.String` `l6.q.a` @AccessFlag PRIVATE_FINAL;
  `int` `l6.q.b` @AccessFlag PRIVATE_FINAL;
  `l6.b0` `l6.q.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l6.q` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `l6.b0` v3 @kind object) @signature `Ll6/q;.<init>:(Ljava/lang/String;ILl6/b0;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3ca4ec.  call `<init>`(v0) @signature `Ll6/a0$e$d$a$b$e;.<init>:()V` @kind direct;
  #L3ca4f2.  v0.`l6.q.a` @type ^`java.lang.String` := v1 @kind object;
  #L3ca4f6.  v0.`l6.q.b` @type ^`int` := v2;
  #L3ca4fa.  v0.`l6.q.c` @type ^`l6.b0` := v3 @kind object;
  #L3ca4fe.  return @kind void;
}
procedure `void` `<init>`(`l6.q` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `l6.b0` v3 @kind object, `l6.q$a` v4 @kind object) @signature `Ll6/q;.<init>:(Ljava/lang/String;ILl6/b0;Ll6/q$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3ca510.  call `<init>`(v0, v1, v2, v3) @signature `Ll6/q;.<init>:(Ljava/lang/String;ILl6/b0;)V` @kind direct;
  #L3ca516.  return @kind void;
}
procedure `l6.b0` `b`(`l6.q` v1 @kind this) @signature `Ll6/q;.b:()Ll6/b0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ca4d4.  v0:= v1.`l6.q.c` @type ^`l6.b0` @kind object;
  #L3ca4d8.  return v0 @kind object;
}
procedure `int` `c`(`l6.q` v1 @kind this) @signature `Ll6/q;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ca3f4.  v0:= v1.`l6.q.b` @type ^`int`;
  #L3ca3f8.  return v0;
}
procedure `java.lang.String` `d`(`l6.q` v1 @kind this) @signature `Ll6/q;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ca450.  v0:= v1.`l6.q.a` @type ^`java.lang.String` @kind object;
  #L3ca454.  return v0 @kind object;
}
procedure `boolean` `equals`(`l6.q` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ll6/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ca384.  v0:= 1I;
  #L3ca386.  if v5 != v4 then goto L3ca38c;
  #L3ca38a.  return v0;
  #L3ca38c.  v1:= instanceof @variable v5 @type ^`l6.a0$e$d$a$b$e` @kind boolean;
  #L3ca390.  v2:= 0I;
  #L3ca392.  if v1 == 0 then goto L3ca3e0;
  #L3ca396.  v5:= (`l6.a0$e$d$a$b$e`) v5 @kind object;
  #L3ca39a.  v1:= v4.`l6.q.a` @type ^`java.lang.String` @kind object;
  #L3ca39e.  call temp:= `d`(v5) @signature `Ll6/a0$e$d$a$b$e;.d:()Ljava/lang/String;` @kind virtual;
  #L3ca3a4.  v3:= temp @kind object;
  #L3ca3a6.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ca3ac.  v1:= temp;
  #L3ca3ae.  if v1 == 0 then goto L3ca3dc;
  #L3ca3b2.  v1:= v4.`l6.q.b` @type ^`int`;
  #L3ca3b6.  call temp:= `c`(v5) @signature `Ll6/a0$e$d$a$b$e;.c:()I` @kind virtual;
  #L3ca3bc.  v3:= temp;
  #L3ca3be.  if v1 != v3 then goto L3ca3dc;
  #L3ca3c2.  v1:= v4.`l6.q.c` @type ^`l6.b0` @kind object;
  #L3ca3c6.  call temp:= `b`(v5) @signature `Ll6/a0$e$d$a$b$e;.b:()Ll6/b0;` @kind virtual;
  #L3ca3cc.  v5:= temp @kind object;
  #L3ca3ce.  call temp:= `equals`(v1, v5) @signature `Ll6/b0;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ca3d4.  v5:= temp;
  #L3ca3d6.  if v5 == 0 then goto L3ca3dc;
  #L3ca3da.  goto L3ca3de;
  #L3ca3dc.  v0:= 0I;
  #L3ca3de.  return v0;
  #L3ca3e0.  return v2;
}
procedure `int` `hashCode`(`l6.q` v3 @kind this) @signature `Ll6/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ca40c.  v0:= v3.`l6.q.a` @type ^`java.lang.String` @kind object;
  #L3ca410.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3ca416.  v0:= temp;
  #L3ca418.  v1:= 1000003I;
  #L3ca41e.  v0:= v0 ^~ v1 @kind int;
  #L3ca420.  v0:= v0 * v1 @kind int;
  #L3ca424.  v2:= v3.`l6.q.b` @type ^`int`;
  #L3ca428.  v0:= v0 ^~ v2 @kind int;
  #L3ca42a.  v0:= v0 * v1 @kind int;
  #L3ca42e.  v1:= v3.`l6.q.c` @type ^`l6.b0` @kind object;
  #L3ca432.  call temp:= `hashCode`(v1) @signature `Ll6/b0;.hashCode:()I` @kind virtual;
  #L3ca438.  v1:= temp;
  #L3ca43a.  v0:= v0 ^~ v1 @kind int;
  #L3ca43c.  return v0;
}
procedure `java.lang.String` `toString`(`l6.q` v2 @kind this) @signature `Ll6/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ca468.  v0:= new `java.lang.StringBuilder`;
  #L3ca46c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ca472.  v1:= "Thread{name=" @kind object;
  #L3ca476.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca47c.  v1:= v2.`l6.q.a` @type ^`java.lang.String` @kind object;
  #L3ca480.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca486.  v1:= ", importance=" @kind object;
  #L3ca48a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca490.  v1:= v2.`l6.q.b` @type ^`int`;
  #L3ca494.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca49a.  v1:= ", frames=" @kind object;
  #L3ca49e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca4a4.  v1:= v2.`l6.q.c` @type ^`l6.b0` @kind object;
  #L3ca4a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca4ae.  v1:= "}" @kind object;
  #L3ca4b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca4b8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ca4be.  v0:= temp @kind object;
  #L3ca4c0.  return v0 @kind object;
}
