record `l6.c` @kind class @AccessFlag FINAL extends `l6.a0$a` @kind class {
  `int` `l6.c.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.c.b` @AccessFlag PRIVATE_FINAL;
  `int` `l6.c.c` @AccessFlag PRIVATE_FINAL;
  `int` `l6.c.d` @AccessFlag PRIVATE_FINAL;
  `long` `l6.c.e` @AccessFlag PRIVATE_FINAL;
  `long` `l6.c.f` @AccessFlag PRIVATE_FINAL;
  `long` `l6.c.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.c.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l6.c` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `long` v5 , `long` v7 , `long` v9 , `java.lang.String` v11 @kind object) @signature `Ll6/c;.<init>:(ILjava/lang/String;IIJJJLjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3c752c.  call `<init>`(v0) @signature `Ll6/a0$a;.<init>:()V` @kind direct;
  #L3c7532.  v0.`l6.c.a` @type ^`int` := v1;
  #L3c7536.  v0.`l6.c.b` @type ^`java.lang.String` := v2 @kind object;
  #L3c753a.  v0.`l6.c.c` @type ^`int` := v3;
  #L3c753e.  v0.`l6.c.d` @type ^`int` := v4;
  #L3c7542.  v0.`l6.c.e` @type ^`long` := v5 @kind wide;
  #L3c7546.  v0.`l6.c.f` @type ^`long` := v7 @kind wide;
  #L3c754a.  v0.`l6.c.g` @type ^`long` := v9 @kind wide;
  #L3c754e.  v0.`l6.c.h` @type ^`java.lang.String` := v11 @kind object;
  #L3c7552.  return @kind void;
}
procedure `void` `<init>`(`l6.c` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `long` v5 , `long` v7 , `long` v9 , `java.lang.String` v11 @kind object, `l6.c$a` v12 @kind object) @signature `Ll6/c;.<init>:(ILjava/lang/String;IIJJJLjava/lang/String;Ll6/c$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3c7564.  call `<init>`(v0, v1, v2, v3, v4, v5, v7, v9, v11) @signature `Ll6/c;.<init>:(ILjava/lang/String;IIJJJLjava/lang/String;)V` @kind direct;
  #L3c756a.  return @kind void;
}
procedure `int` `b`(`l6.c` v1 @kind this) @signature `Ll6/c;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c7304.  v0:= v1.`l6.c.d` @type ^`int`;
  #L3c7308.  return v0;
}
procedure `int` `c`(`l6.c` v1 @kind this) @signature `Ll6/c;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c731c.  v0:= v1.`l6.c.a` @type ^`int`;
  #L3c7320.  return v0;
}
procedure `java.lang.String` `d`(`l6.c` v1 @kind this) @signature `Ll6/c;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c73e4.  v0:= v1.`l6.c.b` @type ^`java.lang.String` @kind object;
  #L3c73e8.  return v0 @kind object;
}
procedure `long` `e`(`l6.c` v2 @kind this) @signature `Ll6/c;.e:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c74e4.  v0:= v2.`l6.c.e` @type ^`long` @kind wide;
  #L3c74e8.  return v0 @kind wide;
}
procedure `boolean` `equals`(`l6.c` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Ll6/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c7230.  v0:= 1I;
  #L3c7232.  if v8 != v7 then goto L3c7238;
  #L3c7236.  return v0;
  #L3c7238.  v1:= instanceof @variable v8 @type ^`l6.a0$a` @kind boolean;
  #L3c723c.  v2:= 0I;
  #L3c723e.  if v1 == 0 then goto L3c72f2;
  #L3c7242.  v8:= (`l6.a0$a`) v8 @kind object;
  #L3c7246.  v1:= v7.`l6.c.a` @type ^`int`;
  #L3c724a.  call temp:= `c`(v8) @signature `Ll6/a0$a;.c:()I` @kind virtual;
  #L3c7250.  v3:= temp;
  #L3c7252.  if v1 != v3 then goto L3c72ee;
  #L3c7256.  v1:= v7.`l6.c.b` @type ^`java.lang.String` @kind object;
  #L3c725a.  call temp:= `d`(v8) @signature `Ll6/a0$a;.d:()Ljava/lang/String;` @kind virtual;
  #L3c7260.  v3:= temp @kind object;
  #L3c7262.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c7268.  v1:= temp;
  #L3c726a.  if v1 == 0 then goto L3c72ee;
  #L3c726e.  v1:= v7.`l6.c.c` @type ^`int`;
  #L3c7272.  call temp:= `f`(v8) @signature `Ll6/a0$a;.f:()I` @kind virtual;
  #L3c7278.  v3:= temp;
  #L3c727a.  if v1 != v3 then goto L3c72ee;
  #L3c727e.  v1:= v7.`l6.c.d` @type ^`int`;
  #L3c7282.  call temp:= `b`(v8) @signature `Ll6/a0$a;.b:()I` @kind virtual;
  #L3c7288.  v3:= temp;
  #L3c728a.  if v1 != v3 then goto L3c72ee;
  #L3c728e.  v3:= v7.`l6.c.e` @type ^`long` @kind wide;
  #L3c7292.  call temp:= `e`(v8) @signature `Ll6/a0$a;.e:()J` @kind virtual;
  #L3c7298.  v5:= temp @kind wide;
  #L3c729a.  v1:= lcmp(v3, v5);
  #L3c729e.  if v1 != 0 then goto L3c72ee;
  #L3c72a2.  v3:= v7.`l6.c.f` @type ^`long` @kind wide;
  #L3c72a6.  call temp:= `g`(v8) @signature `Ll6/a0$a;.g:()J` @kind virtual;
  #L3c72ac.  v5:= temp @kind wide;
  #L3c72ae.  v1:= lcmp(v3, v5);
  #L3c72b2.  if v1 != 0 then goto L3c72ee;
  #L3c72b6.  v3:= v7.`l6.c.g` @type ^`long` @kind wide;
  #L3c72ba.  call temp:= `h`(v8) @signature `Ll6/a0$a;.h:()J` @kind virtual;
  #L3c72c0.  v5:= temp @kind wide;
  #L3c72c2.  v1:= lcmp(v3, v5);
  #L3c72c6.  if v1 != 0 then goto L3c72ee;
  #L3c72ca.  v1:= v7.`l6.c.h` @type ^`java.lang.String` @kind object;
  #L3c72ce.  call temp:= `i`(v8) @signature `Ll6/a0$a;.i:()Ljava/lang/String;` @kind virtual;
  #L3c72d4.  v8:= temp @kind object;
  #L3c72d6.  if v1 != 0 then goto L3c72e0;
  #L3c72da.  if v8 != 0 then goto L3c72ee;
  #L3c72de.  goto L3c72f0;
  #L3c72e0.  call temp:= `equals`(v1, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c72e6.  v8:= temp;
  #L3c72e8.  if v8 == 0 then goto L3c72ee;
  #L3c72ec.  goto L3c72f0;
  #L3c72ee.  v0:= 0I;
  #L3c72f0.  return v0;
  #L3c72f2.  return v2;
}
procedure `int` `f`(`l6.c` v1 @kind this) @signature `Ll6/c;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c7334.  v0:= v1.`l6.c.c` @type ^`int`;
  #L3c7338.  return v0;
}
procedure `long` `g`(`l6.c` v2 @kind this) @signature `Ll6/c;.g:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c74fc.  v0:= v2.`l6.c.f` @type ^`long` @kind wide;
  #L3c7500.  return v0 @kind wide;
}
procedure `long` `h`(`l6.c` v2 @kind this) @signature `Ll6/c;.h:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c7514.  v0:= v2.`l6.c.g` @type ^`long` @kind wide;
  #L3c7518.  return v0 @kind wide;
}
procedure `int` `hashCode`(`l6.c` v7 @kind this) @signature `Ll6/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c734c.  v0:= v7.`l6.c.a` @type ^`int`;
  #L3c7350.  v1:= 1000003I;
  #L3c7356.  v0:= v0 ^~ v1 @kind int;
  #L3c7358.  v0:= v0 * v1 @kind int;
  #L3c735c.  v2:= v7.`l6.c.b` @type ^`java.lang.String` @kind object;
  #L3c7360.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3c7366.  v2:= temp;
  #L3c7368.  v0:= v0 ^~ v2 @kind int;
  #L3c736a.  v0:= v0 * v1 @kind int;
  #L3c736e.  v2:= v7.`l6.c.c` @type ^`int`;
  #L3c7372.  v0:= v0 ^~ v2 @kind int;
  #L3c7374.  v0:= v0 * v1 @kind int;
  #L3c7378.  v2:= v7.`l6.c.d` @type ^`int`;
  #L3c737c.  v0:= v0 ^~ v2 @kind int;
  #L3c737e.  v0:= v0 * v1 @kind int;
  #L3c7382.  v2:= v7.`l6.c.e` @type ^`long` @kind wide;
  #L3c7386.  v4:= 32I;
  #L3c738a.  v5:= v2 ^>> v4 @kind long;
  #L3c738e.  v2:= v2 ^~ v5 @kind long;
  #L3c7390.  v3:= (`int`) v2 @kind l2i;
  #L3c7392.  v0:= v0 ^~ v3 @kind int;
  #L3c7394.  v0:= v0 * v1 @kind int;
  #L3c7398.  v2:= v7.`l6.c.f` @type ^`long` @kind wide;
  #L3c739c.  v5:= v2 ^>> v4 @kind long;
  #L3c73a0.  v2:= v2 ^~ v5 @kind long;
  #L3c73a2.  v3:= (`int`) v2 @kind l2i;
  #L3c73a4.  v0:= v0 ^~ v3 @kind int;
  #L3c73a6.  v0:= v0 * v1 @kind int;
  #L3c73aa.  v2:= v7.`l6.c.g` @type ^`long` @kind wide;
  #L3c73ae.  v4:= v2 ^>> v4 @kind long;
  #L3c73b2.  v2:= v2 ^~ v4 @kind long;
  #L3c73b4.  v3:= (`int`) v2 @kind l2i;
  #L3c73b6.  v0:= v0 ^~ v3 @kind int;
  #L3c73b8.  v0:= v0 * v1 @kind int;
  #L3c73bc.  v1:= v7.`l6.c.h` @type ^`java.lang.String` @kind object;
  #L3c73c0.  if v1 != 0 then goto L3c73c8;
  #L3c73c4.  v1:= 0I;
  #L3c73c6.  goto L3c73d0;
  #L3c73c8.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3c73ce.  v1:= temp;
  #L3c73d0.  v0:= v0 ^~ v1 @kind int;
  #L3c73d2.  return v0;
}
procedure `java.lang.String` `i`(`l6.c` v1 @kind this) @signature `Ll6/c;.i:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c73fc.  v0:= v1.`l6.c.h` @type ^`java.lang.String` @kind object;
  #L3c7400.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`l6.c` v3 @kind this) @signature `Ll6/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3c7414.  v0:= new `java.lang.StringBuilder`;
  #L3c7418.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c741e.  v1:= "ApplicationExitInfo{pid=" @kind object;
  #L3c7422.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7428.  v1:= v3.`l6.c.a` @type ^`int`;
  #L3c742c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7432.  v1:= ", processName=" @kind object;
  #L3c7436.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c743c.  v1:= v3.`l6.c.b` @type ^`java.lang.String` @kind object;
  #L3c7440.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7446.  v1:= ", reasonCode=" @kind object;
  #L3c744a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7450.  v1:= v3.`l6.c.c` @type ^`int`;
  #L3c7454.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c745a.  v1:= ", importance=" @kind object;
  #L3c745e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7464.  v1:= v3.`l6.c.d` @type ^`int`;
  #L3c7468.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c746e.  v1:= ", pss=" @kind object;
  #L3c7472.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7478.  v1:= v3.`l6.c.e` @type ^`long` @kind wide;
  #L3c747c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7482.  v1:= ", rss=" @kind object;
  #L3c7486.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c748c.  v1:= v3.`l6.c.f` @type ^`long` @kind wide;
  #L3c7490.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7496.  v1:= ", timestamp=" @kind object;
  #L3c749a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c74a0.  v1:= v3.`l6.c.g` @type ^`long` @kind wide;
  #L3c74a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c74aa.  v1:= ", traceFile=" @kind object;
  #L3c74ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c74b4.  v1:= v3.`l6.c.h` @type ^`java.lang.String` @kind object;
  #L3c74b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c74be.  v1:= "}" @kind object;
  #L3c74c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c74c8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c74ce.  v0:= temp @kind object;
  #L3c74d0.  return v0 @kind object;
}
