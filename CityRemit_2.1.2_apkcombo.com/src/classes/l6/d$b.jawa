record `l6.d$b` @kind class @AccessFlag FINAL extends `l6.a0$c$a` @kind class {
  `java.lang.String` `l6.d$b.a` @AccessFlag PRIVATE;
  `java.lang.String` `l6.d$b.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`l6.d$b` v0 @kind this) @signature `Ll6/d$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3c7674.  call `<init>`(v0) @signature `Ll6/a0$c$a;.<init>:()V` @kind direct;
  #L3c767a.  return @kind void;
}
procedure `l6.a0$c` `a`(`l6.d$b` v4 @kind this) @signature `Ll6/d$b;.a:()Ll6/a0$c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c757c.  v0:= v4.`l6.d$b.a` @type ^`java.lang.String` @kind object;
  #L3c7580.  v1:= "" @kind object;
  #L3c7584.  if v0 != 0 then goto L3c75aa;
  #L3c7588.  v0:= new `java.lang.StringBuilder`;
  #L3c758c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c7592.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7598.  v1:= " key" @kind object;
  #L3c759c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c75a2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c75a8.  v1:= temp @kind object;
  #L3c75aa.  v0:= v4.`l6.d$b.b` @type ^`java.lang.String` @kind object;
  #L3c75ae.  if v0 != 0 then goto L3c75d4;
  #L3c75b2.  v0:= new `java.lang.StringBuilder`;
  #L3c75b6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c75bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c75c2.  v1:= " value" @kind object;
  #L3c75c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c75cc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c75d2.  v1:= temp @kind object;
  #L3c75d4.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3c75da.  v0:= temp;
  #L3c75dc.  if v0 == 0 then goto L3c75f6;
  #L3c75e0.  v0:= new `l6.d`;
  #L3c75e4.  v1:= v4.`l6.d$b.a` @type ^`java.lang.String` @kind object;
  #L3c75e8.  v2:= v4.`l6.d$b.b` @type ^`java.lang.String` @kind object;
  #L3c75ec.  v3:= 0I;
  #L3c75ee.  call `<init>`(v0, v1, v2, v3) @signature `Ll6/d;.<init>:(Ljava/lang/String;Ljava/lang/String;Ll6/d$a;)V` @kind direct;
  #L3c75f4.  return v0 @kind object;
  #L3c75f6.  v0:= new `java.lang.IllegalStateException`;
  #L3c75fa.  v2:= new `java.lang.StringBuilder`;
  #L3c75fe.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c7604.  v3:= "Missing required properties:" @kind object;
  #L3c7608.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c760e.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7614.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c761a.  v1:= temp @kind object;
  #L3c761c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c7622.  throw v0;
}
procedure `l6.a0$c$a` `b`(`l6.d$b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Ll6/d$b;.b:(Ljava/lang/String;)Ll6/a0$c$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c7634.  v0:= "Null key" @kind object;
  #L3c7638.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3c763e.  v1.`l6.d$b.a` @type ^`java.lang.String` := v2 @kind object;
  #L3c7642.  return v1 @kind object;
}
procedure `l6.a0$c$a` `c`(`l6.d$b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Ll6/d$b;.c:(Ljava/lang/String;)Ll6/a0$c$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c7654.  v0:= "Null value" @kind object;
  #L3c7658.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3c765e.  v1.`l6.d$b.b` @type ^`java.lang.String` := v2 @kind object;
  #L3c7662.  return v1 @kind object;
}
