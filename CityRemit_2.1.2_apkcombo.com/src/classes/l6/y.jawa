record `l6.y` @kind class @AccessFlag FINAL extends `l6.c0$b` @kind class {
  `int` `l6.y.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.y.b` @AccessFlag PRIVATE_FINAL;
  `int` `l6.y.c` @AccessFlag PRIVATE_FINAL;
  `long` `l6.y.d` @AccessFlag PRIVATE_FINAL;
  `long` `l6.y.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `l6.y.f` @AccessFlag PRIVATE_FINAL;
  `int` `l6.y.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.y.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.y.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l6.y` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `int` v3 , `long` v4 , `long` v6 , `boolean` v8 , `int` v9 , `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object) @signature `Ll6/y;.<init>:(ILjava/lang/String;IJJZILjava/lang/String;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3cc830.  call `<init>`(v0) @signature `Ll6/c0$b;.<init>:()V` @kind direct;
  #L3cc836.  v0.`l6.y.a` @type ^`int` := v1;
  #L3cc83a.  v1:= "Null model" @kind object;
  #L3cc83e.  call temp:= `requireNonNull`(v2, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cc844.  v0.`l6.y.b` @type ^`java.lang.String` := v2 @kind object;
  #L3cc848.  v0.`l6.y.c` @type ^`int` := v3;
  #L3cc84c.  v0.`l6.y.d` @type ^`long` := v4 @kind wide;
  #L3cc850.  v0.`l6.y.e` @type ^`long` := v6 @kind wide;
  #L3cc854.  v0.`l6.y.f` @type ^`boolean` := v8 @kind boolean;
  #L3cc858.  v0.`l6.y.g` @type ^`int` := v9;
  #L3cc85c.  v1:= "Null manufacturer" @kind object;
  #L3cc860.  call temp:= `requireNonNull`(v10, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cc866.  v0.`l6.y.h` @type ^`java.lang.String` := v10 @kind object;
  #L3cc86a.  v1:= "Null modelClass" @kind object;
  #L3cc86e.  call temp:= `requireNonNull`(v11, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cc874.  v0.`l6.y.i` @type ^`java.lang.String` := v11 @kind object;
  #L3cc878.  return @kind void;
}
procedure `int` `a`(`l6.y` v1 @kind this) @signature `Ll6/y;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc5e4.  v0:= v1.`l6.y.a` @type ^`int`;
  #L3cc5e8.  return v0;
}
procedure `int` `b`(`l6.y` v1 @kind this) @signature `Ll6/y;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc5fc.  v0:= v1.`l6.y.c` @type ^`int`;
  #L3cc600.  return v0;
}
procedure `long` `d`(`l6.y` v2 @kind this) @signature `Ll6/y;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cc800.  v0:= v2.`l6.y.e` @type ^`long` @kind wide;
  #L3cc804.  return v0 @kind wide;
}
procedure `boolean` `e`(`l6.y` v1 @kind this) @signature `Ll6/y;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc5cc.  v0:= v1.`l6.y.f` @type ^`boolean` @kind boolean;
  #L3cc5d0.  return v0;
}
procedure `boolean` `equals`(`l6.y` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Ll6/y;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3cc4ec.  v0:= 1I;
  #L3cc4ee.  if v8 != v7 then goto L3cc4f4;
  #L3cc4f2.  return v0;
  #L3cc4f4.  v1:= instanceof @variable v8 @type ^`l6.c0$b` @kind boolean;
  #L3cc4f8.  v2:= 0I;
  #L3cc4fa.  if v1 == 0 then goto L3cc5b8;
  #L3cc4fe.  v8:= (`l6.c0$b`) v8 @kind object;
  #L3cc502.  v1:= v7.`l6.y.a` @type ^`int`;
  #L3cc506.  call temp:= `a`(v8) @signature `Ll6/c0$b;.a:()I` @kind virtual;
  #L3cc50c.  v3:= temp;
  #L3cc50e.  if v1 != v3 then goto L3cc5b4;
  #L3cc512.  v1:= v7.`l6.y.b` @type ^`java.lang.String` @kind object;
  #L3cc516.  call temp:= `g`(v8) @signature `Ll6/c0$b;.g:()Ljava/lang/String;` @kind virtual;
  #L3cc51c.  v3:= temp @kind object;
  #L3cc51e.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cc524.  v1:= temp;
  #L3cc526.  if v1 == 0 then goto L3cc5b4;
  #L3cc52a.  v1:= v7.`l6.y.c` @type ^`int`;
  #L3cc52e.  call temp:= `b`(v8) @signature `Ll6/c0$b;.b:()I` @kind virtual;
  #L3cc534.  v3:= temp;
  #L3cc536.  if v1 != v3 then goto L3cc5b4;
  #L3cc53a.  v3:= v7.`l6.y.d` @type ^`long` @kind wide;
  #L3cc53e.  call temp:= `j`(v8) @signature `Ll6/c0$b;.j:()J` @kind virtual;
  #L3cc544.  v5:= temp @kind wide;
  #L3cc546.  v1:= lcmp(v3, v5);
  #L3cc54a.  if v1 != 0 then goto L3cc5b4;
  #L3cc54e.  v3:= v7.`l6.y.e` @type ^`long` @kind wide;
  #L3cc552.  call temp:= `d`(v8) @signature `Ll6/c0$b;.d:()J` @kind virtual;
  #L3cc558.  v5:= temp @kind wide;
  #L3cc55a.  v1:= lcmp(v3, v5);
  #L3cc55e.  if v1 != 0 then goto L3cc5b4;
  #L3cc562.  v1:= v7.`l6.y.f` @type ^`boolean` @kind boolean;
  #L3cc566.  call temp:= `e`(v8) @signature `Ll6/c0$b;.e:()Z` @kind virtual;
  #L3cc56c.  v3:= temp;
  #L3cc56e.  if v1 != v3 then goto L3cc5b4;
  #L3cc572.  v1:= v7.`l6.y.g` @type ^`int`;
  #L3cc576.  call temp:= `i`(v8) @signature `Ll6/c0$b;.i:()I` @kind virtual;
  #L3cc57c.  v3:= temp;
  #L3cc57e.  if v1 != v3 then goto L3cc5b4;
  #L3cc582.  v1:= v7.`l6.y.h` @type ^`java.lang.String` @kind object;
  #L3cc586.  call temp:= `f`(v8) @signature `Ll6/c0$b;.f:()Ljava/lang/String;` @kind virtual;
  #L3cc58c.  v3:= temp @kind object;
  #L3cc58e.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cc594.  v1:= temp;
  #L3cc596.  if v1 == 0 then goto L3cc5b4;
  #L3cc59a.  v1:= v7.`l6.y.i` @type ^`java.lang.String` @kind object;
  #L3cc59e.  call temp:= `h`(v8) @signature `Ll6/c0$b;.h:()Ljava/lang/String;` @kind virtual;
  #L3cc5a4.  v8:= temp @kind object;
  #L3cc5a6.  call temp:= `equals`(v1, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cc5ac.  v8:= temp;
  #L3cc5ae.  if v8 == 0 then goto L3cc5b4;
  #L3cc5b2.  goto L3cc5b6;
  #L3cc5b4.  v0:= 0I;
  #L3cc5b6.  return v0;
  #L3cc5b8.  return v2;
}
procedure `java.lang.String` `f`(`l6.y` v1 @kind this) @signature `Ll6/y;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc6d4.  v0:= v1.`l6.y.h` @type ^`java.lang.String` @kind object;
  #L3cc6d8.  return v0 @kind object;
}
procedure `java.lang.String` `g`(`l6.y` v1 @kind this) @signature `Ll6/y;.g:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc6ec.  v0:= v1.`l6.y.b` @type ^`java.lang.String` @kind object;
  #L3cc6f0.  return v0 @kind object;
}
procedure `java.lang.String` `h`(`l6.y` v1 @kind this) @signature `Ll6/y;.h:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc704.  v0:= v1.`l6.y.i` @type ^`java.lang.String` @kind object;
  #L3cc708.  return v0 @kind object;
}
procedure `int` `hashCode`(`l6.y` v7 @kind this) @signature `Ll6/y;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3cc614.  v0:= v7.`l6.y.a` @type ^`int`;
  #L3cc618.  v1:= 1000003I;
  #L3cc61e.  v0:= v0 ^~ v1 @kind int;
  #L3cc620.  v0:= v0 * v1 @kind int;
  #L3cc624.  v2:= v7.`l6.y.b` @type ^`java.lang.String` @kind object;
  #L3cc628.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3cc62e.  v2:= temp;
  #L3cc630.  v0:= v0 ^~ v2 @kind int;
  #L3cc632.  v0:= v0 * v1 @kind int;
  #L3cc636.  v2:= v7.`l6.y.c` @type ^`int`;
  #L3cc63a.  v0:= v0 ^~ v2 @kind int;
  #L3cc63c.  v0:= v0 * v1 @kind int;
  #L3cc640.  v2:= v7.`l6.y.d` @type ^`long` @kind wide;
  #L3cc644.  v4:= 32I;
  #L3cc648.  v5:= v2 ^>> v4 @kind long;
  #L3cc64c.  v2:= v2 ^~ v5 @kind long;
  #L3cc64e.  v3:= (`int`) v2 @kind l2i;
  #L3cc650.  v0:= v0 ^~ v3 @kind int;
  #L3cc652.  v0:= v0 * v1 @kind int;
  #L3cc656.  v2:= v7.`l6.y.e` @type ^`long` @kind wide;
  #L3cc65a.  v4:= v2 ^>> v4 @kind long;
  #L3cc65e.  v2:= v2 ^~ v4 @kind long;
  #L3cc660.  v3:= (`int`) v2 @kind l2i;
  #L3cc662.  v0:= v0 ^~ v3 @kind int;
  #L3cc664.  v0:= v0 * v1 @kind int;
  #L3cc668.  v2:= v7.`l6.y.f` @type ^`boolean` @kind boolean;
  #L3cc66c.  if v2 == 0 then goto L3cc676;
  #L3cc670.  v2:= 1231I;
  #L3cc674.  goto L3cc67a;
  #L3cc676.  v2:= 1237I;
  #L3cc67a.  v0:= v0 ^~ v2 @kind int;
  #L3cc67c.  v0:= v0 * v1 @kind int;
  #L3cc680.  v2:= v7.`l6.y.g` @type ^`int`;
  #L3cc684.  v0:= v0 ^~ v2 @kind int;
  #L3cc686.  v0:= v0 * v1 @kind int;
  #L3cc68a.  v2:= v7.`l6.y.h` @type ^`java.lang.String` @kind object;
  #L3cc68e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3cc694.  v2:= temp;
  #L3cc696.  v0:= v0 ^~ v2 @kind int;
  #L3cc698.  v0:= v0 * v1 @kind int;
  #L3cc69c.  v1:= v7.`l6.y.i` @type ^`java.lang.String` @kind object;
  #L3cc6a0.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3cc6a6.  v1:= temp;
  #L3cc6a8.  v0:= v0 ^~ v1 @kind int;
  #L3cc6aa.  return v0;
}
procedure `int` `i`(`l6.y` v1 @kind this) @signature `Ll6/y;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc6bc.  v0:= v1.`l6.y.g` @type ^`int`;
  #L3cc6c0.  return v0;
}
procedure `long` `j`(`l6.y` v2 @kind this) @signature `Ll6/y;.j:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cc818.  v0:= v2.`l6.y.d` @type ^`long` @kind wide;
  #L3cc81c.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`l6.y` v3 @kind this) @signature `Ll6/y;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3cc71c.  v0:= new `java.lang.StringBuilder`;
  #L3cc720.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cc726.  v1:= "DeviceData{arch=" @kind object;
  #L3cc72a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc730.  v1:= v3.`l6.y.a` @type ^`int`;
  #L3cc734.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc73a.  v1:= ", model=" @kind object;
  #L3cc73e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc744.  v1:= v3.`l6.y.b` @type ^`java.lang.String` @kind object;
  #L3cc748.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc74e.  v1:= ", availableProcessors=" @kind object;
  #L3cc752.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc758.  v1:= v3.`l6.y.c` @type ^`int`;
  #L3cc75c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc762.  v1:= ", totalRam=" @kind object;
  #L3cc766.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc76c.  v1:= v3.`l6.y.d` @type ^`long` @kind wide;
  #L3cc770.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc776.  v1:= ", diskSpace=" @kind object;
  #L3cc77a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc780.  v1:= v3.`l6.y.e` @type ^`long` @kind wide;
  #L3cc784.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc78a.  v1:= ", isEmulator=" @kind object;
  #L3cc78e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc794.  v1:= v3.`l6.y.f` @type ^`boolean` @kind boolean;
  #L3cc798.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc79e.  v1:= ", state=" @kind object;
  #L3cc7a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc7a8.  v1:= v3.`l6.y.g` @type ^`int`;
  #L3cc7ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc7b2.  v1:= ", manufacturer=" @kind object;
  #L3cc7b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc7bc.  v1:= v3.`l6.y.h` @type ^`java.lang.String` @kind object;
  #L3cc7c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc7c6.  v1:= ", modelClass=" @kind object;
  #L3cc7ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc7d0.  v1:= v3.`l6.y.i` @type ^`java.lang.String` @kind object;
  #L3cc7d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc7da.  v1:= "}" @kind object;
  #L3cc7de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc7e4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cc7ea.  v0:= temp @kind object;
  #L3cc7ec.  return v0 @kind object;
}
