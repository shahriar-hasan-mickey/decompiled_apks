record `l6.d` @kind class @AccessFlag FINAL extends `l6.a0$c` @kind class {
  `java.lang.String` `l6.d.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l6.d` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Ll6/d;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3c77ac.  call `<init>`(v0) @signature `Ll6/a0$c;.<init>:()V` @kind direct;
  #L3c77b2.  v0.`l6.d.a` @type ^`java.lang.String` := v1 @kind object;
  #L3c77b6.  v0.`l6.d.b` @type ^`java.lang.String` := v2 @kind object;
  #L3c77ba.  return @kind void;
}
procedure `void` `<init>`(`l6.d` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `l6.d$a` v3 @kind object) @signature `Ll6/d;.<init>:(Ljava/lang/String;Ljava/lang/String;Ll6/d$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3c77cc.  call `<init>`(v0, v1, v2) @signature `Ll6/d;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L3c77d2.  return @kind void;
}
procedure `java.lang.String` `b`(`l6.d` v1 @kind this) @signature `Ll6/d;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c7724.  v0:= v1.`l6.d.a` @type ^`java.lang.String` @kind object;
  #L3c7728.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`l6.d` v1 @kind this) @signature `Ll6/d;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c773c.  v0:= v1.`l6.d.b` @type ^`java.lang.String` @kind object;
  #L3c7740.  return v0 @kind object;
}
procedure `boolean` `equals`(`l6.d` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ll6/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c768c.  v0:= 1I;
  #L3c768e.  if v5 != v4 then goto L3c7694;
  #L3c7692.  return v0;
  #L3c7694.  v1:= instanceof @variable v5 @type ^`l6.a0$c` @kind boolean;
  #L3c7698.  v2:= 0I;
  #L3c769a.  if v1 == 0 then goto L3c76d8;
  #L3c769e.  v5:= (`l6.a0$c`) v5 @kind object;
  #L3c76a2.  v1:= v4.`l6.d.a` @type ^`java.lang.String` @kind object;
  #L3c76a6.  call temp:= `b`(v5) @signature `Ll6/a0$c;.b:()Ljava/lang/String;` @kind virtual;
  #L3c76ac.  v3:= temp @kind object;
  #L3c76ae.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c76b4.  v1:= temp;
  #L3c76b6.  if v1 == 0 then goto L3c76d4;
  #L3c76ba.  v1:= v4.`l6.d.b` @type ^`java.lang.String` @kind object;
  #L3c76be.  call temp:= `c`(v5) @signature `Ll6/a0$c;.c:()Ljava/lang/String;` @kind virtual;
  #L3c76c4.  v5:= temp @kind object;
  #L3c76c6.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c76cc.  v5:= temp;
  #L3c76ce.  if v5 == 0 then goto L3c76d4;
  #L3c76d2.  goto L3c76d6;
  #L3c76d4.  v0:= 0I;
  #L3c76d6.  return v0;
  #L3c76d8.  return v2;
}
procedure `int` `hashCode`(`l6.d` v2 @kind this) @signature `Ll6/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c76ec.  v0:= v2.`l6.d.a` @type ^`java.lang.String` @kind object;
  #L3c76f0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3c76f6.  v0:= temp;
  #L3c76f8.  v1:= 1000003I;
  #L3c76fe.  v0:= v0 ^~ v1 @kind int;
  #L3c7700.  v0:= v0 * v1 @kind int;
  #L3c7704.  v1:= v2.`l6.d.b` @type ^`java.lang.String` @kind object;
  #L3c7708.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3c770e.  v1:= temp;
  #L3c7710.  v0:= v0 ^~ v1 @kind int;
  #L3c7712.  return v0;
}
procedure `java.lang.String` `toString`(`l6.d` v2 @kind this) @signature `Ll6/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c7754.  v0:= new `java.lang.StringBuilder`;
  #L3c7758.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c775e.  v1:= "CustomAttribute{key=" @kind object;
  #L3c7762.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7768.  v1:= v2.`l6.d.a` @type ^`java.lang.String` @kind object;
  #L3c776c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7772.  v1:= ", value=" @kind object;
  #L3c7776.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c777c.  v1:= v2.`l6.d.b` @type ^`java.lang.String` @kind object;
  #L3c7780.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7786.  v1:= "}" @kind object;
  #L3c778a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7790.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c7796.  v0:= temp @kind object;
  #L3c7798.  return v0 @kind object;
}
