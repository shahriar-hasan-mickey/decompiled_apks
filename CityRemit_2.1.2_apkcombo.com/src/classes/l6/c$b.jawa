record `l6.c$b` @kind class @AccessFlag FINAL extends `l6.a0$a$a` @kind class {
  `java.lang.Integer` `l6.c$b.a` @AccessFlag PRIVATE;
  `java.lang.String` `l6.c$b.b` @AccessFlag PRIVATE;
  `java.lang.Integer` `l6.c$b.c` @AccessFlag PRIVATE;
  `java.lang.Integer` `l6.c$b.d` @AccessFlag PRIVATE;
  `java.lang.Long` `l6.c$b.e` @AccessFlag PRIVATE;
  `java.lang.Long` `l6.c$b.f` @AccessFlag PRIVATE;
  `java.lang.Long` `l6.c$b.g` @AccessFlag PRIVATE;
  `java.lang.String` `l6.c$b.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`l6.c$b` v0 @kind this) @signature `Ll6/c$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3c7218.  call `<init>`(v0) @signature `Ll6/a0$a$a;.<init>:()V` @kind direct;
  #L3c721e.  return @kind void;
}
procedure `l6.a0$a` `a`(`l6.c$b` v15 @kind this) @signature `Ll6/c$b;.a:()Ll6/a0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L3c6f4c.  v0:= v15.`l6.c$b.a` @type ^`java.lang.Integer` @kind object;
  #L3c6f50.  v1:= "" @kind object;
  #L3c6f54.  if v0 != 0 then goto L3c6f7a;
  #L3c6f58.  v0:= new `java.lang.StringBuilder`;
  #L3c6f5c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c6f62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c6f68.  v1:= " pid" @kind object;
  #L3c6f6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c6f72.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c6f78.  v1:= temp @kind object;
  #L3c6f7a.  v0:= v15.`l6.c$b.b` @type ^`java.lang.String` @kind object;
  #L3c6f7e.  if v0 != 0 then goto L3c6fa4;
  #L3c6f82.  v0:= new `java.lang.StringBuilder`;
  #L3c6f86.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c6f8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c6f92.  v1:= " processName" @kind object;
  #L3c6f96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c6f9c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c6fa2.  v1:= temp @kind object;
  #L3c6fa4.  v0:= v15.`l6.c$b.c` @type ^`java.lang.Integer` @kind object;
  #L3c6fa8.  if v0 != 0 then goto L3c6fce;
  #L3c6fac.  v0:= new `java.lang.StringBuilder`;
  #L3c6fb0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c6fb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c6fbc.  v1:= " reasonCode" @kind object;
  #L3c6fc0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c6fc6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c6fcc.  v1:= temp @kind object;
  #L3c6fce.  v0:= v15.`l6.c$b.d` @type ^`java.lang.Integer` @kind object;
  #L3c6fd2.  if v0 != 0 then goto L3c6ff8;
  #L3c6fd6.  v0:= new `java.lang.StringBuilder`;
  #L3c6fda.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c6fe0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c6fe6.  v1:= " importance" @kind object;
  #L3c6fea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c6ff0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c6ff6.  v1:= temp @kind object;
  #L3c6ff8.  v0:= v15.`l6.c$b.e` @type ^`java.lang.Long` @kind object;
  #L3c6ffc.  if v0 != 0 then goto L3c7022;
  #L3c7000.  v0:= new `java.lang.StringBuilder`;
  #L3c7004.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c700a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7010.  v1:= " pss" @kind object;
  #L3c7014.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c701a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c7020.  v1:= temp @kind object;
  #L3c7022.  v0:= v15.`l6.c$b.f` @type ^`java.lang.Long` @kind object;
  #L3c7026.  if v0 != 0 then goto L3c704c;
  #L3c702a.  v0:= new `java.lang.StringBuilder`;
  #L3c702e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c7034.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c703a.  v1:= " rss" @kind object;
  #L3c703e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7044.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c704a.  v1:= temp @kind object;
  #L3c704c.  v0:= v15.`l6.c$b.g` @type ^`java.lang.Long` @kind object;
  #L3c7050.  if v0 != 0 then goto L3c7076;
  #L3c7054.  v0:= new `java.lang.StringBuilder`;
  #L3c7058.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c705e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7064.  v1:= " timestamp" @kind object;
  #L3c7068.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c706e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c7074.  v1:= temp @kind object;
  #L3c7076.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3c707c.  v0:= temp;
  #L3c707e.  if v0 == 0 then goto L3c70e2;
  #L3c7082.  v0:= new `l6.c`;
  #L3c7086.  v1:= v15.`l6.c$b.a` @type ^`java.lang.Integer` @kind object;
  #L3c708a.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3c7090.  v3:= temp;
  #L3c7092.  v4:= v15.`l6.c$b.b` @type ^`java.lang.String` @kind object;
  #L3c7096.  v1:= v15.`l6.c$b.c` @type ^`java.lang.Integer` @kind object;
  #L3c709a.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3c70a0.  v5:= temp;
  #L3c70a2.  v1:= v15.`l6.c$b.d` @type ^`java.lang.Integer` @kind object;
  #L3c70a6.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3c70ac.  v6:= temp;
  #L3c70ae.  v1:= v15.`l6.c$b.e` @type ^`java.lang.Long` @kind object;
  #L3c70b2.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3c70b8.  v7:= temp @kind wide;
  #L3c70ba.  v1:= v15.`l6.c$b.f` @type ^`java.lang.Long` @kind object;
  #L3c70be.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3c70c4.  v9:= temp @kind wide;
  #L3c70c6.  v1:= v15.`l6.c$b.g` @type ^`java.lang.Long` @kind object;
  #L3c70ca.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3c70d0.  v11:= temp @kind wide;
  #L3c70d2.  v13:= v15.`l6.c$b.h` @type ^`java.lang.String` @kind object;
  #L3c70d6.  v14:= 0I;
  #L3c70d8.  v2:= v0 @kind object;
  #L3c70da.  call `<init>`(v2, v3, v4, v5, v6, v7, v9, v11, v13, v14) @signature `Ll6/c;.<init>:(ILjava/lang/String;IIJJJLjava/lang/String;Ll6/c$a;)V` @kind direct;
  #L3c70e0.  return v0 @kind object;
  #L3c70e2.  v0:= new `java.lang.IllegalStateException`;
  #L3c70e6.  v2:= new `java.lang.StringBuilder`;
  #L3c70ea.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c70f0.  v3:= "Missing required properties:" @kind object;
  #L3c70f4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c70fa.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7100.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c7106.  v1:= temp @kind object;
  #L3c7108.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c710e.  throw v0;
}
procedure `l6.a0$a$a` `b`(`l6.c$b` v0 @kind this, `int` v1 ) @signature `Ll6/c$b;.b:(I)Ll6/a0$a$a;` @AccessFlag PUBLIC {
    temp;

  #L3c7120.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3c7126.  v1:= temp @kind object;
  #L3c7128.  v0.`l6.c$b.d` @type ^`java.lang.Integer` := v1 @kind object;
  #L3c712c.  return v0 @kind object;
}
procedure `l6.a0$a$a` `c`(`l6.c$b` v0 @kind this, `int` v1 ) @signature `Ll6/c$b;.c:(I)Ll6/a0$a$a;` @AccessFlag PUBLIC {
    temp;

  #L3c7140.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3c7146.  v1:= temp @kind object;
  #L3c7148.  v0.`l6.c$b.a` @type ^`java.lang.Integer` := v1 @kind object;
  #L3c714c.  return v0 @kind object;
}
procedure `l6.a0$a$a` `d`(`l6.c$b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Ll6/c$b;.d:(Ljava/lang/String;)Ll6/a0$a$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c7160.  v0:= "Null processName" @kind object;
  #L3c7164.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3c716a.  v1.`l6.c$b.b` @type ^`java.lang.String` := v2 @kind object;
  #L3c716e.  return v1 @kind object;
}
procedure `l6.a0$a$a` `e`(`l6.c$b` v0 @kind this, `long` v1 ) @signature `Ll6/c$b;.e:(J)Ll6/a0$a$a;` @AccessFlag PUBLIC {
    temp;

  #L3c7180.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3c7186.  v1:= temp @kind object;
  #L3c7188.  v0.`l6.c$b.e` @type ^`java.lang.Long` := v1 @kind object;
  #L3c718c.  return v0 @kind object;
}
procedure `l6.a0$a$a` `f`(`l6.c$b` v0 @kind this, `int` v1 ) @signature `Ll6/c$b;.f:(I)Ll6/a0$a$a;` @AccessFlag PUBLIC {
    temp;

  #L3c71a0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3c71a6.  v1:= temp @kind object;
  #L3c71a8.  v0.`l6.c$b.c` @type ^`java.lang.Integer` := v1 @kind object;
  #L3c71ac.  return v0 @kind object;
}
procedure `l6.a0$a$a` `g`(`l6.c$b` v0 @kind this, `long` v1 ) @signature `Ll6/c$b;.g:(J)Ll6/a0$a$a;` @AccessFlag PUBLIC {
    temp;

  #L3c71c0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3c71c6.  v1:= temp @kind object;
  #L3c71c8.  v0.`l6.c$b.f` @type ^`java.lang.Long` := v1 @kind object;
  #L3c71cc.  return v0 @kind object;
}
procedure `l6.a0$a$a` `h`(`l6.c$b` v0 @kind this, `long` v1 ) @signature `Ll6/c$b;.h:(J)Ll6/a0$a$a;` @AccessFlag PUBLIC {
    temp;

  #L3c71e0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3c71e6.  v1:= temp @kind object;
  #L3c71e8.  v0.`l6.c$b.g` @type ^`java.lang.Long` := v1 @kind object;
  #L3c71ec.  return v0 @kind object;
}
procedure `l6.a0$a$a` `i`(`l6.c$b` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Ll6/c$b;.i:(Ljava/lang/String;)Ll6/a0$a$a;` @AccessFlag PUBLIC {
    temp;

  #L3c7200.  v0.`l6.c$b.h` @type ^`java.lang.String` := v1 @kind object;
  #L3c7204.  return v0 @kind object;
}
