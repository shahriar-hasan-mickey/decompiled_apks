record `l6.a0$e$d$c` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`l6.a0$e$d$c` v0 @kind this) @signature `Ll6/a0$e$d$c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3cd0f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cd0f6.  return @kind void;
}
procedure `l6.a0$e$d$c$a` `a`() @signature `Ll6/a0$e$d$c;.a:()Ll6/a0$e$d$c$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cd0d4.  v0:= new `l6.s$b`;
  #L3cd0d8.  call `<init>`(v0) @signature `Ll6/s$b;.<init>:()V` @kind direct;
  #L3cd0de.  return v0 @kind object;
}
procedure `java.lang.Double` `b`() @signature `Ll6/a0$e$d$c;.b:()Ljava/lang/Double;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `c`() @signature `Ll6/a0$e$d$c;.c:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `d`() @signature `Ll6/a0$e$d$c;.d:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `e`() @signature `Ll6/a0$e$d$c;.e:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `f`() @signature `Ll6/a0$e$d$c;.f:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `g`() @signature `Ll6/a0$e$d$c;.g:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
