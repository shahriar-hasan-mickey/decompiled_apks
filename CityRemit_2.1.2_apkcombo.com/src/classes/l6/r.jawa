record `l6.r` @kind class @AccessFlag FINAL extends `l6.a0$e$d$a$b$e$b` @kind class {
  `long` `l6.r.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.r.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.r.c` @AccessFlag PRIVATE_FINAL;
  `long` `l6.r.d` @AccessFlag PRIVATE_FINAL;
  `int` `l6.r.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l6.r` v0 @kind this, `long` v1 , `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `long` v5 , `int` v7 ) @signature `Ll6/r;.<init>:(JLjava/lang/String;Ljava/lang/String;JI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3ca340.  call `<init>`(v0) @signature `Ll6/a0$e$d$a$b$e$b;.<init>:()V` @kind direct;
  #L3ca346.  v0.`l6.r.a` @type ^`long` := v1 @kind wide;
  #L3ca34a.  v0.`l6.r.b` @type ^`java.lang.String` := v3 @kind object;
  #L3ca34e.  v0.`l6.r.c` @type ^`java.lang.String` := v4 @kind object;
  #L3ca352.  v0.`l6.r.d` @type ^`long` := v5 @kind wide;
  #L3ca356.  v0.`l6.r.e` @type ^`int` := v7;
  #L3ca35a.  return @kind void;
}
procedure `void` `<init>`(`l6.r` v0 @kind this, `long` v1 , `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `long` v5 , `int` v7 , `l6.r$a` v8 @kind object) @signature `Ll6/r;.<init>:(JLjava/lang/String;Ljava/lang/String;JILl6/r$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3ca36c.  call `<init>`(v0, v1, v3, v4, v5, v7) @signature `Ll6/r;.<init>:(JLjava/lang/String;Ljava/lang/String;JI)V` @kind direct;
  #L3ca372.  return @kind void;
}
procedure `java.lang.String` `b`(`l6.r` v1 @kind this) @signature `Ll6/r;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ca24c.  v0:= v1.`l6.r.c` @type ^`java.lang.String` @kind object;
  #L3ca250.  return v0 @kind object;
}
procedure `int` `c`(`l6.r` v1 @kind this) @signature `Ll6/r;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ca1c0.  v0:= v1.`l6.r.e` @type ^`int`;
  #L3ca1c4.  return v0;
}
procedure `long` `d`(`l6.r` v2 @kind this) @signature `Ll6/r;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ca310.  v0:= v2.`l6.r.d` @type ^`long` @kind wide;
  #L3ca314.  return v0 @kind wide;
}
procedure `long` `e`(`l6.r` v2 @kind this) @signature `Ll6/r;.e:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ca328.  v0:= v2.`l6.r.a` @type ^`long` @kind wide;
  #L3ca32c.  return v0 @kind wide;
}
procedure `boolean` `equals`(`l6.r` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Ll6/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ca118.  v0:= 1I;
  #L3ca11a.  if v8 != v7 then goto L3ca120;
  #L3ca11e.  return v0;
  #L3ca120.  v1:= instanceof @variable v8 @type ^`l6.a0$e$d$a$b$e$b` @kind boolean;
  #L3ca124.  v2:= 0I;
  #L3ca126.  if v1 == 0 then goto L3ca1ae;
  #L3ca12a.  v8:= (`l6.a0$e$d$a$b$e$b`) v8 @kind object;
  #L3ca12e.  v3:= v7.`l6.r.a` @type ^`long` @kind wide;
  #L3ca132.  call temp:= `e`(v8) @signature `Ll6/a0$e$d$a$b$e$b;.e:()J` @kind virtual;
  #L3ca138.  v5:= temp @kind wide;
  #L3ca13a.  v1:= lcmp(v3, v5);
  #L3ca13e.  if v1 != 0 then goto L3ca1aa;
  #L3ca142.  v1:= v7.`l6.r.b` @type ^`java.lang.String` @kind object;
  #L3ca146.  call temp:= `f`(v8) @signature `Ll6/a0$e$d$a$b$e$b;.f:()Ljava/lang/String;` @kind virtual;
  #L3ca14c.  v3:= temp @kind object;
  #L3ca14e.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ca154.  v1:= temp;
  #L3ca156.  if v1 == 0 then goto L3ca1aa;
  #L3ca15a.  v1:= v7.`l6.r.c` @type ^`java.lang.String` @kind object;
  #L3ca15e.  if v1 != 0 then goto L3ca170;
  #L3ca162.  call temp:= `b`(v8) @signature `Ll6/a0$e$d$a$b$e$b;.b:()Ljava/lang/String;` @kind virtual;
  #L3ca168.  v1:= temp @kind object;
  #L3ca16a.  if v1 != 0 then goto L3ca1aa;
  #L3ca16e.  goto L3ca184;
  #L3ca170.  call temp:= `b`(v8) @signature `Ll6/a0$e$d$a$b$e$b;.b:()Ljava/lang/String;` @kind virtual;
  #L3ca176.  v3:= temp @kind object;
  #L3ca178.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ca17e.  v1:= temp;
  #L3ca180.  if v1 == 0 then goto L3ca1aa;
  #L3ca184.  v3:= v7.`l6.r.d` @type ^`long` @kind wide;
  #L3ca188.  call temp:= `d`(v8) @signature `Ll6/a0$e$d$a$b$e$b;.d:()J` @kind virtual;
  #L3ca18e.  v5:= temp @kind wide;
  #L3ca190.  v1:= lcmp(v3, v5);
  #L3ca194.  if v1 != 0 then goto L3ca1aa;
  #L3ca198.  v1:= v7.`l6.r.e` @type ^`int`;
  #L3ca19c.  call temp:= `c`(v8) @signature `Ll6/a0$e$d$a$b$e$b;.c:()I` @kind virtual;
  #L3ca1a2.  v8:= temp;
  #L3ca1a4.  if v1 != v8 then goto L3ca1aa;
  #L3ca1a8.  goto L3ca1ac;
  #L3ca1aa.  v0:= 0I;
  #L3ca1ac.  return v0;
  #L3ca1ae.  return v2;
}
procedure `java.lang.String` `f`(`l6.r` v1 @kind this) @signature `Ll6/r;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ca264.  v0:= v1.`l6.r.b` @type ^`java.lang.String` @kind object;
  #L3ca268.  return v0 @kind object;
}
procedure `int` `hashCode`(`l6.r` v7 @kind this) @signature `Ll6/r;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ca1d8.  v0:= v7.`l6.r.a` @type ^`long` @kind wide;
  #L3ca1dc.  v2:= 32I;
  #L3ca1e0.  v3:= v0 ^>> v2 @kind long;
  #L3ca1e4.  v0:= v0 ^~ v3 @kind long;
  #L3ca1e6.  v1:= (`int`) v0 @kind l2i;
  #L3ca1e8.  v0:= 1000003I;
  #L3ca1ee.  v1:= v1 ^~ v0 @kind int;
  #L3ca1f0.  v1:= v1 * v0 @kind int;
  #L3ca1f4.  v3:= v7.`l6.r.b` @type ^`java.lang.String` @kind object;
  #L3ca1f8.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3ca1fe.  v3:= temp;
  #L3ca200.  v1:= v1 ^~ v3 @kind int;
  #L3ca202.  v1:= v1 * v0 @kind int;
  #L3ca206.  v3:= v7.`l6.r.c` @type ^`java.lang.String` @kind object;
  #L3ca20a.  if v3 != 0 then goto L3ca212;
  #L3ca20e.  v3:= 0I;
  #L3ca210.  goto L3ca21a;
  #L3ca212.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3ca218.  v3:= temp;
  #L3ca21a.  v1:= v1 ^~ v3 @kind int;
  #L3ca21c.  v1:= v1 * v0 @kind int;
  #L3ca220.  v3:= v7.`l6.r.d` @type ^`long` @kind wide;
  #L3ca224.  v5:= v3 ^>> v2 @kind long;
  #L3ca228.  v2:= v5 ^~ v3 @kind long;
  #L3ca22c.  v3:= (`int`) v2 @kind l2i;
  #L3ca22e.  v1:= v1 ^~ v3 @kind int;
  #L3ca230.  v1:= v1 * v0 @kind int;
  #L3ca234.  v0:= v7.`l6.r.e` @type ^`int`;
  #L3ca238.  v0:= v0 ^~ v1 @kind int;
  #L3ca23a.  return v0;
}
procedure `java.lang.String` `toString`(`l6.r` v3 @kind this) @signature `Ll6/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ca27c.  v0:= new `java.lang.StringBuilder`;
  #L3ca280.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ca286.  v1:= "Frame{pc=" @kind object;
  #L3ca28a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca290.  v1:= v3.`l6.r.a` @type ^`long` @kind wide;
  #L3ca294.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca29a.  v1:= ", symbol=" @kind object;
  #L3ca29e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca2a4.  v1:= v3.`l6.r.b` @type ^`java.lang.String` @kind object;
  #L3ca2a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca2ae.  v1:= ", file=" @kind object;
  #L3ca2b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca2b8.  v1:= v3.`l6.r.c` @type ^`java.lang.String` @kind object;
  #L3ca2bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca2c2.  v1:= ", offset=" @kind object;
  #L3ca2c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca2cc.  v1:= v3.`l6.r.d` @type ^`long` @kind wide;
  #L3ca2d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca2d6.  v1:= ", importance=" @kind object;
  #L3ca2da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca2e0.  v1:= v3.`l6.r.e` @type ^`int`;
  #L3ca2e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca2ea.  v1:= "}" @kind object;
  #L3ca2ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ca2f4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ca2fa.  v0:= temp @kind object;
  #L3ca2fc.  return v0 @kind object;
}
