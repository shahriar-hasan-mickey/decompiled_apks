record `l6.n` @kind class @AccessFlag FINAL extends `l6.a0$e$d$a$b$a` @kind class {
  `long` `l6.n.a` @AccessFlag PRIVATE_FINAL;
  `long` `l6.n.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.n.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.n.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l6.n` v0 @kind this, `long` v1 , `long` v3 , `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Ll6/n;.<init>:(JJLjava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3c9644.  call `<init>`(v0) @signature `Ll6/a0$e$d$a$b$a;.<init>:()V` @kind direct;
  #L3c964a.  v0.`l6.n.a` @type ^`long` := v1 @kind wide;
  #L3c964e.  v0.`l6.n.b` @type ^`long` := v3 @kind wide;
  #L3c9652.  v0.`l6.n.c` @type ^`java.lang.String` := v5 @kind object;
  #L3c9656.  v0.`l6.n.d` @type ^`java.lang.String` := v6 @kind object;
  #L3c965a.  return @kind void;
}
procedure `void` `<init>`(`l6.n` v0 @kind this, `long` v1 , `long` v3 , `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `l6.n$a` v7 @kind object) @signature `Ll6/n;.<init>:(JJLjava/lang/String;Ljava/lang/String;Ll6/n$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3c966c.  call `<init>`(v0, v1, v3, v5, v6) @signature `Ll6/n;.<init>:(JJLjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L3c9672.  return @kind void;
}
procedure `long` `b`(`l6.n` v2 @kind this) @signature `Ll6/n;.b:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c9614.  v0:= v2.`l6.n.a` @type ^`long` @kind wide;
  #L3c9618.  return v0 @kind wide;
}
procedure `java.lang.String` `c`(`l6.n` v1 @kind this) @signature `Ll6/n;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c9564.  v0:= v1.`l6.n.c` @type ^`java.lang.String` @kind object;
  #L3c9568.  return v0 @kind object;
}
procedure `long` `d`(`l6.n` v2 @kind this) @signature `Ll6/n;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c962c.  v0:= v2.`l6.n.b` @type ^`long` @kind wide;
  #L3c9630.  return v0 @kind wide;
}
procedure `java.lang.String` `e`(`l6.n` v1 @kind this) @signature `Ll6/n;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c957c.  v0:= v1.`l6.n.d` @type ^`java.lang.String` @kind object;
  #L3c9580.  return v0 @kind object;
}
procedure `boolean` `equals`(`l6.n` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Ll6/n;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c9468.  v0:= 1I;
  #L3c946a.  if v8 != v7 then goto L3c9470;
  #L3c946e.  return v0;
  #L3c9470.  v1:= instanceof @variable v8 @type ^`l6.a0$e$d$a$b$a` @kind boolean;
  #L3c9474.  v2:= 0I;
  #L3c9476.  if v1 == 0 then goto L3c94e6;
  #L3c947a.  v8:= (`l6.a0$e$d$a$b$a`) v8 @kind object;
  #L3c947e.  v3:= v7.`l6.n.a` @type ^`long` @kind wide;
  #L3c9482.  call temp:= `b`(v8) @signature `Ll6/a0$e$d$a$b$a;.b:()J` @kind virtual;
  #L3c9488.  v5:= temp @kind wide;
  #L3c948a.  v1:= lcmp(v3, v5);
  #L3c948e.  if v1 != 0 then goto L3c94e2;
  #L3c9492.  v3:= v7.`l6.n.b` @type ^`long` @kind wide;
  #L3c9496.  call temp:= `d`(v8) @signature `Ll6/a0$e$d$a$b$a;.d:()J` @kind virtual;
  #L3c949c.  v5:= temp @kind wide;
  #L3c949e.  v1:= lcmp(v3, v5);
  #L3c94a2.  if v1 != 0 then goto L3c94e2;
  #L3c94a6.  v1:= v7.`l6.n.c` @type ^`java.lang.String` @kind object;
  #L3c94aa.  call temp:= `c`(v8) @signature `Ll6/a0$e$d$a$b$a;.c:()Ljava/lang/String;` @kind virtual;
  #L3c94b0.  v3:= temp @kind object;
  #L3c94b2.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c94b8.  v1:= temp;
  #L3c94ba.  if v1 == 0 then goto L3c94e2;
  #L3c94be.  v1:= v7.`l6.n.d` @type ^`java.lang.String` @kind object;
  #L3c94c2.  call temp:= `e`(v8) @signature `Ll6/a0$e$d$a$b$a;.e:()Ljava/lang/String;` @kind virtual;
  #L3c94c8.  v8:= temp @kind object;
  #L3c94ca.  if v1 != 0 then goto L3c94d4;
  #L3c94ce.  if v8 != 0 then goto L3c94e2;
  #L3c94d2.  goto L3c94e4;
  #L3c94d4.  call temp:= `equals`(v1, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c94da.  v8:= temp;
  #L3c94dc.  if v8 == 0 then goto L3c94e2;
  #L3c94e0.  goto L3c94e4;
  #L3c94e2.  v0:= 0I;
  #L3c94e4.  return v0;
  #L3c94e6.  return v2;
}
procedure `int` `hashCode`(`l6.n` v7 @kind this) @signature `Ll6/n;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c94f8.  v0:= v7.`l6.n.a` @type ^`long` @kind wide;
  #L3c94fc.  v2:= 32I;
  #L3c9500.  v3:= v0 ^>> v2 @kind long;
  #L3c9504.  v0:= v0 ^~ v3 @kind long;
  #L3c9506.  v1:= (`int`) v0 @kind l2i;
  #L3c9508.  v0:= 1000003I;
  #L3c950e.  v1:= v1 ^~ v0 @kind int;
  #L3c9510.  v1:= v1 * v0 @kind int;
  #L3c9514.  v3:= v7.`l6.n.b` @type ^`long` @kind wide;
  #L3c9518.  v5:= v3 ^>> v2 @kind long;
  #L3c951c.  v2:= v5 ^~ v3 @kind long;
  #L3c9520.  v3:= (`int`) v2 @kind l2i;
  #L3c9522.  v1:= v1 ^~ v3 @kind int;
  #L3c9524.  v1:= v1 * v0 @kind int;
  #L3c9528.  v2:= v7.`l6.n.c` @type ^`java.lang.String` @kind object;
  #L3c952c.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3c9532.  v2:= temp;
  #L3c9534.  v1:= v1 ^~ v2 @kind int;
  #L3c9536.  v1:= v1 * v0 @kind int;
  #L3c953a.  v0:= v7.`l6.n.d` @type ^`java.lang.String` @kind object;
  #L3c953e.  if v0 != 0 then goto L3c9546;
  #L3c9542.  v0:= 0I;
  #L3c9544.  goto L3c954e;
  #L3c9546.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3c954c.  v0:= temp;
  #L3c954e.  v0:= v0 ^~ v1 @kind int;
  #L3c9550.  return v0;
}
procedure `java.lang.String` `toString`(`l6.n` v3 @kind this) @signature `Ll6/n;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3c9594.  v0:= new `java.lang.StringBuilder`;
  #L3c9598.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c959e.  v1:= "BinaryImage{baseAddress=" @kind object;
  #L3c95a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c95a8.  v1:= v3.`l6.n.a` @type ^`long` @kind wide;
  #L3c95ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c95b2.  v1:= ", size=" @kind object;
  #L3c95b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c95bc.  v1:= v3.`l6.n.b` @type ^`long` @kind wide;
  #L3c95c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c95c6.  v1:= ", name=" @kind object;
  #L3c95ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c95d0.  v1:= v3.`l6.n.c` @type ^`java.lang.String` @kind object;
  #L3c95d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c95da.  v1:= ", uuid=" @kind object;
  #L3c95de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c95e4.  v1:= v3.`l6.n.d` @type ^`java.lang.String` @kind object;
  #L3c95e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c95ee.  v1:= "}" @kind object;
  #L3c95f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c95f8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c95fe.  v0:= temp @kind object;
  #L3c9600.  return v0 @kind object;
}
