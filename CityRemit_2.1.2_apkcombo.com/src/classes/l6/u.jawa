record `l6.u` @kind class @AccessFlag FINAL extends `l6.a0$e$e` @kind class {
  `int` `l6.u.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.u.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.u.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `l6.u.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l6.u` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Ll6/u;.<init>:(ILjava/lang/String;Ljava/lang/String;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3cb764.  call `<init>`(v0) @signature `Ll6/a0$e$e;.<init>:()V` @kind direct;
  #L3cb76a.  v0.`l6.u.a` @type ^`int` := v1;
  #L3cb76e.  v0.`l6.u.b` @type ^`java.lang.String` := v2 @kind object;
  #L3cb772.  v0.`l6.u.c` @type ^`java.lang.String` := v3 @kind object;
  #L3cb776.  v0.`l6.u.d` @type ^`boolean` := v4 @kind boolean;
  #L3cb77a.  return @kind void;
}
procedure `void` `<init>`(`l6.u` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `boolean` v4 , `l6.u$a` v5 @kind object) @signature `Ll6/u;.<init>:(ILjava/lang/String;Ljava/lang/String;ZLl6/u$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3cb78c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ll6/u;.<init>:(ILjava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L3cb792.  return @kind void;
}
procedure `java.lang.String` `b`(`l6.u` v1 @kind this) @signature `Ll6/u;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cb6b4.  v0:= v1.`l6.u.c` @type ^`java.lang.String` @kind object;
  #L3cb6b8.  return v0 @kind object;
}
procedure `int` `c`(`l6.u` v1 @kind this) @signature `Ll6/u;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cb640.  v0:= v1.`l6.u.a` @type ^`int`;
  #L3cb644.  return v0;
}
procedure `java.lang.String` `d`(`l6.u` v1 @kind this) @signature `Ll6/u;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cb6cc.  v0:= v1.`l6.u.b` @type ^`java.lang.String` @kind object;
  #L3cb6d0.  return v0 @kind object;
}
procedure `boolean` `e`(`l6.u` v1 @kind this) @signature `Ll6/u;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cb628.  v0:= v1.`l6.u.d` @type ^`boolean` @kind boolean;
  #L3cb62c.  return v0;
}
procedure `boolean` `equals`(`l6.u` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ll6/u;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3cb5a8.  v0:= 1I;
  #L3cb5aa.  if v5 != v4 then goto L3cb5b0;
  #L3cb5ae.  return v0;
  #L3cb5b0.  v1:= instanceof @variable v5 @type ^`l6.a0$e$e` @kind boolean;
  #L3cb5b4.  v2:= 0I;
  #L3cb5b6.  if v1 == 0 then goto L3cb614;
  #L3cb5ba.  v5:= (`l6.a0$e$e`) v5 @kind object;
  #L3cb5be.  v1:= v4.`l6.u.a` @type ^`int`;
  #L3cb5c2.  call temp:= `c`(v5) @signature `Ll6/a0$e$e;.c:()I` @kind virtual;
  #L3cb5c8.  v3:= temp;
  #L3cb5ca.  if v1 != v3 then goto L3cb610;
  #L3cb5ce.  v1:= v4.`l6.u.b` @type ^`java.lang.String` @kind object;
  #L3cb5d2.  call temp:= `d`(v5) @signature `Ll6/a0$e$e;.d:()Ljava/lang/String;` @kind virtual;
  #L3cb5d8.  v3:= temp @kind object;
  #L3cb5da.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cb5e0.  v1:= temp;
  #L3cb5e2.  if v1 == 0 then goto L3cb610;
  #L3cb5e6.  v1:= v4.`l6.u.c` @type ^`java.lang.String` @kind object;
  #L3cb5ea.  call temp:= `b`(v5) @signature `Ll6/a0$e$e;.b:()Ljava/lang/String;` @kind virtual;
  #L3cb5f0.  v3:= temp @kind object;
  #L3cb5f2.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cb5f8.  v1:= temp;
  #L3cb5fa.  if v1 == 0 then goto L3cb610;
  #L3cb5fe.  v1:= v4.`l6.u.d` @type ^`boolean` @kind boolean;
  #L3cb602.  call temp:= `e`(v5) @signature `Ll6/a0$e$e;.e:()Z` @kind virtual;
  #L3cb608.  v5:= temp;
  #L3cb60a.  if v1 != v5 then goto L3cb610;
  #L3cb60e.  goto L3cb612;
  #L3cb610.  v0:= 0I;
  #L3cb612.  return v0;
  #L3cb614.  return v2;
}
procedure `int` `hashCode`(`l6.u` v3 @kind this) @signature `Ll6/u;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3cb658.  v0:= v3.`l6.u.a` @type ^`int`;
  #L3cb65c.  v1:= 1000003I;
  #L3cb662.  v0:= v0 ^~ v1 @kind int;
  #L3cb664.  v0:= v0 * v1 @kind int;
  #L3cb668.  v2:= v3.`l6.u.b` @type ^`java.lang.String` @kind object;
  #L3cb66c.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3cb672.  v2:= temp;
  #L3cb674.  v0:= v0 ^~ v2 @kind int;
  #L3cb676.  v0:= v0 * v1 @kind int;
  #L3cb67a.  v2:= v3.`l6.u.c` @type ^`java.lang.String` @kind object;
  #L3cb67e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3cb684.  v2:= temp;
  #L3cb686.  v0:= v0 ^~ v2 @kind int;
  #L3cb688.  v0:= v0 * v1 @kind int;
  #L3cb68c.  v1:= v3.`l6.u.d` @type ^`boolean` @kind boolean;
  #L3cb690.  if v1 == 0 then goto L3cb69a;
  #L3cb694.  v1:= 1231I;
  #L3cb698.  goto L3cb69e;
  #L3cb69a.  v1:= 1237I;
  #L3cb69e.  v0:= v0 ^~ v1 @kind int;
  #L3cb6a0.  return v0;
}
procedure `java.lang.String` `toString`(`l6.u` v2 @kind this) @signature `Ll6/u;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cb6e4.  v0:= new `java.lang.StringBuilder`;
  #L3cb6e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cb6ee.  v1:= "OperatingSystem{platform=" @kind object;
  #L3cb6f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb6f8.  v1:= v2.`l6.u.a` @type ^`int`;
  #L3cb6fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb702.  v1:= ", version=" @kind object;
  #L3cb706.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb70c.  v1:= v2.`l6.u.b` @type ^`java.lang.String` @kind object;
  #L3cb710.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb716.  v1:= ", buildVersion=" @kind object;
  #L3cb71a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb720.  v1:= v2.`l6.u.c` @type ^`java.lang.String` @kind object;
  #L3cb724.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb72a.  v1:= ", jailbroken=" @kind object;
  #L3cb72e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb734.  v1:= v2.`l6.u.d` @type ^`boolean` @kind boolean;
  #L3cb738.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb73e.  v1:= "}" @kind object;
  #L3cb742.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb748.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cb74e.  v0:= temp @kind object;
  #L3cb750.  return v0 @kind object;
}
