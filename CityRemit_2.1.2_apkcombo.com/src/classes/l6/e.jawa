record `l6.e` @kind class @AccessFlag FINAL extends `l6.a0$d` @kind class {
  `l6.b0` `l6.e.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.e.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l6.e` v0 @kind this, `l6.b0` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Ll6/e;.<init>:(Ll6/b0;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3c7c74.  call `<init>`(v0) @signature `Ll6/a0$d;.<init>:()V` @kind direct;
  #L3c7c7a.  v0.`l6.e.a` @type ^`l6.b0` := v1 @kind object;
  #L3c7c7e.  v0.`l6.e.b` @type ^`java.lang.String` := v2 @kind object;
  #L3c7c82.  return @kind void;
}
procedure `void` `<init>`(`l6.e` v0 @kind this, `l6.b0` v1 @kind object, `java.lang.String` v2 @kind object, `l6.e$a` v3 @kind object) @signature `Ll6/e;.<init>:(Ll6/b0;Ljava/lang/String;Ll6/e$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3c7c94.  call `<init>`(v0, v1, v2) @signature `Ll6/e;.<init>:(Ll6/b0;Ljava/lang/String;)V` @kind direct;
  #L3c7c9a.  return @kind void;
}
procedure `l6.b0` `b`(`l6.e` v1 @kind this) @signature `Ll6/e;.b:()Ll6/b0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c7c5c.  v0:= v1.`l6.e.a` @type ^`l6.b0` @kind object;
  #L3c7c60.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`l6.e` v1 @kind this) @signature `Ll6/e;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c7bec.  v0:= v1.`l6.e.b` @type ^`java.lang.String` @kind object;
  #L3c7bf0.  return v0 @kind object;
}
procedure `boolean` `equals`(`l6.e` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ll6/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c7b44.  v0:= 1I;
  #L3c7b46.  if v5 != v4 then goto L3c7b4c;
  #L3c7b4a.  return v0;
  #L3c7b4c.  v1:= instanceof @variable v5 @type ^`l6.a0$d` @kind boolean;
  #L3c7b50.  v2:= 0I;
  #L3c7b52.  if v1 == 0 then goto L3c7b9a;
  #L3c7b56.  v5:= (`l6.a0$d`) v5 @kind object;
  #L3c7b5a.  v1:= v4.`l6.e.a` @type ^`l6.b0` @kind object;
  #L3c7b5e.  call temp:= `b`(v5) @signature `Ll6/a0$d;.b:()Ll6/b0;` @kind virtual;
  #L3c7b64.  v3:= temp @kind object;
  #L3c7b66.  call temp:= `equals`(v1, v3) @signature `Ll6/b0;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c7b6c.  v1:= temp;
  #L3c7b6e.  if v1 == 0 then goto L3c7b96;
  #L3c7b72.  v1:= v4.`l6.e.b` @type ^`java.lang.String` @kind object;
  #L3c7b76.  call temp:= `c`(v5) @signature `Ll6/a0$d;.c:()Ljava/lang/String;` @kind virtual;
  #L3c7b7c.  v5:= temp @kind object;
  #L3c7b7e.  if v1 != 0 then goto L3c7b88;
  #L3c7b82.  if v5 != 0 then goto L3c7b96;
  #L3c7b86.  goto L3c7b98;
  #L3c7b88.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c7b8e.  v5:= temp;
  #L3c7b90.  if v5 == 0 then goto L3c7b96;
  #L3c7b94.  goto L3c7b98;
  #L3c7b96.  v0:= 0I;
  #L3c7b98.  return v0;
  #L3c7b9a.  return v2;
}
procedure `int` `hashCode`(`l6.e` v2 @kind this) @signature `Ll6/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c7bac.  v0:= v2.`l6.e.a` @type ^`l6.b0` @kind object;
  #L3c7bb0.  call temp:= `hashCode`(v0) @signature `Ll6/b0;.hashCode:()I` @kind virtual;
  #L3c7bb6.  v0:= temp;
  #L3c7bb8.  v1:= 1000003I;
  #L3c7bbe.  v0:= v0 ^~ v1 @kind int;
  #L3c7bc0.  v0:= v0 * v1 @kind int;
  #L3c7bc4.  v1:= v2.`l6.e.b` @type ^`java.lang.String` @kind object;
  #L3c7bc8.  if v1 != 0 then goto L3c7bd0;
  #L3c7bcc.  v1:= 0I;
  #L3c7bce.  goto L3c7bd8;
  #L3c7bd0.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3c7bd6.  v1:= temp;
  #L3c7bd8.  v0:= v0 ^~ v1 @kind int;
  #L3c7bda.  return v0;
}
procedure `java.lang.String` `toString`(`l6.e` v2 @kind this) @signature `Ll6/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c7c04.  v0:= new `java.lang.StringBuilder`;
  #L3c7c08.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c7c0e.  v1:= "FilesPayload{files=" @kind object;
  #L3c7c12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7c18.  v1:= v2.`l6.e.a` @type ^`l6.b0` @kind object;
  #L3c7c1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7c22.  v1:= ", orgId=" @kind object;
  #L3c7c26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7c2c.  v1:= v2.`l6.e.b` @type ^`java.lang.String` @kind object;
  #L3c7c30.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7c36.  v1:= "}" @kind object;
  #L3c7c3a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7c40.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c7c46.  v0:= temp @kind object;
  #L3c7c48.  return v0 @kind object;
}
