record `l6.a0` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `java.nio.charset.Charset` `@@l6.a0.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ll6/a0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3cd414.  v0:= "UTF-8" @kind object;
  #L3cd418.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3cd41e.  v0:= temp @kind object;
  #L3cd420.  `@@l6.a0.a` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L3cd424.  return @kind void;
}
procedure `void` `<init>`(`l6.a0` v0 @kind this) @signature `Ll6/a0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3cd438.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cd43e.  return @kind void;
}
procedure `java.nio.charset.Charset` `a`() @signature `Ll6/a0;.a:()Ljava/nio/charset/Charset;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L3cd310.  v0:= `@@l6.a0.a` @type ^`java.nio.charset.Charset` @kind object;
  #L3cd314.  return v0 @kind object;
}
procedure `l6.a0$b` `b`() @signature `Ll6/a0;.b:()Ll6/a0$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cd3f8.  v0:= new `l6.b$b`;
  #L3cd3fc.  call `<init>`(v0) @signature `Ll6/b$b;.<init>:()V` @kind direct;
  #L3cd402.  return v0 @kind object;
}
procedure `java.lang.String` `c`() @signature `Ll6/a0;.c:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `d`() @signature `Ll6/a0;.d:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `e`() @signature `Ll6/a0;.e:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `f`() @signature `Ll6/a0;.f:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `l6.a0$d` `g`() @signature `Ll6/a0;.g:()Ll6/a0$d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `h`() @signature `Ll6/a0;.h:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `i`() @signature `Ll6/a0;.i:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `l6.a0$e` `j`() @signature `Ll6/a0;.j:()Ll6/a0$e;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `l6.a0$b` `k`() @signature `Ll6/a0;.k:()Ll6/a0$b;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `l6.a0` `l`(`l6.a0` v2 @kind this, `l6.b0` v3 @kind object) @signature `Ll6/a0;.l:(Ll6/b0;)Ll6/a0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cd328.  call temp:= `j`(v2) @signature `Ll6/a0;.j:()Ll6/a0$e;` @kind virtual;
  #L3cd32e.  v0:= temp @kind object;
  #L3cd330.  if v0 == 0 then goto L3cd35e;
  #L3cd334.  call temp:= `k`(v2) @signature `Ll6/a0;.k:()Ll6/a0$b;` @kind virtual;
  #L3cd33a.  v0:= temp @kind object;
  #L3cd33c.  call temp:= `j`(v2) @signature `Ll6/a0;.j:()Ll6/a0$e;` @kind virtual;
  #L3cd342.  v1:= temp @kind object;
  #L3cd344.  call temp:= `o`(v1, v3) @signature `Ll6/a0$e;.o:(Ll6/b0;)Ll6/a0$e;` @kind virtual;
  #L3cd34a.  v3:= temp @kind object;
  #L3cd34c.  call temp:= `i`(v0, v3) @signature `Ll6/a0$b;.i:(Ll6/a0$e;)Ll6/a0$b;` @kind virtual;
  #L3cd352.  v3:= temp @kind object;
  #L3cd354.  call temp:= `a`(v3) @signature `Ll6/a0$b;.a:()Ll6/a0;` @kind virtual;
  #L3cd35a.  v3:= temp @kind object;
  #L3cd35c.  return v3 @kind object;
  #L3cd35e.  v3:= new `java.lang.IllegalStateException`;
  #L3cd362.  v0:= "Reports without sessions cannot have events added to them." @kind object;
  #L3cd366.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cd36c.  throw v3;
}
procedure `l6.a0` `m`(`l6.a0` v2 @kind this, `l6.a0$d` v3 @kind object) @signature `Ll6/a0;.m:(Ll6/a0$d;)Ll6/a0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cd380.  call temp:= `k`(v2) @signature `Ll6/a0;.k:()Ll6/a0$b;` @kind virtual;
  #L3cd386.  v0:= temp @kind object;
  #L3cd388.  v1:= 0I;
  #L3cd38a.  call temp:= `i`(v0, v1) @signature `Ll6/a0$b;.i:(Ll6/a0$e;)Ll6/a0$b;` @kind virtual;
  #L3cd390.  v0:= temp @kind object;
  #L3cd392.  call temp:= `f`(v0, v3) @signature `Ll6/a0$b;.f:(Ll6/a0$d;)Ll6/a0$b;` @kind virtual;
  #L3cd398.  v3:= temp @kind object;
  #L3cd39a.  call temp:= `a`(v3) @signature `Ll6/a0$b;.a:()Ll6/a0;` @kind virtual;
  #L3cd3a0.  v3:= temp @kind object;
  #L3cd3a2.  return v3 @kind object;
}
procedure `l6.a0` `n`(`l6.a0` v2 @kind this, `long` v3 , `boolean` v5 , `java.lang.String` v6 @kind object) @signature `Ll6/a0;.n:(JZLjava/lang/String;)Ll6/a0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cd3b4.  call temp:= `k`(v2) @signature `Ll6/a0;.k:()Ll6/a0$b;` @kind virtual;
  #L3cd3ba.  v0:= temp @kind object;
  #L3cd3bc.  call temp:= `j`(v2) @signature `Ll6/a0;.j:()Ll6/a0$e;` @kind virtual;
  #L3cd3c2.  v1:= temp @kind object;
  #L3cd3c4.  if v1 == 0 then goto L3cd3de;
  #L3cd3c8.  call temp:= `j`(v2) @signature `Ll6/a0;.j:()Ll6/a0$e;` @kind virtual;
  #L3cd3ce.  v1:= temp @kind object;
  #L3cd3d0.  call temp:= `p`(v1, v3, v5, v6) @signature `Ll6/a0$e;.p:(JZLjava/lang/String;)Ll6/a0$e;` @kind virtual;
  #L3cd3d6.  v3:= temp @kind object;
  #L3cd3d8.  call temp:= `i`(v0, v3) @signature `Ll6/a0$b;.i:(Ll6/a0$e;)Ll6/a0$b;` @kind virtual;
  #L3cd3de.  call temp:= `a`(v0) @signature `Ll6/a0$b;.a:()Ll6/a0;` @kind virtual;
  #L3cd3e4.  v3:= temp @kind object;
  #L3cd3e6.  return v3 @kind object;
}
