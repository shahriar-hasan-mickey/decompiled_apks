record `l6.j$b` @kind class @AccessFlag FINAL extends `l6.a0$e$c$a` @kind class {
  `java.lang.Integer` `l6.j$b.a` @AccessFlag PRIVATE;
  `java.lang.String` `l6.j$b.b` @AccessFlag PRIVATE;
  `java.lang.Integer` `l6.j$b.c` @AccessFlag PRIVATE;
  `java.lang.Long` `l6.j$b.d` @AccessFlag PRIVATE;
  `java.lang.Long` `l6.j$b.e` @AccessFlag PRIVATE;
  `java.lang.Boolean` `l6.j$b.f` @AccessFlag PRIVATE;
  `java.lang.Integer` `l6.j$b.g` @AccessFlag PRIVATE;
  `java.lang.String` `l6.j$b.h` @AccessFlag PRIVATE;
  `java.lang.String` `l6.j$b.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`l6.j$b` v0 @kind this) @signature `Ll6/j$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3c8998.  call `<init>`(v0) @signature `Ll6/a0$e$c$a;.<init>:()V` @kind direct;
  #L3c899e.  return @kind void;
}
procedure `l6.a0$e$c` `a`(`l6.j$b` v15 @kind this) @signature `Ll6/j$b;.a:()Ll6/a0$e$c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L3c864c.  v0:= v15.`l6.j$b.a` @type ^`java.lang.Integer` @kind object;
  #L3c8650.  v1:= "" @kind object;
  #L3c8654.  if v0 != 0 then goto L3c867a;
  #L3c8658.  v0:= new `java.lang.StringBuilder`;
  #L3c865c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c8662.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8668.  v1:= " arch" @kind object;
  #L3c866c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8672.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c8678.  v1:= temp @kind object;
  #L3c867a.  v0:= v15.`l6.j$b.b` @type ^`java.lang.String` @kind object;
  #L3c867e.  if v0 != 0 then goto L3c86a4;
  #L3c8682.  v0:= new `java.lang.StringBuilder`;
  #L3c8686.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c868c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8692.  v1:= " model" @kind object;
  #L3c8696.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c869c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c86a2.  v1:= temp @kind object;
  #L3c86a4.  v0:= v15.`l6.j$b.c` @type ^`java.lang.Integer` @kind object;
  #L3c86a8.  if v0 != 0 then goto L3c86ce;
  #L3c86ac.  v0:= new `java.lang.StringBuilder`;
  #L3c86b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c86b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c86bc.  v1:= " cores" @kind object;
  #L3c86c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c86c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c86cc.  v1:= temp @kind object;
  #L3c86ce.  v0:= v15.`l6.j$b.d` @type ^`java.lang.Long` @kind object;
  #L3c86d2.  if v0 != 0 then goto L3c86f8;
  #L3c86d6.  v0:= new `java.lang.StringBuilder`;
  #L3c86da.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c86e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c86e6.  v1:= " ram" @kind object;
  #L3c86ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c86f0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c86f6.  v1:= temp @kind object;
  #L3c86f8.  v0:= v15.`l6.j$b.e` @type ^`java.lang.Long` @kind object;
  #L3c86fc.  if v0 != 0 then goto L3c8722;
  #L3c8700.  v0:= new `java.lang.StringBuilder`;
  #L3c8704.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c870a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8710.  v1:= " diskSpace" @kind object;
  #L3c8714.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c871a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c8720.  v1:= temp @kind object;
  #L3c8722.  v0:= v15.`l6.j$b.f` @type ^`java.lang.Boolean` @kind object;
  #L3c8726.  if v0 != 0 then goto L3c874c;
  #L3c872a.  v0:= new `java.lang.StringBuilder`;
  #L3c872e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c8734.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c873a.  v1:= " simulator" @kind object;
  #L3c873e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8744.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c874a.  v1:= temp @kind object;
  #L3c874c.  v0:= v15.`l6.j$b.g` @type ^`java.lang.Integer` @kind object;
  #L3c8750.  if v0 != 0 then goto L3c8776;
  #L3c8754.  v0:= new `java.lang.StringBuilder`;
  #L3c8758.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c875e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8764.  v1:= " state" @kind object;
  #L3c8768.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c876e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c8774.  v1:= temp @kind object;
  #L3c8776.  v0:= v15.`l6.j$b.h` @type ^`java.lang.String` @kind object;
  #L3c877a.  if v0 != 0 then goto L3c87a0;
  #L3c877e.  v0:= new `java.lang.StringBuilder`;
  #L3c8782.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c8788.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c878e.  v1:= " manufacturer" @kind object;
  #L3c8792.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8798.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c879e.  v1:= temp @kind object;
  #L3c87a0.  v0:= v15.`l6.j$b.i` @type ^`java.lang.String` @kind object;
  #L3c87a4.  if v0 != 0 then goto L3c87ca;
  #L3c87a8.  v0:= new `java.lang.StringBuilder`;
  #L3c87ac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c87b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c87b8.  v1:= " modelClass" @kind object;
  #L3c87bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c87c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c87c8.  v1:= temp @kind object;
  #L3c87ca.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3c87d0.  v0:= temp;
  #L3c87d2.  if v0 == 0 then goto L3c883a;
  #L3c87d6.  v0:= new `l6.j`;
  #L3c87da.  v1:= v15.`l6.j$b.a` @type ^`java.lang.Integer` @kind object;
  #L3c87de.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3c87e4.  v3:= temp;
  #L3c87e6.  v4:= v15.`l6.j$b.b` @type ^`java.lang.String` @kind object;
  #L3c87ea.  v1:= v15.`l6.j$b.c` @type ^`java.lang.Integer` @kind object;
  #L3c87ee.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3c87f4.  v5:= temp;
  #L3c87f6.  v1:= v15.`l6.j$b.d` @type ^`java.lang.Long` @kind object;
  #L3c87fa.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3c8800.  v6:= temp @kind wide;
  #L3c8802.  v1:= v15.`l6.j$b.e` @type ^`java.lang.Long` @kind object;
  #L3c8806.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3c880c.  v8:= temp @kind wide;
  #L3c880e.  v1:= v15.`l6.j$b.f` @type ^`java.lang.Boolean` @kind object;
  #L3c8812.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3c8818.  v10:= temp;
  #L3c881a.  v1:= v15.`l6.j$b.g` @type ^`java.lang.Integer` @kind object;
  #L3c881e.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3c8824.  v11:= temp;
  #L3c8826.  v12:= v15.`l6.j$b.h` @type ^`java.lang.String` @kind object;
  #L3c882a.  v13:= v15.`l6.j$b.i` @type ^`java.lang.String` @kind object;
  #L3c882e.  v14:= 0I;
  #L3c8830.  v2:= v0 @kind object;
  #L3c8832.  call `<init>`(v2, v3, v4, v5, v6, v8, v10, v11, v12, v13, v14) @signature `Ll6/j;.<init>:(ILjava/lang/String;IJJZILjava/lang/String;Ljava/lang/String;Ll6/j$a;)V` @kind direct;
  #L3c8838.  return v0 @kind object;
  #L3c883a.  v0:= new `java.lang.IllegalStateException`;
  #L3c883e.  v2:= new `java.lang.StringBuilder`;
  #L3c8842.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c8848.  v3:= "Missing required properties:" @kind object;
  #L3c884c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8852.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8858.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c885e.  v1:= temp @kind object;
  #L3c8860.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c8866.  throw v0;
}
procedure `l6.a0$e$c$a` `b`(`l6.j$b` v0 @kind this, `int` v1 ) @signature `Ll6/j$b;.b:(I)Ll6/a0$e$c$a;` @AccessFlag PUBLIC {
    temp;

  #L3c8878.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3c887e.  v1:= temp @kind object;
  #L3c8880.  v0.`l6.j$b.a` @type ^`java.lang.Integer` := v1 @kind object;
  #L3c8884.  return v0 @kind object;
}
procedure `l6.a0$e$c$a` `c`(`l6.j$b` v0 @kind this, `int` v1 ) @signature `Ll6/j$b;.c:(I)Ll6/a0$e$c$a;` @AccessFlag PUBLIC {
    temp;

  #L3c8898.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3c889e.  v1:= temp @kind object;
  #L3c88a0.  v0.`l6.j$b.c` @type ^`java.lang.Integer` := v1 @kind object;
  #L3c88a4.  return v0 @kind object;
}
procedure `l6.a0$e$c$a` `d`(`l6.j$b` v0 @kind this, `long` v1 ) @signature `Ll6/j$b;.d:(J)Ll6/a0$e$c$a;` @AccessFlag PUBLIC {
    temp;

  #L3c88b8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3c88be.  v1:= temp @kind object;
  #L3c88c0.  v0.`l6.j$b.e` @type ^`java.lang.Long` := v1 @kind object;
  #L3c88c4.  return v0 @kind object;
}
procedure `l6.a0$e$c$a` `e`(`l6.j$b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Ll6/j$b;.e:(Ljava/lang/String;)Ll6/a0$e$c$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c88d8.  v0:= "Null manufacturer" @kind object;
  #L3c88dc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3c88e2.  v1.`l6.j$b.h` @type ^`java.lang.String` := v2 @kind object;
  #L3c88e6.  return v1 @kind object;
}
procedure `l6.a0$e$c$a` `f`(`l6.j$b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Ll6/j$b;.f:(Ljava/lang/String;)Ll6/a0$e$c$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c88f8.  v0:= "Null model" @kind object;
  #L3c88fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3c8902.  v1.`l6.j$b.b` @type ^`java.lang.String` := v2 @kind object;
  #L3c8906.  return v1 @kind object;
}
procedure `l6.a0$e$c$a` `g`(`l6.j$b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Ll6/j$b;.g:(Ljava/lang/String;)Ll6/a0$e$c$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c8918.  v0:= "Null modelClass" @kind object;
  #L3c891c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3c8922.  v1.`l6.j$b.i` @type ^`java.lang.String` := v2 @kind object;
  #L3c8926.  return v1 @kind object;
}
procedure `l6.a0$e$c$a` `h`(`l6.j$b` v0 @kind this, `long` v1 ) @signature `Ll6/j$b;.h:(J)Ll6/a0$e$c$a;` @AccessFlag PUBLIC {
    temp;

  #L3c8938.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3c893e.  v1:= temp @kind object;
  #L3c8940.  v0.`l6.j$b.d` @type ^`java.lang.Long` := v1 @kind object;
  #L3c8944.  return v0 @kind object;
}
procedure `l6.a0$e$c$a` `i`(`l6.j$b` v0 @kind this, `boolean` v1 ) @signature `Ll6/j$b;.i:(Z)Ll6/a0$e$c$a;` @AccessFlag PUBLIC {
    temp;

  #L3c8958.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3c895e.  v1:= temp @kind object;
  #L3c8960.  v0.`l6.j$b.f` @type ^`java.lang.Boolean` := v1 @kind object;
  #L3c8964.  return v0 @kind object;
}
procedure `l6.a0$e$c$a` `j`(`l6.j$b` v0 @kind this, `int` v1 ) @signature `Ll6/j$b;.j:(I)Ll6/a0$e$c$a;` @AccessFlag PUBLIC {
    temp;

  #L3c8978.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3c897e.  v1:= temp @kind object;
  #L3c8980.  v0.`l6.j$b.g` @type ^`java.lang.Integer` := v1 @kind object;
  #L3c8984.  return v0 @kind object;
}
