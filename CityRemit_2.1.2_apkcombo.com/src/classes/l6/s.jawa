record `l6.s` @kind class @AccessFlag FINAL extends `l6.a0$e$d$c` @kind class {
  `java.lang.Double` `l6.s.a` @AccessFlag PRIVATE_FINAL;
  `int` `l6.s.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `l6.s.c` @AccessFlag PRIVATE_FINAL;
  `int` `l6.s.d` @AccessFlag PRIVATE_FINAL;
  `long` `l6.s.e` @AccessFlag PRIVATE_FINAL;
  `long` `l6.s.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l6.s` v0 @kind this, `java.lang.Double` v1 @kind object, `int` v2 , `boolean` v3 , `int` v4 , `long` v5 , `long` v7 ) @signature `Ll6/s;.<init>:(Ljava/lang/Double;IZIJJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3caf4c.  call `<init>`(v0) @signature `Ll6/a0$e$d$c;.<init>:()V` @kind direct;
  #L3caf52.  v0.`l6.s.a` @type ^`java.lang.Double` := v1 @kind object;
  #L3caf56.  v0.`l6.s.b` @type ^`int` := v2;
  #L3caf5a.  v0.`l6.s.c` @type ^`boolean` := v3 @kind boolean;
  #L3caf5e.  v0.`l6.s.d` @type ^`int` := v4;
  #L3caf62.  v0.`l6.s.e` @type ^`long` := v5 @kind wide;
  #L3caf66.  v0.`l6.s.f` @type ^`long` := v7 @kind wide;
  #L3caf6a.  return @kind void;
}
procedure `void` `<init>`(`l6.s` v0 @kind this, `java.lang.Double` v1 @kind object, `int` v2 , `boolean` v3 , `int` v4 , `long` v5 , `long` v7 , `l6.s$a` v9 @kind object) @signature `Ll6/s;.<init>:(Ljava/lang/Double;IZIJJLl6/s$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3caf7c.  call `<init>`(v0, v1, v2, v3, v4, v5, v7) @signature `Ll6/s;.<init>:(Ljava/lang/Double;IZIJJ)V` @kind direct;
  #L3caf82.  return @kind void;
}
procedure `java.lang.Double` `b`(`l6.s` v1 @kind this) @signature `Ll6/s;.b:()Ljava/lang/Double;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cae5c.  v0:= v1.`l6.s.a` @type ^`java.lang.Double` @kind object;
  #L3cae60.  return v0 @kind object;
}
procedure `int` `c`(`l6.s` v1 @kind this) @signature `Ll6/s;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cada8.  v0:= v1.`l6.s.b` @type ^`int`;
  #L3cadac.  return v0;
}
procedure `long` `d`(`l6.s` v2 @kind this) @signature `Ll6/s;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3caf1c.  v0:= v2.`l6.s.f` @type ^`long` @kind wide;
  #L3caf20.  return v0 @kind wide;
}
procedure `int` `e`(`l6.s` v1 @kind this) @signature `Ll6/s;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cadc0.  v0:= v1.`l6.s.d` @type ^`int`;
  #L3cadc4.  return v0;
}
procedure `boolean` `equals`(`l6.s` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Ll6/s;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3cace0.  v0:= 1I;
  #L3cace2.  if v8 != v7 then goto L3cace8;
  #L3cace6.  return v0;
  #L3cace8.  v1:= instanceof @variable v8 @type ^`l6.a0$e$d$c` @kind boolean;
  #L3cacec.  v2:= 0I;
  #L3cacee.  if v1 == 0 then goto L3cad7e;
  #L3cacf2.  v8:= (`l6.a0$e$d$c`) v8 @kind object;
  #L3cacf6.  v1:= v7.`l6.s.a` @type ^`java.lang.Double` @kind object;
  #L3cacfa.  if v1 != 0 then goto L3cad0c;
  #L3cacfe.  call temp:= `b`(v8) @signature `Ll6/a0$e$d$c;.b:()Ljava/lang/Double;` @kind virtual;
  #L3cad04.  v1:= temp @kind object;
  #L3cad06.  if v1 != 0 then goto L3cad7a;
  #L3cad0a.  goto L3cad20;
  #L3cad0c.  call temp:= `b`(v8) @signature `Ll6/a0$e$d$c;.b:()Ljava/lang/Double;` @kind virtual;
  #L3cad12.  v3:= temp @kind object;
  #L3cad14.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Double;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cad1a.  v1:= temp;
  #L3cad1c.  if v1 == 0 then goto L3cad7a;
  #L3cad20.  v1:= v7.`l6.s.b` @type ^`int`;
  #L3cad24.  call temp:= `c`(v8) @signature `Ll6/a0$e$d$c;.c:()I` @kind virtual;
  #L3cad2a.  v3:= temp;
  #L3cad2c.  if v1 != v3 then goto L3cad7a;
  #L3cad30.  v1:= v7.`l6.s.c` @type ^`boolean` @kind boolean;
  #L3cad34.  call temp:= `g`(v8) @signature `Ll6/a0$e$d$c;.g:()Z` @kind virtual;
  #L3cad3a.  v3:= temp;
  #L3cad3c.  if v1 != v3 then goto L3cad7a;
  #L3cad40.  v1:= v7.`l6.s.d` @type ^`int`;
  #L3cad44.  call temp:= `e`(v8) @signature `Ll6/a0$e$d$c;.e:()I` @kind virtual;
  #L3cad4a.  v3:= temp;
  #L3cad4c.  if v1 != v3 then goto L3cad7a;
  #L3cad50.  v3:= v7.`l6.s.e` @type ^`long` @kind wide;
  #L3cad54.  call temp:= `f`(v8) @signature `Ll6/a0$e$d$c;.f:()J` @kind virtual;
  #L3cad5a.  v5:= temp @kind wide;
  #L3cad5c.  v1:= lcmp(v3, v5);
  #L3cad60.  if v1 != 0 then goto L3cad7a;
  #L3cad64.  v3:= v7.`l6.s.f` @type ^`long` @kind wide;
  #L3cad68.  call temp:= `d`(v8) @signature `Ll6/a0$e$d$c;.d:()J` @kind virtual;
  #L3cad6e.  v5:= temp @kind wide;
  #L3cad70.  v8:= lcmp(v3, v5);
  #L3cad74.  if v8 != 0 then goto L3cad7a;
  #L3cad78.  goto L3cad7c;
  #L3cad7a.  v0:= 0I;
  #L3cad7c.  return v0;
  #L3cad7e.  return v2;
}
procedure `long` `f`(`l6.s` v2 @kind this) @signature `Ll6/s;.f:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3caf34.  v0:= v2.`l6.s.e` @type ^`long` @kind wide;
  #L3caf38.  return v0 @kind wide;
}
procedure `boolean` `g`(`l6.s` v1 @kind this) @signature `Ll6/s;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cad90.  v0:= v1.`l6.s.c` @type ^`boolean` @kind boolean;
  #L3cad94.  return v0;
}
procedure `int` `hashCode`(`l6.s` v7 @kind this) @signature `Ll6/s;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3cadd8.  v0:= v7.`l6.s.a` @type ^`java.lang.Double` @kind object;
  #L3caddc.  if v0 != 0 then goto L3cade4;
  #L3cade0.  v0:= 0I;
  #L3cade2.  goto L3cadec;
  #L3cade4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Double;.hashCode:()I` @kind virtual;
  #L3cadea.  v0:= temp;
  #L3cadec.  v1:= 1000003I;
  #L3cadf2.  v0:= v0 ^~ v1 @kind int;
  #L3cadf4.  v0:= v0 * v1 @kind int;
  #L3cadf8.  v2:= v7.`l6.s.b` @type ^`int`;
  #L3cadfc.  v0:= v0 ^~ v2 @kind int;
  #L3cadfe.  v0:= v0 * v1 @kind int;
  #L3cae02.  v2:= v7.`l6.s.c` @type ^`boolean` @kind boolean;
  #L3cae06.  if v2 == 0 then goto L3cae10;
  #L3cae0a.  v2:= 1231I;
  #L3cae0e.  goto L3cae14;
  #L3cae10.  v2:= 1237I;
  #L3cae14.  v0:= v0 ^~ v2 @kind int;
  #L3cae16.  v0:= v0 * v1 @kind int;
  #L3cae1a.  v2:= v7.`l6.s.d` @type ^`int`;
  #L3cae1e.  v0:= v0 ^~ v2 @kind int;
  #L3cae20.  v0:= v0 * v1 @kind int;
  #L3cae24.  v2:= v7.`l6.s.e` @type ^`long` @kind wide;
  #L3cae28.  v4:= 32I;
  #L3cae2c.  v5:= v2 ^>> v4 @kind long;
  #L3cae30.  v2:= v2 ^~ v5 @kind long;
  #L3cae32.  v3:= (`int`) v2 @kind l2i;
  #L3cae34.  v0:= v0 ^~ v3 @kind int;
  #L3cae36.  v0:= v0 * v1 @kind int;
  #L3cae3a.  v1:= v7.`l6.s.f` @type ^`long` @kind wide;
  #L3cae3e.  v3:= v1 ^>> v4 @kind long;
  #L3cae42.  v1:= v1 ^~ v3 @kind long;
  #L3cae44.  v2:= (`int`) v1 @kind l2i;
  #L3cae46.  v0:= v0 ^~ v2 @kind int;
  #L3cae48.  return v0;
}
procedure `java.lang.String` `toString`(`l6.s` v3 @kind this) @signature `Ll6/s;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3cae74.  v0:= new `java.lang.StringBuilder`;
  #L3cae78.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cae7e.  v1:= "Device{batteryLevel=" @kind object;
  #L3cae82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cae88.  v1:= v3.`l6.s.a` @type ^`java.lang.Double` @kind object;
  #L3cae8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cae92.  v1:= ", batteryVelocity=" @kind object;
  #L3cae96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cae9c.  v1:= v3.`l6.s.b` @type ^`int`;
  #L3caea0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3caea6.  v1:= ", proximityOn=" @kind object;
  #L3caeaa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3caeb0.  v1:= v3.`l6.s.c` @type ^`boolean` @kind boolean;
  #L3caeb4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3caeba.  v1:= ", orientation=" @kind object;
  #L3caebe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3caec4.  v1:= v3.`l6.s.d` @type ^`int`;
  #L3caec8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3caece.  v1:= ", ramUsed=" @kind object;
  #L3caed2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3caed8.  v1:= v3.`l6.s.e` @type ^`long` @kind wide;
  #L3caedc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3caee2.  v1:= ", diskUsed=" @kind object;
  #L3caee6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3caeec.  v1:= v3.`l6.s.f` @type ^`long` @kind wide;
  #L3caef0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3caef6.  v1:= "}" @kind object;
  #L3caefa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3caf00.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3caf06.  v0:= temp @kind object;
  #L3caf08.  return v0 @kind object;
}
