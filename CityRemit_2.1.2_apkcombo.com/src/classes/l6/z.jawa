record `l6.z` @kind class @AccessFlag FINAL extends `l6.c0$c` @kind class {
  `java.lang.String` `l6.z.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.z.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `l6.z.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l6.z` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Ll6/z;.<init>:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3cca00.  call `<init>`(v1) @signature `Ll6/c0$c;.<init>:()V` @kind direct;
  #L3cca06.  v0:= "Null osRelease" @kind object;
  #L3cca0a.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cca10.  v1.`l6.z.a` @type ^`java.lang.String` := v2 @kind object;
  #L3cca14.  v2:= "Null osCodeName" @kind object;
  #L3cca18.  call temp:= `requireNonNull`(v3, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3cca1e.  v1.`l6.z.b` @type ^`java.lang.String` := v3 @kind object;
  #L3cca22.  v1.`l6.z.c` @type ^`boolean` := v4 @kind boolean;
  #L3cca26.  return @kind void;
}
procedure `boolean` `b`(`l6.z` v1 @kind this) @signature `Ll6/z;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc8fc.  v0:= v1.`l6.z.c` @type ^`boolean` @kind boolean;
  #L3cc900.  return v0;
}
procedure `java.lang.String` `c`(`l6.z` v1 @kind this) @signature `Ll6/z;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc964.  v0:= v1.`l6.z.b` @type ^`java.lang.String` @kind object;
  #L3cc968.  return v0 @kind object;
}
procedure `java.lang.String` `d`(`l6.z` v1 @kind this) @signature `Ll6/z;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc97c.  v0:= v1.`l6.z.a` @type ^`java.lang.String` @kind object;
  #L3cc980.  return v0 @kind object;
}
procedure `boolean` `equals`(`l6.z` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ll6/z;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3cc88c.  v0:= 1I;
  #L3cc88e.  if v5 != v4 then goto L3cc894;
  #L3cc892.  return v0;
  #L3cc894.  v1:= instanceof @variable v5 @type ^`l6.c0$c` @kind boolean;
  #L3cc898.  v2:= 0I;
  #L3cc89a.  if v1 == 0 then goto L3cc8e8;
  #L3cc89e.  v5:= (`l6.c0$c`) v5 @kind object;
  #L3cc8a2.  v1:= v4.`l6.z.a` @type ^`java.lang.String` @kind object;
  #L3cc8a6.  call temp:= `d`(v5) @signature `Ll6/c0$c;.d:()Ljava/lang/String;` @kind virtual;
  #L3cc8ac.  v3:= temp @kind object;
  #L3cc8ae.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cc8b4.  v1:= temp;
  #L3cc8b6.  if v1 == 0 then goto L3cc8e4;
  #L3cc8ba.  v1:= v4.`l6.z.b` @type ^`java.lang.String` @kind object;
  #L3cc8be.  call temp:= `c`(v5) @signature `Ll6/c0$c;.c:()Ljava/lang/String;` @kind virtual;
  #L3cc8c4.  v3:= temp @kind object;
  #L3cc8c6.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cc8cc.  v1:= temp;
  #L3cc8ce.  if v1 == 0 then goto L3cc8e4;
  #L3cc8d2.  v1:= v4.`l6.z.c` @type ^`boolean` @kind boolean;
  #L3cc8d6.  call temp:= `b`(v5) @signature `Ll6/c0$c;.b:()Z` @kind virtual;
  #L3cc8dc.  v5:= temp;
  #L3cc8de.  if v1 != v5 then goto L3cc8e4;
  #L3cc8e2.  goto L3cc8e6;
  #L3cc8e4.  v0:= 0I;
  #L3cc8e6.  return v0;
  #L3cc8e8.  return v2;
}
procedure `int` `hashCode`(`l6.z` v3 @kind this) @signature `Ll6/z;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3cc914.  v0:= v3.`l6.z.a` @type ^`java.lang.String` @kind object;
  #L3cc918.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3cc91e.  v0:= temp;
  #L3cc920.  v1:= 1000003I;
  #L3cc926.  v0:= v0 ^~ v1 @kind int;
  #L3cc928.  v0:= v0 * v1 @kind int;
  #L3cc92c.  v2:= v3.`l6.z.b` @type ^`java.lang.String` @kind object;
  #L3cc930.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3cc936.  v2:= temp;
  #L3cc938.  v0:= v0 ^~ v2 @kind int;
  #L3cc93a.  v0:= v0 * v1 @kind int;
  #L3cc93e.  v1:= v3.`l6.z.c` @type ^`boolean` @kind boolean;
  #L3cc942.  if v1 == 0 then goto L3cc94c;
  #L3cc946.  v1:= 1231I;
  #L3cc94a.  goto L3cc950;
  #L3cc94c.  v1:= 1237I;
  #L3cc950.  v0:= v0 ^~ v1 @kind int;
  #L3cc952.  return v0;
}
procedure `java.lang.String` `toString`(`l6.z` v2 @kind this) @signature `Ll6/z;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cc994.  v0:= new `java.lang.StringBuilder`;
  #L3cc998.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cc99e.  v1:= "OsData{osRelease=" @kind object;
  #L3cc9a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc9a8.  v1:= v2.`l6.z.a` @type ^`java.lang.String` @kind object;
  #L3cc9ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc9b2.  v1:= ", osCodeName=" @kind object;
  #L3cc9b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc9bc.  v1:= v2.`l6.z.b` @type ^`java.lang.String` @kind object;
  #L3cc9c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc9c6.  v1:= ", isRooted=" @kind object;
  #L3cc9ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc9d0.  v1:= v2.`l6.z.c` @type ^`boolean` @kind boolean;
  #L3cc9d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc9da.  v1:= "}" @kind object;
  #L3cc9de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc9e4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cc9ea.  v0:= temp @kind object;
  #L3cc9ec.  return v0 @kind object;
}
