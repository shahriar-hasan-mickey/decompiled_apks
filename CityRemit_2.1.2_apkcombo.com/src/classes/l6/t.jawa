record `l6.t` @kind class @AccessFlag FINAL extends `l6.a0$e$d$d` @kind class {
  `java.lang.String` `l6.t.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l6.t` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Ll6/t;.<init>:(Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3cb11c.  call `<init>`(v0) @signature `Ll6/a0$e$d$d;.<init>:()V` @kind direct;
  #L3cb122.  v0.`l6.t.a` @type ^`java.lang.String` := v1 @kind object;
  #L3cb126.  return @kind void;
}
procedure `void` `<init>`(`l6.t` v0 @kind this, `java.lang.String` v1 @kind object, `l6.t$a` v2 @kind object) @signature `Ll6/t;.<init>:(Ljava/lang/String;Ll6/t$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3cb138.  call `<init>`(v0, v1) @signature `Ll6/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cb13e.  return @kind void;
}
procedure `java.lang.String` `b`(`l6.t` v1 @kind this) @signature `Ll6/t;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cb0c0.  v0:= v1.`l6.t.a` @type ^`java.lang.String` @kind object;
  #L3cb0c4.  return v0 @kind object;
}
procedure `boolean` `equals`(`l6.t` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ll6/t;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cb058.  if v2 != v1 then goto L3cb060;
  #L3cb05c.  v2:= 1I;
  #L3cb05e.  return v2;
  #L3cb060.  v0:= instanceof @variable v2 @type ^`l6.a0$e$d$d` @kind boolean;
  #L3cb064.  if v0 == 0 then goto L3cb082;
  #L3cb068.  v2:= (`l6.a0$e$d$d`) v2 @kind object;
  #L3cb06c.  v0:= v1.`l6.t.a` @type ^`java.lang.String` @kind object;
  #L3cb070.  call temp:= `b`(v2) @signature `Ll6/a0$e$d$d;.b:()Ljava/lang/String;` @kind virtual;
  #L3cb076.  v2:= temp @kind object;
  #L3cb078.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cb07e.  v2:= temp;
  #L3cb080.  return v2;
  #L3cb082.  v2:= 0I;
  #L3cb084.  return v2;
}
procedure `int` `hashCode`(`l6.t` v2 @kind this) @signature `Ll6/t;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cb098.  v0:= v2.`l6.t.a` @type ^`java.lang.String` @kind object;
  #L3cb09c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3cb0a2.  v0:= temp;
  #L3cb0a4.  v1:= 1000003I;
  #L3cb0aa.  v0:= v0 ^~ v1 @kind int;
  #L3cb0ac.  return v0;
}
procedure `java.lang.String` `toString`(`l6.t` v2 @kind this) @signature `Ll6/t;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cb0d8.  v0:= new `java.lang.StringBuilder`;
  #L3cb0dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cb0e2.  v1:= "Log{content=" @kind object;
  #L3cb0e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb0ec.  v1:= v2.`l6.t.a` @type ^`java.lang.String` @kind object;
  #L3cb0f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb0f6.  v1:= "}" @kind object;
  #L3cb0fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb100.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cb106.  v0:= temp @kind object;
  #L3cb108.  return v0 @kind object;
}
