record `l6.p` @kind class @AccessFlag FINAL extends `l6.a0$e$d$a$b$d` @kind class {
  `java.lang.String` `l6.p.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.p.b` @AccessFlag PRIVATE_FINAL;
  `long` `l6.p.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l6.p` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `long` v3 ) @signature `Ll6/p;.<init>:(Ljava/lang/String;Ljava/lang/String;J)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3c9d90.  call `<init>`(v0) @signature `Ll6/a0$e$d$a$b$d;.<init>:()V` @kind direct;
  #L3c9d96.  v0.`l6.p.a` @type ^`java.lang.String` := v1 @kind object;
  #L3c9d9a.  v0.`l6.p.b` @type ^`java.lang.String` := v2 @kind object;
  #L3c9d9e.  v0.`l6.p.c` @type ^`long` := v3 @kind wide;
  #L3c9da2.  return @kind void;
}
procedure `void` `<init>`(`l6.p` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `long` v3 , `l6.p$a` v5 @kind object) @signature `Ll6/p;.<init>:(Ljava/lang/String;Ljava/lang/String;JLl6/p$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3c9db4.  call `<init>`(v0, v1, v2, v3) @signature `Ll6/p;.<init>:(Ljava/lang/String;Ljava/lang/String;J)V` @kind direct;
  #L3c9dba.  return @kind void;
}
procedure `long` `b`(`l6.p` v2 @kind this) @signature `Ll6/p;.b:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c9d78.  v0:= v2.`l6.p.c` @type ^`long` @kind wide;
  #L3c9d7c.  return v0 @kind wide;
}
procedure `java.lang.String` `c`(`l6.p` v1 @kind this) @signature `Ll6/p;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c9cdc.  v0:= v1.`l6.p.b` @type ^`java.lang.String` @kind object;
  #L3c9ce0.  return v0 @kind object;
}
procedure `java.lang.String` `d`(`l6.p` v1 @kind this) @signature `Ll6/p;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c9cf4.  v0:= v1.`l6.p.a` @type ^`java.lang.String` @kind object;
  #L3c9cf8.  return v0 @kind object;
}
procedure `boolean` `equals`(`l6.p` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Ll6/p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c9c18.  v0:= 1I;
  #L3c9c1a.  if v8 != v7 then goto L3c9c20;
  #L3c9c1e.  return v0;
  #L3c9c20.  v1:= instanceof @variable v8 @type ^`l6.a0$e$d$a$b$d` @kind boolean;
  #L3c9c24.  v2:= 0I;
  #L3c9c26.  if v1 == 0 then goto L3c9c78;
  #L3c9c2a.  v8:= (`l6.a0$e$d$a$b$d`) v8 @kind object;
  #L3c9c2e.  v1:= v7.`l6.p.a` @type ^`java.lang.String` @kind object;
  #L3c9c32.  call temp:= `d`(v8) @signature `Ll6/a0$e$d$a$b$d;.d:()Ljava/lang/String;` @kind virtual;
  #L3c9c38.  v3:= temp @kind object;
  #L3c9c3a.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c9c40.  v1:= temp;
  #L3c9c42.  if v1 == 0 then goto L3c9c74;
  #L3c9c46.  v1:= v7.`l6.p.b` @type ^`java.lang.String` @kind object;
  #L3c9c4a.  call temp:= `c`(v8) @signature `Ll6/a0$e$d$a$b$d;.c:()Ljava/lang/String;` @kind virtual;
  #L3c9c50.  v3:= temp @kind object;
  #L3c9c52.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c9c58.  v1:= temp;
  #L3c9c5a.  if v1 == 0 then goto L3c9c74;
  #L3c9c5e.  v3:= v7.`l6.p.c` @type ^`long` @kind wide;
  #L3c9c62.  call temp:= `b`(v8) @signature `Ll6/a0$e$d$a$b$d;.b:()J` @kind virtual;
  #L3c9c68.  v5:= temp @kind wide;
  #L3c9c6a.  v8:= lcmp(v3, v5);
  #L3c9c6e.  if v8 != 0 then goto L3c9c74;
  #L3c9c72.  goto L3c9c76;
  #L3c9c74.  v0:= 0I;
  #L3c9c76.  return v0;
  #L3c9c78.  return v2;
}
procedure `int` `hashCode`(`l6.p` v5 @kind this) @signature `Ll6/p;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3c9c8c.  v0:= v5.`l6.p.a` @type ^`java.lang.String` @kind object;
  #L3c9c90.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3c9c96.  v0:= temp;
  #L3c9c98.  v1:= 1000003I;
  #L3c9c9e.  v0:= v0 ^~ v1 @kind int;
  #L3c9ca0.  v0:= v0 * v1 @kind int;
  #L3c9ca4.  v2:= v5.`l6.p.b` @type ^`java.lang.String` @kind object;
  #L3c9ca8.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3c9cae.  v2:= temp;
  #L3c9cb0.  v0:= v0 ^~ v2 @kind int;
  #L3c9cb2.  v0:= v0 * v1 @kind int;
  #L3c9cb6.  v1:= v5.`l6.p.c` @type ^`long` @kind wide;
  #L3c9cba.  v3:= 32I;
  #L3c9cbe.  v3:= v1 ^>> v3 @kind long;
  #L3c9cc2.  v1:= v1 ^~ v3 @kind long;
  #L3c9cc4.  v2:= (`int`) v1 @kind l2i;
  #L3c9cc6.  v0:= v0 ^~ v2 @kind int;
  #L3c9cc8.  return v0;
}
procedure `java.lang.String` `toString`(`l6.p` v3 @kind this) @signature `Ll6/p;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3c9d0c.  v0:= new `java.lang.StringBuilder`;
  #L3c9d10.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c9d16.  v1:= "Signal{name=" @kind object;
  #L3c9d1a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c9d20.  v1:= v3.`l6.p.a` @type ^`java.lang.String` @kind object;
  #L3c9d24.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c9d2a.  v1:= ", code=" @kind object;
  #L3c9d2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c9d34.  v1:= v3.`l6.p.b` @type ^`java.lang.String` @kind object;
  #L3c9d38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c9d3e.  v1:= ", address=" @kind object;
  #L3c9d42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c9d48.  v1:= v3.`l6.p.c` @type ^`long` @kind wide;
  #L3c9d4c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c9d52.  v1:= "}" @kind object;
  #L3c9d56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c9d5c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c9d62.  v0:= temp @kind object;
  #L3c9d64.  return v0 @kind object;
}
