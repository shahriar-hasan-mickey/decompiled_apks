record `l6.j` @kind class @AccessFlag FINAL extends `l6.a0$e$c` @kind class {
  `int` `l6.j.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.j.b` @AccessFlag PRIVATE_FINAL;
  `int` `l6.j.c` @AccessFlag PRIVATE_FINAL;
  `long` `l6.j.d` @AccessFlag PRIVATE_FINAL;
  `long` `l6.j.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `l6.j.f` @AccessFlag PRIVATE_FINAL;
  `int` `l6.j.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.j.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l6.j.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l6.j` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `int` v3 , `long` v4 , `long` v6 , `boolean` v8 , `int` v9 , `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object) @signature `Ll6/j;.<init>:(ILjava/lang/String;IJJZILjava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3c8cf4.  call `<init>`(v0) @signature `Ll6/a0$e$c;.<init>:()V` @kind direct;
  #L3c8cfa.  v0.`l6.j.a` @type ^`int` := v1;
  #L3c8cfe.  v0.`l6.j.b` @type ^`java.lang.String` := v2 @kind object;
  #L3c8d02.  v0.`l6.j.c` @type ^`int` := v3;
  #L3c8d06.  v0.`l6.j.d` @type ^`long` := v4 @kind wide;
  #L3c8d0a.  v0.`l6.j.e` @type ^`long` := v6 @kind wide;
  #L3c8d0e.  v0.`l6.j.f` @type ^`boolean` := v8 @kind boolean;
  #L3c8d12.  v0.`l6.j.g` @type ^`int` := v9;
  #L3c8d16.  v0.`l6.j.h` @type ^`java.lang.String` := v10 @kind object;
  #L3c8d1a.  v0.`l6.j.i` @type ^`java.lang.String` := v11 @kind object;
  #L3c8d1e.  return @kind void;
}
procedure `void` `<init>`(`l6.j` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `int` v3 , `long` v4 , `long` v6 , `boolean` v8 , `int` v9 , `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object, `l6.j$a` v12 @kind object) @signature `Ll6/j;.<init>:(ILjava/lang/String;IJJZILjava/lang/String;Ljava/lang/String;Ll6/j$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3c8d30.  call `<init>`(v0, v1, v2, v3, v4, v6, v8, v9, v10, v11) @signature `Ll6/j;.<init>:(ILjava/lang/String;IJJZILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L3c8d36.  return @kind void;
}
procedure `int` `b`(`l6.j` v1 @kind this) @signature `Ll6/j;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c8aa8.  v0:= v1.`l6.j.a` @type ^`int`;
  #L3c8aac.  return v0;
}
procedure `int` `c`(`l6.j` v1 @kind this) @signature `Ll6/j;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c8ac0.  v0:= v1.`l6.j.c` @type ^`int`;
  #L3c8ac4.  return v0;
}
procedure `long` `d`(`l6.j` v2 @kind this) @signature `Ll6/j;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c8cc4.  v0:= v2.`l6.j.e` @type ^`long` @kind wide;
  #L3c8cc8.  return v0 @kind wide;
}
procedure `java.lang.String` `e`(`l6.j` v1 @kind this) @signature `Ll6/j;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c8b98.  v0:= v1.`l6.j.h` @type ^`java.lang.String` @kind object;
  #L3c8b9c.  return v0 @kind object;
}
procedure `boolean` `equals`(`l6.j` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Ll6/j;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c89b0.  v0:= 1I;
  #L3c89b2.  if v8 != v7 then goto L3c89b8;
  #L3c89b6.  return v0;
  #L3c89b8.  v1:= instanceof @variable v8 @type ^`l6.a0$e$c` @kind boolean;
  #L3c89bc.  v2:= 0I;
  #L3c89be.  if v1 == 0 then goto L3c8a7c;
  #L3c89c2.  v8:= (`l6.a0$e$c`) v8 @kind object;
  #L3c89c6.  v1:= v7.`l6.j.a` @type ^`int`;
  #L3c89ca.  call temp:= `b`(v8) @signature `Ll6/a0$e$c;.b:()I` @kind virtual;
  #L3c89d0.  v3:= temp;
  #L3c89d2.  if v1 != v3 then goto L3c8a78;
  #L3c89d6.  v1:= v7.`l6.j.b` @type ^`java.lang.String` @kind object;
  #L3c89da.  call temp:= `f`(v8) @signature `Ll6/a0$e$c;.f:()Ljava/lang/String;` @kind virtual;
  #L3c89e0.  v3:= temp @kind object;
  #L3c89e2.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c89e8.  v1:= temp;
  #L3c89ea.  if v1 == 0 then goto L3c8a78;
  #L3c89ee.  v1:= v7.`l6.j.c` @type ^`int`;
  #L3c89f2.  call temp:= `c`(v8) @signature `Ll6/a0$e$c;.c:()I` @kind virtual;
  #L3c89f8.  v3:= temp;
  #L3c89fa.  if v1 != v3 then goto L3c8a78;
  #L3c89fe.  v3:= v7.`l6.j.d` @type ^`long` @kind wide;
  #L3c8a02.  call temp:= `h`(v8) @signature `Ll6/a0$e$c;.h:()J` @kind virtual;
  #L3c8a08.  v5:= temp @kind wide;
  #L3c8a0a.  v1:= lcmp(v3, v5);
  #L3c8a0e.  if v1 != 0 then goto L3c8a78;
  #L3c8a12.  v3:= v7.`l6.j.e` @type ^`long` @kind wide;
  #L3c8a16.  call temp:= `d`(v8) @signature `Ll6/a0$e$c;.d:()J` @kind virtual;
  #L3c8a1c.  v5:= temp @kind wide;
  #L3c8a1e.  v1:= lcmp(v3, v5);
  #L3c8a22.  if v1 != 0 then goto L3c8a78;
  #L3c8a26.  v1:= v7.`l6.j.f` @type ^`boolean` @kind boolean;
  #L3c8a2a.  call temp:= `j`(v8) @signature `Ll6/a0$e$c;.j:()Z` @kind virtual;
  #L3c8a30.  v3:= temp;
  #L3c8a32.  if v1 != v3 then goto L3c8a78;
  #L3c8a36.  v1:= v7.`l6.j.g` @type ^`int`;
  #L3c8a3a.  call temp:= `i`(v8) @signature `Ll6/a0$e$c;.i:()I` @kind virtual;
  #L3c8a40.  v3:= temp;
  #L3c8a42.  if v1 != v3 then goto L3c8a78;
  #L3c8a46.  v1:= v7.`l6.j.h` @type ^`java.lang.String` @kind object;
  #L3c8a4a.  call temp:= `e`(v8) @signature `Ll6/a0$e$c;.e:()Ljava/lang/String;` @kind virtual;
  #L3c8a50.  v3:= temp @kind object;
  #L3c8a52.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c8a58.  v1:= temp;
  #L3c8a5a.  if v1 == 0 then goto L3c8a78;
  #L3c8a5e.  v1:= v7.`l6.j.i` @type ^`java.lang.String` @kind object;
  #L3c8a62.  call temp:= `g`(v8) @signature `Ll6/a0$e$c;.g:()Ljava/lang/String;` @kind virtual;
  #L3c8a68.  v8:= temp @kind object;
  #L3c8a6a.  call temp:= `equals`(v1, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c8a70.  v8:= temp;
  #L3c8a72.  if v8 == 0 then goto L3c8a78;
  #L3c8a76.  goto L3c8a7a;
  #L3c8a78.  v0:= 0I;
  #L3c8a7a.  return v0;
  #L3c8a7c.  return v2;
}
procedure `java.lang.String` `f`(`l6.j` v1 @kind this) @signature `Ll6/j;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c8bb0.  v0:= v1.`l6.j.b` @type ^`java.lang.String` @kind object;
  #L3c8bb4.  return v0 @kind object;
}
procedure `java.lang.String` `g`(`l6.j` v1 @kind this) @signature `Ll6/j;.g:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c8bc8.  v0:= v1.`l6.j.i` @type ^`java.lang.String` @kind object;
  #L3c8bcc.  return v0 @kind object;
}
procedure `long` `h`(`l6.j` v2 @kind this) @signature `Ll6/j;.h:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c8cdc.  v0:= v2.`l6.j.d` @type ^`long` @kind wide;
  #L3c8ce0.  return v0 @kind wide;
}
procedure `int` `hashCode`(`l6.j` v7 @kind this) @signature `Ll6/j;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c8af0.  v0:= v7.`l6.j.a` @type ^`int`;
  #L3c8af4.  v1:= 1000003I;
  #L3c8afa.  v0:= v0 ^~ v1 @kind int;
  #L3c8afc.  v0:= v0 * v1 @kind int;
  #L3c8b00.  v2:= v7.`l6.j.b` @type ^`java.lang.String` @kind object;
  #L3c8b04.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3c8b0a.  v2:= temp;
  #L3c8b0c.  v0:= v0 ^~ v2 @kind int;
  #L3c8b0e.  v0:= v0 * v1 @kind int;
  #L3c8b12.  v2:= v7.`l6.j.c` @type ^`int`;
  #L3c8b16.  v0:= v0 ^~ v2 @kind int;
  #L3c8b18.  v0:= v0 * v1 @kind int;
  #L3c8b1c.  v2:= v7.`l6.j.d` @type ^`long` @kind wide;
  #L3c8b20.  v4:= 32I;
  #L3c8b24.  v5:= v2 ^>> v4 @kind long;
  #L3c8b28.  v2:= v2 ^~ v5 @kind long;
  #L3c8b2a.  v3:= (`int`) v2 @kind l2i;
  #L3c8b2c.  v0:= v0 ^~ v3 @kind int;
  #L3c8b2e.  v0:= v0 * v1 @kind int;
  #L3c8b32.  v2:= v7.`l6.j.e` @type ^`long` @kind wide;
  #L3c8b36.  v4:= v2 ^>> v4 @kind long;
  #L3c8b3a.  v2:= v2 ^~ v4 @kind long;
  #L3c8b3c.  v3:= (`int`) v2 @kind l2i;
  #L3c8b3e.  v0:= v0 ^~ v3 @kind int;
  #L3c8b40.  v0:= v0 * v1 @kind int;
  #L3c8b44.  v2:= v7.`l6.j.f` @type ^`boolean` @kind boolean;
  #L3c8b48.  if v2 == 0 then goto L3c8b52;
  #L3c8b4c.  v2:= 1231I;
  #L3c8b50.  goto L3c8b56;
  #L3c8b52.  v2:= 1237I;
  #L3c8b56.  v0:= v0 ^~ v2 @kind int;
  #L3c8b58.  v0:= v0 * v1 @kind int;
  #L3c8b5c.  v2:= v7.`l6.j.g` @type ^`int`;
  #L3c8b60.  v0:= v0 ^~ v2 @kind int;
  #L3c8b62.  v0:= v0 * v1 @kind int;
  #L3c8b66.  v2:= v7.`l6.j.h` @type ^`java.lang.String` @kind object;
  #L3c8b6a.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3c8b70.  v2:= temp;
  #L3c8b72.  v0:= v0 ^~ v2 @kind int;
  #L3c8b74.  v0:= v0 * v1 @kind int;
  #L3c8b78.  v1:= v7.`l6.j.i` @type ^`java.lang.String` @kind object;
  #L3c8b7c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3c8b82.  v1:= temp;
  #L3c8b84.  v0:= v0 ^~ v1 @kind int;
  #L3c8b86.  return v0;
}
procedure `int` `i`(`l6.j` v1 @kind this) @signature `Ll6/j;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c8ad8.  v0:= v1.`l6.j.g` @type ^`int`;
  #L3c8adc.  return v0;
}
procedure `boolean` `j`(`l6.j` v1 @kind this) @signature `Ll6/j;.j:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c8a90.  v0:= v1.`l6.j.f` @type ^`boolean` @kind boolean;
  #L3c8a94.  return v0;
}
procedure `java.lang.String` `toString`(`l6.j` v3 @kind this) @signature `Ll6/j;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3c8be0.  v0:= new `java.lang.StringBuilder`;
  #L3c8be4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c8bea.  v1:= "Device{arch=" @kind object;
  #L3c8bee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8bf4.  v1:= v3.`l6.j.a` @type ^`int`;
  #L3c8bf8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8bfe.  v1:= ", model=" @kind object;
  #L3c8c02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c08.  v1:= v3.`l6.j.b` @type ^`java.lang.String` @kind object;
  #L3c8c0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c12.  v1:= ", cores=" @kind object;
  #L3c8c16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c1c.  v1:= v3.`l6.j.c` @type ^`int`;
  #L3c8c20.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c26.  v1:= ", ram=" @kind object;
  #L3c8c2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c30.  v1:= v3.`l6.j.d` @type ^`long` @kind wide;
  #L3c8c34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c3a.  v1:= ", diskSpace=" @kind object;
  #L3c8c3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c44.  v1:= v3.`l6.j.e` @type ^`long` @kind wide;
  #L3c8c48.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c4e.  v1:= ", simulator=" @kind object;
  #L3c8c52.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c58.  v1:= v3.`l6.j.f` @type ^`boolean` @kind boolean;
  #L3c8c5c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c62.  v1:= ", state=" @kind object;
  #L3c8c66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c6c.  v1:= v3.`l6.j.g` @type ^`int`;
  #L3c8c70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c76.  v1:= ", manufacturer=" @kind object;
  #L3c8c7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c80.  v1:= v3.`l6.j.h` @type ^`java.lang.String` @kind object;
  #L3c8c84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c8a.  v1:= ", modelClass=" @kind object;
  #L3c8c8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c94.  v1:= v3.`l6.j.i` @type ^`java.lang.String` @kind object;
  #L3c8c98.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8c9e.  v1:= "}" @kind object;
  #L3c8ca2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8ca8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c8cae.  v0:= temp @kind object;
  #L3c8cb0.  return v0 @kind object;
}
