record `ab.d0` @kind class @AccessFlag PUBLIC extends `com.google.firebase.database.j$b` @kind interface {
  `ha.k` `ab.d0.a` @AccessFlag PRIVATE_FINAL;
  `a5.m` `ab.d0.b` @AccessFlag PRIVATE_FINAL;
  `int` `ab.d0.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`ab.d0` v0 @kind this, `ha.k` v1 @kind object, `int` v2 ) @signature `Lab/d0;.<init>:(Lha/k;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L164364.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16436a.  v0.`ab.d0.a` @type ^`ha.k` := v1 @kind object;
  #L16436e.  v0.`ab.d0.c` @type ^`int` := v2;
  #L164372.  v1:= new `a5.m`;
  #L164376.  call `<init>`(v1) @signature `La5/m;.<init>:()V` @kind direct;
  #L16437c.  v0.`ab.d0.b` @type ^`a5.m` := v1 @kind object;
  #L164380.  return @kind void;
}
procedure `void` `a`(`ab.d0` v1 @kind this, `s6.b` v2 @kind object, `boolean` v3 , `com.google.firebase.database.a` v4 @kind object) @signature `Lab/d0;.a:(Ls6/b;ZLcom/google/firebase/database/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164394.  if v2 == 0 then goto L1643ac;
  #L164398.  v3:= v1.`ab.d0.b` @type ^`a5.m` @kind object;
  #L16439c.  call temp:= `a`(v2) @signature `Lab/y;.a:(Ls6/b;)Lab/y;` @kind static;
  #L1643a2.  v2:= temp @kind object;
  #L1643a4.  call `b`(v3, v2) @signature `La5/m;.b:(Ljava/lang/Exception;)V` @kind virtual;
  #L1643aa.  goto L1643f0;
  #L1643ac.  if v4 == 0 then goto L1643f0;
  #L1643b0.  v2:= new `ab.x`;
  #L1643b4.  call `<init>`(v2, v4) @signature `Lab/x;.<init>:(Lcom/google/firebase/database/a;)V` @kind direct;
  #L1643ba.  v4:= new `java.util.HashMap`;
  #L1643be.  call `<init>`(v4) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1643c4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1643ca.  v3:= temp @kind object;
  #L1643cc.  v0:= "committed" @kind object;
  #L1643d0.  call temp:= `put`(v4, v0, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1643d6.  v3:= v1.`ab.d0.b` @type ^`a5.m` @kind object;
  #L1643da.  call temp:= `b`(v2, v4) @signature `Lab/x;.b:(Ljava/util/Map;)Lab/x;` @kind virtual;
  #L1643e0.  v2:= temp @kind object;
  #L1643e2.  call temp:= `a`(v2) @signature `Lab/x;.a:()Ljava/util/Map;` @kind virtual;
  #L1643e8.  v2:= temp @kind object;
  #L1643ea.  call `c`(v3, v2) @signature `La5/m;.c:(Ljava/lang/Object;)V` @kind virtual;
  #L1643f0.  return @kind void;
}
procedure `com.google.firebase.database.j$c` `b`(`ab.d0` v4 @kind this, `com.google.firebase.database.g` v5 @kind object) @signature `Lab/d0;.b:(Lcom/google/firebase/database/g;)Lcom/google/firebase/database/j$c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L164248.  v0:= new `java.util.HashMap`;
  #L16424c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L164252.  v1:= new `java.util.HashMap`;
  #L164256.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L16425c.  call temp:= `a`(v5) @signature `Lcom/google/firebase/database/g;.a:()Ljava/lang/String;` @kind virtual;
  #L164262.  v2:= temp @kind object;
  #L164264.  v3:= "key" @kind object;
  #L164268.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16426e.  call temp:= `c`(v5) @signature `Lcom/google/firebase/database/g;.c:()Ljava/lang/Object;` @kind virtual;
  #L164274.  v2:= temp @kind object;
  #L164276.  v3:= "value" @kind object;
  #L16427a.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L164280.  v2:= "snapshot" @kind object;
  #L164284.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16428a.  v0:= v4.`ab.d0.c` @type ^`int`;
  #L16428e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L164294.  v0:= temp @kind object;
  #L164296.  v2:= "transactionKey" @kind object;
  #L16429a.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1642a0.  v0:= new `ab.c0`;
  #L1642a4.  v2:= v4.`ab.d0.a` @type ^`ha.k` @kind object;
  #L1642a8.  call `<init>`(v0, v2) @signature `Lab/c0;.<init>:(Lha/k;)V` @kind direct;
  #L1642ae.  call temp:= `c`(v0, v1) @signature `Lab/c0;.c:(Ljava/util/Map;)Ljava/lang/Object;` @kind virtual;
  #L1642b4.  v0:= temp @kind object;
  #L1642b6.  call temp:= `requireNonNull`(v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1642bc.  v0:= (`java.util.Map`) v0 @kind object;
  #L1642c0.  v1:= "aborted" @kind object;
  #L1642c4.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1642ca.  v1:= temp @kind object;
  #L1642cc.  call temp:= `requireNonNull`(v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1642d2.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L1642d6.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L1642dc.  v1:= temp;
  #L1642de.  v2:= "exception" @kind object;
  #L1642e2.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1642e8.  v2:= temp @kind object;
  #L1642ea.  call temp:= `requireNonNull`(v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1642f0.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L1642f4.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L1642fa.  v2:= temp;
  #L1642fc.  if v1 != 0 then goto L16431e;
  #L164300.  if v2 == 0 then goto L164306;
  #L164304.  goto L16431e;
  #L164306.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16430c.  v0:= temp @kind object;
  #L16430e.  call `d`(v5, v0) @signature `Lcom/google/firebase/database/g;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L164314.  call temp:= `b`(v5) @signature `Lcom/google/firebase/database/j;.b:(Lcom/google/firebase/database/g;)Lcom/google/firebase/database/j$c;` @kind static;
  #L16431a.  v5:= temp @kind object;
  #L16431c.  return v5 @kind object;
  #L16431e.  call temp:= `a`() @signature `Lcom/google/firebase/database/j;.a:()Lcom/google/firebase/database/j$c;` @kind static;
  #L164324.  v5:= temp @kind object;
  #L164326.  return v5 @kind object;
  #L164328.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L16432a.  v0:= "firebase_database" @kind object;
  #L16432e.  v1:= "An unexpected exception occurred for a transaction." @kind object;
  #L164332.  call temp:= `e`(v0, v1, v5) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L164338.  call temp:= `a`() @signature `Lcom/google/firebase/database/j;.a:()Lcom/google/firebase/database/j$c;` @kind static;
  #L16433e.  v5:= temp @kind object;
  #L164340.  return v5 @kind object;
  catch `java.lang.Exception` @[L1642a0..L164326] goto L164328;
}
procedure `a5.l` `c`(`ab.d0` v1 @kind this) @signature `Lab/d0;.c:()La5/l;` @AccessFlag  {
    temp;
    v0;

  #L164228.  v0:= v1.`ab.d0.b` @type ^`a5.m` @kind object;
  #L16422c.  call temp:= `a`(v0) @signature `La5/m;.a:()La5/l;` @kind virtual;
  #L164232.  v0:= temp @kind object;
  #L164234.  return v0 @kind object;
}
