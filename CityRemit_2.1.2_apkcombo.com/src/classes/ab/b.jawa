record `ab.b` @kind class @AccessFlag PUBLIC extends `ha.d$d` @kind interface {
  `com.google.firebase.database.i` `ab.b.a` @AccessFlag PRIVATE_FINAL;
  `ab.z` `ab.b.b` @AccessFlag PRIVATE_FINAL;
  `s6.i` `ab.b.c` @AccessFlag PRIVATE;
  `s6.a` `ab.b.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`ab.b` v0 @kind this, `com.google.firebase.database.i` v1 @kind object, `ab.z` v2 @kind object) @signature `Lab/b;.<init>:(Lcom/google/firebase/database/i;Lab/z;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L161ad8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L161ade.  v0.`ab.b.a` @type ^`com.google.firebase.database.i` := v1 @kind object;
  #L161ae2.  v0.`ab.b.b` @type ^`ab.z` := v2 @kind object;
  #L161ae6.  return @kind void;
}
procedure `void` `a`(`ab.b` v1 @kind this, `java.lang.Object` v2 @kind object, `ha.d$b` v3 @kind object) @signature `Lab/b;.a:(Ljava/lang/Object;Lha/d$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L161b44.  v2:= (`java.util.Map`) v2 @kind object;
  #L161b48.  v0:= "eventType" @kind object;
  #L161b4c.  call temp:= `get`(v2, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L161b52.  v2:= temp @kind object;
  #L161b54.  call temp:= `requireNonNull`(v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L161b5a.  v2:= (`java.lang.String`) v2 @kind object;
  #L161b5e.  v0:= "value" @kind object;
  #L161b62.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L161b68.  v0:= temp;
  #L161b6a.  if v0 == 0 then goto L161b88;
  #L161b6e.  v2:= new `ab.e0`;
  #L161b72.  call `<init>`(v2, v3) @signature `Lab/e0;.<init>:(Lha/d$b;)V` @kind direct;
  #L161b78.  v1.`ab.b.c` @type ^`s6.i` := v2 @kind object;
  #L161b7c.  v3:= v1.`ab.b.a` @type ^`com.google.firebase.database.i` @kind object;
  #L161b80.  call temp:= `c`(v3, v2) @signature `Lcom/google/firebase/database/i;.c:(Ls6/i;)Ls6/i;` @kind virtual;
  #L161b86.  goto L161ba0;
  #L161b88.  v0:= new `ab.a`;
  #L161b8c.  call `<init>`(v0, v3, v2) @signature `Lab/a;.<init>:(Lha/d$b;Ljava/lang/String;)V` @kind direct;
  #L161b92.  v1.`ab.b.d` @type ^`s6.a` := v0 @kind object;
  #L161b96.  v2:= v1.`ab.b.a` @type ^`com.google.firebase.database.i` @kind object;
  #L161b9a.  call temp:= `a`(v2, v0) @signature `Lcom/google/firebase/database/i;.a:(Ls6/a;)Ls6/a;` @kind virtual;
  #L161ba0.  return @kind void;
}
procedure `void` `b`(`ab.b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lab/b;.b:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L161af8.  v3:= v2.`ab.b.b` @type ^`ab.z` @kind object;
  #L161afc.  call `run`(v3) @signature `Lab/z;.run:()V` @kind interface;
  #L161b02.  v3:= v2.`ab.b.c` @type ^`s6.i` @kind object;
  #L161b06.  v0:= 0I;
  #L161b08.  if v3 == 0 then goto L161b1a;
  #L161b0c.  v1:= v2.`ab.b.a` @type ^`com.google.firebase.database.i` @kind object;
  #L161b10.  call `D`(v1, v3) @signature `Lcom/google/firebase/database/i;.D:(Ls6/i;)V` @kind virtual;
  #L161b16.  v2.`ab.b.c` @type ^`s6.i` := v0 @kind object;
  #L161b1a.  v3:= v2.`ab.b.d` @type ^`s6.a` @kind object;
  #L161b1e.  if v3 == 0 then goto L161b30;
  #L161b22.  v1:= v2.`ab.b.a` @type ^`com.google.firebase.database.i` @kind object;
  #L161b26.  call `C`(v1, v3) @signature `Lcom/google/firebase/database/i;.C:(Ls6/a;)V` @kind virtual;
  #L161b2c.  v2.`ab.b.d` @type ^`s6.a` := v0 @kind object;
  #L161b30.  return @kind void;
}
