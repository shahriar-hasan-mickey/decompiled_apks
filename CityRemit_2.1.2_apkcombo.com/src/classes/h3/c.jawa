record `h3.c` @kind class @AccessFlag PUBLIC_FINAL extends `h3.e` @kind class {
  `s3.z` `h3.c.g` @AccessFlag PRIVATE_FINAL;
  `s3.y` `h3.c.h` @AccessFlag PRIVATE_FINAL;
  `int` `h3.c.i` @AccessFlag PRIVATE;
  `int` `h3.c.j` @AccessFlag PRIVATE_FINAL;
  `h3.c$b`[] `h3.c.k` @AccessFlag PRIVATE_FINAL;
  `h3.c$b` `h3.c.l` @AccessFlag PRIVATE;
  `java.util.List` `h3.c.m` @AccessFlag PRIVATE;
  `java.util.List` `h3.c.n` @AccessFlag PRIVATE;
  `h3.c$c` `h3.c.o` @AccessFlag PRIVATE;
  `int` `h3.c.p` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`h3.c` v3 @kind this, `int` v4 , `java.util.List` v5 @kind object) @signature `Lh3/c;.<init>:(ILjava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L33b510.  call `<init>`(v3) @signature `Lh3/e;.<init>:()V` @kind direct;
  #L33b516.  v0:= new `s3.z`;
  #L33b51a.  call `<init>`(v0) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L33b520.  v3.`h3.c.g` @type ^`s3.z` := v0 @kind object;
  #L33b524.  v0:= new `s3.y`;
  #L33b528.  call `<init>`(v0) @signature `Ls3/y;.<init>:()V` @kind direct;
  #L33b52e.  v3.`h3.c.h` @type ^`s3.y` := v0 @kind object;
  #L33b532.  v0:= -1I;
  #L33b534.  v3.`h3.c.i` @type ^`int` := v0;
  #L33b538.  if v4 != v0 then goto L33b53e;
  #L33b53c.  v4:= 1I;
  #L33b53e.  v3.`h3.c.j` @type ^`int` := v4;
  #L33b542.  if v5 == 0 then goto L33b54e;
  #L33b546.  call temp:= `h`(v5) @signature `Ls3/d;.h:(Ljava/util/List;)Z` @kind static;
  #L33b54c.  v4:= temp;
  #L33b54e.  v4:= 8I;
  #L33b552.  v5:= new `h3.c$b`[v4];
  #L33b556.  v3.`h3.c.k` @type ^`h3.c$b`[] := v5 @kind object;
  #L33b55a.  v5:= 0I;
  #L33b55c.  v0:= 0I;
  #L33b55e.  if v0 >= v4 then goto L33b57a;
  #L33b562.  v1:= v3.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33b566.  v2:= new `h3.c$b`;
  #L33b56a.  call `<init>`(v2) @signature `Lh3/c$b;.<init>:()V` @kind direct;
  #L33b570.  v1[v0]:= v2 @kind object;
  #L33b574.  v0:= v0 + 1;
  #L33b578.  goto L33b55e;
  #L33b57a.  v4:= v3.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33b57e.  v4:= v4[v5] @kind object;
  #L33b582.  v3.`h3.c.l` @type ^`h3.c$b` := v4 @kind object;
  #L33b586.  return @kind void;
}
procedure `void` `A`(`h3.c` v10 @kind this) @signature `Lh3/c;.A:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L33bfd4.  v0:= v10.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bfd8.  v1:= 4I;
  #L33bfda.  call temp:= `h`(v0, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33bfe0.  v3:= temp;
  #L33bfe2.  v0:= v10.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bfe6.  v1:= 2I;
  #L33bfe8.  call temp:= `h`(v0, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33bfee.  v4:= temp;
  #L33bff0.  v0:= v10.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bff4.  call temp:= `h`(v0, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33bffa.  v5:= temp;
  #L33bffc.  v0:= v10.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c000.  call temp:= `g`(v0) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L33c006.  v6:= temp;
  #L33c008.  v0:= v10.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c00c.  call temp:= `g`(v0) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L33c012.  v7:= temp;
  #L33c014.  v0:= v10.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c018.  v1:= 3I;
  #L33c01a.  call temp:= `h`(v0, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c020.  v8:= temp;
  #L33c022.  v0:= v10.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c026.  call temp:= `h`(v0, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c02c.  v9:= temp;
  #L33c02e.  v2:= v10.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33c032.  call `m`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lh3/c$b;.m:(IIIZZII)V` @kind virtual;
  #L33c038.  return @kind void;
}
procedure `void` `B`(`h3.c` v6 @kind this) @signature `Lh3/c;.B:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L33c04c.  v0:= v6.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c050.  v1:= 2I;
  #L33c052.  call temp:= `h`(v0, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c058.  v0:= temp;
  #L33c05a.  v2:= v6.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c05e.  call temp:= `h`(v2, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c064.  v2:= temp;
  #L33c066.  v3:= v6.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c06a.  call temp:= `h`(v3, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c070.  v3:= temp;
  #L33c072.  v4:= v6.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c076.  call temp:= `h`(v4, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c07c.  v4:= temp;
  #L33c07e.  call temp:= `h`(v2, v3, v4, v0) @signature `Lh3/c$b;.h:(IIII)I` @kind static;
  #L33c084.  v0:= temp;
  #L33c086.  v2:= v6.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c08a.  call temp:= `h`(v2, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c090.  v2:= temp;
  #L33c092.  v3:= v6.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c096.  call temp:= `h`(v3, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c09c.  v3:= temp;
  #L33c09e.  v4:= v6.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c0a2.  call temp:= `h`(v4, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c0a8.  v4:= temp;
  #L33c0aa.  v5:= v6.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c0ae.  call temp:= `h`(v5, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c0b4.  v5:= temp;
  #L33c0b6.  call temp:= `h`(v3, v4, v5, v2) @signature `Lh3/c$b;.h:(IIII)I` @kind static;
  #L33c0bc.  v2:= temp;
  #L33c0be.  v3:= v6.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c0c2.  call `r`(v3, v1) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33c0c8.  v3:= v6.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c0cc.  call temp:= `h`(v3, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c0d2.  v3:= temp;
  #L33c0d4.  v4:= v6.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c0d8.  call temp:= `h`(v4, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c0de.  v4:= temp;
  #L33c0e0.  v5:= v6.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c0e4.  call temp:= `h`(v5, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c0ea.  v1:= temp;
  #L33c0ec.  call temp:= `g`(v3, v4, v1) @signature `Lh3/c$b;.g:(III)I` @kind static;
  #L33c0f2.  v1:= temp;
  #L33c0f4.  v3:= v6.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33c0f8.  call `n`(v3, v0, v2, v1) @signature `Lh3/c$b;.n:(III)V` @kind virtual;
  #L33c0fe.  return @kind void;
}
procedure `void` `C`(`h3.c` v3 @kind this) @signature `Lh3/c;.C:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L33c110.  v0:= v3.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c114.  v1:= 4I;
  #L33c116.  call `r`(v0, v1) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33c11c.  v0:= v3.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c120.  call temp:= `h`(v0, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c126.  v0:= temp;
  #L33c128.  v1:= v3.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c12c.  v2:= 2I;
  #L33c12e.  call `r`(v1, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33c134.  v1:= v3.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c138.  v2:= 6I;
  #L33c13a.  call temp:= `h`(v1, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c140.  v1:= temp;
  #L33c142.  v2:= v3.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33c146.  call `o`(v2, v0, v1) @signature `Lh3/c$b;.o:(II)V` @kind virtual;
  #L33c14c.  return @kind void;
}
procedure `void` `D`(`h3.c` v13 @kind this) @signature `Lh3/c;.D:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L33c160.  v0:= v13.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c164.  v1:= 2I;
  #L33c166.  call temp:= `h`(v0, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c16c.  v0:= temp;
  #L33c16e.  v2:= v13.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c172.  call temp:= `h`(v2, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c178.  v2:= temp;
  #L33c17a.  v3:= v13.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c17e.  call temp:= `h`(v3, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c184.  v3:= temp;
  #L33c186.  v4:= v13.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c18a.  call temp:= `h`(v4, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c190.  v4:= temp;
  #L33c192.  call temp:= `h`(v2, v3, v4, v0) @signature `Lh3/c$b;.h:(IIII)I` @kind static;
  #L33c198.  v6:= temp;
  #L33c19a.  v0:= v13.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c19e.  call temp:= `h`(v0, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c1a4.  v0:= temp;
  #L33c1a6.  v2:= v13.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c1aa.  call temp:= `h`(v2, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c1b0.  v2:= temp;
  #L33c1b2.  v3:= v13.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c1b6.  call temp:= `h`(v3, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c1bc.  v3:= temp;
  #L33c1be.  v4:= v13.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c1c2.  call temp:= `h`(v4, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c1c8.  v4:= temp;
  #L33c1ca.  call temp:= `g`(v2, v3, v4) @signature `Lh3/c$b;.g:(III)I` @kind static;
  #L33c1d0.  v7:= temp;
  #L33c1d2.  v2:= v13.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c1d6.  call temp:= `g`(v2) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L33c1dc.  v2:= temp;
  #L33c1de.  if v2 == 0 then goto L33c1e6;
  #L33c1e2.  v0:= v0 ^| 4;
  #L33c1e6.  v9:= v0;
  #L33c1e8.  v0:= v13.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c1ec.  call temp:= `g`(v0) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L33c1f2.  v8:= temp;
  #L33c1f4.  v0:= v13.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c1f8.  call temp:= `h`(v0, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c1fe.  v10:= temp;
  #L33c200.  v0:= v13.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c204.  call temp:= `h`(v0, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c20a.  v11:= temp;
  #L33c20c.  v0:= v13.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c210.  call temp:= `h`(v0, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c216.  v12:= temp;
  #L33c218.  v0:= v13.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c21c.  v1:= 8I;
  #L33c220.  call `r`(v0, v1) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33c226.  v5:= v13.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33c22a.  call `q`(v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lh3/c$b;.q:(IIZIIII)V` @kind virtual;
  #L33c230.  return @kind void;
}
procedure `void` `E`(`h3.c` v12 @kind this) @signature `Lh3/c;.E:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L33c244.  v0:= v12.`h3.c.o` @type ^`h3.c$c` @kind object;
  #L33c248.  v1:= v0.`h3.c$c.d` @type ^`int`;
  #L33c24c.  v0:= v0.`h3.c$c.b` @type ^`int`;
  #L33c250.  v2:= 2I;
  #L33c252.  v0:= v0 * 2;
  #L33c256.  v3:= 1I;
  #L33c258.  v0:= v0 - v3 @kind int;
  #L33c25a.  v4:= "Cea708Decoder" @kind object;
  #L33c25e.  if v1 == v0 then goto L33c2d2;
  #L33c262.  v0:= new `java.lang.StringBuilder`;
  #L33c266.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33c26c.  v1:= "DtvCcPacket ended prematurely; size is " @kind object;
  #L33c270.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c276.  v1:= v12.`h3.c.o` @type ^`h3.c$c` @kind object;
  #L33c27a.  v1:= v1.`h3.c$c.b` @type ^`int`;
  #L33c27e.  v1:= v1 * 2;
  #L33c282.  v1:= v1 - v3 @kind int;
  #L33c284.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c28a.  v1:= ", but current index is " @kind object;
  #L33c28e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c294.  v1:= v12.`h3.c.o` @type ^`h3.c$c` @kind object;
  #L33c298.  v1:= v1.`h3.c$c.d` @type ^`int`;
  #L33c29c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c2a2.  v1:= " (sequence number " @kind object;
  #L33c2a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c2ac.  v1:= v12.`h3.c.o` @type ^`h3.c$c` @kind object;
  #L33c2b0.  v1:= v1.`h3.c$c.a` @type ^`int`;
  #L33c2b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c2ba.  v1:= ");" @kind object;
  #L33c2be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c2c4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33c2ca.  v0:= temp @kind object;
  #L33c2cc.  call `b`(v4, v0) @signature `Ls3/q;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L33c2d2.  v0:= 0I;
  #L33c2d4.  v1:= v12.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c2d8.  v5:= v12.`h3.c.o` @type ^`h3.c$c` @kind object;
  #L33c2dc.  v6:= v5.`h3.c$c.c` @type ^`byte`[] @kind object;
  #L33c2e0.  v5:= v5.`h3.c$c.d` @type ^`int`;
  #L33c2e4.  call `o`(v1, v6, v5) @signature `Ls3/y;.o:([BI)V` @kind virtual;
  #L33c2ea.  v1:= v12.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c2ee.  call temp:= `b`(v1) @signature `Ls3/y;.b:()I` @kind virtual;
  #L33c2f4.  v1:= temp;
  #L33c2f6.  if v1 <= 0 then goto L33c4a4;
  #L33c2fa.  v1:= v12.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c2fe.  v5:= 3I;
  #L33c300.  call temp:= `h`(v1, v5) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c306.  v1:= temp;
  #L33c308.  v5:= v12.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c30c.  v6:= 5I;
  #L33c30e.  call temp:= `h`(v5, v6) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c314.  v5:= temp;
  #L33c316.  v6:= 7I;
  #L33c318.  if v1 != v6 then goto L33c360;
  #L33c31c.  v1:= v12.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c320.  call `r`(v1, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33c326.  v1:= v12.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c32a.  v7:= 6I;
  #L33c32c.  call temp:= `h`(v1, v7) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c332.  v1:= temp;
  #L33c334.  if v1 >= v6 then goto L33c360;
  #L33c338.  v6:= new `java.lang.StringBuilder`;
  #L33c33c.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33c342.  v7:= "Invalid extended service number: " @kind object;
  #L33c346.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c34c.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c352.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33c358.  v6:= temp @kind object;
  #L33c35a.  call `h`(v4, v6) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L33c360.  if v5 != 0 then goto L33c39e;
  #L33c364.  if v1 == 0 then goto L33c4a4;
  #L33c368.  v2:= new `java.lang.StringBuilder`;
  #L33c36c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33c372.  v3:= "serviceNumber is non-zero (" @kind object;
  #L33c376.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c37c.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c382.  v1:= ") when blockSize is 0" @kind object;
  #L33c386.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c38c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33c392.  v1:= temp @kind object;
  #L33c394.  call `h`(v4, v1) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L33c39a.  goto L33c4a4;
  #L33c39e.  v6:= v12.`h3.c.j` @type ^`int`;
  #L33c3a2.  if v1 == v6 then goto L33c3b2;
  #L33c3a6.  v1:= v12.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c3aa.  call `s`(v1, v5) @signature `Ls3/y;.s:(I)V` @kind virtual;
  #L33c3b0.  goto L33c2ea;
  #L33c3b2.  v1:= v12.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c3b6.  call temp:= `e`(v1) @signature `Ls3/y;.e:()I` @kind virtual;
  #L33c3bc.  v1:= temp;
  #L33c3be.  v5:= v5 * 8;
  #L33c3c2.  v1:= v1 + v5 @kind int;
  #L33c3c4.  v5:= v12.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c3c8.  call temp:= `e`(v5) @signature `Ls3/y;.e:()I` @kind virtual;
  #L33c3ce.  v5:= temp;
  #L33c3d0.  if v5 >= v1 then goto L33c2ea;
  #L33c3d4.  v5:= v12.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c3d8.  v6:= 8I;
  #L33c3dc.  call temp:= `h`(v5, v6) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c3e2.  v5:= temp;
  #L33c3e4.  v7:= 16I;
  #L33c3e8.  v8:= 255I;
  #L33c3ec.  v9:= 159I;
  #L33c3f0.  v10:= 127I;
  #L33c3f4.  v11:= 31I;
  #L33c3f8.  if v5 == v7 then goto L33c43c;
  #L33c3fc.  if v5 > v11 then goto L33c408;
  #L33c400.  call `r`(v12, v5) @signature `Lh3/c;.r:(I)V` @kind direct;
  #L33c406.  goto L33c3c4;
  #L33c408.  if v5 > v10 then goto L33c414;
  #L33c40c.  call `w`(v12, v5) @signature `Lh3/c;.w:(I)V` @kind direct;
  #L33c412.  goto L33c45e;
  #L33c414.  if v5 > v9 then goto L33c420;
  #L33c418.  call `s`(v12, v5) @signature `Lh3/c;.s:(I)V` @kind direct;
  #L33c41e.  goto L33c45e;
  #L33c420.  if v5 > v8 then goto L33c42c;
  #L33c424.  call `x`(v12, v5) @signature `Lh3/c;.x:(I)V` @kind direct;
  #L33c42a.  goto L33c45e;
  #L33c42c.  v6:= new `java.lang.StringBuilder`;
  #L33c430.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33c436.  v7:= "Invalid base command: " @kind object;
  #L33c43a.  goto L33c488;
  #L33c43c.  v5:= v12.`h3.c.h` @type ^`s3.y` @kind object;
  #L33c440.  call temp:= `h`(v5, v6) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33c446.  v5:= temp;
  #L33c448.  if v5 > v11 then goto L33c454;
  #L33c44c.  call `t`(v12, v5) @signature `Lh3/c;.t:(I)V` @kind direct;
  #L33c452.  goto L33c3c4;
  #L33c454.  if v5 > v10 then goto L33c462;
  #L33c458.  call `y`(v12, v5) @signature `Lh3/c;.y:(I)V` @kind direct;
  #L33c45e.  v0:= 1I;
  #L33c460.  goto L33c3c4;
  #L33c462.  if v5 > v9 then goto L33c46e;
  #L33c466.  call `u`(v12, v5) @signature `Lh3/c;.u:(I)V` @kind direct;
  #L33c46c.  goto L33c3c4;
  #L33c46e.  if v5 > v8 then goto L33c47a;
  #L33c472.  call `z`(v12, v5) @signature `Lh3/c;.z:(I)V` @kind direct;
  #L33c478.  goto L33c45e;
  #L33c47a.  v6:= new `java.lang.StringBuilder`;
  #L33c47e.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33c484.  v7:= "Invalid extended command: " @kind object;
  #L33c488.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c48e.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c494.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33c49a.  v5:= temp @kind object;
  #L33c49c.  call `h`(v4, v5) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L33c4a2.  goto L33c3c4;
  #L33c4a4.  if v0 == 0 then goto L33c4b4;
  #L33c4a8.  call temp:= `q`(v12) @signature `Lh3/c;.q:()Ljava/util/List;` @kind direct;
  #L33c4ae.  v0:= temp @kind object;
  #L33c4b0.  v12.`h3.c.m` @type ^`java.util.List` := v0 @kind object;
  #L33c4b4.  return @kind void;
}
procedure `void` `F`(`h3.c` v2 @kind this) @signature `Lh3/c;.F:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33c4c8.  v0:= 0I;
  #L33c4ca.  v1:= 8I;
  #L33c4ce.  if v0 >= v1 then goto L33c4e6;
  #L33c4d2.  v1:= v2.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33c4d6.  v1:= v1[v0] @kind object;
  #L33c4da.  call `l`(v1) @signature `Lh3/c$b;.l:()V` @kind virtual;
  #L33c4e0.  v0:= v0 + 1;
  #L33c4e4.  goto L33c4ca;
  #L33c4e6.  return @kind void;
}
procedure `void` `p`(`h3.c` v1 @kind this) @signature `Lh3/c;.p:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33b73c.  v0:= v1.`h3.c.o` @type ^`h3.c$c` @kind object;
  #L33b740.  if v0 != 0 then goto L33b746;
  #L33b744.  return @kind void;
  #L33b746.  call `E`(v1) @signature `Lh3/c;.E:()V` @kind direct;
  #L33b74c.  v0:= 0I;
  #L33b74e.  v1.`h3.c.o` @type ^`h3.c$c` := v0 @kind object;
  #L33b752.  return @kind void;
}
procedure `java.util.List` `q`(`h3.c` v4 @kind this) @signature `Lh3/c;.q:()Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33b450.  v0:= new `java.util.ArrayList`;
  #L33b454.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L33b45a.  v1:= 0I;
  #L33b45c.  v2:= 0I;
  #L33b45e.  v3:= 8I;
  #L33b462.  if v2 >= v3 then goto L33b4ae;
  #L33b466.  v3:= v4.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33b46a.  v3:= v3[v2] @kind object;
  #L33b46e.  call temp:= `j`(v3) @signature `Lh3/c$b;.j:()Z` @kind virtual;
  #L33b474.  v3:= temp;
  #L33b476.  if v3 != 0 then goto L33b4a8;
  #L33b47a.  v3:= v4.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33b47e.  v3:= v3[v2] @kind object;
  #L33b482.  call temp:= `k`(v3) @signature `Lh3/c$b;.k:()Z` @kind virtual;
  #L33b488.  v3:= temp;
  #L33b48a.  if v3 == 0 then goto L33b4a8;
  #L33b48e.  v3:= v4.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33b492.  v3:= v3[v2] @kind object;
  #L33b496.  call temp:= `c`(v3) @signature `Lh3/c$b;.c:()Lh3/c$a;` @kind virtual;
  #L33b49c.  v3:= temp @kind object;
  #L33b49e.  if v3 == 0 then goto L33b4a8;
  #L33b4a2.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L33b4a8.  v2:= v2 + 1;
  #L33b4ac.  goto L33b45e;
  #L33b4ae.  call temp:= `b`() @signature `Lh3/c$a;.b:()Ljava/util/Comparator;` @kind static;
  #L33b4b4.  v2:= temp @kind object;
  #L33b4b6.  call `sort`(v0, v2) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L33b4bc.  v2:= new `java.util.ArrayList`;
  #L33b4c0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L33b4c6.  v3:= temp;
  #L33b4c8.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L33b4ce.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L33b4d4.  v3:= temp;
  #L33b4d6.  if v1 >= v3 then goto L33b4f6;
  #L33b4da.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33b4e0.  v3:= temp @kind object;
  #L33b4e2.  v3:= (`h3.c$a`) v3 @kind object;
  #L33b4e6.  v3:= v3.`h3.c$a.a` @type ^`g3.b` @kind object;
  #L33b4ea.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L33b4f0.  v1:= v1 + 1;
  #L33b4f4.  goto L33b4ce;
  #L33b4f6.  call temp:= `unmodifiableList`(v2) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L33b4fc.  v0:= temp @kind object;
  #L33b4fe.  return v0 @kind object;
}
procedure `void` `r`(`h3.c` v4 @kind this, `int` v5 ) @signature `Lh3/c;.r:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33b7a4.  if v5 == 0 then goto L33b8a0;
  #L33b7a8.  v0:= 3I;
  #L33b7aa.  if v5 == v0 then goto L33b894;
  #L33b7ae.  v0:= 8I;
  #L33b7b2.  if v5 == v0 then goto L33b888;
  #L33b7b6.  goto L33b8a4;
  #L33b7bc.  v1:= 17I;
  #L33b7c0.  v2:= "Cea708Decoder" @kind object;
  #L33b7c4.  if v5 < v1 then goto L33b804;
  #L33b7c8.  v1:= 23I;
  #L33b7cc.  if v5 > v1 then goto L33b804;
  #L33b7d0.  v1:= new `java.lang.StringBuilder`;
  #L33b7d4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33b7da.  v3:= "Currently unsupported COMMAND_EXT1 Command: " @kind object;
  #L33b7de.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33b7e4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33b7ea.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33b7f0.  v5:= temp @kind object;
  #L33b7f2.  call `h`(v2, v5) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L33b7f8.  v5:= v4.`h3.c.h` @type ^`s3.y` @kind object;
  #L33b7fc.  call `r`(v5, v0) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33b802.  goto L33b8a0;
  #L33b804.  v0:= 24I;
  #L33b808.  if v5 < v0 then goto L33b846;
  #L33b80c.  v0:= 31I;
  #L33b810.  if v5 > v0 then goto L33b846;
  #L33b814.  v0:= new `java.lang.StringBuilder`;
  #L33b818.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33b81e.  v1:= "Currently unsupported COMMAND_P16 Command: " @kind object;
  #L33b822.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33b828.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33b82e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33b834.  v5:= temp @kind object;
  #L33b836.  call `h`(v2, v5) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L33b83c.  v5:= v4.`h3.c.h` @type ^`s3.y` @kind object;
  #L33b840.  v0:= 16I;
  #L33b844.  goto L33b7fc;
  #L33b846.  v0:= new `java.lang.StringBuilder`;
  #L33b84a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33b850.  v1:= "Invalid C0 command: " @kind object;
  #L33b854.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33b85a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33b860.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33b866.  v5:= temp @kind object;
  #L33b868.  call `h`(v2, v5) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L33b86e.  goto L33b8a0;
  #L33b870.  v5:= v4.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33b874.  v0:= 10I;
  #L33b878.  call `a`(v5, v0) @signature `Lh3/c$b;.a:(C)V` @kind virtual;
  #L33b87e.  goto L33b8a0;
  #L33b880.  call `F`(v4) @signature `Lh3/c;.F:()V` @kind direct;
  #L33b886.  goto L33b8a0;
  #L33b888.  v5:= v4.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33b88c.  call `b`(v5) @signature `Lh3/c$b;.b:()V` @kind virtual;
  #L33b892.  goto L33b8a0;
  #L33b894.  call temp:= `q`(v4) @signature `Lh3/c;.q:()Ljava/util/List;` @kind direct;
  #L33b89a.  v5:= temp @kind object;
  #L33b89c.  v4.`h3.c.m` @type ^`java.util.List` := v5 @kind object;
  #L33b8a0.  return @kind void;
  #L33b8a2.  
  #L33b8a4.  switch v5
                  | 12 => goto L33b880
                  | 13 => goto L33b870
                  | 14 => goto L33b8a0
                  | else => goto L33b7bc;
}
procedure `void` `s`(`h3.c` v4 @kind this, `int` v5 ) @signature `Lh3/c;.s:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33b8c8.  v0:= 16I;
  #L33b8cc.  v1:= 8I;
  #L33b8d0.  v2:= 1I;
  #L33b8d2.  goto L33bad8;
  #L33b8d8.  v0:= new `java.lang.StringBuilder`;
  #L33b8dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33b8e2.  v1:= "Invalid C1 command: " @kind object;
  #L33b8e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33b8ec.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33b8f2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33b8f8.  v5:= temp @kind object;
  #L33b8fa.  v0:= "Cea708Decoder" @kind object;
  #L33b8fe.  call `h`(v0, v5) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L33b904.  goto L33bad6;
  #L33b908.  v5:= v5 + -152;
  #L33b90c.  call `v`(v4, v5) @signature `Lh3/c;.v:(I)V` @kind direct;
  #L33b912.  v0:= v4.`h3.c.p` @type ^`int`;
  #L33b916.  if v0 == v5 then goto L33bad6;
  #L33b91a.  v4.`h3.c.p` @type ^`int` := v5;
  #L33b91e.  v0:= v4.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33b922.  v5:= v0[v5] @kind object;
  #L33b926.  goto L33bad2;
  #L33b92a.  v5:= v4.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33b92e.  call temp:= `i`(v5) @signature `Lh3/c$b;.i:()Z` @kind virtual;
  #L33b934.  v5:= temp;
  #L33b936.  if v5 != 0 then goto L33b944;
  #L33b93a.  v5:= v4.`h3.c.h` @type ^`s3.y` @kind object;
  #L33b93e.  v0:= 32I;
  #L33b942.  goto L33b9a2;
  #L33b944.  call `D`(v4) @signature `Lh3/c;.D:()V` @kind direct;
  #L33b94a.  goto L33bad6;
  #L33b94e.  v5:= v4.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33b952.  call temp:= `i`(v5) @signature `Lh3/c$b;.i:()Z` @kind virtual;
  #L33b958.  v5:= temp;
  #L33b95a.  if v5 != 0 then goto L33b960;
  #L33b95e.  goto L33b99e;
  #L33b960.  call `C`(v4) @signature `Lh3/c;.C:()V` @kind direct;
  #L33b966.  goto L33bad6;
  #L33b96a.  v5:= v4.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33b96e.  call temp:= `i`(v5) @signature `Lh3/c$b;.i:()Z` @kind virtual;
  #L33b974.  v5:= temp;
  #L33b976.  if v5 != 0 then goto L33b984;
  #L33b97a.  v5:= v4.`h3.c.h` @type ^`s3.y` @kind object;
  #L33b97e.  v0:= 24I;
  #L33b982.  goto L33b9a2;
  #L33b984.  call `B`(v4) @signature `Lh3/c;.B:()V` @kind direct;
  #L33b98a.  goto L33bad6;
  #L33b98e.  v5:= v4.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33b992.  call temp:= `i`(v5) @signature `Lh3/c$b;.i:()Z` @kind virtual;
  #L33b998.  v5:= temp;
  #L33b99a.  if v5 != 0 then goto L33b9ac;
  #L33b99e.  v5:= v4.`h3.c.h` @type ^`s3.y` @kind object;
  #L33b9a2.  call `r`(v5, v0) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33b9a8.  goto L33bad6;
  #L33b9ac.  call `A`(v4) @signature `Lh3/c;.A:()V` @kind direct;
  #L33b9b2.  goto L33bad6;
  #L33b9b6.  call `F`(v4) @signature `Lh3/c;.F:()V` @kind direct;
  #L33b9bc.  goto L33bad6;
  #L33b9c0.  v5:= v4.`h3.c.h` @type ^`s3.y` @kind object;
  #L33b9c4.  call `r`(v5, v1) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33b9ca.  goto L33bad6;
  #L33b9ce.  if v2 > v1 then goto L33bad6;
  #L33b9d2.  v5:= v4.`h3.c.h` @type ^`s3.y` @kind object;
  #L33b9d6.  call temp:= `g`(v5) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L33b9dc.  v5:= temp;
  #L33b9de.  if v5 == 0 then goto L33b9f4;
  #L33b9e2.  v5:= v4.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33b9e6.  v0:= v2 - 8;
  #L33b9ea.  v5:= v5[v0] @kind object;
  #L33b9ee.  call `l`(v5) @signature `Lh3/c$b;.l:()V` @kind virtual;
  #L33b9f4.  v2:= v2 + 1;
  #L33b9f8.  goto L33b9ce;
  #L33b9fa.  v5:= 1I;
  #L33b9fc.  if v5 > v1 then goto L33bad6;
  #L33ba00.  v0:= v4.`h3.c.h` @type ^`s3.y` @kind object;
  #L33ba04.  call temp:= `g`(v0) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L33ba0a.  v0:= temp;
  #L33ba0c.  if v0 == 0 then goto L33ba2c;
  #L33ba10.  v0:= v4.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33ba14.  v3:= v5 - 8;
  #L33ba18.  v0:= v0[v3] @kind object;
  #L33ba1c.  call temp:= `k`(v0) @signature `Lh3/c$b;.k:()Z` @kind virtual;
  #L33ba22.  v3:= temp;
  #L33ba24.  v3:= v3 ^~ v2 @kind int;
  #L33ba26.  call `p`(v0, v3) @signature `Lh3/c$b;.p:(Z)V` @kind virtual;
  #L33ba2c.  v5:= v5 + 1;
  #L33ba30.  goto L33b9fc;
  #L33ba32.  if v2 > v1 then goto L33bad6;
  #L33ba36.  v5:= v4.`h3.c.h` @type ^`s3.y` @kind object;
  #L33ba3a.  call temp:= `g`(v5) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L33ba40.  v5:= temp;
  #L33ba42.  if v5 == 0 then goto L33ba5a;
  #L33ba46.  v5:= v4.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33ba4a.  v0:= v2 - 8;
  #L33ba4e.  v5:= v5[v0] @kind object;
  #L33ba52.  v0:= 0I;
  #L33ba54.  call `p`(v5, v0) @signature `Lh3/c$b;.p:(Z)V` @kind virtual;
  #L33ba5a.  v2:= v2 + 1;
  #L33ba5e.  goto L33ba32;
  #L33ba60.  v5:= 1I;
  #L33ba62.  if v5 > v1 then goto L33bad6;
  #L33ba66.  v0:= v4.`h3.c.h` @type ^`s3.y` @kind object;
  #L33ba6a.  call temp:= `g`(v0) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L33ba70.  v0:= temp;
  #L33ba72.  if v0 == 0 then goto L33ba88;
  #L33ba76.  v0:= v4.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33ba7a.  v3:= v5 - 8;
  #L33ba7e.  v0:= v0[v3] @kind object;
  #L33ba82.  call `p`(v0, v2) @signature `Lh3/c$b;.p:(Z)V` @kind virtual;
  #L33ba88.  v5:= v5 + 1;
  #L33ba8c.  goto L33ba62;
  #L33ba8e.  if v2 > v1 then goto L33bad6;
  #L33ba92.  v5:= v4.`h3.c.h` @type ^`s3.y` @kind object;
  #L33ba96.  call temp:= `g`(v5) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L33ba9c.  v5:= temp;
  #L33ba9e.  if v5 == 0 then goto L33bab4;
  #L33baa2.  v5:= v4.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33baa6.  v0:= v2 - 8;
  #L33baaa.  v5:= v5[v0] @kind object;
  #L33baae.  call `e`(v5) @signature `Lh3/c$b;.e:()V` @kind virtual;
  #L33bab4.  v2:= v2 + 1;
  #L33bab8.  goto L33ba8e;
  #L33baba.  v5:= v5 + -128;
  #L33babe.  v0:= v4.`h3.c.p` @type ^`int`;
  #L33bac2.  if v0 == v5 then goto L33bad6;
  #L33bac6.  v4.`h3.c.p` @type ^`int` := v5;
  #L33baca.  v0:= v4.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33bace.  v5:= v0[v5] @kind object;
  #L33bad2.  v4.`h3.c.l` @type ^`h3.c$b` := v5 @kind object;
  #L33bad6.  return @kind void;
  #L33bad8.  switch v5
                  | 128 => goto L33baba
                  | 129 => goto L33baba
                  | 130 => goto L33baba
                  | 131 => goto L33baba
                  | 132 => goto L33baba
                  | 133 => goto L33baba
                  | 134 => goto L33baba
                  | 135 => goto L33baba
                  | 136 => goto L33ba8e
                  | 137 => goto L33ba60
                  | 138 => goto L33ba32
                  | 139 => goto L33b9fa
                  | 140 => goto L33b9ce
                  | 141 => goto L33b9c0
                  | 142 => goto L33bad6
                  | 143 => goto L33b9b6
                  | 144 => goto L33b98e
                  | 145 => goto L33b96a
                  | 146 => goto L33b94e
                  | 147 => goto L33b8d8
                  | 148 => goto L33b8d8
                  | 149 => goto L33b8d8
                  | 150 => goto L33b8d8
                  | 151 => goto L33b92a
                  | 152 => goto L33b908
                  | 153 => goto L33b908
                  | 154 => goto L33b908
                  | 155 => goto L33b908
                  | 156 => goto L33b908
                  | 157 => goto L33b908
                  | 158 => goto L33b908
                  | 159 => goto L33b908
                  | else => goto L33b8d8;
}
procedure `void` `t`(`h3.c` v1 @kind this, `int` v2 ) @signature `Lh3/c;.t:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33bb70.  v0:= 7I;
  #L33bb72.  if v2 > v0 then goto L33bb78;
  #L33bb76.  goto L33bbb4;
  #L33bb78.  v0:= 15I;
  #L33bb7c.  if v2 > v0 then goto L33bb90;
  #L33bb80.  v2:= v1.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bb84.  v0:= 8I;
  #L33bb88.  call `r`(v2, v0) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33bb8e.  goto L33bbb4;
  #L33bb90.  v0:= 23I;
  #L33bb94.  if v2 > v0 then goto L33bba2;
  #L33bb98.  v2:= v1.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bb9c.  v0:= 16I;
  #L33bba0.  goto L33bb88;
  #L33bba2.  v0:= 31I;
  #L33bba6.  if v2 > v0 then goto L33bbb4;
  #L33bbaa.  v2:= v1.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bbae.  v0:= 24I;
  #L33bbb2.  goto L33bb88;
  #L33bbb4.  return @kind void;
}
procedure `void` `u`(`h3.c` v1 @kind this, `int` v2 ) @signature `Lh3/c;.u:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33bbc8.  v0:= 135I;
  #L33bbcc.  if v2 > v0 then goto L33bbe0;
  #L33bbd0.  v2:= v1.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bbd4.  v0:= 32I;
  #L33bbd8.  call `r`(v2, v0) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33bbde.  goto L33bc22;
  #L33bbe0.  v0:= 143I;
  #L33bbe4.  if v2 > v0 then goto L33bbf2;
  #L33bbe8.  v2:= v1.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bbec.  v0:= 40I;
  #L33bbf0.  goto L33bbd8;
  #L33bbf2.  v0:= 159I;
  #L33bbf6.  if v2 > v0 then goto L33bc22;
  #L33bbfa.  v2:= v1.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bbfe.  v0:= 2I;
  #L33bc00.  call `r`(v2, v0) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33bc06.  v2:= v1.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bc0a.  v0:= 6I;
  #L33bc0c.  call temp:= `h`(v2, v0) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33bc12.  v2:= temp;
  #L33bc14.  v0:= v1.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bc18.  v2:= v2 * 8;
  #L33bc1c.  call `r`(v0, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33bc22.  return @kind void;
}
procedure `void` `v`(`h3.c` v14 @kind this, `int` v15 ) @signature `Lh3/c;.v:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L33bc34.  v0:= v14.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33bc38.  v1:= v0[v15] @kind object;
  #L33bc3c.  v15:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bc40.  v0:= 2I;
  #L33bc42.  call `r`(v15, v0) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33bc48.  v15:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bc4c.  call temp:= `g`(v15) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L33bc52.  v2:= temp;
  #L33bc54.  v15:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bc58.  call temp:= `g`(v15) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L33bc5e.  v3:= temp;
  #L33bc60.  v15:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bc64.  call temp:= `g`(v15) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L33bc6a.  v4:= temp;
  #L33bc6c.  v15:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bc70.  v5:= 3I;
  #L33bc72.  call temp:= `h`(v15, v5) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33bc78.  v15:= temp;
  #L33bc7a.  v6:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bc7e.  call temp:= `g`(v6) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L33bc84.  v6:= temp;
  #L33bc86.  v7:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bc8a.  v8:= 7I;
  #L33bc8c.  call temp:= `h`(v7, v8) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33bc92.  v7:= temp;
  #L33bc94.  v8:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bc98.  v9:= 8I;
  #L33bc9c.  call temp:= `h`(v8, v9) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33bca2.  v8:= temp;
  #L33bca4.  v9:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bca8.  v10:= 4I;
  #L33bcaa.  call temp:= `h`(v9, v10) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33bcb0.  v11:= temp;
  #L33bcb2.  v9:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bcb6.  call temp:= `h`(v9, v10) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33bcbc.  v9:= temp;
  #L33bcbe.  v10:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bcc2.  call `r`(v10, v0) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33bcc8.  v10:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bccc.  v12:= 6I;
  #L33bcce.  call temp:= `h`(v10, v12) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33bcd4.  v10:= temp;
  #L33bcd6.  v12:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bcda.  call `r`(v12, v0) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L33bce0.  v0:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bce4.  call temp:= `h`(v0, v5) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33bcea.  v12:= temp;
  #L33bcec.  v0:= v14.`h3.c.h` @type ^`s3.y` @kind object;
  #L33bcf0.  call temp:= `h`(v0, v5) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L33bcf6.  v13:= temp;
  #L33bcf8.  v5:= v15;
  #L33bcfa.  call `f`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13) @signature `Lh3/c$b;.f:(ZZZIZIIIIIII)V` @kind virtual;
  #L33bd00.  return @kind void;
}
procedure `void` `w`(`h3.c` v1 @kind this, `int` v2 ) @signature `Lh3/c;.w:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33bd14.  v0:= 127I;
  #L33bd18.  if v2 != v0 then goto L33bd2c;
  #L33bd1c.  v2:= v1.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33bd20.  v0:= 9835I;
  #L33bd24.  call `a`(v2, v0) @signature `Lh3/c$b;.a:(C)V` @kind virtual;
  #L33bd2a.  goto L33bd3c;
  #L33bd2c.  v0:= v1.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33bd30.  v2:= v2 ^& 255;
  #L33bd34.  v2:= (`char`) v2 @kind i2c;
  #L33bd36.  call `a`(v0, v2) @signature `Lh3/c$b;.a:(C)V` @kind virtual;
  #L33bd3c.  return @kind void;
}
procedure `void` `x`(`h3.c` v1 @kind this, `int` v2 ) @signature `Lh3/c;.x:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33bd50.  v0:= v1.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33bd54.  v2:= v2 ^& 255;
  #L33bd58.  v2:= (`char`) v2 @kind i2c;
  #L33bd5a.  call `a`(v0, v2) @signature `Lh3/c$b;.a:(C)V` @kind virtual;
  #L33bd60.  return @kind void;
}
procedure `void` `y`(`h3.c` v2 @kind this, `int` v3 ) @signature `Lh3/c;.y:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33bd74.  v0:= 32I;
  #L33bd78.  if v3 == v0 then goto L33bf08;
  #L33bd7c.  v0:= 33I;
  #L33bd80.  if v3 == v0 then goto L33befe;
  #L33bd84.  v0:= 37I;
  #L33bd88.  if v3 == v0 then goto L33bef4;
  #L33bd8c.  v0:= 42I;
  #L33bd90.  if v3 == v0 then goto L33beea;
  #L33bd94.  v0:= 44I;
  #L33bd98.  if v3 == v0 then goto L33bee0;
  #L33bd9c.  v0:= 63I;
  #L33bda0.  if v3 == v0 then goto L33bed6;
  #L33bda4.  v0:= 57I;
  #L33bda8.  if v3 == v0 then goto L33becc;
  #L33bdac.  v0:= 58I;
  #L33bdb0.  if v3 == v0 then goto L33bec2;
  #L33bdb4.  v0:= 60I;
  #L33bdb8.  if v3 == v0 then goto L33beb8;
  #L33bdbc.  v0:= 61I;
  #L33bdc0.  if v3 == v0 then goto L33beae;
  #L33bdc4.  goto L33bf14;
  #L33bdca.  goto L33bf34;
  #L33bdd0.  v0:= new `java.lang.StringBuilder`;
  #L33bdd4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33bdda.  v1:= "Invalid G2 character: " @kind object;
  #L33bdde.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33bde4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33bdea.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33bdf0.  v3:= temp @kind object;
  #L33bdf2.  v0:= "Cea708Decoder" @kind object;
  #L33bdf6.  call `h`(v0, v3) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L33bdfc.  goto L33bf12;
  #L33be00.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be04.  v0:= 9484I;
  #L33be08.  goto L33bf0c;
  #L33be0c.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be10.  v0:= 9496I;
  #L33be14.  goto L33bf0c;
  #L33be18.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be1c.  v0:= 9472I;
  #L33be20.  goto L33bf0c;
  #L33be24.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be28.  v0:= 9492I;
  #L33be2c.  goto L33bf0c;
  #L33be30.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be34.  v0:= 9488I;
  #L33be38.  goto L33bf0c;
  #L33be3c.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be40.  v0:= 9474I;
  #L33be44.  goto L33bf0c;
  #L33be48.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be4c.  v0:= 8542I;
  #L33be50.  goto L33bf0c;
  #L33be54.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be58.  v0:= 8541I;
  #L33be5c.  goto L33bf0c;
  #L33be5e.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be62.  v0:= 8540I;
  #L33be66.  goto L33bf0c;
  #L33be68.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be6c.  v0:= 8539I;
  #L33be70.  goto L33bf0c;
  #L33be72.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be76.  v0:= 8226I;
  #L33be7a.  goto L33bf0c;
  #L33be7c.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be80.  v0:= 8221I;
  #L33be84.  goto L33bf0c;
  #L33be86.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be8a.  v0:= 8220I;
  #L33be8e.  goto L33bf0c;
  #L33be90.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be94.  v0:= 8217I;
  #L33be98.  goto L33bf0c;
  #L33be9a.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33be9e.  v0:= 8216I;
  #L33bea2.  goto L33bf0c;
  #L33bea4.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33bea8.  v0:= 9608I;
  #L33beac.  goto L33bf0c;
  #L33beae.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33beb2.  v0:= 8480I;
  #L33beb6.  goto L33bf0c;
  #L33beb8.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33bebc.  v0:= 339I;
  #L33bec0.  goto L33bf0c;
  #L33bec2.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33bec6.  v0:= 353I;
  #L33beca.  goto L33bf0c;
  #L33becc.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33bed0.  v0:= 8482I;
  #L33bed4.  goto L33bf0c;
  #L33bed6.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33beda.  v0:= 376I;
  #L33bede.  goto L33bf0c;
  #L33bee0.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33bee4.  v0:= 338I;
  #L33bee8.  goto L33bf0c;
  #L33beea.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33beee.  v0:= 352I;
  #L33bef2.  goto L33bf0c;
  #L33bef4.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33bef8.  v0:= 8230I;
  #L33befc.  goto L33bf0c;
  #L33befe.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33bf02.  v0:= 160I;
  #L33bf06.  goto L33bf0c;
  #L33bf08.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33bf0c.  call `a`(v3, v0) @signature `Lh3/c$b;.a:(C)V` @kind virtual;
  #L33bf12.  return @kind void;
  #L33bf14.  switch v3
                  | 48 => goto L33bea4
                  | 49 => goto L33be9a
                  | 50 => goto L33be90
                  | 51 => goto L33be86
                  | 52 => goto L33be7c
                  | 53 => goto L33be72
                  | else => goto L33bdca;
  #L33bf34.  switch v3
                  | 118 => goto L33be68
                  | 119 => goto L33be5e
                  | 120 => goto L33be54
                  | 121 => goto L33be48
                  | 122 => goto L33be3c
                  | 123 => goto L33be30
                  | 124 => goto L33be24
                  | 125 => goto L33be18
                  | 126 => goto L33be0c
                  | 127 => goto L33be00
                  | else => goto L33bdd0;
}
procedure `void` `z`(`h3.c` v2 @kind this, `int` v3 ) @signature `Lh3/c;.z:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33bf74.  v0:= 160I;
  #L33bf78.  if v3 != v0 then goto L33bf86;
  #L33bf7c.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33bf80.  v0:= 13252I;
  #L33bf84.  goto L33bfba;
  #L33bf86.  v0:= new `java.lang.StringBuilder`;
  #L33bf8a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33bf90.  v1:= "Invalid G3 character: " @kind object;
  #L33bf94.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33bf9a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33bfa0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33bfa6.  v3:= temp @kind object;
  #L33bfa8.  v0:= "Cea708Decoder" @kind object;
  #L33bfac.  call `h`(v0, v3) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L33bfb2.  v3:= v2.`h3.c.l` @type ^`h3.c$b` @kind object;
  #L33bfb6.  v0:= 95I;
  #L33bfba.  call `a`(v3, v0) @signature `Lh3/c$b;.a:(C)V` @kind virtual;
  #L33bfc0.  return @kind void;
}
procedure `g3.g` `f`(`h3.c` v2 @kind this) @signature `Lh3/c;.f:()Lg3/g;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L33b420.  v0:= v2.`h3.c.m` @type ^`java.util.List` @kind object;
  #L33b424.  v2.`h3.c.n` @type ^`java.util.List` := v0 @kind object;
  #L33b428.  v1:= new `h3.f`;
  #L33b42c.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33b432.  v0:= temp @kind object;
  #L33b434.  v0:= (`java.util.List`) v0 @kind object;
  #L33b438.  call `<init>`(v1, v0) @signature `Lh3/f;.<init>:(Ljava/util/List;)V` @kind direct;
  #L33b43e.  return v1 @kind object;
}
procedure `void` `flush`(`h3.c` v3 @kind this) @signature `Lh3/c;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L33b764.  call `flush`(v3) @signature `Lh3/e;.flush:()V` @kind super;
  #L33b76a.  v0:= 0I;
  #L33b76c.  v3.`h3.c.m` @type ^`java.util.List` := v0 @kind object;
  #L33b770.  v3.`h3.c.n` @type ^`java.util.List` := v0 @kind object;
  #L33b774.  v1:= 0I;
  #L33b776.  v3.`h3.c.p` @type ^`int` := v1;
  #L33b77a.  v2:= v3.`h3.c.k` @type ^`h3.c$b`[] @kind object;
  #L33b77e.  v1:= v2[v1] @kind object;
  #L33b782.  v3.`h3.c.l` @type ^`h3.c$b` := v1 @kind object;
  #L33b786.  call `F`(v3) @signature `Lh3/c;.F:()V` @kind direct;
  #L33b78c.  v3.`h3.c.o` @type ^`h3.c$c` := v0 @kind object;
  #L33b790.  return @kind void;
}
procedure `void` `g`(`h3.c` v8 @kind this, `g3.k` v9 @kind object) @signature `Lh3/c;.g:(Lg3/k;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L33b598.  v9:= v9.`y1.g.q` @type ^`java.nio.ByteBuffer` @kind object;
  #L33b59c.  call temp:= `e`(v9) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33b5a2.  v9:= temp @kind object;
  #L33b5a4.  v9:= (`java.nio.ByteBuffer`) v9 @kind object;
  #L33b5a8.  call temp:= `array`(v9) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L33b5ae.  v0:= temp @kind object;
  #L33b5b0.  v1:= v8.`h3.c.g` @type ^`s3.z` @kind object;
  #L33b5b4.  call temp:= `limit`(v9) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L33b5ba.  v9:= temp;
  #L33b5bc.  call `M`(v1, v0, v9) @signature `Ls3/z;.M:([BI)V` @kind virtual;
  #L33b5c2.  v9:= v8.`h3.c.g` @type ^`s3.z` @kind object;
  #L33b5c6.  call temp:= `a`(v9) @signature `Ls3/z;.a:()I` @kind virtual;
  #L33b5cc.  v9:= temp;
  #L33b5ce.  v0:= 3I;
  #L33b5d0.  if v9 < v0 then goto L33b72a;
  #L33b5d4.  v9:= v8.`h3.c.g` @type ^`s3.z` @kind object;
  #L33b5d8.  call temp:= `C`(v9) @signature `Ls3/z;.C:()I` @kind virtual;
  #L33b5de.  v9:= temp;
  #L33b5e0.  v9:= v9 ^& 7;
  #L33b5e4.  v1:= v9 ^& 3;
  #L33b5e8.  v2:= 4I;
  #L33b5ea.  v9:= v9 ^& v2 @kind int;
  #L33b5ec.  v3:= 0I;
  #L33b5ee.  v4:= 1I;
  #L33b5f0.  if v9 != v2 then goto L33b5f8;
  #L33b5f4.  v9:= 1I;
  #L33b5f6.  goto L33b5fa;
  #L33b5f8.  v9:= 0I;
  #L33b5fa.  v5:= v8.`h3.c.g` @type ^`s3.z` @kind object;
  #L33b5fe.  call temp:= `C`(v5) @signature `Ls3/z;.C:()I` @kind virtual;
  #L33b604.  v5:= temp;
  #L33b606.  v5:= (`byte`) v5 @kind i2b;
  #L33b608.  v6:= v8.`h3.c.g` @type ^`s3.z` @kind object;
  #L33b60c.  call temp:= `C`(v6) @signature `Ls3/z;.C:()I` @kind virtual;
  #L33b612.  v6:= temp;
  #L33b614.  v6:= (`byte`) v6 @kind i2b;
  #L33b616.  v7:= 2I;
  #L33b618.  if v1 == v7 then goto L33b622;
  #L33b61c.  if v1 == v0 then goto L33b622;
  #L33b620.  goto L33b5c2;
  #L33b622.  if v9 != 0 then goto L33b628;
  #L33b626.  goto L33b5c2;
  #L33b628.  v9:= "Cea708Decoder" @kind object;
  #L33b62c.  if v1 != v0 then goto L33b6c8;
  #L33b630.  call `p`(v8) @signature `Lh3/c;.p:()V` @kind direct;
  #L33b636.  v0:= v5 ^& 192;
  #L33b63a.  v0:= v0 ^> 6;
  #L33b63e.  v1:= v8.`h3.c.i` @type ^`int`;
  #L33b642.  v3:= -1I;
  #L33b644.  if v1 == v3 then goto L33b694;
  #L33b648.  v1:= v1 + 1;
  #L33b64c.  v1:= v1 %% v2 @kind int;
  #L33b64e.  if v0 == v1 then goto L33b694;
  #L33b652.  call `F`(v8) @signature `Lh3/c;.F:()V` @kind direct;
  #L33b658.  v1:= new `java.lang.StringBuilder`;
  #L33b65c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33b662.  v2:= "Sequence number discontinuity. previous=" @kind object;
  #L33b666.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33b66c.  v2:= v8.`h3.c.i` @type ^`int`;
  #L33b670.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33b676.  v2:= " current=" @kind object;
  #L33b67a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33b680.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33b686.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33b68c.  v1:= temp @kind object;
  #L33b68e.  call `h`(v9, v1) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L33b694.  v8.`h3.c.i` @type ^`int` := v0;
  #L33b698.  v9:= v5 ^& 63;
  #L33b69c.  if v9 != 0 then goto L33b6a4;
  #L33b6a0.  v9:= 64I;
  #L33b6a4.  v1:= new `h3.c$c`;
  #L33b6a8.  call `<init>`(v1, v0, v9) @signature `Lh3/c$c;.<init>:(II)V` @kind direct;
  #L33b6ae.  v8.`h3.c.o` @type ^`h3.c$c` := v1 @kind object;
  #L33b6b2.  v9:= v1.`h3.c$c.c` @type ^`byte`[] @kind object;
  #L33b6b6.  v0:= v1.`h3.c$c.d` @type ^`int`;
  #L33b6ba.  v2:= v0 + 1;
  #L33b6be.  v1.`h3.c$c.d` @type ^`int` := v2;
  #L33b6c2.  v9[v0]:= v6 @kind byte;
  #L33b6c6.  goto L33b70a;
  #L33b6c8.  if v1 != v7 then goto L33b6ce;
  #L33b6cc.  v3:= 1I;
  #L33b6ce.  call `a`(v3) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L33b6d4.  v0:= v8.`h3.c.o` @type ^`h3.c$c` @kind object;
  #L33b6d8.  if v0 != 0 then goto L33b6ea;
  #L33b6dc.  v0:= "Encountered DTVCC_PACKET_DATA before DTVCC_PACKET_START" @kind object;
  #L33b6e0.  call `c`(v9, v0) @signature `Ls3/q;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L33b6e6.  goto L33b5c2;
  #L33b6ea.  v9:= v0.`h3.c$c.c` @type ^`byte`[] @kind object;
  #L33b6ee.  v1:= v0.`h3.c$c.d` @type ^`int`;
  #L33b6f2.  v2:= v1 + 1;
  #L33b6f6.  v0.`h3.c$c.d` @type ^`int` := v2;
  #L33b6fa.  v9[v1]:= v5 @kind byte;
  #L33b6fe.  v1:= v2 + 1;
  #L33b702.  v0.`h3.c$c.d` @type ^`int` := v1;
  #L33b706.  v9[v2]:= v6 @kind byte;
  #L33b70a.  v9:= v8.`h3.c.o` @type ^`h3.c$c` @kind object;
  #L33b70e.  v0:= v9.`h3.c$c.d` @type ^`int`;
  #L33b712.  v9:= v9.`h3.c$c.b` @type ^`int`;
  #L33b716.  v9:= v9 * 2;
  #L33b71a.  v9:= v9 - v4 @kind int;
  #L33b71c.  if v0 != v9 then goto L33b5c2;
  #L33b720.  call `p`(v8) @signature `Lh3/c;.p:()V` @kind direct;
  #L33b726.  goto L33b5c2;
  #L33b72a.  return @kind void;
}
procedure `boolean` `l`(`h3.c` v2 @kind this) @signature `Lh3/c;.l:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L33b3fc.  v0:= v2.`h3.c.m` @type ^`java.util.List` @kind object;
  #L33b400.  v1:= v2.`h3.c.n` @type ^`java.util.List` @kind object;
  #L33b404.  if v0 == v1 then goto L33b40c;
  #L33b408.  v0:= 1I;
  #L33b40a.  goto L33b40e;
  #L33b40c.  v0:= 0I;
  #L33b40e.  return v0;
}
