record `h3.a` @kind class @AccessFlag PUBLIC_FINAL extends `h3.e` @kind class {
  `s3.z` `h3.a.g` @AccessFlag PRIVATE_FINAL;
  `int` `h3.a.h` @AccessFlag PRIVATE_FINAL;
  `int` `h3.a.i` @AccessFlag PRIVATE_FINAL;
  `int` `h3.a.j` @AccessFlag PRIVATE_FINAL;
  `long` `h3.a.k` @AccessFlag PRIVATE_FINAL;
  `java.util.ArrayList` `h3.a.l` @AccessFlag PRIVATE_FINAL;
  `h3.a$a` `h3.a.m` @AccessFlag PRIVATE;
  `java.util.List` `h3.a.n` @AccessFlag PRIVATE;
  `java.util.List` `h3.a.o` @AccessFlag PRIVATE;
  `int` `h3.a.p` @AccessFlag PRIVATE;
  `int` `h3.a.q` @AccessFlag PRIVATE;
  `boolean` `h3.a.r` @AccessFlag PRIVATE;
  `boolean` `h3.a.s` @AccessFlag PRIVATE;
  `byte` `h3.a.t` @AccessFlag PRIVATE;
  `byte` `h3.a.u` @AccessFlag PRIVATE;
  `int` `h3.a.v` @AccessFlag PRIVATE;
  `boolean` `h3.a.w` @AccessFlag PRIVATE;
  `long` `h3.a.x` @AccessFlag PRIVATE;
}
global `int`[] `@@h3.a.A` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@h3.a.B` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@h3.a.C` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@h3.a.D` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@h3.a.E` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@h3.a.F` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@h3.a.y` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@h3.a.z` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh3/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L339ca8.  v0:= 8I;
  #L339cac.  v1:= new `int`[v0];
  #L339cb0.  goto L339d30;
  #L339cb6.  `@@h3.a.y` @type ^`int`[] := v1 @kind object;
  #L339cba.  v0:= new `int`[v0];
  #L339cbe.  goto L339d58;
  #L339cc4.  `@@h3.a.z` @type ^`int`[] := v0 @kind object;
  #L339cc8.  v0:= 7I;
  #L339cca.  v0:= new `int`[v0];
  #L339cce.  goto L339d80;
  #L339cd4.  `@@h3.a.A` @type ^`int`[] := v0 @kind object;
  #L339cd8.  v0:= 96I;
  #L339cdc.  v0:= new `int`[v0];
  #L339ce0.  goto L339da4;
  #L339ce6.  `@@h3.a.B` @type ^`int`[] := v0 @kind object;
  #L339cea.  v0:= 16I;
  #L339cee.  v0:= new `int`[v0];
  #L339cf2.  goto L339f2c;
  #L339cf8.  `@@h3.a.C` @type ^`int`[] := v0 @kind object;
  #L339cfc.  v0:= 32I;
  #L339d00.  v1:= new `int`[v0];
  #L339d04.  goto L339f74;
  #L339d0a.  `@@h3.a.D` @type ^`int`[] := v1 @kind object;
  #L339d0e.  v0:= new `int`[v0];
  #L339d12.  goto L339ffc;
  #L339d18.  `@@h3.a.E` @type ^`int`[] := v0 @kind object;
  #L339d1c.  v0:= 256I;
  #L339d20.  v0:= new `boolean`[v0];
  #L339d24.  goto L33a084;
  #L339d2a.  `@@h3.a.F` @type ^`boolean`[] := v0 @kind object;
  #L339d2e.  return @kind void;
  #L339d30.  v1:= (11I, 1I, 3I, 12I, 14I, 5I, 7I, 9I) @kind object;
  #L339d57.  goto L339cb6;
  #L339d58.  v0:= (0I, 4I, 8I, 12I, 16I, 20I, 24I, 28I) @kind object;
  #L339d7f.  goto L339cc4;
  #L339d80.  v0:= (-1I, -16711936I, -16776961I, -16711681I, -65536I, -256I, -65281I) @kind object;
  #L339da3.  goto L339cd4;
  #L339da4.  v0:= (32I, 33I, 34I, 35I, 36I, 37I, 38I, 39I, 40I, 41I, 225I, 43I, 44I, 45I, 46I, 47I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 58I, 59I, 60I, 61I, 62I, 63I, 64I, 65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 91I, 233I, 93I, 237I, 243I, 250I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 231I, 247I, 209I, 241I, 9632I) @kind object;
  #L339f2b.  goto L339ce6;
  #L339f2c.  v0:= (174I, 176I, 189I, 191I, 8482I, 162I, 163I, 9834I, 224I, 32I, 232I, 226I, 234I, 238I, 244I, 251I) @kind object;
  #L339f73.  goto L339cf8;
  #L339f74.  v1:= (193I, 201I, 211I, 218I, 220I, 252I, 8216I, 161I, 42I, 39I, 8212I, 169I, 8480I, 8226I, 8220I, 8221I, 192I, 194I, 199I, 200I, 202I, 203I, 235I, 206I, 207I, 239I, 212I, 217I, 249I, 219I, 171I, 187I) @kind object;
  #L339ffb.  goto L339d0a;
  #L339ffc.  v0:= (195I, 227I, 205I, 204I, 236I, 210I, 242I, 213I, 245I, 123I, 125I, 92I, 94I, 95I, 124I, 126I, 196I, 228I, 214I, 246I, 223I, 165I, 164I, 9474I, 197I, 229I, 216I, 248I, 9484I, 9488I, 9492I, 9496I) @kind object;
  #L33a083.  goto L339d18;
  #L33a084.  v0:= (0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I, 1I, 0I, 0I, 1I, 1I, 0I, 0I, 1I, 0I, 1I, 1I, 0I) @kind object;
  #L33a18b.  goto L339d2a;
}
procedure `void` `<init>`(`h3.a` v7 @kind this, `java.lang.String` v8 @kind object, `int` v9 , `long` v10 ) @signature `Lh3/a;.<init>:(Ljava/lang/String;IJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L33a19c.  call `<init>`(v7) @signature `Lh3/e;.<init>:()V` @kind direct;
  #L33a1a2.  v0:= new `s3.z`;
  #L33a1a6.  call `<init>`(v0) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L33a1ac.  v7.`h3.a.g` @type ^`s3.z` := v0 @kind object;
  #L33a1b0.  v0:= new `java.util.ArrayList`;
  #L33a1b4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L33a1ba.  v7.`h3.a.l` @type ^`java.util.ArrayList` := v0 @kind object;
  #L33a1be.  v0:= new `h3.a$a`;
  #L33a1c2.  v1:= 0I;
  #L33a1c4.  v2:= 4I;
  #L33a1c6.  call `<init>`(v0, v1, v2) @signature `Lh3/a$a;.<init>:(II)V` @kind direct;
  #L33a1cc.  v7.`h3.a.m` @type ^`h3.a$a` := v0 @kind object;
  #L33a1d0.  v7.`h3.a.v` @type ^`int` := v1;
  #L33a1d4.  v3:= -4.9E-324D;
  #L33a1de.  v5:= 0L;
  #L33a1e2.  v0:= lcmp(v10, v5);
  #L33a1e6.  if v0 <= 0 then goto L33a1f4;
  #L33a1ea.  v5:= 1000L;
  #L33a1ee.  v10:= v10 * v5 @kind long;
  #L33a1f2.  goto L33a1f6;
  #L33a1f4.  v10:= v3 @kind wide;
  #L33a1f6.  v7.`h3.a.k` @type ^`long` := v10 @kind wide;
  #L33a1fa.  v10:= "application/x-mp4-cea-608" @kind object;
  #L33a1fe.  call temp:= `equals`(v10, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33a204.  v8:= temp;
  #L33a206.  v10:= 2I;
  #L33a208.  v11:= 3I;
  #L33a20a.  if v8 == 0 then goto L33a212;
  #L33a20e.  v8:= 2I;
  #L33a210.  goto L33a214;
  #L33a212.  v8:= 3I;
  #L33a214.  v7.`h3.a.h` @type ^`int` := v8;
  #L33a218.  v8:= 1I;
  #L33a21a.  if v9 == v8 then goto L33a250;
  #L33a21e.  if v9 == v10 then goto L33a24a;
  #L33a222.  if v9 == v11 then goto L33a240;
  #L33a226.  if v9 == v2 then goto L33a23a;
  #L33a22a.  v9:= "Cea608Decoder" @kind object;
  #L33a22e.  v10:= "Invalid channel. Defaulting to CC1." @kind object;
  #L33a232.  call `h`(v9, v10) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L33a238.  goto L33a250;
  #L33a23a.  v7.`h3.a.j` @type ^`int` := v8;
  #L33a23e.  goto L33a244;
  #L33a240.  v7.`h3.a.j` @type ^`int` := v1;
  #L33a244.  v7.`h3.a.i` @type ^`int` := v8;
  #L33a248.  goto L33a258;
  #L33a24a.  v7.`h3.a.j` @type ^`int` := v8;
  #L33a24e.  goto L33a254;
  #L33a250.  v7.`h3.a.j` @type ^`int` := v1;
  #L33a254.  v7.`h3.a.i` @type ^`int` := v1;
  #L33a258.  call `N`(v7, v1) @signature `Lh3/a;.N:(I)V` @kind direct;
  #L33a25e.  call `M`(v7) @signature `Lh3/a;.M:()V` @kind direct;
  #L33a264.  v7.`h3.a.w` @type ^`boolean` := v8 @kind boolean;
  #L33a268.  v7.`h3.a.x` @type ^`long` := v3 @kind wide;
  #L33a26c.  return @kind void;
}
procedure `boolean` `A`(`byte` v0 ) @signature `Lh3/a;.A:(B)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L339784.  v0:= v0 ^& 224;
  #L339788.  if v0 != 0 then goto L339790;
  #L33978c.  v0:= 1I;
  #L33978e.  goto L339792;
  #L339790.  v0:= 0I;
  #L339792.  return v0;
}
procedure `boolean` `B`(`byte` v1 , `byte` v2 ) @signature `Lh3/a;.B:(BB)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3397a4.  v1:= v1 ^& 246;
  #L3397a8.  v0:= 18I;
  #L3397ac.  if v1 != v0 then goto L3397c0;
  #L3397b0.  v1:= v2 ^& 224;
  #L3397b4.  v2:= 32I;
  #L3397b8.  if v1 != v2 then goto L3397c0;
  #L3397bc.  v1:= 1I;
  #L3397be.  goto L3397c2;
  #L3397c0.  v1:= 0I;
  #L3397c2.  return v1;
}
procedure `boolean` `C`(`byte` v1 , `byte` v2 ) @signature `Lh3/a;.C:(BB)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3397d4.  v1:= v1 ^& 247;
  #L3397d8.  v0:= 17I;
  #L3397dc.  if v1 != v0 then goto L3397f0;
  #L3397e0.  v1:= v2 ^& 240;
  #L3397e4.  v2:= 32I;
  #L3397e8.  if v1 != v2 then goto L3397f0;
  #L3397ec.  v1:= 1I;
  #L3397ee.  goto L3397f2;
  #L3397f0.  v1:= 0I;
  #L3397f2.  return v1;
}
procedure `boolean` `D`(`byte` v1 , `byte` v2 ) @signature `Lh3/a;.D:(BB)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L339804.  v1:= v1 ^& 246;
  #L339808.  v0:= 20I;
  #L33980c.  if v1 != v0 then goto L339820;
  #L339810.  v1:= v2 ^& 240;
  #L339814.  v2:= 32I;
  #L339818.  if v1 != v2 then goto L339820;
  #L33981c.  v1:= 1I;
  #L33981e.  goto L339822;
  #L339820.  v1:= 0I;
  #L339822.  return v1;
}
procedure `boolean` `E`(`byte` v1 , `byte` v2 ) @signature `Lh3/a;.E:(BB)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L339858.  v1:= v1 ^& 240;
  #L33985c.  v0:= 16I;
  #L339860.  if v1 != v0 then goto L339874;
  #L339864.  v1:= v2 ^& 192;
  #L339868.  v2:= 64I;
  #L33986c.  if v1 != v2 then goto L339874;
  #L339870.  v1:= 1I;
  #L339872.  goto L339876;
  #L339874.  v1:= 0I;
  #L339876.  return v1;
}
procedure `boolean` `F`(`byte` v1 ) @signature `Lh3/a;.F:(B)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L339888.  v1:= v1 ^& 240;
  #L33988c.  v0:= 16I;
  #L339890.  if v1 != v0 then goto L339898;
  #L339894.  v1:= 1I;
  #L339896.  goto L33989a;
  #L339898.  v1:= 0I;
  #L33989a.  return v1;
}
procedure `boolean` `G`(`h3.a` v2 @kind this, `boolean` v3 , `byte` v4 , `byte` v5 ) @signature `Lh3/a;.G:(ZBB)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3398ac.  v0:= 0I;
  #L3398ae.  if v3 == 0 then goto L3398ec;
  #L3398b2.  call temp:= `F`(v4) @signature `Lh3/a;.F:(B)Z` @kind static;
  #L3398b8.  v3:= temp;
  #L3398ba.  if v3 == 0 then goto L3398ec;
  #L3398be.  v3:= v2.`h3.a.s` @type ^`boolean` @kind boolean;
  #L3398c2.  v1:= 1I;
  #L3398c4.  if v3 == 0 then goto L3398de;
  #L3398c8.  v3:= v2.`h3.a.t` @type ^`byte` @kind byte;
  #L3398cc.  if v3 != v4 then goto L3398de;
  #L3398d0.  v3:= v2.`h3.a.u` @type ^`byte` @kind byte;
  #L3398d4.  if v3 != v5 then goto L3398de;
  #L3398d8.  v2.`h3.a.s` @type ^`boolean` := v0 @kind boolean;
  #L3398dc.  return v1;
  #L3398de.  v2.`h3.a.s` @type ^`boolean` := v1 @kind boolean;
  #L3398e2.  v2.`h3.a.t` @type ^`byte` := v4 @kind byte;
  #L3398e6.  v2.`h3.a.u` @type ^`byte` := v5 @kind byte;
  #L3398ea.  goto L3398f0;
  #L3398ec.  v2.`h3.a.s` @type ^`boolean` := v0 @kind boolean;
  #L3398f0.  return v0;
}
procedure `boolean` `H`(`byte` v1 ) @signature `Lh3/a;.H:(B)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L339904.  v1:= v1 ^& 247;
  #L339908.  v0:= 20I;
  #L33990c.  if v1 != v0 then goto L339914;
  #L339910.  v1:= 1I;
  #L339912.  goto L339916;
  #L339914.  v1:= 0I;
  #L339916.  return v1;
}
procedure `boolean` `I`(`byte` v1 , `byte` v2 ) @signature `Lh3/a;.I:(BB)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L339928.  v1:= v1 ^& 247;
  #L33992c.  v0:= 17I;
  #L339930.  if v1 != v0 then goto L339944;
  #L339934.  v1:= v2 ^& 240;
  #L339938.  v2:= 48I;
  #L33993c.  if v1 != v2 then goto L339944;
  #L339940.  v1:= 1I;
  #L339942.  goto L339946;
  #L339944.  v1:= 0I;
  #L339946.  return v1;
}
procedure `boolean` `J`(`byte` v1 , `byte` v2 ) @signature `Lh3/a;.J:(BB)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L339958.  v1:= v1 ^& 247;
  #L33995c.  v0:= 23I;
  #L339960.  if v1 != v0 then goto L339978;
  #L339964.  v1:= 33I;
  #L339968.  if v2 < v1 then goto L339978;
  #L33996c.  v1:= 35I;
  #L339970.  if v2 > v1 then goto L339978;
  #L339974.  v1:= 1I;
  #L339976.  goto L33997a;
  #L339978.  v1:= 0I;
  #L33997a.  return v1;
}
procedure `boolean` `K`(`byte` v2 ) @signature `Lh3/a;.K:(B)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L33998c.  v0:= 1I;
  #L33998e.  if v0 > v2 then goto L33999c;
  #L339992.  v1:= 15I;
  #L339996.  if v2 > v1 then goto L33999c;
  #L33999a.  goto L33999e;
  #L33999c.  v0:= 0I;
  #L33999e.  return v0;
}
procedure `void` `L`(`h3.a` v2 @kind this, `byte` v3 , `byte` v4 ) @signature `Lh3/a;.L:(BB)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33a71c.  call temp:= `K`(v3) @signature `Lh3/a;.K:(B)Z` @kind static;
  #L33a722.  v0:= temp;
  #L33a724.  v1:= 0I;
  #L33a726.  if v0 == 0 then goto L33a730;
  #L33a72a.  v2.`h3.a.w` @type ^`boolean` := v1 @kind boolean;
  #L33a72e.  goto L33a760;
  #L33a730.  call temp:= `H`(v3) @signature `Lh3/a;.H:(B)Z` @kind static;
  #L33a736.  v3:= temp;
  #L33a738.  if v3 == 0 then goto L33a760;
  #L33a73c.  v3:= 32I;
  #L33a740.  if v4 == v3 then goto L33a75a;
  #L33a744.  v3:= 47I;
  #L33a748.  if v4 == v3 then goto L33a75a;
  #L33a74c.  goto L33a764;
  #L33a752.  goto L33a778;
  #L33a758.  goto L33a760;
  #L33a75a.  v3:= 1I;
  #L33a75c.  v2.`h3.a.w` @type ^`boolean` := v3 @kind boolean;
  #L33a760.  return @kind void;
  #L33a762.  
  #L33a764.  switch v4
                  | 37 => goto L33a75a
                  | 38 => goto L33a75a
                  | 39 => goto L33a75a
                  | else => goto L33a752;
  #L33a778.  switch v4
                  | 41 => goto L33a75a
                  | 42 => goto L33a72a
                  | 43 => goto L33a72a
                  | else => goto L33a758;
}
procedure `void` `M`(`h3.a` v2 @kind this) @signature `Lh3/a;.M:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33a7b0.  v0:= v2.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a7b4.  v1:= v2.`h3.a.p` @type ^`int`;
  #L33a7b8.  call `j`(v0, v1) @signature `Lh3/a$a;.j:(I)V` @kind virtual;
  #L33a7be.  v0:= v2.`h3.a.l` @type ^`java.util.ArrayList` @kind object;
  #L33a7c2.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L33a7c8.  v0:= v2.`h3.a.l` @type ^`java.util.ArrayList` @kind object;
  #L33a7cc.  v1:= v2.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a7d0.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L33a7d6.  return @kind void;
}
procedure `void` `N`(`h3.a` v2 @kind this, `int` v3 ) @signature `Lh3/a;.N:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33a7e8.  v0:= v2.`h3.a.p` @type ^`int`;
  #L33a7ec.  if v0 != v3 then goto L33a7f2;
  #L33a7f0.  return @kind void;
  #L33a7f2.  v2.`h3.a.p` @type ^`int` := v3;
  #L33a7f6.  v1:= 3I;
  #L33a7f8.  if v3 != v1 then goto L33a82c;
  #L33a7fc.  v0:= 0I;
  #L33a7fe.  v1:= v2.`h3.a.l` @type ^`java.util.ArrayList` @kind object;
  #L33a802.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L33a808.  v1:= temp;
  #L33a80a.  if v0 >= v1 then goto L33a82a;
  #L33a80e.  v1:= v2.`h3.a.l` @type ^`java.util.ArrayList` @kind object;
  #L33a812.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L33a818.  v1:= temp @kind object;
  #L33a81a.  v1:= (`h3.a$a`) v1 @kind object;
  #L33a81e.  call `l`(v1, v3) @signature `Lh3/a$a;.l:(I)V` @kind virtual;
  #L33a824.  v0:= v0 + 1;
  #L33a828.  goto L33a7fe;
  #L33a82a.  return @kind void;
  #L33a82c.  call `M`(v2) @signature `Lh3/a;.M:()V` @kind direct;
  #L33a832.  if v0 == v1 then goto L33a840;
  #L33a836.  v0:= 1I;
  #L33a838.  if v3 == v0 then goto L33a840;
  #L33a83c.  if v3 != 0 then goto L33a84c;
  #L33a840.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L33a846.  v3:= temp @kind object;
  #L33a848.  v2.`h3.a.n` @type ^`java.util.List` := v3 @kind object;
  #L33a84c.  return @kind void;
}
procedure `void` `O`(`h3.a` v1 @kind this, `int` v2 ) @signature `Lh3/a;.O:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33a860.  v1.`h3.a.q` @type ^`int` := v2;
  #L33a864.  v0:= v1.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a868.  call `m`(v0, v2) @signature `Lh3/a$a;.m:(I)V` @kind virtual;
  #L33a86e.  return @kind void;
}
procedure `boolean` `P`(`h3.a` v6 @kind this) @signature `Lh3/a;.P:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3399b0.  v0:= v6.`h3.a.k` @type ^`long` @kind wide;
  #L3399b4.  v2:= 0I;
  #L3399b6.  v3:= -4.9E-324D;
  #L3399c0.  v5:= lcmp(v0, v3);
  #L3399c4.  if v5 == 0 then goto L3399f2;
  #L3399c8.  v0:= v6.`h3.a.x` @type ^`long` @kind wide;
  #L3399cc.  v5:= lcmp(v0, v3);
  #L3399d0.  if v5 != 0 then goto L3399d6;
  #L3399d4.  goto L3399f2;
  #L3399d6.  call temp:= `k`(v6) @signature `Lh3/e;.k:()J` @kind virtual;
  #L3399dc.  v0:= temp @kind wide;
  #L3399de.  v3:= v6.`h3.a.x` @type ^`long` @kind wide;
  #L3399e2.  v0:= v0 - v3 @kind long;
  #L3399e4.  v3:= v6.`h3.a.k` @type ^`long` @kind wide;
  #L3399e8.  v5:= lcmp(v0, v3);
  #L3399ec.  if v5 < 0 then goto L3399f2;
  #L3399f0.  v2:= 1I;
  #L3399f2.  return v2;
}
procedure `boolean` `Q`(`h3.a` v1 @kind this, `byte` v2 ) @signature `Lh3/a;.Q:(B)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L339a04.  call temp:= `A`(v2) @signature `Lh3/a;.A:(B)Z` @kind static;
  #L339a0a.  v0:= temp;
  #L339a0c.  if v0 == 0 then goto L339a1c;
  #L339a10.  call temp:= `r`(v2) @signature `Lh3/a;.r:(B)I` @kind static;
  #L339a16.  v2:= temp;
  #L339a18.  v1.`h3.a.v` @type ^`int` := v2;
  #L339a1c.  v2:= v1.`h3.a.v` @type ^`int`;
  #L339a20.  v0:= v1.`h3.a.j` @type ^`int`;
  #L339a24.  if v2 != v0 then goto L339a2c;
  #L339a28.  v2:= 1I;
  #L339a2a.  goto L339a2e;
  #L339a2c.  v2:= 0I;
  #L339a2e.  return v2;
}
procedure `int`[] `p`() @signature `Lh3/a;.p:()[I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L339bb4.  v0:= `@@h3.a.A` @type ^`int`[] @kind object;
  #L339bb8.  return v0 @kind object;
}
procedure `char` `q`(`byte` v1 ) @signature `Lh3/a;.q:(B)C` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L339a40.  v1:= v1 ^& 127;
  #L339a44.  v1:= v1 + -32;
  #L339a48.  v0:= `@@h3.a.B` @type ^`int`[] @kind object;
  #L339a4c.  v1:= v0[v1];
  #L339a50.  v1:= (`char`) v1 @kind i2c;
  #L339a52.  return v1;
}
procedure `int` `r`(`byte` v0 ) @signature `Lh3/a;.r:(B)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L339b98.  v0:= v0 ^> 3;
  #L339b9c.  v0:= v0 ^& 1;
  #L339ba0.  return v0;
}
procedure `java.util.List` `s`(`h3.a` v7 @kind this) @signature `Lh3/a;.s:()Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L339be8.  v0:= v7.`h3.a.l` @type ^`java.util.ArrayList` @kind object;
  #L339bec.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L339bf2.  v0:= temp;
  #L339bf4.  v1:= new `java.util.ArrayList`;
  #L339bf8.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L339bfe.  v2:= 0I;
  #L339c00.  v3:= 2I;
  #L339c02.  v4:= 0I;
  #L339c04.  if v4 >= v0 then goto L339c40;
  #L339c08.  v5:= v7.`h3.a.l` @type ^`java.util.ArrayList` @kind object;
  #L339c0c.  call temp:= `get`(v5, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L339c12.  v5:= temp @kind object;
  #L339c14.  v5:= (`h3.a$a`) v5 @kind object;
  #L339c18.  v6:= -2147483648I;
  #L339c1c.  call temp:= `g`(v5, v6) @signature `Lh3/a$a;.g:(I)Lg3/b;` @kind virtual;
  #L339c22.  v5:= temp @kind object;
  #L339c24.  call temp:= `add`(v1, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L339c2a.  if v5 == 0 then goto L339c3a;
  #L339c2e.  v5:= v5.`g3.b.w` @type ^`int`;
  #L339c32.  call temp:= `min`(v3, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L339c38.  v3:= temp;
  #L339c3a.  v4:= v4 + 1;
  #L339c3e.  goto L339c04;
  #L339c40.  v4:= new `java.util.ArrayList`;
  #L339c44.  call `<init>`(v4, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L339c4a.  if v2 >= v0 then goto L339c96;
  #L339c4e.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339c54.  v5:= temp @kind object;
  #L339c56.  v5:= (`g3.b`) v5 @kind object;
  #L339c5a.  if v5 == 0 then goto L339c90;
  #L339c5e.  v6:= v5.`g3.b.w` @type ^`int`;
  #L339c62.  if v6 == v3 then goto L339c8a;
  #L339c66.  v5:= v7.`h3.a.l` @type ^`java.util.ArrayList` @kind object;
  #L339c6a.  call temp:= `get`(v5, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L339c70.  v5:= temp @kind object;
  #L339c72.  v5:= (`h3.a$a`) v5 @kind object;
  #L339c76.  call temp:= `g`(v5, v3) @signature `Lh3/a$a;.g:(I)Lg3/b;` @kind virtual;
  #L339c7c.  v5:= temp @kind object;
  #L339c7e.  call temp:= `e`(v5) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L339c84.  v5:= temp @kind object;
  #L339c86.  v5:= (`g3.b`) v5 @kind object;
  #L339c8a.  call temp:= `add`(v4, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L339c90.  v2:= v2 + 1;
  #L339c94.  goto L339c4a;
  #L339c96.  return v4 @kind object;
}
procedure `char` `t`(`byte` v1 ) @signature `Lh3/a;.t:(B)C` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L339a64.  v1:= v1 ^& 31;
  #L339a68.  v0:= `@@h3.a.D` @type ^`int`[] @kind object;
  #L339a6c.  v1:= v0[v1];
  #L339a70.  v1:= (`char`) v1 @kind i2c;
  #L339a72.  return v1;
}
procedure `char` `u`(`byte` v1 ) @signature `Lh3/a;.u:(B)C` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L339a84.  v1:= v1 ^& 31;
  #L339a88.  v0:= `@@h3.a.E` @type ^`int`[] @kind object;
  #L339a8c.  v1:= v0[v1];
  #L339a90.  v1:= (`char`) v1 @kind i2c;
  #L339a92.  return v1;
}
procedure `char` `v`(`byte` v0 , `byte` v1 ) @signature `Lh3/a;.v:(BB)C` @AccessFlag PRIVATE_STATIC {
    temp;

  #L339aa4.  v0:= v0 ^& 1;
  #L339aa8.  if v0 != 0 then goto L339ab6;
  #L339aac.  call temp:= `t`(v1) @signature `Lh3/a;.t:(B)C` @kind static;
  #L339ab2.  v0:= temp;
  #L339ab4.  return v0;
  #L339ab6.  call temp:= `u`(v1) @signature `Lh3/a;.u:(B)C` @kind static;
  #L339abc.  v0:= temp;
  #L339abe.  return v0;
}
procedure `char` `w`(`byte` v1 ) @signature `Lh3/a;.w:(B)C` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L339ad0.  v1:= v1 ^& 15;
  #L339ad4.  v0:= `@@h3.a.C` @type ^`int`[] @kind object;
  #L339ad8.  v1:= v0[v1];
  #L339adc.  v1:= (`char`) v1 @kind i2c;
  #L339ade.  return v1;
}
procedure `void` `x`(`h3.a` v2 @kind this, `byte` v3 ) @signature `Lh3/a;.x:(B)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33a4fc.  v0:= v2.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a500.  v1:= 32I;
  #L33a504.  call `e`(v0, v1) @signature `Lh3/a$a;.e:(C)V` @kind virtual;
  #L33a50a.  v0:= v3 ^& 1;
  #L33a50e.  v1:= 1I;
  #L33a510.  if v0 != v1 then goto L33a518;
  #L33a514.  v0:= 1I;
  #L33a516.  goto L33a51a;
  #L33a518.  v0:= 0I;
  #L33a51a.  v3:= v3 ^> v1 @kind int;
  #L33a51c.  v3:= v3 ^& 7;
  #L33a520.  v1:= v2.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a524.  call `p`(v1, v3, v0) @signature `Lh3/a$a;.p:(IZ)V` @kind virtual;
  #L33a52a.  return @kind void;
}
procedure `void` `y`(`h3.a` v4 @kind this, `byte` v5 ) @signature `Lh3/a;.y:(B)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33a53c.  v0:= 32I;
  #L33a540.  v1:= 2I;
  #L33a542.  if v5 == v0 then goto L33a600;
  #L33a546.  v0:= 41I;
  #L33a54a.  v2:= 3I;
  #L33a54c.  if v5 == v0 then goto L33a5f8;
  #L33a550.  v0:= 1I;
  #L33a552.  goto L33a608;
  #L33a558.  v1:= v4.`h3.a.p` @type ^`int`;
  #L33a55c.  if v1 != 0 then goto L33a562;
  #L33a560.  return @kind void;
  #L33a562.  v3:= 33I;
  #L33a566.  if v5 == v3 then goto L33a5c0;
  #L33a56a.  goto L33a61c;
  #L33a570.  goto L33a5ca;
  #L33a572.  call temp:= `s`(v4) @signature `Lh3/a;.s:()Ljava/util/List;` @kind direct;
  #L33a578.  v5:= temp @kind object;
  #L33a57a.  v4.`h3.a.n` @type ^`java.util.List` := v5 @kind object;
  #L33a57e.  call `M`(v4) @signature `Lh3/a;.M:()V` @kind direct;
  #L33a584.  goto L33a5ca;
  #L33a586.  if v1 != v0 then goto L33a5ca;
  #L33a58a.  v5:= v4.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a58e.  call temp:= `i`(v5) @signature `Lh3/a$a;.i:()Z` @kind virtual;
  #L33a594.  v5:= temp;
  #L33a596.  if v5 != 0 then goto L33a5ca;
  #L33a59a.  v5:= v4.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a59e.  call `k`(v5) @signature `Lh3/a$a;.k:()V` @kind virtual;
  #L33a5a4.  goto L33a5ca;
  #L33a5a6.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L33a5ac.  v5:= temp @kind object;
  #L33a5ae.  v4.`h3.a.n` @type ^`java.util.List` := v5 @kind object;
  #L33a5b2.  v5:= v4.`h3.a.p` @type ^`int`;
  #L33a5b6.  if v5 == v0 then goto L33a57e;
  #L33a5ba.  if v5 != v2 then goto L33a5ca;
  #L33a5be.  goto L33a57e;
  #L33a5c0.  v5:= v4.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a5c4.  call `f`(v5) @signature `Lh3/a$a;.f:()V` @kind virtual;
  #L33a5ca.  return @kind void;
  #L33a5cc.  call `N`(v4, v0) @signature `Lh3/a;.N:(I)V` @kind direct;
  #L33a5d2.  v5:= 4I;
  #L33a5d4.  call `O`(v4, v5) @signature `Lh3/a;.O:(I)V` @kind direct;
  #L33a5da.  return @kind void;
  #L33a5dc.  call `N`(v4, v0) @signature `Lh3/a;.N:(I)V` @kind direct;
  #L33a5e2.  call `O`(v4, v2) @signature `Lh3/a;.O:(I)V` @kind direct;
  #L33a5e8.  return @kind void;
  #L33a5ea.  call `N`(v4, v0) @signature `Lh3/a;.N:(I)V` @kind direct;
  #L33a5f0.  call `O`(v4, v1) @signature `Lh3/a;.O:(I)V` @kind direct;
  #L33a5f6.  return @kind void;
  #L33a5f8.  call `N`(v4, v2) @signature `Lh3/a;.N:(I)V` @kind direct;
  #L33a5fe.  return @kind void;
  #L33a600.  call `N`(v4, v1) @signature `Lh3/a;.N:(I)V` @kind direct;
  #L33a606.  return @kind void;
  #L33a608.  switch v5
                  | 37 => goto L33a5ea
                  | 38 => goto L33a5dc
                  | 39 => goto L33a5cc
                  | else => goto L33a558;
  #L33a61c.  switch v5
                  | 44 => goto L33a5a6
                  | 45 => goto L33a586
                  | 46 => goto L33a57e
                  | 47 => goto L33a572
                  | else => goto L33a570;
}
procedure `void` `z`(`h3.a` v5 @kind this, `byte` v6 , `byte` v7 ) @signature `Lh3/a;.z:(BB)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L33a644.  v0:= `@@h3.a.y` @type ^`int`[] @kind object;
  #L33a648.  v6:= v6 ^& 7;
  #L33a64c.  v6:= v0[v6];
  #L33a650.  v0:= v7 ^& 32;
  #L33a654.  v1:= 0I;
  #L33a656.  v2:= 1I;
  #L33a658.  if v0 == 0 then goto L33a660;
  #L33a65c.  v0:= 1I;
  #L33a65e.  goto L33a662;
  #L33a660.  v0:= 0I;
  #L33a662.  if v0 == 0 then goto L33a66a;
  #L33a666.  v6:= v6 + 1;
  #L33a66a.  v0:= v5.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a66e.  call temp:= `b`(v0) @signature `Lh3/a$a;.b:(Lh3/a$a;)I` @kind static;
  #L33a674.  v0:= temp;
  #L33a676.  if v6 == v0 then goto L33a6bc;
  #L33a67a.  v0:= v5.`h3.a.p` @type ^`int`;
  #L33a67e.  if v0 == v2 then goto L33a6b2;
  #L33a682.  v0:= v5.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a686.  call temp:= `i`(v0) @signature `Lh3/a$a;.i:()Z` @kind virtual;
  #L33a68c.  v0:= temp;
  #L33a68e.  if v0 != 0 then goto L33a6b2;
  #L33a692.  v0:= new `h3.a$a`;
  #L33a696.  v3:= v5.`h3.a.p` @type ^`int`;
  #L33a69a.  v4:= v5.`h3.a.q` @type ^`int`;
  #L33a69e.  call `<init>`(v0, v3, v4) @signature `Lh3/a$a;.<init>:(II)V` @kind direct;
  #L33a6a4.  v5.`h3.a.m` @type ^`h3.a$a` := v0 @kind object;
  #L33a6a8.  v3:= v5.`h3.a.l` @type ^`java.util.ArrayList` @kind object;
  #L33a6ac.  call temp:= `add`(v3, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L33a6b2.  v0:= v5.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a6b6.  call temp:= `c`(v0, v6) @signature `Lh3/a$a;.c:(Lh3/a$a;I)I` @kind static;
  #L33a6bc.  v6:= v7 ^& 16;
  #L33a6c0.  v0:= 16I;
  #L33a6c4.  if v6 != v0 then goto L33a6cc;
  #L33a6c8.  v6:= 1I;
  #L33a6ca.  goto L33a6ce;
  #L33a6cc.  v6:= 0I;
  #L33a6ce.  v0:= v7 ^& 1;
  #L33a6d2.  if v0 != v2 then goto L33a6d8;
  #L33a6d6.  v1:= 1I;
  #L33a6d8.  v7:= v7 ^> v2 @kind int;
  #L33a6da.  v7:= v7 ^& 7;
  #L33a6de.  v0:= v5.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a6e2.  if v6 == 0 then goto L33a6ec;
  #L33a6e6.  v2:= 8I;
  #L33a6ea.  goto L33a6ee;
  #L33a6ec.  v2:= v7;
  #L33a6ee.  call `p`(v0, v2, v1) @signature `Lh3/a$a;.p:(IZ)V` @kind virtual;
  #L33a6f4.  if v6 == 0 then goto L33a70a;
  #L33a6f8.  v6:= v5.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a6fc.  v0:= `@@h3.a.z` @type ^`int`[] @kind object;
  #L33a700.  v7:= v0[v7];
  #L33a704.  call temp:= `d`(v6, v7) @signature `Lh3/a$a;.d:(Lh3/a$a;I)I` @kind static;
  #L33a70a.  return @kind void;
}
procedure `void` `a`(`h3.a` v0 @kind this) @signature `Lh3/a;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L33a79c.  return @kind void;
}
procedure `java.lang.Object` `d`(`h3.a` v1 @kind this) @signature `Lh3/a;.d:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L339bcc.  call temp:= `i`(v1) @signature `Lh3/a;.i:()Lg3/l;` @kind virtual;
  #L339bd2.  v0:= temp @kind object;
  #L339bd4.  return v0 @kind object;
}
procedure `g3.g` `f`(`h3.a` v2 @kind this) @signature `Lh3/a;.f:()Lg3/g;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L339af0.  v0:= v2.`h3.a.n` @type ^`java.util.List` @kind object;
  #L339af4.  v2.`h3.a.o` @type ^`java.util.List` := v0 @kind object;
  #L339af8.  v1:= new `h3.f`;
  #L339afc.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L339b02.  v0:= temp @kind object;
  #L339b04.  v0:= (`java.util.List`) v0 @kind object;
  #L339b08.  call `<init>`(v1, v0) @signature `Lh3/f;.<init>:(Ljava/util/List;)V` @kind direct;
  #L339b0e.  return v1 @kind object;
}
procedure `void` `flush`(`h3.a` v2 @kind this) @signature `Lh3/a;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33a49c.  call `flush`(v2) @signature `Lh3/e;.flush:()V` @kind super;
  #L33a4a2.  v0:= 0I;
  #L33a4a4.  v2.`h3.a.n` @type ^`java.util.List` := v0 @kind object;
  #L33a4a8.  v2.`h3.a.o` @type ^`java.util.List` := v0 @kind object;
  #L33a4ac.  v0:= 0I;
  #L33a4ae.  call `N`(v2, v0) @signature `Lh3/a;.N:(I)V` @kind direct;
  #L33a4b4.  v1:= 4I;
  #L33a4b6.  call `O`(v2, v1) @signature `Lh3/a;.O:(I)V` @kind direct;
  #L33a4bc.  call `M`(v2) @signature `Lh3/a;.M:()V` @kind direct;
  #L33a4c2.  v2.`h3.a.r` @type ^`boolean` := v0 @kind boolean;
  #L33a4c6.  v2.`h3.a.s` @type ^`boolean` := v0 @kind boolean;
  #L33a4ca.  v2.`h3.a.t` @type ^`byte` := v0 @kind byte;
  #L33a4ce.  v2.`h3.a.u` @type ^`byte` := v0 @kind byte;
  #L33a4d2.  v2.`h3.a.v` @type ^`int` := v0;
  #L33a4d6.  v0:= 1I;
  #L33a4d8.  v2.`h3.a.w` @type ^`boolean` := v0 @kind boolean;
  #L33a4dc.  v0:= -4.9E-324D;
  #L33a4e6.  v2.`h3.a.x` @type ^`long` := v0 @kind wide;
  #L33a4ea.  return @kind void;
}
procedure `void` `g`(`h3.a` v9 @kind this, `g3.k` v10 @kind object) @signature `Lh3/a;.g:(Lg3/k;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L33a280.  v10:= v10.`y1.g.q` @type ^`java.nio.ByteBuffer` @kind object;
  #L33a284.  call temp:= `e`(v10) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L33a28a.  v10:= temp @kind object;
  #L33a28c.  v10:= (`java.nio.ByteBuffer`) v10 @kind object;
  #L33a290.  v0:= v9.`h3.a.g` @type ^`s3.z` @kind object;
  #L33a294.  call temp:= `array`(v10) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L33a29a.  v1:= temp @kind object;
  #L33a29c.  call temp:= `limit`(v10) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L33a2a2.  v10:= temp;
  #L33a2a4.  call `M`(v0, v1, v10) @signature `Ls3/z;.M:([BI)V` @kind virtual;
  #L33a2aa.  v10:= 0I;
  #L33a2ac.  v0:= 1I;
  #L33a2ae.  v1:= 0I;
  #L33a2b0.  v2:= v9.`h3.a.g` @type ^`s3.z` @kind object;
  #L33a2b4.  call temp:= `a`(v2) @signature `Ls3/z;.a:()I` @kind virtual;
  #L33a2ba.  v2:= temp;
  #L33a2bc.  v3:= v9.`h3.a.h` @type ^`int`;
  #L33a2c0.  if v2 < v3 then goto L33a460;
  #L33a2c4.  v2:= 2I;
  #L33a2c6.  if v3 != v2 then goto L33a2ce;
  #L33a2ca.  v2:= -4I;
  #L33a2cc.  goto L33a2dc;
  #L33a2ce.  v2:= v9.`h3.a.g` @type ^`s3.z` @kind object;
  #L33a2d2.  call temp:= `C`(v2) @signature `Ls3/z;.C:()I` @kind virtual;
  #L33a2d8.  v2:= temp;
  #L33a2da.  v2:= (`byte`) v2 @kind i2b;
  #L33a2dc.  v3:= v9.`h3.a.g` @type ^`s3.z` @kind object;
  #L33a2e0.  call temp:= `C`(v3) @signature `Ls3/z;.C:()I` @kind virtual;
  #L33a2e6.  v3:= temp;
  #L33a2e8.  v4:= v9.`h3.a.g` @type ^`s3.z` @kind object;
  #L33a2ec.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L33a2f2.  v4:= temp;
  #L33a2f4.  v5:= v2 ^& 2;
  #L33a2f8.  if v5 == 0 then goto L33a2fe;
  #L33a2fc.  goto L33a2b0;
  #L33a2fe.  v5:= v2 ^& 1;
  #L33a302.  v6:= v9.`h3.a.i` @type ^`int`;
  #L33a306.  if v5 == v6 then goto L33a30c;
  #L33a30a.  goto L33a2b0;
  #L33a30c.  v5:= v3 ^& 127;
  #L33a310.  v5:= (`byte`) v5 @kind i2b;
  #L33a312.  v6:= v4 ^& 127;
  #L33a316.  v6:= (`byte`) v6 @kind i2b;
  #L33a318.  if v5 != 0 then goto L33a322;
  #L33a31c.  if v6 != 0 then goto L33a322;
  #L33a320.  goto L33a2b0;
  #L33a322.  v7:= v9.`h3.a.r` @type ^`boolean` @kind boolean;
  #L33a326.  v2:= v2 ^& 4;
  #L33a32a.  v8:= 4I;
  #L33a32c.  if v2 != v8 then goto L33a348;
  #L33a330.  v2:= `@@h3.a.F` @type ^`boolean`[] @kind object;
  #L33a334.  v3:= v2[v3] @kind boolean;
  #L33a338.  if v3 == 0 then goto L33a348;
  #L33a33c.  v2:= v2[v4] @kind boolean;
  #L33a340.  if v2 == 0 then goto L33a348;
  #L33a344.  v2:= 1I;
  #L33a346.  goto L33a34a;
  #L33a348.  v2:= 0I;
  #L33a34a.  v9.`h3.a.r` @type ^`boolean` := v2 @kind boolean;
  #L33a34e.  call temp:= `G`(v9, v2, v5, v6) @signature `Lh3/a;.G:(ZBB)Z` @kind direct;
  #L33a354.  v2:= temp;
  #L33a356.  if v2 == 0 then goto L33a35c;
  #L33a35a.  goto L33a2b0;
  #L33a35c.  v2:= v9.`h3.a.r` @type ^`boolean` @kind boolean;
  #L33a360.  if v2 != 0 then goto L33a372;
  #L33a364.  if v7 == 0 then goto L33a2b0;
  #L33a368.  call `M`(v9) @signature `Lh3/a;.M:()V` @kind direct;
  #L33a36e.  v1:= 1I;
  #L33a370.  goto L33a2b0;
  #L33a372.  call `L`(v9, v5, v6) @signature `Lh3/a;.L:(BB)V` @kind direct;
  #L33a378.  v2:= v9.`h3.a.w` @type ^`boolean` @kind boolean;
  #L33a37c.  if v2 != 0 then goto L33a382;
  #L33a380.  goto L33a2b0;
  #L33a382.  call temp:= `Q`(v9, v5) @signature `Lh3/a;.Q:(B)Z` @kind direct;
  #L33a388.  v2:= temp;
  #L33a38a.  if v2 != 0 then goto L33a390;
  #L33a38e.  goto L33a2b0;
  #L33a390.  call temp:= `A`(v5) @signature `Lh3/a;.A:(B)Z` @kind static;
  #L33a396.  v1:= temp;
  #L33a398.  if v1 == 0 then goto L33a432;
  #L33a39c.  call temp:= `I`(v5, v6) @signature `Lh3/a;.I:(BB)Z` @kind static;
  #L33a3a2.  v1:= temp;
  #L33a3a4.  if v1 == 0 then goto L33a3b6;
  #L33a3a8.  v1:= v9.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a3ac.  call temp:= `w`(v6) @signature `Lh3/a;.w:(B)C` @kind static;
  #L33a3b2.  v2:= temp;
  #L33a3b4.  goto L33a458;
  #L33a3b6.  call temp:= `B`(v5, v6) @signature `Lh3/a;.B:(BB)Z` @kind static;
  #L33a3bc.  v1:= temp;
  #L33a3be.  if v1 == 0 then goto L33a3da;
  #L33a3c2.  v1:= v9.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a3c6.  call `f`(v1) @signature `Lh3/a$a;.f:()V` @kind virtual;
  #L33a3cc.  v1:= v9.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a3d0.  call temp:= `v`(v5, v6) @signature `Lh3/a;.v:(BB)C` @kind static;
  #L33a3d6.  v2:= temp;
  #L33a3d8.  goto L33a458;
  #L33a3da.  call temp:= `C`(v5, v6) @signature `Lh3/a;.C:(BB)Z` @kind static;
  #L33a3e0.  v1:= temp;
  #L33a3e2.  if v1 == 0 then goto L33a3ee;
  #L33a3e6.  call `x`(v9, v6) @signature `Lh3/a;.x:(B)V` @kind direct;
  #L33a3ec.  goto L33a36e;
  #L33a3ee.  call temp:= `E`(v5, v6) @signature `Lh3/a;.E:(BB)Z` @kind static;
  #L33a3f4.  v1:= temp;
  #L33a3f6.  if v1 == 0 then goto L33a402;
  #L33a3fa.  call `z`(v9, v5, v6) @signature `Lh3/a;.z:(BB)V` @kind direct;
  #L33a400.  goto L33a36e;
  #L33a402.  call temp:= `J`(v5, v6) @signature `Lh3/a;.J:(BB)Z` @kind static;
  #L33a408.  v1:= temp;
  #L33a40a.  if v1 == 0 then goto L33a41e;
  #L33a40e.  v1:= v9.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a412.  v6:= v6 + -32;
  #L33a416.  call temp:= `a`(v1, v6) @signature `Lh3/a$a;.a:(Lh3/a$a;I)I` @kind static;
  #L33a41c.  goto L33a36e;
  #L33a41e.  call temp:= `D`(v5, v6) @signature `Lh3/a;.D:(BB)Z` @kind static;
  #L33a424.  v1:= temp;
  #L33a426.  if v1 == 0 then goto L33a36e;
  #L33a42a.  call `y`(v9, v6) @signature `Lh3/a;.y:(B)V` @kind direct;
  #L33a430.  goto L33a36e;
  #L33a432.  v1:= v9.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a436.  call temp:= `q`(v5) @signature `Lh3/a;.q:(B)C` @kind static;
  #L33a43c.  v2:= temp;
  #L33a43e.  call `e`(v1, v2) @signature `Lh3/a$a;.e:(C)V` @kind virtual;
  #L33a444.  v1:= v6 ^& 224;
  #L33a448.  if v1 == 0 then goto L33a36e;
  #L33a44c.  v1:= v9.`h3.a.m` @type ^`h3.a$a` @kind object;
  #L33a450.  call temp:= `q`(v6) @signature `Lh3/a;.q:(B)C` @kind static;
  #L33a456.  v2:= temp;
  #L33a458.  call `e`(v1, v2) @signature `Lh3/a$a;.e:(C)V` @kind virtual;
  #L33a45e.  goto L33a36e;
  #L33a460.  if v1 == 0 then goto L33a48a;
  #L33a464.  v10:= v9.`h3.a.p` @type ^`int`;
  #L33a468.  if v10 == v0 then goto L33a472;
  #L33a46c.  v0:= 3I;
  #L33a46e.  if v10 != v0 then goto L33a48a;
  #L33a472.  call temp:= `s`(v9) @signature `Lh3/a;.s:()Ljava/util/List;` @kind direct;
  #L33a478.  v10:= temp @kind object;
  #L33a47a.  v9.`h3.a.n` @type ^`java.util.List` := v10 @kind object;
  #L33a47e.  call temp:= `k`(v9) @signature `Lh3/e;.k:()J` @kind virtual;
  #L33a484.  v0:= temp @kind wide;
  #L33a486.  v9.`h3.a.x` @type ^`long` := v0 @kind wide;
  #L33a48a.  return @kind void;
}
procedure `g3.l` `i`(`h3.a` v7 @kind this) @signature `Lh3/a;.i:()Lg3/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L339b20.  call temp:= `i`(v7) @signature `Lh3/e;.i:()Lg3/l;` @kind super;
  #L339b26.  v0:= temp @kind object;
  #L339b28.  if v0 == 0 then goto L339b2e;
  #L339b2c.  return v0 @kind object;
  #L339b2e.  call temp:= `P`(v7) @signature `Lh3/a;.P:()Z` @kind direct;
  #L339b34.  v0:= temp;
  #L339b36.  if v0 == 0 then goto L339b84;
  #L339b3a.  call temp:= `j`(v7) @signature `Lh3/e;.j:()Lg3/l;` @kind virtual;
  #L339b40.  v0:= temp @kind object;
  #L339b42.  if v0 == 0 then goto L339b84;
  #L339b46.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L339b4c.  v1:= temp @kind object;
  #L339b4e.  v7.`h3.a.n` @type ^`java.util.List` := v1 @kind object;
  #L339b52.  v1:= -4.9E-324D;
  #L339b5c.  v7.`h3.a.x` @type ^`long` := v1 @kind wide;
  #L339b60.  call temp:= `f`(v7) @signature `Lh3/a;.f:()Lg3/g;` @kind virtual;
  #L339b66.  v4:= temp @kind object;
  #L339b68.  call temp:= `k`(v7) @signature `Lh3/e;.k:()J` @kind virtual;
  #L339b6e.  v2:= temp @kind wide;
  #L339b70.  v5:= 9223372036854775807L;
  #L339b7a.  v1:= v0 @kind object;
  #L339b7c.  call `F`(v1, v2, v4, v5) @signature `Lg3/l;.F:(JLg3/g;J)V` @kind virtual;
  #L339b82.  return v0 @kind object;
  #L339b84.  v0:= 0I;
  #L339b86.  return v0 @kind object;
}
procedure `boolean` `l`(`h3.a` v2 @kind this) @signature `Lh3/a;.l:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L339834.  v0:= v2.`h3.a.n` @type ^`java.util.List` @kind object;
  #L339838.  v1:= v2.`h3.a.o` @type ^`java.util.List` @kind object;
  #L33983c.  if v0 == v1 then goto L339844;
  #L339840.  v0:= 1I;
  #L339842.  goto L339846;
  #L339844.  v0:= 0I;
  #L339846.  return v0;
}
