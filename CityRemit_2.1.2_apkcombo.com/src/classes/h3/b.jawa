record `h3.b` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.Comparator` @kind interface {
}
global `h3.b` `@@h3.b.o` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lh3/b;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L33a8a4.  v0:= new `h3.b`;
  #L33a8a8.  call `<init>`(v0) @signature `Lh3/b;.<init>:()V` @kind direct;
  #L33a8ae.  `@@h3.b.o` @type ^`h3.b` := v0 @kind object;
  #L33a8b2.  return @kind void;
}
procedure `void` `<init>`(`h3.b` v0 @kind this) @signature `Lh3/b;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L33a8c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33a8ca.  return @kind void;
}
procedure `int` `compare`(`h3.b` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lh3/b;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L33a880.  v1:= (`h3.c$a`) v1 @kind object;
  #L33a884.  v2:= (`h3.c$a`) v2 @kind object;
  #L33a888.  call temp:= `a`(v1, v2) @signature `Lh3/c$a;.a:(Lh3/c$a;Lh3/c$a;)I` @kind static;
  #L33a88e.  v1:= temp;
  #L33a890.  return v1;
}
