record `wb.c` @kind class @AccessFlag PUBLIC_FINAL extends `wb.a` @kind class {
}
global `wb.c$a` `@@wb.c.s` @AccessFlag PUBLIC_STATIC_FINAL;
global `wb.c` `@@wb.c.t` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lwb/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4c5a88.  v0:= new `wb.c$a`;
  #L4c5a8c.  v1:= 0I;
  #L4c5a8e.  call `<init>`(v0, v1) @signature `Lwb/c$a;.<init>:(Lkotlin/jvm/internal/g;)V` @kind direct;
  #L4c5a94.  `@@wb.c.s` @type ^`wb.c$a` := v0 @kind object;
  #L4c5a98.  v0:= new `wb.c`;
  #L4c5a9c.  v1:= 1I;
  #L4c5a9e.  v2:= 0I;
  #L4c5aa0.  call `<init>`(v0, v1, v2) @signature `Lwb/c;.<init>:(II)V` @kind direct;
  #L4c5aa6.  `@@wb.c.t` @type ^`wb.c` := v0 @kind object;
  #L4c5aaa.  return @kind void;
}
procedure `void` `<init>`(`wb.c` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lwb/c;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4c5abc.  v0:= 1I;
  #L4c5abe.  call `<init>`(v1, v2, v3, v0) @signature `Lwb/a;.<init>:(III)V` @kind direct;
  #L4c5ac4.  return @kind void;
}
procedure `wb.c` `n`() @signature `Lwb/c;.n:()Lwb/c;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L4c5ad8.  v0:= `@@wb.c.t` @type ^`wb.c` @kind object;
  #L4c5adc.  return v0 @kind object;
}
procedure `boolean` `equals`(`wb.c` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lwb/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c5924.  v0:= instanceof @variable v3 @type ^`wb.c` @kind boolean;
  #L4c5928.  if v0 == 0 then goto L4c597a;
  #L4c592c.  call temp:= `isEmpty`(v2) @signature `Lwb/c;.isEmpty:()Z` @kind virtual;
  #L4c5932.  v0:= temp;
  #L4c5934.  if v0 == 0 then goto L4c594a;
  #L4c5938.  v0:= v3 @kind object;
  #L4c593a.  v0:= (`wb.c`) v0 @kind object;
  #L4c593e.  call temp:= `isEmpty`(v0) @signature `Lwb/c;.isEmpty:()Z` @kind virtual;
  #L4c5944.  v0:= temp;
  #L4c5946.  if v0 != 0 then goto L4c5976;
  #L4c594a.  call temp:= `b`(v2) @signature `Lwb/a;.b:()I` @kind virtual;
  #L4c5950.  v0:= temp;
  #L4c5952.  v3:= (`wb.c`) v3 @kind object;
  #L4c5956.  call temp:= `b`(v3) @signature `Lwb/a;.b:()I` @kind virtual;
  #L4c595c.  v1:= temp;
  #L4c595e.  if v0 != v1 then goto L4c597a;
  #L4c5962.  call temp:= `f`(v2) @signature `Lwb/a;.f:()I` @kind virtual;
  #L4c5968.  v0:= temp;
  #L4c596a.  call temp:= `f`(v3) @signature `Lwb/a;.f:()I` @kind virtual;
  #L4c5970.  v3:= temp;
  #L4c5972.  if v0 != v3 then goto L4c597a;
  #L4c5976.  v3:= 1I;
  #L4c5978.  goto L4c597c;
  #L4c597a.  v3:= 0I;
  #L4c597c.  return v3;
}
procedure `int` `hashCode`(`wb.c` v2 @kind this) @signature `Lwb/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c59bc.  call temp:= `isEmpty`(v2) @signature `Lwb/c;.isEmpty:()Z` @kind virtual;
  #L4c59c2.  v0:= temp;
  #L4c59c4.  if v0 == 0 then goto L4c59cc;
  #L4c59c8.  v0:= -1I;
  #L4c59ca.  goto L4c59e2;
  #L4c59cc.  call temp:= `b`(v2) @signature `Lwb/a;.b:()I` @kind virtual;
  #L4c59d2.  v0:= temp;
  #L4c59d4.  v0:= v0 * 31;
  #L4c59d8.  call temp:= `f`(v2) @signature `Lwb/a;.f:()I` @kind virtual;
  #L4c59de.  v1:= temp;
  #L4c59e0.  v0:= v0 + v1 @kind int;
  #L4c59e2.  return v0;
}
procedure `boolean` `isEmpty`(`wb.c` v2 @kind this) @signature `Lwb/c;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c5990.  call temp:= `b`(v2) @signature `Lwb/a;.b:()I` @kind virtual;
  #L4c5996.  v0:= temp;
  #L4c5998.  call temp:= `f`(v2) @signature `Lwb/a;.f:()I` @kind virtual;
  #L4c599e.  v1:= temp;
  #L4c59a0.  if v0 <= v1 then goto L4c59a8;
  #L4c59a4.  v0:= 1I;
  #L4c59a6.  goto L4c59aa;
  #L4c59a8.  v0:= 0I;
  #L4c59aa.  return v0;
}
procedure `boolean` `p`(`wb.c` v1 @kind this, `int` v2 ) @signature `Lwb/c;.p:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c58f4.  call temp:= `b`(v1) @signature `Lwb/a;.b:()I` @kind virtual;
  #L4c58fa.  v0:= temp;
  #L4c58fc.  if v0 > v2 then goto L4c5910;
  #L4c5900.  call temp:= `f`(v1) @signature `Lwb/a;.f:()I` @kind virtual;
  #L4c5906.  v0:= temp;
  #L4c5908.  if v2 > v0 then goto L4c5910;
  #L4c590c.  v2:= 1I;
  #L4c590e.  goto L4c5912;
  #L4c5910.  v2:= 0I;
  #L4c5912.  return v2;
}
procedure `java.lang.String` `toString`(`wb.c` v2 @kind this) @signature `Lwb/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c5a3c.  v0:= new `java.lang.StringBuilder`;
  #L4c5a40.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c5a46.  call temp:= `b`(v2) @signature `Lwb/a;.b:()I` @kind virtual;
  #L4c5a4c.  v1:= temp;
  #L4c5a4e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c5a54.  v1:= ".." @kind object;
  #L4c5a58.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c5a5e.  call temp:= `f`(v2) @signature `Lwb/a;.f:()I` @kind virtual;
  #L4c5a64.  v1:= temp;
  #L4c5a66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c5a6c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c5a72.  v0:= temp @kind object;
  #L4c5a74.  return v0 @kind object;
}
procedure `java.lang.Integer` `u`(`wb.c` v1 @kind this) @signature `Lwb/c;.u:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c59f4.  call temp:= `f`(v1) @signature `Lwb/a;.f:()I` @kind virtual;
  #L4c59fa.  v0:= temp;
  #L4c59fc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4c5a02.  v0:= temp @kind object;
  #L4c5a04.  return v0 @kind object;
}
procedure `java.lang.Integer` `y`(`wb.c` v1 @kind this) @signature `Lwb/c;.y:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c5a18.  call temp:= `b`(v1) @signature `Lwb/a;.b:()I` @kind virtual;
  #L4c5a1e.  v0:= temp;
  #L4c5a20.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4c5a26.  v0:= temp @kind object;
  #L4c5a28.  return v0 @kind object;
}
