record `e6.a` @kind class @AccessFlag ABSTRACT extends `e6.e` @kind interface {
}
procedure `void` `<init>`(`e6.a` v0 @kind this) @signature `Le6/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2fe204.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fe20a.  return @kind void;
}
procedure `java.lang.Object` `a`(`e6.a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Le6/a;.a:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L2fe1b0.  call temp:= `c`(v0, v1) @signature `Le6/e;.c:(Ljava/lang/Class;)Ls7/b;` @kind interface;
  #L2fe1b6.  v1:= temp @kind object;
  #L2fe1b8.  if v1 != 0 then goto L2fe1c0;
  #L2fe1bc.  v1:= 0I;
  #L2fe1be.  return v1 @kind object;
  #L2fe1c0.  call temp:= `get`(v1) @signature `Ls7/b;.get:()Ljava/lang/Object;` @kind interface;
  #L2fe1c6.  v1:= temp @kind object;
  #L2fe1c8.  return v1 @kind object;
}
procedure `java.util.Set` `b`(`e6.a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Le6/a;.b:(Ljava/lang/Class;)Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;

  #L2fe1dc.  call temp:= `d`(v0, v1) @signature `Le6/e;.d:(Ljava/lang/Class;)Ls7/b;` @kind interface;
  #L2fe1e2.  v1:= temp @kind object;
  #L2fe1e4.  call temp:= `get`(v1) @signature `Ls7/b;.get:()Ljava/lang/Object;` @kind interface;
  #L2fe1ea.  v1:= temp @kind object;
  #L2fe1ec.  v1:= (`java.util.Set`) v1 @kind object;
  #L2fe1f0.  return v1 @kind object;
}
