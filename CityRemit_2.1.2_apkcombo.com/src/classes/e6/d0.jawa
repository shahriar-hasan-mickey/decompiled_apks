record `e6.d0` @kind class @AccessFlag  extends `s7.b` @kind interface, `s7.a` @kind interface {
  `s7.a$a` `e6.d0.a` @AccessFlag PRIVATE;
  `s7.b` `e6.d0.b` @AccessFlag PRIVATE_VOLATILE;
}
global `s7.a$a` `@@e6.d0.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `s7.b` `@@e6.d0.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le6/d0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3007b0.  v0:= `@@e6.b0.a` @type ^`e6.b0` @kind object;
  #L3007b4.  `@@e6.d0.c` @type ^`s7.a$a` := v0 @kind object;
  #L3007b8.  v0:= `@@e6.c0.a` @type ^`e6.c0` @kind object;
  #L3007bc.  `@@e6.d0.d` @type ^`s7.b` := v0 @kind object;
  #L3007c0.  return @kind void;
}
procedure `void` `<init>`(`e6.d0` v0 @kind this, `s7.a$a` v1 @kind object, `s7.b` v2 @kind object) @signature `Le6/d0;.<init>:(Ls7/a$a;Ls7/b;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3007d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3007da.  v0.`e6.d0.a` @type ^`s7.a$a` := v1 @kind object;
  #L3007de.  v0.`e6.d0.b` @type ^`s7.b` := v2 @kind object;
  #L3007e2.  return @kind void;
}
procedure `java.lang.Object` `b`() @signature `Le6/d0;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L300730.  call temp:= `g`() @signature `Le6/d0;.g:()Ljava/lang/Object;` @kind static;
  #L300736.  v0:= temp @kind object;
  #L300738.  return v0 @kind object;
}
procedure `void` `c`(`s7.b` v0 @kind object) @signature `Le6/d0;.c:(Ls7/b;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L300780.  call `f`(v0) @signature `Le6/d0;.f:(Ls7/b;)V` @kind static;
  #L300786.  return @kind void;
}
procedure `void` `d`(`s7.a$a` v0 @kind object, `s7.a$a` v1 @kind object, `s7.b` v2 @kind object) @signature `Le6/d0;.d:(Ls7/a$a;Ls7/a$a;Ls7/b;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L300798.  call `h`(v0, v1, v2) @signature `Le6/d0;.h:(Ls7/a$a;Ls7/a$a;Ls7/b;)V` @kind static;
  #L30079e.  return @kind void;
}
procedure `e6.d0` `e`() @signature `Le6/d0;.e:()Le6/d0;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3006ec.  v0:= new `e6.d0`;
  #L3006f0.  v1:= `@@e6.d0.c` @type ^`s7.a$a` @kind object;
  #L3006f4.  v2:= `@@e6.d0.d` @type ^`s7.b` @kind object;
  #L3006f8.  call `<init>`(v0, v1, v2) @signature `Le6/d0;.<init>:(Ls7/a$a;Ls7/b;)V` @kind direct;
  #L3006fe.  return v0 @kind object;
}
procedure `void` `f`(`s7.b` v0 @kind object) @signature `Le6/d0;.f:(Ls7/b;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L3007f4.  return @kind void;
}
procedure `java.lang.Object` `g`() @signature `Le6/d0;.g:()Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L30076c.  v0:= 0I;
  #L30076e.  return v0 @kind object;
}
procedure `void` `h`(`s7.a$a` v0 @kind object, `s7.a$a` v1 @kind object, `s7.b` v2 @kind object) @signature `Le6/d0;.h:(Ls7/a$a;Ls7/a$a;Ls7/b;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L300808.  call `a`(v0, v2) @signature `Ls7/a$a;.a:(Ls7/b;)V` @kind interface;
  #L30080e.  call `a`(v1, v2) @signature `Ls7/a$a;.a:(Ls7/b;)V` @kind interface;
  #L300814.  return @kind void;
}
procedure `e6.d0` `i`(`s7.b` v2 @kind object) @signature `Le6/d0;.i:(Ls7/b;)Le6/d0;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L300710.  v0:= new `e6.d0`;
  #L300714.  v1:= 0I;
  #L300716.  call `<init>`(v0, v1, v2) @signature `Le6/d0;.<init>:(Ls7/a$a;Ls7/b;)V` @kind direct;
  #L30071c.  return v0 @kind object;
}
procedure `void` `a`(`e6.d0` v4 @kind this, `s7.a$a` v5 @kind object) @signature `Le6/d0;.a:(Ls7/a$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L300888.  v0:= v4.`e6.d0.b` @type ^`s7.b` @kind object;
  #L30088c.  v1:= `@@e6.d0.d` @type ^`s7.b` @kind object;
  #L300890.  if v0 == v1 then goto L30089c;
  #L300894.  call `a`(v5, v0) @signature `Ls7/a$a;.a:(Ls7/b;)V` @kind interface;
  #L30089a.  return @kind void;
  #L30089c.  v0:= 0I;
  #L30089e.  @monitorenter v4
  #L3008a0.  v2:= v4.`e6.d0.b` @type ^`s7.b` @kind object;
  #L3008a4.  if v2 == v1 then goto L3008ac;
  #L3008a8.  v0:= v2 @kind object;
  #L3008aa.  goto L3008be;
  #L3008ac.  v1:= v4.`e6.d0.a` @type ^`s7.a$a` @kind object;
  #L3008b0.  v3:= new `e6.a0`;
  #L3008b4.  call `<init>`(v3, v1, v5) @signature `Le6/a0;.<init>:(Ls7/a$a;Ls7/a$a;)V` @kind direct;
  #L3008ba.  v4.`e6.d0.a` @type ^`s7.a$a` := v3 @kind object;
  #L3008be.  @monitorexit v4
  #L3008c0.  if v0 == 0 then goto L3008ca;
  #L3008c4.  call `a`(v5, v2) @signature `Ls7/a$a;.a:(Ls7/b;)V` @kind interface;
  #L3008ca.  return @kind void;
  #L3008cc.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3008ce.  @monitorexit v4
  #L3008d0.  throw v5;
  catch `java.lang.Throwable` @[L3008a0..L3008c0] goto L3008cc;
  catch `java.lang.Throwable` @[L3008ce..L3008d0] goto L3008cc;
}
procedure `java.lang.Object` `get`(`e6.d0` v1 @kind this) @signature `Le6/d0;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30074c.  v0:= v1.`e6.d0.b` @type ^`s7.b` @kind object;
  #L300750.  call temp:= `get`(v0) @signature `Ls7/b;.get:()Ljava/lang/Object;` @kind interface;
  #L300756.  v0:= temp @kind object;
  #L300758.  return v0 @kind object;
}
procedure `void` `j`(`e6.d0` v2 @kind this, `s7.b` v3 @kind object) @signature `Le6/d0;.j:(Ls7/b;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L300828.  v0:= v2.`e6.d0.b` @type ^`s7.b` @kind object;
  #L30082c.  v1:= `@@e6.d0.d` @type ^`s7.b` @kind object;
  #L300830.  if v0 != v1 then goto L300854;
  #L300834.  @monitorenter v2
  #L300836.  v0:= v2.`e6.d0.a` @type ^`s7.a$a` @kind object;
  #L30083a.  v1:= 0I;
  #L30083c.  v2.`e6.d0.a` @type ^`s7.a$a` := v1 @kind object;
  #L300840.  v2.`e6.d0.b` @type ^`s7.b` := v3 @kind object;
  #L300844.  @monitorexit v2
  #L300846.  call `a`(v0, v3) @signature `Ls7/a$a;.a:(Ls7/b;)V` @kind interface;
  #L30084c.  return @kind void;
  #L30084e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L300850.  @monitorexit v2
  #L300852.  throw v3;
  #L300854.  v3:= new `java.lang.IllegalStateException`;
  #L300858.  v0:= "provide() can be called only once." @kind object;
  #L30085c.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L300862.  throw v3;
  catch `java.lang.Throwable` @[L300836..L300846] goto L30084e;
  catch `java.lang.Throwable` @[L300850..L300852] goto L30084e;
}
