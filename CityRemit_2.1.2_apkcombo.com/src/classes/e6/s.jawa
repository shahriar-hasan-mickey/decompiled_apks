record `e6.s` @kind class @AccessFlag PUBLIC extends `e6.t` @kind class {
  `java.util.List` `e6.s.o` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e6.s` v2 @kind this, `java.util.List` v3 @kind object) @signature `Le6/s;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2ffd14.  v0:= new `java.lang.StringBuilder`;
  #L2ffd18.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ffd1e.  v1:= "Dependency cycle detected: " @kind object;
  #L2ffd22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ffd28.  call temp:= `toArray`(v3) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L2ffd2e.  v1:= temp @kind object;
  #L2ffd30.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ffd36.  v1:= temp @kind object;
  #L2ffd38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ffd3e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ffd44.  v0:= temp @kind object;
  #L2ffd46.  call `<init>`(v2, v0) @signature `Le6/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ffd4c.  v2.`e6.s.o` @type ^`java.util.List` := v3 @kind object;
  #L2ffd50.  return @kind void;
}
