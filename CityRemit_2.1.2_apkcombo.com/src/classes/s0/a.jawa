record `s0.a` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `s0.a` `@@s0.a.o` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `s0.a` `@@s0.a.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `s0.a` `@@s0.a.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `s0.a` `@@s0.a.r` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `s0.a`[] `@@s0.a.s` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ls0/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4557b4.  v0:= new `s0.a`;
  #L4557b8.  v1:= "denied" @kind object;
  #L4557bc.  v2:= 0I;
  #L4557be.  call `<init>`(v0, v1, v2) @signature `Ls0/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4557c4.  `@@s0.a.o` @type ^`s0.a` := v0 @kind object;
  #L4557c8.  v1:= new `s0.a`;
  #L4557cc.  v3:= "deniedForever" @kind object;
  #L4557d0.  v4:= 1I;
  #L4557d2.  call `<init>`(v1, v3, v4) @signature `Ls0/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4557d8.  `@@s0.a.p` @type ^`s0.a` := v1 @kind object;
  #L4557dc.  v3:= new `s0.a`;
  #L4557e0.  v5:= "whileInUse" @kind object;
  #L4557e4.  v6:= 2I;
  #L4557e6.  call `<init>`(v3, v5, v6) @signature `Ls0/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4557ec.  `@@s0.a.q` @type ^`s0.a` := v3 @kind object;
  #L4557f0.  v5:= new `s0.a`;
  #L4557f4.  v7:= "always" @kind object;
  #L4557f8.  v8:= 3I;
  #L4557fa.  call `<init>`(v5, v7, v8) @signature `Ls0/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L455800.  `@@s0.a.r` @type ^`s0.a` := v5 @kind object;
  #L455804.  v7:= 4I;
  #L455806.  v7:= new `s0.a`[v7];
  #L45580a.  v7[v2]:= v0 @kind object;
  #L45580e.  v7[v4]:= v1 @kind object;
  #L455812.  v7[v6]:= v3 @kind object;
  #L455816.  v7[v8]:= v5 @kind object;
  #L45581a.  `@@s0.a.s` @type ^`s0.a`[] := v7 @kind object;
  #L45581e.  return @kind void;
}
procedure `void` `<init>`(`s0.a` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Ls0/a;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L455830.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L455836.  return @kind void;
}
procedure `s0.a` `valueOf`(`java.lang.String` v1 @kind object) @signature `Ls0/a;.valueOf:(Ljava/lang/String;)Ls0/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45576c.  v0:= constclass @type ^`s0.a` @kind object;
  #L455770.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L455776.  v1:= temp @kind object;
  #L455778.  v1:= (`s0.a`) v1 @kind object;
  #L45577c.  return v1 @kind object;
}
procedure `s0.a`[] `values`() @signature `Ls0/a;.values:()[Ls0/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L455790.  v0:= `@@s0.a.s` @type ^`s0.a`[] @kind object;
  #L455794.  call temp:= `clone`(v0) @signature `[Ls0/a;.clone:()Ljava/lang/Object;` @kind virtual;
  #L45579a.  v0:= temp @kind object;
  #L45579c.  v0:= (`s0.a`[]) v0 @kind object;
  #L4557a0.  return v0 @kind object;
}
procedure `int` `c`(`s0.a` v3 @kind this) @signature `Ls0/a;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45571c.  v0:= `@@s0.a$a.a` @type ^`int`[] @kind object;
  #L455720.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L455726.  v1:= temp;
  #L455728.  v0:= v0[v1];
  #L45572c.  v1:= 1I;
  #L45572e.  if v0 == v1 then goto L455756;
  #L455732.  v2:= 2I;
  #L455734.  if v0 == v2 then goto L455754;
  #L455738.  v1:= 3I;
  #L45573a.  if v0 == v1 then goto L455752;
  #L45573e.  v2:= 4I;
  #L455740.  if v0 != v2 then goto L455746;
  #L455744.  return v1;
  #L455746.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L45574a.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L455750.  throw v0;
  #L455752.  return v2;
  #L455754.  return v1;
  #L455756.  v0:= 0I;
  #L455758.  return v0;
}
