record `c3.c` @kind class @AccessFlag PUBLIC_FINAL extends `c3.e` @kind interface {
  `int` `c3.c.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `c3.c.c` @AccessFlag PRIVATE_FINAL;
}
global `int`[] `@@c3.c.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc3/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1f5574.  v0:= 7I;
  #L1f5576.  v0:= new `int`[v0];
  #L1f557a.  goto L1f5588;
  #L1f5580.  `@@c3.c.d` @type ^`int`[] := v0 @kind object;
  #L1f5584.  return @kind void;
  #L1f5586.  
  #L1f5588.  v0:= (8I, 13I, 11I, 2I, 0I, 1I, 7I) @kind object;
  #L1f55ab.  goto L1f5580;
}
procedure `void` `<init>`(`c3.c` v2 @kind this) @signature `Lc3/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1f55bc.  v0:= 0I;
  #L1f55be.  v1:= 1I;
  #L1f55c0.  call `<init>`(v2, v0, v1) @signature `Lc3/c;.<init>:(IZ)V` @kind direct;
  #L1f55c6.  return @kind void;
}
procedure `void` `<init>`(`c3.c` v0 @kind this, `int` v1 , `boolean` v2 ) @signature `Lc3/c;.<init>:(IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1f55d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f55de.  v0.`c3.c.b` @type ^`int` := v1;
  #L1f55e2.  v0.`c3.c.c` @type ^`boolean` := v2 @kind boolean;
  #L1f55e6.  return @kind void;
}
procedure `void` `b`(`int` v2 , `java.util.List` v3 @kind object) @signature `Lc3/c;.b:(ILjava/util/List;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1f55f8.  v0:= `@@c3.c.d` @type ^`int`[] @kind object;
  #L1f55fc.  call temp:= `g`(v0, v2) @signature `Lo5/d;.g:([II)I` @kind static;
  #L1f5602.  v0:= temp;
  #L1f5604.  v1:= -1I;
  #L1f5606.  if v0 == v1 then goto L1f562e;
  #L1f560a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1f5610.  v0:= temp @kind object;
  #L1f5612.  call temp:= `contains`(v3, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1f5618.  v0:= temp;
  #L1f561a.  if v0 == 0 then goto L1f5620;
  #L1f561e.  goto L1f562e;
  #L1f5620.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1f5626.  v2:= temp @kind object;
  #L1f5628.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1f562e.  return @kind void;
}
procedure `a2.l` `d`(`c3.c` v1 @kind this, `int` v2 , `v1.j1` v3 @kind object, `java.util.List` v4 @kind object, `s3.h0` v5 @kind object) @signature `Lc3/c;.d:(ILv1/j1;Ljava/util/List;Ls3/h0;)La2/l;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1f5240.  if v2 == 0 then goto L1f52c8;
  #L1f5244.  v0:= 1I;
  #L1f5246.  if v2 == v0 then goto L1f52bc;
  #L1f524a.  v0:= 2I;
  #L1f524c.  if v2 == v0 then goto L1f52b0;
  #L1f5250.  v0:= 7I;
  #L1f5252.  if v2 == v0 then goto L1f529e;
  #L1f5256.  v0:= 8I;
  #L1f525a.  if v2 == v0 then goto L1f5294;
  #L1f525e.  v0:= 11I;
  #L1f5262.  if v2 == v0 then goto L1f5282;
  #L1f5266.  v4:= 13I;
  #L1f526a.  if v2 == v4 then goto L1f5272;
  #L1f526e.  v2:= 0I;
  #L1f5270.  return v2 @kind object;
  #L1f5272.  v2:= new `com.google.android.exoplayer2.source.hls.k`;
  #L1f5276.  v3:= v3.`v1.j1.q` @type ^`java.lang.String` @kind object;
  #L1f527a.  call `<init>`(v2, v3, v5) @signature `Lcom/google/android/exoplayer2/source/hls/k;.<init>:(Ljava/lang/String;Ls3/h0;)V` @kind direct;
  #L1f5280.  return v2 @kind object;
  #L1f5282.  v2:= v1.`c3.c.b` @type ^`int`;
  #L1f5286.  v0:= v1.`c3.c.c` @type ^`boolean` @kind boolean;
  #L1f528a.  call temp:= `f`(v2, v0, v3, v4, v5) @signature `Lc3/c;.f:(IZLv1/j1;Ljava/util/List;Ls3/h0;)Lk2/h0;` @kind static;
  #L1f5290.  v2:= temp @kind object;
  #L1f5292.  return v2 @kind object;
  #L1f5294.  call temp:= `e`(v5, v3, v4) @signature `Lc3/c;.e:(Ls3/h0;Lv1/j1;Ljava/util/List;)Li2/g;` @kind static;
  #L1f529a.  v2:= temp @kind object;
  #L1f529c.  return v2 @kind object;
  #L1f529e.  v2:= new `h2.f`;
  #L1f52a2.  v3:= 0I;
  #L1f52a4.  v4:= 0L;
  #L1f52a8.  call `<init>`(v2, v3, v4) @signature `Lh2/f;.<init>:(IJ)V` @kind direct;
  #L1f52ae.  return v2 @kind object;
  #L1f52b0.  v2:= new `k2.h`;
  #L1f52b4.  call `<init>`(v2) @signature `Lk2/h;.<init>:()V` @kind direct;
  #L1f52ba.  return v2 @kind object;
  #L1f52bc.  v2:= new `k2.e`;
  #L1f52c0.  call `<init>`(v2) @signature `Lk2/e;.<init>:()V` @kind direct;
  #L1f52c6.  return v2 @kind object;
  #L1f52c8.  v2:= new `k2.b`;
  #L1f52cc.  call `<init>`(v2) @signature `Lk2/b;.<init>:()V` @kind direct;
  #L1f52d2.  return v2 @kind object;
}
procedure `i2.g` `e`(`s3.h0` v2 @kind object, `v1.j1` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lc3/c;.e:(Ls3/h0;Lv1/j1;Ljava/util/List;)Li2/g;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1f5490.  v0:= new `i2.g`;
  #L1f5494.  call temp:= `g`(v3) @signature `Lc3/c;.g:(Lv1/j1;)Z` @kind static;
  #L1f549a.  v3:= temp;
  #L1f549c.  if v3 == 0 then goto L1f54a4;
  #L1f54a0.  v3:= 4I;
  #L1f54a2.  goto L1f54a6;
  #L1f54a4.  v3:= 0I;
  #L1f54a6.  v1:= 0I;
  #L1f54a8.  if v4 == 0 then goto L1f54ae;
  #L1f54ac.  goto L1f54b6;
  #L1f54ae.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L1f54b4.  v4:= temp @kind object;
  #L1f54b6.  call `<init>`(v0, v3, v2, v1, v4) @signature `Li2/g;.<init>:(ILs3/h0;Li2/o;Ljava/util/List;)V` @kind direct;
  #L1f54bc.  return v0 @kind object;
}
procedure `k2.h0` `f`(`int` v0 , `boolean` v1 , `v1.j1` v2 @kind object, `java.util.List` v3 @kind object, `s3.h0` v4 @kind object) @signature `Lc3/c;.f:(IZLv1/j1;Ljava/util/List;Ls3/h0;)Lk2/h0;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1f54d0.  v0:= v0 ^| 16;
  #L1f54d4.  if v3 == 0 then goto L1f54de;
  #L1f54d8.  v0:= v0 ^| 32;
  #L1f54dc.  goto L1f5512;
  #L1f54de.  if v1 == 0 then goto L1f550a;
  #L1f54e2.  v1:= new `v1.j1$b`;
  #L1f54e6.  call `<init>`(v1) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L1f54ec.  v3:= "application/cea-608" @kind object;
  #L1f54f0.  call temp:= `e0`(v1, v3) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L1f54f6.  v1:= temp @kind object;
  #L1f54f8.  call temp:= `E`(v1) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L1f54fe.  v1:= temp @kind object;
  #L1f5500.  call temp:= `singletonList`(v1) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1f5506.  v3:= temp @kind object;
  #L1f5508.  goto L1f5512;
  #L1f550a.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L1f5510.  v3:= temp @kind object;
  #L1f5512.  v1:= v2.`v1.j1.w` @type ^`java.lang.String` @kind object;
  #L1f5516.  call temp:= `isEmpty`(v1) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L1f551c.  v2:= temp;
  #L1f551e.  if v2 != 0 then goto L1f554a;
  #L1f5522.  v2:= "audio/mp4a-latm" @kind object;
  #L1f5526.  call temp:= `b`(v1, v2) @signature `Ls3/u;.b:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L1f552c.  v2:= temp;
  #L1f552e.  if v2 != 0 then goto L1f5536;
  #L1f5532.  v0:= v0 ^| 2;
  #L1f5536.  v2:= "video/avc" @kind object;
  #L1f553a.  call temp:= `b`(v1, v2) @signature `Ls3/u;.b:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L1f5540.  v1:= temp;
  #L1f5542.  if v1 != 0 then goto L1f554a;
  #L1f5546.  v0:= v0 ^| 4;
  #L1f554a.  v1:= new `k2.h0`;
  #L1f554e.  v2:= new `k2.j`;
  #L1f5552.  call `<init>`(v2, v0, v3) @signature `Lk2/j;.<init>:(ILjava/util/List;)V` @kind direct;
  #L1f5558.  v0:= 2I;
  #L1f555a.  call `<init>`(v1, v0, v4, v2) @signature `Lk2/h0;.<init>:(ILs3/h0;Lk2/i0$c;)V` @kind direct;
  #L1f5560.  return v1 @kind object;
}
procedure `boolean` `g`(`v1.j1` v4 @kind object) @signature `Lc3/c;.g:(Lv1/j1;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f52e4.  v4:= v4.`v1.j1.x` @type ^`n2.a` @kind object;
  #L1f52e8.  v0:= 0I;
  #L1f52ea.  if v4 != 0 then goto L1f52f0;
  #L1f52ee.  return v0;
  #L1f52f0.  v1:= 0I;
  #L1f52f2.  call temp:= `d`(v4) @signature `Ln2/a;.d:()I` @kind virtual;
  #L1f52f8.  v2:= temp;
  #L1f52fa.  if v1 >= v2 then goto L1f532a;
  #L1f52fe.  call temp:= `c`(v4, v1) @signature `Ln2/a;.c:(I)Ln2/a$b;` @kind virtual;
  #L1f5304.  v2:= temp @kind object;
  #L1f5306.  v3:= instanceof @variable v2 @type ^`c3.h` @kind boolean;
  #L1f530a.  if v3 == 0 then goto L1f5324;
  #L1f530e.  v2:= (`c3.h`) v2 @kind object;
  #L1f5312.  v4:= v2.`c3.h.q` @type ^`java.util.List` @kind object;
  #L1f5316.  call temp:= `isEmpty`(v4) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1f531c.  v4:= temp;
  #L1f531e.  v4:= v4 ^~ 1;
  #L1f5322.  return v4;
  #L1f5324.  v1:= v1 + 1;
  #L1f5328.  goto L1f52f2;
  #L1f532a.  return v0;
}
procedure `boolean` `h`(`a2.l` v0 @kind object, `a2.m` v1 @kind object) @signature `Lc3/c;.h:(La2/l;La2/m;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1f533c.  call temp:= `g`(v0, v1) @signature `La2/l;.g:(La2/m;)Z` @kind interface;
  #L1f5342.  v0:= temp;
  #L1f5344.  call `i`(v1) @signature `La2/m;.i:()V` @kind interface;
  #L1f534a.  goto L1f535e;
  #L1f534c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f534e.  call `i`(v1) @signature `La2/m;.i:()V` @kind interface;
  #L1f5354.  throw v0;
  #L1f5356.  call `i`(v1) @signature `La2/m;.i:()V` @kind interface;
  #L1f535c.  v0:= 0I;
  #L1f535e.  return v0;
  catch `java.io.EOFException` @[L1f533c..L1f5344] goto L1f5356;
  catch `java.lang.Throwable` @[L1f533c..L1f5344] goto L1f534c;
}
procedure `c3.f` `a`(`c3.c` v0 @kind this, `android.net.Uri` v1 @kind object, `v1.j1` v2 @kind object, `java.util.List` v3 @kind object, `s3.h0` v4 @kind object, `java.util.Map` v5 @kind object, `a2.m` v6 @kind object, `w1.t1` v7 @kind object) @signature `Lc3/c;.a:(Landroid/net/Uri;Lv1/j1;Ljava/util/List;Ls3/h0;Ljava/util/Map;La2/m;Lw1/t1;)Lc3/f;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1f5474.  call temp:= `c`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lc3/c;.c:(Landroid/net/Uri;Lv1/j1;Ljava/util/List;Ls3/h0;Ljava/util/Map;La2/m;Lw1/t1;)Lc3/a;` @kind virtual;
  #L1f547a.  v1:= temp @kind object;
  #L1f547c.  return v1 @kind object;
}
procedure `c3.a` `c`(`c3.c` v6 @kind this, `android.net.Uri` v7 @kind object, `v1.j1` v8 @kind object, `java.util.List` v9 @kind object, `s3.h0` v10 @kind object, `java.util.Map` v11 @kind object, `a2.m` v12 @kind object, `w1.t1` v13 @kind object) @signature `Lc3/c;.c:(Landroid/net/Uri;Lv1/j1;Ljava/util/List;Ls3/h0;Ljava/util/Map;La2/m;Lw1/t1;)Lc3/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1f5380.  v13:= v8.`v1.j1.z` @type ^`java.lang.String` @kind object;
  #L1f5384.  call temp:= `a`(v13) @signature `Ls3/j;.a:(Ljava/lang/String;)I` @kind static;
  #L1f538a.  v13:= temp;
  #L1f538c.  call temp:= `b`(v11) @signature `Ls3/j;.b:(Ljava/util/Map;)I` @kind static;
  #L1f5392.  v11:= temp;
  #L1f5394.  call temp:= `c`(v7) @signature `Ls3/j;.c:(Landroid/net/Uri;)I` @kind static;
  #L1f539a.  v7:= temp;
  #L1f539c.  v0:= new `java.util.ArrayList`;
  #L1f53a0.  v1:= `@@c3.c.d` @type ^`int`[] @kind object;
  #L1f53a4.  v2:= length @variable v1;
  #L1f53a6.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1f53ac.  call `b`(v13, v0) @signature `Lc3/c;.b:(ILjava/util/List;)V` @kind static;
  #L1f53b2.  call `b`(v11, v0) @signature `Lc3/c;.b:(ILjava/util/List;)V` @kind static;
  #L1f53b8.  call `b`(v7, v0) @signature `Lc3/c;.b:(ILjava/util/List;)V` @kind static;
  #L1f53be.  v2:= length @variable v1;
  #L1f53c0.  v3:= 0I;
  #L1f53c2.  v4:= 0I;
  #L1f53c4.  if v4 >= v2 then goto L1f53d8;
  #L1f53c8.  v5:= v1[v4];
  #L1f53cc.  call `b`(v5, v0) @signature `Lc3/c;.b:(ILjava/util/List;)V` @kind static;
  #L1f53d2.  v4:= v4 + 1;
  #L1f53d6.  goto L1f53c4;
  #L1f53d8.  v1:= 0I;
  #L1f53da.  call `i`(v12) @signature `La2/m;.i:()V` @kind interface;
  #L1f53e0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1f53e6.  v2:= temp;
  #L1f53e8.  if v3 >= v2 then goto L1f544c;
  #L1f53ec.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1f53f2.  v2:= temp @kind object;
  #L1f53f4.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L1f53f8.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1f53fe.  v2:= temp;
  #L1f5400.  call temp:= `d`(v6, v2, v8, v9, v10) @signature `Lc3/c;.d:(ILv1/j1;Ljava/util/List;Ls3/h0;)La2/l;` @kind direct;
  #L1f5406.  v4:= temp @kind object;
  #L1f5408.  call temp:= `e`(v4) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1f540e.  v4:= temp @kind object;
  #L1f5410.  v4:= (`a2.l`) v4 @kind object;
  #L1f5414.  call temp:= `h`(v4, v12) @signature `Lc3/c;.h:(La2/l;La2/m;)Z` @kind static;
  #L1f541a.  v5:= temp;
  #L1f541c.  if v5 == 0 then goto L1f542c;
  #L1f5420.  v7:= new `c3.a`;
  #L1f5424.  call `<init>`(v7, v4, v8, v10) @signature `Lc3/a;.<init>:(La2/l;Lv1/j1;Ls3/h0;)V` @kind direct;
  #L1f542a.  return v7 @kind object;
  #L1f542c.  if v1 != 0 then goto L1f5446;
  #L1f5430.  if v2 == v13 then goto L1f5444;
  #L1f5434.  if v2 == v11 then goto L1f5444;
  #L1f5438.  if v2 == v7 then goto L1f5444;
  #L1f543c.  v5:= 11I;
  #L1f5440.  if v2 != v5 then goto L1f5446;
  #L1f5444.  v1:= v4 @kind object;
  #L1f5446.  v3:= v3 + 1;
  #L1f544a.  goto L1f53e0;
  #L1f544c.  v7:= new `c3.a`;
  #L1f5450.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1f5456.  v9:= temp @kind object;
  #L1f5458.  v9:= (`a2.l`) v9 @kind object;
  #L1f545c.  call `<init>`(v7, v9, v8, v10) @signature `Lc3/a;.<init>:(La2/l;Lv1/j1;Ls3/h0;)V` @kind direct;
  #L1f5462.  return v7 @kind object;
}
