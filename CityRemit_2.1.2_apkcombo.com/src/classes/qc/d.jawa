record `qc.d` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `qc.r` @kind interface, `java.nio.channels.WritableByteChannel` @kind interface {
}
procedure `qc.d` `A`(`int` v0 ) @signature `Lqc/d;.A:(I)Lqc/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `qc.d` `D`(`byte`[] v0 @kind object) @signature `Lqc/d;.D:([B)Lqc/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `qc.d` `I`() @signature `Lqc/d;.I:()Lqc/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `qc.d` `V`(`java.lang.String` v0 @kind object) @signature `Lqc/d;.V:(Ljava/lang/String;)Lqc/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `qc.c` `b`() @signature `Lqc/d;.b:()Lqc/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `flush`() @signature `Lqc/d;.flush:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `qc.d` `g`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lqc/d;.g:([BII)Lqc/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `qc.d` `m`(`long` v0 ) @signature `Lqc/d;.m:(J)Lqc/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `qc.d` `r`(`int` v0 ) @signature `Lqc/d;.r:(I)Lqc/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `qc.d` `t`(`int` v0 ) @signature `Lqc/d;.t:(I)Lqc/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
