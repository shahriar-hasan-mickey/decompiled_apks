record `qc.e` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `qc.s` @kind interface, `java.nio.channels.ReadableByteChannel` @kind interface {
}
procedure `byte`[] `B`(`long` v0 ) @signature `Lqc/e;.B:(J)[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `short` `H`() @signature `Lqc/e;.H:()S` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `L`(`long` v0 ) @signature `Lqc/e;.L:(J)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `U`(`long` v0 ) @signature `Lqc/e;.U:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `W`(`byte` v0 ) @signature `Lqc/e;.W:(B)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `Y`() @signature `Lqc/e;.Y:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `Z`(`qc.r` v0 @kind object) @signature `Lqc/e;.Z:(Lqc/r;)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `qc.c` `b`() @signature `Lqc/e;.b:()Lqc/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `d`(`long` v0 ) @signature `Lqc/e;.d:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `qc.f` `n`(`long` v0 ) @signature `Lqc/e;.n:(J)Lqc/f;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte` `readByte`() @signature `Lqc/e;.readByte:()B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `readFully`(`byte`[] v0 @kind object) @signature `Lqc/e;.readFully:([B)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readInt`() @signature `Lqc/e;.readInt:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `short` `readShort`() @signature `Lqc/e;.readShort:()S` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `u`() @signature `Lqc/e;.u:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `y`() @signature `Lqc/e;.y:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `z`() @signature `Lqc/e;.z:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
