record `qc.a$c` @kind class @AccessFlag FINAL extends `java.lang.Thread` @kind class {
}
procedure `void` `<init>`(`qc.a$c` v1 @kind this) @signature `Lqc/a$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L42998c.  v0:= "Okio Watchdog" @kind object;
  #L429990.  call `<init>`(v1, v0) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L429996.  v0:= 1I;
  #L429998.  call `setDaemon`(v1, v0) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L42999e.  return @kind void;
}
procedure `void` `run`(`qc.a$c` v3 @kind this) @signature `Lqc/a$c;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4299b0.  v0:= constclass @type ^`qc.a` @kind object;
  #L4299b4.  @monitorenter v0
  #L4299b6.  call temp:= `i`() @signature `Lqc/a;.i:()Lqc/a;` @kind static;
  #L4299bc.  v1:= temp @kind object;
  #L4299be.  if v1 != 0 then goto L4299c6;
  #L4299c2.  @monitorexit v0
  #L4299c4.  goto L4299b0;
  #L4299c6.  v2:= `@@qc.a.j` @type ^`qc.a` @kind object;
  #L4299ca.  if v1 != v2 then goto L4299d8;
  #L4299ce.  v1:= 0I;
  #L4299d0.  `@@qc.a.j` @type ^`qc.a` := v1 @kind object;
  #L4299d4.  @monitorexit v0
  #L4299d6.  return @kind void;
  #L4299d8.  @monitorexit v0
  #L4299da.  call `t`(v1) @signature `Lqc/a;.t:()V` @kind virtual;
  #L4299e0.  goto L4299b0;
  #L4299e2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4299e4.  @monitorexit v0
  #L4299e6.  throw v1;
  catch `java.lang.InterruptedException` @[L4299b0..L4299b6] goto L4299b0;
  catch `java.lang.Throwable` @[L4299b6..L4299da] goto L4299e2;
  catch `java.lang.InterruptedException` @[L4299da..L4299e0] goto L4299b0;
  catch `java.lang.Throwable` @[L4299e4..L4299e6] goto L4299e2;
  catch `java.lang.InterruptedException` @[L4299e6..L4299e8] goto L4299b0;
}
