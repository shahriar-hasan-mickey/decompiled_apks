record `qc.b` @kind class @AccessFlag FINAL {
}
global `byte`[] `@@qc.b.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lqc/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L429f78.  v0:= 64I;
  #L429f7c.  v0:= new `byte`[v0];
  #L429f80.  goto L429f8c;
  #L429f86.  `@@qc.b.a` @type ^`byte`[] := v0 @kind object;
  #L429f8a.  return @kind void;
  #L429f8c.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 43I, 47I) @kind object;
  #L429fd3.  goto L429f86;
}
procedure `java.lang.String` `a`(`byte`[] v1 @kind object) @signature `Lqc/b;.a:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L429dc8.  v0:= `@@qc.b.a` @type ^`byte`[] @kind object;
  #L429dcc.  call temp:= `b`(v1, v0) @signature `Lqc/b;.b:([B[B)Ljava/lang/String;` @kind static;
  #L429dd2.  v1:= temp @kind object;
  #L429dd4.  return v1 @kind object;
}
procedure `java.lang.String` `b`(`byte`[] v9 @kind object, `byte`[] v10 @kind object) @signature `Lqc/b;.b:([B[B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L429de8.  v0:= length @variable v9;
  #L429dea.  v1:= 2I;
  #L429dec.  v0:= v0 + v1 @kind int;
  #L429dee.  v0:= v0 / 3;
  #L429df2.  v0:= v0 * 4;
  #L429df6.  v0:= new `byte`[v0];
  #L429dfa.  v2:= length @variable v9;
  #L429dfc.  v3:= length @variable v9;
  #L429dfe.  v3:= v3 %% 3;
  #L429e02.  v2:= v2 - v3 @kind int;
  #L429e04.  v3:= 0I;
  #L429e06.  v4:= 0I;
  #L429e08.  if v3 >= v2 then goto L429e8e;
  #L429e0c.  v5:= v4 + 1;
  #L429e10.  v6:= v9[v3] @kind byte;
  #L429e14.  v6:= v6 ^& 255;
  #L429e18.  v6:= v6 ^> v1 @kind int;
  #L429e1a.  v6:= v10[v6] @kind byte;
  #L429e1e.  v0[v4]:= v6 @kind byte;
  #L429e22.  v4:= v5 + 1;
  #L429e26.  v6:= v9[v3] @kind byte;
  #L429e2a.  v6:= v6 ^& 3;
  #L429e2e.  v6:= v6 ^< 4;
  #L429e32.  v7:= v3 + 1;
  #L429e36.  v8:= v9[v7] @kind byte;
  #L429e3a.  v8:= v8 ^& 255;
  #L429e3e.  v8:= v8 ^> 4;
  #L429e42.  v6:= v6 ^| v8 @kind int;
  #L429e44.  v6:= v10[v6] @kind byte;
  #L429e48.  v0[v5]:= v6 @kind byte;
  #L429e4c.  v5:= v4 + 1;
  #L429e50.  v6:= v9[v7] @kind byte;
  #L429e54.  v6:= v6 ^& 15;
  #L429e58.  v6:= v6 ^< v1 @kind int;
  #L429e5a.  v7:= v3 + 2;
  #L429e5e.  v8:= v9[v7] @kind byte;
  #L429e62.  v8:= v8 ^& 255;
  #L429e66.  v8:= v8 ^> 6;
  #L429e6a.  v6:= v6 ^| v8 @kind int;
  #L429e6c.  v6:= v10[v6] @kind byte;
  #L429e70.  v0[v4]:= v6 @kind byte;
  #L429e74.  v4:= v5 + 1;
  #L429e78.  v6:= v9[v7] @kind byte;
  #L429e7c.  v6:= v6 ^& 63;
  #L429e80.  v6:= v10[v6] @kind byte;
  #L429e84.  v0[v5]:= v6 @kind byte;
  #L429e88.  v3:= v3 + 3;
  #L429e8c.  goto L429e08;
  #L429e8e.  v3:= length @variable v9;
  #L429e90.  v3:= v3 %% 3;
  #L429e94.  v5:= 61I;
  #L429e98.  v6:= 1I;
  #L429e9a.  if v3 == v6 then goto L429efe;
  #L429e9e.  if v3 == v1 then goto L429ea4;
  #L429ea2.  goto L429f3a;
  #L429ea4.  v3:= v4 + 1;
  #L429ea8.  v7:= v9[v2] @kind byte;
  #L429eac.  v7:= v7 ^& 255;
  #L429eb0.  v7:= v7 ^> v1 @kind int;
  #L429eb2.  v7:= v10[v7] @kind byte;
  #L429eb6.  v0[v4]:= v7 @kind byte;
  #L429eba.  v4:= v3 + 1;
  #L429ebe.  v7:= v9[v2] @kind byte;
  #L429ec2.  v7:= v7 ^& 3;
  #L429ec6.  v7:= v7 ^< 4;
  #L429eca.  v2:= v2 + v6 @kind int;
  #L429ecc.  v6:= v9[v2] @kind byte;
  #L429ed0.  v6:= v6 ^& 255;
  #L429ed4.  v6:= v6 ^> 4;
  #L429ed8.  v6:= v6 ^| v7 @kind int;
  #L429eda.  v6:= v10[v6] @kind byte;
  #L429ede.  v0[v3]:= v6 @kind byte;
  #L429ee2.  v3:= v4 + 1;
  #L429ee6.  v9:= v9[v2] @kind byte;
  #L429eea.  v9:= v9 ^& 15;
  #L429eee.  v9:= v9 ^< v1 @kind int;
  #L429ef0.  v9:= v10[v9] @kind byte;
  #L429ef4.  v0[v4]:= v9 @kind byte;
  #L429ef8.  v0[v3]:= v5 @kind byte;
  #L429efc.  goto L429f3a;
  #L429efe.  v3:= v4 + 1;
  #L429f02.  v6:= v9[v2] @kind byte;
  #L429f06.  v6:= v6 ^& 255;
  #L429f0a.  v1:= v6 ^> 2;
  #L429f0e.  v1:= v10[v1] @kind byte;
  #L429f12.  v0[v4]:= v1 @kind byte;
  #L429f16.  v1:= v3 + 1;
  #L429f1a.  v9:= v9[v2] @kind byte;
  #L429f1e.  v9:= v9 ^& 3;
  #L429f22.  v9:= v9 ^< 4;
  #L429f26.  v9:= v10[v9] @kind byte;
  #L429f2a.  v0[v3]:= v9 @kind byte;
  #L429f2e.  v9:= v1 + 1;
  #L429f32.  v0[v1]:= v5 @kind byte;
  #L429f36.  v0[v9]:= v5 @kind byte;
  #L429f3a.  v9:= new `java.lang.String`;
  #L429f3e.  v10:= "US-ASCII" @kind object;
  #L429f42.  call `<init>`(v9, v0, v10) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L429f48.  return v9 @kind object;
  #L429f4a.  v9:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L429f4c.  v10:= new `java.lang.AssertionError`;
  #L429f50.  call `<init>`(v10, v9) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L429f56.  throw v10;
  catch `java.io.UnsupportedEncodingException` @[L429f3a..L429f48] goto L429f4a;
}
