record `qc.p` @kind class @AccessFlag FINAL {
}
global `qc.o` `@@qc.p.a` @AccessFlag STATIC;
global `long` `@@qc.p.b` @AccessFlag STATIC;
procedure `void` `<init>`(`qc.p` v0 @kind this) @signature `Lqc/p;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L42e2ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42e2f2.  return @kind void;
}
procedure `void` `a`(`qc.o` v10 @kind object) @signature `Lqc/p;.a:(Lqc/o;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L42e304.  v0:= v10.`qc.o.f` @type ^`qc.o` @kind object;
  #L42e308.  if v0 != 0 then goto L42e368;
  #L42e30c.  v0:= v10.`qc.o.g` @type ^`qc.o` @kind object;
  #L42e310.  if v0 != 0 then goto L42e368;
  #L42e314.  v0:= v10.`qc.o.d` @type ^`boolean` @kind boolean;
  #L42e318.  if v0 == 0 then goto L42e31e;
  #L42e31c.  return @kind void;
  #L42e31e.  v0:= constclass @type ^`qc.p` @kind object;
  #L42e322.  @monitorenter v0
  #L42e324.  v1:= `@@qc.p.b` @type ^`long` @kind wide;
  #L42e328.  v3:= 8192L;
  #L42e32c.  v5:= v1 + v3 @kind long;
  #L42e330.  v7:= 65536L;
  #L42e336.  v9:= lcmp(v5, v7);
  #L42e33a.  if v9 <= 0 then goto L42e342;
  #L42e33e.  @monitorexit v0
  #L42e340.  return @kind void;
  #L42e342.  v1:= v1 + v3 @kind long;
  #L42e344.  `@@qc.p.b` @type ^`long` := v1 @kind wide;
  #L42e348.  v1:= `@@qc.p.a` @type ^`qc.o` @kind object;
  #L42e34c.  v10.`qc.o.f` @type ^`qc.o` := v1 @kind object;
  #L42e350.  v1:= 0I;
  #L42e352.  v10.`qc.o.c` @type ^`int` := v1;
  #L42e356.  v10.`qc.o.b` @type ^`int` := v1;
  #L42e35a.  `@@qc.p.a` @type ^`qc.o` := v10 @kind object;
  #L42e35e.  @monitorexit v0
  #L42e360.  return @kind void;
  #L42e362.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e364.  @monitorexit v0
  #L42e366.  throw v10;
  #L42e368.  v10:= new `java.lang.IllegalArgumentException`;
  #L42e36c.  call `<init>`(v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L42e372.  throw v10;
  catch `java.lang.Throwable` @[L42e324..L42e366] goto L42e362;
}
procedure `qc.o` `b`() @signature `Lqc/p;.b:()Lqc/o;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L42e284.  v0:= constclass @type ^`qc.p` @kind object;
  #L42e288.  @monitorenter v0
  #L42e28a.  v1:= `@@qc.p.a` @type ^`qc.o` @kind object;
  #L42e28e.  if v1 == 0 then goto L42e2b2;
  #L42e292.  v2:= v1.`qc.o.f` @type ^`qc.o` @kind object;
  #L42e296.  `@@qc.p.a` @type ^`qc.o` := v2 @kind object;
  #L42e29a.  v2:= 0I;
  #L42e29c.  v1.`qc.o.f` @type ^`qc.o` := v2 @kind object;
  #L42e2a0.  v2:= `@@qc.p.b` @type ^`long` @kind wide;
  #L42e2a4.  v4:= 8192L;
  #L42e2a8.  v2:= v2 - v4 @kind long;
  #L42e2aa.  `@@qc.p.b` @type ^`long` := v2 @kind wide;
  #L42e2ae.  @monitorexit v0
  #L42e2b0.  return v1 @kind object;
  #L42e2b2.  @monitorexit v0
  #L42e2b4.  v0:= new `qc.o`;
  #L42e2b8.  call `<init>`(v0) @signature `Lqc/o;.<init>:()V` @kind direct;
  #L42e2be.  return v0 @kind object;
  #L42e2c0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42e2c2.  @monitorexit v0
  #L42e2c4.  throw v1;
  catch `java.lang.Throwable` @[L42e28a..L42e2b4] goto L42e2c0;
  catch `java.lang.Throwable` @[L42e2c2..L42e2c4] goto L42e2c0;
}
