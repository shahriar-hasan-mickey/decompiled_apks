record `qc.j` @kind class @AccessFlag PUBLIC_FINAL extends `qc.s` @kind interface {
  `int` `qc.j.o` @AccessFlag PRIVATE;
  `qc.e` `qc.j.p` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.Inflater` `qc.j.q` @AccessFlag PRIVATE_FINAL;
  `qc.k` `qc.j.r` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.CRC32` `qc.j.s` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`qc.j` v2 @kind this, `qc.s` v3 @kind object) @signature `Lqc/j;.<init>:(Lqc/s;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L42c8a8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42c8ae.  v0:= 0I;
  #L42c8b0.  v2.`qc.j.o` @type ^`int` := v0;
  #L42c8b4.  v0:= new `java.util.zip.CRC32`;
  #L42c8b8.  call `<init>`(v0) @signature `Ljava/util/zip/CRC32;.<init>:()V` @kind direct;
  #L42c8be.  v2.`qc.j.s` @type ^`java.util.zip.CRC32` := v0 @kind object;
  #L42c8c2.  if v3 == 0 then goto L42c8f2;
  #L42c8c6.  v0:= new `java.util.zip.Inflater`;
  #L42c8ca.  v1:= 1I;
  #L42c8cc.  call `<init>`(v0, v1) @signature `Ljava/util/zip/Inflater;.<init>:(Z)V` @kind direct;
  #L42c8d2.  v2.`qc.j.q` @type ^`java.util.zip.Inflater` := v0 @kind object;
  #L42c8d6.  call temp:= `b`(v3) @signature `Lqc/l;.b:(Lqc/s;)Lqc/e;` @kind static;
  #L42c8dc.  v3:= temp @kind object;
  #L42c8de.  v2.`qc.j.p` @type ^`qc.e` := v3 @kind object;
  #L42c8e2.  v1:= new `qc.k`;
  #L42c8e6.  call `<init>`(v1, v3, v0) @signature `Lqc/k;.<init>:(Lqc/e;Ljava/util/zip/Inflater;)V` @kind direct;
  #L42c8ec.  v2.`qc.j.r` @type ^`qc.k` := v1 @kind object;
  #L42c8f0.  return @kind void;
  #L42c8f2.  v3:= new `java.lang.IllegalArgumentException`;
  #L42c8f6.  v0:= "source == null" @kind object;
  #L42c8fa.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42c900.  throw v3;
}
procedure `void` `a`(`qc.j` v3 @kind this, `java.lang.String` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lqc/j;.a:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L42c914.  if v6 != v5 then goto L42c91a;
  #L42c918.  return @kind void;
  #L42c91a.  v0:= new `java.io.IOException`;
  #L42c91e.  v1:= 3I;
  #L42c920.  v1:= new `java.lang.Object`[v1];
  #L42c924.  v2:= 0I;
  #L42c926.  v1[v2]:= v4 @kind object;
  #L42c92a.  v4:= 1I;
  #L42c92c.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42c932.  v6:= temp @kind object;
  #L42c934.  v1[v4]:= v6 @kind object;
  #L42c938.  v4:= 2I;
  #L42c93a.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42c940.  v5:= temp @kind object;
  #L42c942.  v1[v4]:= v5 @kind object;
  #L42c946.  v4:= "%s: actual 0x%08x != expected 0x%08x" @kind object;
  #L42c94a.  call temp:= `format`(v4, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L42c950.  v4:= temp @kind object;
  #L42c952.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42c958.  throw v0;
}
procedure `void` `c`(`qc.j` v17 @kind this) @signature `Lqc/j;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L42c988.  v6:= v17 @kind object;
  #L42c98c.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42c990.  v1:= 10L;
  #L42c994.  call `U`(v0, v1) @signature `Lqc/e;.U:(J)V` @kind interface;
  #L42c99a.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42c99e.  call temp:= `b`(v0) @signature `Lqc/e;.b:()Lqc/c;` @kind interface;
  #L42c9a4.  v0:= temp @kind object;
  #L42c9a6.  v1:= 3L;
  #L42c9aa.  call temp:= `N`(v0, v1) @signature `Lqc/c;.N:(J)B` @kind virtual;
  #L42c9b0.  v7:= temp;
  #L42c9b2.  v0:= v7 ^> 1;
  #L42c9b6.  v8:= 1I;
  #L42c9b8.  v0:= v0 ^& v8 @kind int;
  #L42c9ba.  v9:= 0I;
  #L42c9bc.  if v0 != v8 then goto L42c9c4;
  #L42c9c0.  v10:= 1I;
  #L42c9c2.  goto L42c9c6;
  #L42c9c4.  v10:= 0I;
  #L42c9c6.  if v10 == 0 then goto L42c9e8;
  #L42c9ca.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42c9ce.  call temp:= `b`(v0) @signature `Lqc/e;.b:()Lqc/c;` @kind interface;
  #L42c9d4.  v1:= temp @kind object;
  #L42c9d6.  v2:= 0L;
  #L42c9da.  v4:= 10L;
  #L42c9de.  v0:= v17 @kind object;
  #L42c9e2.  call `h`(v0, v1, v2, v4) @signature `Lqc/j;.h:(Lqc/c;JJ)V` @kind direct;
  #L42c9e8.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42c9ec.  call temp:= `readShort`(v0) @signature `Lqc/e;.readShort:()S` @kind interface;
  #L42c9f2.  v0:= temp;
  #L42c9f4.  v1:= 8075I;
  #L42c9f8.  v2:= "ID1ID2" @kind object;
  #L42c9fc.  call `a`(v6, v2, v1, v0) @signature `Lqc/j;.a:(Ljava/lang/String;II)V` @kind direct;
  #L42ca02.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42ca06.  v1:= 8L;
  #L42ca0a.  call `d`(v0, v1) @signature `Lqc/e;.d:(J)V` @kind interface;
  #L42ca10.  v0:= v7 ^> 2;
  #L42ca14.  v0:= v0 ^& v8 @kind int;
  #L42ca16.  if v0 != v8 then goto L42ca94;
  #L42ca1a.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42ca1e.  v1:= 2L;
  #L42ca22.  call `U`(v0, v1) @signature `Lqc/e;.U:(J)V` @kind interface;
  #L42ca28.  if v10 == 0 then goto L42ca4a;
  #L42ca2c.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42ca30.  call temp:= `b`(v0) @signature `Lqc/e;.b:()Lqc/c;` @kind interface;
  #L42ca36.  v1:= temp @kind object;
  #L42ca38.  v2:= 0L;
  #L42ca3c.  v4:= 2L;
  #L42ca40.  v0:= v17 @kind object;
  #L42ca44.  call `h`(v0, v1, v2, v4) @signature `Lqc/j;.h:(Lqc/c;JJ)V` @kind direct;
  #L42ca4a.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42ca4e.  call temp:= `b`(v0) @signature `Lqc/e;.b:()Lqc/c;` @kind interface;
  #L42ca54.  v0:= temp @kind object;
  #L42ca56.  call temp:= `H`(v0) @signature `Lqc/c;.H:()S` @kind virtual;
  #L42ca5c.  v0:= temp;
  #L42ca5e.  v1:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42ca62.  v11:= (`long`) v0 @kind i2l;
  #L42ca64.  call `U`(v1, v11) @signature `Lqc/e;.U:(J)V` @kind interface;
  #L42ca6a.  if v10 == 0 then goto L42ca8a;
  #L42ca6e.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42ca72.  call temp:= `b`(v0) @signature `Lqc/e;.b:()Lqc/c;` @kind interface;
  #L42ca78.  v1:= temp @kind object;
  #L42ca7a.  v2:= 0L;
  #L42ca7e.  v0:= v17 @kind object;
  #L42ca82.  v4:= v11 @kind wide;
  #L42ca84.  call `h`(v0, v1, v2, v4) @signature `Lqc/j;.h:(Lqc/c;JJ)V` @kind direct;
  #L42ca8a.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42ca8e.  call `d`(v0, v11) @signature `Lqc/e;.d:(J)V` @kind interface;
  #L42ca94.  v0:= v7 ^> 3;
  #L42ca98.  v0:= v0 ^& v8 @kind int;
  #L42ca9a.  v11:= -1L;
  #L42ca9e.  v13:= 1L;
  #L42caa2.  if v0 != v8 then goto L42caf8;
  #L42caa6.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42caaa.  call temp:= `W`(v0, v9) @signature `Lqc/e;.W:(B)J` @kind interface;
  #L42cab0.  v15:= temp @kind wide;
  #L42cab2.  v0:= lcmp(v15, v11);
  #L42cab6.  if v0 == 0 then goto L42caec;
  #L42caba.  if v10 == 0 then goto L42cadc;
  #L42cabe.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42cac2.  call temp:= `b`(v0) @signature `Lqc/e;.b:()Lqc/c;` @kind interface;
  #L42cac8.  v1:= temp @kind object;
  #L42caca.  v2:= 0L;
  #L42cace.  v4:= v15 + v13 @kind long;
  #L42cad2.  v0:= v17 @kind object;
  #L42cad6.  call `h`(v0, v1, v2, v4) @signature `Lqc/j;.h:(Lqc/c;JJ)V` @kind direct;
  #L42cadc.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42cae0.  v1:= v15 + v13 @kind long;
  #L42cae4.  call `d`(v0, v1) @signature `Lqc/e;.d:(J)V` @kind interface;
  #L42caea.  goto L42caf8;
  #L42caec.  v0:= new `java.io.EOFException`;
  #L42caf0.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L42caf6.  throw v0;
  #L42caf8.  v0:= v7 ^> 4;
  #L42cafc.  v0:= v0 ^& v8 @kind int;
  #L42cafe.  if v0 != v8 then goto L42cb52;
  #L42cb02.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42cb06.  call temp:= `W`(v0, v9) @signature `Lqc/e;.W:(B)J` @kind interface;
  #L42cb0c.  v7:= temp @kind wide;
  #L42cb0e.  v0:= lcmp(v7, v11);
  #L42cb12.  if v0 == 0 then goto L42cb46;
  #L42cb16.  if v10 == 0 then goto L42cb38;
  #L42cb1a.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42cb1e.  call temp:= `b`(v0) @signature `Lqc/e;.b:()Lqc/c;` @kind interface;
  #L42cb24.  v1:= temp @kind object;
  #L42cb26.  v2:= 0L;
  #L42cb2a.  v4:= v7 + v13 @kind long;
  #L42cb2e.  v0:= v17 @kind object;
  #L42cb32.  call `h`(v0, v1, v2, v4) @signature `Lqc/j;.h:(Lqc/c;JJ)V` @kind direct;
  #L42cb38.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42cb3c.  v7:= v7 + v13 @kind long;
  #L42cb3e.  call `d`(v0, v7) @signature `Lqc/e;.d:(J)V` @kind interface;
  #L42cb44.  goto L42cb52;
  #L42cb46.  v0:= new `java.io.EOFException`;
  #L42cb4a.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L42cb50.  throw v0;
  #L42cb52.  if v10 == 0 then goto L42cb86;
  #L42cb56.  v0:= v6.`qc.j.p` @type ^`qc.e` @kind object;
  #L42cb5a.  call temp:= `H`(v0) @signature `Lqc/e;.H:()S` @kind interface;
  #L42cb60.  v0:= temp;
  #L42cb62.  v1:= v6.`qc.j.s` @type ^`java.util.zip.CRC32` @kind object;
  #L42cb66.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L42cb6c.  v1:= temp @kind wide;
  #L42cb6e.  v2:= (`int`) v1 @kind l2i;
  #L42cb70.  v1:= (`short`) v2 @kind i2s;
  #L42cb72.  v2:= "FHCRC" @kind object;
  #L42cb76.  call `a`(v6, v2, v0, v1) @signature `Lqc/j;.a:(Ljava/lang/String;II)V` @kind direct;
  #L42cb7c.  v0:= v6.`qc.j.s` @type ^`java.util.zip.CRC32` @kind object;
  #L42cb80.  call `reset`(v0) @signature `Ljava/util/zip/CRC32;.reset:()V` @kind virtual;
  #L42cb86.  return @kind void;
}
procedure `void` `e`(`qc.j` v3 @kind this) @signature `Lqc/j;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L42cb98.  v0:= v3.`qc.j.p` @type ^`qc.e` @kind object;
  #L42cb9c.  call temp:= `y`(v0) @signature `Lqc/e;.y:()I` @kind interface;
  #L42cba2.  v0:= temp;
  #L42cba4.  v1:= v3.`qc.j.s` @type ^`java.util.zip.CRC32` @kind object;
  #L42cba8.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L42cbae.  v1:= temp @kind wide;
  #L42cbb0.  v2:= (`int`) v1 @kind l2i;
  #L42cbb2.  v1:= "CRC" @kind object;
  #L42cbb6.  call `a`(v3, v1, v0, v2) @signature `Lqc/j;.a:(Ljava/lang/String;II)V` @kind direct;
  #L42cbbc.  v0:= v3.`qc.j.p` @type ^`qc.e` @kind object;
  #L42cbc0.  call temp:= `y`(v0) @signature `Lqc/e;.y:()I` @kind interface;
  #L42cbc6.  v0:= temp;
  #L42cbc8.  v1:= v3.`qc.j.q` @type ^`java.util.zip.Inflater` @kind object;
  #L42cbcc.  call temp:= `getBytesWritten`(v1) @signature `Ljava/util/zip/Inflater;.getBytesWritten:()J` @kind virtual;
  #L42cbd2.  v1:= temp @kind wide;
  #L42cbd4.  v2:= (`int`) v1 @kind l2i;
  #L42cbd6.  v1:= "ISIZE" @kind object;
  #L42cbda.  call `a`(v3, v1, v0, v2) @signature `Lqc/j;.a:(Ljava/lang/String;II)V` @kind direct;
  #L42cbe0.  return @kind void;
}
procedure `void` `h`(`qc.j` v5 @kind this, `qc.c` v6 @kind object, `long` v7 , `long` v9 ) @signature `Lqc/j;.h:(Lqc/c;JJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L42cbf4.  v6:= v6.`qc.c.o` @type ^`qc.o` @kind object;
  #L42cbf8.  v0:= v6.`qc.o.c` @type ^`int`;
  #L42cbfc.  v1:= v6.`qc.o.b` @type ^`int`;
  #L42cc00.  v2:= v0 - v1 @kind int;
  #L42cc04.  v2:= (`long`) v2 @kind i2l;
  #L42cc06.  v4:= lcmp(v7, v2);
  #L42cc0a.  if v4 < 0 then goto L42cc1a;
  #L42cc0e.  v0:= v0 - v1 @kind int;
  #L42cc10.  v0:= (`long`) v0 @kind i2l;
  #L42cc12.  v7:= v7 - v0 @kind long;
  #L42cc14.  v6:= v6.`qc.o.f` @type ^`qc.o` @kind object;
  #L42cc18.  goto L42cbf8;
  #L42cc1a.  v0:= 0L;
  #L42cc1e.  v2:= lcmp(v9, v0);
  #L42cc22.  if v2 <= 0 then goto L42cc5c;
  #L42cc26.  v2:= v6.`qc.o.b` @type ^`int`;
  #L42cc2a.  v2:= (`long`) v2 @kind i2l;
  #L42cc2c.  v2:= v2 + v7 @kind long;
  #L42cc2e.  v7:= (`int`) v2 @kind l2i;
  #L42cc30.  v8:= v6.`qc.o.c` @type ^`int`;
  #L42cc34.  v8:= v8 - v7 @kind int;
  #L42cc36.  v2:= (`long`) v8 @kind i2l;
  #L42cc38.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L42cc3e.  v2:= temp @kind wide;
  #L42cc40.  v8:= (`int`) v2 @kind l2i;
  #L42cc42.  v2:= v5.`qc.j.s` @type ^`java.util.zip.CRC32` @kind object;
  #L42cc46.  v3:= v6.`qc.o.a` @type ^`byte`[] @kind object;
  #L42cc4a.  call `update`(v2, v3, v7, v8) @signature `Ljava/util/zip/CRC32;.update:([BII)V` @kind virtual;
  #L42cc50.  v7:= (`long`) v8 @kind i2l;
  #L42cc52.  v9:= v9 - v7 @kind long;
  #L42cc54.  v6:= v6.`qc.o.f` @type ^`qc.o` @kind object;
  #L42cc58.  v7:= v0 @kind wide;
  #L42cc5a.  goto L42cc1e;
  #L42cc5c.  return @kind void;
}
procedure `long` `T`(`qc.j` v11 @kind this, `qc.c` v12 @kind object, `long` v13 ) @signature `Lqc/j;.T:(Lqc/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L42c7b4.  v0:= 0L;
  #L42c7b8.  v2:= lcmp(v13, v0);
  #L42c7bc.  if v2 < 0 then goto L42c84a;
  #L42c7c0.  if v2 != 0 then goto L42c7c6;
  #L42c7c4.  return v0 @kind wide;
  #L42c7c6.  v0:= v11.`qc.j.o` @type ^`int`;
  #L42c7ca.  v1:= 1I;
  #L42c7cc.  if v0 != 0 then goto L42c7da;
  #L42c7d0.  call `c`(v11) @signature `Lqc/j;.c:()V` @kind direct;
  #L42c7d6.  v11.`qc.j.o` @type ^`int` := v1;
  #L42c7da.  v0:= v11.`qc.j.o` @type ^`int`;
  #L42c7de.  v2:= -1L;
  #L42c7e2.  v4:= 2I;
  #L42c7e4.  if v0 != v1 then goto L42c812;
  #L42c7e8.  v7:= v12.`qc.c.p` @type ^`long` @kind wide;
  #L42c7ec.  v0:= v11.`qc.j.r` @type ^`qc.k` @kind object;
  #L42c7f0.  call temp:= `T`(v0, v12, v13) @signature `Lqc/k;.T:(Lqc/c;J)J` @kind virtual;
  #L42c7f6.  v13:= temp @kind wide;
  #L42c7f8.  v0:= lcmp(v13, v2);
  #L42c7fc.  if v0 == 0 then goto L42c80e;
  #L42c800.  v5:= v11 @kind object;
  #L42c802.  v6:= v12 @kind object;
  #L42c804.  v9:= v13 @kind wide;
  #L42c806.  call `h`(v5, v6, v7, v9) @signature `Lqc/j;.h:(Lqc/c;JJ)V` @kind direct;
  #L42c80c.  return v13 @kind wide;
  #L42c80e.  v11.`qc.j.o` @type ^`int` := v4;
  #L42c812.  v12:= v11.`qc.j.o` @type ^`int`;
  #L42c816.  if v12 != v4 then goto L42c848;
  #L42c81a.  call `e`(v11) @signature `Lqc/j;.e:()V` @kind direct;
  #L42c820.  v12:= 3I;
  #L42c822.  v11.`qc.j.o` @type ^`int` := v12;
  #L42c826.  v12:= v11.`qc.j.p` @type ^`qc.e` @kind object;
  #L42c82a.  call temp:= `z`(v12) @signature `Lqc/e;.z:()Z` @kind interface;
  #L42c830.  v12:= temp;
  #L42c832.  if v12 == 0 then goto L42c838;
  #L42c836.  goto L42c848;
  #L42c838.  v12:= new `java.io.IOException`;
  #L42c83c.  v13:= "gzip finished without exhausting source" @kind object;
  #L42c840.  call `<init>`(v12, v13) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42c846.  throw v12;
  #L42c848.  return v2 @kind wide;
  #L42c84a.  v12:= new `java.lang.IllegalArgumentException`;
  #L42c84e.  v0:= new `java.lang.StringBuilder`;
  #L42c852.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42c858.  v1:= "byteCount < 0: " @kind object;
  #L42c85c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c862.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c868.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42c86e.  v13:= temp @kind object;
  #L42c870.  call `<init>`(v12, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42c876.  throw v12;
}
procedure `void` `close`(`qc.j` v1 @kind this) @signature `Lqc/j;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c96c.  v0:= v1.`qc.j.r` @type ^`qc.k` @kind object;
  #L42c970.  call `close`(v0) @signature `Lqc/k;.close:()V` @kind virtual;
  #L42c976.  return @kind void;
}
procedure `qc.t` `f`(`qc.j` v1 @kind this) @signature `Lqc/j;.f:()Lqc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c888.  v0:= v1.`qc.j.p` @type ^`qc.e` @kind object;
  #L42c88c.  call temp:= `f`(v0) @signature `Lqc/s;.f:()Lqc/t;` @kind interface;
  #L42c892.  v0:= temp @kind object;
  #L42c894.  return v0 @kind object;
}
