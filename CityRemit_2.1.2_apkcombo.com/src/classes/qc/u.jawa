record `qc.u` @kind class @AccessFlag FINAL {
}
global `java.nio.charset.Charset` `@@qc.u.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lqc/u;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L42ee88.  v0:= "UTF-8" @kind object;
  #L42ee8c.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L42ee92.  v0:= temp @kind object;
  #L42ee94.  `@@qc.u.a` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L42ee98.  return @kind void;
}
procedure `boolean` `a`(`byte`[] v4 @kind object, `int` v5 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lqc/u;.a:([BI[BII)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42eddc.  v0:= 0I;
  #L42edde.  v1:= 0I;
  #L42ede0.  if v1 >= v8 then goto L42ee00;
  #L42ede4.  v2:= v1 + v5 @kind int;
  #L42ede8.  v2:= v4[v2] @kind byte;
  #L42edec.  v3:= v1 + v7 @kind int;
  #L42edf0.  v3:= v6[v3] @kind byte;
  #L42edf4.  if v2 == v3 then goto L42edfa;
  #L42edf8.  return v0;
  #L42edfa.  v1:= v1 + 1;
  #L42edfe.  goto L42ede0;
  #L42ee00.  v4:= 1I;
  #L42ee02.  return v4;
}
procedure `void` `b`(`long` v5 , `long` v7 , `long` v9 ) @signature `Lqc/u;.b:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L42eeac.  v0:= v7 ^| v9 @kind long;
  #L42eeb0.  v2:= 0L;
  #L42eeb4.  v4:= lcmp(v0, v2);
  #L42eeb8.  if v4 < 0 then goto L42eed2;
  #L42eebc.  v0:= lcmp(v7, v5);
  #L42eec0.  if v0 > 0 then goto L42eed2;
  #L42eec4.  v0:= v5 - v7 @kind long;
  #L42eec8.  v2:= lcmp(v0, v9);
  #L42eecc.  if v2 < 0 then goto L42eed2;
  #L42eed0.  return @kind void;
  #L42eed2.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L42eed6.  v1:= 3I;
  #L42eed8.  v1:= new `java.lang.Object`[v1];
  #L42eedc.  v2:= 0I;
  #L42eede.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L42eee4.  v5:= temp @kind object;
  #L42eee6.  v1[v2]:= v5 @kind object;
  #L42eeea.  v5:= 1I;
  #L42eeec.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L42eef2.  v6:= temp @kind object;
  #L42eef4.  v1[v5]:= v6 @kind object;
  #L42eef8.  v5:= 2I;
  #L42eefa.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L42ef00.  v6:= temp @kind object;
  #L42ef02.  v1[v5]:= v6 @kind object;
  #L42ef06.  v5:= "size=%s offset=%s byteCount=%s" @kind object;
  #L42ef0a.  call temp:= `format`(v5, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L42ef10.  v5:= temp @kind object;
  #L42ef12.  call `<init>`(v0, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42ef18.  throw v0;
}
procedure `int` `c`(`int` v2 ) @signature `Lqc/u;.c:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L42ee14.  v0:= -16777216I;
  #L42ee18.  v0:= v0 ^& v2 @kind int;
  #L42ee1a.  v0:= v0 ^>> 24;
  #L42ee1e.  v1:= 16711680I;
  #L42ee22.  v1:= v1 ^& v2 @kind int;
  #L42ee24.  v1:= v1 ^>> 8;
  #L42ee28.  v0:= v0 ^| v1 @kind int;
  #L42ee2a.  v1:= 65280I;
  #L42ee30.  v1:= v1 ^& v2 @kind int;
  #L42ee32.  v1:= v1 ^< 8;
  #L42ee36.  v0:= v0 ^| v1 @kind int;
  #L42ee38.  v2:= v2 ^& 255;
  #L42ee3c.  v2:= v2 ^< 24;
  #L42ee40.  v2:= v2 ^| v0 @kind int;
  #L42ee42.  return v2;
}
procedure `short` `d`(`short` v1 ) @signature `Lqc/u;.d:(S)S` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42ee54.  v0:= 65535I;
  #L42ee5a.  v1:= v1 ^& v0 @kind int;
  #L42ee5c.  v0:= 65280I;
  #L42ee62.  v0:= v0 ^& v1 @kind int;
  #L42ee64.  v0:= v0 ^>> 8;
  #L42ee68.  v1:= v1 ^& 255;
  #L42ee6c.  v1:= v1 ^< 8;
  #L42ee70.  v1:= v1 ^| v0 @kind int;
  #L42ee72.  v1:= (`short`) v1 @kind i2s;
  #L42ee74.  return v1;
}
procedure `void` `e`(`java.lang.Throwable` v0 @kind object) @signature `Lqc/u;.e:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L42ef2c.  call `f`(v0) @signature `Lqc/u;.f:(Ljava/lang/Throwable;)V` @kind static;
  #L42ef32.  return @kind void;
}
procedure `void` `f`(`java.lang.Throwable` v0 @kind object) @signature `Lqc/u;.f:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L42ef44.  throw v0;
}
