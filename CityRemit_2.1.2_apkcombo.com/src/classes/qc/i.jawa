record `qc.i` @kind class @AccessFlag PUBLIC extends `qc.t` @kind class {
  `qc.t` `qc.i.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`qc.i` v1 @kind this, `qc.t` v2 @kind object) @signature `Lqc/i;.<init>:(Lqc/t;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42c768.  call `<init>`(v1) @signature `Lqc/t;.<init>:()V` @kind direct;
  #L42c76e.  if v2 == 0 then goto L42c778;
  #L42c772.  v1.`qc.i.e` @type ^`qc.t` := v2 @kind object;
  #L42c776.  return @kind void;
  #L42c778.  v2:= new `java.lang.IllegalArgumentException`;
  #L42c77c.  v0:= "delegate == null" @kind object;
  #L42c780.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42c786.  throw v2;
}
procedure `qc.t` `a`(`qc.i` v1 @kind this) @signature `Lqc/i;.a:()Lqc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c6d0.  v0:= v1.`qc.i.e` @type ^`qc.t` @kind object;
  #L42c6d4.  call temp:= `a`(v0) @signature `Lqc/t;.a:()Lqc/t;` @kind virtual;
  #L42c6da.  v0:= temp @kind object;
  #L42c6dc.  return v0 @kind object;
}
procedure `qc.t` `b`(`qc.i` v1 @kind this) @signature `Lqc/i;.b:()Lqc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c6f0.  v0:= v1.`qc.i.e` @type ^`qc.t` @kind object;
  #L42c6f4.  call temp:= `b`(v0) @signature `Lqc/t;.b:()Lqc/t;` @kind virtual;
  #L42c6fa.  v0:= temp @kind object;
  #L42c6fc.  return v0 @kind object;
}
procedure `long` `c`(`qc.i` v2 @kind this) @signature `Lqc/i;.c:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42c684.  v0:= v2.`qc.i.e` @type ^`qc.t` @kind object;
  #L42c688.  call temp:= `c`(v0) @signature `Lqc/t;.c:()J` @kind virtual;
  #L42c68e.  v0:= temp @kind wide;
  #L42c690.  return v0 @kind wide;
}
procedure `qc.t` `d`(`qc.i` v1 @kind this, `long` v2 ) @signature `Lqc/i;.d:(J)Lqc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c710.  v0:= v1.`qc.i.e` @type ^`qc.t` @kind object;
  #L42c714.  call temp:= `d`(v0, v2) @signature `Lqc/t;.d:(J)Lqc/t;` @kind virtual;
  #L42c71a.  v2:= temp @kind object;
  #L42c71c.  return v2 @kind object;
}
procedure `boolean` `e`(`qc.i` v1 @kind this) @signature `Lqc/i;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c664.  v0:= v1.`qc.i.e` @type ^`qc.t` @kind object;
  #L42c668.  call temp:= `e`(v0) @signature `Lqc/t;.e:()Z` @kind virtual;
  #L42c66e.  v0:= temp;
  #L42c670.  return v0;
}
procedure `void` `f`(`qc.i` v1 @kind this) @signature `Lqc/i;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c798.  v0:= v1.`qc.i.e` @type ^`qc.t` @kind object;
  #L42c79c.  call `f`(v0) @signature `Lqc/t;.f:()V` @kind virtual;
  #L42c7a2.  return @kind void;
}
procedure `qc.t` `g`(`qc.i` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lqc/i;.g:(JLjava/util/concurrent/TimeUnit;)Lqc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c748.  v0:= v1.`qc.i.e` @type ^`qc.t` @kind object;
  #L42c74c.  call temp:= `g`(v0, v2, v4) @signature `Lqc/t;.g:(JLjava/util/concurrent/TimeUnit;)Lqc/t;` @kind virtual;
  #L42c752.  v2:= temp @kind object;
  #L42c754.  return v2 @kind object;
}
procedure `qc.t` `i`(`qc.i` v1 @kind this) @signature `Lqc/i;.i:()Lqc/t;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42c730.  v0:= v1.`qc.i.e` @type ^`qc.t` @kind object;
  #L42c734.  return v0 @kind object;
}
procedure `qc.i` `j`(`qc.i` v1 @kind this, `qc.t` v2 @kind object) @signature `Lqc/i;.j:(Lqc/t;)Lqc/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42c6a4.  if v2 == 0 then goto L42c6ae;
  #L42c6a8.  v1.`qc.i.e` @type ^`qc.t` := v2 @kind object;
  #L42c6ac.  return v1 @kind object;
  #L42c6ae.  v2:= new `java.lang.IllegalArgumentException`;
  #L42c6b2.  v0:= "delegate == null" @kind object;
  #L42c6b6.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42c6bc.  throw v2;
}
