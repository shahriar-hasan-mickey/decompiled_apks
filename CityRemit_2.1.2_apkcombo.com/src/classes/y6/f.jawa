record `y6.f` @kind class @AccessFlag PUBLIC extends `y6.d` @kind class {
  `f7.n` `y6.f.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`y6.f` v1 @kind this, `y6.e` v2 @kind object, `x6.l` v3 @kind object, `f7.n` v4 @kind object) @signature `Ly6/f;.<init>:(Ly6/e;Lx6/l;Lf7/n;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f7570.  v0:= `@@y6.d$a.o` @type ^`y6.d$a` @kind object;
  #L4f7574.  call `<init>`(v1, v0, v2, v3) @signature `Ly6/d;.<init>:(Ly6/d$a;Ly6/e;Lx6/l;)V` @kind direct;
  #L4f757a.  v1.`y6.f.d` @type ^`f7.n` := v4 @kind object;
  #L4f757e.  return @kind void;
}
procedure `y6.d` `d`(`y6.f` v4 @kind this, `f7.b` v5 @kind object) @signature `Ly6/f;.d:(Lf7/b;)Ly6/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f7590.  v0:= v4.`y6.d.c` @type ^`x6.l` @kind object;
  #L4f7594.  call temp:= `isEmpty`(v0) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L4f759a.  v0:= temp;
  #L4f759c.  if v0 == 0 then goto L4f75c4;
  #L4f75a0.  v0:= new `y6.f`;
  #L4f75a4.  v1:= v4.`y6.d.b` @type ^`y6.e` @kind object;
  #L4f75a8.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L4f75ae.  v2:= temp @kind object;
  #L4f75b0.  v3:= v4.`y6.f.d` @type ^`f7.n` @kind object;
  #L4f75b4.  call temp:= `z`(v3, v5) @signature `Lf7/n;.z:(Lf7/b;)Lf7/n;` @kind interface;
  #L4f75ba.  v5:= temp @kind object;
  #L4f75bc.  call `<init>`(v0, v1, v2, v5) @signature `Ly6/f;.<init>:(Ly6/e;Lx6/l;Lf7/n;)V` @kind direct;
  #L4f75c2.  return v0 @kind object;
  #L4f75c4.  v5:= new `y6.f`;
  #L4f75c8.  v0:= v4.`y6.d.b` @type ^`y6.e` @kind object;
  #L4f75cc.  v1:= v4.`y6.d.c` @type ^`x6.l` @kind object;
  #L4f75d0.  call temp:= `k0`(v1) @signature `Lx6/l;.k0:()Lx6/l;` @kind virtual;
  #L4f75d6.  v1:= temp @kind object;
  #L4f75d8.  v2:= v4.`y6.f.d` @type ^`f7.n` @kind object;
  #L4f75dc.  call `<init>`(v5, v0, v1, v2) @signature `Ly6/f;.<init>:(Ly6/e;Lx6/l;Lf7/n;)V` @kind direct;
  #L4f75e2.  return v5 @kind object;
}
procedure `f7.n` `e`(`y6.f` v1 @kind this) @signature `Ly6/f;.e:()Lf7/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f750c.  v0:= v1.`y6.f.d` @type ^`f7.n` @kind object;
  #L4f7510.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`y6.f` v3 @kind this) @signature `Ly6/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f7524.  v0:= 3I;
  #L4f7526.  v0:= new `java.lang.Object`[v0];
  #L4f752a.  call temp:= `a`(v3) @signature `Ly6/d;.a:()Lx6/l;` @kind virtual;
  #L4f7530.  v1:= temp @kind object;
  #L4f7532.  v2:= 0I;
  #L4f7534.  v0[v2]:= v1 @kind object;
  #L4f7538.  call temp:= `b`(v3) @signature `Ly6/d;.b:()Ly6/e;` @kind virtual;
  #L4f753e.  v1:= temp @kind object;
  #L4f7540.  v2:= 1I;
  #L4f7542.  v0[v2]:= v1 @kind object;
  #L4f7546.  v1:= v3.`y6.f.d` @type ^`f7.n` @kind object;
  #L4f754a.  v2:= 2I;
  #L4f754c.  v0[v2]:= v1 @kind object;
  #L4f7550.  v1:= "Overwrite { path=%s, source=%s, snapshot=%s }" @kind object;
  #L4f7554.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4f755a.  v0:= temp @kind object;
  #L4f755c.  return v0 @kind object;
}
