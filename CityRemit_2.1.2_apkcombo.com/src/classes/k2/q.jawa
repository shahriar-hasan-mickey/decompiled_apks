record `k2.q` @kind class @AccessFlag PUBLIC_FINAL extends `k2.m` @kind interface {
  `k2.d0` `k2.q.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `k2.q.b` @AccessFlag PRIVATE;
  `a2.d0` `k2.q.c` @AccessFlag PRIVATE;
  `k2.q$a` `k2.q.d` @AccessFlag PRIVATE;
  `boolean` `k2.q.e` @AccessFlag PRIVATE;
  `boolean`[] `k2.q.f` @AccessFlag PRIVATE_FINAL;
  `k2.u` `k2.q.g` @AccessFlag PRIVATE_FINAL;
  `k2.u` `k2.q.h` @AccessFlag PRIVATE_FINAL;
  `k2.u` `k2.q.i` @AccessFlag PRIVATE_FINAL;
  `k2.u` `k2.q.j` @AccessFlag PRIVATE_FINAL;
  `k2.u` `k2.q.k` @AccessFlag PRIVATE_FINAL;
  `long` `k2.q.l` @AccessFlag PRIVATE;
  `long` `k2.q.m` @AccessFlag PRIVATE;
  `s3.z` `k2.q.n` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`k2.q` v2 @kind this, `k2.d0` v3 @kind object) @signature `Lk2/q;.<init>:(Lk2/d0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a4fb8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a4fbe.  v2.`k2.q.a` @type ^`k2.d0` := v3 @kind object;
  #L3a4fc2.  v3:= 3I;
  #L3a4fc4.  v3:= new `boolean`[v3];
  #L3a4fc8.  v2.`k2.q.f` @type ^`boolean`[] := v3 @kind object;
  #L3a4fcc.  v3:= new `k2.u`;
  #L3a4fd0.  v0:= 32I;
  #L3a4fd4.  v1:= 128I;
  #L3a4fd8.  call `<init>`(v3, v0, v1) @signature `Lk2/u;.<init>:(II)V` @kind direct;
  #L3a4fde.  v2.`k2.q.g` @type ^`k2.u` := v3 @kind object;
  #L3a4fe2.  v3:= new `k2.u`;
  #L3a4fe6.  v0:= 33I;
  #L3a4fea.  call `<init>`(v3, v0, v1) @signature `Lk2/u;.<init>:(II)V` @kind direct;
  #L3a4ff0.  v2.`k2.q.h` @type ^`k2.u` := v3 @kind object;
  #L3a4ff4.  v3:= new `k2.u`;
  #L3a4ff8.  v0:= 34I;
  #L3a4ffc.  call `<init>`(v3, v0, v1) @signature `Lk2/u;.<init>:(II)V` @kind direct;
  #L3a5002.  v2.`k2.q.i` @type ^`k2.u` := v3 @kind object;
  #L3a5006.  v3:= new `k2.u`;
  #L3a500a.  v0:= 39I;
  #L3a500e.  call `<init>`(v3, v0, v1) @signature `Lk2/u;.<init>:(II)V` @kind direct;
  #L3a5014.  v2.`k2.q.j` @type ^`k2.u` := v3 @kind object;
  #L3a5018.  v3:= new `k2.u`;
  #L3a501c.  v0:= 40I;
  #L3a5020.  call `<init>`(v3, v0, v1) @signature `Lk2/u;.<init>:(II)V` @kind direct;
  #L3a5026.  v2.`k2.q.k` @type ^`k2.u` := v3 @kind object;
  #L3a502a.  v0:= -4.9E-324D;
  #L3a5034.  v2.`k2.q.m` @type ^`long` := v0 @kind wide;
  #L3a5038.  v3:= new `s3.z`;
  #L3a503c.  call `<init>`(v3) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L3a5042.  v2.`k2.q.n` @type ^`s3.z` := v3 @kind object;
  #L3a5046.  return @kind void;
}
procedure `void` `b`(`k2.q` v1 @kind this) @signature `Lk2/q;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3a5058.  v0:= v1.`k2.q.c` @type ^`a2.d0` @kind object;
  #L3a505c.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a5062.  v0:= v1.`k2.q.d` @type ^`k2.q$a` @kind object;
  #L3a5066.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a506c.  return @kind void;
}
procedure `void` `g`(`k2.q` v2 @kind this, `long` v3 , `int` v5 , `int` v6 , `long` v7 ) @signature `Lk2/q;.g:(JIIJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3a51b0.  v0:= v2.`k2.q.d` @type ^`k2.q$a` @kind object;
  #L3a51b4.  v1:= v2.`k2.q.e` @type ^`boolean` @kind boolean;
  #L3a51b8.  call `a`(v0, v3, v5, v1) @signature `Lk2/q$a;.a:(JIZ)V` @kind virtual;
  #L3a51be.  v3:= v2.`k2.q.e` @type ^`boolean` @kind boolean;
  #L3a51c2.  if v3 != 0 then goto L3a523c;
  #L3a51c6.  v3:= v2.`k2.q.g` @type ^`k2.u` @kind object;
  #L3a51ca.  call temp:= `b`(v3, v6) @signature `Lk2/u;.b:(I)Z` @kind virtual;
  #L3a51d0.  v3:= v2.`k2.q.h` @type ^`k2.u` @kind object;
  #L3a51d4.  call temp:= `b`(v3, v6) @signature `Lk2/u;.b:(I)Z` @kind virtual;
  #L3a51da.  v3:= v2.`k2.q.i` @type ^`k2.u` @kind object;
  #L3a51de.  call temp:= `b`(v3, v6) @signature `Lk2/u;.b:(I)Z` @kind virtual;
  #L3a51e4.  v3:= v2.`k2.q.g` @type ^`k2.u` @kind object;
  #L3a51e8.  call temp:= `c`(v3) @signature `Lk2/u;.c:()Z` @kind virtual;
  #L3a51ee.  v3:= temp;
  #L3a51f0.  if v3 == 0 then goto L3a523c;
  #L3a51f4.  v3:= v2.`k2.q.h` @type ^`k2.u` @kind object;
  #L3a51f8.  call temp:= `c`(v3) @signature `Lk2/u;.c:()Z` @kind virtual;
  #L3a51fe.  v3:= temp;
  #L3a5200.  if v3 == 0 then goto L3a523c;
  #L3a5204.  v3:= v2.`k2.q.i` @type ^`k2.u` @kind object;
  #L3a5208.  call temp:= `c`(v3) @signature `Lk2/u;.c:()Z` @kind virtual;
  #L3a520e.  v3:= temp;
  #L3a5210.  if v3 == 0 then goto L3a523c;
  #L3a5214.  v3:= v2.`k2.q.c` @type ^`a2.d0` @kind object;
  #L3a5218.  v4:= v2.`k2.q.b` @type ^`java.lang.String` @kind object;
  #L3a521c.  v5:= v2.`k2.q.g` @type ^`k2.u` @kind object;
  #L3a5220.  v0:= v2.`k2.q.h` @type ^`k2.u` @kind object;
  #L3a5224.  v1:= v2.`k2.q.i` @type ^`k2.u` @kind object;
  #L3a5228.  call temp:= `i`(v4, v5, v0, v1) @signature `Lk2/q;.i:(Ljava/lang/String;Lk2/u;Lk2/u;Lk2/u;)Lv1/j1;` @kind static;
  #L3a522e.  v4:= temp @kind object;
  #L3a5230.  call `b`(v3, v4) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L3a5236.  v3:= 1I;
  #L3a5238.  v2.`k2.q.e` @type ^`boolean` := v3 @kind boolean;
  #L3a523c.  v3:= v2.`k2.q.j` @type ^`k2.u` @kind object;
  #L3a5240.  call temp:= `b`(v3, v6) @signature `Lk2/u;.b:(I)Z` @kind virtual;
  #L3a5246.  v3:= temp;
  #L3a5248.  v4:= 5I;
  #L3a524a.  if v3 == 0 then goto L3a528c;
  #L3a524e.  v3:= v2.`k2.q.j` @type ^`k2.u` @kind object;
  #L3a5252.  v5:= v3.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a5256.  v3:= v3.`k2.u.e` @type ^`int`;
  #L3a525a.  call temp:= `q`(v5, v3) @signature `Ls3/v;.q:([BI)I` @kind static;
  #L3a5260.  v3:= temp;
  #L3a5262.  v5:= v2.`k2.q.n` @type ^`s3.z` @kind object;
  #L3a5266.  v0:= v2.`k2.q.j` @type ^`k2.u` @kind object;
  #L3a526a.  v0:= v0.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a526e.  call `M`(v5, v0, v3) @signature `Ls3/z;.M:([BI)V` @kind virtual;
  #L3a5274.  v3:= v2.`k2.q.n` @type ^`s3.z` @kind object;
  #L3a5278.  call `P`(v3, v4) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L3a527e.  v3:= v2.`k2.q.a` @type ^`k2.d0` @kind object;
  #L3a5282.  v5:= v2.`k2.q.n` @type ^`s3.z` @kind object;
  #L3a5286.  call `a`(v3, v7, v5) @signature `Lk2/d0;.a:(JLs3/z;)V` @kind virtual;
  #L3a528c.  v3:= v2.`k2.q.k` @type ^`k2.u` @kind object;
  #L3a5290.  call temp:= `b`(v3, v6) @signature `Lk2/u;.b:(I)Z` @kind virtual;
  #L3a5296.  v3:= temp;
  #L3a5298.  if v3 == 0 then goto L3a52da;
  #L3a529c.  v3:= v2.`k2.q.k` @type ^`k2.u` @kind object;
  #L3a52a0.  v5:= v3.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a52a4.  v3:= v3.`k2.u.e` @type ^`int`;
  #L3a52a8.  call temp:= `q`(v5, v3) @signature `Ls3/v;.q:([BI)I` @kind static;
  #L3a52ae.  v3:= temp;
  #L3a52b0.  v5:= v2.`k2.q.n` @type ^`s3.z` @kind object;
  #L3a52b4.  v6:= v2.`k2.q.k` @type ^`k2.u` @kind object;
  #L3a52b8.  v6:= v6.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a52bc.  call `M`(v5, v6, v3) @signature `Ls3/z;.M:([BI)V` @kind virtual;
  #L3a52c2.  v3:= v2.`k2.q.n` @type ^`s3.z` @kind object;
  #L3a52c6.  call `P`(v3, v4) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L3a52cc.  v3:= v2.`k2.q.a` @type ^`k2.d0` @kind object;
  #L3a52d0.  v4:= v2.`k2.q.n` @type ^`s3.z` @kind object;
  #L3a52d4.  call `a`(v3, v7, v4) @signature `Lk2/d0;.a:(JLs3/z;)V` @kind virtual;
  #L3a52da.  return @kind void;
}
procedure `void` `h`(`k2.q` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lk2/q;.h:([BII)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3a52ec.  v0:= v1.`k2.q.d` @type ^`k2.q$a` @kind object;
  #L3a52f0.  call `e`(v0, v2, v3, v4) @signature `Lk2/q$a;.e:([BII)V` @kind virtual;
  #L3a52f6.  v0:= v1.`k2.q.e` @type ^`boolean` @kind boolean;
  #L3a52fa.  if v0 != 0 then goto L3a531c;
  #L3a52fe.  v0:= v1.`k2.q.g` @type ^`k2.u` @kind object;
  #L3a5302.  call `a`(v0, v2, v3, v4) @signature `Lk2/u;.a:([BII)V` @kind virtual;
  #L3a5308.  v0:= v1.`k2.q.h` @type ^`k2.u` @kind object;
  #L3a530c.  call `a`(v0, v2, v3, v4) @signature `Lk2/u;.a:([BII)V` @kind virtual;
  #L3a5312.  v0:= v1.`k2.q.i` @type ^`k2.u` @kind object;
  #L3a5316.  call `a`(v0, v2, v3, v4) @signature `Lk2/u;.a:([BII)V` @kind virtual;
  #L3a531c.  v0:= v1.`k2.q.j` @type ^`k2.u` @kind object;
  #L3a5320.  call `a`(v0, v2, v3, v4) @signature `Lk2/u;.a:([BII)V` @kind virtual;
  #L3a5326.  v0:= v1.`k2.q.k` @type ^`k2.u` @kind object;
  #L3a532a.  call `a`(v0, v2, v3, v4) @signature `Lk2/u;.a:([BII)V` @kind virtual;
  #L3a5330.  return @kind void;
}
procedure `v1.j1` `i`(`java.lang.String` v21 @kind object, `k2.u` v22 @kind object, `k2.u` v23 @kind object, `k2.u` v24 @kind object) @signature `Lk2/q;.i:(Ljava/lang/String;Lk2/u;Lk2/u;Lk2/u;)Lv1/j1;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L3a4bb0.  v0:= v22 @kind object;
  #L3a4bb4.  v1:= v23 @kind object;
  #L3a4bb8.  v2:= v24 @kind object;
  #L3a4bbc.  v3:= v0.`k2.u.e` @type ^`int`;
  #L3a4bc0.  v4:= v1.`k2.u.e` @type ^`int`;
  #L3a4bc4.  v4:= v4 + v3 @kind int;
  #L3a4bc6.  v5:= v2.`k2.u.e` @type ^`int`;
  #L3a4bca.  v4:= v4 + v5 @kind int;
  #L3a4bcc.  v4:= new `byte`[v4];
  #L3a4bd0.  v5:= v0.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a4bd4.  v6:= 0I;
  #L3a4bd6.  call `arraycopy`(v5, v6, v4, v6, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3a4bdc.  v3:= v1.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a4be0.  v5:= v0.`k2.u.e` @type ^`int`;
  #L3a4be4.  v7:= v1.`k2.u.e` @type ^`int`;
  #L3a4be8.  call `arraycopy`(v3, v6, v4, v5, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3a4bee.  v3:= v2.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a4bf2.  v0:= v0.`k2.u.e` @type ^`int`;
  #L3a4bf6.  v5:= v1.`k2.u.e` @type ^`int`;
  #L3a4bfa.  v0:= v0 + v5 @kind int;
  #L3a4bfc.  v2:= v2.`k2.u.e` @type ^`int`;
  #L3a4c00.  call `arraycopy`(v3, v6, v4, v0, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3a4c06.  v0:= new `s3.a0`;
  #L3a4c0a.  v2:= v1.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a4c0e.  v1:= v1.`k2.u.e` @type ^`int`;
  #L3a4c12.  call `<init>`(v0, v2, v6, v1) @signature `Ls3/a0;.<init>:([BII)V` @kind direct;
  #L3a4c18.  v1:= 44I;
  #L3a4c1c.  call `l`(v0, v1) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L3a4c22.  v1:= 3I;
  #L3a4c24.  call temp:= `e`(v0, v1) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L3a4c2a.  v2:= temp;
  #L3a4c2c.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L3a4c32.  v3:= 2I;
  #L3a4c34.  call temp:= `e`(v0, v3) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L3a4c3a.  v7:= temp;
  #L3a4c3c.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4c42.  v8:= temp;
  #L3a4c44.  v5:= 5I;
  #L3a4c46.  call temp:= `e`(v0, v5) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L3a4c4c.  v9:= temp;
  #L3a4c4e.  v5:= 0I;
  #L3a4c50.  v10:= 0I;
  #L3a4c52.  v11:= 32I;
  #L3a4c56.  v12:= 1I;
  #L3a4c58.  if v5 >= v11 then goto L3a4c74;
  #L3a4c5c.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4c62.  v11:= temp;
  #L3a4c64.  if v11 == 0 then goto L3a4c6e;
  #L3a4c68.  v11:= v12 ^< v5 @kind int;
  #L3a4c6c.  v10:= v10 ^| v11 @kind int;
  #L3a4c6e.  v5:= v5 + 1;
  #L3a4c72.  goto L3a4c52;
  #L3a4c74.  v5:= 6I;
  #L3a4c76.  v11:= new `int`[v5];
  #L3a4c7a.  v13:= 0I;
  #L3a4c7c.  v14:= 8I;
  #L3a4c80.  if v13 >= v5 then goto L3a4c96;
  #L3a4c84.  call temp:= `e`(v0, v14) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L3a4c8a.  v14:= temp;
  #L3a4c8c.  v11[v13]:= v14;
  #L3a4c90.  v13:= v13 + 1;
  #L3a4c94.  goto L3a4c7c;
  #L3a4c96.  call temp:= `e`(v0, v14) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L3a4c9c.  v5:= temp;
  #L3a4c9e.  v13:= 0I;
  #L3a4ca0.  v15:= 0I;
  #L3a4ca2.  if v13 >= v2 then goto L3a4ccc;
  #L3a4ca6.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4cac.  v16:= temp;
  #L3a4cae.  if v16 == 0 then goto L3a4cb6;
  #L3a4cb2.  v15:= v15 + 89;
  #L3a4cb6.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4cbc.  v16:= temp;
  #L3a4cbe.  if v16 == 0 then goto L3a4cc6;
  #L3a4cc2.  v15:= v15 + 8;
  #L3a4cc6.  v13:= v13 + 1;
  #L3a4cca.  goto L3a4ca2;
  #L3a4ccc.  call `l`(v0, v15) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L3a4cd2.  if v2 <= 0 then goto L3a4ce4;
  #L3a4cd6.  v13:= v2 - 8;
  #L3a4cda.  v13:= v13 * 2;
  #L3a4cde.  call `l`(v0, v13) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L3a4ce4.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4cea.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4cf0.  v13:= temp;
  #L3a4cf2.  if v13 != v1 then goto L3a4cfc;
  #L3a4cf6.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L3a4cfc.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4d02.  v1:= temp;
  #L3a4d04.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4d0a.  v15:= temp;
  #L3a4d0c.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4d12.  v16:= temp;
  #L3a4d14.  if v16 == 0 then goto L3a4d6c;
  #L3a4d18.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4d1e.  v16:= temp;
  #L3a4d20.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4d26.  v17:= temp;
  #L3a4d28.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4d2e.  v18:= temp;
  #L3a4d30.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4d36.  v19:= temp;
  #L3a4d38.  if v13 == v12 then goto L3a4d48;
  #L3a4d3c.  if v13 != v3 then goto L3a4d42;
  #L3a4d40.  goto L3a4d48;
  #L3a4d42.  v20:= 1I;
  #L3a4d46.  goto L3a4d4c;
  #L3a4d48.  v20:= 2I;
  #L3a4d4c.  if v13 != v12 then goto L3a4d54;
  #L3a4d50.  v13:= 2I;
  #L3a4d52.  goto L3a4d56;
  #L3a4d54.  v13:= 1I;
  #L3a4d56.  v16:= v16 + v17 @kind int;
  #L3a4d5a.  v20:= v20 * v16 @kind int;
  #L3a4d5e.  v1:= v1 - v20 @kind int;
  #L3a4d62.  v18:= v18 + v19 @kind int;
  #L3a4d66.  v13:= v13 * v18 @kind int;
  #L3a4d6a.  v15:= v15 - v13 @kind int;
  #L3a4d6c.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4d72.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4d78.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4d7e.  v13:= temp;
  #L3a4d80.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4d86.  v16:= temp;
  #L3a4d88.  if v16 == 0 then goto L3a4d92;
  #L3a4d8c.  v16:= 0I;
  #L3a4d90.  goto L3a4d96;
  #L3a4d92.  v16:= v2;
  #L3a4d96.  v6:= v16;
  #L3a4d9a.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4da0.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4da6.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4dac.  if v6 > v2 then goto L3a4db6;
  #L3a4db0.  v6:= v6 + 1;
  #L3a4db4.  goto L3a4d9a;
  #L3a4db6.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4dbc.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4dc2.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4dc8.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4dce.  v2:= temp;
  #L3a4dd0.  if v2 == 0 then goto L3a4de6;
  #L3a4dd4.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4dda.  v2:= temp;
  #L3a4ddc.  if v2 == 0 then goto L3a4de6;
  #L3a4de0.  call `j`(v0) @signature `Lk2/q;.j:(Ls3/a0;)V` @kind static;
  #L3a4de6.  call `l`(v0, v3) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L3a4dec.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4df2.  v2:= temp;
  #L3a4df4.  if v2 == 0 then goto L3a4e10;
  #L3a4df8.  call `l`(v0, v14) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L3a4dfe.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4e04.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4e0a.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L3a4e10.  call `k`(v0) @signature `Lk2/q;.k:(Ls3/a0;)V` @kind static;
  #L3a4e16.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4e1c.  v2:= temp;
  #L3a4e1e.  v6:= 4I;
  #L3a4e20.  if v2 == 0 then goto L3a4e44;
  #L3a4e24.  v2:= 0I;
  #L3a4e26.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4e2c.  v14:= temp;
  #L3a4e2e.  if v2 >= v14 then goto L3a4e44;
  #L3a4e32.  v14:= v13 + 4;
  #L3a4e36.  v14:= v14 + v12 @kind int;
  #L3a4e38.  call `l`(v0, v14) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L3a4e3e.  v2:= v2 + 1;
  #L3a4e42.  goto L3a4e26;
  #L3a4e44.  call `l`(v0, v3) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L3a4e4a.  v2:= 1.0F;
  #L3a4e4e.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4e54.  v3:= temp;
  #L3a4e56.  if v3 == 0 then goto L3a4f42;
  #L3a4e5a.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4e60.  v3:= temp;
  #L3a4e62.  if v3 == 0 then goto L3a4eda;
  #L3a4e66.  v3:= 8I;
  #L3a4e6a.  call temp:= `e`(v0, v3) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L3a4e70.  v3:= temp;
  #L3a4e72.  v12:= 255I;
  #L3a4e76.  if v3 != v12 then goto L3a4e9e;
  #L3a4e7a.  v3:= 16I;
  #L3a4e7e.  call temp:= `e`(v0, v3) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L3a4e84.  v12:= temp;
  #L3a4e86.  call temp:= `e`(v0, v3) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L3a4e8c.  v3:= temp;
  #L3a4e8e.  if v12 == 0 then goto L3a4eda;
  #L3a4e92.  if v3 == 0 then goto L3a4eda;
  #L3a4e96.  v2:= (`float`) v12 @kind i2f;
  #L3a4e98.  v3:= (`float`) v3 @kind i2f;
  #L3a4e9a.  v2:= v2 / v3 @kind float;
  #L3a4e9c.  goto L3a4eda;
  #L3a4e9e.  v12:= `@@s3.v.b` @type ^`float`[] @kind object;
  #L3a4ea2.  v13:= length @variable v12;
  #L3a4ea4.  if v3 >= v13 then goto L3a4eae;
  #L3a4ea8.  v2:= v12[v3];
  #L3a4eac.  goto L3a4eda;
  #L3a4eae.  v12:= new `java.lang.StringBuilder`;
  #L3a4eb2.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a4eb8.  v13:= "Unexpected aspect_ratio_idc value: " @kind object;
  #L3a4ebc.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a4ec2.  call temp:= `append`(v12, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a4ec8.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a4ece.  v3:= temp @kind object;
  #L3a4ed0.  v12:= "H265Reader" @kind object;
  #L3a4ed4.  call `h`(v12, v3) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3a4eda.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4ee0.  v3:= temp;
  #L3a4ee2.  if v3 == 0 then goto L3a4eec;
  #L3a4ee6.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L3a4eec.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4ef2.  v3:= temp;
  #L3a4ef4.  if v3 == 0 then goto L3a4f14;
  #L3a4ef8.  call `l`(v0, v6) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L3a4efe.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4f04.  v3:= temp;
  #L3a4f06.  if v3 == 0 then goto L3a4f14;
  #L3a4f0a.  v3:= 24I;
  #L3a4f0e.  call `l`(v0, v3) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L3a4f14.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4f1a.  v3:= temp;
  #L3a4f1c.  if v3 == 0 then goto L3a4f2c;
  #L3a4f20.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4f26.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a4f2c.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L3a4f32.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a4f38.  v0:= temp;
  #L3a4f3a.  if v0 == 0 then goto L3a4f42;
  #L3a4f3e.  v15:= v15 * 2;
  #L3a4f42.  v12:= v5;
  #L3a4f44.  call temp:= `c`(v7, v8, v9, v10, v11, v12) @signature `Ls3/d;.c:(IZII[II)Ljava/lang/String;` @kind static;
  #L3a4f4a.  v0:= temp @kind object;
  #L3a4f4c.  v3:= new `v1.j1$b`;
  #L3a4f50.  call `<init>`(v3) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L3a4f56.  v5:= v21 @kind object;
  #L3a4f5a.  call temp:= `S`(v3, v5) @signature `Lv1/j1$b;.S:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3a4f60.  v3:= temp @kind object;
  #L3a4f62.  v5:= "video/hevc" @kind object;
  #L3a4f66.  call temp:= `e0`(v3, v5) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3a4f6c.  v3:= temp @kind object;
  #L3a4f6e.  call temp:= `I`(v3, v0) @signature `Lv1/j1$b;.I:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3a4f74.  v0:= temp @kind object;
  #L3a4f76.  call temp:= `j0`(v0, v1) @signature `Lv1/j1$b;.j0:(I)Lv1/j1$b;` @kind virtual;
  #L3a4f7c.  v0:= temp @kind object;
  #L3a4f7e.  call temp:= `Q`(v0, v15) @signature `Lv1/j1$b;.Q:(I)Lv1/j1$b;` @kind virtual;
  #L3a4f84.  v0:= temp @kind object;
  #L3a4f86.  call temp:= `a0`(v0, v2) @signature `Lv1/j1$b;.a0:(F)Lv1/j1$b;` @kind virtual;
  #L3a4f8c.  v0:= temp @kind object;
  #L3a4f8e.  call temp:= `singletonList`(v4) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3a4f94.  v1:= temp @kind object;
  #L3a4f96.  call temp:= `T`(v0, v1) @signature `Lv1/j1$b;.T:(Ljava/util/List;)Lv1/j1$b;` @kind virtual;
  #L3a4f9c.  v0:= temp @kind object;
  #L3a4f9e.  call temp:= `E`(v0) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L3a4fa4.  v0:= temp @kind object;
  #L3a4fa6.  return v0 @kind object;
}
procedure `void` `j`(`s3.a0` v7 @kind object) @signature `Lk2/q;.j:(Ls3/a0;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a53f4.  v0:= 0I;
  #L3a53f6.  v1:= 0I;
  #L3a53f8.  v2:= 4I;
  #L3a53fa.  if v1 >= v2 then goto L3a5460;
  #L3a53fe.  v3:= 0I;
  #L3a5400.  v4:= 6I;
  #L3a5402.  if v3 >= v4 then goto L3a545a;
  #L3a5406.  call temp:= `d`(v7) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a540c.  v4:= temp;
  #L3a540e.  v5:= 1I;
  #L3a5410.  if v4 != 0 then goto L3a541c;
  #L3a5414.  call temp:= `h`(v7) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a541a.  goto L3a544e;
  #L3a541c.  v4:= 64I;
  #L3a5420.  v6:= v1 ^< 1;
  #L3a5424.  v6:= v6 + v2 @kind int;
  #L3a5426.  v6:= v5 ^< v6 @kind int;
  #L3a542a.  call temp:= `min`(v4, v6) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3a5430.  v4:= temp;
  #L3a5432.  if v1 <= v5 then goto L3a543c;
  #L3a5436.  call temp:= `g`(v7) @signature `Ls3/a0;.g:()I` @kind virtual;
  #L3a543c.  v6:= 0I;
  #L3a543e.  if v6 >= v4 then goto L3a544e;
  #L3a5442.  call temp:= `g`(v7) @signature `Ls3/a0;.g:()I` @kind virtual;
  #L3a5448.  v6:= v6 + 1;
  #L3a544c.  goto L3a543e;
  #L3a544e.  v4:= 3I;
  #L3a5450.  if v1 != v4 then goto L3a5456;
  #L3a5454.  v5:= 3I;
  #L3a5456.  v3:= v3 + v5 @kind int;
  #L3a5458.  goto L3a5400;
  #L3a545a.  v1:= v1 + 1;
  #L3a545e.  goto L3a53f8;
  #L3a5460.  return @kind void;
}
procedure `void` `k`(`s3.a0` v8 @kind object) @signature `Lk2/q;.k:(Ls3/a0;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3a5474.  call temp:= `h`(v8) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a547a.  v0:= temp;
  #L3a547c.  v1:= 0I;
  #L3a547e.  v2:= 0I;
  #L3a5480.  v3:= 0I;
  #L3a5482.  v4:= 0I;
  #L3a5484.  if v2 >= v0 then goto L3a550e;
  #L3a5488.  if v2 == 0 then goto L3a5494;
  #L3a548c.  call temp:= `d`(v8) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a5492.  v3:= temp;
  #L3a5494.  if v3 == 0 then goto L3a54c2;
  #L3a5498.  call `k`(v8) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L3a549e.  call temp:= `h`(v8) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a54a4.  v5:= 0I;
  #L3a54a6.  if v5 > v4 then goto L3a5508;
  #L3a54aa.  call temp:= `d`(v8) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L3a54b0.  v6:= temp;
  #L3a54b2.  if v6 == 0 then goto L3a54bc;
  #L3a54b6.  call `k`(v8) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L3a54bc.  v5:= v5 + 1;
  #L3a54c0.  goto L3a54a6;
  #L3a54c2.  call temp:= `h`(v8) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a54c8.  v4:= temp;
  #L3a54ca.  call temp:= `h`(v8) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a54d0.  v5:= temp;
  #L3a54d2.  v6:= v4 + v5 @kind int;
  #L3a54d6.  v7:= 0I;
  #L3a54d8.  if v7 >= v4 then goto L3a54ee;
  #L3a54dc.  call temp:= `h`(v8) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a54e2.  call `k`(v8) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L3a54e8.  v7:= v7 + 1;
  #L3a54ec.  goto L3a54d8;
  #L3a54ee.  v4:= 0I;
  #L3a54f0.  if v4 >= v5 then goto L3a5506;
  #L3a54f4.  call temp:= `h`(v8) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L3a54fa.  call `k`(v8) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L3a5500.  v4:= v4 + 1;
  #L3a5504.  goto L3a54f0;
  #L3a5506.  v4:= v6;
  #L3a5508.  v2:= v2 + 1;
  #L3a550c.  goto L3a5484;
  #L3a550e.  return @kind void;
}
procedure `void` `l`(`k2.q` v8 @kind this, `long` v9 , `int` v11 , `int` v12 , `long` v13 ) @signature `Lk2/q;.l:(JIIJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3a5520.  v0:= v8.`k2.q.d` @type ^`k2.q$a` @kind object;
  #L3a5524.  v7:= v8.`k2.q.e` @type ^`boolean` @kind boolean;
  #L3a5528.  v1:= v9 @kind wide;
  #L3a552a.  v3:= v11;
  #L3a552c.  v4:= v12;
  #L3a552e.  v5:= v13 @kind wide;
  #L3a5530.  call `g`(v0, v1, v3, v4, v5, v7) @signature `Lk2/q$a;.g:(JIIJZ)V` @kind virtual;
  #L3a5536.  v9:= v8.`k2.q.e` @type ^`boolean` @kind boolean;
  #L3a553a.  if v9 != 0 then goto L3a555c;
  #L3a553e.  v9:= v8.`k2.q.g` @type ^`k2.u` @kind object;
  #L3a5542.  call `e`(v9, v12) @signature `Lk2/u;.e:(I)V` @kind virtual;
  #L3a5548.  v9:= v8.`k2.q.h` @type ^`k2.u` @kind object;
  #L3a554c.  call `e`(v9, v12) @signature `Lk2/u;.e:(I)V` @kind virtual;
  #L3a5552.  v9:= v8.`k2.q.i` @type ^`k2.u` @kind object;
  #L3a5556.  call `e`(v9, v12) @signature `Lk2/u;.e:(I)V` @kind virtual;
  #L3a555c.  v9:= v8.`k2.q.j` @type ^`k2.u` @kind object;
  #L3a5560.  call `e`(v9, v12) @signature `Lk2/u;.e:(I)V` @kind virtual;
  #L3a5566.  v9:= v8.`k2.q.k` @type ^`k2.u` @kind object;
  #L3a556a.  call `e`(v9, v12) @signature `Lk2/u;.e:(I)V` @kind virtual;
  #L3a5570.  return @kind void;
}
procedure `void` `a`(`k2.q` v2 @kind this) @signature `Lk2/q;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a5380.  v0:= 0L;
  #L3a5384.  v2.`k2.q.l` @type ^`long` := v0 @kind wide;
  #L3a5388.  v0:= -4.9E-324D;
  #L3a5392.  v2.`k2.q.m` @type ^`long` := v0 @kind wide;
  #L3a5396.  v0:= v2.`k2.q.f` @type ^`boolean`[] @kind object;
  #L3a539a.  call `a`(v0) @signature `Ls3/v;.a:([Z)V` @kind static;
  #L3a53a0.  v0:= v2.`k2.q.g` @type ^`k2.u` @kind object;
  #L3a53a4.  call `d`(v0) @signature `Lk2/u;.d:()V` @kind virtual;
  #L3a53aa.  v0:= v2.`k2.q.h` @type ^`k2.u` @kind object;
  #L3a53ae.  call `d`(v0) @signature `Lk2/u;.d:()V` @kind virtual;
  #L3a53b4.  v0:= v2.`k2.q.i` @type ^`k2.u` @kind object;
  #L3a53b8.  call `d`(v0) @signature `Lk2/u;.d:()V` @kind virtual;
  #L3a53be.  v0:= v2.`k2.q.j` @type ^`k2.u` @kind object;
  #L3a53c2.  call `d`(v0) @signature `Lk2/u;.d:()V` @kind virtual;
  #L3a53c8.  v0:= v2.`k2.q.k` @type ^`k2.u` @kind object;
  #L3a53cc.  call `d`(v0) @signature `Lk2/u;.d:()V` @kind virtual;
  #L3a53d2.  v0:= v2.`k2.q.d` @type ^`k2.q$a` @kind object;
  #L3a53d6.  if v0 == 0 then goto L3a53e0;
  #L3a53da.  call `f`(v0) @signature `Lk2/q$a;.f:()V` @kind virtual;
  #L3a53e0.  return @kind void;
}
procedure `void` `c`(`k2.q` v16 @kind this, `s3.z` v17 @kind object) @signature `Lk2/q;.c:(Ls3/z;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3a5080.  v7:= v16 @kind object;
  #L3a5084.  call `b`(v16) @signature `Lk2/q;.b:()V` @kind direct;
  #L3a508a.  call temp:= `a`(v17) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a5090.  v0:= temp;
  #L3a5092.  if v0 <= 0 then goto L3a514a;
  #L3a5096.  call temp:= `e`(v17) @signature `Ls3/z;.e:()I` @kind virtual;
  #L3a509c.  v0:= temp;
  #L3a509e.  call temp:= `f`(v17) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3a50a4.  v8:= temp;
  #L3a50a6.  call temp:= `d`(v17) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a50ac.  v9:= temp @kind object;
  #L3a50ae.  v1:= v7.`k2.q.l` @type ^`long` @kind wide;
  #L3a50b2.  call temp:= `a`(v17) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a50b8.  v3:= temp;
  #L3a50ba.  v3:= (`long`) v3 @kind i2l;
  #L3a50bc.  v1:= v1 + v3 @kind long;
  #L3a50be.  v7.`k2.q.l` @type ^`long` := v1 @kind wide;
  #L3a50c2.  v1:= v7.`k2.q.c` @type ^`a2.d0` @kind object;
  #L3a50c6.  call temp:= `a`(v17) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a50cc.  v2:= temp;
  #L3a50ce.  v10:= v17 @kind object;
  #L3a50d2.  call `c`(v1, v10, v2) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L3a50d8.  if v0 >= v8 then goto L3a508a;
  #L3a50dc.  v1:= v7.`k2.q.f` @type ^`boolean`[] @kind object;
  #L3a50e0.  call temp:= `c`(v9, v0, v8, v1) @signature `Ls3/v;.c:([BII[Z)I` @kind static;
  #L3a50e6.  v11:= temp;
  #L3a50e8.  if v11 != v8 then goto L3a50f4;
  #L3a50ec.  call `h`(v7, v9, v0, v8) @signature `Lk2/q;.h:([BII)V` @kind direct;
  #L3a50f2.  return @kind void;
  #L3a50f4.  call temp:= `e`(v9, v11) @signature `Ls3/v;.e:([BI)I` @kind static;
  #L3a50fa.  v12:= temp;
  #L3a50fc.  v1:= v11 - v0 @kind int;
  #L3a5100.  if v1 <= 0 then goto L3a510a;
  #L3a5104.  call `h`(v7, v9, v0, v11) @signature `Lk2/q;.h:([BII)V` @kind direct;
  #L3a510a.  v13:= v8 - v11 @kind int;
  #L3a510e.  v2:= v7.`k2.q.l` @type ^`long` @kind wide;
  #L3a5112.  v4:= (`long`) v13 @kind i2l;
  #L3a5114.  v14:= v2 - v4 @kind long;
  #L3a5118.  if v1 >= 0 then goto L3a5122;
  #L3a511c.  v0:= -v1 @kind int;
  #L3a511e.  v4:= v0;
  #L3a5120.  goto L3a5126;
  #L3a5122.  v0:= 0I;
  #L3a5124.  v4:= 0I;
  #L3a5126.  v5:= v7.`k2.q.m` @type ^`long` @kind wide;
  #L3a512a.  v0:= v16 @kind object;
  #L3a512e.  v1:= v14 @kind wide;
  #L3a5130.  v3:= v13;
  #L3a5132.  call `g`(v0, v1, v3, v4, v5) @signature `Lk2/q;.g:(JIIJ)V` @kind direct;
  #L3a5138.  v5:= v7.`k2.q.m` @type ^`long` @kind wide;
  #L3a513c.  v4:= v12;
  #L3a513e.  call `l`(v0, v1, v3, v4, v5) @signature `Lk2/q;.l:(JIIJ)V` @kind direct;
  #L3a5144.  v0:= v11 + 3;
  #L3a5148.  goto L3a50d8;
  #L3a514a.  return @kind void;
}
procedure `void` `d`(`k2.q` v2 @kind this, `a2.n` v3 @kind object, `k2.i0$d` v4 @kind object) @signature `Lk2/q;.d:(La2/n;Lk2/i0$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a515c.  call `a`(v4) @signature `Lk2/i0$d;.a:()V` @kind virtual;
  #L3a5162.  call temp:= `b`(v4) @signature `Lk2/i0$d;.b:()Ljava/lang/String;` @kind virtual;
  #L3a5168.  v0:= temp @kind object;
  #L3a516a.  v2.`k2.q.b` @type ^`java.lang.String` := v0 @kind object;
  #L3a516e.  call temp:= `c`(v4) @signature `Lk2/i0$d;.c:()I` @kind virtual;
  #L3a5174.  v0:= temp;
  #L3a5176.  v1:= 2I;
  #L3a5178.  call temp:= `e`(v3, v0, v1) @signature `La2/n;.e:(II)La2/d0;` @kind interface;
  #L3a517e.  v0:= temp @kind object;
  #L3a5180.  v2.`k2.q.c` @type ^`a2.d0` := v0 @kind object;
  #L3a5184.  v1:= new `k2.q$a`;
  #L3a5188.  call `<init>`(v1, v0) @signature `Lk2/q$a;.<init>:(La2/d0;)V` @kind direct;
  #L3a518e.  v2.`k2.q.d` @type ^`k2.q$a` := v1 @kind object;
  #L3a5192.  v0:= v2.`k2.q.a` @type ^`k2.d0` @kind object;
  #L3a5196.  call `b`(v0, v3, v4) @signature `Lk2/d0;.b:(La2/n;Lk2/i0$d;)V` @kind virtual;
  #L3a519c.  return @kind void;
}
procedure `void` `e`(`k2.q` v0 @kind this) @signature `Lk2/q;.e:()V` @AccessFlag PUBLIC {
    temp;

  #L3a5344.  return @kind void;
}
procedure `void` `f`(`k2.q` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lk2/q;.f:(JI)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a5358.  v0:= -4.9E-324D;
  #L3a5362.  v5:= lcmp(v3, v0);
  #L3a5366.  if v5 == 0 then goto L3a536e;
  #L3a536a.  v2.`k2.q.m` @type ^`long` := v3 @kind wide;
  #L3a536e.  return @kind void;
}
