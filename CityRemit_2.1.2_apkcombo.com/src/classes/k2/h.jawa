record `k2.h` @kind class @AccessFlag PUBLIC_FINAL extends `a2.l` @kind interface {
  `int` `k2.h.a` @AccessFlag PRIVATE_FINAL;
  `k2.i` `k2.h.b` @AccessFlag PRIVATE_FINAL;
  `s3.z` `k2.h.c` @AccessFlag PRIVATE_FINAL;
  `s3.z` `k2.h.d` @AccessFlag PRIVATE_FINAL;
  `s3.y` `k2.h.e` @AccessFlag PRIVATE_FINAL;
  `a2.n` `k2.h.f` @AccessFlag PRIVATE;
  `long` `k2.h.g` @AccessFlag PRIVATE;
  `long` `k2.h.h` @AccessFlag PRIVATE;
  `int` `k2.h.i` @AccessFlag PRIVATE;
  `boolean` `k2.h.j` @AccessFlag PRIVATE;
  `boolean` `k2.h.k` @AccessFlag PRIVATE;
  `boolean` `k2.h.l` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Lk2/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a15b4.  v0:= `@@k2.g.b` @type ^`k2.g` @kind object;
  #L3a15b8.  return @kind void;
}
procedure `void` `<init>`(`k2.h` v1 @kind this) @signature `Lk2/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a15cc.  v0:= 0I;
  #L3a15ce.  call `<init>`(v1, v0) @signature `Lk2/h;.<init>:(I)V` @kind direct;
  #L3a15d4.  return @kind void;
}
procedure `void` `<init>`(`k2.h` v2 @kind this, `int` v3 ) @signature `Lk2/h;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a15e8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a15ee.  v0:= v3 ^& 2;
  #L3a15f2.  if v0 == 0 then goto L3a15fa;
  #L3a15f6.  v3:= v3 ^| 1;
  #L3a15fa.  v2.`k2.h.a` @type ^`int` := v3;
  #L3a15fe.  v3:= new `k2.i`;
  #L3a1602.  v0:= 1I;
  #L3a1604.  call `<init>`(v3, v0) @signature `Lk2/i;.<init>:(Z)V` @kind direct;
  #L3a160a.  v2.`k2.h.b` @type ^`k2.i` := v3 @kind object;
  #L3a160e.  v3:= new `s3.z`;
  #L3a1612.  v0:= 2048I;
  #L3a1616.  call `<init>`(v3, v0) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L3a161c.  v2.`k2.h.c` @type ^`s3.z` := v3 @kind object;
  #L3a1620.  v3:= -1I;
  #L3a1622.  v2.`k2.h.i` @type ^`int` := v3;
  #L3a1626.  v0:= -1L;
  #L3a162a.  v2.`k2.h.h` @type ^`long` := v0 @kind wide;
  #L3a162e.  v3:= new `s3.z`;
  #L3a1632.  v0:= 10I;
  #L3a1636.  call `<init>`(v3, v0) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L3a163c.  v2.`k2.h.d` @type ^`s3.z` := v3 @kind object;
  #L3a1640.  v0:= new `s3.y`;
  #L3a1644.  call temp:= `d`(v3) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a164a.  v3:= temp @kind object;
  #L3a164c.  call `<init>`(v0, v3) @signature `Ls3/y;.<init>:([B)V` @kind direct;
  #L3a1652.  v2.`k2.h.e` @type ^`s3.y` := v0 @kind object;
  #L3a1656.  return @kind void;
}
procedure `a2.l`[] `c`() @signature `Lk2/h;.c:()[La2/l;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L3a12d0.  call temp:= `i`() @signature `Lk2/h;.i:()[La2/l;` @kind static;
  #L3a12d6.  v0:= temp @kind object;
  #L3a12d8.  return v0 @kind object;
}
procedure `void` `e`(`k2.h` v9 @kind this, `a2.m` v10 @kind object) @signature `Lk2/h;.e:(La2/m;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3a1668.  v0:= v9.`k2.h.j` @type ^`boolean` @kind boolean;
  #L3a166c.  if v0 == 0 then goto L3a1672;
  #L3a1670.  return @kind void;
  #L3a1672.  v0:= -1I;
  #L3a1674.  v9.`k2.h.i` @type ^`int` := v0;
  #L3a1678.  call `i`(v10) @signature `La2/m;.i:()V` @kind interface;
  #L3a167e.  call temp:= `q`(v10) @signature `La2/m;.q:()J` @kind interface;
  #L3a1684.  v1:= temp @kind wide;
  #L3a1686.  v3:= 0L;
  #L3a168a.  v5:= lcmp(v1, v3);
  #L3a168e.  if v5 != 0 then goto L3a1698;
  #L3a1692.  call temp:= `l`(v9, v10) @signature `Lk2/h;.l:(La2/m;)I` @kind direct;
  #L3a1698.  v1:= 0I;
  #L3a169a.  v2:= 0I;
  #L3a169c.  v5:= 1I;
  #L3a169e.  v6:= v9.`k2.h.d` @type ^`s3.z` @kind object;
  #L3a16a2.  call temp:= `d`(v6) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a16a8.  v6:= temp @kind object;
  #L3a16aa.  v7:= 2I;
  #L3a16ac.  call temp:= `m`(v10, v6, v1, v7, v5) @signature `La2/m;.m:([BIIZ)Z` @kind interface;
  #L3a16b2.  v6:= temp;
  #L3a16b4.  if v6 == 0 then goto L3a1754;
  #L3a16b8.  v6:= v9.`k2.h.d` @type ^`s3.z` @kind object;
  #L3a16bc.  call `O`(v6, v1) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a16c2.  v6:= v9.`k2.h.d` @type ^`s3.z` @kind object;
  #L3a16c6.  call temp:= `I`(v6) @signature `Ls3/z;.I:()I` @kind virtual;
  #L3a16cc.  v6:= temp;
  #L3a16ce.  call temp:= `m`(v6) @signature `Lk2/i;.m:(I)Z` @kind static;
  #L3a16d4.  v6:= temp;
  #L3a16d6.  if v6 != 0 then goto L3a16dc;
  #L3a16da.  goto L3a1756;
  #L3a16dc.  v6:= v9.`k2.h.d` @type ^`s3.z` @kind object;
  #L3a16e0.  call temp:= `d`(v6) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a16e6.  v6:= temp @kind object;
  #L3a16e8.  v7:= 4I;
  #L3a16ea.  call temp:= `m`(v10, v6, v1, v7, v5) @signature `La2/m;.m:([BIIZ)Z` @kind interface;
  #L3a16f0.  v6:= temp;
  #L3a16f2.  if v6 != 0 then goto L3a16f8;
  #L3a16f6.  goto L3a1754;
  #L3a16f8.  v6:= v9.`k2.h.e` @type ^`s3.y` @kind object;
  #L3a16fc.  v7:= 14I;
  #L3a1700.  call `p`(v6, v7) @signature `Ls3/y;.p:(I)V` @kind virtual;
  #L3a1706.  v6:= v9.`k2.h.e` @type ^`s3.y` @kind object;
  #L3a170a.  v7:= 13I;
  #L3a170e.  call temp:= `h`(v6, v7) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a1714.  v6:= temp;
  #L3a1716.  v7:= 6I;
  #L3a1718.  if v6 <= v7 then goto L3a1740;
  #L3a171c.  v7:= (`long`) v6 @kind i2l;
  #L3a171e.  v3:= v3 + v7 @kind long;
  #L3a1720.  v2:= v2 + 1;
  #L3a1724.  v7:= 1000I;
  #L3a1728.  if v2 != v7 then goto L3a172e;
  #L3a172c.  goto L3a173e;
  #L3a172e.  v6:= v6 + -6;
  #L3a1732.  call temp:= `k`(v10, v6, v5) @signature `La2/m;.k:(IZ)Z` @kind interface;
  #L3a1738.  v6:= temp;
  #L3a173a.  if v6 != 0 then goto L3a169c;
  #L3a173e.  goto L3a1754;
  #L3a1740.  v9.`k2.h.j` @type ^`boolean` := v5 @kind boolean;
  #L3a1744.  v1:= "Malformed ADTS stream" @kind object;
  #L3a1748.  v6:= 0I;
  #L3a174a.  call temp:= `a`(v1, v6) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L3a1750.  v1:= temp @kind object;
  #L3a1752.  throw v1;
  #L3a1754.  v1:= v2;
  #L3a1756.  call `i`(v10) @signature `La2/m;.i:()V` @kind interface;
  #L3a175c.  if v1 <= 0 then goto L3a176c;
  #L3a1760.  v0:= (`long`) v1 @kind i2l;
  #L3a1762.  v3:= v3 / v0 @kind long;
  #L3a1764.  v10:= (`int`) v3 @kind l2i;
  #L3a1766.  v9.`k2.h.i` @type ^`int` := v10;
  #L3a176a.  goto L3a1770;
  #L3a176c.  v9.`k2.h.i` @type ^`int` := v0;
  #L3a1770.  v9.`k2.h.j` @type ^`boolean` := v5 @kind boolean;
  #L3a1774.  return @kind void;
  catch `java.io.EOFException` @[L3a169e..L3a1754] goto L3a1754;
}
procedure `int` `f`(`int` v4 , `long` v5 ) @signature `Lk2/h;.f:(IJ)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a142c.  v0:= (`long`) v4 @kind i2l;
  #L3a142e.  v2:= 8L;
  #L3a1432.  v0:= v0 * v2 @kind long;
  #L3a1436.  v2:= 1000000L;
  #L3a143c.  v0:= v0 * v2 @kind long;
  #L3a1440.  v0:= v0 / v5 @kind long;
  #L3a1442.  v4:= (`int`) v0 @kind l2i;
  #L3a1444.  return v4;
}
procedure `a2.a0` `h`(`k2.h` v11 @kind this, `long` v12 , `boolean` v14 ) @signature `Lk2/h;.h:(JZ)La2/a0;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3a1314.  v0:= v11.`k2.h.i` @type ^`int`;
  #L3a1318.  v1:= v11.`k2.h.b` @type ^`k2.i` @kind object;
  #L3a131c.  call temp:= `k`(v1) @signature `Lk2/i;.k:()J` @kind virtual;
  #L3a1322.  v1:= temp @kind wide;
  #L3a1324.  call temp:= `f`(v0, v1) @signature `Lk2/h;.f:(IJ)I` @kind static;
  #L3a132a.  v8:= temp;
  #L3a132c.  v0:= new `a2.e`;
  #L3a1330.  v6:= v11.`k2.h.h` @type ^`long` @kind wide;
  #L3a1334.  v9:= v11.`k2.h.i` @type ^`int`;
  #L3a1338.  v3:= v0 @kind object;
  #L3a133a.  v4:= v12 @kind wide;
  #L3a133c.  v10:= v14;
  #L3a133e.  call `<init>`(v3, v4, v6, v8, v9, v10) @signature `La2/e;.<init>:(JJIIZ)V` @kind direct;
  #L3a1344.  return v0 @kind object;
}
procedure `a2.l`[] `i`() @signature `Lk2/h;.i:()[La2/l;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L3a12ec.  v0:= 1I;
  #L3a12ee.  v0:= new `a2.l`[v0];
  #L3a12f2.  v1:= new `k2.h`;
  #L3a12f6.  call `<init>`(v1) @signature `Lk2/h;.<init>:()V` @kind direct;
  #L3a12fc.  v2:= 0I;
  #L3a12fe.  v0[v2]:= v1 @kind object;
  #L3a1302.  return v0 @kind object;
}
procedure `void` `k`(`k2.h` v8 @kind this, `long` v9 , `boolean` v11 ) @signature `Lk2/h;.k:(JZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3a17cc.  v0:= v8.`k2.h.l` @type ^`boolean` @kind boolean;
  #L3a17d0.  if v0 == 0 then goto L3a17d6;
  #L3a17d4.  return @kind void;
  #L3a17d6.  v0:= v8.`k2.h.a` @type ^`int`;
  #L3a17da.  v1:= 1I;
  #L3a17dc.  v0:= v0 ^& v1 @kind int;
  #L3a17de.  v2:= 0I;
  #L3a17e0.  if v0 == 0 then goto L3a17f0;
  #L3a17e4.  v0:= v8.`k2.h.i` @type ^`int`;
  #L3a17e8.  if v0 <= 0 then goto L3a17f0;
  #L3a17ec.  v0:= 1I;
  #L3a17ee.  goto L3a17f2;
  #L3a17f0.  v0:= 0I;
  #L3a17f2.  v3:= -4.9E-324D;
  #L3a17fc.  if v0 == 0 then goto L3a181a;
  #L3a1800.  v5:= v8.`k2.h.b` @type ^`k2.i` @kind object;
  #L3a1804.  call temp:= `k`(v5) @signature `Lk2/i;.k:()J` @kind virtual;
  #L3a180a.  v5:= temp @kind wide;
  #L3a180c.  v7:= lcmp(v5, v3);
  #L3a1810.  if v7 != 0 then goto L3a181a;
  #L3a1814.  if v11 != 0 then goto L3a181a;
  #L3a1818.  return @kind void;
  #L3a181a.  if v0 == 0 then goto L3a1854;
  #L3a181e.  v11:= v8.`k2.h.b` @type ^`k2.i` @kind object;
  #L3a1822.  call temp:= `k`(v11) @signature `Lk2/i;.k:()J` @kind virtual;
  #L3a1828.  v5:= temp @kind wide;
  #L3a182a.  v11:= lcmp(v5, v3);
  #L3a182e.  if v11 == 0 then goto L3a1854;
  #L3a1832.  v11:= v8.`k2.h.f` @type ^`a2.n` @kind object;
  #L3a1836.  v0:= v8.`k2.h.a` @type ^`int`;
  #L3a183a.  v0:= v0 ^& 2;
  #L3a183e.  if v0 == 0 then goto L3a1844;
  #L3a1842.  v2:= 1I;
  #L3a1844.  call temp:= `h`(v8, v9, v2) @signature `Lk2/h;.h:(JZ)La2/a0;` @kind direct;
  #L3a184a.  v9:= temp @kind object;
  #L3a184c.  call `m`(v11, v9) @signature `La2/n;.m:(La2/a0;)V` @kind interface;
  #L3a1852.  goto L3a1868;
  #L3a1854.  v9:= v8.`k2.h.f` @type ^`a2.n` @kind object;
  #L3a1858.  v10:= new `a2.a0$b`;
  #L3a185c.  call `<init>`(v10, v3) @signature `La2/a0$b;.<init>:(J)V` @kind direct;
  #L3a1862.  call `m`(v9, v10) @signature `La2/n;.m:(La2/a0;)V` @kind interface;
  #L3a1868.  v8.`k2.h.l` @type ^`boolean` := v1 @kind boolean;
  #L3a186c.  return @kind void;
}
procedure `int` `l`(`k2.h` v6 @kind this, `a2.m` v7 @kind object) @signature `Lk2/h;.l:(La2/m;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a1458.  v0:= 0I;
  #L3a145a.  v1:= 0I;
  #L3a145c.  v2:= v6.`k2.h.d` @type ^`s3.z` @kind object;
  #L3a1460.  call temp:= `d`(v2) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a1466.  v2:= temp @kind object;
  #L3a1468.  v3:= 10I;
  #L3a146c.  call `o`(v7, v2, v0, v3) @signature `La2/m;.o:([BII)V` @kind interface;
  #L3a1472.  v2:= v6.`k2.h.d` @type ^`s3.z` @kind object;
  #L3a1476.  call `O`(v2, v0) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a147c.  v2:= v6.`k2.h.d` @type ^`s3.z` @kind object;
  #L3a1480.  call temp:= `F`(v2) @signature `Ls3/z;.F:()I` @kind virtual;
  #L3a1486.  v2:= temp;
  #L3a1488.  v3:= 4801587I;
  #L3a148e.  if v2 == v3 then goto L3a14b6;
  #L3a1492.  call `i`(v7) @signature `La2/m;.i:()V` @kind interface;
  #L3a1498.  call `p`(v7, v1) @signature `La2/m;.p:(I)V` @kind interface;
  #L3a149e.  v2:= v6.`k2.h.h` @type ^`long` @kind wide;
  #L3a14a2.  v4:= -1L;
  #L3a14a6.  v7:= lcmp(v2, v4);
  #L3a14aa.  if v7 != 0 then goto L3a14b4;
  #L3a14ae.  v2:= (`long`) v1 @kind i2l;
  #L3a14b0.  v6.`k2.h.h` @type ^`long` := v2 @kind wide;
  #L3a14b4.  return v1;
  #L3a14b6.  v2:= v6.`k2.h.d` @type ^`s3.z` @kind object;
  #L3a14ba.  v3:= 3I;
  #L3a14bc.  call `P`(v2, v3) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L3a14c2.  v2:= v6.`k2.h.d` @type ^`s3.z` @kind object;
  #L3a14c6.  call temp:= `B`(v2) @signature `Ls3/z;.B:()I` @kind virtual;
  #L3a14cc.  v2:= temp;
  #L3a14ce.  v3:= v2 + 10;
  #L3a14d2.  v1:= v1 + v3 @kind int;
  #L3a14d4.  call `p`(v7, v2) @signature `La2/m;.p:(I)V` @kind interface;
  #L3a14da.  goto L3a145c;
}
procedure `void` `a`(`k2.h` v0 @kind this) @signature `Lk2/h;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L3a1880.  return @kind void;
}
procedure `void` `b`(`k2.h` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lk2/h;.b:(JJ)V` @AccessFlag PUBLIC {
    temp;

  #L3a1894.  v1:= 0I;
  #L3a1896.  v0.`k2.h.k` @type ^`boolean` := v1 @kind boolean;
  #L3a189a.  v1:= v0.`k2.h.b` @type ^`k2.i` @kind object;
  #L3a189e.  call `a`(v1) @signature `Lk2/i;.a:()V` @kind virtual;
  #L3a18a4.  v0.`k2.h.g` @type ^`long` := v3 @kind wide;
  #L3a18a8.  return @kind void;
}
procedure `void` `d`(`k2.h` v4 @kind this, `a2.n` v5 @kind object) @signature `Lk2/h;.d:(La2/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a1798.  v4.`k2.h.f` @type ^`a2.n` := v5 @kind object;
  #L3a179c.  v0:= v4.`k2.h.b` @type ^`k2.i` @kind object;
  #L3a17a0.  v1:= new `k2.i0$d`;
  #L3a17a4.  v2:= 0I;
  #L3a17a6.  v3:= 1I;
  #L3a17a8.  call `<init>`(v1, v2, v3) @signature `Lk2/i0$d;.<init>:(II)V` @kind direct;
  #L3a17ae.  call `d`(v0, v5, v1) @signature `Lk2/i;.d:(La2/n;Lk2/i0$d;)V` @kind virtual;
  #L3a17b4.  call `h`(v5) @signature `La2/n;.h:()V` @kind interface;
  #L3a17ba.  return @kind void;
}
procedure `boolean` `g`(`k2.h` v8 @kind this, `a2.m` v9 @kind object) @signature `Lk2/h;.g:(La2/m;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3a1358.  call temp:= `l`(v8, v9) @signature `Lk2/h;.l:(La2/m;)I` @kind direct;
  #L3a135e.  v0:= temp;
  #L3a1360.  v1:= 0I;
  #L3a1362.  v3:= v0;
  #L3a1364.  v2:= 0I;
  #L3a1366.  v4:= 0I;
  #L3a1368.  v5:= v8.`k2.h.d` @type ^`s3.z` @kind object;
  #L3a136c.  call temp:= `d`(v5) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a1372.  v5:= temp @kind object;
  #L3a1374.  v6:= 2I;
  #L3a1376.  call `o`(v9, v5, v1, v6) @signature `La2/m;.o:([BII)V` @kind interface;
  #L3a137c.  v5:= v8.`k2.h.d` @type ^`s3.z` @kind object;
  #L3a1380.  call `O`(v5, v1) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a1386.  v5:= v8.`k2.h.d` @type ^`s3.z` @kind object;
  #L3a138a.  call temp:= `I`(v5) @signature `Ls3/z;.I:()I` @kind virtual;
  #L3a1390.  v5:= temp;
  #L3a1392.  call temp:= `m`(v5) @signature `Lk2/i;.m:(I)Z` @kind static;
  #L3a1398.  v5:= temp;
  #L3a139a.  if v5 != 0 then goto L3a13b4;
  #L3a139e.  v3:= v3 + 1;
  #L3a13a2.  call `i`(v9) @signature `La2/m;.i:()V` @kind interface;
  #L3a13a8.  call `p`(v9, v3) @signature `La2/m;.p:(I)V` @kind interface;
  #L3a13ae.  v2:= 0I;
  #L3a13b0.  v4:= 0I;
  #L3a13b2.  goto L3a140c;
  #L3a13b4.  v5:= 1I;
  #L3a13b6.  v2:= v2 + v5 @kind int;
  #L3a13b8.  v6:= 4I;
  #L3a13ba.  if v2 < v6 then goto L3a13c8;
  #L3a13be.  v7:= 188I;
  #L3a13c2.  if v4 <= v7 then goto L3a13c8;
  #L3a13c6.  return v5;
  #L3a13c8.  v5:= v8.`k2.h.d` @type ^`s3.z` @kind object;
  #L3a13cc.  call temp:= `d`(v5) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a13d2.  v5:= temp @kind object;
  #L3a13d4.  call `o`(v9, v5, v1, v6) @signature `La2/m;.o:([BII)V` @kind interface;
  #L3a13da.  v5:= v8.`k2.h.e` @type ^`s3.y` @kind object;
  #L3a13de.  v6:= 14I;
  #L3a13e2.  call `p`(v5, v6) @signature `Ls3/y;.p:(I)V` @kind virtual;
  #L3a13e8.  v5:= v8.`k2.h.e` @type ^`s3.y` @kind object;
  #L3a13ec.  v6:= 13I;
  #L3a13f0.  call temp:= `h`(v5, v6) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a13f6.  v5:= temp;
  #L3a13f8.  v6:= 6I;
  #L3a13fa.  if v5 > v6 then goto L3a1400;
  #L3a13fe.  goto L3a139e;
  #L3a1400.  v6:= v5 + -6;
  #L3a1404.  call `p`(v9, v6) @signature `La2/m;.p:(I)V` @kind interface;
  #L3a140a.  v4:= v4 + v5 @kind int;
  #L3a140c.  v5:= v3 - v0 @kind int;
  #L3a1410.  v6:= 8192I;
  #L3a1414.  if v5 < v6 then goto L3a1368;
  #L3a1418.  return v1;
}
procedure `int` `j`(`k2.h` v7 @kind this, `a2.m` v8 @kind object, `a2.z` v9 @kind object) @signature `Lk2/h;.j:(La2/m;La2/z;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a14ec.  v9:= v7.`k2.h.f` @type ^`a2.n` @kind object;
  #L3a14f0.  call temp:= `h`(v9) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a14f6.  call temp:= `a`(v8) @signature `La2/m;.a:()J` @kind interface;
  #L3a14fc.  v0:= temp @kind wide;
  #L3a14fe.  v9:= v7.`k2.h.a` @type ^`int`;
  #L3a1502.  v2:= v9 ^& 2;
  #L3a1506.  v3:= 1I;
  #L3a1508.  v4:= 0I;
  #L3a150a.  if v2 != 0 then goto L3a1526;
  #L3a150e.  v9:= v9 ^& v3 @kind int;
  #L3a1510.  if v9 == 0 then goto L3a1522;
  #L3a1514.  v5:= -1L;
  #L3a1518.  v9:= lcmp(v0, v5);
  #L3a151c.  if v9 == 0 then goto L3a1522;
  #L3a1520.  goto L3a1526;
  #L3a1522.  v9:= 0I;
  #L3a1524.  goto L3a1528;
  #L3a1526.  v9:= 1I;
  #L3a1528.  if v9 == 0 then goto L3a1532;
  #L3a152c.  call `e`(v7, v8) @signature `Lk2/h;.e:(La2/m;)V` @kind direct;
  #L3a1532.  v9:= v7.`k2.h.c` @type ^`s3.z` @kind object;
  #L3a1536.  call temp:= `d`(v9) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a153c.  v9:= temp @kind object;
  #L3a153e.  v2:= 2048I;
  #L3a1542.  call temp:= `b`(v8, v9, v4, v2) @signature `La2/m;.b:([BII)I` @kind interface;
  #L3a1548.  v8:= temp;
  #L3a154a.  v9:= -1I;
  #L3a154c.  if v8 != v9 then goto L3a1554;
  #L3a1550.  v2:= 1I;
  #L3a1552.  goto L3a1556;
  #L3a1554.  v2:= 0I;
  #L3a1556.  call `k`(v7, v0, v2) @signature `Lk2/h;.k:(JZ)V` @kind direct;
  #L3a155c.  if v2 == 0 then goto L3a1562;
  #L3a1560.  return v9;
  #L3a1562.  v9:= v7.`k2.h.c` @type ^`s3.z` @kind object;
  #L3a1566.  call `O`(v9, v4) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a156c.  v9:= v7.`k2.h.c` @type ^`s3.z` @kind object;
  #L3a1570.  call `N`(v9, v8) @signature `Ls3/z;.N:(I)V` @kind virtual;
  #L3a1576.  v8:= v7.`k2.h.k` @type ^`boolean` @kind boolean;
  #L3a157a.  if v8 != 0 then goto L3a1592;
  #L3a157e.  v8:= v7.`k2.h.b` @type ^`k2.i` @kind object;
  #L3a1582.  v0:= v7.`k2.h.g` @type ^`long` @kind wide;
  #L3a1586.  v9:= 4I;
  #L3a1588.  call `f`(v8, v0, v9) @signature `Lk2/i;.f:(JI)V` @kind virtual;
  #L3a158e.  v7.`k2.h.k` @type ^`boolean` := v3 @kind boolean;
  #L3a1592.  v8:= v7.`k2.h.b` @type ^`k2.i` @kind object;
  #L3a1596.  v9:= v7.`k2.h.c` @type ^`s3.z` @kind object;
  #L3a159a.  call `c`(v8, v9) @signature `Lk2/i;.c:(Ls3/z;)V` @kind virtual;
  #L3a15a0.  return v4;
}
