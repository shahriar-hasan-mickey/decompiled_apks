record `k2.s` @kind class @AccessFlag PUBLIC_FINAL extends `k2.m` @kind interface {
  `java.lang.String` `k2.s.a` @AccessFlag PRIVATE_FINAL;
  `s3.z` `k2.s.b` @AccessFlag PRIVATE_FINAL;
  `s3.y` `k2.s.c` @AccessFlag PRIVATE_FINAL;
  `a2.d0` `k2.s.d` @AccessFlag PRIVATE;
  `java.lang.String` `k2.s.e` @AccessFlag PRIVATE;
  `v1.j1` `k2.s.f` @AccessFlag PRIVATE;
  `int` `k2.s.g` @AccessFlag PRIVATE;
  `int` `k2.s.h` @AccessFlag PRIVATE;
  `int` `k2.s.i` @AccessFlag PRIVATE;
  `int` `k2.s.j` @AccessFlag PRIVATE;
  `long` `k2.s.k` @AccessFlag PRIVATE;
  `boolean` `k2.s.l` @AccessFlag PRIVATE;
  `int` `k2.s.m` @AccessFlag PRIVATE;
  `int` `k2.s.n` @AccessFlag PRIVATE;
  `int` `k2.s.o` @AccessFlag PRIVATE;
  `boolean` `k2.s.p` @AccessFlag PRIVATE;
  `long` `k2.s.q` @AccessFlag PRIVATE;
  `int` `k2.s.r` @AccessFlag PRIVATE;
  `long` `k2.s.s` @AccessFlag PRIVATE;
  `int` `k2.s.t` @AccessFlag PRIVATE;
  `java.lang.String` `k2.s.u` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`k2.s` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lk2/s;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a58c4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a58ca.  v2.`k2.s.a` @type ^`java.lang.String` := v3 @kind object;
  #L3a58ce.  v3:= new `s3.z`;
  #L3a58d2.  v0:= 1024I;
  #L3a58d6.  call `<init>`(v3, v0) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L3a58dc.  v2.`k2.s.b` @type ^`s3.z` := v3 @kind object;
  #L3a58e0.  v0:= new `s3.y`;
  #L3a58e4.  call temp:= `d`(v3) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a58ea.  v3:= temp @kind object;
  #L3a58ec.  call `<init>`(v0, v3) @signature `Ls3/y;.<init>:([B)V` @kind direct;
  #L3a58f2.  v2.`k2.s.c` @type ^`s3.y` := v0 @kind object;
  #L3a58f6.  v0:= -4.9E-324D;
  #L3a5900.  v2.`k2.s.k` @type ^`long` := v0 @kind wide;
  #L3a5904.  return @kind void;
}
procedure `long` `b`(`s3.y` v2 @kind object) @signature `Lk2/s;.b:(Ls3/y;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3a5894.  v0:= 2I;
  #L3a5896.  call temp:= `h`(v2, v0) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a589c.  v0:= temp;
  #L3a589e.  v0:= v0 + 1;
  #L3a58a2.  v0:= v0 * 8;
  #L3a58a6.  call temp:= `h`(v2, v0) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a58ac.  v2:= temp;
  #L3a58ae.  v0:= (`long`) v2 @kind i2l;
  #L3a58b0.  return v0 @kind wide;
}
procedure `void` `g`(`k2.s` v2 @kind this, `s3.y` v3 @kind object) @signature `Lk2/s;.g:(Ls3/y;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3a5ab4.  call temp:= `g`(v3) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L3a5aba.  v0:= temp;
  #L3a5abc.  if v0 != 0 then goto L3a5ace;
  #L3a5ac0.  v0:= 1I;
  #L3a5ac2.  v2.`k2.s.l` @type ^`boolean` := v0 @kind boolean;
  #L3a5ac6.  call `l`(v2, v3) @signature `Lk2/s;.l:(Ls3/y;)V` @kind direct;
  #L3a5acc.  goto L3a5ad8;
  #L3a5ace.  v0:= v2.`k2.s.l` @type ^`boolean` @kind boolean;
  #L3a5ad2.  if v0 != 0 then goto L3a5ad8;
  #L3a5ad6.  return @kind void;
  #L3a5ad8.  v0:= v2.`k2.s.m` @type ^`int`;
  #L3a5adc.  v1:= 0I;
  #L3a5ade.  if v0 != 0 then goto L3a5b18;
  #L3a5ae2.  v0:= v2.`k2.s.n` @type ^`int`;
  #L3a5ae6.  if v0 != 0 then goto L3a5b0e;
  #L3a5aea.  call temp:= `j`(v2, v3) @signature `Lk2/s;.j:(Ls3/y;)I` @kind direct;
  #L3a5af0.  v0:= temp;
  #L3a5af2.  call `k`(v2, v3, v0) @signature `Lk2/s;.k:(Ls3/y;I)V` @kind direct;
  #L3a5af8.  v0:= v2.`k2.s.p` @type ^`boolean` @kind boolean;
  #L3a5afc.  if v0 == 0 then goto L3a5b0c;
  #L3a5b00.  v0:= v2.`k2.s.q` @type ^`long` @kind wide;
  #L3a5b04.  v1:= (`int`) v0 @kind l2i;
  #L3a5b06.  call `r`(v3, v1) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a5b0c.  return @kind void;
  #L3a5b0e.  call temp:= `a`(v1, v1) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L3a5b14.  v3:= temp @kind object;
  #L3a5b16.  throw v3;
  #L3a5b18.  call temp:= `a`(v1, v1) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L3a5b1e.  v3:= temp @kind object;
  #L3a5b20.  throw v3;
}
procedure `int` `h`(`k2.s` v3 @kind this, `s3.y` v4 @kind object) @signature `Lk2/s;.h:(Ls3/y;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3a580c.  call temp:= `b`(v4) @signature `Ls3/y;.b:()I` @kind virtual;
  #L3a5812.  v0:= temp;
  #L3a5814.  v1:= 1I;
  #L3a5816.  call temp:= `e`(v4, v1) @signature `Lx1/a;.e:(Ls3/y;Z)Lx1/a$b;` @kind static;
  #L3a581c.  v1:= temp @kind object;
  #L3a581e.  v2:= v1.`x1.a$b.c` @type ^`java.lang.String` @kind object;
  #L3a5822.  v3.`k2.s.u` @type ^`java.lang.String` := v2 @kind object;
  #L3a5826.  v2:= v1.`x1.a$b.a` @type ^`int`;
  #L3a582a.  v3.`k2.s.r` @type ^`int` := v2;
  #L3a582e.  v1:= v1.`x1.a$b.b` @type ^`int`;
  #L3a5832.  v3.`k2.s.t` @type ^`int` := v1;
  #L3a5836.  call temp:= `b`(v4) @signature `Ls3/y;.b:()I` @kind virtual;
  #L3a583c.  v4:= temp;
  #L3a583e.  v0:= v0 - v4 @kind int;
  #L3a5840.  return v0;
}
procedure `void` `i`(`k2.s` v4 @kind this, `s3.y` v5 @kind object) @signature `Lk2/s;.i:(Ls3/y;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a5b34.  v0:= 3I;
  #L3a5b36.  call temp:= `h`(v5, v0) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a5b3c.  v1:= temp;
  #L3a5b3e.  v4.`k2.s.o` @type ^`int` := v1;
  #L3a5b42.  if v1 == 0 then goto L3a5b8c;
  #L3a5b46.  v2:= 1I;
  #L3a5b48.  if v1 == v2 then goto L3a5b86;
  #L3a5b4c.  v3:= 6I;
  #L3a5b4e.  if v1 == v0 then goto L3a5b7e;
  #L3a5b52.  v0:= 4I;
  #L3a5b54.  if v1 == v0 then goto L3a5b7e;
  #L3a5b58.  v0:= 5I;
  #L3a5b5a.  if v1 == v0 then goto L3a5b7e;
  #L3a5b5e.  if v1 == v3 then goto L3a5b76;
  #L3a5b62.  v0:= 7I;
  #L3a5b64.  if v1 != v0 then goto L3a5b6a;
  #L3a5b68.  goto L3a5b76;
  #L3a5b6a.  v5:= new `java.lang.IllegalStateException`;
  #L3a5b6e.  call `<init>`(v5) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3a5b74.  throw v5;
  #L3a5b76.  call `r`(v5, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a5b7c.  goto L3a5b96;
  #L3a5b7e.  call `r`(v5, v3) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a5b84.  goto L3a5b96;
  #L3a5b86.  v0:= 9I;
  #L3a5b8a.  goto L3a5b90;
  #L3a5b8c.  v0:= 8I;
  #L3a5b90.  call `r`(v5, v0) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a5b96.  return @kind void;
}
procedure `int` `j`(`k2.s` v3 @kind this, `s3.y` v4 @kind object) @signature `Lk2/s;.j:(Ls3/y;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3a5854.  v0:= v3.`k2.s.o` @type ^`int`;
  #L3a5858.  if v0 != 0 then goto L3a5876;
  #L3a585c.  v0:= 0I;
  #L3a585e.  v1:= 8I;
  #L3a5862.  call temp:= `h`(v4, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a5868.  v1:= temp;
  #L3a586a.  v0:= v0 + v1 @kind int;
  #L3a586c.  v2:= 255I;
  #L3a5870.  if v1 == v2 then goto L3a585e;
  #L3a5874.  return v0;
  #L3a5876.  v4:= 0I;
  #L3a5878.  call temp:= `a`(v4, v4) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L3a587e.  v4:= temp @kind object;
  #L3a5880.  throw v4;
}
procedure `void` `k`(`k2.s` v8 @kind this, `s3.y` v9 @kind object, `int` v10 ) @signature `Lk2/s;.k:(Ls3/y;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3a5ba8.  call temp:= `e`(v9) @signature `Ls3/y;.e:()I` @kind virtual;
  #L3a5bae.  v0:= temp;
  #L3a5bb0.  v1:= v0 ^& 7;
  #L3a5bb4.  if v1 != 0 then goto L3a5bc8;
  #L3a5bb8.  v9:= v8.`k2.s.b` @type ^`s3.z` @kind object;
  #L3a5bbc.  v0:= v0 ^> 3;
  #L3a5bc0.  call `O`(v9, v0) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a5bc6.  goto L3a5bea;
  #L3a5bc8.  v0:= v8.`k2.s.b` @type ^`s3.z` @kind object;
  #L3a5bcc.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a5bd2.  v0:= temp @kind object;
  #L3a5bd4.  v1:= v10 * 8;
  #L3a5bd8.  v2:= 0I;
  #L3a5bda.  call `i`(v9, v0, v2, v1) @signature `Ls3/y;.i:([BII)V` @kind virtual;
  #L3a5be0.  v9:= v8.`k2.s.b` @type ^`s3.z` @kind object;
  #L3a5be4.  call `O`(v9, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a5bea.  v9:= v8.`k2.s.d` @type ^`a2.d0` @kind object;
  #L3a5bee.  v0:= v8.`k2.s.b` @type ^`s3.z` @kind object;
  #L3a5bf2.  call `c`(v9, v0, v10) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L3a5bf8.  v2:= v8.`k2.s.k` @type ^`long` @kind wide;
  #L3a5bfc.  v0:= -4.9E-324D;
  #L3a5c06.  v9:= lcmp(v2, v0);
  #L3a5c0a.  if v9 == 0 then goto L3a5c2e;
  #L3a5c0e.  v1:= v8.`k2.s.d` @type ^`a2.d0` @kind object;
  #L3a5c12.  v4:= 1I;
  #L3a5c14.  v6:= 0I;
  #L3a5c16.  v7:= 0I;
  #L3a5c18.  v5:= v10;
  #L3a5c1a.  call `f`(v1, v2, v4, v5, v6, v7) @signature `La2/d0;.f:(JIIILa2/d0$a;)V` @kind interface;
  #L3a5c20.  v9:= v8.`k2.s.k` @type ^`long` @kind wide;
  #L3a5c24.  v0:= v8.`k2.s.s` @type ^`long` @kind wide;
  #L3a5c28.  v9:= v9 + v0 @kind long;
  #L3a5c2a.  v8.`k2.s.k` @type ^`long` := v9 @kind wide;
  #L3a5c2e.  return @kind void;
}
procedure `void` `l`(`k2.s` v8 @kind this, `s3.y` v9 @kind object) @signature `Lk2/s;.l:(Ls3/y;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3a5c40.  v0:= 1I;
  #L3a5c42.  call temp:= `h`(v9, v0) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a5c48.  v1:= temp;
  #L3a5c4a.  v2:= 0I;
  #L3a5c4c.  if v1 != v0 then goto L3a5c5a;
  #L3a5c50.  call temp:= `h`(v9, v0) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a5c56.  v3:= temp;
  #L3a5c58.  goto L3a5c5c;
  #L3a5c5a.  v3:= 0I;
  #L3a5c5c.  v8.`k2.s.m` @type ^`int` := v3;
  #L3a5c60.  v4:= 0I;
  #L3a5c62.  if v3 != 0 then goto L3a5e04;
  #L3a5c66.  if v1 != v0 then goto L3a5c70;
  #L3a5c6a.  call temp:= `b`(v9) @signature `Lk2/s;.b:(Ls3/y;)J` @kind static;
  #L3a5c70.  call temp:= `g`(v9) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L3a5c76.  v3:= temp;
  #L3a5c78.  if v3 == 0 then goto L3a5dfa;
  #L3a5c7c.  v3:= 6I;
  #L3a5c7e.  call temp:= `h`(v9, v3) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a5c84.  v3:= temp;
  #L3a5c86.  v8.`k2.s.n` @type ^`int` := v3;
  #L3a5c8a.  v3:= 4I;
  #L3a5c8c.  call temp:= `h`(v9, v3) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a5c92.  v3:= temp;
  #L3a5c94.  v5:= 3I;
  #L3a5c96.  call temp:= `h`(v9, v5) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a5c9c.  v5:= temp;
  #L3a5c9e.  if v3 != 0 then goto L3a5df0;
  #L3a5ca2.  if v5 != 0 then goto L3a5df0;
  #L3a5ca6.  v3:= 8I;
  #L3a5caa.  if v1 != 0 then goto L3a5d70;
  #L3a5cae.  call temp:= `e`(v9) @signature `Ls3/y;.e:()I` @kind virtual;
  #L3a5cb4.  v4:= temp;
  #L3a5cb6.  call temp:= `h`(v8, v9) @signature `Lk2/s;.h:(Ls3/y;)I` @kind direct;
  #L3a5cbc.  v5:= temp;
  #L3a5cbe.  call `p`(v9, v4) @signature `Ls3/y;.p:(I)V` @kind virtual;
  #L3a5cc4.  v4:= v5 + 7;
  #L3a5cc8.  v4:= v4 / v3 @kind int;
  #L3a5cca.  v4:= new `byte`[v4];
  #L3a5cce.  call `i`(v9, v4, v2, v5) @signature `Ls3/y;.i:([BII)V` @kind virtual;
  #L3a5cd4.  v2:= new `v1.j1$b`;
  #L3a5cd8.  call `<init>`(v2) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L3a5cde.  v5:= v8.`k2.s.e` @type ^`java.lang.String` @kind object;
  #L3a5ce2.  call temp:= `S`(v2, v5) @signature `Lv1/j1$b;.S:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3a5ce8.  v2:= temp @kind object;
  #L3a5cea.  v5:= "audio/mp4a-latm" @kind object;
  #L3a5cee.  call temp:= `e0`(v2, v5) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3a5cf4.  v2:= temp @kind object;
  #L3a5cf6.  v5:= v8.`k2.s.u` @type ^`java.lang.String` @kind object;
  #L3a5cfa.  call temp:= `I`(v2, v5) @signature `Lv1/j1$b;.I:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3a5d00.  v2:= temp @kind object;
  #L3a5d02.  v5:= v8.`k2.s.t` @type ^`int`;
  #L3a5d06.  call temp:= `H`(v2, v5) @signature `Lv1/j1$b;.H:(I)Lv1/j1$b;` @kind virtual;
  #L3a5d0c.  v2:= temp @kind object;
  #L3a5d0e.  v5:= v8.`k2.s.r` @type ^`int`;
  #L3a5d12.  call temp:= `f0`(v2, v5) @signature `Lv1/j1$b;.f0:(I)Lv1/j1$b;` @kind virtual;
  #L3a5d18.  v2:= temp @kind object;
  #L3a5d1a.  call temp:= `singletonList`(v4) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3a5d20.  v4:= temp @kind object;
  #L3a5d22.  call temp:= `T`(v2, v4) @signature `Lv1/j1$b;.T:(Ljava/util/List;)Lv1/j1$b;` @kind virtual;
  #L3a5d28.  v2:= temp @kind object;
  #L3a5d2a.  v4:= v8.`k2.s.a` @type ^`java.lang.String` @kind object;
  #L3a5d2e.  call temp:= `V`(v2, v4) @signature `Lv1/j1$b;.V:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3a5d34.  v2:= temp @kind object;
  #L3a5d36.  call temp:= `E`(v2) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L3a5d3c.  v2:= temp @kind object;
  #L3a5d3e.  v4:= v8.`k2.s.f` @type ^`v1.j1` @kind object;
  #L3a5d42.  call temp:= `equals`(v2, v4) @signature `Lv1/j1;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a5d48.  v4:= temp;
  #L3a5d4a.  if v4 != 0 then goto L3a5d8a;
  #L3a5d4e.  v8.`k2.s.f` @type ^`v1.j1` := v2 @kind object;
  #L3a5d52.  v4:= 1024000000L;
  #L3a5d58.  v6:= v2.`v1.j1.N` @type ^`int`;
  #L3a5d5c.  v6:= (`long`) v6 @kind i2l;
  #L3a5d5e.  v4:= v4 / v6 @kind long;
  #L3a5d60.  v8.`k2.s.s` @type ^`long` := v4 @kind wide;
  #L3a5d64.  v4:= v8.`k2.s.d` @type ^`a2.d0` @kind object;
  #L3a5d68.  call `b`(v4, v2) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L3a5d6e.  goto L3a5d8a;
  #L3a5d70.  call temp:= `b`(v9) @signature `Lk2/s;.b:(Ls3/y;)J` @kind static;
  #L3a5d76.  v4:= temp @kind wide;
  #L3a5d78.  v2:= (`int`) v4 @kind l2i;
  #L3a5d7a.  call temp:= `h`(v8, v9) @signature `Lk2/s;.h:(Ls3/y;)I` @kind direct;
  #L3a5d80.  v4:= temp;
  #L3a5d82.  v2:= v2 - v4 @kind int;
  #L3a5d84.  call `r`(v9, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a5d8a.  call `i`(v8, v9) @signature `Lk2/s;.i:(Ls3/y;)V` @kind direct;
  #L3a5d90.  call temp:= `g`(v9) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L3a5d96.  v2:= temp;
  #L3a5d98.  v8.`k2.s.p` @type ^`boolean` := v2 @kind boolean;
  #L3a5d9c.  v4:= 0L;
  #L3a5da0.  v8.`k2.s.q` @type ^`long` := v4 @kind wide;
  #L3a5da4.  if v2 == 0 then goto L3a5ddc;
  #L3a5da8.  if v1 != v0 then goto L3a5dba;
  #L3a5dac.  call temp:= `b`(v9) @signature `Lk2/s;.b:(Ls3/y;)J` @kind static;
  #L3a5db2.  v0:= temp @kind wide;
  #L3a5db4.  v8.`k2.s.q` @type ^`long` := v0 @kind wide;
  #L3a5db8.  goto L3a5ddc;
  #L3a5dba.  call temp:= `g`(v9) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L3a5dc0.  v0:= temp;
  #L3a5dc2.  v1:= v8.`k2.s.q` @type ^`long` @kind wide;
  #L3a5dc6.  v1:= v1 ^< v3 @kind long;
  #L3a5dc8.  call temp:= `h`(v9, v3) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a5dce.  v4:= temp;
  #L3a5dd0.  v4:= (`long`) v4 @kind i2l;
  #L3a5dd2.  v1:= v1 + v4 @kind long;
  #L3a5dd4.  v8.`k2.s.q` @type ^`long` := v1 @kind wide;
  #L3a5dd8.  if v0 != 0 then goto L3a5dba;
  #L3a5ddc.  call temp:= `g`(v9) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L3a5de2.  v0:= temp;
  #L3a5de4.  if v0 == 0 then goto L3a5dee;
  #L3a5de8.  call `r`(v9, v3) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a5dee.  return @kind void;
  #L3a5df0.  call temp:= `a`(v4, v4) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L3a5df6.  v9:= temp @kind object;
  #L3a5df8.  throw v9;
  #L3a5dfa.  call temp:= `a`(v4, v4) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L3a5e00.  v9:= temp @kind object;
  #L3a5e02.  throw v9;
  #L3a5e04.  call temp:= `a`(v4, v4) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L3a5e0a.  v9:= temp @kind object;
  #L3a5e0c.  throw v9;
}
procedure `void` `m`(`k2.s` v1 @kind this, `int` v2 ) @signature `Lk2/s;.m:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3a5e20.  v0:= v1.`k2.s.b` @type ^`s3.z` @kind object;
  #L3a5e24.  call `K`(v0, v2) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L3a5e2a.  v2:= v1.`k2.s.c` @type ^`s3.y` @kind object;
  #L3a5e2e.  v0:= v1.`k2.s.b` @type ^`s3.z` @kind object;
  #L3a5e32.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a5e38.  v0:= temp @kind object;
  #L3a5e3a.  call `n`(v2, v0) @signature `Ls3/y;.n:([B)V` @kind virtual;
  #L3a5e40.  return @kind void;
}
procedure `void` `a`(`k2.s` v3 @kind this) @signature `Lk2/s;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a5e54.  v0:= 0I;
  #L3a5e56.  v3.`k2.s.g` @type ^`int` := v0;
  #L3a5e5a.  v1:= -4.9E-324D;
  #L3a5e64.  v3.`k2.s.k` @type ^`long` := v1 @kind wide;
  #L3a5e68.  v3.`k2.s.l` @type ^`boolean` := v0 @kind boolean;
  #L3a5e6c.  return @kind void;
}
procedure `void` `c`(`k2.s` v6 @kind this, `s3.z` v7 @kind object) @signature `Lk2/s;.c:(Ls3/z;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a5918.  v0:= v6.`k2.s.d` @type ^`a2.d0` @kind object;
  #L3a591c.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a5922.  call temp:= `a`(v7) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a5928.  v0:= temp;
  #L3a592a.  if v0 <= 0 then goto L3a5a2a;
  #L3a592e.  v0:= v6.`k2.s.g` @type ^`int`;
  #L3a5932.  v1:= 86I;
  #L3a5936.  v2:= 1I;
  #L3a5938.  if v0 == 0 then goto L3a5a16;
  #L3a593c.  v3:= 2I;
  #L3a593e.  v4:= 0I;
  #L3a5940.  if v0 == v2 then goto L3a59f2;
  #L3a5944.  v1:= 3I;
  #L3a5946.  if v0 == v3 then goto L3a59b2;
  #L3a594a.  if v0 != v1 then goto L3a59a6;
  #L3a594e.  call temp:= `a`(v7) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a5954.  v0:= temp;
  #L3a5956.  v1:= v6.`k2.s.i` @type ^`int`;
  #L3a595a.  v2:= v6.`k2.s.h` @type ^`int`;
  #L3a595e.  v1:= v1 - v2 @kind int;
  #L3a5960.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3a5966.  v0:= temp;
  #L3a5968.  v1:= v6.`k2.s.c` @type ^`s3.y` @kind object;
  #L3a596c.  v1:= v1.`s3.y.a` @type ^`byte`[] @kind object;
  #L3a5970.  v2:= v6.`k2.s.h` @type ^`int`;
  #L3a5974.  call `j`(v7, v1, v2, v0) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L3a597a.  v1:= v6.`k2.s.h` @type ^`int`;
  #L3a597e.  v1:= v1 + v0 @kind int;
  #L3a5980.  v6.`k2.s.h` @type ^`int` := v1;
  #L3a5984.  v0:= v6.`k2.s.i` @type ^`int`;
  #L3a5988.  if v1 != v0 then goto L3a5922;
  #L3a598c.  v0:= v6.`k2.s.c` @type ^`s3.y` @kind object;
  #L3a5990.  call `p`(v0, v4) @signature `Ls3/y;.p:(I)V` @kind virtual;
  #L3a5996.  v0:= v6.`k2.s.c` @type ^`s3.y` @kind object;
  #L3a599a.  call `g`(v6, v0) @signature `Lk2/s;.g:(Ls3/y;)V` @kind direct;
  #L3a59a0.  v6.`k2.s.g` @type ^`int` := v4;
  #L3a59a4.  goto L3a5922;
  #L3a59a6.  v7:= new `java.lang.IllegalStateException`;
  #L3a59aa.  call `<init>`(v7) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3a59b0.  throw v7;
  #L3a59b2.  v0:= v6.`k2.s.j` @type ^`int`;
  #L3a59b6.  v0:= v0 ^& -225;
  #L3a59ba.  v0:= v0 ^< 8;
  #L3a59be.  call temp:= `C`(v7) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3a59c4.  v2:= temp;
  #L3a59c6.  v0:= v0 ^| v2 @kind int;
  #L3a59c8.  v6.`k2.s.i` @type ^`int` := v0;
  #L3a59cc.  v2:= v6.`k2.s.b` @type ^`s3.z` @kind object;
  #L3a59d0.  call temp:= `d`(v2) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a59d6.  v2:= temp @kind object;
  #L3a59d8.  v2:= length @variable v2;
  #L3a59da.  if v0 <= v2 then goto L3a59e8;
  #L3a59de.  v0:= v6.`k2.s.i` @type ^`int`;
  #L3a59e2.  call `m`(v6, v0) @signature `Lk2/s;.m:(I)V` @kind direct;
  #L3a59e8.  v6.`k2.s.h` @type ^`int` := v4;
  #L3a59ec.  v6.`k2.s.g` @type ^`int` := v1;
  #L3a59f0.  goto L3a5922;
  #L3a59f2.  call temp:= `C`(v7) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3a59f8.  v0:= temp;
  #L3a59fa.  v2:= v0 ^& 224;
  #L3a59fe.  v5:= 224I;
  #L3a5a02.  if v2 != v5 then goto L3a5a10;
  #L3a5a06.  v6.`k2.s.j` @type ^`int` := v0;
  #L3a5a0a.  v6.`k2.s.g` @type ^`int` := v3;
  #L3a5a0e.  goto L3a5922;
  #L3a5a10.  if v0 == v1 then goto L3a5922;
  #L3a5a14.  goto L3a59a0;
  #L3a5a16.  call temp:= `C`(v7) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3a5a1c.  v0:= temp;
  #L3a5a1e.  if v0 != v1 then goto L3a5922;
  #L3a5a22.  v6.`k2.s.g` @type ^`int` := v2;
  #L3a5a26.  goto L3a5922;
  #L3a5a2a.  return @kind void;
}
procedure `void` `d`(`k2.s` v2 @kind this, `a2.n` v3 @kind object, `k2.i0$d` v4 @kind object) @signature `Lk2/s;.d:(La2/n;Lk2/i0$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a5a3c.  call `a`(v4) @signature `Lk2/i0$d;.a:()V` @kind virtual;
  #L3a5a42.  call temp:= `c`(v4) @signature `Lk2/i0$d;.c:()I` @kind virtual;
  #L3a5a48.  v0:= temp;
  #L3a5a4a.  v1:= 1I;
  #L3a5a4c.  call temp:= `e`(v3, v0, v1) @signature `La2/n;.e:(II)La2/d0;` @kind interface;
  #L3a5a52.  v3:= temp @kind object;
  #L3a5a54.  v2.`k2.s.d` @type ^`a2.d0` := v3 @kind object;
  #L3a5a58.  call temp:= `b`(v4) @signature `Lk2/i0$d;.b:()Ljava/lang/String;` @kind virtual;
  #L3a5a5e.  v3:= temp @kind object;
  #L3a5a60.  v2.`k2.s.e` @type ^`java.lang.String` := v3 @kind object;
  #L3a5a64.  return @kind void;
}
procedure `void` `e`(`k2.s` v0 @kind this) @signature `Lk2/s;.e:()V` @AccessFlag PUBLIC {
    temp;

  #L3a5a78.  return @kind void;
}
procedure `void` `f`(`k2.s` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lk2/s;.f:(JI)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a5a8c.  v0:= -4.9E-324D;
  #L3a5a96.  v5:= lcmp(v3, v0);
  #L3a5a9a.  if v5 == 0 then goto L3a5aa2;
  #L3a5a9e.  v2.`k2.s.k` @type ^`long` := v3 @kind wide;
  #L3a5aa2.  return @kind void;
}
