record `k2.o$b` @kind class @AccessFlag FINAL {
  `a2.d0` `k2.o$b.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `k2.o$b.b` @AccessFlag PRIVATE;
  `boolean` `k2.o$b.c` @AccessFlag PRIVATE;
  `boolean` `k2.o$b.d` @AccessFlag PRIVATE;
  `int` `k2.o$b.e` @AccessFlag PRIVATE;
  `int` `k2.o$b.f` @AccessFlag PRIVATE;
  `long` `k2.o$b.g` @AccessFlag PRIVATE;
  `long` `k2.o$b.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`k2.o$b` v0 @kind this, `a2.d0` v1 @kind object) @signature `Lk2/o$b;.<init>:(La2/d0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a3560.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a3566.  v0.`k2.o$b.a` @type ^`a2.d0` := v1 @kind object;
  #L3a356a.  return @kind void;
}
procedure `void` `a`(`k2.o$b` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lk2/o$b;.a:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a357c.  v0:= v2.`k2.o$b.c` @type ^`boolean` @kind boolean;
  #L3a3580.  if v0 == 0 then goto L3a35bc;
  #L3a3584.  v0:= v4 + 1;
  #L3a3588.  v1:= v2.`k2.o$b.f` @type ^`int`;
  #L3a358c.  v0:= v0 - v1 @kind int;
  #L3a358e.  if v0 >= v5 then goto L3a35b4;
  #L3a3592.  v3:= v3[v0] @kind byte;
  #L3a3596.  v3:= v3 ^& 192;
  #L3a359a.  v3:= v3 ^> 6;
  #L3a359e.  v4:= 0I;
  #L3a35a0.  if v3 != 0 then goto L3a35a8;
  #L3a35a4.  v3:= 1I;
  #L3a35a6.  goto L3a35aa;
  #L3a35a8.  v3:= 0I;
  #L3a35aa.  v2.`k2.o$b.d` @type ^`boolean` := v3 @kind boolean;
  #L3a35ae.  v2.`k2.o$b.c` @type ^`boolean` := v4 @kind boolean;
  #L3a35b2.  goto L3a35bc;
  #L3a35b4.  v5:= v5 - v4 @kind int;
  #L3a35b6.  v1:= v1 + v5 @kind int;
  #L3a35b8.  v2.`k2.o$b.f` @type ^`int` := v1;
  #L3a35bc.  return @kind void;
}
procedure `void` `b`(`k2.o$b` v7 @kind this, `long` v8 , `int` v10 , `boolean` v11 ) @signature `Lk2/o$b;.b:(JIZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a35d0.  v0:= v7.`k2.o$b.e` @type ^`int`;
  #L3a35d4.  v1:= 182I;
  #L3a35d8.  if v0 != v1 then goto L3a361a;
  #L3a35dc.  if v11 == 0 then goto L3a361a;
  #L3a35e0.  v11:= v7.`k2.o$b.b` @type ^`boolean` @kind boolean;
  #L3a35e4.  if v11 == 0 then goto L3a361a;
  #L3a35e8.  v1:= v7.`k2.o$b.h` @type ^`long` @kind wide;
  #L3a35ec.  v3:= -4.9E-324D;
  #L3a35f6.  v11:= lcmp(v1, v3);
  #L3a35fa.  if v11 == 0 then goto L3a361a;
  #L3a35fe.  v3:= v7.`k2.o$b.g` @type ^`long` @kind wide;
  #L3a3602.  v3:= v8 - v3 @kind long;
  #L3a3606.  v4:= (`int`) v3 @kind l2i;
  #L3a3608.  v3:= v7.`k2.o$b.d` @type ^`boolean` @kind boolean;
  #L3a360c.  v0:= v7.`k2.o$b.a` @type ^`a2.d0` @kind object;
  #L3a3610.  v6:= 0I;
  #L3a3612.  v5:= v10;
  #L3a3614.  call `f`(v0, v1, v3, v4, v5, v6) @signature `La2/d0;.f:(JIIILa2/d0$a;)V` @kind interface;
  #L3a361a.  v10:= v7.`k2.o$b.e` @type ^`int`;
  #L3a361e.  v11:= 179I;
  #L3a3622.  if v10 == v11 then goto L3a362a;
  #L3a3626.  v7.`k2.o$b.g` @type ^`long` := v8 @kind wide;
  #L3a362a.  return @kind void;
}
procedure `void` `c`(`k2.o$b` v4 @kind this, `int` v5 , `long` v6 ) @signature `Lk2/o$b;.c:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a363c.  v4.`k2.o$b.e` @type ^`int` := v5;
  #L3a3640.  v0:= 0I;
  #L3a3642.  v4.`k2.o$b.d` @type ^`boolean` := v0 @kind boolean;
  #L3a3646.  v1:= 1I;
  #L3a3648.  v2:= 182I;
  #L3a364c.  if v5 == v2 then goto L3a365e;
  #L3a3650.  v3:= 179I;
  #L3a3654.  if v5 != v3 then goto L3a365a;
  #L3a3658.  goto L3a365e;
  #L3a365a.  v3:= 0I;
  #L3a365c.  goto L3a3660;
  #L3a365e.  v3:= 1I;
  #L3a3660.  v4.`k2.o$b.b` @type ^`boolean` := v3 @kind boolean;
  #L3a3664.  if v5 != v2 then goto L3a366a;
  #L3a3668.  goto L3a366c;
  #L3a366a.  v1:= 0I;
  #L3a366c.  v4.`k2.o$b.c` @type ^`boolean` := v1 @kind boolean;
  #L3a3670.  v4.`k2.o$b.f` @type ^`int` := v0;
  #L3a3674.  v4.`k2.o$b.h` @type ^`long` := v6 @kind wide;
  #L3a3678.  return @kind void;
}
procedure `void` `d`(`k2.o$b` v1 @kind this) @signature `Lk2/o$b;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a368c.  v0:= 0I;
  #L3a368e.  v1.`k2.o$b.b` @type ^`boolean` := v0 @kind boolean;
  #L3a3692.  v1.`k2.o$b.c` @type ^`boolean` := v0 @kind boolean;
  #L3a3696.  v1.`k2.o$b.d` @type ^`boolean` := v0 @kind boolean;
  #L3a369a.  v0:= -1I;
  #L3a369c.  v1.`k2.o$b.e` @type ^`int` := v0;
  #L3a36a0.  return @kind void;
}
