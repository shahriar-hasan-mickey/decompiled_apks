record `k2.j0` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `a`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lk2/j0;.a:([BII)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a98f0.  if v3 >= v4 then goto L3a9906;
  #L3a98f4.  v0:= v2[v3] @kind byte;
  #L3a98f8.  v1:= 71I;
  #L3a98fc.  if v0 == v1 then goto L3a9906;
  #L3a9900.  v3:= v3 + 1;
  #L3a9904.  goto L3a98f0;
  #L3a9906.  return v3;
}
procedure `boolean` `b`(`byte`[] v5 @kind object, `int` v6 , `int` v7 , `int` v8 ) @signature `Lk2/j0;.b:([BIII)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a98a0.  v0:= 0I;
  #L3a98a2.  v1:= -4I;
  #L3a98a4.  v2:= 0I;
  #L3a98a6.  v3:= 4I;
  #L3a98a8.  if v1 > v3 then goto L3a98dc;
  #L3a98ac.  v3:= v1 * 188;
  #L3a98b0.  v3:= v3 + v8 @kind int;
  #L3a98b2.  if v3 < v6 then goto L3a98d4;
  #L3a98b6.  if v3 >= v7 then goto L3a98d4;
  #L3a98ba.  v3:= v5[v3] @kind byte;
  #L3a98be.  v4:= 71I;
  #L3a98c2.  if v3 == v4 then goto L3a98c8;
  #L3a98c6.  goto L3a98d4;
  #L3a98c8.  v3:= 1I;
  #L3a98ca.  v2:= v2 + v3 @kind int;
  #L3a98cc.  v4:= 5I;
  #L3a98ce.  if v2 != v4 then goto L3a98d6;
  #L3a98d2.  return v3;
  #L3a98d4.  v2:= 0I;
  #L3a98d6.  v1:= v1 + 1;
  #L3a98da.  goto L3a98a6;
  #L3a98dc.  return v0;
}
procedure `long` `c`(`s3.z` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lk2/j0;.c:(Ls3/z;II)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a9918.  call `O`(v4, v5) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a991e.  call temp:= `a`(v4) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a9924.  v5:= temp;
  #L3a9926.  v0:= -4.9E-324D;
  #L3a9930.  v2:= 5I;
  #L3a9932.  if v5 >= v2 then goto L3a9938;
  #L3a9936.  return v0 @kind wide;
  #L3a9938.  call temp:= `m`(v4) @signature `Ls3/z;.m:()I` @kind virtual;
  #L3a993e.  v5:= temp;
  #L3a9940.  v2:= 8388608I;
  #L3a9944.  v2:= v2 ^& v5 @kind int;
  #L3a9946.  if v2 == 0 then goto L3a994c;
  #L3a994a.  return v0 @kind wide;
  #L3a994c.  v2:= 2096896I;
  #L3a9952.  v2:= v2 ^& v5 @kind int;
  #L3a9954.  v2:= v2 ^> 8;
  #L3a9958.  if v2 == v6 then goto L3a995e;
  #L3a995c.  return v0 @kind wide;
  #L3a995e.  v5:= v5 ^& 32;
  #L3a9962.  v6:= 1I;
  #L3a9964.  v2:= 0I;
  #L3a9966.  if v5 == 0 then goto L3a996e;
  #L3a996a.  v5:= 1I;
  #L3a996c.  goto L3a9970;
  #L3a996e.  v5:= 0I;
  #L3a9970.  if v5 != 0 then goto L3a9976;
  #L3a9974.  return v0 @kind wide;
  #L3a9976.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3a997c.  v5:= temp;
  #L3a997e.  v3:= 7I;
  #L3a9980.  if v5 < v3 then goto L3a99c0;
  #L3a9984.  call temp:= `a`(v4) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a998a.  v5:= temp;
  #L3a998c.  if v5 < v3 then goto L3a99c0;
  #L3a9990.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3a9996.  v5:= temp;
  #L3a9998.  v3:= 16I;
  #L3a999c.  v5:= v5 ^& v3 @kind int;
  #L3a999e.  if v5 != v3 then goto L3a99a4;
  #L3a99a2.  goto L3a99a6;
  #L3a99a4.  v6:= 0I;
  #L3a99a6.  if v6 == 0 then goto L3a99c0;
  #L3a99aa.  v5:= 6I;
  #L3a99ac.  v6:= new `byte`[v5];
  #L3a99b0.  call `j`(v4, v6, v2, v5) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L3a99b6.  call temp:= `d`(v6) @signature `Lk2/j0;.d:([B)J` @kind static;
  #L3a99bc.  v4:= temp @kind wide;
  #L3a99be.  return v4 @kind wide;
  #L3a99c0.  return v0 @kind wide;
}
procedure `long` `d`(`byte`[] v8 @kind object) @signature `Lk2/j0;.d:([B)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3a99d4.  v0:= 0I;
  #L3a99d6.  v0:= v8[v0] @kind byte;
  #L3a99da.  v0:= (`long`) v0 @kind i2l;
  #L3a99dc.  v2:= 255L;
  #L3a99e0.  v0:= v0 ^& v2 @kind long;
  #L3a99e2.  v4:= 25I;
  #L3a99e6.  v0:= v0 ^< v4 @kind long;
  #L3a99e8.  v4:= 1I;
  #L3a99ea.  v5:= v8[v4] @kind byte;
  #L3a99ee.  v5:= (`long`) v5 @kind i2l;
  #L3a99f0.  v5:= v5 ^& v2 @kind long;
  #L3a99f2.  v7:= 17I;
  #L3a99f6.  v5:= v5 ^< v7 @kind long;
  #L3a99f8.  v0:= v0 ^| v5 @kind long;
  #L3a99fa.  v5:= 2I;
  #L3a99fc.  v5:= v8[v5] @kind byte;
  #L3a9a00.  v5:= (`long`) v5 @kind i2l;
  #L3a9a02.  v5:= v5 ^& v2 @kind long;
  #L3a9a04.  v7:= 9I;
  #L3a9a08.  v5:= v5 ^< v7 @kind long;
  #L3a9a0a.  v0:= v0 ^| v5 @kind long;
  #L3a9a0c.  v5:= 3I;
  #L3a9a0e.  v5:= v8[v5] @kind byte;
  #L3a9a12.  v5:= (`long`) v5 @kind i2l;
  #L3a9a14.  v5:= v5 ^& v2 @kind long;
  #L3a9a16.  v4:= v5 ^< v4 @kind long;
  #L3a9a1a.  v0:= v0 ^| v4 @kind long;
  #L3a9a1c.  v4:= 4I;
  #L3a9a1e.  v8:= v8[v4] @kind byte;
  #L3a9a22.  v4:= (`long`) v8 @kind i2l;
  #L3a9a24.  v2:= v2 ^& v4 @kind long;
  #L3a9a26.  v8:= 7I;
  #L3a9a28.  v2:= v2 ^> v8 @kind long;
  #L3a9a2a.  v0:= v0 ^| v2 @kind long;
  #L3a9a2c.  return v0 @kind wide;
}
