record `k2.p` @kind class @AccessFlag PUBLIC_FINAL extends `k2.m` @kind interface {
  `k2.d0` `k2.p.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `k2.p.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `k2.p.c` @AccessFlag PRIVATE_FINAL;
  `k2.u` `k2.p.d` @AccessFlag PRIVATE_FINAL;
  `k2.u` `k2.p.e` @AccessFlag PRIVATE_FINAL;
  `k2.u` `k2.p.f` @AccessFlag PRIVATE_FINAL;
  `long` `k2.p.g` @AccessFlag PRIVATE;
  `boolean`[] `k2.p.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `k2.p.i` @AccessFlag PRIVATE;
  `a2.d0` `k2.p.j` @AccessFlag PRIVATE;
  `k2.p$b` `k2.p.k` @AccessFlag PRIVATE;
  `boolean` `k2.p.l` @AccessFlag PRIVATE;
  `long` `k2.p.m` @AccessFlag PRIVATE;
  `boolean` `k2.p.n` @AccessFlag PRIVATE;
  `s3.z` `k2.p.o` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`k2.p` v0 @kind this, `k2.d0` v1 @kind object, `boolean` v2 , `boolean` v3 ) @signature `Lk2/p;.<init>:(Lk2/d0;ZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a43ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a43f2.  v0.`k2.p.a` @type ^`k2.d0` := v1 @kind object;
  #L3a43f6.  v0.`k2.p.b` @type ^`boolean` := v2 @kind boolean;
  #L3a43fa.  v0.`k2.p.c` @type ^`boolean` := v3 @kind boolean;
  #L3a43fe.  v1:= 3I;
  #L3a4400.  v1:= new `boolean`[v1];
  #L3a4404.  v0.`k2.p.h` @type ^`boolean`[] := v1 @kind object;
  #L3a4408.  v1:= new `k2.u`;
  #L3a440c.  v2:= 7I;
  #L3a440e.  v3:= 128I;
  #L3a4412.  call `<init>`(v1, v2, v3) @signature `Lk2/u;.<init>:(II)V` @kind direct;
  #L3a4418.  v0.`k2.p.d` @type ^`k2.u` := v1 @kind object;
  #L3a441c.  v1:= new `k2.u`;
  #L3a4420.  v2:= 8I;
  #L3a4424.  call `<init>`(v1, v2, v3) @signature `Lk2/u;.<init>:(II)V` @kind direct;
  #L3a442a.  v0.`k2.p.e` @type ^`k2.u` := v1 @kind object;
  #L3a442e.  v1:= new `k2.u`;
  #L3a4432.  v2:= 6I;
  #L3a4434.  call `<init>`(v1, v2, v3) @signature `Lk2/u;.<init>:(II)V` @kind direct;
  #L3a443a.  v0.`k2.p.f` @type ^`k2.u` := v1 @kind object;
  #L3a443e.  v1:= -4.9E-324D;
  #L3a4448.  v0.`k2.p.m` @type ^`long` := v1 @kind wide;
  #L3a444c.  v1:= new `s3.z`;
  #L3a4450.  call `<init>`(v1) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L3a4456.  v0.`k2.p.o` @type ^`s3.z` := v1 @kind object;
  #L3a445a.  return @kind void;
}
procedure `void` `b`(`k2.p` v1 @kind this) @signature `Lk2/p;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3a446c.  v0:= v1.`k2.p.j` @type ^`a2.d0` @kind object;
  #L3a4470.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a4476.  v0:= v1.`k2.p.k` @type ^`k2.p$b` @kind object;
  #L3a447a.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a4480.  return @kind void;
}
procedure `void` `g`(`k2.p` v7 @kind this, `long` v8 , `int` v10 , `int` v11 , `long` v12 ) @signature `Lk2/p;.g:(JIIJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a45ac.  v0:= v7.`k2.p.l` @type ^`boolean` @kind boolean;
  #L3a45b0.  if v0 == 0 then goto L3a45c4;
  #L3a45b4.  v0:= v7.`k2.p.k` @type ^`k2.p$b` @kind object;
  #L3a45b8.  call temp:= `c`(v0) @signature `Lk2/p$b;.c:()Z` @kind virtual;
  #L3a45be.  v0:= temp;
  #L3a45c0.  if v0 == 0 then goto L3a4778;
  #L3a45c4.  v0:= v7.`k2.p.d` @type ^`k2.u` @kind object;
  #L3a45c8.  call temp:= `b`(v0, v11) @signature `Lk2/u;.b:(I)Z` @kind virtual;
  #L3a45ce.  v0:= v7.`k2.p.e` @type ^`k2.u` @kind object;
  #L3a45d2.  call temp:= `b`(v0, v11) @signature `Lk2/u;.b:(I)Z` @kind virtual;
  #L3a45d8.  v0:= v7.`k2.p.l` @type ^`boolean` @kind boolean;
  #L3a45dc.  v1:= 3I;
  #L3a45de.  if v0 != 0 then goto L3a470a;
  #L3a45e2.  v0:= v7.`k2.p.d` @type ^`k2.u` @kind object;
  #L3a45e6.  call temp:= `c`(v0) @signature `Lk2/u;.c:()Z` @kind virtual;
  #L3a45ec.  v0:= temp;
  #L3a45ee.  if v0 == 0 then goto L3a4778;
  #L3a45f2.  v0:= v7.`k2.p.e` @type ^`k2.u` @kind object;
  #L3a45f6.  call temp:= `c`(v0) @signature `Lk2/u;.c:()Z` @kind virtual;
  #L3a45fc.  v0:= temp;
  #L3a45fe.  if v0 == 0 then goto L3a4778;
  #L3a4602.  v0:= new `java.util.ArrayList`;
  #L3a4606.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3a460c.  v2:= v7.`k2.p.d` @type ^`k2.u` @kind object;
  #L3a4610.  v3:= v2.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a4614.  v2:= v2.`k2.u.e` @type ^`int`;
  #L3a4618.  call temp:= `copyOf`(v3, v2) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L3a461e.  v2:= temp @kind object;
  #L3a4620.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a4626.  v2:= v7.`k2.p.e` @type ^`k2.u` @kind object;
  #L3a462a.  v3:= v2.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a462e.  v2:= v2.`k2.u.e` @type ^`int`;
  #L3a4632.  call temp:= `copyOf`(v3, v2) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L3a4638.  v2:= temp @kind object;
  #L3a463a.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a4640.  v2:= v7.`k2.p.d` @type ^`k2.u` @kind object;
  #L3a4644.  v3:= v2.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a4648.  v2:= v2.`k2.u.e` @type ^`int`;
  #L3a464c.  call temp:= `l`(v3, v1, v2) @signature `Ls3/v;.l:([BII)Ls3/v$c;` @kind static;
  #L3a4652.  v2:= temp @kind object;
  #L3a4654.  v3:= v7.`k2.p.e` @type ^`k2.u` @kind object;
  #L3a4658.  v4:= v3.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a465c.  v3:= v3.`k2.u.e` @type ^`int`;
  #L3a4660.  call temp:= `j`(v4, v1, v3) @signature `Ls3/v;.j:([BII)Ls3/v$b;` @kind static;
  #L3a4666.  v1:= temp @kind object;
  #L3a4668.  v3:= v2.`s3.v$c.a` @type ^`int`;
  #L3a466c.  v4:= v2.`s3.v$c.b` @type ^`int`;
  #L3a4670.  v5:= v2.`s3.v$c.c` @type ^`int`;
  #L3a4674.  call temp:= `a`(v3, v4, v5) @signature `Ls3/d;.a:(III)Ljava/lang/String;` @kind static;
  #L3a467a.  v3:= temp @kind object;
  #L3a467c.  v4:= v7.`k2.p.j` @type ^`a2.d0` @kind object;
  #L3a4680.  v5:= new `v1.j1$b`;
  #L3a4684.  call `<init>`(v5) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L3a468a.  v6:= v7.`k2.p.i` @type ^`java.lang.String` @kind object;
  #L3a468e.  call temp:= `S`(v5, v6) @signature `Lv1/j1$b;.S:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3a4694.  v5:= temp @kind object;
  #L3a4696.  v6:= "video/avc" @kind object;
  #L3a469a.  call temp:= `e0`(v5, v6) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3a46a0.  v5:= temp @kind object;
  #L3a46a2.  call temp:= `I`(v5, v3) @signature `Lv1/j1$b;.I:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3a46a8.  v3:= temp @kind object;
  #L3a46aa.  v5:= v2.`s3.v$c.e` @type ^`int`;
  #L3a46ae.  call temp:= `j0`(v3, v5) @signature `Lv1/j1$b;.j0:(I)Lv1/j1$b;` @kind virtual;
  #L3a46b4.  v3:= temp @kind object;
  #L3a46b6.  v5:= v2.`s3.v$c.f` @type ^`int`;
  #L3a46ba.  call temp:= `Q`(v3, v5) @signature `Lv1/j1$b;.Q:(I)Lv1/j1$b;` @kind virtual;
  #L3a46c0.  v3:= temp @kind object;
  #L3a46c2.  v5:= v2.`s3.v$c.g` @type ^`float`;
  #L3a46c6.  call temp:= `a0`(v3, v5) @signature `Lv1/j1$b;.a0:(F)Lv1/j1$b;` @kind virtual;
  #L3a46cc.  v3:= temp @kind object;
  #L3a46ce.  call temp:= `T`(v3, v0) @signature `Lv1/j1$b;.T:(Ljava/util/List;)Lv1/j1$b;` @kind virtual;
  #L3a46d4.  v0:= temp @kind object;
  #L3a46d6.  call temp:= `E`(v0) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L3a46dc.  v0:= temp @kind object;
  #L3a46de.  call `b`(v4, v0) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L3a46e4.  v0:= 1I;
  #L3a46e6.  v7.`k2.p.l` @type ^`boolean` := v0 @kind boolean;
  #L3a46ea.  v0:= v7.`k2.p.k` @type ^`k2.p$b` @kind object;
  #L3a46ee.  call `f`(v0, v2) @signature `Lk2/p$b;.f:(Ls3/v$c;)V` @kind virtual;
  #L3a46f4.  v0:= v7.`k2.p.k` @type ^`k2.p$b` @kind object;
  #L3a46f8.  call `e`(v0, v1) @signature `Lk2/p$b;.e:(Ls3/v$b;)V` @kind virtual;
  #L3a46fe.  v0:= v7.`k2.p.d` @type ^`k2.u` @kind object;
  #L3a4702.  call `d`(v0) @signature `Lk2/u;.d:()V` @kind virtual;
  #L3a4708.  goto L3a4772;
  #L3a470a.  v0:= v7.`k2.p.d` @type ^`k2.u` @kind object;
  #L3a470e.  call temp:= `c`(v0) @signature `Lk2/u;.c:()Z` @kind virtual;
  #L3a4714.  v0:= temp;
  #L3a4716.  if v0 == 0 then goto L3a4744;
  #L3a471a.  v0:= v7.`k2.p.d` @type ^`k2.u` @kind object;
  #L3a471e.  v2:= v0.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a4722.  v0:= v0.`k2.u.e` @type ^`int`;
  #L3a4726.  call temp:= `l`(v2, v1, v0) @signature `Ls3/v;.l:([BII)Ls3/v$c;` @kind static;
  #L3a472c.  v0:= temp @kind object;
  #L3a472e.  v1:= v7.`k2.p.k` @type ^`k2.p$b` @kind object;
  #L3a4732.  call `f`(v1, v0) @signature `Lk2/p$b;.f:(Ls3/v$c;)V` @kind virtual;
  #L3a4738.  v0:= v7.`k2.p.d` @type ^`k2.u` @kind object;
  #L3a473c.  call `d`(v0) @signature `Lk2/u;.d:()V` @kind virtual;
  #L3a4742.  goto L3a4778;
  #L3a4744.  v0:= v7.`k2.p.e` @type ^`k2.u` @kind object;
  #L3a4748.  call temp:= `c`(v0) @signature `Lk2/u;.c:()Z` @kind virtual;
  #L3a474e.  v0:= temp;
  #L3a4750.  if v0 == 0 then goto L3a4778;
  #L3a4754.  v0:= v7.`k2.p.e` @type ^`k2.u` @kind object;
  #L3a4758.  v2:= v0.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a475c.  v0:= v0.`k2.u.e` @type ^`int`;
  #L3a4760.  call temp:= `j`(v2, v1, v0) @signature `Ls3/v;.j:([BII)Ls3/v$b;` @kind static;
  #L3a4766.  v0:= temp @kind object;
  #L3a4768.  v1:= v7.`k2.p.k` @type ^`k2.p$b` @kind object;
  #L3a476c.  call `e`(v1, v0) @signature `Lk2/p$b;.e:(Ls3/v$b;)V` @kind virtual;
  #L3a4772.  v0:= v7.`k2.p.e` @type ^`k2.u` @kind object;
  #L3a4776.  goto L3a473c;
  #L3a4778.  v0:= v7.`k2.p.f` @type ^`k2.u` @kind object;
  #L3a477c.  call temp:= `b`(v0, v11) @signature `Lk2/u;.b:(I)Z` @kind virtual;
  #L3a4782.  v11:= temp;
  #L3a4784.  if v11 == 0 then goto L3a47c8;
  #L3a4788.  v11:= v7.`k2.p.f` @type ^`k2.u` @kind object;
  #L3a478c.  v0:= v11.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a4790.  v11:= v11.`k2.u.e` @type ^`int`;
  #L3a4794.  call temp:= `q`(v0, v11) @signature `Ls3/v;.q:([BI)I` @kind static;
  #L3a479a.  v11:= temp;
  #L3a479c.  v0:= v7.`k2.p.o` @type ^`s3.z` @kind object;
  #L3a47a0.  v1:= v7.`k2.p.f` @type ^`k2.u` @kind object;
  #L3a47a4.  v1:= v1.`k2.u.d` @type ^`byte`[] @kind object;
  #L3a47a8.  call `M`(v0, v1, v11) @signature `Ls3/z;.M:([BI)V` @kind virtual;
  #L3a47ae.  v11:= v7.`k2.p.o` @type ^`s3.z` @kind object;
  #L3a47b2.  v0:= 4I;
  #L3a47b4.  call `O`(v11, v0) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a47ba.  v11:= v7.`k2.p.a` @type ^`k2.d0` @kind object;
  #L3a47be.  v0:= v7.`k2.p.o` @type ^`s3.z` @kind object;
  #L3a47c2.  call `a`(v11, v12, v0) @signature `Lk2/d0;.a:(JLs3/z;)V` @kind virtual;
  #L3a47c8.  v1:= v7.`k2.p.k` @type ^`k2.p$b` @kind object;
  #L3a47cc.  v5:= v7.`k2.p.l` @type ^`boolean` @kind boolean;
  #L3a47d0.  v6:= v7.`k2.p.n` @type ^`boolean` @kind boolean;
  #L3a47d4.  v2:= v8 @kind wide;
  #L3a47d6.  v4:= v10;
  #L3a47d8.  call temp:= `b`(v1, v2, v4, v5, v6) @signature `Lk2/p$b;.b:(JIZZ)Z` @kind virtual;
  #L3a47de.  v8:= temp;
  #L3a47e0.  if v8 == 0 then goto L3a47ea;
  #L3a47e4.  v8:= 0I;
  #L3a47e6.  v7.`k2.p.n` @type ^`boolean` := v8 @kind boolean;
  #L3a47ea.  return @kind void;
}
procedure `void` `h`(`k2.p` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lk2/p;.h:([BII)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3a47fc.  v0:= v1.`k2.p.l` @type ^`boolean` @kind boolean;
  #L3a4800.  if v0 == 0 then goto L3a4814;
  #L3a4804.  v0:= v1.`k2.p.k` @type ^`k2.p$b` @kind object;
  #L3a4808.  call temp:= `c`(v0) @signature `Lk2/p$b;.c:()Z` @kind virtual;
  #L3a480e.  v0:= temp;
  #L3a4810.  if v0 == 0 then goto L3a4828;
  #L3a4814.  v0:= v1.`k2.p.d` @type ^`k2.u` @kind object;
  #L3a4818.  call `a`(v0, v2, v3, v4) @signature `Lk2/u;.a:([BII)V` @kind virtual;
  #L3a481e.  v0:= v1.`k2.p.e` @type ^`k2.u` @kind object;
  #L3a4822.  call `a`(v0, v2, v3, v4) @signature `Lk2/u;.a:([BII)V` @kind virtual;
  #L3a4828.  v0:= v1.`k2.p.f` @type ^`k2.u` @kind object;
  #L3a482c.  call `a`(v0, v2, v3, v4) @signature `Lk2/u;.a:([BII)V` @kind virtual;
  #L3a4832.  v0:= v1.`k2.p.k` @type ^`k2.p$b` @kind object;
  #L3a4836.  call `a`(v0, v2, v3, v4) @signature `Lk2/p$b;.a:([BII)V` @kind virtual;
  #L3a483c.  return @kind void;
}
procedure `void` `i`(`k2.p` v7 @kind this, `long` v8 , `int` v10 , `long` v11 ) @signature `Lk2/p;.i:(JIJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a4908.  v0:= v7.`k2.p.l` @type ^`boolean` @kind boolean;
  #L3a490c.  if v0 == 0 then goto L3a4920;
  #L3a4910.  v0:= v7.`k2.p.k` @type ^`k2.p$b` @kind object;
  #L3a4914.  call temp:= `c`(v0) @signature `Lk2/p$b;.c:()Z` @kind virtual;
  #L3a491a.  v0:= temp;
  #L3a491c.  if v0 == 0 then goto L3a4934;
  #L3a4920.  v0:= v7.`k2.p.d` @type ^`k2.u` @kind object;
  #L3a4924.  call `e`(v0, v10) @signature `Lk2/u;.e:(I)V` @kind virtual;
  #L3a492a.  v0:= v7.`k2.p.e` @type ^`k2.u` @kind object;
  #L3a492e.  call `e`(v0, v10) @signature `Lk2/u;.e:(I)V` @kind virtual;
  #L3a4934.  v0:= v7.`k2.p.f` @type ^`k2.u` @kind object;
  #L3a4938.  call `e`(v0, v10) @signature `Lk2/u;.e:(I)V` @kind virtual;
  #L3a493e.  v1:= v7.`k2.p.k` @type ^`k2.p$b` @kind object;
  #L3a4942.  v2:= v8 @kind wide;
  #L3a4944.  v4:= v10;
  #L3a4946.  v5:= v11 @kind wide;
  #L3a4948.  call `h`(v1, v2, v4, v5) @signature `Lk2/p$b;.h:(JIJ)V` @kind virtual;
  #L3a494e.  return @kind void;
}
procedure `void` `a`(`k2.p` v2 @kind this) @signature `Lk2/p;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a48a4.  v0:= 0L;
  #L3a48a8.  v2.`k2.p.g` @type ^`long` := v0 @kind wide;
  #L3a48ac.  v0:= 0I;
  #L3a48ae.  v2.`k2.p.n` @type ^`boolean` := v0 @kind boolean;
  #L3a48b2.  v0:= -4.9E-324D;
  #L3a48bc.  v2.`k2.p.m` @type ^`long` := v0 @kind wide;
  #L3a48c0.  v0:= v2.`k2.p.h` @type ^`boolean`[] @kind object;
  #L3a48c4.  call `a`(v0) @signature `Ls3/v;.a:([Z)V` @kind static;
  #L3a48ca.  v0:= v2.`k2.p.d` @type ^`k2.u` @kind object;
  #L3a48ce.  call `d`(v0) @signature `Lk2/u;.d:()V` @kind virtual;
  #L3a48d4.  v0:= v2.`k2.p.e` @type ^`k2.u` @kind object;
  #L3a48d8.  call `d`(v0) @signature `Lk2/u;.d:()V` @kind virtual;
  #L3a48de.  v0:= v2.`k2.p.f` @type ^`k2.u` @kind object;
  #L3a48e2.  call `d`(v0) @signature `Lk2/u;.d:()V` @kind virtual;
  #L3a48e8.  v0:= v2.`k2.p.k` @type ^`k2.p$b` @kind object;
  #L3a48ec.  if v0 == 0 then goto L3a48f6;
  #L3a48f0.  call `g`(v0) @signature `Lk2/p$b;.g:()V` @kind virtual;
  #L3a48f6.  return @kind void;
}
procedure `void` `c`(`k2.p` v14 @kind this, `s3.z` v15 @kind object) @signature `Lk2/p;.c:(Ls3/z;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L3a4494.  call `b`(v14) @signature `Lk2/p;.b:()V` @kind direct;
  #L3a449a.  call temp:= `e`(v15) @signature `Ls3/z;.e:()I` @kind virtual;
  #L3a44a0.  v0:= temp;
  #L3a44a2.  call temp:= `f`(v15) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3a44a8.  v1:= temp;
  #L3a44aa.  call temp:= `d`(v15) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a44b0.  v2:= temp @kind object;
  #L3a44b2.  v3:= v14.`k2.p.g` @type ^`long` @kind wide;
  #L3a44b6.  call temp:= `a`(v15) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a44bc.  v5:= temp;
  #L3a44be.  v5:= (`long`) v5 @kind i2l;
  #L3a44c0.  v3:= v3 + v5 @kind long;
  #L3a44c2.  v14.`k2.p.g` @type ^`long` := v3 @kind wide;
  #L3a44c6.  v3:= v14.`k2.p.j` @type ^`a2.d0` @kind object;
  #L3a44ca.  call temp:= `a`(v15) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a44d0.  v4:= temp;
  #L3a44d2.  call `c`(v3, v15, v4) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L3a44d8.  v15:= v14.`k2.p.h` @type ^`boolean`[] @kind object;
  #L3a44dc.  call temp:= `c`(v2, v0, v1, v15) @signature `Ls3/v;.c:([BII[Z)I` @kind static;
  #L3a44e2.  v15:= temp;
  #L3a44e4.  if v15 != v1 then goto L3a44f0;
  #L3a44e8.  call `h`(v14, v2, v0, v1) @signature `Lk2/p;.h:([BII)V` @kind direct;
  #L3a44ee.  return @kind void;
  #L3a44f0.  call temp:= `f`(v2, v15) @signature `Ls3/v;.f:([BI)I` @kind static;
  #L3a44f6.  v6:= temp;
  #L3a44f8.  v3:= v15 - v0 @kind int;
  #L3a44fc.  if v3 <= 0 then goto L3a4506;
  #L3a4500.  call `h`(v14, v2, v0, v15) @signature `Lk2/p;.h:([BII)V` @kind direct;
  #L3a4506.  v10:= v1 - v15 @kind int;
  #L3a450a.  v4:= v14.`k2.p.g` @type ^`long` @kind wide;
  #L3a450e.  v7:= (`long`) v10 @kind i2l;
  #L3a4510.  v4:= v4 - v7 @kind long;
  #L3a4512.  if v3 >= 0 then goto L3a451c;
  #L3a4516.  v0:= -v3 @kind int;
  #L3a4518.  v11:= v0;
  #L3a451a.  goto L3a4520;
  #L3a451c.  v0:= 0I;
  #L3a451e.  v11:= 0I;
  #L3a4520.  v12:= v14.`k2.p.m` @type ^`long` @kind wide;
  #L3a4524.  v7:= v14 @kind object;
  #L3a4526.  v8:= v4 @kind wide;
  #L3a4528.  call `g`(v7, v8, v10, v11, v12) @signature `Lk2/p;.g:(JIIJ)V` @kind direct;
  #L3a452e.  v7:= v14.`k2.p.m` @type ^`long` @kind wide;
  #L3a4532.  v3:= v14 @kind object;
  #L3a4534.  call `i`(v3, v4, v6, v7) @signature `Lk2/p;.i:(JIJ)V` @kind direct;
  #L3a453a.  v0:= v15 + 3;
  #L3a453e.  goto L3a44d8;
}
procedure `void` `d`(`k2.p` v4 @kind this, `a2.n` v5 @kind object, `k2.i0$d` v6 @kind object) @signature `Lk2/p;.d:(La2/n;Lk2/i0$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a4550.  call `a`(v6) @signature `Lk2/i0$d;.a:()V` @kind virtual;
  #L3a4556.  call temp:= `b`(v6) @signature `Lk2/i0$d;.b:()Ljava/lang/String;` @kind virtual;
  #L3a455c.  v0:= temp @kind object;
  #L3a455e.  v4.`k2.p.i` @type ^`java.lang.String` := v0 @kind object;
  #L3a4562.  call temp:= `c`(v6) @signature `Lk2/i0$d;.c:()I` @kind virtual;
  #L3a4568.  v0:= temp;
  #L3a456a.  v1:= 2I;
  #L3a456c.  call temp:= `e`(v5, v0, v1) @signature `La2/n;.e:(II)La2/d0;` @kind interface;
  #L3a4572.  v0:= temp @kind object;
  #L3a4574.  v4.`k2.p.j` @type ^`a2.d0` := v0 @kind object;
  #L3a4578.  v1:= new `k2.p$b`;
  #L3a457c.  v2:= v4.`k2.p.b` @type ^`boolean` @kind boolean;
  #L3a4580.  v3:= v4.`k2.p.c` @type ^`boolean` @kind boolean;
  #L3a4584.  call `<init>`(v1, v0, v2, v3) @signature `Lk2/p$b;.<init>:(La2/d0;ZZ)V` @kind direct;
  #L3a458a.  v4.`k2.p.k` @type ^`k2.p$b` := v1 @kind object;
  #L3a458e.  v0:= v4.`k2.p.a` @type ^`k2.d0` @kind object;
  #L3a4592.  call `b`(v0, v5, v6) @signature `Lk2/d0;.b:(La2/n;Lk2/i0$d;)V` @kind virtual;
  #L3a4598.  return @kind void;
}
procedure `void` `e`(`k2.p` v0 @kind this) @signature `Lk2/p;.e:()V` @AccessFlag PUBLIC {
    temp;

  #L3a4850.  return @kind void;
}
procedure `void` `f`(`k2.p` v3 @kind this, `long` v4 , `int` v6 ) @signature `Lk2/p;.f:(JI)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a4864.  v0:= -4.9E-324D;
  #L3a486e.  v2:= lcmp(v4, v0);
  #L3a4872.  if v2 == 0 then goto L3a487a;
  #L3a4876.  v3.`k2.p.m` @type ^`long` := v4 @kind wide;
  #L3a487a.  v4:= v3.`k2.p.n` @type ^`boolean` @kind boolean;
  #L3a487e.  v5:= v6 ^& 2;
  #L3a4882.  if v5 == 0 then goto L3a488a;
  #L3a4886.  v5:= 1I;
  #L3a4888.  goto L3a488c;
  #L3a488a.  v5:= 0I;
  #L3a488c.  v4:= v4 ^| v5 @kind int;
  #L3a488e.  v3.`k2.p.n` @type ^`boolean` := v4 @kind boolean;
  #L3a4892.  return @kind void;
}
