record `k2.w` @kind class @AccessFlag PUBLIC_FINAL extends `k2.i0` @kind interface {
  `k2.m` `k2.w.a` @AccessFlag PRIVATE_FINAL;
  `s3.y` `k2.w.b` @AccessFlag PRIVATE_FINAL;
  `int` `k2.w.c` @AccessFlag PRIVATE;
  `int` `k2.w.d` @AccessFlag PRIVATE;
  `s3.h0` `k2.w.e` @AccessFlag PRIVATE;
  `boolean` `k2.w.f` @AccessFlag PRIVATE;
  `boolean` `k2.w.g` @AccessFlag PRIVATE;
  `boolean` `k2.w.h` @AccessFlag PRIVATE;
  `int` `k2.w.i` @AccessFlag PRIVATE;
  `int` `k2.w.j` @AccessFlag PRIVATE;
  `boolean` `k2.w.k` @AccessFlag PRIVATE;
  `long` `k2.w.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`k2.w` v1 @kind this, `k2.m` v2 @kind object) @signature `Lk2/w;.<init>:(Lk2/m;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a6678.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a667e.  v1.`k2.w.a` @type ^`k2.m` := v2 @kind object;
  #L3a6682.  v2:= new `s3.y`;
  #L3a6686.  v0:= 10I;
  #L3a668a.  v0:= new `byte`[v0];
  #L3a668e.  call `<init>`(v2, v0) @signature `Ls3/y;.<init>:([B)V` @kind direct;
  #L3a6694.  v1.`k2.w.b` @type ^`s3.y` := v2 @kind object;
  #L3a6698.  v2:= 0I;
  #L3a669a.  v1.`k2.w.c` @type ^`int` := v2;
  #L3a669e.  return @kind void;
}
procedure `boolean` `d`(`k2.w` v3 @kind this, `s3.z` v4 @kind object, `byte`[] v5 @kind object, `int` v6 ) @signature `Lk2/w;.d:(Ls3/z;[BI)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3a64e8.  call temp:= `a`(v4) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a64ee.  v0:= temp;
  #L3a64f0.  v1:= v3.`k2.w.d` @type ^`int`;
  #L3a64f4.  v1:= v6 - v1 @kind int;
  #L3a64f8.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3a64fe.  v0:= temp;
  #L3a6500.  v1:= 1I;
  #L3a6502.  if v0 > 0 then goto L3a6508;
  #L3a6506.  return v1;
  #L3a6508.  if v5 != 0 then goto L3a6514;
  #L3a650c.  call `P`(v4, v0) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L3a6512.  goto L3a651e;
  #L3a6514.  v2:= v3.`k2.w.d` @type ^`int`;
  #L3a6518.  call `j`(v4, v5, v2, v0) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L3a651e.  v4:= v3.`k2.w.d` @type ^`int`;
  #L3a6522.  v4:= v4 + v0 @kind int;
  #L3a6524.  v3.`k2.w.d` @type ^`int` := v4;
  #L3a6528.  if v4 != v6 then goto L3a652e;
  #L3a652c.  goto L3a6530;
  #L3a652e.  v1:= 0I;
  #L3a6530.  return v1;
}
procedure `boolean` `e`(`k2.w` v7 @kind this) @signature `Lk2/w;.e:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a6544.  v0:= v7.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a6548.  v1:= 0I;
  #L3a654a.  call `p`(v0, v1) @signature `Ls3/y;.p:(I)V` @kind virtual;
  #L3a6550.  v0:= v7.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a6554.  v2:= 24I;
  #L3a6558.  call temp:= `h`(v0, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a655e.  v0:= temp;
  #L3a6560.  v2:= "PesReader" @kind object;
  #L3a6564.  v3:= 1I;
  #L3a6566.  v4:= -1I;
  #L3a6568.  if v0 == v3 then goto L3a659a;
  #L3a656c.  v3:= new `java.lang.StringBuilder`;
  #L3a6570.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a6576.  v5:= "Unexpected start code prefix: " @kind object;
  #L3a657a.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a6580.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a6586.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a658c.  v0:= temp @kind object;
  #L3a658e.  call `h`(v2, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3a6594.  v7.`k2.w.j` @type ^`int` := v4;
  #L3a6598.  return v1;
  #L3a659a.  v0:= v7.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a659e.  v1:= 8I;
  #L3a65a2.  call `r`(v0, v1) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a65a8.  v0:= v7.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a65ac.  v5:= 16I;
  #L3a65b0.  call temp:= `h`(v0, v5) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a65b6.  v0:= temp;
  #L3a65b8.  v5:= v7.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a65bc.  v6:= 5I;
  #L3a65be.  call `r`(v5, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a65c4.  v5:= v7.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a65c8.  call temp:= `g`(v5) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L3a65ce.  v5:= temp;
  #L3a65d0.  v7.`k2.w.k` @type ^`boolean` := v5 @kind boolean;
  #L3a65d4.  v5:= v7.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a65d8.  v6:= 2I;
  #L3a65da.  call `r`(v5, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a65e0.  v5:= v7.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a65e4.  call temp:= `g`(v5) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L3a65ea.  v5:= temp;
  #L3a65ec.  v7.`k2.w.f` @type ^`boolean` := v5 @kind boolean;
  #L3a65f0.  v5:= v7.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a65f4.  call temp:= `g`(v5) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L3a65fa.  v5:= temp;
  #L3a65fc.  v7.`k2.w.g` @type ^`boolean` := v5 @kind boolean;
  #L3a6600.  v5:= v7.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a6604.  v6:= 6I;
  #L3a6606.  call `r`(v5, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a660c.  v5:= v7.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a6610.  call temp:= `h`(v5, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a6616.  v1:= temp;
  #L3a6618.  v7.`k2.w.i` @type ^`int` := v1;
  #L3a661c.  if v0 != 0 then goto L3a6626;
  #L3a6620.  v7.`k2.w.j` @type ^`int` := v4;
  #L3a6624.  goto L3a6664;
  #L3a6626.  v0:= v0 + v6 @kind int;
  #L3a6628.  v0:= v0 + -9;
  #L3a662c.  v0:= v0 - v1 @kind int;
  #L3a662e.  v7.`k2.w.j` @type ^`int` := v0;
  #L3a6632.  if v0 >= 0 then goto L3a6664;
  #L3a6636.  v0:= new `java.lang.StringBuilder`;
  #L3a663a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a6640.  v1:= "Found negative packet payload size: " @kind object;
  #L3a6644.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a664a.  v1:= v7.`k2.w.j` @type ^`int`;
  #L3a664e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a6654.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a665a.  v0:= temp @kind object;
  #L3a665c.  call `h`(v2, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3a6662.  goto L3a6620;
  #L3a6664.  return v3;
}
procedure `void` `f`(`k2.w` v10 @kind this) @signature `Lk2/w;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3a6894.  v0:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a6898.  v1:= 0I;
  #L3a689a.  call `p`(v0, v1) @signature `Ls3/y;.p:(I)V` @kind virtual;
  #L3a68a0.  v0:= -4.9E-324D;
  #L3a68aa.  v10.`k2.w.l` @type ^`long` := v0 @kind wide;
  #L3a68ae.  v0:= v10.`k2.w.f` @type ^`boolean` @kind boolean;
  #L3a68b2.  if v0 == 0 then goto L3a69a8;
  #L3a68b6.  v0:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a68ba.  v1:= 4I;
  #L3a68bc.  call `r`(v0, v1) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a68c2.  v0:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a68c6.  v2:= 3I;
  #L3a68c8.  call temp:= `h`(v0, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a68ce.  v0:= temp;
  #L3a68d0.  v3:= (`long`) v0 @kind i2l;
  #L3a68d2.  v0:= 30I;
  #L3a68d6.  v3:= v3 ^< v0 @kind long;
  #L3a68d8.  v5:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a68dc.  v6:= 1I;
  #L3a68de.  call `r`(v5, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a68e4.  v5:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a68e8.  v7:= 15I;
  #L3a68ec.  call temp:= `h`(v5, v7) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a68f2.  v5:= temp;
  #L3a68f4.  v5:= v5 ^< v7 @kind int;
  #L3a68f6.  v8:= (`long`) v5 @kind i2l;
  #L3a68f8.  v3:= v3 ^| v8 @kind long;
  #L3a68fa.  v5:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a68fe.  call `r`(v5, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a6904.  v5:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a6908.  call temp:= `h`(v5, v7) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a690e.  v5:= temp;
  #L3a6910.  v8:= (`long`) v5 @kind i2l;
  #L3a6912.  v3:= v3 ^| v8 @kind long;
  #L3a6914.  v5:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a6918.  call `r`(v5, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a691e.  v5:= v10.`k2.w.h` @type ^`boolean` @kind boolean;
  #L3a6922.  if v5 != 0 then goto L3a6998;
  #L3a6926.  v5:= v10.`k2.w.g` @type ^`boolean` @kind boolean;
  #L3a692a.  if v5 == 0 then goto L3a6998;
  #L3a692e.  v5:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a6932.  call `r`(v5, v1) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a6938.  v1:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a693c.  call temp:= `h`(v1, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a6942.  v1:= temp;
  #L3a6944.  v1:= (`long`) v1 @kind i2l;
  #L3a6946.  v0:= v1 ^< v0 @kind long;
  #L3a694a.  v2:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a694e.  call `r`(v2, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a6954.  v2:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a6958.  call temp:= `h`(v2, v7) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a695e.  v2:= temp;
  #L3a6960.  v2:= v2 ^< v7 @kind int;
  #L3a6962.  v8:= (`long`) v2 @kind i2l;
  #L3a6964.  v0:= v0 ^| v8 @kind long;
  #L3a6966.  v2:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a696a.  call `r`(v2, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a6970.  v2:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a6974.  call temp:= `h`(v2, v7) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a697a.  v2:= temp;
  #L3a697c.  v7:= (`long`) v2 @kind i2l;
  #L3a697e.  v0:= v0 ^| v7 @kind long;
  #L3a6980.  v2:= v10.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a6984.  call `r`(v2, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a698a.  v2:= v10.`k2.w.e` @type ^`s3.h0` @kind object;
  #L3a698e.  call temp:= `b`(v2, v0) @signature `Ls3/h0;.b:(J)J` @kind virtual;
  #L3a6994.  v10.`k2.w.h` @type ^`boolean` := v6 @kind boolean;
  #L3a6998.  v0:= v10.`k2.w.e` @type ^`s3.h0` @kind object;
  #L3a699c.  call temp:= `b`(v0, v3) @signature `Ls3/h0;.b:(J)J` @kind virtual;
  #L3a69a2.  v0:= temp @kind wide;
  #L3a69a4.  v10.`k2.w.l` @type ^`long` := v0 @kind wide;
  #L3a69a8.  return @kind void;
}
procedure `void` `g`(`k2.w` v0 @kind this, `int` v1 ) @signature `Lk2/w;.g:(I)V` @AccessFlag PRIVATE {
    temp;

  #L3a69e8.  v0.`k2.w.c` @type ^`int` := v1;
  #L3a69ec.  v1:= 0I;
  #L3a69ee.  v0.`k2.w.d` @type ^`int` := v1;
  #L3a69f2.  return @kind void;
}
procedure `void` `a`(`k2.w` v1 @kind this) @signature `Lk2/w;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a69bc.  v0:= 0I;
  #L3a69be.  v1.`k2.w.c` @type ^`int` := v0;
  #L3a69c2.  v1.`k2.w.d` @type ^`int` := v0;
  #L3a69c6.  v1.`k2.w.h` @type ^`boolean` := v0 @kind boolean;
  #L3a69ca.  v0:= v1.`k2.w.a` @type ^`k2.m` @kind object;
  #L3a69ce.  call `a`(v0) @signature `Lk2/m;.a:()V` @kind interface;
  #L3a69d4.  return @kind void;
}
procedure `void` `b`(`k2.w` v0 @kind this, `s3.h0` v1 @kind object, `a2.n` v2 @kind object, `k2.i0$d` v3 @kind object) @signature `Lk2/w;.b:(Ls3/h0;La2/n;Lk2/i0$d;)V` @AccessFlag PUBLIC {
    temp;

  #L3a6874.  v0.`k2.w.e` @type ^`s3.h0` := v1 @kind object;
  #L3a6878.  v1:= v0.`k2.w.a` @type ^`k2.m` @kind object;
  #L3a687c.  call `d`(v1, v2, v3) @signature `Lk2/m;.d:(La2/n;Lk2/i0$d;)V` @kind interface;
  #L3a6882.  return @kind void;
}
procedure `void` `c`(`k2.w` v7 @kind this, `s3.z` v8 @kind object, `int` v9 ) @signature `Lk2/w;.c:(Ls3/z;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a66b0.  v0:= v7.`k2.w.e` @type ^`s3.h0` @kind object;
  #L3a66b4.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a66ba.  v0:= v9 ^& 1;
  #L3a66be.  v1:= -1I;
  #L3a66c0.  v2:= 3I;
  #L3a66c2.  v3:= 2I;
  #L3a66c4.  v4:= 1I;
  #L3a66c6.  if v0 == 0 then goto L3a673e;
  #L3a66ca.  v0:= v7.`k2.w.c` @type ^`int`;
  #L3a66ce.  if v0 == 0 then goto L3a6738;
  #L3a66d2.  if v0 == v4 then goto L3a6738;
  #L3a66d6.  v5:= "PesReader" @kind object;
  #L3a66da.  if v0 == v3 then goto L3a672e;
  #L3a66de.  if v0 != v2 then goto L3a6722;
  #L3a66e2.  v0:= v7.`k2.w.j` @type ^`int`;
  #L3a66e6.  if v0 == v1 then goto L3a67a8;
  #L3a66ea.  v0:= new `java.lang.StringBuilder`;
  #L3a66ee.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a66f4.  v6:= "Unexpected start indicator: expected " @kind object;
  #L3a66f8.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a66fe.  v6:= v7.`k2.w.j` @type ^`int`;
  #L3a6702.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a6708.  v6:= " more bytes" @kind object;
  #L3a670c.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a6712.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a6718.  v0:= temp @kind object;
  #L3a671a.  call `h`(v5, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3a6720.  goto L3a67a8;
  #L3a6722.  v8:= new `java.lang.IllegalStateException`;
  #L3a6726.  call `<init>`(v8) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3a672c.  throw v8;
  #L3a672e.  v0:= "Unexpected start indicator reading extended header" @kind object;
  #L3a6732.  call `h`(v5, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3a6738.  call `g`(v7, v4) @signature `Lk2/w;.g:(I)V` @kind direct;
  #L3a673e.  call temp:= `a`(v8) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a6744.  v0:= temp;
  #L3a6746.  if v0 <= 0 then goto L3a6860;
  #L3a674a.  v0:= v7.`k2.w.c` @type ^`int`;
  #L3a674e.  if v0 == 0 then goto L3a684e;
  #L3a6752.  v5:= 0I;
  #L3a6754.  if v0 == v4 then goto L3a681e;
  #L3a6758.  if v0 == v3 then goto L3a67c0;
  #L3a675c.  if v0 != v2 then goto L3a67b4;
  #L3a6760.  call temp:= `a`(v8) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a6766.  v0:= temp;
  #L3a6768.  v6:= v7.`k2.w.j` @type ^`int`;
  #L3a676c.  if v6 != v1 then goto L3a6772;
  #L3a6770.  goto L3a6776;
  #L3a6772.  v5:= v0 - v6 @kind int;
  #L3a6776.  if v5 <= 0 then goto L3a678c;
  #L3a677a.  v0:= v0 - v5 @kind int;
  #L3a677c.  call temp:= `e`(v8) @signature `Ls3/z;.e:()I` @kind virtual;
  #L3a6782.  v5:= temp;
  #L3a6784.  v5:= v5 + v0 @kind int;
  #L3a6786.  call `N`(v8, v5) @signature `Ls3/z;.N:(I)V` @kind virtual;
  #L3a678c.  v5:= v7.`k2.w.a` @type ^`k2.m` @kind object;
  #L3a6790.  call `c`(v5, v8) @signature `Lk2/m;.c:(Ls3/z;)V` @kind interface;
  #L3a6796.  v5:= v7.`k2.w.j` @type ^`int`;
  #L3a679a.  if v5 == v1 then goto L3a673e;
  #L3a679e.  v5:= v5 - v0 @kind int;
  #L3a67a0.  v7.`k2.w.j` @type ^`int` := v5;
  #L3a67a4.  if v5 != 0 then goto L3a673e;
  #L3a67a8.  v0:= v7.`k2.w.a` @type ^`k2.m` @kind object;
  #L3a67ac.  call `e`(v0) @signature `Lk2/m;.e:()V` @kind interface;
  #L3a67b2.  goto L3a6738;
  #L3a67b4.  v8:= new `java.lang.IllegalStateException`;
  #L3a67b8.  call `<init>`(v8) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3a67be.  throw v8;
  #L3a67c0.  v0:= 10I;
  #L3a67c4.  v6:= v7.`k2.w.i` @type ^`int`;
  #L3a67c8.  call temp:= `min`(v0, v6) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3a67ce.  v0:= temp;
  #L3a67d0.  v6:= v7.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a67d4.  v6:= v6.`s3.y.a` @type ^`byte`[] @kind object;
  #L3a67d8.  call temp:= `d`(v7, v8, v6, v0) @signature `Lk2/w;.d:(Ls3/z;[BI)Z` @kind direct;
  #L3a67de.  v0:= temp;
  #L3a67e0.  if v0 == 0 then goto L3a673e;
  #L3a67e4.  v0:= 0I;
  #L3a67e6.  v6:= v7.`k2.w.i` @type ^`int`;
  #L3a67ea.  call temp:= `d`(v7, v8, v0, v6) @signature `Lk2/w;.d:(Ls3/z;[BI)Z` @kind direct;
  #L3a67f0.  v0:= temp;
  #L3a67f2.  if v0 == 0 then goto L3a673e;
  #L3a67f6.  call `f`(v7) @signature `Lk2/w;.f:()V` @kind direct;
  #L3a67fc.  v0:= v7.`k2.w.k` @type ^`boolean` @kind boolean;
  #L3a6800.  if v0 == 0 then goto L3a6806;
  #L3a6804.  v5:= 4I;
  #L3a6806.  v9:= v9 ^| v5 @kind int;
  #L3a6808.  v0:= v7.`k2.w.a` @type ^`k2.m` @kind object;
  #L3a680c.  v5:= v7.`k2.w.l` @type ^`long` @kind wide;
  #L3a6810.  call `f`(v0, v5, v9) @signature `Lk2/m;.f:(JI)V` @kind interface;
  #L3a6816.  call `g`(v7, v2) @signature `Lk2/w;.g:(I)V` @kind direct;
  #L3a681c.  goto L3a673e;
  #L3a681e.  v0:= v7.`k2.w.b` @type ^`s3.y` @kind object;
  #L3a6822.  v0:= v0.`s3.y.a` @type ^`byte`[] @kind object;
  #L3a6826.  v6:= 9I;
  #L3a682a.  call temp:= `d`(v7, v8, v0, v6) @signature `Lk2/w;.d:(Ls3/z;[BI)Z` @kind direct;
  #L3a6830.  v0:= temp;
  #L3a6832.  if v0 == 0 then goto L3a673e;
  #L3a6836.  call temp:= `e`(v7) @signature `Lk2/w;.e:()Z` @kind direct;
  #L3a683c.  v0:= temp;
  #L3a683e.  if v0 == 0 then goto L3a6844;
  #L3a6842.  v5:= 2I;
  #L3a6844.  call `g`(v7, v5) @signature `Lk2/w;.g:(I)V` @kind direct;
  #L3a684a.  goto L3a673e;
  #L3a684e.  call temp:= `a`(v8) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a6854.  v0:= temp;
  #L3a6856.  call `P`(v8, v0) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L3a685c.  goto L3a673e;
  #L3a6860.  return @kind void;
}
