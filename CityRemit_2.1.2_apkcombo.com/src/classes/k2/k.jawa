record `k2.k` @kind class @AccessFlag PUBLIC_FINAL extends `k2.m` @kind interface {
  `s3.z` `k2.k.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `k2.k.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `k2.k.c` @AccessFlag PRIVATE;
  `a2.d0` `k2.k.d` @AccessFlag PRIVATE;
  `int` `k2.k.e` @AccessFlag PRIVATE;
  `int` `k2.k.f` @AccessFlag PRIVATE;
  `int` `k2.k.g` @AccessFlag PRIVATE;
  `long` `k2.k.h` @AccessFlag PRIVATE;
  `v1.j1` `k2.k.i` @AccessFlag PRIVATE;
  `int` `k2.k.j` @AccessFlag PRIVATE;
  `long` `k2.k.k` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`k2.k` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lk2/k;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a27ec.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a27f2.  v0:= new `s3.z`;
  #L3a27f6.  v1:= 18I;
  #L3a27fa.  v1:= new `byte`[v1];
  #L3a27fe.  call `<init>`(v0, v1) @signature `Ls3/z;.<init>:([B)V` @kind direct;
  #L3a2804.  v2.`k2.k.a` @type ^`s3.z` := v0 @kind object;
  #L3a2808.  v0:= 0I;
  #L3a280a.  v2.`k2.k.e` @type ^`int` := v0;
  #L3a280e.  v0:= -4.9E-324D;
  #L3a2818.  v2.`k2.k.k` @type ^`long` := v0 @kind wide;
  #L3a281c.  v2.`k2.k.b` @type ^`java.lang.String` := v3 @kind object;
  #L3a2820.  return @kind void;
}
procedure `boolean` `b`(`k2.k` v2 @kind this, `s3.z` v3 @kind object, `byte`[] v4 @kind object, `int` v5 ) @signature `Lk2/k;.b:(Ls3/z;[BI)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3a2708.  call temp:= `a`(v3) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a270e.  v0:= temp;
  #L3a2710.  v1:= v2.`k2.k.f` @type ^`int`;
  #L3a2714.  v1:= v5 - v1 @kind int;
  #L3a2718.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3a271e.  v0:= temp;
  #L3a2720.  v1:= v2.`k2.k.f` @type ^`int`;
  #L3a2724.  call `j`(v3, v4, v1, v0) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L3a272a.  v3:= v2.`k2.k.f` @type ^`int`;
  #L3a272e.  v3:= v3 + v0 @kind int;
  #L3a2730.  v2.`k2.k.f` @type ^`int` := v3;
  #L3a2734.  if v3 != v5 then goto L3a273c;
  #L3a2738.  v3:= 1I;
  #L3a273a.  goto L3a273e;
  #L3a273c.  v3:= 0I;
  #L3a273e.  return v3;
}
procedure `void` `g`(`k2.k` v5 @kind this) @signature `Lk2/k;.g:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a29b8.  v0:= v5.`k2.k.a` @type ^`s3.z` @kind object;
  #L3a29bc.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a29c2.  v0:= temp @kind object;
  #L3a29c4.  v1:= v5.`k2.k.i` @type ^`v1.j1` @kind object;
  #L3a29c8.  if v1 != 0 then goto L3a29ec;
  #L3a29cc.  v1:= v5.`k2.k.c` @type ^`java.lang.String` @kind object;
  #L3a29d0.  v2:= v5.`k2.k.b` @type ^`java.lang.String` @kind object;
  #L3a29d4.  v3:= 0I;
  #L3a29d6.  call temp:= `g`(v0, v1, v2, v3) @signature `Lx1/a0;.g:([BLjava/lang/String;Ljava/lang/String;Lz1/m;)Lv1/j1;` @kind static;
  #L3a29dc.  v1:= temp @kind object;
  #L3a29de.  v5.`k2.k.i` @type ^`v1.j1` := v1 @kind object;
  #L3a29e2.  v2:= v5.`k2.k.d` @type ^`a2.d0` @kind object;
  #L3a29e6.  call `b`(v2, v1) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L3a29ec.  call temp:= `a`(v0) @signature `Lx1/a0;.a:([B)I` @kind static;
  #L3a29f2.  v1:= temp;
  #L3a29f4.  v5.`k2.k.j` @type ^`int` := v1;
  #L3a29f8.  v1:= 1000000L;
  #L3a29fe.  call temp:= `f`(v0) @signature `Lx1/a0;.f:([B)I` @kind static;
  #L3a2a04.  v0:= temp;
  #L3a2a06.  v3:= (`long`) v0 @kind i2l;
  #L3a2a08.  v3:= v3 * v1 @kind long;
  #L3a2a0c.  v0:= v5.`k2.k.i` @type ^`v1.j1` @kind object;
  #L3a2a10.  v0:= v0.`v1.j1.N` @type ^`int`;
  #L3a2a14.  v0:= (`long`) v0 @kind i2l;
  #L3a2a16.  v3:= v3 / v0 @kind long;
  #L3a2a18.  v0:= (`int`) v3 @kind l2i;
  #L3a2a1a.  v0:= (`long`) v0 @kind i2l;
  #L3a2a1c.  v5.`k2.k.h` @type ^`long` := v0 @kind wide;
  #L3a2a20.  return @kind void;
}
procedure `boolean` `h`(`k2.k` v5 @kind this, `s3.z` v6 @kind object) @signature `Lk2/k;.h:(Ls3/z;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a2750.  call temp:= `a`(v6) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a2756.  v0:= temp;
  #L3a2758.  v1:= 0I;
  #L3a275a.  if v0 <= 0 then goto L3a27da;
  #L3a275e.  v0:= v5.`k2.k.g` @type ^`int`;
  #L3a2762.  v0:= v0 ^< 8;
  #L3a2766.  v5.`k2.k.g` @type ^`int` := v0;
  #L3a276a.  call temp:= `C`(v6) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3a2770.  v2:= temp;
  #L3a2772.  v0:= v0 ^| v2 @kind int;
  #L3a2774.  v5.`k2.k.g` @type ^`int` := v0;
  #L3a2778.  call temp:= `d`(v0) @signature `Lx1/a0;.d:(I)Z` @kind static;
  #L3a277e.  v0:= temp;
  #L3a2780.  if v0 == 0 then goto L3a2750;
  #L3a2784.  v6:= v5.`k2.k.a` @type ^`s3.z` @kind object;
  #L3a2788.  call temp:= `d`(v6) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a278e.  v6:= temp @kind object;
  #L3a2790.  v0:= v5.`k2.k.g` @type ^`int`;
  #L3a2794.  v2:= v0 ^> 24;
  #L3a2798.  v2:= v2 ^& 255;
  #L3a279c.  v2:= (`byte`) v2 @kind i2b;
  #L3a279e.  v6[v1]:= v2 @kind byte;
  #L3a27a2.  v2:= v0 ^> 16;
  #L3a27a6.  v2:= v2 ^& 255;
  #L3a27aa.  v2:= (`byte`) v2 @kind i2b;
  #L3a27ac.  v3:= 1I;
  #L3a27ae.  v6[v3]:= v2 @kind byte;
  #L3a27b2.  v2:= 2I;
  #L3a27b4.  v4:= v0 ^> 8;
  #L3a27b8.  v4:= v4 ^& 255;
  #L3a27bc.  v4:= (`byte`) v4 @kind i2b;
  #L3a27be.  v6[v2]:= v4 @kind byte;
  #L3a27c2.  v2:= 3I;
  #L3a27c4.  v0:= v0 ^& 255;
  #L3a27c8.  v0:= (`byte`) v0 @kind i2b;
  #L3a27ca.  v6[v2]:= v0 @kind byte;
  #L3a27ce.  v6:= 4I;
  #L3a27d0.  v5.`k2.k.f` @type ^`int` := v6;
  #L3a27d4.  v5.`k2.k.g` @type ^`int` := v1;
  #L3a27d8.  return v3;
  #L3a27da.  return v1;
}
procedure `void` `a`(`k2.k` v2 @kind this) @signature `Lk2/k;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a2a34.  v0:= 0I;
  #L3a2a36.  v2.`k2.k.e` @type ^`int` := v0;
  #L3a2a3a.  v2.`k2.k.f` @type ^`int` := v0;
  #L3a2a3e.  v2.`k2.k.g` @type ^`int` := v0;
  #L3a2a42.  v0:= -4.9E-324D;
  #L3a2a4c.  v2.`k2.k.k` @type ^`long` := v0 @kind wide;
  #L3a2a50.  return @kind void;
}
procedure `void` `c`(`k2.k` v10 @kind this, `s3.z` v11 @kind object) @signature `Lk2/k;.c:(Ls3/z;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3a2834.  v0:= v10.`k2.k.d` @type ^`a2.d0` @kind object;
  #L3a2838.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a283e.  call temp:= `a`(v11) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a2844.  v0:= temp;
  #L3a2846.  if v0 <= 0 then goto L3a292e;
  #L3a284a.  v0:= v10.`k2.k.e` @type ^`int`;
  #L3a284e.  v1:= 1I;
  #L3a2850.  if v0 == 0 then goto L3a291c;
  #L3a2854.  v2:= 0I;
  #L3a2856.  v3:= 2I;
  #L3a2858.  if v0 == v1 then goto L3a28dc;
  #L3a285c.  if v0 != v3 then goto L3a28d0;
  #L3a2860.  call temp:= `a`(v11) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a2866.  v0:= temp;
  #L3a2868.  v1:= v10.`k2.k.j` @type ^`int`;
  #L3a286c.  v3:= v10.`k2.k.f` @type ^`int`;
  #L3a2870.  v1:= v1 - v3 @kind int;
  #L3a2872.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3a2878.  v0:= temp;
  #L3a287a.  v1:= v10.`k2.k.d` @type ^`a2.d0` @kind object;
  #L3a287e.  call `c`(v1, v11, v0) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L3a2884.  v1:= v10.`k2.k.f` @type ^`int`;
  #L3a2888.  v1:= v1 + v0 @kind int;
  #L3a288a.  v10.`k2.k.f` @type ^`int` := v1;
  #L3a288e.  v7:= v10.`k2.k.j` @type ^`int`;
  #L3a2892.  if v1 != v7 then goto L3a283e;
  #L3a2896.  v4:= v10.`k2.k.k` @type ^`long` @kind wide;
  #L3a289a.  v0:= -4.9E-324D;
  #L3a28a4.  v3:= lcmp(v4, v0);
  #L3a28a8.  if v3 == 0 then goto L3a28ca;
  #L3a28ac.  v3:= v10.`k2.k.d` @type ^`a2.d0` @kind object;
  #L3a28b0.  v6:= 1I;
  #L3a28b2.  v8:= 0I;
  #L3a28b4.  v9:= 0I;
  #L3a28b6.  call `f`(v3, v4, v6, v7, v8, v9) @signature `La2/d0;.f:(JIIILa2/d0$a;)V` @kind interface;
  #L3a28bc.  v0:= v10.`k2.k.k` @type ^`long` @kind wide;
  #L3a28c0.  v3:= v10.`k2.k.h` @type ^`long` @kind wide;
  #L3a28c4.  v0:= v0 + v3 @kind long;
  #L3a28c6.  v10.`k2.k.k` @type ^`long` := v0 @kind wide;
  #L3a28ca.  v10.`k2.k.e` @type ^`int` := v2;
  #L3a28ce.  goto L3a283e;
  #L3a28d0.  v11:= new `java.lang.IllegalStateException`;
  #L3a28d4.  call `<init>`(v11) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3a28da.  throw v11;
  #L3a28dc.  v0:= v10.`k2.k.a` @type ^`s3.z` @kind object;
  #L3a28e0.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a28e6.  v0:= temp @kind object;
  #L3a28e8.  v1:= 18I;
  #L3a28ec.  call temp:= `b`(v10, v11, v0, v1) @signature `Lk2/k;.b:(Ls3/z;[BI)Z` @kind direct;
  #L3a28f2.  v0:= temp;
  #L3a28f4.  if v0 == 0 then goto L3a283e;
  #L3a28f8.  call `g`(v10) @signature `Lk2/k;.g:()V` @kind direct;
  #L3a28fe.  v0:= v10.`k2.k.a` @type ^`s3.z` @kind object;
  #L3a2902.  call `O`(v0, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a2908.  v0:= v10.`k2.k.d` @type ^`a2.d0` @kind object;
  #L3a290c.  v2:= v10.`k2.k.a` @type ^`s3.z` @kind object;
  #L3a2910.  call `c`(v0, v2, v1) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L3a2916.  v10.`k2.k.e` @type ^`int` := v3;
  #L3a291a.  goto L3a283e;
  #L3a291c.  call temp:= `h`(v10, v11) @signature `Lk2/k;.h:(Ls3/z;)Z` @kind direct;
  #L3a2922.  v0:= temp;
  #L3a2924.  if v0 == 0 then goto L3a283e;
  #L3a2928.  v10.`k2.k.e` @type ^`int` := v1;
  #L3a292c.  goto L3a283e;
  #L3a292e.  return @kind void;
}
procedure `void` `d`(`k2.k` v1 @kind this, `a2.n` v2 @kind object, `k2.i0$d` v3 @kind object) @signature `Lk2/k;.d:(La2/n;Lk2/i0$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a2940.  call `a`(v3) @signature `Lk2/i0$d;.a:()V` @kind virtual;
  #L3a2946.  call temp:= `b`(v3) @signature `Lk2/i0$d;.b:()Ljava/lang/String;` @kind virtual;
  #L3a294c.  v0:= temp @kind object;
  #L3a294e.  v1.`k2.k.c` @type ^`java.lang.String` := v0 @kind object;
  #L3a2952.  call temp:= `c`(v3) @signature `Lk2/i0$d;.c:()I` @kind virtual;
  #L3a2958.  v3:= temp;
  #L3a295a.  v0:= 1I;
  #L3a295c.  call temp:= `e`(v2, v3, v0) @signature `La2/n;.e:(II)La2/d0;` @kind interface;
  #L3a2962.  v2:= temp @kind object;
  #L3a2964.  v1.`k2.k.d` @type ^`a2.d0` := v2 @kind object;
  #L3a2968.  return @kind void;
}
procedure `void` `e`(`k2.k` v0 @kind this) @signature `Lk2/k;.e:()V` @AccessFlag PUBLIC {
    temp;

  #L3a297c.  return @kind void;
}
procedure `void` `f`(`k2.k` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lk2/k;.f:(JI)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a2990.  v0:= -4.9E-324D;
  #L3a299a.  v5:= lcmp(v3, v0);
  #L3a299e.  if v5 == 0 then goto L3a29a6;
  #L3a29a2.  v2.`k2.k.k` @type ^`long` := v3 @kind wide;
  #L3a29a6.  return @kind void;
}
