record `k2.i0$d` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `k2.i0$d.a` @AccessFlag PRIVATE_FINAL;
  `int` `k2.i0$d.b` @AccessFlag PRIVATE_FINAL;
  `int` `k2.i0$d.c` @AccessFlag PRIVATE_FINAL;
  `int` `k2.i0$d.d` @AccessFlag PRIVATE;
  `java.lang.String` `k2.i0$d.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`k2.i0$d` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lk2/i0$d;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a979c.  v0:= -2147483648I;
  #L3a97a0.  call `<init>`(v1, v0, v2, v3) @signature `Lk2/i0$d;.<init>:(III)V` @kind direct;
  #L3a97a6.  return @kind void;
}
procedure `void` `<init>`(`k2.i0$d` v3 @kind this, `int` v4 , `int` v5 , `int` v6 ) @signature `Lk2/i0$d;.<init>:(III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3a97b8.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a97be.  v0:= "" @kind object;
  #L3a97c2.  v1:= -2147483648I;
  #L3a97c6.  if v4 == v1 then goto L3a97ee;
  #L3a97ca.  v2:= new `java.lang.StringBuilder`;
  #L3a97ce.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a97d4.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a97da.  v4:= "/" @kind object;
  #L3a97de.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a97e4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a97ea.  v4:= temp @kind object;
  #L3a97ec.  goto L3a97f0;
  #L3a97ee.  v4:= v0 @kind object;
  #L3a97f0.  v3.`k2.i0$d.a` @type ^`java.lang.String` := v4 @kind object;
  #L3a97f4.  v3.`k2.i0$d.b` @type ^`int` := v5;
  #L3a97f8.  v3.`k2.i0$d.c` @type ^`int` := v6;
  #L3a97fc.  v3.`k2.i0$d.d` @type ^`int` := v1;
  #L3a9800.  v3.`k2.i0$d.e` @type ^`java.lang.String` := v0 @kind object;
  #L3a9804.  return @kind void;
}
procedure `void` `d`(`k2.i0$d` v2 @kind this) @signature `Lk2/i0$d;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3a9870.  v0:= v2.`k2.i0$d.d` @type ^`int`;
  #L3a9874.  v1:= -2147483648I;
  #L3a9878.  if v0 == v1 then goto L3a987e;
  #L3a987c.  return @kind void;
  #L3a987e.  v0:= new `java.lang.IllegalStateException`;
  #L3a9882.  v1:= "generateNewId() must be called before retrieving ids." @kind object;
  #L3a9886.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a988c.  throw v0;
}
procedure `void` `a`(`k2.i0$d` v2 @kind this) @signature `Lk2/i0$d;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a9818.  v0:= v2.`k2.i0$d.d` @type ^`int`;
  #L3a981c.  v1:= -2147483648I;
  #L3a9820.  if v0 != v1 then goto L3a982a;
  #L3a9824.  v0:= v2.`k2.i0$d.b` @type ^`int`;
  #L3a9828.  goto L3a9830;
  #L3a982a.  v1:= v2.`k2.i0$d.c` @type ^`int`;
  #L3a982e.  v0:= v0 + v1 @kind int;
  #L3a9830.  v2.`k2.i0$d.d` @type ^`int` := v0;
  #L3a9834.  v0:= new `java.lang.StringBuilder`;
  #L3a9838.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a983e.  v1:= v2.`k2.i0$d.a` @type ^`java.lang.String` @kind object;
  #L3a9842.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9848.  v1:= v2.`k2.i0$d.d` @type ^`int`;
  #L3a984c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9852.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a9858.  v0:= temp @kind object;
  #L3a985a.  v2.`k2.i0$d.e` @type ^`java.lang.String` := v0 @kind object;
  #L3a985e.  return @kind void;
}
procedure `java.lang.String` `b`(`k2.i0$d` v1 @kind this) @signature `Lk2/i0$d;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9780.  call `d`(v1) @signature `Lk2/i0$d;.d:()V` @kind direct;
  #L3a9786.  v0:= v1.`k2.i0$d.e` @type ^`java.lang.String` @kind object;
  #L3a978a.  return v0 @kind object;
}
procedure `int` `c`(`k2.i0$d` v1 @kind this) @signature `Lk2/i0$d;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9764.  call `d`(v1) @signature `Lk2/i0$d;.d:()V` @kind direct;
  #L3a976a.  v0:= v1.`k2.i0$d.d` @type ^`int`;
  #L3a976e.  return v0;
}
