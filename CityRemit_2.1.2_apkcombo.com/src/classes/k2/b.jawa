record `k2.b` @kind class @AccessFlag PUBLIC_FINAL extends `a2.l` @kind interface {
  `k2.c` `k2.b.a` @AccessFlag PRIVATE_FINAL;
  `s3.z` `k2.b.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `k2.b.c` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Lk2/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a06b8.  v0:= `@@k2.a.b` @type ^`k2.a` @kind object;
  #L3a06bc.  return @kind void;
}
procedure `void` `<init>`(`k2.b` v2 @kind this) @signature `Lk2/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a06d0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a06d6.  v0:= new `k2.c`;
  #L3a06da.  call `<init>`(v0) @signature `Lk2/c;.<init>:()V` @kind direct;
  #L3a06e0.  v2.`k2.b.a` @type ^`k2.c` := v0 @kind object;
  #L3a06e4.  v0:= new `s3.z`;
  #L3a06e8.  v1:= 2786I;
  #L3a06ec.  call `<init>`(v0, v1) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L3a06f2.  v2.`k2.b.b` @type ^`s3.z` := v0 @kind object;
  #L3a06f6.  return @kind void;
}
procedure `a2.l`[] `c`() @signature `Lk2/b;.c:()[La2/l;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L3a0514.  call temp:= `e`() @signature `Lk2/b;.e:()[La2/l;` @kind static;
  #L3a051a.  v0:= temp @kind object;
  #L3a051c.  return v0 @kind object;
}
procedure `a2.l`[] `e`() @signature `Lk2/b;.e:()[La2/l;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0530.  v0:= 1I;
  #L3a0532.  v0:= new `a2.l`[v0];
  #L3a0536.  v1:= new `k2.b`;
  #L3a053a.  call `<init>`(v1) @signature `Lk2/b;.<init>:()V` @kind direct;
  #L3a0540.  v2:= 0I;
  #L3a0542.  v0[v2]:= v1 @kind object;
  #L3a0546.  return v0 @kind object;
}
procedure `void` `a`(`k2.b` v0 @kind this) @signature `Lk2/b;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L3a0754.  return @kind void;
}
procedure `void` `b`(`k2.b` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lk2/b;.b:(JJ)V` @AccessFlag PUBLIC {
    temp;

  #L3a0768.  v1:= 0I;
  #L3a076a.  v0.`k2.b.c` @type ^`boolean` := v1 @kind boolean;
  #L3a076e.  v1:= v0.`k2.b.a` @type ^`k2.c` @kind object;
  #L3a0772.  call `a`(v1) @signature `Lk2/c;.a:()V` @kind virtual;
  #L3a0778.  return @kind void;
}
procedure `void` `d`(`k2.b` v4 @kind this, `a2.n` v5 @kind object) @signature `Lk2/b;.d:(La2/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a0708.  v0:= v4.`k2.b.a` @type ^`k2.c` @kind object;
  #L3a070c.  v1:= new `k2.i0$d`;
  #L3a0710.  v2:= 0I;
  #L3a0712.  v3:= 1I;
  #L3a0714.  call `<init>`(v1, v2, v3) @signature `Lk2/i0$d;.<init>:(II)V` @kind direct;
  #L3a071a.  call `d`(v0, v5, v1) @signature `Lk2/c;.d:(La2/n;Lk2/i0$d;)V` @kind virtual;
  #L3a0720.  call `h`(v5) @signature `La2/n;.h:()V` @kind interface;
  #L3a0726.  v0:= new `a2.a0$b`;
  #L3a072a.  v1:= -4.9E-324D;
  #L3a0734.  call `<init>`(v0, v1) @signature `La2/a0$b;.<init>:(J)V` @kind direct;
  #L3a073a.  call `m`(v5, v0) @signature `La2/n;.m:(La2/a0;)V` @kind interface;
  #L3a0740.  return @kind void;
}
procedure `boolean` `g`(`k2.b` v7 @kind this, `a2.m` v8 @kind object) @signature `Lk2/b;.g:(La2/m;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a0558.  v0:= new `s3.z`;
  #L3a055c.  v1:= 10I;
  #L3a0560.  call `<init>`(v0, v1) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L3a0566.  v2:= 0I;
  #L3a0568.  v3:= 0I;
  #L3a056a.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a0570.  v4:= temp @kind object;
  #L3a0572.  call `o`(v8, v4, v2, v1) @signature `La2/m;.o:([BII)V` @kind interface;
  #L3a0578.  call `O`(v0, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a057e.  call temp:= `F`(v0) @signature `Ls3/z;.F:()I` @kind virtual;
  #L3a0584.  v4:= temp;
  #L3a0586.  v5:= 4801587I;
  #L3a058c.  if v4 == v5 then goto L3a0616;
  #L3a0590.  call `i`(v8) @signature `La2/m;.i:()V` @kind interface;
  #L3a0596.  call `p`(v8, v3) @signature `La2/m;.p:(I)V` @kind interface;
  #L3a059c.  v4:= v3;
  #L3a059e.  v1:= 0I;
  #L3a05a0.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a05a6.  v5:= temp @kind object;
  #L3a05a8.  v6:= 6I;
  #L3a05aa.  call `o`(v8, v5, v2, v6) @signature `La2/m;.o:([BII)V` @kind interface;
  #L3a05b0.  call `O`(v0, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a05b6.  call temp:= `I`(v0) @signature `Ls3/z;.I:()I` @kind virtual;
  #L3a05bc.  v5:= temp;
  #L3a05be.  v6:= 2935I;
  #L3a05c2.  if v5 == v6 then goto L3a05e6;
  #L3a05c6.  call `i`(v8) @signature `La2/m;.i:()V` @kind interface;
  #L3a05cc.  v4:= v4 + 1;
  #L3a05d0.  v1:= v4 - v3 @kind int;
  #L3a05d4.  v5:= 8192I;
  #L3a05d8.  if v1 < v5 then goto L3a05de;
  #L3a05dc.  return v2;
  #L3a05de.  call `p`(v8, v4) @signature `La2/m;.p:(I)V` @kind interface;
  #L3a05e4.  goto L3a059e;
  #L3a05e6.  v5:= 1I;
  #L3a05e8.  v1:= v1 + v5 @kind int;
  #L3a05ea.  v6:= 4I;
  #L3a05ec.  if v1 < v6 then goto L3a05f2;
  #L3a05f0.  return v5;
  #L3a05f2.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a05f8.  v5:= temp @kind object;
  #L3a05fa.  call temp:= `f`(v5) @signature `Lx1/b;.f:([B)I` @kind static;
  #L3a0600.  v5:= temp;
  #L3a0602.  v6:= -1I;
  #L3a0604.  if v5 != v6 then goto L3a060a;
  #L3a0608.  return v2;
  #L3a060a.  v5:= v5 + -6;
  #L3a060e.  call `p`(v8, v5) @signature `La2/m;.p:(I)V` @kind interface;
  #L3a0614.  goto L3a05a0;
  #L3a0616.  v4:= 3I;
  #L3a0618.  call `P`(v0, v4) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L3a061e.  call temp:= `B`(v0) @signature `Ls3/z;.B:()I` @kind virtual;
  #L3a0624.  v4:= temp;
  #L3a0626.  v5:= v4 + 10;
  #L3a062a.  v3:= v3 + v5 @kind int;
  #L3a062c.  call `p`(v8, v4) @signature `La2/m;.p:(I)V` @kind interface;
  #L3a0632.  goto L3a056a;
}
procedure `int` `j`(`k2.b` v3 @kind this, `a2.m` v4 @kind object, `a2.z` v5 @kind object) @signature `Lk2/b;.j:(La2/m;La2/z;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0644.  v5:= v3.`k2.b.b` @type ^`s3.z` @kind object;
  #L3a0648.  call temp:= `d`(v5) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a064e.  v5:= temp @kind object;
  #L3a0650.  v0:= 0I;
  #L3a0652.  v1:= 2786I;
  #L3a0656.  call temp:= `b`(v4, v5, v0, v1) @signature `La2/m;.b:([BII)I` @kind interface;
  #L3a065c.  v4:= temp;
  #L3a065e.  v5:= -1I;
  #L3a0660.  if v4 != v5 then goto L3a0666;
  #L3a0664.  return v5;
  #L3a0666.  v5:= v3.`k2.b.b` @type ^`s3.z` @kind object;
  #L3a066a.  call `O`(v5, v0) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a0670.  v5:= v3.`k2.b.b` @type ^`s3.z` @kind object;
  #L3a0674.  call `N`(v5, v4) @signature `Ls3/z;.N:(I)V` @kind virtual;
  #L3a067a.  v4:= v3.`k2.b.c` @type ^`boolean` @kind boolean;
  #L3a067e.  if v4 != 0 then goto L3a0698;
  #L3a0682.  v4:= v3.`k2.b.a` @type ^`k2.c` @kind object;
  #L3a0686.  v1:= 0L;
  #L3a068a.  v5:= 4I;
  #L3a068c.  call `f`(v4, v1, v5) @signature `Lk2/c;.f:(JI)V` @kind virtual;
  #L3a0692.  v4:= 1I;
  #L3a0694.  v3.`k2.b.c` @type ^`boolean` := v4 @kind boolean;
  #L3a0698.  v4:= v3.`k2.b.a` @type ^`k2.c` @kind object;
  #L3a069c.  v5:= v3.`k2.b.b` @type ^`s3.z` @kind object;
  #L3a06a0.  call `c`(v4, v5) @signature `Lk2/c;.c:(Ls3/z;)V` @kind virtual;
  #L3a06a6.  return v0;
}
