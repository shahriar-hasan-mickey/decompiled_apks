record `k2.a0$a` @kind class @AccessFlag FINAL {
  `k2.m` `k2.a0$a.a` @AccessFlag PRIVATE_FINAL;
  `s3.h0` `k2.a0$a.b` @AccessFlag PRIVATE_FINAL;
  `s3.y` `k2.a0$a.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `k2.a0$a.d` @AccessFlag PRIVATE;
  `boolean` `k2.a0$a.e` @AccessFlag PRIVATE;
  `boolean` `k2.a0$a.f` @AccessFlag PRIVATE;
  `int` `k2.a0$a.g` @AccessFlag PRIVATE;
  `long` `k2.a0$a.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`k2.a0$a` v0 @kind this, `k2.m` v1 @kind object, `s3.h0` v2 @kind object) @signature `Lk2/a0$a;.<init>:(Lk2/m;Ls3/h0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a7374.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a737a.  v0.`k2.a0$a.a` @type ^`k2.m` := v1 @kind object;
  #L3a737e.  v0.`k2.a0$a.b` @type ^`s3.h0` := v2 @kind object;
  #L3a7382.  v1:= new `s3.y`;
  #L3a7386.  v2:= 64I;
  #L3a738a.  v2:= new `byte`[v2];
  #L3a738e.  call `<init>`(v1, v2) @signature `Ls3/y;.<init>:([B)V` @kind direct;
  #L3a7394.  v0.`k2.a0$a.c` @type ^`s3.y` := v1 @kind object;
  #L3a7398.  return @kind void;
}
procedure `void` `b`(`k2.a0$a` v3 @kind this) @signature `Lk2/a0$a;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3a7428.  v0:= v3.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a742c.  v1:= 8I;
  #L3a7430.  call `r`(v0, v1) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a7436.  v0:= v3.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a743a.  call temp:= `g`(v0) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L3a7440.  v0:= temp;
  #L3a7442.  v3.`k2.a0$a.d` @type ^`boolean` := v0 @kind boolean;
  #L3a7446.  v0:= v3.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a744a.  call temp:= `g`(v0) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L3a7450.  v0:= temp;
  #L3a7452.  v3.`k2.a0$a.e` @type ^`boolean` := v0 @kind boolean;
  #L3a7456.  v0:= v3.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a745a.  v2:= 6I;
  #L3a745c.  call `r`(v0, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a7462.  v0:= v3.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a7466.  call temp:= `h`(v0, v1) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a746c.  v0:= temp;
  #L3a746e.  v3.`k2.a0$a.g` @type ^`int` := v0;
  #L3a7472.  return @kind void;
}
procedure `void` `c`(`k2.a0$a` v10 @kind this) @signature `Lk2/a0$a;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3a7484.  v0:= 0L;
  #L3a7488.  v10.`k2.a0$a.h` @type ^`long` := v0 @kind wide;
  #L3a748c.  v0:= v10.`k2.a0$a.d` @type ^`boolean` @kind boolean;
  #L3a7490.  if v0 == 0 then goto L3a7586;
  #L3a7494.  v0:= v10.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a7498.  v1:= 4I;
  #L3a749a.  call `r`(v0, v1) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a74a0.  v0:= v10.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a74a4.  v2:= 3I;
  #L3a74a6.  call temp:= `h`(v0, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a74ac.  v0:= temp;
  #L3a74ae.  v3:= (`long`) v0 @kind i2l;
  #L3a74b0.  v0:= 30I;
  #L3a74b4.  v3:= v3 ^< v0 @kind long;
  #L3a74b6.  v5:= v10.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a74ba.  v6:= 1I;
  #L3a74bc.  call `r`(v5, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a74c2.  v5:= v10.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a74c6.  v7:= 15I;
  #L3a74ca.  call temp:= `h`(v5, v7) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a74d0.  v5:= temp;
  #L3a74d2.  v5:= v5 ^< v7 @kind int;
  #L3a74d4.  v8:= (`long`) v5 @kind i2l;
  #L3a74d6.  v3:= v3 ^| v8 @kind long;
  #L3a74d8.  v5:= v10.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a74dc.  call `r`(v5, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a74e2.  v5:= v10.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a74e6.  call temp:= `h`(v5, v7) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a74ec.  v5:= temp;
  #L3a74ee.  v8:= (`long`) v5 @kind i2l;
  #L3a74f0.  v3:= v3 ^| v8 @kind long;
  #L3a74f2.  v5:= v10.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a74f6.  call `r`(v5, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a74fc.  v5:= v10.`k2.a0$a.f` @type ^`boolean` @kind boolean;
  #L3a7500.  if v5 != 0 then goto L3a7576;
  #L3a7504.  v5:= v10.`k2.a0$a.e` @type ^`boolean` @kind boolean;
  #L3a7508.  if v5 == 0 then goto L3a7576;
  #L3a750c.  v5:= v10.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a7510.  call `r`(v5, v1) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a7516.  v1:= v10.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a751a.  call temp:= `h`(v1, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a7520.  v1:= temp;
  #L3a7522.  v1:= (`long`) v1 @kind i2l;
  #L3a7524.  v0:= v1 ^< v0 @kind long;
  #L3a7528.  v2:= v10.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a752c.  call `r`(v2, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a7532.  v2:= v10.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a7536.  call temp:= `h`(v2, v7) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a753c.  v2:= temp;
  #L3a753e.  v2:= v2 ^< v7 @kind int;
  #L3a7540.  v8:= (`long`) v2 @kind i2l;
  #L3a7542.  v0:= v0 ^| v8 @kind long;
  #L3a7544.  v2:= v10.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a7548.  call `r`(v2, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a754e.  v2:= v10.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a7552.  call temp:= `h`(v2, v7) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L3a7558.  v2:= temp;
  #L3a755a.  v7:= (`long`) v2 @kind i2l;
  #L3a755c.  v0:= v0 ^| v7 @kind long;
  #L3a755e.  v2:= v10.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a7562.  call `r`(v2, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L3a7568.  v2:= v10.`k2.a0$a.b` @type ^`s3.h0` @kind object;
  #L3a756c.  call temp:= `b`(v2, v0) @signature `Ls3/h0;.b:(J)J` @kind virtual;
  #L3a7572.  v10.`k2.a0$a.f` @type ^`boolean` := v6 @kind boolean;
  #L3a7576.  v0:= v10.`k2.a0$a.b` @type ^`s3.h0` @kind object;
  #L3a757a.  call temp:= `b`(v0, v3) @signature `Ls3/h0;.b:(J)J` @kind virtual;
  #L3a7580.  v0:= temp @kind wide;
  #L3a7582.  v10.`k2.a0$a.h` @type ^`long` := v0 @kind wide;
  #L3a7586.  return @kind void;
}
procedure `void` `a`(`k2.a0$a` v4 @kind this, `s3.z` v5 @kind object) @signature `Lk2/a0$a;.a:(Ls3/z;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a73ac.  v0:= v4.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a73b0.  v0:= v0.`s3.y.a` @type ^`byte`[] @kind object;
  #L3a73b4.  v1:= 0I;
  #L3a73b6.  v2:= 3I;
  #L3a73b8.  call `j`(v5, v0, v1, v2) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L3a73be.  v0:= v4.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a73c2.  call `p`(v0, v1) @signature `Ls3/y;.p:(I)V` @kind virtual;
  #L3a73c8.  call `b`(v4) @signature `Lk2/a0$a;.b:()V` @kind direct;
  #L3a73ce.  v0:= v4.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a73d2.  v0:= v0.`s3.y.a` @type ^`byte`[] @kind object;
  #L3a73d6.  v2:= v4.`k2.a0$a.g` @type ^`int`;
  #L3a73da.  call `j`(v5, v0, v1, v2) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L3a73e0.  v0:= v4.`k2.a0$a.c` @type ^`s3.y` @kind object;
  #L3a73e4.  call `p`(v0, v1) @signature `Ls3/y;.p:(I)V` @kind virtual;
  #L3a73ea.  call `c`(v4) @signature `Lk2/a0$a;.c:()V` @kind direct;
  #L3a73f0.  v0:= v4.`k2.a0$a.a` @type ^`k2.m` @kind object;
  #L3a73f4.  v1:= v4.`k2.a0$a.h` @type ^`long` @kind wide;
  #L3a73f8.  v3:= 4I;
  #L3a73fa.  call `f`(v0, v1, v3) @signature `Lk2/m;.f:(JI)V` @kind interface;
  #L3a7400.  v0:= v4.`k2.a0$a.a` @type ^`k2.m` @kind object;
  #L3a7404.  call `c`(v0, v5) @signature `Lk2/m;.c:(Ls3/z;)V` @kind interface;
  #L3a740a.  v5:= v4.`k2.a0$a.a` @type ^`k2.m` @kind object;
  #L3a740e.  call `e`(v5) @signature `Lk2/m;.e:()V` @kind interface;
  #L3a7414.  return @kind void;
}
procedure `void` `d`(`k2.a0$a` v1 @kind this) @signature `Lk2/a0$a;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7598.  v0:= 0I;
  #L3a759a.  v1.`k2.a0$a.f` @type ^`boolean` := v0 @kind boolean;
  #L3a759e.  v0:= v1.`k2.a0$a.a` @type ^`k2.m` @kind object;
  #L3a75a2.  call `a`(v0) @signature `Lk2/m;.a:()V` @kind interface;
  #L3a75a8.  return @kind void;
}
