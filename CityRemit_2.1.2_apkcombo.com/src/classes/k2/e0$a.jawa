record `k2.e0$a` @kind class @AccessFlag FINAL extends `a2.a$f` @kind interface {
  `s3.h0` `k2.e0$a.a` @AccessFlag PRIVATE_FINAL;
  `s3.z` `k2.e0$a.b` @AccessFlag PRIVATE_FINAL;
  `int` `k2.e0$a.c` @AccessFlag PRIVATE_FINAL;
  `int` `k2.e0$a.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`k2.e0$a` v0 @kind this, `int` v1 , `s3.h0` v2 @kind object, `int` v3 ) @signature `Lk2/e0$a;.<init>:(ILs3/h0;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a8128.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a812e.  v0.`k2.e0$a.c` @type ^`int` := v1;
  #L3a8132.  v0.`k2.e0$a.a` @type ^`s3.h0` := v2 @kind object;
  #L3a8136.  v0.`k2.e0$a.d` @type ^`int` := v3;
  #L3a813a.  v1:= new `s3.z`;
  #L3a813e.  call `<init>`(v1) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L3a8144.  v0.`k2.e0$a.b` @type ^`s3.z` := v1 @kind object;
  #L3a8148.  return @kind void;
}
procedure `a2.a$e` `c`(`k2.e0$a` v16 @kind this, `s3.z` v17 @kind object, `long` v18 , `long` v20 ) @signature `Lk2/e0$a;.c:(Ls3/z;JJ)La2/a$e;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3a7fc8.  v0:= v16 @kind object;
  #L3a7fcc.  v1:= v17 @kind object;
  #L3a7fd0.  v2:= v20 @kind wide;
  #L3a7fd4.  call temp:= `f`(v17) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3a7fda.  v4:= temp;
  #L3a7fdc.  v5:= -1L;
  #L3a7fe0.  v7:= -4.9E-324D;
  #L3a7fea.  v9:= v5 @kind wide;
  #L3a7fec.  v11:= v7 @kind wide;
  #L3a7fee.  call temp:= `a`(v17) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a7ff4.  v13:= temp;
  #L3a7ff6.  v14:= 188I;
  #L3a7ffa.  if v13 < v14 then goto L3a8096;
  #L3a7ffe.  call temp:= `d`(v17) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a8004.  v13:= temp @kind object;
  #L3a8006.  call temp:= `e`(v17) @signature `Ls3/z;.e:()I` @kind virtual;
  #L3a800c.  v14:= temp;
  #L3a800e.  call temp:= `a`(v13, v14, v4) @signature `Lk2/j0;.a:([BII)I` @kind static;
  #L3a8014.  v13:= temp;
  #L3a8016.  v14:= v13 + 188;
  #L3a801a.  if v14 <= v4 then goto L3a8020;
  #L3a801e.  goto L3a8096;
  #L3a8020.  v5:= v0.`k2.e0$a.c` @type ^`int`;
  #L3a8024.  call temp:= `c`(v1, v13, v5) @signature `Lk2/j0;.c:(Ls3/z;II)J` @kind static;
  #L3a802a.  v5:= temp @kind wide;
  #L3a802c.  v15:= lcmp(v5, v7);
  #L3a8030.  if v15 == 0 then goto L3a808c;
  #L3a8034.  v15:= v0.`k2.e0$a.a` @type ^`s3.h0` @kind object;
  #L3a8038.  call temp:= `b`(v15, v5) @signature `Ls3/h0;.b:(J)J` @kind virtual;
  #L3a803e.  v5:= temp @kind wide;
  #L3a8040.  v15:= lcmp(v5, v18);
  #L3a8044.  if v15 <= 0 then goto L3a8068;
  #L3a8048.  v1:= lcmp(v11, v7);
  #L3a804c.  if v1 != 0 then goto L3a805a;
  #L3a8050.  call temp:= `d`(v5, v2) @signature `La2/a$e;.d:(JJ)La2/a$e;` @kind static;
  #L3a8056.  v1:= temp @kind object;
  #L3a8058.  return v1 @kind object;
  #L3a805a.  v1:= v2 + v9 @kind long;
  #L3a805e.  call temp:= `e`(v1) @signature `La2/a$e;.e:(J)La2/a$e;` @kind static;
  #L3a8064.  v1:= temp @kind object;
  #L3a8066.  return v1 @kind object;
  #L3a8068.  v9:= 100000L;
  #L3a806e.  v9:= v9 + v5 @kind long;
  #L3a8070.  v11:= lcmp(v9, v18);
  #L3a8074.  if v11 <= 0 then goto L3a8088;
  #L3a8078.  v4:= (`long`) v13 @kind i2l;
  #L3a807a.  v1:= v2 + v4 @kind long;
  #L3a807e.  call temp:= `e`(v1) @signature `La2/a$e;.e:(J)La2/a$e;` @kind static;
  #L3a8084.  v1:= temp @kind object;
  #L3a8086.  return v1 @kind object;
  #L3a8088.  v9:= (`long`) v13 @kind i2l;
  #L3a808a.  v11:= v5 @kind wide;
  #L3a808c.  call `O`(v1, v14) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a8092.  v5:= (`long`) v14 @kind i2l;
  #L3a8094.  goto L3a7fee;
  #L3a8096.  v1:= lcmp(v11, v7);
  #L3a809a.  if v1 == 0 then goto L3a80ac;
  #L3a809e.  v1:= v2 + v5 @kind long;
  #L3a80a2.  call temp:= `f`(v11, v1) @signature `La2/a$e;.f:(JJ)La2/a$e;` @kind static;
  #L3a80a8.  v1:= temp @kind object;
  #L3a80aa.  return v1 @kind object;
  #L3a80ac.  v1:= `@@a2.a$e.d` @type ^`a2.a$e` @kind object;
  #L3a80b0.  return v1 @kind object;
}
procedure `a2.a$e` `a`(`k2.e0$a` v6 @kind this, `a2.m` v7 @kind object, `long` v8 ) @signature `Lk2/e0$a;.a:(La2/m;J)La2/a$e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a80c4.  call temp:= `q`(v7) @signature `La2/m;.q:()J` @kind interface;
  #L3a80ca.  v4:= temp @kind wide;
  #L3a80cc.  v0:= v6.`k2.e0$a.d` @type ^`int`;
  #L3a80d0.  v0:= (`long`) v0 @kind i2l;
  #L3a80d2.  call temp:= `a`(v7) @signature `La2/m;.a:()J` @kind interface;
  #L3a80d8.  v2:= temp @kind wide;
  #L3a80da.  v2:= v2 - v4 @kind long;
  #L3a80dc.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3a80e2.  v0:= temp @kind wide;
  #L3a80e4.  v1:= (`int`) v0 @kind l2i;
  #L3a80e6.  v0:= v6.`k2.e0$a.b` @type ^`s3.z` @kind object;
  #L3a80ea.  call `K`(v0, v1) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L3a80f0.  v0:= v6.`k2.e0$a.b` @type ^`s3.z` @kind object;
  #L3a80f4.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a80fa.  v0:= temp @kind object;
  #L3a80fc.  v2:= 0I;
  #L3a80fe.  call `o`(v7, v0, v2, v1) @signature `La2/m;.o:([BII)V` @kind interface;
  #L3a8104.  v1:= v6.`k2.e0$a.b` @type ^`s3.z` @kind object;
  #L3a8108.  v0:= v6 @kind object;
  #L3a810a.  v2:= v8 @kind wide;
  #L3a810c.  call temp:= `c`(v0, v1, v2, v4) @signature `Lk2/e0$a;.c:(Ls3/z;JJ)La2/a$e;` @kind direct;
  #L3a8112.  v7:= temp @kind object;
  #L3a8114.  return v7 @kind object;
}
procedure `void` `b`(`k2.e0$a` v2 @kind this) @signature `Lk2/e0$a;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a815c.  v0:= v2.`k2.e0$a.b` @type ^`s3.z` @kind object;
  #L3a8160.  v1:= `@@s3.l0.f` @type ^`byte`[] @kind object;
  #L3a8164.  call `L`(v0, v1) @signature `Ls3/z;.L:([B)V` @kind virtual;
  #L3a816a.  return @kind void;
}
