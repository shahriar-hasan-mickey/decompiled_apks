record `k2.c0` @kind class @AccessFlag PUBLIC_FINAL extends `k2.i0` @kind interface {
  `k2.b0` `k2.c0.a` @AccessFlag PRIVATE_FINAL;
  `s3.z` `k2.c0.b` @AccessFlag PRIVATE_FINAL;
  `int` `k2.c0.c` @AccessFlag PRIVATE;
  `int` `k2.c0.d` @AccessFlag PRIVATE;
  `boolean` `k2.c0.e` @AccessFlag PRIVATE;
  `boolean` `k2.c0.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`k2.c0` v1 @kind this, `k2.b0` v2 @kind object) @signature `Lk2/c0;.<init>:(Lk2/b0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a7be4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a7bea.  v1.`k2.c0.a` @type ^`k2.b0` := v2 @kind object;
  #L3a7bee.  v2:= new `s3.z`;
  #L3a7bf2.  v0:= 32I;
  #L3a7bf6.  call `<init>`(v2, v0) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L3a7bfc.  v1.`k2.c0.b` @type ^`s3.z` := v2 @kind object;
  #L3a7c00.  return @kind void;
}
procedure `void` `a`(`k2.c0` v1 @kind this) @signature `Lk2/c0;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7e54.  v0:= 1I;
  #L3a7e56.  v1.`k2.c0.f` @type ^`boolean` := v0 @kind boolean;
  #L3a7e5a.  return @kind void;
}
procedure `void` `b`(`k2.c0` v1 @kind this, `s3.h0` v2 @kind object, `a2.n` v3 @kind object, `k2.i0$d` v4 @kind object) @signature `Lk2/c0;.b:(Ls3/h0;La2/n;Lk2/i0$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7e30.  v0:= v1.`k2.c0.a` @type ^`k2.b0` @kind object;
  #L3a7e34.  call `b`(v0, v2, v3, v4) @signature `Lk2/b0;.b:(Ls3/h0;La2/n;Lk2/i0$d;)V` @kind interface;
  #L3a7e3a.  v2:= 1I;
  #L3a7e3c.  v1.`k2.c0.f` @type ^`boolean` := v2 @kind boolean;
  #L3a7e40.  return @kind void;
}
procedure `void` `c`(`k2.c0` v6 @kind this, `s3.z` v7 @kind object, `int` v8 ) @signature `Lk2/c0;.c:(Ls3/z;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a7c14.  v0:= 1I;
  #L3a7c16.  v8:= v8 ^& v0 @kind int;
  #L3a7c18.  v1:= 0I;
  #L3a7c1a.  if v8 == 0 then goto L3a7c22;
  #L3a7c1e.  v8:= 1I;
  #L3a7c20.  goto L3a7c24;
  #L3a7c22.  v8:= 0I;
  #L3a7c24.  v2:= -1I;
  #L3a7c26.  if v8 == 0 then goto L3a7c3e;
  #L3a7c2a.  call temp:= `C`(v7) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3a7c30.  v3:= temp;
  #L3a7c32.  call temp:= `e`(v7) @signature `Ls3/z;.e:()I` @kind virtual;
  #L3a7c38.  v4:= temp;
  #L3a7c3a.  v4:= v4 + v3 @kind int;
  #L3a7c3c.  goto L3a7c40;
  #L3a7c3e.  v4:= -1I;
  #L3a7c40.  v3:= v6.`k2.c0.f` @type ^`boolean` @kind boolean;
  #L3a7c44.  if v3 == 0 then goto L3a7c5c;
  #L3a7c48.  if v8 != 0 then goto L3a7c4e;
  #L3a7c4c.  return @kind void;
  #L3a7c4e.  v6.`k2.c0.f` @type ^`boolean` := v1 @kind boolean;
  #L3a7c52.  call `O`(v7, v4) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a7c58.  v6.`k2.c0.d` @type ^`int` := v1;
  #L3a7c5c.  call temp:= `a`(v7) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a7c62.  v8:= temp;
  #L3a7c64.  if v8 <= 0 then goto L3a7e1c;
  #L3a7c68.  v8:= v6.`k2.c0.d` @type ^`int`;
  #L3a7c6c.  v3:= 3I;
  #L3a7c6e.  if v8 >= v3 then goto L3a7d76;
  #L3a7c72.  if v8 != 0 then goto L3a7c9c;
  #L3a7c76.  call temp:= `C`(v7) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3a7c7c.  v8:= temp;
  #L3a7c7e.  call temp:= `e`(v7) @signature `Ls3/z;.e:()I` @kind virtual;
  #L3a7c84.  v4:= temp;
  #L3a7c86.  v4:= v4 - v0 @kind int;
  #L3a7c88.  call `O`(v7, v4) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a7c8e.  v4:= 255I;
  #L3a7c92.  if v8 != v4 then goto L3a7c9c;
  #L3a7c96.  v6.`k2.c0.f` @type ^`boolean` := v0 @kind boolean;
  #L3a7c9a.  return @kind void;
  #L3a7c9c.  call temp:= `a`(v7) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a7ca2.  v8:= temp;
  #L3a7ca4.  v4:= v6.`k2.c0.d` @type ^`int`;
  #L3a7ca8.  v4:= v4 - 3;
  #L3a7cac.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3a7cb2.  v8:= temp;
  #L3a7cb4.  v4:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7cb8.  call temp:= `d`(v4) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a7cbe.  v4:= temp @kind object;
  #L3a7cc0.  v5:= v6.`k2.c0.d` @type ^`int`;
  #L3a7cc4.  call `j`(v7, v4, v5, v8) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L3a7cca.  v4:= v6.`k2.c0.d` @type ^`int`;
  #L3a7cce.  v4:= v4 + v8 @kind int;
  #L3a7cd0.  v6.`k2.c0.d` @type ^`int` := v4;
  #L3a7cd4.  if v4 != v3 then goto L3a7c5c;
  #L3a7cd8.  v8:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7cdc.  call `O`(v8, v1) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a7ce2.  v8:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7ce6.  call `N`(v8, v3) @signature `Ls3/z;.N:(I)V` @kind virtual;
  #L3a7cec.  v8:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7cf0.  call `P`(v8, v0) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L3a7cf6.  v8:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7cfa.  call temp:= `C`(v8) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3a7d00.  v8:= temp;
  #L3a7d02.  v4:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7d06.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3a7d0c.  v4:= temp;
  #L3a7d0e.  v5:= v8 ^& 128;
  #L3a7d12.  if v5 == 0 then goto L3a7d1a;
  #L3a7d16.  v5:= 1I;
  #L3a7d18.  goto L3a7d1c;
  #L3a7d1a.  v5:= 0I;
  #L3a7d1c.  v6.`k2.c0.e` @type ^`boolean` := v5 @kind boolean;
  #L3a7d20.  v8:= v8 ^& 15;
  #L3a7d24.  v8:= v8 ^< 8;
  #L3a7d28.  v8:= v8 ^| v4 @kind int;
  #L3a7d2a.  v8:= v8 + v3 @kind int;
  #L3a7d2c.  v6.`k2.c0.c` @type ^`int` := v8;
  #L3a7d30.  v8:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7d34.  call temp:= `b`(v8) @signature `Ls3/z;.b:()I` @kind virtual;
  #L3a7d3a.  v8:= temp;
  #L3a7d3c.  v3:= v6.`k2.c0.c` @type ^`int`;
  #L3a7d40.  if v8 >= v3 then goto L3a7c5c;
  #L3a7d44.  v8:= 4098I;
  #L3a7d48.  v4:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7d4c.  call temp:= `b`(v4) @signature `Ls3/z;.b:()I` @kind virtual;
  #L3a7d52.  v4:= temp;
  #L3a7d54.  v4:= v4 * 2;
  #L3a7d58.  call temp:= `max`(v3, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3a7d5e.  v3:= temp;
  #L3a7d60.  call temp:= `min`(v8, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3a7d66.  v8:= temp;
  #L3a7d68.  v3:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7d6c.  call `c`(v3, v8) @signature `Ls3/z;.c:(I)V` @kind virtual;
  #L3a7d72.  goto L3a7c5c;
  #L3a7d76.  call temp:= `a`(v7) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a7d7c.  v8:= temp;
  #L3a7d7e.  v3:= v6.`k2.c0.c` @type ^`int`;
  #L3a7d82.  v4:= v6.`k2.c0.d` @type ^`int`;
  #L3a7d86.  v3:= v3 - v4 @kind int;
  #L3a7d88.  call temp:= `min`(v8, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3a7d8e.  v8:= temp;
  #L3a7d90.  v3:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7d94.  call temp:= `d`(v3) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a7d9a.  v3:= temp @kind object;
  #L3a7d9c.  v4:= v6.`k2.c0.d` @type ^`int`;
  #L3a7da0.  call `j`(v7, v3, v4, v8) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L3a7da6.  v3:= v6.`k2.c0.d` @type ^`int`;
  #L3a7daa.  v3:= v3 + v8 @kind int;
  #L3a7dac.  v6.`k2.c0.d` @type ^`int` := v3;
  #L3a7db0.  v8:= v6.`k2.c0.c` @type ^`int`;
  #L3a7db4.  if v3 != v8 then goto L3a7c5c;
  #L3a7db8.  v3:= v6.`k2.c0.e` @type ^`boolean` @kind boolean;
  #L3a7dbc.  if v3 == 0 then goto L3a7df6;
  #L3a7dc0.  v8:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7dc4.  call temp:= `d`(v8) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a7dca.  v8:= temp @kind object;
  #L3a7dcc.  v3:= v6.`k2.c0.c` @type ^`int`;
  #L3a7dd0.  call temp:= `t`(v8, v1, v3, v2) @signature `Ls3/l0;.t:([BIII)I` @kind static;
  #L3a7dd6.  v8:= temp;
  #L3a7dd8.  if v8 == 0 then goto L3a7de2;
  #L3a7ddc.  v6.`k2.c0.f` @type ^`boolean` := v0 @kind boolean;
  #L3a7de0.  return @kind void;
  #L3a7de2.  v8:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7de6.  v3:= v6.`k2.c0.c` @type ^`int`;
  #L3a7dea.  v3:= v3 + -4;
  #L3a7dee.  call `N`(v8, v3) @signature `Ls3/z;.N:(I)V` @kind virtual;
  #L3a7df4.  goto L3a7e00;
  #L3a7df6.  v3:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7dfa.  call `N`(v3, v8) @signature `Ls3/z;.N:(I)V` @kind virtual;
  #L3a7e00.  v8:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7e04.  call `O`(v8, v1) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a7e0a.  v8:= v6.`k2.c0.a` @type ^`k2.b0` @kind object;
  #L3a7e0e.  v3:= v6.`k2.c0.b` @type ^`s3.z` @kind object;
  #L3a7e12.  call `c`(v8, v3) @signature `Lk2/b0;.c:(Ls3/z;)V` @kind interface;
  #L3a7e18.  goto L3a7c58;
  #L3a7e1c.  return @kind void;
}
