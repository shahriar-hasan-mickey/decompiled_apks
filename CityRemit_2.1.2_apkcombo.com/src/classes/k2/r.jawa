record `k2.r` @kind class @AccessFlag PUBLIC_FINAL extends `k2.m` @kind interface {
  `s3.z` `k2.r.a` @AccessFlag PRIVATE_FINAL;
  `a2.d0` `k2.r.b` @AccessFlag PRIVATE;
  `boolean` `k2.r.c` @AccessFlag PRIVATE;
  `long` `k2.r.d` @AccessFlag PRIVATE;
  `int` `k2.r.e` @AccessFlag PRIVATE;
  `int` `k2.r.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`k2.r` v2 @kind this) @signature `Lk2/r;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a5584.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a558a.  v0:= new `s3.z`;
  #L3a558e.  v1:= 10I;
  #L3a5592.  call `<init>`(v0, v1) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L3a5598.  v2.`k2.r.a` @type ^`s3.z` := v0 @kind object;
  #L3a559c.  v0:= -4.9E-324D;
  #L3a55a6.  v2.`k2.r.d` @type ^`long` := v0 @kind wide;
  #L3a55aa.  return @kind void;
}
procedure `void` `a`(`k2.r` v2 @kind this) @signature `Lk2/r;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a57e4.  v0:= 0I;
  #L3a57e6.  v2.`k2.r.c` @type ^`boolean` := v0 @kind boolean;
  #L3a57ea.  v0:= -4.9E-324D;
  #L3a57f4.  v2.`k2.r.d` @type ^`long` := v0 @kind wide;
  #L3a57f8.  return @kind void;
}
procedure `void` `c`(`k2.r` v7 @kind this, `s3.z` v8 @kind object) @signature `Lk2/r;.c:(Ls3/z;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a55bc.  v0:= v7.`k2.r.b` @type ^`a2.d0` @kind object;
  #L3a55c0.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a55c6.  v0:= v7.`k2.r.c` @type ^`boolean` @kind boolean;
  #L3a55ca.  if v0 != 0 then goto L3a55d0;
  #L3a55ce.  return @kind void;
  #L3a55d0.  call temp:= `a`(v8) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3a55d6.  v0:= temp;
  #L3a55d8.  v1:= v7.`k2.r.f` @type ^`int`;
  #L3a55dc.  v2:= 10I;
  #L3a55e0.  if v1 >= v2 then goto L3a569e;
  #L3a55e4.  v1:= v1 - 10;
  #L3a55e8.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3a55ee.  v1:= temp;
  #L3a55f0.  call temp:= `d`(v8) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a55f6.  v3:= temp @kind object;
  #L3a55f8.  call temp:= `e`(v8) @signature `Ls3/z;.e:()I` @kind virtual;
  #L3a55fe.  v4:= temp;
  #L3a5600.  v5:= v7.`k2.r.a` @type ^`s3.z` @kind object;
  #L3a5604.  call temp:= `d`(v5) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a560a.  v5:= temp @kind object;
  #L3a560c.  v6:= v7.`k2.r.f` @type ^`int`;
  #L3a5610.  call `arraycopy`(v3, v4, v5, v6, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3a5616.  v3:= v7.`k2.r.f` @type ^`int`;
  #L3a561a.  v3:= v3 + v1 @kind int;
  #L3a561c.  if v3 != v2 then goto L3a569e;
  #L3a5620.  v1:= v7.`k2.r.a` @type ^`s3.z` @kind object;
  #L3a5624.  v3:= 0I;
  #L3a5626.  call `O`(v1, v3) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3a562c.  v1:= 73I;
  #L3a5630.  v4:= v7.`k2.r.a` @type ^`s3.z` @kind object;
  #L3a5634.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3a563a.  v4:= temp;
  #L3a563c.  if v1 != v4 then goto L3a568a;
  #L3a5640.  v1:= 68I;
  #L3a5644.  v4:= v7.`k2.r.a` @type ^`s3.z` @kind object;
  #L3a5648.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3a564e.  v4:= temp;
  #L3a5650.  if v1 != v4 then goto L3a568a;
  #L3a5654.  v1:= 51I;
  #L3a5658.  v4:= v7.`k2.r.a` @type ^`s3.z` @kind object;
  #L3a565c.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3a5662.  v4:= temp;
  #L3a5664.  if v1 == v4 then goto L3a566a;
  #L3a5668.  goto L3a568a;
  #L3a566a.  v1:= v7.`k2.r.a` @type ^`s3.z` @kind object;
  #L3a566e.  v3:= 3I;
  #L3a5670.  call `P`(v1, v3) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L3a5676.  v1:= v7.`k2.r.a` @type ^`s3.z` @kind object;
  #L3a567a.  call temp:= `B`(v1) @signature `Ls3/z;.B:()I` @kind virtual;
  #L3a5680.  v1:= temp;
  #L3a5682.  v1:= v1 + v2 @kind int;
  #L3a5684.  v7.`k2.r.e` @type ^`int` := v1;
  #L3a5688.  goto L3a569e;
  #L3a568a.  v8:= "Id3Reader" @kind object;
  #L3a568e.  v0:= "Discarding invalid ID3 tag" @kind object;
  #L3a5692.  call `h`(v8, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3a5698.  v7.`k2.r.c` @type ^`boolean` := v3 @kind boolean;
  #L3a569c.  return @kind void;
  #L3a569e.  v1:= v7.`k2.r.e` @type ^`int`;
  #L3a56a2.  v2:= v7.`k2.r.f` @type ^`int`;
  #L3a56a6.  v1:= v1 - v2 @kind int;
  #L3a56a8.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3a56ae.  v0:= temp;
  #L3a56b0.  v1:= v7.`k2.r.b` @type ^`a2.d0` @kind object;
  #L3a56b4.  call `c`(v1, v8, v0) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L3a56ba.  v8:= v7.`k2.r.f` @type ^`int`;
  #L3a56be.  v8:= v8 + v0 @kind int;
  #L3a56c0.  v7.`k2.r.f` @type ^`int` := v8;
  #L3a56c4.  return @kind void;
}
procedure `void` `d`(`k2.r` v2 @kind this, `a2.n` v3 @kind object, `k2.i0$d` v4 @kind object) @signature `Lk2/r;.d:(La2/n;Lk2/i0$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a56d8.  call `a`(v4) @signature `Lk2/i0$d;.a:()V` @kind virtual;
  #L3a56de.  call temp:= `c`(v4) @signature `Lk2/i0$d;.c:()I` @kind virtual;
  #L3a56e4.  v0:= temp;
  #L3a56e6.  v1:= 5I;
  #L3a56e8.  call temp:= `e`(v3, v0, v1) @signature `La2/n;.e:(II)La2/d0;` @kind interface;
  #L3a56ee.  v3:= temp @kind object;
  #L3a56f0.  v2.`k2.r.b` @type ^`a2.d0` := v3 @kind object;
  #L3a56f4.  v0:= new `v1.j1$b`;
  #L3a56f8.  call `<init>`(v0) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L3a56fe.  call temp:= `b`(v4) @signature `Lk2/i0$d;.b:()Ljava/lang/String;` @kind virtual;
  #L3a5704.  v4:= temp @kind object;
  #L3a5706.  call temp:= `S`(v0, v4) @signature `Lv1/j1$b;.S:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3a570c.  v4:= temp @kind object;
  #L3a570e.  v0:= "application/id3" @kind object;
  #L3a5712.  call temp:= `e0`(v4, v0) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3a5718.  v4:= temp @kind object;
  #L3a571a.  call temp:= `E`(v4) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L3a5720.  v4:= temp @kind object;
  #L3a5722.  call `b`(v3, v4) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L3a5728.  return @kind void;
}
procedure `void` `e`(`k2.r` v8 @kind this) @signature `Lk2/r;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3a573c.  v0:= v8.`k2.r.b` @type ^`a2.d0` @kind object;
  #L3a5740.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3a5746.  v0:= v8.`k2.r.c` @type ^`boolean` @kind boolean;
  #L3a574a.  if v0 == 0 then goto L3a578c;
  #L3a574e.  v5:= v8.`k2.r.e` @type ^`int`;
  #L3a5752.  if v5 == 0 then goto L3a578c;
  #L3a5756.  v0:= v8.`k2.r.f` @type ^`int`;
  #L3a575a.  if v0 == v5 then goto L3a5760;
  #L3a575e.  goto L3a578c;
  #L3a5760.  v2:= v8.`k2.r.d` @type ^`long` @kind wide;
  #L3a5764.  v0:= -4.9E-324D;
  #L3a576e.  v4:= lcmp(v2, v0);
  #L3a5772.  if v4 == 0 then goto L3a5786;
  #L3a5776.  v1:= v8.`k2.r.b` @type ^`a2.d0` @kind object;
  #L3a577a.  v4:= 1I;
  #L3a577c.  v6:= 0I;
  #L3a577e.  v7:= 0I;
  #L3a5780.  call `f`(v1, v2, v4, v5, v6, v7) @signature `La2/d0;.f:(JIIILa2/d0$a;)V` @kind interface;
  #L3a5786.  v0:= 0I;
  #L3a5788.  v8.`k2.r.c` @type ^`boolean` := v0 @kind boolean;
  #L3a578c.  return @kind void;
}
procedure `void` `f`(`k2.r` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lk2/r;.f:(JI)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a57a0.  v5:= v5 ^& 4;
  #L3a57a4.  if v5 != 0 then goto L3a57aa;
  #L3a57a8.  return @kind void;
  #L3a57aa.  v5:= 1I;
  #L3a57ac.  v2.`k2.r.c` @type ^`boolean` := v5 @kind boolean;
  #L3a57b0.  v0:= -4.9E-324D;
  #L3a57ba.  v5:= lcmp(v3, v0);
  #L3a57be.  if v5 == 0 then goto L3a57c6;
  #L3a57c2.  v2.`k2.r.d` @type ^`long` := v3 @kind wide;
  #L3a57c6.  v3:= 0I;
  #L3a57c8.  v2.`k2.r.e` @type ^`int` := v3;
  #L3a57cc.  v2.`k2.r.f` @type ^`int` := v3;
  #L3a57d0.  return @kind void;
}
