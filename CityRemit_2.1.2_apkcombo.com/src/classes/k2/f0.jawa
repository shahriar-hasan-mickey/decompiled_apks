record `k2.f0` @kind class @AccessFlag FINAL {
  `int` `k2.f0.a` @AccessFlag PRIVATE_FINAL;
  `s3.h0` `k2.f0.b` @AccessFlag PRIVATE_FINAL;
  `s3.z` `k2.f0.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `k2.f0.d` @AccessFlag PRIVATE;
  `boolean` `k2.f0.e` @AccessFlag PRIVATE;
  `boolean` `k2.f0.f` @AccessFlag PRIVATE;
  `long` `k2.f0.g` @AccessFlag PRIVATE;
  `long` `k2.f0.h` @AccessFlag PRIVATE;
  `long` `k2.f0.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`k2.f0` v2 @kind this, `int` v3 ) @signature `Lk2/f0;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a8500.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a8506.  v2.`k2.f0.a` @type ^`int` := v3;
  #L3a850a.  v3:= new `s3.h0`;
  #L3a850e.  v0:= 0L;
  #L3a8512.  call `<init>`(v3, v0) @signature `Ls3/h0;.<init>:(J)V` @kind direct;
  #L3a8518.  v2.`k2.f0.b` @type ^`s3.h0` := v3 @kind object;
  #L3a851c.  v0:= -4.9E-324D;
  #L3a8526.  v2.`k2.f0.g` @type ^`long` := v0 @kind wide;
  #L3a852a.  v2.`k2.f0.h` @type ^`long` := v0 @kind wide;
  #L3a852e.  v2.`k2.f0.i` @type ^`long` := v0 @kind wide;
  #L3a8532.  v3:= new `s3.z`;
  #L3a8536.  call `<init>`(v3) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L3a853c.  v2.`k2.f0.c` @type ^`s3.z` := v3 @kind object;
  #L3a8540.  return @kind void;
}
procedure `int` `a`(`k2.f0` v2 @kind this, `a2.m` v3 @kind object) @signature `Lk2/f0;.a:(La2/m;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3a81f0.  v0:= v2.`k2.f0.c` @type ^`s3.z` @kind object;
  #L3a81f4.  v1:= `@@s3.l0.f` @type ^`byte`[] @kind object;
  #L3a81f8.  call `L`(v0, v1) @signature `Ls3/z;.L:([B)V` @kind virtual;
  #L3a81fe.  v0:= 1I;
  #L3a8200.  v2.`k2.f0.d` @type ^`boolean` := v0 @kind boolean;
  #L3a8204.  call `i`(v3) @signature `La2/m;.i:()V` @kind interface;
  #L3a820a.  v3:= 0I;
  #L3a820c.  return v3;
}
procedure `int` `f`(`k2.f0` v8 @kind this, `a2.m` v9 @kind object, `a2.z` v10 @kind object, `int` v11 ) @signature `Lk2/f0;.f:(La2/m;La2/z;I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3a8310.  v0:= v8.`k2.f0.a` @type ^`int`;
  #L3a8314.  v0:= (`long`) v0 @kind i2l;
  #L3a8316.  call temp:= `a`(v9) @signature `La2/m;.a:()J` @kind interface;
  #L3a831c.  v2:= temp @kind wide;
  #L3a831e.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3a8324.  v0:= temp @kind wide;
  #L3a8326.  v1:= (`int`) v0 @kind l2i;
  #L3a8328.  call temp:= `q`(v9) @signature `La2/m;.q:()J` @kind interface;
  #L3a832e.  v2:= temp @kind wide;
  #L3a8330.  v0:= 0I;
  #L3a8332.  v4:= (`long`) v0 @kind i2l;
  #L3a8334.  v6:= 1I;
  #L3a8336.  v7:= lcmp(v2, v4);
  #L3a833a.  if v7 == 0 then goto L3a8344;
  #L3a833e.  v10.`a2.z.a` @type ^`long` := v4 @kind wide;
  #L3a8342.  return v6;
  #L3a8344.  v10:= v8.`k2.f0.c` @type ^`s3.z` @kind object;
  #L3a8348.  call `K`(v10, v1) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L3a834e.  call `i`(v9) @signature `La2/m;.i:()V` @kind interface;
  #L3a8354.  v10:= v8.`k2.f0.c` @type ^`s3.z` @kind object;
  #L3a8358.  call temp:= `d`(v10) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a835e.  v10:= temp @kind object;
  #L3a8360.  call `o`(v9, v10, v0, v1) @signature `La2/m;.o:([BII)V` @kind interface;
  #L3a8366.  v9:= v8.`k2.f0.c` @type ^`s3.z` @kind object;
  #L3a836a.  call temp:= `g`(v8, v9, v11) @signature `Lk2/f0;.g:(Ls3/z;I)J` @kind direct;
  #L3a8370.  v9:= temp @kind wide;
  #L3a8372.  v8.`k2.f0.g` @type ^`long` := v9 @kind wide;
  #L3a8376.  v8.`k2.f0.e` @type ^`boolean` := v6 @kind boolean;
  #L3a837a.  return v0;
}
procedure `long` `g`(`k2.f0` v7 @kind this, `s3.z` v8 @kind object, `int` v9 ) @signature `Lk2/f0;.g:(Ls3/z;I)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a8424.  call temp:= `e`(v8) @signature `Ls3/z;.e:()I` @kind virtual;
  #L3a842a.  v0:= temp;
  #L3a842c.  call temp:= `f`(v8) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3a8432.  v1:= temp;
  #L3a8434.  v2:= -4.9E-324D;
  #L3a843e.  if v0 >= v1 then goto L3a8470;
  #L3a8442.  call temp:= `d`(v8) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a8448.  v4:= temp @kind object;
  #L3a844a.  v4:= v4[v0] @kind byte;
  #L3a844e.  v5:= 71I;
  #L3a8452.  if v4 == v5 then goto L3a8458;
  #L3a8456.  goto L3a846a;
  #L3a8458.  call temp:= `c`(v8, v0, v9) @signature `Lk2/j0;.c:(Ls3/z;II)J` @kind static;
  #L3a845e.  v4:= temp @kind wide;
  #L3a8460.  v6:= lcmp(v4, v2);
  #L3a8464.  if v6 == 0 then goto L3a846a;
  #L3a8468.  return v4 @kind wide;
  #L3a846a.  v0:= v0 + 1;
  #L3a846e.  goto L3a8434;
  #L3a8470.  return v2 @kind wide;
}
procedure `int` `h`(`k2.f0` v7 @kind this, `a2.m` v8 @kind object, `a2.z` v9 @kind object, `int` v10 ) @signature `Lk2/f0;.h:(La2/m;La2/z;I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a838c.  call temp:= `a`(v8) @signature `La2/m;.a:()J` @kind interface;
  #L3a8392.  v0:= temp @kind wide;
  #L3a8394.  v2:= v7.`k2.f0.a` @type ^`int`;
  #L3a8398.  v2:= (`long`) v2 @kind i2l;
  #L3a839a.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3a83a0.  v2:= temp @kind wide;
  #L3a83a2.  v3:= (`int`) v2 @kind l2i;
  #L3a83a4.  v4:= (`long`) v3 @kind i2l;
  #L3a83a6.  v0:= v0 - v4 @kind long;
  #L3a83a8.  call temp:= `q`(v8) @signature `La2/m;.q:()J` @kind interface;
  #L3a83ae.  v4:= temp @kind wide;
  #L3a83b0.  v2:= 1I;
  #L3a83b2.  v6:= lcmp(v4, v0);
  #L3a83b6.  if v6 == 0 then goto L3a83c0;
  #L3a83ba.  v9.`a2.z.a` @type ^`long` := v0 @kind wide;
  #L3a83be.  return v2;
  #L3a83c0.  v9:= v7.`k2.f0.c` @type ^`s3.z` @kind object;
  #L3a83c4.  call `K`(v9, v3) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L3a83ca.  call `i`(v8) @signature `La2/m;.i:()V` @kind interface;
  #L3a83d0.  v9:= v7.`k2.f0.c` @type ^`s3.z` @kind object;
  #L3a83d4.  call temp:= `d`(v9) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a83da.  v9:= temp @kind object;
  #L3a83dc.  v0:= 0I;
  #L3a83de.  call `o`(v8, v9, v0, v3) @signature `La2/m;.o:([BII)V` @kind interface;
  #L3a83e4.  v8:= v7.`k2.f0.c` @type ^`s3.z` @kind object;
  #L3a83e8.  call temp:= `i`(v7, v8, v10) @signature `Lk2/f0;.i:(Ls3/z;I)J` @kind direct;
  #L3a83ee.  v8:= temp @kind wide;
  #L3a83f0.  v7.`k2.f0.h` @type ^`long` := v8 @kind wide;
  #L3a83f4.  v7.`k2.f0.f` @type ^`boolean` := v2 @kind boolean;
  #L3a83f8.  return v0;
}
procedure `long` `i`(`k2.f0` v8 @kind this, `s3.z` v9 @kind object, `int` v10 ) @signature `Lk2/f0;.i:(Ls3/z;I)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3a8484.  call temp:= `e`(v9) @signature `Ls3/z;.e:()I` @kind virtual;
  #L3a848a.  v0:= temp;
  #L3a848c.  call temp:= `f`(v9) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3a8492.  v1:= temp;
  #L3a8494.  v2:= v1 + -188;
  #L3a8498.  v3:= -4.9E-324D;
  #L3a84a2.  if v2 < v0 then goto L3a84d4;
  #L3a84a6.  call temp:= `d`(v9) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3a84ac.  v5:= temp @kind object;
  #L3a84ae.  call temp:= `b`(v5, v0, v1, v2) @signature `Lk2/j0;.b:([BIII)Z` @kind static;
  #L3a84b4.  v5:= temp;
  #L3a84b6.  if v5 != 0 then goto L3a84bc;
  #L3a84ba.  goto L3a84ce;
  #L3a84bc.  call temp:= `c`(v9, v2, v10) @signature `Lk2/j0;.c:(Ls3/z;II)J` @kind static;
  #L3a84c2.  v5:= temp @kind wide;
  #L3a84c4.  v7:= lcmp(v5, v3);
  #L3a84c8.  if v7 == 0 then goto L3a84ce;
  #L3a84cc.  return v5 @kind wide;
  #L3a84ce.  v2:= v2 + -1;
  #L3a84d2.  goto L3a8498;
  #L3a84d4.  return v3 @kind wide;
}
procedure `long` `b`(`k2.f0` v2 @kind this) @signature `Lk2/f0;.b:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a840c.  v0:= v2.`k2.f0.i` @type ^`long` @kind wide;
  #L3a8410.  return v0 @kind wide;
}
procedure `s3.h0` `c`(`k2.f0` v1 @kind this) @signature `Lk2/f0;.c:()Ls3/h0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a84e8.  v0:= v1.`k2.f0.b` @type ^`s3.h0` @kind object;
  #L3a84ec.  return v0 @kind object;
}
procedure `boolean` `d`(`k2.f0` v1 @kind this) @signature `Lk2/f0;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a81d8.  v0:= v1.`k2.f0.d` @type ^`boolean` @kind boolean;
  #L3a81dc.  return v0;
}
procedure `int` `e`(`k2.f0` v6 @kind this, `a2.m` v7 @kind object, `a2.z` v8 @kind object, `int` v9 ) @signature `Lk2/f0;.e:(La2/m;La2/z;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a8220.  if v9 > 0 then goto L3a822e;
  #L3a8224.  call temp:= `a`(v6, v7) @signature `Lk2/f0;.a:(La2/m;)I` @kind direct;
  #L3a822a.  v7:= temp;
  #L3a822c.  return v7;
  #L3a822e.  v0:= v6.`k2.f0.f` @type ^`boolean` @kind boolean;
  #L3a8232.  if v0 != 0 then goto L3a8240;
  #L3a8236.  call temp:= `h`(v6, v7, v8, v9) @signature `Lk2/f0;.h:(La2/m;La2/z;I)I` @kind direct;
  #L3a823c.  v7:= temp;
  #L3a823e.  return v7;
  #L3a8240.  v0:= v6.`k2.f0.h` @type ^`long` @kind wide;
  #L3a8244.  v2:= -4.9E-324D;
  #L3a824e.  v4:= lcmp(v0, v2);
  #L3a8252.  if v4 != 0 then goto L3a8260;
  #L3a8256.  call temp:= `a`(v6, v7) @signature `Lk2/f0;.a:(La2/m;)I` @kind direct;
  #L3a825c.  v7:= temp;
  #L3a825e.  return v7;
  #L3a8260.  v0:= v6.`k2.f0.e` @type ^`boolean` @kind boolean;
  #L3a8264.  if v0 != 0 then goto L3a8272;
  #L3a8268.  call temp:= `f`(v6, v7, v8, v9) @signature `Lk2/f0;.f:(La2/m;La2/z;I)I` @kind direct;
  #L3a826e.  v7:= temp;
  #L3a8270.  return v7;
  #L3a8272.  v8:= v6.`k2.f0.g` @type ^`long` @kind wide;
  #L3a8276.  v0:= lcmp(v8, v2);
  #L3a827a.  if v0 != 0 then goto L3a8288;
  #L3a827e.  call temp:= `a`(v6, v7) @signature `Lk2/f0;.a:(La2/m;)I` @kind direct;
  #L3a8284.  v7:= temp;
  #L3a8286.  return v7;
  #L3a8288.  v0:= v6.`k2.f0.b` @type ^`s3.h0` @kind object;
  #L3a828c.  call temp:= `b`(v0, v8) @signature `Ls3/h0;.b:(J)J` @kind virtual;
  #L3a8292.  v8:= temp @kind wide;
  #L3a8294.  v0:= v6.`k2.f0.b` @type ^`s3.h0` @kind object;
  #L3a8298.  v4:= v6.`k2.f0.h` @type ^`long` @kind wide;
  #L3a829c.  call temp:= `b`(v0, v4) @signature `Ls3/h0;.b:(J)J` @kind virtual;
  #L3a82a2.  v0:= temp @kind wide;
  #L3a82a4.  v0:= v0 - v8 @kind long;
  #L3a82a6.  v6.`k2.f0.i` @type ^`long` := v0 @kind wide;
  #L3a82aa.  v8:= 0L;
  #L3a82ae.  v4:= lcmp(v0, v8);
  #L3a82b2.  if v4 >= 0 then goto L3a82f4;
  #L3a82b6.  v8:= new `java.lang.StringBuilder`;
  #L3a82ba.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a82c0.  v9:= "Invalid duration: " @kind object;
  #L3a82c4.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a82ca.  v0:= v6.`k2.f0.i` @type ^`long` @kind wide;
  #L3a82ce.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a82d4.  v9:= ". Using TIME_UNSET instead." @kind object;
  #L3a82d8.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a82de.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a82e4.  v8:= temp @kind object;
  #L3a82e6.  v9:= "TsDurationReader" @kind object;
  #L3a82ea.  call `h`(v9, v8) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3a82f0.  v6.`k2.f0.i` @type ^`long` := v2 @kind wide;
  #L3a82f4.  call temp:= `a`(v6, v7) @signature `Lk2/f0;.a:(La2/m;)I` @kind direct;
  #L3a82fa.  v7:= temp;
  #L3a82fc.  return v7;
}
