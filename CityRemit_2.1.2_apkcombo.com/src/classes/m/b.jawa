record `m.b` @kind class @AccessFlag PUBLIC extends `m.c` @kind class {
  `java.lang.Object` `m.b.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ExecutorService` `m.b.b` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `m.b.c` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`m.b` v2 @kind this) @signature `Lm/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3d1e14.  call `<init>`(v2) @signature `Lm/c;.<init>:()V` @kind direct;
  #L3d1e1a.  v0:= new `java.lang.Object`;
  #L3d1e1e.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d1e24.  v2.`m.b.a` @type ^`java.lang.Object` := v0 @kind object;
  #L3d1e28.  v0:= new `m.b$a`;
  #L3d1e2c.  call `<init>`(v0, v2) @signature `Lm/b$a;.<init>:(Lm/b;)V` @kind direct;
  #L3d1e32.  v1:= 4I;
  #L3d1e34.  call temp:= `newFixedThreadPool`(v1, v0) @signature `Ljava/util/concurrent/Executors;.newFixedThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;` @kind static;
  #L3d1e3a.  v0:= temp @kind object;
  #L3d1e3c.  v2.`m.b.b` @type ^`java.util.concurrent.ExecutorService` := v0 @kind object;
  #L3d1e40.  return @kind void;
}
procedure `android.os.Handler` `d`(`android.os.Looper` v7 @kind object) @signature `Lm/b;.d:(Landroid/os/Looper;)Landroid/os/Handler;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d1d2c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3d1d30.  v1:= 28I;
  #L3d1d34.  if v0 < v1 then goto L3d1d42;
  #L3d1d38.  call temp:= `createAsync`(v7) @signature `Landroid/os/Handler;.createAsync:(Landroid/os/Looper;)Landroid/os/Handler;` @kind static;
  #L3d1d3e.  v7:= temp @kind object;
  #L3d1d40.  return v7 @kind object;
  #L3d1d42.  v1:= 16I;
  #L3d1d46.  if v0 < v1 then goto L3d1daa;
  #L3d1d4a.  v0:= constclass @type ^`android.os.Handler` @kind object;
  #L3d1d4e.  v1:= 3I;
  #L3d1d50.  v2:= new `java.lang.Class`[v1];
  #L3d1d54.  v3:= constclass @type ^`android.os.Looper` @kind object;
  #L3d1d58.  v4:= 0I;
  #L3d1d5a.  v2[v4]:= v3 @kind object;
  #L3d1d5e.  v3:= constclass @type ^`android.os.Handler$Callback` @kind object;
  #L3d1d62.  v5:= 1I;
  #L3d1d64.  v2[v5]:= v3 @kind object;
  #L3d1d68.  v3:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L3d1d6c.  v6:= 2I;
  #L3d1d6e.  v2[v6]:= v3 @kind object;
  #L3d1d72.  call temp:= `getDeclaredConstructor`(v0, v2) @signature `Ljava/lang/Class;.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L3d1d78.  v0:= temp @kind object;
  #L3d1d7a.  v1:= new `java.lang.Object`[v1];
  #L3d1d7e.  v1[v4]:= v7 @kind object;
  #L3d1d82.  v2:= 0I;
  #L3d1d84.  v1[v5]:= v2 @kind object;
  #L3d1d88.  v2:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3d1d8c.  v1[v6]:= v2 @kind object;
  #L3d1d90.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3d1d96.  v0:= temp @kind object;
  #L3d1d98.  v0:= (`android.os.Handler`) v0 @kind object;
  #L3d1d9c.  return v0 @kind object;
  #L3d1d9e.  v0:= new `android.os.Handler`;
  #L3d1da2.  call `<init>`(v0, v7) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L3d1da8.  return v0 @kind object;
  #L3d1daa.  v0:= new `android.os.Handler`;
  #L3d1dae.  call `<init>`(v0, v7) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L3d1db4.  return v0 @kind object;
  catch `java.lang.IllegalAccessException` @[L3d1d4a..L3d1d9c] goto L3d1daa;
  catch `java.lang.InstantiationException` @[L3d1d4a..L3d1d9c] goto L3d1daa;
  catch `java.lang.NoSuchMethodException` @[L3d1d4a..L3d1d9c] goto L3d1daa;
  catch `java.lang.reflect.InvocationTargetException` @[L3d1d4a..L3d1d9c] goto L3d1d9e;
}
procedure `void` `a`(`m.b` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lm/b;.a:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d1e54.  v0:= v1.`m.b.b` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3d1e58.  call `execute`(v0, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3d1e5e.  return @kind void;
}
procedure `boolean` `b`(`m.b` v2 @kind this) @signature `Lm/b;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d1de0.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L3d1de6.  v0:= temp @kind object;
  #L3d1de8.  call temp:= `getThread`(v0) @signature `Landroid/os/Looper;.getThread:()Ljava/lang/Thread;` @kind virtual;
  #L3d1dee.  v0:= temp @kind object;
  #L3d1df0.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3d1df6.  v1:= temp @kind object;
  #L3d1df8.  if v0 != v1 then goto L3d1e00;
  #L3d1dfc.  v0:= 1I;
  #L3d1dfe.  goto L3d1e02;
  #L3d1e00.  v0:= 0I;
  #L3d1e02.  return v0;
}
procedure `void` `c`(`m.b` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lm/b;.c:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d1e70.  v0:= v2.`m.b.c` @type ^`android.os.Handler` @kind object;
  #L3d1e74.  if v0 != 0 then goto L3d1ea4;
  #L3d1e78.  v0:= v2.`m.b.a` @type ^`java.lang.Object` @kind object;
  #L3d1e7c.  @monitorenter v0
  #L3d1e7e.  v1:= v2.`m.b.c` @type ^`android.os.Handler` @kind object;
  #L3d1e82.  if v1 != 0 then goto L3d1e9a;
  #L3d1e86.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L3d1e8c.  v1:= temp @kind object;
  #L3d1e8e.  call temp:= `d`(v1) @signature `Lm/b;.d:(Landroid/os/Looper;)Landroid/os/Handler;` @kind static;
  #L3d1e94.  v1:= temp @kind object;
  #L3d1e96.  v2.`m.b.c` @type ^`android.os.Handler` := v1 @kind object;
  #L3d1e9a.  @monitorexit v0
  #L3d1e9c.  goto L3d1ea4;
  #L3d1e9e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d1ea0.  @monitorexit v0
  #L3d1ea2.  throw v3;
  #L3d1ea4.  v0:= v2.`m.b.c` @type ^`android.os.Handler` @kind object;
  #L3d1ea8.  call temp:= `post`(v0, v3) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L3d1eae.  return @kind void;
  catch `java.lang.Throwable` @[L3d1e7e..L3d1ea2] goto L3d1e9e;
}
