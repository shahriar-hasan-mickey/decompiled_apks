record `l3.c` @kind class @AccessFlag FINAL {
  `java.lang.String` `l3.c.a` @AccessFlag PUBLIC_FINAL;
  `int` `l3.c.b` @AccessFlag PUBLIC_FINAL;
  `java.lang.Integer` `l3.c.c` @AccessFlag PUBLIC_FINAL;
  `java.lang.Integer` `l3.c.d` @AccessFlag PUBLIC_FINAL;
  `float` `l3.c.e` @AccessFlag PUBLIC_FINAL;
  `boolean` `l3.c.f` @AccessFlag PUBLIC_FINAL;
  `boolean` `l3.c.g` @AccessFlag PUBLIC_FINAL;
  `boolean` `l3.c.h` @AccessFlag PUBLIC_FINAL;
  `boolean` `l3.c.i` @AccessFlag PUBLIC_FINAL;
  `int` `l3.c.j` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`l3.c` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.Integer` v3 @kind object, `java.lang.Integer` v4 @kind object, `float` v5 , `boolean` v6 , `boolean` v7 , `boolean` v8 , `boolean` v9 , `int` v10 ) @signature `Ll3/c;.<init>:(Ljava/lang/String;ILjava/lang/Integer;Ljava/lang/Integer;FZZZZI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3c3bf8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c3bfe.  v0.`l3.c.a` @type ^`java.lang.String` := v1 @kind object;
  #L3c3c02.  v0.`l3.c.b` @type ^`int` := v2;
  #L3c3c06.  v0.`l3.c.c` @type ^`java.lang.Integer` := v3 @kind object;
  #L3c3c0a.  v0.`l3.c.d` @type ^`java.lang.Integer` := v4 @kind object;
  #L3c3c0e.  v0.`l3.c.e` @type ^`float` := v5;
  #L3c3c12.  v0.`l3.c.f` @type ^`boolean` := v6 @kind boolean;
  #L3c3c16.  v0.`l3.c.g` @type ^`boolean` := v7 @kind boolean;
  #L3c3c1a.  v0.`l3.c.h` @type ^`boolean` := v8 @kind boolean;
  #L3c3c1e.  v0.`l3.c.i` @type ^`boolean` := v9 @kind boolean;
  #L3c3c22.  v0.`l3.c.j` @type ^`int` := v10;
  #L3c3c26.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v0 @kind object) @signature `Ll3/c;.a:(Ljava/lang/String;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c37b0.  call temp:= `e`(v0) @signature `Ll3/c;.e:(Ljava/lang/String;)I` @kind static;
  #L3c37b6.  v0:= temp;
  #L3c37b8.  return v0;
}
procedure `l3.c` `b`(`java.lang.String` v18 @kind object, `l3.c$a` v19 @kind object) @signature `Ll3/c;.b:(Ljava/lang/String;Ll3/c$a;)Ll3/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L3c39ac.  v1:= v18 @kind object;
  #L3c39b0.  v0:= v19 @kind object;
  #L3c39b4.  v2:= "Style:" @kind object;
  #L3c39b8.  call temp:= `startsWith`(v1, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3c39be.  v2:= temp;
  #L3c39c0.  call `a`(v2) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L3c39c6.  v2:= 6I;
  #L3c39c8.  call temp:= `substring`(v1, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3c39ce.  v2:= temp @kind object;
  #L3c39d0.  v3:= "," @kind object;
  #L3c39d4.  call temp:= `split`(v2, v3) @signature `Landroid/text/TextUtils;.split:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L3c39da.  v2:= temp @kind object;
  #L3c39dc.  v3:= length @variable v2;
  #L3c39de.  v4:= v0.`l3.c$a.k` @type ^`int`;
  #L3c39e2.  v5:= "SsaStyle" @kind object;
  #L3c39e6.  v6:= 0I;
  #L3c39e8.  v7:= 1I;
  #L3c39ea.  v8:= 0I;
  #L3c39ec.  if v3 == v4 then goto L3c3a2a;
  #L3c39f0.  v0:= 3I;
  #L3c39f2.  v0:= new `java.lang.Object`[v0];
  #L3c39f6.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3c39fc.  v3:= temp @kind object;
  #L3c39fe.  v0[v8]:= v3 @kind object;
  #L3c3a02.  v2:= length @variable v2;
  #L3c3a04.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3c3a0a.  v2:= temp @kind object;
  #L3c3a0c.  v0[v7]:= v2 @kind object;
  #L3c3a10.  v2:= 2I;
  #L3c3a12.  v0[v2]:= v1 @kind object;
  #L3c3a16.  v1:= "Skipping malformed 'Style:' line (expected %s values, found %s): '%s'" @kind object;
  #L3c3a1a.  call temp:= `C`(v1, v0) @signature `Ls3/l0;.C:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3c3a20.  v0:= temp @kind object;
  #L3c3a22.  call `h`(v5, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3c3a28.  return v6 @kind object;
  #L3c3a2a.  v3:= new `l3.c`;
  #L3c3a2e.  v4:= v0.`l3.c$a.a` @type ^`int`;
  #L3c3a32.  v4:= v2[v4] @kind object;
  #L3c3a36.  call temp:= `trim`(v4) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c3a3c.  v4:= temp @kind object;
  #L3c3a3e.  v9:= v0.`l3.c$a.b` @type ^`int`;
  #L3c3a42.  v10:= -1I;
  #L3c3a44.  if v9 == v10 then goto L3c3a5e;
  #L3c3a48.  v9:= v2[v9] @kind object;
  #L3c3a4c.  call temp:= `trim`(v9) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c3a52.  v9:= temp @kind object;
  #L3c3a54.  call temp:= `e`(v9) @signature `Ll3/c;.e:(Ljava/lang/String;)I` @kind static;
  #L3c3a5a.  v9:= temp;
  #L3c3a5c.  goto L3c3a60;
  #L3c3a5e.  v9:= -1I;
  #L3c3a60.  v11:= v0.`l3.c$a.c` @type ^`int`;
  #L3c3a64.  if v11 == v10 then goto L3c3a7e;
  #L3c3a68.  v11:= v2[v11] @kind object;
  #L3c3a6c.  call temp:= `trim`(v11) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c3a72.  v11:= temp @kind object;
  #L3c3a74.  call temp:= `h`(v11) @signature `Ll3/c;.h:(Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L3c3a7a.  v11:= temp @kind object;
  #L3c3a7c.  goto L3c3a80;
  #L3c3a7e.  v11:= v6 @kind object;
  #L3c3a80.  v12:= v0.`l3.c$a.d` @type ^`int`;
  #L3c3a84.  if v12 == v10 then goto L3c3a9e;
  #L3c3a88.  v12:= v2[v12] @kind object;
  #L3c3a8c.  call temp:= `trim`(v12) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c3a92.  v12:= temp @kind object;
  #L3c3a94.  call temp:= `h`(v12) @signature `Ll3/c;.h:(Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L3c3a9a.  v12:= temp @kind object;
  #L3c3a9c.  goto L3c3aa0;
  #L3c3a9e.  v12:= v6 @kind object;
  #L3c3aa0.  v13:= v0.`l3.c$a.e` @type ^`int`;
  #L3c3aa4.  if v13 == v10 then goto L3c3abe;
  #L3c3aa8.  v13:= v2[v13] @kind object;
  #L3c3aac.  call temp:= `trim`(v13) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c3ab2.  v13:= temp @kind object;
  #L3c3ab4.  call temp:= `i`(v13) @signature `Ll3/c;.i:(Ljava/lang/String;)F` @kind static;
  #L3c3aba.  v13:= temp;
  #L3c3abc.  goto L3c3ac4;
  #L3c3abe.  v13:= -8388609I;
  #L3c3ac4.  v14:= v0.`l3.c$a.f` @type ^`int`;
  #L3c3ac8.  if v14 == v10 then goto L3c3ae8;
  #L3c3acc.  v14:= v2[v14] @kind object;
  #L3c3ad0.  call temp:= `trim`(v14) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c3ad6.  v14:= temp @kind object;
  #L3c3ad8.  call temp:= `f`(v14) @signature `Ll3/c;.f:(Ljava/lang/String;)Z` @kind static;
  #L3c3ade.  v14:= temp;
  #L3c3ae0.  if v14 == 0 then goto L3c3ae8;
  #L3c3ae4.  v14:= 1I;
  #L3c3ae6.  goto L3c3aea;
  #L3c3ae8.  v14:= 0I;
  #L3c3aea.  v15:= v0.`l3.c$a.g` @type ^`int`;
  #L3c3aee.  if v15 == v10 then goto L3c3b0e;
  #L3c3af2.  v15:= v2[v15] @kind object;
  #L3c3af6.  call temp:= `trim`(v15) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c3afc.  v15:= temp @kind object;
  #L3c3afe.  call temp:= `f`(v15) @signature `Ll3/c;.f:(Ljava/lang/String;)Z` @kind static;
  #L3c3b04.  v15:= temp;
  #L3c3b06.  if v15 == 0 then goto L3c3b0e;
  #L3c3b0a.  v15:= 1I;
  #L3c3b0c.  goto L3c3b10;
  #L3c3b0e.  v15:= 0I;
  #L3c3b10.  v7:= v0.`l3.c$a.h` @type ^`int`;
  #L3c3b14.  if v7 == v10 then goto L3c3b36;
  #L3c3b18.  v7:= v2[v7] @kind object;
  #L3c3b1c.  call temp:= `trim`(v7) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c3b22.  v7:= temp @kind object;
  #L3c3b24.  call temp:= `f`(v7) @signature `Ll3/c;.f:(Ljava/lang/String;)Z` @kind static;
  #L3c3b2a.  v7:= temp;
  #L3c3b2c.  if v7 == 0 then goto L3c3b36;
  #L3c3b30.  v17:= 1I;
  #L3c3b34.  goto L3c3b3a;
  #L3c3b36.  v17:= 0I;
  #L3c3b3a.  v7:= v0.`l3.c$a.i` @type ^`int`;
  #L3c3b3e.  if v7 == v10 then goto L3c3b60;
  #L3c3b42.  v7:= v2[v7] @kind object;
  #L3c3b46.  call temp:= `trim`(v7) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c3b4c.  v7:= temp @kind object;
  #L3c3b4e.  call temp:= `f`(v7) @signature `Ll3/c;.f:(Ljava/lang/String;)Z` @kind static;
  #L3c3b54.  v7:= temp;
  #L3c3b56.  if v7 == 0 then goto L3c3b60;
  #L3c3b5a.  v16:= 1I;
  #L3c3b5e.  goto L3c3b64;
  #L3c3b60.  v16:= 0I;
  #L3c3b64.  v0:= v0.`l3.c$a.j` @type ^`int`;
  #L3c3b68.  if v0 == v10 then goto L3c3b82;
  #L3c3b6c.  v0:= v2[v0] @kind object;
  #L3c3b70.  call temp:= `trim`(v0) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c3b76.  v0:= temp @kind object;
  #L3c3b78.  call temp:= `g`(v0) @signature `Ll3/c;.g:(Ljava/lang/String;)I` @kind static;
  #L3c3b7e.  v0:= temp;
  #L3c3b80.  goto L3c3b84;
  #L3c3b82.  v0:= -1I;
  #L3c3b84.  v7:= v3 @kind object;
  #L3c3b86.  v8:= v4 @kind object;
  #L3c3b88.  v10:= v11 @kind object;
  #L3c3b8a.  v11:= v12 @kind object;
  #L3c3b8c.  v12:= v13;
  #L3c3b8e.  v13:= v14;
  #L3c3b90.  v14:= v15;
  #L3c3b92.  v15:= v17;
  #L3c3b96.  v17:= v0;
  #L3c3b9a.  call `<init>`(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17) @signature `Ll3/c;.<init>:(Ljava/lang/String;ILjava/lang/Integer;Ljava/lang/Integer;FZZZZI)V` @kind direct;
  #L3c3ba0.  return v3 @kind object;
  #L3c3ba2.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L3c3ba4.  v2:= new `java.lang.StringBuilder`;
  #L3c3ba8.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c3bae.  v3:= "Skipping malformed 'Style:' line: '" @kind object;
  #L3c3bb2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3bb8.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3bbe.  v1:= "'" @kind object;
  #L3c3bc2.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3bc8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c3bce.  v1:= temp @kind object;
  #L3c3bd0.  call `i`(v5, v1, v0) @signature `Ls3/q;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L3c3bd6.  return v6 @kind object;
  catch `java.lang.RuntimeException` @[L3c3a2a..L3c3ba0] goto L3c3ba2;
}
procedure `boolean` `c`(`int` v0 ) @signature `Ll3/c;.c:(I)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3c3660.  goto L3c3670;
  #L3c3666.  v0:= 0I;
  #L3c3668.  return v0;
  #L3c366a.  v0:= 1I;
  #L3c366c.  return v0;
  #L3c366e.  
  #L3c3670.  switch v0
                  | 1 => goto L3c366a
                  | 2 => goto L3c366a
                  | 3 => goto L3c366a
                  | 4 => goto L3c366a
                  | 5 => goto L3c366a
                  | 6 => goto L3c366a
                  | 7 => goto L3c366a
                  | 8 => goto L3c366a
                  | 9 => goto L3c366a
                  | else => goto L3c3666;
}
procedure `boolean` `d`(`int` v2 ) @signature `Ll3/c;.d:(I)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3c36ac.  v0:= 1I;
  #L3c36ae.  if v2 == v0 then goto L3c36bc;
  #L3c36b2.  v1:= 3I;
  #L3c36b4.  if v2 == v1 then goto L3c36bc;
  #L3c36b8.  v2:= 0I;
  #L3c36ba.  return v2;
  #L3c36bc.  return v0;
}
procedure `int` `e`(`java.lang.String` v2 @kind object) @signature `Ll3/c;.e:(Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3c37cc.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c37d2.  v0:= temp @kind object;
  #L3c37d4.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3c37da.  v0:= temp;
  #L3c37dc.  call temp:= `c`(v0) @signature `Ll3/c;.c:(I)Z` @kind static;
  #L3c37e2.  v1:= temp;
  #L3c37e4.  if v1 == 0 then goto L3c37ea;
  #L3c37e8.  return v0;
  #L3c37ea.  v0:= new `java.lang.StringBuilder`;
  #L3c37ee.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c37f4.  v1:= "Ignoring unknown alignment: " @kind object;
  #L3c37f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c37fe.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3804.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c380a.  v2:= temp @kind object;
  #L3c380c.  v0:= "SsaStyle" @kind object;
  #L3c3810.  call `h`(v0, v2) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3c3816.  v2:= -1I;
  #L3c3818.  return v2;
  catch `java.lang.NumberFormatException` @[L3c37cc..L3c37e4] goto L3c37ea;
}
procedure `boolean` `f`(`java.lang.String` v4 @kind object) @signature `Ll3/c;.f:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c36d0.  v0:= 0I;
  #L3c36d2.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3c36d8.  v4:= temp;
  #L3c36da.  v1:= 1I;
  #L3c36dc.  if v4 == v1 then goto L3c36e6;
  #L3c36e0.  v2:= -1I;
  #L3c36e2.  if v4 != v2 then goto L3c36e8;
  #L3c36e6.  v0:= 1I;
  #L3c36e8.  return v0;
  #L3c36ea.  v1:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L3c36ec.  v2:= new `java.lang.StringBuilder`;
  #L3c36f0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c36f6.  v3:= "Failed to parse boolean value: '" @kind object;
  #L3c36fa.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3700.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3706.  v4:= "'" @kind object;
  #L3c370a.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3710.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c3716.  v4:= temp @kind object;
  #L3c3718.  v2:= "SsaStyle" @kind object;
  #L3c371c.  call `i`(v2, v4, v1) @signature `Ls3/q;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L3c3722.  return v0;
  catch `java.lang.NumberFormatException` @[L3c36d2..L3c36da] goto L3c36ea;
}
procedure `int` `g`(`java.lang.String` v2 @kind object) @signature `Ll3/c;.g:(Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3c383c.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c3842.  v0:= temp @kind object;
  #L3c3844.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3c384a.  v0:= temp;
  #L3c384c.  call temp:= `d`(v0) @signature `Ll3/c;.d:(I)Z` @kind static;
  #L3c3852.  v1:= temp;
  #L3c3854.  if v1 == 0 then goto L3c385a;
  #L3c3858.  return v0;
  #L3c385a.  v0:= new `java.lang.StringBuilder`;
  #L3c385e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c3864.  v1:= "Ignoring unknown BorderStyle: " @kind object;
  #L3c3868.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c386e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3874.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c387a.  v2:= temp @kind object;
  #L3c387c.  v0:= "SsaStyle" @kind object;
  #L3c3880.  call `h`(v0, v2) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3c3886.  v2:= -1I;
  #L3c3888.  return v2;
  catch `java.lang.NumberFormatException` @[L3c383c..L3c3854] goto L3c385a;
}
procedure `java.lang.Integer` `h`(`java.lang.String` v8 @kind object) @signature `Ll3/c;.h:(Ljava/lang/String;)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3c38ac.  v0:= "&H" @kind object;
  #L3c38b0.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3c38b6.  v0:= temp;
  #L3c38b8.  v1:= 16I;
  #L3c38bc.  if v0 == 0 then goto L3c38d4;
  #L3c38c0.  v0:= 2I;
  #L3c38c2.  call temp:= `substring`(v8, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3c38c8.  v0:= temp @kind object;
  #L3c38ca.  call temp:= `parseLong`(v0, v1) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;I)J` @kind static;
  #L3c38d0.  v2:= temp @kind wide;
  #L3c38d2.  goto L3c38dc;
  #L3c38d4.  call temp:= `parseLong`(v8) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3c38da.  v2:= temp @kind wide;
  #L3c38dc.  v4:= 4294967295L;
  #L3c38e6.  v0:= lcmp(v2, v4);
  #L3c38ea.  if v0 > 0 then goto L3c38f2;
  #L3c38ee.  v0:= 1I;
  #L3c38f0.  goto L3c38f4;
  #L3c38f2.  v0:= 0I;
  #L3c38f4.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L3c38fa.  v8:= 24I;
  #L3c38fe.  v4:= v2 ^> v8 @kind long;
  #L3c3902.  v6:= 255L;
  #L3c3906.  v4:= v4 ^& v6 @kind long;
  #L3c3908.  v4:= v4 ^~ v6 @kind long;
  #L3c390a.  call temp:= `d`(v4) @signature `Lo5/d;.d:(J)I` @kind static;
  #L3c3910.  v8:= temp;
  #L3c3912.  v0:= v2 ^> v1 @kind long;
  #L3c3916.  v0:= v0 ^& v6 @kind long;
  #L3c3918.  call temp:= `d`(v0) @signature `Lo5/d;.d:(J)I` @kind static;
  #L3c391e.  v0:= temp;
  #L3c3920.  v1:= 8I;
  #L3c3924.  v4:= v2 ^> v1 @kind long;
  #L3c3928.  v4:= v4 ^& v6 @kind long;
  #L3c392a.  call temp:= `d`(v4) @signature `Lo5/d;.d:(J)I` @kind static;
  #L3c3930.  v1:= temp;
  #L3c3932.  v2:= v2 ^& v6 @kind long;
  #L3c3934.  call temp:= `d`(v2) @signature `Lo5/d;.d:(J)I` @kind static;
  #L3c393a.  v2:= temp;
  #L3c393c.  call temp:= `argb`(v8, v2, v1, v0) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L3c3942.  v8:= temp;
  #L3c3944.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3c394a.  v8:= temp @kind object;
  #L3c394c.  return v8 @kind object;
  #L3c394e.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L3c3950.  v1:= new `java.lang.StringBuilder`;
  #L3c3954.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c395a.  v2:= "Failed to parse color expression: '" @kind object;
  #L3c395e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3964.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c396a.  v8:= "'" @kind object;
  #L3c396e.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3974.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c397a.  v8:= temp @kind object;
  #L3c397c.  v1:= "SsaStyle" @kind object;
  #L3c3980.  call `i`(v1, v8, v0) @signature `Ls3/q;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L3c3986.  v8:= 0I;
  #L3c3988.  return v8 @kind object;
  catch `java.lang.IllegalArgumentException` @[L3c38ac..L3c38fa] goto L3c394e;
}
procedure `float` `i`(`java.lang.String` v3 @kind object) @signature `Ll3/c;.i:(Ljava/lang/String;)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3c3744.  call temp:= `parseFloat`(v3) @signature `Ljava/lang/Float;.parseFloat:(Ljava/lang/String;)F` @kind static;
  #L3c374a.  v3:= temp;
  #L3c374c.  return v3;
  #L3c374e.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L3c3750.  v1:= new `java.lang.StringBuilder`;
  #L3c3754.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c375a.  v2:= "Failed to parse font size: '" @kind object;
  #L3c375e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3764.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c376a.  v3:= "'" @kind object;
  #L3c376e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3774.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c377a.  v3:= temp @kind object;
  #L3c377c.  v1:= "SsaStyle" @kind object;
  #L3c3780.  call `i`(v1, v3, v0) @signature `Ls3/q;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L3c3786.  v3:= -8388609I;
  #L3c378c.  return v3;
  catch `java.lang.NumberFormatException` @[L3c3744..L3c374c] goto L3c374e;
}
