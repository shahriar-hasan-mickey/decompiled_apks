record `l3.a` @kind class @AccessFlag PUBLIC_FINAL extends `g3.f` @kind class {
  `boolean` `l3.a.n` @AccessFlag PRIVATE_FINAL;
  `l3.b` `l3.a.o` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `l3.a.p` @AccessFlag PRIVATE;
  `float` `l3.a.q` @AccessFlag PRIVATE;
  `float` `l3.a.r` @AccessFlag PRIVATE;
}
global `java.util.regex.Pattern` `@@l3.a.s` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ll3/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c2ba8.  v0:= "(?:(\\d+):)?(\\d+):(\\d+)[:.](\\d+)" @kind object;
  #L3c2bac.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3c2bb2.  v0:= temp @kind object;
  #L3c2bb4.  `@@l3.a.s` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L3c2bb8.  return @kind void;
}
procedure `void` `<init>`(`l3.a` v3 @kind this, `java.util.List` v4 @kind object) @signature `Ll3/a;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3c2bcc.  v0:= "SsaDecoder" @kind object;
  #L3c2bd0.  call `<init>`(v3, v0) @signature `Lg3/f;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c2bd6.  v0:= -8388609I;
  #L3c2bdc.  v3.`l3.a.q` @type ^`float` := v0;
  #L3c2be0.  v3.`l3.a.r` @type ^`float` := v0;
  #L3c2be4.  v0:= 0I;
  #L3c2be6.  if v4 == 0 then goto L3c2c58;
  #L3c2bea.  call temp:= `isEmpty`(v4) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3c2bf0.  v1:= temp;
  #L3c2bf2.  if v1 != 0 then goto L3c2c58;
  #L3c2bf6.  v1:= 1I;
  #L3c2bf8.  v3.`l3.a.n` @type ^`boolean` := v1 @kind boolean;
  #L3c2bfc.  call temp:= `get`(v4, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3c2c02.  v0:= temp @kind object;
  #L3c2c04.  v0:= (`byte`[]) v0 @kind object;
  #L3c2c08.  call temp:= `D`(v0) @signature `Ls3/l0;.D:([B)Ljava/lang/String;` @kind static;
  #L3c2c0e.  v0:= temp @kind object;
  #L3c2c10.  v2:= "Format:" @kind object;
  #L3c2c14.  call temp:= `startsWith`(v0, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3c2c1a.  v2:= temp;
  #L3c2c1c.  call `a`(v2) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L3c2c22.  call temp:= `a`(v0) @signature `Ll3/b;.a:(Ljava/lang/String;)Ll3/b;` @kind static;
  #L3c2c28.  v0:= temp @kind object;
  #L3c2c2a.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c2c30.  v0:= temp @kind object;
  #L3c2c32.  v0:= (`l3.b`) v0 @kind object;
  #L3c2c36.  v3.`l3.a.o` @type ^`l3.b` := v0 @kind object;
  #L3c2c3a.  v0:= new `s3.z`;
  #L3c2c3e.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3c2c44.  v4:= temp @kind object;
  #L3c2c46.  v4:= (`byte`[]) v4 @kind object;
  #L3c2c4a.  call `<init>`(v0, v4) @signature `Ls3/z;.<init>:([B)V` @kind direct;
  #L3c2c50.  call `H`(v3, v0) @signature `Ll3/a;.H:(Ls3/z;)V` @kind direct;
  #L3c2c56.  goto L3c2c62;
  #L3c2c58.  v3.`l3.a.n` @type ^`boolean` := v0 @kind boolean;
  #L3c2c5c.  v4:= 0I;
  #L3c2c5e.  v3.`l3.a.o` @type ^`l3.b` := v4 @kind object;
  #L3c2c62.  return @kind void;
}
procedure `int` `C`(`long` v4 , `java.util.List` v6 @kind object, `java.util.List` v7 @kind object) @signature `Ll3/a;.C:(JLjava/util/List;Ljava/util/List;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c2848.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3c284e.  v0:= temp;
  #L3c2850.  v0:= v0 + -1;
  #L3c2854.  if v0 < 0 then goto L3c289e;
  #L3c2858.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3c285e.  v1:= temp @kind object;
  #L3c2860.  v1:= (`java.lang.Long`) v1 @kind object;
  #L3c2864.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3c286a.  v1:= temp @kind wide;
  #L3c286c.  v3:= lcmp(v1, v4);
  #L3c2870.  if v3 != 0 then goto L3c2876;
  #L3c2874.  return v0;
  #L3c2876.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3c287c.  v1:= temp @kind object;
  #L3c287e.  v1:= (`java.lang.Long`) v1 @kind object;
  #L3c2882.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3c2888.  v1:= temp @kind wide;
  #L3c288a.  v3:= lcmp(v1, v4);
  #L3c288e.  if v3 >= 0 then goto L3c2898;
  #L3c2892.  v0:= v0 + 1;
  #L3c2896.  goto L3c28a0;
  #L3c2898.  v0:= v0 + -1;
  #L3c289c.  goto L3c2854;
  #L3c289e.  v0:= 0I;
  #L3c28a0.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3c28a6.  v4:= temp @kind object;
  #L3c28a8.  call `add`(v6, v0, v4) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L3c28ae.  v4:= new `java.util.ArrayList`;
  #L3c28b2.  if v0 != 0 then goto L3c28be;
  #L3c28b6.  call `<init>`(v4) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3c28bc.  goto L3c28d4;
  #L3c28be.  v5:= v0 + -1;
  #L3c28c2.  call temp:= `get`(v7, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3c28c8.  v5:= temp @kind object;
  #L3c28ca.  v5:= (`java.util.Collection`) v5 @kind object;
  #L3c28ce.  call `<init>`(v4, v5) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3c28d4.  call `add`(v7, v0, v4) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L3c28da.  return v0;
}
procedure `float` `D`(`int` v1 ) @signature `Ll3/a;.D:(I)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3c25c0.  if v1 == 0 then goto L3c25e6;
  #L3c25c4.  v0:= 1I;
  #L3c25c6.  if v1 == v0 then goto L3c25e0;
  #L3c25ca.  v0:= 2I;
  #L3c25cc.  if v1 == v0 then goto L3c25d8;
  #L3c25d0.  v1:= -8388609I;
  #L3c25d6.  return v1;
  #L3c25d8.  v1:= 1064514355I;
  #L3c25de.  return v1;
  #L3c25e0.  v1:= 0.5F;
  #L3c25e4.  return v1;
  #L3c25e6.  v1:= 1028443341I;
  #L3c25ec.  return v1;
}
procedure `g3.b` `E`(`java.lang.String` v8 @kind object, `l3.c` v9 @kind object, `l3.c$b` v10 @kind object, `float` v11 , `float` v12 ) @signature `Ll3/a;.E:(Ljava/lang/String;Ll3/c;Ll3/c$b;FF)Lg3/b;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3c2600.  v0:= new `android.text.SpannableString`;
  #L3c2604.  call `<init>`(v0, v8) @signature `Landroid/text/SpannableString;.<init>:(Ljava/lang/CharSequence;)V` @kind direct;
  #L3c260a.  v8:= new `g3.b$b`;
  #L3c260e.  call `<init>`(v8) @signature `Lg3/b$b;.<init>:()V` @kind direct;
  #L3c2614.  call temp:= `o`(v8, v0) @signature `Lg3/b$b;.o:(Ljava/lang/CharSequence;)Lg3/b$b;` @kind virtual;
  #L3c261a.  v8:= temp @kind object;
  #L3c261c.  v1:= -8388609I;
  #L3c2622.  v2:= 0I;
  #L3c2624.  if v9 == 0 then goto L3c273c;
  #L3c2628.  v3:= v9.`l3.c.c` @type ^`java.lang.Integer` @kind object;
  #L3c262c.  v4:= 33I;
  #L3c2630.  if v3 == 0 then goto L3c2658;
  #L3c2634.  v3:= new `android.text.style.ForegroundColorSpan`;
  #L3c2638.  v5:= v9.`l3.c.c` @type ^`java.lang.Integer` @kind object;
  #L3c263c.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3c2642.  v5:= temp;
  #L3c2644.  call `<init>`(v3, v5) @signature `Landroid/text/style/ForegroundColorSpan;.<init>:(I)V` @kind direct;
  #L3c264a.  call temp:= `length`(v0) @signature `Landroid/text/SpannableString;.length:()I` @kind virtual;
  #L3c2650.  v5:= temp;
  #L3c2652.  call `setSpan`(v0, v3, v2, v5, v4) @signature `Landroid/text/SpannableString;.setSpan:(Ljava/lang/Object;III)V` @kind virtual;
  #L3c2658.  v3:= v9.`l3.c.j` @type ^`int`;
  #L3c265c.  v5:= 3I;
  #L3c265e.  if v3 != v5 then goto L3c268e;
  #L3c2662.  v3:= v9.`l3.c.d` @type ^`java.lang.Integer` @kind object;
  #L3c2666.  if v3 == 0 then goto L3c268e;
  #L3c266a.  v3:= new `android.text.style.BackgroundColorSpan`;
  #L3c266e.  v6:= v9.`l3.c.d` @type ^`java.lang.Integer` @kind object;
  #L3c2672.  call temp:= `intValue`(v6) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3c2678.  v6:= temp;
  #L3c267a.  call `<init>`(v3, v6) @signature `Landroid/text/style/BackgroundColorSpan;.<init>:(I)V` @kind direct;
  #L3c2680.  call temp:= `length`(v0) @signature `Landroid/text/SpannableString;.length:()I` @kind virtual;
  #L3c2686.  v6:= temp;
  #L3c2688.  call `setSpan`(v0, v3, v2, v6, v4) @signature `Landroid/text/SpannableString;.setSpan:(Ljava/lang/Object;III)V` @kind virtual;
  #L3c268e.  v3:= v9.`l3.c.e` @type ^`float`;
  #L3c2692.  v6:= 1I;
  #L3c2694.  v7:= fcmpl(v3, v1);
  #L3c2698.  if v7 == 0 then goto L3c26ac;
  #L3c269c.  v7:= fcmpl(v12, v1);
  #L3c26a0.  if v7 == 0 then goto L3c26ac;
  #L3c26a4.  v3:= v3 / v12 @kind float;
  #L3c26a6.  call temp:= `q`(v8, v3, v6) @signature `Lg3/b$b;.q:(FI)Lg3/b$b;` @kind virtual;
  #L3c26ac.  v3:= v9.`l3.c.f` @type ^`boolean` @kind boolean;
  #L3c26b0.  if v3 == 0 then goto L3c26c8;
  #L3c26b4.  v7:= v9.`l3.c.g` @type ^`boolean` @kind boolean;
  #L3c26b8.  if v7 == 0 then goto L3c26c8;
  #L3c26bc.  v3:= new `android.text.style.StyleSpan`;
  #L3c26c0.  call `<init>`(v3, v5) @signature `Landroid/text/style/StyleSpan;.<init>:(I)V` @kind direct;
  #L3c26c6.  goto L3c26d6;
  #L3c26c8.  if v3 == 0 then goto L3c26e6;
  #L3c26cc.  v3:= new `android.text.style.StyleSpan`;
  #L3c26d0.  call `<init>`(v3, v6) @signature `Landroid/text/style/StyleSpan;.<init>:(I)V` @kind direct;
  #L3c26d6.  call temp:= `length`(v0) @signature `Landroid/text/SpannableString;.length:()I` @kind virtual;
  #L3c26dc.  v5:= temp;
  #L3c26de.  call `setSpan`(v0, v3, v2, v5, v4) @signature `Landroid/text/SpannableString;.setSpan:(Ljava/lang/Object;III)V` @kind virtual;
  #L3c26e4.  goto L3c26fc;
  #L3c26e6.  v3:= v9.`l3.c.g` @type ^`boolean` @kind boolean;
  #L3c26ea.  if v3 == 0 then goto L3c26fc;
  #L3c26ee.  v3:= new `android.text.style.StyleSpan`;
  #L3c26f2.  v5:= 2I;
  #L3c26f4.  call `<init>`(v3, v5) @signature `Landroid/text/style/StyleSpan;.<init>:(I)V` @kind direct;
  #L3c26fa.  goto L3c26d6;
  #L3c26fc.  v3:= v9.`l3.c.h` @type ^`boolean` @kind boolean;
  #L3c2700.  if v3 == 0 then goto L3c271c;
  #L3c2704.  v3:= new `android.text.style.UnderlineSpan`;
  #L3c2708.  call `<init>`(v3) @signature `Landroid/text/style/UnderlineSpan;.<init>:()V` @kind direct;
  #L3c270e.  call temp:= `length`(v0) @signature `Landroid/text/SpannableString;.length:()I` @kind virtual;
  #L3c2714.  v5:= temp;
  #L3c2716.  call `setSpan`(v0, v3, v2, v5, v4) @signature `Landroid/text/SpannableString;.setSpan:(Ljava/lang/Object;III)V` @kind virtual;
  #L3c271c.  v3:= v9.`l3.c.i` @type ^`boolean` @kind boolean;
  #L3c2720.  if v3 == 0 then goto L3c273c;
  #L3c2724.  v3:= new `android.text.style.StrikethroughSpan`;
  #L3c2728.  call `<init>`(v3) @signature `Landroid/text/style/StrikethroughSpan;.<init>:()V` @kind direct;
  #L3c272e.  call temp:= `length`(v0) @signature `Landroid/text/SpannableString;.length:()I` @kind virtual;
  #L3c2734.  v5:= temp;
  #L3c2736.  call `setSpan`(v0, v3, v2, v5, v4) @signature `Landroid/text/SpannableString;.setSpan:(Ljava/lang/Object;III)V` @kind virtual;
  #L3c273c.  v0:= v10.`l3.c$b.a` @type ^`int`;
  #L3c2740.  v3:= -1I;
  #L3c2742.  if v0 == v3 then goto L3c2748;
  #L3c2746.  goto L3c2754;
  #L3c2748.  if v9 == 0 then goto L3c2752;
  #L3c274c.  v0:= v9.`l3.c.b` @type ^`int`;
  #L3c2750.  goto L3c2754;
  #L3c2752.  v0:= -1I;
  #L3c2754.  call temp:= `N`(v0) @signature `Ll3/a;.N:(I)Landroid/text/Layout$Alignment;` @kind static;
  #L3c275a.  v9:= temp @kind object;
  #L3c275c.  call temp:= `p`(v8, v9) @signature `Lg3/b$b;.p:(Landroid/text/Layout$Alignment;)Lg3/b$b;` @kind virtual;
  #L3c2762.  v9:= temp @kind object;
  #L3c2764.  call temp:= `M`(v0) @signature `Ll3/a;.M:(I)I` @kind static;
  #L3c276a.  v3:= temp;
  #L3c276c.  call temp:= `l`(v9, v3) @signature `Lg3/b$b;.l:(I)Lg3/b$b;` @kind virtual;
  #L3c2772.  v9:= temp @kind object;
  #L3c2774.  call temp:= `L`(v0) @signature `Ll3/a;.L:(I)I` @kind static;
  #L3c277a.  v0:= temp;
  #L3c277c.  call temp:= `i`(v9, v0) @signature `Lg3/b$b;.i:(I)Lg3/b$b;` @kind virtual;
  #L3c2782.  v9:= v10.`l3.c$b.b` @type ^`android.graphics.PointF` @kind object;
  #L3c2786.  if v9 == 0 then goto L3c27b2;
  #L3c278a.  v0:= fcmpl(v12, v1);
  #L3c278e.  if v0 == 0 then goto L3c27b2;
  #L3c2792.  v0:= fcmpl(v11, v1);
  #L3c2796.  if v0 == 0 then goto L3c27b2;
  #L3c279a.  v9:= v9.`android.graphics.PointF.x` @type ^`float`;
  #L3c279e.  v9:= v9 / v11 @kind float;
  #L3c27a0.  call temp:= `k`(v8, v9) @signature `Lg3/b$b;.k:(F)Lg3/b$b;` @kind virtual;
  #L3c27a6.  v9:= v10.`l3.c$b.b` @type ^`android.graphics.PointF` @kind object;
  #L3c27aa.  v9:= v9.`android.graphics.PointF.y` @type ^`float`;
  #L3c27ae.  v9:= v9 / v12 @kind float;
  #L3c27b0.  goto L3c27d8;
  #L3c27b2.  call temp:= `d`(v8) @signature `Lg3/b$b;.d:()I` @kind virtual;
  #L3c27b8.  v9:= temp;
  #L3c27ba.  call temp:= `D`(v9) @signature `Ll3/a;.D:(I)F` @kind static;
  #L3c27c0.  v9:= temp;
  #L3c27c2.  call temp:= `k`(v8, v9) @signature `Lg3/b$b;.k:(F)Lg3/b$b;` @kind virtual;
  #L3c27c8.  call temp:= `c`(v8) @signature `Lg3/b$b;.c:()I` @kind virtual;
  #L3c27ce.  v9:= temp;
  #L3c27d0.  call temp:= `D`(v9) @signature `Ll3/a;.D:(I)F` @kind static;
  #L3c27d6.  v9:= temp;
  #L3c27d8.  call temp:= `h`(v8, v9, v2) @signature `Lg3/b$b;.h:(FI)Lg3/b$b;` @kind virtual;
  #L3c27de.  call temp:= `a`(v8) @signature `Lg3/b$b;.a:()Lg3/b;` @kind virtual;
  #L3c27e4.  v8:= temp @kind object;
  #L3c27e6.  return v8 @kind object;
}
procedure `void` `F`(`l3.a` v10 @kind this, `java.lang.String` v11 @kind object, `l3.b` v12 @kind object, `java.util.List` v13 @kind object, `java.util.List` v14 @kind object) @signature `Ll3/a;.F:(Ljava/lang/String;Ll3/b;Ljava/util/List;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3c2c74.  v0:= "Dialogue:" @kind object;
  #L3c2c78.  call temp:= `startsWith`(v11, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3c2c7e.  v0:= temp;
  #L3c2c80.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L3c2c86.  v0:= 9I;
  #L3c2c8a.  call temp:= `substring`(v11, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3c2c90.  v0:= temp @kind object;
  #L3c2c92.  v1:= v12.`l3.b.e` @type ^`int`;
  #L3c2c96.  v2:= "," @kind object;
  #L3c2c9a.  call temp:= `split`(v0, v2, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;I)[Ljava/lang/String;` @kind virtual;
  #L3c2ca0.  v0:= temp @kind object;
  #L3c2ca2.  v1:= length @variable v0;
  #L3c2ca4.  v2:= v12.`l3.b.e` @type ^`int`;
  #L3c2ca8.  v3:= "SsaDecoder" @kind object;
  #L3c2cac.  if v1 == v2 then goto L3c2cda;
  #L3c2cb0.  v12:= new `java.lang.StringBuilder`;
  #L3c2cb4.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c2cba.  v13:= "Skipping dialogue line with fewer columns than format: " @kind object;
  #L3c2cbe.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c2cc4.  call temp:= `append`(v12, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c2cca.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c2cd0.  v11:= temp @kind object;
  #L3c2cd2.  call `h`(v3, v11) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3c2cd8.  return @kind void;
  #L3c2cda.  v1:= v12.`l3.b.a` @type ^`int`;
  #L3c2cde.  v1:= v0[v1] @kind object;
  #L3c2ce2.  call temp:= `K`(v1) @signature `Ll3/a;.K:(Ljava/lang/String;)J` @kind static;
  #L3c2ce8.  v1:= temp @kind wide;
  #L3c2cea.  v4:= "Skipping invalid timing: " @kind object;
  #L3c2cee.  v5:= -4.9E-324D;
  #L3c2cf8.  v7:= lcmp(v1, v5);
  #L3c2cfc.  if v7 != 0 then goto L3c2d12;
  #L3c2d00.  v12:= new `java.lang.StringBuilder`;
  #L3c2d04.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c2d0a.  call temp:= `append`(v12, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c2d10.  goto L3c2cc4;
  #L3c2d12.  v7:= v12.`l3.b.b` @type ^`int`;
  #L3c2d16.  v7:= v0[v7] @kind object;
  #L3c2d1a.  call temp:= `K`(v7) @signature `Ll3/a;.K:(Ljava/lang/String;)J` @kind static;
  #L3c2d20.  v7:= temp @kind wide;
  #L3c2d22.  v9:= lcmp(v7, v5);
  #L3c2d26.  if v9 != 0 then goto L3c2d36;
  #L3c2d2a.  v12:= new `java.lang.StringBuilder`;
  #L3c2d2e.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c2d34.  goto L3c2d0a;
  #L3c2d36.  v11:= v10.`l3.a.p` @type ^`java.util.Map` @kind object;
  #L3c2d3a.  if v11 == 0 then goto L3c2d62;
  #L3c2d3e.  v3:= v12.`l3.b.c` @type ^`int`;
  #L3c2d42.  v4:= -1I;
  #L3c2d44.  if v3 == v4 then goto L3c2d62;
  #L3c2d48.  v3:= v0[v3] @kind object;
  #L3c2d4c.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c2d52.  v3:= temp @kind object;
  #L3c2d54.  call temp:= `get`(v11, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3c2d5a.  v11:= temp @kind object;
  #L3c2d5c.  v11:= (`l3.c`) v11 @kind object;
  #L3c2d60.  goto L3c2d64;
  #L3c2d62.  v11:= 0I;
  #L3c2d64.  v12:= v12.`l3.b.d` @type ^`int`;
  #L3c2d68.  v12:= v0[v12] @kind object;
  #L3c2d6c.  call temp:= `b`(v12) @signature `Ll3/c$b;.b:(Ljava/lang/String;)Ll3/c$b;` @kind static;
  #L3c2d72.  v0:= temp @kind object;
  #L3c2d74.  call temp:= `d`(v12) @signature `Ll3/c$b;.d:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3c2d7a.  v12:= temp @kind object;
  #L3c2d7c.  v3:= "\\N" @kind object;
  #L3c2d80.  v4:= "\n" @kind object;
  #L3c2d84.  call temp:= `replace`(v12, v3, v4) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L3c2d8a.  v12:= temp @kind object;
  #L3c2d8c.  v3:= "\\n" @kind object;
  #L3c2d90.  call temp:= `replace`(v12, v3, v4) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L3c2d96.  v12:= temp @kind object;
  #L3c2d98.  v3:= "\\h" @kind object;
  #L3c2d9c.  v4:= " " @kind object;
  #L3c2da0.  call temp:= `replace`(v12, v3, v4) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L3c2da6.  v12:= temp @kind object;
  #L3c2da8.  v3:= v10.`l3.a.q` @type ^`float`;
  #L3c2dac.  v4:= v10.`l3.a.r` @type ^`float`;
  #L3c2db0.  call temp:= `E`(v12, v11, v0, v3, v4) @signature `Ll3/a;.E:(Ljava/lang/String;Ll3/c;Ll3/c$b;FF)Lg3/b;` @kind static;
  #L3c2db6.  v11:= temp @kind object;
  #L3c2db8.  call temp:= `C`(v1, v14, v13) @signature `Ll3/a;.C:(JLjava/util/List;Ljava/util/List;)I` @kind static;
  #L3c2dbe.  v12:= temp;
  #L3c2dc0.  call temp:= `C`(v7, v14, v13) @signature `Ll3/a;.C:(JLjava/util/List;Ljava/util/List;)I` @kind static;
  #L3c2dc6.  v14:= temp;
  #L3c2dc8.  if v12 >= v14 then goto L3c2de4;
  #L3c2dcc.  call temp:= `get`(v13, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3c2dd2.  v0:= temp @kind object;
  #L3c2dd4.  v0:= (`java.util.List`) v0 @kind object;
  #L3c2dd8.  call temp:= `add`(v0, v11) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3c2dde.  v12:= v12 + 1;
  #L3c2de2.  goto L3c2dc8;
  #L3c2de4.  return @kind void;
}
procedure `void` `G`(`l3.a` v4 @kind this, `s3.z` v5 @kind object, `java.util.List` v6 @kind object, `java.util.List` v7 @kind object) @signature `Ll3/a;.G:(Ls3/z;Ljava/util/List;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c2df8.  v0:= v4.`l3.a.n` @type ^`boolean` @kind boolean;
  #L3c2dfc.  if v0 == 0 then goto L3c2e06;
  #L3c2e00.  v0:= v4.`l3.a.o` @type ^`l3.b` @kind object;
  #L3c2e04.  goto L3c2e08;
  #L3c2e06.  v0:= 0I;
  #L3c2e08.  call temp:= `o`(v5) @signature `Ls3/z;.o:()Ljava/lang/String;` @kind virtual;
  #L3c2e0e.  v1:= temp @kind object;
  #L3c2e10.  if v1 == 0 then goto L3c2e78;
  #L3c2e14.  v2:= "Format:" @kind object;
  #L3c2e18.  call temp:= `startsWith`(v1, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3c2e1e.  v2:= temp;
  #L3c2e20.  if v2 == 0 then goto L3c2e2e;
  #L3c2e24.  call temp:= `a`(v1) @signature `Ll3/b;.a:(Ljava/lang/String;)Ll3/b;` @kind static;
  #L3c2e2a.  v0:= temp @kind object;
  #L3c2e2c.  goto L3c2e08;
  #L3c2e2e.  v2:= "Dialogue:" @kind object;
  #L3c2e32.  call temp:= `startsWith`(v1, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3c2e38.  v2:= temp;
  #L3c2e3a.  if v2 == 0 then goto L3c2e08;
  #L3c2e3e.  if v0 != 0 then goto L3c2e70;
  #L3c2e42.  v2:= new `java.lang.StringBuilder`;
  #L3c2e46.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c2e4c.  v3:= "Skipping dialogue line before complete format: " @kind object;
  #L3c2e50.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c2e56.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c2e5c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c2e62.  v1:= temp @kind object;
  #L3c2e64.  v2:= "SsaDecoder" @kind object;
  #L3c2e68.  call `h`(v2, v1) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3c2e6e.  goto L3c2e08;
  #L3c2e70.  call `F`(v4, v1, v0, v6, v7) @signature `Ll3/a;.F:(Ljava/lang/String;Ll3/b;Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L3c2e76.  goto L3c2e08;
  #L3c2e78.  return @kind void;
}
procedure `void` `H`(`l3.a` v2 @kind this, `s3.z` v3 @kind object) @signature `Ll3/a;.H:(Ls3/z;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3c2e8c.  call temp:= `o`(v3) @signature `Ls3/z;.o:()Ljava/lang/String;` @kind virtual;
  #L3c2e92.  v0:= temp @kind object;
  #L3c2e94.  if v0 == 0 then goto L3c2efe;
  #L3c2e98.  v1:= "[Script Info]" @kind object;
  #L3c2e9c.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3c2ea2.  v1:= temp;
  #L3c2ea4.  if v1 == 0 then goto L3c2eb0;
  #L3c2ea8.  call `I`(v2, v3) @signature `Ll3/a;.I:(Ls3/z;)V` @kind direct;
  #L3c2eae.  goto L3c2e8c;
  #L3c2eb0.  v1:= "[V4+ Styles]" @kind object;
  #L3c2eb4.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3c2eba.  v1:= temp;
  #L3c2ebc.  if v1 == 0 then goto L3c2ece;
  #L3c2ec0.  call temp:= `J`(v3) @signature `Ll3/a;.J:(Ls3/z;)Ljava/util/Map;` @kind static;
  #L3c2ec6.  v0:= temp @kind object;
  #L3c2ec8.  v2.`l3.a.p` @type ^`java.util.Map` := v0 @kind object;
  #L3c2ecc.  goto L3c2e8c;
  #L3c2ece.  v1:= "[V4 Styles]" @kind object;
  #L3c2ed2.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3c2ed8.  v1:= temp;
  #L3c2eda.  if v1 == 0 then goto L3c2eee;
  #L3c2ede.  v0:= "SsaDecoder" @kind object;
  #L3c2ee2.  v1:= "[V4 Styles] are not supported" @kind object;
  #L3c2ee6.  call `f`(v0, v1) @signature `Ls3/q;.f:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3c2eec.  goto L3c2e8c;
  #L3c2eee.  v1:= "[Events]" @kind object;
  #L3c2ef2.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3c2ef8.  v0:= temp;
  #L3c2efa.  if v0 == 0 then goto L3c2e8c;
  #L3c2efe.  return @kind void;
}
procedure `void` `I`(`l3.a` v4 @kind this, `s3.z` v5 @kind object) @signature `Ll3/a;.I:(Ls3/z;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c2f10.  call temp:= `o`(v5) @signature `Ls3/z;.o:()Ljava/lang/String;` @kind virtual;
  #L3c2f16.  v0:= temp @kind object;
  #L3c2f18.  if v0 == 0 then goto L3c2fc6;
  #L3c2f1c.  call temp:= `a`(v5) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3c2f22.  v1:= temp;
  #L3c2f24.  if v1 == 0 then goto L3c2f38;
  #L3c2f28.  call temp:= `h`(v5) @signature `Ls3/z;.h:()I` @kind virtual;
  #L3c2f2e.  v1:= temp;
  #L3c2f30.  v2:= 91I;
  #L3c2f34.  if v1 == v2 then goto L3c2fc6;
  #L3c2f38.  v1:= ":" @kind object;
  #L3c2f3c.  call temp:= `split`(v0, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3c2f42.  v0:= temp @kind object;
  #L3c2f44.  v1:= length @variable v0;
  #L3c2f46.  v2:= 2I;
  #L3c2f48.  if v1 == v2 then goto L3c2f4e;
  #L3c2f4c.  goto L3c2f10;
  #L3c2f4e.  v1:= 0I;
  #L3c2f50.  v1:= v0[v1] @kind object;
  #L3c2f54.  call temp:= `trim`(v1) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c2f5a.  v1:= temp @kind object;
  #L3c2f5c.  call temp:= `e`(v1) @signature `Ll5/b;.e:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3c2f62.  v1:= temp @kind object;
  #L3c2f64.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3c2f6a.  v2:= "playresx" @kind object;
  #L3c2f6e.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c2f74.  v2:= temp;
  #L3c2f76.  v3:= 1I;
  #L3c2f78.  if v2 != 0 then goto L3c2fac;
  #L3c2f7c.  v2:= "playresy" @kind object;
  #L3c2f80.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c2f86.  v1:= temp;
  #L3c2f88.  if v1 != 0 then goto L3c2f8e;
  #L3c2f8c.  goto L3c2f10;
  #L3c2f8e.  v0:= v0[v3] @kind object;
  #L3c2f92.  call temp:= `trim`(v0) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c2f98.  v0:= temp @kind object;
  #L3c2f9a.  call temp:= `parseFloat`(v0) @signature `Ljava/lang/Float;.parseFloat:(Ljava/lang/String;)F` @kind static;
  #L3c2fa0.  v0:= temp;
  #L3c2fa2.  v4.`l3.a.r` @type ^`float` := v0;
  #L3c2fa6.  goto L3c2f10;
  #L3c2fa8.  
  #L3c2faa.  goto L3c2f10;
  #L3c2fac.  v0:= v0[v3] @kind object;
  #L3c2fb0.  call temp:= `trim`(v0) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c2fb6.  v0:= temp @kind object;
  #L3c2fb8.  call temp:= `parseFloat`(v0) @signature `Ljava/lang/Float;.parseFloat:(Ljava/lang/String;)F` @kind static;
  #L3c2fbe.  v0:= temp;
  #L3c2fc0.  v4.`l3.a.q` @type ^`float` := v0;
  #L3c2fc4.  goto L3c2f10;
  #L3c2fc6.  return @kind void;
  catch `java.lang.NumberFormatException` @[L3c2f8e..L3c2fc4] goto L3c2fa8;
}
procedure `java.util.Map` `J`(`s3.z` v5 @kind object) @signature `Ll3/a;.J:(Ls3/z;)Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3c2a04.  v0:= new `java.util.LinkedHashMap`;
  #L3c2a08.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L3c2a0e.  v1:= 0I;
  #L3c2a10.  call temp:= `o`(v5) @signature `Ls3/z;.o:()Ljava/lang/String;` @kind virtual;
  #L3c2a16.  v2:= temp @kind object;
  #L3c2a18.  if v2 == 0 then goto L3c2aac;
  #L3c2a1c.  call temp:= `a`(v5) @signature `Ls3/z;.a:()I` @kind virtual;
  #L3c2a22.  v3:= temp;
  #L3c2a24.  if v3 == 0 then goto L3c2a38;
  #L3c2a28.  call temp:= `h`(v5) @signature `Ls3/z;.h:()I` @kind virtual;
  #L3c2a2e.  v3:= temp;
  #L3c2a30.  v4:= 91I;
  #L3c2a34.  if v3 == v4 then goto L3c2aac;
  #L3c2a38.  v3:= "Format:" @kind object;
  #L3c2a3c.  call temp:= `startsWith`(v2, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3c2a42.  v3:= temp;
  #L3c2a44.  if v3 == 0 then goto L3c2a52;
  #L3c2a48.  call temp:= `a`(v2) @signature `Ll3/c$a;.a:(Ljava/lang/String;)Ll3/c$a;` @kind static;
  #L3c2a4e.  v1:= temp @kind object;
  #L3c2a50.  goto L3c2a10;
  #L3c2a52.  v3:= "Style:" @kind object;
  #L3c2a56.  call temp:= `startsWith`(v2, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3c2a5c.  v3:= temp;
  #L3c2a5e.  if v3 == 0 then goto L3c2a10;
  #L3c2a62.  if v1 != 0 then goto L3c2a94;
  #L3c2a66.  v3:= new `java.lang.StringBuilder`;
  #L3c2a6a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c2a70.  v4:= "Skipping 'Style:' line before 'Format:' line: " @kind object;
  #L3c2a74.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c2a7a.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c2a80.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c2a86.  v2:= temp @kind object;
  #L3c2a88.  v3:= "SsaDecoder" @kind object;
  #L3c2a8c.  call `h`(v3, v2) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3c2a92.  goto L3c2a10;
  #L3c2a94.  call temp:= `b`(v2, v1) @signature `Ll3/c;.b:(Ljava/lang/String;Ll3/c$a;)Ll3/c;` @kind static;
  #L3c2a9a.  v2:= temp @kind object;
  #L3c2a9c.  if v2 == 0 then goto L3c2a10;
  #L3c2aa0.  v3:= v2.`l3.c.a` @type ^`java.lang.String` @kind object;
  #L3c2aa4.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3c2aaa.  goto L3c2a10;
  #L3c2aac.  return v0 @kind object;
}
procedure `long` `K`(`java.lang.String` v8 @kind object) @signature `Ll3/a;.K:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3c2ac0.  v0:= `@@l3.a.s` @type ^`java.util.regex.Pattern` @kind object;
  #L3c2ac4.  call temp:= `trim`(v8) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3c2aca.  v8:= temp @kind object;
  #L3c2acc.  call temp:= `matcher`(v0, v8) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3c2ad2.  v8:= temp @kind object;
  #L3c2ad4.  call temp:= `matches`(v8) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L3c2ada.  v0:= temp;
  #L3c2adc.  if v0 != 0 then goto L3c2aec;
  #L3c2ae0.  v0:= -4.9E-324D;
  #L3c2aea.  return v0 @kind wide;
  #L3c2aec.  v0:= 1I;
  #L3c2aee.  call temp:= `group`(v8, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3c2af4.  v0:= temp @kind object;
  #L3c2af6.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c2afc.  v0:= temp @kind object;
  #L3c2afe.  v0:= (`java.lang.String`) v0 @kind object;
  #L3c2b02.  call temp:= `parseLong`(v0) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3c2b08.  v0:= temp @kind wide;
  #L3c2b0a.  v2:= 60L;
  #L3c2b0e.  v0:= v0 * v2 @kind long;
  #L3c2b12.  v0:= v0 * v2 @kind long;
  #L3c2b16.  v4:= 1000000L;
  #L3c2b1c.  v0:= v0 * v4 @kind long;
  #L3c2b20.  v6:= 2I;
  #L3c2b22.  call temp:= `group`(v8, v6) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3c2b28.  v6:= temp @kind object;
  #L3c2b2a.  call temp:= `j`(v6) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c2b30.  v6:= temp @kind object;
  #L3c2b32.  v6:= (`java.lang.String`) v6 @kind object;
  #L3c2b36.  call temp:= `parseLong`(v6) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3c2b3c.  v6:= temp @kind wide;
  #L3c2b3e.  v6:= v6 * v2 @kind long;
  #L3c2b42.  v6:= v6 * v4 @kind long;
  #L3c2b46.  v0:= v0 + v6 @kind long;
  #L3c2b48.  v2:= 3I;
  #L3c2b4a.  call temp:= `group`(v8, v2) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3c2b50.  v2:= temp @kind object;
  #L3c2b52.  call temp:= `j`(v2) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c2b58.  v2:= temp @kind object;
  #L3c2b5a.  v2:= (`java.lang.String`) v2 @kind object;
  #L3c2b5e.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3c2b64.  v2:= temp @kind wide;
  #L3c2b66.  v2:= v2 * v4 @kind long;
  #L3c2b6a.  v0:= v0 + v2 @kind long;
  #L3c2b6c.  v2:= 4I;
  #L3c2b6e.  call temp:= `group`(v8, v2) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3c2b74.  v8:= temp @kind object;
  #L3c2b76.  call temp:= `j`(v8) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c2b7c.  v8:= temp @kind object;
  #L3c2b7e.  v8:= (`java.lang.String`) v8 @kind object;
  #L3c2b82.  call temp:= `parseLong`(v8) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3c2b88.  v2:= temp @kind wide;
  #L3c2b8a.  v4:= 10000L;
  #L3c2b8e.  v2:= v2 * v4 @kind long;
  #L3c2b92.  v0:= v0 + v2 @kind long;
  #L3c2b94.  return v0 @kind wide;
}
procedure `int` `L`(`int` v3 ) @signature `Ll3/a;.L:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3c28ec.  v0:= -2147483648I;
  #L3c28f0.  goto L3c2934;
  #L3c28f6.  v1:= new `java.lang.StringBuilder`;
  #L3c28fa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c2900.  v2:= "Unknown alignment: " @kind object;
  #L3c2904.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c290a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c2910.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c2916.  v3:= temp @kind object;
  #L3c2918.  v1:= "SsaDecoder" @kind object;
  #L3c291c.  call `h`(v1, v3) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3c2922.  return v0;
  #L3c2924.  v3:= 0I;
  #L3c2926.  return v3;
  #L3c2928.  v3:= 1I;
  #L3c292a.  return v3;
  #L3c292c.  v3:= 2I;
  #L3c292e.  return v3;
  #L3c2930.  return v0;
  #L3c2932.  
  #L3c2934.  switch v3
                  | -1 => goto L3c2930
                  | 0 => goto L3c28f6
                  | 1 => goto L3c292c
                  | 2 => goto L3c292c
                  | 3 => goto L3c292c
                  | 4 => goto L3c2928
                  | 5 => goto L3c2928
                  | 6 => goto L3c2928
                  | 7 => goto L3c2924
                  | 8 => goto L3c2924
                  | 9 => goto L3c2924
                  | else => goto L3c28f6;
}
procedure `int` `M`(`int` v3 ) @signature `Ll3/a;.M:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3c2978.  v0:= -2147483648I;
  #L3c297c.  goto L3c29c0;
  #L3c2982.  v1:= new `java.lang.StringBuilder`;
  #L3c2986.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c298c.  v2:= "Unknown alignment: " @kind object;
  #L3c2990.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c2996.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c299c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c29a2.  v3:= temp @kind object;
  #L3c29a4.  v1:= "SsaDecoder" @kind object;
  #L3c29a8.  call `h`(v1, v3) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3c29ae.  return v0;
  #L3c29b0.  v3:= 2I;
  #L3c29b2.  return v3;
  #L3c29b4.  v3:= 1I;
  #L3c29b6.  return v3;
  #L3c29b8.  v3:= 0I;
  #L3c29ba.  return v3;
  #L3c29bc.  return v0;
  #L3c29be.  
  #L3c29c0.  switch v3
                  | -1 => goto L3c29bc
                  | 0 => goto L3c2982
                  | 1 => goto L3c29b8
                  | 2 => goto L3c29b4
                  | 3 => goto L3c29b0
                  | 4 => goto L3c29b8
                  | 5 => goto L3c29b4
                  | 6 => goto L3c29b0
                  | 7 => goto L3c29b8
                  | 8 => goto L3c29b4
                  | 9 => goto L3c29b0
                  | else => goto L3c2982;
}
procedure `android.text.Layout$Alignment` `N`(`int` v3 ) @signature `Ll3/a;.N:(I)Landroid/text/Layout$Alignment;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3c2530.  v0:= 0I;
  #L3c2532.  goto L3c257c;
  #L3c2538.  v1:= new `java.lang.StringBuilder`;
  #L3c253c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c2542.  v2:= "Unknown alignment: " @kind object;
  #L3c2546.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c254c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c2552.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c2558.  v3:= temp @kind object;
  #L3c255a.  v1:= "SsaDecoder" @kind object;
  #L3c255e.  call `h`(v1, v3) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3c2564.  return v0 @kind object;
  #L3c2566.  v3:= `@@android.text.Layout$Alignment.ALIGN_OPPOSITE` @type ^`android.text.Layout$Alignment` @kind object;
  #L3c256a.  return v3 @kind object;
  #L3c256c.  v3:= `@@android.text.Layout$Alignment.ALIGN_CENTER` @type ^`android.text.Layout$Alignment` @kind object;
  #L3c2570.  return v3 @kind object;
  #L3c2572.  v3:= `@@android.text.Layout$Alignment.ALIGN_NORMAL` @type ^`android.text.Layout$Alignment` @kind object;
  #L3c2576.  return v3 @kind object;
  #L3c2578.  return v0 @kind object;
  #L3c257a.  
  #L3c257c.  switch v3
                  | -1 => goto L3c2578
                  | 0 => goto L3c2538
                  | 1 => goto L3c2572
                  | 2 => goto L3c256c
                  | 3 => goto L3c2566
                  | 4 => goto L3c2572
                  | 5 => goto L3c256c
                  | 6 => goto L3c2566
                  | 7 => goto L3c2572
                  | 8 => goto L3c256c
                  | 9 => goto L3c2566
                  | else => goto L3c2538;
}
procedure `g3.g` `A`(`l3.a` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Ll3/a;.A:([BIZ)Lg3/g;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3c27f8.  v5:= new `java.util.ArrayList`;
  #L3c27fc.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3c2802.  v0:= new `java.util.ArrayList`;
  #L3c2806.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3c280c.  v1:= new `s3.z`;
  #L3c2810.  call `<init>`(v1, v3, v4) @signature `Ls3/z;.<init>:([BI)V` @kind direct;
  #L3c2816.  v3:= v2.`l3.a.n` @type ^`boolean` @kind boolean;
  #L3c281a.  if v3 != 0 then goto L3c2824;
  #L3c281e.  call `H`(v2, v1) @signature `Ll3/a;.H:(Ls3/z;)V` @kind direct;
  #L3c2824.  call `G`(v2, v1, v5, v0) @signature `Ll3/a;.G:(Ls3/z;Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L3c282a.  v3:= new `l3.d`;
  #L3c282e.  call `<init>`(v3, v5, v0) @signature `Ll3/d;.<init>:(Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L3c2834.  return v3 @kind object;
}
