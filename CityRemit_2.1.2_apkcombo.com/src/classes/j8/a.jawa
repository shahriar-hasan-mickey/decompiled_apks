record `j8.a` @kind class @AccessFlag FINAL extends `d8.w` @kind class {
  `java.text.DateFormat` `j8.a.a` @AccessFlag PRIVATE_FINAL;
}
global `d8.x` `@@j8.a.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lj8/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L39a624.  v0:= new `j8.a$a`;
  #L39a628.  call `<init>`(v0) @signature `Lj8/a$a;.<init>:()V` @kind direct;
  #L39a62e.  `@@j8.a.b` @type ^`d8.x` := v0 @kind object;
  #L39a632.  return @kind void;
}
procedure `void` `<init>`(`j8.a` v2 @kind this) @signature `Lj8/a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39a644.  call `<init>`(v2) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L39a64a.  v0:= new `java.text.SimpleDateFormat`;
  #L39a64e.  v1:= "MMM d, yyyy" @kind object;
  #L39a652.  call `<init>`(v0, v1) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39a658.  v2.`j8.a.a` @type ^`java.text.DateFormat` := v0 @kind object;
  #L39a65c.  return @kind void;
}
procedure `void` `<init>`(`j8.a` v0 @kind this, `j8.a$a` v1 @kind object) @signature `Lj8/a;.<init>:(Lj8/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L39a670.  call `<init>`(v0) @signature `Lj8/a;.<init>:()V` @kind direct;
  #L39a676.  return @kind void;
}
procedure `java.lang.Object` `c`(`j8.a` v0 @kind this, `l8.a` v1 @kind object) @signature `Lj8/a;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L39a57c.  call temp:= `f`(v0, v1) @signature `Lj8/a;.f:(Ll8/a;)Ljava/sql/Date;` @kind virtual;
  #L39a582.  v1:= temp @kind object;
  #L39a584.  return v1 @kind object;
}
procedure `void` `e`(`j8.a` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lj8/a;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L39a688.  v2:= (`java.sql.Date`) v2 @kind object;
  #L39a68c.  call `g`(v0, v1, v2) @signature `Lj8/a;.g:(Ll8/c;Ljava/sql/Date;)V` @kind virtual;
  #L39a692.  return @kind void;
}
procedure `java.sql.Date` `f`(`j8.a` v2 @kind this, `l8.a` v3 @kind object) @signature `Lj8/a;.f:(Ll8/a;)Ljava/sql/Date;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a598.  @monitorenter v2
  #L39a59a.  call temp:= `f0`(v3) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L39a5a0.  v0:= temp @kind object;
  #L39a5a2.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L39a5a6.  if v0 != v1 then goto L39a5b6;
  #L39a5aa.  call `b0`(v3) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L39a5b0.  v3:= 0I;
  #L39a5b2.  @monitorexit v2
  #L39a5b4.  return v3 @kind object;
  #L39a5b6.  v0:= v2.`j8.a.a` @type ^`java.text.DateFormat` @kind object;
  #L39a5ba.  call temp:= `d0`(v3) @signature `Ll8/a;.d0:()Ljava/lang/String;` @kind virtual;
  #L39a5c0.  v3:= temp @kind object;
  #L39a5c2.  call temp:= `parse`(v0, v3) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #L39a5c8.  v3:= temp @kind object;
  #L39a5ca.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L39a5d0.  v0:= temp @kind wide;
  #L39a5d2.  v3:= new `java.sql.Date`;
  #L39a5d6.  call `<init>`(v3, v0) @signature `Ljava/sql/Date;.<init>:(J)V` @kind direct;
  #L39a5dc.  @monitorexit v2
  #L39a5de.  return v3 @kind object;
  #L39a5e0.  v3:= Exception @type ^`java.text.ParseException` @kind object;
  #L39a5e2.  v0:= new `d8.s`;
  #L39a5e6.  call `<init>`(v0, v3) @signature `Ld8/s;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L39a5ec.  throw v0;
  #L39a5ee.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39a5f0.  @monitorexit v2
  #L39a5f2.  throw v3;
  catch `java.lang.Throwable` @[L39a59a..L39a5b0] goto L39a5ee;
  catch `java.text.ParseException` @[L39a5b6..L39a5dc] goto L39a5e0;
  catch `java.lang.Throwable` @[L39a5b6..L39a5dc] goto L39a5ee;
  catch `java.lang.Throwable` @[L39a5e2..L39a5ee] goto L39a5ee;
}
procedure `void` `g`(`j8.a` v1 @kind this, `l8.c` v2 @kind object, `java.sql.Date` v3 @kind object) @signature `Lj8/a;.g:(Ll8/c;Ljava/sql/Date;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39a6a4.  @monitorenter v1
  #L39a6a6.  if v3 != 0 then goto L39a6ae;
  #L39a6aa.  v3:= 0I;
  #L39a6ac.  goto L39a6ba;
  #L39a6ae.  v0:= v1.`j8.a.a` @type ^`java.text.DateFormat` @kind object;
  #L39a6b2.  call temp:= `format`(v0, v3) @signature `Ljava/text/DateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L39a6b8.  v3:= temp @kind object;
  #L39a6ba.  call temp:= `h0`(v2, v3) @signature `Ll8/c;.h0:(Ljava/lang/String;)Ll8/c;` @kind virtual;
  #L39a6c0.  @monitorexit v1
  #L39a6c2.  return @kind void;
  #L39a6c4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39a6c6.  @monitorexit v1
  #L39a6c8.  throw v2;
  catch `java.lang.Throwable` @[L39a6ae..L39a6c0] goto L39a6c4;
}
