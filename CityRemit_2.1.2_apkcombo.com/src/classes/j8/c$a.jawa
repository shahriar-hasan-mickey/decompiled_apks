record `j8.c$a` @kind class @AccessFlag  extends `d8.x` @kind interface {
}
procedure `void` `<init>`(`j8.c$a` v0 @kind this) @signature `Lj8/c$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L39a8d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39a8de.  return @kind void;
}
procedure `d8.w` `create`(`j8.c$a` v2 @kind this, `d8.e` v3 @kind object, `k8.a` v4 @kind object) @signature `Lj8/c$a;.create:(Ld8/e;Lk8/a;)Ld8/w;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a89c.  call temp:= `c`(v4) @signature `Lk8/a;.c:()Ljava/lang/Class;` @kind virtual;
  #L39a8a2.  v4:= temp @kind object;
  #L39a8a4.  v0:= constclass @type ^`java.sql.Timestamp` @kind object;
  #L39a8a8.  v1:= 0I;
  #L39a8aa.  if v4 != v0 then goto L39a8c6;
  #L39a8ae.  v4:= constclass @type ^`java.util.Date` @kind object;
  #L39a8b2.  call temp:= `j`(v3, v4) @signature `Ld8/e;.j:(Ljava/lang/Class;)Ld8/w;` @kind virtual;
  #L39a8b8.  v3:= temp @kind object;
  #L39a8ba.  v4:= new `j8.c`;
  #L39a8be.  call `<init>`(v4, v3, v1) @signature `Lj8/c;.<init>:(Ld8/w;Lj8/c$a;)V` @kind direct;
  #L39a8c4.  return v4 @kind object;
  #L39a8c6.  return v1 @kind object;
}
