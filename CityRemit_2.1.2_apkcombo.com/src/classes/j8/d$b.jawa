record `j8.d$b` @kind class @AccessFlag  extends `g8.d$b` @kind class {
}
procedure `void` `<init>`(`j8.d$b` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lj8/d$b;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L39aa6c.  call `<init>`(v0, v1) @signature `Lg8/d$b;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L39aa72.  return @kind void;
}
procedure `java.util.Date` `d`(`j8.d$b` v0 @kind this, `java.util.Date` v1 @kind object) @signature `Lj8/d$b;.d:(Ljava/util/Date;)Ljava/util/Date;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L39aa50.  call temp:= `e`(v0, v1) @signature `Lj8/d$b;.e:(Ljava/util/Date;)Ljava/sql/Timestamp;` @kind virtual;
  #L39aa56.  v1:= temp @kind object;
  #L39aa58.  return v1 @kind object;
}
procedure `java.sql.Timestamp` `e`(`j8.d$b` v3 @kind this, `java.util.Date` v4 @kind object) @signature `Lj8/d$b;.e:(Ljava/util/Date;)Ljava/sql/Timestamp;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L39aa2c.  v0:= new `java.sql.Timestamp`;
  #L39aa30.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L39aa36.  v1:= temp @kind wide;
  #L39aa38.  call `<init>`(v0, v1) @signature `Ljava/sql/Timestamp;.<init>:(J)V` @kind direct;
  #L39aa3e.  return v0 @kind object;
}
