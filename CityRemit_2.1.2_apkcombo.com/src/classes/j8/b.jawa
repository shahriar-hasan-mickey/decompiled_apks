record `j8.b` @kind class @AccessFlag FINAL extends `d8.w` @kind class {
  `java.text.DateFormat` `j8.b.a` @AccessFlag PRIVATE_FINAL;
}
global `d8.x` `@@j8.b.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lj8/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L39a7d8.  v0:= new `j8.b$a`;
  #L39a7dc.  call `<init>`(v0) @signature `Lj8/b$a;.<init>:()V` @kind direct;
  #L39a7e2.  `@@j8.b.b` @type ^`d8.x` := v0 @kind object;
  #L39a7e6.  return @kind void;
}
procedure `void` `<init>`(`j8.b` v2 @kind this) @signature `Lj8/b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39a7f8.  call `<init>`(v2) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L39a7fe.  v0:= new `java.text.SimpleDateFormat`;
  #L39a802.  v1:= "hh:mm:ss a" @kind object;
  #L39a806.  call `<init>`(v0, v1) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39a80c.  v2.`j8.b.a` @type ^`java.text.DateFormat` := v0 @kind object;
  #L39a810.  return @kind void;
}
procedure `void` `<init>`(`j8.b` v0 @kind this, `j8.b$a` v1 @kind object) @signature `Lj8/b;.<init>:(Lj8/b$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L39a824.  call `<init>`(v0) @signature `Lj8/b;.<init>:()V` @kind direct;
  #L39a82a.  return @kind void;
}
procedure `java.lang.Object` `c`(`j8.b` v0 @kind this, `l8.a` v1 @kind object) @signature `Lj8/b;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L39a730.  call temp:= `f`(v0, v1) @signature `Lj8/b;.f:(Ll8/a;)Ljava/sql/Time;` @kind virtual;
  #L39a736.  v1:= temp @kind object;
  #L39a738.  return v1 @kind object;
}
procedure `void` `e`(`j8.b` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lj8/b;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L39a83c.  v2:= (`java.sql.Time`) v2 @kind object;
  #L39a840.  call `g`(v0, v1, v2) @signature `Lj8/b;.g:(Ll8/c;Ljava/sql/Time;)V` @kind virtual;
  #L39a846.  return @kind void;
}
procedure `java.sql.Time` `f`(`j8.b` v3 @kind this, `l8.a` v4 @kind object) @signature `Lj8/b;.f:(Ll8/a;)Ljava/sql/Time;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39a74c.  @monitorenter v3
  #L39a74e.  call temp:= `f0`(v4) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L39a754.  v0:= temp @kind object;
  #L39a756.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L39a75a.  if v0 != v1 then goto L39a76a;
  #L39a75e.  call `b0`(v4) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L39a764.  v4:= 0I;
  #L39a766.  @monitorexit v3
  #L39a768.  return v4 @kind object;
  #L39a76a.  v0:= v3.`j8.b.a` @type ^`java.text.DateFormat` @kind object;
  #L39a76e.  call temp:= `d0`(v4) @signature `Ll8/a;.d0:()Ljava/lang/String;` @kind virtual;
  #L39a774.  v4:= temp @kind object;
  #L39a776.  call temp:= `parse`(v0, v4) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #L39a77c.  v4:= temp @kind object;
  #L39a77e.  v0:= new `java.sql.Time`;
  #L39a782.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L39a788.  v1:= temp @kind wide;
  #L39a78a.  call `<init>`(v0, v1) @signature `Ljava/sql/Time;.<init>:(J)V` @kind direct;
  #L39a790.  @monitorexit v3
  #L39a792.  return v0 @kind object;
  #L39a794.  v4:= Exception @type ^`java.text.ParseException` @kind object;
  #L39a796.  v0:= new `d8.s`;
  #L39a79a.  call `<init>`(v0, v4) @signature `Ld8/s;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L39a7a0.  throw v0;
  #L39a7a2.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39a7a4.  @monitorexit v3
  #L39a7a6.  throw v4;
  catch `java.lang.Throwable` @[L39a74e..L39a764] goto L39a7a2;
  catch `java.text.ParseException` @[L39a76a..L39a790] goto L39a794;
  catch `java.lang.Throwable` @[L39a76a..L39a790] goto L39a7a2;
  catch `java.lang.Throwable` @[L39a796..L39a7a2] goto L39a7a2;
}
procedure `void` `g`(`j8.b` v1 @kind this, `l8.c` v2 @kind object, `java.sql.Time` v3 @kind object) @signature `Lj8/b;.g:(Ll8/c;Ljava/sql/Time;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39a858.  @monitorenter v1
  #L39a85a.  if v3 != 0 then goto L39a862;
  #L39a85e.  v3:= 0I;
  #L39a860.  goto L39a86e;
  #L39a862.  v0:= v1.`j8.b.a` @type ^`java.text.DateFormat` @kind object;
  #L39a866.  call temp:= `format`(v0, v3) @signature `Ljava/text/DateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L39a86c.  v3:= temp @kind object;
  #L39a86e.  call temp:= `h0`(v2, v3) @signature `Ll8/c;.h0:(Ljava/lang/String;)Ll8/c;` @kind virtual;
  #L39a874.  @monitorexit v1
  #L39a876.  return @kind void;
  #L39a878.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39a87a.  @monitorexit v1
  #L39a87c.  throw v2;
  catch `java.lang.Throwable` @[L39a862..L39a874] goto L39a878;
}
