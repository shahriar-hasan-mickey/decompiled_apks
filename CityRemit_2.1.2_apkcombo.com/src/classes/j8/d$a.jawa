record `j8.d$a` @kind class @AccessFlag  extends `g8.d$b` @kind class {
}
procedure `void` `<init>`(`j8.d$a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lj8/d$a;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L39aa14.  call `<init>`(v0, v1) @signature `Lg8/d$b;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L39aa1a.  return @kind void;
}
procedure `java.util.Date` `d`(`j8.d$a` v0 @kind this, `java.util.Date` v1 @kind object) @signature `Lj8/d$a;.d:(Ljava/util/Date;)Ljava/util/Date;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L39a9f8.  call temp:= `e`(v0, v1) @signature `Lj8/d$a;.e:(Ljava/util/Date;)Ljava/sql/Date;` @kind virtual;
  #L39a9fe.  v1:= temp @kind object;
  #L39aa00.  return v1 @kind object;
}
procedure `java.sql.Date` `e`(`j8.d$a` v3 @kind this, `java.util.Date` v4 @kind object) @signature `Lj8/d$a;.e:(Ljava/util/Date;)Ljava/sql/Date;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L39a9d4.  v0:= new `java.sql.Date`;
  #L39a9d8.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L39a9de.  v1:= temp @kind wide;
  #L39a9e0.  call `<init>`(v0, v1) @signature `Ljava/sql/Date;.<init>:(J)V` @kind direct;
  #L39a9e6.  return v0 @kind object;
}
