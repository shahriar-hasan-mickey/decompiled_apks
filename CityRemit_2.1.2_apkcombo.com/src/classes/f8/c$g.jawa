record `f8.c$g` @kind class @AccessFlag  extends `f8.i` @kind interface {
  `d8.g` `f8.c$g.a` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.reflect.Type` `f8.c$g.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`f8.c$g` v0 @kind this, `f8.c` v1 @kind object, `d8.g` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Lf8/c$g;.<init>:(Lf8/c;Ld8/g;Ljava/lang/reflect/Type;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30c8fc.  v0.`f8.c$g.a` @type ^`d8.g` := v2 @kind object;
  #L30c900.  v0.`f8.c$g.b` @type ^`java.lang.reflect.Type` := v3 @kind object;
  #L30c904.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30c90a.  return @kind void;
}
procedure `java.lang.Object` `a`(`f8.c$g` v2 @kind this) @signature `Lf8/c$g;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30c8d8.  v0:= v2.`f8.c$g.a` @type ^`d8.g` @kind object;
  #L30c8dc.  v1:= v2.`f8.c$g.b` @type ^`java.lang.reflect.Type` @kind object;
  #L30c8e0.  call temp:= `a`(v0, v1) @signature `Ld8/g;.a:(Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind interface;
  #L30c8e6.  v0:= temp @kind object;
  #L30c8e8.  return v0 @kind object;
}
