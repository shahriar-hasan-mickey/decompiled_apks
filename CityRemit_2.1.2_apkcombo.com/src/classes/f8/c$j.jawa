record `f8.c$j` @kind class @AccessFlag  extends `f8.i` @kind interface {
  `java.lang.reflect.Type` `f8.c$j.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`f8.c$j` v0 @kind this, `f8.c` v1 @kind object, `java.lang.reflect.Type` v2 @kind object) @signature `Lf8/c$j;.<init>:(Lf8/c;Ljava/lang/reflect/Type;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30cae0.  v0.`f8.c$j.a` @type ^`java.lang.reflect.Type` := v2 @kind object;
  #L30cae4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30caea.  return @kind void;
}
procedure `java.lang.Object` `a`(`f8.c$j` v3 @kind this) @signature `Lf8/c$j;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30ca2c.  v0:= v3.`f8.c$j.a` @type ^`java.lang.reflect.Type` @kind object;
  #L30ca30.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L30ca34.  v2:= "Invalid EnumSet type: " @kind object;
  #L30ca38.  if v1 == 0 then goto L30ca9a;
  #L30ca3c.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L30ca40.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L30ca46.  v0:= temp @kind object;
  #L30ca48.  v1:= 0I;
  #L30ca4a.  v0:= v0[v1] @kind object;
  #L30ca4e.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L30ca52.  if v1 == 0 then goto L30ca64;
  #L30ca56.  v0:= (`java.lang.Class`) v0 @kind object;
  #L30ca5a.  call temp:= `noneOf`(v0) @signature `Ljava/util/EnumSet;.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;` @kind static;
  #L30ca60.  v0:= temp @kind object;
  #L30ca62.  return v0 @kind object;
  #L30ca64.  v0:= new `d8.l`;
  #L30ca68.  v1:= new `java.lang.StringBuilder`;
  #L30ca6c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30ca72.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ca78.  v2:= v3.`f8.c$j.a` @type ^`java.lang.reflect.Type` @kind object;
  #L30ca7c.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L30ca82.  v2:= temp @kind object;
  #L30ca84.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ca8a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30ca90.  v1:= temp @kind object;
  #L30ca92.  call `<init>`(v0, v1) @signature `Ld8/l;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30ca98.  throw v0;
  #L30ca9a.  v0:= new `d8.l`;
  #L30ca9e.  v1:= new `java.lang.StringBuilder`;
  #L30caa2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30caa8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30caae.  v2:= v3.`f8.c$j.a` @type ^`java.lang.reflect.Type` @kind object;
  #L30cab2.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L30cab8.  v2:= temp @kind object;
  #L30caba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30cac0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30cac6.  v1:= temp @kind object;
  #L30cac8.  call `<init>`(v0, v1) @signature `Ld8/l;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30cace.  throw v0;
}
