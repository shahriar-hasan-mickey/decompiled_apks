record `f8.m` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`f8.m` v0 @kind this) @signature `Lf8/m;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L30e930.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30e936.  return @kind void;
}
procedure `void` `a`(`java.lang.Class` v3 @kind object) @signature `Lf8/m;.a:(Ljava/lang/Class;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L30e948.  call temp:= `getModifiers`(v3) @signature `Ljava/lang/Class;.getModifiers:()I` @kind virtual;
  #L30e94e.  v0:= temp;
  #L30e950.  call temp:= `isInterface`(v0) @signature `Ljava/lang/reflect/Modifier;.isInterface:(I)Z` @kind static;
  #L30e956.  v1:= temp;
  #L30e958.  if v1 != 0 then goto L30e9a0;
  #L30e95c.  call temp:= `isAbstract`(v0) @signature `Ljava/lang/reflect/Modifier;.isAbstract:(I)Z` @kind static;
  #L30e962.  v0:= temp;
  #L30e964.  if v0 != 0 then goto L30e96a;
  #L30e968.  return @kind void;
  #L30e96a.  v0:= new `java.lang.UnsupportedOperationException`;
  #L30e96e.  v1:= new `java.lang.StringBuilder`;
  #L30e972.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30e978.  v2:= "Abstract class can't be instantiated! Class name: " @kind object;
  #L30e97c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e982.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L30e988.  v3:= temp @kind object;
  #L30e98a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e990.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30e996.  v3:= temp @kind object;
  #L30e998.  call `<init>`(v0, v3) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30e99e.  throw v0;
  #L30e9a0.  v0:= new `java.lang.UnsupportedOperationException`;
  #L30e9a4.  v1:= new `java.lang.StringBuilder`;
  #L30e9a8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30e9ae.  v2:= "Interface can't be instantiated! Interface name: " @kind object;
  #L30e9b2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e9b8.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L30e9be.  v3:= temp @kind object;
  #L30e9c0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e9c6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30e9cc.  v3:= temp @kind object;
  #L30e9ce.  call `<init>`(v0, v3) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30e9d4.  throw v0;
}
procedure `f8.m` `b`() @signature `Lf8/m;.b:()Lf8/m;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L30e7f0.  v0:= "newInstance" @kind object;
  #L30e7f4.  v1:= 0I;
  #L30e7f6.  v2:= 0I;
  #L30e7f8.  v3:= 1I;
  #L30e7fa.  v4:= "sun.misc.Unsafe" @kind object;
  #L30e7fe.  call temp:= `forName`(v4) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L30e804.  v4:= temp @kind object;
  #L30e806.  v5:= "theUnsafe" @kind object;
  #L30e80a.  call temp:= `getDeclaredField`(v4, v5) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L30e810.  v5:= temp @kind object;
  #L30e812.  call `setAccessible`(v5, v3) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L30e818.  call temp:= `get`(v5, v1) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L30e81e.  v5:= temp @kind object;
  #L30e820.  v6:= "allocateInstance" @kind object;
  #L30e824.  v7:= new `java.lang.Class`[v3];
  #L30e828.  v8:= constclass @type ^`java.lang.Class` @kind object;
  #L30e82c.  v7[v2]:= v8 @kind object;
  #L30e830.  call temp:= `getMethod`(v4, v6, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L30e836.  v4:= temp @kind object;
  #L30e838.  v6:= new `f8.m$a`;
  #L30e83c.  call `<init>`(v6, v4, v5) @signature `Lf8/m$a;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/Object;)V` @kind direct;
  #L30e842.  return v6 @kind object;
  #L30e844.  v4:= 2I;
  #L30e846.  v5:= constclass @type ^`java.io.ObjectStreamClass` @kind object;
  #L30e84a.  v6:= "getConstructorId" @kind object;
  #L30e84e.  v7:= new `java.lang.Class`[v3];
  #L30e852.  v8:= constclass @type ^`java.lang.Class` @kind object;
  #L30e856.  v7[v2]:= v8 @kind object;
  #L30e85a.  call temp:= `getDeclaredMethod`(v5, v6, v7) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L30e860.  v5:= temp @kind object;
  #L30e862.  call `setAccessible`(v5, v3) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L30e868.  v6:= new `java.lang.Object`[v3];
  #L30e86c.  v7:= constclass @type ^`java.lang.Object` @kind object;
  #L30e870.  v6[v2]:= v7 @kind object;
  #L30e874.  call temp:= `invoke`(v5, v1, v6) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L30e87a.  v1:= temp @kind object;
  #L30e87c.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L30e880.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L30e886.  v1:= temp;
  #L30e888.  v5:= constclass @type ^`java.io.ObjectStreamClass` @kind object;
  #L30e88c.  v6:= new `java.lang.Class`[v4];
  #L30e890.  v7:= constclass @type ^`java.lang.Class` @kind object;
  #L30e894.  v6[v2]:= v7 @kind object;
  #L30e898.  v7:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L30e89c.  v6[v3]:= v7 @kind object;
  #L30e8a0.  call temp:= `getDeclaredMethod`(v5, v0, v6) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L30e8a6.  v5:= temp @kind object;
  #L30e8a8.  call `setAccessible`(v5, v3) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L30e8ae.  v6:= new `f8.m$b`;
  #L30e8b2.  call `<init>`(v6, v5, v1) @signature `Lf8/m$b;.<init>:(Ljava/lang/reflect/Method;I)V` @kind direct;
  #L30e8b8.  return v6 @kind object;
  #L30e8ba.  v1:= constclass @type ^`java.io.ObjectInputStream` @kind object;
  #L30e8be.  v4:= new `java.lang.Class`[v4];
  #L30e8c2.  v5:= constclass @type ^`java.lang.Class` @kind object;
  #L30e8c6.  v4[v2]:= v5 @kind object;
  #L30e8ca.  v2:= constclass @type ^`java.lang.Class` @kind object;
  #L30e8ce.  v4[v3]:= v2 @kind object;
  #L30e8d2.  call temp:= `getDeclaredMethod`(v1, v0, v4) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L30e8d8.  v0:= temp @kind object;
  #L30e8da.  call `setAccessible`(v0, v3) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L30e8e0.  v1:= new `f8.m$c`;
  #L30e8e4.  call `<init>`(v1, v0) @signature `Lf8/m$c;.<init>:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L30e8ea.  return v1 @kind object;
  #L30e8ec.  v0:= new `f8.m$d`;
  #L30e8f0.  call `<init>`(v0) @signature `Lf8/m$d;.<init>:()V` @kind direct;
  #L30e8f6.  return v0 @kind object;
  catch `java.lang.Exception` @[L30e7fa..L30e842] goto L30e844;
  catch `java.lang.Exception` @[L30e846..L30e8b8] goto L30e8ba;
  catch `java.lang.Exception` @[L30e8ba..L30e8ea] goto L30e8ec;
}
procedure `java.lang.Object` `c`(`java.lang.Class` v0 @kind object) @signature `Lf8/m;.c:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
