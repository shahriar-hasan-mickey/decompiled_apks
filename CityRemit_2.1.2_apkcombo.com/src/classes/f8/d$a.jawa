record `f8.d$a` @kind class @AccessFlag  extends `d8.w` @kind class {
  `d8.w` `f8.d$a.a` @AccessFlag PRIVATE;
  `boolean` `f8.d$a.b` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `f8.d$a.c` @AccessFlag FINAL_SYNTHETIC;
  `d8.e` `f8.d$a.d` @AccessFlag FINAL_SYNTHETIC;
  `k8.a` `f8.d$a.e` @AccessFlag FINAL_SYNTHETIC;
  `f8.d` `f8.d$a.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`f8.d$a` v0 @kind this, `f8.d` v1 @kind object, `boolean` v2 , `boolean` v3 , `d8.e` v4 @kind object, `k8.a` v5 @kind object) @signature `Lf8/d$a;.<init>:(Lf8/d;ZZLd8/e;Lk8/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30cecc.  v0.`f8.d$a.f` @type ^`f8.d` := v1 @kind object;
  #L30ced0.  v0.`f8.d$a.b` @type ^`boolean` := v2 @kind boolean;
  #L30ced4.  v0.`f8.d$a.c` @type ^`boolean` := v3 @kind boolean;
  #L30ced8.  v0.`f8.d$a.d` @type ^`d8.e` := v4 @kind object;
  #L30cedc.  v0.`f8.d$a.e` @type ^`k8.a` := v5 @kind object;
  #L30cee0.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L30cee6.  return @kind void;
}
procedure `d8.w` `f`(`f8.d$a` v3 @kind this) @signature `Lf8/d$a;.f:()Ld8/w;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L30ce64.  v0:= v3.`f8.d$a.a` @type ^`d8.w` @kind object;
  #L30ce68.  if v0 == 0 then goto L30ce6e;
  #L30ce6c.  goto L30ce86;
  #L30ce6e.  v0:= v3.`f8.d$a.d` @type ^`d8.e` @kind object;
  #L30ce72.  v1:= v3.`f8.d$a.f` @type ^`f8.d` @kind object;
  #L30ce76.  v2:= v3.`f8.d$a.e` @type ^`k8.a` @kind object;
  #L30ce7a.  call temp:= `l`(v0, v1, v2) @signature `Ld8/e;.l:(Ld8/x;Lk8/a;)Ld8/w;` @kind virtual;
  #L30ce80.  v0:= temp @kind object;
  #L30ce82.  v3.`f8.d$a.a` @type ^`d8.w` := v0 @kind object;
  #L30ce86.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`f8.d$a` v1 @kind this, `l8.a` v2 @kind object) @signature `Lf8/d$a;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30ce98.  v0:= v1.`f8.d$a.b` @type ^`boolean` @kind boolean;
  #L30ce9c.  if v0 == 0 then goto L30ceaa;
  #L30cea0.  call `p0`(v2) @signature `Ll8/a;.p0:()V` @kind virtual;
  #L30cea6.  v2:= 0I;
  #L30cea8.  return v2 @kind object;
  #L30ceaa.  call temp:= `f`(v1) @signature `Lf8/d$a;.f:()Ld8/w;` @kind direct;
  #L30ceb0.  v0:= temp @kind object;
  #L30ceb2.  call temp:= `c`(v0, v2) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L30ceb8.  v2:= temp @kind object;
  #L30ceba.  return v2 @kind object;
}
procedure `void` `e`(`f8.d$a` v1 @kind this, `l8.c` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lf8/d$a;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30cef8.  v0:= v1.`f8.d$a.c` @type ^`boolean` @kind boolean;
  #L30cefc.  if v0 == 0 then goto L30cf08;
  #L30cf00.  call temp:= `J`(v2) @signature `Ll8/c;.J:()Ll8/c;` @kind virtual;
  #L30cf06.  return @kind void;
  #L30cf08.  call temp:= `f`(v1) @signature `Lf8/d$a;.f:()Ld8/w;` @kind direct;
  #L30cf0e.  v0:= temp @kind object;
  #L30cf10.  call `e`(v0, v2, v3) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @kind virtual;
  #L30cf16.  return @kind void;
}
