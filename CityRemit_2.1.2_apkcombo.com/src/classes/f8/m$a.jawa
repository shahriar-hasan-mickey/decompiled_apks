record `f8.m$a` @kind class @AccessFlag  extends `f8.m` @kind class {
  `java.lang.reflect.Method` `f8.m$a.a` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `f8.m$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`f8.m$a` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lf8/m$a;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30e6bc.  v0.`f8.m$a.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L30e6c0.  v0.`f8.m$a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L30e6c4.  call `<init>`(v0) @signature `Lf8/m;.<init>:()V` @kind direct;
  #L30e6ca.  return @kind void;
}
procedure `java.lang.Object` `c`(`f8.m$a` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lf8/m$a;.c:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30e688.  call `a`(v5) @signature `Lf8/m;.a:(Ljava/lang/Class;)V` @kind static;
  #L30e68e.  v0:= v4.`f8.m$a.a` @type ^`java.lang.reflect.Method` @kind object;
  #L30e692.  v1:= v4.`f8.m$a.b` @type ^`java.lang.Object` @kind object;
  #L30e696.  v2:= 1I;
  #L30e698.  v2:= new `java.lang.Object`[v2];
  #L30e69c.  v3:= 0I;
  #L30e69e.  v2[v3]:= v5 @kind object;
  #L30e6a2.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L30e6a8.  v5:= temp @kind object;
  #L30e6aa.  return v5 @kind object;
}
