record `f8.l` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `d8.k` `a`(`l8.a` v2 @kind object) @signature `Lf8/l;.a:(Ll8/a;)Ld8/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L30e5a0.  call temp:= `f0`(v2) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L30e5a6.  v0:= 0I;
  #L30e5a8.  v1:= `@@g8.n.U` @type ^`d8.w` @kind object;
  #L30e5ac.  call temp:= `c`(v1, v2) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L30e5b2.  v2:= temp @kind object;
  #L30e5b4.  v2:= (`d8.k`) v2 @kind object;
  #L30e5b8.  return v2 @kind object;
  #L30e5ba.  v2:= Exception @type ^`java.io.EOFException` @kind object;
  #L30e5bc.  goto L30e5ec;
  #L30e5be.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L30e5c0.  v0:= new `d8.s`;
  #L30e5c4.  call `<init>`(v0, v2) @signature `Ld8/s;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L30e5ca.  throw v0;
  #L30e5cc.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L30e5ce.  v0:= new `d8.l`;
  #L30e5d2.  call `<init>`(v0, v2) @signature `Ld8/l;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L30e5d8.  throw v0;
  #L30e5da.  v2:= Exception @type ^`l8.d` @kind object;
  #L30e5dc.  v0:= new `d8.s`;
  #L30e5e0.  call `<init>`(v0, v2) @signature `Ld8/s;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L30e5e6.  throw v0;
  #L30e5e8.  v2:= Exception @type ^`java.io.EOFException` @kind object;
  #L30e5ea.  v0:= 1I;
  #L30e5ec.  if v0 == 0 then goto L30e5f6;
  #L30e5f0.  v2:= `@@d8.m.a` @type ^`d8.m` @kind object;
  #L30e5f4.  return v2 @kind object;
  #L30e5f6.  v0:= new `d8.s`;
  #L30e5fa.  call `<init>`(v0, v2) @signature `Ld8/s;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L30e600.  throw v0;
  catch `java.io.EOFException` @[L30e5a0..L30e5a6] goto L30e5e8;
  catch `l8.d` @[L30e5a0..L30e5a6] goto L30e5da;
  catch `java.io.IOException` @[L30e5a0..L30e5a6] goto L30e5cc;
  catch `java.lang.NumberFormatException` @[L30e5a0..L30e5a6] goto L30e5be;
  catch `java.io.EOFException` @[L30e5a8..L30e5b8] goto L30e5ba;
  catch `l8.d` @[L30e5a8..L30e5b8] goto L30e5da;
  catch `java.io.IOException` @[L30e5a8..L30e5b8] goto L30e5cc;
  catch `java.lang.NumberFormatException` @[L30e5a8..L30e5b8] goto L30e5be;
}
procedure `void` `b`(`d8.k` v1 @kind object, `l8.c` v2 @kind object) @signature `Lf8/l;.b:(Ld8/k;Ll8/c;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L30e66c.  v0:= `@@g8.n.U` @type ^`d8.w` @kind object;
  #L30e670.  call `e`(v0, v2, v1) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @kind virtual;
  #L30e676.  return @kind void;
}
procedure `java.io.Writer` `c`(`java.lang.Appendable` v1 @kind object) @signature `Lf8/l;.c:(Ljava/lang/Appendable;)Ljava/io/Writer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L30e640.  v0:= instanceof @variable v1 @type ^`java.io.Writer` @kind boolean;
  #L30e644.  if v0 == 0 then goto L30e64e;
  #L30e648.  v1:= (`java.io.Writer`) v1 @kind object;
  #L30e64c.  goto L30e65a;
  #L30e64e.  v0:= new `f8.l$a`;
  #L30e652.  call `<init>`(v0, v1) @signature `Lf8/l$a;.<init>:(Ljava/lang/Appendable;)V` @kind direct;
  #L30e658.  v1:= v0 @kind object;
  #L30e65a.  return v1 @kind object;
}
