record `f8.m$c` @kind class @AccessFlag  extends `f8.m` @kind class {
  `java.lang.reflect.Method` `f8.m$c.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`f8.m$c` v0 @kind this, `java.lang.reflect.Method` v1 @kind object) @signature `Lf8/m$c;.<init>:(Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30e77c.  v0.`f8.m$c.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L30e780.  call `<init>`(v0) @signature `Lf8/m;.<init>:()V` @kind direct;
  #L30e786.  return @kind void;
}
procedure `java.lang.Object` `c`(`f8.m$c` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lf8/m$c;.c:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30e740.  call `a`(v4) @signature `Lf8/m;.a:(Ljava/lang/Class;)V` @kind static;
  #L30e746.  v0:= v3.`f8.m$c.a` @type ^`java.lang.reflect.Method` @kind object;
  #L30e74a.  v1:= 2I;
  #L30e74c.  v1:= new `java.lang.Object`[v1];
  #L30e750.  v2:= 0I;
  #L30e752.  v1[v2]:= v4 @kind object;
  #L30e756.  v4:= 1I;
  #L30e758.  v2:= constclass @type ^`java.lang.Object` @kind object;
  #L30e75c.  v1[v4]:= v2 @kind object;
  #L30e760.  v4:= 0I;
  #L30e762.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L30e768.  v4:= temp @kind object;
  #L30e76a.  return v4 @kind object;
}
