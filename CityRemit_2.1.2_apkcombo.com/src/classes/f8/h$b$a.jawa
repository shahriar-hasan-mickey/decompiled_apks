record `f8.h$b$a` @kind class @AccessFlag  extends `f8.h$d` @kind class {
}
procedure `void` `<init>`(`f8.h$b$a` v0 @kind this, `f8.h$b` v1 @kind object) @signature `Lf8/h$b$a;.<init>:(Lf8/h$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30d778.  v1:= v1.`f8.h$b.o` @type ^`f8.h` @kind object;
  #L30d77c.  call `<init>`(v0, v1) @signature `Lf8/h$d;.<init>:(Lf8/h;)V` @kind direct;
  #L30d782.  return @kind void;
}
procedure `java.util.Map$Entry` `d`(`f8.h$b$a` v1 @kind this) @signature `Lf8/h$b$a;.d:()Ljava/util/Map$Entry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30d75c.  call temp:= `a`(v1) @signature `Lf8/h$d;.a:()Lf8/h$e;` @kind virtual;
  #L30d762.  v0:= temp @kind object;
  #L30d764.  return v0 @kind object;
}
procedure `java.lang.Object` `next`(`f8.h$b$a` v1 @kind this) @signature `Lf8/h$b$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L30d740.  call temp:= `d`(v1) @signature `Lf8/h$b$a;.d:()Ljava/util/Map$Entry;` @kind virtual;
  #L30d746.  v0:= temp @kind object;
  #L30d748.  return v0 @kind object;
}
