record `f8.c$h` @kind class @AccessFlag  extends `f8.i` @kind interface {
  `java.lang.reflect.Constructor` `f8.c$h.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`f8.c$h` v0 @kind this, `f8.c` v1 @kind object, `java.lang.reflect.Constructor` v2 @kind object) @signature `Lf8/c$h;.<init>:(Lf8/c;Ljava/lang/reflect/Constructor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30c9dc.  v0.`f8.c$h.a` @type ^`java.lang.reflect.Constructor` := v2 @kind object;
  #L30c9e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30c9e6.  return @kind void;
}
procedure `java.lang.Object` `a`(`f8.c$h` v5 @kind this) @signature `Lf8/c$h;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30c91c.  v0:= " with no args" @kind object;
  #L30c920.  v1:= "Failed to invoke " @kind object;
  #L30c924.  v2:= 0I;
  #L30c926.  v3:= v5.`f8.c$h.a` @type ^`java.lang.reflect.Constructor` @kind object;
  #L30c92a.  call temp:= `newInstance`(v3, v2) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L30c930.  v0:= temp @kind object;
  #L30c932.  return v0 @kind object;
  #L30c934.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L30c936.  v1:= new `java.lang.AssertionError`;
  #L30c93a.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L30c940.  throw v1;
  #L30c942.  v2:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L30c944.  v3:= new `java.lang.RuntimeException`;
  #L30c948.  v4:= new `java.lang.StringBuilder`;
  #L30c94c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30c952.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30c958.  v1:= v5.`f8.c$h.a` @type ^`java.lang.reflect.Constructor` @kind object;
  #L30c95c.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30c962.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30c968.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30c96e.  v0:= temp @kind object;
  #L30c970.  call temp:= `getTargetException`(v2) @signature `Ljava/lang/reflect/InvocationTargetException;.getTargetException:()Ljava/lang/Throwable;` @kind virtual;
  #L30c976.  v1:= temp @kind object;
  #L30c978.  call `<init>`(v3, v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L30c97e.  throw v3;
  #L30c980.  v2:= Exception @type ^`java.lang.InstantiationException` @kind object;
  #L30c982.  v3:= new `java.lang.RuntimeException`;
  #L30c986.  v4:= new `java.lang.StringBuilder`;
  #L30c98a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30c990.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30c996.  v1:= v5.`f8.c$h.a` @type ^`java.lang.reflect.Constructor` @kind object;
  #L30c99a.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30c9a0.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30c9a6.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30c9ac.  v0:= temp @kind object;
  #L30c9ae.  call `<init>`(v3, v0, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L30c9b4.  throw v3;
  catch `java.lang.InstantiationException` @[L30c926..L30c932] goto L30c980;
  catch `java.lang.reflect.InvocationTargetException` @[L30c926..L30c932] goto L30c942;
  catch `java.lang.IllegalAccessException` @[L30c926..L30c932] goto L30c934;
}
