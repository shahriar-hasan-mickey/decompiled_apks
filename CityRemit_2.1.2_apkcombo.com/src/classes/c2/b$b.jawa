record `c2.b$b` @kind class @AccessFlag  extends `a2.a0` @kind interface {
  `long` `c2.b$b.a` @AccessFlag PRIVATE_FINAL;
  `c2.b` `c2.b$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`c2.b$b` v0 @kind this, `c2.b` v1 @kind object, `long` v2 ) @signature `Lc2/b$b;.<init>:(Lc2/b;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1f3a38.  v0.`c2.b$b.b` @type ^`c2.b` := v1 @kind object;
  #L1f3a3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f3a42.  v0.`c2.b$b.a` @type ^`long` := v2 @kind wide;
  #L1f3a46.  return @kind void;
}
procedure `boolean` `f`(`c2.b$b` v1 @kind this) @signature `Lc2/b$b;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f3a0c.  v0:= 1I;
  #L1f3a0e.  return v0;
}
procedure `a2.a0$a` `h`(`c2.b$b` v8 @kind this, `long` v9 ) @signature `Lc2/b$b;.h:(J)La2/a0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1f3994.  v0:= v8.`c2.b$b.b` @type ^`c2.b` @kind object;
  #L1f3998.  call temp:= `c`(v0) @signature `Lc2/b;.c:(Lc2/b;)[Lc2/e;` @kind static;
  #L1f399e.  v0:= temp @kind object;
  #L1f39a0.  v1:= 0I;
  #L1f39a2.  v0:= v0[v1] @kind object;
  #L1f39a6.  call temp:= `i`(v0, v9) @signature `Lc2/e;.i:(J)La2/a0$a;` @kind virtual;
  #L1f39ac.  v0:= temp @kind object;
  #L1f39ae.  v1:= 1I;
  #L1f39b0.  v2:= v8.`c2.b$b.b` @type ^`c2.b` @kind object;
  #L1f39b4.  call temp:= `c`(v2) @signature `Lc2/b;.c:(Lc2/b;)[Lc2/e;` @kind static;
  #L1f39ba.  v2:= temp @kind object;
  #L1f39bc.  v2:= length @variable v2;
  #L1f39be.  if v1 >= v2 then goto L1f39fa;
  #L1f39c2.  v2:= v8.`c2.b$b.b` @type ^`c2.b` @kind object;
  #L1f39c6.  call temp:= `c`(v2) @signature `Lc2/b;.c:(Lc2/b;)[Lc2/e;` @kind static;
  #L1f39cc.  v2:= temp @kind object;
  #L1f39ce.  v2:= v2[v1] @kind object;
  #L1f39d2.  call temp:= `i`(v2, v9) @signature `Lc2/e;.i:(J)La2/a0$a;` @kind virtual;
  #L1f39d8.  v2:= temp @kind object;
  #L1f39da.  v3:= v2.`a2.a0$a.a` @type ^`a2.b0` @kind object;
  #L1f39de.  v3:= v3.`a2.b0.b` @type ^`long` @kind wide;
  #L1f39e2.  v5:= v0.`a2.a0$a.a` @type ^`a2.b0` @kind object;
  #L1f39e6.  v5:= v5.`a2.b0.b` @type ^`long` @kind wide;
  #L1f39ea.  v7:= lcmp(v3, v5);
  #L1f39ee.  if v7 >= 0 then goto L1f39f4;
  #L1f39f2.  v0:= v2 @kind object;
  #L1f39f4.  v1:= v1 + 1;
  #L1f39f8.  goto L1f39b0;
  #L1f39fa.  return v0 @kind object;
}
procedure `long` `i`(`c2.b$b` v2 @kind this) @signature `Lc2/b$b;.i:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f3a20.  v0:= v2.`c2.b$b.a` @type ^`long` @kind wide;
  #L1f3a24.  return v0 @kind wide;
}
