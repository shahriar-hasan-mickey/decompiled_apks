record `c2.g` @kind class @AccessFlag FINAL extends `c2.a` @kind interface {
  `v1.j1` `c2.g.a` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`c2.g` v0 @kind this, `v1.j1` v1 @kind object) @signature `Lc2/g;.<init>:(Lv1/j1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1f4f80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f4f86.  v0.`c2.g.a` @type ^`v1.j1` := v1 @kind object;
  #L1f4f8a.  return @kind void;
}
procedure `java.lang.String` `a`(`int` v0 ) @signature `Lc2/g;.a:(I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1f4e7c.  goto L1f4ea4;
  #L1f4e82.  v0:= 0I;
  #L1f4e84.  return v0 @kind object;
  #L1f4e86.  v0:= "video/mjpeg" @kind object;
  #L1f4e8a.  return v0 @kind object;
  #L1f4e8c.  v0:= "video/mp43" @kind object;
  #L1f4e90.  return v0 @kind object;
  #L1f4e92.  v0:= "video/mp42" @kind object;
  #L1f4e96.  return v0 @kind object;
  #L1f4e98.  v0:= "video/avc" @kind object;
  #L1f4e9c.  return v0 @kind object;
  #L1f4e9e.  v0:= "video/mp4v-es" @kind object;
  #L1f4ea2.  return v0 @kind object;
  #L1f4ea4.  switch v0
                  | 808802372 => goto L1f4e9e
                  | 826496577 => goto L1f4e98
                  | 828601953 => goto L1f4e98
                  | 842289229 => goto L1f4e92
                  | 859066445 => goto L1f4e8c
                  | 875967048 => goto L1f4e98
                  | 877677894 => goto L1f4e9e
                  | 1145656883 => goto L1f4e9e
                  | 1145656920 => goto L1f4e9e
                  | 1196444237 => goto L1f4e86
                  | 1482049860 => goto L1f4e9e
                  | 1684633208 => goto L1f4e9e
                  | 1735420525 => goto L1f4e86
                  | 2021026148 => goto L1f4e9e
                  | else => goto L1f4e82;
}
procedure `java.lang.String` `b`(`int` v1 ) @signature `Lc2/g;.b:(I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1f4f28.  v0:= 1I;
  #L1f4f2a.  if v1 == v0 then goto L1f4f6a;
  #L1f4f2e.  v0:= 85I;
  #L1f4f32.  if v1 == v0 then goto L1f4f64;
  #L1f4f36.  v0:= 255I;
  #L1f4f3a.  if v1 == v0 then goto L1f4f5e;
  #L1f4f3e.  v0:= 8192I;
  #L1f4f42.  if v1 == v0 then goto L1f4f58;
  #L1f4f46.  v0:= 8193I;
  #L1f4f4a.  if v1 == v0 then goto L1f4f52;
  #L1f4f4e.  v1:= 0I;
  #L1f4f50.  return v1 @kind object;
  #L1f4f52.  v1:= "audio/vnd.dts" @kind object;
  #L1f4f56.  return v1 @kind object;
  #L1f4f58.  v1:= "audio/ac3" @kind object;
  #L1f4f5c.  return v1 @kind object;
  #L1f4f5e.  v1:= "audio/mp4a-latm" @kind object;
  #L1f4f62.  return v1 @kind object;
  #L1f4f64.  v1:= "audio/mpeg" @kind object;
  #L1f4f68.  return v1 @kind object;
  #L1f4f6a.  v1:= "audio/raw" @kind object;
  #L1f4f6e.  return v1 @kind object;
}
procedure `c2.a` `c`(`s3.z` v3 @kind object) @signature `Lc2/g;.c:(Ls3/z;)Lc2/a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1f4c54.  v0:= 4I;
  #L1f4c56.  call `P`(v3, v0) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L1f4c5c.  call temp:= `p`(v3) @signature `Ls3/z;.p:()I` @kind virtual;
  #L1f4c62.  v1:= temp;
  #L1f4c64.  call temp:= `p`(v3) @signature `Ls3/z;.p:()I` @kind virtual;
  #L1f4c6a.  v2:= temp;
  #L1f4c6c.  call `P`(v3, v0) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L1f4c72.  call temp:= `p`(v3) @signature `Ls3/z;.p:()I` @kind virtual;
  #L1f4c78.  v3:= temp;
  #L1f4c7a.  call temp:= `a`(v3) @signature `Lc2/g;.a:(I)Ljava/lang/String;` @kind static;
  #L1f4c80.  v0:= temp @kind object;
  #L1f4c82.  if v0 != 0 then goto L1f4cb6;
  #L1f4c86.  v0:= new `java.lang.StringBuilder`;
  #L1f4c8a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f4c90.  v1:= "Ignoring track with unsupported compression " @kind object;
  #L1f4c94.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f4c9a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f4ca0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f4ca6.  v3:= temp @kind object;
  #L1f4ca8.  v0:= "StreamFormatChunk" @kind object;
  #L1f4cac.  call `h`(v0, v3) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1f4cb2.  v3:= 0I;
  #L1f4cb4.  return v3 @kind object;
  #L1f4cb6.  v3:= new `v1.j1$b`;
  #L1f4cba.  call `<init>`(v3) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L1f4cc0.  call temp:= `j0`(v3, v1) @signature `Lv1/j1$b;.j0:(I)Lv1/j1$b;` @kind virtual;
  #L1f4cc6.  v1:= temp @kind object;
  #L1f4cc8.  call temp:= `Q`(v1, v2) @signature `Lv1/j1$b;.Q:(I)Lv1/j1$b;` @kind virtual;
  #L1f4cce.  v1:= temp @kind object;
  #L1f4cd0.  call temp:= `e0`(v1, v0) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L1f4cd6.  v0:= new `c2.g`;
  #L1f4cda.  call temp:= `E`(v3) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L1f4ce0.  v3:= temp @kind object;
  #L1f4ce2.  call `<init>`(v0, v3) @signature `Lc2/g;.<init>:(Lv1/j1;)V` @kind direct;
  #L1f4ce8.  return v0 @kind object;
}
procedure `c2.a` `d`(`int` v1 , `s3.z` v2 @kind object) @signature `Lc2/g;.d:(ILs3/z;)Lc2/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1f4cfc.  v0:= 2I;
  #L1f4cfe.  if v1 != v0 then goto L1f4d0c;
  #L1f4d02.  call temp:= `c`(v2) @signature `Lc2/g;.c:(Ls3/z;)Lc2/a;` @kind static;
  #L1f4d08.  v1:= temp @kind object;
  #L1f4d0a.  return v1 @kind object;
  #L1f4d0c.  v0:= 1I;
  #L1f4d0e.  if v1 != v0 then goto L1f4d1c;
  #L1f4d12.  call temp:= `e`(v2) @signature `Lc2/g;.e:(Ls3/z;)Lc2/a;` @kind static;
  #L1f4d18.  v1:= temp @kind object;
  #L1f4d1a.  return v1 @kind object;
  #L1f4d1c.  v2:= new `java.lang.StringBuilder`;
  #L1f4d20.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f4d26.  v0:= "Ignoring strf box for unsupported track type: " @kind object;
  #L1f4d2a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f4d30.  call temp:= `k0`(v1) @signature `Ls3/l0;.k0:(I)Ljava/lang/String;` @kind static;
  #L1f4d36.  v1:= temp @kind object;
  #L1f4d38.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f4d3e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f4d44.  v1:= temp @kind object;
  #L1f4d46.  v2:= "StreamFormatChunk" @kind object;
  #L1f4d4a.  call `h`(v2, v1) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1f4d50.  v1:= 0I;
  #L1f4d52.  return v1 @kind object;
}
procedure `c2.a` `e`(`s3.z` v7 @kind object) @signature `Lc2/g;.e:(Ls3/z;)Lc2/a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1f4d64.  call temp:= `u`(v7) @signature `Ls3/z;.u:()I` @kind virtual;
  #L1f4d6a.  v0:= temp;
  #L1f4d6c.  call temp:= `b`(v0) @signature `Lc2/g;.b:(I)Ljava/lang/String;` @kind static;
  #L1f4d72.  v1:= temp @kind object;
  #L1f4d74.  if v1 != 0 then goto L1f4da8;
  #L1f4d78.  v7:= new `java.lang.StringBuilder`;
  #L1f4d7c.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f4d82.  v1:= "Ignoring track with unsupported format tag " @kind object;
  #L1f4d86.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f4d8c.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f4d92.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f4d98.  v7:= temp @kind object;
  #L1f4d9a.  v0:= "StreamFormatChunk" @kind object;
  #L1f4d9e.  call `h`(v0, v7) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1f4da4.  v7:= 0I;
  #L1f4da6.  return v7 @kind object;
  #L1f4da8.  call temp:= `u`(v7) @signature `Ls3/z;.u:()I` @kind virtual;
  #L1f4dae.  v0:= temp;
  #L1f4db0.  call temp:= `p`(v7) @signature `Ls3/z;.p:()I` @kind virtual;
  #L1f4db6.  v2:= temp;
  #L1f4db8.  v3:= 6I;
  #L1f4dba.  call `P`(v7, v3) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L1f4dc0.  call temp:= `I`(v7) @signature `Ls3/z;.I:()I` @kind virtual;
  #L1f4dc6.  v3:= temp;
  #L1f4dc8.  call temp:= `b0`(v3) @signature `Ls3/l0;.b0:(I)I` @kind static;
  #L1f4dce.  v3:= temp;
  #L1f4dd0.  call temp:= `u`(v7) @signature `Ls3/z;.u:()I` @kind virtual;
  #L1f4dd6.  v4:= temp;
  #L1f4dd8.  v5:= new `byte`[v4];
  #L1f4ddc.  v6:= 0I;
  #L1f4dde.  call `j`(v7, v5, v6, v4) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L1f4de4.  v7:= new `v1.j1$b`;
  #L1f4de8.  call `<init>`(v7) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L1f4dee.  call temp:= `e0`(v7, v1) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L1f4df4.  v6:= temp @kind object;
  #L1f4df6.  call temp:= `H`(v6, v0) @signature `Lv1/j1$b;.H:(I)Lv1/j1$b;` @kind virtual;
  #L1f4dfc.  v0:= temp @kind object;
  #L1f4dfe.  call temp:= `f0`(v0, v2) @signature `Lv1/j1$b;.f0:(I)Lv1/j1$b;` @kind virtual;
  #L1f4e04.  v0:= "audio/raw" @kind object;
  #L1f4e08.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f4e0e.  v0:= temp;
  #L1f4e10.  if v0 == 0 then goto L1f4e1e;
  #L1f4e14.  if v3 == 0 then goto L1f4e1e;
  #L1f4e18.  call temp:= `Y`(v7, v3) @signature `Lv1/j1$b;.Y:(I)Lv1/j1$b;` @kind virtual;
  #L1f4e1e.  v0:= "audio/mp4a-latm" @kind object;
  #L1f4e22.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f4e28.  v0:= temp;
  #L1f4e2a.  if v0 == 0 then goto L1f4e40;
  #L1f4e2e.  if v4 <= 0 then goto L1f4e40;
  #L1f4e32.  call temp:= `b0`(v5) @signature `Lm5/q;.b0:(Ljava/lang/Object;)Lm5/q;` @kind static;
  #L1f4e38.  v0:= temp @kind object;
  #L1f4e3a.  call temp:= `T`(v7, v0) @signature `Lv1/j1$b;.T:(Ljava/util/List;)Lv1/j1$b;` @kind virtual;
  #L1f4e40.  v0:= new `c2.g`;
  #L1f4e44.  call temp:= `E`(v7) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L1f4e4a.  v7:= temp @kind object;
  #L1f4e4c.  call `<init>`(v0, v7) @signature `Lc2/g;.<init>:(Lv1/j1;)V` @kind direct;
  #L1f4e52.  return v0 @kind object;
}
procedure `int` `getType`(`c2.g` v1 @kind this) @signature `Lc2/g;.getType:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f4e64.  v0:= 1718776947I;
  #L1f4e6a.  return v0;
}
