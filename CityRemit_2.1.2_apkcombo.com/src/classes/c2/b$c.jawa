record `c2.b$c` @kind class @AccessFlag  {
  `int` `c2.b$c.a` @AccessFlag PUBLIC;
  `int` `c2.b$c.b` @AccessFlag PUBLIC;
  `int` `c2.b$c.c` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`c2.b$c` v0 @kind this) @signature `Lc2/b$c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1f3a58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f3a5e.  return @kind void;
}
procedure `void` `<init>`(`c2.b$c` v0 @kind this, `c2.b$a` v1 @kind object) @signature `Lc2/b$c;.<init>:(Lc2/b$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1f3a70.  call `<init>`(v0) @signature `Lc2/b$c;.<init>:()V` @kind direct;
  #L1f3a76.  return @kind void;
}
procedure `void` `a`(`c2.b$c` v1 @kind this, `s3.z` v2 @kind object) @signature `Lc2/b$c;.a:(Ls3/z;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f3a88.  call temp:= `p`(v2) @signature `Ls3/z;.p:()I` @kind virtual;
  #L1f3a8e.  v0:= temp;
  #L1f3a90.  v1.`c2.b$c.a` @type ^`int` := v0;
  #L1f3a94.  call temp:= `p`(v2) @signature `Ls3/z;.p:()I` @kind virtual;
  #L1f3a9a.  v2:= temp;
  #L1f3a9c.  v1.`c2.b$c.b` @type ^`int` := v2;
  #L1f3aa0.  v2:= 0I;
  #L1f3aa2.  v1.`c2.b$c.c` @type ^`int` := v2;
  #L1f3aa6.  return @kind void;
}
procedure `void` `b`(`c2.b$c` v2 @kind this, `s3.z` v3 @kind object) @signature `Lc2/b$c;.b:(Ls3/z;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f3ab8.  call `a`(v2, v3) @signature `Lc2/b$c;.a:(Ls3/z;)V` @kind virtual;
  #L1f3abe.  v0:= v2.`c2.b$c.a` @type ^`int`;
  #L1f3ac2.  v1:= 1414744396I;
  #L1f3ac8.  if v0 != v1 then goto L1f3ada;
  #L1f3acc.  call temp:= `p`(v3) @signature `Ls3/z;.p:()I` @kind virtual;
  #L1f3ad2.  v3:= temp;
  #L1f3ad4.  v2.`c2.b$c.c` @type ^`int` := v3;
  #L1f3ad8.  return @kind void;
  #L1f3ada.  v3:= new `java.lang.StringBuilder`;
  #L1f3ade.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f3ae4.  v0:= "LIST expected, found: " @kind object;
  #L1f3ae8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f3aee.  v0:= v2.`c2.b$c.a` @type ^`int`;
  #L1f3af2.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f3af8.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f3afe.  v3:= temp @kind object;
  #L1f3b00.  v0:= 0I;
  #L1f3b02.  call temp:= `a`(v3, v0) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L1f3b08.  v3:= temp @kind object;
  #L1f3b0a.  throw v3;
}
