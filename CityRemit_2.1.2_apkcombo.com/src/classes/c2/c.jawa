record `c2.c` @kind class @AccessFlag FINAL extends `c2.a` @kind interface {
  `int` `c2.c.a` @AccessFlag PUBLIC_FINAL;
  `int` `c2.c.b` @AccessFlag PUBLIC_FINAL;
  `int` `c2.c.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`c2.c` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lc2/c;.<init>:(IIII)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1f4558.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f455e.  v0.`c2.c.a` @type ^`int` := v1;
  #L1f4562.  v0.`c2.c.b` @type ^`int` := v2;
  #L1f4566.  v0.`c2.c.c` @type ^`int` := v3;
  #L1f456a.  return @kind void;
}
procedure `c2.c` `b`(`s3.z` v5 @kind object) @signature `Lc2/c;.b:(Ls3/z;)Lc2/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1f44e8.  call temp:= `p`(v5) @signature `Ls3/z;.p:()I` @kind virtual;
  #L1f44ee.  v0:= temp;
  #L1f44f0.  v1:= 8I;
  #L1f44f4.  call `P`(v5, v1) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L1f44fa.  call temp:= `p`(v5) @signature `Ls3/z;.p:()I` @kind virtual;
  #L1f4500.  v1:= temp;
  #L1f4502.  call temp:= `p`(v5) @signature `Ls3/z;.p:()I` @kind virtual;
  #L1f4508.  v2:= temp;
  #L1f450a.  v3:= 4I;
  #L1f450c.  call `P`(v5, v3) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L1f4512.  call temp:= `p`(v5) @signature `Ls3/z;.p:()I` @kind virtual;
  #L1f4518.  v3:= temp;
  #L1f451a.  v4:= 12I;
  #L1f451e.  call `P`(v5, v4) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L1f4524.  v5:= new `c2.c`;
  #L1f4528.  call `<init>`(v5, v0, v1, v2, v3) @signature `Lc2/c;.<init>:(IIII)V` @kind direct;
  #L1f452e.  return v5 @kind object;
}
procedure `boolean` `a`(`c2.c` v2 @kind this) @signature `Lc2/c;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f44c0.  v0:= v2.`c2.c.b` @type ^`int`;
  #L1f44c4.  v1:= 16I;
  #L1f44c8.  v0:= v0 ^& v1 @kind int;
  #L1f44ca.  if v0 != v1 then goto L1f44d2;
  #L1f44ce.  v0:= 1I;
  #L1f44d0.  goto L1f44d4;
  #L1f44d2.  v0:= 0I;
  #L1f44d4.  return v0;
}
procedure `int` `getType`(`c2.c` v1 @kind this) @signature `Lc2/c;.getType:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f4540.  v0:= 1751742049I;
  #L1f4546.  return v0;
}
