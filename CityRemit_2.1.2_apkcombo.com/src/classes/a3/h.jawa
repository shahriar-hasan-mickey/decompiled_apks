record `a3.h` @kind class @AccessFlag PUBLIC_FINAL extends `a3.f` @kind interface {
  `a2.d` `a3.h.a` @AccessFlag PRIVATE_FINAL;
  `long` `a3.h.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a3.h` v0 @kind this, `a2.d` v1 @kind object, `long` v2 ) @signature `La3/h;.<init>:(La2/d;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15cc04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15cc0a.  v0.`a3.h.a` @type ^`a2.d` := v1 @kind object;
  #L15cc0e.  v0.`a3.h.b` @type ^`long` := v2 @kind wide;
  #L15cc12.  return @kind void;
}
procedure `long` `c`(`a3.h` v2 @kind this, `long` v3 ) @signature `La3/h;.c:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15cbdc.  v0:= v2.`a3.h.a` @type ^`a2.d` @kind object;
  #L15cbe0.  v0:= v0.`a2.d.e` @type ^`long`[] @kind object;
  #L15cbe4.  v4:= (`int`) v3 @kind l2i;
  #L15cbe6.  v3:= v0[v4] @kind wide;
  #L15cbea.  v0:= v2.`a3.h.b` @type ^`long` @kind wide;
  #L15cbee.  v3:= v3 - v0 @kind long;
  #L15cbf0.  return v3 @kind wide;
}
procedure `long` `d`(`a3.h` v2 @kind this, `long` v3 , `long` v5 ) @signature `La3/h;.d:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15cbb4.  v5:= v2.`a3.h.a` @type ^`a2.d` @kind object;
  #L15cbb8.  v0:= v2.`a3.h.b` @type ^`long` @kind wide;
  #L15cbbc.  v3:= v3 + v0 @kind long;
  #L15cbbe.  call temp:= `a`(v5, v3) @signature `La2/d;.a:(J)I` @kind virtual;
  #L15cbc4.  v3:= temp;
  #L15cbc6.  v3:= (`long`) v3 @kind i2l;
  #L15cbc8.  return v3 @kind wide;
}
procedure `long` `e`(`a3.h` v0 @kind this, `long` v1 , `long` v3 ) @signature `La3/h;.e:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L15cb2c.  v3:= v0.`a3.h.a` @type ^`a2.d` @kind object;
  #L15cb30.  v3:= v3.`a2.d.d` @type ^`long`[] @kind object;
  #L15cb34.  v2:= (`int`) v1 @kind l2i;
  #L15cb36.  v1:= v3[v2] @kind wide;
  #L15cb3a.  return v1 @kind wide;
}
procedure `long` `f`(`a3.h` v0 @kind this, `long` v1 , `long` v3 ) @signature `La3/h;.f:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L15cb4c.  v1:= 0L;
  #L15cb50.  return v1 @kind wide;
}
procedure `long` `g`(`a3.h` v0 @kind this, `long` v1 , `long` v3 ) @signature `La3/h;.g:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L15cb7c.  v1:= -4.9E-324D;
  #L15cb86.  return v1 @kind wide;
}
procedure `b3.i` `h`(`a3.h` v7 @kind this, `long` v8 ) @signature `La3/h;.h:(J)Lb3/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15cac4.  v6:= new `b3.i`;
  #L15cac8.  v0:= v7.`a3.h.a` @type ^`a2.d` @kind object;
  #L15cacc.  v1:= v0.`a2.d.c` @type ^`long`[] @kind object;
  #L15cad0.  v9:= (`int`) v8 @kind l2i;
  #L15cad2.  v2:= v1[v9] @kind wide;
  #L15cad6.  v8:= v0.`a2.d.b` @type ^`int`[] @kind object;
  #L15cada.  v8:= v8[v9];
  #L15cade.  v4:= (`long`) v8 @kind i2l;
  #L15cae0.  v1:= 0I;
  #L15cae2.  v0:= v6 @kind object;
  #L15cae4.  call `<init>`(v0, v1, v2, v4) @signature `Lb3/i;.<init>:(Ljava/lang/String;JJ)V` @kind direct;
  #L15caea.  return v6 @kind object;
}
procedure `boolean` `i`(`a3.h` v1 @kind this) @signature `La3/h;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cafc.  v0:= 1I;
  #L15cafe.  return v0;
}
procedure `long` `j`(`a3.h` v2 @kind this) @signature `La3/h;.j:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15cb64.  v0:= 0L;
  #L15cb68.  return v0 @kind wide;
}
procedure `long` `k`(`a3.h` v0 @kind this, `long` v1 ) @signature `La3/h;.k:(J)J` @AccessFlag PUBLIC {
    temp;

  #L15cb98.  v1:= v0.`a3.h.a` @type ^`a2.d` @kind object;
  #L15cb9c.  v1:= v1.`a2.d.a` @type ^`int`;
  #L15cba0.  v1:= (`long`) v1 @kind i2l;
  #L15cba2.  return v1 @kind wide;
}
procedure `long` `l`(`a3.h` v0 @kind this, `long` v1 , `long` v3 ) @signature `La3/h;.l:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L15cb10.  v1:= v0.`a3.h.a` @type ^`a2.d` @kind object;
  #L15cb14.  v1:= v1.`a2.d.a` @type ^`int`;
  #L15cb18.  v1:= (`long`) v1 @kind i2l;
  #L15cb1a.  return v1 @kind wide;
}
