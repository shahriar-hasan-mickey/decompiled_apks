record `s3.d` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@s3.d.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@s3.d.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ls3/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45983c.  v0:= 4I;
  #L45983e.  v0:= new `byte`[v0];
  #L459842.  goto L45986c;
  #L459848.  `@@s3.d.a` @type ^`byte`[] := v0 @kind object;
  #L45984c.  v0:= "" @kind object;
  #L459850.  v1:= "A" @kind object;
  #L459854.  v2:= "B" @kind object;
  #L459858.  v3:= "C" @kind object;
  #L45985c.  temp:= new `java.lang.String`[v0, v1, v2, v3];
  #L459862.  v0:= temp @kind object;
  #L459864.  `@@s3.d.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L459868.  return @kind void;
  #L45986a.  
  #L45986c.  v0:= (0I, 0I, 0I, 1I) @kind object;
  #L459877.  goto L459848;
}
procedure `java.lang.String` `a`(`int` v2 , `int` v3 , `int` v4 ) @signature `Ls3/d;.a:(III)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4596e4.  v0:= 3I;
  #L4596e6.  v0:= new `java.lang.Object`[v0];
  #L4596ea.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4596f0.  v2:= temp @kind object;
  #L4596f2.  v1:= 0I;
  #L4596f4.  v0[v1]:= v2 @kind object;
  #L4596f8.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4596fe.  v2:= temp @kind object;
  #L459700.  v3:= 1I;
  #L459702.  v0[v3]:= v2 @kind object;
  #L459706.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45970c.  v2:= temp @kind object;
  #L45970e.  v3:= 2I;
  #L459710.  v0[v3]:= v2 @kind object;
  #L459714.  v2:= "avc1.%02X%02X%02X" @kind object;
  #L459718.  call temp:= `format`(v2, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L45971e.  v2:= temp @kind object;
  #L459720.  return v2 @kind object;
}
procedure `java.util.List` `b`(`boolean` v2 ) @signature `Ls3/d;.b:(Z)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L459808.  v0:= 0I;
  #L45980a.  v1:= 1I;
  #L45980c.  if v2 == 0 then goto L45981a;
  #L459810.  v2:= new `byte`[v1];
  #L459814.  v2[v0]:= v1 @kind byte;
  #L459818.  goto L459822;
  #L45981a.  v2:= new `byte`[v1];
  #L45981e.  v2[v0]:= v0 @kind byte;
  #L459822.  call temp:= `singletonList`(v2) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L459828.  v2:= temp @kind object;
  #L45982a.  return v2 @kind object;
}
procedure `java.lang.String` `c`(`int` v3 , `boolean` v4 , `int` v5 , `int` v6 , `int`[] v7 @kind object, `int` v8 ) @signature `Ls3/d;.c:(IZII[II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L459734.  v0:= new `java.lang.StringBuilder`;
  #L459738.  v1:= 5I;
  #L45973a.  v1:= new `java.lang.Object`[v1];
  #L45973e.  v2:= `@@s3.d.b` @type ^`java.lang.String`[] @kind object;
  #L459742.  v3:= v2[v3] @kind object;
  #L459746.  v2:= 0I;
  #L459748.  v1[v2]:= v3 @kind object;
  #L45974c.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L459752.  v3:= temp @kind object;
  #L459754.  v5:= 1I;
  #L459756.  v1[v5]:= v3 @kind object;
  #L45975a.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L459760.  v3:= temp @kind object;
  #L459762.  v6:= 2I;
  #L459764.  v1[v6]:= v3 @kind object;
  #L459768.  if v4 == 0 then goto L459772;
  #L45976c.  v3:= 72I;
  #L459770.  goto L459776;
  #L459772.  v3:= 76I;
  #L459776.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L45977c.  v3:= temp @kind object;
  #L45977e.  v4:= 3I;
  #L459780.  v1[v4]:= v3 @kind object;
  #L459784.  v3:= 4I;
  #L459786.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45978c.  v4:= temp @kind object;
  #L45978e.  v1[v3]:= v4 @kind object;
  #L459792.  v3:= "hvc1.%s%d.%X.%c%d" @kind object;
  #L459796.  call temp:= `C`(v3, v1) @signature `Ls3/l0;.C:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L45979c.  v3:= temp @kind object;
  #L45979e.  call `<init>`(v0, v3) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4597a4.  v3:= length @variable v7;
  #L4597a6.  if v3 <= 0 then goto L4597bc;
  #L4597aa.  v4:= v3 + -1;
  #L4597ae.  v4:= v7[v4];
  #L4597b2.  if v4 != 0 then goto L4597bc;
  #L4597b6.  v3:= v3 + -1;
  #L4597ba.  goto L4597a6;
  #L4597bc.  v4:= 0I;
  #L4597be.  if v4 >= v3 then goto L4597ee;
  #L4597c2.  v6:= new `java.lang.Object`[v5];
  #L4597c6.  v8:= v7[v4];
  #L4597ca.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4597d0.  v8:= temp @kind object;
  #L4597d2.  v6[v2]:= v8 @kind object;
  #L4597d6.  v8:= ".%02X" @kind object;
  #L4597da.  call temp:= `format`(v8, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4597e0.  v6:= temp @kind object;
  #L4597e2.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4597e8.  v4:= v4 + 1;
  #L4597ec.  goto L4597be;
  #L4597ee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4597f4.  v3:= temp @kind object;
  #L4597f6.  return v3 @kind object;
}
procedure `byte`[] `d`(`byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Ls3/d;.d:([BII)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4595b8.  v0:= `@@s3.d.a` @type ^`byte`[] @kind object;
  #L4595bc.  v1:= length @variable v0;
  #L4595be.  v1:= v1 + v6 @kind int;
  #L4595c0.  v1:= new `byte`[v1];
  #L4595c4.  v2:= length @variable v0;
  #L4595c6.  v3:= 0I;
  #L4595c8.  call `arraycopy`(v0, v3, v1, v3, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4595ce.  v0:= length @variable v0;
  #L4595d0.  call `arraycopy`(v4, v5, v1, v0, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4595d6.  return v1 @kind object;
}
procedure `int` `e`(`byte`[] v2 @kind object, `int` v3 ) @signature `Ls3/d;.e:([BI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4596ac.  v0:= length @variable v2;
  #L4596ae.  v1:= `@@s3.d.a` @type ^`byte`[] @kind object;
  #L4596b2.  v1:= length @variable v1;
  #L4596b4.  v0:= v0 - v1 @kind int;
  #L4596b6.  if v3 > v0 then goto L4596ce;
  #L4596ba.  call temp:= `f`(v2, v3) @signature `Ls3/d;.f:([BI)Z` @kind static;
  #L4596c0.  v1:= temp;
  #L4596c2.  if v1 == 0 then goto L4596c8;
  #L4596c6.  return v3;
  #L4596c8.  v3:= v3 + 1;
  #L4596cc.  goto L4596b6;
  #L4596ce.  v2:= -1I;
  #L4596d0.  return v2;
}
procedure `boolean` `f`(`byte`[] v4 @kind object, `int` v5 ) @signature `Ls3/d;.f:([BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L459520.  v0:= length @variable v4;
  #L459522.  v0:= v0 - v5 @kind int;
  #L459524.  v1:= `@@s3.d.a` @type ^`byte`[] @kind object;
  #L459528.  v1:= length @variable v1;
  #L45952a.  v2:= 0I;
  #L45952c.  if v0 > v1 then goto L459532;
  #L459530.  return v2;
  #L459532.  v0:= 0I;
  #L459534.  v1:= `@@s3.d.a` @type ^`byte`[] @kind object;
  #L459538.  v3:= length @variable v1;
  #L45953a.  if v0 >= v3 then goto L459556;
  #L45953e.  v3:= v5 + v0 @kind int;
  #L459542.  v3:= v4[v3] @kind byte;
  #L459546.  v1:= v1[v0] @kind byte;
  #L45954a.  if v3 == v1 then goto L459550;
  #L45954e.  return v2;
  #L459550.  v0:= v0 + 1;
  #L459554.  goto L459534;
  #L459556.  v4:= 1I;
  #L459558.  return v4;
}
procedure `android.util.Pair` `g`(`byte`[] v2 @kind object) @signature `Ls3/d;.g:([B)Landroid/util/Pair;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4594c8.  v0:= new `s3.z`;
  #L4594cc.  call `<init>`(v0, v2) @signature `Ls3/z;.<init>:([B)V` @kind direct;
  #L4594d2.  v2:= 9I;
  #L4594d6.  call `O`(v0, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L4594dc.  call temp:= `C`(v0) @signature `Ls3/z;.C:()I` @kind virtual;
  #L4594e2.  v2:= temp;
  #L4594e4.  v1:= 20I;
  #L4594e8.  call `O`(v0, v1) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L4594ee.  call temp:= `G`(v0) @signature `Ls3/z;.G:()I` @kind virtual;
  #L4594f4.  v0:= temp;
  #L4594f6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4594fc.  v0:= temp @kind object;
  #L4594fe.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L459504.  v2:= temp @kind object;
  #L459506.  call temp:= `create`(v0, v2) @signature `Landroid/util/Pair;.create:(Ljava/lang/Object;Ljava/lang/Object;)Landroid/util/Pair;` @kind static;
  #L45950c.  v2:= temp @kind object;
  #L45950e.  return v2 @kind object;
}
procedure `boolean` `h`(`java.util.List` v3 @kind object) @signature `Ls3/d;.h:(Ljava/util/List;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45956c.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L459572.  v0:= temp;
  #L459574.  v1:= 0I;
  #L459576.  v2:= 1I;
  #L459578.  if v0 != v2 then goto L4595a4;
  #L45957c.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L459582.  v0:= temp @kind object;
  #L459584.  v0:= (`byte`[]) v0 @kind object;
  #L459588.  v0:= length @variable v0;
  #L45958a.  if v0 != v2 then goto L4595a4;
  #L45958e.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L459594.  v3:= temp @kind object;
  #L459596.  v3:= (`byte`[]) v3 @kind object;
  #L45959a.  v3:= v3[v1] @kind byte;
  #L45959e.  if v3 != v2 then goto L4595a4;
  #L4595a2.  v1:= 1I;
  #L4595a4.  return v1;
}
procedure `byte`[][] `i`(`byte`[] v7 @kind object) @signature `Ls3/d;.i:([B)[[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4595e8.  v0:= 0I;
  #L4595ea.  call temp:= `f`(v7, v0) @signature `Ls3/d;.f:([BI)Z` @kind static;
  #L4595f0.  v1:= temp;
  #L4595f2.  if v1 != 0 then goto L4595fa;
  #L4595f6.  v7:= 0I;
  #L4595f8.  return v7 @kind object;
  #L4595fa.  v1:= new `java.util.ArrayList`;
  #L4595fe.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L459604.  v2:= 0I;
  #L459606.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45960c.  v3:= temp @kind object;
  #L45960e.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L459614.  v3:= `@@s3.d.a` @type ^`byte`[] @kind object;
  #L459618.  v3:= length @variable v3;
  #L45961a.  v2:= v2 + v3 @kind int;
  #L45961c.  call temp:= `e`(v7, v2) @signature `Ls3/d;.e:([BI)I` @kind static;
  #L459622.  v2:= temp;
  #L459624.  v3:= -1I;
  #L459626.  if v2 != v3 then goto L459606;
  #L45962a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L459630.  v2:= temp;
  #L459632.  v2:= new `byte`[][v2];
  #L459636.  v3:= 0I;
  #L459638.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45963e.  v4:= temp;
  #L459640.  if v3 >= v4 then goto L45969a;
  #L459644.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L45964a.  v4:= temp @kind object;
  #L45964c.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L459650.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L459656.  v4:= temp;
  #L459658.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L45965e.  v5:= temp;
  #L459660.  v5:= v5 + -1;
  #L459664.  if v3 >= v5 then goto L459682;
  #L459668.  v5:= v3 + 1;
  #L45966c.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L459672.  v5:= temp @kind object;
  #L459674.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L459678.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L45967e.  v5:= temp;
  #L459680.  goto L459684;
  #L459682.  v5:= length @variable v7;
  #L459684.  v5:= v5 - v4 @kind int;
  #L459686.  v6:= new `byte`[v5];
  #L45968a.  call `arraycopy`(v7, v4, v6, v0, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L459690.  v2[v3]:= v6 @kind object;
  #L459694.  v3:= v3 + 1;
  #L459698.  goto L459638;
  #L45969a.  return v2 @kind object;
}
