record `s3.a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`boolean` v0 ) @signature `Ls3/a;.a:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L459360.  if v0 == 0 then goto L459366;
  #L459364.  return @kind void;
  #L459366.  v0:= new `java.lang.IllegalArgumentException`;
  #L45936a.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L459370.  throw v0;
}
procedure `void` `b`(`boolean` v0 , `java.lang.Object` v1 @kind object) @signature `Ls3/a;.b:(ZLjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L459384.  if v0 == 0 then goto L45938a;
  #L459388.  return @kind void;
  #L45938a.  v0:= new `java.lang.IllegalArgumentException`;
  #L45938e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L459394.  v1:= temp @kind object;
  #L459396.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45939c.  throw v0;
}
procedure `int` `c`(`int` v0 , `int` v1 , `int` v2 ) @signature `Ls3/a;.c:(III)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4592a4.  if v0 < v1 then goto L4592ae;
  #L4592a8.  if v0 >= v2 then goto L4592ae;
  #L4592ac.  return v0;
  #L4592ae.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L4592b2.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L4592b8.  throw v0;
}
procedure `java.lang.String` `d`(`java.lang.String` v1 @kind object) @signature `Ls3/a;.d:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L459334.  call temp:= `isEmpty`(v1) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L45933a.  v0:= temp;
  #L45933c.  if v0 != 0 then goto L459342;
  #L459340.  return v1 @kind object;
  #L459342.  v1:= new `java.lang.IllegalArgumentException`;
  #L459346.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L45934c.  throw v1;
}
procedure `java.lang.Object` `e`(`java.lang.Object` v0 @kind object) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4592cc.  call temp:= `requireNonNull`(v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4592d2.  return v0 @kind object;
}
procedure `void` `f`(`boolean` v0 ) @signature `Ls3/a;.f:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4593b0.  if v0 == 0 then goto L4593b6;
  #L4593b4.  return @kind void;
  #L4593b6.  v0:= new `java.lang.IllegalStateException`;
  #L4593ba.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L4593c0.  throw v0;
}
procedure `void` `g`(`boolean` v0 , `java.lang.Object` v1 @kind object) @signature `Ls3/a;.g:(ZLjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4593d4.  if v0 == 0 then goto L4593da;
  #L4593d8.  return @kind void;
  #L4593da.  v0:= new `java.lang.IllegalStateException`;
  #L4593de.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4593e4.  v1:= temp @kind object;
  #L4593e6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4593ec.  throw v0;
}
procedure `java.lang.Object` `h`(`java.lang.Object` v0 @kind object) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4592e4.  if v0 == 0 then goto L4592ea;
  #L4592e8.  return v0 @kind object;
  #L4592ea.  v0:= new `java.lang.IllegalStateException`;
  #L4592ee.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L4592f4.  throw v0;
}
procedure `java.lang.Object` `i`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Ls3/a;.i:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L459308.  if v0 == 0 then goto L45930e;
  #L45930c.  return v0 @kind object;
  #L45930e.  v0:= new `java.lang.IllegalStateException`;
  #L459312.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L459318.  v1:= temp @kind object;
  #L45931a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L459320.  throw v0;
}
