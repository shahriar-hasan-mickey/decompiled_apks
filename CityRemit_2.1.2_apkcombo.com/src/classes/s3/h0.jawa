record `s3.h0` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `s3.h0.a` @AccessFlag PRIVATE;
  `long` `s3.h0.b` @AccessFlag PRIVATE;
  `long` `s3.h0.c` @AccessFlag PRIVATE;
  `java.lang.ThreadLocal` `s3.h0.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`s3.h0` v1 @kind this, `long` v2 ) @signature `Ls3/h0;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4615e4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4615ea.  v0:= new `java.lang.ThreadLocal`;
  #L4615ee.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L4615f4.  v1.`s3.h0.d` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L4615f8.  call `g`(v1, v2) @signature `Ls3/h0;.g:(J)V` @kind virtual;
  #L4615fe.  return @kind void;
}
procedure `long` `f`(`long` v2 ) @signature `Ls3/h0;.f:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L461574.  v0:= 1000000L;
  #L46157a.  v2:= v2 * v0 @kind long;
  #L46157e.  v0:= 90000L;
  #L461584.  v2:= v2 / v0 @kind long;
  #L461586.  return v2 @kind wide;
}
procedure `long` `i`(`long` v2 ) @signature `Ls3/h0;.i:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L461598.  v0:= 90000L;
  #L46159e.  v2:= v2 * v0 @kind long;
  #L4615a2.  v0:= 1000000L;
  #L4615a8.  v2:= v2 / v0 @kind long;
  #L4615aa.  return v2 @kind wide;
}
procedure `long` `j`(`long` v2 ) @signature `Ls3/h0;.j:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4615bc.  call temp:= `i`(v2) @signature `Ls3/h0;.i:(J)J` @kind static;
  #L4615c2.  v2:= temp @kind wide;
  #L4615c4.  v0:= 8589934592L;
  #L4615ce.  v2:= v2 %% v0 @kind long;
  #L4615d0.  return v2 @kind wide;
}
procedure `long` `a`(`s3.h0` v5 @kind this, `long` v6 ) @signature `Ls3/h0;.a:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L461350.  @monitorenter v5
  #L461352.  v0:= -4.9E-324D;
  #L46135c.  v2:= lcmp(v6, v0);
  #L461360.  if v2 != 0 then goto L461368;
  #L461364.  @monitorexit v5
  #L461366.  return v0 @kind wide;
  #L461368.  v2:= v5.`s3.h0.b` @type ^`long` @kind wide;
  #L46136c.  v4:= lcmp(v2, v0);
  #L461370.  if v4 != 0 then goto L4613ba;
  #L461374.  v0:= v5.`s3.h0.a` @type ^`long` @kind wide;
  #L461378.  v2:= 9223372036854775806L;
  #L461382.  v4:= lcmp(v0, v2);
  #L461386.  if v4 != 0 then goto L4613ae;
  #L46138a.  v0:= v5.`s3.h0.d` @type ^`java.lang.ThreadLocal` @kind object;
  #L46138e.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L461394.  v0:= temp @kind object;
  #L461396.  v0:= (`java.lang.Long`) v0 @kind object;
  #L46139a.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4613a0.  v0:= temp @kind object;
  #L4613a2.  v0:= (`java.lang.Long`) v0 @kind object;
  #L4613a6.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4613ac.  v0:= temp @kind wide;
  #L4613ae.  v0:= v0 - v6 @kind long;
  #L4613b0.  v5.`s3.h0.b` @type ^`long` := v0 @kind wide;
  #L4613b4.  call `notifyAll`(v5) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L4613ba.  v5.`s3.h0.c` @type ^`long` := v6 @kind wide;
  #L4613be.  v0:= v5.`s3.h0.b` @type ^`long` @kind wide;
  #L4613c2.  v6:= v6 + v0 @kind long;
  #L4613c4.  @monitorexit v5
  #L4613c6.  return v6 @kind wide;
  #L4613c8.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4613ca.  @monitorexit v5
  #L4613cc.  throw v6;
  catch `java.lang.Throwable` @[L461368..L4613c2] goto L4613c8;
}
procedure `long` `b`(`s3.h0` v8 @kind this, `long` v9 ) @signature `Ls3/h0;.b:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4613ec.  @monitorenter v8
  #L4613ee.  v0:= -4.9E-324D;
  #L4613f8.  v2:= lcmp(v9, v0);
  #L4613fc.  if v2 != 0 then goto L461404;
  #L461400.  @monitorexit v8
  #L461402.  return v0 @kind wide;
  #L461404.  v2:= v8.`s3.h0.c` @type ^`long` @kind wide;
  #L461408.  v4:= lcmp(v2, v0);
  #L46140c.  if v4 == 0 then goto L461466;
  #L461410.  call temp:= `i`(v2) @signature `Ls3/h0;.i:(J)J` @kind static;
  #L461416.  v0:= temp @kind wide;
  #L461418.  v2:= 4294967296L;
  #L461422.  v2:= v2 + v0 @kind long;
  #L461424.  v4:= 8589934592L;
  #L46142e.  v2:= v2 / v4 @kind long;
  #L461430.  v6:= 1L;
  #L461434.  v6:= v2 - v6 @kind long;
  #L461438.  v6:= v6 * v4 @kind long;
  #L46143c.  v6:= v6 + v9 @kind long;
  #L46143e.  v2:= v2 * v4 @kind long;
  #L461442.  v9:= v9 + v2 @kind long;
  #L461444.  v2:= v6 - v0 @kind long;
  #L461448.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(J)J` @kind static;
  #L46144e.  v2:= temp @kind wide;
  #L461450.  v0:= v9 - v0 @kind long;
  #L461454.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(J)J` @kind static;
  #L46145a.  v0:= temp @kind wide;
  #L46145c.  v4:= lcmp(v2, v0);
  #L461460.  if v4 >= 0 then goto L461466;
  #L461464.  v9:= v6 @kind wide;
  #L461466.  call temp:= `f`(v9) @signature `Ls3/h0;.f:(J)J` @kind static;
  #L46146c.  v9:= temp @kind wide;
  #L46146e.  call temp:= `a`(v8, v9) @signature `Ls3/h0;.a:(J)J` @kind virtual;
  #L461474.  v9:= temp @kind wide;
  #L461476.  @monitorexit v8
  #L461478.  return v9 @kind wide;
  #L46147a.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46147c.  @monitorexit v8
  #L46147e.  throw v9;
  catch `java.lang.Throwable` @[L461404..L461476] goto L46147a;
}
procedure `long` `c`(`s3.h0` v5 @kind this) @signature `Ls3/h0;.c:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L46149c.  @monitorenter v5
  #L46149e.  v0:= v5.`s3.h0.a` @type ^`long` @kind wide;
  #L4614a2.  v2:= 9223372036854775807L;
  #L4614ac.  v4:= lcmp(v0, v2);
  #L4614b0.  if v4 == 0 then goto L4614c6;
  #L4614b4.  v2:= 9223372036854775806L;
  #L4614be.  v4:= lcmp(v0, v2);
  #L4614c2.  if v4 != 0 then goto L4614d0;
  #L4614c6.  v0:= -4.9E-324D;
  #L4614d0.  @monitorexit v5
  #L4614d2.  return v0 @kind wide;
  #L4614d4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4614d6.  @monitorexit v5
  #L4614d8.  throw v0;
  catch `java.lang.Throwable` @[L46149e..L4614a2] goto L4614d4;
}
procedure `long` `d`(`s3.h0` v5 @kind this) @signature `Ls3/h0;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4614f8.  @monitorenter v5
  #L4614fa.  v0:= v5.`s3.h0.c` @type ^`long` @kind wide;
  #L4614fe.  v2:= -4.9E-324D;
  #L461508.  v4:= lcmp(v0, v2);
  #L46150c.  if v4 == 0 then goto L461518;
  #L461510.  v2:= v5.`s3.h0.b` @type ^`long` @kind wide;
  #L461514.  v0:= v0 + v2 @kind long;
  #L461516.  goto L461520;
  #L461518.  call temp:= `c`(v5) @signature `Ls3/h0;.c:()J` @kind virtual;
  #L46151e.  v0:= temp @kind wide;
  #L461520.  @monitorexit v5
  #L461522.  return v0 @kind wide;
  #L461524.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L461526.  @monitorexit v5
  #L461528.  throw v0;
  catch `java.lang.Throwable` @[L4614fa..L461520] goto L461524;
}
procedure `long` `e`(`s3.h0` v2 @kind this) @signature `Ls3/h0;.e:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L461548.  @monitorenter v2
  #L46154a.  v0:= v2.`s3.h0.b` @type ^`long` @kind wide;
  #L46154e.  @monitorexit v2
  #L461550.  return v0 @kind wide;
  #L461552.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L461554.  @monitorexit v2
  #L461556.  throw v0;
  catch `java.lang.Throwable` @[L46154a..L46154e] goto L461552;
}
procedure `void` `g`(`s3.h0` v5 @kind this, `long` v6 ) @signature `Ls3/h0;.g:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L461610.  @monitorenter v5
  #L461612.  v5.`s3.h0.a` @type ^`long` := v6 @kind wide;
  #L461616.  v0:= 9223372036854775807L;
  #L461620.  v2:= -4.9E-324D;
  #L46162a.  v4:= lcmp(v6, v0);
  #L46162e.  if v4 != 0 then goto L461638;
  #L461632.  v6:= 0L;
  #L461636.  goto L46163a;
  #L461638.  v6:= v2 @kind wide;
  #L46163a.  v5.`s3.h0.b` @type ^`long` := v6 @kind wide;
  #L46163e.  v5.`s3.h0.c` @type ^`long` := v2 @kind wide;
  #L461642.  @monitorexit v5
  #L461644.  return @kind void;
  #L461646.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L461648.  @monitorexit v5
  #L46164a.  throw v6;
  catch `java.lang.Throwable` @[L461612..L461642] goto L461646;
}
procedure `void` `h`(`s3.h0` v5 @kind this, `boolean` v6 , `long` v7 ) @signature `Ls3/h0;.h:(ZJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L461668.  @monitorenter v5
  #L46166a.  v0:= v5.`s3.h0.a` @type ^`long` @kind wide;
  #L46166e.  v2:= 9223372036854775806L;
  #L461678.  v4:= lcmp(v0, v2);
  #L46167c.  if v4 != 0 then goto L461684;
  #L461680.  v0:= 1I;
  #L461682.  goto L461686;
  #L461684.  v0:= 0I;
  #L461686.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L46168c.  v0:= v5.`s3.h0.b` @type ^`long` @kind wide;
  #L461690.  v2:= -4.9E-324D;
  #L46169a.  v4:= lcmp(v0, v2);
  #L46169e.  if v4 == 0 then goto L4616a6;
  #L4616a2.  @monitorexit v5
  #L4616a4.  return @kind void;
  #L4616a6.  if v6 == 0 then goto L4616be;
  #L4616aa.  v6:= v5.`s3.h0.d` @type ^`java.lang.ThreadLocal` @kind object;
  #L4616ae.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4616b4.  v7:= temp @kind object;
  #L4616b6.  call `set`(v6, v7) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L4616bc.  goto L4616d2;
  #L4616be.  v6:= v5.`s3.h0.b` @type ^`long` @kind wide;
  #L4616c2.  v8:= lcmp(v6, v2);
  #L4616c6.  if v8 != 0 then goto L4616d2;
  #L4616ca.  call `wait`(v5) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L4616d0.  goto L4616be;
  #L4616d2.  @monitorexit v5
  #L4616d4.  return @kind void;
  #L4616d6.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4616d8.  @monitorexit v5
  #L4616da.  throw v6;
  catch `java.lang.Throwable` @[L46166a..L461690] goto L4616d6;
  catch `java.lang.Throwable` @[L4616aa..L4616d0] goto L4616d6;
}
