record `s3.k$b` @kind class @AccessFlag PUBLIC_FINAL {
  `android.util.SparseBooleanArray` `s3.k$b.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `s3.k$b.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`s3.k$b` v1 @kind this) @signature `Ls3/k$b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L45bae0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45bae6.  v0:= new `android.util.SparseBooleanArray`;
  #L45baea.  call `<init>`(v0) @signature `Landroid/util/SparseBooleanArray;.<init>:()V` @kind direct;
  #L45baf0.  v1.`s3.k$b.a` @type ^`android.util.SparseBooleanArray` := v0 @kind object;
  #L45baf4.  return @kind void;
}
procedure `s3.k$b` `a`(`s3.k$b` v2 @kind this, `int` v3 ) @signature `Ls3/k$b;.a:(I)Ls3/k$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45ba34.  v0:= v2.`s3.k$b.b` @type ^`boolean` @kind boolean;
  #L45ba38.  v1:= 1I;
  #L45ba3a.  v0:= v0 ^~ v1 @kind int;
  #L45ba3c.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L45ba42.  v0:= v2.`s3.k$b.a` @type ^`android.util.SparseBooleanArray` @kind object;
  #L45ba46.  call `append`(v0, v3, v1) @signature `Landroid/util/SparseBooleanArray;.append:(IZ)V` @kind virtual;
  #L45ba4c.  return v2 @kind object;
}
procedure `s3.k$b` `b`(`s3.k$b` v2 @kind this, `s3.k` v3 @kind object) @signature `Ls3/k$b;.b:(Ls3/k;)Ls3/k$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45ba8c.  v0:= 0I;
  #L45ba8e.  call temp:= `c`(v3) @signature `Ls3/k;.c:()I` @kind virtual;
  #L45ba94.  v1:= temp;
  #L45ba96.  if v0 >= v1 then goto L45baae;
  #L45ba9a.  call temp:= `b`(v3, v0) @signature `Ls3/k;.b:(I)I` @kind virtual;
  #L45baa0.  v1:= temp;
  #L45baa2.  call temp:= `a`(v2, v1) @signature `Ls3/k$b;.a:(I)Ls3/k$b;` @kind virtual;
  #L45baa8.  v0:= v0 + 1;
  #L45baac.  goto L45ba8e;
  #L45baae.  return v2 @kind object;
}
procedure `s3.k$b` `c`(`s3.k$b` v3 @kind this, `int`[] v4 @kind object) @signature `Ls3/k$b;.c:([I)Ls3/k$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45ba60.  v0:= length @variable v4;
  #L45ba62.  v1:= 0I;
  #L45ba64.  if v1 >= v0 then goto L45ba78;
  #L45ba68.  v2:= v4[v1];
  #L45ba6c.  call temp:= `a`(v3, v2) @signature `Ls3/k$b;.a:(I)Ls3/k$b;` @kind virtual;
  #L45ba72.  v1:= v1 + 1;
  #L45ba76.  goto L45ba64;
  #L45ba78.  return v3 @kind object;
}
procedure `s3.k$b` `d`(`s3.k$b` v0 @kind this, `int` v1 , `boolean` v2 ) @signature `Ls3/k$b;.d:(IZ)Ls3/k$b;` @AccessFlag PUBLIC {
    temp;

  #L45bac0.  if v2 == 0 then goto L45bace;
  #L45bac4.  call temp:= `a`(v0, v1) @signature `Ls3/k$b;.a:(I)Ls3/k$b;` @kind virtual;
  #L45baca.  v1:= temp @kind object;
  #L45bacc.  return v1 @kind object;
  #L45bace.  return v0 @kind object;
}
procedure `s3.k` `e`(`s3.k$b` v3 @kind this) @signature `Ls3/k$b;.e:()Ls3/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45ba00.  v0:= v3.`s3.k$b.b` @type ^`boolean` @kind boolean;
  #L45ba04.  v1:= 1I;
  #L45ba06.  v0:= v0 ^~ v1 @kind int;
  #L45ba08.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L45ba0e.  v3.`s3.k$b.b` @type ^`boolean` := v1 @kind boolean;
  #L45ba12.  v0:= new `s3.k`;
  #L45ba16.  v1:= v3.`s3.k$b.a` @type ^`android.util.SparseBooleanArray` @kind object;
  #L45ba1a.  v2:= 0I;
  #L45ba1c.  call `<init>`(v0, v1, v2) @signature `Ls3/k;.<init>:(Landroid/util/SparseBooleanArray;Ls3/k$a;)V` @kind direct;
  #L45ba22.  return v0 @kind object;
}
