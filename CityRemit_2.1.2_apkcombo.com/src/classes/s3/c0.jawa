record `s3.c0` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.Object` `@@s3.c0.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object` `@@s3.c0.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@s3.c0.c` @AccessFlag PRIVATE_STATIC;
global `long` `@@s3.c0.d` @AccessFlag PRIVATE_STATIC;
global `java.lang.String` `@@s3.c0.e` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Ls3/c0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4608bc.  v0:= new `java.lang.Object`;
  #L4608c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4608c6.  `@@s3.c0.a` @type ^`java.lang.Object` := v0 @kind object;
  #L4608ca.  v0:= new `java.lang.Object`;
  #L4608ce.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4608d4.  `@@s3.c0.b` @type ^`java.lang.Object` := v0 @kind object;
  #L4608d8.  return @kind void;
}
procedure `java.lang.Object` `a`() @signature `Ls3/c0;.a:()Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L4605d0.  v0:= `@@s3.c0.a` @type ^`java.lang.Object` @kind object;
  #L4605d4.  return v0 @kind object;
}
procedure `java.lang.Object` `b`() @signature `Ls3/c0;.b:()Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L4605e8.  v0:= `@@s3.c0.b` @type ^`java.lang.Object` @kind object;
  #L4605ec.  return v0 @kind object;
}
procedure `boolean` `c`() @signature `Ls3/c0;.c:()Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L460570.  v0:= `@@s3.c0.c` @type ^`boolean` @kind boolean;
  #L460574.  return v0;
}
procedure `boolean` `d`(`boolean` v0 ) @signature `Ls3/c0;.d:(Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L460588.  `@@s3.c0.c` @type ^`boolean` := v0 @kind boolean;
  #L46058c.  return v0;
}
procedure `long` `e`() @signature `Ls3/c0;.e:()J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L460630.  call temp:= `l`() @signature `Ls3/c0;.l:()J` @kind static;
  #L460636.  v0:= temp @kind wide;
  #L460638.  return v0 @kind wide;
}
procedure `long` `f`(`long` v0 ) @signature `Ls3/c0;.f:(J)J` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L46064c.  `@@s3.c0.d` @type ^`long` := v0 @kind wide;
  #L460650.  return v0 @kind wide;
}
procedure `void` `g`(`byte` v1 , `byte` v2 , `int` v3 , `long` v4 ) @signature `Ls3/c0;.g:(BBIJ)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4608ec.  v0:= 3I;
  #L4608ee.  if v1 == v0 then goto L460986;
  #L4608f2.  v1:= 4I;
  #L4608f4.  if v2 == v1 then goto L46092e;
  #L4608f8.  v1:= 5I;
  #L4608fa.  if v2 != v1 then goto L460900;
  #L4608fe.  goto L46092e;
  #L460900.  v1:= new `java.io.IOException`;
  #L460904.  v3:= new `java.lang.StringBuilder`;
  #L460908.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46090e.  v4:= "SNTP: Untrusted mode: " @kind object;
  #L460912.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460918.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L46091e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L460924.  v2:= temp @kind object;
  #L460926.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46092c.  throw v1;
  #L46092e.  if v3 == 0 then goto L460958;
  #L460932.  v1:= 15I;
  #L460936.  if v3 > v1 then goto L460958;
  #L46093a.  v1:= 0L;
  #L46093e.  v3:= lcmp(v4, v1);
  #L460942.  if v3 == 0 then goto L460948;
  #L460946.  return @kind void;
  #L460948.  v1:= new `java.io.IOException`;
  #L46094c.  v2:= "SNTP: Zero transmitTime" @kind object;
  #L460950.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L460956.  throw v1;
  #L460958.  v1:= new `java.io.IOException`;
  #L46095c.  v2:= new `java.lang.StringBuilder`;
  #L460960.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L460966.  v4:= "SNTP: Untrusted stratum: " @kind object;
  #L46096a.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L460970.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L460976.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46097c.  v2:= temp @kind object;
  #L46097e.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L460984.  throw v1;
  #L460986.  v1:= new `java.io.IOException`;
  #L46098a.  v2:= "SNTP: Unsynchronized server" @kind object;
  #L46098e.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L460994.  throw v1;
}
procedure `long` `h`() @signature `Ls3/c0;.h:()J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L460664.  v0:= `@@s3.c0.b` @type ^`java.lang.Object` @kind object;
  #L460668.  @monitorenter v0
  #L46066a.  v1:= `@@s3.c0.c` @type ^`boolean` @kind boolean;
  #L46066e.  if v1 == 0 then goto L460678;
  #L460672.  v1:= `@@s3.c0.d` @type ^`long` @kind wide;
  #L460676.  goto L460682;
  #L460678.  v1:= -4.9E-324D;
  #L460682.  @monitorexit v0
  #L460684.  return v1 @kind wide;
  #L460686.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L460688.  @monitorexit v0
  #L46068a.  throw v1;
  catch `java.lang.Throwable` @[L46066a..L46068a] goto L460686;
}
procedure `java.lang.String` `i`() @signature `Ls3/c0;.i:()Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L460600.  v0:= `@@s3.c0.b` @type ^`java.lang.Object` @kind object;
  #L460604.  @monitorenter v0
  #L460606.  v1:= `@@s3.c0.e` @type ^`java.lang.String` @kind object;
  #L46060a.  @monitorexit v0
  #L46060c.  return v1 @kind object;
  #L46060e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L460610.  @monitorexit v0
  #L460612.  throw v1;
  catch `java.lang.Throwable` @[L460606..L460612] goto L46060e;
}
procedure `void` `j`(`r3.h0` v2 @kind object, `s3.c0$b` v3 @kind object) @signature `Ls3/c0;.j:(Lr3/h0;Ls3/c0$b;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4609a8.  call temp:= `k`() @signature `Ls3/c0;.k:()Z` @kind static;
  #L4609ae.  v0:= temp;
  #L4609b0.  if v0 == 0 then goto L4609c0;
  #L4609b4.  if v3 == 0 then goto L4609be;
  #L4609b8.  call `a`(v3) @signature `Ls3/c0$b;.a:()V` @kind interface;
  #L4609be.  return @kind void;
  #L4609c0.  if v2 != 0 then goto L4609d2;
  #L4609c4.  v2:= new `r3.h0`;
  #L4609c8.  v0:= "SntpClient" @kind object;
  #L4609cc.  call `<init>`(v2, v0) @signature `Lr3/h0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4609d2.  v0:= new `s3.c0$d`;
  #L4609d6.  v1:= 0I;
  #L4609d8.  call `<init>`(v0, v1) @signature `Ls3/c0$d;.<init>:(Ls3/c0$a;)V` @kind direct;
  #L4609de.  v1:= new `s3.c0$c`;
  #L4609e2.  call `<init>`(v1, v3) @signature `Ls3/c0$c;.<init>:(Ls3/c0$b;)V` @kind direct;
  #L4609e8.  v3:= 1I;
  #L4609ea.  call temp:= `n`(v2, v0, v1, v3) @signature `Lr3/h0;.n:(Lr3/h0$e;Lr3/h0$b;I)J` @kind virtual;
  #L4609f0.  return @kind void;
}
procedure `boolean` `k`() @signature `Ls3/c0;.k:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4605a0.  v0:= `@@s3.c0.b` @type ^`java.lang.Object` @kind object;
  #L4605a4.  @monitorenter v0
  #L4605a6.  v1:= `@@s3.c0.c` @type ^`boolean` @kind boolean;
  #L4605aa.  @monitorexit v0
  #L4605ac.  return v1;
  #L4605ae.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4605b0.  @monitorexit v0
  #L4605b2.  throw v1;
  catch `java.lang.Throwable` @[L4605a6..L4605b2] goto L4605ae;
}
procedure `long` `l`() @signature `Ls3/c0;.l:()J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L4606a8.  call temp:= `i`() @signature `Ls3/c0;.i:()Ljava/lang/String;` @kind static;
  #L4606ae.  v0:= temp @kind object;
  #L4606b0.  call temp:= `getByName`(v0) @signature `Ljava/net/InetAddress;.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;` @kind static;
  #L4606b6.  v0:= temp @kind object;
  #L4606b8.  v1:= new `java.net.DatagramSocket`;
  #L4606bc.  call `<init>`(v1) @signature `Ljava/net/DatagramSocket;.<init>:()V` @kind direct;
  #L4606c2.  v2:= 10000I;
  #L4606c6.  call `setSoTimeout`(v1, v2) @signature `Ljava/net/DatagramSocket;.setSoTimeout:(I)V` @kind virtual;
  #L4606cc.  v2:= 48I;
  #L4606d0.  v3:= new `byte`[v2];
  #L4606d4.  v4:= new `java.net.DatagramPacket`;
  #L4606d8.  v5:= 123I;
  #L4606dc.  call `<init>`(v4, v3, v2, v0, v5) @signature `Ljava/net/DatagramPacket;.<init>:([BILjava/net/InetAddress;I)V` @kind direct;
  #L4606e2.  v0:= 27I;
  #L4606e6.  v5:= 0I;
  #L4606e8.  v3[v5]:= v0 @kind byte;
  #L4606ec.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L4606f2.  v6:= temp @kind wide;
  #L4606f4.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L4606fa.  v8:= temp @kind wide;
  #L4606fc.  v0:= 40I;
  #L460700.  call `o`(v3, v0, v6) @signature `Ls3/c0;.o:([BIJ)V` @kind static;
  #L460706.  call `send`(v1, v4) @signature `Ljava/net/DatagramSocket;.send:(Ljava/net/DatagramPacket;)V` @kind virtual;
  #L46070c.  v4:= new `java.net.DatagramPacket`;
  #L460710.  call `<init>`(v4, v3, v2) @signature `Ljava/net/DatagramPacket;.<init>:([BI)V` @kind direct;
  #L460716.  call `receive`(v1, v4) @signature `Ljava/net/DatagramSocket;.receive:(Ljava/net/DatagramPacket;)V` @kind virtual;
  #L46071c.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L460722.  v10:= temp @kind wide;
  #L460724.  v8:= v10 - v8 @kind long;
  #L460728.  v6:= v6 + v8 @kind long;
  #L46072a.  v2:= v3[v5] @kind byte;
  #L46072e.  v2:= v2 ^> 6;
  #L460732.  v2:= v2 ^& 3;
  #L460736.  v2:= (`byte`) v2 @kind i2b;
  #L460738.  v4:= v3[v5] @kind byte;
  #L46073c.  v4:= v4 ^& 7;
  #L460740.  v4:= (`byte`) v4 @kind i2b;
  #L460742.  v5:= 1I;
  #L460744.  v5:= v3[v5] @kind byte;
  #L460748.  v5:= v5 ^& 255;
  #L46074c.  v8:= 24I;
  #L460750.  call temp:= `n`(v3, v8) @signature `Ls3/c0;.n:([BI)J` @kind static;
  #L460756.  v8:= temp @kind wide;
  #L460758.  v12:= 32I;
  #L46075c.  call temp:= `n`(v3, v12) @signature `Ls3/c0;.n:([BI)J` @kind static;
  #L460762.  v12:= temp @kind wide;
  #L460764.  call temp:= `n`(v3, v0) @signature `Ls3/c0;.n:([BI)J` @kind static;
  #L46076a.  v14:= temp @kind wide;
  #L46076c.  call `g`(v2, v4, v5, v14) @signature `Ls3/c0;.g:(BBIJ)V` @kind static;
  #L460772.  v12:= v12 - v8 @kind long;
  #L460774.  v14:= v14 - v6 @kind long;
  #L460776.  v12:= v12 + v14 @kind long;
  #L460778.  v2:= 2L;
  #L46077c.  v12:= v12 / v2 @kind long;
  #L46077e.  v6:= v6 + v12 @kind long;
  #L460780.  v6:= v6 - v10 @kind long;
  #L460782.  call `close`(v1) @signature `Ljava/net/DatagramSocket;.close:()V` @kind virtual;
  #L460788.  return v6 @kind wide;
  #L46078a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46078c.  call `close`(v1) @signature `Ljava/net/DatagramSocket;.close:()V` @kind virtual;
  #L460792.  goto L46079c;
  #L460794.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L460796.  call `addSuppressed`(v0, v1) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L46079c.  throw v0;
  catch `java.lang.Throwable` @[L4606c6..L46077e] goto L46078a;
  catch `java.lang.Throwable` @[L46078c..L460792] goto L460794;
}
procedure `long` `m`(`byte`[] v5 @kind object, `int` v6 ) @signature `Ls3/c0;.m:([BI)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4607c8.  v0:= v5[v6] @kind byte;
  #L4607cc.  v1:= v6 + 1;
  #L4607d0.  v1:= v5[v1] @kind byte;
  #L4607d4.  v2:= v6 + 2;
  #L4607d8.  v2:= v5[v2] @kind byte;
  #L4607dc.  v6:= v6 + 3;
  #L4607e0.  v5:= v5[v6] @kind byte;
  #L4607e4.  v6:= v0 ^& 128;
  #L4607e8.  v3:= 128I;
  #L4607ec.  if v6 != v3 then goto L4607f8;
  #L4607f0.  v6:= v0 ^& 127;
  #L4607f4.  v0:= v6 + 128;
  #L4607f8.  v6:= v1 ^& 128;
  #L4607fc.  if v6 != v3 then goto L460808;
  #L460800.  v6:= v1 ^& 127;
  #L460804.  v1:= v6 + 128;
  #L460808.  v6:= v2 ^& 128;
  #L46080c.  if v6 != v3 then goto L460818;
  #L460810.  v6:= v2 ^& 127;
  #L460814.  v2:= v6 + 128;
  #L460818.  v6:= v5 ^& 128;
  #L46081c.  if v6 != v3 then goto L460826;
  #L460820.  v5:= v5 ^& 127;
  #L460824.  v5:= v5 + v3 @kind int;
  #L460826.  v3:= (`long`) v0 @kind i2l;
  #L460828.  v6:= 24I;
  #L46082c.  v3:= v3 ^< v6 @kind long;
  #L46082e.  v0:= (`long`) v1 @kind i2l;
  #L460830.  v6:= 16I;
  #L460834.  v0:= v0 ^< v6 @kind long;
  #L460836.  v3:= v3 + v0 @kind long;
  #L460838.  v0:= (`long`) v2 @kind i2l;
  #L46083a.  v6:= 8I;
  #L46083e.  v0:= v0 ^< v6 @kind long;
  #L460840.  v3:= v3 + v0 @kind long;
  #L460842.  v5:= (`long`) v5 @kind i2l;
  #L460844.  v3:= v3 + v5 @kind long;
  #L460846.  return v3 @kind wide;
}
procedure `long` `n`(`byte`[] v5 @kind object, `int` v6 ) @signature `Ls3/c0;.n:([BI)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L460858.  call temp:= `m`(v5, v6) @signature `Ls3/c0;.m:([BI)J` @kind static;
  #L46085e.  v0:= temp @kind wide;
  #L460860.  v6:= v6 + 4;
  #L460864.  call temp:= `m`(v5, v6) @signature `Ls3/c0;.m:([BI)J` @kind static;
  #L46086a.  v5:= temp @kind wide;
  #L46086c.  v2:= 0L;
  #L460870.  v4:= lcmp(v0, v2);
  #L460874.  if v4 != 0 then goto L460882;
  #L460878.  v4:= lcmp(v5, v2);
  #L46087c.  if v4 != 0 then goto L460882;
  #L460880.  return v2 @kind wide;
  #L460882.  v2:= 2208988800L;
  #L46088c.  v0:= v0 - v2 @kind long;
  #L46088e.  v2:= 1000L;
  #L460892.  v0:= v0 * v2 @kind long;
  #L460896.  v5:= v5 * v2 @kind long;
  #L46089a.  v2:= 4294967296L;
  #L4608a4.  v5:= v5 / v2 @kind long;
  #L4608a6.  v0:= v0 + v5 @kind long;
  #L4608a8.  return v0 @kind wide;
}
procedure `void` `o`(`byte`[] v11 @kind object, `int` v12 , `long` v13 ) @signature `Ls3/c0;.o:([BIJ)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L460a04.  v0:= 0I;
  #L460a06.  v1:= 0L;
  #L460a0a.  v3:= lcmp(v13, v1);
  #L460a0e.  if v3 != 0 then goto L460a1e;
  #L460a12.  v13:= v12 + 8;
  #L460a16.  call `fill`(v11, v12, v13, v0) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #L460a1c.  return @kind void;
  #L460a1e.  v1:= 1000L;
  #L460a22.  v3:= v13 / v1 @kind long;
  #L460a26.  v5:= v3 * v1 @kind long;
  #L460a2a.  v13:= v13 - v5 @kind long;
  #L460a2c.  v5:= 2208988800L;
  #L460a36.  v3:= v3 + v5 @kind long;
  #L460a38.  v5:= v12 + 1;
  #L460a3c.  v6:= 24I;
  #L460a40.  v7:= v3 ^> v6 @kind long;
  #L460a44.  v8:= (`int`) v7 @kind l2i;
  #L460a46.  v7:= (`byte`) v8 @kind i2b;
  #L460a48.  v11[v12]:= v7 @kind byte;
  #L460a4c.  v12:= v5 + 1;
  #L460a50.  v7:= 16I;
  #L460a54.  v8:= v3 ^> v7 @kind long;
  #L460a58.  v9:= (`int`) v8 @kind l2i;
  #L460a5a.  v8:= (`byte`) v9 @kind i2b;
  #L460a5c.  v11[v5]:= v8 @kind byte;
  #L460a60.  v5:= v12 + 1;
  #L460a64.  v8:= 8I;
  #L460a68.  v9:= v3 ^> v8 @kind long;
  #L460a6c.  v10:= (`int`) v9 @kind l2i;
  #L460a6e.  v9:= (`byte`) v10 @kind i2b;
  #L460a70.  v11[v12]:= v9 @kind byte;
  #L460a74.  v12:= v5 + 1;
  #L460a78.  v3:= v3 ^> v0 @kind long;
  #L460a7a.  v0:= (`int`) v3 @kind l2i;
  #L460a7c.  v0:= (`byte`) v0 @kind i2b;
  #L460a7e.  v11[v5]:= v0 @kind byte;
  #L460a82.  v3:= 4294967296L;
  #L460a8c.  v13:= v13 * v3 @kind long;
  #L460a90.  v13:= v13 / v1 @kind long;
  #L460a92.  v0:= v12 + 1;
  #L460a96.  v1:= v13 ^> v6 @kind long;
  #L460a9a.  v2:= (`int`) v1 @kind l2i;
  #L460a9c.  v1:= (`byte`) v2 @kind i2b;
  #L460a9e.  v11[v12]:= v1 @kind byte;
  #L460aa2.  v12:= v0 + 1;
  #L460aa6.  v1:= v13 ^> v7 @kind long;
  #L460aaa.  v2:= (`int`) v1 @kind l2i;
  #L460aac.  v1:= (`byte`) v2 @kind i2b;
  #L460aae.  v11[v0]:= v1 @kind byte;
  #L460ab2.  v0:= v12 + 1;
  #L460ab6.  v13:= v13 ^> v8 @kind long;
  #L460ab8.  v14:= (`int`) v13 @kind l2i;
  #L460aba.  v13:= (`byte`) v14 @kind i2b;
  #L460abc.  v11[v12]:= v13 @kind byte;
  #L460ac0.  call temp:= `random`() @signature `Ljava/lang/Math;.random:()D` @kind static;
  #L460ac6.  v12:= temp @kind wide;
  #L460ac8.  v1:= 255.0D;
  #L460ad2.  v12:= v12 * v1 @kind double;
  #L460ad6.  v12:= (`int`) v12 @kind d2i;
  #L460ad8.  v12:= (`byte`) v12 @kind i2b;
  #L460ada.  v11[v0]:= v12 @kind byte;
  #L460ade.  return @kind void;
}
