record `s3.h` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Iterable` @kind interface {
  `java.lang.Object` `s3.h.o` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `s3.h.p` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `s3.h.q` @AccessFlag PRIVATE;
  `java.util.List` `s3.h.r` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`s3.h` v1 @kind this) @signature `Ls3/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L45aac8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45aace.  v0:= new `java.lang.Object`;
  #L45aad2.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45aad8.  v1.`s3.h.o` @type ^`java.lang.Object` := v0 @kind object;
  #L45aadc.  v0:= new `java.util.HashMap`;
  #L45aae0.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L45aae6.  v1.`s3.h.p` @type ^`java.util.Map` := v0 @kind object;
  #L45aaea.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L45aaf0.  v0:= temp @kind object;
  #L45aaf2.  v1.`s3.h.q` @type ^`java.util.Set` := v0 @kind object;
  #L45aaf6.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L45aafc.  v0:= temp @kind object;
  #L45aafe.  v1.`s3.h.r` @type ^`java.util.List` := v0 @kind object;
  #L45ab02.  return @kind void;
}
procedure `void` `b`(`s3.h` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ls3/h;.b:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45ab14.  v0:= v4.`s3.h.o` @type ^`java.lang.Object` @kind object;
  #L45ab18.  @monitorenter v0
  #L45ab1a.  v1:= new `java.util.ArrayList`;
  #L45ab1e.  v2:= v4.`s3.h.r` @type ^`java.util.List` @kind object;
  #L45ab22.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L45ab28.  call temp:= `add`(v1, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45ab2e.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L45ab34.  v1:= temp @kind object;
  #L45ab36.  v4.`s3.h.r` @type ^`java.util.List` := v1 @kind object;
  #L45ab3a.  v1:= v4.`s3.h.p` @type ^`java.util.Map` @kind object;
  #L45ab3e.  call temp:= `get`(v1, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45ab44.  v1:= temp @kind object;
  #L45ab46.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L45ab4a.  if v1 != 0 then goto L45ab6e;
  #L45ab4e.  v2:= new `java.util.HashSet`;
  #L45ab52.  v3:= v4.`s3.h.q` @type ^`java.util.Set` @kind object;
  #L45ab56.  call `<init>`(v2, v3) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L45ab5c.  call temp:= `add`(v2, v5) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L45ab62.  call temp:= `unmodifiableSet`(v2) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L45ab68.  v2:= temp @kind object;
  #L45ab6a.  v4.`s3.h.q` @type ^`java.util.Set` := v2 @kind object;
  #L45ab6e.  v2:= v4.`s3.h.p` @type ^`java.util.Map` @kind object;
  #L45ab72.  v3:= 1I;
  #L45ab74.  if v1 == 0 then goto L45ab82;
  #L45ab78.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L45ab7e.  v1:= temp;
  #L45ab80.  v3:= v3 + v1 @kind int;
  #L45ab82.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45ab88.  v1:= temp @kind object;
  #L45ab8a.  call temp:= `put`(v2, v5, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45ab90.  @monitorexit v0
  #L45ab92.  return @kind void;
  #L45ab94.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45ab96.  @monitorexit v0
  #L45ab98.  throw v5;
  catch `java.lang.Throwable` @[L45ab1a..L45ab98] goto L45ab94;
}
procedure `int` `f`(`s3.h` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Ls3/h;.f:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45aa08.  v0:= v2.`s3.h.o` @type ^`java.lang.Object` @kind object;
  #L45aa0c.  @monitorenter v0
  #L45aa0e.  v1:= v2.`s3.h.p` @type ^`java.util.Map` @kind object;
  #L45aa12.  call temp:= `containsKey`(v1, v3) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L45aa18.  v1:= temp;
  #L45aa1a.  if v1 == 0 then goto L45aa38;
  #L45aa1e.  v1:= v2.`s3.h.p` @type ^`java.util.Map` @kind object;
  #L45aa22.  call temp:= `get`(v1, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45aa28.  v3:= temp @kind object;
  #L45aa2a.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L45aa2e.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L45aa34.  v3:= temp;
  #L45aa36.  goto L45aa3a;
  #L45aa38.  v3:= 0I;
  #L45aa3a.  @monitorexit v0
  #L45aa3c.  return v3;
  #L45aa3e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45aa40.  @monitorexit v0
  #L45aa42.  throw v3;
  catch `java.lang.Throwable` @[L45aa0e..L45aa42] goto L45aa3e;
}
procedure `void` `h`(`s3.h` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ls3/h;.h:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45abb8.  v0:= v4.`s3.h.o` @type ^`java.lang.Object` @kind object;
  #L45abbc.  @monitorenter v0
  #L45abbe.  v1:= v4.`s3.h.p` @type ^`java.util.Map` @kind object;
  #L45abc2.  call temp:= `get`(v1, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45abc8.  v1:= temp @kind object;
  #L45abca.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L45abce.  if v1 != 0 then goto L45abd6;
  #L45abd2.  @monitorexit v0
  #L45abd4.  return @kind void;
  #L45abd6.  v2:= new `java.util.ArrayList`;
  #L45abda.  v3:= v4.`s3.h.r` @type ^`java.util.List` @kind object;
  #L45abde.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L45abe4.  call temp:= `remove`(v2, v5) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L45abea.  call temp:= `unmodifiableList`(v2) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L45abf0.  v2:= temp @kind object;
  #L45abf2.  v4.`s3.h.r` @type ^`java.util.List` := v2 @kind object;
  #L45abf6.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L45abfc.  v2:= temp;
  #L45abfe.  v3:= 1I;
  #L45ac00.  if v2 != v3 then goto L45ac30;
  #L45ac04.  v1:= v4.`s3.h.p` @type ^`java.util.Map` @kind object;
  #L45ac08.  call temp:= `remove`(v1, v5) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45ac0e.  v1:= new `java.util.HashSet`;
  #L45ac12.  v2:= v4.`s3.h.q` @type ^`java.util.Set` @kind object;
  #L45ac16.  call `<init>`(v1, v2) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L45ac1c.  call temp:= `remove`(v1, v5) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L45ac22.  call temp:= `unmodifiableSet`(v1) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L45ac28.  v5:= temp @kind object;
  #L45ac2a.  v4.`s3.h.q` @type ^`java.util.Set` := v5 @kind object;
  #L45ac2e.  goto L45ac4c;
  #L45ac30.  v2:= v4.`s3.h.p` @type ^`java.util.Map` @kind object;
  #L45ac34.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L45ac3a.  v1:= temp;
  #L45ac3c.  v1:= v1 - v3 @kind int;
  #L45ac3e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L45ac44.  v1:= temp @kind object;
  #L45ac46.  call temp:= `put`(v2, v5, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L45ac4c.  @monitorexit v0
  #L45ac4e.  return @kind void;
  #L45ac50.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45ac52.  @monitorexit v0
  #L45ac54.  throw v5;
  catch `java.lang.Throwable` @[L45abbe..L45ac54] goto L45ac50;
}
procedure `java.util.Iterator` `iterator`(`s3.h` v2 @kind this) @signature `Ls3/h;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45aa60.  v0:= v2.`s3.h.o` @type ^`java.lang.Object` @kind object;
  #L45aa64.  @monitorenter v0
  #L45aa66.  v1:= v2.`s3.h.r` @type ^`java.util.List` @kind object;
  #L45aa6a.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L45aa70.  v1:= temp @kind object;
  #L45aa72.  @monitorexit v0
  #L45aa74.  return v1 @kind object;
  #L45aa76.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45aa78.  @monitorexit v0
  #L45aa7a.  throw v1;
  catch `java.lang.Throwable` @[L45aa66..L45aa7a] goto L45aa76;
}
procedure `java.util.Set` `r`(`s3.h` v2 @kind this) @signature `Ls3/h;.r:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45aa98.  v0:= v2.`s3.h.o` @type ^`java.lang.Object` @kind object;
  #L45aa9c.  @monitorenter v0
  #L45aa9e.  v1:= v2.`s3.h.q` @type ^`java.util.Set` @kind object;
  #L45aaa2.  @monitorexit v0
  #L45aaa4.  return v1 @kind object;
  #L45aaa6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45aaa8.  @monitorexit v0
  #L45aaaa.  throw v1;
  catch `java.lang.Throwable` @[L45aa9e..L45aaaa] goto L45aaa6;
}
