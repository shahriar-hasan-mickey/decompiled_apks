record `s3.o` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `java.util.concurrent.CopyOnWriteArraySet` `s3.o.o` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `int` `s3.o.p` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `s3.p$a` `s3.o.q` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`s3.o` v0 @kind this, `java.util.concurrent.CopyOnWriteArraySet` v1 @kind object, `int` v2 , `s3.p$a` v3 @kind object) @signature `Ls3/o;.<init>:(Ljava/util/concurrent/CopyOnWriteArraySet;ILs3/p$a;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L45be94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45be9a.  v0.`s3.o.o` @type ^`java.util.concurrent.CopyOnWriteArraySet` := v1 @kind object;
  #L45be9e.  v0.`s3.o.p` @type ^`int` := v2;
  #L45bea2.  v0.`s3.o.q` @type ^`s3.p$a` := v3 @kind object;
  #L45bea6.  return @kind void;
}
procedure `void` `run`(`s3.o` v3 @kind this) @signature `Ls3/o;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L45beb8.  v0:= v3.`s3.o.o` @type ^`java.util.concurrent.CopyOnWriteArraySet` @kind object;
  #L45bebc.  v1:= v3.`s3.o.p` @type ^`int`;
  #L45bec0.  v2:= v3.`s3.o.q` @type ^`s3.p$a` @kind object;
  #L45bec4.  call `a`(v0, v1, v2) @signature `Ls3/p;.a:(Ljava/util/concurrent/CopyOnWriteArraySet;ILs3/p$a;)V` @kind static;
  #L45beca.  return @kind void;
}
