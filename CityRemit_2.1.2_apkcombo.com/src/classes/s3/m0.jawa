record `s3.m0` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`org.xmlpull.v1.XmlPullParser` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Ls3/m0;.a:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L464990.  call temp:= `getAttributeCount`(v3) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeCount:()I` @kind interface;
  #L464996.  v0:= temp;
  #L464998.  v1:= 0I;
  #L46499a.  if v1 >= v0 then goto L4649c2;
  #L46499e.  call temp:= `getAttributeName`(v3, v1) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeName:(I)Ljava/lang/String;` @kind interface;
  #L4649a4.  v2:= temp @kind object;
  #L4649a6.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4649ac.  v2:= temp;
  #L4649ae.  if v2 == 0 then goto L4649bc;
  #L4649b2.  call temp:= `getAttributeValue`(v3, v1) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeValue:(I)Ljava/lang/String;` @kind interface;
  #L4649b8.  v3:= temp @kind object;
  #L4649ba.  return v3 @kind object;
  #L4649bc.  v1:= v1 + 1;
  #L4649c0.  goto L46499a;
  #L4649c2.  v3:= 0I;
  #L4649c4.  return v3 @kind object;
}
procedure `java.lang.String` `b`(`org.xmlpull.v1.XmlPullParser` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Ls3/m0;.b:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4649d8.  call temp:= `getAttributeCount`(v3) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeCount:()I` @kind interface;
  #L4649de.  v0:= temp;
  #L4649e0.  v1:= 0I;
  #L4649e2.  if v1 >= v0 then goto L464a12;
  #L4649e6.  call temp:= `getAttributeName`(v3, v1) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeName:(I)Ljava/lang/String;` @kind interface;
  #L4649ec.  v2:= temp @kind object;
  #L4649ee.  call temp:= `h`(v2) @signature `Ls3/m0;.h:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4649f4.  v2:= temp @kind object;
  #L4649f6.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4649fc.  v2:= temp;
  #L4649fe.  if v2 == 0 then goto L464a0c;
  #L464a02.  call temp:= `getAttributeValue`(v3, v1) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeValue:(I)Ljava/lang/String;` @kind interface;
  #L464a08.  v3:= temp @kind object;
  #L464a0a.  return v3 @kind object;
  #L464a0c.  v1:= v1 + 1;
  #L464a10.  goto L4649e2;
  #L464a12.  v3:= 0I;
  #L464a14.  return v3 @kind object;
}
procedure `boolean` `c`(`org.xmlpull.v1.XmlPullParser` v1 @kind object) @signature `Ls3/m0;.c:(Lorg/xmlpull/v1/XmlPullParser;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L464890.  call temp:= `getEventType`(v1) @signature `Lorg/xmlpull/v1/XmlPullParser;.getEventType:()I` @kind interface;
  #L464896.  v1:= temp;
  #L464898.  v0:= 3I;
  #L46489a.  if v1 != v0 then goto L4648a2;
  #L46489e.  v1:= 1I;
  #L4648a0.  goto L4648a4;
  #L4648a2.  v1:= 0I;
  #L4648a4.  return v1;
}
procedure `boolean` `d`(`org.xmlpull.v1.XmlPullParser` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Ls3/m0;.d:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4648b8.  call temp:= `c`(v1) @signature `Ls3/m0;.c:(Lorg/xmlpull/v1/XmlPullParser;)Z` @kind static;
  #L4648be.  v0:= temp;
  #L4648c0.  if v0 == 0 then goto L4648dc;
  #L4648c4.  call temp:= `getName`(v1) @signature `Lorg/xmlpull/v1/XmlPullParser;.getName:()Ljava/lang/String;` @kind interface;
  #L4648ca.  v1:= temp @kind object;
  #L4648cc.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4648d2.  v1:= temp;
  #L4648d4.  if v1 == 0 then goto L4648dc;
  #L4648d8.  v1:= 1I;
  #L4648da.  goto L4648de;
  #L4648dc.  v1:= 0I;
  #L4648de.  return v1;
}
procedure `boolean` `e`(`org.xmlpull.v1.XmlPullParser` v1 @kind object) @signature `Ls3/m0;.e:(Lorg/xmlpull/v1/XmlPullParser;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4648f0.  call temp:= `getEventType`(v1) @signature `Lorg/xmlpull/v1/XmlPullParser;.getEventType:()I` @kind interface;
  #L4648f6.  v1:= temp;
  #L4648f8.  v0:= 2I;
  #L4648fa.  if v1 != v0 then goto L464902;
  #L4648fe.  v1:= 1I;
  #L464900.  goto L464904;
  #L464902.  v1:= 0I;
  #L464904.  return v1;
}
procedure `boolean` `f`(`org.xmlpull.v1.XmlPullParser` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Ls3/m0;.f:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L464918.  call temp:= `e`(v1) @signature `Ls3/m0;.e:(Lorg/xmlpull/v1/XmlPullParser;)Z` @kind static;
  #L46491e.  v0:= temp;
  #L464920.  if v0 == 0 then goto L46493c;
  #L464924.  call temp:= `getName`(v1) @signature `Lorg/xmlpull/v1/XmlPullParser;.getName:()Ljava/lang/String;` @kind interface;
  #L46492a.  v1:= temp @kind object;
  #L46492c.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L464932.  v1:= temp;
  #L464934.  if v1 == 0 then goto L46493c;
  #L464938.  v1:= 1I;
  #L46493a.  goto L46493e;
  #L46493c.  v1:= 0I;
  #L46493e.  return v1;
}
procedure `boolean` `g`(`org.xmlpull.v1.XmlPullParser` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Ls3/m0;.g:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L464950.  call temp:= `e`(v1) @signature `Ls3/m0;.e:(Lorg/xmlpull/v1/XmlPullParser;)Z` @kind static;
  #L464956.  v0:= temp;
  #L464958.  if v0 == 0 then goto L46497c;
  #L46495c.  call temp:= `getName`(v1) @signature `Lorg/xmlpull/v1/XmlPullParser;.getName:()Ljava/lang/String;` @kind interface;
  #L464962.  v1:= temp @kind object;
  #L464964.  call temp:= `h`(v1) @signature `Ls3/m0;.h:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L46496a.  v1:= temp @kind object;
  #L46496c.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L464972.  v1:= temp;
  #L464974.  if v1 == 0 then goto L46497c;
  #L464978.  v1:= 1I;
  #L46497a.  goto L46497e;
  #L46497c.  v1:= 0I;
  #L46497e.  return v1;
}
procedure `java.lang.String` `h`(`java.lang.String` v2 @kind object) @signature `Ls3/m0;.h:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L464a28.  v0:= 58I;
  #L464a2c.  call temp:= `indexOf`(v2, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L464a32.  v0:= temp;
  #L464a34.  v1:= -1I;
  #L464a36.  if v0 != v1 then goto L464a3c;
  #L464a3a.  goto L464a48;
  #L464a3c.  v0:= v0 + 1;
  #L464a40.  call temp:= `substring`(v2, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L464a46.  v2:= temp @kind object;
  #L464a48.  return v2 @kind object;
}
