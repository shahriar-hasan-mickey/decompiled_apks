record `s3.x` @kind class @AccessFlag PUBLIC_FINAL {
  `android.os.Handler` `s3.x.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.CopyOnWriteArrayList` `s3.x.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `s3.x.c` @AccessFlag PRIVATE_FINAL;
  `int` `s3.x.d` @AccessFlag PRIVATE;
}
global `s3.x` `@@s3.x.e` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`s3.x` v3 @kind this, `android.content.Context` v4 @kind object) @signature `Ls3/x;.<init>:(Landroid/content/Context;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L45e9d8.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45e9de.  v0:= new `android.os.Handler`;
  #L45e9e2.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L45e9e8.  v1:= temp @kind object;
  #L45e9ea.  call `<init>`(v0, v1) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L45e9f0.  v3.`s3.x.a` @type ^`android.os.Handler` := v0 @kind object;
  #L45e9f4.  v0:= new `java.util.concurrent.CopyOnWriteArrayList`;
  #L45e9f8.  call `<init>`(v0) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:()V` @kind direct;
  #L45e9fe.  v3.`s3.x.b` @type ^`java.util.concurrent.CopyOnWriteArrayList` := v0 @kind object;
  #L45ea02.  v0:= new `java.lang.Object`;
  #L45ea06.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45ea0c.  v3.`s3.x.c` @type ^`java.lang.Object` := v0 @kind object;
  #L45ea10.  v0:= 0I;
  #L45ea12.  v3.`s3.x.d` @type ^`int` := v0;
  #L45ea16.  v0:= new `android.content.IntentFilter`;
  #L45ea1a.  call `<init>`(v0) @signature `Landroid/content/IntentFilter;.<init>:()V` @kind direct;
  #L45ea20.  v1:= "android.net.conn.CONNECTIVITY_CHANGE" @kind object;
  #L45ea24.  call `addAction`(v0, v1) @signature `Landroid/content/IntentFilter;.addAction:(Ljava/lang/String;)V` @kind virtual;
  #L45ea2a.  v1:= new `s3.x$d`;
  #L45ea2e.  v2:= 0I;
  #L45ea30.  call `<init>`(v1, v3, v2) @signature `Ls3/x$d;.<init>:(Ls3/x;Ls3/x$a;)V` @kind direct;
  #L45ea36.  call temp:= `registerReceiver`(v4, v1, v0) @signature `Landroid/content/Context;.registerReceiver:(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;` @kind virtual;
  #L45ea3c.  return @kind void;
}
procedure `void` `a`(`s3.x` v0 @kind object, `s3.x$c` v1 @kind object) @signature `Ls3/x;.a:(Ls3/x;Ls3/x$c;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L45e9c0.  call `h`(v0, v1) @signature `Ls3/x;.h:(Ls3/x$c;)V` @kind direct;
  #L45e9c6.  return @kind void;
}
procedure `int` `b`(`android.content.Context` v0 @kind object) @signature `Ls3/x;.b:(Landroid/content/Context;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L45e7f0.  call temp:= `g`(v0) @signature `Ls3/x;.g:(Landroid/content/Context;)I` @kind static;
  #L45e7f6.  v0:= temp;
  #L45e7f8.  return v0;
}
procedure `void` `c`(`s3.x` v0 @kind object, `int` v1 ) @signature `Ls3/x;.c:(Ls3/x;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L45ea50.  call `k`(v0, v1) @signature `Ls3/x;.k:(I)V` @kind direct;
  #L45ea56.  return @kind void;
}
procedure `s3.x` `d`(`android.content.Context` v2 @kind object) @signature `Ls3/x;.d:(Landroid/content/Context;)Ls3/x;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45e978.  v0:= constclass @type ^`s3.x` @kind object;
  #L45e97c.  @monitorenter v0
  #L45e97e.  v1:= `@@s3.x.e` @type ^`s3.x` @kind object;
  #L45e982.  if v1 != 0 then goto L45e994;
  #L45e986.  v1:= new `s3.x`;
  #L45e98a.  call `<init>`(v1, v2) @signature `Ls3/x;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L45e990.  `@@s3.x.e` @type ^`s3.x` := v1 @kind object;
  #L45e994.  v2:= `@@s3.x.e` @type ^`s3.x` @kind object;
  #L45e998.  @monitorexit v0
  #L45e99a.  return v2 @kind object;
  #L45e99c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45e99e.  @monitorexit v0
  #L45e9a0.  throw v2;
  catch `java.lang.Throwable` @[L45e97e..L45e998] goto L45e99c;
}
procedure `int` `e`(`android.net.NetworkInfo` v1 @kind object) @signature `Ls3/x;.e:(Landroid/net/NetworkInfo;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L45e80c.  call temp:= `getSubtype`(v1) @signature `Landroid/net/NetworkInfo;.getSubtype:()I` @kind virtual;
  #L45e812.  v1:= temp;
  #L45e814.  goto L45e844;
  #L45e81a.  v1:= 6I;
  #L45e81c.  return v1;
  #L45e81e.  v1:= `@@s3.l0.a` @type ^`int`;
  #L45e822.  v0:= 29I;
  #L45e826.  if v1 < v0 then goto L45e830;
  #L45e82a.  v1:= 9I;
  #L45e82e.  goto L45e832;
  #L45e830.  v1:= 0I;
  #L45e832.  return v1;
  #L45e834.  v1:= 2I;
  #L45e836.  return v1;
  #L45e838.  v1:= 5I;
  #L45e83a.  return v1;
  #L45e83c.  v1:= 4I;
  #L45e83e.  return v1;
  #L45e840.  v1:= 3I;
  #L45e842.  return v1;
  #L45e844.  switch v1
                  | 1 => goto L45e840
                  | 2 => goto L45e840
                  | 3 => goto L45e83c
                  | 4 => goto L45e83c
                  | 5 => goto L45e83c
                  | 6 => goto L45e83c
                  | 7 => goto L45e83c
                  | 8 => goto L45e83c
                  | 9 => goto L45e83c
                  | 10 => goto L45e83c
                  | 11 => goto L45e83c
                  | 12 => goto L45e83c
                  | 13 => goto L45e838
                  | 14 => goto L45e83c
                  | 15 => goto L45e83c
                  | 16 => goto L45e81a
                  | 17 => goto L45e83c
                  | 18 => goto L45e834
                  | 19 => goto L45e81a
                  | 20 => goto L45e81e
                  | else => goto L45e81a;
}
procedure `int` `g`(`android.content.Context` v2 @kind object) @signature `Ls3/x;.g:(Landroid/content/Context;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L45e8dc.  v0:= "connectivity" @kind object;
  #L45e8e0.  call temp:= `getSystemService`(v2, v0) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L45e8e6.  v2:= temp @kind object;
  #L45e8e8.  v2:= (`android.net.ConnectivityManager`) v2 @kind object;
  #L45e8ec.  v0:= 0I;
  #L45e8ee.  if v2 != 0 then goto L45e8f4;
  #L45e8f2.  return v0;
  #L45e8f4.  call temp:= `getActiveNetworkInfo`(v2) @signature `Landroid/net/ConnectivityManager;.getActiveNetworkInfo:()Landroid/net/NetworkInfo;` @kind virtual;
  #L45e8fa.  v2:= temp @kind object;
  #L45e8fc.  v0:= 1I;
  #L45e8fe.  if v2 == 0 then goto L45e954;
  #L45e902.  call temp:= `isConnected`(v2) @signature `Landroid/net/NetworkInfo;.isConnected:()Z` @kind virtual;
  #L45e908.  v1:= temp;
  #L45e90a.  if v1 != 0 then goto L45e910;
  #L45e90e.  goto L45e954;
  #L45e910.  call temp:= `getType`(v2) @signature `Landroid/net/NetworkInfo;.getType:()I` @kind virtual;
  #L45e916.  v1:= temp;
  #L45e918.  if v1 == 0 then goto L45e94a;
  #L45e91c.  if v1 == v0 then goto L45e946;
  #L45e920.  v0:= 4I;
  #L45e922.  if v1 == v0 then goto L45e94a;
  #L45e926.  v0:= 5I;
  #L45e928.  if v1 == v0 then goto L45e94a;
  #L45e92c.  v2:= 6I;
  #L45e92e.  if v1 == v2 then goto L45e944;
  #L45e932.  v2:= 9I;
  #L45e936.  if v1 == v2 then goto L45e940;
  #L45e93a.  v2:= 8I;
  #L45e93e.  return v2;
  #L45e940.  v2:= 7I;
  #L45e942.  return v2;
  #L45e944.  return v0;
  #L45e946.  v2:= 2I;
  #L45e948.  return v2;
  #L45e94a.  call temp:= `e`(v2) @signature `Ls3/x;.e:(Landroid/net/NetworkInfo;)I` @kind static;
  #L45e950.  v2:= temp;
  #L45e952.  return v2;
  #L45e954.  return v0;
  catch `java.lang.SecurityException` @[L45e8f4..L45e8fc] goto L45e954;
}
procedure `void` `h`(`s3.x` v1 @kind this, `s3.x$c` v2 @kind object) @signature `Ls3/x;.h:(Ls3/x$c;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L45ea68.  call temp:= `f`(v1) @signature `Ls3/x;.f:()I` @kind virtual;
  #L45ea6e.  v0:= temp;
  #L45ea70.  call `a`(v2, v0) @signature `Ls3/x$c;.a:(I)V` @kind interface;
  #L45ea76.  return @kind void;
}
procedure `void` `j`(`s3.x` v3 @kind this) @signature `Ls3/x;.j:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L45eac8.  v0:= v3.`s3.x.b` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L45eacc.  call temp:= `iterator`(v0) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L45ead2.  v0:= temp @kind object;
  #L45ead4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L45eada.  v1:= temp;
  #L45eadc.  if v1 == 0 then goto L45eb04;
  #L45eae0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L45eae6.  v1:= temp @kind object;
  #L45eae8.  v1:= (`java.lang.ref.WeakReference`) v1 @kind object;
  #L45eaec.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L45eaf2.  v2:= temp @kind object;
  #L45eaf4.  if v2 != 0 then goto L45ead4;
  #L45eaf8.  v2:= v3.`s3.x.b` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L45eafc.  call temp:= `remove`(v2, v1) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L45eb02.  goto L45ead4;
  #L45eb04.  return @kind void;
}
procedure `void` `k`(`s3.x` v3 @kind this, `int` v4 ) @signature `Ls3/x;.k:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L45eb18.  v0:= v3.`s3.x.c` @type ^`java.lang.Object` @kind object;
  #L45eb1c.  @monitorenter v0
  #L45eb1e.  v1:= v3.`s3.x.d` @type ^`int`;
  #L45eb22.  if v1 != v4 then goto L45eb2a;
  #L45eb26.  @monitorexit v0
  #L45eb28.  return @kind void;
  #L45eb2a.  v3.`s3.x.d` @type ^`int` := v4;
  #L45eb2e.  @monitorexit v0
  #L45eb30.  v0:= v3.`s3.x.b` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L45eb34.  call temp:= `iterator`(v0) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L45eb3a.  v0:= temp @kind object;
  #L45eb3c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L45eb42.  v1:= temp;
  #L45eb44.  if v1 == 0 then goto L45eb78;
  #L45eb48.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L45eb4e.  v1:= temp @kind object;
  #L45eb50.  v1:= (`java.lang.ref.WeakReference`) v1 @kind object;
  #L45eb54.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L45eb5a.  v2:= temp @kind object;
  #L45eb5c.  v2:= (`s3.x$c`) v2 @kind object;
  #L45eb60.  if v2 == 0 then goto L45eb6c;
  #L45eb64.  call `a`(v2, v4) @signature `Ls3/x$c;.a:(I)V` @kind interface;
  #L45eb6a.  goto L45eb3c;
  #L45eb6c.  v2:= v3.`s3.x.b` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L45eb70.  call temp:= `remove`(v2, v1) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L45eb76.  goto L45eb3c;
  #L45eb78.  return @kind void;
  #L45eb7a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45eb7c.  @monitorexit v0
  #L45eb7e.  throw v4;
  catch `java.lang.Throwable` @[L45eb1e..L45eb30] goto L45eb7a;
  catch `java.lang.Throwable` @[L45eb7c..L45eb7e] goto L45eb7a;
}
procedure `int` `f`(`s3.x` v2 @kind this) @signature `Ls3/x;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45e8ac.  v0:= v2.`s3.x.c` @type ^`java.lang.Object` @kind object;
  #L45e8b0.  @monitorenter v0
  #L45e8b2.  v1:= v2.`s3.x.d` @type ^`int`;
  #L45e8b6.  @monitorexit v0
  #L45e8b8.  return v1;
  #L45e8ba.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45e8bc.  @monitorexit v0
  #L45e8be.  throw v1;
  catch `java.lang.Throwable` @[L45e8b2..L45e8be] goto L45e8ba;
}
procedure `void` `i`(`s3.x` v2 @kind this, `s3.x$c` v3 @kind object) @signature `Ls3/x;.i:(Ls3/x$c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45ea88.  call `j`(v2) @signature `Ls3/x;.j:()V` @kind direct;
  #L45ea8e.  v0:= v2.`s3.x.b` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L45ea92.  v1:= new `java.lang.ref.WeakReference`;
  #L45ea96.  call `<init>`(v1, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L45ea9c.  call temp:= `add`(v0, v1) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L45eaa2.  v0:= v2.`s3.x.a` @type ^`android.os.Handler` @kind object;
  #L45eaa6.  v1:= new `s3.w`;
  #L45eaaa.  call `<init>`(v1, v2, v3) @signature `Ls3/w;.<init>:(Ls3/x;Ls3/x$c;)V` @kind direct;
  #L45eab0.  call temp:= `post`(v0, v1) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L45eab6.  return @kind void;
}
