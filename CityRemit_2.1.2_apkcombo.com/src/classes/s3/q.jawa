record `s3.q` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.Object` `@@s3.q.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@s3.q.b` @AccessFlag PRIVATE_STATIC;
global `boolean` `@@s3.q.c` @AccessFlag PRIVATE_STATIC;
global `s3.q$a` `@@s3.q.d` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Ls3/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L45c4e4.  v0:= new `java.lang.Object`;
  #L45c4e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45c4ee.  `@@s3.q.a` @type ^`java.lang.Object` := v0 @kind object;
  #L45c4f2.  v0:= `@@s3.q$a.a` @type ^`s3.q$a` @kind object;
  #L45c4f6.  `@@s3.q.d` @type ^`s3.q$a` := v0 @kind object;
  #L45c4fa.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Ls3/q;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L45c400.  call temp:= `e`(v3) @signature `Ls3/q;.e:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L45c406.  v3:= temp @kind object;
  #L45c408.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L45c40e.  v0:= temp;
  #L45c410.  if v0 != 0 then goto L45c452;
  #L45c414.  v0:= new `java.lang.StringBuilder`;
  #L45c418.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45c41e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c424.  v2:= "\n  " @kind object;
  #L45c428.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c42e.  v1:= "\n" @kind object;
  #L45c432.  call temp:= `replace`(v3, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L45c438.  v2:= temp @kind object;
  #L45c43a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c440.  v2:= 10I;
  #L45c444.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L45c44a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45c450.  v2:= temp @kind object;
  #L45c452.  return v2 @kind object;
}
procedure `void` `b`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Ls3/q;.b:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45c50c.  v0:= `@@s3.q.a` @type ^`java.lang.Object` @kind object;
  #L45c510.  @monitorenter v0
  #L45c512.  v1:= `@@s3.q.b` @type ^`int`;
  #L45c516.  if v1 != 0 then goto L45c524;
  #L45c51a.  v1:= `@@s3.q.d` @type ^`s3.q$a` @kind object;
  #L45c51e.  call `d`(v1, v2, v3) @signature `Ls3/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L45c524.  @monitorexit v0
  #L45c526.  return @kind void;
  #L45c528.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45c52a.  @monitorexit v0
  #L45c52c.  throw v2;
  catch `java.lang.Throwable` @[L45c512..L45c52c] goto L45c528;
}
procedure `void` `c`(`java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Ls3/q;.c:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45c54c.  v0:= `@@s3.q.a` @type ^`java.lang.Object` @kind object;
  #L45c550.  @monitorenter v0
  #L45c552.  v1:= `@@s3.q.b` @type ^`int`;
  #L45c556.  v2:= 3I;
  #L45c558.  if v1 > v2 then goto L45c566;
  #L45c55c.  v1:= `@@s3.q.d` @type ^`s3.q$a` @kind object;
  #L45c560.  call `c`(v1, v3, v4) @signature `Ls3/q$a;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L45c566.  @monitorexit v0
  #L45c568.  return @kind void;
  #L45c56a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45c56c.  @monitorexit v0
  #L45c56e.  throw v3;
  catch `java.lang.Throwable` @[L45c552..L45c56e] goto L45c56a;
}
procedure `void` `d`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Ls3/q;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L45c58c.  call temp:= `a`(v1, v2) @signature `Ls3/q;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L45c592.  v1:= temp @kind object;
  #L45c594.  call `c`(v0, v1) @signature `Ls3/q;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L45c59a.  return @kind void;
}
procedure `java.lang.String` `e`(`java.lang.Throwable` v3 @kind object) @signature `Ls3/q;.e:(Ljava/lang/Throwable;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45c464.  v0:= `@@s3.q.a` @type ^`java.lang.Object` @kind object;
  #L45c468.  @monitorenter v0
  #L45c46a.  if v3 != 0 then goto L45c474;
  #L45c46e.  v3:= 0I;
  #L45c470.  @monitorexit v0
  #L45c472.  return v3 @kind object;
  #L45c474.  call temp:= `g`(v3) @signature `Ls3/q;.g:(Ljava/lang/Throwable;)Z` @kind static;
  #L45c47a.  v1:= temp;
  #L45c47c.  if v1 == 0 then goto L45c488;
  #L45c480.  v3:= "UnknownHostException (no network)" @kind object;
  #L45c484.  @monitorexit v0
  #L45c486.  return v3 @kind object;
  #L45c488.  v1:= `@@s3.q.c` @type ^`boolean` @kind boolean;
  #L45c48c.  if v1 != 0 then goto L45c49c;
  #L45c490.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L45c496.  v3:= temp @kind object;
  #L45c498.  @monitorexit v0
  #L45c49a.  return v3 @kind object;
  #L45c49c.  call temp:= `getStackTraceString`(v3) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L45c4a2.  v3:= temp @kind object;
  #L45c4a4.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L45c4aa.  v3:= temp @kind object;
  #L45c4ac.  v1:= "\t" @kind object;
  #L45c4b0.  v2:= "    " @kind object;
  #L45c4b4.  call temp:= `replace`(v3, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L45c4ba.  v3:= temp @kind object;
  #L45c4bc.  @monitorexit v0
  #L45c4be.  return v3 @kind object;
  #L45c4c0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45c4c2.  @monitorexit v0
  #L45c4c4.  throw v3;
  catch `java.lang.Throwable` @[L45c470..L45c4c4] goto L45c4c0;
}
procedure `void` `f`(`java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Ls3/q;.f:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45c5ac.  v0:= `@@s3.q.a` @type ^`java.lang.Object` @kind object;
  #L45c5b0.  @monitorenter v0
  #L45c5b2.  v1:= `@@s3.q.b` @type ^`int`;
  #L45c5b6.  v2:= 1I;
  #L45c5b8.  if v1 > v2 then goto L45c5c6;
  #L45c5bc.  v1:= `@@s3.q.d` @type ^`s3.q$a` @kind object;
  #L45c5c0.  call `b`(v1, v3, v4) @signature `Ls3/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L45c5c6.  @monitorexit v0
  #L45c5c8.  return @kind void;
  #L45c5ca.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45c5cc.  @monitorexit v0
  #L45c5ce.  throw v3;
  catch `java.lang.Throwable` @[L45c5b2..L45c5ce] goto L45c5ca;
}
procedure `boolean` `g`(`java.lang.Throwable` v1 @kind object) @signature `Ls3/q;.g:(Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L45c3d0.  if v1 == 0 then goto L45c3ea;
  #L45c3d4.  v0:= instanceof @variable v1 @type ^`java.net.UnknownHostException` @kind boolean;
  #L45c3d8.  if v0 == 0 then goto L45c3e0;
  #L45c3dc.  v1:= 1I;
  #L45c3de.  return v1;
  #L45c3e0.  call temp:= `getCause`(v1) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L45c3e6.  v1:= temp @kind object;
  #L45c3e8.  goto L45c3d0;
  #L45c3ea.  v1:= 0I;
  #L45c3ec.  return v1;
}
procedure `void` `h`(`java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45c5ec.  v0:= `@@s3.q.a` @type ^`java.lang.Object` @kind object;
  #L45c5f0.  @monitorenter v0
  #L45c5f2.  v1:= `@@s3.q.b` @type ^`int`;
  #L45c5f6.  v2:= 2I;
  #L45c5f8.  if v1 > v2 then goto L45c606;
  #L45c5fc.  v1:= `@@s3.q.d` @type ^`s3.q$a` @kind object;
  #L45c600.  call `a`(v1, v3, v4) @signature `Ls3/q$a;.a:(Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L45c606.  @monitorexit v0
  #L45c608.  return @kind void;
  #L45c60a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45c60c.  @monitorexit v0
  #L45c60e.  throw v3;
  catch `java.lang.Throwable` @[L45c5f2..L45c60e] goto L45c60a;
}
procedure `void` `i`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Ls3/q;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L45c62c.  call temp:= `a`(v1, v2) @signature `Ls3/q;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L45c632.  v1:= temp @kind object;
  #L45c634.  call `h`(v0, v1) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L45c63a.  return @kind void;
}
