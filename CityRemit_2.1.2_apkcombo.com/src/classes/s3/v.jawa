record `s3.v` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@s3.v.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `float`[] `@@s3.v.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Object` `@@s3.v.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@s3.v.d` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Ls3/v;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L45e234.  v0:= 4I;
  #L45e236.  v0:= new `byte`[v0];
  #L45e23a.  goto L45e274;
  #L45e240.  `@@s3.v.a` @type ^`byte`[] := v0 @kind object;
  #L45e244.  v0:= 17I;
  #L45e248.  v0:= new `float`[v0];
  #L45e24c.  goto L45e280;
  #L45e252.  `@@s3.v.b` @type ^`float`[] := v0 @kind object;
  #L45e256.  v0:= new `java.lang.Object`;
  #L45e25a.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45e260.  `@@s3.v.c` @type ^`java.lang.Object` := v0 @kind object;
  #L45e264.  v0:= 10I;
  #L45e268.  v0:= new `int`[v0];
  #L45e26c.  `@@s3.v.d` @type ^`int`[] := v0 @kind object;
  #L45e270.  return @kind void;
  #L45e272.  
  #L45e274.  v0:= (0I, 0I, 0I, 1I) @kind object;
  #L45e27f.  goto L45e240;
  #L45e280.  v0:= (1065353216I, 1065353216I, 1066115817I, 1063828015I, 1069166220I, 1067132618I, 1074504425I, 1072216623I, 1077554828I, 1075521226I, 1070691421I, 1068403619I, 1073233424I, 1070521954I, 1068149419I, 1069547520I, 1073741824I) @kind object;
  #L45e2cb.  goto L45e252;
}
procedure `void` `a`(`boolean`[] v2 @kind object) @signature `Ls3/v;.a:([Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45e2dc.  v0:= 0I;
  #L45e2de.  v2[v0]:= v0 @kind boolean;
  #L45e2e2.  v1:= 1I;
  #L45e2e4.  v2[v1]:= v0 @kind boolean;
  #L45e2e8.  v1:= 2I;
  #L45e2ea.  v2[v1]:= v0 @kind boolean;
  #L45e2ee.  return @kind void;
}
procedure `void` `b`(`java.nio.ByteBuffer` v9 @kind object) @signature `Ls3/v;.b:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L45e300.  call temp:= `position`(v9) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L45e306.  v0:= temp;
  #L45e308.  v1:= 0I;
  #L45e30a.  v2:= 0I;
  #L45e30c.  v3:= 0I;
  #L45e30e.  v4:= v2 + 1;
  #L45e312.  if v4 >= v0 then goto L45e376;
  #L45e316.  call temp:= `get`(v9, v2) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L45e31c.  v5:= temp;
  #L45e31e.  v5:= v5 ^& 255;
  #L45e322.  v6:= 3I;
  #L45e324.  if v3 != v6 then goto L45e364;
  #L45e328.  v7:= 1I;
  #L45e32a.  if v5 != v7 then goto L45e36c;
  #L45e32e.  call temp:= `get`(v9, v4) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L45e334.  v7:= temp;
  #L45e336.  v7:= v7 ^& 31;
  #L45e33a.  v8:= 7I;
  #L45e33c.  if v7 != v8 then goto L45e36c;
  #L45e340.  call temp:= `duplicate`(v9) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L45e346.  v3:= temp @kind object;
  #L45e348.  v2:= v2 - v6 @kind int;
  #L45e34a.  call temp:= `position`(v3, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L45e350.  call temp:= `limit`(v3, v0) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L45e356.  call temp:= `position`(v9, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L45e35c.  call temp:= `put`(v9, v3) @signature `Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L45e362.  return @kind void;
  #L45e364.  if v5 != 0 then goto L45e36c;
  #L45e368.  v3:= v3 + 1;
  #L45e36c.  if v5 == 0 then goto L45e372;
  #L45e370.  v3:= 0I;
  #L45e372.  v2:= v4;
  #L45e374.  goto L45e30e;
  #L45e376.  call temp:= `clear`(v9) @signature `Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;` @kind virtual;
  #L45e37c.  return @kind void;
}
procedure `int` `c`(`byte`[] v7 @kind object, `int` v8 , `int` v9 , `boolean`[] v10 @kind object) @signature `Ls3/v;.c:([BII[Z)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L45d874.  v0:= v9 - v8 @kind int;
  #L45d878.  v1:= 0I;
  #L45d87a.  v2:= 1I;
  #L45d87c.  if v0 < 0 then goto L45d884;
  #L45d880.  v3:= 1I;
  #L45d882.  goto L45d886;
  #L45d884.  v3:= 0I;
  #L45d886.  call `f`(v3) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L45d88c.  if v0 != 0 then goto L45d892;
  #L45d890.  return v9;
  #L45d892.  v3:= v10[v1] @kind boolean;
  #L45d896.  if v3 == 0 then goto L45d8a6;
  #L45d89a.  call `a`(v10) @signature `Ls3/v;.a:([Z)V` @kind static;
  #L45d8a0.  v8:= v8 + -3;
  #L45d8a4.  return v8;
  #L45d8a6.  v3:= 2I;
  #L45d8a8.  if v0 <= v2 then goto L45d8c6;
  #L45d8ac.  v4:= v10[v2] @kind boolean;
  #L45d8b0.  if v4 == 0 then goto L45d8c6;
  #L45d8b4.  v4:= v7[v8] @kind byte;
  #L45d8b8.  if v4 != v2 then goto L45d8c6;
  #L45d8bc.  call `a`(v10) @signature `Ls3/v;.a:([Z)V` @kind static;
  #L45d8c2.  v8:= v8 - v3 @kind int;
  #L45d8c4.  return v8;
  #L45d8c6.  if v0 <= v3 then goto L45d8f0;
  #L45d8ca.  v4:= v10[v3] @kind boolean;
  #L45d8ce.  if v4 == 0 then goto L45d8f0;
  #L45d8d2.  v4:= v7[v8] @kind byte;
  #L45d8d6.  if v4 != 0 then goto L45d8f0;
  #L45d8da.  v4:= v8 + 1;
  #L45d8de.  v4:= v7[v4] @kind byte;
  #L45d8e2.  if v4 != v2 then goto L45d8f0;
  #L45d8e6.  call `a`(v10) @signature `Ls3/v;.a:([Z)V` @kind static;
  #L45d8ec.  v8:= v8 - v2 @kind int;
  #L45d8ee.  return v8;
  #L45d8f0.  v4:= v9 + -1;
  #L45d8f4.  v8:= v8 + v3 @kind int;
  #L45d8f6.  if v8 >= v4 then goto L45d93a;
  #L45d8fa.  v5:= v7[v8] @kind byte;
  #L45d8fe.  v5:= v5 ^& 254;
  #L45d902.  if v5 == 0 then goto L45d908;
  #L45d906.  goto L45d934;
  #L45d908.  v5:= v8 + -2;
  #L45d90c.  v6:= v7[v5] @kind byte;
  #L45d910.  if v6 != 0 then goto L45d930;
  #L45d914.  v6:= v8 + -1;
  #L45d918.  v6:= v7[v6] @kind byte;
  #L45d91c.  if v6 != 0 then goto L45d930;
  #L45d920.  v6:= v7[v8] @kind byte;
  #L45d924.  if v6 != v2 then goto L45d930;
  #L45d928.  call `a`(v10) @signature `Ls3/v;.a:([Z)V` @kind static;
  #L45d92e.  return v5;
  #L45d930.  v8:= v8 + -2;
  #L45d934.  v8:= v8 + 3;
  #L45d938.  goto L45d8f6;
  #L45d93a.  if v0 <= v3 then goto L45d964;
  #L45d93e.  v8:= v9 + -3;
  #L45d942.  v8:= v7[v8] @kind byte;
  #L45d946.  if v8 != 0 then goto L45d960;
  #L45d94a.  v8:= v9 + -2;
  #L45d94e.  v8:= v7[v8] @kind byte;
  #L45d952.  if v8 != 0 then goto L45d960;
  #L45d956.  v8:= v7[v4] @kind byte;
  #L45d95a.  if v8 != v2 then goto L45d960;
  #L45d95e.  goto L45d996;
  #L45d960.  v8:= 0I;
  #L45d962.  goto L45d998;
  #L45d964.  if v0 != v3 then goto L45d986;
  #L45d968.  v8:= v10[v3] @kind boolean;
  #L45d96c.  if v8 == 0 then goto L45d960;
  #L45d970.  v8:= v9 + -2;
  #L45d974.  v8:= v7[v8] @kind byte;
  #L45d978.  if v8 != 0 then goto L45d960;
  #L45d97c.  v8:= v7[v4] @kind byte;
  #L45d980.  if v8 != v2 then goto L45d960;
  #L45d984.  goto L45d996;
  #L45d986.  v8:= v10[v2] @kind boolean;
  #L45d98a.  if v8 == 0 then goto L45d960;
  #L45d98e.  v8:= v7[v4] @kind byte;
  #L45d992.  if v8 != v2 then goto L45d960;
  #L45d996.  v8:= 1I;
  #L45d998.  v10[v1]:= v8 @kind boolean;
  #L45d99c.  if v0 <= v2 then goto L45d9b6;
  #L45d9a0.  v8:= v9 + -2;
  #L45d9a4.  v8:= v7[v8] @kind byte;
  #L45d9a8.  if v8 != 0 then goto L45d9ca;
  #L45d9ac.  v8:= v7[v4] @kind byte;
  #L45d9b0.  if v8 != 0 then goto L45d9ca;
  #L45d9b4.  goto L45d9c6;
  #L45d9b6.  v8:= v10[v3] @kind boolean;
  #L45d9ba.  if v8 == 0 then goto L45d9ca;
  #L45d9be.  v8:= v7[v4] @kind byte;
  #L45d9c2.  if v8 != 0 then goto L45d9ca;
  #L45d9c6.  v8:= 1I;
  #L45d9c8.  goto L45d9cc;
  #L45d9ca.  v8:= 0I;
  #L45d9cc.  v10[v2]:= v8 @kind boolean;
  #L45d9d0.  v7:= v7[v4] @kind byte;
  #L45d9d4.  if v7 != 0 then goto L45d9da;
  #L45d9d8.  v1:= 1I;
  #L45d9da.  v10[v3]:= v1 @kind boolean;
  #L45d9de.  return v9;
}
procedure `int` `d`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Ls3/v;.d:([BII)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L45d9f0.  v0:= v4 + -2;
  #L45d9f4.  if v3 >= v0 then goto L45da22;
  #L45d9f8.  v0:= v2[v3] @kind byte;
  #L45d9fc.  if v0 != 0 then goto L45da1c;
  #L45da00.  v0:= v3 + 1;
  #L45da04.  v0:= v2[v0] @kind byte;
  #L45da08.  if v0 != 0 then goto L45da1c;
  #L45da0c.  v0:= v3 + 2;
  #L45da10.  v0:= v2[v0] @kind byte;
  #L45da14.  v1:= 3I;
  #L45da16.  if v0 != v1 then goto L45da1c;
  #L45da1a.  return v3;
  #L45da1c.  v3:= v3 + 1;
  #L45da20.  goto L45d9f0;
  #L45da22.  return v4;
}
procedure `int` `e`(`byte`[] v0 @kind object, `int` v1 ) @signature `Ls3/v;.e:([BI)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L45da34.  v1:= v1 + 3;
  #L45da38.  v0:= v0[v1] @kind byte;
  #L45da3c.  v0:= v0 ^& 126;
  #L45da40.  v0:= v0 ^> 1;
  #L45da44.  return v0;
}
procedure `int` `f`(`byte`[] v0 @kind object, `int` v1 ) @signature `Ls3/v;.f:([BI)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L45da58.  v1:= v1 + 3;
  #L45da5c.  v0:= v0[v1] @kind byte;
  #L45da60.  v0:= v0 ^& 31;
  #L45da64.  return v0;
}
procedure `boolean` `g`(`java.lang.String` v3 @kind object, `byte` v4 ) @signature `Ls3/v;.g:(Ljava/lang/String;B)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45d824.  v0:= "video/avc" @kind object;
  #L45d828.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45d82e.  v0:= temp;
  #L45d830.  v1:= 1I;
  #L45d832.  if v0 == 0 then goto L45d840;
  #L45d836.  v0:= v4 ^& 31;
  #L45d83a.  v2:= 6I;
  #L45d83c.  if v0 == v2 then goto L45d862;
  #L45d840.  v0:= "video/hevc" @kind object;
  #L45d844.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45d84a.  v3:= temp;
  #L45d84c.  if v3 == 0 then goto L45d860;
  #L45d850.  v3:= v4 ^& 126;
  #L45d854.  v3:= v3 ^> v1 @kind int;
  #L45d856.  v4:= 39I;
  #L45d85a.  if v3 != v4 then goto L45d860;
  #L45d85e.  goto L45d862;
  #L45d860.  v1:= 0I;
  #L45d862.  return v1;
}
procedure `s3.v$a` `h`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Ls3/v;.h:([BII)Ls3/v$a;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L45db30.  v1:= v1 + 2;
  #L45db34.  call temp:= `i`(v0, v1, v2) @signature `Ls3/v;.i:([BII)Ls3/v$a;` @kind static;
  #L45db3a.  v0:= temp @kind object;
  #L45db3c.  return v0 @kind object;
}
procedure `s3.v$a` `i`(`byte`[] v22 @kind object, `int` v23 , `int` v24 ) @signature `Ls3/v;.i:([BII)Ls3/v$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L45db50.  v0:= new `s3.a0`;
  #L45db54.  v1:= v22 @kind object;
  #L45db58.  v2:= v23;
  #L45db5c.  v3:= v24;
  #L45db60.  call `<init>`(v0, v1, v2, v3) @signature `Ls3/a0;.<init>:([BII)V` @kind direct;
  #L45db66.  v1:= 4I;
  #L45db68.  call `l`(v0, v1) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L45db6e.  v2:= 3I;
  #L45db70.  call temp:= `e`(v0, v2) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L45db76.  v3:= temp;
  #L45db78.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L45db7e.  v4:= 2I;
  #L45db80.  call temp:= `e`(v0, v4) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L45db86.  v6:= temp;
  #L45db88.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45db8e.  v7:= temp;
  #L45db90.  v5:= 5I;
  #L45db92.  call temp:= `e`(v0, v5) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L45db98.  v8:= temp;
  #L45db9a.  v9:= 0I;
  #L45db9c.  v10:= 0I;
  #L45db9e.  v11:= 32I;
  #L45dba2.  v12:= 1I;
  #L45dba4.  if v10 >= v11 then goto L45dbc0;
  #L45dba8.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45dbae.  v11:= temp;
  #L45dbb0.  if v11 == 0 then goto L45dbba;
  #L45dbb4.  v11:= v12 ^< v10 @kind int;
  #L45dbb8.  v9:= v9 ^| v11 @kind int;
  #L45dbba.  v10:= v10 + 1;
  #L45dbbe.  goto L45db9e;
  #L45dbc0.  v10:= 6I;
  #L45dbc2.  v11:= new `int`[v10];
  #L45dbc6.  v13:= 0I;
  #L45dbc8.  v14:= 8I;
  #L45dbcc.  if v13 >= v10 then goto L45dbe2;
  #L45dbd0.  call temp:= `e`(v0, v14) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L45dbd6.  v14:= temp;
  #L45dbd8.  v11[v13]:= v14;
  #L45dbdc.  v13:= v13 + 1;
  #L45dbe0.  goto L45dbc8;
  #L45dbe2.  call temp:= `e`(v0, v14) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L45dbe8.  v13:= temp;
  #L45dbea.  v10:= 0I;
  #L45dbec.  v15:= 0I;
  #L45dbee.  if v10 >= v3 then goto L45dc18;
  #L45dbf2.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45dbf8.  v16:= temp;
  #L45dbfa.  if v16 == 0 then goto L45dc02;
  #L45dbfe.  v15:= v15 + 89;
  #L45dc02.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45dc08.  v16:= temp;
  #L45dc0a.  if v16 == 0 then goto L45dc12;
  #L45dc0e.  v15:= v15 + 8;
  #L45dc12.  v10:= v10 + 1;
  #L45dc16.  goto L45dbee;
  #L45dc18.  call `l`(v0, v15) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L45dc1e.  if v3 <= 0 then goto L45dc30;
  #L45dc22.  v10:= v3 - 8;
  #L45dc26.  v10:= v10 * 2;
  #L45dc2a.  call `l`(v0, v10) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L45dc30.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dc36.  v15:= temp;
  #L45dc38.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dc3e.  v10:= temp;
  #L45dc40.  if v10 != v2 then goto L45dc4a;
  #L45dc44.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L45dc4a.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dc50.  v2:= temp;
  #L45dc52.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dc58.  v16:= temp;
  #L45dc5a.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45dc60.  v17:= temp;
  #L45dc62.  if v17 == 0 then goto L45dcbc;
  #L45dc66.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dc6c.  v17:= temp;
  #L45dc6e.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dc74.  v18:= temp;
  #L45dc76.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dc7c.  v19:= temp;
  #L45dc7e.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dc84.  v20:= temp;
  #L45dc86.  if v10 == v12 then goto L45dc96;
  #L45dc8a.  if v10 != v4 then goto L45dc90;
  #L45dc8e.  goto L45dc96;
  #L45dc90.  v21:= 1I;
  #L45dc94.  goto L45dc9a;
  #L45dc96.  v21:= 2I;
  #L45dc9a.  if v10 != v12 then goto L45dca2;
  #L45dc9e.  v10:= 2I;
  #L45dca0.  goto L45dca4;
  #L45dca2.  v10:= 1I;
  #L45dca4.  v17:= v17 + v18 @kind int;
  #L45dca8.  v21:= v21 * v17 @kind int;
  #L45dcac.  v2:= v2 - v21 @kind int;
  #L45dcb0.  v19:= v19 + v20 @kind int;
  #L45dcb4.  v10:= v10 * v19 @kind int;
  #L45dcb8.  v16:= v16 - v10 @kind int;
  #L45dcbc.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dcc2.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dcc8.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dcce.  v10:= temp;
  #L45dcd0.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45dcd6.  v17:= temp;
  #L45dcd8.  if v17 == 0 then goto L45dce2;
  #L45dcdc.  v17:= 0I;
  #L45dce0.  goto L45dce6;
  #L45dce2.  v17:= v3;
  #L45dce6.  v5:= v17;
  #L45dcea.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dcf0.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dcf6.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dcfc.  if v5 > v3 then goto L45dd06;
  #L45dd00.  v5:= v5 + 1;
  #L45dd04.  goto L45dcea;
  #L45dd06.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dd0c.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dd12.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dd18.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45dd1e.  v3:= temp;
  #L45dd20.  if v3 == 0 then goto L45dd36;
  #L45dd24.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45dd2a.  v3:= temp;
  #L45dd2c.  if v3 == 0 then goto L45dd36;
  #L45dd30.  call `n`(v0) @signature `Ls3/v;.n:(Ls3/a0;)V` @kind static;
  #L45dd36.  call `l`(v0, v4) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L45dd3c.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45dd42.  v3:= temp;
  #L45dd44.  if v3 == 0 then goto L45dd60;
  #L45dd48.  call `l`(v0, v14) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L45dd4e.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dd54.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dd5a.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L45dd60.  call `p`(v0) @signature `Ls3/v;.p:(Ls3/a0;)V` @kind static;
  #L45dd66.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45dd6c.  v3:= temp;
  #L45dd6e.  if v3 == 0 then goto L45dd92;
  #L45dd72.  v5:= 0I;
  #L45dd74.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dd7a.  v3:= temp;
  #L45dd7c.  if v5 >= v3 then goto L45dd92;
  #L45dd80.  v3:= v10 + 4;
  #L45dd84.  v3:= v3 + v12 @kind int;
  #L45dd86.  call `l`(v0, v3) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L45dd8c.  v5:= v5 + 1;
  #L45dd90.  goto L45dd74;
  #L45dd92.  call `l`(v0, v4) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L45dd98.  v3:= 1.0F;
  #L45dd9c.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45dda2.  v4:= temp;
  #L45dda4.  if v4 == 0 then goto L45de8c;
  #L45dda8.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45ddae.  v4:= temp;
  #L45ddb0.  if v4 == 0 then goto L45de24;
  #L45ddb4.  call temp:= `e`(v0, v14) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L45ddba.  v4:= temp;
  #L45ddbc.  v5:= 255I;
  #L45ddc0.  if v4 != v5 then goto L45dde8;
  #L45ddc4.  v4:= 16I;
  #L45ddc8.  call temp:= `e`(v0, v4) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L45ddce.  v5:= temp;
  #L45ddd0.  call temp:= `e`(v0, v4) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L45ddd6.  v4:= temp;
  #L45ddd8.  if v5 == 0 then goto L45de24;
  #L45dddc.  if v4 == 0 then goto L45de24;
  #L45dde0.  v3:= (`float`) v5 @kind i2f;
  #L45dde2.  v4:= (`float`) v4 @kind i2f;
  #L45dde4.  v3:= v3 / v4 @kind float;
  #L45dde6.  goto L45de24;
  #L45dde8.  v5:= `@@s3.v.b` @type ^`float`[] @kind object;
  #L45ddec.  v10:= length @variable v5;
  #L45ddee.  if v4 >= v10 then goto L45ddf8;
  #L45ddf2.  v3:= v5[v4];
  #L45ddf6.  goto L45de24;
  #L45ddf8.  v5:= new `java.lang.StringBuilder`;
  #L45ddfc.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45de02.  v10:= "Unexpected aspect_ratio_idc value: " @kind object;
  #L45de06.  call temp:= `append`(v5, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45de0c.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45de12.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45de18.  v4:= temp @kind object;
  #L45de1a.  v5:= "NalUnitUtil" @kind object;
  #L45de1e.  call `h`(v5, v4) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L45de24.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45de2a.  v4:= temp;
  #L45de2c.  if v4 == 0 then goto L45de36;
  #L45de30.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L45de36.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45de3c.  v4:= temp;
  #L45de3e.  if v4 == 0 then goto L45de5e;
  #L45de42.  call `l`(v0, v1) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L45de48.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45de4e.  v1:= temp;
  #L45de50.  if v1 == 0 then goto L45de5e;
  #L45de54.  v1:= 24I;
  #L45de58.  call `l`(v0, v1) @signature `Ls3/a0;.l:(I)V` @kind virtual;
  #L45de5e.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45de64.  v1:= temp;
  #L45de66.  if v1 == 0 then goto L45de76;
  #L45de6a.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45de70.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45de76.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L45de7c.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45de82.  v0:= temp;
  #L45de84.  if v0 == 0 then goto L45de8c;
  #L45de88.  v16:= v16 * 2;
  #L45de8c.  v14:= v16;
  #L45de90.  v0:= new `s3.v$a`;
  #L45de94.  v5:= v0 @kind object;
  #L45de96.  v10:= v11 @kind object;
  #L45de98.  v11:= v13;
  #L45de9a.  v12:= v15;
  #L45de9c.  v13:= v2;
  #L45de9e.  v15:= v3;
  #L45dea0.  call `<init>`(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Ls3/v$a;.<init>:(IZII[IIIIIF)V` @kind direct;
  #L45dea6.  return v0 @kind object;
}
procedure `s3.v$b` `j`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Ls3/v;.j:([BII)Ls3/v$b;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L45deb8.  v1:= v1 + 1;
  #L45debc.  call temp:= `k`(v0, v1, v2) @signature `Ls3/v;.k:([BII)Ls3/v$b;` @kind static;
  #L45dec2.  v0:= temp @kind object;
  #L45dec4.  return v0 @kind object;
}
procedure `s3.v$b` `k`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Ls3/v;.k:([BII)Ls3/v$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ded8.  v0:= new `s3.a0`;
  #L45dedc.  call `<init>`(v0, v1, v2, v3) @signature `Ls3/a0;.<init>:([BII)V` @kind direct;
  #L45dee2.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dee8.  v1:= temp;
  #L45deea.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45def0.  v2:= temp;
  #L45def2.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L45def8.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45defe.  v3:= temp;
  #L45df00.  v0:= new `s3.v$b`;
  #L45df04.  call `<init>`(v0, v1, v2, v3) @signature `Ls3/v$b;.<init>:(IIZ)V` @kind direct;
  #L45df0a.  return v0 @kind object;
}
procedure `s3.v$c` `l`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Ls3/v;.l:([BII)Ls3/v$c;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L45df1c.  v1:= v1 + 1;
  #L45df20.  call temp:= `m`(v0, v1, v2) @signature `Ls3/v;.m:([BII)Ls3/v$c;` @kind static;
  #L45df26.  v0:= temp @kind object;
  #L45df28.  return v0 @kind object;
}
procedure `s3.v$c` `m`(`byte`[] v22 @kind object, `int` v23 , `int` v24 ) @signature `Ls3/v;.m:([BII)Ls3/v$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L45df3c.  v0:= new `s3.a0`;
  #L45df40.  v1:= v22 @kind object;
  #L45df44.  v2:= v23;
  #L45df48.  v3:= v24;
  #L45df4c.  call `<init>`(v0, v1, v2, v3) @signature `Ls3/a0;.<init>:([BII)V` @kind direct;
  #L45df52.  v1:= 8I;
  #L45df56.  call temp:= `e`(v0, v1) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L45df5c.  v3:= temp;
  #L45df5e.  call temp:= `e`(v0, v1) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L45df64.  v4:= temp;
  #L45df66.  call temp:= `e`(v0, v1) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L45df6c.  v5:= temp;
  #L45df6e.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45df74.  v6:= temp;
  #L45df76.  v2:= 3I;
  #L45df78.  v9:= 1I;
  #L45df7a.  v10:= 100I;
  #L45df7e.  if v3 == v10 then goto L45dfd2;
  #L45df82.  v10:= 110I;
  #L45df86.  if v3 == v10 then goto L45dfd2;
  #L45df8a.  v10:= 122I;
  #L45df8e.  if v3 == v10 then goto L45dfd2;
  #L45df92.  v10:= 244I;
  #L45df96.  if v3 == v10 then goto L45dfd2;
  #L45df9a.  v10:= 44I;
  #L45df9e.  if v3 == v10 then goto L45dfd2;
  #L45dfa2.  v10:= 83I;
  #L45dfa6.  if v3 == v10 then goto L45dfd2;
  #L45dfaa.  v10:= 86I;
  #L45dfae.  if v3 == v10 then goto L45dfd2;
  #L45dfb2.  v10:= 118I;
  #L45dfb6.  if v3 == v10 then goto L45dfd2;
  #L45dfba.  v10:= 128I;
  #L45dfbe.  if v3 == v10 then goto L45dfd2;
  #L45dfc2.  v10:= 138I;
  #L45dfc6.  if v3 != v10 then goto L45dfcc;
  #L45dfca.  goto L45dfd2;
  #L45dfcc.  v10:= 1I;
  #L45dfce.  v11:= 0I;
  #L45dfd0.  goto L45e044;
  #L45dfd2.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dfd8.  v10:= temp;
  #L45dfda.  if v10 != v2 then goto L45dfe8;
  #L45dfde.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45dfe4.  v11:= temp;
  #L45dfe6.  goto L45dfea;
  #L45dfe8.  v11:= 0I;
  #L45dfea.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dff0.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45dff6.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L45dffc.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45e002.  v12:= temp;
  #L45e004.  if v12 == 0 then goto L45e044;
  #L45e008.  if v10 == v2 then goto L45e012;
  #L45e00c.  v12:= 8I;
  #L45e010.  goto L45e016;
  #L45e012.  v12:= 12I;
  #L45e016.  v13:= 0I;
  #L45e018.  if v13 >= v12 then goto L45e044;
  #L45e01c.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45e022.  v14:= temp;
  #L45e024.  if v14 == 0 then goto L45e03e;
  #L45e028.  v14:= 6I;
  #L45e02a.  if v13 >= v14 then goto L45e034;
  #L45e02e.  v14:= 16I;
  #L45e032.  goto L45e038;
  #L45e034.  v14:= 64I;
  #L45e038.  call `o`(v0, v14) @signature `Ls3/v;.o:(Ls3/a0;I)V` @kind static;
  #L45e03e.  v13:= v13 + 1;
  #L45e042.  goto L45e018;
  #L45e044.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e04a.  v12:= temp;
  #L45e04c.  v13:= v12 + 4;
  #L45e050.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e056.  v14:= temp;
  #L45e058.  if v14 != 0 then goto L45e06c;
  #L45e05c.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e062.  v12:= temp;
  #L45e064.  v12:= v12 + 4;
  #L45e068.  v15:= v12;
  #L45e06a.  goto L45e0b0;
  #L45e06c.  if v14 != v9 then goto L45e0ae;
  #L45e070.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45e076.  v12:= temp;
  #L45e078.  call temp:= `g`(v0) @signature `Ls3/a0;.g:()I` @kind virtual;
  #L45e07e.  call temp:= `g`(v0) @signature `Ls3/a0;.g:()I` @kind virtual;
  #L45e084.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e08a.  v15:= temp;
  #L45e08c.  v1:= (`long`) v15 @kind i2l;
  #L45e08e.  v15:= 0I;
  #L45e090.  v7:= (`long`) v15 @kind i2l;
  #L45e092.  v17:= lcmp(v7, v1);
  #L45e096.  if v17 >= 0 then goto L45e0a6;
  #L45e09a.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e0a0.  v15:= v15 + 1;
  #L45e0a4.  goto L45e090;
  #L45e0a6.  v16:= v12;
  #L45e0aa.  v15:= 0I;
  #L45e0ac.  goto L45e0b4;
  #L45e0ae.  v15:= 0I;
  #L45e0b0.  v16:= 0I;
  #L45e0b4.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e0ba.  v7:= temp;
  #L45e0bc.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L45e0c2.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e0c8.  v1:= temp;
  #L45e0ca.  v1:= v1 + v9 @kind int;
  #L45e0cc.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e0d2.  v2:= temp;
  #L45e0d4.  v2:= v2 + v9 @kind int;
  #L45e0d6.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45e0dc.  v12:= temp;
  #L45e0de.  v8:= v12 - 2;
  #L45e0e2.  v8:= v8 * v2 @kind int;
  #L45e0e6.  if v12 != 0 then goto L45e0f0;
  #L45e0ea.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L45e0f0.  call `k`(v0) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L45e0f6.  v2:= 16I;
  #L45e0fa.  v1:= v1 * 16;
  #L45e0fe.  v8:= v8 * 16;
  #L45e102.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45e108.  v2:= temp;
  #L45e10a.  if v2 == 0 then goto L45e178;
  #L45e10e.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e114.  v2:= temp;
  #L45e116.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e11c.  v17:= temp;
  #L45e11e.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e124.  v18:= temp;
  #L45e126.  call temp:= `h`(v0) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e12c.  v19:= temp;
  #L45e12e.  if v10 != 0 then goto L45e138;
  #L45e132.  v10:= v12 - 2;
  #L45e136.  goto L45e162;
  #L45e138.  v20:= 2I;
  #L45e13c.  v9:= 3I;
  #L45e13e.  if v10 != v9 then goto L45e14a;
  #L45e142.  v9:= 1I;
  #L45e144.  v21:= 1I;
  #L45e148.  goto L45e150;
  #L45e14a.  v9:= 1I;
  #L45e14c.  v21:= 2I;
  #L45e150.  if v10 != v9 then goto L45e156;
  #L45e154.  v9:= 2I;
  #L45e156.  v10:= v12 - 2;
  #L45e15a.  v10:= v10 * v9 @kind int;
  #L45e15e.  v9:= v21;
  #L45e162.  v2:= v2 + v17 @kind int;
  #L45e166.  v2:= v2 * v9 @kind int;
  #L45e16a.  v1:= v1 - v2 @kind int;
  #L45e16c.  v18:= v18 + v19 @kind int;
  #L45e170.  v18:= v18 * v10 @kind int;
  #L45e174.  v8:= v8 - v18 @kind int;
  #L45e178.  v9:= v8;
  #L45e17a.  v8:= v1;
  #L45e17c.  v1:= 1.0F;
  #L45e180.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45e186.  v2:= temp;
  #L45e188.  if v2 == 0 then goto L45e210;
  #L45e18c.  call temp:= `d`(v0) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45e192.  v2:= temp;
  #L45e194.  if v2 == 0 then goto L45e210;
  #L45e198.  v2:= 8I;
  #L45e19c.  call temp:= `e`(v0, v2) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L45e1a2.  v2:= temp;
  #L45e1a4.  v10:= 255I;
  #L45e1a8.  if v2 != v10 then goto L45e1d2;
  #L45e1ac.  v10:= 16I;
  #L45e1b0.  call temp:= `e`(v0, v10) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L45e1b6.  v2:= temp;
  #L45e1b8.  call temp:= `e`(v0, v10) @signature `Ls3/a0;.e:(I)I` @kind virtual;
  #L45e1be.  v0:= temp;
  #L45e1c0.  if v2 == 0 then goto L45e1ce;
  #L45e1c4.  if v0 == 0 then goto L45e1ce;
  #L45e1c8.  v1:= (`float`) v2 @kind i2f;
  #L45e1ca.  v0:= (`float`) v0 @kind i2f;
  #L45e1cc.  v1:= v1 / v0 @kind float;
  #L45e1ce.  v10:= v1;
  #L45e1d0.  goto L45e214;
  #L45e1d2.  v0:= `@@s3.v.b` @type ^`float`[] @kind object;
  #L45e1d6.  v10:= length @variable v0;
  #L45e1d8.  if v2 >= v10 then goto L45e1e4;
  #L45e1dc.  v0:= v0[v2];
  #L45e1e0.  v10:= v0;
  #L45e1e2.  goto L45e214;
  #L45e1e4.  v0:= new `java.lang.StringBuilder`;
  #L45e1e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L45e1ee.  v10:= "Unexpected aspect_ratio_idc value: " @kind object;
  #L45e1f2.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e1f8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L45e1fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L45e204.  v0:= temp @kind object;
  #L45e206.  v2:= "NalUnitUtil" @kind object;
  #L45e20a.  call `h`(v2, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L45e210.  v10:= 1.0F;
  #L45e214.  v0:= new `s3.v$c`;
  #L45e218.  v2:= v0 @kind object;
  #L45e21a.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Ls3/v$c;.<init>:(IIIIIIIFZZIIIZ)V` @kind direct;
  #L45e220.  return v0 @kind object;
}
procedure `void` `n`(`s3.a0` v7 @kind object) @signature `Ls3/v;.n:(Ls3/a0;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L45e390.  v0:= 0I;
  #L45e392.  v1:= 0I;
  #L45e394.  v2:= 4I;
  #L45e396.  if v1 >= v2 then goto L45e3fc;
  #L45e39a.  v3:= 0I;
  #L45e39c.  v4:= 6I;
  #L45e39e.  if v3 >= v4 then goto L45e3f6;
  #L45e3a2.  call temp:= `d`(v7) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45e3a8.  v4:= temp;
  #L45e3aa.  v5:= 1I;
  #L45e3ac.  if v4 != 0 then goto L45e3b8;
  #L45e3b0.  call temp:= `h`(v7) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e3b6.  goto L45e3ea;
  #L45e3b8.  v4:= 64I;
  #L45e3bc.  v6:= v1 ^< 1;
  #L45e3c0.  v6:= v6 + v2 @kind int;
  #L45e3c2.  v6:= v5 ^< v6 @kind int;
  #L45e3c6.  call temp:= `min`(v4, v6) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L45e3cc.  v4:= temp;
  #L45e3ce.  if v1 <= v5 then goto L45e3d8;
  #L45e3d2.  call temp:= `g`(v7) @signature `Ls3/a0;.g:()I` @kind virtual;
  #L45e3d8.  v6:= 0I;
  #L45e3da.  if v6 >= v4 then goto L45e3ea;
  #L45e3de.  call temp:= `g`(v7) @signature `Ls3/a0;.g:()I` @kind virtual;
  #L45e3e4.  v6:= v6 + 1;
  #L45e3e8.  goto L45e3da;
  #L45e3ea.  v4:= 3I;
  #L45e3ec.  if v1 != v4 then goto L45e3f2;
  #L45e3f0.  v5:= 3I;
  #L45e3f2.  v3:= v3 + v5 @kind int;
  #L45e3f4.  goto L45e39c;
  #L45e3f6.  v1:= v1 + 1;
  #L45e3fa.  goto L45e394;
  #L45e3fc.  return @kind void;
}
procedure `void` `o`(`s3.a0` v3 @kind object, `int` v4 ) @signature `Ls3/v;.o:(Ls3/a0;I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L45e410.  v0:= 8I;
  #L45e414.  v1:= 0I;
  #L45e416.  v1:= 8I;
  #L45e41a.  v2:= 0I;
  #L45e41c.  if v2 >= v4 then goto L45e444;
  #L45e420.  if v0 == 0 then goto L45e436;
  #L45e424.  call temp:= `g`(v3) @signature `Ls3/a0;.g:()I` @kind virtual;
  #L45e42a.  v0:= temp;
  #L45e42c.  v0:= v0 + v1 @kind int;
  #L45e42e.  v0:= v0 + 256;
  #L45e432.  v0:= v0 %% 256;
  #L45e436.  if v0 != 0 then goto L45e43c;
  #L45e43a.  goto L45e43e;
  #L45e43c.  v1:= v0;
  #L45e43e.  v2:= v2 + 1;
  #L45e442.  goto L45e41c;
  #L45e444.  return @kind void;
}
procedure `void` `p`(`s3.a0` v19 @kind object) @signature `Ls3/v;.p:(Ls3/a0;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L45e458.  call temp:= `h`(v19) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e45e.  v0:= temp;
  #L45e460.  v1:= 0I;
  #L45e462.  v2:= new `int`[v1];
  #L45e466.  v3:= new `int`[v1];
  #L45e46a.  v4:= -1I;
  #L45e46c.  v5:= -1I;
  #L45e46e.  v6:= 0I;
  #L45e470.  if v6 >= v0 then goto L45e658;
  #L45e474.  v7:= 1I;
  #L45e476.  if v6 == 0 then goto L45e48a;
  #L45e47a.  call temp:= `d`(v19) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45e480.  v8:= temp;
  #L45e482.  if v8 == 0 then goto L45e48a;
  #L45e486.  v8:= 1I;
  #L45e488.  goto L45e48c;
  #L45e48a.  v8:= 0I;
  #L45e48c.  if v8 == 0 then goto L45e5e4;
  #L45e490.  v8:= v4 + v5 @kind int;
  #L45e494.  call temp:= `d`(v19) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45e49a.  v9:= temp;
  #L45e49c.  call temp:= `h`(v19) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e4a2.  v10:= temp;
  #L45e4a4.  v10:= v10 + v7 @kind int;
  #L45e4a6.  v9:= v9 * 2;
  #L45e4aa.  v9:= v9 - 1;
  #L45e4ae.  v9:= v9 * v10 @kind int;
  #L45e4b2.  v10:= v8 + 1;
  #L45e4b6.  v11:= new `boolean`[v10];
  #L45e4ba.  v12:= 0I;
  #L45e4bc.  if v12 > v8 then goto L45e4e4;
  #L45e4c0.  call temp:= `d`(v19) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45e4c6.  v13:= temp;
  #L45e4c8.  if v13 != 0 then goto L45e4da;
  #L45e4cc.  call temp:= `d`(v19) @signature `Ls3/a0;.d:()Z` @kind virtual;
  #L45e4d2.  v13:= temp;
  #L45e4d4.  v11[v12]:= v13 @kind boolean;
  #L45e4d8.  goto L45e4de;
  #L45e4da.  v11[v12]:= v7 @kind boolean;
  #L45e4de.  v12:= v12 + 1;
  #L45e4e2.  goto L45e4bc;
  #L45e4e4.  v7:= new `int`[v10];
  #L45e4e8.  v10:= new `int`[v10];
  #L45e4ec.  v12:= v5 + -1;
  #L45e4f0.  v13:= 0I;
  #L45e4f2.  if v12 < 0 then goto L45e51c;
  #L45e4f6.  v14:= v3[v12];
  #L45e4fa.  v14:= v14 + v9 @kind int;
  #L45e4fc.  if v14 >= 0 then goto L45e516;
  #L45e500.  v15:= v4 + v12 @kind int;
  #L45e504.  v15:= v11[v15] @kind boolean;
  #L45e508.  if v15 == 0 then goto L45e516;
  #L45e50c.  v15:= v13 + 1;
  #L45e510.  v7[v13]:= v14;
  #L45e514.  v13:= v15;
  #L45e516.  v12:= v12 + -1;
  #L45e51a.  goto L45e4f2;
  #L45e51c.  if v9 >= 0 then goto L45e532;
  #L45e520.  v12:= v11[v8] @kind boolean;
  #L45e524.  if v12 == 0 then goto L45e532;
  #L45e528.  v12:= v13 + 1;
  #L45e52c.  v7[v13]:= v9;
  #L45e530.  v13:= v12;
  #L45e532.  v12:= 0I;
  #L45e534.  if v12 >= v4 then goto L45e55a;
  #L45e538.  v14:= v2[v12];
  #L45e53c.  v14:= v14 + v9 @kind int;
  #L45e53e.  if v14 >= 0 then goto L45e554;
  #L45e542.  v15:= v11[v12] @kind boolean;
  #L45e546.  if v15 == 0 then goto L45e554;
  #L45e54a.  v15:= v13 + 1;
  #L45e54e.  v7[v13]:= v14;
  #L45e552.  v13:= v15;
  #L45e554.  v12:= v12 + 1;
  #L45e558.  goto L45e534;
  #L45e55a.  call temp:= `copyOf`(v7, v13) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L45e560.  v7:= temp @kind object;
  #L45e562.  v12:= v4 + -1;
  #L45e566.  v14:= 0I;
  #L45e568.  if v12 < 0 then goto L45e590;
  #L45e56c.  v15:= v2[v12];
  #L45e570.  v15:= v15 + v9 @kind int;
  #L45e572.  if v15 <= 0 then goto L45e58a;
  #L45e576.  v16:= v11[v12] @kind boolean;
  #L45e57a.  if v16 == 0 then goto L45e58a;
  #L45e57e.  v16:= v14 + 1;
  #L45e582.  v10[v14]:= v15;
  #L45e586.  v14:= v16;
  #L45e58a.  v12:= v12 + -1;
  #L45e58e.  goto L45e568;
  #L45e590.  if v9 <= 0 then goto L45e5a6;
  #L45e594.  v2:= v11[v8] @kind boolean;
  #L45e598.  if v2 == 0 then goto L45e5a6;
  #L45e59c.  v2:= v14 + 1;
  #L45e5a0.  v10[v14]:= v9;
  #L45e5a4.  v14:= v2;
  #L45e5a6.  v2:= 0I;
  #L45e5a8.  if v2 >= v5 then goto L45e5d2;
  #L45e5ac.  v8:= v3[v2];
  #L45e5b0.  v8:= v8 + v9 @kind int;
  #L45e5b2.  if v8 <= 0 then goto L45e5cc;
  #L45e5b6.  v12:= v4 + v2 @kind int;
  #L45e5ba.  v12:= v11[v12] @kind boolean;
  #L45e5be.  if v12 == 0 then goto L45e5cc;
  #L45e5c2.  v12:= v14 + 1;
  #L45e5c6.  v10[v14]:= v8;
  #L45e5ca.  v14:= v12;
  #L45e5cc.  v2:= v2 + 1;
  #L45e5d0.  goto L45e5a8;
  #L45e5d2.  call temp:= `copyOf`(v10, v14) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L45e5d8.  v2:= temp @kind object;
  #L45e5da.  v3:= v2 @kind object;
  #L45e5dc.  v2:= v7 @kind object;
  #L45e5de.  v4:= v13;
  #L45e5e0.  v5:= v14;
  #L45e5e2.  goto L45e650;
  #L45e5e4.  call temp:= `h`(v19) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e5ea.  v2:= temp;
  #L45e5ec.  call temp:= `h`(v19) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e5f2.  v3:= temp;
  #L45e5f4.  v4:= new `int`[v2];
  #L45e5f8.  v5:= 0I;
  #L45e5fa.  if v5 >= v2 then goto L45e618;
  #L45e5fe.  call temp:= `h`(v19) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e604.  v8:= temp;
  #L45e606.  v8:= v8 + v7 @kind int;
  #L45e608.  v4[v5]:= v8;
  #L45e60c.  call `k`(v19) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L45e612.  v5:= v5 + 1;
  #L45e616.  goto L45e5fa;
  #L45e618.  v5:= new `int`[v3];
  #L45e61c.  v8:= 0I;
  #L45e61e.  if v8 >= v3 then goto L45e63c;
  #L45e622.  call temp:= `h`(v19) @signature `Ls3/a0;.h:()I` @kind virtual;
  #L45e628.  v9:= temp;
  #L45e62a.  v9:= v9 + v7 @kind int;
  #L45e62c.  v5[v8]:= v9;
  #L45e630.  call `k`(v19) @signature `Ls3/a0;.k:()V` @kind virtual;
  #L45e636.  v8:= v8 + 1;
  #L45e63a.  goto L45e61e;
  #L45e63c.  v17:= v4 @kind object;
  #L45e640.  v4:= v2;
  #L45e642.  v2:= v17 @kind object;
  #L45e646.  v18:= v5 @kind object;
  #L45e64a.  v5:= v3;
  #L45e64c.  v3:= v18 @kind object;
  #L45e650.  v6:= v6 + 1;
  #L45e654.  goto L45e470;
  #L45e658.  return @kind void;
}
procedure `int` `q`(`byte`[] v8 @kind object, `int` v9 ) @signature `Ls3/v;.q:([BI)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L45da78.  v0:= `@@s3.v.c` @type ^`java.lang.Object` @kind object;
  #L45da7c.  @monitorenter v0
  #L45da7e.  v1:= 0I;
  #L45da80.  v2:= 0I;
  #L45da82.  v3:= 0I;
  #L45da84.  if v2 >= v9 then goto L45dac8;
  #L45da88.  call temp:= `d`(v8, v2, v9) @signature `Ls3/v;.d:([BII)I` @kind static;
  #L45da8e.  v2:= temp;
  #L45da90.  if v2 >= v9 then goto L45da84;
  #L45da94.  v4:= `@@s3.v.d` @type ^`int`[] @kind object;
  #L45da98.  v5:= length @variable v4;
  #L45da9a.  if v5 > v3 then goto L45dab0;
  #L45da9e.  v5:= length @variable v4;
  #L45daa0.  v5:= v5 * 2;
  #L45daa4.  call temp:= `copyOf`(v4, v5) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L45daaa.  v4:= temp @kind object;
  #L45daac.  `@@s3.v.d` @type ^`int`[] := v4 @kind object;
  #L45dab0.  v4:= `@@s3.v.d` @type ^`int`[] @kind object;
  #L45dab4.  v5:= v3 + 1;
  #L45dab8.  v4[v3]:= v2;
  #L45dabc.  v2:= v2 + 3;
  #L45dac0.  v3:= v5;
  #L45dac2.  goto L45da84;
  #L45dac4.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45dac6.  goto L45db10;
  #L45dac8.  v9:= v9 - v3 @kind int;
  #L45daca.  v2:= 0I;
  #L45dacc.  v4:= 0I;
  #L45dace.  v5:= 0I;
  #L45dad0.  if v2 >= v3 then goto L45db02;
  #L45dad4.  v6:= `@@s3.v.d` @type ^`int`[] @kind object;
  #L45dad8.  v6:= v6[v2];
  #L45dadc.  v6:= v6 - v5 @kind int;
  #L45dade.  call `arraycopy`(v8, v5, v8, v4, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L45dae4.  v4:= v4 + v6 @kind int;
  #L45dae6.  v7:= v4 + 1;
  #L45daea.  v8[v4]:= v1 @kind byte;
  #L45daee.  v4:= v7 + 1;
  #L45daf2.  v8[v7]:= v1 @kind byte;
  #L45daf6.  v6:= v6 + 3;
  #L45dafa.  v5:= v5 + v6 @kind int;
  #L45dafc.  v2:= v2 + 1;
  #L45db00.  goto L45dad0;
  #L45db02.  v1:= v9 - v4 @kind int;
  #L45db06.  call `arraycopy`(v8, v5, v8, v4, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L45db0c.  @monitorexit v0
  #L45db0e.  return v9;
  #L45db10.  @monitorexit v0
  #L45db12.  throw v8;
  catch `java.lang.Throwable` @[L45da88..L45db12] goto L45dac4;
}
