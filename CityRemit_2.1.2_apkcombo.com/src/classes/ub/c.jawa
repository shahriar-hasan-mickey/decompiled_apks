record `ub.c` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `ub.c$a` `@@ub.c.o` @AccessFlag PUBLIC_STATIC_FINAL;
global `ub.c` `@@ub.c.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lub/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L47d024.  v0:= new `ub.c$a`;
  #L47d028.  v1:= 0I;
  #L47d02a.  call `<init>`(v0, v1) @signature `Lub/c$a;.<init>:(Lkotlin/jvm/internal/g;)V` @kind direct;
  #L47d030.  `@@ub.c.o` @type ^`ub.c$a` := v0 @kind object;
  #L47d034.  v0:= `@@ob.b.a` @type ^`ob.a` @kind object;
  #L47d038.  call temp:= `b`(v0) @signature `Lob/a;.b:()Lub/c;` @kind virtual;
  #L47d03e.  v0:= temp @kind object;
  #L47d040.  `@@ub.c.p` @type ^`ub.c` := v0 @kind object;
  #L47d044.  return @kind void;
}
procedure `void` `<init>`(`ub.c` v0 @kind this) @signature `Lub/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47d058.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47d05e.  return @kind void;
}
procedure `ub.c` `a`() @signature `Lub/c;.a:()Lub/c;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L47d00c.  v0:= `@@ub.c.p` @type ^`ub.c` @kind object;
  #L47d010.  return v0 @kind object;
}
procedure `int` `b`() @signature `Lub/c;.b:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
