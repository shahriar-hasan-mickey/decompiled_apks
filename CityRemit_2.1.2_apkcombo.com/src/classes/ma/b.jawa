record `ma.b` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `ma.b.o` @AccessFlag PRIVATE_FINAL;
}
global `ma.b` `@@ma.b.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ma.b` `@@ma.b.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ma.b`[] `@@ma.b.r` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lma/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e53c8.  v0:= new `ma.b`;
  #L3e53cc.  v1:= "auto" @kind object;
  #L3e53d0.  v2:= 0I;
  #L3e53d2.  call `<init>`(v0, v1, v2, v1) @signature `Lma/b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3e53d8.  `@@ma.b.p` @type ^`ma.b` := v0 @kind object;
  #L3e53dc.  v1:= new `ma.b`;
  #L3e53e0.  v3:= "locked" @kind object;
  #L3e53e4.  v4:= 1I;
  #L3e53e6.  call `<init>`(v1, v3, v4, v3) @signature `Lma/b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3e53ec.  `@@ma.b.q` @type ^`ma.b` := v1 @kind object;
  #L3e53f0.  v3:= 2I;
  #L3e53f2.  v3:= new `ma.b`[v3];
  #L3e53f6.  v3[v2]:= v0 @kind object;
  #L3e53fa.  v3[v4]:= v1 @kind object;
  #L3e53fe.  `@@ma.b.r` @type ^`ma.b`[] := v3 @kind object;
  #L3e5402.  return @kind void;
}
procedure `void` `<init>`(`ma.b` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lma/b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3e5414.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3e541a.  v0.`ma.b.o` @type ^`java.lang.String` := v3 @kind object;
  #L3e541e.  return @kind void;
}
procedure `ma.b` `c`(`java.lang.String` v5 @kind object) @signature `Lma/b;.c:(Ljava/lang/String;)Lma/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e5340.  call temp:= `values`() @signature `Lma/b;.values:()[Lma/b;` @kind static;
  #L3e5346.  v0:= temp @kind object;
  #L3e5348.  v1:= length @variable v0;
  #L3e534a.  v2:= 0I;
  #L3e534c.  if v2 >= v1 then goto L3e536c;
  #L3e5350.  v3:= v0[v2] @kind object;
  #L3e5354.  v4:= v3.`ma.b.o` @type ^`java.lang.String` @kind object;
  #L3e5358.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e535e.  v4:= temp;
  #L3e5360.  if v4 == 0 then goto L3e5366;
  #L3e5364.  return v3 @kind object;
  #L3e5366.  v2:= v2 + 1;
  #L3e536a.  goto L3e534c;
  #L3e536c.  v5:= 0I;
  #L3e536e.  return v5 @kind object;
}
procedure `ma.b` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lma/b;.valueOf:(Ljava/lang/String;)Lma/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5380.  v0:= constclass @type ^`ma.b` @kind object;
  #L3e5384.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3e538a.  v1:= temp @kind object;
  #L3e538c.  v1:= (`ma.b`) v1 @kind object;
  #L3e5390.  return v1 @kind object;
}
procedure `ma.b`[] `values`() @signature `Lma/b;.values:()[Lma/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e53a4.  v0:= `@@ma.b.r` @type ^`ma.b`[] @kind object;
  #L3e53a8.  call temp:= `clone`(v0) @signature `[Lma/b;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3e53ae.  v0:= temp @kind object;
  #L3e53b0.  v0:= (`ma.b`[]) v0 @kind object;
  #L3e53b4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`ma.b` v1 @kind this) @signature `Lma/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5328.  v0:= v1.`ma.b.o` @type ^`java.lang.String` @kind object;
  #L3e532c.  return v0 @kind object;
}
