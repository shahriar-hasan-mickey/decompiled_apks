record `io.flutter.view.c$l` @kind class @AccessFlag  {
  `boolean` `io.flutter.view.c$l.A` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$l.B` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$l.C` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$l.D` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$l.E` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$l.F` @AccessFlag PRIVATE;
  `java.lang.String` `io.flutter.view.c$l.G` @AccessFlag PRIVATE;
  `java.lang.String` `io.flutter.view.c$l.H` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$l.I` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$l.J` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$l.K` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$l.L` @AccessFlag PRIVATE;
  `float`[] `io.flutter.view.c$l.M` @AccessFlag PRIVATE;
  `io.flutter.view.c$l` `io.flutter.view.c$l.N` @AccessFlag PRIVATE;
  `java.util.List` `io.flutter.view.c$l.O` @AccessFlag PRIVATE;
  `java.util.List` `io.flutter.view.c$l.P` @AccessFlag PRIVATE;
  `java.util.List` `io.flutter.view.c$l.Q` @AccessFlag PRIVATE;
  `io.flutter.view.c$h` `io.flutter.view.c$l.R` @AccessFlag PRIVATE;
  `io.flutter.view.c$h` `io.flutter.view.c$l.S` @AccessFlag PRIVATE;
  `boolean` `io.flutter.view.c$l.T` @AccessFlag PRIVATE;
  `float`[] `io.flutter.view.c$l.U` @AccessFlag PRIVATE;
  `boolean` `io.flutter.view.c$l.V` @AccessFlag PRIVATE;
  `float`[] `io.flutter.view.c$l.W` @AccessFlag PRIVATE;
  `android.graphics.Rect` `io.flutter.view.c$l.X` @AccessFlag PRIVATE;
  `io.flutter.view.c` `io.flutter.view.c$l.a` @AccessFlag FINAL;
  `int` `io.flutter.view.c$l.b` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$l.c` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$l.d` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$l.e` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$l.f` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$l.g` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$l.h` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$l.i` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$l.j` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$l.k` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$l.l` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$l.m` @AccessFlag PRIVATE;
  `float` `io.flutter.view.c$l.n` @AccessFlag PRIVATE;
  `java.lang.String` `io.flutter.view.c$l.o` @AccessFlag PRIVATE;
  `java.util.List` `io.flutter.view.c$l.p` @AccessFlag PRIVATE;
  `java.lang.String` `io.flutter.view.c$l.q` @AccessFlag PRIVATE;
  `java.util.List` `io.flutter.view.c$l.r` @AccessFlag PRIVATE;
  `java.lang.String` `io.flutter.view.c$l.s` @AccessFlag PRIVATE;
  `java.util.List` `io.flutter.view.c$l.t` @AccessFlag PRIVATE;
  `java.lang.String` `io.flutter.view.c$l.u` @AccessFlag PRIVATE;
  `java.util.List` `io.flutter.view.c$l.v` @AccessFlag PRIVATE;
  `java.lang.String` `io.flutter.view.c$l.w` @AccessFlag PRIVATE;
  `java.util.List` `io.flutter.view.c$l.x` @AccessFlag PRIVATE;
  `java.lang.String` `io.flutter.view.c$l.y` @AccessFlag PRIVATE;
  `int` `io.flutter.view.c$l.z` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.flutter.view.c$l` v1 @kind this, `io.flutter.view.c` v2 @kind object) @signature `Lio/flutter/view/c$l;.<init>:(Lio/flutter/view/c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L38b1dc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38b1e2.  v0:= -1I;
  #L38b1e4.  v1.`io.flutter.view.c$l.b` @type ^`int` := v0;
  #L38b1e8.  v1.`io.flutter.view.c$l.z` @type ^`int` := v0;
  #L38b1ec.  v0:= 0I;
  #L38b1ee.  v1.`io.flutter.view.c$l.A` @type ^`boolean` := v0 @kind boolean;
  #L38b1f2.  v0:= new `java.util.ArrayList`;
  #L38b1f6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L38b1fc.  v1.`io.flutter.view.c$l.O` @type ^`java.util.List` := v0 @kind object;
  #L38b200.  v0:= new `java.util.ArrayList`;
  #L38b204.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L38b20a.  v1.`io.flutter.view.c$l.P` @type ^`java.util.List` := v0 @kind object;
  #L38b20e.  v0:= 1I;
  #L38b210.  v1.`io.flutter.view.c$l.T` @type ^`boolean` := v0 @kind boolean;
  #L38b214.  v1.`io.flutter.view.c$l.V` @type ^`boolean` := v0 @kind boolean;
  #L38b218.  v1.`io.flutter.view.c$l.a` @type ^`io.flutter.view.c` := v2 @kind object;
  #L38b21c.  return @kind void;
}
procedure `java.util.List` `A`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.A:(Lio/flutter/view/c$l;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38b064.  v0:= v0.`io.flutter.view.c$l.Q` @type ^`java.util.List` @kind object;
  #L38b068.  return v0 @kind object;
}
procedure `java.util.List` `B`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.B:(Lio/flutter/view/c$l;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38b07c.  v0:= v0.`io.flutter.view.c$l.O` @type ^`java.util.List` @kind object;
  #L38b080.  return v0 @kind object;
}
procedure `java.lang.String` `C`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.C:(Lio/flutter/view/c$l;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38af6c.  v0:= v0.`io.flutter.view.c$l.s` @type ^`java.lang.String` @kind object;
  #L38af70.  return v0 @kind object;
}
procedure `java.util.List` `D`(`io.flutter.view.c$l` v0 @kind object, `java.util.List` v1 @kind object) @signature `Lio/flutter/view/c$l;.D:(Lio/flutter/view/c$l;Ljava/util/List;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38b094.  v0.`io.flutter.view.c$l.r` @type ^`java.util.List` := v1 @kind object;
  #L38b098.  return v1 @kind object;
}
procedure `java.util.List` `E`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.E:(Lio/flutter/view/c$l;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38b0ac.  v0:= v0.`io.flutter.view.c$l.t` @type ^`java.util.List` @kind object;
  #L38b0b0.  return v0 @kind object;
}
procedure `java.lang.String` `F`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.F:(Lio/flutter/view/c$l;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38af84.  v0:= v0.`io.flutter.view.c$l.u` @type ^`java.lang.String` @kind object;
  #L38af88.  return v0 @kind object;
}
procedure `java.util.List` `G`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.G:(Lio/flutter/view/c$l;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38b0c4.  v0:= v0.`io.flutter.view.c$l.v` @type ^`java.util.List` @kind object;
  #L38b0c8.  return v0 @kind object;
}
procedure `io.flutter.view.c$l` `H`(`io.flutter.view.c$l` v0 @kind object, `float`[] v1 @kind object) @signature `Lio/flutter/view/c$l;.H:(Lio/flutter/view/c$l;[F)Lio/flutter/view/c$l;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ad10.  call temp:= `q0`(v0, v1) @signature `Lio/flutter/view/c$l;.q0:([F)Lio/flutter/view/c$l;` @kind direct;
  #L38ad16.  v0:= temp @kind object;
  #L38ad18.  return v0 @kind object;
}
procedure `void` `I`(`io.flutter.view.c$l` v0 @kind object, `java.nio.ByteBuffer` v1 @kind object, `java.lang.String`[] v2 @kind object, `java.nio.ByteBuffer`[] v3 @kind object) @signature `Lio/flutter/view/c$l;.I:(Lio/flutter/view/c$l;Ljava/nio/ByteBuffer;[Ljava/lang/String;[Ljava/nio/ByteBuffer;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38b230.  call `x0`(v0, v1, v2, v3) @signature `Lio/flutter/view/c$l;.x0:(Ljava/nio/ByteBuffer;[Ljava/lang/String;[Ljava/nio/ByteBuffer;)V` @kind direct;
  #L38b236.  return @kind void;
}
procedure `boolean` `J`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.J:(Lio/flutter/view/c$l;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38a7e0.  v0:= v0.`io.flutter.view.c$l.A` @type ^`boolean` @kind boolean;
  #L38a7e4.  return v0;
}
procedure `boolean` `K`(`io.flutter.view.c$l` v0 @kind object, `boolean` v1 ) @signature `Lio/flutter/view/c$l;.K:(Lio/flutter/view/c$l;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38a7f8.  v0.`io.flutter.view.c$l.V` @type ^`boolean` := v1 @kind boolean;
  #L38a7fc.  return v1;
}
procedure `boolean` `L`(`io.flutter.view.c$l` v0 @kind object, `boolean` v1 ) @signature `Lio/flutter/view/c$l;.L:(Lio/flutter/view/c$l;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38a810.  v0.`io.flutter.view.c$l.T` @type ^`boolean` := v1 @kind boolean;
  #L38a814.  return v1;
}
procedure `void` `M`(`io.flutter.view.c$l` v0 @kind object, `float`[] v1 @kind object, `java.util.Set` v2 @kind object, `boolean` v3 ) @signature `Lio/flutter/view/c$l;.M:(Lio/flutter/view/c$l;[FLjava/util/Set;Z)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38b248.  call `w0`(v0, v1, v2, v3) @signature `Lio/flutter/view/c$l;.w0:([FLjava/util/Set;Z)V` @kind direct;
  #L38b24e.  return @kind void;
}
procedure `void` `N`(`io.flutter.view.c$l` v0 @kind object, `java.util.List` v1 @kind object) @signature `Lio/flutter/view/c$l;.N:(Lio/flutter/view/c$l;Ljava/util/List;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38b260.  call `c0`(v0, v1) @signature `Lio/flutter/view/c$l;.c0:(Ljava/util/List;)V` @kind direct;
  #L38b266.  return @kind void;
}
procedure `boolean` `O`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.O:(Lio/flutter/view/c$l;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38a828.  call temp:= `f0`(v0) @signature `Lio/flutter/view/c$l;.f0:()Z` @kind direct;
  #L38a82e.  v0:= temp;
  #L38a830.  return v0;
}
procedure `float` `P`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.P:(Lio/flutter/view/c$l;)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38aa88.  v0:= v0.`io.flutter.view.c$l.l` @type ^`float`;
  #L38aa8c.  return v0;
}
procedure `float` `Q`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.Q:(Lio/flutter/view/c$l;)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38aaa0.  v0:= v0.`io.flutter.view.c$l.m` @type ^`float`;
  #L38aaa4.  return v0;
}
procedure `float` `R`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.R:(Lio/flutter/view/c$l;)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38aab8.  v0:= v0.`io.flutter.view.c$l.n` @type ^`float`;
  #L38aabc.  return v0;
}
procedure `boolean` `S`(`io.flutter.view.c$l` v0 @kind object, `io.flutter.view.c$g` v1 @kind object) @signature `Lio/flutter/view/c$l;.S:(Lio/flutter/view/c$l;Lio/flutter/view/c$g;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38a844.  call temp:= `m0`(v0, v1) @signature `Lio/flutter/view/c$l;.m0:(Lio/flutter/view/c$g;)Z` @kind direct;
  #L38a84a.  v0:= temp;
  #L38a84c.  return v0;
}
procedure `int` `T`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.T:(Lio/flutter/view/c$l;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ac68.  v0:= v0.`io.flutter.view.c$l.k` @type ^`int`;
  #L38ac6c.  return v0;
}
procedure `java.util.List` `U`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.U:(Lio/flutter/view/c$l;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38b0dc.  v0:= v0.`io.flutter.view.c$l.P` @type ^`java.util.List` @kind object;
  #L38b0e0.  return v0 @kind object;
}
procedure `boolean` `V`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.V:(Lio/flutter/view/c$l;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38a860.  call temp:= `e0`(v0) @signature `Lio/flutter/view/c$l;.e0:()Z` @kind direct;
  #L38a866.  v0:= temp;
  #L38a868.  return v0;
}
procedure `boolean` `W`(`io.flutter.view.c$l` v0 @kind object, `io.flutter.view.c$i` v1 @kind object) @signature `Lio/flutter/view/c$l;.W:(Lio/flutter/view/c$l;Lio/flutter/view/c$i;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38a87c.  call temp:= `n0`(v0, v1) @signature `Lio/flutter/view/c$l;.n0:(Lio/flutter/view/c$i;)Z` @kind direct;
  #L38a882.  v0:= temp;
  #L38a884.  return v0;
}
procedure `java.lang.String` `X`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.X:(Lio/flutter/view/c$l;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38af9c.  v0:= v0.`io.flutter.view.c$l.o` @type ^`java.lang.String` @kind object;
  #L38afa0.  return v0 @kind object;
}
procedure `java.lang.String` `Y`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.Y:(Lio/flutter/view/c$l;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38afb4.  v0:= v0.`io.flutter.view.c$l.G` @type ^`java.lang.String` @kind object;
  #L38afb8.  return v0 @kind object;
}
procedure `int` `Z`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.Z:(Lio/flutter/view/c$l;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ac80.  v0:= v0.`io.flutter.view.c$l.D` @type ^`int`;
  #L38ac84.  return v0;
}
procedure `int` `a`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.a:(Lio/flutter/view/c$l;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ab28.  v0:= v0.`io.flutter.view.c$l.b` @type ^`int`;
  #L38ab2c.  return v0;
}
procedure `int` `a0`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.a0:(Lio/flutter/view/c$l;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ac98.  v0:= v0.`io.flutter.view.c$l.E` @type ^`int`;
  #L38ac9c.  return v0;
}
procedure `int` `b`(`io.flutter.view.c$l` v0 @kind object, `int` v1 ) @signature `Lio/flutter/view/c$l;.b:(Lio/flutter/view/c$l;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ab40.  v0.`io.flutter.view.c$l.b` @type ^`int` := v1;
  #L38ab44.  return v1;
}
procedure `java.lang.String` `b0`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.b0:(Lio/flutter/view/c$l;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38afcc.  call temp:= `j0`(v0) @signature `Lio/flutter/view/c$l;.j0:()Ljava/lang/String;` @kind direct;
  #L38afd2.  v0:= temp @kind object;
  #L38afd4.  return v0 @kind object;
}
procedure `int` `c`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.c:(Lio/flutter/view/c$l;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ab58.  v0:= v0.`io.flutter.view.c$l.j` @type ^`int`;
  #L38ab5c.  return v0;
}
procedure `void` `c0`(`io.flutter.view.c$l` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lio/flutter/view/c$l;.c0:(Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L38b278.  v0:= `@@io.flutter.view.c$i.A` @type ^`io.flutter.view.c$i` @kind object;
  #L38b27c.  call temp:= `p0`(v2, v0) @signature `Lio/flutter/view/c$l;.p0:(Lio/flutter/view/c$i;)Z` @kind direct;
  #L38b282.  v0:= temp;
  #L38b284.  if v0 == 0 then goto L38b28e;
  #L38b288.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38b28e.  v0:= v2.`io.flutter.view.c$l.O` @type ^`java.util.List` @kind object;
  #L38b292.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L38b298.  v0:= temp @kind object;
  #L38b29a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L38b2a0.  v1:= temp;
  #L38b2a2.  if v1 == 0 then goto L38b2ba;
  #L38b2a6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38b2ac.  v1:= temp @kind object;
  #L38b2ae.  v1:= (`io.flutter.view.c$l`) v1 @kind object;
  #L38b2b2.  call `c0`(v1, v3) @signature `Lio/flutter/view/c$l;.c0:(Ljava/util/List;)V` @kind direct;
  #L38b2b8.  goto L38b29a;
  #L38b2ba.  return @kind void;
}
procedure `boolean` `d`(`io.flutter.view.c$l` v0 @kind object, `gb.d` v1 @kind object) @signature `Lio/flutter/view/c$l;.d:(Lio/flutter/view/c$l;Lgb/d;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38a770.  call temp:= `u0`(v0, v1) @signature `Lio/flutter/view/c$l;.u0:(Lio/flutter/view/c$l;Lgb/d;)Z` @kind static;
  #L38a776.  v0:= temp;
  #L38a778.  return v0;
}
procedure `android.text.SpannableString` `d0`(`io.flutter.view.c$l` v4 @kind this, `java.lang.String` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lio/flutter/view/c$l;.d0:(Ljava/lang/String;Ljava/util/List;)Landroid/text/SpannableString;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38a6b0.  if v5 != 0 then goto L38a6b8;
  #L38a6b4.  v5:= 0I;
  #L38a6b6.  return v5 @kind object;
  #L38a6b8.  v0:= new `android.text.SpannableString`;
  #L38a6bc.  call `<init>`(v0, v5) @signature `Landroid/text/SpannableString;.<init>:(Ljava/lang/CharSequence;)V` @kind direct;
  #L38a6c2.  if v6 == 0 then goto L38a75c;
  #L38a6c6.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L38a6cc.  v5:= temp @kind object;
  #L38a6ce.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L38a6d4.  v6:= temp;
  #L38a6d6.  if v6 == 0 then goto L38a75c;
  #L38a6da.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38a6e0.  v6:= temp @kind object;
  #L38a6e2.  v6:= (`io.flutter.view.c$n`) v6 @kind object;
  #L38a6e6.  v1:= `@@io.flutter.view.c$e.a` @type ^`int`[] @kind object;
  #L38a6ea.  v2:= v6.`io.flutter.view.c$n.c` @type ^`io.flutter.view.c$o` @kind object;
  #L38a6ee.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L38a6f4.  v2:= temp;
  #L38a6f6.  v1:= v1[v2];
  #L38a6fa.  v2:= 1I;
  #L38a6fc.  v3:= 0I;
  #L38a6fe.  if v1 == v2 then goto L38a736;
  #L38a702.  v2:= 2I;
  #L38a704.  if v1 == v2 then goto L38a70a;
  #L38a708.  goto L38a6ce;
  #L38a70a.  v1:= v6 @kind object;
  #L38a70c.  v1:= (`io.flutter.view.c$j`) v1 @kind object;
  #L38a710.  v1:= v1.`io.flutter.view.c$j.d` @type ^`java.lang.String` @kind object;
  #L38a714.  call temp:= `forLanguageTag`(v1) @signature `Ljava/util/Locale;.forLanguageTag:(Ljava/lang/String;)Ljava/util/Locale;` @kind static;
  #L38a71a.  v1:= temp @kind object;
  #L38a71c.  v2:= new `android.text.style.LocaleSpan`;
  #L38a720.  call `<init>`(v2, v1) @signature `Landroid/text/style/LocaleSpan;.<init>:(Ljava/util/Locale;)V` @kind direct;
  #L38a726.  v1:= v6.`io.flutter.view.c$n.a` @type ^`int`;
  #L38a72a.  v6:= v6.`io.flutter.view.c$n.b` @type ^`int`;
  #L38a72e.  call `setSpan`(v0, v2, v1, v6, v3) @signature `Landroid/text/SpannableString;.setSpan:(Ljava/lang/Object;III)V` @kind virtual;
  #L38a734.  goto L38a6ce;
  #L38a736.  v1:= new `android.text.style.TtsSpan$Builder`;
  #L38a73a.  v2:= "android.type.verbatim" @kind object;
  #L38a73e.  call `<init>`(v1, v2) @signature `Landroid/text/style/TtsSpan$Builder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38a744.  call temp:= `build`(v1) @signature `Landroid/text/style/TtsSpan$Builder;.build:()Landroid/text/style/TtsSpan;` @kind virtual;
  #L38a74a.  v1:= temp @kind object;
  #L38a74c.  v2:= v6.`io.flutter.view.c$n.a` @type ^`int`;
  #L38a750.  v6:= v6.`io.flutter.view.c$n.b` @type ^`int`;
  #L38a754.  call `setSpan`(v0, v1, v2, v6, v3) @signature `Landroid/text/SpannableString;.setSpan:(Ljava/lang/Object;III)V` @kind virtual;
  #L38a75a.  goto L38a6ce;
  #L38a75c.  return v0 @kind object;
}
procedure `int` `e`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.e:(Lio/flutter/view/c$l;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ab70.  v0:= v0.`io.flutter.view.c$l.i` @type ^`int`;
  #L38ab74.  return v0;
}
procedure `boolean` `e0`(`io.flutter.view.c$l` v3 @kind this) @signature `Lio/flutter/view/c$l;.e0:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L38a898.  v0:= v3.`io.flutter.view.c$l.o` @type ^`java.lang.String` @kind object;
  #L38a89c.  v1:= 0I;
  #L38a89e.  if v0 != 0 then goto L38a8ac;
  #L38a8a2.  v2:= v3.`io.flutter.view.c$l.H` @type ^`java.lang.String` @kind object;
  #L38a8a6.  if v2 != 0 then goto L38a8ac;
  #L38a8aa.  return v1;
  #L38a8ac.  if v0 == 0 then goto L38a8c4;
  #L38a8b0.  v2:= v3.`io.flutter.view.c$l.H` @type ^`java.lang.String` @kind object;
  #L38a8b4.  if v2 == 0 then goto L38a8c4;
  #L38a8b8.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38a8be.  v0:= temp;
  #L38a8c0.  if v0 != 0 then goto L38a8c6;
  #L38a8c4.  v1:= 1I;
  #L38a8c6.  return v1;
}
procedure `android.graphics.Rect` `f`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.f:(Lio/flutter/view/c$l;)Landroid/graphics/Rect;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38a67c.  call temp:= `i0`(v0) @signature `Lio/flutter/view/c$l;.i0:()Landroid/graphics/Rect;` @kind direct;
  #L38a682.  v0:= temp @kind object;
  #L38a684.  return v0 @kind object;
}
procedure `boolean` `f0`(`io.flutter.view.c$l` v2 @kind this) @signature `Lio/flutter/view/c$l;.f0:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L38a8d8.  v0:= v2.`io.flutter.view.c$l.l` @type ^`float`;
  #L38a8dc.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Float;.isNaN:(F)Z` @kind static;
  #L38a8e2.  v0:= temp;
  #L38a8e4.  if v0 != 0 then goto L38a90c;
  #L38a8e8.  v0:= v2.`io.flutter.view.c$l.F` @type ^`float`;
  #L38a8ec.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Float;.isNaN:(F)Z` @kind static;
  #L38a8f2.  v0:= temp;
  #L38a8f4.  if v0 != 0 then goto L38a90c;
  #L38a8f8.  v0:= v2.`io.flutter.view.c$l.F` @type ^`float`;
  #L38a8fc.  v1:= v2.`io.flutter.view.c$l.l` @type ^`float`;
  #L38a900.  v0:= fcmpl(v0, v1);
  #L38a904.  if v0 == 0 then goto L38a90c;
  #L38a908.  v0:= 1I;
  #L38a90a.  goto L38a90e;
  #L38a90c.  v0:= 0I;
  #L38a90e.  return v0;
}
procedure `boolean` `g`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.g:(Lio/flutter/view/c$l;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38a78c.  call temp:= `r0`(v0) @signature `Lio/flutter/view/c$l;.r0:()Z` @kind direct;
  #L38a792.  v0:= temp;
  #L38a794.  return v0;
}
procedure `void` `g0`(`io.flutter.view.c$l` v3 @kind this) @signature `Lio/flutter/view/c$l;.g0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L38b2cc.  v0:= v3.`io.flutter.view.c$l.T` @type ^`boolean` @kind boolean;
  #L38b2d0.  if v0 != 0 then goto L38b2d6;
  #L38b2d4.  return @kind void;
  #L38b2d6.  v0:= 0I;
  #L38b2d8.  v3.`io.flutter.view.c$l.T` @type ^`boolean` := v0 @kind boolean;
  #L38b2dc.  v1:= v3.`io.flutter.view.c$l.U` @type ^`float`[] @kind object;
  #L38b2e0.  if v1 != 0 then goto L38b2f0;
  #L38b2e4.  v1:= 16I;
  #L38b2e8.  v1:= new `float`[v1];
  #L38b2ec.  v3.`io.flutter.view.c$l.U` @type ^`float`[] := v1 @kind object;
  #L38b2f0.  v1:= v3.`io.flutter.view.c$l.U` @type ^`float`[] @kind object;
  #L38b2f4.  v2:= v3.`io.flutter.view.c$l.M` @type ^`float`[] @kind object;
  #L38b2f8.  call temp:= `invertM`(v1, v0, v2, v0) @signature `Landroid/opengl/Matrix;.invertM:([FI[FI)Z` @kind static;
  #L38b2fe.  v0:= temp;
  #L38b300.  if v0 != 0 then goto L38b310;
  #L38b304.  v0:= v3.`io.flutter.view.c$l.U` @type ^`float`[] @kind object;
  #L38b308.  v1:= 0I;
  #L38b30a.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([FF)V` @kind static;
  #L38b310.  return @kind void;
}
procedure `boolean` `h`(`io.flutter.view.c$l` v0 @kind object, `io.flutter.view.c$i` v1 @kind object) @signature `Lio/flutter/view/c$l;.h:(Lio/flutter/view/c$l;Lio/flutter/view/c$i;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38a7a8.  call temp:= `p0`(v0, v1) @signature `Lio/flutter/view/c$l;.p0:(Lio/flutter/view/c$i;)Z` @kind direct;
  #L38a7ae.  v0:= temp;
  #L38a7b0.  return v0;
}
procedure `io.flutter.view.c$l` `h0`(`io.flutter.view.c$l` v2 @kind this, `gb.d` v3 @kind object) @signature `Lio/flutter/view/c$l;.h0:(Lgb/d;)Lio/flutter/view/c$l;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L38ad2c.  v0:= v2.`io.flutter.view.c$l.N` @type ^`io.flutter.view.c$l` @kind object;
  #L38ad30.  if v0 == 0 then goto L38ad48;
  #L38ad34.  call temp:= `test`(v3, v0) @signature `Lgb/d;.test:(Ljava/lang/Object;)Z` @kind interface;
  #L38ad3a.  v1:= temp;
  #L38ad3c.  if v1 == 0 then goto L38ad42;
  #L38ad40.  return v0 @kind object;
  #L38ad42.  v0:= v0.`io.flutter.view.c$l.N` @type ^`io.flutter.view.c$l` @kind object;
  #L38ad46.  goto L38ad30;
  #L38ad48.  v3:= 0I;
  #L38ad4a.  return v3 @kind object;
}
procedure `int` `i`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.i:(Lio/flutter/view/c$l;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ab88.  v0:= v0.`io.flutter.view.c$l.g` @type ^`int`;
  #L38ab8c.  return v0;
}
procedure `android.graphics.Rect` `i0`(`io.flutter.view.c$l` v1 @kind this) @signature `Lio/flutter/view/c$l;.i0:()Landroid/graphics/Rect;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L38a698.  v0:= v1.`io.flutter.view.c$l.X` @type ^`android.graphics.Rect` @kind object;
  #L38a69c.  return v0 @kind object;
}
procedure `int` `j`(`io.flutter.view.c$l` v0 @kind object, `int` v1 ) @signature `Lio/flutter/view/c$l;.j:(Lio/flutter/view/c$l;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38aba0.  v0.`io.flutter.view.c$l.g` @type ^`int` := v1;
  #L38aba4.  return v1;
}
procedure `java.lang.String` `j0`(`io.flutter.view.c$l` v3 @kind this) @signature `Lio/flutter/view/c$l;.j0:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L38afe8.  v0:= `@@io.flutter.view.c$i.B` @type ^`io.flutter.view.c$i` @kind object;
  #L38afec.  call temp:= `p0`(v3, v0) @signature `Lio/flutter/view/c$l;.p0:(Lio/flutter/view/c$i;)Z` @kind direct;
  #L38aff2.  v0:= temp;
  #L38aff4.  if v0 == 0 then goto L38b012;
  #L38aff8.  v0:= v3.`io.flutter.view.c$l.o` @type ^`java.lang.String` @kind object;
  #L38affc.  if v0 == 0 then goto L38b012;
  #L38b000.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L38b006.  v0:= temp;
  #L38b008.  if v0 != 0 then goto L38b012;
  #L38b00c.  v0:= v3.`io.flutter.view.c$l.o` @type ^`java.lang.String` @kind object;
  #L38b010.  return v0 @kind object;
  #L38b012.  v0:= v3.`io.flutter.view.c$l.O` @type ^`java.util.List` @kind object;
  #L38b016.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L38b01c.  v0:= temp @kind object;
  #L38b01e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L38b024.  v1:= temp;
  #L38b026.  if v1 == 0 then goto L38b050;
  #L38b02a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38b030.  v1:= temp @kind object;
  #L38b032.  v1:= (`io.flutter.view.c$l`) v1 @kind object;
  #L38b036.  call temp:= `j0`(v1) @signature `Lio/flutter/view/c$l;.j0:()Ljava/lang/String;` @kind direct;
  #L38b03c.  v1:= temp @kind object;
  #L38b03e.  if v1 == 0 then goto L38b01e;
  #L38b042.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L38b048.  v2:= temp;
  #L38b04a.  if v2 != 0 then goto L38b01e;
  #L38b04e.  return v1 @kind object;
  #L38b050.  v0:= 0I;
  #L38b052.  return v0 @kind object;
}
procedure `int` `k`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.k:(Lio/flutter/view/c$l;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38abb8.  v0:= v0.`io.flutter.view.c$l.h` @type ^`int`;
  #L38abbc.  return v0;
}
procedure `java.util.List` `k0`(`io.flutter.view.c$l` v9 @kind this, `java.nio.ByteBuffer` v10 @kind object, `java.nio.ByteBuffer`[] v11 @kind object) @signature `Lio/flutter/view/c$l;.k0:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L38b0f4.  call temp:= `getInt`(v10) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b0fa.  v0:= temp;
  #L38b0fc.  v1:= 0I;
  #L38b0fe.  v2:= -1I;
  #L38b100.  if v0 != v2 then goto L38b106;
  #L38b104.  return v1 @kind object;
  #L38b106.  v2:= new `java.util.ArrayList`;
  #L38b10a.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L38b110.  v3:= 0I;
  #L38b112.  if v3 >= v0 then goto L38b1ca;
  #L38b116.  call temp:= `getInt`(v10) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b11c.  v4:= temp;
  #L38b11e.  call temp:= `getInt`(v10) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b124.  v5:= temp;
  #L38b126.  call temp:= `values`() @signature `Lio/flutter/view/c$o;.values:()[Lio/flutter/view/c$o;` @kind static;
  #L38b12c.  v6:= temp @kind object;
  #L38b12e.  call temp:= `getInt`(v10) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b134.  v7:= temp;
  #L38b136.  v6:= v6[v7] @kind object;
  #L38b13a.  v7:= `@@io.flutter.view.c$e.a` @type ^`int`[] @kind object;
  #L38b13e.  call temp:= `ordinal`(v6) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L38b144.  v8:= temp;
  #L38b146.  v7:= v7[v8];
  #L38b14a.  v8:= 1I;
  #L38b14c.  if v7 == v8 then goto L38b1a2;
  #L38b150.  v8:= 2I;
  #L38b152.  if v7 == v8 then goto L38b158;
  #L38b156.  goto L38b1c4;
  #L38b158.  call temp:= `getInt`(v10) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b15e.  v7:= temp;
  #L38b160.  v7:= v11[v7] @kind object;
  #L38b164.  v8:= new `io.flutter.view.c$j`;
  #L38b168.  call `<init>`(v8, v1) @signature `Lio/flutter/view/c$j;.<init>:(Lio/flutter/view/c$a;)V` @kind direct;
  #L38b16e.  v8.`io.flutter.view.c$n.a` @type ^`int` := v4;
  #L38b172.  v8.`io.flutter.view.c$n.b` @type ^`int` := v5;
  #L38b176.  v8.`io.flutter.view.c$n.c` @type ^`io.flutter.view.c$o` := v6 @kind object;
  #L38b17a.  v4:= "UTF-8" @kind object;
  #L38b17e.  call temp:= `forName`(v4) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L38b184.  v4:= temp @kind object;
  #L38b186.  call temp:= `decode`(v4, v7) @signature `Ljava/nio/charset/Charset;.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;` @kind virtual;
  #L38b18c.  v4:= temp @kind object;
  #L38b18e.  call temp:= `toString`(v4) @signature `Ljava/nio/CharBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L38b194.  v4:= temp @kind object;
  #L38b196.  v8.`io.flutter.view.c$j.d` @type ^`java.lang.String` := v4 @kind object;
  #L38b19a.  call temp:= `add`(v2, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38b1a0.  goto L38b1c4;
  #L38b1a2.  call temp:= `getInt`(v10) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b1a8.  v7:= new `io.flutter.view.c$m`;
  #L38b1ac.  call `<init>`(v7, v1) @signature `Lio/flutter/view/c$m;.<init>:(Lio/flutter/view/c$a;)V` @kind direct;
  #L38b1b2.  v7.`io.flutter.view.c$n.a` @type ^`int` := v4;
  #L38b1b6.  v7.`io.flutter.view.c$n.b` @type ^`int` := v5;
  #L38b1ba.  v7.`io.flutter.view.c$n.c` @type ^`io.flutter.view.c$o` := v6 @kind object;
  #L38b1be.  call temp:= `add`(v2, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38b1c4.  v3:= v3 + 1;
  #L38b1c8.  goto L38b112;
  #L38b1ca.  return v2 @kind object;
}
procedure `int` `l`(`io.flutter.view.c$l` v0 @kind object, `int` v1 ) @signature `Lio/flutter/view/c$l;.l:(Lio/flutter/view/c$l;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38abd0.  v0.`io.flutter.view.c$l.h` @type ^`int` := v1;
  #L38abd4.  return v1;
}
procedure `java.lang.CharSequence` `l0`(`io.flutter.view.c$l` v10 @kind this) @signature `Lio/flutter/view/c$l;.l0:()Ljava/lang/CharSequence;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L38ae48.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L38ae4c.  v1:= 2I;
  #L38ae4e.  v2:= 3I;
  #L38ae50.  v3:= 1I;
  #L38ae52.  v4:= 0I;
  #L38ae54.  v5:= 21I;
  #L38ae58.  if v0 >= v5 then goto L38ae7a;
  #L38ae5c.  v0:= new `java.lang.CharSequence`[v2];
  #L38ae60.  v5:= v10.`io.flutter.view.c$l.q` @type ^`java.lang.String` @kind object;
  #L38ae64.  v0[v4]:= v5 @kind object;
  #L38ae68.  v5:= v10.`io.flutter.view.c$l.o` @type ^`java.lang.String` @kind object;
  #L38ae6c.  v0[v3]:= v5 @kind object;
  #L38ae70.  v5:= v10.`io.flutter.view.c$l.w` @type ^`java.lang.String` @kind object;
  #L38ae74.  v0[v1]:= v5 @kind object;
  #L38ae78.  goto L38aeba;
  #L38ae7a.  v0:= new `java.lang.CharSequence`[v2];
  #L38ae7e.  v5:= v10.`io.flutter.view.c$l.q` @type ^`java.lang.String` @kind object;
  #L38ae82.  v6:= v10.`io.flutter.view.c$l.r` @type ^`java.util.List` @kind object;
  #L38ae86.  call temp:= `d0`(v10, v5, v6) @signature `Lio/flutter/view/c$l;.d0:(Ljava/lang/String;Ljava/util/List;)Landroid/text/SpannableString;` @kind direct;
  #L38ae8c.  v5:= temp @kind object;
  #L38ae8e.  v0[v4]:= v5 @kind object;
  #L38ae92.  v5:= v10.`io.flutter.view.c$l.o` @type ^`java.lang.String` @kind object;
  #L38ae96.  v6:= v10.`io.flutter.view.c$l.p` @type ^`java.util.List` @kind object;
  #L38ae9a.  call temp:= `d0`(v10, v5, v6) @signature `Lio/flutter/view/c$l;.d0:(Ljava/lang/String;Ljava/util/List;)Landroid/text/SpannableString;` @kind direct;
  #L38aea0.  v5:= temp @kind object;
  #L38aea2.  v0[v3]:= v5 @kind object;
  #L38aea6.  v5:= v10.`io.flutter.view.c$l.w` @type ^`java.lang.String` @kind object;
  #L38aeaa.  v6:= v10.`io.flutter.view.c$l.x` @type ^`java.util.List` @kind object;
  #L38aeae.  call temp:= `d0`(v10, v5, v6) @signature `Lio/flutter/view/c$l;.d0:(Ljava/lang/String;Ljava/util/List;)Landroid/text/SpannableString;` @kind direct;
  #L38aeb4.  v5:= temp @kind object;
  #L38aeb6.  v0[v1]:= v5 @kind object;
  #L38aeba.  v5:= 0I;
  #L38aebc.  v6:= length @variable v0;
  #L38aebe.  v7:= 0I;
  #L38aec0.  if v7 >= v6 then goto L38af10;
  #L38aec4.  v8:= v0[v7] @kind object;
  #L38aec8.  if v8 == 0 then goto L38af0a;
  #L38aecc.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L38aed2.  v9:= temp;
  #L38aed4.  if v9 <= 0 then goto L38af0a;
  #L38aed8.  if v5 == 0 then goto L38af08;
  #L38aedc.  call temp:= `length`(v5) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L38aee2.  v9:= temp;
  #L38aee4.  if v9 != 0 then goto L38aeea;
  #L38aee8.  goto L38af08;
  #L38aeea.  v9:= new `java.lang.CharSequence`[v2];
  #L38aeee.  v9[v4]:= v5 @kind object;
  #L38aef2.  v5:= ", " @kind object;
  #L38aef6.  v9[v3]:= v5 @kind object;
  #L38aefa.  v9[v1]:= v8 @kind object;
  #L38aefe.  call temp:= `concat`(v9) @signature `Landroid/text/TextUtils;.concat:([Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L38af04.  v5:= temp @kind object;
  #L38af06.  goto L38af0a;
  #L38af08.  v5:= v8 @kind object;
  #L38af0a.  v7:= v7 + 1;
  #L38af0e.  goto L38aec0;
  #L38af10.  return v5 @kind object;
}
procedure `int` `m`(`io.flutter.view.c$l` v1 @kind object, `int` v2 ) @signature `Lio/flutter/view/c$l;.m:(Lio/flutter/view/c$l;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L38abe8.  v0:= v1.`io.flutter.view.c$l.h` @type ^`int`;
  #L38abec.  v0:= v0 + v2 @kind int;
  #L38abee.  v1.`io.flutter.view.c$l.h` @type ^`int` := v0;
  #L38abf2.  return v0;
}
procedure `boolean` `m0`(`io.flutter.view.c$l` v1 @kind this, `io.flutter.view.c$g` v2 @kind object) @signature `Lio/flutter/view/c$l;.m0:(Lio/flutter/view/c$g;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L38a920.  v0:= v1.`io.flutter.view.c$l.C` @type ^`int`;
  #L38a924.  v2:= v2.`io.flutter.view.c$g.o` @type ^`int`;
  #L38a928.  v2:= v2 ^& v0 @kind int;
  #L38a92a.  if v2 == 0 then goto L38a932;
  #L38a92e.  v2:= 1I;
  #L38a930.  goto L38a934;
  #L38a932.  v2:= 0I;
  #L38a934.  return v2;
}
procedure `int` `n`(`io.flutter.view.c$l` v1 @kind object, `int` v2 ) @signature `Lio/flutter/view/c$l;.n:(Lio/flutter/view/c$l;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L38ac04.  v0:= v1.`io.flutter.view.c$l.h` @type ^`int`;
  #L38ac08.  v0:= v0 - v2 @kind int;
  #L38ac0a.  v1.`io.flutter.view.c$l.h` @type ^`int` := v0;
  #L38ac0e.  return v0;
}
procedure `boolean` `n0`(`io.flutter.view.c$l` v1 @kind this, `io.flutter.view.c$i` v2 @kind object) @signature `Lio/flutter/view/c$l;.n0:(Lio/flutter/view/c$i;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L38a948.  v0:= v1.`io.flutter.view.c$l.B` @type ^`int`;
  #L38a94c.  v2:= v2.`io.flutter.view.c$i.o` @type ^`int`;
  #L38a950.  v2:= v2 ^& v0 @kind int;
  #L38a952.  if v2 == 0 then goto L38a95a;
  #L38a956.  v2:= 1I;
  #L38a958.  goto L38a95c;
  #L38a95a.  v2:= 0I;
  #L38a95c.  return v2;
}
procedure `boolean` `o`(`io.flutter.view.c$l` v0 @kind object, `io.flutter.view.c$g` v1 @kind object) @signature `Lio/flutter/view/c$l;.o:(Lio/flutter/view/c$l;Lio/flutter/view/c$g;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38a7c4.  call temp:= `o0`(v0, v1) @signature `Lio/flutter/view/c$l;.o0:(Lio/flutter/view/c$g;)Z` @kind direct;
  #L38a7ca.  v0:= temp;
  #L38a7cc.  return v0;
}
procedure `boolean` `o0`(`io.flutter.view.c$l` v1 @kind this, `io.flutter.view.c$g` v2 @kind object) @signature `Lio/flutter/view/c$l;.o0:(Lio/flutter/view/c$g;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L38a970.  v0:= v1.`io.flutter.view.c$l.d` @type ^`int`;
  #L38a974.  v2:= v2.`io.flutter.view.c$g.o` @type ^`int`;
  #L38a978.  v2:= v2 ^& v0 @kind int;
  #L38a97a.  if v2 == 0 then goto L38a982;
  #L38a97e.  v2:= 1I;
  #L38a980.  goto L38a984;
  #L38a982.  v2:= 0I;
  #L38a984.  return v2;
}
procedure `int` `p`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.p:(Lio/flutter/view/c$l;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ac20.  v0:= v0.`io.flutter.view.c$l.e` @type ^`int`;
  #L38ac24.  return v0;
}
procedure `boolean` `p0`(`io.flutter.view.c$l` v1 @kind this, `io.flutter.view.c$i` v2 @kind object) @signature `Lio/flutter/view/c$l;.p0:(Lio/flutter/view/c$i;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L38a998.  v0:= v1.`io.flutter.view.c$l.c` @type ^`int`;
  #L38a99c.  v2:= v2.`io.flutter.view.c$i.o` @type ^`int`;
  #L38a9a0.  v2:= v2 ^& v0 @kind int;
  #L38a9a2.  if v2 == 0 then goto L38a9aa;
  #L38a9a6.  v2:= 1I;
  #L38a9a8.  goto L38a9ac;
  #L38a9aa.  v2:= 0I;
  #L38a9ac.  return v2;
}
procedure `java.lang.String` `q`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.q:(Lio/flutter/view/c$l;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38af24.  v0:= v0.`io.flutter.view.c$l.q` @type ^`java.lang.String` @kind object;
  #L38af28.  return v0 @kind object;
}
procedure `io.flutter.view.c$l` `q0`(`io.flutter.view.c$l` v10 @kind this, `float`[] v11 @kind object) @signature `Lio/flutter/view/c$l;.q0:([F)Lio/flutter/view/c$l;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L38ad5c.  v0:= 3I;
  #L38ad5e.  v0:= v11[v0];
  #L38ad62.  v1:= 0I;
  #L38ad64.  v1:= v11[v1];
  #L38ad68.  v1:= v1 / v0 @kind float;
  #L38ad6a.  v2:= 1I;
  #L38ad6c.  v2:= v11[v2];
  #L38ad70.  v2:= v2 / v0 @kind float;
  #L38ad72.  v0:= v10.`io.flutter.view.c$l.I` @type ^`float`;
  #L38ad76.  v3:= 0I;
  #L38ad78.  v0:= fcmpg(v1, v0);
  #L38ad7c.  if v0 < 0 then goto L38ae18;
  #L38ad80.  v0:= v10.`io.flutter.view.c$l.K` @type ^`float`;
  #L38ad84.  v0:= fcmpl(v1, v0);
  #L38ad88.  if v0 >= 0 then goto L38ae18;
  #L38ad8c.  v0:= v10.`io.flutter.view.c$l.J` @type ^`float`;
  #L38ad90.  v0:= fcmpg(v2, v0);
  #L38ad94.  if v0 < 0 then goto L38ae18;
  #L38ad98.  v0:= v10.`io.flutter.view.c$l.L` @type ^`float`;
  #L38ad9c.  v0:= fcmpl(v2, v0);
  #L38ada0.  if v0 < 0 then goto L38ada6;
  #L38ada4.  goto L38ae18;
  #L38ada6.  v0:= 4I;
  #L38ada8.  v0:= new `float`[v0];
  #L38adac.  v1:= v10.`io.flutter.view.c$l.P` @type ^`java.util.List` @kind object;
  #L38adb0.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L38adb6.  v1:= temp @kind object;
  #L38adb8.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L38adbe.  v2:= temp;
  #L38adc0.  if v2 == 0 then goto L38ae0a;
  #L38adc4.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38adca.  v2:= temp @kind object;
  #L38adcc.  v2:= (`io.flutter.view.c$l`) v2 @kind object;
  #L38add0.  v4:= `@@io.flutter.view.c$i.C` @type ^`io.flutter.view.c$i` @kind object;
  #L38add4.  call temp:= `p0`(v2, v4) @signature `Lio/flutter/view/c$l;.p0:(Lio/flutter/view/c$i;)Z` @kind direct;
  #L38adda.  v4:= temp;
  #L38addc.  if v4 == 0 then goto L38ade2;
  #L38ade0.  goto L38adb8;
  #L38ade2.  call `g0`(v2) @signature `Lio/flutter/view/c$l;.g0:()V` @kind direct;
  #L38ade8.  v5:= 0I;
  #L38adea.  v6:= v2.`io.flutter.view.c$l.U` @type ^`float`[] @kind object;
  #L38adee.  v7:= 0I;
  #L38adf0.  v9:= 0I;
  #L38adf2.  v4:= v0 @kind object;
  #L38adf4.  v8:= v11 @kind object;
  #L38adf6.  call `multiplyMV`(v4, v5, v6, v7, v8, v9) @signature `Landroid/opengl/Matrix;.multiplyMV:([FI[FI[FI)V` @kind static;
  #L38adfc.  call temp:= `q0`(v2, v0) @signature `Lio/flutter/view/c$l;.q0:([F)Lio/flutter/view/c$l;` @kind direct;
  #L38ae02.  v2:= temp @kind object;
  #L38ae04.  if v2 == 0 then goto L38adb8;
  #L38ae08.  return v2 @kind object;
  #L38ae0a.  call temp:= `r0`(v10) @signature `Lio/flutter/view/c$l;.r0:()Z` @kind direct;
  #L38ae10.  v11:= temp;
  #L38ae12.  if v11 == 0 then goto L38ae18;
  #L38ae16.  v3:= v10 @kind object;
  #L38ae18.  return v3 @kind object;
}
procedure `java.lang.String` `r`(`io.flutter.view.c$l` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lio/flutter/view/c$l;.r:(Lio/flutter/view/c$l;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38af3c.  v0.`io.flutter.view.c$l.q` @type ^`java.lang.String` := v1 @kind object;
  #L38af40.  return v1 @kind object;
}
procedure `boolean` `r0`(`io.flutter.view.c$l` v4 @kind this) @signature `Lio/flutter/view/c$l;.r0:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38a9c0.  v0:= `@@io.flutter.view.c$i.A` @type ^`io.flutter.view.c$i` @kind object;
  #L38a9c4.  call temp:= `p0`(v4, v0) @signature `Lio/flutter/view/c$l;.p0:(Lio/flutter/view/c$i;)Z` @kind direct;
  #L38a9ca.  v0:= temp;
  #L38a9cc.  v1:= 0I;
  #L38a9ce.  if v0 == 0 then goto L38a9d4;
  #L38a9d2.  return v1;
  #L38a9d4.  v0:= `@@io.flutter.view.c$i.K` @type ^`io.flutter.view.c$i` @kind object;
  #L38a9d8.  call temp:= `p0`(v4, v0) @signature `Lio/flutter/view/c$l;.p0:(Lio/flutter/view/c$i;)Z` @kind direct;
  #L38a9de.  v0:= temp;
  #L38a9e0.  v2:= 1I;
  #L38a9e2.  if v0 == 0 then goto L38a9e8;
  #L38a9e6.  return v2;
  #L38a9e8.  v0:= v4.`io.flutter.view.c$l.d` @type ^`int`;
  #L38a9ec.  call temp:= `q`() @signature `Lio/flutter/view/c;.q:()I` @kind static;
  #L38a9f2.  v3:= temp;
  #L38a9f4.  v3:= ~v3 @kind int;
  #L38a9f6.  v0:= v0 ^& v3 @kind int;
  #L38a9f8.  if v0 != 0 then goto L38aa4a;
  #L38a9fc.  v0:= v4.`io.flutter.view.c$l.c` @type ^`int`;
  #L38aa00.  call temp:= `r`() @signature `Lio/flutter/view/c;.r:()I` @kind static;
  #L38aa06.  v3:= temp;
  #L38aa08.  v0:= v0 ^& v3 @kind int;
  #L38aa0a.  if v0 != 0 then goto L38aa4a;
  #L38aa0e.  v0:= v4.`io.flutter.view.c$l.o` @type ^`java.lang.String` @kind object;
  #L38aa12.  if v0 == 0 then goto L38aa22;
  #L38aa16.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L38aa1c.  v0:= temp;
  #L38aa1e.  if v0 == 0 then goto L38aa4a;
  #L38aa22.  v0:= v4.`io.flutter.view.c$l.q` @type ^`java.lang.String` @kind object;
  #L38aa26.  if v0 == 0 then goto L38aa36;
  #L38aa2a.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L38aa30.  v0:= temp;
  #L38aa32.  if v0 == 0 then goto L38aa4a;
  #L38aa36.  v0:= v4.`io.flutter.view.c$l.w` @type ^`java.lang.String` @kind object;
  #L38aa3a.  if v0 == 0 then goto L38aa4c;
  #L38aa3e.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L38aa44.  v0:= temp;
  #L38aa46.  if v0 != 0 then goto L38aa4c;
  #L38aa4a.  v1:= 1I;
  #L38aa4c.  return v1;
}
procedure `int` `s`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.s:(Lio/flutter/view/c$l;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ac38.  v0:= v0.`io.flutter.view.c$l.f` @type ^`int`;
  #L38ac3c.  return v0;
}
procedure `float` `s0`(`io.flutter.view.c$l` v0 @kind this, `float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lio/flutter/view/c$l;.s0:(FFFF)F` @AccessFlag PRIVATE {
    temp;

  #L38aad0.  call temp:= `max`(v3, v4) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L38aad6.  v3:= temp;
  #L38aad8.  call temp:= `max`(v2, v3) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L38aade.  v2:= temp;
  #L38aae0.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L38aae6.  v1:= temp;
  #L38aae8.  return v1;
}
procedure `io.flutter.view.c$l` `t`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.t:(Lio/flutter/view/c$l;)Lio/flutter/view/c$l;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ace0.  v0:= v0.`io.flutter.view.c$l.N` @type ^`io.flutter.view.c$l` @kind object;
  #L38ace4.  return v0 @kind object;
}
procedure `float` `t0`(`io.flutter.view.c$l` v0 @kind this, `float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lio/flutter/view/c$l;.t0:(FFFF)F` @AccessFlag PRIVATE {
    temp;

  #L38aafc.  call temp:= `min`(v3, v4) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L38ab02.  v3:= temp;
  #L38ab04.  call temp:= `min`(v2, v3) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L38ab0a.  v2:= temp;
  #L38ab0c.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L38ab12.  v1:= temp;
  #L38ab14.  return v1;
}
procedure `io.flutter.view.c$l` `u`(`io.flutter.view.c$l` v0 @kind object, `io.flutter.view.c$l` v1 @kind object) @signature `Lio/flutter/view/c$l;.u:(Lio/flutter/view/c$l;Lio/flutter/view/c$l;)Lio/flutter/view/c$l;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38acf8.  v0.`io.flutter.view.c$l.N` @type ^`io.flutter.view.c$l` := v1 @kind object;
  #L38acfc.  return v1 @kind object;
}
procedure `boolean` `u0`(`io.flutter.view.c$l` v0 @kind object, `gb.d` v1 @kind object) @signature `Lio/flutter/view/c$l;.u0:(Lio/flutter/view/c$l;Lgb/d;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L38aa60.  if v0 == 0 then goto L38aa74;
  #L38aa64.  call temp:= `h0`(v0, v1) @signature `Lio/flutter/view/c$l;.h0:(Lgb/d;)Lio/flutter/view/c$l;` @kind direct;
  #L38aa6a.  v0:= temp @kind object;
  #L38aa6c.  if v0 == 0 then goto L38aa74;
  #L38aa70.  v0:= 1I;
  #L38aa72.  goto L38aa76;
  #L38aa74.  v0:= 0I;
  #L38aa76.  return v0;
}
procedure `int` `v`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.v:(Lio/flutter/view/c$l;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ac50.  v0:= v0.`io.flutter.view.c$l.z` @type ^`int`;
  #L38ac54.  return v0;
}
procedure `void` `v0`(`io.flutter.view.c$l` v6 @kind this, `float`[] v7 @kind object, `float`[] v8 @kind object, `float`[] v9 @kind object) @signature `Lio/flutter/view/c$l;.v0:([F[F[F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L38b324.  v1:= 0I;
  #L38b326.  v3:= 0I;
  #L38b328.  v5:= 0I;
  #L38b32a.  v0:= v7 @kind object;
  #L38b32c.  v2:= v8 @kind object;
  #L38b32e.  v4:= v9 @kind object;
  #L38b330.  call `multiplyMV`(v0, v1, v2, v3, v4, v5) @signature `Landroid/opengl/Matrix;.multiplyMV:([FI[FI[FI)V` @kind static;
  #L38b336.  v8:= 3I;
  #L38b338.  v9:= v7[v8];
  #L38b33c.  v0:= 0I;
  #L38b33e.  v1:= v7[v0];
  #L38b342.  v1:= v1 / v9 @kind float;
  #L38b344.  v7[v0]:= v1;
  #L38b348.  v0:= 1I;
  #L38b34a.  v1:= v7[v0];
  #L38b34e.  v1:= v1 / v9 @kind float;
  #L38b350.  v7[v0]:= v1;
  #L38b354.  v0:= 2I;
  #L38b356.  v1:= v7[v0];
  #L38b35a.  v1:= v1 / v9 @kind float;
  #L38b35c.  v7[v0]:= v1;
  #L38b360.  v9:= 0I;
  #L38b362.  v7[v8]:= v9;
  #L38b366.  return @kind void;
}
procedure `io.flutter.view.c$h` `w`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.w:(Lio/flutter/view/c$l;)Lio/flutter/view/c$h;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38acb0.  v0:= v0.`io.flutter.view.c$l.R` @type ^`io.flutter.view.c$h` @kind object;
  #L38acb4.  return v0 @kind object;
}
procedure `void` `w0`(`io.flutter.view.c$l` v12 @kind this, `float`[] v13 @kind object, `java.util.Set` v14 @kind object, `boolean` v15 ) @signature `Lio/flutter/view/c$l;.w0:([FLjava/util/Set;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L38b378.  call temp:= `add`(v14, v12) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38b37e.  v0:= v12.`io.flutter.view.c$l.V` @type ^`boolean` @kind boolean;
  #L38b382.  v1:= 1I;
  #L38b384.  if v0 == 0 then goto L38b38a;
  #L38b388.  v15:= 1I;
  #L38b38a.  if v15 == 0 then goto L38b4ee;
  #L38b38e.  v0:= v12.`io.flutter.view.c$l.W` @type ^`float`[] @kind object;
  #L38b392.  if v0 != 0 then goto L38b3a2;
  #L38b396.  v0:= 16I;
  #L38b39a.  v0:= new `float`[v0];
  #L38b39e.  v12.`io.flutter.view.c$l.W` @type ^`float`[] := v0 @kind object;
  #L38b3a2.  v2:= v12.`io.flutter.view.c$l.W` @type ^`float`[] @kind object;
  #L38b3a6.  v3:= 0I;
  #L38b3a8.  v5:= 0I;
  #L38b3aa.  v6:= v12.`io.flutter.view.c$l.M` @type ^`float`[] @kind object;
  #L38b3ae.  v7:= 0I;
  #L38b3b0.  v4:= v13 @kind object;
  #L38b3b2.  call `multiplyMM`(v2, v3, v4, v5, v6, v7) @signature `Landroid/opengl/Matrix;.multiplyMM:([FI[FI[FI)V` @kind static;
  #L38b3b8.  v13:= 4I;
  #L38b3ba.  v0:= new `float`[v13];
  #L38b3be.  v2:= 2I;
  #L38b3c0.  v3:= 0I;
  #L38b3c2.  v0[v2]:= v3;
  #L38b3c6.  v2:= 3I;
  #L38b3c8.  v3:= 1.0F;
  #L38b3cc.  v0[v2]:= v3;
  #L38b3d0.  v2:= new `float`[v13];
  #L38b3d4.  v3:= new `float`[v13];
  #L38b3d8.  v4:= new `float`[v13];
  #L38b3dc.  v13:= new `float`[v13];
  #L38b3e0.  v5:= v12.`io.flutter.view.c$l.I` @type ^`float`;
  #L38b3e4.  v6:= 0I;
  #L38b3e6.  v0[v6]:= v5;
  #L38b3ea.  v5:= v12.`io.flutter.view.c$l.J` @type ^`float`;
  #L38b3ee.  v0[v1]:= v5;
  #L38b3f2.  v5:= v12.`io.flutter.view.c$l.W` @type ^`float`[] @kind object;
  #L38b3f6.  call `v0`(v12, v2, v5, v0) @signature `Lio/flutter/view/c$l;.v0:([F[F[F)V` @kind direct;
  #L38b3fc.  v5:= v12.`io.flutter.view.c$l.K` @type ^`float`;
  #L38b400.  v0[v6]:= v5;
  #L38b404.  v5:= v12.`io.flutter.view.c$l.J` @type ^`float`;
  #L38b408.  v0[v1]:= v5;
  #L38b40c.  v5:= v12.`io.flutter.view.c$l.W` @type ^`float`[] @kind object;
  #L38b410.  call `v0`(v12, v3, v5, v0) @signature `Lio/flutter/view/c$l;.v0:([F[F[F)V` @kind direct;
  #L38b416.  v5:= v12.`io.flutter.view.c$l.K` @type ^`float`;
  #L38b41a.  v0[v6]:= v5;
  #L38b41e.  v5:= v12.`io.flutter.view.c$l.L` @type ^`float`;
  #L38b422.  v0[v1]:= v5;
  #L38b426.  v5:= v12.`io.flutter.view.c$l.W` @type ^`float`[] @kind object;
  #L38b42a.  call `v0`(v12, v4, v5, v0) @signature `Lio/flutter/view/c$l;.v0:([F[F[F)V` @kind direct;
  #L38b430.  v5:= v12.`io.flutter.view.c$l.I` @type ^`float`;
  #L38b434.  v0[v6]:= v5;
  #L38b438.  v5:= v12.`io.flutter.view.c$l.L` @type ^`float`;
  #L38b43c.  v0[v1]:= v5;
  #L38b440.  v5:= v12.`io.flutter.view.c$l.W` @type ^`float`[] @kind object;
  #L38b444.  call `v0`(v12, v13, v5, v0) @signature `Lio/flutter/view/c$l;.v0:([F[F[F)V` @kind direct;
  #L38b44a.  v0:= v12.`io.flutter.view.c$l.X` @type ^`android.graphics.Rect` @kind object;
  #L38b44e.  if v0 != 0 then goto L38b460;
  #L38b452.  v0:= new `android.graphics.Rect`;
  #L38b456.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L38b45c.  v12.`io.flutter.view.c$l.X` @type ^`android.graphics.Rect` := v0 @kind object;
  #L38b460.  v0:= v12.`io.flutter.view.c$l.X` @type ^`android.graphics.Rect` @kind object;
  #L38b464.  v5:= v2[v6];
  #L38b468.  v7:= v3[v6];
  #L38b46c.  v8:= v4[v6];
  #L38b470.  v9:= v13[v6];
  #L38b474.  call temp:= `t0`(v12, v5, v7, v8, v9) @signature `Lio/flutter/view/c$l;.t0:(FFFF)F` @kind direct;
  #L38b47a.  v5:= temp;
  #L38b47c.  call temp:= `round`(v5) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L38b482.  v5:= temp;
  #L38b484.  v7:= v2[v1];
  #L38b488.  v8:= v3[v1];
  #L38b48c.  v9:= v4[v1];
  #L38b490.  v10:= v13[v1];
  #L38b494.  call temp:= `t0`(v12, v7, v8, v9, v10) @signature `Lio/flutter/view/c$l;.t0:(FFFF)F` @kind direct;
  #L38b49a.  v7:= temp;
  #L38b49c.  call temp:= `round`(v7) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L38b4a2.  v7:= temp;
  #L38b4a4.  v8:= v2[v6];
  #L38b4a8.  v9:= v3[v6];
  #L38b4ac.  v10:= v4[v6];
  #L38b4b0.  v11:= v13[v6];
  #L38b4b4.  call temp:= `s0`(v12, v8, v9, v10, v11) @signature `Lio/flutter/view/c$l;.s0:(FFFF)F` @kind direct;
  #L38b4ba.  v8:= temp;
  #L38b4bc.  call temp:= `round`(v8) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L38b4c2.  v8:= temp;
  #L38b4c4.  v2:= v2[v1];
  #L38b4c8.  v3:= v3[v1];
  #L38b4cc.  v4:= v4[v1];
  #L38b4d0.  v13:= v13[v1];
  #L38b4d4.  call temp:= `s0`(v12, v2, v3, v4, v13) @signature `Lio/flutter/view/c$l;.s0:(FFFF)F` @kind direct;
  #L38b4da.  v13:= temp;
  #L38b4dc.  call temp:= `round`(v13) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L38b4e2.  v13:= temp;
  #L38b4e4.  call `set`(v0, v5, v7, v8, v13) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L38b4ea.  v12.`io.flutter.view.c$l.V` @type ^`boolean` := v6 @kind boolean;
  #L38b4ee.  v13:= -1I;
  #L38b4f0.  v0:= v12.`io.flutter.view.c$l.O` @type ^`java.util.List` @kind object;
  #L38b4f4.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L38b4fa.  v0:= temp @kind object;
  #L38b4fc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L38b502.  v1:= temp;
  #L38b504.  if v1 == 0 then goto L38b528;
  #L38b508.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38b50e.  v1:= temp @kind object;
  #L38b510.  v1:= (`io.flutter.view.c$l`) v1 @kind object;
  #L38b514.  v1.`io.flutter.view.c$l.z` @type ^`int` := v13;
  #L38b518.  v13:= v1.`io.flutter.view.c$l.b` @type ^`int`;
  #L38b51c.  v2:= v12.`io.flutter.view.c$l.W` @type ^`float`[] @kind object;
  #L38b520.  call `w0`(v1, v2, v14, v15) @signature `Lio/flutter/view/c$l;.w0:([FLjava/util/Set;Z)V` @kind direct;
  #L38b526.  goto L38b4fc;
  #L38b528.  return @kind void;
}
procedure `io.flutter.view.c$h` `x`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.x:(Lio/flutter/view/c$l;)Lio/flutter/view/c$h;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38acc8.  v0:= v0.`io.flutter.view.c$l.S` @type ^`io.flutter.view.c$h` @kind object;
  #L38accc.  return v0 @kind object;
}
procedure `void` `x0`(`io.flutter.view.c$l` v5 @kind this, `java.nio.ByteBuffer` v6 @kind object, `java.lang.String`[] v7 @kind object, `java.nio.ByteBuffer`[] v8 @kind object) @signature `Lio/flutter/view/c$l;.x0:(Ljava/nio/ByteBuffer;[Ljava/lang/String;[Ljava/nio/ByteBuffer;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L38b53c.  v0:= 1I;
  #L38b53e.  v5.`io.flutter.view.c$l.A` @type ^`boolean` := v0 @kind boolean;
  #L38b542.  v1:= v5.`io.flutter.view.c$l.q` @type ^`java.lang.String` @kind object;
  #L38b546.  v5.`io.flutter.view.c$l.G` @type ^`java.lang.String` := v1 @kind object;
  #L38b54a.  v1:= v5.`io.flutter.view.c$l.o` @type ^`java.lang.String` @kind object;
  #L38b54e.  v5.`io.flutter.view.c$l.H` @type ^`java.lang.String` := v1 @kind object;
  #L38b552.  v1:= v5.`io.flutter.view.c$l.c` @type ^`int`;
  #L38b556.  v5.`io.flutter.view.c$l.B` @type ^`int` := v1;
  #L38b55a.  v1:= v5.`io.flutter.view.c$l.d` @type ^`int`;
  #L38b55e.  v5.`io.flutter.view.c$l.C` @type ^`int` := v1;
  #L38b562.  v1:= v5.`io.flutter.view.c$l.g` @type ^`int`;
  #L38b566.  v5.`io.flutter.view.c$l.D` @type ^`int` := v1;
  #L38b56a.  v1:= v5.`io.flutter.view.c$l.h` @type ^`int`;
  #L38b56e.  v5.`io.flutter.view.c$l.E` @type ^`int` := v1;
  #L38b572.  v1:= v5.`io.flutter.view.c$l.l` @type ^`float`;
  #L38b576.  v5.`io.flutter.view.c$l.F` @type ^`float` := v1;
  #L38b57a.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b580.  v1:= temp;
  #L38b582.  v5.`io.flutter.view.c$l.c` @type ^`int` := v1;
  #L38b586.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b58c.  v1:= temp;
  #L38b58e.  v5.`io.flutter.view.c$l.d` @type ^`int` := v1;
  #L38b592.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b598.  v1:= temp;
  #L38b59a.  v5.`io.flutter.view.c$l.e` @type ^`int` := v1;
  #L38b59e.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b5a4.  v1:= temp;
  #L38b5a6.  v5.`io.flutter.view.c$l.f` @type ^`int` := v1;
  #L38b5aa.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b5b0.  v1:= temp;
  #L38b5b2.  v5.`io.flutter.view.c$l.g` @type ^`int` := v1;
  #L38b5b6.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b5bc.  v1:= temp;
  #L38b5be.  v5.`io.flutter.view.c$l.h` @type ^`int` := v1;
  #L38b5c2.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b5c8.  v1:= temp;
  #L38b5ca.  v5.`io.flutter.view.c$l.i` @type ^`int` := v1;
  #L38b5ce.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b5d4.  v1:= temp;
  #L38b5d6.  v5.`io.flutter.view.c$l.j` @type ^`int` := v1;
  #L38b5da.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b5e0.  v1:= temp;
  #L38b5e2.  v5.`io.flutter.view.c$l.k` @type ^`int` := v1;
  #L38b5e6.  call temp:= `getFloat`(v6) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L38b5ec.  v1:= temp;
  #L38b5ee.  v5.`io.flutter.view.c$l.l` @type ^`float` := v1;
  #L38b5f2.  call temp:= `getFloat`(v6) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L38b5f8.  v1:= temp;
  #L38b5fa.  v5.`io.flutter.view.c$l.m` @type ^`float` := v1;
  #L38b5fe.  call temp:= `getFloat`(v6) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L38b604.  v1:= temp;
  #L38b606.  v5.`io.flutter.view.c$l.n` @type ^`float` := v1;
  #L38b60a.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b610.  v1:= temp;
  #L38b612.  v2:= -1I;
  #L38b614.  v3:= 0I;
  #L38b616.  if v1 != v2 then goto L38b61e;
  #L38b61a.  v1:= v3 @kind object;
  #L38b61c.  goto L38b622;
  #L38b61e.  v1:= v7[v1] @kind object;
  #L38b622.  v5.`io.flutter.view.c$l.o` @type ^`java.lang.String` := v1 @kind object;
  #L38b626.  call temp:= `k0`(v5, v6, v8) @signature `Lio/flutter/view/c$l;.k0:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljava/util/List;` @kind direct;
  #L38b62c.  v1:= temp @kind object;
  #L38b62e.  v5.`io.flutter.view.c$l.p` @type ^`java.util.List` := v1 @kind object;
  #L38b632.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b638.  v1:= temp;
  #L38b63a.  if v1 != v2 then goto L38b642;
  #L38b63e.  v1:= v3 @kind object;
  #L38b640.  goto L38b646;
  #L38b642.  v1:= v7[v1] @kind object;
  #L38b646.  v5.`io.flutter.view.c$l.q` @type ^`java.lang.String` := v1 @kind object;
  #L38b64a.  call temp:= `k0`(v5, v6, v8) @signature `Lio/flutter/view/c$l;.k0:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljava/util/List;` @kind direct;
  #L38b650.  v1:= temp @kind object;
  #L38b652.  v5.`io.flutter.view.c$l.r` @type ^`java.util.List` := v1 @kind object;
  #L38b656.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b65c.  v1:= temp;
  #L38b65e.  if v1 != v2 then goto L38b666;
  #L38b662.  v1:= v3 @kind object;
  #L38b664.  goto L38b66a;
  #L38b666.  v1:= v7[v1] @kind object;
  #L38b66a.  v5.`io.flutter.view.c$l.s` @type ^`java.lang.String` := v1 @kind object;
  #L38b66e.  call temp:= `k0`(v5, v6, v8) @signature `Lio/flutter/view/c$l;.k0:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljava/util/List;` @kind direct;
  #L38b674.  v1:= temp @kind object;
  #L38b676.  v5.`io.flutter.view.c$l.t` @type ^`java.util.List` := v1 @kind object;
  #L38b67a.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b680.  v1:= temp;
  #L38b682.  if v1 != v2 then goto L38b68a;
  #L38b686.  v1:= v3 @kind object;
  #L38b688.  goto L38b68e;
  #L38b68a.  v1:= v7[v1] @kind object;
  #L38b68e.  v5.`io.flutter.view.c$l.u` @type ^`java.lang.String` := v1 @kind object;
  #L38b692.  call temp:= `k0`(v5, v6, v8) @signature `Lio/flutter/view/c$l;.k0:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljava/util/List;` @kind direct;
  #L38b698.  v1:= temp @kind object;
  #L38b69a.  v5.`io.flutter.view.c$l.v` @type ^`java.util.List` := v1 @kind object;
  #L38b69e.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b6a4.  v1:= temp;
  #L38b6a6.  if v1 != v2 then goto L38b6ae;
  #L38b6aa.  v1:= v3 @kind object;
  #L38b6ac.  goto L38b6b2;
  #L38b6ae.  v1:= v7[v1] @kind object;
  #L38b6b2.  v5.`io.flutter.view.c$l.w` @type ^`java.lang.String` := v1 @kind object;
  #L38b6b6.  call temp:= `k0`(v5, v6, v8) @signature `Lio/flutter/view/c$l;.k0:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljava/util/List;` @kind direct;
  #L38b6bc.  v8:= temp @kind object;
  #L38b6be.  v5.`io.flutter.view.c$l.x` @type ^`java.util.List` := v8 @kind object;
  #L38b6c2.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b6c8.  v8:= temp;
  #L38b6ca.  if v8 != v2 then goto L38b6d2;
  #L38b6ce.  v7:= v3 @kind object;
  #L38b6d0.  goto L38b6d6;
  #L38b6d2.  v7:= v7[v8] @kind object;
  #L38b6d6.  v5.`io.flutter.view.c$l.y` @type ^`java.lang.String` := v7 @kind object;
  #L38b6da.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b6e0.  v7:= temp;
  #L38b6e2.  call temp:= `c`(v7) @signature `Lio/flutter/view/c$p;.c:(I)Lio/flutter/view/c$p;` @kind static;
  #L38b6e8.  call temp:= `getFloat`(v6) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L38b6ee.  v7:= temp;
  #L38b6f0.  v5.`io.flutter.view.c$l.I` @type ^`float` := v7;
  #L38b6f4.  call temp:= `getFloat`(v6) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L38b6fa.  v7:= temp;
  #L38b6fc.  v5.`io.flutter.view.c$l.J` @type ^`float` := v7;
  #L38b700.  call temp:= `getFloat`(v6) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L38b706.  v7:= temp;
  #L38b708.  v5.`io.flutter.view.c$l.K` @type ^`float` := v7;
  #L38b70c.  call temp:= `getFloat`(v6) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L38b712.  v7:= temp;
  #L38b714.  v5.`io.flutter.view.c$l.L` @type ^`float` := v7;
  #L38b718.  v7:= v5.`io.flutter.view.c$l.M` @type ^`float`[] @kind object;
  #L38b71c.  v8:= 16I;
  #L38b720.  if v7 != 0 then goto L38b72c;
  #L38b724.  v7:= new `float`[v8];
  #L38b728.  v5.`io.flutter.view.c$l.M` @type ^`float`[] := v7 @kind object;
  #L38b72c.  v7:= 0I;
  #L38b72e.  v1:= 0I;
  #L38b730.  if v1 >= v8 then goto L38b74a;
  #L38b734.  v2:= v5.`io.flutter.view.c$l.M` @type ^`float`[] @kind object;
  #L38b738.  call temp:= `getFloat`(v6) @signature `Ljava/nio/ByteBuffer;.getFloat:()F` @kind virtual;
  #L38b73e.  v4:= temp;
  #L38b740.  v2[v1]:= v4;
  #L38b744.  v1:= v1 + 1;
  #L38b748.  goto L38b730;
  #L38b74a.  v5.`io.flutter.view.c$l.T` @type ^`boolean` := v0 @kind boolean;
  #L38b74e.  v5.`io.flutter.view.c$l.V` @type ^`boolean` := v0 @kind boolean;
  #L38b752.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b758.  v8:= temp;
  #L38b75a.  v0:= v5.`io.flutter.view.c$l.O` @type ^`java.util.List` @kind object;
  #L38b75e.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L38b764.  v0:= v5.`io.flutter.view.c$l.P` @type ^`java.util.List` @kind object;
  #L38b768.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L38b76e.  v0:= 0I;
  #L38b770.  if v0 >= v8 then goto L38b79c;
  #L38b774.  v1:= v5.`io.flutter.view.c$l.a` @type ^`io.flutter.view.c` @kind object;
  #L38b778.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b77e.  v2:= temp;
  #L38b780.  call temp:= `n`(v1, v2) @signature `Lio/flutter/view/c;.n:(Lio/flutter/view/c;I)Lio/flutter/view/c$l;` @kind static;
  #L38b786.  v1:= temp @kind object;
  #L38b788.  v1.`io.flutter.view.c$l.N` @type ^`io.flutter.view.c$l` := v5 @kind object;
  #L38b78c.  v2:= v5.`io.flutter.view.c$l.O` @type ^`java.util.List` @kind object;
  #L38b790.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38b796.  v0:= v0 + 1;
  #L38b79a.  goto L38b770;
  #L38b79c.  v0:= 0I;
  #L38b79e.  if v0 >= v8 then goto L38b7ca;
  #L38b7a2.  v1:= v5.`io.flutter.view.c$l.a` @type ^`io.flutter.view.c` @kind object;
  #L38b7a6.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b7ac.  v2:= temp;
  #L38b7ae.  call temp:= `n`(v1, v2) @signature `Lio/flutter/view/c;.n:(Lio/flutter/view/c;I)Lio/flutter/view/c$l;` @kind static;
  #L38b7b4.  v1:= temp @kind object;
  #L38b7b6.  v1.`io.flutter.view.c$l.N` @type ^`io.flutter.view.c$l` := v5 @kind object;
  #L38b7ba.  v2:= v5.`io.flutter.view.c$l.P` @type ^`java.util.List` @kind object;
  #L38b7be.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38b7c4.  v0:= v0 + 1;
  #L38b7c8.  goto L38b79e;
  #L38b7ca.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b7d0.  v8:= temp;
  #L38b7d2.  if v8 != 0 then goto L38b7dc;
  #L38b7d6.  v5.`io.flutter.view.c$l.Q` @type ^`java.util.List` := v3 @kind object;
  #L38b7da.  goto L38b860;
  #L38b7dc.  v0:= v5.`io.flutter.view.c$l.Q` @type ^`java.util.List` @kind object;
  #L38b7e0.  if v0 != 0 then goto L38b7f4;
  #L38b7e4.  v0:= new `java.util.ArrayList`;
  #L38b7e8.  call `<init>`(v0, v8) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L38b7ee.  v5.`io.flutter.view.c$l.Q` @type ^`java.util.List` := v0 @kind object;
  #L38b7f2.  goto L38b7fa;
  #L38b7f4.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L38b7fa.  if v7 >= v8 then goto L38b860;
  #L38b7fe.  v0:= v5.`io.flutter.view.c$l.a` @type ^`io.flutter.view.c` @kind object;
  #L38b802.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L38b808.  v1:= temp;
  #L38b80a.  call temp:= `o`(v0, v1) @signature `Lio/flutter/view/c;.o:(Lio/flutter/view/c;I)Lio/flutter/view/c$h;` @kind static;
  #L38b810.  v0:= temp @kind object;
  #L38b812.  call temp:= `i`(v0) @signature `Lio/flutter/view/c$h;.i:(Lio/flutter/view/c$h;)I` @kind static;
  #L38b818.  v1:= temp;
  #L38b81a.  v2:= `@@io.flutter.view.c$g.p` @type ^`io.flutter.view.c$g` @kind object;
  #L38b81e.  v2:= v2.`io.flutter.view.c$g.o` @type ^`int`;
  #L38b822.  if v1 != v2 then goto L38b82c;
  #L38b826.  v5.`io.flutter.view.c$l.R` @type ^`io.flutter.view.c$h` := v0 @kind object;
  #L38b82a.  goto L38b850;
  #L38b82c.  call temp:= `i`(v0) @signature `Lio/flutter/view/c$h;.i:(Lio/flutter/view/c$h;)I` @kind static;
  #L38b832.  v1:= temp;
  #L38b834.  v2:= `@@io.flutter.view.c$g.q` @type ^`io.flutter.view.c$g` @kind object;
  #L38b838.  v2:= v2.`io.flutter.view.c$g.o` @type ^`int`;
  #L38b83c.  if v1 != v2 then goto L38b846;
  #L38b840.  v5.`io.flutter.view.c$l.S` @type ^`io.flutter.view.c$h` := v0 @kind object;
  #L38b844.  goto L38b850;
  #L38b846.  v1:= v5.`io.flutter.view.c$l.Q` @type ^`java.util.List` @kind object;
  #L38b84a.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38b850.  v1:= v5.`io.flutter.view.c$l.Q` @type ^`java.util.List` @kind object;
  #L38b854.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38b85a.  v7:= v7 + 1;
  #L38b85e.  goto L38b7fa;
  #L38b860.  return @kind void;
}
procedure `java.lang.CharSequence` `y`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.y:(Lio/flutter/view/c$l;)Ljava/lang/CharSequence;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38ae2c.  call temp:= `l0`(v0) @signature `Lio/flutter/view/c$l;.l0:()Ljava/lang/CharSequence;` @kind direct;
  #L38ae32.  v0:= temp @kind object;
  #L38ae34.  return v0 @kind object;
}
procedure `java.lang.String` `z`(`io.flutter.view.c$l` v0 @kind object) @signature `Lio/flutter/view/c$l;.z:(Lio/flutter/view/c$l;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L38af54.  v0:= v0.`io.flutter.view.c$l.y` @type ^`java.lang.String` @kind object;
  #L38af58.  return v0 @kind object;
}
