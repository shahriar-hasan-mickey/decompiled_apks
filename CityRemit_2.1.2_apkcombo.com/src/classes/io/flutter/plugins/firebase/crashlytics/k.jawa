record `io.flutter.plugins.firebase.crashlytics.k` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `io.flutter.plugins.firebase.crashlytics.n` `io.flutter.plugins.firebase.crashlytics.k.o` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.util.Map` `io.flutter.plugins.firebase.crashlytics.k.p` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `a5.m` `io.flutter.plugins.firebase.crashlytics.k.q` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.crashlytics.k` v0 @kind this, `io.flutter.plugins.firebase.crashlytics.n` v1 @kind object, `java.util.Map` v2 @kind object, `a5.m` v3 @kind object) @signature `Lio/flutter/plugins/firebase/crashlytics/k;.<init>:(Lio/flutter/plugins/firebase/crashlytics/n;Ljava/util/Map;La5/m;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3787c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3787ca.  v0.`io.flutter.plugins.firebase.crashlytics.k.o` @type ^`io.flutter.plugins.firebase.crashlytics.n` := v1 @kind object;
  #L3787ce.  v0.`io.flutter.plugins.firebase.crashlytics.k.p` @type ^`java.util.Map` := v2 @kind object;
  #L3787d2.  v0.`io.flutter.plugins.firebase.crashlytics.k.q` @type ^`a5.m` := v3 @kind object;
  #L3787d6.  return @kind void;
}
procedure `void` `run`(`io.flutter.plugins.firebase.crashlytics.k` v3 @kind this) @signature `Lio/flutter/plugins/firebase/crashlytics/k;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3787e8.  v0:= v3.`io.flutter.plugins.firebase.crashlytics.k.o` @type ^`io.flutter.plugins.firebase.crashlytics.n` @kind object;
  #L3787ec.  v1:= v3.`io.flutter.plugins.firebase.crashlytics.k.p` @type ^`java.util.Map` @kind object;
  #L3787f0.  v2:= v3.`io.flutter.plugins.firebase.crashlytics.k.q` @type ^`a5.m` @kind object;
  #L3787f4.  call `h`(v0, v1, v2) @signature `Lio/flutter/plugins/firebase/crashlytics/n;.h:(Lio/flutter/plugins/firebase/crashlytics/n;Ljava/util/Map;La5/m;)V` @kind static;
  #L3787fa.  return @kind void;
}
