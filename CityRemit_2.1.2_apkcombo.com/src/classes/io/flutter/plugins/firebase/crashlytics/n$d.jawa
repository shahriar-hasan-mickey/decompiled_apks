record `io.flutter.plugins.firebase.crashlytics.n$d` @kind class @AccessFlag  extends `java.util.HashMap` @kind class {
  `y5.d` `io.flutter.plugins.firebase.crashlytics.n$d.o` @AccessFlag FINAL_SYNTHETIC;
  `io.flutter.plugins.firebase.crashlytics.n` `io.flutter.plugins.firebase.crashlytics.n$d.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.crashlytics.n$d` v1 @kind this, `io.flutter.plugins.firebase.crashlytics.n` v2 @kind object, `y5.d` v3 @kind object) @signature `Lio/flutter/plugins/firebase/crashlytics/n$d;.<init>:(Lio/flutter/plugins/firebase/crashlytics/n;Ly5/d;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L378934.  v1.`io.flutter.plugins.firebase.crashlytics.n$d.p` @type ^`io.flutter.plugins.firebase.crashlytics.n` := v2 @kind object;
  #L378938.  v1.`io.flutter.plugins.firebase.crashlytics.n$d.o` @type ^`y5.d` := v3 @kind object;
  #L37893c.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L378942.  call temp:= `p`(v3) @signature `Ly5/d;.p:()Ljava/lang/String;` @kind virtual;
  #L378948.  v3:= temp @kind object;
  #L37894a.  v0:= "[DEFAULT]" @kind object;
  #L37894e.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L378954.  v3:= temp;
  #L378956.  if v3 == 0 then goto L37897c;
  #L37895a.  call temp:= `n`() @signature `Ly5/d;.n:()Ly5/d;` @kind static;
  #L378960.  v3:= temp @kind object;
  #L378962.  call temp:= `n`(v2, v3) @signature `Lio/flutter/plugins/firebase/crashlytics/n;.n:(Lio/flutter/plugins/firebase/crashlytics/n;Ly5/d;)Z` @kind static;
  #L378968.  v2:= temp;
  #L37896a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L378970.  v2:= temp @kind object;
  #L378972.  v3:= "isCrashlyticsCollectionEnabled" @kind object;
  #L378976.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L37897c.  return @kind void;
}
