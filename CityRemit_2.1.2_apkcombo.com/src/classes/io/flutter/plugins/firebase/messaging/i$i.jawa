record `io.flutter.plugins.firebase.messaging.i$i` @kind class @AccessFlag ABSTRACT {
  `android.content.ComponentName` `io.flutter.plugins.firebase.messaging.i$i.a` @AccessFlag FINAL;
  `boolean` `io.flutter.plugins.firebase.messaging.i$i.b` @AccessFlag ;
  `int` `io.flutter.plugins.firebase.messaging.i$i.c` @AccessFlag ;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.messaging.i$i` v0 @kind this, `android.content.ComponentName` v1 @kind object) @signature `Lio/flutter/plugins/firebase/messaging/i$i;.<init>:(Landroid/content/ComponentName;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37c440.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37c446.  v0.`io.flutter.plugins.firebase.messaging.i$i.a` @type ^`android.content.ComponentName` := v1 @kind object;
  #L37c44a.  return @kind void;
}
procedure `void` `a`(`android.content.Intent` v0 @kind object) @signature `Lio/flutter/plugins/firebase/messaging/i$i;.a:(Landroid/content/Intent;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `b`(`io.flutter.plugins.firebase.messaging.i$i` v3 @kind this, `int` v4 ) @signature `Lio/flutter/plugins/firebase/messaging/i$i;.b:(I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L37c45c.  v0:= v3.`io.flutter.plugins.firebase.messaging.i$i.b` @type ^`boolean` @kind boolean;
  #L37c460.  if v0 != 0 then goto L37c470;
  #L37c464.  v0:= 1I;
  #L37c466.  v3.`io.flutter.plugins.firebase.messaging.i$i.b` @type ^`boolean` := v0 @kind boolean;
  #L37c46a.  v3.`io.flutter.plugins.firebase.messaging.i$i.c` @type ^`int` := v4;
  #L37c46e.  goto L37c478;
  #L37c470.  v0:= v3.`io.flutter.plugins.firebase.messaging.i$i.c` @type ^`int`;
  #L37c474.  if v0 != v4 then goto L37c47a;
  #L37c478.  return @kind void;
  #L37c47a.  v0:= new `java.lang.IllegalArgumentException`;
  #L37c47e.  v1:= new `java.lang.StringBuilder`;
  #L37c482.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37c488.  v2:= "Given job ID " @kind object;
  #L37c48c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c492.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c498.  v4:= " is different than previous " @kind object;
  #L37c49c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c4a2.  v4:= v3.`io.flutter.plugins.firebase.messaging.i$i.c` @type ^`int`;
  #L37c4a6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c4ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37c4b2.  v4:= temp @kind object;
  #L37c4b4.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37c4ba.  throw v0;
}
procedure `void` `c`(`io.flutter.plugins.firebase.messaging.i$i` v0 @kind this) @signature `Lio/flutter/plugins/firebase/messaging/i$i;.c:()V` @AccessFlag PUBLIC {
    temp;

  #L37c4cc.  return @kind void;
}
procedure `void` `d`(`io.flutter.plugins.firebase.messaging.i$i` v0 @kind this) @signature `Lio/flutter/plugins/firebase/messaging/i$i;.d:()V` @AccessFlag PUBLIC {
    temp;

  #L37c4e0.  return @kind void;
}
procedure `void` `e`(`io.flutter.plugins.firebase.messaging.i$i` v0 @kind this) @signature `Lio/flutter/plugins/firebase/messaging/i$i;.e:()V` @AccessFlag PUBLIC {
    temp;

  #L37c4f4.  return @kind void;
}
