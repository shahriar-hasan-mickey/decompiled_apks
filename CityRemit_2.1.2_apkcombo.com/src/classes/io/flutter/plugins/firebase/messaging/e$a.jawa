record `io.flutter.plugins.firebase.messaging.e$a` @kind class @AccessFlag  extends `java.util.HashMap` @kind class {
  `java.lang.String` `io.flutter.plugins.firebase.messaging.e$a.o` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.messaging.e$a` v0 @kind this, `io.flutter.plugins.firebase.messaging.e` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lio/flutter/plugins/firebase/messaging/e$a;.<init>:(Lio/flutter/plugins/firebase/messaging/e;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37a0c8.  v0.`io.flutter.plugins.firebase.messaging.e$a.o` @type ^`java.lang.String` := v2 @kind object;
  #L37a0cc.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L37a0d2.  v1:= "token" @kind object;
  #L37a0d6.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L37a0dc.  return @kind void;
}
