record `io.flutter.plugins.firebase.messaging.b$b` @kind class @AccessFlag  extends `java.util.HashMap` @kind class {
  `java.util.Map` `io.flutter.plugins.firebase.messaging.b$b.o` @AccessFlag FINAL_SYNTHETIC;
  `io.flutter.plugins.firebase.messaging.b` `io.flutter.plugins.firebase.messaging.b$b.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.messaging.b$b` v2 @kind this, `io.flutter.plugins.firebase.messaging.b` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lio/flutter/plugins/firebase/messaging/b$b;.<init>:(Lio/flutter/plugins/firebase/messaging/b;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3797d4.  v2.`io.flutter.plugins.firebase.messaging.b$b.p` @type ^`io.flutter.plugins.firebase.messaging.b` := v3 @kind object;
  #L3797d8.  v2.`io.flutter.plugins.firebase.messaging.b$b.o` @type ^`java.util.Map` := v4 @kind object;
  #L3797dc.  call `<init>`(v2) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3797e2.  call temp:= `c`(v3) @signature `Lio/flutter/plugins/firebase/messaging/b;.c:(Lio/flutter/plugins/firebase/messaging/b;)J` @kind static;
  #L3797e8.  v0:= temp @kind wide;
  #L3797ea.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3797f0.  v3:= temp @kind object;
  #L3797f2.  v0:= "userCallbackHandle" @kind object;
  #L3797f6.  call temp:= `put`(v2, v0, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3797fc.  v3:= "message" @kind object;
  #L379800.  call temp:= `put`(v2, v3, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L379806.  return @kind void;
}
