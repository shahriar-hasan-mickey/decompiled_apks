record `io.flutter.plugins.firebase.core.l$g` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `io.flutter.plugins.firebase.core.l$g.a` @AccessFlag PRIVATE;
  `io.flutter.plugins.firebase.core.l$f` `io.flutter.plugins.firebase.core.l$g.b` @AccessFlag PRIVATE;
  `java.lang.Boolean` `io.flutter.plugins.firebase.core.l$g.c` @AccessFlag PRIVATE;
  `java.util.Map` `io.flutter.plugins.firebase.core.l$g.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.core.l$g` v0 @kind this) @signature `Lio/flutter/plugins/firebase/core/l$g;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L378358.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37835e.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.core.l$g` v0 @kind this, `io.flutter.plugins.firebase.core.l$a` v1 @kind object) @signature `Lio/flutter/plugins/firebase/core/l$g;.<init>:(Lio/flutter/plugins/firebase/core/l$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L378370.  call `<init>`(v0) @signature `Lio/flutter/plugins/firebase/core/l$g;.<init>:()V` @kind direct;
  #L378376.  return @kind void;
}
procedure `io.flutter.plugins.firebase.core.l$g` `a`(`java.util.Map` v2 @kind object) @signature `Lio/flutter/plugins/firebase/core/l$g;.a:(Ljava/util/Map;)Lio/flutter/plugins/firebase/core/l$g;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L378270.  v0:= new `io.flutter.plugins.firebase.core.l$g`;
  #L378274.  call `<init>`(v0) @signature `Lio/flutter/plugins/firebase/core/l$g;.<init>:()V` @kind direct;
  #L37827a.  v1:= "name" @kind object;
  #L37827e.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L378284.  v1:= temp @kind object;
  #L378286.  v1:= (`java.lang.String`) v1 @kind object;
  #L37828a.  call `c`(v0, v1) @signature `Lio/flutter/plugins/firebase/core/l$g;.c:(Ljava/lang/String;)V` @kind virtual;
  #L378290.  v1:= "options" @kind object;
  #L378294.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L37829a.  v1:= temp @kind object;
  #L37829c.  if v1 != 0 then goto L3782a4;
  #L3782a0.  v1:= 0I;
  #L3782a2.  goto L3782b0;
  #L3782a4.  v1:= (`java.util.Map`) v1 @kind object;
  #L3782a8.  call temp:= `a`(v1) @signature `Lio/flutter/plugins/firebase/core/l$f;.a:(Ljava/util/Map;)Lio/flutter/plugins/firebase/core/l$f;` @kind static;
  #L3782ae.  v1:= temp @kind object;
  #L3782b0.  call `d`(v0, v1) @signature `Lio/flutter/plugins/firebase/core/l$g;.d:(Lio/flutter/plugins/firebase/core/l$f;)V` @kind virtual;
  #L3782b6.  v1:= "isAutomaticDataCollectionEnabled" @kind object;
  #L3782ba.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3782c0.  v1:= temp @kind object;
  #L3782c2.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L3782c6.  call `b`(v0, v1) @signature `Lio/flutter/plugins/firebase/core/l$g;.b:(Ljava/lang/Boolean;)V` @kind virtual;
  #L3782cc.  v1:= "pluginConstants" @kind object;
  #L3782d0.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3782d6.  v2:= temp @kind object;
  #L3782d8.  v2:= (`java.util.Map`) v2 @kind object;
  #L3782dc.  call `e`(v0, v2) @signature `Lio/flutter/plugins/firebase/core/l$g;.e:(Ljava/util/Map;)V` @kind virtual;
  #L3782e2.  return v0 @kind object;
}
procedure `void` `b`(`io.flutter.plugins.firebase.core.l$g` v0 @kind this, `java.lang.Boolean` v1 @kind object) @signature `Lio/flutter/plugins/firebase/core/l$g;.b:(Ljava/lang/Boolean;)V` @AccessFlag PUBLIC {
    temp;

  #L378388.  v0.`io.flutter.plugins.firebase.core.l$g.c` @type ^`java.lang.Boolean` := v1 @kind object;
  #L37838c.  return @kind void;
}
procedure `void` `c`(`io.flutter.plugins.firebase.core.l$g` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lio/flutter/plugins/firebase/core/l$g;.c:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3783a0.  if v2 == 0 then goto L3783aa;
  #L3783a4.  v1.`io.flutter.plugins.firebase.core.l$g.a` @type ^`java.lang.String` := v2 @kind object;
  #L3783a8.  return @kind void;
  #L3783aa.  v2:= new `java.lang.IllegalStateException`;
  #L3783ae.  v0:= "Nonnull field \"name\" is null." @kind object;
  #L3783b2.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3783b8.  throw v2;
}
procedure `void` `d`(`io.flutter.plugins.firebase.core.l$g` v1 @kind this, `io.flutter.plugins.firebase.core.l$f` v2 @kind object) @signature `Lio/flutter/plugins/firebase/core/l$g;.d:(Lio/flutter/plugins/firebase/core/l$f;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3783cc.  if v2 == 0 then goto L3783d6;
  #L3783d0.  v1.`io.flutter.plugins.firebase.core.l$g.b` @type ^`io.flutter.plugins.firebase.core.l$f` := v2 @kind object;
  #L3783d4.  return @kind void;
  #L3783d6.  v2:= new `java.lang.IllegalStateException`;
  #L3783da.  v0:= "Nonnull field \"options\" is null." @kind object;
  #L3783de.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3783e4.  throw v2;
}
procedure `void` `e`(`io.flutter.plugins.firebase.core.l$g` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lio/flutter/plugins/firebase/core/l$g;.e:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3783f8.  if v2 == 0 then goto L378402;
  #L3783fc.  v1.`io.flutter.plugins.firebase.core.l$g.d` @type ^`java.util.Map` := v2 @kind object;
  #L378400.  return @kind void;
  #L378402.  v2:= new `java.lang.IllegalStateException`;
  #L378406.  v0:= "Nonnull field \"pluginConstants\" is null." @kind object;
  #L37840a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L378410.  throw v2;
}
procedure `java.util.Map` `f`(`io.flutter.plugins.firebase.core.l$g` v3 @kind this) @signature `Lio/flutter/plugins/firebase/core/l$g;.f:()Ljava/util/Map;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3782f4.  v0:= new `java.util.HashMap`;
  #L3782f8.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3782fe.  v1:= v3.`io.flutter.plugins.firebase.core.l$g.a` @type ^`java.lang.String` @kind object;
  #L378302.  v2:= "name" @kind object;
  #L378306.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L37830c.  v1:= v3.`io.flutter.plugins.firebase.core.l$g.b` @type ^`io.flutter.plugins.firebase.core.l$f` @kind object;
  #L378310.  if v1 != 0 then goto L378318;
  #L378314.  v1:= 0I;
  #L378316.  goto L378320;
  #L378318.  call temp:= `w`(v1) @signature `Lio/flutter/plugins/firebase/core/l$f;.w:()Ljava/util/Map;` @kind virtual;
  #L37831e.  v1:= temp @kind object;
  #L378320.  v2:= "options" @kind object;
  #L378324.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L37832a.  v1:= v3.`io.flutter.plugins.firebase.core.l$g.c` @type ^`java.lang.Boolean` @kind object;
  #L37832e.  v2:= "isAutomaticDataCollectionEnabled" @kind object;
  #L378332.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L378338.  v1:= v3.`io.flutter.plugins.firebase.core.l$g.d` @type ^`java.util.Map` @kind object;
  #L37833c.  v2:= "pluginConstants" @kind object;
  #L378340.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L378346.  return v0 @kind object;
}
