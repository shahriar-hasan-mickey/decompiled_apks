record `io.flutter.plugins.firebase.core.p$c` @kind class @AccessFlag  extends `io.flutter.plugins.firebase.core.l$h` @kind interface {
  `java.util.Map` `io.flutter.plugins.firebase.core.p$c.a` @AccessFlag FINAL_SYNTHETIC;
  `ha.a$e` `io.flutter.plugins.firebase.core.p$c.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.core.p$c` v0 @kind this, `java.util.Map` v1 @kind object, `ha.a$e` v2 @kind object) @signature `Lio/flutter/plugins/firebase/core/p$c;.<init>:(Ljava/util/Map;Lha/a$e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3774d4.  v0.`io.flutter.plugins.firebase.core.p$c.a` @type ^`java.util.Map` := v1 @kind object;
  #L3774d8.  v0.`io.flutter.plugins.firebase.core.p$c.b` @type ^`ha.a$e` := v2 @kind object;
  #L3774dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3774e2.  return @kind void;
}
procedure `void` `a`(`io.flutter.plugins.firebase.core.p$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/flutter/plugins/firebase/core/p$c;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L37752c.  v1:= (`java.lang.Void`) v1 @kind object;
  #L377530.  call `c`(v0, v1) @signature `Lio/flutter/plugins/firebase/core/p$c;.c:(Ljava/lang/Void;)V` @kind virtual;
  #L377536.  return @kind void;
}
procedure `void` `b`(`io.flutter.plugins.firebase.core.p$c` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lio/flutter/plugins/firebase/core/p$c;.b:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3774f4.  v0:= v2.`io.flutter.plugins.firebase.core.p$c.a` @type ^`java.util.Map` @kind object;
  #L3774f8.  call temp:= `a`(v3) @signature `Lio/flutter/plugins/firebase/core/l;.a:(Ljava/lang/Throwable;)Ljava/util/Map;` @kind static;
  #L3774fe.  v3:= temp @kind object;
  #L377500.  v1:= "error" @kind object;
  #L377504.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L37750a.  v3:= v2.`io.flutter.plugins.firebase.core.p$c.b` @type ^`ha.a$e` @kind object;
  #L37750e.  v0:= v2.`io.flutter.plugins.firebase.core.p$c.a` @type ^`java.util.Map` @kind object;
  #L377512.  call `a`(v3, v0) @signature `Lha/a$e;.a:(Ljava/lang/Object;)V` @kind interface;
  #L377518.  return @kind void;
}
procedure `void` `c`(`io.flutter.plugins.firebase.core.p$c` v2 @kind this, `java.lang.Void` v3 @kind object) @signature `Lio/flutter/plugins/firebase/core/p$c;.c:(Ljava/lang/Void;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L377548.  v3:= v2.`io.flutter.plugins.firebase.core.p$c.a` @type ^`java.util.Map` @kind object;
  #L37754c.  v0:= "result" @kind object;
  #L377550.  v1:= 0I;
  #L377552.  call temp:= `put`(v3, v0, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L377558.  v3:= v2.`io.flutter.plugins.firebase.core.p$c.b` @type ^`ha.a$e` @kind object;
  #L37755c.  v0:= v2.`io.flutter.plugins.firebase.core.p$c.a` @type ^`java.util.Map` @kind object;
  #L377560.  call `a`(v3, v0) @signature `Lha/a$e;.a:(Ljava/lang/Object;)V` @kind interface;
  #L377566.  return @kind void;
}
