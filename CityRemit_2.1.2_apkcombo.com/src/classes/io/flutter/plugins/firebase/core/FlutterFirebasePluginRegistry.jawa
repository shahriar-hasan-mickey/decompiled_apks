record `io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry` @kind class @AccessFlag PUBLIC {
}
global `java.util.Map` `@@io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry.registeredPlugins` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L376e7c.  v0:= new `java.util.WeakHashMap`;
  #L376e80.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L376e86.  `@@io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry.registeredPlugins` @type ^`java.util.Map` := v0 @kind object;
  #L376e8a.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry` v0 @kind this) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L376e9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L376ea2.  return @kind void;
}
procedure `void` `a`(`y5.d` v0 @kind object, `a5.m` v1 @kind object) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.a:(Ly5/d;La5/m;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L376e4c.  call `lambda$getPluginConstantsForFirebaseApp$0`(v0, v1) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.lambda$getPluginConstantsForFirebaseApp$0:(Ly5/d;La5/m;)V` @kind static;
  #L376e52.  return @kind void;
}
procedure `void` `b`(`a5.m` v0 @kind object) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.b:(La5/m;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L376e64.  call `lambda$didReinitializeFirebaseCore$1`(v0) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.lambda$didReinitializeFirebaseCore$1:(La5/m;)V` @kind static;
  #L376e6a.  return @kind void;
}
procedure `a5.l` `didReinitializeFirebaseCore`() @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.didReinitializeFirebaseCore:()La5/l;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L376ddc.  v0:= new `a5.m`;
  #L376de0.  call `<init>`(v0) @signature `La5/m;.<init>:()V` @kind direct;
  #L376de6.  v1:= `@@io.flutter.plugins.firebase.core.FlutterFirebasePlugin.cachedThreadPool` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L376dea.  v2:= new `io.flutter.plugins.firebase.core.j`;
  #L376dee.  call `<init>`(v2, v0) @signature `Lio/flutter/plugins/firebase/core/j;.<init>:(La5/m;)V` @kind direct;
  #L376df4.  call `execute`(v1, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L376dfa.  call temp:= `a`(v0) @signature `La5/m;.a:()La5/l;` @kind virtual;
  #L376e00.  v0:= temp @kind object;
  #L376e02.  return v0 @kind object;
}
procedure `a5.l` `getPluginConstantsForFirebaseApp`(`y5.d` v3 @kind object) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.getPluginConstantsForFirebaseApp:(Ly5/d;)La5/l;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L376e14.  v0:= new `a5.m`;
  #L376e18.  call `<init>`(v0) @signature `La5/m;.<init>:()V` @kind direct;
  #L376e1e.  v1:= `@@io.flutter.plugins.firebase.core.FlutterFirebasePlugin.cachedThreadPool` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L376e22.  v2:= new `io.flutter.plugins.firebase.core.k`;
  #L376e26.  call `<init>`(v2, v3, v0) @signature `Lio/flutter/plugins/firebase/core/k;.<init>:(Ly5/d;La5/m;)V` @kind direct;
  #L376e2c.  call `execute`(v1, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L376e32.  call temp:= `a`(v0) @signature `La5/m;.a:()La5/l;` @kind virtual;
  #L376e38.  v3:= temp @kind object;
  #L376e3a.  return v3 @kind object;
}
procedure `void` `lambda$didReinitializeFirebaseCore$1`(`a5.m` v2 @kind object) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.lambda$didReinitializeFirebaseCore$1:(La5/m;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L376eb4.  v0:= `@@io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry.registeredPlugins` @type ^`java.util.Map` @kind object;
  #L376eb8.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L376ebe.  v0:= temp @kind object;
  #L376ec0.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L376ec6.  v0:= temp @kind object;
  #L376ec8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L376ece.  v1:= temp;
  #L376ed0.  if v1 == 0 then goto L376efc;
  #L376ed4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L376eda.  v1:= temp @kind object;
  #L376edc.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L376ee0.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L376ee6.  v1:= temp @kind object;
  #L376ee8.  v1:= (`io.flutter.plugins.firebase.core.FlutterFirebasePlugin`) v1 @kind object;
  #L376eec.  call temp:= `didReinitializeFirebaseCore`(v1) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePlugin;.didReinitializeFirebaseCore:()La5/l;` @kind interface;
  #L376ef2.  v1:= temp @kind object;
  #L376ef4.  call temp:= `a`(v1) @signature `La5/o;.a:(La5/l;)Ljava/lang/Object;` @kind static;
  #L376efa.  goto L376ec8;
  #L376efc.  v0:= 0I;
  #L376efe.  call `c`(v2, v0) @signature `La5/m;.c:(Ljava/lang/Object;)V` @kind virtual;
  #L376f04.  goto L376f0e;
  #L376f06.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L376f08.  call `b`(v2, v0) @signature `La5/m;.b:(Ljava/lang/Exception;)V` @kind virtual;
  #L376f0e.  return @kind void;
  catch `java.lang.Exception` @[L376eb4..L376f04] goto L376f06;
}
procedure `void` `lambda$getPluginConstantsForFirebaseApp$0`(`y5.d` v4 @kind object, `a5.m` v5 @kind object) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.lambda$getPluginConstantsForFirebaseApp$0:(Ly5/d;La5/m;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L376f30.  v0:= new `java.util.HashMap`;
  #L376f34.  v1:= `@@io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry.registeredPlugins` @type ^`java.util.Map` @kind object;
  #L376f38.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L376f3e.  v2:= temp;
  #L376f40.  call `<init>`(v0, v2) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L376f46.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L376f4c.  v1:= temp @kind object;
  #L376f4e.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L376f54.  v1:= temp @kind object;
  #L376f56.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L376f5c.  v2:= temp;
  #L376f5e.  if v2 == 0 then goto L376f9e;
  #L376f62.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L376f68.  v2:= temp @kind object;
  #L376f6a.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L376f6e.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L376f74.  v3:= temp @kind object;
  #L376f76.  v3:= (`java.lang.String`) v3 @kind object;
  #L376f7a.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L376f80.  v2:= temp @kind object;
  #L376f82.  v2:= (`io.flutter.plugins.firebase.core.FlutterFirebasePlugin`) v2 @kind object;
  #L376f86.  call temp:= `getPluginConstantsForFirebaseApp`(v2, v4) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePlugin;.getPluginConstantsForFirebaseApp:(Ly5/d;)La5/l;` @kind interface;
  #L376f8c.  v2:= temp @kind object;
  #L376f8e.  call temp:= `a`(v2) @signature `La5/o;.a:(La5/l;)Ljava/lang/Object;` @kind static;
  #L376f94.  v2:= temp @kind object;
  #L376f96.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L376f9c.  goto L376f56;
  #L376f9e.  call `c`(v5, v0) @signature `La5/m;.c:(Ljava/lang/Object;)V` @kind virtual;
  #L376fa4.  goto L376fae;
  #L376fa6.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L376fa8.  call `b`(v5, v4) @signature `La5/m;.b:(Ljava/lang/Exception;)V` @kind virtual;
  #L376fae.  return @kind void;
  catch `java.lang.Exception` @[L376f30..L376fa4] goto L376fa6;
}
procedure `void` `registerPlugin`(`java.lang.String` v1 @kind object, `io.flutter.plugins.firebase.core.FlutterFirebasePlugin` v2 @kind object) @signature `Lio/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry;.registerPlugin:(Ljava/lang/String;Lio/flutter/plugins/firebase/core/FlutterFirebasePlugin;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L376fd0.  v0:= `@@io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry.registeredPlugins` @type ^`java.util.Map` @kind object;
  #L376fd4.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L376fda.  return @kind void;
}
