record `io.flutter.embedding.android.q` @kind class @AccessFlag PUBLIC {
  `long` `io.flutter.embedding.android.q.a` @AccessFlag ;
  `io.flutter.embedding.android.q$a` `io.flutter.embedding.android.q.b` @AccessFlag ;
  `long` `io.flutter.embedding.android.q.c` @AccessFlag ;
  `long` `io.flutter.embedding.android.q.d` @AccessFlag ;
  `boolean` `io.flutter.embedding.android.q.e` @AccessFlag ;
  `java.lang.String` `io.flutter.embedding.android.q.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.flutter.embedding.android.q` v0 @kind this) @signature `Lio/flutter/embedding/android/q;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L365904.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36590a.  return @kind void;
}
procedure `java.nio.ByteBuffer` `a`(`io.flutter.embedding.android.q` v5 @kind this) @signature `Lio/flutter/embedding/android/q;.a:()Ljava/nio/ByteBuffer;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L365840.  v0:= v5.`io.flutter.embedding.android.q.f` @type ^`java.lang.String` @kind object;
  #L365844.  if v0 != 0 then goto L36584c;
  #L365848.  v0:= 0I;
  #L36584a.  goto L365858;
  #L36584c.  v1:= "UTF-8" @kind object;
  #L365850.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L365856.  v0:= temp @kind object;
  #L365858.  if v0 != 0 then goto L365860;
  #L36585c.  v1:= 0I;
  #L36585e.  goto L365862;
  #L365860.  v1:= length @variable v0;
  #L365862.  v2:= v1 + 48;
  #L365866.  call temp:= `allocateDirect`(v2) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L36586c.  v2:= temp @kind object;
  #L36586e.  v3:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L365872.  call temp:= `order`(v2, v3) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L365878.  v3:= (`long`) v1 @kind i2l;
  #L36587a.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L365880.  v3:= v5.`io.flutter.embedding.android.q.a` @type ^`long` @kind wide;
  #L365884.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L36588a.  v1:= v5.`io.flutter.embedding.android.q.b` @type ^`io.flutter.embedding.android.q$a` @kind object;
  #L36588e.  call temp:= `c`(v1) @signature `Lio/flutter/embedding/android/q$a;.c:()J` @kind virtual;
  #L365894.  v3:= temp @kind wide;
  #L365896.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L36589c.  v3:= v5.`io.flutter.embedding.android.q.c` @type ^`long` @kind wide;
  #L3658a0.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3658a6.  v3:= v5.`io.flutter.embedding.android.q.d` @type ^`long` @kind wide;
  #L3658aa.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3658b0.  v1:= v5.`io.flutter.embedding.android.q.e` @type ^`boolean` @kind boolean;
  #L3658b4.  if v1 == 0 then goto L3658be;
  #L3658b8.  v3:= 1L;
  #L3658bc.  goto L3658c2;
  #L3658be.  v3:= 0L;
  #L3658c2.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3658c8.  if v0 == 0 then goto L3658d2;
  #L3658cc.  call temp:= `put`(v2, v0) @signature `Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3658d2.  return v2 @kind object;
  #L3658d4.  v0:= new `java.lang.AssertionError`;
  #L3658d8.  v1:= "UTF-8 not supported" @kind object;
  #L3658dc.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3658e2.  throw v0;
  catch `java.io.UnsupportedEncodingException` @[L365840..L365858] goto L3658d4;
}
