record `n5.b$a` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@n5.b$a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ln5/b$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3f1a88.  call temp:= `values`() @signature `Ljava/math/RoundingMode;.values:()[Ljava/math/RoundingMode;` @kind static;
  #L3f1a8e.  v0:= temp @kind object;
  #L3f1a90.  v0:= length @variable v0;
  #L3f1a92.  v0:= new `int`[v0];
  #L3f1a96.  `@@n5.b$a.a` @type ^`int`[] := v0 @kind object;
  #L3f1a9a.  v1:= `@@java.math.RoundingMode.UNNECESSARY` @type ^`java.math.RoundingMode` @kind object;
  #L3f1a9e.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L3f1aa4.  v1:= temp;
  #L3f1aa6.  v2:= 1I;
  #L3f1aa8.  v0[v1]:= v2;
  #L3f1aac.  v0:= `@@n5.b$a.a` @type ^`int`[] @kind object;
  #L3f1ab0.  v1:= `@@java.math.RoundingMode.DOWN` @type ^`java.math.RoundingMode` @kind object;
  #L3f1ab4.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L3f1aba.  v1:= temp;
  #L3f1abc.  v2:= 2I;
  #L3f1abe.  v0[v1]:= v2;
  #L3f1ac2.  v0:= `@@n5.b$a.a` @type ^`int`[] @kind object;
  #L3f1ac6.  v1:= `@@java.math.RoundingMode.FLOOR` @type ^`java.math.RoundingMode` @kind object;
  #L3f1aca.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L3f1ad0.  v1:= temp;
  #L3f1ad2.  v2:= 3I;
  #L3f1ad4.  v0[v1]:= v2;
  #L3f1ad8.  v0:= `@@n5.b$a.a` @type ^`int`[] @kind object;
  #L3f1adc.  v1:= `@@java.math.RoundingMode.UP` @type ^`java.math.RoundingMode` @kind object;
  #L3f1ae0.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L3f1ae6.  v1:= temp;
  #L3f1ae8.  v2:= 4I;
  #L3f1aea.  v0[v1]:= v2;
  #L3f1aee.  v0:= `@@n5.b$a.a` @type ^`int`[] @kind object;
  #L3f1af2.  v1:= `@@java.math.RoundingMode.CEILING` @type ^`java.math.RoundingMode` @kind object;
  #L3f1af6.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L3f1afc.  v1:= temp;
  #L3f1afe.  v2:= 5I;
  #L3f1b00.  v0[v1]:= v2;
  #L3f1b04.  v0:= `@@n5.b$a.a` @type ^`int`[] @kind object;
  #L3f1b08.  v1:= `@@java.math.RoundingMode.HALF_DOWN` @type ^`java.math.RoundingMode` @kind object;
  #L3f1b0c.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L3f1b12.  v1:= temp;
  #L3f1b14.  v2:= 6I;
  #L3f1b16.  v0[v1]:= v2;
  #L3f1b1a.  v0:= `@@n5.b$a.a` @type ^`int`[] @kind object;
  #L3f1b1e.  v1:= `@@java.math.RoundingMode.HALF_UP` @type ^`java.math.RoundingMode` @kind object;
  #L3f1b22.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L3f1b28.  v1:= temp;
  #L3f1b2a.  v2:= 7I;
  #L3f1b2c.  v0[v1]:= v2;
  #L3f1b30.  v0:= `@@n5.b$a.a` @type ^`int`[] @kind object;
  #L3f1b34.  v1:= `@@java.math.RoundingMode.HALF_EVEN` @type ^`java.math.RoundingMode` @kind object;
  #L3f1b38.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L3f1b3e.  v1:= temp;
  #L3f1b40.  v2:= 8I;
  #L3f1b44.  v0[v1]:= v2;
  #L3f1b48.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L3f1a9a..L3f1aac] goto L3f1aac;
  catch `java.lang.NoSuchFieldError` @[L3f1aac..L3f1ac2] goto L3f1ac2;
  catch `java.lang.NoSuchFieldError` @[L3f1ac2..L3f1ad8] goto L3f1ad8;
  catch `java.lang.NoSuchFieldError` @[L3f1ad8..L3f1aee] goto L3f1aee;
  catch `java.lang.NoSuchFieldError` @[L3f1aee..L3f1b04] goto L3f1b04;
  catch `java.lang.NoSuchFieldError` @[L3f1b04..L3f1b1a] goto L3f1b1a;
  catch `java.lang.NoSuchFieldError` @[L3f1b1a..L3f1b30] goto L3f1b30;
  catch `java.lang.NoSuchFieldError` @[L3f1b30..L3f1b48] goto L3f1b48;
}
