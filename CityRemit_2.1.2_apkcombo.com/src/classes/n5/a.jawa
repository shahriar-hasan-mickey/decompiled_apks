record `n5.a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<clinit>`() @signature `Ln5/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3f1a50.  v0:= new `java.math.BigInteger`;
  #L3f1a54.  v1:= "16a09e667f3bcc908b2fb1366ea957d3e3adec17512775099da2f590b0667322a" @kind object;
  #L3f1a58.  v2:= 16I;
  #L3f1a5c.  call `<init>`(v0, v1, v2) @signature `Ljava/math/BigInteger;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3f1a62.  v0:= 10.0D;
  #L3f1a66.  call temp:= `log`(v0) @signature `Ljava/lang/Math;.log:(D)D` @kind static;
  #L3f1a6c.  v0:= 2.0D;
  #L3f1a70.  call temp:= `log`(v0) @signature `Ljava/lang/Math;.log:(D)D` @kind static;
  #L3f1a76.  return @kind void;
}
procedure `java.math.BigInteger` `a`(`java.math.BigInteger` v1 @kind object, `java.math.BigInteger` v2 @kind object, `java.math.RoundingMode` v3 @kind object) @signature `Ln5/a;.a:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f1a18.  v0:= new `java.math.BigDecimal`;
  #L3f1a1c.  call `<init>`(v0, v1) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;)V` @kind direct;
  #L3f1a22.  v1:= new `java.math.BigDecimal`;
  #L3f1a26.  call `<init>`(v1, v2) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;)V` @kind direct;
  #L3f1a2c.  v2:= 0I;
  #L3f1a2e.  call temp:= `divide`(v0, v1, v2, v3) @signature `Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;` @kind virtual;
  #L3f1a34.  v1:= temp @kind object;
  #L3f1a36.  call temp:= `toBigIntegerExact`(v1) @signature `Ljava/math/BigDecimal;.toBigIntegerExact:()Ljava/math/BigInteger;` @kind virtual;
  #L3f1a3c.  v1:= temp @kind object;
  #L3f1a3e.  return v1 @kind object;
}
