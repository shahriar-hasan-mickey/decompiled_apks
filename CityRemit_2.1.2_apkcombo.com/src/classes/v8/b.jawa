record `v8.b` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`v8.b` v0 @kind this) @signature `Lv8/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a5d3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a5d42.  return @kind void;
}
procedure `v8.b$a` `a`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lv8/b;.a:(Ljava/lang/String;Ljava/lang/String;Z)Lv8/b$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4a5d0c.  v0:= new `v8.e`;
  #L4a5d10.  call `<init>`(v0) @signature `Lv8/e;.<init>:()V` @kind direct;
  #L4a5d16.  call temp:= `d`(v0, v1) @signature `Lv8/e;.d:(Ljava/lang/String;)Lv8/b$a;` @kind virtual;
  #L4a5d1c.  call temp:= `b`(v0, v2) @signature `Lv8/b$a;.b:(Ljava/lang/String;)Lv8/b$a;` @kind virtual;
  #L4a5d22.  call temp:= `c`(v0, v3) @signature `Lv8/b$a;.c:(Z)Lv8/b$a;` @kind virtual;
  #L4a5d28.  return v0 @kind object;
}
procedure `java.lang.String` `b`() @signature `Lv8/b;.b:()Ljava/lang/String;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.lang.String` `c`() @signature `Lv8/b;.c:()Ljava/lang/String;` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `d`() @signature `Lv8/b;.d:()Z` @AccessFlag ABSTRACT {

  # return;
}
