record `v8.c` @kind class @AccessFlag FINAL extends `v8.s` @kind class {
  `v8.t` `v8.c.a` @AccessFlag PRIVATE_FINAL;
  `com.google.android.gms.internal.mlkit_vision_text_bundled_common.hw` `v8.c.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `v8.c.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`v8.c` v0 @kind this, `v8.t` v1 @kind object, `com.google.android.gms.internal.mlkit_vision_text_bundled_common.hw` v2 @kind object, `boolean` v3 ) @signature `Lv8/c;.<init>:(Lv8/t;Lcom/google/android/gms/internal/mlkit_vision_text_bundled_common/hw;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a5eec.  call `<init>`(v0) @signature `Lv8/s;.<init>:()V` @kind direct;
  #L4a5ef2.  v0.`v8.c.a` @type ^`v8.t` := v1 @kind object;
  #L4a5ef6.  v0.`v8.c.b` @type ^`com.google.android.gms.internal.mlkit_vision_text_bundled_common.hw` := v2 @kind object;
  #L4a5efa.  v0.`v8.c.c` @type ^`boolean` := v3 @kind boolean;
  #L4a5efe.  return @kind void;
}
procedure `com.google.android.gms.internal.mlkit_vision_text_bundled_common.hw` `a`(`v8.c` v1 @kind this) @signature `Lv8/c;.a:()Lcom/google/android/gms/internal/mlkit_vision_text_bundled_common/hw;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a5dd8.  v0:= v1.`v8.c.b` @type ^`com.google.android.gms.internal.mlkit_vision_text_bundled_common.hw` @kind object;
  #L4a5ddc.  return v0 @kind object;
}
procedure `v8.t` `b`(`v8.c` v1 @kind this) @signature `Lv8/c;.b:()Lv8/t;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a5ed4.  v0:= v1.`v8.c.a` @type ^`v8.t` @kind object;
  #L4a5ed8.  return v0 @kind object;
}
procedure `boolean` `c`(`v8.c` v1 @kind this) @signature `Lv8/c;.c:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4a5dc0.  v0:= v1.`v8.c.c` @type ^`boolean` @kind boolean;
  #L4a5dc4.  return v0;
}
procedure `boolean` `equals`(`v8.c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lv8/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a5d54.  v0:= 1I;
  #L4a5d56.  if v5 != v4 then goto L4a5d5c;
  #L4a5d5a.  return v0;
  #L4a5d5c.  v1:= instanceof @variable v5 @type ^`v8.s` @kind boolean;
  #L4a5d60.  v2:= 0I;
  #L4a5d62.  if v1 == 0 then goto L4a5dac;
  #L4a5d66.  v5:= (`v8.s`) v5 @kind object;
  #L4a5d6a.  v1:= v4.`v8.c.a` @type ^`v8.t` @kind object;
  #L4a5d6e.  call temp:= `b`(v5) @signature `Lv8/s;.b:()Lv8/t;` @kind virtual;
  #L4a5d74.  v3:= temp @kind object;
  #L4a5d76.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4a5d7c.  v1:= temp;
  #L4a5d7e.  if v1 == 0 then goto L4a5dac;
  #L4a5d82.  v1:= v4.`v8.c.b` @type ^`com.google.android.gms.internal.mlkit_vision_text_bundled_common.hw` @kind object;
  #L4a5d86.  call temp:= `a`(v5) @signature `Lv8/s;.a:()Lcom/google/android/gms/internal/mlkit_vision_text_bundled_common/hw;` @kind virtual;
  #L4a5d8c.  v3:= temp @kind object;
  #L4a5d8e.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4a5d94.  v1:= temp;
  #L4a5d96.  if v1 == 0 then goto L4a5dac;
  #L4a5d9a.  v1:= v4.`v8.c.c` @type ^`boolean` @kind boolean;
  #L4a5d9e.  call temp:= `c`(v5) @signature `Lv8/s;.c:()Z` @kind virtual;
  #L4a5da4.  v5:= temp;
  #L4a5da6.  if v1 != v5 then goto L4a5dac;
  #L4a5daa.  return v0;
  #L4a5dac.  return v2;
}
procedure `int` `hashCode`(`v8.c` v3 @kind this) @signature `Lv8/c;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a5df0.  v0:= v3.`v8.c.a` @type ^`v8.t` @kind object;
  #L4a5df4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4a5dfa.  v0:= temp;
  #L4a5dfc.  v1:= 1000003I;
  #L4a5e02.  v0:= v0 ^~ v1 @kind int;
  #L4a5e04.  v0:= v0 * v1 @kind int;
  #L4a5e08.  v2:= v3.`v8.c.b` @type ^`com.google.android.gms.internal.mlkit_vision_text_bundled_common.hw` @kind object;
  #L4a5e0c.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4a5e12.  v2:= temp;
  #L4a5e14.  v0:= v0 ^~ v2 @kind int;
  #L4a5e16.  v0:= v0 * v1 @kind int;
  #L4a5e1a.  v1:= v3.`v8.c.c` @type ^`boolean` @kind boolean;
  #L4a5e1e.  v2:= 1I;
  #L4a5e20.  if v2 == v1 then goto L4a5e2a;
  #L4a5e24.  v1:= 1237I;
  #L4a5e28.  goto L4a5e2e;
  #L4a5e2a.  v1:= 1231I;
  #L4a5e2e.  v0:= v0 ^~ v1 @kind int;
  #L4a5e30.  return v0;
}
procedure `java.lang.String` `toString`(`v8.c` v6 @kind this) @signature `Lv8/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a5e44.  v0:= v6.`v8.c.a` @type ^`v8.t` @kind object;
  #L4a5e48.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a5e4e.  v0:= temp @kind object;
  #L4a5e50.  v1:= v6.`v8.c.b` @type ^`com.google.android.gms.internal.mlkit_vision_text_bundled_common.hw` @kind object;
  #L4a5e54.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a5e5a.  v1:= temp @kind object;
  #L4a5e5c.  v2:= v6.`v8.c.c` @type ^`boolean` @kind boolean;
  #L4a5e60.  v3:= new `java.lang.StringBuilder`;
  #L4a5e64.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4a5e6a.  v4:= temp;
  #L4a5e6c.  v4:= v4 + 52;
  #L4a5e70.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4a5e76.  v5:= temp;
  #L4a5e78.  v4:= v4 + v5 @kind int;
  #L4a5e7a.  call `<init>`(v3, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L4a5e80.  v4:= "VkpResults{status=" @kind object;
  #L4a5e84.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5e8a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5e90.  v0:= ", textParcel=" @kind object;
  #L4a5e94.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5e9a.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5ea0.  v0:= ", fromColdCall=" @kind object;
  #L4a5ea4.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5eaa.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5eb0.  v0:= "}" @kind object;
  #L4a5eb4.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a5eba.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a5ec0.  v0:= temp @kind object;
  #L4a5ec2.  return v0 @kind object;
}
