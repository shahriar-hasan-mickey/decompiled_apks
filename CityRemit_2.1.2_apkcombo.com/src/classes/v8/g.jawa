record `v8.g` @kind class @AccessFlag FINAL extends `v8.b` @kind class {
  `java.lang.String` `v8.g.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `v8.g.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `v8.g.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`v8.g` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `boolean` v3 , `v8.f` v4 @kind object) @signature `Lv8/g;.<init>:(Ljava/lang/String;Ljava/lang/String;ZLv8/f;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4a62a0.  call `<init>`(v0) @signature `Lv8/b;.<init>:()V` @kind direct;
  #L4a62a6.  v0.`v8.g.a` @type ^`java.lang.String` := v1 @kind object;
  #L4a62aa.  v0.`v8.g.b` @type ^`java.lang.String` := v2 @kind object;
  #L4a62ae.  v0.`v8.g.c` @type ^`boolean` := v3 @kind boolean;
  #L4a62b2.  return @kind void;
}
procedure `java.lang.String` `b`(`v8.g` v1 @kind this) @signature `Lv8/g;.b:()Ljava/lang/String;` @AccessFlag FINAL {
    temp;
    v0;

  #L4a6270.  v0:= v1.`v8.g.a` @type ^`java.lang.String` @kind object;
  #L4a6274.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`v8.g` v1 @kind this) @signature `Lv8/g;.c:()Ljava/lang/String;` @AccessFlag FINAL {
    temp;
    v0;

  #L4a6288.  v0:= v1.`v8.g.b` @type ^`java.lang.String` @kind object;
  #L4a628c.  return v0 @kind object;
}
procedure `boolean` `d`(`v8.g` v1 @kind this) @signature `Lv8/g;.d:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L4a6184.  v0:= v1.`v8.g.c` @type ^`boolean` @kind boolean;
  #L4a6188.  return v0;
}
procedure `boolean` `equals`(`v8.g` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lv8/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a6118.  v0:= 1I;
  #L4a611a.  if v5 != v4 then goto L4a6120;
  #L4a611e.  return v0;
  #L4a6120.  v1:= instanceof @variable v5 @type ^`v8.b` @kind boolean;
  #L4a6124.  v2:= 0I;
  #L4a6126.  if v1 == 0 then goto L4a6170;
  #L4a612a.  v5:= (`v8.b`) v5 @kind object;
  #L4a612e.  v1:= v4.`v8.g.a` @type ^`java.lang.String` @kind object;
  #L4a6132.  call temp:= `b`(v5) @signature `Lv8/b;.b:()Ljava/lang/String;` @kind virtual;
  #L4a6138.  v3:= temp @kind object;
  #L4a613a.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4a6140.  v1:= temp;
  #L4a6142.  if v1 == 0 then goto L4a6170;
  #L4a6146.  v1:= v4.`v8.g.b` @type ^`java.lang.String` @kind object;
  #L4a614a.  call temp:= `c`(v5) @signature `Lv8/b;.c:()Ljava/lang/String;` @kind virtual;
  #L4a6150.  v3:= temp @kind object;
  #L4a6152.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4a6158.  v1:= temp;
  #L4a615a.  if v1 == 0 then goto L4a6170;
  #L4a615e.  v1:= v4.`v8.g.c` @type ^`boolean` @kind boolean;
  #L4a6162.  call temp:= `d`(v5) @signature `Lv8/b;.d:()Z` @kind virtual;
  #L4a6168.  v5:= temp;
  #L4a616a.  if v1 != v5 then goto L4a6170;
  #L4a616e.  return v0;
  #L4a6170.  return v2;
}
procedure `int` `hashCode`(`v8.g` v3 @kind this) @signature `Lv8/g;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4a619c.  v0:= v3.`v8.g.a` @type ^`java.lang.String` @kind object;
  #L4a61a0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4a61a6.  v0:= temp;
  #L4a61a8.  v1:= 1000003I;
  #L4a61ae.  v0:= v0 ^~ v1 @kind int;
  #L4a61b0.  v0:= v0 * v1 @kind int;
  #L4a61b4.  v2:= v3.`v8.g.b` @type ^`java.lang.String` @kind object;
  #L4a61b8.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4a61be.  v2:= temp;
  #L4a61c0.  v0:= v0 ^~ v2 @kind int;
  #L4a61c2.  v0:= v0 * v1 @kind int;
  #L4a61c6.  v1:= v3.`v8.g.c` @type ^`boolean` @kind boolean;
  #L4a61ca.  v2:= 1I;
  #L4a61cc.  if v2 == v1 then goto L4a61d6;
  #L4a61d0.  v1:= 1237I;
  #L4a61d4.  goto L4a61da;
  #L4a61d6.  v1:= 1231I;
  #L4a61da.  v0:= v0 ^~ v1 @kind int;
  #L4a61dc.  return v0;
}
procedure `java.lang.String` `toString`(`v8.g` v6 @kind this) @signature `Lv8/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a61f0.  v0:= v6.`v8.g.a` @type ^`java.lang.String` @kind object;
  #L4a61f4.  v1:= v6.`v8.g.b` @type ^`java.lang.String` @kind object;
  #L4a61f8.  v2:= v6.`v8.g.c` @type ^`boolean` @kind boolean;
  #L4a61fc.  v3:= new `java.lang.StringBuilder`;
  #L4a6200.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4a6206.  v4:= temp;
  #L4a6208.  v4:= v4 + 69;
  #L4a620c.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4a6212.  v5:= temp;
  #L4a6214.  v4:= v4 + v5 @kind int;
  #L4a6216.  call `<init>`(v3, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L4a621c.  v4:= "VkpTextRecognizerOptions{configLabel=" @kind object;
  #L4a6220.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a6226.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a622c.  v0:= ", modelDir=" @kind object;
  #L4a6230.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a6236.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a623c.  v0:= ", useGoogleOcr=" @kind object;
  #L4a6240.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a6246.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a624c.  v0:= "}" @kind object;
  #L4a6250.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a6256.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a625c.  v0:= temp @kind object;
  #L4a625e.  return v0 @kind object;
}
