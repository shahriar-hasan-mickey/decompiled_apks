record `t5.b` @kind class @AccessFlag PUBLIC_FINAL extends `p5.a` @kind interface {
  `javax.crypto.SecretKey` `t5.b.a` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@t5.b.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lt5/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L46e470.  return @kind void;
}
procedure `void` `<init>`(`t5.b` v2 @kind this, `java.lang.String` v3 @kind object, `java.security.KeyStore` v4 @kind object) @signature `Lt5/b;.<init>:(Ljava/lang/String;Ljava/security/KeyStore;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L46e484.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46e48a.  v0:= 0I;
  #L46e48c.  call temp:= `getKey`(v4, v3, v0) @signature `Ljava/security/KeyStore;.getKey:(Ljava/lang/String;[C)Ljava/security/Key;` @kind virtual;
  #L46e492.  v4:= temp @kind object;
  #L46e494.  v4:= (`javax.crypto.SecretKey`) v4 @kind object;
  #L46e498.  v2.`t5.b.a` @type ^`javax.crypto.SecretKey` := v4 @kind object;
  #L46e49c.  if v4 == 0 then goto L46e4a2;
  #L46e4a0.  return @kind void;
  #L46e4a2.  v4:= new `java.security.InvalidKeyException`;
  #L46e4a6.  v0:= new `java.lang.StringBuilder`;
  #L46e4aa.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46e4b0.  v1:= "Keystore cannot load the key with ID: " @kind object;
  #L46e4b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46e4ba.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L46e4c0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L46e4c6.  v3:= temp @kind object;
  #L46e4c8.  call `<init>`(v4, v3) @signature `Ljava/security/InvalidKeyException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46e4ce.  throw v4;
}
procedure `byte`[] `c`(`t5.b` v5 @kind this, `byte`[] v6 @kind object, `byte`[] v7 @kind object) @signature `Lt5/b;.c:([B[B)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L46e334.  v0:= length @variable v6;
  #L46e336.  v1:= 28I;
  #L46e33a.  if v0 < v1 then goto L46e37e;
  #L46e33e.  v0:= new `javax.crypto.spec.GCMParameterSpec`;
  #L46e342.  v1:= 128I;
  #L46e346.  v2:= 0I;
  #L46e348.  v3:= 12I;
  #L46e34c.  call `<init>`(v0, v1, v6, v2, v3) @signature `Ljavax/crypto/spec/GCMParameterSpec;.<init>:(I[BII)V` @kind direct;
  #L46e352.  v1:= "AES/GCM/NoPadding" @kind object;
  #L46e356.  call temp:= `getInstance`(v1) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L46e35c.  v1:= temp @kind object;
  #L46e35e.  v2:= 2I;
  #L46e360.  v4:= v5.`t5.b.a` @type ^`javax.crypto.SecretKey` @kind object;
  #L46e364.  call `init`(v1, v2, v4, v0) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L46e36a.  call `updateAAD`(v1, v7) @signature `Ljavax/crypto/Cipher;.updateAAD:([B)V` @kind virtual;
  #L46e370.  v7:= length @variable v6;
  #L46e372.  v7:= v7 - v3 @kind int;
  #L46e374.  call temp:= `doFinal`(v1, v6, v3, v7) @signature `Ljavax/crypto/Cipher;.doFinal:([BII)[B` @kind virtual;
  #L46e37a.  v6:= temp @kind object;
  #L46e37c.  return v6 @kind object;
  #L46e37e.  v6:= new `java.security.GeneralSecurityException`;
  #L46e382.  v7:= "ciphertext too short" @kind object;
  #L46e386.  call `<init>`(v6, v7) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46e38c.  throw v6;
}
procedure `byte`[] `d`(`t5.b` v9 @kind this, `byte`[] v10 @kind object, `byte`[] v11 @kind object) @signature `Lt5/b;.d:([B[B)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L46e3f0.  v0:= length @variable v10;
  #L46e3f2.  v1:= 2147483619I;
  #L46e3f8.  if v0 > v1 then goto L46e450;
  #L46e3fc.  v0:= length @variable v10;
  #L46e3fe.  v1:= 12I;
  #L46e402.  v0:= v0 + v1 @kind int;
  #L46e404.  v0:= v0 + 16;
  #L46e408.  v0:= new `byte`[v0];
  #L46e40c.  v2:= "AES/GCM/NoPadding" @kind object;
  #L46e410.  call temp:= `getInstance`(v2) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L46e416.  v8:= temp @kind object;
  #L46e418.  v2:= 1I;
  #L46e41a.  v3:= v9.`t5.b.a` @type ^`javax.crypto.SecretKey` @kind object;
  #L46e41e.  call `init`(v8, v2, v3) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L46e424.  call `updateAAD`(v8, v11) @signature `Ljavax/crypto/Cipher;.updateAAD:([B)V` @kind virtual;
  #L46e42a.  v4:= 0I;
  #L46e42c.  v5:= length @variable v10;
  #L46e42e.  v7:= 12I;
  #L46e432.  v2:= v8 @kind object;
  #L46e434.  v3:= v10 @kind object;
  #L46e436.  v6:= v0 @kind object;
  #L46e438.  call temp:= `doFinal`(v2, v3, v4, v5, v6, v7) @signature `Ljavax/crypto/Cipher;.doFinal:([BII[BI)I` @kind virtual;
  #L46e43e.  call temp:= `getIV`(v8) @signature `Ljavax/crypto/Cipher;.getIV:()[B` @kind virtual;
  #L46e444.  v10:= temp @kind object;
  #L46e446.  v11:= 0I;
  #L46e448.  call `arraycopy`(v10, v11, v0, v11, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L46e44e.  return v0 @kind object;
  #L46e450.  v10:= new `java.security.GeneralSecurityException`;
  #L46e454.  v11:= "plaintext too long" @kind object;
  #L46e458.  call `<init>`(v10, v11) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46e45e.  throw v10;
}
procedure `void` `e`() @signature `Lt5/b;.e:()V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L46e4e0.  call temp:= `random`() @signature `Ljava/lang/Math;.random:()D` @kind static;
  #L46e4e6.  v0:= temp @kind wide;
  #L46e4e8.  v2:= 100.0D;
  #L46e4ec.  v0:= v0 * v2 @kind double;
  #L46e4f0.  v0:= (`int`) v0 @kind d2i;
  #L46e4f2.  v0:= (`long`) v0 @kind i2l;
  #L46e4f4.  call `sleep`(v0) @signature `Ljava/lang/Thread;.sleep:(J)V` @kind static;
  #L46e4fa.  return @kind void;
  catch `java.lang.InterruptedException` @[L46e4f4..L46e4fa] goto L46e4fa;
}
procedure `byte`[] `a`(`t5.b` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lt5/b;.a:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L46e3a0.  call temp:= `d`(v3, v4, v5) @signature `Lt5/b;.d:([B[B)[B` @kind direct;
  #L46e3a6.  v4:= temp @kind object;
  #L46e3a8.  return v4 @kind object;
  #L46e3aa.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L46e3ac.  goto L46e3b0;
  #L46e3ae.  v0:= Exception @type ^`java.security.ProviderException` @kind object;
  #L46e3b0.  v1:= `@@t5.b.b` @type ^`java.lang.String` @kind object;
  #L46e3b4.  v2:= "encountered a potentially transient KeyStore error, will wait and retry" @kind object;
  #L46e3b8.  call temp:= `w`(v1, v2, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L46e3be.  call `e`() @signature `Lt5/b;.e:()V` @kind static;
  #L46e3c4.  call temp:= `d`(v3, v4, v5) @signature `Lt5/b;.d:([B[B)[B` @kind direct;
  #L46e3ca.  v4:= temp @kind object;
  #L46e3cc.  return v4 @kind object;
  catch `java.security.ProviderException` @[L46e3a0..L46e3a8] goto L46e3ae;
  catch `java.security.GeneralSecurityException` @[L46e3a0..L46e3a8] goto L46e3aa;
}
procedure `byte`[] `b`(`t5.b` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lt5/b;.b:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L46e2e4.  call temp:= `c`(v3, v4, v5) @signature `Lt5/b;.c:([B[B)[B` @kind direct;
  #L46e2ea.  v4:= temp @kind object;
  #L46e2ec.  return v4 @kind object;
  #L46e2ee.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L46e2f0.  goto L46e2f4;
  #L46e2f2.  v0:= Exception @type ^`java.security.ProviderException` @kind object;
  #L46e2f4.  v1:= `@@t5.b.b` @type ^`java.lang.String` @kind object;
  #L46e2f8.  v2:= "encountered a potentially transient KeyStore error, will wait and retry" @kind object;
  #L46e2fc.  call temp:= `w`(v1, v2, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L46e302.  call `e`() @signature `Lt5/b;.e:()V` @kind static;
  #L46e308.  call temp:= `c`(v3, v4, v5) @signature `Lt5/b;.c:([B[B)[B` @kind direct;
  #L46e30e.  v4:= temp @kind object;
  #L46e310.  return v4 @kind object;
  catch `java.security.ProviderException` @[L46e2e4..L46e2ec] goto L46e2f2;
  catch `java.security.GeneralSecurityException` @[L46e2e4..L46e2ec] goto L46e2ee;
}
