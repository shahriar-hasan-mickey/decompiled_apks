record `t5.c$b` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `t5.c$b.a` @AccessFlag ;
  `java.security.KeyStore` `t5.c$b.b` @AccessFlag ;
}
procedure `void` `<init>`(`t5.c$b` v2 @kind this) @signature `Lt5/c$b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L46e568.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L46e56e.  v0:= 0I;
  #L46e570.  v2.`t5.c$b.a` @type ^`java.lang.String` := v0 @kind object;
  #L46e574.  v2.`t5.c$b.b` @type ^`java.security.KeyStore` := v0 @kind object;
  #L46e578.  call temp:= `c`() @signature `Lt5/c;.c:()Z` @kind static;
  #L46e57e.  v1:= temp;
  #L46e580.  if v1 == 0 then goto L46e5ae;
  #L46e584.  v1:= "AndroidKeyStore" @kind object;
  #L46e588.  call temp:= `getInstance`(v1) @signature `Ljava/security/KeyStore;.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;` @kind static;
  #L46e58e.  v1:= temp @kind object;
  #L46e590.  v2.`t5.c$b.b` @type ^`java.security.KeyStore` := v1 @kind object;
  #L46e594.  call `load`(v1, v0) @signature `Ljava/security/KeyStore;.load:(Ljava/security/KeyStore$LoadStoreParameter;)V` @kind virtual;
  #L46e59a.  return @kind void;
  #L46e59c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L46e59e.  goto L46e5a2;
  #L46e5a0.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L46e5a2.  v1:= new `java.lang.IllegalStateException`;
  #L46e5a6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L46e5ac.  throw v1;
  #L46e5ae.  v0:= new `java.lang.IllegalStateException`;
  #L46e5b2.  v1:= "need Android Keystore on Android M or newer" @kind object;
  #L46e5b6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46e5bc.  throw v0;
  catch `java.security.GeneralSecurityException` @[L46e584..L46e59a] goto L46e5a0;
  catch `java.io.IOException` @[L46e584..L46e59a] goto L46e59c;
}
procedure `t5.c` `a`(`t5.c$b` v2 @kind this) @signature `Lt5/c$b;.a:()Lt5/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46e51c.  v0:= new `t5.c`;
  #L46e520.  v1:= 0I;
  #L46e522.  call `<init>`(v0, v2, v1) @signature `Lt5/c;.<init>:(Lt5/c$b;Lt5/c$a;)V` @kind direct;
  #L46e528.  return v0 @kind object;
}
procedure `t5.c$b` `b`(`t5.c$b` v1 @kind this, `java.security.KeyStore` v2 @kind object) @signature `Lt5/c$b;.b:(Ljava/security/KeyStore;)Lt5/c$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46e53c.  if v2 == 0 then goto L46e546;
  #L46e540.  v1.`t5.c$b.b` @type ^`java.security.KeyStore` := v2 @kind object;
  #L46e544.  return v1 @kind object;
  #L46e546.  v2:= new `java.lang.IllegalArgumentException`;
  #L46e54a.  v0:= "val cannot be null" @kind object;
  #L46e54e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46e554.  throw v2;
}
