record `r1.a0` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `r1.m0$b` @kind interface {
}
global `r1.a0` `@@r1.a0.a` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lr1/a0;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L431d0c.  v0:= new `r1.a0`;
  #L431d10.  call `<init>`(v0) @signature `Lr1/a0;.<init>:()V` @kind direct;
  #L431d16.  `@@r1.a0.a` @type ^`r1.a0` := v0 @kind object;
  #L431d1a.  return @kind void;
}
procedure `void` `<init>`(`r1.a0` v0 @kind this) @signature `Lr1/a0;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L431d2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L431d32.  return @kind void;
}
procedure `java.lang.Object` `apply`(`r1.a0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lr1/a0;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L431cec.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L431cf0.  call temp:= `i`(v1) @signature `Lr1/m0;.i:(Ljava/lang/Throwable;)Landroid/database/sqlite/SQLiteDatabase;` @kind static;
  #L431cf6.  v1:= temp @kind object;
  #L431cf8.  return v1 @kind object;
}
