record `r1.e` @kind class @AccessFlag ABSTRACT {
}
global `r1.e` `@@r1.e.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lr1/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4313f8.  call temp:= `a`() @signature `Lr1/e;.a:()Lr1/e$a;` @kind static;
  #L4313fe.  v0:= temp @kind object;
  #L431400.  v1:= 10485760L;
  #L431406.  call temp:= `f`(v0, v1) @signature `Lr1/e$a;.f:(J)Lr1/e$a;` @kind virtual;
  #L43140c.  v0:= temp @kind object;
  #L43140e.  v1:= 200I;
  #L431412.  call temp:= `d`(v0, v1) @signature `Lr1/e$a;.d:(I)Lr1/e$a;` @kind virtual;
  #L431418.  v0:= temp @kind object;
  #L43141a.  v1:= 10000I;
  #L43141e.  call temp:= `b`(v0, v1) @signature `Lr1/e$a;.b:(I)Lr1/e$a;` @kind virtual;
  #L431424.  v0:= temp @kind object;
  #L431426.  v1:= 604800000L;
  #L43142c.  call temp:= `c`(v0, v1) @signature `Lr1/e$a;.c:(J)Lr1/e$a;` @kind virtual;
  #L431432.  v0:= temp @kind object;
  #L431434.  v1:= 81920I;
  #L43143a.  call temp:= `e`(v0, v1) @signature `Lr1/e$a;.e:(I)Lr1/e$a;` @kind virtual;
  #L431440.  v0:= temp @kind object;
  #L431442.  call temp:= `a`(v0) @signature `Lr1/e$a;.a:()Lr1/e;` @kind virtual;
  #L431448.  v0:= temp @kind object;
  #L43144a.  `@@r1.e.a` @type ^`r1.e` := v0 @kind object;
  #L43144e.  return @kind void;
}
procedure `void` `<init>`(`r1.e` v0 @kind this) @signature `Lr1/e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L431460.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L431466.  return @kind void;
}
procedure `r1.e$a` `a`() @signature `Lr1/e;.a:()Lr1/e$a;` @AccessFlag STATIC {
    temp;
    v0;

  #L4313dc.  v0:= new `r1.a$b`;
  #L4313e0.  call `<init>`(v0) @signature `Lr1/a$b;.<init>:()V` @kind direct;
  #L4313e6.  return v0 @kind object;
}
procedure `int` `b`() @signature `Lr1/e;.b:()I` @AccessFlag ABSTRACT {

  # return;
}
procedure `long` `c`() @signature `Lr1/e;.c:()J` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `d`() @signature `Lr1/e;.d:()I` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `e`() @signature `Lr1/e;.e:()I` @AccessFlag ABSTRACT {

  # return;
}
procedure `long` `f`() @signature `Lr1/e;.f:()J` @AccessFlag ABSTRACT {

  # return;
}
