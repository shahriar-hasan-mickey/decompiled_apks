record `r1.d` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `java.io.Closeable` @kind interface {
}
procedure `java.lang.Iterable` `C`() @signature `Lr1/d;.C:()Ljava/lang/Iterable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `F`(`j1.p` v0 @kind object, `long` v1 ) @signature `Lr1/d;.F:(Lj1/p;J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `P`(`j1.p` v0 @kind object) @signature `Lr1/d;.P:(Lj1/p;)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `Q`(`java.lang.Iterable` v0 @kind object) @signature `Lr1/d;.Q:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `X`(`j1.p` v0 @kind object) @signature `Lr1/d;.X:(Lj1/p;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `j`() @signature `Lr1/d;.j:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `l`(`java.lang.Iterable` v0 @kind object) @signature `Lr1/d;.l:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `r1.k` `p`(`j1.p` v0 @kind object, `j1.i` v1 @kind object) @signature `Lr1/d;.p:(Lj1/p;Lj1/i;)Lr1/k;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Iterable` `w`(`j1.p` v0 @kind object) @signature `Lr1/d;.w:(Lj1/p;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
