record `r1.a` @kind class @AccessFlag FINAL extends `r1.e` @kind class {
  `long` `r1.a.b` @AccessFlag PRIVATE_FINAL;
  `int` `r1.a.c` @AccessFlag PRIVATE_FINAL;
  `int` `r1.a.d` @AccessFlag PRIVATE_FINAL;
  `long` `r1.a.e` @AccessFlag PRIVATE_FINAL;
  `int` `r1.a.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`r1.a` v0 @kind this, `long` v1 , `int` v3 , `int` v4 , `long` v5 , `int` v7 ) @signature `Lr1/a;.<init>:(JIIJI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4311d0.  call `<init>`(v0) @signature `Lr1/e;.<init>:()V` @kind direct;
  #L4311d6.  v0.`r1.a.b` @type ^`long` := v1 @kind wide;
  #L4311da.  v0.`r1.a.c` @type ^`int` := v3;
  #L4311de.  v0.`r1.a.d` @type ^`int` := v4;
  #L4311e2.  v0.`r1.a.e` @type ^`long` := v5 @kind wide;
  #L4311e6.  v0.`r1.a.f` @type ^`int` := v7;
  #L4311ea.  return @kind void;
}
procedure `void` `<init>`(`r1.a` v0 @kind this, `long` v1 , `int` v3 , `int` v4 , `long` v5 , `int` v7 , `r1.a$a` v8 @kind object) @signature `Lr1/a;.<init>:(JIIJILr1/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4311fc.  call `<init>`(v0, v1, v3, v4, v5, v7) @signature `Lr1/a;.<init>:(JIIJI)V` @kind direct;
  #L431202.  return @kind void;
}
procedure `int` `b`(`r1.a` v1 @kind this) @signature `Lr1/a;.b:()I` @AccessFlag  {
    temp;
    v0;

  #L431068.  v0:= v1.`r1.a.d` @type ^`int`;
  #L43106c.  return v0;
}
procedure `long` `c`(`r1.a` v2 @kind this) @signature `Lr1/a;.c:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4311a0.  v0:= v2.`r1.a.e` @type ^`long` @kind wide;
  #L4311a4.  return v0 @kind wide;
}
procedure `int` `d`(`r1.a` v1 @kind this) @signature `Lr1/a;.d:()I` @AccessFlag  {
    temp;
    v0;

  #L431080.  v0:= v1.`r1.a.c` @type ^`int`;
  #L431084.  return v0;
}
procedure `int` `e`(`r1.a` v1 @kind this) @signature `Lr1/a;.e:()I` @AccessFlag  {
    temp;
    v0;

  #L431098.  v0:= v1.`r1.a.f` @type ^`int`;
  #L43109c.  return v0;
}
procedure `boolean` `equals`(`r1.a` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lr1/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L430fe0.  v0:= 1I;
  #L430fe2.  if v8 != v7 then goto L430fe8;
  #L430fe6.  return v0;
  #L430fe8.  v1:= instanceof @variable v8 @type ^`r1.e` @kind boolean;
  #L430fec.  v2:= 0I;
  #L430fee.  if v1 == 0 then goto L431054;
  #L430ff2.  v8:= (`r1.e`) v8 @kind object;
  #L430ff6.  v3:= v7.`r1.a.b` @type ^`long` @kind wide;
  #L430ffa.  call temp:= `f`(v8) @signature `Lr1/e;.f:()J` @kind virtual;
  #L431000.  v5:= temp @kind wide;
  #L431002.  v1:= lcmp(v3, v5);
  #L431006.  if v1 != 0 then goto L431050;
  #L43100a.  v1:= v7.`r1.a.c` @type ^`int`;
  #L43100e.  call temp:= `d`(v8) @signature `Lr1/e;.d:()I` @kind virtual;
  #L431014.  v3:= temp;
  #L431016.  if v1 != v3 then goto L431050;
  #L43101a.  v1:= v7.`r1.a.d` @type ^`int`;
  #L43101e.  call temp:= `b`(v8) @signature `Lr1/e;.b:()I` @kind virtual;
  #L431024.  v3:= temp;
  #L431026.  if v1 != v3 then goto L431050;
  #L43102a.  v3:= v7.`r1.a.e` @type ^`long` @kind wide;
  #L43102e.  call temp:= `c`(v8) @signature `Lr1/e;.c:()J` @kind virtual;
  #L431034.  v5:= temp @kind wide;
  #L431036.  v1:= lcmp(v3, v5);
  #L43103a.  if v1 != 0 then goto L431050;
  #L43103e.  v1:= v7.`r1.a.f` @type ^`int`;
  #L431042.  call temp:= `e`(v8) @signature `Lr1/e;.e:()I` @kind virtual;
  #L431048.  v8:= temp;
  #L43104a.  if v1 != v8 then goto L431050;
  #L43104e.  goto L431052;
  #L431050.  v0:= 0I;
  #L431052.  return v0;
  #L431054.  return v2;
}
procedure `long` `f`(`r1.a` v2 @kind this) @signature `Lr1/a;.f:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4311b8.  v0:= v2.`r1.a.b` @type ^`long` @kind wide;
  #L4311bc.  return v0 @kind wide;
}
procedure `int` `hashCode`(`r1.a` v7 @kind this) @signature `Lr1/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4310b0.  v0:= v7.`r1.a.b` @type ^`long` @kind wide;
  #L4310b4.  v2:= 32I;
  #L4310b8.  v3:= v0 ^>> v2 @kind long;
  #L4310bc.  v0:= v0 ^~ v3 @kind long;
  #L4310be.  v1:= (`int`) v0 @kind l2i;
  #L4310c0.  v0:= 1000003I;
  #L4310c6.  v1:= v1 ^~ v0 @kind int;
  #L4310c8.  v1:= v1 * v0 @kind int;
  #L4310cc.  v3:= v7.`r1.a.c` @type ^`int`;
  #L4310d0.  v1:= v1 ^~ v3 @kind int;
  #L4310d2.  v1:= v1 * v0 @kind int;
  #L4310d6.  v3:= v7.`r1.a.d` @type ^`int`;
  #L4310da.  v1:= v1 ^~ v3 @kind int;
  #L4310dc.  v1:= v1 * v0 @kind int;
  #L4310e0.  v3:= v7.`r1.a.e` @type ^`long` @kind wide;
  #L4310e4.  v5:= v3 ^>> v2 @kind long;
  #L4310e8.  v2:= v5 ^~ v3 @kind long;
  #L4310ec.  v3:= (`int`) v2 @kind l2i;
  #L4310ee.  v1:= v1 ^~ v3 @kind int;
  #L4310f0.  v1:= v1 * v0 @kind int;
  #L4310f4.  v0:= v7.`r1.a.f` @type ^`int`;
  #L4310f8.  v0:= v0 ^~ v1 @kind int;
  #L4310fa.  return v0;
}
procedure `java.lang.String` `toString`(`r1.a` v3 @kind this) @signature `Lr1/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L43110c.  v0:= new `java.lang.StringBuilder`;
  #L431110.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L431116.  v1:= "EventStoreConfig{maxStorageSizeInBytes=" @kind object;
  #L43111a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L431120.  v1:= v3.`r1.a.b` @type ^`long` @kind wide;
  #L431124.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L43112a.  v1:= ", loadBatchSize=" @kind object;
  #L43112e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L431134.  v1:= v3.`r1.a.c` @type ^`int`;
  #L431138.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L43113e.  v1:= ", criticalSectionEnterTimeoutMs=" @kind object;
  #L431142.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L431148.  v1:= v3.`r1.a.d` @type ^`int`;
  #L43114c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L431152.  v1:= ", eventCleanUpAge=" @kind object;
  #L431156.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43115c.  v1:= v3.`r1.a.e` @type ^`long` @kind wide;
  #L431160.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L431166.  v1:= ", maxBlobByteSizePerRow=" @kind object;
  #L43116a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L431170.  v1:= v3.`r1.a.f` @type ^`int`;
  #L431174.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L43117a.  v1:= "}" @kind object;
  #L43117e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L431184.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43118a.  v0:= temp @kind object;
  #L43118c.  return v0 @kind object;
}
