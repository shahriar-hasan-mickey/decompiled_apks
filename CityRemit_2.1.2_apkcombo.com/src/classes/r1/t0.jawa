record `r1.t0` @kind class @AccessFlag FINAL extends `android.database.sqlite.SQLiteOpenHelper` @kind class {
  `int` `r1.t0.o` @AccessFlag PRIVATE_FINAL;
  `boolean` `r1.t0.p` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@r1.t0.q` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@r1.t0.r` @AccessFlag STATIC;
global `r1.t0$a` `@@r1.t0.s` @AccessFlag PRIVATE_STATIC_FINAL;
global `r1.t0$a` `@@r1.t0.t` @AccessFlag PRIVATE_STATIC_FINAL;
global `r1.t0$a` `@@r1.t0.u` @AccessFlag PRIVATE_STATIC_FINAL;
global `r1.t0$a` `@@r1.t0.v` @AccessFlag PRIVATE_STATIC_FINAL;
global `r1.t0$a` `@@r1.t0.w` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@r1.t0.x` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lr1/t0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L433f80.  v0:= new `java.lang.StringBuilder`;
  #L433f84.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L433f8a.  v1:= "INSERT INTO global_log_event_state VALUES (" @kind object;
  #L433f8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L433f94.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L433f9a.  v1:= temp @kind wide;
  #L433f9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L433fa2.  v1:= ")" @kind object;
  #L433fa6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L433fac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L433fb2.  v0:= temp @kind object;
  #L433fb4.  `@@r1.t0.q` @type ^`java.lang.String` := v0 @kind object;
  #L433fb8.  v0:= 5I;
  #L433fba.  `@@r1.t0.r` @type ^`int` := v0;
  #L433fbe.  v1:= `@@r1.r0.a` @type ^`r1.r0` @kind object;
  #L433fc2.  `@@r1.t0.s` @type ^`r1.t0$a` := v1 @kind object;
  #L433fc6.  v2:= `@@r1.o0.a` @type ^`r1.o0` @kind object;
  #L433fca.  `@@r1.t0.t` @type ^`r1.t0$a` := v2 @kind object;
  #L433fce.  v3:= `@@r1.p0.a` @type ^`r1.p0` @kind object;
  #L433fd2.  `@@r1.t0.u` @type ^`r1.t0$a` := v3 @kind object;
  #L433fd6.  v4:= `@@r1.q0.a` @type ^`r1.q0` @kind object;
  #L433fda.  `@@r1.t0.v` @type ^`r1.t0$a` := v4 @kind object;
  #L433fde.  v5:= `@@r1.s0.a` @type ^`r1.s0` @kind object;
  #L433fe2.  `@@r1.t0.w` @type ^`r1.t0$a` := v5 @kind object;
  #L433fe6.  v0:= new `r1.t0$a`[v0];
  #L433fea.  v6:= 0I;
  #L433fec.  v0[v6]:= v1 @kind object;
  #L433ff0.  v1:= 1I;
  #L433ff2.  v0[v1]:= v2 @kind object;
  #L433ff6.  v1:= 2I;
  #L433ff8.  v0[v1]:= v3 @kind object;
  #L433ffc.  v1:= 3I;
  #L433ffe.  v0[v1]:= v4 @kind object;
  #L434002.  v1:= 4I;
  #L434004.  v0[v1]:= v5 @kind object;
  #L434008.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L43400e.  v0:= temp @kind object;
  #L434010.  `@@r1.t0.x` @type ^`java.util.List` := v0 @kind object;
  #L434014.  return @kind void;
}
procedure `void` `<init>`(`r1.t0` v1 @kind this, `android.content.Context` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 ) @signature `Lr1/t0;.<init>:(Landroid/content/Context;Ljava/lang/String;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L434028.  v0:= 0I;
  #L43402a.  call `<init>`(v1, v2, v3, v0, v4) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L434030.  v2:= 0I;
  #L434032.  v1.`r1.t0.p` @type ^`boolean` := v2 @kind boolean;
  #L434036.  v1.`r1.t0.o` @type ^`int` := v4;
  #L43403a.  return @kind void;
}
procedure `void` `E`(`android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Lr1/t0;.E:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L43412c.  v0:= "DROP TABLE IF EXISTS log_event_dropped" @kind object;
  #L434130.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L434136.  v0:= "DROP TABLE IF EXISTS global_log_event_state" @kind object;
  #L43413a.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L434140.  v0:= "CREATE TABLE log_event_dropped (log_source VARCHAR(45) NOT NULL,reason INTEGER NOT NULL,events_dropped_count BIGINT NOT NULL,PRIMARY KEY(log_source, reason))" @kind object;
  #L434144.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L43414a.  v0:= "CREATE TABLE global_log_event_state (last_metrics_upload_ms BIGINT PRIMARY KEY)" @kind object;
  #L43414e.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L434154.  v0:= `@@r1.t0.q` @type ^`java.lang.String` @kind object;
  #L434158.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L43415e.  return @kind void;
}
procedure `void` `G`(`r1.t0` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object, `int` v3 ) @signature `Lr1/t0;.G:(Landroid/database/sqlite/SQLiteDatabase;I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4341d0.  call `k`(v1, v2) @signature `Lr1/t0;.k:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind direct;
  #L4341d6.  v0:= 0I;
  #L4341d8.  call `J`(v1, v2, v0, v3) @signature `Lr1/t0;.J:(Landroid/database/sqlite/SQLiteDatabase;II)V` @kind direct;
  #L4341de.  return @kind void;
}
procedure `void` `J`(`r1.t0` v3 @kind this, `android.database.sqlite.SQLiteDatabase` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lr1/t0;.J:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L43427c.  v0:= `@@r1.t0.x` @type ^`java.util.List` @kind object;
  #L434280.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L434286.  v1:= temp;
  #L434288.  if v6 > v1 then goto L4342ae;
  #L43428c.  if v5 >= v6 then goto L4342ac;
  #L434290.  v0:= `@@r1.t0.x` @type ^`java.util.List` @kind object;
  #L434294.  call temp:= `get`(v0, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L43429a.  v0:= temp @kind object;
  #L43429c.  v0:= (`r1.t0$a`) v0 @kind object;
  #L4342a0.  call `a`(v0, v4) @signature `Lr1/t0$a;.a:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind interface;
  #L4342a6.  v5:= v5 + 1;
  #L4342aa.  goto L43428c;
  #L4342ac.  return @kind void;
  #L4342ae.  v4:= new `java.lang.IllegalArgumentException`;
  #L4342b2.  v1:= new `java.lang.StringBuilder`;
  #L4342b6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4342bc.  v2:= "Migration from " @kind object;
  #L4342c0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4342c6.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4342cc.  v5:= " to " @kind object;
  #L4342d0.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4342d6.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4342dc.  v5:= " was requested, but cannot be performed. Only " @kind object;
  #L4342e0.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4342e6.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4342ec.  v5:= temp;
  #L4342ee.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4342f4.  v5:= " migrations are provided" @kind object;
  #L4342f8.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4342fe.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L434304.  v5:= temp @kind object;
  #L434306.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43430c.  throw v4;
}
procedure `void` `a`(`android.database.sqlite.SQLiteDatabase` v0 @kind object) @signature `Lr1/t0;.a:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L433f08.  call `s`(v0) @signature `Lr1/t0;.s:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind static;
  #L433f0e.  return @kind void;
}
procedure `void` `c`(`android.database.sqlite.SQLiteDatabase` v0 @kind object) @signature `Lr1/t0;.c:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L433f20.  call `v`(v0) @signature `Lr1/t0;.v:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind static;
  #L433f26.  return @kind void;
}
procedure `void` `e`(`android.database.sqlite.SQLiteDatabase` v0 @kind object) @signature `Lr1/t0;.e:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L433f38.  call `x`(v0) @signature `Lr1/t0;.x:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind static;
  #L433f3e.  return @kind void;
}
procedure `void` `h`(`android.database.sqlite.SQLiteDatabase` v0 @kind object) @signature `Lr1/t0;.h:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L433f50.  call `o`(v0) @signature `Lr1/t0;.o:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind static;
  #L433f56.  return @kind void;
}
procedure `void` `i`(`android.database.sqlite.SQLiteDatabase` v0 @kind object) @signature `Lr1/t0;.i:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L433f68.  call `E`(v0) @signature `Lr1/t0;.E:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind static;
  #L433f6e.  return @kind void;
}
procedure `void` `k`(`r1.t0` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Lr1/t0;.k:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43404c.  v0:= v1.`r1.t0.p` @type ^`boolean` @kind boolean;
  #L434050.  if v0 != 0 then goto L43405a;
  #L434054.  call `onConfigure`(v1, v2) @signature `Lr1/t0;.onConfigure:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind virtual;
  #L43405a.  return @kind void;
}
procedure `void` `o`(`android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Lr1/t0;.o:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L43406c.  v0:= "CREATE TABLE events (_id INTEGER PRIMARY KEY, context_id INTEGER NOT NULL, transport_name TEXT NOT NULL, timestamp_ms INTEGER NOT NULL, uptime_ms INTEGER NOT NULL, payload BLOB NOT NULL, code INTEGER, num_attempts INTEGER NOT NULL,FOREIGN KEY (context_id) REFERENCES transport_contexts(_id) ON DELETE CASCADE)" @kind object;
  #L434070.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L434076.  v0:= "CREATE TABLE event_metadata (_id INTEGER PRIMARY KEY, event_id INTEGER NOT NULL, name TEXT NOT NULL, value TEXT NOT NULL,FOREIGN KEY (event_id) REFERENCES events(_id) ON DELETE CASCADE)" @kind object;
  #L43407a.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L434080.  v0:= "CREATE TABLE transport_contexts (_id INTEGER PRIMARY KEY, backend_name TEXT NOT NULL, priority INTEGER NOT NULL, next_request_ms INTEGER NOT NULL)" @kind object;
  #L434084.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L43408a.  v0:= "CREATE INDEX events_backend_id on events(context_id)" @kind object;
  #L43408e.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L434094.  v0:= "CREATE UNIQUE INDEX contexts_backend_priority on transport_contexts(backend_name, priority)" @kind object;
  #L434098.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L43409e.  return @kind void;
}
procedure `void` `s`(`android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Lr1/t0;.s:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L4340b0.  v0:= "ALTER TABLE transport_contexts ADD COLUMN extras BLOB" @kind object;
  #L4340b4.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L4340ba.  v0:= "CREATE UNIQUE INDEX contexts_backend_priority_extras on transport_contexts(backend_name, priority, extras)" @kind object;
  #L4340be.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L4340c4.  v0:= "DROP INDEX contexts_backend_priority" @kind object;
  #L4340c8.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L4340ce.  return @kind void;
}
procedure `void` `v`(`android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Lr1/t0;.v:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L4340e0.  v0:= "ALTER TABLE events ADD COLUMN payload_encoding TEXT" @kind object;
  #L4340e4.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L4340ea.  return @kind void;
}
procedure `void` `x`(`android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Lr1/t0;.x:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L4340fc.  v0:= "ALTER TABLE events ADD COLUMN inline BOOLEAN NOT NULL DEFAULT 1" @kind object;
  #L434100.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L434106.  v0:= "DROP TABLE IF EXISTS event_payloads" @kind object;
  #L43410a.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L434110.  v0:= "CREATE TABLE event_payloads (sequence_num INTEGER NOT NULL, event_id INTEGER NOT NULL, bytes BLOB NOT NULL,FOREIGN KEY (event_id) REFERENCES events(_id) ON DELETE CASCADE,PRIMARY KEY (sequence_num, event_id))" @kind object;
  #L434114.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L43411a.  return @kind void;
}
procedure `void` `onConfigure`(`r1.t0` v3 @kind this, `android.database.sqlite.SQLiteDatabase` v4 @kind object) @signature `Lr1/t0;.onConfigure:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L434170.  v0:= 1I;
  #L434172.  v3.`r1.t0.p` @type ^`boolean` := v0 @kind boolean;
  #L434176.  v1:= 0I;
  #L434178.  v1:= new `java.lang.String`[v1];
  #L43417c.  v2:= "PRAGMA busy_timeout=0;" @kind object;
  #L434180.  call temp:= `rawQuery`(v4, v2, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L434186.  v1:= temp @kind object;
  #L434188.  call `close`(v1) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L43418e.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L434192.  v2:= 16I;
  #L434196.  if v1 < v2 then goto L4341a0;
  #L43419a.  call `setForeignKeyConstraintsEnabled`(v4, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.setForeignKeyConstraintsEnabled:(Z)V` @kind virtual;
  #L4341a0.  return @kind void;
}
procedure `void` `onCreate`(`r1.t0` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Lr1/t0;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4341b4.  v0:= v1.`r1.t0.o` @type ^`int`;
  #L4341b8.  call `G`(v1, v2, v0) @signature `Lr1/t0;.G:(Landroid/database/sqlite/SQLiteDatabase;I)V` @kind direct;
  #L4341be.  return @kind void;
}
procedure `void` `onDowngrade`(`r1.t0` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lr1/t0;.onDowngrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC {
    temp;

  #L4341f0.  v2:= "DROP TABLE events" @kind object;
  #L4341f4.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L4341fa.  v2:= "DROP TABLE event_metadata" @kind object;
  #L4341fe.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L434204.  v2:= "DROP TABLE transport_contexts" @kind object;
  #L434208.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L43420e.  v2:= "DROP TABLE IF EXISTS event_payloads" @kind object;
  #L434212.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L434218.  v2:= "DROP TABLE IF EXISTS log_event_dropped" @kind object;
  #L43421c.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L434222.  v2:= "DROP TABLE IF EXISTS global_log_event_state" @kind object;
  #L434226.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L43422c.  call `G`(v0, v1, v3) @signature `Lr1/t0;.G:(Landroid/database/sqlite/SQLiteDatabase;I)V` @kind direct;
  #L434232.  return @kind void;
}
procedure `void` `onOpen`(`r1.t0` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Lr1/t0;.onOpen:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;

  #L434244.  call `k`(v0, v1) @signature `Lr1/t0;.k:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind direct;
  #L43424a.  return @kind void;
}
procedure `void` `onUpgrade`(`r1.t0` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lr1/t0;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC {
    temp;

  #L43425c.  call `k`(v0, v1) @signature `Lr1/t0;.k:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind direct;
  #L434262.  call `J`(v0, v1, v2, v3) @signature `Lr1/t0;.J:(Landroid/database/sqlite/SQLiteDatabase;II)V` @kind direct;
  #L434268.  return @kind void;
}
