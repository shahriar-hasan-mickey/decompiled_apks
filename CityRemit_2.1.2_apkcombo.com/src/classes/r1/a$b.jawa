record `r1.a$b` @kind class @AccessFlag FINAL extends `r1.e$a` @kind class {
  `java.lang.Long` `r1.a$b.a` @AccessFlag PRIVATE;
  `java.lang.Integer` `r1.a$b.b` @AccessFlag PRIVATE;
  `java.lang.Integer` `r1.a$b.c` @AccessFlag PRIVATE;
  `java.lang.Long` `r1.a$b.d` @AccessFlag PRIVATE;
  `java.lang.Integer` `r1.a$b.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`r1.a$b` v0 @kind this) @signature `Lr1/a$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L430fc8.  call `<init>`(v0) @signature `Lr1/e$a;.<init>:()V` @kind direct;
  #L430fce.  return @kind void;
}
procedure `r1.e` `a`(`r1.a$b` v11 @kind this) @signature `Lr1/a$b;.a:()Lr1/e;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L430dbc.  v0:= v11.`r1.a$b.a` @type ^`java.lang.Long` @kind object;
  #L430dc0.  v1:= "" @kind object;
  #L430dc4.  if v0 != 0 then goto L430dea;
  #L430dc8.  v0:= new `java.lang.StringBuilder`;
  #L430dcc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L430dd2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430dd8.  v1:= " maxStorageSizeInBytes" @kind object;
  #L430ddc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430de2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L430de8.  v1:= temp @kind object;
  #L430dea.  v0:= v11.`r1.a$b.b` @type ^`java.lang.Integer` @kind object;
  #L430dee.  if v0 != 0 then goto L430e14;
  #L430df2.  v0:= new `java.lang.StringBuilder`;
  #L430df6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L430dfc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430e02.  v1:= " loadBatchSize" @kind object;
  #L430e06.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430e0c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L430e12.  v1:= temp @kind object;
  #L430e14.  v0:= v11.`r1.a$b.c` @type ^`java.lang.Integer` @kind object;
  #L430e18.  if v0 != 0 then goto L430e3e;
  #L430e1c.  v0:= new `java.lang.StringBuilder`;
  #L430e20.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L430e26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430e2c.  v1:= " criticalSectionEnterTimeoutMs" @kind object;
  #L430e30.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430e36.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L430e3c.  v1:= temp @kind object;
  #L430e3e.  v0:= v11.`r1.a$b.d` @type ^`java.lang.Long` @kind object;
  #L430e42.  if v0 != 0 then goto L430e68;
  #L430e46.  v0:= new `java.lang.StringBuilder`;
  #L430e4a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L430e50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430e56.  v1:= " eventCleanUpAge" @kind object;
  #L430e5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430e60.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L430e66.  v1:= temp @kind object;
  #L430e68.  v0:= v11.`r1.a$b.e` @type ^`java.lang.Integer` @kind object;
  #L430e6c.  if v0 != 0 then goto L430e92;
  #L430e70.  v0:= new `java.lang.StringBuilder`;
  #L430e74.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L430e7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430e80.  v1:= " maxBlobByteSizePerRow" @kind object;
  #L430e84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430e8a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L430e90.  v1:= temp @kind object;
  #L430e92.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L430e98.  v0:= temp;
  #L430e9a.  if v0 == 0 then goto L430eea;
  #L430e9e.  v0:= new `r1.a`;
  #L430ea2.  v1:= v11.`r1.a$b.a` @type ^`java.lang.Long` @kind object;
  #L430ea6.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L430eac.  v3:= temp @kind wide;
  #L430eae.  v1:= v11.`r1.a$b.b` @type ^`java.lang.Integer` @kind object;
  #L430eb2.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L430eb8.  v5:= temp;
  #L430eba.  v1:= v11.`r1.a$b.c` @type ^`java.lang.Integer` @kind object;
  #L430ebe.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L430ec4.  v6:= temp;
  #L430ec6.  v1:= v11.`r1.a$b.d` @type ^`java.lang.Long` @kind object;
  #L430eca.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L430ed0.  v7:= temp @kind wide;
  #L430ed2.  v1:= v11.`r1.a$b.e` @type ^`java.lang.Integer` @kind object;
  #L430ed6.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L430edc.  v9:= temp;
  #L430ede.  v10:= 0I;
  #L430ee0.  v2:= v0 @kind object;
  #L430ee2.  call `<init>`(v2, v3, v5, v6, v7, v9, v10) @signature `Lr1/a;.<init>:(JIIJILr1/a$a;)V` @kind direct;
  #L430ee8.  return v0 @kind object;
  #L430eea.  v0:= new `java.lang.IllegalStateException`;
  #L430eee.  v2:= new `java.lang.StringBuilder`;
  #L430ef2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L430ef8.  v3:= "Missing required properties:" @kind object;
  #L430efc.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430f02.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430f08.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L430f0e.  v1:= temp @kind object;
  #L430f10.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L430f16.  throw v0;
}
procedure `r1.e$a` `b`(`r1.a$b` v0 @kind this, `int` v1 ) @signature `Lr1/a$b;.b:(I)Lr1/e$a;` @AccessFlag  {
    temp;

  #L430f28.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L430f2e.  v1:= temp @kind object;
  #L430f30.  v0.`r1.a$b.c` @type ^`java.lang.Integer` := v1 @kind object;
  #L430f34.  return v0 @kind object;
}
procedure `r1.e$a` `c`(`r1.a$b` v0 @kind this, `long` v1 ) @signature `Lr1/a$b;.c:(J)Lr1/e$a;` @AccessFlag  {
    temp;

  #L430f48.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L430f4e.  v1:= temp @kind object;
  #L430f50.  v0.`r1.a$b.d` @type ^`java.lang.Long` := v1 @kind object;
  #L430f54.  return v0 @kind object;
}
procedure `r1.e$a` `d`(`r1.a$b` v0 @kind this, `int` v1 ) @signature `Lr1/a$b;.d:(I)Lr1/e$a;` @AccessFlag  {
    temp;

  #L430f68.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L430f6e.  v1:= temp @kind object;
  #L430f70.  v0.`r1.a$b.b` @type ^`java.lang.Integer` := v1 @kind object;
  #L430f74.  return v0 @kind object;
}
procedure `r1.e$a` `e`(`r1.a$b` v0 @kind this, `int` v1 ) @signature `Lr1/a$b;.e:(I)Lr1/e$a;` @AccessFlag  {
    temp;

  #L430f88.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L430f8e.  v1:= temp @kind object;
  #L430f90.  v0.`r1.a$b.e` @type ^`java.lang.Integer` := v1 @kind object;
  #L430f94.  return v0 @kind object;
}
procedure `r1.e$a` `f`(`r1.a$b` v0 @kind this, `long` v1 ) @signature `Lr1/a$b;.f:(J)Lr1/e$a;` @AccessFlag  {
    temp;

  #L430fa8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L430fae.  v1:= temp @kind object;
  #L430fb0.  v0.`r1.a$b.a` @type ^`java.lang.Long` := v1 @kind object;
  #L430fb4.  return v0 @kind object;
}
