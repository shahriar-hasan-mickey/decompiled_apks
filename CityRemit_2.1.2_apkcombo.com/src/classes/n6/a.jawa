record `n6.a` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `n6.a.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `n6.a.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `n6.a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n6.a` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Ln6/a;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f2058.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f205e.  v0.`n6.a.a` @type ^`java.lang.String` := v1 @kind object;
  #L3f2062.  v0.`n6.a.b` @type ^`java.util.Map` := v2 @kind object;
  #L3f2066.  v1:= new `java.util.HashMap`;
  #L3f206a.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3f2070.  v0.`n6.a.c` @type ^`java.util.Map` := v1 @kind object;
  #L3f2074.  return @kind void;
}
procedure `java.lang.String` `a`(`n6.a` v6 @kind this, `java.util.Map` v7 @kind object) @signature `Ln6/a;.a:(Ljava/util/Map;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f1d04.  v0:= new `java.lang.StringBuilder`;
  #L3f1d08.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f1d0e.  call temp:= `entrySet`(v7) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3f1d14.  v7:= temp @kind object;
  #L3f1d16.  call temp:= `iterator`(v7) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f1d1c.  v7:= temp @kind object;
  #L3f1d1e.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f1d24.  v1:= temp @kind object;
  #L3f1d26.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L3f1d2a.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3f1d30.  v2:= temp @kind object;
  #L3f1d32.  v2:= (`java.lang.String`) v2 @kind object;
  #L3f1d36.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1d3c.  v2:= "=" @kind object;
  #L3f1d40.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1d46.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3f1d4c.  v3:= temp @kind object;
  #L3f1d4e.  v4:= "UTF-8" @kind object;
  #L3f1d52.  v5:= "" @kind object;
  #L3f1d56.  if v3 == 0 then goto L3f1d70;
  #L3f1d5a.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3f1d60.  v1:= temp @kind object;
  #L3f1d62.  v1:= (`java.lang.String`) v1 @kind object;
  #L3f1d66.  call temp:= `encode`(v1, v4) @signature `Ljava/net/URLEncoder;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3f1d6c.  v1:= temp @kind object;
  #L3f1d6e.  goto L3f1d72;
  #L3f1d70.  v1:= v5 @kind object;
  #L3f1d72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1d78.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f1d7e.  v1:= temp;
  #L3f1d80.  if v1 == 0 then goto L3f1dc0;
  #L3f1d84.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f1d8a.  v1:= temp @kind object;
  #L3f1d8c.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L3f1d90.  v3:= "&" @kind object;
  #L3f1d94.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1d9a.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3f1da0.  v3:= temp @kind object;
  #L3f1da2.  v3:= (`java.lang.String`) v3 @kind object;
  #L3f1da6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1dac.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1db2.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3f1db8.  v3:= temp @kind object;
  #L3f1dba.  if v3 == 0 then goto L3f1d70;
  #L3f1dbe.  goto L3f1d5a;
  #L3f1dc0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f1dc6.  v7:= temp @kind object;
  #L3f1dc8.  return v7 @kind object;
}
procedure `java.lang.String` `b`(`n6.a` v2 @kind this, `java.lang.String` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Ln6/a;.b:(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3f1ddc.  call temp:= `a`(v2, v4) @signature `Ln6/a;.a:(Ljava/util/Map;)Ljava/lang/String;` @kind direct;
  #L3f1de2.  v4:= temp @kind object;
  #L3f1de4.  call temp:= `isEmpty`(v4) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3f1dea.  v0:= temp;
  #L3f1dec.  if v0 == 0 then goto L3f1df2;
  #L3f1df0.  return v3 @kind object;
  #L3f1df2.  v0:= "?" @kind object;
  #L3f1df6.  call temp:= `contains`(v3, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L3f1dfc.  v1:= temp;
  #L3f1dfe.  if v1 == 0 then goto L3f1e50;
  #L3f1e02.  v0:= "&" @kind object;
  #L3f1e06.  call temp:= `endsWith`(v3, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3f1e0c.  v1:= temp;
  #L3f1e0e.  if v1 != 0 then goto L3f1e30;
  #L3f1e12.  v1:= new `java.lang.StringBuilder`;
  #L3f1e16.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f1e1c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1e22.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1e28.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f1e2e.  v4:= temp @kind object;
  #L3f1e30.  v0:= new `java.lang.StringBuilder`;
  #L3f1e34.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f1e3a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1e40.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1e46.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f1e4c.  v3:= temp @kind object;
  #L3f1e4e.  return v3 @kind object;
  #L3f1e50.  v1:= new `java.lang.StringBuilder`;
  #L3f1e54.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f1e5a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1e60.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1e66.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1e6c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f1e72.  v3:= temp @kind object;
  #L3f1e74.  return v3 @kind object;
}
procedure `java.lang.String` `e`(`n6.a` v4 @kind this, `java.io.InputStream` v5 @kind object) @signature `Ln6/a;.e:(Ljava/io/InputStream;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f1e88.  v0:= new `java.io.BufferedReader`;
  #L3f1e8c.  v1:= new `java.io.InputStreamReader`;
  #L3f1e90.  v2:= "UTF-8" @kind object;
  #L3f1e94.  call `<init>`(v1, v5, v2) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/lang/String;)V` @kind direct;
  #L3f1e9a.  call `<init>`(v0, v1) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L3f1ea0.  v5:= 8192I;
  #L3f1ea4.  v5:= new `char`[v5];
  #L3f1ea8.  v1:= new `java.lang.StringBuilder`;
  #L3f1eac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f1eb2.  call temp:= `read`(v0, v5) @signature `Ljava/io/BufferedReader;.read:([C)I` @kind virtual;
  #L3f1eb8.  v2:= temp;
  #L3f1eba.  v3:= -1I;
  #L3f1ebc.  if v2 == v3 then goto L3f1eca;
  #L3f1ec0.  v3:= 0I;
  #L3f1ec2.  call temp:= `append`(v1, v5, v3, v2) @signature `Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1ec8.  goto L3f1eb2;
  #L3f1eca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f1ed0.  v5:= temp @kind object;
  #L3f1ed2.  return v5 @kind object;
}
procedure `n6.c` `c`(`n6.a` v5 @kind this) @signature `Ln6/a;.c:()Ln6/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f1f00.  v0:= 0I;
  #L3f1f02.  v1:= v5.`n6.a.a` @type ^`java.lang.String` @kind object;
  #L3f1f06.  v2:= v5.`n6.a.b` @type ^`java.util.Map` @kind object;
  #L3f1f0a.  call temp:= `b`(v5, v1, v2) @signature `Ln6/a;.b:(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;` @kind direct;
  #L3f1f10.  v1:= temp @kind object;
  #L3f1f12.  call temp:= `f`() @signature `Lg6/f;.f:()Lg6/f;` @kind static;
  #L3f1f18.  v2:= temp @kind object;
  #L3f1f1a.  v3:= new `java.lang.StringBuilder`;
  #L3f1f1e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f1f24.  v4:= "GET Request URL: " @kind object;
  #L3f1f28.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1f2e.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1f34.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f1f3a.  v3:= temp @kind object;
  #L3f1f3c.  call `i`(v2, v3) @signature `Lg6/f;.i:(Ljava/lang/String;)V` @kind virtual;
  #L3f1f42.  v2:= new `java.net.URL`;
  #L3f1f46.  call `<init>`(v2, v1) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f1f4c.  call temp:= `openConnection`(v2) @signature `Ljava/net/URL;.openConnection:()Ljava/net/URLConnection;` @kind virtual;
  #L3f1f52.  v1:= temp @kind object;
  #L3f1f54.  v1:= (`javax.net.ssl.HttpsURLConnection`) v1 @kind object;
  #L3f1f58.  v2:= 10000I;
  #L3f1f5c.  call `setReadTimeout`(v1, v2) @signature `Ljavax/net/ssl/HttpsURLConnection;.setReadTimeout:(I)V` @kind virtual;
  #L3f1f62.  call `setConnectTimeout`(v1, v2) @signature `Ljavax/net/ssl/HttpsURLConnection;.setConnectTimeout:(I)V` @kind virtual;
  #L3f1f68.  v2:= "GET" @kind object;
  #L3f1f6c.  call `setRequestMethod`(v1, v2) @signature `Ljavax/net/ssl/HttpsURLConnection;.setRequestMethod:(Ljava/lang/String;)V` @kind virtual;
  #L3f1f72.  v2:= v5.`n6.a.c` @type ^`java.util.Map` @kind object;
  #L3f1f76.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3f1f7c.  v2:= temp @kind object;
  #L3f1f7e.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3f1f84.  v2:= temp @kind object;
  #L3f1f86.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3f1f8c.  v3:= temp;
  #L3f1f8e.  if v3 == 0 then goto L3f1fbe;
  #L3f1f92.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3f1f98.  v3:= temp @kind object;
  #L3f1f9a.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L3f1f9e.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3f1fa4.  v4:= temp @kind object;
  #L3f1fa6.  v4:= (`java.lang.String`) v4 @kind object;
  #L3f1faa.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3f1fb0.  v3:= temp @kind object;
  #L3f1fb2.  v3:= (`java.lang.String`) v3 @kind object;
  #L3f1fb6.  call `addRequestProperty`(v1, v4, v3) @signature `Ljavax/net/ssl/HttpsURLConnection;.addRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L3f1fbc.  goto L3f1f86;
  #L3f1fbe.  call `connect`(v1) @signature `Ljavax/net/ssl/HttpsURLConnection;.connect:()V` @kind virtual;
  #L3f1fc4.  call temp:= `getResponseCode`(v1) @signature `Ljavax/net/ssl/HttpsURLConnection;.getResponseCode:()I` @kind virtual;
  #L3f1fca.  v2:= temp;
  #L3f1fcc.  call temp:= `getInputStream`(v1) @signature `Ljavax/net/ssl/HttpsURLConnection;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L3f1fd2.  v3:= temp @kind object;
  #L3f1fd4.  if v3 == 0 then goto L3f1fe8;
  #L3f1fd8.  call temp:= `e`(v5, v3) @signature `Ln6/a;.e:(Ljava/io/InputStream;)Ljava/lang/String;` @kind direct;
  #L3f1fde.  v0:= temp @kind object;
  #L3f1fe0.  goto L3f1fe8;
  #L3f1fe2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f1fe4.  v0:= v3 @kind object;
  #L3f1fe6.  goto L3f200c;
  #L3f1fe8.  if v3 == 0 then goto L3f1ff2;
  #L3f1fec.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3f1ff2.  call `disconnect`(v1) @signature `Ljavax/net/ssl/HttpsURLConnection;.disconnect:()V` @kind virtual;
  #L3f1ff8.  v1:= new `n6.c`;
  #L3f1ffc.  call `<init>`(v1, v2, v0) @signature `Ln6/c;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L3f2002.  return v1 @kind object;
  #L3f2004.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f2006.  goto L3f200c;
  #L3f2008.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f200a.  v1:= v0 @kind object;
  #L3f200c.  if v0 == 0 then goto L3f2016;
  #L3f2010.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3f2016.  if v1 == 0 then goto L3f2020;
  #L3f201a.  call `disconnect`(v1) @signature `Ljavax/net/ssl/HttpsURLConnection;.disconnect:()V` @kind virtual;
  #L3f2020.  throw v2;
  catch `java.lang.Throwable` @[L3f1f02..L3f1f58] goto L3f2008;
  catch `java.lang.Throwable` @[L3f1f5c..L3f1fd4] goto L3f2004;
  catch `java.lang.Throwable` @[L3f1fd8..L3f1fe0] goto L3f1fe2;
}
procedure `n6.a` `d`(`n6.a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Ln6/a;.d:(Ljava/lang/String;Ljava/lang/String;)Ln6/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f1ee4.  v0:= v1.`n6.a.c` @type ^`java.util.Map` @kind object;
  #L3f1ee8.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f1eee.  return v1 @kind object;
}
