record `rc.a` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<clinit>`() @signature `Lrc/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L454d38.  v0:= `@@java.io.File.separatorChar` @type ^`char` @kind char;
  #L454d3c.  v0:= new `sc.a`;
  #L454d40.  v1:= 4I;
  #L454d42.  call `<init>`(v0, v1) @signature `Lsc/a;.<init>:(I)V` @kind direct;
  #L454d48.  v1:= new `java.io.PrintWriter`;
  #L454d4c.  call `<init>`(v1, v0) @signature `Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L454d52.  call `println`(v1) @signature `Ljava/io/PrintWriter;.println:()V` @kind virtual;
  #L454d58.  call temp:= `toString`(v0) @signature `Lsc/a;.toString:()Ljava/lang/String;` @kind virtual;
  #L454d5e.  call `close`(v1) @signature `Ljava/io/PrintWriter;.close:()V` @kind virtual;
  #L454d64.  call `close`(v0) @signature `Lsc/a;.close:()V` @kind virtual;
  #L454d6a.  return @kind void;
  #L454d6c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454d6e.  throw v2;
  #L454d70.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454d72.  call `close`(v1) @signature `Ljava/io/PrintWriter;.close:()V` @kind virtual;
  #L454d78.  goto L454d82;
  #L454d7a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454d7c.  call `addSuppressed`(v2, v1) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L454d82.  throw v3;
  #L454d84.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454d86.  throw v1;
  #L454d88.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454d8a.  call `close`(v0) @signature `Lsc/a;.close:()V` @kind virtual;
  #L454d90.  goto L454d9a;
  #L454d92.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454d94.  call `addSuppressed`(v1, v0) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L454d9a.  throw v2;
  catch `java.lang.Throwable` @[L454d48..L454d52] goto L454d84;
  catch `java.lang.Throwable` @[L454d52..L454d5e] goto L454d6c;
  catch `java.lang.Throwable` @[L454d5e..L454d64] goto L454d84;
  catch `java.lang.Throwable` @[L454d6e..L454d70] goto L454d70;
  catch `java.lang.Throwable` @[L454d72..L454d78] goto L454d7a;
  catch `java.lang.Throwable` @[L454d7c..L454d84] goto L454d84;
  catch `java.lang.Throwable` @[L454d86..L454d88] goto L454d88;
  catch `java.lang.Throwable` @[L454d8a..L454d90] goto L454d92;
}
procedure `int` `a`(`java.io.InputStream` v3 @kind object, `java.io.OutputStream` v4 @kind object) @signature `Lrc/a;.a:(Ljava/io/InputStream;Ljava/io/OutputStream;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L454c94.  call temp:= `c`(v3, v4) @signature `Lrc/a;.c:(Ljava/io/InputStream;Ljava/io/OutputStream;)J` @kind static;
  #L454c9a.  v3:= temp @kind wide;
  #L454c9c.  v0:= 2147483647L;
  #L454ca2.  v2:= lcmp(v3, v0);
  #L454ca6.  if v2 <= 0 then goto L454cae;
  #L454caa.  v3:= -1I;
  #L454cac.  return v3;
  #L454cae.  v4:= (`int`) v3 @kind l2i;
  #L454cb0.  return v4;
}
procedure `long` `b`(`java.io.InputStream` v0 @kind object, `java.io.OutputStream` v1 @kind object, `int` v2 ) @signature `Lrc/a;.b:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J` @AccessFlag PUBLIC_STATIC {
    temp;

  #L454cc4.  v2:= new `byte`[v2];
  #L454cc8.  call temp:= `d`(v0, v1, v2) @signature `Lrc/a;.d:(Ljava/io/InputStream;Ljava/io/OutputStream;[B)J` @kind static;
  #L454cce.  v0:= temp @kind wide;
  #L454cd0.  return v0 @kind wide;
}
procedure `long` `c`(`java.io.InputStream` v1 @kind object, `java.io.OutputStream` v2 @kind object) @signature `Lrc/a;.c:(Ljava/io/InputStream;Ljava/io/OutputStream;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L454ce4.  v0:= 4096I;
  #L454ce8.  call temp:= `b`(v1, v2, v0) @signature `Lrc/a;.b:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J` @kind static;
  #L454cee.  v1:= temp @kind wide;
  #L454cf0.  return v1 @kind wide;
}
procedure `long` `d`(`java.io.InputStream` v4 @kind object, `java.io.OutputStream` v5 @kind object, `byte`[] v6 @kind object) @signature `Lrc/a;.d:(Ljava/io/InputStream;Ljava/io/OutputStream;[B)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L454d04.  v0:= 0L;
  #L454d08.  v2:= -1I;
  #L454d0a.  call temp:= `read`(v4, v6) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L454d10.  v3:= temp;
  #L454d12.  if v2 == v3 then goto L454d24;
  #L454d16.  v2:= 0I;
  #L454d18.  call `write`(v5, v6, v2, v3) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L454d1e.  v2:= (`long`) v3 @kind i2l;
  #L454d20.  v0:= v0 + v2 @kind long;
  #L454d22.  goto L454d08;
  #L454d24.  return v0 @kind wide;
}
procedure `void` `e`(`byte`[] v0 @kind object, `java.io.OutputStream` v1 @kind object) @signature `Lrc/a;.e:([BLjava/io/OutputStream;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L454dfc.  if v0 == 0 then goto L454e06;
  #L454e00.  call `write`(v1, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L454e06.  return @kind void;
}
