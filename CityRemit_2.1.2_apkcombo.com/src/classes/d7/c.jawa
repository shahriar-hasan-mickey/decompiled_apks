record `d7.c` @kind class @AccessFlag PUBLIC extends `d7.d` @kind interface {
  `d7.e` `d7.c.a` @AccessFlag PRIVATE_FINAL;
  `f7.h` `d7.c.b` @AccessFlag PRIVATE_FINAL;
  `int` `d7.c.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `d7.c.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`d7.c` v1 @kind this, `c7.h` v2 @kind object) @signature `Ld7/c;.<init>:(Lc7/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f8124.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f812a.  v0:= new `d7.e`;
  #L2f812e.  call `<init>`(v0, v2) @signature `Ld7/e;.<init>:(Lc7/h;)V` @kind direct;
  #L2f8134.  v1.`d7.c.a` @type ^`d7.e` := v0 @kind object;
  #L2f8138.  call temp:= `d`(v2) @signature `Lc7/h;.d:()Lf7/h;` @kind virtual;
  #L2f813e.  v0:= temp @kind object;
  #L2f8140.  v1.`d7.c.b` @type ^`f7.h` := v0 @kind object;
  #L2f8144.  call temp:= `i`(v2) @signature `Lc7/h;.i:()I` @kind virtual;
  #L2f814a.  v0:= temp;
  #L2f814c.  v1.`d7.c.c` @type ^`int` := v0;
  #L2f8150.  call temp:= `r`(v2) @signature `Lc7/h;.r:()Z` @kind virtual;
  #L2f8156.  v2:= temp;
  #L2f8158.  v2:= v2 ^~ 1;
  #L2f815c.  v1.`d7.c.d` @type ^`boolean` := v2 @kind boolean;
  #L2f8160.  return @kind void;
}
procedure `f7.i` `a`(`d7.c` v8 @kind this, `f7.i` v9 @kind object, `f7.b` v10 @kind object, `f7.n` v11 @kind object, `d7.d$a` v12 @kind object, `d7.a` v13 @kind object) @signature `Ld7/c;.a:(Lf7/i;Lf7/b;Lf7/n;Ld7/d$a;Ld7/a;)Lf7/i;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2f7d18.  call temp:= `p`(v9) @signature `Lf7/i;.p:()Lf7/n;` @kind virtual;
  #L2f7d1e.  v0:= temp @kind object;
  #L2f7d20.  call temp:= `C`(v0) @signature `Lf7/n;.C:()I` @kind interface;
  #L2f7d26.  v0:= temp;
  #L2f7d28.  v1:= v8.`d7.c.c` @type ^`int`;
  #L2f7d2c.  v2:= 0I;
  #L2f7d2e.  v3:= 1I;
  #L2f7d30.  if v0 != v1 then goto L2f7d38;
  #L2f7d34.  v0:= 1I;
  #L2f7d36.  goto L2f7d3a;
  #L2f7d38.  v0:= 0I;
  #L2f7d3a.  call `f`(v0) @signature `La7/m;.f:(Z)V` @kind static;
  #L2f7d40.  v0:= new `f7.m`;
  #L2f7d44.  call `<init>`(v0, v10, v11) @signature `Lf7/m;.<init>:(Lf7/b;Lf7/n;)V` @kind direct;
  #L2f7d4a.  v1:= v8.`d7.c.d` @type ^`boolean` @kind boolean;
  #L2f7d4e.  if v1 == 0 then goto L2f7d5c;
  #L2f7d52.  call temp:= `l`(v9) @signature `Lf7/i;.l:()Lf7/m;` @kind virtual;
  #L2f7d58.  v1:= temp @kind object;
  #L2f7d5a.  goto L2f7d64;
  #L2f7d5c.  call temp:= `n`(v9) @signature `Lf7/i;.n:()Lf7/m;` @kind virtual;
  #L2f7d62.  v1:= temp @kind object;
  #L2f7d64.  v4:= v8.`d7.c.a` @type ^`d7.e` @kind object;
  #L2f7d68.  call temp:= `k`(v4, v0) @signature `Ld7/e;.k:(Lf7/m;)Z` @kind virtual;
  #L2f7d6e.  v4:= temp;
  #L2f7d70.  call temp:= `p`(v9) @signature `Lf7/i;.p:()Lf7/n;` @kind virtual;
  #L2f7d76.  v5:= temp @kind object;
  #L2f7d78.  call temp:= `J`(v5, v10) @signature `Lf7/n;.J:(Lf7/b;)Z` @kind interface;
  #L2f7d7e.  v5:= temp;
  #L2f7d80.  if v5 == 0 then goto L2f7ea4;
  #L2f7d84.  call temp:= `p`(v9) @signature `Lf7/i;.p:()Lf7/n;` @kind virtual;
  #L2f7d8a.  v5:= temp @kind object;
  #L2f7d8c.  call temp:= `z`(v5, v10) @signature `Lf7/n;.z:(Lf7/b;)Lf7/n;` @kind interface;
  #L2f7d92.  v5:= temp @kind object;
  #L2f7d94.  v6:= v8.`d7.c.b` @type ^`f7.h` @kind object;
  #L2f7d98.  v7:= v8.`d7.c.d` @type ^`boolean` @kind boolean;
  #L2f7d9c.  call temp:= `b`(v12, v6, v1, v7) @signature `Ld7/d$a;.b:(Lf7/h;Lf7/m;Z)Lf7/m;` @kind interface;
  #L2f7da2.  v1:= temp @kind object;
  #L2f7da4.  if v1 == 0 then goto L2f7dda;
  #L2f7da8.  call temp:= `c`(v1) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L2f7dae.  v6:= temp @kind object;
  #L2f7db0.  call temp:= `equals`(v6, v10) @signature `Lf7/b;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f7db6.  v6:= temp;
  #L2f7db8.  if v6 != 0 then goto L2f7d94;
  #L2f7dbc.  call temp:= `p`(v9) @signature `Lf7/i;.p:()Lf7/n;` @kind virtual;
  #L2f7dc2.  v6:= temp @kind object;
  #L2f7dc4.  call temp:= `c`(v1) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L2f7dca.  v7:= temp @kind object;
  #L2f7dcc.  call temp:= `J`(v6, v7) @signature `Lf7/n;.J:(Lf7/b;)Z` @kind interface;
  #L2f7dd2.  v6:= temp;
  #L2f7dd4.  if v6 == 0 then goto L2f7dda;
  #L2f7dd8.  goto L2f7d94;
  #L2f7dda.  if v1 != 0 then goto L2f7de2;
  #L2f7dde.  v12:= 1I;
  #L2f7de0.  goto L2f7df2;
  #L2f7de2.  v12:= v8.`d7.c.b` @type ^`f7.h` @kind object;
  #L2f7de6.  v6:= v8.`d7.c.d` @type ^`boolean` @kind boolean;
  #L2f7dea.  call temp:= `a`(v12, v1, v0, v6) @signature `Lf7/h;.a:(Lf7/m;Lf7/m;Z)I` @kind virtual;
  #L2f7df0.  v12:= temp;
  #L2f7df2.  if v4 == 0 then goto L2f7e0a;
  #L2f7df6.  call temp:= `isEmpty`(v11) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L2f7dfc.  v0:= temp;
  #L2f7dfe.  if v0 != 0 then goto L2f7e0a;
  #L2f7e02.  if v12 < 0 then goto L2f7e0a;
  #L2f7e06.  v12:= 1I;
  #L2f7e08.  goto L2f7e0c;
  #L2f7e0a.  v12:= 0I;
  #L2f7e0c.  if v12 == 0 then goto L2f7e2c;
  #L2f7e10.  if v13 == 0 then goto L2f7e22;
  #L2f7e14.  call temp:= `e`(v10, v11, v5) @signature `Lc7/c;.e:(Lf7/b;Lf7/n;Lf7/n;)Lc7/c;` @kind static;
  #L2f7e1a.  v12:= temp @kind object;
  #L2f7e1c.  call `b`(v13, v12) @signature `Ld7/a;.b:(Lc7/c;)V` @kind virtual;
  #L2f7e22.  call temp:= `G`(v9, v10, v11) @signature `Lf7/i;.G:(Lf7/b;Lf7/n;)Lf7/i;` @kind virtual;
  #L2f7e28.  v9:= temp @kind object;
  #L2f7e2a.  return v9 @kind object;
  #L2f7e2c.  if v13 == 0 then goto L2f7e3e;
  #L2f7e30.  call temp:= `h`(v10, v5) @signature `Lc7/c;.h:(Lf7/b;Lf7/n;)Lc7/c;` @kind static;
  #L2f7e36.  v11:= temp @kind object;
  #L2f7e38.  call `b`(v13, v11) @signature `Ld7/a;.b:(Lc7/c;)V` @kind virtual;
  #L2f7e3e.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L2f7e44.  v11:= temp @kind object;
  #L2f7e46.  call temp:= `G`(v9, v10, v11) @signature `Lf7/i;.G:(Lf7/b;Lf7/n;)Lf7/i;` @kind virtual;
  #L2f7e4c.  v9:= temp @kind object;
  #L2f7e4e.  if v1 == 0 then goto L2f7e64;
  #L2f7e52.  v10:= v8.`d7.c.a` @type ^`d7.e` @kind object;
  #L2f7e56.  call temp:= `k`(v10, v1) @signature `Ld7/e;.k:(Lf7/m;)Z` @kind virtual;
  #L2f7e5c.  v10:= temp;
  #L2f7e5e.  if v10 == 0 then goto L2f7e64;
  #L2f7e62.  v2:= 1I;
  #L2f7e64.  if v2 == 0 then goto L2f7ea2;
  #L2f7e68.  if v13 == 0 then goto L2f7e8a;
  #L2f7e6c.  call temp:= `c`(v1) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L2f7e72.  v10:= temp @kind object;
  #L2f7e74.  call temp:= `d`(v1) @signature `Lf7/m;.d:()Lf7/n;` @kind virtual;
  #L2f7e7a.  v11:= temp @kind object;
  #L2f7e7c.  call temp:= `c`(v10, v11) @signature `Lc7/c;.c:(Lf7/b;Lf7/n;)Lc7/c;` @kind static;
  #L2f7e82.  v10:= temp @kind object;
  #L2f7e84.  call `b`(v13, v10) @signature `Ld7/a;.b:(Lc7/c;)V` @kind virtual;
  #L2f7e8a.  call temp:= `c`(v1) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L2f7e90.  v10:= temp @kind object;
  #L2f7e92.  call temp:= `d`(v1) @signature `Lf7/m;.d:()Lf7/n;` @kind virtual;
  #L2f7e98.  v11:= temp @kind object;
  #L2f7e9a.  call temp:= `G`(v9, v10, v11) @signature `Lf7/i;.G:(Lf7/b;Lf7/n;)Lf7/i;` @kind virtual;
  #L2f7ea0.  v9:= temp @kind object;
  #L2f7ea2.  return v9 @kind object;
  #L2f7ea4.  call temp:= `isEmpty`(v11) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L2f7eaa.  v12:= temp;
  #L2f7eac.  if v12 == 0 then goto L2f7eb2;
  #L2f7eb0.  return v9 @kind object;
  #L2f7eb2.  if v4 == 0 then goto L2f7f14;
  #L2f7eb6.  v12:= v8.`d7.c.b` @type ^`f7.h` @kind object;
  #L2f7eba.  v2:= v8.`d7.c.d` @type ^`boolean` @kind boolean;
  #L2f7ebe.  call temp:= `a`(v12, v1, v0, v2) @signature `Lf7/h;.a:(Lf7/m;Lf7/m;Z)I` @kind virtual;
  #L2f7ec4.  v12:= temp;
  #L2f7ec6.  if v12 < 0 then goto L2f7f14;
  #L2f7eca.  if v13 == 0 then goto L2f7efa;
  #L2f7ece.  call temp:= `c`(v1) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L2f7ed4.  v12:= temp @kind object;
  #L2f7ed6.  call temp:= `d`(v1) @signature `Lf7/m;.d:()Lf7/n;` @kind virtual;
  #L2f7edc.  v0:= temp @kind object;
  #L2f7ede.  call temp:= `h`(v12, v0) @signature `Lc7/c;.h:(Lf7/b;Lf7/n;)Lc7/c;` @kind static;
  #L2f7ee4.  v12:= temp @kind object;
  #L2f7ee6.  call `b`(v13, v12) @signature `Ld7/a;.b:(Lc7/c;)V` @kind virtual;
  #L2f7eec.  call temp:= `c`(v10, v11) @signature `Lc7/c;.c:(Lf7/b;Lf7/n;)Lc7/c;` @kind static;
  #L2f7ef2.  v12:= temp @kind object;
  #L2f7ef4.  call `b`(v13, v12) @signature `Ld7/a;.b:(Lc7/c;)V` @kind virtual;
  #L2f7efa.  call temp:= `G`(v9, v10, v11) @signature `Lf7/i;.G:(Lf7/b;Lf7/n;)Lf7/i;` @kind virtual;
  #L2f7f00.  v9:= temp @kind object;
  #L2f7f02.  call temp:= `c`(v1) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L2f7f08.  v10:= temp @kind object;
  #L2f7f0a.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L2f7f10.  v11:= temp @kind object;
  #L2f7f12.  goto L2f7e9a;
  #L2f7f14.  return v9 @kind object;
}
procedure `f7.h` `d`(`d7.c` v1 @kind this) @signature `Ld7/c;.d:()Lf7/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f7d00.  v0:= v1.`d7.c.b` @type ^`f7.h` @kind object;
  #L2f7d04.  return v0 @kind object;
}
procedure `d7.d` `e`(`d7.c` v1 @kind this) @signature `Ld7/c;.e:()Ld7/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f7ce0.  v0:= v1.`d7.c.a` @type ^`d7.e` @kind object;
  #L2f7ce4.  call temp:= `e`(v0) @signature `Ld7/e;.e:()Ld7/d;` @kind virtual;
  #L2f7cea.  v0:= temp @kind object;
  #L2f7cec.  return v0 @kind object;
}
procedure `f7.i` `f`(`d7.c` v7 @kind this, `f7.i` v8 @kind object, `f7.b` v9 @kind object, `f7.n` v10 @kind object, `x6.l` v11 @kind object, `d7.d$a` v12 @kind object, `d7.a` v13 @kind object) @signature `Ld7/c;.f:(Lf7/i;Lf7/b;Lf7/n;Lx6/l;Ld7/d$a;Ld7/a;)Lf7/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2f7f28.  v0:= v7.`d7.c.a` @type ^`d7.e` @kind object;
  #L2f7f2c.  v1:= new `f7.m`;
  #L2f7f30.  call `<init>`(v1, v9, v10) @signature `Lf7/m;.<init>:(Lf7/b;Lf7/n;)V` @kind direct;
  #L2f7f36.  call temp:= `k`(v0, v1) @signature `Ld7/e;.k:(Lf7/m;)Z` @kind virtual;
  #L2f7f3c.  v0:= temp;
  #L2f7f3e.  if v0 != 0 then goto L2f7f4a;
  #L2f7f42.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L2f7f48.  v10:= temp @kind object;
  #L2f7f4a.  v3:= v10 @kind object;
  #L2f7f4c.  call temp:= `p`(v8) @signature `Lf7/i;.p:()Lf7/n;` @kind virtual;
  #L2f7f52.  v10:= temp @kind object;
  #L2f7f54.  call temp:= `z`(v10, v9) @signature `Lf7/n;.z:(Lf7/b;)Lf7/n;` @kind interface;
  #L2f7f5a.  v10:= temp @kind object;
  #L2f7f5c.  call temp:= `equals`(v10, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f7f62.  v10:= temp;
  #L2f7f64.  if v10 == 0 then goto L2f7f6a;
  #L2f7f68.  return v8 @kind object;
  #L2f7f6a.  call temp:= `p`(v8) @signature `Lf7/i;.p:()Lf7/n;` @kind virtual;
  #L2f7f70.  v10:= temp @kind object;
  #L2f7f72.  call temp:= `C`(v10) @signature `Lf7/n;.C:()I` @kind interface;
  #L2f7f78.  v10:= temp;
  #L2f7f7a.  v0:= v7.`d7.c.c` @type ^`int`;
  #L2f7f7e.  if v10 >= v0 then goto L2f7fa2;
  #L2f7f82.  v10:= v7.`d7.c.a` @type ^`d7.e` @kind object;
  #L2f7f86.  call temp:= `e`(v10) @signature `Ld7/e;.e:()Ld7/d;` @kind virtual;
  #L2f7f8c.  v0:= temp @kind object;
  #L2f7f8e.  v1:= v8 @kind object;
  #L2f7f90.  v2:= v9 @kind object;
  #L2f7f92.  v4:= v11 @kind object;
  #L2f7f94.  v5:= v12 @kind object;
  #L2f7f96.  v6:= v13 @kind object;
  #L2f7f98.  call temp:= `f`(v0, v1, v2, v3, v4, v5, v6) @signature `Ld7/d;.f:(Lf7/i;Lf7/b;Lf7/n;Lx6/l;Ld7/d$a;Ld7/a;)Lf7/i;` @kind interface;
  #L2f7f9e.  v8:= temp @kind object;
  #L2f7fa0.  return v8 @kind object;
  #L2f7fa2.  v0:= v7 @kind object;
  #L2f7fa4.  v1:= v8 @kind object;
  #L2f7fa6.  v2:= v9 @kind object;
  #L2f7fa8.  v4:= v12 @kind object;
  #L2f7faa.  v5:= v13 @kind object;
  #L2f7fac.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Ld7/c;.a:(Lf7/i;Lf7/b;Lf7/n;Ld7/d$a;Ld7/a;)Lf7/i;` @kind direct;
  #L2f7fb2.  v8:= temp @kind object;
  #L2f7fb4.  return v8 @kind object;
}
procedure `boolean` `g`(`d7.c` v1 @kind this) @signature `Ld7/c;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f7ccc.  v0:= 1I;
  #L2f7cce.  return v0;
}
procedure `f7.i` `h`(`d7.c` v0 @kind this, `f7.i` v1 @kind object, `f7.n` v2 @kind object) @signature `Ld7/c;.h:(Lf7/i;Lf7/n;)Lf7/i;` @AccessFlag PUBLIC {
    temp;

  #L2f8110.  return v1 @kind object;
}
procedure `f7.i` `i`(`d7.c` v10 @kind this, `f7.i` v11 @kind object, `f7.i` v12 @kind object, `d7.a` v13 @kind object) @signature `Ld7/c;.i:(Lf7/i;Lf7/i;Ld7/a;)Lf7/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2f7fc8.  call temp:= `p`(v12) @signature `Lf7/i;.p:()Lf7/n;` @kind virtual;
  #L2f7fce.  v0:= temp @kind object;
  #L2f7fd0.  call temp:= `A`(v0) @signature `Lf7/n;.A:()Z` @kind interface;
  #L2f7fd6.  v0:= temp;
  #L2f7fd8.  if v0 != 0 then goto L2f80d6;
  #L2f7fdc.  call temp:= `p`(v12) @signature `Lf7/i;.p:()Lf7/n;` @kind virtual;
  #L2f7fe2.  v0:= temp @kind object;
  #L2f7fe4.  call temp:= `isEmpty`(v0) @signature `Lf7/n;.isEmpty:()Z` @kind interface;
  #L2f7fea.  v0:= temp;
  #L2f7fec.  if v0 == 0 then goto L2f7ff4;
  #L2f7ff0.  goto L2f80d6;
  #L2f7ff4.  call temp:= `a`() @signature `Lf7/r;.a:()Lf7/n;` @kind static;
  #L2f7ffa.  v0:= temp @kind object;
  #L2f7ffc.  call temp:= `N`(v12, v0) @signature `Lf7/i;.N:(Lf7/n;)Lf7/i;` @kind virtual;
  #L2f8002.  v0:= temp @kind object;
  #L2f8004.  v1:= v10.`d7.c.d` @type ^`boolean` @kind boolean;
  #L2f8008.  v2:= 1I;
  #L2f800a.  if v1 == 0 then goto L2f8032;
  #L2f800e.  call temp:= `W`(v12) @signature `Lf7/i;.W:()Ljava/util/Iterator;` @kind virtual;
  #L2f8014.  v12:= temp @kind object;
  #L2f8016.  v1:= v10.`d7.c.a` @type ^`d7.e` @kind object;
  #L2f801a.  call temp:= `a`(v1) @signature `Ld7/e;.a:()Lf7/m;` @kind virtual;
  #L2f8020.  v1:= temp @kind object;
  #L2f8022.  v3:= v10.`d7.c.a` @type ^`d7.e` @kind object;
  #L2f8026.  call temp:= `c`(v3) @signature `Ld7/e;.c:()Lf7/m;` @kind virtual;
  #L2f802c.  v3:= temp @kind object;
  #L2f802e.  v4:= -1I;
  #L2f8030.  goto L2f8054;
  #L2f8032.  call temp:= `iterator`(v12) @signature `Lf7/i;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L2f8038.  v12:= temp @kind object;
  #L2f803a.  v1:= v10.`d7.c.a` @type ^`d7.e` @kind object;
  #L2f803e.  call temp:= `c`(v1) @signature `Ld7/e;.c:()Lf7/m;` @kind virtual;
  #L2f8044.  v1:= temp @kind object;
  #L2f8046.  v3:= v10.`d7.c.a` @type ^`d7.e` @kind object;
  #L2f804a.  call temp:= `a`(v3) @signature `Ld7/e;.a:()Lf7/m;` @kind virtual;
  #L2f8050.  v3:= temp @kind object;
  #L2f8052.  v4:= 1I;
  #L2f8054.  v5:= 0I;
  #L2f8056.  v6:= 0I;
  #L2f8058.  v7:= 0I;
  #L2f805a.  call temp:= `hasNext`(v12) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2f8060.  v8:= temp;
  #L2f8062.  if v8 == 0 then goto L2f80ea;
  #L2f8066.  call temp:= `next`(v12) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2f806c.  v8:= temp @kind object;
  #L2f806e.  v8:= (`f7.m`) v8 @kind object;
  #L2f8072.  if v6 != 0 then goto L2f808c;
  #L2f8076.  v9:= v10.`d7.c.b` @type ^`f7.h` @kind object;
  #L2f807a.  call temp:= `compare`(v9, v1, v8) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L2f8080.  v9:= temp;
  #L2f8082.  v9:= v9 * v4 @kind int;
  #L2f8086.  if v9 > 0 then goto L2f808c;
  #L2f808a.  v6:= 1I;
  #L2f808c.  if v6 == 0 then goto L2f80b0;
  #L2f8090.  v9:= v10.`d7.c.c` @type ^`int`;
  #L2f8094.  if v7 >= v9 then goto L2f80b0;
  #L2f8098.  v9:= v10.`d7.c.b` @type ^`f7.h` @kind object;
  #L2f809c.  call temp:= `compare`(v9, v8, v3) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L2f80a2.  v9:= temp;
  #L2f80a4.  v9:= v9 * v4 @kind int;
  #L2f80a8.  if v9 > 0 then goto L2f80b0;
  #L2f80ac.  v9:= 1I;
  #L2f80ae.  goto L2f80b2;
  #L2f80b0.  v9:= 0I;
  #L2f80b2.  if v9 == 0 then goto L2f80bc;
  #L2f80b6.  v7:= v7 + 1;
  #L2f80ba.  goto L2f805a;
  #L2f80bc.  call temp:= `c`(v8) @signature `Lf7/m;.c:()Lf7/b;` @kind virtual;
  #L2f80c2.  v8:= temp @kind object;
  #L2f80c4.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L2f80ca.  v9:= temp @kind object;
  #L2f80cc.  call temp:= `G`(v0, v8, v9) @signature `Lf7/i;.G:(Lf7/b;Lf7/n;)Lf7/i;` @kind virtual;
  #L2f80d2.  v0:= temp @kind object;
  #L2f80d4.  goto L2f805a;
  #L2f80d6.  call temp:= `e0`() @signature `Lf7/g;.e0:()Lf7/g;` @kind static;
  #L2f80dc.  v12:= temp @kind object;
  #L2f80de.  v0:= v10.`d7.c.b` @type ^`f7.h` @kind object;
  #L2f80e2.  call temp:= `h`(v12, v0) @signature `Lf7/i;.h:(Lf7/n;Lf7/h;)Lf7/i;` @kind static;
  #L2f80e8.  v0:= temp @kind object;
  #L2f80ea.  v12:= v10.`d7.c.a` @type ^`d7.e` @kind object;
  #L2f80ee.  call temp:= `e`(v12) @signature `Ld7/e;.e:()Ld7/d;` @kind virtual;
  #L2f80f4.  v12:= temp @kind object;
  #L2f80f6.  call temp:= `i`(v12, v11, v0, v13) @signature `Ld7/d;.i:(Lf7/i;Lf7/i;Ld7/a;)Lf7/i;` @kind interface;
  #L2f80fc.  v11:= temp @kind object;
  #L2f80fe.  return v11 @kind object;
}
