record `okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.atomic.AtomicBoolean` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.CountDownLatch` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @AccessFlag PRIVATE;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.d` @AccessFlag PRIVATE;
}
global `byte`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L401c44.  v0:= 1I;
  #L401c46.  v0:= new `byte`[v0];
  #L401c4a.  v1:= 42I;
  #L401c4e.  v2:= 0I;
  #L401c50.  v0[v2]:= v1 @kind byte;
  #L401c54.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.e` @type ^`byte`[] := v0 @kind object;
  #L401c58.  v0:= new `java.lang.String`[v2];
  #L401c5c.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @type ^`java.lang.String`[] := v0 @kind object;
  #L401c60.  v0:= "*" @kind object;
  #L401c64.  temp:= new `java.lang.String`[v0];
  #L401c6a.  v0:= temp @kind object;
  #L401c6c.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.g` @type ^`java.lang.String`[] := v0 @kind object;
  #L401c70.  v0:= new `okhttp3.internal.publicsuffix.PublicSuffixDatabase`;
  #L401c74.  call `<init>`(v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @kind direct;
  #L401c7a.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.h` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` := v0 @kind object;
  #L401c7e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v2 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L401c90.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L401c96.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L401c9a.  v1:= 0I;
  #L401c9c.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L401ca2.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L401ca6.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L401caa.  v1:= 1I;
  #L401cac.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L401cb2.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @type ^`java.util.concurrent.CountDownLatch` := v0 @kind object;
  #L401cb6.  return @kind void;
}
procedure `java.lang.String` `a`(`byte`[] v17 @kind object, `byte`[][] v18 @kind object, `int` v19 ) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:([B[[BI)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L401884.  v0:= v17 @kind object;
  #L401888.  v1:= v18 @kind object;
  #L40188c.  v2:= length @variable v0;
  #L40188e.  v3:= 0I;
  #L401890.  v4:= 0I;
  #L401892.  if v4 >= v2 then goto L401994;
  #L401896.  v5:= v4 + v2 @kind int;
  #L40189a.  v5:= v5 / 2;
  #L40189e.  v6:= 10I;
  #L4018a2.  v7:= -1I;
  #L4018a4.  if v5 <= v7 then goto L4018b6;
  #L4018a8.  v8:= v0[v5] @kind byte;
  #L4018ac.  if v8 == v6 then goto L4018b6;
  #L4018b0.  v5:= v5 + -1;
  #L4018b4.  goto L40189e;
  #L4018b6.  v5:= v5 + 1;
  #L4018ba.  v8:= 1I;
  #L4018bc.  v9:= 1I;
  #L4018be.  v10:= v5 + v9 @kind int;
  #L4018c2.  v11:= v0[v10] @kind byte;
  #L4018c6.  if v11 == v6 then goto L4018d0;
  #L4018ca.  v9:= v9 + 1;
  #L4018ce.  goto L4018be;
  #L4018d0.  v6:= v10 - v5 @kind int;
  #L4018d4.  v11:= v19;
  #L4018d8.  v9:= 0I;
  #L4018da.  v12:= 0I;
  #L4018dc.  v13:= 0I;
  #L4018de.  if v9 == 0 then goto L4018ea;
  #L4018e2.  v9:= 46I;
  #L4018e6.  v14:= 0I;
  #L4018e8.  goto L401900;
  #L4018ea.  v14:= v1[v11] @kind object;
  #L4018ee.  v14:= v14[v12] @kind byte;
  #L4018f2.  v14:= v14 ^& 255;
  #L4018f6.  v16:= v14;
  #L4018fa.  v14:= v9;
  #L4018fc.  v9:= v16;
  #L401900.  v15:= v5 + v13 @kind int;
  #L401904.  v15:= v0[v15] @kind byte;
  #L401908.  v15:= v15 ^& 255;
  #L40190c.  v9:= v9 - v15 @kind int;
  #L40190e.  if v9 == 0 then goto L401914;
  #L401912.  goto L401934;
  #L401914.  v13:= v13 + 1;
  #L401918.  v12:= v12 + 1;
  #L40191c.  if v13 != v6 then goto L401922;
  #L401920.  goto L401934;
  #L401922.  v15:= v1[v11] @kind object;
  #L401926.  v15:= length @variable v15;
  #L401928.  if v15 != v12 then goto L401990;
  #L40192c.  v14:= length @variable v1;
  #L40192e.  v14:= v14 - v8 @kind int;
  #L401930.  if v11 != v14 then goto L401986;
  #L401934.  if v9 >= 0 then goto L401940;
  #L401938.  v5:= v5 + -1;
  #L40193c.  v2:= v5;
  #L40193e.  goto L401892;
  #L401940.  if v9 <= 0 then goto L40194a;
  #L401944.  v4:= v10 + 1;
  #L401948.  goto L401892;
  #L40194a.  v7:= v6 - v13 @kind int;
  #L40194e.  v8:= v1[v11] @kind object;
  #L401952.  v8:= length @variable v8;
  #L401954.  v8:= v8 - v12 @kind int;
  #L401956.  v11:= v11 + 1;
  #L40195a.  v9:= length @variable v1;
  #L40195c.  if v11 >= v9 then goto L40196a;
  #L401960.  v9:= v1[v11] @kind object;
  #L401964.  v9:= length @variable v9;
  #L401966.  v8:= v8 + v9 @kind int;
  #L401968.  goto L401956;
  #L40196a.  if v8 >= v7 then goto L401970;
  #L40196e.  goto L401938;
  #L401970.  if v8 <= v7 then goto L401976;
  #L401974.  goto L401944;
  #L401976.  v1:= new `java.lang.String`;
  #L40197a.  v2:= `@@hc.c.d` @type ^`java.nio.charset.Charset` @kind object;
  #L40197e.  call `<init>`(v1, v0, v5, v6, v2) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L401984.  goto L401996;
  #L401986.  v11:= v11 + 1;
  #L40198a.  v9:= 1I;
  #L40198c.  v12:= -1I;
  #L40198e.  goto L4018de;
  #L401990.  v9:= v14;
  #L401992.  goto L4018de;
  #L401994.  v1:= 0I;
  #L401996.  return v1 @kind object;
}
procedure `java.lang.String`[] `b`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v8 @kind this, `java.lang.String`[] v9 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.b:([Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L401a6c.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L401a70.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L401a76.  v0:= temp;
  #L401a78.  v1:= 0I;
  #L401a7a.  v2:= 1I;
  #L401a7c.  if v0 != 0 then goto L401a98;
  #L401a80.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L401a84.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L401a8a.  v0:= temp;
  #L401a8c.  if v0 == 0 then goto L401a98;
  #L401a90.  call `f`(v8) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.f:()V` @kind direct;
  #L401a96.  goto L401ab2;
  #L401a98.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L401a9c.  call `await`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L401aa2.  goto L401ab2;
  #L401aa4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L401aaa.  v0:= temp @kind object;
  #L401aac.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L401ab2.  @monitorenter v8
  #L401ab4.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] @kind object;
  #L401ab8.  if v0 == 0 then goto L401be6;
  #L401abc.  @monitorexit v8
  #L401abe.  v0:= length @variable v9;
  #L401ac0.  v3:= new `byte`[][v0];
  #L401ac4.  v4:= 0I;
  #L401ac6.  v5:= length @variable v9;
  #L401ac8.  if v4 >= v5 then goto L401ae6;
  #L401acc.  v5:= v9[v4] @kind object;
  #L401ad0.  v6:= `@@hc.c.d` @type ^`java.nio.charset.Charset` @kind object;
  #L401ad4.  call temp:= `getBytes`(v5, v6) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L401ada.  v5:= temp @kind object;
  #L401adc.  v3[v4]:= v5 @kind object;
  #L401ae0.  v4:= v4 + 1;
  #L401ae4.  goto L401ac6;
  #L401ae6.  v9:= 0I;
  #L401ae8.  v4:= 0I;
  #L401aea.  if v9 >= v0 then goto L401b06;
  #L401aee.  v5:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] @kind object;
  #L401af2.  call temp:= `a`(v5, v3, v9) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:([B[[BI)Ljava/lang/String;` @kind static;
  #L401af8.  v5:= temp @kind object;
  #L401afa.  if v5 == 0 then goto L401b00;
  #L401afe.  goto L401b08;
  #L401b00.  v9:= v9 + 1;
  #L401b04.  goto L401ae8;
  #L401b06.  v5:= v4 @kind object;
  #L401b08.  if v0 <= v2 then goto L401b42;
  #L401b0c.  call temp:= `clone`(v3) @signature `[[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L401b12.  v9:= temp @kind object;
  #L401b14.  v9:= (`byte`[][]) v9 @kind object;
  #L401b18.  v6:= 0I;
  #L401b1a.  v7:= length @variable v9;
  #L401b1c.  v7:= v7 - v2 @kind int;
  #L401b1e.  if v6 >= v7 then goto L401b42;
  #L401b22.  v7:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.e` @type ^`byte`[] @kind object;
  #L401b26.  v9[v6]:= v7 @kind object;
  #L401b2a.  v7:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] @kind object;
  #L401b2e.  call temp:= `a`(v7, v9, v6) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:([B[[BI)Ljava/lang/String;` @kind static;
  #L401b34.  v7:= temp @kind object;
  #L401b36.  if v7 == 0 then goto L401b3c;
  #L401b3a.  goto L401b44;
  #L401b3c.  v6:= v6 + 1;
  #L401b40.  goto L401b1a;
  #L401b42.  v7:= v4 @kind object;
  #L401b44.  if v7 == 0 then goto L401b6a;
  #L401b48.  v9:= v0 + -1;
  #L401b4c.  if v1 >= v9 then goto L401b6a;
  #L401b50.  v9:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.d` @type ^`byte`[] @kind object;
  #L401b54.  call temp:= `a`(v9, v3, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:([B[[BI)Ljava/lang/String;` @kind static;
  #L401b5a.  v9:= temp @kind object;
  #L401b5c.  if v9 == 0 then goto L401b64;
  #L401b60.  v4:= v9 @kind object;
  #L401b62.  goto L401b6a;
  #L401b64.  v1:= v1 + 1;
  #L401b68.  goto L401b48;
  #L401b6a.  if v4 == 0 then goto L401b9e;
  #L401b6e.  v9:= new `java.lang.StringBuilder`;
  #L401b72.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L401b78.  v0:= "!" @kind object;
  #L401b7c.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L401b82.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L401b88.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L401b8e.  v9:= temp @kind object;
  #L401b90.  v0:= "\\." @kind object;
  #L401b94.  call temp:= `split`(v9, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L401b9a.  v9:= temp @kind object;
  #L401b9c.  return v9 @kind object;
  #L401b9e.  if v5 != 0 then goto L401bac;
  #L401ba2.  if v7 != 0 then goto L401bac;
  #L401ba6.  v9:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.g` @type ^`java.lang.String`[] @kind object;
  #L401baa.  return v9 @kind object;
  #L401bac.  if v5 == 0 then goto L401bbe;
  #L401bb0.  v9:= "\\." @kind object;
  #L401bb4.  call temp:= `split`(v5, v9) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L401bba.  v9:= temp @kind object;
  #L401bbc.  goto L401bc2;
  #L401bbe.  v9:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @type ^`java.lang.String`[] @kind object;
  #L401bc2.  if v7 == 0 then goto L401bd4;
  #L401bc6.  v0:= "\\." @kind object;
  #L401bca.  call temp:= `split`(v7, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L401bd0.  v0:= temp @kind object;
  #L401bd2.  goto L401bd8;
  #L401bd4.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @type ^`java.lang.String`[] @kind object;
  #L401bd8.  v1:= length @variable v9;
  #L401bda.  v2:= length @variable v0;
  #L401bdc.  if v1 <= v2 then goto L401be2;
  #L401be0.  goto L401be4;
  #L401be2.  v9:= v0 @kind object;
  #L401be4.  return v9 @kind object;
  #L401be6.  v9:= new `java.lang.IllegalStateException`;
  #L401bea.  v0:= "Unable to load publicsuffixes.gz resource from the classpath." @kind object;
  #L401bee.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L401bf4.  throw v9;
  #L401bf6.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L401bf8.  @monitorexit v8
  #L401bfa.  throw v9;
  catch `java.lang.InterruptedException` @[L401a98..L401aa2] goto L401aa4;
  catch `java.lang.Throwable` @[L401ab4..L401abe] goto L401bf6;
  catch `java.lang.Throwable` @[L401be6..L401bfa] goto L401bf6;
}
procedure `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `c`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.c:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L401c2c.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.h` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L401c30.  return v0 @kind object;
}
procedure `void` `e`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v3 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L401cc8.  v0:= constclass @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L401ccc.  v1:= "publicsuffixes.gz" @kind object;
  #L401cd0.  call temp:= `getResourceAsStream`(v0, v1) @signature `Ljava/lang/Class;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L401cd6.  v0:= temp @kind object;
  #L401cd8.  if v0 != 0 then goto L401cde;
  #L401cdc.  return @kind void;
  #L401cde.  v1:= new `qc.j`;
  #L401ce2.  call temp:= `g`(v0) @signature `Lqc/l;.g:(Ljava/io/InputStream;)Lqc/s;` @kind static;
  #L401ce8.  v0:= temp @kind object;
  #L401cea.  call `<init>`(v1, v0) @signature `Lqc/j;.<init>:(Lqc/s;)V` @kind direct;
  #L401cf0.  call temp:= `b`(v1) @signature `Lqc/l;.b:(Lqc/s;)Lqc/e;` @kind static;
  #L401cf6.  v0:= temp @kind object;
  #L401cf8.  call temp:= `readInt`(v0) @signature `Lqc/e;.readInt:()I` @kind interface;
  #L401cfe.  v1:= temp;
  #L401d00.  v1:= new `byte`[v1];
  #L401d04.  call `readFully`(v0, v1) @signature `Lqc/e;.readFully:([B)V` @kind interface;
  #L401d0a.  call temp:= `readInt`(v0) @signature `Lqc/e;.readInt:()I` @kind interface;
  #L401d10.  v2:= temp;
  #L401d12.  v2:= new `byte`[v2];
  #L401d16.  call `readFully`(v0, v2) @signature `Lqc/e;.readFully:([B)V` @kind interface;
  #L401d1c.  call `e`(v0) @signature `Lhc/c;.e:(Ljava/io/Closeable;)V` @kind static;
  #L401d22.  @monitorenter v3
  #L401d24.  v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] := v1 @kind object;
  #L401d28.  v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.d` @type ^`byte`[] := v2 @kind object;
  #L401d2c.  @monitorexit v3
  #L401d2e.  v0:= v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L401d32.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L401d38.  return @kind void;
  #L401d3a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L401d3c.  @monitorexit v3
  #L401d3e.  throw v0;
  #L401d40.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L401d42.  call `e`(v0) @signature `Lhc/c;.e:(Ljava/io/Closeable;)V` @kind static;
  #L401d48.  throw v1;
  catch `java.lang.Throwable` @[L401cf8..L401d1c] goto L401d40;
  catch `java.lang.Throwable` @[L401d24..L401d2e] goto L401d3a;
  catch `java.lang.Throwable` @[L401d3c..L401d3e] goto L401d3a;
}
procedure `void` `f`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v5 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L401d7c.  v0:= 0I;
  #L401d7e.  call `e`(v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.e:()V` @kind direct;
  #L401d84.  if v0 == 0 then goto L401d96;
  #L401d88.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L401d8e.  v0:= temp @kind object;
  #L401d90.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L401d96.  return @kind void;
  #L401d98.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L401d9a.  goto L401dd0;
  #L401d9c.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L401d9e.  call temp:= `l`() @signature `Lnc/g;.l:()Lnc/g;` @kind static;
  #L401da4.  v2:= temp @kind object;
  #L401da6.  v3:= 5I;
  #L401da8.  v4:= "Failed to read public suffix list" @kind object;
  #L401dac.  call `s`(v2, v3, v4, v1) @signature `Lnc/g;.s:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L401db2.  if v0 == 0 then goto L401dc4;
  #L401db6.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L401dbc.  v0:= temp @kind object;
  #L401dbe.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L401dc4.  return @kind void;
  #L401dc6.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L401dcc.  v0:= 1I;
  #L401dce.  goto L401d7e;
  #L401dd0.  if v0 == 0 then goto L401de2;
  #L401dd4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L401dda.  v0:= temp @kind object;
  #L401ddc.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L401de2.  throw v1;
  catch `java.io.InterruptedIOException` @[L401d7e..L401d84] goto L401dc6;
  catch `java.io.IOException` @[L401d7e..L401d84] goto L401d9c;
  catch `java.lang.Throwable` @[L401d7e..L401d84] goto L401d98;
  catch `java.lang.Throwable` @[L401d9e..L401db2] goto L401d98;
  catch `java.lang.Throwable` @[L401dc6..L401dcc] goto L401d98;
}
procedure `java.lang.String` `d`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.d:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4019a8.  v0:= "domain == null" @kind object;
  #L4019ac.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4019b2.  call temp:= `toUnicode`(v8) @signature `Ljava/net/IDN;.toUnicode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4019b8.  v0:= temp @kind object;
  #L4019ba.  v1:= "\\." @kind object;
  #L4019be.  call temp:= `split`(v0, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L4019c4.  v0:= temp @kind object;
  #L4019c6.  call temp:= `b`(v7, v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.b:([Ljava/lang/String;)[Ljava/lang/String;` @kind direct;
  #L4019cc.  v2:= temp @kind object;
  #L4019ce.  v3:= length @variable v0;
  #L4019d0.  v4:= length @variable v2;
  #L4019d2.  v5:= 33I;
  #L4019d6.  v6:= 0I;
  #L4019d8.  if v3 != v4 then goto L4019f0;
  #L4019dc.  v3:= v2[v6] @kind object;
  #L4019e0.  call temp:= `charAt`(v3, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4019e6.  v3:= temp;
  #L4019e8.  if v3 == v5 then goto L4019f0;
  #L4019ec.  v8:= 0I;
  #L4019ee.  return v8 @kind object;
  #L4019f0.  v3:= v2[v6] @kind object;
  #L4019f4.  call temp:= `charAt`(v3, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4019fa.  v3:= temp;
  #L4019fc.  v0:= length @variable v0;
  #L4019fe.  v2:= length @variable v2;
  #L401a00.  if v3 != v5 then goto L401a06;
  #L401a04.  goto L401a0a;
  #L401a06.  v2:= v2 + 1;
  #L401a0a.  v0:= v0 - v2 @kind int;
  #L401a0c.  v2:= new `java.lang.StringBuilder`;
  #L401a10.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L401a16.  call temp:= `split`(v8, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L401a1c.  v8:= temp @kind object;
  #L401a1e.  v1:= length @variable v8;
  #L401a20.  if v0 >= v1 then goto L401a3e;
  #L401a24.  v1:= v8[v0] @kind object;
  #L401a28.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L401a2e.  v1:= 46I;
  #L401a32.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L401a38.  v0:= v0 + 1;
  #L401a3c.  goto L401a1e;
  #L401a3e.  call temp:= `length`(v2) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L401a44.  v8:= temp;
  #L401a46.  v8:= v8 + -1;
  #L401a4a.  call temp:= `deleteCharAt`(v2, v8) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L401a50.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L401a56.  v8:= temp @kind object;
  #L401a58.  return v8 @kind object;
}
