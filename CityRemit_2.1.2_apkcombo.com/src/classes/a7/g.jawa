record `a7.g` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `a7.g.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `a7.g.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a7.g` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `La7/g;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L160288.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16028e.  v0.`a7.g.a` @type ^`java.lang.Object` := v1 @kind object;
  #L160292.  v0.`a7.g.b` @type ^`java.lang.Object` := v2 @kind object;
  #L160296.  return @kind void;
}
procedure `java.lang.Object` `a`(`a7.g` v1 @kind this) @signature `La7/g;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L160200.  v0:= v1.`a7.g.a` @type ^`java.lang.Object` @kind object;
  #L160204.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`a7.g` v1 @kind this) @signature `La7/g;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L160218.  v0:= v1.`a7.g.b` @type ^`java.lang.Object` @kind object;
  #L16021c.  return v0 @kind object;
}
procedure `boolean` `equals`(`a7.g` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `La7/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L160144.  v0:= 1I;
  #L160146.  if v4 != v5 then goto L16014c;
  #L16014a.  return v0;
  #L16014c.  v1:= 0I;
  #L16014e.  if v5 == 0 then goto L1601ae;
  #L160152.  v2:= constclass @type ^`a7.g` @kind object;
  #L160156.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L16015c.  v3:= temp @kind object;
  #L16015e.  if v2 == v3 then goto L160164;
  #L160162.  goto L1601ae;
  #L160164.  v5:= (`a7.g`) v5 @kind object;
  #L160168.  v2:= v4.`a7.g.a` @type ^`java.lang.Object` @kind object;
  #L16016c.  if v2 == 0 then goto L160182;
  #L160170.  v3:= v5.`a7.g.a` @type ^`java.lang.Object` @kind object;
  #L160174.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L16017a.  v2:= temp;
  #L16017c.  if v2 != 0 then goto L16018c;
  #L160180.  goto L16018a;
  #L160182.  v2:= v5.`a7.g.a` @type ^`java.lang.Object` @kind object;
  #L160186.  if v2 == 0 then goto L16018c;
  #L16018a.  return v1;
  #L16018c.  v2:= v4.`a7.g.b` @type ^`java.lang.Object` @kind object;
  #L160190.  v5:= v5.`a7.g.b` @type ^`java.lang.Object` @kind object;
  #L160194.  if v2 == 0 then goto L1601a6;
  #L160198.  call temp:= `equals`(v2, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L16019e.  v5:= temp;
  #L1601a0.  if v5 != 0 then goto L1601ac;
  #L1601a4.  goto L1601aa;
  #L1601a6.  if v5 == 0 then goto L1601ac;
  #L1601aa.  return v1;
  #L1601ac.  return v0;
  #L1601ae.  return v1;
}
procedure `int` `hashCode`(`a7.g` v3 @kind this) @signature `La7/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1601c0.  v0:= v3.`a7.g.a` @type ^`java.lang.Object` @kind object;
  #L1601c4.  v1:= 0I;
  #L1601c6.  if v0 == 0 then goto L1601d4;
  #L1601ca.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1601d0.  v0:= temp;
  #L1601d2.  goto L1601d6;
  #L1601d4.  v0:= 0I;
  #L1601d6.  v0:= v0 * 31;
  #L1601da.  v2:= v3.`a7.g.b` @type ^`java.lang.Object` @kind object;
  #L1601de.  if v2 == 0 then goto L1601ea;
  #L1601e2.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1601e8.  v1:= temp;
  #L1601ea.  v0:= v0 + v1 @kind int;
  #L1601ec.  return v0;
}
procedure `java.lang.String` `toString`(`a7.g` v2 @kind this) @signature `La7/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L160230.  v0:= new `java.lang.StringBuilder`;
  #L160234.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16023a.  v1:= "Pair(" @kind object;
  #L16023e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L160244.  v1:= v2.`a7.g.a` @type ^`java.lang.Object` @kind object;
  #L160248.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16024e.  v1:= "," @kind object;
  #L160252.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L160258.  v1:= v2.`a7.g.b` @type ^`java.lang.Object` @kind object;
  #L16025c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L160262.  v1:= ")" @kind object;
  #L160266.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16026c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L160272.  v0:= temp @kind object;
  #L160274.  return v0 @kind object;
}
