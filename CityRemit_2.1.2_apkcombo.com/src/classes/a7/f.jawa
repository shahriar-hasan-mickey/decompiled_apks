record `a7.f` @kind class @AccessFlag PUBLIC extends `a7.a` @kind interface {
  `a7.a` `a7.f.a` @AccessFlag PRIVATE_FINAL;
  `long` `a7.f.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a7.f` v2 @kind this, `a7.a` v3 @kind object, `long` v4 ) @signature `La7/f;.<init>:(La7/a;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L160104.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16010a.  v0:= 0L;
  #L16010e.  v2.`a7.f.b` @type ^`long` := v0 @kind wide;
  #L160112.  v2.`a7.f.a` @type ^`a7.a` := v3 @kind object;
  #L160116.  v2.`a7.f.b` @type ^`long` := v4 @kind wide;
  #L16011a.  return @kind void;
}
procedure `long` `a`(`a7.f` v4 @kind this) @signature `La7/f;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1600e0.  v0:= v4.`a7.f.a` @type ^`a7.a` @kind object;
  #L1600e4.  call temp:= `a`(v0) @signature `La7/a;.a:()J` @kind interface;
  #L1600ea.  v0:= temp @kind wide;
  #L1600ec.  v2:= v4.`a7.f.b` @type ^`long` @kind wide;
  #L1600f0.  v0:= v0 + v2 @kind long;
  #L1600f2.  return v0 @kind wide;
}
procedure `void` `b`(`a7.f` v0 @kind this, `long` v1 ) @signature `La7/f;.b:(J)V` @AccessFlag PUBLIC {
    temp;

  #L16012c.  v0.`a7.f.b` @type ^`long` := v1 @kind wide;
  #L160130.  return @kind void;
}
