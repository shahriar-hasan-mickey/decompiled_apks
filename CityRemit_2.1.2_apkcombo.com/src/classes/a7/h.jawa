record `a7.h` @kind class @AccessFlag PUBLIC_FINAL {
  `x6.q` `a7.h.a` @AccessFlag PUBLIC;
  `x6.l` `a7.h.b` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`a7.h` v0 @kind this) @signature `La7/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L160338.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16033e.  return @kind void;
}
procedure `boolean` `equals`(`a7.h` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La7/h;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1602a8.  if v3 != v4 then goto L1602b0;
  #L1602ac.  v4:= 1I;
  #L1602ae.  return v4;
  #L1602b0.  v0:= 0I;
  #L1602b2.  if v4 == 0 then goto L1602f4;
  #L1602b6.  v1:= constclass @type ^`a7.h` @kind object;
  #L1602ba.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1602c0.  v2:= temp @kind object;
  #L1602c2.  if v1 == v2 then goto L1602c8;
  #L1602c6.  goto L1602f4;
  #L1602c8.  v4:= (`a7.h`) v4 @kind object;
  #L1602cc.  v1:= v3.`a7.h.a` @type ^`x6.q` @kind object;
  #L1602d0.  v2:= v4.`a7.h.a` @type ^`x6.q` @kind object;
  #L1602d4.  call temp:= `equals`(v1, v2) @signature `Lx6/q;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1602da.  v1:= temp;
  #L1602dc.  if v1 != 0 then goto L1602e2;
  #L1602e0.  return v0;
  #L1602e2.  v0:= v3.`a7.h.b` @type ^`x6.l` @kind object;
  #L1602e6.  v4:= v4.`a7.h.b` @type ^`x6.l` @kind object;
  #L1602ea.  call temp:= `equals`(v0, v4) @signature `Lx6/l;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1602f0.  v4:= temp;
  #L1602f2.  return v4;
  #L1602f4.  return v0;
}
procedure `int` `hashCode`(`a7.h` v2 @kind this) @signature `La7/h;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L160308.  v0:= v2.`a7.h.a` @type ^`x6.q` @kind object;
  #L16030c.  call temp:= `hashCode`(v0) @signature `Lx6/q;.hashCode:()I` @kind virtual;
  #L160312.  v0:= temp;
  #L160314.  v0:= v0 * 31;
  #L160318.  v1:= v2.`a7.h.b` @type ^`x6.l` @kind object;
  #L16031c.  call temp:= `hashCode`(v1) @signature `Lx6/l;.hashCode:()I` @kind virtual;
  #L160322.  v1:= temp;
  #L160324.  v0:= v0 + v1 @kind int;
  #L160326.  return v0;
}
