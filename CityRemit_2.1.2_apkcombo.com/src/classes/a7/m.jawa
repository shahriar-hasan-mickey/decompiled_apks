record `a7.m` @kind class @AccessFlag PUBLIC {
}
global `char`[] `@@a7.m.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La7/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1610ac.  v0:= "0123456789abcdef" @kind object;
  #L1610b0.  call temp:= `toCharArray`(v0) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L1610b6.  v0:= temp @kind object;
  #L1610b8.  `@@a7.m.a` @type ^`char`[] := v0 @kind object;
  #L1610bc.  return @kind void;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `La7/m;.a:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L160db8.  if v0 >= v1 then goto L160dc0;
  #L160dbc.  v0:= -1I;
  #L160dbe.  return v0;
  #L160dc0.  if v0 != v1 then goto L160dc8;
  #L160dc4.  v0:= 0I;
  #L160dc6.  return v0;
  #L160dc8.  v0:= 1I;
  #L160dca.  return v0;
}
procedure `int` `b`(`long` v1 , `long` v3 ) @signature `La7/m;.b:(JJ)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L160ddc.  v0:= lcmp(v1, v3);
  #L160de0.  if v0 >= 0 then goto L160de8;
  #L160de4.  v1:= -1I;
  #L160de6.  return v1;
  #L160de8.  if v0 != 0 then goto L160df0;
  #L160dec.  v1:= 0I;
  #L160dee.  return v1;
  #L160df0.  v1:= 1I;
  #L160df2.  return v1;
}
procedure `java.lang.String` `c`(`double` v6 ) @signature `La7/m;.c:(D)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L160ed0.  v0:= new `java.lang.StringBuilder`;
  #L160ed4.  v1:= 16I;
  #L160ed8.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L160ede.  call temp:= `doubleToLongBits`(v6) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L160ee4.  v6:= temp @kind wide;
  #L160ee6.  v1:= 7I;
  #L160ee8.  if v1 < 0 then goto L160f26;
  #L160eec.  v2:= v1 * 8;
  #L160ef0.  v2:= v6 ^>> v2 @kind long;
  #L160ef4.  v4:= 255L;
  #L160ef8.  v2:= v2 ^& v4 @kind long;
  #L160efa.  v3:= (`int`) v2 @kind l2i;
  #L160efc.  v2:= v3 ^> 4;
  #L160f00.  v2:= v2 ^& 15;
  #L160f04.  v3:= v3 ^& 15;
  #L160f08.  v4:= `@@a7.m.a` @type ^`char`[] @kind object;
  #L160f0c.  v2:= v4[v2] @kind char;
  #L160f10.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L160f16.  v2:= v4[v3] @kind char;
  #L160f1a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L160f20.  v1:= v1 + -1;
  #L160f24.  goto L160ee8;
  #L160f26.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L160f2c.  v6:= temp @kind object;
  #L160f2e.  return v6 @kind object;
}
procedure `boolean` `d`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `La7/m;.d:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L160d88.  if v0 != v1 then goto L160d90;
  #L160d8c.  v0:= 1I;
  #L160d8e.  return v0;
  #L160d90.  if v0 == 0 then goto L160da4;
  #L160d94.  if v1 != 0 then goto L160d9a;
  #L160d98.  goto L160da4;
  #L160d9a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L160da0.  v0:= temp;
  #L160da2.  return v0;
  #L160da4.  v0:= 0I;
  #L160da6.  return v0;
}
procedure `java.lang.String` `e`(`java.lang.String` v3 @kind object) @signature `La7/m;.e:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L160f40.  v0:= "//" @kind object;
  #L160f44.  call temp:= `indexOf`(v3, v0) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L160f4a.  v0:= temp;
  #L160f4c.  v1:= -1I;
  #L160f4e.  if v0 == v1 then goto L160f9c;
  #L160f52.  v0:= v0 + 2;
  #L160f56.  call temp:= `substring`(v3, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L160f5c.  v3:= temp @kind object;
  #L160f5e.  v0:= "/" @kind object;
  #L160f62.  call temp:= `indexOf`(v3, v0) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L160f68.  v0:= temp;
  #L160f6a.  if v0 == v1 then goto L160f96;
  #L160f6e.  v2:= "?" @kind object;
  #L160f72.  call temp:= `indexOf`(v3, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L160f78.  v2:= temp;
  #L160f7a.  v0:= v0 + 1;
  #L160f7e.  if v2 == v1 then goto L160f8c;
  #L160f82.  call temp:= `substring`(v3, v0, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L160f88.  v3:= temp @kind object;
  #L160f8a.  return v3 @kind object;
  #L160f8c.  call temp:= `substring`(v3, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L160f92.  v3:= temp @kind object;
  #L160f94.  return v3 @kind object;
  #L160f96.  v3:= "" @kind object;
  #L160f9a.  return v3 @kind object;
  #L160f9c.  v3:= new `s6.c`;
  #L160fa0.  v0:= "Firebase Database URL is missing URL scheme" @kind object;
  #L160fa4.  call `<init>`(v3, v0) @signature `Ls6/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L160faa.  throw v3;
}
procedure `void` `f`(`boolean` v1 ) @signature `La7/m;.f:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1610d0.  v0:= "" @kind object;
  #L1610d4.  call `g`(v1, v0) @signature `La7/m;.g:(ZLjava/lang/String;)V` @kind static;
  #L1610da.  return @kind void;
}
procedure `void` `g`(`boolean` v1 , `java.lang.String` v2 @kind object) @signature `La7/m;.g:(ZLjava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1610ec.  if v1 != 0 then goto L16111c;
  #L1610f0.  v1:= new `java.lang.StringBuilder`;
  #L1610f4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1610fa.  v0:= "Assertion failed: " @kind object;
  #L1610fe.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L161104.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16110a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L161110.  v1:= temp @kind object;
  #L161112.  v2:= "FirebaseDatabase" @kind object;
  #L161116.  call temp:= `w`(v2, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L16111c.  return @kind void;
}
procedure `a7.h` `h`(`java.lang.String` v8 @kind object) @signature `La7/m;.h:(Ljava/lang/String;)La7/h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L160c04.  call temp:= `parse`(v8) @signature `Landroid/net/Uri;.parse:(Ljava/lang/String;)Landroid/net/Uri;` @kind static;
  #L160c0a.  v0:= temp @kind object;
  #L160c0c.  call temp:= `getScheme`(v0) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L160c12.  v1:= temp @kind object;
  #L160c14.  if v1 == 0 then goto L160d28;
  #L160c18.  call temp:= `getHost`(v0) @signature `Landroid/net/Uri;.getHost:()Ljava/lang/String;` @kind virtual;
  #L160c1e.  v2:= temp @kind object;
  #L160c20.  if v2 == 0 then goto L160d18;
  #L160c24.  v3:= "ns" @kind object;
  #L160c28.  call temp:= `getQueryParameter`(v0, v3) @signature `Landroid/net/Uri;.getQueryParameter:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L160c2e.  v3:= temp @kind object;
  #L160c30.  v4:= 0I;
  #L160c32.  v5:= -1I;
  #L160c34.  if v3 != 0 then goto L160c54;
  #L160c38.  v3:= "\\." @kind object;
  #L160c3c.  call temp:= `split`(v2, v3, v5) @signature `Ljava/lang/String;.split:(Ljava/lang/String;I)[Ljava/lang/String;` @kind virtual;
  #L160c42.  v3:= temp @kind object;
  #L160c44.  v3:= v3[v4] @kind object;
  #L160c48.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L160c4c.  call temp:= `toLowerCase`(v3, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L160c52.  v3:= temp @kind object;
  #L160c54.  v6:= new `x6.q`;
  #L160c58.  call `<init>`(v6) @signature `Lx6/q;.<init>:()V` @kind direct;
  #L160c5e.  v7:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L160c62.  call temp:= `toLowerCase`(v2, v7) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L160c68.  v2:= temp @kind object;
  #L160c6a.  v6.`x6.q.a` @type ^`java.lang.String` := v2 @kind object;
  #L160c6e.  call temp:= `getPort`(v0) @signature `Landroid/net/Uri;.getPort:()I` @kind virtual;
  #L160c74.  v0:= temp;
  #L160c76.  v2:= 1I;
  #L160c78.  if v0 == v5 then goto L160cd4;
  #L160c7c.  v5:= "https" @kind object;
  #L160c80.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L160c86.  v5:= temp;
  #L160c88.  if v5 != 0 then goto L160c9c;
  #L160c8c.  v5:= "wss" @kind object;
  #L160c90.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L160c96.  v1:= temp;
  #L160c98.  if v1 == 0 then goto L160c9e;
  #L160c9c.  v4:= 1I;
  #L160c9e.  v6.`x6.q.b` @type ^`boolean` := v4 @kind boolean;
  #L160ca2.  v1:= new `java.lang.StringBuilder`;
  #L160ca6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L160cac.  v2:= v6.`x6.q.a` @type ^`java.lang.String` @kind object;
  #L160cb0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L160cb6.  v2:= ":" @kind object;
  #L160cba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L160cc0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L160cc6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L160ccc.  v0:= temp @kind object;
  #L160cce.  v6.`x6.q.a` @type ^`java.lang.String` := v0 @kind object;
  #L160cd2.  goto L160cd8;
  #L160cd4.  v6.`x6.q.b` @type ^`boolean` := v2 @kind boolean;
  #L160cd8.  v6.`x6.q.c` @type ^`java.lang.String` := v3 @kind object;
  #L160cdc.  call temp:= `e`(v8) @signature `La7/m;.e:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L160ce2.  v0:= temp @kind object;
  #L160ce4.  v1:= "+" @kind object;
  #L160ce8.  v2:= " " @kind object;
  #L160cec.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L160cf2.  v0:= temp @kind object;
  #L160cf4.  call `i`(v0) @signature `La7/n;.i:(Ljava/lang/String;)V` @kind static;
  #L160cfa.  v1:= new `a7.h`;
  #L160cfe.  call `<init>`(v1) @signature `La7/h;.<init>:()V` @kind direct;
  #L160d04.  v2:= new `x6.l`;
  #L160d08.  call `<init>`(v2, v0) @signature `Lx6/l;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L160d0e.  v1.`a7.h.b` @type ^`x6.l` := v2 @kind object;
  #L160d12.  v1.`a7.h.a` @type ^`x6.q` := v6 @kind object;
  #L160d16.  return v1 @kind object;
  #L160d18.  v0:= new `java.lang.IllegalArgumentException`;
  #L160d1c.  v1:= "Database URL does not specify a valid host" @kind object;
  #L160d20.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L160d26.  throw v0;
  #L160d28.  v0:= new `java.lang.IllegalArgumentException`;
  #L160d2c.  v1:= "Database URL does not specify a URL scheme" @kind object;
  #L160d30.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L160d36.  throw v0;
  #L160d38.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L160d3a.  v1:= new `s6.c`;
  #L160d3e.  v2:= new `java.lang.StringBuilder`;
  #L160d42.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L160d48.  v3:= "Invalid Firebase Database url specified: " @kind object;
  #L160d4c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L160d52.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L160d58.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L160d5e.  v8:= temp @kind object;
  #L160d60.  call `<init>`(v1, v8, v0) @signature `Ls6/c;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L160d66.  throw v1;
  catch `java.lang.Exception` @[L160c04..L160d38] goto L160d38;
}
procedure `java.lang.String` `i`(`java.lang.String` v2 @kind object) @signature `La7/m;.i:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L160fbc.  v0:= "SHA-1" @kind object;
  #L160fc0.  call temp:= `getInstance`(v0) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L160fc6.  v0:= temp @kind object;
  #L160fc8.  v1:= "UTF-8" @kind object;
  #L160fcc.  call temp:= `getBytes`(v2, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L160fd2.  v2:= temp @kind object;
  #L160fd4.  call `update`(v0, v2) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L160fda.  call temp:= `digest`(v0) @signature `Ljava/security/MessageDigest;.digest:()[B` @kind virtual;
  #L160fe0.  v2:= temp @kind object;
  #L160fe2.  v0:= 2I;
  #L160fe4.  call temp:= `encodeToString`(v2, v0) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L160fea.  v2:= temp @kind object;
  #L160fec.  return v2 @kind object;
  #L160fee.  v2:= new `java.lang.RuntimeException`;
  #L160ff2.  v0:= "UTF-8 encoding is required for Firebase Database to run!" @kind object;
  #L160ff6.  call `<init>`(v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L160ffc.  throw v2;
  #L160ffe.  v2:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L161000.  v0:= new `java.lang.RuntimeException`;
  #L161004.  v1:= "Missing SHA-1 MessageDigest provider." @kind object;
  #L161008.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L16100e.  throw v0;
  catch `java.security.NoSuchAlgorithmException` @[L160fbc..L160fec] goto L160ffe;
  catch `java.io.UnsupportedEncodingException` @[L160fbc..L160fec] goto L160fee;
}
procedure `java.lang.String` `j`(`java.lang.String` v3 @kind object) @signature `La7/m;.j:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L161030.  v0:= 92I;
  #L161034.  call temp:= `indexOf`(v3, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L16103a.  v0:= temp;
  #L16103c.  v1:= -1I;
  #L16103e.  if v0 == v1 then goto L161054;
  #L161042.  v0:= "\\" @kind object;
  #L161046.  v2:= "\\\\" @kind object;
  #L16104a.  call temp:= `replace`(v3, v0, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L161050.  v0:= temp @kind object;
  #L161052.  goto L161056;
  #L161054.  v0:= v3 @kind object;
  #L161056.  v2:= 34I;
  #L16105a.  call temp:= `indexOf`(v3, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L161060.  v3:= temp;
  #L161062.  if v3 == v1 then goto L161076;
  #L161066.  v3:= "\"" @kind object;
  #L16106a.  v1:= "\\\"" @kind object;
  #L16106e.  call temp:= `replace`(v0, v3, v1) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L161074.  v0:= temp @kind object;
  #L161076.  v3:= new `java.lang.StringBuilder`;
  #L16107a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L161080.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L161086.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16108c.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L161092.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L161098.  v3:= temp @kind object;
  #L16109a.  return v3 @kind object;
}
procedure `java.lang.Integer` `k`(`java.lang.String` v8 @kind object) @signature `La7/m;.k:(Ljava/lang/String;)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L160e04.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L160e0a.  v0:= temp;
  #L160e0c.  v1:= 0I;
  #L160e0e.  v2:= 11I;
  #L160e12.  if v0 > v2 then goto L160ebe;
  #L160e16.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L160e1c.  v0:= temp;
  #L160e1e.  if v0 != 0 then goto L160e24;
  #L160e22.  goto L160ebe;
  #L160e24.  v0:= 0I;
  #L160e26.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L160e2c.  v2:= temp;
  #L160e2e.  v3:= 45I;
  #L160e32.  v4:= 1I;
  #L160e34.  if v2 != v3 then goto L160e4a;
  #L160e38.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L160e3e.  v0:= temp;
  #L160e40.  if v0 != v4 then goto L160e46;
  #L160e44.  return v1 @kind object;
  #L160e46.  v0:= 1I;
  #L160e48.  goto L160e4c;
  #L160e4a.  v4:= 0I;
  #L160e4c.  v2:= 0L;
  #L160e50.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L160e56.  v5:= temp;
  #L160e58.  if v0 >= v5 then goto L160e8e;
  #L160e5c.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L160e62.  v5:= temp;
  #L160e64.  v6:= 48I;
  #L160e68.  if v5 < v6 then goto L160e8c;
  #L160e6c.  v6:= 57I;
  #L160e70.  if v5 <= v6 then goto L160e76;
  #L160e74.  goto L160e8c;
  #L160e76.  v6:= 10L;
  #L160e7a.  v2:= v2 * v6 @kind long;
  #L160e7e.  v5:= v5 + -48;
  #L160e82.  v5:= (`long`) v5 @kind i2l;
  #L160e84.  v2:= v2 + v5 @kind long;
  #L160e86.  v0:= v0 + 1;
  #L160e8a.  goto L160e50;
  #L160e8c.  return v1 @kind object;
  #L160e8e.  if v4 == 0 then goto L160eb0;
  #L160e92.  v2:= -v2 @kind long;
  #L160e94.  v4:= -2147483648L;
  #L160e9a.  v8:= lcmp(v2, v4);
  #L160e9e.  if v8 >= 0 then goto L160ea4;
  #L160ea2.  return v1 @kind object;
  #L160ea4.  v8:= (`int`) v2 @kind l2i;
  #L160ea6.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L160eac.  v8:= temp @kind object;
  #L160eae.  return v8 @kind object;
  #L160eb0.  v4:= 2147483647L;
  #L160eb6.  v8:= lcmp(v2, v4);
  #L160eba.  if v8 <= 0 then goto L160ea4;
  #L160ebe.  return v1 @kind object;
}
procedure `a7.g` `l`(`com.google.firebase.database.b$e` v2 @kind object) @signature `La7/m;.l:(Lcom/google/firebase/database/b$e;)La7/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L160bb8.  if v2 != 0 then goto L160be4;
  #L160bbc.  v2:= new `a5.m`;
  #L160bc0.  call `<init>`(v2) @signature `La5/m;.<init>:()V` @kind direct;
  #L160bc6.  v0:= new `a7.m$a`;
  #L160bca.  call `<init>`(v0, v2) @signature `La7/m$a;.<init>:(La5/m;)V` @kind direct;
  #L160bd0.  v1:= new `a7.g`;
  #L160bd4.  call temp:= `a`(v2) @signature `La5/m;.a:()La5/l;` @kind virtual;
  #L160bda.  v2:= temp @kind object;
  #L160bdc.  call `<init>`(v1, v2, v0) @signature `La7/g;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L160be2.  return v1 @kind object;
  #L160be4.  v0:= new `a7.g`;
  #L160be8.  v1:= 0I;
  #L160bea.  call `<init>`(v0, v1, v2) @signature `La7/g;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L160bf0.  return v0 @kind object;
}
