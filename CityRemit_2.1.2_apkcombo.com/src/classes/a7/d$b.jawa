record `a7.d$b` @kind class @AccessFlag  extends `a7.d$c` @kind interface {
  `java.util.List` `a7.d$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a7.d$b` v0 @kind this, `a7.d` v1 @kind object, `java.util.List` v2 @kind object) @signature `La7/d$b;.<init>:(La7/d;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L15f614.  v0.`a7.d$b.a` @type ^`java.util.List` := v2 @kind object;
  #L15f618.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15f61e.  return @kind void;
}
procedure `java.lang.Object` `a`(`a7.d$b` v0 @kind this, `x6.l` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `La7/d$b;.a:(Lx6/l;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L15f5cc.  v3:= (`java.lang.Void`) v3 @kind object;
  #L15f5d0.  call temp:= `b`(v0, v1, v2, v3) @signature `La7/d$b;.b:(Lx6/l;Ljava/lang/Object;Ljava/lang/Void;)Ljava/lang/Void;` @kind virtual;
  #L15f5d6.  v1:= temp @kind object;
  #L15f5d8.  return v1 @kind object;
}
procedure `java.lang.Void` `b`(`a7.d$b` v1 @kind this, `x6.l` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Void` v4 @kind object) @signature `La7/d$b;.b:(Lx6/l;Ljava/lang/Object;Ljava/lang/Void;)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15f5ec.  v4:= v1.`a7.d$b.a` @type ^`java.util.List` @kind object;
  #L15f5f0.  v0:= new `java.util.AbstractMap$SimpleImmutableEntry`;
  #L15f5f4.  call `<init>`(v0, v2, v3) @signature `Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L15f5fa.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15f600.  v2:= 0I;
  #L15f602.  return v2 @kind object;
}
