record `a7.d` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Iterable` @kind interface {
  `java.lang.Object` `a7.d.o` @AccessFlag PRIVATE_FINAL;
  `u6.c` `a7.d.p` @AccessFlag PRIVATE_FINAL;
}
global `u6.c` `@@a7.d.q` @AccessFlag PRIVATE_STATIC_FINAL;
global `a7.d` `@@a7.d.r` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La7/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L15fd38.  v0:= constclass @type ^`f7.b` @kind object;
  #L15fd3c.  call temp:= `b`(v0) @signature `Lu6/l;.b:(Ljava/lang/Class;)Lu6/l;` @kind static;
  #L15fd42.  v0:= temp @kind object;
  #L15fd44.  call temp:= `c`(v0) @signature `Lu6/c$a;.c:(Ljava/util/Comparator;)Lu6/c;` @kind static;
  #L15fd4a.  v0:= temp @kind object;
  #L15fd4c.  `@@a7.d.q` @type ^`u6.c` := v0 @kind object;
  #L15fd50.  v1:= new `a7.d`;
  #L15fd54.  v2:= 0I;
  #L15fd56.  call `<init>`(v1, v2, v0) @signature `La7/d;.<init>:(Ljava/lang/Object;Lu6/c;)V` @kind direct;
  #L15fd5c.  `@@a7.d.r` @type ^`a7.d` := v1 @kind object;
  #L15fd60.  return @kind void;
}
procedure `void` `<init>`(`a7.d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `La7/d;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15fd74.  v0:= `@@a7.d.q` @type ^`u6.c` @kind object;
  #L15fd78.  call `<init>`(v1, v2, v0) @signature `La7/d;.<init>:(Ljava/lang/Object;Lu6/c;)V` @kind direct;
  #L15fd7e.  return @kind void;
}
procedure `void` `<init>`(`a7.d` v0 @kind this, `java.lang.Object` v1 @kind object, `u6.c` v2 @kind object) @signature `La7/d;.<init>:(Ljava/lang/Object;Lu6/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15fd90.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15fd96.  v0.`a7.d.o` @type ^`java.lang.Object` := v1 @kind object;
  #L15fd9a.  v0.`a7.d.p` @type ^`u6.c` := v2 @kind object;
  #L15fd9e.  return @kind void;
}
procedure `a7.d` `f`() @signature `La7/d;.f:()La7/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15f630.  v0:= `@@a7.d.r` @type ^`a7.d` @kind object;
  #L15f634.  return v0 @kind object;
}
procedure `java.lang.Object` `p`(`a7.d` v3 @kind this, `x6.l` v4 @kind object, `a7.d$c` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `La7/d;.p:(Lx6/l;La7/d$c;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L15fa1c.  v0:= v3.`a7.d.p` @type ^`u6.c` @kind object;
  #L15fa20.  call temp:= `iterator`(v0) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L15fa26.  v0:= temp @kind object;
  #L15fa28.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15fa2e.  v1:= temp;
  #L15fa30.  if v1 == 0 then goto L15fa6a;
  #L15fa34.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15fa3a.  v1:= temp @kind object;
  #L15fa3c.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L15fa40.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L15fa46.  v2:= temp @kind object;
  #L15fa48.  v2:= (`a7.d`) v2 @kind object;
  #L15fa4c.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L15fa52.  v1:= temp @kind object;
  #L15fa54.  v1:= (`f7.b`) v1 @kind object;
  #L15fa58.  call temp:= `b0`(v4, v1) @signature `Lx6/l;.b0:(Lf7/b;)Lx6/l;` @kind virtual;
  #L15fa5e.  v1:= temp @kind object;
  #L15fa60.  call temp:= `p`(v2, v1, v5, v6) @signature `La7/d;.p:(Lx6/l;La7/d$c;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L15fa66.  v6:= temp @kind object;
  #L15fa68.  goto L15fa28;
  #L15fa6a.  v0:= v3.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15fa6e.  if v0 == 0 then goto L15fa7a;
  #L15fa72.  call temp:= `a`(v5, v4, v0, v6) @signature `La7/d$c;.a:(Lx6/l;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15fa78.  v6:= temp @kind object;
  #L15fa7a.  return v6 @kind object;
}
procedure `a7.d` `G`(`a7.d` v1 @kind this, `f7.b` v2 @kind object) @signature `La7/d;.G:(Lf7/b;)La7/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15f648.  v0:= v1.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f64c.  call temp:= `f`(v0, v2) @signature `Lu6/c;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15f652.  v2:= temp @kind object;
  #L15f654.  v2:= (`a7.d`) v2 @kind object;
  #L15f658.  if v2 == 0 then goto L15f65e;
  #L15f65c.  return v2 @kind object;
  #L15f65e.  call temp:= `f`() @signature `La7/d;.f:()La7/d;` @kind static;
  #L15f664.  v2:= temp @kind object;
  #L15f666.  return v2 @kind object;
}
procedure `u6.c` `N`(`a7.d` v1 @kind this) @signature `La7/d;.N:()Lu6/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15fd20.  v0:= v1.`a7.d.p` @type ^`u6.c` @kind object;
  #L15fd24.  return v0 @kind object;
}
procedure `java.lang.Object` `O`(`a7.d` v1 @kind this, `x6.l` v2 @kind object) @signature `La7/d;.O:(Lx6/l;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15faf8.  v0:= `@@a7.i.a` @type ^`a7.i` @kind object;
  #L15fafc.  call temp:= `Q`(v1, v2, v0) @signature `La7/d;.Q:(Lx6/l;La7/i;)Ljava/lang/Object;` @kind virtual;
  #L15fb02.  v2:= temp @kind object;
  #L15fb04.  return v2 @kind object;
}
procedure `java.lang.Object` `Q`(`a7.d` v3 @kind this, `x6.l` v4 @kind object, `a7.i` v5 @kind object) @signature `La7/d;.Q:(Lx6/l;La7/i;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15fb18.  v0:= v3.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15fb1c.  if v0 == 0 then goto L15fb32;
  #L15fb20.  call temp:= `a`(v5, v0) @signature `La7/i;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L15fb26.  v0:= temp;
  #L15fb28.  if v0 == 0 then goto L15fb32;
  #L15fb2c.  v0:= v3.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15fb30.  goto L15fb34;
  #L15fb32.  v0:= 0I;
  #L15fb34.  call temp:= `iterator`(v4) @signature `Lx6/l;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L15fb3a.  v4:= temp @kind object;
  #L15fb3c.  v1:= v3 @kind object;
  #L15fb3e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15fb44.  v2:= temp;
  #L15fb46.  if v2 == 0 then goto L15fb86;
  #L15fb4a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15fb50.  v2:= temp @kind object;
  #L15fb52.  v2:= (`f7.b`) v2 @kind object;
  #L15fb56.  v1:= v1.`a7.d.p` @type ^`u6.c` @kind object;
  #L15fb5a.  call temp:= `f`(v1, v2) @signature `Lu6/c;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15fb60.  v1:= temp @kind object;
  #L15fb62.  v1:= (`a7.d`) v1 @kind object;
  #L15fb66.  if v1 != 0 then goto L15fb6c;
  #L15fb6a.  return v0 @kind object;
  #L15fb6c.  v2:= v1.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15fb70.  if v2 == 0 then goto L15fb3e;
  #L15fb74.  call temp:= `a`(v5, v2) @signature `La7/i;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L15fb7a.  v2:= temp;
  #L15fb7c.  if v2 == 0 then goto L15fb3e;
  #L15fb80.  v0:= v1.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15fb84.  goto L15fb3e;
  #L15fb86.  return v0 @kind object;
}
procedure `a7.d` `S`(`a7.d` v2 @kind this, `x6.l` v3 @kind object) @signature `La7/d;.S:(Lx6/l;)La7/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15f678.  call temp:= `isEmpty`(v3) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L15f67e.  v0:= temp;
  #L15f680.  if v0 == 0 then goto L15f6b0;
  #L15f684.  v3:= v2.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f688.  call temp:= `isEmpty`(v3) @signature `Lu6/c;.isEmpty:()Z` @kind virtual;
  #L15f68e.  v3:= temp;
  #L15f690.  if v3 == 0 then goto L15f69e;
  #L15f694.  call temp:= `f`() @signature `La7/d;.f:()La7/d;` @kind static;
  #L15f69a.  v3:= temp @kind object;
  #L15f69c.  return v3 @kind object;
  #L15f69e.  v3:= new `a7.d`;
  #L15f6a2.  v0:= 0I;
  #L15f6a4.  v1:= v2.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f6a8.  call `<init>`(v3, v0, v1) @signature `La7/d;.<init>:(Ljava/lang/Object;Lu6/c;)V` @kind direct;
  #L15f6ae.  return v3 @kind object;
  #L15f6b0.  call temp:= `h0`(v3) @signature `Lx6/l;.h0:()Lf7/b;` @kind virtual;
  #L15f6b6.  v0:= temp @kind object;
  #L15f6b8.  v1:= v2.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f6bc.  call temp:= `f`(v1, v0) @signature `Lu6/c;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15f6c2.  v1:= temp @kind object;
  #L15f6c4.  v1:= (`a7.d`) v1 @kind object;
  #L15f6c8.  if v1 == 0 then goto L15f730;
  #L15f6cc.  call temp:= `k0`(v3) @signature `Lx6/l;.k0:()Lx6/l;` @kind virtual;
  #L15f6d2.  v3:= temp @kind object;
  #L15f6d4.  call temp:= `S`(v1, v3) @signature `La7/d;.S:(Lx6/l;)La7/d;` @kind virtual;
  #L15f6da.  v3:= temp @kind object;
  #L15f6dc.  call temp:= `isEmpty`(v3) @signature `La7/d;.isEmpty:()Z` @kind virtual;
  #L15f6e2.  v1:= temp;
  #L15f6e4.  if v1 == 0 then goto L15f6f6;
  #L15f6e8.  v3:= v2.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f6ec.  call temp:= `G`(v3, v0) @signature `Lu6/c;.G:(Ljava/lang/Object;)Lu6/c;` @kind virtual;
  #L15f6f2.  v3:= temp @kind object;
  #L15f6f4.  goto L15f702;
  #L15f6f6.  v1:= v2.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f6fa.  call temp:= `y`(v1, v0, v3) @signature `Lu6/c;.y:(Ljava/lang/Object;Ljava/lang/Object;)Lu6/c;` @kind virtual;
  #L15f700.  v3:= temp @kind object;
  #L15f702.  v0:= v2.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15f706.  if v0 != 0 then goto L15f720;
  #L15f70a.  call temp:= `isEmpty`(v3) @signature `Lu6/c;.isEmpty:()Z` @kind virtual;
  #L15f710.  v0:= temp;
  #L15f712.  if v0 == 0 then goto L15f720;
  #L15f716.  call temp:= `f`() @signature `La7/d;.f:()La7/d;` @kind static;
  #L15f71c.  v3:= temp @kind object;
  #L15f71e.  return v3 @kind object;
  #L15f720.  v0:= new `a7.d`;
  #L15f724.  v1:= v2.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15f728.  call `<init>`(v0, v1, v3) @signature `La7/d;.<init>:(Ljava/lang/Object;Lu6/c;)V` @kind direct;
  #L15f72e.  return v0 @kind object;
  #L15f730.  return v2 @kind object;
}
procedure `java.lang.Object` `T`(`a7.d` v3 @kind this, `x6.l` v4 @kind object, `a7.i` v5 @kind object) @signature `La7/d;.T:(Lx6/l;La7/i;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15fb98.  v0:= v3.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15fb9c.  if v0 == 0 then goto L15fbb2;
  #L15fba0.  call temp:= `a`(v5, v0) @signature `La7/i;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L15fba6.  v0:= temp;
  #L15fba8.  if v0 == 0 then goto L15fbb2;
  #L15fbac.  v4:= v3.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15fbb0.  return v4 @kind object;
  #L15fbb2.  call temp:= `iterator`(v4) @signature `Lx6/l;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L15fbb8.  v4:= temp @kind object;
  #L15fbba.  v0:= v3 @kind object;
  #L15fbbc.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15fbc2.  v1:= temp;
  #L15fbc4.  v2:= 0I;
  #L15fbc6.  if v1 == 0 then goto L15fc06;
  #L15fbca.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15fbd0.  v1:= temp @kind object;
  #L15fbd2.  v1:= (`f7.b`) v1 @kind object;
  #L15fbd6.  v0:= v0.`a7.d.p` @type ^`u6.c` @kind object;
  #L15fbda.  call temp:= `f`(v0, v1) @signature `Lu6/c;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15fbe0.  v0:= temp @kind object;
  #L15fbe2.  v0:= (`a7.d`) v0 @kind object;
  #L15fbe6.  if v0 != 0 then goto L15fbec;
  #L15fbea.  return v2 @kind object;
  #L15fbec.  v1:= v0.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15fbf0.  if v1 == 0 then goto L15fbbc;
  #L15fbf4.  call temp:= `a`(v5, v1) @signature `La7/i;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L15fbfa.  v1:= temp;
  #L15fbfc.  if v1 == 0 then goto L15fbbc;
  #L15fc00.  v4:= v0.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15fc04.  return v4 @kind object;
  #L15fc06.  return v2 @kind object;
}
procedure `a7.d` `Y`(`a7.d` v2 @kind this, `x6.l` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `La7/d;.Y:(Lx6/l;Ljava/lang/Object;)La7/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15f744.  call temp:= `isEmpty`(v3) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L15f74a.  v0:= temp;
  #L15f74c.  if v0 == 0 then goto L15f760;
  #L15f750.  v3:= new `a7.d`;
  #L15f754.  v0:= v2.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f758.  call `<init>`(v3, v4, v0) @signature `La7/d;.<init>:(Ljava/lang/Object;Lu6/c;)V` @kind direct;
  #L15f75e.  return v3 @kind object;
  #L15f760.  call temp:= `h0`(v3) @signature `Lx6/l;.h0:()Lf7/b;` @kind virtual;
  #L15f766.  v0:= temp @kind object;
  #L15f768.  v1:= v2.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f76c.  call temp:= `f`(v1, v0) @signature `Lu6/c;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15f772.  v1:= temp @kind object;
  #L15f774.  v1:= (`a7.d`) v1 @kind object;
  #L15f778.  if v1 != 0 then goto L15f784;
  #L15f77c.  call temp:= `f`() @signature `La7/d;.f:()La7/d;` @kind static;
  #L15f782.  v1:= temp @kind object;
  #L15f784.  call temp:= `k0`(v3) @signature `Lx6/l;.k0:()Lx6/l;` @kind virtual;
  #L15f78a.  v3:= temp @kind object;
  #L15f78c.  call temp:= `Y`(v1, v3, v4) @signature `La7/d;.Y:(Lx6/l;Ljava/lang/Object;)La7/d;` @kind virtual;
  #L15f792.  v3:= temp @kind object;
  #L15f794.  v4:= v2.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f798.  call temp:= `y`(v4, v0, v3) @signature `Lu6/c;.y:(Ljava/lang/Object;Ljava/lang/Object;)Lu6/c;` @kind virtual;
  #L15f79e.  v3:= temp @kind object;
  #L15f7a0.  v4:= new `a7.d`;
  #L15f7a4.  v0:= v2.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15f7a8.  call `<init>`(v4, v0, v3) @signature `La7/d;.<init>:(Ljava/lang/Object;Lu6/c;)V` @kind direct;
  #L15f7ae.  return v4 @kind object;
}
procedure `a7.d` `a0`(`a7.d` v2 @kind this, `x6.l` v3 @kind object, `a7.d` v4 @kind object) @signature `La7/d;.a0:(Lx6/l;La7/d;)La7/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15f7c0.  call temp:= `isEmpty`(v3) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L15f7c6.  v0:= temp;
  #L15f7c8.  if v0 == 0 then goto L15f7ce;
  #L15f7cc.  return v4 @kind object;
  #L15f7ce.  call temp:= `h0`(v3) @signature `Lx6/l;.h0:()Lf7/b;` @kind virtual;
  #L15f7d4.  v0:= temp @kind object;
  #L15f7d6.  v1:= v2.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f7da.  call temp:= `f`(v1, v0) @signature `Lu6/c;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15f7e0.  v1:= temp @kind object;
  #L15f7e2.  v1:= (`a7.d`) v1 @kind object;
  #L15f7e6.  if v1 != 0 then goto L15f7f2;
  #L15f7ea.  call temp:= `f`() @signature `La7/d;.f:()La7/d;` @kind static;
  #L15f7f0.  v1:= temp @kind object;
  #L15f7f2.  call temp:= `k0`(v3) @signature `Lx6/l;.k0:()Lx6/l;` @kind virtual;
  #L15f7f8.  v3:= temp @kind object;
  #L15f7fa.  call temp:= `a0`(v1, v3, v4) @signature `La7/d;.a0:(Lx6/l;La7/d;)La7/d;` @kind virtual;
  #L15f800.  v3:= temp @kind object;
  #L15f802.  call temp:= `isEmpty`(v3) @signature `La7/d;.isEmpty:()Z` @kind virtual;
  #L15f808.  v4:= temp;
  #L15f80a.  if v4 == 0 then goto L15f81c;
  #L15f80e.  v3:= v2.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f812.  call temp:= `G`(v3, v0) @signature `Lu6/c;.G:(Ljava/lang/Object;)Lu6/c;` @kind virtual;
  #L15f818.  v3:= temp @kind object;
  #L15f81a.  goto L15f828;
  #L15f81c.  v4:= v2.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f820.  call temp:= `y`(v4, v0, v3) @signature `Lu6/c;.y:(Ljava/lang/Object;Ljava/lang/Object;)Lu6/c;` @kind virtual;
  #L15f826.  v3:= temp @kind object;
  #L15f828.  v4:= new `a7.d`;
  #L15f82c.  v0:= v2.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15f830.  call `<init>`(v4, v0, v3) @signature `La7/d;.<init>:(Ljava/lang/Object;Lu6/c;)V` @kind direct;
  #L15f836.  return v4 @kind object;
}
procedure `boolean` `b`(`a7.d` v3 @kind this, `a7.i` v4 @kind object) @signature `La7/d;.b:(La7/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15f8a0.  v0:= v3.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15f8a4.  v1:= 1I;
  #L15f8a6.  if v0 == 0 then goto L15f8b8;
  #L15f8aa.  call temp:= `a`(v4, v0) @signature `La7/i;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L15f8b0.  v0:= temp;
  #L15f8b2.  if v0 == 0 then goto L15f8b8;
  #L15f8b6.  return v1;
  #L15f8b8.  v0:= v3.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f8bc.  call temp:= `iterator`(v0) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L15f8c2.  v0:= temp @kind object;
  #L15f8c4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15f8ca.  v2:= temp;
  #L15f8cc.  if v2 == 0 then goto L15f8f6;
  #L15f8d0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15f8d6.  v2:= temp @kind object;
  #L15f8d8.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L15f8dc.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L15f8e2.  v2:= temp @kind object;
  #L15f8e4.  v2:= (`a7.d`) v2 @kind object;
  #L15f8e8.  call temp:= `b`(v2, v4) @signature `La7/d;.b:(La7/i;)Z` @kind virtual;
  #L15f8ee.  v2:= temp;
  #L15f8f0.  if v2 == 0 then goto L15f8c4;
  #L15f8f4.  return v1;
  #L15f8f6.  v4:= 0I;
  #L15f8f8.  return v4;
}
procedure `a7.d` `b0`(`a7.d` v2 @kind this, `x6.l` v3 @kind object) @signature `La7/d;.b0:(Lx6/l;)La7/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15f848.  call temp:= `isEmpty`(v3) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L15f84e.  v0:= temp;
  #L15f850.  if v0 == 0 then goto L15f856;
  #L15f854.  return v2 @kind object;
  #L15f856.  call temp:= `h0`(v3) @signature `Lx6/l;.h0:()Lf7/b;` @kind virtual;
  #L15f85c.  v0:= temp @kind object;
  #L15f85e.  v1:= v2.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f862.  call temp:= `f`(v1, v0) @signature `Lu6/c;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15f868.  v0:= temp @kind object;
  #L15f86a.  v0:= (`a7.d`) v0 @kind object;
  #L15f86e.  if v0 == 0 then goto L15f884;
  #L15f872.  call temp:= `k0`(v3) @signature `Lx6/l;.k0:()Lx6/l;` @kind virtual;
  #L15f878.  v3:= temp @kind object;
  #L15f87a.  call temp:= `b0`(v0, v3) @signature `La7/d;.b0:(Lx6/l;)La7/d;` @kind virtual;
  #L15f880.  v3:= temp @kind object;
  #L15f882.  return v3 @kind object;
  #L15f884.  call temp:= `f`() @signature `La7/d;.f:()La7/d;` @kind static;
  #L15f88a.  v3:= temp @kind object;
  #L15f88c.  return v3 @kind object;
}
procedure `java.util.Collection` `c0`(`a7.d` v2 @kind this) @signature `La7/d;.c0:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15fcc0.  v0:= new `java.util.ArrayList`;
  #L15fcc4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L15fcca.  v1:= new `a7.d$a`;
  #L15fcce.  call `<init>`(v1, v2, v0) @signature `La7/d$a;.<init>:(La7/d;Ljava/util/ArrayList;)V` @kind direct;
  #L15fcd4.  call `u`(v2, v1) @signature `La7/d;.u:(La7/d$c;)V` @kind virtual;
  #L15fcda.  return v0 @kind object;
}
procedure `boolean` `equals`(`a7.d` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `La7/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15f90c.  v0:= 1I;
  #L15f90e.  if v4 != v5 then goto L15f914;
  #L15f912.  return v0;
  #L15f914.  v1:= 0I;
  #L15f916.  if v5 == 0 then goto L15f976;
  #L15f91a.  v2:= constclass @type ^`a7.d` @kind object;
  #L15f91e.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L15f924.  v3:= temp @kind object;
  #L15f926.  if v2 == v3 then goto L15f92c;
  #L15f92a.  goto L15f976;
  #L15f92c.  v5:= (`a7.d`) v5 @kind object;
  #L15f930.  v2:= v4.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f934.  if v2 == 0 then goto L15f94a;
  #L15f938.  v3:= v5.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f93c.  call temp:= `equals`(v2, v3) @signature `Lu6/c;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15f942.  v2:= temp;
  #L15f944.  if v2 != 0 then goto L15f954;
  #L15f948.  goto L15f952;
  #L15f94a.  v2:= v5.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f94e.  if v2 == 0 then goto L15f954;
  #L15f952.  return v1;
  #L15f954.  v2:= v4.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15f958.  v5:= v5.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15f95c.  if v2 == 0 then goto L15f96e;
  #L15f960.  call temp:= `equals`(v2, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15f966.  v5:= temp;
  #L15f968.  if v5 != 0 then goto L15f974;
  #L15f96c.  goto L15f972;
  #L15f96e.  if v5 == 0 then goto L15f974;
  #L15f972.  return v1;
  #L15f974.  return v0;
  #L15f976.  return v1;
}
procedure `java.lang.Object` `getValue`(`a7.d` v1 @kind this) @signature `La7/d;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15fae0.  v0:= v1.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15fae4.  return v0 @kind object;
}
procedure `x6.l` `h`(`a7.d` v3 @kind this, `x6.l` v4 @kind object, `a7.i` v5 @kind object) @signature `La7/d;.h:(Lx6/l;La7/i;)Lx6/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15fdd4.  v0:= v3.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15fdd8.  if v0 == 0 then goto L15fdf2;
  #L15fddc.  call temp:= `a`(v5, v0) @signature `La7/i;.a:(Ljava/lang/Object;)Z` @kind interface;
  #L15fde2.  v0:= temp;
  #L15fde4.  if v0 == 0 then goto L15fdf2;
  #L15fde8.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L15fdee.  v4:= temp @kind object;
  #L15fdf0.  return v4 @kind object;
  #L15fdf2.  call temp:= `isEmpty`(v4) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L15fdf8.  v0:= temp;
  #L15fdfa.  v1:= 0I;
  #L15fdfc.  if v0 == 0 then goto L15fe02;
  #L15fe00.  return v1 @kind object;
  #L15fe02.  call temp:= `h0`(v4) @signature `Lx6/l;.h0:()Lf7/b;` @kind virtual;
  #L15fe08.  v0:= temp @kind object;
  #L15fe0a.  v2:= v3.`a7.d.p` @type ^`u6.c` @kind object;
  #L15fe0e.  call temp:= `f`(v2, v0) @signature `Lu6/c;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15fe14.  v2:= temp @kind object;
  #L15fe16.  v2:= (`a7.d`) v2 @kind object;
  #L15fe1a.  if v2 == 0 then goto L15fe52;
  #L15fe1e.  call temp:= `k0`(v4) @signature `Lx6/l;.k0:()Lx6/l;` @kind virtual;
  #L15fe24.  v4:= temp @kind object;
  #L15fe26.  call temp:= `h`(v2, v4, v5) @signature `La7/d;.h:(Lx6/l;La7/i;)Lx6/l;` @kind virtual;
  #L15fe2c.  v4:= temp @kind object;
  #L15fe2e.  if v4 == 0 then goto L15fe52;
  #L15fe32.  v5:= new `x6.l`;
  #L15fe36.  v1:= 1I;
  #L15fe38.  v1:= new `f7.b`[v1];
  #L15fe3c.  v2:= 0I;
  #L15fe3e.  v1[v2]:= v0 @kind object;
  #L15fe42.  call `<init>`(v5, v1) @signature `Lx6/l;.<init>:([Lf7/b;)V` @kind direct;
  #L15fe48.  call temp:= `c0`(v5, v4) @signature `Lx6/l;.c0:(Lx6/l;)Lx6/l;` @kind virtual;
  #L15fe4e.  v4:= temp @kind object;
  #L15fe50.  return v4 @kind object;
  #L15fe52.  return v1 @kind object;
}
procedure `int` `hashCode`(`a7.d` v3 @kind this) @signature `La7/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15f9b8.  v0:= v3.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15f9bc.  v1:= 0I;
  #L15f9be.  if v0 == 0 then goto L15f9cc;
  #L15f9c2.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L15f9c8.  v0:= temp;
  #L15f9ca.  goto L15f9ce;
  #L15f9cc.  v0:= 0I;
  #L15f9ce.  v0:= v0 * 31;
  #L15f9d2.  v2:= v3.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f9d6.  if v2 == 0 then goto L15f9e2;
  #L15f9da.  call temp:= `hashCode`(v2) @signature `Lu6/c;.hashCode:()I` @kind virtual;
  #L15f9e0.  v1:= temp;
  #L15f9e2.  v0:= v0 + v1 @kind int;
  #L15f9e4.  return v0;
}
procedure `boolean` `isEmpty`(`a7.d` v1 @kind this) @signature `La7/d;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15f988.  v0:= v1.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15f98c.  if v0 != 0 then goto L15f9a4;
  #L15f990.  v0:= v1.`a7.d.p` @type ^`u6.c` @kind object;
  #L15f994.  call temp:= `isEmpty`(v0) @signature `Lu6/c;.isEmpty:()Z` @kind virtual;
  #L15f99a.  v0:= temp;
  #L15f99c.  if v0 == 0 then goto L15f9a4;
  #L15f9a0.  v0:= 1I;
  #L15f9a2.  goto L15f9a6;
  #L15f9a4.  v0:= 0I;
  #L15f9a6.  return v0;
}
procedure `java.util.Iterator` `iterator`(`a7.d` v2 @kind this) @signature `La7/d;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15fcec.  v0:= new `java.util.ArrayList`;
  #L15fcf0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L15fcf6.  v1:= new `a7.d$b`;
  #L15fcfa.  call `<init>`(v1, v2, v0) @signature `La7/d$b;.<init>:(La7/d;Ljava/util/List;)V` @kind direct;
  #L15fd00.  call `u`(v2, v1) @signature `La7/d;.u:(La7/d$c;)V` @kind virtual;
  #L15fd06.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15fd0c.  v0:= temp @kind object;
  #L15fd0e.  return v0 @kind object;
}
procedure `x6.l` `l`(`a7.d` v1 @kind this, `x6.l` v2 @kind object) @signature `La7/d;.l:(Lx6/l;)Lx6/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15fe64.  v0:= `@@a7.i.a` @type ^`a7.i` @kind object;
  #L15fe68.  call temp:= `h`(v1, v2, v0) @signature `La7/d;.h:(Lx6/l;La7/i;)Lx6/l;` @kind virtual;
  #L15fe6e.  v2:= temp @kind object;
  #L15fe70.  return v2 @kind object;
}
procedure `java.lang.Object` `n`(`a7.d` v1 @kind this, `java.lang.Object` v2 @kind object, `a7.d$c` v3 @kind object) @signature `La7/d;.n:(Ljava/lang/Object;La7/d$c;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15f9f8.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L15f9fe.  v0:= temp @kind object;
  #L15fa00.  call temp:= `p`(v1, v0, v3, v2) @signature `La7/d;.p:(Lx6/l;La7/d$c;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L15fa06.  v2:= temp @kind object;
  #L15fa08.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`a7.d` v4 @kind this) @signature `La7/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15fc18.  v0:= new `java.lang.StringBuilder`;
  #L15fc1c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15fc22.  v1:= "ImmutableTree { value=" @kind object;
  #L15fc26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fc2c.  call temp:= `getValue`(v4) @signature `La7/d;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L15fc32.  v1:= temp @kind object;
  #L15fc34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fc3a.  v1:= ", children={" @kind object;
  #L15fc3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fc44.  v1:= v4.`a7.d.p` @type ^`u6.c` @kind object;
  #L15fc48.  call temp:= `iterator`(v1) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L15fc4e.  v1:= temp @kind object;
  #L15fc50.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15fc56.  v2:= temp;
  #L15fc58.  if v2 == 0 then goto L15fc9c;
  #L15fc5c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15fc62.  v2:= temp @kind object;
  #L15fc64.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L15fc68.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L15fc6e.  v3:= temp @kind object;
  #L15fc70.  v3:= (`f7.b`) v3 @kind object;
  #L15fc74.  call temp:= `d`(v3) @signature `Lf7/b;.d:()Ljava/lang/String;` @kind virtual;
  #L15fc7a.  v3:= temp @kind object;
  #L15fc7c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fc82.  v3:= "=" @kind object;
  #L15fc86.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fc8c.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L15fc92.  v2:= temp @kind object;
  #L15fc94.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fc9a.  goto L15fc50;
  #L15fc9c.  v1:= "} }" @kind object;
  #L15fca0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fca6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15fcac.  v0:= temp @kind object;
  #L15fcae.  return v0 @kind object;
}
procedure `void` `u`(`a7.d` v2 @kind this, `a7.d$c` v3 @kind object) @signature `La7/d;.u:(La7/d$c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15fdb0.  call temp:= `g0`() @signature `Lx6/l;.g0:()Lx6/l;` @kind static;
  #L15fdb6.  v0:= temp @kind object;
  #L15fdb8.  v1:= 0I;
  #L15fdba.  call temp:= `p`(v2, v0, v3, v1) @signature `La7/d;.p:(Lx6/l;La7/d$c;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L15fdc0.  return @kind void;
}
procedure `java.lang.Object` `y`(`a7.d` v2 @kind this, `x6.l` v3 @kind object) @signature `La7/d;.y:(Lx6/l;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15fa8c.  call temp:= `isEmpty`(v3) @signature `Lx6/l;.isEmpty:()Z` @kind virtual;
  #L15fa92.  v0:= temp;
  #L15fa94.  if v0 == 0 then goto L15fa9e;
  #L15fa98.  v3:= v2.`a7.d.o` @type ^`java.lang.Object` @kind object;
  #L15fa9c.  return v3 @kind object;
  #L15fa9e.  call temp:= `h0`(v3) @signature `Lx6/l;.h0:()Lf7/b;` @kind virtual;
  #L15faa4.  v0:= temp @kind object;
  #L15faa6.  v1:= v2.`a7.d.p` @type ^`u6.c` @kind object;
  #L15faaa.  call temp:= `f`(v1, v0) @signature `Lu6/c;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15fab0.  v0:= temp @kind object;
  #L15fab2.  v0:= (`a7.d`) v0 @kind object;
  #L15fab6.  if v0 == 0 then goto L15facc;
  #L15faba.  call temp:= `k0`(v3) @signature `Lx6/l;.k0:()Lx6/l;` @kind virtual;
  #L15fac0.  v3:= temp @kind object;
  #L15fac2.  call temp:= `y`(v0, v3) @signature `La7/d;.y:(Lx6/l;)Ljava/lang/Object;` @kind virtual;
  #L15fac8.  v3:= temp @kind object;
  #L15faca.  return v3 @kind object;
  #L15facc.  v3:= 0I;
  #L15face.  return v3 @kind object;
}
