record `g3.e` @kind class @AccessFlag PUBLIC_FINAL extends `g3.h` @kind interface {
  `g3.c` `g3.e.a` @AccessFlag PRIVATE_FINAL;
  `g3.k` `g3.e.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Deque` `g3.e.c` @AccessFlag PRIVATE_FINAL;
  `int` `g3.e.d` @AccessFlag PRIVATE;
  `boolean` `g3.e.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`g3.e` v4 @kind this) @signature `Lg3/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32135c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L321362.  v0:= new `g3.c`;
  #L321366.  call `<init>`(v0) @signature `Lg3/c;.<init>:()V` @kind direct;
  #L32136c.  v4.`g3.e.a` @type ^`g3.c` := v0 @kind object;
  #L321370.  v0:= new `g3.k`;
  #L321374.  call `<init>`(v0) @signature `Lg3/k;.<init>:()V` @kind direct;
  #L32137a.  v4.`g3.e.b` @type ^`g3.k` := v0 @kind object;
  #L32137e.  v0:= new `java.util.ArrayDeque`;
  #L321382.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L321388.  v4.`g3.e.c` @type ^`java.util.Deque` := v0 @kind object;
  #L32138c.  v0:= 0I;
  #L32138e.  v1:= 0I;
  #L321390.  v2:= 2I;
  #L321392.  if v1 >= v2 then goto L3213b0;
  #L321396.  v2:= v4.`g3.e.c` @type ^`java.util.Deque` @kind object;
  #L32139a.  v3:= new `g3.e$a`;
  #L32139e.  call `<init>`(v3, v4) @signature `Lg3/e$a;.<init>:(Lg3/e;)V` @kind direct;
  #L3213a4.  call `addFirst`(v2, v3) @signature `Ljava/util/Deque;.addFirst:(Ljava/lang/Object;)V` @kind interface;
  #L3213aa.  v1:= v1 + 1;
  #L3213ae.  goto L321390;
  #L3213b0.  v4.`g3.e.d` @type ^`int` := v0;
  #L3213b4.  return @kind void;
}
procedure `void` `f`(`g3.e` v0 @kind object, `g3.l` v1 @kind object) @signature `Lg3/e;.f:(Lg3/e;Lg3/l;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3213c8.  call `j`(v0, v1) @signature `Lg3/e;.j:(Lg3/l;)V` @kind direct;
  #L3213ce.  return @kind void;
}
procedure `void` `j`(`g3.e` v3 @kind this, `g3.l` v4 @kind object) @signature `Lg3/e;.j:(Lg3/l;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L321494.  v0:= v3.`g3.e.c` @type ^`java.util.Deque` @kind object;
  #L321498.  call temp:= `size`(v0) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #L32149e.  v0:= temp;
  #L3214a0.  v1:= 1I;
  #L3214a2.  v2:= 2I;
  #L3214a4.  if v0 >= v2 then goto L3214ac;
  #L3214a8.  v0:= 1I;
  #L3214aa.  goto L3214ae;
  #L3214ac.  v0:= 0I;
  #L3214ae.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L3214b4.  v0:= v3.`g3.e.c` @type ^`java.util.Deque` @kind object;
  #L3214b8.  call temp:= `contains`(v0, v4) @signature `Ljava/util/Deque;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3214be.  v0:= temp;
  #L3214c0.  v0:= v0 ^~ v1 @kind int;
  #L3214c2.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L3214c8.  call `j`(v4) @signature `Lg3/l;.j:()V` @kind virtual;
  #L3214ce.  v0:= v3.`g3.e.c` @type ^`java.util.Deque` @kind object;
  #L3214d2.  call `addFirst`(v0, v4) @signature `Ljava/util/Deque;.addFirst:(Ljava/lang/Object;)V` @kind interface;
  #L3214d8.  return @kind void;
}
procedure `void` `a`(`g3.e` v1 @kind this) @signature `Lg3/e;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32147c.  v0:= 1I;
  #L32147e.  v1.`g3.e.e` @type ^`boolean` := v0 @kind boolean;
  #L321482.  return @kind void;
}
procedure `void` `b`(`g3.e` v0 @kind this, `long` v1 ) @signature `Lg3/e;.b:(J)V` @AccessFlag PUBLIC {
    temp;

  #L3214ec.  return @kind void;
}
procedure `void` `c`(`g3.e` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lg3/e;.c:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L321460.  v1:= (`g3.k`) v1 @kind object;
  #L321464.  call `i`(v0, v1) @signature `Lg3/e;.i:(Lg3/k;)V` @kind virtual;
  #L32146a.  return @kind void;
}
procedure `java.lang.Object` `d`(`g3.e` v1 @kind this) @signature `Lg3/e;.d:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L321340.  call temp:= `h`(v1) @signature `Lg3/e;.h:()Lg3/l;` @kind virtual;
  #L321346.  v0:= temp @kind object;
  #L321348.  return v0 @kind object;
}
procedure `java.lang.Object` `e`(`g3.e` v1 @kind this) @signature `Lg3/e;.e:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L321324.  call temp:= `g`(v1) @signature `Lg3/e;.g:()Lg3/k;` @kind virtual;
  #L32132a.  v0:= temp @kind object;
  #L32132c.  return v0 @kind object;
}
procedure `void` `flush`(`g3.e` v1 @kind this) @signature `Lg3/e;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3213e0.  v0:= v1.`g3.e.e` @type ^`boolean` @kind boolean;
  #L3213e4.  v0:= v0 ^~ 1;
  #L3213e8.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L3213ee.  v0:= v1.`g3.e.b` @type ^`g3.k` @kind object;
  #L3213f2.  call `j`(v0) @signature `Ly1/g;.j:()V` @kind virtual;
  #L3213f8.  v0:= 0I;
  #L3213fa.  v1.`g3.e.d` @type ^`int` := v0;
  #L3213fe.  return @kind void;
}
procedure `g3.k` `g`(`g3.e` v2 @kind this) @signature `Lg3/e;.g:()Lg3/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32122c.  v0:= v2.`g3.e.e` @type ^`boolean` @kind boolean;
  #L321230.  v1:= 1I;
  #L321232.  v0:= v0 ^~ v1 @kind int;
  #L321234.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L32123a.  v0:= v2.`g3.e.d` @type ^`int`;
  #L32123e.  if v0 == 0 then goto L321246;
  #L321242.  v0:= 0I;
  #L321244.  return v0 @kind object;
  #L321246.  v2.`g3.e.d` @type ^`int` := v1;
  #L32124a.  v0:= v2.`g3.e.b` @type ^`g3.k` @kind object;
  #L32124e.  return v0 @kind object;
}
procedure `g3.l` `h`(`g3.e` v7 @kind this) @signature `Lg3/e;.h:()Lg3/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L321260.  v0:= v7.`g3.e.e` @type ^`boolean` @kind boolean;
  #L321264.  v0:= v0 ^~ 1;
  #L321268.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L32126e.  v0:= v7.`g3.e.d` @type ^`int`;
  #L321272.  v1:= 2I;
  #L321274.  if v0 != v1 then goto L321310;
  #L321278.  v0:= v7.`g3.e.c` @type ^`java.util.Deque` @kind object;
  #L32127c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L321282.  v0:= temp;
  #L321284.  if v0 == 0 then goto L32128a;
  #L321288.  goto L321310;
  #L32128a.  v0:= v7.`g3.e.c` @type ^`java.util.Deque` @kind object;
  #L32128e.  call temp:= `removeFirst`(v0) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L321294.  v0:= temp @kind object;
  #L321296.  v0:= (`g3.l`) v0 @kind object;
  #L32129a.  v1:= v7.`g3.e.b` @type ^`g3.k` @kind object;
  #L32129e.  call temp:= `t`(v1) @signature `Ly1/a;.t:()Z` @kind virtual;
  #L3212a4.  v1:= temp;
  #L3212a6.  if v1 == 0 then goto L3212b4;
  #L3212aa.  v1:= 4I;
  #L3212ac.  call `i`(v0, v1) @signature `Ly1/a;.i:(I)V` @kind virtual;
  #L3212b2.  goto L3212fe;
  #L3212b4.  v4:= new `g3.e$b`;
  #L3212b8.  v1:= v7.`g3.e.b` @type ^`g3.k` @kind object;
  #L3212bc.  v2:= v1.`y1.g.s` @type ^`long` @kind wide;
  #L3212c0.  v5:= v7.`g3.e.a` @type ^`g3.c` @kind object;
  #L3212c4.  v1:= v1.`y1.g.q` @type ^`java.nio.ByteBuffer` @kind object;
  #L3212c8.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3212ce.  v1:= temp @kind object;
  #L3212d0.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L3212d4.  call temp:= `array`(v1) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L3212da.  v1:= temp @kind object;
  #L3212dc.  call temp:= `a`(v5, v1) @signature `Lg3/c;.a:([B)Lm5/q;` @kind virtual;
  #L3212e2.  v1:= temp @kind object;
  #L3212e4.  call `<init>`(v4, v2, v1) @signature `Lg3/e$b;.<init>:(JLm5/q;)V` @kind direct;
  #L3212ea.  v1:= v7.`g3.e.b` @type ^`g3.k` @kind object;
  #L3212ee.  v2:= v1.`y1.g.s` @type ^`long` @kind wide;
  #L3212f2.  v5:= 0L;
  #L3212f6.  v1:= v0 @kind object;
  #L3212f8.  call `F`(v1, v2, v4, v5) @signature `Lg3/l;.F:(JLg3/g;J)V` @kind virtual;
  #L3212fe.  v1:= v7.`g3.e.b` @type ^`g3.k` @kind object;
  #L321302.  call `j`(v1) @signature `Ly1/g;.j:()V` @kind virtual;
  #L321308.  v1:= 0I;
  #L32130a.  v7.`g3.e.d` @type ^`int` := v1;
  #L32130e.  return v0 @kind object;
  #L321310.  v0:= 0I;
  #L321312.  return v0 @kind object;
}
procedure `void` `i`(`g3.e` v3 @kind this, `g3.k` v4 @kind object) @signature `Lg3/e;.i:(Lg3/k;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L321410.  v0:= v3.`g3.e.e` @type ^`boolean` @kind boolean;
  #L321414.  v1:= 1I;
  #L321416.  v0:= v0 ^~ v1 @kind int;
  #L321418.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L32141e.  v0:= v3.`g3.e.d` @type ^`int`;
  #L321422.  v2:= 0I;
  #L321424.  if v0 != v1 then goto L32142c;
  #L321428.  v0:= 1I;
  #L32142a.  goto L32142e;
  #L32142c.  v0:= 0I;
  #L32142e.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L321434.  v0:= v3.`g3.e.b` @type ^`g3.k` @kind object;
  #L321438.  if v0 != v4 then goto L32143e;
  #L32143c.  goto L321440;
  #L32143e.  v1:= 0I;
  #L321440.  call `a`(v1) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L321446.  v4:= 2I;
  #L321448.  v3.`g3.e.d` @type ^`int` := v4;
  #L32144c.  return @kind void;
}
