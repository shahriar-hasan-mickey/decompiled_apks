record `g3.n` @kind class @AccessFlag PUBLIC_FINAL extends `v1.f` @kind class, `android.os.Handler$Callback` @kind interface {
  `android.os.Handler` `g3.n.A` @AccessFlag PRIVATE_FINAL;
  `g3.m` `g3.n.B` @AccessFlag PRIVATE_FINAL;
  `g3.j` `g3.n.C` @AccessFlag PRIVATE_FINAL;
  `v1.k1` `g3.n.D` @AccessFlag PRIVATE_FINAL;
  `boolean` `g3.n.E` @AccessFlag PRIVATE;
  `boolean` `g3.n.F` @AccessFlag PRIVATE;
  `boolean` `g3.n.G` @AccessFlag PRIVATE;
  `int` `g3.n.H` @AccessFlag PRIVATE;
  `v1.j1` `g3.n.I` @AccessFlag PRIVATE;
  `g3.h` `g3.n.J` @AccessFlag PRIVATE;
  `g3.k` `g3.n.K` @AccessFlag PRIVATE;
  `g3.l` `g3.n.L` @AccessFlag PRIVATE;
  `g3.l` `g3.n.M` @AccessFlag PRIVATE;
  `int` `g3.n.N` @AccessFlag PRIVATE;
  `long` `g3.n.O` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`g3.n` v1 @kind this, `g3.m` v2 @kind object, `android.os.Looper` v3 @kind object) @signature `Lg3/n;.<init>:(Lg3/m;Landroid/os/Looper;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L321d58.  v0:= `@@g3.j.a` @type ^`g3.j` @kind object;
  #L321d5c.  call `<init>`(v1, v2, v3, v0) @signature `Lg3/n;.<init>:(Lg3/m;Landroid/os/Looper;Lg3/j;)V` @kind direct;
  #L321d62.  return @kind void;
}
procedure `void` `<init>`(`g3.n` v1 @kind this, `g3.m` v2 @kind object, `android.os.Looper` v3 @kind object, `g3.j` v4 @kind object) @signature `Lg3/n;.<init>:(Lg3/m;Landroid/os/Looper;Lg3/j;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L321d74.  v0:= 3I;
  #L321d76.  call `<init>`(v1, v0) @signature `Lv1/f;.<init>:(I)V` @kind direct;
  #L321d7c.  call temp:= `e`(v2) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L321d82.  v2:= temp @kind object;
  #L321d84.  v2:= (`g3.m`) v2 @kind object;
  #L321d88.  v1.`g3.n.B` @type ^`g3.m` := v2 @kind object;
  #L321d8c.  if v3 != 0 then goto L321d94;
  #L321d90.  v2:= 0I;
  #L321d92.  goto L321d9c;
  #L321d94.  call temp:= `v`(v3, v1) @signature `Ls3/l0;.v:(Landroid/os/Looper;Landroid/os/Handler$Callback;)Landroid/os/Handler;` @kind static;
  #L321d9a.  v2:= temp @kind object;
  #L321d9c.  v1.`g3.n.A` @type ^`android.os.Handler` := v2 @kind object;
  #L321da0.  v1.`g3.n.C` @type ^`g3.j` := v4 @kind object;
  #L321da4.  v2:= new `v1.k1`;
  #L321da8.  call `<init>`(v2) @signature `Lv1/k1;.<init>:()V` @kind direct;
  #L321dae.  v1.`g3.n.D` @type ^`v1.k1` := v2 @kind object;
  #L321db2.  v2:= -4.9E-324D;
  #L321dbc.  v1.`g3.n.O` @type ^`long` := v2 @kind wide;
  #L321dc0.  return @kind void;
}
procedure `void` `S`(`g3.n` v1 @kind this) @signature `Lg3/n;.S:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L321dd4.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L321dda.  v0:= temp @kind object;
  #L321ddc.  call `b0`(v1, v0) @signature `Lg3/n;.b0:(Ljava/util/List;)V` @kind direct;
  #L321de2.  return @kind void;
}
procedure `long` `T`(`g3.n` v4 @kind this) @signature `Lg3/n;.T:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L321d00.  v0:= v4.`g3.n.N` @type ^`int`;
  #L321d04.  v1:= 9223372036854775807L;
  #L321d0e.  v3:= -1I;
  #L321d10.  if v0 != v3 then goto L321d16;
  #L321d14.  return v1 @kind wide;
  #L321d16.  v0:= v4.`g3.n.L` @type ^`g3.l` @kind object;
  #L321d1a.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L321d20.  v0:= v4.`g3.n.N` @type ^`int`;
  #L321d24.  v3:= v4.`g3.n.L` @type ^`g3.l` @kind object;
  #L321d28.  call temp:= `h`(v3) @signature `Lg3/l;.h:()I` @kind virtual;
  #L321d2e.  v3:= temp;
  #L321d30.  if v0 < v3 then goto L321d36;
  #L321d34.  goto L321d46;
  #L321d36.  v0:= v4.`g3.n.L` @type ^`g3.l` @kind object;
  #L321d3a.  v1:= v4.`g3.n.N` @type ^`int`;
  #L321d3e.  call temp:= `d`(v0, v1) @signature `Lg3/l;.d:(I)J` @kind virtual;
  #L321d44.  v1:= temp @kind wide;
  #L321d46.  return v1 @kind wide;
}
procedure `void` `U`(`g3.n` v2 @kind this, `g3.i` v3 @kind object) @signature `Lg3/n;.U:(Lg3/i;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L321df4.  v0:= new `java.lang.StringBuilder`;
  #L321df8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L321dfe.  v1:= "Subtitle decoding failed. streamFormat=" @kind object;
  #L321e02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321e08.  v1:= v2.`g3.n.I` @type ^`v1.j1` @kind object;
  #L321e0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L321e12.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L321e18.  v0:= temp @kind object;
  #L321e1a.  v1:= "TextRenderer" @kind object;
  #L321e1e.  call `d`(v1, v0, v3) @signature `Ls3/q;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L321e24.  call `S`(v2) @signature `Lg3/n;.S:()V` @kind direct;
  #L321e2a.  call `Z`(v2) @signature `Lg3/n;.Z:()V` @kind direct;
  #L321e30.  return @kind void;
}
procedure `void` `V`(`g3.n` v2 @kind this) @signature `Lg3/n;.V:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L321e44.  v0:= 1I;
  #L321e46.  v2.`g3.n.G` @type ^`boolean` := v0 @kind boolean;
  #L321e4a.  v0:= v2.`g3.n.C` @type ^`g3.j` @kind object;
  #L321e4e.  v1:= v2.`g3.n.I` @type ^`v1.j1` @kind object;
  #L321e52.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L321e58.  v1:= temp @kind object;
  #L321e5a.  v1:= (`v1.j1`) v1 @kind object;
  #L321e5e.  call temp:= `b`(v0, v1) @signature `Lg3/j;.b:(Lv1/j1;)Lg3/h;` @kind interface;
  #L321e64.  v0:= temp @kind object;
  #L321e66.  v2.`g3.n.J` @type ^`g3.h` := v0 @kind object;
  #L321e6a.  return @kind void;
}
procedure `void` `W`(`g3.n` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lg3/n;.W:(Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L321e7c.  v0:= v2.`g3.n.B` @type ^`g3.m` @kind object;
  #L321e80.  call `m`(v0, v3) @signature `Lg3/m;.m:(Ljava/util/List;)V` @kind interface;
  #L321e86.  v0:= v2.`g3.n.B` @type ^`g3.m` @kind object;
  #L321e8a.  v1:= new `g3.d`;
  #L321e8e.  call `<init>`(v1, v3) @signature `Lg3/d;.<init>:(Ljava/util/List;)V` @kind direct;
  #L321e94.  call `s`(v0, v1) @signature `Lg3/m;.s:(Lg3/d;)V` @kind interface;
  #L321e9a.  return @kind void;
}
procedure `void` `X`(`g3.n` v2 @kind this) @signature `Lg3/n;.X:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L321f70.  v0:= 0I;
  #L321f72.  v2.`g3.n.K` @type ^`g3.k` := v0 @kind object;
  #L321f76.  v1:= -1I;
  #L321f78.  v2.`g3.n.N` @type ^`int` := v1;
  #L321f7c.  v1:= v2.`g3.n.L` @type ^`g3.l` @kind object;
  #L321f80.  if v1 == 0 then goto L321f8e;
  #L321f84.  call `D`(v1) @signature `Ly1/h;.D:()V` @kind virtual;
  #L321f8a.  v2.`g3.n.L` @type ^`g3.l` := v0 @kind object;
  #L321f8e.  v1:= v2.`g3.n.M` @type ^`g3.l` @kind object;
  #L321f92.  if v1 == 0 then goto L321fa0;
  #L321f96.  call `D`(v1) @signature `Ly1/h;.D:()V` @kind virtual;
  #L321f9c.  v2.`g3.n.M` @type ^`g3.l` := v0 @kind object;
  #L321fa0.  return @kind void;
}
procedure `void` `Y`(`g3.n` v1 @kind this) @signature `Lg3/n;.Y:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L321fb4.  call `X`(v1) @signature `Lg3/n;.X:()V` @kind direct;
  #L321fba.  v0:= v1.`g3.n.J` @type ^`g3.h` @kind object;
  #L321fbe.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L321fc4.  v0:= temp @kind object;
  #L321fc6.  v0:= (`g3.h`) v0 @kind object;
  #L321fca.  call `a`(v0) @signature `Ly1/d;.a:()V` @kind interface;
  #L321fd0.  v0:= 0I;
  #L321fd2.  v1.`g3.n.J` @type ^`g3.h` := v0 @kind object;
  #L321fd6.  v0:= 0I;
  #L321fd8.  v1.`g3.n.H` @type ^`int` := v0;
  #L321fdc.  return @kind void;
}
procedure `void` `Z`(`g3.n` v0 @kind this) @signature `Lg3/n;.Z:()V` @AccessFlag PRIVATE {
    temp;

  #L322290.  call `Y`(v0) @signature `Lg3/n;.Y:()V` @kind direct;
  #L322296.  call `V`(v0) @signature `Lg3/n;.V:()V` @kind direct;
  #L32229c.  return @kind void;
}
procedure `void` `b0`(`g3.n` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lg3/n;.b0:(Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3222d4.  v0:= v2.`g3.n.A` @type ^`android.os.Handler` @kind object;
  #L3222d8.  if v0 == 0 then goto L3222ee;
  #L3222dc.  v1:= 0I;
  #L3222de.  call temp:= `obtainMessage`(v0, v1, v3) @signature `Landroid/os/Handler;.obtainMessage:(ILjava/lang/Object;)Landroid/os/Message;` @kind virtual;
  #L3222e4.  v3:= temp @kind object;
  #L3222e6.  call `sendToTarget`(v3) @signature `Landroid/os/Message;.sendToTarget:()V` @kind virtual;
  #L3222ec.  goto L3222f4;
  #L3222ee.  call `W`(v2, v3) @signature `Lg3/n;.W:(Ljava/util/List;)V` @kind direct;
  #L3222f4.  return @kind void;
}
procedure `void` `I`(`g3.n` v2 @kind this) @signature `Lg3/n;.I:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L321eac.  v0:= 0I;
  #L321eae.  v2.`g3.n.I` @type ^`v1.j1` := v0 @kind object;
  #L321eb2.  v0:= -4.9E-324D;
  #L321ebc.  v2.`g3.n.O` @type ^`long` := v0 @kind wide;
  #L321ec0.  call `S`(v2) @signature `Lg3/n;.S:()V` @kind direct;
  #L321ec6.  call `Y`(v2) @signature `Lg3/n;.Y:()V` @kind direct;
  #L321ecc.  return @kind void;
}
procedure `void` `K`(`g3.n` v0 @kind this, `long` v1 , `boolean` v3 ) @signature `Lg3/n;.K:(JZ)V` @AccessFlag PROTECTED {
    temp;

  #L321ee0.  call `S`(v0) @signature `Lg3/n;.S:()V` @kind direct;
  #L321ee6.  v1:= 0I;
  #L321ee8.  v0.`g3.n.E` @type ^`boolean` := v1 @kind boolean;
  #L321eec.  v0.`g3.n.F` @type ^`boolean` := v1 @kind boolean;
  #L321ef0.  v1:= -4.9E-324D;
  #L321efa.  v0.`g3.n.O` @type ^`long` := v1 @kind wide;
  #L321efe.  v1:= v0.`g3.n.H` @type ^`int`;
  #L321f02.  if v1 == 0 then goto L321f0e;
  #L321f06.  call `Z`(v0) @signature `Lg3/n;.Z:()V` @kind direct;
  #L321f0c.  goto L321f2a;
  #L321f0e.  call `X`(v0) @signature `Lg3/n;.X:()V` @kind direct;
  #L321f14.  v1:= v0.`g3.n.J` @type ^`g3.h` @kind object;
  #L321f18.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L321f1e.  v1:= temp @kind object;
  #L321f20.  v1:= (`g3.h`) v1 @kind object;
  #L321f24.  call `flush`(v1) @signature `Ly1/d;.flush:()V` @kind interface;
  #L321f2a.  return @kind void;
}
procedure `void` `O`(`g3.n` v0 @kind this, `v1.j1`[] v1 @kind object, `long` v2 , `long` v4 ) @signature `Lg3/n;.O:([Lv1/j1;JJ)V` @AccessFlag PROTECTED {
    temp;

  #L321f3c.  v2:= 0I;
  #L321f3e.  v1:= v1[v2] @kind object;
  #L321f42.  v0.`g3.n.I` @type ^`v1.j1` := v1 @kind object;
  #L321f46.  v1:= v0.`g3.n.J` @type ^`g3.h` @kind object;
  #L321f4a.  if v1 == 0 then goto L321f56;
  #L321f4e.  v1:= 1I;
  #L321f50.  v0.`g3.n.H` @type ^`int` := v1;
  #L321f54.  goto L321f5c;
  #L321f56.  call `V`(v0) @signature `Lg3/n;.V:()V` @kind direct;
  #L321f5c.  return @kind void;
}
procedure `int` `a`(`g3.n` v1 @kind this, `v1.j1` v2 @kind object) @signature `Lg3/n;.a:(Lv1/j1;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L321c90.  v0:= v1.`g3.n.C` @type ^`g3.j` @kind object;
  #L321c94.  call temp:= `a`(v0, v2) @signature `Lg3/j;.a:(Lv1/j1;)Z` @kind interface;
  #L321c9a.  v0:= temp;
  #L321c9c.  if v0 == 0 then goto L321cb8;
  #L321ca0.  v2:= v2.`v1.j1.S` @type ^`int`;
  #L321ca4.  if v2 != 0 then goto L321cac;
  #L321ca8.  v2:= 4I;
  #L321caa.  goto L321cae;
  #L321cac.  v2:= 2I;
  #L321cae.  call temp:= `a`(v2) @signature `Lv1/s2;.a:(I)I` @kind static;
  #L321cb4.  v2:= temp;
  #L321cb6.  return v2;
  #L321cb8.  v2:= v2.`v1.j1.z` @type ^`java.lang.String` @kind object;
  #L321cbc.  call temp:= `r`(v2) @signature `Ls3/u;.r:(Ljava/lang/String;)Z` @kind static;
  #L321cc2.  v2:= temp;
  #L321cc4.  if v2 == 0 then goto L321cd4;
  #L321cc8.  v2:= 1I;
  #L321cca.  call temp:= `a`(v2) @signature `Lv1/s2;.a:(I)I` @kind static;
  #L321cd0.  v2:= temp;
  #L321cd2.  return v2;
  #L321cd4.  v2:= 0I;
  #L321cd6.  goto L321cca;
}
procedure `void` `a0`(`g3.n` v1 @kind this, `long` v2 ) @signature `Lg3/n;.a0:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3222b0.  call temp:= `u`(v1) @signature `Lv1/f;.u:()Z` @kind virtual;
  #L3222b6.  v0:= temp;
  #L3222b8.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L3222be.  v1.`g3.n.O` @type ^`long` := v2 @kind wide;
  #L3222c2.  return @kind void;
}
procedure `boolean` `b`(`g3.n` v1 @kind this) @signature `Lg3/n;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L321c64.  v0:= v1.`g3.n.F` @type ^`boolean` @kind boolean;
  #L321c68.  return v0;
}
procedure `java.lang.String` `d`(`g3.n` v1 @kind this) @signature `Lg3/n;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L321ce8.  v0:= "TextRenderer" @kind object;
  #L321cec.  return v0 @kind object;
}
procedure `boolean` `h`(`g3.n` v1 @kind this) @signature `Lg3/n;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L321c7c.  v0:= 1I;
  #L321c7e.  return v0;
}
procedure `boolean` `handleMessage`(`g3.n` v1 @kind this, `android.os.Message` v2 @kind object) @signature `Lg3/n;.handleMessage:(Landroid/os/Message;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L321c2c.  v0:= v2.`android.os.Message.what` @type ^`int`;
  #L321c30.  if v0 != 0 then goto L321c46;
  #L321c34.  v2:= v2.`android.os.Message.obj` @type ^`java.lang.Object` @kind object;
  #L321c38.  v2:= (`java.util.List`) v2 @kind object;
  #L321c3c.  call `W`(v1, v2) @signature `Lg3/n;.W:(Ljava/util/List;)V` @kind direct;
  #L321c42.  v2:= 1I;
  #L321c44.  return v2;
  #L321c46.  v2:= new `java.lang.IllegalStateException`;
  #L321c4a.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L321c50.  throw v2;
}
procedure `void` `n`(`g3.n` v8 @kind this, `long` v9 , `long` v11 ) @signature `Lg3/n;.n:(JJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L321ff0.  call temp:= `u`(v8) @signature `Lv1/f;.u:()Z` @kind virtual;
  #L321ff6.  v11:= temp;
  #L321ff8.  v12:= 1I;
  #L321ffa.  if v11 == 0 then goto L322026;
  #L321ffe.  v0:= v8.`g3.n.O` @type ^`long` @kind wide;
  #L322002.  v2:= -4.9E-324D;
  #L32200c.  v11:= lcmp(v0, v2);
  #L322010.  if v11 == 0 then goto L322026;
  #L322014.  v11:= lcmp(v9, v0);
  #L322018.  if v11 < 0 then goto L322026;
  #L32201c.  call `X`(v8) @signature `Lg3/n;.X:()V` @kind direct;
  #L322022.  v8.`g3.n.F` @type ^`boolean` := v12 @kind boolean;
  #L322026.  v11:= v8.`g3.n.F` @type ^`boolean` @kind boolean;
  #L32202a.  if v11 == 0 then goto L322030;
  #L32202e.  return @kind void;
  #L322030.  v11:= v8.`g3.n.M` @type ^`g3.l` @kind object;
  #L322034.  if v11 != 0 then goto L32207a;
  #L322038.  v11:= v8.`g3.n.J` @type ^`g3.h` @kind object;
  #L32203c.  call temp:= `e`(v11) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L322042.  v11:= temp @kind object;
  #L322044.  v11:= (`g3.h`) v11 @kind object;
  #L322048.  call `b`(v11, v9) @signature `Lg3/h;.b:(J)V` @kind interface;
  #L32204e.  v11:= v8.`g3.n.J` @type ^`g3.h` @kind object;
  #L322052.  call temp:= `e`(v11) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L322058.  v11:= temp @kind object;
  #L32205a.  v11:= (`g3.h`) v11 @kind object;
  #L32205e.  call temp:= `d`(v11) @signature `Ly1/d;.d:()Ljava/lang/Object;` @kind interface;
  #L322064.  v11:= temp @kind object;
  #L322066.  v11:= (`g3.l`) v11 @kind object;
  #L32206a.  v8.`g3.n.M` @type ^`g3.l` := v11 @kind object;
  #L32206e.  goto L32207a;
  #L322070.  v9:= Exception @type ^`g3.i` @kind object;
  #L322072.  call `U`(v8, v9) @signature `Lg3/n;.U:(Lg3/i;)V` @kind direct;
  #L322078.  return @kind void;
  #L32207a.  call temp:= `getState`(v8) @signature `Lv1/f;.getState:()I` @kind virtual;
  #L322080.  v11:= temp;
  #L322082.  v0:= 2I;
  #L322084.  if v11 == v0 then goto L32208a;
  #L322088.  return @kind void;
  #L32208a.  v11:= v8.`g3.n.L` @type ^`g3.l` @kind object;
  #L32208e.  v1:= 0I;
  #L322090.  if v11 == 0 then goto L3220bc;
  #L322094.  call temp:= `T`(v8) @signature `Lg3/n;.T:()J` @kind direct;
  #L32209a.  v2:= temp @kind wide;
  #L32209c.  v11:= 0I;
  #L32209e.  v4:= lcmp(v2, v9);
  #L3220a2.  if v4 > 0 then goto L3220be;
  #L3220a6.  v11:= v8.`g3.n.N` @type ^`int`;
  #L3220aa.  v11:= v11 + v12 @kind int;
  #L3220ac.  v8.`g3.n.N` @type ^`int` := v11;
  #L3220b0.  call temp:= `T`(v8) @signature `Lg3/n;.T:()J` @kind direct;
  #L3220b6.  v2:= temp @kind wide;
  #L3220b8.  v11:= 1I;
  #L3220ba.  goto L32209e;
  #L3220bc.  v11:= 0I;
  #L3220be.  v2:= v8.`g3.n.M` @type ^`g3.l` @kind object;
  #L3220c2.  v3:= 0I;
  #L3220c4.  if v2 == 0 then goto L32213e;
  #L3220c8.  call temp:= `t`(v2) @signature `Ly1/a;.t:()Z` @kind virtual;
  #L3220ce.  v4:= temp;
  #L3220d0.  if v4 == 0 then goto L32210e;
  #L3220d4.  if v11 != 0 then goto L32213e;
  #L3220d8.  call temp:= `T`(v8) @signature `Lg3/n;.T:()J` @kind direct;
  #L3220de.  v4:= temp @kind wide;
  #L3220e0.  v6:= 9223372036854775807L;
  #L3220ea.  v2:= lcmp(v4, v6);
  #L3220ee.  if v2 != 0 then goto L32213e;
  #L3220f2.  v2:= v8.`g3.n.H` @type ^`int`;
  #L3220f6.  if v2 != v0 then goto L322102;
  #L3220fa.  call `Z`(v8) @signature `Lg3/n;.Z:()V` @kind direct;
  #L322100.  goto L32213e;
  #L322102.  call `X`(v8) @signature `Lg3/n;.X:()V` @kind direct;
  #L322108.  v8.`g3.n.F` @type ^`boolean` := v12 @kind boolean;
  #L32210c.  goto L32213e;
  #L32210e.  v4:= v2.`y1.h.p` @type ^`long` @kind wide;
  #L322112.  v6:= lcmp(v4, v9);
  #L322116.  if v6 > 0 then goto L32213e;
  #L32211a.  v11:= v8.`g3.n.L` @type ^`g3.l` @kind object;
  #L32211e.  if v11 == 0 then goto L322128;
  #L322122.  call `D`(v11) @signature `Ly1/h;.D:()V` @kind virtual;
  #L322128.  call temp:= `c`(v2, v9) @signature `Lg3/l;.c:(J)I` @kind virtual;
  #L32212e.  v11:= temp;
  #L322130.  v8.`g3.n.N` @type ^`int` := v11;
  #L322134.  v8.`g3.n.L` @type ^`g3.l` := v2 @kind object;
  #L322138.  v8.`g3.n.M` @type ^`g3.l` := v3 @kind object;
  #L32213c.  v11:= 1I;
  #L32213e.  if v11 == 0 then goto L32215e;
  #L322142.  v11:= v8.`g3.n.L` @type ^`g3.l` @kind object;
  #L322146.  call temp:= `e`(v11) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L32214c.  v11:= v8.`g3.n.L` @type ^`g3.l` @kind object;
  #L322150.  call temp:= `e`(v11, v9) @signature `Lg3/l;.e:(J)Ljava/util/List;` @kind virtual;
  #L322156.  v9:= temp @kind object;
  #L322158.  call `b0`(v8, v9) @signature `Lg3/n;.b0:(Ljava/util/List;)V` @kind direct;
  #L32215e.  v9:= v8.`g3.n.H` @type ^`int`;
  #L322162.  if v9 != v0 then goto L322168;
  #L322166.  return @kind void;
  #L322168.  v9:= v8.`g3.n.E` @type ^`boolean` @kind boolean;
  #L32216c.  if v9 != 0 then goto L322262;
  #L322170.  v9:= v8.`g3.n.K` @type ^`g3.k` @kind object;
  #L322174.  if v9 != 0 then goto L32219e;
  #L322178.  v9:= v8.`g3.n.J` @type ^`g3.h` @kind object;
  #L32217c.  call temp:= `e`(v9) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L322182.  v9:= temp @kind object;
  #L322184.  v9:= (`g3.h`) v9 @kind object;
  #L322188.  call temp:= `e`(v9) @signature `Ly1/d;.e:()Ljava/lang/Object;` @kind interface;
  #L32218e.  v9:= temp @kind object;
  #L322190.  v9:= (`g3.k`) v9 @kind object;
  #L322194.  if v9 != 0 then goto L32219a;
  #L322198.  return @kind void;
  #L32219a.  v8.`g3.n.K` @type ^`g3.k` := v9 @kind object;
  #L32219e.  v10:= v8.`g3.n.H` @type ^`int`;
  #L3221a2.  if v10 != v12 then goto L3221ce;
  #L3221a6.  v10:= 4I;
  #L3221a8.  call `B`(v9, v10) @signature `Ly1/a;.B:(I)V` @kind virtual;
  #L3221ae.  v10:= v8.`g3.n.J` @type ^`g3.h` @kind object;
  #L3221b2.  call temp:= `e`(v10) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3221b8.  v10:= temp @kind object;
  #L3221ba.  v10:= (`g3.h`) v10 @kind object;
  #L3221be.  call `c`(v10, v9) @signature `Ly1/d;.c:(Ljava/lang/Object;)V` @kind interface;
  #L3221c4.  v8.`g3.n.K` @type ^`g3.k` := v3 @kind object;
  #L3221c8.  v8.`g3.n.H` @type ^`int` := v0;
  #L3221cc.  return @kind void;
  #L3221ce.  v10:= v8.`g3.n.D` @type ^`v1.k1` @kind object;
  #L3221d2.  call temp:= `P`(v8, v10, v9, v1) @signature `Lv1/f;.P:(Lv1/k1;Ly1/g;I)I` @kind virtual;
  #L3221d8.  v10:= temp;
  #L3221da.  v11:= -4I;
  #L3221dc.  if v10 != v11 then goto L322252;
  #L3221e0.  call temp:= `t`(v9) @signature `Ly1/a;.t:()Z` @kind virtual;
  #L3221e6.  v10:= temp;
  #L3221e8.  if v10 == 0 then goto L3221f6;
  #L3221ec.  v8.`g3.n.E` @type ^`boolean` := v12 @kind boolean;
  #L3221f0.  v8.`g3.n.G` @type ^`boolean` := v1 @kind boolean;
  #L3221f4.  goto L32222e;
  #L3221f6.  v10:= v8.`g3.n.D` @type ^`v1.k1` @kind object;
  #L3221fa.  v10:= v10.`v1.k1.b` @type ^`v1.j1` @kind object;
  #L3221fe.  if v10 != 0 then goto L322204;
  #L322202.  return @kind void;
  #L322204.  v10:= v10.`v1.j1.D` @type ^`long` @kind wide;
  #L322208.  v9.`g3.k.w` @type ^`long` := v10 @kind wide;
  #L32220c.  call `I`(v9) @signature `Ly1/g;.I:()V` @kind virtual;
  #L322212.  v10:= v8.`g3.n.G` @type ^`boolean` @kind boolean;
  #L322216.  call temp:= `x`(v9) @signature `Ly1/a;.x:()Z` @kind virtual;
  #L32221c.  v11:= temp;
  #L32221e.  if v11 != 0 then goto L322226;
  #L322222.  v11:= 1I;
  #L322224.  goto L322228;
  #L322226.  v11:= 0I;
  #L322228.  v10:= v10 ^& v11 @kind int;
  #L32222a.  v8.`g3.n.G` @type ^`boolean` := v10 @kind boolean;
  #L32222e.  v10:= v8.`g3.n.G` @type ^`boolean` @kind boolean;
  #L322232.  if v10 != 0 then goto L322168;
  #L322236.  v10:= v8.`g3.n.J` @type ^`g3.h` @kind object;
  #L32223a.  call temp:= `e`(v10) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L322240.  v10:= temp @kind object;
  #L322242.  v10:= (`g3.h`) v10 @kind object;
  #L322246.  call `c`(v10, v9) @signature `Ly1/d;.c:(Ljava/lang/Object;)V` @kind interface;
  #L32224c.  v8.`g3.n.K` @type ^`g3.k` := v3 @kind object;
  #L322250.  goto L322168;
  #L322252.  v9:= -3I;
  #L322254.  if v10 != v9 then goto L322168;
  #L322258.  return @kind void;
  #L32225a.  v9:= Exception @type ^`g3.i` @kind object;
  #L32225c.  call `U`(v8, v9) @signature `Lg3/n;.U:(Lg3/i;)V` @kind direct;
  #L322262.  return @kind void;
  catch `g3.i` @[L32204e..L32206e] goto L322070;
  catch `g3.i` @[L322168..L322250] goto L32225a;
}
