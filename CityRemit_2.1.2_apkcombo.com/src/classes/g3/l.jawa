record `g3.l` @kind class @AccessFlag PUBLIC_ABSTRACT extends `y1.h` @kind class, `g3.g` @kind interface {
  `g3.g` `g3.l.q` @AccessFlag PRIVATE;
  `long` `g3.l.r` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`g3.l` v0 @kind this) @signature `Lg3/l;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L321bc0.  call `<init>`(v0) @signature `Ly1/h;.<init>:()V` @kind direct;
  #L321bc6.  return @kind void;
}
procedure `void` `F`(`g3.l` v2 @kind this, `long` v3 , `g3.g` v5 @kind object, `long` v6 ) @signature `Lg3/l;.F:(JLg3/g;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L321bf8.  v2.`y1.h.p` @type ^`long` := v3 @kind wide;
  #L321bfc.  v2.`g3.l.q` @type ^`g3.g` := v5 @kind object;
  #L321c00.  v0:= 9223372036854775807L;
  #L321c0a.  v5:= lcmp(v6, v0);
  #L321c0e.  if v5 != 0 then goto L321c14;
  #L321c12.  goto L321c16;
  #L321c14.  v3:= v6 @kind wide;
  #L321c16.  v2.`g3.l.r` @type ^`long` := v3 @kind wide;
  #L321c1a.  return @kind void;
}
procedure `int` `c`(`g3.l` v3 @kind this, `long` v4 ) @signature `Lg3/l;.c:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L321b30.  v0:= v3.`g3.l.q` @type ^`g3.g` @kind object;
  #L321b34.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L321b3a.  v0:= temp @kind object;
  #L321b3c.  v0:= (`g3.g`) v0 @kind object;
  #L321b40.  v1:= v3.`g3.l.r` @type ^`long` @kind wide;
  #L321b44.  v4:= v4 - v1 @kind long;
  #L321b46.  call temp:= `c`(v0, v4) @signature `Lg3/g;.c:(J)I` @kind interface;
  #L321b4c.  v4:= temp;
  #L321b4e.  return v4;
}
procedure `long` `d`(`g3.l` v4 @kind this, `int` v5 ) @signature `Lg3/l;.d:(I)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L321b90.  v0:= v4.`g3.l.q` @type ^`g3.g` @kind object;
  #L321b94.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L321b9a.  v0:= temp @kind object;
  #L321b9c.  v0:= (`g3.g`) v0 @kind object;
  #L321ba0.  call temp:= `d`(v0, v5) @signature `Lg3/g;.d:(I)J` @kind interface;
  #L321ba6.  v0:= temp @kind wide;
  #L321ba8.  v2:= v4.`g3.l.r` @type ^`long` @kind wide;
  #L321bac.  v0:= v0 + v2 @kind long;
  #L321bae.  return v0 @kind wide;
}
procedure `java.util.List` `e`(`g3.l` v3 @kind this, `long` v4 ) @signature `Lg3/l;.e:(J)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L321b60.  v0:= v3.`g3.l.q` @type ^`g3.g` @kind object;
  #L321b64.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L321b6a.  v0:= temp @kind object;
  #L321b6c.  v0:= (`g3.g`) v0 @kind object;
  #L321b70.  v1:= v3.`g3.l.r` @type ^`long` @kind wide;
  #L321b74.  v4:= v4 - v1 @kind long;
  #L321b76.  call temp:= `e`(v0, v4) @signature `Lg3/g;.e:(J)Ljava/util/List;` @kind interface;
  #L321b7c.  v4:= temp @kind object;
  #L321b7e.  return v4 @kind object;
}
procedure `int` `h`(`g3.l` v1 @kind this) @signature `Lg3/l;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L321b04.  v0:= v1.`g3.l.q` @type ^`g3.g` @kind object;
  #L321b08.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L321b0e.  v0:= temp @kind object;
  #L321b10.  v0:= (`g3.g`) v0 @kind object;
  #L321b14.  call temp:= `h`(v0) @signature `Lg3/g;.h:()I` @kind interface;
  #L321b1a.  v0:= temp;
  #L321b1c.  return v0;
}
procedure `void` `j`(`g3.l` v1 @kind this) @signature `Lg3/l;.j:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L321bd8.  call `j`(v1) @signature `Ly1/a;.j:()V` @kind super;
  #L321bde.  v0:= 0I;
  #L321be0.  v1.`g3.l.q` @type ^`g3.g` := v0 @kind object;
  #L321be4.  return @kind void;
}
