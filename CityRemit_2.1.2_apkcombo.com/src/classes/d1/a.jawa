record `d1.a` @kind class @AccessFlag PUBLIC_FINAL extends `c1.a` @kind interface {
  `int` `d1.a.a` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Bitmap$CompressFormat` `d1.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`d1.a` v1 @kind this, `int` v2 ) @signature `Ld1/a;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f1c6c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f1c72.  v1.`d1.a.a` @type ^`int` := v2;
  #L2f1c76.  call temp:= `getType`(v1) @signature `Ld1/a;.getType:()I` @kind virtual;
  #L2f1c7c.  v2:= temp;
  #L2f1c7e.  v0:= 1I;
  #L2f1c80.  call temp:= `getType`(v1) @signature `Ld1/a;.getType:()I` @kind virtual;
  #L2f1c86.  v2:= temp;
  #L2f1c88.  if v2 == v0 then goto L2f1c9e;
  #L2f1c8c.  v0:= 3I;
  #L2f1c8e.  if v2 == v0 then goto L2f1c98;
  #L2f1c92.  v2:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L2f1c96.  goto L2f1ca2;
  #L2f1c98.  v2:= `@@android.graphics.Bitmap$CompressFormat.WEBP` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L2f1c9c.  goto L2f1ca2;
  #L2f1c9e.  v2:= `@@android.graphics.Bitmap$CompressFormat.PNG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L2f1ca2.  v1.`d1.a.b` @type ^`android.graphics.Bitmap$CompressFormat` := v2 @kind object;
  #L2f1ca6.  return @kind void;
}
procedure `byte`[] `c`(`d1.a` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 , `int` v9 , `int` v10 , `int` v11 ) @signature `Ld1/a;.c:([BIIIII)[B` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2f1b18.  v0:= new `android.graphics.BitmapFactory$Options`;
  #L2f1b1c.  call `<init>`(v0) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L2f1b22.  v1:= 0I;
  #L2f1b24.  v0.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v1 @kind boolean;
  #L2f1b28.  v2:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2f1b2c.  v0.`android.graphics.BitmapFactory$Options.inPreferredConfig` @type ^`android.graphics.Bitmap$Config` := v2 @kind object;
  #L2f1b30.  v0.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v11;
  #L2f1b34.  v11:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2f1b38.  v2:= 1I;
  #L2f1b3a.  v3:= 23I;
  #L2f1b3e.  if v11 >= v3 then goto L2f1b46;
  #L2f1b42.  v0.`android.graphics.BitmapFactory$Options.inDither` @type ^`boolean` := v2 @kind boolean;
  #L2f1b46.  v11:= length @variable v6;
  #L2f1b48.  call temp:= `decodeByteArray`(v6, v1, v11, v0) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2f1b4e.  v6:= temp @kind object;
  #L2f1b50.  v11:= new `java.io.ByteArrayOutputStream`;
  #L2f1b54.  call `<init>`(v11) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L2f1b5a.  call temp:= `getWidth`(v6) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2f1b60.  v0:= temp;
  #L2f1b62.  v0:= (`float`) v0 @kind i2f;
  #L2f1b64.  call temp:= `getHeight`(v6) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2f1b6a.  v1:= temp;
  #L2f1b6c.  v1:= (`float`) v1 @kind i2f;
  #L2f1b6e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2f1b74.  v3:= temp @kind object;
  #L2f1b76.  v4:= "src width = " @kind object;
  #L2f1b7a.  call temp:= `j`(v4, v3) @signature `Lkotlin/jvm/internal/k;.j:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2f1b80.  v3:= temp @kind object;
  #L2f1b82.  call `a`(v3) @signature `Lf1/a;.a:(Ljava/lang/Object;)V` @kind static;
  #L2f1b88.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2f1b8e.  v3:= temp @kind object;
  #L2f1b90.  v4:= "src height = " @kind object;
  #L2f1b94.  call temp:= `j`(v4, v3) @signature `Lkotlin/jvm/internal/k;.j:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2f1b9a.  v3:= temp @kind object;
  #L2f1b9c.  call `a`(v3) @signature `Lf1/a;.a:(Ljava/lang/Object;)V` @kind static;
  #L2f1ba2.  v3:= "bitmap" @kind object;
  #L2f1ba6.  call `d`(v6, v3) @signature `Lkotlin/jvm/internal/k;.d:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2f1bac.  call temp:= `a`(v6, v7, v8) @signature `La1/a;.a:(Landroid/graphics/Bitmap;II)F` @kind static;
  #L2f1bb2.  v7:= temp;
  #L2f1bb4.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2f1bba.  v8:= temp @kind object;
  #L2f1bbc.  v3:= "scale = " @kind object;
  #L2f1bc0.  call temp:= `j`(v3, v8) @signature `Lkotlin/jvm/internal/k;.j:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2f1bc6.  v8:= temp @kind object;
  #L2f1bc8.  call `a`(v8) @signature `Lf1/a;.a:(Ljava/lang/Object;)V` @kind static;
  #L2f1bce.  v0:= v0 / v7 @kind float;
  #L2f1bd0.  v1:= v1 / v7 @kind float;
  #L2f1bd2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2f1bd8.  v7:= temp @kind object;
  #L2f1bda.  v8:= "dst width = " @kind object;
  #L2f1bde.  call temp:= `j`(v8, v7) @signature `Lkotlin/jvm/internal/k;.j:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2f1be4.  v7:= temp @kind object;
  #L2f1be6.  call `a`(v7) @signature `Lf1/a;.a:(Ljava/lang/Object;)V` @kind static;
  #L2f1bec.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2f1bf2.  v7:= temp @kind object;
  #L2f1bf4.  v8:= "dst height = " @kind object;
  #L2f1bf8.  call temp:= `j`(v8, v7) @signature `Lkotlin/jvm/internal/k;.j:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2f1bfe.  v7:= temp @kind object;
  #L2f1c00.  call `a`(v7) @signature `Lf1/a;.a:(Ljava/lang/Object;)V` @kind static;
  #L2f1c06.  v7:= (`int`) v0 @kind f2i;
  #L2f1c08.  v8:= (`int`) v1 @kind f2i;
  #L2f1c0a.  call temp:= `createScaledBitmap`(v6, v7, v8, v2) @signature `Landroid/graphics/Bitmap;.createScaledBitmap:(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;` @kind static;
  #L2f1c10.  v6:= temp @kind object;
  #L2f1c12.  v7:= "createScaledBitmap(\n    â€¦           true\n        )" @kind object;
  #L2f1c16.  call `d`(v6, v7) @signature `Lkotlin/jvm/internal/k;.d:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2f1c1c.  call temp:= `f`(v6, v10) @signature `La1/a;.f:(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @kind static;
  #L2f1c22.  v6:= temp @kind object;
  #L2f1c24.  v7:= v5.`d1.a.b` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L2f1c28.  call temp:= `compress`(v6, v7, v9, v11) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L2f1c2e.  call temp:= `toByteArray`(v11) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L2f1c34.  v6:= temp @kind object;
  #L2f1c36.  v7:= "outputStream.toByteArray()" @kind object;
  #L2f1c3a.  call `d`(v6, v7) @signature `Lkotlin/jvm/internal/k;.d:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2f1c40.  return v6 @kind object;
}
procedure `void` `a`(`d1.a` v14 @kind this, `android.content.Context` v15 @kind object, `java.lang.String` v16 @kind object, `java.io.OutputStream` v17 @kind object, `int` v18 , `int` v19 , `int` v20 , `int` v21 , `boolean` v22 , `int` v23 , `int` v24 ) @signature `Ld1/a;.a:(Landroid/content/Context;Ljava/lang/String;Ljava/io/OutputStream;IIIIZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L2f1d54.  v1:= v15 @kind object;
  #L2f1d56.  v2:= v16 @kind object;
  #L2f1d5a.  v3:= v17 @kind object;
  #L2f1d5e.  v0:= v23;
  #L2f1d62.  v4:= "context" @kind object;
  #L2f1d66.  call `e`(v15, v4) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2f1d6c.  v4:= "path" @kind object;
  #L2f1d70.  call `e`(v2, v4) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2f1d76.  v4:= "outputStream" @kind object;
  #L2f1d7a.  call `e`(v3, v4) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2f1d80.  if v24 > 0 then goto L2f1d86;
  #L2f1d84.  return @kind void;
  #L2f1d86.  v4:= 1I;
  #L2f1d88.  v5:= new `android.graphics.BitmapFactory$Options`;
  #L2f1d8c.  call `<init>`(v5) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L2f1d92.  v6:= 0I;
  #L2f1d94.  v5.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v6 @kind boolean;
  #L2f1d98.  v6:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2f1d9c.  v5.`android.graphics.BitmapFactory$Options.inPreferredConfig` @type ^`android.graphics.Bitmap$Config` := v6 @kind object;
  #L2f1da0.  v5.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v0;
  #L2f1da4.  v6:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2f1da8.  v7:= 23I;
  #L2f1dac.  if v6 >= v7 then goto L2f1db4;
  #L2f1db0.  v5.`android.graphics.BitmapFactory$Options.inDither` @type ^`boolean` := v4 @kind boolean;
  #L2f1db4.  call temp:= `decodeFile`(v2, v5) @signature `Landroid/graphics/BitmapFactory;.decodeFile:(Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2f1dba.  v8:= temp @kind object;
  #L2f1dbc.  v5:= "bitmap" @kind object;
  #L2f1dc0.  call `d`(v8, v5) @signature `Lkotlin/jvm/internal/k;.d:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2f1dc6.  call temp:= `getType`(v14) @signature `Ld1/a;.getType:()I` @kind virtual;
  #L2f1dcc.  v13:= temp;
  #L2f1dce.  v9:= v18;
  #L2f1dd2.  v10:= v19;
  #L2f1dd6.  v11:= v20;
  #L2f1dda.  v12:= v21;
  #L2f1dde.  call temp:= `c`(v8, v9, v10, v11, v12, v13) @signature `La1/a;.c:(Landroid/graphics/Bitmap;IIIII)[B` @kind static;
  #L2f1de4.  v5:= temp @kind object;
  #L2f1de6.  if v22 == 0 then goto L2f1e2a;
  #L2f1dea.  v11:= v14 @kind object;
  #L2f1dec.  v6:= v11.`d1.a.b` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L2f1df0.  v7:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L2f1df4.  if v6 != v7 then goto L2f1e2c;
  #L2f1df8.  v6:= new `java.io.ByteArrayOutputStream`;
  #L2f1dfc.  call `<init>`(v6) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L2f1e02.  call `write`(v6, v5) @signature `Ljava/io/ByteArrayOutputStream;.write:([B)V` @kind virtual;
  #L2f1e08.  v5:= new `z0.b`;
  #L2f1e0c.  call `<init>`(v5, v2) @signature `Lz0/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f1e12.  call temp:= `c`(v5, v15, v6) @signature `Lz0/b;.c:(Landroid/content/Context;Ljava/io/ByteArrayOutputStream;)Ljava/io/ByteArrayOutputStream;` @kind virtual;
  #L2f1e18.  v5:= temp @kind object;
  #L2f1e1a.  call temp:= `toByteArray`(v5) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L2f1e20.  v5:= temp @kind object;
  #L2f1e22.  call `write`(v3, v5) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L2f1e28.  goto L2f1e6a;
  #L2f1e2a.  v11:= v14 @kind object;
  #L2f1e2c.  call `write`(v3, v5) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L2f1e32.  goto L2f1e6a;
  #L2f1e34.  v11:= v14 @kind object;
  #L2f1e36.  call `gc`() @signature `Ljava/lang/System;.gc:()V` @kind static;
  #L2f1e3c.  v9:= v0 * 2;
  #L2f1e40.  v10:= v24 + -1;
  #L2f1e44.  v0:= v14 @kind object;
  #L2f1e46.  v1:= v15 @kind object;
  #L2f1e48.  v2:= v16 @kind object;
  #L2f1e4c.  v3:= v17 @kind object;
  #L2f1e50.  v4:= v18;
  #L2f1e54.  v5:= v19;
  #L2f1e58.  v6:= v20;
  #L2f1e5c.  v7:= v21;
  #L2f1e60.  v8:= v22;
  #L2f1e64.  call `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Ld1/a;.a:(Landroid/content/Context;Ljava/lang/String;Ljava/io/OutputStream;IIIIZII)V` @kind virtual;
  #L2f1e6a.  return @kind void;
  catch `java.lang.OutOfMemoryError` @[L2f1d88..L2f1de6] goto L2f1e34;
  catch `java.lang.OutOfMemoryError` @[L2f1dec..L2f1e32] goto L2f1e36;
}
procedure `void` `b`(`d1.a` v10 @kind this, `android.content.Context` v11 @kind object, `byte`[] v12 @kind object, `java.io.OutputStream` v13 @kind object, `int` v14 , `int` v15 , `int` v16 , `int` v17 , `boolean` v18 , `int` v19 ) @signature `Ld1/a;.b:(Landroid/content/Context;[BLjava/io/OutputStream;IIIIZI)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2f1cb8.  v0:= v11 @kind object;
  #L2f1cba.  v8:= v12 @kind object;
  #L2f1cbc.  v9:= v13 @kind object;
  #L2f1cbe.  v1:= "context" @kind object;
  #L2f1cc2.  call `e`(v11, v1) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2f1cc8.  v1:= "byteArray" @kind object;
  #L2f1ccc.  call `e`(v12, v1) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2f1cd2.  v1:= "outputStream" @kind object;
  #L2f1cd6.  call `e`(v13, v1) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2f1cdc.  v1:= v10 @kind object;
  #L2f1cde.  v2:= v12 @kind object;
  #L2f1ce0.  v3:= v14;
  #L2f1ce2.  v4:= v15;
  #L2f1ce4.  v5:= v16;
  #L2f1ce8.  v6:= v17;
  #L2f1cec.  v7:= v19;
  #L2f1cf0.  call temp:= `c`(v1, v2, v3, v4, v5, v6, v7) @signature `Ld1/a;.c:([BIIIII)[B` @kind direct;
  #L2f1cf6.  v1:= temp @kind object;
  #L2f1cf8.  v2:= v10 @kind object;
  #L2f1cfa.  if v18 == 0 then goto L2f1d3c;
  #L2f1cfe.  v3:= v2.`d1.a.b` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L2f1d02.  v4:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L2f1d06.  if v3 != v4 then goto L2f1d3c;
  #L2f1d0a.  v3:= new `java.io.ByteArrayOutputStream`;
  #L2f1d0e.  call `<init>`(v3) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L2f1d14.  call `write`(v3, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:([B)V` @kind virtual;
  #L2f1d1a.  v1:= new `z0.b`;
  #L2f1d1e.  call `<init>`(v1, v12) @signature `Lz0/b;.<init>:([B)V` @kind direct;
  #L2f1d24.  call temp:= `c`(v1, v11, v3) @signature `Lz0/b;.c:(Landroid/content/Context;Ljava/io/ByteArrayOutputStream;)Ljava/io/ByteArrayOutputStream;` @kind virtual;
  #L2f1d2a.  v0:= temp @kind object;
  #L2f1d2c.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L2f1d32.  v0:= temp @kind object;
  #L2f1d34.  call `write`(v13, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L2f1d3a.  goto L2f1d42;
  #L2f1d3c.  call `write`(v13, v1) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L2f1d42.  return @kind void;
}
procedure `int` `getType`(`d1.a` v1 @kind this) @signature `Ld1/a;.getType:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f1c54.  v0:= v1.`d1.a.a` @type ^`int`;
  #L2f1c58.  return v0;
}
