record `q4.w9` @kind class @AccessFlag PUBLIC_ABSTRACT extends `q4.s9` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface {
}
global `q4.c` `@@q4.w9.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lq4/w9;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4223c4.  v0:= new `q4.u9`;
  #L4223c8.  v1:= `@@q4.aa.s` @type ^`q4.w9` @kind object;
  #L4223cc.  v2:= 0I;
  #L4223ce.  call `<init>`(v0, v1, v2) @signature `Lq4/u9;.<init>:(Lq4/w9;I)V` @kind direct;
  #L4223d4.  `@@q4.w9.p` @type ^`q4.c` := v0 @kind object;
  #L4223d8.  return @kind void;
}
procedure `void` `<init>`(`q4.w9` v0 @kind this) @signature `Lq4/w9;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4223ec.  call `<init>`(v0) @signature `Lq4/s9;.<init>:()V` @kind direct;
  #L4223f2.  return @kind void;
}
procedure `q4.w9` `p`(`java.lang.Object`[] v1 @kind object) @signature `Lq4/w9;.p:([Ljava/lang/Object;)Lq4/w9;` @AccessFlag STATIC {
    temp;
    v0;

  #L422314.  v0:= length @variable v1;
  #L422316.  call temp:= `u`(v1, v0) @signature `Lq4/w9;.u:([Ljava/lang/Object;I)Lq4/w9;` @kind static;
  #L42231c.  v1:= temp @kind object;
  #L42231e.  return v1 @kind object;
}
procedure `q4.w9` `u`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Lq4/w9;.u:([Ljava/lang/Object;I)Lq4/w9;` @AccessFlag STATIC {
    temp;
    v0;

  #L422330.  if v2 != 0 then goto L42233a;
  #L422334.  v1:= `@@q4.aa.s` @type ^`q4.w9` @kind object;
  #L422338.  return v1 @kind object;
  #L42233a.  v0:= new `q4.aa`;
  #L42233e.  call `<init>`(v0, v1, v2) @signature `Lq4/aa;.<init>:([Ljava/lang/Object;I)V` @kind direct;
  #L422344.  return v0 @kind object;
}
procedure `q4.w9` `y`(`java.lang.Object` v3 @kind object) @signature `Lq4/w9;.y:(Ljava/lang/Object;)Lq4/w9;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L422358.  v0:= 1I;
  #L42235a.  v1:= new `java.lang.Object`[v0];
  #L42235e.  v2:= 0I;
  #L422360.  v1[v2]:= v3 @kind object;
  #L422364.  if v2 > 0 then goto L4223a8;
  #L422368.  v3:= v1[v2] @kind object;
  #L42236c.  if v3 == 0 then goto L422376;
  #L422370.  v2:= v2 + 1;
  #L422374.  goto L422364;
  #L422376.  v3:= new `java.lang.NullPointerException`;
  #L42237a.  v0:= new `java.lang.StringBuilder`;
  #L42237e.  v1:= 20I;
  #L422382.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L422388.  v1:= "at index " @kind object;
  #L42238c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L422392.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L422398.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42239e.  v0:= temp @kind object;
  #L4223a0.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4223a6.  throw v3;
  #L4223a8.  call temp:= `u`(v1, v0) @signature `Lq4/w9;.u:([Ljava/lang/Object;I)Lq4/w9;` @kind static;
  #L4223ae.  v3:= temp @kind object;
  #L4223b0.  return v3 @kind object;
}
procedure `q4.c` `G`(`q4.w9` v2 @kind this, `int` v3 ) @signature `Lq4/w9;.G:(I)Lq4/c;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L422290.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L422296.  v0:= temp;
  #L422298.  v1:= "index" @kind object;
  #L42229c.  call temp:= `b`(v3, v0, v1) @signature `Lq4/f4;.b:(IILjava/lang/String;)I` @kind static;
  #L4222a2.  call temp:= `isEmpty`(v2) @signature `Ljava/util/AbstractCollection;.isEmpty:()Z` @kind virtual;
  #L4222a8.  v0:= temp;
  #L4222aa.  if v0 == 0 then goto L4222b4;
  #L4222ae.  v3:= `@@q4.w9.p` @type ^`q4.c` @kind object;
  #L4222b2.  return v3 @kind object;
  #L4222b4.  v0:= new `q4.u9`;
  #L4222b8.  call `<init>`(v0, v2, v3) @signature `Lq4/u9;.<init>:(Lq4/w9;I)V` @kind direct;
  #L4222be.  return v0 @kind object;
}
procedure `void` `add`(`q4.w9` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lq4/w9;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L422404.  v1:= new `java.lang.UnsupportedOperationException`;
  #L422408.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L42240e.  throw v1;
}
procedure `boolean` `addAll`(`q4.w9` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Lq4/w9;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L421fdc.  v1:= new `java.lang.UnsupportedOperationException`;
  #L421fe0.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L421fe6.  throw v1;
}
procedure `int` `b`(`q4.w9` v2 @kind this, `java.lang.Object`[] v3 @kind object, `int` v4 ) @signature `Lq4/w9;.b:([Ljava/lang/Object;I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4221b4.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L4221ba.  v4:= temp;
  #L4221bc.  v0:= 0I;
  #L4221be.  if v0 >= v4 then goto L4221d4;
  #L4221c2.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4221c8.  v1:= temp @kind object;
  #L4221ca.  v3[v0]:= v1 @kind object;
  #L4221ce.  v0:= v0 + 1;
  #L4221d2.  goto L4221be;
  #L4221d4.  return v4;
}
procedure `boolean` `contains`(`q4.w9` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lq4/w9;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L421ff8.  call temp:= `indexOf`(v0, v1) @signature `Lq4/w9;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L421ffe.  v1:= temp;
  #L422000.  if v1 < 0 then goto L422008;
  #L422004.  v1:= 1I;
  #L422006.  return v1;
  #L422008.  v1:= 0I;
  #L42200a.  return v1;
}
procedure `boolean` `equals`(`q4.w9` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lq4/w9;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L42201c.  v0:= 1I;
  #L42201e.  v1:= 0I;
  #L422020.  if v7 != v6 then goto L422026;
  #L422024.  goto L4220d2;
  #L422026.  v2:= instanceof @variable v7 @type ^`java.util.List` @kind boolean;
  #L42202a.  if v2 != 0 then goto L422032;
  #L42202e.  v0:= 0I;
  #L422030.  goto L4220d2;
  #L422032.  v7:= (`java.util.List`) v7 @kind object;
  #L422036.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L42203c.  v2:= temp;
  #L42203e.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L422044.  v3:= temp;
  #L422046.  if v2 == v3 then goto L42204c;
  #L42204a.  goto L42202e;
  #L42204c.  v3:= instanceof @variable v7 @type ^`java.util.RandomAccess` @kind boolean;
  #L422050.  if v3 == 0 then goto L42207e;
  #L422054.  v3:= 0I;
  #L422056.  if v3 >= v2 then goto L4220d2;
  #L42205a.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L422060.  v4:= temp @kind object;
  #L422062.  call temp:= `get`(v7, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L422068.  v5:= temp @kind object;
  #L42206a.  call temp:= `a`(v4, v5) @signature `Lq4/b0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L422070.  v4:= temp;
  #L422072.  if v4 != 0 then goto L422078;
  #L422076.  goto L42202e;
  #L422078.  v3:= v3 + 1;
  #L42207c.  goto L422056;
  #L42207e.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L422084.  v2:= temp @kind object;
  #L422086.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42208c.  v7:= temp @kind object;
  #L42208e.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L422094.  v3:= temp;
  #L422096.  if v3 == 0 then goto L4220c6;
  #L42209a.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4220a0.  v3:= temp;
  #L4220a2.  if v3 != 0 then goto L4220a8;
  #L4220a6.  goto L42202e;
  #L4220a8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4220ae.  v3:= temp @kind object;
  #L4220b0.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4220b6.  v4:= temp @kind object;
  #L4220b8.  call temp:= `a`(v3, v4) @signature `Lq4/b0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4220be.  v3:= temp;
  #L4220c0.  if v3 != 0 then goto L42208e;
  #L4220c4.  goto L42202e;
  #L4220c6.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4220cc.  v7:= temp;
  #L4220ce.  if v7 != 0 then goto L42202e;
  #L4220d2.  return v0;
}
procedure `int` `hashCode`(`q4.w9` v4 @kind this) @signature `Lq4/w9;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4220e4.  call temp:= `size`(v4) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L4220ea.  v0:= temp;
  #L4220ec.  v1:= 1I;
  #L4220ee.  v2:= 0I;
  #L4220f0.  if v2 >= v0 then goto L422110;
  #L4220f4.  v1:= v1 * 31;
  #L4220f8.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4220fe.  v3:= temp @kind object;
  #L422100.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L422106.  v3:= temp;
  #L422108.  v1:= v1 + v3 @kind int;
  #L42210a.  v2:= v2 + 1;
  #L42210e.  goto L4220f0;
  #L422110.  return v1;
}
procedure `int` `indexOf`(`q4.w9` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lq4/w9;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L422124.  v0:= -1I;
  #L422126.  if v5 != 0 then goto L42212c;
  #L42212a.  return v0;
  #L42212c.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L422132.  v1:= temp;
  #L422134.  v2:= 0I;
  #L422136.  if v2 >= v1 then goto L422158;
  #L42213a.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L422140.  v3:= temp @kind object;
  #L422142.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L422148.  v3:= temp;
  #L42214a.  if v3 == 0 then goto L422152;
  #L42214e.  v0:= v2;
  #L422150.  goto L422158;
  #L422152.  v2:= v2 + 1;
  #L422156.  goto L422136;
  #L422158.  return v0;
}
procedure `java.util.Iterator` `iterator`(`q4.w9` v1 @kind this) @signature `Lq4/w9;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L422220.  v0:= 0I;
  #L422222.  call temp:= `G`(v1, v0) @signature `Lq4/w9;.G:(I)Lq4/c;` @kind virtual;
  #L422228.  v0:= temp @kind object;
  #L42222a.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`q4.w9` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lq4/w9;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L42216c.  v0:= -1I;
  #L42216e.  if v4 != 0 then goto L422174;
  #L422172.  return v0;
  #L422174.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L42217a.  v1:= temp;
  #L42217c.  v1:= v1 + v0 @kind int;
  #L42217e.  if v1 < 0 then goto L4221a0;
  #L422182.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L422188.  v2:= temp @kind object;
  #L42218a.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L422190.  v2:= temp;
  #L422192.  if v2 == 0 then goto L42219a;
  #L422196.  v0:= v1;
  #L422198.  goto L4221a0;
  #L42219a.  v1:= v1 + -1;
  #L42219e.  goto L42217e;
  #L4221a0.  return v0;
}
procedure `java.util.ListIterator` `listIterator`(`q4.w9` v1 @kind this) @signature `Lq4/w9;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L422258.  v0:= 0I;
  #L42225a.  call temp:= `G`(v1, v0) @signature `Lq4/w9;.G:(I)Lq4/c;` @kind virtual;
  #L422260.  v0:= temp @kind object;
  #L422262.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`q4.w9` v0 @kind this, `int` v1 ) @signature `Lq4/w9;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L422274.  call temp:= `G`(v0, v1) @signature `Lq4/w9;.G:(I)Lq4/c;` @kind virtual;
  #L42227a.  v1:= temp @kind object;
  #L42227c.  return v1 @kind object;
}
procedure `q4.w9` `n`(`q4.w9` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lq4/w9;.n:(II)Lq4/w9;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4222d0.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L4222d6.  v0:= temp;
  #L4222d8.  call `c`(v2, v3, v0) @signature `Lq4/f4;.c:(III)V` @kind static;
  #L4222de.  v3:= v3 - v2 @kind int;
  #L4222e0.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L4222e6.  v0:= temp;
  #L4222e8.  if v3 != v0 then goto L4222ee;
  #L4222ec.  return v1 @kind object;
  #L4222ee.  if v3 != 0 then goto L4222f8;
  #L4222f2.  v2:= `@@q4.aa.s` @type ^`q4.w9` @kind object;
  #L4222f6.  return v2 @kind object;
  #L4222f8.  v0:= new `q4.v9`;
  #L4222fc.  call `<init>`(v0, v1, v2, v3) @signature `Lq4/v9;.<init>:(Lq4/w9;II)V` @kind direct;
  #L422302.  return v0 @kind object;
}
procedure `java.lang.Object` `remove`(`q4.w9` v0 @kind this, `int` v1 ) @signature `Lq4/w9;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4221e8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L4221ec.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L4221f2.  throw v1;
}
procedure `java.lang.Object` `set`(`q4.w9` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lq4/w9;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L422204.  v1:= new `java.lang.UnsupportedOperationException`;
  #L422208.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L42220e.  throw v1;
}
procedure `java.util.List` `subList`(`q4.w9` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lq4/w9;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L42223c.  call temp:= `n`(v0, v1, v2) @signature `Lq4/w9;.n:(II)Lq4/w9;` @kind virtual;
  #L422242.  v1:= temp @kind object;
  #L422244.  return v1 @kind object;
}
