record `q4.f` @kind class @AccessFlag FINAL extends `java.io.OutputStream` @kind class {
  `long` `q4.f.o` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`q4.f` v2 @kind this) @signature `Lq4/f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L413b50.  call `<init>`(v2) @signature `Ljava/io/OutputStream;.<init>:()V` @kind direct;
  #L413b56.  v0:= 0L;
  #L413b5a.  v2.`q4.f.o` @type ^`long` := v0 @kind wide;
  #L413b5e.  return @kind void;
}
procedure `long` `a`(`q4.f` v2 @kind this) @signature `Lq4/f;.a:()J` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L413b38.  v0:= v2.`q4.f.o` @type ^`long` @kind wide;
  #L413b3c.  return v0 @kind wide;
}
procedure `void` `write`(`q4.f` v4 @kind this, `int` v5 ) @signature `Lq4/f;.write:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L413bd4.  v0:= v4.`q4.f.o` @type ^`long` @kind wide;
  #L413bd8.  v2:= 1L;
  #L413bdc.  v0:= v0 + v2 @kind long;
  #L413bde.  v4.`q4.f.o` @type ^`long` := v0 @kind wide;
  #L413be2.  return @kind void;
}
procedure `void` `write`(`q4.f` v4 @kind this, `byte`[] v5 @kind object) @signature `Lq4/f;.write:([B)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L413b70.  v0:= v4.`q4.f.o` @type ^`long` @kind wide;
  #L413b74.  v5:= length @variable v5;
  #L413b76.  v2:= (`long`) v5 @kind i2l;
  #L413b78.  v0:= v0 + v2 @kind long;
  #L413b7a.  v4.`q4.f.o` @type ^`long` := v0 @kind wide;
  #L413b7e.  return @kind void;
}
procedure `void` `write`(`q4.f` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lq4/f;.write:([BII)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L413b90.  if v4 < 0 then goto L413bb6;
  #L413b94.  v3:= length @variable v3;
  #L413b96.  if v4 > v3 then goto L413bb6;
  #L413b9a.  if v5 < 0 then goto L413bb6;
  #L413b9e.  v4:= v4 + v5 @kind int;
  #L413ba0.  if v4 > v3 then goto L413bb6;
  #L413ba4.  if v4 < 0 then goto L413bb6;
  #L413ba8.  v3:= v2.`q4.f.o` @type ^`long` @kind wide;
  #L413bac.  v0:= (`long`) v5 @kind i2l;
  #L413bae.  v3:= v3 + v0 @kind long;
  #L413bb0.  v2.`q4.f.o` @type ^`long` := v3 @kind wide;
  #L413bb4.  return @kind void;
  #L413bb6.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L413bba.  call `<init>`(v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L413bc0.  throw v3;
}
