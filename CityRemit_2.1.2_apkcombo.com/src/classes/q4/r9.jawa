record `q4.r9` @kind class @AccessFlag PUBLIC_FINAL {
}
global `q4.r9` `@@q4.r9.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`q4.r9` v0 @kind this) @signature `Lq4/r9;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L421c14.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L421c1a.  return @kind void;
}
procedure `q4.r9` `a`() @signature `Lq4/r9;.a:()Lq4/r9;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L421bcc.  v0:= constclass @type ^`q4.r9` @kind object;
  #L421bd0.  @monitorenter v0
  #L421bd2.  v1:= `@@q4.r9.a` @type ^`q4.r9` @kind object;
  #L421bd6.  if v1 != 0 then goto L421be8;
  #L421bda.  v1:= new `q4.r9`;
  #L421bde.  call `<init>`(v1) @signature `Lq4/r9;.<init>:()V` @kind direct;
  #L421be4.  `@@q4.r9.a` @type ^`q4.r9` := v1 @kind object;
  #L421be8.  v1:= `@@q4.r9.a` @type ^`q4.r9` @kind object;
  #L421bec.  @monitorexit v0
  #L421bee.  return v1 @kind object;
  #L421bf0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L421bf2.  @monitorexit v0
  #L421bf4.  throw v1;
  catch `java.lang.Throwable` @[L421bd2..L421bec] goto L421bf0;
}
procedure `boolean` `b`() @signature `Lq4/r9;.b:()Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L421bac.  v0:= "mlkit-dev-profiling" @kind object;
  #L421bb0.  call temp:= `a`(v0) @signature `Lq4/q9;.a:(Ljava/lang/String;)Z` @kind static;
  #L421bb6.  v0:= temp;
  #L421bb8.  return v0;
}
