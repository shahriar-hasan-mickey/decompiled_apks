record `q4.v8` @kind class @AccessFlag FINAL extends `q4.x8` @kind class {
  `java.lang.String` `q4.v8.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `q4.v8.b` @AccessFlag PRIVATE_FINAL;
  `int` `q4.v8.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`q4.v8` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `int` v3 , `q4.u8` v4 @kind object) @signature `Lq4/v8;.<init>:(Ljava/lang/String;ZILq4/u8;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L420e8c.  call `<init>`(v0) @signature `Lq4/x8;.<init>:()V` @kind direct;
  #L420e92.  v0.`q4.v8.a` @type ^`java.lang.String` := v1 @kind object;
  #L420e96.  v0.`q4.v8.b` @type ^`boolean` := v2 @kind boolean;
  #L420e9a.  v0.`q4.v8.c` @type ^`int` := v3;
  #L420e9e.  return @kind void;
}
procedure `int` `a`(`q4.v8` v1 @kind this) @signature `Lq4/v8;.a:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420de4.  v0:= v1.`q4.v8.c` @type ^`int`;
  #L420de8.  return v0;
}
procedure `java.lang.String` `b`(`q4.v8` v1 @kind this) @signature `Lq4/v8;.b:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420e74.  v0:= v1.`q4.v8.a` @type ^`java.lang.String` @kind object;
  #L420e78.  return v0 @kind object;
}
procedure `boolean` `c`(`q4.v8` v1 @kind this) @signature `Lq4/v8;.c:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420d80.  v0:= v1.`q4.v8.b` @type ^`boolean` @kind boolean;
  #L420d84.  return v0;
}
procedure `boolean` `equals`(`q4.v8` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lq4/v8;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L420d1c.  v0:= 1I;
  #L420d1e.  if v5 != v4 then goto L420d24;
  #L420d22.  return v0;
  #L420d24.  v1:= instanceof @variable v5 @type ^`q4.x8` @kind boolean;
  #L420d28.  v2:= 0I;
  #L420d2a.  if v1 == 0 then goto L420d6c;
  #L420d2e.  v5:= (`q4.x8`) v5 @kind object;
  #L420d32.  v1:= v4.`q4.v8.a` @type ^`java.lang.String` @kind object;
  #L420d36.  call temp:= `b`(v5) @signature `Lq4/x8;.b:()Ljava/lang/String;` @kind virtual;
  #L420d3c.  v3:= temp @kind object;
  #L420d3e.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L420d44.  v1:= temp;
  #L420d46.  if v1 == 0 then goto L420d6c;
  #L420d4a.  v1:= v4.`q4.v8.b` @type ^`boolean` @kind boolean;
  #L420d4e.  call temp:= `c`(v5) @signature `Lq4/x8;.c:()Z` @kind virtual;
  #L420d54.  v3:= temp;
  #L420d56.  if v1 != v3 then goto L420d6c;
  #L420d5a.  v1:= v4.`q4.v8.c` @type ^`int`;
  #L420d5e.  call temp:= `a`(v5) @signature `Lq4/x8;.a:()I` @kind virtual;
  #L420d64.  v5:= temp;
  #L420d66.  if v1 != v5 then goto L420d6c;
  #L420d6a.  return v0;
  #L420d6c.  return v2;
}
procedure `int` `hashCode`(`q4.v8` v4 @kind this) @signature `Lq4/v8;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L420d98.  v0:= v4.`q4.v8.a` @type ^`java.lang.String` @kind object;
  #L420d9c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L420da2.  v0:= temp;
  #L420da4.  v1:= 1000003I;
  #L420daa.  v0:= v0 ^~ v1 @kind int;
  #L420dac.  v0:= v0 * v1 @kind int;
  #L420db0.  v2:= v4.`q4.v8.b` @type ^`boolean` @kind boolean;
  #L420db4.  v3:= 1I;
  #L420db6.  if v3 == v2 then goto L420dc0;
  #L420dba.  v2:= 1237I;
  #L420dbe.  goto L420dc4;
  #L420dc0.  v2:= 1231I;
  #L420dc4.  v0:= v0 ^~ v2 @kind int;
  #L420dc6.  v0:= v0 * v1 @kind int;
  #L420dca.  v1:= v4.`q4.v8.c` @type ^`int`;
  #L420dce.  v0:= v0 ^~ v1 @kind int;
  #L420dd0.  return v0;
}
procedure `java.lang.String` `toString`(`q4.v8` v5 @kind this) @signature `Lq4/v8;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L420dfc.  v0:= v5.`q4.v8.a` @type ^`java.lang.String` @kind object;
  #L420e00.  v1:= v5.`q4.v8.b` @type ^`boolean` @kind boolean;
  #L420e04.  v2:= v5.`q4.v8.c` @type ^`int`;
  #L420e08.  v3:= new `java.lang.StringBuilder`;
  #L420e0c.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L420e12.  v4:= temp;
  #L420e14.  v4:= v4 + 84;
  #L420e18.  call `<init>`(v3, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L420e1e.  v4:= "MLKitLoggingOptions{libraryName=" @kind object;
  #L420e22.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L420e28.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L420e2e.  v0:= ", enableFirelog=" @kind object;
  #L420e32.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L420e38.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L420e3e.  v0:= ", firelogEventType=" @kind object;
  #L420e42.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L420e48.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L420e4e.  v0:= "}" @kind object;
  #L420e52.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L420e58.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L420e5e.  v0:= temp @kind object;
  #L420e60.  return v0 @kind object;
}
