record `q4.g5` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v11 @kind object, `java.lang.Object`[] v12 @kind object) @signature `Lq4/g5;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L41dfb8.  v0:= 0I;
  #L41dfba.  v1:= 0I;
  #L41dfbc.  v2:= length @variable v12;
  #L41dfbe.  if v1 >= v2 then goto L41e0fc;
  #L41dfc2.  v2:= v12[v1] @kind object;
  #L41dfc6.  if v2 != 0 then goto L41dfd2;
  #L41dfca.  v2:= "null" @kind object;
  #L41dfce.  goto L41e0f0;
  #L41dfd2.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L41dfd8.  v2:= temp @kind object;
  #L41dfda.  goto L41e0f0;
  #L41dfde.  v9:= Exception @type ^`java.lang.Exception` @kind object;
  #L41dfe0.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L41dfe6.  v3:= temp @kind object;
  #L41dfe8.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L41dfee.  v3:= temp @kind object;
  #L41dff0.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L41dff6.  v2:= temp;
  #L41dff8.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L41dffe.  v2:= temp @kind object;
  #L41e000.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L41e006.  v4:= temp;
  #L41e008.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L41e00e.  v5:= temp @kind object;
  #L41e010.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L41e016.  v5:= temp;
  #L41e018.  v6:= new `java.lang.StringBuilder`;
  #L41e01c.  v4:= v4 + 1;
  #L41e020.  v4:= v4 + v5 @kind int;
  #L41e022.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L41e028.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e02e.  v3:= 64I;
  #L41e032.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e038.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e03e.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41e044.  v2:= temp @kind object;
  #L41e046.  v3:= "com.google.common.base.Strings" @kind object;
  #L41e04a.  call temp:= `getLogger`(v3) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L41e050.  v3:= temp @kind object;
  #L41e052.  v4:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L41e056.  v5:= "Exception during lenientFormat for " @kind object;
  #L41e05a.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L41e060.  v6:= temp;
  #L41e062.  if v6 == 0 then goto L41e072;
  #L41e066.  call temp:= `concat`(v5, v2) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L41e06c.  v5:= temp @kind object;
  #L41e06e.  v7:= v5 @kind object;
  #L41e070.  goto L41e07e;
  #L41e072.  v6:= new `java.lang.String`;
  #L41e076.  call `<init>`(v6, v5) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41e07c.  v7:= v6 @kind object;
  #L41e07e.  v5:= "com.google.common.base.Strings" @kind object;
  #L41e082.  v6:= "lenientToString" @kind object;
  #L41e086.  v8:= v9 @kind object;
  #L41e088.  call `logp`(v3, v4, v5, v6, v7, v8) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L41e08e.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L41e094.  v3:= temp @kind object;
  #L41e096.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L41e09c.  v3:= temp @kind object;
  #L41e09e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L41e0a4.  v4:= temp;
  #L41e0a6.  v5:= new `java.lang.StringBuilder`;
  #L41e0aa.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L41e0b0.  v6:= temp;
  #L41e0b2.  v6:= v6 + 9;
  #L41e0b6.  v6:= v6 + v4 @kind int;
  #L41e0b8.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L41e0be.  v4:= "<" @kind object;
  #L41e0c2.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e0c8.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e0ce.  v2:= " threw " @kind object;
  #L41e0d2.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e0d8.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e0de.  v2:= ">" @kind object;
  #L41e0e2.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e0e8.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41e0ee.  v2:= temp @kind object;
  #L41e0f0.  v12[v1]:= v2 @kind object;
  #L41e0f4.  v1:= v1 + 1;
  #L41e0f8.  goto L41dfbc;
  #L41e0fc.  v1:= new `java.lang.StringBuilder`;
  #L41e100.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L41e106.  v3:= temp;
  #L41e108.  v2:= v2 * 16;
  #L41e10c.  v3:= v3 + v2 @kind int;
  #L41e10e.  call `<init>`(v1, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L41e114.  v2:= 0I;
  #L41e116.  v3:= length @variable v12;
  #L41e118.  if v0 >= v3 then goto L41e150;
  #L41e11c.  v4:= "%s" @kind object;
  #L41e120.  call temp:= `indexOf`(v11, v4, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L41e126.  v4:= temp;
  #L41e128.  v5:= -1I;
  #L41e12a.  if v4 != v5 then goto L41e130;
  #L41e12e.  goto L41e150;
  #L41e130.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e136.  v2:= v0 + 1;
  #L41e13a.  v0:= v12[v0] @kind object;
  #L41e13e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e144.  v0:= v4 + 2;
  #L41e148.  v10:= v2;
  #L41e14a.  v2:= v0;
  #L41e14c.  v0:= v10;
  #L41e14e.  goto L41e116;
  #L41e150.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L41e156.  v4:= temp;
  #L41e158.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e15e.  if v0 >= v3 then goto L41e1a6;
  #L41e162.  v11:= " [" @kind object;
  #L41e166.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e16c.  v11:= v0 + 1;
  #L41e170.  v0:= v12[v0] @kind object;
  #L41e174.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e17a.  v0:= length @variable v12;
  #L41e17c.  if v11 >= v0 then goto L41e19c;
  #L41e180.  v0:= ", " @kind object;
  #L41e184.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e18a.  v0:= v11 + 1;
  #L41e18e.  v11:= v12[v11] @kind object;
  #L41e192.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e198.  v11:= v0;
  #L41e19a.  goto L41e17a;
  #L41e19c.  v11:= 93I;
  #L41e1a0.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e1a6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41e1ac.  v11:= temp @kind object;
  #L41e1ae.  return v11 @kind object;
  catch `java.lang.Exception` @[L41dfd2..L41dfda] goto L41dfde;
}
procedure `boolean` `b`(`java.lang.String` v0 @kind object) @signature `Lq4/g5;.b:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L41df74.  call temp:= `a`(v0) @signature `Lq4/e3;.a:(Ljava/lang/String;)Z` @kind static;
  #L41df7a.  v0:= temp;
  #L41df7c.  return v0;
}
