record `q4.h6` @kind class @AccessFlag ABSTRACT extends `q4.c` @kind class {
  `int` `q4.h6.o` @AccessFlag PRIVATE_FINAL;
  `int` `q4.h6.p` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`q4.h6` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lq4/h6;.<init>:(II)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L42031c.  call `<init>`(v1) @signature `Lq4/c;.<init>:()V` @kind direct;
  #L420322.  v0:= "index" @kind object;
  #L420326.  call temp:= `b`(v3, v2, v0) @signature `Lq4/f4;.b:(IILjava/lang/String;)I` @kind static;
  #L42032c.  v1.`q4.h6.o` @type ^`int` := v2;
  #L420330.  v1.`q4.h6.p` @type ^`int` := v3;
  #L420334.  return @kind void;
}
procedure `java.lang.Object` `a`(`int` v0 ) @signature `Lq4/h6;.a:(I)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `hasNext`(`q4.h6` v2 @kind this) @signature `Lq4/h6;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L420100.  v0:= v2.`q4.h6.p` @type ^`int`;
  #L420104.  v1:= v2.`q4.h6.o` @type ^`int`;
  #L420108.  if v0 >= v1 then goto L420110;
  #L42010c.  v0:= 1I;
  #L42010e.  return v0;
  #L420110.  v0:= 0I;
  #L420112.  return v0;
}
procedure `boolean` `hasPrevious`(`q4.h6` v1 @kind this) @signature `Lq4/h6;.hasPrevious:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420124.  v0:= v1.`q4.h6.p` @type ^`int`;
  #L420128.  if v0 <= 0 then goto L420130;
  #L42012c.  v0:= 1I;
  #L42012e.  return v0;
  #L420130.  v0:= 0I;
  #L420132.  return v0;
}
procedure `java.lang.Object` `next`(`q4.h6` v2 @kind this) @signature `Lq4/h6;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L420274.  call temp:= `hasNext`(v2) @signature `Lq4/h6;.hasNext:()Z` @kind virtual;
  #L42027a.  v0:= temp;
  #L42027c.  if v0 == 0 then goto L420296;
  #L420280.  v0:= v2.`q4.h6.p` @type ^`int`;
  #L420284.  v1:= v0 + 1;
  #L420288.  v2.`q4.h6.p` @type ^`int` := v1;
  #L42028c.  call temp:= `a`(v2, v0) @signature `Lq4/h6;.a:(I)Ljava/lang/Object;` @kind virtual;
  #L420292.  v0:= temp @kind object;
  #L420294.  return v0 @kind object;
  #L420296.  v0:= new `java.util.NoSuchElementException`;
  #L42029a.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4202a0.  throw v0;
}
procedure `int` `nextIndex`(`q4.h6` v1 @kind this) @signature `Lq4/h6;.nextIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420240.  v0:= v1.`q4.h6.p` @type ^`int`;
  #L420244.  return v0;
}
procedure `java.lang.Object` `previous`(`q4.h6` v1 @kind this) @signature `Lq4/h6;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4202b4.  call temp:= `hasPrevious`(v1) @signature `Lq4/h6;.hasPrevious:()Z` @kind virtual;
  #L4202ba.  v0:= temp;
  #L4202bc.  if v0 == 0 then goto L4202d6;
  #L4202c0.  v0:= v1.`q4.h6.p` @type ^`int`;
  #L4202c4.  v0:= v0 + -1;
  #L4202c8.  v1.`q4.h6.p` @type ^`int` := v0;
  #L4202cc.  call temp:= `a`(v1, v0) @signature `Lq4/h6;.a:(I)Ljava/lang/Object;` @kind virtual;
  #L4202d2.  v0:= temp @kind object;
  #L4202d4.  return v0 @kind object;
  #L4202d6.  v0:= new `java.util.NoSuchElementException`;
  #L4202da.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4202e0.  throw v0;
}
procedure `int` `previousIndex`(`q4.h6` v1 @kind this) @signature `Lq4/h6;.previousIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L420258.  v0:= v1.`q4.h6.p` @type ^`int`;
  #L42025c.  v0:= v0 + -1;
  #L420260.  return v0;
}
