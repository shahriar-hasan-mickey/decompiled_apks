record `m9.c` @kind class @AccessFlag PUBLIC {
  `int` `m9.c.a` @AccessFlag PRIVATE;
  `int` `m9.c.b` @AccessFlag PRIVATE;
  `int` `m9.c.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`m9.c` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Lm9/c;.<init>:(III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e50d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e50de.  v0.`m9.c.a` @type ^`int` := v1;
  #L3e50e2.  v0.`m9.c.b` @type ^`int` := v2;
  #L3e50e6.  v0.`m9.c.c` @type ^`int` := v3;
  #L3e50ea.  return @kind void;
}
procedure `boolean` `equals`(`m9.c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lm9/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e5048.  v0:= 1I;
  #L3e504a.  if v4 != v5 then goto L3e5050;
  #L3e504e.  return v0;
  #L3e5050.  v1:= 0I;
  #L3e5052.  if v5 == 0 then goto L3e509a;
  #L3e5056.  v2:= constclass @type ^`m9.c` @kind object;
  #L3e505a.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e5060.  v3:= temp @kind object;
  #L3e5062.  if v2 == v3 then goto L3e5068;
  #L3e5066.  goto L3e509a;
  #L3e5068.  v5:= (`m9.c`) v5 @kind object;
  #L3e506c.  v2:= v4.`m9.c.a` @type ^`int`;
  #L3e5070.  v3:= v5.`m9.c.a` @type ^`int`;
  #L3e5074.  if v2 == v3 then goto L3e507a;
  #L3e5078.  return v1;
  #L3e507a.  v2:= v4.`m9.c.b` @type ^`int`;
  #L3e507e.  v3:= v5.`m9.c.b` @type ^`int`;
  #L3e5082.  if v2 == v3 then goto L3e5088;
  #L3e5086.  return v1;
  #L3e5088.  v2:= v4.`m9.c.c` @type ^`int`;
  #L3e508c.  v5:= v5.`m9.c.c` @type ^`int`;
  #L3e5090.  if v2 != v5 then goto L3e5096;
  #L3e5094.  goto L3e5098;
  #L3e5096.  v0:= 0I;
  #L3e5098.  return v0;
  #L3e509a.  return v1;
}
procedure `int` `hashCode`(`m9.c` v2 @kind this) @signature `Lm9/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e50ac.  v0:= v2.`m9.c.a` @type ^`int`;
  #L3e50b0.  v0:= v0 * 31;
  #L3e50b4.  v1:= v2.`m9.c.b` @type ^`int`;
  #L3e50b8.  v0:= v0 + v1 @kind int;
  #L3e50ba.  v0:= v0 * 31;
  #L3e50be.  v1:= v2.`m9.c.c` @type ^`int`;
  #L3e50c2.  v0:= v0 + v1 @kind int;
  #L3e50c4.  return v0;
}
