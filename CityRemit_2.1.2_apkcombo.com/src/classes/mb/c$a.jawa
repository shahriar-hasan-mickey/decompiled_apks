record `mb.c$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.l` @kind class, `tb.p` @kind interface {
}
global `mb.c$a` `@@mb.c$a.o` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lmb/c$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e5614.  v0:= new `mb.c$a`;
  #L3e5618.  call `<init>`(v0) @signature `Lmb/c$a;.<init>:()V` @kind direct;
  #L3e561e.  `@@mb.c$a.o` @type ^`mb.c$a` := v0 @kind object;
  #L3e5622.  return @kind void;
}
procedure `void` `<init>`(`mb.c$a` v1 @kind this) @signature `Lmb/c$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e5634.  v0:= 2I;
  #L3e5636.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/l;.<init>:(I)V` @kind direct;
  #L3e563c.  return @kind void;
}
procedure `java.lang.String` `a`(`mb.c$a` v1 @kind this, `java.lang.String` v2 @kind object, `mb.g$b` v3 @kind object) @signature `Lmb/c$a;.a:(Ljava/lang/String;Lmb/g$b;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e55a4.  v0:= "acc" @kind object;
  #L3e55a8.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3e55ae.  v0:= "element" @kind object;
  #L3e55b2.  call `e`(v3, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3e55b8.  call temp:= `length`(v2) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3e55be.  v0:= temp;
  #L3e55c0.  if v0 != 0 then goto L3e55c8;
  #L3e55c4.  v0:= 1I;
  #L3e55c6.  goto L3e55ca;
  #L3e55c8.  v0:= 0I;
  #L3e55ca.  if v0 == 0 then goto L3e55d8;
  #L3e55ce.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e55d4.  v2:= temp @kind object;
  #L3e55d6.  goto L3e5600;
  #L3e55d8.  v0:= new `java.lang.StringBuilder`;
  #L3e55dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e55e2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e55e8.  v2:= ", " @kind object;
  #L3e55ec.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e55f2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e55f8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e55fe.  v2:= temp @kind object;
  #L3e5600.  return v2 @kind object;
}
procedure `java.lang.Object` `invoke`(`mb.c$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lmb/c$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3e5580.  v1:= (`java.lang.String`) v1 @kind object;
  #L3e5584.  v2:= (`mb.g$b`) v2 @kind object;
  #L3e5588.  call temp:= `a`(v0, v1, v2) @signature `Lmb/c$a;.a:(Ljava/lang/String;Lmb/g$b;)Ljava/lang/String;` @kind virtual;
  #L3e558e.  v1:= temp @kind object;
  #L3e5590.  return v1 @kind object;
}
