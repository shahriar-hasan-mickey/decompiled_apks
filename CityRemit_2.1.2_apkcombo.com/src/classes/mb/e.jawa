record `mb.e` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `mb.g$b` @kind interface {
}
global `mb.e$b` `@@mb.e.n` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lmb/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e5a00.  v0:= `@@mb.e$b.o` @type ^`mb.e$b` @kind object;
  #L3e5a04.  `@@mb.e.n` @type ^`mb.e$b` := v0 @kind object;
  #L3e5a08.  return @kind void;
}
procedure `void` `e`(`mb.d` v0 @kind object) @signature `Lmb/e;.e:(Lmb/d;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `mb.d` `h`(`mb.d` v0 @kind object) @signature `Lmb/e;.h:(Lmb/d;)Lmb/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
