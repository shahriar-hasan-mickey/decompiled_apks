record `mb.g$b$a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `a`(`mb.g$b` v1 @kind object, `java.lang.Object` v2 @kind object, `tb.p` v3 @kind object) @signature `Lmb/g$b$a;.a:(Lmb/g$b;Ljava/lang/Object;Ltb/p;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5aa0.  v0:= "operation" @kind object;
  #L3e5aa4.  call `e`(v3, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3e5aaa.  call temp:= `invoke`(v3, v2, v1) @signature `Ltb/p;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e5ab0.  v1:= temp @kind object;
  #L3e5ab2.  return v1 @kind object;
}
procedure `mb.g$b` `b`(`mb.g$b` v1 @kind object, `mb.g$c` v2 @kind object) @signature `Lmb/g$b$a;.b:(Lmb/g$b;Lmb/g$c;)Lmb/g$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5b1c.  v0:= "key" @kind object;
  #L3e5b20.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3e5b26.  call temp:= `getKey`(v1) @signature `Lmb/g$b;.getKey:()Lmb/g$c;` @kind interface;
  #L3e5b2c.  v0:= temp @kind object;
  #L3e5b2e.  call temp:= `a`(v0, v2) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e5b34.  v2:= temp;
  #L3e5b36.  if v2 == 0 then goto L3e5b46;
  #L3e5b3a.  v2:= "null cannot be cast to non-null type E of kotlin.coroutines.CoroutineContext.Element.get" @kind object;
  #L3e5b3e.  call `c`(v1, v2) @signature `Lkotlin/jvm/internal/k;.c:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3e5b44.  goto L3e5b48;
  #L3e5b46.  v1:= 0I;
  #L3e5b48.  return v1 @kind object;
}
procedure `mb.g` `c`(`mb.g$b` v1 @kind object, `mb.g$c` v2 @kind object) @signature `Lmb/g$b$a;.c:(Lmb/g$b;Lmb/g$c;)Lmb/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5ac4.  v0:= "key" @kind object;
  #L3e5ac8.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3e5ace.  call temp:= `getKey`(v1) @signature `Lmb/g$b;.getKey:()Lmb/g$c;` @kind interface;
  #L3e5ad4.  v0:= temp @kind object;
  #L3e5ad6.  call temp:= `a`(v0, v2) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e5adc.  v2:= temp;
  #L3e5ade.  if v2 == 0 then goto L3e5ae6;
  #L3e5ae2.  v1:= `@@mb.h.o` @type ^`mb.h` @kind object;
  #L3e5ae6.  return v1 @kind object;
}
procedure `mb.g` `d`(`mb.g$b` v1 @kind object, `mb.g` v2 @kind object) @signature `Lmb/g$b$a;.d:(Lmb/g$b;Lmb/g;)Lmb/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5af8.  v0:= "context" @kind object;
  #L3e5afc.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3e5b02.  call temp:= `a`(v1, v2) @signature `Lmb/g$a;.a:(Lmb/g;Lmb/g;)Lmb/g;` @kind static;
  #L3e5b08.  v1:= temp @kind object;
  #L3e5b0a.  return v1 @kind object;
}
