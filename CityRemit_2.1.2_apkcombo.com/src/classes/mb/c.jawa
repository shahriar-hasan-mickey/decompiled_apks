record `mb.c` @kind class @AccessFlag PUBLIC_FINAL extends `mb.g` @kind interface, `java.io.Serializable` @kind interface {
  `mb.g` `mb.c.o` @AccessFlag PRIVATE_FINAL;
  `mb.g$b` `mb.c.p` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`mb.c` v1 @kind this, `mb.g` v2 @kind object, `mb.g$b` v3 @kind object) @signature `Lmb/c;.<init>:(Lmb/g;Lmb/g$b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e58d0.  v0:= "left" @kind object;
  #L3e58d4.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3e58da.  v0:= "element" @kind object;
  #L3e58de.  call `e`(v3, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3e58e4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e58ea.  v1.`mb.c.o` @type ^`mb.g` := v2 @kind object;
  #L3e58ee.  v1.`mb.c.p` @type ^`mb.g$b` := v3 @kind object;
  #L3e58f2.  return @kind void;
}
procedure `boolean` `b`(`mb.c` v1 @kind this, `mb.g$b` v2 @kind object) @signature `Lmb/c;.b:(Lmb/g$b;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L3e5650.  call temp:= `getKey`(v2) @signature `Lmb/g$b;.getKey:()Lmb/g$c;` @kind interface;
  #L3e5656.  v0:= temp @kind object;
  #L3e5658.  call temp:= `c`(v1, v0) @signature `Lmb/c;.c:(Lmb/g$c;)Lmb/g$b;` @kind virtual;
  #L3e565e.  v0:= temp @kind object;
  #L3e5660.  call temp:= `a`(v0, v2) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e5666.  v2:= temp;
  #L3e5668.  return v2;
}
procedure `boolean` `d`(`mb.c` v1 @kind this, `mb.c` v2 @kind object) @signature `Lmb/c;.d:(Lmb/c;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L3e567c.  v0:= v2.`mb.c.p` @type ^`mb.g$b` @kind object;
  #L3e5680.  call temp:= `b`(v1, v0) @signature `Lmb/c;.b:(Lmb/g$b;)Z` @kind direct;
  #L3e5686.  v0:= temp;
  #L3e5688.  if v0 != 0 then goto L3e5690;
  #L3e568c.  v2:= 0I;
  #L3e568e.  return v2;
  #L3e5690.  v2:= v2.`mb.c.o` @type ^`mb.g` @kind object;
  #L3e5694.  v0:= instanceof @variable v2 @type ^`mb.c` @kind boolean;
  #L3e5698.  if v0 == 0 then goto L3e56a2;
  #L3e569c.  v2:= (`mb.c`) v2 @kind object;
  #L3e56a0.  goto L3e567c;
  #L3e56a2.  v0:= "null cannot be cast to non-null type kotlin.coroutines.CoroutineContext.Element" @kind object;
  #L3e56a6.  call `c`(v2, v0) @signature `Lkotlin/jvm/internal/k;.c:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3e56ac.  v2:= (`mb.g$b`) v2 @kind object;
  #L3e56b0.  call temp:= `b`(v1, v2) @signature `Lmb/c;.b:(Lmb/g$b;)Z` @kind direct;
  #L3e56b6.  v2:= temp;
  #L3e56b8.  return v2;
}
procedure `int` `f`(`mb.c` v3 @kind this) @signature `Lmb/c;.f:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3e5744.  v0:= 2I;
  #L3e5746.  v1:= v3 @kind object;
  #L3e5748.  v1:= v1.`mb.c.o` @type ^`mb.g` @kind object;
  #L3e574c.  v2:= instanceof @variable v1 @type ^`mb.c` @kind boolean;
  #L3e5750.  if v2 == 0 then goto L3e575a;
  #L3e5754.  v1:= (`mb.c`) v1 @kind object;
  #L3e5758.  goto L3e575c;
  #L3e575a.  v1:= 0I;
  #L3e575c.  if v1 != 0 then goto L3e5762;
  #L3e5760.  return v0;
  #L3e5762.  v0:= v0 + 1;
  #L3e5766.  goto L3e5748;
}
procedure `mb.g` `M`(`mb.c` v2 @kind this, `mb.g$c` v3 @kind object) @signature `Lmb/c;.M:(Lmb/g$c;)Lmb/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e5800.  v0:= "key" @kind object;
  #L3e5804.  call `e`(v3, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3e580a.  v0:= v2.`mb.c.p` @type ^`mb.g$b` @kind object;
  #L3e580e.  call temp:= `c`(v0, v3) @signature `Lmb/g$b;.c:(Lmb/g$c;)Lmb/g$b;` @kind interface;
  #L3e5814.  v0:= temp @kind object;
  #L3e5816.  if v0 == 0 then goto L3e5820;
  #L3e581a.  v3:= v2.`mb.c.o` @type ^`mb.g` @kind object;
  #L3e581e.  return v3 @kind object;
  #L3e5820.  v0:= v2.`mb.c.o` @type ^`mb.g` @kind object;
  #L3e5824.  call temp:= `M`(v0, v3) @signature `Lmb/g;.M:(Lmb/g$c;)Lmb/g;` @kind interface;
  #L3e582a.  v3:= temp @kind object;
  #L3e582c.  v0:= v2.`mb.c.o` @type ^`mb.g` @kind object;
  #L3e5830.  if v3 != v0 then goto L3e5838;
  #L3e5834.  v3:= v2 @kind object;
  #L3e5836.  goto L3e5856;
  #L3e5838.  v0:= `@@mb.h.o` @type ^`mb.h` @kind object;
  #L3e583c.  if v3 != v0 then goto L3e5846;
  #L3e5840.  v3:= v2.`mb.c.p` @type ^`mb.g$b` @kind object;
  #L3e5844.  goto L3e5856;
  #L3e5846.  v0:= new `mb.c`;
  #L3e584a.  v1:= v2.`mb.c.p` @type ^`mb.g$b` @kind object;
  #L3e584e.  call `<init>`(v0, v3, v1) @signature `Lmb/c;.<init>:(Lmb/g;Lmb/g$b;)V` @kind direct;
  #L3e5854.  v3:= v0 @kind object;
  #L3e5856.  return v3 @kind object;
}
procedure `java.lang.Object` `S`(`mb.c` v1 @kind this, `java.lang.Object` v2 @kind object, `tb.p` v3 @kind object) @signature `Lmb/c;.S:(Ljava/lang/Object;Ltb/p;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5778.  v0:= "operation" @kind object;
  #L3e577c.  call `e`(v3, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3e5782.  v0:= v1.`mb.c.o` @type ^`mb.g` @kind object;
  #L3e5786.  call temp:= `S`(v0, v2, v3) @signature `Lmb/g;.S:(Ljava/lang/Object;Ltb/p;)Ljava/lang/Object;` @kind interface;
  #L3e578c.  v2:= temp @kind object;
  #L3e578e.  v0:= v1.`mb.c.p` @type ^`mb.g$b` @kind object;
  #L3e5792.  call temp:= `invoke`(v3, v2, v0) @signature `Ltb/p;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e5798.  v2:= temp @kind object;
  #L3e579a.  return v2 @kind object;
}
procedure `mb.g$b` `c`(`mb.c` v2 @kind this, `mb.g$c` v3 @kind object) @signature `Lmb/c;.c:(Lmb/g$c;)Lmb/g$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e5884.  v0:= "key" @kind object;
  #L3e5888.  call `e`(v3, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3e588e.  v0:= v2 @kind object;
  #L3e5890.  v1:= v0.`mb.c.p` @type ^`mb.g$b` @kind object;
  #L3e5894.  call temp:= `c`(v1, v3) @signature `Lmb/g$b;.c:(Lmb/g$c;)Lmb/g$b;` @kind interface;
  #L3e589a.  v1:= temp @kind object;
  #L3e589c.  if v1 == 0 then goto L3e58a2;
  #L3e58a0.  return v1 @kind object;
  #L3e58a2.  v0:= v0.`mb.c.o` @type ^`mb.g` @kind object;
  #L3e58a6.  v1:= instanceof @variable v0 @type ^`mb.c` @kind boolean;
  #L3e58aa.  if v1 == 0 then goto L3e58b4;
  #L3e58ae.  v0:= (`mb.c`) v0 @kind object;
  #L3e58b2.  goto L3e5890;
  #L3e58b4.  call temp:= `c`(v0, v3) @signature `Lmb/g;.c:(Lmb/g$c;)Lmb/g$b;` @kind interface;
  #L3e58ba.  v3:= temp @kind object;
  #L3e58bc.  return v3 @kind object;
}
procedure `boolean` `equals`(`mb.c` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lmb/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e56cc.  if v2 == v3 then goto L3e5702;
  #L3e56d0.  v0:= instanceof @variable v3 @type ^`mb.c` @kind boolean;
  #L3e56d4.  if v0 == 0 then goto L3e56fe;
  #L3e56d8.  v3:= (`mb.c`) v3 @kind object;
  #L3e56dc.  call temp:= `f`(v3) @signature `Lmb/c;.f:()I` @kind direct;
  #L3e56e2.  v0:= temp;
  #L3e56e4.  call temp:= `f`(v2) @signature `Lmb/c;.f:()I` @kind direct;
  #L3e56ea.  v1:= temp;
  #L3e56ec.  if v0 != v1 then goto L3e56fe;
  #L3e56f0.  call temp:= `d`(v3, v2) @signature `Lmb/c;.d:(Lmb/c;)Z` @kind direct;
  #L3e56f6.  v3:= temp;
  #L3e56f8.  if v3 == 0 then goto L3e56fe;
  #L3e56fc.  goto L3e5702;
  #L3e56fe.  v3:= 0I;
  #L3e5700.  goto L3e5704;
  #L3e5702.  v3:= 1I;
  #L3e5704.  return v3;
}
procedure `int` `hashCode`(`mb.c` v2 @kind this) @signature `Lmb/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e5718.  v0:= v2.`mb.c.o` @type ^`mb.g` @kind object;
  #L3e571c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3e5722.  v0:= temp;
  #L3e5724.  v1:= v2.`mb.c.p` @type ^`mb.g$b` @kind object;
  #L3e5728.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3e572e.  v1:= temp;
  #L3e5730.  v0:= v0 + v1 @kind int;
  #L3e5732.  return v0;
}
procedure `mb.g` `s`(`mb.c` v0 @kind this, `mb.g` v1 @kind object) @signature `Lmb/c;.s:(Lmb/g;)Lmb/g;` @AccessFlag PUBLIC {
    temp;

  #L3e5868.  call temp:= `a`(v0, v1) @signature `Lmb/g$a;.a:(Lmb/g;Lmb/g;)Lmb/g;` @kind static;
  #L3e586e.  v1:= temp @kind object;
  #L3e5870.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`mb.c` v3 @kind this) @signature `Lmb/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e57ac.  v0:= new `java.lang.StringBuilder`;
  #L3e57b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e57b6.  v1:= 91I;
  #L3e57ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e57c0.  v1:= `@@mb.c$a.o` @type ^`mb.c$a` @kind object;
  #L3e57c4.  v2:= "" @kind object;
  #L3e57c8.  call temp:= `S`(v3, v2, v1) @signature `Lmb/c;.S:(Ljava/lang/Object;Ltb/p;)Ljava/lang/Object;` @kind virtual;
  #L3e57ce.  v1:= temp @kind object;
  #L3e57d0.  v1:= (`java.lang.String`) v1 @kind object;
  #L3e57d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e57da.  v1:= 93I;
  #L3e57de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e57e4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e57ea.  v0:= temp @kind object;
  #L3e57ec.  return v0 @kind object;
}
