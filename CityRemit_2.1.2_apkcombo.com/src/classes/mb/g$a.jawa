record `mb.g$a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `mb.g` `a`(`mb.g` v1 @kind object, `mb.g` v2 @kind object) @signature `Lmb/g$a;.a:(Lmb/g;Lmb/g;)Lmb/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e5a68.  v0:= "context" @kind object;
  #L3e5a6c.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3e5a72.  v0:= `@@mb.h.o` @type ^`mb.h` @kind object;
  #L3e5a76.  if v2 != v0 then goto L3e5a7c;
  #L3e5a7a.  goto L3e5a8c;
  #L3e5a7c.  v0:= `@@mb.g$a$a.o` @type ^`mb.g$a$a` @kind object;
  #L3e5a80.  call temp:= `S`(v2, v1, v0) @signature `Lmb/g;.S:(Ljava/lang/Object;Ltb/p;)Ljava/lang/Object;` @kind interface;
  #L3e5a86.  v1:= temp @kind object;
  #L3e5a88.  v1:= (`mb.g`) v1 @kind object;
  #L3e5a8c.  return v1 @kind object;
}
