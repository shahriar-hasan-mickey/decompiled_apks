record `gc.c$a` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `gc.c$a.a` @AccessFlag ;
  `boolean` `gc.c$a.b` @AccessFlag ;
  `int` `gc.c$a.c` @AccessFlag ;
  `int` `gc.c$a.d` @AccessFlag ;
  `int` `gc.c$a.e` @AccessFlag ;
  `boolean` `gc.c$a.f` @AccessFlag ;
  `boolean` `gc.c$a.g` @AccessFlag ;
  `boolean` `gc.c$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`gc.c$a` v1 @kind this) @signature `Lgc/c$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32fb80.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32fb86.  v0:= -1I;
  #L32fb88.  v1.`gc.c$a.c` @type ^`int` := v0;
  #L32fb8c.  v1.`gc.c$a.d` @type ^`int` := v0;
  #L32fb90.  v1.`gc.c$a.e` @type ^`int` := v0;
  #L32fb94.  return @kind void;
}
procedure `gc.c` `a`(`gc.c$a` v1 @kind this) @signature `Lgc/c$a;.a:()Lgc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32fac8.  v0:= new `gc.c`;
  #L32facc.  call `<init>`(v0, v1) @signature `Lgc/c;.<init>:(Lgc/c$a;)V` @kind direct;
  #L32fad2.  return v0 @kind object;
}
procedure `gc.c$a` `b`(`gc.c$a` v3 @kind this, `int` v4 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lgc/c$a;.b:(ILjava/util/concurrent/TimeUnit;)Lgc/c$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32fae4.  if v4 < 0 then goto L32fb10;
  #L32fae8.  v0:= (`long`) v4 @kind i2l;
  #L32faea.  call temp:= `toSeconds`(v5, v0) @signature `Ljava/util/concurrent/TimeUnit;.toSeconds:(J)J` @kind virtual;
  #L32faf0.  v4:= temp @kind wide;
  #L32faf2.  v0:= 2147483647L;
  #L32faf8.  v2:= lcmp(v4, v0);
  #L32fafc.  if v2 <= 0 then goto L32fb08;
  #L32fb00.  v4:= 2147483647I;
  #L32fb06.  goto L32fb0a;
  #L32fb08.  v4:= (`int`) v4 @kind l2i;
  #L32fb0a.  v3.`gc.c$a.d` @type ^`int` := v4;
  #L32fb0e.  return v3 @kind object;
  #L32fb10.  v5:= new `java.lang.IllegalArgumentException`;
  #L32fb14.  v0:= new `java.lang.StringBuilder`;
  #L32fb18.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32fb1e.  v1:= "maxStale < 0: " @kind object;
  #L32fb22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fb28.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fb2e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32fb34.  v4:= temp @kind object;
  #L32fb36.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32fb3c.  throw v5;
}
procedure `gc.c$a` `c`(`gc.c$a` v1 @kind this) @signature `Lgc/c$a;.c:()Lgc/c$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32fb50.  v0:= 1I;
  #L32fb52.  v1.`gc.c$a.a` @type ^`boolean` := v0 @kind boolean;
  #L32fb56.  return v1 @kind object;
}
procedure `gc.c$a` `d`(`gc.c$a` v1 @kind this) @signature `Lgc/c$a;.d:()Lgc/c$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32fb68.  v0:= 1I;
  #L32fb6a.  v1.`gc.c$a.f` @type ^`boolean` := v0 @kind boolean;
  #L32fb6e.  return v1 @kind object;
}
