record `gc.i` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `gc.i.a` @AccessFlag PRIVATE_FINAL;
  `long` `gc.i.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `gc.i.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Deque` `gc.i.d` @AccessFlag PRIVATE_FINAL;
  `jc.d` `gc.i.e` @AccessFlag FINAL;
  `boolean` `gc.i.f` @AccessFlag ;
}
global `java.util.concurrent.Executor` `@@gc.i.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lgc/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3314a4.  v8:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L3314a8.  v1:= 0I;
  #L3314aa.  v2:= 2147483647I;
  #L3314b0.  v3:= 60L;
  #L3314b4.  v5:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3314b8.  v6:= new `java.util.concurrent.SynchronousQueue`;
  #L3314bc.  call `<init>`(v6) @signature `Ljava/util/concurrent/SynchronousQueue;.<init>:()V` @kind direct;
  #L3314c2.  v0:= 1I;
  #L3314c4.  v7:= "OkHttp ConnectionPool" @kind object;
  #L3314c8.  call temp:= `E`(v7, v0) @signature `Lhc/c;.E:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L3314ce.  v7:= temp @kind object;
  #L3314d0.  v0:= v8 @kind object;
  #L3314d2.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L3314d8.  `@@gc.i.g` @type ^`java.util.concurrent.Executor` := v8 @kind object;
  #L3314dc.  return @kind void;
}
procedure `void` `<init>`(`gc.i` v4 @kind this) @signature `Lgc/i;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3314f0.  v0:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3314f4.  v1:= 5I;
  #L3314f6.  v2:= 5L;
  #L3314fa.  call `<init>`(v4, v1, v2, v0) @signature `Lgc/i;.<init>:(IJLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L331500.  return @kind void;
}
procedure `void` `<init>`(`gc.i` v2 @kind this, `int` v3 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object) @signature `Lgc/i;.<init>:(IJLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L331514.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33151a.  v0:= new `gc.i$a`;
  #L33151e.  call `<init>`(v0, v2) @signature `Lgc/i$a;.<init>:(Lgc/i;)V` @kind direct;
  #L331524.  v2.`gc.i.c` @type ^`java.lang.Runnable` := v0 @kind object;
  #L331528.  v0:= new `java.util.ArrayDeque`;
  #L33152c.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L331532.  v2.`gc.i.d` @type ^`java.util.Deque` := v0 @kind object;
  #L331536.  v0:= new `jc.d`;
  #L33153a.  call `<init>`(v0) @signature `Ljc/d;.<init>:()V` @kind direct;
  #L331540.  v2.`gc.i.e` @type ^`jc.d` := v0 @kind object;
  #L331544.  v2.`gc.i.a` @type ^`int` := v3;
  #L331548.  call temp:= `toNanos`(v6, v4) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L33154e.  v0:= temp @kind wide;
  #L331550.  v2.`gc.i.b` @type ^`long` := v0 @kind wide;
  #L331554.  v0:= 0L;
  #L331558.  v3:= lcmp(v4, v0);
  #L33155c.  if v3 <= 0 then goto L331562;
  #L331560.  return @kind void;
  #L331562.  v3:= new `java.lang.IllegalArgumentException`;
  #L331566.  v6:= new `java.lang.StringBuilder`;
  #L33156a.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L331570.  v0:= "keepAliveDuration <= 0: " @kind object;
  #L331574.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33157a.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L331580.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L331586.  v4:= temp @kind object;
  #L331588.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33158e.  throw v3;
}
procedure `int` `e`(`gc.i` v6 @kind this, `jc.c` v7 @kind object, `long` v8 ) @signature `Lgc/i;.e:(Ljc/c;J)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L331244.  v0:= v7.`jc.c.n` @type ^`java.util.List` @kind object;
  #L331248.  v1:= 0I;
  #L33124a.  v2:= 0I;
  #L33124c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L331252.  v3:= temp;
  #L331254.  if v2 >= v3 then goto L3312f4;
  #L331258.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33125e.  v3:= temp @kind object;
  #L331260.  v3:= (`java.lang.ref.Reference`) v3 @kind object;
  #L331264.  call temp:= `get`(v3) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L33126a.  v4:= temp @kind object;
  #L33126c.  if v4 == 0 then goto L331276;
  #L331270.  v2:= v2 + 1;
  #L331274.  goto L33124c;
  #L331276.  v3:= (`jc.g$a`) v3 @kind object;
  #L33127a.  v4:= new `java.lang.StringBuilder`;
  #L33127e.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L331284.  v5:= "A connection to " @kind object;
  #L331288.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33128e.  call temp:= `p`(v7) @signature `Ljc/c;.p:()Lgc/b0;` @kind virtual;
  #L331294.  v5:= temp @kind object;
  #L331296.  call temp:= `a`(v5) @signature `Lgc/b0;.a:()Lgc/a;` @kind virtual;
  #L33129c.  v5:= temp @kind object;
  #L33129e.  call temp:= `l`(v5) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L3312a4.  v5:= temp @kind object;
  #L3312a6.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3312ac.  v5:= " was leaked. Did you forget to close a response body?" @kind object;
  #L3312b0.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3312b6.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3312bc.  v4:= temp @kind object;
  #L3312be.  call temp:= `l`() @signature `Lnc/g;.l:()Lnc/g;` @kind static;
  #L3312c4.  v5:= temp @kind object;
  #L3312c6.  v3:= v3.`jc.g$a.a` @type ^`java.lang.Object` @kind object;
  #L3312ca.  call `t`(v5, v4, v3) @signature `Lnc/g;.t:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L3312d0.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3312d6.  v3:= 1I;
  #L3312d8.  v7.`jc.c.k` @type ^`boolean` := v3 @kind boolean;
  #L3312dc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3312e2.  v3:= temp;
  #L3312e4.  if v3 == 0 then goto L33124c;
  #L3312e8.  v2:= v6.`gc.i.b` @type ^`long` @kind wide;
  #L3312ec.  v8:= v8 - v2 @kind long;
  #L3312ee.  v7.`jc.c.o` @type ^`long` := v8 @kind wide;
  #L3312f2.  return v1;
  #L3312f4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3312fa.  v7:= temp;
  #L3312fc.  return v7;
}
procedure `long` `a`(`gc.i` v11 @kind this, `long` v12 ) @signature `Lgc/i;.a:(J)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3313c8.  @monitorenter v11
  #L3313ca.  v0:= v11.`gc.i.d` @type ^`java.util.Deque` @kind object;
  #L3313ce.  call temp:= `iterator`(v0) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3313d4.  v0:= temp @kind object;
  #L3313d6.  v1:= 0I;
  #L3313d8.  v2:= 0I;
  #L3313da.  v3:= -9223372036854775808L;
  #L3313de.  v5:= 0I;
  #L3313e0.  v6:= 0I;
  #L3313e2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3313e8.  v7:= temp;
  #L3313ea.  if v7 == 0 then goto L331426;
  #L3313ee.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3313f4.  v7:= temp @kind object;
  #L3313f6.  v7:= (`jc.c`) v7 @kind object;
  #L3313fa.  call temp:= `e`(v11, v7, v12) @signature `Lgc/i;.e:(Ljc/c;J)I` @kind direct;
  #L331400.  v8:= temp;
  #L331402.  if v8 <= 0 then goto L33140c;
  #L331406.  v6:= v6 + 1;
  #L33140a.  goto L3313e2;
  #L33140c.  v5:= v5 + 1;
  #L331410.  v8:= v7.`jc.c.o` @type ^`long` @kind wide;
  #L331414.  v8:= v12 - v8 @kind long;
  #L331418.  v10:= lcmp(v8, v3);
  #L33141c.  if v10 <= 0 then goto L3313e2;
  #L331420.  v2:= v7 @kind object;
  #L331422.  v3:= v8 @kind wide;
  #L331424.  goto L3313e2;
  #L331426.  v12:= v11.`gc.i.b` @type ^`long` @kind wide;
  #L33142a.  v0:= lcmp(v3, v12);
  #L33142e.  if v0 >= 0 then goto L33145a;
  #L331432.  v0:= v11.`gc.i.a` @type ^`int`;
  #L331436.  if v5 <= v0 then goto L33143c;
  #L33143a.  goto L33145a;
  #L33143c.  if v5 <= 0 then goto L331446;
  #L331440.  v12:= v12 - v3 @kind long;
  #L331442.  @monitorexit v11
  #L331444.  return v12 @kind wide;
  #L331446.  if v6 <= 0 then goto L33144e;
  #L33144a.  @monitorexit v11
  #L33144c.  return v12 @kind wide;
  #L33144e.  v11.`gc.i.f` @type ^`boolean` := v1 @kind boolean;
  #L331452.  v12:= -1L;
  #L331456.  @monitorexit v11
  #L331458.  return v12 @kind wide;
  #L33145a.  v12:= v11.`gc.i.d` @type ^`java.util.Deque` @kind object;
  #L33145e.  call temp:= `remove`(v12, v2) @signature `Ljava/util/Deque;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L331464.  @monitorexit v11
  #L331466.  call temp:= `q`(v2) @signature `Ljc/c;.q:()Ljava/net/Socket;` @kind virtual;
  #L33146c.  v12:= temp @kind object;
  #L33146e.  call `f`(v12) @signature `Lhc/c;.f:(Ljava/net/Socket;)V` @kind static;
  #L331474.  v12:= 0L;
  #L331478.  return v12 @kind wide;
  #L33147a.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33147c.  @monitorexit v11
  #L33147e.  throw v12;
  catch `java.lang.Throwable` @[L3313ca..L331466] goto L33147a;
  catch `java.lang.Throwable` @[L33147c..L33147e] goto L33147a;
}
procedure `boolean` `b`(`gc.i` v1 @kind this, `jc.c` v2 @kind object) @signature `Lgc/i;.b:(Ljc/c;)Z` @AccessFlag  {
    temp;
    v0;

  #L331208.  v0:= v2.`jc.c.k` @type ^`boolean` @kind boolean;
  #L33120c.  if v0 != 0 then goto L331224;
  #L331210.  v0:= v1.`gc.i.a` @type ^`int`;
  #L331214.  if v0 != 0 then goto L33121a;
  #L331218.  goto L331224;
  #L33121a.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L331220.  v2:= 0I;
  #L331222.  return v2;
  #L331224.  v0:= v1.`gc.i.d` @type ^`java.util.Deque` @kind object;
  #L331228.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Deque;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L33122e.  v2:= 1I;
  #L331230.  return v2;
}
procedure `java.net.Socket` `c`(`gc.i` v3 @kind this, `gc.a` v4 @kind object, `jc.g` v5 @kind object) @signature `Lgc/i;.c:(Lgc/a;Ljc/g;)Ljava/net/Socket;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L331310.  v0:= v3.`gc.i.d` @type ^`java.util.Deque` @kind object;
  #L331314.  call temp:= `iterator`(v0) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L33131a.  v0:= temp @kind object;
  #L33131c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L331322.  v1:= temp;
  #L331324.  v2:= 0I;
  #L331326.  if v1 == 0 then goto L331364;
  #L33132a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L331330.  v1:= temp @kind object;
  #L331332.  v1:= (`jc.c`) v1 @kind object;
  #L331336.  call temp:= `l`(v1, v4, v2) @signature `Ljc/c;.l:(Lgc/a;Lgc/b0;)Z` @kind virtual;
  #L33133c.  v2:= temp;
  #L33133e.  if v2 == 0 then goto L33131c;
  #L331342.  call temp:= `n`(v1) @signature `Ljc/c;.n:()Z` @kind virtual;
  #L331348.  v2:= temp;
  #L33134a.  if v2 == 0 then goto L33131c;
  #L33134e.  call temp:= `d`(v5) @signature `Ljc/g;.d:()Ljc/c;` @kind virtual;
  #L331354.  v2:= temp @kind object;
  #L331356.  if v1 == v2 then goto L33131c;
  #L33135a.  call temp:= `m`(v5, v1) @signature `Ljc/g;.m:(Ljc/c;)Ljava/net/Socket;` @kind virtual;
  #L331360.  v4:= temp @kind object;
  #L331362.  return v4 @kind object;
  #L331364.  return v2 @kind object;
}
procedure `jc.c` `d`(`gc.i` v3 @kind this, `gc.a` v4 @kind object, `jc.g` v5 @kind object, `gc.b0` v6 @kind object) @signature `Lgc/i;.d:(Lgc/a;Ljc/g;Lgc/b0;)Ljc/c;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L331378.  v0:= v3.`gc.i.d` @type ^`java.util.Deque` @kind object;
  #L33137c.  call temp:= `iterator`(v0) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L331382.  v0:= temp @kind object;
  #L331384.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L33138a.  v1:= temp;
  #L33138c.  if v1 == 0 then goto L3313b2;
  #L331390.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L331396.  v1:= temp @kind object;
  #L331398.  v1:= (`jc.c`) v1 @kind object;
  #L33139c.  call temp:= `l`(v1, v4, v6) @signature `Ljc/c;.l:(Lgc/a;Lgc/b0;)Z` @kind virtual;
  #L3313a2.  v2:= temp;
  #L3313a4.  if v2 == 0 then goto L331384;
  #L3313a8.  v4:= 1I;
  #L3313aa.  call `a`(v5, v1, v4) @signature `Ljc/g;.a:(Ljc/c;Z)V` @kind virtual;
  #L3313b0.  return v1 @kind object;
  #L3313b2.  v4:= 0I;
  #L3313b4.  return v4 @kind object;
}
procedure `void` `f`(`gc.i` v2 @kind this, `jc.c` v3 @kind object) @signature `Lgc/i;.f:(Ljc/c;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3315a0.  v0:= v2.`gc.i.f` @type ^`boolean` @kind boolean;
  #L3315a4.  if v0 != 0 then goto L3315bc;
  #L3315a8.  v0:= 1I;
  #L3315aa.  v2.`gc.i.f` @type ^`boolean` := v0 @kind boolean;
  #L3315ae.  v0:= `@@gc.i.g` @type ^`java.util.concurrent.Executor` @kind object;
  #L3315b2.  v1:= v2.`gc.i.c` @type ^`java.lang.Runnable` @kind object;
  #L3315b6.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3315bc.  v0:= v2.`gc.i.d` @type ^`java.util.Deque` @kind object;
  #L3315c0.  call temp:= `add`(v0, v3) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3315c6.  return @kind void;
}
