record `gc.g$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`gc.g$a` v0 @kind this) @signature `Lgc/g$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L330844.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33084a.  return @kind void;
}
procedure `int` `a`(`gc.g$a` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lgc/g$a;.a:(Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3307cc.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3307d2.  v0:= temp;
  #L3307d4.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3307da.  v1:= temp;
  #L3307dc.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3307e2.  v0:= temp;
  #L3307e4.  v1:= 4I;
  #L3307e6.  v2:= -1I;
  #L3307e8.  v3:= 1I;
  #L3307ea.  if v1 >= v0 then goto L330812;
  #L3307ee.  call temp:= `charAt`(v7, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3307f4.  v4:= temp;
  #L3307f6.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3307fc.  v5:= temp;
  #L3307fe.  if v4 == v5 then goto L33080c;
  #L330802.  if v4 >= v5 then goto L330808;
  #L330806.  goto L33080a;
  #L330808.  v2:= 1I;
  #L33080a.  return v2;
  #L33080c.  v1:= v1 + 1;
  #L330810.  goto L3307e6;
  #L330812.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L330818.  v7:= temp;
  #L33081a.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L330820.  v8:= temp;
  #L330822.  if v7 == v8 then goto L330830;
  #L330826.  if v7 >= v8 then goto L33082c;
  #L33082a.  goto L33082e;
  #L33082c.  v2:= 1I;
  #L33082e.  return v2;
  #L330830.  v7:= 0I;
  #L330832.  return v7;
}
procedure `int` `compare`(`gc.g$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lgc/g$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3307a8.  v1:= (`java.lang.String`) v1 @kind object;
  #L3307ac.  v2:= (`java.lang.String`) v2 @kind object;
  #L3307b0.  call temp:= `a`(v0, v1, v2) @signature `Lgc/g$a;.a:(Ljava/lang/String;Ljava/lang/String;)I` @kind virtual;
  #L3307b6.  v1:= temp;
  #L3307b8.  return v1;
}
