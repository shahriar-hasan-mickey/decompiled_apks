record `gc.r$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `gc.r$a.a` @AccessFlag ;
  `java.lang.String` `gc.r$a.b` @AccessFlag ;
  `java.lang.String` `gc.r$a.c` @AccessFlag ;
  `java.lang.String` `gc.r$a.d` @AccessFlag ;
  `int` `gc.r$a.e` @AccessFlag ;
  `java.util.List` `gc.r$a.f` @AccessFlag FINAL;
  `java.util.List` `gc.r$a.g` @AccessFlag ;
  `java.lang.String` `gc.r$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`gc.r$a` v2 @kind this) @signature `Lgc/r$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L33414c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L334152.  v0:= "" @kind object;
  #L334156.  v2.`gc.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L33415a.  v2.`gc.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L33415e.  v1:= -1I;
  #L334160.  v2.`gc.r$a.e` @type ^`int` := v1;
  #L334164.  v1:= new `java.util.ArrayList`;
  #L334168.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L33416e.  v2.`gc.r$a.f` @type ^`java.util.List` := v1 @kind object;
  #L334172.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L334178.  return @kind void;
}
procedure `java.lang.String` `b`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lgc/r$a;.b:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L333fd4.  v0:= 0I;
  #L333fd6.  call temp:= `r`(v1, v2, v3, v0) @signature `Lgc/r;.r:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L333fdc.  v1:= temp @kind object;
  #L333fde.  call temp:= `c`(v1) @signature `Lhc/c;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L333fe4.  v1:= temp @kind object;
  #L333fe6.  return v1 @kind object;
}
procedure `boolean` `f`(`gc.r$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lgc/r$a;.f:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L333648.  v0:= "." @kind object;
  #L33364c.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L333652.  v0:= temp;
  #L333654.  if v0 != 0 then goto L33366e;
  #L333658.  v0:= "%2e" @kind object;
  #L33365c.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L333662.  v2:= temp;
  #L333664.  if v2 == 0 then goto L33366a;
  #L333668.  goto L33366e;
  #L33366a.  v2:= 0I;
  #L33366c.  goto L333670;
  #L33366e.  v2:= 1I;
  #L333670.  return v2;
}
procedure `boolean` `g`(`gc.r$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lgc/r$a;.g:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L333684.  v0:= ".." @kind object;
  #L333688.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33368e.  v0:= temp;
  #L333690.  if v0 != 0 then goto L3336ca;
  #L333694.  v0:= "%2e." @kind object;
  #L333698.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L33369e.  v0:= temp;
  #L3336a0.  if v0 != 0 then goto L3336ca;
  #L3336a4.  v0:= ".%2e" @kind object;
  #L3336a8.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3336ae.  v0:= temp;
  #L3336b0.  if v0 != 0 then goto L3336ca;
  #L3336b4.  v0:= "%2e%2e" @kind object;
  #L3336b8.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3336be.  v2:= temp;
  #L3336c0.  if v2 == 0 then goto L3336c6;
  #L3336c4.  goto L3336ca;
  #L3336c6.  v2:= 0I;
  #L3336c8.  goto L3336cc;
  #L3336ca.  v2:= 1I;
  #L3336cc.  return v2;
}
procedure `int` `i`(`java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lgc/r$a;.i:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L333e50.  v0:= -1I;
  #L333e52.  v4:= "" @kind object;
  #L333e56.  v5:= 0I;
  #L333e58.  v6:= 0I;
  #L333e5a.  v7:= 0I;
  #L333e5c.  v8:= 1I;
  #L333e5e.  v9:= 0I;
  #L333e60.  v1:= v10 @kind object;
  #L333e62.  v2:= v11;
  #L333e64.  v3:= v12;
  #L333e66.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lgc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L333e6c.  v10:= temp @kind object;
  #L333e6e.  call temp:= `parseInt`(v10) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L333e74.  v10:= temp;
  #L333e76.  if v10 <= 0 then goto L333e86;
  #L333e7a.  v11:= 65535I;
  #L333e80.  if v10 > v11 then goto L333e86;
  #L333e84.  return v10;
  #L333e86.  return v0;
  catch `java.lang.NumberFormatException` @[L333e52..L333e76] goto L333e86;
}
procedure `void` `k`(`gc.r$a` v3 @kind this) @signature `Lgc/r$a;.k:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L33418c.  v0:= v3.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L334190.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L334196.  v1:= temp;
  #L334198.  v1:= v1 + -1;
  #L33419c.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3341a2.  v0:= temp @kind object;
  #L3341a4.  v0:= (`java.lang.String`) v0 @kind object;
  #L3341a8.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3341ae.  v0:= temp;
  #L3341b0.  v1:= "" @kind object;
  #L3341b4.  if v0 == 0 then goto L3341e0;
  #L3341b8.  v0:= v3.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L3341bc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3341c2.  v0:= temp;
  #L3341c4.  if v0 != 0 then goto L3341e0;
  #L3341c8.  v0:= v3.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L3341cc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3341d2.  v2:= temp;
  #L3341d4.  v2:= v2 + -1;
  #L3341d8.  call temp:= `set`(v0, v2, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3341de.  goto L3341ea;
  #L3341e0.  v0:= v3.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L3341e4.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3341ea.  return @kind void;
}
procedure `int` `m`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lgc/r$a;.m:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L333ea8.  if v3 >= v4 then goto L333ee6;
  #L333eac.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L333eb2.  v0:= temp;
  #L333eb4.  v1:= 58I;
  #L333eb8.  if v0 == v1 then goto L333ee4;
  #L333ebc.  v1:= 91I;
  #L333ec0.  if v0 == v1 then goto L333ec6;
  #L333ec4.  goto L333ede;
  #L333ec6.  v3:= v3 + 1;
  #L333eca.  if v3 >= v4 then goto L333ede;
  #L333ece.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L333ed4.  v0:= temp;
  #L333ed6.  v1:= 93I;
  #L333eda.  if v0 != v1 then goto L333ec6;
  #L333ede.  v3:= v3 + 1;
  #L333ee2.  goto L333ea8;
  #L333ee4.  return v3;
  #L333ee6.  return v4;
}
procedure `void` `n`(`gc.r$a` v9 @kind this, `java.lang.String` v10 @kind object, `int` v11 , `int` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lgc/r$a;.n:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3341fc.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L334200.  v5:= 0I;
  #L334202.  v6:= 0I;
  #L334204.  v7:= 1I;
  #L334206.  v8:= 0I;
  #L334208.  v0:= v10 @kind object;
  #L33420a.  v1:= v11;
  #L33420c.  v2:= v12;
  #L33420e.  v4:= v14;
  #L334210.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lgc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L334216.  v10:= temp @kind object;
  #L334218.  call temp:= `f`(v9, v10) @signature `Lgc/r$a;.f:(Ljava/lang/String;)Z` @kind direct;
  #L33421e.  v11:= temp;
  #L334220.  if v11 == 0 then goto L334226;
  #L334224.  return @kind void;
  #L334226.  call temp:= `g`(v9, v10) @signature `Lgc/r$a;.g:(Ljava/lang/String;)Z` @kind direct;
  #L33422c.  v11:= temp;
  #L33422e.  if v11 == 0 then goto L33423a;
  #L334232.  call `k`(v9) @signature `Lgc/r$a;.k:()V` @kind direct;
  #L334238.  return @kind void;
  #L33423a.  v11:= v9.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L33423e.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L334244.  v12:= temp;
  #L334246.  v12:= v12 + -1;
  #L33424a.  call temp:= `get`(v11, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L334250.  v11:= temp @kind object;
  #L334252.  v11:= (`java.lang.String`) v11 @kind object;
  #L334256.  call temp:= `isEmpty`(v11) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L33425c.  v11:= temp;
  #L33425e.  if v11 == 0 then goto L33427a;
  #L334262.  v11:= v9.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L334266.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L33426c.  v12:= temp;
  #L33426e.  v12:= v12 + -1;
  #L334272.  call temp:= `set`(v11, v12, v10) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L334278.  goto L334284;
  #L33427a.  v11:= v9.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L33427e.  call temp:= `add`(v11, v10) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L334284.  if v13 == 0 then goto L334296;
  #L334288.  v10:= v9.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L33428c.  v11:= "" @kind object;
  #L334290.  call temp:= `add`(v10, v11) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L334296.  return @kind void;
}
procedure `void` `p`(`gc.r$a` v10 @kind this, `java.lang.String` v11 @kind object, `int` v12 , `int` v13 ) @signature `Lgc/r$a;.p:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3342a8.  if v12 != v13 then goto L3342ae;
  #L3342ac.  return @kind void;
  #L3342ae.  call temp:= `charAt`(v11, v12) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3342b4.  v0:= temp;
  #L3342b6.  v1:= 47I;
  #L3342ba.  v2:= "" @kind object;
  #L3342be.  v3:= 1I;
  #L3342c0.  if v0 == v1 then goto L3342e4;
  #L3342c4.  v1:= 92I;
  #L3342c8.  if v0 != v1 then goto L3342ce;
  #L3342cc.  goto L3342e4;
  #L3342ce.  v0:= v10.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L3342d2.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3342d8.  v1:= temp;
  #L3342da.  v1:= v1 - v3 @kind int;
  #L3342dc.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3342e2.  goto L3342fa;
  #L3342e4.  v0:= v10.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L3342e8.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3342ee.  v0:= v10.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L3342f2.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3342f8.  goto L33432a;
  #L3342fa.  v6:= v12;
  #L3342fc.  if v6 >= v13 then goto L334330;
  #L334300.  v12:= "/\\" @kind object;
  #L334304.  call temp:= `m`(v11, v6, v13, v12) @signature `Lhc/c;.m:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L33430a.  v12:= temp;
  #L33430c.  if v12 >= v13 then goto L334314;
  #L334310.  v0:= 1I;
  #L334312.  goto L334316;
  #L334314.  v0:= 0I;
  #L334316.  v9:= 1I;
  #L334318.  v4:= v10 @kind object;
  #L33431a.  v5:= v11 @kind object;
  #L33431c.  v7:= v12;
  #L33431e.  v8:= v0;
  #L334320.  call `n`(v4, v5, v6, v7, v8, v9) @signature `Lgc/r$a;.n:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L334326.  if v0 == 0 then goto L3342fa;
  #L33432a.  v12:= v12 + 1;
  #L33432e.  goto L3342fa;
  #L334330.  return @kind void;
}
procedure `int` `r`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lgc/r$a;.r:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L333ef8.  v0:= v9 - v8 @kind int;
  #L333efc.  v1:= -1I;
  #L333efe.  v2:= 2I;
  #L333f00.  if v0 >= v2 then goto L333f06;
  #L333f04.  return v1;
  #L333f06.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L333f0c.  v0:= temp;
  #L333f0e.  v2:= 90I;
  #L333f12.  v3:= 122I;
  #L333f16.  v4:= 65I;
  #L333f1a.  v5:= 97I;
  #L333f1e.  if v0 < v5 then goto L333f26;
  #L333f22.  if v0 <= v3 then goto L333f30;
  #L333f26.  if v0 < v4 then goto L333f84;
  #L333f2a.  if v0 <= v2 then goto L333f30;
  #L333f2e.  goto L333f84;
  #L333f30.  v8:= v8 + 1;
  #L333f34.  if v8 >= v9 then goto L333f84;
  #L333f38.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L333f3e.  v0:= temp;
  #L333f40.  if v0 < v5 then goto L333f48;
  #L333f44.  if v0 <= v3 then goto L333f30;
  #L333f48.  if v0 < v4 then goto L333f50;
  #L333f4c.  if v0 <= v2 then goto L333f30;
  #L333f50.  v6:= 48I;
  #L333f54.  if v0 < v6 then goto L333f60;
  #L333f58.  v6:= 57I;
  #L333f5c.  if v0 <= v6 then goto L333f30;
  #L333f60.  v6:= 43I;
  #L333f64.  if v0 == v6 then goto L333f30;
  #L333f68.  v6:= 45I;
  #L333f6c.  if v0 == v6 then goto L333f30;
  #L333f70.  v6:= 46I;
  #L333f74.  if v0 != v6 then goto L333f7a;
  #L333f78.  goto L333f30;
  #L333f7a.  v7:= 58I;
  #L333f7e.  if v0 != v7 then goto L333f84;
  #L333f82.  return v8;
  #L333f84.  return v1;
}
procedure `int` `s`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lgc/r$a;.s:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L333f98.  v0:= 0I;
  #L333f9a.  if v4 >= v5 then goto L333fc0;
  #L333f9e.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L333fa4.  v1:= temp;
  #L333fa6.  v2:= 92I;
  #L333faa.  if v1 == v2 then goto L333fb6;
  #L333fae.  v2:= 47I;
  #L333fb2.  if v1 != v2 then goto L333fc0;
  #L333fb6.  v0:= v0 + 1;
  #L333fba.  v4:= v4 + 1;
  #L333fbe.  goto L333f9a;
  #L333fc0.  return v0;
}
procedure `gc.r` `a`(`gc.r$a` v2 @kind this) @signature `Lgc/r$a;.a:()Lgc/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3336e0.  v0:= v2.`gc.r$a.a` @type ^`java.lang.String` @kind object;
  #L3336e4.  if v0 == 0 then goto L33370c;
  #L3336e8.  v0:= v2.`gc.r$a.d` @type ^`java.lang.String` @kind object;
  #L3336ec.  if v0 == 0 then goto L3336fc;
  #L3336f0.  v0:= new `gc.r`;
  #L3336f4.  call `<init>`(v0, v2) @signature `Lgc/r;.<init>:(Lgc/r$a;)V` @kind direct;
  #L3336fa.  return v0 @kind object;
  #L3336fc.  v0:= new `java.lang.IllegalStateException`;
  #L333700.  v1:= "host == null" @kind object;
  #L333704.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33370a.  throw v0;
  #L33370c.  v0:= new `java.lang.IllegalStateException`;
  #L333710.  v1:= "scheme == null" @kind object;
  #L333714.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33371a.  throw v0;
}
procedure `int` `c`(`gc.r$a` v2 @kind this) @signature `Lgc/r$a;.c:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L333e24.  v0:= v2.`gc.r$a.e` @type ^`int`;
  #L333e28.  v1:= -1I;
  #L333e2a.  if v0 == v1 then goto L333e30;
  #L333e2e.  goto L333e3c;
  #L333e30.  v0:= v2.`gc.r$a.a` @type ^`java.lang.String` @kind object;
  #L333e34.  call temp:= `d`(v0) @signature `Lgc/r;.d:(Ljava/lang/String;)I` @kind static;
  #L333e3a.  v0:= temp;
  #L333e3c.  return v0;
}
procedure `gc.r$a` `d`(`gc.r$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lgc/r$a;.d:(Ljava/lang/String;)Lgc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L33372c.  if v7 == 0 then goto L333750;
  #L333730.  v2:= 1I;
  #L333732.  v3:= 0I;
  #L333734.  v4:= 1I;
  #L333736.  v5:= 1I;
  #L333738.  v1:= " \"'<>#" @kind object;
  #L33373c.  v0:= v7 @kind object;
  #L33373e.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lgc/r;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L333744.  v7:= temp @kind object;
  #L333746.  call temp:= `y`(v7) @signature `Lgc/r;.y:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L33374c.  v7:= temp @kind object;
  #L33374e.  goto L333752;
  #L333750.  v7:= 0I;
  #L333752.  v6.`gc.r$a.g` @type ^`java.util.List` := v7 @kind object;
  #L333756.  return v6 @kind object;
}
procedure `gc.r$a` `e`(`gc.r$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lgc/r$a;.e:(Ljava/lang/String;)Lgc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L333768.  v0:= "host == null" @kind object;
  #L33376c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L333772.  v0:= 0I;
  #L333774.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33377a.  v1:= temp;
  #L33377c.  call temp:= `b`(v4, v0, v1) @signature `Lgc/r$a;.b:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L333782.  v0:= temp @kind object;
  #L333784.  if v0 == 0 then goto L33378e;
  #L333788.  v3.`gc.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L33378c.  return v3 @kind object;
  #L33378e.  v0:= new `java.lang.IllegalArgumentException`;
  #L333792.  v1:= new `java.lang.StringBuilder`;
  #L333796.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33379c.  v2:= "unexpected host: " @kind object;
  #L3337a0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3337a6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3337ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3337b2.  v4:= temp @kind object;
  #L3337b4.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3337ba.  throw v0;
}
procedure `gc.r$a` `h`(`gc.r$a` v21 @kind this, `gc.r` v22 @kind object, `java.lang.String` v23 @kind object) @signature `Lgc/r$a;.h:(Lgc/r;Ljava/lang/String;)Lgc/r$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L3337cc.  v0:= v21 @kind object;
  #L3337d0.  v1:= v22 @kind object;
  #L3337d4.  v10:= v23 @kind object;
  #L3337d8.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3337de.  v2:= temp;
  #L3337e0.  v8:= 0I;
  #L3337e2.  call temp:= `C`(v10, v8, v2) @signature `Lhc/c;.C:(Ljava/lang/String;II)I` @kind static;
  #L3337e8.  v9:= temp;
  #L3337ea.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3337f0.  v2:= temp;
  #L3337f2.  call temp:= `D`(v10, v9, v2) @signature `Lhc/c;.D:(Ljava/lang/String;II)I` @kind static;
  #L3337f8.  v11:= temp;
  #L3337fa.  call temp:= `r`(v10, v9, v11) @signature `Lgc/r$a;.r:(Ljava/lang/String;II)I` @kind static;
  #L333800.  v12:= temp;
  #L333802.  v13:= -1I;
  #L333804.  if v12 == v13 then goto L33389c;
  #L333808.  v3:= 1I;
  #L33380a.  v6:= 0I;
  #L33380c.  v7:= 6I;
  #L33380e.  v5:= "https:" @kind object;
  #L333812.  v2:= v23 @kind object;
  #L333816.  v4:= v9;
  #L333818.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L33381e.  v2:= temp;
  #L333820.  if v2 == 0 then goto L333832;
  #L333824.  v2:= "https" @kind object;
  #L333828.  v0.`gc.r$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L33382c.  v9:= v9 + 6;
  #L333830.  goto L3338a8;
  #L333832.  v3:= 1I;
  #L333834.  v6:= 0I;
  #L333836.  v7:= 5I;
  #L333838.  v5:= "http:" @kind object;
  #L33383c.  v2:= v23 @kind object;
  #L333840.  v4:= v9;
  #L333842.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L333848.  v2:= temp;
  #L33384a.  if v2 == 0 then goto L33385c;
  #L33384e.  v2:= "http" @kind object;
  #L333852.  v0.`gc.r$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L333856.  v9:= v9 + 5;
  #L33385a.  goto L3338a8;
  #L33385c.  v1:= new `java.lang.IllegalArgumentException`;
  #L333860.  v2:= new `java.lang.StringBuilder`;
  #L333864.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33386a.  v3:= "Expected URL scheme 'http' or 'https' but was '" @kind object;
  #L33386e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333874.  call temp:= `substring`(v10, v8, v12) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L33387a.  v3:= temp @kind object;
  #L33387c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333882.  v3:= "'" @kind object;
  #L333886.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33388c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L333892.  v2:= temp @kind object;
  #L333894.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33389a.  throw v1;
  #L33389c.  if v1 == 0 then goto L333c00;
  #L3338a0.  v2:= v1.`gc.r.a` @type ^`java.lang.String` @kind object;
  #L3338a4.  v0.`gc.r$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L3338a8.  call temp:= `s`(v10, v9, v11) @signature `Lgc/r$a;.s:(Ljava/lang/String;II)I` @kind static;
  #L3338ae.  v2:= temp;
  #L3338b0.  v3:= 2I;
  #L3338b2.  v12:= 63I;
  #L3338b6.  v14:= 35I;
  #L3338ba.  if v2 >= v3 then goto L33393e;
  #L3338be.  if v1 == 0 then goto L33393e;
  #L3338c2.  v3:= v1.`gc.r.a` @type ^`java.lang.String` @kind object;
  #L3338c6.  v4:= v0.`gc.r$a.a` @type ^`java.lang.String` @kind object;
  #L3338ca.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3338d0.  v3:= temp;
  #L3338d2.  if v3 != 0 then goto L3338d8;
  #L3338d6.  goto L33393e;
  #L3338d8.  call temp:= `j`(v22) @signature `Lgc/r;.j:()Ljava/lang/String;` @kind virtual;
  #L3338de.  v2:= temp @kind object;
  #L3338e0.  v0.`gc.r$a.b` @type ^`java.lang.String` := v2 @kind object;
  #L3338e4.  call temp:= `f`(v22) @signature `Lgc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L3338ea.  v2:= temp @kind object;
  #L3338ec.  v0.`gc.r$a.c` @type ^`java.lang.String` := v2 @kind object;
  #L3338f0.  v2:= v1.`gc.r.d` @type ^`java.lang.String` @kind object;
  #L3338f4.  v0.`gc.r$a.d` @type ^`java.lang.String` := v2 @kind object;
  #L3338f8.  v2:= v1.`gc.r.e` @type ^`int`;
  #L3338fc.  v0.`gc.r$a.e` @type ^`int` := v2;
  #L333900.  v2:= v0.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L333904.  call `clear`(v2) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L33390a.  v2:= v0.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L33390e.  call temp:= `h`(v22) @signature `Lgc/r;.h:()Ljava/util/List;` @kind virtual;
  #L333914.  v3:= temp @kind object;
  #L333916.  call temp:= `addAll`(v2, v3) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L33391c.  if v9 == v11 then goto L33392c;
  #L333920.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L333926.  v2:= temp;
  #L333928.  if v2 != v14 then goto L333b2a;
  #L33392c.  call temp:= `i`(v22) @signature `Lgc/r;.i:()Ljava/lang/String;` @kind virtual;
  #L333932.  v1:= temp @kind object;
  #L333934.  call temp:= `d`(v0, v1) @signature `Lgc/r$a;.d:(Ljava/lang/String;)Lgc/r$a;` @kind virtual;
  #L33393a.  goto L333b2a;
  #L33393e.  v9:= v9 + v2 @kind int;
  #L333940.  v2:= v9;
  #L333942.  v16:= 0I;
  #L333946.  v17:= 0I;
  #L33394a.  v1:= "@/\\?#" @kind object;
  #L33394e.  call temp:= `m`(v10, v2, v11, v1) @signature `Lhc/c;.m:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L333954.  v9:= temp;
  #L333956.  if v9 == v11 then goto L333964;
  #L33395a.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L333960.  v1:= temp;
  #L333962.  goto L333966;
  #L333964.  v1:= -1I;
  #L333966.  if v1 == v13 then goto L333a94;
  #L33396a.  if v1 == v14 then goto L333a94;
  #L33396e.  v3:= 47I;
  #L333972.  if v1 == v3 then goto L333a94;
  #L333976.  v3:= 92I;
  #L33397a.  if v1 == v3 then goto L333a94;
  #L33397e.  if v1 == v12 then goto L333a94;
  #L333982.  v3:= 64I;
  #L333986.  if v1 == v3 then goto L33398e;
  #L33398a.  goto L333a88;
  #L33398e.  v8:= "%40" @kind object;
  #L333992.  if v16 != 0 then goto L333a38;
  #L333996.  v1:= 58I;
  #L33399a.  call temp:= `l`(v10, v2, v9, v1) @signature `Lhc/c;.l:(Ljava/lang/String;IIC)I` @kind static;
  #L3339a0.  v7:= temp;
  #L3339a2.  v5:= 1I;
  #L3339a4.  v6:= 0I;
  #L3339a6.  v18:= 0I;
  #L3339aa.  v19:= 1I;
  #L3339ae.  v20:= 0I;
  #L3339b2.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L3339b6.  v1:= v23 @kind object;
  #L3339ba.  v3:= v7;
  #L3339bc.  v15:= v7;
  #L3339be.  v7:= v18;
  #L3339c2.  v14:= v8 @kind object;
  #L3339c4.  v8:= v19;
  #L3339c8.  v12:= v9;
  #L3339ca.  v9:= v20 @kind object;
  #L3339ce.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lgc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L3339d4.  v1:= temp @kind object;
  #L3339d6.  if v17 == 0 then goto L333a02;
  #L3339da.  v2:= new `java.lang.StringBuilder`;
  #L3339de.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3339e4.  v3:= v0.`gc.r$a.b` @type ^`java.lang.String` @kind object;
  #L3339e8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3339ee.  call temp:= `append`(v2, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3339f4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3339fa.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L333a00.  v1:= temp @kind object;
  #L333a02.  v0.`gc.r$a.b` @type ^`java.lang.String` := v1 @kind object;
  #L333a06.  if v15 == v12 then goto L333a32;
  #L333a0a.  v2:= v15 + 1;
  #L333a0e.  v5:= 1I;
  #L333a10.  v6:= 0I;
  #L333a12.  v7:= 0I;
  #L333a14.  v8:= 1I;
  #L333a16.  v9:= 0I;
  #L333a18.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L333a1c.  v1:= v23 @kind object;
  #L333a20.  v3:= v12;
  #L333a22.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lgc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L333a28.  v1:= temp @kind object;
  #L333a2a.  v0.`gc.r$a.c` @type ^`java.lang.String` := v1 @kind object;
  #L333a2e.  v16:= 1I;
  #L333a32.  v17:= 1I;
  #L333a36.  goto L333a84;
  #L333a38.  v14:= v8 @kind object;
  #L333a3a.  v12:= v9;
  #L333a3c.  v15:= new `java.lang.StringBuilder`;
  #L333a40.  call `<init>`(v15) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L333a46.  v1:= v0.`gc.r$a.c` @type ^`java.lang.String` @kind object;
  #L333a4a.  call temp:= `append`(v15, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333a50.  call temp:= `append`(v15, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333a56.  v5:= 1I;
  #L333a58.  v6:= 0I;
  #L333a5a.  v7:= 0I;
  #L333a5c.  v8:= 1I;
  #L333a5e.  v9:= 0I;
  #L333a60.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L333a64.  v1:= v23 @kind object;
  #L333a68.  v3:= v12;
  #L333a6a.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lgc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L333a70.  v1:= temp @kind object;
  #L333a72.  call temp:= `append`(v15, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333a78.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L333a7e.  v1:= temp @kind object;
  #L333a80.  v0.`gc.r$a.c` @type ^`java.lang.String` := v1 @kind object;
  #L333a84.  v2:= v12 + 1;
  #L333a88.  v12:= 63I;
  #L333a8c.  v14:= 35I;
  #L333a90.  goto L33394a;
  #L333a94.  v12:= v9;
  #L333a96.  call temp:= `m`(v10, v2, v12) @signature `Lgc/r$a;.m:(Ljava/lang/String;II)I` @kind static;
  #L333a9c.  v1:= temp;
  #L333a9e.  v3:= v1 + 1;
  #L333aa2.  v4:= 34I;
  #L333aa6.  if v3 >= v12 then goto L333b04;
  #L333aaa.  call temp:= `b`(v10, v2, v1) @signature `Lgc/r$a;.b:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L333ab0.  v5:= temp @kind object;
  #L333ab2.  v0.`gc.r$a.d` @type ^`java.lang.String` := v5 @kind object;
  #L333ab6.  call temp:= `i`(v10, v3, v12) @signature `Lgc/r$a;.i:(Ljava/lang/String;II)I` @kind static;
  #L333abc.  v5:= temp;
  #L333abe.  v0.`gc.r$a.e` @type ^`int` := v5;
  #L333ac2.  if v5 == v13 then goto L333ac8;
  #L333ac6.  goto L333b20;
  #L333ac8.  v1:= new `java.lang.IllegalArgumentException`;
  #L333acc.  v2:= new `java.lang.StringBuilder`;
  #L333ad0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L333ad6.  v5:= "Invalid URL port: \"" @kind object;
  #L333ada.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333ae0.  call temp:= `substring`(v10, v3, v12) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L333ae6.  v3:= temp @kind object;
  #L333ae8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333aee.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L333af4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L333afa.  v2:= temp @kind object;
  #L333afc.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L333b02.  throw v1;
  #L333b04.  call temp:= `b`(v10, v2, v1) @signature `Lgc/r$a;.b:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L333b0a.  v3:= temp @kind object;
  #L333b0c.  v0.`gc.r$a.d` @type ^`java.lang.String` := v3 @kind object;
  #L333b10.  v3:= v0.`gc.r$a.a` @type ^`java.lang.String` @kind object;
  #L333b14.  call temp:= `d`(v3) @signature `Lgc/r;.d:(Ljava/lang/String;)I` @kind static;
  #L333b1a.  v3:= temp;
  #L333b1c.  v0.`gc.r$a.e` @type ^`int` := v3;
  #L333b20.  v3:= v0.`gc.r$a.d` @type ^`java.lang.String` @kind object;
  #L333b24.  if v3 == 0 then goto L333bc4;
  #L333b28.  v9:= v12;
  #L333b2a.  v1:= "?#" @kind object;
  #L333b2e.  call temp:= `m`(v10, v9, v11, v1) @signature `Lhc/c;.m:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L333b34.  v1:= temp;
  #L333b36.  call `p`(v0, v10, v9, v1) @signature `Lgc/r$a;.p:(Ljava/lang/String;II)V` @kind direct;
  #L333b3c.  if v1 >= v11 then goto L333b8a;
  #L333b40.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L333b46.  v2:= temp;
  #L333b48.  v3:= 63I;
  #L333b4c.  if v2 != v3 then goto L333b8a;
  #L333b50.  v2:= 35I;
  #L333b54.  call temp:= `l`(v10, v1, v11, v2) @signature `Lhc/c;.l:(Ljava/lang/String;IIC)I` @kind static;
  #L333b5a.  v12:= temp;
  #L333b5c.  v2:= v1 + 1;
  #L333b60.  v5:= 1I;
  #L333b62.  v6:= 0I;
  #L333b64.  v7:= 1I;
  #L333b66.  v8:= 1I;
  #L333b68.  v9:= 0I;
  #L333b6a.  v4:= " \"'<>#" @kind object;
  #L333b6e.  v1:= v23 @kind object;
  #L333b72.  v3:= v12;
  #L333b74.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lgc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L333b7a.  v1:= temp @kind object;
  #L333b7c.  call temp:= `y`(v1) @signature `Lgc/r;.y:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L333b82.  v1:= temp @kind object;
  #L333b84.  v0.`gc.r$a.g` @type ^`java.util.List` := v1 @kind object;
  #L333b88.  v1:= v12;
  #L333b8a.  if v1 >= v11 then goto L333bc2;
  #L333b8e.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L333b94.  v2:= temp;
  #L333b96.  v3:= 35I;
  #L333b9a.  if v2 != v3 then goto L333bc2;
  #L333b9e.  v2:= 1I;
  #L333ba0.  v2:= v2 + v1 @kind int;
  #L333ba2.  v5:= 1I;
  #L333ba4.  v6:= 0I;
  #L333ba6.  v7:= 0I;
  #L333ba8.  v8:= 0I;
  #L333baa.  v9:= 0I;
  #L333bac.  v4:= "" @kind object;
  #L333bb0.  v1:= v23 @kind object;
  #L333bb4.  v3:= v11;
  #L333bb6.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lgc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L333bbc.  v1:= temp @kind object;
  #L333bbe.  v0.`gc.r$a.h` @type ^`java.lang.String` := v1 @kind object;
  #L333bc2.  return v0 @kind object;
  #L333bc4.  v3:= new `java.lang.IllegalArgumentException`;
  #L333bc8.  v5:= new `java.lang.StringBuilder`;
  #L333bcc.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L333bd2.  v6:= "Invalid URL host: \"" @kind object;
  #L333bd6.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333bdc.  call temp:= `substring`(v10, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L333be2.  v1:= temp @kind object;
  #L333be4.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333bea.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L333bf0.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L333bf6.  v1:= temp @kind object;
  #L333bf8.  call `<init>`(v3, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L333bfe.  throw v3;
  #L333c00.  v1:= new `java.lang.IllegalArgumentException`;
  #L333c04.  v2:= "Expected URL scheme 'http' or 'https' but no colon was found" @kind object;
  #L333c08.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L333c0e.  throw v1;
}
procedure `gc.r$a` `j`(`gc.r$a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lgc/r$a;.j:(Ljava/lang/String;)Lgc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L333c20.  v0:= "password == null" @kind object;
  #L333c24.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L333c2a.  v3:= 0I;
  #L333c2c.  v4:= 0I;
  #L333c2e.  v5:= 0I;
  #L333c30.  v6:= 1I;
  #L333c32.  v2:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L333c36.  v1:= v8 @kind object;
  #L333c38.  call temp:= `b`(v1, v2, v3, v4, v5, v6) @signature `Lgc/r;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L333c3e.  v8:= temp @kind object;
  #L333c40.  v7.`gc.r$a.c` @type ^`java.lang.String` := v8 @kind object;
  #L333c44.  return v7 @kind object;
}
procedure `gc.r$a` `l`(`gc.r$a` v3 @kind this, `int` v4 ) @signature `Lgc/r$a;.l:(I)Lgc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L333c58.  if v4 <= 0 then goto L333c6c;
  #L333c5c.  v0:= 65535I;
  #L333c62.  if v4 > v0 then goto L333c6c;
  #L333c66.  v3.`gc.r$a.e` @type ^`int` := v4;
  #L333c6a.  return v3 @kind object;
  #L333c6c.  v0:= new `java.lang.IllegalArgumentException`;
  #L333c70.  v1:= new `java.lang.StringBuilder`;
  #L333c74.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L333c7a.  v2:= "unexpected port: " @kind object;
  #L333c7e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333c84.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L333c8a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L333c90.  v4:= temp @kind object;
  #L333c92.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L333c98.  throw v0;
}
procedure `gc.r$a` `o`(`gc.r$a` v10 @kind this) @signature `Lgc/r$a;.o:()Lgc/r$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L333cac.  v0:= v10.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L333cb0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L333cb6.  v0:= temp;
  #L333cb8.  v1:= 0I;
  #L333cba.  v2:= 0I;
  #L333cbc.  if v2 >= v0 then goto L333cf6;
  #L333cc0.  v3:= v10.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L333cc4.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L333cca.  v3:= temp @kind object;
  #L333ccc.  v4:= v3 @kind object;
  #L333cce.  v4:= (`java.lang.String`) v4 @kind object;
  #L333cd2.  v3:= v10.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L333cd6.  v6:= 1I;
  #L333cd8.  v7:= 1I;
  #L333cda.  v8:= 0I;
  #L333cdc.  v9:= 1I;
  #L333cde.  v5:= "[]" @kind object;
  #L333ce2.  call temp:= `b`(v4, v5, v6, v7, v8, v9) @signature `Lgc/r;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L333ce8.  v4:= temp @kind object;
  #L333cea.  call temp:= `set`(v3, v2, v4) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L333cf0.  v2:= v2 + 1;
  #L333cf4.  goto L333cbc;
  #L333cf6.  v0:= v10.`gc.r$a.g` @type ^`java.util.List` @kind object;
  #L333cfa.  if v0 == 0 then goto L333d44;
  #L333cfe.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L333d04.  v0:= temp;
  #L333d06.  if v1 >= v0 then goto L333d44;
  #L333d0a.  v2:= v10.`gc.r$a.g` @type ^`java.util.List` @kind object;
  #L333d0e.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L333d14.  v2:= temp @kind object;
  #L333d16.  v3:= v2 @kind object;
  #L333d18.  v3:= (`java.lang.String`) v3 @kind object;
  #L333d1c.  if v3 == 0 then goto L333d3e;
  #L333d20.  v2:= v10.`gc.r$a.g` @type ^`java.util.List` @kind object;
  #L333d24.  v5:= 1I;
  #L333d26.  v6:= 1I;
  #L333d28.  v7:= 1I;
  #L333d2a.  v8:= 1I;
  #L333d2c.  v4:= "\\^`{|}" @kind object;
  #L333d30.  call temp:= `b`(v3, v4, v5, v6, v7, v8) @signature `Lgc/r;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L333d36.  v3:= temp @kind object;
  #L333d38.  call temp:= `set`(v2, v1, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L333d3e.  v1:= v1 + 1;
  #L333d42.  goto L333d06;
  #L333d44.  v2:= v10.`gc.r$a.h` @type ^`java.lang.String` @kind object;
  #L333d48.  if v2 == 0 then goto L333d64;
  #L333d4c.  v4:= 1I;
  #L333d4e.  v5:= 1I;
  #L333d50.  v6:= 0I;
  #L333d52.  v7:= 0I;
  #L333d54.  v3:= " \"#<>\\^`{|}" @kind object;
  #L333d58.  call temp:= `b`(v2, v3, v4, v5, v6, v7) @signature `Lgc/r;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L333d5e.  v0:= temp @kind object;
  #L333d60.  v10.`gc.r$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L333d64.  return v10 @kind object;
}
procedure `gc.r$a` `q`(`gc.r$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lgc/r$a;.q:(Ljava/lang/String;)Lgc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L333d78.  v0:= "scheme == null" @kind object;
  #L333d7c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L333d82.  v0:= "http" @kind object;
  #L333d86.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L333d8c.  v1:= temp;
  #L333d8e.  if v1 == 0 then goto L333d98;
  #L333d92.  v3.`gc.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L333d96.  goto L333daa;
  #L333d98.  v0:= "https" @kind object;
  #L333d9c.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L333da2.  v1:= temp;
  #L333da4.  if v1 == 0 then goto L333dac;
  #L333da8.  goto L333d92;
  #L333daa.  return v3 @kind object;
  #L333dac.  v0:= new `java.lang.IllegalArgumentException`;
  #L333db0.  v1:= new `java.lang.StringBuilder`;
  #L333db4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L333dba.  v2:= "unexpected scheme: " @kind object;
  #L333dbe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333dc4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333dca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L333dd0.  v4:= temp @kind object;
  #L333dd2.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L333dd8.  throw v0;
}
procedure `gc.r$a` `t`(`gc.r$a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lgc/r$a;.t:(Ljava/lang/String;)Lgc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L333dec.  v0:= "username == null" @kind object;
  #L333df0.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L333df6.  v3:= 0I;
  #L333df8.  v4:= 0I;
  #L333dfa.  v5:= 0I;
  #L333dfc.  v6:= 1I;
  #L333dfe.  v2:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L333e02.  v1:= v8 @kind object;
  #L333e04.  call temp:= `b`(v1, v2, v3, v4, v5, v6) @signature `Lgc/r;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L333e0a.  v8:= temp @kind object;
  #L333e0c.  v7.`gc.r$a.b` @type ^`java.lang.String` := v8 @kind object;
  #L333e10.  return v7 @kind object;
}
procedure `java.lang.String` `toString`(`gc.r$a` v4 @kind this) @signature `Lgc/r$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L333ff8.  v0:= new `java.lang.StringBuilder`;
  #L333ffc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L334002.  v1:= v4.`gc.r$a.a` @type ^`java.lang.String` @kind object;
  #L334006.  if v1 == 0 then goto L334016;
  #L33400a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334010.  v1:= "://" @kind object;
  #L334014.  goto L33401a;
  #L334016.  v1:= "//" @kind object;
  #L33401a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334020.  v1:= v4.`gc.r$a.b` @type ^`java.lang.String` @kind object;
  #L334024.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L33402a.  v1:= temp;
  #L33402c.  v2:= 58I;
  #L334030.  if v1 == 0 then goto L334044;
  #L334034.  v1:= v4.`gc.r$a.c` @type ^`java.lang.String` @kind object;
  #L334038.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L33403e.  v1:= temp;
  #L334040.  if v1 != 0 then goto L334078;
  #L334044.  v1:= v4.`gc.r$a.b` @type ^`java.lang.String` @kind object;
  #L334048.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33404e.  v1:= v4.`gc.r$a.c` @type ^`java.lang.String` @kind object;
  #L334052.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L334058.  v1:= temp;
  #L33405a.  if v1 != 0 then goto L33406e;
  #L33405e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L334064.  v1:= v4.`gc.r$a.c` @type ^`java.lang.String` @kind object;
  #L334068.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33406e.  v1:= 64I;
  #L334072.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L334078.  v1:= v4.`gc.r$a.d` @type ^`java.lang.String` @kind object;
  #L33407c.  v3:= -1I;
  #L33407e.  if v1 == 0 then goto L3340b8;
  #L334082.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L334088.  v1:= temp;
  #L33408a.  if v1 == v3 then goto L3340ae;
  #L33408e.  v1:= 91I;
  #L334092.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L334098.  v1:= v4.`gc.r$a.d` @type ^`java.lang.String` @kind object;
  #L33409c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3340a2.  v1:= 93I;
  #L3340a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3340ac.  goto L3340b8;
  #L3340ae.  v1:= v4.`gc.r$a.d` @type ^`java.lang.String` @kind object;
  #L3340b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3340b8.  v1:= v4.`gc.r$a.e` @type ^`int`;
  #L3340bc.  if v1 != v3 then goto L3340c8;
  #L3340c0.  v1:= v4.`gc.r$a.a` @type ^`java.lang.String` @kind object;
  #L3340c4.  if v1 == 0 then goto L3340f0;
  #L3340c8.  call temp:= `c`(v4) @signature `Lgc/r$a;.c:()I` @kind virtual;
  #L3340ce.  v1:= temp;
  #L3340d0.  v3:= v4.`gc.r$a.a` @type ^`java.lang.String` @kind object;
  #L3340d4.  if v3 == 0 then goto L3340e4;
  #L3340d8.  call temp:= `d`(v3) @signature `Lgc/r;.d:(Ljava/lang/String;)I` @kind static;
  #L3340de.  v3:= temp;
  #L3340e0.  if v1 == v3 then goto L3340f0;
  #L3340e4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3340ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3340f0.  v1:= v4.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L3340f4.  call `q`(v0, v1) @signature `Lgc/r;.q:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L3340fa.  v1:= v4.`gc.r$a.g` @type ^`java.util.List` @kind object;
  #L3340fe.  if v1 == 0 then goto L334116;
  #L334102.  v1:= 63I;
  #L334106.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L33410c.  v1:= v4.`gc.r$a.g` @type ^`java.util.List` @kind object;
  #L334110.  call `n`(v0, v1) @signature `Lgc/r;.n:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L334116.  v1:= v4.`gc.r$a.h` @type ^`java.lang.String` @kind object;
  #L33411a.  if v1 == 0 then goto L334132;
  #L33411e.  v1:= 35I;
  #L334122.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L334128.  v1:= v4.`gc.r$a.h` @type ^`java.lang.String` @kind object;
  #L33412c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334132.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L334138.  v0:= temp @kind object;
  #L33413a.  return v0 @kind object;
}
