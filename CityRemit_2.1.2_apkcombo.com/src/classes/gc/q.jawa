record `gc.q` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String`[] `gc.q.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`gc.q` v1 @kind this, `gc.q$a` v2 @kind object) @signature `Lgc/q;.<init>:(Lgc/q$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3334a4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3334aa.  v2:= v2.`gc.q$a.a` @type ^`java.util.List` @kind object;
  #L3334ae.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3334b4.  v0:= temp;
  #L3334b6.  v0:= new `java.lang.String`[v0];
  #L3334ba.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3334c0.  v2:= temp @kind object;
  #L3334c2.  v2:= (`java.lang.String`[]) v2 @kind object;
  #L3334c6.  v1.`gc.q.a` @type ^`java.lang.String`[] := v2 @kind object;
  #L3334ca.  return @kind void;
}
procedure `void` `a`(`java.lang.String` v5 @kind object) @signature `Lgc/q;.a:(Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3334dc.  v0:= "name == null" @kind object;
  #L3334e0.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3334e6.  call temp:= `isEmpty`(v5) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3334ec.  v0:= temp;
  #L3334ee.  if v0 != 0 then goto L333560;
  #L3334f2.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3334f8.  v0:= temp;
  #L3334fa.  v1:= 0I;
  #L3334fc.  v2:= 0I;
  #L3334fe.  if v2 >= v0 then goto L33355e;
  #L333502.  call temp:= `charAt`(v5, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L333508.  v3:= temp;
  #L33350a.  v4:= 32I;
  #L33350e.  if v3 <= v4 then goto L333520;
  #L333512.  v4:= 127I;
  #L333516.  if v3 >= v4 then goto L333520;
  #L33351a.  v2:= v2 + 1;
  #L33351e.  goto L3334fe;
  #L333520.  v0:= new `java.lang.IllegalArgumentException`;
  #L333524.  v4:= 3I;
  #L333526.  v4:= new `java.lang.Object`[v4];
  #L33352a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L333530.  v3:= temp @kind object;
  #L333532.  v4[v1]:= v3 @kind object;
  #L333536.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L33353c.  v1:= temp @kind object;
  #L33353e.  v2:= 1I;
  #L333540.  v4[v2]:= v1 @kind object;
  #L333544.  v1:= 2I;
  #L333546.  v4[v1]:= v5 @kind object;
  #L33354a.  v5:= "Unexpected char %#04x at %d in header name: %s" @kind object;
  #L33354e.  call temp:= `p`(v5, v4) @signature `Lhc/c;.p:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L333554.  v5:= temp @kind object;
  #L333556.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33355c.  throw v0;
  #L33355e.  return @kind void;
  #L333560.  v5:= new `java.lang.IllegalArgumentException`;
  #L333564.  v0:= "name is empty" @kind object;
  #L333568.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33356e.  throw v5;
}
procedure `void` `b`(`java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lgc/q;.b:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L333580.  if v5 == 0 then goto L333600;
  #L333584.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33358a.  v0:= temp;
  #L33358c.  v1:= 0I;
  #L33358e.  v2:= 0I;
  #L333590.  if v2 >= v0 then goto L3335fe;
  #L333594.  call temp:= `charAt`(v5, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L33359a.  v3:= temp;
  #L33359c.  v4:= 31I;
  #L3335a0.  if v3 > v4 then goto L3335ac;
  #L3335a4.  v4:= 9I;
  #L3335a8.  if v3 != v4 then goto L3335ba;
  #L3335ac.  v4:= 127I;
  #L3335b0.  if v3 >= v4 then goto L3335ba;
  #L3335b4.  v2:= v2 + 1;
  #L3335b8.  goto L333590;
  #L3335ba.  v0:= new `java.lang.IllegalArgumentException`;
  #L3335be.  v4:= 4I;
  #L3335c0.  v4:= new `java.lang.Object`[v4];
  #L3335c4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3335ca.  v3:= temp @kind object;
  #L3335cc.  v4[v1]:= v3 @kind object;
  #L3335d0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3335d6.  v1:= temp @kind object;
  #L3335d8.  v2:= 1I;
  #L3335da.  v4[v2]:= v1 @kind object;
  #L3335de.  v1:= 2I;
  #L3335e0.  v4[v1]:= v6 @kind object;
  #L3335e4.  v6:= 3I;
  #L3335e6.  v4[v6]:= v5 @kind object;
  #L3335ea.  v5:= "Unexpected char %#04x at %d in %s value: %s" @kind object;
  #L3335ee.  call temp:= `p`(v5, v4) @signature `Lhc/c;.p:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3335f4.  v5:= temp @kind object;
  #L3335f6.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3335fc.  throw v0;
  #L3335fe.  return @kind void;
  #L333600.  v5:= new `java.lang.NullPointerException`;
  #L333604.  v0:= new `java.lang.StringBuilder`;
  #L333608.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33360e.  v1:= "value for name " @kind object;
  #L333612.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333618.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33361e.  v6:= " == null" @kind object;
  #L333622.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333628.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33362e.  v6:= temp @kind object;
  #L333630.  call `<init>`(v5, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L333636.  throw v5;
}
procedure `java.lang.String` `d`(`java.lang.String`[] v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lgc/q;.d:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L333348.  v0:= length @variable v2;
  #L33334a.  v0:= v0 + -2;
  #L33334e.  if v0 < 0 then goto L333372;
  #L333352.  v1:= v2[v0] @kind object;
  #L333356.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L33335c.  v1:= temp;
  #L33335e.  if v1 == 0 then goto L33336c;
  #L333362.  v0:= v0 + 1;
  #L333366.  v2:= v2[v0] @kind object;
  #L33336a.  return v2 @kind object;
  #L33336c.  v0:= v0 + -2;
  #L333370.  goto L33334e;
  #L333372.  v2:= 0I;
  #L333374.  return v2 @kind object;
}
procedure `java.lang.String` `c`(`gc.q` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lgc/q;.c:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L333328.  v0:= v1.`gc.q.a` @type ^`java.lang.String`[] @kind object;
  #L33332c.  call temp:= `d`(v0, v2) @signature `Lgc/q;.d:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L333332.  v2:= temp @kind object;
  #L333334.  return v2 @kind object;
}
procedure `java.lang.String` `e`(`gc.q` v1 @kind this, `int` v2 ) @signature `Lgc/q;.e:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L333388.  v0:= v1.`gc.q.a` @type ^`java.lang.String`[] @kind object;
  #L33338c.  v2:= v2 * 2;
  #L333390.  v2:= v0[v2] @kind object;
  #L333394.  return v2 @kind object;
}
procedure `boolean` `equals`(`gc.q` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lgc/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L333288.  v0:= instanceof @variable v2 @type ^`gc.q` @kind boolean;
  #L33328c.  if v0 == 0 then goto L3332ac;
  #L333290.  v2:= (`gc.q`) v2 @kind object;
  #L333294.  v2:= v2.`gc.q.a` @type ^`java.lang.String`[] @kind object;
  #L333298.  v0:= v1.`gc.q.a` @type ^`java.lang.String`[] @kind object;
  #L33329c.  call temp:= `equals`(v2, v0) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L3332a2.  v2:= temp;
  #L3332a4.  if v2 == 0 then goto L3332ac;
  #L3332a8.  v2:= 1I;
  #L3332aa.  goto L3332ae;
  #L3332ac.  v2:= 0I;
  #L3332ae.  return v2;
}
procedure `gc.q$a` `f`(`gc.q` v3 @kind this) @signature `Lgc/q;.f:()Lgc/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3332c0.  v0:= new `gc.q$a`;
  #L3332c4.  call `<init>`(v0) @signature `Lgc/q$a;.<init>:()V` @kind direct;
  #L3332ca.  v1:= v0.`gc.q$a.a` @type ^`java.util.List` @kind object;
  #L3332ce.  v2:= v3.`gc.q.a` @type ^`java.lang.String`[] @kind object;
  #L3332d2.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L3332d8.  return v0 @kind object;
}
procedure `int` `g`(`gc.q` v1 @kind this) @signature `Lgc/q;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33330c.  v0:= v1.`gc.q.a` @type ^`java.lang.String`[] @kind object;
  #L333310.  v0:= length @variable v0;
  #L333312.  v0:= v0 / 2;
  #L333316.  return v0;
}
procedure `java.lang.String` `h`(`gc.q` v1 @kind this, `int` v2 ) @signature `Lgc/q;.h:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L333410.  v0:= v1.`gc.q.a` @type ^`java.lang.String`[] @kind object;
  #L333414.  v2:= v2 * 2;
  #L333418.  v2:= v2 + 1;
  #L33341c.  v2:= v0[v2] @kind object;
  #L333420.  return v2 @kind object;
}
procedure `int` `hashCode`(`gc.q` v1 @kind this) @signature `Lgc/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3332ec.  v0:= v1.`gc.q.a` @type ^`java.lang.String`[] @kind object;
  #L3332f0.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L3332f6.  v0:= temp;
  #L3332f8.  return v0;
}
procedure `java.util.List` `i`(`gc.q` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lgc/q;.i:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L333434.  call temp:= `g`(v4) @signature `Lgc/q;.g:()I` @kind virtual;
  #L33343a.  v0:= temp;
  #L33343c.  v1:= 0I;
  #L33343e.  v2:= 0I;
  #L333440.  if v2 >= v0 then goto L33347c;
  #L333444.  call temp:= `e`(v4, v2) @signature `Lgc/q;.e:(I)Ljava/lang/String;` @kind virtual;
  #L33344a.  v3:= temp @kind object;
  #L33344c.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L333452.  v3:= temp;
  #L333454.  if v3 == 0 then goto L333476;
  #L333458.  if v1 != 0 then goto L333468;
  #L33345c.  v1:= new `java.util.ArrayList`;
  #L333460.  v3:= 2I;
  #L333462.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L333468.  call temp:= `h`(v4, v2) @signature `Lgc/q;.h:(I)Ljava/lang/String;` @kind virtual;
  #L33346e.  v3:= temp @kind object;
  #L333470.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L333476.  v2:= v2 + 1;
  #L33347a.  goto L333440;
  #L33347c.  if v1 == 0 then goto L33348a;
  #L333480.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L333486.  v5:= temp @kind object;
  #L333488.  goto L333492;
  #L33348a.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L333490.  v5:= temp @kind object;
  #L333492.  return v5 @kind object;
}
procedure `java.lang.String` `toString`(`gc.q` v4 @kind this) @signature `Lgc/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3333a8.  v0:= new `java.lang.StringBuilder`;
  #L3333ac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3333b2.  call temp:= `g`(v4) @signature `Lgc/q;.g:()I` @kind virtual;
  #L3333b8.  v1:= temp;
  #L3333ba.  v2:= 0I;
  #L3333bc.  if v2 >= v1 then goto L3333f6;
  #L3333c0.  call temp:= `e`(v4, v2) @signature `Lgc/q;.e:(I)Ljava/lang/String;` @kind virtual;
  #L3333c6.  v3:= temp @kind object;
  #L3333c8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3333ce.  v3:= ": " @kind object;
  #L3333d2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3333d8.  call temp:= `h`(v4, v2) @signature `Lgc/q;.h:(I)Ljava/lang/String;` @kind virtual;
  #L3333de.  v3:= temp @kind object;
  #L3333e0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3333e6.  v3:= "\n" @kind object;
  #L3333ea.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3333f0.  v2:= v2 + 1;
  #L3333f4.  goto L3333bc;
  #L3333f6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3333fc.  v0:= temp @kind object;
  #L3333fe.  return v0 @kind object;
}
