record `gc.x$a` @kind class @AccessFlag PUBLIC {
  `gc.r` `gc.x$a.a` @AccessFlag ;
  `java.lang.String` `gc.x$a.b` @AccessFlag ;
  `gc.q$a` `gc.x$a.c` @AccessFlag ;
  `gc.y` `gc.x$a.d` @AccessFlag ;
  `java.util.Map` `gc.x$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`gc.x$a` v1 @kind this) @signature `Lgc/x$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3361cc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3361d2.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L3361d8.  v0:= temp @kind object;
  #L3361da.  v1.`gc.x$a.e` @type ^`java.util.Map` := v0 @kind object;
  #L3361de.  v0:= "GET" @kind object;
  #L3361e2.  v1.`gc.x$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L3361e6.  v0:= new `gc.q$a`;
  #L3361ea.  call `<init>`(v0) @signature `Lgc/q$a;.<init>:()V` @kind direct;
  #L3361f0.  v1.`gc.x$a.c` @type ^`gc.q$a` := v0 @kind object;
  #L3361f4.  return @kind void;
}
procedure `void` `<init>`(`gc.x$a` v2 @kind this, `gc.x` v3 @kind object) @signature `Lgc/x$a;.<init>:(Lgc/x;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L336208.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33620e.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L336214.  v0:= temp @kind object;
  #L336216.  v2.`gc.x$a.e` @type ^`java.util.Map` := v0 @kind object;
  #L33621a.  v0:= v3.`gc.x.a` @type ^`gc.r` @kind object;
  #L33621e.  v2.`gc.x$a.a` @type ^`gc.r` := v0 @kind object;
  #L336222.  v0:= v3.`gc.x.b` @type ^`java.lang.String` @kind object;
  #L336226.  v2.`gc.x$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L33622a.  v0:= v3.`gc.x.d` @type ^`gc.y` @kind object;
  #L33622e.  v2.`gc.x$a.d` @type ^`gc.y` := v0 @kind object;
  #L336232.  v0:= v3.`gc.x.e` @type ^`java.util.Map` @kind object;
  #L336236.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L33623c.  v0:= temp;
  #L33623e.  if v0 == 0 then goto L33624c;
  #L336242.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L336248.  v0:= temp @kind object;
  #L33624a.  goto L33625a;
  #L33624c.  v0:= new `java.util.LinkedHashMap`;
  #L336250.  v1:= v3.`gc.x.e` @type ^`java.util.Map` @kind object;
  #L336254.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L33625a.  v2.`gc.x$a.e` @type ^`java.util.Map` := v0 @kind object;
  #L33625e.  v3:= v3.`gc.x.c` @type ^`gc.q` @kind object;
  #L336262.  call temp:= `f`(v3) @signature `Lgc/q;.f:()Lgc/q$a;` @kind virtual;
  #L336268.  v3:= temp @kind object;
  #L33626a.  v2.`gc.x$a.c` @type ^`gc.q$a` := v3 @kind object;
  #L33626e.  return @kind void;
}
procedure `gc.x` `a`(`gc.x$a` v2 @kind this) @signature `Lgc/x$a;.a:()Lgc/x;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L335fa8.  v0:= v2.`gc.x$a.a` @type ^`gc.r` @kind object;
  #L335fac.  if v0 == 0 then goto L335fbc;
  #L335fb0.  v0:= new `gc.x`;
  #L335fb4.  call `<init>`(v0, v2) @signature `Lgc/x;.<init>:(Lgc/x$a;)V` @kind direct;
  #L335fba.  return v0 @kind object;
  #L335fbc.  v0:= new `java.lang.IllegalStateException`;
  #L335fc0.  v1:= "url == null" @kind object;
  #L335fc4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L335fca.  throw v0;
}
procedure `gc.x$a` `b`(`gc.x$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lgc/x$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lgc/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L335fdc.  v0:= v1.`gc.x$a.c` @type ^`gc.q$a` @kind object;
  #L335fe0.  call temp:= `f`(v0, v2, v3) @signature `Lgc/q$a;.f:(Ljava/lang/String;Ljava/lang/String;)Lgc/q$a;` @kind virtual;
  #L335fe6.  return v1 @kind object;
}
procedure `gc.x$a` `c`(`gc.x$a` v0 @kind this, `gc.q` v1 @kind object) @signature `Lgc/x$a;.c:(Lgc/q;)Lgc/x$a;` @AccessFlag PUBLIC {
    temp;

  #L335ff8.  call temp:= `f`(v1) @signature `Lgc/q;.f:()Lgc/q$a;` @kind virtual;
  #L335ffe.  v1:= temp @kind object;
  #L336000.  v0.`gc.x$a.c` @type ^`gc.q$a` := v1 @kind object;
  #L336004.  return v0 @kind object;
}
procedure `gc.x$a` `d`(`gc.x$a` v2 @kind this, `java.lang.String` v3 @kind object, `gc.y` v4 @kind object) @signature `Lgc/x$a;.d:(Ljava/lang/String;Lgc/y;)Lgc/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L336018.  v0:= "method == null" @kind object;
  #L33601c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L336022.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L336028.  v0:= temp;
  #L33602a.  if v0 == 0 then goto L3360c8;
  #L33602e.  v0:= "method " @kind object;
  #L336032.  if v4 == 0 then goto L336078;
  #L336036.  call temp:= `b`(v3) @signature `Lkc/f;.b:(Ljava/lang/String;)Z` @kind static;
  #L33603c.  v1:= temp;
  #L33603e.  if v1 == 0 then goto L336044;
  #L336042.  goto L336078;
  #L336044.  v4:= new `java.lang.IllegalArgumentException`;
  #L336048.  v1:= new `java.lang.StringBuilder`;
  #L33604c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L336052.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336058.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33605e.  v3:= " must not have a request body." @kind object;
  #L336062.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336068.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33606e.  v3:= temp @kind object;
  #L336070.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336076.  throw v4;
  #L336078.  if v4 != 0 then goto L3360be;
  #L33607c.  call temp:= `e`(v3) @signature `Lkc/f;.e:(Ljava/lang/String;)Z` @kind static;
  #L336082.  v1:= temp;
  #L336084.  if v1 != 0 then goto L33608a;
  #L336088.  goto L3360be;
  #L33608a.  v4:= new `java.lang.IllegalArgumentException`;
  #L33608e.  v1:= new `java.lang.StringBuilder`;
  #L336092.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L336098.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33609e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3360a4.  v3:= " must have a request body." @kind object;
  #L3360a8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3360ae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3360b4.  v3:= temp @kind object;
  #L3360b6.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3360bc.  throw v4;
  #L3360be.  v2.`gc.x$a.b` @type ^`java.lang.String` := v3 @kind object;
  #L3360c2.  v2.`gc.x$a.d` @type ^`gc.y` := v4 @kind object;
  #L3360c6.  return v2 @kind object;
  #L3360c8.  v3:= new `java.lang.IllegalArgumentException`;
  #L3360cc.  v4:= "method.length() == 0" @kind object;
  #L3360d0.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3360d6.  throw v3;
}
procedure `gc.x$a` `e`(`gc.x$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lgc/x$a;.e:(Ljava/lang/String;)Lgc/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3360e8.  v0:= v1.`gc.x$a.c` @type ^`gc.q$a` @kind object;
  #L3360ec.  call temp:= `e`(v0, v2) @signature `Lgc/q$a;.e:(Ljava/lang/String;)Lgc/q$a;` @kind virtual;
  #L3360f2.  return v1 @kind object;
}
procedure `gc.x$a` `f`(`gc.x$a` v1 @kind this, `gc.r` v2 @kind object) @signature `Lgc/x$a;.f:(Lgc/r;)Lgc/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336104.  v0:= "url == null" @kind object;
  #L336108.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L33610e.  v1.`gc.x$a.a` @type ^`gc.r` := v2 @kind object;
  #L336112.  return v1 @kind object;
}
procedure `gc.x$a` `g`(`gc.x$a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lgc/x$a;.g:(Ljava/lang/String;)Lgc/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L336124.  v0:= "url == null" @kind object;
  #L336128.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L33612e.  v2:= 1I;
  #L336130.  v3:= 0I;
  #L336132.  v5:= 0I;
  #L336134.  v6:= 3I;
  #L336136.  v4:= "ws:" @kind object;
  #L33613a.  v1:= v8 @kind object;
  #L33613c.  call temp:= `regionMatches`(v1, v2, v3, v4, v5, v6) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L336142.  v0:= temp;
  #L336144.  if v0 == 0 then goto L336176;
  #L336148.  v0:= new `java.lang.StringBuilder`;
  #L33614c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L336152.  v1:= "http:" @kind object;
  #L336156.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33615c.  v1:= 3I;
  #L33615e.  call temp:= `substring`(v8, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L336164.  v8:= temp @kind object;
  #L336166.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33616c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L336172.  v8:= temp @kind object;
  #L336174.  goto L3361a8;
  #L336176.  v1:= 1I;
  #L336178.  v2:= 0I;
  #L33617a.  v4:= 0I;
  #L33617c.  v5:= 4I;
  #L33617e.  v3:= "wss:" @kind object;
  #L336182.  v0:= v8 @kind object;
  #L336184.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L33618a.  v0:= temp;
  #L33618c.  if v0 == 0 then goto L3361a8;
  #L336190.  v0:= new `java.lang.StringBuilder`;
  #L336194.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33619a.  v1:= "https:" @kind object;
  #L33619e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3361a4.  v1:= 4I;
  #L3361a6.  goto L33615e;
  #L3361a8.  call temp:= `k`(v8) @signature `Lgc/r;.k:(Ljava/lang/String;)Lgc/r;` @kind static;
  #L3361ae.  v8:= temp @kind object;
  #L3361b0.  call temp:= `f`(v7, v8) @signature `Lgc/x$a;.f:(Lgc/r;)Lgc/x$a;` @kind virtual;
  #L3361b6.  v8:= temp @kind object;
  #L3361b8.  return v8 @kind object;
}
