record `gc.p` @kind class @AccessFlag PUBLIC_FINAL {
  `gc.c0` `gc.p.a` @AccessFlag PRIVATE_FINAL;
  `gc.g` `gc.p.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `gc.p.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `gc.p.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`gc.p` v0 @kind this, `gc.c0` v1 @kind object, `gc.g` v2 @kind object, `java.util.List` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lgc/p;.<init>:(Lgc/c0;Lgc/g;Ljava/util/List;Ljava/util/List;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3330c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3330ca.  v0.`gc.p.a` @type ^`gc.c0` := v1 @kind object;
  #L3330ce.  v0.`gc.p.b` @type ^`gc.g` := v2 @kind object;
  #L3330d2.  v0.`gc.p.c` @type ^`java.util.List` := v3 @kind object;
  #L3330d6.  v0.`gc.p.d` @type ^`java.util.List` := v4 @kind object;
  #L3330da.  return @kind void;
}
procedure `gc.p` `b`(`javax.net.ssl.SSLSession` v4 @kind object) @signature `Lgc/p;.b:(Ljavax/net/ssl/SSLSession;)Lgc/p;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L332f5c.  call temp:= `getCipherSuite`(v4) @signature `Ljavax/net/ssl/SSLSession;.getCipherSuite:()Ljava/lang/String;` @kind interface;
  #L332f62.  v0:= temp @kind object;
  #L332f64.  if v0 == 0 then goto L333020;
  #L332f68.  v1:= "SSL_NULL_WITH_NULL_NULL" @kind object;
  #L332f6c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L332f72.  v1:= temp;
  #L332f74.  if v1 != 0 then goto L333010;
  #L332f78.  call temp:= `a`(v0) @signature `Lgc/g;.a:(Ljava/lang/String;)Lgc/g;` @kind static;
  #L332f7e.  v0:= temp @kind object;
  #L332f80.  call temp:= `getProtocol`(v4) @signature `Ljavax/net/ssl/SSLSession;.getProtocol:()Ljava/lang/String;` @kind interface;
  #L332f86.  v1:= temp @kind object;
  #L332f88.  if v1 == 0 then goto L333000;
  #L332f8c.  v2:= "NONE" @kind object;
  #L332f90.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L332f96.  v2:= temp;
  #L332f98.  if v2 != 0 then goto L332ff0;
  #L332f9c.  call temp:= `c`(v1) @signature `Lgc/c0;.c:(Ljava/lang/String;)Lgc/c0;` @kind static;
  #L332fa2.  v1:= temp @kind object;
  #L332fa4.  call temp:= `getPeerCertificates`(v4) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L332faa.  v2:= temp @kind object;
  #L332fac.  goto L332fb0;
  #L332fae.  v2:= 0I;
  #L332fb0.  if v2 == 0 then goto L332fbe;
  #L332fb4.  call temp:= `s`(v2) @signature `Lhc/c;.s:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L332fba.  v2:= temp @kind object;
  #L332fbc.  goto L332fc6;
  #L332fbe.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L332fc4.  v2:= temp @kind object;
  #L332fc6.  call temp:= `getLocalCertificates`(v4) @signature `Ljavax/net/ssl/SSLSession;.getLocalCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L332fcc.  v4:= temp @kind object;
  #L332fce.  if v4 == 0 then goto L332fdc;
  #L332fd2.  call temp:= `s`(v4) @signature `Lhc/c;.s:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L332fd8.  v4:= temp @kind object;
  #L332fda.  goto L332fe4;
  #L332fdc.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L332fe2.  v4:= temp @kind object;
  #L332fe4.  v3:= new `gc.p`;
  #L332fe8.  call `<init>`(v3, v1, v0, v2, v4) @signature `Lgc/p;.<init>:(Lgc/c0;Lgc/g;Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L332fee.  return v3 @kind object;
  #L332ff0.  v4:= new `java.io.IOException`;
  #L332ff4.  v0:= "tlsVersion == NONE" @kind object;
  #L332ff8.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L332ffe.  throw v4;
  #L333000.  v4:= new `java.lang.IllegalStateException`;
  #L333004.  v0:= "tlsVersion == null" @kind object;
  #L333008.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33300e.  throw v4;
  #L333010.  v4:= new `java.io.IOException`;
  #L333014.  v0:= "cipherSuite == SSL_NULL_WITH_NULL_NULL" @kind object;
  #L333018.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33301e.  throw v4;
  #L333020.  v4:= new `java.lang.IllegalStateException`;
  #L333024.  v0:= "cipherSuite == null" @kind object;
  #L333028.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33302e.  throw v4;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L332fa4..L332fac] goto L332fae;
}
procedure `gc.g` `a`(`gc.p` v1 @kind this) @signature `Lgc/p;.a:()Lgc/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L332f44.  v0:= v1.`gc.p.b` @type ^`gc.g` @kind object;
  #L332f48.  return v0 @kind object;
}
procedure `java.util.List` `c`(`gc.p` v1 @kind this) @signature `Lgc/p;.c:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3330ac.  v0:= v1.`gc.p.c` @type ^`java.util.List` @kind object;
  #L3330b0.  return v0 @kind object;
}
procedure `boolean` `equals`(`gc.p` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lgc/p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L332ed0.  v0:= instanceof @variable v4 @type ^`gc.p` @kind boolean;
  #L332ed4.  v1:= 0I;
  #L332ed6.  if v0 != 0 then goto L332edc;
  #L332eda.  return v1;
  #L332edc.  v4:= (`gc.p`) v4 @kind object;
  #L332ee0.  v0:= v3.`gc.p.a` @type ^`gc.c0` @kind object;
  #L332ee4.  v2:= v4.`gc.p.a` @type ^`gc.c0` @kind object;
  #L332ee8.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L332eee.  v0:= temp;
  #L332ef0.  if v0 == 0 then goto L332f32;
  #L332ef4.  v0:= v3.`gc.p.b` @type ^`gc.g` @kind object;
  #L332ef8.  v2:= v4.`gc.p.b` @type ^`gc.g` @kind object;
  #L332efc.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L332f02.  v0:= temp;
  #L332f04.  if v0 == 0 then goto L332f32;
  #L332f08.  v0:= v3.`gc.p.c` @type ^`java.util.List` @kind object;
  #L332f0c.  v2:= v4.`gc.p.c` @type ^`java.util.List` @kind object;
  #L332f10.  call temp:= `equals`(v0, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L332f16.  v0:= temp;
  #L332f18.  if v0 == 0 then goto L332f32;
  #L332f1c.  v0:= v3.`gc.p.d` @type ^`java.util.List` @kind object;
  #L332f20.  v4:= v4.`gc.p.d` @type ^`java.util.List` @kind object;
  #L332f24.  call temp:= `equals`(v0, v4) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L332f2a.  v4:= temp;
  #L332f2c.  if v4 == 0 then goto L332f32;
  #L332f30.  v1:= 1I;
  #L332f32.  return v1;
}
procedure `int` `hashCode`(`gc.p` v2 @kind this) @signature `Lgc/p;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L333050.  v0:= v2.`gc.p.a` @type ^`gc.c0` @kind object;
  #L333054.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L33305a.  v0:= temp;
  #L33305c.  v1:= 527I;
  #L333060.  v1:= v1 + v0 @kind int;
  #L333062.  v1:= v1 * 31;
  #L333066.  v0:= v2.`gc.p.b` @type ^`gc.g` @kind object;
  #L33306a.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L333070.  v0:= temp;
  #L333072.  v1:= v1 + v0 @kind int;
  #L333074.  v1:= v1 * 31;
  #L333078.  v0:= v2.`gc.p.c` @type ^`java.util.List` @kind object;
  #L33307c.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L333082.  v0:= temp;
  #L333084.  v1:= v1 + v0 @kind int;
  #L333086.  v1:= v1 * 31;
  #L33308a.  v0:= v2.`gc.p.d` @type ^`java.util.List` @kind object;
  #L33308e.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L333094.  v0:= temp;
  #L333096.  v1:= v1 + v0 @kind int;
  #L333098.  return v1;
}
