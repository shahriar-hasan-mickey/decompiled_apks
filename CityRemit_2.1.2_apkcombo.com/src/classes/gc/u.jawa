record `gc.u` @kind class @AccessFlag PUBLIC extends `java.lang.Cloneable` @kind interface {
  `pc.c` `gc.u.A` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `gc.u.B` @AccessFlag FINAL;
  `gc.f` `gc.u.C` @AccessFlag FINAL;
  `gc.b` `gc.u.D` @AccessFlag FINAL;
  `gc.b` `gc.u.E` @AccessFlag FINAL;
  `gc.i` `gc.u.F` @AccessFlag FINAL;
  `gc.n` `gc.u.G` @AccessFlag FINAL;
  `boolean` `gc.u.H` @AccessFlag FINAL;
  `boolean` `gc.u.I` @AccessFlag FINAL;
  `boolean` `gc.u.J` @AccessFlag FINAL;
  `int` `gc.u.K` @AccessFlag FINAL;
  `int` `gc.u.L` @AccessFlag FINAL;
  `int` `gc.u.M` @AccessFlag FINAL;
  `int` `gc.u.N` @AccessFlag FINAL;
  `int` `gc.u.O` @AccessFlag FINAL;
  `gc.m` `gc.u.o` @AccessFlag FINAL;
  `java.net.Proxy` `gc.u.p` @AccessFlag FINAL;
  `java.util.List` `gc.u.q` @AccessFlag FINAL;
  `java.util.List` `gc.u.r` @AccessFlag FINAL;
  `java.util.List` `gc.u.s` @AccessFlag FINAL;
  `java.util.List` `gc.u.t` @AccessFlag FINAL;
  `gc.o$c` `gc.u.u` @AccessFlag FINAL;
  `java.net.ProxySelector` `gc.u.v` @AccessFlag FINAL;
  `gc.l` `gc.u.w` @AccessFlag FINAL;
  `ic.d` `gc.u.x` @AccessFlag FINAL;
  `javax.net.SocketFactory` `gc.u.y` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `gc.u.z` @AccessFlag FINAL;
}
global `java.util.List` `@@gc.u.P` @AccessFlag STATIC_FINAL;
global `java.util.List` `@@gc.u.Q` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lgc/u;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L33542c.  v0:= 2I;
  #L33542e.  v1:= new `gc.v`[v0];
  #L335432.  v2:= `@@gc.v.s` @type ^`gc.v` @kind object;
  #L335436.  v3:= 0I;
  #L335438.  v1[v3]:= v2 @kind object;
  #L33543c.  v2:= `@@gc.v.q` @type ^`gc.v` @kind object;
  #L335440.  v4:= 1I;
  #L335442.  v1[v4]:= v2 @kind object;
  #L335446.  call temp:= `s`(v1) @signature `Lhc/c;.s:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L33544c.  v1:= temp @kind object;
  #L33544e.  `@@gc.u.P` @type ^`java.util.List` := v1 @kind object;
  #L335452.  v0:= new `gc.j`[v0];
  #L335456.  v1:= `@@gc.j.g` @type ^`gc.j` @kind object;
  #L33545a.  v0[v3]:= v1 @kind object;
  #L33545e.  v1:= `@@gc.j.h` @type ^`gc.j` @kind object;
  #L335462.  v0[v4]:= v1 @kind object;
  #L335466.  call temp:= `s`(v0) @signature `Lhc/c;.s:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L33546c.  v0:= temp @kind object;
  #L33546e.  `@@gc.u.Q` @type ^`java.util.List` := v0 @kind object;
  #L335472.  v0:= new `gc.u$a`;
  #L335476.  call `<init>`(v0) @signature `Lgc/u$a;.<init>:()V` @kind direct;
  #L33547c.  `@@hc.a.a` @type ^`hc.a` := v0 @kind object;
  #L335480.  return @kind void;
}
procedure `void` `<init>`(`gc.u` v1 @kind this) @signature `Lgc/u;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L335494.  v0:= new `gc.u$b`;
  #L335498.  call `<init>`(v0) @signature `Lgc/u$b;.<init>:()V` @kind direct;
  #L33549e.  call `<init>`(v1, v0) @signature `Lgc/u;.<init>:(Lgc/u$b;)V` @kind direct;
  #L3354a4.  return @kind void;
}
procedure `void` `<init>`(`gc.u` v4 @kind this, `gc.u$b` v5 @kind object) @signature `Lgc/u;.<init>:(Lgc/u$b;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3354b8.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3354be.  v0:= v5.`gc.u$b.a` @type ^`gc.m` @kind object;
  #L3354c2.  v4.`gc.u.o` @type ^`gc.m` := v0 @kind object;
  #L3354c6.  v0:= v5.`gc.u$b.b` @type ^`java.net.Proxy` @kind object;
  #L3354ca.  v4.`gc.u.p` @type ^`java.net.Proxy` := v0 @kind object;
  #L3354ce.  v0:= v5.`gc.u$b.c` @type ^`java.util.List` @kind object;
  #L3354d2.  v4.`gc.u.q` @type ^`java.util.List` := v0 @kind object;
  #L3354d6.  v0:= v5.`gc.u$b.d` @type ^`java.util.List` @kind object;
  #L3354da.  v4.`gc.u.r` @type ^`java.util.List` := v0 @kind object;
  #L3354de.  v1:= v5.`gc.u$b.e` @type ^`java.util.List` @kind object;
  #L3354e2.  call temp:= `r`(v1) @signature `Lhc/c;.r:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3354e8.  v1:= temp @kind object;
  #L3354ea.  v4.`gc.u.s` @type ^`java.util.List` := v1 @kind object;
  #L3354ee.  v1:= v5.`gc.u$b.f` @type ^`java.util.List` @kind object;
  #L3354f2.  call temp:= `r`(v1) @signature `Lhc/c;.r:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3354f8.  v1:= temp @kind object;
  #L3354fa.  v4.`gc.u.t` @type ^`java.util.List` := v1 @kind object;
  #L3354fe.  v1:= v5.`gc.u$b.g` @type ^`gc.o$c` @kind object;
  #L335502.  v4.`gc.u.u` @type ^`gc.o$c` := v1 @kind object;
  #L335506.  v1:= v5.`gc.u$b.h` @type ^`java.net.ProxySelector` @kind object;
  #L33550a.  v4.`gc.u.v` @type ^`java.net.ProxySelector` := v1 @kind object;
  #L33550e.  v1:= v5.`gc.u$b.i` @type ^`gc.l` @kind object;
  #L335512.  v4.`gc.u.w` @type ^`gc.l` := v1 @kind object;
  #L335516.  v1:= v5.`gc.u$b.j` @type ^`ic.d` @kind object;
  #L33551a.  v4.`gc.u.x` @type ^`ic.d` := v1 @kind object;
  #L33551e.  v1:= v5.`gc.u$b.k` @type ^`javax.net.SocketFactory` @kind object;
  #L335522.  v4.`gc.u.y` @type ^`javax.net.SocketFactory` := v1 @kind object;
  #L335526.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L33552c.  v0:= temp @kind object;
  #L33552e.  v1:= 0I;
  #L335530.  v2:= 0I;
  #L335532.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L335538.  v3:= temp;
  #L33553a.  if v3 == 0 then goto L33555e;
  #L33553e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L335544.  v3:= temp @kind object;
  #L335546.  v3:= (`gc.j`) v3 @kind object;
  #L33554a.  if v2 != 0 then goto L33555a;
  #L33554e.  call temp:= `d`(v3) @signature `Lgc/j;.d:()Z` @kind virtual;
  #L335554.  v2:= temp;
  #L335556.  if v2 == 0 then goto L335530;
  #L33555a.  v2:= 1I;
  #L33555c.  goto L335532;
  #L33555e.  v0:= v5.`gc.u$b.l` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L335562.  if v0 != 0 then goto L33558a;
  #L335566.  if v2 != 0 then goto L33556c;
  #L33556a.  goto L33558a;
  #L33556c.  call temp:= `A`() @signature `Lhc/c;.A:()Ljavax/net/ssl/X509TrustManager;` @kind static;
  #L335572.  v0:= temp @kind object;
  #L335574.  call temp:= `A`(v0) @signature `Lgc/u;.A:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @kind static;
  #L33557a.  v1:= temp @kind object;
  #L33557c.  v4.`gc.u.z` @type ^`javax.net.ssl.SSLSocketFactory` := v1 @kind object;
  #L335580.  call temp:= `b`(v0) @signature `Lpc/c;.b:(Ljavax/net/ssl/X509TrustManager;)Lpc/c;` @kind static;
  #L335586.  v0:= temp @kind object;
  #L335588.  goto L335592;
  #L33558a.  v4.`gc.u.z` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L33558e.  v0:= v5.`gc.u$b.m` @type ^`pc.c` @kind object;
  #L335592.  v4.`gc.u.A` @type ^`pc.c` := v0 @kind object;
  #L335596.  v0:= v4.`gc.u.z` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L33559a.  if v0 == 0 then goto L3355b0;
  #L33559e.  call temp:= `l`() @signature `Lnc/g;.l:()Lnc/g;` @kind static;
  #L3355a4.  v0:= temp @kind object;
  #L3355a6.  v1:= v4.`gc.u.z` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L3355aa.  call `f`(v0, v1) @signature `Lnc/g;.f:(Ljavax/net/ssl/SSLSocketFactory;)V` @kind virtual;
  #L3355b0.  v0:= v5.`gc.u$b.n` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L3355b4.  v4.`gc.u.B` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L3355b8.  v0:= v5.`gc.u$b.o` @type ^`gc.f` @kind object;
  #L3355bc.  v1:= v4.`gc.u.A` @type ^`pc.c` @kind object;
  #L3355c0.  call temp:= `f`(v0, v1) @signature `Lgc/f;.f:(Lpc/c;)Lgc/f;` @kind virtual;
  #L3355c6.  v0:= temp @kind object;
  #L3355c8.  v4.`gc.u.C` @type ^`gc.f` := v0 @kind object;
  #L3355cc.  v0:= v5.`gc.u$b.p` @type ^`gc.b` @kind object;
  #L3355d0.  v4.`gc.u.D` @type ^`gc.b` := v0 @kind object;
  #L3355d4.  v0:= v5.`gc.u$b.q` @type ^`gc.b` @kind object;
  #L3355d8.  v4.`gc.u.E` @type ^`gc.b` := v0 @kind object;
  #L3355dc.  v0:= v5.`gc.u$b.r` @type ^`gc.i` @kind object;
  #L3355e0.  v4.`gc.u.F` @type ^`gc.i` := v0 @kind object;
  #L3355e4.  v0:= v5.`gc.u$b.s` @type ^`gc.n` @kind object;
  #L3355e8.  v4.`gc.u.G` @type ^`gc.n` := v0 @kind object;
  #L3355ec.  v0:= v5.`gc.u$b.t` @type ^`boolean` @kind boolean;
  #L3355f0.  v4.`gc.u.H` @type ^`boolean` := v0 @kind boolean;
  #L3355f4.  v0:= v5.`gc.u$b.u` @type ^`boolean` @kind boolean;
  #L3355f8.  v4.`gc.u.I` @type ^`boolean` := v0 @kind boolean;
  #L3355fc.  v0:= v5.`gc.u$b.v` @type ^`boolean` @kind boolean;
  #L335600.  v4.`gc.u.J` @type ^`boolean` := v0 @kind boolean;
  #L335604.  v0:= v5.`gc.u$b.w` @type ^`int`;
  #L335608.  v4.`gc.u.K` @type ^`int` := v0;
  #L33560c.  v0:= v5.`gc.u$b.x` @type ^`int`;
  #L335610.  v4.`gc.u.L` @type ^`int` := v0;
  #L335614.  v0:= v5.`gc.u$b.y` @type ^`int`;
  #L335618.  v4.`gc.u.M` @type ^`int` := v0;
  #L33561c.  v0:= v5.`gc.u$b.z` @type ^`int`;
  #L335620.  v4.`gc.u.N` @type ^`int` := v0;
  #L335624.  v5:= v5.`gc.u$b.A` @type ^`int`;
  #L335628.  v4.`gc.u.O` @type ^`int` := v5;
  #L33562c.  v5:= v4.`gc.u.s` @type ^`java.util.List` @kind object;
  #L335630.  v0:= 0I;
  #L335632.  call temp:= `contains`(v5, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L335638.  v5:= temp;
  #L33563a.  if v5 != 0 then goto L335682;
  #L33563e.  v5:= v4.`gc.u.t` @type ^`java.util.List` @kind object;
  #L335642.  call temp:= `contains`(v5, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L335648.  v5:= temp;
  #L33564a.  if v5 != 0 then goto L335650;
  #L33564e.  return @kind void;
  #L335650.  v5:= new `java.lang.IllegalStateException`;
  #L335654.  v0:= new `java.lang.StringBuilder`;
  #L335658.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33565e.  v1:= "Null network interceptor: " @kind object;
  #L335662.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L335668.  v1:= v4.`gc.u.t` @type ^`java.util.List` @kind object;
  #L33566c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L335672.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L335678.  v0:= temp @kind object;
  #L33567a.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L335680.  throw v5;
  #L335682.  v5:= new `java.lang.IllegalStateException`;
  #L335686.  v0:= new `java.lang.StringBuilder`;
  #L33568a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L335690.  v1:= "Null interceptor: " @kind object;
  #L335694.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33569a.  v1:= v4.`gc.u.s` @type ^`java.util.List` @kind object;
  #L33569e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3356a4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3356aa.  v0:= temp @kind object;
  #L3356ac.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3356b2.  throw v5;
}
procedure `javax.net.ssl.SSLSocketFactory` `A`(`javax.net.ssl.X509TrustManager` v3 @kind object) @signature `Lgc/u;.A:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3353b4.  call temp:= `l`() @signature `Lnc/g;.l:()Lnc/g;` @kind static;
  #L3353ba.  v0:= temp @kind object;
  #L3353bc.  call temp:= `m`(v0) @signature `Lnc/g;.m:()Ljavax/net/ssl/SSLContext;` @kind virtual;
  #L3353c2.  v0:= temp @kind object;
  #L3353c4.  v1:= 1I;
  #L3353c6.  v1:= new `javax.net.ssl.TrustManager`[v1];
  #L3353ca.  v2:= 0I;
  #L3353cc.  v1[v2]:= v3 @kind object;
  #L3353d0.  v3:= 0I;
  #L3353d2.  call `init`(v0, v3, v1, v3) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L3353d8.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L3353de.  v3:= temp @kind object;
  #L3353e0.  return v3 @kind object;
  #L3353e2.  v3:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L3353e4.  v0:= "No System TLS" @kind object;
  #L3353e8.  call temp:= `b`(v0, v3) @signature `Lhc/c;.b:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L3353ee.  v3:= temp @kind object;
  #L3353f0.  throw v3;
  catch `java.security.GeneralSecurityException` @[L3353b4..L3353e0] goto L3353e2;
}
procedure `int` `B`(`gc.u` v1 @kind this) @signature `Lgc/u;.B:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3352ac.  v0:= v1.`gc.u.O` @type ^`int`;
  #L3352b0.  return v0;
}
procedure `java.util.List` `C`(`gc.u` v1 @kind this) @signature `Lgc/u;.C:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33536c.  v0:= v1.`gc.u.q` @type ^`java.util.List` @kind object;
  #L335370.  return v0 @kind object;
}
procedure `java.net.Proxy` `D`(`gc.u` v1 @kind this) @signature `Lgc/u;.D:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3352f4.  v0:= v1.`gc.u.p` @type ^`java.net.Proxy` @kind object;
  #L3352f8.  return v0 @kind object;
}
procedure `gc.b` `E`(`gc.u` v1 @kind this) @signature `Lgc/u;.E:()Lgc/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3351a0.  v0:= v1.`gc.u.D` @type ^`gc.b` @kind object;
  #L3351a4.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `F`(`gc.u` v1 @kind this) @signature `Lgc/u;.F:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33530c.  v0:= v1.`gc.u.v` @type ^`java.net.ProxySelector` @kind object;
  #L335310.  return v0 @kind object;
}
procedure `int` `G`(`gc.u` v1 @kind this) @signature `Lgc/u;.G:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3352c4.  v0:= v1.`gc.u.M` @type ^`int`;
  #L3352c8.  return v0;
}
procedure `boolean` `H`(`gc.u` v1 @kind this) @signature `Lgc/u;.H:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L335170.  v0:= v1.`gc.u.J` @type ^`boolean` @kind boolean;
  #L335174.  return v0;
}
procedure `javax.net.SocketFactory` `I`(`gc.u` v1 @kind this) @signature `Lgc/u;.I:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L335384.  v0:= v1.`gc.u.y` @type ^`javax.net.SocketFactory` @kind object;
  #L335388.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `J`(`gc.u` v1 @kind this) @signature `Lgc/u;.J:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L335414.  v0:= v1.`gc.u.z` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L335418.  return v0 @kind object;
}
procedure `int` `L`(`gc.u` v1 @kind this) @signature `Lgc/u;.L:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3352dc.  v0:= v1.`gc.u.N` @type ^`int`;
  #L3352e0.  return v0;
}
procedure `gc.b` `a`(`gc.u` v1 @kind this) @signature `Lgc/u;.a:()Lgc/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L335188.  v0:= v1.`gc.u.E` @type ^`gc.b` @kind object;
  #L33518c.  return v0 @kind object;
}
procedure `int` `b`(`gc.u` v1 @kind this) @signature `Lgc/u;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33527c.  v0:= v1.`gc.u.K` @type ^`int`;
  #L335280.  return v0;
}
procedure `gc.f` `d`(`gc.u` v1 @kind this) @signature `Lgc/u;.d:()Lgc/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3351d4.  v0:= v1.`gc.u.C` @type ^`gc.f` @kind object;
  #L3351d8.  return v0 @kind object;
}
procedure `int` `f`(`gc.u` v1 @kind this) @signature `Lgc/u;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L335294.  v0:= v1.`gc.u.L` @type ^`int`;
  #L335298.  return v0;
}
procedure `gc.i` `g`(`gc.u` v1 @kind this) @signature `Lgc/u;.g:()Lgc/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3351ec.  v0:= v1.`gc.u.F` @type ^`gc.i` @kind object;
  #L3351f0.  return v0 @kind object;
}
procedure `java.util.List` `j`(`gc.u` v1 @kind this) @signature `Lgc/u;.j:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L335324.  v0:= v1.`gc.u.r` @type ^`java.util.List` @kind object;
  #L335328.  return v0 @kind object;
}
procedure `gc.l` `l`(`gc.u` v1 @kind this) @signature `Lgc/u;.l:()Lgc/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L335204.  v0:= v1.`gc.u.w` @type ^`gc.l` @kind object;
  #L335208.  return v0 @kind object;
}
procedure `gc.m` `m`(`gc.u` v1 @kind this) @signature `Lgc/u;.m:()Lgc/m;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33521c.  v0:= v1.`gc.u.o` @type ^`gc.m` @kind object;
  #L335220.  return v0 @kind object;
}
procedure `gc.n` `n`(`gc.u` v1 @kind this) @signature `Lgc/u;.n:()Lgc/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L335234.  v0:= v1.`gc.u.G` @type ^`gc.n` @kind object;
  #L335238.  return v0 @kind object;
}
procedure `gc.o$c` `p`(`gc.u` v1 @kind this) @signature `Lgc/u;.p:()Lgc/o$c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33524c.  v0:= v1.`gc.u.u` @type ^`gc.o$c` @kind object;
  #L335250.  return v0 @kind object;
}
procedure `boolean` `q`(`gc.u` v1 @kind this) @signature `Lgc/u;.q:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L335140.  v0:= v1.`gc.u.I` @type ^`boolean` @kind boolean;
  #L335144.  return v0;
}
procedure `boolean` `r`(`gc.u` v1 @kind this) @signature `Lgc/u;.r:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L335158.  v0:= v1.`gc.u.H` @type ^`boolean` @kind boolean;
  #L33515c.  return v0;
}
procedure `javax.net.ssl.HostnameVerifier` `t`(`gc.u` v1 @kind this) @signature `Lgc/u;.t:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33539c.  v0:= v1.`gc.u.B` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L3353a0.  return v0 @kind object;
}
procedure `java.util.List` `u`(`gc.u` v1 @kind this) @signature `Lgc/u;.u:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33533c.  v0:= v1.`gc.u.s` @type ^`java.util.List` @kind object;
  #L335340.  return v0 @kind object;
}
procedure `ic.d` `w`(`gc.u` v1 @kind this) @signature `Lgc/u;.w:()Lic/d;` @AccessFlag  {
    temp;
    v0;

  #L335264.  v0:= v1.`gc.u.x` @type ^`ic.d` @kind object;
  #L335268.  return v0 @kind object;
}
procedure `java.util.List` `y`(`gc.u` v1 @kind this) @signature `Lgc/u;.y:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L335354.  v0:= v1.`gc.u.t` @type ^`java.util.List` @kind object;
  #L335358.  return v0 @kind object;
}
procedure `gc.d` `z`(`gc.u` v1 @kind this, `gc.x` v2 @kind object) @signature `Lgc/u;.z:(Lgc/x;)Lgc/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3351b8.  v0:= 0I;
  #L3351ba.  call temp:= `l`(v1, v2, v0) @signature `Lgc/w;.l:(Lgc/u;Lgc/x;Z)Lgc/w;` @kind static;
  #L3351c0.  v2:= temp @kind object;
  #L3351c2.  return v2 @kind object;
}
