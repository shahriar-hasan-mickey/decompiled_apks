record `gc.r` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `gc.r.a` @AccessFlag FINAL;
  `java.lang.String` `gc.r.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `gc.r.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `gc.r.d` @AccessFlag FINAL;
  `int` `gc.r.e` @AccessFlag FINAL;
  `java.util.List` `gc.r.f` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `gc.r.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `gc.r.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `gc.r.i` @AccessFlag PRIVATE_FINAL;
}
global `char`[] `@@gc.r.j` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lgc/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L334b94.  v0:= 16I;
  #L334b98.  v0:= new `char`[v0];
  #L334b9c.  goto L334ba8;
  #L334ba2.  `@@gc.r.j` @type ^`char`[] := v0 @kind object;
  #L334ba6.  return @kind void;
  #L334ba8.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L334bcf.  goto L334ba2;
}
procedure `void` `<init>`(`gc.r` v4 @kind this, `gc.r$a` v5 @kind object) @signature `Lgc/r;.<init>:(Lgc/r$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L334be0.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L334be6.  v0:= v5.`gc.r$a.a` @type ^`java.lang.String` @kind object;
  #L334bea.  v4.`gc.r.a` @type ^`java.lang.String` := v0 @kind object;
  #L334bee.  v0:= v5.`gc.r$a.b` @type ^`java.lang.String` @kind object;
  #L334bf2.  v1:= 0I;
  #L334bf4.  call temp:= `s`(v0, v1) @signature `Lgc/r;.s:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L334bfa.  v0:= temp @kind object;
  #L334bfc.  v4.`gc.r.b` @type ^`java.lang.String` := v0 @kind object;
  #L334c00.  v0:= v5.`gc.r$a.c` @type ^`java.lang.String` @kind object;
  #L334c04.  call temp:= `s`(v0, v1) @signature `Lgc/r;.s:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L334c0a.  v0:= temp @kind object;
  #L334c0c.  v4.`gc.r.c` @type ^`java.lang.String` := v0 @kind object;
  #L334c10.  v0:= v5.`gc.r$a.d` @type ^`java.lang.String` @kind object;
  #L334c14.  v4.`gc.r.d` @type ^`java.lang.String` := v0 @kind object;
  #L334c18.  call temp:= `c`(v5) @signature `Lgc/r$a;.c:()I` @kind virtual;
  #L334c1e.  v0:= temp;
  #L334c20.  v4.`gc.r.e` @type ^`int` := v0;
  #L334c24.  v0:= v5.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L334c28.  call temp:= `t`(v4, v0, v1) @signature `Lgc/r;.t:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L334c2e.  v0:= temp @kind object;
  #L334c30.  v4.`gc.r.f` @type ^`java.util.List` := v0 @kind object;
  #L334c34.  v0:= v5.`gc.r$a.g` @type ^`java.util.List` @kind object;
  #L334c38.  v2:= 0I;
  #L334c3a.  if v0 == 0 then goto L334c4a;
  #L334c3e.  v3:= 1I;
  #L334c40.  call temp:= `t`(v4, v0, v3) @signature `Lgc/r;.t:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L334c46.  v0:= temp @kind object;
  #L334c48.  goto L334c4c;
  #L334c4a.  v0:= v2 @kind object;
  #L334c4c.  v4.`gc.r.g` @type ^`java.util.List` := v0 @kind object;
  #L334c50.  v0:= v5.`gc.r$a.h` @type ^`java.lang.String` @kind object;
  #L334c54.  if v0 == 0 then goto L334c60;
  #L334c58.  call temp:= `s`(v0, v1) @signature `Lgc/r;.s:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L334c5e.  v2:= temp @kind object;
  #L334c60.  v4.`gc.r.h` @type ^`java.lang.String` := v2 @kind object;
  #L334c64.  call temp:= `toString`(v5) @signature `Lgc/r$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L334c6a.  v5:= temp @kind object;
  #L334c6c.  v4.`gc.r.i` @type ^`java.lang.String` := v5 @kind object;
  #L334c70.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v11 @kind object, `int` v12 , `int` v13 , `java.lang.String` v14 @kind object, `boolean` v15 , `boolean` v16 , `boolean` v17 , `boolean` v18 , `java.nio.charset.Charset` v19 @kind object) @signature `Lgc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3345a4.  v1:= v11 @kind object;
  #L3345a6.  v3:= v13;
  #L3345a8.  v2:= v12;
  #L3345aa.  if v2 >= v3 then goto L334656;
  #L3345ae.  call temp:= `codePointAt`(v11, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L3345b4.  v0:= temp;
  #L3345b6.  v4:= 32I;
  #L3345ba.  if v0 < v4 then goto L334618;
  #L3345be.  v4:= 127I;
  #L3345c2.  if v0 == v4 then goto L334618;
  #L3345c6.  v4:= 128I;
  #L3345ca.  if v0 < v4 then goto L3345d2;
  #L3345ce.  if v18 != 0 then goto L334618;
  #L3345d2.  v4:= v14 @kind object;
  #L3345d4.  call temp:= `indexOf`(v14, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3345da.  v5:= temp;
  #L3345dc.  v6:= -1I;
  #L3345de.  if v5 != v6 then goto L33461a;
  #L3345e2.  v5:= 37I;
  #L3345e6.  if v0 != v5 then goto L3345fe;
  #L3345ea.  if v15 == 0 then goto L33461a;
  #L3345ee.  if v16 == 0 then goto L3345fe;
  #L3345f2.  call temp:= `v`(v11, v2, v13) @signature `Lgc/r;.v:(Ljava/lang/String;II)Z` @kind static;
  #L3345f8.  v5:= temp;
  #L3345fa.  if v5 == 0 then goto L33461a;
  #L3345fe.  v5:= 43I;
  #L334602.  if v0 != v5 then goto L33460c;
  #L334606.  if v17 == 0 then goto L33460c;
  #L33460a.  goto L33461a;
  #L33460c.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L334612.  v0:= temp;
  #L334614.  v2:= v2 + v0 @kind int;
  #L334616.  goto L3345aa;
  #L334618.  v4:= v14 @kind object;
  #L33461a.  v10:= new `qc.c`;
  #L33461e.  call `<init>`(v10) @signature `Lqc/c;.<init>:()V` @kind direct;
  #L334624.  v0:= v12;
  #L334626.  call temp:= `v0`(v10, v11, v12, v2) @signature `Lqc/c;.v0:(Ljava/lang/String;II)Lqc/c;` @kind virtual;
  #L33462c.  v0:= v10 @kind object;
  #L33462e.  v1:= v11 @kind object;
  #L334630.  v3:= v13;
  #L334632.  v4:= v14 @kind object;
  #L334634.  v5:= v15;
  #L334636.  v6:= v16;
  #L33463a.  v7:= v17;
  #L33463e.  v8:= v18;
  #L334642.  v9:= v19 @kind object;
  #L334646.  call `c`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lgc/r;.c:(Lqc/c;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @kind static;
  #L33464c.  call temp:= `e0`(v10) @signature `Lqc/c;.e0:()Ljava/lang/String;` @kind virtual;
  #L334652.  v0:= temp @kind object;
  #L334654.  return v0 @kind object;
  #L334656.  v0:= v12;
  #L334658.  call temp:= `substring`(v11, v12, v13) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L33465e.  v0:= temp @kind object;
  #L334660.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lgc/r;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L334674.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33467a.  v2:= temp;
  #L33467c.  v1:= 0I;
  #L33467e.  v8:= 0I;
  #L334680.  v0:= v9 @kind object;
  #L334682.  v3:= v10 @kind object;
  #L334684.  v4:= v11;
  #L334686.  v5:= v12;
  #L334688.  v6:= v13;
  #L33468a.  v7:= v14;
  #L33468c.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lgc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L334692.  v9:= temp @kind object;
  #L334694.  return v9 @kind object;
}
procedure `void` `c`(`qc.c` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 , `java.nio.charset.Charset` v15 @kind object) @signature `Lgc/r;.c:(Lqc/c;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L334c84.  v0:= 0I;
  #L334c86.  if v8 >= v9 then goto L334dbc;
  #L334c8a.  call temp:= `codePointAt`(v7, v8) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L334c90.  v1:= temp;
  #L334c92.  if v11 == 0 then goto L334cba;
  #L334c96.  v2:= 9I;
  #L334c9a.  if v1 == v2 then goto L334dae;
  #L334c9e.  v2:= 10I;
  #L334ca2.  if v1 == v2 then goto L334dae;
  #L334ca6.  v2:= 12I;
  #L334caa.  if v1 == v2 then goto L334dae;
  #L334cae.  v2:= 13I;
  #L334cb2.  if v1 != v2 then goto L334cba;
  #L334cb6.  goto L334dae;
  #L334cba.  v2:= 43I;
  #L334cbe.  if v1 != v2 then goto L334cde;
  #L334cc2.  if v13 == 0 then goto L334cde;
  #L334cc6.  if v11 == 0 then goto L334cd0;
  #L334cca.  v2:= "+" @kind object;
  #L334cce.  goto L334cd4;
  #L334cd0.  v2:= "%2B" @kind object;
  #L334cd4.  call temp:= `u0`(v6, v2) @signature `Lqc/c;.u0:(Ljava/lang/String;)Lqc/c;` @kind virtual;
  #L334cda.  goto L334dae;
  #L334cde.  v2:= 32I;
  #L334ce2.  v3:= 37I;
  #L334ce6.  if v1 < v2 then goto L334d2e;
  #L334cea.  v2:= 127I;
  #L334cee.  if v1 == v2 then goto L334d2e;
  #L334cf2.  v2:= 128I;
  #L334cf6.  if v1 < v2 then goto L334cfe;
  #L334cfa.  if v14 != 0 then goto L334d2e;
  #L334cfe.  call temp:= `indexOf`(v10, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L334d04.  v2:= temp;
  #L334d06.  v4:= -1I;
  #L334d08.  if v2 != v4 then goto L334d2e;
  #L334d0c.  if v1 != v3 then goto L334d26;
  #L334d10.  if v11 == 0 then goto L334d2e;
  #L334d14.  if v12 == 0 then goto L334d26;
  #L334d18.  call temp:= `v`(v7, v8, v9) @signature `Lgc/r;.v:(Ljava/lang/String;II)Z` @kind static;
  #L334d1e.  v2:= temp;
  #L334d20.  if v2 != 0 then goto L334d26;
  #L334d24.  goto L334d2e;
  #L334d26.  call temp:= `w0`(v6, v1) @signature `Lqc/c;.w0:(I)Lqc/c;` @kind virtual;
  #L334d2c.  goto L334dae;
  #L334d2e.  if v0 != 0 then goto L334d3c;
  #L334d32.  v0:= new `qc.c`;
  #L334d36.  call `<init>`(v0) @signature `Lqc/c;.<init>:()V` @kind direct;
  #L334d3c.  if v15 == 0 then goto L334d64;
  #L334d40.  v2:= `@@hc.c.d` @type ^`java.nio.charset.Charset` @kind object;
  #L334d44.  call temp:= `equals`(v15, v2) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L334d4a.  v2:= temp;
  #L334d4c.  if v2 == 0 then goto L334d52;
  #L334d50.  goto L334d64;
  #L334d52.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L334d58.  v2:= temp;
  #L334d5a.  v2:= v2 + v8 @kind int;
  #L334d5c.  call temp:= `t0`(v0, v7, v8, v2, v15) @signature `Lqc/c;.t0:(Ljava/lang/String;IILjava/nio/charset/Charset;)Lqc/c;` @kind virtual;
  #L334d62.  goto L334d6a;
  #L334d64.  call temp:= `w0`(v0, v1) @signature `Lqc/c;.w0:(I)Lqc/c;` @kind virtual;
  #L334d6a.  call temp:= `z`(v0) @signature `Lqc/c;.z:()Z` @kind virtual;
  #L334d70.  v2:= temp;
  #L334d72.  if v2 != 0 then goto L334dae;
  #L334d76.  call temp:= `readByte`(v0) @signature `Lqc/c;.readByte:()B` @kind virtual;
  #L334d7c.  v2:= temp;
  #L334d7e.  v2:= v2 ^& 255;
  #L334d82.  call temp:= `p0`(v6, v3) @signature `Lqc/c;.p0:(I)Lqc/c;` @kind virtual;
  #L334d88.  v4:= `@@gc.r.j` @type ^`char`[] @kind object;
  #L334d8c.  v5:= v2 ^> 4;
  #L334d90.  v5:= v5 ^& 15;
  #L334d94.  v5:= v4[v5] @kind char;
  #L334d98.  call temp:= `p0`(v6, v5) @signature `Lqc/c;.p0:(I)Lqc/c;` @kind virtual;
  #L334d9e.  v2:= v2 ^& 15;
  #L334da2.  v2:= v4[v2] @kind char;
  #L334da6.  call temp:= `p0`(v6, v2) @signature `Lqc/c;.p0:(I)Lqc/c;` @kind virtual;
  #L334dac.  goto L334d6a;
  #L334dae.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L334db4.  v1:= temp;
  #L334db6.  v8:= v8 + v1 @kind int;
  #L334db8.  goto L334c86;
  #L334dbc.  return @kind void;
}
procedure `int` `d`(`java.lang.String` v1 @kind object) @signature `Lgc/r;.d:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L33452c.  v0:= "http" @kind object;
  #L334530.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L334536.  v0:= temp;
  #L334538.  if v0 == 0 then goto L334542;
  #L33453c.  v1:= 80I;
  #L334540.  return v1;
  #L334542.  v0:= "https" @kind object;
  #L334546.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33454c.  v1:= temp;
  #L33454e.  if v1 == 0 then goto L334558;
  #L334552.  v1:= 443I;
  #L334556.  return v1;
  #L334558.  v1:= -1I;
  #L33455a.  return v1;
}
procedure `gc.r` `k`(`java.lang.String` v2 @kind object) @signature `Lgc/r;.k:(Ljava/lang/String;)Lgc/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3343fc.  v0:= new `gc.r$a`;
  #L334400.  call `<init>`(v0) @signature `Lgc/r$a;.<init>:()V` @kind direct;
  #L334406.  v1:= 0I;
  #L334408.  call temp:= `h`(v0, v1, v2) @signature `Lgc/r$a;.h:(Lgc/r;Ljava/lang/String;)Lgc/r$a;` @kind virtual;
  #L33440e.  v2:= temp @kind object;
  #L334410.  call temp:= `a`(v2) @signature `Lgc/r$a;.a:()Lgc/r;` @kind virtual;
  #L334416.  v2:= temp @kind object;
  #L334418.  return v2 @kind object;
}
procedure `void` `n`(`java.lang.StringBuilder` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lgc/r;.n:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L334dd0.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L334dd6.  v0:= temp;
  #L334dd8.  v1:= 0I;
  #L334dda.  if v1 >= v0 then goto L334e28;
  #L334dde.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L334de4.  v2:= temp @kind object;
  #L334de6.  v2:= (`java.lang.String`) v2 @kind object;
  #L334dea.  v3:= v1 + 1;
  #L334dee.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L334df4.  v3:= temp @kind object;
  #L334df6.  v3:= (`java.lang.String`) v3 @kind object;
  #L334dfa.  if v1 <= 0 then goto L334e08;
  #L334dfe.  v4:= 38I;
  #L334e02.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L334e08.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334e0e.  if v3 == 0 then goto L334e22;
  #L334e12.  v2:= 61I;
  #L334e16.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L334e1c.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334e22.  v1:= v1 + 2;
  #L334e26.  goto L334dda;
  #L334e28.  return @kind void;
}
procedure `void` `q`(`java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lgc/r;.q:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L334e3c.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L334e42.  v0:= temp;
  #L334e44.  v1:= 0I;
  #L334e46.  if v1 >= v0 then goto L334e6c;
  #L334e4a.  v2:= 47I;
  #L334e4e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L334e54.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L334e5a.  v2:= temp @kind object;
  #L334e5c.  v2:= (`java.lang.String`) v2 @kind object;
  #L334e60.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L334e66.  v1:= v1 + 1;
  #L334e6a.  goto L334e46;
  #L334e6c.  return @kind void;
}
procedure `java.lang.String` `r`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lgc/r;.r:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L334898.  v0:= v4;
  #L33489a.  if v0 >= v5 then goto L3348e2;
  #L33489e.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3348a4.  v1:= temp;
  #L3348a6.  v2:= 37I;
  #L3348aa.  if v1 == v2 then goto L3348c2;
  #L3348ae.  v2:= 43I;
  #L3348b2.  if v1 != v2 then goto L3348bc;
  #L3348b6.  if v6 == 0 then goto L3348bc;
  #L3348ba.  goto L3348c2;
  #L3348bc.  v0:= v0 + 1;
  #L3348c0.  goto L33489a;
  #L3348c2.  v1:= new `qc.c`;
  #L3348c6.  call `<init>`(v1) @signature `Lqc/c;.<init>:()V` @kind direct;
  #L3348cc.  call temp:= `v0`(v1, v3, v4, v0) @signature `Lqc/c;.v0:(Ljava/lang/String;II)Lqc/c;` @kind virtual;
  #L3348d2.  call `u`(v1, v3, v0, v5, v6) @signature `Lgc/r;.u:(Lqc/c;Ljava/lang/String;IIZ)V` @kind static;
  #L3348d8.  call temp:= `e0`(v1) @signature `Lqc/c;.e0:()Ljava/lang/String;` @kind virtual;
  #L3348de.  v3:= temp @kind object;
  #L3348e0.  return v3 @kind object;
  #L3348e2.  call temp:= `substring`(v3, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3348e8.  v3:= temp @kind object;
  #L3348ea.  return v3 @kind object;
}
procedure `java.lang.String` `s`(`java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lgc/r;.s:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L334874.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33487a.  v0:= temp;
  #L33487c.  v1:= 0I;
  #L33487e.  call temp:= `r`(v2, v1, v0, v3) @signature `Lgc/r;.r:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L334884.  v2:= temp @kind object;
  #L334886.  return v2 @kind object;
}
procedure `java.util.List` `t`(`gc.r` v4 @kind this, `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Lgc/r;.t:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L334aa4.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L334aaa.  v0:= temp;
  #L334aac.  v1:= new `java.util.ArrayList`;
  #L334ab0.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L334ab6.  v2:= 0I;
  #L334ab8.  if v2 >= v0 then goto L334ae4;
  #L334abc.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L334ac2.  v3:= temp @kind object;
  #L334ac4.  v3:= (`java.lang.String`) v3 @kind object;
  #L334ac8.  if v3 == 0 then goto L334ad6;
  #L334acc.  call temp:= `s`(v3, v6) @signature `Lgc/r;.s:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L334ad2.  v3:= temp @kind object;
  #L334ad4.  goto L334ad8;
  #L334ad6.  v3:= 0I;
  #L334ad8.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L334ade.  v2:= v2 + 1;
  #L334ae2.  goto L334ab8;
  #L334ae4.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L334aea.  v5:= temp @kind object;
  #L334aec.  return v5 @kind object;
}
procedure `void` `u`(`qc.c` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `Lgc/r;.u:(Lqc/c;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L334e80.  if v7 >= v8 then goto L334f04;
  #L334e84.  call temp:= `codePointAt`(v6, v7) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L334e8a.  v0:= temp;
  #L334e8c.  v1:= 37I;
  #L334e90.  if v0 != v1 then goto L334eda;
  #L334e94.  v1:= v7 + 2;
  #L334e98.  if v1 >= v8 then goto L334eda;
  #L334e9c.  v2:= v7 + 1;
  #L334ea0.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L334ea6.  v2:= temp;
  #L334ea8.  call temp:= `i`(v2) @signature `Lhc/c;.i:(C)I` @kind static;
  #L334eae.  v2:= temp;
  #L334eb0.  call temp:= `charAt`(v6, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L334eb6.  v3:= temp;
  #L334eb8.  call temp:= `i`(v3) @signature `Lhc/c;.i:(C)I` @kind static;
  #L334ebe.  v3:= temp;
  #L334ec0.  v4:= -1I;
  #L334ec2.  if v2 == v4 then goto L334ef2;
  #L334ec6.  if v3 == v4 then goto L334ef2;
  #L334eca.  v7:= v2 ^< 4;
  #L334ece.  v7:= v7 + v3 @kind int;
  #L334ed0.  call temp:= `p0`(v5, v7) @signature `Lqc/c;.p0:(I)Lqc/c;` @kind virtual;
  #L334ed6.  v7:= v1;
  #L334ed8.  goto L334ef8;
  #L334eda.  v1:= 43I;
  #L334ede.  if v0 != v1 then goto L334ef2;
  #L334ee2.  if v9 == 0 then goto L334ef2;
  #L334ee6.  v1:= 32I;
  #L334eea.  call temp:= `p0`(v5, v1) @signature `Lqc/c;.p0:(I)Lqc/c;` @kind virtual;
  #L334ef0.  goto L334ef8;
  #L334ef2.  call temp:= `w0`(v5, v0) @signature `Lqc/c;.w0:(I)Lqc/c;` @kind virtual;
  #L334ef8.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L334efe.  v0:= temp;
  #L334f00.  v7:= v7 + v0 @kind int;
  #L334f02.  goto L334e80;
  #L334f04.  return @kind void;
}
procedure `boolean` `v`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lgc/r;.v:(Ljava/lang/String;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3343a0.  v0:= v4 + 2;
  #L3343a4.  v1:= 1I;
  #L3343a6.  if v0 >= v5 then goto L3343e8;
  #L3343aa.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3343b0.  v5:= temp;
  #L3343b2.  v2:= 37I;
  #L3343b6.  if v5 != v2 then goto L3343e8;
  #L3343ba.  v4:= v4 + v1 @kind int;
  #L3343bc.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3343c2.  v4:= temp;
  #L3343c4.  call temp:= `i`(v4) @signature `Lhc/c;.i:(C)I` @kind static;
  #L3343ca.  v4:= temp;
  #L3343cc.  v5:= -1I;
  #L3343ce.  if v4 == v5 then goto L3343e8;
  #L3343d2.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3343d8.  v3:= temp;
  #L3343da.  call temp:= `i`(v3) @signature `Lhc/c;.i:(C)I` @kind static;
  #L3343e0.  v3:= temp;
  #L3343e2.  if v3 == v5 then goto L3343e8;
  #L3343e6.  goto L3343ea;
  #L3343e8.  v1:= 0I;
  #L3343ea.  return v1;
}
procedure `java.util.List` `y`(`java.lang.String` v5 @kind object) @signature `Lgc/r;.y:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L334b00.  v0:= new `java.util.ArrayList`;
  #L334b04.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L334b0a.  v1:= 0I;
  #L334b0c.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L334b12.  v2:= temp;
  #L334b14.  if v1 > v2 then goto L334b80;
  #L334b18.  v2:= 38I;
  #L334b1c.  call temp:= `indexOf`(v5, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L334b22.  v2:= temp;
  #L334b24.  v3:= -1I;
  #L334b26.  if v2 != v3 then goto L334b32;
  #L334b2a.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L334b30.  v2:= temp;
  #L334b32.  v4:= 61I;
  #L334b36.  call temp:= `indexOf`(v5, v4, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L334b3c.  v4:= temp;
  #L334b3e.  if v4 == v3 then goto L334b64;
  #L334b42.  if v4 <= v2 then goto L334b48;
  #L334b46.  goto L334b64;
  #L334b48.  call temp:= `substring`(v5, v1, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L334b4e.  v1:= temp @kind object;
  #L334b50.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L334b56.  v4:= v4 + 1;
  #L334b5a.  call temp:= `substring`(v5, v4, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L334b60.  v1:= temp @kind object;
  #L334b62.  goto L334b74;
  #L334b64.  call temp:= `substring`(v5, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L334b6a.  v1:= temp @kind object;
  #L334b6c.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L334b72.  v1:= 0I;
  #L334b74.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L334b7a.  v1:= v2 + 1;
  #L334b7e.  goto L334b0c;
  #L334b80.  return v0 @kind object;
}
procedure `gc.r` `A`(`gc.r` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lgc/r;.A:(Ljava/lang/String;)Lgc/r;` @AccessFlag PUBLIC {
    temp;

  #L33442c.  call temp:= `p`(v0, v1) @signature `Lgc/r;.p:(Ljava/lang/String;)Lgc/r$a;` @kind virtual;
  #L334432.  v1:= temp @kind object;
  #L334434.  if v1 == 0 then goto L334442;
  #L334438.  call temp:= `a`(v1) @signature `Lgc/r$a;.a:()Lgc/r;` @kind virtual;
  #L33443e.  v1:= temp @kind object;
  #L334440.  goto L334444;
  #L334442.  v1:= 0I;
  #L334444.  return v1 @kind object;
}
procedure `java.lang.String` `B`(`gc.r` v1 @kind this) @signature `Lgc/r;.B:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33497c.  v0:= v1.`gc.r.a` @type ^`java.lang.String` @kind object;
  #L334980.  return v0 @kind object;
}
procedure `java.net.URI` `C`(`gc.r` v4 @kind this) @signature `Lgc/r;.C:()Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3349ac.  call temp:= `o`(v4) @signature `Lgc/r;.o:()Lgc/r$a;` @kind virtual;
  #L3349b2.  v0:= temp @kind object;
  #L3349b4.  call temp:= `o`(v0) @signature `Lgc/r$a;.o:()Lgc/r$a;` @kind virtual;
  #L3349ba.  v0:= temp @kind object;
  #L3349bc.  call temp:= `toString`(v0) @signature `Lgc/r$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L3349c2.  v0:= temp @kind object;
  #L3349c4.  v1:= new `java.net.URI`;
  #L3349c8.  call `<init>`(v1, v0) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3349ce.  return v1 @kind object;
  #L3349d0.  v1:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #L3349d2.  v2:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L3349d6.  v3:= "" @kind object;
  #L3349da.  call temp:= `replaceAll`(v0, v2, v3) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3349e0.  v0:= temp @kind object;
  #L3349e2.  call temp:= `create`(v0) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #L3349e8.  v0:= temp @kind object;
  #L3349ea.  return v0 @kind object;
  #L3349ec.  v0:= new `java.lang.RuntimeException`;
  #L3349f0.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3349f6.  throw v0;
  catch `java.net.URISyntaxException` @[L3349c4..L3349ce] goto L3349d0;
  catch `java.lang.Exception` @[L3349d2..L3349ea] goto L3349ec;
}
procedure `java.lang.String` `e`(`gc.r` v2 @kind this) @signature `Lgc/r;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3346a8.  v0:= v2.`gc.r.h` @type ^`java.lang.String` @kind object;
  #L3346ac.  if v0 != 0 then goto L3346b4;
  #L3346b0.  v0:= 0I;
  #L3346b2.  return v0 @kind object;
  #L3346b4.  v0:= v2.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L3346b8.  v1:= 35I;
  #L3346bc.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3346c2.  v0:= temp;
  #L3346c4.  v0:= v0 + 1;
  #L3346c8.  v1:= v2.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L3346cc.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3346d2.  v0:= temp @kind object;
  #L3346d4.  return v0 @kind object;
}
procedure `boolean` `equals`(`gc.r` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lgc/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L334344.  v0:= instanceof @variable v2 @type ^`gc.r` @kind boolean;
  #L334348.  if v0 == 0 then goto L334368;
  #L33434c.  v2:= (`gc.r`) v2 @kind object;
  #L334350.  v2:= v2.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L334354.  v0:= v1.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L334358.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33435e.  v2:= temp;
  #L334360.  if v2 == 0 then goto L334368;
  #L334364.  v2:= 1I;
  #L334366.  goto L33436a;
  #L334368.  v2:= 0I;
  #L33436a.  return v2;
}
procedure `java.lang.String` `f`(`gc.r` v3 @kind this) @signature `Lgc/r;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3346e8.  v0:= v3.`gc.r.c` @type ^`java.lang.String` @kind object;
  #L3346ec.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3346f2.  v0:= temp;
  #L3346f4.  if v0 == 0 then goto L3346fe;
  #L3346f8.  v0:= "" @kind object;
  #L3346fc.  return v0 @kind object;
  #L3346fe.  v0:= v3.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L334702.  v1:= 58I;
  #L334706.  v2:= v3.`gc.r.a` @type ^`java.lang.String` @kind object;
  #L33470a.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L334710.  v2:= temp;
  #L334712.  v2:= v2 + 3;
  #L334716.  call temp:= `indexOf`(v0, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L33471c.  v0:= temp;
  #L33471e.  v0:= v0 + 1;
  #L334722.  v1:= v3.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L334726.  v2:= 64I;
  #L33472a.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L334730.  v1:= temp;
  #L334732.  v2:= v3.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L334736.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L33473c.  v0:= temp @kind object;
  #L33473e.  return v0 @kind object;
}
procedure `java.lang.String` `g`(`gc.r` v4 @kind this) @signature `Lgc/r;.g:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L334750.  v0:= v4.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L334754.  v1:= v4.`gc.r.a` @type ^`java.lang.String` @kind object;
  #L334758.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33475e.  v1:= temp;
  #L334760.  v1:= v1 + 3;
  #L334764.  v2:= 47I;
  #L334768.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L33476e.  v0:= temp;
  #L334770.  v1:= v4.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L334774.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33477a.  v2:= temp;
  #L33477c.  v3:= "?#" @kind object;
  #L334780.  call temp:= `m`(v1, v0, v2, v3) @signature `Lhc/c;.m:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L334786.  v1:= temp;
  #L334788.  v2:= v4.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L33478c.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L334792.  v0:= temp @kind object;
  #L334794.  return v0 @kind object;
}
procedure `java.util.List` `h`(`gc.r` v6 @kind this) @signature `Lgc/r;.h:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L334a24.  v0:= v6.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L334a28.  v1:= v6.`gc.r.a` @type ^`java.lang.String` @kind object;
  #L334a2c.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L334a32.  v1:= temp;
  #L334a34.  v1:= v1 + 3;
  #L334a38.  v2:= 47I;
  #L334a3c.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L334a42.  v0:= temp;
  #L334a44.  v1:= v6.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L334a48.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L334a4e.  v3:= temp;
  #L334a50.  v4:= "?#" @kind object;
  #L334a54.  call temp:= `m`(v1, v0, v3, v4) @signature `Lhc/c;.m:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L334a5a.  v1:= temp;
  #L334a5c.  v3:= new `java.util.ArrayList`;
  #L334a60.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L334a66.  if v0 >= v1 then goto L334a90;
  #L334a6a.  v0:= v0 + 1;
  #L334a6e.  v4:= v6.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L334a72.  call temp:= `l`(v4, v0, v1, v2) @signature `Lhc/c;.l:(Ljava/lang/String;IIC)I` @kind static;
  #L334a78.  v4:= temp;
  #L334a7a.  v5:= v6.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L334a7e.  call temp:= `substring`(v5, v0, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L334a84.  v0:= temp @kind object;
  #L334a86.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L334a8c.  v0:= v4;
  #L334a8e.  goto L334a66;
  #L334a90.  return v3 @kind object;
}
procedure `int` `hashCode`(`gc.r` v1 @kind this) @signature `Lgc/r;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33456c.  v0:= v1.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L334570.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L334576.  v0:= temp;
  #L334578.  return v0;
}
procedure `java.lang.String` `i`(`gc.r` v4 @kind this) @signature `Lgc/r;.i:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3347a8.  v0:= v4.`gc.r.g` @type ^`java.util.List` @kind object;
  #L3347ac.  if v0 != 0 then goto L3347b4;
  #L3347b0.  v0:= 0I;
  #L3347b2.  return v0 @kind object;
  #L3347b4.  v0:= v4.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L3347b8.  v1:= 63I;
  #L3347bc.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3347c2.  v0:= temp;
  #L3347c4.  v0:= v0 + 1;
  #L3347c8.  v1:= v4.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L3347cc.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3347d2.  v2:= temp;
  #L3347d4.  v3:= 35I;
  #L3347d8.  call temp:= `l`(v1, v0, v2, v3) @signature `Lhc/c;.l:(Ljava/lang/String;IIC)I` @kind static;
  #L3347de.  v1:= temp;
  #L3347e0.  v2:= v4.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L3347e4.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3347ea.  v0:= temp @kind object;
  #L3347ec.  return v0 @kind object;
}
procedure `java.lang.String` `j`(`gc.r` v4 @kind this) @signature `Lgc/r;.j:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L334800.  v0:= v4.`gc.r.b` @type ^`java.lang.String` @kind object;
  #L334804.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L33480a.  v0:= temp;
  #L33480c.  if v0 == 0 then goto L334816;
  #L334810.  v0:= "" @kind object;
  #L334814.  return v0 @kind object;
  #L334816.  v0:= v4.`gc.r.a` @type ^`java.lang.String` @kind object;
  #L33481a.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L334820.  v0:= temp;
  #L334822.  v0:= v0 + 3;
  #L334826.  v1:= v4.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L33482a.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L334830.  v2:= temp;
  #L334832.  v3:= ":@" @kind object;
  #L334836.  call temp:= `m`(v1, v0, v2, v3) @signature `Lhc/c;.m:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L33483c.  v1:= temp;
  #L33483e.  v2:= v4.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L334842.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L334848.  v0:= temp @kind object;
  #L33484a.  return v0 @kind object;
}
procedure `java.lang.String` `l`(`gc.r` v1 @kind this) @signature `Lgc/r;.l:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33485c.  v0:= v1.`gc.r.d` @type ^`java.lang.String` @kind object;
  #L334860.  return v0 @kind object;
}
procedure `boolean` `m`(`gc.r` v2 @kind this) @signature `Lgc/r;.m:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33437c.  v0:= v2.`gc.r.a` @type ^`java.lang.String` @kind object;
  #L334380.  v1:= "https" @kind object;
  #L334384.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33438a.  v0:= temp;
  #L33438c.  return v0;
}
procedure `gc.r$a` `o`(`gc.r` v3 @kind this) @signature `Lgc/r;.o:()Lgc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L334458.  v0:= new `gc.r$a`;
  #L33445c.  call `<init>`(v0) @signature `Lgc/r$a;.<init>:()V` @kind direct;
  #L334462.  v1:= v3.`gc.r.a` @type ^`java.lang.String` @kind object;
  #L334466.  v0.`gc.r$a.a` @type ^`java.lang.String` := v1 @kind object;
  #L33446a.  call temp:= `j`(v3) @signature `Lgc/r;.j:()Ljava/lang/String;` @kind virtual;
  #L334470.  v1:= temp @kind object;
  #L334472.  v0.`gc.r$a.b` @type ^`java.lang.String` := v1 @kind object;
  #L334476.  call temp:= `f`(v3) @signature `Lgc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L33447c.  v1:= temp @kind object;
  #L33447e.  v0.`gc.r$a.c` @type ^`java.lang.String` := v1 @kind object;
  #L334482.  v1:= v3.`gc.r.d` @type ^`java.lang.String` @kind object;
  #L334486.  v0.`gc.r$a.d` @type ^`java.lang.String` := v1 @kind object;
  #L33448a.  v1:= v3.`gc.r.e` @type ^`int`;
  #L33448e.  v2:= v3.`gc.r.a` @type ^`java.lang.String` @kind object;
  #L334492.  call temp:= `d`(v2) @signature `Lgc/r;.d:(Ljava/lang/String;)I` @kind static;
  #L334498.  v2:= temp;
  #L33449a.  if v1 == v2 then goto L3344a4;
  #L33449e.  v1:= v3.`gc.r.e` @type ^`int`;
  #L3344a2.  goto L3344a6;
  #L3344a4.  v1:= -1I;
  #L3344a6.  v0.`gc.r$a.e` @type ^`int` := v1;
  #L3344aa.  v1:= v0.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L3344ae.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3344b4.  v1:= v0.`gc.r$a.f` @type ^`java.util.List` @kind object;
  #L3344b8.  call temp:= `h`(v3) @signature `Lgc/r;.h:()Ljava/util/List;` @kind virtual;
  #L3344be.  v2:= temp @kind object;
  #L3344c0.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3344c6.  call temp:= `i`(v3) @signature `Lgc/r;.i:()Ljava/lang/String;` @kind virtual;
  #L3344cc.  v1:= temp @kind object;
  #L3344ce.  call temp:= `d`(v0, v1) @signature `Lgc/r$a;.d:(Ljava/lang/String;)Lgc/r$a;` @kind virtual;
  #L3344d4.  call temp:= `e`(v3) @signature `Lgc/r;.e:()Ljava/lang/String;` @kind virtual;
  #L3344da.  v1:= temp @kind object;
  #L3344dc.  v0.`gc.r$a.h` @type ^`java.lang.String` := v1 @kind object;
  #L3344e0.  return v0 @kind object;
}
procedure `gc.r$a` `p`(`gc.r` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lgc/r;.p:(Ljava/lang/String;)Lgc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3344f4.  v0:= new `gc.r$a`;
  #L3344f8.  call `<init>`(v0) @signature `Lgc/r$a;.<init>:()V` @kind direct;
  #L3344fe.  call temp:= `h`(v0, v1, v2) @signature `Lgc/r$a;.h:(Lgc/r;Ljava/lang/String;)Lgc/r$a;` @kind virtual;
  #L334504.  v2:= temp @kind object;
  #L334506.  return v2 @kind object;
  #L334508.  v2:= 0I;
  #L33450a.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L3344f4..L334506] goto L334508;
}
procedure `java.lang.String` `toString`(`gc.r` v1 @kind this) @signature `Lgc/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L334994.  v0:= v1.`gc.r.i` @type ^`java.lang.String` @kind object;
  #L334998.  return v0 @kind object;
}
procedure `int` `w`(`gc.r` v1 @kind this) @signature `Lgc/r;.w:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33458c.  v0:= v1.`gc.r.e` @type ^`int`;
  #L334590.  return v0;
}
procedure `java.lang.String` `x`(`gc.r` v2 @kind this) @signature `Lgc/r;.x:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3348fc.  v0:= v2.`gc.r.g` @type ^`java.util.List` @kind object;
  #L334900.  if v0 != 0 then goto L334908;
  #L334904.  v0:= 0I;
  #L334906.  return v0 @kind object;
  #L334908.  v0:= new `java.lang.StringBuilder`;
  #L33490c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L334912.  v1:= v2.`gc.r.g` @type ^`java.util.List` @kind object;
  #L334916.  call `n`(v0, v1) @signature `Lgc/r;.n:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L33491c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L334922.  v0:= temp @kind object;
  #L334924.  return v0 @kind object;
}
procedure `java.lang.String` `z`(`gc.r` v2 @kind this) @signature `Lgc/r;.z:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L334938.  v0:= "/..." @kind object;
  #L33493c.  call temp:= `p`(v2, v0) @signature `Lgc/r;.p:(Ljava/lang/String;)Lgc/r$a;` @kind virtual;
  #L334942.  v0:= temp @kind object;
  #L334944.  v1:= "" @kind object;
  #L334948.  call temp:= `t`(v0, v1) @signature `Lgc/r$a;.t:(Ljava/lang/String;)Lgc/r$a;` @kind virtual;
  #L33494e.  v0:= temp @kind object;
  #L334950.  call temp:= `j`(v0, v1) @signature `Lgc/r$a;.j:(Ljava/lang/String;)Lgc/r$a;` @kind virtual;
  #L334956.  v0:= temp @kind object;
  #L334958.  call temp:= `a`(v0) @signature `Lgc/r$a;.a:()Lgc/r;` @kind virtual;
  #L33495e.  v0:= temp @kind object;
  #L334960.  call temp:= `toString`(v0) @signature `Lgc/r;.toString:()Ljava/lang/String;` @kind virtual;
  #L334966.  v0:= temp @kind object;
  #L334968.  return v0 @kind object;
}
