record `gc.a` @kind class @AccessFlag PUBLIC_FINAL {
  `gc.r` `gc.a.a` @AccessFlag FINAL;
  `gc.n` `gc.a.b` @AccessFlag FINAL;
  `javax.net.SocketFactory` `gc.a.c` @AccessFlag FINAL;
  `gc.b` `gc.a.d` @AccessFlag FINAL;
  `java.util.List` `gc.a.e` @AccessFlag FINAL;
  `java.util.List` `gc.a.f` @AccessFlag FINAL;
  `java.net.ProxySelector` `gc.a.g` @AccessFlag FINAL;
  `java.net.Proxy` `gc.a.h` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `gc.a.i` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `gc.a.j` @AccessFlag FINAL;
  `gc.f` `gc.a.k` @AccessFlag FINAL;
}
procedure `void` `<init>`(`gc.a` v2 @kind this, `java.lang.String` v3 @kind object, `int` v4 , `gc.n` v5 @kind object, `javax.net.SocketFactory` v6 @kind object, `javax.net.ssl.SSLSocketFactory` v7 @kind object, `javax.net.ssl.HostnameVerifier` v8 @kind object, `gc.f` v9 @kind object, `gc.b` v10 @kind object, `java.net.Proxy` v11 @kind object, `java.util.List` v12 @kind object, `java.util.List` v13 @kind object, `java.net.ProxySelector` v14 @kind object) @signature `Lgc/a;.<init>:(Ljava/lang/String;ILgc/n;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lgc/f;Lgc/b;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L32f9b4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32f9ba.  v0:= new `gc.r$a`;
  #L32f9be.  call `<init>`(v0) @signature `Lgc/r$a;.<init>:()V` @kind direct;
  #L32f9c4.  if v7 == 0 then goto L32f9ce;
  #L32f9c8.  v1:= "https" @kind object;
  #L32f9cc.  goto L32f9d2;
  #L32f9ce.  v1:= "http" @kind object;
  #L32f9d2.  call temp:= `q`(v0, v1) @signature `Lgc/r$a;.q:(Ljava/lang/String;)Lgc/r$a;` @kind virtual;
  #L32f9d8.  v0:= temp @kind object;
  #L32f9da.  call temp:= `e`(v0, v3) @signature `Lgc/r$a;.e:(Ljava/lang/String;)Lgc/r$a;` @kind virtual;
  #L32f9e0.  v3:= temp @kind object;
  #L32f9e2.  call temp:= `l`(v3, v4) @signature `Lgc/r$a;.l:(I)Lgc/r$a;` @kind virtual;
  #L32f9e8.  v3:= temp @kind object;
  #L32f9ea.  call temp:= `a`(v3) @signature `Lgc/r$a;.a:()Lgc/r;` @kind virtual;
  #L32f9f0.  v3:= temp @kind object;
  #L32f9f2.  v2.`gc.a.a` @type ^`gc.r` := v3 @kind object;
  #L32f9f6.  v3:= "dns == null" @kind object;
  #L32f9fa.  call temp:= `requireNonNull`(v5, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32fa00.  v2.`gc.a.b` @type ^`gc.n` := v5 @kind object;
  #L32fa04.  v3:= "socketFactory == null" @kind object;
  #L32fa08.  call temp:= `requireNonNull`(v6, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32fa0e.  v2.`gc.a.c` @type ^`javax.net.SocketFactory` := v6 @kind object;
  #L32fa12.  v3:= "proxyAuthenticator == null" @kind object;
  #L32fa16.  call temp:= `requireNonNull`(v10, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32fa1c.  v2.`gc.a.d` @type ^`gc.b` := v10 @kind object;
  #L32fa20.  v3:= "protocols == null" @kind object;
  #L32fa24.  call temp:= `requireNonNull`(v12, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32fa2a.  call temp:= `r`(v12) @signature `Lhc/c;.r:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L32fa30.  v3:= temp @kind object;
  #L32fa32.  v2.`gc.a.e` @type ^`java.util.List` := v3 @kind object;
  #L32fa36.  v3:= "connectionSpecs == null" @kind object;
  #L32fa3a.  call temp:= `requireNonNull`(v13, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32fa40.  call temp:= `r`(v13) @signature `Lhc/c;.r:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L32fa46.  v3:= temp @kind object;
  #L32fa48.  v2.`gc.a.f` @type ^`java.util.List` := v3 @kind object;
  #L32fa4c.  v3:= "proxySelector == null" @kind object;
  #L32fa50.  call temp:= `requireNonNull`(v14, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32fa56.  v2.`gc.a.g` @type ^`java.net.ProxySelector` := v14 @kind object;
  #L32fa5a.  v2.`gc.a.h` @type ^`java.net.Proxy` := v11 @kind object;
  #L32fa5e.  v2.`gc.a.i` @type ^`javax.net.ssl.SSLSocketFactory` := v7 @kind object;
  #L32fa62.  v2.`gc.a.j` @type ^`javax.net.ssl.HostnameVerifier` := v8 @kind object;
  #L32fa66.  v2.`gc.a.k` @type ^`gc.f` := v9 @kind object;
  #L32fa6a.  return @kind void;
}
procedure `gc.f` `a`(`gc.a` v1 @kind this) @signature `Lgc/a;.a:()Lgc/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f74c.  v0:= v1.`gc.a.k` @type ^`gc.f` @kind object;
  #L32f750.  return v0 @kind object;
}
procedure `java.util.List` `b`(`gc.a` v1 @kind this) @signature `Lgc/a;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f93c.  v0:= v1.`gc.a.f` @type ^`java.util.List` @kind object;
  #L32f940.  return v0 @kind object;
}
procedure `gc.n` `c`(`gc.a` v1 @kind this) @signature `Lgc/a;.c:()Lgc/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f764.  v0:= v1.`gc.a.b` @type ^`gc.n` @kind object;
  #L32f768.  return v0 @kind object;
}
procedure `boolean` `d`(`gc.a` v2 @kind this, `gc.a` v3 @kind object) @signature `Lgc/a;.d:(Lgc/a;)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L32f644.  v0:= v2.`gc.a.b` @type ^`gc.n` @kind object;
  #L32f648.  v1:= v3.`gc.a.b` @type ^`gc.n` @kind object;
  #L32f64c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32f652.  v0:= temp;
  #L32f654.  if v0 == 0 then goto L32f720;
  #L32f658.  v0:= v2.`gc.a.d` @type ^`gc.b` @kind object;
  #L32f65c.  v1:= v3.`gc.a.d` @type ^`gc.b` @kind object;
  #L32f660.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32f666.  v0:= temp;
  #L32f668.  if v0 == 0 then goto L32f720;
  #L32f66c.  v0:= v2.`gc.a.e` @type ^`java.util.List` @kind object;
  #L32f670.  v1:= v3.`gc.a.e` @type ^`java.util.List` @kind object;
  #L32f674.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L32f67a.  v0:= temp;
  #L32f67c.  if v0 == 0 then goto L32f720;
  #L32f680.  v0:= v2.`gc.a.f` @type ^`java.util.List` @kind object;
  #L32f684.  v1:= v3.`gc.a.f` @type ^`java.util.List` @kind object;
  #L32f688.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L32f68e.  v0:= temp;
  #L32f690.  if v0 == 0 then goto L32f720;
  #L32f694.  v0:= v2.`gc.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L32f698.  v1:= v3.`gc.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L32f69c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32f6a2.  v0:= temp;
  #L32f6a4.  if v0 == 0 then goto L32f720;
  #L32f6a8.  v0:= v2.`gc.a.h` @type ^`java.net.Proxy` @kind object;
  #L32f6ac.  v1:= v3.`gc.a.h` @type ^`java.net.Proxy` @kind object;
  #L32f6b0.  call temp:= `o`(v0, v1) @signature `Lhc/c;.o:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L32f6b6.  v0:= temp;
  #L32f6b8.  if v0 == 0 then goto L32f720;
  #L32f6bc.  v0:= v2.`gc.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L32f6c0.  v1:= v3.`gc.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L32f6c4.  call temp:= `o`(v0, v1) @signature `Lhc/c;.o:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L32f6ca.  v0:= temp;
  #L32f6cc.  if v0 == 0 then goto L32f720;
  #L32f6d0.  v0:= v2.`gc.a.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L32f6d4.  v1:= v3.`gc.a.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L32f6d8.  call temp:= `o`(v0, v1) @signature `Lhc/c;.o:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L32f6de.  v0:= temp;
  #L32f6e0.  if v0 == 0 then goto L32f720;
  #L32f6e4.  v0:= v2.`gc.a.k` @type ^`gc.f` @kind object;
  #L32f6e8.  v1:= v3.`gc.a.k` @type ^`gc.f` @kind object;
  #L32f6ec.  call temp:= `o`(v0, v1) @signature `Lhc/c;.o:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L32f6f2.  v0:= temp;
  #L32f6f4.  if v0 == 0 then goto L32f720;
  #L32f6f8.  call temp:= `l`(v2) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L32f6fe.  v0:= temp @kind object;
  #L32f700.  call temp:= `w`(v0) @signature `Lgc/r;.w:()I` @kind virtual;
  #L32f706.  v0:= temp;
  #L32f708.  call temp:= `l`(v3) @signature `Lgc/a;.l:()Lgc/r;` @kind virtual;
  #L32f70e.  v3:= temp @kind object;
  #L32f710.  call temp:= `w`(v3) @signature `Lgc/r;.w:()I` @kind virtual;
  #L32f716.  v3:= temp;
  #L32f718.  if v0 != v3 then goto L32f720;
  #L32f71c.  v3:= 1I;
  #L32f71e.  goto L32f722;
  #L32f720.  v3:= 0I;
  #L32f722.  return v3;
}
procedure `javax.net.ssl.HostnameVerifier` `e`(`gc.a` v1 @kind this) @signature `Lgc/a;.e:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f984.  v0:= v1.`gc.a.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L32f988.  return v0 @kind object;
}
procedure `boolean` `equals`(`gc.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lgc/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32f600.  v0:= instanceof @variable v3 @type ^`gc.a` @kind boolean;
  #L32f604.  if v0 == 0 then goto L32f630;
  #L32f608.  v0:= v2.`gc.a.a` @type ^`gc.r` @kind object;
  #L32f60c.  v3:= (`gc.a`) v3 @kind object;
  #L32f610.  v1:= v3.`gc.a.a` @type ^`gc.r` @kind object;
  #L32f614.  call temp:= `equals`(v0, v1) @signature `Lgc/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32f61a.  v0:= temp;
  #L32f61c.  if v0 == 0 then goto L32f630;
  #L32f620.  call temp:= `d`(v2, v3) @signature `Lgc/a;.d:(Lgc/a;)Z` @kind virtual;
  #L32f626.  v3:= temp;
  #L32f628.  if v3 == 0 then goto L32f630;
  #L32f62c.  v3:= 1I;
  #L32f62e.  goto L32f632;
  #L32f630.  v3:= 0I;
  #L32f632.  return v3;
}
procedure `java.util.List` `f`(`gc.a` v1 @kind this) @signature `Lgc/a;.f:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f954.  v0:= v1.`gc.a.e` @type ^`java.util.List` @kind object;
  #L32f958.  return v0 @kind object;
}
procedure `java.net.Proxy` `g`(`gc.a` v1 @kind this) @signature `Lgc/a;.g:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f90c.  v0:= v1.`gc.a.h` @type ^`java.net.Proxy` @kind object;
  #L32f910.  return v0 @kind object;
}
procedure `gc.b` `h`(`gc.a` v1 @kind this) @signature `Lgc/a;.h:()Lgc/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f734.  v0:= v1.`gc.a.d` @type ^`gc.b` @kind object;
  #L32f738.  return v0 @kind object;
}
procedure `int` `hashCode`(`gc.a` v3 @kind this) @signature `Lgc/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32f794.  v0:= v3.`gc.a.a` @type ^`gc.r` @kind object;
  #L32f798.  call temp:= `hashCode`(v0) @signature `Lgc/r;.hashCode:()I` @kind virtual;
  #L32f79e.  v0:= temp;
  #L32f7a0.  v1:= 527I;
  #L32f7a4.  v1:= v1 + v0 @kind int;
  #L32f7a6.  v1:= v1 * 31;
  #L32f7aa.  v0:= v3.`gc.a.b` @type ^`gc.n` @kind object;
  #L32f7ae.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L32f7b4.  v0:= temp;
  #L32f7b6.  v1:= v1 + v0 @kind int;
  #L32f7b8.  v1:= v1 * 31;
  #L32f7bc.  v0:= v3.`gc.a.d` @type ^`gc.b` @kind object;
  #L32f7c0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L32f7c6.  v0:= temp;
  #L32f7c8.  v1:= v1 + v0 @kind int;
  #L32f7ca.  v1:= v1 * 31;
  #L32f7ce.  v0:= v3.`gc.a.e` @type ^`java.util.List` @kind object;
  #L32f7d2.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L32f7d8.  v0:= temp;
  #L32f7da.  v1:= v1 + v0 @kind int;
  #L32f7dc.  v1:= v1 * 31;
  #L32f7e0.  v0:= v3.`gc.a.f` @type ^`java.util.List` @kind object;
  #L32f7e4.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L32f7ea.  v0:= temp;
  #L32f7ec.  v1:= v1 + v0 @kind int;
  #L32f7ee.  v1:= v1 * 31;
  #L32f7f2.  v0:= v3.`gc.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L32f7f6.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L32f7fc.  v0:= temp;
  #L32f7fe.  v1:= v1 + v0 @kind int;
  #L32f800.  v1:= v1 * 31;
  #L32f804.  v0:= v3.`gc.a.h` @type ^`java.net.Proxy` @kind object;
  #L32f808.  v2:= 0I;
  #L32f80a.  if v0 == 0 then goto L32f818;
  #L32f80e.  call temp:= `hashCode`(v0) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L32f814.  v0:= temp;
  #L32f816.  goto L32f81a;
  #L32f818.  v0:= 0I;
  #L32f81a.  v1:= v1 + v0 @kind int;
  #L32f81c.  v1:= v1 * 31;
  #L32f820.  v0:= v3.`gc.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L32f824.  if v0 == 0 then goto L32f832;
  #L32f828.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L32f82e.  v0:= temp;
  #L32f830.  goto L32f834;
  #L32f832.  v0:= 0I;
  #L32f834.  v1:= v1 + v0 @kind int;
  #L32f836.  v1:= v1 * 31;
  #L32f83a.  v0:= v3.`gc.a.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L32f83e.  if v0 == 0 then goto L32f84c;
  #L32f842.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L32f848.  v0:= temp;
  #L32f84a.  goto L32f84e;
  #L32f84c.  v0:= 0I;
  #L32f84e.  v1:= v1 + v0 @kind int;
  #L32f850.  v1:= v1 * 31;
  #L32f854.  v0:= v3.`gc.a.k` @type ^`gc.f` @kind object;
  #L32f858.  if v0 == 0 then goto L32f864;
  #L32f85c.  call temp:= `hashCode`(v0) @signature `Lgc/f;.hashCode:()I` @kind virtual;
  #L32f862.  v2:= temp;
  #L32f864.  v1:= v1 + v2 @kind int;
  #L32f866.  return v1;
}
procedure `java.net.ProxySelector` `i`(`gc.a` v1 @kind this) @signature `Lgc/a;.i:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f924.  v0:= v1.`gc.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L32f928.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `j`(`gc.a` v1 @kind this) @signature `Lgc/a;.j:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f96c.  v0:= v1.`gc.a.c` @type ^`javax.net.SocketFactory` @kind object;
  #L32f970.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `k`(`gc.a` v1 @kind this) @signature `Lgc/a;.k:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f99c.  v0:= v1.`gc.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L32f9a0.  return v0 @kind object;
}
procedure `gc.r` `l`(`gc.a` v1 @kind this) @signature `Lgc/a;.l:()Lgc/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f77c.  v0:= v1.`gc.a.a` @type ^`gc.r` @kind object;
  #L32f780.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`gc.a` v2 @kind this) @signature `Lgc/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32f878.  v0:= new `java.lang.StringBuilder`;
  #L32f87c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32f882.  v1:= "Address{" @kind object;
  #L32f886.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f88c.  v1:= v2.`gc.a.a` @type ^`gc.r` @kind object;
  #L32f890.  call temp:= `l`(v1) @signature `Lgc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L32f896.  v1:= temp @kind object;
  #L32f898.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f89e.  v1:= ":" @kind object;
  #L32f8a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f8a8.  v1:= v2.`gc.a.a` @type ^`gc.r` @kind object;
  #L32f8ac.  call temp:= `w`(v1) @signature `Lgc/r;.w:()I` @kind virtual;
  #L32f8b2.  v1:= temp;
  #L32f8b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f8ba.  v1:= v2.`gc.a.h` @type ^`java.net.Proxy` @kind object;
  #L32f8be.  if v1 == 0 then goto L32f8d2;
  #L32f8c2.  v1:= ", proxy=" @kind object;
  #L32f8c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f8cc.  v1:= v2.`gc.a.h` @type ^`java.net.Proxy` @kind object;
  #L32f8d0.  goto L32f8e0;
  #L32f8d2.  v1:= ", proxySelector=" @kind object;
  #L32f8d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f8dc.  v1:= v2.`gc.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L32f8e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f8e6.  v1:= "}" @kind object;
  #L32f8ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f8f0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32f8f6.  v0:= temp @kind object;
  #L32f8f8.  return v0 @kind object;
}
