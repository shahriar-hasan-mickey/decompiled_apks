record `gc.b0` @kind class @AccessFlag PUBLIC_FINAL {
  `gc.a` `gc.b0.a` @AccessFlag FINAL;
  `java.net.Proxy` `gc.b0.b` @AccessFlag FINAL;
  `java.net.InetSocketAddress` `gc.b0.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`gc.b0` v1 @kind this, `gc.a` v2 @kind object, `java.net.Proxy` v3 @kind object, `java.net.InetSocketAddress` v4 @kind object) @signature `Lgc/b0;.<init>:(Lgc/a;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L336dc0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L336dc6.  v0:= "address == null" @kind object;
  #L336dca.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L336dd0.  v0:= "proxy == null" @kind object;
  #L336dd4.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L336dda.  v0:= "inetSocketAddress == null" @kind object;
  #L336dde.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L336de4.  v1.`gc.b0.a` @type ^`gc.a` := v2 @kind object;
  #L336de8.  v1.`gc.b0.b` @type ^`java.net.Proxy` := v3 @kind object;
  #L336dec.  v1.`gc.b0.c` @type ^`java.net.InetSocketAddress` := v4 @kind object;
  #L336df0.  return @kind void;
}
procedure `gc.a` `a`(`gc.b0` v1 @kind this) @signature `Lgc/b0;.a:()Lgc/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336cec.  v0:= v1.`gc.b0.a` @type ^`gc.a` @kind object;
  #L336cf0.  return v0 @kind object;
}
procedure `java.net.Proxy` `b`(`gc.b0` v1 @kind this) @signature `Lgc/b0;.b:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336da8.  v0:= v1.`gc.b0.b` @type ^`java.net.Proxy` @kind object;
  #L336dac.  return v0 @kind object;
}
procedure `boolean` `c`(`gc.b0` v2 @kind this) @signature `Lgc/b0;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L336cb4.  v0:= v2.`gc.b0.a` @type ^`gc.a` @kind object;
  #L336cb8.  v0:= v0.`gc.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L336cbc.  if v0 == 0 then goto L336cd8;
  #L336cc0.  v0:= v2.`gc.b0.b` @type ^`java.net.Proxy` @kind object;
  #L336cc4.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L336cca.  v0:= temp @kind object;
  #L336ccc.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L336cd0.  if v0 != v1 then goto L336cd8;
  #L336cd4.  v0:= 1I;
  #L336cd6.  goto L336cda;
  #L336cd8.  v0:= 0I;
  #L336cda.  return v0;
}
procedure `java.net.InetSocketAddress` `d`(`gc.b0` v1 @kind this) @signature `Lgc/b0;.d:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336d90.  v0:= v1.`gc.b0.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L336d94.  return v0 @kind object;
}
procedure `boolean` `equals`(`gc.b0` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lgc/b0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L336c54.  v0:= instanceof @variable v3 @type ^`gc.b0` @kind boolean;
  #L336c58.  if v0 == 0 then goto L336ca0;
  #L336c5c.  v3:= (`gc.b0`) v3 @kind object;
  #L336c60.  v0:= v3.`gc.b0.a` @type ^`gc.a` @kind object;
  #L336c64.  v1:= v2.`gc.b0.a` @type ^`gc.a` @kind object;
  #L336c68.  call temp:= `equals`(v0, v1) @signature `Lgc/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L336c6e.  v0:= temp;
  #L336c70.  if v0 == 0 then goto L336ca0;
  #L336c74.  v0:= v3.`gc.b0.b` @type ^`java.net.Proxy` @kind object;
  #L336c78.  v1:= v2.`gc.b0.b` @type ^`java.net.Proxy` @kind object;
  #L336c7c.  call temp:= `equals`(v0, v1) @signature `Ljava/net/Proxy;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L336c82.  v0:= temp;
  #L336c84.  if v0 == 0 then goto L336ca0;
  #L336c88.  v3:= v3.`gc.b0.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L336c8c.  v0:= v2.`gc.b0.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L336c90.  call temp:= `equals`(v3, v0) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L336c96.  v3:= temp;
  #L336c98.  if v3 == 0 then goto L336ca0;
  #L336c9c.  v3:= 1I;
  #L336c9e.  goto L336ca2;
  #L336ca0.  v3:= 0I;
  #L336ca2.  return v3;
}
procedure `int` `hashCode`(`gc.b0` v2 @kind this) @signature `Lgc/b0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L336d04.  v0:= v2.`gc.b0.a` @type ^`gc.a` @kind object;
  #L336d08.  call temp:= `hashCode`(v0) @signature `Lgc/a;.hashCode:()I` @kind virtual;
  #L336d0e.  v0:= temp;
  #L336d10.  v1:= 527I;
  #L336d14.  v1:= v1 + v0 @kind int;
  #L336d16.  v1:= v1 * 31;
  #L336d1a.  v0:= v2.`gc.b0.b` @type ^`java.net.Proxy` @kind object;
  #L336d1e.  call temp:= `hashCode`(v0) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L336d24.  v0:= temp;
  #L336d26.  v1:= v1 + v0 @kind int;
  #L336d28.  v1:= v1 * 31;
  #L336d2c.  v0:= v2.`gc.b0.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L336d30.  call temp:= `hashCode`(v0) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L336d36.  v0:= temp;
  #L336d38.  v1:= v1 + v0 @kind int;
  #L336d3a.  return v1;
}
procedure `java.lang.String` `toString`(`gc.b0` v2 @kind this) @signature `Lgc/b0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L336d4c.  v0:= new `java.lang.StringBuilder`;
  #L336d50.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L336d56.  v1:= "Route{" @kind object;
  #L336d5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336d60.  v1:= v2.`gc.b0.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L336d64.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336d6a.  v1:= "}" @kind object;
  #L336d6e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336d74.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L336d7a.  v0:= temp @kind object;
  #L336d7c.  return v0 @kind object;
}
