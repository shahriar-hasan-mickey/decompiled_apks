record `gc.x` @kind class @AccessFlag PUBLIC_FINAL {
  `gc.r` `gc.x.a` @AccessFlag FINAL;
  `java.lang.String` `gc.x.b` @AccessFlag FINAL;
  `gc.q` `gc.x.c` @AccessFlag FINAL;
  `gc.y` `gc.x.d` @AccessFlag FINAL;
  `java.util.Map` `gc.x.e` @AccessFlag FINAL;
  `gc.c` `gc.x.f` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`gc.x` v1 @kind this, `gc.x$a` v2 @kind object) @signature `Lgc/x;.<init>:(Lgc/x$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3364b8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3364be.  v0:= v2.`gc.x$a.a` @type ^`gc.r` @kind object;
  #L3364c2.  v1.`gc.x.a` @type ^`gc.r` := v0 @kind object;
  #L3364c6.  v0:= v2.`gc.x$a.b` @type ^`java.lang.String` @kind object;
  #L3364ca.  v1.`gc.x.b` @type ^`java.lang.String` := v0 @kind object;
  #L3364ce.  v0:= v2.`gc.x$a.c` @type ^`gc.q$a` @kind object;
  #L3364d2.  call temp:= `d`(v0) @signature `Lgc/q$a;.d:()Lgc/q;` @kind virtual;
  #L3364d8.  v0:= temp @kind object;
  #L3364da.  v1.`gc.x.c` @type ^`gc.q` := v0 @kind object;
  #L3364de.  v0:= v2.`gc.x$a.d` @type ^`gc.y` @kind object;
  #L3364e2.  v1.`gc.x.d` @type ^`gc.y` := v0 @kind object;
  #L3364e6.  v2:= v2.`gc.x$a.e` @type ^`java.util.Map` @kind object;
  #L3364ea.  call temp:= `t`(v2) @signature `Lhc/c;.t:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L3364f0.  v2:= temp @kind object;
  #L3364f2.  v1.`gc.x.e` @type ^`java.util.Map` := v2 @kind object;
  #L3364f6.  return @kind void;
}
procedure `gc.y` `a`(`gc.x` v1 @kind this) @signature `Lgc/x;.a:()Lgc/y;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3363fc.  v0:= v1.`gc.x.d` @type ^`gc.y` @kind object;
  #L336400.  return v0 @kind object;
}
procedure `gc.c` `b`(`gc.x` v1 @kind this) @signature `Lgc/x;.b:()Lgc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336384.  v0:= v1.`gc.x.f` @type ^`gc.c` @kind object;
  #L336388.  if v0 == 0 then goto L33638e;
  #L33638c.  goto L33639e;
  #L33638e.  v0:= v1.`gc.x.c` @type ^`gc.q` @kind object;
  #L336392.  call temp:= `k`(v0) @signature `Lgc/c;.k:(Lgc/q;)Lgc/c;` @kind static;
  #L336398.  v0:= temp @kind object;
  #L33639a.  v1.`gc.x.f` @type ^`gc.c` := v0 @kind object;
  #L33639e.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`gc.x` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lgc/x;.c:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336414.  v0:= v1.`gc.x.c` @type ^`gc.q` @kind object;
  #L336418.  call temp:= `c`(v0, v2) @signature `Lgc/q;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L33641e.  v2:= temp @kind object;
  #L336420.  return v2 @kind object;
}
procedure `gc.q` `d`(`gc.x` v1 @kind this) @signature `Lgc/x;.d:()Lgc/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3363b0.  v0:= v1.`gc.x.c` @type ^`gc.q` @kind object;
  #L3363b4.  return v0 @kind object;
}
procedure `boolean` `e`(`gc.x` v1 @kind this) @signature `Lgc/x;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336364.  v0:= v1.`gc.x.a` @type ^`gc.r` @kind object;
  #L336368.  call temp:= `m`(v0) @signature `Lgc/r;.m:()Z` @kind virtual;
  #L33636e.  v0:= temp;
  #L336370.  return v0;
}
procedure `java.lang.String` `f`(`gc.x` v1 @kind this) @signature `Lgc/x;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336434.  v0:= v1.`gc.x.b` @type ^`java.lang.String` @kind object;
  #L336438.  return v0 @kind object;
}
procedure `gc.x$a` `g`(`gc.x` v1 @kind this) @signature `Lgc/x;.g:()Lgc/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3363e0.  v0:= new `gc.x$a`;
  #L3363e4.  call `<init>`(v0, v1) @signature `Lgc/x$a;.<init>:(Lgc/x;)V` @kind direct;
  #L3363ea.  return v0 @kind object;
}
procedure `gc.r` `h`(`gc.x` v1 @kind this) @signature `Lgc/x;.h:()Lgc/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3363c8.  v0:= v1.`gc.x.a` @type ^`gc.r` @kind object;
  #L3363cc.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`gc.x` v2 @kind this) @signature `Lgc/x;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33644c.  v0:= new `java.lang.StringBuilder`;
  #L336450.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L336456.  v1:= "Request{method=" @kind object;
  #L33645a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336460.  v1:= v2.`gc.x.b` @type ^`java.lang.String` @kind object;
  #L336464.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33646a.  v1:= ", url=" @kind object;
  #L33646e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336474.  v1:= v2.`gc.x.a` @type ^`gc.r` @kind object;
  #L336478.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33647e.  v1:= ", tags=" @kind object;
  #L336482.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336488.  v1:= v2.`gc.x.e` @type ^`java.util.Map` @kind object;
  #L33648c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336492.  v1:= 125I;
  #L336496.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L33649c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3364a2.  v0:= temp @kind object;
  #L3364a4.  return v0 @kind object;
}
