record `gc.f` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `gc.f.a` @AccessFlag PRIVATE_FINAL;
  `pc.c` `gc.f.b` @AccessFlag PRIVATE_FINAL;
}
global `gc.f` `@@gc.f.c` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lgc/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L330580.  v0:= new `gc.f$a`;
  #L330584.  call `<init>`(v0) @signature `Lgc/f$a;.<init>:()V` @kind direct;
  #L33058a.  call temp:= `a`(v0) @signature `Lgc/f$a;.a:()Lgc/f;` @kind virtual;
  #L330590.  v0:= temp @kind object;
  #L330592.  `@@gc.f.c` @type ^`gc.f` := v0 @kind object;
  #L330596.  return @kind void;
}
procedure `void` `<init>`(`gc.f` v0 @kind this, `java.util.Set` v1 @kind object, `pc.c` v2 @kind object) @signature `Lgc/f;.<init>:(Ljava/util/Set;Lpc/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3305a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3305ae.  v0.`gc.f.a` @type ^`java.util.Set` := v1 @kind object;
  #L3305b2.  v0.`gc.f.b` @type ^`pc.c` := v2 @kind object;
  #L3305b6.  return @kind void;
}
procedure `java.lang.String` `c`(`java.security.cert.Certificate` v2 @kind object) @signature `Lgc/f;.c:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L330450.  v0:= instanceof @variable v2 @type ^`java.security.cert.X509Certificate` @kind boolean;
  #L330454.  if v0 == 0 then goto L330490;
  #L330458.  v0:= new `java.lang.StringBuilder`;
  #L33045c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L330462.  v1:= "sha256/" @kind object;
  #L330466.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33046c.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L330470.  call temp:= `e`(v2) @signature `Lgc/f;.e:(Ljava/security/cert/X509Certificate;)Lqc/f;` @kind static;
  #L330476.  v2:= temp @kind object;
  #L330478.  call temp:= `c`(v2) @signature `Lqc/f;.c:()Ljava/lang/String;` @kind virtual;
  #L33047e.  v2:= temp @kind object;
  #L330480.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L330486.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33048c.  v2:= temp @kind object;
  #L33048e.  return v2 @kind object;
  #L330490.  v2:= new `java.lang.IllegalArgumentException`;
  #L330494.  v0:= "Certificate pinning requires X509 certificates" @kind object;
  #L330498.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33049e.  throw v2;
}
procedure `qc.f` `d`(`java.security.cert.X509Certificate` v0 @kind object) @signature `Lgc/f;.d:(Ljava/security/cert/X509Certificate;)Lqc/f;` @AccessFlag STATIC {
    temp;

  #L330518.  call temp:= `getPublicKey`(v0) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L33051e.  v0:= temp @kind object;
  #L330520.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L330526.  v0:= temp @kind object;
  #L330528.  call temp:= `s`(v0) @signature `Lqc/f;.s:([B)Lqc/f;` @kind static;
  #L33052e.  v0:= temp @kind object;
  #L330530.  call temp:= `x`(v0) @signature `Lqc/f;.x:()Lqc/f;` @kind virtual;
  #L330536.  v0:= temp @kind object;
  #L330538.  return v0 @kind object;
}
procedure `qc.f` `e`(`java.security.cert.X509Certificate` v0 @kind object) @signature `Lgc/f;.e:(Ljava/security/cert/X509Certificate;)Lqc/f;` @AccessFlag STATIC {
    temp;

  #L33054c.  call temp:= `getPublicKey`(v0) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L330552.  v0:= temp @kind object;
  #L330554.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L33055a.  v0:= temp @kind object;
  #L33055c.  call temp:= `s`(v0) @signature `Lqc/f;.s:([B)Lqc/f;` @kind static;
  #L330562.  v0:= temp @kind object;
  #L330564.  call temp:= `B`(v0) @signature `Lqc/f;.B:()Lqc/f;` @kind virtual;
  #L33056a.  v0:= temp @kind object;
  #L33056c.  return v0 @kind object;
}
procedure `void` `a`(`gc.f` v12 @kind this, `java.lang.String` v13 @kind object, `java.util.List` v14 @kind object) @signature `Lgc/f;.a:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3305c8.  call temp:= `b`(v12, v13) @signature `Lgc/f;.b:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L3305ce.  v0:= temp @kind object;
  #L3305d0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3305d6.  v1:= temp;
  #L3305d8.  if v1 == 0 then goto L3305de;
  #L3305dc.  return @kind void;
  #L3305de.  v1:= v12.`gc.f.b` @type ^`pc.c` @kind object;
  #L3305e2.  if v1 == 0 then goto L3305ee;
  #L3305e6.  call temp:= `a`(v1, v14, v13) @signature `Lpc/c;.a:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L3305ec.  v14:= temp @kind object;
  #L3305ee.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3305f4.  v1:= temp;
  #L3305f6.  v2:= 0I;
  #L3305f8.  v3:= 0I;
  #L3305fa.  if v3 >= v1 then goto L3306ca;
  #L3305fe.  call temp:= `get`(v14, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L330604.  v4:= temp @kind object;
  #L330606.  v4:= (`java.security.cert.X509Certificate`) v4 @kind object;
  #L33060a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L330610.  v5:= temp;
  #L330612.  v6:= 0I;
  #L330614.  v7:= v6 @kind object;
  #L330616.  v8:= 0I;
  #L330618.  if v8 >= v5 then goto L3306c4;
  #L33061c.  call temp:= `get`(v0, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L330622.  v9:= temp @kind object;
  #L330624.  v9:= (`gc.f$b`) v9 @kind object;
  #L330628.  v10:= v9.`gc.f$b.c` @type ^`java.lang.String` @kind object;
  #L33062c.  v11:= "sha256/" @kind object;
  #L330630.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L330636.  v10:= temp;
  #L330638.  if v10 == 0 then goto L33065a;
  #L33063c.  if v6 != 0 then goto L330648;
  #L330640.  call temp:= `e`(v4) @signature `Lgc/f;.e:(Ljava/security/cert/X509Certificate;)Lqc/f;` @kind static;
  #L330646.  v6:= temp @kind object;
  #L330648.  v9:= v9.`gc.f$b.d` @type ^`qc.f` @kind object;
  #L33064c.  call temp:= `equals`(v9, v6) @signature `Lqc/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L330652.  v9:= temp;
  #L330654.  if v9 == 0 then goto L33068c;
  #L330658.  return @kind void;
  #L33065a.  v10:= v9.`gc.f$b.c` @type ^`java.lang.String` @kind object;
  #L33065e.  v11:= "sha1/" @kind object;
  #L330662.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L330668.  v10:= temp;
  #L33066a.  if v10 == 0 then goto L330692;
  #L33066e.  if v7 != 0 then goto L33067a;
  #L330672.  call temp:= `d`(v4) @signature `Lgc/f;.d:(Ljava/security/cert/X509Certificate;)Lqc/f;` @kind static;
  #L330678.  v7:= temp @kind object;
  #L33067a.  v9:= v9.`gc.f$b.d` @type ^`qc.f` @kind object;
  #L33067e.  call temp:= `equals`(v9, v7) @signature `Lqc/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L330684.  v9:= temp;
  #L330686.  if v9 == 0 then goto L33068c;
  #L33068a.  return @kind void;
  #L33068c.  v8:= v8 + 1;
  #L330690.  goto L330618;
  #L330692.  v13:= new `java.lang.AssertionError`;
  #L330696.  v14:= new `java.lang.StringBuilder`;
  #L33069a.  call `<init>`(v14) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3306a0.  v0:= "unsupported hashAlgorithm: " @kind object;
  #L3306a4.  call temp:= `append`(v14, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3306aa.  v0:= v9.`gc.f$b.c` @type ^`java.lang.String` @kind object;
  #L3306ae.  call temp:= `append`(v14, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3306b4.  call temp:= `toString`(v14) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3306ba.  v14:= temp @kind object;
  #L3306bc.  call `<init>`(v13, v14) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3306c2.  throw v13;
  #L3306c4.  v3:= v3 + 1;
  #L3306c8.  goto L3305fa;
  #L3306ca.  v1:= new `java.lang.StringBuilder`;
  #L3306ce.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3306d4.  v3:= "Certificate pinning failure!" @kind object;
  #L3306d8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3306de.  v3:= "\n  Peer certificate chain:" @kind object;
  #L3306e2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3306e8.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3306ee.  v3:= temp;
  #L3306f0.  v4:= 0I;
  #L3306f2.  v5:= "\n    " @kind object;
  #L3306f6.  if v4 >= v3 then goto L330740;
  #L3306fa.  call temp:= `get`(v14, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L330700.  v6:= temp @kind object;
  #L330702.  v6:= (`java.security.cert.X509Certificate`) v6 @kind object;
  #L330706.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33070c.  call temp:= `c`(v6) @signature `Lgc/f;.c:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L330712.  v5:= temp @kind object;
  #L330714.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33071a.  v5:= ": " @kind object;
  #L33071e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L330724.  call temp:= `getSubjectDN`(v6) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L33072a.  v5:= temp @kind object;
  #L33072c.  call temp:= `getName`(v5) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L330732.  v5:= temp @kind object;
  #L330734.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33073a.  v4:= v4 + 1;
  #L33073e.  goto L3306f2;
  #L330740.  v14:= "\n  Pinned certificates for " @kind object;
  #L330744.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33074a.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L330750.  v13:= ":" @kind object;
  #L330754.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33075a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L330760.  v13:= temp;
  #L330762.  if v2 >= v13 then goto L330784;
  #L330766.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33076c.  v14:= temp @kind object;
  #L33076e.  v14:= (`gc.f$b`) v14 @kind object;
  #L330772.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L330778.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33077e.  v2:= v2 + 1;
  #L330782.  goto L330762;
  #L330784.  v13:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L330788.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33078e.  v14:= temp @kind object;
  #L330790.  call `<init>`(v13, v14) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L330796.  throw v13;
}
procedure `java.util.List` `b`(`gc.f` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lgc/f;.b:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3304b0.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3304b6.  v0:= temp @kind object;
  #L3304b8.  v1:= v4.`gc.f.a` @type ^`java.util.Set` @kind object;
  #L3304bc.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3304c2.  v1:= temp @kind object;
  #L3304c4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3304ca.  v2:= temp;
  #L3304cc.  if v2 == 0 then goto L330506;
  #L3304d0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3304d6.  v2:= temp @kind object;
  #L3304d8.  v2:= (`gc.f$b`) v2 @kind object;
  #L3304dc.  call temp:= `a`(v2, v5) @signature `Lgc/f$b;.a:(Ljava/lang/String;)Z` @kind virtual;
  #L3304e2.  v3:= temp;
  #L3304e4.  if v3 == 0 then goto L3304c4;
  #L3304e8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3304ee.  v3:= temp;
  #L3304f0.  if v3 == 0 then goto L3304fe;
  #L3304f4.  v0:= new `java.util.ArrayList`;
  #L3304f8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3304fe.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L330504.  goto L3304c4;
  #L330506.  return v0 @kind object;
}
procedure `boolean` `equals`(`gc.f` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lgc/f;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L330390.  v0:= 1I;
  #L330392.  if v4 != v3 then goto L330398;
  #L330396.  return v0;
  #L330398.  v1:= instanceof @variable v4 @type ^`gc.f` @kind boolean;
  #L33039c.  if v1 == 0 then goto L3303ce;
  #L3303a0.  v1:= v3.`gc.f.b` @type ^`pc.c` @kind object;
  #L3303a4.  v4:= (`gc.f`) v4 @kind object;
  #L3303a8.  v2:= v4.`gc.f.b` @type ^`pc.c` @kind object;
  #L3303ac.  call temp:= `o`(v1, v2) @signature `Lhc/c;.o:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3303b2.  v1:= temp;
  #L3303b4.  if v1 == 0 then goto L3303ce;
  #L3303b8.  v1:= v3.`gc.f.a` @type ^`java.util.Set` @kind object;
  #L3303bc.  v4:= v4.`gc.f.a` @type ^`java.util.Set` @kind object;
  #L3303c0.  call temp:= `equals`(v1, v4) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3303c6.  v4:= temp;
  #L3303c8.  if v4 == 0 then goto L3303ce;
  #L3303cc.  goto L3303d0;
  #L3303ce.  v0:= 0I;
  #L3303d0.  return v0;
}
procedure `gc.f` `f`(`gc.f` v2 @kind this, `pc.c` v3 @kind object) @signature `Lgc/f;.f:(Lpc/c;)Lgc/f;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3303e4.  v0:= v2.`gc.f.b` @type ^`pc.c` @kind object;
  #L3303e8.  call temp:= `o`(v0, v3) @signature `Lhc/c;.o:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3303ee.  v0:= temp;
  #L3303f0.  if v0 == 0 then goto L3303f8;
  #L3303f4.  v0:= v2 @kind object;
  #L3303f6.  goto L330406;
  #L3303f8.  v0:= new `gc.f`;
  #L3303fc.  v1:= v2.`gc.f.a` @type ^`java.util.Set` @kind object;
  #L330400.  call `<init>`(v0, v1, v3) @signature `Lgc/f;.<init>:(Ljava/util/Set;Lpc/c;)V` @kind direct;
  #L330406.  return v0 @kind object;
}
procedure `int` `hashCode`(`gc.f` v2 @kind this) @signature `Lgc/f;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L330418.  v0:= v2.`gc.f.b` @type ^`pc.c` @kind object;
  #L33041c.  if v0 == 0 then goto L33042a;
  #L330420.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L330426.  v0:= temp;
  #L330428.  goto L33042c;
  #L33042a.  v0:= 0I;
  #L33042c.  v0:= v0 * 31;
  #L330430.  v1:= v2.`gc.f.a` @type ^`java.util.Set` @kind object;
  #L330434.  call temp:= `hashCode`(v1) @signature `Ljava/util/Set;.hashCode:()I` @kind interface;
  #L33043a.  v1:= temp;
  #L33043c.  v0:= v0 + v1 @kind int;
  #L33043e.  return v0;
}
