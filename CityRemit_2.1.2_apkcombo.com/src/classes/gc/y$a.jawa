record `gc.y$a` @kind class @AccessFlag  extends `gc.y` @kind class {
  `gc.t` `gc.y$a.a` @AccessFlag FINAL_SYNTHETIC;
  `int` `gc.y$a.b` @AccessFlag FINAL_SYNTHETIC;
  `byte`[] `gc.y$a.c` @AccessFlag FINAL_SYNTHETIC;
  `int` `gc.y$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`gc.y$a` v0 @kind this, `gc.t` v1 @kind object, `int` v2 , `byte`[] v3 @kind object, `int` v4 ) @signature `Lgc/y$a;.<init>:(Lgc/t;I[BI)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3362b0.  v0.`gc.y$a.b` @type ^`int` := v2;
  #L3362b4.  v0.`gc.y$a.c` @type ^`byte`[] := v3 @kind object;
  #L3362b8.  v0.`gc.y$a.d` @type ^`int` := v4;
  #L3362bc.  call `<init>`(v0) @signature `Lgc/y;.<init>:()V` @kind direct;
  #L3362c2.  return @kind void;
}
procedure `long` `a`(`gc.y$a` v2 @kind this) @signature `Lgc/y$a;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L336298.  v0:= v2.`gc.y$a.b` @type ^`int`;
  #L33629c.  v0:= (`long`) v0 @kind i2l;
  #L33629e.  return v0 @kind wide;
}
procedure `gc.t` `b`(`gc.y$a` v1 @kind this) @signature `Lgc/y$a;.b:()Lgc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336280.  v0:= v1.`gc.y$a.a` @type ^`gc.t` @kind object;
  #L336284.  return v0 @kind object;
}
procedure `void` `e`(`gc.y$a` v3 @kind this, `qc.d` v4 @kind object) @signature `Lgc/y$a;.e:(Lqc/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3362d4.  v0:= v3.`gc.y$a.c` @type ^`byte`[] @kind object;
  #L3362d8.  v1:= v3.`gc.y$a.d` @type ^`int`;
  #L3362dc.  v2:= v3.`gc.y$a.b` @type ^`int`;
  #L3362e0.  call temp:= `g`(v4, v0, v1, v2) @signature `Lqc/d;.g:([BII)Lqc/d;` @kind interface;
  #L3362e6.  return @kind void;
}
