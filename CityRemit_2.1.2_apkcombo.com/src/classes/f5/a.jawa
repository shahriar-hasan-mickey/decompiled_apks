record `f5.a` @kind class @AccessFlag PUBLIC extends `k5.q` @kind class {
}
procedure `void` `<init>`(`f5.a` v3 @kind this, `int` v4 ) @signature `Lf5/a;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L307208.  v0:= 2I;
  #L30720a.  v0:= new `java.lang.Object`[v0];
  #L30720e.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L307214.  v1:= temp @kind object;
  #L307216.  v2:= 0I;
  #L307218.  v0[v2]:= v1 @kind object;
  #L30721c.  call temp:= `a`(v4) @signature `Lg5/a;.a:(I)Ljava/lang/String;` @kind static;
  #L307222.  v1:= temp @kind object;
  #L307224.  v2:= 1I;
  #L307226.  v0[v2]:= v1 @kind object;
  #L30722a.  v1:= "Install Error(%d): %s" @kind object;
  #L30722e.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L307234.  v0:= temp @kind object;
  #L307236.  call `<init>`(v3, v0) @signature `Lk5/q;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30723c.  if v4 == 0 then goto L307242;
  #L307240.  return @kind void;
  #L307242.  v4:= new `java.lang.IllegalArgumentException`;
  #L307246.  v0:= "errorCode should not be 0." @kind object;
  #L30724a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L307250.  throw v4;
}
