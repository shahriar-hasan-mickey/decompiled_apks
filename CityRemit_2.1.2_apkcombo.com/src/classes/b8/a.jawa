record `b8.a` @kind class @AccessFlag FINAL extends `b8.f` @kind class {
  `java.lang.String` `b8.a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `b8.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`b8.a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lb8/a;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1f2640.  call `<init>`(v1) @signature `Lb8/f;.<init>:()V` @kind direct;
  #L1f2646.  v0:= "Null libraryName" @kind object;
  #L1f264a.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1f2650.  v1.`b8.a.a` @type ^`java.lang.String` := v2 @kind object;
  #L1f2654.  v2:= "Null version" @kind object;
  #L1f2658.  call temp:= `requireNonNull`(v3, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1f265e.  v1.`b8.a.b` @type ^`java.lang.String` := v3 @kind object;
  #L1f2662.  return @kind void;
}
procedure `java.lang.String` `b`(`b8.a` v1 @kind this) @signature `Lb8/a;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f25b8.  v0:= v1.`b8.a.a` @type ^`java.lang.String` @kind object;
  #L1f25bc.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`b8.a` v1 @kind this) @signature `Lb8/a;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f25d0.  v0:= v1.`b8.a.b` @type ^`java.lang.String` @kind object;
  #L1f25d4.  return v0 @kind object;
}
procedure `boolean` `equals`(`b8.a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lb8/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f2520.  v0:= 1I;
  #L1f2522.  if v5 != v4 then goto L1f2528;
  #L1f2526.  return v0;
  #L1f2528.  v1:= instanceof @variable v5 @type ^`b8.f` @kind boolean;
  #L1f252c.  v2:= 0I;
  #L1f252e.  if v1 == 0 then goto L1f256c;
  #L1f2532.  v5:= (`b8.f`) v5 @kind object;
  #L1f2536.  v1:= v4.`b8.a.a` @type ^`java.lang.String` @kind object;
  #L1f253a.  call temp:= `b`(v5) @signature `Lb8/f;.b:()Ljava/lang/String;` @kind virtual;
  #L1f2540.  v3:= temp @kind object;
  #L1f2542.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f2548.  v1:= temp;
  #L1f254a.  if v1 == 0 then goto L1f2568;
  #L1f254e.  v1:= v4.`b8.a.b` @type ^`java.lang.String` @kind object;
  #L1f2552.  call temp:= `c`(v5) @signature `Lb8/f;.c:()Ljava/lang/String;` @kind virtual;
  #L1f2558.  v5:= temp @kind object;
  #L1f255a.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f2560.  v5:= temp;
  #L1f2562.  if v5 == 0 then goto L1f2568;
  #L1f2566.  goto L1f256a;
  #L1f2568.  v0:= 0I;
  #L1f256a.  return v0;
  #L1f256c.  return v2;
}
procedure `int` `hashCode`(`b8.a` v2 @kind this) @signature `Lb8/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f2580.  v0:= v2.`b8.a.a` @type ^`java.lang.String` @kind object;
  #L1f2584.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1f258a.  v0:= temp;
  #L1f258c.  v1:= 1000003I;
  #L1f2592.  v0:= v0 ^~ v1 @kind int;
  #L1f2594.  v0:= v0 * v1 @kind int;
  #L1f2598.  v1:= v2.`b8.a.b` @type ^`java.lang.String` @kind object;
  #L1f259c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1f25a2.  v1:= temp;
  #L1f25a4.  v0:= v0 ^~ v1 @kind int;
  #L1f25a6.  return v0;
}
procedure `java.lang.String` `toString`(`b8.a` v2 @kind this) @signature `Lb8/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f25e8.  v0:= new `java.lang.StringBuilder`;
  #L1f25ec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f25f2.  v1:= "LibraryVersion{libraryName=" @kind object;
  #L1f25f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f25fc.  v1:= v2.`b8.a.a` @type ^`java.lang.String` @kind object;
  #L1f2600.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f2606.  v1:= ", version=" @kind object;
  #L1f260a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f2610.  v1:= v2.`b8.a.b` @type ^`java.lang.String` @kind object;
  #L1f2614.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f261a.  v1:= "}" @kind object;
  #L1f261e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f2624.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f262a.  v0:= temp @kind object;
  #L1f262c.  return v0 @kind object;
}
