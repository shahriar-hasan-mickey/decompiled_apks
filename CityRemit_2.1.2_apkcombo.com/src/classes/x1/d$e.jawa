record `x1.d$e` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `x1.d$e.a` @AccessFlag PRIVATE;
  `int` `x1.d$e.b` @AccessFlag PRIVATE;
  `int` `x1.d$e.c` @AccessFlag PRIVATE;
  `int` `x1.d$e.d` @AccessFlag PRIVATE;
  `int` `x1.d$e.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`x1.d$e` v2 @kind this) @signature `Lx1/d$e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4d0870.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d0876.  v0:= 0I;
  #L4d0878.  v2.`x1.d$e.a` @type ^`int` := v0;
  #L4d087c.  v2.`x1.d$e.b` @type ^`int` := v0;
  #L4d0880.  v1:= 1I;
  #L4d0882.  v2.`x1.d$e.c` @type ^`int` := v1;
  #L4d0886.  v2.`x1.d$e.d` @type ^`int` := v1;
  #L4d088a.  v2.`x1.d$e.e` @type ^`int` := v0;
  #L4d088e.  return @kind void;
}
procedure `x1.d` `a`(`x1.d$e` v8 @kind this) @signature `Lx1/d$e;.a:()Lx1/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4d08a0.  v7:= new `x1.d`;
  #L4d08a4.  v1:= v8.`x1.d$e.a` @type ^`int`;
  #L4d08a8.  v2:= v8.`x1.d$e.b` @type ^`int`;
  #L4d08ac.  v3:= v8.`x1.d$e.c` @type ^`int`;
  #L4d08b0.  v4:= v8.`x1.d$e.d` @type ^`int`;
  #L4d08b4.  v5:= v8.`x1.d$e.e` @type ^`int`;
  #L4d08b8.  v6:= 0I;
  #L4d08ba.  v0:= v7 @kind object;
  #L4d08bc.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lx1/d;.<init>:(IIIIILx1/d$a;)V` @kind direct;
  #L4d08c2.  return v7 @kind object;
}
procedure `x1.d$e` `b`(`x1.d$e` v0 @kind this, `int` v1 ) @signature `Lx1/d$e;.b:(I)Lx1/d$e;` @AccessFlag PUBLIC {
    temp;

  #L4d08d4.  v0.`x1.d$e.a` @type ^`int` := v1;
  #L4d08d8.  return v0 @kind object;
}
