record `x1.v` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `x1.v.a` @AccessFlag PUBLIC_FINAL;
  `float` `x1.v.b` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`x1.v` v0 @kind this, `int` v1 , `float` v2 ) @signature `Lx1/v;.<init>:(IF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d2860.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d2866.  v0.`x1.v.a` @type ^`int` := v1;
  #L4d286a.  v0.`x1.v.b` @type ^`float` := v2;
  #L4d286e.  return @kind void;
}
procedure `boolean` `equals`(`x1.v` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lx1/v;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4d27d4.  v0:= 1I;
  #L4d27d6.  if v4 != v5 then goto L4d27dc;
  #L4d27da.  return v0;
  #L4d27dc.  v1:= 0I;
  #L4d27de.  if v5 == 0 then goto L4d281e;
  #L4d27e2.  v2:= constclass @type ^`x1.v` @kind object;
  #L4d27e6.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4d27ec.  v3:= temp @kind object;
  #L4d27ee.  if v2 == v3 then goto L4d27f4;
  #L4d27f2.  goto L4d281e;
  #L4d27f4.  v5:= (`x1.v`) v5 @kind object;
  #L4d27f8.  v2:= v4.`x1.v.a` @type ^`int`;
  #L4d27fc.  v3:= v5.`x1.v.a` @type ^`int`;
  #L4d2800.  if v2 != v3 then goto L4d281a;
  #L4d2804.  v5:= v5.`x1.v.b` @type ^`float`;
  #L4d2808.  v2:= v4.`x1.v.b` @type ^`float`;
  #L4d280c.  call temp:= `compare`(v5, v2) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L4d2812.  v5:= temp;
  #L4d2814.  if v5 != 0 then goto L4d281a;
  #L4d2818.  goto L4d281c;
  #L4d281a.  v0:= 0I;
  #L4d281c.  return v0;
  #L4d281e.  return v1;
}
procedure `int` `hashCode`(`x1.v` v2 @kind this) @signature `Lx1/v;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d2830.  v0:= v2.`x1.v.a` @type ^`int`;
  #L4d2834.  v1:= 527I;
  #L4d2838.  v1:= v1 + v0 @kind int;
  #L4d283a.  v1:= v1 * 31;
  #L4d283e.  v0:= v2.`x1.v.b` @type ^`float`;
  #L4d2842.  call temp:= `floatToIntBits`(v0) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L4d2848.  v0:= temp;
  #L4d284a.  v1:= v1 + v0 @kind int;
  #L4d284c.  return v1;
}
