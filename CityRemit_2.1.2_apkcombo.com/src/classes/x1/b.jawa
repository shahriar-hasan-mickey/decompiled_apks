record `x1.b` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int`[] `@@x1.b.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@x1.b.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@x1.b.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@x1.b.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@x1.b.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@x1.b.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx1/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4cfd34.  v0:= 4I;
  #L4cfd36.  v0:= new `int`[v0];
  #L4cfd3a.  goto L4cfd98;
  #L4cfd40.  `@@x1.b.a` @type ^`int`[] := v0 @kind object;
  #L4cfd44.  v0:= 3I;
  #L4cfd46.  v1:= new `int`[v0];
  #L4cfd4a.  goto L4cfdb0;
  #L4cfd50.  `@@x1.b.b` @type ^`int`[] := v1 @kind object;
  #L4cfd54.  v0:= new `int`[v0];
  #L4cfd58.  goto L4cfdc4;
  #L4cfd5e.  `@@x1.b.c` @type ^`int`[] := v0 @kind object;
  #L4cfd62.  v0:= 8I;
  #L4cfd66.  v0:= new `int`[v0];
  #L4cfd6a.  goto L4cfdd8;
  #L4cfd70.  `@@x1.b.d` @type ^`int`[] := v0 @kind object;
  #L4cfd74.  v0:= 19I;
  #L4cfd78.  v1:= new `int`[v0];
  #L4cfd7c.  goto L4cfe00;
  #L4cfd82.  `@@x1.b.e` @type ^`int`[] := v1 @kind object;
  #L4cfd86.  v0:= new `int`[v0];
  #L4cfd8a.  goto L4cfe54;
  #L4cfd90.  `@@x1.b.f` @type ^`int`[] := v0 @kind object;
  #L4cfd94.  return @kind void;
  #L4cfd96.  
  #L4cfd98.  v0:= (1I, 2I, 3I, 6I) @kind object;
  #L4cfdaf.  goto L4cfd40;
  #L4cfdb0.  v1:= (48000I, 44100I, 32000I) @kind object;
  #L4cfdc3.  goto L4cfd50;
  #L4cfdc4.  v0:= (24000I, 22050I, 16000I) @kind object;
  #L4cfdd7.  goto L4cfd5e;
  #L4cfdd8.  v0:= (2I, 1I, 2I, 3I, 3I, 4I, 4I, 5I) @kind object;
  #L4cfdff.  goto L4cfd70;
  #L4cfe00.  v1:= (32I, 40I, 48I, 56I, 64I, 80I, 96I, 112I, 128I, 160I, 192I, 224I, 256I, 320I, 384I, 448I, 512I, 576I, 640I) @kind object;
  #L4cfe53.  goto L4cfd82;
  #L4cfe54.  v0:= (69I, 87I, 104I, 121I, 139I, 174I, 208I, 243I, 278I, 348I, 417I, 487I, 557I, 696I, 835I, 975I, 1114I, 1253I, 1393I) @kind object;
  #L4cfea7.  goto L4cfd90;
}
procedure `int` `a`(`java.nio.ByteBuffer` v5 @kind object) @signature `Lx1/b;.a:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4cf8f8.  call temp:= `position`(v5) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L4cf8fe.  v0:= temp;
  #L4cf900.  call temp:= `limit`(v5) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L4cf906.  v1:= temp;
  #L4cf908.  v1:= v1 + -10;
  #L4cf90c.  v2:= v0;
  #L4cf90e.  if v2 > v1 then goto L4cf936;
  #L4cf912.  v3:= v2 + 4;
  #L4cf916.  call temp:= `I`(v5, v3) @signature `Ls3/l0;.I:(Ljava/nio/ByteBuffer;I)I` @kind static;
  #L4cf91c.  v3:= temp;
  #L4cf91e.  v3:= v3 ^& -2;
  #L4cf922.  v4:= -126718022I;
  #L4cf928.  if v3 != v4 then goto L4cf930;
  #L4cf92c.  v2:= v2 - v0 @kind int;
  #L4cf92e.  return v2;
  #L4cf930.  v2:= v2 + 1;
  #L4cf934.  goto L4cf90e;
  #L4cf936.  v5:= -1I;
  #L4cf938.  return v5;
}
procedure `int` `b`(`int` v4 , `int` v5 ) @signature `Lx1/b;.b:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4cf94c.  v0:= v5 / 2;
  #L4cf950.  if v4 < 0 then goto L4cf9a8;
  #L4cf954.  v1:= `@@x1.b.b` @type ^`int`[] @kind object;
  #L4cf958.  v2:= length @variable v1;
  #L4cf95a.  if v4 >= v2 then goto L4cf9a8;
  #L4cf95e.  if v5 < 0 then goto L4cf9a8;
  #L4cf962.  v2:= `@@x1.b.f` @type ^`int`[] @kind object;
  #L4cf966.  v3:= length @variable v2;
  #L4cf968.  if v0 < v3 then goto L4cf96e;
  #L4cf96c.  goto L4cf9a8;
  #L4cf96e.  v4:= v1[v4];
  #L4cf972.  v1:= 44100I;
  #L4cf978.  if v4 != v1 then goto L4cf98c;
  #L4cf97c.  v4:= v2[v0];
  #L4cf980.  v5:= v5 %% 2;
  #L4cf984.  v4:= v4 + v5 @kind int;
  #L4cf986.  v4:= v4 * 2;
  #L4cf98a.  return v4;
  #L4cf98c.  v5:= `@@x1.b.e` @type ^`int`[] @kind object;
  #L4cf990.  v5:= v5[v0];
  #L4cf994.  v0:= 32000I;
  #L4cf998.  if v4 != v0 then goto L4cf9a2;
  #L4cf99c.  v5:= v5 * 6;
  #L4cf9a0.  return v5;
  #L4cf9a2.  v5:= v5 * 4;
  #L4cf9a6.  return v5;
  #L4cf9a8.  v4:= -1I;
  #L4cf9aa.  return v4;
}
procedure `v1.j1` `c`(`s3.z` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `z1.m` v6 @kind object) @signature `Lx1/b;.c:(Ls3/z;Ljava/lang/String;Ljava/lang/String;Lz1/m;)Lv1/j1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4cfbbc.  call temp:= `C`(v3) @signature `Ls3/z;.C:()I` @kind virtual;
  #L4cfbc2.  v0:= temp;
  #L4cfbc4.  v0:= v0 ^& 192;
  #L4cfbc8.  v0:= v0 ^> 6;
  #L4cfbcc.  v1:= `@@x1.b.b` @type ^`int`[] @kind object;
  #L4cfbd0.  v0:= v1[v0];
  #L4cfbd4.  call temp:= `C`(v3) @signature `Ls3/z;.C:()I` @kind virtual;
  #L4cfbda.  v3:= temp;
  #L4cfbdc.  v1:= `@@x1.b.d` @type ^`int`[] @kind object;
  #L4cfbe0.  v2:= v3 ^& 56;
  #L4cfbe4.  v2:= v2 ^> 3;
  #L4cfbe8.  v1:= v1[v2];
  #L4cfbec.  v3:= v3 ^& 4;
  #L4cfbf0.  if v3 == 0 then goto L4cfbf8;
  #L4cfbf4.  v1:= v1 + 1;
  #L4cfbf8.  v3:= new `v1.j1$b`;
  #L4cfbfc.  call `<init>`(v3) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L4cfc02.  call temp:= `S`(v3, v4) @signature `Lv1/j1$b;.S:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L4cfc08.  v3:= temp @kind object;
  #L4cfc0a.  v4:= "audio/ac3" @kind object;
  #L4cfc0e.  call temp:= `e0`(v3, v4) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L4cfc14.  v3:= temp @kind object;
  #L4cfc16.  call temp:= `H`(v3, v1) @signature `Lv1/j1$b;.H:(I)Lv1/j1$b;` @kind virtual;
  #L4cfc1c.  v3:= temp @kind object;
  #L4cfc1e.  call temp:= `f0`(v3, v0) @signature `Lv1/j1$b;.f0:(I)Lv1/j1$b;` @kind virtual;
  #L4cfc24.  v3:= temp @kind object;
  #L4cfc26.  call temp:= `M`(v3, v6) @signature `Lv1/j1$b;.M:(Lz1/m;)Lv1/j1$b;` @kind virtual;
  #L4cfc2c.  v3:= temp @kind object;
  #L4cfc2e.  call temp:= `V`(v3, v5) @signature `Lv1/j1$b;.V:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L4cfc34.  v3:= temp @kind object;
  #L4cfc36.  call temp:= `E`(v3) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L4cfc3c.  v3:= temp @kind object;
  #L4cfc3e.  return v3 @kind object;
}
procedure `int` `d`(`java.nio.ByteBuffer` v3 @kind object) @signature `Lx1/b;.d:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4cf9bc.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L4cf9c2.  v0:= temp;
  #L4cf9c4.  v0:= v0 + 5;
  #L4cf9c8.  call temp:= `get`(v3, v0) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L4cf9ce.  v0:= temp;
  #L4cf9d0.  v0:= v0 ^& 248;
  #L4cf9d4.  v1:= 3I;
  #L4cf9d6.  v0:= v0 ^> v1 @kind int;
  #L4cf9d8.  v2:= 10I;
  #L4cf9dc.  if v0 <= v2 then goto L4cf9e4;
  #L4cf9e0.  v0:= 1I;
  #L4cf9e2.  goto L4cf9e6;
  #L4cf9e4.  v0:= 0I;
  #L4cf9e6.  if v0 == 0 then goto L4cfa36;
  #L4cf9ea.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L4cf9f0.  v0:= temp;
  #L4cf9f2.  v0:= v0 + 4;
  #L4cf9f6.  call temp:= `get`(v3, v0) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L4cf9fc.  v0:= temp;
  #L4cf9fe.  v0:= v0 ^& 192;
  #L4cfa02.  v0:= v0 ^> 6;
  #L4cfa06.  if v0 != v1 then goto L4cfa0c;
  #L4cfa0a.  goto L4cfa28;
  #L4cfa0c.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L4cfa12.  v0:= temp;
  #L4cfa14.  v0:= v0 + 4;
  #L4cfa18.  call temp:= `get`(v3, v0) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L4cfa1e.  v3:= temp;
  #L4cfa20.  v3:= v3 ^& 48;
  #L4cfa24.  v1:= v3 ^> 4;
  #L4cfa28.  v3:= `@@x1.b.a` @type ^`int`[] @kind object;
  #L4cfa2c.  v3:= v3[v1];
  #L4cfa30.  v3:= v3 * 256;
  #L4cfa34.  return v3;
  #L4cfa36.  v3:= 1536I;
  #L4cfa3a.  return v3;
}
procedure `x1.b$b` `e`(`s3.y` v27 @kind object) @signature `Lx1/b;.e:(Ls3/y;)Lx1/b$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;

  #L4cfeb8.  v0:= v27 @kind object;
  #L4cfebc.  call temp:= `e`(v27) @signature `Ls3/y;.e:()I` @kind virtual;
  #L4cfec2.  v1:= temp;
  #L4cfec4.  v2:= 40I;
  #L4cfec8.  call `r`(v0, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4cfece.  v2:= 5I;
  #L4cfed0.  call temp:= `h`(v0, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L4cfed6.  v3:= temp;
  #L4cfed8.  v4:= 10I;
  #L4cfedc.  v6:= 1I;
  #L4cfede.  if v3 <= v4 then goto L4cfee6;
  #L4cfee2.  v3:= 1I;
  #L4cfee4.  goto L4cfee8;
  #L4cfee6.  v3:= 0I;
  #L4cfee8.  call `p`(v0, v1) @signature `Ls3/y;.p:(I)V` @kind virtual;
  #L4cfeee.  v1:= -1I;
  #L4cfef0.  v7:= 8I;
  #L4cfef4.  v9:= 3I;
  #L4cfef6.  v10:= 2I;
  #L4cfef8.  if v3 == 0 then goto L4d02f2;
  #L4cfefc.  v3:= 16I;
  #L4cff00.  call `r`(v0, v3) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4cff06.  call temp:= `h`(v0, v10) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L4cff0c.  v11:= temp;
  #L4cff0e.  if v11 == 0 then goto L4cff24;
  #L4cff12.  if v11 == v6 then goto L4cff20;
  #L4cff16.  if v11 == v10 then goto L4cff1c;
  #L4cff1a.  goto L4cff26;
  #L4cff1c.  v1:= 2I;
  #L4cff1e.  goto L4cff26;
  #L4cff20.  v1:= 1I;
  #L4cff22.  goto L4cff26;
  #L4cff24.  v1:= 0I;
  #L4cff26.  call `r`(v0, v9) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4cff2c.  v11:= 11I;
  #L4cff30.  call temp:= `h`(v0, v11) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L4cff36.  v11:= temp;
  #L4cff38.  v11:= v11 + v6 @kind int;
  #L4cff3a.  v11:= v11 * 2;
  #L4cff3e.  call temp:= `h`(v0, v10) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L4cff44.  v12:= temp;
  #L4cff46.  if v12 != v9 then goto L4cff62;
  #L4cff4a.  v13:= `@@x1.b.c` @type ^`int`[] @kind object;
  #L4cff4e.  call temp:= `h`(v0, v10) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L4cff54.  v14:= temp;
  #L4cff56.  v13:= v13[v14];
  #L4cff5a.  v15:= v13;
  #L4cff5c.  v13:= 3I;
  #L4cff5e.  v14:= 6I;
  #L4cff60.  goto L4cff7a;
  #L4cff62.  call temp:= `h`(v0, v10) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L4cff68.  v13:= temp;
  #L4cff6a.  v14:= `@@x1.b.a` @type ^`int`[] @kind object;
  #L4cff6e.  v14:= v14[v13];
  #L4cff72.  v15:= `@@x1.b.b` @type ^`int`[] @kind object;
  #L4cff76.  v15:= v15[v12];
  #L4cff7a.  v5:= v14 * 256;
  #L4cff7e.  call temp:= `h`(v0, v9) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L4cff84.  v8:= temp;
  #L4cff86.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4cff8c.  v17:= temp;
  #L4cff8e.  v18:= `@@x1.b.d` @type ^`int`[] @kind object;
  #L4cff92.  v18:= v18[v8];
  #L4cff96.  v18:= v18 + v17 @kind int;
  #L4cff9a.  call `r`(v0, v4) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4cffa0.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4cffa6.  v4:= temp;
  #L4cffa8.  if v4 == 0 then goto L4cffb2;
  #L4cffac.  call `r`(v0, v7) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4cffb2.  if v8 != 0 then goto L4cffce;
  #L4cffb6.  call `r`(v0, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4cffbc.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4cffc2.  v4:= temp;
  #L4cffc4.  if v4 == 0 then goto L4cffce;
  #L4cffc8.  call `r`(v0, v7) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4cffce.  if v1 != v6 then goto L4cffe4;
  #L4cffd2.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4cffd8.  v4:= temp;
  #L4cffda.  if v4 == 0 then goto L4cffe4;
  #L4cffde.  call `r`(v0, v3) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4cffe4.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4cffea.  v3:= temp;
  #L4cffec.  v4:= 4I;
  #L4cffee.  if v3 == 0 then goto L4d0220;
  #L4cfff2.  if v8 <= v10 then goto L4cfffc;
  #L4cfff6.  call `r`(v0, v10) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4cfffc.  v3:= v8 ^& 1;
  #L4d0000.  if v3 == 0 then goto L4d0012;
  #L4d0004.  if v8 <= v10 then goto L4d0012;
  #L4d0008.  v3:= 6I;
  #L4d000a.  call `r`(v0, v3) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0010.  goto L4d0014;
  #L4d0012.  v3:= 6I;
  #L4d0014.  v16:= v8 ^& 4;
  #L4d0018.  if v16 == 0 then goto L4d0022;
  #L4d001c.  call `r`(v0, v3) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0022.  if v17 == 0 then goto L4d0038;
  #L4d0026.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d002c.  v3:= temp;
  #L4d002e.  if v3 == 0 then goto L4d0038;
  #L4d0032.  call `r`(v0, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0038.  if v1 != 0 then goto L4d0220;
  #L4d003c.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d0042.  v3:= temp;
  #L4d0044.  if v3 == 0 then goto L4d0052;
  #L4d0048.  v3:= 6I;
  #L4d004a.  call `r`(v0, v3) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0050.  goto L4d0054;
  #L4d0052.  v3:= 6I;
  #L4d0054.  if v8 != 0 then goto L4d006a;
  #L4d0058.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d005e.  v16:= temp;
  #L4d0060.  if v16 == 0 then goto L4d006a;
  #L4d0064.  call `r`(v0, v3) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d006a.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d0070.  v16:= temp;
  #L4d0072.  if v16 == 0 then goto L4d007c;
  #L4d0076.  call `r`(v0, v3) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d007c.  call temp:= `h`(v0, v10) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L4d0082.  v3:= temp;
  #L4d0084.  if v3 != v6 then goto L4d0092;
  #L4d0088.  call `r`(v0, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d008e.  goto L4d01ba;
  #L4d0092.  if v3 != v10 then goto L4d00a4;
  #L4d0096.  v3:= 12I;
  #L4d009a.  call `r`(v0, v3) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d00a0.  goto L4d01ba;
  #L4d00a4.  if v3 != v9 then goto L4d01ba;
  #L4d00a8.  call temp:= `h`(v0, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L4d00ae.  v3:= temp;
  #L4d00b0.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d00b6.  v17:= temp;
  #L4d00b8.  if v17 == 0 then goto L4d0170;
  #L4d00bc.  call `r`(v0, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d00c2.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d00c8.  v17:= temp;
  #L4d00ca.  if v17 == 0 then goto L4d00d4;
  #L4d00ce.  call `r`(v0, v4) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d00d4.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d00da.  v17:= temp;
  #L4d00dc.  if v17 == 0 then goto L4d00e6;
  #L4d00e0.  call `r`(v0, v4) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d00e6.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d00ec.  v17:= temp;
  #L4d00ee.  if v17 == 0 then goto L4d00f8;
  #L4d00f2.  call `r`(v0, v4) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d00f8.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d00fe.  v17:= temp;
  #L4d0100.  if v17 == 0 then goto L4d010a;
  #L4d0104.  call `r`(v0, v4) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d010a.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d0110.  v17:= temp;
  #L4d0112.  if v17 == 0 then goto L4d011c;
  #L4d0116.  call `r`(v0, v4) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d011c.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d0122.  v17:= temp;
  #L4d0124.  if v17 == 0 then goto L4d012e;
  #L4d0128.  call `r`(v0, v4) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d012e.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d0134.  v17:= temp;
  #L4d0136.  if v17 == 0 then goto L4d0140;
  #L4d013a.  call `r`(v0, v4) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0140.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d0146.  v17:= temp;
  #L4d0148.  if v17 == 0 then goto L4d0170;
  #L4d014c.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d0152.  v17:= temp;
  #L4d0154.  if v17 == 0 then goto L4d015e;
  #L4d0158.  call `r`(v0, v4) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d015e.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d0164.  v17:= temp;
  #L4d0166.  if v17 == 0 then goto L4d0170;
  #L4d016a.  call `r`(v0, v4) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0170.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d0176.  v17:= temp;
  #L4d0178.  if v17 == 0 then goto L4d01a8;
  #L4d017c.  call `r`(v0, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0182.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d0188.  v17:= temp;
  #L4d018a.  if v17 == 0 then goto L4d01a8;
  #L4d018e.  v6:= 7I;
  #L4d0190.  call `r`(v0, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0196.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d019c.  v6:= temp;
  #L4d019e.  if v6 == 0 then goto L4d01a8;
  #L4d01a2.  call `r`(v0, v7) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d01a8.  v3:= v3 + v10 @kind int;
  #L4d01aa.  v3:= v3 * 8;
  #L4d01ae.  call `r`(v0, v3) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d01b4.  call `c`(v27) @signature `Ls3/y;.c:()V` @kind virtual;
  #L4d01ba.  if v8 >= v10 then goto L4d01ea;
  #L4d01be.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d01c4.  v3:= temp;
  #L4d01c6.  v6:= 14I;
  #L4d01ca.  if v3 == 0 then goto L4d01d4;
  #L4d01ce.  call `r`(v0, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d01d4.  if v8 != 0 then goto L4d01ea;
  #L4d01d8.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d01de.  v3:= temp;
  #L4d01e0.  if v3 == 0 then goto L4d01ea;
  #L4d01e4.  call `r`(v0, v6) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d01ea.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d01f0.  v3:= temp;
  #L4d01f2.  if v3 == 0 then goto L4d0220;
  #L4d01f6.  if v13 != 0 then goto L4d0202;
  #L4d01fa.  call `r`(v0, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0200.  goto L4d0220;
  #L4d0202.  v3:= 0I;
  #L4d0204.  if v3 >= v14 then goto L4d0220;
  #L4d0208.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d020e.  v6:= temp;
  #L4d0210.  if v6 == 0 then goto L4d021a;
  #L4d0214.  call `r`(v0, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d021a.  v3:= v3 + 1;
  #L4d021e.  goto L4d0204;
  #L4d0220.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d0226.  v3:= temp;
  #L4d0228.  if v3 == 0 then goto L4d027a;
  #L4d022c.  call `r`(v0, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0232.  if v8 != v10 then goto L4d023c;
  #L4d0236.  call `r`(v0, v4) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d023c.  v2:= 6I;
  #L4d023e.  if v8 < v2 then goto L4d0248;
  #L4d0242.  call `r`(v0, v10) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0248.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d024e.  v2:= temp;
  #L4d0250.  if v2 == 0 then goto L4d025a;
  #L4d0254.  call `r`(v0, v7) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d025a.  if v8 != 0 then goto L4d0270;
  #L4d025e.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d0264.  v2:= temp;
  #L4d0266.  if v2 == 0 then goto L4d0270;
  #L4d026a.  call `r`(v0, v7) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0270.  if v12 >= v9 then goto L4d027a;
  #L4d0274.  call `q`(v27) @signature `Ls3/y;.q:()V` @kind virtual;
  #L4d027a.  if v1 != 0 then goto L4d0288;
  #L4d027e.  if v13 == v9 then goto L4d0288;
  #L4d0282.  call `q`(v27) @signature `Ls3/y;.q:()V` @kind virtual;
  #L4d0288.  if v1 != v10 then goto L4d02a6;
  #L4d028c.  if v13 == v9 then goto L4d029c;
  #L4d0290.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d0296.  v2:= temp;
  #L4d0298.  if v2 == 0 then goto L4d02a6;
  #L4d029c.  v2:= 6I;
  #L4d029e.  call `r`(v0, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d02a4.  goto L4d02a8;
  #L4d02a6.  v2:= 6I;
  #L4d02a8.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d02ae.  v3:= temp;
  #L4d02b0.  if v3 == 0 then goto L4d02d4;
  #L4d02b4.  call temp:= `h`(v0, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L4d02ba.  v2:= temp;
  #L4d02bc.  v3:= 1I;
  #L4d02be.  if v2 != v3 then goto L4d02d4;
  #L4d02c2.  call temp:= `h`(v0, v7) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L4d02c8.  v0:= temp;
  #L4d02ca.  if v0 != v3 then goto L4d02d4;
  #L4d02ce.  v0:= "audio/eac3-joc" @kind object;
  #L4d02d2.  goto L4d02d8;
  #L4d02d4.  v0:= "audio/eac3" @kind object;
  #L4d02d8.  v20:= v0 @kind object;
  #L4d02dc.  v21:= v1;
  #L4d02e0.  v25:= v5;
  #L4d02e4.  v24:= v11;
  #L4d02e8.  v23:= v15;
  #L4d02ec.  v22:= v18;
  #L4d02f0.  goto L4d03a0;
  #L4d02f2.  v2:= 32I;
  #L4d02f6.  call `r`(v0, v2) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d02fc.  call temp:= `h`(v0, v10) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L4d0302.  v2:= temp;
  #L4d0304.  if v2 != v9 then goto L4d030c;
  #L4d0308.  v3:= 0I;
  #L4d030a.  goto L4d0310;
  #L4d030c.  v3:= "audio/ac3" @kind object;
  #L4d0310.  v4:= 6I;
  #L4d0312.  call temp:= `h`(v0, v4) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L4d0318.  v4:= temp;
  #L4d031a.  call temp:= `b`(v2, v4) @signature `Lx1/b;.b:(II)I` @kind static;
  #L4d0320.  v11:= temp;
  #L4d0322.  call `r`(v0, v7) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0328.  call temp:= `h`(v0, v9) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L4d032e.  v4:= temp;
  #L4d0330.  v5:= v4 ^& 1;
  #L4d0334.  if v5 == 0 then goto L4d0344;
  #L4d0338.  v5:= 1I;
  #L4d033a.  if v4 == v5 then goto L4d0344;
  #L4d033e.  call `r`(v0, v10) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0344.  v5:= v4 ^& 4;
  #L4d0348.  if v5 == 0 then goto L4d0352;
  #L4d034c.  call `r`(v0, v10) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d0352.  if v4 != v10 then goto L4d035c;
  #L4d0356.  call `r`(v0, v10) @signature `Ls3/y;.r:(I)V` @kind virtual;
  #L4d035c.  v5:= `@@x1.b.b` @type ^`int`[] @kind object;
  #L4d0360.  v6:= length @variable v5;
  #L4d0362.  if v2 >= v6 then goto L4d036e;
  #L4d0366.  v2:= v5[v2];
  #L4d036a.  v15:= v2;
  #L4d036c.  goto L4d0370;
  #L4d036e.  v15:= -1I;
  #L4d0370.  v5:= 1536I;
  #L4d0374.  call temp:= `g`(v27) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L4d037a.  v0:= temp;
  #L4d037c.  v2:= `@@x1.b.d` @type ^`int`[] @kind object;
  #L4d0380.  v2:= v2[v4];
  #L4d0384.  v18:= v2 + v0 @kind int;
  #L4d0388.  v20:= v3 @kind object;
  #L4d038c.  v24:= v11;
  #L4d0390.  v23:= v15;
  #L4d0394.  v22:= v18;
  #L4d0398.  v21:= -1I;
  #L4d039c.  v25:= 1536I;
  #L4d03a0.  v0:= new `x1.b$b`;
  #L4d03a4.  v26:= 0I;
  #L4d03a8.  v19:= v0 @kind object;
  #L4d03ac.  call `<init>`(v19, v20, v21, v22, v23, v24, v25, v26) @signature `Lx1/b$b;.<init>:(Ljava/lang/String;IIIIILx1/b$a;)V` @kind direct;
  #L4d03b2.  return v0 @kind object;
}
procedure `int` `f`(`byte`[] v5 @kind object) @signature `Lx1/b;.f:([B)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4cfa4c.  v0:= length @variable v5;
  #L4cfa4e.  v1:= 6I;
  #L4cfa50.  if v0 >= v1 then goto L4cfa58;
  #L4cfa54.  v5:= -1I;
  #L4cfa56.  return v5;
  #L4cfa58.  v0:= 5I;
  #L4cfa5a.  v0:= v5[v0] @kind byte;
  #L4cfa5e.  v0:= v0 ^& 248;
  #L4cfa62.  v2:= 3I;
  #L4cfa64.  v0:= v0 ^> v2 @kind int;
  #L4cfa66.  v3:= 10I;
  #L4cfa6a.  v4:= 1I;
  #L4cfa6c.  if v0 <= v3 then goto L4cfa74;
  #L4cfa70.  v0:= 1I;
  #L4cfa72.  goto L4cfa76;
  #L4cfa74.  v0:= 0I;
  #L4cfa76.  if v0 == 0 then goto L4cfa9a;
  #L4cfa7a.  v0:= 2I;
  #L4cfa7c.  v1:= v5[v0] @kind byte;
  #L4cfa80.  v1:= v1 ^& 7;
  #L4cfa84.  v1:= v1 ^< 8;
  #L4cfa88.  v5:= v5[v2] @kind byte;
  #L4cfa8c.  v5:= v5 ^& 255;
  #L4cfa90.  v5:= v5 ^| v1 @kind int;
  #L4cfa92.  v5:= v5 + v4 @kind int;
  #L4cfa94.  v5:= v5 * 2;
  #L4cfa98.  return v5;
  #L4cfa9a.  v0:= 4I;
  #L4cfa9c.  v2:= v5[v0] @kind byte;
  #L4cfaa0.  v2:= v2 ^& 192;
  #L4cfaa4.  v1:= v2 ^> 6;
  #L4cfaa8.  v5:= v5[v0] @kind byte;
  #L4cfaac.  v5:= v5 ^& 63;
  #L4cfab0.  call temp:= `b`(v1, v5) @signature `Lx1/b;.b:(II)I` @kind static;
  #L4cfab6.  v5:= temp;
  #L4cfab8.  return v5;
}
procedure `v1.j1` `g`(`s3.z` v5 @kind object, `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `z1.m` v8 @kind object) @signature `Lx1/b;.g:(Ls3/z;Ljava/lang/String;Ljava/lang/String;Lz1/m;)Lv1/j1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4cfc50.  v0:= 2I;
  #L4cfc52.  call `P`(v5, v0) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L4cfc58.  call temp:= `C`(v5) @signature `Ls3/z;.C:()I` @kind virtual;
  #L4cfc5e.  v1:= temp;
  #L4cfc60.  v1:= v1 ^& 192;
  #L4cfc64.  v1:= v1 ^> 6;
  #L4cfc68.  v2:= `@@x1.b.b` @type ^`int`[] @kind object;
  #L4cfc6c.  v1:= v2[v1];
  #L4cfc70.  call temp:= `C`(v5) @signature `Ls3/z;.C:()I` @kind virtual;
  #L4cfc76.  v2:= temp;
  #L4cfc78.  v3:= `@@x1.b.d` @type ^`int`[] @kind object;
  #L4cfc7c.  v4:= v2 ^& 14;
  #L4cfc80.  v4:= v4 ^> 1;
  #L4cfc84.  v3:= v3[v4];
  #L4cfc88.  v2:= v2 ^& 1;
  #L4cfc8c.  if v2 == 0 then goto L4cfc94;
  #L4cfc90.  v3:= v3 + 1;
  #L4cfc94.  call temp:= `C`(v5) @signature `Ls3/z;.C:()I` @kind virtual;
  #L4cfc9a.  v2:= temp;
  #L4cfc9c.  v2:= v2 ^& 30;
  #L4cfca0.  v2:= v2 ^> 1;
  #L4cfca4.  if v2 <= 0 then goto L4cfcba;
  #L4cfca8.  call temp:= `C`(v5) @signature `Ls3/z;.C:()I` @kind virtual;
  #L4cfcae.  v2:= temp;
  #L4cfcb0.  v0:= v0 ^& v2 @kind int;
  #L4cfcb2.  if v0 == 0 then goto L4cfcba;
  #L4cfcb6.  v3:= v3 + 2;
  #L4cfcba.  call temp:= `a`(v5) @signature `Ls3/z;.a:()I` @kind virtual;
  #L4cfcc0.  v0:= temp;
  #L4cfcc2.  if v0 <= 0 then goto L4cfcdc;
  #L4cfcc6.  call temp:= `C`(v5) @signature `Ls3/z;.C:()I` @kind virtual;
  #L4cfccc.  v5:= temp;
  #L4cfcce.  v5:= v5 ^& 1;
  #L4cfcd2.  if v5 == 0 then goto L4cfcdc;
  #L4cfcd6.  v5:= "audio/eac3-joc" @kind object;
  #L4cfcda.  goto L4cfce0;
  #L4cfcdc.  v5:= "audio/eac3" @kind object;
  #L4cfce0.  v0:= new `v1.j1$b`;
  #L4cfce4.  call `<init>`(v0) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L4cfcea.  call temp:= `S`(v0, v6) @signature `Lv1/j1$b;.S:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L4cfcf0.  v6:= temp @kind object;
  #L4cfcf2.  call temp:= `e0`(v6, v5) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L4cfcf8.  v5:= temp @kind object;
  #L4cfcfa.  call temp:= `H`(v5, v3) @signature `Lv1/j1$b;.H:(I)Lv1/j1$b;` @kind virtual;
  #L4cfd00.  v5:= temp @kind object;
  #L4cfd02.  call temp:= `f0`(v5, v1) @signature `Lv1/j1$b;.f0:(I)Lv1/j1$b;` @kind virtual;
  #L4cfd08.  v5:= temp @kind object;
  #L4cfd0a.  call temp:= `M`(v5, v8) @signature `Lv1/j1$b;.M:(Lz1/m;)Lv1/j1$b;` @kind virtual;
  #L4cfd10.  v5:= temp @kind object;
  #L4cfd12.  call temp:= `V`(v5, v7) @signature `Lv1/j1$b;.V:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L4cfd18.  v5:= temp @kind object;
  #L4cfd1a.  call temp:= `E`(v5) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L4cfd20.  v5:= temp @kind object;
  #L4cfd22.  return v5 @kind object;
}
procedure `int` `h`(`java.nio.ByteBuffer` v3 @kind object, `int` v4 ) @signature `Lx1/b;.h:(Ljava/nio/ByteBuffer;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4cfb50.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L4cfb56.  v0:= temp;
  #L4cfb58.  v0:= v0 + v4 @kind int;
  #L4cfb5a.  v0:= v0 + 7;
  #L4cfb5e.  call temp:= `get`(v3, v0) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L4cfb64.  v0:= temp;
  #L4cfb66.  v0:= v0 ^& 255;
  #L4cfb6a.  v1:= 187I;
  #L4cfb6e.  if v0 != v1 then goto L4cfb76;
  #L4cfb72.  v0:= 1I;
  #L4cfb74.  goto L4cfb78;
  #L4cfb76.  v0:= 0I;
  #L4cfb78.  v1:= 40I;
  #L4cfb7c.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L4cfb82.  v2:= temp;
  #L4cfb84.  v2:= v2 + v4 @kind int;
  #L4cfb86.  if v0 == 0 then goto L4cfb90;
  #L4cfb8a.  v4:= 9I;
  #L4cfb8e.  goto L4cfb94;
  #L4cfb90.  v4:= 8I;
  #L4cfb94.  v2:= v2 + v4 @kind int;
  #L4cfb96.  call temp:= `get`(v3, v2) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L4cfb9c.  v3:= temp;
  #L4cfb9e.  v3:= v3 ^> 4;
  #L4cfba2.  v3:= v3 ^& 7;
  #L4cfba6.  v3:= v1 ^< v3 @kind int;
  #L4cfbaa.  return v3;
}
procedure `int` `i`(`byte`[] v5 @kind object) @signature `Lx1/b;.i:([B)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4cfacc.  v0:= 4I;
  #L4cface.  v1:= v5[v0] @kind byte;
  #L4cfad2.  v2:= 0I;
  #L4cfad4.  v3:= -8I;
  #L4cfad6.  if v1 != v3 then goto L4cfb3c;
  #L4cfada.  v1:= 5I;
  #L4cfadc.  v1:= v5[v1] @kind byte;
  #L4cfae0.  v3:= 114I;
  #L4cfae4.  if v1 != v3 then goto L4cfb3c;
  #L4cfae8.  v1:= 6I;
  #L4cfaea.  v1:= v5[v1] @kind byte;
  #L4cfaee.  v3:= 111I;
  #L4cfaf2.  if v1 != v3 then goto L4cfb3c;
  #L4cfaf6.  v1:= 7I;
  #L4cfaf8.  v3:= v5[v1] @kind byte;
  #L4cfafc.  v3:= v3 ^& 254;
  #L4cfb00.  v4:= 186I;
  #L4cfb04.  if v3 == v4 then goto L4cfb0a;
  #L4cfb08.  goto L4cfb3c;
  #L4cfb0a.  v3:= v5[v1] @kind byte;
  #L4cfb0e.  v3:= v3 ^& 255;
  #L4cfb12.  v4:= 187I;
  #L4cfb16.  if v3 != v4 then goto L4cfb1c;
  #L4cfb1a.  v2:= 1I;
  #L4cfb1c.  v3:= 40I;
  #L4cfb20.  if v2 == 0 then goto L4cfb2a;
  #L4cfb24.  v2:= 9I;
  #L4cfb28.  goto L4cfb2e;
  #L4cfb2a.  v2:= 8I;
  #L4cfb2e.  v5:= v5[v2] @kind byte;
  #L4cfb32.  v5:= v5 ^> v0 @kind int;
  #L4cfb34.  v5:= v5 ^& v1 @kind int;
  #L4cfb36.  v5:= v3 ^< v5 @kind int;
  #L4cfb3a.  return v5;
  #L4cfb3c.  return v2;
}
