record `x1.s$e` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Exception` @kind class {
  `int` `x1.s$e.o` @AccessFlag PUBLIC_FINAL;
  `boolean` `x1.s$e.p` @AccessFlag PUBLIC_FINAL;
  `v1.j1` `x1.s$e.q` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`x1.s$e` v2 @kind this, `int` v3 , `v1.j1` v4 @kind object, `boolean` v5 ) @signature `Lx1/s$e;.<init>:(ILv1/j1;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4d1adc.  v0:= new `java.lang.StringBuilder`;
  #L4d1ae0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4d1ae6.  v1:= "AudioTrack write failed: " @kind object;
  #L4d1aea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4d1af0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4d1af6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4d1afc.  v0:= temp @kind object;
  #L4d1afe.  call `<init>`(v2, v0) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4d1b04.  v2.`x1.s$e.p` @type ^`boolean` := v5 @kind boolean;
  #L4d1b08.  v2.`x1.s$e.o` @type ^`int` := v3;
  #L4d1b0c.  v2.`x1.s$e.q` @type ^`v1.j1` := v4 @kind object;
  #L4d1b10.  return @kind void;
}
