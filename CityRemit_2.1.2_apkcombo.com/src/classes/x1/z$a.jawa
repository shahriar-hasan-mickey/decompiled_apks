record `x1.z$a` @kind class @AccessFlag PUBLIC {
  `int` `x1.z$a.a` @AccessFlag PRIVATE;
  `int` `x1.z$a.b` @AccessFlag PRIVATE;
  `int` `x1.z$a.c` @AccessFlag PRIVATE;
  `int` `x1.z$a.d` @AccessFlag PRIVATE;
  `int` `x1.z$a.e` @AccessFlag PRIVATE;
  `int` `x1.z$a.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`x1.z$a` v2 @kind this) @signature `Lx1/z$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4d5864.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d586a.  v0:= 250000I;
  #L4d5870.  v2.`x1.z$a.a` @type ^`int` := v0;
  #L4d5874.  v1:= 750000I;
  #L4d587a.  v2.`x1.z$a.b` @type ^`int` := v1;
  #L4d587e.  v1:= 4I;
  #L4d5880.  v2.`x1.z$a.c` @type ^`int` := v1;
  #L4d5884.  v2.`x1.z$a.d` @type ^`int` := v0;
  #L4d5888.  v0:= 50000000I;
  #L4d588e.  v2.`x1.z$a.e` @type ^`int` := v0;
  #L4d5892.  v0:= 2I;
  #L4d5894.  v2.`x1.z$a.f` @type ^`int` := v0;
  #L4d5898.  return @kind void;
}
procedure `int` `a`(`x1.z$a` v0 @kind object) @signature `Lx1/z$a;.a:(Lx1/z$a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4d57d4.  v0:= v0.`x1.z$a.a` @type ^`int`;
  #L4d57d8.  return v0;
}
procedure `int` `b`(`x1.z$a` v0 @kind object) @signature `Lx1/z$a;.b:(Lx1/z$a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4d57ec.  v0:= v0.`x1.z$a.b` @type ^`int`;
  #L4d57f0.  return v0;
}
procedure `int` `c`(`x1.z$a` v0 @kind object) @signature `Lx1/z$a;.c:(Lx1/z$a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4d5804.  v0:= v0.`x1.z$a.c` @type ^`int`;
  #L4d5808.  return v0;
}
procedure `int` `d`(`x1.z$a` v0 @kind object) @signature `Lx1/z$a;.d:(Lx1/z$a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4d581c.  v0:= v0.`x1.z$a.d` @type ^`int`;
  #L4d5820.  return v0;
}
procedure `int` `e`(`x1.z$a` v0 @kind object) @signature `Lx1/z$a;.e:(Lx1/z$a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4d5834.  v0:= v0.`x1.z$a.e` @type ^`int`;
  #L4d5838.  return v0;
}
procedure `int` `f`(`x1.z$a` v0 @kind object) @signature `Lx1/z$a;.f:(Lx1/z$a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4d584c.  v0:= v0.`x1.z$a.f` @type ^`int`;
  #L4d5850.  return v0;
}
procedure `x1.z` `g`(`x1.z$a` v1 @kind this) @signature `Lx1/z$a;.g:()Lx1/z;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d58ac.  v0:= new `x1.z`;
  #L4d58b0.  call `<init>`(v0, v1) @signature `Lx1/z;.<init>:(Lx1/z$a;)V` @kind direct;
  #L4d58b6.  return v0 @kind object;
}
