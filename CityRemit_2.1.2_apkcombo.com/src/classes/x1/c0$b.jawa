record `x1.c0$b` @kind class @AccessFlag FINAL extends `x1.s$c` @kind interface {
  `x1.c0` `x1.c0$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x1.c0$b` v0 @kind this, `x1.c0` v1 @kind object) @signature `Lx1/c0$b;.<init>:(Lx1/c0;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4d62b0.  v0.`x1.c0$b.a` @type ^`x1.c0` := v1 @kind object;
  #L4d62b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d62ba.  return @kind void;
}
procedure `void` `<init>`(`x1.c0$b` v0 @kind this, `x1.c0` v1 @kind object, `x1.c0$a` v2 @kind object) @signature `Lx1/c0$b;.<init>:(Lx1/c0;Lx1/c0$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4d62cc.  call `<init>`(v0, v1) @signature `Lx1/c0$b;.<init>:(Lx1/c0;)V` @kind direct;
  #L4d62d2.  return @kind void;
}
procedure `void` `a`(`x1.c0$b` v1 @kind this, `long` v2 ) @signature `Lx1/c0$b;.a:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d6380.  v0:= v1.`x1.c0$b.a` @type ^`x1.c0` @kind object;
  #L4d6384.  call temp:= `q1`(v0) @signature `Lx1/c0;.q1:(Lx1/c0;)Lx1/r$a;` @kind static;
  #L4d638a.  v0:= temp @kind object;
  #L4d638c.  call `B`(v0, v2) @signature `Lx1/r$a;.B:(J)V` @kind virtual;
  #L4d6392.  return @kind void;
}
procedure `void` `b`(`x1.c0$b` v1 @kind this, `boolean` v2 ) @signature `Lx1/c0$b;.b:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d63c0.  v0:= v1.`x1.c0$b.a` @type ^`x1.c0` @kind object;
  #L4d63c4.  call temp:= `q1`(v0) @signature `Lx1/c0;.q1:(Lx1/c0;)Lx1/r$a;` @kind static;
  #L4d63ca.  v0:= temp @kind object;
  #L4d63cc.  call `C`(v0, v2) @signature `Lx1/r$a;.C:(Z)V` @kind virtual;
  #L4d63d2.  return @kind void;
}
procedure `void` `c`(`x1.c0$b` v2 @kind this, `java.lang.Exception` v3 @kind object) @signature `Lx1/c0$b;.c:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d62e4.  v0:= "MediaCodecAudioRenderer" @kind object;
  #L4d62e8.  v1:= "Audio sink error" @kind object;
  #L4d62ec.  call `d`(v0, v1, v3) @signature `Ls3/q;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L4d62f2.  v0:= v2.`x1.c0$b.a` @type ^`x1.c0` @kind object;
  #L4d62f6.  call temp:= `q1`(v0) @signature `Lx1/c0;.q1:(Lx1/c0;)Lx1/r$a;` @kind static;
  #L4d62fc.  v0:= temp @kind object;
  #L4d62fe.  call `l`(v0, v3) @signature `Lx1/r$a;.l:(Ljava/lang/Exception;)V` @kind virtual;
  #L4d6304.  return @kind void;
}
procedure `void` `d`(`x1.c0$b` v1 @kind this) @signature `Lx1/c0$b;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d63a4.  v0:= v1.`x1.c0$b.a` @type ^`x1.c0` @kind object;
  #L4d63a8.  call `y1`(v0) @signature `Lx1/c0;.y1:()V` @kind virtual;
  #L4d63ae.  return @kind void;
}
procedure `void` `e`(`x1.c0$b` v1 @kind this) @signature `Lx1/c0$b;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d634c.  v0:= v1.`x1.c0$b.a` @type ^`x1.c0` @kind object;
  #L4d6350.  call temp:= `r1`(v0) @signature `Lx1/c0;.r1:(Lx1/c0;)Lv1/r2$a;` @kind static;
  #L4d6356.  v0:= temp @kind object;
  #L4d6358.  if v0 == 0 then goto L4d636e;
  #L4d635c.  v0:= v1.`x1.c0$b.a` @type ^`x1.c0` @kind object;
  #L4d6360.  call temp:= `r1`(v0) @signature `Lx1/c0;.r1:(Lx1/c0;)Lv1/r2$a;` @kind static;
  #L4d6366.  v0:= temp @kind object;
  #L4d6368.  call `a`(v0) @signature `Lv1/r2$a;.a:()V` @kind interface;
  #L4d636e.  return @kind void;
}
procedure `void` `f`(`x1.c0$b` v1 @kind this) @signature `Lx1/c0$b;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d6318.  v0:= v1.`x1.c0$b.a` @type ^`x1.c0` @kind object;
  #L4d631c.  call temp:= `r1`(v0) @signature `Lx1/c0;.r1:(Lx1/c0;)Lv1/r2$a;` @kind static;
  #L4d6322.  v0:= temp @kind object;
  #L4d6324.  if v0 == 0 then goto L4d633a;
  #L4d6328.  v0:= v1.`x1.c0$b.a` @type ^`x1.c0` @kind object;
  #L4d632c.  call temp:= `r1`(v0) @signature `Lx1/c0;.r1:(Lx1/c0;)Lv1/r2$a;` @kind static;
  #L4d6332.  v0:= temp @kind object;
  #L4d6334.  call `b`(v0) @signature `Lv1/r2$a;.b:()V` @kind interface;
  #L4d633a.  return @kind void;
}
procedure `void` `g`(`x1.c0$b` v7 @kind this, `int` v8 , `long` v9 , `long` v11 ) @signature `Lx1/c0$b;.g:(IJJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4d63e4.  v0:= v7.`x1.c0$b.a` @type ^`x1.c0` @kind object;
  #L4d63e8.  call temp:= `q1`(v0) @signature `Lx1/c0;.q1:(Lx1/c0;)Lx1/r$a;` @kind static;
  #L4d63ee.  v1:= temp @kind object;
  #L4d63f0.  v2:= v8;
  #L4d63f2.  v3:= v9 @kind wide;
  #L4d63f4.  v5:= v11 @kind wide;
  #L4d63f6.  call `D`(v1, v2, v3, v5) @signature `Lx1/r$a;.D:(IJJ)V` @kind virtual;
  #L4d63fc.  return @kind void;
}
