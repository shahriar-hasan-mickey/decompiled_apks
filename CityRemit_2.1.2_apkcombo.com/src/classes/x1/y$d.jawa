record `x1.y$d` @kind interface @AccessFlag ABSTRACT_INTERFACE {
}
global `x1.y$d` `@@x1.y$d.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lx1/y$d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4d2ce8.  v0:= new `x1.z$a`;
  #L4d2cec.  call `<init>`(v0) @signature `Lx1/z$a;.<init>:()V` @kind direct;
  #L4d2cf2.  call temp:= `g`(v0) @signature `Lx1/z$a;.g:()Lx1/z;` @kind virtual;
  #L4d2cf8.  v0:= temp @kind object;
  #L4d2cfa.  `@@x1.y$d.a` @type ^`x1.y$d` := v0 @kind object;
  #L4d2cfe.  return @kind void;
}
procedure `int` `a`(`int` v0 , `int` v1 , `int` v2 , `int` v3 , `int` v4 , `double` v5 ) @signature `Lx1/y$d;.a:(IIIIID)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
