record `x1.m` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `x1.r$a` `x1.m.o` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.lang.String` `x1.m.p` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `long` `x1.m.q` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `long` `x1.m.r` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x1.m` v0 @kind this, `x1.r$a` v1 @kind object, `java.lang.String` v2 @kind object, `long` v3 , `long` v5 ) @signature `Lx1/m;.<init>:(Lx1/r$a;Ljava/lang/String;JJ)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4d13b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d13ba.  v0.`x1.m.o` @type ^`x1.r$a` := v1 @kind object;
  #L4d13be.  v0.`x1.m.p` @type ^`java.lang.String` := v2 @kind object;
  #L4d13c2.  v0.`x1.m.q` @type ^`long` := v3 @kind wide;
  #L4d13c6.  v0.`x1.m.r` @type ^`long` := v5 @kind wide;
  #L4d13ca.  return @kind void;
}
procedure `void` `run`(`x1.m` v6 @kind this) @signature `Lx1/m;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4d13dc.  v0:= v6.`x1.m.o` @type ^`x1.r$a` @kind object;
  #L4d13e0.  v1:= v6.`x1.m.p` @type ^`java.lang.String` @kind object;
  #L4d13e4.  v2:= v6.`x1.m.q` @type ^`long` @kind wide;
  #L4d13e8.  v4:= v6.`x1.m.r` @type ^`long` @kind wide;
  #L4d13ec.  call `f`(v0, v1, v2, v4) @signature `Lx1/r$a;.f:(Lx1/r$a;Ljava/lang/String;JJ)V` @kind static;
  #L4d13f2.  return @kind void;
}
