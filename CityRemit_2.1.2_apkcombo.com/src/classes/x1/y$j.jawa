record `x1.y$j` @kind class @AccessFlag FINAL {
  `long` `x1.y$j.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Exception` `x1.y$j.b` @AccessFlag PRIVATE;
  `long` `x1.y$j.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`x1.y$j` v0 @kind this, `long` v1 ) @signature `Lx1/y$j;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d3388.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d338e.  v0.`x1.y$j.a` @type ^`long` := v1 @kind wide;
  #L4d3392.  return @kind void;
}
procedure `void` `a`(`x1.y$j` v1 @kind this) @signature `Lx1/y$j;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d33a4.  v0:= 0I;
  #L4d33a6.  v1.`x1.y$j.b` @type ^`java.lang.Exception` := v0 @kind object;
  #L4d33aa.  return @kind void;
}
procedure `void` `b`(`x1.y$j` v5 @kind this, `java.lang.Exception` v6 @kind object) @signature `Lx1/y$j;.b:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4d33bc.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L4d33c2.  v0:= temp @kind wide;
  #L4d33c4.  v2:= v5.`x1.y$j.b` @type ^`java.lang.Exception` @kind object;
  #L4d33c8.  if v2 != 0 then goto L4d33da;
  #L4d33cc.  v5.`x1.y$j.b` @type ^`java.lang.Exception` := v6 @kind object;
  #L4d33d0.  v2:= v5.`x1.y$j.a` @type ^`long` @kind wide;
  #L4d33d4.  v2:= v2 + v0 @kind long;
  #L4d33d6.  v5.`x1.y$j.c` @type ^`long` := v2 @kind wide;
  #L4d33da.  v2:= v5.`x1.y$j.c` @type ^`long` @kind wide;
  #L4d33de.  v4:= lcmp(v0, v2);
  #L4d33e2.  if v4 < 0 then goto L4d3400;
  #L4d33e6.  v0:= v5.`x1.y$j.b` @type ^`java.lang.Exception` @kind object;
  #L4d33ea.  if v0 == v6 then goto L4d33f4;
  #L4d33ee.  call `addSuppressed`(v0, v6) @signature `Ljava/lang/Exception;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L4d33f4.  v6:= v5.`x1.y$j.b` @type ^`java.lang.Exception` @kind object;
  #L4d33f8.  call `a`(v5) @signature `Lx1/y$j;.a:()V` @kind virtual;
  #L4d33fe.  throw v6;
  #L4d3400.  return @kind void;
}
