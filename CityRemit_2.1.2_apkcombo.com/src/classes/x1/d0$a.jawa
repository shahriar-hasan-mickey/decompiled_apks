record `x1.d0$a` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `x1.d0$a.a` @AccessFlag PUBLIC;
  `java.lang.String` `x1.d0$a.b` @AccessFlag PUBLIC;
  `int` `x1.d0$a.c` @AccessFlag PUBLIC;
  `int` `x1.d0$a.d` @AccessFlag PUBLIC;
  `int` `x1.d0$a.e` @AccessFlag PUBLIC;
  `int` `x1.d0$a.f` @AccessFlag PUBLIC;
  `int` `x1.d0$a.g` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`x1.d0$a` v0 @kind this) @signature `Lx1/d0$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4d7398.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4d739e.  return @kind void;
}
procedure `boolean` `a`(`x1.d0$a` v8 @kind this, `int` v9 ) @signature `Lx1/d0$a;.a:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4d722c.  call temp:= `a`(v9) @signature `Lx1/d0;.a:(I)Z` @kind static;
  #L4d7232.  v0:= temp;
  #L4d7234.  v1:= 0I;
  #L4d7236.  if v0 != 0 then goto L4d723c;
  #L4d723a.  return v1;
  #L4d723c.  v0:= v9 ^>> 19;
  #L4d7240.  v2:= 3I;
  #L4d7242.  v0:= v0 ^& v2 @kind int;
  #L4d7244.  v3:= 1I;
  #L4d7246.  if v0 != v3 then goto L4d724c;
  #L4d724a.  return v1;
  #L4d724c.  v4:= v9 ^>> 17;
  #L4d7250.  v4:= v4 ^& v2 @kind int;
  #L4d7252.  if v4 != 0 then goto L4d7258;
  #L4d7256.  return v1;
  #L4d7258.  v5:= v9 ^>> 12;
  #L4d725c.  v6:= 15I;
  #L4d7260.  v5:= v5 ^& v6 @kind int;
  #L4d7262.  if v5 == 0 then goto L4d7384;
  #L4d7266.  if v5 != v6 then goto L4d726e;
  #L4d726a.  goto L4d7384;
  #L4d726e.  v6:= v9 ^>> 10;
  #L4d7272.  v6:= v6 ^& v2 @kind int;
  #L4d7274.  if v6 != v2 then goto L4d727a;
  #L4d7278.  return v1;
  #L4d727a.  v8.`x1.d0$a.a` @type ^`int` := v0;
  #L4d727e.  call temp:= `b`() @signature `Lx1/d0;.b:()[Ljava/lang/String;` @kind static;
  #L4d7284.  v1:= temp @kind object;
  #L4d7286.  v7:= v4 - 3;
  #L4d728a.  v1:= v1[v7] @kind object;
  #L4d728e.  v8.`x1.d0$a.b` @type ^`java.lang.String` := v1 @kind object;
  #L4d7292.  call temp:= `c`() @signature `Lx1/d0;.c:()[I` @kind static;
  #L4d7298.  v1:= temp @kind object;
  #L4d729a.  v1:= v1[v6];
  #L4d729e.  v8.`x1.d0$a.d` @type ^`int` := v1;
  #L4d72a2.  v6:= 2I;
  #L4d72a4.  if v0 != v6 then goto L4d72b0;
  #L4d72a8.  v1:= v1 / v6 @kind int;
  #L4d72aa.  v8.`x1.d0$a.d` @type ^`int` := v1;
  #L4d72ae.  goto L4d72ba;
  #L4d72b0.  if v0 != 0 then goto L4d72ba;
  #L4d72b4.  v1:= v1 / 4;
  #L4d72b8.  goto L4d72aa;
  #L4d72ba.  v1:= v9 ^>> 9;
  #L4d72be.  v1:= v1 ^& v3 @kind int;
  #L4d72c0.  call temp:= `d`(v0, v4) @signature `Lx1/d0;.d:(II)I` @kind static;
  #L4d72c6.  v7:= temp;
  #L4d72c8.  v8.`x1.d0$a.g` @type ^`int` := v7;
  #L4d72cc.  if v4 != v2 then goto L4d730c;
  #L4d72d0.  if v0 != v2 then goto L4d72e4;
  #L4d72d4.  call temp:= `e`() @signature `Lx1/d0;.e:()[I` @kind static;
  #L4d72da.  v0:= temp @kind object;
  #L4d72dc.  v5:= v5 - v3 @kind int;
  #L4d72de.  v0:= v0[v5];
  #L4d72e2.  goto L4d72f2;
  #L4d72e4.  call temp:= `f`() @signature `Lx1/d0;.f:()[I` @kind static;
  #L4d72ea.  v0:= temp @kind object;
  #L4d72ec.  v5:= v5 - v3 @kind int;
  #L4d72ee.  v0:= v0[v5];
  #L4d72f2.  v8.`x1.d0$a.f` @type ^`int` := v0;
  #L4d72f6.  v0:= v0 * 12;
  #L4d72fa.  v4:= v8.`x1.d0$a.d` @type ^`int`;
  #L4d72fe.  v0:= v0 / v4 @kind int;
  #L4d7300.  v0:= v0 + v1 @kind int;
  #L4d7302.  v0:= v0 * 4;
  #L4d7306.  v8.`x1.d0$a.c` @type ^`int` := v0;
  #L4d730a.  goto L4d7372;
  #L4d730c.  v7:= 144I;
  #L4d7310.  if v0 != v2 then goto L4d7348;
  #L4d7314.  if v4 != v6 then goto L4d7328;
  #L4d7318.  call temp:= `g`() @signature `Lx1/d0;.g:()[I` @kind static;
  #L4d731e.  v0:= temp @kind object;
  #L4d7320.  v5:= v5 - v3 @kind int;
  #L4d7322.  v0:= v0[v5];
  #L4d7326.  goto L4d7336;
  #L4d7328.  call temp:= `h`() @signature `Lx1/d0;.h:()[I` @kind static;
  #L4d732e.  v0:= temp @kind object;
  #L4d7330.  v5:= v5 - v3 @kind int;
  #L4d7332.  v0:= v0[v5];
  #L4d7336.  v8.`x1.d0$a.f` @type ^`int` := v0;
  #L4d733a.  v0:= v0 * 144;
  #L4d733e.  v4:= v8.`x1.d0$a.d` @type ^`int`;
  #L4d7342.  v0:= v0 / v4 @kind int;
  #L4d7344.  v0:= v0 + v1 @kind int;
  #L4d7346.  goto L4d7306;
  #L4d7348.  call temp:= `i`() @signature `Lx1/d0;.i:()[I` @kind static;
  #L4d734e.  v0:= temp @kind object;
  #L4d7350.  v5:= v5 - v3 @kind int;
  #L4d7352.  v0:= v0[v5];
  #L4d7356.  v8.`x1.d0$a.f` @type ^`int` := v0;
  #L4d735a.  if v4 != v3 then goto L4d7362;
  #L4d735e.  v7:= 72I;
  #L4d7362.  v7:= v7 * v0 @kind int;
  #L4d7366.  v0:= v8.`x1.d0$a.d` @type ^`int`;
  #L4d736a.  v7:= v7 / v0 @kind int;
  #L4d736c.  v7:= v7 + v1 @kind int;
  #L4d736e.  v8.`x1.d0$a.c` @type ^`int` := v7;
  #L4d7372.  v9:= v9 ^> 6;
  #L4d7376.  v9:= v9 ^& v2 @kind int;
  #L4d7378.  if v9 != v2 then goto L4d737e;
  #L4d737c.  v6:= 1I;
  #L4d737e.  v8.`x1.d0$a.e` @type ^`int` := v6;
  #L4d7382.  return v3;
  #L4d7384.  return v1;
}
