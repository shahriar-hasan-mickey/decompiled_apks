record `x1.f$b` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Exception` @kind class {
}
procedure `void` `<init>`(`x1.f$b` v2 @kind this, `x1.f$a` v3 @kind object) @signature `Lx1/f$b;.<init>:(Lx1/f$a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4d11e4.  v0:= new `java.lang.StringBuilder`;
  #L4d11e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4d11ee.  v1:= "Unhandled format: " @kind object;
  #L4d11f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4d11f8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4d11fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4d1204.  v3:= temp @kind object;
  #L4d1206.  call `<init>`(v2, v3) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4d120c.  return @kind void;
}
