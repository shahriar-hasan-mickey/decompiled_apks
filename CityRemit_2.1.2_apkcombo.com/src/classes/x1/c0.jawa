record `x1.c0` @kind class @AccessFlag PUBLIC extends `m2.o` @kind class, `s3.s` @kind interface {
  `android.content.Context` `x1.c0.T0` @AccessFlag PRIVATE_FINAL;
  `x1.r$a` `x1.c0.U0` @AccessFlag PRIVATE_FINAL;
  `x1.s` `x1.c0.V0` @AccessFlag PRIVATE_FINAL;
  `int` `x1.c0.W0` @AccessFlag PRIVATE;
  `boolean` `x1.c0.X0` @AccessFlag PRIVATE;
  `v1.j1` `x1.c0.Y0` @AccessFlag PRIVATE;
  `long` `x1.c0.Z0` @AccessFlag PRIVATE;
  `boolean` `x1.c0.a1` @AccessFlag PRIVATE;
  `boolean` `x1.c0.b1` @AccessFlag PRIVATE;
  `boolean` `x1.c0.c1` @AccessFlag PRIVATE;
  `boolean` `x1.c0.d1` @AccessFlag PRIVATE;
  `v1.r2$a` `x1.c0.e1` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`x1.c0` v6 @kind this, `android.content.Context` v7 @kind object, `m2.l$b` v8 @kind object, `m2.q` v9 @kind object, `boolean` v10 , `android.os.Handler` v11 @kind object, `x1.r` v12 @kind object, `x1.s` v13 @kind object) @signature `Lx1/c0;.<init>:(Landroid/content/Context;Lm2/l$b;Lm2/q;ZLandroid/os/Handler;Lx1/r;Lx1/s;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4d6b9c.  v1:= 1I;
  #L4d6b9e.  v5:= 1194083328I;
  #L4d6ba4.  v0:= v6 @kind object;
  #L4d6ba6.  v2:= v8 @kind object;
  #L4d6ba8.  v3:= v9 @kind object;
  #L4d6baa.  v4:= v10;
  #L4d6bac.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lm2/o;.<init>:(ILm2/l$b;Lm2/q;ZF)V` @kind direct;
  #L4d6bb2.  call temp:= `getApplicationContext`(v7) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L4d6bb8.  v7:= temp @kind object;
  #L4d6bba.  v6.`x1.c0.T0` @type ^`android.content.Context` := v7 @kind object;
  #L4d6bbe.  v6.`x1.c0.V0` @type ^`x1.s` := v13 @kind object;
  #L4d6bc2.  v7:= new `x1.r$a`;
  #L4d6bc6.  call `<init>`(v7, v11, v12) @signature `Lx1/r$a;.<init>:(Landroid/os/Handler;Lx1/r;)V` @kind direct;
  #L4d6bcc.  v6.`x1.c0.U0` @type ^`x1.r$a` := v7 @kind object;
  #L4d6bd0.  v7:= new `x1.c0$b`;
  #L4d6bd4.  v8:= 0I;
  #L4d6bd6.  call `<init>`(v7, v6, v8) @signature `Lx1/c0$b;.<init>:(Lx1/c0;Lx1/c0$a;)V` @kind direct;
  #L4d6bdc.  call `q`(v13, v7) @signature `Lx1/s;.q:(Lx1/s$c;)V` @kind interface;
  #L4d6be2.  return @kind void;
}
procedure `x1.r$a` `q1`(`x1.c0` v0 @kind object) @signature `Lx1/c0;.q1:(Lx1/c0;)Lx1/r$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4d7194.  v0:= v0.`x1.c0.U0` @type ^`x1.r$a` @kind object;
  #L4d7198.  return v0 @kind object;
}
procedure `v1.r2$a` `r1`(`x1.c0` v0 @kind object) @signature `Lx1/c0;.r1:(Lx1/c0;)Lv1/r2$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4d6b84.  v0:= v0.`x1.c0.e1` @type ^`v1.r2$a` @kind object;
  #L4d6b88.  return v0 @kind object;
}
procedure `boolean` `s1`(`java.lang.String` v2 @kind object) @signature `Lx1/c0;.s1:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4d6514.  v0:= `@@s3.l0.a` @type ^`int`;
  #L4d6518.  v1:= 24I;
  #L4d651c.  if v0 >= v1 then goto L4d657c;
  #L4d6520.  v0:= "OMX.SEC.aac.dec" @kind object;
  #L4d6524.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d652a.  v2:= temp;
  #L4d652c.  if v2 == 0 then goto L4d657c;
  #L4d6530.  v2:= `@@s3.l0.c` @type ^`java.lang.String` @kind object;
  #L4d6534.  v0:= "samsung" @kind object;
  #L4d6538.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d653e.  v2:= temp;
  #L4d6540.  if v2 == 0 then goto L4d657c;
  #L4d6544.  v2:= `@@s3.l0.b` @type ^`java.lang.String` @kind object;
  #L4d6548.  v0:= "zeroflte" @kind object;
  #L4d654c.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4d6552.  v0:= temp;
  #L4d6554.  if v0 != 0 then goto L4d6578;
  #L4d6558.  v0:= "herolte" @kind object;
  #L4d655c.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4d6562.  v0:= temp;
  #L4d6564.  if v0 != 0 then goto L4d6578;
  #L4d6568.  v0:= "heroqlte" @kind object;
  #L4d656c.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4d6572.  v2:= temp;
  #L4d6574.  if v2 == 0 then goto L4d657c;
  #L4d6578.  v2:= 1I;
  #L4d657a.  goto L4d657e;
  #L4d657c.  v2:= 0I;
  #L4d657e.  return v2;
}
procedure `boolean` `t1`() @signature `Lx1/c0;.t1:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4d6590.  v0:= `@@s3.l0.a` @type ^`int`;
  #L4d6594.  v1:= 23I;
  #L4d6598.  if v0 != v1 then goto L4d65c4;
  #L4d659c.  v0:= `@@s3.l0.d` @type ^`java.lang.String` @kind object;
  #L4d65a0.  v1:= "ZTE B2017G" @kind object;
  #L4d65a4.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d65aa.  v1:= temp;
  #L4d65ac.  if v1 != 0 then goto L4d65c0;
  #L4d65b0.  v1:= "AXON 7 mini" @kind object;
  #L4d65b4.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d65ba.  v0:= temp;
  #L4d65bc.  if v0 == 0 then goto L4d65c4;
  #L4d65c0.  v0:= 1I;
  #L4d65c2.  goto L4d65c6;
  #L4d65c4.  v0:= 0I;
  #L4d65c6.  return v0;
}
procedure `int` `u1`(`x1.c0` v1 @kind this, `m2.n` v2 @kind object, `v1.j1` v3 @kind object) @signature `Lx1/c0;.u1:(Lm2/n;Lv1/j1;)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4d677c.  v2:= v2.`m2.n.a` @type ^`java.lang.String` @kind object;
  #L4d6780.  v0:= "OMX.google.raw.decoder" @kind object;
  #L4d6784.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d678a.  v2:= temp;
  #L4d678c.  if v2 == 0 then goto L4d67b8;
  #L4d6790.  v2:= `@@s3.l0.a` @type ^`int`;
  #L4d6794.  v0:= 24I;
  #L4d6798.  if v2 >= v0 then goto L4d67b8;
  #L4d679c.  v0:= 23I;
  #L4d67a0.  if v2 != v0 then goto L4d67b4;
  #L4d67a4.  v2:= v1.`x1.c0.T0` @type ^`android.content.Context` @kind object;
  #L4d67a8.  call temp:= `v0`(v2) @signature `Ls3/l0;.v0:(Landroid/content/Context;)Z` @kind static;
  #L4d67ae.  v2:= temp;
  #L4d67b0.  if v2 != 0 then goto L4d67b8;
  #L4d67b4.  v2:= -1I;
  #L4d67b6.  return v2;
  #L4d67b8.  v2:= v3.`v1.j1.A` @type ^`int`;
  #L4d67bc.  return v2;
}
procedure `java.util.List` `w1`(`m2.q` v1 @kind object, `v1.j1` v2 @kind object, `boolean` v3 , `x1.s` v4 @kind object) @signature `Lx1/c0;.w1:(Lm2/q;Lv1/j1;ZLx1/s;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4d6a0c.  v0:= v2.`v1.j1.z` @type ^`java.lang.String` @kind object;
  #L4d6a10.  if v0 != 0 then goto L4d6a1e;
  #L4d6a14.  call temp:= `a0`() @signature `Lm5/q;.a0:()Lm5/q;` @kind static;
  #L4d6a1a.  v1:= temp @kind object;
  #L4d6a1c.  return v1 @kind object;
  #L4d6a1e.  call temp:= `a`(v4, v2) @signature `Lx1/s;.a:(Lv1/j1;)Z` @kind interface;
  #L4d6a24.  v4:= temp;
  #L4d6a26.  if v4 == 0 then goto L4d6a40;
  #L4d6a2a.  call temp:= `v`() @signature `Lm2/v;.v:()Lm2/n;` @kind static;
  #L4d6a30.  v4:= temp @kind object;
  #L4d6a32.  if v4 == 0 then goto L4d6a40;
  #L4d6a36.  call temp:= `b0`(v4) @signature `Lm5/q;.b0:(Ljava/lang/Object;)Lm5/q;` @kind static;
  #L4d6a3c.  v1:= temp @kind object;
  #L4d6a3e.  return v1 @kind object;
  #L4d6a40.  v4:= 0I;
  #L4d6a42.  call temp:= `a`(v1, v0, v3, v4) @signature `Lm2/q;.a:(Ljava/lang/String;ZZ)Ljava/util/List;` @kind interface;
  #L4d6a48.  v0:= temp @kind object;
  #L4d6a4a.  call temp:= `m`(v2) @signature `Lm2/v;.m:(Lv1/j1;)Ljava/lang/String;` @kind static;
  #L4d6a50.  v2:= temp @kind object;
  #L4d6a52.  if v2 != 0 then goto L4d6a60;
  #L4d6a56.  call temp:= `Q`(v0) @signature `Lm5/q;.Q:(Ljava/util/Collection;)Lm5/q;` @kind static;
  #L4d6a5c.  v1:= temp @kind object;
  #L4d6a5e.  return v1 @kind object;
  #L4d6a60.  call temp:= `a`(v1, v2, v3, v4) @signature `Lm2/q;.a:(Ljava/lang/String;ZZ)Ljava/util/List;` @kind interface;
  #L4d6a66.  v1:= temp @kind object;
  #L4d6a68.  call temp:= `N`() @signature `Lm5/q;.N:()Lm5/q$a;` @kind static;
  #L4d6a6e.  v2:= temp @kind object;
  #L4d6a70.  call temp:= `g`(v2, v0) @signature `Lm5/q$a;.g:(Ljava/lang/Iterable;)Lm5/q$a;` @kind virtual;
  #L4d6a76.  v2:= temp @kind object;
  #L4d6a78.  call temp:= `g`(v2, v1) @signature `Lm5/q$a;.g:(Ljava/lang/Iterable;)Lm5/q$a;` @kind virtual;
  #L4d6a7e.  v1:= temp @kind object;
  #L4d6a80.  call temp:= `h`(v1) @signature `Lm5/q$a;.h:()Lm5/q;` @kind virtual;
  #L4d6a86.  v1:= temp @kind object;
  #L4d6a88.  return v1 @kind object;
}
procedure `void` `z1`(`x1.c0` v5 @kind this) @signature `Lx1/c0;.z1:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4d7140.  v0:= v5.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d7144.  call temp:= `b`(v5) @signature `Lx1/c0;.b:()Z` @kind virtual;
  #L4d714a.  v1:= temp;
  #L4d714c.  call temp:= `s`(v0, v1) @signature `Lx1/s;.s:(Z)J` @kind interface;
  #L4d7152.  v0:= temp @kind wide;
  #L4d7154.  v2:= -9223372036854775808L;
  #L4d7158.  v4:= lcmp(v0, v2);
  #L4d715c.  if v4 == 0 then goto L4d7180;
  #L4d7160.  v2:= v5.`x1.c0.b1` @type ^`boolean` @kind boolean;
  #L4d7164.  if v2 == 0 then goto L4d716a;
  #L4d7168.  goto L4d7176;
  #L4d716a.  v2:= v5.`x1.c0.Z0` @type ^`long` @kind wide;
  #L4d716e.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L4d7174.  v0:= temp @kind wide;
  #L4d7176.  v5.`x1.c0.Z0` @type ^`long` := v0 @kind wide;
  #L4d717a.  v0:= 0I;
  #L4d717c.  v5.`x1.c0.b1` @type ^`boolean` := v0 @kind boolean;
  #L4d7180.  return @kind void;
}
procedure `void` `I`(`x1.c0` v3 @kind this) @signature `Lx1/c0;.I:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4d6d18.  v0:= 1I;
  #L4d6d1a.  v3.`x1.c0.c1` @type ^`boolean` := v0 @kind boolean;
  #L4d6d1e.  v0:= v3.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6d22.  call `flush`(v0) @signature `Lx1/s;.flush:()V` @kind interface;
  #L4d6d28.  call `I`(v3) @signature `Lm2/o;.I:()V` @kind super;
  #L4d6d2e.  v0:= v3.`x1.c0.U0` @type ^`x1.r$a` @kind object;
  #L4d6d32.  v1:= v3.`m2.o.O0` @type ^`y1.e` @kind object;
  #L4d6d36.  call `o`(v0, v1) @signature `Lx1/r$a;.o:(Ly1/e;)V` @kind virtual;
  #L4d6d3c.  return @kind void;
  #L4d6d3e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d6d40.  v1:= v3.`x1.c0.U0` @type ^`x1.r$a` @kind object;
  #L4d6d44.  v2:= v3.`m2.o.O0` @type ^`y1.e` @kind object;
  #L4d6d48.  call `o`(v1, v2) @signature `Lx1/r$a;.o:(Ly1/e;)V` @kind virtual;
  #L4d6d4e.  throw v0;
  #L4d6d50.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d6d52.  call `I`(v3) @signature `Lm2/o;.I:()V` @kind super;
  #L4d6d58.  v1:= v3.`x1.c0.U0` @type ^`x1.r$a` @kind object;
  #L4d6d5c.  v2:= v3.`m2.o.O0` @type ^`y1.e` @kind object;
  #L4d6d60.  call `o`(v1, v2) @signature `Lx1/r$a;.o:(Ly1/e;)V` @kind virtual;
  #L4d6d66.  throw v0;
  #L4d6d68.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d6d6a.  v1:= v3.`x1.c0.U0` @type ^`x1.r$a` @kind object;
  #L4d6d6e.  v2:= v3.`m2.o.O0` @type ^`y1.e` @kind object;
  #L4d6d72.  call `o`(v1, v2) @signature `Lx1/r$a;.o:(Ly1/e;)V` @kind virtual;
  #L4d6d78.  throw v0;
  catch `java.lang.Throwable` @[L4d6d1e..L4d6d28] goto L4d6d50;
  catch `java.lang.Throwable` @[L4d6d28..L4d6d2e] goto L4d6d3e;
  catch `java.lang.Throwable` @[L4d6d52..L4d6d58] goto L4d6d68;
}
procedure `void` `J`(`x1.c0` v0 @kind this, `boolean` v1 , `boolean` v2 ) @signature `Lx1/c0;.J:(ZZ)V` @AccessFlag PROTECTED {
    temp;

  #L4d6dac.  call `J`(v0, v1, v2) @signature `Lm2/o;.J:(ZZ)V` @kind super;
  #L4d6db2.  v1:= v0.`x1.c0.U0` @type ^`x1.r$a` @kind object;
  #L4d6db6.  v2:= v0.`m2.o.O0` @type ^`y1.e` @kind object;
  #L4d6dba.  call `p`(v1, v2) @signature `Lx1/r$a;.p:(Ly1/e;)V` @kind virtual;
  #L4d6dc0.  call temp:= `C`(v0) @signature `Lv1/f;.C:()Lv1/u2;` @kind virtual;
  #L4d6dc6.  v1:= temp @kind object;
  #L4d6dc8.  v1:= v1.`v1.u2.a` @type ^`boolean` @kind boolean;
  #L4d6dcc.  if v1 == 0 then goto L4d6ddc;
  #L4d6dd0.  v1:= v0.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6dd4.  call `h`(v1) @signature `Lx1/s;.h:()V` @kind interface;
  #L4d6dda.  goto L4d6de6;
  #L4d6ddc.  v1:= v0.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6de0.  call `t`(v1) @signature `Lx1/s;.t:()V` @kind interface;
  #L4d6de6.  v1:= v0.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6dea.  call temp:= `F`(v0) @signature `Lv1/f;.F:()Lw1/t1;` @kind virtual;
  #L4d6df0.  v2:= temp @kind object;
  #L4d6df2.  call `n`(v1, v2) @signature `Lx1/s;.n:(Lw1/t1;)V` @kind interface;
  #L4d6df8.  return @kind void;
}
procedure `void` `K`(`x1.c0` v0 @kind this, `long` v1 , `boolean` v3 ) @signature `Lx1/c0;.K:(JZ)V` @AccessFlag PROTECTED {
    temp;

  #L4d6f80.  call `K`(v0, v1, v3) @signature `Lm2/o;.K:(JZ)V` @kind super;
  #L4d6f86.  v3:= v0.`x1.c0.d1` @type ^`boolean` @kind boolean;
  #L4d6f8a.  if v3 == 0 then goto L4d6f9a;
  #L4d6f8e.  v3:= v0.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6f92.  call `u`(v3) @signature `Lx1/s;.u:()V` @kind interface;
  #L4d6f98.  goto L4d6fa4;
  #L4d6f9a.  v3:= v0.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6f9e.  call `flush`(v3) @signature `Lx1/s;.flush:()V` @kind interface;
  #L4d6fa4.  v0.`x1.c0.Z0` @type ^`long` := v1 @kind wide;
  #L4d6fa8.  v1:= 1I;
  #L4d6faa.  v0.`x1.c0.a1` @type ^`boolean` := v1 @kind boolean;
  #L4d6fae.  v0.`x1.c0.b1` @type ^`boolean` := v1 @kind boolean;
  #L4d6fb2.  return @kind void;
}
procedure `void` `K0`(`x1.c0` v2 @kind this, `java.lang.Exception` v3 @kind object) @signature `Lx1/c0;.K0:(Ljava/lang/Exception;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4d6cac.  v0:= "MediaCodecAudioRenderer" @kind object;
  #L4d6cb0.  v1:= "Audio codec error" @kind object;
  #L4d6cb4.  call `d`(v0, v1, v3) @signature `Ls3/q;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L4d6cba.  v0:= v2.`x1.c0.U0` @type ^`x1.r$a` @kind object;
  #L4d6cbe.  call `k`(v0, v3) @signature `Lx1/r$a;.k:(Ljava/lang/Exception;)V` @kind virtual;
  #L4d6cc4.  return @kind void;
}
procedure `void` `L`(`x1.c0` v3 @kind this) @signature `Lx1/c0;.L:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4d703c.  v0:= 0I;
  #L4d703e.  call `L`(v3) @signature `Lm2/o;.L:()V` @kind super;
  #L4d7044.  v1:= v3.`x1.c0.c1` @type ^`boolean` @kind boolean;
  #L4d7048.  if v1 == 0 then goto L4d705a;
  #L4d704c.  v3.`x1.c0.c1` @type ^`boolean` := v0 @kind boolean;
  #L4d7050.  v0:= v3.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d7054.  call `c`(v0) @signature `Lx1/s;.c:()V` @kind interface;
  #L4d705a.  return @kind void;
  #L4d705c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4d705e.  v2:= v3.`x1.c0.c1` @type ^`boolean` @kind boolean;
  #L4d7062.  if v2 == 0 then goto L4d7074;
  #L4d7066.  v3.`x1.c0.c1` @type ^`boolean` := v0 @kind boolean;
  #L4d706a.  v0:= v3.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d706e.  call `c`(v0) @signature `Lx1/s;.c:()V` @kind interface;
  #L4d7074.  throw v1;
  catch `java.lang.Throwable` @[L4d703e..L4d7044] goto L4d705c;
}
procedure `void` `L0`(`x1.c0` v6 @kind this, `java.lang.String` v7 @kind object, `m2.l$a` v8 @kind object, `long` v9 , `long` v11 ) @signature `Lx1/c0;.L0:(Ljava/lang/String;Lm2/l$a;JJ)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4d6cd8.  v0:= v6.`x1.c0.U0` @type ^`x1.r$a` @kind object;
  #L4d6cdc.  v1:= v7 @kind object;
  #L4d6cde.  v2:= v9 @kind wide;
  #L4d6ce0.  v4:= v11 @kind wide;
  #L4d6ce2.  call `m`(v0, v1, v2, v4) @signature `Lx1/r$a;.m:(Ljava/lang/String;JJ)V` @kind virtual;
  #L4d6ce8.  return @kind void;
}
procedure `void` `M`(`x1.c0` v1 @kind this) @signature `Lx1/c0;.M:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4d7094.  call `M`(v1) @signature `Lm2/o;.M:()V` @kind super;
  #L4d709a.  v0:= v1.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d709e.  call `p`(v0) @signature `Lx1/s;.p:()V` @kind interface;
  #L4d70a4.  return @kind void;
}
procedure `void` `M0`(`x1.c0` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lx1/c0;.M0:(Ljava/lang/String;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4d6cfc.  v0:= v1.`x1.c0.U0` @type ^`x1.r$a` @kind object;
  #L4d6d00.  call `n`(v0, v2) @signature `Lx1/r$a;.n:(Ljava/lang/String;)V` @kind virtual;
  #L4d6d06.  return @kind void;
}
procedure `void` `N`(`x1.c0` v1 @kind this) @signature `Lx1/c0;.N:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4d70b8.  call `z1`(v1) @signature `Lx1/c0;.z1:()V` @kind direct;
  #L4d70be.  v0:= v1.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d70c2.  call `d`(v0) @signature `Lx1/s;.d:()V` @kind interface;
  #L4d70c8.  call `N`(v1) @signature `Lm2/o;.N:()V` @kind super;
  #L4d70ce.  return @kind void;
}
procedure `y1.i` `N0`(`x1.c0` v2 @kind this, `v1.k1` v3 @kind object) @signature `Lx1/c0;.N0:(Lv1/k1;)Ly1/i;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4d7204.  call temp:= `N0`(v2, v3) @signature `Lm2/o;.N0:(Lv1/k1;)Ly1/i;` @kind super;
  #L4d720a.  v0:= temp @kind object;
  #L4d720c.  v1:= v2.`x1.c0.U0` @type ^`x1.r$a` @kind object;
  #L4d7210.  v3:= v3.`v1.k1.b` @type ^`v1.j1` @kind object;
  #L4d7214.  call `q`(v1, v3, v0) @signature `Lx1/r$a;.q:(Lv1/j1;Ly1/i;)V` @kind virtual;
  #L4d721a.  return v0 @kind object;
}
procedure `void` `O0`(`x1.c0` v5 @kind this, `v1.j1` v6 @kind object, `android.media.MediaFormat` v7 @kind object) @signature `Lx1/c0;.O0:(Lv1/j1;Landroid/media/MediaFormat;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4d6e0c.  v0:= v5.`x1.c0.Y0` @type ^`v1.j1` @kind object;
  #L4d6e10.  v1:= 0I;
  #L4d6e12.  v2:= 0I;
  #L4d6e14.  if v0 == 0 then goto L4d6e1e;
  #L4d6e18.  v6:= v0 @kind object;
  #L4d6e1a.  goto L4d6f28;
  #L4d6e1e.  call temp:= `q0`(v5) @signature `Lm2/o;.q0:()Lm2/l;` @kind virtual;
  #L4d6e24.  v0:= temp @kind object;
  #L4d6e26.  if v0 != 0 then goto L4d6e2e;
  #L4d6e2a.  goto L4d6f28;
  #L4d6e2e.  v0:= v6.`v1.j1.z` @type ^`java.lang.String` @kind object;
  #L4d6e32.  v3:= "audio/raw" @kind object;
  #L4d6e36.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d6e3c.  v0:= temp;
  #L4d6e3e.  if v0 == 0 then goto L4d6e48;
  #L4d6e42.  v0:= v6.`v1.j1.O` @type ^`int`;
  #L4d6e46.  goto L4d6e92;
  #L4d6e48.  v0:= `@@s3.l0.a` @type ^`int`;
  #L4d6e4c.  v4:= 24I;
  #L4d6e50.  if v0 < v4 then goto L4d6e6e;
  #L4d6e54.  v0:= "pcm-encoding" @kind object;
  #L4d6e58.  call temp:= `containsKey`(v7, v0) @signature `Landroid/media/MediaFormat;.containsKey:(Ljava/lang/String;)Z` @kind virtual;
  #L4d6e5e.  v4:= temp;
  #L4d6e60.  if v4 == 0 then goto L4d6e6e;
  #L4d6e64.  call temp:= `getInteger`(v7, v0) @signature `Landroid/media/MediaFormat;.getInteger:(Ljava/lang/String;)I` @kind virtual;
  #L4d6e6a.  v0:= temp;
  #L4d6e6c.  goto L4d6e92;
  #L4d6e6e.  v0:= "v-bits-per-sample" @kind object;
  #L4d6e72.  call temp:= `containsKey`(v7, v0) @signature `Landroid/media/MediaFormat;.containsKey:(Ljava/lang/String;)Z` @kind virtual;
  #L4d6e78.  v4:= temp;
  #L4d6e7a.  if v4 == 0 then goto L4d6e90;
  #L4d6e7e.  call temp:= `getInteger`(v7, v0) @signature `Landroid/media/MediaFormat;.getInteger:(Ljava/lang/String;)I` @kind virtual;
  #L4d6e84.  v0:= temp;
  #L4d6e86.  call temp:= `b0`(v0) @signature `Ls3/l0;.b0:(I)I` @kind static;
  #L4d6e8c.  v0:= temp;
  #L4d6e8e.  goto L4d6e92;
  #L4d6e90.  v0:= 2I;
  #L4d6e92.  v4:= new `v1.j1$b`;
  #L4d6e96.  call `<init>`(v4) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L4d6e9c.  call temp:= `e0`(v4, v3) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L4d6ea2.  v3:= temp @kind object;
  #L4d6ea4.  call temp:= `Y`(v3, v0) @signature `Lv1/j1$b;.Y:(I)Lv1/j1$b;` @kind virtual;
  #L4d6eaa.  v0:= temp @kind object;
  #L4d6eac.  v3:= v6.`v1.j1.P` @type ^`int`;
  #L4d6eb0.  call temp:= `N`(v0, v3) @signature `Lv1/j1$b;.N:(I)Lv1/j1$b;` @kind virtual;
  #L4d6eb6.  v0:= temp @kind object;
  #L4d6eb8.  v3:= v6.`v1.j1.Q` @type ^`int`;
  #L4d6ebc.  call temp:= `O`(v0, v3) @signature `Lv1/j1$b;.O:(I)Lv1/j1$b;` @kind virtual;
  #L4d6ec2.  v0:= temp @kind object;
  #L4d6ec4.  v3:= "channel-count" @kind object;
  #L4d6ec8.  call temp:= `getInteger`(v7, v3) @signature `Landroid/media/MediaFormat;.getInteger:(Ljava/lang/String;)I` @kind virtual;
  #L4d6ece.  v3:= temp;
  #L4d6ed0.  call temp:= `H`(v0, v3) @signature `Lv1/j1$b;.H:(I)Lv1/j1$b;` @kind virtual;
  #L4d6ed6.  v0:= temp @kind object;
  #L4d6ed8.  v3:= "sample-rate" @kind object;
  #L4d6edc.  call temp:= `getInteger`(v7, v3) @signature `Landroid/media/MediaFormat;.getInteger:(Ljava/lang/String;)I` @kind virtual;
  #L4d6ee2.  v7:= temp;
  #L4d6ee4.  call temp:= `f0`(v0, v7) @signature `Lv1/j1$b;.f0:(I)Lv1/j1$b;` @kind virtual;
  #L4d6eea.  v7:= temp @kind object;
  #L4d6eec.  call temp:= `E`(v7) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L4d6ef2.  v7:= temp @kind object;
  #L4d6ef4.  v0:= v5.`x1.c0.X0` @type ^`boolean` @kind boolean;
  #L4d6ef8.  if v0 == 0 then goto L4d6f26;
  #L4d6efc.  v0:= v7.`v1.j1.M` @type ^`int`;
  #L4d6f00.  v3:= 6I;
  #L4d6f02.  if v0 != v3 then goto L4d6f26;
  #L4d6f06.  v0:= v6.`v1.j1.M` @type ^`int`;
  #L4d6f0a.  if v0 >= v3 then goto L4d6f26;
  #L4d6f0e.  v2:= new `int`[v0];
  #L4d6f12.  v0:= 0I;
  #L4d6f14.  v3:= v6.`v1.j1.M` @type ^`int`;
  #L4d6f18.  if v0 >= v3 then goto L4d6f26;
  #L4d6f1c.  v2[v0]:= v0;
  #L4d6f20.  v0:= v0 + 1;
  #L4d6f24.  goto L4d6f14;
  #L4d6f26.  v6:= v7 @kind object;
  #L4d6f28.  v7:= v5.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6f2c.  call `o`(v7, v6, v1, v2) @signature `Lx1/s;.o:(Lv1/j1;I[I)V` @kind interface;
  #L4d6f32.  return @kind void;
  #L4d6f34.  v6:= Exception @type ^`x1.s$a` @kind object;
  #L4d6f36.  v7:= v6.`x1.s$a.o` @type ^`v1.j1` @kind object;
  #L4d6f3a.  v0:= 5001I;
  #L4d6f3e.  call temp:= `A`(v5, v6, v7, v0) @signature `Lv1/f;.A:(Ljava/lang/Throwable;Lv1/j1;I)Lv1/n;` @kind virtual;
  #L4d6f44.  v6:= temp @kind object;
  #L4d6f46.  throw v6;
  catch `x1.s$a` @[L4d6f28..L4d6f32] goto L4d6f34;
}
procedure `void` `Q0`(`x1.c0` v1 @kind this) @signature `Lx1/c0;.Q0:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4d6fc4.  call `Q0`(v1) @signature `Lm2/o;.Q0:()V` @kind super;
  #L4d6fca.  v0:= v1.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6fce.  call `x`(v0) @signature `Lx1/s;.x:()V` @kind interface;
  #L4d6fd4.  return @kind void;
}
procedure `void` `R0`(`x1.c0` v5 @kind this, `y1.g` v6 @kind object) @signature `Lx1/c0;.R0:(Ly1/g;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4d6fe8.  v0:= v5.`x1.c0.a1` @type ^`boolean` @kind boolean;
  #L4d6fec.  if v0 == 0 then goto L4d702a;
  #L4d6ff0.  call temp:= `s`(v6) @signature `Ly1/a;.s:()Z` @kind virtual;
  #L4d6ff6.  v0:= temp;
  #L4d6ff8.  if v0 != 0 then goto L4d702a;
  #L4d6ffc.  v0:= v6.`y1.g.s` @type ^`long` @kind wide;
  #L4d7000.  v2:= v5.`x1.c0.Z0` @type ^`long` @kind wide;
  #L4d7004.  v0:= v0 - v2 @kind long;
  #L4d7006.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(J)J` @kind static;
  #L4d700c.  v0:= temp @kind wide;
  #L4d700e.  v2:= 500000L;
  #L4d7014.  v4:= lcmp(v0, v2);
  #L4d7018.  if v4 <= 0 then goto L4d7024;
  #L4d701c.  v0:= v6.`y1.g.s` @type ^`long` @kind wide;
  #L4d7020.  v5.`x1.c0.Z0` @type ^`long` := v0 @kind wide;
  #L4d7024.  v6:= 0I;
  #L4d7026.  v5.`x1.c0.a1` @type ^`boolean` := v6 @kind boolean;
  #L4d702a.  return @kind void;
}
procedure `boolean` `T0`(`x1.c0` v0 @kind this, `long` v1 , `long` v3 , `m2.l` v5 @kind object, `java.nio.ByteBuffer` v6 @kind object, `int` v7 , `int` v8 , `int` v9 , `long` v10 , `boolean` v12 , `boolean` v13 , `v1.j1` v14 @kind object) @signature `Lx1/c0;.T0:(JJLm2/l;Ljava/nio/ByteBuffer;IIIJZZLv1/j1;)Z` @AccessFlag PROTECTED {
    temp;

  #L4d6644.  call temp:= `e`(v6) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4d664a.  v1:= v0.`x1.c0.Y0` @type ^`v1.j1` @kind object;
  #L4d664e.  v2:= 1I;
  #L4d6650.  v3:= 0I;
  #L4d6652.  if v1 == 0 then goto L4d6672;
  #L4d6656.  v1:= v8 ^& 2;
  #L4d665a.  if v1 == 0 then goto L4d6672;
  #L4d665e.  call temp:= `e`(v5) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4d6664.  v1:= temp @kind object;
  #L4d6666.  v1:= (`m2.l`) v1 @kind object;
  #L4d666a.  call `d`(v1, v7, v3) @signature `Lm2/l;.d:(IZ)V` @kind interface;
  #L4d6670.  return v2;
  #L4d6672.  if v12 == 0 then goto L4d669a;
  #L4d6676.  if v5 == 0 then goto L4d6680;
  #L4d667a.  call `d`(v5, v7, v3) @signature `Lm2/l;.d:(IZ)V` @kind interface;
  #L4d6680.  v1:= v0.`m2.o.O0` @type ^`y1.e` @kind object;
  #L4d6684.  v3:= v1.`y1.e.f` @type ^`int`;
  #L4d6688.  v3:= v3 + v9 @kind int;
  #L4d668a.  v1.`y1.e.f` @type ^`int` := v3;
  #L4d668e.  v1:= v0.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6692.  call `x`(v1) @signature `Lx1/s;.x:()V` @kind interface;
  #L4d6698.  return v2;
  #L4d669a.  v1:= v0.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d669e.  call temp:= `r`(v1, v6, v10, v9) @signature `Lx1/s;.r:(Ljava/nio/ByteBuffer;JI)Z` @kind interface;
  #L4d66a4.  v1:= temp;
  #L4d66a6.  if v1 == 0 then goto L4d66c4;
  #L4d66aa.  if v5 == 0 then goto L4d66b4;
  #L4d66ae.  call `d`(v5, v7, v3) @signature `Lm2/l;.d:(IZ)V` @kind interface;
  #L4d66b4.  v1:= v0.`m2.o.O0` @type ^`y1.e` @kind object;
  #L4d66b8.  v3:= v1.`y1.e.e` @type ^`int`;
  #L4d66bc.  v3:= v3 + v9 @kind int;
  #L4d66be.  v1.`y1.e.e` @type ^`int` := v3;
  #L4d66c2.  return v2;
  #L4d66c4.  return v3;
  #L4d66c6.  v1:= Exception @type ^`x1.s$e` @kind object;
  #L4d66c8.  v2:= v1.`x1.s$e.p` @type ^`boolean` @kind boolean;
  #L4d66cc.  v3:= 5002I;
  #L4d66d0.  call temp:= `B`(v0, v1, v14, v2, v3) @signature `Lv1/f;.B:(Ljava/lang/Throwable;Lv1/j1;ZI)Lv1/n;` @kind virtual;
  #L4d66d6.  v1:= temp @kind object;
  #L4d66d8.  throw v1;
  #L4d66da.  v1:= Exception @type ^`x1.s$b` @kind object;
  #L4d66dc.  v2:= v1.`x1.s$b.q` @type ^`v1.j1` @kind object;
  #L4d66e0.  v3:= v1.`x1.s$b.p` @type ^`boolean` @kind boolean;
  #L4d66e4.  v4:= 5001I;
  #L4d66e8.  call temp:= `B`(v0, v1, v2, v3, v4) @signature `Lv1/f;.B:(Ljava/lang/Throwable;Lv1/j1;ZI)Lv1/n;` @kind virtual;
  #L4d66ee.  v1:= temp @kind object;
  #L4d66f0.  throw v1;
  catch `x1.s$b` @[L4d669a..L4d66a6] goto L4d66da;
  catch `x1.s$e` @[L4d669a..L4d66a6] goto L4d66c6;
}
procedure `y1.i` `U`(`x1.c0` v8 @kind this, `m2.n` v9 @kind object, `v1.j1` v10 @kind object, `v1.j1` v11 @kind object) @signature `Lx1/c0;.U:(Lm2/n;Lv1/j1;Lv1/j1;)Ly1/i;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4d71ac.  call temp:= `e`(v9, v10, v11) @signature `Lm2/n;.e:(Lv1/j1;Lv1/j1;)Ly1/i;` @kind virtual;
  #L4d71b2.  v0:= temp @kind object;
  #L4d71b4.  v1:= v0.`y1.i.e` @type ^`int`;
  #L4d71b8.  call temp:= `u1`(v8, v9, v11) @signature `Lx1/c0;.u1:(Lm2/n;Lv1/j1;)I` @kind direct;
  #L4d71be.  v2:= temp;
  #L4d71c0.  v3:= v8.`x1.c0.W0` @type ^`int`;
  #L4d71c4.  if v2 <= v3 then goto L4d71cc;
  #L4d71c8.  v1:= v1 ^| 64;
  #L4d71cc.  v7:= v1;
  #L4d71ce.  v1:= new `y1.i`;
  #L4d71d2.  v3:= v9.`m2.n.a` @type ^`java.lang.String` @kind object;
  #L4d71d6.  if v7 == 0 then goto L4d71e0;
  #L4d71da.  v9:= 0I;
  #L4d71dc.  v6:= 0I;
  #L4d71de.  goto L4d71e6;
  #L4d71e0.  v9:= v0.`y1.i.d` @type ^`int`;
  #L4d71e4.  v6:= v9;
  #L4d71e6.  v2:= v1 @kind object;
  #L4d71e8.  v4:= v10 @kind object;
  #L4d71ea.  v5:= v11 @kind object;
  #L4d71ec.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Ly1/i;.<init>:(Ljava/lang/String;Lv1/j1;Lv1/j1;II)V` @kind direct;
  #L4d71f2.  return v1 @kind object;
}
procedure `void` `Y0`(`x1.c0` v4 @kind this) @signature `Lx1/c0;.Y0:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4d70e0.  v0:= v4.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d70e4.  call `j`(v0) @signature `Lx1/s;.j:()V` @kind interface;
  #L4d70ea.  return @kind void;
  #L4d70ec.  v0:= Exception @type ^`x1.s$e` @kind object;
  #L4d70ee.  v1:= v0.`x1.s$e.q` @type ^`v1.j1` @kind object;
  #L4d70f2.  v2:= v0.`x1.s$e.p` @type ^`boolean` @kind boolean;
  #L4d70f6.  v3:= 5002I;
  #L4d70fa.  call temp:= `B`(v4, v0, v1, v2, v3) @signature `Lv1/f;.B:(Ljava/lang/Throwable;Lv1/j1;ZI)Lv1/n;` @kind virtual;
  #L4d7100.  v0:= temp @kind object;
  #L4d7102.  throw v0;
  catch `x1.s$e` @[L4d70e0..L4d70ea] goto L4d70ec;
}
procedure `boolean` `b`(`x1.c0` v1 @kind this) @signature `Lx1/c0;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d65d8.  call temp:= `b`(v1) @signature `Lm2/o;.b:()Z` @kind super;
  #L4d65de.  v0:= temp;
  #L4d65e0.  if v0 == 0 then goto L4d65f8;
  #L4d65e4.  v0:= v1.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d65e8.  call temp:= `b`(v0) @signature `Lx1/s;.b:()Z` @kind interface;
  #L4d65ee.  v0:= temp;
  #L4d65f0.  if v0 == 0 then goto L4d65f8;
  #L4d65f4.  v0:= 1I;
  #L4d65f6.  goto L4d65fa;
  #L4d65f8.  v0:= 0I;
  #L4d65fa.  return v0;
}
procedure `java.lang.String` `d`(`x1.c0` v1 @kind this) @signature `Lx1/c0;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d69cc.  v0:= "MediaCodecAudioRenderer" @kind object;
  #L4d69d0.  return v0 @kind object;
}
procedure `void` `e`(`x1.c0` v1 @kind this, `v1.j2` v2 @kind object) @signature `Lx1/c0;.e:(Lv1/j2;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d7124.  v0:= v1.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d7128.  call `e`(v0, v2) @signature `Lx1/s;.e:(Lv1/j2;)V` @kind interface;
  #L4d712e.  return @kind void;
}
procedure `boolean` `h`(`x1.c0` v1 @kind this) @signature `Lx1/c0;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d660c.  v0:= v1.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6610.  call temp:= `k`(v0) @signature `Lx1/s;.k:()Z` @kind interface;
  #L4d6616.  v0:= temp;
  #L4d6618.  if v0 != 0 then goto L4d662e;
  #L4d661c.  call temp:= `h`(v1) @signature `Lm2/o;.h:()Z` @kind super;
  #L4d6622.  v0:= temp;
  #L4d6624.  if v0 == 0 then goto L4d662a;
  #L4d6628.  goto L4d662e;
  #L4d662a.  v0:= 0I;
  #L4d662c.  goto L4d6630;
  #L4d662e.  v0:= 1I;
  #L4d6630.  return v0;
}
procedure `v1.j2` `i`(`x1.c0` v1 @kind this) @signature `Lx1/c0;.i:()Lv1/j2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d6b64.  v0:= v1.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6b68.  call temp:= `i`(v0) @signature `Lx1/s;.i:()Lv1/j2;` @kind interface;
  #L4d6b6e.  v0:= temp @kind object;
  #L4d6b70.  return v0 @kind object;
}
procedure `boolean` `k1`(`x1.c0` v1 @kind this, `v1.j1` v2 @kind object) @signature `Lx1/c0;.k1:(Lv1/j1;)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4d6714.  v0:= v1.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6718.  call temp:= `a`(v0, v2) @signature `Lx1/s;.a:(Lv1/j1;)Z` @kind interface;
  #L4d671e.  v2:= temp;
  #L4d6720.  return v2;
}
procedure `int` `l1`(`x1.c0` v10 @kind this, `m2.q` v11 @kind object, `v1.j1` v12 @kind object) @signature `Lx1/c0;.l1:(Lm2/q;Lv1/j1;)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4d6828.  v0:= v12.`v1.j1.z` @type ^`java.lang.String` @kind object;
  #L4d682c.  call temp:= `o`(v0) @signature `Ls3/u;.o:(Ljava/lang/String;)Z` @kind static;
  #L4d6832.  v0:= temp;
  #L4d6834.  v1:= 0I;
  #L4d6836.  if v0 != 0 then goto L4d6844;
  #L4d683a.  call temp:= `a`(v1) @signature `Lv1/s2;.a:(I)I` @kind static;
  #L4d6840.  v11:= temp;
  #L4d6842.  return v11;
  #L4d6844.  v0:= `@@s3.l0.a` @type ^`int`;
  #L4d6848.  v2:= 21I;
  #L4d684c.  if v0 < v2 then goto L4d6856;
  #L4d6850.  v0:= 32I;
  #L4d6854.  goto L4d6858;
  #L4d6856.  v0:= 0I;
  #L4d6858.  v2:= v12.`v1.j1.S` @type ^`int`;
  #L4d685c.  v3:= 1I;
  #L4d685e.  if v2 == 0 then goto L4d6866;
  #L4d6862.  v2:= 1I;
  #L4d6864.  goto L4d6868;
  #L4d6866.  v2:= 0I;
  #L4d6868.  call temp:= `m1`(v12) @signature `Lm2/o;.m1:(Lv1/j1;)Z` @kind static;
  #L4d686e.  v4:= temp;
  #L4d6870.  v5:= 8I;
  #L4d6874.  v6:= 4I;
  #L4d6876.  if v4 == 0 then goto L4d68a4;
  #L4d687a.  v7:= v10.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d687e.  call temp:= `a`(v7, v12) @signature `Lx1/s;.a:(Lv1/j1;)Z` @kind interface;
  #L4d6884.  v7:= temp;
  #L4d6886.  if v7 == 0 then goto L4d68a4;
  #L4d688a.  if v2 == 0 then goto L4d689a;
  #L4d688e.  call temp:= `v`() @signature `Lm2/v;.v:()Lm2/n;` @kind static;
  #L4d6894.  v2:= temp @kind object;
  #L4d6896.  if v2 == 0 then goto L4d68a4;
  #L4d689a.  call temp:= `b`(v6, v5, v0) @signature `Lv1/s2;.b:(III)I` @kind static;
  #L4d68a0.  v11:= temp;
  #L4d68a2.  return v11;
  #L4d68a4.  v2:= v12.`v1.j1.z` @type ^`java.lang.String` @kind object;
  #L4d68a8.  v7:= "audio/raw" @kind object;
  #L4d68ac.  call temp:= `equals`(v7, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d68b2.  v2:= temp;
  #L4d68b4.  if v2 == 0 then goto L4d68d2;
  #L4d68b8.  v2:= v10.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d68bc.  call temp:= `a`(v2, v12) @signature `Lx1/s;.a:(Lv1/j1;)Z` @kind interface;
  #L4d68c2.  v2:= temp;
  #L4d68c4.  if v2 != 0 then goto L4d68d2;
  #L4d68c8.  call temp:= `a`(v3) @signature `Lv1/s2;.a:(I)I` @kind static;
  #L4d68ce.  v11:= temp;
  #L4d68d0.  return v11;
  #L4d68d2.  v2:= v10.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d68d6.  v7:= v12.`v1.j1.M` @type ^`int`;
  #L4d68da.  v8:= v12.`v1.j1.N` @type ^`int`;
  #L4d68de.  v9:= 2I;
  #L4d68e0.  call temp:= `c0`(v9, v7, v8) @signature `Ls3/l0;.c0:(III)Lv1/j1;` @kind static;
  #L4d68e6.  v7:= temp @kind object;
  #L4d68e8.  call temp:= `a`(v2, v7) @signature `Lx1/s;.a:(Lv1/j1;)Z` @kind interface;
  #L4d68ee.  v2:= temp;
  #L4d68f0.  if v2 != 0 then goto L4d68fe;
  #L4d68f4.  call temp:= `a`(v3) @signature `Lv1/s2;.a:(I)I` @kind static;
  #L4d68fa.  v11:= temp;
  #L4d68fc.  return v11;
  #L4d68fe.  v2:= v10.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6902.  call temp:= `w1`(v11, v12, v1, v2) @signature `Lx1/c0;.w1:(Lm2/q;Lv1/j1;ZLx1/s;)Ljava/util/List;` @kind static;
  #L4d6908.  v11:= temp @kind object;
  #L4d690a.  call temp:= `isEmpty`(v11) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4d6910.  v2:= temp;
  #L4d6912.  if v2 == 0 then goto L4d6920;
  #L4d6916.  call temp:= `a`(v3) @signature `Lv1/s2;.a:(I)I` @kind static;
  #L4d691c.  v11:= temp;
  #L4d691e.  return v11;
  #L4d6920.  if v4 != 0 then goto L4d692e;
  #L4d6924.  call temp:= `a`(v9) @signature `Lv1/s2;.a:(I)I` @kind static;
  #L4d692a.  v11:= temp;
  #L4d692c.  return v11;
  #L4d692e.  call temp:= `get`(v11, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4d6934.  v2:= temp @kind object;
  #L4d6936.  v2:= (`m2.n`) v2 @kind object;
  #L4d693a.  call temp:= `m`(v2, v12) @signature `Lm2/n;.m:(Lv1/j1;)Z` @kind virtual;
  #L4d6940.  v4:= temp;
  #L4d6942.  if v4 != 0 then goto L4d6978;
  #L4d6946.  v7:= 1I;
  #L4d6948.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4d694e.  v8:= temp;
  #L4d6950.  if v7 >= v8 then goto L4d6978;
  #L4d6954.  call temp:= `get`(v11, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4d695a.  v8:= temp @kind object;
  #L4d695c.  v8:= (`m2.n`) v8 @kind object;
  #L4d6960.  call temp:= `m`(v8, v12) @signature `Lm2/n;.m:(Lv1/j1;)Z` @kind virtual;
  #L4d6966.  v9:= temp;
  #L4d6968.  if v9 == 0 then goto L4d6972;
  #L4d696c.  v2:= v8 @kind object;
  #L4d696e.  v11:= 0I;
  #L4d6970.  goto L4d697c;
  #L4d6972.  v7:= v7 + 1;
  #L4d6976.  goto L4d6948;
  #L4d6978.  v3:= v4;
  #L4d697a.  v11:= 1I;
  #L4d697c.  if v3 == 0 then goto L4d6982;
  #L4d6980.  goto L4d6984;
  #L4d6982.  v6:= 3I;
  #L4d6984.  if v3 == 0 then goto L4d6998;
  #L4d6988.  call temp:= `p`(v2, v12) @signature `Lm2/n;.p:(Lv1/j1;)Z` @kind virtual;
  #L4d698e.  v12:= temp;
  #L4d6990.  if v12 == 0 then goto L4d6998;
  #L4d6994.  v5:= 16I;
  #L4d6998.  v12:= v2.`m2.n.g` @type ^`boolean` @kind boolean;
  #L4d699c.  if v12 == 0 then goto L4d69a6;
  #L4d69a0.  v12:= 64I;
  #L4d69a4.  goto L4d69a8;
  #L4d69a6.  v12:= 0I;
  #L4d69a8.  if v11 == 0 then goto L4d69b0;
  #L4d69ac.  v1:= 128I;
  #L4d69b0.  call temp:= `c`(v6, v5, v0, v12, v1) @signature `Lv1/s2;.c:(IIIII)I` @kind static;
  #L4d69b6.  v11:= temp;
  #L4d69b8.  return v11;
}
procedure `void` `o`(`x1.c0` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lx1/c0;.o:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4d6bf4.  v0:= 2I;
  #L4d6bf6.  if v2 == v0 then goto L4d6c6e;
  #L4d6bfa.  v0:= 3I;
  #L4d6bfc.  if v2 == v0 then goto L4d6c5e;
  #L4d6c00.  v0:= 6I;
  #L4d6c02.  if v2 == v0 then goto L4d6c4e;
  #L4d6c06.  goto L4d6c88;
  #L4d6c0c.  call `o`(v1, v2, v3) @signature `Lv1/f;.o:(ILjava/lang/Object;)V` @kind super;
  #L4d6c12.  goto L4d6c84;
  #L4d6c14.  v3:= (`v1.r2$a`) v3 @kind object;
  #L4d6c18.  v1.`x1.c0.e1` @type ^`v1.r2$a` := v3 @kind object;
  #L4d6c1c.  goto L4d6c84;
  #L4d6c1e.  v2:= v1.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6c22.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L4d6c26.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4d6c2c.  v3:= temp;
  #L4d6c2e.  call `l`(v2, v3) @signature `Lx1/s;.l:(I)V` @kind interface;
  #L4d6c34.  goto L4d6c84;
  #L4d6c36.  v2:= v1.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6c3a.  v3:= (`java.lang.Boolean`) v3 @kind object;
  #L4d6c3e.  call temp:= `booleanValue`(v3) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L4d6c44.  v3:= temp;
  #L4d6c46.  call `w`(v2, v3) @signature `Lx1/s;.w:(Z)V` @kind interface;
  #L4d6c4c.  goto L4d6c84;
  #L4d6c4e.  v3:= (`x1.v`) v3 @kind object;
  #L4d6c52.  v2:= v1.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6c56.  call `g`(v2, v3) @signature `Lx1/s;.g:(Lx1/v;)V` @kind interface;
  #L4d6c5c.  goto L4d6c84;
  #L4d6c5e.  v3:= (`x1.d`) v3 @kind object;
  #L4d6c62.  v2:= v1.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6c66.  call `v`(v2, v3) @signature `Lx1/s;.v:(Lx1/d;)V` @kind interface;
  #L4d6c6c.  goto L4d6c84;
  #L4d6c6e.  v2:= v1.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d6c72.  v3:= (`java.lang.Float`) v3 @kind object;
  #L4d6c76.  call temp:= `floatValue`(v3) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L4d6c7c.  v3:= temp;
  #L4d6c7e.  call `f`(v2, v3) @signature `Lx1/s;.f:(F)V` @kind interface;
  #L4d6c84.  return @kind void;
  #L4d6c86.  
  #L4d6c88.  switch v2
                  | 9 => goto L4d6c36
                  | 10 => goto L4d6c1e
                  | 11 => goto L4d6c14
                  | else => goto L4d6c0c;
}
procedure `float` `t0`(`x1.c0` v4 @kind this, `float` v5 , `v1.j1` v6 @kind object, `v1.j1`[] v7 @kind object) @signature `Lx1/c0;.t0:(FLv1/j1;[Lv1/j1;)F` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4d6734.  v6:= length @variable v7;
  #L4d6736.  v0:= -1I;
  #L4d6738.  v1:= 0I;
  #L4d673a.  v2:= -1I;
  #L4d673c.  if v1 >= v6 then goto L4d675a;
  #L4d6740.  v3:= v7[v1] @kind object;
  #L4d6744.  v3:= v3.`v1.j1.N` @type ^`int`;
  #L4d6748.  if v3 == v0 then goto L4d6754;
  #L4d674c.  call temp:= `max`(v2, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4d6752.  v2:= temp;
  #L4d6754.  v1:= v1 + 1;
  #L4d6758.  goto L4d673c;
  #L4d675a.  if v2 != v0 then goto L4d6764;
  #L4d675e.  v5:= -1.0F;
  #L4d6762.  goto L4d676a;
  #L4d6764.  v6:= (`float`) v2 @kind i2f;
  #L4d6766.  v5:= v5 * v6 @kind float;
  #L4d676a.  return v5;
}
procedure `s3.s` `v`(`x1.c0` v0 @kind this) @signature `Lx1/c0;.v:()Ls3/s;` @AccessFlag PUBLIC {
    temp;

  #L4d6b50.  return v0 @kind object;
}
procedure `java.util.List` `v0`(`x1.c0` v1 @kind this, `m2.q` v2 @kind object, `v1.j1` v3 @kind object, `boolean` v4 ) @signature `Lx1/c0;.v0:(Lm2/q;Lv1/j1;Z)Ljava/util/List;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4d69e4.  v0:= v1.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d69e8.  call temp:= `w1`(v2, v3, v4, v0) @signature `Lx1/c0;.w1:(Lm2/q;Lv1/j1;ZLx1/s;)Ljava/util/List;` @kind static;
  #L4d69ee.  v2:= temp @kind object;
  #L4d69f0.  call temp:= `u`(v2, v3) @signature `Lm2/v;.u:(Ljava/util/List;Lv1/j1;)Ljava/util/List;` @kind static;
  #L4d69f6.  v2:= temp @kind object;
  #L4d69f8.  return v2 @kind object;
}
procedure `int` `v1`(`x1.c0` v5 @kind this, `m2.n` v6 @kind object, `v1.j1` v7 @kind object, `v1.j1`[] v8 @kind object) @signature `Lx1/c0;.v1:(Lm2/n;Lv1/j1;[Lv1/j1;)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4d67d0.  call temp:= `u1`(v5, v6, v7) @signature `Lx1/c0;.u1:(Lm2/n;Lv1/j1;)I` @kind direct;
  #L4d67d6.  v0:= temp;
  #L4d67d8.  v1:= length @variable v8;
  #L4d67da.  v2:= 1I;
  #L4d67dc.  if v1 != v2 then goto L4d67e2;
  #L4d67e0.  return v0;
  #L4d67e2.  v1:= length @variable v8;
  #L4d67e4.  v2:= 0I;
  #L4d67e6.  if v2 >= v1 then goto L4d6814;
  #L4d67ea.  v3:= v8[v2] @kind object;
  #L4d67ee.  call temp:= `e`(v6, v7, v3) @signature `Lm2/n;.e:(Lv1/j1;Lv1/j1;)Ly1/i;` @kind virtual;
  #L4d67f4.  v4:= temp @kind object;
  #L4d67f6.  v4:= v4.`y1.i.d` @type ^`int`;
  #L4d67fa.  if v4 == 0 then goto L4d680e;
  #L4d67fe.  call temp:= `u1`(v5, v6, v3) @signature `Lx1/c0;.u1:(Lm2/n;Lv1/j1;)I` @kind direct;
  #L4d6804.  v3:= temp;
  #L4d6806.  call temp:= `max`(v0, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L4d680c.  v0:= temp;
  #L4d680e.  v2:= v2 + 1;
  #L4d6812.  goto L4d67e6;
  #L4d6814.  return v0;
}
procedure `m2.l$a` `x0`(`x1.c0` v2 @kind this, `m2.n` v3 @kind object, `v1.j1` v4 @kind object, `android.media.MediaCrypto` v5 @kind object, `float` v6 ) @signature `Lx1/c0;.x0:(Lm2/n;Lv1/j1;Landroid/media/MediaCrypto;F)Lm2/l$a;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4d6ac8.  call temp:= `G`(v2) @signature `Lv1/f;.G:()[Lv1/j1;` @kind virtual;
  #L4d6ace.  v0:= temp @kind object;
  #L4d6ad0.  call temp:= `v1`(v2, v3, v4, v0) @signature `Lx1/c0;.v1:(Lm2/n;Lv1/j1;[Lv1/j1;)I` @kind virtual;
  #L4d6ad6.  v0:= temp;
  #L4d6ad8.  v2.`x1.c0.W0` @type ^`int` := v0;
  #L4d6adc.  v0:= v3.`m2.n.a` @type ^`java.lang.String` @kind object;
  #L4d6ae0.  call temp:= `s1`(v0) @signature `Lx1/c0;.s1:(Ljava/lang/String;)Z` @kind static;
  #L4d6ae6.  v0:= temp;
  #L4d6ae8.  v2.`x1.c0.X0` @type ^`boolean` := v0 @kind boolean;
  #L4d6aec.  v0:= v3.`m2.n.c` @type ^`java.lang.String` @kind object;
  #L4d6af0.  v1:= v2.`x1.c0.W0` @type ^`int`;
  #L4d6af4.  call temp:= `x1`(v2, v4, v0, v1, v6) @signature `Lx1/c0;.x1:(Lv1/j1;Ljava/lang/String;IF)Landroid/media/MediaFormat;` @kind virtual;
  #L4d6afa.  v6:= temp @kind object;
  #L4d6afc.  v0:= v3.`m2.n.b` @type ^`java.lang.String` @kind object;
  #L4d6b00.  v1:= "audio/raw" @kind object;
  #L4d6b04.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d6b0a.  v0:= temp;
  #L4d6b0c.  if v0 == 0 then goto L4d6b24;
  #L4d6b10.  v0:= v4.`v1.j1.z` @type ^`java.lang.String` @kind object;
  #L4d6b14.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d6b1a.  v0:= temp;
  #L4d6b1c.  if v0 != 0 then goto L4d6b24;
  #L4d6b20.  v0:= 1I;
  #L4d6b22.  goto L4d6b26;
  #L4d6b24.  v0:= 0I;
  #L4d6b26.  if v0 == 0 then goto L4d6b2e;
  #L4d6b2a.  v0:= v4 @kind object;
  #L4d6b2c.  goto L4d6b30;
  #L4d6b2e.  v0:= 0I;
  #L4d6b30.  v2.`x1.c0.Y0` @type ^`v1.j1` := v0 @kind object;
  #L4d6b34.  call temp:= `a`(v3, v6, v4, v5) @signature `Lm2/l$a;.a:(Lm2/n;Landroid/media/MediaFormat;Lv1/j1;Landroid/media/MediaCrypto;)Lm2/l$a;` @kind static;
  #L4d6b3a.  v3:= temp @kind object;
  #L4d6b3c.  return v3 @kind object;
}
procedure `android.media.MediaFormat` `x1`(`x1.c0` v2 @kind this, `v1.j1` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `float` v6 ) @signature `Lx1/c0;.x1:(Lv1/j1;Ljava/lang/String;IF)Landroid/media/MediaFormat;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4d6410.  v0:= new `android.media.MediaFormat`;
  #L4d6414.  call `<init>`(v0) @signature `Landroid/media/MediaFormat;.<init>:()V` @kind direct;
  #L4d641a.  v1:= "mime" @kind object;
  #L4d641e.  call `setString`(v0, v1, v4) @signature `Landroid/media/MediaFormat;.setString:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L4d6424.  v4:= v3.`v1.j1.M` @type ^`int`;
  #L4d6428.  v1:= "channel-count" @kind object;
  #L4d642c.  call `setInteger`(v0, v1, v4) @signature `Landroid/media/MediaFormat;.setInteger:(Ljava/lang/String;I)V` @kind virtual;
  #L4d6432.  v4:= v3.`v1.j1.N` @type ^`int`;
  #L4d6436.  v1:= "sample-rate" @kind object;
  #L4d643a.  call `setInteger`(v0, v1, v4) @signature `Landroid/media/MediaFormat;.setInteger:(Ljava/lang/String;I)V` @kind virtual;
  #L4d6440.  v4:= v3.`v1.j1.B` @type ^`java.util.List` @kind object;
  #L4d6444.  call `e`(v0, v4) @signature `Ls3/t;.e:(Landroid/media/MediaFormat;Ljava/util/List;)V` @kind static;
  #L4d644a.  v4:= "max-input-size" @kind object;
  #L4d644e.  call `d`(v0, v4, v5) @signature `Ls3/t;.d:(Landroid/media/MediaFormat;Ljava/lang/String;I)V` @kind static;
  #L4d6454.  v4:= `@@s3.l0.a` @type ^`int`;
  #L4d6458.  v5:= 23I;
  #L4d645c.  if v4 < v5 then goto L4d648e;
  #L4d6460.  v5:= 0I;
  #L4d6462.  v1:= "priority" @kind object;
  #L4d6466.  call `setInteger`(v0, v1, v5) @signature `Landroid/media/MediaFormat;.setInteger:(Ljava/lang/String;I)V` @kind virtual;
  #L4d646c.  v5:= -1.0F;
  #L4d6470.  v5:= fcmpl(v6, v5);
  #L4d6474.  if v5 == 0 then goto L4d648e;
  #L4d6478.  call temp:= `t1`() @signature `Lx1/c0;.t1:()Z` @kind static;
  #L4d647e.  v5:= temp;
  #L4d6480.  if v5 != 0 then goto L4d648e;
  #L4d6484.  v5:= "operating-rate" @kind object;
  #L4d6488.  call `setFloat`(v0, v5, v6) @signature `Landroid/media/MediaFormat;.setFloat:(Ljava/lang/String;F)V` @kind virtual;
  #L4d648e.  v5:= 28I;
  #L4d6492.  if v4 > v5 then goto L4d64b6;
  #L4d6496.  v5:= v3.`v1.j1.z` @type ^`java.lang.String` @kind object;
  #L4d649a.  v6:= "audio/ac4" @kind object;
  #L4d649e.  call temp:= `equals`(v6, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4d64a4.  v5:= temp;
  #L4d64a6.  if v5 == 0 then goto L4d64b6;
  #L4d64aa.  v5:= 1I;
  #L4d64ac.  v6:= "ac4-is-sync" @kind object;
  #L4d64b0.  call `setInteger`(v0, v6, v5) @signature `Landroid/media/MediaFormat;.setInteger:(Ljava/lang/String;I)V` @kind virtual;
  #L4d64b6.  v5:= 24I;
  #L4d64ba.  if v4 < v5 then goto L4d64ec;
  #L4d64be.  v5:= v2.`x1.c0.V0` @type ^`x1.s` @kind object;
  #L4d64c2.  v6:= v3.`v1.j1.M` @type ^`int`;
  #L4d64c6.  v3:= v3.`v1.j1.N` @type ^`int`;
  #L4d64ca.  v1:= 4I;
  #L4d64cc.  call temp:= `c0`(v1, v6, v3) @signature `Ls3/l0;.c0:(III)Lv1/j1;` @kind static;
  #L4d64d2.  v3:= temp @kind object;
  #L4d64d4.  call temp:= `m`(v5, v3) @signature `Lx1/s;.m:(Lv1/j1;)I` @kind interface;
  #L4d64da.  v3:= temp;
  #L4d64dc.  v5:= 2I;
  #L4d64de.  if v3 != v5 then goto L4d64ec;
  #L4d64e2.  v3:= "pcm-encoding" @kind object;
  #L4d64e6.  call `setInteger`(v0, v3, v1) @signature `Landroid/media/MediaFormat;.setInteger:(Ljava/lang/String;I)V` @kind virtual;
  #L4d64ec.  v3:= 32I;
  #L4d64f0.  if v4 < v3 then goto L4d6502;
  #L4d64f4.  v3:= 99I;
  #L4d64f8.  v4:= "max-output-channel-count" @kind object;
  #L4d64fc.  call `setInteger`(v0, v4, v3) @signature `Landroid/media/MediaFormat;.setInteger:(Ljava/lang/String;I)V` @kind virtual;
  #L4d6502.  return v0 @kind object;
}
procedure `long` `y`(`x1.c0` v2 @kind this) @signature `Lx1/c0;.y:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4d6a9c.  call temp:= `getState`(v2) @signature `Lv1/f;.getState:()I` @kind virtual;
  #L4d6aa2.  v0:= temp;
  #L4d6aa4.  v1:= 2I;
  #L4d6aa6.  if v0 != v1 then goto L4d6ab0;
  #L4d6aaa.  call `z1`(v2) @signature `Lx1/c0;.z1:()V` @kind direct;
  #L4d6ab0.  v0:= v2.`x1.c0.Z0` @type ^`long` @kind wide;
  #L4d6ab4.  return v0 @kind wide;
}
procedure `void` `y1`(`x1.c0` v1 @kind this) @signature `Lx1/c0;.y1:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4d6f68.  v0:= 1I;
  #L4d6f6a.  v1.`x1.c0.b1` @type ^`boolean` := v0 @kind boolean;
  #L4d6f6e.  return @kind void;
}
