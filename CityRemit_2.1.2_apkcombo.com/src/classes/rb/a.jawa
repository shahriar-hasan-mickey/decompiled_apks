record `rb.a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `long` `a`(`java.io.InputStream` v5 @kind object, `java.io.OutputStream` v6 @kind object, `int` v7 ) @signature `Lrb/a;.a:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4545ec.  v0:= "<this>" @kind object;
  #L4545f0.  call `e`(v5, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4545f6.  v0:= "out" @kind object;
  #L4545fa.  call `e`(v6, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L454600.  v7:= new `byte`[v7];
  #L454604.  call temp:= `read`(v5, v7) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L45460a.  v0:= temp;
  #L45460c.  v1:= 0L;
  #L454610.  if v0 < 0 then goto L45462a;
  #L454614.  v3:= 0I;
  #L454616.  call `write`(v6, v7, v3, v0) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L45461c.  v3:= (`long`) v0 @kind i2l;
  #L45461e.  v1:= v1 + v3 @kind long;
  #L454620.  call temp:= `read`(v5, v7) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L454626.  v0:= temp;
  #L454628.  goto L454610;
  #L45462a.  return v1 @kind wide;
}
procedure `long` `b`(`java.io.InputStream` v0 @kind object, `java.io.OutputStream` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lrb/a;.b:(Ljava/io/InputStream;Ljava/io/OutputStream;IILjava/lang/Object;)J` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L4545c4.  v3:= v3 ^& 2;
  #L4545c8.  if v3 == 0 then goto L4545d0;
  #L4545cc.  v2:= 8192I;
  #L4545d0.  call temp:= `a`(v0, v1, v2) @signature `Lrb/a;.a:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J` @kind static;
  #L4545d6.  v0:= temp @kind wide;
  #L4545d8.  return v0 @kind wide;
}
