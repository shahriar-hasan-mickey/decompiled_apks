record `rb.i` @kind class @AccessFlag  extends `rb.h` @kind class {
}
procedure `byte`[] `a`(`java.io.File` v10 @kind object) @signature `Lrb/i;.a:(Ljava/io/File;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4547b0.  v0:= "<this>" @kind object;
  #L4547b4.  call `e`(v10, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L4547ba.  v0:= new `java.io.FileInputStream`;
  #L4547be.  call `<init>`(v0, v10) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L4547c4.  call temp:= `length`(v10) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L4547ca.  v1:= temp @kind wide;
  #L4547cc.  v3:= 2147483647L;
  #L4547d2.  v5:= "File " @kind object;
  #L4547d6.  v6:= lcmp(v1, v3);
  #L4547da.  if v6 > 0 then goto L4548b6;
  #L4547de.  v2:= (`int`) v1 @kind l2i;
  #L4547e0.  v1:= new `byte`[v2];
  #L4547e4.  v3:= 0I;
  #L4547e6.  v4:= v2;
  #L4547e8.  v6:= 0I;
  #L4547ea.  if v4 <= 0 then goto L454800;
  #L4547ee.  call temp:= `read`(v0, v1, v6, v4) @signature `Ljava/io/FileInputStream;.read:([BII)I` @kind virtual;
  #L4547f4.  v7:= temp;
  #L4547f6.  if v7 < 0 then goto L454800;
  #L4547fa.  v4:= v4 - v7 @kind int;
  #L4547fc.  v6:= v6 + v7 @kind int;
  #L4547fe.  goto L4547ea;
  #L454800.  v7:= "copyOf(this, newSize)" @kind object;
  #L454804.  v8:= 0I;
  #L454806.  if v4 <= 0 then goto L45481a;
  #L45480a.  call temp:= `copyOf`(v1, v6) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L454810.  v1:= temp @kind object;
  #L454812.  call `d`(v1, v7) @signature `Lkotlin/jvm/internal/k;.d:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L454818.  goto L45487a;
  #L45481a.  call temp:= `read`(v0) @signature `Ljava/io/FileInputStream;.read:()I` @kind virtual;
  #L454820.  v4:= temp;
  #L454822.  v6:= -1I;
  #L454824.  if v4 != v6 then goto L45482a;
  #L454828.  goto L45487a;
  #L45482a.  v6:= new `rb.d`;
  #L45482e.  v9:= 8193I;
  #L454832.  call `<init>`(v6, v9) @signature `Lrb/d;.<init>:(I)V` @kind direct;
  #L454838.  call `write`(v6, v4) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L45483e.  v4:= 2I;
  #L454840.  call temp:= `b`(v0, v6, v3, v4, v8) @signature `Lrb/a;.b:(Ljava/io/InputStream;Ljava/io/OutputStream;IILjava/lang/Object;)J` @kind static;
  #L454846.  call temp:= `size`(v6) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L45484c.  v4:= temp;
  #L45484e.  v4:= v4 + v2 @kind int;
  #L454850.  if v4 < 0 then goto L454882;
  #L454854.  call temp:= `a`(v6) @signature `Lrb/d;.a:()[B` @kind virtual;
  #L45485a.  v10:= temp @kind object;
  #L45485c.  call temp:= `copyOf`(v1, v4) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L454862.  v1:= temp @kind object;
  #L454864.  call `d`(v1, v7) @signature `Lkotlin/jvm/internal/k;.d:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L45486a.  call temp:= `size`(v6) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L454870.  v4:= temp;
  #L454872.  call temp:= `b`(v10, v1, v2, v3, v4) @signature `Lkb/b;.b:([B[BIII)[B` @kind static;
  #L454878.  v1:= temp @kind object;
  #L45487a.  call `a`(v0, v8) @signature `Lrb/b;.a:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L454880.  return v1 @kind object;
  #L454882.  v1:= new `java.lang.OutOfMemoryError`;
  #L454886.  v2:= new `java.lang.StringBuilder`;
  #L45488a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L454890.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L454896.  call temp:= `append`(v2, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45489c.  v10:= " is too big to fit in memory." @kind object;
  #L4548a0.  call temp:= `append`(v2, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4548a6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4548ac.  v10:= temp @kind object;
  #L4548ae.  call `<init>`(v1, v10) @signature `Ljava/lang/OutOfMemoryError;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4548b4.  throw v1;
  #L4548b6.  v3:= new `java.lang.OutOfMemoryError`;
  #L4548ba.  v4:= new `java.lang.StringBuilder`;
  #L4548be.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4548c4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4548ca.  call temp:= `append`(v4, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4548d0.  v10:= " is too big (" @kind object;
  #L4548d4.  call temp:= `append`(v4, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4548da.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4548e0.  v10:= " bytes) to fit in memory." @kind object;
  #L4548e4.  call temp:= `append`(v4, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4548ea.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4548f0.  v10:= temp @kind object;
  #L4548f2.  call `<init>`(v3, v10) @signature `Ljava/lang/OutOfMemoryError;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4548f8.  throw v3;
  #L4548fa.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4548fc.  throw v10;
  #L4548fe.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454900.  call `a`(v0, v10) @signature `Lrb/b;.a:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L454906.  throw v1;
  catch `java.lang.Throwable` @[L4547c4..L4547cc] goto L4548fa;
  catch `java.lang.Throwable` @[L4547e0..L4547f6] goto L4548fa;
  catch `java.lang.Throwable` @[L45480a..L45487a] goto L4548fa;
  catch `java.lang.Throwable` @[L454882..L4548fa] goto L4548fa;
  catch `java.lang.Throwable` @[L4548fc..L4548fe] goto L4548fe;
}
procedure `java.lang.String` `b`(`java.io.File` v2 @kind object, `java.nio.charset.Charset` v3 @kind object) @signature `Lrb/i;.b:(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L454948.  v0:= "<this>" @kind object;
  #L45494c.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L454952.  v0:= "charset" @kind object;
  #L454956.  call `e`(v3, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L45495c.  v0:= new `java.io.InputStreamReader`;
  #L454960.  v1:= new `java.io.FileInputStream`;
  #L454964.  call `<init>`(v1, v2) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L45496a.  call `<init>`(v0, v1, v3) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L454970.  call temp:= `c`(v0) @signature `Lrb/m;.c:(Ljava/io/Reader;)Ljava/lang/String;` @kind static;
  #L454976.  v2:= temp @kind object;
  #L454978.  v3:= 0I;
  #L45497a.  call `a`(v0, v3) @signature `Lrb/b;.a:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L454980.  return v2 @kind object;
  #L454982.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454984.  throw v2;
  #L454986.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L454988.  call `a`(v0, v2) @signature `Lrb/b;.a:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L45498e.  throw v3;
  catch `java.lang.Throwable` @[L454970..L454978] goto L454982;
  catch `java.lang.Throwable` @[L454984..L454986] goto L454986;
}
