record `rb.f` @kind class @AccessFlag PUBLIC extends `java.io.IOException` @kind class {
}
procedure `void` `<init>`(`rb.f` v1 @kind this, `java.io.File` v2 @kind object, `java.io.File` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lrb/f;.<init>:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L454784.  v0:= "file" @kind object;
  #L454788.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L45478e.  call temp:= `a`(v2, v3, v4) @signature `Lrb/c;.a:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L454794.  v2:= temp @kind object;
  #L454796.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45479c.  return @kind void;
}
