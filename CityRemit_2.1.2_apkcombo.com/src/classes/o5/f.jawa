record `o5.f` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `a`(`long` v2 ) @signature `Lo5/f;.a:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fd1c8.  v0:= 32I;
  #L3fd1cc.  v0:= v2 ^>> v0 @kind long;
  #L3fd1d0.  v2:= v2 ^~ v0 @kind long;
  #L3fd1d2.  v3:= (`int`) v2 @kind l2i;
  #L3fd1d4.  return v3;
}
procedure `long` `b`(`long`[] v6 @kind object) @signature `Lo5/f;.b:([J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fd1e8.  v0:= length @variable v6;
  #L3fd1ea.  v1:= 0I;
  #L3fd1ec.  v2:= 1I;
  #L3fd1ee.  if v0 <= 0 then goto L3fd1f6;
  #L3fd1f2.  v0:= 1I;
  #L3fd1f4.  goto L3fd1f8;
  #L3fd1f6.  v0:= 0I;
  #L3fd1f8.  call `d`(v0) @signature `Ll5/j;.d:(Z)V` @kind static;
  #L3fd1fe.  v0:= v6[v1] @kind wide;
  #L3fd202.  v3:= length @variable v6;
  #L3fd204.  if v2 >= v3 then goto L3fd21e;
  #L3fd208.  v3:= v6[v2] @kind wide;
  #L3fd20c.  v5:= lcmp(v3, v0);
  #L3fd210.  if v5 <= 0 then goto L3fd218;
  #L3fd214.  v0:= v6[v2] @kind wide;
  #L3fd218.  v2:= v2 + 1;
  #L3fd21c.  goto L3fd202;
  #L3fd21e.  return v0 @kind wide;
}
