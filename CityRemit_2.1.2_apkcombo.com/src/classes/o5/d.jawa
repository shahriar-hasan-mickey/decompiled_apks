record `o5.d` @kind class @AccessFlag PUBLIC_FINAL extends `o5.e` @kind class {
}
procedure `int` `a`(`int`[] v0 @kind object, `int` v1 , `int` v2 , `int` v3 ) @signature `Lo5/d;.a:([IIII)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fcfe8.  call temp:= `h`(v0, v1, v2, v3) @signature `Lo5/d;.h:([IIII)I` @kind static;
  #L3fcfee.  v0:= temp;
  #L3fcff0.  return v0;
}
procedure `int` `b`(`int`[] v0 @kind object, `int` v1 , `int` v2 , `int` v3 ) @signature `Lo5/d;.b:([IIII)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fd004.  call temp:= `i`(v0, v1, v2, v3) @signature `Lo5/d;.i:([IIII)I` @kind static;
  #L3fd00a.  v0:= temp;
  #L3fd00c.  return v0;
}
procedure `java.util.List` `c`(`int`[] v1 @kind object) @signature `Lo5/d;.c:([I)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fd19c.  v0:= length @variable v1;
  #L3fd19e.  if v0 != 0 then goto L3fd1ac;
  #L3fd1a2.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3fd1a8.  v1:= temp @kind object;
  #L3fd1aa.  return v1 @kind object;
  #L3fd1ac.  v0:= new `o5.d$a`;
  #L3fd1b0.  call `<init>`(v0, v1) @signature `Lo5/d$a;.<init>:([I)V` @kind direct;
  #L3fd1b6.  return v0 @kind object;
}
procedure `int` `d`(`long` v4 ) @signature `Lo5/d;.d:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fd020.  v0:= (`int`) v4 @kind l2i;
  #L3fd022.  v1:= (`long`) v0 @kind i2l;
  #L3fd024.  v3:= lcmp(v1, v4);
  #L3fd028.  if v3 != 0 then goto L3fd030;
  #L3fd02c.  v1:= 1I;
  #L3fd02e.  goto L3fd032;
  #L3fd030.  v1:= 0I;
  #L3fd032.  v2:= "Out of range: %s" @kind object;
  #L3fd036.  call `f`(v1, v2, v4) @signature `Ll5/j;.f:(ZLjava/lang/String;J)V` @kind static;
  #L3fd03c.  return v0;
}
procedure `int` `e`(`int` v0 , `int` v1 ) @signature `Lo5/d;.e:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3fd050.  if v0 >= v1 then goto L3fd058;
  #L3fd054.  v0:= -1I;
  #L3fd056.  goto L3fd062;
  #L3fd058.  if v0 <= v1 then goto L3fd060;
  #L3fd05c.  v0:= 1I;
  #L3fd05e.  goto L3fd062;
  #L3fd060.  v0:= 0I;
  #L3fd062.  return v0;
}
procedure `int` `f`(`int` v0 ) @signature `Lo5/d;.f:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3fd074.  return v0;
}
procedure `int` `g`(`int`[] v2 @kind object, `int` v3 ) @signature `Lo5/d;.g:([II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3fd088.  v0:= length @variable v2;
  #L3fd08a.  v1:= 0I;
  #L3fd08c.  call temp:= `h`(v2, v3, v1, v0) @signature `Lo5/d;.h:([IIII)I` @kind static;
  #L3fd092.  v2:= temp;
  #L3fd094.  return v2;
}
procedure `int` `h`(`int`[] v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Lo5/d;.h:([IIII)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3fd0a8.  if v3 >= v4 then goto L3fd0bc;
  #L3fd0ac.  v0:= v1[v3];
  #L3fd0b0.  if v0 != v2 then goto L3fd0b6;
  #L3fd0b4.  return v3;
  #L3fd0b6.  v3:= v3 + 1;
  #L3fd0ba.  goto L3fd0a8;
  #L3fd0bc.  v1:= -1I;
  #L3fd0be.  return v1;
}
procedure `int` `i`(`int`[] v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Lo5/d;.i:([IIII)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3fd0d0.  v4:= v4 + -1;
  #L3fd0d4.  if v4 < v3 then goto L3fd0e8;
  #L3fd0d8.  v0:= v1[v4];
  #L3fd0dc.  if v0 != v2 then goto L3fd0e2;
  #L3fd0e0.  return v4;
  #L3fd0e2.  v4:= v4 + -1;
  #L3fd0e6.  goto L3fd0d4;
  #L3fd0e8.  v1:= -1I;
  #L3fd0ea.  return v1;
}
procedure `int` `j`(`long` v3 ) @signature `Lo5/d;.j:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3fd0fc.  v0:= 2147483647L;
  #L3fd102.  v2:= lcmp(v3, v0);
  #L3fd106.  if v2 <= 0 then goto L3fd112;
  #L3fd10a.  v3:= 2147483647I;
  #L3fd110.  return v3;
  #L3fd112.  v0:= -2147483648L;
  #L3fd118.  v2:= lcmp(v3, v0);
  #L3fd11c.  if v2 >= 0 then goto L3fd126;
  #L3fd120.  v3:= -2147483648I;
  #L3fd124.  return v3;
  #L3fd126.  v4:= (`int`) v3 @kind l2i;
  #L3fd128.  return v4;
}
procedure `int`[] `k`(`java.util.Collection` v4 @kind object) @signature `Lo5/d;.k:(Ljava/util/Collection;)[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fd13c.  v0:= instanceof @variable v4 @type ^`o5.d$a` @kind boolean;
  #L3fd140.  if v0 == 0 then goto L3fd152;
  #L3fd144.  v4:= (`o5.d$a`) v4 @kind object;
  #L3fd148.  call temp:= `h`(v4) @signature `Lo5/d$a;.h:()[I` @kind virtual;
  #L3fd14e.  v4:= temp @kind object;
  #L3fd150.  return v4 @kind object;
  #L3fd152.  call temp:= `toArray`(v4) @signature `Ljava/util/Collection;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3fd158.  v4:= temp @kind object;
  #L3fd15a.  v0:= length @variable v4;
  #L3fd15c.  v1:= new `int`[v0];
  #L3fd160.  v2:= 0I;
  #L3fd162.  if v2 >= v0 then goto L3fd188;
  #L3fd166.  v3:= v4[v2] @kind object;
  #L3fd16a.  call temp:= `i`(v3) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3fd170.  v3:= temp @kind object;
  #L3fd172.  v3:= (`java.lang.Number`) v3 @kind object;
  #L3fd176.  call temp:= `intValue`(v3) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3fd17c.  v3:= temp;
  #L3fd17e.  v1[v2]:= v3;
  #L3fd182.  v2:= v2 + 1;
  #L3fd186.  goto L3fd162;
  #L3fd188.  return v1 @kind object;
}
