record `l2.d$a` @kind class @AccessFlag FINAL {
  `int` `l2.d$a.a` @AccessFlag PUBLIC_FINAL;
  `long` `l2.d$a.b` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`l2.d$a` v0 @kind this, `int` v1 , `long` v2 ) @signature `Ll2/d$a;.<init>:(IJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3c20bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c20c2.  v0.`l2.d$a.a` @type ^`int` := v1;
  #L3c20c6.  v0.`l2.d$a.b` @type ^`long` := v2 @kind wide;
  #L3c20ca.  return @kind void;
}
procedure `l2.d$a` `a`(`a2.m` v3 @kind object, `s3.z` v4 @kind object) @signature `Ll2/d$a;.a:(La2/m;Ls3/z;)Ll2/d$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3c2074.  call temp:= `d`(v4) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3c207a.  v0:= temp @kind object;
  #L3c207c.  v1:= 0I;
  #L3c207e.  v2:= 8I;
  #L3c2082.  call `o`(v3, v0, v1, v2) @signature `La2/m;.o:([BII)V` @kind interface;
  #L3c2088.  call `O`(v4, v1) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3c208e.  call temp:= `m`(v4) @signature `Ls3/z;.m:()I` @kind virtual;
  #L3c2094.  v3:= temp;
  #L3c2096.  call temp:= `s`(v4) @signature `Ls3/z;.s:()J` @kind virtual;
  #L3c209c.  v0:= temp @kind wide;
  #L3c209e.  v4:= new `l2.d$a`;
  #L3c20a2.  call `<init>`(v4, v3, v0) @signature `Ll2/d$a;.<init>:(IJ)V` @kind direct;
  #L3c20a8.  return v4 @kind object;
}
