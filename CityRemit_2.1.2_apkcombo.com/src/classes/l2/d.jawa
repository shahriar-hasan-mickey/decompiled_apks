record `l2.d` @kind class @AccessFlag FINAL {
}
procedure `boolean` `a`(`a2.m` v4 @kind object) @signature `Ll2/d;.a:(La2/m;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c213c.  v0:= new `s3.z`;
  #L3c2140.  v1:= 8I;
  #L3c2144.  call `<init>`(v0, v1) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L3c214a.  call temp:= `a`(v4, v0) @signature `Ll2/d$a;.a:(La2/m;Ls3/z;)Ll2/d$a;` @kind static;
  #L3c2150.  v1:= temp @kind object;
  #L3c2152.  v1:= v1.`l2.d$a.a` @type ^`int`;
  #L3c2156.  v2:= 0I;
  #L3c2158.  v3:= 1380533830I;
  #L3c215e.  if v1 == v3 then goto L3c216e;
  #L3c2162.  v3:= 1380333108I;
  #L3c2168.  if v1 == v3 then goto L3c216e;
  #L3c216c.  return v2;
  #L3c216e.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3c2174.  v1:= temp @kind object;
  #L3c2176.  v3:= 4I;
  #L3c2178.  call `o`(v4, v1, v2, v3) @signature `La2/m;.o:([BII)V` @kind interface;
  #L3c217e.  call `O`(v0, v2) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3c2184.  call temp:= `m`(v0) @signature `Ls3/z;.m:()I` @kind virtual;
  #L3c218a.  v4:= temp;
  #L3c218c.  v0:= 1463899717I;
  #L3c2192.  if v4 == v0 then goto L3c21c4;
  #L3c2196.  v0:= new `java.lang.StringBuilder`;
  #L3c219a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c21a0.  v1:= "Unsupported form type: " @kind object;
  #L3c21a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c21aa.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c21b0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c21b6.  v4:= temp @kind object;
  #L3c21b8.  v0:= "WavHeaderReader" @kind object;
  #L3c21bc.  call `c`(v0, v4) @signature `Ls3/q;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3c21c2.  return v2;
  #L3c21c4.  v4:= 1I;
  #L3c21c6.  return v4;
}
procedure `l2.c` `b`(`a2.m` v14 @kind object) @signature `Ll2/d;.b:(La2/m;)Ll2/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L3c21d8.  v0:= new `s3.z`;
  #L3c21dc.  v1:= 16I;
  #L3c21e0.  call `<init>`(v0, v1) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L3c21e6.  v2:= 1718449184I;
  #L3c21ec.  call temp:= `d`(v2, v14, v0) @signature `Ll2/d;.d:(ILa2/m;Ls3/z;)Ll2/d$a;` @kind static;
  #L3c21f2.  v2:= temp @kind object;
  #L3c21f4.  v3:= v2.`l2.d$a.b` @type ^`long` @kind wide;
  #L3c21f8.  v5:= 0I;
  #L3c21fa.  v6:= 16L;
  #L3c21fe.  v8:= lcmp(v3, v6);
  #L3c2202.  if v8 < 0 then goto L3c220a;
  #L3c2206.  v3:= 1I;
  #L3c2208.  goto L3c220c;
  #L3c220a.  v3:= 0I;
  #L3c220c.  call `f`(v3) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L3c2212.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3c2218.  v3:= temp @kind object;
  #L3c221a.  call `o`(v14, v3, v5, v1) @signature `La2/m;.o:([BII)V` @kind interface;
  #L3c2220.  call `O`(v0, v5) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3c2226.  call temp:= `u`(v0) @signature `Ls3/z;.u:()I` @kind virtual;
  #L3c222c.  v7:= temp;
  #L3c222e.  call temp:= `u`(v0) @signature `Ls3/z;.u:()I` @kind virtual;
  #L3c2234.  v8:= temp;
  #L3c2236.  call temp:= `t`(v0) @signature `Ls3/z;.t:()I` @kind virtual;
  #L3c223c.  v9:= temp;
  #L3c223e.  call temp:= `t`(v0) @signature `Ls3/z;.t:()I` @kind virtual;
  #L3c2244.  v10:= temp;
  #L3c2246.  call temp:= `u`(v0) @signature `Ls3/z;.u:()I` @kind virtual;
  #L3c224c.  v11:= temp;
  #L3c224e.  call temp:= `u`(v0) @signature `Ls3/z;.u:()I` @kind virtual;
  #L3c2254.  v12:= temp;
  #L3c2256.  v2:= v2.`l2.d$a.b` @type ^`long` @kind wide;
  #L3c225a.  v0:= (`int`) v2 @kind l2i;
  #L3c225c.  v0:= v0 - v1 @kind int;
  #L3c225e.  if v0 <= 0 then goto L3c2270;
  #L3c2262.  v1:= new `byte`[v0];
  #L3c2266.  call `o`(v14, v1, v5, v0) @signature `La2/m;.o:([BII)V` @kind interface;
  #L3c226c.  v13:= v1 @kind object;
  #L3c226e.  goto L3c2276;
  #L3c2270.  v0:= `@@s3.l0.f` @type ^`byte`[] @kind object;
  #L3c2274.  v13:= v0 @kind object;
  #L3c2276.  call temp:= `n`(v14) @signature `La2/m;.n:()J` @kind interface;
  #L3c227c.  v0:= temp @kind wide;
  #L3c227e.  call temp:= `q`(v14) @signature `La2/m;.q:()J` @kind interface;
  #L3c2284.  v2:= temp @kind wide;
  #L3c2286.  v0:= v0 - v2 @kind long;
  #L3c2288.  v1:= (`int`) v0 @kind l2i;
  #L3c228a.  call `j`(v14, v1) @signature `La2/m;.j:(I)V` @kind interface;
  #L3c2290.  v14:= new `l2.c`;
  #L3c2294.  v6:= v14 @kind object;
  #L3c2296.  call `<init>`(v6, v7, v8, v9, v10, v11, v12, v13) @signature `Ll2/c;.<init>:(IIIIII[B)V` @kind direct;
  #L3c229c.  return v14 @kind object;
}
procedure `long` `c`(`a2.m` v7 @kind object) @signature `Ll2/d;.c:(La2/m;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c2354.  v0:= new `s3.z`;
  #L3c2358.  v1:= 8I;
  #L3c235c.  call `<init>`(v0, v1) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L3c2362.  call temp:= `a`(v7, v0) @signature `Ll2/d$a;.a:(La2/m;Ls3/z;)Ll2/d$a;` @kind static;
  #L3c2368.  v2:= temp @kind object;
  #L3c236a.  v3:= v2.`l2.d$a.a` @type ^`int`;
  #L3c236e.  v4:= 1685272116I;
  #L3c2374.  if v3 == v4 then goto L3c2384;
  #L3c2378.  call `i`(v7) @signature `La2/m;.i:()V` @kind interface;
  #L3c237e.  v0:= -1L;
  #L3c2382.  return v0 @kind wide;
  #L3c2384.  call `p`(v7, v1) @signature `La2/m;.p:(I)V` @kind interface;
  #L3c238a.  v3:= 0I;
  #L3c238c.  call `O`(v0, v3) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L3c2392.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3c2398.  v4:= temp @kind object;
  #L3c239a.  call `o`(v7, v4, v3, v1) @signature `La2/m;.o:([BII)V` @kind interface;
  #L3c23a0.  call temp:= `q`(v0) @signature `Ls3/z;.q:()J` @kind virtual;
  #L3c23a6.  v3:= temp @kind wide;
  #L3c23a8.  v5:= v2.`l2.d$a.b` @type ^`long` @kind wide;
  #L3c23ac.  v0:= (`int`) v5 @kind l2i;
  #L3c23ae.  v0:= v0 + v1 @kind int;
  #L3c23b0.  call `j`(v7, v0) @signature `La2/m;.j:(I)V` @kind interface;
  #L3c23b6.  return v3 @kind wide;
}
procedure `l2.d$a` `d`(`int` v6 , `a2.m` v7 @kind object, `s3.z` v8 @kind object) @signature `Ll2/d;.d:(ILa2/m;Ls3/z;)Ll2/d$a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3c22b0.  call temp:= `a`(v7, v8) @signature `Ll2/d$a;.a:(La2/m;Ls3/z;)Ll2/d$a;` @kind static;
  #L3c22b6.  v0:= temp @kind object;
  #L3c22b8.  v1:= v0.`l2.d$a.a` @type ^`int`;
  #L3c22bc.  if v1 == v6 then goto L3c2342;
  #L3c22c0.  v1:= new `java.lang.StringBuilder`;
  #L3c22c4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c22ca.  v2:= "Ignoring unknown WAV chunk: " @kind object;
  #L3c22ce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c22d4.  v2:= v0.`l2.d$a.a` @type ^`int`;
  #L3c22d8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c22de.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c22e4.  v1:= temp @kind object;
  #L3c22e6.  v2:= "WavHeaderReader" @kind object;
  #L3c22ea.  call `h`(v2, v1) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3c22f0.  v1:= 8L;
  #L3c22f4.  v3:= v0.`l2.d$a.b` @type ^`long` @kind wide;
  #L3c22f8.  v3:= v3 + v1 @kind long;
  #L3c22fa.  v1:= 2147483647L;
  #L3c2300.  v5:= lcmp(v3, v1);
  #L3c2304.  if v5 > 0 then goto L3c2312;
  #L3c2308.  v0:= (`int`) v3 @kind l2i;
  #L3c230a.  call `j`(v7, v0) @signature `La2/m;.j:(I)V` @kind interface;
  #L3c2310.  goto L3c22b0;
  #L3c2312.  v6:= new `java.lang.StringBuilder`;
  #L3c2316.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c231c.  v7:= "Chunk is too large (~2GB+) to skip; id: " @kind object;
  #L3c2320.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c2326.  v7:= v0.`l2.d$a.a` @type ^`int`;
  #L3c232a.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c2330.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c2336.  v6:= temp @kind object;
  #L3c2338.  call temp:= `d`(v6) @signature `Lv1/e2;.d:(Ljava/lang/String;)Lv1/e2;` @kind static;
  #L3c233e.  v6:= temp @kind object;
  #L3c2340.  throw v6;
  #L3c2342.  return v0 @kind object;
}
procedure `android.util.Pair` `e`(`a2.m` v3 @kind object) @signature `Ll2/d;.e:(La2/m;)Landroid/util/Pair;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3c20dc.  call `i`(v3) @signature `La2/m;.i:()V` @kind interface;
  #L3c20e2.  v0:= new `s3.z`;
  #L3c20e6.  v1:= 8I;
  #L3c20ea.  call `<init>`(v0, v1) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L3c20f0.  v2:= 1684108385I;
  #L3c20f6.  call temp:= `d`(v2, v3, v0) @signature `Ll2/d;.d:(ILa2/m;Ls3/z;)Ll2/d$a;` @kind static;
  #L3c20fc.  v0:= temp @kind object;
  #L3c20fe.  call `j`(v3, v1) @signature `La2/m;.j:(I)V` @kind interface;
  #L3c2104.  call temp:= `q`(v3) @signature `La2/m;.q:()J` @kind interface;
  #L3c210a.  v1:= temp @kind wide;
  #L3c210c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3c2112.  v3:= temp @kind object;
  #L3c2114.  v0:= v0.`l2.d$a.b` @type ^`long` @kind wide;
  #L3c2118.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3c211e.  v0:= temp @kind object;
  #L3c2120.  call temp:= `create`(v3, v0) @signature `Landroid/util/Pair;.create:(Ljava/lang/Object;Ljava/lang/Object;)Landroid/util/Pair;` @kind static;
  #L3c2126.  v3:= temp @kind object;
  #L3c2128.  return v3 @kind object;
}
