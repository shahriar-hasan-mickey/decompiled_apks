record `l2.e` @kind class @AccessFlag FINAL extends `a2.a0` @kind interface {
  `l2.c` `l2.e.a` @AccessFlag PRIVATE_FINAL;
  `int` `l2.e.b` @AccessFlag PRIVATE_FINAL;
  `long` `l2.e.c` @AccessFlag PRIVATE_FINAL;
  `long` `l2.e.d` @AccessFlag PRIVATE_FINAL;
  `long` `l2.e.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l2.e` v0 @kind this, `l2.c` v1 @kind object, `int` v2 , `long` v3 , `long` v5 ) @signature `Ll2/e;.<init>:(Ll2/c;IJJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3c24f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c24f6.  v0.`l2.e.a` @type ^`l2.c` := v1 @kind object;
  #L3c24fa.  v0.`l2.e.b` @type ^`int` := v2;
  #L3c24fe.  v0.`l2.e.c` @type ^`long` := v3 @kind wide;
  #L3c2502.  v5:= v5 - v3 @kind long;
  #L3c2504.  v1:= v1.`l2.c.d` @type ^`int`;
  #L3c2508.  v1:= (`long`) v1 @kind i2l;
  #L3c250a.  v5:= v5 / v1 @kind long;
  #L3c250c.  v0.`l2.e.d` @type ^`long` := v5 @kind wide;
  #L3c2510.  call temp:= `a`(v0, v5) @signature `Ll2/e;.a:(J)J` @kind direct;
  #L3c2516.  v1:= temp @kind wide;
  #L3c2518.  v0.`l2.e.e` @type ^`long` := v1 @kind wide;
  #L3c251c.  return @kind void;
}
procedure `long` `a`(`l2.e` v8 @kind this, `long` v9 ) @signature `Ll2/e;.a:(J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3c24a4.  v0:= v8.`l2.e.b` @type ^`int`;
  #L3c24a8.  v0:= (`long`) v0 @kind i2l;
  #L3c24aa.  v2:= v9 * v0 @kind long;
  #L3c24ae.  v9:= v8.`l2.e.a` @type ^`l2.c` @kind object;
  #L3c24b2.  v9:= v9.`l2.c.c` @type ^`int`;
  #L3c24b6.  v6:= (`long`) v9 @kind i2l;
  #L3c24b8.  v4:= 1000000L;
  #L3c24be.  call temp:= `M0`(v2, v4, v6) @signature `Ls3/l0;.M0:(JJJ)J` @kind static;
  #L3c24c4.  v9:= temp @kind wide;
  #L3c24c6.  return v9 @kind wide;
}
procedure `boolean` `f`(`l2.e` v1 @kind this) @signature `Ll2/e;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c2490.  v0:= 1I;
  #L3c2492.  return v0;
}
procedure `a2.a0$a` `h`(`l2.e` v10 @kind this, `long` v11 ) @signature `Ll2/e;.h:(J)La2/a0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3c23c8.  v0:= v10.`l2.e.a` @type ^`l2.c` @kind object;
  #L3c23cc.  v0:= v0.`l2.c.c` @type ^`int`;
  #L3c23d0.  v0:= (`long`) v0 @kind i2l;
  #L3c23d2.  v0:= v0 * v11 @kind long;
  #L3c23d6.  v2:= v10.`l2.e.b` @type ^`int`;
  #L3c23da.  v2:= (`long`) v2 @kind i2l;
  #L3c23dc.  v4:= 1000000L;
  #L3c23e2.  v2:= v2 * v4 @kind long;
  #L3c23e6.  v4:= v0 / v2 @kind long;
  #L3c23ea.  v0:= v10.`l2.e.d` @type ^`long` @kind wide;
  #L3c23ee.  v2:= 1L;
  #L3c23f2.  v8:= v0 - v2 @kind long;
  #L3c23f6.  v6:= 0L;
  #L3c23fa.  call temp:= `r`(v4, v6, v8) @signature `Ls3/l0;.r:(JJJ)J` @kind static;
  #L3c2400.  v0:= temp @kind wide;
  #L3c2402.  v4:= v10.`l2.e.c` @type ^`long` @kind wide;
  #L3c2406.  v6:= v10.`l2.e.a` @type ^`l2.c` @kind object;
  #L3c240a.  v6:= v6.`l2.c.d` @type ^`int`;
  #L3c240e.  v6:= (`long`) v6 @kind i2l;
  #L3c2410.  v6:= v6 * v0 @kind long;
  #L3c2414.  v4:= v4 + v6 @kind long;
  #L3c2416.  call temp:= `a`(v10, v0) @signature `Ll2/e;.a:(J)J` @kind direct;
  #L3c241c.  v6:= temp @kind wide;
  #L3c241e.  v8:= new `a2.b0`;
  #L3c2422.  call `<init>`(v8, v6, v4) @signature `La2/b0;.<init>:(JJ)V` @kind direct;
  #L3c2428.  v4:= lcmp(v6, v11);
  #L3c242c.  if v4 >= 0 then goto L3c2474;
  #L3c2430.  v11:= v10.`l2.e.d` @type ^`long` @kind wide;
  #L3c2434.  v11:= v11 - v2 @kind long;
  #L3c2436.  v4:= lcmp(v0, v11);
  #L3c243a.  if v4 != 0 then goto L3c2440;
  #L3c243e.  goto L3c2474;
  #L3c2440.  v0:= v0 + v2 @kind long;
  #L3c2442.  v11:= v10.`l2.e.c` @type ^`long` @kind wide;
  #L3c2446.  v2:= v10.`l2.e.a` @type ^`l2.c` @kind object;
  #L3c244a.  v2:= v2.`l2.c.d` @type ^`int`;
  #L3c244e.  v2:= (`long`) v2 @kind i2l;
  #L3c2450.  v2:= v2 * v0 @kind long;
  #L3c2454.  v11:= v11 + v2 @kind long;
  #L3c2456.  call temp:= `a`(v10, v0) @signature `Ll2/e;.a:(J)J` @kind direct;
  #L3c245c.  v0:= temp @kind wide;
  #L3c245e.  v2:= new `a2.b0`;
  #L3c2462.  call `<init>`(v2, v0, v11) @signature `La2/b0;.<init>:(JJ)V` @kind direct;
  #L3c2468.  v11:= new `a2.a0$a`;
  #L3c246c.  call `<init>`(v11, v8, v2) @signature `La2/a0$a;.<init>:(La2/b0;La2/b0;)V` @kind direct;
  #L3c2472.  return v11 @kind object;
  #L3c2474.  v11:= new `a2.a0$a`;
  #L3c2478.  call `<init>`(v11, v8) @signature `La2/a0$a;.<init>:(La2/b0;)V` @kind direct;
  #L3c247e.  return v11 @kind object;
}
procedure `long` `i`(`l2.e` v2 @kind this) @signature `Ll2/e;.i:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c24d8.  v0:= v2.`l2.e.e` @type ^`long` @kind wide;
  #L3c24dc.  return v0 @kind wide;
}
