record `f2.d$a` @kind class @AccessFlag  extends `a2.a0` @kind interface {
  `a2.a0` `f2.d$a.a` @AccessFlag FINAL_SYNTHETIC;
  `f2.d` `f2.d$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`f2.d$a` v0 @kind this, `f2.d` v1 @kind object, `a2.a0` v2 @kind object) @signature `Lf2/d$a;.<init>:(Lf2/d;La2/a0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L304a60.  v0.`f2.d$a.b` @type ^`f2.d` := v1 @kind object;
  #L304a64.  v0.`f2.d$a.a` @type ^`a2.a0` := v2 @kind object;
  #L304a68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L304a6e.  return @kind void;
}
procedure `boolean` `f`(`f2.d$a` v1 @kind this) @signature `Lf2/d$a;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L304a20.  v0:= v1.`f2.d$a.a` @type ^`a2.a0` @kind object;
  #L304a24.  call temp:= `f`(v0) @signature `La2/a0;.f:()Z` @kind interface;
  #L304a2a.  v0:= temp;
  #L304a2c.  return v0;
}
procedure `a2.a0$a` `h`(`f2.d$a` v8 @kind this, `long` v9 ) @signature `Lf2/d$a;.h:(J)La2/a0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3049b0.  v0:= v8.`f2.d$a.a` @type ^`a2.a0` @kind object;
  #L3049b4.  call temp:= `h`(v0, v9) @signature `La2/a0;.h:(J)La2/a0$a;` @kind interface;
  #L3049ba.  v9:= temp @kind object;
  #L3049bc.  v10:= new `a2.a0$a`;
  #L3049c0.  v0:= new `a2.b0`;
  #L3049c4.  v1:= v9.`a2.a0$a.a` @type ^`a2.b0` @kind object;
  #L3049c8.  v2:= v1.`a2.b0.a` @type ^`long` @kind wide;
  #L3049cc.  v4:= v1.`a2.b0.b` @type ^`long` @kind wide;
  #L3049d0.  v1:= v8.`f2.d$a.b` @type ^`f2.d` @kind object;
  #L3049d4.  call temp:= `a`(v1) @signature `Lf2/d;.a:(Lf2/d;)J` @kind static;
  #L3049da.  v6:= temp @kind wide;
  #L3049dc.  v4:= v4 + v6 @kind long;
  #L3049de.  call `<init>`(v0, v2, v4) @signature `La2/b0;.<init>:(JJ)V` @kind direct;
  #L3049e4.  v1:= new `a2.b0`;
  #L3049e8.  v9:= v9.`a2.a0$a.b` @type ^`a2.b0` @kind object;
  #L3049ec.  v2:= v9.`a2.b0.a` @type ^`long` @kind wide;
  #L3049f0.  v4:= v9.`a2.b0.b` @type ^`long` @kind wide;
  #L3049f4.  v9:= v8.`f2.d$a.b` @type ^`f2.d` @kind object;
  #L3049f8.  call temp:= `a`(v9) @signature `Lf2/d;.a:(Lf2/d;)J` @kind static;
  #L3049fe.  v6:= temp @kind wide;
  #L304a00.  v4:= v4 + v6 @kind long;
  #L304a02.  call `<init>`(v1, v2, v4) @signature `La2/b0;.<init>:(JJ)V` @kind direct;
  #L304a08.  call `<init>`(v10, v0, v1) @signature `La2/a0$a;.<init>:(La2/b0;La2/b0;)V` @kind direct;
  #L304a0e.  return v10 @kind object;
}
procedure `long` `i`(`f2.d$a` v2 @kind this) @signature `Lf2/d$a;.i:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L304a40.  v0:= v2.`f2.d$a.a` @type ^`a2.a0` @kind object;
  #L304a44.  call temp:= `i`(v0) @signature `La2/a0;.i:()J` @kind interface;
  #L304a4a.  v0:= temp @kind wide;
  #L304a4c.  return v0 @kind wide;
}
