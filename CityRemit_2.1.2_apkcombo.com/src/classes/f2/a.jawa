record `f2.a` @kind class @AccessFlag PUBLIC_FINAL extends `a2.l` @kind interface {
  `s3.z` `f2.a.a` @AccessFlag PRIVATE_FINAL;
  `a2.n` `f2.a.b` @AccessFlag PRIVATE;
  `int` `f2.a.c` @AccessFlag PRIVATE;
  `int` `f2.a.d` @AccessFlag PRIVATE;
  `int` `f2.a.e` @AccessFlag PRIVATE;
  `long` `f2.a.f` @AccessFlag PRIVATE;
  `t2.b` `f2.a.g` @AccessFlag PRIVATE;
  `a2.m` `f2.a.h` @AccessFlag PRIVATE;
  `f2.c` `f2.a.i` @AccessFlag PRIVATE;
  `i2.k` `f2.a.j` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`f2.a` v2 @kind this) @signature `Lf2/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3043c8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3043ce.  v0:= new `s3.z`;
  #L3043d2.  v1:= 6I;
  #L3043d4.  call `<init>`(v0, v1) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L3043da.  v2.`f2.a.a` @type ^`s3.z` := v0 @kind object;
  #L3043de.  v0:= -1L;
  #L3043e2.  v2.`f2.a.f` @type ^`long` := v0 @kind wide;
  #L3043e6.  return @kind void;
}
procedure `void` `c`(`f2.a` v3 @kind this, `a2.m` v4 @kind object) @signature `Lf2/a;.c:(La2/m;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3043f8.  v0:= v3.`f2.a.a` @type ^`s3.z` @kind object;
  #L3043fc.  v1:= 2I;
  #L3043fe.  call `K`(v0, v1) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L304404.  v0:= v3.`f2.a.a` @type ^`s3.z` @kind object;
  #L304408.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L30440e.  v0:= temp @kind object;
  #L304410.  v2:= 0I;
  #L304412.  call `o`(v4, v0, v2, v1) @signature `La2/m;.o:([BII)V` @kind interface;
  #L304418.  v0:= v3.`f2.a.a` @type ^`s3.z` @kind object;
  #L30441c.  call temp:= `I`(v0) @signature `Ls3/z;.I:()I` @kind virtual;
  #L304422.  v0:= temp;
  #L304424.  v0:= v0 - v1 @kind int;
  #L304426.  call `p`(v4, v0) @signature `La2/m;.p:(I)V` @kind interface;
  #L30442c.  return @kind void;
}
procedure `void` `e`(`f2.a` v4 @kind this) @signature `Lf2/a;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L304440.  v0:= 0I;
  #L304442.  v0:= new `n2.a$b`[v0];
  #L304446.  call `h`(v4, v0) @signature `Lf2/a;.h:([Ln2/a$b;)V` @kind direct;
  #L30444c.  v0:= v4.`f2.a.b` @type ^`a2.n` @kind object;
  #L304450.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L304456.  v0:= temp @kind object;
  #L304458.  v0:= (`a2.n`) v0 @kind object;
  #L30445c.  call `h`(v0) @signature `La2/n;.h:()V` @kind interface;
  #L304462.  v0:= v4.`f2.a.b` @type ^`a2.n` @kind object;
  #L304466.  v1:= new `a2.a0$b`;
  #L30446a.  v2:= -4.9E-324D;
  #L304474.  call `<init>`(v1, v2) @signature `La2/a0$b;.<init>:(J)V` @kind direct;
  #L30447a.  call `m`(v0, v1) @signature `La2/n;.m:(La2/a0;)V` @kind interface;
  #L304480.  v0:= 6I;
  #L304482.  v4.`f2.a.c` @type ^`int` := v0;
  #L304486.  return @kind void;
}
procedure `t2.b` `f`(`java.lang.String` v4 @kind object, `long` v5 ) @signature `Lf2/a;.f:(Ljava/lang/String;J)Lt2/b;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L304390.  v0:= 0I;
  #L304392.  v1:= -1L;
  #L304396.  v3:= lcmp(v5, v1);
  #L30439a.  if v3 != 0 then goto L3043a0;
  #L30439e.  return v0 @kind object;
  #L3043a0.  call temp:= `a`(v4) @signature `Lf2/e;.a:(Ljava/lang/String;)Lf2/b;` @kind static;
  #L3043a6.  v4:= temp @kind object;
  #L3043a8.  if v4 != 0 then goto L3043ae;
  #L3043ac.  return v0 @kind object;
  #L3043ae.  call temp:= `a`(v4, v5) @signature `Lf2/b;.a:(J)Lt2/b;` @kind virtual;
  #L3043b4.  v4:= temp @kind object;
  #L3043b6.  return v4 @kind object;
}
procedure `void` `h`(`f2.a` v3 @kind this, `n2.a$b`[] v4 @kind object) @signature `Lf2/a;.h:([Ln2/a$b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3044b0.  v0:= v3.`f2.a.b` @type ^`a2.n` @kind object;
  #L3044b4.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3044ba.  v0:= temp @kind object;
  #L3044bc.  v0:= (`a2.n`) v0 @kind object;
  #L3044c0.  v1:= 1024I;
  #L3044c4.  v2:= 4I;
  #L3044c6.  call temp:= `e`(v0, v1, v2) @signature `La2/n;.e:(II)La2/d0;` @kind interface;
  #L3044cc.  v0:= temp @kind object;
  #L3044ce.  v1:= new `v1.j1$b`;
  #L3044d2.  call `<init>`(v1) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L3044d8.  v2:= "image/jpeg" @kind object;
  #L3044dc.  call temp:= `K`(v1, v2) @signature `Lv1/j1$b;.K:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3044e2.  v1:= temp @kind object;
  #L3044e4.  v2:= new `n2.a`;
  #L3044e8.  call `<init>`(v2, v4) @signature `Ln2/a;.<init>:([Ln2/a$b;)V` @kind direct;
  #L3044ee.  call temp:= `X`(v1, v2) @signature `Lv1/j1$b;.X:(Ln2/a;)Lv1/j1$b;` @kind virtual;
  #L3044f4.  v4:= temp @kind object;
  #L3044f6.  call temp:= `E`(v4) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L3044fc.  v4:= temp @kind object;
  #L3044fe.  call `b`(v0, v4) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L304504.  return @kind void;
}
procedure `int` `i`(`f2.a` v3 @kind this, `a2.m` v4 @kind object) @signature `Lf2/a;.i:(La2/m;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L304278.  v0:= v3.`f2.a.a` @type ^`s3.z` @kind object;
  #L30427c.  v1:= 2I;
  #L30427e.  call `K`(v0, v1) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L304284.  v0:= v3.`f2.a.a` @type ^`s3.z` @kind object;
  #L304288.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L30428e.  v0:= temp @kind object;
  #L304290.  v2:= 0I;
  #L304292.  call `o`(v4, v0, v2, v1) @signature `La2/m;.o:([BII)V` @kind interface;
  #L304298.  v4:= v3.`f2.a.a` @type ^`s3.z` @kind object;
  #L30429c.  call temp:= `I`(v4) @signature `Ls3/z;.I:()I` @kind virtual;
  #L3042a2.  v4:= temp;
  #L3042a4.  return v4;
}
procedure `void` `k`(`f2.a` v4 @kind this, `a2.m` v5 @kind object) @signature `Lf2/a;.k:(La2/m;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L304518.  v0:= v4.`f2.a.a` @type ^`s3.z` @kind object;
  #L30451c.  v1:= 2I;
  #L30451e.  call `K`(v0, v1) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L304524.  v0:= v4.`f2.a.a` @type ^`s3.z` @kind object;
  #L304528.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L30452e.  v0:= temp @kind object;
  #L304530.  v2:= 0I;
  #L304532.  call `readFully`(v5, v0, v2, v1) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L304538.  v5:= v4.`f2.a.a` @type ^`s3.z` @kind object;
  #L30453c.  call temp:= `I`(v5) @signature `Ls3/z;.I:()I` @kind virtual;
  #L304542.  v5:= temp;
  #L304544.  v4.`f2.a.d` @type ^`int` := v5;
  #L304548.  v0:= 65498I;
  #L30454e.  if v5 != v0 then goto L304572;
  #L304552.  v0:= v4.`f2.a.f` @type ^`long` @kind wide;
  #L304556.  v2:= -1L;
  #L30455a.  v5:= lcmp(v0, v2);
  #L30455e.  if v5 == 0 then goto L30456a;
  #L304562.  v5:= 4I;
  #L304564.  v4.`f2.a.c` @type ^`int` := v5;
  #L304568.  goto L304594;
  #L30456a.  call `e`(v4) @signature `Lf2/a;.e:()V` @kind direct;
  #L304570.  goto L304594;
  #L304572.  v0:= 65488I;
  #L304578.  if v5 < v0 then goto L304586;
  #L30457c.  v0:= 65497I;
  #L304582.  if v5 <= v0 then goto L304594;
  #L304586.  v0:= 65281I;
  #L30458c.  if v5 == v0 then goto L304594;
  #L304590.  v5:= 1I;
  #L304592.  goto L304564;
  #L304594.  return @kind void;
}
procedure `void` `l`(`f2.a` v4 @kind this, `a2.m` v5 @kind object) @signature `Lf2/a;.l:(La2/m;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3045a8.  v0:= v4.`f2.a.d` @type ^`int`;
  #L3045ac.  v1:= 0I;
  #L3045ae.  v2:= 65505I;
  #L3045b4.  if v0 != v2 then goto L304626;
  #L3045b8.  v0:= new `s3.z`;
  #L3045bc.  v2:= v4.`f2.a.e` @type ^`int`;
  #L3045c0.  call `<init>`(v0, v2) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L3045c6.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3045cc.  v2:= temp @kind object;
  #L3045ce.  v3:= v4.`f2.a.e` @type ^`int`;
  #L3045d2.  call `readFully`(v5, v2, v1, v3) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L3045d8.  v2:= v4.`f2.a.g` @type ^`t2.b` @kind object;
  #L3045dc.  if v2 != 0 then goto L304630;
  #L3045e0.  call temp:= `w`(v0) @signature `Ls3/z;.w:()Ljava/lang/String;` @kind virtual;
  #L3045e6.  v2:= temp @kind object;
  #L3045e8.  v3:= "http://ns.adobe.com/xap/1.0/" @kind object;
  #L3045ec.  call temp:= `equals`(v3, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3045f2.  v2:= temp;
  #L3045f4.  if v2 == 0 then goto L304630;
  #L3045f8.  call temp:= `w`(v0) @signature `Ls3/z;.w:()Ljava/lang/String;` @kind virtual;
  #L3045fe.  v0:= temp @kind object;
  #L304600.  if v0 == 0 then goto L304630;
  #L304604.  call temp:= `a`(v5) @signature `La2/m;.a:()J` @kind interface;
  #L30460a.  v2:= temp @kind wide;
  #L30460c.  call temp:= `f`(v0, v2) @signature `Lf2/a;.f:(Ljava/lang/String;J)Lt2/b;` @kind static;
  #L304612.  v5:= temp @kind object;
  #L304614.  v4.`f2.a.g` @type ^`t2.b` := v5 @kind object;
  #L304618.  if v5 == 0 then goto L304630;
  #L30461c.  v2:= v5.`t2.b.r` @type ^`long` @kind wide;
  #L304620.  v4.`f2.a.f` @type ^`long` := v2 @kind wide;
  #L304624.  goto L304630;
  #L304626.  v0:= v4.`f2.a.e` @type ^`int`;
  #L30462a.  call `j`(v5, v0) @signature `La2/m;.j:(I)V` @kind interface;
  #L304630.  v4.`f2.a.c` @type ^`int` := v1;
  #L304634.  return @kind void;
}
procedure `void` `m`(`f2.a` v3 @kind this, `a2.m` v4 @kind object) @signature `Lf2/a;.m:(La2/m;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L304648.  v0:= v3.`f2.a.a` @type ^`s3.z` @kind object;
  #L30464c.  v1:= 2I;
  #L30464e.  call `K`(v0, v1) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L304654.  v0:= v3.`f2.a.a` @type ^`s3.z` @kind object;
  #L304658.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L30465e.  v0:= temp @kind object;
  #L304660.  v2:= 0I;
  #L304662.  call `readFully`(v4, v0, v2, v1) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L304668.  v4:= v3.`f2.a.a` @type ^`s3.z` @kind object;
  #L30466c.  call temp:= `I`(v4) @signature `Ls3/z;.I:()I` @kind virtual;
  #L304672.  v4:= temp;
  #L304674.  v4:= v4 - v1 @kind int;
  #L304676.  v3.`f2.a.e` @type ^`int` := v4;
  #L30467a.  v3.`f2.a.c` @type ^`int` := v1;
  #L30467e.  return @kind void;
}
procedure `void` `n`(`f2.a` v4 @kind this, `a2.m` v5 @kind object) @signature `Lf2/a;.n:(La2/m;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3046fc.  v0:= v4.`f2.a.a` @type ^`s3.z` @kind object;
  #L304700.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L304706.  v0:= temp @kind object;
  #L304708.  v1:= 0I;
  #L30470a.  v2:= 1I;
  #L30470c.  call temp:= `m`(v5, v0, v1, v2, v2) @signature `La2/m;.m:([BIIZ)Z` @kind interface;
  #L304712.  v0:= temp;
  #L304714.  if v0 != 0 then goto L304720;
  #L304718.  call `e`(v4) @signature `Lf2/a;.e:()V` @kind direct;
  #L30471e.  goto L30478c;
  #L304720.  call `i`(v5) @signature `La2/m;.i:()V` @kind interface;
  #L304726.  v0:= v4.`f2.a.j` @type ^`i2.k` @kind object;
  #L30472a.  if v0 != 0 then goto L30473c;
  #L30472e.  v0:= new `i2.k`;
  #L304732.  call `<init>`(v0) @signature `Li2/k;.<init>:()V` @kind direct;
  #L304738.  v4.`f2.a.j` @type ^`i2.k` := v0 @kind object;
  #L30473c.  v0:= new `f2.c`;
  #L304740.  v1:= v4.`f2.a.f` @type ^`long` @kind wide;
  #L304744.  call `<init>`(v0, v5, v1) @signature `Lf2/c;.<init>:(La2/m;J)V` @kind direct;
  #L30474a.  v4.`f2.a.i` @type ^`f2.c` := v0 @kind object;
  #L30474e.  v5:= v4.`f2.a.j` @type ^`i2.k` @kind object;
  #L304752.  call temp:= `g`(v5, v0) @signature `Li2/k;.g:(La2/m;)Z` @kind virtual;
  #L304758.  v5:= temp;
  #L30475a.  if v5 == 0 then goto L304718;
  #L30475e.  v5:= v4.`f2.a.j` @type ^`i2.k` @kind object;
  #L304762.  v0:= new `f2.d`;
  #L304766.  v1:= v4.`f2.a.f` @type ^`long` @kind wide;
  #L30476a.  v3:= v4.`f2.a.b` @type ^`a2.n` @kind object;
  #L30476e.  call temp:= `e`(v3) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L304774.  v3:= temp @kind object;
  #L304776.  v3:= (`a2.n`) v3 @kind object;
  #L30477a.  call `<init>`(v0, v1, v3) @signature `Lf2/d;.<init>:(JLa2/n;)V` @kind direct;
  #L304780.  call `d`(v5, v0) @signature `Li2/k;.d:(La2/n;)V` @kind virtual;
  #L304786.  call `o`(v4) @signature `Lf2/a;.o:()V` @kind direct;
  #L30478c.  return @kind void;
}
procedure `void` `o`(`f2.a` v3 @kind this) @signature `Lf2/a;.o:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3047a0.  v0:= 1I;
  #L3047a2.  v0:= new `n2.a$b`[v0];
  #L3047a6.  v1:= v3.`f2.a.g` @type ^`t2.b` @kind object;
  #L3047aa.  call temp:= `e`(v1) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3047b0.  v1:= temp @kind object;
  #L3047b2.  v1:= (`n2.a$b`) v1 @kind object;
  #L3047b6.  v2:= 0I;
  #L3047b8.  v0[v2]:= v1 @kind object;
  #L3047bc.  call `h`(v3, v0) @signature `Lf2/a;.h:([Ln2/a$b;)V` @kind direct;
  #L3047c2.  v0:= 5I;
  #L3047c4.  v3.`f2.a.c` @type ^`int` := v0;
  #L3047c8.  return @kind void;
}
procedure `void` `a`(`f2.a` v1 @kind this) @signature `Lf2/a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L304690.  v0:= v1.`f2.a.j` @type ^`i2.k` @kind object;
  #L304694.  if v0 == 0 then goto L30469e;
  #L304698.  call `a`(v0) @signature `Li2/k;.a:()V` @kind virtual;
  #L30469e.  return @kind void;
}
procedure `void` `b`(`f2.a` v3 @kind this, `long` v4 , `long` v6 ) @signature `Lf2/a;.b:(JJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3046b0.  v0:= 0L;
  #L3046b4.  v2:= lcmp(v4, v0);
  #L3046b8.  if v2 != 0 then goto L3046ca;
  #L3046bc.  v4:= 0I;
  #L3046be.  v3.`f2.a.c` @type ^`int` := v4;
  #L3046c2.  v4:= 0I;
  #L3046c4.  v3.`f2.a.j` @type ^`i2.k` := v4 @kind object;
  #L3046c8.  goto L3046ea;
  #L3046ca.  v0:= v3.`f2.a.c` @type ^`int`;
  #L3046ce.  v1:= 5I;
  #L3046d0.  if v0 != v1 then goto L3046ea;
  #L3046d4.  v0:= v3.`f2.a.j` @type ^`i2.k` @kind object;
  #L3046d8.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3046de.  v0:= temp @kind object;
  #L3046e0.  v0:= (`i2.k`) v0 @kind object;
  #L3046e4.  call `b`(v0, v4, v6) @signature `Li2/k;.b:(JJ)V` @kind virtual;
  #L3046ea.  return @kind void;
}
procedure `void` `d`(`f2.a` v0 @kind this, `a2.n` v1 @kind object) @signature `Lf2/a;.d:(La2/n;)V` @AccessFlag PUBLIC {
    temp;

  #L304498.  v0.`f2.a.b` @type ^`a2.n` := v1 @kind object;
  #L30449c.  return @kind void;
}
procedure `boolean` `g`(`f2.a` v6 @kind this, `a2.m` v7 @kind object) @signature `Lf2/a;.g:(La2/m;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3041c4.  call temp:= `i`(v6, v7) @signature `Lf2/a;.i:(La2/m;)I` @kind direct;
  #L3041ca.  v0:= temp;
  #L3041cc.  v1:= 0I;
  #L3041ce.  v2:= 65496I;
  #L3041d4.  if v0 == v2 then goto L3041da;
  #L3041d8.  return v1;
  #L3041da.  call temp:= `i`(v6, v7) @signature `Lf2/a;.i:(La2/m;)I` @kind direct;
  #L3041e0.  v0:= temp;
  #L3041e2.  v6.`f2.a.d` @type ^`int` := v0;
  #L3041e6.  v2:= 65504I;
  #L3041ec.  if v0 != v2 then goto L304202;
  #L3041f0.  call `c`(v6, v7) @signature `Lf2/a;.c:(La2/m;)V` @kind direct;
  #L3041f6.  call temp:= `i`(v6, v7) @signature `Lf2/a;.i:(La2/m;)I` @kind direct;
  #L3041fc.  v0:= temp;
  #L3041fe.  v6.`f2.a.d` @type ^`int` := v0;
  #L304202.  v0:= v6.`f2.a.d` @type ^`int`;
  #L304206.  v2:= 65505I;
  #L30420c.  if v0 == v2 then goto L304212;
  #L304210.  return v1;
  #L304212.  v0:= 2I;
  #L304214.  call `p`(v7, v0) @signature `La2/m;.p:(I)V` @kind interface;
  #L30421a.  v0:= v6.`f2.a.a` @type ^`s3.z` @kind object;
  #L30421e.  v2:= 6I;
  #L304220.  call `K`(v0, v2) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L304226.  v0:= v6.`f2.a.a` @type ^`s3.z` @kind object;
  #L30422a.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L304230.  v0:= temp @kind object;
  #L304232.  call `o`(v7, v0, v1, v2) @signature `La2/m;.o:([BII)V` @kind interface;
  #L304238.  v7:= v6.`f2.a.a` @type ^`s3.z` @kind object;
  #L30423c.  call temp:= `E`(v7) @signature `Ls3/z;.E:()J` @kind virtual;
  #L304242.  v2:= temp @kind wide;
  #L304244.  v4:= 5.758429993E-315D;
  #L30424a.  v7:= lcmp(v2, v4);
  #L30424e.  if v7 != 0 then goto L304264;
  #L304252.  v7:= v6.`f2.a.a` @type ^`s3.z` @kind object;
  #L304256.  call temp:= `I`(v7) @signature `Ls3/z;.I:()I` @kind virtual;
  #L30425c.  v7:= temp;
  #L30425e.  if v7 != 0 then goto L304264;
  #L304262.  v1:= 1I;
  #L304264.  return v1;
}
procedure `int` `j`(`f2.a` v7 @kind this, `a2.m` v8 @kind object, `a2.z` v9 @kind object) @signature `Lf2/a;.j:(La2/m;La2/z;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3042b8.  v0:= v7.`f2.a.c` @type ^`int`;
  #L3042bc.  v1:= 0I;
  #L3042be.  if v0 == 0 then goto L304378;
  #L3042c2.  v2:= 1I;
  #L3042c4.  if v0 == v2 then goto L304370;
  #L3042c8.  v3:= 2I;
  #L3042ca.  if v0 == v3 then goto L304368;
  #L3042ce.  v3:= 4I;
  #L3042d0.  if v0 == v3 then goto L304346;
  #L3042d4.  v1:= 5I;
  #L3042d6.  if v0 == v1 then goto L3042f0;
  #L3042da.  v8:= 6I;
  #L3042dc.  if v0 != v8 then goto L3042e4;
  #L3042e0.  v8:= -1I;
  #L3042e2.  return v8;
  #L3042e4.  v8:= new `java.lang.IllegalStateException`;
  #L3042e8.  call `<init>`(v8) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3042ee.  throw v8;
  #L3042f0.  v0:= v7.`f2.a.i` @type ^`f2.c` @kind object;
  #L3042f4.  if v0 == 0 then goto L304300;
  #L3042f8.  v0:= v7.`f2.a.h` @type ^`a2.m` @kind object;
  #L3042fc.  if v8 == v0 then goto L304316;
  #L304300.  v7.`f2.a.h` @type ^`a2.m` := v8 @kind object;
  #L304304.  v0:= new `f2.c`;
  #L304308.  v3:= v7.`f2.a.f` @type ^`long` @kind wide;
  #L30430c.  call `<init>`(v0, v8, v3) @signature `Lf2/c;.<init>:(La2/m;J)V` @kind direct;
  #L304312.  v7.`f2.a.i` @type ^`f2.c` := v0 @kind object;
  #L304316.  v8:= v7.`f2.a.j` @type ^`i2.k` @kind object;
  #L30431a.  call temp:= `e`(v8) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L304320.  v8:= temp @kind object;
  #L304322.  v8:= (`i2.k`) v8 @kind object;
  #L304326.  v0:= v7.`f2.a.i` @type ^`f2.c` @kind object;
  #L30432a.  call temp:= `j`(v8, v0, v9) @signature `Li2/k;.j:(La2/m;La2/z;)I` @kind virtual;
  #L304330.  v8:= temp;
  #L304332.  if v8 != v2 then goto L304344;
  #L304336.  v0:= v9.`a2.z.a` @type ^`long` @kind wide;
  #L30433a.  v2:= v7.`f2.a.f` @type ^`long` @kind wide;
  #L30433e.  v0:= v0 + v2 @kind long;
  #L304340.  v9.`a2.z.a` @type ^`long` := v0 @kind wide;
  #L304344.  return v8;
  #L304346.  call temp:= `q`(v8) @signature `La2/m;.q:()J` @kind interface;
  #L30434c.  v3:= temp @kind wide;
  #L30434e.  v5:= v7.`f2.a.f` @type ^`long` @kind wide;
  #L304352.  v0:= lcmp(v3, v5);
  #L304356.  if v0 == 0 then goto L304360;
  #L30435a.  v9.`a2.z.a` @type ^`long` := v5 @kind wide;
  #L30435e.  return v2;
  #L304360.  call `n`(v7, v8) @signature `Lf2/a;.n:(La2/m;)V` @kind direct;
  #L304366.  return v1;
  #L304368.  call `l`(v7, v8) @signature `Lf2/a;.l:(La2/m;)V` @kind direct;
  #L30436e.  return v1;
  #L304370.  call `m`(v7, v8) @signature `Lf2/a;.m:(La2/m;)V` @kind direct;
  #L304376.  return v1;
  #L304378.  call `k`(v7, v8) @signature `Lf2/a;.k:(La2/m;)V` @kind direct;
  #L30437e.  return v1;
}
