record `f2.d` @kind class @AccessFlag PUBLIC_FINAL extends `a2.n` @kind interface {
  `long` `f2.d.o` @AccessFlag PRIVATE_FINAL;
  `a2.n` `f2.d.p` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`f2.d` v0 @kind this, `long` v1 , `a2.n` v3 @kind object) @signature `Lf2/d;.<init>:(JLa2/n;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L304ab8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L304abe.  v0.`f2.d.o` @type ^`long` := v1 @kind wide;
  #L304ac2.  v0.`f2.d.p` @type ^`a2.n` := v3 @kind object;
  #L304ac6.  return @kind void;
}
procedure `long` `a`(`f2.d` v2 @kind object) @signature `Lf2/d;.a:(Lf2/d;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L304aa0.  v0:= v2.`f2.d.o` @type ^`long` @kind wide;
  #L304aa4.  return v0 @kind wide;
}
procedure `a2.d0` `e`(`f2.d` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lf2/d;.e:(II)La2/d0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L304a80.  v0:= v1.`f2.d.p` @type ^`a2.n` @kind object;
  #L304a84.  call temp:= `e`(v0, v2, v3) @signature `La2/n;.e:(II)La2/d0;` @kind interface;
  #L304a8a.  v2:= temp @kind object;
  #L304a8c.  return v2 @kind object;
}
procedure `void` `h`(`f2.d` v1 @kind this) @signature `Lf2/d;.h:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L304ad8.  v0:= v1.`f2.d.p` @type ^`a2.n` @kind object;
  #L304adc.  call `h`(v0) @signature `La2/n;.h:()V` @kind interface;
  #L304ae2.  return @kind void;
}
procedure `void` `m`(`f2.d` v2 @kind this, `a2.a0` v3 @kind object) @signature `Lf2/d;.m:(La2/a0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L304af4.  v0:= v2.`f2.d.p` @type ^`a2.n` @kind object;
  #L304af8.  v1:= new `f2.d$a`;
  #L304afc.  call `<init>`(v1, v2, v3) @signature `Lf2/d$a;.<init>:(Lf2/d;La2/a0;)V` @kind direct;
  #L304b02.  call `m`(v0, v1) @signature `La2/n;.m:(La2/a0;)V` @kind interface;
  #L304b08.  return @kind void;
}
