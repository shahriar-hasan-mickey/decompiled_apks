record `f2.e` @kind class @AccessFlag FINAL {
}
global `java.lang.String`[] `@@f2.e.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@f2.e.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@f2.e.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lf2/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L304efc.  v0:= "Camera:MotionPhoto" @kind object;
  #L304f00.  v1:= "GCamera:MotionPhoto" @kind object;
  #L304f04.  v2:= "Camera:MicroVideo" @kind object;
  #L304f08.  v3:= "GCamera:MicroVideo" @kind object;
  #L304f0c.  temp:= new `java.lang.String`[v0, v1, v2, v3];
  #L304f12.  v0:= temp @kind object;
  #L304f14.  `@@f2.e.a` @type ^`java.lang.String`[] := v0 @kind object;
  #L304f18.  v0:= "Camera:MotionPhotoPresentationTimestampUs" @kind object;
  #L304f1c.  v1:= "GCamera:MotionPhotoPresentationTimestampUs" @kind object;
  #L304f20.  v2:= "Camera:MicroVideoPresentationTimestampUs" @kind object;
  #L304f24.  v3:= "GCamera:MicroVideoPresentationTimestampUs" @kind object;
  #L304f28.  temp:= new `java.lang.String`[v0, v1, v2, v3];
  #L304f2e.  v0:= temp @kind object;
  #L304f30.  `@@f2.e.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L304f34.  v0:= "Camera:MicroVideoOffset" @kind object;
  #L304f38.  v1:= "GCamera:MicroVideoOffset" @kind object;
  #L304f3c.  temp:= new `java.lang.String`[v0, v1];
  #L304f42.  v0:= temp @kind object;
  #L304f44.  `@@f2.e.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L304f48.  return @kind void;
}
procedure `f2.b` `a`(`java.lang.String` v1 @kind object) @signature `Lf2/e;.a:(Ljava/lang/String;)Lf2/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L304b64.  call temp:= `b`(v1) @signature `Lf2/e;.b:(Ljava/lang/String;)Lf2/b;` @kind static;
  #L304b6a.  v1:= temp @kind object;
  #L304b6c.  return v1 @kind object;
  #L304b6e.  v1:= "MotionPhotoXmpParser" @kind object;
  #L304b72.  v0:= "Ignoring unexpected XMP metadata" @kind object;
  #L304b76.  call `h`(v1, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L304b7c.  v1:= 0I;
  #L304b7e.  return v1 @kind object;
  catch `org.xmlpull.v1.XmlPullParserException` @[L304b64..L304b6c] goto L304b6e;
  catch `v1.e2` @[L304b64..L304b6c] goto L304b6e;
  catch `java.lang.NumberFormatException` @[L304b64..L304b6c] goto L304b6e;
}
procedure `f2.b` `b`(`java.lang.String` v6 @kind object) @signature `Lf2/e;.b:(Ljava/lang/String;)Lf2/b;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L304ba4.  call temp:= `newInstance`() @signature `Lorg/xmlpull/v1/XmlPullParserFactory;.newInstance:()Lorg/xmlpull/v1/XmlPullParserFactory;` @kind static;
  #L304baa.  v0:= temp @kind object;
  #L304bac.  call temp:= `newPullParser`(v0) @signature `Lorg/xmlpull/v1/XmlPullParserFactory;.newPullParser:()Lorg/xmlpull/v1/XmlPullParser;` @kind virtual;
  #L304bb2.  v0:= temp @kind object;
  #L304bb4.  v1:= new `java.io.StringReader`;
  #L304bb8.  call `<init>`(v1, v6) @signature `Ljava/io/StringReader;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L304bbe.  call `setInput`(v0, v1) @signature `Lorg/xmlpull/v1/XmlPullParser;.setInput:(Ljava/io/Reader;)V` @kind interface;
  #L304bc4.  call temp:= `next`(v0) @signature `Lorg/xmlpull/v1/XmlPullParser;.next:()I` @kind interface;
  #L304bca.  v6:= "x:xmpmeta" @kind object;
  #L304bce.  call temp:= `f`(v0, v6) @signature `Ls3/m0;.f:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L304bd4.  v1:= temp;
  #L304bd6.  v2:= 0I;
  #L304bd8.  if v1 == 0 then goto L304c86;
  #L304bdc.  v3:= -4.9E-324D;
  #L304be6.  call temp:= `a0`() @signature `Lm5/q;.a0:()Lm5/q;` @kind static;
  #L304bec.  v1:= temp @kind object;
  #L304bee.  call temp:= `next`(v0) @signature `Lorg/xmlpull/v1/XmlPullParser;.next:()I` @kind interface;
  #L304bf4.  v5:= "rdf:Description" @kind object;
  #L304bf8.  call temp:= `f`(v0, v5) @signature `Ls3/m0;.f:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L304bfe.  v5:= temp;
  #L304c00.  if v5 == 0 then goto L304c24;
  #L304c04.  call temp:= `d`(v0) @signature `Lf2/e;.d:(Lorg/xmlpull/v1/XmlPullParser;)Z` @kind static;
  #L304c0a.  v1:= temp;
  #L304c0c.  if v1 != 0 then goto L304c12;
  #L304c10.  return v2 @kind object;
  #L304c12.  call temp:= `e`(v0) @signature `Lf2/e;.e:(Lorg/xmlpull/v1/XmlPullParser;)J` @kind static;
  #L304c18.  v3:= temp @kind wide;
  #L304c1a.  call temp:= `c`(v0) @signature `Lf2/e;.c:(Lorg/xmlpull/v1/XmlPullParser;)Lm5/q;` @kind static;
  #L304c20.  v1:= temp @kind object;
  #L304c22.  goto L304c60;
  #L304c24.  v5:= "Container:Directory" @kind object;
  #L304c28.  call temp:= `f`(v0, v5) @signature `Ls3/m0;.f:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L304c2e.  v5:= temp;
  #L304c30.  if v5 == 0 then goto L304c46;
  #L304c34.  v1:= "Container" @kind object;
  #L304c38.  v5:= "Item" @kind object;
  #L304c3c.  call temp:= `f`(v0, v1, v5) @signature `Lf2/e;.f:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;Ljava/lang/String;)Lm5/q;` @kind static;
  #L304c42.  v1:= temp @kind object;
  #L304c44.  goto L304c60;
  #L304c46.  v5:= "GContainer:Directory" @kind object;
  #L304c4a.  call temp:= `f`(v0, v5) @signature `Ls3/m0;.f:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L304c50.  v5:= temp;
  #L304c52.  if v5 == 0 then goto L304c60;
  #L304c56.  v1:= "GContainer" @kind object;
  #L304c5a.  v5:= "GContainerItem" @kind object;
  #L304c5e.  goto L304c3c;
  #L304c60.  call temp:= `d`(v0, v6) @signature `Ls3/m0;.d:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L304c66.  v5:= temp;
  #L304c68.  if v5 == 0 then goto L304bee;
  #L304c6c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L304c72.  v6:= temp;
  #L304c74.  if v6 == 0 then goto L304c7a;
  #L304c78.  return v2 @kind object;
  #L304c7a.  v6:= new `f2.b`;
  #L304c7e.  call `<init>`(v6, v3, v1) @signature `Lf2/b;.<init>:(JLjava/util/List;)V` @kind direct;
  #L304c84.  return v6 @kind object;
  #L304c86.  v6:= "Couldn't find xmp metadata" @kind object;
  #L304c8a.  call temp:= `a`(v6, v2) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L304c90.  v6:= temp @kind object;
  #L304c92.  throw v6;
}
procedure `m5.q` `c`(`org.xmlpull.v1.XmlPullParser` v11 @kind object) @signature `Lf2/e;.c:(Lorg/xmlpull/v1/XmlPullParser;)Lm5/q;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L304cfc.  v0:= `@@f2.e.c` @type ^`java.lang.String`[] @kind object;
  #L304d00.  v1:= length @variable v0;
  #L304d02.  v2:= 0I;
  #L304d04.  if v2 >= v1 then goto L304d64;
  #L304d08.  v3:= v0[v2] @kind object;
  #L304d0c.  call temp:= `a`(v11, v3) @signature `Ls3/m0;.a:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L304d12.  v3:= temp @kind object;
  #L304d14.  if v3 == 0 then goto L304d5e;
  #L304d18.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L304d1e.  v7:= temp @kind wide;
  #L304d20.  v11:= new `f2.b$a`;
  #L304d24.  v3:= 0L;
  #L304d28.  v5:= 0L;
  #L304d2c.  v1:= "image/jpeg" @kind object;
  #L304d30.  v2:= "Primary" @kind object;
  #L304d34.  v0:= v11 @kind object;
  #L304d36.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lf2/b$a;.<init>:(Ljava/lang/String;Ljava/lang/String;JJ)V` @kind direct;
  #L304d3c.  v0:= new `f2.b$a`;
  #L304d40.  v9:= 0L;
  #L304d44.  v5:= "video/mp4" @kind object;
  #L304d48.  v6:= "MotionPhoto" @kind object;
  #L304d4c.  v4:= v0 @kind object;
  #L304d4e.  call `<init>`(v4, v5, v6, v7, v9) @signature `Lf2/b$a;.<init>:(Ljava/lang/String;Ljava/lang/String;JJ)V` @kind direct;
  #L304d54.  call temp:= `c0`(v11, v0) @signature `Lm5/q;.c0:(Ljava/lang/Object;Ljava/lang/Object;)Lm5/q;` @kind static;
  #L304d5a.  v11:= temp @kind object;
  #L304d5c.  return v11 @kind object;
  #L304d5e.  v2:= v2 + 1;
  #L304d62.  goto L304d04;
  #L304d64.  call temp:= `a0`() @signature `Lm5/q;.a0:()Lm5/q;` @kind static;
  #L304d6a.  v11:= temp @kind object;
  #L304d6c.  return v11 @kind object;
}
procedure `boolean` `d`(`org.xmlpull.v1.XmlPullParser` v5 @kind object) @signature `Lf2/e;.d:(Lorg/xmlpull/v1/XmlPullParser;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L304b1c.  v0:= `@@f2.e.a` @type ^`java.lang.String`[] @kind object;
  #L304b20.  v1:= length @variable v0;
  #L304b22.  v2:= 0I;
  #L304b24.  v3:= 0I;
  #L304b26.  if v3 >= v1 then goto L304b52;
  #L304b2a.  v4:= v0[v3] @kind object;
  #L304b2e.  call temp:= `a`(v5, v4) @signature `Ls3/m0;.a:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L304b34.  v4:= temp @kind object;
  #L304b36.  if v4 == 0 then goto L304b4c;
  #L304b3a.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L304b40.  v5:= temp;
  #L304b42.  v0:= 1I;
  #L304b44.  if v5 != v0 then goto L304b4a;
  #L304b48.  v2:= 1I;
  #L304b4a.  return v2;
  #L304b4c.  v3:= v3 + 1;
  #L304b50.  goto L304b26;
  #L304b52.  return v2;
}
procedure `long` `e`(`org.xmlpull.v1.XmlPullParser` v7 @kind object) @signature `Lf2/e;.e:(Lorg/xmlpull/v1/XmlPullParser;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L304ca4.  v0:= `@@f2.e.b` @type ^`java.lang.String`[] @kind object;
  #L304ca8.  v1:= length @variable v0;
  #L304caa.  v2:= 0I;
  #L304cac.  v3:= -4.9E-324D;
  #L304cb6.  if v2 >= v1 then goto L304cea;
  #L304cba.  v5:= v0[v2] @kind object;
  #L304cbe.  call temp:= `a`(v7, v5) @signature `Ls3/m0;.a:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L304cc4.  v5:= temp @kind object;
  #L304cc6.  if v5 == 0 then goto L304ce4;
  #L304cca.  call temp:= `parseLong`(v5) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L304cd0.  v0:= temp @kind wide;
  #L304cd2.  v5:= -1L;
  #L304cd6.  v7:= lcmp(v0, v5);
  #L304cda.  if v7 != 0 then goto L304ce0;
  #L304cde.  goto L304ce2;
  #L304ce0.  v3:= v0 @kind wide;
  #L304ce2.  return v3 @kind wide;
  #L304ce4.  v2:= v2 + 1;
  #L304ce8.  goto L304cac;
  #L304cea.  return v3 @kind wide;
}
procedure `m5.q` `f`(`org.xmlpull.v1.XmlPullParser` v13 @kind object, `java.lang.String` v14 @kind object, `java.lang.String` v15 @kind object) @signature `Lf2/e;.f:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;Ljava/lang/String;)Lm5/q;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L304d80.  call temp:= `N`() @signature `Lm5/q;.N:()Lm5/q$a;` @kind static;
  #L304d86.  v0:= temp @kind object;
  #L304d88.  v1:= new `java.lang.StringBuilder`;
  #L304d8c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304d92.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304d98.  v2:= ":Item" @kind object;
  #L304d9c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304da2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304da8.  v1:= temp @kind object;
  #L304daa.  v2:= new `java.lang.StringBuilder`;
  #L304dae.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304db4.  call temp:= `append`(v2, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304dba.  v14:= ":Directory" @kind object;
  #L304dbe.  call temp:= `append`(v2, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304dc4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304dca.  v14:= temp @kind object;
  #L304dcc.  call temp:= `next`(v13) @signature `Lorg/xmlpull/v1/XmlPullParser;.next:()I` @kind interface;
  #L304dd2.  call temp:= `f`(v13, v1) @signature `Ls3/m0;.f:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L304dd8.  v2:= temp;
  #L304dda.  if v2 == 0 then goto L304ed4;
  #L304dde.  v2:= new `java.lang.StringBuilder`;
  #L304de2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304de8.  call temp:= `append`(v2, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304dee.  v3:= ":Mime" @kind object;
  #L304df2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304df8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304dfe.  v2:= temp @kind object;
  #L304e00.  v3:= new `java.lang.StringBuilder`;
  #L304e04.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304e0a.  call temp:= `append`(v3, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304e10.  v4:= ":Semantic" @kind object;
  #L304e14.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304e1a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304e20.  v3:= temp @kind object;
  #L304e22.  v4:= new `java.lang.StringBuilder`;
  #L304e26.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304e2c.  call temp:= `append`(v4, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304e32.  v5:= ":Length" @kind object;
  #L304e36.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304e3c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304e42.  v4:= temp @kind object;
  #L304e44.  v5:= new `java.lang.StringBuilder`;
  #L304e48.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304e4e.  call temp:= `append`(v5, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304e54.  v6:= ":Padding" @kind object;
  #L304e58.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304e5e.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304e64.  v5:= temp @kind object;
  #L304e66.  call temp:= `a`(v13, v2) @signature `Ls3/m0;.a:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L304e6c.  v7:= temp @kind object;
  #L304e6e.  call temp:= `a`(v13, v3) @signature `Ls3/m0;.a:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L304e74.  v8:= temp @kind object;
  #L304e76.  call temp:= `a`(v13, v4) @signature `Ls3/m0;.a:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L304e7c.  v2:= temp @kind object;
  #L304e7e.  call temp:= `a`(v13, v5) @signature `Ls3/m0;.a:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L304e84.  v3:= temp @kind object;
  #L304e86.  if v7 == 0 then goto L304eca;
  #L304e8a.  if v8 != 0 then goto L304e90;
  #L304e8e.  goto L304eca;
  #L304e90.  v4:= new `f2.b$a`;
  #L304e94.  v5:= 0L;
  #L304e98.  if v2 == 0 then goto L304ea6;
  #L304e9c.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L304ea2.  v9:= temp @kind wide;
  #L304ea4.  goto L304ea8;
  #L304ea6.  v9:= v5 @kind wide;
  #L304ea8.  if v3 == 0 then goto L304eb8;
  #L304eac.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L304eb2.  v2:= temp @kind wide;
  #L304eb4.  v11:= v2 @kind wide;
  #L304eb6.  goto L304eba;
  #L304eb8.  v11:= v5 @kind wide;
  #L304eba.  v6:= v4 @kind object;
  #L304ebc.  call `<init>`(v6, v7, v8, v9, v11) @signature `Lf2/b$a;.<init>:(Ljava/lang/String;Ljava/lang/String;JJ)V` @kind direct;
  #L304ec2.  call temp:= `f`(v0, v4) @signature `Lm5/q$a;.f:(Ljava/lang/Object;)Lm5/q$a;` @kind virtual;
  #L304ec8.  goto L304ed4;
  #L304eca.  call temp:= `a0`() @signature `Lm5/q;.a0:()Lm5/q;` @kind static;
  #L304ed0.  v13:= temp @kind object;
  #L304ed2.  return v13 @kind object;
  #L304ed4.  call temp:= `d`(v13, v14) @signature `Ls3/m0;.d:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L304eda.  v2:= temp;
  #L304edc.  if v2 == 0 then goto L304dcc;
  #L304ee0.  call temp:= `h`(v0) @signature `Lm5/q$a;.h:()Lm5/q;` @kind virtual;
  #L304ee6.  v13:= temp @kind object;
  #L304ee8.  return v13 @kind object;
}
