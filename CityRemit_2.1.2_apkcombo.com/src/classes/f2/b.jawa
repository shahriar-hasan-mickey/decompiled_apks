record `f2.b` @kind class @AccessFlag FINAL {
  `long` `f2.b.a` @AccessFlag PUBLIC_FINAL;
  `java.util.List` `f2.b.b` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`f2.b` v0 @kind this, `long` v1 , `java.util.List` v3 @kind object) @signature `Lf2/b;.<init>:(JLjava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3048f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3048fe.  v0.`f2.b.a` @type ^`long` := v1 @kind wide;
  #L304902.  v0.`f2.b.b` @type ^`java.util.List` := v3 @kind object;
  #L304906.  return @kind void;
}
procedure `t2.b` `a`(`f2.b` v23 @kind this, `long` v24 ) @signature `Lf2/b;.a:(J)Lt2/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L304800.  v0:= v23 @kind object;
  #L304804.  v1:= v0.`f2.b.b` @type ^`java.util.List` @kind object;
  #L304808.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L30480e.  v1:= temp;
  #L304810.  v2:= 0I;
  #L304812.  v3:= 2I;
  #L304814.  if v1 >= v3 then goto L30481a;
  #L304818.  return v2 @kind object;
  #L30481a.  v1:= v0.`f2.b.b` @type ^`java.util.List` @kind object;
  #L30481e.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L304824.  v1:= temp;
  #L304826.  v1:= v1 + -1;
  #L30482a.  v4:= -1L;
  #L30482e.  v6:= v24 @kind wide;
  #L304832.  v9:= v4 @kind wide;
  #L304834.  v11:= v9 @kind wide;
  #L304836.  v15:= v11 @kind wide;
  #L304838.  v17:= v15 @kind wide;
  #L30483c.  v8:= 0I;
  #L30483e.  if v1 < 0 then goto L3048b2;
  #L304842.  v13:= v0.`f2.b.b` @type ^`java.util.List` @kind object;
  #L304846.  call temp:= `get`(v13, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30484c.  v13:= temp @kind object;
  #L30484e.  v13:= (`f2.b$a`) v13 @kind object;
  #L304852.  v14:= v13.`f2.b$a.a` @type ^`java.lang.String` @kind object;
  #L304856.  v3:= "video/mp4" @kind object;
  #L30485a.  call temp:= `equals`(v3, v14) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L304860.  v3:= temp;
  #L304862.  v3:= v3 ^| v8 @kind int;
  #L304864.  if v1 != 0 then goto L30487a;
  #L304868.  v19:= 0L;
  #L30486c.  v13:= v13.`f2.b$a.c` @type ^`long` @kind wide;
  #L304870.  v6:= v6 - v13 @kind long;
  #L304872.  v13:= v6 @kind wide;
  #L304874.  v6:= v19 @kind wide;
  #L304878.  goto L30488c;
  #L30487a.  v13:= v13.`f2.b$a.b` @type ^`long` @kind wide;
  #L30487e.  v13:= v6 - v13 @kind long;
  #L304882.  v21:= v6 @kind wide;
  #L304886.  v6:= v13 @kind wide;
  #L304888.  v13:= v21 @kind wide;
  #L30488c.  if v3 == 0 then goto L3048a2;
  #L304890.  v8:= lcmp(v6, v13);
  #L304894.  if v8 == 0 then goto L3048a2;
  #L304898.  v17:= v13 - v6 @kind long;
  #L30489c.  v15:= v6 @kind wide;
  #L30489e.  v8:= 0I;
  #L3048a0.  goto L3048a4;
  #L3048a2.  v8:= v3;
  #L3048a4.  if v1 != 0 then goto L3048ac;
  #L3048a8.  v9:= v6 @kind wide;
  #L3048aa.  v11:= v13 @kind wide;
  #L3048ac.  v1:= v1 + -1;
  #L3048b0.  goto L30483e;
  #L3048b2.  v1:= lcmp(v15, v4);
  #L3048b6.  if v1 == 0 then goto L3048e6;
  #L3048ba.  v1:= lcmp(v17, v4);
  #L3048be.  if v1 == 0 then goto L3048e6;
  #L3048c2.  v1:= lcmp(v9, v4);
  #L3048c6.  if v1 == 0 then goto L3048e6;
  #L3048ca.  v1:= lcmp(v11, v4);
  #L3048ce.  if v1 != 0 then goto L3048d4;
  #L3048d2.  goto L3048e6;
  #L3048d4.  v1:= new `t2.b`;
  #L3048d8.  v13:= v0.`f2.b.a` @type ^`long` @kind wide;
  #L3048dc.  v8:= v1 @kind object;
  #L3048de.  call `<init>`(v8, v9, v11, v13, v15, v17) @signature `Lt2/b;.<init>:(JJJJJ)V` @kind direct;
  #L3048e4.  return v1 @kind object;
  #L3048e6.  return v2 @kind object;
}
