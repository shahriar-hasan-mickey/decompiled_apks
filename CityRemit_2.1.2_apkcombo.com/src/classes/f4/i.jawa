record `f4.i` @kind class @AccessFlag PUBLIC {
}
global `char`[] `@@f4.i.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `char`[] `@@f4.i.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lf4/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L306bc8.  v0:= 16I;
  #L306bcc.  v1:= new `char`[v0];
  #L306bd0.  goto L306bec;
  #L306bd6.  `@@f4.i.a` @type ^`char`[] := v1 @kind object;
  #L306bda.  v0:= new `char`[v0];
  #L306bde.  goto L306c14;
  #L306be4.  `@@f4.i.b` @type ^`char`[] := v0 @kind object;
  #L306be8.  return @kind void;
  #L306bea.  
  #L306bec.  v1:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L306c13.  goto L306bd6;
  #L306c14.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 97I, 98I, 99I, 100I, 101I, 102I) @kind object;
  #L306c3b.  goto L306be4;
}
procedure `java.lang.String` `a`(`byte`[] v7 @kind object) @signature `Lf4/i;.a:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L306aec.  v0:= length @variable v7;
  #L306aee.  v0:= v0 + v0 @kind int;
  #L306af0.  v0:= new `char`[v0];
  #L306af4.  v1:= 0I;
  #L306af6.  v2:= 0I;
  #L306af8.  v3:= length @variable v7;
  #L306afa.  if v1 >= v3 then goto L306b30;
  #L306afe.  v3:= v7[v1] @kind byte;
  #L306b02.  v3:= v3 ^& 255;
  #L306b06.  v4:= v2 + 1;
  #L306b0a.  v5:= `@@f4.i.b` @type ^`char`[] @kind object;
  #L306b0e.  v6:= v3 ^>> 4;
  #L306b12.  v6:= v5[v6] @kind char;
  #L306b16.  v0[v2]:= v6 @kind char;
  #L306b1a.  v2:= v4 + 1;
  #L306b1e.  v3:= v3 ^& 15;
  #L306b22.  v3:= v5[v3] @kind char;
  #L306b26.  v0[v4]:= v3 @kind char;
  #L306b2a.  v1:= v1 + 1;
  #L306b2e.  goto L306af8;
  #L306b30.  v7:= new `java.lang.String`;
  #L306b34.  call `<init>`(v7, v0) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L306b3a.  return v7 @kind object;
}
procedure `java.lang.String` `b`(`byte`[] v5 @kind object, `boolean` v6 ) @signature `Lf4/i;.b:([BZ)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L306b4c.  v0:= length @variable v5;
  #L306b4e.  v1:= new `java.lang.StringBuilder`;
  #L306b52.  v2:= v0 + v0 @kind int;
  #L306b56.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L306b5c.  v2:= 0I;
  #L306b5e.  if v2 >= v0 then goto L306bac;
  #L306b62.  if v6 == 0 then goto L306b7a;
  #L306b66.  v3:= v0 + -1;
  #L306b6a.  if v2 != v3 then goto L306b7a;
  #L306b6e.  v3:= v5[v2] @kind byte;
  #L306b72.  v3:= v3 ^& 255;
  #L306b76.  if v3 == 0 then goto L306bac;
  #L306b7a.  v3:= `@@f4.i.a` @type ^`char`[] @kind object;
  #L306b7e.  v4:= v5[v2] @kind byte;
  #L306b82.  v4:= v4 ^& 240;
  #L306b86.  v4:= v4 ^>> 4;
  #L306b8a.  v4:= v3[v4] @kind char;
  #L306b8e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L306b94.  v4:= v5[v2] @kind byte;
  #L306b98.  v4:= v4 ^& 15;
  #L306b9c.  v3:= v3[v4] @kind char;
  #L306ba0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L306ba6.  v2:= v2 + 1;
  #L306baa.  goto L306b5e;
  #L306bac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L306bb2.  v5:= temp @kind object;
  #L306bb4.  return v5 @kind object;
}
