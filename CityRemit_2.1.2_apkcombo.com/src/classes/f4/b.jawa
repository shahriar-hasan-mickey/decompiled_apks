record `f4.b` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object`[] `a`(`java.lang.Object`[][] v6 @kind object) @signature `Lf4/b;.a:([[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3066d8.  v0:= length @variable v6;
  #L3066da.  v1:= 0I;
  #L3066dc.  if v0 == 0 then goto L306728;
  #L3066e0.  v0:= 0I;
  #L3066e2.  v2:= 0I;
  #L3066e4.  v3:= length @variable v6;
  #L3066e6.  if v0 >= v3 then goto L3066f8;
  #L3066ea.  v3:= v6[v0] @kind object;
  #L3066ee.  v3:= length @variable v3;
  #L3066f0.  v2:= v2 + v3 @kind int;
  #L3066f2.  v0:= v0 + 1;
  #L3066f6.  goto L3066e4;
  #L3066f8.  v0:= v6[v1] @kind object;
  #L3066fc.  call temp:= `copyOf`(v0, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L306702.  v0:= temp @kind object;
  #L306704.  v2:= v6[v1] @kind object;
  #L306708.  v2:= length @variable v2;
  #L30670a.  v3:= 1I;
  #L30670c.  v4:= length @variable v6;
  #L30670e.  if v3 >= v4 then goto L306726;
  #L306712.  v4:= v6[v3] @kind object;
  #L306716.  v5:= length @variable v4;
  #L306718.  call `arraycopy`(v4, v1, v0, v2, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L30671e.  v2:= v2 + v5 @kind int;
  #L306720.  v3:= v3 + 1;
  #L306724.  goto L30670c;
  #L306726.  return v0 @kind object;
  #L306728.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L30672e.  v6:= temp @kind object;
  #L306730.  call temp:= `newInstance`(v6, v1) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L306736.  v6:= temp @kind object;
  #L306738.  v6:= (`java.lang.Object`[]) v6 @kind object;
  #L30673c.  return v6 @kind object;
}
procedure `boolean` `b`(`int`[] v4 @kind object, `int` v5 ) @signature `Lf4/b;.b:([II)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L306660.  v0:= 0I;
  #L306662.  if v4 != 0 then goto L306668;
  #L306666.  return v0;
  #L306668.  v1:= length @variable v4;
  #L30666a.  v2:= 0I;
  #L30666c.  if v2 >= v1 then goto L306682;
  #L306670.  v3:= v4[v2];
  #L306674.  if v3 != v5 then goto L30667c;
  #L306678.  v4:= 1I;
  #L30667a.  return v4;
  #L30667c.  v2:= v2 + 1;
  #L306680.  goto L30666c;
  #L306682.  return v0;
}
procedure `boolean` `c`(`java.lang.Object`[] v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lf4/b;.c:([Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L306694.  v0:= 0I;
  #L306696.  if v4 == 0 then goto L30669e;
  #L30669a.  v1:= length @variable v4;
  #L30669c.  goto L3066a0;
  #L30669e.  v1:= 0I;
  #L3066a0.  v2:= 0I;
  #L3066a2.  if v2 >= v1 then goto L3066c4;
  #L3066a6.  v3:= v4[v2] @kind object;
  #L3066aa.  call temp:= `a`(v3, v5) @signature `Lb4/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3066b0.  v3:= temp;
  #L3066b2.  if v3 == 0 then goto L3066be;
  #L3066b6.  if v2 < 0 then goto L3066c4;
  #L3066ba.  v4:= 1I;
  #L3066bc.  return v4;
  #L3066be.  v2:= v2 + 1;
  #L3066c2.  goto L3066a2;
  #L3066c4.  return v0;
}
