record `vc.s` @kind class @AccessFlag PUBLIC_FINAL extends `vc.a` @kind class {
  `uc.f` `vc.s.o` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`vc.s` v1 @kind this, `uc.f` v2 @kind object) @signature `Lvc/s;.<init>:(Luc/f;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4afce8.  call `<init>`(v1) @signature `Lvc/a;.<init>:()V` @kind direct;
  #L4afcee.  v0:= "date" @kind object;
  #L4afcf2.  call temp:= `i`(v2, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4afcf8.  v1.`vc.s.o` @type ^`uc.f` := v2 @kind object;
  #L4afcfc.  return @kind void;
}
procedure `long` `p0`(`vc.s` v4 @kind this) @signature `Lvc/s;.p0:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4af85c.  call temp:= `q0`(v4) @signature `Lvc/s;.q0:()I` @kind direct;
  #L4af862.  v0:= temp;
  #L4af864.  v0:= (`long`) v0 @kind i2l;
  #L4af866.  v2:= 12L;
  #L4af86a.  v0:= v0 * v2 @kind long;
  #L4af86e.  v2:= v4.`vc.s.o` @type ^`uc.f` @kind object;
  #L4af872.  call temp:= `t0`(v2) @signature `Luc/f;.t0:()I` @kind virtual;
  #L4af878.  v2:= temp;
  #L4af87a.  v2:= (`long`) v2 @kind i2l;
  #L4af87c.  v0:= v0 + v2 @kind long;
  #L4af87e.  v2:= 1L;
  #L4af882.  v0:= v0 - v2 @kind long;
  #L4af884.  return v0 @kind wide;
}
procedure `int` `q0`(`vc.s` v1 @kind this) @signature `Lvc/s;.q0:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4af740.  v0:= v1.`vc.s.o` @type ^`uc.f` @kind object;
  #L4af744.  call temp:= `v0`(v0) @signature `Luc/f;.v0:()I` @kind virtual;
  #L4af74a.  v0:= temp;
  #L4af74c.  v0:= v0 + -1911;
  #L4af750.  return v0;
}
procedure `java.lang.Object` `writeReplace`(`vc.s` v2 @kind this) @signature `Lvc/s;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4af79c.  v0:= new `vc.u`;
  #L4af7a0.  v1:= 5I;
  #L4af7a2.  call `<init>`(v0, v1, v2) @signature `Lvc/u;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L4af7a8.  return v0 @kind object;
}
procedure `vc.b` `x0`(`java.io.DataInput` v3 @kind object) @signature `Lvc/s;.x0:(Ljava/io/DataInput;)Lvc/b;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4af97c.  call temp:= `readInt`(v3) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L4af982.  v0:= temp;
  #L4af984.  call temp:= `readByte`(v3) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L4af98a.  v1:= temp;
  #L4af98c.  call temp:= `readByte`(v3) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L4af992.  v3:= temp;
  #L4af994.  v2:= `@@vc.r.q` @type ^`vc.r` @kind object;
  #L4af998.  call temp:= `K`(v2, v0, v1, v3) @signature `Lvc/r;.K:(III)Lvc/s;` @kind virtual;
  #L4af99e.  v3:= temp @kind object;
  #L4af9a0.  return v3 @kind object;
}
procedure `vc.s` `y0`(`vc.s` v1 @kind this, `uc.f` v2 @kind object) @signature `Lvc/s;.y0:(Luc/f;)Lvc/s;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4afb30.  v0:= v1.`vc.s.o` @type ^`uc.f` @kind object;
  #L4afb34.  call temp:= `equals`(v2, v0) @signature `Luc/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4afb3a.  v0:= temp;
  #L4afb3c.  if v0 == 0 then goto L4afb44;
  #L4afb40.  v0:= v1 @kind object;
  #L4afb42.  goto L4afb4e;
  #L4afb44.  v0:= new `vc.s`;
  #L4afb48.  call `<init>`(v0, v2) @signature `Lvc/s;.<init>:(Luc/f;)V` @kind direct;
  #L4afb4e.  return v0 @kind object;
}
procedure `vc.s` `A0`(`vc.s` v7 @kind this, `yc.i` v8 @kind object, `long` v9 ) @signature `Lvc/s;.A0:(Lyc/i;J)Lvc/s;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4afb80.  v0:= instanceof @variable v8 @type ^`yc.a` @kind boolean;
  #L4afb84.  if v0 == 0 then goto L4afca8;
  #L4afb88.  v0:= v8 @kind object;
  #L4afb8a.  v0:= (`yc.a`) v0 @kind object;
  #L4afb8e.  call temp:= `B`(v7, v0) @signature `Lvc/s;.B:(Lyc/i;)J` @kind virtual;
  #L4afb94.  v1:= temp @kind wide;
  #L4afb96.  v3:= lcmp(v1, v9);
  #L4afb9a.  if v3 != 0 then goto L4afba0;
  #L4afb9e.  return v7 @kind object;
  #L4afba0.  v1:= `@@vc.s$a.a` @type ^`int`[] @kind object;
  #L4afba4.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4afbaa.  v2:= temp;
  #L4afbac.  v2:= v1[v2];
  #L4afbb0.  v3:= 7I;
  #L4afbb2.  v4:= 6I;
  #L4afbb4.  v5:= 4I;
  #L4afbb6.  if v2 == v5 then goto L4afbf4;
  #L4afbba.  v6:= 5I;
  #L4afbbc.  if v2 == v6 then goto L4afbca;
  #L4afbc0.  if v2 == v4 then goto L4afbf4;
  #L4afbc4.  if v2 == v3 then goto L4afbf4;
  #L4afbc8.  goto L4afc26;
  #L4afbca.  call temp:= `n0`(v7) @signature `Lvc/s;.n0:()Lvc/r;` @kind virtual;
  #L4afbd0.  v8:= temp @kind object;
  #L4afbd2.  call temp:= `S`(v8, v0) @signature `Lvc/r;.S:(Lyc/a;)Lyc/n;` @kind virtual;
  #L4afbd8.  v8:= temp @kind object;
  #L4afbda.  call temp:= `b`(v8, v9, v0) @signature `Lyc/n;.b:(JLyc/i;)J` @kind virtual;
  #L4afbe0.  call temp:= `p0`(v7) @signature `Lvc/s;.p0:()J` @kind direct;
  #L4afbe6.  v0:= temp @kind wide;
  #L4afbe8.  v9:= v9 - v0 @kind long;
  #L4afbea.  call temp:= `v0`(v7, v9) @signature `Lvc/s;.v0:(J)Lvc/s;` @kind virtual;
  #L4afbf0.  v8:= temp @kind object;
  #L4afbf2.  return v8 @kind object;
  #L4afbf4.  call temp:= `n0`(v7) @signature `Lvc/s;.n0:()Lvc/r;` @kind virtual;
  #L4afbfa.  v2:= temp @kind object;
  #L4afbfc.  call temp:= `S`(v2, v0) @signature `Lvc/r;.S:(Lyc/a;)Lyc/n;` @kind virtual;
  #L4afc02.  v2:= temp @kind object;
  #L4afc04.  call temp:= `a`(v2, v9, v0) @signature `Lyc/n;.a:(JLyc/i;)I` @kind virtual;
  #L4afc0a.  v2:= temp;
  #L4afc0c.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4afc12.  v0:= temp;
  #L4afc14.  v0:= v1[v0];
  #L4afc18.  v1:= 1I;
  #L4afc1a.  if v0 == v5 then goto L4afc7a;
  #L4afc1e.  if v0 == v4 then goto L4afc60;
  #L4afc22.  if v0 == v3 then goto L4afc3c;
  #L4afc26.  v0:= v7.`vc.s.o` @type ^`uc.f` @kind object;
  #L4afc2a.  call temp:= `P0`(v0, v8, v9) @signature `Luc/f;.P0:(Lyc/i;J)Luc/f;` @kind virtual;
  #L4afc30.  v8:= temp @kind object;
  #L4afc32.  call temp:= `y0`(v7, v8) @signature `Lvc/s;.y0:(Luc/f;)Lvc/s;` @kind direct;
  #L4afc38.  v8:= temp @kind object;
  #L4afc3a.  return v8 @kind object;
  #L4afc3c.  v8:= v7.`vc.s.o` @type ^`uc.f` @kind object;
  #L4afc40.  call temp:= `q0`(v7) @signature `Lvc/s;.q0:()I` @kind direct;
  #L4afc46.  v9:= temp;
  #L4afc48.  v1:= v1 - v9 @kind int;
  #L4afc4a.  v1:= v1 + 1911;
  #L4afc4e.  call temp:= `T0`(v8, v1) @signature `Luc/f;.T0:(I)Luc/f;` @kind virtual;
  #L4afc54.  v8:= temp @kind object;
  #L4afc56.  call temp:= `y0`(v7, v8) @signature `Lvc/s;.y0:(Luc/f;)Lvc/s;` @kind direct;
  #L4afc5c.  v8:= temp @kind object;
  #L4afc5e.  return v8 @kind object;
  #L4afc60.  v8:= v7.`vc.s.o` @type ^`uc.f` @kind object;
  #L4afc64.  v2:= v2 + 1911;
  #L4afc68.  call temp:= `T0`(v8, v2) @signature `Luc/f;.T0:(I)Luc/f;` @kind virtual;
  #L4afc6e.  v8:= temp @kind object;
  #L4afc70.  call temp:= `y0`(v7, v8) @signature `Lvc/s;.y0:(Luc/f;)Lvc/s;` @kind direct;
  #L4afc76.  v8:= temp @kind object;
  #L4afc78.  return v8 @kind object;
  #L4afc7a.  v8:= v7.`vc.s.o` @type ^`uc.f` @kind object;
  #L4afc7e.  call temp:= `q0`(v7) @signature `Lvc/s;.q0:()I` @kind direct;
  #L4afc84.  v9:= temp;
  #L4afc86.  if v9 < v1 then goto L4afc90;
  #L4afc8a.  v2:= v2 + 1911;
  #L4afc8e.  goto L4afc96;
  #L4afc90.  v1:= v1 - v2 @kind int;
  #L4afc92.  v2:= v1 + 1911;
  #L4afc96.  call temp:= `T0`(v8, v2) @signature `Luc/f;.T0:(I)Luc/f;` @kind virtual;
  #L4afc9c.  v8:= temp @kind object;
  #L4afc9e.  call temp:= `y0`(v7, v8) @signature `Lvc/s;.y0:(Luc/f;)Lvc/s;` @kind direct;
  #L4afca4.  v8:= temp @kind object;
  #L4afca6.  return v8 @kind object;
  #L4afca8.  call temp:= `e`(v8, v7, v9) @signature `Lyc/i;.e:(Lyc/d;J)Lyc/d;` @kind interface;
  #L4afcae.  v8:= temp @kind object;
  #L4afcb0.  v8:= (`vc.s`) v8 @kind object;
  #L4afcb4.  return v8 @kind object;
}
procedure `long` `B`(`vc.s` v3 @kind this, `yc.i` v4 @kind object) @signature `Lvc/s;.B:(Lyc/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4af7bc.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4af7c0.  if v0 == 0 then goto L4af842;
  #L4af7c4.  v0:= `@@vc.s$a.a` @type ^`int`[] @kind object;
  #L4af7c8.  v1:= v4 @kind object;
  #L4af7ca.  v1:= (`yc.a`) v1 @kind object;
  #L4af7ce.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4af7d4.  v1:= temp;
  #L4af7d6.  v0:= v0[v1];
  #L4af7da.  v1:= 4I;
  #L4af7dc.  v2:= 1I;
  #L4af7de.  if v0 == v1 then goto L4af82c;
  #L4af7e2.  v1:= 5I;
  #L4af7e4.  if v0 == v1 then goto L4af822;
  #L4af7e8.  v1:= 6I;
  #L4af7ea.  if v0 == v1 then goto L4af816;
  #L4af7ee.  v1:= 7I;
  #L4af7f0.  if v0 == v1 then goto L4af802;
  #L4af7f4.  v0:= v3.`vc.s.o` @type ^`uc.f` @kind object;
  #L4af7f8.  call temp:= `B`(v0, v4) @signature `Luc/f;.B:(Lyc/i;)J` @kind virtual;
  #L4af7fe.  v0:= temp @kind wide;
  #L4af800.  return v0 @kind wide;
  #L4af802.  call temp:= `q0`(v3) @signature `Lvc/s;.q0:()I` @kind direct;
  #L4af808.  v4:= temp;
  #L4af80a.  if v4 < v2 then goto L4af810;
  #L4af80e.  goto L4af812;
  #L4af810.  v2:= 0I;
  #L4af812.  v0:= (`long`) v2 @kind i2l;
  #L4af814.  return v0 @kind wide;
  #L4af816.  call temp:= `q0`(v3) @signature `Lvc/s;.q0:()I` @kind direct;
  #L4af81c.  v4:= temp;
  #L4af81e.  v0:= (`long`) v4 @kind i2l;
  #L4af820.  return v0 @kind wide;
  #L4af822.  call temp:= `p0`(v3) @signature `Lvc/s;.p0:()J` @kind direct;
  #L4af828.  v0:= temp @kind wide;
  #L4af82a.  return v0 @kind wide;
  #L4af82c.  call temp:= `q0`(v3) @signature `Lvc/s;.q0:()I` @kind direct;
  #L4af832.  v4:= temp;
  #L4af834.  if v4 < v2 then goto L4af83a;
  #L4af838.  goto L4af83e;
  #L4af83a.  v4:= v4 - 1;
  #L4af83e.  v0:= (`long`) v4 @kind i2l;
  #L4af840.  return v0 @kind wide;
  #L4af842.  call temp:= `o`(v4, v3) @signature `Lyc/i;.o:(Lyc/e;)J` @kind interface;
  #L4af848.  v0:= temp @kind wide;
  #L4af84a.  return v0 @kind wide;
}
procedure `void` `B0`(`vc.s` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Lvc/s;.B0:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L4afd10.  v0:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L4afd14.  call temp:= `F`(v1, v0) @signature `Lxc/c;.F:(Lyc/i;)I` @kind virtual;
  #L4afd1a.  v0:= temp;
  #L4afd1c.  call `writeInt`(v2, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L4afd22.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L4afd26.  call temp:= `F`(v1, v0) @signature `Lxc/c;.F:(Lyc/i;)I` @kind virtual;
  #L4afd2c.  v0:= temp;
  #L4afd2e.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L4afd34.  v0:= `@@yc.a.K` @type ^`yc.a` @kind object;
  #L4afd38.  call temp:= `F`(v1, v0) @signature `Lxc/c;.F:(Lyc/i;)I` @kind virtual;
  #L4afd3e.  v0:= temp;
  #L4afd40.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L4afd46.  return @kind void;
}
procedure `yc.d` `D`(`vc.s` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/s;.D:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4afd74.  call temp:= `s0`(v0, v1, v3) @signature `Lvc/s;.s0:(JLyc/l;)Lvc/s;` @kind virtual;
  #L4afd7a.  v1:= temp @kind object;
  #L4afd7c.  return v1 @kind object;
}
procedure `yc.d` `L`(`vc.s` v0 @kind this, `yc.f` v1 @kind object) @signature `Lvc/s;.L:(Lyc/f;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4afd90.  call temp:= `z0`(v0, v1) @signature `Lvc/s;.z0:(Lyc/f;)Lvc/s;` @kind virtual;
  #L4afd96.  v1:= temp @kind object;
  #L4afd98.  return v1 @kind object;
}
procedure `yc.d` `P`(`vc.s` v0 @kind this, `yc.i` v1 @kind object, `long` v2 ) @signature `Lvc/s;.P:(Lyc/i;J)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4afdac.  call temp:= `A0`(v0, v1, v2) @signature `Lvc/s;.A0:(Lyc/i;J)Lvc/s;` @kind virtual;
  #L4afdb2.  v1:= temp @kind object;
  #L4afdb4.  return v1 @kind object;
}
procedure `vc.c` `V`(`vc.s` v0 @kind this, `uc.h` v1 @kind object) @signature `Lvc/s;.V:(Luc/h;)Lvc/c;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4af9ec.  call temp:= `V`(v0, v1) @signature `Lvc/a;.V:(Luc/h;)Lvc/c;` @kind super;
  #L4af9f2.  v1:= temp @kind object;
  #L4af9f4.  return v1 @kind object;
}
procedure `vc.h` `a0`(`vc.s` v1 @kind this) @signature `Lvc/s;.a0:()Lvc/h;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4afa08.  call temp:= `n0`(v1) @signature `Lvc/s;.n0:()Lvc/r;` @kind virtual;
  #L4afa0e.  v0:= temp @kind object;
  #L4afa10.  return v0 @kind object;
}
procedure `vc.i` `b0`(`vc.s` v1 @kind this) @signature `Lvc/s;.b0:()Lvc/i;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4afa24.  call temp:= `o0`(v1) @signature `Lvc/s;.o0:()Lvc/t;` @kind virtual;
  #L4afa2a.  v0:= temp @kind object;
  #L4afa2c.  return v0 @kind object;
}
procedure `vc.b` `d0`(`vc.s` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/s;.d0:(JLyc/l;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4af928.  call temp:= `r0`(v0, v1, v3) @signature `Lvc/s;.r0:(JLyc/l;)Lvc/s;` @kind virtual;
  #L4af92e.  v1:= temp @kind object;
  #L4af930.  return v1 @kind object;
}
procedure `vc.b` `e0`(`vc.s` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/s;.e0:(JLyc/l;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4af944.  call temp:= `s0`(v0, v1, v3) @signature `Lvc/s;.s0:(JLyc/l;)Lvc/s;` @kind virtual;
  #L4af94a.  v1:= temp @kind object;
  #L4af94c.  return v1 @kind object;
}
procedure `boolean` `equals`(`vc.s` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lvc/s;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4af704.  if v1 != v2 then goto L4af70c;
  #L4af708.  v2:= 1I;
  #L4af70a.  return v2;
  #L4af70c.  v0:= instanceof @variable v2 @type ^`vc.s` @kind boolean;
  #L4af710.  if v0 == 0 then goto L4af72a;
  #L4af714.  v2:= (`vc.s`) v2 @kind object;
  #L4af718.  v0:= v1.`vc.s.o` @type ^`uc.f` @kind object;
  #L4af71c.  v2:= v2.`vc.s.o` @type ^`uc.f` @kind object;
  #L4af720.  call temp:= `equals`(v0, v2) @signature `Luc/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4af726.  v2:= temp;
  #L4af728.  return v2;
  #L4af72a.  v2:= 0I;
  #L4af72c.  return v2;
}
procedure `vc.b` `f0`(`vc.s` v0 @kind this, `yc.h` v1 @kind object) @signature `Lvc/s;.f0:(Lyc/h;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4af960.  call temp:= `t0`(v0, v1) @signature `Lvc/s;.t0:(Lyc/h;)Lvc/s;` @kind virtual;
  #L4af966.  v1:= temp @kind object;
  #L4af968.  return v1 @kind object;
}
procedure `long` `g0`(`vc.s` v2 @kind this) @signature `Lvc/s;.g0:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4af898.  v0:= v2.`vc.s.o` @type ^`uc.f` @kind object;
  #L4af89c.  call temp:= `g0`(v0) @signature `Luc/f;.g0:()J` @kind virtual;
  #L4af8a2.  v0:= temp @kind wide;
  #L4af8a4.  return v0 @kind wide;
}
procedure `vc.b` `h0`(`vc.s` v0 @kind this, `yc.f` v1 @kind object) @signature `Lvc/s;.h0:(Lyc/f;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4af9b4.  call temp:= `z0`(v0, v1) @signature `Lvc/s;.z0:(Lyc/f;)Lvc/s;` @kind virtual;
  #L4af9ba.  v1:= temp @kind object;
  #L4af9bc.  return v1 @kind object;
}
procedure `int` `hashCode`(`vc.s` v2 @kind this) @signature `Lvc/s;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4af764.  call temp:= `n0`(v2) @signature `Lvc/s;.n0:()Lvc/r;` @kind virtual;
  #L4af76a.  v0:= temp @kind object;
  #L4af76c.  call temp:= `r`(v0) @signature `Lvc/r;.r:()Ljava/lang/String;` @kind virtual;
  #L4af772.  v0:= temp @kind object;
  #L4af774.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4af77a.  v0:= temp;
  #L4af77c.  v1:= v2.`vc.s.o` @type ^`uc.f` @kind object;
  #L4af780.  call temp:= `hashCode`(v1) @signature `Luc/f;.hashCode:()I` @kind virtual;
  #L4af786.  v1:= temp;
  #L4af788.  v0:= v0 ^~ v1 @kind int;
  #L4af78a.  return v0;
}
procedure `vc.b` `i0`(`vc.s` v0 @kind this, `yc.i` v1 @kind object, `long` v2 ) @signature `Lvc/s;.i0:(Lyc/i;J)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4af9d0.  call temp:= `A0`(v0, v1, v2) @signature `Lvc/s;.A0:(Lyc/i;J)Lvc/s;` @kind virtual;
  #L4af9d6.  v1:= temp @kind object;
  #L4af9d8.  return v1 @kind object;
}
procedure `vc.a` `j0`(`vc.s` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/s;.j0:(JLyc/l;)Lvc/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4af8b8.  call temp:= `s0`(v0, v1, v3) @signature `Lvc/s;.s0:(JLyc/l;)Lvc/s;` @kind virtual;
  #L4af8be.  v1:= temp @kind object;
  #L4af8c0.  return v1 @kind object;
}
procedure `vc.a` `k0`(`vc.s` v0 @kind this, `long` v1 ) @signature `Lvc/s;.k0:(J)Lvc/a;` @AccessFlag SYNTHETIC {
    temp;

  #L4af8d4.  call temp:= `u0`(v0, v1) @signature `Lvc/s;.u0:(J)Lvc/s;` @kind virtual;
  #L4af8da.  v1:= temp @kind object;
  #L4af8dc.  return v1 @kind object;
}
procedure `vc.a` `l0`(`vc.s` v0 @kind this, `long` v1 ) @signature `Lvc/s;.l0:(J)Lvc/a;` @AccessFlag SYNTHETIC {
    temp;

  #L4af8f0.  call temp:= `v0`(v0, v1) @signature `Lvc/s;.v0:(J)Lvc/s;` @kind virtual;
  #L4af8f6.  v1:= temp @kind object;
  #L4af8f8.  return v1 @kind object;
}
procedure `vc.a` `m0`(`vc.s` v0 @kind this, `long` v1 ) @signature `Lvc/s;.m0:(J)Lvc/a;` @AccessFlag SYNTHETIC {
    temp;

  #L4af90c.  call temp:= `w0`(v0, v1) @signature `Lvc/s;.w0:(J)Lvc/s;` @kind virtual;
  #L4af912.  v1:= temp @kind object;
  #L4af914.  return v1 @kind object;
}
procedure `vc.r` `n0`(`vc.s` v1 @kind this) @signature `Lvc/s;.n0:()Lvc/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4afa40.  v0:= `@@vc.r.q` @type ^`vc.r` @kind object;
  #L4afa44.  return v0 @kind object;
}
procedure `vc.t` `o0`(`vc.s` v1 @kind this) @signature `Lvc/s;.o0:()Lvc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4afcc8.  call temp:= `b0`(v1) @signature `Lvc/b;.b0:()Lvc/i;` @kind super;
  #L4afcce.  v0:= temp @kind object;
  #L4afcd0.  v0:= (`vc.t`) v0 @kind object;
  #L4afcd4.  return v0 @kind object;
}
procedure `yc.d` `r`(`vc.s` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/s;.r:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4afd58.  call temp:= `r0`(v0, v1, v3) @signature `Lvc/s;.r0:(JLyc/l;)Lvc/s;` @kind virtual;
  #L4afd5e.  v1:= temp @kind object;
  #L4afd60.  return v1 @kind object;
}
procedure `vc.s` `r0`(`vc.s` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/s;.r0:(JLyc/l;)Lvc/s;` @AccessFlag PUBLIC {
    temp;

  #L4afa58.  call temp:= `d0`(v0, v1, v3) @signature `Lvc/b;.d0:(JLyc/l;)Lvc/b;` @kind super;
  #L4afa5e.  v1:= temp @kind object;
  #L4afa60.  v1:= (`vc.s`) v1 @kind object;
  #L4afa64.  return v1 @kind object;
}
procedure `vc.s` `s0`(`vc.s` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/s;.s0:(JLyc/l;)Lvc/s;` @AccessFlag PUBLIC {
    temp;

  #L4afa78.  call temp:= `j0`(v0, v1, v3) @signature `Lvc/a;.j0:(JLyc/l;)Lvc/a;` @kind super;
  #L4afa7e.  v1:= temp @kind object;
  #L4afa80.  v1:= (`vc.s`) v1 @kind object;
  #L4afa84.  return v1 @kind object;
}
procedure `yc.n` `t`(`vc.s` v7 @kind this, `yc.i` v8 @kind object) @signature `Lvc/s;.t:(Lyc/i;)Lyc/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4afdc8.  v0:= instanceof @variable v8 @type ^`yc.a` @kind boolean;
  #L4afdcc.  if v0 == 0 then goto L4afe9c;
  #L4afdd0.  call temp:= `d`(v7, v8) @signature `Lvc/b;.d:(Lyc/i;)Z` @kind virtual;
  #L4afdd6.  v0:= temp;
  #L4afdd8.  if v0 == 0 then goto L4afe6e;
  #L4afddc.  v0:= v8 @kind object;
  #L4afdde.  v0:= (`yc.a`) v0 @kind object;
  #L4afde2.  v1:= `@@vc.s$a.a` @type ^`int`[] @kind object;
  #L4afde6.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4afdec.  v2:= temp;
  #L4afdee.  v1:= v1[v2];
  #L4afdf2.  v2:= 1I;
  #L4afdf4.  if v1 == v2 then goto L4afe60;
  #L4afdf8.  v2:= 2I;
  #L4afdfa.  if v1 == v2 then goto L4afe60;
  #L4afdfe.  v2:= 3I;
  #L4afe00.  if v1 == v2 then goto L4afe60;
  #L4afe04.  v8:= 4I;
  #L4afe06.  if v1 == v8 then goto L4afe1c;
  #L4afe0a.  call temp:= `n0`(v7) @signature `Lvc/s;.n0:()Lvc/r;` @kind virtual;
  #L4afe10.  v8:= temp @kind object;
  #L4afe12.  call temp:= `S`(v8, v0) @signature `Lvc/r;.S:(Lyc/a;)Lyc/n;` @kind virtual;
  #L4afe18.  v8:= temp @kind object;
  #L4afe1a.  return v8 @kind object;
  #L4afe1c.  v8:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L4afe20.  call temp:= `k`(v8) @signature `Lyc/a;.k:()Lyc/n;` @kind virtual;
  #L4afe26.  v8:= temp @kind object;
  #L4afe28.  call temp:= `q0`(v7) @signature `Lvc/s;.q0:()I` @kind direct;
  #L4afe2e.  v0:= temp;
  #L4afe30.  v1:= 1L;
  #L4afe34.  v3:= 1911L;
  #L4afe38.  if v0 > 0 then goto L4afe4c;
  #L4afe3c.  call temp:= `d`(v8) @signature `Lyc/n;.d:()J` @kind virtual;
  #L4afe42.  v5:= temp @kind wide;
  #L4afe44.  v5:= -v5 @kind long;
  #L4afe46.  v5:= v5 + v1 @kind long;
  #L4afe48.  v5:= v5 + v3 @kind long;
  #L4afe4a.  goto L4afe56;
  #L4afe4c.  call temp:= `c`(v8) @signature `Lyc/n;.c:()J` @kind virtual;
  #L4afe52.  v5:= temp @kind wide;
  #L4afe54.  v5:= v5 - v3 @kind long;
  #L4afe56.  call temp:= `i`(v1, v5) @signature `Lyc/n;.i:(JJ)Lyc/n;` @kind static;
  #L4afe5c.  v8:= temp @kind object;
  #L4afe5e.  return v8 @kind object;
  #L4afe60.  v0:= v7.`vc.s.o` @type ^`uc.f` @kind object;
  #L4afe64.  call temp:= `t`(v0, v8) @signature `Luc/f;.t:(Lyc/i;)Lyc/n;` @kind virtual;
  #L4afe6a.  v8:= temp @kind object;
  #L4afe6c.  return v8 @kind object;
  #L4afe6e.  v0:= new `yc.m`;
  #L4afe72.  v1:= new `java.lang.StringBuilder`;
  #L4afe76.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4afe7c.  v2:= "Unsupported field: " @kind object;
  #L4afe80.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4afe86.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4afe8c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4afe92.  v8:= temp @kind object;
  #L4afe94.  call `<init>`(v0, v8) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4afe9a.  throw v0;
  #L4afe9c.  call temp:= `h`(v8, v7) @signature `Lyc/i;.h:(Lyc/e;)Lyc/n;` @kind interface;
  #L4afea2.  v8:= temp @kind object;
  #L4afea4.  return v8 @kind object;
}
procedure `vc.s` `t0`(`vc.s` v0 @kind this, `yc.h` v1 @kind object) @signature `Lvc/s;.t0:(Lyc/h;)Lvc/s;` @AccessFlag PUBLIC {
    temp;

  #L4afa98.  call temp:= `f0`(v0, v1) @signature `Lvc/b;.f0:(Lyc/h;)Lvc/b;` @kind super;
  #L4afa9e.  v1:= temp @kind object;
  #L4afaa0.  v1:= (`vc.s`) v1 @kind object;
  #L4afaa4.  return v1 @kind object;
}
procedure `vc.s` `u0`(`vc.s` v1 @kind this, `long` v2 ) @signature `Lvc/s;.u0:(J)Lvc/s;` @AccessFlag  {
    temp;
    v0;

  #L4afab8.  v0:= v1.`vc.s.o` @type ^`uc.f` @kind object;
  #L4afabc.  call temp:= `I0`(v0, v2) @signature `Luc/f;.I0:(J)Luc/f;` @kind virtual;
  #L4afac2.  v2:= temp @kind object;
  #L4afac4.  call temp:= `y0`(v1, v2) @signature `Lvc/s;.y0:(Luc/f;)Lvc/s;` @kind direct;
  #L4afaca.  v2:= temp @kind object;
  #L4afacc.  return v2 @kind object;
}
procedure `vc.s` `v0`(`vc.s` v1 @kind this, `long` v2 ) @signature `Lvc/s;.v0:(J)Lvc/s;` @AccessFlag  {
    temp;
    v0;

  #L4afae0.  v0:= v1.`vc.s.o` @type ^`uc.f` @kind object;
  #L4afae4.  call temp:= `J0`(v0, v2) @signature `Luc/f;.J0:(J)Luc/f;` @kind virtual;
  #L4afaea.  v2:= temp @kind object;
  #L4afaec.  call temp:= `y0`(v1, v2) @signature `Lvc/s;.y0:(Luc/f;)Lvc/s;` @kind direct;
  #L4afaf2.  v2:= temp @kind object;
  #L4afaf4.  return v2 @kind object;
}
procedure `vc.s` `w0`(`vc.s` v1 @kind this, `long` v2 ) @signature `Lvc/s;.w0:(J)Lvc/s;` @AccessFlag  {
    temp;
    v0;

  #L4afb08.  v0:= v1.`vc.s.o` @type ^`uc.f` @kind object;
  #L4afb0c.  call temp:= `L0`(v0, v2) @signature `Luc/f;.L0:(J)Luc/f;` @kind virtual;
  #L4afb12.  v2:= temp @kind object;
  #L4afb14.  call temp:= `y0`(v1, v2) @signature `Lvc/s;.y0:(Luc/f;)Lvc/s;` @kind direct;
  #L4afb1a.  v2:= temp @kind object;
  #L4afb1c.  return v2 @kind object;
}
procedure `vc.s` `z0`(`vc.s` v0 @kind this, `yc.f` v1 @kind object) @signature `Lvc/s;.z0:(Lyc/f;)Lvc/s;` @AccessFlag PUBLIC {
    temp;

  #L4afb60.  call temp:= `h0`(v0, v1) @signature `Lvc/b;.h0:(Lyc/f;)Lvc/b;` @kind super;
  #L4afb66.  v1:= temp @kind object;
  #L4afb68.  v1:= (`vc.s`) v1 @kind object;
  #L4afb6c.  return v1 @kind object;
}
