record `vc.p` @kind class @AccessFlag PUBLIC_FINAL extends `vc.a` @kind class {
  `uc.f` `vc.p.o` @AccessFlag PRIVATE_FINAL;
  `vc.q` `vc.p.p` @AccessFlag PRIVATE_TRANSIENT;
  `int` `vc.p.q` @AccessFlag PRIVATE_TRANSIENT;
}
global `uc.f` `@@vc.p.r` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lvc/p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4aecd8.  v0:= 1873I;
  #L4aecdc.  v1:= 1I;
  #L4aecde.  call temp:= `C0`(v0, v1, v1) @signature `Luc/f;.C0:(III)Luc/f;` @kind static;
  #L4aece4.  v0:= temp @kind object;
  #L4aece6.  `@@vc.p.r` @type ^`uc.f` := v0 @kind object;
  #L4aecea.  return @kind void;
}
procedure `void` `<init>`(`vc.p` v2 @kind this, `uc.f` v3 @kind object) @signature `Lvc/p;.<init>:(Luc/f;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4aecfc.  call `<init>`(v2) @signature `Lvc/a;.<init>:()V` @kind direct;
  #L4aed02.  v0:= `@@vc.p.r` @type ^`uc.f` @kind object;
  #L4aed06.  call temp:= `c0`(v3, v0) @signature `Luc/f;.c0:(Lvc/b;)Z` @kind virtual;
  #L4aed0c.  v0:= temp;
  #L4aed0e.  if v0 != 0 then goto L4aed46;
  #L4aed12.  call temp:= `V`(v3) @signature `Lvc/q;.V:(Luc/f;)Lvc/q;` @kind static;
  #L4aed18.  v0:= temp @kind object;
  #L4aed1a.  v2.`vc.p.p` @type ^`vc.q` := v0 @kind object;
  #L4aed1e.  call temp:= `c0`(v0) @signature `Lvc/q;.c0:()Luc/f;` @kind virtual;
  #L4aed24.  v0:= temp @kind object;
  #L4aed26.  call temp:= `v0`(v0) @signature `Luc/f;.v0:()I` @kind virtual;
  #L4aed2c.  v0:= temp;
  #L4aed2e.  v0:= v0 + -1;
  #L4aed32.  call temp:= `v0`(v3) @signature `Luc/f;.v0:()I` @kind virtual;
  #L4aed38.  v1:= temp;
  #L4aed3a.  v1:= v1 - v0 @kind int;
  #L4aed3c.  v2.`vc.p.q` @type ^`int` := v1;
  #L4aed40.  v2.`vc.p.o` @type ^`uc.f` := v3 @kind object;
  #L4aed44.  return @kind void;
  #L4aed46.  v3:= new `uc.b`;
  #L4aed4a.  v0:= "Minimum supported date is January 1st Meiji 6" @kind object;
  #L4aed4e.  call `<init>`(v3, v0) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4aed54.  throw v3;
}
procedure `vc.p` `B0`(`vc.p` v1 @kind this, `int` v2 ) @signature `Lvc/p;.B0:(I)Lvc/p;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4aec68.  call temp:= `q0`(v1) @signature `Lvc/p;.q0:()Lvc/q;` @kind virtual;
  #L4aec6e.  v0:= temp @kind object;
  #L4aec70.  call temp:= `C0`(v1, v0, v2) @signature `Lvc/p;.C0:(Lvc/q;I)Lvc/p;` @kind direct;
  #L4aec76.  v2:= temp @kind object;
  #L4aec78.  return v2 @kind object;
}
procedure `vc.p` `C0`(`vc.p` v1 @kind this, `vc.q` v2 @kind object, `int` v3 ) @signature `Lvc/p;.C0:(Lvc/q;I)Lvc/p;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4aec8c.  v0:= `@@vc.o.r` @type ^`vc.o` @kind object;
  #L4aec90.  call temp:= `S`(v0, v2, v3) @signature `Lvc/o;.S:(Lvc/i;I)I` @kind virtual;
  #L4aec96.  v2:= temp;
  #L4aec98.  v3:= v1.`vc.p.o` @type ^`uc.f` @kind object;
  #L4aec9c.  call temp:= `T0`(v3, v2) @signature `Luc/f;.T0:(I)Luc/f;` @kind virtual;
  #L4aeca2.  v2:= temp @kind object;
  #L4aeca4.  call temp:= `y0`(v1, v2) @signature `Lvc/p;.y0:(Luc/f;)Lvc/p;` @kind direct;
  #L4aecaa.  v2:= temp @kind object;
  #L4aecac.  return v2 @kind object;
}
procedure `yc.n` `n0`(`vc.p` v5 @kind this, `int` v6 ) @signature `Lvc/p;.n0:(I)Lyc/n;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4aee70.  v0:= `@@vc.o.q` @type ^`java.util.Locale` @kind object;
  #L4aee74.  call temp:= `getInstance`(v0) @signature `Ljava/util/Calendar;.getInstance:(Ljava/util/Locale;)Ljava/util/Calendar;` @kind static;
  #L4aee7a.  v0:= temp @kind object;
  #L4aee7c.  v1:= v5.`vc.p.p` @type ^`vc.q` @kind object;
  #L4aee80.  call temp:= `getValue`(v1) @signature `Lvc/q;.getValue:()I` @kind virtual;
  #L4aee86.  v1:= temp;
  #L4aee88.  v1:= v1 + 2;
  #L4aee8c.  v2:= 0I;
  #L4aee8e.  call `set`(v0, v2, v1) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L4aee94.  v1:= v5.`vc.p.q` @type ^`int`;
  #L4aee98.  v2:= v5.`vc.p.o` @type ^`uc.f` @kind object;
  #L4aee9c.  call temp:= `t0`(v2) @signature `Luc/f;.t0:()I` @kind virtual;
  #L4aeea2.  v2:= temp;
  #L4aeea4.  v2:= v2 + -1;
  #L4aeea8.  v3:= v5.`vc.p.o` @type ^`uc.f` @kind object;
  #L4aeeac.  call temp:= `p0`(v3) @signature `Luc/f;.p0:()I` @kind virtual;
  #L4aeeb2.  v3:= temp;
  #L4aeeb4.  call `set`(v0, v1, v2, v3) @signature `Ljava/util/Calendar;.set:(III)V` @kind virtual;
  #L4aeeba.  call temp:= `getActualMinimum`(v0, v6) @signature `Ljava/util/Calendar;.getActualMinimum:(I)I` @kind virtual;
  #L4aeec0.  v1:= temp;
  #L4aeec2.  v1:= (`long`) v1 @kind i2l;
  #L4aeec4.  call temp:= `getActualMaximum`(v0, v6) @signature `Ljava/util/Calendar;.getActualMaximum:(I)I` @kind virtual;
  #L4aeeca.  v6:= temp;
  #L4aeecc.  v3:= (`long`) v6 @kind i2l;
  #L4aeece.  call temp:= `i`(v1, v3) @signature `Lyc/n;.i:(JJ)Lyc/n;` @kind static;
  #L4aeed4.  v6:= temp @kind object;
  #L4aeed6.  return v6 @kind object;
}
procedure `long` `p0`(`vc.p` v3 @kind this) @signature `Lvc/p;.p0:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4ae784.  v0:= v3.`vc.p.q` @type ^`int`;
  #L4ae788.  v1:= 1I;
  #L4ae78a.  if v0 != v1 then goto L4ae7b6;
  #L4ae78e.  v0:= v3.`vc.p.o` @type ^`uc.f` @kind object;
  #L4ae792.  call temp:= `r0`(v0) @signature `Luc/f;.r0:()I` @kind virtual;
  #L4ae798.  v0:= temp;
  #L4ae79a.  v2:= v3.`vc.p.p` @type ^`vc.q` @kind object;
  #L4ae79e.  call temp:= `c0`(v2) @signature `Lvc/q;.c0:()Luc/f;` @kind virtual;
  #L4ae7a4.  v2:= temp @kind object;
  #L4ae7a6.  call temp:= `r0`(v2) @signature `Luc/f;.r0:()I` @kind virtual;
  #L4ae7ac.  v2:= temp;
  #L4ae7ae.  v0:= v0 - v2 @kind int;
  #L4ae7b0.  v0:= v0 + v1 @kind int;
  #L4ae7b2.  v0:= (`long`) v0 @kind i2l;
  #L4ae7b4.  return v0 @kind wide;
  #L4ae7b6.  v0:= v3.`vc.p.o` @type ^`uc.f` @kind object;
  #L4ae7ba.  call temp:= `r0`(v0) @signature `Luc/f;.r0:()I` @kind virtual;
  #L4ae7c0.  v0:= temp;
  #L4ae7c2.  goto L4ae7b2;
}
procedure `void` `readObject`(`vc.p` v1 @kind this, `java.io.ObjectInputStream` v2 @kind object) @signature `Lvc/p;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4aed68.  call `defaultReadObject`(v2) @signature `Ljava/io/ObjectInputStream;.defaultReadObject:()V` @kind virtual;
  #L4aed6e.  v2:= v1.`vc.p.o` @type ^`uc.f` @kind object;
  #L4aed72.  call temp:= `V`(v2) @signature `Lvc/q;.V:(Luc/f;)Lvc/q;` @kind static;
  #L4aed78.  v2:= temp @kind object;
  #L4aed7a.  v1.`vc.p.p` @type ^`vc.q` := v2 @kind object;
  #L4aed7e.  call temp:= `c0`(v2) @signature `Lvc/q;.c0:()Luc/f;` @kind virtual;
  #L4aed84.  v2:= temp @kind object;
  #L4aed86.  call temp:= `v0`(v2) @signature `Luc/f;.v0:()I` @kind virtual;
  #L4aed8c.  v2:= temp;
  #L4aed8e.  v2:= v2 + -1;
  #L4aed92.  v0:= v1.`vc.p.o` @type ^`uc.f` @kind object;
  #L4aed96.  call temp:= `v0`(v0) @signature `Luc/f;.v0:()I` @kind virtual;
  #L4aed9c.  v0:= temp;
  #L4aed9e.  v0:= v0 - v2 @kind int;
  #L4aeda0.  v1.`vc.p.q` @type ^`int` := v0;
  #L4aeda4.  return @kind void;
}
procedure `java.lang.Object` `writeReplace`(`vc.p` v2 @kind this) @signature `Lvc/p;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4ae764.  v0:= new `vc.u`;
  #L4ae768.  v1:= 1I;
  #L4ae76a.  call `<init>`(v0, v1, v2) @signature `Lvc/u;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L4ae770.  return v0 @kind object;
}
procedure `vc.b` `x0`(`java.io.DataInput` v3 @kind object) @signature `Lvc/p;.x0:(Ljava/io/DataInput;)Lvc/b;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4ae978.  call temp:= `readInt`(v3) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L4ae97e.  v0:= temp;
  #L4ae980.  call temp:= `readByte`(v3) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L4ae986.  v1:= temp;
  #L4ae988.  call temp:= `readByte`(v3) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L4ae98e.  v3:= temp;
  #L4ae990.  v2:= `@@vc.o.r` @type ^`vc.o` @kind object;
  #L4ae994.  call temp:= `K`(v2, v0, v1, v3) @signature `Lvc/o;.K:(III)Lvc/p;` @kind virtual;
  #L4ae99a.  v3:= temp @kind object;
  #L4ae99c.  return v3 @kind object;
}
procedure `vc.p` `y0`(`vc.p` v1 @kind this, `uc.f` v2 @kind object) @signature `Lvc/p;.y0:(Luc/f;)Lvc/p;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4aeb2c.  v0:= v1.`vc.p.o` @type ^`uc.f` @kind object;
  #L4aeb30.  call temp:= `equals`(v2, v0) @signature `Luc/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4aeb36.  v0:= temp;
  #L4aeb38.  if v0 == 0 then goto L4aeb40;
  #L4aeb3c.  v0:= v1 @kind object;
  #L4aeb3e.  goto L4aeb4a;
  #L4aeb40.  v0:= new `vc.p`;
  #L4aeb44.  call `<init>`(v0, v2) @signature `Lvc/p;.<init>:(Luc/f;)V` @kind direct;
  #L4aeb4a.  return v0 @kind object;
}
procedure `vc.p` `A0`(`vc.p` v6 @kind this, `yc.i` v7 @kind object, `long` v8 ) @signature `Lvc/p;.A0:(Lyc/i;J)Lvc/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4aeb7c.  v0:= instanceof @variable v7 @type ^`yc.a` @kind boolean;
  #L4aeb80.  if v0 == 0 then goto L4aec48;
  #L4aeb84.  v0:= v7 @kind object;
  #L4aeb86.  v0:= (`yc.a`) v0 @kind object;
  #L4aeb8a.  call temp:= `B`(v6, v0) @signature `Lvc/p;.B:(Lyc/i;)J` @kind virtual;
  #L4aeb90.  v1:= temp @kind wide;
  #L4aeb92.  v3:= lcmp(v1, v8);
  #L4aeb96.  if v3 != 0 then goto L4aeb9c;
  #L4aeb9a.  return v6 @kind object;
  #L4aeb9c.  v1:= `@@vc.p$a.a` @type ^`int`[] @kind object;
  #L4aeba0.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4aeba6.  v2:= temp;
  #L4aeba8.  v2:= v1[v2];
  #L4aebac.  v3:= 7I;
  #L4aebae.  v4:= 2I;
  #L4aebb0.  v5:= 1I;
  #L4aebb2.  if v2 == v5 then goto L4aebc0;
  #L4aebb6.  if v2 == v4 then goto L4aebc0;
  #L4aebba.  if v2 == v3 then goto L4aebc0;
  #L4aebbe.  goto L4aebf0;
  #L4aebc0.  call temp:= `o0`(v6) @signature `Lvc/p;.o0:()Lvc/o;` @kind virtual;
  #L4aebc6.  v2:= temp @kind object;
  #L4aebc8.  call temp:= `T`(v2, v0) @signature `Lvc/o;.T:(Lyc/a;)Lyc/n;` @kind virtual;
  #L4aebce.  v2:= temp @kind object;
  #L4aebd0.  call temp:= `a`(v2, v8, v0) @signature `Lyc/n;.a:(JLyc/i;)I` @kind virtual;
  #L4aebd6.  v2:= temp;
  #L4aebd8.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4aebde.  v0:= temp;
  #L4aebe0.  v0:= v1[v0];
  #L4aebe4.  if v0 == v5 then goto L4aec26;
  #L4aebe8.  if v0 == v4 then goto L4aec1c;
  #L4aebec.  if v0 == v3 then goto L4aec06;
  #L4aebf0.  v0:= v6.`vc.p.o` @type ^`uc.f` @kind object;
  #L4aebf4.  call temp:= `P0`(v0, v7, v8) @signature `Luc/f;.P0:(Lyc/i;J)Luc/f;` @kind virtual;
  #L4aebfa.  v7:= temp @kind object;
  #L4aebfc.  call temp:= `y0`(v6, v7) @signature `Lvc/p;.y0:(Luc/f;)Lvc/p;` @kind direct;
  #L4aec02.  v7:= temp @kind object;
  #L4aec04.  return v7 @kind object;
  #L4aec06.  call temp:= `X`(v2) @signature `Lvc/q;.X:(I)Lvc/q;` @kind static;
  #L4aec0c.  v7:= temp @kind object;
  #L4aec0e.  v8:= v6.`vc.p.q` @type ^`int`;
  #L4aec12.  call temp:= `C0`(v6, v7, v8) @signature `Lvc/p;.C0:(Lvc/q;I)Lvc/p;` @kind direct;
  #L4aec18.  v7:= temp @kind object;
  #L4aec1a.  return v7 @kind object;
  #L4aec1c.  call temp:= `B0`(v6, v2) @signature `Lvc/p;.B0:(I)Lvc/p;` @kind direct;
  #L4aec22.  v7:= temp @kind object;
  #L4aec24.  return v7 @kind object;
  #L4aec26.  v7:= v6.`vc.p.o` @type ^`uc.f` @kind object;
  #L4aec2a.  v8:= (`long`) v2 @kind i2l;
  #L4aec2c.  call temp:= `p0`(v6) @signature `Lvc/p;.p0:()J` @kind direct;
  #L4aec32.  v0:= temp @kind wide;
  #L4aec34.  v8:= v8 - v0 @kind long;
  #L4aec36.  call temp:= `I0`(v7, v8) @signature `Luc/f;.I0:(J)Luc/f;` @kind virtual;
  #L4aec3c.  v7:= temp @kind object;
  #L4aec3e.  call temp:= `y0`(v6, v7) @signature `Lvc/p;.y0:(Luc/f;)Lvc/p;` @kind direct;
  #L4aec44.  v7:= temp @kind object;
  #L4aec46.  return v7 @kind object;
  #L4aec48.  call temp:= `e`(v7, v6, v8) @signature `Lyc/i;.e:(Lyc/d;J)Lyc/d;` @kind interface;
  #L4aec4e.  v7:= temp @kind object;
  #L4aec50.  v7:= (`vc.p`) v7 @kind object;
  #L4aec54.  return v7 @kind object;
}
procedure `long` `B`(`vc.p` v3 @kind this, `yc.i` v4 @kind object) @signature `Lvc/p;.B:(Lyc/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ae7d4.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4ae7d8.  if v0 == 0 then goto L4ae856;
  #L4ae7dc.  v0:= `@@vc.p$a.a` @type ^`int`[] @kind object;
  #L4ae7e0.  v1:= v4 @kind object;
  #L4ae7e2.  v1:= (`yc.a`) v1 @kind object;
  #L4ae7e6.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4ae7ec.  v1:= temp;
  #L4ae7ee.  v0:= v0[v1];
  #L4ae7f2.  goto L4ae860;
  #L4ae7f8.  v0:= v3.`vc.p.o` @type ^`uc.f` @kind object;
  #L4ae7fc.  call temp:= `B`(v0, v4) @signature `Luc/f;.B:(Lyc/i;)J` @kind virtual;
  #L4ae802.  v0:= temp @kind wide;
  #L4ae804.  return v0 @kind wide;
  #L4ae806.  v4:= v3.`vc.p.p` @type ^`vc.q` @kind object;
  #L4ae80a.  call temp:= `getValue`(v4) @signature `Lvc/q;.getValue:()I` @kind virtual;
  #L4ae810.  v4:= temp;
  #L4ae812.  v0:= (`long`) v4 @kind i2l;
  #L4ae814.  return v0 @kind wide;
  #L4ae816.  v0:= new `yc.m`;
  #L4ae81a.  v1:= new `java.lang.StringBuilder`;
  #L4ae81e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ae824.  v2:= "Unsupported field: " @kind object;
  #L4ae828.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ae82e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ae834.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ae83a.  v4:= temp @kind object;
  #L4ae83c.  call `<init>`(v0, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ae842.  throw v0;
  #L4ae844.  v4:= v3.`vc.p.q` @type ^`int`;
  #L4ae848.  v0:= (`long`) v4 @kind i2l;
  #L4ae84a.  return v0 @kind wide;
  #L4ae84c.  call temp:= `p0`(v3) @signature `Lvc/p;.p0:()J` @kind direct;
  #L4ae852.  v0:= temp @kind wide;
  #L4ae854.  return v0 @kind wide;
  #L4ae856.  call temp:= `o`(v4, v3) @signature `Lyc/i;.o:(Lyc/e;)J` @kind interface;
  #L4ae85c.  v0:= temp @kind wide;
  #L4ae85e.  return v0 @kind wide;
  #L4ae860.  switch v0
                  | 1 => goto L4ae84c
                  | 2 => goto L4ae844
                  | 3 => goto L4ae816
                  | 4 => goto L4ae816
                  | 5 => goto L4ae816
                  | 6 => goto L4ae816
                  | 7 => goto L4ae806
                  | else => goto L4ae7f8;
}
procedure `yc.d` `D`(`vc.p` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/p;.D:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4aee1c.  call temp:= `s0`(v0, v1, v3) @signature `Lvc/p;.s0:(JLyc/l;)Lvc/p;` @kind virtual;
  #L4aee22.  v1:= temp @kind object;
  #L4aee24.  return v1 @kind object;
}
procedure `void` `D0`(`vc.p` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Lvc/p;.D0:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L4aedb8.  v0:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L4aedbc.  call temp:= `F`(v1, v0) @signature `Lxc/c;.F:(Lyc/i;)I` @kind virtual;
  #L4aedc2.  v0:= temp;
  #L4aedc4.  call `writeInt`(v2, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L4aedca.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L4aedce.  call temp:= `F`(v1, v0) @signature `Lxc/c;.F:(Lyc/i;)I` @kind virtual;
  #L4aedd4.  v0:= temp;
  #L4aedd6.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L4aeddc.  v0:= `@@yc.a.K` @type ^`yc.a` @kind object;
  #L4aede0.  call temp:= `F`(v1, v0) @signature `Lxc/c;.F:(Lyc/i;)I` @kind virtual;
  #L4aede6.  v0:= temp;
  #L4aede8.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L4aedee.  return @kind void;
}
procedure `yc.d` `L`(`vc.p` v0 @kind this, `yc.f` v1 @kind object) @signature `Lvc/p;.L:(Lyc/f;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4aee38.  call temp:= `z0`(v0, v1) @signature `Lvc/p;.z0:(Lyc/f;)Lvc/p;` @kind virtual;
  #L4aee3e.  v1:= temp @kind object;
  #L4aee40.  return v1 @kind object;
}
procedure `yc.d` `P`(`vc.p` v0 @kind this, `yc.i` v1 @kind object, `long` v2 ) @signature `Lvc/p;.P:(Lyc/i;J)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4aee54.  call temp:= `A0`(v0, v1, v2) @signature `Lvc/p;.A0:(Lyc/i;J)Lvc/p;` @kind virtual;
  #L4aee5a.  v1:= temp @kind object;
  #L4aee5c.  return v1 @kind object;
}
procedure `vc.c` `V`(`vc.p` v0 @kind this, `uc.h` v1 @kind object) @signature `Lvc/p;.V:(Luc/h;)Lvc/c;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4ae9e8.  call temp:= `V`(v0, v1) @signature `Lvc/a;.V:(Luc/h;)Lvc/c;` @kind super;
  #L4ae9ee.  v1:= temp @kind object;
  #L4ae9f0.  return v1 @kind object;
}
procedure `vc.h` `a0`(`vc.p` v1 @kind this) @signature `Lvc/p;.a0:()Lvc/h;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4aea04.  call temp:= `o0`(v1) @signature `Lvc/p;.o0:()Lvc/o;` @kind virtual;
  #L4aea0a.  v0:= temp @kind object;
  #L4aea0c.  return v0 @kind object;
}
procedure `vc.i` `b0`(`vc.p` v1 @kind this) @signature `Lvc/p;.b0:()Lvc/i;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4aea20.  call temp:= `q0`(v1) @signature `Lvc/p;.q0:()Lvc/q;` @kind virtual;
  #L4aea26.  v0:= temp @kind object;
  #L4aea28.  return v0 @kind object;
}
procedure `boolean` `d`(`vc.p` v1 @kind this, `yc.i` v2 @kind object) @signature `Lvc/p;.d:(Lyc/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae6ec.  v0:= `@@yc.a.I` @type ^`yc.a` @kind object;
  #L4ae6f0.  if v2 == v0 then goto L4ae718;
  #L4ae6f4.  v0:= `@@yc.a.J` @type ^`yc.a` @kind object;
  #L4ae6f8.  if v2 == v0 then goto L4ae718;
  #L4ae6fc.  v0:= `@@yc.a.N` @type ^`yc.a` @kind object;
  #L4ae700.  if v2 == v0 then goto L4ae718;
  #L4ae704.  v0:= `@@yc.a.O` @type ^`yc.a` @kind object;
  #L4ae708.  if v2 != v0 then goto L4ae70e;
  #L4ae70c.  goto L4ae718;
  #L4ae70e.  call temp:= `d`(v1, v2) @signature `Lvc/b;.d:(Lyc/i;)Z` @kind super;
  #L4ae714.  v2:= temp;
  #L4ae716.  return v2;
  #L4ae718.  v2:= 0I;
  #L4ae71a.  return v2;
}
procedure `vc.b` `d0`(`vc.p` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/p;.d0:(JLyc/l;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4ae924.  call temp:= `r0`(v0, v1, v3) @signature `Lvc/p;.r0:(JLyc/l;)Lvc/p;` @kind virtual;
  #L4ae92a.  v1:= temp @kind object;
  #L4ae92c.  return v1 @kind object;
}
procedure `vc.b` `e0`(`vc.p` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/p;.e0:(JLyc/l;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4ae940.  call temp:= `s0`(v0, v1, v3) @signature `Lvc/p;.s0:(JLyc/l;)Lvc/p;` @kind virtual;
  #L4ae946.  v1:= temp @kind object;
  #L4ae948.  return v1 @kind object;
}
procedure `boolean` `equals`(`vc.p` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lvc/p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ae6b0.  if v1 != v2 then goto L4ae6b8;
  #L4ae6b4.  v2:= 1I;
  #L4ae6b6.  return v2;
  #L4ae6b8.  v0:= instanceof @variable v2 @type ^`vc.p` @kind boolean;
  #L4ae6bc.  if v0 == 0 then goto L4ae6d6;
  #L4ae6c0.  v2:= (`vc.p`) v2 @kind object;
  #L4ae6c4.  v0:= v1.`vc.p.o` @type ^`uc.f` @kind object;
  #L4ae6c8.  v2:= v2.`vc.p.o` @type ^`uc.f` @kind object;
  #L4ae6cc.  call temp:= `equals`(v0, v2) @signature `Luc/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4ae6d2.  v2:= temp;
  #L4ae6d4.  return v2;
  #L4ae6d6.  v2:= 0I;
  #L4ae6d8.  return v2;
}
procedure `vc.b` `f0`(`vc.p` v0 @kind this, `yc.h` v1 @kind object) @signature `Lvc/p;.f0:(Lyc/h;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4ae95c.  call temp:= `t0`(v0, v1) @signature `Lvc/p;.t0:(Lyc/h;)Lvc/p;` @kind virtual;
  #L4ae962.  v1:= temp @kind object;
  #L4ae964.  return v1 @kind object;
}
procedure `long` `g0`(`vc.p` v2 @kind this) @signature `Lvc/p;.g0:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae894.  v0:= v2.`vc.p.o` @type ^`uc.f` @kind object;
  #L4ae898.  call temp:= `g0`(v0) @signature `Luc/f;.g0:()J` @kind virtual;
  #L4ae89e.  v0:= temp @kind wide;
  #L4ae8a0.  return v0 @kind wide;
}
procedure `vc.b` `h0`(`vc.p` v0 @kind this, `yc.f` v1 @kind object) @signature `Lvc/p;.h0:(Lyc/f;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4ae9b0.  call temp:= `z0`(v0, v1) @signature `Lvc/p;.z0:(Lyc/f;)Lvc/p;` @kind virtual;
  #L4ae9b6.  v1:= temp @kind object;
  #L4ae9b8.  return v1 @kind object;
}
procedure `int` `hashCode`(`vc.p` v2 @kind this) @signature `Lvc/p;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ae72c.  call temp:= `o0`(v2) @signature `Lvc/p;.o0:()Lvc/o;` @kind virtual;
  #L4ae732.  v0:= temp @kind object;
  #L4ae734.  call temp:= `r`(v0) @signature `Lvc/o;.r:()Ljava/lang/String;` @kind virtual;
  #L4ae73a.  v0:= temp @kind object;
  #L4ae73c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4ae742.  v0:= temp;
  #L4ae744.  v1:= v2.`vc.p.o` @type ^`uc.f` @kind object;
  #L4ae748.  call temp:= `hashCode`(v1) @signature `Luc/f;.hashCode:()I` @kind virtual;
  #L4ae74e.  v1:= temp;
  #L4ae750.  v0:= v0 ^~ v1 @kind int;
  #L4ae752.  return v0;
}
procedure `vc.b` `i0`(`vc.p` v0 @kind this, `yc.i` v1 @kind object, `long` v2 ) @signature `Lvc/p;.i0:(Lyc/i;J)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4ae9cc.  call temp:= `A0`(v0, v1, v2) @signature `Lvc/p;.A0:(Lyc/i;J)Lvc/p;` @kind virtual;
  #L4ae9d2.  v1:= temp @kind object;
  #L4ae9d4.  return v1 @kind object;
}
procedure `vc.a` `j0`(`vc.p` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/p;.j0:(JLyc/l;)Lvc/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4ae8b4.  call temp:= `s0`(v0, v1, v3) @signature `Lvc/p;.s0:(JLyc/l;)Lvc/p;` @kind virtual;
  #L4ae8ba.  v1:= temp @kind object;
  #L4ae8bc.  return v1 @kind object;
}
procedure `vc.a` `k0`(`vc.p` v0 @kind this, `long` v1 ) @signature `Lvc/p;.k0:(J)Lvc/a;` @AccessFlag SYNTHETIC {
    temp;

  #L4ae8d0.  call temp:= `u0`(v0, v1) @signature `Lvc/p;.u0:(J)Lvc/p;` @kind virtual;
  #L4ae8d6.  v1:= temp @kind object;
  #L4ae8d8.  return v1 @kind object;
}
procedure `vc.a` `l0`(`vc.p` v0 @kind this, `long` v1 ) @signature `Lvc/p;.l0:(J)Lvc/a;` @AccessFlag SYNTHETIC {
    temp;

  #L4ae8ec.  call temp:= `v0`(v0, v1) @signature `Lvc/p;.v0:(J)Lvc/p;` @kind virtual;
  #L4ae8f2.  v1:= temp @kind object;
  #L4ae8f4.  return v1 @kind object;
}
procedure `vc.a` `m0`(`vc.p` v0 @kind this, `long` v1 ) @signature `Lvc/p;.m0:(J)Lvc/a;` @AccessFlag SYNTHETIC {
    temp;

  #L4ae908.  call temp:= `w0`(v0, v1) @signature `Lvc/p;.w0:(J)Lvc/p;` @kind virtual;
  #L4ae90e.  v1:= temp @kind object;
  #L4ae910.  return v1 @kind object;
}
procedure `vc.o` `o0`(`vc.p` v1 @kind this) @signature `Lvc/p;.o0:()Lvc/o;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aea3c.  v0:= `@@vc.o.r` @type ^`vc.o` @kind object;
  #L4aea40.  return v0 @kind object;
}
procedure `vc.q` `q0`(`vc.p` v1 @kind this) @signature `Lvc/p;.q0:()Lvc/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aecc0.  v0:= v1.`vc.p.p` @type ^`vc.q` @kind object;
  #L4aecc4.  return v0 @kind object;
}
procedure `yc.d` `r`(`vc.p` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/p;.r:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4aee00.  call temp:= `r0`(v0, v1, v3) @signature `Lvc/p;.r0:(JLyc/l;)Lvc/p;` @kind virtual;
  #L4aee06.  v1:= temp @kind object;
  #L4aee08.  return v1 @kind object;
}
procedure `vc.p` `r0`(`vc.p` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/p;.r0:(JLyc/l;)Lvc/p;` @AccessFlag PUBLIC {
    temp;

  #L4aea54.  call temp:= `d0`(v0, v1, v3) @signature `Lvc/b;.d0:(JLyc/l;)Lvc/b;` @kind super;
  #L4aea5a.  v1:= temp @kind object;
  #L4aea5c.  v1:= (`vc.p`) v1 @kind object;
  #L4aea60.  return v1 @kind object;
}
procedure `vc.p` `s0`(`vc.p` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/p;.s0:(JLyc/l;)Lvc/p;` @AccessFlag PUBLIC {
    temp;

  #L4aea74.  call temp:= `j0`(v0, v1, v3) @signature `Lvc/a;.j0:(JLyc/l;)Lvc/a;` @kind super;
  #L4aea7a.  v1:= temp @kind object;
  #L4aea7c.  v1:= (`vc.p`) v1 @kind object;
  #L4aea80.  return v1 @kind object;
}
procedure `yc.n` `t`(`vc.p` v3 @kind this, `yc.i` v4 @kind object) @signature `Lvc/p;.t:(Lyc/i;)Lyc/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4aeee8.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4aeeec.  if v0 == 0 then goto L4aef72;
  #L4aeef0.  call temp:= `d`(v3, v4) @signature `Lvc/p;.d:(Lyc/i;)Z` @kind virtual;
  #L4aeef6.  v0:= temp;
  #L4aeef8.  if v0 == 0 then goto L4aef44;
  #L4aeefc.  v4:= (`yc.a`) v4 @kind object;
  #L4aef00.  v0:= `@@vc.p$a.a` @type ^`int`[] @kind object;
  #L4aef04.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4aef0a.  v1:= temp;
  #L4aef0c.  v0:= v0[v1];
  #L4aef10.  v1:= 1I;
  #L4aef12.  if v0 == v1 then goto L4aef38;
  #L4aef16.  v2:= 2I;
  #L4aef18.  if v0 == v2 then goto L4aef2e;
  #L4aef1c.  call temp:= `o0`(v3) @signature `Lvc/p;.o0:()Lvc/o;` @kind virtual;
  #L4aef22.  v0:= temp @kind object;
  #L4aef24.  call temp:= `T`(v0, v4) @signature `Lvc/o;.T:(Lyc/a;)Lyc/n;` @kind virtual;
  #L4aef2a.  v4:= temp @kind object;
  #L4aef2c.  return v4 @kind object;
  #L4aef2e.  call temp:= `n0`(v3, v1) @signature `Lvc/p;.n0:(I)Lyc/n;` @kind direct;
  #L4aef34.  v4:= temp @kind object;
  #L4aef36.  return v4 @kind object;
  #L4aef38.  v4:= 6I;
  #L4aef3a.  call temp:= `n0`(v3, v4) @signature `Lvc/p;.n0:(I)Lyc/n;` @kind direct;
  #L4aef40.  v4:= temp @kind object;
  #L4aef42.  return v4 @kind object;
  #L4aef44.  v0:= new `yc.m`;
  #L4aef48.  v1:= new `java.lang.StringBuilder`;
  #L4aef4c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4aef52.  v2:= "Unsupported field: " @kind object;
  #L4aef56.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4aef5c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4aef62.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4aef68.  v4:= temp @kind object;
  #L4aef6a.  call `<init>`(v0, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4aef70.  throw v0;
  #L4aef72.  call temp:= `h`(v4, v3) @signature `Lyc/i;.h:(Lyc/e;)Lyc/n;` @kind interface;
  #L4aef78.  v4:= temp @kind object;
  #L4aef7a.  return v4 @kind object;
}
procedure `vc.p` `t0`(`vc.p` v0 @kind this, `yc.h` v1 @kind object) @signature `Lvc/p;.t0:(Lyc/h;)Lvc/p;` @AccessFlag PUBLIC {
    temp;

  #L4aea94.  call temp:= `f0`(v0, v1) @signature `Lvc/b;.f0:(Lyc/h;)Lvc/b;` @kind super;
  #L4aea9a.  v1:= temp @kind object;
  #L4aea9c.  v1:= (`vc.p`) v1 @kind object;
  #L4aeaa0.  return v1 @kind object;
}
procedure `vc.p` `u0`(`vc.p` v1 @kind this, `long` v2 ) @signature `Lvc/p;.u0:(J)Lvc/p;` @AccessFlag  {
    temp;
    v0;

  #L4aeab4.  v0:= v1.`vc.p.o` @type ^`uc.f` @kind object;
  #L4aeab8.  call temp:= `I0`(v0, v2) @signature `Luc/f;.I0:(J)Luc/f;` @kind virtual;
  #L4aeabe.  v2:= temp @kind object;
  #L4aeac0.  call temp:= `y0`(v1, v2) @signature `Lvc/p;.y0:(Luc/f;)Lvc/p;` @kind direct;
  #L4aeac6.  v2:= temp @kind object;
  #L4aeac8.  return v2 @kind object;
}
procedure `vc.p` `v0`(`vc.p` v1 @kind this, `long` v2 ) @signature `Lvc/p;.v0:(J)Lvc/p;` @AccessFlag  {
    temp;
    v0;

  #L4aeadc.  v0:= v1.`vc.p.o` @type ^`uc.f` @kind object;
  #L4aeae0.  call temp:= `J0`(v0, v2) @signature `Luc/f;.J0:(J)Luc/f;` @kind virtual;
  #L4aeae6.  v2:= temp @kind object;
  #L4aeae8.  call temp:= `y0`(v1, v2) @signature `Lvc/p;.y0:(Luc/f;)Lvc/p;` @kind direct;
  #L4aeaee.  v2:= temp @kind object;
  #L4aeaf0.  return v2 @kind object;
}
procedure `vc.p` `w0`(`vc.p` v1 @kind this, `long` v2 ) @signature `Lvc/p;.w0:(J)Lvc/p;` @AccessFlag  {
    temp;
    v0;

  #L4aeb04.  v0:= v1.`vc.p.o` @type ^`uc.f` @kind object;
  #L4aeb08.  call temp:= `L0`(v0, v2) @signature `Luc/f;.L0:(J)Luc/f;` @kind virtual;
  #L4aeb0e.  v2:= temp @kind object;
  #L4aeb10.  call temp:= `y0`(v1, v2) @signature `Lvc/p;.y0:(Luc/f;)Lvc/p;` @kind direct;
  #L4aeb16.  v2:= temp @kind object;
  #L4aeb18.  return v2 @kind object;
}
procedure `vc.p` `z0`(`vc.p` v0 @kind this, `yc.f` v1 @kind object) @signature `Lvc/p;.z0:(Lyc/f;)Lvc/p;` @AccessFlag PUBLIC {
    temp;

  #L4aeb5c.  call temp:= `h0`(v0, v1) @signature `Lvc/b;.h0:(Lyc/f;)Lvc/b;` @kind super;
  #L4aeb62.  v1:= temp @kind object;
  #L4aeb64.  v1:= (`vc.p`) v1 @kind object;
  #L4aeb68.  return v1 @kind object;
}
