record `vc.g` @kind class @AccessFlag FINAL extends `vc.f` @kind class, `java.io.Serializable` @kind interface {
  `vc.d` `vc.g.o` @AccessFlag PRIVATE_FINAL;
  `uc.r` `vc.g.p` @AccessFlag PRIVATE_FINAL;
  `uc.q` `vc.g.q` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`vc.g` v1 @kind this, `vc.d` v2 @kind object, `uc.r` v3 @kind object, `uc.q` v4 @kind object) @signature `Lvc/g;.<init>:(Lvc/d;Luc/r;Luc/q;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L4a96e4.  call `<init>`(v1) @signature `Lvc/f;.<init>:()V` @kind direct;
  #L4a96ea.  v0:= "dateTime" @kind object;
  #L4a96ee.  call temp:= `i`(v2, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a96f4.  v2:= temp @kind object;
  #L4a96f6.  v2:= (`vc.d`) v2 @kind object;
  #L4a96fa.  v1.`vc.g.o` @type ^`vc.d` := v2 @kind object;
  #L4a96fe.  v2:= "offset" @kind object;
  #L4a9702.  call temp:= `i`(v3, v2) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9708.  v2:= temp @kind object;
  #L4a970a.  v2:= (`uc.r`) v2 @kind object;
  #L4a970e.  v1.`vc.g.p` @type ^`uc.r` := v2 @kind object;
  #L4a9712.  v2:= "zone" @kind object;
  #L4a9716.  call temp:= `i`(v4, v2) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a971c.  v2:= temp @kind object;
  #L4a971e.  v2:= (`uc.q`) v2 @kind object;
  #L4a9722.  v1.`vc.g.q` @type ^`uc.q` := v2 @kind object;
  #L4a9726.  return @kind void;
}
procedure `vc.g` `m0`(`vc.g` v1 @kind this, `uc.e` v2 @kind object, `uc.q` v3 @kind object) @signature `Lvc/g;.m0:(Luc/e;Luc/q;)Lvc/g;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4a965c.  call temp:= `g0`(v1) @signature `Lvc/f;.g0:()Lvc/b;` @kind virtual;
  #L4a9662.  v0:= temp @kind object;
  #L4a9664.  call temp:= `a0`(v0) @signature `Lvc/b;.a0:()Lvc/h;` @kind virtual;
  #L4a966a.  v0:= temp @kind object;
  #L4a966c.  call temp:= `o0`(v0, v2, v3) @signature `Lvc/g;.o0:(Lvc/h;Luc/e;Luc/q;)Lvc/g;` @kind static;
  #L4a9672.  v2:= temp @kind object;
  #L4a9674.  return v2 @kind object;
}
procedure `vc.f` `n0`(`vc.d` v6 @kind object, `uc.q` v7 @kind object, `uc.r` v8 @kind object) @signature `Lvc/g;.n0:(Lvc/d;Luc/q;Luc/r;)Lvc/f;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4a9414.  v0:= "localDateTime" @kind object;
  #L4a9418.  call temp:= `i`(v6, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a941e.  v0:= "zone" @kind object;
  #L4a9422.  call temp:= `i`(v7, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a9428.  v0:= instanceof @variable v7 @type ^`uc.r` @kind boolean;
  #L4a942c.  if v0 == 0 then goto L4a9442;
  #L4a9430.  v8:= new `vc.g`;
  #L4a9434.  v0:= v7 @kind object;
  #L4a9436.  v0:= (`uc.r`) v0 @kind object;
  #L4a943a.  call `<init>`(v8, v6, v0, v7) @signature `Lvc/g;.<init>:(Lvc/d;Luc/r;Luc/q;)V` @kind direct;
  #L4a9440.  return v8 @kind object;
  #L4a9442.  call temp:= `h`(v7) @signature `Luc/q;.h:()Lzc/f;` @kind virtual;
  #L4a9448.  v0:= temp @kind object;
  #L4a944a.  call temp:= `o0`(v6) @signature `Luc/g;.o0:(Lyc/e;)Luc/g;` @kind static;
  #L4a9450.  v1:= temp @kind object;
  #L4a9452.  call temp:= `c`(v0, v1) @signature `Lzc/f;.c:(Luc/g;)Ljava/util/List;` @kind virtual;
  #L4a9458.  v2:= temp @kind object;
  #L4a945a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4a9460.  v3:= temp;
  #L4a9462.  v4:= 1I;
  #L4a9464.  v5:= 0I;
  #L4a9466.  if v3 != v4 then goto L4a9478;
  #L4a946a.  call temp:= `get`(v2, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4a9470.  v8:= temp @kind object;
  #L4a9472.  v8:= (`uc.r`) v8 @kind object;
  #L4a9476.  goto L4a94be;
  #L4a9478.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4a947e.  v3:= temp;
  #L4a9480.  if v3 != 0 then goto L4a94ae;
  #L4a9484.  call temp:= `b`(v0, v1) @signature `Lzc/f;.b:(Luc/g;)Lzc/d;` @kind virtual;
  #L4a948a.  v8:= temp @kind object;
  #L4a948c.  call temp:= `h`(v8) @signature `Lzc/d;.h:()Luc/d;` @kind virtual;
  #L4a9492.  v0:= temp @kind object;
  #L4a9494.  call temp:= `h`(v0) @signature `Luc/d;.h:()J` @kind virtual;
  #L4a949a.  v0:= temp @kind wide;
  #L4a949c.  call temp:= `r0`(v6, v0) @signature `Lvc/d;.r0:(J)Lvc/d;` @kind virtual;
  #L4a94a2.  v6:= temp @kind object;
  #L4a94a4.  call temp:= `k`(v8) @signature `Lzc/d;.k:()Luc/r;` @kind virtual;
  #L4a94aa.  v8:= temp @kind object;
  #L4a94ac.  goto L4a94be;
  #L4a94ae.  if v8 == 0 then goto L4a946a;
  #L4a94b2.  call temp:= `contains`(v2, v8) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4a94b8.  v0:= temp;
  #L4a94ba.  if v0 == 0 then goto L4a946a;
  #L4a94be.  v0:= "offset" @kind object;
  #L4a94c2.  call temp:= `i`(v8, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a94c8.  v0:= new `vc.g`;
  #L4a94cc.  call `<init>`(v0, v6, v8, v7) @signature `Lvc/g;.<init>:(Lvc/d;Luc/r;Luc/q;)V` @kind direct;
  #L4a94d2.  return v0 @kind object;
}
procedure `vc.g` `o0`(`vc.h` v3 @kind object, `uc.e` v4 @kind object, `uc.q` v5 @kind object) @signature `Lvc/g;.o0:(Lvc/h;Luc/e;Luc/q;)Lvc/g;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4a9688.  call temp:= `h`(v5) @signature `Luc/q;.h:()Lzc/f;` @kind virtual;
  #L4a968e.  v0:= temp @kind object;
  #L4a9690.  call temp:= `a`(v0, v4) @signature `Lzc/f;.a:(Luc/e;)Luc/r;` @kind virtual;
  #L4a9696.  v0:= temp @kind object;
  #L4a9698.  v1:= "offset" @kind object;
  #L4a969c.  call temp:= `i`(v0, v1) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4a96a2.  call temp:= `a0`(v4) @signature `Luc/e;.a0:()J` @kind virtual;
  #L4a96a8.  v1:= temp @kind wide;
  #L4a96aa.  call temp:= `b0`(v4) @signature `Luc/e;.b0:()I` @kind virtual;
  #L4a96b0.  v4:= temp;
  #L4a96b2.  call temp:= `A0`(v1, v4, v0) @signature `Luc/g;.A0:(JILuc/r;)Luc/g;` @kind static;
  #L4a96b8.  v4:= temp @kind object;
  #L4a96ba.  call temp:= `t`(v3, v4) @signature `Lvc/h;.t:(Lyc/e;)Lvc/c;` @kind virtual;
  #L4a96c0.  v3:= temp @kind object;
  #L4a96c2.  v3:= (`vc.d`) v3 @kind object;
  #L4a96c6.  v4:= new `vc.g`;
  #L4a96ca.  call `<init>`(v4, v3, v0, v5) @signature `Lvc/g;.<init>:(Lvc/d;Luc/r;Luc/q;)V` @kind direct;
  #L4a96d0.  return v4 @kind object;
}
procedure `vc.f` `p0`(`java.io.ObjectInput` v2 @kind object) @signature `Lvc/g;.p0:(Ljava/io/ObjectInput;)Lvc/f;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L4a9534.  call temp:= `readObject`(v2) @signature `Ljava/io/ObjectInput;.readObject:()Ljava/lang/Object;` @kind interface;
  #L4a953a.  v0:= temp @kind object;
  #L4a953c.  v0:= (`vc.c`) v0 @kind object;
  #L4a9540.  call temp:= `readObject`(v2) @signature `Ljava/io/ObjectInput;.readObject:()Ljava/lang/Object;` @kind interface;
  #L4a9546.  v1:= temp @kind object;
  #L4a9548.  v1:= (`uc.r`) v1 @kind object;
  #L4a954c.  call temp:= `readObject`(v2) @signature `Ljava/io/ObjectInput;.readObject:()Ljava/lang/Object;` @kind interface;
  #L4a9552.  v2:= temp @kind object;
  #L4a9554.  v2:= (`uc.q`) v2 @kind object;
  #L4a9558.  call temp:= `V`(v0, v1) @signature `Lvc/c;.V:(Luc/q;)Lvc/f;` @kind virtual;
  #L4a955e.  v0:= temp @kind object;
  #L4a9560.  call temp:= `l0`(v0, v2) @signature `Lvc/f;.l0:(Luc/q;)Lvc/f;` @kind virtual;
  #L4a9566.  v2:= temp @kind object;
  #L4a9568.  return v2 @kind object;
}
procedure `java.lang.Object` `readResolve`(`vc.g` v2 @kind this) @signature `Lvc/g;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4a92e4.  v0:= new `java.io.InvalidObjectException`;
  #L4a92e8.  v1:= "Deserialization via serialization delegate" @kind object;
  #L4a92ec.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4a92f2.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`vc.g` v2 @kind this) @signature `Lvc/g;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4a9304.  v0:= new `vc.u`;
  #L4a9308.  v1:= 13I;
  #L4a930c.  call `<init>`(v0, v1, v2) @signature `Lvc/u;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L4a9312.  return v0 @kind object;
}
procedure `yc.d` `D`(`vc.g` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/g;.D:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a9768.  call temp:= `d0`(v0, v1, v3) @signature `Lvc/g;.d0:(JLyc/l;)Lvc/f;` @kind virtual;
  #L4a976e.  v1:= temp @kind object;
  #L4a9770.  return v1 @kind object;
}
procedure `yc.d` `P`(`vc.g` v0 @kind this, `yc.i` v1 @kind object, `long` v2 ) @signature `Lvc/g;.P:(Lyc/i;J)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a9784.  call temp:= `k0`(v0, v1, v2) @signature `Lvc/g;.k0:(Lyc/i;J)Lvc/f;` @kind virtual;
  #L4a978a.  v1:= temp @kind object;
  #L4a978c.  return v1 @kind object;
}
procedure `uc.r` `X`(`vc.g` v1 @kind this) @signature `Lvc/g;.X:()Luc/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a93e4.  v0:= v1.`vc.g.p` @type ^`uc.r` @kind object;
  #L4a93e8.  return v0 @kind object;
}
procedure `uc.q` `a0`(`vc.g` v1 @kind this) @signature `Lvc/g;.a0:()Luc/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a93cc.  v0:= v1.`vc.g.q` @type ^`uc.q` @kind object;
  #L4a93d0.  return v0 @kind object;
}
procedure `boolean` `d`(`vc.g` v1 @kind this, `yc.i` v2 @kind object) @signature `Lvc/g;.d:(Lyc/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a9260.  v0:= instanceof @variable v2 @type ^`yc.a` @kind boolean;
  #L4a9264.  if v0 != 0 then goto L4a927e;
  #L4a9268.  if v2 == 0 then goto L4a927a;
  #L4a926c.  call temp:= `j`(v2, v1) @signature `Lyc/i;.j:(Lyc/e;)Z` @kind interface;
  #L4a9272.  v2:= temp;
  #L4a9274.  if v2 == 0 then goto L4a927a;
  #L4a9278.  goto L4a927e;
  #L4a927a.  v2:= 0I;
  #L4a927c.  goto L4a9280;
  #L4a927e.  v2:= 1I;
  #L4a9280.  return v2;
}
procedure `vc.f` `d0`(`vc.g` v1 @kind this, `long` v2 , `yc.l` v4 @kind object) @signature `Lvc/g;.d0:(JLyc/l;)Lvc/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a94e4.  v0:= instanceof @variable v4 @type ^`yc.b` @kind boolean;
  #L4a94e8.  if v0 == 0 then goto L4a9502;
  #L4a94ec.  v0:= v1.`vc.g.o` @type ^`vc.d` @kind object;
  #L4a94f0.  call temp:= `m0`(v0, v2, v4) @signature `Lvc/d;.m0:(JLyc/l;)Lvc/d;` @kind virtual;
  #L4a94f6.  v2:= temp @kind object;
  #L4a94f8.  call temp:= `j0`(v1, v2) @signature `Lvc/f;.j0:(Lyc/f;)Lvc/f;` @kind virtual;
  #L4a94fe.  v2:= temp @kind object;
  #L4a9500.  return v2 @kind object;
  #L4a9502.  call temp:= `g0`(v1) @signature `Lvc/f;.g0:()Lvc/b;` @kind virtual;
  #L4a9508.  v0:= temp @kind object;
  #L4a950a.  call temp:= `a0`(v0) @signature `Lvc/b;.a0:()Lvc/h;` @kind virtual;
  #L4a9510.  v0:= temp @kind object;
  #L4a9512.  call temp:= `d`(v4, v1, v2) @signature `Lyc/l;.d:(Lyc/d;J)Lyc/d;` @kind interface;
  #L4a9518.  v2:= temp @kind object;
  #L4a951a.  call temp:= `i`(v0, v2) @signature `Lvc/h;.i:(Lyc/d;)Lvc/g;` @kind virtual;
  #L4a9520.  v2:= temp @kind object;
  #L4a9522.  return v2 @kind object;
}
procedure `boolean` `equals`(`vc.g` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lvc/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a9224.  v0:= 1I;
  #L4a9226.  if v3 != v4 then goto L4a922c;
  #L4a922a.  return v0;
  #L4a922c.  v1:= instanceof @variable v4 @type ^`vc.f` @kind boolean;
  #L4a9230.  v2:= 0I;
  #L4a9232.  if v1 == 0 then goto L4a924c;
  #L4a9236.  v4:= (`vc.f`) v4 @kind object;
  #L4a923a.  call temp:= `V`(v3, v4) @signature `Lvc/f;.V:(Lvc/f;)I` @kind virtual;
  #L4a9240.  v4:= temp;
  #L4a9242.  if v4 != 0 then goto L4a9248;
  #L4a9246.  goto L4a924a;
  #L4a9248.  v0:= 0I;
  #L4a924a.  return v0;
  #L4a924c.  return v2;
}
procedure `vc.c` `h0`(`vc.g` v1 @kind this) @signature `Lvc/g;.h0:()Lvc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4a93fc.  v0:= v1.`vc.g.o` @type ^`vc.d` @kind object;
  #L4a9400.  return v0 @kind object;
}
procedure `int` `hashCode`(`vc.g` v3 @kind this) @signature `Lvc/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a9294.  call temp:= `h0`(v3) @signature `Lvc/g;.h0:()Lvc/c;` @kind virtual;
  #L4a929a.  v0:= temp @kind object;
  #L4a929c.  call temp:= `hashCode`(v0) @signature `Lvc/c;.hashCode:()I` @kind virtual;
  #L4a92a2.  v0:= temp;
  #L4a92a4.  call temp:= `X`(v3) @signature `Lvc/g;.X:()Luc/r;` @kind virtual;
  #L4a92aa.  v1:= temp @kind object;
  #L4a92ac.  call temp:= `hashCode`(v1) @signature `Luc/r;.hashCode:()I` @kind virtual;
  #L4a92b2.  v1:= temp;
  #L4a92b4.  v0:= v0 ^~ v1 @kind int;
  #L4a92b6.  call temp:= `a0`(v3) @signature `Lvc/g;.a0:()Luc/q;` @kind virtual;
  #L4a92bc.  v1:= temp @kind object;
  #L4a92be.  call temp:= `hashCode`(v1) @signature `Luc/q;.hashCode:()I` @kind virtual;
  #L4a92c4.  v1:= temp;
  #L4a92c6.  v2:= 3I;
  #L4a92c8.  call temp:= `rotateLeft`(v1, v2) @signature `Ljava/lang/Integer;.rotateLeft:(II)I` @kind static;
  #L4a92ce.  v1:= temp;
  #L4a92d0.  v0:= v0 ^~ v1 @kind int;
  #L4a92d2.  return v0;
}
procedure `vc.f` `k0`(`vc.g` v3 @kind this, `yc.i` v4 @kind object, `long` v5 ) @signature `Lvc/g;.k0:(Lyc/i;J)Lvc/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a957c.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4a9580.  if v0 == 0 then goto L4a9606;
  #L4a9584.  v0:= v4 @kind object;
  #L4a9586.  v0:= (`yc.a`) v0 @kind object;
  #L4a958a.  v1:= `@@vc.g$a.a` @type ^`int`[] @kind object;
  #L4a958e.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4a9594.  v2:= temp;
  #L4a9596.  v1:= v1[v2];
  #L4a959a.  v2:= 1I;
  #L4a959c.  if v1 == v2 then goto L4a95ee;
  #L4a95a0.  v2:= 2I;
  #L4a95a2.  if v1 == v2 then goto L4a95c4;
  #L4a95a6.  v0:= v3.`vc.g.o` @type ^`vc.d` @kind object;
  #L4a95aa.  call temp:= `w0`(v0, v4, v5) @signature `Lvc/d;.w0:(Lyc/i;J)Lvc/d;` @kind virtual;
  #L4a95b0.  v4:= temp @kind object;
  #L4a95b2.  v5:= v3.`vc.g.q` @type ^`uc.q` @kind object;
  #L4a95b6.  v6:= v3.`vc.g.p` @type ^`uc.r` @kind object;
  #L4a95ba.  call temp:= `n0`(v4, v5, v6) @signature `Lvc/g;.n0:(Lvc/d;Luc/q;Luc/r;)Lvc/f;` @kind static;
  #L4a95c0.  v4:= temp @kind object;
  #L4a95c2.  return v4 @kind object;
  #L4a95c4.  call temp:= `r`(v0, v5) @signature `Lyc/a;.r:(J)I` @kind virtual;
  #L4a95ca.  v4:= temp;
  #L4a95cc.  call temp:= `X`(v4) @signature `Luc/r;.X:(I)Luc/r;` @kind static;
  #L4a95d2.  v4:= temp @kind object;
  #L4a95d4.  v5:= v3.`vc.g.o` @type ^`vc.d` @kind object;
  #L4a95d8.  call temp:= `g0`(v5, v4) @signature `Lvc/c;.g0:(Luc/r;)Luc/e;` @kind virtual;
  #L4a95de.  v4:= temp @kind object;
  #L4a95e0.  v5:= v3.`vc.g.q` @type ^`uc.q` @kind object;
  #L4a95e4.  call temp:= `m0`(v3, v4, v5) @signature `Lvc/g;.m0:(Luc/e;Luc/q;)Lvc/g;` @kind direct;
  #L4a95ea.  v4:= temp @kind object;
  #L4a95ec.  return v4 @kind object;
  #L4a95ee.  call temp:= `e0`(v3) @signature `Lvc/f;.e0:()J` @kind virtual;
  #L4a95f4.  v0:= temp @kind wide;
  #L4a95f6.  v5:= v5 - v0 @kind long;
  #L4a95f8.  v4:= `@@yc.b.s` @type ^`yc.b` @kind object;
  #L4a95fc.  call temp:= `d0`(v3, v5, v4) @signature `Lvc/g;.d0:(JLyc/l;)Lvc/f;` @kind virtual;
  #L4a9602.  v4:= temp @kind object;
  #L4a9604.  return v4 @kind object;
  #L4a9606.  call temp:= `g0`(v3) @signature `Lvc/f;.g0:()Lvc/b;` @kind virtual;
  #L4a960c.  v0:= temp @kind object;
  #L4a960e.  call temp:= `a0`(v0) @signature `Lvc/b;.a0:()Lvc/h;` @kind virtual;
  #L4a9614.  v0:= temp @kind object;
  #L4a9616.  call temp:= `e`(v4, v3, v5) @signature `Lyc/i;.e:(Lyc/d;J)Lyc/d;` @kind interface;
  #L4a961c.  v4:= temp @kind object;
  #L4a961e.  call temp:= `i`(v0, v4) @signature `Lvc/h;.i:(Lyc/d;)Lvc/g;` @kind virtual;
  #L4a9624.  v4:= temp @kind object;
  #L4a9626.  return v4 @kind object;
}
procedure `vc.f` `l0`(`vc.g` v2 @kind this, `uc.q` v3 @kind object) @signature `Lvc/g;.l0:(Luc/q;)Lvc/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a9638.  v0:= v2.`vc.g.o` @type ^`vc.d` @kind object;
  #L4a963c.  v1:= v2.`vc.g.p` @type ^`uc.r` @kind object;
  #L4a9640.  call temp:= `n0`(v0, v3, v1) @signature `Lvc/g;.n0:(Lvc/d;Luc/q;Luc/r;)Lvc/f;` @kind static;
  #L4a9646.  v3:= temp @kind object;
  #L4a9648.  return v3 @kind object;
}
procedure `java.lang.String` `toString`(`vc.g` v3 @kind this) @signature `Lvc/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a9324.  v0:= new `java.lang.StringBuilder`;
  #L4a9328.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a932e.  call temp:= `h0`(v3) @signature `Lvc/g;.h0:()Lvc/c;` @kind virtual;
  #L4a9334.  v1:= temp @kind object;
  #L4a9336.  call temp:= `toString`(v1) @signature `Lvc/c;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a933c.  v1:= temp @kind object;
  #L4a933e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a9344.  call temp:= `X`(v3) @signature `Lvc/g;.X:()Luc/r;` @kind virtual;
  #L4a934a.  v1:= temp @kind object;
  #L4a934c.  call temp:= `toString`(v1) @signature `Luc/r;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a9352.  v1:= temp @kind object;
  #L4a9354.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a935a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a9360.  v0:= temp @kind object;
  #L4a9362.  call temp:= `X`(v3) @signature `Lvc/g;.X:()Luc/r;` @kind virtual;
  #L4a9368.  v1:= temp @kind object;
  #L4a936a.  call temp:= `a0`(v3) @signature `Lvc/g;.a0:()Luc/q;` @kind virtual;
  #L4a9370.  v2:= temp @kind object;
  #L4a9372.  if v1 == v2 then goto L4a93b8;
  #L4a9376.  v1:= new `java.lang.StringBuilder`;
  #L4a937a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a9380.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a9386.  v0:= 91I;
  #L4a938a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a9390.  call temp:= `a0`(v3) @signature `Lvc/g;.a0:()Luc/q;` @kind virtual;
  #L4a9396.  v0:= temp @kind object;
  #L4a9398.  call temp:= `toString`(v0) @signature `Luc/q;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a939e.  v0:= temp @kind object;
  #L4a93a0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a93a6.  v0:= 93I;
  #L4a93aa.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a93b0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a93b6.  v0:= temp @kind object;
  #L4a93b8.  return v0 @kind object;
}
procedure `void` `writeExternal`(`vc.g` v1 @kind this, `java.io.ObjectOutput` v2 @kind object) @signature `Lvc/g;.writeExternal:(Ljava/io/ObjectOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L4a9738.  v0:= v1.`vc.g.o` @type ^`vc.d` @kind object;
  #L4a973c.  call `writeObject`(v2, v0) @signature `Ljava/io/ObjectOutput;.writeObject:(Ljava/lang/Object;)V` @kind interface;
  #L4a9742.  v0:= v1.`vc.g.p` @type ^`uc.r` @kind object;
  #L4a9746.  call `writeObject`(v2, v0) @signature `Ljava/io/ObjectOutput;.writeObject:(Ljava/lang/Object;)V` @kind interface;
  #L4a974c.  v0:= v1.`vc.g.q` @type ^`uc.q` @kind object;
  #L4a9750.  call `writeObject`(v2, v0) @signature `Ljava/io/ObjectOutput;.writeObject:(Ljava/lang/Object;)V` @kind interface;
  #L4a9756.  return @kind void;
}
