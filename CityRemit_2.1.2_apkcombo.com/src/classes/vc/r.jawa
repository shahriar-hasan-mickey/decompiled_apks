record `vc.r` @kind class @AccessFlag PUBLIC_FINAL extends `vc.h` @kind class, `java.io.Serializable` @kind interface {
}
global `vc.r` `@@vc.r.q` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lvc/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4af4e4.  v0:= new `vc.r`;
  #L4af4e8.  call `<init>`(v0) @signature `Lvc/r;.<init>:()V` @kind direct;
  #L4af4ee.  `@@vc.r.q` @type ^`vc.r` := v0 @kind object;
  #L4af4f2.  return @kind void;
}
procedure `void` `<init>`(`vc.r` v0 @kind this) @signature `Lvc/r;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4af504.  call `<init>`(v0) @signature `Lvc/h;.<init>:()V` @kind direct;
  #L4af50a.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`vc.r` v1 @kind this) @signature `Lvc/r;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4af3b4.  v0:= `@@vc.r.q` @type ^`vc.r` @kind object;
  #L4af3b8.  return v0 @kind object;
}
procedure `vc.f` `I`(`vc.r` v0 @kind this, `uc.e` v1 @kind object, `uc.q` v2 @kind object) @signature `Lvc/r;.I:(Luc/e;Luc/q;)Lvc/f;` @AccessFlag PUBLIC {
    temp;

  #L4af434.  call temp:= `I`(v0, v1, v2) @signature `Lvc/h;.I:(Luc/e;Luc/q;)Lvc/f;` @kind super;
  #L4af43a.  v1:= temp @kind object;
  #L4af43c.  return v1 @kind object;
}
procedure `vc.s` `K`(`vc.r` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lvc/r;.K:(III)Lvc/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4af46c.  v0:= new `vc.s`;
  #L4af470.  v2:= v2 + 1911;
  #L4af474.  call temp:= `C0`(v2, v3, v4) @signature `Luc/f;.C0:(III)Luc/f;` @kind static;
  #L4af47a.  v2:= temp @kind object;
  #L4af47c.  call `<init>`(v0, v2) @signature `Lvc/s;.<init>:(Luc/f;)V` @kind direct;
  #L4af482.  return v0 @kind object;
}
procedure `vc.s` `L`(`vc.r` v1 @kind this, `yc.e` v2 @kind object) @signature `Lvc/r;.L:(Lyc/e;)Lvc/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4af494.  v0:= instanceof @variable v2 @type ^`vc.s` @kind boolean;
  #L4af498.  if v0 == 0 then goto L4af4a2;
  #L4af49c.  v2:= (`vc.s`) v2 @kind object;
  #L4af4a0.  return v2 @kind object;
  #L4af4a2.  v0:= new `vc.s`;
  #L4af4a6.  call temp:= `m0`(v2) @signature `Luc/f;.m0:(Lyc/e;)Luc/f;` @kind static;
  #L4af4ac.  v2:= temp @kind object;
  #L4af4ae.  call `<init>`(v0, v2) @signature `Lvc/s;.<init>:(Luc/f;)V` @kind direct;
  #L4af4b4.  return v0 @kind object;
}
procedure `vc.t` `P`(`vc.r` v0 @kind this, `int` v1 ) @signature `Lvc/r;.P:(I)Lvc/t;` @AccessFlag PUBLIC {
    temp;

  #L4af4c8.  call temp:= `c`(v1) @signature `Lvc/t;.c:(I)Lvc/t;` @kind static;
  #L4af4ce.  v1:= temp @kind object;
  #L4af4d0.  return v1 @kind object;
}
procedure `yc.n` `S`(`vc.r` v10 @kind this, `yc.a` v11 @kind object) @signature `Lvc/r;.S:(Lyc/a;)Lyc/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4af51c.  v0:= `@@vc.r$a.a` @type ^`int`[] @kind object;
  #L4af520.  call temp:= `ordinal`(v11) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4af526.  v1:= temp;
  #L4af528.  v0:= v0[v1];
  #L4af52c.  v1:= 1I;
  #L4af52e.  if v0 == v1 then goto L4af5b0;
  #L4af532.  v1:= 2I;
  #L4af534.  v2:= 1911L;
  #L4af538.  if v0 == v1 then goto L4af576;
  #L4af53c.  v1:= 3I;
  #L4af53e.  if v0 == v1 then goto L4af54c;
  #L4af542.  call temp:= `k`(v11) @signature `Lyc/a;.k:()Lyc/n;` @kind virtual;
  #L4af548.  v11:= temp @kind object;
  #L4af54a.  return v11 @kind object;
  #L4af54c.  v11:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L4af550.  call temp:= `k`(v11) @signature `Lyc/a;.k:()Lyc/n;` @kind virtual;
  #L4af556.  v11:= temp @kind object;
  #L4af558.  call temp:= `d`(v11) @signature `Lyc/n;.d:()J` @kind virtual;
  #L4af55e.  v0:= temp @kind wide;
  #L4af560.  v0:= v0 - v2 @kind long;
  #L4af562.  call temp:= `c`(v11) @signature `Lyc/n;.c:()J` @kind virtual;
  #L4af568.  v4:= temp @kind wide;
  #L4af56a.  v4:= v4 - v2 @kind long;
  #L4af56c.  call temp:= `i`(v0, v4) @signature `Lyc/n;.i:(JJ)Lyc/n;` @kind static;
  #L4af572.  v11:= temp @kind object;
  #L4af574.  return v11 @kind object;
  #L4af576.  v11:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L4af57a.  call temp:= `k`(v11) @signature `Lyc/a;.k:()Lyc/n;` @kind virtual;
  #L4af580.  v11:= temp @kind object;
  #L4af582.  v4:= 1L;
  #L4af586.  call temp:= `c`(v11) @signature `Lyc/n;.c:()J` @kind virtual;
  #L4af58c.  v0:= temp @kind wide;
  #L4af58e.  v6:= v0 - v2 @kind long;
  #L4af592.  call temp:= `d`(v11) @signature `Lyc/n;.d:()J` @kind virtual;
  #L4af598.  v0:= temp @kind wide;
  #L4af59a.  v0:= -v0 @kind long;
  #L4af59c.  v8:= 1L;
  #L4af5a0.  v0:= v0 + v8 @kind long;
  #L4af5a2.  v8:= v0 + v2 @kind long;
  #L4af5a6.  call temp:= `j`(v4, v6, v8) @signature `Lyc/n;.j:(JJJ)Lyc/n;` @kind static;
  #L4af5ac.  v11:= temp @kind object;
  #L4af5ae.  return v11 @kind object;
  #L4af5b0.  v11:= `@@yc.a.Q` @type ^`yc.a` @kind object;
  #L4af5b4.  call temp:= `k`(v11) @signature `Lyc/a;.k:()Lyc/n;` @kind virtual;
  #L4af5ba.  v11:= temp @kind object;
  #L4af5bc.  call temp:= `d`(v11) @signature `Lyc/n;.d:()J` @kind virtual;
  #L4af5c2.  v0:= temp @kind wide;
  #L4af5c4.  v2:= 22932L;
  #L4af5c8.  v0:= v0 - v2 @kind long;
  #L4af5ca.  call temp:= `c`(v11) @signature `Lyc/n;.c:()J` @kind virtual;
  #L4af5d0.  v4:= temp @kind wide;
  #L4af5d2.  v4:= v4 - v2 @kind long;
  #L4af5d4.  call temp:= `i`(v0, v4) @signature `Lyc/n;.i:(JJ)Lyc/n;` @kind static;
  #L4af5da.  v11:= temp @kind object;
  #L4af5dc.  return v11 @kind object;
}
procedure `vc.b` `d`(`vc.r` v0 @kind this, `yc.e` v1 @kind object) @signature `Lvc/r;.d:(Lyc/e;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4af3fc.  call temp:= `L`(v0, v1) @signature `Lvc/r;.L:(Lyc/e;)Lvc/s;` @kind virtual;
  #L4af402.  v1:= temp @kind object;
  #L4af404.  return v1 @kind object;
}
procedure `vc.i` `j`(`vc.r` v0 @kind this, `int` v1 ) @signature `Lvc/r;.j:(I)Lvc/i;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4af450.  call temp:= `P`(v0, v1) @signature `Lvc/r;.P:(I)Lvc/t;` @kind virtual;
  #L4af456.  v1:= temp @kind object;
  #L4af458.  return v1 @kind object;
}
procedure `java.lang.String` `o`(`vc.r` v1 @kind this) @signature `Lvc/r;.o:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4af3cc.  v0:= "roc" @kind object;
  #L4af3d0.  return v0 @kind object;
}
procedure `java.lang.String` `r`(`vc.r` v1 @kind this) @signature `Lvc/r;.r:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4af3e4.  v0:= "Minguo" @kind object;
  #L4af3e8.  return v0 @kind object;
}
procedure `vc.c` `t`(`vc.r` v0 @kind this, `yc.e` v1 @kind object) @signature `Lvc/r;.t:(Lyc/e;)Lvc/c;` @AccessFlag PUBLIC {
    temp;

  #L4af418.  call temp:= `t`(v0, v1) @signature `Lvc/h;.t:(Lyc/e;)Lvc/c;` @kind super;
  #L4af41e.  v1:= temp @kind object;
  #L4af420.  return v1 @kind object;
}
