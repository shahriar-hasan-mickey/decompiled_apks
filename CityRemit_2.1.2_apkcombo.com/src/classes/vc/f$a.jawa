record `vc.f$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`vc.f$a` v0 @kind this) @signature `Lvc/f$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a913c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a9142.  return @kind void;
}
procedure `int` `a`(`vc.f$a` v4 @kind this, `vc.f` v5 @kind object, `vc.f` v6 @kind object) @signature `Lvc/f$a;.a:(Lvc/f;Lvc/f;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4a90e4.  call temp:= `e0`(v5) @signature `Lvc/f;.e0:()J` @kind virtual;
  #L4a90ea.  v0:= temp @kind wide;
  #L4a90ec.  call temp:= `e0`(v6) @signature `Lvc/f;.e0:()J` @kind virtual;
  #L4a90f2.  v2:= temp @kind wide;
  #L4a90f4.  call temp:= `b`(v0, v2) @signature `Lxc/d;.b:(JJ)I` @kind static;
  #L4a90fa.  v0:= temp;
  #L4a90fc.  if v0 != 0 then goto L4a9128;
  #L4a9100.  call temp:= `i0`(v5) @signature `Lvc/f;.i0:()Luc/h;` @kind virtual;
  #L4a9106.  v5:= temp @kind object;
  #L4a9108.  call temp:= `t0`(v5) @signature `Luc/h;.t0:()J` @kind virtual;
  #L4a910e.  v0:= temp @kind wide;
  #L4a9110.  call temp:= `i0`(v6) @signature `Lvc/f;.i0:()Luc/h;` @kind virtual;
  #L4a9116.  v5:= temp @kind object;
  #L4a9118.  call temp:= `t0`(v5) @signature `Luc/h;.t0:()J` @kind virtual;
  #L4a911e.  v5:= temp @kind wide;
  #L4a9120.  call temp:= `b`(v0, v5) @signature `Lxc/d;.b:(JJ)I` @kind static;
  #L4a9126.  v0:= temp;
  #L4a9128.  return v0;
}
procedure `int` `compare`(`vc.f$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lvc/f$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4a90c0.  v1:= (`vc.f`) v1 @kind object;
  #L4a90c4.  v2:= (`vc.f`) v2 @kind object;
  #L4a90c8.  call temp:= `a`(v0, v1, v2) @signature `Lvc/f$a;.a:(Lvc/f;Lvc/f;)I` @kind virtual;
  #L4a90ce.  v1:= temp;
  #L4a90d0.  return v1;
}
