record `vc.w` @kind class @AccessFlag PUBLIC_FINAL extends `vc.a` @kind class {
  `uc.f` `vc.w.o` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`vc.w` v1 @kind this, `uc.f` v2 @kind object) @signature `Lvc/w;.<init>:(Luc/f;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4b0edc.  call `<init>`(v1) @signature `Lvc/a;.<init>:()V` @kind direct;
  #L4b0ee2.  v0:= "date" @kind object;
  #L4b0ee6.  call temp:= `i`(v2, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4b0eec.  v1.`vc.w.o` @type ^`uc.f` := v2 @kind object;
  #L4b0ef0.  return @kind void;
}
procedure `long` `p0`(`vc.w` v4 @kind this) @signature `Lvc/w;.p0:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4b0a54.  call temp:= `q0`(v4) @signature `Lvc/w;.q0:()I` @kind direct;
  #L4b0a5a.  v0:= temp;
  #L4b0a5c.  v0:= (`long`) v0 @kind i2l;
  #L4b0a5e.  v2:= 12L;
  #L4b0a62.  v0:= v0 * v2 @kind long;
  #L4b0a66.  v2:= v4.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b0a6a.  call temp:= `t0`(v2) @signature `Luc/f;.t0:()I` @kind virtual;
  #L4b0a70.  v2:= temp;
  #L4b0a72.  v2:= (`long`) v2 @kind i2l;
  #L4b0a74.  v0:= v0 + v2 @kind long;
  #L4b0a76.  v2:= 1L;
  #L4b0a7a.  v0:= v0 - v2 @kind long;
  #L4b0a7c.  return v0 @kind wide;
}
procedure `int` `q0`(`vc.w` v1 @kind this) @signature `Lvc/w;.q0:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4b0938.  v0:= v1.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b093c.  call temp:= `v0`(v0) @signature `Luc/f;.v0:()I` @kind virtual;
  #L4b0942.  v0:= temp;
  #L4b0944.  v0:= v0 + 543;
  #L4b0948.  return v0;
}
procedure `java.lang.Object` `writeReplace`(`vc.w` v2 @kind this) @signature `Lvc/w;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b0994.  v0:= new `vc.u`;
  #L4b0998.  v1:= 7I;
  #L4b099a.  call `<init>`(v0, v1, v2) @signature `Lvc/u;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L4b09a0.  return v0 @kind object;
}
procedure `vc.b` `x0`(`java.io.DataInput` v3 @kind object) @signature `Lvc/w;.x0:(Ljava/io/DataInput;)Lvc/b;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4b0b74.  call temp:= `readInt`(v3) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L4b0b7a.  v0:= temp;
  #L4b0b7c.  call temp:= `readByte`(v3) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L4b0b82.  v1:= temp;
  #L4b0b84.  call temp:= `readByte`(v3) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L4b0b8a.  v3:= temp;
  #L4b0b8c.  v2:= `@@vc.v.q` @type ^`vc.v` @kind object;
  #L4b0b90.  call temp:= `K`(v2, v0, v1, v3) @signature `Lvc/v;.K:(III)Lvc/w;` @kind virtual;
  #L4b0b96.  v3:= temp @kind object;
  #L4b0b98.  return v3 @kind object;
}
procedure `vc.w` `y0`(`vc.w` v1 @kind this, `uc.f` v2 @kind object) @signature `Lvc/w;.y0:(Luc/f;)Lvc/w;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4b0d28.  v0:= v1.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b0d2c.  call temp:= `equals`(v2, v0) @signature `Luc/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b0d32.  v0:= temp;
  #L4b0d34.  if v0 == 0 then goto L4b0d3c;
  #L4b0d38.  v0:= v1 @kind object;
  #L4b0d3a.  goto L4b0d46;
  #L4b0d3c.  v0:= new `vc.w`;
  #L4b0d40.  call `<init>`(v0, v2) @signature `Lvc/w;.<init>:(Luc/f;)V` @kind direct;
  #L4b0d46.  return v0 @kind object;
}
procedure `vc.w` `A0`(`vc.w` v7 @kind this, `yc.i` v8 @kind object, `long` v9 ) @signature `Lvc/w;.A0:(Lyc/i;J)Lvc/w;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4b0d78.  v0:= instanceof @variable v8 @type ^`yc.a` @kind boolean;
  #L4b0d7c.  if v0 == 0 then goto L4b0e9e;
  #L4b0d80.  v0:= v8 @kind object;
  #L4b0d82.  v0:= (`yc.a`) v0 @kind object;
  #L4b0d86.  call temp:= `B`(v7, v0) @signature `Lvc/w;.B:(Lyc/i;)J` @kind virtual;
  #L4b0d8c.  v1:= temp @kind wide;
  #L4b0d8e.  v3:= lcmp(v1, v9);
  #L4b0d92.  if v3 != 0 then goto L4b0d98;
  #L4b0d96.  return v7 @kind object;
  #L4b0d98.  v1:= `@@vc.w$a.a` @type ^`int`[] @kind object;
  #L4b0d9c.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4b0da2.  v2:= temp;
  #L4b0da4.  v2:= v1[v2];
  #L4b0da8.  v3:= 7I;
  #L4b0daa.  v4:= 6I;
  #L4b0dac.  v5:= 4I;
  #L4b0dae.  if v2 == v5 then goto L4b0dec;
  #L4b0db2.  v6:= 5I;
  #L4b0db4.  if v2 == v6 then goto L4b0dc2;
  #L4b0db8.  if v2 == v4 then goto L4b0dec;
  #L4b0dbc.  if v2 == v3 then goto L4b0dec;
  #L4b0dc0.  goto L4b0e1e;
  #L4b0dc2.  call temp:= `n0`(v7) @signature `Lvc/w;.n0:()Lvc/v;` @kind virtual;
  #L4b0dc8.  v8:= temp @kind object;
  #L4b0dca.  call temp:= `S`(v8, v0) @signature `Lvc/v;.S:(Lyc/a;)Lyc/n;` @kind virtual;
  #L4b0dd0.  v8:= temp @kind object;
  #L4b0dd2.  call temp:= `b`(v8, v9, v0) @signature `Lyc/n;.b:(JLyc/i;)J` @kind virtual;
  #L4b0dd8.  call temp:= `p0`(v7) @signature `Lvc/w;.p0:()J` @kind direct;
  #L4b0dde.  v0:= temp @kind wide;
  #L4b0de0.  v9:= v9 - v0 @kind long;
  #L4b0de2.  call temp:= `v0`(v7, v9) @signature `Lvc/w;.v0:(J)Lvc/w;` @kind virtual;
  #L4b0de8.  v8:= temp @kind object;
  #L4b0dea.  return v8 @kind object;
  #L4b0dec.  call temp:= `n0`(v7) @signature `Lvc/w;.n0:()Lvc/v;` @kind virtual;
  #L4b0df2.  v2:= temp @kind object;
  #L4b0df4.  call temp:= `S`(v2, v0) @signature `Lvc/v;.S:(Lyc/a;)Lyc/n;` @kind virtual;
  #L4b0dfa.  v2:= temp @kind object;
  #L4b0dfc.  call temp:= `a`(v2, v9, v0) @signature `Lyc/n;.a:(JLyc/i;)I` @kind virtual;
  #L4b0e02.  v2:= temp;
  #L4b0e04.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4b0e0a.  v0:= temp;
  #L4b0e0c.  v0:= v1[v0];
  #L4b0e10.  v1:= 1I;
  #L4b0e12.  if v0 == v5 then goto L4b0e72;
  #L4b0e16.  if v0 == v4 then goto L4b0e58;
  #L4b0e1a.  if v0 == v3 then goto L4b0e34;
  #L4b0e1e.  v0:= v7.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b0e22.  call temp:= `P0`(v0, v8, v9) @signature `Luc/f;.P0:(Lyc/i;J)Luc/f;` @kind virtual;
  #L4b0e28.  v8:= temp @kind object;
  #L4b0e2a.  call temp:= `y0`(v7, v8) @signature `Lvc/w;.y0:(Luc/f;)Lvc/w;` @kind direct;
  #L4b0e30.  v8:= temp @kind object;
  #L4b0e32.  return v8 @kind object;
  #L4b0e34.  v8:= v7.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b0e38.  call temp:= `q0`(v7) @signature `Lvc/w;.q0:()I` @kind direct;
  #L4b0e3e.  v9:= temp;
  #L4b0e40.  v1:= v1 - v9 @kind int;
  #L4b0e42.  v1:= v1 + -543;
  #L4b0e46.  call temp:= `T0`(v8, v1) @signature `Luc/f;.T0:(I)Luc/f;` @kind virtual;
  #L4b0e4c.  v8:= temp @kind object;
  #L4b0e4e.  call temp:= `y0`(v7, v8) @signature `Lvc/w;.y0:(Luc/f;)Lvc/w;` @kind direct;
  #L4b0e54.  v8:= temp @kind object;
  #L4b0e56.  return v8 @kind object;
  #L4b0e58.  v8:= v7.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b0e5c.  v2:= v2 + -543;
  #L4b0e60.  call temp:= `T0`(v8, v2) @signature `Luc/f;.T0:(I)Luc/f;` @kind virtual;
  #L4b0e66.  v8:= temp @kind object;
  #L4b0e68.  call temp:= `y0`(v7, v8) @signature `Lvc/w;.y0:(Luc/f;)Lvc/w;` @kind direct;
  #L4b0e6e.  v8:= temp @kind object;
  #L4b0e70.  return v8 @kind object;
  #L4b0e72.  v8:= v7.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b0e76.  call temp:= `q0`(v7) @signature `Lvc/w;.q0:()I` @kind direct;
  #L4b0e7c.  v9:= temp;
  #L4b0e7e.  if v9 < v1 then goto L4b0e84;
  #L4b0e82.  goto L4b0e88;
  #L4b0e84.  v2:= v2 - 1;
  #L4b0e88.  v2:= v2 + -543;
  #L4b0e8c.  call temp:= `T0`(v8, v2) @signature `Luc/f;.T0:(I)Luc/f;` @kind virtual;
  #L4b0e92.  v8:= temp @kind object;
  #L4b0e94.  call temp:= `y0`(v7, v8) @signature `Lvc/w;.y0:(Luc/f;)Lvc/w;` @kind direct;
  #L4b0e9a.  v8:= temp @kind object;
  #L4b0e9c.  return v8 @kind object;
  #L4b0e9e.  call temp:= `e`(v8, v7, v9) @signature `Lyc/i;.e:(Lyc/d;J)Lyc/d;` @kind interface;
  #L4b0ea4.  v8:= temp @kind object;
  #L4b0ea6.  v8:= (`vc.w`) v8 @kind object;
  #L4b0eaa.  return v8 @kind object;
}
procedure `long` `B`(`vc.w` v3 @kind this, `yc.i` v4 @kind object) @signature `Lvc/w;.B:(Lyc/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b09b4.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4b09b8.  if v0 == 0 then goto L4b0a3a;
  #L4b09bc.  v0:= `@@vc.w$a.a` @type ^`int`[] @kind object;
  #L4b09c0.  v1:= v4 @kind object;
  #L4b09c2.  v1:= (`yc.a`) v1 @kind object;
  #L4b09c6.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4b09cc.  v1:= temp;
  #L4b09ce.  v0:= v0[v1];
  #L4b09d2.  v1:= 4I;
  #L4b09d4.  v2:= 1I;
  #L4b09d6.  if v0 == v1 then goto L4b0a24;
  #L4b09da.  v1:= 5I;
  #L4b09dc.  if v0 == v1 then goto L4b0a1a;
  #L4b09e0.  v1:= 6I;
  #L4b09e2.  if v0 == v1 then goto L4b0a0e;
  #L4b09e6.  v1:= 7I;
  #L4b09e8.  if v0 == v1 then goto L4b09fa;
  #L4b09ec.  v0:= v3.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b09f0.  call temp:= `B`(v0, v4) @signature `Luc/f;.B:(Lyc/i;)J` @kind virtual;
  #L4b09f6.  v0:= temp @kind wide;
  #L4b09f8.  return v0 @kind wide;
  #L4b09fa.  call temp:= `q0`(v3) @signature `Lvc/w;.q0:()I` @kind direct;
  #L4b0a00.  v4:= temp;
  #L4b0a02.  if v4 < v2 then goto L4b0a08;
  #L4b0a06.  goto L4b0a0a;
  #L4b0a08.  v2:= 0I;
  #L4b0a0a.  v0:= (`long`) v2 @kind i2l;
  #L4b0a0c.  return v0 @kind wide;
  #L4b0a0e.  call temp:= `q0`(v3) @signature `Lvc/w;.q0:()I` @kind direct;
  #L4b0a14.  v4:= temp;
  #L4b0a16.  v0:= (`long`) v4 @kind i2l;
  #L4b0a18.  return v0 @kind wide;
  #L4b0a1a.  call temp:= `p0`(v3) @signature `Lvc/w;.p0:()J` @kind direct;
  #L4b0a20.  v0:= temp @kind wide;
  #L4b0a22.  return v0 @kind wide;
  #L4b0a24.  call temp:= `q0`(v3) @signature `Lvc/w;.q0:()I` @kind direct;
  #L4b0a2a.  v4:= temp;
  #L4b0a2c.  if v4 < v2 then goto L4b0a32;
  #L4b0a30.  goto L4b0a36;
  #L4b0a32.  v4:= v4 - 1;
  #L4b0a36.  v0:= (`long`) v4 @kind i2l;
  #L4b0a38.  return v0 @kind wide;
  #L4b0a3a.  call temp:= `o`(v4, v3) @signature `Lyc/i;.o:(Lyc/e;)J` @kind interface;
  #L4b0a40.  v0:= temp @kind wide;
  #L4b0a42.  return v0 @kind wide;
}
procedure `void` `B0`(`vc.w` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Lvc/w;.B0:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L4b0f04.  v0:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L4b0f08.  call temp:= `F`(v1, v0) @signature `Lxc/c;.F:(Lyc/i;)I` @kind virtual;
  #L4b0f0e.  v0:= temp;
  #L4b0f10.  call `writeInt`(v2, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L4b0f16.  v0:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L4b0f1a.  call temp:= `F`(v1, v0) @signature `Lxc/c;.F:(Lyc/i;)I` @kind virtual;
  #L4b0f20.  v0:= temp;
  #L4b0f22.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L4b0f28.  v0:= `@@yc.a.K` @type ^`yc.a` @kind object;
  #L4b0f2c.  call temp:= `F`(v1, v0) @signature `Lxc/c;.F:(Lyc/i;)I` @kind virtual;
  #L4b0f32.  v0:= temp;
  #L4b0f34.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L4b0f3a.  return @kind void;
}
procedure `yc.d` `D`(`vc.w` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/w;.D:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b0f68.  call temp:= `s0`(v0, v1, v3) @signature `Lvc/w;.s0:(JLyc/l;)Lvc/w;` @kind virtual;
  #L4b0f6e.  v1:= temp @kind object;
  #L4b0f70.  return v1 @kind object;
}
procedure `yc.d` `L`(`vc.w` v0 @kind this, `yc.f` v1 @kind object) @signature `Lvc/w;.L:(Lyc/f;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b0f84.  call temp:= `z0`(v0, v1) @signature `Lvc/w;.z0:(Lyc/f;)Lvc/w;` @kind virtual;
  #L4b0f8a.  v1:= temp @kind object;
  #L4b0f8c.  return v1 @kind object;
}
procedure `yc.d` `P`(`vc.w` v0 @kind this, `yc.i` v1 @kind object, `long` v2 ) @signature `Lvc/w;.P:(Lyc/i;J)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b0fa0.  call temp:= `A0`(v0, v1, v2) @signature `Lvc/w;.A0:(Lyc/i;J)Lvc/w;` @kind virtual;
  #L4b0fa6.  v1:= temp @kind object;
  #L4b0fa8.  return v1 @kind object;
}
procedure `vc.c` `V`(`vc.w` v0 @kind this, `uc.h` v1 @kind object) @signature `Lvc/w;.V:(Luc/h;)Lvc/c;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4b0be4.  call temp:= `V`(v0, v1) @signature `Lvc/a;.V:(Luc/h;)Lvc/c;` @kind super;
  #L4b0bea.  v1:= temp @kind object;
  #L4b0bec.  return v1 @kind object;
}
procedure `vc.h` `a0`(`vc.w` v1 @kind this) @signature `Lvc/w;.a0:()Lvc/h;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4b0c00.  call temp:= `n0`(v1) @signature `Lvc/w;.n0:()Lvc/v;` @kind virtual;
  #L4b0c06.  v0:= temp @kind object;
  #L4b0c08.  return v0 @kind object;
}
procedure `vc.i` `b0`(`vc.w` v1 @kind this) @signature `Lvc/w;.b0:()Lvc/i;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4b0c1c.  call temp:= `o0`(v1) @signature `Lvc/w;.o0:()Lvc/x;` @kind virtual;
  #L4b0c22.  v0:= temp @kind object;
  #L4b0c24.  return v0 @kind object;
}
procedure `vc.b` `d0`(`vc.w` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/w;.d0:(JLyc/l;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b0b20.  call temp:= `r0`(v0, v1, v3) @signature `Lvc/w;.r0:(JLyc/l;)Lvc/w;` @kind virtual;
  #L4b0b26.  v1:= temp @kind object;
  #L4b0b28.  return v1 @kind object;
}
procedure `vc.b` `e0`(`vc.w` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/w;.e0:(JLyc/l;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b0b3c.  call temp:= `s0`(v0, v1, v3) @signature `Lvc/w;.s0:(JLyc/l;)Lvc/w;` @kind virtual;
  #L4b0b42.  v1:= temp @kind object;
  #L4b0b44.  return v1 @kind object;
}
procedure `boolean` `equals`(`vc.w` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lvc/w;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b08fc.  if v1 != v2 then goto L4b0904;
  #L4b0900.  v2:= 1I;
  #L4b0902.  return v2;
  #L4b0904.  v0:= instanceof @variable v2 @type ^`vc.w` @kind boolean;
  #L4b0908.  if v0 == 0 then goto L4b0922;
  #L4b090c.  v2:= (`vc.w`) v2 @kind object;
  #L4b0910.  v0:= v1.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b0914.  v2:= v2.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b0918.  call temp:= `equals`(v0, v2) @signature `Luc/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4b091e.  v2:= temp;
  #L4b0920.  return v2;
  #L4b0922.  v2:= 0I;
  #L4b0924.  return v2;
}
procedure `vc.b` `f0`(`vc.w` v0 @kind this, `yc.h` v1 @kind object) @signature `Lvc/w;.f0:(Lyc/h;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b0b58.  call temp:= `t0`(v0, v1) @signature `Lvc/w;.t0:(Lyc/h;)Lvc/w;` @kind virtual;
  #L4b0b5e.  v1:= temp @kind object;
  #L4b0b60.  return v1 @kind object;
}
procedure `long` `g0`(`vc.w` v2 @kind this) @signature `Lvc/w;.g0:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b0a90.  v0:= v2.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b0a94.  call temp:= `g0`(v0) @signature `Luc/f;.g0:()J` @kind virtual;
  #L4b0a9a.  v0:= temp @kind wide;
  #L4b0a9c.  return v0 @kind wide;
}
procedure `vc.b` `h0`(`vc.w` v0 @kind this, `yc.f` v1 @kind object) @signature `Lvc/w;.h0:(Lyc/f;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b0bac.  call temp:= `z0`(v0, v1) @signature `Lvc/w;.z0:(Lyc/f;)Lvc/w;` @kind virtual;
  #L4b0bb2.  v1:= temp @kind object;
  #L4b0bb4.  return v1 @kind object;
}
procedure `int` `hashCode`(`vc.w` v2 @kind this) @signature `Lvc/w;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4b095c.  call temp:= `n0`(v2) @signature `Lvc/w;.n0:()Lvc/v;` @kind virtual;
  #L4b0962.  v0:= temp @kind object;
  #L4b0964.  call temp:= `r`(v0) @signature `Lvc/v;.r:()Ljava/lang/String;` @kind virtual;
  #L4b096a.  v0:= temp @kind object;
  #L4b096c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4b0972.  v0:= temp;
  #L4b0974.  v1:= v2.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b0978.  call temp:= `hashCode`(v1) @signature `Luc/f;.hashCode:()I` @kind virtual;
  #L4b097e.  v1:= temp;
  #L4b0980.  v0:= v0 ^~ v1 @kind int;
  #L4b0982.  return v0;
}
procedure `vc.b` `i0`(`vc.w` v0 @kind this, `yc.i` v1 @kind object, `long` v2 ) @signature `Lvc/w;.i0:(Lyc/i;J)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b0bc8.  call temp:= `A0`(v0, v1, v2) @signature `Lvc/w;.A0:(Lyc/i;J)Lvc/w;` @kind virtual;
  #L4b0bce.  v1:= temp @kind object;
  #L4b0bd0.  return v1 @kind object;
}
procedure `vc.a` `j0`(`vc.w` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/w;.j0:(JLyc/l;)Lvc/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b0ab0.  call temp:= `s0`(v0, v1, v3) @signature `Lvc/w;.s0:(JLyc/l;)Lvc/w;` @kind virtual;
  #L4b0ab6.  v1:= temp @kind object;
  #L4b0ab8.  return v1 @kind object;
}
procedure `vc.a` `k0`(`vc.w` v0 @kind this, `long` v1 ) @signature `Lvc/w;.k0:(J)Lvc/a;` @AccessFlag SYNTHETIC {
    temp;

  #L4b0acc.  call temp:= `u0`(v0, v1) @signature `Lvc/w;.u0:(J)Lvc/w;` @kind virtual;
  #L4b0ad2.  v1:= temp @kind object;
  #L4b0ad4.  return v1 @kind object;
}
procedure `vc.a` `l0`(`vc.w` v0 @kind this, `long` v1 ) @signature `Lvc/w;.l0:(J)Lvc/a;` @AccessFlag SYNTHETIC {
    temp;

  #L4b0ae8.  call temp:= `v0`(v0, v1) @signature `Lvc/w;.v0:(J)Lvc/w;` @kind virtual;
  #L4b0aee.  v1:= temp @kind object;
  #L4b0af0.  return v1 @kind object;
}
procedure `vc.a` `m0`(`vc.w` v0 @kind this, `long` v1 ) @signature `Lvc/w;.m0:(J)Lvc/a;` @AccessFlag SYNTHETIC {
    temp;

  #L4b0b04.  call temp:= `w0`(v0, v1) @signature `Lvc/w;.w0:(J)Lvc/w;` @kind virtual;
  #L4b0b0a.  v1:= temp @kind object;
  #L4b0b0c.  return v1 @kind object;
}
procedure `vc.v` `n0`(`vc.w` v1 @kind this) @signature `Lvc/w;.n0:()Lvc/v;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b0c38.  v0:= `@@vc.v.q` @type ^`vc.v` @kind object;
  #L4b0c3c.  return v0 @kind object;
}
procedure `vc.x` `o0`(`vc.w` v1 @kind this) @signature `Lvc/w;.o0:()Lvc/x;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b0ebc.  call temp:= `b0`(v1) @signature `Lvc/b;.b0:()Lvc/i;` @kind super;
  #L4b0ec2.  v0:= temp @kind object;
  #L4b0ec4.  v0:= (`vc.x`) v0 @kind object;
  #L4b0ec8.  return v0 @kind object;
}
procedure `yc.d` `r`(`vc.w` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/w;.r:(JLyc/l;)Lyc/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4b0f4c.  call temp:= `r0`(v0, v1, v3) @signature `Lvc/w;.r0:(JLyc/l;)Lvc/w;` @kind virtual;
  #L4b0f52.  v1:= temp @kind object;
  #L4b0f54.  return v1 @kind object;
}
procedure `vc.w` `r0`(`vc.w` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/w;.r0:(JLyc/l;)Lvc/w;` @AccessFlag PUBLIC {
    temp;

  #L4b0c50.  call temp:= `d0`(v0, v1, v3) @signature `Lvc/b;.d0:(JLyc/l;)Lvc/b;` @kind super;
  #L4b0c56.  v1:= temp @kind object;
  #L4b0c58.  v1:= (`vc.w`) v1 @kind object;
  #L4b0c5c.  return v1 @kind object;
}
procedure `vc.w` `s0`(`vc.w` v0 @kind this, `long` v1 , `yc.l` v3 @kind object) @signature `Lvc/w;.s0:(JLyc/l;)Lvc/w;` @AccessFlag PUBLIC {
    temp;

  #L4b0c70.  call temp:= `j0`(v0, v1, v3) @signature `Lvc/a;.j0:(JLyc/l;)Lvc/a;` @kind super;
  #L4b0c76.  v1:= temp @kind object;
  #L4b0c78.  v1:= (`vc.w`) v1 @kind object;
  #L4b0c7c.  return v1 @kind object;
}
procedure `yc.n` `t`(`vc.w` v7 @kind this, `yc.i` v8 @kind object) @signature `Lvc/w;.t:(Lyc/i;)Lyc/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4b0fbc.  v0:= instanceof @variable v8 @type ^`yc.a` @kind boolean;
  #L4b0fc0.  if v0 == 0 then goto L4b1090;
  #L4b0fc4.  call temp:= `d`(v7, v8) @signature `Lvc/b;.d:(Lyc/i;)Z` @kind virtual;
  #L4b0fca.  v0:= temp;
  #L4b0fcc.  if v0 == 0 then goto L4b1062;
  #L4b0fd0.  v0:= v8 @kind object;
  #L4b0fd2.  v0:= (`yc.a`) v0 @kind object;
  #L4b0fd6.  v1:= `@@vc.w$a.a` @type ^`int`[] @kind object;
  #L4b0fda.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4b0fe0.  v2:= temp;
  #L4b0fe2.  v1:= v1[v2];
  #L4b0fe6.  v2:= 1I;
  #L4b0fe8.  if v1 == v2 then goto L4b1054;
  #L4b0fec.  v2:= 2I;
  #L4b0fee.  if v1 == v2 then goto L4b1054;
  #L4b0ff2.  v2:= 3I;
  #L4b0ff4.  if v1 == v2 then goto L4b1054;
  #L4b0ff8.  v8:= 4I;
  #L4b0ffa.  if v1 == v8 then goto L4b1010;
  #L4b0ffe.  call temp:= `n0`(v7) @signature `Lvc/w;.n0:()Lvc/v;` @kind virtual;
  #L4b1004.  v8:= temp @kind object;
  #L4b1006.  call temp:= `S`(v8, v0) @signature `Lvc/v;.S:(Lyc/a;)Lyc/n;` @kind virtual;
  #L4b100c.  v8:= temp @kind object;
  #L4b100e.  return v8 @kind object;
  #L4b1010.  v8:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L4b1014.  call temp:= `k`(v8) @signature `Lyc/a;.k:()Lyc/n;` @kind virtual;
  #L4b101a.  v8:= temp @kind object;
  #L4b101c.  call temp:= `q0`(v7) @signature `Lvc/w;.q0:()I` @kind direct;
  #L4b1022.  v0:= temp;
  #L4b1024.  v1:= 1L;
  #L4b1028.  v3:= 543L;
  #L4b102c.  if v0 > 0 then goto L4b1040;
  #L4b1030.  call temp:= `d`(v8) @signature `Lyc/n;.d:()J` @kind virtual;
  #L4b1036.  v5:= temp @kind wide;
  #L4b1038.  v5:= v5 + v3 @kind long;
  #L4b103a.  v3:= -v5 @kind long;
  #L4b103c.  v3:= v3 + v1 @kind long;
  #L4b103e.  goto L4b104a;
  #L4b1040.  call temp:= `c`(v8) @signature `Lyc/n;.c:()J` @kind virtual;
  #L4b1046.  v5:= temp @kind wide;
  #L4b1048.  v3:= v3 + v5 @kind long;
  #L4b104a.  call temp:= `i`(v1, v3) @signature `Lyc/n;.i:(JJ)Lyc/n;` @kind static;
  #L4b1050.  v8:= temp @kind object;
  #L4b1052.  return v8 @kind object;
  #L4b1054.  v0:= v7.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b1058.  call temp:= `t`(v0, v8) @signature `Luc/f;.t:(Lyc/i;)Lyc/n;` @kind virtual;
  #L4b105e.  v8:= temp @kind object;
  #L4b1060.  return v8 @kind object;
  #L4b1062.  v0:= new `yc.m`;
  #L4b1066.  v1:= new `java.lang.StringBuilder`;
  #L4b106a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4b1070.  v2:= "Unsupported field: " @kind object;
  #L4b1074.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4b107a.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4b1080.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4b1086.  v8:= temp @kind object;
  #L4b1088.  call `<init>`(v0, v8) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b108e.  throw v0;
  #L4b1090.  call temp:= `h`(v8, v7) @signature `Lyc/i;.h:(Lyc/e;)Lyc/n;` @kind interface;
  #L4b1096.  v8:= temp @kind object;
  #L4b1098.  return v8 @kind object;
}
procedure `vc.w` `t0`(`vc.w` v0 @kind this, `yc.h` v1 @kind object) @signature `Lvc/w;.t0:(Lyc/h;)Lvc/w;` @AccessFlag PUBLIC {
    temp;

  #L4b0c90.  call temp:= `f0`(v0, v1) @signature `Lvc/b;.f0:(Lyc/h;)Lvc/b;` @kind super;
  #L4b0c96.  v1:= temp @kind object;
  #L4b0c98.  v1:= (`vc.w`) v1 @kind object;
  #L4b0c9c.  return v1 @kind object;
}
procedure `vc.w` `u0`(`vc.w` v1 @kind this, `long` v2 ) @signature `Lvc/w;.u0:(J)Lvc/w;` @AccessFlag  {
    temp;
    v0;

  #L4b0cb0.  v0:= v1.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b0cb4.  call temp:= `I0`(v0, v2) @signature `Luc/f;.I0:(J)Luc/f;` @kind virtual;
  #L4b0cba.  v2:= temp @kind object;
  #L4b0cbc.  call temp:= `y0`(v1, v2) @signature `Lvc/w;.y0:(Luc/f;)Lvc/w;` @kind direct;
  #L4b0cc2.  v2:= temp @kind object;
  #L4b0cc4.  return v2 @kind object;
}
procedure `vc.w` `v0`(`vc.w` v1 @kind this, `long` v2 ) @signature `Lvc/w;.v0:(J)Lvc/w;` @AccessFlag  {
    temp;
    v0;

  #L4b0cd8.  v0:= v1.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b0cdc.  call temp:= `J0`(v0, v2) @signature `Luc/f;.J0:(J)Luc/f;` @kind virtual;
  #L4b0ce2.  v2:= temp @kind object;
  #L4b0ce4.  call temp:= `y0`(v1, v2) @signature `Lvc/w;.y0:(Luc/f;)Lvc/w;` @kind direct;
  #L4b0cea.  v2:= temp @kind object;
  #L4b0cec.  return v2 @kind object;
}
procedure `vc.w` `w0`(`vc.w` v1 @kind this, `long` v2 ) @signature `Lvc/w;.w0:(J)Lvc/w;` @AccessFlag  {
    temp;
    v0;

  #L4b0d00.  v0:= v1.`vc.w.o` @type ^`uc.f` @kind object;
  #L4b0d04.  call temp:= `L0`(v0, v2) @signature `Luc/f;.L0:(J)Luc/f;` @kind virtual;
  #L4b0d0a.  v2:= temp @kind object;
  #L4b0d0c.  call temp:= `y0`(v1, v2) @signature `Lvc/w;.y0:(Luc/f;)Lvc/w;` @kind direct;
  #L4b0d12.  v2:= temp @kind object;
  #L4b0d14.  return v2 @kind object;
}
procedure `vc.w` `z0`(`vc.w` v0 @kind this, `yc.f` v1 @kind object) @signature `Lvc/w;.z0:(Lyc/f;)Lvc/w;` @AccessFlag PUBLIC {
    temp;

  #L4b0d58.  call temp:= `h0`(v0, v1) @signature `Lvc/b;.h0:(Lyc/f;)Lvc/b;` @kind super;
  #L4b0d5e.  v1:= temp @kind object;
  #L4b0d60.  v1:= (`vc.w`) v1 @kind object;
  #L4b0d64.  return v1 @kind object;
}
