record `vc.x` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `vc.i` @kind interface {
}
global `vc.x` `@@vc.x.o` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `vc.x` `@@vc.x.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `vc.x`[] `@@vc.x.q` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lvc/x;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4b12e8.  v0:= new `vc.x`;
  #L4b12ec.  v1:= "BEFORE_BE" @kind object;
  #L4b12f0.  v2:= 0I;
  #L4b12f2.  call `<init>`(v0, v1, v2) @signature `Lvc/x;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4b12f8.  `@@vc.x.o` @type ^`vc.x` := v0 @kind object;
  #L4b12fc.  v1:= new `vc.x`;
  #L4b1300.  v3:= "BE" @kind object;
  #L4b1304.  v4:= 1I;
  #L4b1306.  call `<init>`(v1, v3, v4) @signature `Lvc/x;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4b130c.  `@@vc.x.p` @type ^`vc.x` := v1 @kind object;
  #L4b1310.  v3:= 2I;
  #L4b1312.  v3:= new `vc.x`[v3];
  #L4b1316.  v3[v2]:= v0 @kind object;
  #L4b131a.  v3[v4]:= v1 @kind object;
  #L4b131e.  `@@vc.x.q` @type ^`vc.x`[] := v3 @kind object;
  #L4b1322.  return @kind void;
}
procedure `void` `<init>`(`vc.x` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lvc/x;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4b1334.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4b133a.  return @kind void;
}
procedure `vc.x` `c`(`int` v1 ) @signature `Lvc/x;.c:(I)Lvc/x;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b1244.  if v1 == 0 then goto L4b1264;
  #L4b1248.  v0:= 1I;
  #L4b124a.  if v1 != v0 then goto L4b1254;
  #L4b124e.  v1:= `@@vc.x.p` @type ^`vc.x` @kind object;
  #L4b1252.  return v1 @kind object;
  #L4b1254.  v1:= new `uc.b`;
  #L4b1258.  v0:= "Era is not valid for ThaiBuddhistEra" @kind object;
  #L4b125c.  call `<init>`(v1, v0) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b1262.  throw v1;
  #L4b1264.  v1:= `@@vc.x.o` @type ^`vc.x` @kind object;
  #L4b1268.  return v1 @kind object;
}
procedure `vc.x` `e`(`java.io.DataInput` v0 @kind object) @signature `Lvc/x;.e:(Ljava/io/DataInput;)Lvc/x;` @AccessFlag STATIC {
    temp;

  #L4b127c.  call temp:= `readByte`(v0) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L4b1282.  v0:= temp;
  #L4b1284.  call temp:= `c`(v0) @signature `Lvc/x;.c:(I)Lvc/x;` @kind static;
  #L4b128a.  v0:= temp @kind object;
  #L4b128c.  return v0 @kind object;
}
procedure `vc.x` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lvc/x;.valueOf:(Ljava/lang/String;)Lvc/x;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b12a0.  v0:= constclass @type ^`vc.x` @kind object;
  #L4b12a4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L4b12aa.  v1:= temp @kind object;
  #L4b12ac.  v1:= (`vc.x`) v1 @kind object;
  #L4b12b0.  return v1 @kind object;
}
procedure `vc.x`[] `values`() @signature `Lvc/x;.values:()[Lvc/x;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4b12c4.  v0:= `@@vc.x.q` @type ^`vc.x`[] @kind object;
  #L4b12c8.  call temp:= `clone`(v0) @signature `[Lvc/x;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4b12ce.  v0:= temp @kind object;
  #L4b12d0.  v0:= (`vc.x`[]) v0 @kind object;
  #L4b12d4.  return v0 @kind object;
}
procedure `java.lang.Object` `writeReplace`(`vc.x` v2 @kind this) @signature `Lvc/x;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4b11c0.  v0:= new `vc.u`;
  #L4b11c4.  v1:= 8I;
  #L4b11c8.  call `<init>`(v0, v1, v2) @signature `Lvc/u;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L4b11ce.  return v0 @kind object;
}
procedure `long` `B`(`vc.x` v3 @kind this, `yc.i` v4 @kind object) @signature `Lvc/x;.B:(Lyc/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b11e0.  v0:= `@@yc.a.T` @type ^`yc.a` @kind object;
  #L4b11e4.  if v4 != v0 then goto L4b11f4;
  #L4b11e8.  call temp:= `getValue`(v3) @signature `Lvc/x;.getValue:()I` @kind virtual;
  #L4b11ee.  v4:= temp;
  #L4b11f0.  v0:= (`long`) v4 @kind i2l;
  #L4b11f2.  return v0 @kind wide;
  #L4b11f4.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4b11f8.  if v0 != 0 then goto L4b1206;
  #L4b11fc.  call temp:= `o`(v4, v3) @signature `Lyc/i;.o:(Lyc/e;)J` @kind interface;
  #L4b1202.  v0:= temp @kind wide;
  #L4b1204.  return v0 @kind wide;
  #L4b1206.  v0:= new `yc.m`;
  #L4b120a.  v1:= new `java.lang.StringBuilder`;
  #L4b120e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4b1214.  v2:= "Unsupported field: " @kind object;
  #L4b1218.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4b121e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4b1224.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4b122a.  v4:= temp @kind object;
  #L4b122c.  call `<init>`(v0, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b1232.  throw v0;
}
procedure `int` `F`(`vc.x` v3 @kind this, `yc.i` v4 @kind object) @signature `Lvc/x;.F:(Lyc/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b10ec.  v0:= `@@yc.a.T` @type ^`yc.a` @kind object;
  #L4b10f0.  if v4 != v0 then goto L4b10fe;
  #L4b10f4.  call temp:= `getValue`(v3) @signature `Lvc/x;.getValue:()I` @kind virtual;
  #L4b10fa.  v4:= temp;
  #L4b10fc.  return v4;
  #L4b10fe.  call temp:= `t`(v3, v4) @signature `Lvc/x;.t:(Lyc/i;)Lyc/n;` @kind virtual;
  #L4b1104.  v0:= temp @kind object;
  #L4b1106.  call temp:= `B`(v3, v4) @signature `Lvc/x;.B:(Lyc/i;)J` @kind virtual;
  #L4b110c.  v1:= temp @kind wide;
  #L4b110e.  call temp:= `a`(v0, v1, v4) @signature `Lyc/n;.a:(JLyc/i;)I` @kind virtual;
  #L4b1114.  v4:= temp;
  #L4b1116.  return v4;
}
procedure `yc.d` `I`(`vc.x` v3 @kind this, `yc.d` v4 @kind object) @signature `Lvc/x;.I:(Lyc/d;)Lyc/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b136c.  v0:= `@@yc.a.T` @type ^`yc.a` @kind object;
  #L4b1370.  call temp:= `getValue`(v3) @signature `Lvc/x;.getValue:()I` @kind virtual;
  #L4b1376.  v1:= temp;
  #L4b1378.  v1:= (`long`) v1 @kind i2l;
  #L4b137a.  call temp:= `P`(v4, v0, v1) @signature `Lyc/d;.P:(Lyc/i;J)Lyc/d;` @kind interface;
  #L4b1380.  v4:= temp @kind object;
  #L4b1382.  return v4 @kind object;
}
procedure `boolean` `d`(`vc.x` v3 @kind this, `yc.i` v4 @kind object) @signature `Lvc/x;.d:(Lyc/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b10ac.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4b10b0.  v1:= 1I;
  #L4b10b2.  v2:= 0I;
  #L4b10b4.  if v0 == 0 then goto L4b10c6;
  #L4b10b8.  v0:= `@@yc.a.T` @type ^`yc.a` @kind object;
  #L4b10bc.  if v4 != v0 then goto L4b10c2;
  #L4b10c0.  goto L4b10c4;
  #L4b10c2.  v1:= 0I;
  #L4b10c4.  return v1;
  #L4b10c6.  if v4 == 0 then goto L4b10d8;
  #L4b10ca.  call temp:= `j`(v4, v3) @signature `Lyc/i;.j:(Lyc/e;)Z` @kind interface;
  #L4b10d0.  v4:= temp;
  #L4b10d2.  if v4 == 0 then goto L4b10d8;
  #L4b10d6.  goto L4b10da;
  #L4b10d8.  v1:= 0I;
  #L4b10da.  return v1;
}
procedure `int` `getValue`(`vc.x` v1 @kind this) @signature `Lvc/x;.getValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1128.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4b112e.  v0:= temp;
  #L4b1130.  return v0;
}
procedure `void` `h`(`vc.x` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Lvc/x;.h:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L4b134c.  call temp:= `getValue`(v1) @signature `Lvc/x;.getValue:()I` @kind virtual;
  #L4b1352.  v0:= temp;
  #L4b1354.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L4b135a.  return @kind void;
}
procedure `java.lang.Object` `j`(`vc.x` v1 @kind this, `yc.k` v2 @kind object) @signature `Lvc/x;.j:(Lyc/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4b1144.  call temp:= `e`() @signature `Lyc/j;.e:()Lyc/k;` @kind static;
  #L4b114a.  v0:= temp @kind object;
  #L4b114c.  if v2 != v0 then goto L4b1156;
  #L4b1150.  v2:= `@@yc.b.D` @type ^`yc.b` @kind object;
  #L4b1154.  return v2 @kind object;
  #L4b1156.  call temp:= `a`() @signature `Lyc/j;.a:()Lyc/k;` @kind static;
  #L4b115c.  v0:= temp @kind object;
  #L4b115e.  if v2 == v0 then goto L4b11aa;
  #L4b1162.  call temp:= `f`() @signature `Lyc/j;.f:()Lyc/k;` @kind static;
  #L4b1168.  v0:= temp @kind object;
  #L4b116a.  if v2 == v0 then goto L4b11aa;
  #L4b116e.  call temp:= `g`() @signature `Lyc/j;.g:()Lyc/k;` @kind static;
  #L4b1174.  v0:= temp @kind object;
  #L4b1176.  if v2 == v0 then goto L4b11aa;
  #L4b117a.  call temp:= `d`() @signature `Lyc/j;.d:()Lyc/k;` @kind static;
  #L4b1180.  v0:= temp @kind object;
  #L4b1182.  if v2 == v0 then goto L4b11aa;
  #L4b1186.  call temp:= `b`() @signature `Lyc/j;.b:()Lyc/k;` @kind static;
  #L4b118c.  v0:= temp @kind object;
  #L4b118e.  if v2 == v0 then goto L4b11aa;
  #L4b1192.  call temp:= `c`() @signature `Lyc/j;.c:()Lyc/k;` @kind static;
  #L4b1198.  v0:= temp @kind object;
  #L4b119a.  if v2 != v0 then goto L4b11a0;
  #L4b119e.  goto L4b11aa;
  #L4b11a0.  call temp:= `a`(v2, v1) @signature `Lyc/k;.a:(Lyc/e;)Ljava/lang/Object;` @kind interface;
  #L4b11a6.  v2:= temp @kind object;
  #L4b11a8.  return v2 @kind object;
  #L4b11aa.  v2:= 0I;
  #L4b11ac.  return v2 @kind object;
}
procedure `yc.n` `t`(`vc.x` v3 @kind this, `yc.i` v4 @kind object) @signature `Lvc/x;.t:(Lyc/i;)Lyc/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4b1394.  v0:= `@@yc.a.T` @type ^`yc.a` @kind object;
  #L4b1398.  if v4 != v0 then goto L4b13a6;
  #L4b139c.  call temp:= `k`(v4) @signature `Lyc/i;.k:()Lyc/n;` @kind interface;
  #L4b13a2.  v4:= temp @kind object;
  #L4b13a4.  return v4 @kind object;
  #L4b13a6.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4b13aa.  if v0 != 0 then goto L4b13b8;
  #L4b13ae.  call temp:= `h`(v4, v3) @signature `Lyc/i;.h:(Lyc/e;)Lyc/n;` @kind interface;
  #L4b13b4.  v4:= temp @kind object;
  #L4b13b6.  return v4 @kind object;
  #L4b13b8.  v0:= new `yc.m`;
  #L4b13bc.  v1:= new `java.lang.StringBuilder`;
  #L4b13c0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4b13c6.  v2:= "Unsupported field: " @kind object;
  #L4b13ca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4b13d0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4b13d6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4b13dc.  v4:= temp @kind object;
  #L4b13de.  call `<init>`(v0, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4b13e4.  throw v0;
}
