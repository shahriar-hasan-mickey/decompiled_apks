record `vc.j` @kind class @AccessFlag PUBLIC_FINAL extends `vc.h` @kind class, `java.io.Serializable` @kind interface {
}
global `vc.j` `@@vc.j.q` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.HashMap` `@@vc.j.r` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@vc.j.s` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@vc.j.t` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lvc/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4aa5f8.  v0:= new `vc.j`;
  #L4aa5fc.  call `<init>`(v0) @signature `Lvc/j;.<init>:()V` @kind direct;
  #L4aa602.  `@@vc.j.q` @type ^`vc.j` := v0 @kind object;
  #L4aa606.  v0:= new `java.util.HashMap`;
  #L4aa60a.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4aa610.  `@@vc.j.r` @type ^`java.util.HashMap` := v0 @kind object;
  #L4aa614.  v1:= new `java.util.HashMap`;
  #L4aa618.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4aa61e.  `@@vc.j.s` @type ^`java.util.HashMap` := v1 @kind object;
  #L4aa622.  v2:= new `java.util.HashMap`;
  #L4aa626.  call `<init>`(v2) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4aa62c.  `@@vc.j.t` @type ^`java.util.HashMap` := v2 @kind object;
  #L4aa630.  v3:= "BH" @kind object;
  #L4aa634.  v4:= "HE" @kind object;
  #L4aa638.  temp:= new `java.lang.String`[v3, v4];
  #L4aa63e.  v3:= temp @kind object;
  #L4aa640.  v4:= "en" @kind object;
  #L4aa644.  call temp:= `put`(v0, v4, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4aa64a.  v0:= "B.H." @kind object;
  #L4aa64e.  v3:= "H.E." @kind object;
  #L4aa652.  temp:= new `java.lang.String`[v0, v3];
  #L4aa658.  v0:= temp @kind object;
  #L4aa65a.  call temp:= `put`(v1, v4, v0) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4aa660.  v0:= "Before Hijrah" @kind object;
  #L4aa664.  v1:= "Hijrah Era" @kind object;
  #L4aa668.  temp:= new `java.lang.String`[v0, v1];
  #L4aa66e.  v0:= temp @kind object;
  #L4aa670.  call temp:= `put`(v2, v4, v0) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4aa676.  return @kind void;
}
procedure `void` `<init>`(`vc.j` v0 @kind this) @signature `Lvc/j;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4aa688.  call `<init>`(v0) @signature `Lvc/h;.<init>:()V` @kind direct;
  #L4aa68e.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`vc.j` v1 @kind this) @signature `Lvc/j;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4aa4b8.  v0:= `@@vc.j.q` @type ^`vc.j` @kind object;
  #L4aa4bc.  return v0 @kind object;
}
procedure `vc.f` `I`(`vc.j` v0 @kind this, `uc.e` v1 @kind object, `uc.q` v2 @kind object) @signature `Lvc/j;.I:(Luc/e;Luc/q;)Lvc/f;` @AccessFlag PUBLIC {
    temp;

  #L4aa538.  call temp:= `I`(v0, v1, v2) @signature `Lvc/h;.I:(Luc/e;Luc/q;)Lvc/f;` @kind super;
  #L4aa53e.  v1:= temp @kind object;
  #L4aa540.  return v1 @kind object;
}
procedure `vc.k` `K`(`vc.j` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Lvc/j;.K:(III)Lvc/k;` @AccessFlag PUBLIC {
    temp;

  #L4aa570.  call temp:= `P0`(v1, v2, v3) @signature `Lvc/k;.P0:(III)Lvc/k;` @kind static;
  #L4aa576.  v1:= temp @kind object;
  #L4aa578.  return v1 @kind object;
}
procedure `vc.k` `L`(`vc.j` v2 @kind this, `yc.e` v3 @kind object) @signature `Lvc/j;.L:(Lyc/e;)Lvc/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4aa58c.  v0:= instanceof @variable v3 @type ^`vc.k` @kind boolean;
  #L4aa590.  if v0 == 0 then goto L4aa59a;
  #L4aa594.  v3:= (`vc.k`) v3 @kind object;
  #L4aa598.  return v3 @kind object;
  #L4aa59a.  v0:= `@@yc.a.M` @type ^`yc.a` @kind object;
  #L4aa59e.  call temp:= `B`(v3, v0) @signature `Lyc/e;.B:(Lyc/i;)J` @kind interface;
  #L4aa5a4.  v0:= temp @kind wide;
  #L4aa5a6.  call temp:= `R0`(v0) @signature `Lvc/k;.R0:(J)Lvc/k;` @kind static;
  #L4aa5ac.  v3:= temp @kind object;
  #L4aa5ae.  return v3 @kind object;
}
procedure `vc.l` `P`(`vc.j` v1 @kind this, `int` v2 ) @signature `Lvc/j;.P:(I)Lvc/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa5c0.  if v2 == 0 then goto L4aa5e0;
  #L4aa5c4.  v0:= 1I;
  #L4aa5c6.  if v2 != v0 then goto L4aa5d0;
  #L4aa5ca.  v2:= `@@vc.l.p` @type ^`vc.l` @kind object;
  #L4aa5ce.  return v2 @kind object;
  #L4aa5d0.  v2:= new `uc.b`;
  #L4aa5d4.  v0:= "invalid Hijrah era" @kind object;
  #L4aa5d8.  call `<init>`(v2, v0) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4aa5de.  throw v2;
  #L4aa5e0.  v2:= `@@vc.l.o` @type ^`vc.l` @kind object;
  #L4aa5e4.  return v2 @kind object;
}
procedure `yc.n` `S`(`vc.j` v0 @kind this, `yc.a` v1 @kind object) @signature `Lvc/j;.S:(Lyc/a;)Lyc/n;` @AccessFlag PUBLIC {
    temp;

  #L4aa6a0.  call temp:= `k`(v1) @signature `Lyc/a;.k:()Lyc/n;` @kind virtual;
  #L4aa6a6.  v1:= temp @kind object;
  #L4aa6a8.  return v1 @kind object;
}
procedure `vc.b` `d`(`vc.j` v0 @kind this, `yc.e` v1 @kind object) @signature `Lvc/j;.d:(Lyc/e;)Lvc/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4aa500.  call temp:= `L`(v0, v1) @signature `Lvc/j;.L:(Lyc/e;)Lvc/k;` @kind virtual;
  #L4aa506.  v1:= temp @kind object;
  #L4aa508.  return v1 @kind object;
}
procedure `vc.i` `j`(`vc.j` v0 @kind this, `int` v1 ) @signature `Lvc/j;.j:(I)Lvc/i;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4aa554.  call temp:= `P`(v0, v1) @signature `Lvc/j;.P:(I)Lvc/l;` @kind virtual;
  #L4aa55a.  v1:= temp @kind object;
  #L4aa55c.  return v1 @kind object;
}
procedure `java.lang.String` `o`(`vc.j` v1 @kind this) @signature `Lvc/j;.o:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa4d0.  v0:= "islamic-umalqura" @kind object;
  #L4aa4d4.  return v0 @kind object;
}
procedure `java.lang.String` `r`(`vc.j` v1 @kind this) @signature `Lvc/j;.r:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4aa4e8.  v0:= "Hijrah-umalqura" @kind object;
  #L4aa4ec.  return v0 @kind object;
}
procedure `vc.c` `t`(`vc.j` v0 @kind this, `yc.e` v1 @kind object) @signature `Lvc/j;.t:(Lyc/e;)Lvc/c;` @AccessFlag PUBLIC {
    temp;

  #L4aa51c.  call temp:= `t`(v0, v1) @signature `Lvc/h;.t:(Lyc/e;)Lvc/c;` @kind super;
  #L4aa522.  v1:= temp @kind object;
  #L4aa524.  return v1 @kind object;
}
