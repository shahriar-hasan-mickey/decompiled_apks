record `ga.i$e` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `ga.i$e.o` @AccessFlag PRIVATE;
}
global `ga.i$e` `@@ga.i$e.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ga.i$e`[] `@@ga.i$e.q` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lga/i$e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32b61c.  v0:= new `ga.i$e`;
  #L32b620.  v1:= "PLAIN_TEXT" @kind object;
  #L32b624.  v2:= 0I;
  #L32b626.  v3:= "text/plain" @kind object;
  #L32b62a.  call `<init>`(v0, v1, v2, v3) @signature `Lga/i$e;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32b630.  `@@ga.i$e.p` @type ^`ga.i$e` := v0 @kind object;
  #L32b634.  v1:= 1I;
  #L32b636.  v1:= new `ga.i$e`[v1];
  #L32b63a.  v1[v2]:= v0 @kind object;
  #L32b63e.  `@@ga.i$e.q` @type ^`ga.i$e`[] := v1 @kind object;
  #L32b642.  return @kind void;
}
procedure `void` `<init>`(`ga.i$e` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lga/i$e;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L32b654.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L32b65a.  v0.`ga.i$e.o` @type ^`java.lang.String` := v3 @kind object;
  #L32b65e.  return @kind void;
}
procedure `ga.i$e` `c`(`java.lang.String` v5 @kind object) @signature `Lga/i$e;.c:(Ljava/lang/String;)Lga/i$e;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32b568.  call temp:= `values`() @signature `Lga/i$e;.values:()[Lga/i$e;` @kind static;
  #L32b56e.  v0:= temp @kind object;
  #L32b570.  v1:= length @variable v0;
  #L32b572.  v2:= 0I;
  #L32b574.  if v2 >= v1 then goto L32b594;
  #L32b578.  v3:= v0[v2] @kind object;
  #L32b57c.  v4:= v3.`ga.i$e.o` @type ^`java.lang.String` @kind object;
  #L32b580.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32b586.  v4:= temp;
  #L32b588.  if v4 == 0 then goto L32b58e;
  #L32b58c.  return v3 @kind object;
  #L32b58e.  v2:= v2 + 1;
  #L32b592.  goto L32b574;
  #L32b594.  v0:= new `java.lang.NoSuchFieldException`;
  #L32b598.  v1:= new `java.lang.StringBuilder`;
  #L32b59c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32b5a2.  v2:= "No such ClipboardContentFormat: " @kind object;
  #L32b5a6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b5ac.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b5b2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32b5b8.  v5:= temp @kind object;
  #L32b5ba.  call `<init>`(v0, v5) @signature `Ljava/lang/NoSuchFieldException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b5c0.  throw v0;
}
procedure `ga.i$e` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lga/i$e;.valueOf:(Ljava/lang/String;)Lga/i$e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32b5d4.  v0:= constclass @type ^`ga.i$e` @kind object;
  #L32b5d8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L32b5de.  v1:= temp @kind object;
  #L32b5e0.  v1:= (`ga.i$e`) v1 @kind object;
  #L32b5e4.  return v1 @kind object;
}
procedure `ga.i$e`[] `values`() @signature `Lga/i$e;.values:()[Lga/i$e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32b5f8.  v0:= `@@ga.i$e.q` @type ^`ga.i$e`[] @kind object;
  #L32b5fc.  call temp:= `clone`(v0) @signature `[Lga/i$e;.clone:()Ljava/lang/Object;` @kind virtual;
  #L32b602.  v0:= temp @kind object;
  #L32b604.  v0:= (`ga.i$e`[]) v0 @kind object;
  #L32b608.  return v0 @kind object;
}
