record `ga.i$d` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `ga.i$d.o` @AccessFlag PRIVATE;
}
global `ga.i$d` `@@ga.i$d.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ga.i$d` `@@ga.i$d.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ga.i$d`[] `@@ga.i$d.r` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lga/i$d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L32b4f8.  v0:= new `ga.i$d`;
  #L32b4fc.  v1:= "LIGHT" @kind object;
  #L32b500.  v2:= 0I;
  #L32b502.  v3:= "Brightness.light" @kind object;
  #L32b506.  call `<init>`(v0, v1, v2, v3) @signature `Lga/i$d;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32b50c.  `@@ga.i$d.p` @type ^`ga.i$d` := v0 @kind object;
  #L32b510.  v1:= new `ga.i$d`;
  #L32b514.  v3:= "DARK" @kind object;
  #L32b518.  v4:= 1I;
  #L32b51a.  v5:= "Brightness.dark" @kind object;
  #L32b51e.  call `<init>`(v1, v3, v4, v5) @signature `Lga/i$d;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32b524.  `@@ga.i$d.q` @type ^`ga.i$d` := v1 @kind object;
  #L32b528.  v3:= 2I;
  #L32b52a.  v3:= new `ga.i$d`[v3];
  #L32b52e.  v3[v2]:= v0 @kind object;
  #L32b532.  v3[v4]:= v1 @kind object;
  #L32b536.  `@@ga.i$d.r` @type ^`ga.i$d`[] := v3 @kind object;
  #L32b53a.  return @kind void;
}
procedure `void` `<init>`(`ga.i$d` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lga/i$d;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L32b54c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L32b552.  v0.`ga.i$d.o` @type ^`java.lang.String` := v3 @kind object;
  #L32b556.  return @kind void;
}
procedure `ga.i$d` `c`(`java.lang.String` v5 @kind object) @signature `Lga/i$d;.c:(Ljava/lang/String;)Lga/i$d;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32b444.  call temp:= `values`() @signature `Lga/i$d;.values:()[Lga/i$d;` @kind static;
  #L32b44a.  v0:= temp @kind object;
  #L32b44c.  v1:= length @variable v0;
  #L32b44e.  v2:= 0I;
  #L32b450.  if v2 >= v1 then goto L32b470;
  #L32b454.  v3:= v0[v2] @kind object;
  #L32b458.  v4:= v3.`ga.i$d.o` @type ^`java.lang.String` @kind object;
  #L32b45c.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32b462.  v4:= temp;
  #L32b464.  if v4 == 0 then goto L32b46a;
  #L32b468.  return v3 @kind object;
  #L32b46a.  v2:= v2 + 1;
  #L32b46e.  goto L32b450;
  #L32b470.  v0:= new `java.lang.NoSuchFieldException`;
  #L32b474.  v1:= new `java.lang.StringBuilder`;
  #L32b478.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32b47e.  v2:= "No such Brightness: " @kind object;
  #L32b482.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b488.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b48e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32b494.  v5:= temp @kind object;
  #L32b496.  call `<init>`(v0, v5) @signature `Ljava/lang/NoSuchFieldException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b49c.  throw v0;
}
procedure `ga.i$d` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lga/i$d;.valueOf:(Ljava/lang/String;)Lga/i$d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32b4b0.  v0:= constclass @type ^`ga.i$d` @kind object;
  #L32b4b4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L32b4ba.  v1:= temp @kind object;
  #L32b4bc.  v1:= (`ga.i$d`) v1 @kind object;
  #L32b4c0.  return v1 @kind object;
}
procedure `ga.i$d`[] `values`() @signature `Lga/i$d;.values:()[Lga/i$d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32b4d4.  v0:= `@@ga.i$d.r` @type ^`ga.i$d`[] @kind object;
  #L32b4d8.  call temp:= `clone`(v0) @signature `[Lga/i$d;.clone:()Ljava/lang/Object;` @kind virtual;
  #L32b4de.  v0:= temp @kind object;
  #L32b4e0.  v0:= (`ga.i$d`[]) v0 @kind object;
  #L32b4e4.  return v0 @kind object;
}
