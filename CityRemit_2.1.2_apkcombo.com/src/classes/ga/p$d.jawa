record `ga.p$d` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `ga.p$d.o` @AccessFlag PRIVATE_FINAL;
}
global `ga.p$d` `@@ga.p$d.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ga.p$d` `@@ga.p$d.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ga.p$d` `@@ga.p$d.r` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ga.p$d` `@@ga.p$d.s` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ga.p$d`[] `@@ga.p$d.t` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lga/p$d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L32e504.  v0:= new `ga.p$d`;
  #L32e508.  v1:= "CHARACTERS" @kind object;
  #L32e50c.  v2:= 0I;
  #L32e50e.  v3:= "TextCapitalization.characters" @kind object;
  #L32e512.  call `<init>`(v0, v1, v2, v3) @signature `Lga/p$d;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32e518.  `@@ga.p$d.p` @type ^`ga.p$d` := v0 @kind object;
  #L32e51c.  v1:= new `ga.p$d`;
  #L32e520.  v3:= "WORDS" @kind object;
  #L32e524.  v4:= 1I;
  #L32e526.  v5:= "TextCapitalization.words" @kind object;
  #L32e52a.  call `<init>`(v1, v3, v4, v5) @signature `Lga/p$d;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32e530.  `@@ga.p$d.q` @type ^`ga.p$d` := v1 @kind object;
  #L32e534.  v3:= new `ga.p$d`;
  #L32e538.  v5:= "SENTENCES" @kind object;
  #L32e53c.  v6:= 2I;
  #L32e53e.  v7:= "TextCapitalization.sentences" @kind object;
  #L32e542.  call `<init>`(v3, v5, v6, v7) @signature `Lga/p$d;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32e548.  `@@ga.p$d.r` @type ^`ga.p$d` := v3 @kind object;
  #L32e54c.  v5:= new `ga.p$d`;
  #L32e550.  v7:= "NONE" @kind object;
  #L32e554.  v8:= 3I;
  #L32e556.  v9:= "TextCapitalization.none" @kind object;
  #L32e55a.  call `<init>`(v5, v7, v8, v9) @signature `Lga/p$d;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32e560.  `@@ga.p$d.s` @type ^`ga.p$d` := v5 @kind object;
  #L32e564.  v7:= 4I;
  #L32e566.  v7:= new `ga.p$d`[v7];
  #L32e56a.  v7[v2]:= v0 @kind object;
  #L32e56e.  v7[v4]:= v1 @kind object;
  #L32e572.  v7[v6]:= v3 @kind object;
  #L32e576.  v7[v8]:= v5 @kind object;
  #L32e57a.  `@@ga.p$d.t` @type ^`ga.p$d`[] := v7 @kind object;
  #L32e57e.  return @kind void;
}
procedure `void` `<init>`(`ga.p$d` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lga/p$d;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L32e590.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L32e596.  v0.`ga.p$d.o` @type ^`java.lang.String` := v3 @kind object;
  #L32e59a.  return @kind void;
}
procedure `ga.p$d` `c`(`java.lang.String` v5 @kind object) @signature `Lga/p$d;.c:(Ljava/lang/String;)Lga/p$d;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32e450.  call temp:= `values`() @signature `Lga/p$d;.values:()[Lga/p$d;` @kind static;
  #L32e456.  v0:= temp @kind object;
  #L32e458.  v1:= length @variable v0;
  #L32e45a.  v2:= 0I;
  #L32e45c.  if v2 >= v1 then goto L32e47c;
  #L32e460.  v3:= v0[v2] @kind object;
  #L32e464.  v4:= v3.`ga.p$d.o` @type ^`java.lang.String` @kind object;
  #L32e468.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32e46e.  v4:= temp;
  #L32e470.  if v4 == 0 then goto L32e476;
  #L32e474.  return v3 @kind object;
  #L32e476.  v2:= v2 + 1;
  #L32e47a.  goto L32e45c;
  #L32e47c.  v0:= new `java.lang.NoSuchFieldException`;
  #L32e480.  v1:= new `java.lang.StringBuilder`;
  #L32e484.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e48a.  v2:= "No such TextCapitalization: " @kind object;
  #L32e48e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e494.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e49a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e4a0.  v5:= temp @kind object;
  #L32e4a2.  call `<init>`(v0, v5) @signature `Ljava/lang/NoSuchFieldException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e4a8.  throw v0;
}
procedure `ga.p$d` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lga/p$d;.valueOf:(Ljava/lang/String;)Lga/p$d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32e4bc.  v0:= constclass @type ^`ga.p$d` @kind object;
  #L32e4c0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L32e4c6.  v1:= temp @kind object;
  #L32e4c8.  v1:= (`ga.p$d`) v1 @kind object;
  #L32e4cc.  return v1 @kind object;
}
procedure `ga.p$d`[] `values`() @signature `Lga/p$d;.values:()[Lga/p$d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32e4e0.  v0:= `@@ga.p$d.t` @type ^`ga.p$d`[] @kind object;
  #L32e4e4.  call temp:= `clone`(v0) @signature `[Lga/p$d;.clone:()Ljava/lang/Object;` @kind virtual;
  #L32e4ea.  v0:= temp @kind object;
  #L32e4ec.  v0:= (`ga.p$d`[]) v0 @kind object;
  #L32e4f0.  return v0 @kind object;
}
