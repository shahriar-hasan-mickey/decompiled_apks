record `ga.i$k` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `ga.i$k.o` @AccessFlag PRIVATE;
}
global `ga.i$k` `@@ga.i$k.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ga.i$k` `@@ga.i$k.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ga.i$k` `@@ga.i$k.r` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ga.i$k` `@@ga.i$k.s` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `ga.i$k`[] `@@ga.i$k.t` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lga/i$k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L32bb5c.  v0:= new `ga.i$k`;
  #L32bb60.  v1:= "LEAN_BACK" @kind object;
  #L32bb64.  v2:= 0I;
  #L32bb66.  v3:= "SystemUiMode.leanBack" @kind object;
  #L32bb6a.  call `<init>`(v0, v1, v2, v3) @signature `Lga/i$k;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32bb70.  `@@ga.i$k.p` @type ^`ga.i$k` := v0 @kind object;
  #L32bb74.  v1:= new `ga.i$k`;
  #L32bb78.  v3:= "IMMERSIVE" @kind object;
  #L32bb7c.  v4:= 1I;
  #L32bb7e.  v5:= "SystemUiMode.immersive" @kind object;
  #L32bb82.  call `<init>`(v1, v3, v4, v5) @signature `Lga/i$k;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32bb88.  `@@ga.i$k.q` @type ^`ga.i$k` := v1 @kind object;
  #L32bb8c.  v3:= new `ga.i$k`;
  #L32bb90.  v5:= "IMMERSIVE_STICKY" @kind object;
  #L32bb94.  v6:= 2I;
  #L32bb96.  v7:= "SystemUiMode.immersiveSticky" @kind object;
  #L32bb9a.  call `<init>`(v3, v5, v6, v7) @signature `Lga/i$k;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32bba0.  `@@ga.i$k.r` @type ^`ga.i$k` := v3 @kind object;
  #L32bba4.  v5:= new `ga.i$k`;
  #L32bba8.  v7:= "EDGE_TO_EDGE" @kind object;
  #L32bbac.  v8:= 3I;
  #L32bbae.  v9:= "SystemUiMode.edgeToEdge" @kind object;
  #L32bbb2.  call `<init>`(v5, v7, v8, v9) @signature `Lga/i$k;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32bbb8.  `@@ga.i$k.s` @type ^`ga.i$k` := v5 @kind object;
  #L32bbbc.  v7:= 4I;
  #L32bbbe.  v7:= new `ga.i$k`[v7];
  #L32bbc2.  v7[v2]:= v0 @kind object;
  #L32bbc6.  v7[v4]:= v1 @kind object;
  #L32bbca.  v7[v6]:= v3 @kind object;
  #L32bbce.  v7[v8]:= v5 @kind object;
  #L32bbd2.  `@@ga.i$k.t` @type ^`ga.i$k`[] := v7 @kind object;
  #L32bbd6.  return @kind void;
}
procedure `void` `<init>`(`ga.i$k` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lga/i$k;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L32bbe8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L32bbee.  v0.`ga.i$k.o` @type ^`java.lang.String` := v3 @kind object;
  #L32bbf2.  return @kind void;
}
procedure `ga.i$k` `c`(`java.lang.String` v5 @kind object) @signature `Lga/i$k;.c:(Ljava/lang/String;)Lga/i$k;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32baa8.  call temp:= `values`() @signature `Lga/i$k;.values:()[Lga/i$k;` @kind static;
  #L32baae.  v0:= temp @kind object;
  #L32bab0.  v1:= length @variable v0;
  #L32bab2.  v2:= 0I;
  #L32bab4.  if v2 >= v1 then goto L32bad4;
  #L32bab8.  v3:= v0[v2] @kind object;
  #L32babc.  v4:= v3.`ga.i$k.o` @type ^`java.lang.String` @kind object;
  #L32bac0.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32bac6.  v4:= temp;
  #L32bac8.  if v4 == 0 then goto L32bace;
  #L32bacc.  return v3 @kind object;
  #L32bace.  v2:= v2 + 1;
  #L32bad2.  goto L32bab4;
  #L32bad4.  v0:= new `java.lang.NoSuchFieldException`;
  #L32bad8.  v1:= new `java.lang.StringBuilder`;
  #L32badc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32bae2.  v2:= "No such SystemUiMode: " @kind object;
  #L32bae6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32baec.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32baf2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32baf8.  v5:= temp @kind object;
  #L32bafa.  call `<init>`(v0, v5) @signature `Ljava/lang/NoSuchFieldException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32bb00.  throw v0;
}
procedure `ga.i$k` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lga/i$k;.valueOf:(Ljava/lang/String;)Lga/i$k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32bb14.  v0:= constclass @type ^`ga.i$k` @kind object;
  #L32bb18.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L32bb1e.  v1:= temp @kind object;
  #L32bb20.  v1:= (`ga.i$k`) v1 @kind object;
  #L32bb24.  return v1 @kind object;
}
procedure `ga.i$k`[] `values`() @signature `Lga/i$k;.values:()[Lga/i$k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32bb38.  v0:= `@@ga.i$k.t` @type ^`ga.i$k`[] @kind object;
  #L32bb3c.  call temp:= `clone`(v0) @signature `[Lga/i$k;.clone:()Ljava/lang/Object;` @kind virtual;
  #L32bb42.  v0:= temp @kind object;
  #L32bb44.  v0:= (`ga.i$k`[]) v0 @kind object;
  #L32bb48.  return v0 @kind object;
}
