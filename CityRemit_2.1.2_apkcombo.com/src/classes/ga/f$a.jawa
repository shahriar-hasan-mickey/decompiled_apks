record `ga.f$a` @kind class @AccessFlag  extends `ha.k$c` @kind interface {
  `ga.f` `ga.f$a.o` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`ga.f$a` v0 @kind this, `ga.f` v1 @kind object) @signature `Lga/f$a;.<init>:(Lga/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32a6f4.  v0.`ga.f$a.o` @type ^`ga.f` := v1 @kind object;
  #L32a6f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32a6fe.  return @kind void;
}
procedure `void` `onMethodCall`(`ga.f$a` v4 @kind this, `ha.j` v5 @kind object, `ha.k$d` v6 @kind object) @signature `Lga/f$a;.onMethodCall:(Lha/j;Lha/k$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32a710.  v0:= "locale" @kind object;
  #L32a714.  v1:= v4.`ga.f$a.o` @type ^`ga.f` @kind object;
  #L32a718.  call temp:= `a`(v1) @signature `Lga/f;.a:(Lga/f;)Lga/f$b;` @kind static;
  #L32a71e.  v1:= temp @kind object;
  #L32a720.  if v1 != 0 then goto L32a726;
  #L32a724.  return @kind void;
  #L32a726.  v1:= v5.`ha.j.a` @type ^`java.lang.String` @kind object;
  #L32a72a.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L32a730.  v2:= "Localization.getStringResource" @kind object;
  #L32a734.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32a73a.  v1:= temp;
  #L32a73c.  if v1 != 0 then goto L32a748;
  #L32a740.  call `c`(v6) @signature `Lha/k$d;.c:()V` @kind interface;
  #L32a746.  goto L32a7aa;
  #L32a748.  call temp:= `b`(v5) @signature `Lha/j;.b:()Ljava/lang/Object;` @kind virtual;
  #L32a74e.  v5:= temp @kind object;
  #L32a750.  v5:= (`org.json.JSONObject`) v5 @kind object;
  #L32a754.  v1:= 0I;
  #L32a756.  v2:= "key" @kind object;
  #L32a75a.  call temp:= `getString`(v5, v2) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L32a760.  v2:= temp @kind object;
  #L32a762.  call temp:= `has`(v5, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L32a768.  v3:= temp;
  #L32a76a.  if v3 == 0 then goto L32a778;
  #L32a76e.  call temp:= `getString`(v5, v0) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L32a774.  v5:= temp @kind object;
  #L32a776.  goto L32a77a;
  #L32a778.  v5:= v1 @kind object;
  #L32a77a.  v0:= v4.`ga.f$a.o` @type ^`ga.f` @kind object;
  #L32a77e.  call temp:= `a`(v0) @signature `Lga/f;.a:(Lga/f;)Lga/f$b;` @kind static;
  #L32a784.  v0:= temp @kind object;
  #L32a786.  call temp:= `a`(v0, v2, v5) @signature `Lga/f$b;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L32a78c.  v5:= temp @kind object;
  #L32a78e.  call `a`(v6, v5) @signature `Lha/k$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L32a794.  goto L32a7aa;
  #L32a796.  v5:= Exception @type ^`org.json.JSONException` @kind object;
  #L32a798.  call temp:= `getMessage`(v5) @signature `Lorg/json/JSONException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L32a79e.  v5:= temp @kind object;
  #L32a7a0.  v0:= "error" @kind object;
  #L32a7a4.  call `b`(v6, v0, v5, v1) @signature `Lha/k$d;.b:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L32a7aa.  return @kind void;
  catch `org.json.JSONException` @[L32a756..L32a794] goto L32a796;
}
