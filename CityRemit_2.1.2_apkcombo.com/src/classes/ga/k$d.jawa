record `ga.k$d` @kind class @AccessFlag PUBLIC {
  `int` `ga.k$d.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `ga.k$d.b` @AccessFlag PUBLIC_FINAL;
  `double` `ga.k$d.c` @AccessFlag PUBLIC_FINAL;
  `double` `ga.k$d.d` @AccessFlag PUBLIC_FINAL;
  `double` `ga.k$d.e` @AccessFlag PUBLIC_FINAL;
  `double` `ga.k$d.f` @AccessFlag PUBLIC_FINAL;
  `int` `ga.k$d.g` @AccessFlag PUBLIC_FINAL;
  `java.nio.ByteBuffer` `ga.k$d.h` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`ga.k$d` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `double` v3 , `double` v5 , `double` v7 , `double` v9 , `int` v11 , `java.nio.ByteBuffer` v12 @kind object) @signature `Lga/k$d;.<init>:(ILjava/lang/String;DDDDILjava/nio/ByteBuffer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32cbc4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32cbca.  v0.`ga.k$d.a` @type ^`int` := v1;
  #L32cbce.  v0.`ga.k$d.b` @type ^`java.lang.String` := v2 @kind object;
  #L32cbd2.  v0.`ga.k$d.e` @type ^`double` := v3 @kind wide;
  #L32cbd6.  v0.`ga.k$d.f` @type ^`double` := v5 @kind wide;
  #L32cbda.  v0.`ga.k$d.c` @type ^`double` := v7 @kind wide;
  #L32cbde.  v0.`ga.k$d.d` @type ^`double` := v9 @kind wide;
  #L32cbe2.  v0.`ga.k$d.g` @type ^`int` := v11;
  #L32cbe6.  v0.`ga.k$d.h` @type ^`java.nio.ByteBuffer` := v12 @kind object;
  #L32cbea.  return @kind void;
}
