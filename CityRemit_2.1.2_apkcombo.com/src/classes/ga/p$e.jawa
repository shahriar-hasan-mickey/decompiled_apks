record `ga.p$e` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `ga.p$e.a` @AccessFlag PUBLIC_FINAL;
  `int` `ga.p$e.b` @AccessFlag PUBLIC_FINAL;
  `int` `ga.p$e.c` @AccessFlag PUBLIC_FINAL;
  `int` `ga.p$e.d` @AccessFlag PUBLIC_FINAL;
  `int` `ga.p$e.e` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`ga.p$e` v3 @kind this, `java.lang.String` v4 @kind object, `int` v5 , `int` v6 , `int` v7 , `int` v8 ) @signature `Lga/p$e;.<init>:(Ljava/lang/String;IIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L32e650.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32e656.  v0:= ")" @kind object;
  #L32e65a.  v1:= ", " @kind object;
  #L32e65e.  v2:= -1I;
  #L32e660.  if v5 != v2 then goto L32e668;
  #L32e664.  if v6 == v2 then goto L32e670;
  #L32e668.  if v5 < 0 then goto L32e7ac;
  #L32e66c.  if v6 < 0 then goto L32e7ac;
  #L32e670.  if v7 != v2 then goto L32e678;
  #L32e674.  if v8 == v2 then goto L32e680;
  #L32e678.  if v7 < 0 then goto L32e75c;
  #L32e67c.  if v7 > v8 then goto L32e75c;
  #L32e680.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32e686.  v0:= temp;
  #L32e688.  if v8 > v0 then goto L32e726;
  #L32e68c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32e692.  v0:= temp;
  #L32e694.  if v5 > v0 then goto L32e6f0;
  #L32e698.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32e69e.  v0:= temp;
  #L32e6a0.  if v6 > v0 then goto L32e6ba;
  #L32e6a4.  v3.`ga.p$e.a` @type ^`java.lang.String` := v4 @kind object;
  #L32e6a8.  v3.`ga.p$e.b` @type ^`int` := v5;
  #L32e6ac.  v3.`ga.p$e.c` @type ^`int` := v6;
  #L32e6b0.  v3.`ga.p$e.d` @type ^`int` := v7;
  #L32e6b4.  v3.`ga.p$e.e` @type ^`int` := v8;
  #L32e6b8.  return @kind void;
  #L32e6ba.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L32e6be.  v5:= new `java.lang.StringBuilder`;
  #L32e6c2.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e6c8.  v7:= "invalid selection end: " @kind object;
  #L32e6cc.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e6d2.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L32e6d8.  v6:= temp @kind object;
  #L32e6da.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e6e0.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e6e6.  v5:= temp @kind object;
  #L32e6e8.  call `<init>`(v4, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e6ee.  throw v4;
  #L32e6f0.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L32e6f4.  v6:= new `java.lang.StringBuilder`;
  #L32e6f8.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e6fe.  v7:= "invalid selection start: " @kind object;
  #L32e702.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e708.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L32e70e.  v5:= temp @kind object;
  #L32e710.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e716.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e71c.  v5:= temp @kind object;
  #L32e71e.  call `<init>`(v4, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e724.  throw v4;
  #L32e726.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L32e72a.  v5:= new `java.lang.StringBuilder`;
  #L32e72e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e734.  v6:= "invalid composing start: " @kind object;
  #L32e738.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e73e.  call temp:= `valueOf`(v7) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L32e744.  v6:= temp @kind object;
  #L32e746.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e74c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e752.  v5:= temp @kind object;
  #L32e754.  call `<init>`(v4, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e75a.  throw v4;
  #L32e75c.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L32e760.  v5:= new `java.lang.StringBuilder`;
  #L32e764.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e76a.  v6:= "invalid composing range: (" @kind object;
  #L32e76e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e774.  call temp:= `valueOf`(v7) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L32e77a.  v6:= temp @kind object;
  #L32e77c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e782.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e788.  call temp:= `valueOf`(v8) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L32e78e.  v6:= temp @kind object;
  #L32e790.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e796.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e79c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e7a2.  v5:= temp @kind object;
  #L32e7a4.  call `<init>`(v4, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e7aa.  throw v4;
  #L32e7ac.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L32e7b0.  v7:= new `java.lang.StringBuilder`;
  #L32e7b4.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e7ba.  v8:= "invalid selection: (" @kind object;
  #L32e7be.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e7c4.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L32e7ca.  v5:= temp @kind object;
  #L32e7cc.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e7d2.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e7d8.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L32e7de.  v5:= temp @kind object;
  #L32e7e0.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e7e6.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e7ec.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e7f2.  v5:= temp @kind object;
  #L32e7f4.  call `<init>`(v4, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e7fa.  throw v4;
}
procedure `ga.p$e` `a`(`org.json.JSONObject` v7 @kind object) @signature `Lga/p$e;.a:(Lorg/json/JSONObject;)Lga/p$e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L32e5f4.  v6:= new `ga.p$e`;
  #L32e5f8.  v0:= "text" @kind object;
  #L32e5fc.  call temp:= `getString`(v7, v0) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L32e602.  v1:= temp @kind object;
  #L32e604.  v0:= "selectionBase" @kind object;
  #L32e608.  call temp:= `getInt`(v7, v0) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L32e60e.  v2:= temp;
  #L32e610.  v0:= "selectionExtent" @kind object;
  #L32e614.  call temp:= `getInt`(v7, v0) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L32e61a.  v3:= temp;
  #L32e61c.  v0:= "composingBase" @kind object;
  #L32e620.  call temp:= `getInt`(v7, v0) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L32e626.  v4:= temp;
  #L32e628.  v0:= "composingExtent" @kind object;
  #L32e62c.  call temp:= `getInt`(v7, v0) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L32e632.  v5:= temp;
  #L32e634.  v0:= v6 @kind object;
  #L32e636.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lga/p$e;.<init>:(Ljava/lang/String;IIII)V` @kind direct;
  #L32e63c.  return v6 @kind object;
}
procedure `boolean` `b`(`ga.p$e` v2 @kind this) @signature `Lga/p$e;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32e5ac.  v0:= v2.`ga.p$e.d` @type ^`int`;
  #L32e5b0.  if v0 < 0 then goto L32e5c0;
  #L32e5b4.  v1:= v2.`ga.p$e.e` @type ^`int`;
  #L32e5b8.  if v1 <= v0 then goto L32e5c0;
  #L32e5bc.  v0:= 1I;
  #L32e5be.  goto L32e5c2;
  #L32e5c0.  v0:= 0I;
  #L32e5c2.  return v0;
}
procedure `boolean` `c`(`ga.p$e` v1 @kind this) @signature `Lga/p$e;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e5d4.  v0:= v1.`ga.p$e.b` @type ^`int`;
  #L32e5d8.  if v0 < 0 then goto L32e5e0;
  #L32e5dc.  v0:= 1I;
  #L32e5de.  goto L32e5e2;
  #L32e5e0.  v0:= 0I;
  #L32e5e2.  return v0;
}
