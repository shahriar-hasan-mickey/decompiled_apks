record `ga.f` @kind class @AccessFlag PUBLIC {
  `ha.k` `ga.f.a` @AccessFlag PUBLIC_FINAL;
  `ga.f$b` `ga.f.b` @AccessFlag PRIVATE;
  `ha.k$c` `ga.f.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`ga.f` v4 @kind this, `u9.a` v5 @kind object) @signature `Lga/f;.<init>:(Lu9/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32a7e4.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32a7ea.  v0:= new `ga.f$a`;
  #L32a7ee.  call `<init>`(v0, v4) @signature `Lga/f$a;.<init>:(Lga/f;)V` @kind direct;
  #L32a7f4.  v4.`ga.f.c` @type ^`ha.k$c` := v0 @kind object;
  #L32a7f8.  v1:= new `ha.k`;
  #L32a7fc.  v2:= `@@ha.g.a` @type ^`ha.g` @kind object;
  #L32a800.  v3:= "flutter/localization" @kind object;
  #L32a804.  call `<init>`(v1, v5, v3, v2) @signature `Lha/k;.<init>:(Lha/c;Ljava/lang/String;Lha/l;)V` @kind direct;
  #L32a80a.  v4.`ga.f.a` @type ^`ha.k` := v1 @kind object;
  #L32a80e.  call `e`(v1, v0) @signature `Lha/k;.e:(Lha/k$c;)V` @kind virtual;
  #L32a814.  return @kind void;
}
procedure `ga.f$b` `a`(`ga.f` v0 @kind object) @signature `Lga/f;.a:(Lga/f;)Lga/f$b;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L32a7cc.  v0:= v0.`ga.f.b` @type ^`ga.f$b` @kind object;
  #L32a7d0.  return v0 @kind object;
}
procedure `void` `b`(`ga.f` v5 @kind this, `java.util.List` v6 @kind object) @signature `Lga/f;.b:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32a828.  v0:= "LocalizationChannel" @kind object;
  #L32a82c.  v1:= "Sending Locales to Flutter." @kind object;
  #L32a830.  call `e`(v0, v1) @signature `Lt9/b;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L32a836.  v1:= new `java.util.ArrayList`;
  #L32a83a.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32a840.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32a846.  v6:= temp @kind object;
  #L32a848.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32a84e.  v2:= temp;
  #L32a850.  if v2 == 0 then goto L32a916;
  #L32a854.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32a85a.  v2:= temp @kind object;
  #L32a85c.  v2:= (`java.util.Locale`) v2 @kind object;
  #L32a860.  v3:= new `java.lang.StringBuilder`;
  #L32a864.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32a86a.  v4:= "Locale (Language: " @kind object;
  #L32a86e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a874.  call temp:= `getLanguage`(v2) @signature `Ljava/util/Locale;.getLanguage:()Ljava/lang/String;` @kind virtual;
  #L32a87a.  v4:= temp @kind object;
  #L32a87c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a882.  v4:= ", Country: " @kind object;
  #L32a886.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a88c.  call temp:= `getCountry`(v2) @signature `Ljava/util/Locale;.getCountry:()Ljava/lang/String;` @kind virtual;
  #L32a892.  v4:= temp @kind object;
  #L32a894.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a89a.  v4:= ", Variant: " @kind object;
  #L32a89e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a8a4.  call temp:= `getVariant`(v2) @signature `Ljava/util/Locale;.getVariant:()Ljava/lang/String;` @kind virtual;
  #L32a8aa.  v4:= temp @kind object;
  #L32a8ac.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a8b2.  v4:= ")" @kind object;
  #L32a8b6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a8bc.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32a8c2.  v3:= temp @kind object;
  #L32a8c4.  call `e`(v0, v3) @signature `Lt9/b;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L32a8ca.  call temp:= `getLanguage`(v2) @signature `Ljava/util/Locale;.getLanguage:()Ljava/lang/String;` @kind virtual;
  #L32a8d0.  v3:= temp @kind object;
  #L32a8d2.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32a8d8.  call temp:= `getCountry`(v2) @signature `Ljava/util/Locale;.getCountry:()Ljava/lang/String;` @kind virtual;
  #L32a8de.  v3:= temp @kind object;
  #L32a8e0.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32a8e6.  v3:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L32a8ea.  v4:= 21I;
  #L32a8ee.  if v3 < v4 then goto L32a8fc;
  #L32a8f2.  call temp:= `getScript`(v2) @signature `Ljava/util/Locale;.getScript:()Ljava/lang/String;` @kind virtual;
  #L32a8f8.  v3:= temp @kind object;
  #L32a8fa.  goto L32a900;
  #L32a8fc.  v3:= "" @kind object;
  #L32a900.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32a906.  call temp:= `getVariant`(v2) @signature `Ljava/util/Locale;.getVariant:()Ljava/lang/String;` @kind virtual;
  #L32a90c.  v2:= temp @kind object;
  #L32a90e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32a914.  goto L32a848;
  #L32a916.  v6:= v5.`ga.f.a` @type ^`ha.k` @kind object;
  #L32a91a.  v0:= "setLocale" @kind object;
  #L32a91e.  call `c`(v6, v0, v1) @signature `Lha/k;.c:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L32a924.  return @kind void;
}
procedure `void` `c`(`ga.f` v0 @kind this, `ga.f$b` v1 @kind object) @signature `Lga/f;.c:(Lga/f$b;)V` @AccessFlag PUBLIC {
    temp;

  #L32a938.  v0.`ga.f.b` @type ^`ga.f$b` := v1 @kind object;
  #L32a93c.  return @kind void;
}
