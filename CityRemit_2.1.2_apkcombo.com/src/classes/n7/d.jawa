record `n7.d` @kind class @AccessFlag PUBLIC_FINAL extends `m7.b` @kind interface {
  `java.util.Map` `n7.d.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `n7.d.b` @AccessFlag PRIVATE_FINAL;
  `l7.d` `n7.d.c` @AccessFlag PRIVATE;
  `boolean` `n7.d.d` @AccessFlag PRIVATE;
}
global `l7.d` `@@n7.d.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `l7.f` `@@n7.d.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `l7.f` `@@n7.d.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `n7.d$b` `@@n7.d.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln7/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3f24d8.  v0:= `@@n7.a.a` @type ^`n7.a` @kind object;
  #L3f24dc.  `@@n7.d.e` @type ^`l7.d` := v0 @kind object;
  #L3f24e0.  v0:= `@@n7.c.a` @type ^`n7.c` @kind object;
  #L3f24e4.  `@@n7.d.f` @type ^`l7.f` := v0 @kind object;
  #L3f24e8.  v0:= `@@n7.b.a` @type ^`n7.b` @kind object;
  #L3f24ec.  `@@n7.d.g` @type ^`l7.f` := v0 @kind object;
  #L3f24f0.  v0:= new `n7.d$b`;
  #L3f24f4.  v1:= 0I;
  #L3f24f6.  call `<init>`(v0, v1) @signature `Ln7/d$b;.<init>:(Ln7/d$a;)V` @kind direct;
  #L3f24fc.  `@@n7.d.h` @type ^`n7.d$b` := v0 @kind object;
  #L3f2500.  return @kind void;
}
procedure `void` `<init>`(`n7.d` v2 @kind this) @signature `Ln7/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3f2514.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f251a.  v0:= new `java.util.HashMap`;
  #L3f251e.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3f2524.  v2.`n7.d.a` @type ^`java.util.Map` := v0 @kind object;
  #L3f2528.  v0:= new `java.util.HashMap`;
  #L3f252c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3f2532.  v2.`n7.d.b` @type ^`java.util.Map` := v0 @kind object;
  #L3f2536.  v0:= `@@n7.d.e` @type ^`l7.d` @kind object;
  #L3f253a.  v2.`n7.d.c` @type ^`l7.d` := v0 @kind object;
  #L3f253e.  v0:= 0I;
  #L3f2540.  v2.`n7.d.d` @type ^`boolean` := v0 @kind boolean;
  #L3f2544.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L3f2548.  v1:= `@@n7.d.f` @type ^`l7.f` @kind object;
  #L3f254c.  call temp:= `p`(v2, v0, v1) @signature `Ln7/d;.p:(Ljava/lang/Class;Ll7/f;)Ln7/d;` @kind virtual;
  #L3f2552.  v0:= constclass @type ^`java.lang.Boolean` @kind object;
  #L3f2556.  v1:= `@@n7.d.g` @type ^`l7.f` @kind object;
  #L3f255a.  call temp:= `p`(v2, v0, v1) @signature `Ln7/d;.p:(Ljava/lang/Class;Ll7/f;)Ln7/d;` @kind virtual;
  #L3f2560.  v0:= constclass @type ^`java.util.Date` @kind object;
  #L3f2564.  v1:= `@@n7.d.h` @type ^`n7.d$b` @kind object;
  #L3f2568.  call temp:= `p`(v2, v0, v1) @signature `Ln7/d;.p:(Ljava/lang/Class;Ll7/f;)Ln7/d;` @kind virtual;
  #L3f256e.  return @kind void;
}
procedure `void` `b`(`java.lang.Object` v0 @kind object, `l7.e` v1 @kind object) @signature `Ln7/d;.b:(Ljava/lang/Object;Ll7/e;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3f2490.  call `l`(v0, v1) @signature `Ln7/d;.l:(Ljava/lang/Object;Ll7/e;)V` @kind static;
  #L3f2496.  return @kind void;
}
procedure `void` `c`(`java.lang.String` v0 @kind object, `l7.g` v1 @kind object) @signature `Ln7/d;.c:(Ljava/lang/String;Ll7/g;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3f24a8.  call `m`(v0, v1) @signature `Ln7/d;.m:(Ljava/lang/String;Ll7/g;)V` @kind static;
  #L3f24ae.  return @kind void;
}
procedure `void` `d`(`java.lang.Boolean` v0 @kind object, `l7.g` v1 @kind object) @signature `Ln7/d;.d:(Ljava/lang/Boolean;Ll7/g;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3f24c0.  call `n`(v0, v1) @signature `Ln7/d;.n:(Ljava/lang/Boolean;Ll7/g;)V` @kind static;
  #L3f24c6.  return @kind void;
}
procedure `java.util.Map` `e`(`n7.d` v0 @kind object) @signature `Ln7/d;.e:(Ln7/d;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3f2390.  v0:= v0.`n7.d.a` @type ^`java.util.Map` @kind object;
  #L3f2394.  return v0 @kind object;
}
procedure `java.util.Map` `f`(`n7.d` v0 @kind object) @signature `Ln7/d;.f:(Ln7/d;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3f23a8.  v0:= v0.`n7.d.b` @type ^`java.util.Map` @kind object;
  #L3f23ac.  return v0 @kind object;
}
procedure `l7.d` `g`(`n7.d` v0 @kind object) @signature `Ln7/d;.g:(Ln7/d;)Ll7/d;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3f23dc.  v0:= v0.`n7.d.c` @type ^`l7.d` @kind object;
  #L3f23e0.  return v0 @kind object;
}
procedure `boolean` `h`(`n7.d` v0 @kind object) @signature `Ln7/d;.h:(Ln7/d;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3f2378.  v0:= v0.`n7.d.d` @type ^`boolean` @kind boolean;
  #L3f237c.  return v0;
}
procedure `void` `l`(`java.lang.Object` v2 @kind object, `l7.e` v3 @kind object) @signature `Ln7/d;.l:(Ljava/lang/Object;Ll7/e;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L3f2580.  v3:= new `l7.b`;
  #L3f2584.  v0:= new `java.lang.StringBuilder`;
  #L3f2588.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f258e.  v1:= "Couldn't find encoder for type " @kind object;
  #L3f2592.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f2598.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3f259e.  v2:= temp @kind object;
  #L3f25a0.  call temp:= `getCanonicalName`(v2) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L3f25a6.  v2:= temp @kind object;
  #L3f25a8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f25ae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f25b4.  v2:= temp @kind object;
  #L3f25b6.  call `<init>`(v3, v2) @signature `Ll7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f25bc.  throw v3;
}
procedure `void` `m`(`java.lang.String` v0 @kind object, `l7.g` v1 @kind object) @signature `Ln7/d;.m:(Ljava/lang/String;Ll7/g;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L3f25d0.  call temp:= `d`(v1, v0) @signature `Ll7/g;.d:(Ljava/lang/String;)Ll7/g;` @kind interface;
  #L3f25d6.  return @kind void;
}
procedure `void` `n`(`java.lang.Boolean` v0 @kind object, `l7.g` v1 @kind object) @signature `Ln7/d;.n:(Ljava/lang/Boolean;Ll7/g;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L3f25e8.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3f25ee.  v0:= temp;
  #L3f25f0.  call temp:= `e`(v1, v0) @signature `Ll7/g;.e:(Z)Ll7/g;` @kind interface;
  #L3f25f6.  return @kind void;
}
procedure `m7.b` `a`(`n7.d` v0 @kind this, `java.lang.Class` v1 @kind object, `l7.d` v2 @kind object) @signature `Ln7/d;.a:(Ljava/lang/Class;Ll7/d;)Lm7/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f23f4.  call temp:= `o`(v0, v1, v2) @signature `Ln7/d;.o:(Ljava/lang/Class;Ll7/d;)Ln7/d;` @kind virtual;
  #L3f23fa.  v1:= temp @kind object;
  #L3f23fc.  return v1 @kind object;
}
procedure `l7.a` `i`(`n7.d` v1 @kind this) @signature `Ln7/d;.i:()Ll7/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f23c0.  v0:= new `n7.d$a`;
  #L3f23c4.  call `<init>`(v0, v1) @signature `Ln7/d$a;.<init>:(Ln7/d;)V` @kind direct;
  #L3f23ca.  return v0 @kind object;
}
procedure `n7.d` `j`(`n7.d` v0 @kind this, `m7.a` v1 @kind object) @signature `Ln7/d;.j:(Lm7/a;)Ln7/d;` @AccessFlag PUBLIC {
    temp;

  #L3f2410.  call `a`(v1, v0) @signature `Lm7/a;.a:(Lm7/b;)V` @kind interface;
  #L3f2416.  return v0 @kind object;
}
procedure `n7.d` `k`(`n7.d` v0 @kind this, `boolean` v1 ) @signature `Ln7/d;.k:(Z)Ln7/d;` @AccessFlag PUBLIC {
    temp;

  #L3f2428.  v0.`n7.d.d` @type ^`boolean` := v1 @kind boolean;
  #L3f242c.  return v0 @kind object;
}
procedure `n7.d` `o`(`n7.d` v1 @kind this, `java.lang.Class` v2 @kind object, `l7.d` v3 @kind object) @signature `Ln7/d;.o:(Ljava/lang/Class;Ll7/d;)Ln7/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f2440.  v0:= v1.`n7.d.a` @type ^`java.util.Map` @kind object;
  #L3f2444.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f244a.  v3:= v1.`n7.d.b` @type ^`java.util.Map` @kind object;
  #L3f244e.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f2454.  return v1 @kind object;
}
procedure `n7.d` `p`(`n7.d` v1 @kind this, `java.lang.Class` v2 @kind object, `l7.f` v3 @kind object) @signature `Ln7/d;.p:(Ljava/lang/Class;Ll7/f;)Ln7/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f2468.  v0:= v1.`n7.d.b` @type ^`java.util.Map` @kind object;
  #L3f246c.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f2472.  v3:= v1.`n7.d.a` @type ^`java.util.Map` @kind object;
  #L3f2476.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f247c.  return v1 @kind object;
}
