record `i0.b` @kind class @AccessFlag PUBLIC extends `i0.q` @kind class {
}
procedure `void` `<init>`(`i0.b` v0 @kind this) @signature `Li0/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L349a50.  call `<init>`(v0) @signature `Li0/q;.<init>:()V` @kind direct;
  #L349a56.  call `A0`(v0) @signature `Li0/b;.A0:()V` @kind direct;
  #L349a5c.  return @kind void;
}
procedure `void` `A0`(`i0.b` v3 @kind this) @signature `Li0/b;.A0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L349a70.  v0:= 1I;
  #L349a72.  call temp:= `x0`(v3, v0) @signature `Li0/q;.x0:(I)Li0/q;` @kind virtual;
  #L349a78.  v1:= new `i0.d`;
  #L349a7c.  v2:= 2I;
  #L349a7e.  call `<init>`(v1, v2) @signature `Li0/d;.<init>:(I)V` @kind direct;
  #L349a84.  call temp:= `p0`(v3, v1) @signature `Li0/q;.p0:(Li0/m;)Li0/q;` @kind virtual;
  #L349a8a.  v1:= temp @kind object;
  #L349a8c.  v2:= new `i0.c`;
  #L349a90.  call `<init>`(v2) @signature `Li0/c;.<init>:()V` @kind direct;
  #L349a96.  call temp:= `p0`(v1, v2) @signature `Li0/q;.p0:(Li0/m;)Li0/q;` @kind virtual;
  #L349a9c.  v1:= temp @kind object;
  #L349a9e.  v2:= new `i0.d`;
  #L349aa2.  call `<init>`(v2, v0) @signature `Li0/d;.<init>:(I)V` @kind direct;
  #L349aa8.  call temp:= `p0`(v1, v2) @signature `Li0/q;.p0:(Li0/m;)Li0/q;` @kind virtual;
  #L349aae.  return @kind void;
}
