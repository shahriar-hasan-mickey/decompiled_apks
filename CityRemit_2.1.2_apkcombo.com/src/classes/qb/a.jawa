record `qb.a` @kind class @AccessFlag PUBLIC extends `pb.a` @kind class {
}
procedure `void` `<init>`(`qb.a` v0 @kind this) @signature `Lqb/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L429610.  call `<init>`(v0) @signature `Lpb/a;.<init>:()V` @kind direct;
  #L429616.  return @kind void;
}
procedure `boolean` `c`(`qb.a` v1 @kind this, `int` v2 ) @signature `Lqb/a;.c:(I)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L4295a8.  v0:= `@@qb.a$a.a` @type ^`java.lang.Integer` @kind object;
  #L4295ac.  if v0 == 0 then goto L4295c2;
  #L4295b0.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4295b6.  v0:= temp;
  #L4295b8.  if v0 < v2 then goto L4295be;
  #L4295bc.  goto L4295c2;
  #L4295be.  v2:= 0I;
  #L4295c0.  goto L4295c4;
  #L4295c2.  v2:= 1I;
  #L4295c4.  return v2;
}
procedure `ub.c` `b`(`qb.a` v1 @kind this) @signature `Lqb/a;.b:()Lub/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4295d8.  v0:= 24I;
  #L4295dc.  call temp:= `c`(v1, v0) @signature `Lqb/a;.c:(I)Z` @kind direct;
  #L4295e2.  v0:= temp;
  #L4295e4.  if v0 == 0 then goto L4295f4;
  #L4295e8.  v0:= new `vb.a`;
  #L4295ec.  call `<init>`(v0) @signature `Lvb/a;.<init>:()V` @kind direct;
  #L4295f2.  goto L4295fc;
  #L4295f4.  call temp:= `b`(v1) @signature `Lob/a;.b:()Lub/c;` @kind super;
  #L4295fa.  v0:= temp @kind object;
  #L4295fc.  return v0 @kind object;
}
