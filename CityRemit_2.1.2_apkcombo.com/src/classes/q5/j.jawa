record `q5.j` @kind class @AccessFlag PUBLIC_FINAL extends `p5.a` @kind interface {
  `w5.a0` `q5.j.a` @AccessFlag PRIVATE_FINAL;
  `p5.a` `q5.j.b` @AccessFlag PRIVATE_FINAL;
}
global `byte`[] `@@q5.j.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lq5/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L424c28.  v0:= 0I;
  #L424c2a.  v0:= new `byte`[v0];
  #L424c2e.  `@@q5.j.c` @type ^`byte`[] := v0 @kind object;
  #L424c32.  return @kind void;
}
procedure `void` `<init>`(`q5.j` v0 @kind this, `w5.a0` v1 @kind object, `p5.a` v2 @kind object) @signature `Lq5/j;.<init>:(Lw5/a0;Lp5/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L424c44.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L424c4a.  v0.`q5.j.a` @type ^`w5.a0` := v1 @kind object;
  #L424c4e.  v0.`q5.j.b` @type ^`p5.a` := v2 @kind object;
  #L424c52.  return @kind void;
}
procedure `byte`[] `c`(`q5.j` v2 @kind this, `byte`[] v3 @kind object, `byte`[] v4 @kind object) @signature `Lq5/j;.c:([B[B)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L424ab8.  v0:= length @variable v3;
  #L424aba.  v0:= v0 + 4;
  #L424abe.  v1:= length @variable v4;
  #L424ac0.  v0:= v0 + v1 @kind int;
  #L424ac2.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L424ac8.  v0:= temp @kind object;
  #L424aca.  v1:= length @variable v3;
  #L424acc.  call temp:= `putInt`(v0, v1) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L424ad2.  v0:= temp @kind object;
  #L424ad4.  call temp:= `put`(v0, v3) @signature `Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L424ada.  v3:= temp @kind object;
  #L424adc.  call temp:= `put`(v3, v4) @signature `Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L424ae2.  v3:= temp @kind object;
  #L424ae4.  call temp:= `array`(v3) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L424aea.  v3:= temp @kind object;
  #L424aec.  return v3 @kind object;
}
procedure `byte`[] `a`(`q5.j` v4 @kind this, `byte`[] v5 @kind object, `byte`[] v6 @kind object) @signature `Lq5/j;.a:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L424bc4.  v0:= v4.`q5.j.a` @type ^`w5.a0` @kind object;
  #L424bc8.  call temp:= `o`(v0) @signature `Lp5/r;.o:(Lw5/a0;)Lcom/google/crypto/tink/shaded/protobuf/s0;` @kind static;
  #L424bce.  v0:= temp @kind object;
  #L424bd0.  call temp:= `f`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/s0;.f:()[B` @kind interface;
  #L424bd6.  v0:= temp @kind object;
  #L424bd8.  v1:= v4.`q5.j.b` @type ^`p5.a` @kind object;
  #L424bdc.  v2:= `@@q5.j.c` @type ^`byte`[] @kind object;
  #L424be0.  call temp:= `a`(v1, v0, v2) @signature `Lp5/a;.a:([B[B)[B` @kind interface;
  #L424be6.  v1:= temp @kind object;
  #L424be8.  v2:= v4.`q5.j.a` @type ^`w5.a0` @kind object;
  #L424bec.  call temp:= `T`(v2) @signature `Lw5/a0;.T:()Ljava/lang/String;` @kind virtual;
  #L424bf2.  v2:= temp @kind object;
  #L424bf4.  v3:= constclass @type ^`p5.a` @kind object;
  #L424bf8.  call temp:= `i`(v2, v0, v3) @signature `Lp5/r;.i:(Ljava/lang/String;[BLjava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L424bfe.  v0:= temp @kind object;
  #L424c00.  v0:= (`p5.a`) v0 @kind object;
  #L424c04.  call temp:= `a`(v0, v5, v6) @signature `Lp5/a;.a:([B[B)[B` @kind interface;
  #L424c0a.  v5:= temp @kind object;
  #L424c0c.  call temp:= `c`(v4, v1, v5) @signature `Lq5/j;.c:([B[B)[B` @kind direct;
  #L424c12.  v5:= temp @kind object;
  #L424c14.  return v5 @kind object;
}
procedure `byte`[] `b`(`q5.j` v5 @kind this, `byte`[] v6 @kind object, `byte`[] v7 @kind object) @signature `Lq5/j;.b:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L424b00.  v0:= "invalid ciphertext" @kind object;
  #L424b04.  call temp:= `wrap`(v6) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L424b0a.  v1:= temp @kind object;
  #L424b0c.  call temp:= `getInt`(v1) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L424b12.  v2:= temp;
  #L424b14.  if v2 <= 0 then goto L424b7e;
  #L424b18.  v6:= length @variable v6;
  #L424b1a.  v6:= v6 + -4;
  #L424b1e.  if v2 > v6 then goto L424b7e;
  #L424b22.  v6:= new `byte`[v2];
  #L424b26.  v3:= 0I;
  #L424b28.  call temp:= `get`(v1, v6, v3, v2) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L424b2e.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L424b34.  v2:= temp;
  #L424b36.  v2:= new `byte`[v2];
  #L424b3a.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L424b40.  v4:= temp;
  #L424b42.  call temp:= `get`(v1, v2, v3, v4) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L424b48.  v1:= v5.`q5.j.b` @type ^`p5.a` @kind object;
  #L424b4c.  v3:= `@@q5.j.c` @type ^`byte`[] @kind object;
  #L424b50.  call temp:= `b`(v1, v6, v3) @signature `Lp5/a;.b:([B[B)[B` @kind interface;
  #L424b56.  v6:= temp @kind object;
  #L424b58.  v1:= v5.`q5.j.a` @type ^`w5.a0` @kind object;
  #L424b5c.  call temp:= `T`(v1) @signature `Lw5/a0;.T:()Ljava/lang/String;` @kind virtual;
  #L424b62.  v1:= temp @kind object;
  #L424b64.  v3:= constclass @type ^`p5.a` @kind object;
  #L424b68.  call temp:= `i`(v1, v6, v3) @signature `Lp5/r;.i:(Ljava/lang/String;[BLjava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L424b6e.  v6:= temp @kind object;
  #L424b70.  v6:= (`p5.a`) v6 @kind object;
  #L424b74.  call temp:= `b`(v6, v2, v7) @signature `Lp5/a;.b:([B[B)[B` @kind interface;
  #L424b7a.  v6:= temp @kind object;
  #L424b7c.  return v6 @kind object;
  #L424b7e.  v6:= new `java.security.GeneralSecurityException`;
  #L424b82.  call `<init>`(v6, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L424b88.  throw v6;
  #L424b8a.  v6:= Exception @type ^`java.lang.NegativeArraySizeException` @kind object;
  #L424b8c.  goto L424b94;
  #L424b8e.  v6:= Exception @type ^`java.nio.BufferUnderflowException` @kind object;
  #L424b90.  goto L424b94;
  #L424b92.  v6:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L424b94.  v7:= new `java.security.GeneralSecurityException`;
  #L424b98.  call `<init>`(v7, v0, v6) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L424b9e.  throw v7;
  catch `java.lang.IndexOutOfBoundsException` @[L424b04..L424b8a] goto L424b92;
  catch `java.nio.BufferUnderflowException` @[L424b04..L424b8a] goto L424b8e;
  catch `java.lang.NegativeArraySizeException` @[L424b04..L424b8a] goto L424b8a;
}
