record `na.b` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `na.b.o` @AccessFlag PRIVATE_FINAL;
}
global `na.b` `@@na.b.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `na.b` `@@na.b.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `na.b`[] `@@na.b.r` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lna/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f3ed8.  v0:= new `na.b`;
  #L3f3edc.  v1:= "auto" @kind object;
  #L3f3ee0.  v2:= 0I;
  #L3f3ee2.  call `<init>`(v0, v1, v2, v1) @signature `Lna/b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3f3ee8.  `@@na.b.p` @type ^`na.b` := v0 @kind object;
  #L3f3eec.  v1:= new `na.b`;
  #L3f3ef0.  v3:= "locked" @kind object;
  #L3f3ef4.  v4:= 1I;
  #L3f3ef6.  call `<init>`(v1, v3, v4, v3) @signature `Lna/b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3f3efc.  `@@na.b.q` @type ^`na.b` := v1 @kind object;
  #L3f3f00.  v3:= 2I;
  #L3f3f02.  v3:= new `na.b`[v3];
  #L3f3f06.  v3[v2]:= v0 @kind object;
  #L3f3f0a.  v3[v4]:= v1 @kind object;
  #L3f3f0e.  `@@na.b.r` @type ^`na.b`[] := v3 @kind object;
  #L3f3f12.  return @kind void;
}
procedure `void` `<init>`(`na.b` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lna/b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3f3f24.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3f3f2a.  v0.`na.b.o` @type ^`java.lang.String` := v3 @kind object;
  #L3f3f2e.  return @kind void;
}
procedure `na.b` `c`(`java.lang.String` v5 @kind object) @signature `Lna/b;.c:(Ljava/lang/String;)Lna/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f3e50.  call temp:= `values`() @signature `Lna/b;.values:()[Lna/b;` @kind static;
  #L3f3e56.  v0:= temp @kind object;
  #L3f3e58.  v1:= length @variable v0;
  #L3f3e5a.  v2:= 0I;
  #L3f3e5c.  if v2 >= v1 then goto L3f3e7c;
  #L3f3e60.  v3:= v0[v2] @kind object;
  #L3f3e64.  v4:= v3.`na.b.o` @type ^`java.lang.String` @kind object;
  #L3f3e68.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f3e6e.  v4:= temp;
  #L3f3e70.  if v4 == 0 then goto L3f3e76;
  #L3f3e74.  return v3 @kind object;
  #L3f3e76.  v2:= v2 + 1;
  #L3f3e7a.  goto L3f3e5c;
  #L3f3e7c.  v5:= 0I;
  #L3f3e7e.  return v5 @kind object;
}
procedure `na.b` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lna/b;.valueOf:(Ljava/lang/String;)Lna/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f3e90.  v0:= constclass @type ^`na.b` @kind object;
  #L3f3e94.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3f3e9a.  v1:= temp @kind object;
  #L3f3e9c.  v1:= (`na.b`) v1 @kind object;
  #L3f3ea0.  return v1 @kind object;
}
procedure `na.b`[] `values`() @signature `Lna/b;.values:()[Lna/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f3eb4.  v0:= `@@na.b.r` @type ^`na.b`[] @kind object;
  #L3f3eb8.  call temp:= `clone`(v0) @signature `[Lna/b;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3f3ebe.  v0:= temp @kind object;
  #L3f3ec0.  v0:= (`na.b`[]) v0 @kind object;
  #L3f3ec4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`na.b` v1 @kind this) @signature `Lna/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3e38.  v0:= v1.`na.b.o` @type ^`java.lang.String` @kind object;
  #L3f3e3c.  return v0 @kind object;
}
