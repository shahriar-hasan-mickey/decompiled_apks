record `eb.a$a$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `boolean` `eb.a$a$a.o` @AccessFlag FINAL_SYNTHETIC;
  `eb.a$a` `eb.a$a$a.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`eb.a$a$a` v0 @kind this, `eb.a$a` v1 @kind object, `boolean` v2 ) @signature `Leb/a$a$a;.<init>:(Leb/a$a;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L302368.  v0.`eb.a$a$a.p` @type ^`eb.a$a` := v1 @kind object;
  #L30236c.  v0.`eb.a$a$a.o` @type ^`boolean` := v2 @kind boolean;
  #L302370.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L302376.  return @kind void;
}
procedure `void` `run`(`eb.a$a$a` v2 @kind this) @signature `Leb/a$a$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L302388.  v0:= v2.`eb.a$a$a.p` @type ^`eb.a$a` @kind object;
  #L30238c.  v0:= v0.`eb.a$a.p` @type ^`ha.k$d` @kind object;
  #L302390.  v1:= v2.`eb.a$a$a.o` @type ^`boolean` @kind boolean;
  #L302394.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L30239a.  v1:= temp @kind object;
  #L30239c.  call `a`(v0, v1) @signature `Lha/k$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L3023a2.  return @kind void;
}
