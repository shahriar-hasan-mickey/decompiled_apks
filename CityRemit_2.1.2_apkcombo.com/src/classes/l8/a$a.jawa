record `l8.a$a` @kind class @AccessFlag  extends `f8.f` @kind class {
}
procedure `void` `<init>`(`l8.a$a` v0 @kind this) @signature `Ll8/a$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3cdb44.  call `<init>`(v0) @signature `Lf8/f;.<init>:()V` @kind direct;
  #L3cdb4a.  return @kind void;
}
procedure `void` `a`(`l8.a$a` v3 @kind this, `l8.a` v4 @kind object) @signature `Ll8/a$a;.a:(Ll8/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3cdb5c.  v0:= instanceof @variable v4 @type ^`g8.f` @kind boolean;
  #L3cdb60.  if v0 == 0 then goto L3cdb70;
  #L3cdb64.  v4:= (`g8.f`) v4 @kind object;
  #L3cdb68.  call `v0`(v4) @signature `Lg8/f;.v0:()V` @kind virtual;
  #L3cdb6e.  return @kind void;
  #L3cdb70.  v0:= v4.`l8.a.v` @type ^`int`;
  #L3cdb74.  if v0 != 0 then goto L3cdb80;
  #L3cdb78.  call temp:= `i`(v4) @signature `Ll8/a;.i:()I` @kind virtual;
  #L3cdb7e.  v0:= temp;
  #L3cdb80.  v1:= 13I;
  #L3cdb84.  if v0 != v1 then goto L3cdb92;
  #L3cdb88.  v0:= 9I;
  #L3cdb8c.  v4.`l8.a.v` @type ^`int` := v0;
  #L3cdb90.  goto L3cdbae;
  #L3cdb92.  v1:= 12I;
  #L3cdb96.  if v0 != v1 then goto L3cdba0;
  #L3cdb9a.  v0:= 8I;
  #L3cdb9e.  goto L3cdb8c;
  #L3cdba0.  v1:= 14I;
  #L3cdba4.  if v0 != v1 then goto L3cdbb0;
  #L3cdba8.  v0:= 10I;
  #L3cdbac.  goto L3cdb8c;
  #L3cdbae.  return @kind void;
  #L3cdbb0.  v0:= new `java.lang.IllegalStateException`;
  #L3cdbb4.  v1:= new `java.lang.StringBuilder`;
  #L3cdbb8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cdbbe.  v2:= "Expected a name but was " @kind object;
  #L3cdbc2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cdbc8.  call temp:= `f0`(v4) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L3cdbce.  v2:= temp @kind object;
  #L3cdbd0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cdbd6.  call temp:= `J`(v4) @signature `Ll8/a;.J:()Ljava/lang/String;` @kind virtual;
  #L3cdbdc.  v4:= temp @kind object;
  #L3cdbde.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cdbe4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cdbea.  v4:= temp @kind object;
  #L3cdbec.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cdbf2.  throw v0;
}
