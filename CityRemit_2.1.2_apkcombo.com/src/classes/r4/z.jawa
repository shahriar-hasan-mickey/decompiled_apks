record `r4.z` @kind class @AccessFlag ABSTRACT extends `java.util.Iterator` @kind interface {
  `int` `r4.z.o` @AccessFlag ;
  `int` `r4.z.p` @AccessFlag ;
  `int` `r4.z.q` @AccessFlag ;
  `r4.e0` `r4.z.r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`r4.z` v0 @kind this, `r4.e0` v1 @kind object, `r4.v` v2 @kind object) @signature `Lr4/z;.<init>:(Lr4/e0;Lr4/v;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4402ec.  v0.`r4.z.r` @type ^`r4.e0` := v1 @kind object;
  #L4402f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4402f6.  call temp:= `c`(v1) @signature `Lr4/e0;.c:(Lr4/e0;)I` @kind static;
  #L4402fc.  v2:= temp;
  #L4402fe.  v0.`r4.z.o` @type ^`int` := v2;
  #L440302.  call temp:= `g`(v1) @signature `Lr4/e0;.g:()I` @kind virtual;
  #L440308.  v1:= temp;
  #L44030a.  v0.`r4.z.p` @type ^`int` := v1;
  #L44030e.  v1:= -1I;
  #L440310.  v0.`r4.z.q` @type ^`int` := v1;
  #L440314.  return @kind void;
}
procedure `void` `d`(`r4.z` v2 @kind this) @signature `Lr4/z;.d:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L44038c.  v0:= v2.`r4.z.r` @type ^`r4.e0` @kind object;
  #L440390.  call temp:= `c`(v0) @signature `Lr4/e0;.c:(Lr4/e0;)I` @kind static;
  #L440396.  v0:= temp;
  #L440398.  v1:= v2.`r4.z.o` @type ^`int`;
  #L44039c.  if v0 != v1 then goto L4403a2;
  #L4403a0.  return @kind void;
  #L4403a2.  v0:= new `java.util.ConcurrentModificationException`;
  #L4403a6.  call `<init>`(v0) @signature `Ljava/util/ConcurrentModificationException;.<init>:()V` @kind direct;
  #L4403ac.  throw v0;
}
procedure `java.lang.Object` `a`(`int` v0 ) @signature `Lr4/z;.a:(I)Ljava/lang/Object;` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `hasNext`(`r4.z` v1 @kind this) @signature `Lr4/z;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L440278.  v0:= v1.`r4.z.p` @type ^`int`;
  #L44027c.  if v0 < 0 then goto L440284;
  #L440280.  v0:= 1I;
  #L440282.  return v0;
  #L440284.  v0:= 0I;
  #L440286.  return v0;
}
procedure `java.lang.Object` `next`(`r4.z` v3 @kind this) @signature `Lr4/z;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L440298.  call `d`(v3) @signature `Lr4/z;.d:()V` @kind direct;
  #L44029e.  call temp:= `hasNext`(v3) @signature `Lr4/z;.hasNext:()Z` @kind virtual;
  #L4402a4.  v0:= temp;
  #L4402a6.  if v0 == 0 then goto L4402d0;
  #L4402aa.  v0:= v3.`r4.z.p` @type ^`int`;
  #L4402ae.  v3.`r4.z.q` @type ^`int` := v0;
  #L4402b2.  call temp:= `a`(v3, v0) @signature `Lr4/z;.a:(I)Ljava/lang/Object;` @kind virtual;
  #L4402b8.  v0:= temp @kind object;
  #L4402ba.  v1:= v3.`r4.z.r` @type ^`r4.e0` @kind object;
  #L4402be.  v2:= v3.`r4.z.p` @type ^`int`;
  #L4402c2.  call temp:= `h`(v1, v2) @signature `Lr4/e0;.h:(I)I` @kind virtual;
  #L4402c8.  v1:= temp;
  #L4402ca.  v3.`r4.z.p` @type ^`int` := v1;
  #L4402ce.  return v0 @kind object;
  #L4402d0.  v0:= new `java.util.NoSuchElementException`;
  #L4402d4.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4402da.  throw v0;
}
procedure `void` `remove`(`r4.z` v2 @kind this) @signature `Lr4/z;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L440328.  call `d`(v2) @signature `Lr4/z;.d:()V` @kind direct;
  #L44032e.  v0:= v2.`r4.z.q` @type ^`int`;
  #L440332.  if v0 < 0 then goto L44033a;
  #L440336.  v0:= 1I;
  #L440338.  goto L44033c;
  #L44033a.  v0:= 0I;
  #L44033c.  v1:= "no calls to next() since the last call to remove()" @kind object;
  #L440340.  call `d`(v0, v1) @signature `Lr4/b;.d:(ZLjava/lang/Object;)V` @kind static;
  #L440346.  v0:= v2.`r4.z.o` @type ^`int`;
  #L44034a.  v0:= v0 + 32;
  #L44034e.  v2.`r4.z.o` @type ^`int` := v0;
  #L440352.  v0:= v2.`r4.z.r` @type ^`r4.e0` @kind object;
  #L440356.  v1:= v2.`r4.z.q` @type ^`int`;
  #L44035a.  call temp:= `i`(v0, v1) @signature `Lr4/e0;.i:(Lr4/e0;I)Ljava/lang/Object;` @kind static;
  #L440360.  v1:= temp @kind object;
  #L440362.  call temp:= `remove`(v0, v1) @signature `Lr4/e0;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L440368.  v0:= v2.`r4.z.p` @type ^`int`;
  #L44036c.  v1:= -1I;
  #L44036e.  v0:= v0 + v1 @kind int;
  #L440370.  v2.`r4.z.p` @type ^`int` := v0;
  #L440374.  v2.`r4.z.q` @type ^`int` := v1;
  #L440378.  return @kind void;
}
