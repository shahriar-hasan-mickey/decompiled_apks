record `r4.d0` @kind class @AccessFlag FINAL extends `java.util.AbstractCollection` @kind class {
  `r4.e0` `r4.d0.o` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`r4.d0` v0 @kind this, `r4.e0` v1 @kind object) @signature `Lr4/d0;.<init>:(Lr4/e0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L440690.  v0.`r4.d0.o` @type ^`r4.e0` := v1 @kind object;
  #L440694.  call `<init>`(v0) @signature `Ljava/util/AbstractCollection;.<init>:()V` @kind direct;
  #L44069a.  return @kind void;
}
procedure `void` `clear`(`r4.d0` v1 @kind this) @signature `Lr4/d0;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4406ac.  v0:= v1.`r4.d0.o` @type ^`r4.e0` @kind object;
  #L4406b0.  call `clear`(v0) @signature `Lr4/e0;.clear:()V` @kind virtual;
  #L4406b6.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`r4.d0` v2 @kind this) @signature `Lr4/d0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L440650.  v0:= v2.`r4.d0.o` @type ^`r4.e0` @kind object;
  #L440654.  call temp:= `n`(v0) @signature `Lr4/e0;.n:()Ljava/util/Map;` @kind virtual;
  #L44065a.  v1:= temp @kind object;
  #L44065c.  if v1 == 0 then goto L440672;
  #L440660.  call temp:= `values`(v1) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L440666.  v0:= temp @kind object;
  #L440668.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L44066e.  v0:= temp @kind object;
  #L440670.  goto L44067e;
  #L440672.  v1:= new `r4.x`;
  #L440676.  call `<init>`(v1, v0) @signature `Lr4/x;.<init>:(Lr4/e0;)V` @kind direct;
  #L44067c.  v0:= v1 @kind object;
  #L44067e.  return v0 @kind object;
}
procedure `int` `size`(`r4.d0` v1 @kind this) @signature `Lr4/d0;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L440630.  v0:= v1.`r4.d0.o` @type ^`r4.e0` @kind object;
  #L440634.  call temp:= `size`(v0) @signature `Lr4/e0;.size:()I` @kind virtual;
  #L44063a.  v0:= temp;
  #L44063c.  return v0;
}
