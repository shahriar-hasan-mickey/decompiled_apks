record `r4.f1` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `a`(`java.util.Map` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lr4/f1;.a:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L4429c8.  call temp:= `requireNonNull`(v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4429ce.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4429d4.  v0:= temp @kind object;
  #L4429d6.  return v0 @kind object;
  #L4429d8.  v0:= 0I;
  #L4429da.  return v0 @kind object;
  catch `java.lang.ClassCastException` @[L4429ce..L4429d6] goto L4429d8;
  catch `java.lang.NullPointerException` @[L4429ce..L4429d6] goto L4429d8;
}
procedure `boolean` `b`(`java.util.Map` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lr4/f1;.b:(Ljava/util/Map;Ljava/lang/Object;)Z` @AccessFlag STATIC {
    temp;

  #L442994.  call temp:= `requireNonNull`(v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L44299a.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4429a0.  v0:= temp;
  #L4429a2.  return v0;
  #L4429a4.  v0:= 0I;
  #L4429a6.  return v0;
  catch `java.lang.ClassCastException` @[L44299a..L4429a2] goto L4429a4;
  catch `java.lang.NullPointerException` @[L44299a..L4429a2] goto L4429a4;
}
