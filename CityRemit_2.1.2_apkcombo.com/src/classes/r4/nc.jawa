record `r4.nc` @kind class @AccessFlag PUBLIC_FINAL {
  `r4.l9` `r4.nc.a` @AccessFlag PRIVATE_FINAL;
  `r4.cb` `r4.nc.b` @AccessFlag PRIVATE;
  `int` `r4.nc.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`r4.nc` v1 @kind this, `r4.l9` v2 @kind object, `int` v3 ) @signature `Lr4/nc;.<init>:(Lr4/l9;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L452500.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L452506.  v0:= new `r4.cb`;
  #L45250a.  call `<init>`(v0) @signature `Lr4/cb;.<init>:()V` @kind direct;
  #L452510.  v1.`r4.nc.b` @type ^`r4.cb` := v0 @kind object;
  #L452514.  v1.`r4.nc.a` @type ^`r4.l9` := v2 @kind object;
  #L452518.  call temp:= `a`() @signature `Lr4/wc;.a:()Lr4/wc;` @kind static;
  #L45251e.  v1.`r4.nc.c` @type ^`int` := v3;
  #L452522.  return @kind void;
}
procedure `r4.nc` `d`(`r4.l9` v2 @kind object) @signature `Lr4/nc;.d:(Lr4/l9;)Lr4/nc;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45248c.  v0:= new `r4.nc`;
  #L452490.  v1:= 0I;
  #L452492.  call `<init>`(v0, v2, v1) @signature `Lr4/nc;.<init>:(Lr4/l9;I)V` @kind direct;
  #L452498.  return v0 @kind object;
}
procedure `r4.nc` `e`(`r4.l9` v1 @kind object, `int` v2 ) @signature `Lr4/nc;.e:(Lr4/l9;I)Lr4/nc;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4524ac.  v2:= new `r4.nc`;
  #L4524b0.  v0:= 1I;
  #L4524b2.  call `<init>`(v2, v1, v0) @signature `Lr4/nc;.<init>:(Lr4/l9;I)V` @kind direct;
  #L4524b8.  return v2 @kind object;
}
procedure `int` `a`(`r4.nc` v1 @kind this) @signature `Lr4/nc;.a:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L45241c.  v0:= v1.`r4.nc.c` @type ^`int`;
  #L452420.  return v0;
}
procedure `java.lang.String` `b`(`r4.nc` v2 @kind this) @signature `Lr4/nc;.b:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L452434.  v0:= v2.`r4.nc.a` @type ^`r4.l9` @kind object;
  #L452438.  call temp:= `i`(v0) @signature `Lr4/l9;.i:()Lr4/n9;` @kind virtual;
  #L45243e.  v0:= temp @kind object;
  #L452440.  call temp:= `e`(v0) @signature `Lr4/n9;.e:()Lr4/eb;` @kind virtual;
  #L452446.  v0:= temp @kind object;
  #L452448.  if v0 == 0 then goto L452476;
  #L45244c.  call temp:= `k`(v0) @signature `Lr4/eb;.k:()Ljava/lang/String;` @kind virtual;
  #L452452.  v1:= temp @kind object;
  #L452454.  call temp:= `b`(v1) @signature `Lr4/c;.b:(Ljava/lang/String;)Z` @kind static;
  #L45245a.  v1:= temp;
  #L45245c.  if v1 != 0 then goto L452476;
  #L452460.  call temp:= `k`(v0) @signature `Lr4/eb;.k:()Ljava/lang/String;` @kind virtual;
  #L452466.  v0:= temp @kind object;
  #L452468.  call temp:= `j`(v0) @signature `Lcom/google/android/gms/common/internal/h;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L45246e.  v0:= temp @kind object;
  #L452470.  v0:= (`java.lang.String`) v0 @kind object;
  #L452474.  return v0 @kind object;
  #L452476.  v0:= "NA" @kind object;
  #L45247a.  return v0 @kind object;
}
procedure `byte`[] `c`(`r4.nc` v2 @kind this, `int` v3 , `boolean` v4 ) @signature `Lr4/nc;.c:(IZ)[B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L452320.  v4:= v2.`r4.nc.b` @type ^`r4.cb` @kind object;
  #L452324.  v0:= v3 ^~ 1;
  #L452328.  v1:= 1I;
  #L45232a.  if v1 == v0 then goto L452332;
  #L45232e.  v0:= 0I;
  #L452330.  goto L452334;
  #L452332.  v0:= 1I;
  #L452334.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L45233a.  v0:= temp @kind object;
  #L45233c.  call temp:= `f`(v4, v0) @signature `Lr4/cb;.f:(Ljava/lang/Boolean;)Lr4/cb;` @kind virtual;
  #L452342.  v4:= v2.`r4.nc.b` @type ^`r4.cb` @kind object;
  #L452346.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L45234a.  call temp:= `e`(v4, v0) @signature `Lr4/cb;.e:(Ljava/lang/Boolean;)Lr4/cb;` @kind virtual;
  #L452350.  v4:= v2.`r4.nc.a` @type ^`r4.l9` @kind object;
  #L452354.  v0:= v2.`r4.nc.b` @type ^`r4.cb` @kind object;
  #L452358.  call temp:= `m`(v0) @signature `Lr4/cb;.m:()Lr4/eb;` @kind virtual;
  #L45235e.  v0:= temp @kind object;
  #L452360.  call temp:= `h`(v4, v0) @signature `Lr4/l9;.h:(Lr4/eb;)Lr4/l9;` @kind virtual;
  #L452366.  call temp:= `a`() @signature `Lr4/wc;.a:()Lr4/wc;` @kind static;
  #L45236c.  if v3 != 0 then goto L4523b8;
  #L452370.  v3:= v2.`r4.nc.a` @type ^`r4.l9` @kind object;
  #L452374.  call temp:= `i`(v3) @signature `Lr4/l9;.i:()Lr4/n9;` @kind virtual;
  #L45237a.  v3:= temp @kind object;
  #L45237c.  v4:= new `n7.d`;
  #L452380.  call `<init>`(v4) @signature `Ln7/d;.<init>:()V` @kind direct;
  #L452386.  v0:= `@@r4.s7.a` @type ^`m7.a` @kind object;
  #L45238a.  call temp:= `j`(v4, v0) @signature `Ln7/d;.j:(Lm7/a;)Ln7/d;` @kind virtual;
  #L452390.  v4:= temp @kind object;
  #L452392.  call temp:= `k`(v4, v1) @signature `Ln7/d;.k:(Z)Ln7/d;` @kind virtual;
  #L452398.  v4:= temp @kind object;
  #L45239a.  call temp:= `i`(v4) @signature `Ln7/d;.i:()Ll7/a;` @kind virtual;
  #L4523a0.  v4:= temp @kind object;
  #L4523a2.  call temp:= `a`(v4, v3) @signature `Ll7/a;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind interface;
  #L4523a8.  v3:= temp @kind object;
  #L4523aa.  v4:= "utf-8" @kind object;
  #L4523ae.  call temp:= `getBytes`(v3, v4) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L4523b4.  v3:= temp @kind object;
  #L4523b6.  return v3 @kind object;
  #L4523b8.  v3:= v2.`r4.nc.a` @type ^`r4.l9` @kind object;
  #L4523bc.  call temp:= `i`(v3) @signature `Lr4/l9;.i:()Lr4/n9;` @kind virtual;
  #L4523c2.  v3:= temp @kind object;
  #L4523c4.  v4:= new `r4.g2`;
  #L4523c8.  call `<init>`(v4) @signature `Lr4/g2;.<init>:()V` @kind direct;
  #L4523ce.  v0:= `@@r4.s7.a` @type ^`m7.a` @kind object;
  #L4523d2.  call `a`(v0, v4) @signature `Lm7/a;.a:(Lm7/b;)V` @kind interface;
  #L4523d8.  call temp:= `b`(v4) @signature `Lr4/g2;.b:()Lr4/h2;` @kind virtual;
  #L4523de.  v4:= temp @kind object;
  #L4523e0.  call temp:= `a`(v4, v3) @signature `Lr4/h2;.a:(Ljava/lang/Object;)[B` @kind virtual;
  #L4523e6.  v3:= temp @kind object;
  #L4523e8.  return v3 @kind object;
  #L4523ea.  v3:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L4523ec.  v4:= new `java.lang.UnsupportedOperationException`;
  #L4523f0.  v0:= "Failed to covert logging to UTF-8 byte array" @kind object;
  #L4523f4.  call `<init>`(v4, v0, v3) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L4523fa.  throw v4;
  catch `java.io.UnsupportedEncodingException` @[L452366..L4523e8] goto L4523ea;
}
procedure `r4.nc` `f`(`r4.nc` v1 @kind this, `r4.k9` v2 @kind object) @signature `Lr4/nc;.f:(Lr4/k9;)Lr4/nc;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4524cc.  v0:= v1.`r4.nc.a` @type ^`r4.l9` @kind object;
  #L4524d0.  call temp:= `f`(v0, v2) @signature `Lr4/l9;.f:(Lr4/k9;)Lr4/l9;` @kind virtual;
  #L4524d6.  return v1 @kind object;
}
procedure `r4.nc` `g`(`r4.nc` v0 @kind this, `r4.cb` v1 @kind object) @signature `Lr4/nc;.g:(Lr4/cb;)Lr4/nc;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4524e8.  v0.`r4.nc.b` @type ^`r4.cb` := v1 @kind object;
  #L4524ec.  return v0 @kind object;
}
