record `r4.f` @kind class @AccessFlag FINAL extends `r4.a1` @kind class {
  `r4.h` `r4.f.o` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`r4.f` v0 @kind this, `r4.h` v1 @kind object) @signature `Lr4/f;.<init>:(Lr4/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43eb64.  v0.`r4.f.o` @type ^`r4.h` := v1 @kind object;
  #L43eb68.  call `<init>`(v0) @signature `Lr4/a1;.<init>:()V` @kind direct;
  #L43eb6e.  return @kind void;
}
procedure `java.util.Map` `b`(`r4.f` v1 @kind this) @signature `Lr4/f;.b:()Ljava/util/Map;` @AccessFlag FINAL {
    temp;
    v0;

  #L43eb4c.  v0:= v1.`r4.f.o` @type ^`r4.h` @kind object;
  #L43eb50.  return v0 @kind object;
}
procedure `boolean` `contains`(`r4.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr4/f;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43eaa4.  v0:= v1.`r4.f.o` @type ^`r4.h` @kind object;
  #L43eaa8.  v0:= v0.`r4.h.q` @type ^`java.util.Map` @kind object;
  #L43eaac.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L43eab2.  v0:= temp @kind object;
  #L43eab4.  call temp:= `requireNonNull`(v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L43eaba.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L43eac0.  v2:= temp;
  #L43eac2.  goto L43eac6;
  #L43eac4.  v2:= 0I;
  #L43eac6.  return v2;
  catch `java.lang.ClassCastException` @[L43eaba..L43eac2] goto L43eac4;
  catch `java.lang.NullPointerException` @[L43eaba..L43eac2] goto L43eac4;
}
procedure `java.util.Iterator` `iterator`(`r4.f` v2 @kind this) @signature `Lr4/f;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L43eb2c.  v0:= new `r4.g`;
  #L43eb30.  v1:= v2.`r4.f.o` @type ^`r4.h` @kind object;
  #L43eb34.  call `<init>`(v0, v1) @signature `Lr4/g;.<init>:(Lr4/h;)V` @kind direct;
  #L43eb3a.  return v0 @kind object;
}
procedure `boolean` `remove`(`r4.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr4/f;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43eae8.  call temp:= `contains`(v1, v2) @signature `Lr4/a1;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L43eaee.  v0:= temp;
  #L43eaf0.  if v0 != 0 then goto L43eaf8;
  #L43eaf4.  v2:= 0I;
  #L43eaf6.  return v2;
  #L43eaf8.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L43eafc.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L43eb02.  v0:= v1.`r4.f.o` @type ^`r4.h` @kind object;
  #L43eb06.  v0:= v0.`r4.h.r` @type ^`r4.p` @kind object;
  #L43eb0a.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L43eb10.  v2:= temp @kind object;
  #L43eb12.  call `p`(v0, v2) @signature `Lr4/p;.p:(Lr4/p;Ljava/lang/Object;)V` @kind static;
  #L43eb18.  v2:= 1I;
  #L43eb1a.  return v2;
}
