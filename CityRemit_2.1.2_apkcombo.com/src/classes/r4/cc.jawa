record `r4.cc` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`r4.cc` v0 @kind this) @signature `Lr4/cc;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4519bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4519c2.  return @kind void;
}
procedure `r4.bc` `d`(`java.lang.String` v1 @kind object) @signature `Lr4/cc;.d:(Ljava/lang/String;)Lr4/bc;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45198c.  v0:= new `r4.yb`;
  #L451990.  call `<init>`(v0) @signature `Lr4/yb;.<init>:()V` @kind direct;
  #L451996.  call temp:= `d`(v0, v1) @signature `Lr4/yb;.d:(Ljava/lang/String;)Lr4/bc;` @kind virtual;
  #L45199c.  v1:= 1I;
  #L45199e.  call temp:= `a`(v0, v1) @signature `Lr4/bc;.a:(Z)Lr4/bc;` @kind virtual;
  #L4519a4.  call temp:= `b`(v0, v1) @signature `Lr4/bc;.b:(I)Lr4/bc;` @kind virtual;
  #L4519aa.  return v0 @kind object;
}
procedure `int` `a`() @signature `Lr4/cc;.a:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `b`() @signature `Lr4/cc;.b:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `c`() @signature `Lr4/cc;.c:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
