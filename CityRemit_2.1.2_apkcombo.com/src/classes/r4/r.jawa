record `r4.r` @kind class @AccessFlag ABSTRACT extends `r4.g1` @kind interface {
  `java.util.Set` `r4.r.o` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Map` `r4.r.p` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`r4.r` v0 @kind this) @signature `Lr4/r;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43fde8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43fdee.  return @kind void;
}
procedure `java.util.Map` `c`() @signature `Lr4/r;.c:()Ljava/util/Map;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Set` `d`() @signature `Lr4/r;.d:()Ljava/util/Set;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Map` `e`(`r4.r` v1 @kind this) @signature `Lr4/r;.e:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43fd98.  v0:= v1.`r4.r.p` @type ^`java.util.Map` @kind object;
  #L43fd9c.  if v0 != 0 then goto L43fdac;
  #L43fda0.  call temp:= `c`(v1) @signature `Lr4/r;.c:()Ljava/util/Map;` @kind virtual;
  #L43fda6.  v0:= temp @kind object;
  #L43fda8.  v1.`r4.r.p` @type ^`java.util.Map` := v0 @kind object;
  #L43fdac.  return v0 @kind object;
}
procedure `boolean` `equals`(`r4.r` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr4/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43fd04.  if v2 != v1 then goto L43fd0c;
  #L43fd08.  v2:= 1I;
  #L43fd0a.  goto L43fd16;
  #L43fd0c.  v0:= instanceof @variable v2 @type ^`r4.g1` @kind boolean;
  #L43fd10.  if v0 != 0 then goto L43fd18;
  #L43fd14.  v2:= 0I;
  #L43fd16.  return v2;
  #L43fd18.  v2:= (`r4.g1`) v2 @kind object;
  #L43fd1c.  call temp:= `e`(v1) @signature `Lr4/g1;.e:()Ljava/util/Map;` @kind interface;
  #L43fd22.  v0:= temp @kind object;
  #L43fd24.  call temp:= `e`(v2) @signature `Lr4/g1;.e:()Ljava/util/Map;` @kind interface;
  #L43fd2a.  v2:= temp @kind object;
  #L43fd2c.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L43fd32.  v2:= temp;
  #L43fd34.  return v2;
}
procedure `java.util.Set` `g`(`r4.r` v1 @kind this) @signature `Lr4/r;.g:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43fdc0.  v0:= v1.`r4.r.o` @type ^`java.util.Set` @kind object;
  #L43fdc4.  if v0 != 0 then goto L43fdd4;
  #L43fdc8.  call temp:= `d`(v1) @signature `Lr4/r;.d:()Ljava/util/Set;` @kind virtual;
  #L43fdce.  v0:= temp @kind object;
  #L43fdd0.  v1.`r4.r.o` @type ^`java.util.Set` := v0 @kind object;
  #L43fdd4.  return v0 @kind object;
}
procedure `int` `hashCode`(`r4.r` v1 @kind this) @signature `Lr4/r;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43fd48.  call temp:= `e`(v1) @signature `Lr4/r;.e:()Ljava/util/Map;` @kind virtual;
  #L43fd4e.  v0:= temp @kind object;
  #L43fd50.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L43fd56.  v0:= temp;
  #L43fd58.  return v0;
}
procedure `java.lang.String` `toString`(`r4.r` v1 @kind this) @signature `Lr4/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43fd6c.  call temp:= `e`(v1) @signature `Lr4/r;.e:()Ljava/util/Map;` @kind virtual;
  #L43fd72.  v0:= temp @kind object;
  #L43fd74.  v0:= (`r4.h`) v0 @kind object;
  #L43fd78.  v0:= v0.`r4.h.q` @type ^`java.util.Map` @kind object;
  #L43fd7c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L43fd82.  v0:= temp @kind object;
  #L43fd84.  return v0 @kind object;
}
