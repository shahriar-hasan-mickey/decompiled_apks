record `r4.j` @kind class @AccessFlag FINAL extends `r4.c1` @kind class {
  `r4.p` `r4.j.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`r4.j` v0 @kind this, `r4.p` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lr4/j;.<init>:(Lr4/p;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43f044.  v0.`r4.j.p` @type ^`r4.p` := v1 @kind object;
  #L43f048.  call `<init>`(v0, v2) @signature `Lr4/c1;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L43f04e.  return @kind void;
}
procedure `void` `clear`(`r4.j` v1 @kind this) @signature `Lr4/j;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43f060.  call temp:= `iterator`(v1) @signature `Lr4/c1;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L43f066.  v0:= temp @kind object;
  #L43f068.  call `a`(v0) @signature `Lr4/s0;.a:(Ljava/util/Iterator;)V` @kind static;
  #L43f06e.  return @kind void;
}
procedure `boolean` `containsAll`(`r4.j` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lr4/j;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43ef44.  v0:= v1.`r4.c1.o` @type ^`java.util.Map` @kind object;
  #L43ef48.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L43ef4e.  v0:= temp @kind object;
  #L43ef50.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L43ef56.  v2:= temp;
  #L43ef58.  return v2;
}
procedure `boolean` `equals`(`r4.j` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr4/j;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43ef6c.  if v1 == v2 then goto L43ef8e;
  #L43ef70.  v0:= v1.`r4.c1.o` @type ^`java.util.Map` @kind object;
  #L43ef74.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L43ef7a.  v0:= temp @kind object;
  #L43ef7c.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L43ef82.  v2:= temp;
  #L43ef84.  if v2 == 0 then goto L43ef8a;
  #L43ef88.  goto L43ef8e;
  #L43ef8a.  v2:= 0I;
  #L43ef8c.  return v2;
  #L43ef8e.  v2:= 1I;
  #L43ef90.  return v2;
}
procedure `int` `hashCode`(`r4.j` v1 @kind this) @signature `Lr4/j;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43efec.  v0:= v1.`r4.c1.o` @type ^`java.util.Map` @kind object;
  #L43eff0.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L43eff6.  v0:= temp @kind object;
  #L43eff8.  call temp:= `hashCode`(v0) @signature `Ljava/util/Set;.hashCode:()I` @kind interface;
  #L43effe.  v0:= temp;
  #L43f000.  return v0;
}
procedure `java.util.Iterator` `iterator`(`r4.j` v2 @kind this) @signature `Lr4/j;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L43f014.  v0:= v2.`r4.c1.o` @type ^`java.util.Map` @kind object;
  #L43f018.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L43f01e.  v0:= temp @kind object;
  #L43f020.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L43f026.  v0:= temp @kind object;
  #L43f028.  v1:= new `r4.i`;
  #L43f02c.  call `<init>`(v1, v2, v0) @signature `Lr4/i;.<init>:(Lr4/j;Ljava/util/Iterator;)V` @kind direct;
  #L43f032.  return v1 @kind object;
}
procedure `boolean` `remove`(`r4.j` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr4/j;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43efa4.  v0:= v1.`r4.c1.o` @type ^`java.util.Map` @kind object;
  #L43efa8.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43efae.  v2:= temp @kind object;
  #L43efb0.  v2:= (`java.util.Collection`) v2 @kind object;
  #L43efb4.  if v2 == 0 then goto L43efd8;
  #L43efb8.  call temp:= `size`(v2) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L43efbe.  v0:= temp;
  #L43efc0.  call `clear`(v2) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L43efc6.  v2:= v1.`r4.j.p` @type ^`r4.p` @kind object;
  #L43efca.  call temp:= `l`(v2, v0) @signature `Lr4/p;.l:(Lr4/p;I)I` @kind static;
  #L43efd0.  if v0 <= 0 then goto L43efd8;
  #L43efd4.  v2:= 1I;
  #L43efd6.  return v2;
  #L43efd8.  v2:= 0I;
  #L43efda.  return v2;
}
