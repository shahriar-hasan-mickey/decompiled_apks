record `r4.o` @kind class @AccessFlag  extends `r4.m` @kind class, `java.util.List` @kind interface {
  `r4.p` `r4.o.t` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`r4.o` v0 @kind this, `r4.p` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.List` v3 @kind object, `r4.m` v4 @kind object) @signature `Lr4/o;.<init>:(Lr4/p;Ljava/lang/Object;Ljava/util/List;Lr4/m;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43f8e0.  v0.`r4.o.t` @type ^`r4.p` := v1 @kind object;
  #L43f8e4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lr4/m;.<init>:(Lr4/p;Ljava/lang/Object;Ljava/util/Collection;Lr4/m;)V` @kind direct;
  #L43f8ea.  return @kind void;
}
procedure `void` `add`(`r4.o` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lr4/o;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L43f8fc.  call `zzb`(v2) @signature `Lr4/m;.zzb:()V` @kind virtual;
  #L43f902.  v0:= v2.`r4.m.p` @type ^`java.util.Collection` @kind object;
  #L43f906.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L43f90c.  v0:= temp;
  #L43f90e.  v1:= v2.`r4.m.p` @type ^`java.util.Collection` @kind object;
  #L43f912.  v1:= (`java.util.List`) v1 @kind object;
  #L43f916.  call `add`(v1, v3, v4) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L43f91c.  v3:= v2.`r4.o.t` @type ^`r4.p` @kind object;
  #L43f920.  call temp:= `i`(v3) @signature `Lr4/p;.i:(Lr4/p;)I` @kind static;
  #L43f926.  if v0 == 0 then goto L43f930;
  #L43f92a.  call `b`(v2) @signature `Lr4/m;.b:()V` @kind virtual;
  #L43f930.  return @kind void;
}
procedure `boolean` `addAll`(`r4.o` v2 @kind this, `int` v3 , `java.util.Collection` v4 @kind object) @signature `Lr4/o;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L43f718.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L43f71e.  v0:= temp;
  #L43f720.  if v0 == 0 then goto L43f728;
  #L43f724.  v3:= 0I;
  #L43f726.  return v3;
  #L43f728.  call temp:= `size`(v2) @signature `Lr4/m;.size:()I` @kind virtual;
  #L43f72e.  v0:= temp;
  #L43f730.  v1:= v2.`r4.m.p` @type ^`java.util.Collection` @kind object;
  #L43f734.  v1:= (`java.util.List`) v1 @kind object;
  #L43f738.  call temp:= `addAll`(v1, v3, v4) @signature `Ljava/util/List;.addAll:(ILjava/util/Collection;)Z` @kind interface;
  #L43f73e.  v3:= temp;
  #L43f740.  if v3 == 0 then goto L43f768;
  #L43f744.  v4:= v2.`r4.m.p` @type ^`java.util.Collection` @kind object;
  #L43f748.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L43f74e.  v4:= temp;
  #L43f750.  v1:= v2.`r4.o.t` @type ^`r4.p` @kind object;
  #L43f754.  v4:= v4 - v0 @kind int;
  #L43f756.  call temp:= `k`(v1, v4) @signature `Lr4/p;.k:(Lr4/p;I)I` @kind static;
  #L43f75c.  if v0 != 0 then goto L43f768;
  #L43f760.  call `b`(v2) @signature `Lr4/m;.b:()V` @kind virtual;
  #L43f766.  v3:= 1I;
  #L43f768.  return v3;
}
procedure `java.lang.Object` `get`(`r4.o` v1 @kind this, `int` v2 ) @signature `Lr4/o;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43f7cc.  call `zzb`(v1) @signature `Lr4/m;.zzb:()V` @kind virtual;
  #L43f7d2.  v0:= v1.`r4.m.p` @type ^`java.util.Collection` @kind object;
  #L43f7d6.  v0:= (`java.util.List`) v0 @kind object;
  #L43f7da.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L43f7e0.  v2:= temp @kind object;
  #L43f7e2.  return v2 @kind object;
}
procedure `int` `indexOf`(`r4.o` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr4/o;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43f77c.  call `zzb`(v1) @signature `Lr4/m;.zzb:()V` @kind virtual;
  #L43f782.  v0:= v1.`r4.m.p` @type ^`java.util.Collection` @kind object;
  #L43f786.  v0:= (`java.util.List`) v0 @kind object;
  #L43f78a.  call temp:= `indexOf`(v0, v2) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L43f790.  v2:= temp;
  #L43f792.  return v2;
}
procedure `int` `lastIndexOf`(`r4.o` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr4/o;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43f7a4.  call `zzb`(v1) @signature `Lr4/m;.zzb:()V` @kind virtual;
  #L43f7aa.  v0:= v1.`r4.m.p` @type ^`java.util.Collection` @kind object;
  #L43f7ae.  v0:= (`java.util.List`) v0 @kind object;
  #L43f7b2.  call temp:= `lastIndexOf`(v0, v2) @signature `Ljava/util/List;.lastIndexOf:(Ljava/lang/Object;)I` @kind interface;
  #L43f7b8.  v2:= temp;
  #L43f7ba.  return v2;
}
procedure `java.util.ListIterator` `listIterator`(`r4.o` v1 @kind this) @signature `Lr4/o;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43f898.  call `zzb`(v1) @signature `Lr4/m;.zzb:()V` @kind virtual;
  #L43f89e.  v0:= new `r4.n`;
  #L43f8a2.  call `<init>`(v0, v1) @signature `Lr4/n;.<init>:(Lr4/o;)V` @kind direct;
  #L43f8a8.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`r4.o` v1 @kind this, `int` v2 ) @signature `Lr4/o;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43f8bc.  call `zzb`(v1) @signature `Lr4/m;.zzb:()V` @kind virtual;
  #L43f8c2.  v0:= new `r4.n`;
  #L43f8c6.  call `<init>`(v0, v1, v2) @signature `Lr4/n;.<init>:(Lr4/o;I)V` @kind direct;
  #L43f8cc.  return v0 @kind object;
}
procedure `java.lang.Object` `remove`(`r4.o` v1 @kind this, `int` v2 ) @signature `Lr4/o;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43f7f4.  call `zzb`(v1) @signature `Lr4/m;.zzb:()V` @kind virtual;
  #L43f7fa.  v0:= v1.`r4.m.p` @type ^`java.util.Collection` @kind object;
  #L43f7fe.  v0:= (`java.util.List`) v0 @kind object;
  #L43f802.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L43f808.  v2:= temp @kind object;
  #L43f80a.  v0:= v1.`r4.o.t` @type ^`r4.p` @kind object;
  #L43f80e.  call temp:= `j`(v0) @signature `Lr4/p;.j:(Lr4/p;)I` @kind static;
  #L43f814.  call `f`(v1) @signature `Lr4/m;.f:()V` @kind virtual;
  #L43f81a.  return v2 @kind object;
}
procedure `java.lang.Object` `set`(`r4.o` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lr4/o;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43f82c.  call `zzb`(v1) @signature `Lr4/m;.zzb:()V` @kind virtual;
  #L43f832.  v0:= v1.`r4.m.p` @type ^`java.util.Collection` @kind object;
  #L43f836.  v0:= (`java.util.List`) v0 @kind object;
  #L43f83a.  call temp:= `set`(v0, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43f840.  v2:= temp @kind object;
  #L43f842.  return v2 @kind object;
}
procedure `java.util.List` `subList`(`r4.o` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lr4/o;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L43f854.  call `zzb`(v3) @signature `Lr4/m;.zzb:()V` @kind virtual;
  #L43f85a.  v0:= v3.`r4.o.t` @type ^`r4.p` @kind object;
  #L43f85e.  v1:= v3.`r4.m.o` @type ^`java.lang.Object` @kind object;
  #L43f862.  v2:= v3.`r4.m.p` @type ^`java.util.Collection` @kind object;
  #L43f866.  v2:= (`java.util.List`) v2 @kind object;
  #L43f86a.  call temp:= `subList`(v2, v4, v5) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L43f870.  v4:= temp @kind object;
  #L43f872.  v5:= v3.`r4.m.q` @type ^`r4.m` @kind object;
  #L43f876.  if v5 == 0 then goto L43f87c;
  #L43f87a.  goto L43f87e;
  #L43f87c.  v5:= v3 @kind object;
  #L43f87e.  call temp:= `n`(v0, v1, v4, v5) @signature `Lr4/p;.n:(Ljava/lang/Object;Ljava/util/List;Lr4/m;)Ljava/util/List;` @kind virtual;
  #L43f884.  v4:= temp @kind object;
  #L43f886.  return v4 @kind object;
}
