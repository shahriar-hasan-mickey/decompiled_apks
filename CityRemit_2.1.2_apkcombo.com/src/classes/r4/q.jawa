record `r4.q` @kind class @AccessFlag ABSTRACT extends `java.util.Map$Entry` @kind interface {
}
procedure `void` `<init>`(`r4.q` v0 @kind this) @signature `Lr4/q;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43fcec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43fcf2.  return @kind void;
}
procedure `boolean` `equals`(`r4.q` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lr4/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L43fbdc.  v0:= instanceof @variable v4 @type ^`java.util.Map$Entry` @kind boolean;
  #L43fbe0.  v1:= 0I;
  #L43fbe2.  if v0 == 0 then goto L43fc26;
  #L43fbe6.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L43fbea.  call temp:= `getKey`(v3) @signature `Lr4/q;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L43fbf0.  v0:= temp @kind object;
  #L43fbf2.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L43fbf8.  v2:= temp @kind object;
  #L43fbfa.  call temp:= `a`(v0, v2) @signature `Lr4/td;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L43fc00.  v0:= temp;
  #L43fc02.  if v0 == 0 then goto L43fc26;
  #L43fc06.  call temp:= `getValue`(v3) @signature `Lr4/q;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L43fc0c.  v0:= temp @kind object;
  #L43fc0e.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L43fc14.  v4:= temp @kind object;
  #L43fc16.  call temp:= `a`(v0, v4) @signature `Lr4/td;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L43fc1c.  v4:= temp;
  #L43fc1e.  if v4 == 0 then goto L43fc26;
  #L43fc22.  v4:= 1I;
  #L43fc24.  return v4;
  #L43fc26.  return v1;
}
procedure `java.lang.Object` `getKey`() @signature `Lr4/q;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getValue`() @signature `Lr4/q;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`r4.q` v3 @kind this) @signature `Lr4/q;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L43fc38.  call temp:= `getKey`(v3) @signature `Lr4/q;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L43fc3e.  v0:= temp @kind object;
  #L43fc40.  call temp:= `getValue`(v3) @signature `Lr4/q;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L43fc46.  v1:= temp @kind object;
  #L43fc48.  v2:= 0I;
  #L43fc4a.  if v0 != 0 then goto L43fc52;
  #L43fc4e.  v0:= 0I;
  #L43fc50.  goto L43fc5a;
  #L43fc52.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L43fc58.  v0:= temp;
  #L43fc5a.  if v1 != 0 then goto L43fc60;
  #L43fc5e.  goto L43fc68;
  #L43fc60.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L43fc66.  v2:= temp;
  #L43fc68.  v0:= v0 ^~ v2 @kind int;
  #L43fc6a.  return v0;
}
procedure `java.lang.String` `toString`(`r4.q` v5 @kind this) @signature `Lr4/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L43fc7c.  call temp:= `getKey`(v5) @signature `Lr4/q;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L43fc82.  v0:= temp @kind object;
  #L43fc84.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L43fc8a.  v0:= temp @kind object;
  #L43fc8c.  call temp:= `getValue`(v5) @signature `Lr4/q;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L43fc92.  v1:= temp @kind object;
  #L43fc94.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L43fc9a.  v1:= temp @kind object;
  #L43fc9c.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L43fca2.  v2:= temp;
  #L43fca4.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L43fcaa.  v3:= temp;
  #L43fcac.  v4:= new `java.lang.StringBuilder`;
  #L43fcb0.  v2:= v2 + 1;
  #L43fcb4.  v2:= v2 + v3 @kind int;
  #L43fcb6.  call `<init>`(v4, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L43fcbc.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43fcc2.  v0:= "=" @kind object;
  #L43fcc6.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43fccc.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43fcd2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43fcd8.  v0:= temp @kind object;
  #L43fcda.  return v0 @kind object;
}
