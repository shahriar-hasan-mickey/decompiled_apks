record `r4.i2` @kind class @AccessFlag FINAL extends `l7.g` @kind interface {
  `boolean` `r4.i2.a` @AccessFlag PRIVATE;
  `boolean` `r4.i2.b` @AccessFlag PRIVATE;
  `l7.c` `r4.i2.c` @AccessFlag PRIVATE;
  `r4.e2` `r4.i2.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`r4.i2` v1 @kind this, `r4.e2` v2 @kind object) @signature `Lr4/i2;.<init>:(Lr4/e2;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L44413c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L444142.  v0:= 0I;
  #L444144.  v1.`r4.i2.a` @type ^`boolean` := v0 @kind boolean;
  #L444148.  v1.`r4.i2.b` @type ^`boolean` := v0 @kind boolean;
  #L44414c.  v1.`r4.i2.d` @type ^`r4.e2` := v2 @kind object;
  #L444150.  return @kind void;
}
procedure `void` `b`(`r4.i2` v2 @kind this) @signature `Lr4/i2;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L444184.  v0:= v2.`r4.i2.a` @type ^`boolean` @kind boolean;
  #L444188.  if v0 != 0 then goto L444194;
  #L44418c.  v0:= 1I;
  #L44418e.  v2.`r4.i2.a` @type ^`boolean` := v0 @kind boolean;
  #L444192.  return @kind void;
  #L444194.  v0:= new `l7.b`;
  #L444198.  v1:= "Cannot encode a second value in the ValueEncoderContext" @kind object;
  #L44419c.  call `<init>`(v0, v1) @signature `Ll7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4441a2.  throw v0;
}
procedure `void` `a`(`r4.i2` v1 @kind this, `l7.c` v2 @kind object, `boolean` v3 ) @signature `Lr4/i2;.a:(Ll7/c;Z)V` @AccessFlag FINAL {
    temp;
    v0;

  #L444164.  v0:= 0I;
  #L444166.  v1.`r4.i2.a` @type ^`boolean` := v0 @kind boolean;
  #L44416a.  v1.`r4.i2.c` @type ^`l7.c` := v2 @kind object;
  #L44416e.  v1.`r4.i2.b` @type ^`boolean` := v3 @kind boolean;
  #L444172.  return @kind void;
}
procedure `l7.g` `d`(`r4.i2` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lr4/i2;.d:(Ljava/lang/String;)Ll7/g;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L444110.  call `b`(v3) @signature `Lr4/i2;.b:()V` @kind direct;
  #L444116.  v0:= v3.`r4.i2.d` @type ^`r4.e2` @kind object;
  #L44411a.  v1:= v3.`r4.i2.c` @type ^`l7.c` @kind object;
  #L44411e.  v2:= v3.`r4.i2.b` @type ^`boolean` @kind boolean;
  #L444122.  call temp:= `g`(v0, v1, v4, v2) @signature `Lr4/e2;.g:(Ll7/c;Ljava/lang/Object;Z)Ll7/e;` @kind virtual;
  #L444128.  return v3 @kind object;
}
procedure `l7.g` `e`(`r4.i2` v3 @kind this, `boolean` v4 ) @signature `Lr4/i2;.e:(Z)Ll7/g;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4440e4.  call `b`(v3) @signature `Lr4/i2;.b:()V` @kind direct;
  #L4440ea.  v0:= v3.`r4.i2.d` @type ^`r4.e2` @kind object;
  #L4440ee.  v1:= v3.`r4.i2.c` @type ^`l7.c` @kind object;
  #L4440f2.  v2:= v3.`r4.i2.b` @type ^`boolean` @kind boolean;
  #L4440f6.  call temp:= `h`(v0, v1, v4, v2) @signature `Lr4/e2;.h:(Ll7/c;IZ)Lr4/e2;` @kind virtual;
  #L4440fc.  return v3 @kind object;
}
