record `r4.m1` @kind class @AccessFlag FINAL extends `r4.o0` @kind class {
  `java.lang.Object`[] `r4.m1.q` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `r4.m1.r` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `r4.m1.s` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`r4.m1` v0 @kind this, `java.lang.Object`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lr4/m1;.<init>:([Ljava/lang/Object;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L442dac.  call `<init>`(v0) @signature `Lr4/o0;.<init>:()V` @kind direct;
  #L442db2.  v0.`r4.m1.q` @type ^`java.lang.Object`[] := v1 @kind object;
  #L442db6.  v0.`r4.m1.r` @type ^`int` := v2;
  #L442dba.  v0.`r4.m1.s` @type ^`int` := v3;
  #L442dbe.  return @kind void;
}
procedure `java.lang.Object` `get`(`r4.m1` v2 @kind this, `int` v3 ) @signature `Lr4/m1;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L442d74.  v0:= v2.`r4.m1.s` @type ^`int`;
  #L442d78.  v1:= "index" @kind object;
  #L442d7c.  call temp:= `a`(v3, v0, v1) @signature `Lr4/b;.a:(IILjava/lang/String;)I` @kind static;
  #L442d82.  v0:= v2.`r4.m1.q` @type ^`java.lang.Object`[] @kind object;
  #L442d86.  v3:= v3 + v3 @kind int;
  #L442d88.  v1:= v2.`r4.m1.r` @type ^`int`;
  #L442d8c.  v3:= v3 + v1 @kind int;
  #L442d8e.  v3:= v0[v3] @kind object;
  #L442d92.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L442d98.  return v3 @kind object;
}
procedure `int` `size`(`r4.m1` v1 @kind this) @signature `Lr4/m1;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L442d5c.  v0:= v1.`r4.m1.s` @type ^`int`;
  #L442d60.  return v0;
}
