record `r4.i` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.util.Map$Entry` `r4.i.o` @AccessFlag ;
  `java.util.Iterator` `r4.i.p` @AccessFlag FINAL_SYNTHETIC;
  `r4.j` `r4.i.q` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`r4.i` v0 @kind this, `r4.j` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Lr4/i;.<init>:(Lr4/j;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43eebc.  v0.`r4.i.q` @type ^`r4.j` := v1 @kind object;
  #L43eec0.  v0.`r4.i.p` @type ^`java.util.Iterator` := v2 @kind object;
  #L43eec4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43eeca.  return @kind void;
}
procedure `boolean` `hasNext`(`r4.i` v1 @kind this) @signature `Lr4/i;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43ee6c.  v0:= v1.`r4.i.p` @type ^`java.util.Iterator` @kind object;
  #L43ee70.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L43ee76.  v0:= temp;
  #L43ee78.  return v0;
}
procedure `java.lang.Object` `next`(`r4.i` v1 @kind this) @signature `Lr4/i;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43ee8c.  v0:= v1.`r4.i.p` @type ^`java.util.Iterator` @kind object;
  #L43ee90.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L43ee96.  v0:= temp @kind object;
  #L43ee98.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L43ee9c.  v1.`r4.i.o` @type ^`java.util.Map$Entry` := v0 @kind object;
  #L43eea0.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L43eea6.  v0:= temp @kind object;
  #L43eea8.  return v0 @kind object;
}
procedure `void` `remove`(`r4.i` v3 @kind this) @signature `Lr4/i;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L43eedc.  v0:= v3.`r4.i.o` @type ^`java.util.Map$Entry` @kind object;
  #L43eee0.  if v0 == 0 then goto L43eee8;
  #L43eee4.  v0:= 1I;
  #L43eee6.  goto L43eeea;
  #L43eee8.  v0:= 0I;
  #L43eeea.  v1:= "no calls to next() since the last call to remove()" @kind object;
  #L43eeee.  call `d`(v0, v1) @signature `Lr4/b;.d:(ZLjava/lang/Object;)V` @kind static;
  #L43eef4.  v0:= v3.`r4.i.o` @type ^`java.util.Map$Entry` @kind object;
  #L43eef8.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L43eefe.  v0:= temp @kind object;
  #L43ef00.  v0:= (`java.util.Collection`) v0 @kind object;
  #L43ef04.  v1:= v3.`r4.i.p` @type ^`java.util.Iterator` @kind object;
  #L43ef08.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L43ef0e.  v1:= v3.`r4.i.q` @type ^`r4.j` @kind object;
  #L43ef12.  v1:= v1.`r4.j.p` @type ^`r4.p` @kind object;
  #L43ef16.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L43ef1c.  v2:= temp;
  #L43ef1e.  call temp:= `l`(v1, v2) @signature `Lr4/p;.l:(Lr4/p;I)I` @kind static;
  #L43ef24.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L43ef2a.  v0:= 0I;
  #L43ef2c.  v3.`r4.i.o` @type ^`java.util.Map$Entry` := v0 @kind object;
  #L43ef30.  return @kind void;
}
