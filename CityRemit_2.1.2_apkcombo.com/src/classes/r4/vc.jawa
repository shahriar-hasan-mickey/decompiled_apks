record `r4.vc` @kind class @AccessFlag PUBLIC_FINAL {
}
global `r4.uc` `@@r4.vc.a` @AccessFlag PRIVATE_STATIC;
procedure `r4.jc` `a`(`r4.cc` v3 @kind object) @signature `Lr4/vc;.a:(Lr4/cc;)Lr4/jc;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L452814.  v0:= constclass @type ^`r4.vc` @kind object;
  #L452818.  @monitorenter v0
  #L45281a.  v1:= `@@r4.vc.a` @type ^`r4.uc` @kind object;
  #L45281e.  if v1 != 0 then goto L452832;
  #L452822.  v1:= new `r4.uc`;
  #L452826.  v2:= 0I;
  #L452828.  call `<init>`(v1, v2) @signature `Lr4/uc;.<init>:(Lr4/tc;)V` @kind direct;
  #L45282e.  `@@r4.vc.a` @type ^`r4.uc` := v1 @kind object;
  #L452832.  v1:= `@@r4.vc.a` @type ^`r4.uc` @kind object;
  #L452836.  call temp:= `b`(v1, v3) @signature `Lq8/e;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L45283c.  v3:= temp @kind object;
  #L45283e.  v3:= (`r4.jc`) v3 @kind object;
  #L452842.  @monitorexit v0
  #L452844.  return v3 @kind object;
  #L452846.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L452848.  @monitorexit v0
  #L45284a.  throw v3;
  catch `java.lang.Throwable` @[L45281a..L452842] goto L452846;
}
procedure `r4.jc` `b`(`java.lang.String` v1 @kind object) @signature `Lr4/vc;.b:(Ljava/lang/String;)Lr4/jc;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L452868.  v0:= constclass @type ^`r4.vc` @kind object;
  #L45286c.  @monitorenter v0
  #L45286e.  call temp:= `d`(v1) @signature `Lr4/cc;.d:(Ljava/lang/String;)Lr4/bc;` @kind static;
  #L452874.  v1:= temp @kind object;
  #L452876.  call temp:= `c`(v1) @signature `Lr4/bc;.c:()Lr4/cc;` @kind virtual;
  #L45287c.  v1:= temp @kind object;
  #L45287e.  call temp:= `a`(v1) @signature `Lr4/vc;.a:(Lr4/cc;)Lr4/jc;` @kind static;
  #L452884.  v1:= temp @kind object;
  #L452886.  @monitorexit v0
  #L452888.  return v1 @kind object;
  #L45288a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45288c.  @monitorexit v0
  #L45288e.  throw v1;
  catch `java.lang.Throwable` @[L45286e..L452886] goto L45288a;
}
