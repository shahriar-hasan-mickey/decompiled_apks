record `r4.ac` @kind class @AccessFlag FINAL extends `r4.cc` @kind class {
  `java.lang.String` `r4.ac.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `r4.ac.b` @AccessFlag PRIVATE_FINAL;
  `int` `r4.ac.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`r4.ac` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `int` v3 , `r4.zb` v4 @kind object) @signature `Lr4/ac;.<init>:(Ljava/lang/String;ZILr4/zb;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L451950.  call `<init>`(v0) @signature `Lr4/cc;.<init>:()V` @kind direct;
  #L451956.  v0.`r4.ac.a` @type ^`java.lang.String` := v1 @kind object;
  #L45195a.  v0.`r4.ac.b` @type ^`boolean` := v2 @kind boolean;
  #L45195e.  v0.`r4.ac.c` @type ^`int` := v3;
  #L451962.  return @kind void;
}
procedure `int` `a`(`r4.ac` v1 @kind this) @signature `Lr4/ac;.a:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4518a8.  v0:= v1.`r4.ac.c` @type ^`int`;
  #L4518ac.  return v0;
}
procedure `java.lang.String` `b`(`r4.ac` v1 @kind this) @signature `Lr4/ac;.b:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L451938.  v0:= v1.`r4.ac.a` @type ^`java.lang.String` @kind object;
  #L45193c.  return v0 @kind object;
}
procedure `boolean` `c`(`r4.ac` v1 @kind this) @signature `Lr4/ac;.c:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L451844.  v0:= v1.`r4.ac.b` @type ^`boolean` @kind boolean;
  #L451848.  return v0;
}
procedure `boolean` `equals`(`r4.ac` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lr4/ac;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4517e0.  v0:= 1I;
  #L4517e2.  if v5 != v4 then goto L4517e8;
  #L4517e6.  return v0;
  #L4517e8.  v1:= instanceof @variable v5 @type ^`r4.cc` @kind boolean;
  #L4517ec.  v2:= 0I;
  #L4517ee.  if v1 == 0 then goto L451830;
  #L4517f2.  v5:= (`r4.cc`) v5 @kind object;
  #L4517f6.  v1:= v4.`r4.ac.a` @type ^`java.lang.String` @kind object;
  #L4517fa.  call temp:= `b`(v5) @signature `Lr4/cc;.b:()Ljava/lang/String;` @kind virtual;
  #L451800.  v3:= temp @kind object;
  #L451802.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L451808.  v1:= temp;
  #L45180a.  if v1 == 0 then goto L451830;
  #L45180e.  v1:= v4.`r4.ac.b` @type ^`boolean` @kind boolean;
  #L451812.  call temp:= `c`(v5) @signature `Lr4/cc;.c:()Z` @kind virtual;
  #L451818.  v3:= temp;
  #L45181a.  if v1 != v3 then goto L451830;
  #L45181e.  v1:= v4.`r4.ac.c` @type ^`int`;
  #L451822.  call temp:= `a`(v5) @signature `Lr4/cc;.a:()I` @kind virtual;
  #L451828.  v5:= temp;
  #L45182a.  if v1 != v5 then goto L451830;
  #L45182e.  return v0;
  #L451830.  return v2;
}
procedure `int` `hashCode`(`r4.ac` v4 @kind this) @signature `Lr4/ac;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45185c.  v0:= v4.`r4.ac.a` @type ^`java.lang.String` @kind object;
  #L451860.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L451866.  v0:= temp;
  #L451868.  v1:= 1000003I;
  #L45186e.  v0:= v0 ^~ v1 @kind int;
  #L451870.  v0:= v0 * v1 @kind int;
  #L451874.  v2:= v4.`r4.ac.b` @type ^`boolean` @kind boolean;
  #L451878.  v3:= 1I;
  #L45187a.  if v3 == v2 then goto L451884;
  #L45187e.  v2:= 1237I;
  #L451882.  goto L451888;
  #L451884.  v2:= 1231I;
  #L451888.  v0:= v0 ^~ v2 @kind int;
  #L45188a.  v0:= v0 * v1 @kind int;
  #L45188e.  v1:= v4.`r4.ac.c` @type ^`int`;
  #L451892.  v0:= v0 ^~ v1 @kind int;
  #L451894.  return v0;
}
procedure `java.lang.String` `toString`(`r4.ac` v5 @kind this) @signature `Lr4/ac;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4518c0.  v0:= v5.`r4.ac.a` @type ^`java.lang.String` @kind object;
  #L4518c4.  v1:= v5.`r4.ac.b` @type ^`boolean` @kind boolean;
  #L4518c8.  v2:= v5.`r4.ac.c` @type ^`int`;
  #L4518cc.  v3:= new `java.lang.StringBuilder`;
  #L4518d0.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4518d6.  v4:= temp;
  #L4518d8.  v4:= v4 + 84;
  #L4518dc.  call `<init>`(v3, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L4518e2.  v4:= "MLKitLoggingOptions{libraryName=" @kind object;
  #L4518e6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4518ec.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4518f2.  v0:= ", enableFirelog=" @kind object;
  #L4518f6.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4518fc.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L451902.  v0:= ", firelogEventType=" @kind object;
  #L451906.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45190c.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L451912.  v0:= "}" @kind object;
  #L451916.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L45191c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L451922.  v0:= temp @kind object;
  #L451924.  return v0 @kind object;
}
