record `r4.wc` @kind class @AccessFlag PUBLIC_FINAL {
}
global `r4.wc` `@@r4.wc.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`r4.wc` v0 @kind this) @signature `Lr4/wc;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4528f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4528fa.  return @kind void;
}
procedure `r4.wc` `a`() @signature `Lr4/wc;.a:()Lr4/wc;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4528ac.  v0:= constclass @type ^`r4.wc` @kind object;
  #L4528b0.  @monitorenter v0
  #L4528b2.  v1:= `@@r4.wc.a` @type ^`r4.wc` @kind object;
  #L4528b6.  if v1 != 0 then goto L4528c8;
  #L4528ba.  v1:= new `r4.wc`;
  #L4528be.  call `<init>`(v1) @signature `Lr4/wc;.<init>:()V` @kind direct;
  #L4528c4.  `@@r4.wc.a` @type ^`r4.wc` := v1 @kind object;
  #L4528c8.  v1:= `@@r4.wc.a` @type ^`r4.wc` @kind object;
  #L4528cc.  @monitorexit v0
  #L4528ce.  return v1 @kind object;
  #L4528d0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4528d2.  @monitorexit v0
  #L4528d4.  throw v1;
  catch `java.lang.Throwable` @[L4528b2..L4528cc] goto L4528d0;
}
