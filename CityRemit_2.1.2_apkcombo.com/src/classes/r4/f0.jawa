record `r4.f0` @kind class @AccessFlag FINAL {
}
procedure `int` `a`(`int` v1 ) @signature `Lr4/f0;.a:(I)I` @AccessFlag STATIC {
    temp;
    v0;

  #L4411c4.  v0:= 32I;
  #L4411c8.  if v1 >= v0 then goto L4411d0;
  #L4411cc.  v0:= 4I;
  #L4411ce.  goto L4411d2;
  #L4411d0.  v0:= 2I;
  #L4411d2.  v1:= v1 + 1;
  #L4411d6.  v0:= v0 * v1 @kind int;
  #L4411da.  return v0;
}
procedure `int` `b`(`java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `int` v11 , `java.lang.Object` v12 @kind object, `int`[] v13 @kind object, `java.lang.Object`[] v14 @kind object, `java.lang.Object`[] v15 @kind object) @signature `Lr4/f0;.b:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4411ec.  call temp:= `a`(v9) @signature `Lr4/g0;.a:(Ljava/lang/Object;)I` @kind static;
  #L4411f2.  v0:= temp;
  #L4411f4.  v1:= v0 ^& v11 @kind int;
  #L4411f8.  call temp:= `c`(v12, v1) @signature `Lr4/f0;.c:(Ljava/lang/Object;I)I` @kind static;
  #L4411fe.  v2:= temp;
  #L441200.  v3:= -1I;
  #L441202.  if v2 == 0 then goto L44126e;
  #L441206.  v4:= ~v11 @kind int;
  #L441208.  v0:= v0 ^& v4 @kind int;
  #L44120a.  v5:= -1I;
  #L44120c.  v2:= v2 + v3 @kind int;
  #L44120e.  v6:= v13[v2];
  #L441212.  v7:= v6 ^& v4 @kind int;
  #L441216.  if v7 != v0 then goto L44125e;
  #L44121a.  v7:= v14[v2] @kind object;
  #L44121e.  call temp:= `a`(v9, v7) @signature `Lr4/td;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L441224.  v7:= temp;
  #L441226.  if v7 == 0 then goto L44125e;
  #L44122a.  if v15 == 0 then goto L44123e;
  #L44122e.  v7:= v15[v2] @kind object;
  #L441232.  call temp:= `a`(v10, v7) @signature `Lr4/td;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L441238.  v7:= temp;
  #L44123a.  if v7 == 0 then goto L44125e;
  #L44123e.  v9:= v6 ^& v11 @kind int;
  #L441242.  if v5 != v3 then goto L44124e;
  #L441246.  call `e`(v12, v1, v9) @signature `Lr4/f0;.e:(Ljava/lang/Object;II)V` @kind static;
  #L44124c.  goto L44125c;
  #L44124e.  v10:= v13[v5];
  #L441252.  v10:= v10 ^& v4 @kind int;
  #L441254.  v9:= v9 ^& v11 @kind int;
  #L441256.  v9:= v9 ^| v10 @kind int;
  #L441258.  v13[v5]:= v9;
  #L44125c.  return v2;
  #L44125e.  v5:= v6 ^& v11 @kind int;
  #L441262.  if v5 == 0 then goto L44126e;
  #L441266.  v8:= v5;
  #L441268.  v5:= v2;
  #L44126a.  v2:= v8;
  #L44126c.  goto L44120c;
  #L44126e.  return v3;
}
procedure `int` `c`(`java.lang.Object` v1 @kind object, `int` v2 ) @signature `Lr4/f0;.c:(Ljava/lang/Object;I)I` @AccessFlag STATIC {
    temp;
    v0;

  #L441280.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L441284.  if v0 == 0 then goto L441296;
  #L441288.  v1:= (`byte`[]) v1 @kind object;
  #L44128c.  v1:= v1[v2] @kind byte;
  #L441290.  v1:= v1 ^& 255;
  #L441294.  return v1;
  #L441296.  v0:= instanceof @variable v1 @type ^`short`[] @kind boolean;
  #L44129a.  if v0 == 0 then goto L4412aa;
  #L44129e.  v1:= (`short`[]) v1 @kind object;
  #L4412a2.  v1:= v1[v2] @kind short;
  #L4412a6.  v1:= (`char`) v1 @kind i2c;
  #L4412a8.  return v1;
  #L4412aa.  v1:= (`int`[]) v1 @kind object;
  #L4412ae.  v1:= v1[v2];
  #L4412b2.  return v1;
}
procedure `java.lang.Object` `d`(`int` v3 ) @signature `Lr4/f0;.d:(I)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4412c4.  v0:= 2I;
  #L4412c6.  if v3 < v0 then goto L441300;
  #L4412ca.  v0:= 2.0F;
  #L4412ce.  if v3 > v0 then goto L441300;
  #L4412d2.  call temp:= `highestOneBit`(v3) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L4412d8.  v0:= temp;
  #L4412da.  if v0 != v3 then goto L441300;
  #L4412de.  v0:= 256I;
  #L4412e2.  if v3 > v0 then goto L4412ec;
  #L4412e6.  v3:= new `byte`[v3];
  #L4412ea.  return v3 @kind object;
  #L4412ec.  v0:= 65536I;
  #L4412f0.  if v3 > v0 then goto L4412fa;
  #L4412f4.  v3:= new `short`[v3];
  #L4412f8.  return v3 @kind object;
  #L4412fa.  v3:= new `int`[v3];
  #L4412fe.  return v3 @kind object;
  #L441300.  v0:= new `java.lang.IllegalArgumentException`;
  #L441304.  v1:= new `java.lang.StringBuilder`;
  #L441308.  v2:= 52I;
  #L44130c.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L441312.  v2:= "must be power of 2 between 2^1 and 2^30: " @kind object;
  #L441316.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L44131c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L441322.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L441328.  v3:= temp @kind object;
  #L44132a.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L441330.  throw v0;
}
procedure `void` `e`(`java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lr4/f0;.e:(Ljava/lang/Object;II)V` @AccessFlag STATIC {
    temp;
    v0;

  #L441344.  v0:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L441348.  if v0 == 0 then goto L441358;
  #L44134c.  v1:= (`byte`[]) v1 @kind object;
  #L441350.  v3:= (`byte`) v3 @kind i2b;
  #L441352.  v1[v2]:= v3 @kind byte;
  #L441356.  return @kind void;
  #L441358.  v0:= instanceof @variable v1 @type ^`short`[] @kind boolean;
  #L44135c.  if v0 == 0 then goto L44136c;
  #L441360.  v1:= (`short`[]) v1 @kind object;
  #L441364.  v3:= (`short`) v3 @kind i2s;
  #L441366.  v1[v2]:= v3 @kind short;
  #L44136a.  return @kind void;
  #L44136c.  v1:= (`int`[]) v1 @kind object;
  #L441370.  v1[v2]:= v3;
  #L441374.  return @kind void;
}
