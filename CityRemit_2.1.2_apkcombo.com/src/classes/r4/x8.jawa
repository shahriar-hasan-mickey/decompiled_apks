record `r4.x8` @kind class @AccessFlag PUBLIC_FINAL {
  `r4.v8` `r4.x8.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Integer` `r4.x8.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Integer` `r4.x8.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.Boolean` `r4.x8.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`r4.x8` v0 @kind this, `r4.u8` v1 @kind object, `r4.w8` v2 @kind object) @signature `Lr4/x8;.<init>:(Lr4/u8;Lr4/w8;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L44e66c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44e672.  call temp:= `c`(v1) @signature `Lr4/u8;.c:(Lr4/u8;)Lr4/v8;` @kind static;
  #L44e678.  v2:= temp @kind object;
  #L44e67a.  v0.`r4.x8.a` @type ^`r4.v8` := v2 @kind object;
  #L44e67e.  call temp:= `e`(v1) @signature `Lr4/u8;.e:(Lr4/u8;)Ljava/lang/Integer;` @kind static;
  #L44e684.  v1:= temp @kind object;
  #L44e686.  v0.`r4.x8.b` @type ^`java.lang.Integer` := v1 @kind object;
  #L44e68a.  v1:= 0I;
  #L44e68c.  v0.`r4.x8.c` @type ^`java.lang.Integer` := v1 @kind object;
  #L44e690.  v0.`r4.x8.d` @type ^`java.lang.Boolean` := v1 @kind object;
  #L44e694.  return @kind void;
}
procedure `r4.v8` `a`(`r4.x8` v1 @kind this) @signature `Lr4/x8;.a:()Lr4/v8;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L44e654.  v0:= v1.`r4.x8.a` @type ^`r4.v8` @kind object;
  #L44e658.  return v0 @kind object;
}
procedure `java.lang.Integer` `b`(`r4.x8` v1 @kind this) @signature `Lr4/x8;.b:()Ljava/lang/Integer;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L44e63c.  v0:= v1.`r4.x8.b` @type ^`java.lang.Integer` @kind object;
  #L44e640.  return v0 @kind object;
}
procedure `boolean` `equals`(`r4.x8` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lr4/x8;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L44e588.  v0:= 1I;
  #L44e58a.  if v5 != v4 then goto L44e590;
  #L44e58e.  return v0;
  #L44e590.  v1:= instanceof @variable v5 @type ^`r4.x8` @kind boolean;
  #L44e594.  v2:= 0I;
  #L44e596.  if v1 != 0 then goto L44e59c;
  #L44e59a.  return v2;
  #L44e59c.  v5:= (`r4.x8`) v5 @kind object;
  #L44e5a0.  v1:= v4.`r4.x8.a` @type ^`r4.v8` @kind object;
  #L44e5a4.  v3:= v5.`r4.x8.a` @type ^`r4.v8` @kind object;
  #L44e5a8.  call temp:= `a`(v1, v3) @signature `Lb4/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L44e5ae.  v1:= temp;
  #L44e5b0.  if v1 == 0 then goto L44e5e4;
  #L44e5b4.  v1:= v4.`r4.x8.b` @type ^`java.lang.Integer` @kind object;
  #L44e5b8.  v5:= v5.`r4.x8.b` @type ^`java.lang.Integer` @kind object;
  #L44e5bc.  call temp:= `a`(v1, v5) @signature `Lb4/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L44e5c2.  v5:= temp;
  #L44e5c4.  if v5 == 0 then goto L44e5e4;
  #L44e5c8.  v5:= 0I;
  #L44e5ca.  call temp:= `a`(v5, v5) @signature `Lb4/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L44e5d0.  v1:= temp;
  #L44e5d2.  if v1 == 0 then goto L44e5e4;
  #L44e5d6.  call temp:= `a`(v5, v5) @signature `Lb4/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L44e5dc.  v5:= temp;
  #L44e5de.  if v5 == 0 then goto L44e5e4;
  #L44e5e2.  return v0;
  #L44e5e4.  return v2;
}
procedure `int` `hashCode`(`r4.x8` v3 @kind this) @signature `Lr4/x8;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L44e5f8.  v0:= 4I;
  #L44e5fa.  v0:= new `java.lang.Object`[v0];
  #L44e5fe.  v1:= v3.`r4.x8.a` @type ^`r4.v8` @kind object;
  #L44e602.  v2:= 0I;
  #L44e604.  v0[v2]:= v1 @kind object;
  #L44e608.  v1:= v3.`r4.x8.b` @type ^`java.lang.Integer` @kind object;
  #L44e60c.  v2:= 1I;
  #L44e60e.  v0[v2]:= v1 @kind object;
  #L44e612.  v1:= 2I;
  #L44e614.  v2:= 0I;
  #L44e616.  v0[v1]:= v2 @kind object;
  #L44e61a.  v1:= 3I;
  #L44e61c.  v0[v1]:= v2 @kind object;
  #L44e620.  call temp:= `b`(v0) @signature `Lb4/i;.b:([Ljava/lang/Object;)I` @kind static;
  #L44e626.  v0:= temp;
  #L44e628.  return v0;
}
