record `r4.u` @kind class @AccessFlag FINAL {
}
procedure `int` `a`(`int` v3 , `java.lang.String` v4 @kind object) @signature `Lr4/u;.a:(ILjava/lang/String;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L43fe7c.  if v3 < 0 then goto L43fe82;
  #L43fe80.  return v3;
  #L43fe82.  v0:= new `java.lang.IllegalArgumentException`;
  #L43fe86.  v1:= new `java.lang.StringBuilder`;
  #L43fe8a.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L43fe90.  v2:= temp;
  #L43fe92.  v2:= v2 + 40;
  #L43fe96.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L43fe9c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43fea2.  v4:= " cannot be negative but was: " @kind object;
  #L43fea6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43feac.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L43feb2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43feb8.  v3:= temp @kind object;
  #L43feba.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43fec0.  throw v0;
}
procedure `void` `b`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lr4/u;.b:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L43fed4.  if v2 == 0 then goto L43ff2a;
  #L43fed8.  if v3 == 0 then goto L43fede;
  #L43fedc.  return @kind void;
  #L43fede.  v3:= new `java.lang.NullPointerException`;
  #L43fee2.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L43fee8.  v2:= temp @kind object;
  #L43feea.  v0:= new `java.lang.StringBuilder`;
  #L43feee.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L43fef4.  v1:= temp;
  #L43fef6.  v1:= v1 + 26;
  #L43fefa.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L43ff00.  v1:= "null value in entry: " @kind object;
  #L43ff04.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43ff0a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43ff10.  v2:= "=null" @kind object;
  #L43ff14.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43ff1a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43ff20.  v2:= temp @kind object;
  #L43ff22.  call `<init>`(v3, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43ff28.  throw v3;
  #L43ff2a.  v2:= new `java.lang.NullPointerException`;
  #L43ff2e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L43ff34.  v3:= temp @kind object;
  #L43ff36.  v0:= "null key in entry: null=" @kind object;
  #L43ff3a.  call temp:= `concat`(v0, v3) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L43ff40.  v3:= temp @kind object;
  #L43ff42.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43ff48.  throw v2;
}
