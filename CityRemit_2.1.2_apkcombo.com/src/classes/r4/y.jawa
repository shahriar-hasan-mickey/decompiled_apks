record `r4.y` @kind class @AccessFlag FINAL extends `java.util.AbstractSet` @kind class {
  `r4.e0` `r4.y.o` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`r4.y` v0 @kind this, `r4.e0` v1 @kind object) @signature `Lr4/y;.<init>:(Lr4/e0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L440240.  v0.`r4.y.o` @type ^`r4.e0` := v1 @kind object;
  #L440244.  call `<init>`(v0) @signature `Ljava/util/AbstractSet;.<init>:()V` @kind direct;
  #L44024a.  return @kind void;
}
procedure `void` `clear`(`r4.y` v1 @kind this) @signature `Lr4/y;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L44025c.  v0:= v1.`r4.y.o` @type ^`r4.e0` @kind object;
  #L440260.  call `clear`(v0) @signature `Lr4/e0;.clear:()V` @kind virtual;
  #L440266.  return @kind void;
}
procedure `boolean` `contains`(`r4.y` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lr4/y;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L440090.  v0:= v3.`r4.y.o` @type ^`r4.e0` @kind object;
  #L440094.  call temp:= `n`(v0) @signature `Lr4/e0;.n:()Ljava/util/Map;` @kind virtual;
  #L44009a.  v0:= temp @kind object;
  #L44009c.  if v0 == 0 then goto L4400b2;
  #L4400a0.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L4400a6.  v0:= temp @kind object;
  #L4400a8.  call temp:= `contains`(v0, v4) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4400ae.  v4:= temp;
  #L4400b0.  return v4;
  #L4400b2.  v0:= instanceof @variable v4 @type ^`java.util.Map$Entry` @kind boolean;
  #L4400b6.  v1:= 0I;
  #L4400b8.  if v0 == 0 then goto L4400fe;
  #L4400bc.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L4400c0.  v0:= v3.`r4.y.o` @type ^`r4.e0` @kind object;
  #L4400c4.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4400ca.  v2:= temp @kind object;
  #L4400cc.  call temp:= `e`(v0, v2) @signature `Lr4/e0;.e:(Lr4/e0;Ljava/lang/Object;)I` @kind static;
  #L4400d2.  v0:= temp;
  #L4400d4.  v2:= -1I;
  #L4400d6.  if v0 == v2 then goto L4400fe;
  #L4400da.  v2:= v3.`r4.y.o` @type ^`r4.e0` @kind object;
  #L4400de.  call temp:= `l`(v2, v0) @signature `Lr4/e0;.l:(Lr4/e0;I)Ljava/lang/Object;` @kind static;
  #L4400e4.  v0:= temp @kind object;
  #L4400e6.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4400ec.  v4:= temp @kind object;
  #L4400ee.  call temp:= `a`(v0, v4) @signature `Lr4/td;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4400f4.  v4:= temp;
  #L4400f6.  if v4 == 0 then goto L4400fe;
  #L4400fa.  v4:= 1I;
  #L4400fc.  return v4;
  #L4400fe.  return v1;
}
procedure `java.util.Iterator` `iterator`(`r4.y` v2 @kind this) @signature `Lr4/y;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L440200.  v0:= v2.`r4.y.o` @type ^`r4.e0` @kind object;
  #L440204.  call temp:= `n`(v0) @signature `Lr4/e0;.n:()Ljava/util/Map;` @kind virtual;
  #L44020a.  v1:= temp @kind object;
  #L44020c.  if v1 == 0 then goto L440222;
  #L440210.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L440216.  v0:= temp @kind object;
  #L440218.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L44021e.  v0:= temp @kind object;
  #L440220.  goto L44022e;
  #L440222.  v1:= new `r4.w`;
  #L440226.  call `<init>`(v1, v0) @signature `Lr4/w;.<init>:(Lr4/e0;)V` @kind direct;
  #L44022c.  v0:= v1 @kind object;
  #L44022e.  return v0 @kind object;
}
procedure `boolean` `remove`(`r4.y` v10 @kind this, `java.lang.Object` v11 @kind object) @signature `Lr4/y;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L440110.  v0:= v10.`r4.y.o` @type ^`r4.e0` @kind object;
  #L440114.  call temp:= `n`(v0) @signature `Lr4/e0;.n:()Ljava/util/Map;` @kind virtual;
  #L44011a.  v0:= temp @kind object;
  #L44011c.  if v0 == 0 then goto L440132;
  #L440120.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L440126.  v0:= temp @kind object;
  #L440128.  call temp:= `remove`(v0, v11) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L44012e.  v11:= temp;
  #L440130.  return v11;
  #L440132.  v0:= instanceof @variable v11 @type ^`java.util.Map$Entry` @kind boolean;
  #L440136.  v1:= 0I;
  #L440138.  if v0 == 0 then goto L4401ce;
  #L44013c.  v11:= (`java.util.Map$Entry`) v11 @kind object;
  #L440140.  v0:= v10.`r4.y.o` @type ^`r4.e0` @kind object;
  #L440144.  call temp:= `s`(v0) @signature `Lr4/e0;.s:()Z` @kind virtual;
  #L44014a.  v2:= temp;
  #L44014c.  if v2 == 0 then goto L440152;
  #L440150.  return v1;
  #L440152.  call temp:= `f`(v0) @signature `Lr4/e0;.f:(Lr4/e0;)I` @kind static;
  #L440158.  v0:= temp;
  #L44015a.  call temp:= `getKey`(v11) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L440160.  v3:= temp @kind object;
  #L440162.  call temp:= `getValue`(v11) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L440168.  v4:= temp @kind object;
  #L44016a.  v11:= v10.`r4.y.o` @type ^`r4.e0` @kind object;
  #L44016e.  call temp:= `m`(v11) @signature `Lr4/e0;.m:(Lr4/e0;)Ljava/lang/Object;` @kind static;
  #L440174.  v6:= temp @kind object;
  #L440176.  v11:= v10.`r4.y.o` @type ^`r4.e0` @kind object;
  #L44017a.  call temp:= `t`(v11) @signature `Lr4/e0;.t:(Lr4/e0;)[I` @kind static;
  #L440180.  v7:= temp @kind object;
  #L440182.  v11:= v10.`r4.y.o` @type ^`r4.e0` @kind object;
  #L440186.  call temp:= `u`(v11) @signature `Lr4/e0;.u:(Lr4/e0;)[Ljava/lang/Object;` @kind static;
  #L44018c.  v8:= temp @kind object;
  #L44018e.  v11:= v10.`r4.y.o` @type ^`r4.e0` @kind object;
  #L440192.  call temp:= `v`(v11) @signature `Lr4/e0;.v:(Lr4/e0;)[Ljava/lang/Object;` @kind static;
  #L440198.  v9:= temp @kind object;
  #L44019a.  v5:= v0;
  #L44019c.  call temp:= `b`(v3, v4, v5, v6, v7, v8, v9) @signature `Lr4/f0;.b:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I` @kind static;
  #L4401a2.  v11:= temp;
  #L4401a4.  v2:= -1I;
  #L4401a6.  if v11 != v2 then goto L4401ac;
  #L4401aa.  return v1;
  #L4401ac.  v1:= v10.`r4.y.o` @type ^`r4.e0` @kind object;
  #L4401b0.  call `r`(v1, v11, v0) @signature `Lr4/e0;.r:(II)V` @kind virtual;
  #L4401b6.  v11:= v10.`r4.y.o` @type ^`r4.e0` @kind object;
  #L4401ba.  call temp:= `d`(v11) @signature `Lr4/e0;.d:(Lr4/e0;)I` @kind static;
  #L4401c0.  v11:= v10.`r4.y.o` @type ^`r4.e0` @kind object;
  #L4401c4.  call `p`(v11) @signature `Lr4/e0;.p:()V` @kind virtual;
  #L4401ca.  v11:= 1I;
  #L4401cc.  return v11;
  #L4401ce.  return v1;
}
procedure `int` `size`(`r4.y` v1 @kind this) @signature `Lr4/y;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4401e0.  v0:= v1.`r4.y.o` @type ^`r4.e0` @kind object;
  #L4401e4.  call temp:= `size`(v0) @signature `Lr4/e0;.size:()I` @kind virtual;
  #L4401ea.  v0:= temp;
  #L4401ec.  return v0;
}
