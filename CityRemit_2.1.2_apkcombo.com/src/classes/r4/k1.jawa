record `r4.k1` @kind class @AccessFlag FINAL extends `r4.r0` @kind class {
  `r4.q0` `r4.k1.q` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.Object`[] `r4.k1.r` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `r4.k1.s` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`r4.k1` v0 @kind this, `r4.q0` v1 @kind object, `java.lang.Object`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lr4/k1;.<init>:(Lr4/q0;[Ljava/lang/Object;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L442c90.  call `<init>`(v0) @signature `Lr4/r0;.<init>:()V` @kind direct;
  #L442c96.  v0.`r4.k1.q` @type ^`r4.q0` := v1 @kind object;
  #L442c9a.  v0.`r4.k1.r` @type ^`java.lang.Object`[] := v2 @kind object;
  #L442c9e.  v0.`r4.k1.s` @type ^`int` := v4;
  #L442ca2.  return @kind void;
}
procedure `int` `u`(`r4.k1` v0 @kind object) @signature `Lr4/k1;.u:(Lr4/k1;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L442c20.  v0:= v0.`r4.k1.s` @type ^`int`;
  #L442c24.  return v0;
}
procedure `java.lang.Object`[] `y`(`r4.k1` v0 @kind object) @signature `Lr4/k1;.y:(Lr4/k1;)[Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L442c38.  v0:= v0.`r4.k1.r` @type ^`java.lang.Object`[] @kind object;
  #L442c3c.  return v0 @kind object;
}
procedure `int` `b`(`r4.k1` v1 @kind this, `java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Lr4/k1;.b:([Ljava/lang/Object;I)I` @AccessFlag FINAL {
    temp;
    v0;

  #L442bfc.  call temp:= `n`(v1) @signature `Lr4/r0;.n:()Lr4/o0;` @kind virtual;
  #L442c02.  v3:= temp @kind object;
  #L442c04.  v0:= 0I;
  #L442c06.  call temp:= `b`(v3, v2, v0) @signature `Lr4/j0;.b:([Ljava/lang/Object;I)I` @kind virtual;
  #L442c0c.  v2:= temp;
  #L442c0e.  return v2;
}
procedure `boolean` `contains`(`r4.k1` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lr4/k1;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L442b94.  v0:= instanceof @variable v4 @type ^`java.util.Map$Entry` @kind boolean;
  #L442b98.  v1:= 0I;
  #L442b9a.  if v0 == 0 then goto L442bd2;
  #L442b9e.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L442ba2.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L442ba8.  v0:= temp @kind object;
  #L442baa.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L442bb0.  v4:= temp @kind object;
  #L442bb2.  if v4 == 0 then goto L442bd2;
  #L442bb6.  v2:= v3.`r4.k1.q` @type ^`r4.q0` @kind object;
  #L442bba.  call temp:= `get`(v2, v0) @signature `Lr4/q0;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L442bc0.  v0:= temp @kind object;
  #L442bc2.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L442bc8.  v4:= temp;
  #L442bca.  if v4 == 0 then goto L442bd2;
  #L442bce.  v4:= 1I;
  #L442bd0.  return v4;
  #L442bd2.  return v1;
}
procedure `java.util.Iterator` `iterator`(`r4.k1` v2 @kind this) @signature `Lr4/k1;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L442c50.  call temp:= `n`(v2) @signature `Lr4/r0;.n:()Lr4/o0;` @kind virtual;
  #L442c56.  v0:= temp @kind object;
  #L442c58.  v1:= 0I;
  #L442c5a.  call temp:= `N`(v0, v1) @signature `Lr4/o0;.N:(I)Lr4/t1;` @kind virtual;
  #L442c60.  v0:= temp @kind object;
  #L442c62.  return v0 @kind object;
}
procedure `r4.o0` `p`(`r4.k1` v1 @kind this) @signature `Lr4/k1;.p:()Lr4/o0;` @AccessFlag FINAL {
    temp;
    v0;

  #L442c74.  v0:= new `r4.j1`;
  #L442c78.  call `<init>`(v0, v1) @signature `Lr4/j1;.<init>:(Lr4/k1;)V` @kind direct;
  #L442c7e.  return v0 @kind object;
}
procedure `int` `size`(`r4.k1` v1 @kind this) @signature `Lr4/k1;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L442be4.  v0:= v1.`r4.k1.s` @type ^`int`;
  #L442be8.  return v0;
}
