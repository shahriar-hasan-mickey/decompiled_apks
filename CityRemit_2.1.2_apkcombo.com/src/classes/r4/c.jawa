record `r4.c` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v11 @kind object, `java.lang.Object`[] v12 @kind object) @signature `Lr4/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L43e714.  v0:= 0I;
  #L43e716.  v1:= 0I;
  #L43e718.  v2:= length @variable v12;
  #L43e71a.  if v1 >= v2 then goto L43e858;
  #L43e71e.  v2:= v12[v1] @kind object;
  #L43e722.  if v2 != 0 then goto L43e72e;
  #L43e726.  v2:= "null" @kind object;
  #L43e72a.  goto L43e84c;
  #L43e72e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L43e734.  v2:= temp @kind object;
  #L43e736.  goto L43e84c;
  #L43e73a.  v9:= Exception @type ^`java.lang.Exception` @kind object;
  #L43e73c.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L43e742.  v3:= temp @kind object;
  #L43e744.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L43e74a.  v3:= temp @kind object;
  #L43e74c.  call temp:= `identityHashCode`(v2) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L43e752.  v2:= temp;
  #L43e754.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L43e75a.  v2:= temp @kind object;
  #L43e75c.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L43e762.  v4:= temp;
  #L43e764.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L43e76a.  v5:= temp @kind object;
  #L43e76c.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L43e772.  v5:= temp;
  #L43e774.  v6:= new `java.lang.StringBuilder`;
  #L43e778.  v4:= v4 + 1;
  #L43e77c.  v4:= v4 + v5 @kind int;
  #L43e77e.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L43e784.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e78a.  v3:= 64I;
  #L43e78e.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e794.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e79a.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43e7a0.  v2:= temp @kind object;
  #L43e7a2.  v3:= "com.google.common.base.Strings" @kind object;
  #L43e7a6.  call temp:= `getLogger`(v3) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L43e7ac.  v3:= temp @kind object;
  #L43e7ae.  v4:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L43e7b2.  v5:= "Exception during lenientFormat for " @kind object;
  #L43e7b6.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L43e7bc.  v6:= temp;
  #L43e7be.  if v6 == 0 then goto L43e7ce;
  #L43e7c2.  call temp:= `concat`(v5, v2) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L43e7c8.  v5:= temp @kind object;
  #L43e7ca.  v7:= v5 @kind object;
  #L43e7cc.  goto L43e7da;
  #L43e7ce.  v6:= new `java.lang.String`;
  #L43e7d2.  call `<init>`(v6, v5) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43e7d8.  v7:= v6 @kind object;
  #L43e7da.  v5:= "com.google.common.base.Strings" @kind object;
  #L43e7de.  v6:= "lenientToString" @kind object;
  #L43e7e2.  v8:= v9 @kind object;
  #L43e7e4.  call `logp`(v3, v4, v5, v6, v7, v8) @signature `Ljava/util/logging/Logger;.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L43e7ea.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L43e7f0.  v3:= temp @kind object;
  #L43e7f2.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L43e7f8.  v3:= temp @kind object;
  #L43e7fa.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L43e800.  v4:= temp;
  #L43e802.  v5:= new `java.lang.StringBuilder`;
  #L43e806.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L43e80c.  v6:= temp;
  #L43e80e.  v6:= v6 + 9;
  #L43e812.  v6:= v6 + v4 @kind int;
  #L43e814.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L43e81a.  v4:= "<" @kind object;
  #L43e81e.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e824.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e82a.  v2:= " threw " @kind object;
  #L43e82e.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e834.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e83a.  v2:= ">" @kind object;
  #L43e83e.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e844.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43e84a.  v2:= temp @kind object;
  #L43e84c.  v12[v1]:= v2 @kind object;
  #L43e850.  v1:= v1 + 1;
  #L43e854.  goto L43e718;
  #L43e858.  v1:= new `java.lang.StringBuilder`;
  #L43e85c.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L43e862.  v3:= temp;
  #L43e864.  v2:= v2 * 16;
  #L43e868.  v3:= v3 + v2 @kind int;
  #L43e86a.  call `<init>`(v1, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L43e870.  v2:= 0I;
  #L43e872.  v3:= length @variable v12;
  #L43e874.  if v0 >= v3 then goto L43e8ac;
  #L43e878.  v4:= "%s" @kind object;
  #L43e87c.  call temp:= `indexOf`(v11, v4, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L43e882.  v4:= temp;
  #L43e884.  v5:= -1I;
  #L43e886.  if v4 != v5 then goto L43e88c;
  #L43e88a.  goto L43e8ac;
  #L43e88c.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e892.  v2:= v0 + 1;
  #L43e896.  v0:= v12[v0] @kind object;
  #L43e89a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e8a0.  v0:= v4 + 2;
  #L43e8a4.  v10:= v2;
  #L43e8a6.  v2:= v0;
  #L43e8a8.  v0:= v10;
  #L43e8aa.  goto L43e872;
  #L43e8ac.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L43e8b2.  v4:= temp;
  #L43e8b4.  call temp:= `append`(v1, v11, v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e8ba.  if v0 >= v3 then goto L43e902;
  #L43e8be.  v11:= " [" @kind object;
  #L43e8c2.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e8c8.  v11:= v0 + 1;
  #L43e8cc.  v0:= v12[v0] @kind object;
  #L43e8d0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e8d6.  v0:= length @variable v12;
  #L43e8d8.  if v11 >= v0 then goto L43e8f8;
  #L43e8dc.  v0:= ", " @kind object;
  #L43e8e0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e8e6.  v0:= v11 + 1;
  #L43e8ea.  v11:= v12[v11] @kind object;
  #L43e8ee.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e8f4.  v11:= v0;
  #L43e8f6.  goto L43e8d6;
  #L43e8f8.  v11:= 93I;
  #L43e8fc.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L43e902.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43e908.  v11:= temp @kind object;
  #L43e90a.  return v11 @kind object;
  catch `java.lang.Exception` @[L43e72e..L43e736] goto L43e73a;
}
procedure `boolean` `b`(`java.lang.String` v0 @kind object) @signature `Lr4/c;.b:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L43e6f8.  call temp:= `a`(v0) @signature `Lr4/wd;.a:(Ljava/lang/String;)Z` @kind static;
  #L43e6fe.  v0:= temp;
  #L43e700.  return v0;
}
