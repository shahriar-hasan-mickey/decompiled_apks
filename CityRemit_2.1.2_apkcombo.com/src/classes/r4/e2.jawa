record `r4.e2` @kind class @AccessFlag FINAL extends `l7.e` @kind interface {
  `java.io.OutputStream` `r4.e2.a` @AccessFlag PRIVATE;
  `java.util.Map` `r4.e2.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `r4.e2.c` @AccessFlag PRIVATE_FINAL;
  `l7.d` `r4.e2.d` @AccessFlag PRIVATE_FINAL;
  `r4.i2` `r4.e2.e` @AccessFlag PRIVATE_FINAL;
}
global `java.nio.charset.Charset` `@@r4.e2.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `l7.c` `@@r4.e2.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `l7.c` `@@r4.e2.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `l7.d` `@@r4.e2.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lr4/e2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L443d78.  v0:= "UTF-8" @kind object;
  #L443d7c.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L443d82.  v0:= temp @kind object;
  #L443d84.  `@@r4.e2.f` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L443d88.  v0:= "key" @kind object;
  #L443d8c.  call temp:= `a`(v0) @signature `Ll7/c;.a:(Ljava/lang/String;)Ll7/c$b;` @kind static;
  #L443d92.  v0:= temp @kind object;
  #L443d94.  v1:= new `r4.x1`;
  #L443d98.  call `<init>`(v1) @signature `Lr4/x1;.<init>:()V` @kind direct;
  #L443d9e.  v2:= 1I;
  #L443da0.  call temp:= `a`(v1, v2) @signature `Lr4/x1;.a:(I)Lr4/x1;` @kind virtual;
  #L443da6.  call temp:= `b`(v1) @signature `Lr4/x1;.b:()Lr4/b2;` @kind virtual;
  #L443dac.  v1:= temp @kind object;
  #L443dae.  call temp:= `b`(v0, v1) @signature `Ll7/c$b;.b:(Ljava/lang/annotation/Annotation;)Ll7/c$b;` @kind virtual;
  #L443db4.  v0:= temp @kind object;
  #L443db6.  call temp:= `a`(v0) @signature `Ll7/c$b;.a:()Ll7/c;` @kind virtual;
  #L443dbc.  v0:= temp @kind object;
  #L443dbe.  `@@r4.e2.g` @type ^`l7.c` := v0 @kind object;
  #L443dc2.  v0:= "value" @kind object;
  #L443dc6.  call temp:= `a`(v0) @signature `Ll7/c;.a:(Ljava/lang/String;)Ll7/c$b;` @kind static;
  #L443dcc.  v0:= temp @kind object;
  #L443dce.  v1:= new `r4.x1`;
  #L443dd2.  call `<init>`(v1) @signature `Lr4/x1;.<init>:()V` @kind direct;
  #L443dd8.  v2:= 2I;
  #L443dda.  call temp:= `a`(v1, v2) @signature `Lr4/x1;.a:(I)Lr4/x1;` @kind virtual;
  #L443de0.  call temp:= `b`(v1) @signature `Lr4/x1;.b:()Lr4/b2;` @kind virtual;
  #L443de6.  v1:= temp @kind object;
  #L443de8.  call temp:= `b`(v0, v1) @signature `Ll7/c$b;.b:(Ljava/lang/annotation/Annotation;)Ll7/c$b;` @kind virtual;
  #L443dee.  v0:= temp @kind object;
  #L443df0.  call temp:= `a`(v0) @signature `Ll7/c$b;.a:()Ll7/c;` @kind virtual;
  #L443df6.  v0:= temp @kind object;
  #L443df8.  `@@r4.e2.h` @type ^`l7.c` := v0 @kind object;
  #L443dfc.  v0:= `@@r4.d2.a` @type ^`r4.d2` @kind object;
  #L443e00.  `@@r4.e2.i` @type ^`l7.d` := v0 @kind object;
  #L443e04.  return @kind void;
}
procedure `void` `<init>`(`r4.e2` v1 @kind this, `java.io.OutputStream` v2 @kind object, `java.util.Map` v3 @kind object, `java.util.Map` v4 @kind object, `l7.d` v5 @kind object) @signature `Lr4/e2;.<init>:(Ljava/io/OutputStream;Ljava/util/Map;Ljava/util/Map;Ll7/d;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L443e18.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L443e1e.  v0:= new `r4.i2`;
  #L443e22.  call `<init>`(v0, v1) @signature `Lr4/i2;.<init>:(Lr4/e2;)V` @kind direct;
  #L443e28.  v1.`r4.e2.e` @type ^`r4.i2` := v0 @kind object;
  #L443e2c.  v1.`r4.e2.a` @type ^`java.io.OutputStream` := v2 @kind object;
  #L443e30.  v1.`r4.e2.b` @type ^`java.util.Map` := v3 @kind object;
  #L443e34.  v1.`r4.e2.c` @type ^`java.util.Map` := v4 @kind object;
  #L443e38.  v1.`r4.e2.d` @type ^`l7.d` := v5 @kind object;
  #L443e3c.  return @kind void;
}
procedure `void` `k`(`java.util.Map$Entry` v2 @kind object, `l7.e` v3 @kind object) @signature `Lr4/e2;.k:(Ljava/util/Map$Entry;Ll7/e;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L443e50.  v0:= `@@r4.e2.g` @type ^`l7.c` @kind object;
  #L443e54.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L443e5a.  v1:= temp @kind object;
  #L443e5c.  call temp:= `f`(v3, v0, v1) @signature `Ll7/e;.f:(Ll7/c;Ljava/lang/Object;)Ll7/e;` @kind interface;
  #L443e62.  v0:= `@@r4.e2.h` @type ^`l7.c` @kind object;
  #L443e66.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L443e6c.  v2:= temp @kind object;
  #L443e6e.  call temp:= `f`(v3, v0, v2) @signature `Ll7/e;.f:(Ll7/c;Ljava/lang/Object;)Ll7/e;` @kind interface;
  #L443e74.  return @kind void;
}
procedure `int` `l`(`l7.c` v1 @kind object) @signature `Lr4/e2;.l:(Ll7/c;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L443694.  v0:= constclass @type ^`r4.b2` @kind object;
  #L443698.  call temp:= `c`(v1, v0) @signature `Ll7/c;.c:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L44369e.  v1:= temp @kind object;
  #L4436a0.  v1:= (`r4.b2`) v1 @kind object;
  #L4436a4.  if v1 == 0 then goto L4436b2;
  #L4436a8.  call temp:= `zza`(v1) @signature `Lr4/b2;.zza:()I` @kind interface;
  #L4436ae.  v1:= temp;
  #L4436b0.  return v1;
  #L4436b2.  v1:= new `l7.b`;
  #L4436b6.  v0:= "Field has no @Protobuf config" @kind object;
  #L4436ba.  call `<init>`(v1, v0) @signature `Ll7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4436c0.  throw v1;
}
procedure `long` `m`(`r4.e2` v2 @kind this, `l7.d` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lr4/e2;.m:(Ll7/d;Ljava/lang/Object;)J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L443a50.  v0:= new `r4.y1`;
  #L443a54.  call `<init>`(v0) @signature `Lr4/y1;.<init>:()V` @kind direct;
  #L443a5a.  v1:= v2.`r4.e2.a` @type ^`java.io.OutputStream` @kind object;
  #L443a5e.  v2.`r4.e2.a` @type ^`java.io.OutputStream` := v0 @kind object;
  #L443a62.  call `a`(v3, v4, v2) @signature `Ll7/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L443a68.  v2.`r4.e2.a` @type ^`java.io.OutputStream` := v1 @kind object;
  #L443a6c.  call temp:= `a`(v0) @signature `Lr4/y1;.a:()J` @kind virtual;
  #L443a72.  v3:= temp @kind wide;
  #L443a74.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L443a7a.  return v3 @kind wide;
  #L443a7c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L443a7e.  v2.`r4.e2.a` @type ^`java.io.OutputStream` := v1 @kind object;
  #L443a82.  throw v3;
  #L443a84.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L443a86.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L443a8c.  throw v3;
  catch `java.lang.Throwable` @[L443a5a..L443a62] goto L443a84;
  catch `java.lang.Throwable` @[L443a62..L443a68] goto L443a7c;
  catch `java.lang.Throwable` @[L443a68..L443a74] goto L443a84;
  catch `java.lang.Throwable` @[L443a7e..L443a84] goto L443a84;
  catch `java.lang.Throwable` @[L443a86..L443a8c] goto L443a8c;
}
procedure `r4.b2` `n`(`l7.c` v1 @kind object) @signature `Lr4/e2;.n:(Ll7/c;)Lr4/b2;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L443ad0.  v0:= constclass @type ^`r4.b2` @kind object;
  #L443ad4.  call temp:= `c`(v1, v0) @signature `Ll7/c;.c:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L443ada.  v1:= temp @kind object;
  #L443adc.  v1:= (`r4.b2`) v1 @kind object;
  #L443ae0.  if v1 == 0 then goto L443ae6;
  #L443ae4.  return v1 @kind object;
  #L443ae6.  v1:= new `l7.b`;
  #L443aea.  v0:= "Field has no @Protobuf config" @kind object;
  #L443aee.  call `<init>`(v1, v0) @signature `Ll7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L443af4.  throw v1;
}
procedure `r4.e2` `o`(`r4.e2` v4 @kind this, `l7.d` v5 @kind object, `l7.c` v6 @kind object, `java.lang.Object` v7 @kind object, `boolean` v8 ) @signature `Lr4/e2;.o:(Ll7/d;Ll7/c;Ljava/lang/Object;Z)Lr4/e2;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L443d00.  call temp:= `m`(v4, v5, v7) @signature `Lr4/e2;.m:(Ll7/d;Ljava/lang/Object;)J` @kind direct;
  #L443d06.  v0:= temp @kind wide;
  #L443d08.  if v8 == 0 then goto L443d1a;
  #L443d0c.  v2:= 0L;
  #L443d10.  v8:= lcmp(v0, v2);
  #L443d14.  if v8 != 0 then goto L443d1a;
  #L443d18.  return v4 @kind object;
  #L443d1a.  call temp:= `l`(v6) @signature `Lr4/e2;.l:(Ll7/c;)I` @kind static;
  #L443d20.  v6:= temp;
  #L443d22.  v6:= v6 ^< 3;
  #L443d26.  v6:= v6 ^| 2;
  #L443d2a.  call `r`(v4, v6) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L443d30.  call `s`(v4, v0) @signature `Lr4/e2;.s:(J)V` @kind direct;
  #L443d36.  call `a`(v5, v7, v4) @signature `Ll7/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L443d3c.  return v4 @kind object;
}
procedure `r4.e2` `p`(`r4.e2` v1 @kind this, `l7.f` v2 @kind object, `l7.c` v3 @kind object, `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lr4/e2;.p:(Ll7/f;Ll7/c;Ljava/lang/Object;Z)Lr4/e2;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L443d50.  v0:= v1.`r4.e2.e` @type ^`r4.i2` @kind object;
  #L443d54.  call `a`(v0, v3, v5) @signature `Lr4/i2;.a:(Ll7/c;Z)V` @kind virtual;
  #L443d5a.  v3:= v1.`r4.e2.e` @type ^`r4.i2` @kind object;
  #L443d5e.  call `a`(v2, v4, v3) @signature `Ll7/f;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L443d64.  return v1 @kind object;
}
procedure `java.nio.ByteBuffer` `q`(`int` v1 ) @signature `Lr4/e2;.q:(I)Ljava/nio/ByteBuffer;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4436d4.  call temp:= `allocate`(v1) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L4436da.  v1:= temp @kind object;
  #L4436dc.  v0:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L4436e0.  call temp:= `order`(v1, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L4436e6.  v1:= temp @kind object;
  #L4436e8.  return v1 @kind object;
}
procedure `void` `r`(`r4.e2` v5 @kind this, `int` v6 ) @signature `Lr4/e2;.r:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L443e88.  v0:= v6 ^& -128;
  #L443e8c.  v0:= (`long`) v0 @kind i2l;
  #L443e8e.  v2:= 0L;
  #L443e92.  v4:= lcmp(v0, v2);
  #L443e96.  v0:= v5.`r4.e2.a` @type ^`java.io.OutputStream` @kind object;
  #L443e9a.  if v4 == 0 then goto L443eb2;
  #L443e9e.  v1:= v6 ^& 127;
  #L443ea2.  v1:= v1 ^| 128;
  #L443ea6.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L443eac.  v6:= v6 ^>> 7;
  #L443eb0.  goto L443e88;
  #L443eb2.  v6:= v6 ^& 127;
  #L443eb6.  call `write`(v0, v6) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L443ebc.  return @kind void;
}
procedure `void` `s`(`r4.e2` v5 @kind this, `long` v6 ) @signature `Lr4/e2;.s:(J)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L443ed0.  v0:= -128L;
  #L443ed4.  v0:= v0 ^& v6 @kind long;
  #L443ed6.  v2:= 0L;
  #L443eda.  v4:= lcmp(v0, v2);
  #L443ede.  v0:= v5.`r4.e2.a` @type ^`java.io.OutputStream` @kind object;
  #L443ee2.  if v4 == 0 then goto L443efc;
  #L443ee6.  v1:= (`int`) v6 @kind l2i;
  #L443ee8.  v1:= v1 ^& 127;
  #L443eec.  v1:= v1 ^| 128;
  #L443ef0.  call `write`(v0, v1) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L443ef6.  v0:= 7I;
  #L443ef8.  v6:= v6 ^>> v0 @kind long;
  #L443efa.  goto L443ed0;
  #L443efc.  v7:= (`int`) v6 @kind l2i;
  #L443efe.  v6:= v7 ^& 127;
  #L443f02.  call `write`(v0, v6) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L443f08.  return @kind void;
}
procedure `l7.e` `a`(`r4.e2` v1 @kind this, `l7.c` v2 @kind object, `int` v3 ) @signature `Lr4/e2;.a:(Ll7/c;I)Ll7/e;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L443718.  v0:= 1I;
  #L44371a.  call temp:= `h`(v1, v2, v3, v0) @signature `Lr4/e2;.h:(Ll7/c;IZ)Lr4/e2;` @kind virtual;
  #L443720.  return v1 @kind object;
}
procedure `l7.e` `b`(`r4.e2` v1 @kind this, `l7.c` v2 @kind object, `long` v3 ) @signature `Lr4/e2;.b:(Ll7/c;J)Ll7/e;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L443750.  v0:= 1I;
  #L443752.  call temp:= `i`(v1, v2, v3, v0) @signature `Lr4/e2;.i:(Ll7/c;JZ)Lr4/e2;` @kind virtual;
  #L443758.  return v1 @kind object;
}
procedure `l7.e` `c`(`r4.e2` v1 @kind this, `l7.c` v2 @kind object, `boolean` v3 ) @signature `Lr4/e2;.c:(Ll7/c;Z)Ll7/e;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L4436fc.  v0:= 1I;
  #L4436fe.  call temp:= `h`(v1, v2, v3, v0) @signature `Lr4/e2;.h:(Ll7/c;IZ)Lr4/e2;` @kind virtual;
  #L443704.  return v1 @kind object;
}
procedure `l7.e` `d`(`r4.e2` v2 @kind this, `l7.c` v3 @kind object, `double` v4 , `boolean` v6 ) @signature `Lr4/e2;.d:(Ll7/c;DZ)Ll7/e;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L44376c.  if v6 == 0 then goto L44377e;
  #L443770.  v0:= 0L;
  #L443774.  v6:= dcmpl(v4, v0);
  #L443778.  if v6 != 0 then goto L44377e;
  #L44377c.  return v2 @kind object;
  #L44377e.  call temp:= `l`(v3) @signature `Lr4/e2;.l:(Ll7/c;)I` @kind static;
  #L443784.  v3:= temp;
  #L443786.  v3:= v3 ^< 3;
  #L44378a.  v3:= v3 ^| 1;
  #L44378e.  call `r`(v2, v3) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L443794.  v3:= v2.`r4.e2.a` @type ^`java.io.OutputStream` @kind object;
  #L443798.  v6:= 8I;
  #L44379c.  call temp:= `q`(v6) @signature `Lr4/e2;.q:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L4437a2.  v6:= temp @kind object;
  #L4437a4.  call temp:= `putDouble`(v6, v4) @signature `Ljava/nio/ByteBuffer;.putDouble:(D)Ljava/nio/ByteBuffer;` @kind virtual;
  #L4437aa.  v4:= temp @kind object;
  #L4437ac.  call temp:= `array`(v4) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L4437b2.  v4:= temp @kind object;
  #L4437b4.  call `write`(v3, v4) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L4437ba.  return v2 @kind object;
}
procedure `l7.e` `e`(`r4.e2` v0 @kind this, `l7.c` v1 @kind object, `float` v2 , `boolean` v3 ) @signature `Lr4/e2;.e:(Ll7/c;FZ)Ll7/e;` @AccessFlag FINAL {
    temp;

  #L4437cc.  if v3 == 0 then goto L4437dc;
  #L4437d0.  v3:= 0I;
  #L4437d2.  v3:= fcmpl(v2, v3);
  #L4437d6.  if v3 != 0 then goto L4437dc;
  #L4437da.  return v0 @kind object;
  #L4437dc.  call temp:= `l`(v1) @signature `Lr4/e2;.l:(Ll7/c;)I` @kind static;
  #L4437e2.  v1:= temp;
  #L4437e4.  v1:= v1 ^< 3;
  #L4437e8.  v1:= v1 ^| 5;
  #L4437ec.  call `r`(v0, v1) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L4437f2.  v1:= v0.`r4.e2.a` @type ^`java.io.OutputStream` @kind object;
  #L4437f6.  v3:= 4I;
  #L4437f8.  call temp:= `q`(v3) @signature `Lr4/e2;.q:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L4437fe.  v3:= temp @kind object;
  #L443800.  call temp:= `putFloat`(v3, v2) @signature `Ljava/nio/ByteBuffer;.putFloat:(F)Ljava/nio/ByteBuffer;` @kind virtual;
  #L443806.  v2:= temp @kind object;
  #L443808.  call temp:= `array`(v2) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L44380e.  v2:= temp @kind object;
  #L443810.  call `write`(v1, v2) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L443816.  return v0 @kind object;
}
procedure `l7.e` `f`(`r4.e2` v1 @kind this, `l7.c` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lr4/e2;.f:(Ll7/c;Ljava/lang/Object;)Ll7/e;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L443734.  v0:= 1I;
  #L443736.  call temp:= `g`(v1, v2, v3, v0) @signature `Lr4/e2;.g:(Ll7/c;Ljava/lang/Object;Z)Ll7/e;` @kind virtual;
  #L44373c.  return v1 @kind object;
}
procedure `l7.e` `g`(`r4.e2` v2 @kind this, `l7.c` v3 @kind object, `java.lang.Object` v4 @kind object, `boolean` v5 ) @signature `Lr4/e2;.g:(Ll7/c;Ljava/lang/Object;Z)Ll7/e;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L443828.  if v4 != 0 then goto L44382e;
  #L44382c.  return v2 @kind object;
  #L44382e.  v0:= instanceof @variable v4 @type ^`java.lang.CharSequence` @kind boolean;
  #L443832.  if v0 == 0 then goto L44388a;
  #L443836.  v4:= (`java.lang.CharSequence`) v4 @kind object;
  #L44383a.  if v5 == 0 then goto L44384c;
  #L44383e.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L443844.  v5:= temp;
  #L443846.  if v5 != 0 then goto L44384c;
  #L44384a.  return v2 @kind object;
  #L44384c.  call temp:= `l`(v3) @signature `Lr4/e2;.l:(Ll7/c;)I` @kind static;
  #L443852.  v3:= temp;
  #L443854.  v3:= v3 ^< 3;
  #L443858.  v3:= v3 ^| 2;
  #L44385c.  call `r`(v2, v3) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L443862.  call temp:= `toString`(v4) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L443868.  v3:= temp @kind object;
  #L44386a.  v4:= `@@r4.e2.f` @type ^`java.nio.charset.Charset` @kind object;
  #L44386e.  call temp:= `getBytes`(v3, v4) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L443874.  v3:= temp @kind object;
  #L443876.  v4:= length @variable v3;
  #L443878.  call `r`(v2, v4) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L44387e.  v4:= v2.`r4.e2.a` @type ^`java.io.OutputStream` @kind object;
  #L443882.  call `write`(v4, v3) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L443888.  return v2 @kind object;
  #L44388a.  v0:= instanceof @variable v4 @type ^`java.util.Collection` @kind boolean;
  #L44388e.  v1:= 0I;
  #L443890.  if v0 == 0 then goto L4438be;
  #L443894.  v4:= (`java.util.Collection`) v4 @kind object;
  #L443898.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L44389e.  v4:= temp @kind object;
  #L4438a0.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4438a6.  v5:= temp;
  #L4438a8.  if v5 == 0 then goto L4438bc;
  #L4438ac.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4438b2.  v5:= temp @kind object;
  #L4438b4.  call temp:= `g`(v2, v3, v5, v1) @signature `Lr4/e2;.g:(Ll7/c;Ljava/lang/Object;Z)Ll7/e;` @kind virtual;
  #L4438ba.  goto L4438a0;
  #L4438bc.  return v2 @kind object;
  #L4438be.  v0:= instanceof @variable v4 @type ^`java.util.Map` @kind boolean;
  #L4438c2.  if v0 == 0 then goto L443900;
  #L4438c6.  v4:= (`java.util.Map`) v4 @kind object;
  #L4438ca.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L4438d0.  v4:= temp @kind object;
  #L4438d2.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4438d8.  v4:= temp @kind object;
  #L4438da.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4438e0.  v5:= temp;
  #L4438e2.  if v5 == 0 then goto L4438fe;
  #L4438e6.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4438ec.  v5:= temp @kind object;
  #L4438ee.  v5:= (`java.util.Map$Entry`) v5 @kind object;
  #L4438f2.  v0:= `@@r4.e2.i` @type ^`l7.d` @kind object;
  #L4438f6.  call temp:= `o`(v2, v0, v3, v5, v1) @signature `Lr4/e2;.o:(Ll7/d;Ll7/c;Ljava/lang/Object;Z)Lr4/e2;` @kind direct;
  #L4438fc.  goto L4438da;
  #L4438fe.  return v2 @kind object;
  #L443900.  v0:= instanceof @variable v4 @type ^`java.lang.Double` @kind boolean;
  #L443904.  if v0 == 0 then goto L44391c;
  #L443908.  v4:= (`java.lang.Double`) v4 @kind object;
  #L44390c.  call temp:= `doubleValue`(v4) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L443912.  v0:= temp @kind wide;
  #L443914.  call temp:= `d`(v2, v3, v0, v5) @signature `Lr4/e2;.d:(Ll7/c;DZ)Ll7/e;` @kind virtual;
  #L44391a.  return v2 @kind object;
  #L44391c.  v0:= instanceof @variable v4 @type ^`java.lang.Float` @kind boolean;
  #L443920.  if v0 == 0 then goto L443938;
  #L443924.  v4:= (`java.lang.Float`) v4 @kind object;
  #L443928.  call temp:= `floatValue`(v4) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L44392e.  v4:= temp;
  #L443930.  call temp:= `e`(v2, v3, v4, v5) @signature `Lr4/e2;.e:(Ll7/c;FZ)Ll7/e;` @kind virtual;
  #L443936.  return v2 @kind object;
  #L443938.  v0:= instanceof @variable v4 @type ^`java.lang.Number` @kind boolean;
  #L44393c.  if v0 == 0 then goto L443954;
  #L443940.  v4:= (`java.lang.Number`) v4 @kind object;
  #L443944.  call temp:= `longValue`(v4) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L44394a.  v0:= temp @kind wide;
  #L44394c.  call temp:= `i`(v2, v3, v0, v5) @signature `Lr4/e2;.i:(Ll7/c;JZ)Lr4/e2;` @kind virtual;
  #L443952.  return v2 @kind object;
  #L443954.  v0:= instanceof @variable v4 @type ^`java.lang.Boolean` @kind boolean;
  #L443958.  if v0 == 0 then goto L443970;
  #L44395c.  v4:= (`java.lang.Boolean`) v4 @kind object;
  #L443960.  call temp:= `booleanValue`(v4) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L443966.  v4:= temp;
  #L443968.  call temp:= `h`(v2, v3, v4, v5) @signature `Lr4/e2;.h:(Ll7/c;IZ)Lr4/e2;` @kind virtual;
  #L44396e.  return v2 @kind object;
  #L443970.  v0:= instanceof @variable v4 @type ^`byte`[] @kind boolean;
  #L443974.  if v0 == 0 then goto L4439b2;
  #L443978.  v4:= (`byte`[]) v4 @kind object;
  #L44397c.  if v5 == 0 then goto L443988;
  #L443980.  v5:= length @variable v4;
  #L443982.  if v5 != 0 then goto L443988;
  #L443986.  return v2 @kind object;
  #L443988.  call temp:= `l`(v3) @signature `Lr4/e2;.l:(Ll7/c;)I` @kind static;
  #L44398e.  v3:= temp;
  #L443990.  v3:= v3 ^< 3;
  #L443994.  v3:= v3 ^| 2;
  #L443998.  call `r`(v2, v3) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L44399e.  v3:= length @variable v4;
  #L4439a0.  call `r`(v2, v3) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L4439a6.  v3:= v2.`r4.e2.a` @type ^`java.io.OutputStream` @kind object;
  #L4439aa.  call `write`(v3, v4) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L4439b0.  return v2 @kind object;
  #L4439b2.  v0:= v2.`r4.e2.b` @type ^`java.util.Map` @kind object;
  #L4439b6.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4439bc.  v1:= temp @kind object;
  #L4439be.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4439c4.  v0:= temp @kind object;
  #L4439c6.  v0:= (`l7.d`) v0 @kind object;
  #L4439ca.  if v0 == 0 then goto L4439d6;
  #L4439ce.  call temp:= `o`(v2, v0, v3, v4, v5) @signature `Lr4/e2;.o:(Ll7/d;Ll7/c;Ljava/lang/Object;Z)Lr4/e2;` @kind direct;
  #L4439d4.  return v2 @kind object;
  #L4439d6.  v0:= v2.`r4.e2.c` @type ^`java.util.Map` @kind object;
  #L4439da.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4439e0.  v1:= temp @kind object;
  #L4439e2.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4439e8.  v0:= temp @kind object;
  #L4439ea.  v0:= (`l7.f`) v0 @kind object;
  #L4439ee.  if v0 == 0 then goto L4439fa;
  #L4439f2.  call temp:= `p`(v2, v0, v3, v4, v5) @signature `Lr4/e2;.p:(Ll7/f;Ll7/c;Ljava/lang/Object;Z)Lr4/e2;` @kind direct;
  #L4439f8.  return v2 @kind object;
  #L4439fa.  v0:= instanceof @variable v4 @type ^`r4.z1` @kind boolean;
  #L4439fe.  v1:= 1I;
  #L443a00.  if v0 == 0 then goto L443a18;
  #L443a04.  v4:= (`r4.z1`) v4 @kind object;
  #L443a08.  call temp:= `zza`(v4) @signature `Lr4/z1;.zza:()I` @kind interface;
  #L443a0e.  v4:= temp;
  #L443a10.  call temp:= `h`(v2, v3, v4, v1) @signature `Lr4/e2;.h:(Ll7/c;IZ)Lr4/e2;` @kind virtual;
  #L443a16.  return v2 @kind object;
  #L443a18.  v0:= instanceof @variable v4 @type ^`java.lang.Enum` @kind boolean;
  #L443a1c.  if v0 == 0 then goto L443a34;
  #L443a20.  v4:= (`java.lang.Enum`) v4 @kind object;
  #L443a24.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L443a2a.  v4:= temp;
  #L443a2c.  call temp:= `h`(v2, v3, v4, v1) @signature `Lr4/e2;.h:(Ll7/c;IZ)Lr4/e2;` @kind virtual;
  #L443a32.  return v2 @kind object;
  #L443a34.  v0:= v2.`r4.e2.d` @type ^`l7.d` @kind object;
  #L443a38.  call temp:= `o`(v2, v0, v3, v4, v5) @signature `Lr4/e2;.o:(Ll7/d;Ll7/c;Ljava/lang/Object;Z)Lr4/e2;` @kind direct;
  #L443a3e.  return v2 @kind object;
}
procedure `r4.e2` `h`(`r4.e2` v1 @kind this, `l7.c` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lr4/e2;.h:(Ll7/c;IZ)Lr4/e2;` @AccessFlag FINAL {
    temp;
    v0;

  #L443b08.  if v4 == 0 then goto L443b14;
  #L443b0c.  if v3 == 0 then goto L443b12;
  #L443b10.  goto L443b14;
  #L443b12.  return v1 @kind object;
  #L443b14.  call temp:= `n`(v2) @signature `Lr4/e2;.n:(Ll7/c;)Lr4/b2;` @kind static;
  #L443b1a.  v2:= temp @kind object;
  #L443b1c.  v4:= `@@r4.a2.o` @type ^`r4.a2` @kind object;
  #L443b20.  call temp:= `zzb`(v2) @signature `Lr4/b2;.zzb:()Lr4/a2;` @kind interface;
  #L443b26.  v4:= temp @kind object;
  #L443b28.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L443b2e.  v4:= temp;
  #L443b30.  if v4 == 0 then goto L443ba2;
  #L443b34.  v0:= 1I;
  #L443b36.  if v4 == v0 then goto L443b7e;
  #L443b3a.  v0:= 2I;
  #L443b3c.  if v4 == v0 then goto L443b42;
  #L443b40.  goto L443bba;
  #L443b42.  call temp:= `zza`(v2) @signature `Lr4/b2;.zza:()I` @kind interface;
  #L443b48.  v2:= temp;
  #L443b4a.  v2:= v2 ^< 3;
  #L443b4e.  v2:= v2 ^| 5;
  #L443b52.  call `r`(v1, v2) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L443b58.  v2:= v1.`r4.e2.a` @type ^`java.io.OutputStream` @kind object;
  #L443b5c.  v4:= 4I;
  #L443b5e.  call temp:= `q`(v4) @signature `Lr4/e2;.q:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L443b64.  v4:= temp @kind object;
  #L443b66.  call temp:= `putInt`(v4, v3) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L443b6c.  v3:= temp @kind object;
  #L443b6e.  call temp:= `array`(v3) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L443b74.  v3:= temp @kind object;
  #L443b76.  call `write`(v2, v3) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L443b7c.  goto L443bba;
  #L443b7e.  call temp:= `zza`(v2) @signature `Lr4/b2;.zza:()I` @kind interface;
  #L443b84.  v2:= temp;
  #L443b86.  v2:= v2 ^< 3;
  #L443b8a.  call `r`(v1, v2) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L443b90.  v2:= v3 + v3 @kind int;
  #L443b94.  v3:= v3 ^> 31;
  #L443b98.  v2:= v2 ^~ v3 @kind int;
  #L443b9a.  call `r`(v1, v2) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L443ba0.  goto L443bba;
  #L443ba2.  call temp:= `zza`(v2) @signature `Lr4/b2;.zza:()I` @kind interface;
  #L443ba8.  v2:= temp;
  #L443baa.  v2:= v2 ^< 3;
  #L443bae.  call `r`(v1, v2) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L443bb4.  call `r`(v1, v3) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L443bba.  return v1 @kind object;
}
procedure `r4.e2` `i`(`r4.e2` v2 @kind this, `l7.c` v3 @kind object, `long` v4 , `boolean` v6 ) @signature `Lr4/e2;.i:(Ll7/c;JZ)Lr4/e2;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L443bcc.  if v6 == 0 then goto L443be0;
  #L443bd0.  v0:= 0L;
  #L443bd4.  v6:= lcmp(v4, v0);
  #L443bd8.  if v6 == 0 then goto L443bde;
  #L443bdc.  goto L443be0;
  #L443bde.  return v2 @kind object;
  #L443be0.  call temp:= `n`(v3) @signature `Lr4/e2;.n:(Ll7/c;)Lr4/b2;` @kind static;
  #L443be6.  v3:= temp @kind object;
  #L443be8.  v6:= `@@r4.a2.o` @type ^`r4.a2` @kind object;
  #L443bec.  call temp:= `zzb`(v3) @signature `Lr4/b2;.zzb:()Lr4/a2;` @kind interface;
  #L443bf2.  v6:= temp @kind object;
  #L443bf4.  call temp:= `ordinal`(v6) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L443bfa.  v6:= temp;
  #L443bfc.  if v6 == 0 then goto L443c72;
  #L443c00.  v0:= 1I;
  #L443c02.  if v6 == v0 then goto L443c4a;
  #L443c06.  v1:= 2I;
  #L443c08.  if v6 == v1 then goto L443c0e;
  #L443c0c.  goto L443c8a;
  #L443c0e.  call temp:= `zza`(v3) @signature `Lr4/b2;.zza:()I` @kind interface;
  #L443c14.  v3:= temp;
  #L443c16.  v3:= v3 ^< 3;
  #L443c1a.  v3:= v3 ^| v0 @kind int;
  #L443c1c.  call `r`(v2, v3) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L443c22.  v3:= v2.`r4.e2.a` @type ^`java.io.OutputStream` @kind object;
  #L443c26.  v6:= 8I;
  #L443c2a.  call temp:= `q`(v6) @signature `Lr4/e2;.q:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L443c30.  v6:= temp @kind object;
  #L443c32.  call temp:= `putLong`(v6, v4) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L443c38.  v4:= temp @kind object;
  #L443c3a.  call temp:= `array`(v4) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L443c40.  v4:= temp @kind object;
  #L443c42.  call `write`(v3, v4) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L443c48.  goto L443c8a;
  #L443c4a.  call temp:= `zza`(v3) @signature `Lr4/b2;.zza:()I` @kind interface;
  #L443c50.  v3:= temp;
  #L443c52.  v3:= v3 ^< 3;
  #L443c56.  call `r`(v2, v3) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L443c5c.  v0:= v4 + v4 @kind long;
  #L443c60.  v3:= 63I;
  #L443c64.  v3:= v4 ^> v3 @kind long;
  #L443c68.  v3:= v3 ^~ v0 @kind long;
  #L443c6a.  call `s`(v2, v3) @signature `Lr4/e2;.s:(J)V` @kind direct;
  #L443c70.  goto L443c8a;
  #L443c72.  call temp:= `zza`(v3) @signature `Lr4/b2;.zza:()I` @kind interface;
  #L443c78.  v3:= temp;
  #L443c7a.  v3:= v3 ^< 3;
  #L443c7e.  call `r`(v2, v3) @signature `Lr4/e2;.r:(I)V` @kind direct;
  #L443c84.  call `s`(v2, v4) @signature `Lr4/e2;.s:(J)V` @kind direct;
  #L443c8a.  return v2 @kind object;
}
procedure `r4.e2` `j`(`r4.e2` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lr4/e2;.j:(Ljava/lang/Object;)Lr4/e2;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L443c9c.  if v3 != 0 then goto L443ca2;
  #L443ca0.  return v2 @kind object;
  #L443ca2.  v0:= v2.`r4.e2.b` @type ^`java.util.Map` @kind object;
  #L443ca6.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L443cac.  v1:= temp @kind object;
  #L443cae.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L443cb4.  v0:= temp @kind object;
  #L443cb6.  v0:= (`l7.d`) v0 @kind object;
  #L443cba.  if v0 == 0 then goto L443cc6;
  #L443cbe.  call `a`(v0, v3, v2) @signature `Ll7/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L443cc4.  return v2 @kind object;
  #L443cc6.  v0:= new `l7.b`;
  #L443cca.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L443cd0.  v3:= temp @kind object;
  #L443cd2.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L443cd8.  v3:= temp @kind object;
  #L443cda.  v1:= "No encoder for " @kind object;
  #L443cde.  call temp:= `concat`(v1, v3) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L443ce4.  v3:= temp @kind object;
  #L443ce6.  call `<init>`(v0, v3) @signature `Ll7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L443cec.  throw v0;
}
