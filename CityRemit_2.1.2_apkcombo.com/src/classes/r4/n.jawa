record `r4.n` @kind class @AccessFlag FINAL extends `r4.l` @kind class, `java.util.ListIterator` @kind interface {
  `r4.o` `r4.n.r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`r4.n` v0 @kind this, `r4.o` v1 @kind object) @signature `Lr4/n;.<init>:(Lr4/o;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43f658.  v0.`r4.n.r` @type ^`r4.o` := v1 @kind object;
  #L43f65c.  call `<init>`(v0, v1) @signature `Lr4/l;.<init>:(Lr4/m;)V` @kind direct;
  #L43f662.  return @kind void;
}
procedure `void` `<init>`(`r4.n` v1 @kind this, `r4.o` v2 @kind object, `int` v3 ) @signature `Lr4/n;.<init>:(Lr4/o;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L43f674.  v1.`r4.n.r` @type ^`r4.o` := v2 @kind object;
  #L43f678.  v0:= v2.`r4.m.p` @type ^`java.util.Collection` @kind object;
  #L43f67c.  v0:= (`java.util.List`) v0 @kind object;
  #L43f680.  call temp:= `listIterator`(v0, v3) @signature `Ljava/util/List;.listIterator:(I)Ljava/util/ListIterator;` @kind interface;
  #L43f686.  v3:= temp @kind object;
  #L43f688.  call `<init>`(v1, v2, v3) @signature `Lr4/l;.<init>:(Lr4/m;Ljava/util/Iterator;)V` @kind direct;
  #L43f68e.  return @kind void;
}
procedure `void` `add`(`r4.n` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lr4/n;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L43f6a0.  v0:= v2.`r4.n.r` @type ^`r4.o` @kind object;
  #L43f6a4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/AbstractCollection;.isEmpty:()Z` @kind virtual;
  #L43f6aa.  v0:= temp;
  #L43f6ac.  call `a`(v2) @signature `Lr4/l;.a:()V` @kind virtual;
  #L43f6b2.  v1:= v2.`r4.l.o` @type ^`java.util.Iterator` @kind object;
  #L43f6b6.  v1:= (`java.util.ListIterator`) v1 @kind object;
  #L43f6ba.  call `add`(v1, v3) @signature `Ljava/util/ListIterator;.add:(Ljava/lang/Object;)V` @kind interface;
  #L43f6c0.  v3:= v2.`r4.n.r` @type ^`r4.o` @kind object;
  #L43f6c4.  v3:= v3.`r4.o.t` @type ^`r4.p` @kind object;
  #L43f6c8.  call temp:= `i`(v3) @signature `Lr4/p;.i:(Lr4/p;)I` @kind static;
  #L43f6ce.  if v0 == 0 then goto L43f6dc;
  #L43f6d2.  v3:= v2.`r4.n.r` @type ^`r4.o` @kind object;
  #L43f6d6.  call `b`(v3) @signature `Lr4/m;.b:()V` @kind virtual;
  #L43f6dc.  return @kind void;
}
procedure `boolean` `hasPrevious`(`r4.n` v1 @kind this) @signature `Lr4/n;.hasPrevious:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43f5b8.  call `a`(v1) @signature `Lr4/l;.a:()V` @kind virtual;
  #L43f5be.  v0:= v1.`r4.l.o` @type ^`java.util.Iterator` @kind object;
  #L43f5c2.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L43f5c6.  call temp:= `hasPrevious`(v0) @signature `Ljava/util/ListIterator;.hasPrevious:()Z` @kind interface;
  #L43f5cc.  v0:= temp;
  #L43f5ce.  return v0;
}
procedure `int` `nextIndex`(`r4.n` v1 @kind this) @signature `Lr4/n;.nextIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43f5e0.  call `a`(v1) @signature `Lr4/l;.a:()V` @kind virtual;
  #L43f5e6.  v0:= v1.`r4.l.o` @type ^`java.util.Iterator` @kind object;
  #L43f5ea.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L43f5ee.  call temp:= `nextIndex`(v0) @signature `Ljava/util/ListIterator;.nextIndex:()I` @kind interface;
  #L43f5f4.  v0:= temp;
  #L43f5f6.  return v0;
}
procedure `java.lang.Object` `previous`(`r4.n` v1 @kind this) @signature `Lr4/n;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43f630.  call `a`(v1) @signature `Lr4/l;.a:()V` @kind virtual;
  #L43f636.  v0:= v1.`r4.l.o` @type ^`java.util.Iterator` @kind object;
  #L43f63a.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L43f63e.  call temp:= `previous`(v0) @signature `Ljava/util/ListIterator;.previous:()Ljava/lang/Object;` @kind interface;
  #L43f644.  v0:= temp @kind object;
  #L43f646.  return v0 @kind object;
}
procedure `int` `previousIndex`(`r4.n` v1 @kind this) @signature `Lr4/n;.previousIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43f608.  call `a`(v1) @signature `Lr4/l;.a:()V` @kind virtual;
  #L43f60e.  v0:= v1.`r4.l.o` @type ^`java.util.Iterator` @kind object;
  #L43f612.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L43f616.  call temp:= `previousIndex`(v0) @signature `Ljava/util/ListIterator;.previousIndex:()I` @kind interface;
  #L43f61c.  v0:= temp;
  #L43f61e.  return v0;
}
procedure `void` `set`(`r4.n` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr4/n;.set:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43f6f0.  call `a`(v1) @signature `Lr4/l;.a:()V` @kind virtual;
  #L43f6f6.  v0:= v1.`r4.l.o` @type ^`java.util.Iterator` @kind object;
  #L43f6fa.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L43f6fe.  call `set`(v0, v2) @signature `Ljava/util/ListIterator;.set:(Ljava/lang/Object;)V` @kind interface;
  #L43f704.  return @kind void;
}
