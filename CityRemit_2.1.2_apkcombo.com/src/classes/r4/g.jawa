record `r4.g` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `r4.g.o` @AccessFlag FINAL;
  `java.util.Collection` `r4.g.p` @AccessFlag ;
  `r4.h` `r4.g.q` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`r4.g` v0 @kind this, `r4.h` v1 @kind object) @signature `Lr4/g;.<init>:(Lr4/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43ec00.  v0.`r4.g.q` @type ^`r4.h` := v1 @kind object;
  #L43ec04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43ec0a.  v1:= v1.`r4.h.q` @type ^`java.util.Map` @kind object;
  #L43ec0e.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L43ec14.  v1:= temp @kind object;
  #L43ec16.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L43ec1c.  v1:= temp @kind object;
  #L43ec1e.  v0.`r4.g.o` @type ^`java.util.Iterator` := v1 @kind object;
  #L43ec22.  return @kind void;
}
procedure `boolean` `hasNext`(`r4.g` v1 @kind this) @signature `Lr4/g;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L43eb80.  v0:= v1.`r4.g.o` @type ^`java.util.Iterator` @kind object;
  #L43eb84.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L43eb8a.  v0:= temp;
  #L43eb8c.  return v0;
}
procedure `java.lang.Object` `next`(`r4.g` v3 @kind this) @signature `Lr4/g;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L43eba0.  v0:= v3.`r4.g.o` @type ^`java.util.Iterator` @kind object;
  #L43eba4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L43ebaa.  v0:= temp @kind object;
  #L43ebac.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L43ebb0.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L43ebb6.  v1:= temp @kind object;
  #L43ebb8.  v1:= (`java.util.Collection`) v1 @kind object;
  #L43ebbc.  v3.`r4.g.p` @type ^`java.util.Collection` := v1 @kind object;
  #L43ebc0.  v1:= v3.`r4.g.q` @type ^`r4.h` @kind object;
  #L43ebc4.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L43ebca.  v2:= temp @kind object;
  #L43ebcc.  v1:= v1.`r4.h.r` @type ^`r4.p` @kind object;
  #L43ebd0.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L43ebd6.  v0:= temp @kind object;
  #L43ebd8.  v0:= (`java.util.Collection`) v0 @kind object;
  #L43ebdc.  call temp:= `h`(v1, v2, v0) @signature `Lr4/p;.h:(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind virtual;
  #L43ebe2.  v0:= temp @kind object;
  #L43ebe4.  v1:= new `r4.k0`;
  #L43ebe8.  call `<init>`(v1, v2, v0) @signature `Lr4/k0;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L43ebee.  return v1 @kind object;
}
procedure `void` `remove`(`r4.g` v2 @kind this) @signature `Lr4/g;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L43ec34.  v0:= v2.`r4.g.p` @type ^`java.util.Collection` @kind object;
  #L43ec38.  if v0 == 0 then goto L43ec40;
  #L43ec3c.  v0:= 1I;
  #L43ec3e.  goto L43ec42;
  #L43ec40.  v0:= 0I;
  #L43ec42.  v1:= "no calls to next() since the last call to remove()" @kind object;
  #L43ec46.  call `d`(v0, v1) @signature `Lr4/b;.d:(ZLjava/lang/Object;)V` @kind static;
  #L43ec4c.  v0:= v2.`r4.g.o` @type ^`java.util.Iterator` @kind object;
  #L43ec50.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L43ec56.  v0:= v2.`r4.g.q` @type ^`r4.h` @kind object;
  #L43ec5a.  v0:= v0.`r4.h.r` @type ^`r4.p` @kind object;
  #L43ec5e.  v1:= v2.`r4.g.p` @type ^`java.util.Collection` @kind object;
  #L43ec62.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L43ec68.  v1:= temp;
  #L43ec6a.  call temp:= `l`(v0, v1) @signature `Lr4/p;.l:(Lr4/p;I)I` @kind static;
  #L43ec70.  v0:= v2.`r4.g.p` @type ^`java.util.Collection` @kind object;
  #L43ec74.  call `clear`(v0) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L43ec7a.  v0:= 0I;
  #L43ec7c.  v2.`r4.g.p` @type ^`java.util.Collection` := v0 @kind object;
  #L43ec80.  return @kind void;
}
