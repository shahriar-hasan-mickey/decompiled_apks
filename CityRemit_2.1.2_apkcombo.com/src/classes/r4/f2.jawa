record `r4.f2` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `l7.d` @kind interface {
}
global `r4.f2` `@@r4.f2.a` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lr4/f2;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L443f1c.  v0:= new `r4.f2`;
  #L443f20.  call `<init>`(v0) @signature `Lr4/f2;.<init>:()V` @kind direct;
  #L443f26.  `@@r4.f2.a` @type ^`r4.f2` := v0 @kind object;
  #L443f2a.  return @kind void;
}
procedure `void` `<init>`(`r4.f2` v0 @kind this) @signature `Lr4/f2;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L443f3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L443f42.  return @kind void;
}
procedure `void` `a`(`r4.f2` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lr4/f2;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L443f54.  v4:= (`l7.e`) v4 @kind object;
  #L443f58.  v4:= `@@r4.g2.e` @type ^`int`;
  #L443f5c.  v4:= new `l7.b`;
  #L443f60.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L443f66.  v3:= temp @kind object;
  #L443f68.  call temp:= `getCanonicalName`(v3) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L443f6e.  v3:= temp @kind object;
  #L443f70.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L443f76.  v3:= temp @kind object;
  #L443f78.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L443f7e.  v0:= temp;
  #L443f80.  v1:= "Couldn't find encoder for type " @kind object;
  #L443f84.  if v0 == 0 then goto L443f92;
  #L443f88.  call temp:= `concat`(v1, v3) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L443f8e.  v3:= temp @kind object;
  #L443f90.  goto L443f9c;
  #L443f92.  v3:= new `java.lang.String`;
  #L443f96.  call `<init>`(v3, v1) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L443f9c.  call `<init>`(v4, v3) @signature `Ll7/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L443fa2.  throw v4;
}
