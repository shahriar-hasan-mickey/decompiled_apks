record `r4.o0` @kind class @AccessFlag PUBLIC_ABSTRACT extends `r4.j0` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface {
}
global `r4.t1` `@@r4.o0.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lr4/o0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L441cf0.  v0:= new `r4.m0`;
  #L441cf4.  v1:= `@@r4.i1.s` @type ^`r4.o0` @kind object;
  #L441cf8.  v2:= 0I;
  #L441cfa.  call `<init>`(v0, v1, v2) @signature `Lr4/m0;.<init>:(Lr4/o0;I)V` @kind direct;
  #L441d00.  `@@r4.o0.p` @type ^`r4.t1` := v0 @kind object;
  #L441d04.  return @kind void;
}
procedure `void` `<init>`(`r4.o0` v0 @kind this) @signature `Lr4/o0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L441d18.  call `<init>`(v0) @signature `Lr4/j0;.<init>:()V` @kind direct;
  #L441d1e.  return @kind void;
}
procedure `r4.o0` `G`(`java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lr4/o0;.G:(Ljava/lang/Object;Ljava/lang/Object;)Lr4/o0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L441c40.  v0:= 2I;
  #L441c42.  v1:= new `java.lang.Object`[v0];
  #L441c46.  v2:= 0I;
  #L441c48.  v1[v2]:= v3 @kind object;
  #L441c4c.  v3:= 1I;
  #L441c4e.  v1[v3]:= v4 @kind object;
  #L441c52.  if v2 >= v0 then goto L441c96;
  #L441c56.  v3:= v1[v2] @kind object;
  #L441c5a.  if v3 == 0 then goto L441c64;
  #L441c5e.  v2:= v2 + 1;
  #L441c62.  goto L441c52;
  #L441c64.  v3:= new `java.lang.NullPointerException`;
  #L441c68.  v4:= new `java.lang.StringBuilder`;
  #L441c6c.  v0:= 20I;
  #L441c70.  call `<init>`(v4, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L441c76.  v0:= "at index " @kind object;
  #L441c7a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L441c80.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L441c86.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L441c8c.  v4:= temp @kind object;
  #L441c8e.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L441c94.  throw v3;
  #L441c96.  call temp:= `y`(v1, v0) @signature `Lr4/o0;.y:([Ljava/lang/Object;I)Lr4/o0;` @kind static;
  #L441c9c.  v3:= temp @kind object;
  #L441c9e.  return v3 @kind object;
}
procedure `r4.l0` `p`() @signature `Lr4/o0;.p:()Lr4/l0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L441b98.  v0:= new `r4.l0`;
  #L441b9c.  v1:= 4I;
  #L441b9e.  call `<init>`(v0, v1) @signature `Lr4/l0;.<init>:(I)V` @kind direct;
  #L441ba4.  return v0 @kind object;
}
procedure `r4.o0` `u`(`java.lang.Object`[] v1 @kind object) @signature `Lr4/o0;.u:([Ljava/lang/Object;)Lr4/o0;` @AccessFlag STATIC {
    temp;
    v0;

  #L441bfc.  v0:= length @variable v1;
  #L441bfe.  call temp:= `y`(v1, v0) @signature `Lr4/o0;.y:([Ljava/lang/Object;I)Lr4/o0;` @kind static;
  #L441c04.  v1:= temp @kind object;
  #L441c06.  return v1 @kind object;
}
procedure `r4.o0` `y`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Lr4/o0;.y:([Ljava/lang/Object;I)Lr4/o0;` @AccessFlag STATIC {
    temp;
    v0;

  #L441c18.  if v2 != 0 then goto L441c22;
  #L441c1c.  v1:= `@@r4.i1.s` @type ^`r4.o0` @kind object;
  #L441c20.  return v1 @kind object;
  #L441c22.  v0:= new `r4.i1`;
  #L441c26.  call `<init>`(v0, v1, v2) @signature `Lr4/i1;.<init>:([Ljava/lang/Object;I)V` @kind direct;
  #L441c2c.  return v0 @kind object;
}
procedure `r4.t1` `N`(`r4.o0` v2 @kind this, `int` v3 ) @signature `Lr4/o0;.N:(I)Lr4/t1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L441cb0.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L441cb6.  v0:= temp;
  #L441cb8.  v1:= "index" @kind object;
  #L441cbc.  call temp:= `b`(v3, v0, v1) @signature `Lr4/b;.b:(IILjava/lang/String;)I` @kind static;
  #L441cc2.  call temp:= `isEmpty`(v2) @signature `Ljava/util/AbstractCollection;.isEmpty:()Z` @kind virtual;
  #L441cc8.  v0:= temp;
  #L441cca.  if v0 == 0 then goto L441cd4;
  #L441cce.  v3:= `@@r4.o0.p` @type ^`r4.t1` @kind object;
  #L441cd2.  return v3 @kind object;
  #L441cd4.  v0:= new `r4.m0`;
  #L441cd8.  call `<init>`(v0, v2, v3) @signature `Lr4/m0;.<init>:(Lr4/o0;I)V` @kind direct;
  #L441cde.  return v0 @kind object;
}
procedure `void` `add`(`r4.o0` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lr4/o0;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L441d30.  v1:= new `java.lang.UnsupportedOperationException`;
  #L441d34.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L441d3a.  throw v1;
}
procedure `boolean` `addAll`(`r4.o0` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Lr4/o0;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L4418e4.  v1:= new `java.lang.UnsupportedOperationException`;
  #L4418e8.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L4418ee.  throw v1;
}
procedure `int` `b`(`r4.o0` v2 @kind this, `java.lang.Object`[] v3 @kind object, `int` v4 ) @signature `Lr4/o0;.b:([Ljava/lang/Object;I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L441abc.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L441ac2.  v4:= temp;
  #L441ac4.  v0:= 0I;
  #L441ac6.  if v0 >= v4 then goto L441adc;
  #L441aca.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L441ad0.  v1:= temp @kind object;
  #L441ad2.  v3[v0]:= v1 @kind object;
  #L441ad6.  v0:= v0 + 1;
  #L441ada.  goto L441ac6;
  #L441adc.  return v4;
}
procedure `boolean` `contains`(`r4.o0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lr4/o0;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L441900.  call temp:= `indexOf`(v0, v1) @signature `Lr4/o0;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L441906.  v1:= temp;
  #L441908.  if v1 < 0 then goto L441910;
  #L44190c.  v1:= 1I;
  #L44190e.  return v1;
  #L441910.  v1:= 0I;
  #L441912.  return v1;
}
procedure `boolean` `equals`(`r4.o0` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lr4/o0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L441924.  v0:= 1I;
  #L441926.  v1:= 0I;
  #L441928.  if v7 != v6 then goto L44192e;
  #L44192c.  goto L4419da;
  #L44192e.  v2:= instanceof @variable v7 @type ^`java.util.List` @kind boolean;
  #L441932.  if v2 != 0 then goto L44193a;
  #L441936.  v0:= 0I;
  #L441938.  goto L4419da;
  #L44193a.  v7:= (`java.util.List`) v7 @kind object;
  #L44193e.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L441944.  v2:= temp;
  #L441946.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L44194c.  v3:= temp;
  #L44194e.  if v2 == v3 then goto L441954;
  #L441952.  goto L441936;
  #L441954.  v3:= instanceof @variable v7 @type ^`java.util.RandomAccess` @kind boolean;
  #L441958.  if v3 == 0 then goto L441986;
  #L44195c.  v3:= 0I;
  #L44195e.  if v3 >= v2 then goto L4419da;
  #L441962.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L441968.  v4:= temp @kind object;
  #L44196a.  call temp:= `get`(v7, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L441970.  v5:= temp @kind object;
  #L441972.  call temp:= `a`(v4, v5) @signature `Lr4/td;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L441978.  v4:= temp;
  #L44197a.  if v4 != 0 then goto L441980;
  #L44197e.  goto L441936;
  #L441980.  v3:= v3 + 1;
  #L441984.  goto L44195e;
  #L441986.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L44198c.  v2:= temp @kind object;
  #L44198e.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L441994.  v7:= temp @kind object;
  #L441996.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L44199c.  v3:= temp;
  #L44199e.  if v3 == 0 then goto L4419ce;
  #L4419a2.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4419a8.  v3:= temp;
  #L4419aa.  if v3 != 0 then goto L4419b0;
  #L4419ae.  goto L441936;
  #L4419b0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4419b6.  v3:= temp @kind object;
  #L4419b8.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4419be.  v4:= temp @kind object;
  #L4419c0.  call temp:= `a`(v3, v4) @signature `Lr4/td;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4419c6.  v3:= temp;
  #L4419c8.  if v3 != 0 then goto L441996;
  #L4419cc.  goto L441936;
  #L4419ce.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4419d4.  v7:= temp;
  #L4419d6.  if v7 != 0 then goto L441936;
  #L4419da.  return v0;
}
procedure `int` `hashCode`(`r4.o0` v4 @kind this) @signature `Lr4/o0;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4419ec.  call temp:= `size`(v4) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L4419f2.  v0:= temp;
  #L4419f4.  v1:= 1I;
  #L4419f6.  v2:= 0I;
  #L4419f8.  if v2 >= v0 then goto L441a18;
  #L4419fc.  v1:= v1 * 31;
  #L441a00.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L441a06.  v3:= temp @kind object;
  #L441a08.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L441a0e.  v3:= temp;
  #L441a10.  v1:= v1 + v3 @kind int;
  #L441a12.  v2:= v2 + 1;
  #L441a16.  goto L4419f8;
  #L441a18.  return v1;
}
procedure `int` `indexOf`(`r4.o0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lr4/o0;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L441a2c.  v0:= -1I;
  #L441a2e.  if v5 != 0 then goto L441a34;
  #L441a32.  return v0;
  #L441a34.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L441a3a.  v1:= temp;
  #L441a3c.  v2:= 0I;
  #L441a3e.  if v2 >= v1 then goto L441a60;
  #L441a42.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L441a48.  v3:= temp @kind object;
  #L441a4a.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L441a50.  v3:= temp;
  #L441a52.  if v3 == 0 then goto L441a5a;
  #L441a56.  v0:= v2;
  #L441a58.  goto L441a60;
  #L441a5a.  v2:= v2 + 1;
  #L441a5e.  goto L441a3e;
  #L441a60.  return v0;
}
procedure `java.util.Iterator` `iterator`(`r4.o0` v1 @kind this) @signature `Lr4/o0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L441b28.  v0:= 0I;
  #L441b2a.  call temp:= `N`(v1, v0) @signature `Lr4/o0;.N:(I)Lr4/t1;` @kind virtual;
  #L441b30.  v0:= temp @kind object;
  #L441b32.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`r4.o0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lr4/o0;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L441a74.  v0:= -1I;
  #L441a76.  if v4 != 0 then goto L441a7c;
  #L441a7a.  return v0;
  #L441a7c.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L441a82.  v1:= temp;
  #L441a84.  v1:= v1 + v0 @kind int;
  #L441a86.  if v1 < 0 then goto L441aa8;
  #L441a8a.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L441a90.  v2:= temp @kind object;
  #L441a92.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L441a98.  v2:= temp;
  #L441a9a.  if v2 == 0 then goto L441aa2;
  #L441a9e.  v0:= v1;
  #L441aa0.  goto L441aa8;
  #L441aa2.  v1:= v1 + -1;
  #L441aa6.  goto L441a86;
  #L441aa8.  return v0;
}
procedure `java.util.ListIterator` `listIterator`(`r4.o0` v1 @kind this) @signature `Lr4/o0;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L441b60.  v0:= 0I;
  #L441b62.  call temp:= `N`(v1, v0) @signature `Lr4/o0;.N:(I)Lr4/t1;` @kind virtual;
  #L441b68.  v0:= temp @kind object;
  #L441b6a.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`r4.o0` v0 @kind this, `int` v1 ) @signature `Lr4/o0;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L441b7c.  call temp:= `N`(v0, v1) @signature `Lr4/o0;.N:(I)Lr4/t1;` @kind virtual;
  #L441b82.  v1:= temp @kind object;
  #L441b84.  return v1 @kind object;
}
procedure `r4.o0` `n`(`r4.o0` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lr4/o0;.n:(II)Lr4/o0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441bb8.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L441bbe.  v0:= temp;
  #L441bc0.  call `c`(v2, v3, v0) @signature `Lr4/b;.c:(III)V` @kind static;
  #L441bc6.  v3:= v3 - v2 @kind int;
  #L441bc8.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L441bce.  v0:= temp;
  #L441bd0.  if v3 != v0 then goto L441bd6;
  #L441bd4.  return v1 @kind object;
  #L441bd6.  if v3 != 0 then goto L441be0;
  #L441bda.  v2:= `@@r4.i1.s` @type ^`r4.o0` @kind object;
  #L441bde.  return v2 @kind object;
  #L441be0.  v0:= new `r4.n0`;
  #L441be4.  call `<init>`(v0, v1, v2, v3) @signature `Lr4/n0;.<init>:(Lr4/o0;II)V` @kind direct;
  #L441bea.  return v0 @kind object;
}
procedure `java.lang.Object` `remove`(`r4.o0` v0 @kind this, `int` v1 ) @signature `Lr4/o0;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L441af0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L441af4.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L441afa.  throw v1;
}
procedure `java.lang.Object` `set`(`r4.o0` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lr4/o0;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L441b0c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L441b10.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L441b16.  throw v1;
}
procedure `java.util.List` `subList`(`r4.o0` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lr4/o0;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L441b44.  call temp:= `n`(v0, v1, v2) @signature `Lr4/o0;.n:(II)Lr4/o0;` @kind virtual;
  #L441b4a.  v1:= temp @kind object;
  #L441b4c.  return v1 @kind object;
}
