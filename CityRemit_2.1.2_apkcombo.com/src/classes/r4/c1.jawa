record `r4.c1` @kind class @AccessFlag  extends `r4.o1` @kind class {
  `java.util.Map` `r4.c1.o` @AccessFlag FINAL;
}
procedure `void` `<init>`(`r4.c1` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lr4/c1;.<init>:(Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44267c.  call `<init>`(v0) @signature `Lr4/o1;.<init>:()V` @kind direct;
  #L442682.  call temp:= `requireNonNull`(v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L442688.  v0.`r4.c1.o` @type ^`java.util.Map` := v1 @kind object;
  #L44268c.  return @kind void;
}
procedure `boolean` `contains`(`r4.c1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr4/c1;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4425d4.  v0:= v1.`r4.c1.o` @type ^`java.util.Map` @kind object;
  #L4425d8.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4425de.  v2:= temp;
  #L4425e0.  return v2;
}
procedure `boolean` `isEmpty`(`r4.c1` v1 @kind this) @signature `Lr4/c1;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4425f4.  v0:= v1.`r4.c1.o` @type ^`java.util.Map` @kind object;
  #L4425f8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L4425fe.  v0:= temp;
  #L442600.  return v0;
}
procedure `java.util.Iterator` `iterator`(`r4.c1` v0 @kind this) @signature `Lr4/c1;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;

  #L442634.  v0:= 0I;
  #L44263a.  throw v0;
}
procedure `int` `size`(`r4.c1` v1 @kind this) @signature `Lr4/c1;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L442614.  v0:= v1.`r4.c1.o` @type ^`java.util.Map` @kind object;
  #L442618.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L44261e.  v0:= temp;
  #L442620.  return v0;
}
