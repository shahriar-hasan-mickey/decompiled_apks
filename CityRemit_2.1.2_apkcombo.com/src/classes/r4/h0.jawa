record `r4.h0` @kind class @AccessFlag  extends `r4.i0` @kind class {
  `java.lang.Object`[] `r4.h0.a` @AccessFlag ;
  `int` `r4.h0.b` @AccessFlag ;
  `boolean` `r4.h0.c` @AccessFlag ;
}
procedure `void` `<init>`(`r4.h0` v0 @kind this, `int` v1 ) @signature `Lr4/h0;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L441410.  call `<init>`(v0) @signature `Lr4/i0;.<init>:()V` @kind direct;
  #L441416.  v1:= 4I;
  #L441418.  v1:= new `java.lang.Object`[v1];
  #L44141c.  v0.`r4.h0.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L441420.  v1:= 0I;
  #L441422.  v0.`r4.h0.b` @type ^`int` := v1;
  #L441426.  return @kind void;
}
procedure `void` `b`(`r4.h0` v4 @kind this, `int` v5 ) @signature `Lr4/h0;.b:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L441438.  v0:= v4.`r4.h0.a` @type ^`java.lang.Object`[] @kind object;
  #L44143c.  v1:= length @variable v0;
  #L44143e.  v2:= 0I;
  #L441440.  if v1 >= v5 then goto L44147e;
  #L441444.  v3:= v1 ^> 1;
  #L441448.  v1:= v1 + v3 @kind int;
  #L44144a.  v1:= v1 + 1;
  #L44144e.  if v1 >= v5 then goto L441462;
  #L441452.  v5:= v5 + -1;
  #L441456.  call temp:= `highestOneBit`(v5) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L44145c.  v5:= temp;
  #L44145e.  v1:= v5 + v5 @kind int;
  #L441462.  if v1 >= 0 then goto L44146c;
  #L441466.  v1:= 2147483647I;
  #L44146c.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L441472.  v5:= temp @kind object;
  #L441474.  v4.`r4.h0.a` @type ^`java.lang.Object`[] := v5 @kind object;
  #L441478.  v4.`r4.h0.c` @type ^`boolean` := v2 @kind boolean;
  #L44147c.  return @kind void;
  #L44147e.  v5:= v4.`r4.h0.c` @type ^`boolean` @kind boolean;
  #L441482.  if v5 == 0 then goto L441498;
  #L441486.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L44148c.  v5:= temp @kind object;
  #L44148e.  v5:= (`java.lang.Object`[]) v5 @kind object;
  #L441492.  v4.`r4.h0.a` @type ^`java.lang.Object`[] := v5 @kind object;
  #L441496.  goto L441478;
  #L441498.  return @kind void;
}
procedure `r4.h0` `a`(`r4.h0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lr4/h0;.a:(Ljava/lang/Object;)Lr4/h0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4413d4.  call temp:= `requireNonNull`(v4) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4413da.  v0:= v3.`r4.h0.b` @type ^`int`;
  #L4413de.  v0:= v0 + 1;
  #L4413e2.  call `b`(v3, v0) @signature `Lr4/h0;.b:(I)V` @kind direct;
  #L4413e8.  v0:= v3.`r4.h0.a` @type ^`java.lang.Object`[] @kind object;
  #L4413ec.  v1:= v3.`r4.h0.b` @type ^`int`;
  #L4413f0.  v2:= v1 + 1;
  #L4413f4.  v3.`r4.h0.b` @type ^`int` := v2;
  #L4413f8.  v0[v1]:= v4 @kind object;
  #L4413fc.  return v3 @kind object;
}
