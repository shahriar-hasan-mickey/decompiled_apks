record `r4.c6` @kind class @AccessFlag FINAL extends `l7.d` @kind interface {
}
global `r4.c6` `@@r4.c6.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lr4/c6;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L44aa94.  v0:= new `r4.c6`;
  #L44aa98.  call `<init>`(v0) @signature `Lr4/c6;.<init>:()V` @kind direct;
  #L44aa9e.  `@@r4.c6.a` @type ^`r4.c6` := v0 @kind object;
  #L44aaa2.  v0:= "category" @kind object;
  #L44aaa6.  call temp:= `a`(v0) @signature `Ll7/c;.a:(Ljava/lang/String;)Ll7/c$b;` @kind static;
  #L44aaac.  v0:= temp @kind object;
  #L44aaae.  v1:= new `r4.x1`;
  #L44aab2.  call `<init>`(v1) @signature `Lr4/x1;.<init>:()V` @kind direct;
  #L44aab8.  v2:= 1I;
  #L44aaba.  call temp:= `a`(v1, v2) @signature `Lr4/x1;.a:(I)Lr4/x1;` @kind virtual;
  #L44aac0.  call temp:= `b`(v1) @signature `Lr4/x1;.b:()Lr4/b2;` @kind virtual;
  #L44aac6.  v1:= temp @kind object;
  #L44aac8.  call temp:= `b`(v0, v1) @signature `Ll7/c$b;.b:(Ljava/lang/annotation/Annotation;)Ll7/c$b;` @kind virtual;
  #L44aace.  v0:= temp @kind object;
  #L44aad0.  call temp:= `a`(v0) @signature `Ll7/c$b;.a:()Ll7/c;` @kind virtual;
  #L44aad6.  v0:= "classificationConfidence" @kind object;
  #L44aada.  call temp:= `a`(v0) @signature `Ll7/c;.a:(Ljava/lang/String;)Ll7/c$b;` @kind static;
  #L44aae0.  v0:= temp @kind object;
  #L44aae2.  v1:= new `r4.x1`;
  #L44aae6.  call `<init>`(v1) @signature `Lr4/x1;.<init>:()V` @kind direct;
  #L44aaec.  v2:= 2I;
  #L44aaee.  call temp:= `a`(v1, v2) @signature `Lr4/x1;.a:(I)Lr4/x1;` @kind virtual;
  #L44aaf4.  call temp:= `b`(v1) @signature `Lr4/x1;.b:()Lr4/b2;` @kind virtual;
  #L44aafa.  v1:= temp @kind object;
  #L44aafc.  call temp:= `b`(v0, v1) @signature `Ll7/c$b;.b:(Ljava/lang/annotation/Annotation;)Ll7/c$b;` @kind virtual;
  #L44ab02.  v0:= temp @kind object;
  #L44ab04.  call temp:= `a`(v0) @signature `Ll7/c$b;.a:()Ll7/c;` @kind virtual;
  #L44ab0a.  v0:= "trackingId" @kind object;
  #L44ab0e.  call temp:= `a`(v0) @signature `Ll7/c;.a:(Ljava/lang/String;)Ll7/c$b;` @kind static;
  #L44ab14.  v0:= temp @kind object;
  #L44ab16.  v1:= new `r4.x1`;
  #L44ab1a.  call `<init>`(v1) @signature `Lr4/x1;.<init>:()V` @kind direct;
  #L44ab20.  v2:= 3I;
  #L44ab22.  call temp:= `a`(v1, v2) @signature `Lr4/x1;.a:(I)Lr4/x1;` @kind virtual;
  #L44ab28.  call temp:= `b`(v1) @signature `Lr4/x1;.b:()Lr4/b2;` @kind virtual;
  #L44ab2e.  v1:= temp @kind object;
  #L44ab30.  call temp:= `b`(v0, v1) @signature `Ll7/c$b;.b:(Ljava/lang/annotation/Annotation;)Ll7/c$b;` @kind virtual;
  #L44ab36.  v0:= temp @kind object;
  #L44ab38.  call temp:= `a`(v0) @signature `Ll7/c$b;.a:()Ll7/c;` @kind virtual;
  #L44ab3e.  v0:= "labelCount" @kind object;
  #L44ab42.  call temp:= `a`(v0) @signature `Ll7/c;.a:(Ljava/lang/String;)Ll7/c$b;` @kind static;
  #L44ab48.  v0:= temp @kind object;
  #L44ab4a.  v1:= new `r4.x1`;
  #L44ab4e.  call `<init>`(v1) @signature `Lr4/x1;.<init>:()V` @kind direct;
  #L44ab54.  v2:= 4I;
  #L44ab56.  call temp:= `a`(v1, v2) @signature `Lr4/x1;.a:(I)Lr4/x1;` @kind virtual;
  #L44ab5c.  call temp:= `b`(v1) @signature `Lr4/x1;.b:()Lr4/b2;` @kind virtual;
  #L44ab62.  v1:= temp @kind object;
  #L44ab64.  call temp:= `b`(v0, v1) @signature `Ll7/c$b;.b:(Ljava/lang/annotation/Annotation;)Ll7/c$b;` @kind virtual;
  #L44ab6a.  v0:= temp @kind object;
  #L44ab6c.  call temp:= `a`(v0) @signature `Ll7/c$b;.a:()Ll7/c;` @kind virtual;
  #L44ab72.  return @kind void;
}
procedure `void` `<init>`(`r4.c6` v0 @kind this) @signature `Lr4/c6;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L44ab84.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44ab8a.  return @kind void;
}
procedure `void` `a`(`r4.c6` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lr4/c6;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L44ab9c.  v1:= (`r4.u9`) v1 @kind object;
  #L44aba0.  v2:= (`l7.e`) v2 @kind object;
  #L44aba4.  v1:= 0I;
  #L44aba6.  throw v1;
}
