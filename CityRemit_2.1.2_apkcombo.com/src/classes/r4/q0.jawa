record `r4.q0` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.Map` @kind interface, `java.io.Serializable` @kind interface {
  `r4.r0` `r4.q0.o` @AccessFlag PRIVATE_TRANSIENT;
  `r4.r0` `r4.q0.p` @AccessFlag PRIVATE_TRANSIENT;
  `r4.j0` `r4.q0.q` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`r4.q0` v0 @kind this) @signature `Lr4/q0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L44202c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L442032.  return @kind void;
}
procedure `r4.q0` `c`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lr4/q0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Lr4/q0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L441fc8.  v2:= "optional-module-barcode" @kind object;
  #L441fcc.  v3:= "com.google.android.gms.vision.barcode" @kind object;
  #L441fd0.  call `b`(v2, v3) @signature `Lr4/u;.b:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L441fd6.  v0:= 2I;
  #L441fd8.  v0:= new `java.lang.Object`[v0];
  #L441fdc.  v1:= 0I;
  #L441fde.  v0[v1]:= v2 @kind object;
  #L441fe2.  v2:= 1I;
  #L441fe4.  v0[v2]:= v3 @kind object;
  #L441fe8.  v3:= 0I;
  #L441fea.  call temp:= `g`(v2, v0, v3) @signature `Lr4/n1;.g:(I[Ljava/lang/Object;Lr4/p0;)Lr4/n1;` @kind static;
  #L441ff0.  v2:= temp @kind object;
  #L441ff2.  return v2 @kind object;
}
procedure `r4.j0` `a`() @signature `Lr4/q0;.a:()Lr4/j0;` @AccessFlag ABSTRACT {

  # return;
}
procedure `r4.j0` `b`(`r4.q0` v1 @kind this) @signature `Lr4/q0;.b:()Lr4/j0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L441fa0.  v0:= v1.`r4.q0.q` @type ^`r4.j0` @kind object;
  #L441fa4.  if v0 != 0 then goto L441fb4;
  #L441fa8.  call temp:= `a`(v1) @signature `Lr4/q0;.a:()Lr4/j0;` @kind virtual;
  #L441fae.  v0:= temp @kind object;
  #L441fb0.  v1.`r4.q0.q` @type ^`r4.j0` := v0 @kind object;
  #L441fb4.  return v0 @kind object;
}
procedure `void` `clear`(`r4.q0` v1 @kind this) @signature `Lr4/q0;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L442044.  v0:= new `java.lang.UnsupportedOperationException`;
  #L442048.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L44204e.  throw v0;
}
procedure `boolean` `containsKey`(`r4.q0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lr4/q0;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L441d4c.  call temp:= `get`(v0, v1) @signature `Lr4/q0;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L441d52.  v1:= temp @kind object;
  #L441d54.  if v1 == 0 then goto L441d5c;
  #L441d58.  v1:= 1I;
  #L441d5a.  return v1;
  #L441d5c.  v1:= 0I;
  #L441d5e.  return v1;
}
procedure `boolean` `containsValue`(`r4.q0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr4/q0;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L441d70.  call temp:= `b`(v1) @signature `Lr4/q0;.b:()Lr4/j0;` @kind virtual;
  #L441d76.  v0:= temp @kind object;
  #L441d78.  call temp:= `contains`(v0, v2) @signature `Lr4/j0;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L441d7e.  v2:= temp;
  #L441d80.  return v2;
}
procedure `r4.r0` `d`() @signature `Lr4/q0;.d:()Lr4/r0;` @AccessFlag ABSTRACT {

  # return;
}
procedure `r4.r0` `e`() @signature `Lr4/q0;.e:()Lr4/r0;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Set` `entrySet`(`r4.q0` v1 @kind this) @signature `Lr4/q0;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L441f5c.  call temp:= `f`(v1) @signature `Lr4/q0;.f:()Lr4/r0;` @kind virtual;
  #L441f62.  v0:= temp @kind object;
  #L441f64.  return v0 @kind object;
}
procedure `boolean` `equals`(`r4.q0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr4/q0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L441d94.  if v1 != v2 then goto L441d9c;
  #L441d98.  v2:= 1I;
  #L441d9a.  goto L441da6;
  #L441d9c.  v0:= instanceof @variable v2 @type ^`java.util.Map` @kind boolean;
  #L441da0.  if v0 != 0 then goto L441da8;
  #L441da4.  v2:= 0I;
  #L441da6.  return v2;
  #L441da8.  v2:= (`java.util.Map`) v2 @kind object;
  #L441dac.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L441db2.  v0:= temp @kind object;
  #L441db4.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L441dba.  v2:= temp @kind object;
  #L441dbc.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L441dc2.  v2:= temp;
  #L441dc4.  return v2;
}
procedure `r4.r0` `f`(`r4.q0` v1 @kind this) @signature `Lr4/q0;.f:()Lr4/r0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L442004.  v0:= v1.`r4.q0.o` @type ^`r4.r0` @kind object;
  #L442008.  if v0 != 0 then goto L442018;
  #L44200c.  call temp:= `d`(v1) @signature `Lr4/q0;.d:()Lr4/r0;` @kind virtual;
  #L442012.  v0:= temp @kind object;
  #L442014.  v1.`r4.q0.o` @type ^`r4.r0` := v0 @kind object;
  #L442018.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`java.lang.Object` v0 @kind object) @signature `Lr4/q0;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getOrDefault`(`r4.q0` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lr4/q0;.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L441e20.  call temp:= `get`(v0, v1) @signature `Lr4/q0;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L441e26.  v1:= temp @kind object;
  #L441e28.  if v1 == 0 then goto L441e2e;
  #L441e2c.  return v1 @kind object;
  #L441e2e.  return v2 @kind object;
}
procedure `int` `hashCode`(`r4.q0` v1 @kind this) @signature `Lr4/q0;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L441dfc.  call temp:= `f`(v1) @signature `Lr4/q0;.f:()Lr4/r0;` @kind virtual;
  #L441e02.  v0:= temp @kind object;
  #L441e04.  call temp:= `a`(v0) @signature `Lr4/p1;.a:(Ljava/util/Set;)I` @kind static;
  #L441e0a.  v0:= temp;
  #L441e0c.  return v0;
}
procedure `boolean` `isEmpty`(`r4.q0` v1 @kind this) @signature `Lr4/q0;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L441dd8.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L441dde.  v0:= temp;
  #L441de0.  if v0 != 0 then goto L441de8;
  #L441de4.  v0:= 1I;
  #L441de6.  return v0;
  #L441de8.  v0:= 0I;
  #L441dea.  return v0;
}
procedure `java.util.Set` `keySet`(`r4.q0` v1 @kind this) @signature `Lr4/q0;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L441f78.  v0:= v1.`r4.q0.p` @type ^`r4.r0` @kind object;
  #L441f7c.  if v0 != 0 then goto L441f8c;
  #L441f80.  call temp:= `e`(v1) @signature `Lr4/q0;.e:()Lr4/r0;` @kind virtual;
  #L441f86.  v0:= temp @kind object;
  #L441f88.  v1.`r4.q0.p` @type ^`r4.r0` := v0 @kind object;
  #L441f8c.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`r4.q0` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lr4/q0;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L441e40.  v1:= new `java.lang.UnsupportedOperationException`;
  #L441e44.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L441e4a.  throw v1;
}
procedure `void` `putAll`(`r4.q0` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lr4/q0;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L442060.  v1:= new `java.lang.UnsupportedOperationException`;
  #L442064.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L44206a.  throw v1;
}
procedure `java.lang.Object` `remove`(`r4.q0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lr4/q0;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L441e5c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L441e60.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L441e66.  throw v1;
}
procedure `java.lang.String` `toString`(`r4.q0` v6 @kind this) @signature `Lr4/q0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L441e78.  call temp:= `size`(v6) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L441e7e.  v0:= temp;
  #L441e80.  v1:= "size" @kind object;
  #L441e84.  call temp:= `a`(v0, v1) @signature `Lr4/u;.a:(ILjava/lang/String;)I` @kind static;
  #L441e8a.  v1:= new `java.lang.StringBuilder`;
  #L441e8e.  v2:= (`long`) v0 @kind i2l;
  #L441e90.  v4:= 8L;
  #L441e94.  v2:= v2 * v4 @kind long;
  #L441e98.  v4:= 1073741824L;
  #L441e9e.  call temp:= `min`(v2, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L441ea4.  v2:= temp @kind wide;
  #L441ea6.  v0:= (`int`) v2 @kind l2i;
  #L441ea8.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L441eae.  v0:= 123I;
  #L441eb2.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L441eb8.  call temp:= `entrySet`(v6) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L441ebe.  v0:= temp @kind object;
  #L441ec0.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L441ec6.  v0:= temp @kind object;
  #L441ec8.  v2:= 1I;
  #L441eca.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L441ed0.  v3:= temp;
  #L441ed2.  if v3 == 0 then goto L441f1a;
  #L441ed6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L441edc.  v3:= temp @kind object;
  #L441ede.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L441ee2.  if v2 != 0 then goto L441ef0;
  #L441ee6.  v2:= ", " @kind object;
  #L441eea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L441ef0.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L441ef6.  v2:= temp @kind object;
  #L441ef8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L441efe.  v2:= 61I;
  #L441f02.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L441f08.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L441f0e.  v2:= temp @kind object;
  #L441f10.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L441f16.  v2:= 0I;
  #L441f18.  goto L441eca;
  #L441f1a.  v0:= 125I;
  #L441f1e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L441f24.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L441f2a.  v0:= temp @kind object;
  #L441f2c.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`r4.q0` v1 @kind this) @signature `Lr4/q0;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L441f40.  call temp:= `b`(v1) @signature `Lr4/q0;.b:()Lr4/j0;` @kind virtual;
  #L441f46.  v0:= temp @kind object;
  #L441f48.  return v0 @kind object;
}
