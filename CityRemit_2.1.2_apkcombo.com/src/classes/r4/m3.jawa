record `r4.m3` @kind class @AccessFlag FINAL extends `l7.d` @kind interface {
}
global `r4.m3` `@@r4.m3.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lr4/m3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4449d8.  v0:= new `r4.m3`;
  #L4449dc.  call `<init>`(v0) @signature `Lr4/m3;.<init>:()V` @kind direct;
  #L4449e2.  `@@r4.m3.a` @type ^`r4.m3` := v0 @kind object;
  #L4449e6.  v0:= "errorCode" @kind object;
  #L4449ea.  call temp:= `a`(v0) @signature `Ll7/c;.a:(Ljava/lang/String;)Ll7/c$b;` @kind static;
  #L4449f0.  v0:= temp @kind object;
  #L4449f2.  v1:= new `r4.x1`;
  #L4449f6.  call `<init>`(v1) @signature `Lr4/x1;.<init>:()V` @kind direct;
  #L4449fc.  v2:= 1I;
  #L4449fe.  call temp:= `a`(v1, v2) @signature `Lr4/x1;.a:(I)Lr4/x1;` @kind virtual;
  #L444a04.  call temp:= `b`(v1) @signature `Lr4/x1;.b:()Lr4/b2;` @kind virtual;
  #L444a0a.  v1:= temp @kind object;
  #L444a0c.  call temp:= `b`(v0, v1) @signature `Ll7/c$b;.b:(Ljava/lang/annotation/Annotation;)Ll7/c$b;` @kind virtual;
  #L444a12.  v0:= temp @kind object;
  #L444a14.  call temp:= `a`(v0) @signature `Ll7/c$b;.a:()Ll7/c;` @kind virtual;
  #L444a1a.  v0:= "isColdCall" @kind object;
  #L444a1e.  call temp:= `a`(v0) @signature `Ll7/c;.a:(Ljava/lang/String;)Ll7/c$b;` @kind static;
  #L444a24.  v0:= temp @kind object;
  #L444a26.  v1:= new `r4.x1`;
  #L444a2a.  call `<init>`(v1) @signature `Lr4/x1;.<init>:()V` @kind direct;
  #L444a30.  v2:= 2I;
  #L444a32.  call temp:= `a`(v1, v2) @signature `Lr4/x1;.a:(I)Lr4/x1;` @kind virtual;
  #L444a38.  call temp:= `b`(v1) @signature `Lr4/x1;.b:()Lr4/b2;` @kind virtual;
  #L444a3e.  v1:= temp @kind object;
  #L444a40.  call temp:= `b`(v0, v1) @signature `Ll7/c$b;.b:(Ljava/lang/annotation/Annotation;)Ll7/c$b;` @kind virtual;
  #L444a46.  v0:= temp @kind object;
  #L444a48.  call temp:= `a`(v0) @signature `Ll7/c$b;.a:()Ll7/c;` @kind virtual;
  #L444a4e.  v0:= "imageInfo" @kind object;
  #L444a52.  call temp:= `a`(v0) @signature `Ll7/c;.a:(Ljava/lang/String;)Ll7/c$b;` @kind static;
  #L444a58.  v0:= temp @kind object;
  #L444a5a.  v1:= new `r4.x1`;
  #L444a5e.  call `<init>`(v1) @signature `Lr4/x1;.<init>:()V` @kind direct;
  #L444a64.  v2:= 3I;
  #L444a66.  call temp:= `a`(v1, v2) @signature `Lr4/x1;.a:(I)Lr4/x1;` @kind virtual;
  #L444a6c.  call temp:= `b`(v1) @signature `Lr4/x1;.b:()Lr4/b2;` @kind virtual;
  #L444a72.  v1:= temp @kind object;
  #L444a74.  call temp:= `b`(v0, v1) @signature `Ll7/c$b;.b:(Ljava/lang/annotation/Annotation;)Ll7/c$b;` @kind virtual;
  #L444a7a.  v0:= temp @kind object;
  #L444a7c.  call temp:= `a`(v0) @signature `Ll7/c$b;.a:()Ll7/c;` @kind virtual;
  #L444a82.  v0:= "options" @kind object;
  #L444a86.  call temp:= `a`(v0) @signature `Ll7/c;.a:(Ljava/lang/String;)Ll7/c$b;` @kind static;
  #L444a8c.  v0:= temp @kind object;
  #L444a8e.  v1:= new `r4.x1`;
  #L444a92.  call `<init>`(v1) @signature `Lr4/x1;.<init>:()V` @kind direct;
  #L444a98.  v2:= 4I;
  #L444a9a.  call temp:= `a`(v1, v2) @signature `Lr4/x1;.a:(I)Lr4/x1;` @kind virtual;
  #L444aa0.  call temp:= `b`(v1) @signature `Lr4/x1;.b:()Lr4/b2;` @kind virtual;
  #L444aa6.  v1:= temp @kind object;
  #L444aa8.  call temp:= `b`(v0, v1) @signature `Ll7/c$b;.b:(Ljava/lang/annotation/Annotation;)Ll7/c$b;` @kind virtual;
  #L444aae.  v0:= temp @kind object;
  #L444ab0.  call temp:= `a`(v0) @signature `Ll7/c$b;.a:()Ll7/c;` @kind virtual;
  #L444ab6.  return @kind void;
}
procedure `void` `<init>`(`r4.m3` v0 @kind this) @signature `Lr4/m3;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L444ac8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L444ace.  return @kind void;
}
procedure `void` `a`(`r4.m3` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lr4/m3;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L444ae0.  v1:= (`r4.k2`) v1 @kind object;
  #L444ae4.  v2:= (`l7.e`) v2 @kind object;
  #L444ae8.  v1:= 0I;
  #L444aea.  throw v1;
}
