record `r4.e0` @kind class @AccessFlag FINAL extends `java.util.AbstractMap` @kind class, `java.io.Serializable` @kind interface {
  `java.lang.Object` `r4.e0.o` @AccessFlag PRIVATE_TRANSIENT;
  `int`[] `r4.e0.p` @AccessFlag TRANSIENT;
  `java.lang.Object`[] `r4.e0.q` @AccessFlag TRANSIENT;
  `java.lang.Object`[] `r4.e0.r` @AccessFlag TRANSIENT;
  `int` `r4.e0.s` @AccessFlag PRIVATE_TRANSIENT;
  `int` `r4.e0.t` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Set` `r4.e0.u` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Set` `r4.e0.v` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Collection` `r4.e0.w` @AccessFlag PRIVATE_TRANSIENT;
}
global `java.lang.Object` `@@r4.e0.x` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lr4/e0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L440f4c.  v0:= new `java.lang.Object`;
  #L440f50.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L440f56.  `@@r4.e0.x` @type ^`java.lang.Object` := v0 @kind object;
  #L440f5a.  return @kind void;
}
procedure `void` `<init>`(`r4.e0` v0 @kind this, `int` v1 ) @signature `Lr4/e0;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L440f6c.  call `<init>`(v0) @signature `Ljava/util/AbstractMap;.<init>:()V` @kind direct;
  #L440f72.  v1:= 12I;
  #L440f76.  call `q`(v0, v1) @signature `Lr4/e0;.q:(I)V` @kind virtual;
  #L440f7c.  return @kind void;
}
procedure `void` `A`(`r4.e0` v1 @kind this, `int` v2 ) @signature `Lr4/e0;.A:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L441194.  call temp:= `numberOfLeadingZeros`(v2) @signature `Ljava/lang/Integer;.numberOfLeadingZeros:(I)I` @kind static;
  #L44119a.  v2:= temp;
  #L44119c.  v0:= v1.`r4.e0.s` @type ^`int`;
  #L4411a0.  v0:= v0 ^& -32;
  #L4411a4.  v2:= v2 - 32;
  #L4411a8.  v2:= v2 ^& 31;
  #L4411ac.  v2:= v2 ^| v0 @kind int;
  #L4411ae.  v1.`r4.e0.s` @type ^`int` := v2;
  #L4411b2.  return @kind void;
}
procedure `int`[] `B`(`r4.e0` v1 @kind this) @signature `Lr4/e0;.B:()[I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L4409e8.  v0:= v1.`r4.e0.p` @type ^`int`[] @kind object;
  #L4409ec.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4409f2.  return v0 @kind object;
}
procedure `java.lang.Object`[] `a`(`r4.e0` v1 @kind this) @signature `Lr4/e0;.a:()[Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L440e3c.  v0:= v1.`r4.e0.q` @type ^`java.lang.Object`[] @kind object;
  #L440e40.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L440e46.  return v0 @kind object;
}
procedure `java.lang.Object`[] `b`(`r4.e0` v1 @kind this) @signature `Lr4/e0;.b:()[Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L440e58.  v0:= v1.`r4.e0.r` @type ^`java.lang.Object`[] @kind object;
  #L440e5c.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L440e62.  return v0 @kind object;
}
procedure `int` `c`(`r4.e0` v0 @kind object) @signature `Lr4/e0;.c:(Lr4/e0;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4407cc.  v0:= v0.`r4.e0.s` @type ^`int`;
  #L4407d0.  return v0;
}
procedure `int` `d`(`r4.e0` v2 @kind object) @signature `Lr4/e0;.d:(Lr4/e0;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L4407e4.  v0:= v2.`r4.e0.t` @type ^`int`;
  #L4407e8.  v1:= v0 + -1;
  #L4407ec.  v2.`r4.e0.t` @type ^`int` := v1;
  #L4407f0.  return v0;
}
procedure `int` `e`(`r4.e0` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lr4/e0;.e:(Lr4/e0;Ljava/lang/Object;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L440804.  call temp:= `x`(v0, v1) @signature `Lr4/e0;.x:(Ljava/lang/Object;)I` @kind direct;
  #L44080a.  v0:= temp;
  #L44080c.  return v0;
}
procedure `int` `f`(`r4.e0` v0 @kind object) @signature `Lr4/e0;.f:(Lr4/e0;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L440820.  call temp:= `w`(v0) @signature `Lr4/e0;.w:()I` @kind direct;
  #L440826.  v0:= temp;
  #L440828.  return v0;
}
procedure `java.lang.Object` `i`(`r4.e0` v0 @kind object, `int` v1 ) @signature `Lr4/e0;.i:(Lr4/e0;I)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L440d28.  call temp:= `a`(v0) @signature `Lr4/e0;.a:()[Ljava/lang/Object;` @kind direct;
  #L440d2e.  v0:= temp @kind object;
  #L440d30.  v0:= v0[v1] @kind object;
  #L440d34.  return v0 @kind object;
}
procedure `java.lang.Object` `j`(`r4.e0` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lr4/e0;.j:(Lr4/e0;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L440d48.  call temp:= `z`(v0, v1) @signature `Lr4/e0;.z:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L440d4e.  v0:= temp @kind object;
  #L440d50.  return v0 @kind object;
}
procedure `java.lang.Object` `k`() @signature `Lr4/e0;.k:()Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L440d64.  v0:= `@@r4.e0.x` @type ^`java.lang.Object` @kind object;
  #L440d68.  return v0 @kind object;
}
procedure `java.lang.Object` `l`(`r4.e0` v0 @kind object, `int` v1 ) @signature `Lr4/e0;.l:(Lr4/e0;I)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L440d7c.  call temp:= `b`(v0) @signature `Lr4/e0;.b:()[Ljava/lang/Object;` @kind direct;
  #L440d82.  v0:= temp @kind object;
  #L440d84.  v0:= v0[v1] @kind object;
  #L440d88.  return v0 @kind object;
}
procedure `java.lang.Object` `m`(`r4.e0` v0 @kind object) @signature `Lr4/e0;.m:(Lr4/e0;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L440d9c.  v0:= v0.`r4.e0.o` @type ^`java.lang.Object` @kind object;
  #L440da0.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L440da6.  return v0 @kind object;
}
procedure `void` `o`(`r4.e0` v0 @kind object, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lr4/e0;.o:(Lr4/e0;ILjava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L441064.  call temp:= `b`(v0) @signature `Lr4/e0;.b:()[Ljava/lang/Object;` @kind direct;
  #L44106a.  v0:= temp @kind object;
  #L44106c.  v0[v1]:= v2 @kind object;
  #L441070.  return @kind void;
}
procedure `int`[] `t`(`r4.e0` v0 @kind object) @signature `Lr4/e0;.t:(Lr4/e0;)[I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4409cc.  call temp:= `B`(v0) @signature `Lr4/e0;.B:()[I` @kind direct;
  #L4409d2.  v0:= temp @kind object;
  #L4409d4.  return v0 @kind object;
}
procedure `java.lang.Object`[] `u`(`r4.e0` v0 @kind object) @signature `Lr4/e0;.u:(Lr4/e0;)[Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L440e74.  call temp:= `a`(v0) @signature `Lr4/e0;.a:()[Ljava/lang/Object;` @kind direct;
  #L440e7a.  v0:= temp @kind object;
  #L440e7c.  return v0 @kind object;
}
procedure `java.lang.Object`[] `v`(`r4.e0` v0 @kind object) @signature `Lr4/e0;.v:(Lr4/e0;)[Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L440e90.  call temp:= `b`(v0) @signature `Lr4/e0;.b:()[Ljava/lang/Object;` @kind direct;
  #L440e96.  v0:= temp @kind object;
  #L440e98.  return v0 @kind object;
}
procedure `int` `w`(`r4.e0` v2 @kind this) @signature `Lr4/e0;.w:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L440884.  v0:= v2.`r4.e0.s` @type ^`int`;
  #L440888.  v0:= v0 ^& 31;
  #L44088c.  v1:= 1I;
  #L44088e.  v0:= v1 ^< v0 @kind int;
  #L440892.  v0:= v0 + -1;
  #L440896.  return v0;
}
procedure `int` `x`(`r4.e0` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lr4/e0;.x:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4408a8.  call temp:= `s`(v7) @signature `Lr4/e0;.s:()Z` @kind virtual;
  #L4408ae.  v0:= temp;
  #L4408b0.  v1:= -1I;
  #L4408b2.  if v0 == 0 then goto L4408b8;
  #L4408b6.  return v1;
  #L4408b8.  call temp:= `a`(v8) @signature `Lr4/g0;.a:(Ljava/lang/Object;)I` @kind static;
  #L4408be.  v0:= temp;
  #L4408c0.  call temp:= `w`(v7) @signature `Lr4/e0;.w:()I` @kind direct;
  #L4408c6.  v2:= temp;
  #L4408c8.  v3:= v7.`r4.e0.o` @type ^`java.lang.Object` @kind object;
  #L4408cc.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4408d2.  v4:= v0 ^& v2 @kind int;
  #L4408d6.  call temp:= `c`(v3, v4) @signature `Lr4/f0;.c:(Ljava/lang/Object;I)I` @kind static;
  #L4408dc.  v3:= temp;
  #L4408de.  if v3 == 0 then goto L440920;
  #L4408e2.  v4:= ~v2 @kind int;
  #L4408e4.  v0:= v0 ^& v4 @kind int;
  #L4408e6.  v3:= v3 + v1 @kind int;
  #L4408e8.  call temp:= `B`(v7) @signature `Lr4/e0;.B:()[I` @kind direct;
  #L4408ee.  v5:= temp @kind object;
  #L4408f0.  v5:= v5[v3];
  #L4408f4.  v6:= v5 ^& v4 @kind int;
  #L4408f8.  if v6 != v0 then goto L440918;
  #L4408fc.  call temp:= `a`(v7) @signature `Lr4/e0;.a:()[Ljava/lang/Object;` @kind direct;
  #L440902.  v6:= temp @kind object;
  #L440904.  v6:= v6[v3] @kind object;
  #L440908.  call temp:= `a`(v8, v6) @signature `Lr4/td;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L44090e.  v6:= temp;
  #L440910.  if v6 != 0 then goto L440916;
  #L440914.  goto L440918;
  #L440916.  return v3;
  #L440918.  v3:= v5 ^& v2 @kind int;
  #L44091c.  if v3 != 0 then goto L4408e6;
  #L440920.  return v1;
}
procedure `int` `y`(`r4.e0` v8 @kind this, `int` v9 , `int` v10 , `int` v11 , `int` v12 ) @signature `Lr4/e0;.y:(IIII)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L440934.  call temp:= `d`(v10) @signature `Lr4/f0;.d:(I)Ljava/lang/Object;` @kind static;
  #L44093a.  v0:= temp @kind object;
  #L44093c.  v10:= v10 + -1;
  #L440940.  if v12 == 0 then goto L440950;
  #L440944.  v11:= v11 ^& v10 @kind int;
  #L440946.  v12:= v12 + 1;
  #L44094a.  call `e`(v0, v11, v12) @signature `Lr4/f0;.e:(Ljava/lang/Object;II)V` @kind static;
  #L440950.  v11:= v8.`r4.e0.o` @type ^`java.lang.Object` @kind object;
  #L440954.  call temp:= `getClass`(v11) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L44095a.  call temp:= `B`(v8) @signature `Lr4/e0;.B:()[I` @kind direct;
  #L440960.  v12:= temp @kind object;
  #L440962.  v1:= 0I;
  #L440964.  if v1 > v9 then goto L4409ae;
  #L440968.  call temp:= `c`(v11, v1) @signature `Lr4/f0;.c:(Ljava/lang/Object;I)I` @kind static;
  #L44096e.  v2:= temp;
  #L440970.  if v2 == 0 then goto L4409a8;
  #L440974.  v3:= v2 + -1;
  #L440978.  v4:= v12[v3];
  #L44097c.  v5:= ~v9 @kind int;
  #L44097e.  v5:= v5 ^& v4 @kind int;
  #L440980.  v5:= v5 ^| v1 @kind int;
  #L440982.  v6:= v5 ^& v10 @kind int;
  #L440986.  call temp:= `c`(v0, v6) @signature `Lr4/f0;.c:(Ljava/lang/Object;I)I` @kind static;
  #L44098c.  v7:= temp;
  #L44098e.  call `e`(v0, v6, v2) @signature `Lr4/f0;.e:(Ljava/lang/Object;II)V` @kind static;
  #L440994.  v2:= ~v10 @kind int;
  #L440996.  v2:= v2 ^& v5 @kind int;
  #L440998.  v5:= v7 ^& v10 @kind int;
  #L44099c.  v2:= v2 ^| v5 @kind int;
  #L44099e.  v12[v3]:= v2;
  #L4409a2.  v2:= v4 ^& v9 @kind int;
  #L4409a6.  goto L440970;
  #L4409a8.  v1:= v1 + 1;
  #L4409ac.  goto L440964;
  #L4409ae.  v8.`r4.e0.o` @type ^`java.lang.Object` := v0 @kind object;
  #L4409b2.  call `A`(v8, v10) @signature `Lr4/e0;.A:(I)V` @kind direct;
  #L4409b8.  return v10;
}
procedure `java.lang.Object` `z`(`r4.e0` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lr4/e0;.z:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L440db8.  call temp:= `s`(v8) @signature `Lr4/e0;.s:()Z` @kind virtual;
  #L440dbe.  v0:= temp;
  #L440dc0.  if v0 == 0 then goto L440dca;
  #L440dc4.  v9:= `@@r4.e0.x` @type ^`java.lang.Object` @kind object;
  #L440dc8.  return v9 @kind object;
  #L440dca.  call temp:= `w`(v8) @signature `Lr4/e0;.w:()I` @kind direct;
  #L440dd0.  v7:= temp;
  #L440dd2.  v3:= v8.`r4.e0.o` @type ^`java.lang.Object` @kind object;
  #L440dd6.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L440ddc.  v1:= 0I;
  #L440dde.  call temp:= `B`(v8) @signature `Lr4/e0;.B:()[I` @kind direct;
  #L440de4.  v4:= temp @kind object;
  #L440de6.  call temp:= `a`(v8) @signature `Lr4/e0;.a:()[Ljava/lang/Object;` @kind direct;
  #L440dec.  v5:= temp @kind object;
  #L440dee.  v6:= 0I;
  #L440df0.  v0:= v9 @kind object;
  #L440df2.  v2:= v7;
  #L440df4.  call temp:= `b`(v0, v1, v2, v3, v4, v5, v6) @signature `Lr4/f0;.b:(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;[I[Ljava/lang/Object;[Ljava/lang/Object;)I` @kind static;
  #L440dfa.  v9:= temp;
  #L440dfc.  v0:= -1I;
  #L440dfe.  if v9 != v0 then goto L440e08;
  #L440e02.  v9:= `@@r4.e0.x` @type ^`java.lang.Object` @kind object;
  #L440e06.  return v9 @kind object;
  #L440e08.  call temp:= `b`(v8) @signature `Lr4/e0;.b:()[Ljava/lang/Object;` @kind direct;
  #L440e0e.  v1:= temp @kind object;
  #L440e10.  v1:= v1[v9] @kind object;
  #L440e14.  call `r`(v8, v9, v7) @signature `Lr4/e0;.r:(II)V` @kind virtual;
  #L440e1a.  v9:= v8.`r4.e0.t` @type ^`int`;
  #L440e1e.  v9:= v9 + v0 @kind int;
  #L440e20.  v8.`r4.e0.t` @type ^`int` := v9;
  #L440e24.  call `p`(v8) @signature `Lr4/e0;.p:()V` @kind virtual;
  #L440e2a.  return v1 @kind object;
}
procedure `void` `clear`(`r4.e0` v6 @kind this) @signature `Lr4/e0;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L440f90.  call temp:= `s`(v6) @signature `Lr4/e0;.s:()Z` @kind virtual;
  #L440f96.  v0:= temp;
  #L440f98.  if v0 == 0 then goto L440f9e;
  #L440f9c.  return @kind void;
  #L440f9e.  call `p`(v6) @signature `Lr4/e0;.p:()V` @kind virtual;
  #L440fa4.  call temp:= `n`(v6) @signature `Lr4/e0;.n:()Ljava/util/Map;` @kind virtual;
  #L440faa.  v0:= temp @kind object;
  #L440fac.  v1:= 0I;
  #L440fae.  v2:= 0I;
  #L440fb0.  if v0 == 0 then goto L440fe0;
  #L440fb4.  call temp:= `size`(v6) @signature `Lr4/e0;.size:()I` @kind virtual;
  #L440fba.  v3:= temp;
  #L440fbc.  v4:= 3I;
  #L440fbe.  v5:= 1073741823I;
  #L440fc4.  call temp:= `a`(v3, v4, v5) @signature `Lr4/u1;.a:(III)I` @kind static;
  #L440fca.  v3:= temp;
  #L440fcc.  v6.`r4.e0.s` @type ^`int` := v3;
  #L440fd0.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L440fd6.  v6.`r4.e0.o` @type ^`java.lang.Object` := v1 @kind object;
  #L440fda.  v6.`r4.e0.t` @type ^`int` := v2;
  #L440fde.  return @kind void;
  #L440fe0.  call temp:= `a`(v6) @signature `Lr4/e0;.a:()[Ljava/lang/Object;` @kind direct;
  #L440fe6.  v0:= temp @kind object;
  #L440fe8.  v3:= v6.`r4.e0.t` @type ^`int`;
  #L440fec.  call `fill`(v0, v2, v3, v1) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L440ff2.  call temp:= `b`(v6) @signature `Lr4/e0;.b:()[Ljava/lang/Object;` @kind direct;
  #L440ff8.  v0:= temp @kind object;
  #L440ffa.  v3:= v6.`r4.e0.t` @type ^`int`;
  #L440ffe.  call `fill`(v0, v2, v3, v1) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L441004.  v0:= v6.`r4.e0.o` @type ^`java.lang.Object` @kind object;
  #L441008.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L44100e.  v1:= instanceof @variable v0 @type ^`byte`[] @kind boolean;
  #L441012.  if v1 == 0 then goto L441022;
  #L441016.  v0:= (`byte`[]) v0 @kind object;
  #L44101a.  call `fill`(v0, v2) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L441020.  goto L441040;
  #L441022.  v1:= instanceof @variable v0 @type ^`short`[] @kind boolean;
  #L441026.  if v1 == 0 then goto L441036;
  #L44102a.  v0:= (`short`[]) v0 @kind object;
  #L44102e.  call `fill`(v0, v2) @signature `Ljava/util/Arrays;.fill:([SS)V` @kind static;
  #L441034.  goto L441040;
  #L441036.  v0:= (`int`[]) v0 @kind object;
  #L44103a.  call `fill`(v0, v2) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L441040.  call temp:= `B`(v6) @signature `Lr4/e0;.B:()[I` @kind direct;
  #L441046.  v0:= temp @kind object;
  #L441048.  v1:= v6.`r4.e0.t` @type ^`int`;
  #L44104c.  call `fill`(v0, v2, v1, v2) @signature `Ljava/util/Arrays;.fill:([IIII)V` @kind static;
  #L441052.  goto L440fda;
}
procedure `boolean` `containsKey`(`r4.e0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr4/e0;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4406c8.  call temp:= `n`(v1) @signature `Lr4/e0;.n:()Ljava/util/Map;` @kind virtual;
  #L4406ce.  v0:= temp @kind object;
  #L4406d0.  if v0 == 0 then goto L4406de;
  #L4406d4.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4406da.  v2:= temp;
  #L4406dc.  goto L4406ee;
  #L4406de.  call temp:= `x`(v1, v2) @signature `Lr4/e0;.x:(Ljava/lang/Object;)I` @kind direct;
  #L4406e4.  v2:= temp;
  #L4406e6.  v0:= -1I;
  #L4406e8.  if v2 != v0 then goto L4406f0;
  #L4406ec.  v2:= 0I;
  #L4406ee.  return v2;
  #L4406f0.  v2:= 1I;
  #L4406f2.  return v2;
}
procedure `boolean` `containsValue`(`r4.e0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lr4/e0;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L440704.  call temp:= `n`(v3) @signature `Lr4/e0;.n:()Ljava/util/Map;` @kind virtual;
  #L44070a.  v0:= temp @kind object;
  #L44070c.  if v0 != 0 then goto L440740;
  #L440710.  v0:= 0I;
  #L440712.  v1:= 0I;
  #L440714.  v2:= v3.`r4.e0.t` @type ^`int`;
  #L440718.  if v1 >= v2 then goto L44073e;
  #L44071c.  call temp:= `b`(v3) @signature `Lr4/e0;.b:()[Ljava/lang/Object;` @kind direct;
  #L440722.  v2:= temp @kind object;
  #L440724.  v2:= v2[v1] @kind object;
  #L440728.  call temp:= `a`(v4, v2) @signature `Lr4/td;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L44072e.  v2:= temp;
  #L440730.  if v2 == 0 then goto L440738;
  #L440734.  v4:= 1I;
  #L440736.  return v4;
  #L440738.  v1:= v1 + 1;
  #L44073c.  goto L440714;
  #L44073e.  return v0;
  #L440740.  call temp:= `containsValue`(v0, v4) @signature `Ljava/util/Map;.containsValue:(Ljava/lang/Object;)Z` @kind interface;
  #L440746.  v4:= temp;
  #L440748.  return v4;
}
procedure `java.util.Set` `entrySet`(`r4.e0` v1 @kind this) @signature `Lr4/e0;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L440efc.  v0:= v1.`r4.e0.v` @type ^`java.util.Set` @kind object;
  #L440f00.  if v0 != 0 then goto L440f12;
  #L440f04.  v0:= new `r4.y`;
  #L440f08.  call `<init>`(v0, v1) @signature `Lr4/y;.<init>:(Lr4/e0;)V` @kind direct;
  #L440f0e.  v1.`r4.e0.v` @type ^`java.util.Set` := v0 @kind object;
  #L440f12.  return v0 @kind object;
}
procedure `int` `g`(`r4.e0` v1 @kind this) @signature `Lr4/e0;.g:()I` @AccessFlag FINAL {
    temp;
    v0;

  #L44083c.  call temp:= `isEmpty`(v1) @signature `Lr4/e0;.isEmpty:()Z` @kind virtual;
  #L440842.  v0:= temp;
  #L440844.  if v0 == 0 then goto L44084c;
  #L440848.  v0:= -1I;
  #L44084a.  return v0;
  #L44084c.  v0:= 0I;
  #L44084e.  return v0;
}
procedure `java.lang.Object` `get`(`r4.e0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr4/e0;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L440a04.  call temp:= `n`(v1) @signature `Lr4/e0;.n:()Ljava/util/Map;` @kind virtual;
  #L440a0a.  v0:= temp @kind object;
  #L440a0c.  if v0 == 0 then goto L440a1a;
  #L440a10.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L440a16.  v2:= temp @kind object;
  #L440a18.  return v2 @kind object;
  #L440a1a.  call temp:= `x`(v1, v2) @signature `Lr4/e0;.x:(Ljava/lang/Object;)I` @kind direct;
  #L440a20.  v2:= temp;
  #L440a22.  v0:= -1I;
  #L440a24.  if v2 != v0 then goto L440a2c;
  #L440a28.  v2:= 0I;
  #L440a2a.  return v2 @kind object;
  #L440a2c.  call temp:= `b`(v1) @signature `Lr4/e0;.b:()[Ljava/lang/Object;` @kind direct;
  #L440a32.  v0:= temp @kind object;
  #L440a34.  v2:= v0[v2] @kind object;
  #L440a38.  return v2 @kind object;
}
procedure `int` `h`(`r4.e0` v1 @kind this, `int` v2 ) @signature `Lr4/e0;.h:(I)I` @AccessFlag FINAL {
    temp;
    v0;

  #L440860.  v2:= v2 + 1;
  #L440864.  v0:= v1.`r4.e0.t` @type ^`int`;
  #L440868.  if v2 >= v0 then goto L44086e;
  #L44086c.  return v2;
  #L44086e.  v2:= -1I;
  #L440870.  return v2;
}
procedure `boolean` `isEmpty`(`r4.e0` v1 @kind this) @signature `Lr4/e0;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L44075c.  call temp:= `size`(v1) @signature `Lr4/e0;.size:()I` @kind virtual;
  #L440762.  v0:= temp;
  #L440764.  if v0 != 0 then goto L44076c;
  #L440768.  v0:= 1I;
  #L44076a.  return v0;
  #L44076c.  v0:= 0I;
  #L44076e.  return v0;
}
procedure `java.util.Set` `keySet`(`r4.e0` v1 @kind this) @signature `Lr4/e0;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L440f24.  v0:= v1.`r4.e0.u` @type ^`java.util.Set` @kind object;
  #L440f28.  if v0 != 0 then goto L440f3a;
  #L440f2c.  v0:= new `r4.a0`;
  #L440f30.  call `<init>`(v0, v1) @signature `Lr4/a0;.<init>:(Lr4/e0;)V` @kind direct;
  #L440f36.  v1.`r4.e0.u` @type ^`java.util.Set` := v0 @kind object;
  #L440f3a.  return v0 @kind object;
}
procedure `java.util.Map` `n`(`r4.e0` v2 @kind this) @signature `Lr4/e0;.n:()Ljava/util/Map;` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L440ed4.  v0:= v2.`r4.e0.o` @type ^`java.lang.Object` @kind object;
  #L440ed8.  v1:= instanceof @variable v0 @type ^`java.util.Map` @kind boolean;
  #L440edc.  if v1 == 0 then goto L440ee6;
  #L440ee0.  v0:= (`java.util.Map`) v0 @kind object;
  #L440ee4.  return v0 @kind object;
  #L440ee6.  v0:= 0I;
  #L440ee8.  return v0 @kind object;
}
procedure `void` `p`(`r4.e0` v1 @kind this) @signature `Lr4/e0;.p:()V` @AccessFlag FINAL {
    temp;
    v0;

  #L441084.  v0:= v1.`r4.e0.s` @type ^`int`;
  #L441088.  v0:= v0 + 32;
  #L44108c.  v1.`r4.e0.s` @type ^`int` := v0;
  #L441090.  return @kind void;
}
procedure `java.lang.Object` `put`(`r4.e0` v17 @kind this, `java.lang.Object` v18 @kind object, `java.lang.Object` v19 @kind object) @signature `Lr4/e0;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L440a4c.  v0:= v17 @kind object;
  #L440a50.  v1:= v18 @kind object;
  #L440a54.  v2:= v19 @kind object;
  #L440a58.  call temp:= `s`(v17) @signature `Lr4/e0;.s:()Z` @kind virtual;
  #L440a5e.  v3:= temp;
  #L440a60.  if v3 == 0 then goto L440ada;
  #L440a64.  call temp:= `s`(v17) @signature `Lr4/e0;.s:()Z` @kind virtual;
  #L440a6a.  v3:= temp;
  #L440a6c.  v4:= "Arrays already allocated" @kind object;
  #L440a70.  call `d`(v3, v4) @signature `Lr4/b;.d:(ZLjava/lang/Object;)V` @kind static;
  #L440a76.  v3:= v0.`r4.e0.s` @type ^`int`;
  #L440a7a.  v4:= v3 + 1;
  #L440a7e.  v5:= 2I;
  #L440a80.  call temp:= `max`(v4, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L440a86.  v4:= temp;
  #L440a88.  call temp:= `highestOneBit`(v4) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L440a8e.  v5:= temp;
  #L440a90.  v6:= (`double`) v5 @kind i2d;
  #L440a92.  v6:= (`int`) v6 @kind d2i;
  #L440a94.  if v4 <= v6 then goto L440aa2;
  #L440a98.  v5:= v5 + v5 @kind int;
  #L440a9a.  if v5 > 0 then goto L440aa2;
  #L440a9e.  v5:= 2.0F;
  #L440aa2.  v4:= 4I;
  #L440aa4.  call temp:= `max`(v4, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L440aaa.  v4:= temp;
  #L440aac.  call temp:= `d`(v4) @signature `Lr4/f0;.d:(I)Ljava/lang/Object;` @kind static;
  #L440ab2.  v5:= temp @kind object;
  #L440ab4.  v0.`r4.e0.o` @type ^`java.lang.Object` := v5 @kind object;
  #L440ab8.  v4:= v4 + -1;
  #L440abc.  call `A`(v0, v4) @signature `Lr4/e0;.A:(I)V` @kind direct;
  #L440ac2.  v4:= new `int`[v3];
  #L440ac6.  v0.`r4.e0.p` @type ^`int`[] := v4 @kind object;
  #L440aca.  v4:= new `java.lang.Object`[v3];
  #L440ace.  v0.`r4.e0.q` @type ^`java.lang.Object`[] := v4 @kind object;
  #L440ad2.  v3:= new `java.lang.Object`[v3];
  #L440ad6.  v0.`r4.e0.r` @type ^`java.lang.Object`[] := v3 @kind object;
  #L440ada.  call temp:= `n`(v17) @signature `Lr4/e0;.n:()Ljava/util/Map;` @kind virtual;
  #L440ae0.  v3:= temp @kind object;
  #L440ae2.  if v3 == 0 then goto L440af0;
  #L440ae6.  call temp:= `put`(v3, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L440aec.  v1:= temp @kind object;
  #L440aee.  return v1 @kind object;
  #L440af0.  call temp:= `B`(v17) @signature `Lr4/e0;.B:()[I` @kind direct;
  #L440af6.  v3:= temp @kind object;
  #L440af8.  call temp:= `a`(v17) @signature `Lr4/e0;.a:()[Ljava/lang/Object;` @kind direct;
  #L440afe.  v4:= temp @kind object;
  #L440b00.  call temp:= `b`(v17) @signature `Lr4/e0;.b:()[Ljava/lang/Object;` @kind direct;
  #L440b06.  v5:= temp @kind object;
  #L440b08.  v6:= v0.`r4.e0.t` @type ^`int`;
  #L440b0c.  v7:= v6 + 1;
  #L440b10.  call temp:= `a`(v18) @signature `Lr4/g0;.a:(Ljava/lang/Object;)I` @kind static;
  #L440b16.  v8:= temp;
  #L440b18.  call temp:= `w`(v17) @signature `Lr4/e0;.w:()I` @kind direct;
  #L440b1e.  v9:= temp;
  #L440b20.  v10:= v8 ^& v9 @kind int;
  #L440b24.  v11:= v0.`r4.e0.o` @type ^`java.lang.Object` @kind object;
  #L440b28.  call temp:= `getClass`(v11) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L440b2e.  call temp:= `c`(v11, v10) @signature `Lr4/f0;.c:(Ljava/lang/Object;I)I` @kind static;
  #L440b34.  v11:= temp;
  #L440b36.  if v11 != 0 then goto L440b64;
  #L440b3a.  if v7 <= v9 then goto L440b52;
  #L440b3e.  call temp:= `a`(v9) @signature `Lr4/f0;.a:(I)I` @kind static;
  #L440b44.  v3:= temp;
  #L440b46.  call temp:= `y`(v0, v9, v3, v8, v6) @signature `Lr4/e0;.y:(IIII)I` @kind direct;
  #L440b4c.  v9:= temp;
  #L440b4e.  goto L440c30;
  #L440b52.  v3:= v0.`r4.e0.o` @type ^`java.lang.Object` @kind object;
  #L440b56.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L440b5c.  call `e`(v3, v10, v7) @signature `Lr4/f0;.e:(Ljava/lang/Object;II)V` @kind static;
  #L440b62.  goto L440c30;
  #L440b64.  v10:= ~v9 @kind int;
  #L440b66.  v14:= v8 ^& v10 @kind int;
  #L440b6a.  v15:= 0I;
  #L440b6c.  v11:= v11 + -1;
  #L440b70.  v16:= v3[v11];
  #L440b74.  v12:= v16 ^& v10 @kind int;
  #L440b78.  if v12 != v14 then goto L440b98;
  #L440b7c.  v13:= v4[v11] @kind object;
  #L440b80.  call temp:= `a`(v1, v13) @signature `Lr4/td;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L440b86.  v13:= temp;
  #L440b88.  if v13 != 0 then goto L440b8e;
  #L440b8c.  goto L440b98;
  #L440b8e.  v1:= v5[v11] @kind object;
  #L440b92.  v5[v11]:= v2 @kind object;
  #L440b96.  return v1 @kind object;
  #L440b98.  v13:= v16 ^& v9 @kind int;
  #L440b9c.  v16:= 1I;
  #L440ba0.  v15:= v15 + 1;
  #L440ba4.  if v13 != 0 then goto L440cd4;
  #L440ba8.  v4:= 9I;
  #L440bac.  if v15 < v4 then goto L440c20;
  #L440bb0.  call temp:= `w`(v17) @signature `Lr4/e0;.w:()I` @kind direct;
  #L440bb6.  v3:= temp;
  #L440bb8.  v4:= new `java.util.LinkedHashMap`;
  #L440bbc.  v3:= v3 + 1;
  #L440bc0.  v5:= 1.0F;
  #L440bc4.  call `<init>`(v4, v3, v5) @signature `Ljava/util/LinkedHashMap;.<init>:(IF)V` @kind direct;
  #L440bca.  call temp:= `g`(v17) @signature `Lr4/e0;.g:()I` @kind virtual;
  #L440bd0.  v3:= temp;
  #L440bd2.  if v3 < 0 then goto L440bfe;
  #L440bd6.  call temp:= `a`(v17) @signature `Lr4/e0;.a:()[Ljava/lang/Object;` @kind direct;
  #L440bdc.  v5:= temp @kind object;
  #L440bde.  v5:= v5[v3] @kind object;
  #L440be2.  call temp:= `b`(v17) @signature `Lr4/e0;.b:()[Ljava/lang/Object;` @kind direct;
  #L440be8.  v6:= temp @kind object;
  #L440bea.  v6:= v6[v3] @kind object;
  #L440bee.  call temp:= `put`(v4, v5, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L440bf4.  call temp:= `h`(v0, v3) @signature `Lr4/e0;.h:(I)I` @kind virtual;
  #L440bfa.  v3:= temp;
  #L440bfc.  goto L440bd2;
  #L440bfe.  v0.`r4.e0.o` @type ^`java.lang.Object` := v4 @kind object;
  #L440c02.  v3:= 0I;
  #L440c04.  v0.`r4.e0.p` @type ^`int`[] := v3 @kind object;
  #L440c08.  v0.`r4.e0.q` @type ^`java.lang.Object`[] := v3 @kind object;
  #L440c0c.  v0.`r4.e0.r` @type ^`java.lang.Object`[] := v3 @kind object;
  #L440c10.  call `p`(v17) @signature `Lr4/e0;.p:()V` @kind virtual;
  #L440c16.  call temp:= `put`(v4, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L440c1c.  v1:= temp @kind object;
  #L440c1e.  return v1 @kind object;
  #L440c20.  if v7 <= v9 then goto L440c26;
  #L440c24.  goto L440b3e;
  #L440c26.  v4:= v7 ^& v9 @kind int;
  #L440c2a.  v4:= v4 ^| v12 @kind int;
  #L440c2c.  v3[v11]:= v4;
  #L440c30.  call temp:= `B`(v17) @signature `Lr4/e0;.B:()[I` @kind direct;
  #L440c36.  v3:= temp @kind object;
  #L440c38.  v3:= length @variable v3;
  #L440c3a.  if v7 <= v3 then goto L440c9e;
  #L440c3e.  v4:= 1073741823I;
  #L440c44.  v5:= v3 ^>> 1;
  #L440c48.  v11:= 1I;
  #L440c4a.  call temp:= `max`(v11, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L440c50.  v5:= temp;
  #L440c52.  v5:= v5 + v3 @kind int;
  #L440c54.  v5:= v5 ^| v11 @kind int;
  #L440c56.  call temp:= `min`(v4, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L440c5c.  v4:= temp;
  #L440c5e.  if v4 == v3 then goto L440c9e;
  #L440c62.  call temp:= `B`(v17) @signature `Lr4/e0;.B:()[I` @kind direct;
  #L440c68.  v3:= temp @kind object;
  #L440c6a.  call temp:= `copyOf`(v3, v4) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L440c70.  v3:= temp @kind object;
  #L440c72.  v0.`r4.e0.p` @type ^`int`[] := v3 @kind object;
  #L440c76.  call temp:= `a`(v17) @signature `Lr4/e0;.a:()[Ljava/lang/Object;` @kind direct;
  #L440c7c.  v3:= temp @kind object;
  #L440c7e.  call temp:= `copyOf`(v3, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L440c84.  v3:= temp @kind object;
  #L440c86.  v0.`r4.e0.q` @type ^`java.lang.Object`[] := v3 @kind object;
  #L440c8a.  call temp:= `b`(v17) @signature `Lr4/e0;.b:()[Ljava/lang/Object;` @kind direct;
  #L440c90.  v3:= temp @kind object;
  #L440c92.  call temp:= `copyOf`(v3, v4) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L440c98.  v3:= temp @kind object;
  #L440c9a.  v0.`r4.e0.r` @type ^`java.lang.Object`[] := v3 @kind object;
  #L440c9e.  call temp:= `B`(v17) @signature `Lr4/e0;.B:()[I` @kind direct;
  #L440ca4.  v3:= temp @kind object;
  #L440ca6.  v4:= ~v9 @kind int;
  #L440ca8.  v4:= v4 ^& v8 @kind int;
  #L440caa.  v3[v6]:= v4;
  #L440cae.  call temp:= `a`(v17) @signature `Lr4/e0;.a:()[Ljava/lang/Object;` @kind direct;
  #L440cb4.  v3:= temp @kind object;
  #L440cb6.  v3[v6]:= v1 @kind object;
  #L440cba.  call temp:= `b`(v17) @signature `Lr4/e0;.b:()[Ljava/lang/Object;` @kind direct;
  #L440cc0.  v1:= temp @kind object;
  #L440cc2.  v1[v6]:= v2 @kind object;
  #L440cc6.  v0.`r4.e0.t` @type ^`int` := v7;
  #L440cca.  call `p`(v17) @signature `Lr4/e0;.p:()V` @kind virtual;
  #L440cd0.  v12:= 0I;
  #L440cd2.  return v12 @kind object;
  #L440cd4.  v11:= v13;
  #L440cd6.  goto L440b6c;
}
procedure `void` `q`(`r4.e0` v2 @kind this, `int` v3 ) @signature `Lr4/e0;.q:(I)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L4410a4.  v3:= 12I;
  #L4410a8.  v0:= 1I;
  #L4410aa.  v1:= 1073741823I;
  #L4410b0.  call temp:= `a`(v3, v0, v1) @signature `Lr4/u1;.a:(III)I` @kind static;
  #L4410b6.  v3:= temp;
  #L4410b8.  v2.`r4.e0.s` @type ^`int` := v3;
  #L4410bc.  return @kind void;
}
procedure `void` `r`(`r4.e0` v9 @kind this, `int` v10 , `int` v11 ) @signature `Lr4/e0;.r:(II)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4410d0.  v0:= v9.`r4.e0.o` @type ^`java.lang.Object` @kind object;
  #L4410d4.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4410da.  call temp:= `B`(v9) @signature `Lr4/e0;.B:()[I` @kind direct;
  #L4410e0.  v1:= temp @kind object;
  #L4410e2.  call temp:= `a`(v9) @signature `Lr4/e0;.a:()[Ljava/lang/Object;` @kind direct;
  #L4410e8.  v2:= temp @kind object;
  #L4410ea.  call temp:= `b`(v9) @signature `Lr4/e0;.b:()[Ljava/lang/Object;` @kind direct;
  #L4410f0.  v3:= temp @kind object;
  #L4410f2.  call temp:= `size`(v9) @signature `Lr4/e0;.size:()I` @kind virtual;
  #L4410f8.  v4:= temp;
  #L4410fa.  v4:= v4 + -1;
  #L4410fe.  v5:= 0I;
  #L441100.  v6:= 0I;
  #L441102.  if v10 >= v4 then goto L441176;
  #L441106.  v7:= v2[v4] @kind object;
  #L44110a.  v2[v10]:= v7 @kind object;
  #L44110e.  v8:= v3[v4] @kind object;
  #L441112.  v3[v10]:= v8 @kind object;
  #L441116.  v2[v4]:= v6 @kind object;
  #L44111a.  v3[v4]:= v6 @kind object;
  #L44111e.  v2:= v1[v4];
  #L441122.  v1[v10]:= v2;
  #L441126.  v1[v4]:= v5;
  #L44112a.  call temp:= `a`(v7) @signature `Lr4/g0;.a:(Ljava/lang/Object;)I` @kind static;
  #L441130.  v2:= temp;
  #L441132.  v2:= v2 ^& v11 @kind int;
  #L441134.  call temp:= `c`(v0, v2) @signature `Lr4/f0;.c:(Ljava/lang/Object;I)I` @kind static;
  #L44113a.  v3:= temp;
  #L44113c.  v4:= v4 + 1;
  #L441140.  if v3 == v4 then goto L44116a;
  #L441144.  v3:= v3 + -1;
  #L441148.  v0:= v1[v3];
  #L44114c.  v2:= v0 ^& v11 @kind int;
  #L441150.  if v2 == v4 then goto L441158;
  #L441154.  v3:= v2;
  #L441156.  goto L441144;
  #L441158.  v2:= ~v11 @kind int;
  #L44115a.  v0:= v0 ^& v2 @kind int;
  #L44115c.  v10:= v10 + 1;
  #L441160.  v10:= v10 ^& v11 @kind int;
  #L441162.  v10:= v10 ^| v0 @kind int;
  #L441164.  v1[v3]:= v10;
  #L441168.  return @kind void;
  #L44116a.  v10:= v10 + 1;
  #L44116e.  call `e`(v0, v2, v10) @signature `Lr4/f0;.e:(Ljava/lang/Object;II)V` @kind static;
  #L441174.  return @kind void;
  #L441176.  v2[v10]:= v6 @kind object;
  #L44117a.  v3[v10]:= v6 @kind object;
  #L44117e.  v1[v10]:= v5;
  #L441182.  return @kind void;
}
procedure `java.lang.Object` `remove`(`r4.e0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr4/e0;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L440cec.  call temp:= `n`(v1) @signature `Lr4/e0;.n:()Ljava/util/Map;` @kind virtual;
  #L440cf2.  v0:= temp @kind object;
  #L440cf4.  if v0 == 0 then goto L440d02;
  #L440cf8.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L440cfe.  v2:= temp @kind object;
  #L440d00.  return v2 @kind object;
  #L440d02.  call temp:= `z`(v1, v2) @signature `Lr4/e0;.z:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L440d08.  v2:= temp @kind object;
  #L440d0a.  v0:= `@@r4.e0.x` @type ^`java.lang.Object` @kind object;
  #L440d0e.  if v2 != v0 then goto L440d14;
  #L440d12.  v2:= 0I;
  #L440d14.  return v2 @kind object;
}
procedure `boolean` `s`(`r4.e0` v1 @kind this) @signature `Lr4/e0;.s:()Z` @AccessFlag FINAL {
    temp;
    v0;

  #L440780.  v0:= v1.`r4.e0.o` @type ^`java.lang.Object` @kind object;
  #L440784.  if v0 != 0 then goto L44078c;
  #L440788.  v0:= 1I;
  #L44078a.  return v0;
  #L44078c.  v0:= 0I;
  #L44078e.  return v0;
}
procedure `int` `size`(`r4.e0` v1 @kind this) @signature `Lr4/e0;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4407a0.  call temp:= `n`(v1) @signature `Lr4/e0;.n:()Ljava/util/Map;` @kind virtual;
  #L4407a6.  v0:= temp @kind object;
  #L4407a8.  if v0 == 0 then goto L4407b6;
  #L4407ac.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L4407b2.  v0:= temp;
  #L4407b4.  goto L4407ba;
  #L4407b6.  v0:= v1.`r4.e0.t` @type ^`int`;
  #L4407ba.  return v0;
}
procedure `java.util.Collection` `values`(`r4.e0` v1 @kind this) @signature `Lr4/e0;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L440eac.  v0:= v1.`r4.e0.w` @type ^`java.util.Collection` @kind object;
  #L440eb0.  if v0 != 0 then goto L440ec2;
  #L440eb4.  v0:= new `r4.d0`;
  #L440eb8.  call `<init>`(v0, v1) @signature `Lr4/d0;.<init>:(Lr4/e0;)V` @kind direct;
  #L440ebe.  v1.`r4.e0.w` @type ^`java.util.Collection` := v0 @kind object;
  #L440ec2.  return v0 @kind object;
}
