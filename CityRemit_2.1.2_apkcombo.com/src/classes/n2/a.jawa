record `n2.a` @kind class @AccessFlag PUBLIC_FINAL extends `android.os.Parcelable` @kind interface {
  `n2.a$b`[] `n2.a.o` @AccessFlag PRIVATE_FINAL;
}
global `android.os.Parcelable$Creator` `@@n2.a.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln2/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3edd4c.  v0:= new `n2.a$a`;
  #L3edd50.  call `<init>`(v0) @signature `Ln2/a$a;.<init>:()V` @kind direct;
  #L3edd56.  `@@n2.a.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L3edd5a.  return @kind void;
}
procedure `void` `<init>`(`n2.a` v3 @kind this, `android.os.Parcel` v4 @kind object) @signature `Ln2/a;.<init>:(Landroid/os/Parcel;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3edd6c.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3edd72.  call temp:= `readInt`(v4) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L3edd78.  v0:= temp;
  #L3edd7a.  v0:= new `n2.a$b`[v0];
  #L3edd7e.  v3.`n2.a.o` @type ^`n2.a$b`[] := v0 @kind object;
  #L3edd82.  v0:= 0I;
  #L3edd84.  v1:= v3.`n2.a.o` @type ^`n2.a$b`[] @kind object;
  #L3edd88.  v2:= length @variable v1;
  #L3edd8a.  if v0 >= v2 then goto L3eddb0;
  #L3edd8e.  v2:= constclass @type ^`n2.a$b` @kind object;
  #L3edd92.  call temp:= `getClassLoader`(v2) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L3edd98.  v2:= temp @kind object;
  #L3edd9a.  call temp:= `readParcelable`(v4, v2) @signature `Landroid/os/Parcel;.readParcelable:(Ljava/lang/ClassLoader;)Landroid/os/Parcelable;` @kind virtual;
  #L3edda0.  v2:= temp @kind object;
  #L3edda2.  v2:= (`n2.a$b`) v2 @kind object;
  #L3edda6.  v1[v0]:= v2 @kind object;
  #L3eddaa.  v0:= v0 + 1;
  #L3eddae.  goto L3edd84;
  #L3eddb0.  return @kind void;
}
procedure `void` `<init>`(`n2.a` v1 @kind this, `java.util.List` v2 @kind object) @signature `Ln2/a;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3eddc4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eddca.  v0:= 0I;
  #L3eddcc.  v0:= new `n2.a$b`[v0];
  #L3eddd0.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3eddd6.  v2:= temp @kind object;
  #L3eddd8.  v2:= (`n2.a$b`[]) v2 @kind object;
  #L3edddc.  v1.`n2.a.o` @type ^`n2.a$b`[] := v2 @kind object;
  #L3edde0.  return @kind void;
}
procedure `void` `<init>`(`n2.a` v0 @kind this, `n2.a$b`[] v1 @kind object) @signature `Ln2/a;.<init>:([Ln2/a$b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3eddf4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eddfa.  v0.`n2.a.o` @type ^`n2.a$b`[] := v1 @kind object;
  #L3eddfe.  return @kind void;
}
procedure `n2.a` `a`(`n2.a` v2 @kind this, `n2.a$b`[] v3 @kind object) @signature `Ln2/a;.a:([Ln2/a$b;)Ln2/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3edcd8.  v0:= length @variable v3;
  #L3edcda.  if v0 != 0 then goto L3edce0;
  #L3edcde.  return v2 @kind object;
  #L3edce0.  v0:= new `n2.a`;
  #L3edce4.  v1:= v2.`n2.a.o` @type ^`n2.a$b`[] @kind object;
  #L3edce8.  call temp:= `E0`(v1, v3) @signature `Ls3/l0;.E0:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L3edcee.  v3:= temp @kind object;
  #L3edcf0.  v3:= (`n2.a$b`[]) v3 @kind object;
  #L3edcf4.  call `<init>`(v0, v3) @signature `Ln2/a;.<init>:([Ln2/a$b;)V` @kind direct;
  #L3edcfa.  return v0 @kind object;
}
procedure `n2.a` `b`(`n2.a` v0 @kind this, `n2.a` v1 @kind object) @signature `Ln2/a;.b:(Ln2/a;)Ln2/a;` @AccessFlag PUBLIC {
    temp;

  #L3edd0c.  if v1 != 0 then goto L3edd12;
  #L3edd10.  return v0 @kind object;
  #L3edd12.  v1:= v1.`n2.a.o` @type ^`n2.a$b`[] @kind object;
  #L3edd16.  call temp:= `a`(v0, v1) @signature `Ln2/a;.a:([Ln2/a$b;)Ln2/a;` @kind virtual;
  #L3edd1c.  v1:= temp @kind object;
  #L3edd1e.  return v1 @kind object;
}
procedure `n2.a$b` `c`(`n2.a` v1 @kind this, `int` v2 ) @signature `Ln2/a;.c:(I)Ln2/a$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3edd30.  v0:= v1.`n2.a.o` @type ^`n2.a$b`[] @kind object;
  #L3edd34.  v2:= v0[v2] @kind object;
  #L3edd38.  return v2 @kind object;
}
procedure `int` `d`(`n2.a` v1 @kind this) @signature `Ln2/a;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3edc80.  v0:= v1.`n2.a.o` @type ^`n2.a$b`[] @kind object;
  #L3edc84.  v0:= length @variable v0;
  #L3edc86.  return v0;
}
procedure `int` `describeContents`(`n2.a` v1 @kind this) @signature `Ln2/a;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3edc4c.  v0:= 0I;
  #L3edc4e.  return v0;
}
procedure `boolean` `equals`(`n2.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Ln2/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3edc04.  if v2 != v3 then goto L3edc0c;
  #L3edc08.  v3:= 1I;
  #L3edc0a.  return v3;
  #L3edc0c.  if v3 == 0 then goto L3edc38;
  #L3edc10.  v0:= constclass @type ^`n2.a` @kind object;
  #L3edc14.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3edc1a.  v1:= temp @kind object;
  #L3edc1c.  if v0 == v1 then goto L3edc22;
  #L3edc20.  goto L3edc38;
  #L3edc22.  v3:= (`n2.a`) v3 @kind object;
  #L3edc26.  v0:= v2.`n2.a.o` @type ^`n2.a$b`[] @kind object;
  #L3edc2a.  v3:= v3.`n2.a.o` @type ^`n2.a$b`[] @kind object;
  #L3edc2e.  call temp:= `equals`(v0, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L3edc34.  v3:= temp;
  #L3edc36.  return v3;
  #L3edc38.  v3:= 0I;
  #L3edc3a.  return v3;
}
procedure `int` `hashCode`(`n2.a` v1 @kind this) @signature `Ln2/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3edc60.  v0:= v1.`n2.a.o` @type ^`n2.a$b`[] @kind object;
  #L3edc64.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L3edc6a.  v0:= temp;
  #L3edc6c.  return v0;
}
procedure `java.lang.String` `toString`(`n2.a` v2 @kind this) @signature `Ln2/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3edc98.  v0:= new `java.lang.StringBuilder`;
  #L3edc9c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3edca2.  v1:= "entries=" @kind object;
  #L3edca6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3edcac.  v1:= v2.`n2.a.o` @type ^`n2.a$b`[] @kind object;
  #L3edcb0.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3edcb6.  v1:= temp @kind object;
  #L3edcb8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3edcbe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3edcc4.  v0:= temp @kind object;
  #L3edcc6.  return v0 @kind object;
}
procedure `void` `writeToParcel`(`n2.a` v4 @kind this, `android.os.Parcel` v5 @kind object, `int` v6 ) @signature `Ln2/a;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ede10.  v6:= v4.`n2.a.o` @type ^`n2.a$b`[] @kind object;
  #L3ede14.  v6:= length @variable v6;
  #L3ede16.  call `writeInt`(v5, v6) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L3ede1c.  v6:= v4.`n2.a.o` @type ^`n2.a$b`[] @kind object;
  #L3ede20.  v0:= length @variable v6;
  #L3ede22.  v1:= 0I;
  #L3ede24.  v2:= 0I;
  #L3ede26.  if v2 >= v0 then goto L3ede3a;
  #L3ede2a.  v3:= v6[v2] @kind object;
  #L3ede2e.  call `writeParcelable`(v5, v3, v1) @signature `Landroid/os/Parcel;.writeParcelable:(Landroid/os/Parcelable;I)V` @kind virtual;
  #L3ede34.  v2:= v2 + 1;
  #L3ede38.  goto L3ede26;
  #L3ede3a.  return @kind void;
}
