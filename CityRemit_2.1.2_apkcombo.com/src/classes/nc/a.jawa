record `nc.a` @kind class @AccessFlag  extends `nc.b` @kind class {
}
procedure `void` `<init>`(`nc.a` v6 @kind this, `java.lang.Class` v7 @kind object) @signature `Lnc/a;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f4330.  v2:= 0I;
  #L3f4332.  v3:= 0I;
  #L3f4334.  v4:= 0I;
  #L3f4336.  v5:= 0I;
  #L3f4338.  v0:= v6 @kind object;
  #L3f433a.  v1:= v7 @kind object;
  #L3f433c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lnc/b;.<init>:(Ljava/lang/Class;Lnc/f;Lnc/f;Lnc/f;Lnc/f;)V` @kind direct;
  #L3f4342.  return @kind void;
}
procedure `nc.g` `w`() @signature `Lnc/a;.w:()Lnc/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f42d4.  call temp:= `p`() @signature `Lnc/g;.p:()Z` @kind static;
  #L3f42da.  v0:= temp;
  #L3f42dc.  v1:= 0I;
  #L3f42de.  if v0 != 0 then goto L3f42e4;
  #L3f42e2.  return v1 @kind object;
  #L3f42e4.  call temp:= `x`() @signature `Lnc/b;.x:()I` @kind static;
  #L3f42ea.  v0:= temp;
  #L3f42ec.  v2:= 29I;
  #L3f42f0.  if v0 < v2 then goto L3f430c;
  #L3f42f4.  v0:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L3f42f8.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3f42fe.  v0:= temp @kind object;
  #L3f4300.  v2:= new `nc.a`;
  #L3f4304.  call `<init>`(v2, v0) @signature `Lnc/a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L3f430a.  return v2 @kind object;
  #L3f430c.  return v1 @kind object;
  catch `java.lang.ClassNotFoundException` @[L3f42e4..L3f430a] goto L3f430c;
}
procedure `void` `z`(`nc.a` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lnc/a;.z:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f43bc.  call temp:= `isSupportedSocket`(v2) @signature `Landroid/net/ssl/SSLSockets;.isSupportedSocket:(Ljavax/net/ssl/SSLSocket;)Z` @kind static;
  #L3f43c2.  v0:= temp;
  #L3f43c4.  if v0 == 0 then goto L3f43d0;
  #L3f43c8.  v0:= 1I;
  #L3f43ca.  call `setUseSessionTickets`(v2, v0) @signature `Landroid/net/ssl/SSLSockets;.setUseSessionTickets:(Ljavax/net/ssl/SSLSocket;Z)V` @kind static;
  #L3f43d0.  return @kind void;
}
procedure `void` `g`(`nc.a` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object, `java.lang.String` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lnc/a;.g:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f4354.  call `z`(v1, v2) @signature `Lnc/a;.z:(Ljavax/net/ssl/SSLSocket;)V` @kind direct;
  #L3f435a.  call temp:= `getSSLParameters`(v2) @signature `Ljavax/net/ssl/SSLSocket;.getSSLParameters:()Ljavax/net/ssl/SSLParameters;` @kind virtual;
  #L3f4360.  v3:= temp @kind object;
  #L3f4362.  call temp:= `b`(v4) @signature `Lnc/g;.b:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3f4368.  v4:= temp @kind object;
  #L3f436a.  v0:= 0I;
  #L3f436c.  v0:= new `java.lang.String`[v0];
  #L3f4370.  call temp:= `toArray`(v4, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3f4376.  v4:= temp @kind object;
  #L3f4378.  v4:= (`java.lang.String`[]) v4 @kind object;
  #L3f437c.  call `setApplicationProtocols`(v3, v4) @signature `Ljavax/net/ssl/SSLParameters;.setApplicationProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L3f4382.  call `setSSLParameters`(v2, v3) @signature `Ljavax/net/ssl/SSLSocket;.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V` @kind virtual;
  #L3f4388.  return @kind void;
  #L3f438a.  v2:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L3f438c.  v3:= new `java.io.IOException`;
  #L3f4390.  v4:= "Android internal error" @kind object;
  #L3f4394.  call `<init>`(v3, v4, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3f439a.  throw v3;
  catch `java.lang.IllegalArgumentException` @[L3f4354..L3f4388] goto L3f438a;
}
procedure `java.lang.String` `n`(`nc.a` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lnc/a;.n:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f42a4.  call temp:= `getApplicationProtocol`(v2) @signature `Ljavax/net/ssl/SSLSocket;.getApplicationProtocol:()Ljava/lang/String;` @kind virtual;
  #L3f42aa.  v2:= temp @kind object;
  #L3f42ac.  if v2 == 0 then goto L3f42c0;
  #L3f42b0.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3f42b6.  v0:= temp;
  #L3f42b8.  if v0 == 0 then goto L3f42be;
  #L3f42bc.  goto L3f42c0;
  #L3f42be.  return v2 @kind object;
  #L3f42c0.  v2:= 0I;
  #L3f42c2.  return v2 @kind object;
}
