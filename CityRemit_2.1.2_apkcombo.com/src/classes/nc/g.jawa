record `nc.g` @kind class @AccessFlag PUBLIC {
}
global `nc.g` `@@nc.g.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@nc.g.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lnc/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f5ac0.  call temp:= `k`() @signature `Lnc/g;.k:()Lnc/g;` @kind static;
  #L3f5ac6.  v0:= temp @kind object;
  #L3f5ac8.  `@@nc.g.a` @type ^`nc.g` := v0 @kind object;
  #L3f5acc.  v0:= constclass @type ^`gc.u` @kind object;
  #L3f5ad0.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3f5ad6.  v0:= temp @kind object;
  #L3f5ad8.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L3f5ade.  v0:= temp @kind object;
  #L3f5ae0.  `@@nc.g.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L3f5ae4.  return @kind void;
}
procedure `void` `<init>`(`nc.g` v0 @kind this) @signature `Lnc/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f5af8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f5afe.  return @kind void;
}
procedure `java.util.List` `b`(`java.util.List` v5 @kind object) @signature `Lnc/g;.b:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f58d4.  v0:= new `java.util.ArrayList`;
  #L3f58d8.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3f58de.  v1:= temp;
  #L3f58e0.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3f58e6.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3f58ec.  v1:= temp;
  #L3f58ee.  v2:= 0I;
  #L3f58f0.  if v2 >= v1 then goto L3f591e;
  #L3f58f4.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3f58fa.  v3:= temp @kind object;
  #L3f58fc.  v3:= (`gc.v`) v3 @kind object;
  #L3f5900.  v4:= `@@gc.v.p` @type ^`gc.v` @kind object;
  #L3f5904.  if v3 != v4 then goto L3f590a;
  #L3f5908.  goto L3f5918;
  #L3f590a.  call temp:= `toString`(v3) @signature `Lgc/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f5910.  v3:= temp @kind object;
  #L3f5912.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3f5918.  v2:= v2 + 1;
  #L3f591c.  goto L3f58f0;
  #L3f591e.  return v0 @kind object;
}
procedure `byte`[] `e`(`java.util.List` v5 @kind object) @signature `Lnc/g;.e:(Ljava/util/List;)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f57f4.  v0:= new `qc.c`;
  #L3f57f8.  call `<init>`(v0) @signature `Lqc/c;.<init>:()V` @kind direct;
  #L3f57fe.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3f5804.  v1:= temp;
  #L3f5806.  v2:= 0I;
  #L3f5808.  if v2 >= v1 then goto L3f584c;
  #L3f580c.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3f5812.  v3:= temp @kind object;
  #L3f5814.  v3:= (`gc.v`) v3 @kind object;
  #L3f5818.  v4:= `@@gc.v.p` @type ^`gc.v` @kind object;
  #L3f581c.  if v3 != v4 then goto L3f5822;
  #L3f5820.  goto L3f5846;
  #L3f5822.  call temp:= `toString`(v3) @signature `Lgc/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f5828.  v4:= temp @kind object;
  #L3f582a.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3f5830.  v4:= temp;
  #L3f5832.  call temp:= `p0`(v0, v4) @signature `Lqc/c;.p0:(I)Lqc/c;` @kind virtual;
  #L3f5838.  call temp:= `toString`(v3) @signature `Lgc/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f583e.  v3:= temp @kind object;
  #L3f5840.  call temp:= `u0`(v0, v3) @signature `Lqc/c;.u0:(Ljava/lang/String;)Lqc/c;` @kind virtual;
  #L3f5846.  v2:= v2 + 1;
  #L3f584a.  goto L3f5808;
  #L3f584c.  call temp:= `b0`(v0) @signature `Lqc/c;.b0:()[B` @kind virtual;
  #L3f5852.  v5:= temp @kind object;
  #L3f5854.  return v5 @kind object;
}
procedure `nc.g` `i`() @signature `Lnc/g;.i:()Lnc/g;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3f59a8.  call temp:= `w`() @signature `Lnc/a;.w:()Lnc/g;` @kind static;
  #L3f59ae.  v0:= temp @kind object;
  #L3f59b0.  if v0 == 0 then goto L3f59b6;
  #L3f59b4.  return v0 @kind object;
  #L3f59b6.  call temp:= `w`() @signature `Lnc/b;.w:()Lnc/g;` @kind static;
  #L3f59bc.  v0:= temp @kind object;
  #L3f59be.  v1:= "No platform found on Android" @kind object;
  #L3f59c2.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3f59c8.  return v0 @kind object;
}
procedure `nc.g` `j`() @signature `Lnc/g;.j:()Lnc/g;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3f59dc.  call temp:= `r`() @signature `Lnc/g;.r:()Z` @kind static;
  #L3f59e2.  v0:= temp;
  #L3f59e4.  if v0 == 0 then goto L3f59f6;
  #L3f59e8.  call temp:= `u`() @signature `Lnc/c;.u:()Lnc/c;` @kind static;
  #L3f59ee.  v0:= temp @kind object;
  #L3f59f0.  if v0 == 0 then goto L3f59f6;
  #L3f59f4.  return v0 @kind object;
  #L3f59f6.  call temp:= `u`() @signature `Lnc/d;.u:()Lnc/d;` @kind static;
  #L3f59fc.  v0:= temp @kind object;
  #L3f59fe.  if v0 == 0 then goto L3f5a04;
  #L3f5a02.  return v0 @kind object;
  #L3f5a04.  call temp:= `u`() @signature `Lnc/e;.u:()Lnc/g;` @kind static;
  #L3f5a0a.  v0:= temp @kind object;
  #L3f5a0c.  if v0 == 0 then goto L3f5a12;
  #L3f5a10.  return v0 @kind object;
  #L3f5a12.  v0:= new `nc.g`;
  #L3f5a16.  call `<init>`(v0) @signature `Lnc/g;.<init>:()V` @kind direct;
  #L3f5a1c.  return v0 @kind object;
}
procedure `nc.g` `k`() @signature `Lnc/g;.k:()Lnc/g;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3f5a30.  call temp:= `p`() @signature `Lnc/g;.p:()Z` @kind static;
  #L3f5a36.  v0:= temp;
  #L3f5a38.  if v0 == 0 then goto L3f5a46;
  #L3f5a3c.  call temp:= `i`() @signature `Lnc/g;.i:()Lnc/g;` @kind static;
  #L3f5a42.  v0:= temp @kind object;
  #L3f5a44.  return v0 @kind object;
  #L3f5a46.  call temp:= `j`() @signature `Lnc/g;.j:()Lnc/g;` @kind static;
  #L3f5a4c.  v0:= temp @kind object;
  #L3f5a4e.  return v0 @kind object;
}
procedure `nc.g` `l`() @signature `Lnc/g;.l:()Lnc/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f5a60.  v0:= `@@nc.g.a` @type ^`nc.g` @kind object;
  #L3f5a64.  return v0 @kind object;
}
procedure `boolean` `p`() @signature `Lnc/g;.p:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f5760.  v0:= "java.vm.name" @kind object;
  #L3f5764.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3f576a.  v0:= temp @kind object;
  #L3f576c.  v1:= "Dalvik" @kind object;
  #L3f5770.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f5776.  v0:= temp;
  #L3f5778.  return v0;
}
procedure `boolean` `r`() @signature `Lnc/g;.r:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3f57a0.  v0:= "okhttp.platform" @kind object;
  #L3f57a4.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3f57aa.  v0:= temp @kind object;
  #L3f57ac.  v1:= "conscrypt" @kind object;
  #L3f57b0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f57b6.  v0:= temp;
  #L3f57b8.  if v0 == 0 then goto L3f57c0;
  #L3f57bc.  v0:= 1I;
  #L3f57be.  return v0;
  #L3f57c0.  call temp:= `getProviders`() @signature `Ljava/security/Security;.getProviders:()[Ljava/security/Provider;` @kind static;
  #L3f57c6.  v0:= temp @kind object;
  #L3f57c8.  v1:= 0I;
  #L3f57ca.  v0:= v0[v1] @kind object;
  #L3f57ce.  call temp:= `getName`(v0) @signature `Ljava/security/Provider;.getName:()Ljava/lang/String;` @kind virtual;
  #L3f57d4.  v0:= temp @kind object;
  #L3f57d6.  v1:= "Conscrypt" @kind object;
  #L3f57da.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f57e0.  v0:= temp;
  #L3f57e2.  return v0;
}
procedure `void` `a`(`nc.g` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lnc/g;.a:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;

  #L3f5b10.  return @kind void;
}
procedure `pc.c` `c`(`nc.g` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lnc/g;.c:(Ljavax/net/ssl/X509TrustManager;)Lpc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5a78.  v0:= new `pc.a`;
  #L3f5a7c.  call temp:= `d`(v1, v2) @signature `Lnc/g;.d:(Ljavax/net/ssl/X509TrustManager;)Lpc/e;` @kind virtual;
  #L3f5a82.  v2:= temp @kind object;
  #L3f5a84.  call `<init>`(v0, v2) @signature `Lpc/a;.<init>:(Lpc/e;)V` @kind direct;
  #L3f5a8a.  return v0 @kind object;
}
procedure `pc.e` `d`(`nc.g` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lnc/g;.d:(Ljavax/net/ssl/X509TrustManager;)Lpc/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5a9c.  v0:= new `pc.b`;
  #L3f5aa0.  call temp:= `getAcceptedIssuers`(v2) @signature `Ljavax/net/ssl/X509TrustManager;.getAcceptedIssuers:()[Ljava/security/cert/X509Certificate;` @kind interface;
  #L3f5aa6.  v2:= temp @kind object;
  #L3f5aa8.  call `<init>`(v0, v2) @signature `Lpc/b;.<init>:([Ljava/security/cert/X509Certificate;)V` @kind direct;
  #L3f5aae.  return v0 @kind object;
}
procedure `void` `f`(`nc.g` v0 @kind this, `javax.net.ssl.SSLSocketFactory` v1 @kind object) @signature `Lnc/g;.f:(Ljavax/net/ssl/SSLSocketFactory;)V` @AccessFlag PUBLIC {
    temp;

  #L3f5b24.  return @kind void;
}
procedure `void` `g`(`nc.g` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lnc/g;.g:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L3f5b38.  return @kind void;
}
procedure `void` `h`(`nc.g` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `Lnc/g;.h:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L3f5b4c.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L3f5b52.  return @kind void;
}
procedure `javax.net.ssl.SSLContext` `m`(`nc.g` v3 @kind this) @signature `Lnc/g;.m:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f5930.  v0:= "java.specification.version" @kind object;
  #L3f5934.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3f593a.  v0:= temp @kind object;
  #L3f593c.  v1:= "1.7" @kind object;
  #L3f5940.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f5946.  v0:= temp;
  #L3f5948.  if v0 == 0 then goto L3f595a;
  #L3f594c.  v0:= "TLSv1.2" @kind object;
  #L3f5950.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L3f5956.  v0:= temp @kind object;
  #L3f5958.  return v0 @kind object;
  #L3f595a.  v0:= "TLS" @kind object;
  #L3f595e.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L3f5964.  v0:= temp @kind object;
  #L3f5966.  return v0 @kind object;
  #L3f5968.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L3f596a.  v1:= new `java.lang.IllegalStateException`;
  #L3f596e.  v2:= "No TLS provider" @kind object;
  #L3f5972.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3f5978.  throw v1;
  catch `java.security.NoSuchAlgorithmException` @[L3f594c..L3f5958] goto L3f595a;
  catch `java.security.NoSuchAlgorithmException` @[L3f595a..L3f5966] goto L3f5968;
}
procedure `java.lang.String` `n`(`nc.g` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lnc/g;.n:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3f589c.  v1:= 0I;
  #L3f589e.  return v1 @kind object;
}
procedure `java.lang.Object` `o`(`nc.g` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lnc/g;.o:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f5868.  v0:= `@@nc.g.b` @type ^`java.util.logging.Logger` @kind object;
  #L3f586c.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L3f5870.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L3f5876.  v0:= temp;
  #L3f5878.  if v0 == 0 then goto L3f5888;
  #L3f587c.  v0:= new `java.lang.Throwable`;
  #L3f5880.  call `<init>`(v0, v3) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f5886.  return v0 @kind object;
  #L3f5888.  v3:= 0I;
  #L3f588a.  return v3 @kind object;
}
procedure `boolean` `q`(`nc.g` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lnc/g;.q:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;

  #L3f578c.  v1:= 1I;
  #L3f578e.  return v1;
}
procedure `void` `s`(`nc.g` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lnc/g;.s:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5b64.  v0:= 5I;
  #L3f5b66.  if v2 != v0 then goto L3f5b70;
  #L3f5b6a.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L3f5b6e.  goto L3f5b74;
  #L3f5b70.  v2:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L3f5b74.  v0:= `@@nc.g.b` @type ^`java.util.logging.Logger` @kind object;
  #L3f5b78.  call `log`(v0, v2, v3, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3f5b7e.  return @kind void;
}
procedure `void` `t`(`nc.g` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lnc/g;.t:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5b90.  if v3 != 0 then goto L3f5bb6;
  #L3f5b94.  v0:= new `java.lang.StringBuilder`;
  #L3f5b98.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f5b9e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5ba4.  v2:= " To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);" @kind object;
  #L3f5ba8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5bae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f5bb4.  v2:= temp @kind object;
  #L3f5bb6.  v0:= 5I;
  #L3f5bb8.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L3f5bbc.  call `s`(v1, v0, v2, v3) @signature `Lnc/g;.s:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3f5bc2.  return @kind void;
}
procedure `java.lang.String` `toString`(`nc.g` v1 @kind this) @signature `Lnc/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f58b0.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3f58b6.  v0:= temp @kind object;
  #L3f58b8.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3f58be.  v0:= temp @kind object;
  #L3f58c0.  return v0 @kind object;
}
