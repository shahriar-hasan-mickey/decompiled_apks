record `nc.e` @kind class @AccessFlag  extends `nc.g` @kind class {
  `java.lang.reflect.Method` `nc.e.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `nc.e.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `nc.e.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `nc.e.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `nc.e.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`nc.e` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.reflect.Method` v2 @kind object, `java.lang.reflect.Method` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lnc/e;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f53c0.  call `<init>`(v0) @signature `Lnc/g;.<init>:()V` @kind direct;
  #L3f53c6.  v0.`nc.e.c` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L3f53ca.  v0.`nc.e.d` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L3f53ce.  v0.`nc.e.e` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L3f53d2.  v0.`nc.e.f` @type ^`java.lang.Class` := v4 @kind object;
  #L3f53d6.  v0.`nc.e.g` @type ^`java.lang.Class` := v5 @kind object;
  #L3f53da.  return @kind void;
}
procedure `nc.g` `u`() @signature `Lnc/e;.u:()Lnc/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3f52a4.  v0:= "org.eclipse.jetty.alpn.ALPN" @kind object;
  #L3f52a8.  v1:= "org.eclipse.jetty.alpn.ALPN" @kind object;
  #L3f52ac.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3f52b2.  v1:= temp @kind object;
  #L3f52b4.  v2:= new `java.lang.StringBuilder`;
  #L3f52b8.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f52be.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f52c4.  v3:= "$Provider" @kind object;
  #L3f52c8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f52ce.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f52d4.  v2:= temp @kind object;
  #L3f52d6.  call temp:= `forName`(v2) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3f52dc.  v2:= temp @kind object;
  #L3f52de.  v3:= new `java.lang.StringBuilder`;
  #L3f52e2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f52e8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f52ee.  v4:= "$ClientProvider" @kind object;
  #L3f52f2.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f52f8.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f52fe.  v3:= temp @kind object;
  #L3f5300.  call temp:= `forName`(v3) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3f5306.  v8:= temp @kind object;
  #L3f5308.  v3:= new `java.lang.StringBuilder`;
  #L3f530c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f5312.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5318.  v0:= "$ServerProvider" @kind object;
  #L3f531c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5322.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f5328.  v0:= temp @kind object;
  #L3f532a.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3f5330.  v9:= temp @kind object;
  #L3f5332.  v0:= "put" @kind object;
  #L3f5336.  v3:= 2I;
  #L3f5338.  v3:= new `java.lang.Class`[v3];
  #L3f533c.  v4:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L3f5340.  v5:= 0I;
  #L3f5342.  v3[v5]:= v4 @kind object;
  #L3f5346.  v4:= 1I;
  #L3f5348.  v3[v4]:= v2 @kind object;
  #L3f534c.  call temp:= `getMethod`(v1, v0, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3f5352.  v0:= temp @kind object;
  #L3f5354.  v2:= "get" @kind object;
  #L3f5358.  v3:= new `java.lang.Class`[v4];
  #L3f535c.  v6:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L3f5360.  v3[v5]:= v6 @kind object;
  #L3f5364.  call temp:= `getMethod`(v1, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3f536a.  v6:= temp @kind object;
  #L3f536c.  v2:= "remove" @kind object;
  #L3f5370.  v3:= new `java.lang.Class`[v4];
  #L3f5374.  v4:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L3f5378.  v3[v5]:= v4 @kind object;
  #L3f537c.  call temp:= `getMethod`(v1, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3f5382.  v7:= temp @kind object;
  #L3f5384.  v1:= new `nc.e`;
  #L3f5388.  v4:= v1 @kind object;
  #L3f538a.  v5:= v0 @kind object;
  #L3f538c.  call `<init>`(v4, v5, v6, v7, v8, v9) @signature `Lnc/e;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L3f5392.  return v1 @kind object;
  #L3f5394.  v0:= 0I;
  #L3f5396.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L3f52a4..L3f52a8] goto L3f5394;
  catch `java.lang.NoSuchMethodException` @[L3f52a4..L3f52a8] goto L3f5394;
  catch `java.lang.ClassNotFoundException` @[L3f52ac..L3f5392] goto L3f5394;
  catch `java.lang.NoSuchMethodException` @[L3f52ac..L3f5392] goto L3f5394;
}
procedure `void` `a`(`nc.e` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lnc/e;.a:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f53ec.  v0:= v4.`nc.e.e` @type ^`java.lang.reflect.Method` @kind object;
  #L3f53f0.  v1:= 0I;
  #L3f53f2.  v2:= 1I;
  #L3f53f4.  v2:= new `java.lang.Object`[v2];
  #L3f53f8.  v3:= 0I;
  #L3f53fa.  v2[v3]:= v5 @kind object;
  #L3f53fe.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f5404.  return @kind void;
  #L3f5406.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L3f5408.  goto L3f540c;
  #L3f540a.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L3f540c.  v0:= "unable to remove alpn" @kind object;
  #L3f5410.  call temp:= `b`(v0, v5) @signature `Lhc/c;.b:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L3f5416.  v5:= temp @kind object;
  #L3f5418.  throw v5;
  catch `java.lang.IllegalAccessException` @[L3f53ec..L3f5404] goto L3f540a;
  catch `java.lang.reflect.InvocationTargetException` @[L3f53ec..L3f5404] goto L3f5406;
}
procedure `void` `g`(`nc.e` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lnc/e;.g:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f543c.  call temp:= `b`(v8) @signature `Lnc/g;.b:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3f5442.  v7:= temp @kind object;
  #L3f5444.  v8:= constclass @type ^`nc.g` @kind object;
  #L3f5448.  call temp:= `getClassLoader`(v8) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L3f544e.  v8:= temp @kind object;
  #L3f5450.  v0:= 2I;
  #L3f5452.  v1:= new `java.lang.Class`[v0];
  #L3f5456.  v2:= v5.`nc.e.f` @type ^`java.lang.Class` @kind object;
  #L3f545a.  v3:= 0I;
  #L3f545c.  v1[v3]:= v2 @kind object;
  #L3f5460.  v2:= v5.`nc.e.g` @type ^`java.lang.Class` @kind object;
  #L3f5464.  v4:= 1I;
  #L3f5466.  v1[v4]:= v2 @kind object;
  #L3f546a.  v2:= new `nc.e$a`;
  #L3f546e.  call `<init>`(v2, v7) @signature `Lnc/e$a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L3f5474.  call temp:= `newProxyInstance`(v8, v1, v2) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L3f547a.  v7:= temp @kind object;
  #L3f547c.  v8:= v5.`nc.e.c` @type ^`java.lang.reflect.Method` @kind object;
  #L3f5480.  v1:= 0I;
  #L3f5482.  v0:= new `java.lang.Object`[v0];
  #L3f5486.  v0[v3]:= v6 @kind object;
  #L3f548a.  v0[v4]:= v7 @kind object;
  #L3f548e.  call temp:= `invoke`(v8, v1, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f5494.  return @kind void;
  #L3f5496.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L3f5498.  goto L3f549c;
  #L3f549a.  v6:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L3f549c.  v7:= "unable to set alpn" @kind object;
  #L3f54a0.  call temp:= `b`(v7, v6) @signature `Lhc/c;.b:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L3f54a6.  v6:= temp @kind object;
  #L3f54a8.  throw v6;
  catch `java.lang.reflect.InvocationTargetException` @[L3f5444..L3f5494] goto L3f549a;
  catch `java.lang.IllegalAccessException` @[L3f5444..L3f5494] goto L3f5496;
}
procedure `java.lang.String` `n`(`nc.e` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lnc/e;.n:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f5218.  v0:= v3.`nc.e.d` @type ^`java.lang.reflect.Method` @kind object;
  #L3f521c.  v1:= 1I;
  #L3f521e.  v1:= new `java.lang.Object`[v1];
  #L3f5222.  v2:= 0I;
  #L3f5224.  v1[v2]:= v4 @kind object;
  #L3f5228.  v4:= 0I;
  #L3f522a.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f5230.  v0:= temp @kind object;
  #L3f5232.  call temp:= `getInvocationHandler`(v0) @signature `Ljava/lang/reflect/Proxy;.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;` @kind static;
  #L3f5238.  v0:= temp @kind object;
  #L3f523a.  v0:= (`nc.e$a`) v0 @kind object;
  #L3f523e.  v1:= v0.`nc.e$a.b` @type ^`boolean` @kind boolean;
  #L3f5242.  if v1 != 0 then goto L3f5264;
  #L3f5246.  v2:= v0.`nc.e$a.c` @type ^`java.lang.String` @kind object;
  #L3f524a.  if v2 != 0 then goto L3f5264;
  #L3f524e.  call temp:= `l`() @signature `Lnc/g;.l:()Lnc/g;` @kind static;
  #L3f5254.  v0:= temp @kind object;
  #L3f5256.  v1:= 4I;
  #L3f5258.  v2:= "ALPN callback dropped: HTTP/2 is disabled. Is alpn-boot on the boot class path?" @kind object;
  #L3f525c.  call `s`(v0, v1, v2, v4) @signature `Lnc/g;.s:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3f5262.  return v4 @kind object;
  #L3f5264.  if v1 == 0 then goto L3f526a;
  #L3f5268.  goto L3f526e;
  #L3f526a.  v4:= v0.`nc.e$a.c` @type ^`java.lang.String` @kind object;
  #L3f526e.  return v4 @kind object;
  #L3f5270.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L3f5272.  goto L3f5276;
  #L3f5274.  v4:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L3f5276.  v0:= "unable to get selected protocol" @kind object;
  #L3f527a.  call temp:= `b`(v0, v4) @signature `Lhc/c;.b:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L3f5280.  v4:= temp @kind object;
  #L3f5282.  throw v4;
  catch `java.lang.reflect.InvocationTargetException` @[L3f5218..L3f526e] goto L3f5274;
  catch `java.lang.IllegalAccessException` @[L3f5218..L3f526e] goto L3f5270;
}
