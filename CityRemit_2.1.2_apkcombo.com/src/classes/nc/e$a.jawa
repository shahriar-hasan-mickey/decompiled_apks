record `nc.e$a` @kind class @AccessFlag  extends `java.lang.reflect.InvocationHandler` @kind interface {
  `java.util.List` `nc.e$a.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `nc.e$a.b` @AccessFlag ;
  `java.lang.String` `nc.e$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`nc.e$a` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lnc/e$a;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f51fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f5202.  v0.`nc.e$a.a` @type ^`java.util.List` := v1 @kind object;
  #L3f5206.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`nc.e$a` v5 @kind this, `java.lang.Object` v6 @kind object, `java.lang.reflect.Method` v7 @kind object, `java.lang.Object`[] v8 @kind object) @signature `Lnc/e$a;.invoke:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f50a8.  call temp:= `getName`(v7) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L3f50ae.  v6:= temp @kind object;
  #L3f50b0.  call temp:= `getReturnType`(v7) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L3f50b6.  v0:= temp @kind object;
  #L3f50b8.  if v8 != 0 then goto L3f50c0;
  #L3f50bc.  v8:= `@@hc.c.b` @type ^`java.lang.String`[] @kind object;
  #L3f50c0.  v1:= "supports" @kind object;
  #L3f50c4.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f50ca.  v1:= temp;
  #L3f50cc.  if v1 == 0 then goto L3f50de;
  #L3f50d0.  v1:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L3f50d4.  if v1 != v0 then goto L3f50de;
  #L3f50d8.  v6:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3f50dc.  return v6 @kind object;
  #L3f50de.  v1:= "unsupported" @kind object;
  #L3f50e2.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f50e8.  v1:= temp;
  #L3f50ea.  v2:= 0I;
  #L3f50ec.  v3:= 1I;
  #L3f50ee.  if v1 == 0 then goto L3f5100;
  #L3f50f2.  v1:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L3f50f6.  if v1 != v0 then goto L3f5100;
  #L3f50fa.  v5.`nc.e$a.b` @type ^`boolean` := v3 @kind boolean;
  #L3f50fe.  return v2 @kind object;
  #L3f5100.  v1:= "protocols" @kind object;
  #L3f5104.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f510a.  v1:= temp;
  #L3f510c.  if v1 == 0 then goto L3f511c;
  #L3f5110.  v1:= length @variable v8;
  #L3f5112.  if v1 != 0 then goto L3f511c;
  #L3f5116.  v6:= v5.`nc.e$a.a` @type ^`java.util.List` @kind object;
  #L3f511a.  return v6 @kind object;
  #L3f511c.  v1:= "selectProtocol" @kind object;
  #L3f5120.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f5126.  v1:= temp;
  #L3f5128.  v4:= 0I;
  #L3f512a.  if v1 != 0 then goto L3f513e;
  #L3f512e.  v1:= "select" @kind object;
  #L3f5132.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f5138.  v1:= temp;
  #L3f513a.  if v1 == 0 then goto L3f51ac;
  #L3f513e.  v1:= constclass @type ^`java.lang.String` @kind object;
  #L3f5142.  if v1 != v0 then goto L3f51ac;
  #L3f5146.  v0:= length @variable v8;
  #L3f5148.  if v0 != v3 then goto L3f51ac;
  #L3f514c.  v0:= v8[v4] @kind object;
  #L3f5150.  v0:= instanceof @variable v0 @type ^`java.util.List` @kind boolean;
  #L3f5154.  if v0 == 0 then goto L3f51ac;
  #L3f5158.  v6:= v8[v4] @kind object;
  #L3f515c.  v6:= (`java.util.List`) v6 @kind object;
  #L3f5160.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3f5166.  v7:= temp;
  #L3f5168.  v8:= 0I;
  #L3f516a.  if v8 >= v7 then goto L3f519e;
  #L3f516e.  v0:= v5.`nc.e$a.a` @type ^`java.util.List` @kind object;
  #L3f5172.  call temp:= `get`(v6, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3f5178.  v1:= temp @kind object;
  #L3f517a.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3f5180.  v0:= temp;
  #L3f5182.  if v0 == 0 then goto L3f5198;
  #L3f5186.  call temp:= `get`(v6, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3f518c.  v6:= temp @kind object;
  #L3f518e.  v6:= (`java.lang.String`) v6 @kind object;
  #L3f5192.  v5.`nc.e$a.c` @type ^`java.lang.String` := v6 @kind object;
  #L3f5196.  return v6 @kind object;
  #L3f5198.  v8:= v8 + 1;
  #L3f519c.  goto L3f516a;
  #L3f519e.  v6:= v5.`nc.e$a.a` @type ^`java.util.List` @kind object;
  #L3f51a2.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3f51a8.  v6:= temp @kind object;
  #L3f51aa.  goto L3f518e;
  #L3f51ac.  v0:= "protocolSelected" @kind object;
  #L3f51b0.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f51b6.  v0:= temp;
  #L3f51b8.  if v0 != 0 then goto L3f51cc;
  #L3f51bc.  v0:= "selected" @kind object;
  #L3f51c0.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f51c6.  v6:= temp;
  #L3f51c8.  if v6 == 0 then goto L3f51e0;
  #L3f51cc.  v6:= length @variable v8;
  #L3f51ce.  if v6 != v3 then goto L3f51e0;
  #L3f51d2.  v6:= v8[v4] @kind object;
  #L3f51d6.  v6:= (`java.lang.String`) v6 @kind object;
  #L3f51da.  v5.`nc.e$a.c` @type ^`java.lang.String` := v6 @kind object;
  #L3f51de.  return v2 @kind object;
  #L3f51e0.  call temp:= `invoke`(v7, v5, v8) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f51e6.  v6:= temp @kind object;
  #L3f51e8.  return v6 @kind object;
}
