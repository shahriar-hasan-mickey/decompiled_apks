record `xc.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `xc.c` @kind class, `vc.i` @kind interface {
}
procedure `void` `<init>`(`xc.a` v0 @kind this) @signature `Lxc/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f00e0.  call `<init>`(v0) @signature `Lxc/c;.<init>:()V` @kind direct;
  #L4f00e6.  return @kind void;
}
procedure `long` `B`(`xc.a` v3 @kind this, `yc.i` v4 @kind object) @signature `Lxc/a;.B:(Lyc/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f007c.  v0:= `@@yc.a.T` @type ^`yc.a` @kind object;
  #L4f0080.  if v4 != v0 then goto L4f0090;
  #L4f0084.  call temp:= `getValue`(v3) @signature `Lvc/i;.getValue:()I` @kind interface;
  #L4f008a.  v4:= temp;
  #L4f008c.  v0:= (`long`) v4 @kind i2l;
  #L4f008e.  return v0 @kind wide;
  #L4f0090.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4f0094.  if v0 != 0 then goto L4f00a2;
  #L4f0098.  call temp:= `o`(v4, v3) @signature `Lyc/i;.o:(Lyc/e;)J` @kind interface;
  #L4f009e.  v0:= temp @kind wide;
  #L4f00a0.  return v0 @kind wide;
  #L4f00a2.  v0:= new `yc.m`;
  #L4f00a6.  v1:= new `java.lang.StringBuilder`;
  #L4f00aa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f00b0.  v2:= "Unsupported field: " @kind object;
  #L4f00b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f00ba.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f00c0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f00c6.  v4:= temp @kind object;
  #L4f00c8.  call `<init>`(v0, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f00ce.  throw v0;
}
procedure `int` `F`(`xc.a` v3 @kind this, `yc.i` v4 @kind object) @signature `Lxc/a;.F:(Lyc/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4effc4.  v0:= `@@yc.a.T` @type ^`yc.a` @kind object;
  #L4effc8.  if v4 != v0 then goto L4effd6;
  #L4effcc.  call temp:= `getValue`(v3) @signature `Lvc/i;.getValue:()I` @kind interface;
  #L4effd2.  v4:= temp;
  #L4effd4.  return v4;
  #L4effd6.  call temp:= `t`(v3, v4) @signature `Lxc/c;.t:(Lyc/i;)Lyc/n;` @kind virtual;
  #L4effdc.  v0:= temp @kind object;
  #L4effde.  call temp:= `B`(v3, v4) @signature `Lxc/a;.B:(Lyc/i;)J` @kind virtual;
  #L4effe4.  v1:= temp @kind wide;
  #L4effe6.  call temp:= `a`(v0, v1, v4) @signature `Lyc/n;.a:(JLyc/i;)I` @kind virtual;
  #L4effec.  v4:= temp;
  #L4effee.  return v4;
}
procedure `yc.d` `I`(`xc.a` v3 @kind this, `yc.d` v4 @kind object) @signature `Lxc/a;.I:(Lyc/d;)Lyc/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f00f8.  v0:= `@@yc.a.T` @type ^`yc.a` @kind object;
  #L4f00fc.  call temp:= `getValue`(v3) @signature `Lvc/i;.getValue:()I` @kind interface;
  #L4f0102.  v1:= temp;
  #L4f0104.  v1:= (`long`) v1 @kind i2l;
  #L4f0106.  call temp:= `P`(v4, v0, v1) @signature `Lyc/d;.P:(Lyc/i;J)Lyc/d;` @kind interface;
  #L4f010c.  v4:= temp @kind object;
  #L4f010e.  return v4 @kind object;
}
procedure `boolean` `d`(`xc.a` v3 @kind this, `yc.i` v4 @kind object) @signature `Lxc/a;.d:(Lyc/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4eff84.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4eff88.  v1:= 1I;
  #L4eff8a.  v2:= 0I;
  #L4eff8c.  if v0 == 0 then goto L4eff9e;
  #L4eff90.  v0:= `@@yc.a.T` @type ^`yc.a` @kind object;
  #L4eff94.  if v4 != v0 then goto L4eff9a;
  #L4eff98.  goto L4eff9c;
  #L4eff9a.  v1:= 0I;
  #L4eff9c.  return v1;
  #L4eff9e.  if v4 == 0 then goto L4effb0;
  #L4effa2.  call temp:= `j`(v4, v3) @signature `Lyc/i;.j:(Lyc/e;)Z` @kind interface;
  #L4effa8.  v4:= temp;
  #L4effaa.  if v4 == 0 then goto L4effb0;
  #L4effae.  goto L4effb2;
  #L4effb0.  v1:= 0I;
  #L4effb2.  return v1;
}
procedure `java.lang.Object` `j`(`xc.a` v1 @kind this, `yc.k` v2 @kind object) @signature `Lxc/a;.j:(Lyc/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f0000.  call temp:= `e`() @signature `Lyc/j;.e:()Lyc/k;` @kind static;
  #L4f0006.  v0:= temp @kind object;
  #L4f0008.  if v2 != v0 then goto L4f0012;
  #L4f000c.  v2:= `@@yc.b.D` @type ^`yc.b` @kind object;
  #L4f0010.  return v2 @kind object;
  #L4f0012.  call temp:= `a`() @signature `Lyc/j;.a:()Lyc/k;` @kind static;
  #L4f0018.  v0:= temp @kind object;
  #L4f001a.  if v2 == v0 then goto L4f0066;
  #L4f001e.  call temp:= `f`() @signature `Lyc/j;.f:()Lyc/k;` @kind static;
  #L4f0024.  v0:= temp @kind object;
  #L4f0026.  if v2 == v0 then goto L4f0066;
  #L4f002a.  call temp:= `g`() @signature `Lyc/j;.g:()Lyc/k;` @kind static;
  #L4f0030.  v0:= temp @kind object;
  #L4f0032.  if v2 == v0 then goto L4f0066;
  #L4f0036.  call temp:= `d`() @signature `Lyc/j;.d:()Lyc/k;` @kind static;
  #L4f003c.  v0:= temp @kind object;
  #L4f003e.  if v2 == v0 then goto L4f0066;
  #L4f0042.  call temp:= `b`() @signature `Lyc/j;.b:()Lyc/k;` @kind static;
  #L4f0048.  v0:= temp @kind object;
  #L4f004a.  if v2 == v0 then goto L4f0066;
  #L4f004e.  call temp:= `c`() @signature `Lyc/j;.c:()Lyc/k;` @kind static;
  #L4f0054.  v0:= temp @kind object;
  #L4f0056.  if v2 != v0 then goto L4f005c;
  #L4f005a.  goto L4f0066;
  #L4f005c.  call temp:= `a`(v2, v1) @signature `Lyc/k;.a:(Lyc/e;)Ljava/lang/Object;` @kind interface;
  #L4f0062.  v2:= temp @kind object;
  #L4f0064.  return v2 @kind object;
  #L4f0066.  v2:= 0I;
  #L4f0068.  return v2 @kind object;
}
