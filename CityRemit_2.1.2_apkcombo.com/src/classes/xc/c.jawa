record `xc.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `yc.e` @kind interface {
}
procedure `void` `<init>`(`xc.c` v0 @kind this) @signature `Lxc/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f0190.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f0196.  return @kind void;
}
procedure `int` `F`(`xc.c` v3 @kind this, `yc.i` v4 @kind object) @signature `Lxc/c;.F:(Lyc/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f0120.  call temp:= `t`(v3, v4) @signature `Lxc/c;.t:(Lyc/i;)Lyc/n;` @kind virtual;
  #L4f0126.  v0:= temp @kind object;
  #L4f0128.  call temp:= `B`(v3, v4) @signature `Lyc/e;.B:(Lyc/i;)J` @kind interface;
  #L4f012e.  v1:= temp @kind wide;
  #L4f0130.  call temp:= `a`(v0, v1, v4) @signature `Lyc/n;.a:(JLyc/i;)I` @kind virtual;
  #L4f0136.  v4:= temp;
  #L4f0138.  return v4;
}
procedure `java.lang.Object` `j`(`xc.c` v1 @kind this, `yc.k` v2 @kind object) @signature `Lxc/c;.j:(Lyc/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f014c.  call temp:= `g`() @signature `Lyc/j;.g:()Lyc/k;` @kind static;
  #L4f0152.  v0:= temp @kind object;
  #L4f0154.  if v2 == v0 then goto L4f017c;
  #L4f0158.  call temp:= `a`() @signature `Lyc/j;.a:()Lyc/k;` @kind static;
  #L4f015e.  v0:= temp @kind object;
  #L4f0160.  if v2 == v0 then goto L4f017c;
  #L4f0164.  call temp:= `e`() @signature `Lyc/j;.e:()Lyc/k;` @kind static;
  #L4f016a.  v0:= temp @kind object;
  #L4f016c.  if v2 != v0 then goto L4f0172;
  #L4f0170.  goto L4f017c;
  #L4f0172.  call temp:= `a`(v2, v1) @signature `Lyc/k;.a:(Lyc/e;)Ljava/lang/Object;` @kind interface;
  #L4f0178.  v2:= temp @kind object;
  #L4f017a.  return v2 @kind object;
  #L4f017c.  v2:= 0I;
  #L4f017e.  return v2 @kind object;
}
procedure `yc.n` `t`(`xc.c` v3 @kind this, `yc.i` v4 @kind object) @signature `Lxc/c;.t:(Lyc/i;)Lyc/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f01a8.  v0:= instanceof @variable v4 @type ^`yc.a` @kind boolean;
  #L4f01ac.  if v0 == 0 then goto L4f01f4;
  #L4f01b0.  call temp:= `d`(v3, v4) @signature `Lyc/e;.d:(Lyc/i;)Z` @kind interface;
  #L4f01b6.  v0:= temp;
  #L4f01b8.  if v0 == 0 then goto L4f01c6;
  #L4f01bc.  call temp:= `k`(v4) @signature `Lyc/i;.k:()Lyc/n;` @kind interface;
  #L4f01c2.  v4:= temp @kind object;
  #L4f01c4.  return v4 @kind object;
  #L4f01c6.  v0:= new `yc.m`;
  #L4f01ca.  v1:= new `java.lang.StringBuilder`;
  #L4f01ce.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f01d4.  v2:= "Unsupported field: " @kind object;
  #L4f01d8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f01de.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f01e4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f01ea.  v4:= temp @kind object;
  #L4f01ec.  call `<init>`(v0, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f01f2.  throw v0;
  #L4f01f4.  call temp:= `h`(v4, v3) @signature `Lyc/i;.h:(Lyc/e;)Lyc/n;` @kind interface;
  #L4f01fa.  v4:= temp @kind object;
  #L4f01fc.  return v4 @kind object;
}
