record `p3.g` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.Comparator` @kind interface {
}
global `p3.g` `@@p3.g.o` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lp3/g;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L403c1c.  v0:= new `p3.g`;
  #L403c20.  call `<init>`(v0) @signature `Lp3/g;.<init>:()V` @kind direct;
  #L403c26.  `@@p3.g.o` @type ^`p3.g` := v0 @kind object;
  #L403c2a.  return @kind void;
}
procedure `void` `<init>`(`p3.g` v0 @kind this) @signature `Lp3/g;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L403c3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L403c42.  return @kind void;
}
procedure `int` `compare`(`p3.g` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lp3/g;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L403bf8.  v1:= (`p3.f$b`) v1 @kind object;
  #L403bfc.  v2:= (`p3.f$b`) v2 @kind object;
  #L403c00.  call temp:= `a`(v1, v2) @signature `Lp3/f$b;.a:(Lp3/f$b;Lp3/f$b;)I` @kind static;
  #L403c06.  v1:= temp;
  #L403c08.  return v1;
}
