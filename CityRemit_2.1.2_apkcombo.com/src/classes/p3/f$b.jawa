record `p3.f$b` @kind class @AccessFlag  {
  `p3.f$c` `p3.f$b.a` @AccessFlag PRIVATE_FINAL;
  `int` `p3.f$b.b` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Comparator` `@@p3.f$b.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lp3/f$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L403ce4.  v0:= `@@p3.g.o` @type ^`p3.g` @kind object;
  #L403ce8.  `@@p3.f$b.c` @type ^`java.util.Comparator` := v0 @kind object;
  #L403cec.  return @kind void;
}
procedure `void` `<init>`(`p3.f$b` v0 @kind this, `p3.f$c` v1 @kind object, `int` v2 ) @signature `Lp3/f$b;.<init>:(Lp3/f$c;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L403d00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L403d06.  v0.`p3.f$b.a` @type ^`p3.f$c` := v1 @kind object;
  #L403d0a.  v0.`p3.f$b.b` @type ^`int` := v2;
  #L403d0e.  return @kind void;
}
procedure `void` `<init>`(`p3.f$b` v0 @kind this, `p3.f$c` v1 @kind object, `int` v2 , `p3.f$a` v3 @kind object) @signature `Lp3/f$b;.<init>:(Lp3/f$c;ILp3/f$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L403d20.  call `<init>`(v0, v1, v2) @signature `Lp3/f$b;.<init>:(Lp3/f$c;I)V` @kind direct;
  #L403d26.  return @kind void;
}
procedure `int` `a`(`p3.f$b` v0 @kind object, `p3.f$b` v1 @kind object) @signature `Lp3/f$b;.a:(Lp3/f$b;Lp3/f$b;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L403c54.  call temp:= `e`(v0, v1) @signature `Lp3/f$b;.e:(Lp3/f$b;Lp3/f$b;)I` @kind static;
  #L403c5a.  v0:= temp;
  #L403c5c.  return v0;
}
procedure `java.util.Comparator` `b`() @signature `Lp3/f$b;.b:()Ljava/util/Comparator;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L403cb4.  v0:= `@@p3.f$b.c` @type ^`java.util.Comparator` @kind object;
  #L403cb8.  return v0 @kind object;
}
procedure `p3.f$c` `c`(`p3.f$b` v0 @kind object) @signature `Lp3/f$b;.c:(Lp3/f$b;)Lp3/f$c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L403ccc.  v0:= v0.`p3.f$b.a` @type ^`p3.f$c` @kind object;
  #L403cd0.  return v0 @kind object;
}
procedure `int` `d`(`p3.f$b` v0 @kind object) @signature `Lp3/f$b;.d:(Lp3/f$b;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L403c70.  v0:= v0.`p3.f$b.b` @type ^`int`;
  #L403c74.  return v0;
}
procedure `int` `e`(`p3.f$b` v0 @kind object, `p3.f$b` v1 @kind object) @signature `Lp3/f$b;.e:(Lp3/f$b;Lp3/f$b;)I` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L403c88.  v0:= v0.`p3.f$b.a` @type ^`p3.f$c` @kind object;
  #L403c8c.  v0:= v0.`p3.f$c.b` @type ^`int`;
  #L403c90.  v1:= v1.`p3.f$b.a` @type ^`p3.f$c` @kind object;
  #L403c94.  v1:= v1.`p3.f$c.b` @type ^`int`;
  #L403c98.  call temp:= `compare`(v0, v1) @signature `Ljava/lang/Integer;.compare:(II)I` @kind static;
  #L403c9e.  v0:= temp;
  #L403ca0.  return v0;
}
