record `p3.f$d` @kind class @AccessFlag FINAL extends `java.lang.Comparable` @kind interface {
  `int` `p3.f$d.o` @AccessFlag PUBLIC_FINAL;
  `p3.d` `p3.f$d.p` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`p3.f$d` v0 @kind this, `int` v1 , `p3.d` v2 @kind object) @signature `Lp3/f$d;.<init>:(ILp3/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L403e6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L403e72.  v0.`p3.f$d.o` @type ^`int` := v1;
  #L403e76.  v0.`p3.f$d.p` @type ^`p3.d` := v2 @kind object;
  #L403e7a.  return @kind void;
}
procedure `int` `c`(`p3.f$d` v1 @kind this, `p3.f$d` v2 @kind object) @signature `Lp3/f$d;.c:(Lp3/f$d;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403e48.  v0:= v1.`p3.f$d.o` @type ^`int`;
  #L403e4c.  v2:= v2.`p3.f$d.o` @type ^`int`;
  #L403e50.  call temp:= `compare`(v0, v2) @signature `Ljava/lang/Integer;.compare:(II)I` @kind static;
  #L403e56.  v2:= temp;
  #L403e58.  return v2;
}
procedure `int` `compareTo`(`p3.f$d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lp3/f$d;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L403e28.  v1:= (`p3.f$d`) v1 @kind object;
  #L403e2c.  call temp:= `c`(v0, v1) @signature `Lp3/f$d;.c:(Lp3/f$d;)I` @kind virtual;
  #L403e32.  v1:= temp;
  #L403e34.  return v1;
}
