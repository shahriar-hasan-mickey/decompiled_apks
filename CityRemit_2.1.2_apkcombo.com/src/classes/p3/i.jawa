record `p3.i` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.regex.Pattern` `@@p3.i.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lp3/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L405990.  v0:= "^NOTE([ \t].*)?$" @kind object;
  #L405994.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L40599a.  v0:= temp @kind object;
  #L40599c.  `@@p3.i.a` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L4059a0.  return @kind void;
}
procedure `java.util.regex.Matcher` `a`(`s3.z` v2 @kind object) @signature `Lp3/i;.a:(Ls3/z;)Ljava/util/regex/Matcher;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4058a8.  call temp:= `o`(v2) @signature `Ls3/z;.o:()Ljava/lang/String;` @kind virtual;
  #L4058ae.  v0:= temp @kind object;
  #L4058b0.  if v0 == 0 then goto L405900;
  #L4058b4.  v1:= `@@p3.i.a` @type ^`java.util.regex.Pattern` @kind object;
  #L4058b8.  call temp:= `matcher`(v1, v0) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L4058be.  v1:= temp @kind object;
  #L4058c0.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L4058c6.  v1:= temp;
  #L4058c8.  if v1 == 0 then goto L4058e6;
  #L4058cc.  call temp:= `o`(v2) @signature `Ls3/z;.o:()Ljava/lang/String;` @kind virtual;
  #L4058d2.  v0:= temp @kind object;
  #L4058d4.  if v0 == 0 then goto L4058a8;
  #L4058d8.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4058de.  v0:= temp;
  #L4058e0.  if v0 != 0 then goto L4058a8;
  #L4058e4.  goto L4058cc;
  #L4058e6.  v1:= `@@p3.f.a` @type ^`java.util.regex.Pattern` @kind object;
  #L4058ea.  call temp:= `matcher`(v1, v0) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L4058f0.  v0:= temp @kind object;
  #L4058f2.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L4058f8.  v1:= temp;
  #L4058fa.  if v1 == 0 then goto L4058a8;
  #L4058fe.  return v0 @kind object;
  #L405900.  v2:= 0I;
  #L405902.  return v2 @kind object;
}
procedure `boolean` `b`(`s3.z` v1 @kind object) @signature `Lp3/i;.b:(Ls3/z;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40581c.  call temp:= `o`(v1) @signature `Ls3/z;.o:()Ljava/lang/String;` @kind virtual;
  #L405822.  v1:= temp @kind object;
  #L405824.  if v1 == 0 then goto L40583c;
  #L405828.  v0:= "WEBVTT" @kind object;
  #L40582c.  call temp:= `startsWith`(v1, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L405832.  v1:= temp;
  #L405834.  if v1 == 0 then goto L40583c;
  #L405838.  v1:= 1I;
  #L40583a.  goto L40583e;
  #L40583c.  v1:= 0I;
  #L40583e.  return v1;
}
procedure `float` `c`(`java.lang.String` v2 @kind object) @signature `Lp3/i;.c:(Ljava/lang/String;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L405850.  v0:= "%" @kind object;
  #L405854.  call temp:= `endsWith`(v2, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L40585a.  v0:= temp;
  #L40585c.  if v0 == 0 then goto L405886;
  #L405860.  v0:= 0I;
  #L405862.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L405868.  v1:= temp;
  #L40586a.  v1:= v1 + -1;
  #L40586e.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L405874.  v2:= temp @kind object;
  #L405876.  call temp:= `parseFloat`(v2) @signature `Ljava/lang/Float;.parseFloat:(Ljava/lang/String;)F` @kind static;
  #L40587c.  v2:= temp;
  #L40587e.  v0:= 100.0F;
  #L405882.  v2:= v2 / v0 @kind float;
  #L405884.  return v2;
  #L405886.  v2:= new `java.lang.NumberFormatException`;
  #L40588a.  v0:= "Percentages must end with %" @kind object;
  #L40588e.  call `<init>`(v2, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L405894.  throw v2;
}
procedure `long` `d`(`java.lang.String` v8 @kind object) @signature `Lp3/i;.d:(Ljava/lang/String;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L405914.  v0:= "\\." @kind object;
  #L405918.  call temp:= `Q0`(v8, v0) @signature `Ls3/l0;.Q0:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L40591e.  v8:= temp @kind object;
  #L405920.  v0:= 0I;
  #L405922.  v1:= v8[v0] @kind object;
  #L405926.  v2:= ":" @kind object;
  #L40592a.  call temp:= `P0`(v1, v2) @signature `Ls3/l0;.P0:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L405930.  v1:= temp @kind object;
  #L405932.  v2:= length @variable v1;
  #L405934.  v3:= 0L;
  #L405938.  if v0 >= v2 then goto L405958;
  #L40593c.  v5:= v1[v0] @kind object;
  #L405940.  v6:= 60L;
  #L405944.  v3:= v3 * v6 @kind long;
  #L405948.  call temp:= `parseLong`(v5) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L40594e.  v5:= temp @kind wide;
  #L405950.  v3:= v3 + v5 @kind long;
  #L405952.  v0:= v0 + 1;
  #L405956.  goto L405938;
  #L405958.  v0:= 1000L;
  #L40595c.  v3:= v3 * v0 @kind long;
  #L405960.  v2:= length @variable v8;
  #L405962.  v5:= 2I;
  #L405964.  if v2 != v5 then goto L405978;
  #L405968.  v2:= 1I;
  #L40596a.  v8:= v8[v2] @kind object;
  #L40596e.  call temp:= `parseLong`(v8) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L405974.  v5:= temp @kind wide;
  #L405976.  v3:= v3 + v5 @kind long;
  #L405978.  v3:= v3 * v0 @kind long;
  #L40597c.  return v3 @kind wide;
}
procedure `void` `e`(`s3.z` v2 @kind object) @signature `Lp3/i;.e:(Ls3/z;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4059b4.  call temp:= `e`(v2) @signature `Ls3/z;.e:()I` @kind virtual;
  #L4059ba.  v0:= temp;
  #L4059bc.  call temp:= `b`(v2) @signature `Lp3/i;.b:(Ls3/z;)Z` @kind static;
  #L4059c2.  v1:= temp;
  #L4059c4.  if v1 == 0 then goto L4059ca;
  #L4059c8.  return @kind void;
  #L4059ca.  call `O`(v2, v0) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L4059d0.  v0:= new `java.lang.StringBuilder`;
  #L4059d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4059da.  v1:= "Expected WEBVTT. Got " @kind object;
  #L4059de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4059e4.  call temp:= `o`(v2) @signature `Ls3/z;.o:()Ljava/lang/String;` @kind virtual;
  #L4059ea.  v2:= temp @kind object;
  #L4059ec.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4059f2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4059f8.  v2:= temp @kind object;
  #L4059fa.  v0:= 0I;
  #L4059fc.  call temp:= `a`(v2, v0) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L405a02.  v2:= temp @kind object;
  #L405a04.  throw v2;
}
