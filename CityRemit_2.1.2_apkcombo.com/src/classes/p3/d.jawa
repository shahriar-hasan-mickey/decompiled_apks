record `p3.d` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `p3.d.a` @AccessFlag PRIVATE;
  `java.lang.String` `p3.d.b` @AccessFlag PRIVATE;
  `java.util.Set` `p3.d.c` @AccessFlag PRIVATE;
  `java.lang.String` `p3.d.d` @AccessFlag PRIVATE;
  `java.lang.String` `p3.d.e` @AccessFlag PRIVATE;
  `int` `p3.d.f` @AccessFlag PRIVATE;
  `boolean` `p3.d.g` @AccessFlag PRIVATE;
  `int` `p3.d.h` @AccessFlag PRIVATE;
  `boolean` `p3.d.i` @AccessFlag PRIVATE;
  `int` `p3.d.j` @AccessFlag PRIVATE;
  `int` `p3.d.k` @AccessFlag PRIVATE;
  `int` `p3.d.l` @AccessFlag PRIVATE;
  `int` `p3.d.m` @AccessFlag PRIVATE;
  `int` `p3.d.n` @AccessFlag PRIVATE;
  `float` `p3.d.o` @AccessFlag PRIVATE;
  `int` `p3.d.p` @AccessFlag PRIVATE;
  `boolean` `p3.d.q` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`p3.d` v2 @kind this) @signature `Lp3/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L403b00.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L403b06.  v0:= "" @kind object;
  #L403b0a.  v2.`p3.d.a` @type ^`java.lang.String` := v0 @kind object;
  #L403b0e.  v2.`p3.d.b` @type ^`java.lang.String` := v0 @kind object;
  #L403b12.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L403b18.  v1:= temp @kind object;
  #L403b1a.  v2.`p3.d.c` @type ^`java.util.Set` := v1 @kind object;
  #L403b1e.  v2.`p3.d.d` @type ^`java.lang.String` := v0 @kind object;
  #L403b22.  v0:= 0I;
  #L403b24.  v2.`p3.d.e` @type ^`java.lang.String` := v0 @kind object;
  #L403b28.  v0:= 0I;
  #L403b2a.  v2.`p3.d.g` @type ^`boolean` := v0 @kind boolean;
  #L403b2e.  v2.`p3.d.i` @type ^`boolean` := v0 @kind boolean;
  #L403b32.  v1:= -1I;
  #L403b34.  v2.`p3.d.j` @type ^`int` := v1;
  #L403b38.  v2.`p3.d.k` @type ^`int` := v1;
  #L403b3c.  v2.`p3.d.l` @type ^`int` := v1;
  #L403b40.  v2.`p3.d.m` @type ^`int` := v1;
  #L403b44.  v2.`p3.d.n` @type ^`int` := v1;
  #L403b48.  v2.`p3.d.p` @type ^`int` := v1;
  #L403b4c.  v2.`p3.d.q` @type ^`boolean` := v0 @kind boolean;
  #L403b50.  return @kind void;
}
procedure `int` `B`(`int` v1 , `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 ) @signature `Lp3/d;.B:(ILjava/lang/String;Ljava/lang/String;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4039a8.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4039ae.  v0:= temp;
  #L4039b0.  if v0 != 0 then goto L4039ce;
  #L4039b4.  v0:= -1I;
  #L4039b6.  if v1 != v0 then goto L4039bc;
  #L4039ba.  goto L4039ce;
  #L4039bc.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4039c2.  v2:= temp;
  #L4039c4.  if v2 == 0 then goto L4039cc;
  #L4039c8.  v0:= v1 + v4 @kind int;
  #L4039cc.  return v0;
  #L4039ce.  return v1;
}
procedure `p3.d` `A`(`p3.d` v0 @kind this, `boolean` v1 ) @signature `Lp3/d;.A:(Z)Lp3/d;` @AccessFlag PUBLIC {
    temp;

  #L403ae8.  v0.`p3.d.k` @type ^`int` := v1;
  #L403aec.  return v0 @kind object;
}
procedure `int` `a`(`p3.d` v2 @kind this) @signature `Lp3/d;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L403820.  v0:= v2.`p3.d.i` @type ^`boolean` @kind boolean;
  #L403824.  if v0 == 0 then goto L40382e;
  #L403828.  v0:= v2.`p3.d.h` @type ^`int`;
  #L40382c.  return v0;
  #L40382e.  v0:= new `java.lang.IllegalStateException`;
  #L403832.  v1:= "Background color not defined." @kind object;
  #L403836.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40383c.  throw v0;
}
procedure `boolean` `b`(`p3.d` v1 @kind this) @signature `Lp3/d;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403780.  v0:= v1.`p3.d.q` @type ^`boolean` @kind boolean;
  #L403784.  return v0;
}
procedure `int` `c`(`p3.d` v2 @kind this) @signature `Lp3/d;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L403850.  v0:= v2.`p3.d.g` @type ^`boolean` @kind boolean;
  #L403854.  if v0 == 0 then goto L40385e;
  #L403858.  v0:= v2.`p3.d.f` @type ^`int`;
  #L40385c.  return v0;
  #L40385e.  v0:= new `java.lang.IllegalStateException`;
  #L403862.  v1:= "Font color not defined" @kind object;
  #L403866.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40386c.  throw v0;
}
procedure `java.lang.String` `d`(`p3.d` v1 @kind this) @signature `Lp3/d;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4039e0.  v0:= v1.`p3.d.e` @type ^`java.lang.String` @kind object;
  #L4039e4.  return v0 @kind object;
}
procedure `float` `e`(`p3.d` v1 @kind this) @signature `Lp3/d;.e:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403808.  v0:= v1.`p3.d.o` @type ^`float`;
  #L40380c.  return v0;
}
procedure `int` `f`(`p3.d` v1 @kind this) @signature `Lp3/d;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403880.  v0:= v1.`p3.d.n` @type ^`int`;
  #L403884.  return v0;
}
procedure `int` `g`(`p3.d` v1 @kind this) @signature `Lp3/d;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403898.  v0:= v1.`p3.d.p` @type ^`int`;
  #L40389c.  return v0;
}
procedure `int` `h`(`p3.d` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `java.util.Set` v6 @kind object, `java.lang.String` v7 @kind object) @signature `Lp3/d;.h:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4038b0.  v0:= v3.`p3.d.a` @type ^`java.lang.String` @kind object;
  #L4038b4.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4038ba.  v0:= temp;
  #L4038bc.  if v0 == 0 then goto L4038fa;
  #L4038c0.  v0:= v3.`p3.d.b` @type ^`java.lang.String` @kind object;
  #L4038c4.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4038ca.  v0:= temp;
  #L4038cc.  if v0 == 0 then goto L4038fa;
  #L4038d0.  v0:= v3.`p3.d.c` @type ^`java.util.Set` @kind object;
  #L4038d4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L4038da.  v0:= temp;
  #L4038dc.  if v0 == 0 then goto L4038fa;
  #L4038e0.  v0:= v3.`p3.d.d` @type ^`java.lang.String` @kind object;
  #L4038e4.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4038ea.  v0:= temp;
  #L4038ec.  if v0 == 0 then goto L4038fa;
  #L4038f0.  call temp:= `isEmpty`(v5) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L4038f6.  v4:= temp;
  #L4038f8.  return v4;
  #L4038fa.  v0:= v3.`p3.d.a` @type ^`java.lang.String` @kind object;
  #L4038fe.  v1:= 2.0F;
  #L403902.  v2:= 0I;
  #L403904.  call temp:= `B`(v2, v0, v4, v1) @signature `Lp3/d;.B:(ILjava/lang/String;Ljava/lang/String;I)I` @kind static;
  #L40390a.  v4:= temp;
  #L40390c.  v0:= v3.`p3.d.b` @type ^`java.lang.String` @kind object;
  #L403910.  v1:= 2I;
  #L403912.  call temp:= `B`(v4, v0, v5, v1) @signature `Lp3/d;.B:(ILjava/lang/String;Ljava/lang/String;I)I` @kind static;
  #L403918.  v4:= temp;
  #L40391a.  v5:= v3.`p3.d.d` @type ^`java.lang.String` @kind object;
  #L40391e.  v0:= 4I;
  #L403920.  call temp:= `B`(v4, v5, v7, v0) @signature `Lp3/d;.B:(ILjava/lang/String;Ljava/lang/String;I)I` @kind static;
  #L403926.  v4:= temp;
  #L403928.  v5:= -1I;
  #L40392a.  if v4 == v5 then goto L403954;
  #L40392e.  v5:= v3.`p3.d.c` @type ^`java.util.Set` @kind object;
  #L403932.  call temp:= `containsAll`(v6, v5) @signature `Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L403938.  v5:= temp;
  #L40393a.  if v5 != 0 then goto L403940;
  #L40393e.  goto L403954;
  #L403940.  v5:= v3.`p3.d.c` @type ^`java.util.Set` @kind object;
  #L403944.  call temp:= `size`(v5) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L40394a.  v5:= temp;
  #L40394c.  v5:= v5 * 4;
  #L403950.  v4:= v4 + v5 @kind int;
  #L403952.  return v4;
  #L403954.  return v2;
}
procedure `int` `i`(`p3.d` v4 @kind this) @signature `Lp3/d;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L403968.  v0:= v4.`p3.d.l` @type ^`int`;
  #L40396c.  v1:= -1I;
  #L40396e.  if v0 != v1 then goto L40397c;
  #L403972.  v2:= v4.`p3.d.m` @type ^`int`;
  #L403976.  if v2 != v1 then goto L40397c;
  #L40397a.  return v1;
  #L40397c.  v1:= 0I;
  #L40397e.  v2:= 1I;
  #L403980.  if v0 != v2 then goto L403988;
  #L403984.  v0:= 1I;
  #L403986.  goto L40398a;
  #L403988.  v0:= 0I;
  #L40398a.  v3:= v4.`p3.d.m` @type ^`int`;
  #L40398e.  if v3 != v2 then goto L403994;
  #L403992.  v1:= 2I;
  #L403994.  v0:= v0 ^| v1 @kind int;
  #L403996.  return v0;
}
procedure `boolean` `j`(`p3.d` v1 @kind this) @signature `Lp3/d;.j:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403798.  v0:= v1.`p3.d.i` @type ^`boolean` @kind boolean;
  #L40379c.  return v0;
}
procedure `boolean` `k`(`p3.d` v1 @kind this) @signature `Lp3/d;.k:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4037b0.  v0:= v1.`p3.d.g` @type ^`boolean` @kind boolean;
  #L4037b4.  return v0;
}
procedure `boolean` `l`(`p3.d` v2 @kind this) @signature `Lp3/d;.l:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4037c8.  v0:= v2.`p3.d.j` @type ^`int`;
  #L4037cc.  v1:= 1I;
  #L4037ce.  if v0 != v1 then goto L4037d4;
  #L4037d2.  goto L4037d6;
  #L4037d4.  v1:= 0I;
  #L4037d6.  return v1;
}
procedure `boolean` `m`(`p3.d` v2 @kind this) @signature `Lp3/d;.m:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4037e8.  v0:= v2.`p3.d.k` @type ^`int`;
  #L4037ec.  v1:= 1I;
  #L4037ee.  if v0 != v1 then goto L4037f4;
  #L4037f2.  goto L4037f6;
  #L4037f4.  v1:= 0I;
  #L4037f6.  return v1;
}
procedure `p3.d` `n`(`p3.d` v0 @kind this, `int` v1 ) @signature `Lp3/d;.n:(I)Lp3/d;` @AccessFlag PUBLIC {
    temp;

  #L4039f8.  v0.`p3.d.h` @type ^`int` := v1;
  #L4039fc.  v1:= 1I;
  #L4039fe.  v0.`p3.d.i` @type ^`boolean` := v1 @kind boolean;
  #L403a02.  return v0 @kind object;
}
procedure `p3.d` `o`(`p3.d` v0 @kind this, `boolean` v1 ) @signature `Lp3/d;.o:(Z)Lp3/d;` @AccessFlag PUBLIC {
    temp;

  #L403a14.  v0.`p3.d.l` @type ^`int` := v1;
  #L403a18.  return v0 @kind object;
}
procedure `p3.d` `p`(`p3.d` v0 @kind this, `boolean` v1 ) @signature `Lp3/d;.p:(Z)Lp3/d;` @AccessFlag PUBLIC {
    temp;

  #L403a2c.  v0.`p3.d.q` @type ^`boolean` := v1 @kind boolean;
  #L403a30.  return v0 @kind object;
}
procedure `p3.d` `q`(`p3.d` v0 @kind this, `int` v1 ) @signature `Lp3/d;.q:(I)Lp3/d;` @AccessFlag PUBLIC {
    temp;

  #L403a44.  v0.`p3.d.f` @type ^`int` := v1;
  #L403a48.  v1:= 1I;
  #L403a4a.  v0.`p3.d.g` @type ^`boolean` := v1 @kind boolean;
  #L403a4e.  return v0 @kind object;
}
procedure `p3.d` `r`(`p3.d` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lp3/d;.r:(Ljava/lang/String;)Lp3/d;` @AccessFlag PUBLIC {
    temp;

  #L403a60.  if v1 != 0 then goto L403a68;
  #L403a64.  v1:= 0I;
  #L403a66.  goto L403a70;
  #L403a68.  call temp:= `e`(v1) @signature `Ll5/b;.e:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L403a6e.  v1:= temp @kind object;
  #L403a70.  v0.`p3.d.e` @type ^`java.lang.String` := v1 @kind object;
  #L403a74.  return v0 @kind object;
}
procedure `p3.d` `s`(`p3.d` v0 @kind this, `float` v1 ) @signature `Lp3/d;.s:(F)Lp3/d;` @AccessFlag PUBLIC {
    temp;

  #L403a88.  v0.`p3.d.o` @type ^`float` := v1;
  #L403a8c.  return v0 @kind object;
}
procedure `p3.d` `t`(`p3.d` v0 @kind this, `int` v1 ) @signature `Lp3/d;.t:(I)Lp3/d;` @AccessFlag PUBLIC {
    temp;

  #L403aa0.  v0.`p3.d.n` @type ^`int` := v1;
  #L403aa4.  return v0 @kind object;
}
procedure `p3.d` `u`(`p3.d` v0 @kind this, `boolean` v1 ) @signature `Lp3/d;.u:(Z)Lp3/d;` @AccessFlag PUBLIC {
    temp;

  #L403ab8.  v0.`p3.d.m` @type ^`int` := v1;
  #L403abc.  return v0 @kind object;
}
procedure `p3.d` `v`(`p3.d` v0 @kind this, `int` v1 ) @signature `Lp3/d;.v:(I)Lp3/d;` @AccessFlag PUBLIC {
    temp;

  #L403ad0.  v0.`p3.d.p` @type ^`int` := v1;
  #L403ad4.  return v0 @kind object;
}
procedure `void` `w`(`p3.d` v1 @kind this, `java.lang.String`[] v2 @kind object) @signature `Lp3/d;.w:([Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403b64.  v0:= new `java.util.HashSet`;
  #L403b68.  call temp:= `asList`(v2) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L403b6e.  v2:= temp @kind object;
  #L403b70.  call `<init>`(v0, v2) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L403b76.  v1.`p3.d.c` @type ^`java.util.Set` := v0 @kind object;
  #L403b7a.  return @kind void;
}
procedure `void` `x`(`p3.d` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lp3/d;.x:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L403b8c.  v0.`p3.d.a` @type ^`java.lang.String` := v1 @kind object;
  #L403b90.  return @kind void;
}
procedure `void` `y`(`p3.d` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lp3/d;.y:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L403ba4.  v0.`p3.d.b` @type ^`java.lang.String` := v1 @kind object;
  #L403ba8.  return @kind void;
}
procedure `void` `z`(`p3.d` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lp3/d;.z:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L403bbc.  v0.`p3.d.d` @type ^`java.lang.String` := v1 @kind object;
  #L403bc0.  return @kind void;
}
