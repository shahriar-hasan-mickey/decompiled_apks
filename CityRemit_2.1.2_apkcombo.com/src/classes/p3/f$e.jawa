record `p3.f$e` @kind class @AccessFlag FINAL {
  `long` `p3.f$e.a` @AccessFlag PUBLIC;
  `long` `p3.f$e.b` @AccessFlag PUBLIC;
  `java.lang.CharSequence` `p3.f$e.c` @AccessFlag PUBLIC;
  `int` `p3.f$e.d` @AccessFlag PUBLIC;
  `float` `p3.f$e.e` @AccessFlag PUBLIC;
  `int` `p3.f$e.f` @AccessFlag PUBLIC;
  `int` `p3.f$e.g` @AccessFlag PUBLIC;
  `float` `p3.f$e.h` @AccessFlag PUBLIC;
  `int` `p3.f$e.i` @AccessFlag PUBLIC;
  `float` `p3.f$e.j` @AccessFlag PUBLIC;
  `int` `p3.f$e.k` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`p3.f$e` v2 @kind this) @signature `Lp3/f$e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L404110.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L404116.  v0:= 0L;
  #L40411a.  v2.`p3.f$e.a` @type ^`long` := v0 @kind wide;
  #L40411e.  v2.`p3.f$e.b` @type ^`long` := v0 @kind wide;
  #L404122.  v0:= 2I;
  #L404124.  v2.`p3.f$e.d` @type ^`int` := v0;
  #L404128.  v0:= -8388609I;
  #L40412e.  v2.`p3.f$e.e` @type ^`float` := v0;
  #L404132.  v1:= 1I;
  #L404134.  v2.`p3.f$e.f` @type ^`int` := v1;
  #L404138.  v1:= 0I;
  #L40413a.  v2.`p3.f$e.g` @type ^`int` := v1;
  #L40413e.  v2.`p3.f$e.h` @type ^`float` := v0;
  #L404142.  v0:= -2147483648I;
  #L404146.  v2.`p3.f$e.i` @type ^`int` := v0;
  #L40414a.  v1:= 1.0F;
  #L40414e.  v2.`p3.f$e.j` @type ^`float` := v1;
  #L404152.  v2.`p3.f$e.k` @type ^`int` := v0;
  #L404156.  return @kind void;
}
procedure `float` `b`(`float` v4 , `int` v5 ) @signature `Lp3/f$e;.b:(FI)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L403efc.  v0:= -8388609I;
  #L403f02.  v1:= 1.0F;
  #L403f06.  v2:= fcmpl(v4, v0);
  #L403f0a.  if v2 == 0 then goto L403f26;
  #L403f0e.  if v5 != 0 then goto L403f26;
  #L403f12.  v3:= 0I;
  #L403f14.  v3:= fcmpg(v4, v3);
  #L403f18.  if v3 < 0 then goto L403f24;
  #L403f1c.  v3:= fcmpl(v4, v1);
  #L403f20.  if v3 <= 0 then goto L403f26;
  #L403f24.  return v1;
  #L403f26.  if v2 == 0 then goto L403f2c;
  #L403f2a.  return v4;
  #L403f2c.  if v5 != 0 then goto L403f32;
  #L403f30.  return v1;
  #L403f32.  return v0;
}
procedure `android.text.Layout$Alignment` `c`(`int` v2 ) @signature `Lp3/f$e;.c:(I)Landroid/text/Layout$Alignment;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L403e8c.  v0:= 1I;
  #L403e8e.  if v2 == v0 then goto L403ee6;
  #L403e92.  v0:= 2I;
  #L403e94.  if v2 == v0 then goto L403ee0;
  #L403e98.  v0:= 3I;
  #L403e9a.  if v2 == v0 then goto L403eda;
  #L403e9e.  v0:= 4I;
  #L403ea0.  if v2 == v0 then goto L403ee6;
  #L403ea4.  v0:= 5I;
  #L403ea6.  if v2 == v0 then goto L403eda;
  #L403eaa.  v0:= new `java.lang.StringBuilder`;
  #L403eae.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L403eb4.  v1:= "Unknown textAlignment: " @kind object;
  #L403eb8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403ebe.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L403ec4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L403eca.  v2:= temp @kind object;
  #L403ecc.  v0:= "WebvttCueParser" @kind object;
  #L403ed0.  call `h`(v0, v2) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L403ed6.  v2:= 0I;
  #L403ed8.  return v2 @kind object;
  #L403eda.  v2:= `@@android.text.Layout$Alignment.ALIGN_OPPOSITE` @type ^`android.text.Layout$Alignment` @kind object;
  #L403ede.  return v2 @kind object;
  #L403ee0.  v2:= `@@android.text.Layout$Alignment.ALIGN_CENTER` @type ^`android.text.Layout$Alignment` @kind object;
  #L403ee4.  return v2 @kind object;
  #L403ee6.  v2:= `@@android.text.Layout$Alignment.ALIGN_NORMAL` @type ^`android.text.Layout$Alignment` @kind object;
  #L403eea.  return v2 @kind object;
}
procedure `float` `d`(`int` v2 , `float` v3 ) @signature `Lp3/f$e;.d:(IF)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L403f44.  v0:= 1.0F;
  #L403f48.  if v2 == 0 then goto L403f8c;
  #L403f4c.  v1:= 1I;
  #L403f4e.  if v2 == v1 then goto L403f6e;
  #L403f52.  v0:= 2I;
  #L403f54.  if v2 != v0 then goto L403f5a;
  #L403f58.  return v3;
  #L403f5a.  v3:= new `java.lang.IllegalStateException`;
  #L403f5e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L403f64.  v2:= temp @kind object;
  #L403f66.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L403f6c.  throw v3;
  #L403f6e.  v2:= 0.5F;
  #L403f72.  v1:= 2.0F;
  #L403f76.  v2:= fcmpg(v3, v2);
  #L403f7a.  if v2 > 0 then goto L403f84;
  #L403f7e.  v3:= v3 * v1 @kind float;
  #L403f82.  return v3;
  #L403f84.  v0:= v0 - v3 @kind float;
  #L403f86.  v0:= v0 * v1 @kind float;
  #L403f8a.  return v0;
  #L403f8c.  v0:= v0 - v3 @kind float;
  #L403f8e.  return v0;
}
procedure `float` `e`(`int` v1 ) @signature `Lp3/f$e;.e:(I)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L403fa0.  v0:= 4I;
  #L403fa2.  if v1 == v0 then goto L403fb8;
  #L403fa6.  v0:= 5I;
  #L403fa8.  if v1 == v0 then goto L403fb2;
  #L403fac.  v1:= 0.5F;
  #L403fb0.  return v1;
  #L403fb2.  v1:= 1.0F;
  #L403fb6.  return v1;
  #L403fb8.  v1:= 0I;
  #L403fba.  return v1;
}
procedure `int` `f`(`int` v2 ) @signature `Lp3/f$e;.f:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4040a4.  v0:= 1I;
  #L4040a6.  if v2 == v0 then goto L4040c2;
  #L4040aa.  v1:= 3I;
  #L4040ac.  if v2 == v1 then goto L4040be;
  #L4040b0.  v1:= 4I;
  #L4040b2.  if v2 == v1 then goto L4040c2;
  #L4040b6.  v1:= 5I;
  #L4040b8.  if v2 == v1 then goto L4040be;
  #L4040bc.  return v0;
  #L4040be.  v2:= 2I;
  #L4040c0.  return v2;
  #L4040c2.  v2:= 0I;
  #L4040c4.  return v2;
}
procedure `p3.e` `a`(`p3.f$e` v7 @kind this) @signature `Lp3/f$e;.a:()Lp3/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4040d8.  v6:= new `p3.e`;
  #L4040dc.  call temp:= `g`(v7) @signature `Lp3/f$e;.g:()Lg3/b$b;` @kind virtual;
  #L4040e2.  v0:= temp @kind object;
  #L4040e4.  call temp:= `a`(v0) @signature `Lg3/b$b;.a:()Lg3/b;` @kind virtual;
  #L4040ea.  v1:= temp @kind object;
  #L4040ec.  v2:= v7.`p3.f$e.a` @type ^`long` @kind wide;
  #L4040f0.  v4:= v7.`p3.f$e.b` @type ^`long` @kind wide;
  #L4040f4.  v0:= v6 @kind object;
  #L4040f6.  call `<init>`(v0, v1, v2, v4) @signature `Lp3/e;.<init>:(Lg3/b;JJ)V` @kind direct;
  #L4040fc.  return v6 @kind object;
}
procedure `g3.b$b` `g`(`p3.f$e` v5 @kind this) @signature `Lp3/f$e;.g:()Lg3/b$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L403fcc.  v0:= v5.`p3.f$e.h` @type ^`float`;
  #L403fd0.  v1:= -8388609I;
  #L403fd6.  v1:= fcmpl(v0, v1);
  #L403fda.  if v1 == 0 then goto L403fe0;
  #L403fde.  goto L403fec;
  #L403fe0.  v0:= v5.`p3.f$e.d` @type ^`int`;
  #L403fe4.  call temp:= `e`(v0) @signature `Lp3/f$e;.e:(I)F` @kind static;
  #L403fea.  v0:= temp;
  #L403fec.  v1:= v5.`p3.f$e.i` @type ^`int`;
  #L403ff0.  v2:= -2147483648I;
  #L403ff4.  if v1 == v2 then goto L403ffa;
  #L403ff8.  goto L404006;
  #L403ffa.  v1:= v5.`p3.f$e.d` @type ^`int`;
  #L403ffe.  call temp:= `f`(v1) @signature `Lp3/f$e;.f:(I)I` @kind static;
  #L404004.  v1:= temp;
  #L404006.  v2:= new `g3.b$b`;
  #L40400a.  call `<init>`(v2) @signature `Lg3/b$b;.<init>:()V` @kind direct;
  #L404010.  v3:= v5.`p3.f$e.d` @type ^`int`;
  #L404014.  call temp:= `c`(v3) @signature `Lp3/f$e;.c:(I)Landroid/text/Layout$Alignment;` @kind static;
  #L40401a.  v3:= temp @kind object;
  #L40401c.  call temp:= `p`(v2, v3) @signature `Lg3/b$b;.p:(Landroid/text/Layout$Alignment;)Lg3/b$b;` @kind virtual;
  #L404022.  v2:= temp @kind object;
  #L404024.  v3:= v5.`p3.f$e.e` @type ^`float`;
  #L404028.  v4:= v5.`p3.f$e.f` @type ^`int`;
  #L40402c.  call temp:= `b`(v3, v4) @signature `Lp3/f$e;.b:(FI)F` @kind static;
  #L404032.  v3:= temp;
  #L404034.  v4:= v5.`p3.f$e.f` @type ^`int`;
  #L404038.  call temp:= `h`(v2, v3, v4) @signature `Lg3/b$b;.h:(FI)Lg3/b$b;` @kind virtual;
  #L40403e.  v2:= temp @kind object;
  #L404040.  v3:= v5.`p3.f$e.g` @type ^`int`;
  #L404044.  call temp:= `i`(v2, v3) @signature `Lg3/b$b;.i:(I)Lg3/b$b;` @kind virtual;
  #L40404a.  v2:= temp @kind object;
  #L40404c.  call temp:= `k`(v2, v0) @signature `Lg3/b$b;.k:(F)Lg3/b$b;` @kind virtual;
  #L404052.  v2:= temp @kind object;
  #L404054.  call temp:= `l`(v2, v1) @signature `Lg3/b$b;.l:(I)Lg3/b$b;` @kind virtual;
  #L40405a.  v2:= temp @kind object;
  #L40405c.  v3:= v5.`p3.f$e.j` @type ^`float`;
  #L404060.  call temp:= `d`(v1, v0) @signature `Lp3/f$e;.d:(IF)F` @kind static;
  #L404066.  v0:= temp;
  #L404068.  call temp:= `min`(v3, v0) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L40406e.  v0:= temp;
  #L404070.  call temp:= `n`(v2, v0) @signature `Lg3/b$b;.n:(F)Lg3/b$b;` @kind virtual;
  #L404076.  v0:= temp @kind object;
  #L404078.  v1:= v5.`p3.f$e.k` @type ^`int`;
  #L40407c.  call temp:= `r`(v0, v1) @signature `Lg3/b$b;.r:(I)Lg3/b$b;` @kind virtual;
  #L404082.  v0:= temp @kind object;
  #L404084.  v1:= v5.`p3.f$e.c` @type ^`java.lang.CharSequence` @kind object;
  #L404088.  if v1 == 0 then goto L404092;
  #L40408c.  call temp:= `o`(v0, v1) @signature `Lg3/b$b;.o:(Ljava/lang/CharSequence;)Lg3/b$b;` @kind virtual;
  #L404092.  return v0 @kind object;
}
