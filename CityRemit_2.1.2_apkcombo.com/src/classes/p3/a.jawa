record `p3.a` @kind class @AccessFlag PUBLIC_FINAL extends `g3.f` @kind class {
  `s3.z` `p3.a.n` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`p3.a` v1 @kind this) @signature `Lp3/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L402ca8.  v0:= "Mp4WebvttDecoder" @kind object;
  #L402cac.  call `<init>`(v1, v0) @signature `Lg3/f;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L402cb2.  v0:= new `s3.z`;
  #L402cb6.  call `<init>`(v0) @signature `Ls3/z;.<init>:()V` @kind direct;
  #L402cbc.  v1.`p3.a.n` @type ^`s3.z` := v0 @kind object;
  #L402cc0.  return @kind void;
}
procedure `g3.b` `C`(`s3.z` v7 @kind object, `int` v8 ) @signature `Lp3/a;.C:(Ls3/z;I)Lg3/b;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L402b30.  v0:= 0I;
  #L402b32.  v1:= v0 @kind object;
  #L402b34.  v2:= v1 @kind object;
  #L402b36.  if v8 <= 0 then goto L402bc0;
  #L402b3a.  v3:= 8I;
  #L402b3e.  if v8 < v3 then goto L402bb0;
  #L402b42.  call temp:= `m`(v7) @signature `Ls3/z;.m:()I` @kind virtual;
  #L402b48.  v4:= temp;
  #L402b4a.  call temp:= `m`(v7) @signature `Ls3/z;.m:()I` @kind virtual;
  #L402b50.  v5:= temp;
  #L402b52.  v8:= v8 + -8;
  #L402b56.  v4:= v4 - v3 @kind int;
  #L402b58.  call temp:= `d`(v7) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L402b5e.  v3:= temp @kind object;
  #L402b60.  call temp:= `e`(v7) @signature `Ls3/z;.e:()I` @kind virtual;
  #L402b66.  v6:= temp;
  #L402b68.  call temp:= `E`(v3, v6, v4) @signature `Ls3/l0;.E:([BII)Ljava/lang/String;` @kind static;
  #L402b6e.  v3:= temp @kind object;
  #L402b70.  call `P`(v7, v4) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L402b76.  v8:= v8 - v4 @kind int;
  #L402b78.  v4:= 1937011815I;
  #L402b7e.  if v5 != v4 then goto L402b8c;
  #L402b82.  call temp:= `o`(v3) @signature `Lp3/f;.o:(Ljava/lang/String;)Lg3/b$b;` @kind static;
  #L402b88.  v2:= temp @kind object;
  #L402b8a.  goto L402b36;
  #L402b8c.  v4:= 1885436268I;
  #L402b92.  if v5 != v4 then goto L402b36;
  #L402b96.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L402b9c.  v1:= temp @kind object;
  #L402b9e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L402ba4.  v3:= temp @kind object;
  #L402ba6.  call temp:= `q`(v0, v1, v3) @signature `Lp3/f;.q:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Landroid/text/SpannedString;` @kind static;
  #L402bac.  v1:= temp @kind object;
  #L402bae.  goto L402b36;
  #L402bb0.  v7:= new `g3.i`;
  #L402bb4.  v8:= "Incomplete vtt cue box header found." @kind object;
  #L402bb8.  call `<init>`(v7, v8) @signature `Lg3/i;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L402bbe.  throw v7;
  #L402bc0.  if v1 != 0 then goto L402bc8;
  #L402bc4.  v1:= "" @kind object;
  #L402bc8.  if v2 == 0 then goto L402bde;
  #L402bcc.  call temp:= `o`(v2, v1) @signature `Lg3/b$b;.o:(Ljava/lang/CharSequence;)Lg3/b$b;` @kind virtual;
  #L402bd2.  v7:= temp @kind object;
  #L402bd4.  call temp:= `a`(v7) @signature `Lg3/b$b;.a:()Lg3/b;` @kind virtual;
  #L402bda.  v7:= temp @kind object;
  #L402bdc.  goto L402be6;
  #L402bde.  call temp:= `l`(v1) @signature `Lp3/f;.l:(Ljava/lang/CharSequence;)Lg3/b;` @kind static;
  #L402be4.  v7:= temp @kind object;
  #L402be6.  return v7 @kind object;
}
procedure `g3.g` `A`(`p3.a` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lp3/a;.A:([BIZ)Lg3/g;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L402bf8.  v4:= v1.`p3.a.n` @type ^`s3.z` @kind object;
  #L402bfc.  call `M`(v4, v2, v3) @signature `Ls3/z;.M:([BI)V` @kind virtual;
  #L402c02.  v2:= new `java.util.ArrayList`;
  #L402c06.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L402c0c.  v3:= v1.`p3.a.n` @type ^`s3.z` @kind object;
  #L402c10.  call temp:= `a`(v3) @signature `Ls3/z;.a:()I` @kind virtual;
  #L402c16.  v3:= temp;
  #L402c18.  if v3 <= 0 then goto L402c8a;
  #L402c1c.  v3:= v1.`p3.a.n` @type ^`s3.z` @kind object;
  #L402c20.  call temp:= `a`(v3) @signature `Ls3/z;.a:()I` @kind virtual;
  #L402c26.  v3:= temp;
  #L402c28.  v4:= 8I;
  #L402c2c.  if v3 < v4 then goto L402c7a;
  #L402c30.  v3:= v1.`p3.a.n` @type ^`s3.z` @kind object;
  #L402c34.  call temp:= `m`(v3) @signature `Ls3/z;.m:()I` @kind virtual;
  #L402c3a.  v3:= temp;
  #L402c3c.  v4:= v1.`p3.a.n` @type ^`s3.z` @kind object;
  #L402c40.  call temp:= `m`(v4) @signature `Ls3/z;.m:()I` @kind virtual;
  #L402c46.  v4:= temp;
  #L402c48.  v0:= 1987343459I;
  #L402c4e.  if v4 != v0 then goto L402c6a;
  #L402c52.  v4:= v1.`p3.a.n` @type ^`s3.z` @kind object;
  #L402c56.  v3:= v3 + -8;
  #L402c5a.  call temp:= `C`(v4, v3) @signature `Lp3/a;.C:(Ls3/z;I)Lg3/b;` @kind static;
  #L402c60.  v3:= temp @kind object;
  #L402c62.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L402c68.  goto L402c0c;
  #L402c6a.  v4:= v1.`p3.a.n` @type ^`s3.z` @kind object;
  #L402c6e.  v3:= v3 + -8;
  #L402c72.  call `P`(v4, v3) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L402c78.  goto L402c0c;
  #L402c7a.  v2:= new `g3.i`;
  #L402c7e.  v3:= "Incomplete Mp4Webvtt Top Level box header found." @kind object;
  #L402c82.  call `<init>`(v2, v3) @signature `Lg3/i;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L402c88.  throw v2;
  #L402c8a.  v3:= new `p3.b`;
  #L402c8e.  call `<init>`(v3, v2) @signature `Lp3/b;.<init>:(Ljava/util/List;)V` @kind direct;
  #L402c94.  return v3 @kind object;
}
