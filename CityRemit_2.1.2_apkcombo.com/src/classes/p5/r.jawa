record `p5.r` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.logging.Logger` `@@p5.r.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ConcurrentMap` `@@p5.r.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ConcurrentMap` `@@p5.r.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ConcurrentMap` `@@p5.r.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ConcurrentMap` `@@p5.r.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lp5/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L409ca0.  v0:= constclass @type ^`p5.r` @kind object;
  #L409ca4.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L409caa.  v0:= temp @kind object;
  #L409cac.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L409cb2.  v0:= temp @kind object;
  #L409cb4.  `@@p5.r.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L409cb8.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L409cbc.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L409cc2.  `@@p5.r.b` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L409cc6.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L409cca.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L409cd0.  `@@p5.r.c` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L409cd4.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L409cd8.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L409cde.  `@@p5.r.d` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L409ce2.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L409ce6.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L409cec.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L409cf0.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L409cf6.  `@@p5.r.e` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L409cfa.  return @kind void;
}
procedure `void` `<init>`(`p5.r` v0 @kind this) @signature `Lp5/r;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L409d0c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L409d12.  return @kind void;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object) @signature `Lp5/r;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L40980c.  call temp:= `requireNonNull`(v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L409812.  return v0 @kind object;
}
procedure `p5.r$d` `b`(`p5.h` v1 @kind object) @signature `Lp5/r;.b:(Lp5/h;)Lp5/r$d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L409c04.  v0:= new `p5.r$a`;
  #L409c08.  call `<init>`(v0, v1) @signature `Lp5/r$a;.<init>:(Lp5/h;)V` @kind direct;
  #L409c0e.  return v0 @kind object;
}
procedure `p5.r$c` `c`(`p5.h` v1 @kind object) @signature `Lp5/r;.c:(Lp5/h;)Lp5/r$c;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L409be8.  v0:= new `p5.r$b`;
  #L409bec.  call `<init>`(v0, v1) @signature `Lp5/r$b;.<init>:(Lp5/h;)V` @kind direct;
  #L409bf2.  return v0 @kind object;
}
procedure `void` `d`(`java.lang.String` v5 @kind object, `java.lang.Class` v6 @kind object, `boolean` v7 ) @signature `Lp5/r;.d:(Ljava/lang/String;Ljava/lang/Class;Z)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L409d24.  v0:= constclass @type ^`p5.r` @kind object;
  #L409d28.  @monitorenter v0
  #L409d2a.  v1:= `@@p5.r.b` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L409d2e.  call temp:= `containsKey`(v1, v5) @signature `Ljava/util/concurrent/ConcurrentMap;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L409d34.  v2:= temp;
  #L409d36.  if v2 != 0 then goto L409d3e;
  #L409d3a.  @monitorexit v0
  #L409d3c.  return @kind void;
  #L409d3e.  call temp:= `get`(v1, v5) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L409d44.  v1:= temp @kind object;
  #L409d46.  v1:= (`p5.r$d`) v1 @kind object;
  #L409d4a.  call temp:= `c`(v1) @signature `Lp5/r$d;.c:()Ljava/lang/Class;` @kind interface;
  #L409d50.  v2:= temp @kind object;
  #L409d52.  call temp:= `equals`(v2, v6) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L409d58.  v2:= temp;
  #L409d5a.  if v2 == 0 then goto L409db2;
  #L409d5e.  if v7 == 0 then goto L409dae;
  #L409d62.  v6:= `@@p5.r.d` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L409d66.  call temp:= `get`(v6, v5) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L409d6c.  v6:= temp @kind object;
  #L409d6e.  v6:= (`java.lang.Boolean`) v6 @kind object;
  #L409d72.  call temp:= `booleanValue`(v6) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L409d78.  v6:= temp;
  #L409d7a.  if v6 == 0 then goto L409d80;
  #L409d7e.  goto L409dae;
  #L409d80.  v6:= new `java.security.GeneralSecurityException`;
  #L409d84.  v7:= new `java.lang.StringBuilder`;
  #L409d88.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L409d8e.  v1:= "New keys are already disallowed for key type " @kind object;
  #L409d92.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409d98.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409d9e.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L409da4.  v5:= temp @kind object;
  #L409da6.  call `<init>`(v6, v5) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L409dac.  throw v6;
  #L409dae.  @monitorexit v0
  #L409db0.  return @kind void;
  #L409db2.  v7:= `@@p5.r.a` @type ^`java.util.logging.Logger` @kind object;
  #L409db6.  v2:= new `java.lang.StringBuilder`;
  #L409dba.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L409dc0.  v3:= "Attempted overwrite of a registered key manager for key type " @kind object;
  #L409dc4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409dca.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409dd0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L409dd6.  v2:= temp @kind object;
  #L409dd8.  call `warning`(v7, v2) @signature `Ljava/util/logging/Logger;.warning:(Ljava/lang/String;)V` @kind virtual;
  #L409dde.  v7:= new `java.security.GeneralSecurityException`;
  #L409de2.  v2:= "typeUrl (%s) is already registered with %s, cannot be re-registered with %s" @kind object;
  #L409de6.  v3:= 3I;
  #L409de8.  v3:= new `java.lang.Object`[v3];
  #L409dec.  v4:= 0I;
  #L409dee.  v3[v4]:= v5 @kind object;
  #L409df2.  v5:= 1I;
  #L409df4.  call temp:= `c`(v1) @signature `Lp5/r$d;.c:()Ljava/lang/Class;` @kind interface;
  #L409dfa.  v1:= temp @kind object;
  #L409dfc.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L409e02.  v1:= temp @kind object;
  #L409e04.  v3[v5]:= v1 @kind object;
  #L409e08.  v5:= 2I;
  #L409e0a.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L409e10.  v6:= temp @kind object;
  #L409e12.  v3[v5]:= v6 @kind object;
  #L409e16.  call temp:= `format`(v2, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L409e1c.  v5:= temp @kind object;
  #L409e1e.  call `<init>`(v7, v5) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L409e24.  throw v7;
  #L409e26.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L409e28.  @monitorexit v0
  #L409e2a.  throw v5;
  catch `java.lang.Throwable` @[L409d2a..L409d36] goto L409e26;
  catch `java.lang.Throwable` @[L409d3e..L409dae] goto L409e26;
  catch `java.lang.Throwable` @[L409db2..L409e26] goto L409e26;
}
procedure `java.lang.Class` `e`(`java.lang.Class` v1 @kind object) @signature `Lp5/r;.e:(Ljava/lang/Class;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4097d8.  v0:= `@@p5.r.e` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L4097dc.  call temp:= `get`(v0, v1) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4097e2.  v1:= temp @kind object;
  #L4097e4.  v1:= (`p5.q`) v1 @kind object;
  #L4097e8.  if v1 != 0 then goto L4097f0;
  #L4097ec.  v1:= 0I;
  #L4097ee.  return v1 @kind object;
  #L4097f0.  call temp:= `a`(v1) @signature `Lp5/q;.a:()Ljava/lang/Class;` @kind interface;
  #L4097f6.  v1:= temp @kind object;
  #L4097f8.  return v1 @kind object;
}
procedure `p5.r$d` `f`(`java.lang.String` v4 @kind object) @signature `Lp5/r;.f:(Ljava/lang/String;)Lp5/r$d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L409c20.  v0:= constclass @type ^`p5.r` @kind object;
  #L409c24.  @monitorenter v0
  #L409c26.  v1:= `@@p5.r.b` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L409c2a.  call temp:= `containsKey`(v1, v4) @signature `Ljava/util/concurrent/ConcurrentMap;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L409c30.  v2:= temp;
  #L409c32.  if v2 == 0 then goto L409c46;
  #L409c36.  call temp:= `get`(v1, v4) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L409c3c.  v4:= temp @kind object;
  #L409c3e.  v4:= (`p5.r$d`) v4 @kind object;
  #L409c42.  @monitorexit v0
  #L409c44.  return v4 @kind object;
  #L409c46.  v1:= new `java.security.GeneralSecurityException`;
  #L409c4a.  v2:= new `java.lang.StringBuilder`;
  #L409c4e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L409c54.  v3:= "No key manager found for key type " @kind object;
  #L409c58.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409c5e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409c64.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L409c6a.  v4:= temp @kind object;
  #L409c6c.  call `<init>`(v1, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L409c72.  throw v1;
  #L409c74.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L409c76.  @monitorexit v0
  #L409c78.  throw v4;
  catch `java.lang.Throwable` @[L409c26..L409c42] goto L409c74;
  catch `java.lang.Throwable` @[L409c46..L409c74] goto L409c74;
}
procedure `p5.e` `g`(`java.lang.String` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lp5/r;.g:(Ljava/lang/String;Ljava/lang/Class;)Lp5/e;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4099d4.  call temp:= `f`(v3) @signature `Lp5/r;.f:(Ljava/lang/String;)Lp5/r$d;` @kind static;
  #L4099da.  v3:= temp @kind object;
  #L4099dc.  if v4 != 0 then goto L4099ea;
  #L4099e0.  call temp:= `b`(v3) @signature `Lp5/r$d;.b:()Lp5/e;` @kind interface;
  #L4099e6.  v3:= temp @kind object;
  #L4099e8.  return v3 @kind object;
  #L4099ea.  call temp:= `d`(v3) @signature `Lp5/r$d;.d:()Ljava/util/Set;` @kind interface;
  #L4099f0.  v0:= temp @kind object;
  #L4099f2.  call temp:= `contains`(v0, v4) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4099f8.  v0:= temp;
  #L4099fa.  if v0 == 0 then goto L409a08;
  #L4099fe.  call temp:= `a`(v3, v4) @signature `Lp5/r$d;.a:(Ljava/lang/Class;)Lp5/e;` @kind interface;
  #L409a04.  v3:= temp @kind object;
  #L409a06.  return v3 @kind object;
  #L409a08.  v0:= new `java.security.GeneralSecurityException`;
  #L409a0c.  v1:= new `java.lang.StringBuilder`;
  #L409a10.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L409a16.  v2:= "Primitive type " @kind object;
  #L409a1a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409a20.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L409a26.  v4:= temp @kind object;
  #L409a28.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409a2e.  v4:= " not supported by key manager of type " @kind object;
  #L409a32.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409a38.  call temp:= `c`(v3) @signature `Lp5/r$d;.c:()Ljava/lang/Class;` @kind interface;
  #L409a3e.  v4:= temp @kind object;
  #L409a40.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409a46.  v4:= ", supported primitives: " @kind object;
  #L409a4a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409a50.  call temp:= `d`(v3) @signature `Lp5/r$d;.d:()Ljava/util/Set;` @kind interface;
  #L409a56.  v3:= temp @kind object;
  #L409a58.  call temp:= `s`(v3) @signature `Lp5/r;.s:(Ljava/util/Set;)Ljava/lang/String;` @kind static;
  #L409a5e.  v3:= temp @kind object;
  #L409a60.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409a66.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L409a6c.  v3:= temp @kind object;
  #L409a6e.  call `<init>`(v0, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L409a74.  throw v0;
}
procedure `java.lang.Object` `h`(`java.lang.String` v0 @kind object, `com.google.crypto.tink.shaded.protobuf.i` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lp5/r;.h:(Ljava/lang/String;Lcom/google/crypto/tink/shaded/protobuf/i;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L409848.  call temp:= `a`(v2) @signature `Lp5/r;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L40984e.  v2:= temp @kind object;
  #L409850.  v2:= (`java.lang.Class`) v2 @kind object;
  #L409854.  call temp:= `j`(v0, v1, v2) @signature `Lp5/r;.j:(Ljava/lang/String;Lcom/google/crypto/tink/shaded/protobuf/i;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L40985a.  v0:= temp @kind object;
  #L40985c.  return v0 @kind object;
}
procedure `java.lang.Object` `i`(`java.lang.String` v0 @kind object, `byte`[] v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lp5/r;.i:(Ljava/lang/String;[BLjava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L409824.  call temp:= `n`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/i;.n:([B)Lcom/google/crypto/tink/shaded/protobuf/i;` @kind static;
  #L40982a.  v1:= temp @kind object;
  #L40982c.  call temp:= `h`(v0, v1, v2) @signature `Lp5/r;.h:(Ljava/lang/String;Lcom/google/crypto/tink/shaded/protobuf/i;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L409832.  v0:= temp @kind object;
  #L409834.  return v0 @kind object;
}
procedure `java.lang.Object` `j`(`java.lang.String` v0 @kind object, `com.google.crypto.tink.shaded.protobuf.i` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lp5/r;.j:(Ljava/lang/String;Lcom/google/crypto/tink/shaded/protobuf/i;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L409870.  call temp:= `g`(v0, v2) @signature `Lp5/r;.g:(Ljava/lang/String;Ljava/lang/Class;)Lp5/e;` @kind static;
  #L409876.  v0:= temp @kind object;
  #L409878.  call temp:= `b`(v0, v1) @signature `Lp5/e;.b:(Lcom/google/crypto/tink/shaded/protobuf/i;)Ljava/lang/Object;` @kind interface;
  #L40987e.  v0:= temp @kind object;
  #L409880.  return v0 @kind object;
}
procedure `p5.p` `k`(`p5.i` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lp5/r;.k:(Lp5/i;Ljava/lang/Class;)Lp5/p;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L409aac.  v0:= 0I;
  #L409aae.  call temp:= `l`(v1, v0, v2) @signature `Lp5/r;.l:(Lp5/i;Lp5/e;Ljava/lang/Class;)Lp5/p;` @kind static;
  #L409ab4.  v1:= temp @kind object;
  #L409ab6.  return v1 @kind object;
}
procedure `p5.p` `l`(`p5.i` v0 @kind object, `p5.e` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lp5/r;.l:(Lp5/i;Lp5/e;Ljava/lang/Class;)Lp5/p;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L409ac8.  call temp:= `a`(v2) @signature `Lp5/r;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L409ace.  v2:= temp @kind object;
  #L409ad0.  v2:= (`java.lang.Class`) v2 @kind object;
  #L409ad4.  call temp:= `m`(v0, v1, v2) @signature `Lp5/r;.m:(Lp5/i;Lp5/e;Ljava/lang/Class;)Lp5/p;` @kind static;
  #L409ada.  v0:= temp @kind object;
  #L409adc.  return v0 @kind object;
}
procedure `p5.p` `m`(`p5.i` v5 @kind object, `p5.e` v6 @kind object, `java.lang.Class` v7 @kind object) @signature `Lp5/r;.m:(Lp5/i;Lp5/e;Ljava/lang/Class;)Lp5/p;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L409af0.  call temp:= `f`(v5) @signature `Lp5/i;.f:()Lw5/c0;` @kind virtual;
  #L409af6.  v0:= temp @kind object;
  #L409af8.  call `d`(v0) @signature `Lp5/s;.d:(Lw5/c0;)V` @kind static;
  #L409afe.  call temp:= `f`(v7) @signature `Lp5/p;.f:(Ljava/lang/Class;)Lp5/p;` @kind static;
  #L409b04.  v0:= temp @kind object;
  #L409b06.  call temp:= `f`(v5) @signature `Lp5/i;.f:()Lw5/c0;` @kind virtual;
  #L409b0c.  v1:= temp @kind object;
  #L409b0e.  call temp:= `U`(v1) @signature `Lw5/c0;.U:()Ljava/util/List;` @kind virtual;
  #L409b14.  v1:= temp @kind object;
  #L409b16.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L409b1c.  v1:= temp @kind object;
  #L409b1e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L409b24.  v2:= temp;
  #L409b26.  if v2 == 0 then goto L409bd4;
  #L409b2a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L409b30.  v2:= temp @kind object;
  #L409b32.  v2:= (`w5.c0$c`) v2 @kind object;
  #L409b36.  call temp:= `V`(v2) @signature `Lw5/c0$c;.V:()Lw5/z;` @kind virtual;
  #L409b3c.  v3:= temp @kind object;
  #L409b3e.  v4:= `@@w5.z.q` @type ^`w5.z` @kind object;
  #L409b42.  if v3 != v4 then goto L409b1e;
  #L409b46.  if v6 == 0 then goto L409b80;
  #L409b4a.  call temp:= `S`(v2) @signature `Lw5/c0$c;.S:()Lw5/y;` @kind virtual;
  #L409b50.  v3:= temp @kind object;
  #L409b52.  call temp:= `T`(v3) @signature `Lw5/y;.T:()Ljava/lang/String;` @kind virtual;
  #L409b58.  v3:= temp @kind object;
  #L409b5a.  call temp:= `a`(v6, v3) @signature `Lp5/e;.a:(Ljava/lang/String;)Z` @kind interface;
  #L409b60.  v3:= temp;
  #L409b62.  if v3 == 0 then goto L409b80;
  #L409b66.  call temp:= `S`(v2) @signature `Lw5/c0$c;.S:()Lw5/y;` @kind virtual;
  #L409b6c.  v3:= temp @kind object;
  #L409b6e.  call temp:= `U`(v3) @signature `Lw5/y;.U:()Lcom/google/crypto/tink/shaded/protobuf/i;` @kind virtual;
  #L409b74.  v3:= temp @kind object;
  #L409b76.  call temp:= `b`(v6, v3) @signature `Lp5/e;.b:(Lcom/google/crypto/tink/shaded/protobuf/i;)Ljava/lang/Object;` @kind interface;
  #L409b7c.  v3:= temp @kind object;
  #L409b7e.  goto L409ba8;
  #L409b80.  call temp:= `S`(v2) @signature `Lw5/c0$c;.S:()Lw5/y;` @kind virtual;
  #L409b86.  v3:= temp @kind object;
  #L409b88.  call temp:= `T`(v3) @signature `Lw5/y;.T:()Ljava/lang/String;` @kind virtual;
  #L409b8e.  v3:= temp @kind object;
  #L409b90.  call temp:= `S`(v2) @signature `Lw5/c0$c;.S:()Lw5/y;` @kind virtual;
  #L409b96.  v4:= temp @kind object;
  #L409b98.  call temp:= `U`(v4) @signature `Lw5/y;.U:()Lcom/google/crypto/tink/shaded/protobuf/i;` @kind virtual;
  #L409b9e.  v4:= temp @kind object;
  #L409ba0.  call temp:= `j`(v3, v4, v7) @signature `Lp5/r;.j:(Ljava/lang/String;Lcom/google/crypto/tink/shaded/protobuf/i;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L409ba6.  v3:= temp @kind object;
  #L409ba8.  call temp:= `a`(v0, v3, v2) @signature `Lp5/p;.a:(Ljava/lang/Object;Lw5/c0$c;)Lp5/p$b;` @kind virtual;
  #L409bae.  v3:= temp @kind object;
  #L409bb0.  call temp:= `T`(v2) @signature `Lw5/c0$c;.T:()I` @kind virtual;
  #L409bb6.  v2:= temp;
  #L409bb8.  call temp:= `f`(v5) @signature `Lp5/i;.f:()Lw5/c0;` @kind virtual;
  #L409bbe.  v4:= temp @kind object;
  #L409bc0.  call temp:= `V`(v4) @signature `Lw5/c0;.V:()I` @kind virtual;
  #L409bc6.  v4:= temp;
  #L409bc8.  if v2 != v4 then goto L409b1e;
  #L409bcc.  call `g`(v0, v3) @signature `Lp5/p;.g:(Lp5/p$b;)V` @kind virtual;
  #L409bd2.  goto L409b1e;
  #L409bd4.  return v0 @kind object;
}
procedure `p5.e` `n`(`java.lang.String` v0 @kind object) @signature `Lp5/r;.n:(Ljava/lang/String;)Lp5/e;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L409a88.  call temp:= `f`(v0) @signature `Lp5/r;.f:(Ljava/lang/String;)Lp5/r$d;` @kind static;
  #L409a8e.  v0:= temp @kind object;
  #L409a90.  call temp:= `b`(v0) @signature `Lp5/r$d;.b:()Lp5/e;` @kind interface;
  #L409a96.  v0:= temp @kind object;
  #L409a98.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.s0` `o`(`w5.a0` v4 @kind object) @signature `Lp5/r;.o:(Lw5/a0;)Lcom/google/crypto/tink/shaded/protobuf/s0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L409728.  v0:= constclass @type ^`p5.r` @kind object;
  #L40972c.  @monitorenter v0
  #L40972e.  call temp:= `T`(v4) @signature `Lw5/a0;.T:()Ljava/lang/String;` @kind virtual;
  #L409734.  v1:= temp @kind object;
  #L409736.  call temp:= `n`(v1) @signature `Lp5/r;.n:(Ljava/lang/String;)Lp5/e;` @kind static;
  #L40973c.  v1:= temp @kind object;
  #L40973e.  v2:= `@@p5.r.d` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L409742.  call temp:= `T`(v4) @signature `Lw5/a0;.T:()Ljava/lang/String;` @kind virtual;
  #L409748.  v3:= temp @kind object;
  #L40974a.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L409750.  v2:= temp @kind object;
  #L409752.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L409756.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L40975c.  v2:= temp;
  #L40975e.  if v2 == 0 then goto L409776;
  #L409762.  call temp:= `U`(v4) @signature `Lw5/a0;.U:()Lcom/google/crypto/tink/shaded/protobuf/i;` @kind virtual;
  #L409768.  v4:= temp @kind object;
  #L40976a.  call temp:= `c`(v1, v4) @signature `Lp5/e;.c:(Lcom/google/crypto/tink/shaded/protobuf/i;)Lcom/google/crypto/tink/shaded/protobuf/s0;` @kind interface;
  #L409770.  v4:= temp @kind object;
  #L409772.  @monitorexit v0
  #L409774.  return v4 @kind object;
  #L409776.  v1:= new `java.security.GeneralSecurityException`;
  #L40977a.  v2:= new `java.lang.StringBuilder`;
  #L40977e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L409784.  v3:= "newKey-operation not permitted for key type " @kind object;
  #L409788.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40978e.  call temp:= `T`(v4) @signature `Lw5/a0;.T:()Ljava/lang/String;` @kind virtual;
  #L409794.  v4:= temp @kind object;
  #L409796.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40979c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4097a2.  v4:= temp @kind object;
  #L4097a4.  call `<init>`(v1, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4097aa.  throw v1;
  #L4097ac.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4097ae.  @monitorexit v0
  #L4097b0.  throw v4;
  catch `java.lang.Throwable` @[L40972e..L409772] goto L4097ac;
  catch `java.lang.Throwable` @[L409776..L4097ac] goto L4097ac;
}
procedure `w5.y` `p`(`w5.a0` v4 @kind object) @signature `Lp5/r;.p:(Lw5/a0;)Lw5/y;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40a014.  v0:= constclass @type ^`p5.r` @kind object;
  #L40a018.  @monitorenter v0
  #L40a01a.  call temp:= `T`(v4) @signature `Lw5/a0;.T:()Ljava/lang/String;` @kind virtual;
  #L40a020.  v1:= temp @kind object;
  #L40a022.  call temp:= `n`(v1) @signature `Lp5/r;.n:(Ljava/lang/String;)Lp5/e;` @kind static;
  #L40a028.  v1:= temp @kind object;
  #L40a02a.  v2:= `@@p5.r.d` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L40a02e.  call temp:= `T`(v4) @signature `Lw5/a0;.T:()Ljava/lang/String;` @kind virtual;
  #L40a034.  v3:= temp @kind object;
  #L40a036.  call temp:= `get`(v2, v3) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40a03c.  v2:= temp @kind object;
  #L40a03e.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L40a042.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L40a048.  v2:= temp;
  #L40a04a.  if v2 == 0 then goto L40a062;
  #L40a04e.  call temp:= `U`(v4) @signature `Lw5/a0;.U:()Lcom/google/crypto/tink/shaded/protobuf/i;` @kind virtual;
  #L40a054.  v4:= temp @kind object;
  #L40a056.  call temp:= `d`(v1, v4) @signature `Lp5/e;.d:(Lcom/google/crypto/tink/shaded/protobuf/i;)Lw5/y;` @kind interface;
  #L40a05c.  v4:= temp @kind object;
  #L40a05e.  @monitorexit v0
  #L40a060.  return v4 @kind object;
  #L40a062.  v1:= new `java.security.GeneralSecurityException`;
  #L40a066.  v2:= new `java.lang.StringBuilder`;
  #L40a06a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40a070.  v3:= "newKey-operation not permitted for key type " @kind object;
  #L40a074.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a07a.  call temp:= `T`(v4) @signature `Lw5/a0;.T:()Ljava/lang/String;` @kind virtual;
  #L40a080.  v4:= temp @kind object;
  #L40a082.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a088.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40a08e.  v4:= temp @kind object;
  #L40a090.  call `<init>`(v1, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40a096.  throw v1;
  #L40a098.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40a09a.  @monitorexit v0
  #L40a09c.  throw v4;
  catch `java.lang.Throwable` @[L40a01a..L40a05e] goto L40a098;
  catch `java.lang.Throwable` @[L40a062..L40a098] goto L40a098;
}
procedure `void` `q`(`p5.h` v4 @kind object, `boolean` v5 ) @signature `Lp5/r;.q:(Lp5/h;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L409e58.  v0:= constclass @type ^`p5.r` @kind object;
  #L409e5c.  @monitorenter v0
  #L409e5e.  if v4 == 0 then goto L409ec2;
  #L409e62.  call temp:= `c`(v4) @signature `Lp5/h;.c:()Ljava/lang/String;` @kind virtual;
  #L409e68.  v1:= temp @kind object;
  #L409e6a.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L409e70.  v2:= temp @kind object;
  #L409e72.  call `d`(v1, v2, v5) @signature `Lp5/r;.d:(Ljava/lang/String;Ljava/lang/Class;Z)V` @kind static;
  #L409e78.  v2:= `@@p5.r.b` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L409e7c.  call temp:= `containsKey`(v2, v1) @signature `Ljava/util/concurrent/ConcurrentMap;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L409e82.  v3:= temp;
  #L409e84.  if v3 != 0 then goto L409ea8;
  #L409e88.  call temp:= `b`(v4) @signature `Lp5/r;.b:(Lp5/h;)Lp5/r$d;` @kind static;
  #L409e8e.  v3:= temp @kind object;
  #L409e90.  call temp:= `put`(v2, v1, v3) @signature `Ljava/util/concurrent/ConcurrentMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L409e96.  v2:= `@@p5.r.c` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L409e9a.  call temp:= `c`(v4) @signature `Lp5/r;.c:(Lp5/h;)Lp5/r$c;` @kind static;
  #L409ea0.  v4:= temp @kind object;
  #L409ea2.  call temp:= `put`(v2, v1, v4) @signature `Ljava/util/concurrent/ConcurrentMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L409ea8.  v4:= `@@p5.r.d` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L409eac.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L409eb2.  v5:= temp @kind object;
  #L409eb4.  call temp:= `put`(v4, v1, v5) @signature `Ljava/util/concurrent/ConcurrentMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L409eba.  @monitorexit v0
  #L409ebc.  return @kind void;
  #L409ebe.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L409ec0.  goto L409ed2;
  #L409ec2.  v4:= new `java.lang.IllegalArgumentException`;
  #L409ec6.  v5:= "key manager must be non-null." @kind object;
  #L409eca.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L409ed0.  throw v4;
  #L409ed2.  @monitorexit v0
  #L409ed4.  throw v4;
  catch `java.lang.Throwable` @[L409e62..L409eba] goto L409ebe;
  catch `java.lang.Throwable` @[L409ec2..L409ed2] goto L409ebe;
}
procedure `void` `r`(`p5.q` v7 @kind object) @signature `Lp5/r;.r:(Lp5/q;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L409efc.  v0:= constclass @type ^`p5.r` @kind object;
  #L409f00.  @monitorenter v0
  #L409f02.  if v7 == 0 then goto L409fda;
  #L409f06.  call temp:= `c`(v7) @signature `Lp5/q;.c:()Ljava/lang/Class;` @kind interface;
  #L409f0c.  v1:= temp @kind object;
  #L409f0e.  v2:= `@@p5.r.e` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L409f12.  call temp:= `containsKey`(v2, v1) @signature `Ljava/util/concurrent/ConcurrentMap;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L409f18.  v3:= temp;
  #L409f1a.  if v3 == 0 then goto L409fcc;
  #L409f1e.  call temp:= `get`(v2, v1) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L409f24.  v3:= temp @kind object;
  #L409f26.  v3:= (`p5.q`) v3 @kind object;
  #L409f2a.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L409f30.  v4:= temp @kind object;
  #L409f32.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L409f38.  v5:= temp @kind object;
  #L409f3a.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L409f40.  v4:= temp;
  #L409f42.  if v4 == 0 then goto L409f48;
  #L409f46.  goto L409fcc;
  #L409f48.  v2:= `@@p5.r.a` @type ^`java.util.logging.Logger` @kind object;
  #L409f4c.  v4:= new `java.lang.StringBuilder`;
  #L409f50.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L409f56.  v5:= "Attempted overwrite of a registered SetWrapper for type " @kind object;
  #L409f5a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409f60.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409f66.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L409f6c.  v4:= temp @kind object;
  #L409f6e.  call `warning`(v2, v4) @signature `Ljava/util/logging/Logger;.warning:(Ljava/lang/String;)V` @kind virtual;
  #L409f74.  v2:= new `java.security.GeneralSecurityException`;
  #L409f78.  v4:= "SetWrapper for primitive (%s) is already registered to be %s, cannot be re-registered with %s" @kind object;
  #L409f7c.  v5:= 3I;
  #L409f7e.  v5:= new `java.lang.Object`[v5];
  #L409f82.  v6:= 0I;
  #L409f84.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L409f8a.  v1:= temp @kind object;
  #L409f8c.  v5[v6]:= v1 @kind object;
  #L409f90.  v1:= 1I;
  #L409f92.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L409f98.  v3:= temp @kind object;
  #L409f9a.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L409fa0.  v3:= temp @kind object;
  #L409fa2.  v5[v1]:= v3 @kind object;
  #L409fa6.  v1:= 2I;
  #L409fa8.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L409fae.  v7:= temp @kind object;
  #L409fb0.  call temp:= `getName`(v7) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L409fb6.  v7:= temp @kind object;
  #L409fb8.  v5[v1]:= v7 @kind object;
  #L409fbc.  call temp:= `format`(v4, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L409fc2.  v7:= temp @kind object;
  #L409fc4.  call `<init>`(v2, v7) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L409fca.  throw v2;
  #L409fcc.  call temp:= `put`(v2, v1, v7) @signature `Ljava/util/concurrent/ConcurrentMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L409fd2.  @monitorexit v0
  #L409fd4.  return @kind void;
  #L409fd6.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L409fd8.  goto L409fea;
  #L409fda.  v7:= new `java.lang.IllegalArgumentException`;
  #L409fde.  v1:= "wrapper must be non-null" @kind object;
  #L409fe2.  call `<init>`(v7, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L409fe8.  throw v7;
  #L409fea.  @monitorexit v0
  #L409fec.  throw v7;
  catch `java.lang.Throwable` @[L409f06..L409fd2] goto L409fd6;
  catch `java.lang.Throwable` @[L409fda..L409fea] goto L409fd6;
}
procedure `java.lang.String` `s`(`java.util.Set` v3 @kind object) @signature `Lp5/r;.s:(Ljava/util/Set;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40996c.  v0:= new `java.lang.StringBuilder`;
  #L409970.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L409976.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40997c.  v3:= temp @kind object;
  #L40997e.  v1:= 1I;
  #L409980.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L409986.  v2:= temp;
  #L409988.  if v2 == 0 then goto L4099b8;
  #L40998c.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L409992.  v2:= temp @kind object;
  #L409994.  v2:= (`java.lang.Class`) v2 @kind object;
  #L409998.  if v1 != 0 then goto L4099a6;
  #L40999c.  v1:= ", " @kind object;
  #L4099a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4099a6.  call temp:= `getCanonicalName`(v2) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L4099ac.  v1:= temp @kind object;
  #L4099ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4099b4.  v1:= 0I;
  #L4099b6.  goto L409980;
  #L4099b8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4099be.  v3:= temp @kind object;
  #L4099c0.  return v3 @kind object;
}
procedure `java.lang.Object` `t`(`p5.p` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lp5/r;.t:(Lp5/p;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L409894.  v0:= `@@p5.r.e` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L409898.  call temp:= `get`(v0, v4) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40989e.  v4:= temp @kind object;
  #L4098a0.  v4:= (`p5.q`) v4 @kind object;
  #L4098a4.  if v4 == 0 then goto L40991c;
  #L4098a8.  call temp:= `a`(v4) @signature `Lp5/q;.a:()Ljava/lang/Class;` @kind interface;
  #L4098ae.  v0:= temp @kind object;
  #L4098b0.  call temp:= `d`(v3) @signature `Lp5/p;.d:()Ljava/lang/Class;` @kind virtual;
  #L4098b6.  v1:= temp @kind object;
  #L4098b8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4098be.  v0:= temp;
  #L4098c0.  if v0 == 0 then goto L4098ce;
  #L4098c4.  call temp:= `b`(v4, v3) @signature `Lp5/q;.b:(Lp5/p;)Ljava/lang/Object;` @kind interface;
  #L4098ca.  v3:= temp @kind object;
  #L4098cc.  return v3 @kind object;
  #L4098ce.  v0:= new `java.security.GeneralSecurityException`;
  #L4098d2.  v1:= new `java.lang.StringBuilder`;
  #L4098d6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4098dc.  v2:= "Wrong input primitive class, expected " @kind object;
  #L4098e0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4098e6.  call temp:= `a`(v4) @signature `Lp5/q;.a:()Ljava/lang/Class;` @kind interface;
  #L4098ec.  v4:= temp @kind object;
  #L4098ee.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4098f4.  v4:= ", got " @kind object;
  #L4098f8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4098fe.  call temp:= `d`(v3) @signature `Lp5/p;.d:()Ljava/lang/Class;` @kind virtual;
  #L409904.  v3:= temp @kind object;
  #L409906.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40990c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L409912.  v3:= temp @kind object;
  #L409914.  call `<init>`(v0, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40991a.  throw v0;
  #L40991c.  v4:= new `java.security.GeneralSecurityException`;
  #L409920.  v0:= new `java.lang.StringBuilder`;
  #L409924.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40992a.  v1:= "No wrapper found for " @kind object;
  #L40992e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409934.  call temp:= `d`(v3) @signature `Lp5/p;.d:()Ljava/lang/Class;` @kind virtual;
  #L40993a.  v3:= temp @kind object;
  #L40993c.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L409942.  v3:= temp @kind object;
  #L409944.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40994a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L409950.  v3:= temp @kind object;
  #L409952.  call `<init>`(v4, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L409958.  throw v4;
}
