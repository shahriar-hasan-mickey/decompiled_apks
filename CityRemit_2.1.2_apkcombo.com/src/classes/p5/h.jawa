record `p5.h` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `java.lang.Class` `p5.h.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `p5.h.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `p5.h.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`p5.h` v5 @kind this, `java.lang.Class` v6 @kind object, `p5.h$b`[] v7 @kind object) @signature `Lp5/h;.<init>:(Ljava/lang/Class;[Lp5/h$b;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L408a50.  call `<init>`(v5) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L408a56.  v5.`p5.h.a` @type ^`java.lang.Class` := v6 @kind object;
  #L408a5a.  v6:= new `java.util.HashMap`;
  #L408a5e.  call `<init>`(v6) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L408a64.  v0:= length @variable v7;
  #L408a66.  v1:= 0I;
  #L408a68.  v2:= 0I;
  #L408a6a.  if v2 >= v0 then goto L408ad8;
  #L408a6e.  v3:= v7[v2] @kind object;
  #L408a72.  call temp:= `b`(v3) @signature `Lp5/h$b;.b:()Ljava/lang/Class;` @kind virtual;
  #L408a78.  v4:= temp @kind object;
  #L408a7a.  call temp:= `containsKey`(v6, v4) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L408a80.  v4:= temp;
  #L408a82.  if v4 != 0 then goto L408a9a;
  #L408a86.  call temp:= `b`(v3) @signature `Lp5/h$b;.b:()Ljava/lang/Class;` @kind virtual;
  #L408a8c.  v4:= temp @kind object;
  #L408a8e.  call temp:= `put`(v6, v4, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L408a94.  v2:= v2 + 1;
  #L408a98.  goto L408a6a;
  #L408a9a.  v6:= new `java.lang.IllegalArgumentException`;
  #L408a9e.  v7:= new `java.lang.StringBuilder`;
  #L408aa2.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L408aa8.  v0:= "KeyTypeManager constructed with duplicate factories for primitive " @kind object;
  #L408aac.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408ab2.  call temp:= `b`(v3) @signature `Lp5/h$b;.b:()Ljava/lang/Class;` @kind virtual;
  #L408ab8.  v0:= temp @kind object;
  #L408aba.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L408ac0.  v0:= temp @kind object;
  #L408ac2.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408ac8.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L408ace.  v7:= temp @kind object;
  #L408ad0.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L408ad6.  throw v6;
  #L408ad8.  v0:= length @variable v7;
  #L408ada.  if v0 <= 0 then goto L408aec;
  #L408ade.  v7:= v7[v1] @kind object;
  #L408ae2.  call temp:= `b`(v7) @signature `Lp5/h$b;.b:()Ljava/lang/Class;` @kind virtual;
  #L408ae8.  v7:= temp @kind object;
  #L408aea.  goto L408af0;
  #L408aec.  v7:= constclass @type ^`java.lang.Void` @kind object;
  #L408af0.  v5.`p5.h.c` @type ^`java.lang.Class` := v7 @kind object;
  #L408af4.  call temp:= `unmodifiableMap`(v6) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L408afa.  v6:= temp @kind object;
  #L408afc.  v5.`p5.h.b` @type ^`java.util.Map` := v6 @kind object;
  #L408b00.  return @kind void;
}
procedure `java.lang.Class` `a`(`p5.h` v1 @kind this) @signature `Lp5/h;.a:()Ljava/lang/Class;` @AccessFlag FINAL {
    temp;
    v0;

  #L408990.  v0:= v1.`p5.h.c` @type ^`java.lang.Class` @kind object;
  #L408994.  return v0 @kind object;
}
procedure `java.lang.Class` `b`(`p5.h` v1 @kind this) @signature `Lp5/h;.b:()Ljava/lang/Class;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4089a8.  v0:= v1.`p5.h.a` @type ^`java.lang.Class` @kind object;
  #L4089ac.  return v0 @kind object;
}
procedure `java.lang.String` `c`() @signature `Lp5/h;.c:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `d`(`p5.h` v2 @kind this, `com.google.crypto.tink.shaded.protobuf.s0` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lp5/h;.d:(Lcom/google/crypto/tink/shaded/protobuf/s0;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4089c0.  v0:= v2.`p5.h.b` @type ^`java.util.Map` @kind object;
  #L4089c4.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4089ca.  v0:= temp @kind object;
  #L4089cc.  v0:= (`p5.h$b`) v0 @kind object;
  #L4089d0.  if v0 == 0 then goto L4089de;
  #L4089d4.  call temp:= `a`(v0, v3) @signature `Lp5/h$b;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4089da.  v3:= temp @kind object;
  #L4089dc.  return v3 @kind object;
  #L4089de.  v3:= new `java.lang.IllegalArgumentException`;
  #L4089e2.  v0:= new `java.lang.StringBuilder`;
  #L4089e6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4089ec.  v1:= "Requested primitive class " @kind object;
  #L4089f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4089f6.  call temp:= `getCanonicalName`(v4) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L4089fc.  v4:= temp @kind object;
  #L4089fe.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408a04.  v4:= " not supported." @kind object;
  #L408a08.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408a0e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L408a14.  v4:= temp @kind object;
  #L408a16.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L408a1c.  throw v3;
}
procedure `p5.h$a` `e`() @signature `Lp5/h;.e:()Lp5/h$a;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `w5.y$c` `f`() @signature `Lp5/h;.f:()Lw5/y$c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.shaded.protobuf.s0` `g`(`com.google.crypto.tink.shaded.protobuf.i` v0 @kind object) @signature `Lp5/h;.g:(Lcom/google/crypto/tink/shaded/protobuf/i;)Lcom/google/crypto/tink/shaded/protobuf/s0;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Set` `h`(`p5.h` v1 @kind this) @signature `Lp5/h;.h:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L408a30.  v0:= v1.`p5.h.b` @type ^`java.util.Map` @kind object;
  #L408a34.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L408a3a.  v0:= temp @kind object;
  #L408a3c.  return v0 @kind object;
}
procedure `void` `i`(`com.google.crypto.tink.shaded.protobuf.s0` v0 @kind object) @signature `Lp5/h;.i:(Lcom/google/crypto/tink/shaded/protobuf/s0;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
