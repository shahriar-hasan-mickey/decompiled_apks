record `p5.f$a` @kind class @AccessFlag  {
  `p5.h$a` `p5.f$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`p5.f$a` v0 @kind this, `p5.h$a` v1 @kind object) @signature `Lp5/f$a;.<init>:(Lp5/h$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L408344.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40834a.  v0.`p5.f$a.a` @type ^`p5.h$a` := v1 @kind object;
  #L40834e.  return @kind void;
}
procedure `com.google.crypto.tink.shaded.protobuf.s0` `b`(`p5.f$a` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.s0` v2 @kind object) @signature `Lp5/f$a;.b:(Lcom/google/crypto/tink/shaded/protobuf/s0;)Lcom/google/crypto/tink/shaded/protobuf/s0;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L408318.  v0:= v1.`p5.f$a.a` @type ^`p5.h$a` @kind object;
  #L40831c.  call `d`(v0, v2) @signature `Lp5/h$a;.d:(Lcom/google/crypto/tink/shaded/protobuf/s0;)V` @kind virtual;
  #L408322.  v0:= v1.`p5.f$a.a` @type ^`p5.h$a` @kind object;
  #L408326.  call temp:= `a`(v0, v2) @signature `Lp5/h$a;.a:(Lcom/google/crypto/tink/shaded/protobuf/s0;)Ljava/lang/Object;` @kind virtual;
  #L40832c.  v2:= temp @kind object;
  #L40832e.  v2:= (`com.google.crypto.tink.shaded.protobuf.s0`) v2 @kind object;
  #L408332.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.s0` `a`(`p5.f$a` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.i` v2 @kind object) @signature `Lp5/f$a;.a:(Lcom/google/crypto/tink/shaded/protobuf/i;)Lcom/google/crypto/tink/shaded/protobuf/s0;` @AccessFlag  {
    temp;
    v0;

  #L4082f0.  v0:= v1.`p5.f$a.a` @type ^`p5.h$a` @kind object;
  #L4082f4.  call temp:= `c`(v0, v2) @signature `Lp5/h$a;.c:(Lcom/google/crypto/tink/shaded/protobuf/i;)Lcom/google/crypto/tink/shaded/protobuf/s0;` @kind virtual;
  #L4082fa.  v2:= temp @kind object;
  #L4082fc.  call temp:= `b`(v1, v2) @signature `Lp5/f$a;.b:(Lcom/google/crypto/tink/shaded/protobuf/s0;)Lcom/google/crypto/tink/shaded/protobuf/s0;` @kind direct;
  #L408302.  v2:= temp @kind object;
  #L408304.  return v2 @kind object;
}
