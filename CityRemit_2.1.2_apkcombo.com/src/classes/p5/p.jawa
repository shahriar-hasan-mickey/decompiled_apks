record `p5.p` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.ConcurrentMap` `p5.p.a` @AccessFlag PRIVATE_FINAL;
  `p5.p$b` `p5.p.b` @AccessFlag PRIVATE;
  `java.lang.Class` `p5.p.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`p5.p` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lp5/p;.<init>:(Ljava/lang/Class;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L4095a4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4095aa.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L4095ae.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L4095b4.  v1.`p5.p.a` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L4095b8.  v1.`p5.p.c` @type ^`java.lang.Class` := v2 @kind object;
  #L4095bc.  return @kind void;
}
procedure `p5.p` `f`(`java.lang.Class` v1 @kind object) @signature `Lp5/p;.f:(Ljava/lang/Class;)Lp5/p;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4094a8.  v0:= new `p5.p`;
  #L4094ac.  call `<init>`(v0, v1) @signature `Lp5/p;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L4094b2.  return v0 @kind object;
}
procedure `p5.p$b` `a`(`p5.p` v8 @kind this, `java.lang.Object` v9 @kind object, `w5.c0$c` v10 @kind object) @signature `Lp5/p;.a:(Ljava/lang/Object;Lw5/c0$c;)Lp5/p$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4094c4.  call temp:= `V`(v10) @signature `Lw5/c0$c;.V:()Lw5/z;` @kind virtual;
  #L4094ca.  v0:= temp @kind object;
  #L4094cc.  v1:= `@@w5.z.q` @type ^`w5.z` @kind object;
  #L4094d0.  if v0 != v1 then goto L40956c;
  #L4094d4.  v0:= new `p5.p$b`;
  #L4094d8.  call temp:= `a`(v10) @signature `Lp5/c;.a:(Lw5/c0$c;)[B` @kind static;
  #L4094de.  v4:= temp @kind object;
  #L4094e0.  call temp:= `V`(v10) @signature `Lw5/c0$c;.V:()Lw5/z;` @kind virtual;
  #L4094e6.  v5:= temp @kind object;
  #L4094e8.  call temp:= `U`(v10) @signature `Lw5/c0$c;.U:()Lw5/i0;` @kind virtual;
  #L4094ee.  v6:= temp @kind object;
  #L4094f0.  call temp:= `T`(v10) @signature `Lw5/c0$c;.T:()I` @kind virtual;
  #L4094f6.  v7:= temp;
  #L4094f8.  v2:= v0 @kind object;
  #L4094fa.  v3:= v9 @kind object;
  #L4094fc.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lp5/p$b;.<init>:(Ljava/lang/Object;[BLw5/z;Lw5/i0;I)V` @kind direct;
  #L409502.  v9:= new `java.util.ArrayList`;
  #L409506.  call `<init>`(v9) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L40950c.  call temp:= `add`(v9, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L409512.  v10:= new `p5.p$c`;
  #L409516.  call temp:= `a`(v0) @signature `Lp5/p$b;.a:()[B` @kind virtual;
  #L40951c.  v1:= temp @kind object;
  #L40951e.  v2:= 0I;
  #L409520.  call `<init>`(v10, v1, v2) @signature `Lp5/p$c;.<init>:([BLp5/p$a;)V` @kind direct;
  #L409526.  v1:= v8.`p5.p.a` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L40952a.  call temp:= `unmodifiableList`(v9) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L409530.  v9:= temp @kind object;
  #L409532.  call temp:= `put`(v1, v10, v9) @signature `Ljava/util/concurrent/ConcurrentMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L409538.  v9:= temp @kind object;
  #L40953a.  v9:= (`java.util.List`) v9 @kind object;
  #L40953e.  if v9 == 0 then goto L40956a;
  #L409542.  v1:= new `java.util.ArrayList`;
  #L409546.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L40954c.  call temp:= `addAll`(v1, v9) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L409552.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L409558.  v9:= v8.`p5.p.a` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L40955c.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L409562.  v1:= temp @kind object;
  #L409564.  call temp:= `put`(v9, v10, v1) @signature `Ljava/util/concurrent/ConcurrentMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40956a.  return v0 @kind object;
  #L40956c.  v9:= new `java.security.GeneralSecurityException`;
  #L409570.  v10:= "only ENABLED key is allowed" @kind object;
  #L409574.  call `<init>`(v9, v10) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40957a.  throw v9;
}
procedure `p5.p$b` `b`(`p5.p` v1 @kind this) @signature `Lp5/p;.b:()Lp5/p$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40958c.  v0:= v1.`p5.p.b` @type ^`p5.p$b` @kind object;
  #L409590.  return v0 @kind object;
}
procedure `java.util.List` `c`(`p5.p` v3 @kind this, `byte`[] v4 @kind object) @signature `Lp5/p;.c:([B)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40944c.  v0:= v3.`p5.p.a` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L409450.  v1:= new `p5.p$c`;
  #L409454.  v2:= 0I;
  #L409456.  call `<init>`(v1, v4, v2) @signature `Lp5/p$c;.<init>:([BLp5/p$a;)V` @kind direct;
  #L40945c.  call temp:= `get`(v0, v1) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L409462.  v4:= temp @kind object;
  #L409464.  v4:= (`java.util.List`) v4 @kind object;
  #L409468.  if v4 == 0 then goto L40946e;
  #L40946c.  goto L409476;
  #L40946e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L409474.  v4:= temp @kind object;
  #L409476.  return v4 @kind object;
}
procedure `java.lang.Class` `d`(`p5.p` v1 @kind this) @signature `Lp5/p;.d:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L409434.  v0:= v1.`p5.p.c` @type ^`java.lang.Class` @kind object;
  #L409438.  return v0 @kind object;
}
procedure `java.util.List` `e`(`p5.p` v1 @kind this) @signature `Lp5/p;.e:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L409488.  v0:= `@@p5.c.a` @type ^`byte`[] @kind object;
  #L40948c.  call temp:= `c`(v1, v0) @signature `Lp5/p;.c:([B)Ljava/util/List;` @kind virtual;
  #L409492.  v0:= temp @kind object;
  #L409494.  return v0 @kind object;
}
procedure `void` `g`(`p5.p` v2 @kind this, `p5.p$b` v3 @kind object) @signature `Lp5/p;.g:(Lp5/p$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4095d0.  if v3 == 0 then goto L409626;
  #L4095d4.  call temp:= `d`(v3) @signature `Lp5/p$b;.d:()Lw5/z;` @kind virtual;
  #L4095da.  v0:= temp @kind object;
  #L4095dc.  v1:= `@@w5.z.q` @type ^`w5.z` @kind object;
  #L4095e0.  if v0 != v1 then goto L409616;
  #L4095e4.  call temp:= `a`(v3) @signature `Lp5/p$b;.a:()[B` @kind virtual;
  #L4095ea.  v0:= temp @kind object;
  #L4095ec.  call temp:= `c`(v2, v0) @signature `Lp5/p;.c:([B)Ljava/util/List;` @kind virtual;
  #L4095f2.  v0:= temp @kind object;
  #L4095f4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4095fa.  v0:= temp;
  #L4095fc.  if v0 != 0 then goto L409606;
  #L409600.  v2.`p5.p.b` @type ^`p5.p$b` := v3 @kind object;
  #L409604.  return @kind void;
  #L409606.  v3:= new `java.lang.IllegalArgumentException`;
  #L40960a.  v0:= "the primary entry cannot be set to an entry which is not held by this primitive set" @kind object;
  #L40960e.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L409614.  throw v3;
  #L409616.  v3:= new `java.lang.IllegalArgumentException`;
  #L40961a.  v0:= "the primary entry has to be ENABLED" @kind object;
  #L40961e.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L409624.  throw v3;
  #L409626.  v3:= new `java.lang.IllegalArgumentException`;
  #L40962a.  v0:= "the primary entry must be non-null" @kind object;
  #L40962e.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L409634.  throw v3;
}
