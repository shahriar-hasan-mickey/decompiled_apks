record `kb.i` @kind class @AccessFlag  {
}
procedure `java.lang.Object`[] `a`(`java.lang.Object`[] v2 @kind object, `boolean` v3 ) @signature `Lkb/i;.a:([Ljava/lang/Object;Z)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3b2158.  v0:= constclass @type ^`java.lang.Object`[] @kind object;
  #L3b215c.  v1:= "<this>" @kind object;
  #L3b2160.  call `e`(v2, v1) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b2166.  if v3 == 0 then goto L3b2180;
  #L3b216a.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3b2170.  v3:= temp @kind object;
  #L3b2172.  call temp:= `a`(v3, v0) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3b2178.  v3:= temp;
  #L3b217a.  if v3 == 0 then goto L3b2180;
  #L3b217e.  goto L3b2194;
  #L3b2180.  v3:= length @variable v2;
  #L3b2182.  call temp:= `copyOf`(v2, v3, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;` @kind static;
  #L3b2188.  v2:= temp @kind object;
  #L3b218a.  v3:= "copyOf(this, this.size, Array<Any?>::class.java)" @kind object;
  #L3b218e.  call `d`(v2, v3) @signature `Lkotlin/jvm/internal/k;.d:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b2194.  return v2 @kind object;
}
procedure `java.util.List` `b`(`java.lang.Object` v1 @kind object) @signature `Lkb/i;.b:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b21a8.  call temp:= `singletonList`(v1) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3b21ae.  v1:= temp @kind object;
  #L3b21b0.  v0:= "singletonList(element)" @kind object;
  #L3b21b4.  call `d`(v1, v0) @signature `Lkotlin/jvm/internal/k;.d:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b21ba.  return v1 @kind object;
}
