record `kb.w` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.Iterator` @kind interface {
}
procedure `void` `<init>`(`kb.w` v0 @kind this) @signature `Lkb/w;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b37d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b37d6.  return @kind void;
}
procedure `int` `a`() @signature `Lkb/w;.a:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `next`(`kb.w` v1 @kind this) @signature `Lkb/w;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3b37ac.  call temp:= `a`(v1) @signature `Lkb/w;.a:()I` @kind virtual;
  #L3b37b2.  v0:= temp;
  #L3b37b4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b37ba.  v0:= temp @kind object;
  #L3b37bc.  return v0 @kind object;
}
procedure `void` `remove`(`kb.w` v2 @kind this) @signature `Lkb/w;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b37e8.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3b37ec.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L3b37f0.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b37f6.  throw v0;
}
