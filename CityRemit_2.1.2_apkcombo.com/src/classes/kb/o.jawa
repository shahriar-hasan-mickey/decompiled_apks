record `kb.o` @kind class @AccessFlag  extends `kb.n` @kind class {
}
procedure `boolean` `j`(`java.util.Collection` v2 @kind object, `java.lang.Iterable` v3 @kind object) @signature `Lkb/o;.j:(Ljava/util/Collection;Ljava/lang/Iterable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b2304.  v0:= "<this>" @kind object;
  #L3b2308.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b230e.  v0:= "elements" @kind object;
  #L3b2312.  call `e`(v3, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b2318.  v0:= instanceof @variable v3 @type ^`java.util.Collection` @kind boolean;
  #L3b231c.  if v0 == 0 then goto L3b232e;
  #L3b2320.  v3:= (`java.util.Collection`) v3 @kind object;
  #L3b2324.  call temp:= `addAll`(v2, v3) @signature `Ljava/util/Collection;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3b232a.  v2:= temp;
  #L3b232c.  return v2;
  #L3b232e.  v0:= 0I;
  #L3b2330.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3b2336.  v3:= temp @kind object;
  #L3b2338.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3b233e.  v1:= temp;
  #L3b2340.  if v1 == 0 then goto L3b235c;
  #L3b2344.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3b234a.  v1:= temp @kind object;
  #L3b234c.  call temp:= `add`(v2, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3b2352.  v1:= temp;
  #L3b2354.  if v1 == 0 then goto L3b2338;
  #L3b2358.  v0:= 1I;
  #L3b235a.  goto L3b2338;
  #L3b235c.  return v0;
}
