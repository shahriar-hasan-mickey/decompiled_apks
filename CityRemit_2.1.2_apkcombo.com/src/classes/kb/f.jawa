record `kb.f` @kind class @AccessFlag  extends `kb.e` @kind class {
}
procedure `boolean` `h`(`java.lang.Object`[] v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkb/f;.h:([Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3b1d44.  v0:= "<this>" @kind object;
  #L3b1d48.  call `e`(v1, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1d4e.  call temp:= `l`(v1, v2) @signature `Lkb/f;.l:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L3b1d54.  v1:= temp;
  #L3b1d56.  if v1 < 0 then goto L3b1d5e;
  #L3b1d5a.  v1:= 1I;
  #L3b1d5c.  goto L3b1d60;
  #L3b1d5e.  v1:= 0I;
  #L3b1d60.  return v1;
}
procedure `java.util.List` `i`(`java.lang.Object`[] v1 @kind object) @signature `Lkb/f;.i:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b1f28.  v0:= "<this>" @kind object;
  #L3b1f2c.  call `e`(v1, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1f32.  v0:= new `java.util.ArrayList`;
  #L3b1f36.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3b1f3c.  call temp:= `j`(v1, v0) @signature `Lkb/f;.j:([Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L3b1f42.  v1:= temp @kind object;
  #L3b1f44.  v1:= (`java.util.List`) v1 @kind object;
  #L3b1f48.  return v1 @kind object;
}
procedure `java.util.Collection` `j`(`java.lang.Object`[] v3 @kind object, `java.util.Collection` v4 @kind object) @signature `Lkb/f;.j:([Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3b1ee4.  v0:= "<this>" @kind object;
  #L3b1ee8.  call `e`(v3, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1eee.  v0:= "destination" @kind object;
  #L3b1ef2.  call `e`(v4, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1ef8.  v0:= length @variable v3;
  #L3b1efa.  v1:= 0I;
  #L3b1efc.  if v1 >= v0 then goto L3b1f14;
  #L3b1f00.  v2:= v3[v1] @kind object;
  #L3b1f04.  if v2 == 0 then goto L3b1f0e;
  #L3b1f08.  call temp:= `add`(v4, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3b1f0e.  v1:= v1 + 1;
  #L3b1f12.  goto L3b1efc;
  #L3b1f14.  return v4 @kind object;
}
procedure `java.lang.Object` `k`(`java.lang.Object`[] v2 @kind object) @signature `Lkb/f;.k:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b1e1c.  v0:= "<this>" @kind object;
  #L3b1e20.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1e26.  v0:= length @variable v2;
  #L3b1e28.  v1:= 0I;
  #L3b1e2a.  if v0 != 0 then goto L3b1e32;
  #L3b1e2e.  v0:= 1I;
  #L3b1e30.  goto L3b1e34;
  #L3b1e32.  v0:= 0I;
  #L3b1e34.  if v0 != 0 then goto L3b1e3e;
  #L3b1e38.  v2:= v2[v1] @kind object;
  #L3b1e3c.  return v2 @kind object;
  #L3b1e3e.  v2:= new `java.util.NoSuchElementException`;
  #L3b1e42.  v0:= "Array is empty." @kind object;
  #L3b1e46.  call `<init>`(v2, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b1e4c.  throw v2;
}
procedure `int` `l`(`java.lang.Object`[] v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkb/f;.l:([Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3b1dc4.  v0:= "<this>" @kind object;
  #L3b1dc8.  call `e`(v3, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1dce.  v0:= 0I;
  #L3b1dd0.  if v4 != 0 then goto L3b1dea;
  #L3b1dd4.  v4:= length @variable v3;
  #L3b1dd6.  if v0 >= v4 then goto L3b1e08;
  #L3b1dda.  v1:= v3[v0] @kind object;
  #L3b1dde.  if v1 != 0 then goto L3b1de4;
  #L3b1de2.  return v0;
  #L3b1de4.  v0:= v0 + 1;
  #L3b1de8.  goto L3b1dd6;
  #L3b1dea.  v1:= length @variable v3;
  #L3b1dec.  if v0 >= v1 then goto L3b1e08;
  #L3b1df0.  v2:= v3[v0] @kind object;
  #L3b1df4.  call temp:= `a`(v4, v2) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3b1dfa.  v2:= temp;
  #L3b1dfc.  if v2 == 0 then goto L3b1e02;
  #L3b1e00.  return v0;
  #L3b1e02.  v0:= v0 + 1;
  #L3b1e06.  goto L3b1dec;
  #L3b1e08.  v3:= -1I;
  #L3b1e0a.  return v3;
}
procedure `char` `m`(`char`[] v2 @kind object) @signature `Lkb/f;.m:([C)C` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b1d74.  v0:= "<this>" @kind object;
  #L3b1d78.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1d7e.  v0:= length @variable v2;
  #L3b1d80.  if v0 == 0 then goto L3b1da2;
  #L3b1d84.  v1:= 1I;
  #L3b1d86.  if v0 != v1 then goto L3b1d92;
  #L3b1d8a.  v0:= 0I;
  #L3b1d8c.  v2:= v2[v0] @kind char;
  #L3b1d90.  return v2;
  #L3b1d92.  v2:= new `java.lang.IllegalArgumentException`;
  #L3b1d96.  v0:= "Array has more than one element." @kind object;
  #L3b1d9a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b1da0.  throw v2;
  #L3b1da2.  v2:= new `java.util.NoSuchElementException`;
  #L3b1da6.  v0:= "Array is empty." @kind object;
  #L3b1daa.  call `<init>`(v2, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b1db0.  throw v2;
}
procedure `java.lang.Object` `n`(`java.lang.Object`[] v2 @kind object) @signature `Lkb/f;.n:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b1e60.  v0:= "<this>" @kind object;
  #L3b1e64.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1e6a.  v0:= length @variable v2;
  #L3b1e6c.  v1:= 1I;
  #L3b1e6e.  if v0 != v1 then goto L3b1e7a;
  #L3b1e72.  v0:= 0I;
  #L3b1e74.  v2:= v2[v0] @kind object;
  #L3b1e78.  goto L3b1e7c;
  #L3b1e7a.  v2:= 0I;
  #L3b1e7c.  return v2 @kind object;
}
procedure `java.lang.Object`[] `o`(`java.lang.Object`[] v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkb/f;.o:([Ljava/lang/Object;Ljava/util/Comparator;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3b1e90.  v0:= "<this>" @kind object;
  #L3b1e94.  call `e`(v1, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1e9a.  v0:= "comparator" @kind object;
  #L3b1e9e.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1ea4.  v0:= length @variable v1;
  #L3b1ea6.  if v0 != 0 then goto L3b1eae;
  #L3b1eaa.  v0:= 1I;
  #L3b1eac.  goto L3b1eb0;
  #L3b1eae.  v0:= 0I;
  #L3b1eb0.  if v0 == 0 then goto L3b1eb6;
  #L3b1eb4.  return v1 @kind object;
  #L3b1eb6.  v0:= length @variable v1;
  #L3b1eb8.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L3b1ebe.  v1:= temp @kind object;
  #L3b1ec0.  v0:= "copyOf(this, size)" @kind object;
  #L3b1ec4.  call `d`(v1, v0) @signature `Lkotlin/jvm/internal/k;.d:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1eca.  call `g`(v1, v2) @signature `Lkb/e;.g:([Ljava/lang/Object;Ljava/util/Comparator;)V` @kind static;
  #L3b1ed0.  return v1 @kind object;
}
procedure `java.util.List` `p`(`java.lang.Object`[] v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkb/f;.p:([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b1f5c.  v0:= "<this>" @kind object;
  #L3b1f60.  call `e`(v1, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1f66.  v0:= "comparator" @kind object;
  #L3b1f6a.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1f70.  call temp:= `o`(v1, v2) @signature `Lkb/f;.o:([Ljava/lang/Object;Ljava/util/Comparator;)[Ljava/lang/Object;` @kind static;
  #L3b1f76.  v1:= temp @kind object;
  #L3b1f78.  call temp:= `a`(v1) @signature `Lkb/b;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3b1f7e.  v1:= temp @kind object;
  #L3b1f80.  return v1 @kind object;
}
procedure `java.util.List` `q`(`java.lang.Object`[] v2 @kind object) @signature `Lkb/f;.q:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b1f94.  v0:= "<this>" @kind object;
  #L3b1f98.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1f9e.  v0:= length @variable v2;
  #L3b1fa0.  if v0 == 0 then goto L3b1fc4;
  #L3b1fa4.  v1:= 1I;
  #L3b1fa6.  if v0 == v1 then goto L3b1fb4;
  #L3b1faa.  call temp:= `r`(v2) @signature `Lkb/f;.r:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3b1fb0.  v2:= temp @kind object;
  #L3b1fb2.  goto L3b1fcc;
  #L3b1fb4.  v0:= 0I;
  #L3b1fb6.  v2:= v2[v0] @kind object;
  #L3b1fba.  call temp:= `b`(v2) @signature `Lkb/h;.b:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3b1fc0.  v2:= temp @kind object;
  #L3b1fc2.  goto L3b1fcc;
  #L3b1fc4.  call temp:= `d`() @signature `Lkb/h;.d:()Ljava/util/List;` @kind static;
  #L3b1fca.  v2:= temp @kind object;
  #L3b1fcc.  return v2 @kind object;
}
procedure `java.util.List` `r`(`java.lang.Object`[] v1 @kind object) @signature `Lkb/f;.r:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3b1fe0.  v0:= "<this>" @kind object;
  #L3b1fe4.  call `e`(v1, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b1fea.  v0:= new `java.util.ArrayList`;
  #L3b1fee.  call temp:= `c`(v1) @signature `Lkb/j;.c:([Ljava/lang/Object;)Ljava/util/Collection;` @kind static;
  #L3b1ff4.  v1:= temp @kind object;
  #L3b1ff6.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3b1ffc.  return v0 @kind object;
}
