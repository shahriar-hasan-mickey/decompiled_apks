record `kb.s` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.ListIterator` @kind interface {
}
global `kb.s` `@@kb.s.o` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkb/s;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b2d80.  v0:= new `kb.s`;
  #L3b2d84.  call `<init>`(v0) @signature `Lkb/s;.<init>:()V` @kind direct;
  #L3b2d8a.  `@@kb.s.o` @type ^`kb.s` := v0 @kind object;
  #L3b2d8e.  return @kind void;
}
procedure `void` `<init>`(`kb.s` v0 @kind this) @signature `Lkb/s;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3b2da0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b2da6.  return @kind void;
}
procedure `java.lang.Void` `a`(`kb.s` v1 @kind this) @signature `Lkb/s;.a:()Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2d48.  v0:= new `java.util.NoSuchElementException`;
  #L3b2d4c.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3b2d52.  throw v0;
}
procedure `void` `add`(`kb.s` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkb/s;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3b2db8.  v2:= new `java.lang.UnsupportedOperationException`;
  #L3b2dbc.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L3b2dc0.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b2dc6.  throw v2;
}
procedure `java.lang.Void` `d`(`kb.s` v1 @kind this) @signature `Lkb/s;.d:()Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2d64.  v0:= new `java.util.NoSuchElementException`;
  #L3b2d68.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3b2d6e.  throw v0;
}
procedure `boolean` `hasNext`(`kb.s` v1 @kind this) @signature `Lkb/s;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2cc0.  v0:= 0I;
  #L3b2cc2.  return v0;
}
procedure `boolean` `hasPrevious`(`kb.s` v1 @kind this) @signature `Lkb/s;.hasPrevious:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2cd4.  v0:= 0I;
  #L3b2cd6.  return v0;
}
procedure `java.lang.Object` `next`(`kb.s` v1 @kind this) @signature `Lkb/s;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3b2d10.  call temp:= `a`(v1) @signature `Lkb/s;.a:()Ljava/lang/Void;` @kind virtual;
  #L3b2d16.  v0:= temp @kind object;
  #L3b2d18.  return v0 @kind object;
}
procedure `int` `nextIndex`(`kb.s` v1 @kind this) @signature `Lkb/s;.nextIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2ce8.  v0:= 0I;
  #L3b2cea.  return v0;
}
procedure `java.lang.Object` `previous`(`kb.s` v1 @kind this) @signature `Lkb/s;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3b2d2c.  call temp:= `d`(v1) @signature `Lkb/s;.d:()Ljava/lang/Void;` @kind virtual;
  #L3b2d32.  v0:= temp @kind object;
  #L3b2d34.  return v0 @kind object;
}
procedure `int` `previousIndex`(`kb.s` v1 @kind this) @signature `Lkb/s;.previousIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2cfc.  v0:= -1I;
  #L3b2cfe.  return v0;
}
procedure `void` `remove`(`kb.s` v2 @kind this) @signature `Lkb/s;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b2dd8.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3b2ddc.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L3b2de0.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b2de6.  throw v0;
}
procedure `void` `set`(`kb.s` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkb/s;.set:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3b2df8.  v2:= new `java.lang.UnsupportedOperationException`;
  #L3b2dfc.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L3b2e00.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b2e06.  throw v2;
}
