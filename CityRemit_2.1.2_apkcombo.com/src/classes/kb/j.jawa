record `kb.j` @kind class @AccessFlag  extends `kb.i` @kind class {
}
procedure `java.util.Collection` `c`(`java.lang.Object`[] v2 @kind object) @signature `Lkb/j;.c:([Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3b21f4.  v0:= "<this>" @kind object;
  #L3b21f8.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b21fe.  v0:= new `kb.a`;
  #L3b2202.  v1:= 0I;
  #L3b2204.  call `<init>`(v0, v2, v1) @signature `Lkb/a;.<init>:([Ljava/lang/Object;Z)V` @kind direct;
  #L3b220a.  return v0 @kind object;
}
procedure `java.util.List` `d`() @signature `Lkb/j;.d:()Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b221c.  v0:= `@@kb.t.o` @type ^`kb.t` @kind object;
  #L3b2220.  return v0 @kind object;
}
procedure `int` `e`(`java.util.List` v1 @kind object) @signature `Lkb/j;.e:(Ljava/util/List;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b21cc.  v0:= "<this>" @kind object;
  #L3b21d0.  call `e`(v1, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b21d6.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3b21dc.  v1:= temp;
  #L3b21de.  v1:= v1 + -1;
  #L3b21e2.  return v1;
}
procedure `java.util.List` `f`(`java.lang.Object`[] v1 @kind object) @signature `Lkb/j;.f:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b2234.  v0:= "elements" @kind object;
  #L3b2238.  call `e`(v1, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b223e.  v0:= length @variable v1;
  #L3b2240.  if v0 <= 0 then goto L3b224e;
  #L3b2244.  call temp:= `a`(v1) @signature `Lkb/b;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3b224a.  v1:= temp @kind object;
  #L3b224c.  goto L3b2256;
  #L3b224e.  call temp:= `d`() @signature `Lkb/h;.d:()Ljava/util/List;` @kind static;
  #L3b2254.  v1:= temp @kind object;
  #L3b2256.  return v1 @kind object;
}
procedure `java.util.List` `g`(`java.util.List` v2 @kind object) @signature `Lkb/j;.g:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b2268.  v0:= "<this>" @kind object;
  #L3b226c.  call `e`(v2, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b2272.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3b2278.  v0:= temp;
  #L3b227a.  if v0 == 0 then goto L3b229a;
  #L3b227e.  v1:= 1I;
  #L3b2280.  if v0 == v1 then goto L3b2286;
  #L3b2284.  goto L3b22a2;
  #L3b2286.  v0:= 0I;
  #L3b2288.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3b228e.  v2:= temp @kind object;
  #L3b2290.  call temp:= `b`(v2) @signature `Lkb/h;.b:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3b2296.  v2:= temp @kind object;
  #L3b2298.  goto L3b22a2;
  #L3b229a.  call temp:= `d`() @signature `Lkb/h;.d:()Ljava/util/List;` @kind static;
  #L3b22a0.  v2:= temp @kind object;
  #L3b22a2.  return v2 @kind object;
}
procedure `void` `h`() @signature `Lkb/j;.h:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b22b4.  v0:= new `java.lang.ArithmeticException`;
  #L3b22b8.  v1:= "Index overflow has happened." @kind object;
  #L3b22bc.  call `<init>`(v0, v1) @signature `Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b22c2.  throw v0;
}
