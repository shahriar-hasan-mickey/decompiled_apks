record `g8.n$g` @kind class @AccessFlag  extends `d8.w` @kind class {
}
procedure `void` `<init>`(`g8.n$g` v0 @kind this) @signature `Lg8/n$g;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L327cf8.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L327cfe.  return @kind void;
}
procedure `java.lang.Object` `c`(`g8.n$g` v0 @kind this, `l8.a` v1 @kind object) @signature `Lg8/n$g;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L327c80.  call temp:= `f`(v0, v1) @signature `Lg8/n$g;.f:(Ll8/a;)Ljava/math/BigDecimal;` @kind virtual;
  #L327c86.  v1:= temp @kind object;
  #L327c88.  return v1 @kind object;
}
procedure `void` `e`(`g8.n$g` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lg8/n$g;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L327d10.  v2:= (`java.math.BigDecimal`) v2 @kind object;
  #L327d14.  call `g`(v0, v1, v2) @signature `Lg8/n$g;.g:(Ll8/c;Ljava/math/BigDecimal;)V` @kind virtual;
  #L327d1a.  return @kind void;
}
procedure `java.math.BigDecimal` `f`(`g8.n$g` v2 @kind this, `l8.a` v3 @kind object) @signature `Lg8/n$g;.f:(Ll8/a;)Ljava/math/BigDecimal;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L327c9c.  call temp:= `f0`(v3) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L327ca2.  v0:= temp @kind object;
  #L327ca4.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L327ca8.  if v0 != v1 then goto L327cb6;
  #L327cac.  call `b0`(v3) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L327cb2.  v3:= 0I;
  #L327cb4.  return v3 @kind object;
  #L327cb6.  v0:= new `java.math.BigDecimal`;
  #L327cba.  call temp:= `d0`(v3) @signature `Ll8/a;.d0:()Ljava/lang/String;` @kind virtual;
  #L327cc0.  v3:= temp @kind object;
  #L327cc2.  call `<init>`(v0, v3) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L327cc8.  return v0 @kind object;
  #L327cca.  v3:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L327ccc.  v0:= new `d8.s`;
  #L327cd0.  call `<init>`(v0, v3) @signature `Ld8/s;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L327cd6.  throw v0;
  catch `java.lang.NumberFormatException` @[L327cb6..L327cc8] goto L327cca;
}
procedure `void` `g`(`g8.n$g` v0 @kind this, `l8.c` v1 @kind object, `java.math.BigDecimal` v2 @kind object) @signature `Lg8/n$g;.g:(Ll8/c;Ljava/math/BigDecimal;)V` @AccessFlag PUBLIC {
    temp;

  #L327d2c.  call temp:= `g0`(v1, v2) @signature `Ll8/c;.g0:(Ljava/lang/Number;)Ll8/c;` @kind virtual;
  #L327d32.  return @kind void;
}
