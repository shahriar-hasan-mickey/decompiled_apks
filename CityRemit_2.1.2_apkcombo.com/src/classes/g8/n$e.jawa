record `g8.n$e` @kind class @AccessFlag  extends `d8.w` @kind class {
}
procedure `void` `<init>`(`g8.n$e` v0 @kind this) @signature `Lg8/n$e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L327b6c.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L327b72.  return @kind void;
}
procedure `java.lang.Object` `c`(`g8.n$e` v0 @kind this, `l8.a` v1 @kind object) @signature `Lg8/n$e;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L327b50.  call temp:= `f`(v0, v1) @signature `Lg8/n$e;.f:(Ll8/a;)Ljava/lang/Character;` @kind virtual;
  #L327b56.  v1:= temp @kind object;
  #L327b58.  return v1 @kind object;
}
procedure `void` `e`(`g8.n$e` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lg8/n$e;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L327bac.  v2:= (`java.lang.Character`) v2 @kind object;
  #L327bb0.  call `g`(v0, v1, v2) @signature `Lg8/n$e;.g:(Ll8/c;Ljava/lang/Character;)V` @kind virtual;
  #L327bb6.  return @kind void;
}
procedure `java.lang.Character` `f`(`g8.n$e` v3 @kind this, `l8.a` v4 @kind object) @signature `Lg8/n$e;.f:(Ll8/a;)Ljava/lang/Character;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L327acc.  call temp:= `f0`(v4) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L327ad2.  v0:= temp @kind object;
  #L327ad4.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L327ad8.  if v0 != v1 then goto L327ae6;
  #L327adc.  call `b0`(v4) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L327ae2.  v4:= 0I;
  #L327ae4.  return v4 @kind object;
  #L327ae6.  call temp:= `d0`(v4) @signature `Ll8/a;.d0:()Ljava/lang/String;` @kind virtual;
  #L327aec.  v4:= temp @kind object;
  #L327aee.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L327af4.  v0:= temp;
  #L327af6.  v1:= 1I;
  #L327af8.  if v0 != v1 then goto L327b10;
  #L327afc.  v0:= 0I;
  #L327afe.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L327b04.  v4:= temp;
  #L327b06.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L327b0c.  v4:= temp @kind object;
  #L327b0e.  return v4 @kind object;
  #L327b10.  v0:= new `d8.s`;
  #L327b14.  v1:= new `java.lang.StringBuilder`;
  #L327b18.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L327b1e.  v2:= "Expecting character, got: " @kind object;
  #L327b22.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327b28.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327b2e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L327b34.  v4:= temp @kind object;
  #L327b36.  call `<init>`(v0, v4) @signature `Ld8/s;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L327b3c.  throw v0;
}
procedure `void` `g`(`g8.n$e` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Character` v2 @kind object) @signature `Lg8/n$e;.g:(Ll8/c;Ljava/lang/Character;)V` @AccessFlag PUBLIC {
    temp;

  #L327b84.  if v2 != 0 then goto L327b8c;
  #L327b88.  v2:= 0I;
  #L327b8a.  goto L327b94;
  #L327b8c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L327b92.  v2:= temp @kind object;
  #L327b94.  call temp:= `h0`(v1, v2) @signature `Ll8/c;.h0:(Ljava/lang/String;)Ll8/c;` @kind virtual;
  #L327b9a.  return @kind void;
}
