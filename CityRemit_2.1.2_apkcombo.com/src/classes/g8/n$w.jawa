record `g8.n$w` @kind class @AccessFlag  extends `d8.x` @kind interface {
  `java.lang.Class` `g8.n$w.o` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Class` `g8.n$w.p` @AccessFlag FINAL_SYNTHETIC;
  `d8.w` `g8.n$w.q` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`g8.n$w` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `d8.w` v3 @kind object) @signature `Lg8/n$w;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ld8/w;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L328d9c.  v0.`g8.n$w.o` @type ^`java.lang.Class` := v1 @kind object;
  #L328da0.  v0.`g8.n$w.p` @type ^`java.lang.Class` := v2 @kind object;
  #L328da4.  v0.`g8.n$w.q` @type ^`d8.w` := v3 @kind object;
  #L328da8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L328dae.  return @kind void;
}
procedure `d8.w` `create`(`g8.n$w` v0 @kind this, `d8.e` v1 @kind object, `k8.a` v2 @kind object) @signature `Lg8/n$w;.create:(Ld8/e;Lk8/a;)Ld8/w;` @AccessFlag PUBLIC {
    temp;

  #L328cec.  call temp:= `c`(v2) @signature `Lk8/a;.c:()Ljava/lang/Class;` @kind virtual;
  #L328cf2.  v1:= temp @kind object;
  #L328cf4.  v2:= v0.`g8.n$w.o` @type ^`java.lang.Class` @kind object;
  #L328cf8.  if v1 == v2 then goto L328d0a;
  #L328cfc.  v2:= v0.`g8.n$w.p` @type ^`java.lang.Class` @kind object;
  #L328d00.  if v1 != v2 then goto L328d06;
  #L328d04.  goto L328d0a;
  #L328d06.  v1:= 0I;
  #L328d08.  goto L328d0e;
  #L328d0a.  v1:= v0.`g8.n$w.q` @type ^`d8.w` @kind object;
  #L328d0e.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`g8.n$w` v2 @kind this) @signature `Lg8/n$w;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L328d20.  v0:= new `java.lang.StringBuilder`;
  #L328d24.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L328d2a.  v1:= "Factory[type=" @kind object;
  #L328d2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328d34.  v1:= v2.`g8.n$w.p` @type ^`java.lang.Class` @kind object;
  #L328d38.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L328d3e.  v1:= temp @kind object;
  #L328d40.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328d46.  v1:= "+" @kind object;
  #L328d4a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328d50.  v1:= v2.`g8.n$w.o` @type ^`java.lang.Class` @kind object;
  #L328d54.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L328d5a.  v1:= temp @kind object;
  #L328d5c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328d62.  v1:= ",adapter=" @kind object;
  #L328d66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328d6c.  v1:= v2.`g8.n$w.q` @type ^`d8.w` @kind object;
  #L328d70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328d76.  v1:= "]" @kind object;
  #L328d7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328d80.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L328d86.  v0:= temp @kind object;
  #L328d88.  return v0 @kind object;
}
