record `g8.n$m` @kind class @AccessFlag  extends `d8.w` @kind class {
}
procedure `void` `<init>`(`g8.n$m` v0 @kind this) @signature `Lg8/n$m;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32818c.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L328192.  return @kind void;
}
procedure `java.lang.Object` `c`(`g8.n$m` v0 @kind this, `l8.a` v1 @kind object) @signature `Lg8/n$m;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L328100.  call temp:= `f`(v0, v1) @signature `Lg8/n$m;.f:(Ll8/a;)Ljava/net/URI;` @kind virtual;
  #L328106.  v1:= temp @kind object;
  #L328108.  return v1 @kind object;
}
procedure `void` `e`(`g8.n$m` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lg8/n$m;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3281a4.  v2:= (`java.net.URI`) v2 @kind object;
  #L3281a8.  call `g`(v0, v1, v2) @signature `Lg8/n$m;.g:(Ll8/c;Ljava/net/URI;)V` @kind virtual;
  #L3281ae.  return @kind void;
}
procedure `java.net.URI` `f`(`g8.n$m` v3 @kind this, `l8.a` v4 @kind object) @signature `Lg8/n$m;.f:(Ll8/a;)Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32811c.  call temp:= `f0`(v4) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L328122.  v0:= temp @kind object;
  #L328124.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L328128.  v2:= 0I;
  #L32812a.  if v0 != v1 then goto L328136;
  #L32812e.  call `b0`(v4) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L328134.  return v2 @kind object;
  #L328136.  call temp:= `d0`(v4) @signature `Ll8/a;.d0:()Ljava/lang/String;` @kind virtual;
  #L32813c.  v4:= temp @kind object;
  #L32813e.  v0:= "null" @kind object;
  #L328142.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L328148.  v0:= temp;
  #L32814a.  if v0 == 0 then goto L328150;
  #L32814e.  goto L32815a;
  #L328150.  v2:= new `java.net.URI`;
  #L328154.  call `<init>`(v2, v4) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32815a.  return v2 @kind object;
  #L32815c.  v4:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #L32815e.  v0:= new `d8.l`;
  #L328162.  call `<init>`(v0, v4) @signature `Ld8/l;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L328168.  throw v0;
  catch `java.net.URISyntaxException` @[L328136..L32815a] goto L32815c;
}
procedure `void` `g`(`g8.n$m` v0 @kind this, `l8.c` v1 @kind object, `java.net.URI` v2 @kind object) @signature `Lg8/n$m;.g:(Ll8/c;Ljava/net/URI;)V` @AccessFlag PUBLIC {
    temp;

  #L3281c0.  if v2 != 0 then goto L3281c8;
  #L3281c4.  v2:= 0I;
  #L3281c6.  goto L3281d0;
  #L3281c8.  call temp:= `toASCIIString`(v2) @signature `Ljava/net/URI;.toASCIIString:()Ljava/lang/String;` @kind virtual;
  #L3281ce.  v2:= temp @kind object;
  #L3281d0.  call temp:= `h0`(v1, v2) @signature `Ll8/c;.h0:(Ljava/lang/String;)Ll8/c;` @kind virtual;
  #L3281d6.  return @kind void;
}
