record `g8.n$x` @kind class @AccessFlag  extends `d8.x` @kind interface {
  `java.lang.Class` `g8.n$x.o` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Class` `g8.n$x.p` @AccessFlag FINAL_SYNTHETIC;
  `d8.w` `g8.n$x.q` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`g8.n$x` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `d8.w` v3 @kind object) @signature `Lg8/n$x;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ld8/w;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L328e70.  v0.`g8.n$x.o` @type ^`java.lang.Class` := v1 @kind object;
  #L328e74.  v0.`g8.n$x.p` @type ^`java.lang.Class` := v2 @kind object;
  #L328e78.  v0.`g8.n$x.q` @type ^`d8.w` := v3 @kind object;
  #L328e7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L328e82.  return @kind void;
}
procedure `d8.w` `create`(`g8.n$x` v0 @kind this, `d8.e` v1 @kind object, `k8.a` v2 @kind object) @signature `Lg8/n$x;.create:(Ld8/e;Lk8/a;)Ld8/w;` @AccessFlag PUBLIC {
    temp;

  #L328dc0.  call temp:= `c`(v2) @signature `Lk8/a;.c:()Ljava/lang/Class;` @kind virtual;
  #L328dc6.  v1:= temp @kind object;
  #L328dc8.  v2:= v0.`g8.n$x.o` @type ^`java.lang.Class` @kind object;
  #L328dcc.  if v1 == v2 then goto L328dde;
  #L328dd0.  v2:= v0.`g8.n$x.p` @type ^`java.lang.Class` @kind object;
  #L328dd4.  if v1 != v2 then goto L328dda;
  #L328dd8.  goto L328dde;
  #L328dda.  v1:= 0I;
  #L328ddc.  goto L328de2;
  #L328dde.  v1:= v0.`g8.n$x.q` @type ^`d8.w` @kind object;
  #L328de2.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`g8.n$x` v2 @kind this) @signature `Lg8/n$x;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L328df4.  v0:= new `java.lang.StringBuilder`;
  #L328df8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L328dfe.  v1:= "Factory[type=" @kind object;
  #L328e02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328e08.  v1:= v2.`g8.n$x.o` @type ^`java.lang.Class` @kind object;
  #L328e0c.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L328e12.  v1:= temp @kind object;
  #L328e14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328e1a.  v1:= "+" @kind object;
  #L328e1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328e24.  v1:= v2.`g8.n$x.p` @type ^`java.lang.Class` @kind object;
  #L328e28.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L328e2e.  v1:= temp @kind object;
  #L328e30.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328e36.  v1:= ",adapter=" @kind object;
  #L328e3a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328e40.  v1:= v2.`g8.n$x.q` @type ^`d8.w` @kind object;
  #L328e44.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328e4a.  v1:= "]" @kind object;
  #L328e4e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328e54.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L328e5a.  v0:= temp @kind object;
  #L328e5c.  return v0 @kind object;
}
