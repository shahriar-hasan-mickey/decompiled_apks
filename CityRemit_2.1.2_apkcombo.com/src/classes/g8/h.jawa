record `g8.h` @kind class @AccessFlag PUBLIC_FINAL extends `d8.x` @kind interface {
  `f8.c` `g8.h.o` @AccessFlag PRIVATE_FINAL;
  `boolean` `g8.h.p` @AccessFlag FINAL;
}
procedure `void` `<init>`(`g8.h` v0 @kind this, `f8.c` v1 @kind object, `boolean` v2 ) @signature `Lg8/h;.<init>:(Lf8/c;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3269b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3269ba.  v0.`g8.h.o` @type ^`f8.c` := v1 @kind object;
  #L3269be.  v0.`g8.h.p` @type ^`boolean` := v2 @kind boolean;
  #L3269c2.  return @kind void;
}
procedure `d8.w` `a`(`g8.h` v1 @kind this, `d8.e` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Lg8/h;.a:(Ld8/e;Ljava/lang/reflect/Type;)Ld8/w;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L326978.  v0:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L32697c.  if v3 == v0 then goto L32699c;
  #L326980.  v0:= constclass @type ^`java.lang.Boolean` @kind object;
  #L326984.  if v3 != v0 then goto L32698a;
  #L326988.  goto L32699c;
  #L32698a.  call temp:= `b`(v3) @signature `Lk8/a;.b:(Ljava/lang/reflect/Type;)Lk8/a;` @kind static;
  #L326990.  v3:= temp @kind object;
  #L326992.  call temp:= `k`(v2, v3) @signature `Ld8/e;.k:(Lk8/a;)Ld8/w;` @kind virtual;
  #L326998.  v2:= temp @kind object;
  #L32699a.  goto L3269a0;
  #L32699c.  v2:= `@@g8.n.f` @type ^`d8.w` @kind object;
  #L3269a0.  return v2 @kind object;
}
procedure `d8.w` `create`(`g8.h` v11 @kind this, `d8.e` v12 @kind object, `k8.a` v13 @kind object) @signature `Lg8/h;.create:(Ld8/e;Lk8/a;)Ld8/w;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3268e8.  call temp:= `e`(v13) @signature `Lk8/a;.e:()Ljava/lang/reflect/Type;` @kind virtual;
  #L3268ee.  v0:= temp @kind object;
  #L3268f0.  call temp:= `c`(v13) @signature `Lk8/a;.c:()Ljava/lang/Class;` @kind virtual;
  #L3268f6.  v1:= temp @kind object;
  #L3268f8.  v2:= constclass @type ^`java.util.Map` @kind object;
  #L3268fc.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L326902.  v1:= temp;
  #L326904.  if v1 != 0 then goto L32690c;
  #L326908.  v12:= 0I;
  #L32690a.  return v12 @kind object;
  #L32690c.  call temp:= `k`(v0) @signature `Lf8/b;.k:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L326912.  v1:= temp @kind object;
  #L326914.  call temp:= `j`(v0, v1) @signature `Lf8/b;.j:(Ljava/lang/reflect/Type;Ljava/lang/Class;)[Ljava/lang/reflect/Type;` @kind static;
  #L32691a.  v0:= temp @kind object;
  #L32691c.  v1:= 0I;
  #L32691e.  v2:= v0[v1] @kind object;
  #L326922.  call temp:= `a`(v11, v12, v2) @signature `Lg8/h;.a:(Ld8/e;Ljava/lang/reflect/Type;)Ld8/w;` @kind direct;
  #L326928.  v7:= temp @kind object;
  #L32692a.  v2:= 1I;
  #L32692c.  v3:= v0[v2] @kind object;
  #L326930.  call temp:= `b`(v3) @signature `Lk8/a;.b:(Ljava/lang/reflect/Type;)Lk8/a;` @kind static;
  #L326936.  v3:= temp @kind object;
  #L326938.  call temp:= `k`(v12, v3) @signature `Ld8/e;.k:(Lk8/a;)Ld8/w;` @kind virtual;
  #L32693e.  v9:= temp @kind object;
  #L326940.  v3:= v11.`g8.h.o` @type ^`f8.c` @kind object;
  #L326944.  call temp:= `a`(v3, v13) @signature `Lf8/c;.a:(Lk8/a;)Lf8/i;` @kind virtual;
  #L32694a.  v10:= temp @kind object;
  #L32694c.  v13:= new `g8.h$a`;
  #L326950.  v6:= v0[v1] @kind object;
  #L326954.  v8:= v0[v2] @kind object;
  #L326958.  v3:= v13 @kind object;
  #L32695a.  v4:= v11 @kind object;
  #L32695c.  v5:= v12 @kind object;
  #L32695e.  call `<init>`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lg8/h$a;.<init>:(Lg8/h;Ld8/e;Ljava/lang/reflect/Type;Ld8/w;Ljava/lang/reflect/Type;Ld8/w;Lf8/i;)V` @kind direct;
  #L326964.  return v13 @kind object;
}
