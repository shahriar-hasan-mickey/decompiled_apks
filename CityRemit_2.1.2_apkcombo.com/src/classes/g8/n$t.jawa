record `g8.n$t` @kind class @AccessFlag  extends `d8.x` @kind interface {
}
procedure `void` `<init>`(`g8.n$t` v0 @kind this) @signature `Lg8/n$t;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L328a80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L328a86.  return @kind void;
}
procedure `d8.w` `create`(`g8.n$t` v1 @kind this, `d8.e` v2 @kind object, `k8.a` v3 @kind object) @signature `Lg8/n$t;.create:(Ld8/e;Lk8/a;)Ld8/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L328a2c.  v2:= constclass @type ^`java.lang.Enum` @kind object;
  #L328a30.  call temp:= `c`(v3) @signature `Lk8/a;.c:()Ljava/lang/Class;` @kind virtual;
  #L328a36.  v3:= temp @kind object;
  #L328a38.  call temp:= `isAssignableFrom`(v2, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L328a3e.  v0:= temp;
  #L328a40.  if v0 == 0 then goto L328a6a;
  #L328a44.  if v3 != v2 then goto L328a4a;
  #L328a48.  goto L328a6a;
  #L328a4a.  call temp:= `isEnum`(v3) @signature `Ljava/lang/Class;.isEnum:()Z` @kind virtual;
  #L328a50.  v2:= temp;
  #L328a52.  if v2 != 0 then goto L328a5e;
  #L328a56.  call temp:= `getSuperclass`(v3) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L328a5c.  v3:= temp @kind object;
  #L328a5e.  v2:= new `g8.n$h0`;
  #L328a62.  call `<init>`(v2, v3) @signature `Lg8/n$h0;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L328a68.  return v2 @kind object;
  #L328a6a.  v2:= 0I;
  #L328a6c.  return v2 @kind object;
}
