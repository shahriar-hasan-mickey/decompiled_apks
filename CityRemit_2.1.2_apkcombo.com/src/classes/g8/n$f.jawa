record `g8.n$f` @kind class @AccessFlag  extends `d8.w` @kind class {
}
procedure `void` `<init>`(`g8.n$f` v0 @kind this) @signature `Lg8/n$f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L327c34.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L327c3a.  return @kind void;
}
procedure `java.lang.Object` `c`(`g8.n$f` v0 @kind this, `l8.a` v1 @kind object) @signature `Lg8/n$f;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L327bc8.  call temp:= `f`(v0, v1) @signature `Lg8/n$f;.f:(Ll8/a;)Ljava/lang/String;` @kind virtual;
  #L327bce.  v1:= temp @kind object;
  #L327bd0.  return v1 @kind object;
}
procedure `void` `e`(`g8.n$f` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lg8/n$f;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L327c4c.  v2:= (`java.lang.String`) v2 @kind object;
  #L327c50.  call `g`(v0, v1, v2) @signature `Lg8/n$f;.g:(Ll8/c;Ljava/lang/String;)V` @kind virtual;
  #L327c56.  return @kind void;
}
procedure `java.lang.String` `f`(`g8.n$f` v2 @kind this, `l8.a` v3 @kind object) @signature `Lg8/n$f;.f:(Ll8/a;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L327be4.  call temp:= `f0`(v3) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L327bea.  v0:= temp @kind object;
  #L327bec.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L327bf0.  if v0 != v1 then goto L327bfe;
  #L327bf4.  call `b0`(v3) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L327bfa.  v3:= 0I;
  #L327bfc.  return v3 @kind object;
  #L327bfe.  v1:= `@@l8.b.v` @type ^`l8.b` @kind object;
  #L327c02.  if v0 != v1 then goto L327c18;
  #L327c06.  call temp:= `K`(v3) @signature `Ll8/a;.K:()Z` @kind virtual;
  #L327c0c.  v3:= temp;
  #L327c0e.  call temp:= `toString`(v3) @signature `Ljava/lang/Boolean;.toString:(Z)Ljava/lang/String;` @kind static;
  #L327c14.  v3:= temp @kind object;
  #L327c16.  return v3 @kind object;
  #L327c18.  call temp:= `d0`(v3) @signature `Ll8/a;.d0:()Ljava/lang/String;` @kind virtual;
  #L327c1e.  v3:= temp @kind object;
  #L327c20.  return v3 @kind object;
}
procedure `void` `g`(`g8.n$f` v0 @kind this, `l8.c` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lg8/n$f;.g:(Ll8/c;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L327c68.  call temp:= `h0`(v1, v2) @signature `Ll8/c;.h0:(Ljava/lang/String;)Ll8/c;` @kind virtual;
  #L327c6e.  return @kind void;
}
