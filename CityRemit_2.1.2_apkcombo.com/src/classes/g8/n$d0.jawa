record `g8.n$d0` @kind class @AccessFlag  extends `d8.w` @kind class {
}
procedure `void` `<init>`(`g8.n$d0` v0 @kind this) @signature `Lg8/n$d0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32945c.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L329462.  return @kind void;
}
procedure `java.lang.Object` `c`(`g8.n$d0` v0 @kind this, `l8.a` v1 @kind object) @signature `Lg8/n$d0;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L329440.  call temp:= `f`(v0, v1) @signature `Lg8/n$d0;.f:(Ll8/a;)Ljava/lang/Number;` @kind virtual;
  #L329446.  v1:= temp @kind object;
  #L329448.  return v1 @kind object;
}
procedure `void` `e`(`g8.n$d0` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lg8/n$d0;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L32948c.  v2:= (`java.lang.Number`) v2 @kind object;
  #L329490.  call `g`(v0, v1, v2) @signature `Lg8/n$d0;.g:(Ll8/c;Ljava/lang/Number;)V` @kind virtual;
  #L329496.  return @kind void;
}
procedure `java.lang.Number` `f`(`g8.n$d0` v2 @kind this, `l8.a` v3 @kind object) @signature `Lg8/n$d0;.f:(Ll8/a;)Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3293e4.  call temp:= `f0`(v3) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L3293ea.  v0:= temp @kind object;
  #L3293ec.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L3293f0.  if v0 != v1 then goto L3293fe;
  #L3293f4.  call `b0`(v3) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L3293fa.  v3:= 0I;
  #L3293fc.  return v3 @kind object;
  #L3293fe.  call temp:= `N`(v3) @signature `Ll8/a;.N:()I` @kind virtual;
  #L329404.  v3:= temp;
  #L329406.  v3:= (`short`) v3 @kind i2s;
  #L329408.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L32940e.  v3:= temp @kind object;
  #L329410.  return v3 @kind object;
  #L329412.  v3:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L329414.  v0:= new `d8.s`;
  #L329418.  call `<init>`(v0, v3) @signature `Ld8/s;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L32941e.  throw v0;
  catch `java.lang.NumberFormatException` @[L3293fe..L329410] goto L329412;
}
procedure `void` `g`(`g8.n$d0` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Number` v2 @kind object) @signature `Lg8/n$d0;.g:(Ll8/c;Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;

  #L329474.  call temp:= `g0`(v1, v2) @signature `Ll8/c;.g0:(Ljava/lang/Number;)Ll8/c;` @kind virtual;
  #L32947a.  return @kind void;
}
