record `g8.g$a` @kind class @AccessFlag  extends `java.io.Writer` @kind class {
}
procedure `void` `<init>`(`g8.g$a` v0 @kind this) @signature `Lg8/g$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L325fbc.  call `<init>`(v0) @signature `Ljava/io/Writer;.<init>:()V` @kind direct;
  #L325fc2.  return @kind void;
}
procedure `void` `close`(`g8.g$a` v1 @kind this) @signature `Lg8/g$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L325fd4.  v0:= new `java.lang.AssertionError`;
  #L325fd8.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L325fde.  throw v0;
}
procedure `void` `flush`(`g8.g$a` v1 @kind this) @signature `Lg8/g$a;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L325ff0.  v0:= new `java.lang.AssertionError`;
  #L325ff4.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L325ffa.  throw v0;
}
procedure `void` `write`(`g8.g$a` v0 @kind this, `char`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lg8/g$a;.write:([CII)V` @AccessFlag PUBLIC {
    temp;

  #L32600c.  v1:= new `java.lang.AssertionError`;
  #L326010.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L326016.  throw v1;
}
