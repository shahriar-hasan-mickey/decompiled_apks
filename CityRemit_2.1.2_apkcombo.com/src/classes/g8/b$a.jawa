record `g8.b$a` @kind class @AccessFlag FINAL extends `d8.w` @kind class {
  `d8.w` `g8.b$a.a` @AccessFlag PRIVATE_FINAL;
  `f8.i` `g8.b$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`g8.b$a` v1 @kind this, `d8.e` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `d8.w` v4 @kind object, `f8.i` v5 @kind object) @signature `Lg8/b$a;.<init>:(Ld8/e;Ljava/lang/reflect/Type;Ld8/w;Lf8/i;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L324bc0.  call `<init>`(v1) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L324bc6.  v0:= new `g8.m`;
  #L324bca.  call `<init>`(v0, v2, v4, v3) @signature `Lg8/m;.<init>:(Ld8/e;Ld8/w;Ljava/lang/reflect/Type;)V` @kind direct;
  #L324bd0.  v1.`g8.b$a.a` @type ^`d8.w` := v0 @kind object;
  #L324bd4.  v1.`g8.b$a.b` @type ^`f8.i` := v5 @kind object;
  #L324bd8.  return @kind void;
}
procedure `java.lang.Object` `c`(`g8.b$a` v0 @kind this, `l8.a` v1 @kind object) @signature `Lg8/b$a;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L324b3c.  call temp:= `f`(v0, v1) @signature `Lg8/b$a;.f:(Ll8/a;)Ljava/util/Collection;` @kind virtual;
  #L324b42.  v1:= temp @kind object;
  #L324b44.  return v1 @kind object;
}
procedure `void` `e`(`g8.b$a` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lg8/b$a;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L324bec.  v2:= (`java.util.Collection`) v2 @kind object;
  #L324bf0.  call `g`(v0, v1, v2) @signature `Lg8/b$a;.g:(Ll8/c;Ljava/util/Collection;)V` @kind virtual;
  #L324bf6.  return @kind void;
}
procedure `java.util.Collection` `f`(`g8.b$a` v2 @kind this, `l8.a` v3 @kind object) @signature `Lg8/b$a;.f:(Ll8/a;)Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L324b58.  call temp:= `f0`(v3) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L324b5e.  v0:= temp @kind object;
  #L324b60.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L324b64.  if v0 != v1 then goto L324b72;
  #L324b68.  call `b0`(v3) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L324b6e.  v3:= 0I;
  #L324b70.  return v3 @kind object;
  #L324b72.  v0:= v2.`g8.b$a.b` @type ^`f8.i` @kind object;
  #L324b76.  call temp:= `a`(v0) @signature `Lf8/i;.a:()Ljava/lang/Object;` @kind interface;
  #L324b7c.  v0:= temp @kind object;
  #L324b7e.  v0:= (`java.util.Collection`) v0 @kind object;
  #L324b82.  call `a`(v3) @signature `Ll8/a;.a:()V` @kind virtual;
  #L324b88.  call temp:= `x`(v3) @signature `Ll8/a;.x:()Z` @kind virtual;
  #L324b8e.  v1:= temp;
  #L324b90.  if v1 == 0 then goto L324ba8;
  #L324b94.  v1:= v2.`g8.b$a.a` @type ^`d8.w` @kind object;
  #L324b98.  call temp:= `c`(v1, v3) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L324b9e.  v1:= temp @kind object;
  #L324ba0.  call temp:= `add`(v0, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L324ba6.  goto L324b88;
  #L324ba8.  call `k`(v3) @signature `Ll8/a;.k:()V` @kind virtual;
  #L324bae.  return v0 @kind object;
}
procedure `void` `g`(`g8.b$a` v2 @kind this, `l8.c` v3 @kind object, `java.util.Collection` v4 @kind object) @signature `Lg8/b$a;.g:(Ll8/c;Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L324c08.  if v4 != 0 then goto L324c14;
  #L324c0c.  call temp:= `J`(v3) @signature `Ll8/c;.J:()Ll8/c;` @kind virtual;
  #L324c12.  return @kind void;
  #L324c14.  call temp:= `e`(v3) @signature `Ll8/c;.e:()Ll8/c;` @kind virtual;
  #L324c1a.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L324c20.  v4:= temp @kind object;
  #L324c22.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L324c28.  v0:= temp;
  #L324c2a.  if v0 == 0 then goto L324c42;
  #L324c2e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L324c34.  v0:= temp @kind object;
  #L324c36.  v1:= v2.`g8.b$a.a` @type ^`d8.w` @kind object;
  #L324c3a.  call `e`(v1, v3, v0) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @kind virtual;
  #L324c40.  goto L324c22;
  #L324c42.  call temp:= `k`(v3) @signature `Ll8/c;.k:()Ll8/c;` @kind virtual;
  #L324c48.  return @kind void;
}
