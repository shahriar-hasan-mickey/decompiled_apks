record `g8.m` @kind class @AccessFlag FINAL extends `d8.w` @kind class {
  `d8.e` `g8.m.a` @AccessFlag PRIVATE_FINAL;
  `d8.w` `g8.m.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Type` `g8.m.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`g8.m` v0 @kind this, `d8.e` v1 @kind object, `d8.w` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Lg8/m;.<init>:(Ld8/e;Ld8/w;Ljava/lang/reflect/Type;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L327704.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L32770a.  v0.`g8.m.a` @type ^`d8.e` := v1 @kind object;
  #L32770e.  v0.`g8.m.b` @type ^`d8.w` := v2 @kind object;
  #L327712.  v0.`g8.m.c` @type ^`java.lang.reflect.Type` := v3 @kind object;
  #L327716.  return @kind void;
}
procedure `java.lang.reflect.Type` `f`(`g8.m` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lg8/m;.f:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/reflect/Type;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3276cc.  if v3 == 0 then goto L3276f0;
  #L3276d0.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L3276d4.  if v2 == v0 then goto L3276e8;
  #L3276d8.  v0:= instanceof @variable v2 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L3276dc.  if v0 != 0 then goto L3276e8;
  #L3276e0.  v0:= instanceof @variable v2 @type ^`java.lang.Class` @kind boolean;
  #L3276e4.  if v0 == 0 then goto L3276f0;
  #L3276e8.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3276ee.  v2:= temp @kind object;
  #L3276f0.  return v2 @kind object;
}
procedure `java.lang.Object` `c`(`g8.m` v1 @kind this, `l8.a` v2 @kind object) @signature `Lg8/m;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3276ac.  v0:= v1.`g8.m.b` @type ^`d8.w` @kind object;
  #L3276b0.  call temp:= `c`(v0, v2) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L3276b6.  v2:= temp @kind object;
  #L3276b8.  return v2 @kind object;
}
procedure `void` `e`(`g8.m` v3 @kind this, `l8.c` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lg8/m;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L327728.  v0:= v3.`g8.m.b` @type ^`d8.w` @kind object;
  #L32772c.  v1:= v3.`g8.m.c` @type ^`java.lang.reflect.Type` @kind object;
  #L327730.  call temp:= `f`(v3, v1, v5) @signature `Lg8/m;.f:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/reflect/Type;` @kind direct;
  #L327736.  v1:= temp @kind object;
  #L327738.  v2:= v3.`g8.m.c` @type ^`java.lang.reflect.Type` @kind object;
  #L32773c.  if v1 == v2 then goto L32776c;
  #L327740.  v0:= v3.`g8.m.a` @type ^`d8.e` @kind object;
  #L327744.  call temp:= `b`(v1) @signature `Lk8/a;.b:(Ljava/lang/reflect/Type;)Lk8/a;` @kind static;
  #L32774a.  v1:= temp @kind object;
  #L32774c.  call temp:= `k`(v0, v1) @signature `Ld8/e;.k:(Lk8/a;)Ld8/w;` @kind virtual;
  #L327752.  v0:= temp @kind object;
  #L327754.  v1:= instanceof @variable v0 @type ^`g8.k$b` @kind boolean;
  #L327758.  if v1 != 0 then goto L32775e;
  #L32775c.  goto L32776c;
  #L32775e.  v1:= v3.`g8.m.b` @type ^`d8.w` @kind object;
  #L327762.  v2:= instanceof @variable v1 @type ^`g8.k$b` @kind boolean;
  #L327766.  if v2 != 0 then goto L32776c;
  #L32776a.  v0:= v1 @kind object;
  #L32776c.  call `e`(v0, v4, v5) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @kind virtual;
  #L327772.  return @kind void;
}
