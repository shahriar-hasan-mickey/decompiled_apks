record `g8.k` @kind class @AccessFlag PUBLIC_FINAL extends `d8.x` @kind interface {
  `f8.c` `g8.k.o` @AccessFlag PRIVATE_FINAL;
  `d8.d` `g8.k.p` @AccessFlag PRIVATE_FINAL;
  `f8.d` `g8.k.q` @AccessFlag PRIVATE_FINAL;
  `g8.e` `g8.k.r` @AccessFlag PRIVATE_FINAL;
  `i8.b` `g8.k.s` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`g8.k` v1 @kind this, `f8.c` v2 @kind object, `d8.d` v3 @kind object, `f8.d` v4 @kind object, `g8.e` v5 @kind object) @signature `Lg8/k;.<init>:(Lf8/c;Ld8/d;Lf8/d;Lg8/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L327524.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32752a.  call temp:= `a`() @signature `Li8/b;.a:()Li8/b;` @kind static;
  #L327530.  v0:= temp @kind object;
  #L327532.  v1.`g8.k.s` @type ^`i8.b` := v0 @kind object;
  #L327536.  v1.`g8.k.o` @type ^`f8.c` := v2 @kind object;
  #L32753a.  v1.`g8.k.p` @type ^`d8.d` := v3 @kind object;
  #L32753e.  v1.`g8.k.q` @type ^`f8.d` := v4 @kind object;
  #L327542.  v1.`g8.k.r` @type ^`g8.e` := v5 @kind object;
  #L327546.  return @kind void;
}
procedure `g8.k$c` `a`(`g8.k` v13 @kind this, `d8.e` v14 @kind object, `java.lang.reflect.Field` v15 @kind object, `java.lang.String` v16 @kind object, `k8.a` v17 @kind object, `boolean` v18 , `boolean` v19 ) @signature `Lg8/k;.a:(Ld8/e;Ljava/lang/reflect/Field;Ljava/lang/String;Lk8/a;ZZ)Lg8/k$c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L327250.  v11:= v13 @kind object;
  #L327252.  v8:= v14 @kind object;
  #L327254.  v9:= v17 @kind object;
  #L327258.  call temp:= `c`(v17) @signature `Lk8/a;.c:()Ljava/lang/Class;` @kind virtual;
  #L32725e.  v0:= temp @kind object;
  #L327260.  call temp:= `a`(v0) @signature `Lf8/k;.a:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L327266.  v10:= temp;
  #L327268.  v0:= constclass @type ^`e8.b` @kind object;
  #L32726c.  v5:= v15 @kind object;
  #L32726e.  call temp:= `getAnnotation`(v15, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L327274.  v0:= temp @kind object;
  #L327276.  v0:= (`e8.b`) v0 @kind object;
  #L32727a.  if v0 == 0 then goto L327290;
  #L32727e.  v1:= v11.`g8.k.r` @type ^`g8.e` @kind object;
  #L327282.  v2:= v11.`g8.k.o` @type ^`f8.c` @kind object;
  #L327286.  call temp:= `a`(v1, v2, v14, v9, v0) @signature `Lg8/e;.a:(Lf8/c;Ld8/e;Lk8/a;Le8/b;)Ld8/w;` @kind virtual;
  #L32728c.  v0:= temp @kind object;
  #L32728e.  goto L327292;
  #L327290.  v0:= 0I;
  #L327292.  if v0 == 0 then goto L32729c;
  #L327296.  v1:= 1I;
  #L327298.  v6:= 1I;
  #L32729a.  goto L3272a0;
  #L32729c.  v1:= 0I;
  #L32729e.  v6:= 0I;
  #L3272a0.  if v0 != 0 then goto L3272ac;
  #L3272a4.  call temp:= `k`(v14, v9) @signature `Ld8/e;.k:(Lk8/a;)Ld8/w;` @kind virtual;
  #L3272aa.  v0:= temp @kind object;
  #L3272ac.  v7:= v0 @kind object;
  #L3272ae.  v12:= new `g8.k$a`;
  #L3272b2.  v0:= v12 @kind object;
  #L3272b4.  v1:= v13 @kind object;
  #L3272b6.  v2:= v16 @kind object;
  #L3272ba.  v3:= v18;
  #L3272be.  v4:= v19;
  #L3272c2.  v5:= v15 @kind object;
  #L3272c4.  v8:= v14 @kind object;
  #L3272c6.  v9:= v17 @kind object;
  #L3272ca.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lg8/k$a;.<init>:(Lg8/k;Ljava/lang/String;ZZLjava/lang/reflect/Field;ZLd8/w;Ld8/e;Lk8/a;Z)V` @kind direct;
  #L3272d0.  return v12 @kind object;
}
procedure `boolean` `c`(`java.lang.reflect.Field` v1 @kind object, `boolean` v2 , `f8.d` v3 @kind object) @signature `Lg8/k;.c:(Ljava/lang/reflect/Field;ZLf8/d;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L3271cc.  call temp:= `getType`(v1) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L3271d2.  v0:= temp @kind object;
  #L3271d4.  call temp:= `b`(v3, v0, v2) @signature `Lf8/d;.b:(Ljava/lang/Class;Z)Z` @kind virtual;
  #L3271da.  v0:= temp;
  #L3271dc.  if v0 != 0 then goto L3271f0;
  #L3271e0.  call temp:= `g`(v3, v1, v2) @signature `Lf8/d;.g:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L3271e6.  v1:= temp;
  #L3271e8.  if v1 != 0 then goto L3271f0;
  #L3271ec.  v1:= 1I;
  #L3271ee.  goto L3271f2;
  #L3271f0.  v1:= 0I;
  #L3271f2.  return v1;
}
procedure `java.util.Map` `d`(`g8.k` v23 @kind this, `d8.e` v24 @kind object, `k8.a` v25 @kind object, `java.lang.Class` v26 @kind object) @signature `Lg8/k;.d:(Ld8/e;Lk8/a;Ljava/lang/Class;)Ljava/util/Map;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L327370.  v7:= v23 @kind object;
  #L327374.  v8:= new `java.util.LinkedHashMap`;
  #L327378.  call `<init>`(v8) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L32737e.  call temp:= `isInterface`(v26) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L327384.  v0:= temp;
  #L327386.  if v0 == 0 then goto L32738c;
  #L32738a.  return v8 @kind object;
  #L32738c.  call temp:= `e`(v25) @signature `Lk8/a;.e:()Ljava/lang/reflect/Type;` @kind virtual;
  #L327392.  v9:= temp @kind object;
  #L327394.  v10:= v25 @kind object;
  #L327398.  v11:= v26 @kind object;
  #L32739c.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L3273a0.  if v11 == v0 then goto L327512;
  #L3273a4.  call temp:= `getDeclaredFields`(v11) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L3273aa.  v12:= temp @kind object;
  #L3273ac.  v13:= length @variable v12;
  #L3273ae.  v14:= 0I;
  #L3273b0.  v15:= 0I;
  #L3273b2.  if v15 >= v13 then goto L3274e6;
  #L3273b6.  v6:= v12[v15] @kind object;
  #L3273ba.  v0:= 1I;
  #L3273bc.  call temp:= `b`(v7, v6, v0) @signature `Lg8/k;.b:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L3273c2.  v0:= temp;
  #L3273c4.  call temp:= `b`(v7, v6, v14) @signature `Lg8/k;.b:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L3273ca.  v16:= temp;
  #L3273cc.  if v0 != 0 then goto L3273d8;
  #L3273d0.  if v16 != 0 then goto L3273d8;
  #L3273d4.  goto L3274a6;
  #L3273d8.  v1:= v7.`g8.k.s` @type ^`i8.b` @kind object;
  #L3273dc.  call `b`(v1, v6) @signature `Li8/b;.b:(Ljava/lang/reflect/AccessibleObject;)V` @kind virtual;
  #L3273e2.  call temp:= `e`(v10) @signature `Lk8/a;.e:()Ljava/lang/reflect/Type;` @kind virtual;
  #L3273e8.  v1:= temp @kind object;
  #L3273ea.  call temp:= `getGenericType`(v6) @signature `Ljava/lang/reflect/Field;.getGenericType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L3273f0.  v2:= temp @kind object;
  #L3273f2.  call temp:= `p`(v1, v11, v2) @signature `Lf8/b;.p:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L3273f8.  v17:= temp @kind object;
  #L3273fa.  call temp:= `e`(v7, v6) @signature `Lg8/k;.e:(Ljava/lang/reflect/Field;)Ljava/util/List;` @kind direct;
  #L327400.  v5:= temp @kind object;
  #L327402.  v1:= 0I;
  #L327404.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32740a.  v4:= temp;
  #L32740c.  v3:= v1 @kind object;
  #L32740e.  v2:= 0I;
  #L327410.  if v2 >= v4 then goto L3274a0;
  #L327414.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32741a.  v1:= temp @kind object;
  #L32741c.  v1:= (`java.lang.String`) v1 @kind object;
  #L327420.  if v2 == 0 then goto L32742a;
  #L327424.  v18:= 0I;
  #L327428.  goto L32742e;
  #L32742a.  v18:= v0;
  #L32742e.  call temp:= `b`(v17) @signature `Lk8/a;.b:(Ljava/lang/reflect/Type;)Lk8/a;` @kind static;
  #L327434.  v19:= temp @kind object;
  #L327436.  v0:= v23 @kind object;
  #L32743a.  v25:= v1 @kind object;
  #L32743e.  v1:= v24 @kind object;
  #L327442.  v20:= v2;
  #L327446.  v2:= v6 @kind object;
  #L327448.  v14:= v3 @kind object;
  #L32744a.  v3:= v25 @kind object;
  #L32744e.  v21:= v4;
  #L327452.  v4:= v19 @kind object;
  #L327456.  v19:= v5 @kind object;
  #L32745a.  v5:= v18;
  #L32745e.  v22:= v6 @kind object;
  #L327462.  v6:= v16;
  #L327466.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lg8/k;.a:(Ld8/e;Ljava/lang/reflect/Field;Ljava/lang/String;Lk8/a;ZZ)Lg8/k$c;` @kind direct;
  #L32746c.  v0:= temp @kind object;
  #L32746e.  v1:= v25 @kind object;
  #L327472.  call temp:= `put`(v8, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L327478.  v0:= temp @kind object;
  #L32747a.  v0:= (`g8.k$c`) v0 @kind object;
  #L32747e.  if v14 != 0 then goto L327486;
  #L327482.  v3:= v0 @kind object;
  #L327484.  goto L327488;
  #L327486.  v3:= v14 @kind object;
  #L327488.  v2:= v20 + 1;
  #L32748c.  v0:= v18;
  #L327490.  v5:= v19 @kind object;
  #L327494.  v4:= v21;
  #L327498.  v6:= v22 @kind object;
  #L32749c.  v14:= 0I;
  #L32749e.  goto L327410;
  #L3274a0.  v14:= v3 @kind object;
  #L3274a2.  if v14 != 0 then goto L3274ae;
  #L3274a6.  v15:= v15 + 1;
  #L3274aa.  v14:= 0I;
  #L3274ac.  goto L3273b2;
  #L3274ae.  v0:= new `java.lang.IllegalArgumentException`;
  #L3274b2.  v1:= new `java.lang.StringBuilder`;
  #L3274b6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3274bc.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3274c2.  v2:= " declares multiple JSON fields named " @kind object;
  #L3274c6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3274cc.  v2:= v14.`g8.k$c.a` @type ^`java.lang.String` @kind object;
  #L3274d0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3274d6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3274dc.  v1:= temp @kind object;
  #L3274de.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3274e4.  throw v0;
  #L3274e6.  call temp:= `e`(v10) @signature `Lk8/a;.e:()Ljava/lang/reflect/Type;` @kind virtual;
  #L3274ec.  v0:= temp @kind object;
  #L3274ee.  call temp:= `getGenericSuperclass`(v11) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L3274f4.  v1:= temp @kind object;
  #L3274f6.  call temp:= `p`(v0, v11, v1) @signature `Lf8/b;.p:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L3274fc.  v0:= temp @kind object;
  #L3274fe.  call temp:= `b`(v0) @signature `Lk8/a;.b:(Ljava/lang/reflect/Type;)Lk8/a;` @kind static;
  #L327504.  v10:= temp @kind object;
  #L327506.  call temp:= `c`(v10) @signature `Lk8/a;.c:()Ljava/lang/Class;` @kind virtual;
  #L32750c.  v11:= temp @kind object;
  #L32750e.  goto L32739c;
  #L327512.  return v8 @kind object;
}
procedure `java.util.List` `e`(`g8.k` v4 @kind this, `java.lang.reflect.Field` v5 @kind object) @signature `Lg8/k;.e:(Ljava/lang/reflect/Field;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3272e4.  v0:= constclass @type ^`e8.c` @kind object;
  #L3272e8.  call temp:= `getAnnotation`(v5, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3272ee.  v0:= temp @kind object;
  #L3272f0.  v0:= (`e8.c`) v0 @kind object;
  #L3272f4.  if v0 != 0 then goto L32730e;
  #L3272f8.  v0:= v4.`g8.k.p` @type ^`d8.d` @kind object;
  #L3272fc.  call temp:= `c`(v0, v5) @signature `Ld8/d;.c:(Ljava/lang/reflect/Field;)Ljava/lang/String;` @kind interface;
  #L327302.  v5:= temp @kind object;
  #L327304.  call temp:= `singletonList`(v5) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L32730a.  v5:= temp @kind object;
  #L32730c.  return v5 @kind object;
  #L32730e.  call temp:= `value`(v0) @signature `Le8/c;.value:()Ljava/lang/String;` @kind interface;
  #L327314.  v5:= temp @kind object;
  #L327316.  call temp:= `alternate`(v0) @signature `Le8/c;.alternate:()[Ljava/lang/String;` @kind interface;
  #L32731c.  v0:= temp @kind object;
  #L32731e.  v1:= length @variable v0;
  #L327320.  if v1 != 0 then goto L32732e;
  #L327324.  call temp:= `singletonList`(v5) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L32732a.  v5:= temp @kind object;
  #L32732c.  return v5 @kind object;
  #L32732e.  v1:= new `java.util.ArrayList`;
  #L327332.  v2:= length @variable v0;
  #L327334.  v2:= v2 + 1;
  #L327338.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L32733e.  call temp:= `add`(v1, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L327344.  v5:= length @variable v0;
  #L327346.  v2:= 0I;
  #L327348.  if v2 >= v5 then goto L32735c;
  #L32734c.  v3:= v0[v2] @kind object;
  #L327350.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L327356.  v2:= v2 + 1;
  #L32735a.  goto L327348;
  #L32735c.  return v1 @kind object;
}
procedure `boolean` `b`(`g8.k` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `boolean` v3 ) @signature `Lg8/k;.b:(Ljava/lang/reflect/Field;Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3271ac.  v0:= v1.`g8.k.q` @type ^`f8.d` @kind object;
  #L3271b0.  call temp:= `c`(v2, v3, v0) @signature `Lg8/k;.c:(Ljava/lang/reflect/Field;ZLf8/d;)Z` @kind static;
  #L3271b6.  v2:= temp;
  #L3271b8.  return v2;
}
procedure `d8.w` `create`(`g8.k` v3 @kind this, `d8.e` v4 @kind object, `k8.a` v5 @kind object) @signature `Lg8/k;.create:(Ld8/e;Lk8/a;)Ld8/w;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L327204.  call temp:= `c`(v5) @signature `Lk8/a;.c:()Ljava/lang/Class;` @kind virtual;
  #L32720a.  v0:= temp @kind object;
  #L32720c.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L327210.  call temp:= `isAssignableFrom`(v1, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L327216.  v1:= temp;
  #L327218.  if v1 != 0 then goto L327220;
  #L32721c.  v4:= 0I;
  #L32721e.  return v4 @kind object;
  #L327220.  v1:= v3.`g8.k.o` @type ^`f8.c` @kind object;
  #L327224.  call temp:= `a`(v1, v5) @signature `Lf8/c;.a:(Lk8/a;)Lf8/i;` @kind virtual;
  #L32722a.  v1:= temp @kind object;
  #L32722c.  v2:= new `g8.k$b`;
  #L327230.  call temp:= `d`(v3, v4, v5, v0) @signature `Lg8/k;.d:(Ld8/e;Lk8/a;Ljava/lang/Class;)Ljava/util/Map;` @kind direct;
  #L327236.  v4:= temp @kind object;
  #L327238.  call `<init>`(v2, v1, v4) @signature `Lg8/k$b;.<init>:(Lf8/i;Ljava/util/Map;)V` @kind direct;
  #L32723e.  return v2 @kind object;
}
