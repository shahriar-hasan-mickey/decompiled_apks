record `g8.j` @kind class @AccessFlag PUBLIC_FINAL extends `d8.w` @kind class {
  `d8.e` `g8.j.a` @AccessFlag PRIVATE_FINAL;
  `d8.v` `g8.j.b` @AccessFlag PRIVATE_FINAL;
}
global `d8.x` `@@g8.j.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lg8/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L326e90.  v0:= `@@d8.u.o` @type ^`d8.u` @kind object;
  #L326e94.  call temp:= `g`(v0) @signature `Lg8/j;.g:(Ld8/v;)Ld8/x;` @kind static;
  #L326e9a.  v0:= temp @kind object;
  #L326e9c.  `@@g8.j.c` @type ^`d8.x` := v0 @kind object;
  #L326ea0.  return @kind void;
}
procedure `void` `<init>`(`g8.j` v0 @kind this, `d8.e` v1 @kind object, `d8.v` v2 @kind object) @signature `Lg8/j;.<init>:(Ld8/e;Ld8/v;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L326eb4.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L326eba.  v0.`g8.j.a` @type ^`d8.e` := v1 @kind object;
  #L326ebe.  v0.`g8.j.b` @type ^`d8.v` := v2 @kind object;
  #L326ec2.  return @kind void;
}
procedure `void` `<init>`(`g8.j` v0 @kind this, `d8.e` v1 @kind object, `d8.v` v2 @kind object, `g8.j$a` v3 @kind object) @signature `Lg8/j;.<init>:(Ld8/e;Ld8/v;Lg8/j$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L326ed4.  call `<init>`(v0, v1, v2) @signature `Lg8/j;.<init>:(Ld8/e;Ld8/v;)V` @kind direct;
  #L326eda.  return @kind void;
}
procedure `d8.x` `f`(`d8.v` v1 @kind object) @signature `Lg8/j;.f:(Ld8/v;)Ld8/x;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L326d4c.  v0:= `@@d8.u.o` @type ^`d8.u` @kind object;
  #L326d50.  if v1 != v0 then goto L326d5a;
  #L326d54.  v1:= `@@g8.j.c` @type ^`d8.x` @kind object;
  #L326d58.  return v1 @kind object;
  #L326d5a.  call temp:= `g`(v1) @signature `Lg8/j;.g:(Ld8/v;)Ld8/x;` @kind static;
  #L326d60.  v1:= temp @kind object;
  #L326d62.  return v1 @kind object;
}
procedure `d8.x` `g`(`d8.v` v1 @kind object) @signature `Lg8/j;.g:(Ld8/v;)Ld8/x;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L326d74.  v0:= new `g8.j$a`;
  #L326d78.  call `<init>`(v0, v1) @signature `Lg8/j$a;.<init>:(Ld8/v;)V` @kind direct;
  #L326d7e.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`g8.j` v3 @kind this, `l8.a` v4 @kind object) @signature `Lg8/j;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L326d90.  call temp:= `f0`(v4) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L326d96.  v0:= temp @kind object;
  #L326d98.  v1:= `@@g8.j$b.a` @type ^`int`[] @kind object;
  #L326d9c.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L326da2.  v0:= temp;
  #L326da4.  v0:= v1[v0];
  #L326da8.  goto L326e60;
  #L326dae.  v4:= new `java.lang.IllegalStateException`;
  #L326db2.  call `<init>`(v4) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L326db8.  throw v4;
  #L326dba.  call `b0`(v4) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L326dc0.  v4:= 0I;
  #L326dc2.  return v4 @kind object;
  #L326dc4.  call temp:= `K`(v4) @signature `Ll8/a;.K:()Z` @kind virtual;
  #L326dca.  v4:= temp;
  #L326dcc.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L326dd2.  v4:= temp @kind object;
  #L326dd4.  return v4 @kind object;
  #L326dd6.  v0:= v3.`g8.j.b` @type ^`d8.v` @kind object;
  #L326dda.  call temp:= `c`(v0, v4) @signature `Ld8/v;.c:(Ll8/a;)Ljava/lang/Number;` @kind interface;
  #L326de0.  v4:= temp @kind object;
  #L326de2.  return v4 @kind object;
  #L326de4.  call temp:= `d0`(v4) @signature `Ll8/a;.d0:()Ljava/lang/String;` @kind virtual;
  #L326dea.  v4:= temp @kind object;
  #L326dec.  return v4 @kind object;
  #L326dee.  v0:= new `f8.h`;
  #L326df2.  call `<init>`(v0) @signature `Lf8/h;.<init>:()V` @kind direct;
  #L326df8.  call `c`(v4) @signature `Ll8/a;.c:()V` @kind virtual;
  #L326dfe.  call temp:= `x`(v4) @signature `Ll8/a;.x:()Z` @kind virtual;
  #L326e04.  v1:= temp;
  #L326e06.  if v1 == 0 then goto L326e22;
  #L326e0a.  call temp:= `S`(v4) @signature `Ll8/a;.S:()Ljava/lang/String;` @kind virtual;
  #L326e10.  v1:= temp @kind object;
  #L326e12.  call temp:= `c`(v3, v4) @signature `Lg8/j;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L326e18.  v2:= temp @kind object;
  #L326e1a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L326e20.  goto L326dfe;
  #L326e22.  call `o`(v4) @signature `Ll8/a;.o:()V` @kind virtual;
  #L326e28.  return v0 @kind object;
  #L326e2a.  v0:= new `java.util.ArrayList`;
  #L326e2e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L326e34.  call `a`(v4) @signature `Ll8/a;.a:()V` @kind virtual;
  #L326e3a.  call temp:= `x`(v4) @signature `Ll8/a;.x:()Z` @kind virtual;
  #L326e40.  v1:= temp;
  #L326e42.  if v1 == 0 then goto L326e56;
  #L326e46.  call temp:= `c`(v3, v4) @signature `Lg8/j;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L326e4c.  v1:= temp @kind object;
  #L326e4e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L326e54.  goto L326e3a;
  #L326e56.  call `k`(v4) @signature `Ll8/a;.k:()V` @kind virtual;
  #L326e5c.  return v0 @kind object;
  #L326e5e.  
  #L326e60.  switch v0
                  | 1 => goto L326e2a
                  | 2 => goto L326dee
                  | 3 => goto L326de4
                  | 4 => goto L326dd6
                  | 5 => goto L326dc4
                  | 6 => goto L326dba
                  | else => goto L326dae;
}
procedure `void` `e`(`g8.j` v2 @kind this, `l8.c` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lg8/j;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L326eec.  if v4 != 0 then goto L326ef8;
  #L326ef0.  call temp:= `J`(v3) @signature `Ll8/c;.J:()Ll8/c;` @kind virtual;
  #L326ef6.  return @kind void;
  #L326ef8.  v0:= v2.`g8.j.a` @type ^`d8.e` @kind object;
  #L326efc.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L326f02.  v1:= temp @kind object;
  #L326f04.  call temp:= `j`(v0, v1) @signature `Ld8/e;.j:(Ljava/lang/Class;)Ld8/w;` @kind virtual;
  #L326f0a.  v0:= temp @kind object;
  #L326f0c.  v1:= instanceof @variable v0 @type ^`g8.j` @kind boolean;
  #L326f10.  if v1 == 0 then goto L326f22;
  #L326f14.  call temp:= `h`(v3) @signature `Ll8/c;.h:()Ll8/c;` @kind virtual;
  #L326f1a.  call temp:= `o`(v3) @signature `Ll8/c;.o:()Ll8/c;` @kind virtual;
  #L326f20.  return @kind void;
  #L326f22.  call `e`(v0, v3, v4) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @kind virtual;
  #L326f28.  return @kind void;
}
