record `g8.h$a` @kind class @AccessFlag FINAL extends `d8.w` @kind class {
  `d8.w` `g8.h$a.a` @AccessFlag PRIVATE_FINAL;
  `d8.w` `g8.h$a.b` @AccessFlag PRIVATE_FINAL;
  `f8.i` `g8.h$a.c` @AccessFlag PRIVATE_FINAL;
  `g8.h` `g8.h$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`g8.h$a` v0 @kind this, `g8.h` v1 @kind object, `d8.e` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `d8.w` v4 @kind object, `java.lang.reflect.Type` v5 @kind object, `d8.w` v6 @kind object, `f8.i` v7 @kind object) @signature `Lg8/h$a;.<init>:(Lg8/h;Ld8/e;Ljava/lang/reflect/Type;Ld8/w;Ljava/lang/reflect/Type;Ld8/w;Lf8/i;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3266cc.  v0.`g8.h$a.d` @type ^`g8.h` := v1 @kind object;
  #L3266d0.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L3266d6.  v1:= new `g8.m`;
  #L3266da.  call `<init>`(v1, v2, v4, v3) @signature `Lg8/m;.<init>:(Ld8/e;Ld8/w;Ljava/lang/reflect/Type;)V` @kind direct;
  #L3266e0.  v0.`g8.h$a.a` @type ^`d8.w` := v1 @kind object;
  #L3266e4.  v1:= new `g8.m`;
  #L3266e8.  call `<init>`(v1, v2, v6, v5) @signature `Lg8/m;.<init>:(Ld8/e;Ld8/w;Ljava/lang/reflect/Type;)V` @kind direct;
  #L3266ee.  v0.`g8.h$a.b` @type ^`d8.w` := v1 @kind object;
  #L3266f2.  v0.`g8.h$a.c` @type ^`f8.i` := v7 @kind object;
  #L3266f6.  return @kind void;
}
procedure `java.lang.String` `f`(`g8.h$a` v1 @kind this, `d8.k` v2 @kind object) @signature `Lg8/h$a;.f:(Ld8/k;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3264fc.  call temp:= `y`(v2) @signature `Ld8/k;.y:()Z` @kind virtual;
  #L326502.  v0:= temp;
  #L326504.  if v0 == 0 then goto L32656e;
  #L326508.  call temp:= `h`(v2) @signature `Ld8/k;.h:()Ld8/p;` @kind virtual;
  #L32650e.  v2:= temp @kind object;
  #L326510.  call temp:= `a0`(v2) @signature `Ld8/p;.a0:()Z` @kind virtual;
  #L326516.  v0:= temp;
  #L326518.  if v0 == 0 then goto L32652e;
  #L32651c.  call temp:= `S`(v2) @signature `Ld8/p;.S:()Ljava/lang/Number;` @kind virtual;
  #L326522.  v2:= temp @kind object;
  #L326524.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L32652a.  v2:= temp @kind object;
  #L32652c.  return v2 @kind object;
  #L32652e.  call temp:= `T`(v2) @signature `Ld8/p;.T:()Z` @kind virtual;
  #L326534.  v0:= temp;
  #L326536.  if v0 == 0 then goto L32654c;
  #L32653a.  call temp:= `G`(v2) @signature `Ld8/p;.G:()Z` @kind virtual;
  #L326540.  v2:= temp;
  #L326542.  call temp:= `toString`(v2) @signature `Ljava/lang/Boolean;.toString:(Z)Ljava/lang/String;` @kind static;
  #L326548.  v2:= temp @kind object;
  #L32654a.  return v2 @kind object;
  #L32654c.  call temp:= `b0`(v2) @signature `Ld8/p;.b0:()Z` @kind virtual;
  #L326552.  v0:= temp;
  #L326554.  if v0 == 0 then goto L326562;
  #L326558.  call temp:= `l`(v2) @signature `Ld8/p;.l:()Ljava/lang/String;` @kind virtual;
  #L32655e.  v2:= temp @kind object;
  #L326560.  return v2 @kind object;
  #L326562.  v2:= new `java.lang.AssertionError`;
  #L326566.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L32656c.  throw v2;
  #L32656e.  call temp:= `p`(v2) @signature `Ld8/k;.p:()Z` @kind virtual;
  #L326574.  v2:= temp;
  #L326576.  if v2 == 0 then goto L326580;
  #L32657a.  v2:= "null" @kind object;
  #L32657e.  return v2 @kind object;
  #L326580.  v2:= new `java.lang.AssertionError`;
  #L326584.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L32658a.  throw v2;
}
procedure `java.lang.Object` `c`(`g8.h$a` v0 @kind this, `l8.a` v1 @kind object) @signature `Lg8/h$a;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3264e0.  call temp:= `g`(v0, v1) @signature `Lg8/h$a;.g:(Ll8/a;)Ljava/util/Map;` @kind virtual;
  #L3264e6.  v1:= temp @kind object;
  #L3264e8.  return v1 @kind object;
}
procedure `void` `e`(`g8.h$a` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lg8/h$a;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L326708.  v2:= (`java.util.Map`) v2 @kind object;
  #L32670c.  call `h`(v0, v1, v2) @signature `Lg8/h$a;.h:(Ll8/c;Ljava/util/Map;)V` @kind virtual;
  #L326712.  return @kind void;
}
procedure `java.util.Map` `g`(`g8.h$a` v4 @kind this, `l8.a` v5 @kind object) @signature `Lg8/h$a;.g:(Ll8/a;)Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32659c.  call temp:= `f0`(v5) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L3265a2.  v0:= temp @kind object;
  #L3265a4.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L3265a8.  if v0 != v1 then goto L3265b6;
  #L3265ac.  call `b0`(v5) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L3265b2.  v5:= 0I;
  #L3265b4.  return v5 @kind object;
  #L3265b6.  v1:= v4.`g8.h$a.c` @type ^`f8.i` @kind object;
  #L3265ba.  call temp:= `a`(v1) @signature `Lf8/i;.a:()Ljava/lang/Object;` @kind interface;
  #L3265c0.  v1:= temp @kind object;
  #L3265c2.  v1:= (`java.util.Map`) v1 @kind object;
  #L3265c6.  v2:= `@@l8.b.o` @type ^`l8.b` @kind object;
  #L3265ca.  v3:= "duplicate key: " @kind object;
  #L3265ce.  if v0 != v2 then goto L326648;
  #L3265d2.  call `a`(v5) @signature `Ll8/a;.a:()V` @kind virtual;
  #L3265d8.  call temp:= `x`(v5) @signature `Ll8/a;.x:()Z` @kind virtual;
  #L3265de.  v0:= temp;
  #L3265e0.  if v0 == 0 then goto L326640;
  #L3265e4.  call `a`(v5) @signature `Ll8/a;.a:()V` @kind virtual;
  #L3265ea.  v0:= v4.`g8.h$a.a` @type ^`d8.w` @kind object;
  #L3265ee.  call temp:= `c`(v0, v5) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L3265f4.  v0:= temp @kind object;
  #L3265f6.  v2:= v4.`g8.h$a.b` @type ^`d8.w` @kind object;
  #L3265fa.  call temp:= `c`(v2, v5) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L326600.  v2:= temp @kind object;
  #L326602.  call temp:= `put`(v1, v0, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L326608.  v2:= temp @kind object;
  #L32660a.  if v2 != 0 then goto L326616;
  #L32660e.  call `k`(v5) @signature `Ll8/a;.k:()V` @kind virtual;
  #L326614.  goto L3265d8;
  #L326616.  v5:= new `d8.s`;
  #L32661a.  v1:= new `java.lang.StringBuilder`;
  #L32661e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L326624.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32662a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L326630.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L326636.  v0:= temp @kind object;
  #L326638.  call `<init>`(v5, v0) @signature `Ld8/s;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32663e.  throw v5;
  #L326640.  call `k`(v5) @signature `Ll8/a;.k:()V` @kind virtual;
  #L326646.  goto L3266ba;
  #L326648.  call `c`(v5) @signature `Ll8/a;.c:()V` @kind virtual;
  #L32664e.  call temp:= `x`(v5) @signature `Ll8/a;.x:()Z` @kind virtual;
  #L326654.  v0:= temp;
  #L326656.  if v0 == 0 then goto L3266b4;
  #L32665a.  v0:= `@@f8.f.a` @type ^`f8.f` @kind object;
  #L32665e.  call `a`(v0, v5) @signature `Lf8/f;.a:(Ll8/a;)V` @kind virtual;
  #L326664.  v0:= v4.`g8.h$a.a` @type ^`d8.w` @kind object;
  #L326668.  call temp:= `c`(v0, v5) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L32666e.  v0:= temp @kind object;
  #L326670.  v2:= v4.`g8.h$a.b` @type ^`d8.w` @kind object;
  #L326674.  call temp:= `c`(v2, v5) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L32667a.  v2:= temp @kind object;
  #L32667c.  call temp:= `put`(v1, v0, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L326682.  v2:= temp @kind object;
  #L326684.  if v2 != 0 then goto L32668a;
  #L326688.  goto L32664e;
  #L32668a.  v5:= new `d8.s`;
  #L32668e.  v1:= new `java.lang.StringBuilder`;
  #L326692.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L326698.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32669e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3266a4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3266aa.  v0:= temp @kind object;
  #L3266ac.  call `<init>`(v5, v0) @signature `Ld8/s;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3266b2.  throw v5;
  #L3266b4.  call `o`(v5) @signature `Ll8/a;.o:()V` @kind virtual;
  #L3266ba.  return v1 @kind object;
}
procedure `void` `h`(`g8.h$a` v7 @kind this, `l8.c` v8 @kind object, `java.util.Map` v9 @kind object) @signature `Lg8/h$a;.h:(Ll8/c;Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L326724.  if v9 != 0 then goto L326730;
  #L326728.  call temp:= `J`(v8) @signature `Ll8/c;.J:()Ll8/c;` @kind virtual;
  #L32672e.  return @kind void;
  #L326730.  v0:= v7.`g8.h$a.d` @type ^`g8.h` @kind object;
  #L326734.  v0:= v0.`g8.h.p` @type ^`boolean` @kind boolean;
  #L326738.  if v0 != 0 then goto L32679c;
  #L32673c.  call temp:= `h`(v8) @signature `Ll8/c;.h:()Ll8/c;` @kind virtual;
  #L326742.  call temp:= `entrySet`(v9) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L326748.  v9:= temp @kind object;
  #L32674a.  call temp:= `iterator`(v9) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L326750.  v9:= temp @kind object;
  #L326752.  call temp:= `hasNext`(v9) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L326758.  v0:= temp;
  #L32675a.  if v0 == 0 then goto L326794;
  #L32675e.  call temp:= `next`(v9) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L326764.  v0:= temp @kind object;
  #L326766.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L32676a.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L326770.  v1:= temp @kind object;
  #L326772.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L326778.  v1:= temp @kind object;
  #L32677a.  call temp:= `E`(v8, v1) @signature `Ll8/c;.E:(Ljava/lang/String;)Ll8/c;` @kind virtual;
  #L326780.  v1:= v7.`g8.h$a.b` @type ^`d8.w` @kind object;
  #L326784.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L32678a.  v0:= temp @kind object;
  #L32678c.  call `e`(v1, v8, v0) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @kind virtual;
  #L326792.  goto L326752;
  #L326794.  call temp:= `o`(v8) @signature `Ll8/c;.o:()Ll8/c;` @kind virtual;
  #L32679a.  return @kind void;
  #L32679c.  v0:= new `java.util.ArrayList`;
  #L3267a0.  call temp:= `size`(v9) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3267a6.  v1:= temp;
  #L3267a8.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3267ae.  v1:= new `java.util.ArrayList`;
  #L3267b2.  call temp:= `size`(v9) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3267b8.  v2:= temp;
  #L3267ba.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3267c0.  call temp:= `entrySet`(v9) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3267c6.  v9:= temp @kind object;
  #L3267c8.  call temp:= `iterator`(v9) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3267ce.  v9:= temp @kind object;
  #L3267d0.  v2:= 0I;
  #L3267d2.  v3:= 0I;
  #L3267d4.  call temp:= `hasNext`(v9) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3267da.  v4:= temp;
  #L3267dc.  if v4 == 0 then goto L326838;
  #L3267e0.  call temp:= `next`(v9) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3267e6.  v4:= temp @kind object;
  #L3267e8.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L3267ec.  v5:= v7.`g8.h$a.a` @type ^`d8.w` @kind object;
  #L3267f0.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3267f6.  v6:= temp @kind object;
  #L3267f8.  call temp:= `d`(v5, v6) @signature `Ld8/w;.d:(Ljava/lang/Object;)Ld8/k;` @kind virtual;
  #L3267fe.  v5:= temp @kind object;
  #L326800.  call temp:= `add`(v0, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L326806.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L32680c.  v4:= temp @kind object;
  #L32680e.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L326814.  call temp:= `n`(v5) @signature `Ld8/k;.n:()Z` @kind virtual;
  #L32681a.  v4:= temp;
  #L32681c.  if v4 != 0 then goto L326832;
  #L326820.  call temp:= `u`(v5) @signature `Ld8/k;.u:()Z` @kind virtual;
  #L326826.  v4:= temp;
  #L326828.  if v4 == 0 then goto L32682e;
  #L32682c.  goto L326832;
  #L32682e.  v4:= 0I;
  #L326830.  goto L326834;
  #L326832.  v4:= 1I;
  #L326834.  v3:= v3 ^| v4 @kind int;
  #L326836.  goto L3267d4;
  #L326838.  if v3 == 0 then goto L32688c;
  #L32683c.  call temp:= `e`(v8) @signature `Ll8/c;.e:()Ll8/c;` @kind virtual;
  #L326842.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L326848.  v9:= temp;
  #L32684a.  if v2 >= v9 then goto L326884;
  #L32684e.  call temp:= `e`(v8) @signature `Ll8/c;.e:()Ll8/c;` @kind virtual;
  #L326854.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32685a.  v3:= temp @kind object;
  #L32685c.  v3:= (`d8.k`) v3 @kind object;
  #L326860.  call `b`(v3, v8) @signature `Lf8/l;.b:(Ld8/k;Ll8/c;)V` @kind static;
  #L326866.  v3:= v7.`g8.h$a.b` @type ^`d8.w` @kind object;
  #L32686a.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L326870.  v4:= temp @kind object;
  #L326872.  call `e`(v3, v8, v4) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @kind virtual;
  #L326878.  call temp:= `k`(v8) @signature `Ll8/c;.k:()Ll8/c;` @kind virtual;
  #L32687e.  v2:= v2 + 1;
  #L326882.  goto L32684a;
  #L326884.  call temp:= `k`(v8) @signature `Ll8/c;.k:()Ll8/c;` @kind virtual;
  #L32688a.  goto L3268d6;
  #L32688c.  call temp:= `h`(v8) @signature `Ll8/c;.h:()Ll8/c;` @kind virtual;
  #L326892.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L326898.  v9:= temp;
  #L32689a.  if v2 >= v9 then goto L3268d0;
  #L32689e.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3268a4.  v3:= temp @kind object;
  #L3268a6.  v3:= (`d8.k`) v3 @kind object;
  #L3268aa.  call temp:= `f`(v7, v3) @signature `Lg8/h$a;.f:(Ld8/k;)Ljava/lang/String;` @kind direct;
  #L3268b0.  v3:= temp @kind object;
  #L3268b2.  call temp:= `E`(v8, v3) @signature `Ll8/c;.E:(Ljava/lang/String;)Ll8/c;` @kind virtual;
  #L3268b8.  v3:= v7.`g8.h$a.b` @type ^`d8.w` @kind object;
  #L3268bc.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3268c2.  v4:= temp @kind object;
  #L3268c4.  call `e`(v3, v8, v4) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @kind virtual;
  #L3268ca.  v2:= v2 + 1;
  #L3268ce.  goto L32689a;
  #L3268d0.  call temp:= `o`(v8) @signature `Ll8/c;.o:()Ll8/c;` @kind virtual;
  #L3268d6.  return @kind void;
}
