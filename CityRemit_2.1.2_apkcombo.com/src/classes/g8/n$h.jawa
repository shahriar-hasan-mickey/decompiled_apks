record `g8.n$h` @kind class @AccessFlag  extends `d8.w` @kind class {
}
procedure `void` `<init>`(`g8.n$h` v0 @kind this) @signature `Lg8/n$h;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L327dbc.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L327dc2.  return @kind void;
}
procedure `java.lang.Object` `c`(`g8.n$h` v0 @kind this, `l8.a` v1 @kind object) @signature `Lg8/n$h;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L327d44.  call temp:= `f`(v0, v1) @signature `Lg8/n$h;.f:(Ll8/a;)Ljava/math/BigInteger;` @kind virtual;
  #L327d4a.  v1:= temp @kind object;
  #L327d4c.  return v1 @kind object;
}
procedure `void` `e`(`g8.n$h` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lg8/n$h;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L327dd4.  v2:= (`java.math.BigInteger`) v2 @kind object;
  #L327dd8.  call `g`(v0, v1, v2) @signature `Lg8/n$h;.g:(Ll8/c;Ljava/math/BigInteger;)V` @kind virtual;
  #L327dde.  return @kind void;
}
procedure `java.math.BigInteger` `f`(`g8.n$h` v2 @kind this, `l8.a` v3 @kind object) @signature `Lg8/n$h;.f:(Ll8/a;)Ljava/math/BigInteger;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L327d60.  call temp:= `f0`(v3) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L327d66.  v0:= temp @kind object;
  #L327d68.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L327d6c.  if v0 != v1 then goto L327d7a;
  #L327d70.  call `b0`(v3) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L327d76.  v3:= 0I;
  #L327d78.  return v3 @kind object;
  #L327d7a.  v0:= new `java.math.BigInteger`;
  #L327d7e.  call temp:= `d0`(v3) @signature `Ll8/a;.d0:()Ljava/lang/String;` @kind virtual;
  #L327d84.  v3:= temp @kind object;
  #L327d86.  call `<init>`(v0, v3) @signature `Ljava/math/BigInteger;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L327d8c.  return v0 @kind object;
  #L327d8e.  v3:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L327d90.  v0:= new `d8.s`;
  #L327d94.  call `<init>`(v0, v3) @signature `Ld8/s;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L327d9a.  throw v0;
  catch `java.lang.NumberFormatException` @[L327d7a..L327d8c] goto L327d8e;
}
procedure `void` `g`(`g8.n$h` v0 @kind this, `l8.c` v1 @kind object, `java.math.BigInteger` v2 @kind object) @signature `Lg8/n$h;.g:(Ll8/c;Ljava/math/BigInteger;)V` @AccessFlag PUBLIC {
    temp;

  #L327df0.  call temp:= `g0`(v1, v2) @signature `Ll8/c;.g0:(Ljava/lang/Number;)Ll8/c;` @kind virtual;
  #L327df6.  return @kind void;
}
