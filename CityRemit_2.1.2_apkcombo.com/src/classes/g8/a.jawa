record `g8.a` @kind class @AccessFlag PUBLIC_FINAL extends `d8.w` @kind class {
  `java.lang.Class` `g8.a.a` @AccessFlag PRIVATE_FINAL;
  `d8.w` `g8.a.b` @AccessFlag PRIVATE_FINAL;
}
global `d8.x` `@@g8.a.c` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lg8/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L324aa0.  v0:= new `g8.a$a`;
  #L324aa4.  call `<init>`(v0) @signature `Lg8/a$a;.<init>:()V` @kind direct;
  #L324aaa.  `@@g8.a.c` @type ^`d8.x` := v0 @kind object;
  #L324aae.  return @kind void;
}
procedure `void` `<init>`(`g8.a` v1 @kind this, `d8.e` v2 @kind object, `d8.w` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lg8/a;.<init>:(Ld8/e;Ld8/w;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L324ac0.  call `<init>`(v1) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L324ac6.  v0:= new `g8.m`;
  #L324aca.  call `<init>`(v0, v2, v3, v4) @signature `Lg8/m;.<init>:(Ld8/e;Ld8/w;Ljava/lang/reflect/Type;)V` @kind direct;
  #L324ad0.  v1.`g8.a.b` @type ^`d8.w` := v0 @kind object;
  #L324ad4.  v1.`g8.a.a` @type ^`java.lang.Class` := v4 @kind object;
  #L324ad8.  return @kind void;
}
procedure `java.lang.Object` `c`(`g8.a` v4 @kind this, `l8.a` v5 @kind object) @signature `Lg8/a;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L324a10.  call temp:= `f0`(v5) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L324a16.  v0:= temp @kind object;
  #L324a18.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L324a1c.  if v0 != v1 then goto L324a2a;
  #L324a20.  call `b0`(v5) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L324a26.  v5:= 0I;
  #L324a28.  return v5 @kind object;
  #L324a2a.  v0:= new `java.util.ArrayList`;
  #L324a2e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L324a34.  call `a`(v5) @signature `Ll8/a;.a:()V` @kind virtual;
  #L324a3a.  call temp:= `x`(v5) @signature `Ll8/a;.x:()Z` @kind virtual;
  #L324a40.  v1:= temp;
  #L324a42.  if v1 == 0 then goto L324a5a;
  #L324a46.  v1:= v4.`g8.a.b` @type ^`d8.w` @kind object;
  #L324a4a.  call temp:= `c`(v1, v5) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L324a50.  v1:= temp @kind object;
  #L324a52.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L324a58.  goto L324a3a;
  #L324a5a.  call `k`(v5) @signature `Ll8/a;.k:()V` @kind virtual;
  #L324a60.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L324a66.  v5:= temp;
  #L324a68.  v1:= v4.`g8.a.a` @type ^`java.lang.Class` @kind object;
  #L324a6c.  call temp:= `newInstance`(v1, v5) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L324a72.  v1:= temp @kind object;
  #L324a74.  v2:= 0I;
  #L324a76.  if v2 >= v5 then goto L324a8e;
  #L324a7a.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L324a80.  v3:= temp @kind object;
  #L324a82.  call `set`(v1, v2, v3) @signature `Ljava/lang/reflect/Array;.set:(Ljava/lang/Object;ILjava/lang/Object;)V` @kind static;
  #L324a88.  v2:= v2 + 1;
  #L324a8c.  goto L324a76;
  #L324a8e.  return v1 @kind object;
}
procedure `void` `e`(`g8.a` v4 @kind this, `l8.c` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lg8/a;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L324aec.  if v6 != 0 then goto L324af8;
  #L324af0.  call temp:= `J`(v5) @signature `Ll8/c;.J:()Ll8/c;` @kind virtual;
  #L324af6.  return @kind void;
  #L324af8.  call temp:= `e`(v5) @signature `Ll8/c;.e:()Ll8/c;` @kind virtual;
  #L324afe.  v0:= 0I;
  #L324b00.  call temp:= `getLength`(v6) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L324b06.  v1:= temp;
  #L324b08.  if v0 >= v1 then goto L324b24;
  #L324b0c.  call temp:= `get`(v6, v0) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L324b12.  v2:= temp @kind object;
  #L324b14.  v3:= v4.`g8.a.b` @type ^`d8.w` @kind object;
  #L324b18.  call `e`(v3, v5, v2) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @kind virtual;
  #L324b1e.  v0:= v0 + 1;
  #L324b22.  goto L324b08;
  #L324b24.  call temp:= `k`(v5) @signature `Ll8/c;.k:()Ll8/c;` @kind virtual;
  #L324b2a.  return @kind void;
}
