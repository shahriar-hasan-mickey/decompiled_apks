record `g8.n$s` @kind class @AccessFlag  extends `d8.w` @kind class {
}
procedure `void` `<init>`(`g8.n$s` v0 @kind this) @signature `Lg8/n$s;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L328878.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L32887e.  return @kind void;
}
procedure `java.lang.Object` `c`(`g8.n$s` v0 @kind this, `l8.a` v1 @kind object) @signature `Lg8/n$s;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L32885c.  call temp:= `f`(v0, v1) @signature `Lg8/n$s;.f:(Ll8/a;)Ld8/k;` @kind virtual;
  #L328862.  v1:= temp @kind object;
  #L328864.  return v1 @kind object;
}
procedure `void` `e`(`g8.n$s` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lg8/n$s;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L328a10.  v2:= (`d8.k`) v2 @kind object;
  #L328a14.  call `g`(v0, v1, v2) @signature `Lg8/n$s;.g:(Ll8/c;Ld8/k;)V` @kind virtual;
  #L328a1a.  return @kind void;
}
procedure `d8.k` `f`(`g8.n$s` v3 @kind this, `l8.a` v4 @kind object) @signature `Lg8/n$s;.f:(Ll8/a;)Ld8/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L328720.  v0:= instanceof @variable v4 @type ^`g8.f` @kind boolean;
  #L328724.  if v0 == 0 then goto L328736;
  #L328728.  v4:= (`g8.f`) v4 @kind object;
  #L32872c.  call temp:= `s0`(v4) @signature `Lg8/f;.s0:()Ld8/k;` @kind virtual;
  #L328732.  v4:= temp @kind object;
  #L328734.  return v4 @kind object;
  #L328736.  v0:= `@@g8.n$z.a` @type ^`int`[] @kind object;
  #L32873a.  call temp:= `f0`(v4) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L328740.  v1:= temp @kind object;
  #L328742.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L328748.  v1:= temp;
  #L32874a.  v0:= v0[v1];
  #L32874e.  goto L32882c;
  #L328754.  v4:= new `java.lang.IllegalArgumentException`;
  #L328758.  call `<init>`(v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L32875e.  throw v4;
  #L328760.  v0:= new `d8.n`;
  #L328764.  call `<init>`(v0) @signature `Ld8/n;.<init>:()V` @kind direct;
  #L32876a.  call `c`(v4) @signature `Ll8/a;.c:()V` @kind virtual;
  #L328770.  call temp:= `x`(v4) @signature `Ll8/a;.x:()Z` @kind virtual;
  #L328776.  v1:= temp;
  #L328778.  if v1 == 0 then goto L328794;
  #L32877c.  call temp:= `S`(v4) @signature `Ll8/a;.S:()Ljava/lang/String;` @kind virtual;
  #L328782.  v1:= temp @kind object;
  #L328784.  call temp:= `f`(v3, v4) @signature `Lg8/n$s;.f:(Ll8/a;)Ld8/k;` @kind virtual;
  #L32878a.  v2:= temp @kind object;
  #L32878c.  call `G`(v0, v1, v2) @signature `Ld8/n;.G:(Ljava/lang/String;Ld8/k;)V` @kind virtual;
  #L328792.  goto L328770;
  #L328794.  call `o`(v4) @signature `Ll8/a;.o:()V` @kind virtual;
  #L32879a.  return v0 @kind object;
  #L32879c.  v0:= new `d8.h`;
  #L3287a0.  call `<init>`(v0) @signature `Ld8/h;.<init>:()V` @kind direct;
  #L3287a6.  call `a`(v4) @signature `Ll8/a;.a:()V` @kind virtual;
  #L3287ac.  call temp:= `x`(v4) @signature `Ll8/a;.x:()Z` @kind virtual;
  #L3287b2.  v1:= temp;
  #L3287b4.  if v1 == 0 then goto L3287c8;
  #L3287b8.  call temp:= `f`(v3, v4) @signature `Lg8/n$s;.f:(Ll8/a;)Ld8/k;` @kind virtual;
  #L3287be.  v1:= temp @kind object;
  #L3287c0.  call `G`(v0, v1) @signature `Ld8/h;.G:(Ld8/k;)V` @kind virtual;
  #L3287c6.  goto L3287ac;
  #L3287c8.  call `k`(v4) @signature `Ll8/a;.k:()V` @kind virtual;
  #L3287ce.  return v0 @kind object;
  #L3287d0.  call `b0`(v4) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L3287d6.  v4:= `@@d8.m.a` @type ^`d8.m` @kind object;
  #L3287da.  return v4 @kind object;
  #L3287dc.  v0:= new `d8.p`;
  #L3287e0.  call temp:= `d0`(v4) @signature `Ll8/a;.d0:()Ljava/lang/String;` @kind virtual;
  #L3287e6.  v4:= temp @kind object;
  #L3287e8.  call `<init>`(v0, v4) @signature `Ld8/p;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3287ee.  return v0 @kind object;
  #L3287f0.  v0:= new `d8.p`;
  #L3287f4.  call temp:= `K`(v4) @signature `Ll8/a;.K:()Z` @kind virtual;
  #L3287fa.  v4:= temp;
  #L3287fc.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L328802.  v4:= temp @kind object;
  #L328804.  call `<init>`(v0, v4) @signature `Ld8/p;.<init>:(Ljava/lang/Boolean;)V` @kind direct;
  #L32880a.  return v0 @kind object;
  #L32880c.  call temp:= `d0`(v4) @signature `Ll8/a;.d0:()Ljava/lang/String;` @kind virtual;
  #L328812.  v4:= temp @kind object;
  #L328814.  v0:= new `d8.p`;
  #L328818.  v1:= new `f8.g`;
  #L32881c.  call `<init>`(v1, v4) @signature `Lf8/g;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L328822.  call `<init>`(v0, v1) @signature `Ld8/p;.<init>:(Ljava/lang/Number;)V` @kind direct;
  #L328828.  return v0 @kind object;
  #L32882a.  
  #L32882c.  switch v0
                  | 1 => goto L32880c
                  | 2 => goto L3287f0
                  | 3 => goto L3287dc
                  | 4 => goto L3287d0
                  | 5 => goto L32879c
                  | 6 => goto L328760
                  | else => goto L328754;
}
procedure `void` `g`(`g8.n$s` v2 @kind this, `l8.c` v3 @kind object, `d8.k` v4 @kind object) @signature `Lg8/n$s;.g:(Ll8/c;Ld8/k;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L328890.  if v4 == 0 then goto L3289f6;
  #L328894.  call temp:= `p`(v4) @signature `Ld8/k;.p:()Z` @kind virtual;
  #L32889a.  v0:= temp;
  #L32889c.  if v0 == 0 then goto L3288a4;
  #L3288a0.  goto L3289f6;
  #L3288a4.  call temp:= `y`(v4) @signature `Ld8/k;.y:()Z` @kind virtual;
  #L3288aa.  v0:= temp;
  #L3288ac.  if v0 == 0 then goto L328906;
  #L3288b0.  call temp:= `h`(v4) @signature `Ld8/k;.h:()Ld8/p;` @kind virtual;
  #L3288b6.  v4:= temp @kind object;
  #L3288b8.  call temp:= `a0`(v4) @signature `Ld8/p;.a0:()Z` @kind virtual;
  #L3288be.  v0:= temp;
  #L3288c0.  if v0 == 0 then goto L3288d6;
  #L3288c4.  call temp:= `S`(v4) @signature `Ld8/p;.S:()Ljava/lang/Number;` @kind virtual;
  #L3288ca.  v4:= temp @kind object;
  #L3288cc.  call temp:= `g0`(v3, v4) @signature `Ll8/c;.g0:(Ljava/lang/Number;)Ll8/c;` @kind virtual;
  #L3288d2.  goto L3289fc;
  #L3288d6.  call temp:= `T`(v4) @signature `Ld8/p;.T:()Z` @kind virtual;
  #L3288dc.  v0:= temp;
  #L3288de.  if v0 == 0 then goto L3288f4;
  #L3288e2.  call temp:= `G`(v4) @signature `Ld8/p;.G:()Z` @kind virtual;
  #L3288e8.  v4:= temp;
  #L3288ea.  call temp:= `i0`(v3, v4) @signature `Ll8/c;.i0:(Z)Ll8/c;` @kind virtual;
  #L3288f0.  goto L3289fc;
  #L3288f4.  call temp:= `l`(v4) @signature `Ld8/p;.l:()Ljava/lang/String;` @kind virtual;
  #L3288fa.  v4:= temp @kind object;
  #L3288fc.  call temp:= `h0`(v3, v4) @signature `Ll8/c;.h0:(Ljava/lang/String;)Ll8/c;` @kind virtual;
  #L328902.  goto L3289fc;
  #L328906.  call temp:= `n`(v4) @signature `Ld8/k;.n:()Z` @kind virtual;
  #L32890c.  v0:= temp;
  #L32890e.  if v0 == 0 then goto L328950;
  #L328912.  call temp:= `e`(v3) @signature `Ll8/c;.e:()Ll8/c;` @kind virtual;
  #L328918.  call temp:= `b`(v4) @signature `Ld8/k;.b:()Ld8/h;` @kind virtual;
  #L32891e.  v4:= temp @kind object;
  #L328920.  call temp:= `iterator`(v4) @signature `Ld8/h;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L328926.  v4:= temp @kind object;
  #L328928.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32892e.  v0:= temp;
  #L328930.  if v0 == 0 then goto L328948;
  #L328934.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32893a.  v0:= temp @kind object;
  #L32893c.  v0:= (`d8.k`) v0 @kind object;
  #L328940.  call `g`(v2, v3, v0) @signature `Lg8/n$s;.g:(Ll8/c;Ld8/k;)V` @kind virtual;
  #L328946.  goto L328928;
  #L328948.  call temp:= `k`(v3) @signature `Ll8/c;.k:()Ll8/c;` @kind virtual;
  #L32894e.  goto L3289fc;
  #L328950.  call temp:= `u`(v4) @signature `Ld8/k;.u:()Z` @kind virtual;
  #L328956.  v0:= temp;
  #L328958.  if v0 == 0 then goto L3289c0;
  #L32895c.  call temp:= `h`(v3) @signature `Ll8/c;.h:()Ll8/c;` @kind virtual;
  #L328962.  call temp:= `f`(v4) @signature `Ld8/k;.f:()Ld8/n;` @kind virtual;
  #L328968.  v4:= temp @kind object;
  #L32896a.  call temp:= `N`(v4) @signature `Ld8/n;.N:()Ljava/util/Set;` @kind virtual;
  #L328970.  v4:= temp @kind object;
  #L328972.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L328978.  v4:= temp @kind object;
  #L32897a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L328980.  v0:= temp;
  #L328982.  if v0 == 0 then goto L3289b8;
  #L328986.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32898c.  v0:= temp @kind object;
  #L32898e.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L328992.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L328998.  v1:= temp @kind object;
  #L32899a.  v1:= (`java.lang.String`) v1 @kind object;
  #L32899e.  call temp:= `E`(v3, v1) @signature `Ll8/c;.E:(Ljava/lang/String;)Ll8/c;` @kind virtual;
  #L3289a4.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3289aa.  v0:= temp @kind object;
  #L3289ac.  v0:= (`d8.k`) v0 @kind object;
  #L3289b0.  call `g`(v2, v3, v0) @signature `Lg8/n$s;.g:(Ll8/c;Ld8/k;)V` @kind virtual;
  #L3289b6.  goto L32897a;
  #L3289b8.  call temp:= `o`(v3) @signature `Ll8/c;.o:()Ll8/c;` @kind virtual;
  #L3289be.  goto L3289fc;
  #L3289c0.  v3:= new `java.lang.IllegalArgumentException`;
  #L3289c4.  v0:= new `java.lang.StringBuilder`;
  #L3289c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3289ce.  v1:= "Couldn't write " @kind object;
  #L3289d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3289d8.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3289de.  v4:= temp @kind object;
  #L3289e0.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3289e6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3289ec.  v4:= temp @kind object;
  #L3289ee.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3289f4.  throw v3;
  #L3289f6.  call temp:= `J`(v3) @signature `Ll8/c;.J:()Ll8/c;` @kind virtual;
  #L3289fc.  return @kind void;
}
