record `g8.n$y$a` @kind class @AccessFlag  extends `d8.w` @kind class {
  `java.lang.Class` `g8.n$y$a.a` @AccessFlag FINAL_SYNTHETIC;
  `g8.n$y` `g8.n$y$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`g8.n$y$a` v0 @kind this, `g8.n$y` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lg8/n$y$a;.<init>:(Lg8/n$y;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L328f28.  v0.`g8.n$y$a.b` @type ^`g8.n$y` := v1 @kind object;
  #L328f2c.  v0.`g8.n$y$a.a` @type ^`java.lang.Class` := v2 @kind object;
  #L328f30.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L328f36.  return @kind void;
}
procedure `java.lang.Object` `c`(`g8.n$y$a` v3 @kind this, `l8.a` v4 @kind object) @signature `Lg8/n$y$a;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L328e94.  v0:= v3.`g8.n$y$a.b` @type ^`g8.n$y` @kind object;
  #L328e98.  v0:= v0.`g8.n$y.p` @type ^`d8.w` @kind object;
  #L328e9c.  call temp:= `c`(v0, v4) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L328ea2.  v4:= temp @kind object;
  #L328ea4.  if v4 == 0 then goto L328f14;
  #L328ea8.  v0:= v3.`g8.n$y$a.a` @type ^`java.lang.Class` @kind object;
  #L328eac.  call temp:= `isInstance`(v0, v4) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L328eb2.  v0:= temp;
  #L328eb4.  if v0 == 0 then goto L328eba;
  #L328eb8.  goto L328f14;
  #L328eba.  v0:= new `d8.s`;
  #L328ebe.  v1:= new `java.lang.StringBuilder`;
  #L328ec2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L328ec8.  v2:= "Expected a " @kind object;
  #L328ecc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328ed2.  v2:= v3.`g8.n$y$a.a` @type ^`java.lang.Class` @kind object;
  #L328ed6.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L328edc.  v2:= temp @kind object;
  #L328ede.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328ee4.  v2:= " but was " @kind object;
  #L328ee8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328eee.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L328ef4.  v4:= temp @kind object;
  #L328ef6.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L328efc.  v4:= temp @kind object;
  #L328efe.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328f04.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L328f0a.  v4:= temp @kind object;
  #L328f0c.  call `<init>`(v0, v4) @signature `Ld8/s;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L328f12.  throw v0;
  #L328f14.  return v4 @kind object;
}
procedure `void` `e`(`g8.n$y$a` v1 @kind this, `l8.c` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lg8/n$y$a;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L328f48.  v0:= v1.`g8.n$y$a.b` @type ^`g8.n$y` @kind object;
  #L328f4c.  v0:= v0.`g8.n$y.p` @type ^`d8.w` @kind object;
  #L328f50.  call `e`(v0, v2, v3) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @kind virtual;
  #L328f56.  return @kind void;
}
