record `g8.n$u` @kind class @AccessFlag  extends `d8.w` @kind class {
}
procedure `void` `<init>`(`g8.n$u` v0 @kind this) @signature `Lg8/n$u;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L328bc8.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L328bce.  return @kind void;
}
procedure `java.lang.Object` `c`(`g8.n$u` v0 @kind this, `l8.a` v1 @kind object) @signature `Lg8/n$u;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L328a98.  call temp:= `f`(v0, v1) @signature `Lg8/n$u;.f:(Ll8/a;)Ljava/util/BitSet;` @kind virtual;
  #L328a9e.  v1:= temp @kind object;
  #L328aa0.  return v1 @kind object;
}
procedure `void` `e`(`g8.n$u` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lg8/n$u;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L328be0.  v2:= (`java.util.BitSet`) v2 @kind object;
  #L328be4.  call `g`(v0, v1, v2) @signature `Lg8/n$u;.g:(Ll8/c;Ljava/util/BitSet;)V` @kind virtual;
  #L328bea.  return @kind void;
}
procedure `java.util.BitSet` `f`(`g8.n$u` v7 @kind this, `l8.a` v8 @kind object) @signature `Lg8/n$u;.f:(Ll8/a;)Ljava/util/BitSet;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L328ab4.  v0:= new `java.util.BitSet`;
  #L328ab8.  call `<init>`(v0) @signature `Ljava/util/BitSet;.<init>:()V` @kind direct;
  #L328abe.  call `a`(v8) @signature `Ll8/a;.a:()V` @kind virtual;
  #L328ac4.  call temp:= `f0`(v8) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L328aca.  v1:= temp @kind object;
  #L328acc.  v2:= 0I;
  #L328ace.  v3:= 0I;
  #L328ad0.  v4:= `@@l8.b.p` @type ^`l8.b` @kind object;
  #L328ad4.  if v1 == v4 then goto L328b9e;
  #L328ad8.  v4:= `@@g8.n$z.a` @type ^`int`[] @kind object;
  #L328adc.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L328ae2.  v5:= temp;
  #L328ae4.  v4:= v4[v5];
  #L328ae8.  v5:= 1I;
  #L328aea.  if v4 == v5 then goto L328b7a;
  #L328aee.  v6:= 2I;
  #L328af0.  if v4 == v6 then goto L328b70;
  #L328af4.  v6:= 3I;
  #L328af6.  if v4 != v6 then goto L328b42;
  #L328afa.  call temp:= `d0`(v8) @signature `Ll8/a;.d0:()Ljava/lang/String;` @kind virtual;
  #L328b00.  v1:= temp @kind object;
  #L328b02.  call temp:= `parseInt`(v1) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L328b08.  v1:= temp;
  #L328b0a.  if v1 == 0 then goto L328b10;
  #L328b0e.  goto L328b86;
  #L328b10.  v5:= 0I;
  #L328b12.  goto L328b86;
  #L328b14.  v8:= new `d8.s`;
  #L328b18.  v0:= new `java.lang.StringBuilder`;
  #L328b1c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L328b22.  v2:= "Error: Expecting: bitset number value (1, 0), Found: " @kind object;
  #L328b26.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328b2c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328b32.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L328b38.  v0:= temp @kind object;
  #L328b3a.  call `<init>`(v8, v0) @signature `Ld8/s;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L328b40.  throw v8;
  #L328b42.  v8:= new `d8.s`;
  #L328b46.  v0:= new `java.lang.StringBuilder`;
  #L328b4a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L328b50.  v2:= "Invalid bitset value type: " @kind object;
  #L328b54.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328b5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328b60.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L328b66.  v0:= temp @kind object;
  #L328b68.  call `<init>`(v8, v0) @signature `Ld8/s;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L328b6e.  throw v8;
  #L328b70.  call temp:= `K`(v8) @signature `Ll8/a;.K:()Z` @kind virtual;
  #L328b76.  v5:= temp;
  #L328b78.  goto L328b86;
  #L328b7a.  call temp:= `N`(v8) @signature `Ll8/a;.N:()I` @kind virtual;
  #L328b80.  v1:= temp;
  #L328b82.  if v1 == 0 then goto L328b10;
  #L328b86.  if v5 == 0 then goto L328b90;
  #L328b8a.  call `set`(v0, v3) @signature `Ljava/util/BitSet;.set:(I)V` @kind virtual;
  #L328b90.  v3:= v3 + 1;
  #L328b94.  call temp:= `f0`(v8) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L328b9a.  v1:= temp @kind object;
  #L328b9c.  goto L328ad0;
  #L328b9e.  call `k`(v8) @signature `Ll8/a;.k:()V` @kind virtual;
  #L328ba4.  return v0 @kind object;
  catch `java.lang.NumberFormatException` @[L328b02..L328b0a] goto L328b14;
}
procedure `void` `g`(`g8.n$u` v4 @kind this, `l8.c` v5 @kind object, `java.util.BitSet` v6 @kind object) @signature `Lg8/n$u;.g:(Ll8/c;Ljava/util/BitSet;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L328bfc.  call temp:= `e`(v5) @signature `Ll8/c;.e:()Ll8/c;` @kind virtual;
  #L328c02.  call temp:= `length`(v6) @signature `Ljava/util/BitSet;.length:()I` @kind virtual;
  #L328c08.  v0:= temp;
  #L328c0a.  v1:= 0I;
  #L328c0c.  if v1 >= v0 then goto L328c26;
  #L328c10.  call temp:= `get`(v6, v1) @signature `Ljava/util/BitSet;.get:(I)Z` @kind virtual;
  #L328c16.  v2:= temp;
  #L328c18.  v2:= (`long`) v2 @kind i2l;
  #L328c1a.  call temp:= `e0`(v5, v2) @signature `Ll8/c;.e0:(J)Ll8/c;` @kind virtual;
  #L328c20.  v1:= v1 + 1;
  #L328c24.  goto L328c0c;
  #L328c26.  call temp:= `k`(v5) @signature `Ll8/c;.k:()Ll8/c;` @kind virtual;
  #L328c2c.  return @kind void;
}
