record `g8.d` @kind class @AccessFlag PUBLIC_FINAL extends `d8.w` @kind class {
  `g8.d$b` `g8.d.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `g8.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`g8.d` v2 @kind this, `g8.d$b` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lg8/d;.<init>:(Lg8/d$b;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3251a0.  call `<init>`(v2) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L3251a6.  v0:= new `java.util.ArrayList`;
  #L3251aa.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3251b0.  v2.`g8.d.b` @type ^`java.util.List` := v0 @kind object;
  #L3251b4.  call temp:= `b`(v3) @signature `Lf8/a;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3251ba.  v3:= temp @kind object;
  #L3251bc.  v3:= (`g8.d$b`) v3 @kind object;
  #L3251c0.  v2.`g8.d.a` @type ^`g8.d$b` := v3 @kind object;
  #L3251c4.  v3:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L3251c8.  call temp:= `getDateTimeInstance`(v4, v5, v3) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;` @kind static;
  #L3251ce.  v1:= temp @kind object;
  #L3251d0.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3251d6.  call temp:= `getDefault`() @signature `Ljava/util/Locale;.getDefault:()Ljava/util/Locale;` @kind static;
  #L3251dc.  v1:= temp @kind object;
  #L3251de.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Locale;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3251e4.  v3:= temp;
  #L3251e6.  if v3 != 0 then goto L3251f8;
  #L3251ea.  call temp:= `getDateTimeInstance`(v4, v5) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(II)Ljava/text/DateFormat;` @kind static;
  #L3251f0.  v3:= temp @kind object;
  #L3251f2.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3251f8.  call temp:= `e`() @signature `Lf8/e;.e:()Z` @kind static;
  #L3251fe.  v3:= temp;
  #L325200.  if v3 == 0 then goto L325212;
  #L325204.  call temp:= `c`(v4, v5) @signature `Lf8/j;.c:(II)Ljava/text/DateFormat;` @kind static;
  #L32520a.  v3:= temp @kind object;
  #L32520c.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L325212.  return @kind void;
}
procedure `void` `<init>`(`g8.d` v0 @kind this, `g8.d$b` v1 @kind object, `int` v2 , `int` v3 , `g8.d$a` v4 @kind object) @signature `Lg8/d;.<init>:(Lg8/d$b;IILg8/d$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L325224.  call `<init>`(v0, v1, v2, v3) @signature `Lg8/d;.<init>:(Lg8/d$b;II)V` @kind direct;
  #L32522a.  return @kind void;
}
procedure `void` `<init>`(`g8.d` v2 @kind this, `g8.d$b` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lg8/d;.<init>:(Lg8/d$b;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L32523c.  call `<init>`(v2) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L325242.  v0:= new `java.util.ArrayList`;
  #L325246.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32524c.  v2.`g8.d.b` @type ^`java.util.List` := v0 @kind object;
  #L325250.  call temp:= `b`(v3) @signature `Lf8/a;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L325256.  v3:= temp @kind object;
  #L325258.  v3:= (`g8.d$b`) v3 @kind object;
  #L32525c.  v2.`g8.d.a` @type ^`g8.d$b` := v3 @kind object;
  #L325260.  v3:= new `java.text.SimpleDateFormat`;
  #L325264.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L325268.  call `<init>`(v3, v4, v1) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V` @kind direct;
  #L32526e.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L325274.  call temp:= `getDefault`() @signature `Ljava/util/Locale;.getDefault:()Ljava/util/Locale;` @kind static;
  #L32527a.  v3:= temp @kind object;
  #L32527c.  call temp:= `equals`(v3, v1) @signature `Ljava/util/Locale;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L325282.  v3:= temp;
  #L325284.  if v3 != 0 then goto L325298;
  #L325288.  v3:= new `java.text.SimpleDateFormat`;
  #L32528c.  call `<init>`(v3, v4) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L325292.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L325298.  return @kind void;
}
procedure `void` `<init>`(`g8.d` v0 @kind this, `g8.d$b` v1 @kind object, `java.lang.String` v2 @kind object, `g8.d$a` v3 @kind object) @signature `Lg8/d;.<init>:(Lg8/d$b;Ljava/lang/String;Lg8/d$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3252ac.  call `<init>`(v0, v1, v2) @signature `Lg8/d;.<init>:(Lg8/d$b;Ljava/lang/String;)V` @kind direct;
  #L3252b2.  return @kind void;
}
procedure `java.util.Date` `f`(`g8.d` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lg8/d;.f:(Ljava/lang/String;)Ljava/util/Date;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3250b0.  v0:= v3.`g8.d.b` @type ^`java.util.List` @kind object;
  #L3250b4.  @monitorenter v0
  #L3250b6.  v1:= v3.`g8.d.b` @type ^`java.util.List` @kind object;
  #L3250ba.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3250c0.  v1:= temp @kind object;
  #L3250c2.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3250c8.  v2:= temp;
  #L3250ca.  if v2 == 0 then goto L3250e6;
  #L3250ce.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3250d4.  v2:= temp @kind object;
  #L3250d6.  v2:= (`java.text.DateFormat`) v2 @kind object;
  #L3250da.  call temp:= `parse`(v2, v4) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #L3250e0.  v4:= temp @kind object;
  #L3250e2.  @monitorexit v0
  #L3250e4.  return v4 @kind object;
  #L3250e6.  @monitorexit v0
  #L3250e8.  v0:= new `java.text.ParsePosition`;
  #L3250ec.  v1:= 0I;
  #L3250ee.  call `<init>`(v0, v1) @signature `Ljava/text/ParsePosition;.<init>:(I)V` @kind direct;
  #L3250f4.  call temp:= `c`(v4, v0) @signature `Lh8/a;.c:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;` @kind static;
  #L3250fa.  v4:= temp @kind object;
  #L3250fc.  return v4 @kind object;
  #L3250fe.  v0:= Exception @type ^`java.text.ParseException` @kind object;
  #L325100.  v1:= new `d8.s`;
  #L325104.  call `<init>`(v1, v4, v0) @signature `Ld8/s;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L32510a.  throw v1;
  #L32510c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32510e.  @monitorexit v0
  #L325110.  throw v4;
  catch `java.lang.Throwable` @[L3250b6..L3250da] goto L32510c;
  catch `java.text.ParseException` @[L3250da..L3250e2] goto L3250c2;
  catch `java.lang.Throwable` @[L3250da..L3250e2] goto L32510c;
  catch `java.lang.Throwable` @[L3250e2..L3250e8] goto L32510c;
  catch `java.text.ParseException` @[L3250e8..L3250fc] goto L3250fe;
  catch `java.lang.Throwable` @[L32510e..L325110] goto L32510c;
}
procedure `java.lang.Object` `c`(`g8.d` v0 @kind this, `l8.a` v1 @kind object) @signature `Lg8/d;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L32500c.  call temp:= `g`(v0, v1) @signature `Lg8/d;.g:(Ll8/a;)Ljava/util/Date;` @kind virtual;
  #L325012.  v1:= temp @kind object;
  #L325014.  return v1 @kind object;
}
procedure `void` `e`(`g8.d` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lg8/d;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3252c4.  v2:= (`java.util.Date`) v2 @kind object;
  #L3252c8.  call `h`(v0, v1, v2) @signature `Lg8/d;.h:(Ll8/c;Ljava/util/Date;)V` @kind virtual;
  #L3252ce.  return @kind void;
}
procedure `java.util.Date` `g`(`g8.d` v2 @kind this, `l8.a` v3 @kind object) @signature `Lg8/d;.g:(Ll8/a;)Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L325158.  call temp:= `f0`(v3) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L32515e.  v0:= temp @kind object;
  #L325160.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L325164.  if v0 != v1 then goto L325172;
  #L325168.  call `b0`(v3) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L32516e.  v3:= 0I;
  #L325170.  return v3 @kind object;
  #L325172.  call temp:= `d0`(v3) @signature `Ll8/a;.d0:()Ljava/lang/String;` @kind virtual;
  #L325178.  v3:= temp @kind object;
  #L32517a.  call temp:= `f`(v2, v3) @signature `Lg8/d;.f:(Ljava/lang/String;)Ljava/util/Date;` @kind direct;
  #L325180.  v3:= temp @kind object;
  #L325182.  v0:= v2.`g8.d.a` @type ^`g8.d$b` @kind object;
  #L325186.  call temp:= `d`(v0, v3) @signature `Lg8/d$b;.d:(Ljava/util/Date;)Ljava/util/Date;` @kind virtual;
  #L32518c.  v3:= temp @kind object;
  #L32518e.  return v3 @kind object;
}
procedure `void` `h`(`g8.d` v3 @kind this, `l8.c` v4 @kind object, `java.util.Date` v5 @kind object) @signature `Lg8/d;.h:(Ll8/c;Ljava/util/Date;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3252e0.  if v5 != 0 then goto L3252ec;
  #L3252e4.  call temp:= `J`(v4) @signature `Ll8/c;.J:()Ll8/c;` @kind virtual;
  #L3252ea.  return @kind void;
  #L3252ec.  v0:= v3.`g8.d.b` @type ^`java.util.List` @kind object;
  #L3252f0.  @monitorenter v0
  #L3252f2.  v1:= v3.`g8.d.b` @type ^`java.util.List` @kind object;
  #L3252f6.  v2:= 0I;
  #L3252f8.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3252fe.  v1:= temp @kind object;
  #L325300.  v1:= (`java.text.DateFormat`) v1 @kind object;
  #L325304.  call temp:= `format`(v1, v5) @signature `Ljava/text/DateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L32530a.  v5:= temp @kind object;
  #L32530c.  call temp:= `h0`(v4, v5) @signature `Ll8/c;.h0:(Ljava/lang/String;)Ll8/c;` @kind virtual;
  #L325312.  @monitorexit v0
  #L325314.  return @kind void;
  #L325316.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L325318.  @monitorexit v0
  #L32531a.  throw v4;
  catch `java.lang.Throwable` @[L3252f2..L32531a] goto L325316;
}
procedure `java.lang.String` `toString`(`g8.d` v4 @kind this) @signature `Lg8/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L325028.  v0:= v4.`g8.d.b` @type ^`java.util.List` @kind object;
  #L32502c.  v1:= 0I;
  #L32502e.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L325034.  v0:= temp @kind object;
  #L325036.  v0:= (`java.text.DateFormat`) v0 @kind object;
  #L32503a.  v1:= instanceof @variable v0 @type ^`java.text.SimpleDateFormat` @kind boolean;
  #L32503e.  v2:= 41I;
  #L325042.  v3:= "DefaultDateTypeAdapter(" @kind object;
  #L325046.  if v1 == 0 then goto L32507c;
  #L32504a.  v1:= new `java.lang.StringBuilder`;
  #L32504e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L325054.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32505a.  v0:= (`java.text.SimpleDateFormat`) v0 @kind object;
  #L32505e.  call temp:= `toPattern`(v0) @signature `Ljava/text/SimpleDateFormat;.toPattern:()Ljava/lang/String;` @kind virtual;
  #L325064.  v0:= temp @kind object;
  #L325066.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32506c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L325072.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L325078.  v0:= temp @kind object;
  #L32507a.  return v0 @kind object;
  #L32507c.  v1:= new `java.lang.StringBuilder`;
  #L325080.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L325086.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32508c.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L325092.  v0:= temp @kind object;
  #L325094.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L32509a.  v0:= temp @kind object;
  #L32509c.  goto L325066;
}
