record `g8.n$a` @kind class @AccessFlag  extends `d8.w` @kind class {
}
procedure `void` `<init>`(`g8.n$a` v0 @kind this) @signature `Lg8/n$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L327844.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L32784a.  return @kind void;
}
procedure `java.lang.Object` `c`(`g8.n$a` v0 @kind this, `l8.a` v1 @kind object) @signature `Lg8/n$a;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L327784.  call temp:= `f`(v0, v1) @signature `Lg8/n$a;.f:(Ll8/a;)Ljava/util/concurrent/atomic/AtomicIntegerArray;` @kind virtual;
  #L32778a.  v1:= temp @kind object;
  #L32778c.  return v1 @kind object;
}
procedure `void` `e`(`g8.n$a` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lg8/n$a;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L32785c.  v2:= (`java.util.concurrent.atomic.AtomicIntegerArray`) v2 @kind object;
  #L327860.  call `g`(v0, v1, v2) @signature `Lg8/n$a;.g:(Ll8/c;Ljava/util/concurrent/atomic/AtomicIntegerArray;)V` @kind virtual;
  #L327866.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicIntegerArray` `f`(`g8.n$a` v4 @kind this, `l8.a` v5 @kind object) @signature `Lg8/n$a;.f:(Ll8/a;)Ljava/util/concurrent/atomic/AtomicIntegerArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3277a0.  v0:= new `java.util.ArrayList`;
  #L3277a4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3277aa.  call `a`(v5) @signature `Ll8/a;.a:()V` @kind virtual;
  #L3277b0.  call temp:= `x`(v5) @signature `Ll8/a;.x:()Z` @kind virtual;
  #L3277b6.  v1:= temp;
  #L3277b8.  if v1 == 0 then goto L3277e2;
  #L3277bc.  call temp:= `N`(v5) @signature `Ll8/a;.N:()I` @kind virtual;
  #L3277c2.  v1:= temp;
  #L3277c4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3277ca.  v1:= temp @kind object;
  #L3277cc.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3277d2.  goto L3277b0;
  #L3277d4.  v5:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L3277d6.  v0:= new `d8.s`;
  #L3277da.  call `<init>`(v0, v5) @signature `Ld8/s;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3277e0.  throw v0;
  #L3277e2.  call `k`(v5) @signature `Ll8/a;.k:()V` @kind virtual;
  #L3277e8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3277ee.  v5:= temp;
  #L3277f0.  v1:= new `java.util.concurrent.atomic.AtomicIntegerArray`;
  #L3277f4.  call `<init>`(v1, v5) @signature `Ljava/util/concurrent/atomic/AtomicIntegerArray;.<init>:(I)V` @kind direct;
  #L3277fa.  v2:= 0I;
  #L3277fc.  if v2 >= v5 then goto L327820;
  #L327800.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L327806.  v3:= temp @kind object;
  #L327808.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L32780c.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L327812.  v3:= temp;
  #L327814.  call `set`(v1, v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicIntegerArray;.set:(II)V` @kind virtual;
  #L32781a.  v2:= v2 + 1;
  #L32781e.  goto L3277fc;
  #L327820.  return v1 @kind object;
  catch `java.lang.NumberFormatException` @[L3277bc..L3277d2] goto L3277d4;
}
procedure `void` `g`(`g8.n$a` v4 @kind this, `l8.c` v5 @kind object, `java.util.concurrent.atomic.AtomicIntegerArray` v6 @kind object) @signature `Lg8/n$a;.g:(Ll8/c;Ljava/util/concurrent/atomic/AtomicIntegerArray;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L327878.  call temp:= `e`(v5) @signature `Ll8/c;.e:()Ll8/c;` @kind virtual;
  #L32787e.  call temp:= `length`(v6) @signature `Ljava/util/concurrent/atomic/AtomicIntegerArray;.length:()I` @kind virtual;
  #L327884.  v0:= temp;
  #L327886.  v1:= 0I;
  #L327888.  if v1 >= v0 then goto L3278a2;
  #L32788c.  call temp:= `get`(v6, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerArray;.get:(I)I` @kind virtual;
  #L327892.  v2:= temp;
  #L327894.  v2:= (`long`) v2 @kind i2l;
  #L327896.  call temp:= `e0`(v5, v2) @signature `Ll8/c;.e0:(J)Ll8/c;` @kind virtual;
  #L32789c.  v1:= v1 + 1;
  #L3278a0.  goto L327888;
  #L3278a2.  call temp:= `k`(v5) @signature `Ll8/c;.k:()Ll8/c;` @kind virtual;
  #L3278a8.  return @kind void;
}
