record `g8.n$e0` @kind class @AccessFlag  extends `d8.w` @kind class {
}
procedure `void` `<init>`(`g8.n$e0` v0 @kind this) @signature `Lg8/n$e0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L329520.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L329526.  return @kind void;
}
procedure `java.lang.Object` `c`(`g8.n$e0` v0 @kind this, `l8.a` v1 @kind object) @signature `Lg8/n$e0;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L329504.  call temp:= `f`(v0, v1) @signature `Lg8/n$e0;.f:(Ll8/a;)Ljava/lang/Number;` @kind virtual;
  #L32950a.  v1:= temp @kind object;
  #L32950c.  return v1 @kind object;
}
procedure `void` `e`(`g8.n$e0` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lg8/n$e0;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L329550.  v2:= (`java.lang.Number`) v2 @kind object;
  #L329554.  call `g`(v0, v1, v2) @signature `Lg8/n$e0;.g:(Ll8/c;Ljava/lang/Number;)V` @kind virtual;
  #L32955a.  return @kind void;
}
procedure `java.lang.Number` `f`(`g8.n$e0` v2 @kind this, `l8.a` v3 @kind object) @signature `Lg8/n$e0;.f:(Ll8/a;)Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3294a8.  call temp:= `f0`(v3) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L3294ae.  v0:= temp @kind object;
  #L3294b0.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L3294b4.  if v0 != v1 then goto L3294c2;
  #L3294b8.  call `b0`(v3) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L3294be.  v3:= 0I;
  #L3294c0.  return v3 @kind object;
  #L3294c2.  call temp:= `N`(v3) @signature `Ll8/a;.N:()I` @kind virtual;
  #L3294c8.  v3:= temp;
  #L3294ca.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3294d0.  v3:= temp @kind object;
  #L3294d2.  return v3 @kind object;
  #L3294d4.  v3:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L3294d6.  v0:= new `d8.s`;
  #L3294da.  call `<init>`(v0, v3) @signature `Ld8/s;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3294e0.  throw v0;
  catch `java.lang.NumberFormatException` @[L3294c2..L3294d2] goto L3294d4;
}
procedure `void` `g`(`g8.n$e0` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Number` v2 @kind object) @signature `Lg8/n$e0;.g:(Ll8/c;Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;

  #L329538.  call temp:= `g0`(v1, v2) @signature `Ll8/c;.g0:(Ljava/lang/Number;)Ll8/c;` @kind virtual;
  #L32953e.  return @kind void;
}
