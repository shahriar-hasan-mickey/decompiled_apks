record `l5.l` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v0 @kind object, `java.lang.Iterable` v1 @kind object) @signature `Ll5/l;.a:(Ljava/lang/String;Ljava/lang/Iterable;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c4d44.  call temp:= `d`(v0, v1) @signature `Ll5/l;.d:(Ljava/lang/String;Ljava/lang/Iterable;)Ljava/lang/String;` @kind static;
  #L3c4d4a.  v0:= temp @kind object;
  #L3c4d4c.  return v0 @kind object;
}
procedure `l5.k` `b`(`l5.k` v1 @kind object, `l5.k` v2 @kind object) @signature `Ll5/l;.b:(Ll5/k;Ll5/k;)Ll5/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c4e04.  v0:= new `l5.l$b`;
  #L3c4e08.  call temp:= `i`(v1) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c4e0e.  v1:= temp @kind object;
  #L3c4e10.  v1:= (`l5.k`) v1 @kind object;
  #L3c4e14.  call temp:= `i`(v2) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c4e1a.  v2:= temp @kind object;
  #L3c4e1c.  v2:= (`l5.k`) v2 @kind object;
  #L3c4e20.  call temp:= `c`(v1, v2) @signature `Ll5/l;.c:(Ll5/k;Ll5/k;)Ljava/util/List;` @kind static;
  #L3c4e26.  v1:= temp @kind object;
  #L3c4e28.  v2:= 0I;
  #L3c4e2a.  call `<init>`(v0, v1, v2) @signature `Ll5/l$b;.<init>:(Ljava/util/List;Ll5/l$a;)V` @kind direct;
  #L3c4e30.  return v0 @kind object;
}
procedure `java.util.List` `c`(`l5.k` v2 @kind object, `l5.k` v3 @kind object) @signature `Ll5/l;.c:(Ll5/k;Ll5/k;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3c4dd8.  v0:= 2I;
  #L3c4dda.  v0:= new `l5.k`[v0];
  #L3c4dde.  v1:= 0I;
  #L3c4de0.  v0[v1]:= v2 @kind object;
  #L3c4de4.  v2:= 1I;
  #L3c4de6.  v0[v2]:= v3 @kind object;
  #L3c4dea.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3c4df0.  v2:= temp @kind object;
  #L3c4df2.  return v2 @kind object;
}
procedure `java.lang.String` `d`(`java.lang.String` v2 @kind object, `java.lang.Iterable` v3 @kind object) @signature `Ll5/l;.d:(Ljava/lang/String;Ljava/lang/Iterable;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3c4d60.  v0:= new `java.lang.StringBuilder`;
  #L3c4d64.  v1:= "Predicates." @kind object;
  #L3c4d68.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c4d6e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c4d74.  v2:= 40I;
  #L3c4d78.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c4d7e.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3c4d84.  v2:= temp @kind object;
  #L3c4d86.  v3:= 1I;
  #L3c4d88.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3c4d8e.  v1:= temp;
  #L3c4d90.  if v1 == 0 then goto L3c4db4;
  #L3c4d94.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3c4d9a.  v1:= temp @kind object;
  #L3c4d9c.  if v3 != 0 then goto L3c4daa;
  #L3c4da0.  v3:= 44I;
  #L3c4da4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c4daa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c4db0.  v3:= 0I;
  #L3c4db2.  goto L3c4d88;
  #L3c4db4.  v2:= 41I;
  #L3c4db8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c4dbe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c4dc4.  v2:= temp @kind object;
  #L3c4dc6.  return v2 @kind object;
}
