record `l5.m$a$a` @kind class @AccessFlag  extends `l5.m$b` @kind class {
  `l5.m$a` `l5.m$a$a.v` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`l5.m$a$a` v0 @kind this, `l5.m$a` v1 @kind object, `l5.m` v2 @kind object, `java.lang.CharSequence` v3 @kind object) @signature `Ll5/m$a$a;.<init>:(Ll5/m$a;Ll5/m;Ljava/lang/CharSequence;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3c4e84.  v0.`l5.m$a$a.v` @type ^`l5.m$a` := v1 @kind object;
  #L3c4e88.  call `<init>`(v0, v2, v3) @signature `Ll5/m$b;.<init>:(Ll5/m;Ljava/lang/CharSequence;)V` @kind direct;
  #L3c4e8e.  return @kind void;
}
procedure `int` `g`(`l5.m$a$a` v0 @kind this, `int` v1 ) @signature `Ll5/m$a$a;.g:(I)I` @AccessFlag  {
    temp;

  #L3c4e44.  v1:= v1 + 1;
  #L3c4e48.  return v1;
}
procedure `int` `h`(`l5.m$a$a` v2 @kind this, `int` v3 ) @signature `Ll5/m$a$a;.h:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3c4e5c.  v0:= v2.`l5.m$a$a.v` @type ^`l5.m$a` @kind object;
  #L3c4e60.  v0:= v0.`l5.m$a.a` @type ^`l5.c` @kind object;
  #L3c4e64.  v1:= v2.`l5.m$b.q` @type ^`java.lang.CharSequence` @kind object;
  #L3c4e68.  call temp:= `c`(v0, v1, v3) @signature `Ll5/c;.c:(Ljava/lang/CharSequence;I)I` @kind virtual;
  #L3c4e6e.  v3:= temp;
  #L3c4e70.  return v3;
}
