record `l5.b` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `a`(`java.lang.CharSequence` v7 @kind object, `java.lang.CharSequence` v8 @kind object) @signature `Ll5/b;.a:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c4328.  call temp:= `length`(v7) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3c432e.  v0:= temp;
  #L3c4330.  v1:= 1I;
  #L3c4332.  if v7 != v8 then goto L3c4338;
  #L3c4336.  return v1;
  #L3c4338.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3c433e.  v2:= temp;
  #L3c4340.  v3:= 0I;
  #L3c4342.  if v0 == v2 then goto L3c4348;
  #L3c4346.  return v3;
  #L3c4348.  v2:= 0I;
  #L3c434a.  if v2 >= v0 then goto L3c4388;
  #L3c434e.  call temp:= `charAt`(v7, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3c4354.  v4:= temp;
  #L3c4356.  call temp:= `charAt`(v8, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3c435c.  v5:= temp;
  #L3c435e.  if v4 != v5 then goto L3c4364;
  #L3c4362.  goto L3c4380;
  #L3c4364.  call temp:= `b`(v4) @signature `Ll5/b;.b:(C)I` @kind static;
  #L3c436a.  v4:= temp;
  #L3c436c.  v6:= 26I;
  #L3c4370.  if v4 >= v6 then goto L3c4386;
  #L3c4374.  call temp:= `b`(v5) @signature `Ll5/b;.b:(C)I` @kind static;
  #L3c437a.  v5:= temp;
  #L3c437c.  if v4 != v5 then goto L3c4386;
  #L3c4380.  v2:= v2 + 1;
  #L3c4384.  goto L3c434a;
  #L3c4386.  return v3;
  #L3c4388.  return v1;
}
procedure `int` `b`(`char` v0 ) @signature `Ll5/b;.b:(C)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3c43ec.  v0:= v0 ^| 32;
  #L3c43f0.  v0:= v0 + -97;
  #L3c43f4.  v0:= (`char`) v0 @kind i2c;
  #L3c43f6.  return v0;
}
procedure `boolean` `c`(`char` v1 ) @signature `Ll5/b;.c:(C)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c439c.  v0:= 97I;
  #L3c43a0.  if v1 < v0 then goto L3c43b0;
  #L3c43a4.  v0:= 122I;
  #L3c43a8.  if v1 > v0 then goto L3c43b0;
  #L3c43ac.  v1:= 1I;
  #L3c43ae.  goto L3c43b2;
  #L3c43b0.  v1:= 0I;
  #L3c43b2.  return v1;
}
procedure `boolean` `d`(`char` v1 ) @signature `Ll5/b;.d:(C)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c43c4.  v0:= 65I;
  #L3c43c8.  if v1 < v0 then goto L3c43d8;
  #L3c43cc.  v0:= 90I;
  #L3c43d0.  if v1 > v0 then goto L3c43d8;
  #L3c43d4.  v1:= 1I;
  #L3c43d6.  goto L3c43da;
  #L3c43d8.  v1:= 0I;
  #L3c43da.  return v1;
}
procedure `java.lang.String` `e`(`java.lang.String` v4 @kind object) @signature `Ll5/b;.e:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c4408.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c440e.  v0:= temp;
  #L3c4410.  v1:= 0I;
  #L3c4412.  if v1 >= v0 then goto L3c4466;
  #L3c4416.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3c441c.  v2:= temp;
  #L3c441e.  call temp:= `d`(v2) @signature `Ll5/b;.d:(C)Z` @kind static;
  #L3c4424.  v2:= temp;
  #L3c4426.  if v2 == 0 then goto L3c4460;
  #L3c442a.  call temp:= `toCharArray`(v4) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L3c4430.  v4:= temp @kind object;
  #L3c4432.  if v1 >= v0 then goto L3c4456;
  #L3c4436.  v2:= v4[v1] @kind char;
  #L3c443a.  call temp:= `d`(v2) @signature `Ll5/b;.d:(C)Z` @kind static;
  #L3c4440.  v3:= temp;
  #L3c4442.  if v3 == 0 then goto L3c4450;
  #L3c4446.  v2:= v2 ^~ 32;
  #L3c444a.  v2:= (`char`) v2 @kind i2c;
  #L3c444c.  v4[v1]:= v2 @kind char;
  #L3c4450.  v1:= v1 + 1;
  #L3c4454.  goto L3c4432;
  #L3c4456.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:([C)Ljava/lang/String;` @kind static;
  #L3c445c.  v4:= temp @kind object;
  #L3c445e.  return v4 @kind object;
  #L3c4460.  v1:= v1 + 1;
  #L3c4464.  goto L3c4412;
  #L3c4466.  return v4 @kind object;
}
procedure `java.lang.String` `f`(`java.lang.String` v4 @kind object) @signature `Ll5/b;.f:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c4478.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c447e.  v0:= temp;
  #L3c4480.  v1:= 0I;
  #L3c4482.  if v1 >= v0 then goto L3c44d6;
  #L3c4486.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3c448c.  v2:= temp;
  #L3c448e.  call temp:= `c`(v2) @signature `Ll5/b;.c:(C)Z` @kind static;
  #L3c4494.  v2:= temp;
  #L3c4496.  if v2 == 0 then goto L3c44d0;
  #L3c449a.  call temp:= `toCharArray`(v4) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L3c44a0.  v4:= temp @kind object;
  #L3c44a2.  if v1 >= v0 then goto L3c44c6;
  #L3c44a6.  v2:= v4[v1] @kind char;
  #L3c44aa.  call temp:= `c`(v2) @signature `Ll5/b;.c:(C)Z` @kind static;
  #L3c44b0.  v3:= temp;
  #L3c44b2.  if v3 == 0 then goto L3c44c0;
  #L3c44b6.  v2:= v2 ^~ 32;
  #L3c44ba.  v2:= (`char`) v2 @kind i2c;
  #L3c44bc.  v4[v1]:= v2 @kind char;
  #L3c44c0.  v1:= v1 + 1;
  #L3c44c4.  goto L3c44a2;
  #L3c44c6.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:([C)Ljava/lang/String;` @kind static;
  #L3c44cc.  v4:= temp @kind object;
  #L3c44ce.  return v4 @kind object;
  #L3c44d0.  v1:= v1 + 1;
  #L3c44d4.  goto L3c4482;
  #L3c44d6.  return v4 @kind object;
}
