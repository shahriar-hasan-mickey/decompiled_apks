record `l5.a` @kind class @AccessFlag ABSTRACT extends `java.util.Iterator` @kind interface {
  `l5.a$b` `l5.a.o` @AccessFlag PRIVATE;
  `java.lang.Object` `l5.a.p` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`l5.a` v1 @kind this) @signature `Ll5/a;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L3c42ec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c42f2.  v0:= `@@l5.a$b.p` @type ^`l5.a$b` @kind object;
  #L3c42f6.  v1.`l5.a.o` @type ^`l5.a$b` := v0 @kind object;
  #L3c42fa.  return @kind void;
}
procedure `boolean` `e`(`l5.a` v2 @kind this) @signature `Ll5/a;.e:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3c424c.  v0:= `@@l5.a$b.r` @type ^`l5.a$b` @kind object;
  #L3c4250.  v2.`l5.a.o` @type ^`l5.a$b` := v0 @kind object;
  #L3c4254.  call temp:= `a`(v2) @signature `Ll5/a;.a:()Ljava/lang/Object;` @kind virtual;
  #L3c425a.  v0:= temp @kind object;
  #L3c425c.  v2.`l5.a.p` @type ^`java.lang.Object` := v0 @kind object;
  #L3c4260.  v0:= v2.`l5.a.o` @type ^`l5.a$b` @kind object;
  #L3c4264.  v1:= `@@l5.a$b.q` @type ^`l5.a$b` @kind object;
  #L3c4268.  if v0 == v1 then goto L3c4278;
  #L3c426c.  v0:= `@@l5.a$b.o` @type ^`l5.a$b` @kind object;
  #L3c4270.  v2.`l5.a.o` @type ^`l5.a$b` := v0 @kind object;
  #L3c4274.  v0:= 1I;
  #L3c4276.  return v0;
  #L3c4278.  v0:= 0I;
  #L3c427a.  return v0;
}
procedure `java.lang.Object` `a`() @signature `Ll5/a;.a:()Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `d`(`l5.a` v1 @kind this) @signature `Ll5/a;.d:()Ljava/lang/Object;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L3c428c.  v0:= `@@l5.a$b.q` @type ^`l5.a$b` @kind object;
  #L3c4290.  v1.`l5.a.o` @type ^`l5.a$b` := v0 @kind object;
  #L3c4294.  v0:= 0I;
  #L3c4296.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`l5.a` v4 @kind this) @signature `Ll5/a;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c41f4.  v0:= v4.`l5.a.o` @type ^`l5.a$b` @kind object;
  #L3c41f8.  v1:= `@@l5.a$b.r` @type ^`l5.a$b` @kind object;
  #L3c41fc.  v2:= 0I;
  #L3c41fe.  v3:= 1I;
  #L3c4200.  if v0 == v1 then goto L3c4208;
  #L3c4204.  v0:= 1I;
  #L3c4206.  goto L3c420a;
  #L3c4208.  v0:= 0I;
  #L3c420a.  call `n`(v0) @signature `Ll5/j;.n:(Z)V` @kind static;
  #L3c4210.  v0:= `@@l5.a$a.a` @type ^`int`[] @kind object;
  #L3c4214.  v1:= v4.`l5.a.o` @type ^`l5.a$b` @kind object;
  #L3c4218.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3c421e.  v1:= temp;
  #L3c4220.  v0:= v0[v1];
  #L3c4224.  if v0 == v3 then goto L3c423a;
  #L3c4228.  v1:= 2I;
  #L3c422a.  if v0 == v1 then goto L3c4238;
  #L3c422e.  call temp:= `e`(v4) @signature `Ll5/a;.e:()Z` @kind direct;
  #L3c4234.  v0:= temp;
  #L3c4236.  return v0;
  #L3c4238.  return v3;
  #L3c423a.  return v2;
}
procedure `java.lang.Object` `next`(`l5.a` v2 @kind this) @signature `Ll5/a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3c42a8.  call temp:= `hasNext`(v2) @signature `Ll5/a;.hasNext:()Z` @kind virtual;
  #L3c42ae.  v0:= temp;
  #L3c42b0.  if v0 == 0 then goto L3c42d0;
  #L3c42b4.  v0:= `@@l5.a$b.p` @type ^`l5.a$b` @kind object;
  #L3c42b8.  v2.`l5.a.o` @type ^`l5.a$b` := v0 @kind object;
  #L3c42bc.  v0:= v2.`l5.a.p` @type ^`java.lang.Object` @kind object;
  #L3c42c0.  call temp:= `a`(v0) @signature `Ll5/h;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c42c6.  v0:= temp @kind object;
  #L3c42c8.  v1:= 0I;
  #L3c42ca.  v2.`l5.a.p` @type ^`java.lang.Object` := v1 @kind object;
  #L3c42ce.  return v0 @kind object;
  #L3c42d0.  v0:= new `java.util.NoSuchElementException`;
  #L3c42d4.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3c42da.  throw v0;
}
procedure `void` `remove`(`l5.a` v1 @kind this) @signature `Ll5/a;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3c430c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3c4310.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3c4316.  throw v0;
}
