record `l5.n` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v6 @kind object, `java.lang.Object`[] v7 @kind object) @signature `Ll5/n;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3c51f0.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3c51f6.  v6:= temp @kind object;
  #L3c51f8.  v0:= 0I;
  #L3c51fa.  if v7 != 0 then goto L3c520e;
  #L3c51fe.  v7:= 1I;
  #L3c5200.  v7:= new `java.lang.Object`[v7];
  #L3c5204.  v1:= "(Object[])null" @kind object;
  #L3c5208.  v7[v0]:= v1 @kind object;
  #L3c520c.  goto L3c522c;
  #L3c520e.  v1:= 0I;
  #L3c5210.  v2:= length @variable v7;
  #L3c5212.  if v1 >= v2 then goto L3c522c;
  #L3c5216.  v2:= v7[v1] @kind object;
  #L3c521a.  call temp:= `b`(v2) @signature `Ll5/n;.b:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3c5220.  v2:= temp @kind object;
  #L3c5222.  v7[v1]:= v2 @kind object;
  #L3c5226.  v1:= v1 + 1;
  #L3c522a.  goto L3c5210;
  #L3c522c.  v1:= new `java.lang.StringBuilder`;
  #L3c5230.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c5236.  v2:= temp;
  #L3c5238.  v3:= length @variable v7;
  #L3c523a.  v3:= v3 * 16;
  #L3c523e.  v2:= v2 + v3 @kind int;
  #L3c5240.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3c5246.  v2:= 0I;
  #L3c5248.  v3:= length @variable v7;
  #L3c524a.  if v0 >= v3 then goto L3c5282;
  #L3c524e.  v3:= "%s" @kind object;
  #L3c5252.  call temp:= `indexOf`(v6, v3, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L3c5258.  v3:= temp;
  #L3c525a.  v4:= -1I;
  #L3c525c.  if v3 != v4 then goto L3c5262;
  #L3c5260.  goto L3c5282;
  #L3c5262.  call temp:= `append`(v1, v6, v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5268.  v2:= v0 + 1;
  #L3c526c.  v0:= v7[v0] @kind object;
  #L3c5270.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5276.  v0:= v3 + 2;
  #L3c527a.  v5:= v2;
  #L3c527c.  v2:= v0;
  #L3c527e.  v0:= v5;
  #L3c5280.  goto L3c5248;
  #L3c5282.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c5288.  v3:= temp;
  #L3c528a.  call temp:= `append`(v1, v6, v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5290.  v6:= length @variable v7;
  #L3c5292.  if v0 >= v6 then goto L3c52da;
  #L3c5296.  v6:= " [" @kind object;
  #L3c529a.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c52a0.  v6:= v0 + 1;
  #L3c52a4.  v0:= v7[v0] @kind object;
  #L3c52a8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c52ae.  v0:= length @variable v7;
  #L3c52b0.  if v6 >= v0 then goto L3c52d0;
  #L3c52b4.  v0:= ", " @kind object;
  #L3c52b8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c52be.  v0:= v6 + 1;
  #L3c52c2.  v6:= v7[v6] @kind object;
  #L3c52c6.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c52cc.  v6:= v0;
  #L3c52ce.  goto L3c52ae;
  #L3c52d0.  v6:= 93I;
  #L3c52d4.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c52da.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c52e0.  v6:= temp @kind object;
  #L3c52e2.  return v6 @kind object;
}
procedure `java.lang.String` `b`(`java.lang.Object` v6 @kind object) @signature `Ll5/n;.b:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3c52f4.  if v6 != 0 then goto L3c52fe;
  #L3c52f8.  v6:= "null" @kind object;
  #L3c52fc.  return v6 @kind object;
  #L3c52fe.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c5304.  v6:= temp @kind object;
  #L3c5306.  return v6 @kind object;
  #L3c5308.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L3c530a.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3c5310.  v1:= temp @kind object;
  #L3c5312.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3c5318.  v1:= temp @kind object;
  #L3c531a.  call temp:= `identityHashCode`(v6) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L3c5320.  v6:= temp;
  #L3c5322.  call temp:= `toHexString`(v6) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L3c5328.  v6:= temp @kind object;
  #L3c532a.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c5330.  v2:= temp;
  #L3c5332.  v2:= v2 + 1;
  #L3c5336.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3c533c.  v3:= temp @kind object;
  #L3c533e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c5344.  v3:= temp;
  #L3c5346.  v2:= v2 + v3 @kind int;
  #L3c5348.  v3:= new `java.lang.StringBuilder`;
  #L3c534c.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3c5352.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5358.  v1:= 64I;
  #L3c535c.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5362.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5368.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c536e.  v6:= temp @kind object;
  #L3c5370.  v1:= "com.google.common.base.Strings" @kind object;
  #L3c5374.  call temp:= `getLogger`(v1) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L3c537a.  v1:= temp @kind object;
  #L3c537c.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L3c5380.  v3:= "Exception during lenientFormat for " @kind object;
  #L3c5384.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3c538a.  v4:= temp @kind object;
  #L3c538c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c5392.  v5:= temp;
  #L3c5394.  if v5 == 0 then goto L3c53a2;
  #L3c5398.  call temp:= `concat`(v3, v4) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3c539e.  v3:= temp @kind object;
  #L3c53a0.  goto L3c53ae;
  #L3c53a2.  v4:= new `java.lang.String`;
  #L3c53a6.  call `<init>`(v4, v3) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c53ac.  v3:= v4 @kind object;
  #L3c53ae.  call `log`(v1, v2, v3, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3c53b4.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3c53ba.  v0:= temp @kind object;
  #L3c53bc.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3c53c2.  v0:= temp @kind object;
  #L3c53c4.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3c53ca.  v1:= temp @kind object;
  #L3c53cc.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c53d2.  v1:= temp;
  #L3c53d4.  v1:= v1 + 9;
  #L3c53d8.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c53de.  v2:= temp;
  #L3c53e0.  v1:= v1 + v2 @kind int;
  #L3c53e2.  v2:= new `java.lang.StringBuilder`;
  #L3c53e6.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3c53ec.  v1:= "<" @kind object;
  #L3c53f0.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c53f6.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c53fc.  v6:= " threw " @kind object;
  #L3c5400.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5406.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c540c.  v6:= ">" @kind object;
  #L3c5410.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5416.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c541c.  v6:= temp @kind object;
  #L3c541e.  return v6 @kind object;
  catch `java.lang.Exception` @[L3c52fe..L3c5306] goto L3c5308;
}
