record `k6.i` @kind class @AccessFlag PUBLIC {
  `k6.d` `k6.i.a` @AccessFlag PRIVATE_FINAL;
  `j6.h` `k6.i.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `k6.i.c` @AccessFlag PRIVATE_FINAL;
  `k6.i$a` `k6.i.d` @AccessFlag PRIVATE_FINAL;
  `k6.i$a` `k6.i.e` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicMarkableReference` `k6.i.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`k6.i` v3 @kind this, `java.lang.String` v4 @kind object, `o6.f` v5 @kind object, `j6.h` v6 @kind object) @signature `Lk6/i;.<init>:(Ljava/lang/String;Lo6/f;Lj6/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3aca50.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3aca56.  v0:= new `k6.i$a`;
  #L3aca5a.  v1:= 0I;
  #L3aca5c.  call `<init>`(v0, v3, v1) @signature `Lk6/i$a;.<init>:(Lk6/i;Z)V` @kind direct;
  #L3aca62.  v3.`k6.i.d` @type ^`k6.i$a` := v0 @kind object;
  #L3aca66.  v0:= new `k6.i$a`;
  #L3aca6a.  v2:= 1I;
  #L3aca6c.  call `<init>`(v0, v3, v2) @signature `Lk6/i$a;.<init>:(Lk6/i;Z)V` @kind direct;
  #L3aca72.  v3.`k6.i.e` @type ^`k6.i$a` := v0 @kind object;
  #L3aca76.  v0:= new `java.util.concurrent.atomic.AtomicMarkableReference`;
  #L3aca7a.  v2:= 0I;
  #L3aca7c.  call `<init>`(v0, v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicMarkableReference;.<init>:(Ljava/lang/Object;Z)V` @kind direct;
  #L3aca82.  v3.`k6.i.f` @type ^`java.util.concurrent.atomic.AtomicMarkableReference` := v0 @kind object;
  #L3aca86.  v3.`k6.i.c` @type ^`java.lang.String` := v4 @kind object;
  #L3aca8a.  v4:= new `k6.d`;
  #L3aca8e.  call `<init>`(v4, v5) @signature `Lk6/d;.<init>:(Lo6/f;)V` @kind direct;
  #L3aca94.  v3.`k6.i.a` @type ^`k6.d` := v4 @kind object;
  #L3aca98.  v3.`k6.i.b` @type ^`j6.h` := v6 @kind object;
  #L3aca9c.  return @kind void;
}
procedure `java.lang.Object` `a`(`k6.i` v0 @kind object) @signature `Lk6/i;.a:(Lk6/i;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3ac8e0.  call temp:= `h`(v0) @signature `Lk6/i;.h:()Ljava/lang/Object;` @kind direct;
  #L3ac8e6.  v0:= temp @kind object;
  #L3ac8e8.  return v0 @kind object;
}
procedure `j6.h` `b`(`k6.i` v0 @kind object) @signature `Lk6/i;.b:(Lk6/i;)Lj6/h;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3ac8c8.  v0:= v0.`k6.i.b` @type ^`j6.h` @kind object;
  #L3ac8cc.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`k6.i` v0 @kind object) @signature `Lk6/i;.c:(Lk6/i;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3ac918.  v0:= v0.`k6.i.c` @type ^`java.lang.String` @kind object;
  #L3ac91c.  return v0 @kind object;
}
procedure `k6.d` `d`(`k6.i` v0 @kind object) @signature `Lk6/i;.d:(Lk6/i;)Lk6/d;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3ac9b8.  v0:= v0.`k6.i.a` @type ^`k6.d` @kind object;
  #L3ac9bc.  return v0 @kind object;
}
procedure `java.lang.Object` `h`(`k6.i` v1 @kind this) @signature `Lk6/i;.h:()Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L3ac8fc.  call `k`(v1) @signature `Lk6/i;.k:()V` @kind direct;
  #L3ac902.  v0:= 0I;
  #L3ac904.  return v0 @kind object;
}
procedure `k6.i` `i`(`java.lang.String` v3 @kind object, `o6.f` v4 @kind object, `j6.h` v5 @kind object) @signature `Lk6/i;.i:(Ljava/lang/String;Lo6/f;Lj6/h;)Lk6/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3ac9d0.  v0:= new `k6.d`;
  #L3ac9d4.  call `<init>`(v0, v4) @signature `Lk6/d;.<init>:(Lo6/f;)V` @kind direct;
  #L3ac9da.  v1:= new `k6.i`;
  #L3ac9de.  call `<init>`(v1, v3, v4, v5) @signature `Lk6/i;.<init>:(Ljava/lang/String;Lo6/f;Lj6/h;)V` @kind direct;
  #L3ac9e4.  v4:= v1.`k6.i.d` @type ^`k6.i$a` @kind object;
  #L3ac9e8.  v4:= v4.`k6.i$a.a` @type ^`java.util.concurrent.atomic.AtomicMarkableReference` @kind object;
  #L3ac9ec.  call temp:= `getReference`(v4) @signature `Ljava/util/concurrent/atomic/AtomicMarkableReference;.getReference:()Ljava/lang/Object;` @kind virtual;
  #L3ac9f2.  v4:= temp @kind object;
  #L3ac9f4.  v4:= (`k6.b`) v4 @kind object;
  #L3ac9f8.  v5:= 0I;
  #L3ac9fa.  call temp:= `g`(v0, v3, v5) @signature `Lk6/d;.g:(Ljava/lang/String;Z)Ljava/util/Map;` @kind virtual;
  #L3aca00.  v2:= temp @kind object;
  #L3aca02.  call `e`(v4, v2) @signature `Lk6/b;.e:(Ljava/util/Map;)V` @kind virtual;
  #L3aca08.  v4:= v1.`k6.i.e` @type ^`k6.i$a` @kind object;
  #L3aca0c.  v4:= v4.`k6.i$a.a` @type ^`java.util.concurrent.atomic.AtomicMarkableReference` @kind object;
  #L3aca10.  call temp:= `getReference`(v4) @signature `Ljava/util/concurrent/atomic/AtomicMarkableReference;.getReference:()Ljava/lang/Object;` @kind virtual;
  #L3aca16.  v4:= temp @kind object;
  #L3aca18.  v4:= (`k6.b`) v4 @kind object;
  #L3aca1c.  v2:= 1I;
  #L3aca1e.  call temp:= `g`(v0, v3, v2) @signature `Lk6/d;.g:(Ljava/lang/String;Z)Ljava/util/Map;` @kind virtual;
  #L3aca24.  v2:= temp @kind object;
  #L3aca26.  call `e`(v4, v2) @signature `Lk6/b;.e:(Ljava/util/Map;)V` @kind virtual;
  #L3aca2c.  v4:= v1.`k6.i.f` @type ^`java.util.concurrent.atomic.AtomicMarkableReference` @kind object;
  #L3aca30.  call temp:= `h`(v0, v3) @signature `Lk6/d;.h:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3aca36.  v3:= temp @kind object;
  #L3aca38.  call `set`(v4, v3, v5) @signature `Ljava/util/concurrent/atomic/AtomicMarkableReference;.set:(Ljava/lang/Object;Z)V` @kind virtual;
  #L3aca3e.  return v1 @kind object;
}
procedure `java.lang.String` `j`(`java.lang.String` v1 @kind object, `o6.f` v2 @kind object) @signature `Lk6/i;.j:(Ljava/lang/String;Lo6/f;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ac954.  v0:= new `k6.d`;
  #L3ac958.  call `<init>`(v0, v2) @signature `Lk6/d;.<init>:(Lo6/f;)V` @kind direct;
  #L3ac95e.  call temp:= `h`(v0, v1) @signature `Lk6/d;.h:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3ac964.  v1:= temp @kind object;
  #L3ac966.  return v1 @kind object;
}
procedure `void` `k`(`k6.i` v5 @kind this) @signature `Lk6/i;.k:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3acab0.  v0:= v5.`k6.i.f` @type ^`java.util.concurrent.atomic.AtomicMarkableReference` @kind object;
  #L3acab4.  @monitorenter v0
  #L3acab6.  v1:= v5.`k6.i.f` @type ^`java.util.concurrent.atomic.AtomicMarkableReference` @kind object;
  #L3acaba.  call temp:= `isMarked`(v1) @signature `Ljava/util/concurrent/atomic/AtomicMarkableReference;.isMarked:()Z` @kind virtual;
  #L3acac0.  v1:= temp;
  #L3acac2.  v2:= 0I;
  #L3acac4.  if v1 == 0 then goto L3acae0;
  #L3acac8.  call temp:= `g`(v5) @signature `Lk6/i;.g:()Ljava/lang/String;` @kind virtual;
  #L3acace.  v1:= temp @kind object;
  #L3acad0.  v3:= 1I;
  #L3acad2.  v4:= v5.`k6.i.f` @type ^`java.util.concurrent.atomic.AtomicMarkableReference` @kind object;
  #L3acad6.  call `set`(v4, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicMarkableReference;.set:(Ljava/lang/Object;Z)V` @kind virtual;
  #L3acadc.  v2:= 1I;
  #L3acade.  goto L3acae2;
  #L3acae0.  v1:= 0I;
  #L3acae2.  @monitorexit v0
  #L3acae4.  if v2 == 0 then goto L3acaf6;
  #L3acae8.  v0:= v5.`k6.i.a` @type ^`k6.d` @kind object;
  #L3acaec.  v2:= v5.`k6.i.c` @type ^`java.lang.String` @kind object;
  #L3acaf0.  call `m`(v0, v2, v1) @signature `Lk6/d;.m:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L3acaf6.  return @kind void;
  #L3acaf8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3acafa.  @monitorexit v0
  #L3acafc.  throw v1;
  catch `java.lang.Throwable` @[L3acab6..L3acae4] goto L3acaf8;
  catch `java.lang.Throwable` @[L3acafa..L3acafc] goto L3acaf8;
}
procedure `java.util.Map` `e`(`k6.i` v1 @kind this) @signature `Lk6/i;.e:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ac978.  v0:= v1.`k6.i.d` @type ^`k6.i$a` @kind object;
  #L3ac97c.  call temp:= `b`(v0) @signature `Lk6/i$a;.b:()Ljava/util/Map;` @kind virtual;
  #L3ac982.  v0:= temp @kind object;
  #L3ac984.  return v0 @kind object;
}
procedure `java.util.Map` `f`(`k6.i` v1 @kind this) @signature `Lk6/i;.f:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ac998.  v0:= v1.`k6.i.e` @type ^`k6.i$a` @kind object;
  #L3ac99c.  call temp:= `b`(v0) @signature `Lk6/i$a;.b:()Ljava/util/Map;` @kind virtual;
  #L3ac9a2.  v0:= temp @kind object;
  #L3ac9a4.  return v0 @kind object;
}
procedure `java.lang.String` `g`(`k6.i` v1 @kind this) @signature `Lk6/i;.g:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ac930.  v0:= v1.`k6.i.f` @type ^`java.util.concurrent.atomic.AtomicMarkableReference` @kind object;
  #L3ac934.  call temp:= `getReference`(v0) @signature `Ljava/util/concurrent/atomic/AtomicMarkableReference;.getReference:()Ljava/lang/Object;` @kind virtual;
  #L3ac93a.  v0:= temp @kind object;
  #L3ac93c.  v0:= (`java.lang.String`) v0 @kind object;
  #L3ac940.  return v0 @kind object;
}
procedure `boolean` `l`(`k6.i` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lk6/i;.l:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ac888.  v0:= v1.`k6.i.d` @type ^`k6.i$a` @kind object;
  #L3ac88c.  call temp:= `f`(v0, v2, v3) @signature `Lk6/i$a;.f:(Ljava/lang/String;Ljava/lang/String;)Z` @kind virtual;
  #L3ac892.  v2:= temp;
  #L3ac894.  return v2;
}
procedure `boolean` `m`(`k6.i` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lk6/i;.m:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ac8a8.  v0:= v1.`k6.i.e` @type ^`k6.i$a` @kind object;
  #L3ac8ac.  call temp:= `f`(v0, v2, v3) @signature `Lk6/i$a;.f:(Ljava/lang/String;Ljava/lang/String;)Z` @kind virtual;
  #L3ac8b2.  v2:= temp;
  #L3ac8b4.  return v2;
}
procedure `void` `n`(`k6.i` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lk6/i;.n:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3acb24.  v0:= 1024I;
  #L3acb28.  call temp:= `c`(v4, v0) @signature `Lk6/b;.c:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L3acb2e.  v4:= temp @kind object;
  #L3acb30.  v0:= v3.`k6.i.f` @type ^`java.util.concurrent.atomic.AtomicMarkableReference` @kind object;
  #L3acb34.  @monitorenter v0
  #L3acb36.  v1:= v3.`k6.i.f` @type ^`java.util.concurrent.atomic.AtomicMarkableReference` @kind object;
  #L3acb3a.  call temp:= `getReference`(v1) @signature `Ljava/util/concurrent/atomic/AtomicMarkableReference;.getReference:()Ljava/lang/Object;` @kind virtual;
  #L3acb40.  v1:= temp @kind object;
  #L3acb42.  v1:= (`java.lang.String`) v1 @kind object;
  #L3acb46.  call temp:= `A`(v4, v1) @signature `Lj6/g;.A:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L3acb4c.  v1:= temp;
  #L3acb4e.  if v1 == 0 then goto L3acb56;
  #L3acb52.  @monitorexit v0
  #L3acb54.  return @kind void;
  #L3acb56.  v1:= v3.`k6.i.f` @type ^`java.util.concurrent.atomic.AtomicMarkableReference` @kind object;
  #L3acb5a.  v2:= 1I;
  #L3acb5c.  call `set`(v1, v4, v2) @signature `Ljava/util/concurrent/atomic/AtomicMarkableReference;.set:(Ljava/lang/Object;Z)V` @kind virtual;
  #L3acb62.  @monitorexit v0
  #L3acb64.  v4:= v3.`k6.i.b` @type ^`j6.h` @kind object;
  #L3acb68.  v0:= new `k6.g`;
  #L3acb6c.  call `<init>`(v0, v3) @signature `Lk6/g;.<init>:(Lk6/i;)V` @kind direct;
  #L3acb72.  call temp:= `h`(v4, v0) @signature `Lj6/h;.h:(Ljava/util/concurrent/Callable;)La5/l;` @kind virtual;
  #L3acb78.  return @kind void;
  #L3acb7a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3acb7c.  @monitorexit v0
  #L3acb7e.  throw v4;
  catch `java.lang.Throwable` @[L3acb36..L3acb64] goto L3acb7a;
  catch `java.lang.Throwable` @[L3acb7c..L3acb7e] goto L3acb7a;
}
