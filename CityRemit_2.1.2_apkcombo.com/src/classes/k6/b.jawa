record `k6.b` @kind class @AccessFlag  {
  `java.util.Map` `k6.b.a` @AccessFlag PRIVATE_FINAL;
  `int` `k6.b.b` @AccessFlag PRIVATE_FINAL;
  `int` `k6.b.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`k6.b` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lk6/b;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3aac38.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3aac3e.  v0:= new `java.util.HashMap`;
  #L3aac42.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3aac48.  v1.`k6.b.a` @type ^`java.util.Map` := v0 @kind object;
  #L3aac4c.  v1.`k6.b.b` @type ^`int` := v2;
  #L3aac50.  v1.`k6.b.c` @type ^`int` := v3;
  #L3aac54.  return @kind void;
}
procedure `java.lang.String` `b`(`k6.b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lk6/b;.b:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3aab90.  if v2 == 0 then goto L3aaba2;
  #L3aab94.  v0:= v1.`k6.b.c` @type ^`int`;
  #L3aab98.  call temp:= `c`(v2, v0) @signature `Lk6/b;.c:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L3aab9e.  v2:= temp @kind object;
  #L3aaba0.  return v2 @kind object;
  #L3aaba2.  v2:= new `java.lang.IllegalArgumentException`;
  #L3aaba6.  v0:= "Custom attribute key must not be null." @kind object;
  #L3aabaa.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aabb0.  throw v2;
}
procedure `java.lang.String` `c`(`java.lang.String` v1 @kind object, `int` v2 ) @signature `Lk6/b;.c:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3aabc4.  if v1 == 0 then goto L3aabe6;
  #L3aabc8.  call temp:= `trim`(v1) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3aabce.  v1:= temp @kind object;
  #L3aabd0.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3aabd6.  v0:= temp;
  #L3aabd8.  if v0 <= v2 then goto L3aabe6;
  #L3aabdc.  v0:= 0I;
  #L3aabde.  call temp:= `substring`(v1, v0, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3aabe4.  v1:= temp @kind object;
  #L3aabe6.  return v1 @kind object;
}
procedure `java.util.Map` `a`(`k6.b` v2 @kind this) @signature `Lk6/b;.a:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aabf8.  @monitorenter v2
  #L3aabfa.  v0:= new `java.util.HashMap`;
  #L3aabfe.  v1:= v2.`k6.b.a` @type ^`java.util.Map` @kind object;
  #L3aac02.  call `<init>`(v0, v1) @signature `Ljava/util/HashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L3aac08.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L3aac0e.  v0:= temp @kind object;
  #L3aac10.  @monitorexit v2
  #L3aac12.  return v0 @kind object;
  #L3aac14.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3aac16.  @monitorexit v2
  #L3aac18.  throw v0;
  catch `java.lang.Throwable` @[L3aabfa..L3aac10] goto L3aac14;
}
procedure `boolean` `d`(`k6.b` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lk6/b;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3aaaa0.  @monitorenter v4
  #L3aaaa2.  call temp:= `b`(v4, v5) @signature `Lk6/b;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L3aaaa8.  v0:= temp @kind object;
  #L3aaaaa.  v1:= v4.`k6.b.a` @type ^`java.util.Map` @kind object;
  #L3aaaae.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3aaab4.  v1:= temp;
  #L3aaab6.  v2:= v4.`k6.b.b` @type ^`int`;
  #L3aaaba.  v3:= 0I;
  #L3aaabc.  if v1 < v2 then goto L3aab1a;
  #L3aaac0.  v1:= v4.`k6.b.a` @type ^`java.util.Map` @kind object;
  #L3aaac4.  call temp:= `containsKey`(v1, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L3aaaca.  v1:= temp;
  #L3aaacc.  if v1 == 0 then goto L3aaad2;
  #L3aaad0.  goto L3aab1a;
  #L3aaad2.  call temp:= `f`() @signature `Lg6/f;.f:()Lg6/f;` @kind static;
  #L3aaad8.  v6:= temp @kind object;
  #L3aaada.  v0:= new `java.lang.StringBuilder`;
  #L3aaade.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aaae4.  v1:= "Ignored entry \"" @kind object;
  #L3aaae8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aaaee.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aaaf4.  v5:= "\" when adding custom keys. Maximum allowable: " @kind object;
  #L3aaaf8.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aaafe.  v5:= v4.`k6.b.b` @type ^`int`;
  #L3aab02.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aab08.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aab0e.  v5:= temp @kind object;
  #L3aab10.  call `k`(v6, v5) @signature `Lg6/f;.k:(Ljava/lang/String;)V` @kind virtual;
  #L3aab16.  @monitorexit v4
  #L3aab18.  return v3;
  #L3aab1a.  v5:= v4.`k6.b.c` @type ^`int`;
  #L3aab1e.  call temp:= `c`(v6, v5) @signature `Lk6/b;.c:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L3aab24.  v5:= temp @kind object;
  #L3aab26.  v1:= v4.`k6.b.a` @type ^`java.util.Map` @kind object;
  #L3aab2a.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3aab30.  v1:= temp @kind object;
  #L3aab32.  v1:= (`java.lang.String`) v1 @kind object;
  #L3aab36.  call temp:= `A`(v1, v5) @signature `Lj6/g;.A:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L3aab3c.  v1:= temp;
  #L3aab3e.  if v1 == 0 then goto L3aab46;
  #L3aab42.  @monitorexit v4
  #L3aab44.  return v3;
  #L3aab46.  v1:= v4.`k6.b.a` @type ^`java.util.Map` @kind object;
  #L3aab4a.  if v6 != 0 then goto L3aab52;
  #L3aab4e.  v5:= "" @kind object;
  #L3aab52.  call temp:= `put`(v1, v0, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3aab58.  v5:= 1I;
  #L3aab5a.  @monitorexit v4
  #L3aab5c.  return v5;
  #L3aab5e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3aab60.  @monitorexit v4
  #L3aab62.  throw v5;
  catch `java.lang.Throwable` @[L3aaaa2..L3aab16] goto L3aab5e;
  catch `java.lang.Throwable` @[L3aab1a..L3aab3e] goto L3aab5e;
  catch `java.lang.Throwable` @[L3aab46..L3aab58] goto L3aab5e;
}
procedure `void` `e`(`k6.b` v5 @kind this, `java.util.Map` v6 @kind object) @signature `Lk6/b;.e:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3aac68.  @monitorenter v5
  #L3aac6a.  v0:= 0I;
  #L3aac6c.  call temp:= `entrySet`(v6) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3aac72.  v6:= temp @kind object;
  #L3aac74.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3aac7a.  v6:= temp @kind object;
  #L3aac7c.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3aac82.  v1:= temp;
  #L3aac84.  if v1 == 0 then goto L3aad02;
  #L3aac88.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3aac8e.  v1:= temp @kind object;
  #L3aac90.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L3aac94.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3aac9a.  v2:= temp @kind object;
  #L3aac9c.  v2:= (`java.lang.String`) v2 @kind object;
  #L3aaca0.  call temp:= `b`(v5, v2) @signature `Lk6/b;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L3aaca6.  v2:= temp @kind object;
  #L3aaca8.  v3:= v5.`k6.b.a` @type ^`java.util.Map` @kind object;
  #L3aacac.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3aacb2.  v3:= temp;
  #L3aacb4.  v4:= v5.`k6.b.b` @type ^`int`;
  #L3aacb8.  if v3 < v4 then goto L3aacd4;
  #L3aacbc.  v3:= v5.`k6.b.a` @type ^`java.util.Map` @kind object;
  #L3aacc0.  call temp:= `containsKey`(v3, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L3aacc6.  v3:= temp;
  #L3aacc8.  if v3 == 0 then goto L3aacce;
  #L3aaccc.  goto L3aacd4;
  #L3aacce.  v0:= v0 + 1;
  #L3aacd2.  goto L3aac7c;
  #L3aacd4.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3aacda.  v1:= temp @kind object;
  #L3aacdc.  v1:= (`java.lang.String`) v1 @kind object;
  #L3aace0.  v3:= v5.`k6.b.a` @type ^`java.util.Map` @kind object;
  #L3aace4.  if v1 != 0 then goto L3aacee;
  #L3aace8.  v1:= "" @kind object;
  #L3aacec.  goto L3aacfa;
  #L3aacee.  v4:= v5.`k6.b.c` @type ^`int`;
  #L3aacf2.  call temp:= `c`(v1, v4) @signature `Lk6/b;.c:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L3aacf8.  v1:= temp @kind object;
  #L3aacfa.  call temp:= `put`(v3, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3aad00.  goto L3aac7c;
  #L3aad02.  if v0 <= 0 then goto L3aad4a;
  #L3aad06.  call temp:= `f`() @signature `Lg6/f;.f:()Lg6/f;` @kind static;
  #L3aad0c.  v6:= temp @kind object;
  #L3aad0e.  v1:= new `java.lang.StringBuilder`;
  #L3aad12.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aad18.  v2:= "Ignored " @kind object;
  #L3aad1c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aad22.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aad28.  v0:= " entries when adding custom keys. Maximum allowable: " @kind object;
  #L3aad2c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aad32.  v0:= v5.`k6.b.b` @type ^`int`;
  #L3aad36.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aad3c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aad42.  v0:= temp @kind object;
  #L3aad44.  call `k`(v6, v0) @signature `Lg6/f;.k:(Ljava/lang/String;)V` @kind virtual;
  #L3aad4a.  @monitorexit v5
  #L3aad4c.  return @kind void;
  #L3aad4e.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3aad50.  @monitorexit v5
  #L3aad52.  throw v6;
  catch `java.lang.Throwable` @[L3aac6c..L3aad4a] goto L3aad4e;
}
