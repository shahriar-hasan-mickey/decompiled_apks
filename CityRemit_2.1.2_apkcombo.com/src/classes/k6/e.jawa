record `k6.e` @kind class @AccessFlag  extends `java.io.Closeable` @kind interface {
  `java.io.RandomAccessFile` `k6.e.o` @AccessFlag PRIVATE_FINAL;
  `int` `k6.e.p` @AccessFlag ;
  `int` `k6.e.q` @AccessFlag PRIVATE;
  `k6.e$b` `k6.e.r` @AccessFlag PRIVATE;
  `k6.e$b` `k6.e.s` @AccessFlag PRIVATE;
  `byte`[] `k6.e.t` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@k6.e.u` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lk6/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3abe14.  v0:= constclass @type ^`k6.e` @kind object;
  #L3abe18.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3abe1e.  v0:= temp @kind object;
  #L3abe20.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L3abe26.  v0:= temp @kind object;
  #L3abe28.  `@@k6.e.u` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L3abe2c.  return @kind void;
}
procedure `void` `<init>`(`k6.e` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lk6/e;.<init>:(Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3abe40.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3abe46.  v0:= 16I;
  #L3abe4a.  v0:= new `byte`[v0];
  #L3abe4e.  v1.`k6.e.t` @type ^`byte`[] := v0 @kind object;
  #L3abe52.  call temp:= `exists`(v2) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L3abe58.  v0:= temp;
  #L3abe5a.  if v0 != 0 then goto L3abe64;
  #L3abe5e.  call `x`(v2) @signature `Lk6/e;.x:(Ljava/io/File;)V` @kind static;
  #L3abe64.  call temp:= `J`(v2) @signature `Lk6/e;.J:(Ljava/io/File;)Ljava/io/RandomAccessFile;` @kind static;
  #L3abe6a.  v2:= temp @kind object;
  #L3abe6c.  v1.`k6.e.o` @type ^`java.io.RandomAccessFile` := v2 @kind object;
  #L3abe70.  call `M`(v1) @signature `Lk6/e;.M:()V` @kind direct;
  #L3abe76.  return @kind void;
}
procedure `java.lang.Object` `G`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lk6/e;.G:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3abce0.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3abce6.  return v0 @kind object;
}
procedure `java.io.RandomAccessFile` `J`(`java.io.File` v2 @kind object) @signature `Lk6/e;.J:(Ljava/io/File;)Ljava/io/RandomAccessFile;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3abca4.  v0:= new `java.io.RandomAccessFile`;
  #L3abca8.  v1:= "rwd" @kind object;
  #L3abcac.  call `<init>`(v0, v2, v1) @signature `Ljava/io/RandomAccessFile;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L3abcb2.  return v0 @kind object;
}
procedure `k6.e$b` `K`(`k6.e` v3 @kind this, `int` v4 ) @signature `Lk6/e;.K:(I)Lk6/e$b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3abdd4.  if v4 != 0 then goto L3abdde;
  #L3abdd8.  v4:= `@@k6.e$b.c` @type ^`k6.e$b` @kind object;
  #L3abddc.  return v4 @kind object;
  #L3abdde.  v0:= v3.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3abde2.  v1:= (`long`) v4 @kind i2l;
  #L3abde4.  call `seek`(v0, v1) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3abdea.  v0:= new `k6.e$b`;
  #L3abdee.  v1:= v3.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3abdf2.  call temp:= `readInt`(v1) @signature `Ljava/io/RandomAccessFile;.readInt:()I` @kind virtual;
  #L3abdf8.  v1:= temp;
  #L3abdfa.  call `<init>`(v0, v4, v1) @signature `Lk6/e$b;.<init>:(II)V` @kind direct;
  #L3abe00.  return v0 @kind object;
}
procedure `void` `M`(`k6.e` v5 @kind this) @signature `Lk6/e;.M:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ac278.  v0:= v5.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac27c.  v1:= 0L;
  #L3ac280.  call `seek`(v0, v1) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3ac286.  v0:= v5.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac28a.  v1:= v5.`k6.e.t` @type ^`byte`[] @kind object;
  #L3ac28e.  call `readFully`(v0, v1) @signature `Ljava/io/RandomAccessFile;.readFully:([B)V` @kind virtual;
  #L3ac294.  v0:= v5.`k6.e.t` @type ^`byte`[] @kind object;
  #L3ac298.  v1:= 0I;
  #L3ac29a.  call temp:= `N`(v0, v1) @signature `Lk6/e;.N:([BI)I` @kind static;
  #L3ac2a0.  v0:= temp;
  #L3ac2a2.  v5.`k6.e.p` @type ^`int` := v0;
  #L3ac2a6.  v0:= (`long`) v0 @kind i2l;
  #L3ac2a8.  v2:= v5.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac2ac.  call temp:= `length`(v2) @signature `Ljava/io/RandomAccessFile;.length:()J` @kind virtual;
  #L3ac2b2.  v2:= temp @kind wide;
  #L3ac2b4.  v4:= lcmp(v0, v2);
  #L3ac2b8.  if v4 > 0 then goto L3ac308;
  #L3ac2bc.  v0:= v5.`k6.e.t` @type ^`byte`[] @kind object;
  #L3ac2c0.  v1:= 4I;
  #L3ac2c2.  call temp:= `N`(v0, v1) @signature `Lk6/e;.N:([BI)I` @kind static;
  #L3ac2c8.  v0:= temp;
  #L3ac2ca.  v5.`k6.e.q` @type ^`int` := v0;
  #L3ac2ce.  v0:= v5.`k6.e.t` @type ^`byte`[] @kind object;
  #L3ac2d2.  v1:= 8I;
  #L3ac2d6.  call temp:= `N`(v0, v1) @signature `Lk6/e;.N:([BI)I` @kind static;
  #L3ac2dc.  v0:= temp;
  #L3ac2de.  v1:= v5.`k6.e.t` @type ^`byte`[] @kind object;
  #L3ac2e2.  v2:= 12I;
  #L3ac2e6.  call temp:= `N`(v1, v2) @signature `Lk6/e;.N:([BI)I` @kind static;
  #L3ac2ec.  v1:= temp;
  #L3ac2ee.  call temp:= `K`(v5, v0) @signature `Lk6/e;.K:(I)Lk6/e$b;` @kind direct;
  #L3ac2f4.  v0:= temp @kind object;
  #L3ac2f6.  v5.`k6.e.r` @type ^`k6.e$b` := v0 @kind object;
  #L3ac2fa.  call temp:= `K`(v5, v1) @signature `Lk6/e;.K:(I)Lk6/e$b;` @kind direct;
  #L3ac300.  v0:= temp @kind object;
  #L3ac302.  v5.`k6.e.s` @type ^`k6.e$b` := v0 @kind object;
  #L3ac306.  return @kind void;
  #L3ac308.  v0:= new `java.io.IOException`;
  #L3ac30c.  v1:= new `java.lang.StringBuilder`;
  #L3ac310.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ac316.  v2:= "File is truncated. Expected length: " @kind object;
  #L3ac31a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ac320.  v2:= v5.`k6.e.p` @type ^`int`;
  #L3ac324.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ac32a.  v2:= ", Actual length: " @kind object;
  #L3ac32e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ac334.  v2:= v5.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac338.  call temp:= `length`(v2) @signature `Ljava/io/RandomAccessFile;.length:()J` @kind virtual;
  #L3ac33e.  v2:= temp @kind wide;
  #L3ac340.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ac346.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ac34c.  v1:= temp @kind object;
  #L3ac34e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac354.  throw v0;
}
procedure `int` `N`(`byte`[] v2 @kind object, `int` v3 ) @signature `Lk6/e;.N:([BI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3abba0.  v0:= v2[v3] @kind byte;
  #L3abba4.  v0:= v0 ^& 255;
  #L3abba8.  v0:= v0 ^< 24;
  #L3abbac.  v1:= v3 + 1;
  #L3abbb0.  v1:= v2[v1] @kind byte;
  #L3abbb4.  v1:= v1 ^& 255;
  #L3abbb8.  v1:= v1 ^< 16;
  #L3abbbc.  v0:= v0 + v1 @kind int;
  #L3abbbe.  v1:= v3 + 2;
  #L3abbc2.  v1:= v2[v1] @kind byte;
  #L3abbc6.  v1:= v1 ^& 255;
  #L3abbca.  v1:= v1 ^< 8;
  #L3abbce.  v0:= v0 + v1 @kind int;
  #L3abbd0.  v3:= v3 + 3;
  #L3abbd4.  v2:= v2[v3] @kind byte;
  #L3abbd8.  v2:= v2 ^& 255;
  #L3abbdc.  v0:= v0 + v2 @kind int;
  #L3abbde.  return v0;
}
procedure `int` `O`(`k6.e` v2 @kind this) @signature `Lk6/e;.O:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3abbf0.  v0:= v2.`k6.e.p` @type ^`int`;
  #L3abbf4.  call temp:= `d0`(v2) @signature `Lk6/e;.d0:()I` @kind virtual;
  #L3abbfa.  v1:= temp;
  #L3abbfc.  v0:= v0 - v1 @kind int;
  #L3abbfe.  return v0;
}
procedure `int` `a`(`k6.e` v0 @kind object, `int` v1 ) @signature `Lk6/e;.a:(Lk6/e;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3abb84.  call temp:= `e0`(v0, v1) @signature `Lk6/e;.e0:(I)I` @kind direct;
  #L3abb8a.  v0:= temp;
  #L3abb8c.  return v0;
}
procedure `void` `a0`(`k6.e` v4 @kind this, `int` v5 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lk6/e;.a0:(I[BII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ac424.  call temp:= `e0`(v4, v5) @signature `Lk6/e;.e0:(I)I` @kind direct;
  #L3ac42a.  v5:= temp;
  #L3ac42c.  v0:= v5 + v8 @kind int;
  #L3ac430.  v1:= v4.`k6.e.p` @type ^`int`;
  #L3ac434.  if v0 > v1 then goto L3ac44a;
  #L3ac438.  v0:= v4.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac43c.  v1:= (`long`) v5 @kind i2l;
  #L3ac43e.  call `seek`(v0, v1) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3ac444.  v5:= v4.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac448.  goto L3ac478;
  #L3ac44a.  v1:= v1 - v5 @kind int;
  #L3ac44c.  v0:= v4.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac450.  v2:= (`long`) v5 @kind i2l;
  #L3ac452.  call `seek`(v0, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3ac458.  v5:= v4.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac45c.  call `readFully`(v5, v6, v7, v1) @signature `Ljava/io/RandomAccessFile;.readFully:([BII)V` @kind virtual;
  #L3ac462.  v5:= v4.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac466.  v2:= 16L;
  #L3ac46a.  call `seek`(v5, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3ac470.  v5:= v4.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac474.  v7:= v7 + v1 @kind int;
  #L3ac476.  v8:= v8 - v1 @kind int;
  #L3ac478.  call `readFully`(v5, v6, v7, v8) @signature `Ljava/io/RandomAccessFile;.readFully:([BII)V` @kind virtual;
  #L3ac47e.  return @kind void;
}
procedure `void` `b0`(`k6.e` v4 @kind this, `int` v5 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lk6/e;.b0:(I[BII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ac490.  call temp:= `e0`(v4, v5) @signature `Lk6/e;.e0:(I)I` @kind direct;
  #L3ac496.  v5:= temp;
  #L3ac498.  v0:= v5 + v8 @kind int;
  #L3ac49c.  v1:= v4.`k6.e.p` @type ^`int`;
  #L3ac4a0.  if v0 > v1 then goto L3ac4b6;
  #L3ac4a4.  v0:= v4.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac4a8.  v1:= (`long`) v5 @kind i2l;
  #L3ac4aa.  call `seek`(v0, v1) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3ac4b0.  v5:= v4.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac4b4.  goto L3ac4e4;
  #L3ac4b6.  v1:= v1 - v5 @kind int;
  #L3ac4b8.  v0:= v4.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac4bc.  v2:= (`long`) v5 @kind i2l;
  #L3ac4be.  call `seek`(v0, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3ac4c4.  v5:= v4.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac4c8.  call `write`(v5, v6, v7, v1) @signature `Ljava/io/RandomAccessFile;.write:([BII)V` @kind virtual;
  #L3ac4ce.  v5:= v4.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac4d2.  v2:= 16L;
  #L3ac4d6.  call `seek`(v5, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3ac4dc.  v5:= v4.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac4e0.  v7:= v7 + v1 @kind int;
  #L3ac4e2.  v8:= v8 - v1 @kind int;
  #L3ac4e4.  call `write`(v5, v6, v7, v8) @signature `Ljava/io/RandomAccessFile;.write:([BII)V` @kind virtual;
  #L3ac4ea.  return @kind void;
}
procedure `java.lang.Object` `c`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lk6/e;.c:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3abcc4.  call temp:= `G`(v0, v1) @signature `Lk6/e;.G:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3abcca.  v0:= temp @kind object;
  #L3abccc.  return v0 @kind object;
}
procedure `void` `c0`(`k6.e` v3 @kind this, `int` v4 ) @signature `Lk6/e;.c0:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ac4fc.  v0:= v3.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac500.  v1:= (`long`) v4 @kind i2l;
  #L3ac502.  call `setLength`(v0, v1) @signature `Ljava/io/RandomAccessFile;.setLength:(J)V` @kind virtual;
  #L3ac508.  v4:= v3.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac50c.  call temp:= `getChannel`(v4) @signature `Ljava/io/RandomAccessFile;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L3ac512.  v4:= temp @kind object;
  #L3ac514.  v0:= 1I;
  #L3ac516.  call `force`(v4, v0) @signature `Ljava/nio/channels/FileChannel;.force:(Z)V` @kind virtual;
  #L3ac51c.  return @kind void;
}
procedure `void` `e`(`k6.e` v0 @kind object, `int` v1 , `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lk6/e;.e:(Lk6/e;I[BII)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3abe88.  call `a0`(v0, v1, v2, v3, v4) @signature `Lk6/e;.a0:(I[BII)V` @kind direct;
  #L3abe8e.  return @kind void;
}
procedure `int` `e0`(`k6.e` v1 @kind this, `int` v2 ) @signature `Lk6/e;.e0:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3abc68.  v0:= v1.`k6.e.p` @type ^`int`;
  #L3abc6c.  if v2 >= v0 then goto L3abc72;
  #L3abc70.  goto L3abc78;
  #L3abc72.  v2:= v2 + 16;
  #L3abc76.  v2:= v2 - v0 @kind int;
  #L3abc78.  return v2;
}
procedure `void` `f0`(`k6.e` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lk6/e;.f0:(IIII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ac530.  v0:= v3.`k6.e.t` @type ^`byte`[] @kind object;
  #L3ac534.  v1:= 4I;
  #L3ac536.  v1:= new `int`[v1];
  #L3ac53a.  v2:= 0I;
  #L3ac53c.  v1[v2]:= v4;
  #L3ac540.  v4:= 1I;
  #L3ac542.  v1[v4]:= v5;
  #L3ac546.  v4:= 2I;
  #L3ac548.  v1[v4]:= v6;
  #L3ac54c.  v4:= 3I;
  #L3ac54e.  v1[v4]:= v7;
  #L3ac552.  call `h0`(v0, v1) @signature `Lk6/e;.h0:([B[I)V` @kind static;
  #L3ac558.  v4:= v3.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac55c.  v5:= 0L;
  #L3ac560.  call `seek`(v4, v5) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3ac566.  v4:= v3.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac56a.  v5:= v3.`k6.e.t` @type ^`byte`[] @kind object;
  #L3ac56e.  call `write`(v4, v5) @signature `Ljava/io/RandomAccessFile;.write:([B)V` @kind virtual;
  #L3ac574.  return @kind void;
}
procedure `void` `g0`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lk6/e;.g0:([BII)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3ac588.  v0:= v4 ^> 24;
  #L3ac58c.  v0:= (`byte`) v0 @kind i2b;
  #L3ac58e.  v2[v3]:= v0 @kind byte;
  #L3ac592.  v0:= v3 + 1;
  #L3ac596.  v1:= v4 ^> 16;
  #L3ac59a.  v1:= (`byte`) v1 @kind i2b;
  #L3ac59c.  v2[v0]:= v1 @kind byte;
  #L3ac5a0.  v0:= v3 + 2;
  #L3ac5a4.  v1:= v4 ^> 8;
  #L3ac5a8.  v1:= (`byte`) v1 @kind i2b;
  #L3ac5aa.  v2[v0]:= v1 @kind byte;
  #L3ac5ae.  v3:= v3 + 3;
  #L3ac5b2.  v4:= (`byte`) v4 @kind i2b;
  #L3ac5b4.  v2[v3]:= v4 @kind byte;
  #L3ac5b8.  return @kind void;
}
procedure `java.io.RandomAccessFile` `h`(`k6.e` v0 @kind object) @signature `Lk6/e;.h:(Lk6/e;)Ljava/io/RandomAccessFile;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3abc8c.  v0:= v0.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3abc90.  return v0 @kind object;
}
procedure `void` `h0`(`byte`[] v4 @kind object, `int`[] v5 @kind object) @signature `Lk6/e;.h0:([B[I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ac5cc.  v0:= length @variable v5;
  #L3ac5ce.  v1:= 0I;
  #L3ac5d0.  v2:= 0I;
  #L3ac5d2.  if v1 >= v0 then goto L3ac5ea;
  #L3ac5d6.  v3:= v5[v1];
  #L3ac5da.  call `g0`(v4, v2, v3) @signature `Lk6/e;.g0:([BII)V` @kind static;
  #L3ac5e0.  v2:= v2 + 4;
  #L3ac5e4.  v1:= v1 + 1;
  #L3ac5e8.  goto L3ac5d2;
  #L3ac5ea.  return @kind void;
}
procedure `void` `s`(`k6.e` v10 @kind this, `int` v11 ) @signature `Lk6/e;.s:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3ac040.  v11:= v11 + 4;
  #L3ac044.  call temp:= `O`(v10) @signature `Lk6/e;.O:()I` @kind direct;
  #L3ac04a.  v0:= temp;
  #L3ac04c.  if v0 < v11 then goto L3ac052;
  #L3ac050.  return @kind void;
  #L3ac052.  v1:= v10.`k6.e.p` @type ^`int`;
  #L3ac056.  v0:= v0 + v1 @kind int;
  #L3ac058.  v1:= v1 ^< 1;
  #L3ac05c.  if v0 < v11 then goto L3ac056;
  #L3ac060.  call `c0`(v10, v1) @signature `Lk6/e;.c0:(I)V` @kind direct;
  #L3ac066.  v11:= v10.`k6.e.s` @type ^`k6.e$b` @kind object;
  #L3ac06a.  v0:= v11.`k6.e$b.a` @type ^`int`;
  #L3ac06e.  v0:= v0 + 4;
  #L3ac072.  v11:= v11.`k6.e$b.b` @type ^`int`;
  #L3ac076.  v0:= v0 + v11 @kind int;
  #L3ac078.  call temp:= `e0`(v10, v0) @signature `Lk6/e;.e0:(I)I` @kind direct;
  #L3ac07e.  v11:= temp;
  #L3ac080.  v0:= v10.`k6.e.r` @type ^`k6.e$b` @kind object;
  #L3ac084.  v0:= v0.`k6.e$b.a` @type ^`int`;
  #L3ac088.  if v11 >= v0 then goto L3ac0d4;
  #L3ac08c.  v0:= v10.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac090.  call temp:= `getChannel`(v0) @signature `Ljava/io/RandomAccessFile;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L3ac096.  v7:= temp @kind object;
  #L3ac098.  v0:= v10.`k6.e.p` @type ^`int`;
  #L3ac09c.  v2:= (`long`) v0 @kind i2l;
  #L3ac09e.  call temp:= `position`(v7, v2) @signature `Ljava/nio/channels/FileChannel;.position:(J)Ljava/nio/channels/FileChannel;` @kind virtual;
  #L3ac0a4.  v11:= v11 + -4;
  #L3ac0a8.  v3:= 16L;
  #L3ac0ac.  v8:= (`long`) v11 @kind i2l;
  #L3ac0ae.  v2:= v7 @kind object;
  #L3ac0b0.  v5:= v8 @kind wide;
  #L3ac0b2.  call temp:= `transferTo`(v2, v3, v5, v7) @signature `Ljava/nio/channels/FileChannel;.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J` @kind virtual;
  #L3ac0b8.  v2:= temp @kind wide;
  #L3ac0ba.  v11:= lcmp(v2, v8);
  #L3ac0be.  if v11 != 0 then goto L3ac0c4;
  #L3ac0c2.  goto L3ac0d4;
  #L3ac0c4.  v11:= new `java.lang.AssertionError`;
  #L3ac0c8.  v0:= "Copied insufficient number of bytes!" @kind object;
  #L3ac0cc.  call `<init>`(v11, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3ac0d2.  throw v11;
  #L3ac0d4.  v11:= v10.`k6.e.s` @type ^`k6.e$b` @kind object;
  #L3ac0d8.  v11:= v11.`k6.e$b.a` @type ^`int`;
  #L3ac0dc.  v0:= v10.`k6.e.r` @type ^`k6.e$b` @kind object;
  #L3ac0e0.  v0:= v0.`k6.e$b.a` @type ^`int`;
  #L3ac0e4.  if v11 >= v0 then goto L3ac114;
  #L3ac0e8.  v2:= v10.`k6.e.p` @type ^`int`;
  #L3ac0ec.  v2:= v2 + v11 @kind int;
  #L3ac0ee.  v2:= v2 + -16;
  #L3ac0f2.  v11:= v10.`k6.e.q` @type ^`int`;
  #L3ac0f6.  call `f0`(v10, v1, v11, v0, v2) @signature `Lk6/e;.f0:(IIII)V` @kind direct;
  #L3ac0fc.  v11:= new `k6.e$b`;
  #L3ac100.  v0:= v10.`k6.e.s` @type ^`k6.e$b` @kind object;
  #L3ac104.  v0:= v0.`k6.e$b.b` @type ^`int`;
  #L3ac108.  call `<init>`(v11, v2, v0) @signature `Lk6/e$b;.<init>:(II)V` @kind direct;
  #L3ac10e.  v10.`k6.e.s` @type ^`k6.e$b` := v11 @kind object;
  #L3ac112.  goto L3ac11e;
  #L3ac114.  v2:= v10.`k6.e.q` @type ^`int`;
  #L3ac118.  call `f0`(v10, v1, v2, v0, v11) @signature `Lk6/e;.f0:(IIII)V` @kind direct;
  #L3ac11e.  v10.`k6.e.p` @type ^`int` := v1;
  #L3ac122.  return @kind void;
}
procedure `void` `x`(`java.io.File` v6 @kind object) @signature `Lk6/e;.x:(Ljava/io/File;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ac1a8.  v0:= new `java.io.File`;
  #L3ac1ac.  v1:= new `java.lang.StringBuilder`;
  #L3ac1b0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ac1b6.  call temp:= `getPath`(v6) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L3ac1bc.  v2:= temp @kind object;
  #L3ac1be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ac1c4.  v2:= ".tmp" @kind object;
  #L3ac1c8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ac1ce.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ac1d4.  v1:= temp @kind object;
  #L3ac1d6.  call `<init>`(v0, v1) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac1dc.  call temp:= `J`(v0) @signature `Lk6/e;.J:(Ljava/io/File;)Ljava/io/RandomAccessFile;` @kind static;
  #L3ac1e2.  v1:= temp @kind object;
  #L3ac1e4.  v2:= 4096L;
  #L3ac1e8.  call `setLength`(v1, v2) @signature `Ljava/io/RandomAccessFile;.setLength:(J)V` @kind virtual;
  #L3ac1ee.  v2:= 0L;
  #L3ac1f2.  call `seek`(v1, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3ac1f8.  v2:= 16I;
  #L3ac1fc.  v2:= new `byte`[v2];
  #L3ac200.  v3:= 4I;
  #L3ac202.  v3:= new `int`[v3];
  #L3ac206.  v4:= 4096I;
  #L3ac20a.  v5:= 0I;
  #L3ac20c.  v3[v5]:= v4;
  #L3ac210.  v4:= 1I;
  #L3ac212.  v3[v4]:= v5;
  #L3ac216.  v4:= 2I;
  #L3ac218.  v3[v4]:= v5;
  #L3ac21c.  v4:= 3I;
  #L3ac21e.  v3[v4]:= v5;
  #L3ac222.  call `h0`(v2, v3) @signature `Lk6/e;.h0:([B[I)V` @kind static;
  #L3ac228.  call `write`(v1, v2) @signature `Ljava/io/RandomAccessFile;.write:([B)V` @kind virtual;
  #L3ac22e.  call `close`(v1) @signature `Ljava/io/RandomAccessFile;.close:()V` @kind virtual;
  #L3ac234.  call temp:= `renameTo`(v0, v6) @signature `Ljava/io/File;.renameTo:(Ljava/io/File;)Z` @kind virtual;
  #L3ac23a.  v6:= temp;
  #L3ac23c.  if v6 == 0 then goto L3ac242;
  #L3ac240.  return @kind void;
  #L3ac242.  v6:= new `java.io.IOException`;
  #L3ac246.  v0:= "Rename failed!" @kind object;
  #L3ac24a.  call `<init>`(v6, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac250.  throw v6;
  #L3ac252.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ac254.  call `close`(v1) @signature `Ljava/io/RandomAccessFile;.close:()V` @kind virtual;
  #L3ac25a.  throw v6;
  catch `java.lang.Throwable` @[L3ac1e8..L3ac22e] goto L3ac252;
}
procedure `boolean` `E`(`k6.e` v1 @kind this) @signature `Lk6/e;.E:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3abb4c.  @monitorenter v1
  #L3abb4e.  v0:= v1.`k6.e.q` @type ^`int`;
  #L3abb52.  if v0 != 0 then goto L3abb5a;
  #L3abb56.  v0:= 1I;
  #L3abb58.  goto L3abb5c;
  #L3abb5a.  v0:= 0I;
  #L3abb5c.  @monitorexit v1
  #L3abb5e.  return v0;
  #L3abb60.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3abb62.  @monitorexit v1
  #L3abb64.  throw v0;
  catch `java.lang.Throwable` @[L3abb4e..L3abb52] goto L3abb60;
}
procedure `void` `S`(`k6.e` v6 @kind this) @signature `Lk6/e;.S:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ac368.  @monitorenter v6
  #L3ac36a.  call temp:= `E`(v6) @signature `Lk6/e;.E:()Z` @kind virtual;
  #L3ac370.  v0:= temp;
  #L3ac372.  if v0 != 0 then goto L3ac3ee;
  #L3ac376.  v0:= v6.`k6.e.q` @type ^`int`;
  #L3ac37a.  v1:= 1I;
  #L3ac37c.  if v0 != v1 then goto L3ac388;
  #L3ac380.  call `o`(v6) @signature `Lk6/e;.o:()V` @kind virtual;
  #L3ac386.  goto L3ac3ea;
  #L3ac388.  v0:= v6.`k6.e.r` @type ^`k6.e$b` @kind object;
  #L3ac38c.  v2:= v0.`k6.e$b.a` @type ^`int`;
  #L3ac390.  v3:= 4I;
  #L3ac392.  v2:= v2 + v3 @kind int;
  #L3ac394.  v0:= v0.`k6.e$b.b` @type ^`int`;
  #L3ac398.  v2:= v2 + v0 @kind int;
  #L3ac39a.  call temp:= `e0`(v6, v2) @signature `Lk6/e;.e0:(I)I` @kind direct;
  #L3ac3a0.  v0:= temp;
  #L3ac3a2.  v2:= v6.`k6.e.t` @type ^`byte`[] @kind object;
  #L3ac3a6.  v4:= 0I;
  #L3ac3a8.  call `a0`(v6, v0, v2, v4, v3) @signature `Lk6/e;.a0:(I[BII)V` @kind direct;
  #L3ac3ae.  v2:= v6.`k6.e.t` @type ^`byte`[] @kind object;
  #L3ac3b2.  call temp:= `N`(v2, v4) @signature `Lk6/e;.N:([BI)I` @kind static;
  #L3ac3b8.  v2:= temp;
  #L3ac3ba.  v3:= v6.`k6.e.p` @type ^`int`;
  #L3ac3be.  v4:= v6.`k6.e.q` @type ^`int`;
  #L3ac3c2.  v4:= v4 - v1 @kind int;
  #L3ac3c4.  v5:= v6.`k6.e.s` @type ^`k6.e$b` @kind object;
  #L3ac3c8.  v5:= v5.`k6.e$b.a` @type ^`int`;
  #L3ac3cc.  call `f0`(v6, v3, v4, v0, v5) @signature `Lk6/e;.f0:(IIII)V` @kind direct;
  #L3ac3d2.  v3:= v6.`k6.e.q` @type ^`int`;
  #L3ac3d6.  v3:= v3 - v1 @kind int;
  #L3ac3d8.  v6.`k6.e.q` @type ^`int` := v3;
  #L3ac3dc.  v1:= new `k6.e$b`;
  #L3ac3e0.  call `<init>`(v1, v0, v2) @signature `Lk6/e$b;.<init>:(II)V` @kind direct;
  #L3ac3e6.  v6.`k6.e.r` @type ^`k6.e$b` := v1 @kind object;
  #L3ac3ea.  @monitorexit v6
  #L3ac3ec.  return @kind void;
  #L3ac3ee.  v0:= new `java.util.NoSuchElementException`;
  #L3ac3f2.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3ac3f8.  throw v0;
  #L3ac3fa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ac3fc.  @monitorexit v6
  #L3ac3fe.  throw v0;
  catch `java.lang.Throwable` @[L3ac36a..L3ac3ea] goto L3ac3fa;
  catch `java.lang.Throwable` @[L3ac3ee..L3ac3fa] goto L3ac3fa;
}
procedure `void` `close`(`k6.e` v1 @kind this) @signature `Lk6/e;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ac00c.  @monitorenter v1
  #L3ac00e.  v0:= v1.`k6.e.o` @type ^`java.io.RandomAccessFile` @kind object;
  #L3ac012.  call `close`(v0) @signature `Ljava/io/RandomAccessFile;.close:()V` @kind virtual;
  #L3ac018.  @monitorexit v1
  #L3ac01a.  return @kind void;
  #L3ac01c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ac01e.  @monitorexit v1
  #L3ac020.  throw v0;
  catch `java.lang.Throwable` @[L3ac00e..L3ac018] goto L3ac01c;
}
procedure `int` `d0`(`k6.e` v4 @kind this) @signature `Lk6/e;.d0:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3abc10.  v0:= v4.`k6.e.q` @type ^`int`;
  #L3abc14.  v1:= 16I;
  #L3abc18.  if v0 != 0 then goto L3abc1e;
  #L3abc1c.  return v1;
  #L3abc1e.  v0:= v4.`k6.e.s` @type ^`k6.e$b` @kind object;
  #L3abc22.  v2:= v0.`k6.e$b.a` @type ^`int`;
  #L3abc26.  v3:= v4.`k6.e.r` @type ^`k6.e$b` @kind object;
  #L3abc2a.  v3:= v3.`k6.e$b.a` @type ^`int`;
  #L3abc2e.  if v2 < v3 then goto L3abc42;
  #L3abc32.  v2:= v2 - v3 @kind int;
  #L3abc34.  v2:= v2 + 4;
  #L3abc38.  v0:= v0.`k6.e$b.b` @type ^`int`;
  #L3abc3c.  v2:= v2 + v0 @kind int;
  #L3abc3e.  v2:= v2 + v1 @kind int;
  #L3abc40.  return v2;
  #L3abc42.  v2:= v2 + 4;
  #L3abc46.  v0:= v0.`k6.e$b.b` @type ^`int`;
  #L3abc4a.  v2:= v2 + v0 @kind int;
  #L3abc4c.  v0:= v4.`k6.e.p` @type ^`int`;
  #L3abc50.  v2:= v2 + v0 @kind int;
  #L3abc52.  v2:= v2 - v3 @kind int;
  #L3abc54.  return v2;
}
procedure `void` `i`(`k6.e` v2 @kind this, `byte`[] v3 @kind object) @signature `Lk6/e;.i:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3abea0.  v0:= length @variable v3;
  #L3abea2.  v1:= 0I;
  #L3abea4.  call `k`(v2, v3, v1, v0) @signature `Lk6/e;.k:([BII)V` @kind virtual;
  #L3abeaa.  return @kind void;
}
procedure `void` `k`(`k6.e` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lk6/e;.k:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3abebc.  @monitorenter v6
  #L3abebe.  v0:= "buffer" @kind object;
  #L3abec2.  call temp:= `G`(v7, v0) @signature `Lk6/e;.G:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3abec8.  v0:= v8 ^| v9 @kind int;
  #L3abecc.  if v0 < 0 then goto L3abf7e;
  #L3abed0.  v0:= length @variable v7;
  #L3abed2.  v0:= v0 - v8 @kind int;
  #L3abed4.  if v9 > v0 then goto L3abf7e;
  #L3abed8.  call `s`(v6, v9) @signature `Lk6/e;.s:(I)V` @kind direct;
  #L3abede.  call temp:= `E`(v6) @signature `Lk6/e;.E:()Z` @kind virtual;
  #L3abee4.  v0:= temp;
  #L3abee6.  v1:= 4I;
  #L3abee8.  if v0 == 0 then goto L3abef2;
  #L3abeec.  v2:= 16I;
  #L3abef0.  goto L3abf0a;
  #L3abef2.  v2:= v6.`k6.e.s` @type ^`k6.e$b` @kind object;
  #L3abef6.  v3:= v2.`k6.e$b.a` @type ^`int`;
  #L3abefa.  v3:= v3 + v1 @kind int;
  #L3abefc.  v2:= v2.`k6.e$b.b` @type ^`int`;
  #L3abf00.  v3:= v3 + v2 @kind int;
  #L3abf02.  call temp:= `e0`(v6, v3) @signature `Lk6/e;.e0:(I)I` @kind direct;
  #L3abf08.  v2:= temp;
  #L3abf0a.  v3:= new `k6.e$b`;
  #L3abf0e.  call `<init>`(v3, v2, v9) @signature `Lk6/e$b;.<init>:(II)V` @kind direct;
  #L3abf14.  v2:= v6.`k6.e.t` @type ^`byte`[] @kind object;
  #L3abf18.  v4:= 0I;
  #L3abf1a.  call `g0`(v2, v4, v9) @signature `Lk6/e;.g0:([BII)V` @kind static;
  #L3abf20.  v2:= v3.`k6.e$b.a` @type ^`int`;
  #L3abf24.  v5:= v6.`k6.e.t` @type ^`byte`[] @kind object;
  #L3abf28.  call `b0`(v6, v2, v5, v4, v1) @signature `Lk6/e;.b0:(I[BII)V` @kind direct;
  #L3abf2e.  v2:= v3.`k6.e$b.a` @type ^`int`;
  #L3abf32.  v2:= v2 + v1 @kind int;
  #L3abf34.  call `b0`(v6, v2, v7, v8, v9) @signature `Lk6/e;.b0:(I[BII)V` @kind direct;
  #L3abf3a.  if v0 == 0 then goto L3abf44;
  #L3abf3e.  v7:= v3.`k6.e$b.a` @type ^`int`;
  #L3abf42.  goto L3abf4c;
  #L3abf44.  v7:= v6.`k6.e.r` @type ^`k6.e$b` @kind object;
  #L3abf48.  v7:= v7.`k6.e$b.a` @type ^`int`;
  #L3abf4c.  v8:= v6.`k6.e.p` @type ^`int`;
  #L3abf50.  v9:= v6.`k6.e.q` @type ^`int`;
  #L3abf54.  v9:= v9 + 1;
  #L3abf58.  v1:= v3.`k6.e$b.a` @type ^`int`;
  #L3abf5c.  call `f0`(v6, v8, v9, v7, v1) @signature `Lk6/e;.f0:(IIII)V` @kind direct;
  #L3abf62.  v6.`k6.e.s` @type ^`k6.e$b` := v3 @kind object;
  #L3abf66.  v7:= v6.`k6.e.q` @type ^`int`;
  #L3abf6a.  v7:= v7 + 1;
  #L3abf6e.  v6.`k6.e.q` @type ^`int` := v7;
  #L3abf72.  if v0 == 0 then goto L3abf7a;
  #L3abf76.  v6.`k6.e.r` @type ^`k6.e$b` := v3 @kind object;
  #L3abf7a.  @monitorexit v6
  #L3abf7c.  return @kind void;
  #L3abf7e.  v7:= new `java.lang.IndexOutOfBoundsException`;
  #L3abf82.  call `<init>`(v7) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L3abf88.  throw v7;
  #L3abf8a.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3abf8c.  @monitorexit v6
  #L3abf8e.  throw v7;
  catch `java.lang.Throwable` @[L3abebe..L3abf7a] goto L3abf8a;
  catch `java.lang.Throwable` @[L3abf7e..L3abf8a] goto L3abf8a;
}
procedure `void` `o`(`k6.e` v2 @kind this) @signature `Lk6/e;.o:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3abfb4.  @monitorenter v2
  #L3abfb6.  v0:= 0I;
  #L3abfb8.  v1:= 4096I;
  #L3abfbc.  call `f0`(v2, v1, v0, v0, v0) @signature `Lk6/e;.f0:(IIII)V` @kind direct;
  #L3abfc2.  v2.`k6.e.q` @type ^`int` := v0;
  #L3abfc6.  v0:= `@@k6.e$b.c` @type ^`k6.e$b` @kind object;
  #L3abfca.  v2.`k6.e.r` @type ^`k6.e$b` := v0 @kind object;
  #L3abfce.  v2.`k6.e.s` @type ^`k6.e$b` := v0 @kind object;
  #L3abfd2.  v0:= v2.`k6.e.p` @type ^`int`;
  #L3abfd6.  if v0 <= v1 then goto L3abfe0;
  #L3abfda.  call `c0`(v2, v1) @signature `Lk6/e;.c0:(I)V` @kind direct;
  #L3abfe0.  v2.`k6.e.p` @type ^`int` := v1;
  #L3abfe4.  @monitorexit v2
  #L3abfe6.  return @kind void;
  #L3abfe8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3abfea.  @monitorexit v2
  #L3abfec.  throw v0;
  catch `java.lang.Throwable` @[L3abfbc..L3abfe4] goto L3abfe8;
}
procedure `java.lang.String` `toString`(`k6.e` v5 @kind this) @signature `Lk6/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3abcf8.  v0:= new `java.lang.StringBuilder`;
  #L3abcfc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3abd02.  v1:= constclass @type ^`k6.e` @kind object;
  #L3abd06.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3abd0c.  v1:= temp @kind object;
  #L3abd0e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abd14.  v1:= 91I;
  #L3abd18.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abd1e.  v1:= "fileLength=" @kind object;
  #L3abd22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abd28.  v1:= v5.`k6.e.p` @type ^`int`;
  #L3abd2c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abd32.  v1:= ", size=" @kind object;
  #L3abd36.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abd3c.  v1:= v5.`k6.e.q` @type ^`int`;
  #L3abd40.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abd46.  v1:= ", first=" @kind object;
  #L3abd4a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abd50.  v1:= v5.`k6.e.r` @type ^`k6.e$b` @kind object;
  #L3abd54.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abd5a.  v1:= ", last=" @kind object;
  #L3abd5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abd64.  v1:= v5.`k6.e.s` @type ^`k6.e$b` @kind object;
  #L3abd68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abd6e.  v1:= ", element lengths=[" @kind object;
  #L3abd72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abd78.  v1:= new `k6.e$a`;
  #L3abd7c.  call `<init>`(v1, v5, v0) @signature `Lk6/e$a;.<init>:(Lk6/e;Ljava/lang/StringBuilder;)V` @kind direct;
  #L3abd82.  call `v`(v5, v1) @signature `Lk6/e;.v:(Lk6/e$d;)V` @kind virtual;
  #L3abd88.  goto L3abd9e;
  #L3abd8a.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L3abd8c.  v2:= `@@k6.e.u` @type ^`java.util.logging.Logger` @kind object;
  #L3abd90.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L3abd94.  v4:= "read error" @kind object;
  #L3abd98.  call `log`(v2, v3, v4, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3abd9e.  v1:= "]]" @kind object;
  #L3abda2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3abda8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3abdae.  v0:= temp @kind object;
  #L3abdb0.  return v0 @kind object;
  catch `java.io.IOException` @[L3abd78..L3abd88] goto L3abd8a;
}
procedure `void` `v`(`k6.e` v4 @kind this, `k6.e$d` v5 @kind object) @signature `Lk6/e;.v:(Lk6/e$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ac134.  @monitorenter v4
  #L3ac136.  v0:= v4.`k6.e.r` @type ^`k6.e$b` @kind object;
  #L3ac13a.  v0:= v0.`k6.e$b.a` @type ^`int`;
  #L3ac13e.  v1:= 0I;
  #L3ac140.  v2:= v4.`k6.e.q` @type ^`int`;
  #L3ac144.  if v1 >= v2 then goto L3ac182;
  #L3ac148.  call temp:= `K`(v4, v0) @signature `Lk6/e;.K:(I)Lk6/e$b;` @kind direct;
  #L3ac14e.  v0:= temp @kind object;
  #L3ac150.  v2:= new `k6.e$c`;
  #L3ac154.  v3:= 0I;
  #L3ac156.  call `<init>`(v2, v4, v0, v3) @signature `Lk6/e$c;.<init>:(Lk6/e;Lk6/e$b;Lk6/e$a;)V` @kind direct;
  #L3ac15c.  v3:= v0.`k6.e$b.b` @type ^`int`;
  #L3ac160.  call `a`(v5, v2, v3) @signature `Lk6/e$d;.a:(Ljava/io/InputStream;I)V` @kind interface;
  #L3ac166.  v2:= v0.`k6.e$b.a` @type ^`int`;
  #L3ac16a.  v2:= v2 + 4;
  #L3ac16e.  v0:= v0.`k6.e$b.b` @type ^`int`;
  #L3ac172.  v2:= v2 + v0 @kind int;
  #L3ac174.  call temp:= `e0`(v4, v2) @signature `Lk6/e;.e0:(I)I` @kind direct;
  #L3ac17a.  v0:= temp;
  #L3ac17c.  v1:= v1 + 1;
  #L3ac180.  goto L3ac140;
  #L3ac182.  @monitorexit v4
  #L3ac184.  return @kind void;
  #L3ac186.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ac188.  @monitorexit v4
  #L3ac18a.  throw v5;
  catch `java.lang.Throwable` @[L3ac136..L3ac17c] goto L3ac186;
}
