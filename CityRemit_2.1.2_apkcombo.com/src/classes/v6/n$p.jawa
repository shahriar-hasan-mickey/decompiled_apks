record `v6.n$p` @kind class @AccessFlag  {
  `java.util.List` `v6.n$p.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `v6.n$p.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`v6.n$p` v0 @kind this, `java.util.List` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lv6/n$p;.<init>:(Ljava/util/List;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4a1918.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a191e.  v0.`v6.n$p.a` @type ^`java.util.List` := v1 @kind object;
  #L4a1922.  v0.`v6.n$p.b` @type ^`java.util.Map` := v2 @kind object;
  #L4a1926.  return @kind void;
}
procedure `java.util.List` `a`(`v6.n$p` v0 @kind object) @signature `Lv6/n$p;.a:(Lv6/n$p;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4a18e8.  v0:= v0.`v6.n$p.a` @type ^`java.util.List` @kind object;
  #L4a18ec.  return v0 @kind object;
}
procedure `java.util.Map` `b`(`v6.n$p` v0 @kind object) @signature `Lv6/n$p;.b:(Lv6/n$p;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4a1900.  v0:= v0.`v6.n$p.b` @type ^`java.util.Map` @kind object;
  #L4a1904.  return v0 @kind object;
}
procedure `boolean` `equals`(`v6.n$p` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lv6/n$p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a1814.  if v3 != v4 then goto L4a181c;
  #L4a1818.  v4:= 1I;
  #L4a181a.  return v4;
  #L4a181c.  v0:= instanceof @variable v4 @type ^`v6.n$p` @kind boolean;
  #L4a1820.  v1:= 0I;
  #L4a1822.  if v0 != 0 then goto L4a1828;
  #L4a1826.  return v1;
  #L4a1828.  v4:= (`v6.n$p`) v4 @kind object;
  #L4a182c.  v0:= v3.`v6.n$p.a` @type ^`java.util.List` @kind object;
  #L4a1830.  v2:= v4.`v6.n$p.a` @type ^`java.util.List` @kind object;
  #L4a1834.  call temp:= `equals`(v0, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L4a183a.  v0:= temp;
  #L4a183c.  if v0 != 0 then goto L4a1842;
  #L4a1840.  return v1;
  #L4a1842.  v0:= v3.`v6.n$p.b` @type ^`java.util.Map` @kind object;
  #L4a1846.  v4:= v4.`v6.n$p.b` @type ^`java.util.Map` @kind object;
  #L4a184a.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L4a1850.  v4:= temp;
  #L4a1852.  return v4;
}
procedure `int` `hashCode`(`v6.n$p` v2 @kind this) @signature `Lv6/n$p;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a1864.  v0:= v2.`v6.n$p.a` @type ^`java.util.List` @kind object;
  #L4a1868.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L4a186e.  v0:= temp;
  #L4a1870.  v0:= v0 * 31;
  #L4a1874.  v1:= v2.`v6.n$p.b` @type ^`java.util.Map` @kind object;
  #L4a1878.  call temp:= `hashCode`(v1) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L4a187e.  v1:= temp;
  #L4a1880.  v0:= v0 + v1 @kind int;
  #L4a1882.  return v0;
}
procedure `java.lang.String` `toString`(`v6.n$p` v2 @kind this) @signature `Lv6/n$p;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4a1894.  v0:= new `java.lang.StringBuilder`;
  #L4a1898.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4a189e.  v1:= v2.`v6.n$p.a` @type ^`java.util.List` @kind object;
  #L4a18a2.  call temp:= `d`(v1) @signature `Lv6/e;.d:(Ljava/util/List;)Ljava/lang/String;` @kind static;
  #L4a18a8.  v1:= temp @kind object;
  #L4a18aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a18b0.  v1:= " (params: " @kind object;
  #L4a18b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a18ba.  v1:= v2.`v6.n$p.b` @type ^`java.util.Map` @kind object;
  #L4a18be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a18c4.  v1:= ")" @kind object;
  #L4a18c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4a18ce.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4a18d4.  v0:= temp @kind object;
  #L4a18d6.  return v0 @kind object;
}
