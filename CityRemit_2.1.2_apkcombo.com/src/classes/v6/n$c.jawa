record `v6.n$c` @kind class @AccessFlag  extends `v6.n$j` @kind interface {
  `v6.p` `v6.n$c.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`v6.n$c` v0 @kind this, `v6.n` v1 @kind object, `v6.p` v2 @kind object) @signature `Lv6/n$c;.<init>:(Lv6/n;Lv6/p;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4a0cf0.  v0.`v6.n$c.a` @type ^`v6.p` := v2 @kind object;
  #L4a0cf4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4a0cfa.  return @kind void;
}
procedure `void` `a`(`v6.n$c` v3 @kind this, `java.util.Map` v4 @kind object) @signature `Lv6/n$c;.a:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4a0d0c.  v0:= "s" @kind object;
  #L4a0d10.  call temp:= `get`(v4, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4a0d16.  v0:= temp @kind object;
  #L4a0d18.  v0:= (`java.lang.String`) v0 @kind object;
  #L4a0d1c.  v1:= "ok" @kind object;
  #L4a0d20.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4a0d26.  v1:= temp;
  #L4a0d28.  v2:= 0I;
  #L4a0d2a.  if v1 != 0 then goto L4a0d42;
  #L4a0d2e.  v1:= "d" @kind object;
  #L4a0d32.  call temp:= `get`(v4, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4a0d38.  v4:= temp @kind object;
  #L4a0d3a.  v2:= v4 @kind object;
  #L4a0d3c.  v2:= (`java.lang.String`) v2 @kind object;
  #L4a0d40.  goto L4a0d44;
  #L4a0d42.  v0:= v2 @kind object;
  #L4a0d44.  v4:= v3.`v6.n$c.a` @type ^`v6.p` @kind object;
  #L4a0d48.  if v4 == 0 then goto L4a0d52;
  #L4a0d4c.  call `a`(v4, v0, v2) @signature `Lv6/p;.a:(Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L4a0d52.  return @kind void;
}
