record `wc.c$p$a` @kind class @AccessFlag FINAL {
  `int` `wc.c$p$a.a` @AccessFlag FINAL;
  `java.util.Map` `wc.c$p$a.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `wc.c$p$a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`wc.c$p$a` v1 @kind this, `int` v2 ) @signature `Lwc/c$p$a;.<init>:(I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L4c93d8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c93de.  v0:= new `java.util.HashMap`;
  #L4c93e2.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4c93e8.  v1.`wc.c$p$a.b` @type ^`java.util.Map` := v0 @kind object;
  #L4c93ec.  v0:= new `java.util.HashMap`;
  #L4c93f0.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4c93f6.  v1.`wc.c$p$a.c` @type ^`java.util.Map` := v0 @kind object;
  #L4c93fa.  v1.`wc.c$p$a.a` @type ^`int` := v2;
  #L4c93fe.  return @kind void;
}
procedure `void` `<init>`(`wc.c$p$a` v0 @kind this, `int` v1 , `wc.c$a` v2 @kind object) @signature `Lwc/c$p$a;.<init>:(ILwc/c$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4c9410.  call `<init>`(v0, v1) @signature `Lwc/c$p$a;.<init>:(I)V` @kind direct;
  #L4c9416.  return @kind void;
}
procedure `wc.c$p$a` `a`(`wc.c$p$a` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `boolean` v2 ) @signature `Lwc/c$p$a;.a:(Lwc/c$p$a;Ljava/lang/CharSequence;Z)Lwc/c$p$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4c94d8.  call temp:= `d`(v0, v1, v2) @signature `Lwc/c$p$a;.d:(Ljava/lang/CharSequence;Z)Lwc/c$p$a;` @kind direct;
  #L4c94de.  v0:= temp @kind object;
  #L4c94e0.  return v0 @kind object;
}
procedure `void` `b`(`wc.c$p$a` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lwc/c$p$a;.b:(Lwc/c$p$a;Ljava/lang/String;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4c9428.  call `c`(v0, v1) @signature `Lwc/c$p$a;.c:(Ljava/lang/String;)V` @kind direct;
  #L4c942e.  return @kind void;
}
procedure `void` `c`(`wc.c$p$a` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lwc/c$p$a;.c:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4c9440.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4c9446.  v0:= temp;
  #L4c9448.  v1:= v4.`wc.c$p$a.a` @type ^`int`;
  #L4c944c.  if v0 != v1 then goto L4c9474;
  #L4c9450.  v0:= v4.`wc.c$p$a.b` @type ^`java.util.Map` @kind object;
  #L4c9454.  v1:= 0I;
  #L4c9456.  call temp:= `put`(v0, v5, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c945c.  v0:= v4.`wc.c$p$a.c` @type ^`java.util.Map` @kind object;
  #L4c9460.  v2:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L4c9464.  call temp:= `toLowerCase`(v5, v2) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4c946a.  v5:= temp @kind object;
  #L4c946c.  call temp:= `put`(v0, v5, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9472.  goto L4c94c6;
  #L4c9474.  if v0 <= v1 then goto L4c94c6;
  #L4c9478.  v2:= 0I;
  #L4c947a.  call temp:= `substring`(v5, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4c9480.  v1:= temp @kind object;
  #L4c9482.  v2:= v4.`wc.c$p$a.b` @type ^`java.util.Map` @kind object;
  #L4c9486.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c948c.  v2:= temp @kind object;
  #L4c948e.  v2:= (`wc.c$p$a`) v2 @kind object;
  #L4c9492.  if v2 != 0 then goto L4c94c0;
  #L4c9496.  v2:= new `wc.c$p$a`;
  #L4c949a.  call `<init>`(v2, v0) @signature `Lwc/c$p$a;.<init>:(I)V` @kind direct;
  #L4c94a0.  v0:= v4.`wc.c$p$a.b` @type ^`java.util.Map` @kind object;
  #L4c94a4.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c94aa.  v0:= v4.`wc.c$p$a.c` @type ^`java.util.Map` @kind object;
  #L4c94ae.  v3:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L4c94b2.  call temp:= `toLowerCase`(v1, v3) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4c94b8.  v1:= temp @kind object;
  #L4c94ba.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c94c0.  call `c`(v2, v5) @signature `Lwc/c$p$a;.c:(Ljava/lang/String;)V` @kind direct;
  #L4c94c6.  return @kind void;
}
procedure `wc.c$p$a` `d`(`wc.c$p$a` v1 @kind this, `java.lang.CharSequence` v2 @kind object, `boolean` v3 ) @signature `Lwc/c$p$a;.d:(Ljava/lang/CharSequence;Z)Lwc/c$p$a;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4c94f4.  if v3 == 0 then goto L4c950a;
  #L4c94f8.  v3:= v1.`wc.c$p$a.b` @type ^`java.util.Map` @kind object;
  #L4c94fc.  call temp:= `get`(v3, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9502.  v2:= temp @kind object;
  #L4c9504.  v2:= (`wc.c$p$a`) v2 @kind object;
  #L4c9508.  return v2 @kind object;
  #L4c950a.  v3:= v1.`wc.c$p$a.c` @type ^`java.util.Map` @kind object;
  #L4c950e.  call temp:= `toString`(v2) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L4c9514.  v2:= temp @kind object;
  #L4c9516.  v0:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L4c951a.  call temp:= `toLowerCase`(v2, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4c9520.  v2:= temp @kind object;
  #L4c9522.  goto L4c94fc;
}
