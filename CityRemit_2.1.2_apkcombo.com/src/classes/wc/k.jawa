record `wc.k` @kind class @AccessFlag FINAL extends `wc.g` @kind class {
}
global `java.util.Comparator` `@@wc.k.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lwc/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4cc0e4.  v0:= new `wc.k$a`;
  #L4cc0e8.  call `<init>`(v0) @signature `Lwc/k$a;.<init>:()V` @kind direct;
  #L4cc0ee.  `@@wc.k.a` @type ^`java.util.Comparator` := v0 @kind object;
  #L4cc0f2.  return @kind void;
}
procedure `java.util.Map$Entry` `c`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lwc/k;.c:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4cc0ac.  call temp:= `e`(v0, v1) @signature `Lwc/k;.e:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;` @kind static;
  #L4cc0b2.  v0:= temp @kind object;
  #L4cc0b4.  return v0 @kind object;
}
procedure `java.util.Comparator` `d`() @signature `Lwc/k;.d:()Ljava/util/Comparator;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L4cc094.  v0:= `@@wc.k.a` @type ^`java.util.Comparator` @kind object;
  #L4cc098.  return v0 @kind object;
}
procedure `java.util.Map$Entry` `e`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lwc/k;.e:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4cc0c8.  v0:= new `java.util.AbstractMap$SimpleImmutableEntry`;
  #L4cc0cc.  call `<init>`(v0, v1, v2) @signature `Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L4cc0d2.  return v0 @kind object;
}
