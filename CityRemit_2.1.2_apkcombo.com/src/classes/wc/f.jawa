record `wc.f` @kind class @AccessFlag FINAL {
  `yc.e` `wc.f.a` @AccessFlag PRIVATE;
  `java.util.Locale` `wc.f.b` @AccessFlag PRIVATE;
  `wc.h` `wc.f.c` @AccessFlag PRIVATE;
  `int` `wc.f.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`wc.f` v0 @kind this, `yc.e` v1 @kind object, `wc.b` v2 @kind object) @signature `Lwc/f;.<init>:(Lyc/e;Lwc/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4cb7c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4cb7ca.  call temp:= `a`(v1, v2) @signature `Lwc/f;.a:(Lyc/e;Lwc/b;)Lyc/e;` @kind static;
  #L4cb7d0.  v1:= temp @kind object;
  #L4cb7d2.  v0.`wc.f.a` @type ^`yc.e` := v1 @kind object;
  #L4cb7d6.  call temp:= `f`(v2) @signature `Lwc/b;.f:()Ljava/util/Locale;` @kind virtual;
  #L4cb7dc.  v1:= temp @kind object;
  #L4cb7de.  v0.`wc.f.b` @type ^`java.util.Locale` := v1 @kind object;
  #L4cb7e2.  call temp:= `e`(v2) @signature `Lwc/b;.e:()Lwc/h;` @kind virtual;
  #L4cb7e8.  v1:= temp @kind object;
  #L4cb7ea.  v0.`wc.f.c` @type ^`wc.h` := v1 @kind object;
  #L4cb7ee.  return @kind void;
}
procedure `yc.e` `a`(`yc.e` v9 @kind object, `wc.b` v10 @kind object) @signature `Lwc/f;.a:(Lyc/e;Lwc/b;)Lyc/e;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4cb858.  call temp:= `d`(v10) @signature `Lwc/b;.d:()Lvc/h;` @kind virtual;
  #L4cb85e.  v0:= temp @kind object;
  #L4cb860.  call temp:= `g`(v10) @signature `Lwc/b;.g:()Luc/q;` @kind virtual;
  #L4cb866.  v10:= temp @kind object;
  #L4cb868.  if v0 != 0 then goto L4cb872;
  #L4cb86c.  if v10 != 0 then goto L4cb872;
  #L4cb870.  return v9 @kind object;
  #L4cb872.  call temp:= `a`() @signature `Lyc/j;.a:()Lyc/k;` @kind static;
  #L4cb878.  v1:= temp @kind object;
  #L4cb87a.  call temp:= `j`(v9, v1) @signature `Lyc/e;.j:(Lyc/k;)Ljava/lang/Object;` @kind interface;
  #L4cb880.  v1:= temp @kind object;
  #L4cb882.  v1:= (`vc.h`) v1 @kind object;
  #L4cb886.  call temp:= `g`() @signature `Lyc/j;.g:()Lyc/k;` @kind static;
  #L4cb88c.  v2:= temp @kind object;
  #L4cb88e.  call temp:= `j`(v9, v2) @signature `Lyc/e;.j:(Lyc/k;)Ljava/lang/Object;` @kind interface;
  #L4cb894.  v2:= temp @kind object;
  #L4cb896.  v2:= (`uc.q`) v2 @kind object;
  #L4cb89a.  call temp:= `c`(v1, v0) @signature `Lxc/d;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4cb8a0.  v3:= temp;
  #L4cb8a2.  v4:= 0I;
  #L4cb8a4.  if v3 == 0 then goto L4cb8aa;
  #L4cb8a8.  v0:= v4 @kind object;
  #L4cb8aa.  call temp:= `c`(v2, v10) @signature `Lxc/d;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4cb8b0.  v3:= temp;
  #L4cb8b2.  if v3 == 0 then goto L4cb8b8;
  #L4cb8b6.  v10:= v4 @kind object;
  #L4cb8b8.  if v0 != 0 then goto L4cb8c2;
  #L4cb8bc.  if v10 != 0 then goto L4cb8c2;
  #L4cb8c0.  return v9 @kind object;
  #L4cb8c2.  if v0 == 0 then goto L4cb8ca;
  #L4cb8c6.  v3:= v0 @kind object;
  #L4cb8c8.  goto L4cb8cc;
  #L4cb8ca.  v3:= v1 @kind object;
  #L4cb8cc.  if v10 == 0 then goto L4cb8d2;
  #L4cb8d0.  v2:= v10 @kind object;
  #L4cb8d2.  v5:= " " @kind object;
  #L4cb8d6.  if v10 == 0 then goto L4cb976;
  #L4cb8da.  v6:= `@@yc.a.U` @type ^`yc.a` @kind object;
  #L4cb8de.  call temp:= `d`(v9, v6) @signature `Lyc/e;.d:(Lyc/i;)Z` @kind interface;
  #L4cb8e4.  v6:= temp;
  #L4cb8e6.  if v6 == 0 then goto L4cb906;
  #L4cb8ea.  if v3 == 0 then goto L4cb8f0;
  #L4cb8ee.  goto L4cb8f4;
  #L4cb8f0.  v3:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L4cb8f4.  call temp:= `X`(v9) @signature `Luc/e;.X:(Lyc/e;)Luc/e;` @kind static;
  #L4cb8fa.  v9:= temp @kind object;
  #L4cb8fc.  call temp:= `I`(v3, v9, v10) @signature `Lvc/h;.I:(Luc/e;Luc/q;)Lvc/f;` @kind virtual;
  #L4cb902.  v9:= temp @kind object;
  #L4cb904.  return v9 @kind object;
  #L4cb906.  call temp:= `i`(v10) @signature `Luc/q;.i:()Luc/q;` @kind virtual;
  #L4cb90c.  v6:= temp @kind object;
  #L4cb90e.  call temp:= `d`() @signature `Lyc/j;.d:()Lyc/k;` @kind static;
  #L4cb914.  v7:= temp @kind object;
  #L4cb916.  call temp:= `j`(v9, v7) @signature `Lyc/e;.j:(Lyc/k;)Ljava/lang/Object;` @kind interface;
  #L4cb91c.  v7:= temp @kind object;
  #L4cb91e.  v7:= (`uc.r`) v7 @kind object;
  #L4cb922.  v8:= instanceof @variable v6 @type ^`uc.r` @kind boolean;
  #L4cb926.  if v8 == 0 then goto L4cb976;
  #L4cb92a.  if v7 == 0 then goto L4cb976;
  #L4cb92e.  call temp:= `equals`(v6, v7) @signature `Luc/q;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4cb934.  v6:= temp;
  #L4cb936.  if v6 == 0 then goto L4cb93c;
  #L4cb93a.  goto L4cb976;
  #L4cb93c.  v0:= new `uc.b`;
  #L4cb940.  v1:= new `java.lang.StringBuilder`;
  #L4cb944.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4cb94a.  v2:= "Invalid override zone for temporal: " @kind object;
  #L4cb94e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cb954.  call temp:= `append`(v1, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cb95a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cb960.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cb966.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4cb96c.  v9:= temp @kind object;
  #L4cb96e.  call `<init>`(v0, v9) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4cb974.  throw v0;
  #L4cb976.  if v0 == 0 then goto L4cba0e;
  #L4cb97a.  v10:= `@@yc.a.M` @type ^`yc.a` @kind object;
  #L4cb97e.  call temp:= `d`(v9, v10) @signature `Lyc/e;.d:(Lyc/i;)Z` @kind interface;
  #L4cb984.  v10:= temp;
  #L4cb986.  if v10 == 0 then goto L4cb994;
  #L4cb98a.  call temp:= `d`(v3, v9) @signature `Lvc/h;.d:(Lyc/e;)Lvc/b;` @kind virtual;
  #L4cb990.  v4:= temp @kind object;
  #L4cb992.  goto L4cba0e;
  #L4cb994.  v10:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L4cb998.  if v0 != v10 then goto L4cb9a0;
  #L4cb99c.  if v1 == 0 then goto L4cba0e;
  #L4cb9a0.  call temp:= `values`() @signature `Lyc/a;.values:()[Lyc/a;` @kind static;
  #L4cb9a6.  v10:= temp @kind object;
  #L4cb9a8.  v1:= length @variable v10;
  #L4cb9aa.  v6:= 0I;
  #L4cb9ac.  if v6 >= v1 then goto L4cba0e;
  #L4cb9b0.  v7:= v10[v6] @kind object;
  #L4cb9b4.  call temp:= `c`(v7) @signature `Lyc/a;.c:()Z` @kind virtual;
  #L4cb9ba.  v8:= temp;
  #L4cb9bc.  if v8 == 0 then goto L4cba08;
  #L4cb9c0.  call temp:= `d`(v9, v7) @signature `Lyc/e;.d:(Lyc/i;)Z` @kind interface;
  #L4cb9c6.  v7:= temp;
  #L4cb9c8.  if v7 != 0 then goto L4cb9ce;
  #L4cb9cc.  goto L4cba08;
  #L4cb9ce.  v10:= new `uc.b`;
  #L4cb9d2.  v1:= new `java.lang.StringBuilder`;
  #L4cb9d6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4cb9dc.  v2:= "Invalid override chronology for temporal: " @kind object;
  #L4cb9e0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cb9e6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cb9ec.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cb9f2.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cb9f8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4cb9fe.  v9:= temp @kind object;
  #L4cba00.  call `<init>`(v10, v9) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4cba06.  throw v10;
  #L4cba08.  v6:= v6 + 1;
  #L4cba0c.  goto L4cb9ac;
  #L4cba0e.  v10:= new `wc.f$a`;
  #L4cba12.  call `<init>`(v10, v4, v9, v3, v2) @signature `Lwc/f$a;.<init>:(Lvc/b;Lyc/e;Lvc/h;Luc/q;)V` @kind direct;
  #L4cba18.  return v10 @kind object;
}
procedure `void` `b`(`wc.f` v1 @kind this) @signature `Lwc/f;.b:()V` @AccessFlag  {
    temp;
    v0;

  #L4cb800.  v0:= v1.`wc.f.d` @type ^`int`;
  #L4cb804.  v0:= v0 + -1;
  #L4cb808.  v1.`wc.f.d` @type ^`int` := v0;
  #L4cb80c.  return @kind void;
}
procedure `java.util.Locale` `c`(`wc.f` v1 @kind this) @signature `Lwc/f;.c:()Ljava/util/Locale;` @AccessFlag  {
    temp;
    v0;

  #L4cb7ac.  v0:= v1.`wc.f.b` @type ^`java.util.Locale` @kind object;
  #L4cb7b0.  return v0 @kind object;
}
procedure `wc.h` `d`(`wc.f` v1 @kind this) @signature `Lwc/f;.d:()Lwc/h;` @AccessFlag  {
    temp;
    v0;

  #L4cb840.  v0:= v1.`wc.f.c` @type ^`wc.h` @kind object;
  #L4cb844.  return v0 @kind object;
}
procedure `yc.e` `e`(`wc.f` v1 @kind this) @signature `Lwc/f;.e:()Lyc/e;` @AccessFlag  {
    temp;
    v0;

  #L4cba2c.  v0:= v1.`wc.f.a` @type ^`yc.e` @kind object;
  #L4cba30.  return v0 @kind object;
}
procedure `java.lang.Long` `f`(`wc.f` v2 @kind this, `yc.i` v3 @kind object) @signature `Lwc/f;.f:(Lyc/i;)Ljava/lang/Long;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4cb6dc.  v0:= v2.`wc.f.a` @type ^`yc.e` @kind object;
  #L4cb6e0.  call temp:= `B`(v0, v3) @signature `Lyc/e;.B:(Lyc/i;)J` @kind interface;
  #L4cb6e6.  v0:= temp @kind wide;
  #L4cb6e8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4cb6ee.  v3:= temp @kind object;
  #L4cb6f0.  return v3 @kind object;
  #L4cb6f2.  v3:= Exception @type ^`uc.b` @kind object;
  #L4cb6f4.  v0:= v2.`wc.f.d` @type ^`int`;
  #L4cb6f8.  if v0 <= 0 then goto L4cb700;
  #L4cb6fc.  v3:= 0I;
  #L4cb6fe.  return v3 @kind object;
  #L4cb700.  throw v3;
  catch `uc.b` @[L4cb6dc..L4cb6f0] goto L4cb6f2;
}
procedure `java.lang.Object` `g`(`wc.f` v2 @kind this, `yc.k` v3 @kind object) @signature `Lwc/f;.g:(Lyc/k;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4cb724.  v0:= v2.`wc.f.a` @type ^`yc.e` @kind object;
  #L4cb728.  call temp:= `j`(v0, v3) @signature `Lyc/e;.j:(Lyc/k;)Ljava/lang/Object;` @kind interface;
  #L4cb72e.  v3:= temp @kind object;
  #L4cb730.  if v3 != 0 then goto L4cb778;
  #L4cb734.  v0:= v2.`wc.f.d` @type ^`int`;
  #L4cb738.  if v0 == 0 then goto L4cb73e;
  #L4cb73c.  goto L4cb778;
  #L4cb73e.  v3:= new `uc.b`;
  #L4cb742.  v0:= new `java.lang.StringBuilder`;
  #L4cb746.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4cb74c.  v1:= "Unable to extract value: " @kind object;
  #L4cb750.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cb756.  v1:= v2.`wc.f.a` @type ^`yc.e` @kind object;
  #L4cb75a.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4cb760.  v1:= temp @kind object;
  #L4cb762.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cb768.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4cb76e.  v0:= temp @kind object;
  #L4cb770.  call `<init>`(v3, v0) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4cb776.  throw v3;
  #L4cb778.  return v3 @kind object;
}
procedure `void` `h`(`wc.f` v1 @kind this) @signature `Lwc/f;.h:()V` @AccessFlag  {
    temp;
    v0;

  #L4cb820.  v0:= v1.`wc.f.d` @type ^`int`;
  #L4cb824.  v0:= v0 + 1;
  #L4cb828.  v1.`wc.f.d` @type ^`int` := v0;
  #L4cb82c.  return @kind void;
}
procedure `java.lang.String` `toString`(`wc.f` v1 @kind this) @signature `Lwc/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cb78c.  v0:= v1.`wc.f.a` @type ^`yc.e` @kind object;
  #L4cb790.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4cb796.  v0:= temp @kind object;
  #L4cb798.  return v0 @kind object;
}
