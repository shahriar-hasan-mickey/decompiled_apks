record `wc.c$m` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `wc.c$g` @kind interface {
}
global `wc.c$m` `@@wc.c$m.o` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `wc.c$m` `@@wc.c$m.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `wc.c$m` `@@wc.c$m.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `wc.c$m` `@@wc.c$m.r` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `wc.c$m`[] `@@wc.c$m.s` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lwc/c$m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4c8fd4.  v0:= new `wc.c$m`;
  #L4c8fd8.  v1:= "SENSITIVE" @kind object;
  #L4c8fdc.  v2:= 0I;
  #L4c8fde.  call `<init>`(v0, v1, v2) @signature `Lwc/c$m;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4c8fe4.  `@@wc.c$m.o` @type ^`wc.c$m` := v0 @kind object;
  #L4c8fe8.  v1:= new `wc.c$m`;
  #L4c8fec.  v3:= "INSENSITIVE" @kind object;
  #L4c8ff0.  v4:= 1I;
  #L4c8ff2.  call `<init>`(v1, v3, v4) @signature `Lwc/c$m;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4c8ff8.  `@@wc.c$m.p` @type ^`wc.c$m` := v1 @kind object;
  #L4c8ffc.  v3:= new `wc.c$m`;
  #L4c9000.  v5:= "STRICT" @kind object;
  #L4c9004.  v6:= 2I;
  #L4c9006.  call `<init>`(v3, v5, v6) @signature `Lwc/c$m;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4c900c.  `@@wc.c$m.q` @type ^`wc.c$m` := v3 @kind object;
  #L4c9010.  v5:= new `wc.c$m`;
  #L4c9014.  v7:= "LENIENT" @kind object;
  #L4c9018.  v8:= 3I;
  #L4c901a.  call `<init>`(v5, v7, v8) @signature `Lwc/c$m;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4c9020.  `@@wc.c$m.r` @type ^`wc.c$m` := v5 @kind object;
  #L4c9024.  v7:= 4I;
  #L4c9026.  v7:= new `wc.c$m`[v7];
  #L4c902a.  v7[v2]:= v0 @kind object;
  #L4c902e.  v7[v4]:= v1 @kind object;
  #L4c9032.  v7[v6]:= v3 @kind object;
  #L4c9036.  v7[v8]:= v5 @kind object;
  #L4c903a.  `@@wc.c$m.s` @type ^`wc.c$m`[] := v7 @kind object;
  #L4c903e.  return @kind void;
}
procedure `void` `<init>`(`wc.c$m` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lwc/c$m;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4c9050.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4c9056.  return @kind void;
}
procedure `wc.c$m` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lwc/c$m;.valueOf:(Ljava/lang/String;)Lwc/c$m;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c9068.  v0:= constclass @type ^`wc.c$m` @kind object;
  #L4c906c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L4c9072.  v1:= temp @kind object;
  #L4c9074.  v1:= (`wc.c$m`) v1 @kind object;
  #L4c9078.  return v1 @kind object;
}
procedure `wc.c$m`[] `values`() @signature `Lwc/c$m;.values:()[Lwc/c$m;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4c908c.  v0:= `@@wc.c$m.s` @type ^`wc.c$m`[] @kind object;
  #L4c9090.  call temp:= `clone`(v0) @signature `[Lwc/c$m;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4c9096.  v0:= temp @kind object;
  #L4c9098.  v0:= (`wc.c$m`[]) v0 @kind object;
  #L4c909c.  return v0 @kind object;
}
procedure `boolean` `c`(`wc.c$m` v0 @kind this, `wc.f` v1 @kind object, `java.lang.StringBuilder` v2 @kind object) @signature `Lwc/c$m;.c:(Lwc/f;Ljava/lang/StringBuilder;)Z` @AccessFlag PUBLIC {
    temp;

  #L4c8f14.  v1:= 1I;
  #L4c8f16.  return v1;
}
procedure `int` `d`(`wc.c$m` v3 @kind this, `wc.d` v4 @kind object, `java.lang.CharSequence` v5 @kind object, `int` v6 ) @signature `Lwc/c$m;.d:(Lwc/d;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4c8f28.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4c8f2e.  v5:= temp;
  #L4c8f30.  v0:= 1I;
  #L4c8f32.  if v5 == 0 then goto L4c8f62;
  #L4c8f36.  v1:= 0I;
  #L4c8f38.  if v5 == v0 then goto L4c8f5a;
  #L4c8f3c.  v2:= 2I;
  #L4c8f3e.  if v5 == v2 then goto L4c8f52;
  #L4c8f42.  v0:= 3I;
  #L4c8f44.  if v5 == v0 then goto L4c8f4a;
  #L4c8f48.  goto L4c8f68;
  #L4c8f4a.  call `q`(v4, v1) @signature `Lwc/d;.q:(Z)V` @kind virtual;
  #L4c8f50.  goto L4c8f68;
  #L4c8f52.  call `q`(v4, v0) @signature `Lwc/d;.q:(Z)V` @kind virtual;
  #L4c8f58.  goto L4c8f68;
  #L4c8f5a.  call `m`(v4, v1) @signature `Lwc/d;.m:(Z)V` @kind virtual;
  #L4c8f60.  goto L4c8f68;
  #L4c8f62.  call `m`(v4, v0) @signature `Lwc/d;.m:(Z)V` @kind virtual;
  #L4c8f68.  return v6;
}
procedure `java.lang.String` `toString`(`wc.c$m` v2 @kind this) @signature `Lwc/c$m;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c8f7c.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4c8f82.  v0:= temp;
  #L4c8f84.  if v0 == 0 then goto L4c8fbc;
  #L4c8f88.  v1:= 1I;
  #L4c8f8a.  if v0 == v1 then goto L4c8fb6;
  #L4c8f8e.  v1:= 2I;
  #L4c8f90.  if v0 == v1 then goto L4c8fb0;
  #L4c8f94.  v1:= 3I;
  #L4c8f96.  if v0 != v1 then goto L4c8fa0;
  #L4c8f9a.  v0:= "ParseStrict(false)" @kind object;
  #L4c8f9e.  return v0 @kind object;
  #L4c8fa0.  v0:= new `java.lang.IllegalStateException`;
  #L4c8fa4.  v1:= "Unreachable" @kind object;
  #L4c8fa8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c8fae.  throw v0;
  #L4c8fb0.  v0:= "ParseStrict(true)" @kind object;
  #L4c8fb4.  return v0 @kind object;
  #L4c8fb6.  v0:= "ParseCaseSensitive(false)" @kind object;
  #L4c8fba.  return v0 @kind object;
  #L4c8fbc.  v0:= "ParseCaseSensitive(true)" @kind object;
  #L4c8fc0.  return v0 @kind object;
}
