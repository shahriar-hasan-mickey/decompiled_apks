record `wc.c$i` @kind class @AccessFlag FINAL extends `wc.c$g` @kind interface {
  `int` `wc.c$i.o` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`wc.c$i` v0 @kind this, `int` v1 ) @signature `Lwc/c$i;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c80a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c80a6.  v0.`wc.c$i.o` @type ^`int` := v1;
  #L4c80aa.  return @kind void;
}
procedure `boolean` `c`(`wc.c$i` v17 @kind this, `wc.f` v18 @kind object, `java.lang.StringBuilder` v19 @kind object) @signature `Lwc/c$i;.c:(Lwc/f;Ljava/lang/StringBuilder;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L4c7c14.  v0:= v17 @kind object;
  #L4c7c18.  v1:= v19 @kind object;
  #L4c7c1c.  v2:= `@@yc.a.U` @type ^`yc.a` @kind object;
  #L4c7c20.  v3:= v18 @kind object;
  #L4c7c24.  call temp:= `f`(v3, v2) @signature `Lwc/f;.f:(Lyc/i;)Ljava/lang/Long;` @kind virtual;
  #L4c7c2a.  v2:= temp @kind object;
  #L4c7c2c.  v4:= 0L;
  #L4c7c30.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c7c36.  v6:= temp @kind object;
  #L4c7c38.  call temp:= `e`(v18) @signature `Lwc/f;.e:()Lyc/e;` @kind virtual;
  #L4c7c3e.  v7:= temp @kind object;
  #L4c7c40.  v8:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L4c7c44.  call temp:= `d`(v7, v8) @signature `Lyc/e;.d:(Lyc/i;)Z` @kind interface;
  #L4c7c4a.  v7:= temp;
  #L4c7c4c.  if v7 == 0 then goto L4c7c68;
  #L4c7c50.  call temp:= `e`(v18) @signature `Lwc/f;.e:()Lyc/e;` @kind virtual;
  #L4c7c56.  v3:= temp @kind object;
  #L4c7c58.  call temp:= `B`(v3, v8) @signature `Lyc/e;.B:(Lyc/i;)J` @kind interface;
  #L4c7c5e.  v6:= temp @kind wide;
  #L4c7c60.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c7c66.  v6:= temp @kind object;
  #L4c7c68.  v3:= 0I;
  #L4c7c6a.  if v2 != 0 then goto L4c7c70;
  #L4c7c6e.  return v3;
  #L4c7c70.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c7c76.  v9:= temp @kind wide;
  #L4c7c78.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c7c7e.  v6:= temp @kind wide;
  #L4c7c80.  call temp:= `r`(v8, v6) @signature `Lyc/a;.r:(J)I` @kind virtual;
  #L4c7c86.  v2:= temp;
  #L4c7c88.  v6:= -62167219200L;
  #L4c7c92.  v8:= ":00" @kind object;
  #L4c7c96.  v11:= 1L;
  #L4c7c9a.  v13:= 62167219200L;
  #L4c7ca4.  v4:= 315569520000L;
  #L4c7cae.  v15:= 1I;
  #L4c7cb0.  v16:= lcmp(v9, v6);
  #L4c7cb4.  if v16 < 0 then goto L4c7d12;
  #L4c7cb8.  v9:= v9 - v4 @kind long;
  #L4c7cba.  v9:= v9 + v13 @kind long;
  #L4c7cbc.  call temp:= `e`(v9, v4) @signature `Lxc/d;.e:(JJ)J` @kind static;
  #L4c7cc2.  v6:= temp @kind wide;
  #L4c7cc4.  v6:= v6 + v11 @kind long;
  #L4c7cc6.  call temp:= `h`(v9, v4) @signature `Lxc/d;.h:(JJ)J` @kind static;
  #L4c7ccc.  v4:= temp @kind wide;
  #L4c7cce.  v4:= v4 - v13 @kind long;
  #L4c7cd0.  v9:= `@@uc.r.s` @type ^`uc.r` @kind object;
  #L4c7cd4.  call temp:= `A0`(v4, v3, v9) @signature `Luc/g;.A0:(JILuc/r;)Luc/g;` @kind static;
  #L4c7cda.  v4:= temp @kind object;
  #L4c7cdc.  v9:= 0L;
  #L4c7ce0.  v5:= lcmp(v6, v9);
  #L4c7ce4.  if v5 <= 0 then goto L4c7cf8;
  #L4c7ce8.  v5:= 43I;
  #L4c7cec.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7cf2.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7cf8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7cfe.  call temp:= `v0`(v4) @signature `Luc/g;.v0:()I` @kind virtual;
  #L4c7d04.  v4:= temp;
  #L4c7d06.  if v4 != 0 then goto L4c7d96;
  #L4c7d0a.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7d10.  goto L4c7d96;
  #L4c7d12.  v9:= v9 + v13 @kind long;
  #L4c7d14.  v6:= v9 / v4 @kind long;
  #L4c7d18.  v9:= v9 %% v4 @kind long;
  #L4c7d1a.  v4:= v9 - v13 @kind long;
  #L4c7d1e.  v13:= `@@uc.r.s` @type ^`uc.r` @kind object;
  #L4c7d22.  call temp:= `A0`(v4, v3, v13) @signature `Luc/g;.A0:(JILuc/r;)Luc/g;` @kind static;
  #L4c7d28.  v4:= temp @kind object;
  #L4c7d2a.  call temp:= `length`(v19) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L4c7d30.  v5:= temp;
  #L4c7d32.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7d38.  call temp:= `v0`(v4) @signature `Luc/g;.v0:()I` @kind virtual;
  #L4c7d3e.  v13:= temp;
  #L4c7d40.  if v13 != 0 then goto L4c7d4a;
  #L4c7d44.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7d4a.  v13:= 0L;
  #L4c7d4e.  v8:= lcmp(v6, v13);
  #L4c7d52.  if v8 >= 0 then goto L4c7d96;
  #L4c7d56.  call temp:= `w0`(v4) @signature `Luc/g;.w0:()I` @kind virtual;
  #L4c7d5c.  v4:= temp;
  #L4c7d5e.  v8:= -10000I;
  #L4c7d62.  if v4 != v8 then goto L4c7d7c;
  #L4c7d66.  v4:= v5 + 2;
  #L4c7d6a.  v6:= v6 - v11 @kind long;
  #L4c7d6c.  call temp:= `toString`(v6) @signature `Ljava/lang/Long;.toString:(J)Ljava/lang/String;` @kind static;
  #L4c7d72.  v6:= temp @kind object;
  #L4c7d74.  call temp:= `replace`(v1, v5, v4, v6) @signature `Ljava/lang/StringBuilder;.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7d7a.  goto L4c7d96;
  #L4c7d7c.  v4:= lcmp(v9, v13);
  #L4c7d80.  if v4 != 0 then goto L4c7d86;
  #L4c7d84.  goto L4c7d90;
  #L4c7d86.  v5:= v5 + v15 @kind int;
  #L4c7d88.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(J)J` @kind static;
  #L4c7d8e.  v6:= temp @kind wide;
  #L4c7d90.  call temp:= `insert`(v1, v5, v6) @signature `Ljava/lang/StringBuilder;.insert:(IJ)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7d96.  v4:= v0.`wc.c$i.o` @type ^`int`;
  #L4c7d9a.  v5:= -2I;
  #L4c7d9c.  v6:= 46I;
  #L4c7da0.  if v4 != v5 then goto L4c7df2;
  #L4c7da4.  if v2 == 0 then goto L4c7e3c;
  #L4c7da8.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7dae.  v3:= 1000000I;
  #L4c7db4.  v4:= v2 %% v3 @kind int;
  #L4c7db8.  if v4 != 0 then goto L4c7dda;
  #L4c7dbc.  v2:= v2 / v3 @kind int;
  #L4c7dbe.  v2:= v2 + 1000;
  #L4c7dc2.  call temp:= `toString`(v2) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L4c7dc8.  v2:= temp @kind object;
  #L4c7dca.  call temp:= `substring`(v2, v15) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L4c7dd0.  v2:= temp @kind object;
  #L4c7dd2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7dd8.  goto L4c7e3c;
  #L4c7dda.  v4:= v2 %% 1000;
  #L4c7dde.  if v4 != 0 then goto L4c7de8;
  #L4c7de2.  v2:= v2 / 1000;
  #L4c7de6.  goto L4c7dee;
  #L4c7de8.  v3:= 1000000000I;
  #L4c7dee.  v2:= v2 + v3 @kind int;
  #L4c7df0.  goto L4c7dc2;
  #L4c7df2.  v5:= -1I;
  #L4c7df4.  if v4 > 0 then goto L4c7e00;
  #L4c7df8.  if v4 != v5 then goto L4c7e3c;
  #L4c7dfc.  if v2 <= 0 then goto L4c7e3c;
  #L4c7e00.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7e06.  v4:= 100000000I;
  #L4c7e0c.  v6:= v0.`wc.c$i.o` @type ^`int`;
  #L4c7e10.  if v6 != v5 then goto L4c7e18;
  #L4c7e14.  if v2 > 0 then goto L4c7e1c;
  #L4c7e18.  if v3 >= v6 then goto L4c7e3c;
  #L4c7e1c.  v6:= v2 / v4 @kind int;
  #L4c7e20.  v7:= v6 + 48;
  #L4c7e24.  v7:= (`char`) v7 @kind i2c;
  #L4c7e26.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7e2c.  v6:= v6 * v4 @kind int;
  #L4c7e30.  v2:= v2 - v6 @kind int;
  #L4c7e32.  v4:= v4 / 10;
  #L4c7e36.  v3:= v3 + 1;
  #L4c7e3a.  goto L4c7e0c;
  #L4c7e3c.  v2:= 90I;
  #L4c7e40.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7e46.  return v15;
}
procedure `int` `d`(`wc.c$i` v20 @kind this, `wc.d` v21 @kind object, `java.lang.CharSequence` v22 @kind object, `int` v23 ) @signature `Lwc/c$i;.d:(Lwc/d;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L4c7e58.  v6:= v23;
  #L4c7e5c.  call temp:= `d`(v21) @signature `Lwc/d;.d:()Lwc/d;` @kind virtual;
  #L4c7e62.  v0:= temp @kind object;
  #L4c7e64.  v7:= v20 @kind object;
  #L4c7e68.  v1:= v7.`wc.c$i.o` @type ^`int`;
  #L4c7e6c.  v2:= 0I;
  #L4c7e6e.  if v1 >= 0 then goto L4c7e76;
  #L4c7e72.  v3:= 0I;
  #L4c7e74.  goto L4c7e78;
  #L4c7e76.  v3:= v1;
  #L4c7e78.  if v1 >= 0 then goto L4c7e80;
  #L4c7e7c.  v1:= 9I;
  #L4c7e80.  v4:= new `wc.c`;
  #L4c7e84.  call `<init>`(v4) @signature `Lwc/c;.<init>:()V` @kind direct;
  #L4c7e8a.  v5:= `@@wc.b.h` @type ^`wc.b` @kind object;
  #L4c7e8e.  call temp:= `a`(v4, v5) @signature `Lwc/c;.a:(Lwc/b;)Lwc/c;` @kind virtual;
  #L4c7e94.  v4:= temp @kind object;
  #L4c7e96.  v5:= 84I;
  #L4c7e9a.  call temp:= `e`(v4, v5) @signature `Lwc/c;.e:(C)Lwc/c;` @kind virtual;
  #L4c7ea0.  v4:= temp @kind object;
  #L4c7ea2.  v5:= `@@yc.a.E` @type ^`yc.a` @kind object;
  #L4c7ea6.  v8:= 2I;
  #L4c7ea8.  call temp:= `k`(v4, v5, v8) @signature `Lwc/c;.k:(Lyc/i;I)Lwc/c;` @kind virtual;
  #L4c7eae.  v4:= temp @kind object;
  #L4c7eb0.  v9:= 58I;
  #L4c7eb4.  call temp:= `e`(v4, v9) @signature `Lwc/c;.e:(C)Lwc/c;` @kind virtual;
  #L4c7eba.  v4:= temp @kind object;
  #L4c7ebc.  v10:= `@@yc.a.A` @type ^`yc.a` @kind object;
  #L4c7ec0.  call temp:= `k`(v4, v10, v8) @signature `Lwc/c;.k:(Lyc/i;I)Lwc/c;` @kind virtual;
  #L4c7ec6.  v4:= temp @kind object;
  #L4c7ec8.  call temp:= `e`(v4, v9) @signature `Lwc/c;.e:(C)Lwc/c;` @kind virtual;
  #L4c7ece.  v4:= temp @kind object;
  #L4c7ed0.  v9:= `@@yc.a.y` @type ^`yc.a` @kind object;
  #L4c7ed4.  call temp:= `k`(v4, v9, v8) @signature `Lwc/c;.k:(Lyc/i;I)Lwc/c;` @kind virtual;
  #L4c7eda.  v4:= temp @kind object;
  #L4c7edc.  v8:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L4c7ee0.  v11:= 1I;
  #L4c7ee2.  call temp:= `b`(v4, v8, v3, v1, v11) @signature `Lwc/c;.b:(Lyc/i;IIZ)Lwc/c;` @kind virtual;
  #L4c7ee8.  v1:= temp @kind object;
  #L4c7eea.  v3:= 90I;
  #L4c7eee.  call temp:= `e`(v1, v3) @signature `Lwc/c;.e:(C)Lwc/c;` @kind virtual;
  #L4c7ef4.  v1:= temp @kind object;
  #L4c7ef6.  call temp:= `s`(v1) @signature `Lwc/c;.s:()Lwc/b;` @kind virtual;
  #L4c7efc.  v1:= temp @kind object;
  #L4c7efe.  call temp:= `k`(v1, v2) @signature `Lwc/b;.k:(Z)Lwc/c$f;` @kind virtual;
  #L4c7f04.  v1:= temp @kind object;
  #L4c7f06.  v3:= v22 @kind object;
  #L4c7f0a.  call temp:= `d`(v1, v0, v3, v6) @signature `Lwc/c$f;.d:(Lwc/d;Ljava/lang/CharSequence;I)I` @kind virtual;
  #L4c7f10.  v12:= temp;
  #L4c7f12.  if v12 >= 0 then goto L4c7f18;
  #L4c7f16.  return v12;
  #L4c7f18.  v1:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L4c7f1c.  call temp:= `i`(v0, v1) @signature `Lwc/d;.i:(Lyc/i;)Ljava/lang/Long;` @kind virtual;
  #L4c7f22.  v1:= temp @kind object;
  #L4c7f24.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c7f2a.  v3:= temp @kind wide;
  #L4c7f2c.  v1:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L4c7f30.  call temp:= `i`(v0, v1) @signature `Lwc/d;.i:(Lyc/i;)Ljava/lang/Long;` @kind virtual;
  #L4c7f36.  v1:= temp @kind object;
  #L4c7f38.  call temp:= `intValue`(v1) @signature `Ljava/lang/Long;.intValue:()I` @kind virtual;
  #L4c7f3e.  v14:= temp;
  #L4c7f40.  v1:= `@@yc.a.K` @type ^`yc.a` @kind object;
  #L4c7f44.  call temp:= `i`(v0, v1) @signature `Lwc/d;.i:(Lyc/i;)Ljava/lang/Long;` @kind virtual;
  #L4c7f4a.  v1:= temp @kind object;
  #L4c7f4c.  call temp:= `intValue`(v1) @signature `Ljava/lang/Long;.intValue:()I` @kind virtual;
  #L4c7f52.  v15:= temp;
  #L4c7f54.  call temp:= `i`(v0, v5) @signature `Lwc/d;.i:(Lyc/i;)Ljava/lang/Long;` @kind virtual;
  #L4c7f5a.  v1:= temp @kind object;
  #L4c7f5c.  call temp:= `intValue`(v1) @signature `Ljava/lang/Long;.intValue:()I` @kind virtual;
  #L4c7f62.  v1:= temp;
  #L4c7f64.  call temp:= `i`(v0, v10) @signature `Lwc/d;.i:(Lyc/i;)Ljava/lang/Long;` @kind virtual;
  #L4c7f6a.  v5:= temp @kind object;
  #L4c7f6c.  call temp:= `intValue`(v5) @signature `Ljava/lang/Long;.intValue:()I` @kind virtual;
  #L4c7f72.  v5:= temp;
  #L4c7f74.  call temp:= `i`(v0, v9) @signature `Lwc/d;.i:(Lyc/i;)Ljava/lang/Long;` @kind virtual;
  #L4c7f7a.  v9:= temp @kind object;
  #L4c7f7c.  call temp:= `i`(v0, v8) @signature `Lwc/d;.i:(Lyc/i;)Ljava/lang/Long;` @kind virtual;
  #L4c7f82.  v0:= temp @kind object;
  #L4c7f84.  if v9 == 0 then goto L4c7f92;
  #L4c7f88.  call temp:= `intValue`(v9) @signature `Ljava/lang/Long;.intValue:()I` @kind virtual;
  #L4c7f8e.  v9:= temp;
  #L4c7f90.  goto L4c7f94;
  #L4c7f92.  v9:= 0I;
  #L4c7f94.  if v0 == 0 then goto L4c7fa4;
  #L4c7f98.  call temp:= `intValue`(v0) @signature `Ljava/lang/Long;.intValue:()I` @kind virtual;
  #L4c7f9e.  v0:= temp;
  #L4c7fa0.  v10:= v0;
  #L4c7fa2.  goto L4c7fa6;
  #L4c7fa4.  v10:= 0I;
  #L4c7fa6.  v0:= (`int`) v3 @kind l2i;
  #L4c7fa8.  v13:= v0 %% 10000;
  #L4c7fac.  v0:= 24I;
  #L4c7fb0.  v2:= 59I;
  #L4c7fb4.  if v1 != v0 then goto L4c7fd0;
  #L4c7fb8.  if v5 != 0 then goto L4c7fd0;
  #L4c7fbc.  if v9 != 0 then goto L4c7fd0;
  #L4c7fc0.  if v10 != 0 then goto L4c7fd0;
  #L4c7fc4.  v18:= v9;
  #L4c7fc8.  v2:= 1I;
  #L4c7fca.  v16:= 0I;
  #L4c7fce.  goto L4c8000;
  #L4c7fd0.  v0:= 23I;
  #L4c7fd4.  if v1 != v0 then goto L4c7ff6;
  #L4c7fd8.  if v5 != v2 then goto L4c7ff6;
  #L4c7fdc.  v0:= 60I;
  #L4c7fe0.  if v9 != v0 then goto L4c7ff6;
  #L4c7fe4.  call `p`(v21) @signature `Lwc/d;.p:()V` @kind virtual;
  #L4c7fea.  v16:= v1;
  #L4c7fee.  v2:= 0I;
  #L4c7ff0.  v18:= 59I;
  #L4c7ff4.  goto L4c8000;
  #L4c7ff6.  v16:= v1;
  #L4c7ffa.  v18:= v9;
  #L4c7ffe.  v2:= 0I;
  #L4c8000.  v19:= 0I;
  #L4c8004.  v17:= v5;
  #L4c8008.  call temp:= `y0`(v13, v14, v15, v16, v17, v18, v19) @signature `Luc/g;.y0:(IIIIIII)Luc/g;` @kind static;
  #L4c800e.  v0:= temp @kind object;
  #L4c8010.  v1:= (`long`) v2 @kind i2l;
  #L4c8012.  call temp:= `E0`(v0, v1) @signature `Luc/g;.E0:(J)Luc/g;` @kind virtual;
  #L4c8018.  v0:= temp @kind object;
  #L4c801a.  v1:= `@@uc.r.s` @type ^`uc.r` @kind object;
  #L4c801e.  call temp:= `f0`(v0, v1) @signature `Lvc/c;.f0:(Luc/r;)J` @kind virtual;
  #L4c8024.  v0:= temp @kind wide;
  #L4c8026.  v13:= 10000L;
  #L4c802a.  v3:= v3 / v13 @kind long;
  #L4c802c.  v13:= 315569520000L;
  #L4c8036.  call temp:= `m`(v3, v13) @signature `Lxc/d;.m:(JJ)J` @kind static;
  #L4c803c.  v2:= temp @kind wide;
  #L4c803e.  v2:= v2 + v0 @kind long;
  #L4c8040.  v1:= `@@yc.a.U` @type ^`yc.a` @kind object;
  #L4c8044.  v0:= v21 @kind object;
  #L4c8048.  v4:= v23;
  #L4c804c.  v5:= v12;
  #L4c804e.  call temp:= `o`(v0, v1, v2, v4, v5) @signature `Lwc/d;.o:(Lyc/i;JII)I` @kind virtual;
  #L4c8054.  v5:= temp;
  #L4c8056.  v2:= (`long`) v10 @kind i2l;
  #L4c8058.  v1:= v8 @kind object;
  #L4c805a.  call temp:= `o`(v0, v1, v2, v4, v5) @signature `Lwc/d;.o:(Lyc/i;JII)I` @kind virtual;
  #L4c8060.  v0:= temp;
  #L4c8062.  return v0;
  #L4c8064.  v0:= ~v6 @kind int;
  #L4c8066.  return v0;
  catch `java.lang.RuntimeException` @[L4c8008..L4c803e] goto L4c8064;
}
procedure `java.lang.String` `toString`(`wc.c$i` v1 @kind this) @signature `Lwc/c$i;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c8088.  v0:= "Instant()" @kind object;
  #L4c808c.  return v0 @kind object;
}
