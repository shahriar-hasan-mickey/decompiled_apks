record `wc.c$n` @kind class @AccessFlag FINAL extends `wc.c$g` @kind interface {
  `java.lang.String` `wc.c$n.o` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`wc.c$n` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lwc/c$n;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c917c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c9182.  v0.`wc.c$n.o` @type ^`java.lang.String` := v1 @kind object;
  #L4c9186.  return @kind void;
}
procedure `boolean` `c`(`wc.c$n` v0 @kind this, `wc.f` v1 @kind object, `java.lang.StringBuilder` v2 @kind object) @signature `Lwc/c$n;.c:(Lwc/f;Ljava/lang/StringBuilder;)Z` @AccessFlag PUBLIC {
    temp;

  #L4c90b0.  v1:= v0.`wc.c$n.o` @type ^`java.lang.String` @kind object;
  #L4c90b4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c90ba.  v1:= 1I;
  #L4c90bc.  return v1;
}
procedure `int` `d`(`wc.c$n` v7 @kind this, `wc.d` v8 @kind object, `java.lang.CharSequence` v9 @kind object, `int` v10 ) @signature `Lwc/c$n;.d:(Lwc/d;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4c90d0.  call temp:= `length`(v9) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L4c90d6.  v0:= temp;
  #L4c90d8.  if v10 > v0 then goto L4c9114;
  #L4c90dc.  if v10 < 0 then goto L4c9114;
  #L4c90e0.  v4:= v7.`wc.c$n.o` @type ^`java.lang.String` @kind object;
  #L4c90e4.  v5:= 0I;
  #L4c90e6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4c90ec.  v6:= temp;
  #L4c90ee.  v1:= v8 @kind object;
  #L4c90f0.  v2:= v9 @kind object;
  #L4c90f2.  v3:= v10;
  #L4c90f4.  call temp:= `s`(v1, v2, v3, v4, v5, v6) @signature `Lwc/d;.s:(Ljava/lang/CharSequence;ILjava/lang/CharSequence;II)Z` @kind virtual;
  #L4c90fa.  v8:= temp;
  #L4c90fc.  if v8 != 0 then goto L4c9104;
  #L4c9100.  v8:= ~v10 @kind int;
  #L4c9102.  return v8;
  #L4c9104.  v8:= v7.`wc.c$n.o` @type ^`java.lang.String` @kind object;
  #L4c9108.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4c910e.  v8:= temp;
  #L4c9110.  v10:= v10 + v8 @kind int;
  #L4c9112.  return v10;
  #L4c9114.  v8:= new `java.lang.IndexOutOfBoundsException`;
  #L4c9118.  call `<init>`(v8) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L4c911e.  throw v8;
}
procedure `java.lang.String` `toString`(`wc.c$n` v3 @kind this) @signature `Lwc/c$n;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4c9130.  v0:= v3.`wc.c$n.o` @type ^`java.lang.String` @kind object;
  #L4c9134.  v1:= "'" @kind object;
  #L4c9138.  v2:= "''" @kind object;
  #L4c913c.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L4c9142.  v0:= temp @kind object;
  #L4c9144.  v2:= new `java.lang.StringBuilder`;
  #L4c9148.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c914e.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c9154.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c915a.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c9160.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c9166.  v0:= temp @kind object;
  #L4c9168.  return v0 @kind object;
}
