record `wc.a` @kind class @AccessFlag FINAL extends `xc.c` @kind class, `java.lang.Cloneable` @kind interface {
  `java.util.Map` `wc.a.o` @AccessFlag FINAL;
  `vc.h` `wc.a.p` @AccessFlag ;
  `uc.q` `wc.a.q` @AccessFlag ;
  `vc.b` `wc.a.r` @AccessFlag ;
  `uc.h` `wc.a.s` @AccessFlag ;
  `boolean` `wc.a.t` @AccessFlag ;
  `uc.m` `wc.a.u` @AccessFlag ;
}
procedure `void` `<init>`(`wc.a` v1 @kind this) @signature `Lwc/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4c60fc.  call `<init>`(v1) @signature `Lxc/c;.<init>:()V` @kind direct;
  #L4c6102.  v0:= new `java.util.HashMap`;
  #L4c6106.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4c610c.  v1.`wc.a.o` @type ^`java.util.Map` := v0 @kind object;
  #L4c6110.  return @kind void;
}
procedure `void` `b0`(`wc.a` v8 @kind this, `uc.f` v9 @kind object) @signature `Lwc/a;.b0:(Luc/f;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4c6154.  if v9 == 0 then goto L4c6236;
  #L4c6158.  call `X`(v8, v9) @signature `Lwc/a;.X:(Lvc/b;)V` @kind virtual;
  #L4c615e.  v0:= v8.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6162.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L4c6168.  v0:= temp @kind object;
  #L4c616a.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4c6170.  v0:= temp @kind object;
  #L4c6172.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4c6178.  v1:= temp;
  #L4c617a.  if v1 == 0 then goto L4c6236;
  #L4c617e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4c6184.  v1:= temp @kind object;
  #L4c6186.  v1:= (`yc.i`) v1 @kind object;
  #L4c618a.  v2:= instanceof @variable v1 @type ^`yc.a` @kind boolean;
  #L4c618e.  if v2 == 0 then goto L4c6172;
  #L4c6192.  call temp:= `c`(v1) @signature `Lyc/i;.c:()Z` @kind interface;
  #L4c6198.  v2:= temp;
  #L4c619a.  if v2 == 0 then goto L4c6172;
  #L4c619e.  call temp:= `B`(v9, v1) @signature `Luc/f;.B:(Lyc/i;)J` @kind virtual;
  #L4c61a4.  v2:= temp @kind wide;
  #L4c61a6.  v4:= v8.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c61aa.  call temp:= `get`(v4, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c61b0.  v4:= temp @kind object;
  #L4c61b2.  v4:= (`java.lang.Long`) v4 @kind object;
  #L4c61b6.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c61bc.  v5:= temp @kind wide;
  #L4c61be.  v7:= lcmp(v2, v5);
  #L4c61c2.  if v7 != 0 then goto L4c61c8;
  #L4c61c6.  goto L4c6172;
  #L4c61c8.  v0:= new `uc.b`;
  #L4c61cc.  v5:= new `java.lang.StringBuilder`;
  #L4c61d0.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c61d6.  v6:= "Conflict found: Field " @kind object;
  #L4c61da.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c61e0.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c61e6.  v6:= " " @kind object;
  #L4c61ea.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c61f0.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c61f6.  v2:= " differs from " @kind object;
  #L4c61fa.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6200.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6206.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c620c.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6212.  v1:= " derived from " @kind object;
  #L4c6216.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c621c.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6222.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c6228.  v9:= temp @kind object;
  #L4c622a.  call `<init>`(v0, v9) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c6230.  throw v0;
  #L4c6232.  
  #L4c6234.  goto L4c6172;
  #L4c6236.  return @kind void;
  catch `uc.b` @[L4c619e..L4c61a6] goto L4c6232;
}
procedure `void` `c0`(`wc.a` v2 @kind this) @signature `Lwc/a;.c0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4c6258.  v0:= v2.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c625c.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L4c6262.  v0:= temp;
  #L4c6264.  if v0 <= 0 then goto L4c6298;
  #L4c6268.  v0:= v2.`wc.a.r` @type ^`vc.b` @kind object;
  #L4c626c.  if v0 == 0 then goto L4c6282;
  #L4c6270.  v1:= v2.`wc.a.s` @type ^`uc.h` @kind object;
  #L4c6274.  if v1 == 0 then goto L4c6282;
  #L4c6278.  call temp:= `V`(v0, v1) @signature `Lvc/b;.V:(Luc/h;)Lvc/c;` @kind virtual;
  #L4c627e.  v0:= temp @kind object;
  #L4c6280.  goto L4c6286;
  #L4c6282.  if v0 == 0 then goto L4c628e;
  #L4c6286.  call `d0`(v2, v0) @signature `Lwc/a;.d0:(Lyc/e;)V` @kind direct;
  #L4c628c.  goto L4c6298;
  #L4c628e.  v0:= v2.`wc.a.s` @type ^`uc.h` @kind object;
  #L4c6292.  if v0 == 0 then goto L4c6298;
  #L4c6296.  goto L4c6286;
  #L4c6298.  return @kind void;
}
procedure `void` `d0`(`wc.a` v7 @kind this, `yc.e` v8 @kind object) @signature `Lwc/a;.d0:(Lyc/e;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4c62ac.  v0:= v7.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c62b0.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L4c62b6.  v0:= temp @kind object;
  #L4c62b8.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4c62be.  v0:= temp @kind object;
  #L4c62c0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4c62c6.  v1:= temp;
  #L4c62c8.  if v1 == 0 then goto L4c637a;
  #L4c62cc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4c62d2.  v1:= temp @kind object;
  #L4c62d4.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L4c62d8.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4c62de.  v2:= temp @kind object;
  #L4c62e0.  v2:= (`yc.i`) v2 @kind object;
  #L4c62e4.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4c62ea.  v1:= temp @kind object;
  #L4c62ec.  v1:= (`java.lang.Long`) v1 @kind object;
  #L4c62f0.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c62f6.  v3:= temp @kind wide;
  #L4c62f8.  call temp:= `d`(v8, v2) @signature `Lyc/e;.d:(Lyc/i;)Z` @kind interface;
  #L4c62fe.  v1:= temp;
  #L4c6300.  if v1 == 0 then goto L4c62c0;
  #L4c6304.  call temp:= `B`(v8, v2) @signature `Lyc/e;.B:(Lyc/i;)J` @kind interface;
  #L4c630a.  v5:= temp @kind wide;
  #L4c630c.  v1:= lcmp(v5, v3);
  #L4c6310.  if v1 != 0 then goto L4c631c;
  #L4c6314.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L4c631a.  goto L4c62c0;
  #L4c631c.  v8:= new `uc.b`;
  #L4c6320.  v0:= new `java.lang.StringBuilder`;
  #L4c6324.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c632a.  v1:= "Cross check failed: " @kind object;
  #L4c632e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6334.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c633a.  v1:= " " @kind object;
  #L4c633e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6344.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c634a.  v5:= " vs " @kind object;
  #L4c634e.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6354.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c635a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6360.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6366.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c636c.  v0:= temp @kind object;
  #L4c636e.  call `<init>`(v8, v0) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c6374.  throw v8;
  #L4c6376.  
  #L4c6378.  goto L4c62c0;
  #L4c637a.  return @kind void;
  catch `java.lang.RuntimeException` @[L4c6304..L4c630c] goto L4c6376;
}
procedure `java.lang.Long` `e0`(`wc.a` v1 @kind this, `yc.i` v2 @kind object) @signature `Lwc/a;.e0:(Lyc/i;)Ljava/lang/Long;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4c5ed0.  v0:= v1.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c5ed4.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c5eda.  v2:= temp @kind object;
  #L4c5edc.  v2:= (`java.lang.Long`) v2 @kind object;
  #L4c5ee0.  return v2 @kind object;
}
procedure `void` `f0`(`wc.a` v2 @kind this, `wc.i` v3 @kind object) @signature `Lwc/a;.f0:(Lwc/i;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4c639c.  v0:= v2.`wc.a.p` @type ^`vc.h` @kind object;
  #L4c63a0.  v0:= instanceof @variable v0 @type ^`vc.m` @kind boolean;
  #L4c63a4.  if v0 == 0 then goto L4c63c0;
  #L4c63a8.  v0:= `@@vc.m.q` @type ^`vc.m` @kind object;
  #L4c63ac.  v1:= v2.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c63b0.  call temp:= `T`(v0, v1, v3) @signature `Lvc/m;.T:(Ljava/util/Map;Lwc/i;)Luc/f;` @kind virtual;
  #L4c63b6.  v3:= temp @kind object;
  #L4c63b8.  call `b0`(v2, v3) @signature `Lwc/a;.b0:(Luc/f;)V` @kind direct;
  #L4c63be.  goto L4c63fa;
  #L4c63c0.  v3:= v2.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c63c4.  v0:= `@@yc.a.M` @type ^`yc.a` @kind object;
  #L4c63c8.  call temp:= `containsKey`(v3, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c63ce.  v3:= temp;
  #L4c63d0.  if v3 == 0 then goto L4c63fa;
  #L4c63d4.  v3:= v2.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c63d8.  call temp:= `remove`(v3, v0) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c63de.  v3:= temp @kind object;
  #L4c63e0.  v3:= (`java.lang.Long`) v3 @kind object;
  #L4c63e4.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c63ea.  v0:= temp @kind wide;
  #L4c63ec.  call temp:= `E0`(v0) @signature `Luc/f;.E0:(J)Luc/f;` @kind static;
  #L4c63f2.  v3:= temp @kind object;
  #L4c63f4.  call `b0`(v2, v3) @signature `Lwc/a;.b0:(Luc/f;)V` @kind direct;
  #L4c63fa.  return @kind void;
}
procedure `void` `g0`(`wc.a` v2 @kind this) @signature `Lwc/a;.g0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4c640c.  v0:= v2.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6410.  v1:= `@@yc.a.U` @type ^`yc.a` @kind object;
  #L4c6414.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c641a.  v0:= temp;
  #L4c641c.  if v0 == 0 then goto L4c645a;
  #L4c6420.  v0:= v2.`wc.a.q` @type ^`uc.q` @kind object;
  #L4c6424.  if v0 == 0 then goto L4c6430;
  #L4c6428.  call `h0`(v2, v0) @signature `Lwc/a;.h0:(Luc/q;)V` @kind direct;
  #L4c642e.  goto L4c645a;
  #L4c6430.  v0:= v2.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6434.  v1:= `@@yc.a.V` @type ^`yc.a` @kind object;
  #L4c6438.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c643e.  v0:= temp @kind object;
  #L4c6440.  v0:= (`java.lang.Long`) v0 @kind object;
  #L4c6444.  if v0 == 0 then goto L4c645a;
  #L4c6448.  call temp:= `intValue`(v0) @signature `Ljava/lang/Long;.intValue:()I` @kind virtual;
  #L4c644e.  v0:= temp;
  #L4c6450.  call temp:= `X`(v0) @signature `Luc/r;.X:(I)Luc/r;` @kind static;
  #L4c6456.  v0:= temp @kind object;
  #L4c6458.  goto L4c6428;
  #L4c645a.  return @kind void;
}
procedure `void` `h0`(`wc.a` v4 @kind this, `uc.q` v5 @kind object) @signature `Lwc/a;.h0:(Luc/q;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4c646c.  v0:= v4.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6470.  v1:= `@@yc.a.U` @type ^`yc.a` @kind object;
  #L4c6474.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c647a.  v0:= temp @kind object;
  #L4c647c.  v0:= (`java.lang.Long`) v0 @kind object;
  #L4c6480.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6486.  v2:= temp @kind wide;
  #L4c6488.  call temp:= `e0`(v2) @signature `Luc/e;.e0:(J)Luc/e;` @kind static;
  #L4c648e.  v0:= temp @kind object;
  #L4c6490.  v2:= v4.`wc.a.p` @type ^`vc.h` @kind object;
  #L4c6494.  call temp:= `I`(v2, v0, v5) @signature `Lvc/h;.I:(Luc/e;Luc/q;)Lvc/f;` @kind virtual;
  #L4c649a.  v5:= temp @kind object;
  #L4c649c.  v0:= v4.`wc.a.r` @type ^`vc.b` @kind object;
  #L4c64a0.  if v0 != 0 then goto L4c64b4;
  #L4c64a4.  call temp:= `g0`(v5) @signature `Lvc/f;.g0:()Lvc/b;` @kind virtual;
  #L4c64aa.  v0:= temp @kind object;
  #L4c64ac.  call `X`(v4, v0) @signature `Lwc/a;.X:(Lvc/b;)V` @kind virtual;
  #L4c64b2.  goto L4c64c2;
  #L4c64b4.  call temp:= `g0`(v5) @signature `Lvc/f;.g0:()Lvc/b;` @kind virtual;
  #L4c64ba.  v0:= temp @kind object;
  #L4c64bc.  call `p0`(v4, v1, v0) @signature `Lwc/a;.p0:(Lyc/i;Lvc/b;)V` @kind direct;
  #L4c64c2.  v0:= `@@yc.a.z` @type ^`yc.a` @kind object;
  #L4c64c6.  call temp:= `i0`(v5) @signature `Lvc/f;.i0:()Luc/h;` @kind virtual;
  #L4c64cc.  v5:= temp @kind object;
  #L4c64ce.  call temp:= `u0`(v5) @signature `Luc/h;.u0:()I` @kind virtual;
  #L4c64d4.  v5:= temp;
  #L4c64d6.  v1:= (`long`) v5 @kind i2l;
  #L4c64d8.  call temp:= `T`(v4, v0, v1) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c64de.  return @kind void;
}
procedure `void` `i0`(`wc.a` v13 @kind this, `wc.i` v14 @kind object) @signature `Lwc/a;.i0:(Lwc/i;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L4c64f0.  v0:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c64f4.  v1:= `@@yc.a.F` @type ^`yc.a` @kind object;
  #L4c64f8.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c64fe.  v0:= temp;
  #L4c6500.  v2:= 0L;
  #L4c6504.  if v0 == 0 then goto L4c6558;
  #L4c6508.  v0:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c650c.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6512.  v0:= temp @kind object;
  #L4c6514.  v0:= (`java.lang.Long`) v0 @kind object;
  #L4c6518.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c651e.  v4:= temp @kind wide;
  #L4c6520.  v0:= `@@wc.i.q` @type ^`wc.i` @kind object;
  #L4c6524.  if v14 == v0 then goto L4c6540;
  #L4c6528.  v0:= `@@wc.i.p` @type ^`wc.i` @kind object;
  #L4c652c.  if v14 != v0 then goto L4c653a;
  #L4c6530.  v0:= lcmp(v4, v2);
  #L4c6534.  if v0 != 0 then goto L4c653a;
  #L4c6538.  goto L4c6540;
  #L4c653a.  call temp:= `s`(v1, v4) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4c6540.  v0:= `@@yc.a.E` @type ^`yc.a` @kind object;
  #L4c6544.  v6:= 24L;
  #L4c6548.  v1:= lcmp(v4, v6);
  #L4c654c.  if v1 != 0 then goto L4c6552;
  #L4c6550.  v4:= v2 @kind wide;
  #L4c6552.  call temp:= `T`(v13, v0, v4) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c6558.  v0:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c655c.  v1:= `@@yc.a.D` @type ^`yc.a` @kind object;
  #L4c6560.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c6566.  v0:= temp;
  #L4c6568.  v4:= 12L;
  #L4c656c.  if v0 == 0 then goto L4c65be;
  #L4c6570.  v0:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6574.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c657a.  v0:= temp @kind object;
  #L4c657c.  v0:= (`java.lang.Long`) v0 @kind object;
  #L4c6580.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6586.  v6:= temp @kind wide;
  #L4c6588.  v0:= `@@wc.i.q` @type ^`wc.i` @kind object;
  #L4c658c.  if v14 == v0 then goto L4c65a8;
  #L4c6590.  v0:= `@@wc.i.p` @type ^`wc.i` @kind object;
  #L4c6594.  if v14 != v0 then goto L4c65a2;
  #L4c6598.  v0:= lcmp(v6, v2);
  #L4c659c.  if v0 != 0 then goto L4c65a2;
  #L4c65a0.  goto L4c65a8;
  #L4c65a2.  call temp:= `s`(v1, v6) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4c65a8.  v0:= `@@yc.a.C` @type ^`yc.a` @kind object;
  #L4c65ac.  v1:= lcmp(v6, v4);
  #L4c65b0.  if v1 != 0 then goto L4c65b6;
  #L4c65b4.  goto L4c65b8;
  #L4c65b6.  v2:= v6 @kind wide;
  #L4c65b8.  call temp:= `T`(v13, v0, v2) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c65be.  v0:= `@@wc.i.q` @type ^`wc.i` @kind object;
  #L4c65c2.  if v14 == v0 then goto L4c662a;
  #L4c65c6.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c65ca.  v2:= `@@yc.a.G` @type ^`yc.a` @kind object;
  #L4c65ce.  call temp:= `containsKey`(v1, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c65d4.  v1:= temp;
  #L4c65d6.  if v1 == 0 then goto L4c65f8;
  #L4c65da.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c65de.  call temp:= `get`(v1, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c65e4.  v1:= temp @kind object;
  #L4c65e6.  v1:= (`java.lang.Long`) v1 @kind object;
  #L4c65ea.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c65f0.  v6:= temp @kind wide;
  #L4c65f2.  call temp:= `s`(v2, v6) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4c65f8.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c65fc.  v2:= `@@yc.a.C` @type ^`yc.a` @kind object;
  #L4c6600.  call temp:= `containsKey`(v1, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c6606.  v1:= temp;
  #L4c6608.  if v1 == 0 then goto L4c662a;
  #L4c660c.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6610.  call temp:= `get`(v1, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6616.  v1:= temp @kind object;
  #L4c6618.  v1:= (`java.lang.Long`) v1 @kind object;
  #L4c661c.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6622.  v6:= temp @kind wide;
  #L4c6624.  call temp:= `s`(v2, v6) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4c662a.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c662e.  v2:= `@@yc.a.G` @type ^`yc.a` @kind object;
  #L4c6632.  call temp:= `containsKey`(v1, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c6638.  v1:= temp;
  #L4c663a.  if v1 == 0 then goto L4c6692;
  #L4c663e.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6642.  v3:= `@@yc.a.C` @type ^`yc.a` @kind object;
  #L4c6646.  call temp:= `containsKey`(v1, v3) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c664c.  v1:= temp;
  #L4c664e.  if v1 == 0 then goto L4c6692;
  #L4c6652.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6656.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c665c.  v1:= temp @kind object;
  #L4c665e.  v1:= (`java.lang.Long`) v1 @kind object;
  #L4c6662.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6668.  v1:= temp @kind wide;
  #L4c666a.  v6:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c666e.  call temp:= `remove`(v6, v3) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6674.  v3:= temp @kind object;
  #L4c6676.  v3:= (`java.lang.Long`) v3 @kind object;
  #L4c667a.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6680.  v6:= temp @kind wide;
  #L4c6682.  v3:= `@@yc.a.E` @type ^`yc.a` @kind object;
  #L4c6686.  v1:= v1 * v4 @kind long;
  #L4c668a.  v1:= v1 + v6 @kind long;
  #L4c668c.  call temp:= `T`(v13, v3, v1) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c6692.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6696.  v2:= `@@yc.a.t` @type ^`yc.a` @kind object;
  #L4c669a.  call temp:= `containsKey`(v1, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c66a0.  v1:= temp;
  #L4c66a2.  if v1 == 0 then goto L4c66e8;
  #L4c66a6.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c66aa.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c66b0.  v1:= temp @kind object;
  #L4c66b2.  v1:= (`java.lang.Long`) v1 @kind object;
  #L4c66b6.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c66bc.  v3:= temp @kind wide;
  #L4c66be.  if v14 == v0 then goto L4c66c8;
  #L4c66c2.  call temp:= `s`(v2, v3) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4c66c8.  v1:= `@@yc.a.z` @type ^`yc.a` @kind object;
  #L4c66cc.  v5:= 1000000000L;
  #L4c66d2.  v7:= v3 / v5 @kind long;
  #L4c66d6.  call temp:= `T`(v13, v1, v7) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c66dc.  v1:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L4c66e0.  v3:= v3 %% v5 @kind long;
  #L4c66e2.  call temp:= `T`(v13, v1, v3) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c66e8.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c66ec.  v2:= `@@yc.a.v` @type ^`yc.a` @kind object;
  #L4c66f0.  call temp:= `containsKey`(v1, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c66f6.  v1:= temp;
  #L4c66f8.  v3:= 1000000L;
  #L4c66fe.  if v1 == 0 then goto L4c673e;
  #L4c6702.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6706.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c670c.  v1:= temp @kind object;
  #L4c670e.  v1:= (`java.lang.Long`) v1 @kind object;
  #L4c6712.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6718.  v5:= temp @kind wide;
  #L4c671a.  if v14 == v0 then goto L4c6724;
  #L4c671e.  call temp:= `s`(v2, v5) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4c6724.  v1:= `@@yc.a.z` @type ^`yc.a` @kind object;
  #L4c6728.  v7:= v5 / v3 @kind long;
  #L4c672c.  call temp:= `T`(v13, v1, v7) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c6732.  v1:= `@@yc.a.u` @type ^`yc.a` @kind object;
  #L4c6736.  v5:= v5 %% v3 @kind long;
  #L4c6738.  call temp:= `T`(v13, v1, v5) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c673e.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6742.  v2:= `@@yc.a.x` @type ^`yc.a` @kind object;
  #L4c6746.  call temp:= `containsKey`(v1, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c674c.  v1:= temp;
  #L4c674e.  v5:= 1000L;
  #L4c6752.  if v1 == 0 then goto L4c6792;
  #L4c6756.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c675a.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6760.  v1:= temp @kind object;
  #L4c6762.  v1:= (`java.lang.Long`) v1 @kind object;
  #L4c6766.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c676c.  v7:= temp @kind wide;
  #L4c676e.  if v14 == v0 then goto L4c6778;
  #L4c6772.  call temp:= `s`(v2, v7) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4c6778.  v1:= `@@yc.a.z` @type ^`yc.a` @kind object;
  #L4c677c.  v9:= v7 / v5 @kind long;
  #L4c6780.  call temp:= `T`(v13, v1, v9) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c6786.  v1:= `@@yc.a.w` @type ^`yc.a` @kind object;
  #L4c678a.  v7:= v7 %% v5 @kind long;
  #L4c678c.  call temp:= `T`(v13, v1, v7) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c6792.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6796.  v2:= `@@yc.a.z` @type ^`yc.a` @kind object;
  #L4c679a.  call temp:= `containsKey`(v1, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c67a0.  v1:= temp;
  #L4c67a2.  v7:= 60L;
  #L4c67a6.  if v1 == 0 then goto L4c67fa;
  #L4c67aa.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c67ae.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c67b4.  v1:= temp @kind object;
  #L4c67b6.  v1:= (`java.lang.Long`) v1 @kind object;
  #L4c67ba.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c67c0.  v9:= temp @kind wide;
  #L4c67c2.  if v14 == v0 then goto L4c67cc;
  #L4c67c6.  call temp:= `s`(v2, v9) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4c67cc.  v1:= `@@yc.a.E` @type ^`yc.a` @kind object;
  #L4c67d0.  v11:= 3600L;
  #L4c67d4.  v11:= v9 / v11 @kind long;
  #L4c67d8.  call temp:= `T`(v13, v1, v11) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c67de.  v1:= `@@yc.a.A` @type ^`yc.a` @kind object;
  #L4c67e2.  v11:= v9 / v7 @kind long;
  #L4c67e6.  v11:= v11 %% v7 @kind long;
  #L4c67e8.  call temp:= `T`(v13, v1, v11) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c67ee.  v1:= `@@yc.a.y` @type ^`yc.a` @kind object;
  #L4c67f2.  v9:= v9 %% v7 @kind long;
  #L4c67f4.  call temp:= `T`(v13, v1, v9) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c67fa.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c67fe.  v2:= `@@yc.a.B` @type ^`yc.a` @kind object;
  #L4c6802.  call temp:= `containsKey`(v1, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c6808.  v1:= temp;
  #L4c680a.  if v1 == 0 then goto L4c684a;
  #L4c680e.  v1:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6812.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6818.  v1:= temp @kind object;
  #L4c681a.  v1:= (`java.lang.Long`) v1 @kind object;
  #L4c681e.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6824.  v9:= temp @kind wide;
  #L4c6826.  if v14 == v0 then goto L4c6830;
  #L4c682a.  call temp:= `s`(v2, v9) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4c6830.  v1:= `@@yc.a.E` @type ^`yc.a` @kind object;
  #L4c6834.  v11:= v9 / v7 @kind long;
  #L4c6838.  call temp:= `T`(v13, v1, v11) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c683e.  v1:= `@@yc.a.A` @type ^`yc.a` @kind object;
  #L4c6842.  v9:= v9 %% v7 @kind long;
  #L4c6844.  call temp:= `T`(v13, v1, v9) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c684a.  if v14 == v0 then goto L4c68b2;
  #L4c684e.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6852.  v0:= `@@yc.a.w` @type ^`yc.a` @kind object;
  #L4c6856.  call temp:= `containsKey`(v14, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c685c.  v14:= temp;
  #L4c685e.  if v14 == 0 then goto L4c6880;
  #L4c6862.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6866.  call temp:= `get`(v14, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c686c.  v14:= temp @kind object;
  #L4c686e.  v14:= (`java.lang.Long`) v14 @kind object;
  #L4c6872.  call temp:= `longValue`(v14) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6878.  v1:= temp @kind wide;
  #L4c687a.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4c6880.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6884.  v0:= `@@yc.a.u` @type ^`yc.a` @kind object;
  #L4c6888.  call temp:= `containsKey`(v14, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c688e.  v14:= temp;
  #L4c6890.  if v14 == 0 then goto L4c68b2;
  #L4c6894.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6898.  call temp:= `get`(v14, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c689e.  v14:= temp @kind object;
  #L4c68a0.  v14:= (`java.lang.Long`) v14 @kind object;
  #L4c68a4.  call temp:= `longValue`(v14) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c68aa.  v1:= temp @kind wide;
  #L4c68ac.  call temp:= `s`(v0, v1) @signature `Lyc/a;.s:(J)J` @kind virtual;
  #L4c68b2.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c68b6.  v0:= `@@yc.a.w` @type ^`yc.a` @kind object;
  #L4c68ba.  call temp:= `containsKey`(v14, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c68c0.  v14:= temp;
  #L4c68c2.  if v14 == 0 then goto L4c6918;
  #L4c68c6.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c68ca.  v1:= `@@yc.a.u` @type ^`yc.a` @kind object;
  #L4c68ce.  call temp:= `containsKey`(v14, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c68d4.  v14:= temp;
  #L4c68d6.  if v14 == 0 then goto L4c6918;
  #L4c68da.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c68de.  call temp:= `remove`(v14, v0) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c68e4.  v14:= temp @kind object;
  #L4c68e6.  v14:= (`java.lang.Long`) v14 @kind object;
  #L4c68ea.  call temp:= `longValue`(v14) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c68f0.  v7:= temp @kind wide;
  #L4c68f2.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c68f6.  call temp:= `get`(v14, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c68fc.  v14:= temp @kind object;
  #L4c68fe.  v14:= (`java.lang.Long`) v14 @kind object;
  #L4c6902.  call temp:= `longValue`(v14) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6908.  v9:= temp @kind wide;
  #L4c690a.  v7:= v7 * v5 @kind long;
  #L4c690e.  v9:= v9 %% v5 @kind long;
  #L4c6910.  v7:= v7 + v9 @kind long;
  #L4c6912.  call temp:= `T`(v13, v1, v7) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c6918.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c691c.  v1:= `@@yc.a.u` @type ^`yc.a` @kind object;
  #L4c6920.  call temp:= `containsKey`(v14, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c6926.  v14:= temp;
  #L4c6928.  if v14 == 0 then goto L4c696a;
  #L4c692c.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6930.  v2:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L4c6934.  call temp:= `containsKey`(v14, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c693a.  v14:= temp;
  #L4c693c.  if v14 == 0 then goto L4c696a;
  #L4c6940.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6944.  call temp:= `get`(v14, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c694a.  v14:= temp @kind object;
  #L4c694c.  v14:= (`java.lang.Long`) v14 @kind object;
  #L4c6950.  call temp:= `longValue`(v14) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6956.  v7:= temp @kind wide;
  #L4c6958.  v7:= v7 / v5 @kind long;
  #L4c695a.  call temp:= `T`(v13, v1, v7) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c6960.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6964.  call temp:= `remove`(v14, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c696a.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c696e.  call temp:= `containsKey`(v14, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c6974.  v14:= temp;
  #L4c6976.  if v14 == 0 then goto L4c69b8;
  #L4c697a.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c697e.  v2:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L4c6982.  call temp:= `containsKey`(v14, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c6988.  v14:= temp;
  #L4c698a.  if v14 == 0 then goto L4c69b8;
  #L4c698e.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6992.  call temp:= `get`(v14, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6998.  v14:= temp @kind object;
  #L4c699a.  v14:= (`java.lang.Long`) v14 @kind object;
  #L4c699e.  call temp:= `longValue`(v14) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c69a4.  v7:= temp @kind wide;
  #L4c69a6.  v7:= v7 / v3 @kind long;
  #L4c69a8.  call temp:= `T`(v13, v0, v7) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c69ae.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c69b2.  call temp:= `remove`(v14, v0) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c69b8.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c69bc.  call temp:= `containsKey`(v14, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c69c2.  v14:= temp;
  #L4c69c4.  if v14 == 0 then goto L4c69f0;
  #L4c69c8.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c69cc.  call temp:= `remove`(v14, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c69d2.  v14:= temp @kind object;
  #L4c69d4.  v14:= (`java.lang.Long`) v14 @kind object;
  #L4c69d8.  call temp:= `longValue`(v14) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c69de.  v0:= temp @kind wide;
  #L4c69e0.  v14:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L4c69e4.  v0:= v0 * v5 @kind long;
  #L4c69e8.  call temp:= `T`(v13, v14, v0) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @kind virtual;
  #L4c69ee.  goto L4c6a22;
  #L4c69f0.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c69f4.  call temp:= `containsKey`(v14, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c69fa.  v14:= temp;
  #L4c69fc.  if v14 == 0 then goto L4c6a22;
  #L4c6a00.  v14:= v13.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6a04.  call temp:= `remove`(v14, v0) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6a0a.  v14:= temp @kind object;
  #L4c6a0c.  v14:= (`java.lang.Long`) v14 @kind object;
  #L4c6a10.  call temp:= `longValue`(v14) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6a16.  v0:= temp @kind wide;
  #L4c6a18.  v14:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L4c6a1c.  v0:= v0 * v3 @kind long;
  #L4c6a20.  goto L4c69e8;
  #L4c6a22.  return @kind void;
}
procedure `wc.a` `j0`(`wc.a` v1 @kind this, `yc.i` v2 @kind object, `long` v3 ) @signature `Lwc/a;.j0:(Lyc/i;J)Lwc/a;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4c7114.  v0:= v1.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c7118.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c711e.  v3:= temp @kind object;
  #L4c7120.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c7126.  return v1 @kind object;
}
procedure `boolean` `l0`(`wc.a` v6 @kind this, `wc.i` v7 @kind object) @signature `Lwc/a;.l0:(Lwc/i;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4c5d34.  v0:= 0I;
  #L4c5d36.  v1:= 0I;
  #L4c5d38.  v2:= 100I;
  #L4c5d3c.  if v1 >= v2 then goto L4c5ea2;
  #L4c5d40.  v3:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c5d44.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L4c5d4a.  v3:= temp @kind object;
  #L4c5d4c.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4c5d52.  v3:= temp @kind object;
  #L4c5d54.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4c5d5a.  v4:= temp;
  #L4c5d5c.  if v4 == 0 then goto L4c5ea2;
  #L4c5d60.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4c5d66.  v4:= temp @kind object;
  #L4c5d68.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L4c5d6c.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4c5d72.  v4:= temp @kind object;
  #L4c5d74.  v4:= (`yc.i`) v4 @kind object;
  #L4c5d78.  v5:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c5d7c.  call temp:= `d`(v4, v5, v6, v7) @signature `Lyc/i;.d:(Ljava/util/Map;Lyc/e;Lwc/i;)Lyc/e;` @kind interface;
  #L4c5d82.  v5:= temp @kind object;
  #L4c5d84.  if v5 == 0 then goto L4c5e8a;
  #L4c5d88.  v2:= instanceof @variable v5 @type ^`vc.f` @kind boolean;
  #L4c5d8c.  if v2 == 0 then goto L4c5dfa;
  #L4c5d90.  v5:= (`vc.f`) v5 @kind object;
  #L4c5d94.  v2:= v6.`wc.a.q` @type ^`uc.q` @kind object;
  #L4c5d98.  if v2 != 0 then goto L4c5daa;
  #L4c5d9c.  call temp:= `a0`(v5) @signature `Lvc/f;.a0:()Luc/q;` @kind virtual;
  #L4c5da2.  v2:= temp @kind object;
  #L4c5da4.  v6.`wc.a.q` @type ^`uc.q` := v2 @kind object;
  #L4c5da8.  goto L4c5dbe;
  #L4c5daa.  call temp:= `a0`(v5) @signature `Lvc/f;.a0:()Luc/q;` @kind virtual;
  #L4c5db0.  v3:= temp @kind object;
  #L4c5db2.  call temp:= `equals`(v2, v3) @signature `Luc/q;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4c5db8.  v2:= temp;
  #L4c5dba.  if v2 == 0 then goto L4c5dc8;
  #L4c5dbe.  call temp:= `h0`(v5) @signature `Lvc/f;.h0:()Lvc/c;` @kind virtual;
  #L4c5dc4.  v5:= temp @kind object;
  #L4c5dc6.  goto L4c5dfa;
  #L4c5dc8.  v7:= new `uc.b`;
  #L4c5dcc.  v0:= new `java.lang.StringBuilder`;
  #L4c5dd0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c5dd6.  v1:= "ChronoZonedDateTime must use the effective parsed zone: " @kind object;
  #L4c5dda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c5de0.  v1:= v6.`wc.a.q` @type ^`uc.q` @kind object;
  #L4c5de4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c5dea.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c5df0.  v0:= temp @kind object;
  #L4c5df2.  call `<init>`(v7, v0) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c5df8.  throw v7;
  #L4c5dfa.  v2:= instanceof @variable v5 @type ^`vc.b` @kind boolean;
  #L4c5dfe.  if v2 == 0 then goto L4c5e0e;
  #L4c5e02.  v5:= (`vc.b`) v5 @kind object;
  #L4c5e06.  call `p0`(v6, v4, v5) @signature `Lwc/a;.p0:(Lyc/i;Lvc/b;)V` @kind direct;
  #L4c5e0c.  goto L4c5e9a;
  #L4c5e0e.  v2:= instanceof @variable v5 @type ^`uc.h` @kind boolean;
  #L4c5e12.  if v2 == 0 then goto L4c5e22;
  #L4c5e16.  v5:= (`uc.h`) v5 @kind object;
  #L4c5e1a.  call `o0`(v6, v4, v5) @signature `Lwc/a;.o0:(Lyc/i;Luc/h;)V` @kind direct;
  #L4c5e20.  goto L4c5e9a;
  #L4c5e22.  v2:= instanceof @variable v5 @type ^`vc.c` @kind boolean;
  #L4c5e26.  if v2 == 0 then goto L4c5e4c;
  #L4c5e2a.  v5:= (`vc.c`) v5 @kind object;
  #L4c5e2e.  call temp:= `h0`(v5) @signature `Lvc/c;.h0:()Lvc/b;` @kind virtual;
  #L4c5e34.  v2:= temp @kind object;
  #L4c5e36.  call `p0`(v6, v4, v2) @signature `Lwc/a;.p0:(Lyc/i;Lvc/b;)V` @kind direct;
  #L4c5e3c.  call temp:= `i0`(v5) @signature `Lvc/c;.i0:()Luc/h;` @kind virtual;
  #L4c5e42.  v2:= temp @kind object;
  #L4c5e44.  call `o0`(v6, v4, v2) @signature `Lwc/a;.o0:(Lyc/i;Luc/h;)V` @kind direct;
  #L4c5e4a.  goto L4c5e9a;
  #L4c5e4c.  v7:= new `uc.b`;
  #L4c5e50.  v0:= new `java.lang.StringBuilder`;
  #L4c5e54.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c5e5a.  v1:= "Unknown type: " @kind object;
  #L4c5e5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c5e64.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4c5e6a.  v1:= temp @kind object;
  #L4c5e6c.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L4c5e72.  v1:= temp @kind object;
  #L4c5e74.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c5e7a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c5e80.  v0:= temp @kind object;
  #L4c5e82.  call `<init>`(v7, v0) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c5e88.  throw v7;
  #L4c5e8a.  v5:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c5e8e.  call temp:= `containsKey`(v5, v4) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c5e94.  v4:= temp;
  #L4c5e96.  if v4 != 0 then goto L4c5d54;
  #L4c5e9a.  v1:= v1 + 1;
  #L4c5e9e.  goto L4c5d38;
  #L4c5ea2.  if v1 == v2 then goto L4c5eae;
  #L4c5ea6.  if v1 <= 0 then goto L4c5eac;
  #L4c5eaa.  v0:= 1I;
  #L4c5eac.  return v0;
  #L4c5eae.  v7:= new `uc.b`;
  #L4c5eb2.  v0:= "Badly written field" @kind object;
  #L4c5eb6.  call `<init>`(v7, v0) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c5ebc.  throw v7;
}
procedure `void` `m0`(`wc.a` v6 @kind this) @signature `Lwc/a;.m0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4c6a34.  v0:= v6.`wc.a.s` @type ^`uc.h` @kind object;
  #L4c6a38.  if v0 != 0 then goto L4c6b24;
  #L4c6a3c.  v0:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6a40.  v1:= `@@yc.a.U` @type ^`yc.a` @kind object;
  #L4c6a44.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c6a4a.  v0:= temp;
  #L4c6a4c.  if v0 != 0 then goto L4c6a78;
  #L4c6a50.  v0:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6a54.  v1:= `@@yc.a.z` @type ^`yc.a` @kind object;
  #L4c6a58.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c6a5e.  v0:= temp;
  #L4c6a60.  if v0 != 0 then goto L4c6a78;
  #L4c6a64.  v0:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6a68.  v1:= `@@yc.a.y` @type ^`yc.a` @kind object;
  #L4c6a6c.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c6a72.  v0:= temp;
  #L4c6a74.  if v0 == 0 then goto L4c6b24;
  #L4c6a78.  v0:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6a7c.  v1:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L4c6a80.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c6a86.  v0:= temp;
  #L4c6a88.  if v0 == 0 then goto L4c6ae2;
  #L4c6a8c.  v0:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6a90.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6a96.  v0:= temp @kind object;
  #L4c6a98.  v0:= (`java.lang.Long`) v0 @kind object;
  #L4c6a9c.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6aa2.  v0:= temp @kind wide;
  #L4c6aa4.  v2:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6aa8.  v3:= `@@yc.a.u` @type ^`yc.a` @kind object;
  #L4c6aac.  v4:= 1000L;
  #L4c6ab0.  v4:= v0 / v4 @kind long;
  #L4c6ab4.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c6aba.  v4:= temp @kind object;
  #L4c6abc.  call temp:= `put`(v2, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6ac2.  v2:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6ac6.  v3:= `@@yc.a.w` @type ^`yc.a` @kind object;
  #L4c6aca.  v4:= 1000000L;
  #L4c6ad0.  v0:= v0 / v4 @kind long;
  #L4c6ad2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c6ad8.  v0:= temp @kind object;
  #L4c6ada.  call temp:= `put`(v2, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6ae0.  goto L4c6b24;
  #L4c6ae2.  v0:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6ae6.  v2:= 0L;
  #L4c6aea.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c6af0.  v4:= temp @kind object;
  #L4c6af2.  call temp:= `put`(v0, v1, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6af8.  v0:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6afc.  v1:= `@@yc.a.u` @type ^`yc.a` @kind object;
  #L4c6b00.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c6b06.  v4:= temp @kind object;
  #L4c6b08.  call temp:= `put`(v0, v1, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6b0e.  v0:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6b12.  v1:= `@@yc.a.w` @type ^`yc.a` @kind object;
  #L4c6b16.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c6b1c.  v2:= temp @kind object;
  #L4c6b1e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6b24.  return @kind void;
}
procedure `void` `n0`(`wc.a` v4 @kind this) @signature `Lwc/a;.n0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4c6b38.  v0:= v4.`wc.a.r` @type ^`vc.b` @kind object;
  #L4c6b3c.  if v0 == 0 then goto L4c6bce;
  #L4c6b40.  v0:= v4.`wc.a.s` @type ^`uc.h` @kind object;
  #L4c6b44.  if v0 == 0 then goto L4c6bce;
  #L4c6b48.  v0:= v4.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6b4c.  v1:= `@@yc.a.V` @type ^`yc.a` @kind object;
  #L4c6b50.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6b56.  v0:= temp @kind object;
  #L4c6b58.  v0:= (`java.lang.Long`) v0 @kind object;
  #L4c6b5c.  if v0 == 0 then goto L4c6ba8;
  #L4c6b60.  call temp:= `intValue`(v0) @signature `Ljava/lang/Long;.intValue:()I` @kind virtual;
  #L4c6b66.  v0:= temp;
  #L4c6b68.  call temp:= `X`(v0) @signature `Luc/r;.X:(I)Luc/r;` @kind static;
  #L4c6b6e.  v0:= temp @kind object;
  #L4c6b70.  v1:= v4.`wc.a.r` @type ^`vc.b` @kind object;
  #L4c6b74.  v2:= v4.`wc.a.s` @type ^`uc.h` @kind object;
  #L4c6b78.  call temp:= `V`(v1, v2) @signature `Lvc/b;.V:(Luc/h;)Lvc/c;` @kind virtual;
  #L4c6b7e.  v1:= temp @kind object;
  #L4c6b80.  call temp:= `V`(v1, v0) @signature `Lvc/c;.V:(Luc/q;)Lvc/f;` @kind virtual;
  #L4c6b86.  v0:= temp @kind object;
  #L4c6b88.  v1:= `@@yc.a.U` @type ^`yc.a` @kind object;
  #L4c6b8c.  call temp:= `B`(v0, v1) @signature `Lvc/f;.B:(Lyc/i;)J` @kind virtual;
  #L4c6b92.  v2:= temp @kind wide;
  #L4c6b94.  v0:= v4.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6b98.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c6b9e.  v2:= temp @kind object;
  #L4c6ba0.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6ba6.  goto L4c6bce;
  #L4c6ba8.  v0:= v4.`wc.a.q` @type ^`uc.q` @kind object;
  #L4c6bac.  if v0 == 0 then goto L4c6bce;
  #L4c6bb0.  v0:= v4.`wc.a.r` @type ^`vc.b` @kind object;
  #L4c6bb4.  v1:= v4.`wc.a.s` @type ^`uc.h` @kind object;
  #L4c6bb8.  call temp:= `V`(v0, v1) @signature `Lvc/b;.V:(Luc/h;)Lvc/c;` @kind virtual;
  #L4c6bbe.  v0:= temp @kind object;
  #L4c6bc0.  v1:= v4.`wc.a.q` @type ^`uc.q` @kind object;
  #L4c6bc4.  call temp:= `V`(v0, v1) @signature `Lvc/c;.V:(Luc/q;)Lvc/f;` @kind virtual;
  #L4c6bca.  v0:= temp @kind object;
  #L4c6bcc.  goto L4c6b88;
  #L4c6bce.  return @kind void;
}
procedure `void` `o0`(`wc.a` v6 @kind this, `yc.i` v7 @kind object, `uc.h` v8 @kind object) @signature `Lwc/a;.o0:(Lyc/i;Luc/h;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4c6be0.  call temp:= `t0`(v8) @signature `Luc/h;.t0:()J` @kind virtual;
  #L4c6be6.  v0:= temp @kind wide;
  #L4c6be8.  v2:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6bec.  v3:= `@@yc.a.t` @type ^`yc.a` @kind object;
  #L4c6bf0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c6bf6.  v4:= temp @kind object;
  #L4c6bf8.  call temp:= `put`(v2, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6bfe.  v2:= temp @kind object;
  #L4c6c00.  v2:= (`java.lang.Long`) v2 @kind object;
  #L4c6c04.  if v2 == 0 then goto L4c6c78;
  #L4c6c08.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6c0e.  v3:= temp @kind wide;
  #L4c6c10.  v5:= lcmp(v3, v0);
  #L4c6c14.  if v5 != 0 then goto L4c6c1a;
  #L4c6c18.  goto L4c6c78;
  #L4c6c1a.  v0:= new `uc.b`;
  #L4c6c1e.  v1:= new `java.lang.StringBuilder`;
  #L4c6c22.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c6c28.  v3:= "Conflict found: " @kind object;
  #L4c6c2c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6c32.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6c38.  v2:= temp @kind wide;
  #L4c6c3a.  call temp:= `k0`(v2) @signature `Luc/h;.k0:(J)Luc/h;` @kind static;
  #L4c6c40.  v2:= temp @kind object;
  #L4c6c42.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6c48.  v2:= " differs from " @kind object;
  #L4c6c4c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6c52.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6c58.  v8:= " while resolving  " @kind object;
  #L4c6c5c.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6c62.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6c68.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c6c6e.  v7:= temp @kind object;
  #L4c6c70.  call `<init>`(v0, v7) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c6c76.  throw v0;
  #L4c6c78.  return @kind void;
}
procedure `void` `p0`(`wc.a` v6 @kind this, `yc.i` v7 @kind object, `vc.b` v8 @kind object) @signature `Lwc/a;.p0:(Lyc/i;Lvc/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4c6c8c.  v0:= v6.`wc.a.p` @type ^`vc.h` @kind object;
  #L4c6c90.  call temp:= `a0`(v8) @signature `Lvc/b;.a0:()Lvc/h;` @kind virtual;
  #L4c6c96.  v1:= temp @kind object;
  #L4c6c98.  call temp:= `equals`(v0, v1) @signature `Lvc/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4c6c9e.  v0:= temp;
  #L4c6ca0.  if v0 == 0 then goto L4c6d46;
  #L4c6ca4.  call temp:= `g0`(v8) @signature `Lvc/b;.g0:()J` @kind virtual;
  #L4c6caa.  v0:= temp @kind wide;
  #L4c6cac.  v8:= v6.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6cb0.  v2:= `@@yc.a.M` @type ^`yc.a` @kind object;
  #L4c6cb4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c6cba.  v3:= temp @kind object;
  #L4c6cbc.  call temp:= `put`(v8, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6cc2.  v8:= temp @kind object;
  #L4c6cc4.  v8:= (`java.lang.Long`) v8 @kind object;
  #L4c6cc8.  if v8 == 0 then goto L4c6d44;
  #L4c6ccc.  call temp:= `longValue`(v8) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6cd2.  v2:= temp @kind wide;
  #L4c6cd4.  v4:= lcmp(v2, v0);
  #L4c6cd8.  if v4 != 0 then goto L4c6cde;
  #L4c6cdc.  goto L4c6d44;
  #L4c6cde.  v2:= new `uc.b`;
  #L4c6ce2.  v3:= new `java.lang.StringBuilder`;
  #L4c6ce6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c6cec.  v4:= "Conflict found: " @kind object;
  #L4c6cf0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6cf6.  call temp:= `longValue`(v8) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6cfc.  v4:= temp @kind wide;
  #L4c6cfe.  call temp:= `E0`(v4) @signature `Luc/f;.E0:(J)Luc/f;` @kind static;
  #L4c6d04.  v8:= temp @kind object;
  #L4c6d06.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6d0c.  v8:= " differs from " @kind object;
  #L4c6d10.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6d16.  call temp:= `E0`(v0) @signature `Luc/f;.E0:(J)Luc/f;` @kind static;
  #L4c6d1c.  v8:= temp @kind object;
  #L4c6d1e.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6d24.  v8:= " while resolving  " @kind object;
  #L4c6d28.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6d2e.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6d34.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c6d3a.  v7:= temp @kind object;
  #L4c6d3c.  call `<init>`(v2, v7) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c6d42.  throw v2;
  #L4c6d44.  return @kind void;
  #L4c6d46.  v7:= new `uc.b`;
  #L4c6d4a.  v8:= new `java.lang.StringBuilder`;
  #L4c6d4e.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c6d54.  v0:= "ChronoLocalDate must use the effective parsed chronology: " @kind object;
  #L4c6d58.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6d5e.  v0:= v6.`wc.a.p` @type ^`vc.h` @kind object;
  #L4c6d62.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6d68.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c6d6e.  v8:= temp @kind object;
  #L4c6d70.  call `<init>`(v7, v8) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c6d76.  throw v7;
}
procedure `void` `q0`(`wc.a` v18 @kind this, `wc.i` v19 @kind object) @signature `Lwc/a;.q0:(Lwc/i;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L4c6d88.  v0:= v18 @kind object;
  #L4c6d8c.  v1:= v19 @kind object;
  #L4c6d90.  v2:= v0.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6d94.  v3:= `@@yc.a.E` @type ^`yc.a` @kind object;
  #L4c6d98.  call temp:= `get`(v2, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6d9e.  v2:= temp @kind object;
  #L4c6da0.  v2:= (`java.lang.Long`) v2 @kind object;
  #L4c6da4.  v4:= v0.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6da8.  v5:= `@@yc.a.A` @type ^`yc.a` @kind object;
  #L4c6dac.  call temp:= `get`(v4, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6db2.  v4:= temp @kind object;
  #L4c6db4.  v4:= (`java.lang.Long`) v4 @kind object;
  #L4c6db8.  v6:= v0.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6dbc.  v7:= `@@yc.a.y` @type ^`yc.a` @kind object;
  #L4c6dc0.  call temp:= `get`(v6, v7) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6dc6.  v6:= temp @kind object;
  #L4c6dc8.  v6:= (`java.lang.Long`) v6 @kind object;
  #L4c6dcc.  v8:= v0.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c6dd0.  v9:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L4c6dd4.  call temp:= `get`(v8, v9) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c6dda.  v8:= temp @kind object;
  #L4c6ddc.  v8:= (`java.lang.Long`) v8 @kind object;
  #L4c6de0.  if v2 != 0 then goto L4c6de6;
  #L4c6de4.  return @kind void;
  #L4c6de6.  if v4 != 0 then goto L4c6df4;
  #L4c6dea.  if v6 != 0 then goto L4c6df2;
  #L4c6dee.  if v8 == 0 then goto L4c6df4;
  #L4c6df2.  return @kind void;
  #L4c6df4.  if v4 == 0 then goto L4c6e02;
  #L4c6df8.  if v6 != 0 then goto L4c6e02;
  #L4c6dfc.  if v8 == 0 then goto L4c6e02;
  #L4c6e00.  return @kind void;
  #L4c6e02.  v10:= `@@wc.i.q` @type ^`wc.i` @kind object;
  #L4c6e06.  v11:= 0I;
  #L4c6e08.  v12:= 24L;
  #L4c6e0c.  v14:= 0L;
  #L4c6e10.  if v1 == v10 then goto L4c6f06;
  #L4c6e14.  v10:= `@@wc.i.p` @type ^`wc.i` @kind object;
  #L4c6e18.  if v1 != v10 then goto L4c6e7e;
  #L4c6e1c.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6e22.  v16:= temp @kind wide;
  #L4c6e24.  v1:= lcmp(v16, v12);
  #L4c6e28.  if v1 != 0 then goto L4c6e7e;
  #L4c6e2c.  if v4 == 0 then goto L4c6e40;
  #L4c6e30.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6e36.  v12:= temp @kind wide;
  #L4c6e38.  v1:= lcmp(v12, v14);
  #L4c6e3c.  if v1 != 0 then goto L4c6e7e;
  #L4c6e40.  if v6 == 0 then goto L4c6e54;
  #L4c6e44.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6e4a.  v12:= temp @kind wide;
  #L4c6e4c.  v1:= lcmp(v12, v14);
  #L4c6e50.  if v1 != 0 then goto L4c6e7e;
  #L4c6e54.  if v8 == 0 then goto L4c6e68;
  #L4c6e58.  call temp:= `longValue`(v8) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6e5e.  v12:= temp @kind wide;
  #L4c6e60.  v1:= lcmp(v12, v14);
  #L4c6e64.  if v1 != 0 then goto L4c6e7e;
  #L4c6e68.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c6e6e.  v2:= temp @kind object;
  #L4c6e70.  v1:= 1I;
  #L4c6e72.  call temp:= `d`(v1) @signature `Luc/m;.d:(I)Luc/m;` @kind static;
  #L4c6e78.  v1:= temp @kind object;
  #L4c6e7a.  v0.`wc.a.u` @type ^`uc.m` := v1 @kind object;
  #L4c6e7e.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6e84.  v1:= temp @kind wide;
  #L4c6e86.  call temp:= `r`(v3, v1) @signature `Lyc/a;.r:(J)I` @kind virtual;
  #L4c6e8c.  v1:= temp;
  #L4c6e8e.  if v4 == 0 then goto L4c6ef4;
  #L4c6e92.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6e98.  v10:= temp @kind wide;
  #L4c6e9a.  call temp:= `r`(v5, v10) @signature `Lyc/a;.r:(J)I` @kind virtual;
  #L4c6ea0.  v2:= temp;
  #L4c6ea2.  if v6 == 0 then goto L4c6ee6;
  #L4c6ea6.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6eac.  v10:= temp @kind wide;
  #L4c6eae.  call temp:= `r`(v7, v10) @signature `Lyc/a;.r:(J)I` @kind virtual;
  #L4c6eb4.  v4:= temp;
  #L4c6eb6.  if v8 == 0 then goto L4c6ed4;
  #L4c6eba.  call temp:= `longValue`(v8) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6ec0.  v10:= temp @kind wide;
  #L4c6ec2.  call temp:= `r`(v9, v10) @signature `Lyc/a;.r:(J)I` @kind virtual;
  #L4c6ec8.  v6:= temp;
  #L4c6eca.  call temp:= `j0`(v1, v2, v4, v6) @signature `Luc/h;.j0:(IIII)Luc/h;` @kind static;
  #L4c6ed0.  v1:= temp @kind object;
  #L4c6ed2.  goto L4c6edc;
  #L4c6ed4.  call temp:= `i0`(v1, v2, v4) @signature `Luc/h;.i0:(III)Luc/h;` @kind static;
  #L4c6eda.  v1:= temp @kind object;
  #L4c6edc.  call `V`(v0, v1) @signature `Lwc/a;.V:(Luc/h;)V` @kind virtual;
  #L4c6ee2.  goto L4c702e;
  #L4c6ee6.  if v8 != 0 then goto L4c702e;
  #L4c6eea.  call temp:= `h0`(v1, v2) @signature `Luc/h;.h0:(II)Luc/h;` @kind static;
  #L4c6ef0.  v1:= temp @kind object;
  #L4c6ef2.  goto L4c6edc;
  #L4c6ef4.  if v6 != 0 then goto L4c702e;
  #L4c6ef8.  if v8 != 0 then goto L4c702e;
  #L4c6efc.  call temp:= `h0`(v1, v11) @signature `Luc/h;.h0:(II)Luc/h;` @kind static;
  #L4c6f02.  v1:= temp @kind object;
  #L4c6f04.  goto L4c6edc;
  #L4c6f06.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6f0c.  v1:= temp @kind wide;
  #L4c6f0e.  if v4 == 0 then goto L4c6ff4;
  #L4c6f12.  if v6 == 0 then goto L4c6faa;
  #L4c6f16.  if v8 != 0 then goto L4c6f22;
  #L4c6f1a.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4c6f20.  v8:= temp @kind object;
  #L4c6f22.  v10:= 3600000000000L;
  #L4c6f2c.  call temp:= `m`(v1, v10) @signature `Lxc/d;.m:(JJ)J` @kind static;
  #L4c6f32.  v1:= temp @kind wide;
  #L4c6f34.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6f3a.  v10:= temp @kind wide;
  #L4c6f3c.  v12:= 60000000000L;
  #L4c6f46.  call temp:= `m`(v10, v12) @signature `Lxc/d;.m:(JJ)J` @kind static;
  #L4c6f4c.  v10:= temp @kind wide;
  #L4c6f4e.  call temp:= `k`(v1, v10) @signature `Lxc/d;.k:(JJ)J` @kind static;
  #L4c6f54.  v1:= temp @kind wide;
  #L4c6f56.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6f5c.  v10:= temp @kind wide;
  #L4c6f5e.  v12:= 1000000000L;
  #L4c6f64.  call temp:= `m`(v10, v12) @signature `Lxc/d;.m:(JJ)J` @kind static;
  #L4c6f6a.  v10:= temp @kind wide;
  #L4c6f6c.  call temp:= `k`(v1, v10) @signature `Lxc/d;.k:(JJ)J` @kind static;
  #L4c6f72.  v1:= temp @kind wide;
  #L4c6f74.  call temp:= `longValue`(v8) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6f7a.  v10:= temp @kind wide;
  #L4c6f7c.  call temp:= `k`(v1, v10) @signature `Lxc/d;.k:(JJ)J` @kind static;
  #L4c6f82.  v1:= temp @kind wide;
  #L4c6f84.  v10:= 86400000000000L;
  #L4c6f8e.  call temp:= `e`(v1, v10) @signature `Lxc/d;.e:(JJ)J` @kind static;
  #L4c6f94.  v12:= temp @kind wide;
  #L4c6f96.  v4:= (`int`) v12 @kind l2i;
  #L4c6f98.  call temp:= `h`(v1, v10) @signature `Lxc/d;.h:(JJ)J` @kind static;
  #L4c6f9e.  v1:= temp @kind wide;
  #L4c6fa0.  call temp:= `k0`(v1) @signature `Luc/h;.k0:(J)Luc/h;` @kind static;
  #L4c6fa6.  v1:= temp @kind object;
  #L4c6fa8.  goto L4c701c;
  #L4c6faa.  v10:= 3600L;
  #L4c6fae.  call temp:= `m`(v1, v10) @signature `Lxc/d;.m:(JJ)J` @kind static;
  #L4c6fb4.  v1:= temp @kind wide;
  #L4c6fb6.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c6fbc.  v10:= temp @kind wide;
  #L4c6fbe.  v12:= 60L;
  #L4c6fc2.  call temp:= `m`(v10, v12) @signature `Lxc/d;.m:(JJ)J` @kind static;
  #L4c6fc8.  v10:= temp @kind wide;
  #L4c6fca.  call temp:= `k`(v1, v10) @signature `Lxc/d;.k:(JJ)J` @kind static;
  #L4c6fd0.  v1:= temp @kind wide;
  #L4c6fd2.  v10:= 86400L;
  #L4c6fd8.  call temp:= `e`(v1, v10) @signature `Lxc/d;.e:(JJ)J` @kind static;
  #L4c6fde.  v12:= temp @kind wide;
  #L4c6fe0.  v4:= (`int`) v12 @kind l2i;
  #L4c6fe2.  call temp:= `h`(v1, v10) @signature `Lxc/d;.h:(JJ)J` @kind static;
  #L4c6fe8.  v1:= temp @kind wide;
  #L4c6fea.  call temp:= `l0`(v1) @signature `Luc/h;.l0:(J)Luc/h;` @kind static;
  #L4c6ff0.  v1:= temp @kind object;
  #L4c6ff2.  goto L4c701c;
  #L4c6ff4.  call temp:= `e`(v1, v12) @signature `Lxc/d;.e:(JJ)J` @kind static;
  #L4c6ffa.  v12:= temp @kind wide;
  #L4c6ffc.  call temp:= `p`(v12) @signature `Lxc/d;.p:(J)I` @kind static;
  #L4c7002.  v4:= temp;
  #L4c7004.  v6:= 24I;
  #L4c7008.  call temp:= `g`(v1, v6) @signature `Lxc/d;.g:(JI)I` @kind static;
  #L4c700e.  v1:= temp;
  #L4c7010.  v1:= (`long`) v1 @kind i2l;
  #L4c7012.  v2:= (`int`) v1 @kind l2i;
  #L4c7014.  call temp:= `h0`(v2, v11) @signature `Luc/h;.h0:(II)Luc/h;` @kind static;
  #L4c701a.  v1:= temp @kind object;
  #L4c701c.  call `V`(v0, v1) @signature `Lwc/a;.V:(Luc/h;)V` @kind virtual;
  #L4c7022.  call temp:= `d`(v4) @signature `Luc/m;.d:(I)Luc/m;` @kind static;
  #L4c7028.  v1:= temp @kind object;
  #L4c702a.  v0.`wc.a.u` @type ^`uc.m` := v1 @kind object;
  #L4c702e.  v1:= v0.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c7032.  call temp:= `remove`(v1, v3) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c7038.  v1:= v0.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c703c.  call temp:= `remove`(v1, v5) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c7042.  v1:= v0.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c7046.  call temp:= `remove`(v1, v7) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c704c.  v1:= v0.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c7050.  call temp:= `remove`(v1, v9) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c7056.  return @kind void;
}
procedure `long` `B`(`wc.a` v3 @kind this, `yc.i` v4 @kind object) @signature `Lwc/a;.B:(Lyc/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4c6058.  v0:= "field" @kind object;
  #L4c605c.  call temp:= `i`(v4, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4c6062.  call temp:= `e0`(v3, v4) @signature `Lwc/a;.e0:(Lyc/i;)Ljava/lang/Long;` @kind direct;
  #L4c6068.  v0:= temp @kind object;
  #L4c606a.  if v0 != 0 then goto L4c60e0;
  #L4c606e.  v0:= v3.`wc.a.r` @type ^`vc.b` @kind object;
  #L4c6072.  if v0 == 0 then goto L4c6090;
  #L4c6076.  call temp:= `d`(v0, v4) @signature `Lvc/b;.d:(Lyc/i;)Z` @kind virtual;
  #L4c607c.  v0:= temp;
  #L4c607e.  if v0 == 0 then goto L4c6090;
  #L4c6082.  v0:= v3.`wc.a.r` @type ^`vc.b` @kind object;
  #L4c6086.  call temp:= `B`(v0, v4) @signature `Lyc/e;.B:(Lyc/i;)J` @kind interface;
  #L4c608c.  v0:= temp @kind wide;
  #L4c608e.  return v0 @kind wide;
  #L4c6090.  v0:= v3.`wc.a.s` @type ^`uc.h` @kind object;
  #L4c6094.  if v0 == 0 then goto L4c60b2;
  #L4c6098.  call temp:= `d`(v0, v4) @signature `Luc/h;.d:(Lyc/i;)Z` @kind virtual;
  #L4c609e.  v0:= temp;
  #L4c60a0.  if v0 == 0 then goto L4c60b2;
  #L4c60a4.  v0:= v3.`wc.a.s` @type ^`uc.h` @kind object;
  #L4c60a8.  call temp:= `B`(v0, v4) @signature `Luc/h;.B:(Lyc/i;)J` @kind virtual;
  #L4c60ae.  v0:= temp @kind wide;
  #L4c60b0.  return v0 @kind wide;
  #L4c60b2.  v0:= new `uc.b`;
  #L4c60b6.  v1:= new `java.lang.StringBuilder`;
  #L4c60ba.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c60c0.  v2:= "Field not found: " @kind object;
  #L4c60c4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c60ca.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c60d0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c60d6.  v4:= temp @kind object;
  #L4c60d8.  call `<init>`(v0, v4) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c60de.  throw v0;
  #L4c60e0.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c60e6.  v0:= temp @kind wide;
  #L4c60e8.  return v0 @kind wide;
}
procedure `wc.a` `T`(`wc.a` v4 @kind this, `yc.i` v5 @kind object, `long` v6 ) @signature `Lwc/a;.T:(Lyc/i;J)Lwc/a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4c7068.  v0:= "field" @kind object;
  #L4c706c.  call temp:= `i`(v5, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4c7072.  call temp:= `e0`(v4, v5) @signature `Lwc/a;.e0:(Lyc/i;)Ljava/lang/Long;` @kind direct;
  #L4c7078.  v0:= temp @kind object;
  #L4c707a.  if v0 == 0 then goto L4c70fa;
  #L4c707e.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c7084.  v1:= temp @kind wide;
  #L4c7086.  v3:= lcmp(v1, v6);
  #L4c708a.  if v3 != 0 then goto L4c7090;
  #L4c708e.  goto L4c70fa;
  #L4c7090.  v1:= new `uc.b`;
  #L4c7094.  v2:= new `java.lang.StringBuilder`;
  #L4c7098.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c709e.  v3:= "Conflict found: " @kind object;
  #L4c70a2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c70a8.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c70ae.  v3:= " " @kind object;
  #L4c70b2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c70b8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c70be.  v0:= " differs from " @kind object;
  #L4c70c2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c70c8.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c70ce.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c70d4.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c70da.  v5:= ": " @kind object;
  #L4c70de.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c70e4.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c70ea.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c70f0.  v5:= temp @kind object;
  #L4c70f2.  call `<init>`(v1, v5) @signature `Luc/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c70f8.  throw v1;
  #L4c70fa.  call temp:= `j0`(v4, v5, v6) @signature `Lwc/a;.j0:(Lyc/i;J)Lwc/a;` @kind direct;
  #L4c7100.  v5:= temp @kind object;
  #L4c7102.  return v5 @kind object;
}
procedure `void` `V`(`wc.a` v0 @kind this, `uc.h` v1 @kind object) @signature `Lwc/a;.V:(Luc/h;)V` @AccessFlag  {
    temp;

  #L4c6124.  v0.`wc.a.s` @type ^`uc.h` := v1 @kind object;
  #L4c6128.  return @kind void;
}
procedure `void` `X`(`wc.a` v0 @kind this, `vc.b` v1 @kind object) @signature `Lwc/a;.X:(Lvc/b;)V` @AccessFlag  {
    temp;

  #L4c613c.  v0.`wc.a.r` @type ^`vc.b` := v1 @kind object;
  #L4c6140.  return @kind void;
}
procedure `java.lang.Object` `a0`(`wc.a` v0 @kind this, `yc.k` v1 @kind object) @signature `Lwc/a;.a0:(Lyc/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L4c5ef4.  call temp:= `a`(v1, v0) @signature `Lyc/k;.a:(Lyc/e;)Ljava/lang/Object;` @kind interface;
  #L4c5efa.  v1:= temp @kind object;
  #L4c5efc.  return v1 @kind object;
}
procedure `boolean` `d`(`wc.a` v2 @kind this, `yc.i` v3 @kind object) @signature `Lwc/a;.d:(Lyc/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c5ce0.  v0:= 0I;
  #L4c5ce2.  if v3 != 0 then goto L4c5ce8;
  #L4c5ce6.  return v0;
  #L4c5ce8.  v1:= v2.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c5cec.  call temp:= `containsKey`(v1, v3) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4c5cf2.  v1:= temp;
  #L4c5cf4.  if v1 != 0 then goto L4c5d20;
  #L4c5cf8.  v1:= v2.`wc.a.r` @type ^`vc.b` @kind object;
  #L4c5cfc.  if v1 == 0 then goto L4c5d0c;
  #L4c5d00.  call temp:= `d`(v1, v3) @signature `Lvc/b;.d:(Lyc/i;)Z` @kind virtual;
  #L4c5d06.  v1:= temp;
  #L4c5d08.  if v1 != 0 then goto L4c5d20;
  #L4c5d0c.  v1:= v2.`wc.a.s` @type ^`uc.h` @kind object;
  #L4c5d10.  if v1 == 0 then goto L4c5d22;
  #L4c5d14.  call temp:= `d`(v1, v3) @signature `Luc/h;.d:(Lyc/i;)Z` @kind virtual;
  #L4c5d1a.  v3:= temp;
  #L4c5d1c.  if v3 == 0 then goto L4c5d22;
  #L4c5d20.  v0:= 1I;
  #L4c5d22.  return v0;
}
procedure `java.lang.Object` `j`(`wc.a` v2 @kind this, `yc.k` v3 @kind object) @signature `Lwc/a;.j:(Lyc/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c5f10.  call temp:= `g`() @signature `Lyc/j;.g:()Lyc/k;` @kind static;
  #L4c5f16.  v0:= temp @kind object;
  #L4c5f18.  if v3 != v0 then goto L4c5f22;
  #L4c5f1c.  v3:= v2.`wc.a.q` @type ^`uc.q` @kind object;
  #L4c5f20.  return v3 @kind object;
  #L4c5f22.  call temp:= `a`() @signature `Lyc/j;.a:()Lyc/k;` @kind static;
  #L4c5f28.  v0:= temp @kind object;
  #L4c5f2a.  if v3 != v0 then goto L4c5f34;
  #L4c5f2e.  v3:= v2.`wc.a.p` @type ^`vc.h` @kind object;
  #L4c5f32.  return v3 @kind object;
  #L4c5f34.  call temp:= `b`() @signature `Lyc/j;.b:()Lyc/k;` @kind static;
  #L4c5f3a.  v0:= temp @kind object;
  #L4c5f3c.  v1:= 0I;
  #L4c5f3e.  if v3 != v0 then goto L4c5f54;
  #L4c5f42.  v3:= v2.`wc.a.r` @type ^`vc.b` @kind object;
  #L4c5f46.  if v3 == 0 then goto L4c5f52;
  #L4c5f4a.  call temp:= `m0`(v3) @signature `Luc/f;.m0:(Lyc/e;)Luc/f;` @kind static;
  #L4c5f50.  v1:= temp @kind object;
  #L4c5f52.  return v1 @kind object;
  #L4c5f54.  call temp:= `c`() @signature `Lyc/j;.c:()Lyc/k;` @kind static;
  #L4c5f5a.  v0:= temp @kind object;
  #L4c5f5c.  if v3 != v0 then goto L4c5f66;
  #L4c5f60.  v3:= v2.`wc.a.s` @type ^`uc.h` @kind object;
  #L4c5f64.  return v3 @kind object;
  #L4c5f66.  call temp:= `f`() @signature `Lyc/j;.f:()Lyc/k;` @kind static;
  #L4c5f6c.  v0:= temp @kind object;
  #L4c5f6e.  if v3 == v0 then goto L4c5f98;
  #L4c5f72.  call temp:= `d`() @signature `Lyc/j;.d:()Lyc/k;` @kind static;
  #L4c5f78.  v0:= temp @kind object;
  #L4c5f7a.  if v3 != v0 then goto L4c5f80;
  #L4c5f7e.  goto L4c5f98;
  #L4c5f80.  call temp:= `e`() @signature `Lyc/j;.e:()Lyc/k;` @kind static;
  #L4c5f86.  v0:= temp @kind object;
  #L4c5f88.  if v3 != v0 then goto L4c5f8e;
  #L4c5f8c.  return v1 @kind object;
  #L4c5f8e.  call temp:= `a`(v3, v2) @signature `Lyc/k;.a:(Lyc/e;)Ljava/lang/Object;` @kind interface;
  #L4c5f94.  v3:= temp @kind object;
  #L4c5f96.  return v3 @kind object;
  #L4c5f98.  call temp:= `a`(v3, v2) @signature `Lyc/k;.a:(Lyc/e;)Ljava/lang/Object;` @kind interface;
  #L4c5f9e.  v3:= temp @kind object;
  #L4c5fa0.  return v3 @kind object;
}
procedure `wc.a` `k0`(`wc.a` v1 @kind this, `wc.i` v2 @kind object, `java.util.Set` v3 @kind object) @signature `Lwc/a;.k0:(Lwc/i;Ljava/util/Set;)Lwc/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c7138.  if v3 == 0 then goto L4c714e;
  #L4c713c.  v0:= v1.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c7140.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L4c7146.  v0:= temp @kind object;
  #L4c7148.  call temp:= `retainAll`(v0, v3) @signature `Ljava/util/Set;.retainAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4c714e.  call `g0`(v1) @signature `Lwc/a;.g0:()V` @kind direct;
  #L4c7154.  call `f0`(v1, v2) @signature `Lwc/a;.f0:(Lwc/i;)V` @kind direct;
  #L4c715a.  call `i0`(v1, v2) @signature `Lwc/a;.i0:(Lwc/i;)V` @kind direct;
  #L4c7160.  call temp:= `l0`(v1, v2) @signature `Lwc/a;.l0:(Lwc/i;)Z` @kind direct;
  #L4c7166.  v3:= temp;
  #L4c7168.  if v3 == 0 then goto L4c717e;
  #L4c716c.  call `g0`(v1) @signature `Lwc/a;.g0:()V` @kind direct;
  #L4c7172.  call `f0`(v1, v2) @signature `Lwc/a;.f0:(Lwc/i;)V` @kind direct;
  #L4c7178.  call `i0`(v1, v2) @signature `Lwc/a;.i0:(Lwc/i;)V` @kind direct;
  #L4c717e.  call `q0`(v1, v2) @signature `Lwc/a;.q0:(Lwc/i;)V` @kind direct;
  #L4c7184.  call `c0`(v1) @signature `Lwc/a;.c0:()V` @kind direct;
  #L4c718a.  v2:= v1.`wc.a.u` @type ^`uc.m` @kind object;
  #L4c718e.  if v2 == 0 then goto L4c71c6;
  #L4c7192.  call temp:= `b`(v2) @signature `Luc/m;.b:()Z` @kind virtual;
  #L4c7198.  v2:= temp;
  #L4c719a.  if v2 != 0 then goto L4c71c6;
  #L4c719e.  v2:= v1.`wc.a.r` @type ^`vc.b` @kind object;
  #L4c71a2.  if v2 == 0 then goto L4c71c6;
  #L4c71a6.  v3:= v1.`wc.a.s` @type ^`uc.h` @kind object;
  #L4c71aa.  if v3 == 0 then goto L4c71c6;
  #L4c71ae.  v3:= v1.`wc.a.u` @type ^`uc.m` @kind object;
  #L4c71b2.  call temp:= `f0`(v2, v3) @signature `Lvc/b;.f0:(Lyc/h;)Lvc/b;` @kind virtual;
  #L4c71b8.  v2:= temp @kind object;
  #L4c71ba.  v1.`wc.a.r` @type ^`vc.b` := v2 @kind object;
  #L4c71be.  v2:= `@@uc.m.r` @type ^`uc.m` @kind object;
  #L4c71c2.  v1.`wc.a.u` @type ^`uc.m` := v2 @kind object;
  #L4c71c6.  call `m0`(v1) @signature `Lwc/a;.m0:()V` @kind direct;
  #L4c71cc.  call `n0`(v1) @signature `Lwc/a;.n0:()V` @kind direct;
  #L4c71d2.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`wc.a` v3 @kind this) @signature `Lwc/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4c5fb4.  v0:= new `java.lang.StringBuilder`;
  #L4c5fb8.  v1:= 128I;
  #L4c5fbc.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L4c5fc2.  v1:= "DateTimeBuilder[" @kind object;
  #L4c5fc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c5fcc.  v1:= v3.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c5fd0.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L4c5fd6.  v1:= temp;
  #L4c5fd8.  if v1 <= 0 then goto L4c5ff0;
  #L4c5fdc.  v1:= "fields=" @kind object;
  #L4c5fe0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c5fe6.  v1:= v3.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4c5fea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c5ff0.  v1:= ", " @kind object;
  #L4c5ff4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c5ffa.  v2:= v3.`wc.a.p` @type ^`vc.h` @kind object;
  #L4c5ffe.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6004.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c600a.  v2:= v3.`wc.a.q` @type ^`uc.q` @kind object;
  #L4c600e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6014.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c601a.  v2:= v3.`wc.a.r` @type ^`vc.b` @kind object;
  #L4c601e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6024.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c602a.  v1:= v3.`wc.a.s` @type ^`uc.h` @kind object;
  #L4c602e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c6034.  v1:= 93I;
  #L4c6038.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c603e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c6044.  v0:= temp @kind object;
  #L4c6046.  return v0 @kind object;
}
