record `wc.c$o` @kind class @AccessFlag FINAL extends `wc.c$g` @kind interface {
  `yc.i` `wc.c$o.o` @AccessFlag PRIVATE_FINAL;
  `wc.l` `wc.c$o.p` @AccessFlag PRIVATE_FINAL;
  `wc.g` `wc.c$o.q` @AccessFlag PRIVATE_FINAL;
  `wc.c$j` `wc.c$o.r` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`wc.c$o` v0 @kind this, `yc.i` v1 @kind object, `wc.l` v2 @kind object, `wc.g` v3 @kind object) @signature `Lwc/c$o;.<init>:(Lyc/i;Lwc/l;Lwc/g;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c9378.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c937e.  v0.`wc.c$o.o` @type ^`yc.i` := v1 @kind object;
  #L4c9382.  v0.`wc.c$o.p` @type ^`wc.l` := v2 @kind object;
  #L4c9386.  v0.`wc.c$o.q` @type ^`wc.g` := v3 @kind object;
  #L4c938a.  return @kind void;
}
procedure `wc.c$j` `a`(`wc.c$o` v5 @kind this) @signature `Lwc/c$o;.a:()Lwc/c$j;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4c939c.  v0:= v5.`wc.c$o.r` @type ^`wc.c$j` @kind object;
  #L4c93a0.  if v0 != 0 then goto L4c93c0;
  #L4c93a4.  v0:= new `wc.c$j`;
  #L4c93a8.  v1:= v5.`wc.c$o.o` @type ^`yc.i` @kind object;
  #L4c93ac.  v2:= 1I;
  #L4c93ae.  v3:= 19I;
  #L4c93b2.  v4:= `@@wc.j.o` @type ^`wc.j` @kind object;
  #L4c93b6.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lwc/c$j;.<init>:(Lyc/i;IILwc/j;)V` @kind direct;
  #L4c93bc.  v5.`wc.c$o.r` @type ^`wc.c$j` := v0 @kind object;
  #L4c93c0.  v0:= v5.`wc.c$o.r` @type ^`wc.c$j` @kind object;
  #L4c93c4.  return v0 @kind object;
}
procedure `boolean` `c`(`wc.c$o` v7 @kind this, `wc.f` v8 @kind object, `java.lang.StringBuilder` v9 @kind object) @signature `Lwc/c$o;.c:(Lwc/f;Ljava/lang/StringBuilder;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4c9198.  v0:= v7.`wc.c$o.o` @type ^`yc.i` @kind object;
  #L4c919c.  call temp:= `f`(v8, v0) @signature `Lwc/f;.f:(Lyc/i;)Ljava/lang/Long;` @kind virtual;
  #L4c91a2.  v0:= temp @kind object;
  #L4c91a4.  if v0 != 0 then goto L4c91ac;
  #L4c91a8.  v8:= 0I;
  #L4c91aa.  return v8;
  #L4c91ac.  v1:= v7.`wc.c$o.q` @type ^`wc.g` @kind object;
  #L4c91b0.  v2:= v7.`wc.c$o.o` @type ^`yc.i` @kind object;
  #L4c91b4.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c91ba.  v3:= temp @kind wide;
  #L4c91bc.  v5:= v7.`wc.c$o.p` @type ^`wc.l` @kind object;
  #L4c91c0.  call temp:= `c`(v8) @signature `Lwc/f;.c:()Ljava/util/Locale;` @kind virtual;
  #L4c91c6.  v6:= temp @kind object;
  #L4c91c8.  v0:= v1 @kind object;
  #L4c91ca.  v1:= v2 @kind object;
  #L4c91cc.  v2:= v3 @kind wide;
  #L4c91ce.  v4:= v5 @kind object;
  #L4c91d0.  v5:= v6 @kind object;
  #L4c91d2.  call temp:= `a`(v0, v1, v2, v4, v5) @signature `Lwc/g;.a:(Lyc/i;JLwc/l;Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4c91d8.  v0:= temp @kind object;
  #L4c91da.  if v0 != 0 then goto L4c91f0;
  #L4c91de.  call temp:= `a`(v7) @signature `Lwc/c$o;.a:()Lwc/c$j;` @kind direct;
  #L4c91e4.  v0:= temp @kind object;
  #L4c91e6.  call temp:= `c`(v0, v8, v9) @signature `Lwc/c$j;.c:(Lwc/f;Ljava/lang/StringBuilder;)Z` @kind virtual;
  #L4c91ec.  v8:= temp;
  #L4c91ee.  return v8;
  #L4c91f0.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c91f6.  v8:= 1I;
  #L4c91f8.  return v8;
}
procedure `int` `d`(`wc.c$o` v10 @kind this, `wc.d` v11 @kind object, `java.lang.CharSequence` v12 @kind object, `int` v13 ) @signature `Lwc/c$o;.d:(Lwc/d;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4c920c.  call temp:= `length`(v12) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L4c9212.  v0:= temp;
  #L4c9214.  if v13 < 0 then goto L4c92e2;
  #L4c9218.  if v13 > v0 then goto L4c92e2;
  #L4c921c.  call temp:= `l`(v11) @signature `Lwc/d;.l:()Z` @kind virtual;
  #L4c9222.  v0:= temp;
  #L4c9224.  if v0 == 0 then goto L4c922e;
  #L4c9228.  v0:= v10.`wc.c$o.p` @type ^`wc.l` @kind object;
  #L4c922c.  goto L4c9230;
  #L4c922e.  v0:= 0I;
  #L4c9230.  v1:= v10.`wc.c$o.q` @type ^`wc.g` @kind object;
  #L4c9234.  v2:= v10.`wc.c$o.o` @type ^`yc.i` @kind object;
  #L4c9238.  call temp:= `h`(v11) @signature `Lwc/d;.h:()Ljava/util/Locale;` @kind virtual;
  #L4c923e.  v3:= temp @kind object;
  #L4c9240.  call temp:= `b`(v1, v2, v0, v3) @signature `Lwc/g;.b:(Lyc/i;Lwc/l;Ljava/util/Locale;)Ljava/util/Iterator;` @kind virtual;
  #L4c9246.  v0:= temp @kind object;
  #L4c9248.  if v0 == 0 then goto L4c92d0;
  #L4c924c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4c9252.  v1:= temp;
  #L4c9254.  if v1 == 0 then goto L4c92c0;
  #L4c9258.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4c925e.  v1:= temp @kind object;
  #L4c9260.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L4c9264.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4c926a.  v2:= temp @kind object;
  #L4c926c.  v2:= (`java.lang.String`) v2 @kind object;
  #L4c9270.  v5:= 0I;
  #L4c9272.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4c9278.  v8:= temp;
  #L4c927a.  v3:= v11 @kind object;
  #L4c927c.  v4:= v2 @kind object;
  #L4c927e.  v6:= v12 @kind object;
  #L4c9280.  v7:= v13;
  #L4c9282.  call temp:= `s`(v3, v4, v5, v6, v7, v8) @signature `Lwc/d;.s:(Ljava/lang/CharSequence;ILjava/lang/CharSequence;II)Z` @kind virtual;
  #L4c9288.  v3:= temp;
  #L4c928a.  if v3 == 0 then goto L4c924c;
  #L4c928e.  v5:= v10.`wc.c$o.o` @type ^`yc.i` @kind object;
  #L4c9292.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4c9298.  v12:= temp @kind object;
  #L4c929a.  v12:= (`java.lang.Long`) v12 @kind object;
  #L4c929e.  call temp:= `longValue`(v12) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4c92a4.  v6:= temp @kind wide;
  #L4c92a6.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4c92ac.  v12:= temp;
  #L4c92ae.  v9:= v13 + v12 @kind int;
  #L4c92b2.  v4:= v11 @kind object;
  #L4c92b4.  v8:= v13;
  #L4c92b6.  call temp:= `o`(v4, v5, v6, v8, v9) @signature `Lwc/d;.o:(Lyc/i;JII)I` @kind virtual;
  #L4c92bc.  v11:= temp;
  #L4c92be.  return v11;
  #L4c92c0.  call temp:= `l`(v11) @signature `Lwc/d;.l:()Z` @kind virtual;
  #L4c92c6.  v0:= temp;
  #L4c92c8.  if v0 == 0 then goto L4c92d0;
  #L4c92cc.  v11:= ~v13 @kind int;
  #L4c92ce.  return v11;
  #L4c92d0.  call temp:= `a`(v10) @signature `Lwc/c$o;.a:()Lwc/c$j;` @kind direct;
  #L4c92d6.  v0:= temp @kind object;
  #L4c92d8.  call temp:= `d`(v0, v11, v12, v13) @signature `Lwc/c$j;.d:(Lwc/d;Ljava/lang/CharSequence;I)I` @kind virtual;
  #L4c92de.  v11:= temp;
  #L4c92e0.  return v11;
  #L4c92e2.  v11:= new `java.lang.IndexOutOfBoundsException`;
  #L4c92e6.  call `<init>`(v11) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L4c92ec.  throw v11;
}
procedure `java.lang.String` `toString`(`wc.c$o` v4 @kind this) @signature `Lwc/c$o;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4c9300.  v0:= v4.`wc.c$o.p` @type ^`wc.l` @kind object;
  #L4c9304.  v1:= `@@wc.l.o` @type ^`wc.l` @kind object;
  #L4c9308.  v2:= ")" @kind object;
  #L4c930c.  v3:= "Text(" @kind object;
  #L4c9310.  if v0 != v1 then goto L4c933e;
  #L4c9314.  v0:= new `java.lang.StringBuilder`;
  #L4c9318.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c931e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c9324.  v1:= v4.`wc.c$o.o` @type ^`yc.i` @kind object;
  #L4c9328.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c932e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c9334.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c933a.  v0:= temp @kind object;
  #L4c933c.  return v0 @kind object;
  #L4c933e.  v0:= new `java.lang.StringBuilder`;
  #L4c9342.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c9348.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c934e.  v1:= v4.`wc.c$o.o` @type ^`yc.i` @kind object;
  #L4c9352.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c9358.  v1:= "," @kind object;
  #L4c935c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c9362.  v1:= v4.`wc.c$o.p` @type ^`wc.l` @kind object;
  #L4c9366.  goto L4c9328;
}
