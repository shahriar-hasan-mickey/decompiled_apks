record `wc.k$b` @kind class @AccessFlag FINAL {
  `java.util.Map` `wc.k$b.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `wc.k$b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`wc.k$b` v9 @kind this, `java.util.Map` v10 @kind object) @signature `Lwc/k$b;.<init>:(Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4cbf8c.  call `<init>`(v9) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4cbf92.  v9.`wc.k$b.a` @type ^`java.util.Map` := v10 @kind object;
  #L4cbf96.  v0:= new `java.util.HashMap`;
  #L4cbf9a.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4cbfa0.  v1:= new `java.util.ArrayList`;
  #L4cbfa4.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4cbfaa.  call temp:= `keySet`(v10) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L4cbfb0.  v2:= temp @kind object;
  #L4cbfb2.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4cbfb8.  v2:= temp @kind object;
  #L4cbfba.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4cbfc0.  v3:= temp;
  #L4cbfc2.  if v3 == 0 then goto L4cc06e;
  #L4cbfc6.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4cbfcc.  v3:= temp @kind object;
  #L4cbfce.  v3:= (`wc.l`) v3 @kind object;
  #L4cbfd2.  v4:= new `java.util.HashMap`;
  #L4cbfd6.  call `<init>`(v4) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4cbfdc.  call temp:= `get`(v10, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4cbfe2.  v5:= temp @kind object;
  #L4cbfe4.  v5:= (`java.util.Map`) v5 @kind object;
  #L4cbfe8.  call temp:= `entrySet`(v5) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L4cbfee.  v5:= temp @kind object;
  #L4cbff0.  call temp:= `iterator`(v5) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4cbff6.  v5:= temp @kind object;
  #L4cbff8.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4cbffe.  v6:= temp;
  #L4cc000.  if v6 == 0 then goto L4cc038;
  #L4cc004.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4cc00a.  v6:= temp @kind object;
  #L4cc00c.  v6:= (`java.util.Map$Entry`) v6 @kind object;
  #L4cc010.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4cc016.  v7:= temp @kind object;
  #L4cc018.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4cc01e.  v8:= temp @kind object;
  #L4cc020.  call temp:= `getKey`(v6) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4cc026.  v6:= temp @kind object;
  #L4cc028.  call temp:= `c`(v8, v6) @signature `Lwc/k;.c:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;` @kind static;
  #L4cc02e.  v6:= temp @kind object;
  #L4cc030.  call temp:= `put`(v4, v7, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4cc036.  goto L4cbff8;
  #L4cc038.  v5:= new `java.util.ArrayList`;
  #L4cc03c.  call temp:= `values`(v4) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L4cc042.  v4:= temp @kind object;
  #L4cc044.  call `<init>`(v5, v4) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4cc04a.  call temp:= `d`() @signature `Lwc/k;.d:()Ljava/util/Comparator;` @kind static;
  #L4cc050.  v4:= temp @kind object;
  #L4cc052.  call `sort`(v5, v4) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L4cc058.  call temp:= `put`(v0, v3, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4cc05e.  call temp:= `addAll`(v1, v5) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4cc064.  v3:= 0I;
  #L4cc066.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4cc06c.  goto L4cbfba;
  #L4cc06e.  call temp:= `d`() @signature `Lwc/k;.d:()Ljava/util/Comparator;` @kind static;
  #L4cc074.  v10:= temp @kind object;
  #L4cc076.  call `sort`(v1, v10) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L4cc07c.  v9.`wc.k$b.b` @type ^`java.util.Map` := v0 @kind object;
  #L4cc080.  return @kind void;
}
procedure `java.lang.String` `a`(`wc.k$b` v1 @kind this, `long` v2 , `wc.l` v4 @kind object) @signature `Lwc/k$b;.a:(JLwc/l;)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L4cbf18.  v0:= v1.`wc.k$b.a` @type ^`java.util.Map` @kind object;
  #L4cbf1c.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4cbf22.  v4:= temp @kind object;
  #L4cbf24.  v4:= (`java.util.Map`) v4 @kind object;
  #L4cbf28.  if v4 == 0 then goto L4cbf42;
  #L4cbf2c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4cbf32.  v2:= temp @kind object;
  #L4cbf34.  call temp:= `get`(v4, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4cbf3a.  v2:= temp @kind object;
  #L4cbf3c.  v2:= (`java.lang.String`) v2 @kind object;
  #L4cbf40.  goto L4cbf44;
  #L4cbf42.  v2:= 0I;
  #L4cbf44.  return v2 @kind object;
}
procedure `java.util.Iterator` `b`(`wc.k$b` v1 @kind this, `wc.l` v2 @kind object) @signature `Lwc/k$b;.b:(Lwc/l;)Ljava/util/Iterator;` @AccessFlag  {
    temp;
    v0;

  #L4cbf58.  v0:= v1.`wc.k$b.b` @type ^`java.util.Map` @kind object;
  #L4cbf5c.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4cbf62.  v2:= temp @kind object;
  #L4cbf64.  v2:= (`java.util.List`) v2 @kind object;
  #L4cbf68.  if v2 == 0 then goto L4cbf76;
  #L4cbf6c.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4cbf72.  v2:= temp @kind object;
  #L4cbf74.  goto L4cbf78;
  #L4cbf76.  v2:= 0I;
  #L4cbf78.  return v2 @kind object;
}
