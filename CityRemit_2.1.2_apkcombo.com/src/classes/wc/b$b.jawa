record `wc.b$b` @kind class @AccessFlag  extends `yc.k` @kind interface {
}
procedure `void` `<init>`(`wc.b$b` v0 @kind this) @signature `Lwc/b$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c728c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c7292.  return @kind void;
}
procedure `java.lang.Object` `a`(`wc.b$b` v0 @kind this, `yc.e` v1 @kind object) @signature `Lwc/b$b;.a:(Lyc/e;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4c7270.  call temp:= `b`(v0, v1) @signature `Lwc/b$b;.b:(Lyc/e;)Ljava/lang/Boolean;` @kind virtual;
  #L4c7276.  v1:= temp @kind object;
  #L4c7278.  return v1 @kind object;
}
procedure `java.lang.Boolean` `b`(`wc.b$b` v1 @kind this, `yc.e` v2 @kind object) @signature `Lwc/b$b;.b:(Lyc/e;)Ljava/lang/Boolean;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c7240.  v0:= instanceof @variable v2 @type ^`wc.a` @kind boolean;
  #L4c7244.  if v0 == 0 then goto L4c725a;
  #L4c7248.  v2:= (`wc.a`) v2 @kind object;
  #L4c724c.  v2:= v2.`wc.a.t` @type ^`boolean` @kind boolean;
  #L4c7250.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L4c7256.  v2:= temp @kind object;
  #L4c7258.  return v2 @kind object;
  #L4c725a.  v2:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L4c725e.  return v2 @kind object;
}
