record `wc.c$e` @kind class @AccessFlag FINAL extends `wc.c$g` @kind interface {
  `char` `wc.c$e.o` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`wc.c$e` v0 @kind this, `char` v1 ) @signature `Lwc/c$e;.<init>:(C)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c754c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c7552.  v0.`wc.c$e.o` @type ^`char` := v1 @kind char;
  #L4c7556.  return @kind void;
}
procedure `boolean` `c`(`wc.c$e` v0 @kind this, `wc.f` v1 @kind object, `java.lang.StringBuilder` v2 @kind object) @signature `Lwc/c$e;.c:(Lwc/f;Ljava/lang/StringBuilder;)Z` @AccessFlag PUBLIC {
    temp;

  #L4c7498.  v1:= v0.`wc.c$e.o` @type ^`char` @kind char;
  #L4c749c.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c74a2.  v1:= 1I;
  #L4c74a4.  return v1;
}
procedure `int` `d`(`wc.c$e` v1 @kind this, `wc.d` v2 @kind object, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lwc/c$e;.d:(Lwc/d;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c74b8.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L4c74be.  v0:= temp;
  #L4c74c0.  if v4 != v0 then goto L4c74c8;
  #L4c74c4.  v2:= ~v4 @kind int;
  #L4c74c6.  return v2;
  #L4c74c8.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L4c74ce.  v3:= temp;
  #L4c74d0.  v0:= v1.`wc.c$e.o` @type ^`char` @kind char;
  #L4c74d4.  call temp:= `b`(v2, v0, v3) @signature `Lwc/d;.b:(CC)Z` @kind virtual;
  #L4c74da.  v2:= temp;
  #L4c74dc.  if v2 != 0 then goto L4c74e4;
  #L4c74e0.  v2:= ~v4 @kind int;
  #L4c74e2.  return v2;
  #L4c74e4.  v4:= v4 + 1;
  #L4c74e8.  return v4;
}
procedure `java.lang.String` `toString`(`wc.c$e` v3 @kind this) @signature `Lwc/c$e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4c74fc.  v0:= v3.`wc.c$e.o` @type ^`char` @kind char;
  #L4c7500.  v1:= 39I;
  #L4c7504.  if v0 != v1 then goto L4c750e;
  #L4c7508.  v0:= "''" @kind object;
  #L4c750c.  return v0 @kind object;
  #L4c750e.  v0:= new `java.lang.StringBuilder`;
  #L4c7512.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c7518.  v1:= "'" @kind object;
  #L4c751c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7522.  v2:= v3.`wc.c$e.o` @type ^`char` @kind char;
  #L4c7526.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c752c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c7532.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4c7538.  v0:= temp @kind object;
  #L4c753a.  return v0 @kind object;
}
