record `wc.c$a` @kind class @AccessFlag  extends `yc.k` @kind interface {
}
procedure `void` `<init>`(`wc.c$a` v0 @kind this) @signature `Lwc/c$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4c72f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c72fe.  return @kind void;
}
procedure `java.lang.Object` `a`(`wc.c$a` v0 @kind this, `yc.e` v1 @kind object) @signature `Lwc/c$a;.a:(Lyc/e;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4c72a4.  call temp:= `b`(v0, v1) @signature `Lwc/c$a;.b:(Lyc/e;)Luc/q;` @kind virtual;
  #L4c72aa.  v1:= temp @kind object;
  #L4c72ac.  return v1 @kind object;
}
procedure `uc.q` `b`(`wc.c$a` v1 @kind this, `yc.e` v2 @kind object) @signature `Lwc/c$a;.b:(Lyc/e;)Luc/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c72c0.  call temp:= `g`() @signature `Lyc/j;.g:()Lyc/k;` @kind static;
  #L4c72c6.  v0:= temp @kind object;
  #L4c72c8.  call temp:= `j`(v2, v0) @signature `Lyc/e;.j:(Lyc/k;)Ljava/lang/Object;` @kind interface;
  #L4c72ce.  v2:= temp @kind object;
  #L4c72d0.  v2:= (`uc.q`) v2 @kind object;
  #L4c72d4.  if v2 == 0 then goto L4c72e2;
  #L4c72d8.  v0:= instanceof @variable v2 @type ^`uc.r` @kind boolean;
  #L4c72dc.  if v0 != 0 then goto L4c72e2;
  #L4c72e0.  goto L4c72e4;
  #L4c72e2.  v2:= 0I;
  #L4c72e4.  return v2 @kind object;
}
