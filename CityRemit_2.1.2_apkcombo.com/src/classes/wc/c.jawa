record `wc.c` @kind class @AccessFlag PUBLIC_FINAL {
  `wc.c` `wc.c.a` @AccessFlag PRIVATE;
  `wc.c` `wc.c.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `wc.c.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `wc.c.d` @AccessFlag PRIVATE_FINAL;
  `int` `wc.c.e` @AccessFlag PRIVATE;
  `char` `wc.c.f` @AccessFlag PRIVATE;
  `int` `wc.c.g` @AccessFlag PRIVATE;
}
global `yc.k` `@@wc.c.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@wc.c.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Comparator` `@@wc.c.j` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lwc/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4c9a10.  v0:= new `wc.c$a`;
  #L4c9a14.  call `<init>`(v0) @signature `Lwc/c$a;.<init>:()V` @kind direct;
  #L4c9a1a.  `@@wc.c.h` @type ^`yc.k` := v0 @kind object;
  #L4c9a1e.  v0:= new `java.util.HashMap`;
  #L4c9a22.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4c9a28.  `@@wc.c.i` @type ^`java.util.Map` := v0 @kind object;
  #L4c9a2c.  v1:= 71I;
  #L4c9a30.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9a36.  v1:= temp @kind object;
  #L4c9a38.  v2:= `@@yc.a.T` @type ^`yc.a` @kind object;
  #L4c9a3c.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9a42.  v1:= 121I;
  #L4c9a46.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9a4c.  v1:= temp @kind object;
  #L4c9a4e.  v2:= `@@yc.a.R` @type ^`yc.a` @kind object;
  #L4c9a52.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9a58.  v1:= 117I;
  #L4c9a5c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9a62.  v1:= temp @kind object;
  #L4c9a64.  v2:= `@@yc.a.S` @type ^`yc.a` @kind object;
  #L4c9a68.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9a6e.  v1:= 81I;
  #L4c9a72.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9a78.  v1:= temp @kind object;
  #L4c9a7a.  v2:= `@@yc.c.a` @type ^`yc.i` @kind object;
  #L4c9a7e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9a84.  v1:= 113I;
  #L4c9a88.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9a8e.  v1:= temp @kind object;
  #L4c9a90.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9a96.  v1:= 77I;
  #L4c9a9a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9aa0.  v1:= temp @kind object;
  #L4c9aa2.  v2:= `@@yc.a.P` @type ^`yc.a` @kind object;
  #L4c9aa6.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9aac.  v1:= 76I;
  #L4c9ab0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9ab6.  v1:= temp @kind object;
  #L4c9ab8.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9abe.  v1:= 68I;
  #L4c9ac2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9ac8.  v1:= temp @kind object;
  #L4c9aca.  v2:= `@@yc.a.L` @type ^`yc.a` @kind object;
  #L4c9ace.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9ad4.  v1:= 100I;
  #L4c9ad8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9ade.  v1:= temp @kind object;
  #L4c9ae0.  v2:= `@@yc.a.K` @type ^`yc.a` @kind object;
  #L4c9ae4.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9aea.  v1:= 70I;
  #L4c9aee.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9af4.  v1:= temp @kind object;
  #L4c9af6.  v2:= `@@yc.a.I` @type ^`yc.a` @kind object;
  #L4c9afa.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9b00.  v1:= 69I;
  #L4c9b04.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9b0a.  v1:= temp @kind object;
  #L4c9b0c.  v2:= `@@yc.a.H` @type ^`yc.a` @kind object;
  #L4c9b10.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9b16.  v1:= 99I;
  #L4c9b1a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9b20.  v1:= temp @kind object;
  #L4c9b22.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9b28.  v1:= 101I;
  #L4c9b2c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9b32.  v1:= temp @kind object;
  #L4c9b34.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9b3a.  v1:= 97I;
  #L4c9b3e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9b44.  v1:= temp @kind object;
  #L4c9b46.  v2:= `@@yc.a.G` @type ^`yc.a` @kind object;
  #L4c9b4a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9b50.  v1:= 72I;
  #L4c9b54.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9b5a.  v1:= temp @kind object;
  #L4c9b5c.  v2:= `@@yc.a.E` @type ^`yc.a` @kind object;
  #L4c9b60.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9b66.  v1:= 107I;
  #L4c9b6a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9b70.  v1:= temp @kind object;
  #L4c9b72.  v2:= `@@yc.a.F` @type ^`yc.a` @kind object;
  #L4c9b76.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9b7c.  v1:= 75I;
  #L4c9b80.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9b86.  v1:= temp @kind object;
  #L4c9b88.  v2:= `@@yc.a.C` @type ^`yc.a` @kind object;
  #L4c9b8c.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9b92.  v1:= 104I;
  #L4c9b96.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9b9c.  v1:= temp @kind object;
  #L4c9b9e.  v2:= `@@yc.a.D` @type ^`yc.a` @kind object;
  #L4c9ba2.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9ba8.  v1:= 109I;
  #L4c9bac.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9bb2.  v1:= temp @kind object;
  #L4c9bb4.  v2:= `@@yc.a.A` @type ^`yc.a` @kind object;
  #L4c9bb8.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9bbe.  v1:= 115I;
  #L4c9bc2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9bc8.  v1:= temp @kind object;
  #L4c9bca.  v2:= `@@yc.a.y` @type ^`yc.a` @kind object;
  #L4c9bce.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9bd4.  v1:= 83I;
  #L4c9bd8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9bde.  v1:= temp @kind object;
  #L4c9be0.  v2:= `@@yc.a.s` @type ^`yc.a` @kind object;
  #L4c9be4.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9bea.  v1:= 65I;
  #L4c9bee.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9bf4.  v1:= temp @kind object;
  #L4c9bf6.  v3:= `@@yc.a.x` @type ^`yc.a` @kind object;
  #L4c9bfa.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9c00.  v1:= 110I;
  #L4c9c04.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9c0a.  v1:= temp @kind object;
  #L4c9c0c.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9c12.  v1:= 78I;
  #L4c9c16.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L4c9c1c.  v1:= temp @kind object;
  #L4c9c1e.  v2:= `@@yc.a.t` @type ^`yc.a` @kind object;
  #L4c9c22.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9c28.  v0:= new `wc.c$c`;
  #L4c9c2c.  call `<init>`(v0) @signature `Lwc/c$c;.<init>:()V` @kind direct;
  #L4c9c32.  `@@wc.c.j` @type ^`java.util.Comparator` := v0 @kind object;
  #L4c9c36.  return @kind void;
}
procedure `void` `<init>`(`wc.c` v1 @kind this) @signature `Lwc/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4c9c48.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c9c4e.  v1.`wc.c.a` @type ^`wc.c` := v1 @kind object;
  #L4c9c52.  v0:= new `java.util.ArrayList`;
  #L4c9c56.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4c9c5c.  v1.`wc.c.c` @type ^`java.util.List` := v0 @kind object;
  #L4c9c60.  v0:= -1I;
  #L4c9c62.  v1.`wc.c.g` @type ^`int` := v0;
  #L4c9c66.  v0:= 0I;
  #L4c9c68.  v1.`wc.c.b` @type ^`wc.c` := v0 @kind object;
  #L4c9c6c.  v0:= 0I;
  #L4c9c6e.  v1.`wc.c.d` @type ^`boolean` := v0 @kind boolean;
  #L4c9c72.  return @kind void;
}
procedure `void` `<init>`(`wc.c` v1 @kind this, `wc.c` v2 @kind object, `boolean` v3 ) @signature `Lwc/c;.<init>:(Lwc/c;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L4c9c84.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4c9c8a.  v1.`wc.c.a` @type ^`wc.c` := v1 @kind object;
  #L4c9c8e.  v0:= new `java.util.ArrayList`;
  #L4c9c92.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4c9c98.  v1.`wc.c.c` @type ^`java.util.List` := v0 @kind object;
  #L4c9c9c.  v0:= -1I;
  #L4c9c9e.  v1.`wc.c.g` @type ^`int` := v0;
  #L4c9ca2.  v1.`wc.c.b` @type ^`wc.c` := v2 @kind object;
  #L4c9ca6.  v1.`wc.c.d` @type ^`boolean` := v3 @kind boolean;
  #L4c9caa.  return @kind void;
}
procedure `int` `d`(`wc.c` v3 @kind this, `wc.c$g` v4 @kind object) @signature `Lwc/c;.d:(Lwc/c$g;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4c999c.  v0:= "pp" @kind object;
  #L4c99a0.  call temp:= `i`(v4, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4c99a6.  v0:= v3.`wc.c.a` @type ^`wc.c` @kind object;
  #L4c99aa.  v1:= v0.`wc.c.e` @type ^`int`;
  #L4c99ae.  if v1 <= 0 then goto L4c99d4;
  #L4c99b2.  if v4 == 0 then goto L4c99c6;
  #L4c99b6.  v2:= new `wc.c$l`;
  #L4c99ba.  v0:= v0.`wc.c.f` @type ^`char` @kind char;
  #L4c99be.  call `<init>`(v2, v4, v1, v0) @signature `Lwc/c$l;.<init>:(Lwc/c$g;IC)V` @kind direct;
  #L4c99c4.  v4:= v2 @kind object;
  #L4c99c6.  v0:= v3.`wc.c.a` @type ^`wc.c` @kind object;
  #L4c99ca.  v1:= 0I;
  #L4c99cc.  v0.`wc.c.e` @type ^`int` := v1;
  #L4c99d0.  v0.`wc.c.f` @type ^`char` := v1 @kind char;
  #L4c99d4.  v0:= v3.`wc.c.a` @type ^`wc.c` @kind object;
  #L4c99d8.  v0:= v0.`wc.c.c` @type ^`java.util.List` @kind object;
  #L4c99dc.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4c99e2.  v4:= v3.`wc.c.a` @type ^`wc.c` @kind object;
  #L4c99e6.  v0:= -1I;
  #L4c99e8.  v4.`wc.c.g` @type ^`int` := v0;
  #L4c99ec.  v4:= v4.`wc.c.c` @type ^`java.util.List` @kind object;
  #L4c99f0.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4c99f6.  v4:= temp;
  #L4c99f8.  v4:= v4 + -1;
  #L4c99fc.  return v4;
}
procedure `wc.c` `j`(`wc.c` v5 @kind this, `wc.c$j` v6 @kind object) @signature `Lwc/c;.j:(Lwc/c$j;)Lwc/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4c9ef4.  v0:= v5.`wc.c.a` @type ^`wc.c` @kind object;
  #L4c9ef8.  v1:= v0.`wc.c.g` @type ^`int`;
  #L4c9efc.  if v1 < 0 then goto L4c9f8c;
  #L4c9f00.  v0:= v0.`wc.c.c` @type ^`java.util.List` @kind object;
  #L4c9f04.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4c9f0a.  v0:= temp @kind object;
  #L4c9f0c.  v0:= instanceof @variable v0 @type ^`wc.c$j` @kind boolean;
  #L4c9f10.  if v0 == 0 then goto L4c9f8c;
  #L4c9f14.  v0:= v5.`wc.c.a` @type ^`wc.c` @kind object;
  #L4c9f18.  v1:= v0.`wc.c.g` @type ^`int`;
  #L4c9f1c.  v0:= v0.`wc.c.c` @type ^`java.util.List` @kind object;
  #L4c9f20.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4c9f26.  v0:= temp @kind object;
  #L4c9f28.  v0:= (`wc.c$j`) v0 @kind object;
  #L4c9f2c.  v2:= v6.`wc.c$j.p` @type ^`int`;
  #L4c9f30.  v3:= v6.`wc.c$j.q` @type ^`int`;
  #L4c9f34.  if v2 != v3 then goto L4c9f64;
  #L4c9f38.  v2:= v6.`wc.c$j.r` @type ^`wc.j` @kind object;
  #L4c9f3c.  v4:= `@@wc.j.r` @type ^`wc.j` @kind object;
  #L4c9f40.  if v2 != v4 then goto L4c9f64;
  #L4c9f44.  call temp:= `g`(v0, v3) @signature `Lwc/c$j;.g:(I)Lwc/c$j;` @kind virtual;
  #L4c9f4a.  v0:= temp @kind object;
  #L4c9f4c.  call temp:= `f`(v6) @signature `Lwc/c$j;.f:()Lwc/c$j;` @kind virtual;
  #L4c9f52.  v6:= temp @kind object;
  #L4c9f54.  call temp:= `d`(v5, v6) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4c9f5a.  v6:= v5.`wc.c.a` @type ^`wc.c` @kind object;
  #L4c9f5e.  v6.`wc.c.g` @type ^`int` := v1;
  #L4c9f62.  goto L4c9f7c;
  #L4c9f64.  call temp:= `f`(v0) @signature `Lwc/c$j;.f:()Lwc/c$j;` @kind virtual;
  #L4c9f6a.  v0:= temp @kind object;
  #L4c9f6c.  v2:= v5.`wc.c.a` @type ^`wc.c` @kind object;
  #L4c9f70.  call temp:= `d`(v5, v6) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4c9f76.  v6:= temp;
  #L4c9f78.  v2.`wc.c.g` @type ^`int` := v6;
  #L4c9f7c.  v6:= v5.`wc.c.a` @type ^`wc.c` @kind object;
  #L4c9f80.  v6:= v6.`wc.c.c` @type ^`java.util.List` @kind object;
  #L4c9f84.  call temp:= `set`(v6, v1, v0) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4c9f8a.  goto L4c9f9c;
  #L4c9f8c.  v0:= v5.`wc.c.a` @type ^`wc.c` @kind object;
  #L4c9f90.  call temp:= `d`(v5, v6) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4c9f96.  v6:= temp;
  #L4c9f98.  v0.`wc.c.g` @type ^`int` := v6;
  #L4c9f9c.  return v5 @kind object;
}
procedure `wc.c` `a`(`wc.c` v1 @kind this, `wc.b` v2 @kind object) @signature `Lwc/c;.a:(Lwc/b;)Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9d60.  v0:= "formatter" @kind object;
  #L4c9d64.  call temp:= `i`(v2, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4c9d6a.  v0:= 0I;
  #L4c9d6c.  call temp:= `k`(v2, v0) @signature `Lwc/b;.k:(Z)Lwc/c$f;` @kind virtual;
  #L4c9d72.  v2:= temp @kind object;
  #L4c9d74.  call temp:= `d`(v1, v2) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4c9d7a.  return v1 @kind object;
}
procedure `wc.c` `b`(`wc.c` v1 @kind this, `yc.i` v2 @kind object, `int` v3 , `int` v4 , `boolean` v5 ) @signature `Lwc/c;.b:(Lyc/i;IIZ)Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9d8c.  v0:= new `wc.c$h`;
  #L4c9d90.  call `<init>`(v0, v2, v3, v4, v5) @signature `Lwc/c$h;.<init>:(Lyc/i;IIZ)V` @kind direct;
  #L4c9d96.  call temp:= `d`(v1, v0) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4c9d9c.  return v1 @kind object;
}
procedure `wc.c` `c`(`wc.c` v2 @kind this) @signature `Lwc/c;.c:()Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c9db0.  v0:= new `wc.c$i`;
  #L4c9db4.  v1:= -2I;
  #L4c9db6.  call `<init>`(v0, v1) @signature `Lwc/c$i;.<init>:(I)V` @kind direct;
  #L4c9dbc.  call temp:= `d`(v2, v0) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4c9dc2.  return v2 @kind object;
}
procedure `wc.c` `e`(`wc.c` v1 @kind this, `char` v2 ) @signature `Lwc/c;.e:(C)Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9dd4.  v0:= new `wc.c$e`;
  #L4c9dd8.  call `<init>`(v0, v2) @signature `Lwc/c$e;.<init>:(C)V` @kind direct;
  #L4c9dde.  call temp:= `d`(v1, v0) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4c9de4.  return v1 @kind object;
}
procedure `wc.c` `f`(`wc.c` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lwc/c;.f:(Ljava/lang/String;)Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c9df8.  v0:= "literal" @kind object;
  #L4c9dfc.  call temp:= `i`(v3, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4c9e02.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4c9e08.  v0:= temp;
  #L4c9e0a.  if v0 <= 0 then goto L4c9e42;
  #L4c9e0e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4c9e14.  v0:= temp;
  #L4c9e16.  v1:= 1I;
  #L4c9e18.  if v0 != v1 then goto L4c9e32;
  #L4c9e1c.  v0:= new `wc.c$e`;
  #L4c9e20.  v1:= 0I;
  #L4c9e22.  call temp:= `charAt`(v3, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4c9e28.  v3:= temp;
  #L4c9e2a.  call `<init>`(v0, v3) @signature `Lwc/c$e;.<init>:(C)V` @kind direct;
  #L4c9e30.  goto L4c9e3c;
  #L4c9e32.  v0:= new `wc.c$n`;
  #L4c9e36.  call `<init>`(v0, v3) @signature `Lwc/c$n;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4c9e3c.  call temp:= `d`(v2, v0) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4c9e42.  return v2 @kind object;
}
procedure `wc.c` `g`(`wc.c` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lwc/c;.g:(Ljava/lang/String;Ljava/lang/String;)Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9e54.  v0:= new `wc.c$k`;
  #L4c9e58.  call `<init>`(v0, v3, v2) @signature `Lwc/c$k;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L4c9e5e.  call temp:= `d`(v1, v0) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4c9e64.  return v1 @kind object;
}
procedure `wc.c` `h`(`wc.c` v1 @kind this) @signature `Lwc/c;.h:()Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9e78.  v0:= `@@wc.c$k.r` @type ^`wc.c$k` @kind object;
  #L4c9e7c.  call temp:= `d`(v1, v0) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4c9e82.  return v1 @kind object;
}
procedure `wc.c` `i`(`wc.c` v2 @kind this, `yc.i` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lwc/c;.i:(Lyc/i;Ljava/util/Map;)Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c9e94.  v0:= "field" @kind object;
  #L4c9e98.  call temp:= `i`(v3, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4c9e9e.  v0:= "textLookup" @kind object;
  #L4c9ea2.  call temp:= `i`(v4, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4c9ea8.  v0:= new `java.util.LinkedHashMap`;
  #L4c9eac.  call `<init>`(v0, v4) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L4c9eb2.  v4:= `@@wc.l.o` @type ^`wc.l` @kind object;
  #L4c9eb6.  call temp:= `singletonMap`(v4, v0) @signature `Ljava/util/Collections;.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L4c9ebc.  v0:= temp @kind object;
  #L4c9ebe.  v1:= new `wc.k$b`;
  #L4c9ec2.  call `<init>`(v1, v0) @signature `Lwc/k$b;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L4c9ec8.  v0:= new `wc.c$b`;
  #L4c9ecc.  call `<init>`(v0, v2, v1) @signature `Lwc/c$b;.<init>:(Lwc/c;Lwc/k$b;)V` @kind direct;
  #L4c9ed2.  v1:= new `wc.c$o`;
  #L4c9ed6.  call `<init>`(v1, v3, v4, v0) @signature `Lwc/c$o;.<init>:(Lyc/i;Lwc/l;Lwc/g;)V` @kind direct;
  #L4c9edc.  call temp:= `d`(v2, v1) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4c9ee2.  return v2 @kind object;
}
procedure `wc.c` `k`(`wc.c` v2 @kind this, `yc.i` v3 @kind object, `int` v4 ) @signature `Lwc/c;.k:(Lyc/i;I)Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4c9fb0.  v0:= "field" @kind object;
  #L4c9fb4.  call temp:= `i`(v3, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4c9fba.  v0:= 1I;
  #L4c9fbc.  if v4 < v0 then goto L4c9fde;
  #L4c9fc0.  v0:= 19I;
  #L4c9fc4.  if v4 > v0 then goto L4c9fde;
  #L4c9fc8.  v0:= new `wc.c$j`;
  #L4c9fcc.  v1:= `@@wc.j.r` @type ^`wc.j` @kind object;
  #L4c9fd0.  call `<init>`(v0, v3, v4, v4, v1) @signature `Lwc/c$j;.<init>:(Lyc/i;IILwc/j;)V` @kind direct;
  #L4c9fd6.  call temp:= `j`(v2, v0) @signature `Lwc/c;.j:(Lwc/c$j;)Lwc/c;` @kind direct;
  #L4c9fdc.  return v2 @kind object;
  #L4c9fde.  v3:= new `java.lang.IllegalArgumentException`;
  #L4c9fe2.  v0:= new `java.lang.StringBuilder`;
  #L4c9fe6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4c9fec.  v1:= "The width must be from 1 to 19 inclusive but was " @kind object;
  #L4c9ff0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c9ff6.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4c9ffc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ca002.  v4:= temp @kind object;
  #L4ca004.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ca00a.  throw v3;
}
procedure `wc.c` `l`(`wc.c` v2 @kind this, `yc.i` v3 @kind object, `int` v4 , `int` v5 , `wc.j` v6 @kind object) @signature `Lwc/c;.l:(Lyc/i;IILwc/j;)Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ca01c.  if v4 != v5 then goto L4ca032;
  #L4ca020.  v0:= `@@wc.j.r` @type ^`wc.j` @kind object;
  #L4ca024.  if v6 != v0 then goto L4ca032;
  #L4ca028.  call temp:= `k`(v2, v3, v5) @signature `Lwc/c;.k:(Lyc/i;I)Lwc/c;` @kind virtual;
  #L4ca02e.  v3:= temp @kind object;
  #L4ca030.  return v3 @kind object;
  #L4ca032.  v0:= "field" @kind object;
  #L4ca036.  call temp:= `i`(v3, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ca03c.  v0:= "signStyle" @kind object;
  #L4ca040.  call temp:= `i`(v6, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4ca046.  v0:= 1I;
  #L4ca048.  if v4 < v0 then goto L4ca0de;
  #L4ca04c.  v1:= 19I;
  #L4ca050.  if v4 > v1 then goto L4ca0de;
  #L4ca054.  if v5 < v0 then goto L4ca0b0;
  #L4ca058.  if v5 > v1 then goto L4ca0b0;
  #L4ca05c.  if v5 < v4 then goto L4ca072;
  #L4ca060.  v0:= new `wc.c$j`;
  #L4ca064.  call `<init>`(v0, v3, v4, v5, v6) @signature `Lwc/c$j;.<init>:(Lyc/i;IILwc/j;)V` @kind direct;
  #L4ca06a.  call temp:= `j`(v2, v0) @signature `Lwc/c;.j:(Lwc/c$j;)Lwc/c;` @kind direct;
  #L4ca070.  return v2 @kind object;
  #L4ca072.  v3:= new `java.lang.IllegalArgumentException`;
  #L4ca076.  v6:= new `java.lang.StringBuilder`;
  #L4ca07a.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ca080.  v0:= "The maximum width must exceed or equal the minimum width but " @kind object;
  #L4ca084.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ca08a.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ca090.  v5:= " < " @kind object;
  #L4ca094.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ca09a.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ca0a0.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ca0a6.  v4:= temp @kind object;
  #L4ca0a8.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ca0ae.  throw v3;
  #L4ca0b0.  v3:= new `java.lang.IllegalArgumentException`;
  #L4ca0b4.  v4:= new `java.lang.StringBuilder`;
  #L4ca0b8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ca0be.  v6:= "The maximum width must be from 1 to 19 inclusive but was " @kind object;
  #L4ca0c2.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ca0c8.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ca0ce.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ca0d4.  v4:= temp @kind object;
  #L4ca0d6.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ca0dc.  throw v3;
  #L4ca0de.  v3:= new `java.lang.IllegalArgumentException`;
  #L4ca0e2.  v5:= new `java.lang.StringBuilder`;
  #L4ca0e6.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4ca0ec.  v6:= "The minimum width must be from 1 to 19 inclusive but was " @kind object;
  #L4ca0f0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ca0f6.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4ca0fc.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4ca102.  v4:= temp @kind object;
  #L4ca104.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ca10a.  throw v3;
}
procedure `wc.c` `m`(`wc.c` v3 @kind this) @signature `Lwc/c;.m:()Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ca11c.  v0:= new `wc.c$p`;
  #L4ca120.  v1:= `@@wc.c.h` @type ^`yc.k` @kind object;
  #L4ca124.  v2:= "ZoneRegionId()" @kind object;
  #L4ca128.  call `<init>`(v0, v1, v2) @signature `Lwc/c$p;.<init>:(Lyc/k;Ljava/lang/String;)V` @kind direct;
  #L4ca12e.  call temp:= `d`(v3, v0) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4ca134.  return v3 @kind object;
}
procedure `wc.c` `n`(`wc.c` v3 @kind this) @signature `Lwc/c;.n:()Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ca148.  v0:= v3.`wc.c.a` @type ^`wc.c` @kind object;
  #L4ca14c.  v1:= v0.`wc.c.b` @type ^`wc.c` @kind object;
  #L4ca150.  if v1 == 0 then goto L4ca19c;
  #L4ca154.  v0:= v0.`wc.c.c` @type ^`java.util.List` @kind object;
  #L4ca158.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4ca15e.  v0:= temp;
  #L4ca160.  if v0 <= 0 then goto L4ca18e;
  #L4ca164.  v0:= new `wc.c$f`;
  #L4ca168.  v1:= v3.`wc.c.a` @type ^`wc.c` @kind object;
  #L4ca16c.  v2:= v1.`wc.c.c` @type ^`java.util.List` @kind object;
  #L4ca170.  v1:= v1.`wc.c.d` @type ^`boolean` @kind boolean;
  #L4ca174.  call `<init>`(v0, v2, v1) @signature `Lwc/c$f;.<init>:(Ljava/util/List;Z)V` @kind direct;
  #L4ca17a.  v1:= v3.`wc.c.a` @type ^`wc.c` @kind object;
  #L4ca17e.  v1:= v1.`wc.c.b` @type ^`wc.c` @kind object;
  #L4ca182.  v3.`wc.c.a` @type ^`wc.c` := v1 @kind object;
  #L4ca186.  call temp:= `d`(v3, v0) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4ca18c.  goto L4ca19a;
  #L4ca18e.  v0:= v3.`wc.c.a` @type ^`wc.c` @kind object;
  #L4ca192.  v0:= v0.`wc.c.b` @type ^`wc.c` @kind object;
  #L4ca196.  v3.`wc.c.a` @type ^`wc.c` := v0 @kind object;
  #L4ca19a.  return v3 @kind object;
  #L4ca19c.  v0:= new `java.lang.IllegalStateException`;
  #L4ca1a0.  v1:= "Cannot call optionalEnd() as there was no previous call to optionalStart()" @kind object;
  #L4ca1a4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4ca1aa.  throw v0;
}
procedure `wc.c` `o`(`wc.c` v3 @kind this) @signature `Lwc/c;.o:()Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ca1bc.  v0:= v3.`wc.c.a` @type ^`wc.c` @kind object;
  #L4ca1c0.  v1:= -1I;
  #L4ca1c2.  v0.`wc.c.g` @type ^`int` := v1;
  #L4ca1c6.  v1:= new `wc.c`;
  #L4ca1ca.  v2:= 1I;
  #L4ca1cc.  call `<init>`(v1, v0, v2) @signature `Lwc/c;.<init>:(Lwc/c;Z)V` @kind direct;
  #L4ca1d2.  v3.`wc.c.a` @type ^`wc.c` := v1 @kind object;
  #L4ca1d6.  return v3 @kind object;
}
procedure `wc.c` `p`(`wc.c` v1 @kind this) @signature `Lwc/c;.p:()Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ca1e8.  v0:= `@@wc.c$m.p` @type ^`wc.c$m` @kind object;
  #L4ca1ec.  call temp:= `d`(v1, v0) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4ca1f2.  return v1 @kind object;
}
procedure `wc.c` `q`(`wc.c` v1 @kind this) @signature `Lwc/c;.q:()Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ca204.  v0:= `@@wc.c$m.o` @type ^`wc.c$m` @kind object;
  #L4ca208.  call temp:= `d`(v1, v0) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4ca20e.  return v1 @kind object;
}
procedure `wc.c` `r`(`wc.c` v1 @kind this) @signature `Lwc/c;.r:()Lwc/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ca220.  v0:= `@@wc.c$m.r` @type ^`wc.c$m` @kind object;
  #L4ca224.  call temp:= `d`(v1, v0) @signature `Lwc/c;.d:(Lwc/c$g;)I` @kind direct;
  #L4ca22a.  return v1 @kind object;
}
procedure `wc.b` `s`(`wc.c` v1 @kind this) @signature `Lwc/c;.s:()Lwc/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4c9cbc.  call temp:= `getDefault`() @signature `Ljava/util/Locale;.getDefault:()Ljava/util/Locale;` @kind static;
  #L4c9cc2.  v0:= temp @kind object;
  #L4c9cc4.  call temp:= `t`(v1, v0) @signature `Lwc/c;.t:(Ljava/util/Locale;)Lwc/b;` @kind virtual;
  #L4c9cca.  v0:= temp @kind object;
  #L4c9ccc.  return v0 @kind object;
}
procedure `wc.b` `t`(`wc.c` v9 @kind this, `java.util.Locale` v10 @kind object) @signature `Lwc/c;.t:(Ljava/util/Locale;)Lwc/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4c9ce0.  v0:= "locale" @kind object;
  #L4c9ce4.  call temp:= `i`(v10, v0) @signature `Lxc/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4c9cea.  v0:= v9.`wc.c.a` @type ^`wc.c` @kind object;
  #L4c9cee.  v0:= v0.`wc.c.b` @type ^`wc.c` @kind object;
  #L4c9cf2.  if v0 == 0 then goto L4c9cfe;
  #L4c9cf6.  call temp:= `n`(v9) @signature `Lwc/c;.n:()Lwc/c;` @kind virtual;
  #L4c9cfc.  goto L4c9cea;
  #L4c9cfe.  v2:= new `wc.c$f`;
  #L4c9d02.  v0:= v9.`wc.c.c` @type ^`java.util.List` @kind object;
  #L4c9d06.  v1:= 0I;
  #L4c9d08.  call `<init>`(v2, v0, v1) @signature `Lwc/c$f;.<init>:(Ljava/util/List;Z)V` @kind direct;
  #L4c9d0e.  v0:= new `wc.b`;
  #L4c9d12.  v4:= `@@wc.h.e` @type ^`wc.h` @kind object;
  #L4c9d16.  v5:= `@@wc.i.p` @type ^`wc.i` @kind object;
  #L4c9d1a.  v6:= 0I;
  #L4c9d1c.  v7:= 0I;
  #L4c9d1e.  v8:= 0I;
  #L4c9d20.  v1:= v0 @kind object;
  #L4c9d22.  v3:= v10 @kind object;
  #L4c9d24.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lwc/b;.<init>:(Lwc/c$f;Ljava/util/Locale;Lwc/h;Lwc/i;Ljava/util/Set;Lvc/h;Luc/q;)V` @kind direct;
  #L4c9d2a.  return v0 @kind object;
}
procedure `wc.b` `u`(`wc.c` v1 @kind this, `wc.i` v2 @kind object) @signature `Lwc/c;.u:(Lwc/i;)Lwc/b;` @AccessFlag  {
    temp;
    v0;

  #L4c9d3c.  call temp:= `s`(v1) @signature `Lwc/c;.s:()Lwc/b;` @kind virtual;
  #L4c9d42.  v0:= temp @kind object;
  #L4c9d44.  call temp:= `m`(v0, v2) @signature `Lwc/b;.m:(Lwc/i;)Lwc/b;` @kind virtual;
  #L4c9d4a.  v2:= temp @kind object;
  #L4c9d4c.  return v2 @kind object;
}
