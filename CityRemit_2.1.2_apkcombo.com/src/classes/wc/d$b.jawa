record `wc.d$b` @kind class @AccessFlag FINAL extends `xc.c` @kind class {
  `vc.h` `wc.d$b.o` @AccessFlag ;
  `uc.q` `wc.d$b.p` @AccessFlag ;
  `java.util.Map` `wc.d$b.q` @AccessFlag FINAL;
  `boolean` `wc.d$b.r` @AccessFlag ;
  `uc.m` `wc.d$b.s` @AccessFlag ;
  `wc.d` `wc.d$b.t` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`wc.d$b` v0 @kind this, `wc.d` v1 @kind object) @signature `Lwc/d$b;.<init>:(Lwc/d;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4cafa4.  v0.`wc.d$b.t` @type ^`wc.d` := v1 @kind object;
  #L4cafa8.  call `<init>`(v0) @signature `Lxc/c;.<init>:()V` @kind direct;
  #L4cafae.  v1:= 0I;
  #L4cafb0.  v0.`wc.d$b.o` @type ^`vc.h` := v1 @kind object;
  #L4cafb4.  v0.`wc.d$b.p` @type ^`uc.q` := v1 @kind object;
  #L4cafb8.  v1:= new `java.util.HashMap`;
  #L4cafbc.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4cafc2.  v0.`wc.d$b.q` @type ^`java.util.Map` := v1 @kind object;
  #L4cafc6.  v1:= `@@uc.m.r` @type ^`uc.m` @kind object;
  #L4cafca.  v0.`wc.d$b.s` @type ^`uc.m` := v1 @kind object;
  #L4cafce.  return @kind void;
}
procedure `void` `<init>`(`wc.d$b` v0 @kind this, `wc.d` v1 @kind object, `wc.d$a` v2 @kind object) @signature `Lwc/d$b;.<init>:(Lwc/d;Lwc/d$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4cafe0.  call `<init>`(v0, v1) @signature `Lwc/d$b;.<init>:(Lwc/d;)V` @kind direct;
  #L4cafe6.  return @kind void;
}
procedure `long` `B`(`wc.d$b` v3 @kind this, `yc.i` v4 @kind object) @signature `Lwc/d$b;.B:(Lyc/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4caf3c.  v0:= v3.`wc.d$b.q` @type ^`java.util.Map` @kind object;
  #L4caf40.  call temp:= `containsKey`(v0, v4) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4caf46.  v0:= temp;
  #L4caf48.  if v0 == 0 then goto L4caf66;
  #L4caf4c.  v0:= v3.`wc.d$b.q` @type ^`java.util.Map` @kind object;
  #L4caf50.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4caf56.  v4:= temp @kind object;
  #L4caf58.  v4:= (`java.lang.Long`) v4 @kind object;
  #L4caf5c.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4caf62.  v0:= temp @kind wide;
  #L4caf64.  return v0 @kind wide;
  #L4caf66.  v0:= new `yc.m`;
  #L4caf6a.  v1:= new `java.lang.StringBuilder`;
  #L4caf6e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4caf74.  v2:= "Unsupported field: " @kind object;
  #L4caf78.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4caf7e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4caf84.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4caf8a.  v4:= temp @kind object;
  #L4caf8c.  call `<init>`(v0, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4caf92.  throw v0;
}
procedure `int` `F`(`wc.d$b` v3 @kind this, `yc.i` v4 @kind object) @signature `Lwc/d$b;.F:(Lyc/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4cae24.  v0:= v3.`wc.d$b.q` @type ^`java.util.Map` @kind object;
  #L4cae28.  call temp:= `containsKey`(v0, v4) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4cae2e.  v0:= temp;
  #L4cae30.  if v0 == 0 then goto L4cae56;
  #L4cae34.  v0:= v3.`wc.d$b.q` @type ^`java.util.Map` @kind object;
  #L4cae38.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4cae3e.  v4:= temp @kind object;
  #L4cae40.  v4:= (`java.lang.Long`) v4 @kind object;
  #L4cae44.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4cae4a.  v0:= temp @kind wide;
  #L4cae4c.  call temp:= `p`(v0) @signature `Lxc/d;.p:(J)I` @kind static;
  #L4cae52.  v4:= temp;
  #L4cae54.  return v4;
  #L4cae56.  v0:= new `yc.m`;
  #L4cae5a.  v1:= new `java.lang.StringBuilder`;
  #L4cae5e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4cae64.  v2:= "Unsupported field: " @kind object;
  #L4cae68.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cae6e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cae74.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4cae7a.  v4:= temp @kind object;
  #L4cae7c.  call `<init>`(v0, v4) @signature `Lyc/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4cae82.  throw v0;
}
procedure `wc.d$b` `T`(`wc.d$b` v3 @kind this) @signature `Lwc/d$b;.T:()Lwc/d$b;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4cb05c.  v0:= new `wc.d$b`;
  #L4cb060.  v1:= v3.`wc.d$b.t` @type ^`wc.d` @kind object;
  #L4cb064.  call `<init>`(v0, v1) @signature `Lwc/d$b;.<init>:(Lwc/d;)V` @kind direct;
  #L4cb06a.  v1:= v3.`wc.d$b.o` @type ^`vc.h` @kind object;
  #L4cb06e.  v0.`wc.d$b.o` @type ^`vc.h` := v1 @kind object;
  #L4cb072.  v1:= v3.`wc.d$b.p` @type ^`uc.q` @kind object;
  #L4cb076.  v0.`wc.d$b.p` @type ^`uc.q` := v1 @kind object;
  #L4cb07a.  v1:= v0.`wc.d$b.q` @type ^`java.util.Map` @kind object;
  #L4cb07e.  v2:= v3.`wc.d$b.q` @type ^`java.util.Map` @kind object;
  #L4cb082.  call `putAll`(v1, v2) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L4cb088.  v1:= v3.`wc.d$b.r` @type ^`boolean` @kind boolean;
  #L4cb08c.  v0.`wc.d$b.r` @type ^`boolean` := v1 @kind boolean;
  #L4cb090.  return v0 @kind object;
}
procedure `wc.a` `V`(`wc.d$b` v3 @kind this) @signature `Lwc/d$b;.V:()Lwc/a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4caff8.  v0:= new `wc.a`;
  #L4caffc.  call `<init>`(v0) @signature `Lwc/a;.<init>:()V` @kind direct;
  #L4cb002.  v1:= v0.`wc.a.o` @type ^`java.util.Map` @kind object;
  #L4cb006.  v2:= v3.`wc.d$b.q` @type ^`java.util.Map` @kind object;
  #L4cb00a.  call `putAll`(v1, v2) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L4cb010.  v1:= v3.`wc.d$b.t` @type ^`wc.d` @kind object;
  #L4cb014.  call temp:= `g`(v1) @signature `Lwc/d;.g:()Lvc/h;` @kind virtual;
  #L4cb01a.  v1:= temp @kind object;
  #L4cb01c.  v0.`wc.a.p` @type ^`vc.h` := v1 @kind object;
  #L4cb020.  v1:= v3.`wc.d$b.p` @type ^`uc.q` @kind object;
  #L4cb024.  if v1 == 0 then goto L4cb02a;
  #L4cb028.  goto L4cb036;
  #L4cb02a.  v1:= v3.`wc.d$b.t` @type ^`wc.d` @kind object;
  #L4cb02e.  call temp:= `a`(v1) @signature `Lwc/d;.a:(Lwc/d;)Luc/q;` @kind static;
  #L4cb034.  v1:= temp @kind object;
  #L4cb036.  v0.`wc.a.q` @type ^`uc.q` := v1 @kind object;
  #L4cb03a.  v1:= v3.`wc.d$b.r` @type ^`boolean` @kind boolean;
  #L4cb03e.  v0.`wc.a.t` @type ^`boolean` := v1 @kind boolean;
  #L4cb042.  v1:= v3.`wc.d$b.s` @type ^`uc.m` @kind object;
  #L4cb046.  v0.`wc.a.u` @type ^`uc.m` := v1 @kind object;
  #L4cb04a.  return v0 @kind object;
}
procedure `boolean` `d`(`wc.d$b` v1 @kind this, `yc.i` v2 @kind object) @signature `Lwc/d$b;.d:(Lyc/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cae04.  v0:= v1.`wc.d$b.q` @type ^`java.util.Map` @kind object;
  #L4cae08.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4cae0e.  v2:= temp;
  #L4cae10.  return v2;
}
procedure `java.lang.Object` `j`(`wc.d$b` v1 @kind this, `yc.k` v2 @kind object) @signature `Lwc/d$b;.j:(Lyc/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cae94.  call temp:= `a`() @signature `Lyc/j;.a:()Lyc/k;` @kind static;
  #L4cae9a.  v0:= temp @kind object;
  #L4cae9c.  if v2 != v0 then goto L4caea6;
  #L4caea0.  v2:= v1.`wc.d$b.o` @type ^`vc.h` @kind object;
  #L4caea4.  return v2 @kind object;
  #L4caea6.  call temp:= `g`() @signature `Lyc/j;.g:()Lyc/k;` @kind static;
  #L4caeac.  v0:= temp @kind object;
  #L4caeae.  if v2 == v0 then goto L4caeca;
  #L4caeb2.  call temp:= `f`() @signature `Lyc/j;.f:()Lyc/k;` @kind static;
  #L4caeb8.  v0:= temp @kind object;
  #L4caeba.  if v2 != v0 then goto L4caec0;
  #L4caebe.  goto L4caeca;
  #L4caec0.  call temp:= `j`(v1, v2) @signature `Lxc/c;.j:(Lyc/k;)Ljava/lang/Object;` @kind super;
  #L4caec6.  v2:= temp @kind object;
  #L4caec8.  return v2 @kind object;
  #L4caeca.  v2:= v1.`wc.d$b.p` @type ^`uc.q` @kind object;
  #L4caece.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`wc.d$b` v3 @kind this) @signature `Lwc/d$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4caee0.  v0:= new `java.lang.StringBuilder`;
  #L4caee4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4caeea.  v1:= v3.`wc.d$b.q` @type ^`java.util.Map` @kind object;
  #L4caeee.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4caef4.  v1:= temp @kind object;
  #L4caef6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4caefc.  v1:= "," @kind object;
  #L4caf00.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4caf06.  v2:= v3.`wc.d$b.o` @type ^`vc.h` @kind object;
  #L4caf0a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4caf10.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4caf16.  v1:= v3.`wc.d$b.p` @type ^`uc.q` @kind object;
  #L4caf1a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4caf20.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4caf26.  v0:= temp @kind object;
  #L4caf28.  return v0 @kind object;
}
