record `wc.j` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `wc.j` `@@wc.j.o` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `wc.j` `@@wc.j.p` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `wc.j` `@@wc.j.q` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `wc.j` `@@wc.j.r` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `wc.j` `@@wc.j.s` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `wc.j`[] `@@wc.j.t` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lwc/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4cbdac.  v0:= new `wc.j`;
  #L4cbdb0.  v1:= "NORMAL" @kind object;
  #L4cbdb4.  v2:= 0I;
  #L4cbdb6.  call `<init>`(v0, v1, v2) @signature `Lwc/j;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4cbdbc.  `@@wc.j.o` @type ^`wc.j` := v0 @kind object;
  #L4cbdc0.  v1:= new `wc.j`;
  #L4cbdc4.  v3:= "ALWAYS" @kind object;
  #L4cbdc8.  v4:= 1I;
  #L4cbdca.  call `<init>`(v1, v3, v4) @signature `Lwc/j;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4cbdd0.  `@@wc.j.p` @type ^`wc.j` := v1 @kind object;
  #L4cbdd4.  v3:= new `wc.j`;
  #L4cbdd8.  v5:= "NEVER" @kind object;
  #L4cbddc.  v6:= 2I;
  #L4cbdde.  call `<init>`(v3, v5, v6) @signature `Lwc/j;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4cbde4.  `@@wc.j.q` @type ^`wc.j` := v3 @kind object;
  #L4cbde8.  v5:= new `wc.j`;
  #L4cbdec.  v7:= "NOT_NEGATIVE" @kind object;
  #L4cbdf0.  v8:= 3I;
  #L4cbdf2.  call `<init>`(v5, v7, v8) @signature `Lwc/j;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4cbdf8.  `@@wc.j.r` @type ^`wc.j` := v5 @kind object;
  #L4cbdfc.  v7:= new `wc.j`;
  #L4cbe00.  v9:= "EXCEEDS_PAD" @kind object;
  #L4cbe04.  v10:= 4I;
  #L4cbe06.  call `<init>`(v7, v9, v10) @signature `Lwc/j;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4cbe0c.  `@@wc.j.s` @type ^`wc.j` := v7 @kind object;
  #L4cbe10.  v9:= 5I;
  #L4cbe12.  v9:= new `wc.j`[v9];
  #L4cbe16.  v9[v2]:= v0 @kind object;
  #L4cbe1a.  v9[v4]:= v1 @kind object;
  #L4cbe1e.  v9[v6]:= v3 @kind object;
  #L4cbe22.  v9[v8]:= v5 @kind object;
  #L4cbe26.  v9[v10]:= v7 @kind object;
  #L4cbe2a.  `@@wc.j.t` @type ^`wc.j`[] := v9 @kind object;
  #L4cbe2e.  return @kind void;
}
procedure `void` `<init>`(`wc.j` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lwc/j;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4cbe40.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4cbe46.  return @kind void;
}
procedure `wc.j` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lwc/j;.valueOf:(Ljava/lang/String;)Lwc/j;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4cbe58.  v0:= constclass @type ^`wc.j` @kind object;
  #L4cbe5c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L4cbe62.  v1:= temp @kind object;
  #L4cbe64.  v1:= (`wc.j`) v1 @kind object;
  #L4cbe68.  return v1 @kind object;
}
procedure `wc.j`[] `values`() @signature `Lwc/j;.values:()[Lwc/j;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4cbe7c.  v0:= `@@wc.j.t` @type ^`wc.j`[] @kind object;
  #L4cbe80.  call temp:= `clone`(v0) @signature `[Lwc/j;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4cbe86.  v0:= temp @kind object;
  #L4cbe88.  v0:= (`wc.j`[]) v0 @kind object;
  #L4cbe8c.  return v0 @kind object;
}
procedure `boolean` `c`(`wc.j` v3 @kind this, `boolean` v4 , `boolean` v5 , `boolean` v6 ) @signature `Lwc/j;.c:(ZZZ)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4cbd68.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4cbd6e.  v0:= temp;
  #L4cbd70.  v1:= 0I;
  #L4cbd72.  v2:= 1I;
  #L4cbd74.  if v0 == 0 then goto L4cbd90;
  #L4cbd78.  if v0 == v2 then goto L4cbd8e;
  #L4cbd7c.  v4:= 4I;
  #L4cbd7e.  if v0 == v4 then goto L4cbd8e;
  #L4cbd82.  if v5 != 0 then goto L4cbd8c;
  #L4cbd86.  if v6 != 0 then goto L4cbd8c;
  #L4cbd8a.  v1:= 1I;
  #L4cbd8c.  return v1;
  #L4cbd8e.  return v2;
  #L4cbd90.  if v4 == 0 then goto L4cbd98;
  #L4cbd94.  if v5 != 0 then goto L4cbd9a;
  #L4cbd98.  v1:= 1I;
  #L4cbd9a.  return v1;
}
