record `com.google.crypto.tink.shaded.protobuf.t1$e` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.t1$b` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.t1$e` v0 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2d8fd8.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$b;.<init>:()V` @kind direct;
  #L2d8fde.  return @kind void;
}
procedure `boolean` `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$e;.e:()Z` @AccessFlag STATIC {
    temp;
    v0;

  #L2d8760.  call temp:= `C`() @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.C:()Z` @kind static;
  #L2d8766.  v0:= temp;
  #L2d8768.  if v0 == 0 then goto L2d877c;
  #L2d876c.  call temp:= `D`() @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.D:()Z` @kind static;
  #L2d8772.  v0:= temp;
  #L2d8774.  if v0 == 0 then goto L2d877c;
  #L2d8778.  v0:= 1I;
  #L2d877a.  goto L2d877e;
  #L2d877c.  v0:= 0I;
  #L2d877e.  return v0;
}
procedure `int` `f`(`byte`[] v8 @kind object, `long` v9 , `int` v11 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$e;.f:([BJI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2d8a70.  call temp:= `g`(v8, v9, v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$e;.g:([BJI)I` @kind static;
  #L2d8a76.  v0:= temp;
  #L2d8a78.  v11:= v11 - v0 @kind int;
  #L2d8a7a.  v0:= (`long`) v0 @kind i2l;
  #L2d8a7c.  v9:= v9 + v0 @kind long;
  #L2d8a7e.  v0:= 0I;
  #L2d8a80.  v1:= 0I;
  #L2d8a82.  v2:= 1L;
  #L2d8a86.  if v11 <= 0 then goto L2d8aa4;
  #L2d8a8a.  v4:= v9 + v2 @kind long;
  #L2d8a8e.  call temp:= `s`(v8, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8a94.  v1:= temp;
  #L2d8a96.  if v1 < 0 then goto L2d8aa2;
  #L2d8a9a.  v11:= v11 + -1;
  #L2d8a9e.  v9:= v4 @kind wide;
  #L2d8aa0.  goto L2d8a82;
  #L2d8aa2.  v9:= v4 @kind wide;
  #L2d8aa4.  if v11 != 0 then goto L2d8aaa;
  #L2d8aa8.  return v0;
  #L2d8aaa.  v11:= v11 + -1;
  #L2d8aae.  v0:= -32I;
  #L2d8ab2.  v4:= -65I;
  #L2d8ab6.  v5:= -1I;
  #L2d8ab8.  if v1 >= v0 then goto L2d8ae4;
  #L2d8abc.  if v11 != 0 then goto L2d8ac2;
  #L2d8ac0.  return v1;
  #L2d8ac2.  v11:= v11 + -1;
  #L2d8ac6.  v0:= -62I;
  #L2d8aca.  if v1 < v0 then goto L2d8ae2;
  #L2d8ace.  v2:= v2 + v9 @kind long;
  #L2d8ad0.  call temp:= `s`(v8, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8ad6.  v9:= temp;
  #L2d8ad8.  if v9 <= v4 then goto L2d8ade;
  #L2d8adc.  goto L2d8ae2;
  #L2d8ade.  v9:= v2 @kind wide;
  #L2d8ae0.  goto L2d8a7e;
  #L2d8ae2.  return v5;
  #L2d8ae4.  v6:= -16I;
  #L2d8ae8.  if v1 >= v6 then goto L2d8b38;
  #L2d8aec.  v6:= 2I;
  #L2d8aee.  if v11 >= v6 then goto L2d8afc;
  #L2d8af2.  call temp:= `h`(v8, v1, v9, v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$e;.h:([BIJI)I` @kind static;
  #L2d8af8.  v8:= temp;
  #L2d8afa.  return v8;
  #L2d8afc.  v11:= v11 + -2;
  #L2d8b00.  v6:= v9 + v2 @kind long;
  #L2d8b04.  call temp:= `s`(v8, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8b0a.  v9:= temp;
  #L2d8b0c.  if v9 > v4 then goto L2d8b36;
  #L2d8b10.  v10:= -96I;
  #L2d8b14.  if v1 != v0 then goto L2d8b1c;
  #L2d8b18.  if v9 < v10 then goto L2d8b36;
  #L2d8b1c.  v0:= -19I;
  #L2d8b20.  if v1 != v0 then goto L2d8b28;
  #L2d8b24.  if v9 >= v10 then goto L2d8b36;
  #L2d8b28.  v2:= v2 + v6 @kind long;
  #L2d8b2a.  call temp:= `s`(v8, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8b30.  v9:= temp;
  #L2d8b32.  if v9 <= v4 then goto L2d8ade;
  #L2d8b36.  return v5;
  #L2d8b38.  v0:= 3I;
  #L2d8b3a.  if v11 >= v0 then goto L2d8b48;
  #L2d8b3e.  call temp:= `h`(v8, v1, v9, v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$e;.h:([BIJI)I` @kind static;
  #L2d8b44.  v8:= temp;
  #L2d8b46.  return v8;
  #L2d8b48.  v11:= v11 + -3;
  #L2d8b4c.  v6:= v9 + v2 @kind long;
  #L2d8b50.  call temp:= `s`(v8, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8b56.  v9:= temp;
  #L2d8b58.  if v9 > v4 then goto L2d8b8c;
  #L2d8b5c.  v10:= v1 ^< 28;
  #L2d8b60.  v9:= v9 + 112;
  #L2d8b64.  v10:= v10 + v9 @kind int;
  #L2d8b66.  v9:= v10 ^> 30;
  #L2d8b6a.  if v9 != 0 then goto L2d8b8c;
  #L2d8b6e.  v9:= v6 + v2 @kind long;
  #L2d8b72.  call temp:= `s`(v8, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8b78.  v0:= temp;
  #L2d8b7a.  if v0 > v4 then goto L2d8b8c;
  #L2d8b7e.  v2:= v2 + v9 @kind long;
  #L2d8b80.  call temp:= `s`(v8, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8b86.  v9:= temp;
  #L2d8b88.  if v9 <= v4 then goto L2d8ade;
  #L2d8b8c.  return v5;
}
procedure `int` `g`(`byte`[] v3 @kind object, `long` v4 , `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$e;.g:([BJI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2d8d48.  v0:= 0I;
  #L2d8d4a.  v1:= 16I;
  #L2d8d4e.  if v6 >= v1 then goto L2d8d54;
  #L2d8d52.  return v0;
  #L2d8d54.  if v0 >= v6 then goto L2d8d74;
  #L2d8d58.  v1:= 1L;
  #L2d8d5c.  v1:= v1 + v4 @kind long;
  #L2d8d5e.  call temp:= `s`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8d64.  v4:= temp;
  #L2d8d66.  if v4 >= 0 then goto L2d8d6c;
  #L2d8d6a.  return v0;
  #L2d8d6c.  v0:= v0 + 1;
  #L2d8d70.  v4:= v1 @kind wide;
  #L2d8d72.  goto L2d8d54;
  #L2d8d74.  return v6;
}
procedure `int` `h`(`byte`[] v2 @kind object, `int` v3 , `long` v4 , `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$e;.h:([BIJI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2d8d88.  if v6 == 0 then goto L2d8dd6;
  #L2d8d8c.  v0:= 1I;
  #L2d8d8e.  if v6 == v0 then goto L2d8dc4;
  #L2d8d92.  v0:= 2I;
  #L2d8d94.  if v6 != v0 then goto L2d8db8;
  #L2d8d98.  call temp:= `s`(v2, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8d9e.  v6:= temp;
  #L2d8da0.  v0:= 1L;
  #L2d8da4.  v4:= v4 + v0 @kind long;
  #L2d8da6.  call temp:= `s`(v2, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8dac.  v2:= temp;
  #L2d8dae.  call temp:= `b`(v3, v6, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.b:(III)I` @kind static;
  #L2d8db4.  v2:= temp;
  #L2d8db6.  return v2;
  #L2d8db8.  v2:= new `java.lang.AssertionError`;
  #L2d8dbc.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2d8dc2.  throw v2;
  #L2d8dc4.  call temp:= `s`(v2, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8dca.  v2:= temp;
  #L2d8dcc.  call temp:= `a`(v3, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.a:(II)I` @kind static;
  #L2d8dd2.  v2:= temp;
  #L2d8dd4.  return v2;
  #L2d8dd6.  call temp:= `d`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.d:(I)I` @kind static;
  #L2d8ddc.  v2:= temp;
  #L2d8dde.  return v2;
}
procedure `java.lang.String` `a`(`com.google.crypto.tink.shaded.protobuf.t1$e` v11 @kind this, `byte`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$e;.a:([BII)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2d8df0.  v0:= v13 ^| v14 @kind int;
  #L2d8df4.  v1:= length @variable v12;
  #L2d8df6.  v1:= v1 - v13 @kind int;
  #L2d8df8.  v1:= v1 - v14 @kind int;
  #L2d8dfa.  v0:= v0 ^| v1 @kind int;
  #L2d8dfc.  v1:= 0I;
  #L2d8dfe.  v2:= 1I;
  #L2d8e00.  if v0 < 0 then goto L2d8f82;
  #L2d8e04.  v0:= v13 + v14 @kind int;
  #L2d8e08.  v14:= new `char`[v14];
  #L2d8e0c.  v3:= 0I;
  #L2d8e0e.  if v13 >= v0 then goto L2d8e3c;
  #L2d8e12.  v4:= (`long`) v13 @kind i2l;
  #L2d8e14.  call temp:= `s`(v12, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8e1a.  v4:= temp;
  #L2d8e1c.  call temp:= `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$a;.b:(B)Z` @kind static;
  #L2d8e22.  v5:= temp;
  #L2d8e24.  if v5 != 0 then goto L2d8e2a;
  #L2d8e28.  goto L2d8e3c;
  #L2d8e2a.  v13:= v13 + 1;
  #L2d8e2e.  v5:= v3 + 1;
  #L2d8e32.  call `c`(v4, v14, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$a;.c:(B[CI)V` @kind static;
  #L2d8e38.  v3:= v5;
  #L2d8e3a.  goto L2d8e0e;
  #L2d8e3c.  v8:= v3;
  #L2d8e3e.  if v13 >= v0 then goto L2d8f76;
  #L2d8e42.  v3:= v13 + 1;
  #L2d8e46.  v4:= (`long`) v13 @kind i2l;
  #L2d8e48.  call temp:= `s`(v12, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8e4e.  v13:= temp;
  #L2d8e50.  call temp:= `b`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$a;.b:(B)Z` @kind static;
  #L2d8e56.  v4:= temp;
  #L2d8e58.  if v4 == 0 then goto L2d8e9a;
  #L2d8e5c.  v4:= v8 + 1;
  #L2d8e60.  call `c`(v13, v14, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$a;.c:(B[CI)V` @kind static;
  #L2d8e66.  if v3 >= v0 then goto L2d8e94;
  #L2d8e6a.  v5:= (`long`) v3 @kind i2l;
  #L2d8e6c.  call temp:= `s`(v12, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8e72.  v13:= temp;
  #L2d8e74.  call temp:= `b`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$a;.b:(B)Z` @kind static;
  #L2d8e7a.  v5:= temp;
  #L2d8e7c.  if v5 != 0 then goto L2d8e82;
  #L2d8e80.  goto L2d8e94;
  #L2d8e82.  v3:= v3 + 1;
  #L2d8e86.  v5:= v4 + 1;
  #L2d8e8a.  call `c`(v13, v14, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$a;.c:(B[CI)V` @kind static;
  #L2d8e90.  v4:= v5;
  #L2d8e92.  goto L2d8e66;
  #L2d8e94.  v13:= v3;
  #L2d8e96.  v8:= v4;
  #L2d8e98.  goto L2d8e3e;
  #L2d8e9a.  call temp:= `d`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$a;.d:(B)Z` @kind static;
  #L2d8ea0.  v4:= temp;
  #L2d8ea2.  if v4 == 0 then goto L2d8ed2;
  #L2d8ea6.  if v3 >= v0 then goto L2d8ec8;
  #L2d8eaa.  v4:= v3 + 1;
  #L2d8eae.  v5:= (`long`) v3 @kind i2l;
  #L2d8eb0.  call temp:= `s`(v12, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8eb6.  v3:= temp;
  #L2d8eb8.  v5:= v8 + 1;
  #L2d8ebc.  call `e`(v13, v3, v14, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$a;.e:(BB[CI)V` @kind static;
  #L2d8ec2.  v13:= v4;
  #L2d8ec4.  v8:= v5;
  #L2d8ec6.  goto L2d8e3e;
  #L2d8ec8.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/c0;.c:()Lcom/google/crypto/tink/shaded/protobuf/c0;` @kind static;
  #L2d8ece.  v12:= temp @kind object;
  #L2d8ed0.  throw v12;
  #L2d8ed2.  call temp:= `f`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$a;.f:(B)Z` @kind static;
  #L2d8ed8.  v4:= temp;
  #L2d8eda.  if v4 == 0 then goto L2d8f1c;
  #L2d8ede.  v4:= v0 + -1;
  #L2d8ee2.  if v3 >= v4 then goto L2d8f12;
  #L2d8ee6.  v4:= v3 + 1;
  #L2d8eea.  v5:= (`long`) v3 @kind i2l;
  #L2d8eec.  call temp:= `s`(v12, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8ef2.  v3:= temp;
  #L2d8ef4.  v5:= v4 + 1;
  #L2d8ef8.  v6:= (`long`) v4 @kind i2l;
  #L2d8efa.  call temp:= `s`(v12, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8f00.  v4:= temp;
  #L2d8f02.  v6:= v8 + 1;
  #L2d8f06.  call `g`(v13, v3, v4, v14, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$a;.g:(BBB[CI)V` @kind static;
  #L2d8f0c.  v13:= v5;
  #L2d8f0e.  v8:= v6;
  #L2d8f10.  goto L2d8e3e;
  #L2d8f12.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/c0;.c:()Lcom/google/crypto/tink/shaded/protobuf/c0;` @kind static;
  #L2d8f18.  v12:= temp @kind object;
  #L2d8f1a.  throw v12;
  #L2d8f1c.  v4:= v0 + -2;
  #L2d8f20.  if v3 >= v4 then goto L2d8f6c;
  #L2d8f24.  v4:= v3 + 1;
  #L2d8f28.  v5:= (`long`) v3 @kind i2l;
  #L2d8f2a.  call temp:= `s`(v12, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8f30.  v5:= temp;
  #L2d8f32.  v3:= v4 + 1;
  #L2d8f36.  v6:= (`long`) v4 @kind i2l;
  #L2d8f38.  call temp:= `s`(v12, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8f3e.  v6:= temp;
  #L2d8f40.  v9:= v3 + 1;
  #L2d8f44.  v3:= (`long`) v3 @kind i2l;
  #L2d8f46.  call temp:= `s`(v12, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8f4c.  v7:= temp;
  #L2d8f4e.  v10:= v8 + 1;
  #L2d8f52.  v3:= v13;
  #L2d8f54.  v4:= v5;
  #L2d8f56.  v5:= v6;
  #L2d8f58.  v6:= v7;
  #L2d8f5a.  v7:= v14 @kind object;
  #L2d8f5c.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$a;.a:(BBBB[CI)V` @kind static;
  #L2d8f62.  v10:= v10 + v2 @kind int;
  #L2d8f64.  v13:= v9;
  #L2d8f66.  v8:= v10;
  #L2d8f68.  goto L2d8e3e;
  #L2d8f6c.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/c0;.c:()Lcom/google/crypto/tink/shaded/protobuf/c0;` @kind static;
  #L2d8f72.  v12:= temp @kind object;
  #L2d8f74.  throw v12;
  #L2d8f76.  v12:= new `java.lang.String`;
  #L2d8f7a.  call `<init>`(v12, v14, v1, v8) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L2d8f80.  return v12 @kind object;
  #L2d8f82.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L2d8f86.  v3:= 3I;
  #L2d8f88.  v3:= new `java.lang.Object`[v3];
  #L2d8f8c.  v12:= length @variable v12;
  #L2d8f8e.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d8f94.  v12:= temp @kind object;
  #L2d8f96.  v3[v1]:= v12 @kind object;
  #L2d8f9a.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d8fa0.  v12:= temp @kind object;
  #L2d8fa2.  v3[v2]:= v12 @kind object;
  #L2d8fa6.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d8fac.  v12:= temp @kind object;
  #L2d8fae.  v13:= 2I;
  #L2d8fb0.  v3[v13]:= v12 @kind object;
  #L2d8fb4.  v12:= "buffer length=%d, index=%d, size=%d" @kind object;
  #L2d8fb8.  call temp:= `format`(v12, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d8fbe.  v12:= temp @kind object;
  #L2d8fc0.  call `<init>`(v0, v12) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d8fc6.  throw v0;
}
procedure `int` `b`(`com.google.crypto.tink.shaded.protobuf.t1$e` v22 @kind this, `java.lang.CharSequence` v23 @kind object, `byte`[] v24 @kind object, `int` v25 , `int` v26 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$e;.b:(Ljava/lang/CharSequence;[BII)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L2d8790.  v0:= v23 @kind object;
  #L2d8794.  v1:= v24 @kind object;
  #L2d8798.  v2:= v25;
  #L2d879c.  v3:= v26;
  #L2d87a0.  v4:= (`long`) v2 @kind i2l;
  #L2d87a2.  v6:= (`long`) v3 @kind i2l;
  #L2d87a4.  v6:= v6 + v4 @kind long;
  #L2d87a6.  call temp:= `length`(v23) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2d87ac.  v8:= temp;
  #L2d87ae.  v9:= " at index " @kind object;
  #L2d87b2.  v10:= "Failed writing " @kind object;
  #L2d87b6.  if v8 > v3 then goto L2d8a18;
  #L2d87ba.  v11:= length @variable v1;
  #L2d87bc.  v11:= v11 - v3 @kind int;
  #L2d87be.  if v11 < v2 then goto L2d8a18;
  #L2d87c2.  v2:= 0I;
  #L2d87c4.  v3:= 128I;
  #L2d87c8.  v11:= 1L;
  #L2d87cc.  if v2 >= v8 then goto L2d87ee;
  #L2d87d0.  call temp:= `charAt`(v0, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2d87d6.  v13:= temp;
  #L2d87d8.  if v13 >= v3 then goto L2d87ee;
  #L2d87dc.  v11:= v11 + v4 @kind long;
  #L2d87de.  v3:= (`byte`) v13 @kind i2b;
  #L2d87e0.  call `H`(v1, v4, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.H:([BJB)V` @kind static;
  #L2d87e6.  v2:= v2 + 1;
  #L2d87ea.  v4:= v11 @kind wide;
  #L2d87ec.  goto L2d87c4;
  #L2d87ee.  if v2 != v8 then goto L2d87f6;
  #L2d87f2.  v0:= (`int`) v4 @kind l2i;
  #L2d87f4.  return v0;
  #L2d87f6.  if v2 >= v8 then goto L2d8a14;
  #L2d87fa.  call temp:= `charAt`(v0, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2d8800.  v13:= temp;
  #L2d8802.  if v13 >= v3 then goto L2d8826;
  #L2d8806.  v14:= lcmp(v4, v6);
  #L2d880a.  if v14 >= 0 then goto L2d8826;
  #L2d880e.  v14:= v4 + v11 @kind long;
  #L2d8812.  v13:= (`byte`) v13 @kind i2b;
  #L2d8814.  call `H`(v1, v4, v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.H:([BJB)V` @kind static;
  #L2d881a.  v4:= v11 @kind wide;
  #L2d881c.  v12:= v14 @kind wide;
  #L2d881e.  v11:= 128I;
  #L2d8822.  goto L2d8986;
  #L2d8826.  v14:= 2048I;
  #L2d882a.  if v13 >= v14 then goto L2d887a;
  #L2d882e.  v14:= 2L;
  #L2d8832.  v14:= v6 - v14 @kind long;
  #L2d8836.  v16:= lcmp(v4, v14);
  #L2d883a.  if v16 > 0 then goto L2d887a;
  #L2d883e.  v14:= v4 + v11 @kind long;
  #L2d8842.  v3:= v13 ^>> 6;
  #L2d8846.  v3:= v3 ^| 960;
  #L2d884a.  v3:= (`byte`) v3 @kind i2b;
  #L2d884c.  call `H`(v1, v4, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.H:([BJB)V` @kind static;
  #L2d8852.  v3:= v14 + v11 @kind long;
  #L2d8856.  v5:= v13 ^& 63;
  #L2d885a.  v13:= 128I;
  #L2d885e.  v5:= v5 ^| v13 @kind int;
  #L2d8860.  v5:= (`byte`) v5 @kind i2b;
  #L2d8862.  call `H`(v1, v14, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.H:([BJB)V` @kind static;
  #L2d8868.  v20:= v11 @kind wide;
  #L2d886c.  v11:= 128I;
  #L2d8870.  v12:= v3 @kind wide;
  #L2d8872.  v4:= v20 @kind wide;
  #L2d8876.  goto L2d8986;
  #L2d887a.  v3:= 57343I;
  #L2d8880.  v14:= 55296I;
  #L2d8886.  if v13 < v14 then goto L2d888e;
  #L2d888a.  if v3 >= v13 then goto L2d88ec;
  #L2d888e.  v15:= 3L;
  #L2d8892.  v15:= v6 - v15 @kind long;
  #L2d8896.  v17:= lcmp(v4, v15);
  #L2d889a.  if v17 > 0 then goto L2d88ec;
  #L2d889e.  v14:= v4 + v11 @kind long;
  #L2d88a2.  v3:= v13 ^>> 12;
  #L2d88a6.  v3:= v3 ^| 480;
  #L2d88aa.  v3:= (`byte`) v3 @kind i2b;
  #L2d88ac.  call `H`(v1, v4, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.H:([BJB)V` @kind static;
  #L2d88b2.  v3:= v14 + v11 @kind long;
  #L2d88b6.  v5:= v13 ^>> 6;
  #L2d88ba.  v5:= v5 ^& 63;
  #L2d88be.  v11:= 128I;
  #L2d88c2.  v5:= v5 ^| v11 @kind int;
  #L2d88c4.  v5:= (`byte`) v5 @kind i2b;
  #L2d88c6.  call `H`(v1, v14, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.H:([BJB)V` @kind static;
  #L2d88cc.  v14:= 1L;
  #L2d88d0.  v18:= v3 + v14 @kind long;
  #L2d88d4.  v5:= v13 ^& 63;
  #L2d88d8.  v5:= v5 ^| v11 @kind int;
  #L2d88da.  v5:= (`byte`) v5 @kind i2b;
  #L2d88dc.  call `H`(v1, v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.H:([BJB)V` @kind static;
  #L2d88e2.  v12:= v18 @kind wide;
  #L2d88e6.  v4:= 1L;
  #L2d88ea.  goto L2d881e;
  #L2d88ec.  v11:= 4L;
  #L2d88f0.  v11:= v6 - v11 @kind long;
  #L2d88f4.  v15:= lcmp(v4, v11);
  #L2d88f8.  if v15 > 0 then goto L2d89ae;
  #L2d88fc.  v3:= v2 + 1;
  #L2d8900.  if v3 == v8 then goto L2d899e;
  #L2d8904.  call temp:= `charAt`(v0, v3) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2d890a.  v2:= temp;
  #L2d890c.  call temp:= `isSurrogatePair`(v13, v2) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L2d8912.  v11:= temp;
  #L2d8914.  if v11 == 0 then goto L2d899c;
  #L2d8918.  call temp:= `toCodePoint`(v13, v2) @signature `Ljava/lang/Character;.toCodePoint:(CC)I` @kind static;
  #L2d891e.  v2:= temp;
  #L2d8920.  v11:= 1L;
  #L2d8924.  v13:= v4 + v11 @kind long;
  #L2d8928.  v15:= v2 ^>> 18;
  #L2d892c.  v15:= v15 ^| 240;
  #L2d8930.  v15:= (`byte`) v15 @kind i2b;
  #L2d8932.  call `H`(v1, v4, v15) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.H:([BJB)V` @kind static;
  #L2d8938.  v4:= v13 + v11 @kind long;
  #L2d893c.  v15:= v2 ^>> 12;
  #L2d8940.  v15:= v15 ^& 63;
  #L2d8944.  v11:= 128I;
  #L2d8948.  v12:= v15 ^| 128;
  #L2d894c.  v12:= (`byte`) v12 @kind i2b;
  #L2d894e.  call `H`(v1, v13, v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.H:([BJB)V` @kind static;
  #L2d8954.  v12:= 1L;
  #L2d8958.  v14:= v4 + v12 @kind long;
  #L2d895c.  v16:= v2 ^>> 6;
  #L2d8960.  v12:= v16 ^& 63;
  #L2d8964.  v12:= v12 ^| v11 @kind int;
  #L2d8966.  v12:= (`byte`) v12 @kind i2b;
  #L2d8968.  call `H`(v1, v4, v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.H:([BJB)V` @kind static;
  #L2d896e.  v4:= 1L;
  #L2d8972.  v12:= v14 + v4 @kind long;
  #L2d8976.  v2:= v2 ^& 63;
  #L2d897a.  v2:= v2 ^| v11 @kind int;
  #L2d897c.  v2:= (`byte`) v2 @kind i2b;
  #L2d897e.  call `H`(v1, v14, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.H:([BJB)V` @kind static;
  #L2d8984.  v2:= v3;
  #L2d8986.  v2:= v2 + 1;
  #L2d898a.  v3:= 128I;
  #L2d898e.  v20:= v4 @kind wide;
  #L2d8992.  v4:= v12 @kind wide;
  #L2d8994.  v11:= v20 @kind wide;
  #L2d8998.  goto L2d87f6;
  #L2d899c.  v2:= v3;
  #L2d899e.  v0:= new `com.google.crypto.tink.shaded.protobuf.t1$d`;
  #L2d89a2.  v2:= v2 + -1;
  #L2d89a6.  call `<init>`(v0, v2, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$d;.<init>:(II)V` @kind direct;
  #L2d89ac.  throw v0;
  #L2d89ae.  if v14 > v13 then goto L2d89de;
  #L2d89b2.  if v13 > v3 then goto L2d89de;
  #L2d89b6.  v1:= v2 + 1;
  #L2d89ba.  if v1 == v8 then goto L2d89d2;
  #L2d89be.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2d89c4.  v0:= temp;
  #L2d89c6.  call temp:= `isSurrogatePair`(v13, v0) @signature `Ljava/lang/Character;.isSurrogatePair:(CC)Z` @kind static;
  #L2d89cc.  v0:= temp;
  #L2d89ce.  if v0 != 0 then goto L2d89de;
  #L2d89d2.  v0:= new `com.google.crypto.tink.shaded.protobuf.t1$d`;
  #L2d89d6.  call `<init>`(v0, v2, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$d;.<init>:(II)V` @kind direct;
  #L2d89dc.  throw v0;
  #L2d89de.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L2d89e2.  v1:= new `java.lang.StringBuilder`;
  #L2d89e6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d89ec.  call temp:= `append`(v1, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d89f2.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d89f8.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d89fe.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d8a04.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d8a0a.  v1:= temp @kind object;
  #L2d8a0c.  call `<init>`(v0, v1) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d8a12.  throw v0;
  #L2d8a14.  v0:= (`int`) v4 @kind l2i;
  #L2d8a16.  return v0;
  #L2d8a18.  v1:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L2d8a1c.  v4:= new `java.lang.StringBuilder`;
  #L2d8a20.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d8a26.  call temp:= `append`(v4, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d8a2c.  v8:= v8 + -1;
  #L2d8a30.  call temp:= `charAt`(v0, v8) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2d8a36.  v0:= temp;
  #L2d8a38.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d8a3e.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d8a44.  v0:= v2 + v3 @kind int;
  #L2d8a48.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d8a4e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d8a54.  v0:= temp @kind object;
  #L2d8a56.  call `<init>`(v1, v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d8a5c.  throw v1;
}
procedure `int` `d`(`com.google.crypto.tink.shaded.protobuf.t1$e` v11 @kind this, `int` v12 , `byte`[] v13 @kind object, `int` v14 , `int` v15 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$e;.d:(I[BII)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2d8ba0.  v0:= v14 ^| v15 @kind int;
  #L2d8ba4.  v1:= length @variable v13;
  #L2d8ba6.  v1:= v1 - v15 @kind int;
  #L2d8ba8.  v0:= v0 ^| v1 @kind int;
  #L2d8baa.  v1:= 0I;
  #L2d8bac.  if v0 < 0 then goto L2d8cf0;
  #L2d8bb0.  v2:= (`long`) v14 @kind i2l;
  #L2d8bb2.  v14:= (`long`) v15 @kind i2l;
  #L2d8bb4.  if v12 == 0 then goto L2d8ce2;
  #L2d8bb8.  v0:= lcmp(v2, v14);
  #L2d8bbc.  if v0 < 0 then goto L2d8bc2;
  #L2d8bc0.  return v12;
  #L2d8bc2.  v0:= (`byte`) v12 @kind i2b;
  #L2d8bc4.  v4:= -32I;
  #L2d8bc8.  v5:= -1I;
  #L2d8bca.  v6:= -65I;
  #L2d8bce.  v7:= 1L;
  #L2d8bd2.  if v0 >= v4 then goto L2d8bf6;
  #L2d8bd6.  v12:= -62I;
  #L2d8bda.  if v0 < v12 then goto L2d8bf4;
  #L2d8bde.  v7:= v7 + v2 @kind long;
  #L2d8be0.  call temp:= `s`(v13, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8be6.  v12:= temp;
  #L2d8be8.  if v12 <= v6 then goto L2d8bee;
  #L2d8bec.  goto L2d8bf4;
  #L2d8bee.  v2:= v7 @kind wide;
  #L2d8bf0.  goto L2d8ce2;
  #L2d8bf4.  return v5;
  #L2d8bf6.  v9:= -16I;
  #L2d8bfa.  if v0 >= v9 then goto L2d8c5e;
  #L2d8bfe.  v12:= v12 ^> 8;
  #L2d8c02.  v12:= ~v12 @kind int;
  #L2d8c04.  v12:= (`byte`) v12 @kind i2b;
  #L2d8c06.  if v12 != 0 then goto L2d8c2a;
  #L2d8c0a.  v9:= v2 + v7 @kind long;
  #L2d8c0e.  call temp:= `s`(v13, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8c14.  v12:= temp;
  #L2d8c16.  v1:= lcmp(v9, v14);
  #L2d8c1a.  if v1 < 0 then goto L2d8c28;
  #L2d8c1e.  call temp:= `a`(v0, v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.a:(II)I` @kind static;
  #L2d8c24.  v12:= temp;
  #L2d8c26.  return v12;
  #L2d8c28.  v2:= v9 @kind wide;
  #L2d8c2a.  if v12 > v6 then goto L2d8c5c;
  #L2d8c2e.  v1:= -96I;
  #L2d8c32.  if v0 != v4 then goto L2d8c3a;
  #L2d8c36.  if v12 < v1 then goto L2d8c5c;
  #L2d8c3a.  v4:= -19I;
  #L2d8c3e.  if v0 != v4 then goto L2d8c46;
  #L2d8c42.  if v12 >= v1 then goto L2d8c5c;
  #L2d8c46.  v0:= v2 + v7 @kind long;
  #L2d8c4a.  call temp:= `s`(v13, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8c50.  v12:= temp;
  #L2d8c52.  if v12 <= v6 then goto L2d8c58;
  #L2d8c56.  goto L2d8c5c;
  #L2d8c58.  v2:= v0 @kind wide;
  #L2d8c5a.  goto L2d8ce2;
  #L2d8c5c.  return v5;
  #L2d8c5e.  v4:= v12 ^> 8;
  #L2d8c62.  v4:= ~v4 @kind int;
  #L2d8c64.  v4:= (`byte`) v4 @kind i2b;
  #L2d8c66.  if v4 != 0 then goto L2d8c8c;
  #L2d8c6a.  v9:= v2 + v7 @kind long;
  #L2d8c6e.  call temp:= `s`(v13, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8c74.  v4:= temp;
  #L2d8c76.  v12:= lcmp(v9, v14);
  #L2d8c7a.  if v12 < 0 then goto L2d8c88;
  #L2d8c7e.  call temp:= `a`(v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.a:(II)I` @kind static;
  #L2d8c84.  v12:= temp;
  #L2d8c86.  return v12;
  #L2d8c88.  v2:= v9 @kind wide;
  #L2d8c8a.  goto L2d8c92;
  #L2d8c8c.  v12:= v12 ^> 16;
  #L2d8c90.  v1:= (`byte`) v12 @kind i2b;
  #L2d8c92.  if v1 != 0 then goto L2d8cb6;
  #L2d8c96.  v9:= v2 + v7 @kind long;
  #L2d8c9a.  call temp:= `s`(v13, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8ca0.  v1:= temp;
  #L2d8ca2.  v12:= lcmp(v9, v14);
  #L2d8ca6.  if v12 < 0 then goto L2d8cb4;
  #L2d8caa.  call temp:= `b`(v0, v4, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.b:(III)I` @kind static;
  #L2d8cb0.  v12:= temp;
  #L2d8cb2.  return v12;
  #L2d8cb4.  v2:= v9 @kind wide;
  #L2d8cb6.  if v4 > v6 then goto L2d8ce0;
  #L2d8cba.  v12:= v0 ^< 28;
  #L2d8cbe.  v4:= v4 + 112;
  #L2d8cc2.  v12:= v12 + v4 @kind int;
  #L2d8cc4.  v12:= v12 ^> 30;
  #L2d8cc8.  if v12 != 0 then goto L2d8ce0;
  #L2d8ccc.  if v1 > v6 then goto L2d8ce0;
  #L2d8cd0.  v0:= v2 + v7 @kind long;
  #L2d8cd4.  call temp:= `s`(v13, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/s1;.s:([BJ)B` @kind static;
  #L2d8cda.  v12:= temp;
  #L2d8cdc.  if v12 <= v6 then goto L2d8c58;
  #L2d8ce0.  return v5;
  #L2d8ce2.  v14:= v14 - v2 @kind long;
  #L2d8ce4.  v12:= (`int`) v14 @kind l2i;
  #L2d8ce6.  call temp:= `f`(v13, v2, v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$e;.f:([BJI)I` @kind static;
  #L2d8cec.  v12:= temp;
  #L2d8cee.  return v12;
  #L2d8cf0.  v12:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L2d8cf4.  v0:= 3I;
  #L2d8cf6.  v0:= new `java.lang.Object`[v0];
  #L2d8cfa.  v13:= length @variable v13;
  #L2d8cfc.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d8d02.  v13:= temp @kind object;
  #L2d8d04.  v0[v1]:= v13 @kind object;
  #L2d8d08.  v13:= 1I;
  #L2d8d0a.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d8d10.  v14:= temp @kind object;
  #L2d8d12.  v0[v13]:= v14 @kind object;
  #L2d8d16.  v13:= 2I;
  #L2d8d18.  call temp:= `valueOf`(v15) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d8d1e.  v14:= temp @kind object;
  #L2d8d20.  v0[v13]:= v14 @kind object;
  #L2d8d24.  v13:= "Array length=%d, index=%d, limit=%d" @kind object;
  #L2d8d28.  call temp:= `format`(v13, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d8d2e.  v13:= temp @kind object;
  #L2d8d30.  call `<init>`(v12, v13) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d8d36.  throw v12;
}
