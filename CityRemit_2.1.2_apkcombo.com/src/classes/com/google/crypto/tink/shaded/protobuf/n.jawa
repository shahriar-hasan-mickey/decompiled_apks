record `com.google.crypto.tink.shaded.protobuf.n` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.c` @kind class, `com.google.crypto.tink.shaded.protobuf.b0$b` @kind interface, `java.util.RandomAccess` @kind interface, `com.google.crypto.tink.shaded.protobuf.b1` @kind interface {
  `double`[] `com.google.crypto.tink.shaded.protobuf.n.p` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.n.q` @AccessFlag PRIVATE;
}
global `com.google.crypto.tink.shaded.protobuf.n` `@@com.google.crypto.tink.shaded.protobuf.n.r` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2c3a94.  v0:= new `com.google.crypto.tink.shaded.protobuf.n`;
  #L2c3a98.  v1:= 0I;
  #L2c3a9a.  v2:= new `double`[v1];
  #L2c3a9e.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.<init>:([DI)V` @kind direct;
  #L2c3aa4.  `@@com.google.crypto.tink.shaded.protobuf.n.r` @type ^`com.google.crypto.tink.shaded.protobuf.n` := v0 @kind object;
  #L2c3aa8.  call `o`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.o:()V` @kind virtual;
  #L2c3aae.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.n` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2c3ac0.  v0:= 10I;
  #L2c3ac4.  v0:= new `double`[v0];
  #L2c3ac8.  v1:= 0I;
  #L2c3aca.  call `<init>`(v2, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.<init>:([DI)V` @kind direct;
  #L2c3ad0.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.n` v0 @kind this, `double`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.<init>:([DI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2c3ae4.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.<init>:()V` @kind direct;
  #L2c3aea.  v0.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] := v1 @kind object;
  #L2c3aee.  v0.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int` := v2;
  #L2c3af2.  return @kind void;
}
procedure `java.lang.String` `G`(`com.google.crypto.tink.shaded.protobuf.n` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.G:(I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c3a4c.  v0:= new `java.lang.StringBuilder`;
  #L2c3a50.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c3a56.  v1:= "Index:" @kind object;
  #L2c3a5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c3a60.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c3a66.  v3:= ", Size:" @kind object;
  #L2c3a6a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c3a70.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3a74.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c3a7a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c3a80.  v3:= temp @kind object;
  #L2c3a82.  return v3 @kind object;
}
procedure `void` `n`(`com.google.crypto.tink.shaded.protobuf.n` v4 @kind this, `int` v5 , `double` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.n:(ID)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c3b98.  call `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c3b9e.  if v5 < 0 then goto L2c3c14;
  #L2c3ba2.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3ba6.  if v5 > v0 then goto L2c3c14;
  #L2c3baa.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c3bae.  v2:= length @variable v1;
  #L2c3bb0.  if v0 >= v2 then goto L2c3bc2;
  #L2c3bb4.  v2:= v5 + 1;
  #L2c3bb8.  v0:= v0 - v5 @kind int;
  #L2c3bba.  call `arraycopy`(v1, v5, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c3bc0.  goto L2c3bf2;
  #L2c3bc2.  v0:= v0 * 3;
  #L2c3bc6.  v0:= v0 / 2;
  #L2c3bca.  v0:= v0 + 1;
  #L2c3bce.  v0:= new `double`[v0];
  #L2c3bd2.  v2:= 0I;
  #L2c3bd4.  call `arraycopy`(v1, v2, v0, v2, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c3bda.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c3bde.  v2:= v5 + 1;
  #L2c3be2.  v3:= v4.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3be6.  v3:= v3 - v5 @kind int;
  #L2c3be8.  call `arraycopy`(v1, v5, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c3bee.  v4.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] := v0 @kind object;
  #L2c3bf2.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c3bf6.  v0[v5]:= v6 @kind wide;
  #L2c3bfa.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3bfe.  v5:= v5 + 1;
  #L2c3c02.  v4.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int` := v5;
  #L2c3c06.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c3c0a.  v5:= v5 + 1;
  #L2c3c0e.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L2c3c12.  return @kind void;
  #L2c3c14.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L2c3c18.  call temp:= `G`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.G:(I)Ljava/lang/String;` @kind direct;
  #L2c3c1e.  v5:= temp @kind object;
  #L2c3c20.  call `<init>`(v6, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c3c26.  throw v6;
}
procedure `void` `p`(`com.google.crypto.tink.shaded.protobuf.n` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.p:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2c3c38.  if v2 < 0 then goto L2c3c46;
  #L2c3c3c.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3c40.  if v2 >= v0 then goto L2c3c46;
  #L2c3c44.  return @kind void;
  #L2c3c46.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L2c3c4a.  call temp:= `G`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.G:(I)Ljava/lang/String;` @kind direct;
  #L2c3c50.  v2:= temp @kind object;
  #L2c3c52.  call `<init>`(v0, v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c3c58.  throw v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.b0$b` `N`(`com.google.crypto.tink.shaded.protobuf.n` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.N:(I)Lcom/google/crypto/tink/shaded/protobuf/b0$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c383c.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3840.  if v3 < v0 then goto L2c3860;
  #L2c3844.  v0:= new `com.google.crypto.tink.shaded.protobuf.n`;
  #L2c3848.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c384c.  call temp:= `copyOf`(v1, v3) @signature `Ljava/util/Arrays;.copyOf:([DI)[D` @kind static;
  #L2c3852.  v3:= temp @kind object;
  #L2c3854.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3858.  call `<init>`(v0, v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.<init>:([DI)V` @kind direct;
  #L2c385e.  return v0 @kind object;
  #L2c3860.  v3:= new `java.lang.IllegalArgumentException`;
  #L2c3864.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2c386a.  throw v3;
}
procedure `java.lang.Double` `O`(`com.google.crypto.tink.shaded.protobuf.n` v5 @kind this, `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.O:(I)Ljava/lang/Double;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c3964.  call `b`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c396a.  call `p`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.p:(I)V` @kind direct;
  #L2c3970.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c3974.  v1:= v0[v6] @kind wide;
  #L2c3978.  v3:= v5.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c397c.  v4:= v3 + -1;
  #L2c3980.  if v6 >= v4 then goto L2c3994;
  #L2c3984.  v4:= v6 + 1;
  #L2c3988.  v3:= v3 - v6 @kind int;
  #L2c398a.  v3:= v3 + -1;
  #L2c398e.  call `arraycopy`(v0, v4, v0, v6, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c3994.  v6:= v5.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3998.  v6:= v6 + -1;
  #L2c399c.  v5.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int` := v6;
  #L2c39a0.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c39a4.  v6:= v6 + 1;
  #L2c39a8.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L2c39ac.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L2c39b2.  v6:= temp @kind object;
  #L2c39b4.  return v6 @kind object;
}
procedure `java.lang.Double` `Q`(`com.google.crypto.tink.shaded.protobuf.n` v2 @kind this, `int` v3 , `java.lang.Double` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.Q:(ILjava/lang/Double;)Ljava/lang/Double;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c39c8.  call temp:= `doubleValue`(v4) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L2c39ce.  v0:= temp @kind wide;
  #L2c39d0.  call temp:= `S`(v2, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.S:(ID)D` @kind virtual;
  #L2c39d6.  v3:= temp @kind wide;
  #L2c39d8.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L2c39de.  v3:= temp @kind object;
  #L2c39e0.  return v3 @kind object;
}
procedure `double` `S`(`com.google.crypto.tink.shaded.protobuf.n` v3 @kind this, `int` v4 , `double` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.S:(ID)D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c38b8.  call `b`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c38be.  call `p`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.p:(I)V` @kind direct;
  #L2c38c4.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c38c8.  v1:= v0[v4] @kind wide;
  #L2c38cc.  v0[v4]:= v5 @kind wide;
  #L2c38d0.  return v1 @kind wide;
}
procedure `void` `add`(`com.google.crypto.tink.shaded.protobuf.n` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c3b24.  v2:= (`java.lang.Double`) v2 @kind object;
  #L2c3b28.  call `f`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.f:(ILjava/lang/Double;)V` @kind virtual;
  #L2c3b2e.  return @kind void;
}
procedure `boolean` `add`(`com.google.crypto.tink.shaded.protobuf.n` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c3690.  v1:= (`java.lang.Double`) v1 @kind object;
  #L2c3694.  call temp:= `h`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.h:(Ljava/lang/Double;)Z` @kind virtual;
  #L2c369a.  v1:= temp;
  #L2c369c.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.n` v5 @kind this, `java.util.Collection` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c36b0.  call `b`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c36b6.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/b0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2c36bc.  v0:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.n` @kind boolean;
  #L2c36c0.  if v0 != 0 then goto L2c36ce;
  #L2c36c4.  call temp:= `addAll`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L2c36ca.  v6:= temp;
  #L2c36cc.  return v6;
  #L2c36ce.  v6:= (`com.google.crypto.tink.shaded.protobuf.n`) v6 @kind object;
  #L2c36d2.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c36d6.  v1:= 0I;
  #L2c36d8.  if v0 != 0 then goto L2c36de;
  #L2c36dc.  return v1;
  #L2c36de.  v2:= 2147483647I;
  #L2c36e4.  v3:= v5.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c36e8.  v2:= v2 - v3 @kind int;
  #L2c36ea.  if v2 < v0 then goto L2c372e;
  #L2c36ee.  v3:= v3 + v0 @kind int;
  #L2c36f0.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c36f4.  v2:= length @variable v0;
  #L2c36f6.  if v3 <= v2 then goto L2c3706;
  #L2c36fa.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([DI)[D` @kind static;
  #L2c3700.  v0:= temp @kind object;
  #L2c3702.  v5.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] := v0 @kind object;
  #L2c3706.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c370a.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c370e.  v4:= v5.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3712.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3716.  call `arraycopy`(v0, v1, v2, v4, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c371c.  v5.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int` := v3;
  #L2c3720.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c3724.  v0:= 1I;
  #L2c3726.  v6:= v6 + v0 @kind int;
  #L2c3728.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L2c372c.  return v0;
  #L2c372e.  v6:= new `java.lang.OutOfMemoryError`;
  #L2c3732.  call `<init>`(v6) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L2c3738.  throw v6;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.n` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2c374c.  v0:= 1I;
  #L2c374e.  if v8 != v9 then goto L2c3754;
  #L2c3752.  return v0;
  #L2c3754.  v1:= instanceof @variable v9 @type ^`com.google.crypto.tink.shaded.protobuf.n` @kind boolean;
  #L2c3758.  if v1 != 0 then goto L2c3766;
  #L2c375c.  call temp:= `equals`(v8, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L2c3762.  v9:= temp;
  #L2c3764.  return v9;
  #L2c3766.  v9:= (`com.google.crypto.tink.shaded.protobuf.n`) v9 @kind object;
  #L2c376a.  v1:= v8.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c376e.  v2:= v9.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3772.  v3:= 0I;
  #L2c3774.  if v1 == v2 then goto L2c377a;
  #L2c3778.  return v3;
  #L2c377a.  v9:= v9.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c377e.  v1:= 0I;
  #L2c3780.  v2:= v8.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3784.  if v1 >= v2 then goto L2c37b4;
  #L2c3788.  v2:= v8.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c378c.  v4:= v2[v1] @kind wide;
  #L2c3790.  call temp:= `doubleToLongBits`(v4) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L2c3796.  v4:= temp @kind wide;
  #L2c3798.  v6:= v9[v1] @kind wide;
  #L2c379c.  call temp:= `doubleToLongBits`(v6) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L2c37a2.  v6:= temp @kind wide;
  #L2c37a4.  v2:= lcmp(v4, v6);
  #L2c37a8.  if v2 == 0 then goto L2c37ae;
  #L2c37ac.  return v3;
  #L2c37ae.  v1:= v1 + 1;
  #L2c37b2.  goto L2c3780;
  #L2c37b4.  return v0;
}
procedure `void` `f`(`com.google.crypto.tink.shaded.protobuf.n` v2 @kind this, `int` v3 , `java.lang.Double` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.f:(ILjava/lang/Double;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c3b04.  call temp:= `doubleValue`(v4) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L2c3b0a.  v0:= temp @kind wide;
  #L2c3b0c.  call `n`(v2, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.n:(ID)V` @kind direct;
  #L2c3b12.  return @kind void;
}
procedure `java.lang.Object` `get`(`com.google.crypto.tink.shaded.protobuf.n` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c39f4.  call temp:= `u`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.u:(I)Ljava/lang/Double;` @kind virtual;
  #L2c39fa.  v1:= temp @kind object;
  #L2c39fc.  return v1 @kind object;
}
procedure `boolean` `h`(`com.google.crypto.tink.shaded.protobuf.n` v2 @kind this, `java.lang.Double` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.h:(Ljava/lang/Double;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c366c.  call temp:= `doubleValue`(v3) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L2c3672.  v0:= temp @kind wide;
  #L2c3674.  call `l`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.l:(D)V` @kind virtual;
  #L2c367a.  v3:= 1I;
  #L2c367c.  return v3;
}
procedure `int` `hashCode`(`com.google.crypto.tink.shaded.protobuf.n` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c38e4.  v0:= 1I;
  #L2c38e6.  v1:= 0I;
  #L2c38e8.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c38ec.  if v1 >= v2 then goto L2c3914;
  #L2c38f0.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c38f4.  v3:= v2[v1] @kind wide;
  #L2c38f8.  call temp:= `doubleToLongBits`(v3) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L2c38fe.  v2:= temp @kind wide;
  #L2c3900.  v0:= v0 * 31;
  #L2c3904.  call temp:= `f`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/b0;.f:(J)I` @kind static;
  #L2c390a.  v2:= temp;
  #L2c390c.  v0:= v0 + v2 @kind int;
  #L2c390e.  v1:= v1 + 1;
  #L2c3912.  goto L2c38e8;
  #L2c3914.  return v0;
}
procedure `void` `l`(`com.google.crypto.tink.shaded.protobuf.n` v4 @kind this, `double` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.l:(D)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c3b40.  call `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c3b46.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3b4a.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c3b4e.  v2:= length @variable v1;
  #L2c3b50.  if v0 != v2 then goto L2c3b70;
  #L2c3b54.  v2:= v0 * 3;
  #L2c3b58.  v2:= v2 / 2;
  #L2c3b5c.  v2:= v2 + 1;
  #L2c3b60.  v2:= new `double`[v2];
  #L2c3b64.  v3:= 0I;
  #L2c3b66.  call `arraycopy`(v1, v3, v2, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c3b6c.  v4.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] := v2 @kind object;
  #L2c3b70.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c3b74.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3b78.  v2:= v1 + 1;
  #L2c3b7c.  v4.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int` := v2;
  #L2c3b80.  v0[v1]:= v5 @kind wide;
  #L2c3b84.  return @kind void;
}
procedure `java.lang.Object` `remove`(`com.google.crypto.tink.shaded.protobuf.n` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c3a10.  call temp:= `O`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.O:(I)Ljava/lang/Double;` @kind virtual;
  #L2c3a16.  v1:= temp @kind object;
  #L2c3a18.  return v1 @kind object;
}
procedure `boolean` `remove`(`com.google.crypto.tink.shaded.protobuf.n` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c37c8.  call `b`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c37ce.  v0:= 0I;
  #L2c37d0.  v1:= 0I;
  #L2c37d2.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c37d6.  if v1 >= v2 then goto L2c382a;
  #L2c37da.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c37de.  v3:= v2[v1] @kind wide;
  #L2c37e2.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L2c37e8.  v2:= temp @kind object;
  #L2c37ea.  call temp:= `equals`(v6, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2c37f0.  v2:= temp;
  #L2c37f2.  if v2 == 0 then goto L2c3824;
  #L2c37f6.  v6:= v5.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c37fa.  v0:= v1 + 1;
  #L2c37fe.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3802.  v2:= v2 - v1 @kind int;
  #L2c3804.  v3:= 1I;
  #L2c3806.  v2:= v2 - v3 @kind int;
  #L2c3808.  call `arraycopy`(v6, v0, v6, v1, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c380e.  v6:= v5.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3812.  v6:= v6 - v3 @kind int;
  #L2c3814.  v5.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int` := v6;
  #L2c3818.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c381c.  v6:= v6 + v3 @kind int;
  #L2c381e.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L2c3822.  return v3;
  #L2c3824.  v1:= v1 + 1;
  #L2c3828.  goto L2c37d2;
  #L2c382a.  return v0;
}
procedure `void` `removeRange`(`com.google.crypto.tink.shaded.protobuf.n` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.removeRange:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2c3c6c.  call `b`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c3c72.  if v4 < v3 then goto L2c3ca0;
  #L2c3c76.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c3c7a.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3c7e.  v1:= v1 - v4 @kind int;
  #L2c3c80.  call `arraycopy`(v0, v4, v0, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c3c86.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c3c8a.  v4:= v4 - v3 @kind int;
  #L2c3c8c.  v0:= v0 - v4 @kind int;
  #L2c3c8e.  v2.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int` := v0;
  #L2c3c92.  v3:= v2.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c3c96.  v3:= v3 + 1;
  #L2c3c9a.  v2.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L2c3c9e.  return @kind void;
  #L2c3ca0.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L2c3ca4.  v4:= "toIndex < fromIndex" @kind object;
  #L2c3ca8.  call `<init>`(v3, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c3cae.  throw v3;
}
procedure `java.lang.Object` `set`(`com.google.crypto.tink.shaded.protobuf.n` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c3a2c.  v2:= (`java.lang.Double`) v2 @kind object;
  #L2c3a30.  call temp:= `Q`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.Q:(ILjava/lang/Double;)Ljava/lang/Double;` @kind virtual;
  #L2c3a36.  v1:= temp @kind object;
  #L2c3a38.  return v1 @kind object;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.n` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c3928.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.n.q` @type ^`int`;
  #L2c392c.  return v0;
}
procedure `java.lang.Double` `u`(`com.google.crypto.tink.shaded.protobuf.n` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.u:(I)Ljava/lang/Double;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c3940.  call temp:= `y`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.y:(I)D` @kind virtual;
  #L2c3946.  v0:= temp @kind wide;
  #L2c3948.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L2c394e.  v3:= temp @kind object;
  #L2c3950.  return v3 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.b0$i` `v`(`com.google.crypto.tink.shaded.protobuf.n` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.v:(I)Lcom/google/crypto/tink/shaded/protobuf/b0$i;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c387c.  call temp:= `N`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.N:(I)Lcom/google/crypto/tink/shaded/protobuf/b0$b;` @kind virtual;
  #L2c3882.  v1:= temp @kind object;
  #L2c3884.  return v1 @kind object;
}
procedure `double` `y`(`com.google.crypto.tink.shaded.protobuf.n` v3 @kind this, `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.y:(I)D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c3898.  call `p`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/n;.p:(I)V` @kind direct;
  #L2c389e.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.n.p` @type ^`double`[] @kind object;
  #L2c38a2.  v1:= v0[v4] @kind wide;
  #L2c38a6.  return v1 @kind wide;
}
