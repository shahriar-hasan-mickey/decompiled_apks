record `com.google.crypto.tink.shaded.protobuf.g` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.c` @kind class, `com.google.crypto.tink.shaded.protobuf.b0$a` @kind interface, `java.util.RandomAccess` @kind interface, `com.google.crypto.tink.shaded.protobuf.b1` @kind interface {
  `boolean`[] `com.google.crypto.tink.shaded.protobuf.g.p` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.g.q` @AccessFlag PRIVATE;
}
global `com.google.crypto.tink.shaded.protobuf.g` `@@com.google.crypto.tink.shaded.protobuf.g.r` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2bd874.  v0:= new `com.google.crypto.tink.shaded.protobuf.g`;
  #L2bd878.  v1:= 0I;
  #L2bd87a.  v2:= new `boolean`[v1];
  #L2bd87e.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.<init>:([ZI)V` @kind direct;
  #L2bd884.  `@@com.google.crypto.tink.shaded.protobuf.g.r` @type ^`com.google.crypto.tink.shaded.protobuf.g` := v0 @kind object;
  #L2bd888.  call `o`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.o:()V` @kind virtual;
  #L2bd88e.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.g` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2bd8a0.  v0:= 10I;
  #L2bd8a4.  v0:= new `boolean`[v0];
  #L2bd8a8.  v1:= 0I;
  #L2bd8aa.  call `<init>`(v2, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.<init>:([ZI)V` @kind direct;
  #L2bd8b0.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.g` v0 @kind this, `boolean`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.<init>:([ZI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2bd8c4.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.<init>:()V` @kind direct;
  #L2bd8ca.  v0.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] := v1 @kind object;
  #L2bd8ce.  v0.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int` := v2;
  #L2bd8d2.  return @kind void;
}
procedure `java.lang.String` `G`(`com.google.crypto.tink.shaded.protobuf.g` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.G:(I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2bd82c.  v0:= new `java.lang.StringBuilder`;
  #L2bd830.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bd836.  v1:= "Index:" @kind object;
  #L2bd83a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd840.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd846.  v3:= ", Size:" @kind object;
  #L2bd84a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd850.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd854.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bd85a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bd860.  v3:= temp @kind object;
  #L2bd862.  return v3 @kind object;
}
procedure `void` `l`(`com.google.crypto.tink.shaded.protobuf.g` v4 @kind this, `int` v5 , `boolean` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.l:(IZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bd978.  call `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2bd97e.  if v5 < 0 then goto L2bd9f4;
  #L2bd982.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd986.  if v5 > v0 then goto L2bd9f4;
  #L2bd98a.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd98e.  v2:= length @variable v1;
  #L2bd990.  if v0 >= v2 then goto L2bd9a2;
  #L2bd994.  v2:= v5 + 1;
  #L2bd998.  v0:= v0 - v5 @kind int;
  #L2bd99a.  call `arraycopy`(v1, v5, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2bd9a0.  goto L2bd9d2;
  #L2bd9a2.  v0:= v0 * 3;
  #L2bd9a6.  v0:= v0 / 2;
  #L2bd9aa.  v0:= v0 + 1;
  #L2bd9ae.  v0:= new `boolean`[v0];
  #L2bd9b2.  v2:= 0I;
  #L2bd9b4.  call `arraycopy`(v1, v2, v0, v2, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2bd9ba.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd9be.  v2:= v5 + 1;
  #L2bd9c2.  v3:= v4.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd9c6.  v3:= v3 - v5 @kind int;
  #L2bd9c8.  call `arraycopy`(v1, v5, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2bd9ce.  v4.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] := v0 @kind object;
  #L2bd9d2.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd9d6.  v0[v5]:= v6 @kind boolean;
  #L2bd9da.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd9de.  v5:= v5 + 1;
  #L2bd9e2.  v4.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int` := v5;
  #L2bd9e6.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L2bd9ea.  v5:= v5 + 1;
  #L2bd9ee.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L2bd9f2.  return @kind void;
  #L2bd9f4.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L2bd9f8.  call temp:= `G`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.G:(I)Ljava/lang/String;` @kind direct;
  #L2bd9fe.  v5:= temp @kind object;
  #L2bda00.  call `<init>`(v6, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bda06.  throw v6;
}
procedure `void` `p`(`com.google.crypto.tink.shaded.protobuf.g` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.p:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2bda18.  if v2 < 0 then goto L2bda26;
  #L2bda1c.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bda20.  if v2 >= v0 then goto L2bda26;
  #L2bda24.  return @kind void;
  #L2bda26.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L2bda2a.  call temp:= `G`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.G:(I)Ljava/lang/String;` @kind direct;
  #L2bda30.  v2:= temp @kind object;
  #L2bda32.  call `<init>`(v0, v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bda38.  throw v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.b0$a` `N`(`com.google.crypto.tink.shaded.protobuf.g` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.N:(I)Lcom/google/crypto/tink/shaded/protobuf/b0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bd670.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd674.  if v3 < v0 then goto L2bd694;
  #L2bd678.  v0:= new `com.google.crypto.tink.shaded.protobuf.g`;
  #L2bd67c.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd680.  call temp:= `copyOf`(v1, v3) @signature `Ljava/util/Arrays;.copyOf:([ZI)[Z` @kind static;
  #L2bd686.  v3:= temp @kind object;
  #L2bd688.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd68c.  call `<init>`(v0, v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.<init>:([ZI)V` @kind direct;
  #L2bd692.  return v0 @kind object;
  #L2bd694.  v3:= new `java.lang.IllegalArgumentException`;
  #L2bd698.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2bd69e.  throw v3;
}
procedure `java.lang.Boolean` `O`(`com.google.crypto.tink.shaded.protobuf.g` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.O:(I)Ljava/lang/Boolean;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bd744.  call `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2bd74a.  call `p`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.p:(I)V` @kind direct;
  #L2bd750.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd754.  v1:= v0[v5] @kind boolean;
  #L2bd758.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd75c.  v3:= v2 + -1;
  #L2bd760.  if v5 >= v3 then goto L2bd774;
  #L2bd764.  v3:= v5 + 1;
  #L2bd768.  v2:= v2 - v5 @kind int;
  #L2bd76a.  v2:= v2 + -1;
  #L2bd76e.  call `arraycopy`(v0, v3, v0, v5, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2bd774.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd778.  v5:= v5 + -1;
  #L2bd77c.  v4.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int` := v5;
  #L2bd780.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L2bd784.  v5:= v5 + 1;
  #L2bd788.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L2bd78c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2bd792.  v5:= temp @kind object;
  #L2bd794.  return v5 @kind object;
}
procedure `java.lang.Boolean` `Q`(`com.google.crypto.tink.shaded.protobuf.g` v0 @kind this, `int` v1 , `java.lang.Boolean` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.Q:(ILjava/lang/Boolean;)Ljava/lang/Boolean;` @AccessFlag PUBLIC {
    temp;

  #L2bd7a8.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2bd7ae.  v2:= temp;
  #L2bd7b0.  call temp:= `S`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.S:(IZ)Z` @kind virtual;
  #L2bd7b6.  v1:= temp;
  #L2bd7b8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2bd7be.  v1:= temp @kind object;
  #L2bd7c0.  return v1 @kind object;
}
procedure `boolean` `S`(`com.google.crypto.tink.shaded.protobuf.g` v2 @kind this, `int` v3 , `boolean` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.S:(IZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bd644.  call `b`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2bd64a.  call `p`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.p:(I)V` @kind direct;
  #L2bd650.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd654.  v1:= v0[v3] @kind boolean;
  #L2bd658.  v0[v3]:= v4 @kind boolean;
  #L2bd65c.  return v1;
}
procedure `void` `add`(`com.google.crypto.tink.shaded.protobuf.g` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2bd904.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L2bd908.  call `f`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.f:(ILjava/lang/Boolean;)V` @kind virtual;
  #L2bd90e.  return @kind void;
}
procedure `boolean` `add`(`com.google.crypto.tink.shaded.protobuf.g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2bd48c.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L2bd490.  call temp:= `h`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.h:(Ljava/lang/Boolean;)Z` @kind virtual;
  #L2bd496.  v1:= temp;
  #L2bd498.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.g` v5 @kind this, `java.util.Collection` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2bd4ac.  call `b`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2bd4b2.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/b0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2bd4b8.  v0:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.g` @kind boolean;
  #L2bd4bc.  if v0 != 0 then goto L2bd4ca;
  #L2bd4c0.  call temp:= `addAll`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L2bd4c6.  v6:= temp;
  #L2bd4c8.  return v6;
  #L2bd4ca.  v6:= (`com.google.crypto.tink.shaded.protobuf.g`) v6 @kind object;
  #L2bd4ce.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd4d2.  v1:= 0I;
  #L2bd4d4.  if v0 != 0 then goto L2bd4da;
  #L2bd4d8.  return v1;
  #L2bd4da.  v2:= 2147483647I;
  #L2bd4e0.  v3:= v5.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd4e4.  v2:= v2 - v3 @kind int;
  #L2bd4e6.  if v2 < v0 then goto L2bd52a;
  #L2bd4ea.  v3:= v3 + v0 @kind int;
  #L2bd4ec.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd4f0.  v2:= length @variable v0;
  #L2bd4f2.  if v3 <= v2 then goto L2bd502;
  #L2bd4f6.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([ZI)[Z` @kind static;
  #L2bd4fc.  v0:= temp @kind object;
  #L2bd4fe.  v5.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] := v0 @kind object;
  #L2bd502.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd506.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd50a.  v4:= v5.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd50e.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd512.  call `arraycopy`(v0, v1, v2, v4, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2bd518.  v5.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int` := v3;
  #L2bd51c.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L2bd520.  v0:= 1I;
  #L2bd522.  v6:= v6 + v0 @kind int;
  #L2bd524.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L2bd528.  return v0;
  #L2bd52a.  v6:= new `java.lang.OutOfMemoryError`;
  #L2bd52e.  call `<init>`(v6) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L2bd534.  throw v6;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.g` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2bd548.  v0:= 1I;
  #L2bd54a.  if v5 != v6 then goto L2bd550;
  #L2bd54e.  return v0;
  #L2bd550.  v1:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.g` @kind boolean;
  #L2bd554.  if v1 != 0 then goto L2bd562;
  #L2bd558.  call temp:= `equals`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L2bd55e.  v6:= temp;
  #L2bd560.  return v6;
  #L2bd562.  v6:= (`com.google.crypto.tink.shaded.protobuf.g`) v6 @kind object;
  #L2bd566.  v1:= v5.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd56a.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd56e.  v3:= 0I;
  #L2bd570.  if v1 == v2 then goto L2bd576;
  #L2bd574.  return v3;
  #L2bd576.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd57a.  v1:= 0I;
  #L2bd57c.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd580.  if v1 >= v2 then goto L2bd59c;
  #L2bd584.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd588.  v2:= v2[v1] @kind boolean;
  #L2bd58c.  v4:= v6[v1] @kind boolean;
  #L2bd590.  if v2 == v4 then goto L2bd596;
  #L2bd594.  return v3;
  #L2bd596.  v1:= v1 + 1;
  #L2bd59a.  goto L2bd57c;
  #L2bd59c.  return v0;
}
procedure `void` `f`(`com.google.crypto.tink.shaded.protobuf.g` v0 @kind this, `int` v1 , `java.lang.Boolean` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.f:(ILjava/lang/Boolean;)V` @AccessFlag PUBLIC {
    temp;

  #L2bd8e4.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2bd8ea.  v2:= temp;
  #L2bd8ec.  call `l`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.l:(IZ)V` @kind direct;
  #L2bd8f2.  return @kind void;
}
procedure `java.lang.Object` `get`(`com.google.crypto.tink.shaded.protobuf.g` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2bd7d4.  call temp:= `u`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.u:(I)Ljava/lang/Boolean;` @kind virtual;
  #L2bd7da.  v1:= temp @kind object;
  #L2bd7dc.  return v1 @kind object;
}
procedure `boolean` `h`(`com.google.crypto.tink.shaded.protobuf.g` v0 @kind this, `java.lang.Boolean` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.h:(Ljava/lang/Boolean;)Z` @AccessFlag PUBLIC {
    temp;

  #L2bd468.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2bd46e.  v1:= temp;
  #L2bd470.  call `n`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.n:(Z)V` @kind virtual;
  #L2bd476.  v1:= 1I;
  #L2bd478.  return v1;
}
procedure `int` `hashCode`(`com.google.crypto.tink.shaded.protobuf.g` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2bd6cc.  v0:= 1I;
  #L2bd6ce.  v1:= 0I;
  #L2bd6d0.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd6d4.  if v1 >= v2 then goto L2bd6f4;
  #L2bd6d8.  v0:= v0 * 31;
  #L2bd6dc.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd6e0.  v2:= v2[v1] @kind boolean;
  #L2bd6e4.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/b0;.c:(Z)I` @kind static;
  #L2bd6ea.  v2:= temp;
  #L2bd6ec.  v0:= v0 + v2 @kind int;
  #L2bd6ee.  v1:= v1 + 1;
  #L2bd6f2.  goto L2bd6d0;
  #L2bd6f4.  return v0;
}
procedure `void` `n`(`com.google.crypto.tink.shaded.protobuf.g` v4 @kind this, `boolean` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.n:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bd920.  call `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2bd926.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd92a.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd92e.  v2:= length @variable v1;
  #L2bd930.  if v0 != v2 then goto L2bd950;
  #L2bd934.  v2:= v0 * 3;
  #L2bd938.  v2:= v2 / 2;
  #L2bd93c.  v2:= v2 + 1;
  #L2bd940.  v2:= new `boolean`[v2];
  #L2bd944.  v3:= 0I;
  #L2bd946.  call `arraycopy`(v1, v3, v2, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2bd94c.  v4.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] := v2 @kind object;
  #L2bd950.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd954.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd958.  v2:= v1 + 1;
  #L2bd95c.  v4.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int` := v2;
  #L2bd960.  v0[v1]:= v5 @kind boolean;
  #L2bd964.  return @kind void;
}
procedure `java.lang.Object` `remove`(`com.google.crypto.tink.shaded.protobuf.g` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2bd7f0.  call temp:= `O`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.O:(I)Ljava/lang/Boolean;` @kind virtual;
  #L2bd7f6.  v1:= temp @kind object;
  #L2bd7f8.  return v1 @kind object;
}
procedure `boolean` `remove`(`com.google.crypto.tink.shaded.protobuf.g` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bd5d0.  call `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2bd5d6.  v0:= 0I;
  #L2bd5d8.  v1:= 0I;
  #L2bd5da.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd5de.  if v1 >= v2 then goto L2bd632;
  #L2bd5e2.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd5e6.  v2:= v2[v1] @kind boolean;
  #L2bd5ea.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2bd5f0.  v2:= temp @kind object;
  #L2bd5f2.  call temp:= `equals`(v5, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2bd5f8.  v2:= temp;
  #L2bd5fa.  if v2 == 0 then goto L2bd62c;
  #L2bd5fe.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd602.  v0:= v1 + 1;
  #L2bd606.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd60a.  v2:= v2 - v1 @kind int;
  #L2bd60c.  v3:= 1I;
  #L2bd60e.  v2:= v2 - v3 @kind int;
  #L2bd610.  call `arraycopy`(v5, v0, v5, v1, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2bd616.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd61a.  v5:= v5 - v3 @kind int;
  #L2bd61c.  v4.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int` := v5;
  #L2bd620.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L2bd624.  v5:= v5 + v3 @kind int;
  #L2bd626.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L2bd62a.  return v3;
  #L2bd62c.  v1:= v1 + 1;
  #L2bd630.  goto L2bd5da;
  #L2bd632.  return v0;
}
procedure `void` `removeRange`(`com.google.crypto.tink.shaded.protobuf.g` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.removeRange:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2bda4c.  call `b`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2bda52.  if v4 < v3 then goto L2bda80;
  #L2bda56.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bda5a.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bda5e.  v1:= v1 - v4 @kind int;
  #L2bda60.  call `arraycopy`(v0, v4, v0, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2bda66.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bda6a.  v4:= v4 - v3 @kind int;
  #L2bda6c.  v0:= v0 - v4 @kind int;
  #L2bda6e.  v2.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int` := v0;
  #L2bda72.  v3:= v2.`java.util.AbstractList.modCount` @type ^`int`;
  #L2bda76.  v3:= v3 + 1;
  #L2bda7a.  v2.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L2bda7e.  return @kind void;
  #L2bda80.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L2bda84.  v4:= "toIndex < fromIndex" @kind object;
  #L2bda88.  call `<init>`(v3, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bda8e.  throw v3;
}
procedure `java.lang.Object` `set`(`com.google.crypto.tink.shaded.protobuf.g` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2bd80c.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L2bd810.  call temp:= `Q`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.Q:(ILjava/lang/Boolean;)Ljava/lang/Boolean;` @kind virtual;
  #L2bd816.  v1:= temp @kind object;
  #L2bd818.  return v1 @kind object;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.g` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bd708.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.g.q` @type ^`int`;
  #L2bd70c.  return v0;
}
procedure `java.lang.Boolean` `u`(`com.google.crypto.tink.shaded.protobuf.g` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.u:(I)Ljava/lang/Boolean;` @AccessFlag PUBLIC {
    temp;

  #L2bd720.  call temp:= `y`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.y:(I)Z` @kind virtual;
  #L2bd726.  v1:= temp;
  #L2bd728.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2bd72e.  v1:= temp @kind object;
  #L2bd730.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.b0$i` `v`(`com.google.crypto.tink.shaded.protobuf.g` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.v:(I)Lcom/google/crypto/tink/shaded/protobuf/b0$i;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2bd6b0.  call temp:= `N`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.N:(I)Lcom/google/crypto/tink/shaded/protobuf/b0$a;` @kind virtual;
  #L2bd6b6.  v1:= temp @kind object;
  #L2bd6b8.  return v1 @kind object;
}
procedure `boolean` `y`(`com.google.crypto.tink.shaded.protobuf.g` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.y:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bd5b0.  call `p`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/g;.p:(I)V` @kind direct;
  #L2bd5b6.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.g.p` @type ^`boolean`[] @kind object;
  #L2bd5ba.  v2:= v0[v2] @kind boolean;
  #L2bd5be.  return v2;
}
