record `com.google.crypto.tink.shaded.protobuf.i$e` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.i$j` @kind class {
  `int` `com.google.crypto.tink.shaded.protobuf.i$e.s` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.crypto.tink.shaded.protobuf.i$e.t` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.i$e` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/i$e;.<init>:([BII)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2bdd48.  call `<init>`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/i$j;.<init>:([B)V` @kind direct;
  #L2bdd4e.  v0:= v3 + v4 @kind int;
  #L2bdd52.  v2:= length @variable v2;
  #L2bdd54.  call temp:= `l`(v3, v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/i;.l:(III)I` @kind static;
  #L2bdd5a.  v1.`com.google.crypto.tink.shaded.protobuf.i$e.s` @type ^`int` := v3;
  #L2bdd5e.  v1.`com.google.crypto.tink.shaded.protobuf.i$e.t` @type ^`int` := v4;
  #L2bdd62.  return @kind void;
}
procedure `byte` `G`(`com.google.crypto.tink.shaded.protobuf.i$e` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/i$e;.G:(I)B` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2bdcf8.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.i$j.r` @type ^`byte`[] @kind object;
  #L2bdcfc.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.i$e.s` @type ^`int`;
  #L2bdd00.  v1:= v1 + v3 @kind int;
  #L2bdd02.  v3:= v0[v1] @kind byte;
  #L2bdd06.  return v3;
}
procedure `byte` `f`(`com.google.crypto.tink.shaded.protobuf.i$e` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/i$e;.f:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bdcc8.  call temp:= `size`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/i$e;.size:()I` @kind virtual;
  #L2bdcce.  v0:= temp;
  #L2bdcd0.  call `h`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/i;.h:(II)V` @kind static;
  #L2bdcd6.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.i$j.r` @type ^`byte`[] @kind object;
  #L2bdcda.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.i$e.s` @type ^`int`;
  #L2bdcde.  v1:= v1 + v3 @kind int;
  #L2bdce0.  v3:= v0[v1] @kind byte;
  #L2bdce4.  return v3;
}
procedure `int` `l0`(`com.google.crypto.tink.shaded.protobuf.i$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/i$e;.l0:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2bdd18.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.i$e.s` @type ^`int`;
  #L2bdd1c.  return v0;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.i$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/i$e;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bdd30.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.i$e.t` @type ^`int`;
  #L2bdd34.  return v0;
}
procedure `void` `y`(`com.google.crypto.tink.shaded.protobuf.i$e` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/i$e;.y:([BIII)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2bdd74.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.i$j.r` @type ^`byte`[] @kind object;
  #L2bdd78.  call temp:= `l0`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/i$e;.l0:()I` @kind virtual;
  #L2bdd7e.  v1:= temp;
  #L2bdd80.  v1:= v1 + v4 @kind int;
  #L2bdd82.  call `arraycopy`(v0, v1, v3, v5, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2bdd88.  return @kind void;
}
