record `com.google.crypto.tink.shaded.protobuf.i$a` @kind class @AccessFlag  extends `com.google.crypto.tink.shaded.protobuf.i$c` @kind class {
  `int` `com.google.crypto.tink.shaded.protobuf.i$a.o` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.i$a.p` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.shaded.protobuf.i` `com.google.crypto.tink.shaded.protobuf.i$a.q` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.i$a` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.i` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/i$a;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/i;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2bdb1c.  v1.`com.google.crypto.tink.shaded.protobuf.i$a.q` @type ^`com.google.crypto.tink.shaded.protobuf.i` := v2 @kind object;
  #L2bdb20.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/i$c;.<init>:()V` @kind direct;
  #L2bdb26.  v0:= 0I;
  #L2bdb28.  v1.`com.google.crypto.tink.shaded.protobuf.i$a.o` @type ^`int` := v0;
  #L2bdb2c.  call temp:= `size`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/i;.size:()I` @kind virtual;
  #L2bdb32.  v2:= temp;
  #L2bdb34.  v1.`com.google.crypto.tink.shaded.protobuf.i$a.p` @type ^`int` := v2;
  #L2bdb38.  return @kind void;
}
procedure `byte` `c`(`com.google.crypto.tink.shaded.protobuf.i$a` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/i$a;.c:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bdadc.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.i$a.o` @type ^`int`;
  #L2bdae0.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.i$a.p` @type ^`int`;
  #L2bdae4.  if v0 >= v1 then goto L2bdafe;
  #L2bdae8.  v1:= v0 + 1;
  #L2bdaec.  v2.`com.google.crypto.tink.shaded.protobuf.i$a.o` @type ^`int` := v1;
  #L2bdaf0.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.i$a.q` @type ^`com.google.crypto.tink.shaded.protobuf.i` @kind object;
  #L2bdaf4.  call temp:= `G`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/i;.G:(I)B` @kind virtual;
  #L2bdafa.  v0:= temp;
  #L2bdafc.  return v0;
  #L2bdafe.  v0:= new `java.util.NoSuchElementException`;
  #L2bdb02.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L2bdb08.  throw v0;
}
procedure `boolean` `hasNext`(`com.google.crypto.tink.shaded.protobuf.i$a` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/i$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bdab8.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.i$a.o` @type ^`int`;
  #L2bdabc.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.i$a.p` @type ^`int`;
  #L2bdac0.  if v0 >= v1 then goto L2bdac8;
  #L2bdac4.  v0:= 1I;
  #L2bdac6.  goto L2bdaca;
  #L2bdac8.  v0:= 0I;
  #L2bdaca.  return v0;
}
