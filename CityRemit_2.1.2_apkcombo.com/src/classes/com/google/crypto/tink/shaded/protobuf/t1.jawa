record `com.google.crypto.tink.shaded.protobuf.t1` @kind class @AccessFlag FINAL {
}
global `com.google.crypto.tink.shaded.protobuf.t1$b` `@@com.google.crypto.tink.shaded.protobuf.t1.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2d92f0.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$e;.e:()Z` @kind static;
  #L2d92f6.  v0:= temp;
  #L2d92f8.  if v0 == 0 then goto L2d9314;
  #L2d92fc.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/d;.c:()Z` @kind static;
  #L2d9302.  v0:= temp;
  #L2d9304.  if v0 != 0 then goto L2d9314;
  #L2d9308.  v0:= new `com.google.crypto.tink.shaded.protobuf.t1$e`;
  #L2d930c.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$e;.<init>:()V` @kind direct;
  #L2d9312.  goto L2d931e;
  #L2d9314.  v0:= new `com.google.crypto.tink.shaded.protobuf.t1$c`;
  #L2d9318.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$c;.<init>:()V` @kind direct;
  #L2d931e.  `@@com.google.crypto.tink.shaded.protobuf.t1.a` @type ^`com.google.crypto.tink.shaded.protobuf.t1$b` := v0 @kind object;
  #L2d9322.  return @kind void;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.a:(II)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2d9034.  call temp:= `j`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.j:(II)I` @kind static;
  #L2d903a.  v0:= temp;
  #L2d903c.  return v0;
}
procedure `int` `b`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.b:(III)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2d9050.  call temp:= `k`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.k:(III)I` @kind static;
  #L2d9056.  v0:= temp;
  #L2d9058.  return v0;
}
procedure `int` `c`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.c:([BII)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2d906c.  call temp:= `l`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.l:([BII)I` @kind static;
  #L2d9072.  v0:= temp;
  #L2d9074.  return v0;
}
procedure `int` `d`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.d:(I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2d9088.  call temp:= `i`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.i:(I)I` @kind static;
  #L2d908e.  v0:= temp;
  #L2d9090.  return v0;
}
procedure `java.lang.String` `e`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.e:([BII)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L2d92d0.  v0:= `@@com.google.crypto.tink.shaded.protobuf.t1.a` @type ^`com.google.crypto.tink.shaded.protobuf.t1$b` @kind object;
  #L2d92d4.  call temp:= `a`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$b;.a:([BII)Ljava/lang/String;` @kind virtual;
  #L2d92da.  v1:= temp @kind object;
  #L2d92dc.  return v1 @kind object;
}
procedure `int` `f`(`java.lang.CharSequence` v1 @kind object, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.f:(Ljava/lang/CharSequence;[BII)I` @AccessFlag STATIC {
    temp;
    v0;

  #L2d90a4.  v0:= `@@com.google.crypto.tink.shaded.protobuf.t1.a` @type ^`com.google.crypto.tink.shaded.protobuf.t1$b` @kind object;
  #L2d90a8.  call temp:= `b`(v0, v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$b;.b:(Ljava/lang/CharSequence;[BII)I` @kind virtual;
  #L2d90ae.  v1:= temp;
  #L2d90b0.  return v1;
}
procedure `int` `g`(`java.lang.CharSequence` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.g:(Ljava/lang/CharSequence;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2d90c4.  call temp:= `length`(v5) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2d90ca.  v0:= temp;
  #L2d90cc.  v1:= 0I;
  #L2d90ce.  if v1 >= v0 then goto L2d90e8;
  #L2d90d2.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2d90d8.  v2:= temp;
  #L2d90da.  v3:= 128I;
  #L2d90de.  if v2 >= v3 then goto L2d90e8;
  #L2d90e2.  v1:= v1 + 1;
  #L2d90e6.  goto L2d90ce;
  #L2d90e8.  v2:= v0;
  #L2d90ea.  if v1 >= v0 then goto L2d9118;
  #L2d90ee.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2d90f4.  v3:= temp;
  #L2d90f6.  v4:= 2048I;
  #L2d90fa.  if v3 >= v4 then goto L2d910e;
  #L2d90fe.  v3:= v3 - 127;
  #L2d9102.  v3:= v3 ^>> 31;
  #L2d9106.  v2:= v2 + v3 @kind int;
  #L2d9108.  v1:= v1 + 1;
  #L2d910c.  goto L2d90ea;
  #L2d910e.  call temp:= `h`(v5, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.h:(Ljava/lang/CharSequence;I)I` @kind static;
  #L2d9114.  v5:= temp;
  #L2d9116.  v2:= v2 + v5 @kind int;
  #L2d9118.  if v2 < v0 then goto L2d911e;
  #L2d911c.  return v2;
  #L2d911e.  v5:= new `java.lang.IllegalArgumentException`;
  #L2d9122.  v0:= new `java.lang.StringBuilder`;
  #L2d9126.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d912c.  v1:= "UTF-8 length does not fit in int: " @kind object;
  #L2d9130.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d9136.  v1:= (`long`) v2 @kind i2l;
  #L2d9138.  v3:= 4294967296L;
  #L2d9142.  v1:= v1 + v3 @kind long;
  #L2d9144.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d914a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d9150.  v0:= temp @kind object;
  #L2d9152.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d9158.  throw v5;
}
procedure `int` `h`(`java.lang.CharSequence` v4 @kind object, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.h:(Ljava/lang/CharSequence;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d916c.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L2d9172.  v0:= temp;
  #L2d9174.  v1:= 0I;
  #L2d9176.  if v5 >= v0 then goto L2d91d6;
  #L2d917a.  call temp:= `charAt`(v4, v5) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L2d9180.  v2:= temp;
  #L2d9182.  v3:= 2048I;
  #L2d9186.  if v2 >= v3 then goto L2d9196;
  #L2d918a.  v2:= v2 - 127;
  #L2d918e.  v2:= v2 ^>> 31;
  #L2d9192.  v1:= v1 + v2 @kind int;
  #L2d9194.  goto L2d91d0;
  #L2d9196.  v1:= v1 + 2;
  #L2d919a.  v3:= 55296I;
  #L2d91a0.  if v3 > v2 then goto L2d91d0;
  #L2d91a4.  v3:= 57343I;
  #L2d91aa.  if v2 > v3 then goto L2d91d0;
  #L2d91ae.  call temp:= `codePointAt`(v4, v5) @signature `Ljava/lang/Character;.codePointAt:(Ljava/lang/CharSequence;I)I` @kind static;
  #L2d91b4.  v2:= temp;
  #L2d91b6.  v3:= 65536I;
  #L2d91ba.  if v2 < v3 then goto L2d91c4;
  #L2d91be.  v5:= v5 + 1;
  #L2d91c2.  goto L2d91d0;
  #L2d91c4.  v4:= new `com.google.crypto.tink.shaded.protobuf.t1$d`;
  #L2d91c8.  call `<init>`(v4, v5, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$d;.<init>:(II)V` @kind direct;
  #L2d91ce.  throw v4;
  #L2d91d0.  v5:= v5 + 1;
  #L2d91d4.  goto L2d9176;
  #L2d91d6.  return v1;
}
procedure `int` `i`(`int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.i:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2d924c.  v0:= -12I;
  #L2d9250.  if v1 <= v0 then goto L2d9256;
  #L2d9254.  v1:= -1I;
  #L2d9256.  return v1;
}
procedure `int` `j`(`int` v1 , `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.j:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2d9268.  v0:= -12I;
  #L2d926c.  if v1 > v0 then goto L2d9282;
  #L2d9270.  v0:= -65I;
  #L2d9274.  if v2 <= v0 then goto L2d927a;
  #L2d9278.  goto L2d9282;
  #L2d927a.  v2:= v2 ^< 8;
  #L2d927e.  v1:= v1 ^~ v2 @kind int;
  #L2d9280.  goto L2d9284;
  #L2d9282.  v1:= -1I;
  #L2d9284.  return v1;
}
procedure `int` `k`(`int` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.k:(III)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2d9298.  v0:= -12I;
  #L2d929c.  if v1 > v0 then goto L2d92bc;
  #L2d92a0.  v0:= -65I;
  #L2d92a4.  if v2 > v0 then goto L2d92bc;
  #L2d92a8.  if v3 <= v0 then goto L2d92ae;
  #L2d92ac.  goto L2d92bc;
  #L2d92ae.  v2:= v2 ^< 8;
  #L2d92b2.  v1:= v1 ^~ v2 @kind int;
  #L2d92b4.  v2:= v3 ^< 16;
  #L2d92b8.  v1:= v1 ^~ v2 @kind int;
  #L2d92ba.  goto L2d92be;
  #L2d92bc.  v1:= -1I;
  #L2d92be.  return v1;
}
procedure `int` `l`(`byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.l:([BII)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2d91e8.  v0:= v4 + -1;
  #L2d91ec.  v0:= v3[v0] @kind byte;
  #L2d91f0.  v5:= v5 - v4 @kind int;
  #L2d91f2.  if v5 == 0 then goto L2d9230;
  #L2d91f6.  v1:= 1I;
  #L2d91f8.  if v5 == v1 then goto L2d9222;
  #L2d91fc.  v2:= 2I;
  #L2d91fe.  if v5 != v2 then goto L2d9216;
  #L2d9202.  v5:= v3[v4] @kind byte;
  #L2d9206.  v4:= v4 + v1 @kind int;
  #L2d9208.  v3:= v3[v4] @kind byte;
  #L2d920c.  call temp:= `k`(v0, v5, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.k:(III)I` @kind static;
  #L2d9212.  v3:= temp;
  #L2d9214.  return v3;
  #L2d9216.  v3:= new `java.lang.AssertionError`;
  #L2d921a.  call `<init>`(v3) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2d9220.  throw v3;
  #L2d9222.  v3:= v3[v4] @kind byte;
  #L2d9226.  call temp:= `j`(v0, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.j:(II)I` @kind static;
  #L2d922c.  v3:= temp;
  #L2d922e.  return v3;
  #L2d9230.  call temp:= `i`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.i:(I)I` @kind static;
  #L2d9236.  v3:= temp;
  #L2d9238.  return v3;
}
procedure `boolean` `m`(`byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.m:([B)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2d8ff0.  v0:= `@@com.google.crypto.tink.shaded.protobuf.t1.a` @type ^`com.google.crypto.tink.shaded.protobuf.t1$b` @kind object;
  #L2d8ff4.  v1:= length @variable v3;
  #L2d8ff6.  v2:= 0I;
  #L2d8ff8.  call temp:= `c`(v0, v3, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$b;.c:([BII)Z` @kind virtual;
  #L2d8ffe.  v3:= temp;
  #L2d9000.  return v3;
}
procedure `boolean` `n`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1;.n:([BII)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d9014.  v0:= `@@com.google.crypto.tink.shaded.protobuf.t1.a` @type ^`com.google.crypto.tink.shaded.protobuf.t1$b` @kind object;
  #L2d9018.  call temp:= `c`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$b;.c:([BII)Z` @kind virtual;
  #L2d901e.  v1:= temp;
  #L2d9020.  return v1;
}
