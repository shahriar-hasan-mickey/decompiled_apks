record `com.google.crypto.tink.shaded.protobuf.a0` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.c` @kind class, `com.google.crypto.tink.shaded.protobuf.b0$g` @kind interface, `java.util.RandomAccess` @kind interface, `com.google.crypto.tink.shaded.protobuf.b1` @kind interface {
  `int`[] `com.google.crypto.tink.shaded.protobuf.a0.p` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.a0.q` @AccessFlag PRIVATE;
}
global `com.google.crypto.tink.shaded.protobuf.a0` `@@com.google.crypto.tink.shaded.protobuf.a0.r` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2c82e0.  v0:= new `com.google.crypto.tink.shaded.protobuf.a0`;
  #L2c82e4.  v1:= 0I;
  #L2c82e6.  v2:= new `int`[v1];
  #L2c82ea.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.<init>:([II)V` @kind direct;
  #L2c82f0.  `@@com.google.crypto.tink.shaded.protobuf.a0.r` @type ^`com.google.crypto.tink.shaded.protobuf.a0` := v0 @kind object;
  #L2c82f4.  call `o`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.o:()V` @kind virtual;
  #L2c82fa.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.a0` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2c830c.  v0:= 10I;
  #L2c8310.  v0:= new `int`[v0];
  #L2c8314.  v1:= 0I;
  #L2c8316.  call `<init>`(v2, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.<init>:([II)V` @kind direct;
  #L2c831c.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.a0` v0 @kind this, `int`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.<init>:([II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2c8330.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.<init>:()V` @kind direct;
  #L2c8336.  v0.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] := v1 @kind object;
  #L2c833a.  v0.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int` := v2;
  #L2c833e.  return @kind void;
}
procedure `java.lang.String` `G`(`com.google.crypto.tink.shaded.protobuf.a0` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.G:(I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c8298.  v0:= new `java.lang.StringBuilder`;
  #L2c829c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c82a2.  v1:= "Index:" @kind object;
  #L2c82a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c82ac.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c82b2.  v3:= ", Size:" @kind object;
  #L2c82b6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c82bc.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c82c0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c82c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c82cc.  v3:= temp @kind object;
  #L2c82ce.  return v3 @kind object;
}
procedure `void` `n`(`com.google.crypto.tink.shaded.protobuf.a0` v4 @kind this, `int` v5 , `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.n:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c83e4.  call `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c83ea.  if v5 < 0 then goto L2c8460;
  #L2c83ee.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c83f2.  if v5 > v0 then goto L2c8460;
  #L2c83f6.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c83fa.  v2:= length @variable v1;
  #L2c83fc.  if v0 >= v2 then goto L2c840e;
  #L2c8400.  v2:= v5 + 1;
  #L2c8404.  v0:= v0 - v5 @kind int;
  #L2c8406.  call `arraycopy`(v1, v5, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c840c.  goto L2c843e;
  #L2c840e.  v0:= v0 * 3;
  #L2c8412.  v0:= v0 / 2;
  #L2c8416.  v0:= v0 + 1;
  #L2c841a.  v0:= new `int`[v0];
  #L2c841e.  v2:= 0I;
  #L2c8420.  call `arraycopy`(v1, v2, v0, v2, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c8426.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c842a.  v2:= v5 + 1;
  #L2c842e.  v3:= v4.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c8432.  v3:= v3 - v5 @kind int;
  #L2c8434.  call `arraycopy`(v1, v5, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c843a.  v4.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] := v0 @kind object;
  #L2c843e.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c8442.  v0[v5]:= v6;
  #L2c8446.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c844a.  v5:= v5 + 1;
  #L2c844e.  v4.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int` := v5;
  #L2c8452.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c8456.  v5:= v5 + 1;
  #L2c845a.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L2c845e.  return @kind void;
  #L2c8460.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L2c8464.  call temp:= `G`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.G:(I)Ljava/lang/String;` @kind direct;
  #L2c846a.  v5:= temp @kind object;
  #L2c846c.  call `<init>`(v6, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c8472.  throw v6;
}
procedure `void` `p`(`com.google.crypto.tink.shaded.protobuf.a0` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.p:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2c8484.  if v2 < 0 then goto L2c8492;
  #L2c8488.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c848c.  if v2 >= v0 then goto L2c8492;
  #L2c8490.  return @kind void;
  #L2c8492.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L2c8496.  call temp:= `G`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.G:(I)Ljava/lang/String;` @kind direct;
  #L2c849c.  v2:= temp @kind object;
  #L2c849e.  call `<init>`(v0, v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c84a4.  throw v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.b0$g` `N`(`com.google.crypto.tink.shaded.protobuf.a0` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.N:(I)Lcom/google/crypto/tink/shaded/protobuf/b0$g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c8098.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c809c.  if v3 < v0 then goto L2c80bc;
  #L2c80a0.  v0:= new `com.google.crypto.tink.shaded.protobuf.a0`;
  #L2c80a4.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c80a8.  call temp:= `copyOf`(v1, v3) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L2c80ae.  v3:= temp @kind object;
  #L2c80b0.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c80b4.  call `<init>`(v0, v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.<init>:([II)V` @kind direct;
  #L2c80ba.  return v0 @kind object;
  #L2c80bc.  v3:= new `java.lang.IllegalArgumentException`;
  #L2c80c0.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2c80c6.  throw v3;
}
procedure `java.lang.Integer` `O`(`com.google.crypto.tink.shaded.protobuf.a0` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.O:(I)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c81b0.  call `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c81b6.  call `p`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.p:(I)V` @kind direct;
  #L2c81bc.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c81c0.  v1:= v0[v5];
  #L2c81c4.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c81c8.  v3:= v2 + -1;
  #L2c81cc.  if v5 >= v3 then goto L2c81e0;
  #L2c81d0.  v3:= v5 + 1;
  #L2c81d4.  v2:= v2 - v5 @kind int;
  #L2c81d6.  v2:= v2 + -1;
  #L2c81da.  call `arraycopy`(v0, v3, v0, v5, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c81e0.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c81e4.  v5:= v5 + -1;
  #L2c81e8.  v4.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int` := v5;
  #L2c81ec.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c81f0.  v5:= v5 + 1;
  #L2c81f4.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L2c81f8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2c81fe.  v5:= temp @kind object;
  #L2c8200.  return v5 @kind object;
}
procedure `java.lang.Integer` `Q`(`com.google.crypto.tink.shaded.protobuf.a0` v0 @kind this, `int` v1 , `java.lang.Integer` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.Q:(ILjava/lang/Integer;)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;

  #L2c8214.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2c821a.  v2:= temp;
  #L2c821c.  call temp:= `S`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.S:(II)I` @kind virtual;
  #L2c8222.  v1:= temp;
  #L2c8224.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2c822a.  v1:= temp @kind object;
  #L2c822c.  return v1 @kind object;
}
procedure `int` `S`(`com.google.crypto.tink.shaded.protobuf.a0` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.S:(II)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c8148.  call `b`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c814e.  call `p`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.p:(I)V` @kind direct;
  #L2c8154.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c8158.  v1:= v0[v3];
  #L2c815c.  v0[v3]:= v4;
  #L2c8160.  return v1;
}
procedure `void` `add`(`com.google.crypto.tink.shaded.protobuf.a0` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c8370.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L2c8374.  call `f`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.f:(ILjava/lang/Integer;)V` @kind virtual;
  #L2c837a.  return @kind void;
}
procedure `boolean` `add`(`com.google.crypto.tink.shaded.protobuf.a0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c7f00.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L2c7f04.  call temp:= `h`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.h:(Ljava/lang/Integer;)Z` @kind virtual;
  #L2c7f0a.  v1:= temp;
  #L2c7f0c.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.a0` v5 @kind this, `java.util.Collection` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c7f20.  call `b`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c7f26.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/b0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2c7f2c.  v0:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.a0` @kind boolean;
  #L2c7f30.  if v0 != 0 then goto L2c7f3e;
  #L2c7f34.  call temp:= `addAll`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L2c7f3a.  v6:= temp;
  #L2c7f3c.  return v6;
  #L2c7f3e.  v6:= (`com.google.crypto.tink.shaded.protobuf.a0`) v6 @kind object;
  #L2c7f42.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c7f46.  v1:= 0I;
  #L2c7f48.  if v0 != 0 then goto L2c7f4e;
  #L2c7f4c.  return v1;
  #L2c7f4e.  v2:= 2147483647I;
  #L2c7f54.  v3:= v5.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c7f58.  v2:= v2 - v3 @kind int;
  #L2c7f5a.  if v2 < v0 then goto L2c7f9e;
  #L2c7f5e.  v3:= v3 + v0 @kind int;
  #L2c7f60.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c7f64.  v2:= length @variable v0;
  #L2c7f66.  if v3 <= v2 then goto L2c7f76;
  #L2c7f6a.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L2c7f70.  v0:= temp @kind object;
  #L2c7f72.  v5.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] := v0 @kind object;
  #L2c7f76.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c7f7a.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c7f7e.  v4:= v5.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c7f82.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c7f86.  call `arraycopy`(v0, v1, v2, v4, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c7f8c.  v5.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int` := v3;
  #L2c7f90.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c7f94.  v0:= 1I;
  #L2c7f96.  v6:= v6 + v0 @kind int;
  #L2c7f98.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L2c7f9c.  return v0;
  #L2c7f9e.  v6:= new `java.lang.OutOfMemoryError`;
  #L2c7fa2.  call `<init>`(v6) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L2c7fa8.  throw v6;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.a0` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c7fbc.  v0:= 1I;
  #L2c7fbe.  if v5 != v6 then goto L2c7fc4;
  #L2c7fc2.  return v0;
  #L2c7fc4.  v1:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.a0` @kind boolean;
  #L2c7fc8.  if v1 != 0 then goto L2c7fd6;
  #L2c7fcc.  call temp:= `equals`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L2c7fd2.  v6:= temp;
  #L2c7fd4.  return v6;
  #L2c7fd6.  v6:= (`com.google.crypto.tink.shaded.protobuf.a0`) v6 @kind object;
  #L2c7fda.  v1:= v5.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c7fde.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c7fe2.  v3:= 0I;
  #L2c7fe4.  if v1 == v2 then goto L2c7fea;
  #L2c7fe8.  return v3;
  #L2c7fea.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c7fee.  v1:= 0I;
  #L2c7ff0.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c7ff4.  if v1 >= v2 then goto L2c8010;
  #L2c7ff8.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c7ffc.  v2:= v2[v1];
  #L2c8000.  v4:= v6[v1];
  #L2c8004.  if v2 == v4 then goto L2c800a;
  #L2c8008.  return v3;
  #L2c800a.  v1:= v1 + 1;
  #L2c800e.  goto L2c7ff0;
  #L2c8010.  return v0;
}
procedure `void` `f`(`com.google.crypto.tink.shaded.protobuf.a0` v0 @kind this, `int` v1 , `java.lang.Integer` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.f:(ILjava/lang/Integer;)V` @AccessFlag PUBLIC {
    temp;

  #L2c8350.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2c8356.  v2:= temp;
  #L2c8358.  call `n`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.n:(II)V` @kind direct;
  #L2c835e.  return @kind void;
}
procedure `java.lang.Object` `get`(`com.google.crypto.tink.shaded.protobuf.a0` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c8240.  call temp:= `u`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.u:(I)Ljava/lang/Integer;` @kind virtual;
  #L2c8246.  v1:= temp @kind object;
  #L2c8248.  return v1 @kind object;
}
procedure `boolean` `h`(`com.google.crypto.tink.shaded.protobuf.a0` v0 @kind this, `java.lang.Integer` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.h:(Ljava/lang/Integer;)Z` @AccessFlag PUBLIC {
    temp;

  #L2c7edc.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2c7ee2.  v1:= temp;
  #L2c7ee4.  call `l`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.l:(I)V` @kind virtual;
  #L2c7eea.  v1:= 1I;
  #L2c7eec.  return v1;
}
procedure `int` `hashCode`(`com.google.crypto.tink.shaded.protobuf.a0` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c8114.  v0:= 1I;
  #L2c8116.  v1:= 0I;
  #L2c8118.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c811c.  if v1 >= v2 then goto L2c8134;
  #L2c8120.  v0:= v0 * 31;
  #L2c8124.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c8128.  v2:= v2[v1];
  #L2c812c.  v0:= v0 + v2 @kind int;
  #L2c812e.  v1:= v1 + 1;
  #L2c8132.  goto L2c8118;
  #L2c8134.  return v0;
}
procedure `void` `l`(`com.google.crypto.tink.shaded.protobuf.a0` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.l:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c838c.  call `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c8392.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c8396.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c839a.  v2:= length @variable v1;
  #L2c839c.  if v0 != v2 then goto L2c83bc;
  #L2c83a0.  v2:= v0 * 3;
  #L2c83a4.  v2:= v2 / 2;
  #L2c83a8.  v2:= v2 + 1;
  #L2c83ac.  v2:= new `int`[v2];
  #L2c83b0.  v3:= 0I;
  #L2c83b2.  call `arraycopy`(v1, v3, v2, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c83b8.  v4.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] := v2 @kind object;
  #L2c83bc.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c83c0.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c83c4.  v2:= v1 + 1;
  #L2c83c8.  v4.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int` := v2;
  #L2c83cc.  v0[v1]:= v5;
  #L2c83d0.  return @kind void;
}
procedure `java.lang.Object` `remove`(`com.google.crypto.tink.shaded.protobuf.a0` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c825c.  call temp:= `O`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.O:(I)Ljava/lang/Integer;` @kind virtual;
  #L2c8262.  v1:= temp @kind object;
  #L2c8264.  return v1 @kind object;
}
procedure `boolean` `remove`(`com.google.crypto.tink.shaded.protobuf.a0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c8024.  call `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c802a.  v0:= 0I;
  #L2c802c.  v1:= 0I;
  #L2c802e.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c8032.  if v1 >= v2 then goto L2c8086;
  #L2c8036.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c803a.  v2:= v2[v1];
  #L2c803e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2c8044.  v2:= temp @kind object;
  #L2c8046.  call temp:= `equals`(v5, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2c804c.  v2:= temp;
  #L2c804e.  if v2 == 0 then goto L2c8080;
  #L2c8052.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c8056.  v0:= v1 + 1;
  #L2c805a.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c805e.  v2:= v2 - v1 @kind int;
  #L2c8060.  v3:= 1I;
  #L2c8062.  v2:= v2 - v3 @kind int;
  #L2c8064.  call `arraycopy`(v5, v0, v5, v1, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c806a.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c806e.  v5:= v5 - v3 @kind int;
  #L2c8070.  v4.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int` := v5;
  #L2c8074.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c8078.  v5:= v5 + v3 @kind int;
  #L2c807a.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L2c807e.  return v3;
  #L2c8080.  v1:= v1 + 1;
  #L2c8084.  goto L2c802e;
  #L2c8086.  return v0;
}
procedure `void` `removeRange`(`com.google.crypto.tink.shaded.protobuf.a0` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.removeRange:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2c84b8.  call `b`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c84be.  if v4 < v3 then goto L2c84ec;
  #L2c84c2.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c84c6.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c84ca.  v1:= v1 - v4 @kind int;
  #L2c84cc.  call `arraycopy`(v0, v4, v0, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c84d2.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c84d6.  v4:= v4 - v3 @kind int;
  #L2c84d8.  v0:= v0 - v4 @kind int;
  #L2c84da.  v2.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int` := v0;
  #L2c84de.  v3:= v2.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c84e2.  v3:= v3 + 1;
  #L2c84e6.  v2.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L2c84ea.  return @kind void;
  #L2c84ec.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L2c84f0.  v4:= "toIndex < fromIndex" @kind object;
  #L2c84f4.  call `<init>`(v3, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c84fa.  throw v3;
}
procedure `java.lang.Object` `set`(`com.google.crypto.tink.shaded.protobuf.a0` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c8278.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L2c827c.  call temp:= `Q`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.Q:(ILjava/lang/Integer;)Ljava/lang/Integer;` @kind virtual;
  #L2c8282.  v1:= temp @kind object;
  #L2c8284.  return v1 @kind object;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.a0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c8174.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.a0.q` @type ^`int`;
  #L2c8178.  return v0;
}
procedure `java.lang.Integer` `u`(`com.google.crypto.tink.shaded.protobuf.a0` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.u:(I)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;

  #L2c818c.  call temp:= `y`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.y:(I)I` @kind virtual;
  #L2c8192.  v1:= temp;
  #L2c8194.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2c819a.  v1:= temp @kind object;
  #L2c819c.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.b0$i` `v`(`com.google.crypto.tink.shaded.protobuf.a0` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.v:(I)Lcom/google/crypto/tink/shaded/protobuf/b0$i;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c80d8.  call temp:= `N`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.N:(I)Lcom/google/crypto/tink/shaded/protobuf/b0$g;` @kind virtual;
  #L2c80de.  v1:= temp @kind object;
  #L2c80e0.  return v1 @kind object;
}
procedure `int` `y`(`com.google.crypto.tink.shaded.protobuf.a0` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.y:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c80f4.  call `p`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/a0;.p:(I)V` @kind direct;
  #L2c80fa.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.a0.p` @type ^`int`[] @kind object;
  #L2c80fe.  v2:= v0[v2];
  #L2c8102.  return v2;
}
