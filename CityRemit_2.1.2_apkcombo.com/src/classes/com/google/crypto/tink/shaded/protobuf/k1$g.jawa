record `com.google.crypto.tink.shaded.protobuf.k1$g` @kind class @AccessFlag  extends `java.util.AbstractSet` @kind class {
  `com.google.crypto.tink.shaded.protobuf.k1` `com.google.crypto.tink.shaded.protobuf.k1$g.o` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.k1$g` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.k1` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$g;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/k1;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2d4fd0.  v0.`com.google.crypto.tink.shaded.protobuf.k1$g.o` @type ^`com.google.crypto.tink.shaded.protobuf.k1` := v1 @kind object;
  #L2d4fd4.  call `<init>`(v0) @signature `Ljava/util/AbstractSet;.<init>:()V` @kind direct;
  #L2d4fda.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.k1$g` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.k1` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.k1$a` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$g;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/k1;Lcom/google/crypto/tink/shaded/protobuf/k1$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2d4fec.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$g;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/k1;)V` @kind direct;
  #L2d4ff2.  return @kind void;
}
procedure `boolean` `add`(`com.google.crypto.tink.shaded.protobuf.k1$g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$g;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2d4e9c.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L2d4ea0.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$g;.b:(Ljava/util/Map$Entry;)Z` @kind virtual;
  #L2d4ea6.  v1:= temp;
  #L2d4ea8.  return v1;
}
procedure `boolean` `b`(`com.google.crypto.tink.shaded.protobuf.k1$g` v2 @kind this, `java.util.Map$Entry` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$g;.b:(Ljava/util/Map$Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d4ebc.  call temp:= `contains`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$g;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d4ec2.  v0:= temp;
  #L2d4ec4.  if v0 != 0 then goto L2d4eea;
  #L2d4ec8.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.k1$g.o` @type ^`com.google.crypto.tink.shaded.protobuf.k1` @kind object;
  #L2d4ecc.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2d4ed2.  v1:= temp @kind object;
  #L2d4ed4.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L2d4ed8.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2d4ede.  v3:= temp @kind object;
  #L2d4ee0.  call temp:= `r`(v0, v1, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1;.r:(Ljava/lang/Comparable;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2d4ee6.  v3:= 1I;
  #L2d4ee8.  return v3;
  #L2d4eea.  v3:= 0I;
  #L2d4eec.  return v3;
}
procedure `void` `clear`(`com.google.crypto.tink.shaded.protobuf.k1$g` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$g;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d5004.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.k1$g.o` @type ^`com.google.crypto.tink.shaded.protobuf.k1` @kind object;
  #L2d5008.  call `clear`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1;.clear:()V` @kind virtual;
  #L2d500e.  return @kind void;
}
procedure `boolean` `contains`(`com.google.crypto.tink.shaded.protobuf.k1$g` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$g;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d4f00.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L2d4f04.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.k1$g.o` @type ^`com.google.crypto.tink.shaded.protobuf.k1` @kind object;
  #L2d4f08.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2d4f0e.  v1:= temp @kind object;
  #L2d4f10.  call temp:= `get`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2d4f16.  v0:= temp @kind object;
  #L2d4f18.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2d4f1e.  v3:= temp @kind object;
  #L2d4f20.  if v0 == v3 then goto L2d4f3a;
  #L2d4f24.  if v0 == 0 then goto L2d4f36;
  #L2d4f28.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d4f2e.  v3:= temp;
  #L2d4f30.  if v3 == 0 then goto L2d4f36;
  #L2d4f34.  goto L2d4f3a;
  #L2d4f36.  v3:= 0I;
  #L2d4f38.  goto L2d4f3c;
  #L2d4f3a.  v3:= 1I;
  #L2d4f3c.  return v3;
}
procedure `java.util.Iterator` `iterator`(`com.google.crypto.tink.shaded.protobuf.k1$g` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$g;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d4fac.  v0:= new `com.google.crypto.tink.shaded.protobuf.k1$f`;
  #L2d4fb0.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.k1$g.o` @type ^`com.google.crypto.tink.shaded.protobuf.k1` @kind object;
  #L2d4fb4.  v2:= 0I;
  #L2d4fb6.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$f;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/k1;Lcom/google/crypto/tink/shaded/protobuf/k1$a;)V` @kind direct;
  #L2d4fbc.  return v0 @kind object;
}
procedure `boolean` `remove`(`com.google.crypto.tink.shaded.protobuf.k1$g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$g;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d4f50.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L2d4f54.  call temp:= `contains`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$g;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d4f5a.  v0:= temp;
  #L2d4f5c.  if v0 == 0 then goto L2d4f76;
  #L2d4f60.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.k1$g.o` @type ^`com.google.crypto.tink.shaded.protobuf.k1` @kind object;
  #L2d4f64.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2d4f6a.  v2:= temp @kind object;
  #L2d4f6c.  call temp:= `remove`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2d4f72.  v2:= 1I;
  #L2d4f74.  return v2;
  #L2d4f76.  v2:= 0I;
  #L2d4f78.  return v2;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.k1$g` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$g;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d4f8c.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.k1$g.o` @type ^`com.google.crypto.tink.shaded.protobuf.k1` @kind object;
  #L2d4f90.  call temp:= `size`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1;.size:()I` @kind virtual;
  #L2d4f96.  v0:= temp;
  #L2d4f98.  return v0;
}
