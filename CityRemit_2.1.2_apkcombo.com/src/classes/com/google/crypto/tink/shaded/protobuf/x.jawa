record `com.google.crypto.tink.shaded.protobuf.x` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.c` @kind class, `com.google.crypto.tink.shaded.protobuf.b0$f` @kind interface, `java.util.RandomAccess` @kind interface, `com.google.crypto.tink.shaded.protobuf.b1` @kind interface {
  `float`[] `com.google.crypto.tink.shaded.protobuf.x.p` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.x.q` @AccessFlag PRIVATE;
}
global `com.google.crypto.tink.shaded.protobuf.x` `@@com.google.crypto.tink.shaded.protobuf.x.r` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2c6e50.  v0:= new `com.google.crypto.tink.shaded.protobuf.x`;
  #L2c6e54.  v1:= 0I;
  #L2c6e56.  v2:= new `float`[v1];
  #L2c6e5a.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.<init>:([FI)V` @kind direct;
  #L2c6e60.  `@@com.google.crypto.tink.shaded.protobuf.x.r` @type ^`com.google.crypto.tink.shaded.protobuf.x` := v0 @kind object;
  #L2c6e64.  call `o`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.o:()V` @kind virtual;
  #L2c6e6a.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.x` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2c6e7c.  v0:= 10I;
  #L2c6e80.  v0:= new `float`[v0];
  #L2c6e84.  v1:= 0I;
  #L2c6e86.  call `<init>`(v2, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.<init>:([FI)V` @kind direct;
  #L2c6e8c.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.x` v0 @kind this, `float`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.<init>:([FI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2c6ea0.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.<init>:()V` @kind direct;
  #L2c6ea6.  v0.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] := v1 @kind object;
  #L2c6eaa.  v0.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int` := v2;
  #L2c6eae.  return @kind void;
}
procedure `java.lang.String` `G`(`com.google.crypto.tink.shaded.protobuf.x` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.G:(I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c6e08.  v0:= new `java.lang.StringBuilder`;
  #L2c6e0c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c6e12.  v1:= "Index:" @kind object;
  #L2c6e16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c6e1c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c6e22.  v3:= ", Size:" @kind object;
  #L2c6e26.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c6e2c.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6e30.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c6e36.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c6e3c.  v3:= temp @kind object;
  #L2c6e3e.  return v3 @kind object;
}
procedure `void` `n`(`com.google.crypto.tink.shaded.protobuf.x` v4 @kind this, `int` v5 , `float` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.n:(IF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c6f54.  call `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c6f5a.  if v5 < 0 then goto L2c6fd0;
  #L2c6f5e.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6f62.  if v5 > v0 then goto L2c6fd0;
  #L2c6f66.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6f6a.  v2:= length @variable v1;
  #L2c6f6c.  if v0 >= v2 then goto L2c6f7e;
  #L2c6f70.  v2:= v5 + 1;
  #L2c6f74.  v0:= v0 - v5 @kind int;
  #L2c6f76.  call `arraycopy`(v1, v5, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c6f7c.  goto L2c6fae;
  #L2c6f7e.  v0:= v0 * 3;
  #L2c6f82.  v0:= v0 / 2;
  #L2c6f86.  v0:= v0 + 1;
  #L2c6f8a.  v0:= new `float`[v0];
  #L2c6f8e.  v2:= 0I;
  #L2c6f90.  call `arraycopy`(v1, v2, v0, v2, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c6f96.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6f9a.  v2:= v5 + 1;
  #L2c6f9e.  v3:= v4.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6fa2.  v3:= v3 - v5 @kind int;
  #L2c6fa4.  call `arraycopy`(v1, v5, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c6faa.  v4.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] := v0 @kind object;
  #L2c6fae.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6fb2.  v0[v5]:= v6;
  #L2c6fb6.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6fba.  v5:= v5 + 1;
  #L2c6fbe.  v4.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int` := v5;
  #L2c6fc2.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c6fc6.  v5:= v5 + 1;
  #L2c6fca.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L2c6fce.  return @kind void;
  #L2c6fd0.  v6:= new `java.lang.IndexOutOfBoundsException`;
  #L2c6fd4.  call temp:= `G`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.G:(I)Ljava/lang/String;` @kind direct;
  #L2c6fda.  v5:= temp @kind object;
  #L2c6fdc.  call `<init>`(v6, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c6fe2.  throw v6;
}
procedure `void` `p`(`com.google.crypto.tink.shaded.protobuf.x` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.p:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2c6ff4.  if v2 < 0 then goto L2c7002;
  #L2c6ff8.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6ffc.  if v2 >= v0 then goto L2c7002;
  #L2c7000.  return @kind void;
  #L2c7002.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L2c7006.  call temp:= `G`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.G:(I)Ljava/lang/String;` @kind direct;
  #L2c700c.  v2:= temp @kind object;
  #L2c700e.  call `<init>`(v0, v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c7014.  throw v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.b0$f` `N`(`com.google.crypto.tink.shaded.protobuf.x` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.N:(I)Lcom/google/crypto/tink/shaded/protobuf/b0$f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c6c00.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6c04.  if v3 < v0 then goto L2c6c24;
  #L2c6c08.  v0:= new `com.google.crypto.tink.shaded.protobuf.x`;
  #L2c6c0c.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6c10.  call temp:= `copyOf`(v1, v3) @signature `Ljava/util/Arrays;.copyOf:([FI)[F` @kind static;
  #L2c6c16.  v3:= temp @kind object;
  #L2c6c18.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6c1c.  call `<init>`(v0, v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.<init>:([FI)V` @kind direct;
  #L2c6c22.  return v0 @kind object;
  #L2c6c24.  v3:= new `java.lang.IllegalArgumentException`;
  #L2c6c28.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2c6c2e.  throw v3;
}
procedure `java.lang.Float` `O`(`com.google.crypto.tink.shaded.protobuf.x` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.O:(I)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c6d20.  call `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c6d26.  call `p`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.p:(I)V` @kind direct;
  #L2c6d2c.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6d30.  v1:= v0[v5];
  #L2c6d34.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6d38.  v3:= v2 + -1;
  #L2c6d3c.  if v5 >= v3 then goto L2c6d50;
  #L2c6d40.  v3:= v5 + 1;
  #L2c6d44.  v2:= v2 - v5 @kind int;
  #L2c6d46.  v2:= v2 + -1;
  #L2c6d4a.  call `arraycopy`(v0, v3, v0, v5, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c6d50.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6d54.  v5:= v5 + -1;
  #L2c6d58.  v4.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int` := v5;
  #L2c6d5c.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c6d60.  v5:= v5 + 1;
  #L2c6d64.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L2c6d68.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2c6d6e.  v5:= temp @kind object;
  #L2c6d70.  return v5 @kind object;
}
procedure `java.lang.Float` `Q`(`com.google.crypto.tink.shaded.protobuf.x` v0 @kind this, `int` v1 , `java.lang.Float` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.Q:(ILjava/lang/Float;)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;

  #L2c6d84.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2c6d8a.  v2:= temp;
  #L2c6d8c.  call temp:= `S`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.S:(IF)F` @kind virtual;
  #L2c6d92.  v1:= temp;
  #L2c6d94.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2c6d9a.  v1:= temp @kind object;
  #L2c6d9c.  return v1 @kind object;
}
procedure `float` `S`(`com.google.crypto.tink.shaded.protobuf.x` v2 @kind this, `int` v3 , `float` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.S:(IF)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c6c7c.  call `b`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c6c82.  call `p`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.p:(I)V` @kind direct;
  #L2c6c88.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6c8c.  v1:= v0[v3];
  #L2c6c90.  v0[v3]:= v4;
  #L2c6c94.  return v1;
}
procedure `void` `add`(`com.google.crypto.tink.shaded.protobuf.x` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c6ee0.  v2:= (`java.lang.Float`) v2 @kind object;
  #L2c6ee4.  call `f`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.f:(ILjava/lang/Float;)V` @kind virtual;
  #L2c6eea.  return @kind void;
}
procedure `boolean` `add`(`com.google.crypto.tink.shaded.protobuf.x` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c6a58.  v1:= (`java.lang.Float`) v1 @kind object;
  #L2c6a5c.  call temp:= `h`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.h:(Ljava/lang/Float;)Z` @kind virtual;
  #L2c6a62.  v1:= temp;
  #L2c6a64.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.x` v5 @kind this, `java.util.Collection` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c6a78.  call `b`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c6a7e.  call temp:= `a`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/b0;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2c6a84.  v0:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.x` @kind boolean;
  #L2c6a88.  if v0 != 0 then goto L2c6a96;
  #L2c6a8c.  call temp:= `addAll`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L2c6a92.  v6:= temp;
  #L2c6a94.  return v6;
  #L2c6a96.  v6:= (`com.google.crypto.tink.shaded.protobuf.x`) v6 @kind object;
  #L2c6a9a.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6a9e.  v1:= 0I;
  #L2c6aa0.  if v0 != 0 then goto L2c6aa6;
  #L2c6aa4.  return v1;
  #L2c6aa6.  v2:= 2147483647I;
  #L2c6aac.  v3:= v5.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6ab0.  v2:= v2 - v3 @kind int;
  #L2c6ab2.  if v2 < v0 then goto L2c6af6;
  #L2c6ab6.  v3:= v3 + v0 @kind int;
  #L2c6ab8.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6abc.  v2:= length @variable v0;
  #L2c6abe.  if v3 <= v2 then goto L2c6ace;
  #L2c6ac2.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([FI)[F` @kind static;
  #L2c6ac8.  v0:= temp @kind object;
  #L2c6aca.  v5.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] := v0 @kind object;
  #L2c6ace.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6ad2.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6ad6.  v4:= v5.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6ada.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6ade.  call `arraycopy`(v0, v1, v2, v4, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c6ae4.  v5.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int` := v3;
  #L2c6ae8.  v6:= v5.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c6aec.  v0:= 1I;
  #L2c6aee.  v6:= v6 + v0 @kind int;
  #L2c6af0.  v5.`java.util.AbstractList.modCount` @type ^`int` := v6;
  #L2c6af4.  return v0;
  #L2c6af6.  v6:= new `java.lang.OutOfMemoryError`;
  #L2c6afa.  call `<init>`(v6) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L2c6b00.  throw v6;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.x` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c6b14.  v0:= 1I;
  #L2c6b16.  if v5 != v6 then goto L2c6b1c;
  #L2c6b1a.  return v0;
  #L2c6b1c.  v1:= instanceof @variable v6 @type ^`com.google.crypto.tink.shaded.protobuf.x` @kind boolean;
  #L2c6b20.  if v1 != 0 then goto L2c6b2e;
  #L2c6b24.  call temp:= `equals`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L2c6b2a.  v6:= temp;
  #L2c6b2c.  return v6;
  #L2c6b2e.  v6:= (`com.google.crypto.tink.shaded.protobuf.x`) v6 @kind object;
  #L2c6b32.  v1:= v5.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6b36.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6b3a.  v3:= 0I;
  #L2c6b3c.  if v1 == v2 then goto L2c6b42;
  #L2c6b40.  return v3;
  #L2c6b42.  v6:= v6.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6b46.  v1:= 0I;
  #L2c6b48.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6b4c.  if v1 >= v2 then goto L2c6b78;
  #L2c6b50.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6b54.  v2:= v2[v1];
  #L2c6b58.  call temp:= `floatToIntBits`(v2) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L2c6b5e.  v2:= temp;
  #L2c6b60.  v4:= v6[v1];
  #L2c6b64.  call temp:= `floatToIntBits`(v4) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L2c6b6a.  v4:= temp;
  #L2c6b6c.  if v2 == v4 then goto L2c6b72;
  #L2c6b70.  return v3;
  #L2c6b72.  v1:= v1 + 1;
  #L2c6b76.  goto L2c6b48;
  #L2c6b78.  return v0;
}
procedure `void` `f`(`com.google.crypto.tink.shaded.protobuf.x` v0 @kind this, `int` v1 , `java.lang.Float` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.f:(ILjava/lang/Float;)V` @AccessFlag PUBLIC {
    temp;

  #L2c6ec0.  call temp:= `floatValue`(v2) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2c6ec6.  v2:= temp;
  #L2c6ec8.  call `n`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.n:(IF)V` @kind direct;
  #L2c6ece.  return @kind void;
}
procedure `java.lang.Object` `get`(`com.google.crypto.tink.shaded.protobuf.x` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c6db0.  call temp:= `u`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.u:(I)Ljava/lang/Float;` @kind virtual;
  #L2c6db6.  v1:= temp @kind object;
  #L2c6db8.  return v1 @kind object;
}
procedure `boolean` `h`(`com.google.crypto.tink.shaded.protobuf.x` v0 @kind this, `java.lang.Float` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.h:(Ljava/lang/Float;)Z` @AccessFlag PUBLIC {
    temp;

  #L2c6a34.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L2c6a3a.  v1:= temp;
  #L2c6a3c.  call `l`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.l:(F)V` @kind virtual;
  #L2c6a42.  v1:= 1I;
  #L2c6a44.  return v1;
}
procedure `int` `hashCode`(`com.google.crypto.tink.shaded.protobuf.x` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c6ca8.  v0:= 1I;
  #L2c6caa.  v1:= 0I;
  #L2c6cac.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6cb0.  if v1 >= v2 then goto L2c6cd0;
  #L2c6cb4.  v0:= v0 * 31;
  #L2c6cb8.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6cbc.  v2:= v2[v1];
  #L2c6cc0.  call temp:= `floatToIntBits`(v2) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L2c6cc6.  v2:= temp;
  #L2c6cc8.  v0:= v0 + v2 @kind int;
  #L2c6cca.  v1:= v1 + 1;
  #L2c6cce.  goto L2c6cac;
  #L2c6cd0.  return v0;
}
procedure `void` `l`(`com.google.crypto.tink.shaded.protobuf.x` v4 @kind this, `float` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.l:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c6efc.  call `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c6f02.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6f06.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6f0a.  v2:= length @variable v1;
  #L2c6f0c.  if v0 != v2 then goto L2c6f2c;
  #L2c6f10.  v2:= v0 * 3;
  #L2c6f14.  v2:= v2 / 2;
  #L2c6f18.  v2:= v2 + 1;
  #L2c6f1c.  v2:= new `float`[v2];
  #L2c6f20.  v3:= 0I;
  #L2c6f22.  call `arraycopy`(v1, v3, v2, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c6f28.  v4.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] := v2 @kind object;
  #L2c6f2c.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6f30.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6f34.  v2:= v1 + 1;
  #L2c6f38.  v4.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int` := v2;
  #L2c6f3c.  v0[v1]:= v5;
  #L2c6f40.  return @kind void;
}
procedure `java.lang.Object` `remove`(`com.google.crypto.tink.shaded.protobuf.x` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c6dcc.  call temp:= `O`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.O:(I)Ljava/lang/Float;` @kind virtual;
  #L2c6dd2.  v1:= temp @kind object;
  #L2c6dd4.  return v1 @kind object;
}
procedure `boolean` `remove`(`com.google.crypto.tink.shaded.protobuf.x` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c6b8c.  call `b`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c6b92.  v0:= 0I;
  #L2c6b94.  v1:= 0I;
  #L2c6b96.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6b9a.  if v1 >= v2 then goto L2c6bee;
  #L2c6b9e.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6ba2.  v2:= v2[v1];
  #L2c6ba6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2c6bac.  v2:= temp @kind object;
  #L2c6bae.  call temp:= `equals`(v5, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2c6bb4.  v2:= temp;
  #L2c6bb6.  if v2 == 0 then goto L2c6be8;
  #L2c6bba.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6bbe.  v0:= v1 + 1;
  #L2c6bc2.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6bc6.  v2:= v2 - v1 @kind int;
  #L2c6bc8.  v3:= 1I;
  #L2c6bca.  v2:= v2 - v3 @kind int;
  #L2c6bcc.  call `arraycopy`(v5, v0, v5, v1, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c6bd2.  v5:= v4.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6bd6.  v5:= v5 - v3 @kind int;
  #L2c6bd8.  v4.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int` := v5;
  #L2c6bdc.  v5:= v4.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c6be0.  v5:= v5 + v3 @kind int;
  #L2c6be2.  v4.`java.util.AbstractList.modCount` @type ^`int` := v5;
  #L2c6be6.  return v3;
  #L2c6be8.  v1:= v1 + 1;
  #L2c6bec.  goto L2c6b96;
  #L2c6bee.  return v0;
}
procedure `void` `removeRange`(`com.google.crypto.tink.shaded.protobuf.x` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.removeRange:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2c7028.  call `b`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2c702e.  if v4 < v3 then goto L2c705c;
  #L2c7032.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c7036.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c703a.  v1:= v1 - v4 @kind int;
  #L2c703c.  call `arraycopy`(v0, v4, v0, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2c7042.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c7046.  v4:= v4 - v3 @kind int;
  #L2c7048.  v0:= v0 - v4 @kind int;
  #L2c704a.  v2.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int` := v0;
  #L2c704e.  v3:= v2.`java.util.AbstractList.modCount` @type ^`int`;
  #L2c7052.  v3:= v3 + 1;
  #L2c7056.  v2.`java.util.AbstractList.modCount` @type ^`int` := v3;
  #L2c705a.  return @kind void;
  #L2c705c.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L2c7060.  v4:= "toIndex < fromIndex" @kind object;
  #L2c7064.  call `<init>`(v3, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c706a.  throw v3;
}
procedure `java.lang.Object` `set`(`com.google.crypto.tink.shaded.protobuf.x` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c6de8.  v2:= (`java.lang.Float`) v2 @kind object;
  #L2c6dec.  call temp:= `Q`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.Q:(ILjava/lang/Float;)Ljava/lang/Float;` @kind virtual;
  #L2c6df2.  v1:= temp @kind object;
  #L2c6df4.  return v1 @kind object;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.x` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c6ce4.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.x.q` @type ^`int`;
  #L2c6ce8.  return v0;
}
procedure `java.lang.Float` `u`(`com.google.crypto.tink.shaded.protobuf.x` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.u:(I)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;

  #L2c6cfc.  call temp:= `y`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.y:(I)F` @kind virtual;
  #L2c6d02.  v1:= temp;
  #L2c6d04.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2c6d0a.  v1:= temp @kind object;
  #L2c6d0c.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.b0$i` `v`(`com.google.crypto.tink.shaded.protobuf.x` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.v:(I)Lcom/google/crypto/tink/shaded/protobuf/b0$i;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2c6c40.  call temp:= `N`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.N:(I)Lcom/google/crypto/tink/shaded/protobuf/b0$f;` @kind virtual;
  #L2c6c46.  v1:= temp @kind object;
  #L2c6c48.  return v1 @kind object;
}
procedure `float` `y`(`com.google.crypto.tink.shaded.protobuf.x` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.y:(I)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c6c5c.  call `p`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/x;.p:(I)V` @kind direct;
  #L2c6c62.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.x.p` @type ^`float`[] @kind object;
  #L2c6c66.  v2:= v0[v2];
  #L2c6c6a.  return v2;
}
