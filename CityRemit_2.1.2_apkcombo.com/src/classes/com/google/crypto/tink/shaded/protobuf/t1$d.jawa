record `com.google.crypto.tink.shaded.protobuf.t1$d` @kind class @AccessFlag  extends `java.lang.IllegalArgumentException` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.t1$d` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/t1$d;.<init>:(II)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2d8714.  v0:= new `java.lang.StringBuilder`;
  #L2d8718.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d871e.  v1:= "Unpaired surrogate at index " @kind object;
  #L2d8722.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d8728.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d872e.  v3:= " of " @kind object;
  #L2d8732.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d8738.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d873e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d8744.  v3:= temp @kind object;
  #L2d8746.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d874c.  return @kind void;
}
