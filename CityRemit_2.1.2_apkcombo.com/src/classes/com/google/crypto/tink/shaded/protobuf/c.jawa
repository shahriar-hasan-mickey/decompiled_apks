record `com.google.crypto.tink.shaded.protobuf.c` @kind class @AccessFlag ABSTRACT extends `java.util.AbstractList` @kind class, `com.google.crypto.tink.shaded.protobuf.b0$i` @kind interface {
  `boolean` `com.google.crypto.tink.shaded.protobuf.c.o` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2b9c90.  call `<init>`(v1) @signature `Ljava/util/AbstractList;.<init>:()V` @kind direct;
  #L2b9c96.  v0:= 1I;
  #L2b9c98.  v1.`com.google.crypto.tink.shaded.protobuf.c.o` @type ^`boolean` := v0 @kind boolean;
  #L2b9c9c.  return @kind void;
}
procedure `boolean` `X`(`com.google.crypto.tink.shaded.protobuf.c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.X:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9bd8.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.c.o` @type ^`boolean` @kind boolean;
  #L2b9bdc.  return v0;
}
procedure `boolean` `add`(`com.google.crypto.tink.shaded.protobuf.c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L2b9afc.  call `b`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2b9b02.  call temp:= `add`(v0, v1) @signature `Ljava/util/AbstractList;.add:(Ljava/lang/Object;)Z` @kind super;
  #L2b9b08.  v1:= temp;
  #L2b9b0a.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.c` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L2b9b1c.  call `b`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2b9b22.  call temp:= `addAll`(v0, v1, v2) @signature `Ljava/util/AbstractList;.addAll:(ILjava/util/Collection;)Z` @kind super;
  #L2b9b28.  v1:= temp;
  #L2b9b2a.  return v1;
}
procedure `boolean` `addAll`(`com.google.crypto.tink.shaded.protobuf.c` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L2b9b3c.  call `b`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2b9b42.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/AbstractList;.addAll:(Ljava/util/Collection;)Z` @kind super;
  #L2b9b48.  v1:= temp;
  #L2b9b4a.  return v1;
}
procedure `void` `b`(`com.google.crypto.tink.shaded.protobuf.c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2b9cd0.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.c.o` @type ^`boolean` @kind boolean;
  #L2b9cd4.  if v0 == 0 then goto L2b9cda;
  #L2b9cd8.  return @kind void;
  #L2b9cda.  v0:= new `java.lang.UnsupportedOperationException`;
  #L2b9cde.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L2b9ce4.  throw v0;
}
procedure `void` `clear`(`com.google.crypto.tink.shaded.protobuf.c` v0 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.clear:()V` @AccessFlag PUBLIC {
    temp;

  #L2b9cb0.  call `b`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2b9cb6.  call `clear`(v0) @signature `Ljava/util/AbstractList;.clear:()V` @kind super;
  #L2b9cbc.  return @kind void;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.c` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2b9b5c.  v0:= 1I;
  #L2b9b5e.  if v7 != v6 then goto L2b9b64;
  #L2b9b62.  return v0;
  #L2b9b64.  v1:= instanceof @variable v7 @type ^`java.util.List` @kind boolean;
  #L2b9b68.  v2:= 0I;
  #L2b9b6a.  if v1 != 0 then goto L2b9b70;
  #L2b9b6e.  return v2;
  #L2b9b70.  v1:= instanceof @variable v7 @type ^`java.util.RandomAccess` @kind boolean;
  #L2b9b74.  if v1 != 0 then goto L2b9b82;
  #L2b9b78.  call temp:= `equals`(v6, v7) @signature `Ljava/util/AbstractList;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L2b9b7e.  v7:= temp;
  #L2b9b80.  return v7;
  #L2b9b82.  v7:= (`java.util.List`) v7 @kind object;
  #L2b9b86.  call temp:= `size`(v6) @signature `Ljava/util/AbstractList;.size:()I` @kind virtual;
  #L2b9b8c.  v1:= temp;
  #L2b9b8e.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2b9b94.  v3:= temp;
  #L2b9b96.  if v1 == v3 then goto L2b9b9c;
  #L2b9b9a.  return v2;
  #L2b9b9c.  v3:= 0I;
  #L2b9b9e.  if v3 >= v1 then goto L2b9bc6;
  #L2b9ba2.  call temp:= `get`(v6, v3) @signature `Ljava/util/AbstractList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2b9ba8.  v4:= temp @kind object;
  #L2b9baa.  call temp:= `get`(v7, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2b9bb0.  v5:= temp @kind object;
  #L2b9bb2.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b9bb8.  v4:= temp;
  #L2b9bba.  if v4 != 0 then goto L2b9bc0;
  #L2b9bbe.  return v2;
  #L2b9bc0.  v3:= v3 + 1;
  #L2b9bc4.  goto L2b9b9e;
  #L2b9bc6.  return v0;
}
procedure `int` `hashCode`(`com.google.crypto.tink.shaded.protobuf.c` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b9c50.  call temp:= `size`(v4) @signature `Ljava/util/AbstractList;.size:()I` @kind virtual;
  #L2b9c56.  v0:= temp;
  #L2b9c58.  v1:= 1I;
  #L2b9c5a.  v2:= 0I;
  #L2b9c5c.  if v2 >= v0 then goto L2b9c7c;
  #L2b9c60.  v1:= v1 * 31;
  #L2b9c64.  call temp:= `get`(v4, v2) @signature `Ljava/util/AbstractList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2b9c6a.  v3:= temp @kind object;
  #L2b9c6c.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2b9c72.  v3:= temp;
  #L2b9c74.  v1:= v1 + v3 @kind int;
  #L2b9c76.  v2:= v2 + 1;
  #L2b9c7a.  goto L2b9c5c;
  #L2b9c7c.  return v1;
}
procedure `void` `o`(`com.google.crypto.tink.shaded.protobuf.c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.o:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b9cf8.  v0:= 0I;
  #L2b9cfa.  v1.`com.google.crypto.tink.shaded.protobuf.c.o` @type ^`boolean` := v0 @kind boolean;
  #L2b9cfe.  return @kind void;
}
procedure `boolean` `remove`(`com.google.crypto.tink.shaded.protobuf.c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L2b9bf0.  call `b`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2b9bf6.  call temp:= `remove`(v0, v1) @signature `Ljava/util/AbstractList;.remove:(Ljava/lang/Object;)Z` @kind super;
  #L2b9bfc.  v1:= temp;
  #L2b9bfe.  return v1;
}
procedure `boolean` `removeAll`(`com.google.crypto.tink.shaded.protobuf.c` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L2b9c10.  call `b`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2b9c16.  call temp:= `removeAll`(v0, v1) @signature `Ljava/util/AbstractList;.removeAll:(Ljava/util/Collection;)Z` @kind super;
  #L2b9c1c.  v1:= temp;
  #L2b9c1e.  return v1;
}
procedure `boolean` `retainAll`(`com.google.crypto.tink.shaded.protobuf.c` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L2b9c30.  call `b`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/c;.b:()V` @kind virtual;
  #L2b9c36.  call temp:= `retainAll`(v0, v1) @signature `Ljava/util/AbstractList;.retainAll:(Ljava/util/Collection;)Z` @kind super;
  #L2b9c3c.  v1:= temp;
  #L2b9c3e.  return v1;
}
