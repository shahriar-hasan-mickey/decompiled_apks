record `com.google.crypto.tink.shaded.protobuf.k1$f` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `int` `com.google.crypto.tink.shaded.protobuf.k1$f.o` @AccessFlag PRIVATE;
  `boolean` `com.google.crypto.tink.shaded.protobuf.k1$f.p` @AccessFlag PRIVATE;
  `java.util.Iterator` `com.google.crypto.tink.shaded.protobuf.k1$f.q` @AccessFlag PRIVATE;
  `com.google.crypto.tink.shaded.protobuf.k1` `com.google.crypto.tink.shaded.protobuf.k1$f.r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.k1$f` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.k1` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$f;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/k1;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2d4de4.  v0.`com.google.crypto.tink.shaded.protobuf.k1$f.r` @type ^`com.google.crypto.tink.shaded.protobuf.k1` := v1 @kind object;
  #L2d4de8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d4dee.  v1:= -1I;
  #L2d4df0.  v0.`com.google.crypto.tink.shaded.protobuf.k1$f.o` @type ^`int` := v1;
  #L2d4df4.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.k1$f` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.k1` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.k1$a` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$f;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/k1;Lcom/google/crypto/tink/shaded/protobuf/k1$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2d4e08.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$f;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/k1;)V` @kind direct;
  #L2d4e0e.  return @kind void;
}
procedure `java.util.Iterator` `a`(`com.google.crypto.tink.shaded.protobuf.k1$f` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$f;.a:()Ljava/util/Iterator;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2d4d3c.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.k1$f.q` @type ^`java.util.Iterator` @kind object;
  #L2d4d40.  if v0 != 0 then goto L2d4d64;
  #L2d4d44.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.k1$f.r` @type ^`com.google.crypto.tink.shaded.protobuf.k1` @kind object;
  #L2d4d48.  call temp:= `c`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1;.c:(Lcom/google/crypto/tink/shaded/protobuf/k1;)Ljava/util/Map;` @kind static;
  #L2d4d4e.  v0:= temp @kind object;
  #L2d4d50.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2d4d56.  v0:= temp @kind object;
  #L2d4d58.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2d4d5e.  v0:= temp @kind object;
  #L2d4d60.  v1.`com.google.crypto.tink.shaded.protobuf.k1$f.q` @type ^`java.util.Iterator` := v0 @kind object;
  #L2d4d64.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.k1$f.q` @type ^`java.util.Iterator` @kind object;
  #L2d4d68.  return v0 @kind object;
}
procedure `java.util.Map$Entry` `d`(`com.google.crypto.tink.shaded.protobuf.k1$f` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$f;.d:()Ljava/util/Map$Entry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d4d7c.  v0:= 1I;
  #L2d4d7e.  v2.`com.google.crypto.tink.shaded.protobuf.k1$f.p` @type ^`boolean` := v0 @kind boolean;
  #L2d4d82.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.k1$f.o` @type ^`int`;
  #L2d4d86.  v1:= v1 + v0 @kind int;
  #L2d4d88.  v2.`com.google.crypto.tink.shaded.protobuf.k1$f.o` @type ^`int` := v1;
  #L2d4d8c.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.k1$f.r` @type ^`com.google.crypto.tink.shaded.protobuf.k1` @kind object;
  #L2d4d90.  call temp:= `b`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1;.b:(Lcom/google/crypto/tink/shaded/protobuf/k1;)Ljava/util/List;` @kind static;
  #L2d4d96.  v0:= temp @kind object;
  #L2d4d98.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2d4d9e.  v0:= temp;
  #L2d4da0.  if v1 >= v0 then goto L2d4dc2;
  #L2d4da4.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.k1$f.r` @type ^`com.google.crypto.tink.shaded.protobuf.k1` @kind object;
  #L2d4da8.  call temp:= `b`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1;.b:(Lcom/google/crypto/tink/shaded/protobuf/k1;)Ljava/util/List;` @kind static;
  #L2d4dae.  v0:= temp @kind object;
  #L2d4db0.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.k1$f.o` @type ^`int`;
  #L2d4db4.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2d4dba.  v0:= temp @kind object;
  #L2d4dbc.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2d4dc0.  return v0 @kind object;
  #L2d4dc2.  call temp:= `a`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$f;.a:()Ljava/util/Iterator;` @kind direct;
  #L2d4dc8.  v0:= temp @kind object;
  #L2d4dca.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2d4dd0.  v0:= temp @kind object;
  #L2d4dd2.  goto L2d4dbc;
}
procedure `boolean` `hasNext`(`com.google.crypto.tink.shaded.protobuf.k1$f` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$f;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d4cbc.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.k1$f.o` @type ^`int`;
  #L2d4cc0.  v1:= 1I;
  #L2d4cc2.  v0:= v0 + v1 @kind int;
  #L2d4cc4.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.k1$f.r` @type ^`com.google.crypto.tink.shaded.protobuf.k1` @kind object;
  #L2d4cc8.  call temp:= `b`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1;.b:(Lcom/google/crypto/tink/shaded/protobuf/k1;)Ljava/util/List;` @kind static;
  #L2d4cce.  v2:= temp @kind object;
  #L2d4cd0.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2d4cd6.  v2:= temp;
  #L2d4cd8.  if v0 < v2 then goto L2d4d0c;
  #L2d4cdc.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.k1$f.r` @type ^`com.google.crypto.tink.shaded.protobuf.k1` @kind object;
  #L2d4ce0.  call temp:= `c`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1;.c:(Lcom/google/crypto/tink/shaded/protobuf/k1;)Ljava/util/Map;` @kind static;
  #L2d4ce6.  v0:= temp @kind object;
  #L2d4ce8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L2d4cee.  v0:= temp;
  #L2d4cf0.  if v0 != 0 then goto L2d4d0a;
  #L2d4cf4.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$f;.a:()Ljava/util/Iterator;` @kind direct;
  #L2d4cfa.  v0:= temp @kind object;
  #L2d4cfc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2d4d02.  v0:= temp;
  #L2d4d04.  if v0 == 0 then goto L2d4d0a;
  #L2d4d08.  goto L2d4d0c;
  #L2d4d0a.  v1:= 0I;
  #L2d4d0c.  return v1;
}
procedure `java.lang.Object` `next`(`com.google.crypto.tink.shaded.protobuf.k1$f` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$f;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2d4d20.  call temp:= `d`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$f;.d:()Ljava/util/Map$Entry;` @kind virtual;
  #L2d4d26.  v0:= temp @kind object;
  #L2d4d28.  return v0 @kind object;
}
procedure `void` `remove`(`com.google.crypto.tink.shaded.protobuf.k1$f` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$f;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d4e20.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.k1$f.p` @type ^`boolean` @kind boolean;
  #L2d4e24.  if v0 == 0 then goto L2d4e7c;
  #L2d4e28.  v0:= 0I;
  #L2d4e2a.  v3.`com.google.crypto.tink.shaded.protobuf.k1$f.p` @type ^`boolean` := v0 @kind boolean;
  #L2d4e2e.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.k1$f.r` @type ^`com.google.crypto.tink.shaded.protobuf.k1` @kind object;
  #L2d4e32.  call `a`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1;.a:(Lcom/google/crypto/tink/shaded/protobuf/k1;)V` @kind static;
  #L2d4e38.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.k1$f.o` @type ^`int`;
  #L2d4e3c.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.k1$f.r` @type ^`com.google.crypto.tink.shaded.protobuf.k1` @kind object;
  #L2d4e40.  call temp:= `b`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1;.b:(Lcom/google/crypto/tink/shaded/protobuf/k1;)Ljava/util/List;` @kind static;
  #L2d4e46.  v1:= temp @kind object;
  #L2d4e48.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2d4e4e.  v1:= temp;
  #L2d4e50.  if v0 >= v1 then goto L2d4e6c;
  #L2d4e54.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.k1$f.r` @type ^`com.google.crypto.tink.shaded.protobuf.k1` @kind object;
  #L2d4e58.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.k1$f.o` @type ^`int`;
  #L2d4e5c.  v2:= v1 + -1;
  #L2d4e60.  v3.`com.google.crypto.tink.shaded.protobuf.k1$f.o` @type ^`int` := v2;
  #L2d4e64.  call temp:= `d`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1;.d:(Lcom/google/crypto/tink/shaded/protobuf/k1;I)Ljava/lang/Object;` @kind static;
  #L2d4e6a.  goto L2d4e7a;
  #L2d4e6c.  call temp:= `a`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/k1$f;.a:()Ljava/util/Iterator;` @kind direct;
  #L2d4e72.  v0:= temp @kind object;
  #L2d4e74.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L2d4e7a.  return @kind void;
  #L2d4e7c.  v0:= new `java.lang.IllegalStateException`;
  #L2d4e80.  v1:= "remove() was called before next()" @kind object;
  #L2d4e84.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d4e8a.  throw v0;
}
