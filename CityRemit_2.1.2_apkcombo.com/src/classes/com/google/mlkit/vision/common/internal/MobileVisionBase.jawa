record `com.google.mlkit.vision.common.internal.MobileVisionBase` @kind class @AccessFlag PUBLIC extends `java.io.Closeable` @kind interface, `androidx.lifecycle.h` @kind interface {
  `java.util.concurrent.atomic.AtomicBoolean` `com.google.mlkit.vision.common.internal.MobileVisionBase.o` @AccessFlag PRIVATE_FINAL;
  `q8.f` `com.google.mlkit.vision.common.internal.MobileVisionBase.p` @AccessFlag PRIVATE_FINAL;
  `a5.b` `com.google.mlkit.vision.common.internal.MobileVisionBase.q` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `com.google.mlkit.vision.common.internal.MobileVisionBase.r` @AccessFlag PRIVATE_FINAL;
}
global `b4.d` `@@com.google.mlkit.vision.common.internal.MobileVisionBase.s` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.mlkit.vision.common.internal.MobileVisionBase.t` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/google/mlkit/vision/common/internal/MobileVisionBase;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2eaf50.  v0:= new `b4.d`;
  #L2eaf54.  v1:= "MobileVisionBase" @kind object;
  #L2eaf58.  v2:= "" @kind object;
  #L2eaf5c.  call `<init>`(v0, v1, v2) @signature `Lb4/d;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L2eaf62.  `@@com.google.mlkit.vision.common.internal.MobileVisionBase.s` @type ^`b4.d` := v0 @kind object;
  #L2eaf66.  return @kind void;
}
procedure `void` `<init>`(`com.google.mlkit.vision.common.internal.MobileVisionBase` v2 @kind this, `q8.f` v3 @kind object, `java.util.concurrent.Executor` v4 @kind object) @signature `Lcom/google/mlkit/vision/common/internal/MobileVisionBase;.<init>:(Lq8/f;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2eaf78.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2eaf7e.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L2eaf82.  v1:= 0I;
  #L2eaf84.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L2eaf8a.  v2.`com.google.mlkit.vision.common.internal.MobileVisionBase.o` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L2eaf8e.  v2.`com.google.mlkit.vision.common.internal.MobileVisionBase.p` @type ^`q8.f` := v3 @kind object;
  #L2eaf92.  v0:= new `a5.b`;
  #L2eaf96.  call `<init>`(v0) @signature `La5/b;.<init>:()V` @kind direct;
  #L2eaf9c.  v2.`com.google.mlkit.vision.common.internal.MobileVisionBase.q` @type ^`a5.b` := v0 @kind object;
  #L2eafa0.  v2.`com.google.mlkit.vision.common.internal.MobileVisionBase.r` @type ^`java.util.concurrent.Executor` := v4 @kind object;
  #L2eafa4.  call `c`(v3) @signature `Lq8/k;.c:()V` @kind virtual;
  #L2eafaa.  v1:= `@@t8.d.a` @type ^`t8.d` @kind object;
  #L2eafae.  call temp:= `b`(v0) @signature `La5/b;.b:()La5/a;` @kind virtual;
  #L2eafb4.  v0:= temp @kind object;
  #L2eafb6.  call temp:= `a`(v3, v4, v1, v0) @signature `Lq8/k;.a:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Callable;La5/a;)La5/l;` @kind virtual;
  #L2eafbc.  v3:= temp @kind object;
  #L2eafbe.  v4:= `@@com.google.mlkit.vision.common.internal.b.a` @type ^`com.google.mlkit.vision.common.internal.b` @kind object;
  #L2eafc2.  call temp:= `d`(v3, v4) @signature `La5/l;.d:(La5/g;)La5/l;` @kind virtual;
  #L2eafc8.  return @kind void;
}
procedure `void` `x`(`java.lang.Exception` v3 @kind object) @signature `Lcom/google/mlkit/vision/common/internal/MobileVisionBase;.x:(Ljava/lang/Exception;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L2eb034.  v0:= `@@com.google.mlkit.vision.common.internal.MobileVisionBase.s` @type ^`b4.d` @kind object;
  #L2eb038.  v1:= "MobileVisionBase" @kind object;
  #L2eb03c.  v2:= "Error preloading model resource" @kind object;
  #L2eb040.  call `d`(v0, v1, v2, v3) @signature `Lb4/d;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L2eb046.  return @kind void;
}
procedure `void` `close`(`com.google.mlkit.vision.common.internal.MobileVisionBase` v2 @kind this) @signature `Lcom/google/mlkit/vision/common/internal/MobileVisionBase;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2eafdc.  @monitorenter v2
  #L2eafde.  v0:= v2.`com.google.mlkit.vision.common.internal.MobileVisionBase.o` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L2eafe2.  v1:= 1I;
  #L2eafe4.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.getAndSet:(Z)Z` @kind virtual;
  #L2eafea.  v0:= temp;
  #L2eafec.  if v0 != 0 then goto L2eb00c;
  #L2eaff0.  v0:= v2.`com.google.mlkit.vision.common.internal.MobileVisionBase.q` @type ^`a5.b` @kind object;
  #L2eaff4.  call `a`(v0) @signature `La5/b;.a:()V` @kind virtual;
  #L2eaffa.  v0:= v2.`com.google.mlkit.vision.common.internal.MobileVisionBase.p` @type ^`q8.f` @kind object;
  #L2eaffe.  v1:= v2.`com.google.mlkit.vision.common.internal.MobileVisionBase.r` @type ^`java.util.concurrent.Executor` @kind object;
  #L2eb002.  call `e`(v0, v1) @signature `Lq8/k;.e:(Ljava/util/concurrent/Executor;)V` @kind virtual;
  #L2eb008.  @monitorexit v2
  #L2eb00a.  return @kind void;
  #L2eb00c.  @monitorexit v2
  #L2eb00e.  return @kind void;
  #L2eb010.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2eb012.  @monitorexit v2
  #L2eb014.  throw v0;
  catch `java.lang.Throwable` @[L2eafde..L2eb008] goto L2eb010;
}
procedure `a5.l` `s`(`com.google.mlkit.vision.common.internal.MobileVisionBase` v3 @kind this, `s8.a` v4 @kind object) @signature `Lcom/google/mlkit/vision/common/internal/MobileVisionBase;.s:(Ls8/a;)La5/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2eade8.  @monitorenter v3
  #L2eadea.  v0:= "InputImage can not be null" @kind object;
  #L2eadee.  call temp:= `k`(v4, v0) @signature `Lcom/google/android/gms/common/internal/h;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2eadf4.  v0:= v3.`com.google.mlkit.vision.common.internal.MobileVisionBase.o` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L2eadf8.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L2eadfe.  v0:= temp;
  #L2eae00.  if v0 == 0 then goto L2eae22;
  #L2eae04.  v4:= new `m8.a`;
  #L2eae08.  v0:= "This detector is already closed!" @kind object;
  #L2eae0c.  v1:= 14I;
  #L2eae10.  call `<init>`(v4, v0, v1) @signature `Lm8/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2eae16.  call temp:= `e`(v4) @signature `La5/o;.e:(Ljava/lang/Exception;)La5/l;` @kind static;
  #L2eae1c.  v4:= temp @kind object;
  #L2eae1e.  @monitorexit v3
  #L2eae20.  return v4 @kind object;
  #L2eae22.  call temp:= `k`(v4) @signature `Ls8/a;.k:()I` @kind virtual;
  #L2eae28.  v0:= temp;
  #L2eae2a.  v1:= 32I;
  #L2eae2e.  if v0 < v1 then goto L2eae68;
  #L2eae32.  call temp:= `g`(v4) @signature `Ls8/a;.g:()I` @kind virtual;
  #L2eae38.  v0:= temp;
  #L2eae3a.  if v0 < v1 then goto L2eae68;
  #L2eae3e.  v0:= v3.`com.google.mlkit.vision.common.internal.MobileVisionBase.p` @type ^`q8.f` @kind object;
  #L2eae42.  v1:= v3.`com.google.mlkit.vision.common.internal.MobileVisionBase.r` @type ^`java.util.concurrent.Executor` @kind object;
  #L2eae46.  v2:= new `com.google.mlkit.vision.common.internal.c`;
  #L2eae4a.  call `<init>`(v2, v3, v4) @signature `Lcom/google/mlkit/vision/common/internal/c;.<init>:(Lcom/google/mlkit/vision/common/internal/MobileVisionBase;Ls8/a;)V` @kind direct;
  #L2eae50.  v4:= v3.`com.google.mlkit.vision.common.internal.MobileVisionBase.q` @type ^`a5.b` @kind object;
  #L2eae54.  call temp:= `b`(v4) @signature `La5/b;.b:()La5/a;` @kind virtual;
  #L2eae5a.  v4:= temp @kind object;
  #L2eae5c.  call temp:= `a`(v0, v1, v2, v4) @signature `Lq8/k;.a:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Callable;La5/a;)La5/l;` @kind virtual;
  #L2eae62.  v4:= temp @kind object;
  #L2eae64.  @monitorexit v3
  #L2eae66.  return v4 @kind object;
  #L2eae68.  v4:= new `m8.a`;
  #L2eae6c.  v0:= "InputImage width and height should be at least 32!" @kind object;
  #L2eae70.  v1:= 3I;
  #L2eae72.  call `<init>`(v4, v0, v1) @signature `Lm8/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2eae78.  call temp:= `e`(v4) @signature `La5/o;.e:(Ljava/lang/Exception;)La5/l;` @kind static;
  #L2eae7e.  v4:= temp @kind object;
  #L2eae80.  @monitorexit v3
  #L2eae82.  return v4 @kind object;
  #L2eae84.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2eae86.  @monitorexit v3
  #L2eae88.  throw v4;
  catch `java.lang.Throwable` @[L2eadea..L2eae1e] goto L2eae84;
  catch `java.lang.Throwable` @[L2eae22..L2eae64] goto L2eae84;
  catch `java.lang.Throwable` @[L2eae68..L2eae80] goto L2eae84;
}
procedure `java.lang.Object` `v`(`com.google.mlkit.vision.common.internal.MobileVisionBase` v6 @kind this, `s8.a` v7 @kind object) @signature `Lcom/google/mlkit/vision/common/internal/MobileVisionBase;.v:(Ls8/a;)Ljava/lang/Object;` @AccessFlag FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2eaeb8.  v0:= "detectorTaskWithResource#run" @kind object;
  #L2eaebc.  call temp:= `i`(v0) @signature `Lq4/s8;.i:(Ljava/lang/String;)Lq4/s8;` @kind static;
  #L2eaec2.  v0:= temp @kind object;
  #L2eaec4.  call temp:= `c`(v0) @signature `Lq4/s8;.c:()Lq4/s8;` @kind virtual;
  #L2eaeca.  v1:= v6.`com.google.mlkit.vision.common.internal.MobileVisionBase.p` @type ^`q8.f` @kind object;
  #L2eaece.  call temp:= `i`(v1, v7) @signature `Lq8/f;.i:(Lq8/h;)Ljava/lang/Object;` @kind virtual;
  #L2eaed4.  v7:= temp @kind object;
  #L2eaed6.  call `close`(v0) @signature `Lq4/s8;.close:()V` @kind virtual;
  #L2eaedc.  return v7 @kind object;
  #L2eaede.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2eaee0.  call `close`(v0) @signature `Lq4/s8;.close:()V` @kind virtual;
  #L2eaee6.  goto L2eaf18;
  #L2eaee8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2eaeea.  v1:= 1I;
  #L2eaeec.  v2:= new `java.lang.Class`[v1];
  #L2eaef0.  v3:= constclass @type ^`java.lang.Throwable` @kind object;
  #L2eaef4.  v4:= 0I;
  #L2eaef6.  v2[v4]:= v3 @kind object;
  #L2eaefa.  v3:= constclass @type ^`java.lang.Throwable` @kind object;
  #L2eaefe.  v5:= "addSuppressed" @kind object;
  #L2eaf02.  call temp:= `getDeclaredMethod`(v3, v5, v2) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2eaf08.  v2:= temp @kind object;
  #L2eaf0a.  v1:= new `java.lang.Object`[v1];
  #L2eaf0e.  v1[v4]:= v0 @kind object;
  #L2eaf12.  call temp:= `invoke`(v2, v7, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2eaf18.  throw v7;
  catch `java.lang.Throwable` @[L2eaeca..L2eaed6] goto L2eaede;
  catch `java.lang.Throwable` @[L2eaee0..L2eaee6] goto L2eaee8;
  catch `java.lang.Exception` @[L2eaeec..L2eaf18] goto L2eaf18;
}
