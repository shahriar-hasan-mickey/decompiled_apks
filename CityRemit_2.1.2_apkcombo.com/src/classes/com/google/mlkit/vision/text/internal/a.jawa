record `com.google.mlkit.vision.text.internal.a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `r4.wa` `a`(`int` v1 ) @signature `Lcom/google/mlkit/vision/text/internal/a;.a:(I)Lr4/wa;` @AccessFlag STATIC {
    temp;
    v0;

  #L2eb3ac.  v0:= 1I;
  #L2eb3ae.  if v1 == v0 then goto L2eb3e8;
  #L2eb3b2.  v0:= 2I;
  #L2eb3b4.  if v1 == v0 then goto L2eb3e2;
  #L2eb3b8.  v0:= 3I;
  #L2eb3ba.  if v1 == v0 then goto L2eb3dc;
  #L2eb3be.  v0:= 4I;
  #L2eb3c0.  if v1 == v0 then goto L2eb3d6;
  #L2eb3c4.  v0:= 5I;
  #L2eb3c6.  if v1 == v0 then goto L2eb3d0;
  #L2eb3ca.  v1:= `@@r4.wa.p` @type ^`r4.wa` @kind object;
  #L2eb3ce.  return v1 @kind object;
  #L2eb3d0.  v1:= `@@r4.wa.u` @type ^`r4.wa` @kind object;
  #L2eb3d4.  return v1 @kind object;
  #L2eb3d6.  v1:= `@@r4.wa.t` @type ^`r4.wa` @kind object;
  #L2eb3da.  return v1 @kind object;
  #L2eb3dc.  v1:= `@@r4.wa.s` @type ^`r4.wa` @kind object;
  #L2eb3e0.  return v1 @kind object;
  #L2eb3e2.  v1:= `@@r4.wa.r` @type ^`r4.wa` @kind object;
  #L2eb3e6.  return v1 @kind object;
  #L2eb3e8.  v1:= `@@r4.wa.q` @type ^`r4.wa` @kind object;
  #L2eb3ec.  return v1 @kind object;
}
