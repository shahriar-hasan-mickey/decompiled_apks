record `com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory` @kind class @AccessFlag PUBLIC_FINAL extends `d8.x` @kind interface {
  `java.lang.Class` `com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.baseType` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.labelToSubtype` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.subtypeToLabel` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.typeFieldName` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;.<init>:(Ljava/lang/Class;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L2015d4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2015da.  v0:= new `java.util.LinkedHashMap`;
  #L2015de.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L2015e4.  v1.`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.labelToSubtype` @type ^`java.util.Map` := v0 @kind object;
  #L2015e8.  v0:= new `java.util.LinkedHashMap`;
  #L2015ec.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L2015f2.  v1.`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.subtypeToLabel` @type ^`java.util.Map` := v0 @kind object;
  #L2015f6.  if v3 == 0 then goto L201608;
  #L2015fa.  if v2 == 0 then goto L201608;
  #L2015fe.  v1.`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.baseType` @type ^`java.lang.Class` := v2 @kind object;
  #L201602.  v1.`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.typeFieldName` @type ^`java.lang.String` := v3 @kind object;
  #L201606.  return @kind void;
  #L201608.  v2:= 0I;
  #L20160a.  throw v2;
}
procedure `java.lang.String` `access$000`(`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory` v0 @kind object) @signature `Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;.access$000:(Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2015a4.  v0:= v0.`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.typeFieldName` @type ^`java.lang.String` @kind object;
  #L2015a8.  return v0 @kind object;
}
procedure `java.lang.Class` `access$100`(`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory` v0 @kind object) @signature `Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;.access$100:(Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;)Ljava/lang/Class;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L20158c.  v0:= v0.`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.baseType` @type ^`java.lang.Class` @kind object;
  #L201590.  return v0 @kind object;
}
procedure `java.util.Map` `access$200`(`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory` v0 @kind object) @signature `Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;.access$200:(Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2015bc.  v0:= v0.`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.subtypeToLabel` @type ^`java.util.Map` @kind object;
  #L2015c0.  return v0 @kind object;
}
procedure `com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory` `of`(`java.lang.Class` v2 @kind object) @signature `Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;.of:(Ljava/lang/Class;)Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L20140c.  v0:= new `com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory`;
  #L201410.  v1:= "type" @kind object;
  #L201414.  call `<init>`(v0, v2, v1) @signature `Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;.<init>:(Ljava/lang/Class;Ljava/lang/String;)V` @kind direct;
  #L20141a.  return v0 @kind object;
}
procedure `com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory` `of`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;.of:(Ljava/lang/Class;Ljava/lang/String;)Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20142c.  v0:= new `com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory`;
  #L201430.  call `<init>`(v0, v1, v2) @signature `Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;.<init>:(Ljava/lang/Class;Ljava/lang/String;)V` @kind direct;
  #L201436.  return v0 @kind object;
}
procedure `d8.w` `create`(`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory` v5 @kind this, `d8.e` v6 @kind object, `k8.a` v7 @kind object) @signature `Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;.create:(Ld8/e;Lk8/a;)Ld8/w;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2014d0.  call temp:= `c`(v7) @signature `Lk8/a;.c:()Ljava/lang/Class;` @kind virtual;
  #L2014d6.  v7:= temp @kind object;
  #L2014d8.  v0:= v5.`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.baseType` @type ^`java.lang.Class` @kind object;
  #L2014dc.  if v7 == v0 then goto L2014e4;
  #L2014e0.  v6:= 0I;
  #L2014e2.  return v6 @kind object;
  #L2014e4.  v7:= new `java.util.LinkedHashMap`;
  #L2014e8.  call `<init>`(v7) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L2014ee.  v0:= new `java.util.LinkedHashMap`;
  #L2014f2.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L2014f8.  v1:= v5.`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.labelToSubtype` @type ^`java.util.Map` @kind object;
  #L2014fc.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L201502.  v1:= temp @kind object;
  #L201504.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L20150a.  v1:= temp @kind object;
  #L20150c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L201512.  v2:= temp;
  #L201514.  if v2 == 0 then goto L201566;
  #L201518.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L20151e.  v2:= temp @kind object;
  #L201520.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L201524.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L20152a.  v3:= temp @kind object;
  #L20152c.  v3:= (`java.lang.Class`) v3 @kind object;
  #L201530.  call temp:= `a`(v3) @signature `Lk8/a;.a:(Ljava/lang/Class;)Lk8/a;` @kind static;
  #L201536.  v3:= temp @kind object;
  #L201538.  call temp:= `l`(v6, v5, v3) @signature `Ld8/e;.l:(Ld8/x;Lk8/a;)Ld8/w;` @kind virtual;
  #L20153e.  v3:= temp @kind object;
  #L201540.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L201546.  v4:= temp @kind object;
  #L201548.  v4:= (`java.lang.String`) v4 @kind object;
  #L20154c.  call temp:= `put`(v7, v4, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L201552.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L201558.  v2:= temp @kind object;
  #L20155a.  v2:= (`java.lang.Class`) v2 @kind object;
  #L20155e.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L201564.  goto L20150c;
  #L201566.  v6:= new `com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory$a`;
  #L20156a.  call `<init>`(v6, v5, v7, v0) @signature `Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory$a;.<init>:(Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;Ljava/util/Map;Ljava/util/Map;)V` @kind direct;
  #L201570.  call temp:= `b`(v6) @signature `Ld8/w;.b:()Ld8/w;` @kind virtual;
  #L201576.  v6:= temp @kind object;
  #L201578.  return v6 @kind object;
}
procedure `com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory` `registerSubtype`(`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;.registerSubtype:(Ljava/lang/Class;)Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L201448.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L20144e.  v0:= temp @kind object;
  #L201450.  call temp:= `registerSubtype`(v1, v2, v0) @signature `Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;.registerSubtype:(Ljava/lang/Class;Ljava/lang/String;)Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;` @kind virtual;
  #L201456.  v2:= temp @kind object;
  #L201458.  return v2 @kind object;
}
procedure `com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory` `registerSubtype`(`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;.registerSubtype:(Ljava/lang/Class;Ljava/lang/String;)Lcom/dexterous/flutterlocalnotifications/RuntimeTypeAdapterFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20146c.  if v2 == 0 then goto L2014ba;
  #L201470.  if v3 == 0 then goto L2014ba;
  #L201474.  v0:= v1.`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.subtypeToLabel` @type ^`java.util.Map` @kind object;
  #L201478.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L20147e.  v0:= temp;
  #L201480.  if v0 != 0 then goto L2014aa;
  #L201484.  v0:= v1.`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.labelToSubtype` @type ^`java.util.Map` @kind object;
  #L201488.  call temp:= `containsKey`(v0, v3) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L20148e.  v0:= temp;
  #L201490.  if v0 != 0 then goto L2014aa;
  #L201494.  v0:= v1.`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.labelToSubtype` @type ^`java.util.Map` @kind object;
  #L201498.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L20149e.  v0:= v1.`com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory.subtypeToLabel` @type ^`java.util.Map` @kind object;
  #L2014a2.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2014a8.  return v1 @kind object;
  #L2014aa.  v2:= new `java.lang.IllegalArgumentException`;
  #L2014ae.  v3:= "types and labels must be unique" @kind object;
  #L2014b2.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2014b8.  throw v2;
  #L2014ba.  v2:= 0I;
  #L2014bc.  throw v2;
}
