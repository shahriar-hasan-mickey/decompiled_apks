record `b4.i$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `b4.i$a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `b4.i$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`b4.i$a` v0 @kind this, `java.lang.Object` v1 @kind object, `b4.f0` v2 @kind object) @signature `Lb4/i$a;.<init>:(Ljava/lang/Object;Lb4/f0;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1ef040.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ef046.  call temp:= `j`(v1) @signature `Lcom/google/android/gms/common/internal/h;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1ef04c.  v0.`b4.i$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L1ef050.  v1:= new `java.util.ArrayList`;
  #L1ef054.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1ef05a.  v0.`b4.i$a.a` @type ^`java.util.List` := v1 @kind object;
  #L1ef05e.  return @kind void;
}
procedure `b4.i$a` `a`(`b4.i$a` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lb4/i$a;.a:(Ljava/lang/String;Ljava/lang/Object;)Lb4/i$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1eef54.  v0:= v2.`b4.i$a.a` @type ^`java.util.List` @kind object;
  #L1eef58.  call temp:= `j`(v3) @signature `Lcom/google/android/gms/common/internal/h;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1eef5e.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1eef64.  v4:= temp @kind object;
  #L1eef66.  v1:= new `java.lang.StringBuilder`;
  #L1eef6a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1eef70.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1eef76.  v3:= "=" @kind object;
  #L1eef7a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1eef80.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1eef86.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1eef8c.  v3:= temp @kind object;
  #L1eef8e.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1eef94.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`b4.i$a` v4 @kind this) @signature `Lb4/i$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1eefa8.  v0:= new `java.lang.StringBuilder`;
  #L1eefac.  v1:= 100I;
  #L1eefb0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L1eefb6.  v1:= v4.`b4.i$a.b` @type ^`java.lang.Object` @kind object;
  #L1eefba.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1eefc0.  v1:= temp @kind object;
  #L1eefc2.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1eefc8.  v1:= temp @kind object;
  #L1eefca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1eefd0.  v1:= 123I;
  #L1eefd4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1eefda.  v1:= v4.`b4.i$a.a` @type ^`java.util.List` @kind object;
  #L1eefde.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1eefe4.  v1:= temp;
  #L1eefe6.  v2:= 0I;
  #L1eefe8.  if v2 >= v1 then goto L1ef01a;
  #L1eefec.  v3:= v4.`b4.i$a.a` @type ^`java.util.List` @kind object;
  #L1eeff0.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1eeff6.  v3:= temp @kind object;
  #L1eeff8.  v3:= (`java.lang.String`) v3 @kind object;
  #L1eeffc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef002.  v3:= v1 + -1;
  #L1ef006.  if v2 >= v3 then goto L1ef014;
  #L1ef00a.  v3:= ", " @kind object;
  #L1ef00e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef014.  v2:= v2 + 1;
  #L1ef018.  goto L1eefe8;
  #L1ef01a.  v1:= 125I;
  #L1ef01e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ef024.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ef02a.  v0:= temp @kind object;
  #L1ef02c.  return v0 @kind object;
}
