record `b4.i` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `a`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lb4/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1ef090.  v0:= 0I;
  #L1ef092.  v1:= 1I;
  #L1ef094.  if v2 == v3 then goto L1ef0ac;
  #L1ef098.  if v2 == 0 then goto L1ef0ae;
  #L1ef09c.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ef0a2.  v2:= temp;
  #L1ef0a4.  if v2 == 0 then goto L1ef0aa;
  #L1ef0a8.  goto L1ef0ac;
  #L1ef0aa.  return v0;
  #L1ef0ac.  v0:= 1I;
  #L1ef0ae.  return v0;
}
procedure `int` `b`(`java.lang.Object`[] v0 @kind object) @signature `Lb4/i;.b:([Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1ef0c0.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L1ef0c6.  v0:= temp;
  #L1ef0c8.  return v0;
}
procedure `b4.i$a` `c`(`java.lang.Object` v2 @kind object) @signature `Lb4/i;.c:(Ljava/lang/Object;)Lb4/i$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1ef070.  v0:= new `b4.i$a`;
  #L1ef074.  v1:= 0I;
  #L1ef076.  call `<init>`(v0, v2, v1) @signature `Lb4/i$a;.<init>:(Ljava/lang/Object;Lb4/f0;)V` @kind direct;
  #L1ef07c.  return v0 @kind object;
}
