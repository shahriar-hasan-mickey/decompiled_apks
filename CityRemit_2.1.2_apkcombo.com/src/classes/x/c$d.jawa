record `x.c$d` @kind class @AccessFlag  extends `android.media.MediaCodec$Callback` @kind class {
  `boolean` `x.c$d.a` @AccessFlag PRIVATE;
  `x.c` `x.c$d.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x.c$d` v0 @kind this, `x.c` v1 @kind object) @signature `Lx/c$d;.<init>:(Lx/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4cc8c0.  v0.`x.c$d.b` @type ^`x.c` := v1 @kind object;
  #L4cc8c4.  call `<init>`(v0) @signature `Landroid/media/MediaCodec$Callback;.<init>:()V` @kind direct;
  #L4cc8ca.  return @kind void;
}
procedure `void` `a`(`x.c$d` v2 @kind this, `android.media.MediaCodec$CodecException` v3 @kind object) @signature `Lx/c$d;.a:(Landroid/media/MediaCodec$CodecException;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4ccaf0.  v0:= v2.`x.c$d.b` @type ^`x.c` @kind object;
  #L4ccaf4.  call `G`(v0) @signature `Lx/c;.G:()V` @kind virtual;
  #L4ccafa.  if v3 != 0 then goto L4ccb0e;
  #L4ccafe.  v3:= v2.`x.c$d.b` @type ^`x.c` @kind object;
  #L4ccb02.  v0:= v3.`x.c.p` @type ^`x.c$c` @kind object;
  #L4ccb06.  call `a`(v0, v3) @signature `Lx/c$c;.a:(Lx/c;)V` @kind virtual;
  #L4ccb0c.  goto L4ccb1c;
  #L4ccb0e.  v0:= v2.`x.c$d.b` @type ^`x.c` @kind object;
  #L4ccb12.  v1:= v0.`x.c.p` @type ^`x.c$c` @kind object;
  #L4ccb16.  call `c`(v1, v0, v3) @signature `Lx/c$c;.c:(Lx/c;Landroid/media/MediaCodec$CodecException;)V` @kind virtual;
  #L4ccb1c.  return @kind void;
}
procedure `void` `onError`(`x.c$d` v1 @kind this, `android.media.MediaCodec` v2 @kind object, `android.media.MediaCodec$CodecException` v3 @kind object) @signature `Lx/c$d;.onError:(Landroid/media/MediaCodec;Landroid/media/MediaCodec$CodecException;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4cc8dc.  v0:= v1.`x.c$d.b` @type ^`x.c` @kind object;
  #L4cc8e0.  v0:= v0.`x.c.o` @type ^`android.media.MediaCodec` @kind object;
  #L4cc8e4.  if v2 == v0 then goto L4cc8ea;
  #L4cc8e8.  return @kind void;
  #L4cc8ea.  v2:= new `java.lang.StringBuilder`;
  #L4cc8ee.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4cc8f4.  v0:= "onError: " @kind object;
  #L4cc8f8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cc8fe.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cc904.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4cc90a.  v2:= temp @kind object;
  #L4cc90c.  v0:= "HeifEncoder" @kind object;
  #L4cc910.  call temp:= `e`(v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4cc916.  call `a`(v1, v3) @signature `Lx/c$d;.a:(Landroid/media/MediaCodec$CodecException;)V` @kind direct;
  #L4cc91c.  return @kind void;
}
procedure `void` `onInputBufferAvailable`(`x.c$d` v2 @kind this, `android.media.MediaCodec` v3 @kind object, `int` v4 ) @signature `Lx/c$d;.onInputBufferAvailable:(Landroid/media/MediaCodec;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4cc930.  v0:= v2.`x.c$d.b` @type ^`x.c` @kind object;
  #L4cc934.  v1:= v0.`x.c.o` @type ^`android.media.MediaCodec` @kind object;
  #L4cc938.  if v3 != v1 then goto L4cc962;
  #L4cc93c.  v3:= v0.`x.c.C` @type ^`boolean` @kind boolean;
  #L4cc940.  if v3 == 0 then goto L4cc946;
  #L4cc944.  goto L4cc962;
  #L4cc946.  v3:= v0.`x.c.I` @type ^`java.util.ArrayList` @kind object;
  #L4cc94a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4cc950.  v4:= temp @kind object;
  #L4cc952.  call temp:= `add`(v3, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4cc958.  v3:= v2.`x.c$d.b` @type ^`x.c` @kind object;
  #L4cc95c.  call `s`(v3) @signature `Lx/c;.s:()V` @kind virtual;
  #L4cc962.  return @kind void;
}
procedure `void` `onOutputBufferAvailable`(`x.c$d` v4 @kind this, `android.media.MediaCodec` v5 @kind object, `int` v6 , `android.media.MediaCodec$BufferInfo` v7 @kind object) @signature `Lx/c$d;.onOutputBufferAvailable:(Landroid/media/MediaCodec;ILandroid/media/MediaCodec$BufferInfo;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4cc974.  v0:= v4.`x.c$d.b` @type ^`x.c` @kind object;
  #L4cc978.  v0:= v0.`x.c.o` @type ^`android.media.MediaCodec` @kind object;
  #L4cc97c.  if v5 != v0 then goto L4cca18;
  #L4cc980.  v0:= v4.`x.c$d.a` @type ^`boolean` @kind boolean;
  #L4cc984.  if v0 == 0 then goto L4cc98a;
  #L4cc988.  goto L4cca18;
  #L4cc98a.  v0:= v7.`android.media.MediaCodec$BufferInfo.size` @type ^`int`;
  #L4cc98e.  if v0 <= 0 then goto L4cc9e4;
  #L4cc992.  v0:= v7.`android.media.MediaCodec$BufferInfo.flags` @type ^`int`;
  #L4cc996.  v0:= v0 ^& 2;
  #L4cc99a.  if v0 != 0 then goto L4cc9e4;
  #L4cc99e.  call temp:= `getOutputBuffer`(v5, v6) @signature `Landroid/media/MediaCodec;.getOutputBuffer:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L4cc9a4.  v0:= temp @kind object;
  #L4cc9a6.  v1:= v7.`android.media.MediaCodec$BufferInfo.offset` @type ^`int`;
  #L4cc9aa.  call temp:= `position`(v0, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L4cc9b0.  v1:= v7.`android.media.MediaCodec$BufferInfo.offset` @type ^`int`;
  #L4cc9b4.  v2:= v7.`android.media.MediaCodec$BufferInfo.size` @type ^`int`;
  #L4cc9b8.  v1:= v1 + v2 @kind int;
  #L4cc9ba.  call temp:= `limit`(v0, v1) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L4cc9c0.  v1:= v4.`x.c$d.b` @type ^`x.c` @kind object;
  #L4cc9c4.  v1:= v1.`x.c.J` @type ^`x.c$e` @kind object;
  #L4cc9c8.  if v1 == 0 then goto L4cc9d6;
  #L4cc9cc.  v2:= v7.`android.media.MediaCodec$BufferInfo.presentationTimeUs` @type ^`long` @kind wide;
  #L4cc9d0.  call `e`(v1, v2) @signature `Lx/c$e;.e:(J)V` @kind virtual;
  #L4cc9d6.  v1:= v4.`x.c$d.b` @type ^`x.c` @kind object;
  #L4cc9da.  v2:= v1.`x.c.p` @type ^`x.c$c` @kind object;
  #L4cc9de.  call `b`(v2, v1, v0) @signature `Lx/c$c;.b:(Lx/c;Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L4cc9e4.  v0:= v4.`x.c$d.a` @type ^`boolean` @kind boolean;
  #L4cc9e8.  v7:= v7.`android.media.MediaCodec$BufferInfo.flags` @type ^`int`;
  #L4cc9ec.  v7:= v7 ^& 4;
  #L4cc9f0.  v1:= 0I;
  #L4cc9f2.  if v7 == 0 then goto L4cc9fa;
  #L4cc9f6.  v7:= 1I;
  #L4cc9f8.  goto L4cc9fc;
  #L4cc9fa.  v7:= 0I;
  #L4cc9fc.  v7:= v7 ^| v0 @kind int;
  #L4cc9fe.  v4.`x.c$d.a` @type ^`boolean` := v7 @kind boolean;
  #L4cca02.  call `releaseOutputBuffer`(v5, v6, v1) @signature `Landroid/media/MediaCodec;.releaseOutputBuffer:(IZ)V` @kind virtual;
  #L4cca08.  v5:= v4.`x.c$d.a` @type ^`boolean` @kind boolean;
  #L4cca0c.  if v5 == 0 then goto L4cca18;
  #L4cca10.  v5:= 0I;
  #L4cca12.  call `a`(v4, v5) @signature `Lx/c$d;.a:(Landroid/media/MediaCodec$CodecException;)V` @kind direct;
  #L4cca18.  return @kind void;
}
procedure `void` `onOutputFormatChanged`(`x.c$d` v2 @kind this, `android.media.MediaCodec` v3 @kind object, `android.media.MediaFormat` v4 @kind object) @signature `Lx/c$d;.onOutputFormatChanged:(Landroid/media/MediaCodec;Landroid/media/MediaFormat;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4cca2c.  v0:= v2.`x.c$d.b` @type ^`x.c` @kind object;
  #L4cca30.  v0:= v0.`x.c.o` @type ^`android.media.MediaCodec` @kind object;
  #L4cca34.  if v3 == v0 then goto L4cca3a;
  #L4cca38.  return @kind void;
  #L4cca3a.  v3:= "mime" @kind object;
  #L4cca3e.  call temp:= `getString`(v4, v3) @signature `Landroid/media/MediaFormat;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4cca44.  v0:= temp @kind object;
  #L4cca46.  v1:= "image/vnd.android.heic" @kind object;
  #L4cca4a.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4cca50.  v0:= temp;
  #L4cca52.  if v0 != 0 then goto L4ccad0;
  #L4cca56.  call `setString`(v4, v3, v1) @signature `Landroid/media/MediaFormat;.setString:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L4cca5c.  v3:= v2.`x.c$d.b` @type ^`x.c` @kind object;
  #L4cca60.  v3:= v3.`x.c.t` @type ^`int`;
  #L4cca64.  v0:= "width" @kind object;
  #L4cca68.  call `setInteger`(v4, v0, v3) @signature `Landroid/media/MediaFormat;.setInteger:(Ljava/lang/String;I)V` @kind virtual;
  #L4cca6e.  v3:= v2.`x.c$d.b` @type ^`x.c` @kind object;
  #L4cca72.  v3:= v3.`x.c.u` @type ^`int`;
  #L4cca76.  v0:= "height" @kind object;
  #L4cca7a.  call `setInteger`(v4, v0, v3) @signature `Landroid/media/MediaFormat;.setInteger:(Ljava/lang/String;I)V` @kind virtual;
  #L4cca80.  v3:= v2.`x.c$d.b` @type ^`x.c` @kind object;
  #L4cca84.  v0:= v3.`x.c.A` @type ^`boolean` @kind boolean;
  #L4cca88.  if v0 == 0 then goto L4ccad0;
  #L4cca8c.  v3:= v3.`x.c.v` @type ^`int`;
  #L4cca90.  v0:= "tile-width" @kind object;
  #L4cca94.  call `setInteger`(v4, v0, v3) @signature `Landroid/media/MediaFormat;.setInteger:(Ljava/lang/String;I)V` @kind virtual;
  #L4cca9a.  v3:= v2.`x.c$d.b` @type ^`x.c` @kind object;
  #L4cca9e.  v3:= v3.`x.c.w` @type ^`int`;
  #L4ccaa2.  v0:= "tile-height" @kind object;
  #L4ccaa6.  call `setInteger`(v4, v0, v3) @signature `Landroid/media/MediaFormat;.setInteger:(Ljava/lang/String;I)V` @kind virtual;
  #L4ccaac.  v3:= v2.`x.c$d.b` @type ^`x.c` @kind object;
  #L4ccab0.  v3:= v3.`x.c.x` @type ^`int`;
  #L4ccab4.  v0:= "grid-rows" @kind object;
  #L4ccab8.  call `setInteger`(v4, v0, v3) @signature `Landroid/media/MediaFormat;.setInteger:(Ljava/lang/String;I)V` @kind virtual;
  #L4ccabe.  v3:= v2.`x.c$d.b` @type ^`x.c` @kind object;
  #L4ccac2.  v3:= v3.`x.c.y` @type ^`int`;
  #L4ccac6.  v0:= "grid-cols" @kind object;
  #L4ccaca.  call `setInteger`(v4, v0, v3) @signature `Landroid/media/MediaFormat;.setInteger:(Ljava/lang/String;I)V` @kind virtual;
  #L4ccad0.  v3:= v2.`x.c$d.b` @type ^`x.c` @kind object;
  #L4ccad4.  v0:= v3.`x.c.p` @type ^`x.c$c` @kind object;
  #L4ccad8.  call `d`(v0, v3, v4) @signature `Lx/c$c;.d:(Lx/c;Landroid/media/MediaFormat;)V` @kind virtual;
  #L4ccade.  return @kind void;
}
