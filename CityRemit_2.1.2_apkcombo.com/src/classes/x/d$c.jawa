record `x.d$c` @kind class @AccessFlag  extends `x.c$c` @kind class {
  `boolean` `x.d$c.a` @AccessFlag PRIVATE;
  `x.d` `x.d$c.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`x.d$c` v0 @kind this, `x.d` v1 @kind object) @signature `Lx/d$c;.<init>:(Lx/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4cdc78.  v0.`x.d$c.b` @type ^`x.d` := v1 @kind object;
  #L4cdc7c.  call `<init>`(v0) @signature `Lx/c$c;.<init>:()V` @kind direct;
  #L4cdc82.  return @kind void;
}
procedure `void` `e`(`x.d$c` v1 @kind this, `java.lang.Exception` v2 @kind object) @signature `Lx/d$c;.e:(Ljava/lang/Exception;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4cded4.  v0:= v1.`x.d$c.a` @type ^`boolean` @kind boolean;
  #L4cded8.  if v0 == 0 then goto L4cdede;
  #L4cdedc.  return @kind void;
  #L4cdede.  v0:= 1I;
  #L4cdee0.  v1.`x.d$c.a` @type ^`boolean` := v0 @kind boolean;
  #L4cdee4.  v0:= v1.`x.d$c.b` @type ^`x.d` @kind object;
  #L4cdee8.  v0:= v0.`x.d.v` @type ^`x.d$d` @kind object;
  #L4cdeec.  call `a`(v0, v2) @signature `Lx/d$d;.a:(Ljava/lang/Exception;)V` @kind virtual;
  #L4cdef2.  return @kind void;
}
procedure `void` `a`(`x.d$c` v0 @kind this, `x.c` v1 @kind object) @signature `Lx/d$c;.a:(Lx/c;)V` @AccessFlag PUBLIC {
    temp;

  #L4cdc94.  v1:= 0I;
  #L4cdc96.  call `e`(v0, v1) @signature `Lx/d$c;.e:(Ljava/lang/Exception;)V` @kind direct;
  #L4cdc9c.  return @kind void;
}
procedure `void` `b`(`x.d$c` v8 @kind this, `x.c` v9 @kind object, `java.nio.ByteBuffer` v10 @kind object) @signature `Lx/d$c;.b:(Lx/c;Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4cdcb0.  v9:= v8.`x.d$c.a` @type ^`boolean` @kind boolean;
  #L4cdcb4.  if v9 == 0 then goto L4cdcba;
  #L4cdcb8.  return @kind void;
  #L4cdcba.  v9:= v8.`x.d$c.b` @type ^`x.d` @kind object;
  #L4cdcbe.  v0:= v9.`x.d.z` @type ^`int`[] @kind object;
  #L4cdcc2.  if v0 != 0 then goto L4cdcdc;
  #L4cdcc6.  v9:= new `java.lang.IllegalStateException`;
  #L4cdcca.  v10:= "Output buffer received before format info" @kind object;
  #L4cdcce.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4cdcd4.  call `e`(v8, v9) @signature `Lx/d$c;.e:(Ljava/lang/Exception;)V` @kind direct;
  #L4cdcda.  return @kind void;
  #L4cdcdc.  v0:= v9.`x.d.A` @type ^`int`;
  #L4cdce0.  v1:= v9.`x.d.t` @type ^`int`;
  #L4cdce4.  v9:= v9.`x.d.r` @type ^`int`;
  #L4cdce8.  v1:= v1 * v9 @kind int;
  #L4cdcec.  if v0 >= v1 then goto L4cdd38;
  #L4cdcf0.  v9:= new `android.media.MediaCodec$BufferInfo`;
  #L4cdcf4.  call `<init>`(v9) @signature `Landroid/media/MediaCodec$BufferInfo;.<init>:()V` @kind direct;
  #L4cdcfa.  call temp:= `position`(v10) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L4cdd00.  v3:= temp;
  #L4cdd02.  call temp:= `remaining`(v10) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L4cdd08.  v4:= temp;
  #L4cdd0a.  v5:= 0L;
  #L4cdd0e.  v7:= 0I;
  #L4cdd10.  v2:= v9 @kind object;
  #L4cdd12.  call `set`(v2, v3, v4, v5, v7) @signature `Landroid/media/MediaCodec$BufferInfo;.set:(IIJI)V` @kind virtual;
  #L4cdd18.  v0:= v8.`x.d$c.b` @type ^`x.d` @kind object;
  #L4cdd1c.  v1:= v0.`x.d.w` @type ^`android.media.MediaMuxer` @kind object;
  #L4cdd20.  v2:= v0.`x.d.z` @type ^`int`[] @kind object;
  #L4cdd24.  v3:= v0.`x.d.A` @type ^`int`;
  #L4cdd28.  v0:= v0.`x.d.r` @type ^`int`;
  #L4cdd2c.  v3:= v3 / v0 @kind int;
  #L4cdd2e.  v0:= v2[v3];
  #L4cdd32.  call `writeSampleData`(v1, v0, v10, v9) @signature `Landroid/media/MediaMuxer;.writeSampleData:(ILjava/nio/ByteBuffer;Landroid/media/MediaCodec$BufferInfo;)V` @kind virtual;
  #L4cdd38.  v9:= v8.`x.d$c.b` @type ^`x.d` @kind object;
  #L4cdd3c.  v10:= v9.`x.d.A` @type ^`int`;
  #L4cdd40.  v10:= v10 + 1;
  #L4cdd44.  v9.`x.d.A` @type ^`int` := v10;
  #L4cdd48.  v0:= v9.`x.d.t` @type ^`int`;
  #L4cdd4c.  v9:= v9.`x.d.r` @type ^`int`;
  #L4cdd50.  v0:= v0 * v9 @kind int;
  #L4cdd54.  if v10 != v0 then goto L4cdd60;
  #L4cdd58.  v9:= 0I;
  #L4cdd5a.  call `e`(v8, v9) @signature `Lx/d$c;.e:(Ljava/lang/Exception;)V` @kind direct;
  #L4cdd60.  return @kind void;
}
procedure `void` `c`(`x.d$c` v0 @kind this, `x.c` v1 @kind object, `android.media.MediaCodec$CodecException` v2 @kind object) @signature `Lx/d$c;.c:(Lx/c;Landroid/media/MediaCodec$CodecException;)V` @AccessFlag PUBLIC {
    temp;

  #L4cdd74.  call `e`(v0, v2) @signature `Lx/d$c;.e:(Ljava/lang/Exception;)V` @kind direct;
  #L4cdd7a.  return @kind void;
}
procedure `void` `d`(`x.d$c` v4 @kind this, `x.c` v5 @kind object, `android.media.MediaFormat` v6 @kind object) @signature `Lx/d$c;.d:(Lx/c;Landroid/media/MediaFormat;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4cdd8c.  v5:= v4.`x.d$c.a` @type ^`boolean` @kind boolean;
  #L4cdd90.  if v5 == 0 then goto L4cdd96;
  #L4cdd94.  return @kind void;
  #L4cdd96.  v5:= v4.`x.d$c.b` @type ^`x.d` @kind object;
  #L4cdd9a.  v5:= v5.`x.d.z` @type ^`int`[] @kind object;
  #L4cdd9e.  if v5 == 0 then goto L4cddb8;
  #L4cdda2.  v5:= new `java.lang.IllegalStateException`;
  #L4cdda6.  v6:= "Output format changed after muxer started" @kind object;
  #L4cddaa.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4cddb0.  call `e`(v4, v5) @signature `Lx/d$c;.e:(Ljava/lang/Exception;)V` @kind direct;
  #L4cddb6.  return @kind void;
  #L4cddb8.  v5:= 1I;
  #L4cddba.  v0:= "grid-rows" @kind object;
  #L4cddbe.  call temp:= `getInteger`(v6, v0) @signature `Landroid/media/MediaFormat;.getInteger:(Ljava/lang/String;)I` @kind virtual;
  #L4cddc4.  v0:= temp;
  #L4cddc6.  v1:= "grid-cols" @kind object;
  #L4cddca.  call temp:= `getInteger`(v6, v1) @signature `Landroid/media/MediaFormat;.getInteger:(Ljava/lang/String;)I` @kind virtual;
  #L4cddd0.  v1:= temp;
  #L4cddd2.  v2:= v4.`x.d$c.b` @type ^`x.d` @kind object;
  #L4cddd6.  v0:= v0 * v1 @kind int;
  #L4cddda.  v2.`x.d.r` @type ^`int` := v0;
  #L4cddde.  goto L4cdde8;
  #L4cdde0.  v0:= v4.`x.d$c.b` @type ^`x.d` @kind object;
  #L4cdde4.  v0.`x.d.r` @type ^`int` := v5;
  #L4cdde8.  v0:= v4.`x.d$c.b` @type ^`x.d` @kind object;
  #L4cddec.  v1:= v0.`x.d.t` @type ^`int`;
  #L4cddf0.  v1:= new `int`[v1];
  #L4cddf4.  v0.`x.d.z` @type ^`int`[] := v1 @kind object;
  #L4cddf8.  v0:= v0.`x.d.s` @type ^`int`;
  #L4cddfc.  if v0 <= 0 then goto L4cde46;
  #L4cde00.  v0:= new `java.lang.StringBuilder`;
  #L4cde04.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4cde0a.  v1:= "setting rotation: " @kind object;
  #L4cde0e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cde14.  v1:= v4.`x.d$c.b` @type ^`x.d` @kind object;
  #L4cde18.  v1:= v1.`x.d.s` @type ^`int`;
  #L4cde1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4cde22.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4cde28.  v0:= temp @kind object;
  #L4cde2a.  v1:= "HeifWriter" @kind object;
  #L4cde2e.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4cde34.  v0:= v4.`x.d$c.b` @type ^`x.d` @kind object;
  #L4cde38.  v1:= v0.`x.d.w` @type ^`android.media.MediaMuxer` @kind object;
  #L4cde3c.  v0:= v0.`x.d.s` @type ^`int`;
  #L4cde40.  call `setOrientationHint`(v1, v0) @signature `Landroid/media/MediaMuxer;.setOrientationHint:(I)V` @kind virtual;
  #L4cde46.  v0:= 0I;
  #L4cde48.  v1:= 0I;
  #L4cde4a.  v2:= v4.`x.d$c.b` @type ^`x.d` @kind object;
  #L4cde4e.  v3:= v2.`x.d.z` @type ^`int`[] @kind object;
  #L4cde52.  v3:= length @variable v3;
  #L4cde54.  if v1 >= v3 then goto L4cde8e;
  #L4cde58.  v2:= v2.`x.d.u` @type ^`int`;
  #L4cde5c.  if v1 != v2 then goto L4cde64;
  #L4cde60.  v2:= 1I;
  #L4cde62.  goto L4cde66;
  #L4cde64.  v2:= 0I;
  #L4cde66.  v3:= "is-default" @kind object;
  #L4cde6a.  call `setInteger`(v6, v3, v2) @signature `Landroid/media/MediaFormat;.setInteger:(Ljava/lang/String;I)V` @kind virtual;
  #L4cde70.  v2:= v4.`x.d$c.b` @type ^`x.d` @kind object;
  #L4cde74.  v3:= v2.`x.d.z` @type ^`int`[] @kind object;
  #L4cde78.  v2:= v2.`x.d.w` @type ^`android.media.MediaMuxer` @kind object;
  #L4cde7c.  call temp:= `addTrack`(v2, v6) @signature `Landroid/media/MediaMuxer;.addTrack:(Landroid/media/MediaFormat;)I` @kind virtual;
  #L4cde82.  v2:= temp;
  #L4cde84.  v3[v1]:= v2;
  #L4cde88.  v1:= v1 + 1;
  #L4cde8c.  goto L4cde4a;
  #L4cde8e.  v6:= v2.`x.d.w` @type ^`android.media.MediaMuxer` @kind object;
  #L4cde92.  call `start`(v6) @signature `Landroid/media/MediaMuxer;.start:()V` @kind virtual;
  #L4cde98.  v6:= v4.`x.d$c.b` @type ^`x.d` @kind object;
  #L4cde9c.  v6:= v6.`x.d.y` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4cdea0.  call `set`(v6, v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L4cdea6.  v5:= v4.`x.d$c.b` @type ^`x.d` @kind object;
  #L4cdeaa.  call `k`(v5) @signature `Lx/d;.k:()V` @kind virtual;
  #L4cdeb0.  return @kind void;
  catch `java.lang.NullPointerException` @[L4cddba..L4cddde] goto L4cdde0;
  catch `java.lang.ClassCastException` @[L4cddba..L4cddde] goto L4cdde0;
}
