record `zb.q` @kind class @AccessFlag  extends `zb.p` @kind class {
}
procedure `java.lang.String` `Z`(`java.lang.String` v1 @kind object, `int` v2 ) @signature `Lzb/q;.Z:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L50824c.  v0:= "<this>" @kind object;
  #L508250.  call `e`(v1, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L508256.  if v2 < 0 then goto L50825e;
  #L50825a.  v0:= 1I;
  #L50825c.  goto L508260;
  #L50825e.  v0:= 0I;
  #L508260.  if v0 == 0 then goto L508288;
  #L508264.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L50826a.  v0:= temp;
  #L50826c.  call temp:= `c`(v2, v0) @signature `Lwb/d;.c:(II)I` @kind static;
  #L508272.  v2:= temp;
  #L508274.  call temp:= `substring`(v1, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L50827a.  v1:= temp @kind object;
  #L50827c.  v2:= "this as java.lang.String).substring(startIndex)" @kind object;
  #L508280.  call `d`(v1, v2) @signature `Lkotlin/jvm/internal/k;.d:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L508286.  return v1 @kind object;
  #L508288.  v1:= new `java.lang.StringBuilder`;
  #L50828c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L508292.  v0:= "Requested character count " @kind object;
  #L508296.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50829c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L5082a2.  v2:= " is less than zero." @kind object;
  #L5082a6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5082ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5082b2.  v1:= temp @kind object;
  #L5082b4.  v2:= new `java.lang.IllegalArgumentException`;
  #L5082b8.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L5082be.  v1:= temp @kind object;
  #L5082c0.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5082c6.  throw v2;
}
