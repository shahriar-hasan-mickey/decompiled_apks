record `zb.a` @kind class @AccessFlag  {
}
procedure `int` `a`(`int` v5 ) @signature `Lzb/a;.a:(I)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L506868.  v0:= new `wb.c`;
  #L50686c.  v1:= 2I;
  #L50686e.  v2:= 36I;
  #L506872.  call `<init>`(v0, v1, v2) @signature `Lwb/c;.<init>:(II)V` @kind direct;
  #L506878.  call temp:= `p`(v0, v5) @signature `Lwb/c;.p:(I)Z` @kind virtual;
  #L50687e.  v0:= temp;
  #L506880.  if v0 == 0 then goto L506886;
  #L506884.  return v5;
  #L506886.  v0:= new `java.lang.IllegalArgumentException`;
  #L50688a.  v3:= new `java.lang.StringBuilder`;
  #L50688e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L506894.  v4:= "radix " @kind object;
  #L506898.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50689e.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L5068a4.  v5:= " was not in valid range " @kind object;
  #L5068a8.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5068ae.  v5:= new `wb.c`;
  #L5068b2.  call `<init>`(v5, v1, v2) @signature `Lwb/c;.<init>:(II)V` @kind direct;
  #L5068b8.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5068be.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5068c4.  v5:= temp @kind object;
  #L5068c6.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5068cc.  throw v0;
}
procedure `int` `b`(`char` v0 , `int` v1 ) @signature `Lzb/a;.b:(CI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L5068e0.  call temp:= `digit`(v0, v1) @signature `Ljava/lang/Character;.digit:(II)I` @kind static;
  #L5068e6.  v0:= temp;
  #L5068e8.  return v0;
}
procedure `boolean` `c`(`char` v1 ) @signature `Lzb/a;.c:(C)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L506834.  call temp:= `isWhitespace`(v1) @signature `Ljava/lang/Character;.isWhitespace:(C)Z` @kind static;
  #L50683a.  v0:= temp;
  #L50683c.  if v0 != 0 then goto L506852;
  #L506840.  call temp:= `isSpaceChar`(v1) @signature `Ljava/lang/Character;.isSpaceChar:(C)Z` @kind static;
  #L506846.  v1:= temp;
  #L506848.  if v1 == 0 then goto L50684e;
  #L50684c.  goto L506852;
  #L50684e.  v1:= 0I;
  #L506850.  goto L506854;
  #L506852.  v1:= 1I;
  #L506854.  return v1;
}
