record `zb.f` @kind class @AccessFlag  {
}
procedure `void` `a`(`java.lang.Appendable` v1 @kind object, `java.lang.Object` v2 @kind object, `tb.l` v3 @kind object) @signature `Lzb/f;.a:(Ljava/lang/Appendable;Ljava/lang/Object;Ltb/l;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L506d0c.  v0:= "<this>" @kind object;
  #L506d10.  call `e`(v1, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L506d16.  if v3 == 0 then goto L506d2e;
  #L506d1a.  call temp:= `invoke`(v3, v2) @signature `Ltb/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506d20.  v2:= temp @kind object;
  #L506d22.  v2:= (`java.lang.CharSequence`) v2 @kind object;
  #L506d26.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L506d2c.  goto L506d66;
  #L506d2e.  if v2 != 0 then goto L506d36;
  #L506d32.  v3:= 1I;
  #L506d34.  goto L506d3a;
  #L506d36.  v3:= instanceof @variable v2 @type ^`java.lang.CharSequence` @kind boolean;
  #L506d3a.  if v3 == 0 then goto L506d40;
  #L506d3e.  goto L506d22;
  #L506d40.  v3:= instanceof @variable v2 @type ^`java.lang.Character` @kind boolean;
  #L506d44.  if v3 == 0 then goto L506d5c;
  #L506d48.  v2:= (`java.lang.Character`) v2 @kind object;
  #L506d4c.  call temp:= `charValue`(v2) @signature `Ljava/lang/Character;.charValue:()C` @kind virtual;
  #L506d52.  v2:= temp;
  #L506d54.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L506d5a.  goto L506d66;
  #L506d5c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L506d62.  v2:= temp @kind object;
  #L506d64.  goto L506d26;
  #L506d66.  return @kind void;
}
