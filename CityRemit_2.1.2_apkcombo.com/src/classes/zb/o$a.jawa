record `zb.o$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.l` @kind class, `tb.p` @kind interface {
  `java.util.List` `zb.o$a.o` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `zb.o$a.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`zb.o$a` v0 @kind this, `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Lzb/o$a;.<init>:(Ljava/util/List;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L507484.  v0.`zb.o$a.o` @type ^`java.util.List` := v1 @kind object;
  #L507488.  v0.`zb.o$a.p` @type ^`boolean` := v2 @kind boolean;
  #L50748c.  v1:= 2I;
  #L50748e.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/l;.<init>:(I)V` @kind direct;
  #L507494.  return @kind void;
}
procedure `jb.l` `a`(`zb.o$a` v3 @kind this, `java.lang.CharSequence` v4 @kind object, `int` v5 ) @signature `Lzb/o$a;.a:(Ljava/lang/CharSequence;I)Ljb/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L507420.  v0:= "$this$$receiver" @kind object;
  #L507424.  call `e`(v4, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L50742a.  v0:= v3.`zb.o$a.o` @type ^`java.util.List` @kind object;
  #L50742e.  v1:= v3.`zb.o$a.p` @type ^`boolean` @kind boolean;
  #L507432.  v2:= 0I;
  #L507434.  call temp:= `n`(v4, v0, v5, v1, v2) @signature `Lzb/o;.n:(Ljava/lang/CharSequence;Ljava/util/Collection;IZZ)Ljb/l;` @kind static;
  #L50743a.  v4:= temp @kind object;
  #L50743c.  if v4 == 0 then goto L50746e;
  #L507440.  call temp:= `c`(v4) @signature `Ljb/l;.c:()Ljava/lang/Object;` @kind virtual;
  #L507446.  v5:= temp @kind object;
  #L507448.  call temp:= `d`(v4) @signature `Ljb/l;.d:()Ljava/lang/Object;` @kind virtual;
  #L50744e.  v4:= temp @kind object;
  #L507450.  v4:= (`java.lang.String`) v4 @kind object;
  #L507454.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L50745a.  v4:= temp;
  #L50745c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L507462.  v4:= temp @kind object;
  #L507464.  call temp:= `a`(v5, v4) @signature `Ljb/p;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljb/l;` @kind static;
  #L50746a.  v4:= temp @kind object;
  #L50746c.  goto L507470;
  #L50746e.  v4:= 0I;
  #L507470.  return v4 @kind object;
}
procedure `java.lang.Object` `invoke`(`zb.o$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lzb/o$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L5073f4.  v1:= (`java.lang.CharSequence`) v1 @kind object;
  #L5073f8.  v2:= (`java.lang.Number`) v2 @kind object;
  #L5073fc.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L507402.  v2:= temp;
  #L507404.  call temp:= `a`(v0, v1, v2) @signature `Lzb/o$a;.a:(Ljava/lang/CharSequence;I)Ljb/l;` @kind virtual;
  #L50740a.  v1:= temp @kind object;
  #L50740c.  return v1 @kind object;
}
