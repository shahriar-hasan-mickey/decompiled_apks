record `p1.c` @kind class @AccessFlag PUBLIC extends `p1.e` @kind interface {
  `q1.v` `p1.c.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `p1.c.b` @AccessFlag PRIVATE_FINAL;
  `k1.b` `p1.c.c` @AccessFlag PRIVATE_FINAL;
  `r1.d` `p1.c.d` @AccessFlag PRIVATE_FINAL;
  `s1.b` `p1.c.e` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@p1.c.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lp1/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4021a8.  v0:= constclass @type ^`j1.u` @kind object;
  #L4021ac.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L4021b2.  v0:= temp @kind object;
  #L4021b4.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L4021ba.  v0:= temp @kind object;
  #L4021bc.  `@@p1.c.f` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L4021c0.  return @kind void;
}
procedure `void` `<init>`(`p1.c` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `k1.b` v2 @kind object, `q1.v` v3 @kind object, `r1.d` v4 @kind object, `s1.b` v5 @kind object) @signature `Lp1/c;.<init>:(Ljava/util/concurrent/Executor;Lk1/b;Lq1/v;Lr1/d;Ls1/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4021d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4021da.  v0.`p1.c.b` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L4021de.  v0.`p1.c.c` @type ^`k1.b` := v2 @kind object;
  #L4021e2.  v0.`p1.c.a` @type ^`q1.v` := v3 @kind object;
  #L4021e6.  v0.`p1.c.d` @type ^`r1.d` := v4 @kind object;
  #L4021ea.  v0.`p1.c.e` @type ^`s1.b` := v5 @kind object;
  #L4021ee.  return @kind void;
}
procedure `void` `b`(`p1.c` v0 @kind object, `j1.p` v1 @kind object, `h1.h` v2 @kind object, `j1.i` v3 @kind object) @signature `Lp1/c;.b:(Lp1/c;Lj1/p;Lh1/h;Lj1/i;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L402190.  call `e`(v0, v1, v2, v3) @signature `Lp1/c;.e:(Lj1/p;Lh1/h;Lj1/i;)V` @kind direct;
  #L402196.  return @kind void;
}
procedure `java.lang.Object` `c`(`p1.c` v0 @kind object, `j1.p` v1 @kind object, `j1.i` v2 @kind object) @signature `Lp1/c;.c:(Lp1/c;Lj1/p;Lj1/i;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L402148.  call temp:= `d`(v0, v1, v2) @signature `Lp1/c;.d:(Lj1/p;Lj1/i;)Ljava/lang/Object;` @kind direct;
  #L40214e.  v0:= temp @kind object;
  #L402150.  return v0 @kind object;
}
procedure `java.lang.Object` `d`(`p1.c` v1 @kind this, `j1.p` v2 @kind object, `j1.i` v3 @kind object) @signature `Lp1/c;.d:(Lj1/p;Lj1/i;)Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L402164.  v0:= v1.`p1.c.d` @type ^`r1.d` @kind object;
  #L402168.  call temp:= `p`(v0, v2, v3) @signature `Lr1/d;.p:(Lj1/p;Lj1/i;)Lr1/k;` @kind interface;
  #L40216e.  v3:= v1.`p1.c.a` @type ^`q1.v` @kind object;
  #L402172.  v0:= 1I;
  #L402174.  call `b`(v3, v2, v0) @signature `Lq1/v;.b:(Lj1/p;I)V` @kind interface;
  #L40217a.  v2:= 0I;
  #L40217c.  return v2 @kind object;
}
procedure `void` `e`(`p1.c` v2 @kind this, `j1.p` v3 @kind object, `h1.h` v4 @kind object, `j1.i` v5 @kind object) @signature `Lp1/c;.e:(Lj1/p;Lh1/h;Lj1/i;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;

  #L402200.  v0:= v2.`p1.c.c` @type ^`k1.b` @kind object;
  #L402204.  call temp:= `b`(v3) @signature `Lj1/p;.b:()Ljava/lang/String;` @kind virtual;
  #L40220a.  v1:= temp @kind object;
  #L40220c.  call temp:= `a`(v0, v1) @signature `Lk1/b;.a:(Ljava/lang/String;)Lk1/g;` @kind interface;
  #L402212.  v0:= temp @kind object;
  #L402214.  if v0 != 0 then goto L402254;
  #L402218.  v5:= "Transport backend '%s' is not registered" @kind object;
  #L40221c.  v0:= 1I;
  #L40221e.  v0:= new `java.lang.Object`[v0];
  #L402222.  v1:= 0I;
  #L402224.  call temp:= `b`(v3) @signature `Lj1/p;.b:()Ljava/lang/String;` @kind virtual;
  #L40222a.  v3:= temp @kind object;
  #L40222c.  v0[v1]:= v3 @kind object;
  #L402230.  call temp:= `format`(v5, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L402236.  v3:= temp @kind object;
  #L402238.  v5:= `@@p1.c.f` @type ^`java.util.logging.Logger` @kind object;
  #L40223c.  call `warning`(v5, v3) @signature `Ljava/util/logging/Logger;.warning:(Ljava/lang/String;)V` @kind virtual;
  #L402242.  v5:= new `java.lang.IllegalArgumentException`;
  #L402246.  call `<init>`(v5, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40224c.  call `a`(v4, v5) @signature `Lh1/h;.a:(Ljava/lang/Exception;)V` @kind interface;
  #L402252.  return @kind void;
  #L402254.  call temp:= `a`(v0, v5) @signature `Lk1/g;.a:(Lj1/i;)Lj1/i;` @kind interface;
  #L40225a.  v5:= temp @kind object;
  #L40225c.  v0:= v2.`p1.c.e` @type ^`s1.b` @kind object;
  #L402260.  v1:= new `p1.b`;
  #L402264.  call `<init>`(v1, v2, v3, v5) @signature `Lp1/b;.<init>:(Lp1/c;Lj1/p;Lj1/i;)V` @kind direct;
  #L40226a.  call temp:= `a`(v0, v1) @signature `Ls1/b;.a:(Ls1/b$a;)Ljava/lang/Object;` @kind interface;
  #L402270.  v3:= 0I;
  #L402272.  call `a`(v4, v3) @signature `Lh1/h;.a:(Ljava/lang/Exception;)V` @kind interface;
  #L402278.  goto L4022b6;
  #L40227a.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L40227c.  v5:= `@@p1.c.f` @type ^`java.util.logging.Logger` @kind object;
  #L402280.  v0:= new `java.lang.StringBuilder`;
  #L402284.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40228a.  v1:= "Error scheduling event " @kind object;
  #L40228e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L402294.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L40229a.  v1:= temp @kind object;
  #L40229c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4022a2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4022a8.  v0:= temp @kind object;
  #L4022aa.  call `warning`(v5, v0) @signature `Ljava/util/logging/Logger;.warning:(Ljava/lang/String;)V` @kind virtual;
  #L4022b0.  call `a`(v4, v3) @signature `Lh1/h;.a:(Ljava/lang/Exception;)V` @kind interface;
  #L4022b6.  return @kind void;
  catch `java.lang.Exception` @[L402200..L402278] goto L40227a;
}
procedure `void` `a`(`p1.c` v2 @kind this, `j1.p` v3 @kind object, `j1.i` v4 @kind object, `h1.h` v5 @kind object) @signature `Lp1/c;.a:(Lj1/p;Lj1/i;Lh1/h;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4022d8.  v0:= v2.`p1.c.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L4022dc.  v1:= new `p1.a`;
  #L4022e0.  call `<init>`(v1, v2, v3, v5, v4) @signature `Lp1/a;.<init>:(Lp1/c;Lj1/p;Lh1/h;Lj1/i;)V` @kind direct;
  #L4022e6.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L4022ec.  return @kind void;
}
