record `z2.i` @kind class @AccessFlag PUBLIC extends `x2.n0` @kind interface, `x2.o0` @kind interface, `r3.h0$b` @kind interface, `r3.h0$f` @kind interface {
  `x2.m0` `z2.i.A` @AccessFlag PRIVATE_FINAL;
  `x2.m0`[] `z2.i.B` @AccessFlag PRIVATE_FINAL;
  `z2.c` `z2.i.C` @AccessFlag PRIVATE_FINAL;
  `z2.f` `z2.i.D` @AccessFlag PRIVATE;
  `v1.j1` `z2.i.E` @AccessFlag PRIVATE;
  `z2.i$b` `z2.i.F` @AccessFlag PRIVATE;
  `long` `z2.i.G` @AccessFlag PRIVATE;
  `long` `z2.i.H` @AccessFlag PRIVATE;
  `int` `z2.i.I` @AccessFlag PRIVATE;
  `z2.a` `z2.i.J` @AccessFlag PRIVATE;
  `boolean` `z2.i.K` @AccessFlag ;
  `int` `z2.i.o` @AccessFlag PUBLIC_FINAL;
  `int`[] `z2.i.p` @AccessFlag PRIVATE_FINAL;
  `v1.j1`[] `z2.i.q` @AccessFlag PRIVATE_FINAL;
  `boolean`[] `z2.i.r` @AccessFlag PRIVATE_FINAL;
  `z2.j` `z2.i.s` @AccessFlag PRIVATE_FINAL;
  `x2.o0$a` `z2.i.t` @AccessFlag PRIVATE_FINAL;
  `x2.b0$a` `z2.i.u` @AccessFlag PRIVATE_FINAL;
  `r3.g0` `z2.i.v` @AccessFlag PRIVATE_FINAL;
  `r3.h0` `z2.i.w` @AccessFlag PRIVATE_FINAL;
  `z2.h` `z2.i.x` @AccessFlag PRIVATE_FINAL;
  `java.util.ArrayList` `z2.i.y` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `z2.i.z` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`z2.i` v1 @kind this, `int` v2 , `int`[] v3 @kind object, `v1.j1`[] v4 @kind object, `z2.j` v5 @kind object, `x2.o0$a` v6 @kind object, `r3.b` v7 @kind object, `long` v8 , `z1.y` v10 @kind object, `z1.w$a` v11 @kind object, `r3.g0` v12 @kind object, `x2.b0$a` v13 @kind object) @signature `Lz2/i;.<init>:(I[I[Lv1/j1;Lz2/j;Lx2/o0$a;Lr3/b;JLz1/y;Lz1/w$a;Lr3/g0;Lx2/b0$a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L500638.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50063e.  v1.`z2.i.o` @type ^`int` := v2;
  #L500642.  v0:= 0I;
  #L500644.  if v3 != 0 then goto L50064c;
  #L500648.  v3:= new `int`[v0];
  #L50064c.  v1.`z2.i.p` @type ^`int`[] := v3 @kind object;
  #L500650.  if v4 != 0 then goto L500658;
  #L500654.  v4:= new `v1.j1`[v0];
  #L500658.  v1.`z2.i.q` @type ^`v1.j1`[] := v4 @kind object;
  #L50065c.  v1.`z2.i.s` @type ^`z2.j` := v5 @kind object;
  #L500660.  v1.`z2.i.t` @type ^`x2.o0$a` := v6 @kind object;
  #L500664.  v1.`z2.i.u` @type ^`x2.b0$a` := v13 @kind object;
  #L500668.  v1.`z2.i.v` @type ^`r3.g0` := v12 @kind object;
  #L50066c.  v4:= new `r3.h0`;
  #L500670.  v5:= "ChunkSampleStream" @kind object;
  #L500674.  call `<init>`(v4, v5) @signature `Lr3/h0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50067a.  v1.`z2.i.w` @type ^`r3.h0` := v4 @kind object;
  #L50067e.  v4:= new `z2.h`;
  #L500682.  call `<init>`(v4) @signature `Lz2/h;.<init>:()V` @kind direct;
  #L500688.  v1.`z2.i.x` @type ^`z2.h` := v4 @kind object;
  #L50068c.  v4:= new `java.util.ArrayList`;
  #L500690.  call `<init>`(v4) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L500696.  v1.`z2.i.y` @type ^`java.util.ArrayList` := v4 @kind object;
  #L50069a.  call temp:= `unmodifiableList`(v4) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L5006a0.  v4:= temp @kind object;
  #L5006a2.  v1.`z2.i.z` @type ^`java.util.List` := v4 @kind object;
  #L5006a6.  v3:= length @variable v3;
  #L5006a8.  v4:= new `x2.m0`[v3];
  #L5006ac.  v1.`z2.i.B` @type ^`x2.m0`[] := v4 @kind object;
  #L5006b0.  v4:= new `boolean`[v3];
  #L5006b4.  v1.`z2.i.r` @type ^`boolean`[] := v4 @kind object;
  #L5006b8.  v4:= v3 + 1;
  #L5006bc.  v5:= new `int`[v4];
  #L5006c0.  v4:= new `x2.m0`[v4];
  #L5006c4.  call temp:= `k`(v7, v10, v11) @signature `Lx2/m0;.k:(Lr3/b;Lz1/y;Lz1/w$a;)Lx2/m0;` @kind static;
  #L5006ca.  v6:= temp @kind object;
  #L5006cc.  v1.`z2.i.A` @type ^`x2.m0` := v6 @kind object;
  #L5006d0.  v5[v0]:= v2;
  #L5006d4.  v4[v0]:= v6 @kind object;
  #L5006d8.  if v0 >= v3 then goto L500704;
  #L5006dc.  call temp:= `l`(v7) @signature `Lx2/m0;.l:(Lr3/b;)Lx2/m0;` @kind static;
  #L5006e2.  v2:= temp @kind object;
  #L5006e4.  v6:= v1.`z2.i.B` @type ^`x2.m0`[] @kind object;
  #L5006e8.  v6[v0]:= v2 @kind object;
  #L5006ec.  v6:= v0 + 1;
  #L5006f0.  v4[v6]:= v2 @kind object;
  #L5006f4.  v2:= v1.`z2.i.p` @type ^`int`[] @kind object;
  #L5006f8.  v2:= v2[v0];
  #L5006fc.  v5[v6]:= v2;
  #L500700.  v0:= v6;
  #L500702.  goto L5006d8;
  #L500704.  v2:= new `z2.c`;
  #L500708.  call `<init>`(v2, v5, v4) @signature `Lz2/c;.<init>:([I[Lx2/m0;)V` @kind direct;
  #L50070e.  v1.`z2.i.C` @type ^`z2.c` := v2 @kind object;
  #L500712.  v1.`z2.i.G` @type ^`long` := v8 @kind wide;
  #L500716.  v1.`z2.i.H` @type ^`long` := v8 @kind wide;
  #L50071a.  return @kind void;
}
procedure `x2.b0$a` `A`(`z2.i` v0 @kind object) @signature `Lz2/i;.A:(Lz2/i;)Lx2/b0$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L500e40.  v0:= v0.`z2.i.u` @type ^`x2.b0$a` @kind object;
  #L500e44.  return v0 @kind object;
}
procedure `void` `B`(`z2.i` v2 @kind this, `int` v3 ) @signature `Lz2/i;.B:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L5007ac.  v0:= 0I;
  #L5007ae.  call temp:= `O`(v2, v3, v0) @signature `Lz2/i;.O:(II)I` @kind direct;
  #L5007b4.  v3:= temp;
  #L5007b6.  v1:= v2.`z2.i.I` @type ^`int`;
  #L5007ba.  call temp:= `min`(v3, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L5007c0.  v3:= temp;
  #L5007c2.  if v3 <= 0 then goto L5007da;
  #L5007c6.  v1:= v2.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L5007ca.  call `L0`(v1, v0, v3) @signature `Ls3/l0;.L0:(Ljava/util/List;II)V` @kind static;
  #L5007d0.  v0:= v2.`z2.i.I` @type ^`int`;
  #L5007d4.  v0:= v0 - v3 @kind int;
  #L5007d6.  v2.`z2.i.I` @type ^`int` := v0;
  #L5007da.  return @kind void;
}
procedure `void` `C`(`z2.i` v7 @kind this, `int` v8 ) @signature `Lz2/i;.C:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L5007ec.  v0:= v7.`z2.i.w` @type ^`r3.h0` @kind object;
  #L5007f0.  call temp:= `j`(v0) @signature `Lr3/h0;.j:()Z` @kind virtual;
  #L5007f6.  v0:= temp;
  #L5007f8.  v0:= v0 ^~ 1;
  #L5007fc.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L500802.  v0:= v7.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500806.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L50080c.  v0:= temp;
  #L50080e.  v1:= -1I;
  #L500810.  if v8 >= v0 then goto L500828;
  #L500814.  call temp:= `G`(v7, v8) @signature `Lz2/i;.G:(I)Z` @kind direct;
  #L50081a.  v2:= temp;
  #L50081c.  if v2 != 0 then goto L500822;
  #L500820.  goto L50082a;
  #L500822.  v8:= v8 + 1;
  #L500826.  goto L50080e;
  #L500828.  v8:= -1I;
  #L50082a.  if v8 != v1 then goto L500830;
  #L50082e.  return @kind void;
  #L500830.  call temp:= `F`(v7) @signature `Lz2/i;.F:()Lz2/a;` @kind direct;
  #L500836.  v0:= temp @kind object;
  #L500838.  v5:= v0.`z2.f.h` @type ^`long` @kind wide;
  #L50083c.  call temp:= `D`(v7, v8) @signature `Lz2/i;.D:(I)Lz2/a;` @kind direct;
  #L500842.  v8:= temp @kind object;
  #L500844.  v0:= v7.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500848.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L50084e.  v0:= temp;
  #L500850.  if v0 == 0 then goto L50085c;
  #L500854.  v0:= v7.`z2.i.H` @type ^`long` @kind wide;
  #L500858.  v7.`z2.i.G` @type ^`long` := v0 @kind wide;
  #L50085c.  v0:= 0I;
  #L50085e.  v7.`z2.i.K` @type ^`boolean` := v0 @kind boolean;
  #L500862.  v1:= v7.`z2.i.u` @type ^`x2.b0$a` @kind object;
  #L500866.  v2:= v7.`z2.i.o` @type ^`int`;
  #L50086a.  v3:= v8.`z2.f.g` @type ^`long` @kind wide;
  #L50086e.  call `D`(v1, v2, v3, v5) @signature `Lx2/b0$a;.D:(IJJ)V` @kind virtual;
  #L500874.  return @kind void;
}
procedure `z2.a` `D`(`z2.i` v3 @kind this, `int` v4 ) @signature `Lz2/i;.D:(I)Lz2/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L500e70.  v0:= v3.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500e74.  call temp:= `get`(v0, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L500e7a.  v0:= temp @kind object;
  #L500e7c.  v0:= (`z2.a`) v0 @kind object;
  #L500e80.  v1:= v3.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500e84.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L500e8a.  v2:= temp;
  #L500e8c.  call `L0`(v1, v4, v2) @signature `Ls3/l0;.L0:(Ljava/util/List;II)V` @kind static;
  #L500e92.  v4:= v3.`z2.i.I` @type ^`int`;
  #L500e96.  v1:= v3.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500e9a.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L500ea0.  v1:= temp;
  #L500ea2.  call temp:= `max`(v4, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L500ea8.  v4:= temp;
  #L500eaa.  v3.`z2.i.I` @type ^`int` := v4;
  #L500eae.  v4:= v3.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500eb2.  v1:= 0I;
  #L500eb4.  call temp:= `i`(v0, v1) @signature `Lz2/a;.i:(I)I` @kind virtual;
  #L500eba.  v2:= temp;
  #L500ebc.  call `u`(v4, v2) @signature `Lx2/m0;.u:(I)V` @kind virtual;
  #L500ec2.  v4:= v3.`z2.i.B` @type ^`x2.m0`[] @kind object;
  #L500ec6.  v2:= length @variable v4;
  #L500ec8.  if v1 >= v2 then goto L500ed6;
  #L500ecc.  v4:= v4[v1] @kind object;
  #L500ed0.  v1:= v1 + 1;
  #L500ed4.  goto L500eb4;
  #L500ed6.  return v0 @kind object;
}
procedure `z2.a` `F`(`z2.i` v2 @kind this) @signature `Lz2/i;.F:()Lz2/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L500ee8.  v0:= v2.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500eec.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L500ef2.  v1:= temp;
  #L500ef4.  v1:= v1 + -1;
  #L500ef8.  call temp:= `get`(v0, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L500efe.  v0:= temp @kind object;
  #L500f00.  v0:= (`z2.a`) v0 @kind object;
  #L500f04.  return v0 @kind object;
}
procedure `boolean` `G`(`z2.i` v5 @kind this, `int` v6 ) @signature `Lz2/i;.G:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L500074.  v0:= v5.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500078.  call temp:= `get`(v0, v6) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L50007e.  v6:= temp @kind object;
  #L500080.  v6:= (`z2.a`) v6 @kind object;
  #L500084.  v0:= v5.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500088.  call temp:= `C`(v0) @signature `Lx2/m0;.C:()I` @kind virtual;
  #L50008e.  v0:= temp;
  #L500090.  v1:= 0I;
  #L500092.  call temp:= `i`(v6, v1) @signature `Lz2/a;.i:(I)I` @kind virtual;
  #L500098.  v2:= temp;
  #L50009a.  v3:= 1I;
  #L50009c.  if v0 <= v2 then goto L5000a2;
  #L5000a0.  return v3;
  #L5000a2.  v0:= 0I;
  #L5000a4.  v2:= v5.`z2.i.B` @type ^`x2.m0`[] @kind object;
  #L5000a8.  v4:= length @variable v2;
  #L5000aa.  if v0 >= v4 then goto L5000cc;
  #L5000ae.  v2:= v2[v0] @kind object;
  #L5000b2.  call temp:= `C`(v2) @signature `Lx2/m0;.C:()I` @kind virtual;
  #L5000b8.  v2:= temp;
  #L5000ba.  v0:= v0 + 1;
  #L5000be.  call temp:= `i`(v6, v0) @signature `Lz2/a;.i:(I)I` @kind virtual;
  #L5000c4.  v4:= temp;
  #L5000c6.  if v2 <= v4 then goto L5000a4;
  #L5000ca.  return v3;
  #L5000cc.  return v1;
}
procedure `boolean` `H`(`z2.i` v0 @kind this, `z2.f` v1 @kind object) @signature `Lz2/i;.H:(Lz2/f;)Z` @AccessFlag PRIVATE {
    temp;

  #L500100.  v1:= instanceof @variable v1 @type ^`z2.a` @kind boolean;
  #L500104.  return v1;
}
procedure `void` `J`(`z2.i` v3 @kind this) @signature `Lz2/i;.J:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L500888.  v0:= v3.`z2.i.A` @type ^`x2.m0` @kind object;
  #L50088c.  call temp:= `C`(v0) @signature `Lx2/m0;.C:()I` @kind virtual;
  #L500892.  v0:= temp;
  #L500894.  v1:= v3.`z2.i.I` @type ^`int`;
  #L500898.  v1:= v1 + -1;
  #L50089c.  call temp:= `O`(v3, v0, v1) @signature `Lz2/i;.O:(II)I` @kind direct;
  #L5008a2.  v0:= temp;
  #L5008a4.  v1:= v3.`z2.i.I` @type ^`int`;
  #L5008a8.  if v1 > v0 then goto L5008bc;
  #L5008ac.  v2:= v1 + 1;
  #L5008b0.  v3.`z2.i.I` @type ^`int` := v2;
  #L5008b4.  call `K`(v3, v1) @signature `Lz2/i;.K:(I)V` @kind direct;
  #L5008ba.  goto L5008a4;
  #L5008bc.  return @kind void;
}
procedure `void` `K`(`z2.i` v8 @kind this, `int` v9 ) @signature `Lz2/i;.K:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L5008d0.  v0:= v8.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L5008d4.  call temp:= `get`(v0, v9) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L5008da.  v9:= temp @kind object;
  #L5008dc.  v9:= (`z2.a`) v9 @kind object;
  #L5008e0.  v7:= v9.`z2.f.d` @type ^`v1.j1` @kind object;
  #L5008e4.  v0:= v8.`z2.i.E` @type ^`v1.j1` @kind object;
  #L5008e8.  call temp:= `equals`(v7, v0) @signature `Lv1/j1;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L5008ee.  v0:= temp;
  #L5008f0.  if v0 != 0 then goto L500910;
  #L5008f4.  v0:= v8.`z2.i.u` @type ^`x2.b0$a` @kind object;
  #L5008f8.  v1:= v8.`z2.i.o` @type ^`int`;
  #L5008fc.  v3:= v9.`z2.f.e` @type ^`int`;
  #L500900.  v4:= v9.`z2.f.f` @type ^`java.lang.Object` @kind object;
  #L500904.  v5:= v9.`z2.f.g` @type ^`long` @kind wide;
  #L500908.  v2:= v7 @kind object;
  #L50090a.  call `i`(v0, v1, v2, v3, v4, v5) @signature `Lx2/b0$a;.i:(ILv1/j1;ILjava/lang/Object;J)V` @kind virtual;
  #L500910.  v8.`z2.i.E` @type ^`v1.j1` := v7 @kind object;
  #L500914.  return @kind void;
}
procedure `int` `O`(`z2.i` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lz2/i;.O:(II)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L500198.  v4:= v4 + 1;
  #L50019c.  v0:= v2.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L5001a0.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L5001a6.  v0:= temp;
  #L5001a8.  if v4 >= v0 then goto L5001d0;
  #L5001ac.  v0:= v2.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L5001b0.  call temp:= `get`(v0, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L5001b6.  v0:= temp @kind object;
  #L5001b8.  v0:= (`z2.a`) v0 @kind object;
  #L5001bc.  v1:= 0I;
  #L5001be.  call temp:= `i`(v0, v1) @signature `Lz2/a;.i:(I)I` @kind virtual;
  #L5001c4.  v0:= temp;
  #L5001c6.  if v0 <= v3 then goto L500198;
  #L5001ca.  v4:= v4 + -1;
  #L5001ce.  return v4;
  #L5001d0.  v3:= v2.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L5001d4.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L5001da.  v3:= temp;
  #L5001dc.  v3:= v3 + -1;
  #L5001e0.  return v3;
}
procedure `void` `R`(`z2.i` v4 @kind this) @signature `Lz2/i;.R:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L500cac.  v0:= v4.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500cb0.  call `V`(v0) @signature `Lx2/m0;.V:()V` @kind virtual;
  #L500cb6.  v0:= v4.`z2.i.B` @type ^`x2.m0`[] @kind object;
  #L500cba.  v1:= length @variable v0;
  #L500cbc.  v2:= 0I;
  #L500cbe.  if v2 >= v1 then goto L500cd2;
  #L500cc2.  v3:= v0[v2] @kind object;
  #L500cc6.  call `V`(v3) @signature `Lx2/m0;.V:()V` @kind virtual;
  #L500ccc.  v2:= v2 + 1;
  #L500cd0.  goto L500cbe;
  #L500cd2.  return @kind void;
}
procedure `z2.a` `v`(`z2.i` v0 @kind object) @signature `Lz2/i;.v:(Lz2/i;)Lz2/a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L500e58.  v0:= v0.`z2.i.J` @type ^`z2.a` @kind object;
  #L500e5c.  return v0 @kind object;
}
procedure `boolean`[] `w`(`z2.i` v0 @kind object) @signature `Lz2/i;.w:(Lz2/i;)[Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L500180.  v0:= v0.`z2.i.r` @type ^`boolean`[] @kind object;
  #L500184.  return v0 @kind object;
}
procedure `int`[] `x`(`z2.i` v0 @kind object) @signature `Lz2/i;.x:(Lz2/i;)[I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L5002b8.  v0:= v0.`z2.i.p` @type ^`int`[] @kind object;
  #L5002bc.  return v0 @kind object;
}
procedure `v1.j1`[] `y`(`z2.i` v0 @kind object) @signature `Lz2/i;.y:(Lz2/i;)[Lv1/j1;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L500620.  v0:= v0.`z2.i.q` @type ^`v1.j1`[] @kind object;
  #L500624.  return v0 @kind object;
}
procedure `long` `z`(`z2.i` v2 @kind object) @signature `Lz2/i;.z:(Lz2/i;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L5002d0.  v0:= v2.`z2.i.H` @type ^`long` @kind wide;
  #L5002d4.  return v0 @kind wide;
}
procedure `z2.j` `E`(`z2.i` v1 @kind this) @signature `Lz2/i;.E:()Lz2/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500f90.  v0:= v1.`z2.i.s` @type ^`z2.j` @kind object;
  #L500f94.  return v0 @kind object;
}
procedure `boolean` `I`(`z2.i` v5 @kind this) @signature `Lz2/i;.I:()Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L500118.  v0:= v5.`z2.i.G` @type ^`long` @kind wide;
  #L50011c.  v2:= -4.9E-324D;
  #L500126.  v4:= lcmp(v0, v2);
  #L50012a.  if v4 == 0 then goto L500132;
  #L50012e.  v0:= 1I;
  #L500130.  goto L500134;
  #L500132.  v0:= 0I;
  #L500134.  return v0;
}
procedure `void` `L`(`z2.i` v15 @kind this, `z2.f` v16 @kind object, `long` v17 , `long` v19 , `boolean` v21 ) @signature `Lz2/i;.L:(Lz2/f;JJZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L500984.  v0:= v15 @kind object;
  #L500986.  v1:= v16 @kind object;
  #L50098a.  v2:= 0I;
  #L50098c.  v0.`z2.i.D` @type ^`z2.f` := v2 @kind object;
  #L500990.  v0.`z2.i.J` @type ^`z2.a` := v2 @kind object;
  #L500994.  v2:= new `x2.n`;
  #L500998.  v4:= v1.`z2.f.a` @type ^`long` @kind wide;
  #L50099c.  v6:= v1.`z2.f.b` @type ^`r3.p` @kind object;
  #L5009a0.  call temp:= `f`(v16) @signature `Lz2/f;.f:()Landroid/net/Uri;` @kind virtual;
  #L5009a6.  v7:= temp @kind object;
  #L5009a8.  call temp:= `e`(v16) @signature `Lz2/f;.e:()Ljava/util/Map;` @kind virtual;
  #L5009ae.  v8:= temp @kind object;
  #L5009b0.  call temp:= `c`(v16) @signature `Lz2/f;.c:()J` @kind virtual;
  #L5009b6.  v13:= temp @kind wide;
  #L5009b8.  v3:= v2 @kind object;
  #L5009ba.  v9:= v17 @kind wide;
  #L5009be.  v11:= v19 @kind wide;
  #L5009c2.  call `<init>`(v3, v4, v6, v7, v8, v9, v11, v13) @signature `Lx2/n;.<init>:(JLr3/p;Landroid/net/Uri;Ljava/util/Map;JJJ)V` @kind direct;
  #L5009c8.  v3:= v0.`z2.i.v` @type ^`r3.g0` @kind object;
  #L5009cc.  v4:= v1.`z2.f.a` @type ^`long` @kind wide;
  #L5009d0.  call `a`(v3, v4) @signature `Lr3/g0;.a:(J)V` @kind interface;
  #L5009d6.  v3:= v0.`z2.i.u` @type ^`x2.b0$a` @kind object;
  #L5009da.  v5:= v1.`z2.f.c` @type ^`int`;
  #L5009de.  v6:= v0.`z2.i.o` @type ^`int`;
  #L5009e2.  v7:= v1.`z2.f.d` @type ^`v1.j1` @kind object;
  #L5009e6.  v8:= v1.`z2.f.e` @type ^`int`;
  #L5009ea.  v9:= v1.`z2.f.f` @type ^`java.lang.Object` @kind object;
  #L5009ee.  v10:= v1.`z2.f.g` @type ^`long` @kind wide;
  #L5009f2.  v12:= v1.`z2.f.h` @type ^`long` @kind wide;
  #L5009f6.  v4:= v2 @kind object;
  #L5009f8.  call `r`(v3, v4, v5, v6, v7, v8, v9, v10, v12) @signature `Lx2/b0$a;.r:(Lx2/n;IILv1/j1;ILjava/lang/Object;JJ)V` @kind virtual;
  #L5009fe.  if v21 != 0 then goto L500a5a;
  #L500a02.  call temp:= `I`(v15) @signature `Lz2/i;.I:()Z` @kind virtual;
  #L500a08.  v2:= temp;
  #L500a0a.  if v2 == 0 then goto L500a16;
  #L500a0e.  call `R`(v15) @signature `Lz2/i;.R:()V` @kind direct;
  #L500a14.  goto L500a50;
  #L500a16.  call temp:= `H`(v15, v16) @signature `Lz2/i;.H:(Lz2/f;)Z` @kind direct;
  #L500a1c.  v1:= temp;
  #L500a1e.  if v1 == 0 then goto L500a50;
  #L500a22.  v1:= v0.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500a26.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L500a2c.  v1:= temp;
  #L500a2e.  v1:= v1 + -1;
  #L500a32.  call temp:= `D`(v15, v1) @signature `Lz2/i;.D:(I)Lz2/a;` @kind direct;
  #L500a38.  v1:= v0.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500a3c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L500a42.  v1:= temp;
  #L500a44.  if v1 == 0 then goto L500a50;
  #L500a48.  v1:= v0.`z2.i.H` @type ^`long` @kind wide;
  #L500a4c.  v0.`z2.i.G` @type ^`long` := v1 @kind wide;
  #L500a50.  v1:= v0.`z2.i.t` @type ^`x2.o0$a` @kind object;
  #L500a54.  call `m`(v1, v15) @signature `Lx2/o0$a;.m:(Lx2/o0;)V` @kind interface;
  #L500a5a.  return @kind void;
}
procedure `void` `M`(`z2.i` v15 @kind this, `z2.f` v16 @kind object, `long` v17 , `long` v19 ) @signature `Lz2/i;.M:(Lz2/f;JJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L500a88.  v0:= v15 @kind object;
  #L500a8a.  v1:= v16 @kind object;
  #L500a8e.  v2:= 0I;
  #L500a90.  v0.`z2.i.D` @type ^`z2.f` := v2 @kind object;
  #L500a94.  v2:= v0.`z2.i.s` @type ^`z2.j` @kind object;
  #L500a98.  call `f`(v2, v1) @signature `Lz2/j;.f:(Lz2/f;)V` @kind interface;
  #L500a9e.  v2:= new `x2.n`;
  #L500aa2.  v4:= v1.`z2.f.a` @type ^`long` @kind wide;
  #L500aa6.  v6:= v1.`z2.f.b` @type ^`r3.p` @kind object;
  #L500aaa.  call temp:= `f`(v16) @signature `Lz2/f;.f:()Landroid/net/Uri;` @kind virtual;
  #L500ab0.  v7:= temp @kind object;
  #L500ab2.  call temp:= `e`(v16) @signature `Lz2/f;.e:()Ljava/util/Map;` @kind virtual;
  #L500ab8.  v8:= temp @kind object;
  #L500aba.  call temp:= `c`(v16) @signature `Lz2/f;.c:()J` @kind virtual;
  #L500ac0.  v13:= temp @kind wide;
  #L500ac2.  v3:= v2 @kind object;
  #L500ac4.  v9:= v17 @kind wide;
  #L500ac8.  v11:= v19 @kind wide;
  #L500acc.  call `<init>`(v3, v4, v6, v7, v8, v9, v11, v13) @signature `Lx2/n;.<init>:(JLr3/p;Landroid/net/Uri;Ljava/util/Map;JJJ)V` @kind direct;
  #L500ad2.  v3:= v0.`z2.i.v` @type ^`r3.g0` @kind object;
  #L500ad6.  v4:= v1.`z2.f.a` @type ^`long` @kind wide;
  #L500ada.  call `a`(v3, v4) @signature `Lr3/g0;.a:(J)V` @kind interface;
  #L500ae0.  v3:= v0.`z2.i.u` @type ^`x2.b0$a` @kind object;
  #L500ae4.  v5:= v1.`z2.f.c` @type ^`int`;
  #L500ae8.  v6:= v0.`z2.i.o` @type ^`int`;
  #L500aec.  v7:= v1.`z2.f.d` @type ^`v1.j1` @kind object;
  #L500af0.  v8:= v1.`z2.f.e` @type ^`int`;
  #L500af4.  v9:= v1.`z2.f.f` @type ^`java.lang.Object` @kind object;
  #L500af8.  v10:= v1.`z2.f.g` @type ^`long` @kind wide;
  #L500afc.  v12:= v1.`z2.f.h` @type ^`long` @kind wide;
  #L500b00.  v4:= v2 @kind object;
  #L500b02.  call `u`(v3, v4, v5, v6, v7, v8, v9, v10, v12) @signature `Lx2/b0$a;.u:(Lx2/n;IILv1/j1;ILjava/lang/Object;JJ)V` @kind virtual;
  #L500b08.  v1:= v0.`z2.i.t` @type ^`x2.o0$a` @kind object;
  #L500b0c.  call `m`(v1, v15) @signature `Lx2/o0$a;.m:(Lx2/o0;)V` @kind interface;
  #L500b12.  return @kind void;
}
procedure `r3.h0$c` `N`(`z2.i` v30 @kind this, `z2.f` v31 @kind object, `long` v32 , `long` v34 , `java.io.IOException` v36 @kind object, `int` v37 ) @signature `Lz2/i;.N:(Lz2/f;JJLjava/io/IOException;I)Lr3/h0$c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;

  #L50040c.  v0:= v30 @kind object;
  #L500410.  v1:= v31 @kind object;
  #L500414.  call temp:= `c`(v31) @signature `Lz2/f;.c:()J` @kind virtual;
  #L50041a.  v12:= temp @kind wide;
  #L50041c.  call temp:= `H`(v30, v31) @signature `Lz2/i;.H:(Lz2/f;)Z` @kind direct;
  #L500422.  v14:= temp;
  #L500424.  v2:= v0.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500428.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L50042e.  v2:= temp;
  #L500430.  v15:= 1I;
  #L500432.  v10:= v2 + -1;
  #L500436.  v11:= 0I;
  #L500438.  v2:= 0L;
  #L50043c.  v4:= lcmp(v12, v2);
  #L500440.  if v4 == 0 then goto L50045a;
  #L500444.  if v14 == 0 then goto L50045a;
  #L500448.  call temp:= `G`(v0, v10) @signature `Lz2/i;.G:(I)Z` @kind direct;
  #L50044e.  v2:= temp;
  #L500450.  if v2 != 0 then goto L500456;
  #L500454.  goto L50045a;
  #L500456.  v8:= 0I;
  #L500458.  goto L50045c;
  #L50045a.  v8:= 1I;
  #L50045c.  v9:= new `x2.n`;
  #L500460.  v3:= v1.`z2.f.a` @type ^`long` @kind wide;
  #L500464.  v5:= v1.`z2.f.b` @type ^`r3.p` @kind object;
  #L500468.  call temp:= `f`(v31) @signature `Lz2/f;.f:()Landroid/net/Uri;` @kind virtual;
  #L50046e.  v6:= temp @kind object;
  #L500470.  call temp:= `e`(v31) @signature `Lz2/f;.e:()Ljava/util/Map;` @kind virtual;
  #L500476.  v7:= temp @kind object;
  #L500478.  v2:= v9 @kind object;
  #L50047a.  v15:= v8;
  #L50047c.  v17:= v14;
  #L500480.  v14:= v9 @kind object;
  #L500482.  v8:= v32 @kind wide;
  #L500486.  v29:= v10;
  #L50048a.  v10:= v34 @kind wide;
  #L50048e.  call `<init>`(v2, v3, v5, v6, v7, v8, v10, v12) @signature `Lx2/n;.<init>:(JLr3/p;Landroid/net/Uri;Ljava/util/Map;JJJ)V` @kind direct;
  #L500494.  v2:= new `x2.q`;
  #L500498.  v3:= v1.`z2.f.c` @type ^`int`;
  #L50049c.  v4:= v0.`z2.i.o` @type ^`int`;
  #L5004a0.  v5:= v1.`z2.f.d` @type ^`v1.j1` @kind object;
  #L5004a4.  v6:= v1.`z2.f.e` @type ^`int`;
  #L5004a8.  v7:= v1.`z2.f.f` @type ^`java.lang.Object` @kind object;
  #L5004ac.  v8:= v1.`z2.f.g` @type ^`long` @kind wide;
  #L5004b0.  call temp:= `X0`(v8) @signature `Ls3/l0;.X0:(J)J` @kind static;
  #L5004b6.  v24:= temp @kind wide;
  #L5004b8.  v8:= v1.`z2.f.h` @type ^`long` @kind wide;
  #L5004bc.  call temp:= `X0`(v8) @signature `Ls3/l0;.X0:(J)J` @kind static;
  #L5004c2.  v26:= temp @kind wide;
  #L5004c4.  v18:= v2 @kind object;
  #L5004c8.  v19:= v3;
  #L5004cc.  v20:= v4;
  #L5004d0.  v21:= v5 @kind object;
  #L5004d4.  v22:= v6;
  #L5004d8.  v23:= v7 @kind object;
  #L5004dc.  call `<init>`(v18, v19, v20, v21, v22, v23, v24, v26) @signature `Lx2/q;.<init>:(IILv1/j1;ILjava/lang/Object;JJ)V` @kind direct;
  #L5004e2.  v3:= new `r3.g0$c`;
  #L5004e6.  v4:= v36 @kind object;
  #L5004ea.  v5:= v37;
  #L5004ee.  call `<init>`(v3, v14, v2, v4, v5) @signature `Lr3/g0$c;.<init>:(Lx2/n;Lx2/q;Ljava/io/IOException;I)V` @kind direct;
  #L5004f4.  v2:= v0.`z2.i.s` @type ^`z2.j` @kind object;
  #L5004f8.  v5:= v0.`z2.i.v` @type ^`r3.g0` @kind object;
  #L5004fc.  call temp:= `k`(v2, v1, v15, v3, v5) @signature `Lz2/j;.k:(Lz2/f;ZLr3/g0$c;Lr3/g0;)Z` @kind interface;
  #L500502.  v2:= temp;
  #L500504.  if v2 == 0 then goto L500558;
  #L500508.  if v15 == 0 then goto L50054a;
  #L50050c.  v2:= `@@r3.h0.e` @type ^`r3.h0$c` @kind object;
  #L500510.  if v17 == 0 then goto L50055a;
  #L500514.  v6:= v29;
  #L500518.  call temp:= `D`(v0, v6) @signature `Lz2/i;.D:(I)Lz2/a;` @kind direct;
  #L50051e.  v6:= temp @kind object;
  #L500520.  if v6 != v1 then goto L500528;
  #L500524.  v11:= 1I;
  #L500526.  goto L50052a;
  #L500528.  v11:= 0I;
  #L50052a.  call `f`(v11) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L500530.  v6:= v0.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500534.  call temp:= `isEmpty`(v6) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L50053a.  v6:= temp;
  #L50053c.  if v6 == 0 then goto L50055a;
  #L500540.  v6:= v0.`z2.i.H` @type ^`long` @kind wide;
  #L500544.  v0.`z2.i.G` @type ^`long` := v6 @kind wide;
  #L500548.  goto L50055a;
  #L50054a.  v2:= "ChunkSampleStream" @kind object;
  #L50054e.  v6:= "Ignoring attempt to cancel non-cancelable load." @kind object;
  #L500552.  call `h`(v2, v6) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L500558.  v2:= 0I;
  #L50055a.  if v2 != 0 then goto L50058c;
  #L50055e.  v2:= v0.`z2.i.v` @type ^`r3.g0` @kind object;
  #L500562.  call temp:= `c`(v2, v3) @signature `Lr3/g0;.c:(Lr3/g0$c;)J` @kind interface;
  #L500568.  v2:= temp @kind wide;
  #L50056a.  v6:= -4.9E-324D;
  #L500574.  v8:= lcmp(v2, v6);
  #L500578.  if v8 == 0 then goto L500588;
  #L50057c.  v6:= 0I;
  #L50057e.  call temp:= `h`(v6, v2) @signature `Lr3/h0;.h:(ZJ)Lr3/h0$c;` @kind static;
  #L500584.  v2:= temp @kind object;
  #L500586.  goto L50058c;
  #L500588.  v2:= `@@r3.h0.f` @type ^`r3.h0$c` @kind object;
  #L50058c.  call temp:= `c`(v2) @signature `Lr3/h0$c;.c:()Z` @kind virtual;
  #L500592.  v3:= temp;
  #L500594.  v6:= 1I;
  #L500596.  v3:= v3 ^~ v6 @kind int;
  #L500598.  v6:= v0.`z2.i.u` @type ^`x2.b0$a` @kind object;
  #L50059c.  v7:= v1.`z2.f.c` @type ^`int`;
  #L5005a0.  v8:= v0.`z2.i.o` @type ^`int`;
  #L5005a4.  v9:= v1.`z2.f.d` @type ^`v1.j1` @kind object;
  #L5005a8.  v10:= v1.`z2.f.e` @type ^`int`;
  #L5005ac.  v11:= v1.`z2.f.f` @type ^`java.lang.Object` @kind object;
  #L5005b0.  v12:= v1.`z2.f.g` @type ^`long` @kind wide;
  #L5005b4.  v4:= v1.`z2.f.h` @type ^`long` @kind wide;
  #L5005b8.  v16:= v6 @kind object;
  #L5005bc.  v17:= v14 @kind object;
  #L5005c0.  v18:= v7;
  #L5005c4.  v19:= v8;
  #L5005c8.  v20:= v9 @kind object;
  #L5005cc.  v21:= v10;
  #L5005d0.  v22:= v11 @kind object;
  #L5005d4.  v23:= v12 @kind wide;
  #L5005d8.  v25:= v4 @kind wide;
  #L5005dc.  v27:= v36 @kind object;
  #L5005e0.  v28:= v3;
  #L5005e4.  call `w`(v16, v17, v18, v19, v20, v21, v22, v23, v25, v27, v28) @signature `Lx2/b0$a;.w:(Lx2/n;IILv1/j1;ILjava/lang/Object;JJLjava/io/IOException;Z)V` @kind virtual;
  #L5005ea.  if v3 == 0 then goto L50060c;
  #L5005ee.  v3:= 0I;
  #L5005f0.  v0.`z2.i.D` @type ^`z2.f` := v3 @kind object;
  #L5005f4.  v3:= v0.`z2.i.v` @type ^`r3.g0` @kind object;
  #L5005f8.  v4:= v1.`z2.f.a` @type ^`long` @kind wide;
  #L5005fc.  call `a`(v3, v4) @signature `Lr3/g0;.a:(J)V` @kind interface;
  #L500602.  v1:= v0.`z2.i.t` @type ^`x2.o0$a` @kind object;
  #L500606.  call `m`(v1, v0) @signature `Lx2/o0$a;.m:(Lx2/o0;)V` @kind interface;
  #L50060c.  return v2 @kind object;
}
procedure `void` `P`(`z2.i` v1 @kind this) @signature `Lz2/i;.P:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500c48.  v0:= 0I;
  #L500c4a.  call `Q`(v1, v0) @signature `Lz2/i;.Q:(Lz2/i$b;)V` @kind virtual;
  #L500c50.  return @kind void;
}
procedure `void` `Q`(`z2.i` v3 @kind this, `z2.i$b` v4 @kind object) @signature `Lz2/i;.Q:(Lz2/i$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L500c64.  v3.`z2.i.F` @type ^`z2.i$b` := v4 @kind object;
  #L500c68.  v4:= v3.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500c6c.  call `R`(v4) @signature `Lx2/m0;.R:()V` @kind virtual;
  #L500c72.  v4:= v3.`z2.i.B` @type ^`x2.m0`[] @kind object;
  #L500c76.  v0:= length @variable v4;
  #L500c78.  v1:= 0I;
  #L500c7a.  if v1 >= v0 then goto L500c8e;
  #L500c7e.  v2:= v4[v1] @kind object;
  #L500c82.  call `R`(v2) @signature `Lx2/m0;.R:()V` @kind virtual;
  #L500c88.  v1:= v1 + 1;
  #L500c8c.  goto L500c7a;
  #L500c8e.  v4:= v3.`z2.i.w` @type ^`r3.h0` @kind object;
  #L500c92.  call `m`(v4, v3) @signature `Lr3/h0;.m:(Lr3/h0$f;)V` @kind virtual;
  #L500c98.  return @kind void;
}
procedure `void` `S`(`z2.i` v10 @kind this, `long` v11 ) @signature `Lz2/i;.S:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L500ce4.  v10.`z2.i.H` @type ^`long` := v11 @kind wide;
  #L500ce8.  call temp:= `I`(v10) @signature `Lz2/i;.I:()Z` @kind virtual;
  #L500cee.  v0:= temp;
  #L500cf0.  if v0 == 0 then goto L500cfa;
  #L500cf4.  v10.`z2.i.G` @type ^`long` := v11 @kind wide;
  #L500cf8.  return @kind void;
  #L500cfa.  v0:= 0I;
  #L500cfc.  v1:= 0I;
  #L500cfe.  v2:= 0I;
  #L500d00.  v3:= v10.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500d04.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L500d0a.  v3:= temp;
  #L500d0c.  if v2 >= v3 then goto L500d52;
  #L500d10.  v3:= v10.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500d14.  call temp:= `get`(v3, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L500d1a.  v3:= temp @kind object;
  #L500d1c.  v3:= (`z2.a`) v3 @kind object;
  #L500d20.  v4:= v3.`z2.f.g` @type ^`long` @kind wide;
  #L500d24.  v6:= lcmp(v4, v11);
  #L500d28.  if v6 != 0 then goto L500d46;
  #L500d2c.  v4:= v3.`z2.a.k` @type ^`long` @kind wide;
  #L500d30.  v7:= -4.9E-324D;
  #L500d3a.  v9:= lcmp(v4, v7);
  #L500d3e.  if v9 != 0 then goto L500d46;
  #L500d42.  v0:= v3 @kind object;
  #L500d44.  goto L500d52;
  #L500d46.  if v6 <= 0 then goto L500d4c;
  #L500d4a.  goto L500d52;
  #L500d4c.  v2:= v2 + 1;
  #L500d50.  goto L500d00;
  #L500d52.  v2:= 1I;
  #L500d54.  if v0 == 0 then goto L500d6e;
  #L500d58.  v3:= v10.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500d5c.  call temp:= `i`(v0, v1) @signature `Lz2/a;.i:(I)I` @kind virtual;
  #L500d62.  v0:= temp;
  #L500d64.  call temp:= `Y`(v3, v0) @signature `Lx2/m0;.Y:(I)Z` @kind virtual;
  #L500d6a.  v0:= temp;
  #L500d6c.  goto L500d90;
  #L500d6e.  v0:= v10.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500d72.  call temp:= `d`(v10) @signature `Lz2/i;.d:()J` @kind virtual;
  #L500d78.  v3:= temp @kind wide;
  #L500d7a.  v5:= lcmp(v11, v3);
  #L500d7e.  if v5 >= 0 then goto L500d86;
  #L500d82.  v3:= 1I;
  #L500d84.  goto L500d88;
  #L500d86.  v3:= 0I;
  #L500d88.  call temp:= `Z`(v0, v11, v3) @signature `Lx2/m0;.Z:(JZ)Z` @kind virtual;
  #L500d8e.  v0:= temp;
  #L500d90.  if v0 == 0 then goto L500dc6;
  #L500d94.  v0:= v10.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500d98.  call temp:= `C`(v0) @signature `Lx2/m0;.C:()I` @kind virtual;
  #L500d9e.  v0:= temp;
  #L500da0.  call temp:= `O`(v10, v0, v1) @signature `Lz2/i;.O:(II)I` @kind direct;
  #L500da6.  v0:= temp;
  #L500da8.  v10.`z2.i.I` @type ^`int` := v0;
  #L500dac.  v0:= v10.`z2.i.B` @type ^`x2.m0`[] @kind object;
  #L500db0.  v3:= length @variable v0;
  #L500db2.  if v1 >= v3 then goto L500e2c;
  #L500db6.  v4:= v0[v1] @kind object;
  #L500dba.  call temp:= `Z`(v4, v11, v2) @signature `Lx2/m0;.Z:(JZ)Z` @kind virtual;
  #L500dc0.  v1:= v1 + 1;
  #L500dc4.  goto L500db2;
  #L500dc6.  v10.`z2.i.G` @type ^`long` := v11 @kind wide;
  #L500dca.  v10.`z2.i.K` @type ^`boolean` := v1 @kind boolean;
  #L500dce.  v11:= v10.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500dd2.  call `clear`(v11) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L500dd8.  v10.`z2.i.I` @type ^`int` := v1;
  #L500ddc.  v11:= v10.`z2.i.w` @type ^`r3.h0` @kind object;
  #L500de0.  call temp:= `j`(v11) @signature `Lr3/h0;.j:()Z` @kind virtual;
  #L500de6.  v11:= temp;
  #L500de8.  if v11 == 0 then goto L500e1c;
  #L500dec.  v11:= v10.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500df0.  call `r`(v11) @signature `Lx2/m0;.r:()V` @kind virtual;
  #L500df6.  v11:= v10.`z2.i.B` @type ^`x2.m0`[] @kind object;
  #L500dfa.  v12:= length @variable v11;
  #L500dfc.  if v1 >= v12 then goto L500e10;
  #L500e00.  v0:= v11[v1] @kind object;
  #L500e04.  call `r`(v0) @signature `Lx2/m0;.r:()V` @kind virtual;
  #L500e0a.  v1:= v1 + 1;
  #L500e0e.  goto L500dfc;
  #L500e10.  v11:= v10.`z2.i.w` @type ^`r3.h0` @kind object;
  #L500e14.  call `f`(v11) @signature `Lr3/h0;.f:()V` @kind virtual;
  #L500e1a.  goto L500e2c;
  #L500e1c.  v11:= v10.`z2.i.w` @type ^`r3.h0` @kind object;
  #L500e20.  call `g`(v11) @signature `Lr3/h0;.g:()V` @kind virtual;
  #L500e26.  call `R`(v10) @signature `Lz2/i;.R:()V` @kind direct;
  #L500e2c.  return @kind void;
}
procedure `z2.i$a` `T`(`z2.i` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lz2/i;.T:(JI)Lz2/i$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L500f18.  v0:= 0I;
  #L500f1a.  v1:= v2.`z2.i.B` @type ^`x2.m0`[] @kind object;
  #L500f1e.  v1:= length @variable v1;
  #L500f20.  if v0 >= v1 then goto L500f72;
  #L500f24.  v1:= v2.`z2.i.p` @type ^`int`[] @kind object;
  #L500f28.  v1:= v1[v0];
  #L500f2c.  if v1 != v5 then goto L500f6c;
  #L500f30.  v5:= v2.`z2.i.r` @type ^`boolean`[] @kind object;
  #L500f34.  v5:= v5[v0] @kind boolean;
  #L500f38.  v1:= 1I;
  #L500f3a.  v5:= v5 ^~ v1 @kind int;
  #L500f3c.  call `f`(v5) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L500f42.  v5:= v2.`z2.i.r` @type ^`boolean`[] @kind object;
  #L500f46.  v5[v0]:= v1 @kind boolean;
  #L500f4a.  v5:= v2.`z2.i.B` @type ^`x2.m0`[] @kind object;
  #L500f4e.  v5:= v5[v0] @kind object;
  #L500f52.  call temp:= `Z`(v5, v3, v1) @signature `Lx2/m0;.Z:(JZ)Z` @kind virtual;
  #L500f58.  v3:= new `z2.i$a`;
  #L500f5c.  v4:= v2.`z2.i.B` @type ^`x2.m0`[] @kind object;
  #L500f60.  v4:= v4[v0] @kind object;
  #L500f64.  call `<init>`(v3, v2, v2, v4, v0) @signature `Lz2/i$a;.<init>:(Lz2/i;Lz2/i;Lx2/m0;I)V` @kind direct;
  #L500f6a.  return v3 @kind object;
  #L500f6c.  v0:= v0 + 1;
  #L500f70.  goto L500f1a;
  #L500f72.  v3:= new `java.lang.IllegalStateException`;
  #L500f76.  call `<init>`(v3) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L500f7c.  throw v3;
}
procedure `boolean` `a`(`z2.i` v1 @kind this) @signature `Lz2/i;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5000e0.  v0:= v1.`z2.i.w` @type ^`r3.h0` @kind object;
  #L5000e4.  call temp:= `j`(v0) @signature `Lr3/h0;.j:()Z` @kind virtual;
  #L5000ea.  v0:= temp;
  #L5000ec.  return v0;
}
procedure `void` `b`(`z2.i` v1 @kind this) @signature `Lz2/i;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500928.  v0:= v1.`z2.i.w` @type ^`r3.h0` @kind object;
  #L50092c.  call `b`(v0) @signature `Lr3/h0;.b:()V` @kind virtual;
  #L500932.  v0:= v1.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500936.  call `N`(v0) @signature `Lx2/m0;.N:()V` @kind virtual;
  #L50093c.  v0:= v1.`z2.i.w` @type ^`r3.h0` @kind object;
  #L500940.  call temp:= `j`(v0) @signature `Lr3/h0;.j:()Z` @kind virtual;
  #L500946.  v0:= temp;
  #L500948.  if v0 != 0 then goto L500956;
  #L50094c.  v0:= v1.`z2.i.s` @type ^`z2.j` @kind object;
  #L500950.  call `b`(v0) @signature `Lz2/j;.b:()V` @kind interface;
  #L500956.  return @kind void;
}
procedure `long` `c`(`z2.i` v1 @kind this, `long` v2 , `v1.w2` v4 @kind object) @signature `Lz2/i;.c:(JLv1/w2;)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5002e8.  v0:= v1.`z2.i.s` @type ^`z2.j` @kind object;
  #L5002ec.  call temp:= `c`(v0, v2, v4) @signature `Lz2/j;.c:(JLv1/w2;)J` @kind interface;
  #L5002f2.  v2:= temp @kind wide;
  #L5002f4.  return v2 @kind wide;
}
procedure `long` `d`(`z2.i` v2 @kind this) @signature `Lz2/i;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5003ac.  call temp:= `I`(v2) @signature `Lz2/i;.I:()Z` @kind virtual;
  #L5003b2.  v0:= temp;
  #L5003b4.  if v0 == 0 then goto L5003be;
  #L5003b8.  v0:= v2.`z2.i.G` @type ^`long` @kind wide;
  #L5003bc.  return v0 @kind wide;
  #L5003be.  v0:= v2.`z2.i.K` @type ^`boolean` @kind boolean;
  #L5003c2.  if v0 == 0 then goto L5003cc;
  #L5003c6.  v0:= -9223372036854775808L;
  #L5003ca.  goto L5003d8;
  #L5003cc.  call temp:= `F`(v2) @signature `Lz2/i;.F:()Lz2/a;` @kind direct;
  #L5003d2.  v0:= temp @kind object;
  #L5003d4.  v0:= v0.`z2.f.h` @type ^`long` @kind wide;
  #L5003d8.  return v0 @kind wide;
}
procedure `int` `e`(`z2.i` v3 @kind this, `v1.k1` v4 @kind object, `y1.g` v5 @kind object, `int` v6 ) @signature `Lz2/i;.e:(Lv1/k1;Ly1/g;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L5001f4.  call temp:= `I`(v3) @signature `Lz2/i;.I:()Z` @kind virtual;
  #L5001fa.  v0:= temp;
  #L5001fc.  v1:= -3I;
  #L5001fe.  if v0 == 0 then goto L500204;
  #L500202.  return v1;
  #L500204.  v0:= v3.`z2.i.J` @type ^`z2.a` @kind object;
  #L500208.  if v0 == 0 then goto L500228;
  #L50020c.  v2:= 0I;
  #L50020e.  call temp:= `i`(v0, v2) @signature `Lz2/a;.i:(I)I` @kind virtual;
  #L500214.  v0:= temp;
  #L500216.  v2:= v3.`z2.i.A` @type ^`x2.m0` @kind object;
  #L50021a.  call temp:= `C`(v2) @signature `Lx2/m0;.C:()I` @kind virtual;
  #L500220.  v2:= temp;
  #L500222.  if v0 > v2 then goto L500228;
  #L500226.  return v1;
  #L500228.  call `J`(v3) @signature `Lz2/i;.J:()V` @kind direct;
  #L50022e.  v0:= v3.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500232.  v1:= v3.`z2.i.K` @type ^`boolean` @kind boolean;
  #L500236.  call temp:= `S`(v0, v4, v5, v6, v1) @signature `Lx2/m0;.S:(Lv1/k1;Ly1/g;IZ)I` @kind virtual;
  #L50023c.  v4:= temp;
  #L50023e.  return v4;
}
procedure `long` `f`(`z2.i` v4 @kind this) @signature `Lz2/i;.f:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L500308.  v0:= v4.`z2.i.K` @type ^`boolean` @kind boolean;
  #L50030c.  if v0 == 0 then goto L500316;
  #L500310.  v0:= -9223372036854775808L;
  #L500314.  return v0 @kind wide;
  #L500316.  call temp:= `I`(v4) @signature `Lz2/i;.I:()Z` @kind virtual;
  #L50031c.  v0:= temp;
  #L50031e.  if v0 == 0 then goto L500328;
  #L500322.  v0:= v4.`z2.i.G` @type ^`long` @kind wide;
  #L500326.  return v0 @kind wide;
  #L500328.  v0:= v4.`z2.i.H` @type ^`long` @kind wide;
  #L50032c.  call temp:= `F`(v4) @signature `Lz2/i;.F:()Lz2/a;` @kind direct;
  #L500332.  v2:= temp @kind object;
  #L500334.  call temp:= `h`(v2) @signature `Lz2/n;.h:()Z` @kind virtual;
  #L50033a.  v3:= temp;
  #L50033c.  if v3 == 0 then goto L500342;
  #L500340.  goto L500374;
  #L500342.  v2:= v4.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500346.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L50034c.  v2:= temp;
  #L50034e.  v3:= 1I;
  #L500350.  if v2 <= v3 then goto L500372;
  #L500354.  v2:= v4.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500358.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L50035e.  v3:= temp;
  #L500360.  v3:= v3 + -2;
  #L500364.  call temp:= `get`(v2, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L50036a.  v2:= temp @kind object;
  #L50036c.  v2:= (`z2.a`) v2 @kind object;
  #L500370.  goto L500374;
  #L500372.  v2:= 0I;
  #L500374.  if v2 == 0 then goto L500384;
  #L500378.  v2:= v2.`z2.f.h` @type ^`long` @kind wide;
  #L50037c.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L500382.  v0:= temp @kind wide;
  #L500384.  v2:= v4.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500388.  call temp:= `z`(v2) @signature `Lx2/m0;.z:()J` @kind virtual;
  #L50038e.  v2:= temp @kind wide;
  #L500390.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L500396.  v0:= temp @kind wide;
  #L500398.  return v0 @kind wide;
}
procedure `boolean` `g`(`z2.i` v23 @kind this, `long` v24 ) @signature `Lz2/i;.g:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L4ffecc.  v0:= v23 @kind object;
  #L4ffed0.  v1:= v0.`z2.i.K` @type ^`boolean` @kind boolean;
  #L4ffed4.  v2:= 0I;
  #L4ffed6.  if v1 != 0 then goto L500060;
  #L4ffeda.  v1:= v0.`z2.i.w` @type ^`r3.h0` @kind object;
  #L4ffede.  call temp:= `j`(v1) @signature `Lr3/h0;.j:()Z` @kind virtual;
  #L4ffee4.  v1:= temp;
  #L4ffee6.  if v1 != 0 then goto L500060;
  #L4ffeea.  v1:= v0.`z2.i.w` @type ^`r3.h0` @kind object;
  #L4ffeee.  call temp:= `i`(v1) @signature `Lr3/h0;.i:()Z` @kind virtual;
  #L4ffef4.  v1:= temp;
  #L4ffef6.  if v1 == 0 then goto L4ffefe;
  #L4ffefa.  goto L500060;
  #L4ffefe.  call temp:= `I`(v23) @signature `Lz2/i;.I:()Z` @kind virtual;
  #L4fff04.  v1:= temp;
  #L4fff06.  if v1 == 0 then goto L4fff18;
  #L4fff0a.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4fff10.  v3:= temp @kind object;
  #L4fff12.  v4:= v0.`z2.i.G` @type ^`long` @kind wide;
  #L4fff16.  goto L4fff28;
  #L4fff18.  v3:= v0.`z2.i.z` @type ^`java.util.List` @kind object;
  #L4fff1c.  call temp:= `F`(v23) @signature `Lz2/i;.F:()Lz2/a;` @kind direct;
  #L4fff22.  v4:= temp @kind object;
  #L4fff24.  v4:= v4.`z2.f.h` @type ^`long` @kind wide;
  #L4fff28.  v11:= v3 @kind object;
  #L4fff2a.  v9:= v4 @kind wide;
  #L4fff2c.  v6:= v0.`z2.i.s` @type ^`z2.j` @kind object;
  #L4fff30.  v12:= v0.`z2.i.x` @type ^`z2.h` @kind object;
  #L4fff34.  v7:= v24 @kind wide;
  #L4fff38.  call `e`(v6, v7, v9, v11, v12) @signature `Lz2/j;.e:(JJLjava/util/List;Lz2/h;)V` @kind interface;
  #L4fff3e.  v3:= v0.`z2.i.x` @type ^`z2.h` @kind object;
  #L4fff42.  v4:= v3.`z2.h.b` @type ^`boolean` @kind boolean;
  #L4fff46.  v5:= v3.`z2.h.a` @type ^`z2.f` @kind object;
  #L4fff4a.  call `a`(v3) @signature `Lz2/h;.a:()V` @kind virtual;
  #L4fff50.  v6:= -4.9E-324D;
  #L4fff5a.  v3:= 1I;
  #L4fff5c.  if v4 == 0 then goto L4fff6a;
  #L4fff60.  v0.`z2.i.G` @type ^`long` := v6 @kind wide;
  #L4fff64.  v0.`z2.i.K` @type ^`boolean` := v3 @kind boolean;
  #L4fff68.  return v3;
  #L4fff6a.  if v5 != 0 then goto L4fff70;
  #L4fff6e.  return v2;
  #L4fff70.  v0.`z2.i.D` @type ^`z2.f` := v5 @kind object;
  #L4fff74.  call temp:= `H`(v0, v5) @signature `Lz2/i;.H:(Lz2/f;)Z` @kind direct;
  #L4fff7a.  v4:= temp;
  #L4fff7c.  if v4 == 0 then goto L4fffdc;
  #L4fff80.  v4:= v5 @kind object;
  #L4fff82.  v4:= (`z2.a`) v4 @kind object;
  #L4fff86.  if v1 == 0 then goto L4fffc6;
  #L4fff8a.  v8:= v4.`z2.f.g` @type ^`long` @kind wide;
  #L4fff8e.  v10:= v0.`z2.i.G` @type ^`long` @kind wide;
  #L4fff92.  v1:= lcmp(v8, v10);
  #L4fff96.  if v1 == 0 then goto L4fffc2;
  #L4fff9a.  v1:= v0.`z2.i.A` @type ^`x2.m0` @kind object;
  #L4fff9e.  call `b0`(v1, v10) @signature `Lx2/m0;.b0:(J)V` @kind virtual;
  #L4fffa4.  v1:= v0.`z2.i.B` @type ^`x2.m0`[] @kind object;
  #L4fffa8.  v8:= length @variable v1;
  #L4fffaa.  if v2 >= v8 then goto L4fffc2;
  #L4fffae.  v9:= v1[v2] @kind object;
  #L4fffb2.  v10:= v0.`z2.i.G` @type ^`long` @kind wide;
  #L4fffb6.  call `b0`(v9, v10) @signature `Lx2/m0;.b0:(J)V` @kind virtual;
  #L4fffbc.  v2:= v2 + 1;
  #L4fffc0.  goto L4fffaa;
  #L4fffc2.  v0.`z2.i.G` @type ^`long` := v6 @kind wide;
  #L4fffc6.  v1:= v0.`z2.i.C` @type ^`z2.c` @kind object;
  #L4fffca.  call `k`(v4, v1) @signature `Lz2/a;.k:(Lz2/c;)V` @kind virtual;
  #L4fffd0.  v1:= v0.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L4fffd4.  call temp:= `add`(v1, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fffda.  goto L4ffff4;
  #L4fffdc.  v1:= instanceof @variable v5 @type ^`z2.m` @kind boolean;
  #L4fffe0.  if v1 == 0 then goto L4ffff4;
  #L4fffe4.  v1:= v5 @kind object;
  #L4fffe6.  v1:= (`z2.m`) v1 @kind object;
  #L4fffea.  v2:= v0.`z2.i.C` @type ^`z2.c` @kind object;
  #L4fffee.  call `g`(v1, v2) @signature `Lz2/m;.g:(Lz2/g$b;)V` @kind virtual;
  #L4ffff4.  v1:= v0.`z2.i.w` @type ^`r3.h0` @kind object;
  #L4ffff8.  v2:= v0.`z2.i.v` @type ^`r3.g0` @kind object;
  #L4ffffc.  v4:= v5.`z2.f.c` @type ^`int`;
  #L500000.  call temp:= `d`(v2, v4) @signature `Lr3/g0;.d:(I)I` @kind interface;
  #L500006.  v2:= temp;
  #L500008.  call temp:= `n`(v1, v5, v0, v2) @signature `Lr3/h0;.n:(Lr3/h0$e;Lr3/h0$b;I)J` @kind virtual;
  #L50000e.  v10:= temp @kind wide;
  #L500010.  v12:= v0.`z2.i.u` @type ^`x2.b0$a` @kind object;
  #L500014.  v13:= new `x2.n`;
  #L500018.  v7:= v5.`z2.f.a` @type ^`long` @kind wide;
  #L50001c.  v9:= v5.`z2.f.b` @type ^`r3.p` @kind object;
  #L500020.  v6:= v13 @kind object;
  #L500022.  call `<init>`(v6, v7, v9, v10) @signature `Lx2/n;.<init>:(JLr3/p;J)V` @kind direct;
  #L500028.  v14:= v5.`z2.f.c` @type ^`int`;
  #L50002c.  v15:= v0.`z2.i.o` @type ^`int`;
  #L500030.  v1:= v5.`z2.f.d` @type ^`v1.j1` @kind object;
  #L500034.  v2:= v5.`z2.f.e` @type ^`int`;
  #L500038.  v4:= v5.`z2.f.f` @type ^`java.lang.Object` @kind object;
  #L50003c.  v6:= v5.`z2.f.g` @type ^`long` @kind wide;
  #L500040.  v8:= v5.`z2.f.h` @type ^`long` @kind wide;
  #L500044.  v16:= v1 @kind object;
  #L500048.  v17:= v2;
  #L50004c.  v18:= v4 @kind object;
  #L500050.  v19:= v6 @kind wide;
  #L500054.  v21:= v8 @kind wide;
  #L500058.  call `A`(v12, v13, v14, v15, v16, v17, v18, v19, v21) @signature `Lx2/b0$a;.A:(Lx2/n;IILv1/j1;ILjava/lang/Object;JJ)V` @kind virtual;
  #L50005e.  return v3;
  #L500060.  return v2;
}
procedure `boolean` `h`(`z2.i` v2 @kind this) @signature `Lz2/i;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L500148.  call temp:= `I`(v2) @signature `Lz2/i;.I:()Z` @kind virtual;
  #L50014e.  v0:= temp;
  #L500150.  if v0 != 0 then goto L50016c;
  #L500154.  v0:= v2.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500158.  v1:= v2.`z2.i.K` @type ^`boolean` @kind boolean;
  #L50015c.  call temp:= `K`(v0, v1) @signature `Lx2/m0;.K:(Z)Z` @kind virtual;
  #L500162.  v0:= temp;
  #L500164.  if v0 == 0 then goto L50016c;
  #L500168.  v0:= 1I;
  #L50016a.  goto L50016e;
  #L50016c.  v0:= 0I;
  #L50016e.  return v0;
}
procedure `void` `i`(`z2.i` v3 @kind this, `long` v4 ) @signature `Lz2/i;.i:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L500b74.  v0:= v3.`z2.i.w` @type ^`r3.h0` @kind object;
  #L500b78.  call temp:= `i`(v0) @signature `Lr3/h0;.i:()Z` @kind virtual;
  #L500b7e.  v0:= temp;
  #L500b80.  if v0 != 0 then goto L500c36;
  #L500b84.  call temp:= `I`(v3) @signature `Lz2/i;.I:()Z` @kind virtual;
  #L500b8a.  v0:= temp;
  #L500b8c.  if v0 == 0 then goto L500b92;
  #L500b90.  goto L500c36;
  #L500b92.  v0:= v3.`z2.i.w` @type ^`r3.h0` @kind object;
  #L500b96.  call temp:= `j`(v0) @signature `Lr3/h0;.j:()Z` @kind virtual;
  #L500b9c.  v0:= temp;
  #L500b9e.  if v0 == 0 then goto L500c10;
  #L500ba2.  v0:= v3.`z2.i.D` @type ^`z2.f` @kind object;
  #L500ba6.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L500bac.  v0:= temp @kind object;
  #L500bae.  v0:= (`z2.f`) v0 @kind object;
  #L500bb2.  call temp:= `H`(v3, v0) @signature `Lz2/i;.H:(Lz2/f;)Z` @kind direct;
  #L500bb8.  v1:= temp;
  #L500bba.  if v1 == 0 then goto L500bdc;
  #L500bbe.  v1:= v3.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500bc2.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L500bc8.  v1:= temp;
  #L500bca.  v1:= v1 + -1;
  #L500bce.  call temp:= `G`(v3, v1) @signature `Lz2/i;.G:(I)Z` @kind direct;
  #L500bd4.  v1:= temp;
  #L500bd6.  if v1 == 0 then goto L500bdc;
  #L500bda.  return @kind void;
  #L500bdc.  v1:= v3.`z2.i.s` @type ^`z2.j` @kind object;
  #L500be0.  v2:= v3.`z2.i.z` @type ^`java.util.List` @kind object;
  #L500be4.  call temp:= `h`(v1, v4, v0, v2) @signature `Lz2/j;.h:(JLz2/f;Ljava/util/List;)Z` @kind interface;
  #L500bea.  v4:= temp;
  #L500bec.  if v4 == 0 then goto L500c0e;
  #L500bf0.  v4:= v3.`z2.i.w` @type ^`r3.h0` @kind object;
  #L500bf4.  call `f`(v4) @signature `Lr3/h0;.f:()V` @kind virtual;
  #L500bfa.  call temp:= `H`(v3, v0) @signature `Lz2/i;.H:(Lz2/f;)Z` @kind direct;
  #L500c00.  v4:= temp;
  #L500c02.  if v4 == 0 then goto L500c0e;
  #L500c06.  v0:= (`z2.a`) v0 @kind object;
  #L500c0a.  v3.`z2.i.J` @type ^`z2.a` := v0 @kind object;
  #L500c0e.  return @kind void;
  #L500c10.  v0:= v3.`z2.i.s` @type ^`z2.j` @kind object;
  #L500c14.  v1:= v3.`z2.i.z` @type ^`java.util.List` @kind object;
  #L500c18.  call temp:= `g`(v0, v4, v1) @signature `Lz2/j;.g:(JLjava/util/List;)I` @kind interface;
  #L500c1e.  v4:= temp;
  #L500c20.  v5:= v3.`z2.i.y` @type ^`java.util.ArrayList` @kind object;
  #L500c24.  call temp:= `size`(v5) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L500c2a.  v5:= temp;
  #L500c2c.  if v4 >= v5 then goto L500c36;
  #L500c30.  call `C`(v3, v4) @signature `Lz2/i;.C:(I)V` @kind direct;
  #L500c36.  return @kind void;
}
procedure `void` `j`(`z2.i` v4 @kind this) @signature `Lz2/i;.j:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L500b24.  v0:= v4.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500b28.  call `T`(v0) @signature `Lx2/m0;.T:()V` @kind virtual;
  #L500b2e.  v0:= v4.`z2.i.B` @type ^`x2.m0`[] @kind object;
  #L500b32.  v1:= length @variable v0;
  #L500b34.  v2:= 0I;
  #L500b36.  if v2 >= v1 then goto L500b4a;
  #L500b3a.  v3:= v0[v2] @kind object;
  #L500b3e.  call `T`(v3) @signature `Lx2/m0;.T:()V` @kind virtual;
  #L500b44.  v2:= v2 + 1;
  #L500b48.  goto L500b36;
  #L500b4a.  v0:= v4.`z2.i.s` @type ^`z2.j` @kind object;
  #L500b4e.  call `a`(v0) @signature `Lz2/j;.a:()V` @kind interface;
  #L500b54.  v0:= v4.`z2.i.F` @type ^`z2.i$b` @kind object;
  #L500b58.  if v0 == 0 then goto L500b62;
  #L500b5c.  call `e`(v0, v4) @signature `Lz2/i$b;.e:(Lz2/i;)V` @kind interface;
  #L500b62.  return @kind void;
}
procedure `int` `m`(`z2.i` v3 @kind this, `long` v4 ) @signature `Lz2/i;.m:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L500250.  call temp:= `I`(v3) @signature `Lz2/i;.I:()Z` @kind virtual;
  #L500256.  v0:= temp;
  #L500258.  v1:= 0I;
  #L50025a.  if v0 == 0 then goto L500260;
  #L50025e.  return v1;
  #L500260.  v0:= v3.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500264.  v2:= v3.`z2.i.K` @type ^`boolean` @kind boolean;
  #L500268.  call temp:= `E`(v0, v4, v2) @signature `Lx2/m0;.E:(JZ)I` @kind virtual;
  #L50026e.  v4:= temp;
  #L500270.  v5:= v3.`z2.i.J` @type ^`z2.a` @kind object;
  #L500274.  if v5 == 0 then goto L500296;
  #L500278.  call temp:= `i`(v5, v1) @signature `Lz2/a;.i:(I)I` @kind virtual;
  #L50027e.  v5:= temp;
  #L500280.  v0:= v3.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500284.  call temp:= `C`(v0) @signature `Lx2/m0;.C:()I` @kind virtual;
  #L50028a.  v0:= temp;
  #L50028c.  v5:= v5 - v0 @kind int;
  #L50028e.  call temp:= `min`(v4, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L500294.  v4:= temp;
  #L500296.  v5:= v3.`z2.i.A` @type ^`x2.m0` @kind object;
  #L50029a.  call `e0`(v5, v4) @signature `Lx2/m0;.e0:(I)V` @kind virtual;
  #L5002a0.  call `J`(v3) @signature `Lz2/i;.J:()V` @kind direct;
  #L5002a6.  return v4;
}
procedure `void` `n`(`z2.i` v0 @kind this, `r3.h0$e` v1 @kind object, `long` v2 , `long` v4 , `boolean` v6 ) @signature `Lz2/i;.n:(Lr3/h0$e;JJZ)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L500968.  v1:= (`z2.f`) v1 @kind object;
  #L50096c.  call `L`(v0, v1, v2, v4, v6) @signature `Lz2/i;.L:(Lz2/f;JJZ)V` @kind virtual;
  #L500972.  return @kind void;
}
procedure `void` `r`(`z2.i` v4 @kind this, `long` v5 , `boolean` v7 ) @signature `Lz2/i;.r:(JZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L50072c.  call temp:= `I`(v4) @signature `Lz2/i;.I:()Z` @kind virtual;
  #L500732.  v0:= temp;
  #L500734.  if v0 == 0 then goto L50073a;
  #L500738.  return @kind void;
  #L50073a.  v0:= v4.`z2.i.A` @type ^`x2.m0` @kind object;
  #L50073e.  call temp:= `x`(v0) @signature `Lx2/m0;.x:()I` @kind virtual;
  #L500744.  v0:= temp;
  #L500746.  v1:= v4.`z2.i.A` @type ^`x2.m0` @kind object;
  #L50074a.  v2:= 1I;
  #L50074c.  call `q`(v1, v5, v7, v2) @signature `Lx2/m0;.q:(JZZ)V` @kind virtual;
  #L500752.  v5:= v4.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500756.  call temp:= `x`(v5) @signature `Lx2/m0;.x:()I` @kind virtual;
  #L50075c.  v5:= temp;
  #L50075e.  if v5 <= v0 then goto L500792;
  #L500762.  v6:= v4.`z2.i.A` @type ^`x2.m0` @kind object;
  #L500766.  call temp:= `y`(v6) @signature `Lx2/m0;.y:()J` @kind virtual;
  #L50076c.  v0:= temp @kind wide;
  #L50076e.  v6:= 0I;
  #L500770.  v2:= v4.`z2.i.B` @type ^`x2.m0`[] @kind object;
  #L500774.  v3:= length @variable v2;
  #L500776.  if v6 >= v3 then goto L500792;
  #L50077a.  v2:= v2[v6] @kind object;
  #L50077e.  v3:= v4.`z2.i.r` @type ^`boolean`[] @kind object;
  #L500782.  v3:= v3[v6] @kind boolean;
  #L500786.  call `q`(v2, v0, v7, v3) @signature `Lx2/m0;.q:(JZZ)V` @kind virtual;
  #L50078c.  v6:= v6 + 1;
  #L500790.  goto L500770;
  #L500792.  call `B`(v4, v5) @signature `Lz2/i;.B:(I)V` @kind direct;
  #L500798.  return @kind void;
}
procedure `r3.h0$c` `t`(`z2.i` v0 @kind this, `r3.h0$e` v1 @kind object, `long` v2 , `long` v4 , `java.io.IOException` v6 @kind object, `int` v7 ) @signature `Lz2/i;.t:(Lr3/h0$e;JJLjava/io/IOException;I)Lr3/h0$c;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L5003ec.  v1:= (`z2.f`) v1 @kind object;
  #L5003f0.  call temp:= `N`(v0, v1, v2, v4, v6, v7) @signature `Lz2/i;.N:(Lz2/f;JJLjava/io/IOException;I)Lr3/h0$c;` @kind virtual;
  #L5003f6.  v1:= temp @kind object;
  #L5003f8.  return v1 @kind object;
}
procedure `void` `u`(`z2.i` v0 @kind this, `r3.h0$e` v1 @kind object, `long` v2 , `long` v4 ) @signature `Lz2/i;.u:(Lr3/h0$e;JJ)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L500a6c.  v1:= (`z2.f`) v1 @kind object;
  #L500a70.  call `M`(v0, v1, v2, v4) @signature `Lz2/i;.M:(Lz2/f;JJ)V` @kind virtual;
  #L500a76.  return @kind void;
}
