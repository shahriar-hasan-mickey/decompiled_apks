record `z2.l` @kind class @AccessFlag PUBLIC_ABSTRACT extends `z2.f` @kind class {
  `byte`[] `z2.l.j` @AccessFlag PRIVATE;
  `boolean` `z2.l.k` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`z2.l` v11 @kind this, `r3.l` v12 @kind object, `r3.p` v13 @kind object, `int` v14 , `v1.j1` v15 @kind object, `int` v16 , `java.lang.Object` v17 @kind object, `byte`[] v18 @kind object) @signature `Lz2/l;.<init>:(Lr3/l;Lr3/p;ILv1/j1;ILjava/lang/Object;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L501270.  v7:= -4.9E-324D;
  #L50127a.  v9:= -4.9E-324D;
  #L501284.  v0:= v11 @kind object;
  #L501286.  v1:= v12 @kind object;
  #L501288.  v2:= v13 @kind object;
  #L50128a.  v3:= v14;
  #L50128c.  v4:= v15 @kind object;
  #L50128e.  v5:= v16;
  #L501292.  v6:= v17 @kind object;
  #L501296.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v9) @signature `Lz2/f;.<init>:(Lr3/l;Lr3/p;ILv1/j1;ILjava/lang/Object;JJ)V` @kind direct;
  #L50129c.  if v18 != 0 then goto L5012a8;
  #L5012a0.  v0:= `@@s3.l0.f` @type ^`byte`[] @kind object;
  #L5012a4.  v1:= v11 @kind object;
  #L5012a6.  goto L5012ae;
  #L5012a8.  v1:= v11 @kind object;
  #L5012aa.  v0:= v18 @kind object;
  #L5012ae.  v1.`z2.l.j` @type ^`byte`[] := v0 @kind object;
  #L5012b2.  return @kind void;
}
procedure `void` `i`(`z2.l` v2 @kind this, `int` v3 ) @signature `Lz2/l;.i:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L501368.  v0:= v2.`z2.l.j` @type ^`byte`[] @kind object;
  #L50136c.  v1:= length @variable v0;
  #L50136e.  v3:= v3 + 16384;
  #L501372.  if v1 >= v3 then goto L501388;
  #L501376.  v3:= length @variable v0;
  #L501378.  v3:= v3 + 16384;
  #L50137c.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L501382.  v3:= temp @kind object;
  #L501384.  v2.`z2.l.j` @type ^`byte`[] := v3 @kind object;
  #L501388.  return @kind void;
}
procedure `void` `a`(`z2.l` v5 @kind this) @signature `Lz2/l;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L5012dc.  v0:= v5.`z2.f.i` @type ^`r3.o0` @kind object;
  #L5012e0.  v1:= v5.`z2.f.b` @type ^`r3.p` @kind object;
  #L5012e4.  call temp:= `e`(v0, v1) @signature `Lr3/o0;.e:(Lr3/p;)J` @kind virtual;
  #L5012ea.  v0:= 0I;
  #L5012ec.  v1:= 0I;
  #L5012ee.  v2:= -1I;
  #L5012f0.  if v0 == v2 then goto L50131e;
  #L5012f4.  v0:= v5.`z2.l.k` @type ^`boolean` @kind boolean;
  #L5012f8.  if v0 != 0 then goto L50131e;
  #L5012fc.  call `i`(v5, v1) @signature `Lz2/l;.i:(I)V` @kind direct;
  #L501302.  v0:= v5.`z2.f.i` @type ^`r3.o0` @kind object;
  #L501306.  v3:= v5.`z2.l.j` @type ^`byte`[] @kind object;
  #L50130a.  v4:= 16384I;
  #L50130e.  call temp:= `b`(v0, v3, v1, v4) @signature `Lr3/o0;.b:([BII)I` @kind virtual;
  #L501314.  v0:= temp;
  #L501316.  if v0 == v2 then goto L5012ee;
  #L50131a.  v1:= v1 + v0 @kind int;
  #L50131c.  goto L5012ee;
  #L50131e.  v0:= v5.`z2.l.k` @type ^`boolean` @kind boolean;
  #L501322.  if v0 != 0 then goto L501330;
  #L501326.  v0:= v5.`z2.l.j` @type ^`byte`[] @kind object;
  #L50132a.  call `g`(v5, v0, v1) @signature `Lz2/l;.g:([BI)V` @kind virtual;
  #L501330.  v0:= v5.`z2.f.i` @type ^`r3.o0` @kind object;
  #L501334.  call `a`(v0) @signature `Lr3/o;.a:(Lr3/l;)V` @kind static;
  #L50133a.  return @kind void;
  #L50133c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L50133e.  v1:= v5.`z2.f.i` @type ^`r3.o0` @kind object;
  #L501342.  call `a`(v1) @signature `Lr3/o;.a:(Lr3/l;)V` @kind static;
  #L501348.  throw v0;
  catch `java.lang.Throwable` @[L5012dc..L501330] goto L50133c;
}
procedure `void` `b`(`z2.l` v1 @kind this) @signature `Lz2/l;.b:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L5012c4.  v0:= 1I;
  #L5012c6.  v1.`z2.l.k` @type ^`boolean` := v0 @kind boolean;
  #L5012ca.  return @kind void;
}
procedure `void` `g`(`byte`[] v0 @kind object, `int` v1 ) @signature `Lz2/l;.g:([BI)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `byte`[] `h`(`z2.l` v1 @kind this) @signature `Lz2/l;.h:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501258.  v0:= v1.`z2.l.j` @type ^`byte`[] @kind object;
  #L50125c.  return v0 @kind object;
}
