record `z2.e$a` @kind class @AccessFlag FINAL extends `a2.d0` @kind interface {
  `int` `z2.e$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `z2.e$a.b` @AccessFlag PRIVATE_FINAL;
  `v1.j1` `z2.e$a.c` @AccessFlag PRIVATE_FINAL;
  `a2.k` `z2.e$a.d` @AccessFlag PRIVATE_FINAL;
  `v1.j1` `z2.e$a.e` @AccessFlag PUBLIC;
  `a2.d0` `z2.e$a.f` @AccessFlag PRIVATE;
  `long` `z2.e$a.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`z2.e$a` v0 @kind this, `int` v1 , `int` v2 , `v1.j1` v3 @kind object) @signature `Lz2/e$a;.<init>:(IILv1/j1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ff804.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ff80a.  v0.`z2.e$a.a` @type ^`int` := v1;
  #L4ff80e.  v0.`z2.e$a.b` @type ^`int` := v2;
  #L4ff812.  v0.`z2.e$a.c` @type ^`v1.j1` := v3 @kind object;
  #L4ff816.  v1:= new `a2.k`;
  #L4ff81a.  call `<init>`(v1) @signature `La2/k;.<init>:()V` @kind direct;
  #L4ff820.  v0.`z2.e$a.d` @type ^`a2.k` := v1 @kind object;
  #L4ff824.  return @kind void;
}
procedure `void` `a`(`z2.e$a` v0 @kind this, `s3.z` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lz2/e$a;.a:(Ls3/z;II)V` @AccessFlag PUBLIC {
    temp;

  #L4ff8d8.  v3:= v0.`z2.e$a.f` @type ^`a2.d0` @kind object;
  #L4ff8dc.  call temp:= `j`(v3) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4ff8e2.  v3:= temp @kind object;
  #L4ff8e4.  v3:= (`a2.d0`) v3 @kind object;
  #L4ff8e8.  call `c`(v3, v1, v2) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L4ff8ee.  return @kind void;
}
procedure `void` `b`(`z2.e$a` v1 @kind this, `v1.j1` v2 @kind object) @signature `Lz2/e$a;.b:(Lv1/j1;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ff880.  v0:= v1.`z2.e$a.c` @type ^`v1.j1` @kind object;
  #L4ff884.  if v0 == 0 then goto L4ff890;
  #L4ff888.  call temp:= `j`(v2, v0) @signature `Lv1/j1;.j:(Lv1/j1;)Lv1/j1;` @kind virtual;
  #L4ff88e.  v2:= temp @kind object;
  #L4ff890.  v1.`z2.e$a.e` @type ^`v1.j1` := v2 @kind object;
  #L4ff894.  v2:= v1.`z2.e$a.f` @type ^`a2.d0` @kind object;
  #L4ff898.  call temp:= `j`(v2) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4ff89e.  v2:= temp @kind object;
  #L4ff8a0.  v2:= (`a2.d0`) v2 @kind object;
  #L4ff8a4.  v0:= v1.`z2.e$a.e` @type ^`v1.j1` @kind object;
  #L4ff8a8.  call `b`(v2, v0) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L4ff8ae.  return @kind void;
}
procedure `void` `c`(`z2.e$a` v0 @kind this, `s3.z` v1 @kind object, `int` v2 ) @signature `Lz2/e$a;.c:(Ls3/z;I)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4ff8c0.  call `b`(v0, v1, v2) @signature `La2/c0;.b:(La2/d0;Ls3/z;I)V` @kind static;
  #L4ff8c6.  return @kind void;
}
procedure `int` `d`(`z2.e$a` v0 @kind this, `r3.i` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lz2/e$a;.d:(Lr3/i;IZ)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4ff7bc.  call temp:= `a`(v0, v1, v2, v3) @signature `La2/c0;.a:(La2/d0;Lr3/i;IZ)I` @kind static;
  #L4ff7c2.  v1:= temp;
  #L4ff7c4.  return v1;
}
procedure `int` `e`(`z2.e$a` v0 @kind this, `r3.i` v1 @kind object, `int` v2 , `boolean` v3 , `int` v4 ) @signature `Lz2/e$a;.e:(Lr3/i;IZI)I` @AccessFlag PUBLIC {
    temp;

  #L4ff7d8.  v4:= v0.`z2.e$a.f` @type ^`a2.d0` @kind object;
  #L4ff7dc.  call temp:= `j`(v4) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4ff7e2.  v4:= temp @kind object;
  #L4ff7e4.  v4:= (`a2.d0`) v4 @kind object;
  #L4ff7e8.  call temp:= `d`(v4, v1, v2, v3) @signature `La2/d0;.d:(Lr3/i;IZ)I` @kind interface;
  #L4ff7ee.  v1:= temp;
  #L4ff7f0.  return v1;
}
procedure `void` `f`(`z2.e$a` v8 @kind this, `long` v9 , `int` v11 , `int` v12 , `int` v13 , `a2.d0$a` v14 @kind object) @signature `Lz2/e$a;.f:(JIIILa2/d0$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4ff900.  v0:= v8.`z2.e$a.g` @type ^`long` @kind wide;
  #L4ff904.  v2:= -4.9E-324D;
  #L4ff90e.  v4:= lcmp(v0, v2);
  #L4ff912.  if v4 == 0 then goto L4ff926;
  #L4ff916.  v2:= lcmp(v9, v0);
  #L4ff91a.  if v2 < 0 then goto L4ff926;
  #L4ff91e.  v0:= v8.`z2.e$a.d` @type ^`a2.k` @kind object;
  #L4ff922.  v8.`z2.e$a.f` @type ^`a2.d0` := v0 @kind object;
  #L4ff926.  v0:= v8.`z2.e$a.f` @type ^`a2.d0` @kind object;
  #L4ff92a.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4ff930.  v0:= temp @kind object;
  #L4ff932.  v1:= v0 @kind object;
  #L4ff934.  v1:= (`a2.d0`) v1 @kind object;
  #L4ff938.  v2:= v9 @kind wide;
  #L4ff93a.  v4:= v11;
  #L4ff93c.  v5:= v12;
  #L4ff93e.  v6:= v13;
  #L4ff940.  v7:= v14 @kind object;
  #L4ff942.  call `f`(v1, v2, v4, v5, v6, v7) @signature `La2/d0;.f:(JIIILa2/d0$a;)V` @kind interface;
  #L4ff948.  return @kind void;
}
procedure `void` `g`(`z2.e$a` v0 @kind this, `z2.g$b` v1 @kind object, `long` v2 ) @signature `Lz2/e$a;.g:(Lz2/g$b;J)V` @AccessFlag PUBLIC {
    temp;

  #L4ff838.  if v1 != 0 then goto L4ff846;
  #L4ff83c.  v1:= v0.`z2.e$a.d` @type ^`a2.k` @kind object;
  #L4ff840.  v0.`z2.e$a.f` @type ^`a2.d0` := v1 @kind object;
  #L4ff844.  return @kind void;
  #L4ff846.  v0.`z2.e$a.g` @type ^`long` := v2 @kind wide;
  #L4ff84a.  v2:= v0.`z2.e$a.a` @type ^`int`;
  #L4ff84e.  v3:= v0.`z2.e$a.b` @type ^`int`;
  #L4ff852.  call temp:= `e`(v1, v2, v3) @signature `Lz2/g$b;.e:(II)La2/d0;` @kind interface;
  #L4ff858.  v1:= temp @kind object;
  #L4ff85a.  v0.`z2.e$a.f` @type ^`a2.d0` := v1 @kind object;
  #L4ff85e.  v2:= v0.`z2.e$a.e` @type ^`v1.j1` @kind object;
  #L4ff862.  if v2 == 0 then goto L4ff86c;
  #L4ff866.  call `b`(v1, v2) @signature `La2/d0;.b:(Lv1/j1;)V` @kind interface;
  #L4ff86c.  return @kind void;
}
