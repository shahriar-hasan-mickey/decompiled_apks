record `z2.m` @kind class @AccessFlag PUBLIC_FINAL extends `z2.f` @kind class {
  `z2.g` `z2.m.j` @AccessFlag PRIVATE_FINAL;
  `z2.g$b` `z2.m.k` @AccessFlag PRIVATE;
  `long` `z2.m.l` @AccessFlag PRIVATE;
  `boolean` `z2.m.m` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`z2.m` v11 @kind this, `r3.l` v12 @kind object, `r3.p` v13 @kind object, `v1.j1` v14 @kind object, `int` v15 , `java.lang.Object` v16 @kind object, `z2.g` v17 @kind object) @signature `Lz2/m;.<init>:(Lr3/l;Lr3/p;Lv1/j1;ILjava/lang/Object;Lz2/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L50139c.  v3:= 2I;
  #L50139e.  v7:= -4.9E-324D;
  #L5013a8.  v9:= -4.9E-324D;
  #L5013b2.  v0:= v11 @kind object;
  #L5013b4.  v1:= v12 @kind object;
  #L5013b6.  v2:= v13 @kind object;
  #L5013b8.  v4:= v14 @kind object;
  #L5013ba.  v5:= v15;
  #L5013bc.  v6:= v16 @kind object;
  #L5013c0.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v9) @signature `Lz2/f;.<init>:(Lr3/l;Lr3/p;ILv1/j1;ILjava/lang/Object;JJ)V` @kind direct;
  #L5013c6.  v1:= v17 @kind object;
  #L5013ca.  v0.`z2.m.j` @type ^`z2.g` := v1 @kind object;
  #L5013ce.  return @kind void;
}
procedure `void` `a`(`z2.m` v11 @kind this) @signature `Lz2/m;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L501410.  v0:= v11.`z2.m.l` @type ^`long` @kind wide;
  #L501414.  v2:= 0L;
  #L501418.  v4:= lcmp(v0, v2);
  #L50141c.  if v4 != 0 then goto L501442;
  #L501420.  v5:= v11.`z2.m.j` @type ^`z2.g` @kind object;
  #L501424.  v6:= v11.`z2.m.k` @type ^`z2.g$b` @kind object;
  #L501428.  v7:= -4.9E-324D;
  #L501432.  v9:= -4.9E-324D;
  #L50143c.  call `c`(v5, v6, v7, v9) @signature `Lz2/g;.c:(Lz2/g$b;JJ)V` @kind interface;
  #L501442.  v0:= v11.`z2.f.b` @type ^`r3.p` @kind object;
  #L501446.  v1:= v11.`z2.m.l` @type ^`long` @kind wide;
  #L50144a.  call temp:= `e`(v0, v1) @signature `Lr3/p;.e:(J)Lr3/p;` @kind virtual;
  #L501450.  v0:= temp @kind object;
  #L501452.  v7:= new `a2.f`;
  #L501456.  v2:= v11.`z2.f.i` @type ^`r3.o0` @kind object;
  #L50145a.  v3:= v0.`r3.p.f` @type ^`long` @kind wide;
  #L50145e.  call temp:= `e`(v2, v0) @signature `Lr3/o0;.e:(Lr3/p;)J` @kind virtual;
  #L501464.  v5:= temp @kind wide;
  #L501466.  v1:= v7 @kind object;
  #L501468.  call `<init>`(v1, v2, v3, v5) @signature `La2/f;.<init>:(Lr3/i;JJ)V` @kind direct;
  #L50146e.  v0:= v11.`z2.m.m` @type ^`boolean` @kind boolean;
  #L501472.  if v0 != 0 then goto L501488;
  #L501476.  v0:= v11.`z2.m.j` @type ^`z2.g` @kind object;
  #L50147a.  call temp:= `b`(v0, v7) @signature `Lz2/g;.b:(La2/m;)Z` @kind interface;
  #L501480.  v0:= temp;
  #L501482.  if v0 == 0 then goto L501488;
  #L501486.  goto L50146e;
  #L501488.  call temp:= `q`(v7) @signature `La2/m;.q:()J` @kind interface;
  #L50148e.  v0:= temp @kind wide;
  #L501490.  v2:= v11.`z2.f.b` @type ^`r3.p` @kind object;
  #L501494.  v2:= v2.`r3.p.f` @type ^`long` @kind wide;
  #L501498.  v0:= v0 - v2 @kind long;
  #L50149a.  v11.`z2.m.l` @type ^`long` := v0 @kind wide;
  #L50149e.  v0:= v11.`z2.f.i` @type ^`r3.o0` @kind object;
  #L5014a2.  call `a`(v0) @signature `Lr3/o;.a:(Lr3/l;)V` @kind static;
  #L5014a8.  return @kind void;
  #L5014aa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5014ac.  call temp:= `q`(v7) @signature `La2/m;.q:()J` @kind interface;
  #L5014b2.  v1:= temp @kind wide;
  #L5014b4.  v3:= v11.`z2.f.b` @type ^`r3.p` @kind object;
  #L5014b8.  v3:= v3.`r3.p.f` @type ^`long` @kind wide;
  #L5014bc.  v1:= v1 - v3 @kind long;
  #L5014be.  v11.`z2.m.l` @type ^`long` := v1 @kind wide;
  #L5014c2.  throw v0;
  #L5014c4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5014c6.  v1:= v11.`z2.f.i` @type ^`r3.o0` @kind object;
  #L5014ca.  call `a`(v1) @signature `Lr3/o;.a:(Lr3/l;)V` @kind static;
  #L5014d0.  throw v0;
  catch `java.lang.Throwable` @[L501442..L50146e] goto L5014c4;
  catch `java.lang.Throwable` @[L50146e..L501482] goto L5014aa;
  catch `java.lang.Throwable` @[L501488..L50149e] goto L5014c4;
  catch `java.lang.Throwable` @[L5014ac..L5014c4] goto L5014c4;
}
procedure `void` `b`(`z2.m` v1 @kind this) @signature `Lz2/m;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5013e0.  v0:= 1I;
  #L5013e2.  v1.`z2.m.m` @type ^`boolean` := v0 @kind boolean;
  #L5013e6.  return @kind void;
}
procedure `void` `g`(`z2.m` v0 @kind this, `z2.g$b` v1 @kind object) @signature `Lz2/m;.g:(Lz2/g$b;)V` @AccessFlag PUBLIC {
    temp;

  #L5013f8.  v0.`z2.m.k` @type ^`z2.g$b` := v1 @kind object;
  #L5013fc.  return @kind void;
}
