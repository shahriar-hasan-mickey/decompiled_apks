record `z2.e` @kind class @AccessFlag PUBLIC_FINAL extends `a2.n` @kind interface, `z2.g` @kind interface {
  `a2.l` `z2.e.o` @AccessFlag PRIVATE_FINAL;
  `int` `z2.e.p` @AccessFlag PRIVATE_FINAL;
  `v1.j1` `z2.e.q` @AccessFlag PRIVATE_FINAL;
  `android.util.SparseArray` `z2.e.r` @AccessFlag PRIVATE_FINAL;
  `boolean` `z2.e.s` @AccessFlag PRIVATE;
  `z2.g$b` `z2.e.t` @AccessFlag PRIVATE;
  `long` `z2.e.u` @AccessFlag PRIVATE;
  `a2.a0` `z2.e.v` @AccessFlag PRIVATE;
  `v1.j1`[] `z2.e.w` @AccessFlag PRIVATE;
}
global `z2.g$a` `@@z2.e.x` @AccessFlag PUBLIC_STATIC_FINAL;
global `a2.z` `@@z2.e.y` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lz2/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4ffa44.  v0:= `@@z2.d.a` @type ^`z2.d` @kind object;
  #L4ffa48.  `@@z2.e.x` @type ^`z2.g$a` := v0 @kind object;
  #L4ffa4c.  v0:= new `a2.z`;
  #L4ffa50.  call `<init>`(v0) @signature `La2/z;.<init>:()V` @kind direct;
  #L4ffa56.  `@@z2.e.y` @type ^`a2.z` := v0 @kind object;
  #L4ffa5a.  return @kind void;
}
procedure `void` `<init>`(`z2.e` v0 @kind this, `a2.l` v1 @kind object, `int` v2 , `v1.j1` v3 @kind object) @signature `Lz2/e;.<init>:(La2/l;ILv1/j1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4ffa6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4ffa72.  v0.`z2.e.o` @type ^`a2.l` := v1 @kind object;
  #L4ffa76.  v0.`z2.e.p` @type ^`int` := v2;
  #L4ffa7a.  v0.`z2.e.q` @type ^`v1.j1` := v3 @kind object;
  #L4ffa7e.  v1:= new `android.util.SparseArray`;
  #L4ffa82.  call `<init>`(v1) @signature `Landroid/util/SparseArray;.<init>:()V` @kind direct;
  #L4ffa88.  v0.`z2.e.r` @type ^`android.util.SparseArray` := v1 @kind object;
  #L4ffa8c.  return @kind void;
}
procedure `z2.g` `g`(`int` v0 , `v1.j1` v1 @kind object, `boolean` v2 , `java.util.List` v3 @kind object, `a2.d0` v4 @kind object, `w1.t1` v5 @kind object) @signature `Lz2/e;.g:(ILv1/j1;ZLjava/util/List;La2/d0;Lw1/t1;)Lz2/g;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L4ffbd0.  call temp:= `i`(v0, v1, v2, v3, v4, v5) @signature `Lz2/e;.i:(ILv1/j1;ZLjava/util/List;La2/d0;Lw1/t1;)Lz2/g;` @kind static;
  #L4ffbd6.  v0:= temp @kind object;
  #L4ffbd8.  return v0 @kind object;
}
procedure `z2.g` `i`(`int` v6 , `v1.j1` v7 @kind object, `boolean` v8 , `java.util.List` v9 @kind object, `a2.d0` v10 @kind object, `w1.t1` v11 @kind object) @signature `Lz2/e;.i:(ILv1/j1;ZLjava/util/List;La2/d0;Lw1/t1;)Lz2/g;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4ffbec.  v11:= v7.`v1.j1.y` @type ^`java.lang.String` @kind object;
  #L4ffbf0.  call temp:= `r`(v11) @signature `Ls3/u;.r:(Ljava/lang/String;)Z` @kind static;
  #L4ffbf6.  v0:= temp;
  #L4ffbf8.  if v0 == 0 then goto L4ffc00;
  #L4ffbfc.  v6:= 0I;
  #L4ffbfe.  return v6 @kind object;
  #L4ffc00.  call temp:= `q`(v11) @signature `Ls3/u;.q:(Ljava/lang/String;)Z` @kind static;
  #L4ffc06.  v11:= temp;
  #L4ffc08.  if v11 == 0 then goto L4ffc1a;
  #L4ffc0c.  v8:= new `g2.e`;
  #L4ffc10.  v9:= 1I;
  #L4ffc12.  call `<init>`(v8, v9) @signature `Lg2/e;.<init>:(I)V` @kind direct;
  #L4ffc18.  goto L4ffc3c;
  #L4ffc1a.  v11:= 0I;
  #L4ffc1c.  if v8 == 0 then goto L4ffc26;
  #L4ffc20.  v11:= 4I;
  #L4ffc22.  v1:= 4I;
  #L4ffc24.  goto L4ffc28;
  #L4ffc26.  v1:= 0I;
  #L4ffc28.  v8:= new `i2.g`;
  #L4ffc2c.  v2:= 0I;
  #L4ffc2e.  v3:= 0I;
  #L4ffc30.  v0:= v8 @kind object;
  #L4ffc32.  v4:= v9 @kind object;
  #L4ffc34.  v5:= v10 @kind object;
  #L4ffc36.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Li2/g;.<init>:(ILs3/h0;Li2/o;Ljava/util/List;La2/d0;)V` @kind direct;
  #L4ffc3c.  v9:= new `z2.e`;
  #L4ffc40.  call `<init>`(v9, v8, v6, v7) @signature `Lz2/e;.<init>:(La2/l;ILv1/j1;)V` @kind direct;
  #L4ffc46.  return v9 @kind object;
}
procedure `void` `a`(`z2.e` v1 @kind this) @signature `Lz2/e;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ffb9c.  v0:= v1.`z2.e.o` @type ^`a2.l` @kind object;
  #L4ffba0.  call `a`(v0) @signature `La2/l;.a:()V` @kind interface;
  #L4ffba6.  return @kind void;
}
procedure `boolean` `b`(`z2.e` v3 @kind this, `a2.m` v4 @kind object) @signature `Lz2/e;.b:(La2/m;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ff9f0.  v0:= v3.`z2.e.o` @type ^`a2.l` @kind object;
  #L4ff9f4.  v1:= `@@z2.e.y` @type ^`a2.z` @kind object;
  #L4ff9f8.  call temp:= `j`(v0, v4, v1) @signature `La2/l;.j:(La2/m;La2/z;)I` @kind interface;
  #L4ff9fe.  v4:= temp;
  #L4ffa00.  v0:= 0I;
  #L4ffa02.  v1:= 1I;
  #L4ffa04.  if v4 == v1 then goto L4ffa0c;
  #L4ffa08.  v2:= 1I;
  #L4ffa0a.  goto L4ffa0e;
  #L4ffa0c.  v2:= 0I;
  #L4ffa0e.  call `f`(v2) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4ffa14.  if v4 != 0 then goto L4ffa1a;
  #L4ffa18.  v0:= 1I;
  #L4ffa1a.  return v0;
}
procedure `void` `c`(`z2.e` v6 @kind this, `z2.g$b` v7 @kind object, `long` v8 , `long` v10 ) @signature `Lz2/e;.c:(Lz2/g$b;JJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4ffb04.  v6.`z2.e.t` @type ^`z2.g$b` := v7 @kind object;
  #L4ffb08.  v6.`z2.e.u` @type ^`long` := v10 @kind wide;
  #L4ffb0c.  v0:= v6.`z2.e.s` @type ^`boolean` @kind boolean;
  #L4ffb10.  v1:= -4.9E-324D;
  #L4ffb1a.  v3:= 0L;
  #L4ffb1e.  if v0 != 0 then goto L4ffb46;
  #L4ffb22.  v7:= v6.`z2.e.o` @type ^`a2.l` @kind object;
  #L4ffb26.  call `d`(v7, v6) @signature `La2/l;.d:(La2/n;)V` @kind interface;
  #L4ffb2c.  v7:= lcmp(v8, v1);
  #L4ffb30.  if v7 == 0 then goto L4ffb3e;
  #L4ffb34.  v7:= v6.`z2.e.o` @type ^`a2.l` @kind object;
  #L4ffb38.  call `b`(v7, v3, v8) @signature `La2/l;.b:(JJ)V` @kind interface;
  #L4ffb3e.  v7:= 1I;
  #L4ffb40.  v6.`z2.e.s` @type ^`boolean` := v7 @kind boolean;
  #L4ffb44.  goto L4ffb88;
  #L4ffb46.  v0:= v6.`z2.e.o` @type ^`a2.l` @kind object;
  #L4ffb4a.  v5:= lcmp(v8, v1);
  #L4ffb4e.  if v5 != 0 then goto L4ffb54;
  #L4ffb52.  v8:= v3 @kind wide;
  #L4ffb54.  call `b`(v0, v3, v8) @signature `La2/l;.b:(JJ)V` @kind interface;
  #L4ffb5a.  v8:= 0I;
  #L4ffb5c.  v9:= v6.`z2.e.r` @type ^`android.util.SparseArray` @kind object;
  #L4ffb60.  call temp:= `size`(v9) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4ffb66.  v9:= temp;
  #L4ffb68.  if v8 >= v9 then goto L4ffb88;
  #L4ffb6c.  v9:= v6.`z2.e.r` @type ^`android.util.SparseArray` @kind object;
  #L4ffb70.  call temp:= `valueAt`(v9, v8) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L4ffb76.  v9:= temp @kind object;
  #L4ffb78.  v9:= (`z2.e$a`) v9 @kind object;
  #L4ffb7c.  call `g`(v9, v7, v10) @signature `Lz2/e$a;.g:(Lz2/g$b;J)V` @kind virtual;
  #L4ffb82.  v8:= v8 + 1;
  #L4ffb86.  goto L4ffb5c;
  #L4ffb88.  return @kind void;
}
procedure `a2.d` `d`(`z2.e` v2 @kind this) @signature `Lz2/e;.d:()La2/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4ff95c.  v0:= v2.`z2.e.v` @type ^`a2.a0` @kind object;
  #L4ff960.  v1:= instanceof @variable v0 @type ^`a2.d` @kind boolean;
  #L4ff964.  if v1 == 0 then goto L4ff96e;
  #L4ff968.  v0:= (`a2.d`) v0 @kind object;
  #L4ff96c.  goto L4ff970;
  #L4ff96e.  v0:= 0I;
  #L4ff970.  return v0 @kind object;
}
procedure `a2.d0` `e`(`z2.e` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lz2/e;.e:(II)La2/d0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ff984.  v0:= v3.`z2.e.r` @type ^`android.util.SparseArray` @kind object;
  #L4ff988.  call temp:= `get`(v0, v4) @signature `Landroid/util/SparseArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4ff98e.  v0:= temp @kind object;
  #L4ff990.  v0:= (`z2.e$a`) v0 @kind object;
  #L4ff994.  if v0 != 0 then goto L4ff9de;
  #L4ff998.  v0:= v3.`z2.e.w` @type ^`v1.j1`[] @kind object;
  #L4ff99c.  if v0 != 0 then goto L4ff9a4;
  #L4ff9a0.  v0:= 1I;
  #L4ff9a2.  goto L4ff9a6;
  #L4ff9a4.  v0:= 0I;
  #L4ff9a6.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L4ff9ac.  v0:= new `z2.e$a`;
  #L4ff9b0.  v1:= v3.`z2.e.p` @type ^`int`;
  #L4ff9b4.  if v5 != v1 then goto L4ff9be;
  #L4ff9b8.  v1:= v3.`z2.e.q` @type ^`v1.j1` @kind object;
  #L4ff9bc.  goto L4ff9c0;
  #L4ff9be.  v1:= 0I;
  #L4ff9c0.  call `<init>`(v0, v4, v5, v1) @signature `Lz2/e$a;.<init>:(IILv1/j1;)V` @kind direct;
  #L4ff9c6.  v5:= v3.`z2.e.t` @type ^`z2.g$b` @kind object;
  #L4ff9ca.  v1:= v3.`z2.e.u` @type ^`long` @kind wide;
  #L4ff9ce.  call `g`(v0, v5, v1) @signature `Lz2/e$a;.g:(Lz2/g$b;J)V` @kind virtual;
  #L4ff9d4.  v5:= v3.`z2.e.r` @type ^`android.util.SparseArray` @kind object;
  #L4ff9d8.  call `put`(v5, v4, v0) @signature `Landroid/util/SparseArray;.put:(ILjava/lang/Object;)V` @kind virtual;
  #L4ff9de.  return v0 @kind object;
}
procedure `v1.j1`[] `f`(`z2.e` v1 @kind this) @signature `Lz2/e;.f:()[Lv1/j1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4ffa2c.  v0:= v1.`z2.e.w` @type ^`v1.j1`[] @kind object;
  #L4ffa30.  return v0 @kind object;
}
procedure `void` `h`(`z2.e` v3 @kind this) @signature `Lz2/e;.h:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4ffaa0.  v0:= v3.`z2.e.r` @type ^`android.util.SparseArray` @kind object;
  #L4ffaa4.  call temp:= `size`(v0) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4ffaaa.  v0:= temp;
  #L4ffaac.  v0:= new `v1.j1`[v0];
  #L4ffab0.  v1:= 0I;
  #L4ffab2.  v2:= v3.`z2.e.r` @type ^`android.util.SparseArray` @kind object;
  #L4ffab6.  call temp:= `size`(v2) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L4ffabc.  v2:= temp;
  #L4ffabe.  if v1 >= v2 then goto L4ffaec;
  #L4ffac2.  v2:= v3.`z2.e.r` @type ^`android.util.SparseArray` @kind object;
  #L4ffac6.  call temp:= `valueAt`(v2, v1) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L4ffacc.  v2:= temp @kind object;
  #L4fface.  v2:= (`z2.e$a`) v2 @kind object;
  #L4ffad2.  v2:= v2.`z2.e$a.e` @type ^`v1.j1` @kind object;
  #L4ffad6.  call temp:= `h`(v2) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4ffadc.  v2:= temp @kind object;
  #L4ffade.  v2:= (`v1.j1`) v2 @kind object;
  #L4ffae2.  v0[v1]:= v2 @kind object;
  #L4ffae6.  v1:= v1 + 1;
  #L4ffaea.  goto L4ffab2;
  #L4ffaec.  v3.`z2.e.w` @type ^`v1.j1`[] := v0 @kind object;
  #L4ffaf0.  return @kind void;
}
procedure `void` `m`(`z2.e` v0 @kind this, `a2.a0` v1 @kind object) @signature `Lz2/e;.m:(La2/a0;)V` @AccessFlag PUBLIC {
    temp;

  #L4ffbb8.  v0.`z2.e.v` @type ^`a2.a0` := v1 @kind object;
  #L4ffbbc.  return @kind void;
}
