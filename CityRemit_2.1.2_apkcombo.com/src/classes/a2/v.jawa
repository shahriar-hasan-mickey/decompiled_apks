record `a2.v` @kind class @AccessFlag PUBLIC extends `a2.m` @kind interface {
  `a2.m` `a2.v.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a2.v` v0 @kind this, `a2.m` v1 @kind object) @signature `La2/v;.<init>:(La2/m;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15ad68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15ad6e.  v0.`a2.v.a` @type ^`a2.m` := v1 @kind object;
  #L15ad72.  return @kind void;
}
procedure `long` `a`(`a2.v` v2 @kind this) @signature `La2/v;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15ad08.  v0:= v2.`a2.v.a` @type ^`a2.m` @kind object;
  #L15ad0c.  call temp:= `a`(v0) @signature `La2/m;.a:()J` @kind interface;
  #L15ad12.  v0:= temp @kind wide;
  #L15ad14.  return v0 @kind wide;
}
procedure `int` `b`(`a2.v` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `La2/v;.b:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15acc8.  v0:= v1.`a2.v.a` @type ^`a2.m` @kind object;
  #L15accc.  call temp:= `b`(v0, v2, v3, v4) @signature `La2/m;.b:([BII)I` @kind interface;
  #L15acd2.  v2:= temp;
  #L15acd4.  return v2;
}
procedure `int` `d`(`a2.v` v1 @kind this, `int` v2 ) @signature `La2/v;.d:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ace8.  v0:= v1.`a2.v.a` @type ^`a2.m` @kind object;
  #L15acec.  call temp:= `d`(v0, v2) @signature `La2/m;.d:(I)I` @kind interface;
  #L15acf2.  v2:= temp;
  #L15acf4.  return v2;
}
procedure `boolean` `f`(`a2.v` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `boolean` v5 ) @signature `La2/v;.f:([BIIZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ac88.  v0:= v1.`a2.v.a` @type ^`a2.m` @kind object;
  #L15ac8c.  call temp:= `f`(v0, v2, v3, v4, v5) @signature `La2/m;.f:([BIIZ)Z` @kind interface;
  #L15ac92.  v2:= temp;
  #L15ac94.  return v2;
}
procedure `int` `g`(`a2.v` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `La2/v;.g:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15aca8.  v0:= v1.`a2.v.a` @type ^`a2.m` @kind object;
  #L15acac.  call temp:= `g`(v0, v2, v3, v4) @signature `La2/m;.g:([BII)I` @kind interface;
  #L15acb2.  v2:= temp;
  #L15acb4.  return v2;
}
procedure `void` `i`(`a2.v` v1 @kind this) @signature `La2/v;.i:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15add8.  v0:= v1.`a2.v.a` @type ^`a2.m` @kind object;
  #L15addc.  call `i`(v0) @signature `La2/m;.i:()V` @kind interface;
  #L15ade2.  return @kind void;
}
procedure `void` `j`(`a2.v` v1 @kind this, `int` v2 ) @signature `La2/v;.j:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15adf4.  v0:= v1.`a2.v.a` @type ^`a2.m` @kind object;
  #L15adf8.  call `j`(v0, v2) @signature `La2/m;.j:(I)V` @kind interface;
  #L15adfe.  return @kind void;
}
procedure `boolean` `k`(`a2.v` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `La2/v;.k:(IZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ac48.  v0:= v1.`a2.v.a` @type ^`a2.m` @kind object;
  #L15ac4c.  call temp:= `k`(v0, v2, v3) @signature `La2/m;.k:(IZ)Z` @kind interface;
  #L15ac52.  v2:= temp;
  #L15ac54.  return v2;
}
procedure `boolean` `m`(`a2.v` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `boolean` v5 ) @signature `La2/v;.m:([BIIZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ac68.  v0:= v1.`a2.v.a` @type ^`a2.m` @kind object;
  #L15ac6c.  call temp:= `m`(v0, v2, v3, v4, v5) @signature `La2/m;.m:([BIIZ)Z` @kind interface;
  #L15ac72.  v2:= temp;
  #L15ac74.  return v2;
}
procedure `long` `n`(`a2.v` v2 @kind this) @signature `La2/v;.n:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15ad28.  v0:= v2.`a2.v.a` @type ^`a2.m` @kind object;
  #L15ad2c.  call temp:= `n`(v0) @signature `La2/m;.n:()J` @kind interface;
  #L15ad32.  v0:= temp @kind wide;
  #L15ad34.  return v0 @kind wide;
}
procedure `void` `o`(`a2.v` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `La2/v;.o:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ada0.  v0:= v1.`a2.v.a` @type ^`a2.m` @kind object;
  #L15ada4.  call `o`(v0, v2, v3, v4) @signature `La2/m;.o:([BII)V` @kind interface;
  #L15adaa.  return @kind void;
}
procedure `void` `p`(`a2.v` v1 @kind this, `int` v2 ) @signature `La2/v;.p:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ad84.  v0:= v1.`a2.v.a` @type ^`a2.m` @kind object;
  #L15ad88.  call `p`(v0, v2) @signature `La2/m;.p:(I)V` @kind interface;
  #L15ad8e.  return @kind void;
}
procedure `long` `q`(`a2.v` v2 @kind this) @signature `La2/v;.q:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15ad48.  v0:= v2.`a2.v.a` @type ^`a2.m` @kind object;
  #L15ad4c.  call temp:= `q`(v0) @signature `La2/m;.q:()J` @kind interface;
  #L15ad52.  v0:= temp @kind wide;
  #L15ad54.  return v0 @kind wide;
}
procedure `void` `readFully`(`a2.v` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `La2/v;.readFully:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15adbc.  v0:= v1.`a2.v.a` @type ^`a2.m` @kind object;
  #L15adc0.  call `readFully`(v0, v2, v3, v4) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L15adc6.  return @kind void;
}
