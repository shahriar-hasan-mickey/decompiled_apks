record `a2.b0` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `a2.b0.a` @AccessFlag PUBLIC_FINAL;
  `long` `a2.b0.b` @AccessFlag PUBLIC_FINAL;
}
global `a2.b0` `@@a2.b0.c` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La2/b0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L15b53c.  v0:= new `a2.b0`;
  #L15b540.  v1:= 0L;
  #L15b544.  call `<init>`(v0, v1, v1) @signature `La2/b0;.<init>:(JJ)V` @kind direct;
  #L15b54a.  `@@a2.b0.c` @type ^`a2.b0` := v0 @kind object;
  #L15b54e.  return @kind void;
}
procedure `void` `<init>`(`a2.b0` v0 @kind this, `long` v1 , `long` v3 ) @signature `La2/b0;.<init>:(JJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15b560.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15b566.  v0.`a2.b0.a` @type ^`long` := v1 @kind wide;
  #L15b56a.  v0.`a2.b0.b` @type ^`long` := v3 @kind wide;
  #L15b56e.  return @kind void;
}
procedure `boolean` `equals`(`a2.b0` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `La2/b0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15b464.  v0:= 1I;
  #L15b466.  if v7 != v8 then goto L15b46c;
  #L15b46a.  return v0;
  #L15b46c.  v1:= 0I;
  #L15b46e.  if v8 == 0 then goto L15b4ae;
  #L15b472.  v2:= constclass @type ^`a2.b0` @kind object;
  #L15b476.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L15b47c.  v3:= temp @kind object;
  #L15b47e.  if v2 == v3 then goto L15b484;
  #L15b482.  goto L15b4ae;
  #L15b484.  v8:= (`a2.b0`) v8 @kind object;
  #L15b488.  v2:= v7.`a2.b0.a` @type ^`long` @kind wide;
  #L15b48c.  v4:= v8.`a2.b0.a` @type ^`long` @kind wide;
  #L15b490.  v6:= lcmp(v2, v4);
  #L15b494.  if v6 != 0 then goto L15b4aa;
  #L15b498.  v2:= v7.`a2.b0.b` @type ^`long` @kind wide;
  #L15b49c.  v4:= v8.`a2.b0.b` @type ^`long` @kind wide;
  #L15b4a0.  v8:= lcmp(v2, v4);
  #L15b4a4.  if v8 != 0 then goto L15b4aa;
  #L15b4a8.  goto L15b4ac;
  #L15b4aa.  v0:= 0I;
  #L15b4ac.  return v0;
  #L15b4ae.  return v1;
}
procedure `int` `hashCode`(`a2.b0` v4 @kind this) @signature `La2/b0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15b4c0.  v0:= v4.`a2.b0.a` @type ^`long` @kind wide;
  #L15b4c4.  v1:= (`int`) v0 @kind l2i;
  #L15b4c6.  v1:= v1 * 31;
  #L15b4ca.  v2:= v4.`a2.b0.b` @type ^`long` @kind wide;
  #L15b4ce.  v0:= (`int`) v2 @kind l2i;
  #L15b4d0.  v1:= v1 + v0 @kind int;
  #L15b4d2.  return v1;
}
procedure `java.lang.String` `toString`(`a2.b0` v3 @kind this) @signature `La2/b0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15b4e4.  v0:= new `java.lang.StringBuilder`;
  #L15b4e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15b4ee.  v1:= "[timeUs=" @kind object;
  #L15b4f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b4f8.  v1:= v3.`a2.b0.a` @type ^`long` @kind wide;
  #L15b4fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b502.  v1:= ", position=" @kind object;
  #L15b506.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b50c.  v1:= v3.`a2.b0.b` @type ^`long` @kind wide;
  #L15b510.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b516.  v1:= "]" @kind object;
  #L15b51a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b520.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b526.  v0:= temp @kind object;
  #L15b528.  return v0 @kind object;
}
