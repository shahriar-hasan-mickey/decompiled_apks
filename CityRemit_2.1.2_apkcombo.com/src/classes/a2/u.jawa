record `a2.u` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `a2.u.a` @AccessFlag PUBLIC_FINAL;
  `int` `a2.u.b` @AccessFlag PUBLIC_FINAL;
  `int` `a2.u.c` @AccessFlag PUBLIC_FINAL;
  `int` `a2.u.d` @AccessFlag PUBLIC_FINAL;
  `int` `a2.u.e` @AccessFlag PUBLIC_FINAL;
  `int` `a2.u.f` @AccessFlag PUBLIC_FINAL;
  `int` `a2.u.g` @AccessFlag PUBLIC_FINAL;
  `int` `a2.u.h` @AccessFlag PUBLIC_FINAL;
  `int` `a2.u.i` @AccessFlag PUBLIC_FINAL;
  `long` `a2.u.j` @AccessFlag PUBLIC_FINAL;
  `a2.u$a` `a2.u.k` @AccessFlag PUBLIC_FINAL;
  `n2.a` `a2.u.l` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a2.u` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 , `int` v7 , `long` v8 , `a2.u$a` v10 @kind object, `n2.a` v11 @kind object) @signature `La2/u;.<init>:(IIIIIIIJLa2/u$a;Ln2/a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L15abf0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15abf6.  v0.`a2.u.a` @type ^`int` := v1;
  #L15abfa.  v0.`a2.u.b` @type ^`int` := v2;
  #L15abfe.  v0.`a2.u.c` @type ^`int` := v3;
  #L15ac02.  v0.`a2.u.d` @type ^`int` := v4;
  #L15ac06.  v0.`a2.u.e` @type ^`int` := v5;
  #L15ac0a.  call temp:= `j`(v5) @signature `La2/u;.j:(I)I` @kind static;
  #L15ac10.  v1:= temp;
  #L15ac12.  v0.`a2.u.f` @type ^`int` := v1;
  #L15ac16.  v0.`a2.u.g` @type ^`int` := v6;
  #L15ac1a.  v0.`a2.u.h` @type ^`int` := v7;
  #L15ac1e.  call temp:= `e`(v7) @signature `La2/u;.e:(I)I` @kind static;
  #L15ac24.  v1:= temp;
  #L15ac26.  v0.`a2.u.i` @type ^`int` := v1;
  #L15ac2a.  v0.`a2.u.j` @type ^`long` := v8 @kind wide;
  #L15ac2e.  v0.`a2.u.k` @type ^`a2.u$a` := v10 @kind object;
  #L15ac32.  v0.`a2.u.l` @type ^`n2.a` := v11 @kind object;
  #L15ac36.  return @kind void;
}
procedure `void` `<init>`(`a2.u` v1 @kind this, `byte`[] v2 @kind object, `int` v3 ) @signature `La2/u;.<init>:([BI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15ab24.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15ab2a.  v0:= new `s3.y`;
  #L15ab2e.  call `<init>`(v0, v2) @signature `Ls3/y;.<init>:([B)V` @kind direct;
  #L15ab34.  v3:= v3 * 8;
  #L15ab38.  call `p`(v0, v3) @signature `Ls3/y;.p:(I)V` @kind virtual;
  #L15ab3e.  v2:= 16I;
  #L15ab42.  call temp:= `h`(v0, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L15ab48.  v3:= temp;
  #L15ab4a.  v1.`a2.u.a` @type ^`int` := v3;
  #L15ab4e.  call temp:= `h`(v0, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L15ab54.  v2:= temp;
  #L15ab56.  v1.`a2.u.b` @type ^`int` := v2;
  #L15ab5a.  v2:= 24I;
  #L15ab5e.  call temp:= `h`(v0, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L15ab64.  v3:= temp;
  #L15ab66.  v1.`a2.u.c` @type ^`int` := v3;
  #L15ab6a.  call temp:= `h`(v0, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L15ab70.  v2:= temp;
  #L15ab72.  v1.`a2.u.d` @type ^`int` := v2;
  #L15ab76.  v2:= 20I;
  #L15ab7a.  call temp:= `h`(v0, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L15ab80.  v2:= temp;
  #L15ab82.  v1.`a2.u.e` @type ^`int` := v2;
  #L15ab86.  call temp:= `j`(v2) @signature `La2/u;.j:(I)I` @kind static;
  #L15ab8c.  v2:= temp;
  #L15ab8e.  v1.`a2.u.f` @type ^`int` := v2;
  #L15ab92.  v2:= 3I;
  #L15ab94.  call temp:= `h`(v0, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L15ab9a.  v2:= temp;
  #L15ab9c.  v2:= v2 + 1;
  #L15aba0.  v1.`a2.u.g` @type ^`int` := v2;
  #L15aba4.  v2:= 5I;
  #L15aba6.  call temp:= `h`(v0, v2) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L15abac.  v2:= temp;
  #L15abae.  v2:= v2 + 1;
  #L15abb2.  v1.`a2.u.h` @type ^`int` := v2;
  #L15abb6.  call temp:= `e`(v2) @signature `La2/u;.e:(I)I` @kind static;
  #L15abbc.  v2:= temp;
  #L15abbe.  v1.`a2.u.i` @type ^`int` := v2;
  #L15abc2.  v2:= 36I;
  #L15abc6.  call temp:= `j`(v0, v2) @signature `Ls3/y;.j:(I)J` @kind virtual;
  #L15abcc.  v2:= temp @kind wide;
  #L15abce.  v1.`a2.u.j` @type ^`long` := v2 @kind wide;
  #L15abd2.  v2:= 0I;
  #L15abd4.  v1.`a2.u.k` @type ^`a2.u$a` := v2 @kind object;
  #L15abd8.  v1.`a2.u.l` @type ^`n2.a` := v2 @kind object;
  #L15abdc.  return @kind void;
}
procedure `int` `e`(`int` v1 ) @signature `La2/u;.e:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L15a890.  v0:= 8I;
  #L15a894.  if v1 == v0 then goto L15a8cc;
  #L15a898.  v0:= 12I;
  #L15a89c.  if v1 == v0 then goto L15a8c8;
  #L15a8a0.  v0:= 16I;
  #L15a8a4.  if v1 == v0 then goto L15a8c4;
  #L15a8a8.  v0:= 20I;
  #L15a8ac.  if v1 == v0 then goto L15a8c0;
  #L15a8b0.  v0:= 24I;
  #L15a8b4.  if v1 == v0 then goto L15a8bc;
  #L15a8b8.  v1:= -1I;
  #L15a8ba.  return v1;
  #L15a8bc.  v1:= 6I;
  #L15a8be.  return v1;
  #L15a8c0.  v1:= 5I;
  #L15a8c2.  return v1;
  #L15a8c4.  v1:= 4I;
  #L15a8c6.  return v1;
  #L15a8c8.  v1:= 2I;
  #L15a8ca.  return v1;
  #L15a8cc.  v1:= 1I;
  #L15a8ce.  return v1;
}
procedure `int` `j`(`int` v0 ) @signature `La2/u;.j:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L15a8e0.  goto L15a920;
  #L15a8e6.  v0:= -1I;
  #L15a8e8.  return v0;
  #L15a8ea.  v0:= 3I;
  #L15a8ec.  return v0;
  #L15a8ee.  v0:= 2I;
  #L15a8f0.  return v0;
  #L15a8f2.  v0:= 11I;
  #L15a8f6.  return v0;
  #L15a8f8.  v0:= 1I;
  #L15a8fa.  return v0;
  #L15a8fc.  v0:= 10I;
  #L15a900.  return v0;
  #L15a902.  v0:= 9I;
  #L15a906.  return v0;
  #L15a908.  v0:= 8I;
  #L15a90c.  return v0;
  #L15a90e.  v0:= 7I;
  #L15a910.  return v0;
  #L15a912.  v0:= 6I;
  #L15a914.  return v0;
  #L15a916.  v0:= 5I;
  #L15a918.  return v0;
  #L15a91a.  v0:= 4I;
  #L15a91c.  return v0;
  #L15a91e.  
  #L15a920.  switch v0
                  | 8000 => goto L15a91a
                  | 16000 => goto L15a916
                  | 22050 => goto L15a912
                  | 24000 => goto L15a90e
                  | 32000 => goto L15a908
                  | 44100 => goto L15a902
                  | 48000 => goto L15a8fc
                  | 88200 => goto L15a8f8
                  | 96000 => goto L15a8f2
                  | 176400 => goto L15a8ee
                  | 192000 => goto L15a8ea
                  | else => goto L15a8e6;
}
procedure `a2.u` `a`(`a2.u` v13 @kind this, `java.util.List` v14 @kind object) @signature `La2/u;.a:(Ljava/util/List;)La2/u;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L15a7a4.  v0:= new `n2.a`;
  #L15a7a8.  call `<init>`(v0, v14) @signature `Ln2/a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L15a7ae.  call temp:= `h`(v13, v0) @signature `La2/u;.h:(Ln2/a;)Ln2/a;` @kind virtual;
  #L15a7b4.  v12:= temp @kind object;
  #L15a7b6.  v14:= new `a2.u`;
  #L15a7ba.  v2:= v13.`a2.u.a` @type ^`int`;
  #L15a7be.  v3:= v13.`a2.u.b` @type ^`int`;
  #L15a7c2.  v4:= v13.`a2.u.c` @type ^`int`;
  #L15a7c6.  v5:= v13.`a2.u.d` @type ^`int`;
  #L15a7ca.  v6:= v13.`a2.u.e` @type ^`int`;
  #L15a7ce.  v7:= v13.`a2.u.g` @type ^`int`;
  #L15a7d2.  v8:= v13.`a2.u.h` @type ^`int`;
  #L15a7d6.  v9:= v13.`a2.u.j` @type ^`long` @kind wide;
  #L15a7da.  v11:= v13.`a2.u.k` @type ^`a2.u$a` @kind object;
  #L15a7de.  v1:= v14 @kind object;
  #L15a7e0.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v11, v12) @signature `La2/u;.<init>:(IIIIIIIJLa2/u$a;Ln2/a;)V` @kind direct;
  #L15a7e6.  return v14 @kind object;
}
procedure `a2.u` `b`(`a2.u` v13 @kind this, `a2.u$a` v14 @kind object) @signature `La2/u;.b:(La2/u$a;)La2/u;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L15a7f8.  v12:= new `a2.u`;
  #L15a7fc.  v1:= v13.`a2.u.a` @type ^`int`;
  #L15a800.  v2:= v13.`a2.u.b` @type ^`int`;
  #L15a804.  v3:= v13.`a2.u.c` @type ^`int`;
  #L15a808.  v4:= v13.`a2.u.d` @type ^`int`;
  #L15a80c.  v5:= v13.`a2.u.e` @type ^`int`;
  #L15a810.  v6:= v13.`a2.u.g` @type ^`int`;
  #L15a814.  v7:= v13.`a2.u.h` @type ^`int`;
  #L15a818.  v8:= v13.`a2.u.j` @type ^`long` @kind wide;
  #L15a81c.  v11:= v13.`a2.u.l` @type ^`n2.a` @kind object;
  #L15a820.  v0:= v12 @kind object;
  #L15a822.  v10:= v14 @kind object;
  #L15a824.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v10, v11) @signature `La2/u;.<init>:(IIIIIIIJLa2/u$a;Ln2/a;)V` @kind direct;
  #L15a82a.  return v12 @kind object;
}
procedure `a2.u` `c`(`a2.u` v12 @kind this, `java.util.List` v13 @kind object) @signature `La2/u;.c:(Ljava/util/List;)La2/u;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L15a83c.  call temp:= `c`(v13) @signature `La2/g0;.c:(Ljava/util/List;)Ln2/a;` @kind static;
  #L15a842.  v13:= temp @kind object;
  #L15a844.  call temp:= `h`(v12, v13) @signature `La2/u;.h:(Ln2/a;)Ln2/a;` @kind virtual;
  #L15a84a.  v11:= temp @kind object;
  #L15a84c.  v13:= new `a2.u`;
  #L15a850.  v1:= v12.`a2.u.a` @type ^`int`;
  #L15a854.  v2:= v12.`a2.u.b` @type ^`int`;
  #L15a858.  v3:= v12.`a2.u.c` @type ^`int`;
  #L15a85c.  v4:= v12.`a2.u.d` @type ^`int`;
  #L15a860.  v5:= v12.`a2.u.e` @type ^`int`;
  #L15a864.  v6:= v12.`a2.u.g` @type ^`int`;
  #L15a868.  v7:= v12.`a2.u.h` @type ^`int`;
  #L15a86c.  v8:= v12.`a2.u.j` @type ^`long` @kind wide;
  #L15a870.  v10:= v12.`a2.u.k` @type ^`a2.u$a` @kind object;
  #L15a874.  v0:= v13 @kind object;
  #L15a876.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v10, v11) @signature `La2/u;.<init>:(IIIIIIIJLa2/u$a;Ln2/a;)V` @kind direct;
  #L15a87c.  return v13 @kind object;
}
procedure `long` `d`(`a2.u` v4 @kind this) @signature `La2/u;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15a98c.  v0:= v4.`a2.u.d` @type ^`int`;
  #L15a990.  if v0 <= 0 then goto L15a9ac;
  #L15a994.  v0:= (`long`) v0 @kind i2l;
  #L15a996.  v2:= v4.`a2.u.c` @type ^`int`;
  #L15a99a.  v2:= (`long`) v2 @kind i2l;
  #L15a99c.  v0:= v0 + v2 @kind long;
  #L15a99e.  v2:= 2L;
  #L15a9a2.  v0:= v0 / v2 @kind long;
  #L15a9a4.  v2:= 1L;
  #L15a9a8.  v0:= v0 + v2 @kind long;
  #L15a9aa.  goto L15a9e4;
  #L15a9ac.  v0:= v4.`a2.u.a` @type ^`int`;
  #L15a9b0.  v1:= v4.`a2.u.b` @type ^`int`;
  #L15a9b4.  if v0 != v1 then goto L15a9c0;
  #L15a9b8.  if v0 <= 0 then goto L15a9c0;
  #L15a9bc.  v0:= (`long`) v0 @kind i2l;
  #L15a9be.  goto L15a9c4;
  #L15a9c0.  v0:= 4096L;
  #L15a9c4.  v2:= v4.`a2.u.g` @type ^`int`;
  #L15a9c8.  v2:= (`long`) v2 @kind i2l;
  #L15a9ca.  v0:= v0 * v2 @kind long;
  #L15a9ce.  v2:= v4.`a2.u.h` @type ^`int`;
  #L15a9d2.  v2:= (`long`) v2 @kind i2l;
  #L15a9d4.  v0:= v0 * v2 @kind long;
  #L15a9d8.  v2:= 8L;
  #L15a9dc.  v0:= v0 / v2 @kind long;
  #L15a9de.  v2:= 64L;
  #L15a9e2.  goto L15a9a8;
  #L15a9e4.  return v0 @kind wide;
}
procedure `long` `f`(`a2.u` v5 @kind this) @signature `La2/u;.f:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15a9f8.  v0:= v5.`a2.u.j` @type ^`long` @kind wide;
  #L15a9fc.  v2:= 0L;
  #L15aa00.  v4:= lcmp(v0, v2);
  #L15aa04.  if v4 != 0 then goto L15aa14;
  #L15aa08.  v0:= -4.9E-324D;
  #L15aa12.  goto L15aa26;
  #L15aa14.  v2:= 1000000L;
  #L15aa1a.  v0:= v0 * v2 @kind long;
  #L15aa1e.  v2:= v5.`a2.u.e` @type ^`int`;
  #L15aa22.  v2:= (`long`) v2 @kind i2l;
  #L15aa24.  v0:= v0 / v2 @kind long;
  #L15aa26.  return v0 @kind wide;
}
procedure `v1.j1` `g`(`a2.u` v3 @kind this, `byte`[] v4 @kind object, `n2.a` v5 @kind object) @signature `La2/u;.g:([BLn2/a;)Lv1/j1;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15aa9c.  v0:= 4I;
  #L15aa9e.  v1:= -128I;
  #L15aaa2.  v4[v0]:= v1 @kind byte;
  #L15aaa6.  v0:= v3.`a2.u.d` @type ^`int`;
  #L15aaaa.  if v0 <= 0 then goto L15aab0;
  #L15aaae.  goto L15aab2;
  #L15aab0.  v0:= -1I;
  #L15aab2.  call temp:= `h`(v3, v5) @signature `La2/u;.h:(Ln2/a;)Ln2/a;` @kind virtual;
  #L15aab8.  v5:= temp @kind object;
  #L15aaba.  v1:= new `v1.j1$b`;
  #L15aabe.  call `<init>`(v1) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L15aac4.  v2:= "audio/flac" @kind object;
  #L15aac8.  call temp:= `e0`(v1, v2) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L15aace.  v1:= temp @kind object;
  #L15aad0.  call temp:= `W`(v1, v0) @signature `Lv1/j1$b;.W:(I)Lv1/j1$b;` @kind virtual;
  #L15aad6.  v0:= temp @kind object;
  #L15aad8.  v1:= v3.`a2.u.g` @type ^`int`;
  #L15aadc.  call temp:= `H`(v0, v1) @signature `Lv1/j1$b;.H:(I)Lv1/j1$b;` @kind virtual;
  #L15aae2.  v0:= temp @kind object;
  #L15aae4.  v1:= v3.`a2.u.e` @type ^`int`;
  #L15aae8.  call temp:= `f0`(v0, v1) @signature `Lv1/j1$b;.f0:(I)Lv1/j1$b;` @kind virtual;
  #L15aaee.  v0:= temp @kind object;
  #L15aaf0.  call temp:= `singletonList`(v4) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L15aaf6.  v4:= temp @kind object;
  #L15aaf8.  call temp:= `T`(v0, v4) @signature `Lv1/j1$b;.T:(Ljava/util/List;)Lv1/j1$b;` @kind virtual;
  #L15aafe.  v4:= temp @kind object;
  #L15ab00.  call temp:= `X`(v4, v5) @signature `Lv1/j1$b;.X:(Ln2/a;)Lv1/j1$b;` @kind virtual;
  #L15ab06.  v4:= temp @kind object;
  #L15ab08.  call temp:= `E`(v4) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L15ab0e.  v4:= temp @kind object;
  #L15ab10.  return v4 @kind object;
}
procedure `n2.a` `h`(`a2.u` v1 @kind this, `n2.a` v2 @kind object) @signature `La2/u;.h:(Ln2/a;)Ln2/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15aa78.  v0:= v1.`a2.u.l` @type ^`n2.a` @kind object;
  #L15aa7c.  if v0 != 0 then goto L15aa82;
  #L15aa80.  goto L15aa8a;
  #L15aa82.  call temp:= `b`(v0, v2) @signature `Ln2/a;.b:(Ln2/a;)Ln2/a;` @kind virtual;
  #L15aa88.  v2:= temp @kind object;
  #L15aa8a.  return v2 @kind object;
}
procedure `long` `i`(`a2.u` v8 @kind this, `long` v9 ) @signature `La2/u;.i:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L15aa38.  v0:= v8.`a2.u.e` @type ^`int`;
  #L15aa3c.  v0:= (`long`) v0 @kind i2l;
  #L15aa3e.  v9:= v9 * v0 @kind long;
  #L15aa42.  v0:= 1000000L;
  #L15aa48.  v2:= v9 / v0 @kind long;
  #L15aa4c.  v9:= v8.`a2.u.j` @type ^`long` @kind wide;
  #L15aa50.  v0:= 1L;
  #L15aa54.  v6:= v9 - v0 @kind long;
  #L15aa58.  v4:= 0L;
  #L15aa5c.  call temp:= `r`(v2, v4, v6) @signature `Ls3/l0;.r:(JJJ)J` @kind static;
  #L15aa62.  v9:= temp @kind wide;
  #L15aa64.  return v9 @kind wide;
}
