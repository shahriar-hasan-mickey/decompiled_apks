record `a2.s` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `a`(`a2.m` v6 @kind object) @signature `La2/s;.a:(La2/m;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15a39c.  v0:= new `s3.z`;
  #L15a3a0.  v1:= 4I;
  #L15a3a2.  call `<init>`(v0, v1) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L15a3a8.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L15a3ae.  v2:= temp @kind object;
  #L15a3b0.  v3:= 0I;
  #L15a3b2.  call `o`(v6, v2, v3, v1) @signature `La2/m;.o:([BII)V` @kind interface;
  #L15a3b8.  call temp:= `E`(v0) @signature `Ls3/z;.E:()J` @kind virtual;
  #L15a3be.  v0:= temp @kind wide;
  #L15a3c0.  v4:= 1716281667L;
  #L15a3c6.  v6:= lcmp(v0, v4);
  #L15a3ca.  if v6 != 0 then goto L15a3d0;
  #L15a3ce.  v3:= 1I;
  #L15a3d0.  return v3;
}
procedure `int` `b`(`a2.m` v4 @kind object) @signature `La2/s;.b:(La2/m;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15a4d0.  call `i`(v4) @signature `La2/m;.i:()V` @kind interface;
  #L15a4d6.  v0:= new `s3.z`;
  #L15a4da.  v1:= 2I;
  #L15a4dc.  call `<init>`(v0, v1) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L15a4e2.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L15a4e8.  v2:= temp @kind object;
  #L15a4ea.  v3:= 0I;
  #L15a4ec.  call `o`(v4, v2, v3, v1) @signature `La2/m;.o:([BII)V` @kind interface;
  #L15a4f2.  call temp:= `I`(v0) @signature `Ls3/z;.I:()I` @kind virtual;
  #L15a4f8.  v0:= temp;
  #L15a4fa.  v1:= v0 ^> 2;
  #L15a4fe.  v2:= 16382I;
  #L15a502.  call `i`(v4) @signature `La2/m;.i:()V` @kind interface;
  #L15a508.  if v1 != v2 then goto L15a50e;
  #L15a50c.  return v0;
  #L15a50e.  v4:= 0I;
  #L15a510.  v0:= "First frame does not start with sync code." @kind object;
  #L15a514.  call temp:= `a`(v0, v4) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L15a51a.  v4:= temp @kind object;
  #L15a51c.  throw v4;
}
procedure `n2.a` `c`(`a2.m` v2 @kind object, `boolean` v3 ) @signature `La2/s;.c:(La2/m;Z)Ln2/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L15a578.  v0:= 0I;
  #L15a57a.  if v3 == 0 then goto L15a582;
  #L15a57e.  v3:= v0 @kind object;
  #L15a580.  goto L15a586;
  #L15a582.  v3:= `@@s2.h.b` @type ^`s2.h$a` @kind object;
  #L15a586.  v1:= new `a2.x`;
  #L15a58a.  call `<init>`(v1) @signature `La2/x;.<init>:()V` @kind direct;
  #L15a590.  call temp:= `a`(v1, v2, v3) @signature `La2/x;.a:(La2/m;Ls2/h$a;)Ln2/a;` @kind virtual;
  #L15a596.  v2:= temp @kind object;
  #L15a598.  if v2 == 0 then goto L15a5ac;
  #L15a59c.  call temp:= `d`(v2) @signature `Ln2/a;.d:()I` @kind virtual;
  #L15a5a2.  v3:= temp;
  #L15a5a4.  if v3 != 0 then goto L15a5aa;
  #L15a5a8.  goto L15a5ac;
  #L15a5aa.  v0:= v2 @kind object;
  #L15a5ac.  return v0 @kind object;
}
procedure `n2.a` `d`(`a2.m` v4 @kind object, `boolean` v5 ) @signature `La2/s;.d:(La2/m;Z)Ln2/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15a5c0.  call `i`(v4) @signature `La2/m;.i:()V` @kind interface;
  #L15a5c6.  call temp:= `n`(v4) @signature `La2/m;.n:()J` @kind interface;
  #L15a5cc.  v0:= temp @kind wide;
  #L15a5ce.  call temp:= `c`(v4, v5) @signature `La2/s;.c:(La2/m;Z)Ln2/a;` @kind static;
  #L15a5d4.  v5:= temp @kind object;
  #L15a5d6.  call temp:= `n`(v4) @signature `La2/m;.n:()J` @kind interface;
  #L15a5dc.  v2:= temp @kind wide;
  #L15a5de.  v2:= v2 - v0 @kind long;
  #L15a5e0.  v0:= (`int`) v2 @kind l2i;
  #L15a5e2.  call `j`(v4, v0) @signature `La2/m;.j:(I)V` @kind interface;
  #L15a5e8.  return v5 @kind object;
}
procedure `boolean` `e`(`a2.m` v7 @kind object, `a2.s$a` v8 @kind object) @signature `La2/s;.e:(La2/m;La2/s$a;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15a3e4.  call `i`(v7) @signature `La2/m;.i:()V` @kind interface;
  #L15a3ea.  v0:= new `s3.y`;
  #L15a3ee.  v1:= 4I;
  #L15a3f0.  v2:= new `byte`[v1];
  #L15a3f4.  call `<init>`(v0, v2) @signature `Ls3/y;.<init>:([B)V` @kind direct;
  #L15a3fa.  v2:= v0.`s3.y.a` @type ^`byte`[] @kind object;
  #L15a3fe.  v3:= 0I;
  #L15a400.  call `o`(v7, v2, v3, v1) @signature `La2/m;.o:([BII)V` @kind interface;
  #L15a406.  call temp:= `g`(v0) @signature `Ls3/y;.g:()Z` @kind virtual;
  #L15a40c.  v2:= temp;
  #L15a40e.  v4:= 7I;
  #L15a410.  call temp:= `h`(v0, v4) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L15a416.  v4:= temp;
  #L15a418.  v5:= 24I;
  #L15a41c.  call temp:= `h`(v0, v5) @signature `Ls3/y;.h:(I)I` @kind virtual;
  #L15a422.  v0:= temp;
  #L15a424.  v0:= v0 + v1 @kind int;
  #L15a426.  if v4 != 0 then goto L15a438;
  #L15a42a.  call temp:= `h`(v7) @signature `La2/s;.h:(La2/m;)La2/u;` @kind static;
  #L15a430.  v7:= temp @kind object;
  #L15a432.  v8.`a2.s$a.a` @type ^`a2.u` := v7 @kind object;
  #L15a436.  goto L15a4b2;
  #L15a438.  v5:= v8.`a2.s$a.a` @type ^`a2.u` @kind object;
  #L15a43c.  if v5 == 0 then goto L15a4b4;
  #L15a440.  v6:= 3I;
  #L15a442.  if v4 != v6 then goto L15a458;
  #L15a446.  call temp:= `f`(v7, v0) @signature `La2/s;.f:(La2/m;I)La2/u$a;` @kind static;
  #L15a44c.  v7:= temp @kind object;
  #L15a44e.  call temp:= `b`(v5, v7) @signature `La2/u;.b:(La2/u$a;)La2/u;` @kind virtual;
  #L15a454.  v7:= temp @kind object;
  #L15a456.  goto L15a432;
  #L15a458.  if v4 != v1 then goto L15a46e;
  #L15a45c.  call temp:= `j`(v7, v0) @signature `La2/s;.j:(La2/m;I)Ljava/util/List;` @kind static;
  #L15a462.  v7:= temp @kind object;
  #L15a464.  call temp:= `c`(v5, v7) @signature `La2/u;.c:(Ljava/util/List;)La2/u;` @kind virtual;
  #L15a46a.  v7:= temp @kind object;
  #L15a46c.  goto L15a432;
  #L15a46e.  v6:= 6I;
  #L15a470.  if v4 != v6 then goto L15a4ac;
  #L15a474.  v4:= new `s3.z`;
  #L15a478.  call `<init>`(v4, v0) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L15a47e.  call temp:= `d`(v4) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L15a484.  v6:= temp @kind object;
  #L15a486.  call `readFully`(v7, v6, v3, v0) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L15a48c.  call `P`(v4, v1) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L15a492.  call temp:= `a`(v4) @signature `Lq2/a;.a:(Ls3/z;)Lq2/a;` @kind static;
  #L15a498.  v7:= temp @kind object;
  #L15a49a.  call temp:= `b0`(v7) @signature `Lm5/q;.b0:(Ljava/lang/Object;)Lm5/q;` @kind static;
  #L15a4a0.  v7:= temp @kind object;
  #L15a4a2.  call temp:= `a`(v5, v7) @signature `La2/u;.a:(Ljava/util/List;)La2/u;` @kind virtual;
  #L15a4a8.  v7:= temp @kind object;
  #L15a4aa.  goto L15a432;
  #L15a4ac.  call `j`(v7, v0) @signature `La2/m;.j:(I)V` @kind interface;
  #L15a4b2.  return v2;
  #L15a4b4.  v7:= new `java.lang.IllegalArgumentException`;
  #L15a4b8.  call `<init>`(v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L15a4be.  throw v7;
}
procedure `a2.u$a` `f`(`a2.m` v3 @kind object, `int` v4 ) @signature `La2/s;.f:(La2/m;I)La2/u$a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L15a2c4.  v0:= new `s3.z`;
  #L15a2c8.  call `<init>`(v0, v4) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L15a2ce.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L15a2d4.  v1:= temp @kind object;
  #L15a2d6.  v2:= 0I;
  #L15a2d8.  call `readFully`(v3, v1, v2, v4) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L15a2de.  call temp:= `g`(v0) @signature `La2/s;.g:(Ls3/z;)La2/u$a;` @kind static;
  #L15a2e4.  v3:= temp @kind object;
  #L15a2e6.  return v3 @kind object;
}
procedure `a2.u$a` `g`(`s3.z` v11 @kind object) @signature `La2/s;.g:(Ls3/z;)La2/u$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L15a2f8.  v0:= 1I;
  #L15a2fa.  call `P`(v11, v0) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L15a300.  call temp:= `F`(v11) @signature `Ls3/z;.F:()I` @kind virtual;
  #L15a306.  v0:= temp;
  #L15a308.  call temp:= `e`(v11) @signature `Ls3/z;.e:()I` @kind virtual;
  #L15a30e.  v1:= temp;
  #L15a310.  v1:= (`long`) v1 @kind i2l;
  #L15a312.  v3:= (`long`) v0 @kind i2l;
  #L15a314.  v1:= v1 + v3 @kind long;
  #L15a316.  v0:= v0 / 18;
  #L15a31a.  v3:= new `long`[v0];
  #L15a31e.  v4:= new `long`[v0];
  #L15a322.  v5:= 0I;
  #L15a324.  if v5 >= v0 then goto L15a36c;
  #L15a328.  call temp:= `v`(v11) @signature `Ls3/z;.v:()J` @kind virtual;
  #L15a32e.  v6:= temp @kind wide;
  #L15a330.  v8:= -1L;
  #L15a334.  v10:= lcmp(v6, v8);
  #L15a338.  if v10 != 0 then goto L15a34e;
  #L15a33c.  call temp:= `copyOf`(v3, v5) @signature `Ljava/util/Arrays;.copyOf:([JI)[J` @kind static;
  #L15a342.  v3:= temp @kind object;
  #L15a344.  call temp:= `copyOf`(v4, v5) @signature `Ljava/util/Arrays;.copyOf:([JI)[J` @kind static;
  #L15a34a.  v4:= temp @kind object;
  #L15a34c.  goto L15a36c;
  #L15a34e.  v3[v5]:= v6 @kind wide;
  #L15a352.  call temp:= `v`(v11) @signature `Ls3/z;.v:()J` @kind virtual;
  #L15a358.  v6:= temp @kind wide;
  #L15a35a.  v4[v5]:= v6 @kind wide;
  #L15a35e.  v6:= 2I;
  #L15a360.  call `P`(v11, v6) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L15a366.  v5:= v5 + 1;
  #L15a36a.  goto L15a324;
  #L15a36c.  call temp:= `e`(v11) @signature `Ls3/z;.e:()I` @kind virtual;
  #L15a372.  v0:= temp;
  #L15a374.  v5:= (`long`) v0 @kind i2l;
  #L15a376.  v1:= v1 - v5 @kind long;
  #L15a378.  v0:= (`int`) v1 @kind l2i;
  #L15a37a.  call `P`(v11, v0) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L15a380.  v11:= new `a2.u$a`;
  #L15a384.  call `<init>`(v11, v3, v4) @signature `La2/u$a;.<init>:([J[J)V` @kind direct;
  #L15a38a.  return v11 @kind object;
}
procedure `a2.u` `h`(`a2.m` v3 @kind object) @signature `La2/s;.h:(La2/m;)La2/u;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L15a294.  v0:= 38I;
  #L15a298.  v1:= new `byte`[v0];
  #L15a29c.  v2:= 0I;
  #L15a29e.  call `readFully`(v3, v1, v2, v0) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L15a2a4.  v3:= new `a2.u`;
  #L15a2a8.  v0:= 4I;
  #L15a2aa.  call `<init>`(v3, v1, v0) @signature `La2/u;.<init>:([BI)V` @kind direct;
  #L15a2b0.  return v3 @kind object;
}
procedure `void` `i`(`a2.m` v4 @kind object) @signature `La2/s;.i:(La2/m;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15a5fc.  v0:= new `s3.z`;
  #L15a600.  v1:= 4I;
  #L15a602.  call `<init>`(v0, v1) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L15a608.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L15a60e.  v2:= temp @kind object;
  #L15a610.  v3:= 0I;
  #L15a612.  call `readFully`(v4, v2, v3, v1) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L15a618.  call temp:= `E`(v0) @signature `Ls3/z;.E:()J` @kind virtual;
  #L15a61e.  v0:= temp @kind wide;
  #L15a620.  v2:= 1716281667L;
  #L15a626.  v4:= lcmp(v0, v2);
  #L15a62a.  if v4 != 0 then goto L15a630;
  #L15a62e.  return @kind void;
  #L15a630.  v4:= 0I;
  #L15a632.  v0:= "Failed to read FLAC stream marker." @kind object;
  #L15a636.  call temp:= `a`(v0, v4) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L15a63c.  v4:= temp @kind object;
  #L15a63e.  throw v4;
}
procedure `java.util.List` `j`(`a2.m` v3 @kind object, `int` v4 ) @signature `La2/s;.j:(La2/m;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L15a530.  v0:= new `s3.z`;
  #L15a534.  call `<init>`(v0, v4) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L15a53a.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L15a540.  v1:= temp @kind object;
  #L15a542.  v2:= 0I;
  #L15a544.  call `readFully`(v3, v1, v2, v4) @signature `La2/m;.readFully:([BII)V` @kind interface;
  #L15a54a.  v3:= 4I;
  #L15a54c.  call `P`(v0, v3) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L15a552.  call temp:= `j`(v0, v2, v2) @signature `La2/g0;.j:(Ls3/z;ZZ)La2/g0$b;` @kind static;
  #L15a558.  v3:= temp @kind object;
  #L15a55a.  v3:= v3.`a2.g0$b.a` @type ^`java.lang.String`[] @kind object;
  #L15a55e.  call temp:= `asList`(v3) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L15a564.  v3:= temp @kind object;
  #L15a566.  return v3 @kind object;
}
