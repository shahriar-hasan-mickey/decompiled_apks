record `a2.d0$a` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `a2.d0$a.a` @AccessFlag PUBLIC_FINAL;
  `byte`[] `a2.d0$a.b` @AccessFlag PUBLIC_FINAL;
  `int` `a2.d0$a.c` @AccessFlag PUBLIC_FINAL;
  `int` `a2.d0$a.d` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`a2.d0$a` v0 @kind this, `int` v1 , `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `La2/d0$a;.<init>:(I[BII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15b668.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15b66e.  v0.`a2.d0$a.a` @type ^`int` := v1;
  #L15b672.  v0.`a2.d0$a.b` @type ^`byte`[] := v2 @kind object;
  #L15b676.  v0.`a2.d0$a.c` @type ^`int` := v3;
  #L15b67a.  v0.`a2.d0$a.d` @type ^`int` := v4;
  #L15b67e.  return @kind void;
}
procedure `boolean` `equals`(`a2.d0$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `La2/d0$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15b5b8.  v0:= 1I;
  #L15b5ba.  if v4 != v5 then goto L15b5c0;
  #L15b5be.  return v0;
  #L15b5c0.  v1:= 0I;
  #L15b5c2.  if v5 == 0 then goto L15b61a;
  #L15b5c6.  v2:= constclass @type ^`a2.d0$a` @kind object;
  #L15b5ca.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L15b5d0.  v3:= temp @kind object;
  #L15b5d2.  if v2 == v3 then goto L15b5d8;
  #L15b5d6.  goto L15b61a;
  #L15b5d8.  v5:= (`a2.d0$a`) v5 @kind object;
  #L15b5dc.  v2:= v4.`a2.d0$a.a` @type ^`int`;
  #L15b5e0.  v3:= v5.`a2.d0$a.a` @type ^`int`;
  #L15b5e4.  if v2 != v3 then goto L15b616;
  #L15b5e8.  v2:= v4.`a2.d0$a.c` @type ^`int`;
  #L15b5ec.  v3:= v5.`a2.d0$a.c` @type ^`int`;
  #L15b5f0.  if v2 != v3 then goto L15b616;
  #L15b5f4.  v2:= v4.`a2.d0$a.d` @type ^`int`;
  #L15b5f8.  v3:= v5.`a2.d0$a.d` @type ^`int`;
  #L15b5fc.  if v2 != v3 then goto L15b616;
  #L15b600.  v2:= v4.`a2.d0$a.b` @type ^`byte`[] @kind object;
  #L15b604.  v5:= v5.`a2.d0$a.b` @type ^`byte`[] @kind object;
  #L15b608.  call temp:= `equals`(v2, v5) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L15b60e.  v5:= temp;
  #L15b610.  if v5 == 0 then goto L15b616;
  #L15b614.  goto L15b618;
  #L15b616.  v0:= 0I;
  #L15b618.  return v0;
  #L15b61a.  return v1;
}
procedure `int` `hashCode`(`a2.d0$a` v2 @kind this) @signature `La2/d0$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b62c.  v0:= v2.`a2.d0$a.a` @type ^`int`;
  #L15b630.  v0:= v0 * 31;
  #L15b634.  v1:= v2.`a2.d0$a.b` @type ^`byte`[] @kind object;
  #L15b638.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L15b63e.  v1:= temp;
  #L15b640.  v0:= v0 + v1 @kind int;
  #L15b642.  v0:= v0 * 31;
  #L15b646.  v1:= v2.`a2.d0$a.c` @type ^`int`;
  #L15b64a.  v0:= v0 + v1 @kind int;
  #L15b64c.  v0:= v0 * 31;
  #L15b650.  v1:= v2.`a2.d0$a.d` @type ^`int`;
  #L15b654.  v0:= v0 + v1 @kind int;
  #L15b656.  return v0;
}
