record `a2.g0` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `a`(`int` v1 ) @signature `La2/g0;.a:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15bf88.  v0:= 0I;
  #L15bf8a.  if v1 <= 0 then goto L15bf98;
  #L15bf8e.  v0:= v0 + 1;
  #L15bf92.  v1:= v1 ^>> 1;
  #L15bf96.  goto L15bf8a;
  #L15bf98.  return v0;
}
procedure `long` `b`(`long` v2 , `long` v4 ) @signature `La2/g0;.b:(JJ)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L15bfac.  v2:= (`double`) v2 @kind l2d;
  #L15bfae.  v4:= (`double`) v4 @kind l2d;
  #L15bfb0.  v0:= 1.0D;
  #L15bfb4.  v0:= v0 / v4 @kind double;
  #L15bfb6.  call temp:= `pow`(v2, v0) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L15bfbc.  v2:= temp @kind wide;
  #L15bfbe.  call temp:= `floor`(v2) @signature `Ljava/lang/Math;.floor:(D)D` @kind static;
  #L15bfc4.  v2:= temp @kind wide;
  #L15bfc6.  v2:= (`long`) v2 @kind d2l;
  #L15bfc8.  return v2 @kind wide;
}
procedure `n2.a` `c`(`java.util.List` v8 @kind object) @signature `La2/g0;.c:(Ljava/util/List;)Ln2/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L15bfdc.  v0:= new `java.util.ArrayList`;
  #L15bfe0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L15bfe6.  v1:= 0I;
  #L15bfe8.  v2:= 0I;
  #L15bfea.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15bff0.  v3:= temp;
  #L15bff2.  if v2 >= v3 then goto L15c0ac;
  #L15bff6.  call temp:= `get`(v8, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L15bffc.  v3:= temp @kind object;
  #L15bffe.  v3:= (`java.lang.String`) v3 @kind object;
  #L15c002.  v4:= "=" @kind object;
  #L15c006.  call temp:= `Q0`(v3, v4) @signature `Ls3/l0;.Q0:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L15c00c.  v4:= temp @kind object;
  #L15c00e.  v5:= length @variable v4;
  #L15c010.  v6:= 2I;
  #L15c012.  v7:= "VorbisUtil" @kind object;
  #L15c016.  if v5 == v6 then goto L15c044;
  #L15c01a.  v4:= new `java.lang.StringBuilder`;
  #L15c01e.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15c024.  v5:= "Failed to parse Vorbis comment: " @kind object;
  #L15c028.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c02e.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c034.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c03a.  v3:= temp @kind object;
  #L15c03c.  call `h`(v7, v3) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15c042.  goto L15c0a6;
  #L15c044.  v3:= v4[v1] @kind object;
  #L15c048.  v5:= "METADATA_BLOCK_PICTURE" @kind object;
  #L15c04c.  call temp:= `equals`(v3, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15c052.  v3:= temp;
  #L15c054.  v5:= 1I;
  #L15c056.  if v3 == 0 then goto L15c08e;
  #L15c05a.  v3:= v4[v5] @kind object;
  #L15c05e.  call temp:= `decode`(v3, v1) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L15c064.  v3:= temp @kind object;
  #L15c066.  v4:= new `s3.z`;
  #L15c06a.  call `<init>`(v4, v3) @signature `Ls3/z;.<init>:([B)V` @kind direct;
  #L15c070.  call temp:= `a`(v4) @signature `Lq2/a;.a:(Ls3/z;)Lq2/a;` @kind static;
  #L15c076.  v3:= temp @kind object;
  #L15c078.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15c07e.  goto L15c0a6;
  #L15c080.  v3:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L15c082.  v4:= "Failed to parse vorbis picture" @kind object;
  #L15c086.  call `i`(v7, v4, v3) @signature `Ls3/q;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L15c08c.  goto L15c0a6;
  #L15c08e.  v3:= new `v2.a`;
  #L15c092.  v6:= v4[v1] @kind object;
  #L15c096.  v4:= v4[v5] @kind object;
  #L15c09a.  call `<init>`(v3, v6, v4) @signature `Lv2/a;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L15c0a0.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15c0a6.  v2:= v2 + 1;
  #L15c0aa.  goto L15bfea;
  #L15c0ac.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L15c0b2.  v8:= temp;
  #L15c0b4.  if v8 == 0 then goto L15c0bc;
  #L15c0b8.  v8:= 0I;
  #L15c0ba.  goto L15c0c6;
  #L15c0bc.  v8:= new `n2.a`;
  #L15c0c0.  call `<init>`(v8, v0) @signature `Ln2/a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L15c0c6.  return v8 @kind object;
  catch `java.lang.RuntimeException` @[L15c05a..L15c07e] goto L15c080;
}
procedure `a2.g0$a` `d`(`a2.f0` v15 @kind object) @signature `La2/g0;.d:(La2/f0;)La2/g0$a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L15b9d0.  v0:= 24I;
  #L15b9d4.  call temp:= `d`(v15, v0) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15b9da.  v1:= temp;
  #L15b9dc.  v2:= 0I;
  #L15b9de.  v3:= 5653314I;
  #L15b9e4.  if v1 != v3 then goto L15bb42;
  #L15b9e8.  v1:= 16I;
  #L15b9ec.  call temp:= `d`(v15, v1) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15b9f2.  v4:= temp;
  #L15b9f4.  call temp:= `d`(v15, v0) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15b9fa.  v5:= temp;
  #L15b9fc.  v6:= new `long`[v5];
  #L15ba00.  call temp:= `c`(v15) @signature `La2/f0;.c:()Z` @kind virtual;
  #L15ba06.  v8:= temp;
  #L15ba08.  v0:= 0L;
  #L15ba0c.  v3:= 0I;
  #L15ba0e.  v7:= 5I;
  #L15ba10.  v9:= 1I;
  #L15ba12.  if v8 != 0 then goto L15ba60;
  #L15ba16.  call temp:= `c`(v15) @signature `La2/f0;.c:()Z` @kind virtual;
  #L15ba1c.  v10:= temp;
  #L15ba1e.  if v3 >= v5 then goto L15baa4;
  #L15ba22.  if v10 == 0 then goto L15ba4a;
  #L15ba26.  call temp:= `c`(v15) @signature `La2/f0;.c:()Z` @kind virtual;
  #L15ba2c.  v11:= temp;
  #L15ba2e.  if v11 == 0 then goto L15ba44;
  #L15ba32.  call temp:= `d`(v15, v7) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15ba38.  v11:= temp;
  #L15ba3a.  v11:= v11 + v9 @kind int;
  #L15ba3c.  v11:= (`long`) v11 @kind i2l;
  #L15ba3e.  v6[v3]:= v11 @kind wide;
  #L15ba42.  goto L15ba5a;
  #L15ba44.  v6[v3]:= v0 @kind wide;
  #L15ba48.  goto L15ba5a;
  #L15ba4a.  call temp:= `d`(v15, v7) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15ba50.  v11:= temp;
  #L15ba52.  v11:= v11 + v9 @kind int;
  #L15ba54.  v11:= (`long`) v11 @kind i2l;
  #L15ba56.  v6[v3]:= v11 @kind wide;
  #L15ba5a.  v3:= v3 + 1;
  #L15ba5e.  goto L15ba1e;
  #L15ba60.  call temp:= `d`(v15, v7) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15ba66.  v7:= temp;
  #L15ba68.  v7:= v7 + v9 @kind int;
  #L15ba6a.  v10:= 0I;
  #L15ba6c.  if v10 >= v5 then goto L15baa4;
  #L15ba70.  v11:= v5 - v10 @kind int;
  #L15ba74.  call temp:= `a`(v11) @signature `La2/g0;.a:(I)I` @kind static;
  #L15ba7a.  v11:= temp;
  #L15ba7c.  call temp:= `d`(v15, v11) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15ba82.  v11:= temp;
  #L15ba84.  v12:= 0I;
  #L15ba86.  if v12 >= v11 then goto L15ba9e;
  #L15ba8a.  if v10 >= v5 then goto L15ba9e;
  #L15ba8e.  v13:= (`long`) v7 @kind i2l;
  #L15ba90.  v6[v10]:= v13 @kind wide;
  #L15ba94.  v10:= v10 + 1;
  #L15ba98.  v12:= v12 + 1;
  #L15ba9c.  goto L15ba86;
  #L15ba9e.  v7:= v7 + 1;
  #L15baa2.  goto L15ba6c;
  #L15baa4.  v3:= 4I;
  #L15baa6.  call temp:= `d`(v15, v3) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15baac.  v7:= temp;
  #L15baae.  v10:= 2I;
  #L15bab0.  if v7 > v10 then goto L15bb16;
  #L15bab4.  if v7 == v9 then goto L15babc;
  #L15bab8.  if v7 != v10 then goto L15bb08;
  #L15babc.  v2:= 32I;
  #L15bac0.  call `e`(v15, v2) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15bac6.  call `e`(v15, v2) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15bacc.  call temp:= `d`(v15, v3) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15bad2.  v2:= temp;
  #L15bad4.  v2:= v2 + v9 @kind int;
  #L15bad6.  call `e`(v15, v9) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15badc.  if v7 != v9 then goto L15baf2;
  #L15bae0.  if v4 == 0 then goto L15bafa;
  #L15bae4.  v0:= (`long`) v5 @kind i2l;
  #L15bae6.  v9:= (`long`) v4 @kind i2l;
  #L15bae8.  call temp:= `b`(v0, v9) @signature `La2/g0;.b:(JJ)J` @kind static;
  #L15baee.  v0:= temp @kind wide;
  #L15baf0.  goto L15bafa;
  #L15baf2.  v0:= (`long`) v5 @kind i2l;
  #L15baf4.  v9:= (`long`) v4 @kind i2l;
  #L15baf6.  v0:= v0 * v9 @kind long;
  #L15bafa.  v2:= (`long`) v2 @kind i2l;
  #L15bafc.  v0:= v0 * v2 @kind long;
  #L15bb00.  v1:= (`int`) v0 @kind l2i;
  #L15bb02.  call `e`(v15, v1) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15bb08.  v15:= new `a2.g0$a`;
  #L15bb0c.  v3:= v15 @kind object;
  #L15bb0e.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `La2/g0$a;.<init>:(II[JIZ)V` @kind direct;
  #L15bb14.  return v15 @kind object;
  #L15bb16.  v15:= new `java.lang.StringBuilder`;
  #L15bb1a.  call `<init>`(v15) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15bb20.  v0:= "lookup type greater than 2 not decodable: " @kind object;
  #L15bb24.  call temp:= `append`(v15, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bb2a.  call temp:= `append`(v15, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bb30.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15bb36.  v15:= temp @kind object;
  #L15bb38.  call temp:= `a`(v15, v2) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L15bb3e.  v15:= temp @kind object;
  #L15bb40.  throw v15;
  #L15bb42.  v0:= new `java.lang.StringBuilder`;
  #L15bb46.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15bb4c.  v1:= "expected code book to start with [0x56, 0x43, 0x42] at " @kind object;
  #L15bb50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bb56.  call temp:= `b`(v15) @signature `La2/f0;.b:()I` @kind virtual;
  #L15bb5c.  v15:= temp;
  #L15bb5e.  call temp:= `append`(v0, v15) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bb64.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15bb6a.  v15:= temp @kind object;
  #L15bb6c.  call temp:= `a`(v15, v2) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L15bb72.  v15:= temp @kind object;
  #L15bb74.  throw v15;
}
procedure `void` `e`(`a2.f0` v15 @kind object) @signature `La2/g0;.e:(La2/f0;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L15c0e8.  v0:= 6I;
  #L15c0ea.  call temp:= `d`(v15, v0) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c0f0.  v1:= temp;
  #L15c0f2.  v2:= 1I;
  #L15c0f4.  v1:= v1 + v2 @kind int;
  #L15c0f6.  v3:= 0I;
  #L15c0f8.  v4:= 0I;
  #L15c0fa.  if v4 >= v1 then goto L15c242;
  #L15c0fe.  v5:= 16I;
  #L15c102.  call temp:= `d`(v15, v5) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c108.  v6:= temp;
  #L15c10a.  v7:= 4I;
  #L15c10c.  v8:= 8I;
  #L15c110.  if v6 == 0 then goto L15c200;
  #L15c114.  if v6 != v2 then goto L15c1d2;
  #L15c118.  v5:= 5I;
  #L15c11a.  call temp:= `d`(v15, v5) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c120.  v5:= temp;
  #L15c122.  v6:= -1I;
  #L15c124.  v9:= new `int`[v5];
  #L15c128.  v10:= 0I;
  #L15c12a.  if v10 >= v5 then goto L15c14c;
  #L15c12e.  call temp:= `d`(v15, v7) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c134.  v11:= temp;
  #L15c136.  v9[v10]:= v11;
  #L15c13a.  v11:= v9[v10];
  #L15c13e.  if v11 <= v6 then goto L15c146;
  #L15c142.  v6:= v9[v10];
  #L15c146.  v10:= v10 + 1;
  #L15c14a.  goto L15c12a;
  #L15c14c.  v6:= v6 + 1;
  #L15c150.  v10:= new `int`[v6];
  #L15c154.  v11:= 0I;
  #L15c156.  v12:= 2I;
  #L15c158.  if v11 >= v6 then goto L15c19a;
  #L15c15c.  v13:= 3I;
  #L15c15e.  call temp:= `d`(v15, v13) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c164.  v13:= temp;
  #L15c166.  v13:= v13 + v2 @kind int;
  #L15c168.  v10[v11]:= v13;
  #L15c16c.  call temp:= `d`(v15, v12) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c172.  v12:= temp;
  #L15c174.  if v12 <= 0 then goto L15c17e;
  #L15c178.  call `e`(v15, v8) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c17e.  v13:= 0I;
  #L15c180.  v14:= v2 ^< v12 @kind int;
  #L15c184.  if v13 >= v14 then goto L15c194;
  #L15c188.  call `e`(v15, v8) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c18e.  v13:= v13 + 1;
  #L15c192.  goto L15c180;
  #L15c194.  v11:= v11 + 1;
  #L15c198.  goto L15c156;
  #L15c19a.  call `e`(v15, v12) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c1a0.  call temp:= `d`(v15, v7) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c1a6.  v6:= temp;
  #L15c1a8.  v7:= 0I;
  #L15c1aa.  v8:= 0I;
  #L15c1ac.  v11:= 0I;
  #L15c1ae.  if v7 >= v5 then goto L15c23a;
  #L15c1b2.  v12:= v9[v7];
  #L15c1b6.  v12:= v10[v12];
  #L15c1ba.  v8:= v8 + v12 @kind int;
  #L15c1bc.  if v11 >= v8 then goto L15c1cc;
  #L15c1c0.  call `e`(v15, v6) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c1c6.  v11:= v11 + 1;
  #L15c1ca.  goto L15c1bc;
  #L15c1cc.  v7:= v7 + 1;
  #L15c1d0.  goto L15c1ae;
  #L15c1d2.  v15:= new `java.lang.StringBuilder`;
  #L15c1d6.  call `<init>`(v15) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15c1dc.  v0:= "floor type greater than 1 not decodable: " @kind object;
  #L15c1e0.  call temp:= `append`(v15, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c1e6.  call temp:= `append`(v15, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c1ec.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c1f2.  v15:= temp @kind object;
  #L15c1f4.  v0:= 0I;
  #L15c1f6.  call temp:= `a`(v15, v0) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L15c1fc.  v15:= temp @kind object;
  #L15c1fe.  throw v15;
  #L15c200.  call `e`(v15, v8) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c206.  call `e`(v15, v5) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c20c.  call `e`(v15, v5) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c212.  call `e`(v15, v0) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c218.  call `e`(v15, v8) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c21e.  call temp:= `d`(v15, v7) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c224.  v5:= temp;
  #L15c226.  v5:= v5 + v2 @kind int;
  #L15c228.  v6:= 0I;
  #L15c22a.  if v6 >= v5 then goto L15c23a;
  #L15c22e.  call `e`(v15, v8) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c234.  v6:= v6 + 1;
  #L15c238.  goto L15c22a;
  #L15c23a.  v4:= v4 + 1;
  #L15c23e.  goto L15c0fa;
  #L15c242.  return @kind void;
}
procedure `void` `f`(`int` v11 , `a2.f0` v12 @kind object) @signature `La2/g0;.f:(ILa2/f0;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L15c254.  v0:= 6I;
  #L15c256.  call temp:= `d`(v12, v0) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c25c.  v0:= temp;
  #L15c25e.  v1:= 1I;
  #L15c260.  v0:= v0 + v1 @kind int;
  #L15c262.  v2:= 0I;
  #L15c264.  v3:= 0I;
  #L15c266.  if v3 >= v0 then goto L15c362;
  #L15c26a.  v4:= 16I;
  #L15c26e.  call temp:= `d`(v12, v4) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c274.  v4:= temp;
  #L15c276.  if v4 == 0 then goto L15c2a8;
  #L15c27a.  v5:= new `java.lang.StringBuilder`;
  #L15c27e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15c284.  v6:= "mapping type other than 0 not supported: " @kind object;
  #L15c288.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c28e.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c294.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c29a.  v4:= temp @kind object;
  #L15c29c.  v5:= "VorbisUtil" @kind object;
  #L15c2a0.  call `c`(v5, v4) @signature `Ls3/q;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15c2a6.  goto L15c34c;
  #L15c2a8.  call temp:= `c`(v12) @signature `La2/f0;.c:()Z` @kind virtual;
  #L15c2ae.  v4:= temp;
  #L15c2b0.  v5:= 4I;
  #L15c2b2.  if v4 == 0 then goto L15c2c2;
  #L15c2b6.  call temp:= `d`(v12, v5) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c2bc.  v4:= temp;
  #L15c2be.  v4:= v4 + v1 @kind int;
  #L15c2c0.  goto L15c2c4;
  #L15c2c2.  v4:= 1I;
  #L15c2c4.  call temp:= `c`(v12) @signature `La2/f0;.c:()Z` @kind virtual;
  #L15c2ca.  v6:= temp;
  #L15c2cc.  v7:= 8I;
  #L15c2d0.  if v6 == 0 then goto L15c30a;
  #L15c2d4.  call temp:= `d`(v12, v7) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c2da.  v6:= temp;
  #L15c2dc.  v6:= v6 + v1 @kind int;
  #L15c2de.  v8:= 0I;
  #L15c2e0.  if v8 >= v6 then goto L15c30a;
  #L15c2e4.  v9:= v11 + -1;
  #L15c2e8.  call temp:= `a`(v9) @signature `La2/g0;.a:(I)I` @kind static;
  #L15c2ee.  v10:= temp;
  #L15c2f0.  call `e`(v12, v10) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c2f6.  call temp:= `a`(v9) @signature `La2/g0;.a:(I)I` @kind static;
  #L15c2fc.  v9:= temp;
  #L15c2fe.  call `e`(v12, v9) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c304.  v8:= v8 + 1;
  #L15c308.  goto L15c2e0;
  #L15c30a.  v6:= 2I;
  #L15c30c.  call temp:= `d`(v12, v6) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c312.  v6:= temp;
  #L15c314.  if v6 != 0 then goto L15c352;
  #L15c318.  if v4 <= v1 then goto L15c32e;
  #L15c31c.  v6:= 0I;
  #L15c31e.  if v6 >= v11 then goto L15c32e;
  #L15c322.  call `e`(v12, v5) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c328.  v6:= v6 + 1;
  #L15c32c.  goto L15c31e;
  #L15c32e.  v5:= 0I;
  #L15c330.  if v5 >= v4 then goto L15c34c;
  #L15c334.  call `e`(v12, v7) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c33a.  call `e`(v12, v7) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c340.  call `e`(v12, v7) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c346.  v5:= v5 + 1;
  #L15c34a.  goto L15c330;
  #L15c34c.  v3:= v3 + 1;
  #L15c350.  goto L15c266;
  #L15c352.  v11:= 0I;
  #L15c354.  v12:= "to reserved bits must be zero after mapping coupling steps" @kind object;
  #L15c358.  call temp:= `a`(v12, v11) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L15c35e.  v11:= temp @kind object;
  #L15c360.  throw v11;
  #L15c362.  return @kind void;
}
procedure `a2.g0$c`[] `g`(`a2.f0` v8 @kind object) @signature `La2/g0;.g:(La2/f0;)[La2/g0$c;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L15bc64.  v0:= 6I;
  #L15bc66.  call temp:= `d`(v8, v0) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15bc6c.  v0:= temp;
  #L15bc6e.  v0:= v0 + 1;
  #L15bc72.  v1:= new `a2.g0$c`[v0];
  #L15bc76.  v2:= 0I;
  #L15bc78.  if v2 >= v0 then goto L15bcb8;
  #L15bc7c.  call temp:= `c`(v8) @signature `La2/f0;.c:()Z` @kind virtual;
  #L15bc82.  v3:= temp;
  #L15bc84.  v4:= 16I;
  #L15bc88.  call temp:= `d`(v8, v4) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15bc8e.  v5:= temp;
  #L15bc90.  call temp:= `d`(v8, v4) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15bc96.  v4:= temp;
  #L15bc98.  v6:= 8I;
  #L15bc9c.  call temp:= `d`(v8, v6) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15bca2.  v6:= temp;
  #L15bca4.  v7:= new `a2.g0$c`;
  #L15bca8.  call `<init>`(v7, v3, v5, v4, v6) @signature `La2/g0$c;.<init>:(ZIII)V` @kind direct;
  #L15bcae.  v1[v2]:= v7 @kind object;
  #L15bcb2.  v2:= v2 + 1;
  #L15bcb6.  goto L15bc78;
  #L15bcb8.  return v1 @kind object;
}
procedure `void` `h`(`a2.f0` v12 @kind object) @signature `La2/g0;.h:(La2/f0;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L15c374.  v0:= 6I;
  #L15c376.  call temp:= `d`(v12, v0) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c37c.  v1:= temp;
  #L15c37e.  v2:= 1I;
  #L15c380.  v1:= v1 + v2 @kind int;
  #L15c382.  v3:= 0I;
  #L15c384.  v4:= 0I;
  #L15c386.  if v4 >= v1 then goto L15c446;
  #L15c38a.  v5:= 16I;
  #L15c38e.  call temp:= `d`(v12, v5) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c394.  v5:= temp;
  #L15c396.  v6:= 2I;
  #L15c398.  if v5 > v6 then goto L15c436;
  #L15c39c.  v5:= 24I;
  #L15c3a0.  call `e`(v12, v5) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c3a6.  call `e`(v12, v5) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c3ac.  call `e`(v12, v5) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c3b2.  call temp:= `d`(v12, v0) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c3b8.  v5:= temp;
  #L15c3ba.  v5:= v5 + v2 @kind int;
  #L15c3bc.  v6:= 8I;
  #L15c3c0.  call `e`(v12, v6) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c3c6.  v7:= new `int`[v5];
  #L15c3ca.  v8:= 0I;
  #L15c3cc.  if v8 >= v5 then goto L15c404;
  #L15c3d0.  v9:= 3I;
  #L15c3d2.  call temp:= `d`(v12, v9) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c3d8.  v9:= temp;
  #L15c3da.  call temp:= `c`(v12) @signature `La2/f0;.c:()Z` @kind virtual;
  #L15c3e0.  v10:= temp;
  #L15c3e2.  if v10 == 0 then goto L15c3f2;
  #L15c3e6.  v10:= 5I;
  #L15c3e8.  call temp:= `d`(v12, v10) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15c3ee.  v10:= temp;
  #L15c3f0.  goto L15c3f4;
  #L15c3f2.  v10:= 0I;
  #L15c3f4.  v10:= v10 * 8;
  #L15c3f8.  v10:= v10 + v9 @kind int;
  #L15c3fa.  v7[v8]:= v10;
  #L15c3fe.  v8:= v8 + 1;
  #L15c402.  goto L15c3cc;
  #L15c404.  v8:= 0I;
  #L15c406.  if v8 >= v5 then goto L15c430;
  #L15c40a.  v9:= 0I;
  #L15c40c.  if v9 >= v6 then goto L15c42a;
  #L15c410.  v10:= v7[v8];
  #L15c414.  v11:= v2 ^< v9 @kind int;
  #L15c418.  v10:= v10 ^& v11 @kind int;
  #L15c41a.  if v10 == 0 then goto L15c424;
  #L15c41e.  call `e`(v12, v6) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15c424.  v9:= v9 + 1;
  #L15c428.  goto L15c40c;
  #L15c42a.  v8:= v8 + 1;
  #L15c42e.  goto L15c406;
  #L15c430.  v4:= v4 + 1;
  #L15c434.  goto L15c386;
  #L15c436.  v12:= 0I;
  #L15c438.  v0:= "residueType greater than 2 is not decodable" @kind object;
  #L15c43c.  call temp:= `a`(v0, v12) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L15c442.  v12:= temp @kind object;
  #L15c444.  throw v12;
  #L15c446.  return @kind void;
}
procedure `a2.g0$b` `i`(`s3.z` v1 @kind object) @signature `La2/g0;.i:(Ls3/z;)La2/g0$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15bb88.  v0:= 1I;
  #L15bb8a.  call temp:= `j`(v1, v0, v0) @signature `La2/g0;.j:(Ls3/z;ZZ)La2/g0$b;` @kind static;
  #L15bb90.  v1:= temp @kind object;
  #L15bb92.  return v1 @kind object;
}
procedure `a2.g0$b` `j`(`s3.z` v8 @kind object, `boolean` v9 , `boolean` v10 ) @signature `La2/g0;.j:(Ls3/z;ZZ)La2/g0$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L15bba4.  v0:= 0I;
  #L15bba6.  if v9 == 0 then goto L15bbb2;
  #L15bbaa.  v9:= 3I;
  #L15bbac.  call temp:= `m`(v9, v8, v0) @signature `La2/g0;.m:(ILs3/z;Z)Z` @kind static;
  #L15bbb2.  call temp:= `s`(v8) @signature `Ls3/z;.s:()J` @kind virtual;
  #L15bbb8.  v1:= temp @kind wide;
  #L15bbba.  v9:= (`int`) v1 @kind l2i;
  #L15bbbc.  v1:= 11I;
  #L15bbc0.  call temp:= `z`(v8, v9) @signature `Ls3/z;.z:(I)Ljava/lang/String;` @kind virtual;
  #L15bbc6.  v9:= temp @kind object;
  #L15bbc8.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15bbce.  v2:= temp;
  #L15bbd0.  v1:= v1 + v2 @kind int;
  #L15bbd2.  call temp:= `s`(v8) @signature `Ls3/z;.s:()J` @kind virtual;
  #L15bbd8.  v2:= temp @kind wide;
  #L15bbda.  v4:= (`int`) v2 @kind l2i;
  #L15bbdc.  v4:= new `java.lang.String`[v4];
  #L15bbe0.  v1:= v1 + 4;
  #L15bbe4.  v5:= (`long`) v0 @kind i2l;
  #L15bbe6.  v7:= lcmp(v5, v2);
  #L15bbea.  if v7 >= 0 then goto L15bc1c;
  #L15bbee.  call temp:= `s`(v8) @signature `Ls3/z;.s:()J` @kind virtual;
  #L15bbf4.  v5:= temp @kind wide;
  #L15bbf6.  v6:= (`int`) v5 @kind l2i;
  #L15bbf8.  v1:= v1 + 4;
  #L15bbfc.  call temp:= `z`(v8, v6) @signature `Ls3/z;.z:(I)Ljava/lang/String;` @kind virtual;
  #L15bc02.  v5:= temp @kind object;
  #L15bc04.  v4[v0]:= v5 @kind object;
  #L15bc08.  v5:= v4[v0] @kind object;
  #L15bc0c.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15bc12.  v5:= temp;
  #L15bc14.  v1:= v1 + v5 @kind int;
  #L15bc16.  v0:= v0 + 1;
  #L15bc1a.  goto L15bbe4;
  #L15bc1c.  if v10 == 0 then goto L15bc42;
  #L15bc20.  call temp:= `C`(v8) @signature `Ls3/z;.C:()I` @kind virtual;
  #L15bc26.  v8:= temp;
  #L15bc28.  v8:= v8 ^& 1;
  #L15bc2c.  if v8 == 0 then goto L15bc32;
  #L15bc30.  goto L15bc42;
  #L15bc32.  v8:= 0I;
  #L15bc34.  v9:= "framing bit expected to be set" @kind object;
  #L15bc38.  call temp:= `a`(v9, v8) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L15bc3e.  v8:= temp @kind object;
  #L15bc40.  throw v8;
  #L15bc42.  v1:= v1 + 1;
  #L15bc46.  v8:= new `a2.g0$b`;
  #L15bc4a.  call `<init>`(v8, v9, v4, v1) @signature `La2/g0$b;.<init>:(Ljava/lang/String;[Ljava/lang/String;I)V` @kind direct;
  #L15bc50.  return v8 @kind object;
}
procedure `a2.g0$d` `k`(`s3.z` v16 @kind object) @signature `La2/g0;.k:(Ls3/z;)La2/g0$d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L15bd98.  v0:= 1I;
  #L15bd9a.  v1:= 0I;
  #L15bd9c.  v2:= v16 @kind object;
  #L15bda0.  call temp:= `m`(v0, v2, v1) @signature `La2/g0;.m:(ILs3/z;Z)Z` @kind static;
  #L15bda6.  call temp:= `t`(v16) @signature `Ls3/z;.t:()I` @kind virtual;
  #L15bdac.  v3:= temp;
  #L15bdae.  call temp:= `C`(v16) @signature `Ls3/z;.C:()I` @kind virtual;
  #L15bdb4.  v4:= temp;
  #L15bdb6.  call temp:= `t`(v16) @signature `Ls3/z;.t:()I` @kind virtual;
  #L15bdbc.  v5:= temp;
  #L15bdbe.  call temp:= `p`(v16) @signature `Ls3/z;.p:()I` @kind virtual;
  #L15bdc4.  v6:= temp;
  #L15bdc6.  v7:= -1I;
  #L15bdc8.  if v6 > 0 then goto L15bdce;
  #L15bdcc.  v6:= -1I;
  #L15bdce.  call temp:= `p`(v16) @signature `Ls3/z;.p:()I` @kind virtual;
  #L15bdd4.  v8:= temp;
  #L15bdd6.  if v8 > 0 then goto L15bddc;
  #L15bdda.  v8:= -1I;
  #L15bddc.  call temp:= `p`(v16) @signature `Ls3/z;.p:()I` @kind virtual;
  #L15bde2.  v9:= temp;
  #L15bde4.  if v9 > 0 then goto L15bdea;
  #L15bde8.  v9:= -1I;
  #L15bdea.  call temp:= `C`(v16) @signature `Ls3/z;.C:()I` @kind virtual;
  #L15bdf0.  v7:= temp;
  #L15bdf2.  v10:= v7 ^& 15;
  #L15bdf6.  v10:= (`double`) v10 @kind i2d;
  #L15bdf8.  v12:= 2.0D;
  #L15bdfc.  call temp:= `pow`(v12, v10) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L15be02.  v10:= temp @kind wide;
  #L15be04.  v10:= (`int`) v10 @kind d2i;
  #L15be06.  v7:= v7 ^& 240;
  #L15be0a.  v7:= v7 ^> 4;
  #L15be0e.  v14:= (`double`) v7 @kind i2d;
  #L15be10.  call temp:= `pow`(v12, v14) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L15be16.  v11:= temp @kind wide;
  #L15be18.  v11:= (`int`) v11 @kind d2i;
  #L15be1a.  call temp:= `C`(v16) @signature `Ls3/z;.C:()I` @kind virtual;
  #L15be20.  v7:= temp;
  #L15be22.  v7:= v7 ^& v0 @kind int;
  #L15be24.  if v7 <= 0 then goto L15be2a;
  #L15be28.  goto L15be2c;
  #L15be2a.  v0:= 0I;
  #L15be2c.  call temp:= `d`(v16) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L15be32.  v1:= temp @kind object;
  #L15be34.  call temp:= `f`(v16) @signature `Ls3/z;.f:()I` @kind virtual;
  #L15be3a.  v2:= temp;
  #L15be3c.  call temp:= `copyOf`(v1, v2) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L15be42.  v12:= temp @kind object;
  #L15be44.  v1:= new `a2.g0$d`;
  #L15be48.  v2:= v1 @kind object;
  #L15be4a.  v7:= v8;
  #L15be4c.  v8:= v9;
  #L15be4e.  v9:= v10;
  #L15be50.  v10:= v11;
  #L15be52.  v11:= v0;
  #L15be54.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `La2/g0$d;.<init>:(IIIIIIIIZ[B)V` @kind direct;
  #L15be5a.  return v1 @kind object;
}
procedure `a2.g0$c`[] `l`(`s3.z` v4 @kind object, `int` v5 ) @signature `La2/g0;.l:(Ls3/z;I)[La2/g0$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15bccc.  v0:= 5I;
  #L15bcce.  v1:= 0I;
  #L15bcd0.  call temp:= `m`(v0, v4, v1) @signature `La2/g0;.m:(ILs3/z;Z)Z` @kind static;
  #L15bcd6.  call temp:= `C`(v4) @signature `Ls3/z;.C:()I` @kind virtual;
  #L15bcdc.  v0:= temp;
  #L15bcde.  v0:= v0 + 1;
  #L15bce2.  v2:= new `a2.f0`;
  #L15bce6.  call temp:= `d`(v4) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L15bcec.  v3:= temp @kind object;
  #L15bcee.  call `<init>`(v2, v3) @signature `La2/f0;.<init>:([B)V` @kind direct;
  #L15bcf4.  call temp:= `e`(v4) @signature `Ls3/z;.e:()I` @kind virtual;
  #L15bcfa.  v4:= temp;
  #L15bcfc.  v4:= v4 * 8;
  #L15bd00.  call `e`(v2, v4) @signature `La2/f0;.e:(I)V` @kind virtual;
  #L15bd06.  v4:= 0I;
  #L15bd08.  if v4 >= v0 then goto L15bd18;
  #L15bd0c.  call temp:= `d`(v2) @signature `La2/g0;.d:(La2/f0;)La2/g0$a;` @kind static;
  #L15bd12.  v4:= v4 + 1;
  #L15bd16.  goto L15bd08;
  #L15bd18.  v4:= 6I;
  #L15bd1a.  call temp:= `d`(v2, v4) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15bd20.  v4:= temp;
  #L15bd22.  v4:= v4 + 1;
  #L15bd26.  v0:= 0I;
  #L15bd28.  if v1 >= v4 then goto L15bd50;
  #L15bd2c.  v3:= 16I;
  #L15bd30.  call temp:= `d`(v2, v3) @signature `La2/f0;.d:(I)I` @kind virtual;
  #L15bd36.  v3:= temp;
  #L15bd38.  if v3 != 0 then goto L15bd42;
  #L15bd3c.  v1:= v1 + 1;
  #L15bd40.  goto L15bd26;
  #L15bd42.  v4:= "placeholder of time domain transforms not zeroed out" @kind object;
  #L15bd46.  call temp:= `a`(v4, v0) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L15bd4c.  v4:= temp @kind object;
  #L15bd4e.  throw v4;
  #L15bd50.  call `e`(v2) @signature `La2/g0;.e:(La2/f0;)V` @kind static;
  #L15bd56.  call `h`(v2) @signature `La2/g0;.h:(La2/f0;)V` @kind static;
  #L15bd5c.  call `f`(v5, v2) @signature `La2/g0;.f:(ILa2/f0;)V` @kind static;
  #L15bd62.  call temp:= `g`(v2) @signature `La2/g0;.g:(La2/f0;)[La2/g0$c;` @kind static;
  #L15bd68.  v4:= temp @kind object;
  #L15bd6a.  call temp:= `c`(v2) @signature `La2/f0;.c:()Z` @kind virtual;
  #L15bd70.  v5:= temp;
  #L15bd72.  if v5 == 0 then goto L15bd78;
  #L15bd76.  return v4 @kind object;
  #L15bd78.  v4:= "framing bit after modes not set as expected" @kind object;
  #L15bd7c.  call temp:= `a`(v4, v0) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L15bd82.  v4:= temp @kind object;
  #L15bd84.  throw v4;
}
procedure `boolean` `m`(`int` v4 , `s3.z` v5 @kind object, `boolean` v6 ) @signature `La2/g0;.m:(ILs3/z;Z)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15be6c.  call temp:= `a`(v5) @signature `Ls3/z;.a:()I` @kind virtual;
  #L15be72.  v0:= temp;
  #L15be74.  v1:= 0I;
  #L15be76.  v2:= 0I;
  #L15be78.  v3:= 7I;
  #L15be7a.  if v0 >= v3 then goto L15beb8;
  #L15be7e.  if v6 == 0 then goto L15be84;
  #L15be82.  return v1;
  #L15be84.  v4:= new `java.lang.StringBuilder`;
  #L15be88.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15be8e.  v6:= "too short header: " @kind object;
  #L15be92.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15be98.  call temp:= `a`(v5) @signature `Ls3/z;.a:()I` @kind virtual;
  #L15be9e.  v5:= temp;
  #L15bea0.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bea6.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15beac.  v4:= temp @kind object;
  #L15beae.  call temp:= `a`(v4, v2) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L15beb4.  v4:= temp @kind object;
  #L15beb6.  throw v4;
  #L15beb8.  call temp:= `C`(v5) @signature `Ls3/z;.C:()I` @kind virtual;
  #L15bebe.  v0:= temp;
  #L15bec0.  if v0 == v4 then goto L15befe;
  #L15bec4.  if v6 == 0 then goto L15beca;
  #L15bec8.  return v1;
  #L15beca.  v5:= new `java.lang.StringBuilder`;
  #L15bece.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15bed4.  v6:= "expected header type " @kind object;
  #L15bed8.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bede.  call temp:= `toHexString`(v4) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L15bee4.  v4:= temp @kind object;
  #L15bee6.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15beec.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15bef2.  v4:= temp @kind object;
  #L15bef4.  call temp:= `a`(v4, v2) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L15befa.  v4:= temp @kind object;
  #L15befc.  throw v4;
  #L15befe.  call temp:= `C`(v5) @signature `Ls3/z;.C:()I` @kind virtual;
  #L15bf04.  v4:= temp;
  #L15bf06.  v0:= 118I;
  #L15bf0a.  if v4 != v0 then goto L15bf64;
  #L15bf0e.  call temp:= `C`(v5) @signature `Ls3/z;.C:()I` @kind virtual;
  #L15bf14.  v4:= temp;
  #L15bf16.  v0:= 111I;
  #L15bf1a.  if v4 != v0 then goto L15bf64;
  #L15bf1e.  call temp:= `C`(v5) @signature `Ls3/z;.C:()I` @kind virtual;
  #L15bf24.  v4:= temp;
  #L15bf26.  v0:= 114I;
  #L15bf2a.  if v4 != v0 then goto L15bf64;
  #L15bf2e.  call temp:= `C`(v5) @signature `Ls3/z;.C:()I` @kind virtual;
  #L15bf34.  v4:= temp;
  #L15bf36.  v0:= 98I;
  #L15bf3a.  if v4 != v0 then goto L15bf64;
  #L15bf3e.  call temp:= `C`(v5) @signature `Ls3/z;.C:()I` @kind virtual;
  #L15bf44.  v4:= temp;
  #L15bf46.  v0:= 105I;
  #L15bf4a.  if v4 != v0 then goto L15bf64;
  #L15bf4e.  call temp:= `C`(v5) @signature `Ls3/z;.C:()I` @kind virtual;
  #L15bf54.  v4:= temp;
  #L15bf56.  v5:= 115I;
  #L15bf5a.  if v4 == v5 then goto L15bf60;
  #L15bf5e.  goto L15bf64;
  #L15bf60.  v4:= 1I;
  #L15bf62.  return v4;
  #L15bf64.  if v6 == 0 then goto L15bf6a;
  #L15bf68.  return v1;
  #L15bf6a.  v4:= "expected characters 'vorbis'" @kind object;
  #L15bf6e.  call temp:= `a`(v4, v2) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L15bf74.  v4:= temp @kind object;
  #L15bf76.  throw v4;
}
