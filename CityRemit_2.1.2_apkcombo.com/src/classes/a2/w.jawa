record `a2.w` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `a2.w.a` @AccessFlag PUBLIC;
  `int` `a2.w.b` @AccessFlag PUBLIC;
}
global `java.util.regex.Pattern` `@@a2.w.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La2/w;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L15afa8.  v0:= "^ [0-9a-fA-F]{8} ([0-9a-fA-F]{8}) ([0-9a-fA-F]{8})" @kind object;
  #L15afac.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L15afb2.  v0:= temp @kind object;
  #L15afb4.  `@@a2.w.c` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L15afb8.  return @kind void;
}
procedure `void` `<init>`(`a2.w` v1 @kind this) @signature `La2/w;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15afcc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15afd2.  v0:= -1I;
  #L15afd4.  v1.`a2.w.a` @type ^`int` := v0;
  #L15afd8.  v1.`a2.w.b` @type ^`int` := v0;
  #L15afdc.  return @kind void;
}
procedure `boolean` `b`(`a2.w` v4 @kind this, `java.lang.String` v5 @kind object) @signature `La2/w;.b:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15ae3c.  v0:= `@@a2.w.c` @type ^`java.util.regex.Pattern` @kind object;
  #L15ae40.  call temp:= `matcher`(v0, v5) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L15ae46.  v5:= temp @kind object;
  #L15ae48.  call temp:= `find`(v5) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L15ae4e.  v0:= temp;
  #L15ae50.  if v0 == 0 then goto L15aea6;
  #L15ae54.  v0:= 1I;
  #L15ae56.  call temp:= `group`(v5, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L15ae5c.  v1:= temp @kind object;
  #L15ae5e.  call temp:= `j`(v1) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15ae64.  v1:= temp @kind object;
  #L15ae66.  v1:= (`java.lang.String`) v1 @kind object;
  #L15ae6a.  v2:= 16I;
  #L15ae6e.  call temp:= `parseInt`(v1, v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;I)I` @kind static;
  #L15ae74.  v1:= temp;
  #L15ae76.  v3:= 2I;
  #L15ae78.  call temp:= `group`(v5, v3) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L15ae7e.  v5:= temp @kind object;
  #L15ae80.  call temp:= `j`(v5) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15ae86.  v5:= temp @kind object;
  #L15ae88.  v5:= (`java.lang.String`) v5 @kind object;
  #L15ae8c.  call temp:= `parseInt`(v5, v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;I)I` @kind static;
  #L15ae92.  v5:= temp;
  #L15ae94.  if v1 > 0 then goto L15ae9c;
  #L15ae98.  if v5 <= 0 then goto L15aea6;
  #L15ae9c.  v4.`a2.w.a` @type ^`int` := v1;
  #L15aea0.  v4.`a2.w.b` @type ^`int` := v5;
  #L15aea4.  return v0;
  #L15aea6.  v5:= 0I;
  #L15aea8.  return v5;
  catch `java.lang.NumberFormatException` @[L15ae56..L15aea4] goto L15aea6;
}
procedure `boolean` `a`(`a2.w` v2 @kind this) @signature `La2/w;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15ae10.  v0:= v2.`a2.w.a` @type ^`int`;
  #L15ae14.  v1:= -1I;
  #L15ae16.  if v0 == v1 then goto L15ae26;
  #L15ae1a.  v0:= v2.`a2.w.b` @type ^`int`;
  #L15ae1e.  if v0 == v1 then goto L15ae26;
  #L15ae22.  v0:= 1I;
  #L15ae24.  goto L15ae28;
  #L15ae26.  v0:= 0I;
  #L15ae28.  return v0;
}
procedure `boolean` `c`(`a2.w` v7 @kind this, `n2.a` v8 @kind object) @signature `La2/w;.c:(Ln2/a;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15aecc.  v0:= 0I;
  #L15aece.  v1:= 0I;
  #L15aed0.  call temp:= `d`(v8) @signature `Ln2/a;.d:()I` @kind virtual;
  #L15aed6.  v2:= temp;
  #L15aed8.  if v1 >= v2 then goto L15af60;
  #L15aedc.  call temp:= `c`(v8, v1) @signature `Ln2/a;.c:(I)Ln2/a$b;` @kind virtual;
  #L15aee2.  v2:= temp @kind object;
  #L15aee4.  v3:= instanceof @variable v2 @type ^`s2.e` @kind boolean;
  #L15aee8.  v4:= "iTunSMPB" @kind object;
  #L15aeec.  v5:= 1I;
  #L15aeee.  if v3 == 0 then goto L15af18;
  #L15aef2.  v2:= (`s2.e`) v2 @kind object;
  #L15aef6.  v3:= v2.`s2.e.q` @type ^`java.lang.String` @kind object;
  #L15aefa.  call temp:= `equals`(v4, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15af00.  v3:= temp;
  #L15af02.  if v3 == 0 then goto L15af5a;
  #L15af06.  v2:= v2.`s2.e.r` @type ^`java.lang.String` @kind object;
  #L15af0a.  call temp:= `b`(v7, v2) @signature `La2/w;.b:(Ljava/lang/String;)Z` @kind direct;
  #L15af10.  v2:= temp;
  #L15af12.  if v2 == 0 then goto L15af5a;
  #L15af16.  return v5;
  #L15af18.  v3:= instanceof @variable v2 @type ^`s2.j` @kind boolean;
  #L15af1c.  if v3 == 0 then goto L15af5a;
  #L15af20.  v2:= (`s2.j`) v2 @kind object;
  #L15af24.  v3:= v2.`s2.j.p` @type ^`java.lang.String` @kind object;
  #L15af28.  v6:= "com.apple.iTunes" @kind object;
  #L15af2c.  call temp:= `equals`(v6, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15af32.  v3:= temp;
  #L15af34.  if v3 == 0 then goto L15af5a;
  #L15af38.  v3:= v2.`s2.j.q` @type ^`java.lang.String` @kind object;
  #L15af3c.  call temp:= `equals`(v4, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15af42.  v3:= temp;
  #L15af44.  if v3 == 0 then goto L15af5a;
  #L15af48.  v2:= v2.`s2.j.r` @type ^`java.lang.String` @kind object;
  #L15af4c.  call temp:= `b`(v7, v2) @signature `La2/w;.b:(Ljava/lang/String;)Z` @kind direct;
  #L15af52.  v2:= temp;
  #L15af54.  if v2 == 0 then goto L15af5a;
  #L15af58.  return v5;
  #L15af5a.  v1:= v1 + 1;
  #L15af5e.  goto L15aed0;
  #L15af60.  return v0;
}
procedure `boolean` `d`(`a2.w` v1 @kind this, `int` v2 ) @signature `La2/w;.d:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15af74.  v0:= v2 ^> 12;
  #L15af78.  v2:= v2 ^& 4095;
  #L15af7c.  if v0 > 0 then goto L15af8a;
  #L15af80.  if v2 <= 0 then goto L15af86;
  #L15af84.  goto L15af8a;
  #L15af86.  v2:= 0I;
  #L15af88.  return v2;
  #L15af8a.  v1.`a2.w.a` @type ^`int` := v0;
  #L15af8e.  v1.`a2.w.b` @type ^`int` := v2;
  #L15af92.  v2:= 1I;
  #L15af94.  return v2;
}
