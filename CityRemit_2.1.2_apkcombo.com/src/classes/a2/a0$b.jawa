record `a2.a0$b` @kind class @AccessFlag PUBLIC extends `a2.a0` @kind interface {
  `long` `a2.a0$b.a` @AccessFlag PRIVATE_FINAL;
  `a2.a0$a` `a2.a0$b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a2.a0$b` v2 @kind this, `long` v3 ) @signature `La2/a0$b;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15b400.  v0:= 0L;
  #L15b404.  call `<init>`(v2, v3, v0) @signature `La2/a0$b;.<init>:(JJ)V` @kind direct;
  #L15b40a.  return @kind void;
}
procedure `void` `<init>`(`a2.a0$b` v2 @kind this, `long` v3 , `long` v5 ) @signature `La2/a0$b;.<init>:(JJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15b41c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15b422.  v2.`a2.a0$b.a` @type ^`long` := v3 @kind wide;
  #L15b426.  v3:= new `a2.a0$a`;
  #L15b42a.  v0:= 0L;
  #L15b42e.  v4:= lcmp(v5, v0);
  #L15b432.  if v4 != 0 then goto L15b43c;
  #L15b436.  v4:= `@@a2.b0.c` @type ^`a2.b0` @kind object;
  #L15b43a.  goto L15b446;
  #L15b43c.  v4:= new `a2.b0`;
  #L15b440.  call `<init>`(v4, v0, v5) @signature `La2/b0;.<init>:(JJ)V` @kind direct;
  #L15b446.  call `<init>`(v3, v4) @signature `La2/a0$a;.<init>:(La2/b0;)V` @kind direct;
  #L15b44c.  v2.`a2.a0$b.b` @type ^`a2.a0$a` := v3 @kind object;
  #L15b450.  return @kind void;
}
procedure `boolean` `f`(`a2.a0$b` v1 @kind this) @signature `La2/a0$b;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b3d4.  v0:= 0I;
  #L15b3d6.  return v0;
}
procedure `a2.a0$a` `h`(`a2.a0$b` v0 @kind this, `long` v1 ) @signature `La2/a0$b;.h:(J)La2/a0$a;` @AccessFlag PUBLIC {
    temp;

  #L15b3bc.  v1:= v0.`a2.a0$b.b` @type ^`a2.a0$a` @kind object;
  #L15b3c0.  return v1 @kind object;
}
procedure `long` `i`(`a2.a0$b` v2 @kind this) @signature `La2/a0$b;.i:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b3e8.  v0:= v2.`a2.a0$b.a` @type ^`long` @kind wide;
  #L15b3ec.  return v0 @kind wide;
}
