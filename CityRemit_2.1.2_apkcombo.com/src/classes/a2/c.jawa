record `a2.c` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`long` v10 , `s3.z` v12 @kind object, `a2.d0`[] v13 @kind object) @signature `La2/c;.a:(JLs3/z;[La2/d0;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L158a98.  call temp:= `a`(v12) @signature `Ls3/z;.a:()I` @kind virtual;
  #L158a9e.  v0:= temp;
  #L158aa0.  v1:= 1I;
  #L158aa2.  if v0 <= v1 then goto L158b78;
  #L158aa6.  call temp:= `c`(v12) @signature `La2/c;.c:(Ls3/z;)I` @kind static;
  #L158aac.  v0:= temp;
  #L158aae.  call temp:= `c`(v12) @signature `La2/c;.c:(Ls3/z;)I` @kind static;
  #L158ab4.  v2:= temp;
  #L158ab6.  call temp:= `e`(v12) @signature `Ls3/z;.e:()I` @kind virtual;
  #L158abc.  v3:= temp;
  #L158abe.  v3:= v3 + v2 @kind int;
  #L158ac0.  v4:= -1I;
  #L158ac2.  if v2 == v4 then goto L158b5a;
  #L158ac6.  call temp:= `a`(v12) @signature `Ls3/z;.a:()I` @kind virtual;
  #L158acc.  v4:= temp;
  #L158ace.  if v2 <= v4 then goto L158ad4;
  #L158ad2.  goto L158b5a;
  #L158ad4.  v4:= 4I;
  #L158ad6.  if v0 != v4 then goto L158b70;
  #L158ada.  v0:= 8I;
  #L158ade.  if v2 < v0 then goto L158b70;
  #L158ae2.  call temp:= `C`(v12) @signature `Ls3/z;.C:()I` @kind virtual;
  #L158ae8.  v0:= temp;
  #L158aea.  call temp:= `I`(v12) @signature `Ls3/z;.I:()I` @kind virtual;
  #L158af0.  v2:= temp;
  #L158af2.  v4:= 49I;
  #L158af6.  v5:= 0I;
  #L158af8.  if v2 != v4 then goto L158b06;
  #L158afc.  call temp:= `m`(v12) @signature `Ls3/z;.m:()I` @kind virtual;
  #L158b02.  v6:= temp;
  #L158b04.  goto L158b08;
  #L158b06.  v6:= 0I;
  #L158b08.  call temp:= `C`(v12) @signature `Ls3/z;.C:()I` @kind virtual;
  #L158b0e.  v7:= temp;
  #L158b10.  v8:= 47I;
  #L158b14.  if v2 != v8 then goto L158b1e;
  #L158b18.  call `P`(v12, v1) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L158b1e.  v9:= 181I;
  #L158b22.  if v0 != v9 then goto L158b38;
  #L158b26.  if v2 == v4 then goto L158b2e;
  #L158b2a.  if v2 != v8 then goto L158b38;
  #L158b2e.  v0:= 3I;
  #L158b30.  if v7 != v0 then goto L158b38;
  #L158b34.  v0:= 1I;
  #L158b36.  goto L158b3a;
  #L158b38.  v0:= 0I;
  #L158b3a.  if v2 != v4 then goto L158b4e;
  #L158b3e.  v2:= 1195456820I;
  #L158b44.  if v6 != v2 then goto L158b4a;
  #L158b48.  goto L158b4c;
  #L158b4a.  v1:= 0I;
  #L158b4c.  v0:= v0 ^& v1 @kind int;
  #L158b4e.  if v0 == 0 then goto L158b70;
  #L158b52.  call `b`(v10, v12, v13) @signature `La2/c;.b:(JLs3/z;[La2/d0;)V` @kind static;
  #L158b58.  goto L158b70;
  #L158b5a.  v0:= "CeaUtil" @kind object;
  #L158b5e.  v1:= "Skipping remainder of malformed SEI NAL unit." @kind object;
  #L158b62.  call `h`(v0, v1) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L158b68.  call temp:= `f`(v12) @signature `Ls3/z;.f:()I` @kind virtual;
  #L158b6e.  v3:= temp;
  #L158b70.  call `O`(v12, v3) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L158b76.  goto L158a98;
  #L158b78.  return @kind void;
}
procedure `void` `b`(`long` v11 , `s3.z` v13 @kind object, `a2.d0`[] v14 @kind object) @signature `La2/c;.b:(JLs3/z;[La2/d0;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L158b8c.  call temp:= `C`(v13) @signature `Ls3/z;.C:()I` @kind virtual;
  #L158b92.  v0:= temp;
  #L158b94.  v1:= v0 ^& 64;
  #L158b98.  v2:= 0I;
  #L158b9a.  v3:= 1I;
  #L158b9c.  if v1 == 0 then goto L158ba4;
  #L158ba0.  v1:= 1I;
  #L158ba2.  goto L158ba6;
  #L158ba4.  v1:= 0I;
  #L158ba6.  if v1 != 0 then goto L158bac;
  #L158baa.  return @kind void;
  #L158bac.  v0:= v0 ^& 31;
  #L158bb0.  call `P`(v13, v3) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L158bb6.  v0:= v0 * 3;
  #L158bba.  call temp:= `e`(v13) @signature `Ls3/z;.e:()I` @kind virtual;
  #L158bc0.  v1:= temp;
  #L158bc2.  v3:= length @variable v14;
  #L158bc4.  if v2 >= v3 then goto L158c00;
  #L158bc8.  v4:= v14[v2] @kind object;
  #L158bcc.  call `O`(v13, v1) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L158bd2.  call `c`(v4, v13, v0) @signature `La2/d0;.c:(Ls3/z;I)V` @kind interface;
  #L158bd8.  v5:= -4.9E-324D;
  #L158be2.  v7:= lcmp(v11, v5);
  #L158be6.  if v7 == 0 then goto L158bfa;
  #L158bea.  v7:= 1I;
  #L158bec.  v9:= 0I;
  #L158bee.  v10:= 0I;
  #L158bf0.  v5:= v11 @kind wide;
  #L158bf2.  v8:= v0;
  #L158bf4.  call `f`(v4, v5, v7, v8, v9, v10) @signature `La2/d0;.f:(JIIILa2/d0$a;)V` @kind interface;
  #L158bfa.  v2:= v2 + 1;
  #L158bfe.  goto L158bc4;
  #L158c00.  return @kind void;
}
procedure `int` `c`(`s3.z` v3 @kind object) @signature `La2/c;.c:(Ls3/z;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L158a60.  v0:= 0I;
  #L158a62.  call temp:= `a`(v3) @signature `Ls3/z;.a:()I` @kind virtual;
  #L158a68.  v1:= temp;
  #L158a6a.  if v1 != 0 then goto L158a72;
  #L158a6e.  v3:= -1I;
  #L158a70.  return v3;
  #L158a72.  call temp:= `C`(v3) @signature `Ls3/z;.C:()I` @kind virtual;
  #L158a78.  v1:= temp;
  #L158a7a.  v0:= v0 + v1 @kind int;
  #L158a7c.  v2:= 255I;
  #L158a80.  if v1 == v2 then goto L158a62;
  #L158a84.  return v0;
}
