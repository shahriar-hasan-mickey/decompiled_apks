record `a2.a$c` @kind class @AccessFlag PUBLIC {
  `long` `a2.a$c.a` @AccessFlag PRIVATE_FINAL;
  `long` `a2.a$c.b` @AccessFlag PRIVATE_FINAL;
  `long` `a2.a$c.c` @AccessFlag PRIVATE_FINAL;
  `long` `a2.a$c.d` @AccessFlag PRIVATE;
  `long` `a2.a$c.e` @AccessFlag PRIVATE;
  `long` `a2.a$c.f` @AccessFlag PRIVATE;
  `long` `a2.a$c.g` @AccessFlag PRIVATE;
  `long` `a2.a$c.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a2.a$c` v0 @kind this, `long` v1 , `long` v3 , `long` v5 , `long` v7 , `long` v9 , `long` v11 , `long` v13 ) @signature `La2/a$c;.<init>:(JJJJJJJ)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L158540.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L158546.  v0.`a2.a$c.a` @type ^`long` := v1 @kind wide;
  #L15854a.  v0.`a2.a$c.b` @type ^`long` := v3 @kind wide;
  #L15854e.  v0.`a2.a$c.d` @type ^`long` := v5 @kind wide;
  #L158552.  v0.`a2.a$c.e` @type ^`long` := v7 @kind wide;
  #L158556.  v0.`a2.a$c.f` @type ^`long` := v9 @kind wide;
  #L15855a.  v0.`a2.a$c.g` @type ^`long` := v11 @kind wide;
  #L15855e.  v0.`a2.a$c.c` @type ^`long` := v13 @kind wide;
  #L158562.  call temp:= `h`(v3, v5, v7, v9, v11, v13) @signature `La2/a$c;.h:(JJJJJJ)J` @kind static;
  #L158568.  v1:= temp @kind wide;
  #L15856a.  v0.`a2.a$c.h` @type ^`long` := v1 @kind wide;
  #L15856e.  return @kind void;
}
procedure `long` `a`(`a2.a$c` v2 @kind object) @signature `La2/a$c;.a:(La2/a$c;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L1583cc.  call temp:= `l`(v2) @signature `La2/a$c;.l:()J` @kind direct;
  #L1583d2.  v0:= temp @kind wide;
  #L1583d4.  return v0 @kind wide;
}
procedure `long` `b`(`a2.a$c` v2 @kind object) @signature `La2/a$c;.b:(La2/a$c;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L1583e8.  call temp:= `j`(v2) @signature `La2/a$c;.j:()J` @kind direct;
  #L1583ee.  v0:= temp @kind wide;
  #L1583f0.  return v0 @kind wide;
}
procedure `long` `c`(`a2.a$c` v2 @kind object) @signature `La2/a$c;.c:(La2/a$c;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L158404.  call temp:= `i`(v2) @signature `La2/a$c;.i:()J` @kind direct;
  #L15840a.  v0:= temp @kind wide;
  #L15840c.  return v0 @kind wide;
}
procedure `long` `d`(`a2.a$c` v2 @kind object) @signature `La2/a$c;.d:(La2/a$c;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L158420.  call temp:= `k`(v2) @signature `La2/a$c;.k:()J` @kind direct;
  #L158426.  v0:= temp @kind wide;
  #L158428.  return v0 @kind wide;
}
procedure `long` `e`(`a2.a$c` v2 @kind object) @signature `La2/a$c;.e:(La2/a$c;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L15843c.  call temp:= `m`(v2) @signature `La2/a$c;.m:()J` @kind direct;
  #L158442.  v0:= temp @kind wide;
  #L158444.  return v0 @kind wide;
}
procedure `void` `f`(`a2.a$c` v0 @kind object, `long` v1 , `long` v3 ) @signature `La2/a$c;.f:(La2/a$c;JJ)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L158580.  call `o`(v0, v1, v3) @signature `La2/a$c;.o:(JJ)V` @kind direct;
  #L158586.  return @kind void;
}
procedure `void` `g`(`a2.a$c` v0 @kind object, `long` v1 , `long` v3 ) @signature `La2/a$c;.g:(La2/a$c;JJ)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L158598.  call `p`(v0, v1, v3) @signature `La2/a$c;.p:(JJ)V` @kind direct;
  #L15859e.  return @kind void;
}
procedure `long` `h`(`long` v7 , `long` v9 , `long` v11 , `long` v13 , `long` v15 , `long` v17 ) @signature `La2/a$c;.h:(JJJJJJ)J` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L158458.  v0:= 1L;
  #L15845c.  v2:= v13 + v0 @kind long;
  #L158460.  v4:= lcmp(v2, v15);
  #L158464.  if v4 >= 0 then goto L1584b4;
  #L158468.  v2:= v9 + v0 @kind long;
  #L15846c.  v4:= lcmp(v2, v11);
  #L158470.  if v4 < 0 then goto L158476;
  #L158474.  goto L1584b4;
  #L158476.  v2:= v7 - v9 @kind long;
  #L15847a.  v4:= v15 - v13 @kind long;
  #L15847e.  v4:= (`float`) v4 @kind l2f;
  #L158480.  v5:= v11 - v9 @kind long;
  #L158484.  v5:= (`float`) v5 @kind l2f;
  #L158486.  v4:= v4 / v5 @kind float;
  #L158488.  v2:= (`float`) v2 @kind l2f;
  #L15848a.  v2:= v2 * v4 @kind float;
  #L15848e.  v2:= (`long`) v2 @kind f2l;
  #L158490.  v4:= 20L;
  #L158494.  v4:= v2 / v4 @kind long;
  #L158498.  v2:= v2 + v13 @kind long;
  #L15849a.  v2:= v2 - v17 @kind long;
  #L15849e.  v2:= v2 - v4 @kind long;
  #L1584a0.  v0:= v15 - v0 @kind long;
  #L1584a4.  v7:= v2 @kind wide;
  #L1584a6.  v9:= v13 @kind wide;
  #L1584a8.  v11:= v0 @kind wide;
  #L1584aa.  call temp:= `r`(v7, v9, v11) @signature `Ls3/l0;.r:(JJJ)J` @kind static;
  #L1584b0.  v0:= temp @kind wide;
  #L1584b2.  return v0 @kind wide;
  #L1584b4.  return v13 @kind wide;
}
procedure `long` `i`(`a2.a$c` v2 @kind this) @signature `La2/a$c;.i:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1584c8.  v0:= v2.`a2.a$c.g` @type ^`long` @kind wide;
  #L1584cc.  return v0 @kind wide;
}
procedure `long` `j`(`a2.a$c` v2 @kind this) @signature `La2/a$c;.j:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1584e0.  v0:= v2.`a2.a$c.f` @type ^`long` @kind wide;
  #L1584e4.  return v0 @kind wide;
}
procedure `long` `k`(`a2.a$c` v2 @kind this) @signature `La2/a$c;.k:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1584f8.  v0:= v2.`a2.a$c.h` @type ^`long` @kind wide;
  #L1584fc.  return v0 @kind wide;
}
procedure `long` `l`(`a2.a$c` v2 @kind this) @signature `La2/a$c;.l:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L158510.  v0:= v2.`a2.a$c.a` @type ^`long` @kind wide;
  #L158514.  return v0 @kind wide;
}
procedure `long` `m`(`a2.a$c` v2 @kind this) @signature `La2/a$c;.m:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L158528.  v0:= v2.`a2.a$c.b` @type ^`long` @kind wide;
  #L15852c.  return v0 @kind wide;
}
procedure `void` `n`(`a2.a$c` v12 @kind this) @signature `La2/a$c;.n:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1585b0.  v0:= v12.`a2.a$c.b` @type ^`long` @kind wide;
  #L1585b4.  v2:= v12.`a2.a$c.d` @type ^`long` @kind wide;
  #L1585b8.  v4:= v12.`a2.a$c.e` @type ^`long` @kind wide;
  #L1585bc.  v6:= v12.`a2.a$c.f` @type ^`long` @kind wide;
  #L1585c0.  v8:= v12.`a2.a$c.g` @type ^`long` @kind wide;
  #L1585c4.  v10:= v12.`a2.a$c.c` @type ^`long` @kind wide;
  #L1585c8.  call temp:= `h`(v0, v2, v4, v6, v8, v10) @signature `La2/a$c;.h:(JJJJJJ)J` @kind static;
  #L1585ce.  v0:= temp @kind wide;
  #L1585d0.  v12.`a2.a$c.h` @type ^`long` := v0 @kind wide;
  #L1585d4.  return @kind void;
}
procedure `void` `o`(`a2.a$c` v0 @kind this, `long` v1 , `long` v3 ) @signature `La2/a$c;.o:(JJ)V` @AccessFlag PRIVATE {
    temp;

  #L1585e8.  v0.`a2.a$c.e` @type ^`long` := v1 @kind wide;
  #L1585ec.  v0.`a2.a$c.g` @type ^`long` := v3 @kind wide;
  #L1585f0.  call `n`(v0) @signature `La2/a$c;.n:()V` @kind direct;
  #L1585f6.  return @kind void;
}
procedure `void` `p`(`a2.a$c` v0 @kind this, `long` v1 , `long` v3 ) @signature `La2/a$c;.p:(JJ)V` @AccessFlag PRIVATE {
    temp;

  #L158608.  v0.`a2.a$c.d` @type ^`long` := v1 @kind wide;
  #L15860c.  v0.`a2.a$c.f` @type ^`long` := v3 @kind wide;
  #L158610.  call `n`(v0) @signature `La2/a$c;.n:()V` @kind direct;
  #L158616.  return @kind void;
}
