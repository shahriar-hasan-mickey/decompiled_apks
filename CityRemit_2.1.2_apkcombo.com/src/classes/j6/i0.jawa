record `j6.i0` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.concurrent.ExecutorService` `@@j6.i0.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lj6/i0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L39a510.  v0:= "awaitEvenIfOnMainThread task continuation executor" @kind object;
  #L39a514.  call temp:= `c`(v0) @signature `Lj6/t;.c:(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService;` @kind static;
  #L39a51a.  v0:= temp @kind object;
  #L39a51c.  `@@j6.i0.a` @type ^`java.util.concurrent.ExecutorService` := v0 @kind object;
  #L39a520.  return @kind void;
}
procedure `java.lang.Void` `a`(`a5.m` v0 @kind object, `a5.l` v1 @kind object) @signature `Lj6/i0;.a:(La5/m;La5/l;)Ljava/lang/Void;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L39a448.  call temp:= `i`(v0, v1) @signature `Lj6/i0;.i:(La5/m;La5/l;)Ljava/lang/Void;` @kind static;
  #L39a44e.  v0:= temp @kind object;
  #L39a450.  return v0 @kind object;
}
procedure `java.lang.Void` `b`(`a5.m` v0 @kind object, `a5.l` v1 @kind object) @signature `Lj6/i0;.b:(La5/m;La5/l;)Ljava/lang/Void;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L39a464.  call temp:= `h`(v0, v1) @signature `Lj6/i0;.h:(La5/m;La5/l;)Ljava/lang/Void;` @kind static;
  #L39a46a.  v0:= temp @kind object;
  #L39a46c.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`java.util.concurrent.CountDownLatch` v0 @kind object, `a5.l` v1 @kind object) @signature `Lj6/i0;.c:(Ljava/util/concurrent/CountDownLatch;La5/l;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L39a374.  call temp:= `g`(v0, v1) @signature `Lj6/i0;.g:(Ljava/util/concurrent/CountDownLatch;La5/l;)Ljava/lang/Object;` @kind static;
  #L39a37a.  v0:= temp @kind object;
  #L39a37c.  return v0 @kind object;
}
procedure `java.lang.Object` `d`(`a5.l` v4 @kind object) @signature `Lj6/i0;.d:(La5/l;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39a390.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L39a394.  v1:= 1I;
  #L39a396.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L39a39c.  v1:= `@@j6.i0.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L39a3a0.  v2:= new `j6.h0`;
  #L39a3a4.  call `<init>`(v2, v0) @signature `Lj6/h0;.<init>:(Ljava/util/concurrent/CountDownLatch;)V` @kind direct;
  #L39a3aa.  call temp:= `i`(v4, v1, v2) @signature `La5/l;.i:(Ljava/util/concurrent/Executor;La5/c;)La5/l;` @kind virtual;
  #L39a3b0.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L39a3b4.  v2:= 4L;
  #L39a3b8.  call temp:= `await`(v0, v2, v1) @signature `Ljava/util/concurrent/CountDownLatch;.await:(JLjava/util/concurrent/TimeUnit;)Z` @kind virtual;
  #L39a3be.  call temp:= `p`(v4) @signature `La5/l;.p:()Z` @kind virtual;
  #L39a3c4.  v0:= temp;
  #L39a3c6.  if v0 == 0 then goto L39a3d4;
  #L39a3ca.  call temp:= `l`(v4) @signature `La5/l;.l:()Ljava/lang/Object;` @kind virtual;
  #L39a3d0.  v4:= temp @kind object;
  #L39a3d2.  return v4 @kind object;
  #L39a3d4.  call temp:= `n`(v4) @signature `La5/l;.n:()Z` @kind virtual;
  #L39a3da.  v0:= temp;
  #L39a3dc.  if v0 != 0 then goto L39a40c;
  #L39a3e0.  call temp:= `o`(v4) @signature `La5/l;.o:()Z` @kind virtual;
  #L39a3e6.  v0:= temp;
  #L39a3e8.  if v0 == 0 then goto L39a400;
  #L39a3ec.  v0:= new `java.lang.IllegalStateException`;
  #L39a3f0.  call temp:= `k`(v4) @signature `La5/l;.k:()Ljava/lang/Exception;` @kind virtual;
  #L39a3f6.  v4:= temp @kind object;
  #L39a3f8.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L39a3fe.  throw v0;
  #L39a400.  v4:= new `java.util.concurrent.TimeoutException`;
  #L39a404.  call `<init>`(v4) @signature `Ljava/util/concurrent/TimeoutException;.<init>:()V` @kind direct;
  #L39a40a.  throw v4;
  #L39a40c.  v4:= new `java.util.concurrent.CancellationException`;
  #L39a410.  v0:= "Task is already canceled" @kind object;
  #L39a414.  call `<init>`(v4, v0) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39a41a.  throw v4;
}
procedure `boolean` `e`(`java.util.concurrent.CountDownLatch` v3 @kind object, `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object) @signature `Lj6/i0;.e:(Ljava/util/concurrent/CountDownLatch;JLjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L39a2e8.  v0:= 0I;
  #L39a2ea.  call temp:= `toNanos`(v6, v4) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L39a2f0.  v4:= temp @kind wide;
  #L39a2f2.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L39a2f8.  v1:= temp @kind wide;
  #L39a2fa.  v1:= v1 + v4 @kind long;
  #L39a2fc.  v6:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L39a300.  call temp:= `await`(v3, v4, v6) @signature `Ljava/util/concurrent/CountDownLatch;.await:(JLjava/util/concurrent/TimeUnit;)Z` @kind virtual;
  #L39a306.  v3:= temp;
  #L39a308.  if v0 == 0 then goto L39a31a;
  #L39a30c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L39a312.  v4:= temp @kind object;
  #L39a314.  call `interrupt`(v4) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L39a31a.  return v3;
  #L39a31c.  v0:= 1I;
  #L39a31e.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L39a324.  v4:= temp @kind wide;
  #L39a326.  v4:= v1 - v4 @kind long;
  #L39a32a.  goto L39a2fc;
  #L39a32c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39a32e.  if v0 == 0 then goto L39a340;
  #L39a332.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L39a338.  v4:= temp @kind object;
  #L39a33a.  call `interrupt`(v4) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L39a340.  throw v3;
  catch `java.lang.Throwable` @[L39a2ea..L39a2fa] goto L39a32c;
  catch `java.lang.InterruptedException` @[L39a2fc..L39a308] goto L39a31c;
  catch `java.lang.Throwable` @[L39a2fc..L39a308] goto L39a32c;
  catch `java.lang.Throwable` @[L39a31e..L39a326] goto L39a32c;
}
procedure `a5.l` `f`(`java.util.concurrent.Executor` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lj6/i0;.f:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Callable;)La5/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L39a23c.  v0:= new `a5.m`;
  #L39a240.  call `<init>`(v0) @signature `La5/m;.<init>:()V` @kind direct;
  #L39a246.  v1:= new `j6.i0$a`;
  #L39a24a.  call `<init>`(v1, v3, v0) @signature `Lj6/i0$a;.<init>:(Ljava/util/concurrent/Callable;La5/m;)V` @kind direct;
  #L39a250.  call `execute`(v2, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L39a256.  call temp:= `a`(v0) @signature `La5/m;.a:()La5/l;` @kind virtual;
  #L39a25c.  v2:= temp @kind object;
  #L39a25e.  return v2 @kind object;
}
procedure `java.lang.Object` `g`(`java.util.concurrent.CountDownLatch` v0 @kind object, `a5.l` v1 @kind object) @signature `Lj6/i0;.g:(Ljava/util/concurrent/CountDownLatch;La5/l;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L39a42c.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L39a432.  v0:= 0I;
  #L39a434.  return v0 @kind object;
}
procedure `java.lang.Void` `h`(`a5.m` v1 @kind object, `a5.l` v2 @kind object) @signature `Lj6/i0;.h:(La5/m;La5/l;)Ljava/lang/Void;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L39a480.  call temp:= `p`(v2) @signature `La5/l;.p:()Z` @kind virtual;
  #L39a486.  v0:= temp;
  #L39a488.  if v0 == 0 then goto L39a49c;
  #L39a48c.  call temp:= `l`(v2) @signature `La5/l;.l:()Ljava/lang/Object;` @kind virtual;
  #L39a492.  v2:= temp @kind object;
  #L39a494.  call temp:= `e`(v1, v2) @signature `La5/m;.e:(Ljava/lang/Object;)Z` @kind virtual;
  #L39a49a.  goto L39a4b4;
  #L39a49c.  call temp:= `k`(v2) @signature `La5/l;.k:()Ljava/lang/Exception;` @kind virtual;
  #L39a4a2.  v2:= temp @kind object;
  #L39a4a4.  call temp:= `requireNonNull`(v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L39a4aa.  v2:= (`java.lang.Exception`) v2 @kind object;
  #L39a4ae.  call temp:= `d`(v1, v2) @signature `La5/m;.d:(Ljava/lang/Exception;)Z` @kind virtual;
  #L39a4b4.  v1:= 0I;
  #L39a4b6.  return v1 @kind object;
}
procedure `java.lang.Void` `i`(`a5.m` v1 @kind object, `a5.l` v2 @kind object) @signature `Lj6/i0;.i:(La5/m;La5/l;)Ljava/lang/Void;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L39a4c8.  call temp:= `p`(v2) @signature `La5/l;.p:()Z` @kind virtual;
  #L39a4ce.  v0:= temp;
  #L39a4d0.  if v0 == 0 then goto L39a4e4;
  #L39a4d4.  call temp:= `l`(v2) @signature `La5/l;.l:()Ljava/lang/Object;` @kind virtual;
  #L39a4da.  v2:= temp @kind object;
  #L39a4dc.  call temp:= `e`(v1, v2) @signature `La5/m;.e:(Ljava/lang/Object;)Z` @kind virtual;
  #L39a4e2.  goto L39a4fc;
  #L39a4e4.  call temp:= `k`(v2) @signature `La5/l;.k:()Ljava/lang/Exception;` @kind virtual;
  #L39a4ea.  v2:= temp @kind object;
  #L39a4ec.  call temp:= `requireNonNull`(v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L39a4f2.  v2:= (`java.lang.Exception`) v2 @kind object;
  #L39a4f6.  call temp:= `d`(v1, v2) @signature `La5/m;.d:(Ljava/lang/Exception;)Z` @kind virtual;
  #L39a4fc.  v1:= 0I;
  #L39a4fe.  return v1 @kind object;
}
procedure `a5.l` `j`(`a5.l` v2 @kind object, `a5.l` v3 @kind object) @signature `Lj6/i0;.j:(La5/l;La5/l;)La5/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L39a270.  v0:= new `a5.m`;
  #L39a274.  call `<init>`(v0) @signature `La5/m;.<init>:()V` @kind direct;
  #L39a27a.  v1:= new `j6.g0`;
  #L39a27e.  call `<init>`(v1, v0) @signature `Lj6/g0;.<init>:(La5/m;)V` @kind direct;
  #L39a284.  call temp:= `h`(v2, v1) @signature `La5/l;.h:(La5/c;)La5/l;` @kind virtual;
  #L39a28a.  call temp:= `h`(v3, v1) @signature `La5/l;.h:(La5/c;)La5/l;` @kind virtual;
  #L39a290.  call temp:= `a`(v0) @signature `La5/m;.a:()La5/l;` @kind virtual;
  #L39a296.  v2:= temp @kind object;
  #L39a298.  return v2 @kind object;
}
procedure `a5.l` `k`(`java.util.concurrent.Executor` v2 @kind object, `a5.l` v3 @kind object, `a5.l` v4 @kind object) @signature `Lj6/i0;.k:(Ljava/util/concurrent/Executor;La5/l;La5/l;)La5/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L39a2ac.  v0:= new `a5.m`;
  #L39a2b0.  call `<init>`(v0) @signature `La5/m;.<init>:()V` @kind direct;
  #L39a2b6.  v1:= new `j6.f0`;
  #L39a2ba.  call `<init>`(v1, v0) @signature `Lj6/f0;.<init>:(La5/m;)V` @kind direct;
  #L39a2c0.  call temp:= `i`(v3, v2, v1) @signature `La5/l;.i:(Ljava/util/concurrent/Executor;La5/c;)La5/l;` @kind virtual;
  #L39a2c6.  call temp:= `i`(v4, v2, v1) @signature `La5/l;.i:(Ljava/util/concurrent/Executor;La5/c;)La5/l;` @kind virtual;
  #L39a2cc.  call temp:= `a`(v0) @signature `La5/m;.a:()La5/l;` @kind virtual;
  #L39a2d2.  v2:= temp @kind object;
  #L39a2d4.  return v2 @kind object;
}
