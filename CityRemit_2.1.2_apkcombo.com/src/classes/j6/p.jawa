record `j6.p` @kind class @AccessFlag  extends `java.lang.Thread$UncaughtExceptionHandler` @kind interface {
  `j6.p$a` `j6.p.a` @AccessFlag PRIVATE_FINAL;
  `q6.i` `j6.p.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Thread$UncaughtExceptionHandler` `j6.p.c` @AccessFlag PRIVATE_FINAL;
  `g6.a` `j6.p.d` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `j6.p.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`j6.p` v0 @kind this, `j6.p$a` v1 @kind object, `q6.i` v2 @kind object, `java.lang.Thread$UncaughtExceptionHandler` v3 @kind object, `g6.a` v4 @kind object) @signature `Lj6/p;.<init>:(Lj6/p$a;Lq6/i;Ljava/lang/Thread$UncaughtExceptionHandler;Lg6/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L398410.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L398416.  v0.`j6.p.a` @type ^`j6.p$a` := v1 @kind object;
  #L39841a.  v0.`j6.p.b` @type ^`q6.i` := v2 @kind object;
  #L39841e.  v0.`j6.p.c` @type ^`java.lang.Thread$UncaughtExceptionHandler` := v3 @kind object;
  #L398422.  v1:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L398426.  v2:= 0I;
  #L398428.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L39842e.  v0.`j6.p.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v1 @kind object;
  #L398432.  v0.`j6.p.d` @type ^`g6.a` := v4 @kind object;
  #L398436.  return @kind void;
}
procedure `boolean` `b`(`j6.p` v1 @kind this, `java.lang.Thread` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lj6/p;.b:(Ljava/lang/Thread;Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3983a4.  v0:= 0I;
  #L3983a6.  if v2 != 0 then goto L3983be;
  #L3983aa.  call temp:= `f`() @signature `Lg6/f;.f:()Lg6/f;` @kind static;
  #L3983b0.  v2:= temp @kind object;
  #L3983b2.  v3:= "Crashlytics will not record uncaught exception; null thread" @kind object;
  #L3983b6.  call `d`(v2, v3) @signature `Lg6/f;.d:(Ljava/lang/String;)V` @kind virtual;
  #L3983bc.  return v0;
  #L3983be.  if v3 != 0 then goto L3983d6;
  #L3983c2.  call temp:= `f`() @signature `Lg6/f;.f:()Lg6/f;` @kind static;
  #L3983c8.  v2:= temp @kind object;
  #L3983ca.  v3:= "Crashlytics will not record uncaught exception; null throwable" @kind object;
  #L3983ce.  call `d`(v2, v3) @signature `Lg6/f;.d:(Ljava/lang/String;)V` @kind virtual;
  #L3983d4.  return v0;
  #L3983d6.  v2:= v1.`j6.p.d` @type ^`g6.a` @kind object;
  #L3983da.  call temp:= `c`(v2) @signature `Lg6/a;.c:()Z` @kind interface;
  #L3983e0.  v2:= temp;
  #L3983e2.  if v2 == 0 then goto L3983fa;
  #L3983e6.  call temp:= `f`() @signature `Lg6/f;.f:()Lg6/f;` @kind static;
  #L3983ec.  v2:= temp @kind object;
  #L3983ee.  v3:= "Crashlytics will not record uncaught exception; native crash exists for session." @kind object;
  #L3983f2.  call `b`(v2, v3) @signature `Lg6/f;.b:(Ljava/lang/String;)V` @kind virtual;
  #L3983f8.  return v0;
  #L3983fa.  v2:= 1I;
  #L3983fc.  return v2;
}
procedure `boolean` `a`(`j6.p` v1 @kind this) @signature `Lj6/p;.a:()Z` @AccessFlag  {
    temp;
    v0;

  #L398384.  v0:= v1.`j6.p.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L398388.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L39838e.  v0:= temp;
  #L398390.  return v0;
}
procedure `void` `uncaughtException`(`j6.p` v5 @kind this, `java.lang.Thread` v6 @kind object, `java.lang.Throwable` v7 @kind object) @signature `Lj6/p;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L398448.  v0:= "Completed exception processing. Invoking default exception handler." @kind object;
  #L39844c.  v1:= v5.`j6.p.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L398450.  v2:= 1I;
  #L398452.  call `set`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L398458.  v1:= 0I;
  #L39845a.  call temp:= `b`(v5, v6, v7) @signature `Lj6/p;.b:(Ljava/lang/Thread;Ljava/lang/Throwable;)Z` @kind direct;
  #L398460.  v2:= temp;
  #L398462.  if v2 == 0 then goto L398476;
  #L398466.  v2:= v5.`j6.p.a` @type ^`j6.p$a` @kind object;
  #L39846a.  v3:= v5.`j6.p.b` @type ^`q6.i` @kind object;
  #L39846e.  call `a`(v2, v3, v6, v7) @signature `Lj6/p$a;.a:(Lq6/i;Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L398474.  goto L3984a2;
  #L398476.  call temp:= `f`() @signature `Lg6/f;.f:()Lg6/f;` @kind static;
  #L39847c.  v2:= temp @kind object;
  #L39847e.  v3:= "Uncaught exception will not be recorded by Crashlytics." @kind object;
  #L398482.  call `b`(v2, v3) @signature `Lg6/f;.b:(Ljava/lang/String;)V` @kind virtual;
  #L398488.  goto L3984a2;
  #L39848a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39848c.  goto L3984c6;
  #L39848e.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L398490.  call temp:= `f`() @signature `Lg6/f;.f:()Lg6/f;` @kind static;
  #L398496.  v3:= temp @kind object;
  #L398498.  v4:= "An error occurred in the uncaught exception handler" @kind object;
  #L39849c.  call `e`(v3, v4, v2) @signature `Lg6/f;.e:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3984a2.  call temp:= `f`() @signature `Lg6/f;.f:()Lg6/f;` @kind static;
  #L3984a8.  v2:= temp @kind object;
  #L3984aa.  call `b`(v2, v0) @signature `Lg6/f;.b:(Ljava/lang/String;)V` @kind virtual;
  #L3984b0.  v0:= v5.`j6.p.c` @type ^`java.lang.Thread$UncaughtExceptionHandler` @kind object;
  #L3984b4.  call `uncaughtException`(v0, v6, v7) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L3984ba.  v6:= v5.`j6.p.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3984be.  call `set`(v6, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L3984c4.  return @kind void;
  #L3984c6.  call temp:= `f`() @signature `Lg6/f;.f:()Lg6/f;` @kind static;
  #L3984cc.  v3:= temp @kind object;
  #L3984ce.  call `b`(v3, v0) @signature `Lg6/f;.b:(Ljava/lang/String;)V` @kind virtual;
  #L3984d4.  v0:= v5.`j6.p.c` @type ^`java.lang.Thread$UncaughtExceptionHandler` @kind object;
  #L3984d8.  call `uncaughtException`(v0, v6, v7) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L3984de.  v6:= v5.`j6.p.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3984e2.  call `set`(v6, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L3984e8.  throw v2;
  catch `java.lang.Exception` @[L39845a..L398488] goto L39848e;
  catch `java.lang.Throwable` @[L39845a..L398488] goto L39848a;
  catch `java.lang.Throwable` @[L398490..L3984a2] goto L39848a;
}
