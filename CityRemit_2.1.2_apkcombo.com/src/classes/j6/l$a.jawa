record `j6.l$a` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `q6.i` `j6.l$a.a` @AccessFlag FINAL_SYNTHETIC;
  `j6.l` `j6.l$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`j6.l$a` v0 @kind this, `j6.l` v1 @kind object, `q6.i` v2 @kind object) @signature `Lj6/l$a;.<init>:(Lj6/l;Lq6/i;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L396d90.  v0.`j6.l$a.b` @type ^`j6.l` := v1 @kind object;
  #L396d94.  v0.`j6.l$a.a` @type ^`q6.i` := v2 @kind object;
  #L396d98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L396d9e.  return @kind void;
}
procedure `a5.l` `a`(`j6.l$a` v2 @kind this) @signature `Lj6/l$a;.a:()La5/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L396d50.  v0:= v2.`j6.l$a.b` @type ^`j6.l` @kind object;
  #L396d54.  v1:= v2.`j6.l$a.a` @type ^`q6.i` @kind object;
  #L396d58.  call temp:= `a`(v0, v1) @signature `Lj6/l;.a:(Lj6/l;Lq6/i;)La5/l;` @kind static;
  #L396d5e.  v0:= temp @kind object;
  #L396d60.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`j6.l$a` v1 @kind this) @signature `Lj6/l$a;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L396d74.  call temp:= `a`(v1) @signature `Lj6/l$a;.a:()La5/l;` @kind virtual;
  #L396d7a.  v0:= temp @kind object;
  #L396d7c.  return v0 @kind object;
}
