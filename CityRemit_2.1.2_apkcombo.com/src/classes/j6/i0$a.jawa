record `j6.i0$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.util.concurrent.Callable` `j6.i0$a.o` @AccessFlag FINAL_SYNTHETIC;
  `a5.m` `j6.i0$a.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`j6.i0$a` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object, `a5.m` v2 @kind object) @signature `Lj6/i0$a;.<init>:(Ljava/util/concurrent/Callable;La5/m;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L39a1cc.  v0.`j6.i0$a.o` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L39a1d0.  v0.`j6.i0$a.p` @type ^`a5.m` := v2 @kind object;
  #L39a1d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39a1da.  return @kind void;
}
procedure `void` `run`(`j6.i0$a` v2 @kind this) @signature `Lj6/i0$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a1ec.  v0:= v2.`j6.i0$a.o` @type ^`java.util.concurrent.Callable` @kind object;
  #L39a1f0.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L39a1f6.  v0:= temp @kind object;
  #L39a1f8.  v0:= (`a5.l`) v0 @kind object;
  #L39a1fc.  v1:= new `j6.i0$a$a`;
  #L39a200.  call `<init>`(v1, v2) @signature `Lj6/i0$a$a;.<init>:(Lj6/i0$a;)V` @kind direct;
  #L39a206.  call temp:= `h`(v0, v1) @signature `La5/l;.h:(La5/c;)La5/l;` @kind virtual;
  #L39a20c.  goto L39a21a;
  #L39a20e.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L39a210.  v1:= v2.`j6.i0$a.p` @type ^`a5.m` @kind object;
  #L39a214.  call `b`(v1, v0) @signature `La5/m;.b:(Ljava/lang/Exception;)V` @kind virtual;
  #L39a21a.  return @kind void;
  catch `java.lang.Exception` @[L39a1ec..L39a20c] goto L39a20e;
}
