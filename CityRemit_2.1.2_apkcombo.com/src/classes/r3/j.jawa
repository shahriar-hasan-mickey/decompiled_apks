record `r3.j` @kind class @AccessFlag PUBLIC_FINAL extends `r3.g` @kind class {
  `r3.p` `r3.j.e` @AccessFlag PRIVATE;
  `byte`[] `r3.j.f` @AccessFlag PRIVATE;
  `int` `r3.j.g` @AccessFlag PRIVATE;
  `int` `r3.j.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`r3.j` v1 @kind this) @signature `Lr3/j;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L435a6c.  v0:= 0I;
  #L435a6e.  call `<init>`(v1, v0) @signature `Lr3/g;.<init>:(Z)V` @kind direct;
  #L435a74.  return @kind void;
}
procedure `int` `b`(`r3.j` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lr3/j;.b:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43586c.  if v5 != 0 then goto L435874;
  #L435870.  v3:= 0I;
  #L435872.  return v3;
  #L435874.  v0:= v2.`r3.j.h` @type ^`int`;
  #L435878.  if v0 != 0 then goto L435880;
  #L43587c.  v3:= -1I;
  #L43587e.  return v3;
  #L435880.  call temp:= `min`(v5, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L435886.  v5:= temp;
  #L435888.  v0:= v2.`r3.j.f` @type ^`byte`[] @kind object;
  #L43588c.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L435892.  v0:= temp @kind object;
  #L435894.  v1:= v2.`r3.j.g` @type ^`int`;
  #L435898.  call `arraycopy`(v0, v1, v3, v4, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L43589e.  v3:= v2.`r3.j.g` @type ^`int`;
  #L4358a2.  v3:= v3 + v5 @kind int;
  #L4358a4.  v2.`r3.j.g` @type ^`int` := v3;
  #L4358a8.  v3:= v2.`r3.j.h` @type ^`int`;
  #L4358ac.  v3:= v3 - v5 @kind int;
  #L4358ae.  v2.`r3.j.h` @type ^`int` := v3;
  #L4358b2.  call `r`(v2, v5) @signature `Lr3/g;.r:(I)V` @kind virtual;
  #L4358b8.  return v5;
}
procedure `void` `close`(`r3.j` v2 @kind this) @signature `Lr3/j;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L435a88.  v0:= v2.`r3.j.f` @type ^`byte`[] @kind object;
  #L435a8c.  v1:= 0I;
  #L435a8e.  if v0 == 0 then goto L435a9c;
  #L435a92.  v2.`r3.j.f` @type ^`byte`[] := v1 @kind object;
  #L435a96.  call `s`(v2) @signature `Lr3/g;.s:()V` @kind virtual;
  #L435a9c.  v2.`r3.j.e` @type ^`r3.p` := v1 @kind object;
  #L435aa0.  return @kind void;
}
procedure `long` `e`(`r3.j` v7 @kind this, `r3.p` v8 @kind object) @signature `Lr3/j;.e:(Lr3/p;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4358cc.  call `t`(v7, v8) @signature `Lr3/g;.t:(Lr3/p;)V` @kind virtual;
  #L4358d2.  v7.`r3.j.e` @type ^`r3.p` := v8 @kind object;
  #L4358d6.  v0:= v8.`r3.p.a` @type ^`android.net.Uri` @kind object;
  #L4358da.  call temp:= `getScheme`(v0) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L4358e0.  v1:= temp @kind object;
  #L4358e2.  v2:= "data" @kind object;
  #L4358e6.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4358ec.  v2:= temp;
  #L4358ee.  v3:= new `java.lang.StringBuilder`;
  #L4358f2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4358f8.  v4:= "Unsupported scheme: " @kind object;
  #L4358fc.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L435902.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L435908.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L43590e.  v1:= temp @kind object;
  #L435910.  call `b`(v2, v1) @signature `Ls3/a;.b:(ZLjava/lang/Object;)V` @kind static;
  #L435916.  call temp:= `getSchemeSpecificPart`(v0) @signature `Landroid/net/Uri;.getSchemeSpecificPart:()Ljava/lang/String;` @kind virtual;
  #L43591c.  v1:= temp @kind object;
  #L43591e.  v2:= "," @kind object;
  #L435922.  call temp:= `P0`(v1, v2) @signature `Ls3/l0;.P0:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L435928.  v1:= temp @kind object;
  #L43592a.  v2:= length @variable v1;
  #L43592c.  v3:= 0I;
  #L43592e.  v4:= 2I;
  #L435930.  if v2 != v4 then goto L435a1e;
  #L435934.  v0:= 1I;
  #L435936.  v0:= v1[v0] @kind object;
  #L43593a.  v2:= 0I;
  #L43593c.  v1:= v1[v2] @kind object;
  #L435940.  v4:= ";base64" @kind object;
  #L435944.  call temp:= `contains`(v1, v4) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L43594a.  v1:= temp;
  #L43594c.  if v1 == 0 then goto L43598c;
  #L435950.  call temp:= `decode`(v0, v2) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L435956.  v1:= temp @kind object;
  #L435958.  v7.`r3.j.f` @type ^`byte`[] := v1 @kind object;
  #L43595c.  goto L4359ac;
  #L43595e.  v8:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L435960.  v1:= new `java.lang.StringBuilder`;
  #L435964.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L43596a.  v2:= "Error while parsing Base64 encoded string: " @kind object;
  #L43596e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L435974.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43597a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L435980.  v0:= temp @kind object;
  #L435982.  call temp:= `b`(v0, v8) @signature `Lv1/e2;.b:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L435988.  v8:= temp @kind object;
  #L43598a.  throw v8;
  #L43598c.  v1:= `@@l5.d.a` @type ^`java.nio.charset.Charset` @kind object;
  #L435990.  call temp:= `name`(v1) @signature `Ljava/nio/charset/Charset;.name:()Ljava/lang/String;` @kind virtual;
  #L435996.  v1:= temp @kind object;
  #L435998.  call temp:= `decode`(v0, v1) @signature `Ljava/net/URLDecoder;.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L43599e.  v0:= temp @kind object;
  #L4359a0.  call temp:= `l0`(v0) @signature `Ls3/l0;.l0:(Ljava/lang/String;)[B` @kind static;
  #L4359a6.  v0:= temp @kind object;
  #L4359a8.  v7.`r3.j.f` @type ^`byte`[] := v0 @kind object;
  #L4359ac.  v0:= v8.`r3.p.f` @type ^`long` @kind wide;
  #L4359b0.  v2:= v7.`r3.j.f` @type ^`byte`[] @kind object;
  #L4359b4.  v4:= length @variable v2;
  #L4359b6.  v4:= (`long`) v4 @kind i2l;
  #L4359b8.  v6:= lcmp(v0, v4);
  #L4359bc.  if v6 > 0 then goto L435a0a;
  #L4359c0.  v1:= (`int`) v0 @kind l2i;
  #L4359c2.  v7.`r3.j.g` @type ^`int` := v1;
  #L4359c6.  v0:= length @variable v2;
  #L4359c8.  v0:= v0 - v1 @kind int;
  #L4359ca.  v7.`r3.j.h` @type ^`int` := v0;
  #L4359ce.  v1:= v8.`r3.p.g` @type ^`long` @kind wide;
  #L4359d2.  v3:= -1L;
  #L4359d6.  v5:= lcmp(v1, v3);
  #L4359da.  if v5 == 0 then goto L4359ee;
  #L4359de.  v5:= (`long`) v0 @kind i2l;
  #L4359e0.  call temp:= `min`(v5, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L4359e6.  v0:= temp @kind wide;
  #L4359e8.  v1:= (`int`) v0 @kind l2i;
  #L4359ea.  v7.`r3.j.h` @type ^`int` := v1;
  #L4359ee.  call `u`(v7, v8) @signature `Lr3/g;.u:(Lr3/p;)V` @kind virtual;
  #L4359f4.  v0:= v8.`r3.p.g` @type ^`long` @kind wide;
  #L4359f8.  v8:= lcmp(v0, v3);
  #L4359fc.  if v8 == 0 then goto L435a02;
  #L435a00.  goto L435a08;
  #L435a02.  v8:= v7.`r3.j.h` @type ^`int`;
  #L435a06.  v0:= (`long`) v8 @kind i2l;
  #L435a08.  return v0 @kind wide;
  #L435a0a.  v7.`r3.j.f` @type ^`byte`[] := v3 @kind object;
  #L435a0e.  v8:= new `r3.m`;
  #L435a12.  v0:= 2008I;
  #L435a16.  call `<init>`(v8, v0) @signature `Lr3/m;.<init>:(I)V` @kind direct;
  #L435a1c.  throw v8;
  #L435a1e.  v8:= new `java.lang.StringBuilder`;
  #L435a22.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L435a28.  v1:= "Unexpected URI format: " @kind object;
  #L435a2c.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L435a32.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L435a38.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L435a3e.  v8:= temp @kind object;
  #L435a40.  call temp:= `b`(v8, v3) @signature `Lv1/e2;.b:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L435a46.  v8:= temp @kind object;
  #L435a48.  throw v8;
  catch `java.lang.IllegalArgumentException` @[L435950..L43595c] goto L43595e;
}
procedure `android.net.Uri` `l`(`r3.j` v1 @kind this) @signature `Lr3/j;.l:()Landroid/net/Uri;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L435848.  v0:= v1.`r3.j.e` @type ^`r3.p` @kind object;
  #L43584c.  if v0 == 0 then goto L435856;
  #L435850.  v0:= v0.`r3.p.a` @type ^`android.net.Uri` @kind object;
  #L435854.  goto L435858;
  #L435856.  v0:= 0I;
  #L435858.  return v0 @kind object;
}
