record `r3.l0` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.Comparator` @kind interface {
}
global `r3.l0` `@@r3.l0.o` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lr3/l0;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L43dc24.  v0:= new `r3.l0`;
  #L43dc28.  call `<init>`(v0) @signature `Lr3/l0;.<init>:()V` @kind direct;
  #L43dc2e.  `@@r3.l0.o` @type ^`r3.l0` := v0 @kind object;
  #L43dc32.  return @kind void;
}
procedure `void` `<init>`(`r3.l0` v0 @kind this) @signature `Lr3/l0;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L43dc44.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43dc4a.  return @kind void;
}
procedure `int` `compare`(`r3.l0` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lr3/l0;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L43dc00.  v1:= (`r3.n0$b`) v1 @kind object;
  #L43dc04.  v2:= (`r3.n0$b`) v2 @kind object;
  #L43dc08.  call temp:= `a`(v1, v2) @signature `Lr3/n0;.a:(Lr3/n0$b;Lr3/n0$b;)I` @kind static;
  #L43dc0e.  v1:= temp;
  #L43dc10.  return v1;
}
