record `r3.g0$a` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `r3.g0$a.a` @AccessFlag PUBLIC_FINAL;
  `int` `r3.g0$a.b` @AccessFlag PUBLIC_FINAL;
  `int` `r3.g0$a.c` @AccessFlag PUBLIC_FINAL;
  `int` `r3.g0$a.d` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`r3.g0$a` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lr3/g0$a;.<init>:(IIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43cae8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43caee.  v0.`r3.g0$a.a` @type ^`int` := v1;
  #L43caf2.  v0.`r3.g0$a.b` @type ^`int` := v2;
  #L43caf6.  v0.`r3.g0$a.c` @type ^`int` := v3;
  #L43cafa.  v0.`r3.g0$a.d` @type ^`int` := v4;
  #L43cafe.  return @kind void;
}
procedure `boolean` `a`(`r3.g0$a` v3 @kind this, `int` v4 ) @signature `Lr3/g0$a;.a:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L43caac.  v0:= 0I;
  #L43caae.  v1:= 1I;
  #L43cab0.  if v4 != v1 then goto L43cac4;
  #L43cab4.  v4:= v3.`r3.g0$a.a` @type ^`int`;
  #L43cab8.  v2:= v3.`r3.g0$a.b` @type ^`int`;
  #L43cabc.  v4:= v4 - v2 @kind int;
  #L43cabe.  if v4 <= v1 then goto L43cad4;
  #L43cac2.  goto L43cad2;
  #L43cac4.  v4:= v3.`r3.g0$a.c` @type ^`int`;
  #L43cac8.  v2:= v3.`r3.g0$a.d` @type ^`int`;
  #L43cacc.  v4:= v4 - v2 @kind int;
  #L43cace.  if v4 <= v1 then goto L43cad4;
  #L43cad2.  v0:= 1I;
  #L43cad4.  return v0;
}
