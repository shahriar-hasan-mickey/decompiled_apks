record `r3.q0` @kind class @AccessFlag PUBLIC_FINAL extends `r3.g` @kind class {
  `int` `r3.q0.e` @AccessFlag PRIVATE_FINAL;
  `byte`[] `r3.q0.f` @AccessFlag PRIVATE_FINAL;
  `java.net.DatagramPacket` `r3.q0.g` @AccessFlag PRIVATE_FINAL;
  `android.net.Uri` `r3.q0.h` @AccessFlag PRIVATE;
  `java.net.DatagramSocket` `r3.q0.i` @AccessFlag PRIVATE;
  `java.net.MulticastSocket` `r3.q0.j` @AccessFlag PRIVATE;
  `java.net.InetAddress` `r3.q0.k` @AccessFlag PRIVATE;
  `boolean` `r3.q0.l` @AccessFlag PRIVATE;
  `int` `r3.q0.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`r3.q0` v1 @kind this) @signature `Lr3/q0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L43e330.  v0:= 2000I;
  #L43e334.  call `<init>`(v1, v0) @signature `Lr3/q0;.<init>:(I)V` @kind direct;
  #L43e33a.  return @kind void;
}
procedure `void` `<init>`(`r3.q0` v1 @kind this, `int` v2 ) @signature `Lr3/q0;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L43e34c.  v0:= 8000I;
  #L43e350.  call `<init>`(v1, v2, v0) @signature `Lr3/q0;.<init>:(II)V` @kind direct;
  #L43e356.  return @kind void;
}
procedure `void` `<init>`(`r3.q0` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lr3/q0;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L43e368.  v0:= 1I;
  #L43e36a.  call `<init>`(v2, v0) @signature `Lr3/g;.<init>:(Z)V` @kind direct;
  #L43e370.  v2.`r3.q0.e` @type ^`int` := v4;
  #L43e374.  v4:= new `byte`[v3];
  #L43e378.  v2.`r3.q0.f` @type ^`byte`[] := v4 @kind object;
  #L43e37c.  v0:= new `java.net.DatagramPacket`;
  #L43e380.  v1:= 0I;
  #L43e382.  call `<init>`(v0, v4, v1, v3) @signature `Ljava/net/DatagramPacket;.<init>:([BII)V` @kind direct;
  #L43e388.  v2.`r3.q0.g` @type ^`java.net.DatagramPacket` := v0 @kind object;
  #L43e38c.  return @kind void;
}
procedure `int` `b`(`r3.q0` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lr3/q0;.b:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43e18c.  if v5 != 0 then goto L43e194;
  #L43e190.  v3:= 0I;
  #L43e192.  return v3;
  #L43e194.  v0:= v2.`r3.q0.m` @type ^`int`;
  #L43e198.  if v0 != 0 then goto L43e1f2;
  #L43e19c.  v0:= v2.`r3.q0.i` @type ^`java.net.DatagramSocket` @kind object;
  #L43e1a0.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L43e1a6.  v0:= temp @kind object;
  #L43e1a8.  v0:= (`java.net.DatagramSocket`) v0 @kind object;
  #L43e1ac.  v1:= v2.`r3.q0.g` @type ^`java.net.DatagramPacket` @kind object;
  #L43e1b0.  call `receive`(v0, v1) @signature `Ljava/net/DatagramSocket;.receive:(Ljava/net/DatagramPacket;)V` @kind virtual;
  #L43e1b6.  v0:= v2.`r3.q0.g` @type ^`java.net.DatagramPacket` @kind object;
  #L43e1ba.  call temp:= `getLength`(v0) @signature `Ljava/net/DatagramPacket;.getLength:()I` @kind virtual;
  #L43e1c0.  v0:= temp;
  #L43e1c2.  v2.`r3.q0.m` @type ^`int` := v0;
  #L43e1c6.  call `r`(v2, v0) @signature `Lr3/g;.r:(I)V` @kind virtual;
  #L43e1cc.  goto L43e1f2;
  #L43e1ce.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L43e1d0.  v4:= new `r3.q0$a`;
  #L43e1d4.  v5:= 2001I;
  #L43e1d8.  call `<init>`(v4, v3, v5) @signature `Lr3/q0$a;.<init>:(Ljava/lang/Throwable;I)V` @kind direct;
  #L43e1de.  throw v4;
  #L43e1e0.  v3:= Exception @type ^`java.net.SocketTimeoutException` @kind object;
  #L43e1e2.  v4:= new `r3.q0$a`;
  #L43e1e6.  v5:= 2002I;
  #L43e1ea.  call `<init>`(v4, v3, v5) @signature `Lr3/q0$a;.<init>:(Ljava/lang/Throwable;I)V` @kind direct;
  #L43e1f0.  throw v4;
  #L43e1f2.  v0:= v2.`r3.q0.g` @type ^`java.net.DatagramPacket` @kind object;
  #L43e1f6.  call temp:= `getLength`(v0) @signature `Ljava/net/DatagramPacket;.getLength:()I` @kind virtual;
  #L43e1fc.  v0:= temp;
  #L43e1fe.  v1:= v2.`r3.q0.m` @type ^`int`;
  #L43e202.  v0:= v0 - v1 @kind int;
  #L43e204.  call temp:= `min`(v1, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L43e20a.  v5:= temp;
  #L43e20c.  v1:= v2.`r3.q0.f` @type ^`byte`[] @kind object;
  #L43e210.  call `arraycopy`(v1, v0, v3, v4, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L43e216.  v3:= v2.`r3.q0.m` @type ^`int`;
  #L43e21a.  v3:= v3 - v5 @kind int;
  #L43e21c.  v2.`r3.q0.m` @type ^`int` := v3;
  #L43e220.  return v5;
  catch `java.net.SocketTimeoutException` @[L43e19c..L43e1b6] goto L43e1e0;
  catch `java.io.IOException` @[L43e19c..L43e1b6] goto L43e1ce;
}
procedure `void` `close`(`r3.q0` v3 @kind this) @signature `Lr3/q0;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L43e3a0.  v0:= 0I;
  #L43e3a2.  v3.`r3.q0.h` @type ^`android.net.Uri` := v0 @kind object;
  #L43e3a6.  v1:= v3.`r3.q0.j` @type ^`java.net.MulticastSocket` @kind object;
  #L43e3aa.  if v1 == 0 then goto L43e3c8;
  #L43e3ae.  v2:= v3.`r3.q0.k` @type ^`java.net.InetAddress` @kind object;
  #L43e3b2.  call temp:= `e`(v2) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L43e3b8.  v2:= temp @kind object;
  #L43e3ba.  v2:= (`java.net.InetAddress`) v2 @kind object;
  #L43e3be.  call `leaveGroup`(v1, v2) @signature `Ljava/net/MulticastSocket;.leaveGroup:(Ljava/net/InetAddress;)V` @kind virtual;
  #L43e3c4.  v3.`r3.q0.j` @type ^`java.net.MulticastSocket` := v0 @kind object;
  #L43e3c8.  v1:= v3.`r3.q0.i` @type ^`java.net.DatagramSocket` @kind object;
  #L43e3cc.  if v1 == 0 then goto L43e3da;
  #L43e3d0.  call `close`(v1) @signature `Ljava/net/DatagramSocket;.close:()V` @kind virtual;
  #L43e3d6.  v3.`r3.q0.i` @type ^`java.net.DatagramSocket` := v0 @kind object;
  #L43e3da.  v3.`r3.q0.k` @type ^`java.net.InetAddress` := v0 @kind object;
  #L43e3de.  v0:= 0I;
  #L43e3e0.  v3.`r3.q0.m` @type ^`int` := v0;
  #L43e3e4.  v1:= v3.`r3.q0.l` @type ^`boolean` @kind boolean;
  #L43e3e8.  if v1 == 0 then goto L43e3f6;
  #L43e3ec.  v3.`r3.q0.l` @type ^`boolean` := v0 @kind boolean;
  #L43e3f0.  call `s`(v3) @signature `Lr3/g;.s:()V` @kind virtual;
  #L43e3f6.  return @kind void;
  catch `java.io.IOException` @[L43e3ae..L43e3c4] goto L43e3c4;
}
procedure `long` `e`(`r3.q0` v3 @kind this, `r3.p` v4 @kind object) @signature `Lr3/q0;.e:(Lr3/p;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L43e244.  v0:= v4.`r3.p.a` @type ^`android.net.Uri` @kind object;
  #L43e248.  v3.`r3.q0.h` @type ^`android.net.Uri` := v0 @kind object;
  #L43e24c.  call temp:= `getHost`(v0) @signature `Landroid/net/Uri;.getHost:()Ljava/lang/String;` @kind virtual;
  #L43e252.  v0:= temp @kind object;
  #L43e254.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L43e25a.  v0:= temp @kind object;
  #L43e25c.  v0:= (`java.lang.String`) v0 @kind object;
  #L43e260.  v1:= v3.`r3.q0.h` @type ^`android.net.Uri` @kind object;
  #L43e264.  call temp:= `getPort`(v1) @signature `Landroid/net/Uri;.getPort:()I` @kind virtual;
  #L43e26a.  v1:= temp;
  #L43e26c.  call `t`(v3, v4) @signature `Lr3/g;.t:(Lr3/p;)V` @kind virtual;
  #L43e272.  call temp:= `getByName`(v0) @signature `Ljava/net/InetAddress;.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;` @kind static;
  #L43e278.  v0:= temp @kind object;
  #L43e27a.  v3.`r3.q0.k` @type ^`java.net.InetAddress` := v0 @kind object;
  #L43e27e.  v0:= new `java.net.InetSocketAddress`;
  #L43e282.  v2:= v3.`r3.q0.k` @type ^`java.net.InetAddress` @kind object;
  #L43e286.  call `<init>`(v0, v2, v1) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L43e28c.  v1:= v3.`r3.q0.k` @type ^`java.net.InetAddress` @kind object;
  #L43e290.  call temp:= `isMulticastAddress`(v1) @signature `Ljava/net/InetAddress;.isMulticastAddress:()Z` @kind virtual;
  #L43e296.  v1:= temp;
  #L43e298.  if v1 == 0 then goto L43e2be;
  #L43e29c.  v1:= new `java.net.MulticastSocket`;
  #L43e2a0.  call `<init>`(v1, v0) @signature `Ljava/net/MulticastSocket;.<init>:(Ljava/net/SocketAddress;)V` @kind direct;
  #L43e2a6.  v3.`r3.q0.j` @type ^`java.net.MulticastSocket` := v1 @kind object;
  #L43e2aa.  v0:= v3.`r3.q0.k` @type ^`java.net.InetAddress` @kind object;
  #L43e2ae.  call `joinGroup`(v1, v0) @signature `Ljava/net/MulticastSocket;.joinGroup:(Ljava/net/InetAddress;)V` @kind virtual;
  #L43e2b4.  v0:= v3.`r3.q0.j` @type ^`java.net.MulticastSocket` @kind object;
  #L43e2b8.  v3.`r3.q0.i` @type ^`java.net.DatagramSocket` := v0 @kind object;
  #L43e2bc.  goto L43e2cc;
  #L43e2be.  v1:= new `java.net.DatagramSocket`;
  #L43e2c2.  call `<init>`(v1, v0) @signature `Ljava/net/DatagramSocket;.<init>:(Ljava/net/SocketAddress;)V` @kind direct;
  #L43e2c8.  v3.`r3.q0.i` @type ^`java.net.DatagramSocket` := v1 @kind object;
  #L43e2cc.  v0:= v3.`r3.q0.i` @type ^`java.net.DatagramSocket` @kind object;
  #L43e2d0.  v1:= v3.`r3.q0.e` @type ^`int`;
  #L43e2d4.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/DatagramSocket;.setSoTimeout:(I)V` @kind virtual;
  #L43e2da.  v0:= 1I;
  #L43e2dc.  v3.`r3.q0.l` @type ^`boolean` := v0 @kind boolean;
  #L43e2e0.  call `u`(v3, v4) @signature `Lr3/g;.u:(Lr3/p;)V` @kind virtual;
  #L43e2e6.  v0:= -1L;
  #L43e2ea.  return v0 @kind wide;
  #L43e2ec.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L43e2ee.  v0:= new `r3.q0$a`;
  #L43e2f2.  v1:= 2001I;
  #L43e2f6.  call `<init>`(v0, v4, v1) @signature `Lr3/q0$a;.<init>:(Ljava/lang/Throwable;I)V` @kind direct;
  #L43e2fc.  throw v0;
  #L43e2fe.  v4:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L43e300.  v0:= new `r3.q0$a`;
  #L43e304.  v1:= 2006I;
  #L43e308.  call `<init>`(v0, v4, v1) @signature `Lr3/q0$a;.<init>:(Ljava/lang/Throwable;I)V` @kind direct;
  #L43e30e.  throw v0;
  catch `java.lang.SecurityException` @[L43e272..L43e2da] goto L43e2fe;
  catch `java.io.IOException` @[L43e272..L43e2da] goto L43e2ec;
}
procedure `android.net.Uri` `l`(`r3.q0` v1 @kind this) @signature `Lr3/q0;.l:()Landroid/net/Uri;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43e174.  v0:= v1.`r3.q0.h` @type ^`android.net.Uri` @kind object;
  #L43e178.  return v0 @kind object;
}
