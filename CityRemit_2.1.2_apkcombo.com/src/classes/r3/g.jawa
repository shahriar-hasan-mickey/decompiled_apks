record `r3.g` @kind class @AccessFlag PUBLIC_ABSTRACT extends `r3.l` @kind interface {
  `boolean` `r3.g.a` @AccessFlag PRIVATE_FINAL;
  `java.util.ArrayList` `r3.g.b` @AccessFlag PRIVATE_FINAL;
  `int` `r3.g.c` @AccessFlag PRIVATE;
  `r3.p` `r3.g.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`r3.g` v1 @kind this, `boolean` v2 ) @signature `Lr3/g;.<init>:(Z)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L435278.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43527e.  v1.`r3.g.a` @type ^`boolean` := v2 @kind boolean;
  #L435282.  v2:= new `java.util.ArrayList`;
  #L435286.  v0:= 1I;
  #L435288.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L43528e.  v1.`r3.g.b` @type ^`java.util.ArrayList` := v2 @kind object;
  #L435292.  return @kind void;
}
procedure `void` `c`(`r3.g` v1 @kind this, `r3.p0` v2 @kind object) @signature `Lr3/g;.c:(Lr3/p0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4352a4.  call temp:= `e`(v2) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4352aa.  v0:= v1.`r3.g.b` @type ^`java.util.ArrayList` @kind object;
  #L4352ae.  call temp:= `contains`(v0, v2) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L4352b4.  v0:= temp;
  #L4352b6.  if v0 != 0 then goto L4352d0;
  #L4352ba.  v0:= v1.`r3.g.b` @type ^`java.util.ArrayList` @kind object;
  #L4352be.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4352c4.  v2:= v1.`r3.g.c` @type ^`int`;
  #L4352c8.  v2:= v2 + 1;
  #L4352cc.  v1.`r3.g.c` @type ^`int` := v2;
  #L4352d0.  return @kind void;
}
procedure `java.util.Map` `h`(`r3.g` v1 @kind this) @signature `Lr3/g;.h:()Ljava/util/Map;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L43525c.  call temp:= `a`(v1) @signature `Lr3/k;.a:(Lr3/l;)Ljava/util/Map;` @kind static;
  #L435262.  v0:= temp @kind object;
  #L435264.  return v0 @kind object;
}
procedure `void` `r`(`r3.g` v4 @kind this, `int` v5 ) @signature `Lr3/g;.r:(I)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4352e4.  v0:= v4.`r3.g.d` @type ^`r3.p` @kind object;
  #L4352e8.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4352ee.  v0:= temp @kind object;
  #L4352f0.  v0:= (`r3.p`) v0 @kind object;
  #L4352f4.  v1:= 0I;
  #L4352f6.  v2:= v4.`r3.g.c` @type ^`int`;
  #L4352fa.  if v1 >= v2 then goto L43531e;
  #L4352fe.  v2:= v4.`r3.g.b` @type ^`java.util.ArrayList` @kind object;
  #L435302.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L435308.  v2:= temp @kind object;
  #L43530a.  v2:= (`r3.p0`) v2 @kind object;
  #L43530e.  v3:= v4.`r3.g.a` @type ^`boolean` @kind boolean;
  #L435312.  call `d`(v2, v4, v0, v3, v5) @signature `Lr3/p0;.d:(Lr3/l;Lr3/p;ZI)V` @kind interface;
  #L435318.  v1:= v1 + 1;
  #L43531c.  goto L4352f6;
  #L43531e.  return @kind void;
}
procedure `void` `s`(`r3.g` v4 @kind this) @signature `Lr3/g;.s:()V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L435330.  v0:= v4.`r3.g.d` @type ^`r3.p` @kind object;
  #L435334.  call temp:= `j`(v0) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L43533a.  v0:= temp @kind object;
  #L43533c.  v0:= (`r3.p`) v0 @kind object;
  #L435340.  v1:= 0I;
  #L435342.  v2:= v4.`r3.g.c` @type ^`int`;
  #L435346.  if v1 >= v2 then goto L43536a;
  #L43534a.  v2:= v4.`r3.g.b` @type ^`java.util.ArrayList` @kind object;
  #L43534e.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L435354.  v2:= temp @kind object;
  #L435356.  v2:= (`r3.p0`) v2 @kind object;
  #L43535a.  v3:= v4.`r3.g.a` @type ^`boolean` @kind boolean;
  #L43535e.  call `c`(v2, v4, v0, v3) @signature `Lr3/p0;.c:(Lr3/l;Lr3/p;Z)V` @kind interface;
  #L435364.  v1:= v1 + 1;
  #L435368.  goto L435342;
  #L43536a.  v0:= 0I;
  #L43536c.  v4.`r3.g.d` @type ^`r3.p` := v0 @kind object;
  #L435370.  return @kind void;
}
procedure `void` `t`(`r3.g` v3 @kind this, `r3.p` v4 @kind object) @signature `Lr3/g;.t:(Lr3/p;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L435384.  v0:= 0I;
  #L435386.  v1:= v3.`r3.g.c` @type ^`int`;
  #L43538a.  if v0 >= v1 then goto L4353ae;
  #L43538e.  v1:= v3.`r3.g.b` @type ^`java.util.ArrayList` @kind object;
  #L435392.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L435398.  v1:= temp @kind object;
  #L43539a.  v1:= (`r3.p0`) v1 @kind object;
  #L43539e.  v2:= v3.`r3.g.a` @type ^`boolean` @kind boolean;
  #L4353a2.  call `e`(v1, v3, v4, v2) @signature `Lr3/p0;.e:(Lr3/l;Lr3/p;Z)V` @kind interface;
  #L4353a8.  v0:= v0 + 1;
  #L4353ac.  goto L435386;
  #L4353ae.  return @kind void;
}
procedure `void` `u`(`r3.g` v3 @kind this, `r3.p` v4 @kind object) @signature `Lr3/g;.u:(Lr3/p;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4353c0.  v3.`r3.g.d` @type ^`r3.p` := v4 @kind object;
  #L4353c4.  v0:= 0I;
  #L4353c6.  v1:= v3.`r3.g.c` @type ^`int`;
  #L4353ca.  if v0 >= v1 then goto L4353ee;
  #L4353ce.  v1:= v3.`r3.g.b` @type ^`java.util.ArrayList` @kind object;
  #L4353d2.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4353d8.  v1:= temp @kind object;
  #L4353da.  v1:= (`r3.p0`) v1 @kind object;
  #L4353de.  v2:= v3.`r3.g.a` @type ^`boolean` @kind boolean;
  #L4353e2.  call `g`(v1, v3, v4, v2) @signature `Lr3/p0;.g:(Lr3/l;Lr3/p;Z)V` @kind interface;
  #L4353e8.  v0:= v0 + 1;
  #L4353ec.  goto L4353c6;
  #L4353ee.  return @kind void;
}
