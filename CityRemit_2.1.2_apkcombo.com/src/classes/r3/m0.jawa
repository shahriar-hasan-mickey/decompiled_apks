record `r3.m0` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.Comparator` @kind interface {
}
global `r3.m0` `@@r3.m0.o` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lr3/m0;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L43dc80.  v0:= new `r3.m0`;
  #L43dc84.  call `<init>`(v0) @signature `Lr3/m0;.<init>:()V` @kind direct;
  #L43dc8a.  `@@r3.m0.o` @type ^`r3.m0` := v0 @kind object;
  #L43dc8e.  return @kind void;
}
procedure `void` `<init>`(`r3.m0` v0 @kind this) @signature `Lr3/m0;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L43dca0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43dca6.  return @kind void;
}
procedure `int` `compare`(`r3.m0` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lr3/m0;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L43dc5c.  v1:= (`r3.n0$b`) v1 @kind object;
  #L43dc60.  v2:= (`r3.n0$b`) v2 @kind object;
  #L43dc64.  call temp:= `b`(v1, v2) @signature `Lr3/n0;.b:(Lr3/n0$b;Lr3/n0$b;)I` @kind static;
  #L43dc6a.  v1:= temp;
  #L43dc6c.  return v1;
}
