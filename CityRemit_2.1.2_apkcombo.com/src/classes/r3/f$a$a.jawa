record `r3.f$a$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.CopyOnWriteArrayList` `r3.f$a$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`r3.f$a$a` v1 @kind this) @signature `Lr3/f$a$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L435118.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43511e.  v0:= new `java.util.concurrent.CopyOnWriteArrayList`;
  #L435122.  call `<init>`(v0) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:()V` @kind direct;
  #L435128.  v1.`r3.f$a$a.a` @type ^`java.util.concurrent.CopyOnWriteArrayList` := v0 @kind object;
  #L43512c.  return @kind void;
}
procedure `void` `a`(`r3.f$a$a$a` v0 @kind object, `int` v1 , `long` v2 , `long` v4 ) @signature `Lr3/f$a$a;.a:(Lr3/f$a$a$a;IJJ)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L435100.  call `d`(v0, v1, v2, v4) @signature `Lr3/f$a$a;.d:(Lr3/f$a$a$a;IJJ)V` @kind static;
  #L435106.  return @kind void;
}
procedure `void` `d`(`r3.f$a$a$a` v6 @kind object, `int` v7 , `long` v8 , `long` v10 ) @signature `Lr3/f$a$a;.d:(Lr3/f$a$a$a;IJJ)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4351e0.  call temp:= `a`(v6) @signature `Lr3/f$a$a$a;.a:(Lr3/f$a$a$a;)Lr3/f$a;` @kind static;
  #L4351e6.  v0:= temp @kind object;
  #L4351e8.  v1:= v7;
  #L4351ea.  v2:= v8 @kind wide;
  #L4351ec.  v4:= v10 @kind wide;
  #L4351ee.  call `a0`(v0, v1, v2, v4) @signature `Lr3/f$a;.a0:(IJJ)V` @kind interface;
  #L4351f4.  return @kind void;
}
procedure `void` `b`(`r3.f$a$a` v2 @kind this, `android.os.Handler` v3 @kind object, `r3.f$a` v4 @kind object) @signature `Lr3/f$a$a;.b:(Landroid/os/Handler;Lr3/f$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L435140.  call temp:= `e`(v3) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L435146.  call temp:= `e`(v4) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L43514c.  call `e`(v2, v4) @signature `Lr3/f$a$a;.e:(Lr3/f$a;)V` @kind virtual;
  #L435152.  v0:= v2.`r3.f$a$a.a` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L435156.  v1:= new `r3.f$a$a$a`;
  #L43515a.  call `<init>`(v1, v3, v4) @signature `Lr3/f$a$a$a;.<init>:(Landroid/os/Handler;Lr3/f$a;)V` @kind direct;
  #L435160.  call temp:= `add`(v0, v1) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L435166.  return @kind void;
}
procedure `void` `c`(`r3.f$a$a` v10 @kind this, `int` v11 , `long` v12 , `long` v14 ) @signature `Lr3/f$a$a;.c:(IJJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L435178.  v0:= v10.`r3.f$a$a.a` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L43517c.  call temp:= `iterator`(v0) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L435182.  v0:= temp @kind object;
  #L435184.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L43518a.  v1:= temp;
  #L43518c.  if v1 == 0 then goto L4351cc;
  #L435190.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L435196.  v1:= temp @kind object;
  #L435198.  v3:= v1 @kind object;
  #L43519a.  v3:= (`r3.f$a$a$a`) v3 @kind object;
  #L43519e.  call temp:= `b`(v3) @signature `Lr3/f$a$a$a;.b:(Lr3/f$a$a$a;)Z` @kind static;
  #L4351a4.  v1:= temp;
  #L4351a6.  if v1 != 0 then goto L435184;
  #L4351aa.  call temp:= `c`(v3) @signature `Lr3/f$a$a$a;.c:(Lr3/f$a$a$a;)Landroid/os/Handler;` @kind static;
  #L4351b0.  v1:= temp @kind object;
  #L4351b2.  v9:= new `r3.e`;
  #L4351b6.  v2:= v9 @kind object;
  #L4351b8.  v4:= v11;
  #L4351ba.  v5:= v12 @kind wide;
  #L4351bc.  v7:= v14 @kind wide;
  #L4351be.  call `<init>`(v2, v3, v4, v5, v7) @signature `Lr3/e;.<init>:(Lr3/f$a$a$a;IJJ)V` @kind direct;
  #L4351c4.  call temp:= `post`(v1, v9) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L4351ca.  goto L435184;
  #L4351cc.  return @kind void;
}
procedure `void` `e`(`r3.f$a$a` v3 @kind this, `r3.f$a` v4 @kind object) @signature `Lr3/f$a$a;.e:(Lr3/f$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L435208.  v0:= v3.`r3.f$a$a.a` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L43520c.  call temp:= `iterator`(v0) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L435212.  v0:= temp @kind object;
  #L435214.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L43521a.  v1:= temp;
  #L43521c.  if v1 == 0 then goto L43524a;
  #L435220.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L435226.  v1:= temp @kind object;
  #L435228.  v1:= (`r3.f$a$a$a`) v1 @kind object;
  #L43522c.  call temp:= `a`(v1) @signature `Lr3/f$a$a$a;.a:(Lr3/f$a$a$a;)Lr3/f$a;` @kind static;
  #L435232.  v2:= temp @kind object;
  #L435234.  if v2 != v4 then goto L435214;
  #L435238.  call `d`(v1) @signature `Lr3/f$a$a$a;.d:()V` @kind virtual;
  #L43523e.  v2:= v3.`r3.f$a$a.a` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L435242.  call temp:= `remove`(v2, v1) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L435248.  goto L435214;
  #L43524a.  return @kind void;
}
