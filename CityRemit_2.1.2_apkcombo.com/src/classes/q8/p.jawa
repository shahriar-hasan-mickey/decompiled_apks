record `q8.p` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `java.lang.ref.ReferenceQueue` `q8.p.o` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.util.Set` `q8.p.p` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`q8.p` v0 @kind this, `java.lang.ref.ReferenceQueue` v1 @kind object, `java.util.Set` v2 @kind object) @signature `Lq8/p;.<init>:(Ljava/lang/ref/ReferenceQueue;Ljava/util/Set;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L427f10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L427f16.  v0.`q8.p.o` @type ^`java.lang.ref.ReferenceQueue` := v1 @kind object;
  #L427f1a.  v0.`q8.p.p` @type ^`java.util.Set` := v2 @kind object;
  #L427f1e.  return @kind void;
}
procedure `void` `run`(`q8.p` v3 @kind this) @signature `Lq8/p;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L427f30.  v0:= v3.`q8.p.o` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L427f34.  v1:= v3.`q8.p.p` @type ^`java.util.Set` @kind object;
  #L427f38.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L427f3e.  v2:= temp;
  #L427f40.  if v2 != 0 then goto L427f5c;
  #L427f44.  call temp:= `remove`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.remove:()Ljava/lang/ref/Reference;` @kind virtual;
  #L427f4a.  v2:= temp @kind object;
  #L427f4c.  v2:= (`q8.s`) v2 @kind object;
  #L427f50.  call `a`(v2) @signature `Lq8/a$a;.a:()V` @kind interface;
  #L427f56.  goto L427f38;
  #L427f58.  
  #L427f5a.  goto L427f38;
  #L427f5c.  return @kind void;
  catch `java.lang.InterruptedException` @[L427f44..L427f56] goto L427f58;
}
