record `q8.k` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `q8.o` `q8.k.a` @AccessFlag PROTECTED_FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `q8.k.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `q8.k.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`q8.k` v2 @kind this, `q8.o` v3 @kind object) @signature `Lq8/k;.<init>:(Lq8/o;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L427954.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42795a.  v0:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L42795e.  v1:= 0I;
  #L427960.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L427966.  v2.`q8.k.b` @type ^`java.util.concurrent.atomic.AtomicInteger` := v0 @kind object;
  #L42796a.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L42796e.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L427974.  v2.`q8.k.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L427978.  v2.`q8.k.a` @type ^`q8.o` := v3 @kind object;
  #L42797c.  return @kind void;
}
procedure `a5.l` `a`(`q8.k` v9 @kind this, `java.util.concurrent.Executor` v10 @kind object, `java.util.concurrent.Callable` v11 @kind object, `a5.a` v12 @kind object) @signature `Lq8/k;.a:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Callable;La5/a;)La5/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L427870.  v0:= v9.`q8.k.b` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L427874.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L42787a.  v0:= temp;
  #L42787c.  if v0 <= 0 then goto L427884;
  #L427880.  v0:= 1I;
  #L427882.  goto L427886;
  #L427884.  v0:= 0I;
  #L427886.  call `m`(v0) @signature `Lcom/google/android/gms/common/internal/h;.m:(Z)V` @kind static;
  #L42788c.  call temp:= `a`(v12) @signature `La5/a;.a:()Z` @kind virtual;
  #L427892.  v0:= temp;
  #L427894.  if v0 == 0 then goto L4278a2;
  #L427898.  call temp:= `d`() @signature `La5/o;.d:()La5/l;` @kind static;
  #L42789e.  v10:= temp @kind object;
  #L4278a0.  return v10 @kind object;
  #L4278a2.  v3:= new `a5.b`;
  #L4278a6.  call `<init>`(v3) @signature `La5/b;.<init>:()V` @kind direct;
  #L4278ac.  v6:= new `a5.m`;
  #L4278b0.  call temp:= `b`(v3) @signature `La5/b;.b:()La5/a;` @kind virtual;
  #L4278b6.  v0:= temp @kind object;
  #L4278b8.  call `<init>`(v6, v0) @signature `La5/m;.<init>:(La5/a;)V` @kind direct;
  #L4278be.  v7:= new `q8.a0`;
  #L4278c2.  call `<init>`(v7, v10, v12, v3, v6) @signature `Lq8/a0;.<init>:(Ljava/util/concurrent/Executor;La5/a;La5/b;La5/m;)V` @kind direct;
  #L4278c8.  v10:= v9.`q8.k.a` @type ^`q8.o` @kind object;
  #L4278cc.  v8:= new `q8.y`;
  #L4278d0.  v0:= v8 @kind object;
  #L4278d2.  v1:= v9 @kind object;
  #L4278d4.  v2:= v12 @kind object;
  #L4278d6.  v4:= v11 @kind object;
  #L4278d8.  v5:= v6 @kind object;
  #L4278da.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lq8/y;.<init>:(Lq8/k;La5/a;La5/b;Ljava/util/concurrent/Callable;La5/m;)V` @kind direct;
  #L4278e0.  call `a`(v10, v7, v8) @signature `Lq8/o;.a:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V` @kind virtual;
  #L4278e6.  call temp:= `a`(v6) @signature `La5/m;.a:()La5/l;` @kind virtual;
  #L4278ec.  v10:= temp @kind object;
  #L4278ee.  return v10 @kind object;
}
procedure `void` `b`() @signature `Lq8/k;.b:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `c`(`q8.k` v1 @kind this) @signature `Lq8/k;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L427990.  v0:= v1.`q8.k.b` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L427994.  call temp:= `incrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.incrementAndGet:()I` @kind virtual;
  #L42799a.  return @kind void;
}
procedure `void` `d`() @signature `Lq8/k;.d:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `e`(`q8.k` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object) @signature `Lq8/k;.e:(Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {
    temp;

  #L4279ac.  call temp:= `f`(v0, v1) @signature `Lq8/k;.f:(Ljava/util/concurrent/Executor;)La5/l;` @kind virtual;
  #L4279b2.  return @kind void;
}
procedure `a5.l` `f`(`q8.k` v3 @kind this, `java.util.concurrent.Executor` v4 @kind object) @signature `Lq8/k;.f:(Ljava/util/concurrent/Executor;)La5/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L427900.  v0:= v3.`q8.k.b` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L427904.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L42790a.  v0:= temp;
  #L42790c.  if v0 <= 0 then goto L427914;
  #L427910.  v0:= 1I;
  #L427912.  goto L427916;
  #L427914.  v0:= 0I;
  #L427916.  call `m`(v0) @signature `Lcom/google/android/gms/common/internal/h;.m:(Z)V` @kind static;
  #L42791c.  v0:= new `a5.m`;
  #L427920.  call `<init>`(v0) @signature `La5/m;.<init>:()V` @kind direct;
  #L427926.  v1:= v3.`q8.k.a` @type ^`q8.o` @kind object;
  #L42792a.  v2:= new `q8.z`;
  #L42792e.  call `<init>`(v2, v3, v0) @signature `Lq8/z;.<init>:(Lq8/k;La5/m;)V` @kind direct;
  #L427934.  call `a`(v1, v4, v2) @signature `Lq8/o;.a:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V` @kind virtual;
  #L42793a.  call temp:= `a`(v0) @signature `La5/m;.a:()La5/l;` @kind virtual;
  #L427940.  v4:= temp @kind object;
  #L427942.  return v4 @kind object;
}
procedure `void` `g`(`q8.k` v3 @kind this, `a5.a` v4 @kind object, `a5.b` v5 @kind object, `java.util.concurrent.Callable` v6 @kind object, `a5.m` v7 @kind object) @signature `Lq8/k;.g:(La5/a;La5/b;Ljava/util/concurrent/Callable;La5/m;)V` @AccessFlag FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L4279c4.  call temp:= `a`(v4) @signature `La5/a;.a:()Z` @kind virtual;
  #L4279ca.  v0:= temp;
  #L4279cc.  if v0 == 0 then goto L4279d8;
  #L4279d0.  call `a`(v5) @signature `La5/b;.a:()V` @kind virtual;
  #L4279d6.  return @kind void;
  #L4279d8.  v0:= v3.`q8.k.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4279dc.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L4279e2.  v0:= temp;
  #L4279e4.  if v0 != 0 then goto L4279fa;
  #L4279e8.  call `b`(v3) @signature `Lq8/k;.b:()V` @kind virtual;
  #L4279ee.  v0:= v3.`q8.k.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L4279f2.  v1:= 1I;
  #L4279f4.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L4279fa.  call temp:= `a`(v4) @signature `La5/a;.a:()Z` @kind virtual;
  #L427a00.  v0:= temp;
  #L427a02.  if v0 == 0 then goto L427a0e;
  #L427a06.  call `a`(v5) @signature `La5/b;.a:()V` @kind virtual;
  #L427a0c.  return @kind void;
  #L427a0e.  call temp:= `call`(v6) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L427a14.  v6:= temp @kind object;
  #L427a16.  call temp:= `a`(v4) @signature `La5/a;.a:()Z` @kind virtual;
  #L427a1c.  v0:= temp;
  #L427a1e.  if v0 == 0 then goto L427a2a;
  #L427a22.  call `a`(v5) @signature `La5/b;.a:()V` @kind virtual;
  #L427a28.  return @kind void;
  #L427a2a.  call `c`(v7, v6) @signature `La5/m;.c:(Ljava/lang/Object;)V` @kind virtual;
  #L427a30.  return @kind void;
  #L427a32.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L427a34.  goto L427a4c;
  #L427a36.  v6:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L427a38.  v0:= new `m8.a`;
  #L427a3c.  v1:= "Internal error has occurred when executing ML Kit tasks" @kind object;
  #L427a40.  v2:= 13I;
  #L427a44.  call `<init>`(v0, v1, v2, v6) @signature `Lm8/a;.<init>:(Ljava/lang/String;ILjava/lang/Throwable;)V` @kind direct;
  #L427a4a.  throw v0;
  #L427a4c.  call temp:= `a`(v4) @signature `La5/a;.a:()Z` @kind virtual;
  #L427a52.  v4:= temp;
  #L427a54.  if v4 == 0 then goto L427a60;
  #L427a58.  call `a`(v5) @signature `La5/b;.a:()V` @kind virtual;
  #L427a5e.  return @kind void;
  #L427a60.  call `b`(v7, v6) @signature `La5/m;.b:(Ljava/lang/Exception;)V` @kind virtual;
  #L427a66.  return @kind void;
  catch `java.lang.RuntimeException` @[L4279d8..L427a16] goto L427a36;
  catch `java.lang.Exception` @[L4279d8..L427a16] goto L427a32;
  catch `java.lang.Exception` @[L427a16..L427a4c] goto L427a32;
}
procedure `void` `h`(`q8.k` v3 @kind this, `a5.m` v4 @kind object) @signature `Lq8/k;.h:(La5/m;)V` @AccessFlag FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L427a94.  v0:= v3.`q8.k.b` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L427a98.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L427a9e.  v0:= temp;
  #L427aa0.  v1:= 0I;
  #L427aa2.  if v0 < 0 then goto L427aaa;
  #L427aa6.  v2:= 1I;
  #L427aa8.  goto L427aac;
  #L427aaa.  v2:= 0I;
  #L427aac.  call `m`(v2) @signature `Lcom/google/android/gms/common/internal/h;.m:(Z)V` @kind static;
  #L427ab2.  if v0 != 0 then goto L427ac6;
  #L427ab6.  call `d`(v3) @signature `Lq8/k;.d:()V` @kind virtual;
  #L427abc.  v0:= v3.`q8.k.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L427ac0.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L427ac6.  call `a`() @signature `Lp4/z;.a:()V` @kind static;
  #L427acc.  v0:= 0I;
  #L427ace.  call `c`(v4, v0) @signature `La5/m;.c:(Ljava/lang/Object;)V` @kind virtual;
  #L427ad4.  return @kind void;
}
