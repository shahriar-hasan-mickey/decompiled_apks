record `z4.a` @kind class @AccessFlag PUBLIC {
  `java.lang.Object` `z4.a.a` @AccessFlag PRIVATE_FINAL;
  `android.os.PowerManager$WakeLock` `z4.a.b` @AccessFlag PRIVATE_FINAL;
  `int` `z4.a.c` @AccessFlag PRIVATE;
  `java.util.concurrent.Future` `z4.a.d` @AccessFlag PRIVATE;
  `long` `z4.a.e` @AccessFlag PRIVATE;
  `java.util.Set` `z4.a.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `z4.a.g` @AccessFlag PRIVATE;
  `int` `z4.a.h` @AccessFlag PRIVATE;
  `s4.b` `z4.a.i` @AccessFlag ;
  `f4.d` `z4.a.j` @AccessFlag PRIVATE;
  `android.os.WorkSource` `z4.a.k` @AccessFlag PRIVATE;
  `java.lang.String` `z4.a.l` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `z4.a.m` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `z4.a.n` @AccessFlag PRIVATE;
  `java.util.concurrent.ScheduledExecutorService` `z4.a.o` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@z4.a.p` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ScheduledExecutorService` `@@z4.a.q` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `java.lang.Object` `@@z4.a.r` @AccessFlag PRIVATE_STATIC_FINAL;
global `z4.e` `@@z4.a.s` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lz4/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L503234.  v0:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L503238.  v1:= 366L;
  #L50323c.  call temp:= `toMillis`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L503242.  v0:= temp @kind wide;
  #L503244.  `@@z4.a.p` @type ^`long` := v0 @kind wide;
  #L503248.  v0:= 0I;
  #L50324a.  `@@z4.a.q` @type ^`java.util.concurrent.ScheduledExecutorService` := v0 @kind object;
  #L50324e.  v0:= new `java.lang.Object`;
  #L503252.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L503258.  `@@z4.a.r` @type ^`java.lang.Object` := v0 @kind object;
  #L50325c.  v0:= new `z4.c`;
  #L503260.  call `<init>`(v0) @signature `Lz4/c;.<init>:()V` @kind direct;
  #L503266.  `@@z4.a.s` @type ^`z4.e` := v0 @kind object;
  #L50326a.  return @kind void;
}
procedure `void` `<init>`(`z4.a` v6 @kind this, `android.content.Context` v7 @kind object, `int` v8 , `java.lang.String` v9 @kind object) @signature `Lz4/a;.<init>:(Landroid/content/Context;ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L50327c.  call temp:= `getPackageName`(v7) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L503282.  v0:= temp @kind object;
  #L503284.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50328a.  v1:= new `java.lang.Object`;
  #L50328e.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L503294.  v6.`z4.a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L503298.  v1:= 0I;
  #L50329a.  v6.`z4.a.c` @type ^`int` := v1;
  #L50329e.  v2:= new `java.util.HashSet`;
  #L5032a2.  call `<init>`(v2) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L5032a8.  v6.`z4.a.f` @type ^`java.util.Set` := v2 @kind object;
  #L5032ac.  v2:= 1I;
  #L5032ae.  v6.`z4.a.g` @type ^`boolean` := v2 @kind boolean;
  #L5032b2.  call temp:= `d`() @signature `Lf4/g;.d:()Lf4/d;` @kind static;
  #L5032b8.  v3:= temp @kind object;
  #L5032ba.  v6.`z4.a.j` @type ^`f4.d` := v3 @kind object;
  #L5032be.  v3:= new `java.util.HashMap`;
  #L5032c2.  call `<init>`(v3) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L5032c8.  v6.`z4.a.m` @type ^`java.util.Map` := v3 @kind object;
  #L5032cc.  v3:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L5032d0.  call `<init>`(v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L5032d6.  v6.`z4.a.n` @type ^`java.util.concurrent.atomic.AtomicInteger` := v3 @kind object;
  #L5032da.  v3:= "WakeLock: context must not be null" @kind object;
  #L5032de.  call temp:= `k`(v7, v3) @signature `Lcom/google/android/gms/common/internal/h;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L5032e4.  v3:= "WakeLock: wakeLockName must not be empty" @kind object;
  #L5032e8.  call temp:= `g`(v9, v3) @signature `Lcom/google/android/gms/common/internal/h;.g:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L5032ee.  call temp:= `getApplicationContext`(v7) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L5032f4.  v3:= 0I;
  #L5032f6.  v6.`z4.a.i` @type ^`s4.b` := v3 @kind object;
  #L5032fa.  v3:= "com.google.android.gms" @kind object;
  #L5032fe.  call temp:= `getPackageName`(v7) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L503304.  v4:= temp @kind object;
  #L503306.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L50330c.  v3:= temp;
  #L50330e.  if v3 != 0 then goto L503344;
  #L503312.  call temp:= `valueOf`(v9) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L503318.  v3:= temp @kind object;
  #L50331a.  v4:= "*gcore*:" @kind object;
  #L50331e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L503324.  v5:= temp;
  #L503326.  if v5 == 0 then goto L503334;
  #L50332a.  call temp:= `concat`(v4, v3) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L503330.  v3:= temp @kind object;
  #L503332.  goto L50333e;
  #L503334.  v3:= new `java.lang.String`;
  #L503338.  call `<init>`(v3, v4) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50333e.  v6.`z4.a.l` @type ^`java.lang.String` := v3 @kind object;
  #L503342.  goto L503348;
  #L503344.  v6.`z4.a.l` @type ^`java.lang.String` := v9 @kind object;
  #L503348.  v3:= "power" @kind object;
  #L50334c.  call temp:= `getSystemService`(v7, v3) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L503352.  v3:= temp @kind object;
  #L503354.  v3:= (`android.os.PowerManager`) v3 @kind object;
  #L503358.  if v3 == 0 then goto L5033de;
  #L50335c.  call temp:= `newWakeLock`(v3, v8, v9) @signature `Landroid/os/PowerManager;.newWakeLock:(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;` @kind virtual;
  #L503362.  v8:= temp @kind object;
  #L503364.  v6.`z4.a.b` @type ^`android.os.PowerManager$WakeLock` := v8 @kind object;
  #L503368.  call temp:= `c`(v7) @signature `Lf4/l;.c:(Landroid/content/Context;)Z` @kind static;
  #L50336e.  v9:= temp;
  #L503370.  if v9 == 0 then goto L50339e;
  #L503374.  call temp:= `a`(v0) @signature `Lcom/google/android/gms/common/util/c;.a:(Ljava/lang/String;)Z` @kind static;
  #L50337a.  v9:= temp;
  #L50337c.  if v9 == 0 then goto L503388;
  #L503380.  call temp:= `getPackageName`(v7) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L503386.  v0:= temp @kind object;
  #L503388.  call temp:= `b`(v7, v0) @signature `Lf4/l;.b:(Landroid/content/Context;Ljava/lang/String;)Landroid/os/WorkSource;` @kind static;
  #L50338e.  v7:= temp @kind object;
  #L503390.  v6.`z4.a.k` @type ^`android.os.WorkSource` := v7 @kind object;
  #L503394.  if v7 == 0 then goto L50339e;
  #L503398.  call `i`(v8, v7) @signature `Lz4/a;.i:(Landroid/os/PowerManager$WakeLock;Landroid/os/WorkSource;)V` @kind static;
  #L50339e.  v7:= `@@z4.a.q` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L5033a2.  if v7 != 0 then goto L5033d8;
  #L5033a6.  v8:= `@@z4.a.r` @type ^`java.lang.Object` @kind object;
  #L5033aa.  @monitorenter v8
  #L5033ac.  v7:= `@@z4.a.q` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L5033b0.  if v7 != 0 then goto L5033ce;
  #L5033b4.  call temp:= `a`() @signature `Ls4/h;.a:()Ls4/e;` @kind static;
  #L5033ba.  call temp:= `newScheduledThreadPool`(v2) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(I)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L5033c0.  v7:= temp @kind object;
  #L5033c2.  call temp:= `unconfigurableScheduledExecutorService`(v7) @signature `Ljava/util/concurrent/Executors;.unconfigurableScheduledExecutorService:(Ljava/util/concurrent/ScheduledExecutorService;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L5033c8.  v7:= temp @kind object;
  #L5033ca.  `@@z4.a.q` @type ^`java.util.concurrent.ScheduledExecutorService` := v7 @kind object;
  #L5033ce.  @monitorexit v8
  #L5033d0.  goto L5033d8;
  #L5033d2.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5033d4.  @monitorexit v8
  #L5033d6.  throw v7;
  #L5033d8.  v6.`z4.a.o` @type ^`java.util.concurrent.ScheduledExecutorService` := v7 @kind object;
  #L5033dc.  return @kind void;
  #L5033de.  v7:= new `s4.i`;
  #L5033e2.  v8:= new `java.lang.StringBuilder`;
  #L5033e6.  v9:= 29I;
  #L5033ea.  call `<init>`(v8, v9) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L5033f0.  v0:= "expected a non-null reference" @kind object;
  #L5033f4.  call temp:= `append`(v8, v0, v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L5033fa.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L503400.  v8:= temp @kind object;
  #L503402.  call `<init>`(v7, v8) @signature `Ls4/i;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L503408.  throw v7;
  catch `java.lang.Throwable` @[L5033ac..L5033d6] goto L5033d2;
}
procedure `void` `e`(`z4.a` v4 @kind object) @signature `Lz4/a;.e:(Lz4/a;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L503670.  v0:= v4.`z4.a.a` @type ^`java.lang.Object` @kind object;
  #L503674.  @monitorenter v0
  #L503676.  call temp:= `b`(v4) @signature `Lz4/a;.b:()Z` @kind virtual;
  #L50367c.  v1:= temp;
  #L50367e.  if v1 != 0 then goto L503686;
  #L503682.  @monitorexit v0
  #L503684.  return @kind void;
  #L503686.  v1:= "WakeLock" @kind object;
  #L50368a.  v2:= v4.`z4.a.l` @type ^`java.lang.String` @kind object;
  #L50368e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L503694.  v2:= temp @kind object;
  #L503696.  v3:= " ** IS FORCE-RELEASED ON TIMEOUT **" @kind object;
  #L50369a.  call temp:= `concat`(v2, v3) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L5036a0.  v2:= temp @kind object;
  #L5036a2.  call temp:= `e`(v1, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L5036a8.  call `g`(v4) @signature `Lz4/a;.g:()V` @kind direct;
  #L5036ae.  call temp:= `b`(v4) @signature `Lz4/a;.b:()Z` @kind virtual;
  #L5036b4.  v1:= temp;
  #L5036b6.  if v1 != 0 then goto L5036be;
  #L5036ba.  @monitorexit v0
  #L5036bc.  return @kind void;
  #L5036be.  v1:= 1I;
  #L5036c0.  v4.`z4.a.c` @type ^`int` := v1;
  #L5036c4.  v1:= 0I;
  #L5036c6.  call `h`(v4, v1) @signature `Lz4/a;.h:(I)V` @kind direct;
  #L5036cc.  @monitorexit v0
  #L5036ce.  return @kind void;
  #L5036d0.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5036d2.  @monitorexit v0
  #L5036d4.  throw v4;
  catch `java.lang.Throwable` @[L503676..L5036d4] goto L5036d0;
}
procedure `java.lang.String` `f`(`z4.a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lz4/a;.f:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L503210.  v2:= v1.`z4.a.g` @type ^`boolean` @kind boolean;
  #L503214.  v0:= 0I;
  #L503216.  if v2 == 0 then goto L503220;
  #L50321a.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L503220.  return v0 @kind object;
}
procedure `void` `g`(`z4.a` v2 @kind this) @signature `Lz4/a;.g:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L5036f4.  v0:= v2.`z4.a.f` @type ^`java.util.Set` @kind object;
  #L5036f8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L5036fe.  v0:= temp;
  #L503700.  if v0 == 0 then goto L503706;
  #L503704.  return @kind void;
  #L503706.  v0:= new `java.util.ArrayList`;
  #L50370a.  v1:= v2.`z4.a.f` @type ^`java.util.Set` @kind object;
  #L50370e.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L503714.  v1:= v2.`z4.a.f` @type ^`java.util.Set` @kind object;
  #L503718.  call `clear`(v1) @signature `Ljava/util/Set;.clear:()V` @kind interface;
  #L50371e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L503724.  v1:= temp;
  #L503726.  if v1 > 0 then goto L50372c;
  #L50372a.  return @kind void;
  #L50372c.  v1:= 0I;
  #L50372e.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L503734.  v0:= temp @kind object;
  #L503736.  v0:= (`z4.f`) v0 @kind object;
  #L50373a.  v0:= 0I;
  #L50373c.  throw v0;
}
procedure `void` `h`(`z4.a` v5 @kind this, `int` v6 ) @signature `Lz4/a;.h:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L503750.  v6:= v5.`z4.a.a` @type ^`java.lang.Object` @kind object;
  #L503754.  @monitorenter v6
  #L503756.  call temp:= `b`(v5) @signature `Lz4/a;.b:()Z` @kind virtual;
  #L50375c.  v0:= temp;
  #L50375e.  if v0 != 0 then goto L503766;
  #L503762.  @monitorexit v6
  #L503764.  return @kind void;
  #L503766.  v0:= v5.`z4.a.g` @type ^`boolean` @kind boolean;
  #L50376a.  v1:= 0I;
  #L50376c.  if v0 == 0 then goto L503786;
  #L503770.  v0:= v5.`z4.a.c` @type ^`int`;
  #L503774.  v0:= v0 + -1;
  #L503778.  v5.`z4.a.c` @type ^`int` := v0;
  #L50377c.  if v0 > 0 then goto L503782;
  #L503780.  goto L50378a;
  #L503782.  @monitorexit v6
  #L503784.  return @kind void;
  #L503786.  v5.`z4.a.c` @type ^`int` := v1;
  #L50378a.  call `g`(v5) @signature `Lz4/a;.g:()V` @kind direct;
  #L503790.  v0:= v5.`z4.a.m` @type ^`java.util.Map` @kind object;
  #L503794.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L50379a.  v0:= temp @kind object;
  #L50379c.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5037a2.  v0:= temp @kind object;
  #L5037a4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5037aa.  v2:= temp;
  #L5037ac.  if v2 == 0 then goto L5037c2;
  #L5037b0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5037b6.  v2:= temp @kind object;
  #L5037b8.  v2:= (`z4.d`) v2 @kind object;
  #L5037bc.  v2.`z4.d.a` @type ^`int` := v1;
  #L5037c0.  goto L5037a4;
  #L5037c2.  v0:= v5.`z4.a.m` @type ^`java.util.Map` @kind object;
  #L5037c6.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L5037cc.  v0:= v5.`z4.a.d` @type ^`java.util.concurrent.Future` @kind object;
  #L5037d0.  v2:= 0I;
  #L5037d2.  if v0 == 0 then goto L5037e8;
  #L5037d6.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L5037dc.  v5.`z4.a.d` @type ^`java.util.concurrent.Future` := v2 @kind object;
  #L5037e0.  v3:= 0L;
  #L5037e4.  v5.`z4.a.e` @type ^`long` := v3 @kind wide;
  #L5037e8.  v5.`z4.a.h` @type ^`int` := v1;
  #L5037ec.  v0:= v5.`z4.a.b` @type ^`android.os.PowerManager$WakeLock` @kind object;
  #L5037f0.  call temp:= `isHeld`(v0) @signature `Landroid/os/PowerManager$WakeLock;.isHeld:()Z` @kind virtual;
  #L5037f6.  v0:= temp;
  #L5037f8.  if v0 == 0 then goto L50386e;
  #L5037fc.  v0:= v5.`z4.a.b` @type ^`android.os.PowerManager$WakeLock` @kind object;
  #L503800.  call `release`(v0) @signature `Landroid/os/PowerManager$WakeLock;.release:()V` @kind virtual;
  #L503806.  v0:= v5.`z4.a.i` @type ^`s4.b` @kind object;
  #L50380a.  if v0 == 0 then goto L503890;
  #L50380e.  v5.`z4.a.i` @type ^`s4.b` := v2 @kind object;
  #L503812.  goto L503890;
  #L503814.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L503816.  goto L503860;
  #L503818.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L50381a.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L503820.  v1:= temp @kind object;
  #L503822.  v3:= constclass @type ^`java.lang.RuntimeException` @kind object;
  #L503826.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L50382c.  v1:= temp;
  #L50382e.  if v1 == 0 then goto L50385e;
  #L503832.  v1:= "WakeLock" @kind object;
  #L503836.  v3:= v5.`z4.a.l` @type ^`java.lang.String` @kind object;
  #L50383a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L503840.  v3:= temp @kind object;
  #L503842.  v4:= " failed to release!" @kind object;
  #L503846.  call temp:= `concat`(v3, v4) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L50384c.  v3:= temp @kind object;
  #L50384e.  call temp:= `e`(v1, v3, v0) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L503854.  v0:= v5.`z4.a.i` @type ^`s4.b` @kind object;
  #L503858.  if v0 == 0 then goto L503890;
  #L50385c.  goto L50380e;
  #L50385e.  throw v0;
  #L503860.  v1:= v5.`z4.a.i` @type ^`s4.b` @kind object;
  #L503864.  if v1 == 0 then goto L50386c;
  #L503868.  v5.`z4.a.i` @type ^`s4.b` := v2 @kind object;
  #L50386c.  throw v0;
  #L50386e.  v0:= "WakeLock" @kind object;
  #L503872.  v1:= v5.`z4.a.l` @type ^`java.lang.String` @kind object;
  #L503876.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L50387c.  v1:= temp @kind object;
  #L50387e.  v2:= " should be held!" @kind object;
  #L503882.  call temp:= `concat`(v1, v2) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L503888.  v1:= temp @kind object;
  #L50388a.  call temp:= `e`(v0, v1) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L503890.  @monitorexit v6
  #L503892.  return @kind void;
  #L503894.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L503896.  @monitorexit v6
  #L503898.  throw v0;
  catch `java.lang.Throwable` @[L503756..L5037f8] goto L503894;
  catch `java.lang.RuntimeException` @[L5037fc..L503806] goto L503818;
  catch `java.lang.Throwable` @[L5037fc..L503806] goto L503814;
  catch `java.lang.Throwable` @[L503806..L503812] goto L503894;
  catch `java.lang.Throwable` @[L50381a..L503854] goto L503814;
  catch `java.lang.Throwable` @[L503854..L503858] goto L503894;
  catch `java.lang.Throwable` @[L50385e..L503860] goto L503814;
  catch `java.lang.Throwable` @[L503860..L503898] goto L503894;
}
procedure `void` `i`(`android.os.PowerManager$WakeLock` v0 @kind object, `android.os.WorkSource` v1 @kind object) @signature `Lz4/a;.i:(Landroid/os/PowerManager$WakeLock;Landroid/os/WorkSource;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L5038f0.  call `setWorkSource`(v0, v1) @signature `Landroid/os/PowerManager$WakeLock;.setWorkSource:(Landroid/os/WorkSource;)V` @kind virtual;
  #L5038f6.  return @kind void;
  #L5038f8.  v0:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L5038fa.  goto L5038fe;
  #L5038fc.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L5038fe.  call temp:= `toString`(v0) @signature `Ljava/lang/RuntimeException;.toString:()Ljava/lang/String;` @kind virtual;
  #L503904.  v0:= temp @kind object;
  #L503906.  v1:= "WakeLock" @kind object;
  #L50390a.  call temp:= `wtf`(v1, v0) @signature `Landroid/util/Log;.wtf:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L503910.  return @kind void;
  catch `java.lang.IllegalArgumentException` @[L5038f0..L5038f6] goto L5038fc;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L5038f0..L5038f6] goto L5038f8;
}
procedure `void` `a`(`z4.a` v9 @kind this, `long` v10 ) @signature `Lz4/a;.a:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L503428.  v0:= v9.`z4.a.n` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L50342c.  call temp:= `incrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.incrementAndGet:()I` @kind virtual;
  #L503432.  v0:= `@@z4.a.p` @type ^`long` @kind wide;
  #L503436.  v2:= 9223372036854775807L;
  #L503440.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L503446.  v0:= temp @kind wide;
  #L503448.  v4:= 1L;
  #L50344c.  call temp:= `max`(v0, v4) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L503452.  v0:= temp @kind wide;
  #L503454.  v4:= 0L;
  #L503458.  v6:= lcmp(v10, v4);
  #L50345c.  if v6 <= 0 then goto L503468;
  #L503460.  call temp:= `min`(v10, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L503466.  v0:= temp @kind wide;
  #L503468.  v10:= v9.`z4.a.a` @type ^`java.lang.Object` @kind object;
  #L50346c.  @monitorenter v10
  #L50346e.  call temp:= `b`(v9) @signature `Lz4/a;.b:()Z` @kind virtual;
  #L503474.  v11:= temp;
  #L503476.  v4:= 0I;
  #L503478.  v5:= 0I;
  #L50347a.  if v11 != 0 then goto L50349e;
  #L50347e.  call temp:= `a`(v4, v5) @signature `Ls4/b;.a:(ZLs4/c;)Ls4/b;` @kind static;
  #L503484.  v11:= temp @kind object;
  #L503486.  v9.`z4.a.i` @type ^`s4.b` := v11 @kind object;
  #L50348a.  v11:= v9.`z4.a.b` @type ^`android.os.PowerManager$WakeLock` @kind object;
  #L50348e.  call `acquire`(v11) @signature `Landroid/os/PowerManager$WakeLock;.acquire:()V` @kind virtual;
  #L503494.  v11:= v9.`z4.a.j` @type ^`f4.d` @kind object;
  #L503498.  call temp:= `b`(v11) @signature `Lf4/d;.b:()J` @kind interface;
  #L50349e.  v11:= v9.`z4.a.c` @type ^`int`;
  #L5034a2.  v11:= v11 + 1;
  #L5034a6.  v9.`z4.a.c` @type ^`int` := v11;
  #L5034aa.  v11:= v9.`z4.a.h` @type ^`int`;
  #L5034ae.  v11:= v11 + 1;
  #L5034b2.  v9.`z4.a.h` @type ^`int` := v11;
  #L5034b6.  call temp:= `f`(v9, v5) @signature `Lz4/a;.f:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L5034bc.  v11:= v9.`z4.a.m` @type ^`java.util.Map` @kind object;
  #L5034c0.  call temp:= `get`(v11, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5034c6.  v11:= temp @kind object;
  #L5034c8.  v11:= (`z4.d`) v11 @kind object;
  #L5034cc.  if v11 != 0 then goto L5034e4;
  #L5034d0.  v11:= new `z4.d`;
  #L5034d4.  call `<init>`(v11, v5) @signature `Lz4/d;.<init>:(Lz4/c;)V` @kind direct;
  #L5034da.  v6:= v9.`z4.a.m` @type ^`java.util.Map` @kind object;
  #L5034de.  call temp:= `put`(v6, v5, v11) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5034e4.  v5:= v11.`z4.d.a` @type ^`int`;
  #L5034e8.  v5:= v5 + 1;
  #L5034ec.  v11.`z4.d.a` @type ^`int` := v5;
  #L5034f0.  v11:= v9.`z4.a.j` @type ^`f4.d` @kind object;
  #L5034f4.  call temp:= `b`(v11) @signature `Lf4/d;.b:()J` @kind interface;
  #L5034fa.  v5:= temp @kind wide;
  #L5034fc.  v7:= v2 - v5 @kind long;
  #L503500.  v11:= lcmp(v7, v0);
  #L503504.  if v11 <= 0 then goto L50350c;
  #L503508.  v2:= v5 + v0 @kind long;
  #L50350c.  v5:= v9.`z4.a.e` @type ^`long` @kind wide;
  #L503510.  v11:= lcmp(v2, v5);
  #L503514.  if v11 <= 0 then goto L503548;
  #L503518.  v9.`z4.a.e` @type ^`long` := v2 @kind wide;
  #L50351c.  v11:= v9.`z4.a.d` @type ^`java.util.concurrent.Future` @kind object;
  #L503520.  if v11 == 0 then goto L50352a;
  #L503524.  call temp:= `cancel`(v11, v4) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L50352a.  v11:= v9.`z4.a.o` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L50352e.  v2:= new `z4.b`;
  #L503532.  call `<init>`(v2, v9) @signature `Lz4/b;.<init>:(Lz4/a;)V` @kind direct;
  #L503538.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L50353c.  call temp:= `schedule`(v11, v2, v0, v3) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L503542.  v11:= temp @kind object;
  #L503544.  v9.`z4.a.d` @type ^`java.util.concurrent.Future` := v11 @kind object;
  #L503548.  @monitorexit v10
  #L50354a.  return @kind void;
  #L50354c.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L50354e.  @monitorexit v10
  #L503550.  throw v11;
  catch `java.lang.Throwable` @[L50346e..L503550] goto L50354c;
}
procedure `boolean` `b`(`z4.a` v2 @kind this) @signature `Lz4/a;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5031d4.  v0:= v2.`z4.a.a` @type ^`java.lang.Object` @kind object;
  #L5031d8.  @monitorenter v0
  #L5031da.  v1:= v2.`z4.a.c` @type ^`int`;
  #L5031de.  if v1 <= 0 then goto L5031e6;
  #L5031e2.  v1:= 1I;
  #L5031e4.  goto L5031e8;
  #L5031e6.  v1:= 0I;
  #L5031e8.  @monitorexit v0
  #L5031ea.  return v1;
  #L5031ec.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5031ee.  @monitorexit v0
  #L5031f0.  throw v1;
  catch `java.lang.Throwable` @[L5031da..L5031f0] goto L5031ec;
}
procedure `void` `c`(`z4.a` v4 @kind this) @signature `Lz4/a;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L503570.  v0:= v4.`z4.a.n` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L503574.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L50357a.  v0:= temp;
  #L50357c.  if v0 >= 0 then goto L5035a2;
  #L503580.  v0:= "WakeLock" @kind object;
  #L503584.  v1:= v4.`z4.a.l` @type ^`java.lang.String` @kind object;
  #L503588.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L50358e.  v1:= temp @kind object;
  #L503590.  v2:= " release without a matched acquire!" @kind object;
  #L503594.  call temp:= `concat`(v1, v2) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L50359a.  v1:= temp @kind object;
  #L50359c.  call temp:= `e`(v0, v1) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L5035a2.  v0:= v4.`z4.a.a` @type ^`java.lang.Object` @kind object;
  #L5035a6.  @monitorenter v0
  #L5035a8.  v1:= 0I;
  #L5035aa.  call temp:= `f`(v4, v1) @signature `Lz4/a;.f:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L5035b0.  v2:= v4.`z4.a.m` @type ^`java.util.Map` @kind object;
  #L5035b4.  call temp:= `containsKey`(v2, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L5035ba.  v2:= temp;
  #L5035bc.  if v2 == 0 then goto L5035f0;
  #L5035c0.  v2:= v4.`z4.a.m` @type ^`java.util.Map` @kind object;
  #L5035c4.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5035ca.  v2:= temp @kind object;
  #L5035cc.  v2:= (`z4.d`) v2 @kind object;
  #L5035d0.  if v2 == 0 then goto L503612;
  #L5035d4.  v3:= v2.`z4.d.a` @type ^`int`;
  #L5035d8.  v3:= v3 + -1;
  #L5035dc.  v2.`z4.d.a` @type ^`int` := v3;
  #L5035e0.  if v3 != 0 then goto L503612;
  #L5035e4.  v2:= v4.`z4.a.m` @type ^`java.util.Map` @kind object;
  #L5035e8.  call temp:= `remove`(v2, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5035ee.  goto L503612;
  #L5035f0.  v1:= "WakeLock" @kind object;
  #L5035f4.  v2:= v4.`z4.a.l` @type ^`java.lang.String` @kind object;
  #L5035f8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L5035fe.  v2:= temp @kind object;
  #L503600.  v3:= " counter does not exist" @kind object;
  #L503604.  call temp:= `concat`(v2, v3) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L50360a.  v2:= temp @kind object;
  #L50360c.  call temp:= `w`(v1, v2) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L503612.  v1:= 0I;
  #L503614.  call `h`(v4, v1) @signature `Lz4/a;.h:(I)V` @kind direct;
  #L50361a.  @monitorexit v0
  #L50361c.  return @kind void;
  #L50361e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L503620.  @monitorexit v0
  #L503622.  throw v1;
  catch `java.lang.Throwable` @[L5035aa..L503622] goto L50361e;
}
procedure `void` `d`(`z4.a` v1 @kind this, `boolean` v2 ) @signature `Lz4/a;.d:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503640.  v0:= v1.`z4.a.a` @type ^`java.lang.Object` @kind object;
  #L503644.  @monitorenter v0
  #L503646.  v1.`z4.a.g` @type ^`boolean` := v2 @kind boolean;
  #L50364a.  @monitorexit v0
  #L50364c.  return @kind void;
  #L50364e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L503650.  @monitorexit v0
  #L503652.  throw v2;
  catch `java.lang.Throwable` @[L503646..L503652] goto L50364e;
}
