record `r5.a$a` @kind class @AccessFlag  extends `java.lang.ThreadLocal` @kind class {
}
procedure `void` `<init>`(`r5.a$a` v0 @kind this) @signature `Lr5/a$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L453954.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L45395a.  return @kind void;
}
procedure `javax.crypto.Cipher` `a`(`r5.a$a` v2 @kind this) @signature `Lr5/a$a;.a:()Ljavax/crypto/Cipher;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L453910.  v0:= `@@x5.m.f` @type ^`x5.m` @kind object;
  #L453914.  v1:= "AES/GCM-SIV/NoPadding" @kind object;
  #L453918.  call temp:= `a`(v0, v1) @signature `Lx5/m;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L45391e.  v0:= temp @kind object;
  #L453920.  v0:= (`javax.crypto.Cipher`) v0 @kind object;
  #L453924.  return v0 @kind object;
  #L453926.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L453928.  v1:= new `java.lang.IllegalStateException`;
  #L45392c.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L453932.  throw v1;
  catch `java.security.GeneralSecurityException` @[L453910..L453924] goto L453926;
}
procedure `java.lang.Object` `initialValue`(`r5.a$a` v1 @kind this) @signature `Lr5/a$a;.initialValue:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L4538f4.  call temp:= `a`(v1) @signature `Lr5/a$a;.a:()Ljavax/crypto/Cipher;` @kind virtual;
  #L4538fa.  v0:= temp @kind object;
  #L4538fc.  return v0 @kind object;
}
