record `r5.a` @kind class @AccessFlag PUBLIC_FINAL extends `p5.a` @kind interface {
  `javax.crypto.SecretKey` `r5.a.a` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.ThreadLocal` `@@r5.a.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lr5/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L453b70.  v0:= new `r5.a$a`;
  #L453b74.  call `<init>`(v0) @signature `Lr5/a$a;.<init>:()V` @kind direct;
  #L453b7a.  `@@r5.a.b` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L453b7e.  return @kind void;
}
procedure `void` `<init>`(`r5.a` v2 @kind this, `byte`[] v3 @kind object) @signature `Lr5/a;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L453b90.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L453b96.  v0:= length @variable v3;
  #L453b98.  call `a`(v0) @signature `Lx5/w;.a:(I)V` @kind static;
  #L453b9e.  v0:= new `javax.crypto.spec.SecretKeySpec`;
  #L453ba2.  v1:= "AES" @kind object;
  #L453ba6.  call `<init>`(v0, v3, v1) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L453bac.  v2.`r5.a.a` @type ^`javax.crypto.SecretKey` := v0 @kind object;
  #L453bb0.  return @kind void;
}
procedure `java.security.spec.AlgorithmParameterSpec` `c`(`byte`[] v2 @kind object) @signature `Lr5/a;.c:([B)Ljava/security/spec/AlgorithmParameterSpec;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L453aec.  v0:= length @variable v2;
  #L453aee.  v1:= 0I;
  #L453af0.  call temp:= `d`(v2, v1, v0) @signature `Lr5/a;.d:([BII)Ljava/security/spec/AlgorithmParameterSpec;` @kind static;
  #L453af6.  v2:= temp @kind object;
  #L453af8.  return v2 @kind object;
}
procedure `java.security.spec.AlgorithmParameterSpec` `d`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lr5/a;.d:([BII)Ljava/security/spec/AlgorithmParameterSpec;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L453b0c.  v0:= "javax.crypto.spec.GCMParameterSpec" @kind object;
  #L453b10.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L453b16.  v0:= new `javax.crypto.spec.GCMParameterSpec`;
  #L453b1a.  v1:= 128I;
  #L453b1e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ljavax/crypto/spec/GCMParameterSpec;.<init>:(I[BII)V` @kind direct;
  #L453b24.  return v0 @kind object;
  #L453b26.  
  #L453b28.  call temp:= `b`() @signature `Lx5/v;.b:()Z` @kind static;
  #L453b2e.  v0:= temp;
  #L453b30.  if v0 == 0 then goto L453b40;
  #L453b34.  v0:= new `javax.crypto.spec.IvParameterSpec`;
  #L453b38.  call `<init>`(v0, v2, v3, v4) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([BII)V` @kind direct;
  #L453b3e.  return v0 @kind object;
  #L453b40.  v2:= new `java.security.GeneralSecurityException`;
  #L453b44.  v3:= "cannot use AES-GCM: javax.crypto.spec.GCMParameterSpec not found" @kind object;
  #L453b48.  call `<init>`(v2, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L453b4e.  throw v2;
  catch `java.lang.ClassNotFoundException` @[L453b0c..L453b24] goto L453b26;
}
procedure `byte`[] `a`(`r5.a` v11 @kind this, `byte`[] v12 @kind object, `byte`[] v13 @kind object) @signature `Lr5/a;.a:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4539f8.  v0:= length @variable v12;
  #L4539fa.  v1:= 2147483619I;
  #L453a00.  if v0 > v1 then goto L453acc;
  #L453a04.  v0:= length @variable v12;
  #L453a06.  v1:= 12I;
  #L453a0a.  v0:= v0 + v1 @kind int;
  #L453a0c.  v2:= 16I;
  #L453a10.  v0:= v0 + v2 @kind int;
  #L453a12.  v0:= new `byte`[v0];
  #L453a16.  call temp:= `c`(v1) @signature `Lx5/u;.c:(I)[B` @kind static;
  #L453a1c.  v3:= temp @kind object;
  #L453a1e.  v9:= 0I;
  #L453a20.  call `arraycopy`(v3, v9, v0, v9, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L453a26.  call temp:= `c`(v3) @signature `Lr5/a;.c:([B)Ljava/security/spec/AlgorithmParameterSpec;` @kind static;
  #L453a2c.  v1:= temp @kind object;
  #L453a2e.  v3:= `@@r5.a.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L453a32.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L453a38.  v4:= temp @kind object;
  #L453a3a.  v4:= (`javax.crypto.Cipher`) v4 @kind object;
  #L453a3e.  v5:= v11.`r5.a.a` @type ^`javax.crypto.SecretKey` @kind object;
  #L453a42.  v10:= 1I;
  #L453a44.  call `init`(v4, v10, v5, v1) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L453a4a.  if v13 == 0 then goto L453a66;
  #L453a4e.  v1:= length @variable v13;
  #L453a50.  if v1 == 0 then goto L453a66;
  #L453a54.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L453a5a.  v1:= temp @kind object;
  #L453a5c.  v1:= (`javax.crypto.Cipher`) v1 @kind object;
  #L453a60.  call `updateAAD`(v1, v13) @signature `Ljavax/crypto/Cipher;.updateAAD:([B)V` @kind virtual;
  #L453a66.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L453a6c.  v13:= temp @kind object;
  #L453a6e.  v3:= v13 @kind object;
  #L453a70.  v3:= (`javax.crypto.Cipher`) v3 @kind object;
  #L453a74.  v5:= 0I;
  #L453a76.  v6:= length @variable v12;
  #L453a78.  v8:= 12I;
  #L453a7c.  v4:= v12 @kind object;
  #L453a7e.  v7:= v0 @kind object;
  #L453a80.  call temp:= `doFinal`(v3, v4, v5, v6, v7, v8) @signature `Ljavax/crypto/Cipher;.doFinal:([BII[BI)I` @kind virtual;
  #L453a86.  v13:= temp;
  #L453a88.  v1:= length @variable v12;
  #L453a8a.  v1:= v1 + v2 @kind int;
  #L453a8c.  if v13 != v1 then goto L453a92;
  #L453a90.  return v0 @kind object;
  #L453a92.  v12:= length @variable v12;
  #L453a94.  v13:= v13 - v12 @kind int;
  #L453a96.  v12:= new `java.security.GeneralSecurityException`;
  #L453a9a.  v0:= 2I;
  #L453a9c.  v0:= new `java.lang.Object`[v0];
  #L453aa0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L453aa6.  v1:= temp @kind object;
  #L453aa8.  v0[v9]:= v1 @kind object;
  #L453aac.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L453ab2.  v13:= temp @kind object;
  #L453ab4.  v0[v10]:= v13 @kind object;
  #L453ab8.  v13:= "encryption failed; GCM tag must be %s bytes, but got only %s bytes" @kind object;
  #L453abc.  call temp:= `format`(v13, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L453ac2.  v13:= temp @kind object;
  #L453ac4.  call `<init>`(v12, v13) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L453aca.  throw v12;
  #L453acc.  v12:= new `java.security.GeneralSecurityException`;
  #L453ad0.  v13:= "plaintext too long" @kind object;
  #L453ad4.  call `<init>`(v12, v13) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L453ada.  throw v12;
}
procedure `byte`[] `b`(`r5.a` v6 @kind this, `byte`[] v7 @kind object, `byte`[] v8 @kind object) @signature `Lr5/a;.b:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L45396c.  v0:= length @variable v7;
  #L45396e.  v1:= 28I;
  #L453972.  if v0 < v1 then goto L4539d6;
  #L453976.  v0:= 0I;
  #L453978.  v1:= 12I;
  #L45397c.  call temp:= `d`(v7, v0, v1) @signature `Lr5/a;.d:([BII)Ljava/security/spec/AlgorithmParameterSpec;` @kind static;
  #L453982.  v0:= temp @kind object;
  #L453984.  v2:= `@@r5.a.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L453988.  call temp:= `get`(v2) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L45398e.  v3:= temp @kind object;
  #L453990.  v3:= (`javax.crypto.Cipher`) v3 @kind object;
  #L453994.  v4:= 2I;
  #L453996.  v5:= v6.`r5.a.a` @type ^`javax.crypto.SecretKey` @kind object;
  #L45399a.  call `init`(v3, v4, v5, v0) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L4539a0.  if v8 == 0 then goto L4539bc;
  #L4539a4.  v0:= length @variable v8;
  #L4539a6.  if v0 == 0 then goto L4539bc;
  #L4539aa.  call temp:= `get`(v2) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L4539b0.  v0:= temp @kind object;
  #L4539b2.  v0:= (`javax.crypto.Cipher`) v0 @kind object;
  #L4539b6.  call `updateAAD`(v0, v8) @signature `Ljavax/crypto/Cipher;.updateAAD:([B)V` @kind virtual;
  #L4539bc.  call temp:= `get`(v2) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L4539c2.  v8:= temp @kind object;
  #L4539c4.  v8:= (`javax.crypto.Cipher`) v8 @kind object;
  #L4539c8.  v0:= length @variable v7;
  #L4539ca.  v0:= v0 - v1 @kind int;
  #L4539cc.  call temp:= `doFinal`(v8, v7, v1, v0) @signature `Ljavax/crypto/Cipher;.doFinal:([BII)[B` @kind virtual;
  #L4539d2.  v7:= temp @kind object;
  #L4539d4.  return v7 @kind object;
  #L4539d6.  v7:= new `java.security.GeneralSecurityException`;
  #L4539da.  v8:= "ciphertext too short" @kind object;
  #L4539de.  call `<init>`(v7, v8) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4539e4.  throw v7;
}
