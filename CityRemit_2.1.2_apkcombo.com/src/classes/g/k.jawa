record `g.k` @kind class @AccessFlag  {
  `long` `g.k.a` @AccessFlag PUBLIC;
  `long` `g.k.b` @AccessFlag PUBLIC;
  `int` `g.k.c` @AccessFlag PUBLIC;
}
global `g.k` `@@g.k.d` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`g.k` v0 @kind this) @signature `Lg/k;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L318ae4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L318aea.  return @kind void;
}
procedure `g.k` `b`() @signature `Lg/k;.b:()Lg/k;` @AccessFlag STATIC {
    temp;
    v0;

  #L318ab8.  v0:= `@@g.k.d` @type ^`g.k` @kind object;
  #L318abc.  if v0 != 0 then goto L318ace;
  #L318ac0.  v0:= new `g.k`;
  #L318ac4.  call `<init>`(v0) @signature `Lg/k;.<init>:()V` @kind direct;
  #L318aca.  `@@g.k.d` @type ^`g.k` := v0 @kind object;
  #L318ace.  v0:= `@@g.k.d` @type ^`g.k` @kind object;
  #L318ad2.  return v0 @kind object;
}
procedure `void` `a`(`g.k` v15 @kind this, `long` v16 , `double` v18 , `double` v20 ) @signature `Lg/k;.a:(JDD)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L318afc.  v0:= v15 @kind object;
  #L318afe.  v1:= 946728000000L;
  #L318b08.  v3:= v16 - v1 @kind long;
  #L318b0c.  v3:= (`float`) v3 @kind l2f;
  #L318b0e.  v4:= 1285868416I;
  #L318b14.  v3:= v3 / v4 @kind float;
  #L318b16.  v4:= 1015868197I;
  #L318b1c.  v4:= v4 * v3 @kind float;
  #L318b20.  v5:= 1086828178I;
  #L318b26.  v4:= v4 + v5 @kind float;
  #L318b28.  v5:= (`double`) v4 @kind f2d;
  #L318b2a.  call temp:= `sin`(v5) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L318b30.  v7:= temp @kind wide;
  #L318b32.  v9:= 0.03341960161924362D;
  #L318b3c.  v7:= v7 * v9 @kind double;
  #L318b40.  v7:= v7 + v5 @kind double;
  #L318b42.  v9:= 2.0F;
  #L318b46.  v9:= v9 * v4 @kind float;
  #L318b4a.  v9:= (`double`) v9 @kind f2d;
  #L318b4c.  call temp:= `sin`(v9) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L318b52.  v9:= temp @kind wide;
  #L318b54.  v11:= 3.4906598739326E-4D;
  #L318b5e.  v9:= v9 * v11 @kind double;
  #L318b62.  v7:= v7 + v9 @kind double;
  #L318b64.  v9:= 3.0F;
  #L318b68.  v4:= v4 * v9 @kind float;
  #L318b6c.  v9:= (`double`) v4 @kind f2d;
  #L318b6e.  call temp:= `sin`(v9) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L318b74.  v9:= temp @kind wide;
  #L318b76.  v11:= 5.236000106378924E-6D;
  #L318b80.  v9:= v9 * v11 @kind double;
  #L318b84.  v7:= v7 + v9 @kind double;
  #L318b86.  v9:= 1.796593063D;
  #L318b90.  v7:= v7 + v9 @kind double;
  #L318b92.  v9:= 3.141592653589793D;
  #L318b9c.  v7:= v7 + v9 @kind double;
  #L318b9e.  v9:= v20 @kind wide;
  #L318ba2.  v9:= -v9 @kind double;
  #L318ba4.  v11:= 360.0D;
  #L318bae.  v9:= v9 / v11 @kind double;
  #L318bb0.  v4:= 980151802I;
  #L318bb6.  v3:= v3 - v4 @kind float;
  #L318bb8.  v11:= (`double`) v3 @kind f2d;
  #L318bba.  v11:= v11 - v9 @kind double;
  #L318bbc.  call temp:= `round`(v11) @signature `Ljava/lang/Math;.round:(D)J` @kind static;
  #L318bc2.  v11:= temp @kind wide;
  #L318bc4.  v3:= (`float`) v11 @kind l2f;
  #L318bc6.  v3:= v3 + v4 @kind float;
  #L318bc8.  v3:= (`double`) v3 @kind f2d;
  #L318bca.  v3:= v3 + v9 @kind double;
  #L318bcc.  call temp:= `sin`(v5) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L318bd2.  v5:= temp @kind wide;
  #L318bd4.  v9:= 0.0053D;
  #L318bde.  v5:= v5 * v9 @kind double;
  #L318be2.  v3:= v3 + v5 @kind double;
  #L318be4.  v5:= 2.0D;
  #L318be8.  v5:= v5 * v7 @kind double;
  #L318bec.  call temp:= `sin`(v5) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L318bf2.  v5:= temp @kind wide;
  #L318bf4.  v9:= -0.0069D;
  #L318bfe.  v5:= v5 * v9 @kind double;
  #L318c02.  v3:= v3 + v5 @kind double;
  #L318c04.  call temp:= `sin`(v7) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L318c0a.  v5:= temp @kind wide;
  #L318c0c.  v7:= 0.4092797040939331D;
  #L318c16.  call temp:= `sin`(v7) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L318c1c.  v7:= temp @kind wide;
  #L318c1e.  v5:= v5 * v7 @kind double;
  #L318c22.  call temp:= `asin`(v5) @signature `Ljava/lang/Math;.asin:(D)D` @kind static;
  #L318c28.  v5:= temp @kind wide;
  #L318c2a.  v7:= 0.01745329238474369D;
  #L318c34.  v7:= v7 * v18 @kind double;
  #L318c38.  v9:= -0.10471975803375244D;
  #L318c42.  call temp:= `sin`(v9) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L318c48.  v9:= temp @kind wide;
  #L318c4a.  call temp:= `sin`(v7) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L318c50.  v11:= temp @kind wide;
  #L318c52.  call temp:= `sin`(v5) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L318c58.  v13:= temp @kind wide;
  #L318c5a.  v11:= v11 * v13 @kind double;
  #L318c5e.  v9:= v9 - v11 @kind double;
  #L318c60.  call temp:= `cos`(v7) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L318c66.  v7:= temp @kind wide;
  #L318c68.  call temp:= `cos`(v5) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L318c6e.  v5:= temp @kind wide;
  #L318c70.  v7:= v7 * v5 @kind double;
  #L318c74.  v9:= v9 / v7 @kind double;
  #L318c76.  v5:= 1I;
  #L318c78.  v6:= -1L;
  #L318c7c.  v11:= 1.0D;
  #L318c80.  v8:= dcmpl(v9, v11);
  #L318c84.  if v8 < 0 then goto L318c96;
  #L318c88.  v0.`g.k.c` @type ^`int` := v5;
  #L318c8c.  v0.`g.k.a` @type ^`long` := v6 @kind wide;
  #L318c90.  v0.`g.k.b` @type ^`long` := v6 @kind wide;
  #L318c94.  return @kind void;
  #L318c96.  v11:= -1.0D;
  #L318c9a.  v8:= 0I;
  #L318c9c.  v13:= dcmpg(v9, v11);
  #L318ca0.  if v13 > 0 then goto L318caa;
  #L318ca4.  v0.`g.k.c` @type ^`int` := v8;
  #L318ca8.  goto L318c8c;
  #L318caa.  call temp:= `acos`(v9) @signature `Ljava/lang/Math;.acos:(D)D` @kind static;
  #L318cb0.  v6:= temp @kind wide;
  #L318cb2.  v9:= 6.283185307179586D;
  #L318cbc.  v6:= v6 / v9 @kind double;
  #L318cbe.  v6:= (`float`) v6 @kind d2f;
  #L318cc0.  v6:= (`double`) v6 @kind f2d;
  #L318cc2.  v9:= v3 + v6 @kind double;
  #L318cc6.  v11:= 8.64E7D;
  #L318cd0.  v9:= v9 * v11 @kind double;
  #L318cd4.  call temp:= `round`(v9) @signature `Ljava/lang/Math;.round:(D)J` @kind static;
  #L318cda.  v9:= temp @kind wide;
  #L318cdc.  v9:= v9 + v1 @kind long;
  #L318cde.  v0.`g.k.a` @type ^`long` := v9 @kind wide;
  #L318ce2.  v3:= v3 - v6 @kind double;
  #L318ce4.  v3:= v3 * v11 @kind double;
  #L318ce8.  call temp:= `round`(v3) @signature `Ljava/lang/Math;.round:(D)J` @kind static;
  #L318cee.  v3:= temp @kind wide;
  #L318cf0.  v3:= v3 + v1 @kind long;
  #L318cf2.  v0.`g.k.b` @type ^`long` := v3 @kind wide;
  #L318cf6.  v1:= lcmp(v3, v16);
  #L318cfa.  if v1 >= 0 then goto L318d10;
  #L318cfe.  v1:= v0.`g.k.a` @type ^`long` @kind wide;
  #L318d02.  v3:= lcmp(v1, v16);
  #L318d06.  if v3 <= 0 then goto L318d10;
  #L318d0a.  v0.`g.k.c` @type ^`int` := v8;
  #L318d0e.  goto L318d14;
  #L318d10.  v0.`g.k.c` @type ^`int` := v5;
  #L318d14.  return @kind void;
}
