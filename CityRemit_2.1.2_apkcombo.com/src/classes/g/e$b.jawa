record `g.e$b` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `g.e` `g.e$b.o` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`g.e$b` v0 @kind this, `g.e` v1 @kind object) @signature `Lg/e$b;.<init>:(Lg/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3131b0.  v0.`g.e$b.o` @type ^`g.e` := v1 @kind object;
  #L3131b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3131ba.  return @kind void;
}
procedure `void` `run`(`g.e$b` v3 @kind this) @signature `Lg/e$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3131cc.  v0:= v3.`g.e$b.o` @type ^`g.e` @kind object;
  #L3131d0.  v1:= v0.`g.e.i0` @type ^`int`;
  #L3131d4.  v1:= v1 ^& 1;
  #L3131d8.  v2:= 0I;
  #L3131da.  if v1 == 0 then goto L3131e4;
  #L3131de.  call `W`(v0, v2) @signature `Lg/e;.W:(I)V` @kind virtual;
  #L3131e4.  v0:= v3.`g.e$b.o` @type ^`g.e` @kind object;
  #L3131e8.  v1:= v0.`g.e.i0` @type ^`int`;
  #L3131ec.  v1:= v1 ^& 4096;
  #L3131f0.  if v1 == 0 then goto L3131fe;
  #L3131f4.  v1:= 108I;
  #L3131f8.  call `W`(v0, v1) @signature `Lg/e;.W:(I)V` @kind virtual;
  #L3131fe.  v0:= v3.`g.e$b.o` @type ^`g.e` @kind object;
  #L313202.  v0.`g.e.h0` @type ^`boolean` := v2 @kind boolean;
  #L313206.  v0.`g.e.i0` @type ^`int` := v2;
  #L31320a.  return @kind void;
}
