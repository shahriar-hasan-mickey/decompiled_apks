record `u6.a` @kind class @AccessFlag PUBLIC extends `u6.c` @kind class {
  `java.lang.Object`[] `u6.a.o` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object`[] `u6.a.p` @AccessFlag PRIVATE_FINAL;
  `java.util.Comparator` `u6.a.q` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`u6.a` v2 @kind this, `java.util.Comparator` v3 @kind object) @signature `Lu6/a;.<init>:(Ljava/util/Comparator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L479840.  call `<init>`(v2) @signature `Lu6/c;.<init>:()V` @kind direct;
  #L479846.  v0:= 0I;
  #L479848.  v1:= new `java.lang.Object`[v0];
  #L47984c.  v2.`u6.a.o` @type ^`java.lang.Object`[] := v1 @kind object;
  #L479850.  v0:= new `java.lang.Object`[v0];
  #L479854.  v2.`u6.a.p` @type ^`java.lang.Object`[] := v0 @kind object;
  #L479858.  v2.`u6.a.q` @type ^`java.util.Comparator` := v3 @kind object;
  #L47985c.  return @kind void;
}
procedure `void` `<init>`(`u6.a` v0 @kind this, `java.util.Comparator` v1 @kind object, `java.lang.Object`[] v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lu6/a;.<init>:(Ljava/util/Comparator;[Ljava/lang/Object;[Ljava/lang/Object;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L479870.  call `<init>`(v0) @signature `Lu6/c;.<init>:()V` @kind direct;
  #L479876.  v0.`u6.a.o` @type ^`java.lang.Object`[] := v2 @kind object;
  #L47987a.  v0.`u6.a.p` @type ^`java.lang.Object`[] := v3 @kind object;
  #L47987e.  v0.`u6.a.q` @type ^`java.util.Comparator` := v1 @kind object;
  #L479882.  return @kind void;
}
procedure `java.lang.Object`[] `N`(`u6.a` v0 @kind object) @signature `Lu6/a;.N:(Lu6/a;)[Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L47953c.  v0:= v0.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L479540.  return v0 @kind object;
}
procedure `java.lang.Object`[] `O`(`u6.a` v0 @kind object) @signature `Lu6/a;.O:(Lu6/a;)[Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L479554.  v0:= v0.`u6.a.p` @type ^`java.lang.Object`[] @kind object;
  #L479558.  return v0 @kind object;
}
procedure `java.lang.Object`[] `Q`(`java.lang.Object`[] v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lu6/a;.Q:([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L47956c.  v0:= length @variable v3;
  #L47956e.  v0:= v0 + 1;
  #L479572.  v1:= new `java.lang.Object`[v0];
  #L479576.  v2:= 0I;
  #L479578.  call `arraycopy`(v3, v2, v1, v2, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L47957e.  v1[v4]:= v5 @kind object;
  #L479582.  v5:= v4 + 1;
  #L479586.  v0:= v0 - v4 @kind int;
  #L479588.  v0:= v0 + -1;
  #L47958c.  call `arraycopy`(v3, v4, v1, v5, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L479592.  return v1 @kind object;
}
procedure `u6.a` `S`(`java.util.List` v4 @kind object, `java.util.Map` v5 @kind object, `u6.c$a$a` v6 @kind object, `java.util.Comparator` v7 @kind object) @signature `Lu6/a;.S:(Ljava/util/List;Ljava/util/Map;Lu6/c$a$a;Ljava/util/Comparator;)Lu6/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L47966c.  call `sort`(v4, v7) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L479672.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L479678.  v0:= temp;
  #L47967a.  v1:= new `java.lang.Object`[v0];
  #L47967e.  v0:= new `java.lang.Object`[v0];
  #L479682.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L479688.  v4:= temp @kind object;
  #L47968a.  v2:= 0I;
  #L47968c.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L479692.  v3:= temp;
  #L479694.  if v3 == 0 then goto L4796be;
  #L479698.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L47969e.  v3:= temp @kind object;
  #L4796a0.  v1[v2]:= v3 @kind object;
  #L4796a4.  call temp:= `a`(v6, v3) @signature `Lu6/c$a$a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4796aa.  v3:= temp @kind object;
  #L4796ac.  call temp:= `get`(v5, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4796b2.  v3:= temp @kind object;
  #L4796b4.  v0[v2]:= v3 @kind object;
  #L4796b8.  v2:= v2 + 1;
  #L4796bc.  goto L47968c;
  #L4796be.  v4:= new `u6.a`;
  #L4796c2.  call `<init>`(v4, v7, v1, v0) @signature `Lu6/a;.<init>:(Ljava/util/Comparator;[Ljava/lang/Object;[Ljava/lang/Object;)V` @kind direct;
  #L4796c8.  return v4 @kind object;
}
procedure `int` `T`(`u6.a` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lu6/a;.T:(Ljava/lang/Object;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4793e4.  v0:= v6.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L4793e8.  v1:= length @variable v0;
  #L4793ea.  v2:= 0I;
  #L4793ec.  v3:= 0I;
  #L4793ee.  if v2 >= v1 then goto L479412;
  #L4793f2.  v4:= v0[v2] @kind object;
  #L4793f6.  v5:= v6.`u6.a.q` @type ^`java.util.Comparator` @kind object;
  #L4793fa.  call temp:= `compare`(v5, v7, v4) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L479400.  v4:= temp;
  #L479402.  if v4 != 0 then goto L479408;
  #L479406.  return v3;
  #L479408.  v3:= v3 + 1;
  #L47940c.  v2:= v2 + 1;
  #L479410.  goto L4793ee;
  #L479412.  v7:= -1I;
  #L479414.  return v7;
}
procedure `int` `Y`(`u6.a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lu6/a;.Y:(Ljava/lang/Object;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L479428.  v0:= 0I;
  #L47942a.  v1:= v3.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L47942e.  v2:= length @variable v1;
  #L479430.  if v0 >= v2 then goto L47944e;
  #L479434.  v2:= v3.`u6.a.q` @type ^`java.util.Comparator` @kind object;
  #L479438.  v1:= v1[v0] @kind object;
  #L47943c.  call temp:= `compare`(v2, v1, v4) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L479442.  v1:= temp;
  #L479444.  if v1 >= 0 then goto L47944e;
  #L479448.  v0:= v0 + 1;
  #L47944c.  goto L47942a;
  #L47944e.  return v0;
}
procedure `u6.a` `a0`(`java.util.Map` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lu6/a;.a0:(Ljava/util/Map;Ljava/util/Comparator;)Lu6/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4796dc.  v0:= new `java.util.ArrayList`;
  #L4796e0.  call temp:= `keySet`(v2) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L4796e6.  v1:= temp @kind object;
  #L4796e8.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4796ee.  call temp:= `e`() @signature `Lu6/c$a;.e:()Lu6/c$a$a;` @kind static;
  #L4796f4.  v1:= temp @kind object;
  #L4796f6.  call temp:= `S`(v0, v2, v1, v3) @signature `Lu6/a;.S:(Ljava/util/List;Ljava/util/Map;Lu6/c$a$a;Ljava/util/Comparator;)Lu6/a;` @kind static;
  #L4796fc.  v2:= temp @kind object;
  #L4796fe.  return v2 @kind object;
}
procedure `java.util.Iterator` `b0`(`u6.a` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Lu6/a;.b0:(IZ)Ljava/util/Iterator;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L47962c.  v0:= new `u6.a$a`;
  #L479630.  call `<init>`(v0, v1, v2, v3) @signature `Lu6/a$a;.<init>:(Lu6/a;IZ)V` @kind direct;
  #L479636.  return v0 @kind object;
}
procedure `java.lang.Object`[] `c0`(`java.lang.Object`[] v3 @kind object, `int` v4 ) @signature `Lu6/a;.c0:([Ljava/lang/Object;I)[Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4795a4.  v0:= length @variable v3;
  #L4795a6.  v0:= v0 + -1;
  #L4795aa.  v1:= new `java.lang.Object`[v0];
  #L4795ae.  v2:= 0I;
  #L4795b0.  call `arraycopy`(v3, v2, v1, v2, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4795b6.  v2:= v4 + 1;
  #L4795ba.  v0:= v0 - v4 @kind int;
  #L4795bc.  call `arraycopy`(v3, v2, v1, v4, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4795c2.  return v1 @kind object;
}
procedure `java.lang.Object`[] `d0`(`java.lang.Object`[] v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lu6/a;.d0:([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4795d4.  v0:= length @variable v3;
  #L4795d6.  v1:= new `java.lang.Object`[v0];
  #L4795da.  v2:= 0I;
  #L4795dc.  call `arraycopy`(v3, v2, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4795e2.  v1[v4]:= v5 @kind object;
  #L4795e6.  return v1 @kind object;
}
procedure `u6.c` `G`(`u6.a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lu6/a;.G:(Ljava/lang/Object;)Lu6/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4797f8.  call temp:= `T`(v3, v4) @signature `Lu6/a;.T:(Ljava/lang/Object;)I` @kind direct;
  #L4797fe.  v4:= temp;
  #L479800.  v0:= -1I;
  #L479802.  if v4 != v0 then goto L479808;
  #L479806.  return v3 @kind object;
  #L479808.  v0:= v3.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L47980c.  call temp:= `c0`(v0, v4) @signature `Lu6/a;.c0:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L479812.  v0:= temp @kind object;
  #L479814.  v1:= v3.`u6.a.p` @type ^`java.lang.Object`[] @kind object;
  #L479818.  call temp:= `c0`(v1, v4) @signature `Lu6/a;.c0:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L47981e.  v4:= temp @kind object;
  #L479820.  v1:= new `u6.a`;
  #L479824.  v2:= v3.`u6.a.q` @type ^`java.util.Comparator` @kind object;
  #L479828.  call `<init>`(v1, v2, v0, v4) @signature `Lu6/a;.<init>:(Ljava/util/Comparator;[Ljava/lang/Object;[Ljava/lang/Object;)V` @kind direct;
  #L47982e.  return v1 @kind object;
}
procedure `java.util.Iterator` `W`(`u6.a` v2 @kind this) @signature `Lu6/a;.W:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L479648.  v0:= v2.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L47964c.  v0:= length @variable v0;
  #L47964e.  v1:= 1I;
  #L479650.  v0:= v0 - v1 @kind int;
  #L479652.  call temp:= `b0`(v2, v0, v1) @signature `Lu6/a;.b0:(IZ)Ljava/util/Iterator;` @kind direct;
  #L479658.  v0:= temp @kind object;
  #L47965a.  return v0 @kind object;
}
procedure `boolean` `b`(`u6.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lu6/a;.b:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479398.  call temp:= `T`(v1, v2) @signature `Lu6/a;.T:(Ljava/lang/Object;)I` @kind direct;
  #L47939e.  v2:= temp;
  #L4793a0.  v0:= -1I;
  #L4793a2.  if v2 == v0 then goto L4793aa;
  #L4793a6.  v2:= 1I;
  #L4793a8.  goto L4793ac;
  #L4793aa.  v2:= 0I;
  #L4793ac.  return v2;
}
procedure `java.lang.Object` `f`(`u6.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lu6/a;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479478.  call temp:= `T`(v1, v2) @signature `Lu6/a;.T:(Ljava/lang/Object;)I` @kind direct;
  #L47947e.  v2:= temp;
  #L479480.  v0:= -1I;
  #L479482.  if v2 == v0 then goto L479490;
  #L479486.  v0:= v1.`u6.a.p` @type ^`java.lang.Object`[] @kind object;
  #L47948a.  v2:= v0[v2] @kind object;
  #L47948e.  goto L479492;
  #L479490.  v2:= 0I;
  #L479492.  return v2 @kind object;
}
procedure `java.util.Comparator` `h`(`u6.a` v1 @kind this) @signature `Lu6/a;.h:()Ljava/util/Comparator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4795f8.  v0:= v1.`u6.a.q` @type ^`java.util.Comparator` @kind object;
  #L4795fc.  return v0 @kind object;
}
procedure `boolean` `isEmpty`(`u6.a` v1 @kind this) @signature `Lu6/a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4793c0.  v0:= v1.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L4793c4.  v0:= length @variable v0;
  #L4793c6.  if v0 != 0 then goto L4793ce;
  #L4793ca.  v0:= 1I;
  #L4793cc.  goto L4793d0;
  #L4793ce.  v0:= 0I;
  #L4793d0.  return v0;
}
procedure `java.util.Iterator` `iterator`(`u6.a` v1 @kind this) @signature `Lu6/a;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479610.  v0:= 0I;
  #L479612.  call temp:= `b0`(v1, v0, v0) @signature `Lu6/a;.b0:(IZ)Ljava/util/Iterator;` @kind direct;
  #L479618.  v0:= temp @kind object;
  #L47961a.  return v0 @kind object;
}
procedure `java.lang.Object` `l`(`u6.a` v2 @kind this) @signature `Lu6/a;.l:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4794a4.  v0:= v2.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L4794a8.  v1:= length @variable v0;
  #L4794aa.  if v1 <= 0 then goto L4794ba;
  #L4794ae.  v1:= length @variable v0;
  #L4794b0.  v1:= v1 + -1;
  #L4794b4.  v0:= v0[v1] @kind object;
  #L4794b8.  goto L4794bc;
  #L4794ba.  v0:= 0I;
  #L4794bc.  return v0 @kind object;
}
procedure `java.lang.Object` `n`(`u6.a` v2 @kind this) @signature `Lu6/a;.n:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4794d0.  v0:= v2.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L4794d4.  v1:= length @variable v0;
  #L4794d6.  if v1 <= 0 then goto L4794e2;
  #L4794da.  v1:= 0I;
  #L4794dc.  v0:= v0[v1] @kind object;
  #L4794e0.  goto L4794e4;
  #L4794e2.  v0:= 0I;
  #L4794e4.  return v0 @kind object;
}
procedure `java.lang.Object` `p`(`u6.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lu6/a;.p:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4794f8.  call temp:= `T`(v1, v2) @signature `Lu6/a;.T:(Ljava/lang/Object;)I` @kind direct;
  #L4794fe.  v2:= temp;
  #L479500.  v0:= -1I;
  #L479502.  if v2 == v0 then goto L47951c;
  #L479506.  if v2 <= 0 then goto L479518;
  #L47950a.  v0:= v1.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L47950e.  v2:= v2 + -1;
  #L479512.  v2:= v0[v2] @kind object;
  #L479516.  goto L47951a;
  #L479518.  v2:= 0I;
  #L47951a.  return v2 @kind object;
  #L47951c.  v2:= new `java.lang.IllegalArgumentException`;
  #L479520.  v0:= "Can't find predecessor of nonexistent key" @kind object;
  #L479524.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47952a.  throw v2;
}
procedure `int` `size`(`u6.a` v1 @kind this) @signature `Lu6/a;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479460.  v0:= v1.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L479464.  v0:= length @variable v0;
  #L479466.  return v0;
}
procedure `void` `u`(`u6.a` v3 @kind this, `u6.h$b` v4 @kind object) @signature `Lu6/a;.u:(Lu6/h$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L479894.  v0:= 0I;
  #L479896.  v1:= v3.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L47989a.  v2:= length @variable v1;
  #L47989c.  if v0 >= v2 then goto L4798b8;
  #L4798a0.  v1:= v1[v0] @kind object;
  #L4798a4.  v2:= v3.`u6.a.p` @type ^`java.lang.Object`[] @kind object;
  #L4798a8.  v2:= v2[v0] @kind object;
  #L4798ac.  call `a`(v4, v1, v2) @signature `Lu6/h$b;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L4798b2.  v0:= v0 + 1;
  #L4798b6.  goto L479896;
  #L4798b8.  return @kind void;
}
procedure `u6.c` `y`(`u6.a` v4 @kind this, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lu6/a;.y:(Ljava/lang/Object;Ljava/lang/Object;)Lu6/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L479710.  call temp:= `T`(v4, v5) @signature `Lu6/a;.T:(Ljava/lang/Object;)I` @kind direct;
  #L479716.  v0:= temp;
  #L479718.  v1:= -1I;
  #L47971a.  if v0 == v1 then goto L47975c;
  #L47971e.  v1:= v4.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L479722.  v2:= v1[v0] @kind object;
  #L479726.  if v2 != v5 then goto L479738;
  #L47972a.  v2:= v4.`u6.a.p` @type ^`java.lang.Object`[] @kind object;
  #L47972e.  v2:= v2[v0] @kind object;
  #L479732.  if v2 != v6 then goto L479738;
  #L479736.  return v4 @kind object;
  #L479738.  call temp:= `d0`(v1, v0, v5) @signature `Lu6/a;.d0:([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L47973e.  v5:= temp @kind object;
  #L479740.  v1:= v4.`u6.a.p` @type ^`java.lang.Object`[] @kind object;
  #L479744.  call temp:= `d0`(v1, v0, v6) @signature `Lu6/a;.d0:([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L47974a.  v6:= temp @kind object;
  #L47974c.  v0:= new `u6.a`;
  #L479750.  v1:= v4.`u6.a.q` @type ^`java.util.Comparator` @kind object;
  #L479754.  call `<init>`(v0, v1, v5, v6) @signature `Lu6/a;.<init>:(Ljava/util/Comparator;[Ljava/lang/Object;[Ljava/lang/Object;)V` @kind direct;
  #L47975a.  return v0 @kind object;
  #L47975c.  v0:= v4.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L479760.  v0:= length @variable v0;
  #L479762.  v1:= 25I;
  #L479766.  if v0 <= v1 then goto L4797b6;
  #L47976a.  v0:= new `java.util.HashMap`;
  #L47976e.  v1:= v4.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L479772.  v1:= length @variable v1;
  #L479774.  v1:= v1 + 1;
  #L479778.  call `<init>`(v0, v1) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L47977e.  v1:= 0I;
  #L479780.  v2:= v4.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L479784.  v3:= length @variable v2;
  #L479786.  if v1 >= v3 then goto L4797a2;
  #L47978a.  v2:= v2[v1] @kind object;
  #L47978e.  v3:= v4.`u6.a.p` @type ^`java.lang.Object`[] @kind object;
  #L479792.  v3:= v3[v1] @kind object;
  #L479796.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L47979c.  v1:= v1 + 1;
  #L4797a0.  goto L479780;
  #L4797a2.  call temp:= `put`(v0, v5, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4797a8.  v5:= v4.`u6.a.q` @type ^`java.util.Comparator` @kind object;
  #L4797ac.  call temp:= `O`(v0, v5) @signature `Lu6/k;.O:(Ljava/util/Map;Ljava/util/Comparator;)Lu6/k;` @kind static;
  #L4797b2.  v5:= temp @kind object;
  #L4797b4.  return v5 @kind object;
  #L4797b6.  call temp:= `Y`(v4, v5) @signature `Lu6/a;.Y:(Ljava/lang/Object;)I` @kind direct;
  #L4797bc.  v0:= temp;
  #L4797be.  v1:= v4.`u6.a.o` @type ^`java.lang.Object`[] @kind object;
  #L4797c2.  call temp:= `Q`(v1, v0, v5) @signature `Lu6/a;.Q:([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L4797c8.  v5:= temp @kind object;
  #L4797ca.  v1:= v4.`u6.a.p` @type ^`java.lang.Object`[] @kind object;
  #L4797ce.  call temp:= `Q`(v1, v0, v6) @signature `Lu6/a;.Q:([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L4797d4.  v6:= temp @kind object;
  #L4797d6.  v0:= new `u6.a`;
  #L4797da.  v1:= v4.`u6.a.q` @type ^`java.util.Comparator` @kind object;
  #L4797de.  call `<init>`(v0, v1, v5, v6) @signature `Lu6/a;.<init>:(Ljava/util/Comparator;[Ljava/lang/Object;[Ljava/lang/Object;)V` @kind direct;
  #L4797e4.  return v0 @kind object;
}
