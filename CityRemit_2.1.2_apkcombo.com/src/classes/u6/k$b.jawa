record `u6.k$b` @kind class @AccessFlag  {
  `java.util.List` `u6.k$b.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `u6.k$b.b` @AccessFlag PRIVATE_FINAL;
  `u6.c$a$a` `u6.k$b.c` @AccessFlag PRIVATE_FINAL;
  `u6.j` `u6.k$b.d` @AccessFlag PRIVATE;
  `u6.j` `u6.k$b.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`u6.k$b` v0 @kind this, `java.util.List` v1 @kind object, `java.util.Map` v2 @kind object, `u6.c$a$a` v3 @kind object) @signature `Lu6/k$b;.<init>:(Ljava/util/List;Ljava/util/Map;Lu6/c$a$a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L47ad7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47ad82.  v0.`u6.k$b.a` @type ^`java.util.List` := v1 @kind object;
  #L47ad86.  v0.`u6.k$b.b` @type ^`java.util.Map` := v2 @kind object;
  #L47ad8a.  v0.`u6.k$b.c` @type ^`u6.c$a$a` := v3 @kind object;
  #L47ad8e.  return @kind void;
}
procedure `u6.h` `a`(`u6.k$b` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lu6/k$b;.a:(II)Lu6/h;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47ac48.  if v5 != 0 then goto L47ac56;
  #L47ac4c.  call temp:= `j`() @signature `Lu6/g;.j:()Lu6/g;` @kind static;
  #L47ac52.  v4:= temp @kind object;
  #L47ac54.  return v4 @kind object;
  #L47ac56.  v0:= 1I;
  #L47ac58.  if v5 != v0 then goto L47ac7e;
  #L47ac5c.  v5:= v3.`u6.k$b.a` @type ^`java.util.List` @kind object;
  #L47ac60.  call temp:= `get`(v5, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L47ac66.  v4:= temp @kind object;
  #L47ac68.  v5:= new `u6.f`;
  #L47ac6c.  call temp:= `d`(v3, v4) @signature `Lu6/k$b;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L47ac72.  v0:= temp @kind object;
  #L47ac74.  v1:= 0I;
  #L47ac76.  call `<init>`(v5, v4, v0, v1, v1) @signature `Lu6/f;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)V` @kind direct;
  #L47ac7c.  return v5 @kind object;
  #L47ac7e.  v5:= v5 / 2;
  #L47ac82.  v0:= v4 + v5 @kind int;
  #L47ac86.  call temp:= `a`(v3, v4, v5) @signature `Lu6/k$b;.a:(II)Lu6/h;` @kind direct;
  #L47ac8c.  v4:= temp @kind object;
  #L47ac8e.  v1:= v0 + 1;
  #L47ac92.  call temp:= `a`(v3, v1, v5) @signature `Lu6/k$b;.a:(II)Lu6/h;` @kind direct;
  #L47ac98.  v5:= temp @kind object;
  #L47ac9a.  v1:= v3.`u6.k$b.a` @type ^`java.util.List` @kind object;
  #L47ac9e.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L47aca4.  v0:= temp @kind object;
  #L47aca6.  v1:= new `u6.f`;
  #L47acaa.  call temp:= `d`(v3, v0) @signature `Lu6/k$b;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L47acb0.  v2:= temp @kind object;
  #L47acb2.  call `<init>`(v1, v0, v2, v4, v5) @signature `Lu6/f;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)V` @kind direct;
  #L47acb8.  return v1 @kind object;
}
procedure `u6.k` `b`(`java.util.List` v3 @kind object, `java.util.Map` v4 @kind object, `u6.c$a$a` v5 @kind object, `java.util.Comparator` v6 @kind object) @signature `Lu6/k$b;.b:(Ljava/util/List;Ljava/util/Map;Lu6/c$a$a;Ljava/util/Comparator;)Lu6/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L47accc.  v0:= new `u6.k$b`;
  #L47acd0.  call `<init>`(v0, v3, v4, v5) @signature `Lu6/k$b;.<init>:(Ljava/util/List;Ljava/util/Map;Lu6/c$a$a;)V` @kind direct;
  #L47acd6.  call `sort`(v3, v6) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L47acdc.  v4:= new `u6.k$b$a`;
  #L47ace0.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L47ace6.  v5:= temp;
  #L47ace8.  call `<init>`(v4, v5) @signature `Lu6/k$b$a;.<init>:(I)V` @kind direct;
  #L47acee.  call temp:= `iterator`(v4) @signature `Lu6/k$b$a;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L47acf4.  v4:= temp @kind object;
  #L47acf6.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L47acfc.  v3:= temp;
  #L47acfe.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L47ad04.  v5:= temp;
  #L47ad06.  if v5 == 0 then goto L47ad4c;
  #L47ad0a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L47ad10.  v5:= temp @kind object;
  #L47ad12.  v5:= (`u6.k$b$b`) v5 @kind object;
  #L47ad16.  v1:= v5.`u6.k$b$b.b` @type ^`int`;
  #L47ad1a.  v3:= v3 - v1 @kind int;
  #L47ad1c.  v2:= v5.`u6.k$b$b.a` @type ^`boolean` @kind boolean;
  #L47ad20.  if v2 == 0 then goto L47ad30;
  #L47ad24.  v5:= `@@u6.h$a.p` @type ^`u6.h$a` @kind object;
  #L47ad28.  call `c`(v0, v5, v1, v3) @signature `Lu6/k$b;.c:(Lu6/h$a;II)V` @kind direct;
  #L47ad2e.  goto L47acfe;
  #L47ad30.  v2:= `@@u6.h$a.p` @type ^`u6.h$a` @kind object;
  #L47ad34.  call `c`(v0, v2, v1, v3) @signature `Lu6/k$b;.c:(Lu6/h$a;II)V` @kind direct;
  #L47ad3a.  v5:= v5.`u6.k$b$b.b` @type ^`int`;
  #L47ad3e.  v3:= v3 - v5 @kind int;
  #L47ad40.  v1:= `@@u6.h$a.o` @type ^`u6.h$a` @kind object;
  #L47ad44.  call `c`(v0, v1, v5, v3) @signature `Lu6/k$b;.c:(Lu6/h$a;II)V` @kind direct;
  #L47ad4a.  goto L47acfe;
  #L47ad4c.  v3:= new `u6.k`;
  #L47ad50.  v4:= v0.`u6.k$b.d` @type ^`u6.j` @kind object;
  #L47ad54.  if v4 != 0 then goto L47ad60;
  #L47ad58.  call temp:= `j`() @signature `Lu6/g;.j:()Lu6/g;` @kind static;
  #L47ad5e.  v4:= temp @kind object;
  #L47ad60.  v5:= 0I;
  #L47ad62.  call `<init>`(v3, v4, v6, v5) @signature `Lu6/k;.<init>:(Lu6/h;Ljava/util/Comparator;Lu6/k$a;)V` @kind direct;
  #L47ad68.  return v3 @kind object;
}
procedure `void` `c`(`u6.k$b` v2 @kind this, `u6.h$a` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lu6/k$b;.c:(Lu6/h$a;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L47ada0.  v0:= v5 + 1;
  #L47ada4.  v4:= v4 + -1;
  #L47ada8.  call temp:= `a`(v2, v0, v4) @signature `Lu6/k$b;.a:(II)Lu6/h;` @kind direct;
  #L47adae.  v4:= temp @kind object;
  #L47adb0.  v0:= v2.`u6.k$b.a` @type ^`java.util.List` @kind object;
  #L47adb4.  call temp:= `get`(v0, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L47adba.  v5:= temp @kind object;
  #L47adbc.  v0:= `@@u6.h$a.o` @type ^`u6.h$a` @kind object;
  #L47adc0.  v1:= 0I;
  #L47adc2.  if v3 != v0 then goto L47adda;
  #L47adc6.  v3:= new `u6.i`;
  #L47adca.  call temp:= `d`(v2, v5) @signature `Lu6/k$b;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L47add0.  v0:= temp @kind object;
  #L47add2.  call `<init>`(v3, v5, v0, v1, v4) @signature `Lu6/i;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)V` @kind direct;
  #L47add8.  goto L47adec;
  #L47adda.  v3:= new `u6.f`;
  #L47adde.  call temp:= `d`(v2, v5) @signature `Lu6/k$b;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L47ade4.  v0:= temp @kind object;
  #L47ade6.  call `<init>`(v3, v5, v0, v1, v4) @signature `Lu6/f;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)V` @kind direct;
  #L47adec.  v4:= v2.`u6.k$b.d` @type ^`u6.j` @kind object;
  #L47adf0.  if v4 != 0 then goto L47adfa;
  #L47adf4.  v2.`u6.k$b.d` @type ^`u6.j` := v3 @kind object;
  #L47adf8.  goto L47ae04;
  #L47adfa.  v4:= v2.`u6.k$b.e` @type ^`u6.j` @kind object;
  #L47adfe.  call `u`(v4, v3) @signature `Lu6/j;.u:(Lu6/h;)V` @kind virtual;
  #L47ae04.  v2.`u6.k$b.e` @type ^`u6.j` := v3 @kind object;
  #L47ae08.  return @kind void;
}
procedure `java.lang.Object` `d`(`u6.k$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lu6/k$b;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L47ac1c.  v0:= v2.`u6.k$b.b` @type ^`java.util.Map` @kind object;
  #L47ac20.  v1:= v2.`u6.k$b.c` @type ^`u6.c$a$a` @kind object;
  #L47ac24.  call temp:= `a`(v1, v3) @signature `Lu6/c$a$a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L47ac2a.  v3:= temp @kind object;
  #L47ac2c.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L47ac32.  v3:= temp @kind object;
  #L47ac34.  return v3 @kind object;
}
