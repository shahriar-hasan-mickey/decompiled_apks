record `u6.l` @kind class @AccessFlag PUBLIC extends `java.util.Comparator` @kind interface {
}
global `u6.l` `@@u6.l.o` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lu6/l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L47b22c.  v0:= new `u6.l`;
  #L47b230.  call `<init>`(v0) @signature `Lu6/l;.<init>:()V` @kind direct;
  #L47b236.  `@@u6.l.o` @type ^`u6.l` := v0 @kind object;
  #L47b23a.  return @kind void;
}
procedure `void` `<init>`(`u6.l` v0 @kind this) @signature `Lu6/l;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L47b24c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47b252.  return @kind void;
}
procedure `u6.l` `b`(`java.lang.Class` v0 @kind object) @signature `Lu6/l;.b:(Ljava/lang/Class;)Lu6/l;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L47b214.  v0:= `@@u6.l.o` @type ^`u6.l` @kind object;
  #L47b218.  return v0 @kind object;
}
procedure `int` `a`(`u6.l` v0 @kind this, `java.lang.Comparable` v1 @kind object, `java.lang.Comparable` v2 @kind object) @signature `Lu6/l;.a:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @AccessFlag PUBLIC {
    temp;

  #L47b1d4.  call temp:= `compareTo`(v1, v2) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L47b1da.  v1:= temp;
  #L47b1dc.  return v1;
}
procedure `int` `compare`(`u6.l` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lu6/l;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L47b1f0.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L47b1f4.  v2:= (`java.lang.Comparable`) v2 @kind object;
  #L47b1f8.  call temp:= `a`(v0, v1, v2) @signature `Lu6/l;.a:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I` @kind virtual;
  #L47b1fe.  v1:= temp;
  #L47b200.  return v1;
}
