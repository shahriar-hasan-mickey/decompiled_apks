record `u6.a$a` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `int` `u6.a$a.o` @AccessFlag ;
  `int` `u6.a$a.p` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `u6.a$a.q` @AccessFlag FINAL_SYNTHETIC;
  `u6.a` `u6.a$a.r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`u6.a$a` v0 @kind this, `u6.a` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lu6/a$a;.<init>:(Lu6/a;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L479350.  v0.`u6.a$a.r` @type ^`u6.a` := v1 @kind object;
  #L479354.  v0.`u6.a$a.p` @type ^`int` := v2;
  #L479358.  v0.`u6.a$a.q` @type ^`boolean` := v3 @kind boolean;
  #L47935c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L479362.  v0.`u6.a$a.o` @type ^`int` := v2;
  #L479366.  return @kind void;
}
procedure `java.util.Map$Entry` `a`(`u6.a$a` v4 @kind this) @signature `Lu6/a$a;.a:()Ljava/util/Map$Entry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4792f4.  v0:= v4.`u6.a$a.r` @type ^`u6.a` @kind object;
  #L4792f8.  call temp:= `N`(v0) @signature `Lu6/a;.N:(Lu6/a;)[Ljava/lang/Object;` @kind static;
  #L4792fe.  v0:= temp @kind object;
  #L479300.  v1:= v4.`u6.a$a.o` @type ^`int`;
  #L479304.  v0:= v0[v1] @kind object;
  #L479308.  v1:= v4.`u6.a$a.r` @type ^`u6.a` @kind object;
  #L47930c.  call temp:= `O`(v1) @signature `Lu6/a;.O:(Lu6/a;)[Ljava/lang/Object;` @kind static;
  #L479312.  v1:= temp @kind object;
  #L479314.  v2:= v4.`u6.a$a.o` @type ^`int`;
  #L479318.  v1:= v1[v2] @kind object;
  #L47931c.  v3:= v4.`u6.a$a.q` @type ^`boolean` @kind boolean;
  #L479320.  if v3 == 0 then goto L47932a;
  #L479324.  v2:= v2 + -1;
  #L479328.  goto L47932e;
  #L47932a.  v2:= v2 + 1;
  #L47932e.  v4.`u6.a$a.o` @type ^`int` := v2;
  #L479332.  v2:= new `java.util.AbstractMap$SimpleImmutableEntry`;
  #L479336.  call `<init>`(v2, v0, v1) @signature `Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L47933c.  return v2 @kind object;
}
procedure `boolean` `hasNext`(`u6.a$a` v4 @kind this) @signature `Lu6/a$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L479294.  v0:= v4.`u6.a$a.q` @type ^`boolean` @kind boolean;
  #L479298.  v1:= 1I;
  #L47929a.  v2:= 0I;
  #L47929c.  if v0 == 0 then goto L4792aa;
  #L4792a0.  v0:= v4.`u6.a$a.o` @type ^`int`;
  #L4792a4.  if v0 < 0 then goto L4792c2;
  #L4792a8.  goto L4792c4;
  #L4792aa.  v0:= v4.`u6.a$a.o` @type ^`int`;
  #L4792ae.  v3:= v4.`u6.a$a.r` @type ^`u6.a` @kind object;
  #L4792b2.  call temp:= `N`(v3) @signature `Lu6/a;.N:(Lu6/a;)[Ljava/lang/Object;` @kind static;
  #L4792b8.  v3:= temp @kind object;
  #L4792ba.  v3:= length @variable v3;
  #L4792bc.  if v0 >= v3 then goto L4792c2;
  #L4792c0.  goto L4792c4;
  #L4792c2.  v1:= 0I;
  #L4792c4.  return v1;
}
procedure `java.lang.Object` `next`(`u6.a$a` v1 @kind this) @signature `Lu6/a$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4792d8.  call temp:= `a`(v1) @signature `Lu6/a$a;.a:()Ljava/util/Map$Entry;` @kind virtual;
  #L4792de.  v0:= temp @kind object;
  #L4792e0.  return v0 @kind object;
}
procedure `void` `remove`(`u6.a$a` v2 @kind this) @signature `Lu6/a$a;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L479378.  v0:= new `java.lang.UnsupportedOperationException`;
  #L47937c.  v1:= "Can't remove elements from ImmutableSortedMap" @kind object;
  #L479380.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L479386.  throw v0;
}
