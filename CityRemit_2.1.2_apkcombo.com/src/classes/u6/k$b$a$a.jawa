record `u6.k$b$a$a` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `int` `u6.k$b$a$a.o` @AccessFlag PRIVATE;
  `u6.k$b$a` `u6.k$b$a$a.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`u6.k$b$a$a` v0 @kind this, `u6.k$b$a` v1 @kind object) @signature `Lu6/k$b$a$a;.<init>:(Lu6/k$b$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47ab1c.  v0.`u6.k$b$a$a.p` @type ^`u6.k$b$a` := v1 @kind object;
  #L47ab20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47ab26.  call temp:= `b`(v1) @signature `Lu6/k$b$a;.b:(Lu6/k$b$a;)I` @kind static;
  #L47ab2c.  v1:= temp;
  #L47ab2e.  v1:= v1 + -1;
  #L47ab32.  v0.`u6.k$b$a$a.o` @type ^`int` := v1;
  #L47ab36.  return @kind void;
}
procedure `u6.k$b$b` `a`(`u6.k$b$a$a` v7 @kind this) @signature `Lu6/k$b$a$a;.a:()Lu6/k$b$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L47aaac.  v0:= v7.`u6.k$b$a$a.p` @type ^`u6.k$b$a` @kind object;
  #L47aab0.  call temp:= `f`(v0) @signature `Lu6/k$b$a;.f:(Lu6/k$b$a;)J` @kind static;
  #L47aab6.  v0:= temp @kind wide;
  #L47aab8.  v2:= v7.`u6.k$b$a$a.o` @type ^`int`;
  #L47aabc.  v3:= 1I;
  #L47aabe.  v2:= v3 ^< v2 @kind int;
  #L47aac2.  v4:= (`long`) v2 @kind i2l;
  #L47aac4.  v0:= v0 ^& v4 @kind long;
  #L47aac6.  v2:= new `u6.k$b$b`;
  #L47aaca.  call `<init>`(v2) @signature `Lu6/k$b$b;.<init>:()V` @kind direct;
  #L47aad0.  v4:= 0L;
  #L47aad4.  v6:= lcmp(v0, v4);
  #L47aad8.  if v6 != 0 then goto L47aae0;
  #L47aadc.  v0:= 1I;
  #L47aade.  goto L47aae2;
  #L47aae0.  v0:= 0I;
  #L47aae2.  v2.`u6.k$b$b.a` @type ^`boolean` := v0 @kind boolean;
  #L47aae6.  v0:= 2.0D;
  #L47aaea.  v4:= v7.`u6.k$b$a$a.o` @type ^`int`;
  #L47aaee.  v4:= (`double`) v4 @kind i2d;
  #L47aaf0.  call temp:= `pow`(v0, v4) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L47aaf6.  v0:= temp @kind wide;
  #L47aaf8.  v0:= (`int`) v0 @kind d2i;
  #L47aafa.  v2.`u6.k$b$b.b` @type ^`int` := v0;
  #L47aafe.  v0:= v7.`u6.k$b$a$a.o` @type ^`int`;
  #L47ab02.  v0:= v0 - v3 @kind int;
  #L47ab04.  v7.`u6.k$b$a$a.o` @type ^`int` := v0;
  #L47ab08.  return v2 @kind object;
}
procedure `boolean` `hasNext`(`u6.k$b$a$a` v1 @kind this) @signature `Lu6/k$b$a$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47aa70.  v0:= v1.`u6.k$b$a$a.o` @type ^`int`;
  #L47aa74.  if v0 < 0 then goto L47aa7c;
  #L47aa78.  v0:= 1I;
  #L47aa7a.  goto L47aa7e;
  #L47aa7c.  v0:= 0I;
  #L47aa7e.  return v0;
}
procedure `java.lang.Object` `next`(`u6.k$b$a$a` v1 @kind this) @signature `Lu6/k$b$a$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L47aa90.  call temp:= `a`(v1) @signature `Lu6/k$b$a$a;.a:()Lu6/k$b$b;` @kind virtual;
  #L47aa96.  v0:= temp @kind object;
  #L47aa98.  return v0 @kind object;
}
procedure `void` `remove`(`u6.k$b$a$a` v0 @kind this) @signature `Lu6/k$b$a$a;.remove:()V` @AccessFlag PUBLIC {
    temp;

  #L47ab48.  return @kind void;
}
