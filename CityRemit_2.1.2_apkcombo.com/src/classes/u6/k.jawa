record `u6.k` @kind class @AccessFlag PUBLIC extends `u6.c` @kind class {
  `u6.h` `u6.k.o` @AccessFlag PRIVATE;
  `java.util.Comparator` `u6.k.p` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`u6.k` v0 @kind this, `u6.h` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lu6/k;.<init>:(Lu6/h;Ljava/util/Comparator;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L47b180.  call `<init>`(v0) @signature `Lu6/c;.<init>:()V` @kind direct;
  #L47b186.  v0.`u6.k.o` @type ^`u6.h` := v1 @kind object;
  #L47b18a.  v0.`u6.k.p` @type ^`java.util.Comparator` := v2 @kind object;
  #L47b18e.  return @kind void;
}
procedure `void` `<init>`(`u6.k` v0 @kind this, `u6.h` v1 @kind object, `java.util.Comparator` v2 @kind object, `u6.k$a` v3 @kind object) @signature `Lu6/k;.<init>:(Lu6/h;Ljava/util/Comparator;Lu6/k$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L47b1a0.  call `<init>`(v0, v1, v2) @signature `Lu6/k;.<init>:(Lu6/h;Ljava/util/Comparator;)V` @kind direct;
  #L47b1a6.  return @kind void;
}
procedure `u6.k` `N`(`java.util.List` v0 @kind object, `java.util.Map` v1 @kind object, `u6.c$a$a` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lu6/k;.N:(Ljava/util/List;Ljava/util/Map;Lu6/c$a$a;Ljava/util/Comparator;)Lu6/k;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L47b130.  call temp:= `b`(v0, v1, v2, v3) @signature `Lu6/k$b;.b:(Ljava/util/List;Ljava/util/Map;Lu6/c$a$a;Ljava/util/Comparator;)Lu6/k;` @kind static;
  #L47b136.  v0:= temp @kind object;
  #L47b138.  return v0 @kind object;
}
procedure `u6.k` `O`(`java.util.Map` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lu6/k;.O:(Ljava/util/Map;Ljava/util/Comparator;)Lu6/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47b14c.  v0:= new `java.util.ArrayList`;
  #L47b150.  call temp:= `keySet`(v2) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L47b156.  v1:= temp @kind object;
  #L47b158.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L47b15e.  call temp:= `e`() @signature `Lu6/c$a;.e:()Lu6/c$a$a;` @kind static;
  #L47b164.  v1:= temp @kind object;
  #L47b166.  call temp:= `b`(v0, v2, v1, v3) @signature `Lu6/k$b;.b:(Ljava/util/List;Ljava/util/Map;Lu6/c$a$a;Ljava/util/Comparator;)Lu6/k;` @kind static;
  #L47b16c.  v2:= temp @kind object;
  #L47b16e.  return v2 @kind object;
}
procedure `u6.h` `Q`(`u6.k` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lu6/k;.Q:(Ljava/lang/Object;)Lu6/h;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47b0d8.  v0:= v3.`u6.k.o` @type ^`u6.h` @kind object;
  #L47b0dc.  call temp:= `isEmpty`(v0) @signature `Lu6/h;.isEmpty:()Z` @kind interface;
  #L47b0e2.  v1:= temp;
  #L47b0e4.  if v1 != 0 then goto L47b11a;
  #L47b0e8.  v1:= v3.`u6.k.p` @type ^`java.util.Comparator` @kind object;
  #L47b0ec.  call temp:= `getKey`(v0) @signature `Lu6/h;.getKey:()Ljava/lang/Object;` @kind interface;
  #L47b0f2.  v2:= temp @kind object;
  #L47b0f4.  call temp:= `compare`(v1, v4, v2) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L47b0fa.  v1:= temp;
  #L47b0fc.  if v1 >= 0 then goto L47b10a;
  #L47b100.  call temp:= `a`(v0) @signature `Lu6/h;.a:()Lu6/h;` @kind interface;
  #L47b106.  v0:= temp @kind object;
  #L47b108.  goto L47b0dc;
  #L47b10a.  if v1 != 0 then goto L47b110;
  #L47b10e.  return v0 @kind object;
  #L47b110.  call temp:= `d`(v0) @signature `Lu6/h;.d:()Lu6/h;` @kind interface;
  #L47b116.  v0:= temp @kind object;
  #L47b118.  goto L47b0dc;
  #L47b11a.  v4:= 0I;
  #L47b11c.  return v4 @kind object;
}
procedure `u6.c` `G`(`u6.k` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lu6/k;.G:(Ljava/lang/Object;)Lu6/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L47b084.  call temp:= `b`(v8, v9) @signature `Lu6/k;.b:(Ljava/lang/Object;)Z` @kind virtual;
  #L47b08a.  v0:= temp;
  #L47b08c.  if v0 != 0 then goto L47b092;
  #L47b090.  return v8 @kind object;
  #L47b092.  v0:= v8.`u6.k.o` @type ^`u6.h` @kind object;
  #L47b096.  v1:= v8.`u6.k.p` @type ^`java.util.Comparator` @kind object;
  #L47b09a.  call temp:= `g`(v0, v9, v1) @signature `Lu6/h;.g:(Ljava/lang/Object;Ljava/util/Comparator;)Lu6/h;` @kind interface;
  #L47b0a0.  v2:= temp @kind object;
  #L47b0a2.  v3:= 0I;
  #L47b0a4.  v4:= 0I;
  #L47b0a6.  v5:= `@@u6.h$a.p` @type ^`u6.h$a` @kind object;
  #L47b0aa.  v6:= 0I;
  #L47b0ac.  v7:= 0I;
  #L47b0ae.  call temp:= `f`(v2, v3, v4, v5, v6, v7) @signature `Lu6/h;.f:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h$a;Lu6/h;Lu6/h;)Lu6/h;` @kind interface;
  #L47b0b4.  v9:= temp @kind object;
  #L47b0b6.  v0:= new `u6.k`;
  #L47b0ba.  v1:= v8.`u6.k.p` @type ^`java.util.Comparator` @kind object;
  #L47b0be.  call `<init>`(v0, v9, v1) @signature `Lu6/k;.<init>:(Lu6/h;Ljava/util/Comparator;)V` @kind direct;
  #L47b0c4.  return v0 @kind object;
}
procedure `java.util.Iterator` `W`(`u6.k` v5 @kind this) @signature `Lu6/k;.W:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47b018.  v0:= new `u6.d`;
  #L47b01c.  v1:= v5.`u6.k.o` @type ^`u6.h` @kind object;
  #L47b020.  v2:= v5.`u6.k.p` @type ^`java.util.Comparator` @kind object;
  #L47b024.  v3:= 0I;
  #L47b026.  v4:= 1I;
  #L47b028.  call `<init>`(v0, v1, v3, v2, v4) @signature `Lu6/d;.<init>:(Lu6/h;Ljava/lang/Object;Ljava/util/Comparator;Z)V` @kind direct;
  #L47b02e.  return v0 @kind object;
}
procedure `boolean` `b`(`u6.k` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lu6/k;.b:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L47ae1c.  call temp:= `Q`(v0, v1) @signature `Lu6/k;.Q:(Ljava/lang/Object;)Lu6/h;` @kind direct;
  #L47ae22.  v1:= temp @kind object;
  #L47ae24.  if v1 == 0 then goto L47ae2c;
  #L47ae28.  v1:= 1I;
  #L47ae2a.  goto L47ae2e;
  #L47ae2c.  v1:= 0I;
  #L47ae2e.  return v1;
}
procedure `java.lang.Object` `f`(`u6.k` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lu6/k;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L47ae80.  call temp:= `Q`(v0, v1) @signature `Lu6/k;.Q:(Ljava/lang/Object;)Lu6/h;` @kind direct;
  #L47ae86.  v1:= temp @kind object;
  #L47ae88.  if v1 == 0 then goto L47ae96;
  #L47ae8c.  call temp:= `getValue`(v1) @signature `Lu6/h;.getValue:()Ljava/lang/Object;` @kind interface;
  #L47ae92.  v1:= temp @kind object;
  #L47ae94.  goto L47ae98;
  #L47ae96.  v1:= 0I;
  #L47ae98.  return v1 @kind object;
}
procedure `java.util.Comparator` `h`(`u6.k` v1 @kind this) @signature `Lu6/k;.h:()Ljava/util/Comparator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47afd8.  v0:= v1.`u6.k.p` @type ^`java.util.Comparator` @kind object;
  #L47afdc.  return v0 @kind object;
}
procedure `boolean` `isEmpty`(`u6.k` v1 @kind this) @signature `Lu6/k;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ae40.  v0:= v1.`u6.k.o` @type ^`u6.h` @kind object;
  #L47ae44.  call temp:= `isEmpty`(v0) @signature `Lu6/h;.isEmpty:()Z` @kind interface;
  #L47ae4a.  v0:= temp;
  #L47ae4c.  return v0;
}
procedure `java.util.Iterator` `iterator`(`u6.k` v5 @kind this) @signature `Lu6/k;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47aff0.  v0:= new `u6.d`;
  #L47aff4.  v1:= v5.`u6.k.o` @type ^`u6.h` @kind object;
  #L47aff8.  v2:= v5.`u6.k.p` @type ^`java.util.Comparator` @kind object;
  #L47affc.  v3:= 0I;
  #L47affe.  v4:= 0I;
  #L47b000.  call `<init>`(v0, v1, v3, v2, v4) @signature `Lu6/d;.<init>:(Lu6/h;Ljava/lang/Object;Ljava/util/Comparator;Z)V` @kind direct;
  #L47b006.  return v0 @kind object;
}
procedure `java.lang.Object` `l`(`u6.k` v1 @kind this) @signature `Lu6/k;.l:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47aeac.  v0:= v1.`u6.k.o` @type ^`u6.h` @kind object;
  #L47aeb0.  call temp:= `i`(v0) @signature `Lu6/h;.i:()Lu6/h;` @kind interface;
  #L47aeb6.  v0:= temp @kind object;
  #L47aeb8.  call temp:= `getKey`(v0) @signature `Lu6/h;.getKey:()Ljava/lang/Object;` @kind interface;
  #L47aebe.  v0:= temp @kind object;
  #L47aec0.  return v0 @kind object;
}
procedure `java.lang.Object` `n`(`u6.k` v1 @kind this) @signature `Lu6/k;.n:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47aed4.  v0:= v1.`u6.k.o` @type ^`u6.h` @kind object;
  #L47aed8.  call temp:= `h`(v0) @signature `Lu6/h;.h:()Lu6/h;` @kind interface;
  #L47aede.  v0:= temp @kind object;
  #L47aee0.  call temp:= `getKey`(v0) @signature `Lu6/h;.getKey:()Ljava/lang/Object;` @kind interface;
  #L47aee6.  v0:= temp @kind object;
  #L47aee8.  return v0 @kind object;
}
procedure `java.lang.Object` `p`(`u6.k` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lu6/k;.p:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L47aefc.  v0:= v6.`u6.k.o` @type ^`u6.h` @kind object;
  #L47af00.  v1:= 0I;
  #L47af02.  v2:= v1 @kind object;
  #L47af04.  call temp:= `isEmpty`(v0) @signature `Lu6/h;.isEmpty:()Z` @kind interface;
  #L47af0a.  v3:= temp;
  #L47af0c.  if v3 != 0 then goto L47af9a;
  #L47af10.  v3:= v6.`u6.k.p` @type ^`java.util.Comparator` @kind object;
  #L47af14.  call temp:= `getKey`(v0) @signature `Lu6/h;.getKey:()Ljava/lang/Object;` @kind interface;
  #L47af1a.  v4:= temp @kind object;
  #L47af1c.  call temp:= `compare`(v3, v7, v4) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L47af22.  v3:= temp;
  #L47af24.  if v3 != 0 then goto L47af7c;
  #L47af28.  call temp:= `a`(v0) @signature `Lu6/h;.a:()Lu6/h;` @kind interface;
  #L47af2e.  v7:= temp @kind object;
  #L47af30.  call temp:= `isEmpty`(v7) @signature `Lu6/h;.isEmpty:()Z` @kind interface;
  #L47af36.  v7:= temp;
  #L47af38.  if v7 != 0 then goto L47af6c;
  #L47af3c.  call temp:= `a`(v0) @signature `Lu6/h;.a:()Lu6/h;` @kind interface;
  #L47af42.  v7:= temp @kind object;
  #L47af44.  call temp:= `d`(v7) @signature `Lu6/h;.d:()Lu6/h;` @kind interface;
  #L47af4a.  v0:= temp @kind object;
  #L47af4c.  call temp:= `isEmpty`(v0) @signature `Lu6/h;.isEmpty:()Z` @kind interface;
  #L47af52.  v0:= temp;
  #L47af54.  if v0 != 0 then goto L47af62;
  #L47af58.  call temp:= `d`(v7) @signature `Lu6/h;.d:()Lu6/h;` @kind interface;
  #L47af5e.  v7:= temp @kind object;
  #L47af60.  goto L47af44;
  #L47af62.  call temp:= `getKey`(v7) @signature `Lu6/h;.getKey:()Ljava/lang/Object;` @kind interface;
  #L47af68.  v7:= temp @kind object;
  #L47af6a.  return v7 @kind object;
  #L47af6c.  if v2 == 0 then goto L47af7a;
  #L47af70.  call temp:= `getKey`(v2) @signature `Lu6/h;.getKey:()Ljava/lang/Object;` @kind interface;
  #L47af76.  v7:= temp @kind object;
  #L47af78.  return v7 @kind object;
  #L47af7a.  return v1 @kind object;
  #L47af7c.  if v3 >= 0 then goto L47af8a;
  #L47af80.  call temp:= `a`(v0) @signature `Lu6/h;.a:()Lu6/h;` @kind interface;
  #L47af86.  v0:= temp @kind object;
  #L47af88.  goto L47af04;
  #L47af8a.  call temp:= `d`(v0) @signature `Lu6/h;.d:()Lu6/h;` @kind interface;
  #L47af90.  v2:= temp @kind object;
  #L47af92.  v5:= v2 @kind object;
  #L47af94.  v2:= v0 @kind object;
  #L47af96.  v0:= v5 @kind object;
  #L47af98.  goto L47af04;
  #L47af9a.  v0:= new `java.lang.IllegalArgumentException`;
  #L47af9e.  v1:= new `java.lang.StringBuilder`;
  #L47afa2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47afa8.  v2:= "Couldn't find predecessor key of non-present key: " @kind object;
  #L47afac.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47afb2.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47afb8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L47afbe.  v7:= temp @kind object;
  #L47afc0.  call `<init>`(v0, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47afc6.  throw v0;
}
procedure `int` `size`(`u6.k` v1 @kind this) @signature `Lu6/k;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47ae60.  v0:= v1.`u6.k.o` @type ^`u6.h` @kind object;
  #L47ae64.  call temp:= `size`(v0) @signature `Lu6/h;.size:()I` @kind interface;
  #L47ae6a.  v0:= temp;
  #L47ae6c.  return v0;
}
procedure `void` `u`(`u6.k` v1 @kind this, `u6.h$b` v2 @kind object) @signature `Lu6/k;.u:(Lu6/h$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47b1b8.  v0:= v1.`u6.k.o` @type ^`u6.h` @kind object;
  #L47b1bc.  call `e`(v0, v2) @signature `Lu6/h;.e:(Lu6/h$b;)V` @kind interface;
  #L47b1c2.  return @kind void;
}
procedure `u6.c` `y`(`u6.k` v8 @kind this, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lu6/k;.y:(Ljava/lang/Object;Ljava/lang/Object;)Lu6/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L47b040.  v0:= v8.`u6.k.o` @type ^`u6.h` @kind object;
  #L47b044.  v1:= v8.`u6.k.p` @type ^`java.util.Comparator` @kind object;
  #L47b048.  call temp:= `b`(v0, v9, v10, v1) @signature `Lu6/h;.b:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lu6/h;` @kind interface;
  #L47b04e.  v2:= temp @kind object;
  #L47b050.  v5:= `@@u6.h$a.p` @type ^`u6.h$a` @kind object;
  #L47b054.  v3:= 0I;
  #L47b056.  v4:= 0I;
  #L47b058.  v6:= 0I;
  #L47b05a.  v7:= 0I;
  #L47b05c.  call temp:= `f`(v2, v3, v4, v5, v6, v7) @signature `Lu6/h;.f:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h$a;Lu6/h;Lu6/h;)Lu6/h;` @kind interface;
  #L47b062.  v9:= temp @kind object;
  #L47b064.  v10:= new `u6.k`;
  #L47b068.  v0:= v8.`u6.k.p` @type ^`java.util.Comparator` @kind object;
  #L47b06c.  call `<init>`(v10, v9, v0) @signature `Lu6/k;.<init>:(Lu6/h;Ljava/util/Comparator;)V` @kind direct;
  #L47b072.  return v10 @kind object;
}
