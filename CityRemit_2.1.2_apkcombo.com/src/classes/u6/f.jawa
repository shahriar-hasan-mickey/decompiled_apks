record `u6.f` @kind class @AccessFlag PUBLIC extends `u6.j` @kind class {
  `int` `u6.f.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`u6.f` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `u6.h` v3 @kind object, `u6.h` v4 @kind object) @signature `Lu6/f;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47a098.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lu6/j;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)V` @kind direct;
  #L47a09e.  v1:= -1I;
  #L47a0a0.  v0.`u6.f.e` @type ^`int` := v1;
  #L47a0a4.  return @kind void;
}
procedure `boolean` `c`(`u6.f` v1 @kind this) @signature `Lu6/f;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479fd4.  v0:= 0I;
  #L479fd6.  return v0;
}
procedure `u6.j` `l`(`u6.f` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `u6.h` v4 @kind object, `u6.h` v5 @kind object) @signature `Lu6/f;.l:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)Lu6/j;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L47a04c.  if v2 != 0 then goto L47a058;
  #L47a050.  call temp:= `getKey`(v1) @signature `Lu6/j;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L47a056.  v2:= temp @kind object;
  #L47a058.  if v3 != 0 then goto L47a064;
  #L47a05c.  call temp:= `getValue`(v1) @signature `Lu6/j;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L47a062.  v3:= temp @kind object;
  #L47a064.  if v4 != 0 then goto L47a070;
  #L47a068.  call temp:= `a`(v1) @signature `Lu6/j;.a:()Lu6/h;` @kind virtual;
  #L47a06e.  v4:= temp @kind object;
  #L47a070.  if v5 != 0 then goto L47a07c;
  #L47a074.  call temp:= `d`(v1) @signature `Lu6/j;.d:()Lu6/h;` @kind virtual;
  #L47a07a.  v5:= temp @kind object;
  #L47a07c.  v0:= new `u6.f`;
  #L47a080.  call `<init>`(v0, v2, v3, v4, v5) @signature `Lu6/f;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)V` @kind direct;
  #L47a086.  return v0 @kind object;
}
procedure `u6.h$a` `n`(`u6.f` v1 @kind this) @signature `Lu6/f;.n:()Lu6/h$a;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L47a034.  v0:= `@@u6.h$a.p` @type ^`u6.h$a` @kind object;
  #L47a038.  return v0 @kind object;
}
procedure `int` `size`(`u6.f` v2 @kind this) @signature `Lu6/f;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L479fe8.  v0:= v2.`u6.f.e` @type ^`int`;
  #L479fec.  v1:= -1I;
  #L479fee.  if v0 != v1 then goto L47a01c;
  #L479ff2.  call temp:= `a`(v2) @signature `Lu6/j;.a:()Lu6/h;` @kind virtual;
  #L479ff8.  v0:= temp @kind object;
  #L479ffa.  call temp:= `size`(v0) @signature `Lu6/h;.size:()I` @kind interface;
  #L47a000.  v0:= temp;
  #L47a002.  v0:= v0 + 1;
  #L47a006.  call temp:= `d`(v2) @signature `Lu6/j;.d:()Lu6/h;` @kind virtual;
  #L47a00c.  v1:= temp @kind object;
  #L47a00e.  call temp:= `size`(v1) @signature `Lu6/h;.size:()I` @kind interface;
  #L47a014.  v1:= temp;
  #L47a016.  v0:= v0 + v1 @kind int;
  #L47a018.  v2.`u6.f.e` @type ^`int` := v0;
  #L47a01c.  v0:= v2.`u6.f.e` @type ^`int`;
  #L47a020.  return v0;
}
procedure `void` `u`(`u6.f` v2 @kind this, `u6.h` v3 @kind object) @signature `Lu6/f;.u:(Lu6/h;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L47a0b8.  v0:= v2.`u6.f.e` @type ^`int`;
  #L47a0bc.  v1:= -1I;
  #L47a0be.  if v0 != v1 then goto L47a0ca;
  #L47a0c2.  call `u`(v2, v3) @signature `Lu6/j;.u:(Lu6/h;)V` @kind super;
  #L47a0c8.  return @kind void;
  #L47a0ca.  v3:= new `java.lang.IllegalStateException`;
  #L47a0ce.  v0:= "Can't set left after using size" @kind object;
  #L47a0d2.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47a0d8.  throw v3;
}
