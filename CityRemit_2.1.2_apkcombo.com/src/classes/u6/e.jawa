record `u6.e` @kind class @AccessFlag PUBLIC extends `java.lang.Iterable` @kind interface {
  `u6.c` `u6.e.o` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`u6.e` v2 @kind this, `java.util.List` v3 @kind object, `java.util.Comparator` v4 @kind object) @signature `Lu6/e;.<init>:(Ljava/util/List;Ljava/util/Comparator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L479f84.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L479f8a.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L479f90.  v0:= temp @kind object;
  #L479f92.  call temp:= `e`() @signature `Lu6/c$a;.e:()Lu6/c$a$a;` @kind static;
  #L479f98.  v1:= temp @kind object;
  #L479f9a.  call temp:= `b`(v3, v0, v1, v4) @signature `Lu6/c$a;.b:(Ljava/util/List;Ljava/util/Map;Lu6/c$a$a;Ljava/util/Comparator;)Lu6/c;` @kind static;
  #L479fa0.  v3:= temp @kind object;
  #L479fa2.  v2.`u6.e.o` @type ^`u6.c` := v3 @kind object;
  #L479fa6.  return @kind void;
}
procedure `void` `<init>`(`u6.e` v0 @kind this, `u6.c` v1 @kind object) @signature `Lu6/e;.<init>:(Lu6/c;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L479fb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L479fbe.  v0.`u6.e.o` @type ^`u6.c` := v1 @kind object;
  #L479fc2.  return @kind void;
}
procedure `java.util.Iterator` `W`(`u6.e` v2 @kind this) @signature `Lu6/e;.W:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L479efc.  v0:= new `u6.e$a`;
  #L479f00.  v1:= v2.`u6.e.o` @type ^`u6.c` @kind object;
  #L479f04.  call temp:= `W`(v1) @signature `Lu6/c;.W:()Ljava/util/Iterator;` @kind virtual;
  #L479f0a.  v1:= temp @kind object;
  #L479f0c.  call `<init>`(v0, v1) @signature `Lu6/e$a;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L479f12.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`u6.e` v1 @kind this) @signature `Lu6/e;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479e74.  v0:= v1.`u6.e.o` @type ^`u6.c` @kind object;
  #L479e78.  call temp:= `l`(v0) @signature `Lu6/c;.l:()Ljava/lang/Object;` @kind virtual;
  #L479e7e.  v0:= temp @kind object;
  #L479e80.  return v0 @kind object;
}
procedure `boolean` `equals`(`u6.e` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lu6/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479e18.  if v1 != v2 then goto L479e20;
  #L479e1c.  v2:= 1I;
  #L479e1e.  return v2;
  #L479e20.  v0:= instanceof @variable v2 @type ^`u6.e` @kind boolean;
  #L479e24.  if v0 != 0 then goto L479e2c;
  #L479e28.  v2:= 0I;
  #L479e2a.  return v2;
  #L479e2c.  v2:= (`u6.e`) v2 @kind object;
  #L479e30.  v0:= v1.`u6.e.o` @type ^`u6.c` @kind object;
  #L479e34.  v2:= v2.`u6.e.o` @type ^`u6.c` @kind object;
  #L479e38.  call temp:= `equals`(v0, v2) @signature `Lu6/c;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L479e3e.  v2:= temp;
  #L479e40.  return v2;
}
procedure `java.lang.Object` `f`(`u6.e` v1 @kind this) @signature `Lu6/e;.f:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479e94.  v0:= v1.`u6.e.o` @type ^`u6.c` @kind object;
  #L479e98.  call temp:= `n`(v0) @signature `Lu6/c;.n:()Ljava/lang/Object;` @kind virtual;
  #L479e9e.  v0:= temp @kind object;
  #L479ea0.  return v0 @kind object;
}
procedure `java.lang.Object` `h`(`u6.e` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lu6/e;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479eb4.  v0:= v1.`u6.e.o` @type ^`u6.c` @kind object;
  #L479eb8.  call temp:= `p`(v0, v2) @signature `Lu6/c;.p:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L479ebe.  v2:= temp @kind object;
  #L479ec0.  return v2 @kind object;
}
procedure `int` `hashCode`(`u6.e` v1 @kind this) @signature `Lu6/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479e54.  v0:= v1.`u6.e.o` @type ^`u6.c` @kind object;
  #L479e58.  call temp:= `hashCode`(v0) @signature `Lu6/c;.hashCode:()I` @kind virtual;
  #L479e5e.  v0:= temp;
  #L479e60.  return v0;
}
procedure `java.util.Iterator` `iterator`(`u6.e` v2 @kind this) @signature `Lu6/e;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L479ed4.  v0:= new `u6.e$a`;
  #L479ed8.  v1:= v2.`u6.e.o` @type ^`u6.c` @kind object;
  #L479edc.  call temp:= `iterator`(v1) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L479ee2.  v1:= temp @kind object;
  #L479ee4.  call `<init>`(v0, v1) @signature `Lu6/e$a;.<init>:(Ljava/util/Iterator;)V` @kind direct;
  #L479eea.  return v0 @kind object;
}
procedure `u6.e` `l`(`u6.e` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lu6/e;.l:(Ljava/lang/Object;)Lu6/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L479f24.  v0:= new `u6.e`;
  #L479f28.  v1:= v3.`u6.e.o` @type ^`u6.c` @kind object;
  #L479f2c.  v2:= 0I;
  #L479f2e.  call temp:= `y`(v1, v4, v2) @signature `Lu6/c;.y:(Ljava/lang/Object;Ljava/lang/Object;)Lu6/c;` @kind virtual;
  #L479f34.  v4:= temp @kind object;
  #L479f36.  call `<init>`(v0, v4) @signature `Lu6/e;.<init>:(Lu6/c;)V` @kind direct;
  #L479f3c.  return v0 @kind object;
}
procedure `u6.e` `n`(`u6.e` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lu6/e;.n:(Ljava/lang/Object;)Lu6/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479f50.  v0:= v1.`u6.e.o` @type ^`u6.c` @kind object;
  #L479f54.  call temp:= `G`(v0, v2) @signature `Lu6/c;.G:(Ljava/lang/Object;)Lu6/c;` @kind virtual;
  #L479f5a.  v2:= temp @kind object;
  #L479f5c.  v0:= v1.`u6.e.o` @type ^`u6.c` @kind object;
  #L479f60.  if v2 != v0 then goto L479f68;
  #L479f64.  v0:= v1 @kind object;
  #L479f66.  goto L479f72;
  #L479f68.  v0:= new `u6.e`;
  #L479f6c.  call `<init>`(v0, v2) @signature `Lu6/e;.<init>:(Lu6/c;)V` @kind direct;
  #L479f72.  return v0 @kind object;
}
