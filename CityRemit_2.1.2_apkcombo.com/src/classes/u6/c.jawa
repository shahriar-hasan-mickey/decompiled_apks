record `u6.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Iterable` @kind interface {
}
procedure `void` `<init>`(`u6.c` v0 @kind this) @signature `Lu6/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L479d7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L479d82.  return @kind void;
}
procedure `u6.c` `G`(`java.lang.Object` v0 @kind object) @signature `Lu6/c;.G:(Ljava/lang/Object;)Lu6/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Iterator` `W`() @signature `Lu6/c;.W:()Ljava/util/Iterator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `b`(`java.lang.Object` v0 @kind object) @signature `Lu6/c;.b:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`u6.c` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lu6/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L479bcc.  v0:= 1I;
  #L479bce.  if v5 != v6 then goto L479bd4;
  #L479bd2.  return v0;
  #L479bd4.  v1:= instanceof @variable v6 @type ^`u6.c` @kind boolean;
  #L479bd8.  v2:= 0I;
  #L479bda.  if v1 != 0 then goto L479be0;
  #L479bde.  return v2;
  #L479be0.  v6:= (`u6.c`) v6 @kind object;
  #L479be4.  call temp:= `h`(v5) @signature `Lu6/c;.h:()Ljava/util/Comparator;` @kind virtual;
  #L479bea.  v1:= temp @kind object;
  #L479bec.  call temp:= `h`(v6) @signature `Lu6/c;.h:()Ljava/util/Comparator;` @kind virtual;
  #L479bf2.  v3:= temp @kind object;
  #L479bf4.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Comparator;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L479bfa.  v1:= temp;
  #L479bfc.  if v1 != 0 then goto L479c02;
  #L479c00.  return v2;
  #L479c02.  call temp:= `size`(v5) @signature `Lu6/c;.size:()I` @kind virtual;
  #L479c08.  v1:= temp;
  #L479c0a.  call temp:= `size`(v6) @signature `Lu6/c;.size:()I` @kind virtual;
  #L479c10.  v3:= temp;
  #L479c12.  if v1 == v3 then goto L479c18;
  #L479c16.  return v2;
  #L479c18.  call temp:= `iterator`(v5) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L479c1e.  v1:= temp @kind object;
  #L479c20.  call temp:= `iterator`(v6) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L479c26.  v6:= temp @kind object;
  #L479c28.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L479c2e.  v3:= temp;
  #L479c30.  if v3 == 0 then goto L479c56;
  #L479c34.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L479c3a.  v3:= temp @kind object;
  #L479c3c.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L479c40.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L479c46.  v4:= temp @kind object;
  #L479c48.  call temp:= `equals`(v3, v4) @signature `Ljava/util/Map$Entry;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L479c4e.  v3:= temp;
  #L479c50.  if v3 != 0 then goto L479c28;
  #L479c54.  return v2;
  #L479c56.  return v0;
}
procedure `java.lang.Object` `f`(`java.lang.Object` v0 @kind object) @signature `Lu6/c;.f:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Comparator` `h`() @signature `Lu6/c;.h:()Ljava/util/Comparator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`u6.c` v3 @kind this) @signature `Lu6/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L479c68.  call temp:= `h`(v3) @signature `Lu6/c;.h:()Ljava/util/Comparator;` @kind virtual;
  #L479c6e.  v0:= temp @kind object;
  #L479c70.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L479c76.  v0:= temp;
  #L479c78.  call temp:= `iterator`(v3) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L479c7e.  v1:= temp @kind object;
  #L479c80.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L479c86.  v2:= temp;
  #L479c88.  if v2 == 0 then goto L479ca8;
  #L479c8c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L479c92.  v2:= temp @kind object;
  #L479c94.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L479c98.  v0:= v0 * 31;
  #L479c9c.  call temp:= `hashCode`(v2) @signature `Ljava/util/Map$Entry;.hashCode:()I` @kind interface;
  #L479ca2.  v2:= temp;
  #L479ca4.  v0:= v0 + v2 @kind int;
  #L479ca6.  goto L479c80;
  #L479ca8.  return v0;
}
procedure `boolean` `isEmpty`() @signature `Lu6/c;.isEmpty:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Iterator` `iterator`() @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `l`() @signature `Lu6/c;.l:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `n`() @signature `Lu6/c;.n:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `p`(`java.lang.Object` v0 @kind object) @signature `Lu6/c;.p:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `size`() @signature `Lu6/c;.size:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`(`u6.c` v5 @kind this) @signature `Lu6/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L479cbc.  v0:= new `java.lang.StringBuilder`;
  #L479cc0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L479cc6.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L479ccc.  v1:= temp @kind object;
  #L479cce.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L479cd4.  v1:= temp @kind object;
  #L479cd6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L479cdc.  v1:= "{" @kind object;
  #L479ce0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L479ce6.  call temp:= `iterator`(v5) @signature `Lu6/c;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L479cec.  v1:= temp @kind object;
  #L479cee.  v2:= 1I;
  #L479cf0.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L479cf6.  v3:= temp;
  #L479cf8.  if v3 == 0 then goto L479d56;
  #L479cfc.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L479d02.  v3:= temp @kind object;
  #L479d04.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L479d08.  if v2 == 0 then goto L479d10;
  #L479d0c.  v2:= 0I;
  #L479d0e.  goto L479d1a;
  #L479d10.  v4:= ", " @kind object;
  #L479d14.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L479d1a.  v4:= "(" @kind object;
  #L479d1e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L479d24.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L479d2a.  v4:= temp @kind object;
  #L479d2c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L479d32.  v4:= "=>" @kind object;
  #L479d36.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L479d3c.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L479d42.  v3:= temp @kind object;
  #L479d44.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L479d4a.  v3:= ")" @kind object;
  #L479d4e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L479d54.  goto L479cf0;
  #L479d56.  v1:= "};" @kind object;
  #L479d5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L479d60.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L479d66.  v0:= temp @kind object;
  #L479d68.  return v0 @kind object;
}
procedure `void` `u`(`u6.h$b` v0 @kind object) @signature `Lu6/c;.u:(Lu6/h$b;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `u6.c` `y`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lu6/c;.y:(Ljava/lang/Object;Ljava/lang/Object;)Lu6/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
