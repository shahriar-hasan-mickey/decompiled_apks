record `u6.e$a` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `u6.e$a.o` @AccessFlag FINAL;
}
procedure `void` `<init>`(`u6.e$a` v0 @kind this, `java.util.Iterator` v1 @kind object) @signature `Lu6/e$a;.<init>:(Ljava/util/Iterator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L479de0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L479de6.  v0.`u6.e$a.o` @type ^`java.util.Iterator` := v1 @kind object;
  #L479dea.  return @kind void;
}
procedure `boolean` `hasNext`(`u6.e$a` v1 @kind this) @signature `Lu6/e$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479d94.  v0:= v1.`u6.e$a.o` @type ^`java.util.Iterator` @kind object;
  #L479d98.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L479d9e.  v0:= temp;
  #L479da0.  return v0;
}
procedure `java.lang.Object` `next`(`u6.e$a` v1 @kind this) @signature `Lu6/e$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479db4.  v0:= v1.`u6.e$a.o` @type ^`java.util.Iterator` @kind object;
  #L479db8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L479dbe.  v0:= temp @kind object;
  #L479dc0.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L479dc4.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L479dca.  v0:= temp @kind object;
  #L479dcc.  return v0 @kind object;
}
procedure `void` `remove`(`u6.e$a` v1 @kind this) @signature `Lu6/e$a;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L479dfc.  v0:= v1.`u6.e$a.o` @type ^`java.util.Iterator` @kind object;
  #L479e00.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L479e06.  return @kind void;
}
