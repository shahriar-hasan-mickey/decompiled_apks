record `u6.j` @kind class @AccessFlag PUBLIC_ABSTRACT extends `u6.h` @kind interface {
  `java.lang.Object` `u6.j.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `u6.j.b` @AccessFlag PRIVATE_FINAL;
  `u6.h` `u6.j.c` @AccessFlag PRIVATE;
  `u6.h` `u6.j.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`u6.j` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `u6.h` v3 @kind object, `u6.h` v4 @kind object) @signature `Lu6/j;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L47a9e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47a9ea.  v0.`u6.j.a` @type ^`java.lang.Object` := v1 @kind object;
  #L47a9ee.  v0.`u6.j.b` @type ^`java.lang.Object` := v2 @kind object;
  #L47a9f2.  if v3 != 0 then goto L47a9fe;
  #L47a9f6.  call temp:= `j`() @signature `Lu6/g;.j:()Lu6/g;` @kind static;
  #L47a9fc.  v3:= temp @kind object;
  #L47a9fe.  v0.`u6.j.c` @type ^`u6.h` := v3 @kind object;
  #L47aa02.  if v4 != 0 then goto L47aa0e;
  #L47aa06.  call temp:= `j`() @signature `Lu6/g;.j:()Lu6/g;` @kind static;
  #L47aa0c.  v4:= temp @kind object;
  #L47aa0e.  v0.`u6.j.d` @type ^`u6.h` := v4 @kind object;
  #L47aa12.  return @kind void;
}
procedure `u6.j` `j`(`u6.j` v12 @kind this) @signature `Lu6/j;.j:()Lu6/j;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L47a758.  v0:= v12.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a75c.  call temp:= `q`(v0) @signature `Lu6/j;.q:(Lu6/h;)Lu6/h$a;` @kind static;
  #L47a762.  v3:= temp @kind object;
  #L47a764.  v1:= 0I;
  #L47a766.  v2:= 0I;
  #L47a768.  v4:= 0I;
  #L47a76a.  v5:= 0I;
  #L47a76c.  call temp:= `f`(v0, v1, v2, v3, v4, v5) @signature `Lu6/h;.f:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h$a;Lu6/h;Lu6/h;)Lu6/h;` @kind interface;
  #L47a772.  v10:= temp @kind object;
  #L47a774.  v0:= v12.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a778.  call temp:= `q`(v0) @signature `Lu6/j;.q:(Lu6/h;)Lu6/h$a;` @kind static;
  #L47a77e.  v3:= temp @kind object;
  #L47a780.  call temp:= `f`(v0, v1, v2, v3, v4, v5) @signature `Lu6/h;.f:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h$a;Lu6/h;Lu6/h;)Lu6/h;` @kind interface;
  #L47a786.  v11:= temp @kind object;
  #L47a788.  call temp:= `q`(v12) @signature `Lu6/j;.q:(Lu6/h;)Lu6/h$a;` @kind static;
  #L47a78e.  v9:= temp @kind object;
  #L47a790.  v7:= 0I;
  #L47a792.  v8:= 0I;
  #L47a794.  v6:= v12 @kind object;
  #L47a796.  call temp:= `k`(v6, v7, v8, v9, v10, v11) @signature `Lu6/j;.k:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h$a;Lu6/h;Lu6/h;)Lu6/j;` @kind virtual;
  #L47a79c.  v0:= temp @kind object;
  #L47a79e.  return v0 @kind object;
}
procedure `u6.j` `m`(`u6.j` v2 @kind this) @signature `Lu6/j;.m:()Lu6/j;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L47a800.  v0:= v2.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a804.  call temp:= `c`(v0) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a80a.  v0:= temp;
  #L47a80c.  if v0 == 0 then goto L47a82a;
  #L47a810.  v0:= v2.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a814.  call temp:= `c`(v0) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a81a.  v0:= temp;
  #L47a81c.  if v0 != 0 then goto L47a82a;
  #L47a820.  call temp:= `s`(v2) @signature `Lu6/j;.s:()Lu6/j;` @kind direct;
  #L47a826.  v0:= temp @kind object;
  #L47a828.  goto L47a82c;
  #L47a82a.  v0:= v2 @kind object;
  #L47a82c.  v1:= v0.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a830.  call temp:= `c`(v1) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a836.  v1:= temp;
  #L47a838.  if v1 == 0 then goto L47a85c;
  #L47a83c.  v1:= v0.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a840.  v1:= (`u6.j`) v1 @kind object;
  #L47a844.  v1:= v1.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a848.  call temp:= `c`(v1) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a84e.  v1:= temp;
  #L47a850.  if v1 == 0 then goto L47a85c;
  #L47a854.  call temp:= `t`(v0) @signature `Lu6/j;.t:()Lu6/j;` @kind direct;
  #L47a85a.  v0:= temp @kind object;
  #L47a85c.  v1:= v0.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a860.  call temp:= `c`(v1) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a866.  v1:= temp;
  #L47a868.  if v1 == 0 then goto L47a884;
  #L47a86c.  v1:= v0.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a870.  call temp:= `c`(v1) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a876.  v1:= temp;
  #L47a878.  if v1 == 0 then goto L47a884;
  #L47a87c.  call temp:= `j`(v0) @signature `Lu6/j;.j:()Lu6/j;` @kind direct;
  #L47a882.  v0:= temp @kind object;
  #L47a884.  return v0 @kind object;
}
procedure `u6.j` `o`(`u6.j` v3 @kind this) @signature `Lu6/j;.o:()Lu6/j;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47a898.  call temp:= `j`(v3) @signature `Lu6/j;.j:()Lu6/j;` @kind direct;
  #L47a89e.  v0:= temp @kind object;
  #L47a8a0.  call temp:= `d`(v0) @signature `Lu6/j;.d:()Lu6/h;` @kind virtual;
  #L47a8a6.  v1:= temp @kind object;
  #L47a8a8.  call temp:= `a`(v1) @signature `Lu6/h;.a:()Lu6/h;` @kind interface;
  #L47a8ae.  v1:= temp @kind object;
  #L47a8b0.  call temp:= `c`(v1) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a8b6.  v1:= temp;
  #L47a8b8.  if v1 == 0 then goto L47a8ea;
  #L47a8bc.  call temp:= `d`(v0) @signature `Lu6/j;.d:()Lu6/h;` @kind virtual;
  #L47a8c2.  v1:= temp @kind object;
  #L47a8c4.  v1:= (`u6.j`) v1 @kind object;
  #L47a8c8.  call temp:= `t`(v1) @signature `Lu6/j;.t:()Lu6/j;` @kind direct;
  #L47a8ce.  v1:= temp @kind object;
  #L47a8d0.  v2:= 0I;
  #L47a8d2.  call temp:= `l`(v0, v2, v2, v2, v1) @signature `Lu6/j;.l:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)Lu6/j;` @kind virtual;
  #L47a8d8.  v0:= temp @kind object;
  #L47a8da.  call temp:= `s`(v0) @signature `Lu6/j;.s:()Lu6/j;` @kind direct;
  #L47a8e0.  v0:= temp @kind object;
  #L47a8e2.  call temp:= `j`(v0) @signature `Lu6/j;.j:()Lu6/j;` @kind direct;
  #L47a8e8.  v0:= temp @kind object;
  #L47a8ea.  return v0 @kind object;
}
procedure `u6.j` `p`(`u6.j` v2 @kind this) @signature `Lu6/j;.p:()Lu6/j;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L47a8fc.  call temp:= `j`(v2) @signature `Lu6/j;.j:()Lu6/j;` @kind direct;
  #L47a902.  v0:= temp @kind object;
  #L47a904.  call temp:= `a`(v0) @signature `Lu6/j;.a:()Lu6/h;` @kind virtual;
  #L47a90a.  v1:= temp @kind object;
  #L47a90c.  call temp:= `a`(v1) @signature `Lu6/h;.a:()Lu6/h;` @kind interface;
  #L47a912.  v1:= temp @kind object;
  #L47a914.  call temp:= `c`(v1) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a91a.  v1:= temp;
  #L47a91c.  if v1 == 0 then goto L47a930;
  #L47a920.  call temp:= `t`(v0) @signature `Lu6/j;.t:()Lu6/j;` @kind direct;
  #L47a926.  v0:= temp @kind object;
  #L47a928.  call temp:= `j`(v0) @signature `Lu6/j;.j:()Lu6/j;` @kind direct;
  #L47a92e.  v0:= temp @kind object;
  #L47a930.  return v0 @kind object;
}
procedure `u6.h$a` `q`(`u6.h` v0 @kind object) @signature `Lu6/j;.q:(Lu6/h;)Lu6/h$a;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L47a730.  call temp:= `c`(v0) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a736.  v0:= temp;
  #L47a738.  if v0 == 0 then goto L47a742;
  #L47a73c.  v0:= `@@u6.h$a.p` @type ^`u6.h$a` @kind object;
  #L47a740.  goto L47a746;
  #L47a742.  v0:= `@@u6.h$a.o` @type ^`u6.h$a` @kind object;
  #L47a746.  return v0 @kind object;
}
procedure `u6.h` `r`(`u6.j` v3 @kind this) @signature `Lu6/j;.r:()Lu6/h;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L47a6a4.  v0:= v3.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a6a8.  call temp:= `isEmpty`(v0) @signature `Lu6/h;.isEmpty:()Z` @kind interface;
  #L47a6ae.  v0:= temp;
  #L47a6b0.  if v0 == 0 then goto L47a6be;
  #L47a6b4.  call temp:= `j`() @signature `Lu6/g;.j:()Lu6/g;` @kind static;
  #L47a6ba.  v0:= temp @kind object;
  #L47a6bc.  return v0 @kind object;
  #L47a6be.  call temp:= `a`(v3) @signature `Lu6/j;.a:()Lu6/h;` @kind virtual;
  #L47a6c4.  v0:= temp @kind object;
  #L47a6c6.  call temp:= `c`(v0) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a6cc.  v0:= temp;
  #L47a6ce.  if v0 != 0 then goto L47a6f8;
  #L47a6d2.  call temp:= `a`(v3) @signature `Lu6/j;.a:()Lu6/h;` @kind virtual;
  #L47a6d8.  v0:= temp @kind object;
  #L47a6da.  call temp:= `a`(v0) @signature `Lu6/h;.a:()Lu6/h;` @kind interface;
  #L47a6e0.  v0:= temp @kind object;
  #L47a6e2.  call temp:= `c`(v0) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a6e8.  v0:= temp;
  #L47a6ea.  if v0 != 0 then goto L47a6f8;
  #L47a6ee.  call temp:= `o`(v3) @signature `Lu6/j;.o:()Lu6/j;` @kind direct;
  #L47a6f4.  v0:= temp @kind object;
  #L47a6f6.  goto L47a6fa;
  #L47a6f8.  v0:= v3 @kind object;
  #L47a6fa.  v1:= v0.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a6fe.  v1:= (`u6.j`) v1 @kind object;
  #L47a702.  call temp:= `r`(v1) @signature `Lu6/j;.r:()Lu6/h;` @kind direct;
  #L47a708.  v1:= temp @kind object;
  #L47a70a.  v2:= 0I;
  #L47a70c.  call temp:= `l`(v0, v2, v2, v1, v2) @signature `Lu6/j;.l:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)Lu6/j;` @kind virtual;
  #L47a712.  v0:= temp @kind object;
  #L47a714.  call temp:= `m`(v0) @signature `Lu6/j;.m:()Lu6/j;` @kind direct;
  #L47a71a.  v0:= temp @kind object;
  #L47a71c.  return v0 @kind object;
}
procedure `u6.j` `s`(`u6.j` v12 @kind this) @signature `Lu6/j;.s:()Lu6/j;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L47a944.  v3:= `@@u6.h$a.o` @type ^`u6.h$a` @kind object;
  #L47a948.  v0:= v12.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a94c.  v0:= (`u6.j`) v0 @kind object;
  #L47a950.  v5:= v0.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a954.  v1:= 0I;
  #L47a956.  v2:= 0I;
  #L47a958.  v4:= 0I;
  #L47a95a.  v0:= v12 @kind object;
  #L47a95c.  call temp:= `k`(v0, v1, v2, v3, v4, v5) @signature `Lu6/j;.k:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h$a;Lu6/h;Lu6/h;)Lu6/j;` @kind virtual;
  #L47a962.  v10:= temp @kind object;
  #L47a964.  v6:= v12.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a968.  call temp:= `n`(v12) @signature `Lu6/j;.n:()Lu6/h$a;` @kind virtual;
  #L47a96e.  v9:= temp @kind object;
  #L47a970.  v7:= 0I;
  #L47a972.  v8:= 0I;
  #L47a974.  v11:= 0I;
  #L47a976.  call temp:= `f`(v6, v7, v8, v9, v10, v11) @signature `Lu6/h;.f:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h$a;Lu6/h;Lu6/h;)Lu6/h;` @kind interface;
  #L47a97c.  v0:= temp @kind object;
  #L47a97e.  v0:= (`u6.j`) v0 @kind object;
  #L47a982.  return v0 @kind object;
}
procedure `u6.j` `t`(`u6.j` v12 @kind this) @signature `Lu6/j;.t:()Lu6/j;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L47a994.  v3:= `@@u6.h$a.o` @type ^`u6.h$a` @kind object;
  #L47a998.  v0:= v12.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a99c.  v0:= (`u6.j`) v0 @kind object;
  #L47a9a0.  v4:= v0.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a9a4.  v1:= 0I;
  #L47a9a6.  v2:= 0I;
  #L47a9a8.  v5:= 0I;
  #L47a9aa.  v0:= v12 @kind object;
  #L47a9ac.  call temp:= `k`(v0, v1, v2, v3, v4, v5) @signature `Lu6/j;.k:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h$a;Lu6/h;Lu6/h;)Lu6/j;` @kind virtual;
  #L47a9b2.  v11:= temp @kind object;
  #L47a9b4.  v6:= v12.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a9b8.  call temp:= `n`(v12) @signature `Lu6/j;.n:()Lu6/h$a;` @kind virtual;
  #L47a9be.  v9:= temp @kind object;
  #L47a9c0.  v7:= 0I;
  #L47a9c2.  v8:= 0I;
  #L47a9c4.  v10:= 0I;
  #L47a9c6.  call temp:= `f`(v6, v7, v8, v9, v10, v11) @signature `Lu6/h;.f:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h$a;Lu6/h;Lu6/h;)Lu6/h;` @kind interface;
  #L47a9cc.  v0:= temp @kind object;
  #L47a9ce.  v0:= (`u6.j`) v0 @kind object;
  #L47a9d2.  return v0 @kind object;
}
procedure `u6.h` `a`(`u6.j` v1 @kind this) @signature `Lu6/j;.a:()Lu6/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47a45c.  v0:= v1.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a460.  return v0 @kind object;
}
procedure `u6.h` `b`(`u6.j` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.util.Comparator` v5 @kind object) @signature `Lu6/j;.b:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lu6/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47a4ec.  v0:= v2.`u6.j.a` @type ^`java.lang.Object` @kind object;
  #L47a4f0.  call temp:= `compare`(v5, v3, v0) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L47a4f6.  v0:= temp;
  #L47a4f8.  v1:= 0I;
  #L47a4fa.  if v0 >= 0 then goto L47a514;
  #L47a4fe.  v0:= v2.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a502.  call temp:= `b`(v0, v3, v4, v5) @signature `Lu6/h;.b:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lu6/h;` @kind interface;
  #L47a508.  v3:= temp @kind object;
  #L47a50a.  call temp:= `l`(v2, v1, v1, v3, v1) @signature `Lu6/j;.l:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)Lu6/j;` @kind virtual;
  #L47a510.  v3:= temp @kind object;
  #L47a512.  goto L47a536;
  #L47a514.  if v0 != 0 then goto L47a522;
  #L47a518.  call temp:= `l`(v2, v3, v4, v1, v1) @signature `Lu6/j;.l:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)Lu6/j;` @kind virtual;
  #L47a51e.  v3:= temp @kind object;
  #L47a520.  goto L47a536;
  #L47a522.  v0:= v2.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a526.  call temp:= `b`(v0, v3, v4, v5) @signature `Lu6/h;.b:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lu6/h;` @kind interface;
  #L47a52c.  v3:= temp @kind object;
  #L47a52e.  call temp:= `l`(v2, v1, v1, v1, v3) @signature `Lu6/j;.l:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)Lu6/j;` @kind virtual;
  #L47a534.  v3:= temp @kind object;
  #L47a536.  call temp:= `m`(v3) @signature `Lu6/j;.m:()Lu6/j;` @kind direct;
  #L47a53c.  v3:= temp @kind object;
  #L47a53e.  return v3 @kind object;
}
procedure `u6.h` `d`(`u6.j` v1 @kind this) @signature `Lu6/j;.d:()Lu6/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47a4d4.  v0:= v1.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a4d8.  return v0 @kind object;
}
procedure `void` `e`(`u6.j` v2 @kind this, `u6.h$b` v3 @kind object) @signature `Lu6/j;.e:(Lu6/h$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47aa24.  v0:= v2.`u6.j.c` @type ^`u6.h` @kind object;
  #L47aa28.  call `e`(v0, v3) @signature `Lu6/h;.e:(Lu6/h$b;)V` @kind interface;
  #L47aa2e.  v0:= v2.`u6.j.a` @type ^`java.lang.Object` @kind object;
  #L47aa32.  v1:= v2.`u6.j.b` @type ^`java.lang.Object` @kind object;
  #L47aa36.  call `a`(v3, v0, v1) @signature `Lu6/h$b;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L47aa3c.  v0:= v2.`u6.j.d` @type ^`u6.h` @kind object;
  #L47aa40.  call `e`(v0, v3) @signature `Lu6/h;.e:(Lu6/h$b;)V` @kind interface;
  #L47aa46.  return @kind void;
}
procedure `u6.h` `f`(`u6.j` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `u6.h$a` v3 @kind object, `u6.h` v4 @kind object, `u6.h` v5 @kind object) @signature `Lu6/j;.f:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h$a;Lu6/h;Lu6/h;)Lu6/h;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L47a440.  call temp:= `k`(v0, v1, v2, v3, v4, v5) @signature `Lu6/j;.k:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h$a;Lu6/h;Lu6/h;)Lu6/j;` @kind virtual;
  #L47a446.  v1:= temp @kind object;
  #L47a448.  return v1 @kind object;
}
procedure `u6.h` `g`(`u6.j` v5 @kind this, `java.lang.Object` v6 @kind object, `java.util.Comparator` v7 @kind object) @signature `Lu6/j;.g:(Ljava/lang/Object;Ljava/util/Comparator;)Lu6/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47a550.  v0:= v5.`u6.j.a` @type ^`java.lang.Object` @kind object;
  #L47a554.  call temp:= `compare`(v7, v6, v0) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L47a55a.  v0:= temp;
  #L47a55c.  v1:= 0I;
  #L47a55e.  if v0 >= 0 then goto L47a5bc;
  #L47a562.  v0:= v5.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a566.  call temp:= `isEmpty`(v0) @signature `Lu6/h;.isEmpty:()Z` @kind interface;
  #L47a56c.  v0:= temp;
  #L47a56e.  if v0 != 0 then goto L47a5a4;
  #L47a572.  v0:= v5.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a576.  call temp:= `c`(v0) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a57c.  v0:= temp;
  #L47a57e.  if v0 != 0 then goto L47a5a4;
  #L47a582.  v0:= v5.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a586.  v0:= (`u6.j`) v0 @kind object;
  #L47a58a.  v0:= v0.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a58e.  call temp:= `c`(v0) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a594.  v0:= temp;
  #L47a596.  if v0 != 0 then goto L47a5a4;
  #L47a59a.  call temp:= `o`(v5) @signature `Lu6/j;.o:()Lu6/j;` @kind direct;
  #L47a5a0.  v0:= temp @kind object;
  #L47a5a2.  goto L47a5a6;
  #L47a5a4.  v0:= v5 @kind object;
  #L47a5a6.  v2:= v0.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a5aa.  call temp:= `g`(v2, v6, v7) @signature `Lu6/h;.g:(Ljava/lang/Object;Ljava/util/Comparator;)Lu6/h;` @kind interface;
  #L47a5b0.  v6:= temp @kind object;
  #L47a5b2.  call temp:= `l`(v0, v1, v1, v6, v1) @signature `Lu6/j;.l:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)Lu6/j;` @kind virtual;
  #L47a5b8.  v6:= temp @kind object;
  #L47a5ba.  goto L47a68a;
  #L47a5bc.  v0:= v5.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a5c0.  call temp:= `c`(v0) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a5c6.  v0:= temp;
  #L47a5c8.  if v0 == 0 then goto L47a5d6;
  #L47a5cc.  call temp:= `t`(v5) @signature `Lu6/j;.t:()Lu6/j;` @kind direct;
  #L47a5d2.  v0:= temp @kind object;
  #L47a5d4.  goto L47a5d8;
  #L47a5d6.  v0:= v5 @kind object;
  #L47a5d8.  v2:= v0.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a5dc.  call temp:= `isEmpty`(v2) @signature `Lu6/h;.isEmpty:()Z` @kind interface;
  #L47a5e2.  v2:= temp;
  #L47a5e4.  if v2 != 0 then goto L47a618;
  #L47a5e8.  v2:= v0.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a5ec.  call temp:= `c`(v2) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a5f2.  v2:= temp;
  #L47a5f4.  if v2 != 0 then goto L47a618;
  #L47a5f8.  v2:= v0.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a5fc.  v2:= (`u6.j`) v2 @kind object;
  #L47a600.  v2:= v2.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a604.  call temp:= `c`(v2) @signature `Lu6/h;.c:()Z` @kind interface;
  #L47a60a.  v2:= temp;
  #L47a60c.  if v2 != 0 then goto L47a618;
  #L47a610.  call temp:= `p`(v0) @signature `Lu6/j;.p:()Lu6/j;` @kind direct;
  #L47a616.  v0:= temp @kind object;
  #L47a618.  v2:= v0.`u6.j.a` @type ^`java.lang.Object` @kind object;
  #L47a61c.  call temp:= `compare`(v7, v6, v2) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L47a622.  v2:= temp;
  #L47a624.  if v2 != 0 then goto L47a676;
  #L47a628.  v2:= v0.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a62c.  call temp:= `isEmpty`(v2) @signature `Lu6/h;.isEmpty:()Z` @kind interface;
  #L47a632.  v2:= temp;
  #L47a634.  if v2 == 0 then goto L47a642;
  #L47a638.  call temp:= `j`() @signature `Lu6/g;.j:()Lu6/g;` @kind static;
  #L47a63e.  v6:= temp @kind object;
  #L47a640.  return v6 @kind object;
  #L47a642.  v2:= v0.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a646.  call temp:= `h`(v2) @signature `Lu6/h;.h:()Lu6/h;` @kind interface;
  #L47a64c.  v2:= temp @kind object;
  #L47a64e.  call temp:= `getKey`(v2) @signature `Lu6/h;.getKey:()Ljava/lang/Object;` @kind interface;
  #L47a654.  v3:= temp @kind object;
  #L47a656.  call temp:= `getValue`(v2) @signature `Lu6/h;.getValue:()Ljava/lang/Object;` @kind interface;
  #L47a65c.  v2:= temp @kind object;
  #L47a65e.  v4:= v0.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a662.  v4:= (`u6.j`) v4 @kind object;
  #L47a666.  call temp:= `r`(v4) @signature `Lu6/j;.r:()Lu6/h;` @kind direct;
  #L47a66c.  v4:= temp @kind object;
  #L47a66e.  call temp:= `l`(v0, v3, v2, v1, v4) @signature `Lu6/j;.l:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)Lu6/j;` @kind virtual;
  #L47a674.  v0:= temp @kind object;
  #L47a676.  v2:= v0.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a67a.  call temp:= `g`(v2, v6, v7) @signature `Lu6/h;.g:(Ljava/lang/Object;Ljava/util/Comparator;)Lu6/h;` @kind interface;
  #L47a680.  v6:= temp @kind object;
  #L47a682.  call temp:= `l`(v0, v1, v1, v1, v6) @signature `Lu6/j;.l:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)Lu6/j;` @kind virtual;
  #L47a688.  v6:= temp @kind object;
  #L47a68a.  call temp:= `m`(v6) @signature `Lu6/j;.m:()Lu6/j;` @kind direct;
  #L47a690.  v6:= temp @kind object;
  #L47a692.  return v6 @kind object;
}
procedure `java.lang.Object` `getKey`(`u6.j` v1 @kind this) @signature `Lu6/j;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47a410.  v0:= v1.`u6.j.a` @type ^`java.lang.Object` @kind object;
  #L47a414.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`u6.j` v1 @kind this) @signature `Lu6/j;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47a428.  v0:= v1.`u6.j.b` @type ^`java.lang.Object` @kind object;
  #L47a42c.  return v0 @kind object;
}
procedure `u6.h` `h`(`u6.j` v1 @kind this) @signature `Lu6/j;.h:()Lu6/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47a4a4.  v0:= v1.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a4a8.  call temp:= `isEmpty`(v0) @signature `Lu6/h;.isEmpty:()Z` @kind interface;
  #L47a4ae.  v0:= temp;
  #L47a4b0.  if v0 == 0 then goto L47a4b6;
  #L47a4b4.  return v1 @kind object;
  #L47a4b6.  v0:= v1.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a4ba.  call temp:= `h`(v0) @signature `Lu6/h;.h:()Lu6/h;` @kind interface;
  #L47a4c0.  v0:= temp @kind object;
  #L47a4c2.  return v0 @kind object;
}
procedure `u6.h` `i`(`u6.j` v1 @kind this) @signature `Lu6/j;.i:()Lu6/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47a474.  v0:= v1.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a478.  call temp:= `isEmpty`(v0) @signature `Lu6/h;.isEmpty:()Z` @kind interface;
  #L47a47e.  v0:= temp;
  #L47a480.  if v0 == 0 then goto L47a486;
  #L47a484.  return v1 @kind object;
  #L47a486.  v0:= v1.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a48a.  call temp:= `i`(v0) @signature `Lu6/h;.i:()Lu6/h;` @kind interface;
  #L47a490.  v0:= temp @kind object;
  #L47a492.  return v0 @kind object;
}
procedure `boolean` `isEmpty`(`u6.j` v1 @kind this) @signature `Lu6/j;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47a3fc.  v0:= 0I;
  #L47a3fe.  return v0;
}
procedure `u6.j` `k`(`u6.j` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `u6.h$a` v4 @kind object, `u6.h` v5 @kind object, `u6.h` v6 @kind object) @signature `Lu6/j;.k:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h$a;Lu6/h;Lu6/h;)Lu6/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47a7b0.  if v2 != 0 then goto L47a7b8;
  #L47a7b4.  v2:= v1.`u6.j.a` @type ^`java.lang.Object` @kind object;
  #L47a7b8.  if v3 != 0 then goto L47a7c0;
  #L47a7bc.  v3:= v1.`u6.j.b` @type ^`java.lang.Object` @kind object;
  #L47a7c0.  if v5 != 0 then goto L47a7c8;
  #L47a7c4.  v5:= v1.`u6.j.c` @type ^`u6.h` @kind object;
  #L47a7c8.  if v6 != 0 then goto L47a7d0;
  #L47a7cc.  v6:= v1.`u6.j.d` @type ^`u6.h` @kind object;
  #L47a7d0.  v0:= `@@u6.h$a.o` @type ^`u6.h$a` @kind object;
  #L47a7d4.  if v4 != v0 then goto L47a7e4;
  #L47a7d8.  v4:= new `u6.i`;
  #L47a7dc.  call `<init>`(v4, v2, v3, v5, v6) @signature `Lu6/i;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)V` @kind direct;
  #L47a7e2.  return v4 @kind object;
  #L47a7e4.  v4:= new `u6.f`;
  #L47a7e8.  call `<init>`(v4, v2, v3, v5, v6) @signature `Lu6/f;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)V` @kind direct;
  #L47a7ee.  return v4 @kind object;
}
procedure `u6.j` `l`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `u6.h` v2 @kind object, `u6.h` v3 @kind object) @signature `Lu6/j;.l:(Ljava/lang/Object;Ljava/lang/Object;Lu6/h;Lu6/h;)Lu6/j;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `u6.h$a` `n`() @signature `Lu6/j;.n:()Lu6/h$a;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `u`(`u6.j` v0 @kind this, `u6.h` v1 @kind object) @signature `Lu6/j;.u:(Lu6/h;)V` @AccessFlag  {
    temp;

  #L47aa58.  v0.`u6.j.c` @type ^`u6.h` := v1 @kind object;
  #L47aa5c.  return @kind void;
}
