record `h9.p` @kind class @AccessFlag  extends `h9.n` @kind interface {
  `java.lang.String` `h9.p.a` @AccessFlag FINAL;
  `int` `h9.p.b` @AccessFlag FINAL;
  `int` `h9.p.c` @AccessFlag FINAL;
  `java.util.LinkedList` `h9.p.d` @AccessFlag PRIVATE_FINAL;
  `java.util.LinkedList` `h9.p.e` @AccessFlag PRIVATE_FINAL;
  `java.util.LinkedList` `h9.p.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h9.p` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lh9/p;.<init>:(Ljava/lang/String;II)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L340068.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34006e.  v0:= new `java.util.LinkedList`;
  #L340072.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L340078.  v1.`h9.p.d` @type ^`java.util.LinkedList` := v0 @kind object;
  #L34007c.  v0:= new `java.util.LinkedList`;
  #L340080.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L340086.  v1.`h9.p.e` @type ^`java.util.LinkedList` := v0 @kind object;
  #L34008a.  v0:= new `java.util.LinkedList`;
  #L34008e.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L340094.  v1.`h9.p.f` @type ^`java.util.LinkedList` := v0 @kind object;
  #L340098.  v1.`h9.p.a` @type ^`java.lang.String` := v2 @kind object;
  #L34009c.  v1.`h9.p.b` @type ^`int` := v3;
  #L3400a0.  v1.`h9.p.c` @type ^`int` := v4;
  #L3400a4.  return @kind void;
}
procedure `void` `c`(`h9.p` v0 @kind object, `h9.l` v1 @kind object) @signature `Lh9/p;.c:(Lh9/p;Lh9/l;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L340050.  call `e`(v0, v1) @signature `Lh9/p;.e:(Lh9/l;)V` @kind direct;
  #L340056.  return @kind void;
}
procedure `void` `d`(`h9.p` v2 @kind this, `h9.l` v3 @kind object) @signature `Lh9/p;.d:(Lh9/l;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3400b8.  @monitorenter v2
  #L3400ba.  v0:= v2.`h9.p.d` @type ^`java.util.LinkedList` @kind object;
  #L3400be.  call temp:= `listIterator`(v0) @signature `Ljava/util/LinkedList;.listIterator:()Ljava/util/ListIterator;` @kind virtual;
  #L3400c4.  v0:= temp @kind object;
  #L3400c6.  call temp:= `hasNext`(v0) @signature `Ljava/util/ListIterator;.hasNext:()Z` @kind interface;
  #L3400cc.  v1:= temp;
  #L3400ce.  if v1 == 0 then goto L3400f0;
  #L3400d2.  call temp:= `next`(v0) @signature `Ljava/util/ListIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3400d8.  v1:= temp @kind object;
  #L3400da.  v1:= (`h9.j`) v1 @kind object;
  #L3400de.  call temp:= `b`(v3, v1) @signature `Lh9/l;.b:(Lh9/j;)Z` @kind virtual;
  #L3400e4.  v1:= temp;
  #L3400e6.  if v1 == 0 then goto L3400c6;
  #L3400ea.  call `remove`(v0) @signature `Ljava/util/ListIterator;.remove:()V` @kind interface;
  #L3400f0.  call temp:= `hasNext`(v0) @signature `Ljava/util/ListIterator;.hasNext:()Z` @kind interface;
  #L3400f6.  v1:= temp;
  #L3400f8.  if v1 == 0 then goto L340116;
  #L3400fc.  call temp:= `next`(v0) @signature `Ljava/util/ListIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L340102.  v1:= temp @kind object;
  #L340104.  v1:= (`h9.j`) v1 @kind object;
  #L340108.  call temp:= `b`(v3, v1) @signature `Lh9/l;.b:(Lh9/j;)Z` @kind virtual;
  #L34010e.  v1:= temp;
  #L340110.  if v1 == 0 then goto L340116;
  #L340114.  goto L3400ea;
  #L340116.  @monitorexit v2
  #L340118.  return @kind void;
  #L34011a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L34011c.  @monitorexit v2
  #L34011e.  throw v3;
  catch `java.lang.Throwable` @[L3400ba..L340110] goto L34011a;
}
procedure `void` `e`(`h9.p` v0 @kind this, `h9.l` v1 @kind object) @signature `Lh9/p;.e:(Lh9/l;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;

  #L34013c.  call `f`(v0, v1) @signature `Lh9/p;.f:(Lh9/l;)V` @kind direct;
  #L340142.  return @kind void;
}
procedure `void` `f`(`h9.p` v1 @kind this, `h9.l` v2 @kind object) @signature `Lh9/p;.f:(Lh9/l;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L340154.  @monitorenter v1
  #L340156.  call `d`(v1, v2) @signature `Lh9/p;.d:(Lh9/l;)V` @kind direct;
  #L34015c.  call temp:= `d`(v2) @signature `Lh9/l;.d:()Z` @kind virtual;
  #L340162.  v0:= temp;
  #L340164.  if v0 == 0 then goto L34017c;
  #L340168.  v0:= v1.`h9.p.f` @type ^`java.util.LinkedList` @kind object;
  #L34016c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/LinkedList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L340172.  v0:= v1.`h9.p.e` @type ^`java.util.LinkedList` @kind object;
  #L340176.  call temp:= `add`(v0, v2) @signature `Ljava/util/LinkedList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L34017c.  @monitorexit v1
  #L34017e.  return @kind void;
  #L340180.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L340182.  @monitorexit v1
  #L340184.  throw v2;
  catch `java.lang.Throwable` @[L340156..L34017c] goto L340180;
}
procedure `void` `a`(`h9.p` v2 @kind this) @signature `Lh9/p;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L34027c.  @monitorenter v2
  #L34027e.  v0:= v2.`h9.p.e` @type ^`java.util.LinkedList` @kind object;
  #L340282.  call temp:= `iterator`(v0) @signature `Ljava/util/LinkedList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L340288.  v0:= temp @kind object;
  #L34028a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L340290.  v1:= temp;
  #L340292.  if v1 == 0 then goto L3402aa;
  #L340296.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L34029c.  v1:= temp @kind object;
  #L34029e.  v1:= (`h9.l`) v1 @kind object;
  #L3402a2.  call `g`(v1) @signature `Lh9/l;.g:()V` @kind virtual;
  #L3402a8.  goto L34028a;
  #L3402aa.  v0:= v2.`h9.p.f` @type ^`java.util.LinkedList` @kind object;
  #L3402ae.  call temp:= `iterator`(v0) @signature `Ljava/util/LinkedList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3402b4.  v0:= temp @kind object;
  #L3402b6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3402bc.  v1:= temp;
  #L3402be.  if v1 == 0 then goto L3402d6;
  #L3402c2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3402c8.  v1:= temp @kind object;
  #L3402ca.  v1:= (`h9.l`) v1 @kind object;
  #L3402ce.  call `g`(v1) @signature `Lh9/l;.g:()V` @kind virtual;
  #L3402d4.  goto L3402b6;
  #L3402d6.  @monitorexit v2
  #L3402d8.  return @kind void;
  #L3402da.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3402dc.  @monitorexit v2
  #L3402de.  throw v0;
  catch `java.lang.Throwable` @[L34027e..L3402d4] goto L3402da;
}
procedure `void` `b`(`h9.p` v1 @kind this, `h9.i` v2 @kind object, `java.lang.Runnable` v3 @kind object) @signature `Lh9/p;.b:(Lh9/i;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3401a4.  @monitorenter v1
  #L3401a6.  v0:= new `h9.j`;
  #L3401aa.  call `<init>`(v0, v2, v3) @signature `Lh9/j;.<init>:(Lh9/i;Ljava/lang/Runnable;)V` @kind direct;
  #L3401b0.  v2:= v1.`h9.p.d` @type ^`java.util.LinkedList` @kind object;
  #L3401b4.  call temp:= `isEmpty`(v2) @signature `Ljava/util/LinkedList;.isEmpty:()Z` @kind virtual;
  #L3401ba.  v2:= temp;
  #L3401bc.  if v2 == 0 then goto L3401f4;
  #L3401c0.  v2:= v1.`h9.p.f` @type ^`java.util.LinkedList` @kind object;
  #L3401c4.  call temp:= `iterator`(v2) @signature `Ljava/util/LinkedList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3401ca.  v2:= temp @kind object;
  #L3401cc.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3401d2.  v3:= temp;
  #L3401d4.  if v3 == 0 then goto L3401f4;
  #L3401d8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3401de.  v3:= temp @kind object;
  #L3401e0.  v3:= (`h9.l`) v3 @kind object;
  #L3401e4.  call temp:= `b`(v3, v0) @signature `Lh9/l;.b:(Lh9/j;)Z` @kind virtual;
  #L3401ea.  v3:= temp;
  #L3401ec.  if v3 == 0 then goto L3401cc;
  #L3401f0.  @monitorexit v1
  #L3401f2.  return @kind void;
  #L3401f4.  v2:= v1.`h9.p.d` @type ^`java.util.LinkedList` @kind object;
  #L3401f8.  call temp:= `add`(v2, v0) @signature `Ljava/util/LinkedList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3401fe.  v2:= v1.`h9.p.e` @type ^`java.util.LinkedList` @kind object;
  #L340202.  call temp:= `iterator`(v2) @signature `Ljava/util/LinkedList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L340208.  v2:= temp @kind object;
  #L34020a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L340210.  v3:= temp;
  #L340212.  if v3 == 0 then goto L34024c;
  #L340216.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L34021c.  v3:= temp @kind object;
  #L34021e.  v3:= (`h9.l`) v3 @kind object;
  #L340222.  call `d`(v1, v3) @signature `Lh9/p;.d:(Lh9/l;)V` @kind direct;
  #L340228.  call temp:= `c`(v3) @signature `Lh9/l;.c:()Z` @kind virtual;
  #L34022e.  v0:= temp;
  #L340230.  if v0 == 0 then goto L34020a;
  #L340234.  v2:= v1.`h9.p.f` @type ^`java.util.LinkedList` @kind object;
  #L340238.  call temp:= `add`(v2, v3) @signature `Ljava/util/LinkedList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L34023e.  v2:= v1.`h9.p.e` @type ^`java.util.LinkedList` @kind object;
  #L340242.  call temp:= `remove`(v2, v3) @signature `Ljava/util/LinkedList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L340248.  @monitorexit v1
  #L34024a.  return @kind void;
  #L34024c.  @monitorexit v1
  #L34024e.  return @kind void;
  #L340250.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L340252.  @monitorexit v1
  #L340254.  throw v2;
  catch `java.lang.Throwable` @[L3401a6..L3401ec] goto L340250;
  catch `java.lang.Throwable` @[L3401f4..L340248] goto L340250;
}
procedure `void` `start`(`h9.p` v4 @kind this) @signature `Lh9/p;.start:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3402fc.  @monitorenter v4
  #L3402fe.  v0:= 0I;
  #L340300.  v1:= v4.`h9.p.b` @type ^`int`;
  #L340304.  if v0 >= v1 then goto L340358;
  #L340308.  v1:= new `h9.l`;
  #L34030c.  v2:= new `java.lang.StringBuilder`;
  #L340310.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L340316.  v3:= v4.`h9.p.a` @type ^`java.lang.String` @kind object;
  #L34031a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L340320.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L340326.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34032c.  v2:= temp @kind object;
  #L34032e.  v3:= v4.`h9.p.c` @type ^`int`;
  #L340332.  call `<init>`(v1, v2, v3) @signature `Lh9/l;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L340338.  v2:= new `h9.o`;
  #L34033c.  call `<init>`(v2, v4, v1) @signature `Lh9/o;.<init>:(Lh9/p;Lh9/l;)V` @kind direct;
  #L340342.  call `h`(v1, v2) @signature `Lh9/l;.h:(Ljava/lang/Runnable;)V` @kind virtual;
  #L340348.  v2:= v4.`h9.p.e` @type ^`java.util.LinkedList` @kind object;
  #L34034c.  call temp:= `add`(v2, v1) @signature `Ljava/util/LinkedList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L340352.  v0:= v0 + 1;
  #L340356.  goto L340300;
  #L340358.  @monitorexit v4
  #L34035a.  return @kind void;
  #L34035c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L34035e.  @monitorexit v4
  #L340360.  throw v0;
  catch `java.lang.Throwable` @[L340300..L340352] goto L34035c;
}
