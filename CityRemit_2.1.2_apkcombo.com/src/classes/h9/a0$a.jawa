record `h9.a0$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `h9.i` `h9.a0$a.o` @AccessFlag FINAL_SYNTHETIC;
  `ha.k$d` `h9.a0$a.p` @AccessFlag FINAL_SYNTHETIC;
  `h9.a0` `h9.a0$a.q` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`h9.a0$a` v0 @kind this, `h9.a0` v1 @kind object, `h9.i` v2 @kind object, `ha.k$d` v3 @kind object) @signature `Lh9/a0$a;.<init>:(Lh9/a0;Lh9/i;Lha/k$d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L341c7c.  v0.`h9.a0$a.q` @type ^`h9.a0` := v1 @kind object;
  #L341c80.  v0.`h9.a0$a.o` @type ^`h9.i` := v2 @kind object;
  #L341c84.  v0.`h9.a0$a.p` @type ^`ha.k$d` := v3 @kind object;
  #L341c88.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L341c8e.  return @kind void;
}
procedure `void` `run`(`h9.a0$a` v3 @kind this) @signature `Lh9/a0$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L341ca0.  call temp:= `h`() @signature `Lh9/a0;.h:()Ljava/lang/Object;` @kind static;
  #L341ca6.  v0:= temp @kind object;
  #L341ca8.  @monitorenter v0
  #L341caa.  v1:= v3.`h9.a0$a.q` @type ^`h9.a0` @kind object;
  #L341cae.  v2:= v3.`h9.a0$a.o` @type ^`h9.i` @kind object;
  #L341cb2.  call `i`(v1, v2) @signature `Lh9/a0;.i:(Lh9/a0;Lh9/i;)V` @kind static;
  #L341cb8.  @monitorexit v0
  #L341cba.  v0:= v3.`h9.a0$a.p` @type ^`ha.k$d` @kind object;
  #L341cbe.  v1:= 0I;
  #L341cc0.  call `a`(v0, v1) @signature `Lha/k$d;.a:(Ljava/lang/Object;)V` @kind interface;
  #L341cc6.  return @kind void;
  #L341cc8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L341cca.  @monitorexit v0
  #L341ccc.  throw v1;
  catch `java.lang.Throwable` @[L341caa..L341cba] goto L341cc8;
  catch `java.lang.Throwable` @[L341cca..L341ccc] goto L341cc8;
}
