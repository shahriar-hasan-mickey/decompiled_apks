record `f3.b$f` @kind class @AccessFlag  extends `f3.b$a` @kind class {
  `java.lang.String` `f3.b$f.e` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `f3.b$f.f` @AccessFlag PRIVATE_FINAL;
  `int` `f3.b$f.g` @AccessFlag PRIVATE;
  `java.lang.String` `f3.b$f.h` @AccessFlag PRIVATE;
  `long` `f3.b$f.i` @AccessFlag PRIVATE;
  `java.lang.String` `f3.b$f.j` @AccessFlag PRIVATE;
  `java.lang.String` `f3.b$f.k` @AccessFlag PRIVATE;
  `int` `f3.b$f.l` @AccessFlag PRIVATE;
  `int` `f3.b$f.m` @AccessFlag PRIVATE;
  `int` `f3.b$f.n` @AccessFlag PRIVATE;
  `int` `f3.b$f.o` @AccessFlag PRIVATE;
  `java.lang.String` `f3.b$f.p` @AccessFlag PRIVATE;
  `java.util.ArrayList` `f3.b$f.q` @AccessFlag PRIVATE;
  `long` `f3.b$f.r` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`f3.b$f` v1 @kind this, `f3.b$a` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lf3/b$f;.<init>:(Lf3/b$a;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L30603c.  v0:= "StreamIndex" @kind object;
  #L306040.  call `<init>`(v1, v2, v3, v0) @signature `Lf3/b$a;.<init>:(Lf3/b$a;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L306046.  v1.`f3.b$f.e` @type ^`java.lang.String` := v3 @kind object;
  #L30604a.  v2:= new `java.util.LinkedList`;
  #L30604e.  call `<init>`(v2) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L306054.  v1.`f3.b$f.f` @type ^`java.util.List` := v2 @kind object;
  #L306058.  return @kind void;
}
procedure `void` `q`(`f3.b$f` v5 @kind this, `org.xmlpull.v1.XmlPullParser` v6 @kind object) @signature `Lf3/b$f;.q:(Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3060cc.  call temp:= `s`(v5, v6) @signature `Lf3/b$f;.s:(Lorg/xmlpull/v1/XmlPullParser;)I` @kind direct;
  #L3060d2.  v0:= temp;
  #L3060d4.  v5.`f3.b$f.g` @type ^`int` := v0;
  #L3060d8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3060de.  v0:= temp @kind object;
  #L3060e0.  v1:= "Type" @kind object;
  #L3060e4.  call `p`(v5, v1, v0) @signature `Lf3/b$a;.p:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L3060ea.  v0:= v5.`f3.b$f.g` @type ^`int`;
  #L3060ee.  v1:= "Subtype" @kind object;
  #L3060f2.  v2:= 0I;
  #L3060f4.  v3:= 3I;
  #L3060f6.  if v0 != v3 then goto L306104;
  #L3060fa.  call temp:= `m`(v5, v6, v1) @signature `Lf3/b$a;.m:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L306100.  v0:= temp @kind object;
  #L306102.  goto L30610c;
  #L306104.  call temp:= `getAttributeValue`(v6, v2, v1) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L30610a.  v0:= temp @kind object;
  #L30610c.  v5.`f3.b$f.h` @type ^`java.lang.String` := v0 @kind object;
  #L306110.  v0:= v5.`f3.b$f.h` @type ^`java.lang.String` @kind object;
  #L306114.  call `p`(v5, v1, v0) @signature `Lf3/b$a;.p:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L30611a.  v0:= "Name" @kind object;
  #L30611e.  call temp:= `getAttributeValue`(v6, v2, v0) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L306124.  v1:= temp @kind object;
  #L306126.  v5.`f3.b$f.j` @type ^`java.lang.String` := v1 @kind object;
  #L30612a.  call `p`(v5, v0, v1) @signature `Lf3/b$a;.p:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L306130.  v0:= "Url" @kind object;
  #L306134.  call temp:= `m`(v5, v6, v0) @signature `Lf3/b$a;.m:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L30613a.  v0:= temp @kind object;
  #L30613c.  v5.`f3.b$f.k` @type ^`java.lang.String` := v0 @kind object;
  #L306140.  v0:= "MaxWidth" @kind object;
  #L306144.  v1:= -1I;
  #L306146.  call temp:= `i`(v5, v6, v0, v1) @signature `Lf3/b$a;.i:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)I` @kind virtual;
  #L30614c.  v0:= temp;
  #L30614e.  v5.`f3.b$f.l` @type ^`int` := v0;
  #L306152.  v0:= "MaxHeight" @kind object;
  #L306156.  call temp:= `i`(v5, v6, v0, v1) @signature `Lf3/b$a;.i:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)I` @kind virtual;
  #L30615c.  v0:= temp;
  #L30615e.  v5.`f3.b$f.m` @type ^`int` := v0;
  #L306162.  v0:= "DisplayWidth" @kind object;
  #L306166.  call temp:= `i`(v5, v6, v0, v1) @signature `Lf3/b$a;.i:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)I` @kind virtual;
  #L30616c.  v0:= temp;
  #L30616e.  v5.`f3.b$f.n` @type ^`int` := v0;
  #L306172.  v0:= "DisplayHeight" @kind object;
  #L306176.  call temp:= `i`(v5, v6, v0, v1) @signature `Lf3/b$a;.i:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)I` @kind virtual;
  #L30617c.  v0:= temp;
  #L30617e.  v5.`f3.b$f.o` @type ^`int` := v0;
  #L306182.  v0:= "Language" @kind object;
  #L306186.  call temp:= `getAttributeValue`(v6, v2, v0) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L30618c.  v2:= temp @kind object;
  #L30618e.  v5.`f3.b$f.p` @type ^`java.lang.String` := v2 @kind object;
  #L306192.  call `p`(v5, v0, v2) @signature `Lf3/b$a;.p:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L306198.  v0:= "TimeScale" @kind object;
  #L30619c.  call temp:= `i`(v5, v6, v0, v1) @signature `Lf3/b$a;.i:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)I` @kind virtual;
  #L3061a2.  v6:= temp;
  #L3061a4.  v1:= (`long`) v6 @kind i2l;
  #L3061a6.  v5.`f3.b$f.i` @type ^`long` := v1 @kind wide;
  #L3061aa.  v3:= -1L;
  #L3061ae.  v6:= lcmp(v1, v3);
  #L3061b2.  if v6 != 0 then goto L3061ce;
  #L3061b6.  call temp:= `c`(v5, v0) @signature `Lf3/b$a;.c:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L3061bc.  v6:= temp @kind object;
  #L3061be.  v6:= (`java.lang.Long`) v6 @kind object;
  #L3061c2.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3061c8.  v0:= temp @kind wide;
  #L3061ca.  v5.`f3.b$f.i` @type ^`long` := v0 @kind wide;
  #L3061ce.  v6:= new `java.util.ArrayList`;
  #L3061d2.  call `<init>`(v6) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3061d8.  v5.`f3.b$f.q` @type ^`java.util.ArrayList` := v6 @kind object;
  #L3061dc.  return @kind void;
}
procedure `void` `r`(`f3.b$f` v11 @kind this, `org.xmlpull.v1.XmlPullParser` v12 @kind object) @signature `Lf3/b$f;.r:(Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3061f0.  v0:= v11.`f3.b$f.q` @type ^`java.util.ArrayList` @kind object;
  #L3061f4.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L3061fa.  v0:= temp;
  #L3061fc.  v1:= "t" @kind object;
  #L306200.  v2:= -4.9E-324D;
  #L30620a.  call temp:= `j`(v11, v12, v1, v2) @signature `Lf3/b$a;.j:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;J)J` @kind virtual;
  #L306210.  v4:= temp @kind wide;
  #L306212.  v1:= 0I;
  #L306214.  v6:= 1I;
  #L306216.  v7:= lcmp(v4, v2);
  #L30621a.  if v7 != 0 then goto L306268;
  #L30621e.  if v0 != 0 then goto L306228;
  #L306222.  v4:= 0L;
  #L306226.  goto L306268;
  #L306228.  v4:= v11.`f3.b$f.r` @type ^`long` @kind wide;
  #L30622c.  v7:= -1L;
  #L306230.  v9:= lcmp(v4, v7);
  #L306234.  if v9 == 0 then goto L30625a;
  #L306238.  v4:= v11.`f3.b$f.q` @type ^`java.util.ArrayList` @kind object;
  #L30623c.  v0:= v0 - v6 @kind int;
  #L30623e.  call temp:= `get`(v4, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L306244.  v0:= temp @kind object;
  #L306246.  v0:= (`java.lang.Long`) v0 @kind object;
  #L30624a.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L306250.  v4:= temp @kind wide;
  #L306252.  v7:= v11.`f3.b$f.r` @type ^`long` @kind wide;
  #L306256.  v4:= v4 + v7 @kind long;
  #L306258.  goto L306268;
  #L30625a.  v12:= "Unable to infer start time" @kind object;
  #L30625e.  call temp:= `c`(v12, v1) @signature `Lv1/e2;.c:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L306264.  v12:= temp @kind object;
  #L306266.  throw v12;
  #L306268.  v0:= v11.`f3.b$f.q` @type ^`java.util.ArrayList` @kind object;
  #L30626c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L306272.  v7:= temp @kind object;
  #L306274.  call temp:= `add`(v0, v7) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L30627a.  v0:= "d" @kind object;
  #L30627e.  call temp:= `j`(v11, v12, v0, v2) @signature `Lf3/b$a;.j:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;J)J` @kind virtual;
  #L306284.  v7:= temp @kind wide;
  #L306286.  v11.`f3.b$f.r` @type ^`long` := v7 @kind wide;
  #L30628a.  v0:= "r" @kind object;
  #L30628e.  v7:= 1L;
  #L306292.  call temp:= `j`(v11, v12, v0, v7) @signature `Lf3/b$a;.j:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;J)J` @kind virtual;
  #L306298.  v9:= temp @kind wide;
  #L30629a.  v12:= lcmp(v9, v7);
  #L30629e.  if v12 <= 0 then goto L3062be;
  #L3062a2.  v7:= v11.`f3.b$f.r` @type ^`long` @kind wide;
  #L3062a6.  v12:= lcmp(v7, v2);
  #L3062aa.  if v12 == 0 then goto L3062b0;
  #L3062ae.  goto L3062be;
  #L3062b0.  v12:= "Repeated chunk with unspecified duration" @kind object;
  #L3062b4.  call temp:= `c`(v12, v1) @signature `Lv1/e2;.c:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L3062ba.  v12:= temp @kind object;
  #L3062bc.  throw v12;
  #L3062be.  v0:= (`long`) v6 @kind i2l;
  #L3062c0.  v12:= lcmp(v0, v9);
  #L3062c4.  if v12 >= 0 then goto L3062ea;
  #L3062c8.  v12:= v11.`f3.b$f.q` @type ^`java.util.ArrayList` @kind object;
  #L3062cc.  v2:= v11.`f3.b$f.r` @type ^`long` @kind wide;
  #L3062d0.  v2:= v2 * v0 @kind long;
  #L3062d4.  v2:= v2 + v4 @kind long;
  #L3062d6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3062dc.  v0:= temp @kind object;
  #L3062de.  call temp:= `add`(v12, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3062e4.  v6:= v6 + 1;
  #L3062e8.  goto L3062be;
  #L3062ea.  return @kind void;
}
procedure `int` `s`(`f3.b$f` v3 @kind this, `org.xmlpull.v1.XmlPullParser` v4 @kind object) @signature `Lf3/b$f;.s:(Lorg/xmlpull/v1/XmlPullParser;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L305f14.  v0:= 0I;
  #L305f16.  v1:= "Type" @kind object;
  #L305f1a.  call temp:= `getAttributeValue`(v4, v0, v1) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L305f20.  v4:= temp @kind object;
  #L305f22.  if v4 == 0 then goto L305f98;
  #L305f26.  v1:= "audio" @kind object;
  #L305f2a.  call temp:= `equalsIgnoreCase`(v1, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L305f30.  v1:= temp;
  #L305f32.  if v1 == 0 then goto L305f3a;
  #L305f36.  v4:= 1I;
  #L305f38.  return v4;
  #L305f3a.  v1:= "video" @kind object;
  #L305f3e.  call temp:= `equalsIgnoreCase`(v1, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L305f44.  v1:= temp;
  #L305f46.  if v1 == 0 then goto L305f4e;
  #L305f4a.  v4:= 2I;
  #L305f4c.  return v4;
  #L305f4e.  v1:= "text" @kind object;
  #L305f52.  call temp:= `equalsIgnoreCase`(v1, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L305f58.  v1:= temp;
  #L305f5a.  if v1 == 0 then goto L305f62;
  #L305f5e.  v4:= 3I;
  #L305f60.  return v4;
  #L305f62.  v1:= new `java.lang.StringBuilder`;
  #L305f66.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L305f6c.  v2:= "Invalid key value[" @kind object;
  #L305f70.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L305f76.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L305f7c.  v4:= "]" @kind object;
  #L305f80.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L305f86.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L305f8c.  v4:= temp @kind object;
  #L305f8e.  call temp:= `c`(v4, v0) @signature `Lv1/e2;.c:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L305f94.  v4:= temp @kind object;
  #L305f96.  throw v4;
  #L305f98.  v4:= new `f3.b$b`;
  #L305f9c.  call `<init>`(v4, v1) @signature `Lf3/b$b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L305fa2.  throw v4;
}
procedure `void` `a`(`f3.b$f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lf3/b$f;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30606c.  v0:= instanceof @variable v2 @type ^`v1.j1` @kind boolean;
  #L306070.  if v0 == 0 then goto L306082;
  #L306074.  v0:= v1.`f3.b$f.f` @type ^`java.util.List` @kind object;
  #L306078.  v2:= (`v1.j1`) v2 @kind object;
  #L30607c.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L306082.  return @kind void;
}
procedure `java.lang.Object` `b`(`f3.b$f` v21 @kind this) @signature `Lf3/b$f;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L305fb4.  v0:= v21 @kind object;
  #L305fb8.  v1:= v0.`f3.b$f.f` @type ^`java.util.List` @kind object;
  #L305fbc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L305fc2.  v1:= temp;
  #L305fc4.  v1:= new `v1.j1`[v1];
  #L305fc8.  v15:= v1 @kind object;
  #L305fca.  v2:= v0.`f3.b$f.f` @type ^`java.util.List` @kind object;
  #L305fce.  call temp:= `toArray`(v2, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L305fd4.  v1:= new `f3.a$b`;
  #L305fd8.  v2:= v1 @kind object;
  #L305fda.  v3:= v0.`f3.b$f.e` @type ^`java.lang.String` @kind object;
  #L305fde.  v4:= v0.`f3.b$f.k` @type ^`java.lang.String` @kind object;
  #L305fe2.  v5:= v0.`f3.b$f.g` @type ^`int`;
  #L305fe6.  v6:= v0.`f3.b$f.h` @type ^`java.lang.String` @kind object;
  #L305fea.  v7:= v0.`f3.b$f.i` @type ^`long` @kind wide;
  #L305fee.  v9:= v0.`f3.b$f.j` @type ^`java.lang.String` @kind object;
  #L305ff2.  v10:= v0.`f3.b$f.l` @type ^`int`;
  #L305ff6.  v11:= v0.`f3.b$f.m` @type ^`int`;
  #L305ffa.  v12:= v0.`f3.b$f.n` @type ^`int`;
  #L305ffe.  v13:= v0.`f3.b$f.o` @type ^`int`;
  #L306002.  v14:= v0.`f3.b$f.p` @type ^`java.lang.String` @kind object;
  #L306006.  v19:= v1 @kind object;
  #L30600a.  v1:= v0.`f3.b$f.q` @type ^`java.util.ArrayList` @kind object;
  #L30600e.  v16:= v1 @kind object;
  #L306012.  v20:= v2 @kind object;
  #L306016.  v1:= v0.`f3.b$f.r` @type ^`long` @kind wide;
  #L30601a.  v17:= v1 @kind wide;
  #L30601e.  v2:= v20 @kind object;
  #L306022.  call `<init>`(v2, v3, v4, v5, v6, v7, v9, v10, v11, v12, v13, v14, v15, v16, v17) @signature `Lf3/a$b;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;JLjava/lang/String;IIIILjava/lang/String;[Lv1/j1;Ljava/util/List;J)V` @kind direct;
  #L306028.  return v19 @kind object;
}
procedure `boolean` `d`(`f3.b$f` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lf3/b$f;.d:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L305ef4.  v0:= "c" @kind object;
  #L305ef8.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L305efe.  v2:= temp;
  #L305f00.  return v2;
}
procedure `void` `n`(`f3.b$f` v2 @kind this, `org.xmlpull.v1.XmlPullParser` v3 @kind object) @signature `Lf3/b$f;.n:(Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L306094.  call temp:= `getName`(v3) @signature `Lorg/xmlpull/v1/XmlPullParser;.getName:()Ljava/lang/String;` @kind interface;
  #L30609a.  v0:= temp @kind object;
  #L30609c.  v1:= "c" @kind object;
  #L3060a0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3060a6.  v0:= temp;
  #L3060a8.  if v0 == 0 then goto L3060b4;
  #L3060ac.  call `r`(v2, v3) @signature `Lf3/b$f;.r:(Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L3060b2.  goto L3060ba;
  #L3060b4.  call `q`(v2, v3) @signature `Lf3/b$f;.q:(Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L3060ba.  return @kind void;
}
