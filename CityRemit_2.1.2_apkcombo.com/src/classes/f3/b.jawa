record `f3.b` @kind class @AccessFlag PUBLIC extends `r3.j0$a` @kind interface {
  `org.xmlpull.v1.XmlPullParserFactory` `f3.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`f3.b` v3 @kind this) @signature `Lf3/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L306378.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30637e.  call temp:= `newInstance`() @signature `Lorg/xmlpull/v1/XmlPullParserFactory;.newInstance:()Lorg/xmlpull/v1/XmlPullParserFactory;` @kind static;
  #L306384.  v0:= temp @kind object;
  #L306386.  v3.`f3.b.a` @type ^`org.xmlpull.v1.XmlPullParserFactory` := v0 @kind object;
  #L30638a.  return @kind void;
  #L30638c.  v0:= Exception @type ^`org.xmlpull.v1.XmlPullParserException` @kind object;
  #L30638e.  v1:= new `java.lang.RuntimeException`;
  #L306392.  v2:= "Couldn't create XmlPullParserFactory instance" @kind object;
  #L306396.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L30639c.  throw v1;
  catch `org.xmlpull.v1.XmlPullParserException` @[L30637e..L30638a] goto L30638c;
}
procedure `java.lang.Object` `a`(`f3.b` v0 @kind this, `android.net.Uri` v1 @kind object, `java.io.InputStream` v2 @kind object) @signature `Lf3/b;.a:(Landroid/net/Uri;Ljava/io/InputStream;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L30635c.  call temp:= `b`(v0, v1, v2) @signature `Lf3/b;.b:(Landroid/net/Uri;Ljava/io/InputStream;)Lf3/a;` @kind virtual;
  #L306362.  v1:= temp @kind object;
  #L306364.  return v1 @kind object;
}
procedure `f3.a` `b`(`f3.b` v2 @kind this, `android.net.Uri` v3 @kind object, `java.io.InputStream` v4 @kind object) @signature `Lf3/b;.b:(Landroid/net/Uri;Ljava/io/InputStream;)Lf3/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3062fc.  v0:= 0I;
  #L3062fe.  v1:= v2.`f3.b.a` @type ^`org.xmlpull.v1.XmlPullParserFactory` @kind object;
  #L306302.  call temp:= `newPullParser`(v1) @signature `Lorg/xmlpull/v1/XmlPullParserFactory;.newPullParser:()Lorg/xmlpull/v1/XmlPullParser;` @kind virtual;
  #L306308.  v1:= temp @kind object;
  #L30630a.  call `setInput`(v1, v4, v0) @signature `Lorg/xmlpull/v1/XmlPullParser;.setInput:(Ljava/io/InputStream;Ljava/lang/String;)V` @kind interface;
  #L306310.  v4:= new `f3.b$e`;
  #L306314.  call temp:= `toString`(v3) @signature `Landroid/net/Uri;.toString:()Ljava/lang/String;` @kind virtual;
  #L30631a.  v3:= temp @kind object;
  #L30631c.  call `<init>`(v4, v0, v3) @signature `Lf3/b$e;.<init>:(Lf3/b$a;Ljava/lang/String;)V` @kind direct;
  #L306322.  call temp:= `f`(v4, v1) @signature `Lf3/b$a;.f:(Lorg/xmlpull/v1/XmlPullParser;)Ljava/lang/Object;` @kind virtual;
  #L306328.  v3:= temp @kind object;
  #L30632a.  v3:= (`f3.a`) v3 @kind object;
  #L30632e.  return v3 @kind object;
  #L306330.  v3:= Exception @type ^`org.xmlpull.v1.XmlPullParserException` @kind object;
  #L306332.  call temp:= `c`(v0, v3) @signature `Lv1/e2;.c:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L306338.  v3:= temp @kind object;
  #L30633a.  throw v3;
  catch `org.xmlpull.v1.XmlPullParserException` @[L3062fe..L30632e] goto L306330;
}
