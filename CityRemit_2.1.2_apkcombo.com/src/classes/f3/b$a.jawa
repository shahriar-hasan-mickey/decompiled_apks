record `f3.b$a` @kind class @AccessFlag ABSTRACT {
  `java.lang.String` `f3.b$a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `f3.b$a.b` @AccessFlag PRIVATE_FINAL;
  `f3.b$a` `f3.b$a.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `f3.b$a.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`f3.b$a` v0 @kind this, `f3.b$a` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lf3/b$a;.<init>:(Lf3/b$a;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3055a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3055aa.  v0.`f3.b$a.c` @type ^`f3.b$a` := v1 @kind object;
  #L3055ae.  v0.`f3.b$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L3055b2.  v0.`f3.b$a.b` @type ^`java.lang.String` := v3 @kind object;
  #L3055b6.  v1:= new `java.util.LinkedList`;
  #L3055ba.  call `<init>`(v1) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L3055c0.  v0.`f3.b$a.d` @type ^`java.util.List` := v1 @kind object;
  #L3055c4.  return @kind void;
}
procedure `f3.b$a` `e`(`f3.b$a` v1 @kind this, `f3.b$a` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lf3/b$a;.e:(Lf3/b$a;Ljava/lang/String;Ljava/lang/String;)Lf3/b$a;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L30528c.  v0:= "QualityLevel" @kind object;
  #L305290.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L305296.  v0:= temp;
  #L305298.  if v0 == 0 then goto L3052a8;
  #L30529c.  v3:= new `f3.b$d`;
  #L3052a0.  call `<init>`(v3, v2, v4) @signature `Lf3/b$d;.<init>:(Lf3/b$a;Ljava/lang/String;)V` @kind direct;
  #L3052a6.  return v3 @kind object;
  #L3052a8.  v0:= "Protection" @kind object;
  #L3052ac.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3052b2.  v0:= temp;
  #L3052b4.  if v0 == 0 then goto L3052c4;
  #L3052b8.  v3:= new `f3.b$c`;
  #L3052bc.  call `<init>`(v3, v2, v4) @signature `Lf3/b$c;.<init>:(Lf3/b$a;Ljava/lang/String;)V` @kind direct;
  #L3052c2.  return v3 @kind object;
  #L3052c4.  v0:= "StreamIndex" @kind object;
  #L3052c8.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3052ce.  v3:= temp;
  #L3052d0.  if v3 == 0 then goto L3052e0;
  #L3052d4.  v3:= new `f3.b$f`;
  #L3052d8.  call `<init>`(v3, v2, v4) @signature `Lf3/b$f;.<init>:(Lf3/b$a;Ljava/lang/String;)V` @kind direct;
  #L3052de.  return v3 @kind object;
  #L3052e0.  v2:= 0I;
  #L3052e2.  return v2 @kind object;
}
procedure `void` `a`(`f3.b$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lf3/b$a;.a:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L3055d8.  return @kind void;
}
procedure `java.lang.Object` `b`() @signature `Lf3/b$a;.b:()Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `c`(`f3.b$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lf3/b$a;.c:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30538c.  v0:= 0I;
  #L30538e.  v1:= v3.`f3.b$a.d` @type ^`java.util.List` @kind object;
  #L305392.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L305398.  v1:= temp;
  #L30539a.  if v0 >= v1 then goto L3053ce;
  #L30539e.  v1:= v3.`f3.b$a.d` @type ^`java.util.List` @kind object;
  #L3053a2.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3053a8.  v1:= temp @kind object;
  #L3053aa.  v1:= (`android.util.Pair`) v1 @kind object;
  #L3053ae.  v2:= v1.`android.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L3053b2.  v2:= (`java.lang.String`) v2 @kind object;
  #L3053b6.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3053bc.  v2:= temp;
  #L3053be.  if v2 == 0 then goto L3053c8;
  #L3053c2.  v4:= v1.`android.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L3053c6.  return v4 @kind object;
  #L3053c8.  v0:= v0 + 1;
  #L3053cc.  goto L30538e;
  #L3053ce.  v0:= v3.`f3.b$a.c` @type ^`f3.b$a` @kind object;
  #L3053d2.  if v0 != 0 then goto L3053da;
  #L3053d6.  v4:= 0I;
  #L3053d8.  goto L3053e2;
  #L3053da.  call temp:= `c`(v0, v4) @signature `Lf3/b$a;.c:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L3053e0.  v4:= temp @kind object;
  #L3053e2.  return v4 @kind object;
}
procedure `boolean` `d`(`f3.b$a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lf3/b$a;.d:(Ljava/lang/String;)Z` @AccessFlag PROTECTED {
    temp;

  #L30524c.  v1:= 0I;
  #L30524e.  return v1;
}
procedure `java.lang.Object` `f`(`f3.b$a` v5 @kind this, `org.xmlpull.v1.XmlPullParser` v6 @kind object) @signature `Lf3/b$a;.f:(Lorg/xmlpull/v1/XmlPullParser;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3053f4.  v0:= 0I;
  #L3053f6.  v1:= 0I;
  #L3053f8.  call temp:= `getEventType`(v6) @signature `Lorg/xmlpull/v1/XmlPullParser;.getEventType:()I` @kind interface;
  #L3053fe.  v2:= temp;
  #L305400.  v3:= 1I;
  #L305402.  if v2 == v3 then goto L3054ca;
  #L305406.  v4:= 2I;
  #L305408.  if v2 == v4 then goto L30545c;
  #L30540c.  v3:= 3I;
  #L30540e.  if v2 == v3 then goto L30542a;
  #L305412.  v3:= 4I;
  #L305414.  if v2 == v3 then goto L30541a;
  #L305418.  goto L3054c2;
  #L30541a.  if v0 == 0 then goto L3054c2;
  #L30541e.  if v1 != 0 then goto L3054c2;
  #L305422.  call `o`(v5, v6) @signature `Lf3/b$a;.o:(Lorg/xmlpull/v1/XmlPullParser;)V` @kind virtual;
  #L305428.  goto L3054c2;
  #L30542a.  if v0 == 0 then goto L3054c2;
  #L30542e.  if v1 <= 0 then goto L305438;
  #L305432.  v1:= v1 + -1;
  #L305436.  goto L3054c2;
  #L305438.  call temp:= `getName`(v6) @signature `Lorg/xmlpull/v1/XmlPullParser;.getName:()Ljava/lang/String;` @kind interface;
  #L30543e.  v2:= temp @kind object;
  #L305440.  call `h`(v5, v6) @signature `Lf3/b$a;.h:(Lorg/xmlpull/v1/XmlPullParser;)V` @kind virtual;
  #L305446.  call temp:= `d`(v5, v2) @signature `Lf3/b$a;.d:(Ljava/lang/String;)Z` @kind virtual;
  #L30544c.  v2:= temp;
  #L30544e.  if v2 != 0 then goto L3054c2;
  #L305452.  call temp:= `b`(v5) @signature `Lf3/b$a;.b:()Ljava/lang/Object;` @kind virtual;
  #L305458.  v6:= temp @kind object;
  #L30545a.  return v6 @kind object;
  #L30545c.  call temp:= `getName`(v6) @signature `Lorg/xmlpull/v1/XmlPullParser;.getName:()Ljava/lang/String;` @kind interface;
  #L305462.  v2:= temp @kind object;
  #L305464.  v4:= v5.`f3.b$a.b` @type ^`java.lang.String` @kind object;
  #L305468.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30546e.  v4:= temp;
  #L305470.  if v4 == 0 then goto L30547e;
  #L305474.  call `n`(v5, v6) @signature `Lf3/b$a;.n:(Lorg/xmlpull/v1/XmlPullParser;)V` @kind virtual;
  #L30547a.  v0:= 1I;
  #L30547c.  goto L3054c2;
  #L30547e.  if v0 == 0 then goto L3054c2;
  #L305482.  if v1 <= 0 then goto L30548c;
  #L305486.  v1:= v1 + 1;
  #L30548a.  goto L3054c2;
  #L30548c.  call temp:= `d`(v5, v2) @signature `Lf3/b$a;.d:(Ljava/lang/String;)Z` @kind virtual;
  #L305492.  v4:= temp;
  #L305494.  if v4 == 0 then goto L3054a0;
  #L305498.  call `n`(v5, v6) @signature `Lf3/b$a;.n:(Lorg/xmlpull/v1/XmlPullParser;)V` @kind virtual;
  #L30549e.  goto L3054c2;
  #L3054a0.  v4:= v5.`f3.b$a.a` @type ^`java.lang.String` @kind object;
  #L3054a4.  call temp:= `e`(v5, v5, v2, v4) @signature `Lf3/b$a;.e:(Lf3/b$a;Ljava/lang/String;Ljava/lang/String;)Lf3/b$a;` @kind direct;
  #L3054aa.  v2:= temp @kind object;
  #L3054ac.  if v2 != 0 then goto L3054b4;
  #L3054b0.  v1:= 1I;
  #L3054b2.  goto L3054c2;
  #L3054b4.  call temp:= `f`(v2, v6) @signature `Lf3/b$a;.f:(Lorg/xmlpull/v1/XmlPullParser;)Ljava/lang/Object;` @kind virtual;
  #L3054ba.  v2:= temp @kind object;
  #L3054bc.  call `a`(v5, v2) @signature `Lf3/b$a;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L3054c2.  call temp:= `next`(v6) @signature `Lorg/xmlpull/v1/XmlPullParser;.next:()I` @kind interface;
  #L3054c8.  goto L3053f8;
  #L3054ca.  v6:= 0I;
  #L3054cc.  return v6 @kind object;
}
procedure `boolean` `g`(`f3.b$a` v1 @kind this, `org.xmlpull.v1.XmlPullParser` v2 @kind object, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lf3/b$a;.g:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;Z)Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L305260.  v0:= 0I;
  #L305262.  call temp:= `getAttributeValue`(v2, v0, v3) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L305268.  v2:= temp @kind object;
  #L30526a.  if v2 == 0 then goto L305278;
  #L30526e.  call temp:= `parseBoolean`(v2) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L305274.  v2:= temp;
  #L305276.  return v2;
  #L305278.  return v4;
}
procedure `void` `h`(`f3.b$a` v0 @kind this, `org.xmlpull.v1.XmlPullParser` v1 @kind object) @signature `Lf3/b$a;.h:(Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PROTECTED {
    temp;

  #L3055ec.  return @kind void;
}
procedure `int` `i`(`f3.b$a` v1 @kind this, `org.xmlpull.v1.XmlPullParser` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 ) @signature `Lf3/b$a;.i:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L3052f4.  v0:= 0I;
  #L3052f6.  call temp:= `getAttributeValue`(v2, v0, v3) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3052fc.  v2:= temp @kind object;
  #L3052fe.  if v2 == 0 then goto L305318;
  #L305302.  call temp:= `parseInt`(v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L305308.  v2:= temp;
  #L30530a.  return v2;
  #L30530c.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L30530e.  call temp:= `c`(v0, v2) @signature `Lv1/e2;.c:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L305314.  v2:= temp @kind object;
  #L305316.  throw v2;
  #L305318.  return v4;
  catch `java.lang.NumberFormatException` @[L305302..L30530a] goto L30530c;
}
procedure `long` `j`(`f3.b$a` v1 @kind this, `org.xmlpull.v1.XmlPullParser` v2 @kind object, `java.lang.String` v3 @kind object, `long` v4 ) @signature `Lf3/b$a;.j:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;J)J` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L30550c.  v0:= 0I;
  #L30550e.  call temp:= `getAttributeValue`(v2, v0, v3) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L305514.  v2:= temp @kind object;
  #L305516.  if v2 == 0 then goto L305530;
  #L30551a.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L305520.  v2:= temp @kind wide;
  #L305522.  return v2 @kind wide;
  #L305524.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L305526.  call temp:= `c`(v0, v2) @signature `Lv1/e2;.c:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L30552c.  v2:= temp @kind object;
  #L30552e.  throw v2;
  #L305530.  return v4 @kind wide;
  catch `java.lang.NumberFormatException` @[L30551a..L305522] goto L305524;
}
procedure `int` `k`(`f3.b$a` v1 @kind this, `org.xmlpull.v1.XmlPullParser` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lf3/b$a;.k:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)I` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L30533c.  v0:= 0I;
  #L30533e.  call temp:= `getAttributeValue`(v2, v0, v3) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L305344.  v2:= temp @kind object;
  #L305346.  if v2 == 0 then goto L305360;
  #L30534a.  call temp:= `parseInt`(v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L305350.  v2:= temp;
  #L305352.  return v2;
  #L305354.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L305356.  call temp:= `c`(v0, v2) @signature `Lv1/e2;.c:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L30535c.  v2:= temp @kind object;
  #L30535e.  throw v2;
  #L305360.  v2:= new `f3.b$b`;
  #L305364.  call `<init>`(v2, v3) @signature `Lf3/b$b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30536a.  throw v2;
  catch `java.lang.NumberFormatException` @[L30534a..L305352] goto L305354;
}
procedure `long` `l`(`f3.b$a` v1 @kind this, `org.xmlpull.v1.XmlPullParser` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lf3/b$a;.l:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)J` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L305554.  v0:= 0I;
  #L305556.  call temp:= `getAttributeValue`(v2, v0, v3) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L30555c.  v2:= temp @kind object;
  #L30555e.  if v2 == 0 then goto L305578;
  #L305562.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L305568.  v2:= temp @kind wide;
  #L30556a.  return v2 @kind wide;
  #L30556c.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L30556e.  call temp:= `c`(v0, v2) @signature `Lv1/e2;.c:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L305574.  v2:= temp @kind object;
  #L305576.  throw v2;
  #L305578.  v2:= new `f3.b$b`;
  #L30557c.  call `<init>`(v2, v3) @signature `Lf3/b$b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L305582.  throw v2;
  catch `java.lang.NumberFormatException` @[L305562..L30556a] goto L30556c;
}
procedure `java.lang.String` `m`(`f3.b$a` v1 @kind this, `org.xmlpull.v1.XmlPullParser` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lf3/b$a;.m:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L3054e0.  v0:= 0I;
  #L3054e2.  call temp:= `getAttributeValue`(v2, v0, v3) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L3054e8.  v2:= temp @kind object;
  #L3054ea.  if v2 == 0 then goto L3054f0;
  #L3054ee.  return v2 @kind object;
  #L3054f0.  v2:= new `f3.b$b`;
  #L3054f4.  call `<init>`(v2, v3) @signature `Lf3/b$b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3054fa.  throw v2;
}
procedure `void` `n`(`org.xmlpull.v1.XmlPullParser` v0 @kind object) @signature `Lf3/b$a;.n:(Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `o`(`f3.b$a` v0 @kind this, `org.xmlpull.v1.XmlPullParser` v1 @kind object) @signature `Lf3/b$a;.o:(Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PROTECTED {
    temp;

  #L305600.  return @kind void;
}
procedure `void` `p`(`f3.b$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lf3/b$a;.p:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L305614.  v0:= v1.`f3.b$a.d` @type ^`java.util.List` @kind object;
  #L305618.  call temp:= `create`(v2, v3) @signature `Landroid/util/Pair;.create:(Ljava/lang/Object;Ljava/lang/Object;)Landroid/util/Pair;` @kind static;
  #L30561e.  v2:= temp @kind object;
  #L305620.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L305626.  return @kind void;
}
