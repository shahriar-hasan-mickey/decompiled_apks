record `f3.a` @kind class @AccessFlag PUBLIC extends `w2.a` @kind interface {
  `int` `f3.a.a` @AccessFlag PUBLIC_FINAL;
  `int` `f3.a.b` @AccessFlag PUBLIC_FINAL;
  `int` `f3.a.c` @AccessFlag PUBLIC_FINAL;
  `boolean` `f3.a.d` @AccessFlag PUBLIC_FINAL;
  `f3.a$a` `f3.a.e` @AccessFlag PUBLIC_FINAL;
  `f3.a$b`[] `f3.a.f` @AccessFlag PUBLIC_FINAL;
  `long` `f3.a.g` @AccessFlag PUBLIC_FINAL;
  `long` `f3.a.h` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`f3.a` v0 @kind this, `int` v1 , `int` v2 , `long` v3 , `long` v5 , `int` v7 , `boolean` v8 , `f3.a$a` v9 @kind object, `f3.a$b`[] v10 @kind object) @signature `Lf3/a;.<init>:(IIJJIZLf3/a$a;[Lf3/a$b;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3064e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3064e6.  v0.`f3.a.a` @type ^`int` := v1;
  #L3064ea.  v0.`f3.a.b` @type ^`int` := v2;
  #L3064ee.  v0.`f3.a.g` @type ^`long` := v3 @kind wide;
  #L3064f2.  v0.`f3.a.h` @type ^`long` := v5 @kind wide;
  #L3064f6.  v0.`f3.a.c` @type ^`int` := v7;
  #L3064fa.  v0.`f3.a.d` @type ^`boolean` := v8 @kind boolean;
  #L3064fe.  v0.`f3.a.e` @type ^`f3.a$a` := v9 @kind object;
  #L306502.  v0.`f3.a.f` @type ^`f3.a$b`[] := v10 @kind object;
  #L306506.  return @kind void;
}
procedure `void` `<init>`(`f3.a` v17 @kind this, `int` v18 , `int` v19 , `long` v20 , `long` v22 , `long` v24 , `int` v26 , `boolean` v27 , `f3.a$a` v28 @kind object, `f3.a$b`[] v29 @kind object) @signature `Lf3/a;.<init>:(IIJJJIZLf3/a$a;[Lf3/a$b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L306518.  v0:= -4.9E-324D;
  #L306522.  v2:= 0L;
  #L306526.  v4:= lcmp(v22, v2);
  #L30652a.  if v4 != 0 then goto L306532;
  #L30652e.  v9:= v0 @kind wide;
  #L306530.  goto L30654a;
  #L306532.  v6:= 1000000L;
  #L306538.  v4:= v22 @kind wide;
  #L30653c.  v8:= v20 @kind wide;
  #L306540.  call temp:= `M0`(v4, v6, v8) @signature `Ls3/l0;.M0:(JJJ)J` @kind static;
  #L306546.  v4:= temp @kind wide;
  #L306548.  v9:= v4 @kind wide;
  #L30654a.  v4:= lcmp(v24, v2);
  #L30654e.  if v4 != 0 then goto L306554;
  #L306552.  goto L30656a;
  #L306554.  v13:= 1000000L;
  #L30655a.  v11:= v24 @kind wide;
  #L30655e.  v15:= v20 @kind wide;
  #L306562.  call temp:= `M0`(v11, v13, v15) @signature `Ls3/l0;.M0:(JJJ)J` @kind static;
  #L306568.  v0:= temp @kind wide;
  #L30656a.  v11:= v0 @kind wide;
  #L30656c.  v6:= v17 @kind object;
  #L306570.  v7:= v18;
  #L306574.  v8:= v19;
  #L306578.  v13:= v26;
  #L30657c.  v14:= v27;
  #L306580.  v15:= v28 @kind object;
  #L306584.  v16:= v29 @kind object;
  #L306588.  call `<init>`(v6, v7, v8, v9, v11, v13, v14, v15, v16) @signature `Lf3/a;.<init>:(IIJJIZLf3/a$a;[Lf3/a$b;)V` @kind direct;
  #L30658e.  return @kind void;
}
procedure `java.lang.Object` `a`(`f3.a` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lf3/a;.a:(Ljava/util/List;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3064c4.  call temp:= `b`(v0, v1) @signature `Lf3/a;.b:(Ljava/util/List;)Lf3/a;` @kind virtual;
  #L3064ca.  v1:= temp @kind object;
  #L3064cc.  return v1 @kind object;
}
procedure `f3.a` `b`(`f3.a` v11 @kind this, `java.util.List` v12 @kind object) @signature `Lf3/a;.b:(Ljava/util/List;)Lf3/a;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3063c0.  v0:= new `java.util.ArrayList`;
  #L3063c4.  call `<init>`(v0, v12) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3063ca.  call `sort`(v0) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;)V` @kind static;
  #L3063d0.  v12:= new `java.util.ArrayList`;
  #L3063d4.  call `<init>`(v12) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3063da.  v1:= new `java.util.ArrayList`;
  #L3063de.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3063e4.  v2:= 0I;
  #L3063e6.  v3:= 0I;
  #L3063e8.  v4:= 0I;
  #L3063ea.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L3063f0.  v5:= temp;
  #L3063f2.  if v4 >= v5 then goto L306454;
  #L3063f6.  call temp:= `get`(v0, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3063fc.  v5:= temp @kind object;
  #L3063fe.  v5:= (`w2.c`) v5 @kind object;
  #L306402.  v6:= v11.`f3.a.f` @type ^`f3.a$b`[] @kind object;
  #L306406.  v7:= v5.`w2.c.p` @type ^`int`;
  #L30640a.  v6:= v6[v7] @kind object;
  #L30640e.  if v6 == v3 then goto L30643a;
  #L306412.  if v3 == 0 then goto L30643a;
  #L306416.  v7:= new `v1.j1`[v2];
  #L30641a.  call temp:= `toArray`(v1, v7) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L306420.  v7:= temp @kind object;
  #L306422.  v7:= (`v1.j1`[]) v7 @kind object;
  #L306426.  call temp:= `b`(v3, v7) @signature `Lf3/a$b;.b:([Lv1/j1;)Lf3/a$b;` @kind virtual;
  #L30642c.  v3:= temp @kind object;
  #L30642e.  call temp:= `add`(v12, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L306434.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L30643a.  v3:= v6.`f3.a$b.j` @type ^`v1.j1`[] @kind object;
  #L30643e.  v5:= v5.`w2.c.q` @type ^`int`;
  #L306442.  v3:= v3[v5] @kind object;
  #L306446.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30644c.  v4:= v4 + 1;
  #L306450.  v3:= v6 @kind object;
  #L306452.  goto L3063ea;
  #L306454.  if v3 == 0 then goto L306476;
  #L306458.  v0:= new `v1.j1`[v2];
  #L30645c.  call temp:= `toArray`(v1, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L306462.  v0:= temp @kind object;
  #L306464.  v0:= (`v1.j1`[]) v0 @kind object;
  #L306468.  call temp:= `b`(v3, v0) @signature `Lf3/a$b;.b:([Lv1/j1;)Lf3/a$b;` @kind virtual;
  #L30646e.  v0:= temp @kind object;
  #L306470.  call temp:= `add`(v12, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L306476.  v0:= new `f3.a$b`[v2];
  #L30647a.  call temp:= `toArray`(v12, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L306480.  v12:= temp @kind object;
  #L306482.  v10:= v12 @kind object;
  #L306484.  v10:= (`f3.a$b`[]) v10 @kind object;
  #L306488.  v12:= new `f3.a`;
  #L30648c.  v1:= v11.`f3.a.a` @type ^`int`;
  #L306490.  v2:= v11.`f3.a.b` @type ^`int`;
  #L306494.  v3:= v11.`f3.a.g` @type ^`long` @kind wide;
  #L306498.  v5:= v11.`f3.a.h` @type ^`long` @kind wide;
  #L30649c.  v7:= v11.`f3.a.c` @type ^`int`;
  #L3064a0.  v8:= v11.`f3.a.d` @type ^`boolean` @kind boolean;
  #L3064a4.  v9:= v11.`f3.a.e` @type ^`f3.a$a` @kind object;
  #L3064a8.  v0:= v12 @kind object;
  #L3064aa.  call `<init>`(v0, v1, v2, v3, v5, v7, v8, v9, v10) @signature `Lf3/a;.<init>:(IIJJIZLf3/a$a;[Lf3/a$b;)V` @kind direct;
  #L3064b0.  return v12 @kind object;
}
