record `hc.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Runnable` @kind interface {
  `java.lang.String` `hc.b.o` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`hc.b` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lhc/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L345ed0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L345ed6.  call temp:= `p`(v1, v2) @signature `Lhc/c;.p:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L345edc.  v1:= temp @kind object;
  #L345ede.  v0.`hc.b.o` @type ^`java.lang.String` := v1 @kind object;
  #L345ee2.  return @kind void;
}
procedure `void` `k`() @signature `Lhc/b;.k:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `run`(`hc.b` v3 @kind this) @signature `Lhc/b;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L345ef4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L345efa.  v0:= temp @kind object;
  #L345efc.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L345f02.  v0:= temp @kind object;
  #L345f04.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L345f0a.  v1:= temp @kind object;
  #L345f0c.  v2:= v3.`hc.b.o` @type ^`java.lang.String` @kind object;
  #L345f10.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L345f16.  call `k`(v3) @signature `Lhc/b;.k:()V` @kind virtual;
  #L345f1c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L345f22.  v1:= temp @kind object;
  #L345f24.  call `setName`(v1, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L345f2a.  return @kind void;
  #L345f2c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L345f2e.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L345f34.  v2:= temp @kind object;
  #L345f36.  call `setName`(v2, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L345f3c.  throw v1;
  catch `java.lang.Throwable` @[L345f16..L345f1c] goto L345f2c;
}
