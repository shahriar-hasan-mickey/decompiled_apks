record `hc.a` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `hc.a` `@@hc.a.a` @AccessFlag PUBLIC_STATIC;
procedure `void` `<init>`(`hc.a` v0 @kind this) @signature `Lhc/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L345eb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L345ebe.  return @kind void;
}
procedure `void` `a`(`gc.q$a` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lhc/a;.a:(Lgc/q$a;Ljava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `b`(`gc.q$a` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lhc/a;.b:(Lgc/q$a;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `c`(`gc.j` v0 @kind object, `javax.net.ssl.SSLSocket` v1 @kind object, `boolean` v2 ) @signature `Lhc/a;.c:(Lgc/j;Ljavax/net/ssl/SSLSocket;Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `d`(`gc.z$a` v0 @kind object) @signature `Lhc/a;.d:(Lgc/z$a;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `e`(`gc.i` v0 @kind object, `jc.c` v1 @kind object) @signature `Lhc/a;.e:(Lgc/i;Ljc/c;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.net.Socket` `f`(`gc.i` v0 @kind object, `gc.a` v1 @kind object, `jc.g` v2 @kind object) @signature `Lhc/a;.f:(Lgc/i;Lgc/a;Ljc/g;)Ljava/net/Socket;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `g`(`gc.a` v0 @kind object, `gc.a` v1 @kind object) @signature `Lhc/a;.g:(Lgc/a;Lgc/a;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `jc.c` `h`(`gc.i` v0 @kind object, `gc.a` v1 @kind object, `jc.g` v2 @kind object, `gc.b0` v3 @kind object) @signature `Lhc/a;.h:(Lgc/i;Lgc/a;Ljc/g;Lgc/b0;)Ljc/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `i`(`gc.i` v0 @kind object, `jc.c` v1 @kind object) @signature `Lhc/a;.i:(Lgc/i;Ljc/c;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `jc.d` `j`(`gc.i` v0 @kind object) @signature `Lhc/a;.j:(Lgc/i;)Ljc/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.io.IOException` `k`(`gc.d` v0 @kind object, `java.io.IOException` v1 @kind object) @signature `Lhc/a;.k:(Lgc/d;Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
