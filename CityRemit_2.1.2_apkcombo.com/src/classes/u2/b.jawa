record `u2.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `n2.a$b` @kind interface {
}
procedure `void` `<init>`(`u2.b` v0 @kind this) @signature `Lu2/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L475660.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L475666.  return @kind void;
}
procedure `byte`[] `S`(`u2.b` v1 @kind this) @signature `Lu2/b;.S:()[B` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4755d0.  call temp:= `a`(v1) @signature `Ln2/b;.a:(Ln2/a$b;)[B` @kind static;
  #L4755d6.  v0:= temp @kind object;
  #L4755d8.  return v0 @kind object;
}
procedure `void` `T`(`u2.b` v0 @kind this, `v1.w1$b` v1 @kind object) @signature `Lu2/b;.T:(Lv1/w1$b;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L475678.  call `c`(v0, v1) @signature `Ln2/b;.c:(Ln2/a$b;Lv1/w1$b;)V` @kind static;
  #L47567e.  return @kind void;
}
procedure `int` `describeContents`(`u2.b` v1 @kind this) @signature `Lu2/b;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4755ec.  v0:= 0I;
  #L4755ee.  return v0;
}
procedure `v1.j1` `h`(`u2.b` v1 @kind this) @signature `Lu2/b;.h:()Lv1/j1;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L475644.  call temp:= `b`(v1) @signature `Ln2/b;.b:(Ln2/a$b;)Lv1/j1;` @kind static;
  #L47564a.  v0:= temp @kind object;
  #L47564c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`u2.b` v2 @kind this) @signature `Lu2/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L475600.  v0:= new `java.lang.StringBuilder`;
  #L475604.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L47560a.  v1:= "SCTE-35 splice command: type=" @kind object;
  #L47560e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L475614.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L47561a.  v1:= temp @kind object;
  #L47561c.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L475622.  v1:= temp @kind object;
  #L475624.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L47562a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L475630.  v0:= temp @kind object;
  #L475632.  return v0 @kind object;
}
