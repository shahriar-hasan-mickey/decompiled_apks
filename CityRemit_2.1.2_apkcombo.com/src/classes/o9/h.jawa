record `o9.h` @kind class @AccessFlag PUBLIC {
  `float` `o9.h.a` @AccessFlag PRIVATE;
  `float` `o9.h.b` @AccessFlag PRIVATE;
  `float` `o9.h.c` @AccessFlag PRIVATE;
  `float` `o9.h.d` @AccessFlag PRIVATE;
  `int` `o9.h.e` @AccessFlag PRIVATE;
  `int` `o9.h.f` @AccessFlag PRIVATE;
  `float` `o9.h.g` @AccessFlag PRIVATE;
  `boolean` `o9.h.h` @AccessFlag PRIVATE;
  `o9.h$a` `o9.h.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`o9.h` v0 @kind this, `o9.h$a` v1 @kind object) @signature `Lo9/h;.<init>:(Lo9/h$a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L400fe8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L400fee.  v0.`o9.h.i` @type ^`o9.h$a` := v1 @kind object;
  #L400ff2.  v1:= -1I;
  #L400ff4.  v0.`o9.h.e` @type ^`int` := v1;
  #L400ff8.  v0.`o9.h.f` @type ^`int` := v1;
  #L400ffc.  return @kind void;
}
procedure `float` `a`(`o9.h` v2 @kind this, `float` v3 , `float` v4 , `float` v5 , `float` v6 , `float` v7 , `float` v8 , `float` v9 , `float` v10 ) @signature `Lo9/h;.a:(FFFFFFFF)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L400f30.  v4:= v4 - v6 @kind float;
  #L400f32.  v0:= (`double`) v4 @kind f2d;
  #L400f34.  v3:= v3 - v5 @kind float;
  #L400f36.  v3:= (`double`) v3 @kind f2d;
  #L400f38.  call temp:= `atan2`(v0, v3) @signature `Ljava/lang/Math;.atan2:(DD)D` @kind static;
  #L400f3e.  v3:= temp @kind wide;
  #L400f40.  v3:= (`float`) v3 @kind d2f;
  #L400f42.  v3:= (`double`) v3 @kind f2d;
  #L400f44.  call temp:= `toDegrees`(v3) @signature `Ljava/lang/Math;.toDegrees:(D)D` @kind static;
  #L400f4a.  v3:= temp @kind wide;
  #L400f4c.  v3:= (`float`) v3 @kind d2f;
  #L400f4e.  v8:= v8 - v10 @kind float;
  #L400f50.  v4:= (`double`) v8 @kind f2d;
  #L400f52.  v7:= v7 - v9 @kind float;
  #L400f54.  v6:= (`double`) v7 @kind f2d;
  #L400f56.  call temp:= `atan2`(v4, v6) @signature `Ljava/lang/Math;.atan2:(DD)D` @kind static;
  #L400f5c.  v4:= temp @kind wide;
  #L400f5e.  v4:= (`float`) v4 @kind d2f;
  #L400f60.  v4:= (`double`) v4 @kind f2d;
  #L400f62.  call temp:= `toDegrees`(v4) @signature `Ljava/lang/Math;.toDegrees:(D)D` @kind static;
  #L400f68.  v4:= temp @kind wide;
  #L400f6a.  v4:= (`float`) v4 @kind d2f;
  #L400f6c.  call temp:= `b`(v2, v3, v4) @signature `Lo9/h;.b:(FF)F` @kind direct;
  #L400f72.  v3:= temp;
  #L400f74.  return v3;
}
procedure `float` `b`(`o9.h` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lo9/h;.b:(FF)F` @AccessFlag PRIVATE {
    temp;
    v0;

  #L400f88.  v0:= 360.0F;
  #L400f8c.  v3:= v3 %% v0 @kind float;
  #L400f8e.  v2:= v2 %% v0 @kind float;
  #L400f90.  v3:= v3 - v2 @kind float;
  #L400f92.  v1.`o9.h.g` @type ^`float` := v3;
  #L400f96.  v2:= -180.0F;
  #L400f9a.  v2:= fcmpg(v3, v2);
  #L400f9e.  if v2 >= 0 then goto L400faa;
  #L400fa2.  v3:= v3 + v0 @kind float;
  #L400fa4.  v1.`o9.h.g` @type ^`float` := v3;
  #L400fa8.  goto L400fba;
  #L400faa.  v2:= 180.0F;
  #L400fae.  v2:= fcmpl(v3, v2);
  #L400fb2.  if v2 <= 0 then goto L400fba;
  #L400fb6.  v3:= v3 - v0 @kind float;
  #L400fb8.  goto L400fa4;
  #L400fba.  v2:= v1.`o9.h.g` @type ^`float`;
  #L400fbe.  return v2;
}
procedure `float` `c`(`o9.h` v1 @kind this) @signature `Lo9/h;.c:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400fd0.  v0:= v1.`o9.h.g` @type ^`float`;
  #L400fd4.  return v0;
}
procedure `boolean` `d`(`o9.h` v15 @kind this, `android.view.MotionEvent` v16 @kind object) @signature `Lo9/h;.d:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L400dcc.  v9:= v15 @kind object;
  #L400dce.  v0:= v16 @kind object;
  #L400dd2.  call temp:= `getActionMasked`(v16) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L400dd8.  v1:= temp;
  #L400dda.  v2:= 0I;
  #L400ddc.  v3:= 0I;
  #L400dde.  v10:= 1I;
  #L400de0.  if v1 == 0 then goto L400ee8;
  #L400de4.  v4:= -1I;
  #L400de6.  if v1 == v10 then goto L400ee2;
  #L400dea.  v5:= 2I;
  #L400dec.  if v1 == v5 then goto L400e40;
  #L400df0.  v2:= 5I;
  #L400df2.  if v1 == v2 then goto L400e08;
  #L400df6.  v0:= 6I;
  #L400df8.  if v1 == v0 then goto L400e00;
  #L400dfc.  goto L400f1c;
  #L400e00.  v9.`o9.h.f` @type ^`int` := v4;
  #L400e04.  goto L400f1c;
  #L400e08.  call temp:= `getX`(v16) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L400e0e.  v1:= temp;
  #L400e10.  v9.`o9.h.a` @type ^`float` := v1;
  #L400e14.  call temp:= `getY`(v16) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L400e1a.  v1:= temp;
  #L400e1c.  v9.`o9.h.b` @type ^`float` := v1;
  #L400e20.  call temp:= `getActionIndex`(v16) @signature `Landroid/view/MotionEvent;.getActionIndex:()I` @kind virtual;
  #L400e26.  v1:= temp;
  #L400e28.  call temp:= `getPointerId`(v0, v1) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L400e2e.  v1:= temp;
  #L400e30.  call temp:= `findPointerIndex`(v0, v1) @signature `Landroid/view/MotionEvent;.findPointerIndex:(I)I` @kind virtual;
  #L400e36.  v0:= temp;
  #L400e38.  v9.`o9.h.f` @type ^`int` := v0;
  #L400e3c.  goto L400f14;
  #L400e40.  v1:= v9.`o9.h.e` @type ^`int`;
  #L400e44.  if v1 == v4 then goto L400f1c;
  #L400e48.  v1:= v9.`o9.h.f` @type ^`int`;
  #L400e4c.  if v1 == v4 then goto L400f1c;
  #L400e50.  call temp:= `getPointerCount`(v16) @signature `Landroid/view/MotionEvent;.getPointerCount:()I` @kind virtual;
  #L400e56.  v1:= temp;
  #L400e58.  v4:= v9.`o9.h.f` @type ^`int`;
  #L400e5c.  if v1 <= v4 then goto L400f1c;
  #L400e60.  v1:= v9.`o9.h.e` @type ^`int`;
  #L400e64.  call temp:= `getX`(v0, v1) @signature `Landroid/view/MotionEvent;.getX:(I)F` @kind virtual;
  #L400e6a.  v11:= temp;
  #L400e6c.  v1:= v9.`o9.h.e` @type ^`int`;
  #L400e70.  call temp:= `getY`(v0, v1) @signature `Landroid/view/MotionEvent;.getY:(I)F` @kind virtual;
  #L400e76.  v12:= temp;
  #L400e78.  v1:= v9.`o9.h.f` @type ^`int`;
  #L400e7c.  call temp:= `getX`(v0, v1) @signature `Landroid/view/MotionEvent;.getX:(I)F` @kind virtual;
  #L400e82.  v13:= temp;
  #L400e84.  v1:= v9.`o9.h.f` @type ^`int`;
  #L400e88.  call temp:= `getY`(v0, v1) @signature `Landroid/view/MotionEvent;.getY:(I)F` @kind virtual;
  #L400e8e.  v14:= temp;
  #L400e90.  v0:= v9.`o9.h.h` @type ^`boolean` @kind boolean;
  #L400e94.  if v0 == 0 then goto L400ea2;
  #L400e98.  v9.`o9.h.g` @type ^`float` := v3;
  #L400e9c.  v9.`o9.h.h` @type ^`boolean` := v2 @kind boolean;
  #L400ea0.  goto L400ec2;
  #L400ea2.  v1:= v9.`o9.h.a` @type ^`float`;
  #L400ea6.  v2:= v9.`o9.h.b` @type ^`float`;
  #L400eaa.  v3:= v9.`o9.h.c` @type ^`float`;
  #L400eae.  v4:= v9.`o9.h.d` @type ^`float`;
  #L400eb2.  v0:= v15 @kind object;
  #L400eb4.  v5:= v13;
  #L400eb6.  v6:= v14;
  #L400eb8.  v7:= v11;
  #L400eba.  v8:= v12;
  #L400ebc.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lo9/h;.a:(FFFFFFFF)F` @kind direct;
  #L400ec2.  v0:= v9.`o9.h.i` @type ^`o9.h$a` @kind object;
  #L400ec6.  if v0 == 0 then goto L400ed0;
  #L400eca.  call temp:= `a`(v0, v15) @signature `Lo9/h$a;.a:(Lo9/h;)Z` @kind interface;
  #L400ed0.  v9.`o9.h.a` @type ^`float` := v13;
  #L400ed4.  v9.`o9.h.b` @type ^`float` := v14;
  #L400ed8.  v9.`o9.h.c` @type ^`float` := v11;
  #L400edc.  v9.`o9.h.d` @type ^`float` := v12;
  #L400ee0.  goto L400f1c;
  #L400ee2.  v9.`o9.h.e` @type ^`int` := v4;
  #L400ee6.  goto L400f1c;
  #L400ee8.  call temp:= `getX`(v16) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L400eee.  v1:= temp;
  #L400ef0.  v9.`o9.h.c` @type ^`float` := v1;
  #L400ef4.  call temp:= `getY`(v16) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L400efa.  v1:= temp;
  #L400efc.  v9.`o9.h.d` @type ^`float` := v1;
  #L400f00.  call temp:= `getPointerId`(v0, v2) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L400f06.  v1:= temp;
  #L400f08.  call temp:= `findPointerIndex`(v0, v1) @signature `Landroid/view/MotionEvent;.findPointerIndex:(I)I` @kind virtual;
  #L400f0e.  v0:= temp;
  #L400f10.  v9.`o9.h.e` @type ^`int` := v0;
  #L400f14.  v9.`o9.h.g` @type ^`float` := v3;
  #L400f18.  v9.`o9.h.h` @type ^`boolean` := v10 @kind boolean;
  #L400f1c.  return v10;
}
