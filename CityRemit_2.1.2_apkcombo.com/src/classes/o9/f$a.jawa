record `o9.f$a` @kind class @AccessFlag  {
  `java.nio.ByteBuffer` `o9.f$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`o9.f$a` v1 @kind this, `byte`[] v2 @kind object, `int` v3 ) @signature `Lo9/f$a;.<init>:([BI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3fffe0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fffe6.  call temp:= `wrap`(v2) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L3fffec.  v2:= temp @kind object;
  #L3fffee.  v0:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L3ffff2.  call temp:= `order`(v2, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3ffff8.  v2:= temp @kind object;
  #L3ffffa.  call temp:= `limit`(v2, v3) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L400000.  v2:= temp @kind object;
  #L400002.  v2:= (`java.nio.ByteBuffer`) v2 @kind object;
  #L400006.  v1.`o9.f$a.a` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L40000a.  return @kind void;
}
procedure `short` `a`(`o9.f$a` v1 @kind this, `int` v2 ) @signature `Lo9/f$a;.a:(I)S` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fffc0.  v0:= v1.`o9.f$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3fffc4.  call temp:= `getShort`(v0, v2) @signature `Ljava/nio/ByteBuffer;.getShort:(I)S` @kind virtual;
  #L3fffca.  v2:= temp;
  #L3fffcc.  return v2;
}
procedure `int` `b`(`o9.f$a` v1 @kind this, `int` v2 ) @signature `Lo9/f$a;.b:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fff80.  v0:= v1.`o9.f$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3fff84.  call temp:= `getInt`(v0, v2) @signature `Ljava/nio/ByteBuffer;.getInt:(I)I` @kind virtual;
  #L3fff8a.  v2:= temp;
  #L3fff8c.  return v2;
}
procedure `int` `c`(`o9.f$a` v1 @kind this) @signature `Lo9/f$a;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fffa0.  v0:= v1.`o9.f$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3fffa4.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L3fffaa.  v0:= temp;
  #L3fffac.  return v0;
}
procedure `void` `d`(`o9.f$a` v1 @kind this, `java.nio.ByteOrder` v2 @kind object) @signature `Lo9/f$a;.d:(Ljava/nio/ByteOrder;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40001c.  v0:= v1.`o9.f$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L400020.  call temp:= `order`(v0, v2) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L400026.  return @kind void;
}
