record `o9.d` @kind class @AccessFlag PUBLIC extends `android.graphics.drawable.Drawable` @kind class {
  `android.graphics.Paint` `o9.d.a` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Bitmap` `o9.d.b` @AccessFlag PRIVATE;
  `int` `o9.d.c` @AccessFlag PRIVATE;
  `int` `o9.d.d` @AccessFlag PRIVATE;
  `int` `o9.d.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`o9.d` v2 @kind this, `android.graphics.Bitmap` v3 @kind object) @signature `Lo9/d;.<init>:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3ffd84.  call `<init>`(v2) @signature `Landroid/graphics/drawable/Drawable;.<init>:()V` @kind direct;
  #L3ffd8a.  v0:= new `android.graphics.Paint`;
  #L3ffd8e.  v1:= 2I;
  #L3ffd90.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L3ffd96.  v2.`o9.d.a` @type ^`android.graphics.Paint` := v0 @kind object;
  #L3ffd9a.  v0:= 255I;
  #L3ffd9e.  v2.`o9.d.c` @type ^`int` := v0;
  #L3ffda2.  call `b`(v2, v3) @signature `Lo9/d;.b:(Landroid/graphics/Bitmap;)V` @kind virtual;
  #L3ffda8.  return @kind void;
}
procedure `android.graphics.Bitmap` `a`(`o9.d` v1 @kind this) @signature `Lo9/d;.a:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ffce0.  v0:= v1.`o9.d.b` @type ^`android.graphics.Bitmap` @kind object;
  #L3ffce4.  return v0 @kind object;
}
procedure `void` `b`(`o9.d` v0 @kind this, `android.graphics.Bitmap` v1 @kind object) @signature `Lo9/d;.b:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;

  #L3ffe1c.  v0.`o9.d.b` @type ^`android.graphics.Bitmap` := v1 @kind object;
  #L3ffe20.  if v1 == 0 then goto L3ffe42;
  #L3ffe24.  call temp:= `getWidth`(v1) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3ffe2a.  v1:= temp;
  #L3ffe2c.  v0.`o9.d.d` @type ^`int` := v1;
  #L3ffe30.  v1:= v0.`o9.d.b` @type ^`android.graphics.Bitmap` @kind object;
  #L3ffe34.  call temp:= `getHeight`(v1) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3ffe3a.  v1:= temp;
  #L3ffe3c.  v0.`o9.d.e` @type ^`int` := v1;
  #L3ffe40.  goto L3ffe4c;
  #L3ffe42.  v1:= 0I;
  #L3ffe44.  v0.`o9.d.e` @type ^`int` := v1;
  #L3ffe48.  v0.`o9.d.d` @type ^`int` := v1;
  #L3ffe4c.  return @kind void;
}
procedure `void` `draw`(`o9.d` v4 @kind this, `android.graphics.Canvas` v5 @kind object) @signature `Lo9/d;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ffdbc.  v0:= v4.`o9.d.b` @type ^`android.graphics.Bitmap` @kind object;
  #L3ffdc0.  if v0 == 0 then goto L3ffde8;
  #L3ffdc4.  call temp:= `isRecycled`(v0) @signature `Landroid/graphics/Bitmap;.isRecycled:()Z` @kind virtual;
  #L3ffdca.  v0:= temp;
  #L3ffdcc.  if v0 != 0 then goto L3ffde8;
  #L3ffdd0.  v0:= v4.`o9.d.b` @type ^`android.graphics.Bitmap` @kind object;
  #L3ffdd4.  v1:= 0I;
  #L3ffdd6.  call temp:= `getBounds`(v4) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L3ffddc.  v2:= temp @kind object;
  #L3ffdde.  v3:= v4.`o9.d.a` @type ^`android.graphics.Paint` @kind object;
  #L3ffde2.  call `drawBitmap`(v5, v0, v1, v2, v3) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Paint;)V` @kind virtual;
  #L3ffde8.  return @kind void;
}
procedure `int` `getAlpha`(`o9.d` v1 @kind this) @signature `Lo9/d;.getAlpha:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ffcf8.  v0:= v1.`o9.d.c` @type ^`int`;
  #L3ffcfc.  return v0;
}
procedure `int` `getIntrinsicHeight`(`o9.d` v1 @kind this) @signature `Lo9/d;.getIntrinsicHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ffd10.  v0:= v1.`o9.d.e` @type ^`int`;
  #L3ffd14.  return v0;
}
procedure `int` `getIntrinsicWidth`(`o9.d` v1 @kind this) @signature `Lo9/d;.getIntrinsicWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ffd28.  v0:= v1.`o9.d.d` @type ^`int`;
  #L3ffd2c.  return v0;
}
procedure `int` `getMinimumHeight`(`o9.d` v1 @kind this) @signature `Lo9/d;.getMinimumHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ffd40.  v0:= v1.`o9.d.e` @type ^`int`;
  #L3ffd44.  return v0;
}
procedure `int` `getMinimumWidth`(`o9.d` v1 @kind this) @signature `Lo9/d;.getMinimumWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ffd58.  v0:= v1.`o9.d.d` @type ^`int`;
  #L3ffd5c.  return v0;
}
procedure `int` `getOpacity`(`o9.d` v1 @kind this) @signature `Lo9/d;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ffd70.  v0:= -3I;
  #L3ffd72.  return v0;
}
procedure `void` `setAlpha`(`o9.d` v1 @kind this, `int` v2 ) @signature `Lo9/d;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ffdfc.  v1.`o9.d.c` @type ^`int` := v2;
  #L3ffe00.  v0:= v1.`o9.d.a` @type ^`android.graphics.Paint` @kind object;
  #L3ffe04.  call `setAlpha`(v0, v2) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L3ffe0a.  return @kind void;
}
procedure `void` `setColorFilter`(`o9.d` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object) @signature `Lo9/d;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ffe60.  v0:= v1.`o9.d.a` @type ^`android.graphics.Paint` @kind object;
  #L3ffe64.  call temp:= `setColorFilter`(v0, v2) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L3ffe6a.  return @kind void;
}
procedure `void` `setFilterBitmap`(`o9.d` v1 @kind this, `boolean` v2 ) @signature `Lo9/d;.setFilterBitmap:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ffe7c.  v0:= v1.`o9.d.a` @type ^`android.graphics.Paint` @kind object;
  #L3ffe80.  call `setFilterBitmap`(v0, v2) @signature `Landroid/graphics/Paint;.setFilterBitmap:(Z)V` @kind virtual;
  #L3ffe86.  return @kind void;
}
