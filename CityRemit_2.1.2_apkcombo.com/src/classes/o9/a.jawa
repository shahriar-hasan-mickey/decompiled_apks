record `o9.a` @kind class @AccessFlag PUBLIC {
}
procedure `int` `a`(`android.graphics.BitmapFactory$Options` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lo9/a;.a:(Landroid/graphics/BitmapFactory$Options;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3ff74c.  v0:= v3.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L3ff750.  v3:= v3.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L3ff754.  v1:= 1I;
  #L3ff756.  if v0 > v5 then goto L3ff75e;
  #L3ff75a.  if v3 <= v4 then goto L3ff770;
  #L3ff75e.  v2:= v0 / v1 @kind int;
  #L3ff762.  if v2 > v5 then goto L3ff772;
  #L3ff766.  v2:= v3 / v1 @kind int;
  #L3ff76a.  if v2 <= v4 then goto L3ff770;
  #L3ff76e.  goto L3ff772;
  #L3ff770.  return v1;
  #L3ff772.  v1:= v1 * 2;
  #L3ff776.  goto L3ff75e;
}
procedure `int` `b`(`android.content.Context` v7 @kind object) @signature `Lo9/a;.b:(Landroid/content/Context;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ff788.  v0:= "window" @kind object;
  #L3ff78c.  call temp:= `getSystemService`(v7, v0) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L3ff792.  v7:= temp @kind object;
  #L3ff794.  v7:= (`android.view.WindowManager`) v7 @kind object;
  #L3ff798.  v0:= new `android.graphics.Point`;
  #L3ff79c.  call `<init>`(v0) @signature `Landroid/graphics/Point;.<init>:()V` @kind direct;
  #L3ff7a2.  if v7 == 0 then goto L3ff7b4;
  #L3ff7a6.  call temp:= `getDefaultDisplay`(v7) @signature `Landroid/view/WindowManager;.getDefaultDisplay:()Landroid/view/Display;` @kind interface;
  #L3ff7ac.  v7:= temp @kind object;
  #L3ff7ae.  call `getSize`(v7, v0) @signature `Landroid/view/Display;.getSize:(Landroid/graphics/Point;)V` @kind virtual;
  #L3ff7b4.  v7:= v0.`android.graphics.Point.x` @type ^`int`;
  #L3ff7b8.  v0:= v0.`android.graphics.Point.y` @type ^`int`;
  #L3ff7bc.  v1:= (`double`) v7 @kind i2d;
  #L3ff7be.  v3:= 2.0D;
  #L3ff7c2.  call temp:= `pow`(v1, v3) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L3ff7c8.  v1:= temp @kind wide;
  #L3ff7ca.  v5:= (`double`) v0 @kind i2d;
  #L3ff7cc.  call temp:= `pow`(v5, v3) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L3ff7d2.  v3:= temp @kind wide;
  #L3ff7d4.  v1:= v1 + v3 @kind double;
  #L3ff7d6.  call temp:= `sqrt`(v1) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L3ff7dc.  v0:= temp @kind wide;
  #L3ff7de.  v7:= (`int`) v0 @kind d2i;
  #L3ff7e0.  v0:= new `android.graphics.Canvas`;
  #L3ff7e4.  call `<init>`(v0) @signature `Landroid/graphics/Canvas;.<init>:()V` @kind direct;
  #L3ff7ea.  call temp:= `getMaximumBitmapWidth`(v0) @signature `Landroid/graphics/Canvas;.getMaximumBitmapWidth:()I` @kind virtual;
  #L3ff7f0.  v1:= temp;
  #L3ff7f2.  call temp:= `getMaximumBitmapHeight`(v0) @signature `Landroid/graphics/Canvas;.getMaximumBitmapHeight:()I` @kind virtual;
  #L3ff7f8.  v0:= temp;
  #L3ff7fa.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ff800.  v0:= temp;
  #L3ff802.  if v0 <= 0 then goto L3ff80e;
  #L3ff806.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ff80c.  v7:= temp;
  #L3ff80e.  call temp:= `c`() @signature `Lo9/c;.c:()I` @kind static;
  #L3ff814.  v0:= temp;
  #L3ff816.  if v0 <= 0 then goto L3ff822;
  #L3ff81a.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ff820.  v7:= temp;
  #L3ff822.  v0:= new `java.lang.StringBuilder`;
  #L3ff826.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ff82c.  v1:= "maxBitmapSize: " @kind object;
  #L3ff830.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff836.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff83c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ff842.  v0:= temp @kind object;
  #L3ff844.  v1:= "BitmapLoadUtils" @kind object;
  #L3ff848.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ff84e.  return v7;
}
procedure `void` `c`(`java.io.Closeable` v0 @kind object) @signature `Lo9/a;.c:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3ff968.  if v0 == 0 then goto L3ff972;
  #L3ff96c.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L3ff972.  return @kind void;
  catch `java.io.IOException` @[L3ff96c..L3ff972] goto L3ff972;
}
procedure `void` `d`(`android.content.Context` v8 @kind object, `android.net.Uri` v9 @kind object, `android.net.Uri` v10 @kind object, `int` v11 , `int` v12 , `l9.b` v13 @kind object) @signature `Lo9/a;.d:(Landroid/content/Context;Landroid/net/Uri;Landroid/net/Uri;IILl9/b;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ff994.  v7:= new `n9.b`;
  #L3ff998.  v0:= v7 @kind object;
  #L3ff99a.  v1:= v8 @kind object;
  #L3ff99c.  v2:= v9 @kind object;
  #L3ff99e.  v3:= v10 @kind object;
  #L3ff9a0.  v4:= v11;
  #L3ff9a2.  v5:= v12;
  #L3ff9a4.  v6:= v13 @kind object;
  #L3ff9a6.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Ln9/b;.<init>:(Landroid/content/Context;Landroid/net/Uri;Landroid/net/Uri;IILl9/b;)V` @kind direct;
  #L3ff9ac.  v8:= `@@android.os.AsyncTask.THREAD_POOL_EXECUTOR` @type ^`java.util.concurrent.Executor` @kind object;
  #L3ff9b0.  v9:= 0I;
  #L3ff9b2.  v9:= new `java.lang.Void`[v9];
  #L3ff9b6.  call temp:= `executeOnExecutor`(v7, v8, v9) @signature `Landroid/os/AsyncTask;.executeOnExecutor:(Ljava/util/concurrent/Executor;[Ljava/lang/Object;)Landroid/os/AsyncTask;` @kind virtual;
  #L3ff9bc.  return @kind void;
}
procedure `int` `e`(`int` v0 ) @signature `Lo9/a;.e:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3ff860.  goto L3ff87c;
  #L3ff866.  v0:= 0I;
  #L3ff868.  goto L3ff87a;
  #L3ff86a.  v0:= 270I;
  #L3ff86e.  goto L3ff87a;
  #L3ff870.  v0:= 90I;
  #L3ff874.  goto L3ff87a;
  #L3ff876.  v0:= 180I;
  #L3ff87a.  return v0;
  #L3ff87c.  switch v0
                  | 3 => goto L3ff876
                  | 4 => goto L3ff876
                  | 5 => goto L3ff870
                  | 6 => goto L3ff870
                  | 7 => goto L3ff86a
                  | 8 => goto L3ff86a
                  | else => goto L3ff866;
}
procedure `int` `f`(`int` v1 ) @signature `Lo9/a;.f:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ff8ac.  v0:= 2I;
  #L3ff8ae.  if v1 == v0 then goto L3ff8c8;
  #L3ff8b2.  v0:= 7I;
  #L3ff8b4.  if v1 == v0 then goto L3ff8c8;
  #L3ff8b8.  v0:= 4I;
  #L3ff8ba.  if v1 == v0 then goto L3ff8c8;
  #L3ff8be.  v0:= 5I;
  #L3ff8c0.  if v1 == v0 then goto L3ff8c8;
  #L3ff8c4.  v1:= 1I;
  #L3ff8c6.  goto L3ff8ca;
  #L3ff8c8.  v1:= -1I;
  #L3ff8ca.  return v1;
}
procedure `int` `g`(`android.content.Context` v3 @kind object, `android.net.Uri` v4 @kind object) @signature `Lo9/a;.g:(Landroid/content/Context;Landroid/net/Uri;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3ff8dc.  v0:= 0I;
  #L3ff8de.  call temp:= `getContentResolver`(v3) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L3ff8e4.  v3:= temp @kind object;
  #L3ff8e6.  call temp:= `openInputStream`(v3, v4) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L3ff8ec.  v3:= temp @kind object;
  #L3ff8ee.  if v3 != 0 then goto L3ff8f4;
  #L3ff8f2.  return v0;
  #L3ff8f4.  v1:= new `o9.f`;
  #L3ff8f8.  call `<init>`(v1, v3) @signature `Lo9/f;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3ff8fe.  call temp:= `g`(v1) @signature `Lo9/f;.g:()I` @kind virtual;
  #L3ff904.  v0:= temp;
  #L3ff906.  call `c`(v3) @signature `Lo9/a;.c:(Ljava/io/Closeable;)V` @kind static;
  #L3ff90c.  goto L3ff944;
  #L3ff90e.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L3ff910.  v1:= new `java.lang.StringBuilder`;
  #L3ff914.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ff91a.  v2:= "getExifOrientation: " @kind object;
  #L3ff91e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff924.  call temp:= `toString`(v4) @signature `Landroid/net/Uri;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ff92a.  v4:= temp @kind object;
  #L3ff92c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ff932.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ff938.  v4:= temp @kind object;
  #L3ff93a.  v1:= "BitmapLoadUtils" @kind object;
  #L3ff93e.  call temp:= `e`(v1, v4, v3) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3ff944.  return v0;
  catch `java.io.IOException` @[L3ff8de..L3ff90c] goto L3ff90e;
}
procedure `boolean` `h`(`android.net.Uri` v1 @kind object) @signature `Lo9/a;.h:(Landroid/net/Uri;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ff718.  if v1 == 0 then goto L3ff738;
  #L3ff71c.  call temp:= `getScheme`(v1) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L3ff722.  v1:= temp @kind object;
  #L3ff724.  v0:= "content" @kind object;
  #L3ff728.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ff72e.  v1:= temp;
  #L3ff730.  if v1 == 0 then goto L3ff738;
  #L3ff734.  v1:= 1I;
  #L3ff736.  goto L3ff73a;
  #L3ff738.  v1:= 0I;
  #L3ff73a.  return v1;
}
procedure `android.graphics.Bitmap` `i`(`android.graphics.Bitmap` v7 @kind object, `android.graphics.Matrix` v8 @kind object) @signature `Lo9/a;.i:(Landroid/graphics/Bitmap;Landroid/graphics/Matrix;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ff6b4.  v1:= 0I;
  #L3ff6b6.  v2:= 0I;
  #L3ff6b8.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3ff6be.  v3:= temp;
  #L3ff6c0.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3ff6c6.  v4:= temp;
  #L3ff6c8.  v6:= 1I;
  #L3ff6ca.  v0:= v7 @kind object;
  #L3ff6cc.  v5:= v8 @kind object;
  #L3ff6ce.  call temp:= `createBitmap`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L3ff6d4.  v8:= temp @kind object;
  #L3ff6d6.  call temp:= `sameAs`(v7, v8) @signature `Landroid/graphics/Bitmap;.sameAs:(Landroid/graphics/Bitmap;)Z` @kind virtual;
  #L3ff6dc.  v0:= temp;
  #L3ff6de.  if v0 != 0 then goto L3ff6f6;
  #L3ff6e2.  v7:= v8 @kind object;
  #L3ff6e4.  goto L3ff6f6;
  #L3ff6e6.  v8:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L3ff6e8.  v0:= "BitmapLoadUtils" @kind object;
  #L3ff6ec.  v1:= "transformBitmap: " @kind object;
  #L3ff6f0.  call temp:= `e`(v0, v1, v8) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3ff6f6.  return v7 @kind object;
  catch `java.lang.OutOfMemoryError` @[L3ff6b8..L3ff6de] goto L3ff6e6;
}
