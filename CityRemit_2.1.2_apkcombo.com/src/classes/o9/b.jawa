record `o9.b` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `float` `a`(`float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lo9/b;.a:(FFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ff9d0.  v0:= 2.0F;
  #L3ff9d4.  v4:= v4 / v0 @kind float;
  #L3ff9d6.  v1:= v1 / v4 @kind float;
  #L3ff9d8.  v4:= 1.0F;
  #L3ff9dc.  v4:= fcmpg(v1, v4);
  #L3ff9e0.  v3:= v3 / v0 @kind float;
  #L3ff9e2.  if v4 >= 0 then goto L3ff9f4;
  #L3ff9e6.  v3:= v3 * v1 @kind float;
  #L3ff9ea.  v3:= v3 * v1 @kind float;
  #L3ff9ee.  v3:= v3 * v1 @kind float;
  #L3ff9f2.  goto L3ffa04;
  #L3ff9f4.  v1:= v1 - v0 @kind float;
  #L3ff9f6.  v4:= v1 * v1 @kind float;
  #L3ff9fa.  v4:= v4 * v1 @kind float;
  #L3ff9fe.  v4:= v4 + v0 @kind float;
  #L3ffa00.  v3:= v3 * v4 @kind float;
  #L3ffa04.  v3:= v3 + v2 @kind float;
  #L3ffa06.  return v3;
}
procedure `float` `b`(`float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lo9/b;.b:(FFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ffa18.  v1:= v1 / v4 @kind float;
  #L3ffa1a.  v4:= 1.0F;
  #L3ffa1e.  v1:= v1 - v4 @kind float;
  #L3ffa20.  v0:= v1 * v1 @kind float;
  #L3ffa24.  v0:= v0 * v1 @kind float;
  #L3ffa28.  v0:= v0 + v4 @kind float;
  #L3ffa2a.  v3:= v3 * v0 @kind float;
  #L3ffa2e.  v3:= v3 + v2 @kind float;
  #L3ffa30.  return v3;
}
