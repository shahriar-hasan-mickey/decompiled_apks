record `pc.a` @kind class @AccessFlag PUBLIC_FINAL extends `pc.c` @kind class {
  `pc.e` `pc.a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`pc.a` v0 @kind this, `pc.e` v1 @kind object) @signature `Lpc/a;.<init>:(Lpc/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40bacc.  call `<init>`(v0) @signature `Lpc/c;.<init>:()V` @kind direct;
  #L40bad2.  v0.`pc.a.a` @type ^`pc.e` := v1 @kind object;
  #L40bad6.  return @kind void;
}
procedure `boolean` `c`(`pc.a` v2 @kind this, `java.security.cert.X509Certificate` v3 @kind object, `java.security.cert.X509Certificate` v4 @kind object) @signature `Lpc/a;.c:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40b920.  call temp:= `getIssuerDN`(v3) @signature `Ljava/security/cert/X509Certificate;.getIssuerDN:()Ljava/security/Principal;` @kind virtual;
  #L40b926.  v0:= temp @kind object;
  #L40b928.  call temp:= `getSubjectDN`(v4) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L40b92e.  v1:= temp @kind object;
  #L40b930.  call temp:= `equals`(v0, v1) @signature `Ljava/security/Principal;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L40b936.  v0:= temp;
  #L40b938.  v1:= 0I;
  #L40b93a.  if v0 != 0 then goto L40b940;
  #L40b93e.  return v1;
  #L40b940.  call temp:= `getPublicKey`(v4) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L40b946.  v4:= temp @kind object;
  #L40b948.  call `verify`(v3, v4) @signature `Ljava/security/cert/X509Certificate;.verify:(Ljava/security/PublicKey;)V` @kind virtual;
  #L40b94e.  v3:= 1I;
  #L40b950.  return v3;
  #L40b952.  return v1;
  catch `java.security.GeneralSecurityException` @[L40b940..L40b94e] goto L40b952;
}
procedure `java.util.List` `a`(`pc.a` v6 @kind this, `java.util.List` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lpc/a;.a:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L40b994.  v8:= new `java.util.ArrayDeque`;
  #L40b998.  call `<init>`(v8, v7) @signature `Ljava/util/ArrayDeque;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L40b99e.  v7:= new `java.util.ArrayList`;
  #L40b9a2.  call `<init>`(v7) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L40b9a8.  call temp:= `removeFirst`(v8) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L40b9ae.  v0:= temp @kind object;
  #L40b9b0.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L40b9b6.  v0:= 0I;
  #L40b9b8.  v1:= 0I;
  #L40b9ba.  v2:= 9I;
  #L40b9be.  if v0 >= v2 then goto L40ba8c;
  #L40b9c2.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L40b9c8.  v2:= temp;
  #L40b9ca.  v3:= 1I;
  #L40b9cc.  v2:= v2 - v3 @kind int;
  #L40b9ce.  call temp:= `get`(v7, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L40b9d4.  v2:= temp @kind object;
  #L40b9d6.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L40b9da.  v4:= v6.`pc.a.a` @type ^`pc.e` @kind object;
  #L40b9de.  call temp:= `a`(v4, v2) @signature `Lpc/e;.a:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @kind interface;
  #L40b9e4.  v4:= temp @kind object;
  #L40b9e6.  if v4 == 0 then goto L40ba1a;
  #L40b9ea.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L40b9f0.  v1:= temp;
  #L40b9f2.  if v1 > v3 then goto L40ba02;
  #L40b9f6.  call temp:= `equals`(v2, v4) @signature `Ljava/security/cert/X509Certificate;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40b9fc.  v1:= temp;
  #L40b9fe.  if v1 != 0 then goto L40ba08;
  #L40ba02.  call temp:= `add`(v7, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L40ba08.  call temp:= `c`(v6, v4, v4) @signature `Lpc/a;.c:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L40ba0e.  v1:= temp;
  #L40ba10.  if v1 == 0 then goto L40ba16;
  #L40ba14.  return v7 @kind object;
  #L40ba16.  v1:= 1I;
  #L40ba18.  goto L40ba52;
  #L40ba1a.  call temp:= `iterator`(v8) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40ba20.  v3:= temp @kind object;
  #L40ba22.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L40ba28.  v4:= temp;
  #L40ba2a.  if v4 == 0 then goto L40ba58;
  #L40ba2e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L40ba34.  v4:= temp @kind object;
  #L40ba36.  v4:= (`java.security.cert.X509Certificate`) v4 @kind object;
  #L40ba3a.  call temp:= `c`(v6, v2, v4) @signature `Lpc/a;.c:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L40ba40.  v5:= temp;
  #L40ba42.  if v5 == 0 then goto L40ba22;
  #L40ba46.  call `remove`(v3) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L40ba4c.  call temp:= `add`(v7, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L40ba52.  v0:= v0 + 1;
  #L40ba56.  goto L40b9ba;
  #L40ba58.  if v1 == 0 then goto L40ba5e;
  #L40ba5c.  return v7 @kind object;
  #L40ba5e.  v7:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L40ba62.  v8:= new `java.lang.StringBuilder`;
  #L40ba66.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40ba6c.  v0:= "Failed to find a trusted cert that signed " @kind object;
  #L40ba70.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ba76.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ba7c.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40ba82.  v8:= temp @kind object;
  #L40ba84.  call `<init>`(v7, v8) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40ba8a.  throw v7;
  #L40ba8c.  v8:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L40ba90.  v0:= new `java.lang.StringBuilder`;
  #L40ba94.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40ba9a.  v1:= "Certificate chain too long: " @kind object;
  #L40ba9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40baa4.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40baaa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40bab0.  v7:= temp @kind object;
  #L40bab2.  call `<init>`(v8, v7) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40bab8.  throw v8;
}
procedure `boolean` `equals`(`pc.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lpc/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40b8e0.  v0:= 1I;
  #L40b8e2.  if v3 != v2 then goto L40b8e8;
  #L40b8e6.  return v0;
  #L40b8e8.  v1:= instanceof @variable v3 @type ^`pc.a` @kind boolean;
  #L40b8ec.  if v1 == 0 then goto L40b90a;
  #L40b8f0.  v3:= (`pc.a`) v3 @kind object;
  #L40b8f4.  v3:= v3.`pc.a.a` @type ^`pc.e` @kind object;
  #L40b8f8.  v1:= v2.`pc.a.a` @type ^`pc.e` @kind object;
  #L40b8fc.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40b902.  v3:= temp;
  #L40b904.  if v3 == 0 then goto L40b90a;
  #L40b908.  goto L40b90c;
  #L40b90a.  v0:= 0I;
  #L40b90c.  return v0;
}
procedure `int` `hashCode`(`pc.a` v1 @kind this) @signature `Lpc/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40b974.  v0:= v1.`pc.a.a` @type ^`pc.e` @kind object;
  #L40b978.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L40b97e.  v0:= temp;
  #L40b980.  return v0;
}
