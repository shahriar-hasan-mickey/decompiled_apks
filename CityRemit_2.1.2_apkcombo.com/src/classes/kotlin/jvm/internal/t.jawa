record `kotlin.jvm.internal.t` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`kotlin.jvm.internal.t` v0 @kind this) @signature `Lkotlin/jvm/internal/t;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b7d38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b7d3e.  return @kind void;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v2 @kind object, `int` v3 ) @signature `Lkotlin/jvm/internal/t;.a:(Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b7cc4.  if v2 == 0 then goto L3b7cfc;
  #L3b7cc8.  call temp:= `c`(v2, v3) @signature `Lkotlin/jvm/internal/t;.c:(Ljava/lang/Object;I)Z` @kind static;
  #L3b7cce.  v0:= temp;
  #L3b7cd0.  if v0 != 0 then goto L3b7cfc;
  #L3b7cd4.  v0:= new `java.lang.StringBuilder`;
  #L3b7cd8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b7cde.  v1:= "kotlin.jvm.functions.Function" @kind object;
  #L3b7ce2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b7ce8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b7cee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b7cf4.  v3:= temp @kind object;
  #L3b7cf6.  call `f`(v2, v3) @signature `Lkotlin/jvm/internal/t;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3b7cfc.  return v2 @kind object;
}
procedure `int` `b`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/t;.b:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b7b48.  v0:= instanceof @variable v1 @type ^`kotlin.jvm.internal.h` @kind boolean;
  #L3b7b4c.  if v0 == 0 then goto L3b7b5e;
  #L3b7b50.  v1:= (`kotlin.jvm.internal.h`) v1 @kind object;
  #L3b7b54.  call temp:= `getArity`(v1) @signature `Lkotlin/jvm/internal/h;.getArity:()I` @kind interface;
  #L3b7b5a.  v1:= temp;
  #L3b7b5c.  return v1;
  #L3b7b5e.  v0:= instanceof @variable v1 @type ^`tb.a` @kind boolean;
  #L3b7b62.  if v0 == 0 then goto L3b7b6a;
  #L3b7b66.  v1:= 0I;
  #L3b7b68.  return v1;
  #L3b7b6a.  v0:= instanceof @variable v1 @type ^`tb.l` @kind boolean;
  #L3b7b6e.  if v0 == 0 then goto L3b7b76;
  #L3b7b72.  v1:= 1I;
  #L3b7b74.  return v1;
  #L3b7b76.  v0:= instanceof @variable v1 @type ^`tb.p` @kind boolean;
  #L3b7b7a.  if v0 == 0 then goto L3b7b82;
  #L3b7b7e.  v1:= 2I;
  #L3b7b80.  return v1;
  #L3b7b82.  v0:= instanceof @variable v1 @type ^`tb.q` @kind boolean;
  #L3b7b86.  if v0 == 0 then goto L3b7b8e;
  #L3b7b8a.  v1:= 3I;
  #L3b7b8c.  return v1;
  #L3b7b8e.  v0:= instanceof @variable v1 @type ^`tb.r` @kind boolean;
  #L3b7b92.  if v0 == 0 then goto L3b7b9a;
  #L3b7b96.  v1:= 4I;
  #L3b7b98.  return v1;
  #L3b7b9a.  v0:= instanceof @variable v1 @type ^`tb.s` @kind boolean;
  #L3b7b9e.  if v0 == 0 then goto L3b7ba6;
  #L3b7ba2.  v1:= 5I;
  #L3b7ba4.  return v1;
  #L3b7ba6.  v0:= instanceof @variable v1 @type ^`tb.t` @kind boolean;
  #L3b7baa.  if v0 == 0 then goto L3b7bb2;
  #L3b7bae.  v1:= 6I;
  #L3b7bb0.  return v1;
  #L3b7bb2.  v0:= instanceof @variable v1 @type ^`tb.u` @kind boolean;
  #L3b7bb6.  if v0 == 0 then goto L3b7bbe;
  #L3b7bba.  v1:= 7I;
  #L3b7bbc.  return v1;
  #L3b7bbe.  v0:= instanceof @variable v1 @type ^`tb.v` @kind boolean;
  #L3b7bc2.  if v0 == 0 then goto L3b7bcc;
  #L3b7bc6.  v1:= 8I;
  #L3b7bca.  return v1;
  #L3b7bcc.  v0:= instanceof @variable v1 @type ^`tb.w` @kind boolean;
  #L3b7bd0.  if v0 == 0 then goto L3b7bda;
  #L3b7bd4.  v1:= 9I;
  #L3b7bd8.  return v1;
  #L3b7bda.  v0:= instanceof @variable v1 @type ^`tb.b` @kind boolean;
  #L3b7bde.  if v0 == 0 then goto L3b7be8;
  #L3b7be2.  v1:= 10I;
  #L3b7be6.  return v1;
  #L3b7be8.  v0:= instanceof @variable v1 @type ^`tb.c` @kind boolean;
  #L3b7bec.  if v0 == 0 then goto L3b7bf6;
  #L3b7bf0.  v1:= 11I;
  #L3b7bf4.  return v1;
  #L3b7bf6.  v0:= instanceof @variable v1 @type ^`tb.d` @kind boolean;
  #L3b7bfa.  if v0 == 0 then goto L3b7c04;
  #L3b7bfe.  v1:= 12I;
  #L3b7c02.  return v1;
  #L3b7c04.  v0:= instanceof @variable v1 @type ^`tb.e` @kind boolean;
  #L3b7c08.  if v0 == 0 then goto L3b7c12;
  #L3b7c0c.  v1:= 13I;
  #L3b7c10.  return v1;
  #L3b7c12.  v0:= instanceof @variable v1 @type ^`tb.f` @kind boolean;
  #L3b7c16.  if v0 == 0 then goto L3b7c20;
  #L3b7c1a.  v1:= 14I;
  #L3b7c1e.  return v1;
  #L3b7c20.  v0:= instanceof @variable v1 @type ^`tb.g` @kind boolean;
  #L3b7c24.  if v0 == 0 then goto L3b7c2e;
  #L3b7c28.  v1:= 15I;
  #L3b7c2c.  return v1;
  #L3b7c2e.  v0:= instanceof @variable v1 @type ^`tb.h` @kind boolean;
  #L3b7c32.  if v0 == 0 then goto L3b7c3c;
  #L3b7c36.  v1:= 16I;
  #L3b7c3a.  return v1;
  #L3b7c3c.  v0:= instanceof @variable v1 @type ^`tb.i` @kind boolean;
  #L3b7c40.  if v0 == 0 then goto L3b7c4a;
  #L3b7c44.  v1:= 17I;
  #L3b7c48.  return v1;
  #L3b7c4a.  v0:= instanceof @variable v1 @type ^`tb.j` @kind boolean;
  #L3b7c4e.  if v0 == 0 then goto L3b7c58;
  #L3b7c52.  v1:= 18I;
  #L3b7c56.  return v1;
  #L3b7c58.  v0:= instanceof @variable v1 @type ^`tb.k` @kind boolean;
  #L3b7c5c.  if v0 == 0 then goto L3b7c66;
  #L3b7c60.  v1:= 19I;
  #L3b7c64.  return v1;
  #L3b7c66.  v0:= instanceof @variable v1 @type ^`tb.m` @kind boolean;
  #L3b7c6a.  if v0 == 0 then goto L3b7c74;
  #L3b7c6e.  v1:= 20I;
  #L3b7c72.  return v1;
  #L3b7c74.  v0:= instanceof @variable v1 @type ^`tb.n` @kind boolean;
  #L3b7c78.  if v0 == 0 then goto L3b7c82;
  #L3b7c7c.  v1:= 21I;
  #L3b7c80.  return v1;
  #L3b7c82.  v1:= instanceof @variable v1 @type ^`tb.o` @kind boolean;
  #L3b7c86.  if v1 == 0 then goto L3b7c90;
  #L3b7c8a.  v1:= 22I;
  #L3b7c8e.  return v1;
  #L3b7c90.  v1:= -1I;
  #L3b7c92.  return v1;
}
procedure `boolean` `c`(`java.lang.Object` v1 @kind object, `int` v2 ) @signature `Lkotlin/jvm/internal/t;.c:(Ljava/lang/Object;I)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b7b1c.  v0:= instanceof @variable v1 @type ^`jb.c` @kind boolean;
  #L3b7b20.  if v0 == 0 then goto L3b7b34;
  #L3b7b24.  call temp:= `b`(v1) @signature `Lkotlin/jvm/internal/t;.b:(Ljava/lang/Object;)I` @kind static;
  #L3b7b2a.  v1:= temp;
  #L3b7b2c.  if v1 != v2 then goto L3b7b34;
  #L3b7b30.  v1:= 1I;
  #L3b7b32.  goto L3b7b36;
  #L3b7b34.  v1:= 0I;
  #L3b7b36.  return v1;
}
procedure `java.lang.Throwable` `d`(`java.lang.Throwable` v1 @kind object) @signature `Lkotlin/jvm/internal/t;.d:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3b7d10.  v0:= constclass @type ^`kotlin.jvm.internal.t` @kind object;
  #L3b7d14.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3b7d1a.  v0:= temp @kind object;
  #L3b7d1c.  call temp:= `i`(v1, v0) @signature `Lkotlin/jvm/internal/k;.i:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;` @kind static;
  #L3b7d22.  v1:= temp @kind object;
  #L3b7d24.  return v1 @kind object;
}
procedure `java.lang.ClassCastException` `e`(`java.lang.ClassCastException` v0 @kind object) @signature `Lkotlin/jvm/internal/t;.e:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3b7ca4.  call temp:= `d`(v0) @signature `Lkotlin/jvm/internal/t;.d:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L3b7caa.  v0:= temp @kind object;
  #L3b7cac.  v0:= (`java.lang.ClassCastException`) v0 @kind object;
  #L3b7cb0.  throw v0;
}
procedure `void` `f`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/t;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b7d50.  if v1 != 0 then goto L3b7d5a;
  #L3b7d54.  v1:= "null" @kind object;
  #L3b7d58.  goto L3b7d6a;
  #L3b7d5a.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3b7d60.  v1:= temp @kind object;
  #L3b7d62.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3b7d68.  v1:= temp @kind object;
  #L3b7d6a.  v0:= new `java.lang.StringBuilder`;
  #L3b7d6e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b7d74.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b7d7a.  v1:= " cannot be cast to " @kind object;
  #L3b7d7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b7d84.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b7d8a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b7d90.  v1:= temp @kind object;
  #L3b7d92.  call `g`(v1) @signature `Lkotlin/jvm/internal/t;.g:(Ljava/lang/String;)V` @kind static;
  #L3b7d98.  return @kind void;
}
procedure `void` `g`(`java.lang.String` v1 @kind object) @signature `Lkotlin/jvm/internal/t;.g:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b7dac.  v0:= new `java.lang.ClassCastException`;
  #L3b7db0.  call `<init>`(v0, v1) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b7db6.  call temp:= `e`(v0) @signature `Lkotlin/jvm/internal/t;.e:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @kind static;
  #L3b7dbc.  v1:= temp @kind object;
  #L3b7dbe.  throw v1;
}
