record `kotlin.jvm.internal.n` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.jvm.internal.p` @kind class, `xb.f` @kind interface {
}
procedure `void` `<init>`(`kotlin.jvm.internal.n` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lkotlin/jvm/internal/n;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b76b8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/jvm/internal/p;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L3b76be.  return @kind void;
}
procedure `xb.b` `computeReflected`(`kotlin.jvm.internal.n` v1 @kind this) @signature `Lkotlin/jvm/internal/n;.computeReflected:()Lxb/b;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3b76d0.  call temp:= `d`(v1) @signature `Lkotlin/jvm/internal/r;.d:(Lkotlin/jvm/internal/n;)Lxb/f;` @kind static;
  #L3b76d6.  v0:= temp @kind object;
  #L3b76d8.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.jvm.internal.n` v1 @kind this) @signature `Lkotlin/jvm/internal/n;.invoke:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b769c.  call temp:= `get`(v1) @signature `Lxb/f;.get:()Ljava/lang/Object;` @kind interface;
  #L3b76a2.  v0:= temp @kind object;
  #L3b76a4.  return v0 @kind object;
}
