record `kotlin.jvm.internal.p` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.jvm.internal.c` @kind class, `xb.g` @kind interface {
}
procedure `void` `<init>`(`kotlin.jvm.internal.p` v0 @kind this) @signature `Lkotlin/jvm/internal/p;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3b7850.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/c;.<init>:()V` @kind direct;
  #L3b7856.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.p` v7 @kind this, `java.lang.Object` v8 @kind object, `java.lang.Class` v9 @kind object, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object, `int` v12 ) @signature `Lkotlin/jvm/internal/p;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3b7868.  v0:= 1I;
  #L3b786a.  v12:= v12 ^& v0 @kind int;
  #L3b786c.  if v12 != v0 then goto L3b7874;
  #L3b7870.  v6:= 1I;
  #L3b7872.  goto L3b7878;
  #L3b7874.  v0:= 0I;
  #L3b7876.  v6:= 0I;
  #L3b7878.  v1:= v7 @kind object;
  #L3b787a.  v2:= v8 @kind object;
  #L3b787c.  v3:= v9 @kind object;
  #L3b787e.  v4:= v10 @kind object;
  #L3b7880.  v5:= v11 @kind object;
  #L3b7882.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/jvm/internal/c;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L3b7888.  return @kind void;
}
procedure `xb.g` `b`(`kotlin.jvm.internal.p` v1 @kind this) @signature `Lkotlin/jvm/internal/p;.b:()Lxb/g;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3b78b8.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/c;.getReflected:()Lxb/b;` @kind super;
  #L3b78be.  v0:= temp @kind object;
  #L3b78c0.  v0:= (`xb.g`) v0 @kind object;
  #L3b78c4.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.jvm.internal.p` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlin/jvm/internal/p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b76ec.  v0:= 1I;
  #L3b76ee.  if v5 != v4 then goto L3b76f4;
  #L3b76f2.  return v0;
  #L3b76f4.  v1:= instanceof @variable v5 @type ^`kotlin.jvm.internal.p` @kind boolean;
  #L3b76f8.  v2:= 0I;
  #L3b76fa.  if v1 == 0 then goto L3b7778;
  #L3b76fe.  v5:= (`kotlin.jvm.internal.p`) v5 @kind object;
  #L3b7702.  call temp:= `getOwner`(v4) @signature `Lkotlin/jvm/internal/c;.getOwner:()Lxb/d;` @kind virtual;
  #L3b7708.  v1:= temp @kind object;
  #L3b770a.  call temp:= `getOwner`(v5) @signature `Lkotlin/jvm/internal/c;.getOwner:()Lxb/d;` @kind virtual;
  #L3b7710.  v3:= temp @kind object;
  #L3b7712.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b7718.  v1:= temp;
  #L3b771a.  if v1 == 0 then goto L3b7774;
  #L3b771e.  call temp:= `getName`(v4) @signature `Lkotlin/jvm/internal/c;.getName:()Ljava/lang/String;` @kind virtual;
  #L3b7724.  v1:= temp @kind object;
  #L3b7726.  call temp:= `getName`(v5) @signature `Lkotlin/jvm/internal/c;.getName:()Ljava/lang/String;` @kind virtual;
  #L3b772c.  v3:= temp @kind object;
  #L3b772e.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b7734.  v1:= temp;
  #L3b7736.  if v1 == 0 then goto L3b7774;
  #L3b773a.  call temp:= `getSignature`(v4) @signature `Lkotlin/jvm/internal/c;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L3b7740.  v1:= temp @kind object;
  #L3b7742.  call temp:= `getSignature`(v5) @signature `Lkotlin/jvm/internal/c;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L3b7748.  v3:= temp @kind object;
  #L3b774a.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b7750.  v1:= temp;
  #L3b7752.  if v1 == 0 then goto L3b7774;
  #L3b7756.  call temp:= `getBoundReceiver`(v4) @signature `Lkotlin/jvm/internal/c;.getBoundReceiver:()Ljava/lang/Object;` @kind virtual;
  #L3b775c.  v1:= temp @kind object;
  #L3b775e.  call temp:= `getBoundReceiver`(v5) @signature `Lkotlin/jvm/internal/c;.getBoundReceiver:()Ljava/lang/Object;` @kind virtual;
  #L3b7764.  v5:= temp @kind object;
  #L3b7766.  call temp:= `a`(v1, v5) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3b776c.  v5:= temp;
  #L3b776e.  if v5 == 0 then goto L3b7774;
  #L3b7772.  goto L3b7776;
  #L3b7774.  v0:= 0I;
  #L3b7776.  return v0;
  #L3b7778.  v0:= instanceof @variable v5 @type ^`xb.g` @kind boolean;
  #L3b777c.  if v0 == 0 then goto L3b7792;
  #L3b7780.  call temp:= `compute`(v4) @signature `Lkotlin/jvm/internal/c;.compute:()Lxb/b;` @kind virtual;
  #L3b7786.  v0:= temp @kind object;
  #L3b7788.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b778e.  v5:= temp;
  #L3b7790.  return v5;
  #L3b7792.  return v2;
}
procedure `xb.b` `getReflected`(`kotlin.jvm.internal.p` v1 @kind this) @signature `Lkotlin/jvm/internal/p;.getReflected:()Lxb/b;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L3b789c.  call temp:= `b`(v1) @signature `Lkotlin/jvm/internal/p;.b:()Lxb/g;` @kind virtual;
  #L3b78a2.  v0:= temp @kind object;
  #L3b78a4.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.jvm.internal.p` v2 @kind this) @signature `Lkotlin/jvm/internal/p;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b77a4.  call temp:= `getOwner`(v2) @signature `Lkotlin/jvm/internal/c;.getOwner:()Lxb/d;` @kind virtual;
  #L3b77aa.  v0:= temp @kind object;
  #L3b77ac.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3b77b2.  v0:= temp;
  #L3b77b4.  v0:= v0 * 31;
  #L3b77b8.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/c;.getName:()Ljava/lang/String;` @kind virtual;
  #L3b77be.  v1:= temp @kind object;
  #L3b77c0.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3b77c6.  v1:= temp;
  #L3b77c8.  v0:= v0 + v1 @kind int;
  #L3b77ca.  v0:= v0 * 31;
  #L3b77ce.  call temp:= `getSignature`(v2) @signature `Lkotlin/jvm/internal/c;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L3b77d4.  v1:= temp @kind object;
  #L3b77d6.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3b77dc.  v1:= temp;
  #L3b77de.  v0:= v0 + v1 @kind int;
  #L3b77e0.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.p` v2 @kind this) @signature `Lkotlin/jvm/internal/p;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b77f4.  call temp:= `compute`(v2) @signature `Lkotlin/jvm/internal/c;.compute:()Lxb/b;` @kind virtual;
  #L3b77fa.  v0:= temp @kind object;
  #L3b77fc.  if v0 == v2 then goto L3b780a;
  #L3b7800.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b7806.  v0:= temp @kind object;
  #L3b7808.  return v0 @kind object;
  #L3b780a.  v0:= new `java.lang.StringBuilder`;
  #L3b780e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b7814.  v1:= "property " @kind object;
  #L3b7818.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b781e.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/c;.getName:()Ljava/lang/String;` @kind virtual;
  #L3b7824.  v1:= temp @kind object;
  #L3b7826.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b782c.  v1:= " (Kotlin reflection is not available)" @kind object;
  #L3b7830.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b7836.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b783c.  v0:= temp @kind object;
  #L3b783e.  return v0 @kind object;
}
