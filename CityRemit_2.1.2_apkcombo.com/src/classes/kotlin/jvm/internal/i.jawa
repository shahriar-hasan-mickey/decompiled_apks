record `kotlin.jvm.internal.i` @kind class @AccessFlag PUBLIC extends `kotlin.jvm.internal.c` @kind class, `kotlin.jvm.internal.h` @kind interface, `xb.e` @kind interface {
  `int` `kotlin.jvm.internal.i.arity` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.jvm.internal.i.flags` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.i` v7 @kind this, `int` v8 ) @signature `Lkotlin/jvm/internal/i;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3b712c.  v2:= `@@kotlin.jvm.internal.c.NO_RECEIVER` @type ^`java.lang.Object` @kind object;
  #L3b7130.  v3:= 0I;
  #L3b7132.  v4:= 0I;
  #L3b7134.  v5:= 0I;
  #L3b7136.  v6:= 0I;
  #L3b7138.  v0:= v7 @kind object;
  #L3b713a.  v1:= v8;
  #L3b713c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/jvm/internal/i;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L3b7142.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.i` v7 @kind this, `int` v8 , `java.lang.Object` v9 @kind object) @signature `Lkotlin/jvm/internal/i;.<init>:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3b7154.  v3:= 0I;
  #L3b7156.  v4:= 0I;
  #L3b7158.  v5:= 0I;
  #L3b715a.  v6:= 0I;
  #L3b715c.  v0:= v7 @kind object;
  #L3b715e.  v1:= v8;
  #L3b7160.  v2:= v9 @kind object;
  #L3b7162.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/jvm/internal/i;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L3b7168.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.i` v8 @kind this, `int` v9 , `java.lang.Object` v10 @kind object, `java.lang.Class` v11 @kind object, `java.lang.String` v12 @kind object, `java.lang.String` v13 @kind object, `int` v14 ) @signature `Lkotlin/jvm/internal/i;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3b717c.  v0:= v14 ^& 1;
  #L3b7180.  v1:= 1I;
  #L3b7182.  if v0 != v1 then goto L3b718a;
  #L3b7186.  v7:= 1I;
  #L3b7188.  goto L3b718e;
  #L3b718a.  v0:= 0I;
  #L3b718c.  v7:= 0I;
  #L3b718e.  v2:= v8 @kind object;
  #L3b7190.  v3:= v10 @kind object;
  #L3b7192.  v4:= v11 @kind object;
  #L3b7194.  v5:= v12 @kind object;
  #L3b7196.  v6:= v13 @kind object;
  #L3b7198.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lkotlin/jvm/internal/c;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L3b719e.  v8.`kotlin.jvm.internal.i.arity` @type ^`int` := v9;
  #L3b71a2.  v9:= v14 ^> 1;
  #L3b71a6.  v8.`kotlin.jvm.internal.i.flags` @type ^`int` := v9;
  #L3b71aa.  return @kind void;
}
procedure `xb.b` `computeReflected`(`kotlin.jvm.internal.i` v1 @kind this) @signature `Lkotlin/jvm/internal/i;.computeReflected:()Lxb/b;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3b71bc.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/r;.a:(Lkotlin/jvm/internal/i;)Lxb/e;` @kind static;
  #L3b71c2.  v0:= temp @kind object;
  #L3b71c4.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.jvm.internal.i` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlin/jvm/internal/i;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b6eb4.  v0:= 1I;
  #L3b6eb6.  if v5 != v4 then goto L3b6ebc;
  #L3b6eba.  return v0;
  #L3b6ebc.  v1:= instanceof @variable v5 @type ^`kotlin.jvm.internal.i` @kind boolean;
  #L3b6ec0.  v2:= 0I;
  #L3b6ec2.  if v1 == 0 then goto L3b6f58;
  #L3b6ec6.  v5:= (`kotlin.jvm.internal.i`) v5 @kind object;
  #L3b6eca.  call temp:= `getName`(v4) @signature `Lkotlin/jvm/internal/c;.getName:()Ljava/lang/String;` @kind virtual;
  #L3b6ed0.  v1:= temp @kind object;
  #L3b6ed2.  call temp:= `getName`(v5) @signature `Lkotlin/jvm/internal/c;.getName:()Ljava/lang/String;` @kind virtual;
  #L3b6ed8.  v3:= temp @kind object;
  #L3b6eda.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b6ee0.  v1:= temp;
  #L3b6ee2.  if v1 == 0 then goto L3b6f54;
  #L3b6ee6.  call temp:= `getSignature`(v4) @signature `Lkotlin/jvm/internal/c;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L3b6eec.  v1:= temp @kind object;
  #L3b6eee.  call temp:= `getSignature`(v5) @signature `Lkotlin/jvm/internal/c;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L3b6ef4.  v3:= temp @kind object;
  #L3b6ef6.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b6efc.  v1:= temp;
  #L3b6efe.  if v1 == 0 then goto L3b6f54;
  #L3b6f02.  v1:= v4.`kotlin.jvm.internal.i.flags` @type ^`int`;
  #L3b6f06.  v3:= v5.`kotlin.jvm.internal.i.flags` @type ^`int`;
  #L3b6f0a.  if v1 != v3 then goto L3b6f54;
  #L3b6f0e.  v1:= v4.`kotlin.jvm.internal.i.arity` @type ^`int`;
  #L3b6f12.  v3:= v5.`kotlin.jvm.internal.i.arity` @type ^`int`;
  #L3b6f16.  if v1 != v3 then goto L3b6f54;
  #L3b6f1a.  call temp:= `getBoundReceiver`(v4) @signature `Lkotlin/jvm/internal/c;.getBoundReceiver:()Ljava/lang/Object;` @kind virtual;
  #L3b6f20.  v1:= temp @kind object;
  #L3b6f22.  call temp:= `getBoundReceiver`(v5) @signature `Lkotlin/jvm/internal/c;.getBoundReceiver:()Ljava/lang/Object;` @kind virtual;
  #L3b6f28.  v3:= temp @kind object;
  #L3b6f2a.  call temp:= `a`(v1, v3) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3b6f30.  v1:= temp;
  #L3b6f32.  if v1 == 0 then goto L3b6f54;
  #L3b6f36.  call temp:= `getOwner`(v4) @signature `Lkotlin/jvm/internal/c;.getOwner:()Lxb/d;` @kind virtual;
  #L3b6f3c.  v1:= temp @kind object;
  #L3b6f3e.  call temp:= `getOwner`(v5) @signature `Lkotlin/jvm/internal/c;.getOwner:()Lxb/d;` @kind virtual;
  #L3b6f44.  v5:= temp @kind object;
  #L3b6f46.  call temp:= `a`(v1, v5) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3b6f4c.  v5:= temp;
  #L3b6f4e.  if v5 == 0 then goto L3b6f54;
  #L3b6f52.  goto L3b6f56;
  #L3b6f54.  v0:= 0I;
  #L3b6f56.  return v0;
  #L3b6f58.  v0:= instanceof @variable v5 @type ^`xb.e` @kind boolean;
  #L3b6f5c.  if v0 == 0 then goto L3b6f72;
  #L3b6f60.  call temp:= `compute`(v4) @signature `Lkotlin/jvm/internal/c;.compute:()Lxb/b;` @kind virtual;
  #L3b6f66.  v0:= temp @kind object;
  #L3b6f68.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b6f6e.  v5:= temp;
  #L3b6f70.  return v5;
  #L3b6f72.  return v2;
}
procedure `int` `getArity`(`kotlin.jvm.internal.i` v1 @kind this) @signature `Lkotlin/jvm/internal/i;.getArity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b7038.  v0:= v1.`kotlin.jvm.internal.i.arity` @type ^`int`;
  #L3b703c.  return v0;
}
procedure `xb.b` `getReflected`(`kotlin.jvm.internal.i` v1 @kind this) @signature `Lkotlin/jvm/internal/i;.getReflected:()Lxb/b;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L3b71d8.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/i;.getReflected:()Lxb/e;` @kind virtual;
  #L3b71de.  v0:= temp @kind object;
  #L3b71e0.  return v0 @kind object;
}
procedure `xb.e` `getReflected`(`kotlin.jvm.internal.i` v1 @kind this) @signature `Lkotlin/jvm/internal/i;.getReflected:()Lxb/e;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3b71f4.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/c;.getReflected:()Lxb/b;` @kind super;
  #L3b71fa.  v0:= temp @kind object;
  #L3b71fc.  v0:= (`xb.e`) v0 @kind object;
  #L3b7200.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.jvm.internal.i` v2 @kind this) @signature `Lkotlin/jvm/internal/i;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7050.  call temp:= `getOwner`(v2) @signature `Lkotlin/jvm/internal/c;.getOwner:()Lxb/d;` @kind virtual;
  #L3b7056.  v0:= temp @kind object;
  #L3b7058.  if v0 != 0 then goto L3b7060;
  #L3b705c.  v0:= 0I;
  #L3b705e.  goto L3b7074;
  #L3b7060.  call temp:= `getOwner`(v2) @signature `Lkotlin/jvm/internal/c;.getOwner:()Lxb/d;` @kind virtual;
  #L3b7066.  v0:= temp @kind object;
  #L3b7068.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3b706e.  v0:= temp;
  #L3b7070.  v0:= v0 * 31;
  #L3b7074.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/c;.getName:()Ljava/lang/String;` @kind virtual;
  #L3b707a.  v1:= temp @kind object;
  #L3b707c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3b7082.  v1:= temp;
  #L3b7084.  v0:= v0 + v1 @kind int;
  #L3b7086.  v0:= v0 * 31;
  #L3b708a.  call temp:= `getSignature`(v2) @signature `Lkotlin/jvm/internal/c;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L3b7090.  v1:= temp @kind object;
  #L3b7092.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3b7098.  v1:= temp;
  #L3b709a.  v0:= v0 + v1 @kind int;
  #L3b709c.  return v0;
}
procedure `boolean` `isExternal`(`kotlin.jvm.internal.i` v1 @kind this) @signature `Lkotlin/jvm/internal/i;.isExternal:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b6f84.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/i;.getReflected:()Lxb/e;` @kind virtual;
  #L3b6f8a.  v0:= temp @kind object;
  #L3b6f8c.  call temp:= `isExternal`(v0) @signature `Lxb/e;.isExternal:()Z` @kind interface;
  #L3b6f92.  v0:= temp;
  #L3b6f94.  return v0;
}
procedure `boolean` `isInfix`(`kotlin.jvm.internal.i` v1 @kind this) @signature `Lkotlin/jvm/internal/i;.isInfix:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b6fa8.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/i;.getReflected:()Lxb/e;` @kind virtual;
  #L3b6fae.  v0:= temp @kind object;
  #L3b6fb0.  call temp:= `isInfix`(v0) @signature `Lxb/e;.isInfix:()Z` @kind interface;
  #L3b6fb6.  v0:= temp;
  #L3b6fb8.  return v0;
}
procedure `boolean` `isInline`(`kotlin.jvm.internal.i` v1 @kind this) @signature `Lkotlin/jvm/internal/i;.isInline:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b6fcc.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/i;.getReflected:()Lxb/e;` @kind virtual;
  #L3b6fd2.  v0:= temp @kind object;
  #L3b6fd4.  call temp:= `isInline`(v0) @signature `Lxb/e;.isInline:()Z` @kind interface;
  #L3b6fda.  v0:= temp;
  #L3b6fdc.  return v0;
}
procedure `boolean` `isOperator`(`kotlin.jvm.internal.i` v1 @kind this) @signature `Lkotlin/jvm/internal/i;.isOperator:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b6ff0.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/i;.getReflected:()Lxb/e;` @kind virtual;
  #L3b6ff6.  v0:= temp @kind object;
  #L3b6ff8.  call temp:= `isOperator`(v0) @signature `Lxb/e;.isOperator:()Z` @kind interface;
  #L3b6ffe.  v0:= temp;
  #L3b7000.  return v0;
}
procedure `boolean` `isSuspend`(`kotlin.jvm.internal.i` v1 @kind this) @signature `Lkotlin/jvm/internal/i;.isSuspend:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b7014.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/i;.getReflected:()Lxb/e;` @kind virtual;
  #L3b701a.  v0:= temp @kind object;
  #L3b701c.  call temp:= `isSuspend`(v0) @signature `Lxb/e;.isSuspend:()Z` @kind interface;
  #L3b7022.  v0:= temp;
  #L3b7024.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.i` v2 @kind this) @signature `Lkotlin/jvm/internal/i;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b70b0.  call temp:= `compute`(v2) @signature `Lkotlin/jvm/internal/c;.compute:()Lxb/b;` @kind virtual;
  #L3b70b6.  v0:= temp @kind object;
  #L3b70b8.  if v0 == v2 then goto L3b70c6;
  #L3b70bc.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b70c2.  v0:= temp @kind object;
  #L3b70c4.  return v0 @kind object;
  #L3b70c6.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/c;.getName:()Ljava/lang/String;` @kind virtual;
  #L3b70cc.  v0:= temp @kind object;
  #L3b70ce.  v1:= "<init>" @kind object;
  #L3b70d2.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b70d8.  v0:= temp;
  #L3b70da.  if v0 == 0 then goto L3b70e4;
  #L3b70de.  v0:= "constructor (Kotlin reflection is not available)" @kind object;
  #L3b70e2.  goto L3b7118;
  #L3b70e4.  v0:= new `java.lang.StringBuilder`;
  #L3b70e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b70ee.  v1:= "function " @kind object;
  #L3b70f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b70f8.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/c;.getName:()Ljava/lang/String;` @kind virtual;
  #L3b70fe.  v1:= temp @kind object;
  #L3b7100.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b7106.  v1:= " (Kotlin reflection is not available)" @kind object;
  #L3b710a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b7110.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b7116.  v0:= temp @kind object;
  #L3b7118.  return v0 @kind object;
}
