record `ha.h` @kind class @AccessFlag PUBLIC {
}
procedure `java.lang.Object` `a`(`java.lang.Object` v4 @kind object) @signature `Lha/h;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L344430.  if v4 != 0 then goto L34443a;
  #L344434.  v4:= `@@org.json.JSONObject.NULL` @type ^`java.lang.Object` @kind object;
  #L344438.  return v4 @kind object;
  #L34443a.  v0:= instanceof @variable v4 @type ^`org.json.JSONArray` @kind boolean;
  #L34443e.  if v0 != 0 then goto L3445d0;
  #L344442.  v0:= instanceof @variable v4 @type ^`org.json.JSONObject` @kind boolean;
  #L344446.  if v0 == 0 then goto L34444e;
  #L34444a.  goto L3445d0;
  #L34444e.  v0:= `@@org.json.JSONObject.NULL` @type ^`java.lang.Object` @kind object;
  #L344452.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L344458.  v0:= temp;
  #L34445a.  if v0 == 0 then goto L344460;
  #L34445e.  return v4 @kind object;
  #L344460.  v0:= instanceof @variable v4 @type ^`java.util.Collection` @kind boolean;
  #L344464.  if v0 == 0 then goto L3444a4;
  #L344468.  v0:= new `org.json.JSONArray`;
  #L34446c.  call `<init>`(v0) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L344472.  v4:= (`java.util.Collection`) v4 @kind object;
  #L344476.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L34447c.  v4:= temp @kind object;
  #L34447e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L344484.  v1:= temp;
  #L344486.  if v1 == 0 then goto L3444a2;
  #L34448a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L344490.  v1:= temp @kind object;
  #L344492.  call temp:= `a`(v1) @signature `Lha/h;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L344498.  v1:= temp @kind object;
  #L34449a.  call temp:= `put`(v0, v1) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L3444a0.  goto L34447e;
  #L3444a2.  return v0 @kind object;
  #L3444a4.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3444aa.  v0:= temp @kind object;
  #L3444ac.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3444b2.  v0:= temp;
  #L3444b4.  if v0 == 0 then goto L3444ee;
  #L3444b8.  v0:= new `org.json.JSONArray`;
  #L3444bc.  call `<init>`(v0) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L3444c2.  call temp:= `getLength`(v4) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L3444c8.  v1:= temp;
  #L3444ca.  v2:= 0I;
  #L3444cc.  if v2 >= v1 then goto L3444ec;
  #L3444d0.  call temp:= `get`(v4, v2) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L3444d6.  v3:= temp @kind object;
  #L3444d8.  call temp:= `a`(v3) @signature `Lha/h;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3444de.  v3:= temp @kind object;
  #L3444e0.  call temp:= `put`(v0, v3) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L3444e6.  v2:= v2 + 1;
  #L3444ea.  goto L3444cc;
  #L3444ec.  return v0 @kind object;
  #L3444ee.  v0:= instanceof @variable v4 @type ^`java.util.Map` @kind boolean;
  #L3444f2.  if v0 == 0 then goto L344552;
  #L3444f6.  v0:= new `org.json.JSONObject`;
  #L3444fa.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L344500.  v4:= (`java.util.Map`) v4 @kind object;
  #L344504.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L34450a.  v4:= temp @kind object;
  #L34450c.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L344512.  v4:= temp @kind object;
  #L344514.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L34451a.  v1:= temp;
  #L34451c.  if v1 == 0 then goto L344550;
  #L344520.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L344526.  v1:= temp @kind object;
  #L344528.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L34452c.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L344532.  v2:= temp @kind object;
  #L344534.  v2:= (`java.lang.String`) v2 @kind object;
  #L344538.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L34453e.  v1:= temp @kind object;
  #L344540.  call temp:= `a`(v1) @signature `Lha/h;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L344546.  v1:= temp @kind object;
  #L344548.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L34454e.  goto L344514;
  #L344550.  return v0 @kind object;
  #L344552.  v0:= instanceof @variable v4 @type ^`java.lang.Boolean` @kind boolean;
  #L344556.  if v0 != 0 then goto L3445cc;
  #L34455a.  v0:= instanceof @variable v4 @type ^`java.lang.Byte` @kind boolean;
  #L34455e.  if v0 != 0 then goto L3445cc;
  #L344562.  v0:= instanceof @variable v4 @type ^`java.lang.Character` @kind boolean;
  #L344566.  if v0 != 0 then goto L3445cc;
  #L34456a.  v0:= instanceof @variable v4 @type ^`java.lang.Double` @kind boolean;
  #L34456e.  if v0 != 0 then goto L3445cc;
  #L344572.  v0:= instanceof @variable v4 @type ^`java.lang.Float` @kind boolean;
  #L344576.  if v0 != 0 then goto L3445cc;
  #L34457a.  v0:= instanceof @variable v4 @type ^`java.lang.Integer` @kind boolean;
  #L34457e.  if v0 != 0 then goto L3445cc;
  #L344582.  v0:= instanceof @variable v4 @type ^`java.lang.Long` @kind boolean;
  #L344586.  if v0 != 0 then goto L3445cc;
  #L34458a.  v0:= instanceof @variable v4 @type ^`java.lang.Short` @kind boolean;
  #L34458e.  if v0 != 0 then goto L3445cc;
  #L344592.  v0:= instanceof @variable v4 @type ^`java.lang.String` @kind boolean;
  #L344596.  if v0 == 0 then goto L34459c;
  #L34459a.  goto L3445cc;
  #L34459c.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3445a2.  v0:= temp @kind object;
  #L3445a4.  call temp:= `getPackage`(v0) @signature `Ljava/lang/Class;.getPackage:()Ljava/lang/Package;` @kind virtual;
  #L3445aa.  v0:= temp @kind object;
  #L3445ac.  call temp:= `getName`(v0) @signature `Ljava/lang/Package;.getName:()Ljava/lang/String;` @kind virtual;
  #L3445b2.  v0:= temp @kind object;
  #L3445b4.  v1:= "java." @kind object;
  #L3445b8.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3445be.  v0:= temp;
  #L3445c0.  if v0 == 0 then goto L3445ce;
  #L3445c4.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3445ca.  v4:= temp @kind object;
  #L3445cc.  return v4 @kind object;
  #L3445ce.  v4:= 0I;
  #L3445d0.  return v4 @kind object;
  catch `java.lang.Exception` @[L344460..L3445cc] goto L3445ce;
}
