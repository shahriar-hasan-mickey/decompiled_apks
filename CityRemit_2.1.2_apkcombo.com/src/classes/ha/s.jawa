record `ha.s` @kind class @AccessFlag PUBLIC_FINAL extends `ha.l` @kind interface {
  `ha.r` `ha.s.a` @AccessFlag PRIVATE_FINAL;
}
global `ha.s` `@@ha.s.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lha/s;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L345840.  v0:= new `ha.s`;
  #L345844.  v1:= `@@ha.r.a` @type ^`ha.r` @kind object;
  #L345848.  call `<init>`(v0, v1) @signature `Lha/s;.<init>:(Lha/r;)V` @kind direct;
  #L34584e.  `@@ha.s.b` @type ^`ha.s` := v0 @kind object;
  #L345852.  return @kind void;
}
procedure `void` `<init>`(`ha.s` v0 @kind this, `ha.r` v1 @kind object) @signature `Lha/s;.<init>:(Lha/r;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L345864.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34586a.  v0.`ha.s.a` @type ^`ha.r` := v1 @kind object;
  #L34586e.  return @kind void;
}
procedure `java.lang.String` `g`(`java.lang.Throwable` v2 @kind object) @signature `Lha/s;.g:(Ljava/lang/Throwable;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L345638.  v0:= new `java.io.StringWriter`;
  #L34563c.  call `<init>`(v0) @signature `Ljava/io/StringWriter;.<init>:()V` @kind direct;
  #L345642.  v1:= new `java.io.PrintWriter`;
  #L345646.  call `<init>`(v1, v0) @signature `Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L34564c.  call `printStackTrace`(v2, v1) @signature `Ljava/lang/Throwable;.printStackTrace:(Ljava/io/PrintWriter;)V` @kind virtual;
  #L345652.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L345658.  v2:= temp @kind object;
  #L34565a.  return v2 @kind object;
}
procedure `java.nio.ByteBuffer` `a`(`ha.s` v3 @kind this, `ha.j` v4 @kind object) @signature `Lha/s;.a:(Lha/j;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34578c.  v0:= new `ha.r$a`;
  #L345790.  call `<init>`(v0) @signature `Lha/r$a;.<init>:()V` @kind direct;
  #L345796.  v1:= v3.`ha.s.a` @type ^`ha.r` @kind object;
  #L34579a.  v2:= v4.`ha.j.a` @type ^`java.lang.String` @kind object;
  #L34579e.  call `p`(v1, v0, v2) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L3457a4.  v1:= v3.`ha.s.a` @type ^`ha.r` @kind object;
  #L3457a8.  v4:= v4.`ha.j.b` @type ^`java.lang.Object` @kind object;
  #L3457ac.  call `p`(v1, v0, v4) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L3457b2.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L3457b8.  v4:= temp;
  #L3457ba.  call temp:= `allocateDirect`(v4) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L3457c0.  v4:= temp @kind object;
  #L3457c2.  call temp:= `a`(v0) @signature `Lha/r$a;.a:()[B` @kind virtual;
  #L3457c8.  v1:= temp @kind object;
  #L3457ca.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L3457d0.  v0:= temp;
  #L3457d2.  v2:= 0I;
  #L3457d4.  call temp:= `put`(v4, v1, v2, v0) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3457da.  return v4 @kind object;
}
procedure `java.nio.ByteBuffer` `b`(`ha.s` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lha/s;.b:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3457ec.  v0:= new `ha.r$a`;
  #L3457f0.  call `<init>`(v0) @signature `Lha/r$a;.<init>:()V` @kind direct;
  #L3457f6.  v1:= 0I;
  #L3457f8.  call `write`(v0, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3457fe.  v2:= v3.`ha.s.a` @type ^`ha.r` @kind object;
  #L345802.  call `p`(v2, v0, v4) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L345808.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L34580e.  v4:= temp;
  #L345810.  call temp:= `allocateDirect`(v4) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L345816.  v4:= temp @kind object;
  #L345818.  call temp:= `a`(v0) @signature `Lha/r$a;.a:()[B` @kind virtual;
  #L34581e.  v2:= temp @kind object;
  #L345820.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L345826.  v0:= temp;
  #L345828.  call temp:= `put`(v4, v2, v1, v0) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L34582e.  return v4 @kind object;
}
procedure `java.nio.ByteBuffer` `c`(`ha.s` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lha/s;.c:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3456f8.  v0:= new `ha.r$a`;
  #L3456fc.  call `<init>`(v0) @signature `Lha/r$a;.<init>:()V` @kind direct;
  #L345702.  v1:= 1I;
  #L345704.  call `write`(v0, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L34570a.  v1:= v2.`ha.s.a` @type ^`ha.r` @kind object;
  #L34570e.  call `p`(v1, v0, v3) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L345714.  v3:= v2.`ha.s.a` @type ^`ha.r` @kind object;
  #L345718.  call `p`(v3, v0, v4) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L34571e.  v3:= instanceof @variable v5 @type ^`java.lang.Throwable` @kind boolean;
  #L345722.  if v3 == 0 then goto L34573e;
  #L345726.  v3:= v2.`ha.s.a` @type ^`ha.r` @kind object;
  #L34572a.  v5:= (`java.lang.Throwable`) v5 @kind object;
  #L34572e.  call temp:= `g`(v5) @signature `Lha/s;.g:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L345734.  v4:= temp @kind object;
  #L345736.  call `p`(v3, v0, v4) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L34573c.  goto L345748;
  #L34573e.  v3:= v2.`ha.s.a` @type ^`ha.r` @kind object;
  #L345742.  call `p`(v3, v0, v5) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L345748.  v3:= v2.`ha.s.a` @type ^`ha.r` @kind object;
  #L34574c.  call `p`(v3, v0, v6) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L345752.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L345758.  v3:= temp;
  #L34575a.  call temp:= `allocateDirect`(v3) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L345760.  v3:= temp @kind object;
  #L345762.  call temp:= `a`(v0) @signature `Lha/r$a;.a:()[B` @kind virtual;
  #L345768.  v4:= temp @kind object;
  #L34576a.  v5:= 0I;
  #L34576c.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L345772.  v6:= temp;
  #L345774.  call temp:= `put`(v3, v4, v5, v6) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L34577a.  return v3 @kind object;
}
procedure `java.nio.ByteBuffer` `d`(`ha.s` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lha/s;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L34566c.  v0:= new `ha.r$a`;
  #L345670.  call `<init>`(v0) @signature `Lha/r$a;.<init>:()V` @kind direct;
  #L345676.  v1:= 1I;
  #L345678.  call `write`(v0, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L34567e.  v1:= v2.`ha.s.a` @type ^`ha.r` @kind object;
  #L345682.  call `p`(v1, v0, v3) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L345688.  v3:= v2.`ha.s.a` @type ^`ha.r` @kind object;
  #L34568c.  call `p`(v3, v0, v4) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L345692.  v3:= instanceof @variable v5 @type ^`java.lang.Throwable` @kind boolean;
  #L345696.  if v3 == 0 then goto L3456b2;
  #L34569a.  v3:= v2.`ha.s.a` @type ^`ha.r` @kind object;
  #L34569e.  v5:= (`java.lang.Throwable`) v5 @kind object;
  #L3456a2.  call temp:= `g`(v5) @signature `Lha/s;.g:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L3456a8.  v4:= temp @kind object;
  #L3456aa.  call `p`(v3, v0, v4) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L3456b0.  goto L3456bc;
  #L3456b2.  v3:= v2.`ha.s.a` @type ^`ha.r` @kind object;
  #L3456b6.  call `p`(v3, v0, v5) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L3456bc.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L3456c2.  v3:= temp;
  #L3456c4.  call temp:= `allocateDirect`(v3) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L3456ca.  v3:= temp @kind object;
  #L3456cc.  call temp:= `a`(v0) @signature `Lha/r$a;.a:()[B` @kind virtual;
  #L3456d2.  v4:= temp @kind object;
  #L3456d4.  v5:= 0I;
  #L3456d6.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L3456dc.  v0:= temp;
  #L3456de.  call temp:= `put`(v3, v4, v5, v0) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3456e4.  return v3 @kind object;
}
procedure `ha.j` `e`(`ha.s` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lha/s;.e:(Ljava/nio/ByteBuffer;)Lha/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L345518.  call temp:= `nativeOrder`() @signature `Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;` @kind static;
  #L34551e.  v0:= temp @kind object;
  #L345520.  call temp:= `order`(v4, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L345526.  v0:= v3.`ha.s.a` @type ^`ha.r` @kind object;
  #L34552a.  call temp:= `f`(v0, v4) @signature `Lha/r;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L345530.  v0:= temp @kind object;
  #L345532.  v1:= v3.`ha.s.a` @type ^`ha.r` @kind object;
  #L345536.  call temp:= `f`(v1, v4) @signature `Lha/r;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L34553c.  v1:= temp @kind object;
  #L34553e.  v2:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L345542.  if v2 == 0 then goto L345562;
  #L345546.  call temp:= `hasRemaining`(v4) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L34554c.  v4:= temp;
  #L34554e.  if v4 != 0 then goto L345562;
  #L345552.  v4:= new `ha.j`;
  #L345556.  v0:= (`java.lang.String`) v0 @kind object;
  #L34555a.  call `<init>`(v4, v0, v1) @signature `Lha/j;.<init>:(Ljava/lang/String;Ljava/lang/Object;)V` @kind direct;
  #L345560.  return v4 @kind object;
  #L345562.  v4:= new `java.lang.IllegalArgumentException`;
  #L345566.  v0:= "Method call corrupted" @kind object;
  #L34556a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L345570.  throw v4;
}
procedure `java.lang.Object` `f`(`ha.s` v4 @kind this, `java.nio.ByteBuffer` v5 @kind object) @signature `Lha/s;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L345584.  call temp:= `nativeOrder`() @signature `Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;` @kind static;
  #L34558a.  v0:= temp @kind object;
  #L34558c.  call temp:= `order`(v5, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L345592.  call temp:= `get`(v5) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L345598.  v0:= temp;
  #L34559a.  if v0 == 0 then goto L3455a6;
  #L34559e.  v1:= 1I;
  #L3455a0.  if v0 != v1 then goto L345618;
  #L3455a4.  goto L3455c0;
  #L3455a6.  v0:= v4.`ha.s.a` @type ^`ha.r` @kind object;
  #L3455aa.  call temp:= `f`(v0, v5) @signature `Lha/r;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L3455b0.  v0:= temp @kind object;
  #L3455b2.  call temp:= `hasRemaining`(v5) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L3455b8.  v1:= temp;
  #L3455ba.  if v1 != 0 then goto L3455c0;
  #L3455be.  return v0 @kind object;
  #L3455c0.  v0:= v4.`ha.s.a` @type ^`ha.r` @kind object;
  #L3455c4.  call temp:= `f`(v0, v5) @signature `Lha/r;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L3455ca.  v0:= temp @kind object;
  #L3455cc.  v1:= v4.`ha.s.a` @type ^`ha.r` @kind object;
  #L3455d0.  call temp:= `f`(v1, v5) @signature `Lha/r;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L3455d6.  v1:= temp @kind object;
  #L3455d8.  v2:= v4.`ha.s.a` @type ^`ha.r` @kind object;
  #L3455dc.  call temp:= `f`(v2, v5) @signature `Lha/r;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L3455e2.  v2:= temp @kind object;
  #L3455e4.  v3:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L3455e8.  if v3 == 0 then goto L345618;
  #L3455ec.  if v1 == 0 then goto L3455f8;
  #L3455f0.  v3:= instanceof @variable v1 @type ^`java.lang.String` @kind boolean;
  #L3455f4.  if v3 == 0 then goto L345618;
  #L3455f8.  call temp:= `hasRemaining`(v5) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L3455fe.  v5:= temp;
  #L345600.  if v5 != 0 then goto L345618;
  #L345604.  v5:= new `ha.e`;
  #L345608.  v0:= (`java.lang.String`) v0 @kind object;
  #L34560c.  v1:= (`java.lang.String`) v1 @kind object;
  #L345610.  call `<init>`(v5, v0, v1, v2) @signature `Lha/e;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind direct;
  #L345616.  throw v5;
  #L345618.  v5:= new `java.lang.IllegalArgumentException`;
  #L34561c.  v0:= "Envelope corrupted" @kind object;
  #L345620.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L345626.  throw v5;
}
