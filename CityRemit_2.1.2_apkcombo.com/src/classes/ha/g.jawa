record `ha.g` @kind class @AccessFlag PUBLIC_FINAL extends `ha.l` @kind interface {
}
global `ha.g` `@@ha.g.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lha/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3443f8.  v0:= new `ha.g`;
  #L3443fc.  call `<init>`(v0) @signature `Lha/g;.<init>:()V` @kind direct;
  #L344402.  `@@ha.g.a` @type ^`ha.g` := v0 @kind object;
  #L344406.  return @kind void;
}
procedure `void` `<init>`(`ha.g` v0 @kind this) @signature `Lha/g;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L344418.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34441e.  return @kind void;
}
procedure `java.nio.ByteBuffer` `a`(`ha.g` v3 @kind this, `ha.j` v4 @kind object) @signature `Lha/g;.a:(Lha/j;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L344350.  v0:= new `org.json.JSONObject`;
  #L344354.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L34435a.  v1:= "method" @kind object;
  #L34435e.  v2:= v4.`ha.j.a` @type ^`java.lang.String` @kind object;
  #L344362.  call temp:= `put`(v0, v1, v2) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L344368.  v1:= "args" @kind object;
  #L34436c.  v4:= v4.`ha.j.b` @type ^`java.lang.Object` @kind object;
  #L344370.  call temp:= `a`(v4) @signature `Lha/h;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L344376.  v4:= temp @kind object;
  #L344378.  call temp:= `put`(v0, v1, v4) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L34437e.  v4:= `@@ha.f.a` @type ^`ha.f` @kind object;
  #L344382.  call temp:= `a`(v4, v0) @signature `Lha/f;.a:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L344388.  v4:= temp @kind object;
  #L34438a.  return v4 @kind object;
  #L34438c.  v4:= Exception @type ^`org.json.JSONException` @kind object;
  #L34438e.  v0:= new `java.lang.IllegalArgumentException`;
  #L344392.  v1:= "Invalid JSON" @kind object;
  #L344396.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L34439c.  throw v0;
  catch `org.json.JSONException` @[L344350..L34438a] goto L34438c;
}
procedure `java.nio.ByteBuffer` `b`(`ha.g` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lha/g;.b:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3443c0.  v0:= `@@ha.f.a` @type ^`ha.f` @kind object;
  #L3443c4.  v1:= new `org.json.JSONArray`;
  #L3443c8.  call `<init>`(v1) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L3443ce.  call temp:= `a`(v3) @signature `Lha/h;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3443d4.  v3:= temp @kind object;
  #L3443d6.  call temp:= `put`(v1, v3) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L3443dc.  v3:= temp @kind object;
  #L3443de.  call temp:= `a`(v0, v3) @signature `Lha/f;.a:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3443e4.  v3:= temp @kind object;
  #L3443e6.  return v3 @kind object;
}
procedure `java.nio.ByteBuffer` `c`(`ha.g` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lha/g;.c:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3442f0.  v0:= `@@ha.f.a` @type ^`ha.f` @kind object;
  #L3442f4.  v1:= new `org.json.JSONArray`;
  #L3442f8.  call `<init>`(v1) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L3442fe.  call temp:= `put`(v1, v3) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L344304.  v3:= temp @kind object;
  #L344306.  call temp:= `a`(v4) @signature `Lha/h;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L34430c.  v4:= temp @kind object;
  #L34430e.  call temp:= `put`(v3, v4) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L344314.  v3:= temp @kind object;
  #L344316.  call temp:= `a`(v5) @signature `Lha/h;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L34431c.  v4:= temp @kind object;
  #L34431e.  call temp:= `put`(v3, v4) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L344324.  v3:= temp @kind object;
  #L344326.  call temp:= `a`(v6) @signature `Lha/h;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L34432c.  v4:= temp @kind object;
  #L34432e.  call temp:= `put`(v3, v4) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L344334.  v3:= temp @kind object;
  #L344336.  call temp:= `a`(v0, v3) @signature `Lha/f;.a:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L34433c.  v3:= temp @kind object;
  #L34433e.  return v3 @kind object;
}
procedure `java.nio.ByteBuffer` `d`(`ha.g` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lha/g;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3442a0.  v0:= `@@ha.f.a` @type ^`ha.f` @kind object;
  #L3442a4.  v1:= new `org.json.JSONArray`;
  #L3442a8.  call `<init>`(v1) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L3442ae.  call temp:= `put`(v1, v3) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L3442b4.  v3:= temp @kind object;
  #L3442b6.  call temp:= `a`(v4) @signature `Lha/h;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3442bc.  v4:= temp @kind object;
  #L3442be.  call temp:= `put`(v3, v4) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L3442c4.  v3:= temp @kind object;
  #L3442c6.  call temp:= `a`(v5) @signature `Lha/h;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3442cc.  v4:= temp @kind object;
  #L3442ce.  call temp:= `put`(v3, v4) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L3442d4.  v3:= temp @kind object;
  #L3442d6.  call temp:= `a`(v0, v3) @signature `Lha/f;.a:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3442dc.  v3:= temp @kind object;
  #L3442de.  return v3 @kind object;
}
procedure `ha.j` `e`(`ha.g` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lha/g;.e:(Ljava/nio/ByteBuffer;)Lha/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3440d4.  v0:= `@@ha.f.a` @type ^`ha.f` @kind object;
  #L3440d8.  call temp:= `b`(v0, v4) @signature `Lha/f;.b:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L3440de.  v4:= temp @kind object;
  #L3440e0.  v0:= instanceof @variable v4 @type ^`org.json.JSONObject` @kind boolean;
  #L3440e4.  if v0 == 0 then goto L344126;
  #L3440e8.  v0:= v4 @kind object;
  #L3440ea.  v0:= (`org.json.JSONObject`) v0 @kind object;
  #L3440ee.  v1:= "method" @kind object;
  #L3440f2.  call temp:= `get`(v0, v1) @signature `Lorg/json/JSONObject;.get:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L3440f8.  v1:= temp @kind object;
  #L3440fa.  v2:= "args" @kind object;
  #L3440fe.  call temp:= `opt`(v0, v2) @signature `Lorg/json/JSONObject;.opt:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L344104.  v0:= temp @kind object;
  #L344106.  call temp:= `g`(v3, v0) @signature `Lha/g;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L34410c.  v0:= temp @kind object;
  #L34410e.  v2:= instanceof @variable v1 @type ^`java.lang.String` @kind boolean;
  #L344112.  if v2 == 0 then goto L344126;
  #L344116.  v4:= new `ha.j`;
  #L34411a.  v1:= (`java.lang.String`) v1 @kind object;
  #L34411e.  call `<init>`(v4, v1, v0) @signature `Lha/j;.<init>:(Ljava/lang/String;Ljava/lang/Object;)V` @kind direct;
  #L344124.  return v4 @kind object;
  #L344126.  v0:= new `java.lang.IllegalArgumentException`;
  #L34412a.  v1:= new `java.lang.StringBuilder`;
  #L34412e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L344134.  v2:= "Invalid method call: " @kind object;
  #L344138.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34413e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L344144.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34414a.  v4:= temp @kind object;
  #L34414c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L344152.  throw v0;
  #L344154.  v4:= Exception @type ^`org.json.JSONException` @kind object;
  #L344156.  v0:= new `java.lang.IllegalArgumentException`;
  #L34415a.  v1:= "Invalid JSON" @kind object;
  #L34415e.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L344164.  throw v0;
  catch `org.json.JSONException` @[L3440d4..L344154] goto L344154;
}
procedure `java.lang.Object` `f`(`ha.g` v5 @kind this, `java.nio.ByteBuffer` v6 @kind object) @signature `Lha/g;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L344188.  v0:= `@@ha.f.a` @type ^`ha.f` @kind object;
  #L34418c.  call temp:= `b`(v0, v6) @signature `Lha/f;.b:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L344192.  v6:= temp @kind object;
  #L344194.  v0:= instanceof @variable v6 @type ^`org.json.JSONArray` @kind boolean;
  #L344198.  if v0 == 0 then goto L344224;
  #L34419c.  v0:= v6 @kind object;
  #L34419e.  v0:= (`org.json.JSONArray`) v0 @kind object;
  #L3441a2.  call temp:= `length`(v0) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L3441a8.  v1:= temp;
  #L3441aa.  v2:= 0I;
  #L3441ac.  v3:= 1I;
  #L3441ae.  if v1 != v3 then goto L3441c4;
  #L3441b2.  call temp:= `opt`(v0, v2) @signature `Lorg/json/JSONArray;.opt:(I)Ljava/lang/Object;` @kind virtual;
  #L3441b8.  v6:= temp @kind object;
  #L3441ba.  call temp:= `g`(v5, v6) @signature `Lha/g;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3441c0.  v6:= temp @kind object;
  #L3441c2.  return v6 @kind object;
  #L3441c4.  call temp:= `length`(v0) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L3441ca.  v1:= temp;
  #L3441cc.  v4:= 3I;
  #L3441ce.  if v1 != v4 then goto L344224;
  #L3441d2.  call temp:= `get`(v0, v2) @signature `Lorg/json/JSONArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3441d8.  v1:= temp @kind object;
  #L3441da.  call temp:= `opt`(v0, v3) @signature `Lorg/json/JSONArray;.opt:(I)Ljava/lang/Object;` @kind virtual;
  #L3441e0.  v2:= temp @kind object;
  #L3441e2.  call temp:= `g`(v5, v2) @signature `Lha/g;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3441e8.  v2:= temp @kind object;
  #L3441ea.  v3:= 2I;
  #L3441ec.  call temp:= `opt`(v0, v3) @signature `Lorg/json/JSONArray;.opt:(I)Ljava/lang/Object;` @kind virtual;
  #L3441f2.  v0:= temp @kind object;
  #L3441f4.  call temp:= `g`(v5, v0) @signature `Lha/g;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3441fa.  v0:= temp @kind object;
  #L3441fc.  v3:= instanceof @variable v1 @type ^`java.lang.String` @kind boolean;
  #L344200.  if v3 == 0 then goto L344224;
  #L344204.  if v2 == 0 then goto L344210;
  #L344208.  v3:= instanceof @variable v2 @type ^`java.lang.String` @kind boolean;
  #L34420c.  if v3 == 0 then goto L344224;
  #L344210.  v6:= new `ha.e`;
  #L344214.  v1:= (`java.lang.String`) v1 @kind object;
  #L344218.  v2:= (`java.lang.String`) v2 @kind object;
  #L34421c.  call `<init>`(v6, v1, v2, v0) @signature `Lha/e;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind direct;
  #L344222.  throw v6;
  #L344224.  v0:= new `java.lang.IllegalArgumentException`;
  #L344228.  v1:= new `java.lang.StringBuilder`;
  #L34422c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L344232.  v2:= "Invalid envelope: " @kind object;
  #L344236.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34423c.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L344242.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L344248.  v6:= temp @kind object;
  #L34424a.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L344250.  throw v0;
  #L344252.  v6:= Exception @type ^`org.json.JSONException` @kind object;
  #L344254.  v0:= new `java.lang.IllegalArgumentException`;
  #L344258.  v1:= "Invalid JSON" @kind object;
  #L34425c.  call `<init>`(v0, v1, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L344262.  throw v0;
  catch `org.json.JSONException` @[L344188..L344252] goto L344252;
}
procedure `java.lang.Object` `g`(`ha.g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lha/g;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L344284.  v0:= `@@org.json.JSONObject.NULL` @type ^`java.lang.Object` @kind object;
  #L344288.  if v2 != v0 then goto L34428e;
  #L34428c.  v2:= 0I;
  #L34428e.  return v2 @kind object;
}
