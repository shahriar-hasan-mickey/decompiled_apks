record `ha.r` @kind class @AccessFlag PUBLIC extends `ha.i` @kind interface {
}
global `ha.r` `@@ha.r.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@ha.r.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@ha.r.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lha/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L344e64.  v0:= new `ha.r`;
  #L344e68.  call `<init>`(v0) @signature `Lha/r;.<init>:()V` @kind direct;
  #L344e6e.  `@@ha.r.a` @type ^`ha.r` := v0 @kind object;
  #L344e72.  call temp:= `nativeOrder`() @signature `Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;` @kind static;
  #L344e78.  v0:= temp @kind object;
  #L344e7a.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L344e7e.  if v0 != v1 then goto L344e86;
  #L344e82.  v0:= 1I;
  #L344e84.  goto L344e88;
  #L344e86.  v0:= 0I;
  #L344e88.  `@@ha.r.b` @type ^`boolean` := v0 @kind boolean;
  #L344e8c.  v0:= "UTF8" @kind object;
  #L344e90.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L344e96.  v0:= temp @kind object;
  #L344e98.  `@@ha.r.c` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L344e9c.  return @kind void;
}
procedure `void` `<init>`(`ha.r` v0 @kind this) @signature `Lha/r;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L344eb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L344eb6.  return @kind void;
}
procedure `void` `c`(`java.nio.ByteBuffer` v2 @kind object, `int` v3 ) @signature `Lha/r;.c:(Ljava/nio/ByteBuffer;I)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L344ec8.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L344ece.  v0:= temp;
  #L344ed0.  v0:= v0 %% v3 @kind int;
  #L344ed2.  if v0 == 0 then goto L344ee8;
  #L344ed6.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L344edc.  v1:= temp;
  #L344ede.  v1:= v1 + v3 @kind int;
  #L344ee0.  v1:= v1 - v0 @kind int;
  #L344ee2.  call temp:= `position`(v2, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L344ee8.  return @kind void;
}
procedure `byte`[] `d`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lha/r;.d:(Ljava/nio/ByteBuffer;)[B` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;

  #L344aec.  call temp:= `e`(v1) @signature `Lha/r;.e:(Ljava/nio/ByteBuffer;)I` @kind static;
  #L344af2.  v0:= temp;
  #L344af4.  v0:= new `byte`[v0];
  #L344af8.  call temp:= `get`(v1, v0) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L344afe.  return v0 @kind object;
}
procedure `int` `e`(`java.nio.ByteBuffer` v2 @kind object) @signature `Lha/r;.e:(Ljava/nio/ByteBuffer;)I` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L344b10.  call temp:= `hasRemaining`(v2) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L344b16.  v0:= temp;
  #L344b18.  if v0 == 0 then goto L344b4a;
  #L344b1c.  call temp:= `get`(v2) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L344b22.  v0:= temp;
  #L344b24.  v0:= v0 ^& 255;
  #L344b28.  v1:= 254I;
  #L344b2c.  if v0 >= v1 then goto L344b32;
  #L344b30.  return v0;
  #L344b32.  if v0 != v1 then goto L344b40;
  #L344b36.  call temp:= `getChar`(v2) @signature `Ljava/nio/ByteBuffer;.getChar:()C` @kind virtual;
  #L344b3c.  v2:= temp;
  #L344b3e.  return v2;
  #L344b40.  call temp:= `getInt`(v2) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L344b46.  v2:= temp;
  #L344b48.  return v2;
  #L344b4a.  v2:= new `java.lang.IllegalArgumentException`;
  #L344b4e.  v0:= "Message corrupted" @kind object;
  #L344b52.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L344b58.  throw v2;
}
procedure `void` `h`(`java.io.ByteArrayOutputStream` v4 @kind object, `int` v5 ) @signature `Lha/r;.h:(Ljava/io/ByteArrayOutputStream;I)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L344efc.  call temp:= `size`(v4) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L344f02.  v0:= temp;
  #L344f04.  v0:= v0 %% v5 @kind int;
  #L344f06.  if v0 == 0 then goto L344f22;
  #L344f0a.  v1:= 0I;
  #L344f0c.  v2:= 0I;
  #L344f0e.  v3:= v5 - v0 @kind int;
  #L344f12.  if v2 >= v3 then goto L344f22;
  #L344f16.  call `write`(v4, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L344f1c.  v2:= v2 + 1;
  #L344f20.  goto L344f0e;
  #L344f22.  return @kind void;
}
procedure `void` `i`(`java.io.ByteArrayOutputStream` v2 @kind object, `byte`[] v3 @kind object) @signature `Lha/r;.i:(Ljava/io/ByteArrayOutputStream;[B)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L344f34.  v0:= length @variable v3;
  #L344f36.  call `o`(v2, v0) @signature `Lha/r;.o:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L344f3c.  v0:= length @variable v3;
  #L344f3e.  v1:= 0I;
  #L344f40.  call `write`(v2, v3, v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:([BII)V` @kind virtual;
  #L344f46.  return @kind void;
}
procedure `void` `j`(`java.io.ByteArrayOutputStream` v1 @kind object, `int` v2 ) @signature `Lha/r;.j:(Ljava/io/ByteArrayOutputStream;I)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;

  #L344f58.  v0:= `@@ha.r.b` @type ^`boolean` @kind boolean;
  #L344f5c.  if v0 == 0 then goto L344f6c;
  #L344f60.  call `write`(v1, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L344f66.  v2:= v2 ^>> 8;
  #L344f6a.  goto L344f76;
  #L344f6c.  v0:= v2 ^>> 8;
  #L344f70.  call `write`(v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L344f76.  call `write`(v1, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L344f7c.  return @kind void;
}
procedure `void` `k`(`java.io.ByteArrayOutputStream` v0 @kind object, `double` v1 ) @signature `Lha/r;.k:(Ljava/io/ByteArrayOutputStream;D)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;

  #L344f90.  call temp:= `doubleToLongBits`(v1) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L344f96.  v1:= temp @kind wide;
  #L344f98.  call `n`(v0, v1) @signature `Lha/r;.n:(Ljava/io/ByteArrayOutputStream;J)V` @kind static;
  #L344f9e.  return @kind void;
}
procedure `void` `l`(`java.io.ByteArrayOutputStream` v0 @kind object, `float` v1 ) @signature `Lha/r;.l:(Ljava/io/ByteArrayOutputStream;F)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;

  #L344fb0.  call temp:= `floatToIntBits`(v1) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L344fb6.  v1:= temp;
  #L344fb8.  call `m`(v0, v1) @signature `Lha/r;.m:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L344fbe.  return @kind void;
}
procedure `void` `m`(`java.io.ByteArrayOutputStream` v1 @kind object, `int` v2 ) @signature `Lha/r;.m:(Ljava/io/ByteArrayOutputStream;I)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;

  #L344fd0.  v0:= `@@ha.r.b` @type ^`boolean` @kind boolean;
  #L344fd4.  if v0 == 0 then goto L344ff8;
  #L344fd8.  call `write`(v1, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L344fde.  v0:= v2 ^>> 8;
  #L344fe2.  call `write`(v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L344fe8.  v0:= v2 ^>> 16;
  #L344fec.  call `write`(v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L344ff2.  v2:= v2 ^>> 24;
  #L344ff6.  goto L345016;
  #L344ff8.  v0:= v2 ^>> 24;
  #L344ffc.  call `write`(v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345002.  v0:= v2 ^>> 16;
  #L345006.  call `write`(v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L34500c.  v0:= v2 ^>> 8;
  #L345010.  call `write`(v1, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345016.  call `write`(v1, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L34501c.  return @kind void;
}
procedure `void` `n`(`java.io.ByteArrayOutputStream` v9 @kind object, `long` v10 ) @signature `Lha/r;.n:(Ljava/io/ByteArrayOutputStream;J)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L345030.  v0:= `@@ha.r.b` @type ^`boolean` @kind boolean;
  #L345034.  v1:= 8I;
  #L345038.  v2:= 16I;
  #L34503c.  v3:= 24I;
  #L345040.  v4:= 32I;
  #L345044.  v5:= 40I;
  #L345048.  v6:= 48I;
  #L34504c.  v7:= 56I;
  #L345050.  if v0 == 0 then goto L3450b6;
  #L345054.  v0:= (`int`) v10 @kind l2i;
  #L345056.  v0:= (`byte`) v0 @kind i2b;
  #L345058.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L34505e.  v0:= v10 ^>> v1 @kind long;
  #L345062.  v1:= (`int`) v0 @kind l2i;
  #L345064.  v0:= (`byte`) v1 @kind i2b;
  #L345066.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L34506c.  v0:= v10 ^>> v2 @kind long;
  #L345070.  v1:= (`int`) v0 @kind l2i;
  #L345072.  v0:= (`byte`) v1 @kind i2b;
  #L345074.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L34507a.  v0:= v10 ^>> v3 @kind long;
  #L34507e.  v1:= (`int`) v0 @kind l2i;
  #L345080.  v0:= (`byte`) v1 @kind i2b;
  #L345082.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345088.  v0:= v10 ^>> v4 @kind long;
  #L34508c.  v1:= (`int`) v0 @kind l2i;
  #L34508e.  v0:= (`byte`) v1 @kind i2b;
  #L345090.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345096.  v0:= v10 ^>> v5 @kind long;
  #L34509a.  v1:= (`int`) v0 @kind l2i;
  #L34509c.  v0:= (`byte`) v1 @kind i2b;
  #L34509e.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3450a4.  v0:= v10 ^>> v6 @kind long;
  #L3450a8.  v1:= (`int`) v0 @kind l2i;
  #L3450aa.  v0:= (`byte`) v1 @kind i2b;
  #L3450ac.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3450b2.  v10:= v10 ^>> v7 @kind long;
  #L3450b4.  goto L345118;
  #L3450b6.  v7:= v10 ^>> v7 @kind long;
  #L3450ba.  v0:= (`int`) v7 @kind l2i;
  #L3450bc.  v0:= (`byte`) v0 @kind i2b;
  #L3450be.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3450c4.  v6:= v10 ^>> v6 @kind long;
  #L3450c8.  v0:= (`int`) v6 @kind l2i;
  #L3450ca.  v0:= (`byte`) v0 @kind i2b;
  #L3450cc.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3450d2.  v5:= v10 ^>> v5 @kind long;
  #L3450d6.  v0:= (`int`) v5 @kind l2i;
  #L3450d8.  v0:= (`byte`) v0 @kind i2b;
  #L3450da.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3450e0.  v4:= v10 ^>> v4 @kind long;
  #L3450e4.  v0:= (`int`) v4 @kind l2i;
  #L3450e6.  v0:= (`byte`) v0 @kind i2b;
  #L3450e8.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3450ee.  v3:= v10 ^>> v3 @kind long;
  #L3450f2.  v0:= (`int`) v3 @kind l2i;
  #L3450f4.  v0:= (`byte`) v0 @kind i2b;
  #L3450f6.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3450fc.  v2:= v10 ^>> v2 @kind long;
  #L345100.  v0:= (`int`) v2 @kind l2i;
  #L345102.  v0:= (`byte`) v0 @kind i2b;
  #L345104.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L34510a.  v0:= v10 ^>> v1 @kind long;
  #L34510e.  v1:= (`int`) v0 @kind l2i;
  #L345110.  v0:= (`byte`) v1 @kind i2b;
  #L345112.  call `write`(v9, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345118.  v11:= (`int`) v10 @kind l2i;
  #L34511a.  v10:= (`byte`) v11 @kind i2b;
  #L34511c.  call `write`(v9, v10) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345122.  return @kind void;
}
procedure `void` `o`(`java.io.ByteArrayOutputStream` v2 @kind object, `int` v3 ) @signature `Lha/r;.o:(Ljava/io/ByteArrayOutputStream;I)V` @AccessFlag PROTECTED_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L345134.  v0:= 254I;
  #L345138.  if v3 >= v0 then goto L345144;
  #L34513c.  call `write`(v2, v3) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345142.  goto L34516c;
  #L345144.  v1:= 65535I;
  #L34514a.  if v3 > v1 then goto L34515c;
  #L34514e.  call `write`(v2, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345154.  call `j`(v2, v3) @signature `Lha/r;.j:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L34515a.  goto L34516c;
  #L34515c.  v0:= 255I;
  #L345160.  call `write`(v2, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345166.  call `m`(v2, v3) @signature `Lha/r;.m:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L34516c.  return @kind void;
}
procedure `java.nio.ByteBuffer` `a`(`ha.r` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lha/r;.a:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L344e10.  if v4 != 0 then goto L344e18;
  #L344e14.  v4:= 0I;
  #L344e16.  return v4 @kind object;
  #L344e18.  v0:= new `ha.r$a`;
  #L344e1c.  call `<init>`(v0) @signature `Lha/r$a;.<init>:()V` @kind direct;
  #L344e22.  call `p`(v3, v0, v4) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L344e28.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L344e2e.  v4:= temp;
  #L344e30.  call temp:= `allocateDirect`(v4) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L344e36.  v4:= temp @kind object;
  #L344e38.  call temp:= `a`(v0) @signature `Lha/r$a;.a:()[B` @kind virtual;
  #L344e3e.  v1:= temp @kind object;
  #L344e40.  v2:= 0I;
  #L344e42.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L344e48.  v0:= temp;
  #L344e4a.  call temp:= `put`(v4, v1, v2, v0) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L344e50.  return v4 @kind object;
}
procedure `java.lang.Object` `b`(`ha.r` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lha/r;.b:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L344b6c.  if v2 != 0 then goto L344b74;
  #L344b70.  v2:= 0I;
  #L344b72.  return v2 @kind object;
  #L344b74.  call temp:= `nativeOrder`() @signature `Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;` @kind static;
  #L344b7a.  v0:= temp @kind object;
  #L344b7c.  call temp:= `order`(v2, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L344b82.  call temp:= `f`(v1, v2) @signature `Lha/r;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L344b88.  v0:= temp @kind object;
  #L344b8a.  call temp:= `hasRemaining`(v2) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L344b90.  v2:= temp;
  #L344b92.  if v2 != 0 then goto L344b98;
  #L344b96.  return v0 @kind object;
  #L344b98.  v2:= new `java.lang.IllegalArgumentException`;
  #L344b9c.  v0:= "Message corrupted" @kind object;
  #L344ba0.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L344ba6.  throw v2;
}
procedure `java.lang.Object` `f`(`ha.r` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lha/r;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L344bb8.  call temp:= `hasRemaining`(v2) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L344bbe.  v0:= temp;
  #L344bc0.  if v0 == 0 then goto L344bd6;
  #L344bc4.  call temp:= `get`(v2) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L344bca.  v0:= temp;
  #L344bcc.  call temp:= `g`(v1, v0, v2) @signature `Lha/r;.g:(BLjava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L344bd2.  v2:= temp @kind object;
  #L344bd4.  return v2 @kind object;
  #L344bd6.  v2:= new `java.lang.IllegalArgumentException`;
  #L344bda.  v0:= "Message corrupted" @kind object;
  #L344bde.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L344be4.  throw v2;
}
procedure `java.lang.Object` `g`(`ha.r` v4 @kind this, `byte` v5 , `java.nio.ByteBuffer` v6 @kind object) @signature `Lha/r;.g:(BLjava/nio/ByteBuffer;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L344bf8.  v0:= 0I;
  #L344bfa.  v1:= 4I;
  #L344bfc.  v2:= 8I;
  #L344c00.  goto L344dbc;
  #L344c06.  v5:= new `java.lang.IllegalArgumentException`;
  #L344c0a.  v6:= "Message corrupted" @kind object;
  #L344c0e.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L344c14.  throw v5;
  #L344c16.  call temp:= `e`(v6) @signature `Lha/r;.e:(Ljava/nio/ByteBuffer;)I` @kind static;
  #L344c1c.  v5:= temp;
  #L344c1e.  v0:= new `float`[v5];
  #L344c22.  call `c`(v6, v1) @signature `Lha/r;.c:(Ljava/nio/ByteBuffer;I)V` @kind static;
  #L344c28.  call temp:= `asFloatBuffer`(v6) @signature `Ljava/nio/ByteBuffer;.asFloatBuffer:()Ljava/nio/FloatBuffer;` @kind virtual;
  #L344c2e.  v2:= temp @kind object;
  #L344c30.  call temp:= `get`(v2, v0) @signature `Ljava/nio/FloatBuffer;.get:([F)Ljava/nio/FloatBuffer;` @kind virtual;
  #L344c36.  goto L344d12;
  #L344c38.  call temp:= `e`(v6) @signature `Lha/r;.e:(Ljava/nio/ByteBuffer;)I` @kind static;
  #L344c3e.  v5:= temp;
  #L344c40.  v1:= new `java.util.HashMap`;
  #L344c44.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L344c4a.  if v0 >= v5 then goto L344c94;
  #L344c4e.  call temp:= `f`(v4, v6) @signature `Lha/r;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L344c54.  v2:= temp @kind object;
  #L344c56.  call temp:= `f`(v4, v6) @signature `Lha/r;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L344c5c.  v3:= temp @kind object;
  #L344c5e.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L344c64.  v0:= v0 + 1;
  #L344c68.  goto L344c4a;
  #L344c6a.  call temp:= `e`(v6) @signature `Lha/r;.e:(Ljava/nio/ByteBuffer;)I` @kind static;
  #L344c70.  v5:= temp;
  #L344c72.  v1:= new `java.util.ArrayList`;
  #L344c76.  call `<init>`(v1, v5) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L344c7c.  if v0 >= v5 then goto L344c94;
  #L344c80.  call temp:= `f`(v4, v6) @signature `Lha/r;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L344c86.  v2:= temp @kind object;
  #L344c88.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L344c8e.  v0:= v0 + 1;
  #L344c92.  goto L344c7c;
  #L344c94.  v0:= v1 @kind object;
  #L344c96.  goto L344dba;
  #L344c9a.  call temp:= `e`(v6) @signature `Lha/r;.e:(Ljava/nio/ByteBuffer;)I` @kind static;
  #L344ca0.  v5:= temp;
  #L344ca2.  v0:= new `double`[v5];
  #L344ca6.  call `c`(v6, v2) @signature `Lha/r;.c:(Ljava/nio/ByteBuffer;I)V` @kind static;
  #L344cac.  call temp:= `asDoubleBuffer`(v6) @signature `Ljava/nio/ByteBuffer;.asDoubleBuffer:()Ljava/nio/DoubleBuffer;` @kind virtual;
  #L344cb2.  v1:= temp @kind object;
  #L344cb4.  call temp:= `get`(v1, v0) @signature `Ljava/nio/DoubleBuffer;.get:([D)Ljava/nio/DoubleBuffer;` @kind virtual;
  #L344cba.  goto L344cdc;
  #L344cbc.  call temp:= `e`(v6) @signature `Lha/r;.e:(Ljava/nio/ByteBuffer;)I` @kind static;
  #L344cc2.  v5:= temp;
  #L344cc4.  v0:= new `long`[v5];
  #L344cc8.  call `c`(v6, v2) @signature `Lha/r;.c:(Ljava/nio/ByteBuffer;I)V` @kind static;
  #L344cce.  call temp:= `asLongBuffer`(v6) @signature `Ljava/nio/ByteBuffer;.asLongBuffer:()Ljava/nio/LongBuffer;` @kind virtual;
  #L344cd4.  v1:= temp @kind object;
  #L344cd6.  call temp:= `get`(v1, v0) @signature `Ljava/nio/LongBuffer;.get:([J)Ljava/nio/LongBuffer;` @kind virtual;
  #L344cdc.  call temp:= `position`(v6) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L344ce2.  v1:= temp;
  #L344ce4.  v5:= v5 * 8;
  #L344ce8.  v1:= v1 + v5 @kind int;
  #L344cea.  call temp:= `position`(v6, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L344cf0.  goto L344dba;
  #L344cf2.  call temp:= `e`(v6) @signature `Lha/r;.e:(Ljava/nio/ByteBuffer;)I` @kind static;
  #L344cf8.  v5:= temp;
  #L344cfa.  v0:= new `int`[v5];
  #L344cfe.  call `c`(v6, v1) @signature `Lha/r;.c:(Ljava/nio/ByteBuffer;I)V` @kind static;
  #L344d04.  call temp:= `asIntBuffer`(v6) @signature `Ljava/nio/ByteBuffer;.asIntBuffer:()Ljava/nio/IntBuffer;` @kind virtual;
  #L344d0a.  v2:= temp @kind object;
  #L344d0c.  call temp:= `get`(v2, v0) @signature `Ljava/nio/IntBuffer;.get:([I)Ljava/nio/IntBuffer;` @kind virtual;
  #L344d12.  call temp:= `position`(v6) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L344d18.  v2:= temp;
  #L344d1a.  v5:= v5 * 4;
  #L344d1e.  v2:= v2 + v5 @kind int;
  #L344d20.  call temp:= `position`(v6, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L344d26.  goto L344dba;
  #L344d28.  call temp:= `d`(v6) @signature `Lha/r;.d:(Ljava/nio/ByteBuffer;)[B` @kind static;
  #L344d2e.  v0:= temp @kind object;
  #L344d30.  goto L344dba;
  #L344d32.  call temp:= `d`(v6) @signature `Lha/r;.d:(Ljava/nio/ByteBuffer;)[B` @kind static;
  #L344d38.  v5:= temp @kind object;
  #L344d3a.  v0:= new `java.lang.String`;
  #L344d3e.  v6:= `@@ha.r.c` @type ^`java.nio.charset.Charset` @kind object;
  #L344d42.  call `<init>`(v0, v5, v6) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L344d48.  goto L344dba;
  #L344d4a.  call `c`(v6, v2) @signature `Lha/r;.c:(Ljava/nio/ByteBuffer;I)V` @kind static;
  #L344d50.  call temp:= `getDouble`(v6) @signature `Ljava/nio/ByteBuffer;.getDouble:()D` @kind virtual;
  #L344d56.  v5:= temp @kind wide;
  #L344d58.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L344d5e.  v0:= temp @kind object;
  #L344d60.  goto L344dba;
  #L344d62.  call temp:= `d`(v6) @signature `Lha/r;.d:(Ljava/nio/ByteBuffer;)[B` @kind static;
  #L344d68.  v5:= temp @kind object;
  #L344d6a.  v0:= new `java.math.BigInteger`;
  #L344d6e.  v6:= new `java.lang.String`;
  #L344d72.  v1:= `@@ha.r.c` @type ^`java.nio.charset.Charset` @kind object;
  #L344d76.  call `<init>`(v6, v5, v1) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L344d7c.  v5:= 16I;
  #L344d80.  call `<init>`(v0, v6, v5) @signature `Ljava/math/BigInteger;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L344d86.  goto L344dba;
  #L344d88.  call temp:= `getLong`(v6) @signature `Ljava/nio/ByteBuffer;.getLong:()J` @kind virtual;
  #L344d8e.  v5:= temp @kind wide;
  #L344d90.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L344d96.  v0:= temp @kind object;
  #L344d98.  goto L344dba;
  #L344d9a.  call temp:= `getInt`(v6) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L344da0.  v5:= temp;
  #L344da2.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L344da8.  v0:= temp @kind object;
  #L344daa.  goto L344dba;
  #L344dac.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L344db0.  goto L344dba;
  #L344db2.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L344db6.  goto L344dba;
  #L344db8.  v0:= 0I;
  #L344dba.  return v0 @kind object;
  #L344dbc.  switch v5
                  | 0 => goto L344db8
                  | 1 => goto L344db2
                  | 2 => goto L344dac
                  | 3 => goto L344d9a
                  | 4 => goto L344d88
                  | 5 => goto L344d62
                  | 6 => goto L344d4a
                  | 7 => goto L344d32
                  | 8 => goto L344d28
                  | 9 => goto L344cf2
                  | 10 => goto L344cbc
                  | 11 => goto L344c9a
                  | 12 => goto L344c6a
                  | 13 => goto L344c38
                  | 14 => goto L344c16
                  | else => goto L344c06;
}
procedure `void` `p`(`ha.r` v4 @kind this, `java.io.ByteArrayOutputStream` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L345180.  v0:= 0I;
  #L345182.  if v6 == 0 then goto L345500;
  #L345186.  v1:= 0I;
  #L345188.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L34518e.  v1:= temp;
  #L345190.  if v1 == 0 then goto L345198;
  #L345194.  goto L345500;
  #L345198.  v1:= instanceof @variable v6 @type ^`java.lang.Boolean` @kind boolean;
  #L34519c.  if v1 == 0 then goto L3451c0;
  #L3451a0.  v6:= (`java.lang.Boolean`) v6 @kind object;
  #L3451a4.  call temp:= `booleanValue`(v6) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3451aa.  v6:= temp;
  #L3451ac.  if v6 == 0 then goto L3451b4;
  #L3451b0.  v6:= 1I;
  #L3451b2.  goto L3451b6;
  #L3451b4.  v6:= 2I;
  #L3451b6.  call `write`(v5, v6) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3451bc.  goto L345506;
  #L3451c0.  v1:= instanceof @variable v6 @type ^`java.lang.Number` @kind boolean;
  #L3451c4.  v2:= 4I;
  #L3451c6.  v3:= 8I;
  #L3451ca.  if v1 == 0 then goto L3452cc;
  #L3451ce.  v0:= instanceof @variable v6 @type ^`java.lang.Integer` @kind boolean;
  #L3451d2.  if v0 != 0 then goto L3452ae;
  #L3451d6.  v0:= instanceof @variable v6 @type ^`java.lang.Short` @kind boolean;
  #L3451da.  if v0 != 0 then goto L3452ae;
  #L3451de.  v0:= instanceof @variable v6 @type ^`java.lang.Byte` @kind boolean;
  #L3451e2.  if v0 == 0 then goto L3451e8;
  #L3451e6.  goto L3452ae;
  #L3451e8.  v0:= instanceof @variable v6 @type ^`java.lang.Long` @kind boolean;
  #L3451ec.  if v0 == 0 then goto L34520c;
  #L3451f0.  call `write`(v5, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3451f6.  v6:= (`java.lang.Long`) v6 @kind object;
  #L3451fa.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L345200.  v0:= temp @kind wide;
  #L345202.  call `n`(v5, v0) @signature `Lha/r;.n:(Ljava/io/ByteArrayOutputStream;J)V` @kind static;
  #L345208.  goto L345506;
  #L34520c.  v0:= instanceof @variable v6 @type ^`java.lang.Float` @kind boolean;
  #L345210.  if v0 != 0 then goto L34528a;
  #L345214.  v0:= instanceof @variable v6 @type ^`java.lang.Double` @kind boolean;
  #L345218.  if v0 == 0 then goto L34521e;
  #L34521c.  goto L34528a;
  #L34521e.  v0:= instanceof @variable v6 @type ^`java.math.BigInteger` @kind boolean;
  #L345222.  if v0 == 0 then goto L345254;
  #L345226.  v0:= 5I;
  #L345228.  call `write`(v5, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L34522e.  v6:= (`java.math.BigInteger`) v6 @kind object;
  #L345232.  v0:= 16I;
  #L345236.  call temp:= `toString`(v6, v0) @signature `Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;` @kind virtual;
  #L34523c.  v6:= temp @kind object;
  #L34523e.  v0:= `@@ha.r.c` @type ^`java.nio.charset.Charset` @kind object;
  #L345242.  call temp:= `getBytes`(v6, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L345248.  v6:= temp @kind object;
  #L34524a.  call `i`(v5, v6) @signature `Lha/r;.i:(Ljava/io/ByteArrayOutputStream;[B)V` @kind static;
  #L345250.  goto L345506;
  #L345254.  v5:= new `java.lang.IllegalArgumentException`;
  #L345258.  v0:= new `java.lang.StringBuilder`;
  #L34525c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L345262.  v1:= "Unsupported Number type: " @kind object;
  #L345266.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34526c.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L345272.  v6:= temp @kind object;
  #L345274.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34527a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L345280.  v6:= temp @kind object;
  #L345282.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L345288.  throw v5;
  #L34528a.  v0:= 6I;
  #L34528c.  call `write`(v5, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345292.  call `h`(v5, v3) @signature `Lha/r;.h:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L345298.  v6:= (`java.lang.Number`) v6 @kind object;
  #L34529c.  call temp:= `doubleValue`(v6) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L3452a2.  v0:= temp @kind wide;
  #L3452a4.  call `k`(v5, v0) @signature `Lha/r;.k:(Ljava/io/ByteArrayOutputStream;D)V` @kind static;
  #L3452aa.  goto L345506;
  #L3452ae.  v0:= 3I;
  #L3452b0.  call `write`(v5, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3452b6.  v6:= (`java.lang.Number`) v6 @kind object;
  #L3452ba.  call temp:= `intValue`(v6) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3452c0.  v6:= temp;
  #L3452c2.  call `m`(v5, v6) @signature `Lha/r;.m:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3452c8.  goto L345506;
  #L3452cc.  v1:= instanceof @variable v6 @type ^`java.lang.CharSequence` @kind boolean;
  #L3452d0.  if v1 == 0 then goto L3452fa;
  #L3452d4.  v0:= 7I;
  #L3452d6.  call `write`(v5, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3452dc.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3452e2.  v6:= temp @kind object;
  #L3452e4.  v0:= `@@ha.r.c` @type ^`java.nio.charset.Charset` @kind object;
  #L3452e8.  call temp:= `getBytes`(v6, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3452ee.  v6:= temp @kind object;
  #L3452f0.  call `i`(v5, v6) @signature `Lha/r;.i:(Ljava/io/ByteArrayOutputStream;[B)V` @kind static;
  #L3452f6.  goto L345506;
  #L3452fa.  v1:= instanceof @variable v6 @type ^`byte`[] @kind boolean;
  #L3452fe.  if v1 == 0 then goto L345316;
  #L345302.  call `write`(v5, v3) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345308.  v6:= (`byte`[]) v6 @kind object;
  #L34530c.  call `i`(v5, v6) @signature `Lha/r;.i:(Ljava/io/ByteArrayOutputStream;[B)V` @kind static;
  #L345312.  goto L345506;
  #L345316.  v1:= instanceof @variable v6 @type ^`int`[] @kind boolean;
  #L34531a.  if v1 == 0 then goto L345350;
  #L34531e.  v1:= 9I;
  #L345322.  call `write`(v5, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345328.  v6:= (`int`[]) v6 @kind object;
  #L34532c.  v1:= length @variable v6;
  #L34532e.  call `o`(v5, v1) @signature `Lha/r;.o:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L345334.  call `h`(v5, v2) @signature `Lha/r;.h:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L34533a.  v1:= length @variable v6;
  #L34533c.  if v0 >= v1 then goto L345506;
  #L345340.  v2:= v6[v0];
  #L345344.  call `m`(v5, v2) @signature `Lha/r;.m:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L34534a.  v0:= v0 + 1;
  #L34534e.  goto L34533c;
  #L345350.  v1:= instanceof @variable v6 @type ^`long`[] @kind boolean;
  #L345354.  if v1 == 0 then goto L34538a;
  #L345358.  v1:= 10I;
  #L34535c.  call `write`(v5, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345362.  v6:= (`long`[]) v6 @kind object;
  #L345366.  v1:= length @variable v6;
  #L345368.  call `o`(v5, v1) @signature `Lha/r;.o:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L34536e.  call `h`(v5, v3) @signature `Lha/r;.h:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L345374.  v1:= length @variable v6;
  #L345376.  if v0 >= v1 then goto L345506;
  #L34537a.  v2:= v6[v0] @kind wide;
  #L34537e.  call `n`(v5, v2) @signature `Lha/r;.n:(Ljava/io/ByteArrayOutputStream;J)V` @kind static;
  #L345384.  v0:= v0 + 1;
  #L345388.  goto L345376;
  #L34538a.  v1:= instanceof @variable v6 @type ^`double`[] @kind boolean;
  #L34538e.  if v1 == 0 then goto L3453c4;
  #L345392.  v1:= 11I;
  #L345396.  call `write`(v5, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L34539c.  v6:= (`double`[]) v6 @kind object;
  #L3453a0.  v1:= length @variable v6;
  #L3453a2.  call `o`(v5, v1) @signature `Lha/r;.o:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3453a8.  call `h`(v5, v3) @signature `Lha/r;.h:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3453ae.  v1:= length @variable v6;
  #L3453b0.  if v0 >= v1 then goto L345506;
  #L3453b4.  v2:= v6[v0] @kind wide;
  #L3453b8.  call `k`(v5, v2) @signature `Lha/r;.k:(Ljava/io/ByteArrayOutputStream;D)V` @kind static;
  #L3453be.  v0:= v0 + 1;
  #L3453c2.  goto L3453b0;
  #L3453c4.  v1:= instanceof @variable v6 @type ^`java.util.List` @kind boolean;
  #L3453c8.  if v1 == 0 then goto L34540c;
  #L3453cc.  v0:= 12I;
  #L3453d0.  call `write`(v5, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L3453d6.  v6:= (`java.util.List`) v6 @kind object;
  #L3453da.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3453e0.  v0:= temp;
  #L3453e2.  call `o`(v5, v0) @signature `Lha/r;.o:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L3453e8.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3453ee.  v6:= temp @kind object;
  #L3453f0.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3453f6.  v0:= temp;
  #L3453f8.  if v0 == 0 then goto L345506;
  #L3453fc.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L345402.  v0:= temp @kind object;
  #L345404.  call `p`(v4, v5, v0) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L34540a.  goto L3453f0;
  #L34540c.  v1:= instanceof @variable v6 @type ^`java.util.Map` @kind boolean;
  #L345410.  if v1 == 0 then goto L345476;
  #L345414.  v0:= 13I;
  #L345418.  call `write`(v5, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L34541e.  v6:= (`java.util.Map`) v6 @kind object;
  #L345422.  call temp:= `size`(v6) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L345428.  v0:= temp;
  #L34542a.  call `o`(v5, v0) @signature `Lha/r;.o:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L345430.  call temp:= `entrySet`(v6) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L345436.  v6:= temp @kind object;
  #L345438.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L34543e.  v6:= temp @kind object;
  #L345440.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L345446.  v0:= temp;
  #L345448.  if v0 == 0 then goto L345506;
  #L34544c.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L345452.  v0:= temp @kind object;
  #L345454.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L345458.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L34545e.  v1:= temp @kind object;
  #L345460.  call `p`(v4, v5, v1) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L345466.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L34546c.  v0:= temp @kind object;
  #L34546e.  call `p`(v4, v5, v0) @signature `Lha/r;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L345474.  goto L345440;
  #L345476.  v1:= instanceof @variable v6 @type ^`float`[] @kind boolean;
  #L34547a.  if v1 == 0 then goto L3454b0;
  #L34547e.  v1:= 14I;
  #L345482.  call `write`(v5, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345488.  v6:= (`float`[]) v6 @kind object;
  #L34548c.  v1:= length @variable v6;
  #L34548e.  call `o`(v5, v1) @signature `Lha/r;.o:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L345494.  call `h`(v5, v2) @signature `Lha/r;.h:(Ljava/io/ByteArrayOutputStream;I)V` @kind static;
  #L34549a.  v1:= length @variable v6;
  #L34549c.  if v0 >= v1 then goto L345506;
  #L3454a0.  v2:= v6[v0];
  #L3454a4.  call `l`(v5, v2) @signature `Lha/r;.l:(Ljava/io/ByteArrayOutputStream;F)V` @kind static;
  #L3454aa.  v0:= v0 + 1;
  #L3454ae.  goto L34549c;
  #L3454b0.  v5:= new `java.lang.IllegalArgumentException`;
  #L3454b4.  v0:= new `java.lang.StringBuilder`;
  #L3454b8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3454be.  v1:= "Unsupported value: '" @kind object;
  #L3454c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3454c8.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3454ce.  v1:= "' of type '" @kind object;
  #L3454d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3454d8.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3454de.  v6:= temp @kind object;
  #L3454e0.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3454e6.  v6:= "'" @kind object;
  #L3454ea.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3454f0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3454f6.  v6:= temp @kind object;
  #L3454f8.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3454fe.  throw v5;
  #L345500.  call `write`(v5, v0) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L345506.  return @kind void;
}
