record `ha.d$c` @kind class @AccessFlag FINAL extends `ha.c$a` @kind interface {
  `ha.d$d` `ha.d$c.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `ha.d$c.b` @AccessFlag PRIVATE_FINAL;
  `ha.d` `ha.d$c.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`ha.d$c` v1 @kind this, `ha.d` v2 @kind object, `ha.d$d` v3 @kind object) @signature `Lha/d$c;.<init>:(Lha/d;Lha/d$d;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L343c18.  v1.`ha.d$c.c` @type ^`ha.d` := v2 @kind object;
  #L343c1c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L343c22.  v2:= new `java.util.concurrent.atomic.AtomicReference`;
  #L343c26.  v0:= 0I;
  #L343c28.  call `<init>`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L343c2e.  v1.`ha.d$c.b` @type ^`java.util.concurrent.atomic.AtomicReference` := v2 @kind object;
  #L343c32.  v1.`ha.d$c.a` @type ^`ha.d$d` := v3 @kind object;
  #L343c36.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicReference` `b`(`ha.d$c` v0 @kind object) @signature `Lha/d$c;.b:(Lha/d$c;)Ljava/util/concurrent/atomic/AtomicReference;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L343c00.  v0:= v0.`ha.d$c.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L343c04.  return v0 @kind object;
}
procedure `void` `c`(`ha.d$c` v4 @kind this, `java.lang.Object` v5 @kind object, `ha.c$b` v6 @kind object) @signature `Lha/d$c;.c:(Ljava/lang/Object;Lha/c$b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L343c48.  v0:= v4.`ha.d$c.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L343c4c.  v1:= 0I;
  #L343c4e.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L343c54.  v0:= temp @kind object;
  #L343c56.  v0:= (`ha.d$b`) v0 @kind object;
  #L343c5a.  v2:= "error" @kind object;
  #L343c5e.  if v0 == 0 then goto L343ce0;
  #L343c62.  v0:= v4.`ha.d$c.a` @type ^`ha.d$d` @kind object;
  #L343c66.  call `b`(v0, v5) @signature `Lha/d$d;.b:(Ljava/lang/Object;)V` @kind interface;
  #L343c6c.  v5:= v4.`ha.d$c.c` @type ^`ha.d` @kind object;
  #L343c70.  call temp:= `a`(v5) @signature `Lha/d;.a:(Lha/d;)Lha/l;` @kind static;
  #L343c76.  v5:= temp @kind object;
  #L343c78.  call temp:= `b`(v5, v1) @signature `Lha/l;.b:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind interface;
  #L343c7e.  v5:= temp @kind object;
  #L343c80.  call `a`(v6, v5) @signature `Lha/c$b;.a:(Ljava/nio/ByteBuffer;)V` @kind interface;
  #L343c86.  goto L343cfe;
  #L343c88.  v5:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L343c8a.  v0:= new `java.lang.StringBuilder`;
  #L343c8e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L343c94.  v3:= "EventChannel#" @kind object;
  #L343c98.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L343c9e.  v3:= v4.`ha.d$c.c` @type ^`ha.d` @kind object;
  #L343ca2.  call temp:= `b`(v3) @signature `Lha/d;.b:(Lha/d;)Ljava/lang/String;` @kind static;
  #L343ca8.  v3:= temp @kind object;
  #L343caa.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L343cb0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L343cb6.  v0:= temp @kind object;
  #L343cb8.  v3:= "Failed to close event stream" @kind object;
  #L343cbc.  call `c`(v0, v3, v5) @signature `Lt9/b;.c:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L343cc2.  v0:= v4.`ha.d$c.c` @type ^`ha.d` @kind object;
  #L343cc6.  call temp:= `a`(v0) @signature `Lha/d;.a:(Lha/d;)Lha/l;` @kind static;
  #L343ccc.  v0:= temp @kind object;
  #L343cce.  call temp:= `getMessage`(v5) @signature `Ljava/lang/RuntimeException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L343cd4.  v5:= temp @kind object;
  #L343cd6.  call temp:= `d`(v0, v2, v5, v1) @signature `Lha/l;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind interface;
  #L343cdc.  v5:= temp @kind object;
  #L343cde.  goto L343cf8;
  #L343ce0.  v5:= v4.`ha.d$c.c` @type ^`ha.d` @kind object;
  #L343ce4.  call temp:= `a`(v5) @signature `Lha/d;.a:(Lha/d;)Lha/l;` @kind static;
  #L343cea.  v5:= temp @kind object;
  #L343cec.  v0:= "No active stream to cancel" @kind object;
  #L343cf0.  call temp:= `d`(v5, v2, v0, v1) @signature `Lha/l;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind interface;
  #L343cf6.  v5:= temp @kind object;
  #L343cf8.  call `a`(v6, v5) @signature `Lha/c$b;.a:(Ljava/nio/ByteBuffer;)V` @kind interface;
  #L343cfe.  return @kind void;
  catch `java.lang.RuntimeException` @[L343c62..L343c86] goto L343c88;
}
procedure `void` `d`(`ha.d$c` v6 @kind this, `java.lang.Object` v7 @kind object, `ha.c$b` v8 @kind object) @signature `Lha/d$c;.d:(Ljava/lang/Object;Lha/c$b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L343d20.  v0:= new `ha.d$c$a`;
  #L343d24.  v1:= 0I;
  #L343d26.  call `<init>`(v0, v6, v1) @signature `Lha/d$c$a;.<init>:(Lha/d$c;Lha/d$a;)V` @kind direct;
  #L343d2c.  v2:= v6.`ha.d$c.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L343d30.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L343d36.  v2:= temp @kind object;
  #L343d38.  v2:= (`ha.d$b`) v2 @kind object;
  #L343d3c.  v3:= "EventChannel#" @kind object;
  #L343d40.  if v2 == 0 then goto L343d86;
  #L343d44.  v2:= v6.`ha.d$c.a` @type ^`ha.d$d` @kind object;
  #L343d48.  call `b`(v2, v1) @signature `Lha/d$d;.b:(Ljava/lang/Object;)V` @kind interface;
  #L343d4e.  goto L343d86;
  #L343d50.  v2:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L343d52.  v4:= new `java.lang.StringBuilder`;
  #L343d56.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L343d5c.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L343d62.  v5:= v6.`ha.d$c.c` @type ^`ha.d` @kind object;
  #L343d66.  call temp:= `b`(v5) @signature `Lha/d;.b:(Lha/d;)Ljava/lang/String;` @kind static;
  #L343d6c.  v5:= temp @kind object;
  #L343d6e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L343d74.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L343d7a.  v4:= temp @kind object;
  #L343d7c.  v5:= "Failed to close existing event stream" @kind object;
  #L343d80.  call `c`(v4, v5, v2) @signature `Lt9/b;.c:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L343d86.  v2:= v6.`ha.d$c.a` @type ^`ha.d$d` @kind object;
  #L343d8a.  call `a`(v2, v7, v0) @signature `Lha/d$d;.a:(Ljava/lang/Object;Lha/d$b;)V` @kind interface;
  #L343d90.  v7:= v6.`ha.d$c.c` @type ^`ha.d` @kind object;
  #L343d94.  call temp:= `a`(v7) @signature `Lha/d;.a:(Lha/d;)Lha/l;` @kind static;
  #L343d9a.  v7:= temp @kind object;
  #L343d9c.  call temp:= `b`(v7, v1) @signature `Lha/l;.b:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind interface;
  #L343da2.  v7:= temp @kind object;
  #L343da4.  call `a`(v8, v7) @signature `Lha/c$b;.a:(Ljava/nio/ByteBuffer;)V` @kind interface;
  #L343daa.  goto L343e12;
  #L343dac.  v7:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L343dae.  v0:= v6.`ha.d$c.b` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L343db2.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L343db8.  v0:= new `java.lang.StringBuilder`;
  #L343dbc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L343dc2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L343dc8.  v2:= v6.`ha.d$c.c` @type ^`ha.d` @kind object;
  #L343dcc.  call temp:= `b`(v2) @signature `Lha/d;.b:(Lha/d;)Ljava/lang/String;` @kind static;
  #L343dd2.  v2:= temp @kind object;
  #L343dd4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L343dda.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L343de0.  v0:= temp @kind object;
  #L343de2.  v2:= "Failed to open event stream" @kind object;
  #L343de6.  call `c`(v0, v2, v7) @signature `Lt9/b;.c:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L343dec.  v0:= v6.`ha.d$c.c` @type ^`ha.d` @kind object;
  #L343df0.  call temp:= `a`(v0) @signature `Lha/d;.a:(Lha/d;)Lha/l;` @kind static;
  #L343df6.  v0:= temp @kind object;
  #L343df8.  call temp:= `getMessage`(v7) @signature `Ljava/lang/RuntimeException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L343dfe.  v7:= temp @kind object;
  #L343e00.  v2:= "error" @kind object;
  #L343e04.  call temp:= `d`(v0, v2, v7, v1) @signature `Lha/l;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind interface;
  #L343e0a.  v7:= temp @kind object;
  #L343e0c.  call `a`(v8, v7) @signature `Lha/c$b;.a:(Ljava/nio/ByteBuffer;)V` @kind interface;
  #L343e12.  return @kind void;
  catch `java.lang.RuntimeException` @[L343d44..L343d4e] goto L343d50;
  catch `java.lang.RuntimeException` @[L343d86..L343daa] goto L343dac;
}
procedure `void` `a`(`ha.d$c` v2 @kind this, `java.nio.ByteBuffer` v3 @kind object, `ha.c$b` v4 @kind object) @signature `Lha/d$c;.a:(Ljava/nio/ByteBuffer;Lha/c$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L343e40.  v0:= v2.`ha.d$c.c` @type ^`ha.d` @kind object;
  #L343e44.  call temp:= `a`(v0) @signature `Lha/d;.a:(Lha/d;)Lha/l;` @kind static;
  #L343e4a.  v0:= temp @kind object;
  #L343e4c.  call temp:= `e`(v0, v3) @signature `Lha/l;.e:(Ljava/nio/ByteBuffer;)Lha/j;` @kind interface;
  #L343e52.  v3:= temp @kind object;
  #L343e54.  v0:= v3.`ha.j.a` @type ^`java.lang.String` @kind object;
  #L343e58.  v1:= "listen" @kind object;
  #L343e5c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L343e62.  v0:= temp;
  #L343e64.  if v0 == 0 then goto L343e74;
  #L343e68.  v3:= v3.`ha.j.b` @type ^`java.lang.Object` @kind object;
  #L343e6c.  call `d`(v2, v3, v4) @signature `Lha/d$c;.d:(Ljava/lang/Object;Lha/c$b;)V` @kind direct;
  #L343e72.  goto L343e9c;
  #L343e74.  v0:= v3.`ha.j.a` @type ^`java.lang.String` @kind object;
  #L343e78.  v1:= "cancel" @kind object;
  #L343e7c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L343e82.  v0:= temp;
  #L343e84.  if v0 == 0 then goto L343e94;
  #L343e88.  v3:= v3.`ha.j.b` @type ^`java.lang.Object` @kind object;
  #L343e8c.  call `c`(v2, v3, v4) @signature `Lha/d$c;.c:(Ljava/lang/Object;Lha/c$b;)V` @kind direct;
  #L343e92.  goto L343e9c;
  #L343e94.  v3:= 0I;
  #L343e96.  call `a`(v4, v3) @signature `Lha/c$b;.a:(Ljava/nio/ByteBuffer;)V` @kind interface;
  #L343e9c.  return @kind void;
}
