record `ha.d` @kind class @AccessFlag PUBLIC_FINAL {
  `ha.c` `ha.d.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `ha.d.b` @AccessFlag PRIVATE_FINAL;
  `ha.l` `ha.d.c` @AccessFlag PRIVATE_FINAL;
  `ha.c$c` `ha.d.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`ha.d` v1 @kind this, `ha.c` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lha/d;.<init>:(Lha/c;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L343ef8.  v0:= `@@ha.s.b` @type ^`ha.s` @kind object;
  #L343efc.  call `<init>`(v1, v2, v3, v0) @signature `Lha/d;.<init>:(Lha/c;Ljava/lang/String;Lha/l;)V` @kind direct;
  #L343f02.  return @kind void;
}
procedure `void` `<init>`(`ha.d` v1 @kind this, `ha.c` v2 @kind object, `java.lang.String` v3 @kind object, `ha.l` v4 @kind object) @signature `Lha/d;.<init>:(Lha/c;Ljava/lang/String;Lha/l;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L343f14.  v0:= 0I;
  #L343f16.  call `<init>`(v1, v2, v3, v4, v0) @signature `Lha/d;.<init>:(Lha/c;Ljava/lang/String;Lha/l;Lha/c$c;)V` @kind direct;
  #L343f1c.  return @kind void;
}
procedure `void` `<init>`(`ha.d` v0 @kind this, `ha.c` v1 @kind object, `java.lang.String` v2 @kind object, `ha.l` v3 @kind object, `ha.c$c` v4 @kind object) @signature `Lha/d;.<init>:(Lha/c;Ljava/lang/String;Lha/l;Lha/c$c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L343f30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L343f36.  v0.`ha.d.a` @type ^`ha.c` := v1 @kind object;
  #L343f3a.  v0.`ha.d.b` @type ^`java.lang.String` := v2 @kind object;
  #L343f3e.  v0.`ha.d.c` @type ^`ha.l` := v3 @kind object;
  #L343f42.  v0.`ha.d.d` @type ^`ha.c$c` := v4 @kind object;
  #L343f46.  return @kind void;
}
procedure `ha.l` `a`(`ha.d` v0 @kind object) @signature `Lha/d;.a:(Lha/d;)Lha/l;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L343ec8.  v0:= v0.`ha.d.c` @type ^`ha.l` @kind object;
  #L343ecc.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`ha.d` v0 @kind object) @signature `Lha/d;.b:(Lha/d;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L343ee0.  v0:= v0.`ha.d.b` @type ^`java.lang.String` @kind object;
  #L343ee4.  return v0 @kind object;
}
procedure `ha.c` `c`(`ha.d` v0 @kind object) @signature `Lha/d;.c:(Lha/d;)Lha/c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L343eb0.  v0:= v0.`ha.d.a` @type ^`ha.c` @kind object;
  #L343eb4.  return v0 @kind object;
}
procedure `void` `d`(`ha.d` v3 @kind this, `ha.d$d` v4 @kind object) @signature `Lha/d;.d:(Lha/d$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L343f58.  v0:= v3.`ha.d.d` @type ^`ha.c$c` @kind object;
  #L343f5c.  v1:= 0I;
  #L343f5e.  if v0 == 0 then goto L343f86;
  #L343f62.  v0:= v3.`ha.d.a` @type ^`ha.c` @kind object;
  #L343f66.  v2:= v3.`ha.d.b` @type ^`java.lang.String` @kind object;
  #L343f6a.  if v4 != 0 then goto L343f70;
  #L343f6e.  goto L343f7a;
  #L343f70.  v1:= new `ha.d$c`;
  #L343f74.  call `<init>`(v1, v3, v4) @signature `Lha/d$c;.<init>:(Lha/d;Lha/d$d;)V` @kind direct;
  #L343f7a.  v4:= v3.`ha.d.d` @type ^`ha.c$c` @kind object;
  #L343f7e.  call `h`(v0, v2, v1, v4) @signature `Lha/c;.h:(Ljava/lang/String;Lha/c$a;Lha/c$c;)V` @kind interface;
  #L343f84.  goto L343fa4;
  #L343f86.  v0:= v3.`ha.d.a` @type ^`ha.c` @kind object;
  #L343f8a.  v2:= v3.`ha.d.b` @type ^`java.lang.String` @kind object;
  #L343f8e.  if v4 != 0 then goto L343f94;
  #L343f92.  goto L343f9e;
  #L343f94.  v1:= new `ha.d$c`;
  #L343f98.  call `<init>`(v1, v3, v4) @signature `Lha/d$c;.<init>:(Lha/d;Lha/d$d;)V` @kind direct;
  #L343f9e.  call `c`(v0, v2, v1) @signature `Lha/c;.c:(Ljava/lang/String;Lha/c$a;)V` @kind interface;
  #L343fa4.  return @kind void;
}
