record `ha.j` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `ha.j.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `ha.j.b` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`ha.j` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lha/j;.<init>:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3446b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3446ba.  v0.`ha.j.a` @type ^`java.lang.String` := v1 @kind object;
  #L3446be.  v0.`ha.j.b` @type ^`java.lang.Object` := v2 @kind object;
  #L3446c2.  return @kind void;
}
procedure `java.lang.Object` `a`(`ha.j` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lha/j;.a:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L344648.  v0:= v2.`ha.j.b` @type ^`java.lang.Object` @kind object;
  #L34464c.  if v0 != 0 then goto L344654;
  #L344650.  v3:= 0I;
  #L344652.  return v3 @kind object;
  #L344654.  v1:= instanceof @variable v0 @type ^`java.util.Map` @kind boolean;
  #L344658.  if v1 == 0 then goto L34466a;
  #L34465c.  v0:= (`java.util.Map`) v0 @kind object;
  #L344660.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L344666.  v3:= temp @kind object;
  #L344668.  return v3 @kind object;
  #L34466a.  v1:= instanceof @variable v0 @type ^`org.json.JSONObject` @kind boolean;
  #L34466e.  if v1 == 0 then goto L344680;
  #L344672.  v0:= (`org.json.JSONObject`) v0 @kind object;
  #L344676.  call temp:= `opt`(v0, v3) @signature `Lorg/json/JSONObject;.opt:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L34467c.  v3:= temp @kind object;
  #L34467e.  return v3 @kind object;
  #L344680.  v3:= new `java.lang.ClassCastException`;
  #L344684.  call `<init>`(v3) @signature `Ljava/lang/ClassCastException;.<init>:()V` @kind direct;
  #L34468a.  throw v3;
}
procedure `java.lang.Object` `b`(`ha.j` v1 @kind this) @signature `Lha/j;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34469c.  v0:= v1.`ha.j.b` @type ^`java.lang.Object` @kind object;
  #L3446a0.  return v0 @kind object;
}
procedure `boolean` `c`(`ha.j` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lha/j;.c:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3445f4.  v0:= v2.`ha.j.b` @type ^`java.lang.Object` @kind object;
  #L3445f8.  if v0 != 0 then goto L344600;
  #L3445fc.  v3:= 0I;
  #L3445fe.  return v3;
  #L344600.  v1:= instanceof @variable v0 @type ^`java.util.Map` @kind boolean;
  #L344604.  if v1 == 0 then goto L344616;
  #L344608.  v0:= (`java.util.Map`) v0 @kind object;
  #L34460c.  call temp:= `containsKey`(v0, v3) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L344612.  v3:= temp;
  #L344614.  return v3;
  #L344616.  v1:= instanceof @variable v0 @type ^`org.json.JSONObject` @kind boolean;
  #L34461a.  if v1 == 0 then goto L34462c;
  #L34461e.  v0:= (`org.json.JSONObject`) v0 @kind object;
  #L344622.  call temp:= `has`(v0, v3) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L344628.  v3:= temp;
  #L34462a.  return v3;
  #L34462c.  v3:= new `java.lang.ClassCastException`;
  #L344630.  call `<init>`(v3) @signature `Ljava/lang/ClassCastException;.<init>:()V` @kind direct;
  #L344636.  throw v3;
}
