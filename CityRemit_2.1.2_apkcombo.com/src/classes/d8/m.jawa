record `d8.m` @kind class @AccessFlag PUBLIC_FINAL extends `d8.k` @kind class {
}
global `d8.m` `@@d8.m.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ld8/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f9e6c.  v0:= new `d8.m`;
  #L2f9e70.  call `<init>`(v0) @signature `Ld8/m;.<init>:()V` @kind direct;
  #L2f9e76.  `@@d8.m.a` @type ^`d8.m` := v0 @kind object;
  #L2f9e7a.  return @kind void;
}
procedure `void` `<init>`(`d8.m` v0 @kind this) @signature `Ld8/m;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f9e8c.  call `<init>`(v0) @signature `Ld8/k;.<init>:()V` @kind direct;
  #L2f9e92.  return @kind void;
}
procedure `boolean` `equals`(`d8.m` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ld8/m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L2f9e24.  if v0 == v1 then goto L2f9e36;
  #L2f9e28.  v1:= instanceof @variable v1 @type ^`d8.m` @kind boolean;
  #L2f9e2c.  if v1 == 0 then goto L2f9e32;
  #L2f9e30.  goto L2f9e36;
  #L2f9e32.  v1:= 0I;
  #L2f9e34.  goto L2f9e38;
  #L2f9e36.  v1:= 1I;
  #L2f9e38.  return v1;
}
procedure `int` `hashCode`(`d8.m` v1 @kind this) @signature `Ld8/m;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f9e4c.  v0:= constclass @type ^`d8.m` @kind object;
  #L2f9e50.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2f9e56.  v0:= temp;
  #L2f9e58.  return v0;
}
