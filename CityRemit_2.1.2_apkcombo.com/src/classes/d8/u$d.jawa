record `d8.u$d` @kind class @AccessFlag FINAL_ENUM extends `d8.u` @kind class {
}
procedure `void` `<init>`(`d8.u$d` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Ld8/u$d;.<init>:(Ljava/lang/String;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2fa7a4.  v0:= 0I;
  #L2fa7a6.  call `<init>`(v1, v2, v3, v0) @signature `Ld8/u;.<init>:(Ljava/lang/String;ILd8/u$a;)V` @kind direct;
  #L2fa7ac.  return @kind void;
}
procedure `java.lang.Number` `c`(`d8.u$d` v0 @kind this, `l8.a` v1 @kind object) @signature `Ld8/u$d;.c:(Ll8/a;)Ljava/lang/Number;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2fa70c.  call temp:= `d`(v0, v1) @signature `Ld8/u$d;.d:(Ll8/a;)Ljava/math/BigDecimal;` @kind virtual;
  #L2fa712.  v1:= temp @kind object;
  #L2fa714.  return v1 @kind object;
}
procedure `java.math.BigDecimal` `d`(`d8.u$d` v5 @kind this, `l8.a` v6 @kind object) @signature `Ld8/u$d;.d:(Ll8/a;)Ljava/math/BigDecimal;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2fa728.  call temp:= `d0`(v6) @signature `Ll8/a;.d0:()Ljava/lang/String;` @kind virtual;
  #L2fa72e.  v0:= temp @kind object;
  #L2fa730.  v1:= new `java.math.BigDecimal`;
  #L2fa734.  call `<init>`(v1, v0) @signature `Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fa73a.  return v1 @kind object;
  #L2fa73c.  v1:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L2fa73e.  v2:= new `d8.o`;
  #L2fa742.  v3:= new `java.lang.StringBuilder`;
  #L2fa746.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fa74c.  v4:= "Cannot parse " @kind object;
  #L2fa750.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa756.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa75c.  v0:= "; at path " @kind object;
  #L2fa760.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa766.  call temp:= `v`(v6) @signature `Ll8/a;.v:()Ljava/lang/String;` @kind virtual;
  #L2fa76c.  v6:= temp @kind object;
  #L2fa76e.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa774.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fa77a.  v6:= temp @kind object;
  #L2fa77c.  call `<init>`(v2, v6, v1) @signature `Ld8/o;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2fa782.  throw v2;
  catch `java.lang.NumberFormatException` @[L2fa730..L2fa73a] goto L2fa73c;
}
