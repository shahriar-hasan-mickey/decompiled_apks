record `d8.w` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`d8.w` v0 @kind this) @signature `Ld8/w;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2fa9d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fa9de.  return @kind void;
}
procedure `java.lang.Object` `a`(`d8.w` v1 @kind this, `d8.k` v2 @kind object) @signature `Ld8/w;.a:(Ld8/k;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fa994.  v0:= new `g8.f`;
  #L2fa998.  call `<init>`(v0, v2) @signature `Lg8/f;.<init>:(Ld8/k;)V` @kind direct;
  #L2fa99e.  call temp:= `c`(v1, v0) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L2fa9a4.  v2:= temp @kind object;
  #L2fa9a6.  return v2 @kind object;
  #L2fa9a8.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L2fa9aa.  v0:= new `d8.l`;
  #L2fa9ae.  call `<init>`(v0, v2) @signature `Ld8/l;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2fa9b4.  throw v0;
  catch `java.io.IOException` @[L2fa994..L2fa9a6] goto L2fa9a8;
}
procedure `d8.w` `b`(`d8.w` v1 @kind this) @signature `Ld8/w;.b:()Ld8/w;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fa978.  v0:= new `d8.w$a`;
  #L2fa97c.  call `<init>`(v0, v1) @signature `Ld8/w$a;.<init>:(Ld8/w;)V` @kind direct;
  #L2fa982.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`l8.a` v0 @kind object) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `d8.k` `d`(`d8.w` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ld8/w;.d:(Ljava/lang/Object;)Ld8/k;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fa930.  v0:= new `g8.g`;
  #L2fa934.  call `<init>`(v0) @signature `Lg8/g;.<init>:()V` @kind direct;
  #L2fa93a.  call `e`(v1, v0, v2) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @kind virtual;
  #L2fa940.  call temp:= `k0`(v0) @signature `Lg8/g;.k0:()Ld8/k;` @kind virtual;
  #L2fa946.  v2:= temp @kind object;
  #L2fa948.  return v2 @kind object;
  #L2fa94a.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L2fa94c.  v0:= new `d8.l`;
  #L2fa950.  call `<init>`(v0, v2) @signature `Ld8/l;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2fa956.  throw v0;
  catch `java.io.IOException` @[L2fa930..L2fa948] goto L2fa94a;
}
procedure `void` `e`(`l8.c` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
