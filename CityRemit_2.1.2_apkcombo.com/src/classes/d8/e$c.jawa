record `d8.e$c` @kind class @AccessFlag  extends `d8.w` @kind class {
}
procedure `void` `<init>`(`d8.e$c` v0 @kind this) @signature `Ld8/e$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f8a18.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L2f8a1e.  return @kind void;
}
procedure `java.lang.Object` `c`(`d8.e$c` v0 @kind this, `l8.a` v1 @kind object) @signature `Ld8/e$c;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f89fc.  call temp:= `f`(v0, v1) @signature `Ld8/e$c;.f:(Ll8/a;)Ljava/lang/Number;` @kind virtual;
  #L2f8a02.  v1:= temp @kind object;
  #L2f8a04.  return v1 @kind object;
}
procedure `void` `e`(`d8.e$c` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Ld8/e$c;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f8a5c.  v2:= (`java.lang.Number`) v2 @kind object;
  #L2f8a60.  call `g`(v0, v1, v2) @signature `Ld8/e$c;.g:(Ll8/c;Ljava/lang/Number;)V` @kind virtual;
  #L2f8a66.  return @kind void;
}
procedure `java.lang.Number` `f`(`d8.e$c` v2 @kind this, `l8.a` v3 @kind object) @signature `Ld8/e$c;.f:(Ll8/a;)Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f89c0.  call temp:= `f0`(v3) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L2f89c6.  v0:= temp @kind object;
  #L2f89c8.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L2f89cc.  if v0 != v1 then goto L2f89da;
  #L2f89d0.  call `b0`(v3) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L2f89d6.  v3:= 0I;
  #L2f89d8.  return v3 @kind object;
  #L2f89da.  call temp:= `O`(v3) @signature `Ll8/a;.O:()J` @kind virtual;
  #L2f89e0.  v0:= temp @kind wide;
  #L2f89e2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2f89e8.  v3:= temp @kind object;
  #L2f89ea.  return v3 @kind object;
}
procedure `void` `g`(`d8.e$c` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Number` v2 @kind object) @signature `Ld8/e$c;.g:(Ll8/c;Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;

  #L2f8a30.  if v2 != 0 then goto L2f8a3c;
  #L2f8a34.  call temp:= `J`(v1) @signature `Ll8/c;.J:()Ll8/c;` @kind virtual;
  #L2f8a3a.  return @kind void;
  #L2f8a3c.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f8a42.  v2:= temp @kind object;
  #L2f8a44.  call temp:= `h0`(v1, v2) @signature `Ll8/c;.h0:(Ljava/lang/String;)Ll8/c;` @kind virtual;
  #L2f8a4a.  return @kind void;
}
