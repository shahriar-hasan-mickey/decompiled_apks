record `d8.u$c` @kind class @AccessFlag FINAL_ENUM extends `d8.u` @kind class {
}
procedure `void` `<init>`(`d8.u$c` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Ld8/u$c;.<init>:(Ljava/lang/String;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2fa6f0.  v0:= 0I;
  #L2fa6f2.  call `<init>`(v1, v2, v3, v0) @signature `Ld8/u;.<init>:(Ljava/lang/String;ILd8/u$a;)V` @kind direct;
  #L2fa6f8.  return @kind void;
}
procedure `java.lang.Number` `c`(`d8.u$c` v6 @kind this, `l8.a` v7 @kind object) @signature `Ld8/u$c;.c:(Ll8/a;)Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2fa5f0.  v0:= "; at path " @kind object;
  #L2fa5f4.  call temp:= `d0`(v7) @signature `Ll8/a;.d0:()Ljava/lang/String;` @kind virtual;
  #L2fa5fa.  v1:= temp @kind object;
  #L2fa5fc.  call temp:= `parseLong`(v1) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L2fa602.  v2:= temp @kind wide;
  #L2fa604.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2fa60a.  v7:= temp @kind object;
  #L2fa60c.  return v7 @kind object;
  #L2fa60e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Double;.valueOf:(Ljava/lang/String;)Ljava/lang/Double;` @kind static;
  #L2fa614.  v2:= temp @kind object;
  #L2fa616.  call temp:= `isInfinite`(v2) @signature `Ljava/lang/Double;.isInfinite:()Z` @kind virtual;
  #L2fa61c.  v3:= temp;
  #L2fa61e.  if v3 != 0 then goto L2fa62e;
  #L2fa622.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:()Z` @kind virtual;
  #L2fa628.  v3:= temp;
  #L2fa62a.  if v3 == 0 then goto L2fa63a;
  #L2fa62e.  call temp:= `E`(v7) @signature `Ll8/a;.E:()Z` @kind virtual;
  #L2fa634.  v3:= temp;
  #L2fa636.  if v3 == 0 then goto L2fa63c;
  #L2fa63a.  return v2 @kind object;
  #L2fa63c.  v3:= new `l8.d`;
  #L2fa640.  v4:= new `java.lang.StringBuilder`;
  #L2fa644.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fa64a.  v5:= "JSON forbids NaN and infinities: " @kind object;
  #L2fa64e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa654.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa65a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa660.  call temp:= `v`(v7) @signature `Ll8/a;.v:()Ljava/lang/String;` @kind virtual;
  #L2fa666.  v2:= temp @kind object;
  #L2fa668.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa66e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fa674.  v2:= temp @kind object;
  #L2fa676.  call `<init>`(v3, v2) @signature `Ll8/d;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fa67c.  throw v3;
  #L2fa67e.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L2fa680.  v3:= new `d8.o`;
  #L2fa684.  v4:= new `java.lang.StringBuilder`;
  #L2fa688.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fa68e.  v5:= "Cannot parse " @kind object;
  #L2fa692.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa698.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa69e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa6a4.  call temp:= `v`(v7) @signature `Ll8/a;.v:()Ljava/lang/String;` @kind virtual;
  #L2fa6aa.  v7:= temp @kind object;
  #L2fa6ac.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fa6b2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fa6b8.  v7:= temp @kind object;
  #L2fa6ba.  call `<init>`(v3, v7, v2) @signature `Ld8/o;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2fa6c0.  throw v3;
  catch `java.lang.NumberFormatException` @[L2fa5fc..L2fa60c] goto L2fa60e;
  catch `java.lang.NumberFormatException` @[L2fa60e..L2fa67e] goto L2fa67e;
}
