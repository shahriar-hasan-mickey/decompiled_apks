record `d8.e$f` @kind class @AccessFlag  extends `d8.w` @kind class {
  `d8.w` `d8.e$f.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`d8.e$f` v0 @kind this) @signature `Ld8/e$f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f8c90.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L2f8c96.  return @kind void;
}
procedure `java.lang.Object` `c`(`d8.e$f` v1 @kind this, `l8.a` v2 @kind object) @signature `Ld8/e$f;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f8c60.  v0:= v1.`d8.e$f.a` @type ^`d8.w` @kind object;
  #L2f8c64.  if v0 == 0 then goto L2f8c72;
  #L2f8c68.  call temp:= `c`(v0, v2) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L2f8c6e.  v2:= temp @kind object;
  #L2f8c70.  return v2 @kind object;
  #L2f8c72.  v2:= new `java.lang.IllegalStateException`;
  #L2f8c76.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L2f8c7c.  throw v2;
}
procedure `void` `e`(`d8.e$f` v1 @kind this, `l8.c` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Ld8/e$f;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f8cd4.  v0:= v1.`d8.e$f.a` @type ^`d8.w` @kind object;
  #L2f8cd8.  if v0 == 0 then goto L2f8ce4;
  #L2f8cdc.  call `e`(v0, v2, v3) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @kind virtual;
  #L2f8ce2.  return @kind void;
  #L2f8ce4.  v2:= new `java.lang.IllegalStateException`;
  #L2f8ce8.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L2f8cee.  throw v2;
}
procedure `void` `f`(`d8.e$f` v1 @kind this, `d8.w` v2 @kind object) @signature `Ld8/e$f;.f:(Ld8/w;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f8ca8.  v0:= v1.`d8.e$f.a` @type ^`d8.w` @kind object;
  #L2f8cac.  if v0 != 0 then goto L2f8cb6;
  #L2f8cb0.  v1.`d8.e$f.a` @type ^`d8.w` := v2 @kind object;
  #L2f8cb4.  return @kind void;
  #L2f8cb6.  v2:= new `java.lang.AssertionError`;
  #L2f8cba.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2f8cc0.  throw v2;
}
