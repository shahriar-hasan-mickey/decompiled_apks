record `d8.e$b` @kind class @AccessFlag  extends `d8.w` @kind class {
}
procedure `void` `<init>`(`d8.e$b` v0 @kind this, `d8.e` v1 @kind object) @signature `Ld8/e$b;.<init>:(Ld8/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f8958.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L2f895e.  return @kind void;
}
procedure `java.lang.Object` `c`(`d8.e$b` v0 @kind this, `l8.a` v1 @kind object) @signature `Ld8/e$b;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f893c.  call temp:= `f`(v0, v1) @signature `Ld8/e$b;.f:(Ll8/a;)Ljava/lang/Float;` @kind virtual;
  #L2f8942.  v1:= temp @kind object;
  #L2f8944.  return v1 @kind object;
}
procedure `void` `e`(`d8.e$b` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Ld8/e$b;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f89a4.  v2:= (`java.lang.Number`) v2 @kind object;
  #L2f89a8.  call `g`(v0, v1, v2) @signature `Ld8/e$b;.g:(Ll8/c;Ljava/lang/Number;)V` @kind virtual;
  #L2f89ae.  return @kind void;
}
procedure `java.lang.Float` `f`(`d8.e$b` v2 @kind this, `l8.a` v3 @kind object) @signature `Ld8/e$b;.f:(Ll8/a;)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f88fc.  call temp:= `f0`(v3) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L2f8902.  v0:= temp @kind object;
  #L2f8904.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L2f8908.  if v0 != v1 then goto L2f8916;
  #L2f890c.  call `b0`(v3) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L2f8912.  v3:= 0I;
  #L2f8914.  return v3 @kind object;
  #L2f8916.  call temp:= `M`(v3) @signature `Ll8/a;.M:()D` @kind virtual;
  #L2f891c.  v0:= temp @kind wide;
  #L2f891e.  v3:= (`float`) v0 @kind d2f;
  #L2f8920.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2f8926.  v3:= temp @kind object;
  #L2f8928.  return v3 @kind object;
}
procedure `void` `g`(`d8.e$b` v2 @kind this, `l8.c` v3 @kind object, `java.lang.Number` v4 @kind object) @signature `Ld8/e$b;.g:(Ll8/c;Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f8970.  if v4 != 0 then goto L2f897c;
  #L2f8974.  call temp:= `J`(v3) @signature `Ll8/c;.J:()Ll8/c;` @kind virtual;
  #L2f897a.  return @kind void;
  #L2f897c.  call temp:= `floatValue`(v4) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L2f8982.  v0:= temp;
  #L2f8984.  v0:= (`double`) v0 @kind f2d;
  #L2f8986.  call `d`(v0) @signature `Ld8/e;.d:(D)V` @kind static;
  #L2f898c.  call temp:= `g0`(v3, v4) @signature `Ll8/c;.g0:(Ljava/lang/Number;)Ll8/c;` @kind virtual;
  #L2f8992.  return @kind void;
}
