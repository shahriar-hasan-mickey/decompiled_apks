record `d8.e$d` @kind class @AccessFlag  extends `d8.w` @kind class {
  `d8.w` `d8.e$d.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`d8.e$d` v0 @kind this, `d8.w` v1 @kind object) @signature `Ld8/e$d;.<init>:(Ld8/w;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2f8ac8.  v0.`d8.e$d.a` @type ^`d8.w` := v1 @kind object;
  #L2f8acc.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L2f8ad2.  return @kind void;
}
procedure `java.lang.Object` `c`(`d8.e$d` v0 @kind this, `l8.a` v1 @kind object) @signature `Ld8/e$d;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f8a78.  call temp:= `f`(v0, v1) @signature `Ld8/e$d;.f:(Ll8/a;)Ljava/util/concurrent/atomic/AtomicLong;` @kind virtual;
  #L2f8a7e.  v1:= temp @kind object;
  #L2f8a80.  return v1 @kind object;
}
procedure `void` `e`(`d8.e$d` v0 @kind this, `l8.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Ld8/e$d;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2f8ae4.  v2:= (`java.util.concurrent.atomic.AtomicLong`) v2 @kind object;
  #L2f8ae8.  call `g`(v0, v1, v2) @signature `Ld8/e$d;.g:(Ll8/c;Ljava/util/concurrent/atomic/AtomicLong;)V` @kind virtual;
  #L2f8aee.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicLong` `f`(`d8.e$d` v3 @kind this, `l8.a` v4 @kind object) @signature `Ld8/e$d;.f:(Ll8/a;)Ljava/util/concurrent/atomic/AtomicLong;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2f8a94.  v0:= v3.`d8.e$d.a` @type ^`d8.w` @kind object;
  #L2f8a98.  call temp:= `c`(v0, v4) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L2f8a9e.  v4:= temp @kind object;
  #L2f8aa0.  v4:= (`java.lang.Number`) v4 @kind object;
  #L2f8aa4.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L2f8aa8.  call temp:= `longValue`(v4) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L2f8aae.  v1:= temp @kind wide;
  #L2f8ab0.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:(J)V` @kind direct;
  #L2f8ab6.  return v0 @kind object;
}
procedure `void` `g`(`d8.e$d` v3 @kind this, `l8.c` v4 @kind object, `java.util.concurrent.atomic.AtomicLong` v5 @kind object) @signature `Ld8/e$d;.g:(Ll8/c;Ljava/util/concurrent/atomic/AtomicLong;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2f8b00.  v0:= v3.`d8.e$d.a` @type ^`d8.w` @kind object;
  #L2f8b04.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L2f8b0a.  v1:= temp @kind wide;
  #L2f8b0c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2f8b12.  v5:= temp @kind object;
  #L2f8b14.  call `e`(v0, v4, v5) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @kind virtual;
  #L2f8b1a.  return @kind void;
}
