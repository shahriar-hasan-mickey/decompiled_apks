record `d8.w$a` @kind class @AccessFlag  extends `d8.w` @kind class {
  `d8.w` `d8.w$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`d8.w$a` v0 @kind this, `d8.w` v1 @kind object) @signature `Ld8/w$a;.<init>:(Ld8/w;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2fa8ec.  v0.`d8.w$a.a` @type ^`d8.w` := v1 @kind object;
  #L2fa8f0.  call `<init>`(v0) @signature `Ld8/w;.<init>:()V` @kind direct;
  #L2fa8f6.  return @kind void;
}
procedure `java.lang.Object` `c`(`d8.w$a` v2 @kind this, `l8.a` v3 @kind object) @signature `Ld8/w$a;.c:(Ll8/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2fa8b4.  call temp:= `f0`(v3) @signature `Ll8/a;.f0:()Ll8/b;` @kind virtual;
  #L2fa8ba.  v0:= temp @kind object;
  #L2fa8bc.  v1:= `@@l8.b.w` @type ^`l8.b` @kind object;
  #L2fa8c0.  if v0 != v1 then goto L2fa8ce;
  #L2fa8c4.  call `b0`(v3) @signature `Ll8/a;.b0:()V` @kind virtual;
  #L2fa8ca.  v3:= 0I;
  #L2fa8cc.  return v3 @kind object;
  #L2fa8ce.  v0:= v2.`d8.w$a.a` @type ^`d8.w` @kind object;
  #L2fa8d2.  call temp:= `c`(v0, v3) @signature `Ld8/w;.c:(Ll8/a;)Ljava/lang/Object;` @kind virtual;
  #L2fa8d8.  v3:= temp @kind object;
  #L2fa8da.  return v3 @kind object;
}
procedure `void` `e`(`d8.w$a` v1 @kind this, `l8.c` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Ld8/w$a;.e:(Ll8/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fa908.  if v3 != 0 then goto L2fa914;
  #L2fa90c.  call temp:= `J`(v2) @signature `Ll8/c;.J:()Ll8/c;` @kind virtual;
  #L2fa912.  goto L2fa91e;
  #L2fa914.  v0:= v1.`d8.w$a.a` @type ^`d8.w` @kind object;
  #L2fa918.  call `e`(v0, v2, v3) @signature `Ld8/w;.e:(Ll8/c;Ljava/lang/Object;)V` @kind virtual;
  #L2fa91e.  return @kind void;
}
