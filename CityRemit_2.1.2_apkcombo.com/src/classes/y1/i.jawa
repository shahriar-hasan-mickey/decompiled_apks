record `y1.i` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `y1.i.a` @AccessFlag PUBLIC_FINAL;
  `v1.j1` `y1.i.b` @AccessFlag PUBLIC_FINAL;
  `v1.j1` `y1.i.c` @AccessFlag PUBLIC_FINAL;
  `int` `y1.i.d` @AccessFlag PUBLIC_FINAL;
  `int` `y1.i.e` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`y1.i` v1 @kind this, `java.lang.String` v2 @kind object, `v1.j1` v3 @kind object, `v1.j1` v4 @kind object, `int` v5 , `int` v6 ) @signature `Ly1/i;.<init>:(Ljava/lang/String;Lv1/j1;Lv1/j1;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f1a90.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f1a96.  if v5 == 0 then goto L4f1aa4;
  #L4f1a9a.  if v6 != 0 then goto L4f1aa0;
  #L4f1a9e.  goto L4f1aa4;
  #L4f1aa0.  v0:= 0I;
  #L4f1aa2.  goto L4f1aa6;
  #L4f1aa4.  v0:= 1I;
  #L4f1aa6.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L4f1aac.  call temp:= `d`(v2) @signature `Ls3/a;.d:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4f1ab2.  v2:= temp @kind object;
  #L4f1ab4.  v1.`y1.i.a` @type ^`java.lang.String` := v2 @kind object;
  #L4f1ab8.  call temp:= `e`(v3) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4f1abe.  v2:= temp @kind object;
  #L4f1ac0.  v2:= (`v1.j1`) v2 @kind object;
  #L4f1ac4.  v1.`y1.i.b` @type ^`v1.j1` := v2 @kind object;
  #L4f1ac8.  call temp:= `e`(v4) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4f1ace.  v2:= temp @kind object;
  #L4f1ad0.  v2:= (`v1.j1`) v2 @kind object;
  #L4f1ad4.  v1.`y1.i.c` @type ^`v1.j1` := v2 @kind object;
  #L4f1ad8.  v1.`y1.i.d` @type ^`int` := v5;
  #L4f1adc.  v1.`y1.i.e` @type ^`int` := v6;
  #L4f1ae0.  return @kind void;
}
procedure `boolean` `equals`(`y1.i` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ly1/i;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f19a4.  v0:= 1I;
  #L4f19a6.  if v4 != v5 then goto L4f19ac;
  #L4f19aa.  return v0;
  #L4f19ac.  v1:= 0I;
  #L4f19ae.  if v5 == 0 then goto L4f1a22;
  #L4f19b2.  v2:= constclass @type ^`y1.i` @kind object;
  #L4f19b6.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4f19bc.  v3:= temp @kind object;
  #L4f19be.  if v2 == v3 then goto L4f19c4;
  #L4f19c2.  goto L4f1a22;
  #L4f19c4.  v5:= (`y1.i`) v5 @kind object;
  #L4f19c8.  v2:= v4.`y1.i.d` @type ^`int`;
  #L4f19cc.  v3:= v5.`y1.i.d` @type ^`int`;
  #L4f19d0.  if v2 != v3 then goto L4f1a1e;
  #L4f19d4.  v2:= v4.`y1.i.e` @type ^`int`;
  #L4f19d8.  v3:= v5.`y1.i.e` @type ^`int`;
  #L4f19dc.  if v2 != v3 then goto L4f1a1e;
  #L4f19e0.  v2:= v4.`y1.i.a` @type ^`java.lang.String` @kind object;
  #L4f19e4.  v3:= v5.`y1.i.a` @type ^`java.lang.String` @kind object;
  #L4f19e8.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f19ee.  v2:= temp;
  #L4f19f0.  if v2 == 0 then goto L4f1a1e;
  #L4f19f4.  v2:= v4.`y1.i.b` @type ^`v1.j1` @kind object;
  #L4f19f8.  v3:= v5.`y1.i.b` @type ^`v1.j1` @kind object;
  #L4f19fc.  call temp:= `equals`(v2, v3) @signature `Lv1/j1;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f1a02.  v2:= temp;
  #L4f1a04.  if v2 == 0 then goto L4f1a1e;
  #L4f1a08.  v2:= v4.`y1.i.c` @type ^`v1.j1` @kind object;
  #L4f1a0c.  v5:= v5.`y1.i.c` @type ^`v1.j1` @kind object;
  #L4f1a10.  call temp:= `equals`(v2, v5) @signature `Lv1/j1;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f1a16.  v5:= temp;
  #L4f1a18.  if v5 == 0 then goto L4f1a1e;
  #L4f1a1c.  goto L4f1a20;
  #L4f1a1e.  v0:= 0I;
  #L4f1a20.  return v0;
  #L4f1a22.  return v1;
}
procedure `int` `hashCode`(`y1.i` v2 @kind this) @signature `Ly1/i;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f1a34.  v0:= v2.`y1.i.d` @type ^`int`;
  #L4f1a38.  v1:= 527I;
  #L4f1a3c.  v1:= v1 + v0 @kind int;
  #L4f1a3e.  v1:= v1 * 31;
  #L4f1a42.  v0:= v2.`y1.i.e` @type ^`int`;
  #L4f1a46.  v1:= v1 + v0 @kind int;
  #L4f1a48.  v1:= v1 * 31;
  #L4f1a4c.  v0:= v2.`y1.i.a` @type ^`java.lang.String` @kind object;
  #L4f1a50.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4f1a56.  v0:= temp;
  #L4f1a58.  v1:= v1 + v0 @kind int;
  #L4f1a5a.  v1:= v1 * 31;
  #L4f1a5e.  v0:= v2.`y1.i.b` @type ^`v1.j1` @kind object;
  #L4f1a62.  call temp:= `hashCode`(v0) @signature `Lv1/j1;.hashCode:()I` @kind virtual;
  #L4f1a68.  v0:= temp;
  #L4f1a6a.  v1:= v1 + v0 @kind int;
  #L4f1a6c.  v1:= v1 * 31;
  #L4f1a70.  v0:= v2.`y1.i.c` @type ^`v1.j1` @kind object;
  #L4f1a74.  call temp:= `hashCode`(v0) @signature `Lv1/j1;.hashCode:()I` @kind virtual;
  #L4f1a7a.  v0:= temp;
  #L4f1a7c.  v1:= v1 + v0 @kind int;
  #L4f1a7e.  return v1;
}
