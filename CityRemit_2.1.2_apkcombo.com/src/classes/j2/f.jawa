record `j2.f` @kind class @AccessFlag FINAL {
  `int` `j2.f.a` @AccessFlag PUBLIC;
  `int` `j2.f.b` @AccessFlag PUBLIC;
  `long` `j2.f.c` @AccessFlag PUBLIC;
  `int` `j2.f.d` @AccessFlag PUBLIC;
  `int` `j2.f.e` @AccessFlag PUBLIC;
  `int` `j2.f.f` @AccessFlag PUBLIC;
  `int`[] `j2.f.g` @AccessFlag PUBLIC_FINAL;
  `s3.z` `j2.f.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`j2.f` v2 @kind this) @signature `Lj2/f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3926dc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3926e2.  v0:= 255I;
  #L3926e6.  v1:= new `int`[v0];
  #L3926ea.  v2.`j2.f.g` @type ^`int`[] := v1 @kind object;
  #L3926ee.  v1:= new `s3.z`;
  #L3926f2.  call `<init>`(v1, v0) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L3926f8.  v2.`j2.f.h` @type ^`s3.z` := v1 @kind object;
  #L3926fc.  return @kind void;
}
procedure `boolean` `a`(`j2.f` v6 @kind this, `a2.m` v7 @kind object, `boolean` v8 ) @signature `Lj2/f;.a:(La2/m;Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3924a8.  call `b`(v6) @signature `Lj2/f;.b:()V` @kind virtual;
  #L3924ae.  v0:= v6.`j2.f.h` @type ^`s3.z` @kind object;
  #L3924b2.  v1:= 27I;
  #L3924b6.  call `K`(v0, v1) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L3924bc.  v0:= v6.`j2.f.h` @type ^`s3.z` @kind object;
  #L3924c0.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3924c6.  v0:= temp @kind object;
  #L3924c8.  v2:= 0I;
  #L3924ca.  call temp:= `b`(v7, v0, v2, v1, v8) @signature `La2/o;.b:(La2/m;[BIIZ)Z` @kind static;
  #L3924d0.  v0:= temp;
  #L3924d2.  if v0 == 0 then goto L3925d0;
  #L3924d6.  v0:= v6.`j2.f.h` @type ^`s3.z` @kind object;
  #L3924da.  call temp:= `E`(v0) @signature `Ls3/z;.E:()J` @kind virtual;
  #L3924e0.  v0:= temp @kind wide;
  #L3924e2.  v3:= 1332176723L;
  #L3924e8.  v5:= lcmp(v0, v3);
  #L3924ec.  if v5 == 0 then goto L3924f2;
  #L3924f0.  goto L3925d0;
  #L3924f2.  v0:= v6.`j2.f.h` @type ^`s3.z` @kind object;
  #L3924f6.  call temp:= `C`(v0) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3924fc.  v0:= temp;
  #L3924fe.  v6.`j2.f.a` @type ^`int` := v0;
  #L392502.  if v0 == 0 then goto L39251a;
  #L392506.  if v8 == 0 then goto L39250c;
  #L39250a.  return v2;
  #L39250c.  v7:= "unsupported bit stream revision" @kind object;
  #L392510.  call temp:= `d`(v7) @signature `Lv1/e2;.d:(Ljava/lang/String;)Lv1/e2;` @kind static;
  #L392516.  v7:= temp @kind object;
  #L392518.  throw v7;
  #L39251a.  v0:= v6.`j2.f.h` @type ^`s3.z` @kind object;
  #L39251e.  call temp:= `C`(v0) @signature `Ls3/z;.C:()I` @kind virtual;
  #L392524.  v0:= temp;
  #L392526.  v6.`j2.f.b` @type ^`int` := v0;
  #L39252a.  v0:= v6.`j2.f.h` @type ^`s3.z` @kind object;
  #L39252e.  call temp:= `q`(v0) @signature `Ls3/z;.q:()J` @kind virtual;
  #L392534.  v0:= temp @kind wide;
  #L392536.  v6.`j2.f.c` @type ^`long` := v0 @kind wide;
  #L39253a.  v0:= v6.`j2.f.h` @type ^`s3.z` @kind object;
  #L39253e.  call temp:= `s`(v0) @signature `Ls3/z;.s:()J` @kind virtual;
  #L392544.  v0:= v6.`j2.f.h` @type ^`s3.z` @kind object;
  #L392548.  call temp:= `s`(v0) @signature `Ls3/z;.s:()J` @kind virtual;
  #L39254e.  v0:= v6.`j2.f.h` @type ^`s3.z` @kind object;
  #L392552.  call temp:= `s`(v0) @signature `Ls3/z;.s:()J` @kind virtual;
  #L392558.  v0:= v6.`j2.f.h` @type ^`s3.z` @kind object;
  #L39255c.  call temp:= `C`(v0) @signature `Ls3/z;.C:()I` @kind virtual;
  #L392562.  v0:= temp;
  #L392564.  v6.`j2.f.d` @type ^`int` := v0;
  #L392568.  v1:= v0 + 27;
  #L39256c.  v6.`j2.f.e` @type ^`int` := v1;
  #L392570.  v1:= v6.`j2.f.h` @type ^`s3.z` @kind object;
  #L392574.  call `K`(v1, v0) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L39257a.  v0:= v6.`j2.f.h` @type ^`s3.z` @kind object;
  #L39257e.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L392584.  v0:= temp @kind object;
  #L392586.  v1:= v6.`j2.f.d` @type ^`int`;
  #L39258a.  call temp:= `b`(v7, v0, v2, v1, v8) @signature `La2/o;.b:(La2/m;[BIIZ)Z` @kind static;
  #L392590.  v7:= temp;
  #L392592.  if v7 != 0 then goto L392598;
  #L392596.  return v2;
  #L392598.  v7:= v6.`j2.f.d` @type ^`int`;
  #L39259c.  if v2 >= v7 then goto L3925cc;
  #L3925a0.  v7:= v6.`j2.f.g` @type ^`int`[] @kind object;
  #L3925a4.  v8:= v6.`j2.f.h` @type ^`s3.z` @kind object;
  #L3925a8.  call temp:= `C`(v8) @signature `Ls3/z;.C:()I` @kind virtual;
  #L3925ae.  v8:= temp;
  #L3925b0.  v7[v2]:= v8;
  #L3925b4.  v7:= v6.`j2.f.f` @type ^`int`;
  #L3925b8.  v8:= v6.`j2.f.g` @type ^`int`[] @kind object;
  #L3925bc.  v8:= v8[v2];
  #L3925c0.  v7:= v7 + v8 @kind int;
  #L3925c2.  v6.`j2.f.f` @type ^`int` := v7;
  #L3925c6.  v2:= v2 + 1;
  #L3925ca.  goto L392598;
  #L3925cc.  v7:= 1I;
  #L3925ce.  return v7;
  #L3925d0.  return v2;
}
procedure `void` `b`(`j2.f` v3 @kind this) @signature `Lj2/f;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L392710.  v0:= 0I;
  #L392712.  v3.`j2.f.a` @type ^`int` := v0;
  #L392716.  v3.`j2.f.b` @type ^`int` := v0;
  #L39271a.  v1:= 0L;
  #L39271e.  v3.`j2.f.c` @type ^`long` := v1 @kind wide;
  #L392722.  v3.`j2.f.d` @type ^`int` := v0;
  #L392726.  v3.`j2.f.e` @type ^`int` := v0;
  #L39272a.  v3.`j2.f.f` @type ^`int` := v0;
  #L39272e.  return @kind void;
}
procedure `boolean` `c`(`j2.f` v2 @kind this, `a2.m` v3 @kind object) @signature `Lj2/f;.c:(La2/m;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3925e4.  v0:= -1L;
  #L3925e8.  call temp:= `d`(v2, v3, v0) @signature `Lj2/f;.d:(La2/m;J)Z` @kind virtual;
  #L3925ee.  v3:= temp;
  #L3925f0.  return v3;
}
procedure `boolean` `d`(`j2.f` v8 @kind this, `a2.m` v9 @kind object, `long` v10 ) @signature `Lj2/f;.d:(La2/m;J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L392604.  call temp:= `q`(v9) @signature `La2/m;.q:()J` @kind interface;
  #L39260a.  v0:= temp @kind wide;
  #L39260c.  call temp:= `n`(v9) @signature `La2/m;.n:()J` @kind interface;
  #L392612.  v2:= temp @kind wide;
  #L392614.  v4:= 0I;
  #L392616.  v5:= 1I;
  #L392618.  v6:= lcmp(v0, v2);
  #L39261c.  if v6 != 0 then goto L392624;
  #L392620.  v0:= 1I;
  #L392622.  goto L392626;
  #L392624.  v0:= 0I;
  #L392626.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L39262c.  v0:= v8.`j2.f.h` @type ^`s3.z` @kind object;
  #L392630.  v1:= 4I;
  #L392632.  call `K`(v0, v1) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L392638.  v2:= -1L;
  #L39263c.  v0:= lcmp(v10, v2);
  #L392640.  if v0 == 0 then goto L39265a;
  #L392644.  call temp:= `q`(v9) @signature `La2/m;.q:()J` @kind interface;
  #L39264a.  v2:= temp @kind wide;
  #L39264c.  v6:= 4L;
  #L392650.  v2:= v2 + v6 @kind long;
  #L392652.  v6:= lcmp(v2, v10);
  #L392656.  if v6 >= 0 then goto L3926a6;
  #L39265a.  v2:= v8.`j2.f.h` @type ^`s3.z` @kind object;
  #L39265e.  call temp:= `d`(v2) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L392664.  v2:= temp @kind object;
  #L392666.  call temp:= `b`(v9, v2, v4, v1, v5) @signature `La2/o;.b:(La2/m;[BIIZ)Z` @kind static;
  #L39266c.  v2:= temp;
  #L39266e.  if v2 == 0 then goto L3926a6;
  #L392672.  v0:= v8.`j2.f.h` @type ^`s3.z` @kind object;
  #L392676.  call `O`(v0, v4) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L39267c.  v0:= v8.`j2.f.h` @type ^`s3.z` @kind object;
  #L392680.  call temp:= `E`(v0) @signature `Ls3/z;.E:()J` @kind virtual;
  #L392686.  v2:= temp @kind wide;
  #L392688.  v6:= 1332176723L;
  #L39268e.  v0:= lcmp(v2, v6);
  #L392692.  if v0 != 0 then goto L39269e;
  #L392696.  call `i`(v9) @signature `La2/m;.i:()V` @kind interface;
  #L39269c.  return v5;
  #L39269e.  call `j`(v9, v5) @signature `La2/m;.j:(I)V` @kind interface;
  #L3926a4.  goto L392638;
  #L3926a6.  if v0 == 0 then goto L3926ba;
  #L3926aa.  call temp:= `q`(v9) @signature `La2/m;.q:()J` @kind interface;
  #L3926b0.  v1:= temp @kind wide;
  #L3926b2.  v3:= lcmp(v1, v10);
  #L3926b6.  if v3 >= 0 then goto L3926ca;
  #L3926ba.  call temp:= `d`(v9, v5) @signature `La2/m;.d:(I)I` @kind interface;
  #L3926c0.  v1:= temp;
  #L3926c2.  v2:= -1I;
  #L3926c4.  if v1 == v2 then goto L3926ca;
  #L3926c8.  goto L3926a6;
  #L3926ca.  return v4;
}
