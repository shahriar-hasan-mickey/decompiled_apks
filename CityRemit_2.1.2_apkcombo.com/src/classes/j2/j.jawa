record `j2.j` @kind class @AccessFlag FINAL extends `j2.i` @kind class {
  `j2.j$a` `j2.j.n` @AccessFlag PRIVATE;
  `int` `j2.j.o` @AccessFlag PRIVATE;
  `boolean` `j2.j.p` @AccessFlag PRIVATE;
  `a2.g0$d` `j2.j.q` @AccessFlag PRIVATE;
  `a2.g0$b` `j2.j.r` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`j2.j` v0 @kind this) @signature `Lj2/j;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3931b0.  call `<init>`(v0) @signature `Lj2/i;.<init>:()V` @kind direct;
  #L3931b6.  return @kind void;
}
procedure `void` `n`(`s3.z` v6 @kind object, `long` v7 ) @signature `Lj2/j;.n:(Ls3/z;J)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3931c8.  call temp:= `b`(v6) @signature `Ls3/z;.b:()I` @kind virtual;
  #L3931ce.  v0:= temp;
  #L3931d0.  call temp:= `f`(v6) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3931d6.  v1:= temp;
  #L3931d8.  v1:= v1 + 4;
  #L3931dc.  if v0 >= v1 then goto L393204;
  #L3931e0.  call temp:= `d`(v6) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3931e6.  v0:= temp @kind object;
  #L3931e8.  call temp:= `f`(v6) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3931ee.  v1:= temp;
  #L3931f0.  v1:= v1 + 4;
  #L3931f4.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L3931fa.  v0:= temp @kind object;
  #L3931fc.  call `L`(v6, v0) @signature `Ls3/z;.L:([B)V` @kind virtual;
  #L393202.  goto L393216;
  #L393204.  call temp:= `f`(v6) @signature `Ls3/z;.f:()I` @kind virtual;
  #L39320a.  v0:= temp;
  #L39320c.  v0:= v0 + 4;
  #L393210.  call `N`(v6, v0) @signature `Ls3/z;.N:(I)V` @kind virtual;
  #L393216.  call temp:= `d`(v6) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L39321c.  v0:= temp @kind object;
  #L39321e.  call temp:= `f`(v6) @signature `Ls3/z;.f:()I` @kind virtual;
  #L393224.  v1:= temp;
  #L393226.  v1:= v1 + -4;
  #L39322a.  v2:= 255L;
  #L39322e.  v4:= v7 ^& v2 @kind long;
  #L393232.  v5:= (`int`) v4 @kind l2i;
  #L393234.  v4:= (`byte`) v5 @kind i2b;
  #L393236.  v0[v1]:= v4 @kind byte;
  #L39323a.  call temp:= `f`(v6) @signature `Ls3/z;.f:()I` @kind virtual;
  #L393240.  v1:= temp;
  #L393242.  v1:= v1 + -3;
  #L393246.  v4:= 8I;
  #L39324a.  v4:= v7 ^>> v4 @kind long;
  #L39324e.  v4:= v4 ^& v2 @kind long;
  #L393250.  v5:= (`int`) v4 @kind l2i;
  #L393252.  v4:= (`byte`) v5 @kind i2b;
  #L393254.  v0[v1]:= v4 @kind byte;
  #L393258.  call temp:= `f`(v6) @signature `Ls3/z;.f:()I` @kind virtual;
  #L39325e.  v1:= temp;
  #L393260.  v1:= v1 + -2;
  #L393264.  v4:= 16I;
  #L393268.  v4:= v7 ^>> v4 @kind long;
  #L39326c.  v4:= v4 ^& v2 @kind long;
  #L39326e.  v5:= (`int`) v4 @kind l2i;
  #L393270.  v4:= (`byte`) v5 @kind i2b;
  #L393272.  v0[v1]:= v4 @kind byte;
  #L393276.  call temp:= `f`(v6) @signature `Ls3/z;.f:()I` @kind virtual;
  #L39327c.  v6:= temp;
  #L39327e.  v6:= v6 + -1;
  #L393282.  v1:= 24I;
  #L393286.  v7:= v7 ^>> v1 @kind long;
  #L393288.  v7:= v7 ^& v2 @kind long;
  #L39328a.  v8:= (`int`) v7 @kind l2i;
  #L39328c.  v7:= (`byte`) v8 @kind i2b;
  #L39328e.  v0[v6]:= v7 @kind byte;
  #L393292.  return @kind void;
}
procedure `int` `o`(`byte` v2 , `j2.j$a` v3 @kind object) @signature `Lj2/j;.o:(BLj2/j$a;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L393048.  v0:= v3.`j2.j$a.e` @type ^`int`;
  #L39304c.  v1:= 1I;
  #L39304e.  call temp:= `p`(v2, v0, v1) @signature `Lj2/j;.p:(BII)I` @kind static;
  #L393054.  v2:= temp;
  #L393056.  v0:= v3.`j2.j$a.d` @type ^`a2.g0$c`[] @kind object;
  #L39305a.  v2:= v0[v2] @kind object;
  #L39305e.  v2:= v2.`a2.g0$c.a` @type ^`boolean` @kind boolean;
  #L393062.  if v2 != 0 then goto L393070;
  #L393066.  v2:= v3.`j2.j$a.a` @type ^`a2.g0$d` @kind object;
  #L39306a.  v2:= v2.`a2.g0$d.e` @type ^`int`;
  #L39306e.  goto L393078;
  #L393070.  v2:= v3.`j2.j$a.a` @type ^`a2.g0$d` @kind object;
  #L393074.  v2:= v2.`a2.g0$d.f` @type ^`int`;
  #L393078.  return v2;
}
procedure `int` `p`(`byte` v0 , `int` v1 , `int` v2 ) @signature `Lj2/j;.p:(BII)I` @AccessFlag STATIC {
    temp;

  #L39308c.  v0:= v0 ^> v2 @kind int;
  #L39308e.  v1:= v1 - 8;
  #L393092.  v2:= 255I;
  #L393096.  v1:= v2 ^>> v1 @kind int;
  #L39309a.  v0:= v0 ^& v1 @kind int;
  #L39309c.  return v0;
}
procedure `boolean` `r`(`s3.z` v1 @kind object) @signature `Lj2/j;.r:(Ls3/z;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L393018.  v0:= 1I;
  #L39301a.  call temp:= `m`(v0, v1, v0) @signature `La2/g0;.m:(ILs3/z;Z)Z` @kind static;
  #L393020.  v1:= temp;
  #L393022.  return v1;
  #L393024.  v1:= 0I;
  #L393026.  return v1;
  catch `v1.e2` @[L39301a..L393022] goto L393024;
}
procedure `void` `e`(`j2.j` v4 @kind this, `long` v5 ) @signature `Lj2/j;.e:(J)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3932a4.  call `e`(v4, v5) @signature `Lj2/i;.e:(J)V` @kind super;
  #L3932aa.  v0:= 0I;
  #L3932ac.  v1:= 0L;
  #L3932b0.  v3:= lcmp(v5, v1);
  #L3932b4.  if v3 == 0 then goto L3932bc;
  #L3932b8.  v5:= 1I;
  #L3932ba.  goto L3932be;
  #L3932bc.  v5:= 0I;
  #L3932be.  v4.`j2.j.p` @type ^`boolean` := v5 @kind boolean;
  #L3932c2.  v5:= v4.`j2.j.q` @type ^`a2.g0$d` @kind object;
  #L3932c6.  if v5 == 0 then goto L3932ce;
  #L3932ca.  v0:= v5.`a2.g0$d.e` @type ^`int`;
  #L3932ce.  v4.`j2.j.o` @type ^`int` := v0;
  #L3932d2.  return @kind void;
}
procedure `long` `f`(`j2.j` v5 @kind this, `s3.z` v6 @kind object) @signature `Lj2/j;.f:(Ls3/z;)J` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39313c.  call temp:= `d`(v6) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L393142.  v0:= temp @kind object;
  #L393144.  v1:= 0I;
  #L393146.  v0:= v0[v1] @kind byte;
  #L39314a.  v2:= 1I;
  #L39314c.  v0:= v0 ^& v2 @kind int;
  #L39314e.  if v0 != v2 then goto L393158;
  #L393152.  v0:= -1L;
  #L393156.  return v0 @kind wide;
  #L393158.  call temp:= `d`(v6) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L39315e.  v0:= temp @kind object;
  #L393160.  v0:= v0[v1] @kind byte;
  #L393164.  v3:= v5.`j2.j.n` @type ^`j2.j$a` @kind object;
  #L393168.  call temp:= `h`(v3) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L39316e.  v3:= temp @kind object;
  #L393170.  v3:= (`j2.j$a`) v3 @kind object;
  #L393174.  call temp:= `o`(v0, v3) @signature `Lj2/j;.o:(BLj2/j$a;)I` @kind static;
  #L39317a.  v0:= temp;
  #L39317c.  v3:= v5.`j2.j.p` @type ^`boolean` @kind boolean;
  #L393180.  if v3 == 0 then goto L39318e;
  #L393184.  v1:= v5.`j2.j.o` @type ^`int`;
  #L393188.  v1:= v1 + v0 @kind int;
  #L39318a.  v1:= v1 / 4;
  #L39318e.  v3:= (`long`) v1 @kind i2l;
  #L393190.  call `n`(v6, v3) @signature `Lj2/j;.n:(Ls3/z;J)V` @kind static;
  #L393196.  v5.`j2.j.p` @type ^`boolean` := v2 @kind boolean;
  #L39319a.  v5.`j2.j.o` @type ^`int` := v0;
  #L39319e.  return v3 @kind wide;
}
procedure `boolean` `i`(`j2.j` v3 @kind this, `s3.z` v4 @kind object, `long` v5 , `j2.i$b` v7 @kind object) @signature `Lj2/j;.i:(Ls3/z;JLj2/i$b;)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L392f40.  v5:= v3.`j2.j.n` @type ^`j2.j$a` @kind object;
  #L392f44.  if v5 == 0 then goto L392f56;
  #L392f48.  v4:= v7.`j2.i$b.a` @type ^`v1.j1` @kind object;
  #L392f4c.  call temp:= `e`(v4) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L392f52.  v4:= 0I;
  #L392f54.  return v4;
  #L392f56.  call temp:= `q`(v3, v4) @signature `Lj2/j;.q:(Ls3/z;)Lj2/j$a;` @kind virtual;
  #L392f5c.  v4:= temp @kind object;
  #L392f5e.  v3.`j2.j.n` @type ^`j2.j$a` := v4 @kind object;
  #L392f62.  v5:= 1I;
  #L392f64.  if v4 != 0 then goto L392f6a;
  #L392f68.  return v5;
  #L392f6a.  v6:= v4.`j2.j$a.a` @type ^`a2.g0$d` @kind object;
  #L392f6e.  v0:= new `java.util.ArrayList`;
  #L392f72.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L392f78.  v1:= v6.`a2.g0$d.g` @type ^`byte`[] @kind object;
  #L392f7c.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L392f82.  v1:= v4.`j2.j$a.c` @type ^`byte`[] @kind object;
  #L392f86.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L392f8c.  v4:= v4.`j2.j$a.b` @type ^`a2.g0$b` @kind object;
  #L392f90.  v4:= v4.`a2.g0$b.a` @type ^`java.lang.String`[] @kind object;
  #L392f94.  call temp:= `S`(v4) @signature `Lm5/q;.S:([Ljava/lang/Object;)Lm5/q;` @kind static;
  #L392f9a.  v4:= temp @kind object;
  #L392f9c.  call temp:= `c`(v4) @signature `La2/g0;.c:(Ljava/util/List;)Ln2/a;` @kind static;
  #L392fa2.  v4:= temp @kind object;
  #L392fa4.  v1:= new `v1.j1$b`;
  #L392fa8.  call `<init>`(v1) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L392fae.  v2:= "audio/vorbis" @kind object;
  #L392fb2.  call temp:= `e0`(v1, v2) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L392fb8.  v1:= temp @kind object;
  #L392fba.  v2:= v6.`a2.g0$d.d` @type ^`int`;
  #L392fbe.  call temp:= `G`(v1, v2) @signature `Lv1/j1$b;.G:(I)Lv1/j1$b;` @kind virtual;
  #L392fc4.  v1:= temp @kind object;
  #L392fc6.  v2:= v6.`a2.g0$d.c` @type ^`int`;
  #L392fca.  call temp:= `Z`(v1, v2) @signature `Lv1/j1$b;.Z:(I)Lv1/j1$b;` @kind virtual;
  #L392fd0.  v1:= temp @kind object;
  #L392fd2.  v2:= v6.`a2.g0$d.a` @type ^`int`;
  #L392fd6.  call temp:= `H`(v1, v2) @signature `Lv1/j1$b;.H:(I)Lv1/j1$b;` @kind virtual;
  #L392fdc.  v1:= temp @kind object;
  #L392fde.  v6:= v6.`a2.g0$d.b` @type ^`int`;
  #L392fe2.  call temp:= `f0`(v1, v6) @signature `Lv1/j1$b;.f0:(I)Lv1/j1$b;` @kind virtual;
  #L392fe8.  v6:= temp @kind object;
  #L392fea.  call temp:= `T`(v6, v0) @signature `Lv1/j1$b;.T:(Ljava/util/List;)Lv1/j1$b;` @kind virtual;
  #L392ff0.  v6:= temp @kind object;
  #L392ff2.  call temp:= `X`(v6, v4) @signature `Lv1/j1$b;.X:(Ln2/a;)Lv1/j1$b;` @kind virtual;
  #L392ff8.  v4:= temp @kind object;
  #L392ffa.  call temp:= `E`(v4) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L393000.  v4:= temp @kind object;
  #L393002.  v7.`j2.i$b.a` @type ^`v1.j1` := v4 @kind object;
  #L393006.  return v5;
}
procedure `void` `l`(`j2.j` v0 @kind this, `boolean` v1 ) @signature `Lj2/j;.l:(Z)V` @AccessFlag PROTECTED {
    temp;

  #L3932e4.  call `l`(v0, v1) @signature `Lj2/i;.l:(Z)V` @kind super;
  #L3932ea.  if v1 == 0 then goto L3932fc;
  #L3932ee.  v1:= 0I;
  #L3932f0.  v0.`j2.j.n` @type ^`j2.j$a` := v1 @kind object;
  #L3932f4.  v0.`j2.j.q` @type ^`a2.g0$d` := v1 @kind object;
  #L3932f8.  v0.`j2.j.r` @type ^`a2.g0$b` := v1 @kind object;
  #L3932fc.  v1:= 0I;
  #L3932fe.  v0.`j2.j.o` @type ^`int` := v1;
  #L393302.  v0.`j2.j.p` @type ^`boolean` := v1 @kind boolean;
  #L393306.  return @kind void;
}
procedure `j2.j$a` `q`(`j2.j` v6 @kind this, `s3.z` v7 @kind object) @signature `Lj2/j;.q:(Ls3/z;)Lj2/j$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3930b0.  v1:= v6.`j2.j.q` @type ^`a2.g0$d` @kind object;
  #L3930b4.  v0:= 0I;
  #L3930b6.  if v1 != 0 then goto L3930c8;
  #L3930ba.  call temp:= `k`(v7) @signature `La2/g0;.k:(Ls3/z;)La2/g0$d;` @kind static;
  #L3930c0.  v7:= temp @kind object;
  #L3930c2.  v6.`j2.j.q` @type ^`a2.g0$d` := v7 @kind object;
  #L3930c6.  return v0 @kind object;
  #L3930c8.  v2:= v6.`j2.j.r` @type ^`a2.g0$b` @kind object;
  #L3930cc.  if v2 != 0 then goto L3930de;
  #L3930d0.  call temp:= `i`(v7) @signature `La2/g0;.i:(Ls3/z;)La2/g0$b;` @kind static;
  #L3930d6.  v7:= temp @kind object;
  #L3930d8.  v6.`j2.j.r` @type ^`a2.g0$b` := v7 @kind object;
  #L3930dc.  return v0 @kind object;
  #L3930de.  call temp:= `f`(v7) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3930e4.  v0:= temp;
  #L3930e6.  v3:= new `byte`[v0];
  #L3930ea.  call temp:= `d`(v7) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3930f0.  v0:= temp @kind object;
  #L3930f2.  call temp:= `f`(v7) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3930f8.  v4:= temp;
  #L3930fa.  v5:= 0I;
  #L3930fc.  call `arraycopy`(v0, v5, v3, v5, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L393102.  v0:= v1.`a2.g0$d.a` @type ^`int`;
  #L393106.  call temp:= `l`(v7, v0) @signature `La2/g0;.l:(Ls3/z;I)[La2/g0$c;` @kind static;
  #L39310c.  v4:= temp @kind object;
  #L39310e.  v7:= length @variable v4;
  #L393110.  v7:= v7 + -1;
  #L393114.  call temp:= `a`(v7) @signature `La2/g0;.a:(I)I` @kind static;
  #L39311a.  v5:= temp;
  #L39311c.  v7:= new `j2.j$a`;
  #L393120.  v0:= v7 @kind object;
  #L393122.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lj2/j$a;.<init>:(La2/g0$d;La2/g0$b;[B[La2/g0$c;I)V` @kind direct;
  #L393128.  return v7 @kind object;
}
