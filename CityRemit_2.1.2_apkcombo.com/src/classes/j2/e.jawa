record `j2.e` @kind class @AccessFlag FINAL {
  `j2.f` `j2.e.a` @AccessFlag PRIVATE_FINAL;
  `s3.z` `j2.e.b` @AccessFlag PRIVATE_FINAL;
  `int` `j2.e.c` @AccessFlag PRIVATE;
  `int` `j2.e.d` @AccessFlag PRIVATE;
  `boolean` `j2.e.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`j2.e` v3 @kind this) @signature `Lj2/e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3923c4.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3923ca.  v0:= new `j2.f`;
  #L3923ce.  call `<init>`(v0) @signature `Lj2/f;.<init>:()V` @kind direct;
  #L3923d4.  v3.`j2.e.a` @type ^`j2.f` := v0 @kind object;
  #L3923d8.  v0:= new `s3.z`;
  #L3923dc.  v1:= 65025I;
  #L3923e2.  v1:= new `byte`[v1];
  #L3923e6.  v2:= 0I;
  #L3923e8.  call `<init>`(v0, v1, v2) @signature `Ls3/z;.<init>:([BI)V` @kind direct;
  #L3923ee.  v3.`j2.e.b` @type ^`s3.z` := v0 @kind object;
  #L3923f2.  v0:= -1I;
  #L3923f4.  v3.`j2.e.c` @type ^`int` := v0;
  #L3923f8.  return @kind void;
}
procedure `int` `a`(`j2.e` v5 @kind this, `int` v6 ) @signature `Lj2/e;.a:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39234c.  v0:= 0I;
  #L39234e.  v5.`j2.e.d` @type ^`int` := v0;
  #L392352.  v1:= v5.`j2.e.d` @type ^`int`;
  #L392356.  v2:= v6 + v1 @kind int;
  #L39235a.  v3:= v5.`j2.e.a` @type ^`j2.f` @kind object;
  #L39235e.  v4:= v3.`j2.f.d` @type ^`int`;
  #L392362.  if v2 >= v4 then goto L392382;
  #L392366.  v2:= v3.`j2.f.g` @type ^`int`[] @kind object;
  #L39236a.  v3:= v1 + 1;
  #L39236e.  v5.`j2.e.d` @type ^`int` := v3;
  #L392372.  v1:= v1 + v6 @kind int;
  #L392374.  v1:= v2[v1];
  #L392378.  v0:= v0 + v1 @kind int;
  #L39237a.  v2:= 255I;
  #L39237e.  if v1 == v2 then goto L392352;
  #L392382.  return v0;
}
procedure `j2.f` `b`(`j2.e` v1 @kind this) @signature `Lj2/e;.b:()Lj2/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392394.  v0:= v1.`j2.e.a` @type ^`j2.f` @kind object;
  #L392398.  return v0 @kind object;
}
procedure `s3.z` `c`(`j2.e` v1 @kind this) @signature `Lj2/e;.c:()Ls3/z;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3923ac.  v0:= v1.`j2.e.b` @type ^`s3.z` @kind object;
  #L3923b0.  return v0 @kind object;
}
procedure `boolean` `d`(`j2.e` v6 @kind this, `a2.m` v7 @kind object) @signature `Lj2/e;.d:(La2/m;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3921f0.  v0:= 1I;
  #L3921f2.  v1:= 0I;
  #L3921f4.  if v7 == 0 then goto L3921fc;
  #L3921f8.  v2:= 1I;
  #L3921fa.  goto L3921fe;
  #L3921fc.  v2:= 0I;
  #L3921fe.  call `f`(v2) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L392204.  v2:= v6.`j2.e.e` @type ^`boolean` @kind boolean;
  #L392208.  if v2 == 0 then goto L39221a;
  #L39220c.  v6.`j2.e.e` @type ^`boolean` := v1 @kind boolean;
  #L392210.  v2:= v6.`j2.e.b` @type ^`s3.z` @kind object;
  #L392214.  call `K`(v2, v1) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L39221a.  v2:= v6.`j2.e.e` @type ^`boolean` @kind boolean;
  #L39221e.  if v2 != 0 then goto L392338;
  #L392222.  v2:= v6.`j2.e.c` @type ^`int`;
  #L392226.  if v2 >= 0 then goto L392298;
  #L39222a.  v2:= v6.`j2.e.a` @type ^`j2.f` @kind object;
  #L39222e.  call temp:= `c`(v2, v7) @signature `Lj2/f;.c:(La2/m;)Z` @kind virtual;
  #L392234.  v2:= temp;
  #L392236.  if v2 == 0 then goto L392296;
  #L39223a.  v2:= v6.`j2.e.a` @type ^`j2.f` @kind object;
  #L39223e.  call temp:= `a`(v2, v7, v0) @signature `Lj2/f;.a:(La2/m;Z)Z` @kind virtual;
  #L392244.  v2:= temp;
  #L392246.  if v2 != 0 then goto L39224c;
  #L39224a.  goto L392296;
  #L39224c.  v2:= v6.`j2.e.a` @type ^`j2.f` @kind object;
  #L392250.  v3:= v2.`j2.f.e` @type ^`int`;
  #L392254.  v2:= v2.`j2.f.b` @type ^`int`;
  #L392258.  v2:= v2 ^& v0 @kind int;
  #L39225a.  if v2 != v0 then goto L392280;
  #L39225e.  v2:= v6.`j2.e.b` @type ^`s3.z` @kind object;
  #L392262.  call temp:= `f`(v2) @signature `Ls3/z;.f:()I` @kind virtual;
  #L392268.  v2:= temp;
  #L39226a.  if v2 != 0 then goto L392280;
  #L39226e.  call temp:= `a`(v6, v1) @signature `Lj2/e;.a:(I)I` @kind direct;
  #L392274.  v2:= temp;
  #L392276.  v3:= v3 + v2 @kind int;
  #L392278.  v2:= v6.`j2.e.d` @type ^`int`;
  #L39227c.  v2:= v2 + v1 @kind int;
  #L39227e.  goto L392282;
  #L392280.  v2:= 0I;
  #L392282.  call temp:= `e`(v7, v3) @signature `La2/o;.e:(La2/m;I)Z` @kind static;
  #L392288.  v3:= temp;
  #L39228a.  if v3 != 0 then goto L392290;
  #L39228e.  return v1;
  #L392290.  v6.`j2.e.c` @type ^`int` := v2;
  #L392294.  goto L392298;
  #L392296.  return v1;
  #L392298.  v2:= v6.`j2.e.c` @type ^`int`;
  #L39229c.  call temp:= `a`(v6, v2) @signature `Lj2/e;.a:(I)I` @kind direct;
  #L3922a2.  v2:= temp;
  #L3922a4.  v3:= v6.`j2.e.c` @type ^`int`;
  #L3922a8.  v4:= v6.`j2.e.d` @type ^`int`;
  #L3922ac.  v3:= v3 + v4 @kind int;
  #L3922ae.  if v2 <= 0 then goto L392322;
  #L3922b2.  v4:= v6.`j2.e.b` @type ^`s3.z` @kind object;
  #L3922b6.  call temp:= `f`(v4) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3922bc.  v5:= temp;
  #L3922be.  v5:= v5 + v2 @kind int;
  #L3922c0.  call `c`(v4, v5) @signature `Ls3/z;.c:(I)V` @kind virtual;
  #L3922c6.  v4:= v6.`j2.e.b` @type ^`s3.z` @kind object;
  #L3922ca.  call temp:= `d`(v4) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3922d0.  v4:= temp @kind object;
  #L3922d2.  v5:= v6.`j2.e.b` @type ^`s3.z` @kind object;
  #L3922d6.  call temp:= `f`(v5) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3922dc.  v5:= temp;
  #L3922de.  call temp:= `d`(v7, v4, v5, v2) @signature `La2/o;.d:(La2/m;[BII)Z` @kind static;
  #L3922e4.  v4:= temp;
  #L3922e6.  if v4 != 0 then goto L3922ec;
  #L3922ea.  return v1;
  #L3922ec.  v4:= v6.`j2.e.b` @type ^`s3.z` @kind object;
  #L3922f0.  call temp:= `f`(v4) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3922f6.  v5:= temp;
  #L3922f8.  v5:= v5 + v2 @kind int;
  #L3922fa.  call `N`(v4, v5) @signature `Ls3/z;.N:(I)V` @kind virtual;
  #L392300.  v2:= v6.`j2.e.a` @type ^`j2.f` @kind object;
  #L392304.  v2:= v2.`j2.f.g` @type ^`int`[] @kind object;
  #L392308.  v4:= v3 + -1;
  #L39230c.  v2:= v2[v4];
  #L392310.  v4:= 255I;
  #L392314.  if v2 == v4 then goto L39231c;
  #L392318.  v2:= 1I;
  #L39231a.  goto L39231e;
  #L39231c.  v2:= 0I;
  #L39231e.  v6.`j2.e.e` @type ^`boolean` := v2 @kind boolean;
  #L392322.  v2:= v6.`j2.e.a` @type ^`j2.f` @kind object;
  #L392326.  v2:= v2.`j2.f.d` @type ^`int`;
  #L39232a.  if v3 != v2 then goto L392330;
  #L39232e.  v3:= -1I;
  #L392330.  v6.`j2.e.c` @type ^`int` := v3;
  #L392334.  goto L39221a;
  #L392338.  return v0;
}
procedure `void` `e`(`j2.e` v2 @kind this) @signature `Lj2/e;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39240c.  v0:= v2.`j2.e.a` @type ^`j2.f` @kind object;
  #L392410.  call `b`(v0) @signature `Lj2/f;.b:()V` @kind virtual;
  #L392416.  v0:= v2.`j2.e.b` @type ^`s3.z` @kind object;
  #L39241a.  v1:= 0I;
  #L39241c.  call `K`(v0, v1) @signature `Ls3/z;.K:(I)V` @kind virtual;
  #L392422.  v0:= -1I;
  #L392424.  v2.`j2.e.c` @type ^`int` := v0;
  #L392428.  v2.`j2.e.e` @type ^`boolean` := v1 @kind boolean;
  #L39242c.  return @kind void;
}
procedure `void` `f`(`j2.e` v4 @kind this) @signature `Lj2/e;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L392440.  v0:= v4.`j2.e.b` @type ^`s3.z` @kind object;
  #L392444.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L39244a.  v0:= temp @kind object;
  #L39244c.  v0:= length @variable v0;
  #L39244e.  v1:= 65025I;
  #L392454.  if v0 != v1 then goto L39245a;
  #L392458.  return @kind void;
  #L39245a.  v0:= v4.`j2.e.b` @type ^`s3.z` @kind object;
  #L39245e.  call temp:= `d`(v0) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L392464.  v2:= temp @kind object;
  #L392466.  v3:= v4.`j2.e.b` @type ^`s3.z` @kind object;
  #L39246a.  call temp:= `f`(v3) @signature `Ls3/z;.f:()I` @kind virtual;
  #L392470.  v3:= temp;
  #L392472.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L392478.  v1:= temp;
  #L39247a.  call temp:= `copyOf`(v2, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L392480.  v1:= temp @kind object;
  #L392482.  v2:= v4.`j2.e.b` @type ^`s3.z` @kind object;
  #L392486.  call temp:= `f`(v2) @signature `Ls3/z;.f:()I` @kind virtual;
  #L39248c.  v2:= temp;
  #L39248e.  call `M`(v0, v1, v2) @signature `Ls3/z;.M:([BI)V` @kind virtual;
  #L392494.  return @kind void;
}
