record `j2.h` @kind class @AccessFlag FINAL extends `j2.i` @kind class {
  `boolean` `j2.h.n` @AccessFlag PRIVATE;
}
global `byte`[] `@@j2.h.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@j2.h.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lj2/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L392974.  v0:= 8I;
  #L392978.  v1:= new `byte`[v0];
  #L39297c.  goto L392998;
  #L392982.  `@@j2.h.o` @type ^`byte`[] := v1 @kind object;
  #L392986.  v0:= new `byte`[v0];
  #L39298a.  goto L3929a8;
  #L392990.  `@@j2.h.p` @type ^`byte`[] := v0 @kind object;
  #L392994.  return @kind void;
  #L392996.  
  #L392998.  v1:= (79I, 112I, 117I, 115I, 72I, 101I, 97I, 100I) @kind object;
  #L3929a7.  goto L392982;
  #L3929a8.  v0:= (79I, 112I, 117I, 115I, 84I, 97I, 103I, 115I) @kind object;
  #L3929b7.  goto L392990;
}
procedure `void` `<init>`(`j2.h` v0 @kind this) @signature `Lj2/h;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3929c8.  call `<init>`(v0) @signature `Lj2/i;.<init>:()V` @kind direct;
  #L3929ce.  return @kind void;
}
procedure `long` `n`(`j2.h` v6 @kind this, `byte`[] v7 @kind object) @signature `Lj2/h;.n:([B)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3928c4.  v0:= 0I;
  #L3928c6.  v0:= v7[v0] @kind byte;
  #L3928ca.  v0:= v0 ^& 255;
  #L3928ce.  v1:= v0 ^& 3;
  #L3928d2.  v2:= 2I;
  #L3928d4.  v3:= 1I;
  #L3928d6.  if v1 == 0 then goto L3928ec;
  #L3928da.  if v1 == v3 then goto L3928ee;
  #L3928de.  if v1 == v2 then goto L3928ee;
  #L3928e2.  v7:= v7[v3] @kind byte;
  #L3928e6.  v2:= v7 ^& 63;
  #L3928ea.  goto L3928ee;
  #L3928ec.  v2:= 1I;
  #L3928ee.  v7:= 3I;
  #L3928f0.  v0:= v0 ^> v7 @kind int;
  #L3928f2.  v1:= v0 ^& 3;
  #L3928f6.  v4:= 16I;
  #L3928fa.  if v0 < v4 then goto L392906;
  #L3928fe.  v7:= 2500I;
  #L392902.  v7:= v7 ^< v1 @kind int;
  #L392904.  goto L39292c;
  #L392906.  v4:= 12I;
  #L39290a.  v5:= 10000I;
  #L39290e.  if v0 < v4 then goto L39291c;
  #L392912.  v7:= v1 ^& 1;
  #L392916.  v7:= v5 ^< v7 @kind int;
  #L39291a.  goto L39292c;
  #L39291c.  if v1 != v7 then goto L392928;
  #L392920.  v7:= 60000I;
  #L392926.  goto L39292c;
  #L392928.  v7:= v5 ^< v1 @kind int;
  #L39292c.  v0:= (`long`) v2 @kind i2l;
  #L39292e.  v2:= (`long`) v7 @kind i2l;
  #L392930.  v0:= v0 * v2 @kind long;
  #L392934.  return v0 @kind wide;
}
procedure `boolean` `o`(`s3.z` v4 @kind object, `byte`[] v5 @kind object) @signature `Lj2/h;.o:(Ls3/z;[B)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L392740.  call temp:= `a`(v4) @signature `Ls3/z;.a:()I` @kind virtual;
  #L392746.  v0:= temp;
  #L392748.  v1:= length @variable v5;
  #L39274a.  v2:= 0I;
  #L39274c.  if v0 >= v1 then goto L392752;
  #L392750.  return v2;
  #L392752.  call temp:= `e`(v4) @signature `Ls3/z;.e:()I` @kind virtual;
  #L392758.  v0:= temp;
  #L39275a.  v1:= length @variable v5;
  #L39275c.  v1:= new `byte`[v1];
  #L392760.  v3:= length @variable v5;
  #L392762.  call `j`(v4, v1, v2, v3) @signature `Ls3/z;.j:([BII)V` @kind virtual;
  #L392768.  call `O`(v4, v0) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L39276e.  call temp:= `equals`(v1, v5) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L392774.  v4:= temp;
  #L392776.  return v4;
}
procedure `boolean` `p`(`s3.z` v1 @kind object) @signature `Lj2/h;.p:(Ls3/z;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3928a4.  v0:= `@@j2.h.o` @type ^`byte`[] @kind object;
  #L3928a8.  call temp:= `o`(v1, v0) @signature `Lj2/h;.o:(Ls3/z;[B)Z` @kind static;
  #L3928ae.  v1:= temp;
  #L3928b0.  return v1;
}
procedure `long` `f`(`j2.h` v2 @kind this, `s3.z` v3 @kind object) @signature `Lj2/h;.f:(Ls3/z;)J` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L392948.  call temp:= `d`(v3) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L39294e.  v3:= temp @kind object;
  #L392950.  call temp:= `n`(v2, v3) @signature `Lj2/h;.n:([B)J` @kind direct;
  #L392956.  v0:= temp @kind wide;
  #L392958.  call temp:= `c`(v2, v0) @signature `Lj2/i;.c:(J)J` @kind virtual;
  #L39295e.  v0:= temp @kind wide;
  #L392960.  return v0 @kind wide;
}
procedure `boolean` `i`(`j2.h` v2 @kind this, `s3.z` v3 @kind object, `long` v4 , `j2.i$b` v6 @kind object) @signature `Lj2/h;.i:(Ls3/z;JLj2/i$b;)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L392788.  v4:= `@@j2.h.o` @type ^`byte`[] @kind object;
  #L39278c.  call temp:= `o`(v3, v4) @signature `Lj2/h;.o:(Ls3/z;[B)Z` @kind static;
  #L392792.  v4:= temp;
  #L392794.  v5:= 1I;
  #L392796.  if v4 == 0 then goto L39280e;
  #L39279a.  call temp:= `d`(v3) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L3927a0.  v4:= temp @kind object;
  #L3927a2.  call temp:= `f`(v3) @signature `Ls3/z;.f:()I` @kind virtual;
  #L3927a8.  v3:= temp;
  #L3927aa.  call temp:= `copyOf`(v4, v3) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L3927b0.  v3:= temp @kind object;
  #L3927b2.  call temp:= `c`(v3) @signature `Lx1/e0;.c:([B)I` @kind static;
  #L3927b8.  v4:= temp;
  #L3927ba.  call temp:= `a`(v3) @signature `Lx1/e0;.a:([B)Ljava/util/List;` @kind static;
  #L3927c0.  v3:= temp @kind object;
  #L3927c2.  v0:= v6.`j2.i$b.a` @type ^`v1.j1` @kind object;
  #L3927c6.  if v0 == 0 then goto L3927cc;
  #L3927ca.  return v5;
  #L3927cc.  v0:= new `v1.j1$b`;
  #L3927d0.  call `<init>`(v0) @signature `Lv1/j1$b;.<init>:()V` @kind direct;
  #L3927d6.  v1:= "audio/opus" @kind object;
  #L3927da.  call temp:= `e0`(v0, v1) @signature `Lv1/j1$b;.e0:(Ljava/lang/String;)Lv1/j1$b;` @kind virtual;
  #L3927e0.  v0:= temp @kind object;
  #L3927e2.  call temp:= `H`(v0, v4) @signature `Lv1/j1$b;.H:(I)Lv1/j1$b;` @kind virtual;
  #L3927e8.  v4:= temp @kind object;
  #L3927ea.  v0:= 48000I;
  #L3927f0.  call temp:= `f0`(v4, v0) @signature `Lv1/j1$b;.f0:(I)Lv1/j1$b;` @kind virtual;
  #L3927f6.  v4:= temp @kind object;
  #L3927f8.  call temp:= `T`(v4, v3) @signature `Lv1/j1$b;.T:(Ljava/util/List;)Lv1/j1$b;` @kind virtual;
  #L3927fe.  v3:= temp @kind object;
  #L392800.  call temp:= `E`(v3) @signature `Lv1/j1$b;.E:()Lv1/j1;` @kind virtual;
  #L392806.  v3:= temp @kind object;
  #L392808.  v6.`j2.i$b.a` @type ^`v1.j1` := v3 @kind object;
  #L39280c.  return v5;
  #L39280e.  v4:= `@@j2.h.p` @type ^`byte`[] @kind object;
  #L392812.  call temp:= `o`(v3, v4) @signature `Lj2/h;.o:(Ls3/z;[B)Z` @kind static;
  #L392818.  v0:= temp;
  #L39281a.  v1:= 0I;
  #L39281c.  if v0 == 0 then goto L392888;
  #L392820.  v0:= v6.`j2.i$b.a` @type ^`v1.j1` @kind object;
  #L392824.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L39282a.  v0:= v2.`j2.h.n` @type ^`boolean` @kind boolean;
  #L39282e.  if v0 == 0 then goto L392834;
  #L392832.  return v5;
  #L392834.  v2.`j2.h.n` @type ^`boolean` := v5 @kind boolean;
  #L392838.  v4:= length @variable v4;
  #L39283a.  call `P`(v3, v4) @signature `Ls3/z;.P:(I)V` @kind virtual;
  #L392840.  call temp:= `j`(v3, v1, v1) @signature `La2/g0;.j:(Ls3/z;ZZ)La2/g0$b;` @kind static;
  #L392846.  v3:= temp @kind object;
  #L392848.  v3:= v3.`a2.g0$b.a` @type ^`java.lang.String`[] @kind object;
  #L39284c.  call temp:= `S`(v3) @signature `Lm5/q;.S:([Ljava/lang/Object;)Lm5/q;` @kind static;
  #L392852.  v3:= temp @kind object;
  #L392854.  call temp:= `c`(v3) @signature `La2/g0;.c:(Ljava/util/List;)Ln2/a;` @kind static;
  #L39285a.  v3:= temp @kind object;
  #L39285c.  if v3 != 0 then goto L392862;
  #L392860.  return v5;
  #L392862.  v4:= v6.`j2.i$b.a` @type ^`v1.j1` @kind object;
  #L392866.  call temp:= `b`(v4) @signature `Lv1/j1;.b:()Lv1/j1$b;` @kind virtual;
  #L39286c.  v4:= temp @kind object;
  #L39286e.  v0:= v6.`j2.i$b.a` @type ^`v1.j1` @kind object;
  #L392872.  v0:= v0.`v1.j1.x` @type ^`n2.a` @kind object;
  #L392876.  call temp:= `b`(v3, v0) @signature `Ln2/a;.b:(Ln2/a;)Ln2/a;` @kind virtual;
  #L39287c.  v3:= temp @kind object;
  #L39287e.  call temp:= `X`(v4, v3) @signature `Lv1/j1$b;.X:(Ln2/a;)Lv1/j1$b;` @kind virtual;
  #L392884.  v3:= temp @kind object;
  #L392886.  goto L392800;
  #L392888.  v3:= v6.`j2.i$b.a` @type ^`v1.j1` @kind object;
  #L39288c.  call temp:= `h`(v3) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L392892.  return v1;
}
procedure `void` `l`(`j2.h` v0 @kind this, `boolean` v1 ) @signature `Lj2/h;.l:(Z)V` @AccessFlag PROTECTED {
    temp;

  #L3929e0.  call `l`(v0, v1) @signature `Lj2/i;.l:(Z)V` @kind super;
  #L3929e6.  if v1 == 0 then goto L3929f0;
  #L3929ea.  v1:= 0I;
  #L3929ec.  v0.`j2.h.n` @type ^`boolean` := v1 @kind boolean;
  #L3929f0.  return @kind void;
}
