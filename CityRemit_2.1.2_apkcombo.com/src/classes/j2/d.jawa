record `j2.d` @kind class @AccessFlag PUBLIC extends `a2.l` @kind interface {
  `a2.n` `j2.d.a` @AccessFlag PRIVATE;
  `j2.i` `j2.d.b` @AccessFlag PRIVATE;
  `boolean` `j2.d.c` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Lj2/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L392174.  v0:= `@@j2.c.b` @type ^`j2.c` @kind object;
  #L392178.  return @kind void;
}
procedure `void` `<init>`(`j2.d` v0 @kind this) @signature `Lj2/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39218c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L392192.  return @kind void;
}
procedure `a2.l`[] `c`() @signature `Lj2/d;.c:()[La2/l;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L391f94.  call temp:= `e`() @signature `Lj2/d;.e:()[La2/l;` @kind static;
  #L391f9a.  v0:= temp @kind object;
  #L391f9c.  return v0 @kind object;
}
procedure `a2.l`[] `e`() @signature `Lj2/d;.e:()[La2/l;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L391fb0.  v0:= 1I;
  #L391fb2.  v0:= new `a2.l`[v0];
  #L391fb6.  v1:= new `j2.d`;
  #L391fba.  call `<init>`(v1) @signature `Lj2/d;.<init>:()V` @kind direct;
  #L391fc0.  v2:= 0I;
  #L391fc2.  v0[v2]:= v1 @kind object;
  #L391fc6.  return v0 @kind object;
}
procedure `s3.z` `f`(`s3.z` v1 @kind object) @signature `Lj2/d;.f:(Ls3/z;)Ls3/z;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L392158.  v0:= 0I;
  #L39215a.  call `O`(v1, v0) @signature `Ls3/z;.O:(I)V` @kind virtual;
  #L392160.  return v1 @kind object;
}
procedure `boolean` `h`(`j2.d` v5 @kind this, `a2.m` v6 @kind object) @signature `Lj2/d;.h:(La2/m;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L392008.  v0:= new `j2.f`;
  #L39200c.  call `<init>`(v0) @signature `Lj2/f;.<init>:()V` @kind direct;
  #L392012.  v1:= 1I;
  #L392014.  call temp:= `a`(v0, v6, v1) @signature `Lj2/f;.a:(La2/m;Z)Z` @kind virtual;
  #L39201a.  v2:= temp;
  #L39201c.  v3:= 0I;
  #L39201e.  if v2 == 0 then goto L3920be;
  #L392022.  v2:= v0.`j2.f.b` @type ^`int`;
  #L392026.  v4:= 2I;
  #L392028.  v2:= v2 ^& v4 @kind int;
  #L39202a.  if v2 == v4 then goto L392030;
  #L39202e.  goto L3920be;
  #L392030.  v0:= v0.`j2.f.f` @type ^`int`;
  #L392034.  v2:= 8I;
  #L392038.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L39203e.  v0:= temp;
  #L392040.  v2:= new `s3.z`;
  #L392044.  call `<init>`(v2, v0) @signature `Ls3/z;.<init>:(I)V` @kind direct;
  #L39204a.  call temp:= `d`(v2) @signature `Ls3/z;.d:()[B` @kind virtual;
  #L392050.  v4:= temp @kind object;
  #L392052.  call `o`(v6, v4, v3, v0) @signature `La2/m;.o:([BII)V` @kind interface;
  #L392058.  call temp:= `f`(v2) @signature `Lj2/d;.f:(Ls3/z;)Ls3/z;` @kind static;
  #L39205e.  v6:= temp @kind object;
  #L392060.  call temp:= `p`(v6) @signature `Lj2/b;.p:(Ls3/z;)Z` @kind static;
  #L392066.  v6:= temp;
  #L392068.  if v6 == 0 then goto L39207c;
  #L39206c.  v6:= new `j2.b`;
  #L392070.  call `<init>`(v6) @signature `Lj2/b;.<init>:()V` @kind direct;
  #L392076.  v5.`j2.d.b` @type ^`j2.i` := v6 @kind object;
  #L39207a.  goto L3920bc;
  #L39207c.  call temp:= `f`(v2) @signature `Lj2/d;.f:(Ls3/z;)Ls3/z;` @kind static;
  #L392082.  v6:= temp @kind object;
  #L392084.  call temp:= `r`(v6) @signature `Lj2/j;.r:(Ls3/z;)Z` @kind static;
  #L39208a.  v6:= temp;
  #L39208c.  if v6 == 0 then goto L39209c;
  #L392090.  v6:= new `j2.j`;
  #L392094.  call `<init>`(v6) @signature `Lj2/j;.<init>:()V` @kind direct;
  #L39209a.  goto L392076;
  #L39209c.  call temp:= `f`(v2) @signature `Lj2/d;.f:(Ls3/z;)Ls3/z;` @kind static;
  #L3920a2.  v6:= temp @kind object;
  #L3920a4.  call temp:= `p`(v6) @signature `Lj2/h;.p:(Ls3/z;)Z` @kind static;
  #L3920aa.  v6:= temp;
  #L3920ac.  if v6 == 0 then goto L3920be;
  #L3920b0.  v6:= new `j2.h`;
  #L3920b4.  call `<init>`(v6) @signature `Lj2/h;.<init>:()V` @kind direct;
  #L3920ba.  goto L392076;
  #L3920bc.  return v1;
  #L3920be.  return v3;
}
procedure `void` `a`(`j2.d` v0 @kind this) @signature `Lj2/d;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L3921bc.  return @kind void;
}
procedure `void` `b`(`j2.d` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lj2/d;.b:(JJ)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3921d0.  v0:= v1.`j2.d.b` @type ^`j2.i` @kind object;
  #L3921d4.  if v0 == 0 then goto L3921de;
  #L3921d8.  call `m`(v0, v2, v4) @signature `Lj2/i;.m:(JJ)V` @kind virtual;
  #L3921de.  return @kind void;
}
procedure `void` `d`(`j2.d` v0 @kind this, `a2.n` v1 @kind object) @signature `Lj2/d;.d:(La2/n;)V` @AccessFlag PUBLIC {
    temp;

  #L3921a4.  v0.`j2.d.a` @type ^`a2.n` := v1 @kind object;
  #L3921a8.  return @kind void;
}
procedure `boolean` `g`(`j2.d` v0 @kind this, `a2.m` v1 @kind object) @signature `Lj2/d;.g:(La2/m;)Z` @AccessFlag PUBLIC {
    temp;

  #L391fd8.  call temp:= `h`(v0, v1) @signature `Lj2/d;.h:(La2/m;)Z` @kind direct;
  #L391fde.  v1:= temp;
  #L391fe0.  return v1;
  #L391fe2.  v1:= 0I;
  #L391fe4.  return v1;
  catch `v1.e2` @[L391fd8..L391fe0] goto L391fe2;
}
procedure `int` `j`(`j2.d` v4 @kind this, `a2.m` v5 @kind object, `a2.z` v6 @kind object) @signature `Lj2/d;.j:(La2/m;La2/z;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3920d0.  v0:= v4.`j2.d.a` @type ^`a2.n` @kind object;
  #L3920d4.  call temp:= `h`(v0) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3920da.  v0:= v4.`j2.d.b` @type ^`j2.i` @kind object;
  #L3920de.  if v0 != 0 then goto L392106;
  #L3920e2.  call temp:= `h`(v4, v5) @signature `Lj2/d;.h:(La2/m;)Z` @kind direct;
  #L3920e8.  v0:= temp;
  #L3920ea.  if v0 == 0 then goto L3920f6;
  #L3920ee.  call `i`(v5) @signature `La2/m;.i:()V` @kind interface;
  #L3920f4.  goto L392106;
  #L3920f6.  v5:= 0I;
  #L3920f8.  v6:= "Failed to determine bitstream type" @kind object;
  #L3920fc.  call temp:= `a`(v6, v5) @signature `Lv1/e2;.a:(Ljava/lang/String;Ljava/lang/Throwable;)Lv1/e2;` @kind static;
  #L392102.  v5:= temp @kind object;
  #L392104.  throw v5;
  #L392106.  v0:= v4.`j2.d.c` @type ^`boolean` @kind boolean;
  #L39210a.  if v0 != 0 then goto L39213a;
  #L39210e.  v0:= v4.`j2.d.a` @type ^`a2.n` @kind object;
  #L392112.  v1:= 0I;
  #L392114.  v2:= 1I;
  #L392116.  call temp:= `e`(v0, v1, v2) @signature `La2/n;.e:(II)La2/d0;` @kind interface;
  #L39211c.  v0:= temp @kind object;
  #L39211e.  v1:= v4.`j2.d.a` @type ^`a2.n` @kind object;
  #L392122.  call `h`(v1) @signature `La2/n;.h:()V` @kind interface;
  #L392128.  v1:= v4.`j2.d.b` @type ^`j2.i` @kind object;
  #L39212c.  v3:= v4.`j2.d.a` @type ^`a2.n` @kind object;
  #L392130.  call `d`(v1, v3, v0) @signature `Lj2/i;.d:(La2/n;La2/d0;)V` @kind virtual;
  #L392136.  v4.`j2.d.c` @type ^`boolean` := v2 @kind boolean;
  #L39213a.  v0:= v4.`j2.d.b` @type ^`j2.i` @kind object;
  #L39213e.  call temp:= `g`(v0, v5, v6) @signature `Lj2/i;.g:(La2/m;La2/z;)I` @kind virtual;
  #L392144.  v5:= temp;
  #L392146.  return v5;
}
