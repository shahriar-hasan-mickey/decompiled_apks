record `j2.b$a` @kind class @AccessFlag FINAL extends `j2.g` @kind interface {
  `a2.u` `j2.b$a.a` @AccessFlag PRIVATE;
  `a2.u$a` `j2.b$a.b` @AccessFlag PRIVATE;
  `long` `j2.b$a.c` @AccessFlag PRIVATE;
  `long` `j2.b$a.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`j2.b$a` v0 @kind this, `a2.u` v1 @kind object, `a2.u$a` v2 @kind object) @signature `Lj2/b$a;.<init>:(La2/u;La2/u$a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L391cc4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L391cca.  v0.`j2.b$a.a` @type ^`a2.u` := v1 @kind object;
  #L391cce.  v0.`j2.b$a.b` @type ^`a2.u$a` := v2 @kind object;
  #L391cd2.  v1:= -1L;
  #L391cd6.  v0.`j2.b$a.c` @type ^`long` := v1 @kind wide;
  #L391cda.  v0.`j2.b$a.d` @type ^`long` := v1 @kind wide;
  #L391cde.  return @kind void;
}
procedure `a2.a0` `a`(`j2.b$a` v5 @kind this) @signature `Lj2/b$a;.a:()La2/a0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L391c50.  v0:= v5.`j2.b$a.c` @type ^`long` @kind wide;
  #L391c54.  v2:= -1L;
  #L391c58.  v4:= lcmp(v0, v2);
  #L391c5c.  if v4 == 0 then goto L391c64;
  #L391c60.  v0:= 1I;
  #L391c62.  goto L391c66;
  #L391c64.  v0:= 0I;
  #L391c66.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L391c6c.  v0:= new `a2.t`;
  #L391c70.  v1:= v5.`j2.b$a.a` @type ^`a2.u` @kind object;
  #L391c74.  v2:= v5.`j2.b$a.c` @type ^`long` @kind wide;
  #L391c78.  call `<init>`(v0, v1, v2) @signature `La2/t;.<init>:(La2/u;J)V` @kind direct;
  #L391c7e.  return v0 @kind object;
}
procedure `long` `b`(`j2.b$a` v6 @kind this, `a2.m` v7 @kind object) @signature `Lj2/b$a;.b:(La2/m;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L391c90.  v0:= v6.`j2.b$a.d` @type ^`long` @kind wide;
  #L391c94.  v2:= -1L;
  #L391c98.  v4:= 0L;
  #L391c9c.  v7:= lcmp(v0, v4);
  #L391ca0.  if v7 < 0 then goto L391cb2;
  #L391ca4.  v4:= 2L;
  #L391ca8.  v0:= v0 + v4 @kind long;
  #L391caa.  v0:= -v0 @kind long;
  #L391cac.  v6.`j2.b$a.d` @type ^`long` := v2 @kind wide;
  #L391cb0.  return v0 @kind wide;
  #L391cb2.  return v2 @kind wide;
}
procedure `void` `c`(`j2.b$a` v2 @kind this, `long` v3 ) @signature `Lj2/b$a;.c:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L391d08.  v0:= v2.`j2.b$a.b` @type ^`a2.u$a` @kind object;
  #L391d0c.  v0:= v0.`a2.u$a.a` @type ^`long`[] @kind object;
  #L391d10.  v1:= 1I;
  #L391d12.  call temp:= `i`(v0, v3, v1, v1) @signature `Ls3/l0;.i:([JJZZ)I` @kind static;
  #L391d18.  v3:= temp;
  #L391d1a.  v3:= v0[v3] @kind wide;
  #L391d1e.  v2.`j2.b$a.d` @type ^`long` := v3 @kind wide;
  #L391d22.  return @kind void;
}
procedure `void` `d`(`j2.b$a` v0 @kind this, `long` v1 ) @signature `Lj2/b$a;.d:(J)V` @AccessFlag PUBLIC {
    temp;

  #L391cf0.  v0.`j2.b$a.c` @type ^`long` := v1 @kind wide;
  #L391cf4.  return @kind void;
}
