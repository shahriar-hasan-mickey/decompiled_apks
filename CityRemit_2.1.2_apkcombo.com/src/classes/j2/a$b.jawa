record `j2.a$b` @kind class @AccessFlag FINAL extends `a2.a0` @kind interface {
  `j2.a` `j2.a$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`j2.a$b` v0 @kind this, `j2.a` v1 @kind object) @signature `Lj2/a$b;.<init>:(Lj2/a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L391784.  v0.`j2.a$b.a` @type ^`j2.a` := v1 @kind object;
  #L391788.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39178e.  return @kind void;
}
procedure `void` `<init>`(`j2.a$b` v0 @kind this, `j2.a` v1 @kind object, `j2.a$a` v2 @kind object) @signature `Lj2/a$b;.<init>:(Lj2/a;Lj2/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3917a0.  call `<init>`(v0, v1) @signature `Lj2/a$b;.<init>:(Lj2/a;)V` @kind direct;
  #L3917a6.  return @kind void;
}
procedure `boolean` `f`(`j2.a$b` v1 @kind this) @signature `Lj2/a$b;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39173c.  v0:= 1I;
  #L39173e.  return v0;
}
procedure `a2.a0$a` `h`(`j2.a$b` v10 @kind this, `long` v11 ) @signature `Lj2/a$b;.h:(J)La2/a0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L391698.  v0:= v10.`j2.a$b.a` @type ^`j2.a` @kind object;
  #L39169c.  call temp:= `d`(v0) @signature `Lj2/a;.d:(Lj2/a;)Lj2/i;` @kind static;
  #L3916a2.  v0:= temp @kind object;
  #L3916a4.  call temp:= `c`(v0, v11) @signature `Lj2/i;.c:(J)J` @kind virtual;
  #L3916aa.  v0:= temp @kind wide;
  #L3916ac.  v2:= v10.`j2.a$b.a` @type ^`j2.a` @kind object;
  #L3916b0.  call temp:= `e`(v2) @signature `Lj2/a;.e:(Lj2/a;)J` @kind static;
  #L3916b6.  v2:= temp @kind wide;
  #L3916b8.  v4:= v10.`j2.a$b.a` @type ^`j2.a` @kind object;
  #L3916bc.  call temp:= `f`(v4) @signature `Lj2/a;.f:(Lj2/a;)J` @kind static;
  #L3916c2.  v4:= temp @kind wide;
  #L3916c4.  v6:= v10.`j2.a$b.a` @type ^`j2.a` @kind object;
  #L3916c8.  call temp:= `e`(v6) @signature `Lj2/a;.e:(Lj2/a;)J` @kind static;
  #L3916ce.  v6:= temp @kind wide;
  #L3916d0.  v4:= v4 - v6 @kind long;
  #L3916d2.  v0:= v0 * v4 @kind long;
  #L3916d6.  v4:= v10.`j2.a$b.a` @type ^`j2.a` @kind object;
  #L3916da.  call temp:= `g`(v4) @signature `Lj2/a;.g:(Lj2/a;)J` @kind static;
  #L3916e0.  v4:= temp @kind wide;
  #L3916e2.  v0:= v0 / v4 @kind long;
  #L3916e4.  v2:= v2 + v0 @kind long;
  #L3916e6.  v0:= 30000L;
  #L3916ea.  v4:= v2 - v0 @kind long;
  #L3916ee.  v0:= v10.`j2.a$b.a` @type ^`j2.a` @kind object;
  #L3916f2.  call temp:= `e`(v0) @signature `Lj2/a;.e:(Lj2/a;)J` @kind static;
  #L3916f8.  v6:= temp @kind wide;
  #L3916fa.  v0:= v10.`j2.a$b.a` @type ^`j2.a` @kind object;
  #L3916fe.  call temp:= `f`(v0) @signature `Lj2/a;.f:(Lj2/a;)J` @kind static;
  #L391704.  v0:= temp @kind wide;
  #L391706.  v2:= 1L;
  #L39170a.  v8:= v0 - v2 @kind long;
  #L39170e.  call temp:= `r`(v4, v6, v8) @signature `Ls3/l0;.r:(JJJ)J` @kind static;
  #L391714.  v0:= temp @kind wide;
  #L391716.  v2:= new `a2.a0$a`;
  #L39171a.  v3:= new `a2.b0`;
  #L39171e.  call `<init>`(v3, v11, v0) @signature `La2/b0;.<init>:(JJ)V` @kind direct;
  #L391724.  call `<init>`(v2, v3) @signature `La2/a0$a;.<init>:(La2/b0;)V` @kind direct;
  #L39172a.  return v2 @kind object;
}
procedure `long` `i`(`j2.a$b` v3 @kind this) @signature `Lj2/a$b;.i:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L391750.  v0:= v3.`j2.a$b.a` @type ^`j2.a` @kind object;
  #L391754.  call temp:= `d`(v0) @signature `Lj2/a;.d:(Lj2/a;)Lj2/i;` @kind static;
  #L39175a.  v0:= temp @kind object;
  #L39175c.  v1:= v3.`j2.a$b.a` @type ^`j2.a` @kind object;
  #L391760.  call temp:= `g`(v1) @signature `Lj2/a;.g:(Lj2/a;)J` @kind static;
  #L391766.  v1:= temp @kind wide;
  #L391768.  call temp:= `b`(v0, v1) @signature `Lj2/i;.b:(J)J` @kind virtual;
  #L39176e.  v0:= temp @kind wide;
  #L391770.  return v0 @kind wide;
}
