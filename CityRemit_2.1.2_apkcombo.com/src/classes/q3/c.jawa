record `q3.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `q3.s` @kind interface {
  `x2.t0` `q3.c.a` @AccessFlag PROTECTED_FINAL;
  `int` `q3.c.b` @AccessFlag PROTECTED_FINAL;
  `int`[] `q3.c.c` @AccessFlag PROTECTED_FINAL;
  `v1.j1`[] `q3.c.d` @AccessFlag PRIVATE_FINAL;
  `long`[] `q3.c.e` @AccessFlag PRIVATE_FINAL;
  `int` `q3.c.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`q3.c` v1 @kind this, `x2.t0` v2 @kind object, `int`[] v3 @kind object) @signature `Lq3/c;.<init>:(Lx2/t0;[I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L40ed8c.  v0:= 0I;
  #L40ed8e.  call `<init>`(v1, v2, v3, v0) @signature `Lq3/c;.<init>:(Lx2/t0;[II)V` @kind direct;
  #L40ed94.  return @kind void;
}
procedure `void` `<init>`(`q3.c` v3 @kind this, `x2.t0` v4 @kind object, `int`[] v5 @kind object, `int` v6 ) @signature `Lq3/c;.<init>:(Lx2/t0;[II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L40eda8.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40edae.  v6:= length @variable v5;
  #L40edb0.  v0:= 0I;
  #L40edb2.  if v6 <= 0 then goto L40edba;
  #L40edb6.  v6:= 1I;
  #L40edb8.  goto L40edbc;
  #L40edba.  v6:= 0I;
  #L40edbc.  call `f`(v6) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L40edc2.  call temp:= `e`(v4) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L40edc8.  v6:= temp @kind object;
  #L40edca.  v6:= (`x2.t0`) v6 @kind object;
  #L40edce.  v3.`q3.c.a` @type ^`x2.t0` := v6 @kind object;
  #L40edd2.  v6:= length @variable v5;
  #L40edd4.  v3.`q3.c.b` @type ^`int` := v6;
  #L40edd8.  v6:= new `v1.j1`[v6];
  #L40eddc.  v3.`q3.c.d` @type ^`v1.j1`[] := v6 @kind object;
  #L40ede0.  v6:= 0I;
  #L40ede2.  v1:= length @variable v5;
  #L40ede4.  if v6 >= v1 then goto L40ee02;
  #L40ede8.  v1:= v3.`q3.c.d` @type ^`v1.j1`[] @kind object;
  #L40edec.  v2:= v5[v6];
  #L40edf0.  call temp:= `b`(v4, v2) @signature `Lx2/t0;.b:(I)Lv1/j1;` @kind virtual;
  #L40edf6.  v2:= temp @kind object;
  #L40edf8.  v1[v6]:= v2 @kind object;
  #L40edfc.  v6:= v6 + 1;
  #L40ee00.  goto L40ede2;
  #L40ee02.  v5:= v3.`q3.c.d` @type ^`v1.j1`[] @kind object;
  #L40ee06.  v6:= `@@q3.b.o` @type ^`q3.b` @kind object;
  #L40ee0a.  call `sort`(v5, v6) @signature `Ljava/util/Arrays;.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V` @kind static;
  #L40ee10.  v5:= v3.`q3.c.b` @type ^`int`;
  #L40ee14.  v5:= new `int`[v5];
  #L40ee18.  v3.`q3.c.c` @type ^`int`[] := v5 @kind object;
  #L40ee1c.  v5:= v3.`q3.c.b` @type ^`int`;
  #L40ee20.  if v0 >= v5 then goto L40ee42;
  #L40ee24.  v5:= v3.`q3.c.c` @type ^`int`[] @kind object;
  #L40ee28.  v6:= v3.`q3.c.d` @type ^`v1.j1`[] @kind object;
  #L40ee2c.  v6:= v6[v0] @kind object;
  #L40ee30.  call temp:= `c`(v4, v6) @signature `Lx2/t0;.c:(Lv1/j1;)I` @kind virtual;
  #L40ee36.  v6:= temp;
  #L40ee38.  v5[v0]:= v6;
  #L40ee3c.  v0:= v0 + 1;
  #L40ee40.  goto L40ee1c;
  #L40ee42.  v4:= new `long`[v5];
  #L40ee46.  v3.`q3.c.e` @type ^`long`[] := v4 @kind object;
  #L40ee4a.  return @kind void;
}
procedure `int` `v`(`v1.j1` v0 @kind object, `v1.j1` v1 @kind object) @signature `Lq3/c;.v:(Lv1/j1;Lv1/j1;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L40ebf8.  call temp:= `w`(v0, v1) @signature `Lq3/c;.w:(Lv1/j1;Lv1/j1;)I` @kind static;
  #L40ebfe.  v0:= temp;
  #L40ec00.  return v0;
}
procedure `int` `w`(`v1.j1` v0 @kind object, `v1.j1` v1 @kind object) @signature `Lq3/c;.w:(Lv1/j1;Lv1/j1;)I` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L40ed18.  v1:= v1.`v1.j1.v` @type ^`int`;
  #L40ed1c.  v0:= v0.`v1.j1.v` @type ^`int`;
  #L40ed20.  v1:= v1 - v0 @kind int;
  #L40ed22.  return v1;
}
procedure `v1.j1` `a`(`q3.c` v1 @kind this, `int` v2 ) @signature `Lq3/c;.a:(I)Lv1/j1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L40ed4c.  v0:= v1.`q3.c.d` @type ^`v1.j1`[] @kind object;
  #L40ed50.  v2:= v0[v2] @kind object;
  #L40ed54.  return v2 @kind object;
}
procedure `int` `b`(`q3.c` v1 @kind this, `int` v2 ) @signature `Lq3/c;.b:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L40ec30.  v0:= v1.`q3.c.c` @type ^`int`[] @kind object;
  #L40ec34.  v2:= v0[v2];
  #L40ec38.  return v2;
}
procedure `x2.t0` `c`(`q3.c` v1 @kind this) @signature `Lq3/c;.c:()Lx2/t0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L40eee0.  v0:= v1.`q3.c.a` @type ^`x2.t0` @kind object;
  #L40eee4.  return v0 @kind object;
}
procedure `int` `d`(`q3.c` v2 @kind this, `v1.j1` v3 @kind object) @signature `Lq3/c;.d:(Lv1/j1;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L40ece4.  v0:= 0I;
  #L40ece6.  v1:= v2.`q3.c.b` @type ^`int`;
  #L40ecea.  if v0 >= v1 then goto L40ed02;
  #L40ecee.  v1:= v2.`q3.c.d` @type ^`v1.j1`[] @kind object;
  #L40ecf2.  v1:= v1[v0] @kind object;
  #L40ecf6.  if v1 != v3 then goto L40ecfc;
  #L40ecfa.  return v0;
  #L40ecfc.  v0:= v0 + 1;
  #L40ed00.  goto L40ece6;
  #L40ed02.  v3:= -1I;
  #L40ed04.  return v3;
}
procedure `int` `e`(`q3.c` v2 @kind this, `int` v3 ) @signature `Lq3/c;.e:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L40ecb0.  v0:= 0I;
  #L40ecb2.  v1:= v2.`q3.c.b` @type ^`int`;
  #L40ecb6.  if v0 >= v1 then goto L40ecce;
  #L40ecba.  v1:= v2.`q3.c.c` @type ^`int`[] @kind object;
  #L40ecbe.  v1:= v1[v0];
  #L40ecc2.  if v1 != v3 then goto L40ecc8;
  #L40ecc6.  return v0;
  #L40ecc8.  v0:= v0 + 1;
  #L40eccc.  goto L40ecb2;
  #L40ecce.  v3:= -1I;
  #L40ecd0.  return v3;
}
procedure `boolean` `equals`(`q3.c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lq3/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40eb54.  v0:= 1I;
  #L40eb56.  if v4 != v5 then goto L40eb5c;
  #L40eb5a.  return v0;
  #L40eb5c.  v1:= 0I;
  #L40eb5e.  if v5 == 0 then goto L40eba2;
  #L40eb62.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L40eb68.  v2:= temp @kind object;
  #L40eb6a.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L40eb70.  v3:= temp @kind object;
  #L40eb72.  if v2 == v3 then goto L40eb78;
  #L40eb76.  goto L40eba2;
  #L40eb78.  v5:= (`q3.c`) v5 @kind object;
  #L40eb7c.  v2:= v4.`q3.c.a` @type ^`x2.t0` @kind object;
  #L40eb80.  v3:= v5.`q3.c.a` @type ^`x2.t0` @kind object;
  #L40eb84.  if v2 != v3 then goto L40eb9e;
  #L40eb88.  v2:= v4.`q3.c.c` @type ^`int`[] @kind object;
  #L40eb8c.  v5:= v5.`q3.c.c` @type ^`int`[] @kind object;
  #L40eb90.  call temp:= `equals`(v2, v5) @signature `Ljava/util/Arrays;.equals:([I[I)Z` @kind static;
  #L40eb96.  v5:= temp;
  #L40eb98.  if v5 == 0 then goto L40eb9e;
  #L40eb9c.  goto L40eba0;
  #L40eb9e.  v0:= 0I;
  #L40eba0.  return v0;
  #L40eba2.  return v1;
}
procedure `void` `f`(`q3.c` v0 @kind this) @signature `Lq3/c;.f:()V` @AccessFlag PUBLIC {
    temp;

  #L40ee5c.  return @kind void;
}
procedure `boolean` `g`(`q3.c` v10 @kind this, `int` v11 , `long` v12 ) @signature `Lq3/c;.g:(IJ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L40ead4.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L40eada.  v0:= temp @kind wide;
  #L40eadc.  call temp:= `h`(v10, v11, v0) @signature `Lq3/c;.h:(IJ)Z` @kind virtual;
  #L40eae2.  v2:= temp;
  #L40eae4.  v3:= 0I;
  #L40eae6.  v4:= 0I;
  #L40eae8.  v5:= v10.`q3.c.b` @type ^`int`;
  #L40eaec.  v6:= 1I;
  #L40eaee.  if v4 >= v5 then goto L40eb12;
  #L40eaf2.  if v2 != 0 then goto L40eb12;
  #L40eaf6.  if v4 == v11 then goto L40eb0a;
  #L40eafa.  call temp:= `h`(v10, v4, v0) @signature `Lq3/c;.h:(IJ)Z` @kind virtual;
  #L40eb00.  v2:= temp;
  #L40eb02.  if v2 != 0 then goto L40eb0a;
  #L40eb06.  v2:= 1I;
  #L40eb08.  goto L40eb0c;
  #L40eb0a.  v2:= 0I;
  #L40eb0c.  v4:= v4 + 1;
  #L40eb10.  goto L40eae8;
  #L40eb12.  if v2 != 0 then goto L40eb18;
  #L40eb16.  return v3;
  #L40eb18.  v7:= v10.`q3.c.e` @type ^`long`[] @kind object;
  #L40eb1c.  v8:= v7[v11] @kind wide;
  #L40eb20.  v4:= 9223372036854775807L;
  #L40eb2a.  v2:= v12 @kind wide;
  #L40eb2c.  call temp:= `b`(v0, v2, v4) @signature `Ls3/l0;.b:(JJJ)J` @kind static;
  #L40eb32.  v12:= temp @kind wide;
  #L40eb34.  call temp:= `max`(v8, v12) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L40eb3a.  v12:= temp @kind wide;
  #L40eb3c.  v7[v11]:= v12 @kind wide;
  #L40eb40.  return v6;
}
procedure `boolean` `h`(`q3.c` v3 @kind this, `int` v4 , `long` v5 ) @signature `Lq3/c;.h:(IJ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40ebb4.  v0:= v3.`q3.c.e` @type ^`long`[] @kind object;
  #L40ebb8.  v1:= v0[v4] @kind wide;
  #L40ebbc.  v4:= lcmp(v1, v5);
  #L40ebc0.  if v4 <= 0 then goto L40ebc8;
  #L40ebc4.  v4:= 1I;
  #L40ebc6.  goto L40ebca;
  #L40ebc8.  v4:= 0I;
  #L40ebca.  return v4;
}
procedure `int` `hashCode`(`q3.c` v2 @kind this) @signature `Lq3/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40ec70.  v0:= v2.`q3.c.f` @type ^`int`;
  #L40ec74.  if v0 != 0 then goto L40ec9a;
  #L40ec78.  v0:= v2.`q3.c.a` @type ^`x2.t0` @kind object;
  #L40ec7c.  call temp:= `identityHashCode`(v0) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L40ec82.  v0:= temp;
  #L40ec84.  v0:= v0 * 31;
  #L40ec88.  v1:= v2.`q3.c.c` @type ^`int`[] @kind object;
  #L40ec8c.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([I)I` @kind static;
  #L40ec92.  v1:= temp;
  #L40ec94.  v0:= v0 + v1 @kind int;
  #L40ec96.  v2.`q3.c.f` @type ^`int` := v0;
  #L40ec9a.  v0:= v2.`q3.c.f` @type ^`int`;
  #L40ec9e.  return v0;
}
procedure `void` `i`(`q3.c` v0 @kind this, `boolean` v1 ) @signature `Lq3/c;.i:(Z)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40ee9c.  call `b`(v0, v1) @signature `Lq3/r;.b:(Lq3/s;Z)V` @kind static;
  #L40eea2.  return @kind void;
}
procedure `void` `j`(`q3.c` v0 @kind this) @signature `Lq3/c;.j:()V` @AccessFlag PUBLIC {
    temp;

  #L40ee70.  return @kind void;
}
procedure `int` `k`(`q3.c` v0 @kind this, `long` v1 , `java.util.List` v3 @kind object) @signature `Lq3/c;.k:(JLjava/util/List;)I` @AccessFlag PUBLIC {
    temp;

  #L40ec14.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L40ec1a.  v1:= temp;
  #L40ec1c.  return v1;
}
procedure `int` `length`(`q3.c` v1 @kind this) @signature `Lq3/c;.length:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L40ed34.  v0:= v1.`q3.c.c` @type ^`int`[] @kind object;
  #L40ed38.  v0:= length @variable v0;
  #L40ed3a.  return v0;
}
procedure `int` `m`(`q3.c` v2 @kind this) @signature `Lq3/c;.m:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L40ec4c.  v0:= v2.`q3.c.c` @type ^`int`[] @kind object;
  #L40ec50.  call temp:= `p`(v2) @signature `Lq3/s;.p:()I` @kind interface;
  #L40ec56.  v1:= temp;
  #L40ec58.  v0:= v0[v1];
  #L40ec5c.  return v0;
}
procedure `v1.j1` `n`(`q3.c` v2 @kind this) @signature `Lq3/c;.n:()Lv1/j1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L40ed68.  v0:= v2.`q3.c.d` @type ^`v1.j1`[] @kind object;
  #L40ed6c.  call temp:= `p`(v2) @signature `Lq3/s;.p:()I` @kind interface;
  #L40ed72.  v1:= temp;
  #L40ed74.  v0:= v0[v1] @kind object;
  #L40ed78.  return v0 @kind object;
}
procedure `void` `q`(`q3.c` v0 @kind this, `float` v1 ) @signature `Lq3/c;.q:(F)V` @AccessFlag PUBLIC {
    temp;

  #L40eeb4.  return @kind void;
}
procedure `void` `s`(`q3.c` v0 @kind this) @signature `Lq3/c;.s:()V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40ee84.  call `a`(v0) @signature `Lq3/r;.a:(Lq3/s;)V` @kind static;
  #L40ee8a.  return @kind void;
}
procedure `boolean` `t`(`q3.c` v0 @kind this, `long` v1 , `z2.f` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lq3/c;.t:(JLz2/f;Ljava/util/List;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40ebdc.  call temp:= `d`(v0, v1, v3, v4) @signature `Lq3/r;.d:(Lq3/s;JLz2/f;Ljava/util/List;)Z` @kind static;
  #L40ebe2.  v1:= temp;
  #L40ebe4.  return v1;
}
procedure `void` `u`(`q3.c` v0 @kind this) @signature `Lq3/c;.u:()V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40eec8.  call `c`(v0) @signature `Lq3/r;.c:(Lq3/s;)V` @kind static;
  #L40eece.  return @kind void;
}
