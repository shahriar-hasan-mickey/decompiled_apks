record `q3.s$a` @kind class @AccessFlag PUBLIC_FINAL {
  `x2.t0` `q3.s$a.a` @AccessFlag PUBLIC_FINAL;
  `int`[] `q3.s$a.b` @AccessFlag PUBLIC_FINAL;
  `int` `q3.s$a.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`q3.s$a` v1 @kind this, `x2.t0` v2 @kind object, `int`[] v3 @kind object) @signature `Lq3/s$a;.<init>:(Lx2/t0;[I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L412354.  v0:= 0I;
  #L412356.  call `<init>`(v1, v2, v3, v0) @signature `Lq3/s$a;.<init>:(Lx2/t0;[II)V` @kind direct;
  #L41235c.  return @kind void;
}
procedure `void` `<init>`(`q3.s$a` v3 @kind this, `x2.t0` v4 @kind object, `int`[] v5 @kind object, `int` v6 ) @signature `Lq3/s$a;.<init>:(Lx2/t0;[II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L412370.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L412376.  v0:= length @variable v5;
  #L412378.  if v0 != 0 then goto L412394;
  #L41237c.  v0:= new `java.lang.IllegalArgumentException`;
  #L412380.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L412386.  v1:= "ETSDefinition" @kind object;
  #L41238a.  v2:= "Empty tracks are not allowed" @kind object;
  #L41238e.  call `d`(v1, v2, v0) @signature `Ls3/q;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L412394.  v3.`q3.s$a.a` @type ^`x2.t0` := v4 @kind object;
  #L412398.  v3.`q3.s$a.b` @type ^`int`[] := v5 @kind object;
  #L41239c.  v3.`q3.s$a.c` @type ^`int` := v6;
  #L4123a0.  return @kind void;
}
