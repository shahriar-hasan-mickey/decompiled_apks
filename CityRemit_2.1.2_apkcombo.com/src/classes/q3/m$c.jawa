record `q3.m$c` @kind class @AccessFlag FINAL extends `java.lang.Comparable` @kind interface {
  `boolean` `q3.m$c.o` @AccessFlag PRIVATE_FINAL;
  `boolean` `q3.m$c.p` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`q3.m$c` v2 @kind this, `v1.j1` v3 @kind object, `int` v4 ) @signature `Lq3/m$c;.<init>:(Lv1/j1;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L40f86c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40f872.  v3:= v3.`v1.j1.r` @type ^`int`;
  #L40f876.  v0:= 1I;
  #L40f878.  v3:= v3 ^& v0 @kind int;
  #L40f87a.  v1:= 0I;
  #L40f87c.  if v3 == 0 then goto L40f882;
  #L40f880.  goto L40f884;
  #L40f882.  v0:= 0I;
  #L40f884.  v2.`q3.m$c.o` @type ^`boolean` := v0 @kind boolean;
  #L40f888.  call temp:= `I`(v4, v1) @signature `Lq3/m;.I:(IZ)Z` @kind static;
  #L40f88e.  v3:= temp;
  #L40f890.  v2.`q3.m$c.p` @type ^`boolean` := v3 @kind boolean;
  #L40f894.  return @kind void;
}
procedure `int` `c`(`q3.m$c` v3 @kind this, `q3.m$c` v4 @kind object) @signature `Lq3/m$c;.c:(Lq3/m$c;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40f828.  call temp:= `i`() @signature `Lm5/k;.i:()Lm5/k;` @kind static;
  #L40f82e.  v0:= temp @kind object;
  #L40f830.  v1:= v3.`q3.m$c.p` @type ^`boolean` @kind boolean;
  #L40f834.  v2:= v4.`q3.m$c.p` @type ^`boolean` @kind boolean;
  #L40f838.  call temp:= `f`(v0, v1, v2) @signature `Lm5/k;.f:(ZZ)Lm5/k;` @kind virtual;
  #L40f83e.  v0:= temp @kind object;
  #L40f840.  v1:= v3.`q3.m$c.o` @type ^`boolean` @kind boolean;
  #L40f844.  v4:= v4.`q3.m$c.o` @type ^`boolean` @kind boolean;
  #L40f848.  call temp:= `f`(v0, v1, v4) @signature `Lm5/k;.f:(ZZ)Lm5/k;` @kind virtual;
  #L40f84e.  v4:= temp @kind object;
  #L40f850.  call temp:= `h`(v4) @signature `Lm5/k;.h:()I` @kind virtual;
  #L40f856.  v4:= temp;
  #L40f858.  return v4;
}
procedure `int` `compareTo`(`q3.m$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lq3/m$c;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40f808.  v1:= (`q3.m$c`) v1 @kind object;
  #L40f80c.  call temp:= `c`(v0, v1) @signature `Lq3/m$c;.c:(Lq3/m$c;)I` @kind virtual;
  #L40f812.  v1:= temp;
  #L40f814.  return v1;
}
