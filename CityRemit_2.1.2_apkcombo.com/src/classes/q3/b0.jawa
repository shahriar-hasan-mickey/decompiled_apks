record `q3.b0` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `q3.b0.a` @AccessFlag PUBLIC_FINAL;
  `v1.u2`[] `q3.b0.b` @AccessFlag PUBLIC_FINAL;
  `q3.s`[] `q3.b0.c` @AccessFlag PUBLIC_FINAL;
  `v1.h3` `q3.b0.d` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `q3.b0.e` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`q3.b0` v0 @kind this, `v1.u2`[] v1 @kind object, `q3.s`[] v2 @kind object, `v1.h3` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lq3/b0;.<init>:([Lv1/u2;[Lq3/s;Lv1/h3;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L413814.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41381a.  v0.`q3.b0.b` @type ^`v1.u2`[] := v1 @kind object;
  #L41381e.  call temp:= `clone`(v2) @signature `[Lq3/s;.clone:()Ljava/lang/Object;` @kind virtual;
  #L413824.  v2:= temp @kind object;
  #L413826.  v2:= (`q3.s`[]) v2 @kind object;
  #L41382a.  v0.`q3.b0.c` @type ^`q3.s`[] := v2 @kind object;
  #L41382e.  v0.`q3.b0.d` @type ^`v1.h3` := v3 @kind object;
  #L413832.  v0.`q3.b0.e` @type ^`java.lang.Object` := v4 @kind object;
  #L413836.  v1:= length @variable v1;
  #L413838.  v0.`q3.b0.a` @type ^`int` := v1;
  #L41383c.  return @kind void;
}
procedure `boolean` `a`(`q3.b0` v3 @kind this, `q3.b0` v4 @kind object) @signature `Lq3/b0;.a:(Lq3/b0;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41374c.  v0:= 0I;
  #L41374e.  if v4 == 0 then goto L413788;
  #L413752.  v1:= v4.`q3.b0.c` @type ^`q3.s`[] @kind object;
  #L413756.  v1:= length @variable v1;
  #L413758.  v2:= v3.`q3.b0.c` @type ^`q3.s`[] @kind object;
  #L41375c.  v2:= length @variable v2;
  #L41375e.  if v1 == v2 then goto L413764;
  #L413762.  goto L413788;
  #L413764.  v1:= 0I;
  #L413766.  v2:= v3.`q3.b0.c` @type ^`q3.s`[] @kind object;
  #L41376a.  v2:= length @variable v2;
  #L41376c.  if v1 >= v2 then goto L413784;
  #L413770.  call temp:= `b`(v3, v4, v1) @signature `Lq3/b0;.b:(Lq3/b0;I)Z` @kind virtual;
  #L413776.  v2:= temp;
  #L413778.  if v2 != 0 then goto L41377e;
  #L41377c.  return v0;
  #L41377e.  v1:= v1 + 1;
  #L413782.  goto L413766;
  #L413784.  v4:= 1I;
  #L413786.  return v4;
  #L413788.  return v0;
}
procedure `boolean` `b`(`q3.b0` v3 @kind this, `q3.b0` v4 @kind object, `int` v5 ) @signature `Lq3/b0;.b:(Lq3/b0;I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41379c.  v0:= 0I;
  #L41379e.  if v4 != 0 then goto L4137a4;
  #L4137a2.  return v0;
  #L4137a4.  v1:= v3.`q3.b0.b` @type ^`v1.u2`[] @kind object;
  #L4137a8.  v1:= v1[v5] @kind object;
  #L4137ac.  v2:= v4.`q3.b0.b` @type ^`v1.u2`[] @kind object;
  #L4137b0.  v2:= v2[v5] @kind object;
  #L4137b4.  call temp:= `c`(v1, v2) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4137ba.  v1:= temp;
  #L4137bc.  if v1 == 0 then goto L4137de;
  #L4137c0.  v1:= v3.`q3.b0.c` @type ^`q3.s`[] @kind object;
  #L4137c4.  v1:= v1[v5] @kind object;
  #L4137c8.  v4:= v4.`q3.b0.c` @type ^`q3.s`[] @kind object;
  #L4137cc.  v4:= v4[v5] @kind object;
  #L4137d0.  call temp:= `c`(v1, v4) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4137d6.  v4:= temp;
  #L4137d8.  if v4 == 0 then goto L4137de;
  #L4137dc.  v0:= 1I;
  #L4137de.  return v0;
}
procedure `boolean` `c`(`q3.b0` v1 @kind this, `int` v2 ) @signature `Lq3/b0;.c:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4137f0.  v0:= v1.`q3.b0.b` @type ^`v1.u2`[] @kind object;
  #L4137f4.  v2:= v0[v2] @kind object;
  #L4137f8.  if v2 == 0 then goto L413800;
  #L4137fc.  v2:= 1I;
  #L4137fe.  goto L413802;
  #L413800.  v2:= 0I;
  #L413802.  return v2;
}
