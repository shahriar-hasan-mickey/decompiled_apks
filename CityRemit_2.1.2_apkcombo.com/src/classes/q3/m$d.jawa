record `q3.m$d` @kind class @AccessFlag PUBLIC_FINAL extends `q3.y` @kind class {
  `boolean` `q3.m$d.P` @AccessFlag PUBLIC_FINAL;
  `boolean` `q3.m$d.Q` @AccessFlag PUBLIC_FINAL;
  `boolean` `q3.m$d.R` @AccessFlag PUBLIC_FINAL;
  `boolean` `q3.m$d.S` @AccessFlag PUBLIC_FINAL;
  `boolean` `q3.m$d.T` @AccessFlag PUBLIC_FINAL;
  `boolean` `q3.m$d.U` @AccessFlag PUBLIC_FINAL;
  `boolean` `q3.m$d.V` @AccessFlag PUBLIC_FINAL;
  `boolean` `q3.m$d.W` @AccessFlag PUBLIC_FINAL;
  `boolean` `q3.m$d.X` @AccessFlag PUBLIC_FINAL;
  `boolean` `q3.m$d.Y` @AccessFlag PUBLIC_FINAL;
  `boolean` `q3.m$d.Z` @AccessFlag PUBLIC_FINAL;
  `boolean` `q3.m$d.a0` @AccessFlag PUBLIC_FINAL;
  `boolean` `q3.m$d.b0` @AccessFlag PUBLIC_FINAL;
  `android.util.SparseArray` `q3.m$d.c0` @AccessFlag PRIVATE_FINAL;
  `android.util.SparseBooleanArray` `q3.m$d.d0` @AccessFlag PRIVATE_FINAL;
}
global `q3.m$d` `@@q3.m$d.e0` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lq3/m$d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4100e0.  v0:= new `q3.m$d$a`;
  #L4100e4.  call `<init>`(v0) @signature `Lq3/m$d$a;.<init>:()V` @kind direct;
  #L4100ea.  call temp:= `W`(v0) @signature `Lq3/m$d$a;.W:()Lq3/m$d;` @kind virtual;
  #L4100f0.  v0:= temp @kind object;
  #L4100f2.  `@@q3.m$d.e0` @type ^`q3.m$d` := v0 @kind object;
  #L4100f6.  return @kind void;
}
procedure `void` `<init>`(`q3.m$d` v1 @kind this, `q3.m$d$a` v2 @kind object) @signature `Lq3/m$d;.<init>:(Lq3/m$d$a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L410108.  call `<init>`(v1, v2) @signature `Lq3/y;.<init>:(Lq3/y$a;)V` @kind direct;
  #L41010e.  call temp:= `P`(v2) @signature `Lq3/m$d$a;.P:(Lq3/m$d$a;)Z` @kind static;
  #L410114.  v0:= temp;
  #L410116.  v1.`q3.m$d.P` @type ^`boolean` := v0 @kind boolean;
  #L41011a.  call temp:= `Q`(v2) @signature `Lq3/m$d$a;.Q:(Lq3/m$d$a;)Z` @kind static;
  #L410120.  v0:= temp;
  #L410122.  v1.`q3.m$d.Q` @type ^`boolean` := v0 @kind boolean;
  #L410126.  call temp:= `R`(v2) @signature `Lq3/m$d$a;.R:(Lq3/m$d$a;)Z` @kind static;
  #L41012c.  v0:= temp;
  #L41012e.  v1.`q3.m$d.R` @type ^`boolean` := v0 @kind boolean;
  #L410132.  call temp:= `S`(v2) @signature `Lq3/m$d$a;.S:(Lq3/m$d$a;)Z` @kind static;
  #L410138.  v0:= temp;
  #L41013a.  v1.`q3.m$d.S` @type ^`boolean` := v0 @kind boolean;
  #L41013e.  call temp:= `T`(v2) @signature `Lq3/m$d$a;.T:(Lq3/m$d$a;)Z` @kind static;
  #L410144.  v0:= temp;
  #L410146.  v1.`q3.m$d.T` @type ^`boolean` := v0 @kind boolean;
  #L41014a.  call temp:= `U`(v2) @signature `Lq3/m$d$a;.U:(Lq3/m$d$a;)Z` @kind static;
  #L410150.  v0:= temp;
  #L410152.  v1.`q3.m$d.U` @type ^`boolean` := v0 @kind boolean;
  #L410156.  call temp:= `V`(v2) @signature `Lq3/m$d$a;.V:(Lq3/m$d$a;)Z` @kind static;
  #L41015c.  v0:= temp;
  #L41015e.  v1.`q3.m$d.V` @type ^`boolean` := v0 @kind boolean;
  #L410162.  call temp:= `H`(v2) @signature `Lq3/m$d$a;.H:(Lq3/m$d$a;)Z` @kind static;
  #L410168.  v0:= temp;
  #L41016a.  v1.`q3.m$d.W` @type ^`boolean` := v0 @kind boolean;
  #L41016e.  call temp:= `I`(v2) @signature `Lq3/m$d$a;.I:(Lq3/m$d$a;)Z` @kind static;
  #L410174.  v0:= temp;
  #L410176.  v1.`q3.m$d.X` @type ^`boolean` := v0 @kind boolean;
  #L41017a.  call temp:= `J`(v2) @signature `Lq3/m$d$a;.J:(Lq3/m$d$a;)Z` @kind static;
  #L410180.  v0:= temp;
  #L410182.  v1.`q3.m$d.Y` @type ^`boolean` := v0 @kind boolean;
  #L410186.  call temp:= `K`(v2) @signature `Lq3/m$d$a;.K:(Lq3/m$d$a;)Z` @kind static;
  #L41018c.  v0:= temp;
  #L41018e.  v1.`q3.m$d.Z` @type ^`boolean` := v0 @kind boolean;
  #L410192.  call temp:= `L`(v2) @signature `Lq3/m$d$a;.L:(Lq3/m$d$a;)Z` @kind static;
  #L410198.  v0:= temp;
  #L41019a.  v1.`q3.m$d.a0` @type ^`boolean` := v0 @kind boolean;
  #L41019e.  call temp:= `M`(v2) @signature `Lq3/m$d$a;.M:(Lq3/m$d$a;)Z` @kind static;
  #L4101a4.  v0:= temp;
  #L4101a6.  v1.`q3.m$d.b0` @type ^`boolean` := v0 @kind boolean;
  #L4101aa.  call temp:= `N`(v2) @signature `Lq3/m$d$a;.N:(Lq3/m$d$a;)Landroid/util/SparseArray;` @kind static;
  #L4101b0.  v0:= temp @kind object;
  #L4101b2.  v1.`q3.m$d.c0` @type ^`android.util.SparseArray` := v0 @kind object;
  #L4101b6.  call temp:= `O`(v2) @signature `Lq3/m$d$a;.O:(Lq3/m$d$a;)Landroid/util/SparseBooleanArray;` @kind static;
  #L4101bc.  v2:= temp @kind object;
  #L4101be.  v1.`q3.m$d.d0` @type ^`android.util.SparseBooleanArray` := v2 @kind object;
  #L4101c2.  return @kind void;
}
procedure `void` `<init>`(`q3.m$d` v0 @kind this, `q3.m$d$a` v1 @kind object, `q3.m$a` v2 @kind object) @signature `Lq3/m$d;.<init>:(Lq3/m$d$a;Lq3/m$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4101d4.  call `<init>`(v0, v1) @signature `Lq3/m$d;.<init>:(Lq3/m$d$a;)V` @kind direct;
  #L4101da.  return @kind void;
}
procedure `android.util.SparseArray` `a`(`q3.m$d` v0 @kind object) @signature `Lq3/m$d;.a:(Lq3/m$d;)Landroid/util/SparseArray;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L40fcd8.  v0:= v0.`q3.m$d.c0` @type ^`android.util.SparseArray` @kind object;
  #L40fcdc.  return v0 @kind object;
}
procedure `android.util.SparseBooleanArray` `b`(`q3.m$d` v0 @kind object) @signature `Lq3/m$d;.b:(Lq3/m$d;)Landroid/util/SparseBooleanArray;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L40fcf0.  v0:= v0.`q3.m$d.d0` @type ^`android.util.SparseBooleanArray` @kind object;
  #L40fcf4.  return v0 @kind object;
}
procedure `boolean` `c`(`android.util.SparseBooleanArray` v4 @kind object, `android.util.SparseBooleanArray` v5 @kind object) @signature `Lq3/m$d;.c:(Landroid/util/SparseBooleanArray;Landroid/util/SparseBooleanArray;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40fd08.  call temp:= `size`(v4) @signature `Landroid/util/SparseBooleanArray;.size:()I` @kind virtual;
  #L40fd0e.  v0:= temp;
  #L40fd10.  call temp:= `size`(v5) @signature `Landroid/util/SparseBooleanArray;.size:()I` @kind virtual;
  #L40fd16.  v1:= temp;
  #L40fd18.  v2:= 0I;
  #L40fd1a.  if v1 == v0 then goto L40fd20;
  #L40fd1e.  return v2;
  #L40fd20.  v1:= 0I;
  #L40fd22.  if v1 >= v0 then goto L40fd42;
  #L40fd26.  call temp:= `keyAt`(v4, v1) @signature `Landroid/util/SparseBooleanArray;.keyAt:(I)I` @kind virtual;
  #L40fd2c.  v3:= temp;
  #L40fd2e.  call temp:= `indexOfKey`(v5, v3) @signature `Landroid/util/SparseBooleanArray;.indexOfKey:(I)I` @kind virtual;
  #L40fd34.  v3:= temp;
  #L40fd36.  if v3 >= 0 then goto L40fd3c;
  #L40fd3a.  return v2;
  #L40fd3c.  v1:= v1 + 1;
  #L40fd40.  goto L40fd22;
  #L40fd42.  v4:= 1I;
  #L40fd44.  return v4;
}
procedure `boolean` `d`(`android.util.SparseArray` v5 @kind object, `android.util.SparseArray` v6 @kind object) @signature `Lq3/m$d;.d:(Landroid/util/SparseArray;Landroid/util/SparseArray;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L40fd58.  call temp:= `size`(v5) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L40fd5e.  v0:= temp;
  #L40fd60.  call temp:= `size`(v6) @signature `Landroid/util/SparseArray;.size:()I` @kind virtual;
  #L40fd66.  v1:= temp;
  #L40fd68.  v2:= 0I;
  #L40fd6a.  if v1 == v0 then goto L40fd70;
  #L40fd6e.  return v2;
  #L40fd70.  v1:= 0I;
  #L40fd72.  if v1 >= v0 then goto L40fdb8;
  #L40fd76.  call temp:= `keyAt`(v5, v1) @signature `Landroid/util/SparseArray;.keyAt:(I)I` @kind virtual;
  #L40fd7c.  v3:= temp;
  #L40fd7e.  call temp:= `indexOfKey`(v6, v3) @signature `Landroid/util/SparseArray;.indexOfKey:(I)I` @kind virtual;
  #L40fd84.  v3:= temp;
  #L40fd86.  if v3 < 0 then goto L40fdb6;
  #L40fd8a.  call temp:= `valueAt`(v5, v1) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L40fd90.  v4:= temp @kind object;
  #L40fd92.  v4:= (`java.util.Map`) v4 @kind object;
  #L40fd96.  call temp:= `valueAt`(v6, v3) @signature `Landroid/util/SparseArray;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L40fd9c.  v3:= temp @kind object;
  #L40fd9e.  v3:= (`java.util.Map`) v3 @kind object;
  #L40fda2.  call temp:= `e`(v4, v3) @signature `Lq3/m$d;.e:(Ljava/util/Map;Ljava/util/Map;)Z` @kind static;
  #L40fda8.  v3:= temp;
  #L40fdaa.  if v3 != 0 then goto L40fdb0;
  #L40fdae.  goto L40fdb6;
  #L40fdb0.  v1:= v1 + 1;
  #L40fdb4.  goto L40fd72;
  #L40fdb6.  return v2;
  #L40fdb8.  v5:= 1I;
  #L40fdba.  return v5;
}
procedure `boolean` `e`(`java.util.Map` v4 @kind object, `java.util.Map` v5 @kind object) @signature `Lq3/m$d;.e:(Ljava/util/Map;Ljava/util/Map;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40fdcc.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L40fdd2.  v0:= temp;
  #L40fdd4.  call temp:= `size`(v5) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L40fdda.  v1:= temp;
  #L40fddc.  v2:= 0I;
  #L40fdde.  if v1 == v0 then goto L40fde4;
  #L40fde2.  return v2;
  #L40fde4.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L40fdea.  v4:= temp @kind object;
  #L40fdec.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L40fdf2.  v4:= temp @kind object;
  #L40fdf4.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L40fdfa.  v0:= temp;
  #L40fdfc.  if v0 == 0 then goto L40fe42;
  #L40fe00.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L40fe06.  v0:= temp @kind object;
  #L40fe08.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L40fe0c.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L40fe12.  v1:= temp @kind object;
  #L40fe14.  v1:= (`x2.v0`) v1 @kind object;
  #L40fe18.  call temp:= `containsKey`(v5, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L40fe1e.  v3:= temp;
  #L40fe20.  if v3 == 0 then goto L40fe40;
  #L40fe24.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L40fe2a.  v0:= temp @kind object;
  #L40fe2c.  call temp:= `get`(v5, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40fe32.  v1:= temp @kind object;
  #L40fe34.  call temp:= `c`(v0, v1) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L40fe3a.  v0:= temp;
  #L40fe3c.  if v0 != 0 then goto L40fdf4;
  #L40fe40.  return v2;
  #L40fe42.  v4:= 1I;
  #L40fe44.  return v4;
}
procedure `q3.m$d` `g`(`android.content.Context` v1 @kind object) @signature `Lq3/m$d;.g:(Landroid/content/Context;)Lq3/m$d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L410064.  v0:= new `q3.m$d$a`;
  #L410068.  call `<init>`(v0, v1) @signature `Lq3/m$d$a;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L41006e.  call temp:= `W`(v0) @signature `Lq3/m$d$a;.W:()Lq3/m$d;` @kind virtual;
  #L410074.  v1:= temp @kind object;
  #L410076.  return v1 @kind object;
}
procedure `boolean` `equals`(`q3.m$d` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lq3/m$d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40fe58.  v0:= 1I;
  #L40fe5a.  if v4 != v5 then goto L40fe60;
  #L40fe5e.  return v0;
  #L40fe60.  v1:= 0I;
  #L40fe62.  if v5 == 0 then goto L40ff54;
  #L40fe66.  v2:= constclass @type ^`q3.m$d` @kind object;
  #L40fe6a.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L40fe70.  v3:= temp @kind object;
  #L40fe72.  if v2 == v3 then goto L40fe7a;
  #L40fe76.  goto L40ff54;
  #L40fe7a.  v5:= (`q3.m$d`) v5 @kind object;
  #L40fe7e.  call temp:= `equals`(v4, v5) @signature `Lq3/y;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L40fe84.  v2:= temp;
  #L40fe86.  if v2 == 0 then goto L40ff50;
  #L40fe8a.  v2:= v4.`q3.m$d.P` @type ^`boolean` @kind boolean;
  #L40fe8e.  v3:= v5.`q3.m$d.P` @type ^`boolean` @kind boolean;
  #L40fe92.  if v2 != v3 then goto L40ff50;
  #L40fe96.  v2:= v4.`q3.m$d.Q` @type ^`boolean` @kind boolean;
  #L40fe9a.  v3:= v5.`q3.m$d.Q` @type ^`boolean` @kind boolean;
  #L40fe9e.  if v2 != v3 then goto L40ff50;
  #L40fea2.  v2:= v4.`q3.m$d.R` @type ^`boolean` @kind boolean;
  #L40fea6.  v3:= v5.`q3.m$d.R` @type ^`boolean` @kind boolean;
  #L40feaa.  if v2 != v3 then goto L40ff50;
  #L40feae.  v2:= v4.`q3.m$d.S` @type ^`boolean` @kind boolean;
  #L40feb2.  v3:= v5.`q3.m$d.S` @type ^`boolean` @kind boolean;
  #L40feb6.  if v2 != v3 then goto L40ff50;
  #L40feba.  v2:= v4.`q3.m$d.T` @type ^`boolean` @kind boolean;
  #L40febe.  v3:= v5.`q3.m$d.T` @type ^`boolean` @kind boolean;
  #L40fec2.  if v2 != v3 then goto L40ff50;
  #L40fec6.  v2:= v4.`q3.m$d.U` @type ^`boolean` @kind boolean;
  #L40feca.  v3:= v5.`q3.m$d.U` @type ^`boolean` @kind boolean;
  #L40fece.  if v2 != v3 then goto L40ff50;
  #L40fed2.  v2:= v4.`q3.m$d.V` @type ^`boolean` @kind boolean;
  #L40fed6.  v3:= v5.`q3.m$d.V` @type ^`boolean` @kind boolean;
  #L40feda.  if v2 != v3 then goto L40ff50;
  #L40fede.  v2:= v4.`q3.m$d.W` @type ^`boolean` @kind boolean;
  #L40fee2.  v3:= v5.`q3.m$d.W` @type ^`boolean` @kind boolean;
  #L40fee6.  if v2 != v3 then goto L40ff50;
  #L40feea.  v2:= v4.`q3.m$d.X` @type ^`boolean` @kind boolean;
  #L40feee.  v3:= v5.`q3.m$d.X` @type ^`boolean` @kind boolean;
  #L40fef2.  if v2 != v3 then goto L40ff50;
  #L40fef6.  v2:= v4.`q3.m$d.Y` @type ^`boolean` @kind boolean;
  #L40fefa.  v3:= v5.`q3.m$d.Y` @type ^`boolean` @kind boolean;
  #L40fefe.  if v2 != v3 then goto L40ff50;
  #L40ff02.  v2:= v4.`q3.m$d.Z` @type ^`boolean` @kind boolean;
  #L40ff06.  v3:= v5.`q3.m$d.Z` @type ^`boolean` @kind boolean;
  #L40ff0a.  if v2 != v3 then goto L40ff50;
  #L40ff0e.  v2:= v4.`q3.m$d.a0` @type ^`boolean` @kind boolean;
  #L40ff12.  v3:= v5.`q3.m$d.a0` @type ^`boolean` @kind boolean;
  #L40ff16.  if v2 != v3 then goto L40ff50;
  #L40ff1a.  v2:= v4.`q3.m$d.b0` @type ^`boolean` @kind boolean;
  #L40ff1e.  v3:= v5.`q3.m$d.b0` @type ^`boolean` @kind boolean;
  #L40ff22.  if v2 != v3 then goto L40ff50;
  #L40ff26.  v2:= v4.`q3.m$d.d0` @type ^`android.util.SparseBooleanArray` @kind object;
  #L40ff2a.  v3:= v5.`q3.m$d.d0` @type ^`android.util.SparseBooleanArray` @kind object;
  #L40ff2e.  call temp:= `c`(v2, v3) @signature `Lq3/m$d;.c:(Landroid/util/SparseBooleanArray;Landroid/util/SparseBooleanArray;)Z` @kind static;
  #L40ff34.  v2:= temp;
  #L40ff36.  if v2 == 0 then goto L40ff50;
  #L40ff3a.  v2:= v4.`q3.m$d.c0` @type ^`android.util.SparseArray` @kind object;
  #L40ff3e.  v5:= v5.`q3.m$d.c0` @type ^`android.util.SparseArray` @kind object;
  #L40ff42.  call temp:= `d`(v2, v5) @signature `Lq3/m$d;.d:(Landroid/util/SparseArray;Landroid/util/SparseArray;)Z` @kind static;
  #L40ff48.  v5:= temp;
  #L40ff4a.  if v5 == 0 then goto L40ff50;
  #L40ff4e.  goto L40ff52;
  #L40ff50.  v0:= 0I;
  #L40ff52.  return v0;
  #L40ff54.  return v1;
}
procedure `q3.m$d$a` `f`(`q3.m$d` v2 @kind this) @signature `Lq3/m$d;.f:()Lq3/m$d$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L410088.  v0:= new `q3.m$d$a`;
  #L41008c.  v1:= 0I;
  #L41008e.  call `<init>`(v0, v2, v1) @signature `Lq3/m$d$a;.<init>:(Lq3/m$d;Lq3/m$a;)V` @kind direct;
  #L410094.  return v0 @kind object;
}
procedure `boolean` `h`(`q3.m$d` v1 @kind this, `int` v2 ) @signature `Lq3/m$d;.h:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40ff68.  v0:= v1.`q3.m$d.d0` @type ^`android.util.SparseBooleanArray` @kind object;
  #L40ff6c.  call temp:= `get`(v0, v2) @signature `Landroid/util/SparseBooleanArray;.get:(I)Z` @kind virtual;
  #L40ff72.  v2:= temp;
  #L40ff74.  return v2;
}
procedure `int` `hashCode`(`q3.m$d` v3 @kind this) @signature `Lq3/m$d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40ffc0.  call temp:= `hashCode`(v3) @signature `Lq3/y;.hashCode:()I` @kind super;
  #L40ffc6.  v0:= temp;
  #L40ffc8.  v1:= 31I;
  #L40ffcc.  v0:= v0 + v1 @kind int;
  #L40ffce.  v0:= v0 * 31;
  #L40ffd2.  v2:= v3.`q3.m$d.P` @type ^`boolean` @kind boolean;
  #L40ffd6.  v0:= v0 + v2 @kind int;
  #L40ffd8.  v0:= v0 * 31;
  #L40ffdc.  v2:= v3.`q3.m$d.Q` @type ^`boolean` @kind boolean;
  #L40ffe0.  v0:= v0 + v2 @kind int;
  #L40ffe2.  v0:= v0 * 31;
  #L40ffe6.  v2:= v3.`q3.m$d.R` @type ^`boolean` @kind boolean;
  #L40ffea.  v0:= v0 + v2 @kind int;
  #L40ffec.  v0:= v0 * 31;
  #L40fff0.  v2:= v3.`q3.m$d.S` @type ^`boolean` @kind boolean;
  #L40fff4.  v0:= v0 + v2 @kind int;
  #L40fff6.  v0:= v0 * 31;
  #L40fffa.  v2:= v3.`q3.m$d.T` @type ^`boolean` @kind boolean;
  #L40fffe.  v0:= v0 + v2 @kind int;
  #L410000.  v0:= v0 * 31;
  #L410004.  v2:= v3.`q3.m$d.U` @type ^`boolean` @kind boolean;
  #L410008.  v0:= v0 + v2 @kind int;
  #L41000a.  v0:= v0 * 31;
  #L41000e.  v2:= v3.`q3.m$d.V` @type ^`boolean` @kind boolean;
  #L410012.  v0:= v0 + v2 @kind int;
  #L410014.  v0:= v0 * 31;
  #L410018.  v2:= v3.`q3.m$d.W` @type ^`boolean` @kind boolean;
  #L41001c.  v0:= v0 + v2 @kind int;
  #L41001e.  v0:= v0 * 31;
  #L410022.  v2:= v3.`q3.m$d.X` @type ^`boolean` @kind boolean;
  #L410026.  v0:= v0 + v2 @kind int;
  #L410028.  v0:= v0 * 31;
  #L41002c.  v2:= v3.`q3.m$d.Y` @type ^`boolean` @kind boolean;
  #L410030.  v0:= v0 + v2 @kind int;
  #L410032.  v0:= v0 * 31;
  #L410036.  v2:= v3.`q3.m$d.Z` @type ^`boolean` @kind boolean;
  #L41003a.  v0:= v0 + v2 @kind int;
  #L41003c.  v0:= v0 * 31;
  #L410040.  v2:= v3.`q3.m$d.a0` @type ^`boolean` @kind boolean;
  #L410044.  v0:= v0 + v2 @kind int;
  #L410046.  v0:= v0 * 31;
  #L41004a.  v1:= v3.`q3.m$d.b0` @type ^`boolean` @kind boolean;
  #L41004e.  v0:= v0 + v1 @kind int;
  #L410050.  return v0;
}
procedure `q3.m$e` `i`(`q3.m$d` v1 @kind this, `int` v2 , `x2.v0` v3 @kind object) @signature `Lq3/m$d;.i:(ILx2/v0;)Lq3/m$e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4100a8.  v0:= v1.`q3.m$d.c0` @type ^`android.util.SparseArray` @kind object;
  #L4100ac.  call temp:= `get`(v0, v2) @signature `Landroid/util/SparseArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4100b2.  v2:= temp @kind object;
  #L4100b4.  v2:= (`java.util.Map`) v2 @kind object;
  #L4100b8.  if v2 == 0 then goto L4100ca;
  #L4100bc.  call temp:= `get`(v2, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4100c2.  v2:= temp @kind object;
  #L4100c4.  v2:= (`q3.m$e`) v2 @kind object;
  #L4100c8.  goto L4100cc;
  #L4100ca.  v2:= 0I;
  #L4100cc.  return v2 @kind object;
}
procedure `boolean` `j`(`q3.m$d` v1 @kind this, `int` v2 , `x2.v0` v3 @kind object) @signature `Lq3/m$d;.j:(ILx2/v0;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40ff88.  v0:= v1.`q3.m$d.c0` @type ^`android.util.SparseArray` @kind object;
  #L40ff8c.  call temp:= `get`(v0, v2) @signature `Landroid/util/SparseArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L40ff92.  v2:= temp @kind object;
  #L40ff94.  v2:= (`java.util.Map`) v2 @kind object;
  #L40ff98.  if v2 == 0 then goto L40ffac;
  #L40ff9c.  call temp:= `containsKey`(v2, v3) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L40ffa2.  v2:= temp;
  #L40ffa4.  if v2 == 0 then goto L40ffac;
  #L40ffa8.  v2:= 1I;
  #L40ffaa.  goto L40ffae;
  #L40ffac.  v2:= 0I;
  #L40ffae.  return v2;
}
