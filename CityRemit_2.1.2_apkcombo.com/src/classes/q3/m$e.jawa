record `q3.m$e` @kind class @AccessFlag PUBLIC_FINAL extends `v1.g` @kind interface {
  `int` `q3.m$e.o` @AccessFlag PUBLIC_FINAL;
  `int`[] `q3.m$e.p` @AccessFlag PUBLIC_FINAL;
  `int` `q3.m$e.q` @AccessFlag PUBLIC_FINAL;
}
global `v1.g$a` `@@q3.m$e.r` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lq3/m$e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L410384.  v0:= `@@q3.n.a` @type ^`q3.n` @kind object;
  #L410388.  `@@q3.m$e.r` @type ^`v1.g$a` := v0 @kind object;
  #L41038c.  return @kind void;
}
procedure `void` `<init>`(`q3.m$e` v0 @kind this, `int` v1 , `int`[] v2 @kind object, `int` v3 ) @signature `Lq3/m$e;.<init>:(I[II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4103a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4103a6.  v0.`q3.m$e.o` @type ^`int` := v1;
  #L4103aa.  v1:= length @variable v2;
  #L4103ac.  call temp:= `copyOf`(v2, v1) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L4103b2.  v1:= temp @kind object;
  #L4103b4.  v0.`q3.m$e.p` @type ^`int`[] := v1 @kind object;
  #L4103b8.  v0.`q3.m$e.q` @type ^`int` := v3;
  #L4103bc.  call `sort`(v1) @signature `Ljava/util/Arrays;.sort:([I)V` @kind static;
  #L4103c2.  return @kind void;
}
procedure `q3.m$e` `a`(`android.os.Bundle` v0 @kind object) @signature `Lq3/m$e;.a:(Landroid/os/Bundle;)Lq3/m$e;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L4102fc.  call temp:= `c`(v0) @signature `Lq3/m$e;.c:(Landroid/os/Bundle;)Lq3/m$e;` @kind static;
  #L410302.  v0:= temp @kind object;
  #L410304.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`int` v1 ) @signature `Lq3/m$e;.b:(I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4102dc.  v0:= 36I;
  #L4102e0.  call temp:= `toString`(v1, v0) @signature `Ljava/lang/Integer;.toString:(II)Ljava/lang/String;` @kind static;
  #L4102e6.  v1:= temp @kind object;
  #L4102e8.  return v1 @kind object;
}
procedure `q3.m$e` `c`(`android.os.Bundle` v6 @kind object) @signature `Lq3/m$e;.c:(Landroid/os/Bundle;)Lq3/m$e;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L410318.  v0:= 0I;
  #L41031a.  call temp:= `b`(v0) @signature `Lq3/m$e;.b:(I)Ljava/lang/String;` @kind static;
  #L410320.  v1:= temp @kind object;
  #L410322.  v2:= -1I;
  #L410324.  call temp:= `getInt`(v6, v1, v2) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;I)I` @kind virtual;
  #L41032a.  v1:= temp;
  #L41032c.  v3:= 1I;
  #L41032e.  call temp:= `b`(v3) @signature `Lq3/m$e;.b:(I)Ljava/lang/String;` @kind static;
  #L410334.  v4:= temp @kind object;
  #L410336.  call temp:= `getIntArray`(v6, v4) @signature `Landroid/os/Bundle;.getIntArray:(Ljava/lang/String;)[I` @kind virtual;
  #L41033c.  v4:= temp @kind object;
  #L41033e.  v5:= 2I;
  #L410340.  call temp:= `b`(v5) @signature `Lq3/m$e;.b:(I)Ljava/lang/String;` @kind static;
  #L410346.  v5:= temp @kind object;
  #L410348.  call temp:= `getInt`(v6, v5, v2) @signature `Landroid/os/Bundle;.getInt:(Ljava/lang/String;I)I` @kind virtual;
  #L41034e.  v6:= temp;
  #L410350.  if v1 < 0 then goto L41035a;
  #L410354.  if v6 < 0 then goto L41035a;
  #L410358.  v0:= 1I;
  #L41035a.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L410360.  call temp:= `e`(v4) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L410366.  v0:= new `q3.m$e`;
  #L41036a.  call `<init>`(v0, v1, v4, v6) @signature `Lq3/m$e;.<init>:(I[II)V` @kind direct;
  #L410370.  return v0 @kind object;
}
procedure `boolean` `equals`(`q3.m$e` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lq3/m$e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L410240.  v0:= 1I;
  #L410242.  if v4 != v5 then goto L410248;
  #L410246.  return v0;
  #L410248.  v1:= 0I;
  #L41024a.  if v5 == 0 then goto L410296;
  #L41024e.  v2:= constclass @type ^`q3.m$e` @kind object;
  #L410252.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L410258.  v3:= temp @kind object;
  #L41025a.  if v2 == v3 then goto L410260;
  #L41025e.  goto L410296;
  #L410260.  v5:= (`q3.m$e`) v5 @kind object;
  #L410264.  v2:= v4.`q3.m$e.o` @type ^`int`;
  #L410268.  v3:= v5.`q3.m$e.o` @type ^`int`;
  #L41026c.  if v2 != v3 then goto L410292;
  #L410270.  v2:= v4.`q3.m$e.p` @type ^`int`[] @kind object;
  #L410274.  v3:= v5.`q3.m$e.p` @type ^`int`[] @kind object;
  #L410278.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([I[I)Z` @kind static;
  #L41027e.  v2:= temp;
  #L410280.  if v2 == 0 then goto L410292;
  #L410284.  v2:= v4.`q3.m$e.q` @type ^`int`;
  #L410288.  v5:= v5.`q3.m$e.q` @type ^`int`;
  #L41028c.  if v2 != v5 then goto L410292;
  #L410290.  goto L410294;
  #L410292.  v0:= 0I;
  #L410294.  return v0;
  #L410296.  return v1;
}
procedure `int` `hashCode`(`q3.m$e` v2 @kind this) @signature `Lq3/m$e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4102a8.  v0:= v2.`q3.m$e.o` @type ^`int`;
  #L4102ac.  v0:= v0 * 31;
  #L4102b0.  v1:= v2.`q3.m$e.p` @type ^`int`[] @kind object;
  #L4102b4.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([I)I` @kind static;
  #L4102ba.  v1:= temp;
  #L4102bc.  v0:= v0 + v1 @kind int;
  #L4102be.  v0:= v0 * 31;
  #L4102c2.  v1:= v2.`q3.m$e.q` @type ^`int`;
  #L4102c6.  v0:= v0 + v1 @kind int;
  #L4102c8.  return v0;
}
