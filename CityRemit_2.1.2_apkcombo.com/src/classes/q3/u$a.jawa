record `q3.u$a` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `q3.u$a.a` @AccessFlag PRIVATE_FINAL;
  `int`[] `q3.u$a.b` @AccessFlag PRIVATE_FINAL;
  `x2.v0`[] `q3.u$a.c` @AccessFlag PRIVATE_FINAL;
  `int`[] `q3.u$a.d` @AccessFlag PRIVATE_FINAL;
  `int`[][][] `q3.u$a.e` @AccessFlag PRIVATE_FINAL;
  `x2.v0` `q3.u$a.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`q3.u$a` v0 @kind this, `java.lang.String`[] v1 @kind object, `int`[] v2 @kind object, `x2.v0`[] v3 @kind object, `int`[] v4 @kind object, `int`[][][] v5 @kind object, `x2.v0` v6 @kind object) @signature `Lq3/u$a;.<init>:([Ljava/lang/String;[I[Lx2/v0;[I[[[ILx2/v0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4125e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4125ea.  v0.`q3.u$a.b` @type ^`int`[] := v2 @kind object;
  #L4125ee.  v0.`q3.u$a.c` @type ^`x2.v0`[] := v3 @kind object;
  #L4125f2.  v0.`q3.u$a.e` @type ^`int`[][][] := v5 @kind object;
  #L4125f6.  v0.`q3.u$a.d` @type ^`int`[] := v4 @kind object;
  #L4125fa.  v0.`q3.u$a.f` @type ^`x2.v0` := v6 @kind object;
  #L4125fe.  v1:= length @variable v2;
  #L412600.  v0.`q3.u$a.a` @type ^`int` := v1;
  #L412604.  return @kind void;
}
procedure `int` `a`(`q3.u$a` v6 @kind this, `int` v7 , `int` v8 , `boolean` v9 ) @signature `Lq3/u$a;.a:(IIZ)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41245c.  v0:= v6.`q3.u$a.c` @type ^`x2.v0`[] @kind object;
  #L412460.  v0:= v0[v7] @kind object;
  #L412464.  call temp:= `b`(v0, v8) @signature `Lx2/v0;.b:(I)Lx2/t0;` @kind virtual;
  #L41246a.  v0:= temp @kind object;
  #L41246c.  v0:= v0.`x2.t0.o` @type ^`int`;
  #L412470.  v1:= new `int`[v0];
  #L412474.  v2:= 0I;
  #L412476.  v3:= 0I;
  #L412478.  if v2 >= v0 then goto L4124a4;
  #L41247c.  call temp:= `g`(v6, v7, v8, v2) @signature `Lq3/u$a;.g:(III)I` @kind virtual;
  #L412482.  v4:= temp;
  #L412484.  v5:= 4I;
  #L412486.  if v4 == v5 then goto L412494;
  #L41248a.  if v9 == 0 then goto L41249e;
  #L41248e.  v5:= 3I;
  #L412490.  if v4 != v5 then goto L41249e;
  #L412494.  v4:= v3 + 1;
  #L412498.  v1[v3]:= v2;
  #L41249c.  v3:= v4;
  #L41249e.  v2:= v2 + 1;
  #L4124a2.  goto L412478;
  #L4124a4.  call temp:= `copyOf`(v1, v3) @signature `Ljava/util/Arrays;.copyOf:([II)[I` @kind static;
  #L4124aa.  v9:= temp @kind object;
  #L4124ac.  call temp:= `b`(v6, v7, v8, v9) @signature `Lq3/u$a;.b:(II[I)I` @kind virtual;
  #L4124b2.  v7:= temp;
  #L4124b4.  return v7;
}
procedure `int` `b`(`q3.u$a` v7 @kind this, `int` v8 , `int` v9 , `int`[] v10 @kind object) @signature `Lq3/u$a;.b:(II[I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4124c8.  v0:= 0I;
  #L4124ca.  v1:= 16I;
  #L4124ce.  v2:= 0I;
  #L4124d0.  v4:= v2 @kind object;
  #L4124d2.  v1:= 0I;
  #L4124d4.  v2:= 0I;
  #L4124d6.  v3:= 16I;
  #L4124da.  v5:= length @variable v10;
  #L4124dc.  if v0 >= v5 then goto L412542;
  #L4124e0.  v5:= v10[v0];
  #L4124e4.  v6:= v7.`q3.u$a.c` @type ^`x2.v0`[] @kind object;
  #L4124e8.  v6:= v6[v8] @kind object;
  #L4124ec.  call temp:= `b`(v6, v9) @signature `Lx2/v0;.b:(I)Lx2/t0;` @kind virtual;
  #L4124f2.  v6:= temp @kind object;
  #L4124f4.  call temp:= `b`(v6, v5) @signature `Lx2/t0;.b:(I)Lv1/j1;` @kind virtual;
  #L4124fa.  v5:= temp @kind object;
  #L4124fc.  v5:= v5.`v1.j1.z` @type ^`java.lang.String` @kind object;
  #L412500.  v6:= v2 + 1;
  #L412504.  if v2 != 0 then goto L41250c;
  #L412508.  v4:= v5 @kind object;
  #L41250a.  goto L41251a;
  #L41250c.  call temp:= `c`(v4, v5) @signature `Ls3/l0;.c:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L412512.  v2:= temp;
  #L412514.  v2:= v2 ^~ 1;
  #L412518.  v1:= v1 ^| v2 @kind int;
  #L41251a.  v2:= v7.`q3.u$a.e` @type ^`int`[][][] @kind object;
  #L41251e.  v2:= v2[v8] @kind object;
  #L412522.  v2:= v2[v9] @kind object;
  #L412526.  v2:= v2[v0];
  #L41252a.  call temp:= `d`(v2) @signature `Lv1/s2;.d:(I)I` @kind static;
  #L412530.  v2:= temp;
  #L412532.  call temp:= `min`(v3, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L412538.  v3:= temp;
  #L41253a.  v0:= v0 + 1;
  #L41253e.  v2:= v6;
  #L412540.  goto L4124da;
  #L412542.  if v1 == 0 then goto L412556;
  #L412546.  v9:= v7.`q3.u$a.d` @type ^`int`[] @kind object;
  #L41254a.  v8:= v9[v8];
  #L41254e.  call temp:= `min`(v3, v8) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L412554.  v3:= temp;
  #L412556.  return v3;
}
procedure `int` `c`(`q3.u$a` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lq3/u$a;.c:(III)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L412568.  v0:= v1.`q3.u$a.e` @type ^`int`[][][] @kind object;
  #L41256c.  v2:= v0[v2] @kind object;
  #L412570.  v2:= v2[v3] @kind object;
  #L412574.  v2:= v2[v4];
  #L412578.  return v2;
}
procedure `int` `d`(`q3.u$a` v1 @kind this) @signature `Lq3/u$a;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41258c.  v0:= v1.`q3.u$a.a` @type ^`int`;
  #L412590.  return v0;
}
procedure `int` `e`(`q3.u$a` v1 @kind this, `int` v2 ) @signature `Lq3/u$a;.e:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4125a4.  v0:= v1.`q3.u$a.b` @type ^`int`[] @kind object;
  #L4125a8.  v2:= v0[v2];
  #L4125ac.  return v2;
}
procedure `x2.v0` `f`(`q3.u$a` v1 @kind this, `int` v2 ) @signature `Lq3/u$a;.f:(I)Lx2/v0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L412618.  v0:= v1.`q3.u$a.c` @type ^`x2.v0`[] @kind object;
  #L41261c.  v2:= v0[v2] @kind object;
  #L412620.  return v2 @kind object;
}
procedure `int` `g`(`q3.u$a` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Lq3/u$a;.g:(III)I` @AccessFlag PUBLIC {
    temp;

  #L4125c0.  call temp:= `c`(v0, v1, v2, v3) @signature `Lq3/u$a;.c:(III)I` @kind virtual;
  #L4125c6.  v1:= temp;
  #L4125c8.  call temp:= `f`(v1) @signature `Lv1/s2;.f:(I)I` @kind static;
  #L4125ce.  v1:= temp;
  #L4125d0.  return v1;
}
procedure `x2.v0` `h`(`q3.u$a` v1 @kind this) @signature `Lq3/u$a;.h:()Lx2/v0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L412634.  v0:= v1.`q3.u$a.f` @type ^`x2.v0` @kind object;
  #L412638.  return v0 @kind object;
}
