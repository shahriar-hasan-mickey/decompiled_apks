record `m2.p` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `m2.q` @kind interface {
}
global `m2.p` `@@m2.p.b` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lm2/p;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d7cf8.  v0:= new `m2.p`;
  #L3d7cfc.  call `<init>`(v0) @signature `Lm2/p;.<init>:()V` @kind direct;
  #L3d7d02.  `@@m2.p.b` @type ^`m2.p` := v0 @kind object;
  #L3d7d06.  return @kind void;
}
procedure `void` `<init>`(`m2.p` v0 @kind this) @signature `Lm2/p;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3d7d18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d7d1e.  return @kind void;
}
procedure `java.util.List` `a`(`m2.p` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `boolean` v3 ) @signature `Lm2/p;.a:(Ljava/lang/String;ZZ)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3d7cdc.  call temp:= `s`(v1, v2, v3) @signature `Lm2/v;.s:(Ljava/lang/String;ZZ)Ljava/util/List;` @kind static;
  #L3d7ce2.  v1:= temp @kind object;
  #L3d7ce4.  return v1 @kind object;
}
