record `m2.g` @kind class @AccessFlag FINAL extends `android.media.MediaCodec$Callback` @kind class {
  `java.lang.Object` `m2.g.a` @AccessFlag PRIVATE_FINAL;
  `android.os.HandlerThread` `m2.g.b` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `m2.g.c` @AccessFlag PRIVATE;
  `m2.k` `m2.g.d` @AccessFlag PRIVATE_FINAL;
  `m2.k` `m2.g.e` @AccessFlag PRIVATE_FINAL;
  `java.util.ArrayDeque` `m2.g.f` @AccessFlag PRIVATE_FINAL;
  `java.util.ArrayDeque` `m2.g.g` @AccessFlag PRIVATE_FINAL;
  `android.media.MediaFormat` `m2.g.h` @AccessFlag PRIVATE;
  `android.media.MediaFormat` `m2.g.i` @AccessFlag PRIVATE;
  `android.media.MediaCodec$CodecException` `m2.g.j` @AccessFlag PRIVATE;
  `long` `m2.g.k` @AccessFlag PRIVATE;
  `boolean` `m2.g.l` @AccessFlag PRIVATE;
  `java.lang.IllegalStateException` `m2.g.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`m2.g` v1 @kind this, `android.os.HandlerThread` v2 @kind object) @signature `Lm2/g;.<init>:(Landroid/os/HandlerThread;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3d3ad0.  call `<init>`(v1) @signature `Landroid/media/MediaCodec$Callback;.<init>:()V` @kind direct;
  #L3d3ad6.  v0:= new `java.lang.Object`;
  #L3d3ada.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d3ae0.  v1.`m2.g.a` @type ^`java.lang.Object` := v0 @kind object;
  #L3d3ae4.  v1.`m2.g.b` @type ^`android.os.HandlerThread` := v2 @kind object;
  #L3d3ae8.  v2:= new `m2.k`;
  #L3d3aec.  call `<init>`(v2) @signature `Lm2/k;.<init>:()V` @kind direct;
  #L3d3af2.  v1.`m2.g.d` @type ^`m2.k` := v2 @kind object;
  #L3d3af6.  v2:= new `m2.k`;
  #L3d3afa.  call `<init>`(v2) @signature `Lm2/k;.<init>:()V` @kind direct;
  #L3d3b00.  v1.`m2.g.e` @type ^`m2.k` := v2 @kind object;
  #L3d3b04.  v2:= new `java.util.ArrayDeque`;
  #L3d3b08.  call `<init>`(v2) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L3d3b0e.  v1.`m2.g.f` @type ^`java.util.ArrayDeque` := v2 @kind object;
  #L3d3b12.  v2:= new `java.util.ArrayDeque`;
  #L3d3b16.  call `<init>`(v2) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L3d3b1c.  v1.`m2.g.g` @type ^`java.util.ArrayDeque` := v2 @kind object;
  #L3d3b20.  return @kind void;
}
procedure `void` `a`(`m2.g` v0 @kind object) @signature `Lm2/g;.a:(Lm2/g;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3d3ab8.  call `m`(v0) @signature `Lm2/g;.m:()V` @kind direct;
  #L3d3abe.  return @kind void;
}
procedure `void` `b`(`m2.g` v2 @kind this, `android.media.MediaFormat` v3 @kind object) @signature `Lm2/g;.b:(Landroid/media/MediaFormat;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d3b34.  v0:= v2.`m2.g.e` @type ^`m2.k` @kind object;
  #L3d3b38.  v1:= -2I;
  #L3d3b3a.  call `a`(v0, v1) @signature `Lm2/k;.a:(I)V` @kind virtual;
  #L3d3b40.  v0:= v2.`m2.g.g` @type ^`java.util.ArrayDeque` @kind object;
  #L3d3b44.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d3b4a.  return @kind void;
}
procedure `void` `f`(`m2.g` v1 @kind this) @signature `Lm2/g;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d3bb8.  v0:= v1.`m2.g.g` @type ^`java.util.ArrayDeque` @kind object;
  #L3d3bbc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #L3d3bc2.  v0:= temp;
  #L3d3bc4.  if v0 != 0 then goto L3d3bdc;
  #L3d3bc8.  v0:= v1.`m2.g.g` @type ^`java.util.ArrayDeque` @kind object;
  #L3d3bcc.  call temp:= `getLast`(v0) @signature `Ljava/util/ArrayDeque;.getLast:()Ljava/lang/Object;` @kind virtual;
  #L3d3bd2.  v0:= temp @kind object;
  #L3d3bd4.  v0:= (`android.media.MediaFormat`) v0 @kind object;
  #L3d3bd8.  v1.`m2.g.i` @type ^`android.media.MediaFormat` := v0 @kind object;
  #L3d3bdc.  v0:= v1.`m2.g.d` @type ^`m2.k` @kind object;
  #L3d3be0.  call `b`(v0) @signature `Lm2/k;.b:()V` @kind virtual;
  #L3d3be6.  v0:= v1.`m2.g.e` @type ^`m2.k` @kind object;
  #L3d3bea.  call `b`(v0) @signature `Lm2/k;.b:()V` @kind virtual;
  #L3d3bf0.  v0:= v1.`m2.g.f` @type ^`java.util.ArrayDeque` @kind object;
  #L3d3bf4.  call `clear`(v0) @signature `Ljava/util/ArrayDeque;.clear:()V` @kind virtual;
  #L3d3bfa.  v0:= v1.`m2.g.g` @type ^`java.util.ArrayDeque` @kind object;
  #L3d3bfe.  call `clear`(v0) @signature `Ljava/util/ArrayDeque;.clear:()V` @kind virtual;
  #L3d3c04.  v0:= 0I;
  #L3d3c06.  v1.`m2.g.j` @type ^`android.media.MediaCodec$CodecException` := v0 @kind object;
  #L3d3c0a.  return @kind void;
}
procedure `boolean` `i`(`m2.g` v5 @kind this) @signature `Lm2/g;.i:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d3968.  v0:= v5.`m2.g.k` @type ^`long` @kind wide;
  #L3d396c.  v2:= 0L;
  #L3d3970.  v4:= lcmp(v0, v2);
  #L3d3974.  if v4 > 0 then goto L3d3986;
  #L3d3978.  v0:= v5.`m2.g.l` @type ^`boolean` @kind boolean;
  #L3d397c.  if v0 == 0 then goto L3d3982;
  #L3d3980.  goto L3d3986;
  #L3d3982.  v0:= 0I;
  #L3d3984.  goto L3d3988;
  #L3d3986.  v0:= 1I;
  #L3d3988.  return v0;
}
procedure `void` `j`(`m2.g` v0 @kind this) @signature `Lm2/g;.j:()V` @AccessFlag PRIVATE {
    temp;

  #L3d3c6c.  call `k`(v0) @signature `Lm2/g;.k:()V` @kind direct;
  #L3d3c72.  call `l`(v0) @signature `Lm2/g;.l:()V` @kind direct;
  #L3d3c78.  return @kind void;
}
procedure `void` `k`(`m2.g` v2 @kind this) @signature `Lm2/g;.k:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d3c8c.  v0:= v2.`m2.g.m` @type ^`java.lang.IllegalStateException` @kind object;
  #L3d3c90.  if v0 != 0 then goto L3d3c96;
  #L3d3c94.  return @kind void;
  #L3d3c96.  v1:= 0I;
  #L3d3c98.  v2.`m2.g.m` @type ^`java.lang.IllegalStateException` := v1 @kind object;
  #L3d3c9c.  throw v0;
}
procedure `void` `l`(`m2.g` v2 @kind this) @signature `Lm2/g;.l:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d3cb0.  v0:= v2.`m2.g.j` @type ^`android.media.MediaCodec$CodecException` @kind object;
  #L3d3cb4.  if v0 != 0 then goto L3d3cba;
  #L3d3cb8.  return @kind void;
  #L3d3cba.  v1:= 0I;
  #L3d3cbc.  v2.`m2.g.j` @type ^`android.media.MediaCodec$CodecException` := v1 @kind object;
  #L3d3cc0.  throw v0;
}
procedure `void` `m`(`m2.g` v6 @kind this) @signature `Lm2/g;.m:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d3d04.  v0:= v6.`m2.g.a` @type ^`java.lang.Object` @kind object;
  #L3d3d08.  @monitorenter v0
  #L3d3d0a.  v1:= v6.`m2.g.l` @type ^`boolean` @kind boolean;
  #L3d3d0e.  if v1 == 0 then goto L3d3d16;
  #L3d3d12.  @monitorexit v0
  #L3d3d14.  return @kind void;
  #L3d3d16.  v1:= v6.`m2.g.k` @type ^`long` @kind wide;
  #L3d3d1a.  v3:= 1L;
  #L3d3d1e.  v1:= v1 - v3 @kind long;
  #L3d3d20.  v6.`m2.g.k` @type ^`long` := v1 @kind wide;
  #L3d3d24.  v3:= 0L;
  #L3d3d28.  v5:= lcmp(v1, v3);
  #L3d3d2c.  if v5 <= 0 then goto L3d3d34;
  #L3d3d30.  @monitorexit v0
  #L3d3d32.  return @kind void;
  #L3d3d34.  v5:= lcmp(v1, v3);
  #L3d3d38.  if v5 >= 0 then goto L3d3d50;
  #L3d3d3c.  v1:= new `java.lang.IllegalStateException`;
  #L3d3d40.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3d3d46.  call `n`(v6, v1) @signature `Lm2/g;.n:(Ljava/lang/IllegalStateException;)V` @kind direct;
  #L3d3d4c.  @monitorexit v0
  #L3d3d4e.  return @kind void;
  #L3d3d50.  call `f`(v6) @signature `Lm2/g;.f:()V` @kind direct;
  #L3d3d56.  @monitorexit v0
  #L3d3d58.  return @kind void;
  #L3d3d5a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d3d5c.  @monitorexit v0
  #L3d3d5e.  throw v1;
  catch `java.lang.Throwable` @[L3d3d0a..L3d3d5e] goto L3d3d5a;
}
procedure `void` `n`(`m2.g` v1 @kind this, `java.lang.IllegalStateException` v2 @kind object) @signature `Lm2/g;.n:(Ljava/lang/IllegalStateException;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d3e40.  v0:= v1.`m2.g.a` @type ^`java.lang.Object` @kind object;
  #L3d3e44.  @monitorenter v0
  #L3d3e46.  v1.`m2.g.m` @type ^`java.lang.IllegalStateException` := v2 @kind object;
  #L3d3e4a.  @monitorexit v0
  #L3d3e4c.  return @kind void;
  #L3d3e4e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d3e50.  @monitorexit v0
  #L3d3e52.  throw v2;
  catch `java.lang.Throwable` @[L3d3e46..L3d3e52] goto L3d3e4e;
}
procedure `int` `c`(`m2.g` v3 @kind this) @signature `Lm2/g;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d399c.  v0:= v3.`m2.g.a` @type ^`java.lang.Object` @kind object;
  #L3d39a0.  @monitorenter v0
  #L3d39a2.  call temp:= `i`(v3) @signature `Lm2/g;.i:()Z` @kind direct;
  #L3d39a8.  v1:= temp;
  #L3d39aa.  v2:= -1I;
  #L3d39ac.  if v1 == 0 then goto L3d39b4;
  #L3d39b0.  @monitorexit v0
  #L3d39b2.  return v2;
  #L3d39b4.  call `j`(v3) @signature `Lm2/g;.j:()V` @kind direct;
  #L3d39ba.  v1:= v3.`m2.g.d` @type ^`m2.k` @kind object;
  #L3d39be.  call temp:= `d`(v1) @signature `Lm2/k;.d:()Z` @kind virtual;
  #L3d39c4.  v1:= temp;
  #L3d39c6.  if v1 == 0 then goto L3d39cc;
  #L3d39ca.  goto L3d39d8;
  #L3d39cc.  v1:= v3.`m2.g.d` @type ^`m2.k` @kind object;
  #L3d39d0.  call temp:= `e`(v1) @signature `Lm2/k;.e:()I` @kind virtual;
  #L3d39d6.  v2:= temp;
  #L3d39d8.  @monitorexit v0
  #L3d39da.  return v2;
  #L3d39dc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d39de.  @monitorexit v0
  #L3d39e0.  throw v1;
  catch `java.lang.Throwable` @[L3d39a2..L3d39e0] goto L3d39dc;
}
procedure `int` `d`(`m2.g` v9 @kind this, `android.media.MediaCodec$BufferInfo` v10 @kind object) @signature `Lm2/g;.d:(Landroid/media/MediaCodec$BufferInfo;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3d3a00.  v0:= v9.`m2.g.a` @type ^`java.lang.Object` @kind object;
  #L3d3a04.  @monitorenter v0
  #L3d3a06.  call temp:= `i`(v9) @signature `Lm2/g;.i:()Z` @kind direct;
  #L3d3a0c.  v1:= temp;
  #L3d3a0e.  v2:= -1I;
  #L3d3a10.  if v1 == 0 then goto L3d3a18;
  #L3d3a14.  @monitorexit v0
  #L3d3a16.  return v2;
  #L3d3a18.  call `j`(v9) @signature `Lm2/g;.j:()V` @kind direct;
  #L3d3a1e.  v1:= v9.`m2.g.e` @type ^`m2.k` @kind object;
  #L3d3a22.  call temp:= `d`(v1) @signature `Lm2/k;.d:()Z` @kind virtual;
  #L3d3a28.  v1:= temp;
  #L3d3a2a.  if v1 == 0 then goto L3d3a32;
  #L3d3a2e.  @monitorexit v0
  #L3d3a30.  return v2;
  #L3d3a32.  v1:= v9.`m2.g.e` @type ^`m2.k` @kind object;
  #L3d3a36.  call temp:= `e`(v1) @signature `Lm2/k;.e:()I` @kind virtual;
  #L3d3a3c.  v1:= temp;
  #L3d3a3e.  if v1 < 0 then goto L3d3a76;
  #L3d3a42.  v2:= v9.`m2.g.h` @type ^`android.media.MediaFormat` @kind object;
  #L3d3a46.  call temp:= `h`(v2) @signature `Ls3/a;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d3a4c.  v2:= v9.`m2.g.f` @type ^`java.util.ArrayDeque` @kind object;
  #L3d3a50.  call temp:= `remove`(v2) @signature `Ljava/util/ArrayDeque;.remove:()Ljava/lang/Object;` @kind virtual;
  #L3d3a56.  v2:= temp @kind object;
  #L3d3a58.  v2:= (`android.media.MediaCodec$BufferInfo`) v2 @kind object;
  #L3d3a5c.  v4:= v2.`android.media.MediaCodec$BufferInfo.offset` @type ^`int`;
  #L3d3a60.  v5:= v2.`android.media.MediaCodec$BufferInfo.size` @type ^`int`;
  #L3d3a64.  v6:= v2.`android.media.MediaCodec$BufferInfo.presentationTimeUs` @type ^`long` @kind wide;
  #L3d3a68.  v8:= v2.`android.media.MediaCodec$BufferInfo.flags` @type ^`int`;
  #L3d3a6c.  v3:= v10 @kind object;
  #L3d3a6e.  call `set`(v3, v4, v5, v6, v8) @signature `Landroid/media/MediaCodec$BufferInfo;.set:(IIJI)V` @kind virtual;
  #L3d3a74.  goto L3d3a90;
  #L3d3a76.  v10:= -2I;
  #L3d3a78.  if v1 != v10 then goto L3d3a90;
  #L3d3a7c.  v10:= v9.`m2.g.g` @type ^`java.util.ArrayDeque` @kind object;
  #L3d3a80.  call temp:= `remove`(v10) @signature `Ljava/util/ArrayDeque;.remove:()Ljava/lang/Object;` @kind virtual;
  #L3d3a86.  v10:= temp @kind object;
  #L3d3a88.  v10:= (`android.media.MediaFormat`) v10 @kind object;
  #L3d3a8c.  v9.`m2.g.h` @type ^`android.media.MediaFormat` := v10 @kind object;
  #L3d3a90.  @monitorexit v0
  #L3d3a92.  return v1;
  #L3d3a94.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d3a96.  @monitorexit v0
  #L3d3a98.  throw v10;
  catch `java.lang.Throwable` @[L3d3a06..L3d3a98] goto L3d3a94;
}
procedure `void` `e`(`m2.g` v5 @kind this) @signature `Lm2/g;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d3b5c.  v0:= v5.`m2.g.a` @type ^`java.lang.Object` @kind object;
  #L3d3b60.  @monitorenter v0
  #L3d3b62.  v1:= v5.`m2.g.k` @type ^`long` @kind wide;
  #L3d3b66.  v3:= 1L;
  #L3d3b6a.  v1:= v1 + v3 @kind long;
  #L3d3b6c.  v5.`m2.g.k` @type ^`long` := v1 @kind wide;
  #L3d3b70.  v1:= v5.`m2.g.c` @type ^`android.os.Handler` @kind object;
  #L3d3b74.  call temp:= `j`(v1) @signature `Ls3/l0;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d3b7a.  v1:= temp @kind object;
  #L3d3b7c.  v1:= (`android.os.Handler`) v1 @kind object;
  #L3d3b80.  v2:= new `m2.f`;
  #L3d3b84.  call `<init>`(v2, v5) @signature `Lm2/f;.<init>:(Lm2/g;)V` @kind direct;
  #L3d3b8a.  call temp:= `post`(v1, v2) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L3d3b90.  @monitorexit v0
  #L3d3b92.  return @kind void;
  #L3d3b94.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d3b96.  @monitorexit v0
  #L3d3b98.  throw v1;
  catch `java.lang.Throwable` @[L3d3b62..L3d3b98] goto L3d3b94;
}
procedure `android.media.MediaFormat` `g`(`m2.g` v2 @kind this) @signature `Lm2/g;.g:()Landroid/media/MediaFormat;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d3928.  v0:= v2.`m2.g.a` @type ^`java.lang.Object` @kind object;
  #L3d392c.  @monitorenter v0
  #L3d392e.  v1:= v2.`m2.g.h` @type ^`android.media.MediaFormat` @kind object;
  #L3d3932.  if v1 == 0 then goto L3d393a;
  #L3d3936.  @monitorexit v0
  #L3d3938.  return v1 @kind object;
  #L3d393a.  v1:= new `java.lang.IllegalStateException`;
  #L3d393e.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3d3944.  throw v1;
  #L3d3946.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d3948.  @monitorexit v0
  #L3d394a.  throw v1;
  catch `java.lang.Throwable` @[L3d392e..L3d394a] goto L3d3946;
}
procedure `void` `h`(`m2.g` v2 @kind this, `android.media.MediaCodec` v3 @kind object) @signature `Lm2/g;.h:(Landroid/media/MediaCodec;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d3c1c.  v0:= v2.`m2.g.c` @type ^`android.os.Handler` @kind object;
  #L3d3c20.  if v0 != 0 then goto L3d3c28;
  #L3d3c24.  v0:= 1I;
  #L3d3c26.  goto L3d3c2a;
  #L3d3c28.  v0:= 0I;
  #L3d3c2a.  call `f`(v0) @signature `Ls3/a;.f:(Z)V` @kind static;
  #L3d3c30.  v0:= v2.`m2.g.b` @type ^`android.os.HandlerThread` @kind object;
  #L3d3c34.  call `start`(v0) @signature `Landroid/os/HandlerThread;.start:()V` @kind virtual;
  #L3d3c3a.  v0:= new `android.os.Handler`;
  #L3d3c3e.  v1:= v2.`m2.g.b` @type ^`android.os.HandlerThread` @kind object;
  #L3d3c42.  call temp:= `getLooper`(v1) @signature `Landroid/os/HandlerThread;.getLooper:()Landroid/os/Looper;` @kind virtual;
  #L3d3c48.  v1:= temp @kind object;
  #L3d3c4a.  call `<init>`(v0, v1) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L3d3c50.  call `setCallback`(v3, v2, v0) @signature `Landroid/media/MediaCodec;.setCallback:(Landroid/media/MediaCodec$Callback;Landroid/os/Handler;)V` @kind virtual;
  #L3d3c56.  v2.`m2.g.c` @type ^`android.os.Handler` := v0 @kind object;
  #L3d3c5a.  return @kind void;
}
procedure `void` `o`(`m2.g` v2 @kind this) @signature `Lm2/g;.o:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d3e70.  v0:= v2.`m2.g.a` @type ^`java.lang.Object` @kind object;
  #L3d3e74.  @monitorenter v0
  #L3d3e76.  v1:= 1I;
  #L3d3e78.  v2.`m2.g.l` @type ^`boolean` := v1 @kind boolean;
  #L3d3e7c.  v1:= v2.`m2.g.b` @type ^`android.os.HandlerThread` @kind object;
  #L3d3e80.  call temp:= `quit`(v1) @signature `Landroid/os/HandlerThread;.quit:()Z` @kind virtual;
  #L3d3e86.  call `f`(v2) @signature `Lm2/g;.f:()V` @kind direct;
  #L3d3e8c.  @monitorexit v0
  #L3d3e8e.  return @kind void;
  #L3d3e90.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d3e92.  @monitorexit v0
  #L3d3e94.  throw v1;
  catch `java.lang.Throwable` @[L3d3e78..L3d3e94] goto L3d3e90;
}
procedure `void` `onError`(`m2.g` v0 @kind this, `android.media.MediaCodec` v1 @kind object, `android.media.MediaCodec$CodecException` v2 @kind object) @signature `Lm2/g;.onError:(Landroid/media/MediaCodec;Landroid/media/MediaCodec$CodecException;)V` @AccessFlag PUBLIC {
    temp;

  #L3d3cd4.  v1:= v0.`m2.g.a` @type ^`java.lang.Object` @kind object;
  #L3d3cd8.  @monitorenter v1
  #L3d3cda.  v0.`m2.g.j` @type ^`android.media.MediaCodec$CodecException` := v2 @kind object;
  #L3d3cde.  @monitorexit v1
  #L3d3ce0.  return @kind void;
  #L3d3ce2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d3ce4.  @monitorexit v1
  #L3d3ce6.  throw v2;
  catch `java.lang.Throwable` @[L3d3cda..L3d3ce6] goto L3d3ce2;
}
procedure `void` `onInputBufferAvailable`(`m2.g` v1 @kind this, `android.media.MediaCodec` v2 @kind object, `int` v3 ) @signature `Lm2/g;.onInputBufferAvailable:(Landroid/media/MediaCodec;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d3d7c.  v2:= v1.`m2.g.a` @type ^`java.lang.Object` @kind object;
  #L3d3d80.  @monitorenter v2
  #L3d3d82.  v0:= v1.`m2.g.d` @type ^`m2.k` @kind object;
  #L3d3d86.  call `a`(v0, v3) @signature `Lm2/k;.a:(I)V` @kind virtual;
  #L3d3d8c.  @monitorexit v2
  #L3d3d8e.  return @kind void;
  #L3d3d90.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d3d92.  @monitorexit v2
  #L3d3d94.  throw v3;
  catch `java.lang.Throwable` @[L3d3d82..L3d3d94] goto L3d3d90;
}
procedure `void` `onOutputBufferAvailable`(`m2.g` v1 @kind this, `android.media.MediaCodec` v2 @kind object, `int` v3 , `android.media.MediaCodec$BufferInfo` v4 @kind object) @signature `Lm2/g;.onOutputBufferAvailable:(Landroid/media/MediaCodec;ILandroid/media/MediaCodec$BufferInfo;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d3db4.  v2:= v1.`m2.g.a` @type ^`java.lang.Object` @kind object;
  #L3d3db8.  @monitorenter v2
  #L3d3dba.  v0:= v1.`m2.g.i` @type ^`android.media.MediaFormat` @kind object;
  #L3d3dbe.  if v0 == 0 then goto L3d3dce;
  #L3d3dc2.  call `b`(v1, v0) @signature `Lm2/g;.b:(Landroid/media/MediaFormat;)V` @kind direct;
  #L3d3dc8.  v0:= 0I;
  #L3d3dca.  v1.`m2.g.i` @type ^`android.media.MediaFormat` := v0 @kind object;
  #L3d3dce.  v0:= v1.`m2.g.e` @type ^`m2.k` @kind object;
  #L3d3dd2.  call `a`(v0, v3) @signature `Lm2/k;.a:(I)V` @kind virtual;
  #L3d3dd8.  v3:= v1.`m2.g.f` @type ^`java.util.ArrayDeque` @kind object;
  #L3d3ddc.  call temp:= `add`(v3, v4) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d3de2.  @monitorexit v2
  #L3d3de4.  return @kind void;
  #L3d3de6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d3de8.  @monitorexit v2
  #L3d3dea.  throw v3;
  catch `java.lang.Throwable` @[L3d3dba..L3d3dea] goto L3d3de6;
}
procedure `void` `onOutputFormatChanged`(`m2.g` v0 @kind this, `android.media.MediaCodec` v1 @kind object, `android.media.MediaFormat` v2 @kind object) @signature `Lm2/g;.onOutputFormatChanged:(Landroid/media/MediaCodec;Landroid/media/MediaFormat;)V` @AccessFlag PUBLIC {
    temp;

  #L3d3e08.  v1:= v0.`m2.g.a` @type ^`java.lang.Object` @kind object;
  #L3d3e0c.  @monitorenter v1
  #L3d3e0e.  call `b`(v0, v2) @signature `Lm2/g;.b:(Landroid/media/MediaFormat;)V` @kind direct;
  #L3d3e14.  v2:= 0I;
  #L3d3e16.  v0.`m2.g.i` @type ^`android.media.MediaFormat` := v2 @kind object;
  #L3d3e1a.  @monitorexit v1
  #L3d3e1c.  return @kind void;
  #L3d3e1e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d3e20.  @monitorexit v1
  #L3d3e22.  throw v2;
  catch `java.lang.Throwable` @[L3d3e0e..L3d3e22] goto L3d3e1e;
}
