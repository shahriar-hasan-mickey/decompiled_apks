record `m2.v$b` @kind class @AccessFlag FINAL {
  `java.lang.String` `m2.v$b.a` @AccessFlag PUBLIC_FINAL;
  `boolean` `m2.v$b.b` @AccessFlag PUBLIC_FINAL;
  `boolean` `m2.v$b.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`m2.v$b` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `boolean` v3 ) @signature `Lm2/v$b;.<init>:(Ljava/lang/String;ZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3d7f38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d7f3e.  v0.`m2.v$b.a` @type ^`java.lang.String` := v1 @kind object;
  #L3d7f42.  v0.`m2.v$b.b` @type ^`boolean` := v2 @kind boolean;
  #L3d7f46.  v0.`m2.v$b.c` @type ^`boolean` := v3 @kind boolean;
  #L3d7f4a.  return @kind void;
}
procedure `boolean` `equals`(`m2.v$b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lm2/v$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d7e78.  v0:= 1I;
  #L3d7e7a.  if v4 != v5 then goto L3d7e80;
  #L3d7e7e.  return v0;
  #L3d7e80.  v1:= 0I;
  #L3d7e82.  if v5 == 0 then goto L3d7ece;
  #L3d7e86.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3d7e8c.  v2:= temp @kind object;
  #L3d7e8e.  v3:= constclass @type ^`m2.v$b` @kind object;
  #L3d7e92.  if v2 == v3 then goto L3d7e98;
  #L3d7e96.  goto L3d7ece;
  #L3d7e98.  v5:= (`m2.v$b`) v5 @kind object;
  #L3d7e9c.  v2:= v4.`m2.v$b.a` @type ^`java.lang.String` @kind object;
  #L3d7ea0.  v3:= v5.`m2.v$b.a` @type ^`java.lang.String` @kind object;
  #L3d7ea4.  call temp:= `equals`(v2, v3) @signature `Landroid/text/TextUtils;.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @kind static;
  #L3d7eaa.  v2:= temp;
  #L3d7eac.  if v2 == 0 then goto L3d7eca;
  #L3d7eb0.  v2:= v4.`m2.v$b.b` @type ^`boolean` @kind boolean;
  #L3d7eb4.  v3:= v5.`m2.v$b.b` @type ^`boolean` @kind boolean;
  #L3d7eb8.  if v2 != v3 then goto L3d7eca;
  #L3d7ebc.  v2:= v4.`m2.v$b.c` @type ^`boolean` @kind boolean;
  #L3d7ec0.  v5:= v5.`m2.v$b.c` @type ^`boolean` @kind boolean;
  #L3d7ec4.  if v2 != v5 then goto L3d7eca;
  #L3d7ec8.  goto L3d7ecc;
  #L3d7eca.  v0:= 0I;
  #L3d7ecc.  return v0;
  #L3d7ece.  return v1;
}
procedure `int` `hashCode`(`m2.v$b` v5 @kind this) @signature `Lm2/v$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d7ee0.  v0:= v5.`m2.v$b.a` @type ^`java.lang.String` @kind object;
  #L3d7ee4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3d7eea.  v0:= temp;
  #L3d7eec.  v1:= 31I;
  #L3d7ef0.  v0:= v0 + v1 @kind int;
  #L3d7ef2.  v0:= v0 * 31;
  #L3d7ef6.  v2:= v5.`m2.v$b.b` @type ^`boolean` @kind boolean;
  #L3d7efa.  v3:= 1231I;
  #L3d7efe.  v4:= 1237I;
  #L3d7f02.  if v2 == 0 then goto L3d7f0c;
  #L3d7f06.  v2:= 1231I;
  #L3d7f0a.  goto L3d7f10;
  #L3d7f0c.  v2:= 1237I;
  #L3d7f10.  v0:= v0 + v2 @kind int;
  #L3d7f12.  v0:= v0 * 31;
  #L3d7f16.  v1:= v5.`m2.v$b.c` @type ^`boolean` @kind boolean;
  #L3d7f1a.  if v1 == 0 then goto L3d7f20;
  #L3d7f1e.  goto L3d7f24;
  #L3d7f20.  v3:= 1237I;
  #L3d7f24.  v0:= v0 + v3 @kind int;
  #L3d7f26.  return v0;
}
