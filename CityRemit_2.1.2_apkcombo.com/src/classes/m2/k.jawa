record `m2.k` @kind class @AccessFlag FINAL {
  `int` `m2.k.a` @AccessFlag PRIVATE;
  `int` `m2.k.b` @AccessFlag PRIVATE;
  `int` `m2.k.c` @AccessFlag PRIVATE;
  `int`[] `m2.k.d` @AccessFlag PRIVATE;
  `int` `m2.k.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`m2.k` v2 @kind this) @signature `Lm2/k;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3d4338.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d433e.  v0:= 0I;
  #L3d4340.  v2.`m2.k.a` @type ^`int` := v0;
  #L3d4344.  v1:= -1I;
  #L3d4346.  v2.`m2.k.b` @type ^`int` := v1;
  #L3d434a.  v2.`m2.k.c` @type ^`int` := v0;
  #L3d434e.  v0:= 16I;
  #L3d4352.  v0:= new `int`[v0];
  #L3d4356.  v2.`m2.k.d` @type ^`int`[] := v0 @kind object;
  #L3d435a.  v0:= length @variable v0;
  #L3d435c.  v0:= v0 + -1;
  #L3d4360.  v2.`m2.k.e` @type ^`int` := v0;
  #L3d4364.  return @kind void;
}
procedure `void` `c`(`m2.k` v5 @kind this) @signature `Lm2/k;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d43e8.  v0:= v5.`m2.k.d` @type ^`int`[] @kind object;
  #L3d43ec.  v1:= length @variable v0;
  #L3d43ee.  v1:= v1 ^< 1;
  #L3d43f2.  if v1 < 0 then goto L3d4434;
  #L3d43f6.  v1:= new `int`[v1];
  #L3d43fa.  v2:= length @variable v0;
  #L3d43fc.  v3:= v5.`m2.k.a` @type ^`int`;
  #L3d4400.  v2:= v2 - v3 @kind int;
  #L3d4402.  v4:= 0I;
  #L3d4404.  call `arraycopy`(v0, v3, v1, v4, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3d440a.  v0:= v5.`m2.k.d` @type ^`int`[] @kind object;
  #L3d440e.  call `arraycopy`(v0, v4, v1, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3d4414.  v5.`m2.k.a` @type ^`int` := v4;
  #L3d4418.  v0:= v5.`m2.k.c` @type ^`int`;
  #L3d441c.  v0:= v0 + -1;
  #L3d4420.  v5.`m2.k.b` @type ^`int` := v0;
  #L3d4424.  v5.`m2.k.d` @type ^`int`[] := v1 @kind object;
  #L3d4428.  v0:= length @variable v1;
  #L3d442a.  v0:= v0 + -1;
  #L3d442e.  v5.`m2.k.e` @type ^`int` := v0;
  #L3d4432.  return @kind void;
  #L3d4434.  v0:= new `java.lang.IllegalStateException`;
  #L3d4438.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3d443e.  throw v0;
}
procedure `void` `a`(`m2.k` v2 @kind this, `int` v3 ) @signature `Lm2/k;.a:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d4378.  v0:= v2.`m2.k.c` @type ^`int`;
  #L3d437c.  v1:= v2.`m2.k.d` @type ^`int`[] @kind object;
  #L3d4380.  v1:= length @variable v1;
  #L3d4382.  if v0 != v1 then goto L3d438c;
  #L3d4386.  call `c`(v2) @signature `Lm2/k;.c:()V` @kind direct;
  #L3d438c.  v0:= v2.`m2.k.b` @type ^`int`;
  #L3d4390.  v0:= v0 + 1;
  #L3d4394.  v1:= v2.`m2.k.e` @type ^`int`;
  #L3d4398.  v0:= v0 ^& v1 @kind int;
  #L3d439a.  v2.`m2.k.b` @type ^`int` := v0;
  #L3d439e.  v1:= v2.`m2.k.d` @type ^`int`[] @kind object;
  #L3d43a2.  v1[v0]:= v3;
  #L3d43a6.  v3:= v2.`m2.k.c` @type ^`int`;
  #L3d43aa.  v3:= v3 + 1;
  #L3d43ae.  v2.`m2.k.c` @type ^`int` := v3;
  #L3d43b2.  return @kind void;
}
procedure `void` `b`(`m2.k` v2 @kind this) @signature `Lm2/k;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d43c4.  v0:= 0I;
  #L3d43c6.  v2.`m2.k.a` @type ^`int` := v0;
  #L3d43ca.  v1:= -1I;
  #L3d43cc.  v2.`m2.k.b` @type ^`int` := v1;
  #L3d43d0.  v2.`m2.k.c` @type ^`int` := v0;
  #L3d43d4.  return @kind void;
}
procedure `boolean` `d`(`m2.k` v1 @kind this) @signature `Lm2/k;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d42d0.  v0:= v1.`m2.k.c` @type ^`int`;
  #L3d42d4.  if v0 != 0 then goto L3d42dc;
  #L3d42d8.  v0:= 1I;
  #L3d42da.  goto L3d42de;
  #L3d42dc.  v0:= 0I;
  #L3d42de.  return v0;
}
procedure `int` `e`(`m2.k` v4 @kind this) @signature `Lm2/k;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d42f0.  v0:= v4.`m2.k.c` @type ^`int`;
  #L3d42f4.  if v0 == 0 then goto L3d431c;
  #L3d42f8.  v1:= v4.`m2.k.d` @type ^`int`[] @kind object;
  #L3d42fc.  v2:= v4.`m2.k.a` @type ^`int`;
  #L3d4300.  v1:= v1[v2];
  #L3d4304.  v2:= v2 + 1;
  #L3d4308.  v3:= v4.`m2.k.e` @type ^`int`;
  #L3d430c.  v2:= v2 ^& v3 @kind int;
  #L3d430e.  v4.`m2.k.a` @type ^`int` := v2;
  #L3d4312.  v0:= v0 + -1;
  #L3d4316.  v4.`m2.k.c` @type ^`int` := v0;
  #L3d431a.  return v1;
  #L3d431c.  v0:= new `java.util.NoSuchElementException`;
  #L3d4320.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3d4326.  throw v0;
}
