record `m2.h` @kind class @AccessFlag FINAL extends `y1.g` @kind class {
  `long` `m2.h.w` @AccessFlag PRIVATE;
  `int` `m2.h.x` @AccessFlag PRIVATE;
  `int` `m2.h.y` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`m2.h` v1 @kind this) @signature `Lm2/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d4050.  v0:= 2I;
  #L3d4052.  call `<init>`(v1, v0) @signature `Ly1/g;.<init>:(I)V` @kind direct;
  #L3d4058.  v0:= 32I;
  #L3d405c.  v1.`m2.h.y` @type ^`int` := v0;
  #L3d4060.  return @kind void;
}
procedure `boolean` `T`(`m2.h` v4 @kind this, `y1.g` v5 @kind object) @signature `Lm2/h;.T:(Ly1/g;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d3f70.  call temp:= `b0`(v4) @signature `Lm2/h;.b0:()Z` @kind virtual;
  #L3d3f76.  v0:= temp;
  #L3d3f78.  v1:= 1I;
  #L3d3f7a.  if v0 != 0 then goto L3d3f80;
  #L3d3f7e.  return v1;
  #L3d3f80.  v0:= v4.`m2.h.x` @type ^`int`;
  #L3d3f84.  v2:= v4.`m2.h.y` @type ^`int`;
  #L3d3f88.  v3:= 0I;
  #L3d3f8a.  if v0 < v2 then goto L3d3f90;
  #L3d3f8e.  return v3;
  #L3d3f90.  call temp:= `s`(v5) @signature `Ly1/a;.s:()Z` @kind virtual;
  #L3d3f96.  v0:= temp;
  #L3d3f98.  call temp:= `s`(v4) @signature `Ly1/a;.s:()Z` @kind virtual;
  #L3d3f9e.  v2:= temp;
  #L3d3fa0.  if v0 == v2 then goto L3d3fa6;
  #L3d3fa4.  return v3;
  #L3d3fa6.  v5:= v5.`y1.g.q` @type ^`java.nio.ByteBuffer` @kind object;
  #L3d3faa.  if v5 == 0 then goto L3d3fd4;
  #L3d3fae.  v0:= v4.`y1.g.q` @type ^`java.nio.ByteBuffer` @kind object;
  #L3d3fb2.  if v0 == 0 then goto L3d3fd4;
  #L3d3fb6.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L3d3fbc.  v0:= temp;
  #L3d3fbe.  call temp:= `remaining`(v5) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L3d3fc4.  v5:= temp;
  #L3d3fc6.  v0:= v0 + v5 @kind int;
  #L3d3fc8.  v5:= 3072000I;
  #L3d3fce.  if v0 <= v5 then goto L3d3fd4;
  #L3d3fd2.  return v3;
  #L3d3fd4.  return v1;
}
procedure `boolean` `S`(`m2.h` v4 @kind this, `y1.g` v5 @kind object) @signature `Lm2/h;.S:(Ly1/g;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d3eb4.  call temp:= `K`(v5) @signature `Ly1/g;.K:()Z` @kind virtual;
  #L3d3eba.  v0:= temp;
  #L3d3ebc.  v1:= 1I;
  #L3d3ebe.  v0:= v0 ^~ v1 @kind int;
  #L3d3ec0.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L3d3ec6.  call temp:= `r`(v5) @signature `Ly1/a;.r:()Z` @kind virtual;
  #L3d3ecc.  v0:= temp;
  #L3d3ece.  v0:= v0 ^~ v1 @kind int;
  #L3d3ed0.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L3d3ed6.  call temp:= `t`(v5) @signature `Ly1/a;.t:()Z` @kind virtual;
  #L3d3edc.  v0:= temp;
  #L3d3ede.  v0:= v0 ^~ v1 @kind int;
  #L3d3ee0.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L3d3ee6.  call temp:= `T`(v4, v5) @signature `Lm2/h;.T:(Ly1/g;)Z` @kind direct;
  #L3d3eec.  v0:= temp;
  #L3d3eee.  if v0 != 0 then goto L3d3ef6;
  #L3d3ef2.  v5:= 0I;
  #L3d3ef4.  return v5;
  #L3d3ef6.  v0:= v4.`m2.h.x` @type ^`int`;
  #L3d3efa.  v2:= v0 + 1;
  #L3d3efe.  v4.`m2.h.x` @type ^`int` := v2;
  #L3d3f02.  if v0 != 0 then goto L3d3f20;
  #L3d3f06.  v2:= v5.`y1.g.s` @type ^`long` @kind wide;
  #L3d3f0a.  v4.`y1.g.s` @type ^`long` := v2 @kind wide;
  #L3d3f0e.  call temp:= `x`(v5) @signature `Ly1/a;.x:()Z` @kind virtual;
  #L3d3f14.  v0:= temp;
  #L3d3f16.  if v0 == 0 then goto L3d3f20;
  #L3d3f1a.  call `B`(v4, v1) @signature `Ly1/a;.B:(I)V` @kind virtual;
  #L3d3f20.  call temp:= `s`(v5) @signature `Ly1/a;.s:()Z` @kind virtual;
  #L3d3f26.  v0:= temp;
  #L3d3f28.  if v0 == 0 then goto L3d3f36;
  #L3d3f2c.  v0:= -2147483648I;
  #L3d3f30.  call `B`(v4, v0) @signature `Ly1/a;.B:(I)V` @kind virtual;
  #L3d3f36.  v0:= v5.`y1.g.q` @type ^`java.nio.ByteBuffer` @kind object;
  #L3d3f3a.  if v0 == 0 then goto L3d3f56;
  #L3d3f3e.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L3d3f44.  v2:= temp;
  #L3d3f46.  call `F`(v4, v2) @signature `Ly1/g;.F:(I)V` @kind virtual;
  #L3d3f4c.  v2:= v4.`y1.g.q` @type ^`java.nio.ByteBuffer` @kind object;
  #L3d3f50.  call temp:= `put`(v2, v0) @signature `Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3d3f56.  v2:= v5.`y1.g.s` @type ^`long` @kind wide;
  #L3d3f5a.  v4.`m2.h.w` @type ^`long` := v2 @kind wide;
  #L3d3f5e.  return v1;
}
procedure `long` `V`(`m2.h` v2 @kind this) @signature `Lm2/h;.V:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d4020.  v0:= v2.`y1.g.s` @type ^`long` @kind wide;
  #L3d4024.  return v0 @kind wide;
}
procedure `long` `X`(`m2.h` v2 @kind this) @signature `Lm2/h;.X:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d4038.  v0:= v2.`m2.h.w` @type ^`long` @kind wide;
  #L3d403c.  return v0 @kind wide;
}
procedure `int` `a0`(`m2.h` v1 @kind this) @signature `Lm2/h;.a0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4008.  v0:= v1.`m2.h.x` @type ^`int`;
  #L3d400c.  return v0;
}
procedure `boolean` `b0`(`m2.h` v1 @kind this) @signature `Lm2/h;.b0:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d3fe8.  v0:= v1.`m2.h.x` @type ^`int`;
  #L3d3fec.  if v0 <= 0 then goto L3d3ff4;
  #L3d3ff0.  v0:= 1I;
  #L3d3ff2.  goto L3d3ff6;
  #L3d3ff4.  v0:= 0I;
  #L3d3ff6.  return v0;
}
procedure `void` `c0`(`m2.h` v1 @kind this, `int` v2 ) @signature `Lm2/h;.c0:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4094.  if v2 <= 0 then goto L3d409c;
  #L3d4098.  v0:= 1I;
  #L3d409a.  goto L3d409e;
  #L3d409c.  v0:= 0I;
  #L3d409e.  call `a`(v0) @signature `Ls3/a;.a:(Z)V` @kind static;
  #L3d40a4.  v1.`m2.h.y` @type ^`int` := v2;
  #L3d40a8.  return @kind void;
}
procedure `void` `j`(`m2.h` v1 @kind this) @signature `Lm2/h;.j:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4074.  call `j`(v1) @signature `Ly1/g;.j:()V` @kind super;
  #L3d407a.  v0:= 0I;
  #L3d407c.  v1.`m2.h.x` @type ^`int` := v0;
  #L3d4080.  return @kind void;
}
