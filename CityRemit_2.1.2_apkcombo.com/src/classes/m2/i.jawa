record `m2.i` @kind class @AccessFlag FINAL {
  `long` `m2.i.a` @AccessFlag PRIVATE;
  `long` `m2.i.b` @AccessFlag PRIVATE;
  `boolean` `m2.i.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`m2.i` v0 @kind this) @signature `Lm2/i;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d41d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d41d6.  return @kind void;
}
procedure `long` `a`(`m2.i` v6 @kind this, `long` v7 ) @signature `Lm2/i;.a:(J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d40bc.  v0:= v6.`m2.i.a` @type ^`long` @kind wide;
  #L3d40c0.  v2:= v6.`m2.i.b` @type ^`long` @kind wide;
  #L3d40c4.  v4:= 529L;
  #L3d40c8.  v2:= v2 - v4 @kind long;
  #L3d40ca.  v4:= 1000000L;
  #L3d40d0.  v2:= v2 * v4 @kind long;
  #L3d40d4.  v2:= v2 / v7 @kind long;
  #L3d40d6.  v7:= 0L;
  #L3d40da.  call temp:= `max`(v7, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3d40e0.  v7:= temp @kind wide;
  #L3d40e2.  v0:= v0 + v7 @kind long;
  #L3d40e4.  return v0 @kind wide;
}
procedure `long` `b`(`m2.i` v2 @kind this, `v1.j1` v3 @kind object) @signature `Lm2/i;.b:(Lv1/j1;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d40f8.  v3:= v3.`v1.j1.N` @type ^`int`;
  #L3d40fc.  v0:= (`long`) v3 @kind i2l;
  #L3d40fe.  call temp:= `a`(v2, v0) @signature `Lm2/i;.a:(J)J` @kind direct;
  #L3d4104.  v0:= temp @kind wide;
  #L3d4106.  return v0 @kind wide;
}
procedure `void` `c`(`m2.i` v2 @kind this) @signature `Lm2/i;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d41e8.  v0:= 0L;
  #L3d41ec.  v2.`m2.i.a` @type ^`long` := v0 @kind wide;
  #L3d41f0.  v2.`m2.i.b` @type ^`long` := v0 @kind wide;
  #L3d41f4.  v0:= 0I;
  #L3d41f6.  v2.`m2.i.c` @type ^`boolean` := v0 @kind boolean;
  #L3d41fa.  return @kind void;
}
procedure `long` `d`(`m2.i` v6 @kind this, `v1.j1` v7 @kind object, `y1.g` v8 @kind object) @signature `Lm2/i;.d:(Lv1/j1;Ly1/g;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d4118.  v0:= v6.`m2.i.b` @type ^`long` @kind wide;
  #L3d411c.  v2:= 0L;
  #L3d4120.  v4:= lcmp(v0, v2);
  #L3d4124.  if v4 != 0 then goto L3d4130;
  #L3d4128.  v0:= v8.`y1.g.s` @type ^`long` @kind wide;
  #L3d412c.  v6.`m2.i.a` @type ^`long` := v0 @kind wide;
  #L3d4130.  v0:= v6.`m2.i.c` @type ^`boolean` @kind boolean;
  #L3d4134.  if v0 == 0 then goto L3d413e;
  #L3d4138.  v7:= v8.`y1.g.s` @type ^`long` @kind wide;
  #L3d413c.  return v7 @kind wide;
  #L3d413e.  v0:= v8.`y1.g.q` @type ^`java.nio.ByteBuffer` @kind object;
  #L3d4142.  call temp:= `e`(v0) @signature `Ls3/a;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d4148.  v0:= temp @kind object;
  #L3d414a.  v0:= (`java.nio.ByteBuffer`) v0 @kind object;
  #L3d414e.  v1:= 0I;
  #L3d4150.  v4:= 0I;
  #L3d4152.  v5:= 4I;
  #L3d4154.  if v1 >= v5 then goto L3d4170;
  #L3d4158.  v4:= v4 ^< 8;
  #L3d415c.  call temp:= `get`(v0, v1) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L3d4162.  v5:= temp;
  #L3d4164.  v5:= v5 ^& 255;
  #L3d4168.  v4:= v4 ^| v5 @kind int;
  #L3d416a.  v1:= v1 + 1;
  #L3d416e.  goto L3d4152;
  #L3d4170.  call temp:= `m`(v4) @signature `Lx1/d0;.m:(I)I` @kind static;
  #L3d4176.  v0:= temp;
  #L3d4178.  v1:= -1I;
  #L3d417a.  if v0 != v1 then goto L3d41a4;
  #L3d417e.  v7:= 1I;
  #L3d4180.  v6.`m2.i.c` @type ^`boolean` := v7 @kind boolean;
  #L3d4184.  v6.`m2.i.b` @type ^`long` := v2 @kind wide;
  #L3d4188.  v0:= v8.`y1.g.s` @type ^`long` @kind wide;
  #L3d418c.  v6.`m2.i.a` @type ^`long` := v0 @kind wide;
  #L3d4190.  v7:= "C2Mp3TimestampTracker" @kind object;
  #L3d4194.  v0:= "MPEG audio header is invalid." @kind object;
  #L3d4198.  call `h`(v7, v0) @signature `Ls3/q;.h:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3d419e.  v7:= v8.`y1.g.s` @type ^`long` @kind wide;
  #L3d41a2.  return v7 @kind wide;
  #L3d41a4.  v7:= v7.`v1.j1.N` @type ^`int`;
  #L3d41a8.  v7:= (`long`) v7 @kind i2l;
  #L3d41aa.  call temp:= `a`(v6, v7) @signature `Lm2/i;.a:(J)J` @kind direct;
  #L3d41b0.  v7:= temp @kind wide;
  #L3d41b2.  v1:= v6.`m2.i.b` @type ^`long` @kind wide;
  #L3d41b6.  v3:= (`long`) v0 @kind i2l;
  #L3d41b8.  v1:= v1 + v3 @kind long;
  #L3d41ba.  v6.`m2.i.b` @type ^`long` := v1 @kind wide;
  #L3d41be.  return v7 @kind wide;
}
