record `p4.s` @kind class @AccessFlag FINAL extends `p4.j` @kind class {
  `java.lang.Object`[] `p4.s.q` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `p4.s.r` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `p4.s.s` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`p4.s` v0 @kind this, `java.lang.Object`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lp4/s;.<init>:([Ljava/lang/Object;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4072e0.  call `<init>`(v0) @signature `Lp4/j;.<init>:()V` @kind direct;
  #L4072e6.  v0.`p4.s.q` @type ^`java.lang.Object`[] := v1 @kind object;
  #L4072ea.  v0.`p4.s.r` @type ^`int` := v2;
  #L4072ee.  v0.`p4.s.s` @type ^`int` := v3;
  #L4072f2.  return @kind void;
}
procedure `java.lang.Object` `get`(`p4.s` v2 @kind this, `int` v3 ) @signature `Lp4/s;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4072a8.  v0:= v2.`p4.s.s` @type ^`int`;
  #L4072ac.  v1:= "index" @kind object;
  #L4072b0.  call temp:= `a`(v3, v0, v1) @signature `Lp4/b;.a:(IILjava/lang/String;)I` @kind static;
  #L4072b6.  v0:= v2.`p4.s.q` @type ^`java.lang.Object`[] @kind object;
  #L4072ba.  v3:= v3 + v3 @kind int;
  #L4072bc.  v1:= v2.`p4.s.r` @type ^`int`;
  #L4072c0.  v3:= v3 + v1 @kind int;
  #L4072c2.  v3:= v0[v3] @kind object;
  #L4072c6.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4072cc.  return v3 @kind object;
}
procedure `int` `size`(`p4.s` v1 @kind this) @signature `Lp4/s;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L407290.  v0:= v1.`p4.s.s` @type ^`int`;
  #L407294.  return v0;
}
