record `p4.m` @kind class @AccessFlag PUBLIC_ABSTRACT extends `p4.g` @kind class, `java.util.Set` @kind interface {
  `p4.j` `p4.m.p` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`p4.m` v0 @kind this) @signature `Lp4/m;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L406ea8.  call `<init>`(v0) @signature `Lp4/g;.<init>:()V` @kind direct;
  #L406eae.  return @kind void;
}
procedure `boolean` `equals`(`p4.m` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lp4/m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L406ddc.  v0:= 1I;
  #L406dde.  if v5 == v4 then goto L406e1c;
  #L406de2.  v1:= 0I;
  #L406de4.  if v5 != v4 then goto L406dea;
  #L406de8.  goto L406e1c;
  #L406dea.  v2:= instanceof @variable v5 @type ^`java.util.Set` @kind boolean;
  #L406dee.  if v2 == 0 then goto L406e1a;
  #L406df2.  v5:= (`java.util.Set`) v5 @kind object;
  #L406df6.  call temp:= `size`(v4) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L406dfc.  v2:= temp;
  #L406dfe.  call temp:= `size`(v5) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L406e04.  v3:= temp;
  #L406e06.  if v2 != v3 then goto L406e1a;
  #L406e0a.  call temp:= `containsAll`(v4, v5) @signature `Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L406e10.  v5:= temp;
  #L406e12.  if v5 != 0 then goto L406e18;
  #L406e16.  goto L406e1a;
  #L406e18.  return v0;
  #L406e1a.  v0:= 0I;
  #L406e1c.  return v0;
  catch `java.lang.NullPointerException` @[L406df6..L406e12] goto L406e1a;
  catch `java.lang.ClassCastException` @[L406df6..L406e12] goto L406e1a;
}
procedure `int` `hashCode`(`p4.m` v1 @kind this) @signature `Lp4/m;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L406e40.  call temp:= `a`(v1) @signature `Lp4/u;.a:(Ljava/util/Set;)I` @kind static;
  #L406e46.  v0:= temp;
  #L406e48.  return v0;
}
procedure `p4.j` `n`(`p4.m` v1 @kind this) @signature `Lp4/m;.n:()Lp4/j;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L406e5c.  v0:= v1.`p4.m.p` @type ^`p4.j` @kind object;
  #L406e60.  if v0 != 0 then goto L406e70;
  #L406e64.  call temp:= `p`(v1) @signature `Lp4/m;.p:()Lp4/j;` @kind virtual;
  #L406e6a.  v0:= temp @kind object;
  #L406e6c.  v1.`p4.m.p` @type ^`p4.j` := v0 @kind object;
  #L406e70.  return v0 @kind object;
}
procedure `p4.j` `p`(`p4.m` v1 @kind this) @signature `Lp4/m;.p:()Lp4/j;` @AccessFlag  {
    temp;
    v0;

  #L406e84.  call temp:= `toArray`(v1) @signature `Lp4/g;.toArray:()[Ljava/lang/Object;` @kind virtual;
  #L406e8a.  v0:= temp @kind object;
  #L406e8c.  call temp:= `p`(v0) @signature `Lp4/j;.p:([Ljava/lang/Object;)Lp4/j;` @kind static;
  #L406e92.  v0:= temp @kind object;
  #L406e94.  return v0 @kind object;
}
