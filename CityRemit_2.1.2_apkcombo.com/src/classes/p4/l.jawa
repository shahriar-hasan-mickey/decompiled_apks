record `p4.l` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.Map` @kind interface, `java.io.Serializable` @kind interface {
  `p4.m` `p4.l.o` @AccessFlag PRIVATE_TRANSIENT;
  `p4.m` `p4.l.p` @AccessFlag PRIVATE_TRANSIENT;
  `p4.g` `p4.l.q` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`p4.l` v0 @kind this) @signature `Lp4/l;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L406d8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L406d92.  return @kind void;
}
procedure `p4.l` `c`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lp4/l;.c:(Ljava/lang/Object;Ljava/lang/Object;)Lp4/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L406d28.  v2:= "optional-module-barcode" @kind object;
  #L406d2c.  v3:= "com.google.android.gms.vision.barcode" @kind object;
  #L406d30.  call `a`(v2, v3) @signature `Lp4/e;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L406d36.  v0:= 2I;
  #L406d38.  v0:= new `java.lang.Object`[v0];
  #L406d3c.  v1:= 0I;
  #L406d3e.  v0[v1]:= v2 @kind object;
  #L406d42.  v2:= 1I;
  #L406d44.  v0[v2]:= v3 @kind object;
  #L406d48.  v3:= 0I;
  #L406d4a.  call temp:= `g`(v2, v0, v3) @signature `Lp4/t;.g:(I[Ljava/lang/Object;Lp4/k;)Lp4/t;` @kind static;
  #L406d50.  v2:= temp @kind object;
  #L406d52.  return v2 @kind object;
}
procedure `p4.g` `a`() @signature `Lp4/l;.a:()Lp4/g;` @AccessFlag ABSTRACT {

  # return;
}
procedure `p4.g` `b`(`p4.l` v1 @kind this) @signature `Lp4/l;.b:()Lp4/g;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L406d00.  v0:= v1.`p4.l.q` @type ^`p4.g` @kind object;
  #L406d04.  if v0 != 0 then goto L406d14;
  #L406d08.  call temp:= `a`(v1) @signature `Lp4/l;.a:()Lp4/g;` @kind virtual;
  #L406d0e.  v0:= temp @kind object;
  #L406d10.  v1.`p4.l.q` @type ^`p4.g` := v0 @kind object;
  #L406d14.  return v0 @kind object;
}
procedure `void` `clear`(`p4.l` v1 @kind this) @signature `Lp4/l;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L406da4.  v0:= new `java.lang.UnsupportedOperationException`;
  #L406da8.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L406dae.  throw v0;
}
procedure `boolean` `containsKey`(`p4.l` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lp4/l;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L406a80.  call temp:= `get`(v0, v1) @signature `Lp4/l;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L406a86.  v1:= temp @kind object;
  #L406a88.  if v1 == 0 then goto L406a90;
  #L406a8c.  v1:= 1I;
  #L406a8e.  return v1;
  #L406a90.  v1:= 0I;
  #L406a92.  return v1;
}
procedure `boolean` `containsValue`(`p4.l` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lp4/l;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L406aa4.  call temp:= `b`(v1) @signature `Lp4/l;.b:()Lp4/g;` @kind virtual;
  #L406aaa.  v0:= temp @kind object;
  #L406aac.  call temp:= `contains`(v0, v2) @signature `Lp4/g;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L406ab2.  v2:= temp;
  #L406ab4.  return v2;
}
procedure `p4.m` `d`() @signature `Lp4/l;.d:()Lp4/m;` @AccessFlag ABSTRACT {

  # return;
}
procedure `p4.m` `e`() @signature `Lp4/l;.e:()Lp4/m;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Set` `entrySet`(`p4.l` v1 @kind this) @signature `Lp4/l;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L406cbc.  call temp:= `f`(v1) @signature `Lp4/l;.f:()Lp4/m;` @kind virtual;
  #L406cc2.  v0:= temp @kind object;
  #L406cc4.  return v0 @kind object;
}
procedure `boolean` `equals`(`p4.l` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lp4/l;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L406ac8.  if v1 != v2 then goto L406ad0;
  #L406acc.  v2:= 1I;
  #L406ace.  goto L406ada;
  #L406ad0.  v0:= instanceof @variable v2 @type ^`java.util.Map` @kind boolean;
  #L406ad4.  if v0 != 0 then goto L406adc;
  #L406ad8.  v2:= 0I;
  #L406ada.  return v2;
  #L406adc.  v2:= (`java.util.Map`) v2 @kind object;
  #L406ae0.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L406ae6.  v0:= temp @kind object;
  #L406ae8.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L406aee.  v2:= temp @kind object;
  #L406af0.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L406af6.  v2:= temp;
  #L406af8.  return v2;
}
procedure `p4.m` `f`(`p4.l` v1 @kind this) @signature `Lp4/l;.f:()Lp4/m;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L406d64.  v0:= v1.`p4.l.o` @type ^`p4.m` @kind object;
  #L406d68.  if v0 != 0 then goto L406d78;
  #L406d6c.  call temp:= `d`(v1) @signature `Lp4/l;.d:()Lp4/m;` @kind virtual;
  #L406d72.  v0:= temp @kind object;
  #L406d74.  v1.`p4.l.o` @type ^`p4.m` := v0 @kind object;
  #L406d78.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`java.lang.Object` v0 @kind object) @signature `Lp4/l;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getOrDefault`(`p4.l` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lp4/l;.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L406b54.  call temp:= `get`(v0, v1) @signature `Lp4/l;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L406b5a.  v1:= temp @kind object;
  #L406b5c.  if v1 == 0 then goto L406b62;
  #L406b60.  return v1 @kind object;
  #L406b62.  return v2 @kind object;
}
procedure `int` `hashCode`(`p4.l` v1 @kind this) @signature `Lp4/l;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L406b30.  call temp:= `f`(v1) @signature `Lp4/l;.f:()Lp4/m;` @kind virtual;
  #L406b36.  v0:= temp @kind object;
  #L406b38.  call temp:= `a`(v0) @signature `Lp4/u;.a:(Ljava/util/Set;)I` @kind static;
  #L406b3e.  v0:= temp;
  #L406b40.  return v0;
}
procedure `boolean` `isEmpty`(`p4.l` v1 @kind this) @signature `Lp4/l;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L406b0c.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L406b12.  v0:= temp;
  #L406b14.  if v0 != 0 then goto L406b1c;
  #L406b18.  v0:= 1I;
  #L406b1a.  return v0;
  #L406b1c.  v0:= 0I;
  #L406b1e.  return v0;
}
procedure `java.util.Set` `keySet`(`p4.l` v1 @kind this) @signature `Lp4/l;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L406cd8.  v0:= v1.`p4.l.p` @type ^`p4.m` @kind object;
  #L406cdc.  if v0 != 0 then goto L406cec;
  #L406ce0.  call temp:= `e`(v1) @signature `Lp4/l;.e:()Lp4/m;` @kind virtual;
  #L406ce6.  v0:= temp @kind object;
  #L406ce8.  v1.`p4.l.p` @type ^`p4.m` := v0 @kind object;
  #L406cec.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`p4.l` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lp4/l;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L406b74.  v1:= new `java.lang.UnsupportedOperationException`;
  #L406b78.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L406b7e.  throw v1;
}
procedure `void` `putAll`(`p4.l` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lp4/l;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L406dc0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L406dc4.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L406dca.  throw v1;
}
procedure `java.lang.Object` `remove`(`p4.l` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lp4/l;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L406b90.  v1:= new `java.lang.UnsupportedOperationException`;
  #L406b94.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L406b9a.  throw v1;
}
procedure `java.lang.String` `toString`(`p4.l` v6 @kind this) @signature `Lp4/l;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L406bac.  call temp:= `size`(v6) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L406bb2.  v0:= temp;
  #L406bb4.  if v0 < 0 then goto L406c5c;
  #L406bb8.  v1:= new `java.lang.StringBuilder`;
  #L406bbc.  v2:= (`long`) v0 @kind i2l;
  #L406bbe.  v4:= 8L;
  #L406bc2.  v2:= v2 * v4 @kind long;
  #L406bc6.  v4:= 1073741824L;
  #L406bcc.  call temp:= `min`(v2, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L406bd2.  v2:= temp @kind wide;
  #L406bd4.  v0:= (`int`) v2 @kind l2i;
  #L406bd6.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L406bdc.  v0:= 123I;
  #L406be0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L406be6.  call temp:= `entrySet`(v6) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L406bec.  v0:= temp @kind object;
  #L406bee.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L406bf4.  v0:= temp @kind object;
  #L406bf6.  v2:= 1I;
  #L406bf8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L406bfe.  v3:= temp;
  #L406c00.  if v3 == 0 then goto L406c48;
  #L406c04.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L406c0a.  v3:= temp @kind object;
  #L406c0c.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L406c10.  if v2 != 0 then goto L406c1e;
  #L406c14.  v2:= ", " @kind object;
  #L406c18.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L406c1e.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L406c24.  v2:= temp @kind object;
  #L406c26.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L406c2c.  v2:= 61I;
  #L406c30.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L406c36.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L406c3c.  v2:= temp @kind object;
  #L406c3e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L406c44.  v2:= 0I;
  #L406c46.  goto L406bf8;
  #L406c48.  v0:= 125I;
  #L406c4c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L406c52.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L406c58.  v0:= temp @kind object;
  #L406c5a.  return v0 @kind object;
  #L406c5c.  v1:= new `java.lang.IllegalArgumentException`;
  #L406c60.  v2:= new `java.lang.StringBuilder`;
  #L406c64.  v3:= 44I;
  #L406c68.  call `<init>`(v2, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L406c6e.  v3:= "size cannot be negative but was: " @kind object;
  #L406c72.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L406c78.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L406c7e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L406c84.  v0:= temp @kind object;
  #L406c86.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L406c8c.  throw v1;
}
procedure `java.util.Collection` `values`(`p4.l` v1 @kind this) @signature `Lp4/l;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L406ca0.  call temp:= `b`(v1) @signature `Lp4/l;.b:()Lp4/g;` @kind virtual;
  #L406ca6.  v0:= temp @kind object;
  #L406ca8.  return v0 @kind object;
}
