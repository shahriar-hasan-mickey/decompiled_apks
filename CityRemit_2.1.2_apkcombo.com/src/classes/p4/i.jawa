record `p4.i` @kind class @AccessFlag FINAL extends `p4.j` @kind class {
  `int` `p4.i.q` @AccessFlag FINAL_TRANSIENT;
  `int` `p4.i.r` @AccessFlag FINAL_TRANSIENT;
  `p4.j` `p4.i.s` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`p4.i` v0 @kind this, `p4.j` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lp4/i;.<init>:(Lp4/j;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4065f8.  v0.`p4.i.s` @type ^`p4.j` := v1 @kind object;
  #L4065fc.  call `<init>`(v0) @signature `Lp4/j;.<init>:()V` @kind direct;
  #L406602.  v0.`p4.i.q` @type ^`int` := v2;
  #L406606.  v0.`p4.i.r` @type ^`int` := v3;
  #L40660a.  return @kind void;
}
procedure `int` `f`(`p4.i` v2 @kind this) @signature `Lp4/i;.f:()I` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L406508.  v0:= v2.`p4.i.s` @type ^`p4.j` @kind object;
  #L40650c.  call temp:= `h`(v0) @signature `Lp4/g;.h:()I` @kind virtual;
  #L406512.  v0:= temp;
  #L406514.  v1:= v2.`p4.i.q` @type ^`int`;
  #L406518.  v0:= v0 + v1 @kind int;
  #L40651a.  v1:= v2.`p4.i.r` @type ^`int`;
  #L40651e.  v0:= v0 + v1 @kind int;
  #L406520.  return v0;
}
procedure `java.lang.Object` `get`(`p4.i` v2 @kind this, `int` v3 ) @signature `Lp4/i;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L406558.  v0:= v2.`p4.i.r` @type ^`int`;
  #L40655c.  v1:= "index" @kind object;
  #L406560.  call temp:= `a`(v3, v0, v1) @signature `Lp4/b;.a:(IILjava/lang/String;)I` @kind static;
  #L406566.  v0:= v2.`p4.i.s` @type ^`p4.j` @kind object;
  #L40656a.  v1:= v2.`p4.i.q` @type ^`int`;
  #L40656e.  v3:= v3 + v1 @kind int;
  #L406570.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L406576.  v3:= temp @kind object;
  #L406578.  return v3 @kind object;
}
procedure `int` `h`(`p4.i` v2 @kind this) @signature `Lp4/i;.h:()I` @AccessFlag FINAL {
    temp;
    v0;
    v1;

  #L406534.  v0:= v2.`p4.i.s` @type ^`p4.j` @kind object;
  #L406538.  call temp:= `h`(v0) @signature `Lp4/g;.h:()I` @kind virtual;
  #L40653e.  v0:= temp;
  #L406540.  v1:= v2.`p4.i.q` @type ^`int`;
  #L406544.  v0:= v0 + v1 @kind int;
  #L406546.  return v0;
}
procedure `java.lang.Object`[] `l`(`p4.i` v1 @kind this) @signature `Lp4/i;.l:()[Ljava/lang/Object;` @AccessFlag FINAL {
    temp;
    v0;

  #L40658c.  v0:= v1.`p4.i.s` @type ^`p4.j` @kind object;
  #L406590.  call temp:= `l`(v0) @signature `Lp4/g;.l:()[Ljava/lang/Object;` @kind virtual;
  #L406596.  v0:= temp @kind object;
  #L406598.  return v0 @kind object;
}
procedure `p4.j` `n`(`p4.i` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lp4/i;.n:(II)Lp4/j;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4065c8.  v0:= v2.`p4.i.r` @type ^`int`;
  #L4065cc.  call `c`(v3, v4, v0) @signature `Lp4/b;.c:(III)V` @kind static;
  #L4065d2.  v0:= v2.`p4.i.s` @type ^`p4.j` @kind object;
  #L4065d6.  v1:= v2.`p4.i.q` @type ^`int`;
  #L4065da.  v3:= v3 + v1 @kind int;
  #L4065dc.  v4:= v4 + v1 @kind int;
  #L4065de.  call temp:= `n`(v0, v3, v4) @signature `Lp4/j;.n:(II)Lp4/j;` @kind virtual;
  #L4065e4.  v3:= temp @kind object;
  #L4065e6.  return v3 @kind object;
}
procedure `int` `size`(`p4.i` v1 @kind this) @signature `Lp4/i;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4064f0.  v0:= v1.`p4.i.r` @type ^`int`;
  #L4064f4.  return v0;
}
procedure `java.util.List` `subList`(`p4.i` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lp4/i;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L4065ac.  call temp:= `n`(v0, v1, v2) @signature `Lp4/j;.n:(II)Lp4/j;` @kind virtual;
  #L4065b2.  v1:= temp @kind object;
  #L4065b4.  return v1 @kind object;
}
