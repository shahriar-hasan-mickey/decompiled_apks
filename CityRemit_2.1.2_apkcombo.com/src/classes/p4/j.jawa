record `p4.j` @kind class @AccessFlag PUBLIC_ABSTRACT extends `p4.g` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface {
}
global `p4.w` `@@p4.j.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lp4/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L406a24.  v0:= new `p4.h`;
  #L406a28.  v1:= `@@p4.o.s` @type ^`p4.j` @kind object;
  #L406a2c.  v2:= 0I;
  #L406a2e.  call `<init>`(v0, v1, v2) @signature `Lp4/h;.<init>:(Lp4/j;I)V` @kind direct;
  #L406a34.  `@@p4.j.p` @type ^`p4.w` := v0 @kind object;
  #L406a38.  return @kind void;
}
procedure `void` `<init>`(`p4.j` v0 @kind this) @signature `Lp4/j;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L406a4c.  call `<init>`(v0) @signature `Lp4/g;.<init>:()V` @kind direct;
  #L406a52.  return @kind void;
}
procedure `p4.j` `G`(`java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `java.lang.Object` v11 @kind object) @signature `Lp4/j;.G:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lp4/j;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L406984.  v0:= 9I;
  #L406988.  v1:= new `java.lang.Object`[v0];
  #L40698c.  v2:= 0I;
  #L40698e.  v1[v2]:= v3 @kind object;
  #L406992.  v3:= 1I;
  #L406994.  v1[v3]:= v4 @kind object;
  #L406998.  v3:= 2I;
  #L40699a.  v1[v3]:= v5 @kind object;
  #L40699e.  v3:= 3I;
  #L4069a0.  v1[v3]:= v6 @kind object;
  #L4069a4.  v3:= 4I;
  #L4069a6.  v1[v3]:= v7 @kind object;
  #L4069aa.  v3:= 5I;
  #L4069ac.  v1[v3]:= v8 @kind object;
  #L4069b0.  v3:= 6I;
  #L4069b2.  v1[v3]:= v9 @kind object;
  #L4069b6.  v3:= 7I;
  #L4069b8.  v1[v3]:= v10 @kind object;
  #L4069bc.  v3:= 8I;
  #L4069c0.  v1[v3]:= v11 @kind object;
  #L4069c4.  call temp:= `a`(v1, v0) @signature `Lp4/n;.a:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L4069ca.  call temp:= `u`(v1, v0) @signature `Lp4/j;.u:([Ljava/lang/Object;I)Lp4/j;` @kind static;
  #L4069d0.  v3:= temp @kind object;
  #L4069d2.  return v3 @kind object;
}
procedure `p4.j` `p`(`java.lang.Object`[] v1 @kind object) @signature `Lp4/j;.p:([Ljava/lang/Object;)Lp4/j;` @AccessFlag STATIC {
    temp;
    v0;

  #L406914.  v0:= length @variable v1;
  #L406916.  call temp:= `u`(v1, v0) @signature `Lp4/j;.u:([Ljava/lang/Object;I)Lp4/j;` @kind static;
  #L40691c.  v1:= temp @kind object;
  #L40691e.  return v1 @kind object;
}
procedure `p4.j` `u`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Lp4/j;.u:([Ljava/lang/Object;I)Lp4/j;` @AccessFlag STATIC {
    temp;
    v0;

  #L406930.  if v2 != 0 then goto L40693a;
  #L406934.  v1:= `@@p4.o.s` @type ^`p4.j` @kind object;
  #L406938.  return v1 @kind object;
  #L40693a.  v0:= new `p4.o`;
  #L40693e.  call `<init>`(v0, v1, v2) @signature `Lp4/o;.<init>:([Ljava/lang/Object;I)V` @kind direct;
  #L406944.  return v0 @kind object;
}
procedure `p4.j` `y`(`java.lang.Object` v3 @kind object) @signature `Lp4/j;.y:(Ljava/lang/Object;)Lp4/j;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L406958.  v0:= 1I;
  #L40695a.  v1:= new `java.lang.Object`[v0];
  #L40695e.  v2:= 0I;
  #L406960.  v1[v2]:= v3 @kind object;
  #L406964.  call temp:= `a`(v1, v0) @signature `Lp4/n;.a:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L40696a.  call temp:= `u`(v1, v0) @signature `Lp4/j;.u:([Ljava/lang/Object;I)Lp4/j;` @kind static;
  #L406970.  v3:= temp @kind object;
  #L406972.  return v3 @kind object;
}
procedure `p4.w` `N`(`p4.j` v2 @kind this, `int` v3 ) @signature `Lp4/j;.N:(I)Lp4/w;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4069e4.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L4069ea.  v0:= temp;
  #L4069ec.  v1:= "index" @kind object;
  #L4069f0.  call temp:= `b`(v3, v0, v1) @signature `Lp4/b;.b:(IILjava/lang/String;)I` @kind static;
  #L4069f6.  call temp:= `isEmpty`(v2) @signature `Ljava/util/AbstractCollection;.isEmpty:()Z` @kind virtual;
  #L4069fc.  v0:= temp;
  #L4069fe.  if v0 == 0 then goto L406a08;
  #L406a02.  v3:= `@@p4.j.p` @type ^`p4.w` @kind object;
  #L406a06.  return v3 @kind object;
  #L406a08.  v0:= new `p4.h`;
  #L406a0c.  call `<init>`(v0, v2, v3) @signature `Lp4/h;.<init>:(Lp4/j;I)V` @kind direct;
  #L406a12.  return v0 @kind object;
}
procedure `void` `add`(`p4.j` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lp4/j;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L406a64.  v1:= new `java.lang.UnsupportedOperationException`;
  #L406a68.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L406a6e.  throw v1;
}
procedure `boolean` `addAll`(`p4.j` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Lp4/j;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L40661c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L406620.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L406626.  throw v1;
}
procedure `int` `b`(`p4.j` v2 @kind this, `java.lang.Object`[] v3 @kind object, `int` v4 ) @signature `Lp4/j;.b:([Ljava/lang/Object;I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4067f4.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L4067fa.  v4:= temp;
  #L4067fc.  v0:= 0I;
  #L4067fe.  if v0 >= v4 then goto L406814;
  #L406802.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L406808.  v1:= temp @kind object;
  #L40680a.  v3[v0]:= v1 @kind object;
  #L40680e.  v0:= v0 + 1;
  #L406812.  goto L4067fe;
  #L406814.  return v4;
}
procedure `boolean` `contains`(`p4.j` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lp4/j;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L406638.  call temp:= `indexOf`(v0, v1) @signature `Lp4/j;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L40663e.  v1:= temp;
  #L406640.  if v1 < 0 then goto L406648;
  #L406644.  v1:= 1I;
  #L406646.  return v1;
  #L406648.  v1:= 0I;
  #L40664a.  return v1;
}
procedure `boolean` `equals`(`p4.j` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lp4/j;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L40665c.  v0:= 1I;
  #L40665e.  v1:= 0I;
  #L406660.  if v7 != v6 then goto L406666;
  #L406664.  goto L406712;
  #L406666.  v2:= instanceof @variable v7 @type ^`java.util.List` @kind boolean;
  #L40666a.  if v2 != 0 then goto L406672;
  #L40666e.  v0:= 0I;
  #L406670.  goto L406712;
  #L406672.  v7:= (`java.util.List`) v7 @kind object;
  #L406676.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L40667c.  v2:= temp;
  #L40667e.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L406684.  v3:= temp;
  #L406686.  if v2 == v3 then goto L40668c;
  #L40668a.  goto L40666e;
  #L40668c.  v3:= instanceof @variable v7 @type ^`java.util.RandomAccess` @kind boolean;
  #L406690.  if v3 == 0 then goto L4066be;
  #L406694.  v3:= 0I;
  #L406696.  if v3 >= v2 then goto L406712;
  #L40669a.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4066a0.  v4:= temp @kind object;
  #L4066a2.  call temp:= `get`(v7, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4066a8.  v5:= temp @kind object;
  #L4066aa.  call temp:= `a`(v4, v5) @signature `Lp4/z0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4066b0.  v4:= temp;
  #L4066b2.  if v4 != 0 then goto L4066b8;
  #L4066b6.  goto L40666e;
  #L4066b8.  v3:= v3 + 1;
  #L4066bc.  goto L406696;
  #L4066be.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4066c4.  v2:= temp @kind object;
  #L4066c6.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4066cc.  v7:= temp @kind object;
  #L4066ce.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4066d4.  v3:= temp;
  #L4066d6.  if v3 == 0 then goto L406706;
  #L4066da.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4066e0.  v3:= temp;
  #L4066e2.  if v3 != 0 then goto L4066e8;
  #L4066e6.  goto L40666e;
  #L4066e8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4066ee.  v3:= temp @kind object;
  #L4066f0.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4066f6.  v4:= temp @kind object;
  #L4066f8.  call temp:= `a`(v3, v4) @signature `Lp4/z0;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4066fe.  v3:= temp;
  #L406700.  if v3 != 0 then goto L4066ce;
  #L406704.  goto L40666e;
  #L406706.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L40670c.  v7:= temp;
  #L40670e.  if v7 != 0 then goto L40666e;
  #L406712.  return v0;
}
procedure `int` `hashCode`(`p4.j` v4 @kind this) @signature `Lp4/j;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L406724.  call temp:= `size`(v4) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L40672a.  v0:= temp;
  #L40672c.  v1:= 1I;
  #L40672e.  v2:= 0I;
  #L406730.  if v2 >= v0 then goto L406750;
  #L406734.  v1:= v1 * 31;
  #L406738.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L40673e.  v3:= temp @kind object;
  #L406740.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L406746.  v3:= temp;
  #L406748.  v1:= v1 + v3 @kind int;
  #L40674a.  v2:= v2 + 1;
  #L40674e.  goto L406730;
  #L406750.  return v1;
}
procedure `int` `indexOf`(`p4.j` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lp4/j;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L406764.  v0:= -1I;
  #L406766.  if v5 != 0 then goto L40676c;
  #L40676a.  return v0;
  #L40676c.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L406772.  v1:= temp;
  #L406774.  v2:= 0I;
  #L406776.  if v2 >= v1 then goto L406798;
  #L40677a.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L406780.  v3:= temp @kind object;
  #L406782.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L406788.  v3:= temp;
  #L40678a.  if v3 == 0 then goto L406792;
  #L40678e.  v0:= v2;
  #L406790.  goto L406798;
  #L406792.  v2:= v2 + 1;
  #L406796.  goto L406776;
  #L406798.  return v0;
}
procedure `java.util.Iterator` `iterator`(`p4.j` v1 @kind this) @signature `Lp4/j;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L406860.  v0:= 0I;
  #L406862.  call temp:= `N`(v1, v0) @signature `Lp4/j;.N:(I)Lp4/w;` @kind virtual;
  #L406868.  v0:= temp @kind object;
  #L40686a.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`p4.j` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lp4/j;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4067ac.  v0:= -1I;
  #L4067ae.  if v4 != 0 then goto L4067b4;
  #L4067b2.  return v0;
  #L4067b4.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4067ba.  v1:= temp;
  #L4067bc.  v1:= v1 + v0 @kind int;
  #L4067be.  if v1 < 0 then goto L4067e0;
  #L4067c2.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4067c8.  v2:= temp @kind object;
  #L4067ca.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4067d0.  v2:= temp;
  #L4067d2.  if v2 == 0 then goto L4067da;
  #L4067d6.  v0:= v1;
  #L4067d8.  goto L4067e0;
  #L4067da.  v1:= v1 + -1;
  #L4067de.  goto L4067be;
  #L4067e0.  return v0;
}
procedure `java.util.ListIterator` `listIterator`(`p4.j` v1 @kind this) @signature `Lp4/j;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L406898.  v0:= 0I;
  #L40689a.  call temp:= `N`(v1, v0) @signature `Lp4/j;.N:(I)Lp4/w;` @kind virtual;
  #L4068a0.  v0:= temp @kind object;
  #L4068a2.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`p4.j` v0 @kind this, `int` v1 ) @signature `Lp4/j;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L4068b4.  call temp:= `N`(v0, v1) @signature `Lp4/j;.N:(I)Lp4/w;` @kind virtual;
  #L4068ba.  v1:= temp @kind object;
  #L4068bc.  return v1 @kind object;
}
procedure `p4.j` `n`(`p4.j` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lp4/j;.n:(II)Lp4/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4068d0.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L4068d6.  v0:= temp;
  #L4068d8.  call `c`(v2, v3, v0) @signature `Lp4/b;.c:(III)V` @kind static;
  #L4068de.  v3:= v3 - v2 @kind int;
  #L4068e0.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L4068e6.  v0:= temp;
  #L4068e8.  if v3 != v0 then goto L4068ee;
  #L4068ec.  return v1 @kind object;
  #L4068ee.  if v3 != 0 then goto L4068f8;
  #L4068f2.  v2:= `@@p4.o.s` @type ^`p4.j` @kind object;
  #L4068f6.  return v2 @kind object;
  #L4068f8.  v0:= new `p4.i`;
  #L4068fc.  call `<init>`(v0, v1, v2, v3) @signature `Lp4/i;.<init>:(Lp4/j;II)V` @kind direct;
  #L406902.  return v0 @kind object;
}
procedure `java.lang.Object` `remove`(`p4.j` v0 @kind this, `int` v1 ) @signature `Lp4/j;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L406828.  v1:= new `java.lang.UnsupportedOperationException`;
  #L40682c.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L406832.  throw v1;
}
procedure `java.lang.Object` `set`(`p4.j` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lp4/j;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L406844.  v1:= new `java.lang.UnsupportedOperationException`;
  #L406848.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L40684e.  throw v1;
}
procedure `java.util.List` `subList`(`p4.j` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lp4/j;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40687c.  call temp:= `n`(v0, v1, v2) @signature `Lp4/j;.n:(II)Lp4/j;` @kind virtual;
  #L406882.  v1:= temp @kind object;
  #L406884.  return v1 @kind object;
}
