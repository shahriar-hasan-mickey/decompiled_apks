record `p4.q` @kind class @AccessFlag FINAL extends `p4.m` @kind class {
  `p4.l` `p4.q.q` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.Object`[] `p4.q.r` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `p4.q.s` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`p4.q` v0 @kind this, `p4.l` v1 @kind object, `java.lang.Object`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lp4/q;.<init>:(Lp4/l;[Ljava/lang/Object;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4071ac.  call `<init>`(v0) @signature `Lp4/m;.<init>:()V` @kind direct;
  #L4071b2.  v0.`p4.q.q` @type ^`p4.l` := v1 @kind object;
  #L4071b6.  v0.`p4.q.r` @type ^`java.lang.Object`[] := v2 @kind object;
  #L4071ba.  v0.`p4.q.s` @type ^`int` := v4;
  #L4071be.  return @kind void;
}
procedure `int` `u`(`p4.q` v0 @kind object) @signature `Lp4/q;.u:(Lp4/q;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L40713c.  v0:= v0.`p4.q.s` @type ^`int`;
  #L407140.  return v0;
}
procedure `java.lang.Object`[] `y`(`p4.q` v0 @kind object) @signature `Lp4/q;.y:(Lp4/q;)[Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L407154.  v0:= v0.`p4.q.r` @type ^`java.lang.Object`[] @kind object;
  #L407158.  return v0 @kind object;
}
procedure `int` `b`(`p4.q` v1 @kind this, `java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Lp4/q;.b:([Ljava/lang/Object;I)I` @AccessFlag FINAL {
    temp;
    v0;

  #L407118.  call temp:= `n`(v1) @signature `Lp4/m;.n:()Lp4/j;` @kind virtual;
  #L40711e.  v3:= temp @kind object;
  #L407120.  v0:= 0I;
  #L407122.  call temp:= `b`(v3, v2, v0) @signature `Lp4/g;.b:([Ljava/lang/Object;I)I` @kind virtual;
  #L407128.  v2:= temp;
  #L40712a.  return v2;
}
procedure `boolean` `contains`(`p4.q` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lp4/q;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4070b0.  v0:= instanceof @variable v4 @type ^`java.util.Map$Entry` @kind boolean;
  #L4070b4.  v1:= 0I;
  #L4070b6.  if v0 == 0 then goto L4070ee;
  #L4070ba.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L4070be.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4070c4.  v0:= temp @kind object;
  #L4070c6.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4070cc.  v4:= temp @kind object;
  #L4070ce.  if v4 == 0 then goto L4070ee;
  #L4070d2.  v2:= v3.`p4.q.q` @type ^`p4.l` @kind object;
  #L4070d6.  call temp:= `get`(v2, v0) @signature `Lp4/l;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4070dc.  v0:= temp @kind object;
  #L4070de.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4070e4.  v4:= temp;
  #L4070e6.  if v4 == 0 then goto L4070ee;
  #L4070ea.  v4:= 1I;
  #L4070ec.  return v4;
  #L4070ee.  return v1;
}
procedure `java.util.Iterator` `iterator`(`p4.q` v2 @kind this) @signature `Lp4/q;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L40716c.  call temp:= `n`(v2) @signature `Lp4/m;.n:()Lp4/j;` @kind virtual;
  #L407172.  v0:= temp @kind object;
  #L407174.  v1:= 0I;
  #L407176.  call temp:= `N`(v0, v1) @signature `Lp4/j;.N:(I)Lp4/w;` @kind virtual;
  #L40717c.  v0:= temp @kind object;
  #L40717e.  return v0 @kind object;
}
procedure `p4.j` `p`(`p4.q` v1 @kind this) @signature `Lp4/q;.p:()Lp4/j;` @AccessFlag FINAL {
    temp;
    v0;

  #L407190.  v0:= new `p4.p`;
  #L407194.  call `<init>`(v0, v1) @signature `Lp4/p;.<init>:(Lp4/q;)V` @kind direct;
  #L40719a.  return v0 @kind object;
}
procedure `int` `size`(`p4.q` v1 @kind this) @signature `Lp4/q;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L407100.  v0:= v1.`p4.q.s` @type ^`int`;
  #L407104.  return v0;
}
