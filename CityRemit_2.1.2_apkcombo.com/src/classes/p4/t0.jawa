record `p4.t0` @kind class @AccessFlag PUBLIC_FINAL {
}
global `p4.t0` `@@p4.t0.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`p4.t0` v0 @kind this) @signature `Lp4/t0;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L407f80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L407f86.  return @kind void;
}
procedure `p4.t0` `a`() @signature `Lp4/t0;.a:()Lp4/t0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L407f38.  v0:= constclass @type ^`p4.t0` @kind object;
  #L407f3c.  @monitorenter v0
  #L407f3e.  v1:= `@@p4.t0.a` @type ^`p4.t0` @kind object;
  #L407f42.  if v1 != 0 then goto L407f54;
  #L407f46.  v1:= new `p4.t0`;
  #L407f4a.  call `<init>`(v1) @signature `Lp4/t0;.<init>:()V` @kind direct;
  #L407f50.  `@@p4.t0.a` @type ^`p4.t0` := v1 @kind object;
  #L407f54.  v1:= `@@p4.t0.a` @type ^`p4.t0` @kind object;
  #L407f58.  @monitorexit v0
  #L407f5a.  return v1 @kind object;
  #L407f5c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L407f5e.  @monitorexit v0
  #L407f60.  throw v1;
  catch `java.lang.Throwable` @[L407f3e..L407f58] goto L407f5c;
}
procedure `void` `b`() @signature `Lp4/t0;.b:()V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L407f98.  call `a`() @signature `Lp4/s0;.a:()V` @kind static;
  #L407f9e.  return @kind void;
}
