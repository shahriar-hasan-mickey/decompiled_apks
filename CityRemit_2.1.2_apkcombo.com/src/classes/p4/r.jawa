record `p4.r` @kind class @AccessFlag FINAL extends `p4.m` @kind class {
  `p4.l` `p4.r.q` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `p4.j` `p4.r.r` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`p4.r` v0 @kind this, `p4.l` v1 @kind object, `p4.j` v2 @kind object) @signature `Lp4/r;.<init>:(Lp4/l;Lp4/j;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L407270.  call `<init>`(v0) @signature `Lp4/m;.<init>:()V` @kind direct;
  #L407276.  v0.`p4.r.q` @type ^`p4.l` := v1 @kind object;
  #L40727a.  v0.`p4.r.r` @type ^`p4.j` := v2 @kind object;
  #L40727e.  return @kind void;
}
procedure `int` `b`(`p4.r` v1 @kind this, `java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Lp4/r;.b:([Ljava/lang/Object;I)I` @AccessFlag FINAL {
    temp;
    v0;

  #L407218.  v3:= v1.`p4.r.r` @type ^`p4.j` @kind object;
  #L40721c.  v0:= 0I;
  #L40721e.  call temp:= `b`(v3, v2, v0) @signature `Lp4/g;.b:([Ljava/lang/Object;I)I` @kind virtual;
  #L407224.  v2:= temp;
  #L407226.  return v2;
}
procedure `boolean` `contains`(`p4.r` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lp4/r;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4071d0.  v0:= v1.`p4.r.q` @type ^`p4.l` @kind object;
  #L4071d4.  call temp:= `get`(v0, v2) @signature `Lp4/l;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4071da.  v2:= temp @kind object;
  #L4071dc.  if v2 == 0 then goto L4071e4;
  #L4071e0.  v2:= 1I;
  #L4071e2.  return v2;
  #L4071e4.  v2:= 0I;
  #L4071e6.  return v2;
}
procedure `java.util.Iterator` `iterator`(`p4.r` v2 @kind this) @signature `Lp4/r;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L407238.  v0:= v2.`p4.r.r` @type ^`p4.j` @kind object;
  #L40723c.  v1:= 0I;
  #L40723e.  call temp:= `N`(v0, v1) @signature `Lp4/j;.N:(I)Lp4/w;` @kind virtual;
  #L407244.  v0:= temp @kind object;
  #L407246.  return v0 @kind object;
}
procedure `int` `size`(`p4.r` v1 @kind this) @signature `Lp4/r;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4071f8.  v0:= v1.`p4.r.q` @type ^`p4.l` @kind object;
  #L4071fc.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L407202.  v0:= temp;
  #L407204.  return v0;
}
