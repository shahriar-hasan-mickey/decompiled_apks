record `p4.e0` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`p4.e0` v0 @kind this) @signature `Lp4/e0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L407a60.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L407a66.  return @kind void;
}
procedure `p4.d0` `d`(`java.lang.String` v1 @kind object) @signature `Lp4/e0;.d:(Ljava/lang/String;)Lp4/d0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L407a2c.  v1:= new `p4.a0`;
  #L407a30.  call `<init>`(v1) @signature `Lp4/a0;.<init>:()V` @kind direct;
  #L407a36.  v0:= "common" @kind object;
  #L407a3a.  call temp:= `d`(v1, v0) @signature `Lp4/a0;.d:(Ljava/lang/String;)Lp4/d0;` @kind virtual;
  #L407a40.  v0:= 1I;
  #L407a42.  call temp:= `a`(v1, v0) @signature `Lp4/d0;.a:(Z)Lp4/d0;` @kind virtual;
  #L407a48.  call temp:= `b`(v1, v0) @signature `Lp4/d0;.b:(I)Lp4/d0;` @kind virtual;
  #L407a4e.  return v1 @kind object;
}
procedure `int` `a`() @signature `Lp4/e0;.a:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `b`() @signature `Lp4/e0;.b:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `c`() @signature `Lp4/e0;.c:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
