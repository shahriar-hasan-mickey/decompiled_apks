record `p4.c0` @kind class @AccessFlag FINAL extends `p4.e0` @kind class {
  `java.lang.String` `p4.c0.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `p4.c0.b` @AccessFlag PRIVATE_FINAL;
  `int` `p4.c0.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`p4.c0` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `int` v3 , `p4.b0` v4 @kind object) @signature `Lp4/c0;.<init>:(Ljava/lang/String;ZILp4/b0;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4079f0.  call `<init>`(v0) @signature `Lp4/e0;.<init>:()V` @kind direct;
  #L4079f6.  v0.`p4.c0.a` @type ^`java.lang.String` := v1 @kind object;
  #L4079fa.  v0.`p4.c0.b` @type ^`boolean` := v2 @kind boolean;
  #L4079fe.  v0.`p4.c0.c` @type ^`int` := v3;
  #L407a02.  return @kind void;
}
procedure `int` `a`(`p4.c0` v1 @kind this) @signature `Lp4/c0;.a:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L407948.  v0:= v1.`p4.c0.c` @type ^`int`;
  #L40794c.  return v0;
}
procedure `java.lang.String` `b`(`p4.c0` v1 @kind this) @signature `Lp4/c0;.b:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4079d8.  v0:= v1.`p4.c0.a` @type ^`java.lang.String` @kind object;
  #L4079dc.  return v0 @kind object;
}
procedure `boolean` `c`(`p4.c0` v1 @kind this) @signature `Lp4/c0;.c:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4078e4.  v0:= v1.`p4.c0.b` @type ^`boolean` @kind boolean;
  #L4078e8.  return v0;
}
procedure `boolean` `equals`(`p4.c0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lp4/c0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L407880.  v0:= 1I;
  #L407882.  if v5 != v4 then goto L407888;
  #L407886.  return v0;
  #L407888.  v1:= instanceof @variable v5 @type ^`p4.e0` @kind boolean;
  #L40788c.  v2:= 0I;
  #L40788e.  if v1 == 0 then goto L4078d0;
  #L407892.  v5:= (`p4.e0`) v5 @kind object;
  #L407896.  v1:= v4.`p4.c0.a` @type ^`java.lang.String` @kind object;
  #L40789a.  call temp:= `b`(v5) @signature `Lp4/e0;.b:()Ljava/lang/String;` @kind virtual;
  #L4078a0.  v3:= temp @kind object;
  #L4078a2.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4078a8.  v1:= temp;
  #L4078aa.  if v1 == 0 then goto L4078d0;
  #L4078ae.  v1:= v4.`p4.c0.b` @type ^`boolean` @kind boolean;
  #L4078b2.  call temp:= `c`(v5) @signature `Lp4/e0;.c:()Z` @kind virtual;
  #L4078b8.  v3:= temp;
  #L4078ba.  if v1 != v3 then goto L4078d0;
  #L4078be.  v1:= v4.`p4.c0.c` @type ^`int`;
  #L4078c2.  call temp:= `a`(v5) @signature `Lp4/e0;.a:()I` @kind virtual;
  #L4078c8.  v5:= temp;
  #L4078ca.  if v1 != v5 then goto L4078d0;
  #L4078ce.  return v0;
  #L4078d0.  return v2;
}
procedure `int` `hashCode`(`p4.c0` v4 @kind this) @signature `Lp4/c0;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4078fc.  v0:= v4.`p4.c0.a` @type ^`java.lang.String` @kind object;
  #L407900.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L407906.  v0:= temp;
  #L407908.  v1:= 1000003I;
  #L40790e.  v0:= v0 ^~ v1 @kind int;
  #L407910.  v0:= v0 * v1 @kind int;
  #L407914.  v2:= v4.`p4.c0.b` @type ^`boolean` @kind boolean;
  #L407918.  v3:= 1I;
  #L40791a.  if v3 == v2 then goto L407924;
  #L40791e.  v2:= 1237I;
  #L407922.  goto L407928;
  #L407924.  v2:= 1231I;
  #L407928.  v0:= v0 ^~ v2 @kind int;
  #L40792a.  v0:= v0 * v1 @kind int;
  #L40792e.  v1:= v4.`p4.c0.c` @type ^`int`;
  #L407932.  v0:= v0 ^~ v1 @kind int;
  #L407934.  return v0;
}
procedure `java.lang.String` `toString`(`p4.c0` v5 @kind this) @signature `Lp4/c0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L407960.  v0:= v5.`p4.c0.a` @type ^`java.lang.String` @kind object;
  #L407964.  v1:= v5.`p4.c0.b` @type ^`boolean` @kind boolean;
  #L407968.  v2:= v5.`p4.c0.c` @type ^`int`;
  #L40796c.  v3:= new `java.lang.StringBuilder`;
  #L407970.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L407976.  v4:= temp;
  #L407978.  v4:= v4 + 84;
  #L40797c.  call `<init>`(v3, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L407982.  v4:= "MLKitLoggingOptions{libraryName=" @kind object;
  #L407986.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40798c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407992.  v0:= ", enableFirelog=" @kind object;
  #L407996.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40799c.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L4079a2.  v0:= ", firelogEventType=" @kind object;
  #L4079a6.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4079ac.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4079b2.  v0:= "}" @kind object;
  #L4079b6.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4079bc.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4079c2.  v0:= temp @kind object;
  #L4079c4.  return v0 @kind object;
}
