record `p4.t` @kind class @AccessFlag FINAL extends `p4.l` @kind class {
  `java.lang.Object`[] `p4.t.r` @AccessFlag FINAL_TRANSIENT;
  `int` `p4.t.s` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
procedure `void` `<clinit>`() @signature `Lp4/t;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40742c.  v0:= new `p4.t`;
  #L407430.  v1:= 0I;
  #L407432.  v2:= new `java.lang.Object`[v1];
  #L407436.  v3:= 0I;
  #L407438.  call `<init>`(v0, v3, v2, v1) @signature `Lp4/t;.<init>:(Ljava/lang/Object;[Ljava/lang/Object;I)V` @kind direct;
  #L40743e.  return @kind void;
}
procedure `void` `<init>`(`p4.t` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Lp4/t;.<init>:(Ljava/lang/Object;[Ljava/lang/Object;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L407450.  call `<init>`(v0) @signature `Lp4/l;.<init>:()V` @kind direct;
  #L407456.  v0.`p4.t.r` @type ^`java.lang.Object`[] := v2 @kind object;
  #L40745a.  v0.`p4.t.s` @type ^`int` := v3;
  #L40745e.  return @kind void;
}
procedure `p4.t` `g`(`int` v1 , `java.lang.Object`[] v2 @kind object, `p4.k` v3 @kind object) @signature `Lp4/t;.g:(I[Ljava/lang/Object;Lp4/k;)Lp4/t;` @AccessFlag STATIC {
    temp;
    v0;

  #L4073f0.  v1:= 0I;
  #L4073f2.  v1:= v2[v1] @kind object;
  #L4073f6.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4073fc.  v3:= 1I;
  #L4073fe.  v0:= v2[v3] @kind object;
  #L407402.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L407408.  call `a`(v1, v0) @signature `Lp4/e;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L40740e.  v1:= new `p4.t`;
  #L407412.  v0:= 0I;
  #L407414.  call `<init>`(v1, v0, v2, v3) @signature `Lp4/t;.<init>:(Ljava/lang/Object;[Ljava/lang/Object;I)V` @kind direct;
  #L40741a.  return v1 @kind object;
}
procedure `p4.g` `a`(`p4.t` v4 @kind this) @signature `Lp4/t;.a:()Lp4/g;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L407370.  v0:= new `p4.s`;
  #L407374.  v1:= v4.`p4.t.r` @type ^`java.lang.Object`[] @kind object;
  #L407378.  v2:= v4.`p4.t.s` @type ^`int`;
  #L40737c.  v3:= 1I;
  #L40737e.  call `<init>`(v0, v1, v3, v2) @signature `Lp4/s;.<init>:([Ljava/lang/Object;II)V` @kind direct;
  #L407384.  return v0 @kind object;
}
procedure `p4.m` `d`(`p4.t` v4 @kind this) @signature `Lp4/t;.d:()Lp4/m;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L407398.  v0:= new `p4.q`;
  #L40739c.  v1:= v4.`p4.t.r` @type ^`java.lang.Object`[] @kind object;
  #L4073a0.  v2:= v4.`p4.t.s` @type ^`int`;
  #L4073a4.  v3:= 0I;
  #L4073a6.  call `<init>`(v0, v4, v1, v3, v2) @signature `Lp4/q;.<init>:(Lp4/l;[Ljava/lang/Object;II)V` @kind direct;
  #L4073ac.  return v0 @kind object;
}
procedure `p4.m` `e`(`p4.t` v4 @kind this) @signature `Lp4/t;.e:()Lp4/m;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4073c0.  v0:= new `p4.s`;
  #L4073c4.  v1:= v4.`p4.t.r` @type ^`java.lang.Object`[] @kind object;
  #L4073c8.  v2:= v4.`p4.t.s` @type ^`int`;
  #L4073cc.  v3:= 0I;
  #L4073ce.  call `<init>`(v0, v1, v3, v2) @signature `Lp4/s;.<init>:([Ljava/lang/Object;II)V` @kind direct;
  #L4073d4.  v1:= new `p4.r`;
  #L4073d8.  call `<init>`(v1, v4, v0) @signature `Lp4/r;.<init>:(Lp4/l;Lp4/j;)V` @kind direct;
  #L4073de.  return v1 @kind object;
}
procedure `java.lang.Object` `get`(`p4.t` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lp4/t;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40731c.  v0:= v4.`p4.t.r` @type ^`java.lang.Object`[] @kind object;
  #L407320.  v1:= v4.`p4.t.s` @type ^`int`;
  #L407324.  v2:= 0I;
  #L407326.  if v5 != 0 then goto L40732e;
  #L40732a.  v5:= v2 @kind object;
  #L40732c.  goto L407356;
  #L40732e.  v3:= 1I;
  #L407330.  if v1 != v3 then goto L40732a;
  #L407334.  v1:= 0I;
  #L407336.  v1:= v0[v1] @kind object;
  #L40733a.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L407340.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L407346.  v5:= temp;
  #L407348.  if v5 == 0 then goto L40732a;
  #L40734c.  v5:= v0[v3] @kind object;
  #L407350.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L407356.  if v5 != 0 then goto L40735c;
  #L40735a.  return v2 @kind object;
  #L40735c.  return v5 @kind object;
}
procedure `int` `size`(`p4.t` v1 @kind this) @signature `Lp4/t;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L407304.  v0:= v1.`p4.t.s` @type ^`int`;
  #L407308.  return v0;
}
