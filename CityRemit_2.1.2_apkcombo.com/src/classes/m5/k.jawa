record `m5.k` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `m5.k` `@@m5.k.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `m5.k` `@@m5.k.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `m5.k` `@@m5.k.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lm5/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3de42c.  v0:= new `m5.k$a`;
  #L3de430.  call `<init>`(v0) @signature `Lm5/k$a;.<init>:()V` @kind direct;
  #L3de436.  `@@m5.k.a` @type ^`m5.k` := v0 @kind object;
  #L3de43a.  v0:= new `m5.k$b`;
  #L3de43e.  v1:= -1I;
  #L3de440.  call `<init>`(v0, v1) @signature `Lm5/k$b;.<init>:(I)V` @kind direct;
  #L3de446.  `@@m5.k.b` @type ^`m5.k` := v0 @kind object;
  #L3de44a.  v0:= new `m5.k$b`;
  #L3de44e.  v1:= 1I;
  #L3de450.  call `<init>`(v0, v1) @signature `Lm5/k$b;.<init>:(I)V` @kind direct;
  #L3de456.  `@@m5.k.c` @type ^`m5.k` := v0 @kind object;
  #L3de45a.  return @kind void;
}
procedure `void` `<init>`(`m5.k` v0 @kind this) @signature `Lm5/k;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3de46c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3de472.  return @kind void;
}
procedure `void` `<init>`(`m5.k` v0 @kind this, `m5.k$a` v1 @kind object) @signature `Lm5/k;.<init>:(Lm5/k$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3de484.  call `<init>`(v0) @signature `Lm5/k;.<init>:()V` @kind direct;
  #L3de48a.  return @kind void;
}
procedure `m5.k` `a`() @signature `Lm5/k;.a:()Lm5/k;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L3de3cc.  v0:= `@@m5.k.b` @type ^`m5.k` @kind object;
  #L3de3d0.  return v0 @kind object;
}
procedure `m5.k` `b`() @signature `Lm5/k;.b:()Lm5/k;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L3de3e4.  v0:= `@@m5.k.c` @type ^`m5.k` @kind object;
  #L3de3e8.  return v0 @kind object;
}
procedure `m5.k` `c`() @signature `Lm5/k;.c:()Lm5/k;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L3de3fc.  v0:= `@@m5.k.a` @type ^`m5.k` @kind object;
  #L3de400.  return v0 @kind object;
}
procedure `m5.k` `i`() @signature `Lm5/k;.i:()Lm5/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3de414.  v0:= `@@m5.k.a` @type ^`m5.k` @kind object;
  #L3de418.  return v0 @kind object;
}
procedure `m5.k` `d`(`int` v0 , `int` v1 ) @signature `Lm5/k;.d:(II)Lm5/k;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `m5.k` `e`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lm5/k;.e:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lm5/k;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `m5.k` `f`(`boolean` v0 , `boolean` v1 ) @signature `Lm5/k;.f:(ZZ)Lm5/k;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `m5.k` `g`(`boolean` v0 , `boolean` v1 ) @signature `Lm5/k;.g:(ZZ)Lm5/k;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `h`() @signature `Lm5/k;.h:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
