record `m5.j0` @kind class @AccessFlag  extends `m5.q` @kind class {
  `java.lang.Object`[] `m5.j0.q` @AccessFlag FINAL_TRANSIENT;
  `int` `m5.j0.r` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
global `m5.q` `@@m5.j0.s` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lm5/j0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3e16a4.  v0:= new `m5.j0`;
  #L3e16a8.  v1:= 0I;
  #L3e16aa.  v2:= new `java.lang.Object`[v1];
  #L3e16ae.  call `<init>`(v0, v2, v1) @signature `Lm5/j0;.<init>:([Ljava/lang/Object;I)V` @kind direct;
  #L3e16b4.  `@@m5.j0.s` @type ^`m5.q` := v0 @kind object;
  #L3e16b8.  return @kind void;
}
procedure `void` `<init>`(`m5.j0` v0 @kind this, `java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Lm5/j0;.<init>:([Ljava/lang/Object;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e16cc.  call `<init>`(v0) @signature `Lm5/q;.<init>:()V` @kind direct;
  #L3e16d2.  v0.`m5.j0.q` @type ^`java.lang.Object`[] := v1 @kind object;
  #L3e16d6.  v0.`m5.j0.r` @type ^`int` := v2;
  #L3e16da.  return @kind void;
}
procedure `int` `f`(`m5.j0` v3 @kind this, `java.lang.Object`[] v4 @kind object, `int` v5 ) @signature `Lm5/j0;.f:([Ljava/lang/Object;I)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3e15f4.  v0:= v3.`m5.j0.q` @type ^`java.lang.Object`[] @kind object;
  #L3e15f8.  v1:= v3.`m5.j0.r` @type ^`int`;
  #L3e15fc.  v2:= 0I;
  #L3e15fe.  call `arraycopy`(v0, v2, v4, v5, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3e1604.  v4:= v3.`m5.j0.r` @type ^`int`;
  #L3e1608.  v5:= v5 + v4 @kind int;
  #L3e160a.  return v5;
}
procedure `java.lang.Object` `get`(`m5.j0` v1 @kind this, `int` v2 ) @signature `Lm5/j0;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1660.  v0:= v1.`m5.j0.r` @type ^`int`;
  #L3e1664.  call temp:= `g`(v2, v0) @signature `Ll5/j;.g:(II)I` @kind static;
  #L3e166a.  v0:= v1.`m5.j0.q` @type ^`java.lang.Object`[] @kind object;
  #L3e166e.  v2:= v0[v2] @kind object;
  #L3e1672.  call temp:= `requireNonNull`(v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e1678.  return v2 @kind object;
}
procedure `java.lang.Object`[] `h`(`m5.j0` v1 @kind this) @signature `Lm5/j0;.h:()[Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L3e168c.  v0:= v1.`m5.j0.q` @type ^`java.lang.Object`[] @kind object;
  #L3e1690.  return v0 @kind object;
}
procedure `int` `l`(`m5.j0` v1 @kind this) @signature `Lm5/j0;.l:()I` @AccessFlag  {
    temp;
    v0;

  #L3e161c.  v0:= v1.`m5.j0.r` @type ^`int`;
  #L3e1620.  return v0;
}
procedure `int` `n`(`m5.j0` v1 @kind this) @signature `Lm5/j0;.n:()I` @AccessFlag  {
    temp;
    v0;

  #L3e1634.  v0:= 0I;
  #L3e1636.  return v0;
}
procedure `boolean` `p`(`m5.j0` v1 @kind this) @signature `Lm5/j0;.p:()Z` @AccessFlag  {
    temp;
    v0;

  #L3e15e0.  v0:= 0I;
  #L3e15e2.  return v0;
}
procedure `int` `size`(`m5.j0` v1 @kind this) @signature `Lm5/j0;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1648.  v0:= v1.`m5.j0.r` @type ^`int`;
  #L3e164c.  return v0;
}
