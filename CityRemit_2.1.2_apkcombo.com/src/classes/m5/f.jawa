record `m5.f` @kind class @AccessFlag ABSTRACT extends `m5.z` @kind interface {
  `java.util.Set` `m5.f.o` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Collection` `m5.f.p` @AccessFlag PRIVATE_TRANSIENT;
  `java.util.Map` `m5.f.q` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`m5.f` v0 @kind this) @signature `Lm5/f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ddb34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ddb3a.  return @kind void;
}
procedure `java.util.Map` `a`(`m5.f` v1 @kind this) @signature `Lm5/f;.a:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ddae4.  v0:= v1.`m5.f.q` @type ^`java.util.Map` @kind object;
  #L3ddae8.  if v0 != 0 then goto L3ddaf8;
  #L3ddaec.  call temp:= `c`(v1) @signature `Lm5/f;.c:()Ljava/util/Map;` @kind virtual;
  #L3ddaf2.  v0:= temp @kind object;
  #L3ddaf4.  v1.`m5.f.q` @type ^`java.util.Map` := v0 @kind object;
  #L3ddaf8.  return v0 @kind object;
}
procedure `boolean` `b`(`m5.f` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lm5/f;.b:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dda04.  call temp:= `a`(v2) @signature `Lm5/f;.a:()Ljava/util/Map;` @kind virtual;
  #L3dda0a.  v0:= temp @kind object;
  #L3dda0c.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L3dda12.  v0:= temp @kind object;
  #L3dda14.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3dda1a.  v0:= temp @kind object;
  #L3dda1c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3dda22.  v1:= temp;
  #L3dda24.  if v1 == 0 then goto L3dda44;
  #L3dda28.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3dda2e.  v1:= temp @kind object;
  #L3dda30.  v1:= (`java.util.Collection`) v1 @kind object;
  #L3dda34.  call temp:= `contains`(v1, v3) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3dda3a.  v1:= temp;
  #L3dda3c.  if v1 == 0 then goto L3dda1c;
  #L3dda40.  v3:= 1I;
  #L3dda42.  return v3;
  #L3dda44.  v3:= 0I;
  #L3dda46.  return v3;
}
procedure `java.util.Map` `c`() @signature `Lm5/f;.c:()Ljava/util/Map;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Set` `d`() @signature `Lm5/f;.d:()Ljava/util/Set;` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.util.Collection` `e`() @signature `Lm5/f;.e:()Ljava/util/Collection;` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`m5.f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lm5/f;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L3dda58.  call temp:= `a`(v0, v1) @signature `Lm5/c0;.a:(Lm5/z;Ljava/lang/Object;)Z` @kind static;
  #L3dda5e.  v1:= temp;
  #L3dda60.  return v1;
}
procedure `java.util.Set` `f`(`m5.f` v1 @kind this) @signature `Lm5/f;.f:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ddb0c.  v0:= v1.`m5.f.o` @type ^`java.util.Set` @kind object;
  #L3ddb10.  if v0 != 0 then goto L3ddb20;
  #L3ddb14.  call temp:= `d`(v1) @signature `Lm5/f;.d:()Ljava/util/Set;` @kind virtual;
  #L3ddb1a.  v0:= temp @kind object;
  #L3ddb1c.  v1.`m5.f.o` @type ^`java.util.Set` := v0 @kind object;
  #L3ddb20.  return v0 @kind object;
}
procedure `java.util.Iterator` `g`() @signature `Lm5/f;.g:()Ljava/util/Iterator;` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`m5.f` v1 @kind this) @signature `Lm5/f;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dda74.  call temp:= `a`(v1) @signature `Lm5/f;.a:()Ljava/util/Map;` @kind virtual;
  #L3dda7a.  v0:= temp @kind object;
  #L3dda7c.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L3dda82.  v0:= temp;
  #L3dda84.  return v0;
}
procedure `java.lang.String` `toString`(`m5.f` v1 @kind this) @signature `Lm5/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dda98.  call temp:= `a`(v1) @signature `Lm5/f;.a:()Ljava/util/Map;` @kind virtual;
  #L3dda9e.  v0:= temp @kind object;
  #L3ddaa0.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ddaa6.  v0:= temp @kind object;
  #L3ddaa8.  return v0 @kind object;
}
procedure `java.util.Collection` `values`(`m5.f` v1 @kind this) @signature `Lm5/f;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ddabc.  v0:= v1.`m5.f.p` @type ^`java.util.Collection` @kind object;
  #L3ddac0.  if v0 != 0 then goto L3ddad0;
  #L3ddac4.  call temp:= `e`(v1) @signature `Lm5/f;.e:()Ljava/util/Collection;` @kind virtual;
  #L3ddaca.  v0:= temp @kind object;
  #L3ddacc.  v1.`m5.f.p` @type ^`java.util.Collection` := v0 @kind object;
  #L3ddad0.  return v0 @kind object;
}
