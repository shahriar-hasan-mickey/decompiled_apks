record `m5.k0$b` @kind class @AccessFlag FINAL extends `m5.s` @kind class {
  `m5.r` `m5.k0$b.q` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `m5.q` `m5.k0$b.r` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`m5.k0$b` v0 @kind this, `m5.r` v1 @kind object, `m5.q` v2 @kind object) @signature `Lm5/k0$b;.<init>:(Lm5/r;Lm5/q;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e1a1c.  call `<init>`(v0) @signature `Lm5/s;.<init>:()V` @kind direct;
  #L3e1a22.  v0.`m5.k0$b.q` @type ^`m5.r` := v1 @kind object;
  #L3e1a26.  v0.`m5.k0$b.r` @type ^`m5.q` := v2 @kind object;
  #L3e1a2a.  return @kind void;
}
procedure `m5.q` `b`(`m5.k0$b` v1 @kind this) @signature `Lm5/k0$b;.b:()Lm5/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e19e0.  v0:= v1.`m5.k0$b.r` @type ^`m5.q` @kind object;
  #L3e19e4.  return v0 @kind object;
}
procedure `boolean` `contains`(`m5.k0$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm5/k0$b;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1944.  v0:= v1.`m5.k0$b.q` @type ^`m5.r` @kind object;
  #L3e1948.  call temp:= `get`(v0, v2) @signature `Lm5/r;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e194e.  v2:= temp @kind object;
  #L3e1950.  if v2 == 0 then goto L3e1958;
  #L3e1954.  v2:= 1I;
  #L3e1956.  goto L3e195a;
  #L3e1958.  v2:= 0I;
  #L3e195a.  return v2;
}
procedure `int` `f`(`m5.k0$b` v1 @kind this, `java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Lm5/k0$b;.f:([Ljava/lang/Object;I)I` @AccessFlag  {
    temp;
    v0;

  #L3e1980.  call temp:= `b`(v1) @signature `Lm5/k0$b;.b:()Lm5/q;` @kind virtual;
  #L3e1986.  v0:= temp @kind object;
  #L3e1988.  call temp:= `f`(v0, v2, v3) @signature `Lm5/q;.f:([Ljava/lang/Object;I)I` @kind virtual;
  #L3e198e.  v2:= temp;
  #L3e1990.  return v2;
}
procedure `java.util.Iterator` `iterator`(`m5.k0$b` v1 @kind this) @signature `Lm5/k0$b;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3e19c4.  call temp:= `u`(v1) @signature `Lm5/k0$b;.u:()Lm5/s0;` @kind virtual;
  #L3e19ca.  v0:= temp @kind object;
  #L3e19cc.  return v0 @kind object;
}
procedure `boolean` `p`(`m5.k0$b` v1 @kind this) @signature `Lm5/k0$b;.p:()Z` @AccessFlag  {
    temp;
    v0;

  #L3e196c.  v0:= 1I;
  #L3e196e.  return v0;
}
procedure `int` `size`(`m5.k0$b` v1 @kind this) @signature `Lm5/k0$b;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e19a4.  v0:= v1.`m5.k0$b.q` @type ^`m5.r` @kind object;
  #L3e19a8.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3e19ae.  v0:= temp;
  #L3e19b0.  return v0;
}
procedure `m5.s0` `u`(`m5.k0$b` v1 @kind this) @signature `Lm5/k0$b;.u:()Lm5/s0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e19f8.  call temp:= `b`(v1) @signature `Lm5/k0$b;.b:()Lm5/q;` @kind virtual;
  #L3e19fe.  v0:= temp @kind object;
  #L3e1a00.  call temp:= `u`(v0) @signature `Lm5/q;.u:()Lm5/s0;` @kind virtual;
  #L3e1a06.  v0:= temp @kind object;
  #L3e1a08.  return v0 @kind object;
}
