record `m5.k0$c` @kind class @AccessFlag FINAL extends `m5.q` @kind class {
  `java.lang.Object`[] `m5.k0$c.q` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `m5.k0$c.r` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `m5.k0$c.s` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`m5.k0$c` v0 @kind this, `java.lang.Object`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lm5/k0$c;.<init>:([Ljava/lang/Object;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e1a9c.  call `<init>`(v0) @signature `Lm5/q;.<init>:()V` @kind direct;
  #L3e1aa2.  v0.`m5.k0$c.q` @type ^`java.lang.Object`[] := v1 @kind object;
  #L3e1aa6.  v0.`m5.k0$c.r` @type ^`int` := v2;
  #L3e1aaa.  v0.`m5.k0$c.s` @type ^`int` := v3;
  #L3e1aae.  return @kind void;
}
procedure `java.lang.Object` `get`(`m5.k0$c` v2 @kind this, `int` v3 ) @signature `Lm5/k0$c;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e1a68.  v0:= v2.`m5.k0$c.s` @type ^`int`;
  #L3e1a6c.  call temp:= `g`(v3, v0) @signature `Ll5/j;.g:(II)I` @kind static;
  #L3e1a72.  v0:= v2.`m5.k0$c.q` @type ^`java.lang.Object`[] @kind object;
  #L3e1a76.  v3:= v3 * 2;
  #L3e1a7a.  v1:= v2.`m5.k0$c.r` @type ^`int`;
  #L3e1a7e.  v3:= v3 + v1 @kind int;
  #L3e1a80.  v3:= v0[v3] @kind object;
  #L3e1a84.  call temp:= `requireNonNull`(v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e1a8a.  return v3 @kind object;
}
procedure `boolean` `p`(`m5.k0$c` v1 @kind this) @signature `Lm5/k0$c;.p:()Z` @AccessFlag  {
    temp;
    v0;

  #L3e1a3c.  v0:= 1I;
  #L3e1a3e.  return v0;
}
procedure `int` `size`(`m5.k0$c` v1 @kind this) @signature `Lm5/k0$c;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1a50.  v0:= v1.`m5.k0$c.s` @type ^`int`;
  #L3e1a54.  return v0;
}
