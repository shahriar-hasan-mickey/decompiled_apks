record `m5.k$b` @kind class @AccessFlag FINAL extends `m5.k` @kind class {
  `int` `m5.k$b.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`m5.k$b` v1 @kind this, `int` v2 ) @signature `Lm5/k$b;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3de3ac.  v0:= 0I;
  #L3de3ae.  call `<init>`(v1, v0) @signature `Lm5/k;.<init>:(Lm5/k$a;)V` @kind direct;
  #L3de3b4.  v1.`m5.k$b.d` @type ^`int` := v2;
  #L3de3b8.  return @kind void;
}
procedure `m5.k` `d`(`m5.k$b` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lm5/k$b;.d:(II)Lm5/k;` @AccessFlag PUBLIC {
    temp;

  #L3de35c.  return v0 @kind object;
}
procedure `m5.k` `e`(`m5.k$b` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lm5/k$b;.e:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lm5/k;` @AccessFlag PUBLIC {
    temp;

  #L3de370.  return v0 @kind object;
}
procedure `m5.k` `f`(`m5.k$b` v0 @kind this, `boolean` v1 , `boolean` v2 ) @signature `Lm5/k$b;.f:(ZZ)Lm5/k;` @AccessFlag PUBLIC {
    temp;

  #L3de384.  return v0 @kind object;
}
procedure `m5.k` `g`(`m5.k$b` v0 @kind this, `boolean` v1 , `boolean` v2 ) @signature `Lm5/k$b;.g:(ZZ)Lm5/k;` @AccessFlag PUBLIC {
    temp;

  #L3de398.  return v0 @kind object;
}
procedure `int` `h`(`m5.k$b` v1 @kind this) @signature `Lm5/k$b;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de344.  v0:= v1.`m5.k$b.d` @type ^`int`;
  #L3de348.  return v0;
}
