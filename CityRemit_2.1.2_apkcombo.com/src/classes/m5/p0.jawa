record `m5.p0` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `a`(`java.util.Set` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lm5/p0;.a:(Ljava/util/Set;Ljava/lang/Object;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e2834.  v0:= 1I;
  #L3e2836.  if v4 != v5 then goto L3e283c;
  #L3e283a.  return v0;
  #L3e283c.  v1:= instanceof @variable v5 @type ^`java.util.Set` @kind boolean;
  #L3e2840.  v2:= 0I;
  #L3e2842.  if v1 == 0 then goto L3e2870;
  #L3e2846.  v5:= (`java.util.Set`) v5 @kind object;
  #L3e284a.  call temp:= `size`(v4) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L3e2850.  v1:= temp;
  #L3e2852.  call temp:= `size`(v5) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L3e2858.  v3:= temp;
  #L3e285a.  if v1 != v3 then goto L3e286c;
  #L3e285e.  call temp:= `containsAll`(v4, v5) @signature `Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3e2864.  v4:= temp;
  #L3e2866.  if v4 == 0 then goto L3e286c;
  #L3e286a.  goto L3e286e;
  #L3e286c.  v0:= 0I;
  #L3e286e.  return v0;
  #L3e2870.  return v2;
  catch `java.lang.NullPointerException` @[L3e284a..L3e2866] goto L3e2870;
  catch `java.lang.ClassCastException` @[L3e284a..L3e2866] goto L3e2870;
}
procedure `java.util.Set` `b`(`java.util.Set` v1 @kind object, `l5.k` v2 @kind object) @signature `Lm5/p0;.b:(Ljava/util/Set;Ll5/k;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e29c0.  v0:= instanceof @variable v1 @type ^`java.util.SortedSet` @kind boolean;
  #L3e29c4.  if v0 == 0 then goto L3e29d6;
  #L3e29c8.  v1:= (`java.util.SortedSet`) v1 @kind object;
  #L3e29cc.  call temp:= `c`(v1, v2) @signature `Lm5/p0;.c:(Ljava/util/SortedSet;Ll5/k;)Ljava/util/SortedSet;` @kind static;
  #L3e29d2.  v1:= temp @kind object;
  #L3e29d4.  return v1 @kind object;
  #L3e29d6.  v0:= instanceof @variable v1 @type ^`m5.p0$b` @kind boolean;
  #L3e29da.  if v0 == 0 then goto L3e2a02;
  #L3e29de.  v1:= (`m5.p0$b`) v1 @kind object;
  #L3e29e2.  v0:= v1.`m5.i$a.p` @type ^`l5.k` @kind object;
  #L3e29e6.  call temp:= `b`(v0, v2) @signature `Ll5/l;.b:(Ll5/k;Ll5/k;)Ll5/k;` @kind static;
  #L3e29ec.  v2:= temp @kind object;
  #L3e29ee.  v0:= new `m5.p0$b`;
  #L3e29f2.  v1:= v1.`m5.i$a.o` @type ^`java.util.Collection` @kind object;
  #L3e29f6.  v1:= (`java.util.Set`) v1 @kind object;
  #L3e29fa.  call `<init>`(v0, v1, v2) @signature `Lm5/p0$b;.<init>:(Ljava/util/Set;Ll5/k;)V` @kind direct;
  #L3e2a00.  return v0 @kind object;
  #L3e2a02.  v0:= new `m5.p0$b`;
  #L3e2a06.  call temp:= `i`(v1) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e2a0c.  v1:= temp @kind object;
  #L3e2a0e.  v1:= (`java.util.Set`) v1 @kind object;
  #L3e2a12.  call temp:= `i`(v2) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e2a18.  v2:= temp @kind object;
  #L3e2a1a.  v2:= (`l5.k`) v2 @kind object;
  #L3e2a1e.  call `<init>`(v0, v1, v2) @signature `Lm5/p0$b;.<init>:(Ljava/util/Set;Ll5/k;)V` @kind direct;
  #L3e2a24.  return v0 @kind object;
}
procedure `java.util.SortedSet` `c`(`java.util.SortedSet` v1 @kind object, `l5.k` v2 @kind object) @signature `Lm5/p0;.c:(Ljava/util/SortedSet;Ll5/k;)Ljava/util/SortedSet;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e2a5c.  v0:= instanceof @variable v1 @type ^`m5.p0$b` @kind boolean;
  #L3e2a60.  if v0 == 0 then goto L3e2a88;
  #L3e2a64.  v1:= (`m5.p0$b`) v1 @kind object;
  #L3e2a68.  v0:= v1.`m5.i$a.p` @type ^`l5.k` @kind object;
  #L3e2a6c.  call temp:= `b`(v0, v2) @signature `Ll5/l;.b:(Ll5/k;Ll5/k;)Ll5/k;` @kind static;
  #L3e2a72.  v2:= temp @kind object;
  #L3e2a74.  v0:= new `m5.p0$c`;
  #L3e2a78.  v1:= v1.`m5.i$a.o` @type ^`java.util.Collection` @kind object;
  #L3e2a7c.  v1:= (`java.util.SortedSet`) v1 @kind object;
  #L3e2a80.  call `<init>`(v0, v1, v2) @signature `Lm5/p0$c;.<init>:(Ljava/util/SortedSet;Ll5/k;)V` @kind direct;
  #L3e2a86.  return v0 @kind object;
  #L3e2a88.  v0:= new `m5.p0$c`;
  #L3e2a8c.  call temp:= `i`(v1) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e2a92.  v1:= temp @kind object;
  #L3e2a94.  v1:= (`java.util.SortedSet`) v1 @kind object;
  #L3e2a98.  call temp:= `i`(v2) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e2a9e.  v2:= temp @kind object;
  #L3e2aa0.  v2:= (`l5.k`) v2 @kind object;
  #L3e2aa4.  call `<init>`(v0, v1, v2) @signature `Lm5/p0$c;.<init>:(Ljava/util/SortedSet;Ll5/k;)V` @kind direct;
  #L3e2aaa.  return v0 @kind object;
}
procedure `int` `d`(`java.util.Set` v3 @kind object) @signature `Lm5/p0;.d:(Ljava/util/Set;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e2934.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e293a.  v3:= temp @kind object;
  #L3e293c.  v0:= 0I;
  #L3e293e.  v1:= 0I;
  #L3e2940.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e2946.  v2:= temp;
  #L3e2948.  if v2 == 0 then goto L3e296c;
  #L3e294c.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e2952.  v2:= temp @kind object;
  #L3e2954.  if v2 == 0 then goto L3e2962;
  #L3e2958.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3e295e.  v2:= temp;
  #L3e2960.  goto L3e2964;
  #L3e2962.  v2:= 0I;
  #L3e2964.  v1:= v1 + v2 @kind int;
  #L3e2966.  v1:= ~v1 @kind int;
  #L3e2968.  v1:= ~v1 @kind int;
  #L3e296a.  goto L3e2940;
  #L3e296c.  return v1;
}
procedure `m5.p0$e` `e`(`java.util.Set` v1 @kind object, `java.util.Set` v2 @kind object) @signature `Lm5/p0;.e:(Ljava/util/Set;Ljava/util/Set;)Lm5/p0$e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e2abc.  v0:= "set1" @kind object;
  #L3e2ac0.  call temp:= `j`(v1, v0) @signature `Ll5/j;.j:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e2ac6.  v0:= "set2" @kind object;
  #L3e2aca.  call temp:= `j`(v2, v0) @signature `Ll5/j;.j:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e2ad0.  v0:= new `m5.p0$a`;
  #L3e2ad4.  call `<init>`(v0, v1, v2) @signature `Lm5/p0$a;.<init>:(Ljava/util/Set;Ljava/util/Set;)V` @kind direct;
  #L3e2ada.  return v0 @kind object;
}
procedure `java.util.HashSet` `f`() @signature `Lm5/p0;.f:()Ljava/util/HashSet;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e2980.  v0:= new `java.util.HashSet`;
  #L3e2984.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3e298a.  return v0 @kind object;
}
procedure `java.util.HashSet` `g`(`int` v1 ) @signature `Lm5/p0;.g:(I)Ljava/util/HashSet;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e299c.  v0:= new `java.util.HashSet`;
  #L3e29a0.  call temp:= `a`(v1) @signature `Lm5/y;.a:(I)I` @kind static;
  #L3e29a6.  v1:= temp;
  #L3e29a8.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(I)V` @kind direct;
  #L3e29ae.  return v0 @kind object;
}
procedure `java.util.Set` `h`() @signature `Lm5/p0;.h:()Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e2a38.  call temp:= `e`() @signature `Lm5/y;.e:()Ljava/util/IdentityHashMap;` @kind static;
  #L3e2a3e.  v0:= temp @kind object;
  #L3e2a40.  call temp:= `newSetFromMap`(v0) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L3e2a46.  v0:= temp @kind object;
  #L3e2a48.  return v0 @kind object;
}
procedure `boolean` `i`(`java.util.Set` v2 @kind object, `java.util.Collection` v3 @kind object) @signature `Lm5/p0;.i:(Ljava/util/Set;Ljava/util/Collection;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3e2894.  call temp:= `i`(v3) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e289a.  v0:= instanceof @variable v3 @type ^`m5.d0` @kind boolean;
  #L3e289e.  if v0 == 0 then goto L3e28ae;
  #L3e28a2.  v3:= (`m5.d0`) v3 @kind object;
  #L3e28a6.  call temp:= `r`(v3) @signature `Lm5/d0;.r:()Ljava/util/Set;` @kind interface;
  #L3e28ac.  v3:= temp @kind object;
  #L3e28ae.  v0:= instanceof @variable v3 @type ^`java.util.Set` @kind boolean;
  #L3e28b2.  if v0 == 0 then goto L3e28dc;
  #L3e28b6.  call temp:= `size`(v3) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L3e28bc.  v0:= temp;
  #L3e28be.  call temp:= `size`(v2) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L3e28c4.  v1:= temp;
  #L3e28c6.  if v0 <= v1 then goto L3e28dc;
  #L3e28ca.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e28d0.  v2:= temp @kind object;
  #L3e28d2.  call temp:= `n`(v2, v3) @signature `Lm5/u;.n:(Ljava/util/Iterator;Ljava/util/Collection;)Z` @kind static;
  #L3e28d8.  v2:= temp;
  #L3e28da.  return v2;
  #L3e28dc.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e28e2.  v3:= temp @kind object;
  #L3e28e4.  call temp:= `j`(v2, v3) @signature `Lm5/p0;.j:(Ljava/util/Set;Ljava/util/Iterator;)Z` @kind static;
  #L3e28ea.  v2:= temp;
  #L3e28ec.  return v2;
}
procedure `boolean` `j`(`java.util.Set` v2 @kind object, `java.util.Iterator` v3 @kind object) @signature `Lm5/p0;.j:(Ljava/util/Set;Ljava/util/Iterator;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3e2900.  v0:= 0I;
  #L3e2902.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e2908.  v1:= temp;
  #L3e290a.  if v1 == 0 then goto L3e2922;
  #L3e290e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e2914.  v1:= temp @kind object;
  #L3e2916.  call temp:= `remove`(v2, v1) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3e291c.  v1:= temp;
  #L3e291e.  v0:= v0 ^| v1 @kind int;
  #L3e2920.  goto L3e2902;
  #L3e2922.  return v0;
}
