record `m5.q$c` @kind class @AccessFlag  extends `m5.q` @kind class {
  `int` `m5.q$c.q` @AccessFlag FINAL_TRANSIENT;
  `int` `m5.q$c.r` @AccessFlag FINAL_TRANSIENT;
  `m5.q` `m5.q$c.s` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m5.q$c` v0 @kind this, `m5.q` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lm5/q$c;.<init>:(Lm5/q;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dedfc.  v0.`m5.q$c.s` @type ^`m5.q` := v1 @kind object;
  #L3dee00.  call `<init>`(v0) @signature `Lm5/q;.<init>:()V` @kind direct;
  #L3dee06.  v0.`m5.q$c.q` @type ^`int` := v2;
  #L3dee0a.  v0.`m5.q$c.r` @type ^`int` := v3;
  #L3dee0e.  return @kind void;
}
procedure `m5.q` `e0`(`m5.q$c` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lm5/q$c;.e0:(II)Lm5/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dedcc.  v0:= v2.`m5.q$c.r` @type ^`int`;
  #L3dedd0.  call `m`(v3, v4, v0) @signature `Ll5/j;.m:(III)V` @kind static;
  #L3dedd6.  v0:= v2.`m5.q$c.s` @type ^`m5.q` @kind object;
  #L3dedda.  v1:= v2.`m5.q$c.q` @type ^`int`;
  #L3dedde.  v3:= v3 + v1 @kind int;
  #L3dede0.  v4:= v4 + v1 @kind int;
  #L3dede2.  call temp:= `e0`(v0, v3, v4) @signature `Lm5/q;.e0:(II)Lm5/q;` @kind virtual;
  #L3dede8.  v3:= temp @kind object;
  #L3dedea.  return v3 @kind object;
}
procedure `java.lang.Object` `get`(`m5.q$c` v2 @kind this, `int` v3 ) @signature `Lm5/q$c;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ded0c.  v0:= v2.`m5.q$c.r` @type ^`int`;
  #L3ded10.  call temp:= `g`(v3, v0) @signature `Ll5/j;.g:(II)I` @kind static;
  #L3ded16.  v0:= v2.`m5.q$c.s` @type ^`m5.q` @kind object;
  #L3ded1a.  v1:= v2.`m5.q$c.q` @type ^`int`;
  #L3ded1e.  v3:= v3 + v1 @kind int;
  #L3ded20.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ded26.  v3:= temp @kind object;
  #L3ded28.  return v3 @kind object;
}
procedure `java.lang.Object`[] `h`(`m5.q$c` v1 @kind this) @signature `Lm5/q$c;.h:()[Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L3ded3c.  v0:= v1.`m5.q$c.s` @type ^`m5.q` @kind object;
  #L3ded40.  call temp:= `h`(v0) @signature `Lm5/o;.h:()[Ljava/lang/Object;` @kind virtual;
  #L3ded46.  v0:= temp @kind object;
  #L3ded48.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`m5.q$c` v1 @kind this) @signature `Lm5/q$c;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3ded5c.  call temp:= `u`(v1) @signature `Lm5/q;.u:()Lm5/s0;` @kind super;
  #L3ded62.  v0:= temp @kind object;
  #L3ded64.  return v0 @kind object;
}
procedure `int` `l`(`m5.q$c` v2 @kind this) @signature `Lm5/q$c;.l:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3deca4.  v0:= v2.`m5.q$c.s` @type ^`m5.q` @kind object;
  #L3deca8.  call temp:= `n`(v0) @signature `Lm5/o;.n:()I` @kind virtual;
  #L3decae.  v0:= temp;
  #L3decb0.  v1:= v2.`m5.q$c.q` @type ^`int`;
  #L3decb4.  v0:= v0 + v1 @kind int;
  #L3decb6.  v1:= v2.`m5.q$c.r` @type ^`int`;
  #L3decba.  v0:= v0 + v1 @kind int;
  #L3decbc.  return v0;
}
procedure `java.util.ListIterator` `listIterator`(`m5.q$c` v1 @kind this) @signature `Lm5/q$c;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3ded94.  call temp:= `T`(v1) @signature `Lm5/q;.T:()Lm5/t0;` @kind super;
  #L3ded9a.  v0:= temp @kind object;
  #L3ded9c.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`m5.q$c` v0 @kind this, `int` v1 ) @signature `Lm5/q$c;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3dedb0.  call temp:= `Y`(v0, v1) @signature `Lm5/q;.Y:(I)Lm5/t0;` @kind super;
  #L3dedb6.  v1:= temp @kind object;
  #L3dedb8.  return v1 @kind object;
}
procedure `int` `n`(`m5.q$c` v2 @kind this) @signature `Lm5/q$c;.n:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3decd0.  v0:= v2.`m5.q$c.s` @type ^`m5.q` @kind object;
  #L3decd4.  call temp:= `n`(v0) @signature `Lm5/o;.n:()I` @kind virtual;
  #L3decda.  v0:= temp;
  #L3decdc.  v1:= v2.`m5.q$c.q` @type ^`int`;
  #L3dece0.  v0:= v0 + v1 @kind int;
  #L3dece2.  return v0;
}
procedure `boolean` `p`(`m5.q$c` v1 @kind this) @signature `Lm5/q$c;.p:()Z` @AccessFlag  {
    temp;
    v0;

  #L3dec90.  v0:= 1I;
  #L3dec92.  return v0;
}
procedure `int` `size`(`m5.q$c` v1 @kind this) @signature `Lm5/q$c;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3decf4.  v0:= v1.`m5.q$c.r` @type ^`int`;
  #L3decf8.  return v0;
}
procedure `java.util.List` `subList`(`m5.q$c` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lm5/q$c;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3ded78.  call temp:= `e0`(v0, v1, v2) @signature `Lm5/q$c;.e0:(II)Lm5/q;` @kind virtual;
  #L3ded7e.  v1:= temp @kind object;
  #L3ded80.  return v1 @kind object;
}
