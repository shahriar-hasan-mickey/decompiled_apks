record `m5.k0$a$a` @kind class @AccessFlag  extends `m5.q` @kind class {
  `m5.k0$a` `m5.k0$a$a.q` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m5.k0$a$a` v0 @kind this, `m5.k0$a` v1 @kind object) @signature `Lm5/k0$a$a;.<init>:(Lm5/k0$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e17bc.  v0.`m5.k0$a$a.q` @type ^`m5.k0$a` := v1 @kind object;
  #L3e17c0.  call `<init>`(v0) @signature `Lm5/q;.<init>:()V` @kind direct;
  #L3e17c6.  return @kind void;
}
procedure `java.util.Map$Entry` `g0`(`m5.k0$a$a` v3 @kind this, `int` v4 ) @signature `Lm5/k0$a$a;.g0:(I)Ljava/util/Map$Entry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e173c.  v0:= v3.`m5.k0$a$a.q` @type ^`m5.k0$a` @kind object;
  #L3e1740.  call temp:= `d0`(v0) @signature `Lm5/k0$a;.d0:(Lm5/k0$a;)I` @kind static;
  #L3e1746.  v0:= temp;
  #L3e1748.  call temp:= `g`(v4, v0) @signature `Ll5/j;.g:(II)I` @kind static;
  #L3e174e.  v0:= v3.`m5.k0$a$a.q` @type ^`m5.k0$a` @kind object;
  #L3e1752.  call temp:= `e0`(v0) @signature `Lm5/k0$a;.e0:(Lm5/k0$a;)[Ljava/lang/Object;` @kind static;
  #L3e1758.  v0:= temp @kind object;
  #L3e175a.  v4:= v4 * 2;
  #L3e175e.  v1:= v3.`m5.k0$a$a.q` @type ^`m5.k0$a` @kind object;
  #L3e1762.  call temp:= `f0`(v1) @signature `Lm5/k0$a;.f0:(Lm5/k0$a;)I` @kind static;
  #L3e1768.  v1:= temp;
  #L3e176a.  v1:= v1 + v4 @kind int;
  #L3e176c.  v0:= v0[v1] @kind object;
  #L3e1770.  call temp:= `requireNonNull`(v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e1776.  v1:= v3.`m5.k0$a$a.q` @type ^`m5.k0$a` @kind object;
  #L3e177a.  call temp:= `e0`(v1) @signature `Lm5/k0$a;.e0:(Lm5/k0$a;)[Ljava/lang/Object;` @kind static;
  #L3e1780.  v1:= temp @kind object;
  #L3e1782.  v2:= v3.`m5.k0$a$a.q` @type ^`m5.k0$a` @kind object;
  #L3e1786.  call temp:= `f0`(v2) @signature `Lm5/k0$a;.f0:(Lm5/k0$a;)I` @kind static;
  #L3e178c.  v2:= temp;
  #L3e178e.  v2:= v2 ^~ 1;
  #L3e1792.  v4:= v4 + v2 @kind int;
  #L3e1794.  v4:= v1[v4] @kind object;
  #L3e1798.  call temp:= `requireNonNull`(v4) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e179e.  v1:= new `java.util.AbstractMap$SimpleImmutableEntry`;
  #L3e17a2.  call `<init>`(v1, v0, v4) @signature `Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L3e17a8.  return v1 @kind object;
}
procedure `java.lang.Object` `get`(`m5.k0$a$a` v0 @kind this, `int` v1 ) @signature `Lm5/k0$a$a;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3e1720.  call temp:= `g0`(v0, v1) @signature `Lm5/k0$a$a;.g0:(I)Ljava/util/Map$Entry;` @kind virtual;
  #L3e1726.  v1:= temp @kind object;
  #L3e1728.  return v1 @kind object;
}
procedure `boolean` `p`(`m5.k0$a$a` v1 @kind this) @signature `Lm5/k0$a$a;.p:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e16ec.  v0:= 1I;
  #L3e16ee.  return v0;
}
procedure `int` `size`(`m5.k0$a$a` v1 @kind this) @signature `Lm5/k0$a$a;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1700.  v0:= v1.`m5.k0$a$a.q` @type ^`m5.k0$a` @kind object;
  #L3e1704.  call temp:= `d0`(v0) @signature `Lm5/k0$a;.d0:(Lm5/k0$a;)I` @kind static;
  #L3e170a.  v0:= temp;
  #L3e170c.  return v0;
}
