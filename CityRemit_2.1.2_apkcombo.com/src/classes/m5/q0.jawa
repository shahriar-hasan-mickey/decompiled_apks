record `m5.q0` @kind class @AccessFlag FINAL extends `m5.s` @kind class {
  `java.lang.Object` `m5.q0.q` @AccessFlag FINAL_TRANSIENT;
}
procedure `void` `<init>`(`m5.q0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lm5/q0;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e2c30.  call `<init>`(v0) @signature `Lm5/s;.<init>:()V` @kind direct;
  #L3e2c36.  call temp:= `i`(v1) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e2c3c.  v1:= temp @kind object;
  #L3e2c3e.  v0.`m5.q0.q` @type ^`java.lang.Object` := v1 @kind object;
  #L3e2c42.  return @kind void;
}
procedure `m5.q` `b`(`m5.q0` v1 @kind this) @signature `Lm5/q0;.b:()Lm5/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2bf0.  v0:= v1.`m5.q0.q` @type ^`java.lang.Object` @kind object;
  #L3e2bf4.  call temp:= `b0`(v0) @signature `Lm5/q;.b0:(Ljava/lang/Object;)Lm5/q;` @kind static;
  #L3e2bfa.  v0:= temp @kind object;
  #L3e2bfc.  return v0 @kind object;
}
procedure `boolean` `contains`(`m5.q0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm5/q0;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2aec.  v0:= v1.`m5.q0.q` @type ^`java.lang.Object` @kind object;
  #L3e2af0.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e2af6.  v2:= temp;
  #L3e2af8.  return v2;
}
procedure `int` `f`(`m5.q0` v1 @kind this, `java.lang.Object`[] v2 @kind object, `int` v3 ) @signature `Lm5/q0;.f:([Ljava/lang/Object;I)I` @AccessFlag  {
    temp;
    v0;

  #L3e2b20.  v0:= v1.`m5.q0.q` @type ^`java.lang.Object` @kind object;
  #L3e2b24.  v2[v3]:= v0 @kind object;
  #L3e2b28.  v3:= v3 + 1;
  #L3e2b2c.  return v3;
}
procedure `int` `hashCode`(`m5.q0` v1 @kind this) @signature `Lm5/q0;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e2b40.  v0:= v1.`m5.q0.q` @type ^`java.lang.Object` @kind object;
  #L3e2b44.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3e2b4a.  v0:= temp;
  #L3e2b4c.  return v0;
}
procedure `java.util.Iterator` `iterator`(`m5.q0` v1 @kind this) @signature `Lm5/q0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3e2bd4.  call temp:= `u`(v1) @signature `Lm5/q0;.u:()Lm5/s0;` @kind virtual;
  #L3e2bda.  v0:= temp @kind object;
  #L3e2bdc.  return v0 @kind object;
}
procedure `boolean` `p`(`m5.q0` v1 @kind this) @signature `Lm5/q0;.p:()Z` @AccessFlag  {
    temp;
    v0;

  #L3e2b0c.  v0:= 0I;
  #L3e2b0e.  return v0;
}
procedure `int` `size`(`m5.q0` v1 @kind this) @signature `Lm5/q0;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2b60.  v0:= 1I;
  #L3e2b62.  return v0;
}
procedure `java.lang.String` `toString`(`m5.q0` v3 @kind this) @signature `Lm5/q0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e2b74.  v0:= v3.`m5.q0.q` @type ^`java.lang.Object` @kind object;
  #L3e2b78.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e2b7e.  v0:= temp @kind object;
  #L3e2b80.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3e2b86.  v1:= temp @kind object;
  #L3e2b88.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e2b8e.  v1:= temp;
  #L3e2b90.  v1:= v1 + 2;
  #L3e2b94.  v2:= new `java.lang.StringBuilder`;
  #L3e2b98.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3e2b9e.  v1:= 91I;
  #L3e2ba2.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2ba8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2bae.  v0:= 93I;
  #L3e2bb2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2bb8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e2bbe.  v0:= temp @kind object;
  #L3e2bc0.  return v0 @kind object;
}
procedure `m5.s0` `u`(`m5.q0` v1 @kind this) @signature `Lm5/q0;.u:()Lm5/s0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2c10.  v0:= v1.`m5.q0.q` @type ^`java.lang.Object` @kind object;
  #L3e2c14.  call temp:= `p`(v0) @signature `Lm5/u;.p:(Ljava/lang/Object;)Lm5/s0;` @kind static;
  #L3e2c1a.  v0:= temp @kind object;
  #L3e2c1c.  return v0 @kind object;
}
