record `m5.d$b` @kind class @AccessFlag  extends `m5.y$f` @kind class {
  `java.util.Map` `m5.d$b.q` @AccessFlag FINAL_TRANSIENT;
  `m5.d` `m5.d$b.r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m5.d$b` v0 @kind this, `m5.d` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lm5/d$b;.<init>:(Lm5/d;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dbca8.  v0.`m5.d$b.r` @type ^`m5.d` := v1 @kind object;
  #L3dbcac.  call `<init>`(v0) @signature `Lm5/y$f;.<init>:()V` @kind direct;
  #L3dbcb2.  v0.`m5.d$b.q` @type ^`java.util.Map` := v2 @kind object;
  #L3dbcb6.  return @kind void;
}
procedure `java.util.Set` `a`(`m5.d$b` v1 @kind this) @signature `Lm5/d$b;.a:()Ljava/util/Set;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3dbc6c.  v0:= new `m5.d$b$a`;
  #L3dbc70.  call `<init>`(v0, v1) @signature `Lm5/d$b$a;.<init>:(Lm5/d$b;)V` @kind direct;
  #L3dbc76.  return v0 @kind object;
}
procedure `java.util.Collection` `c`(`m5.d$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lm5/d$b;.c:(Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dbba4.  v0:= v2.`m5.d$b.q` @type ^`java.util.Map` @kind object;
  #L3dbba8.  call temp:= `g`(v0, v3) @signature `Lm5/y;.g:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3dbbae.  v0:= temp @kind object;
  #L3dbbb0.  v0:= (`java.util.Collection`) v0 @kind object;
  #L3dbbb4.  if v0 != 0 then goto L3dbbbc;
  #L3dbbb8.  v3:= 0I;
  #L3dbbba.  return v3 @kind object;
  #L3dbbbc.  v1:= v2.`m5.d$b.r` @type ^`m5.d` @kind object;
  #L3dbbc0.  call temp:= `v`(v1, v3, v0) @signature `Lm5/d;.v:(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind virtual;
  #L3dbbc6.  v3:= temp @kind object;
  #L3dbbc8.  return v3 @kind object;
}
procedure `void` `clear`(`m5.d$b` v2 @kind this) @signature `Lm5/d$b;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dbcc8.  v0:= v2.`m5.d$b.q` @type ^`java.util.Map` @kind object;
  #L3dbccc.  v1:= v2.`m5.d$b.r` @type ^`m5.d` @kind object;
  #L3dbcd0.  call temp:= `h`(v1) @signature `Lm5/d;.h:(Lm5/d;)Ljava/util/Map;` @kind static;
  #L3dbcd6.  v1:= temp @kind object;
  #L3dbcd8.  if v0 != v1 then goto L3dbce8;
  #L3dbcdc.  v0:= v2.`m5.d$b.r` @type ^`m5.d` @kind object;
  #L3dbce0.  call `clear`(v0) @signature `Lm5/d;.clear:()V` @kind virtual;
  #L3dbce6.  goto L3dbcf8;
  #L3dbce8.  v0:= new `m5.d$b$b`;
  #L3dbcec.  call `<init>`(v0, v2) @signature `Lm5/d$b$b;.<init>:(Lm5/d$b;)V` @kind direct;
  #L3dbcf2.  call `c`(v0) @signature `Lm5/u;.c:(Ljava/util/Iterator;)V` @kind static;
  #L3dbcf8.  return @kind void;
}
procedure `boolean` `containsKey`(`m5.d$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm5/d$b;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbabc.  v0:= v1.`m5.d$b.q` @type ^`java.util.Map` @kind object;
  #L3dbac0.  call temp:= `f`(v0, v2) @signature `Lm5/y;.f:(Ljava/util/Map;Ljava/lang/Object;)Z` @kind static;
  #L3dbac6.  v2:= temp;
  #L3dbac8.  return v2;
}
procedure `java.util.Collection` `d`(`m5.d$b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lm5/d$b;.d:(Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3dbbdc.  v0:= v3.`m5.d$b.q` @type ^`java.util.Map` @kind object;
  #L3dbbe0.  call temp:= `remove`(v0, v4) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3dbbe6.  v4:= temp @kind object;
  #L3dbbe8.  v4:= (`java.util.Collection`) v4 @kind object;
  #L3dbbec.  if v4 != 0 then goto L3dbbf4;
  #L3dbbf0.  v4:= 0I;
  #L3dbbf2.  return v4 @kind object;
  #L3dbbf4.  v0:= v3.`m5.d$b.r` @type ^`m5.d` @kind object;
  #L3dbbf8.  call temp:= `o`(v0) @signature `Lm5/d;.o:()Ljava/util/Collection;` @kind virtual;
  #L3dbbfe.  v0:= temp @kind object;
  #L3dbc00.  call temp:= `addAll`(v0, v4) @signature `Ljava/util/Collection;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3dbc06.  v1:= v3.`m5.d$b.r` @type ^`m5.d` @kind object;
  #L3dbc0a.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L3dbc10.  v2:= temp;
  #L3dbc12.  call temp:= `m`(v1, v2) @signature `Lm5/d;.m:(Lm5/d;I)I` @kind static;
  #L3dbc18.  call `clear`(v4) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L3dbc1e.  return v0 @kind object;
}
procedure `java.util.Map$Entry` `e`(`m5.d$b` v2 @kind this, `java.util.Map$Entry` v3 @kind object) @signature `Lm5/d$b;.e:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3dbc30.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3dbc36.  v0:= temp @kind object;
  #L3dbc38.  v1:= v2.`m5.d$b.r` @type ^`m5.d` @kind object;
  #L3dbc3c.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3dbc42.  v3:= temp @kind object;
  #L3dbc44.  v3:= (`java.util.Collection`) v3 @kind object;
  #L3dbc48.  call temp:= `v`(v1, v0, v3) @signature `Lm5/d;.v:(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind virtual;
  #L3dbc4e.  v3:= temp @kind object;
  #L3dbc50.  call temp:= `d`(v0, v3) @signature `Lm5/y;.d:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;` @kind static;
  #L3dbc56.  v3:= temp @kind object;
  #L3dbc58.  return v3 @kind object;
}
procedure `boolean` `equals`(`m5.d$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm5/d$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbadc.  if v1 == v2 then goto L3dbaf6;
  #L3dbae0.  v0:= v1.`m5.d$b.q` @type ^`java.util.Map` @kind object;
  #L3dbae4.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3dbaea.  v2:= temp;
  #L3dbaec.  if v2 == 0 then goto L3dbaf2;
  #L3dbaf0.  goto L3dbaf6;
  #L3dbaf2.  v2:= 0I;
  #L3dbaf4.  goto L3dbaf8;
  #L3dbaf6.  v2:= 1I;
  #L3dbaf8.  return v2;
}
procedure `java.lang.Object` `get`(`m5.d$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lm5/d$b;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3dbb4c.  call temp:= `c`(v0, v1) @signature `Lm5/d$b;.c:(Ljava/lang/Object;)Ljava/util/Collection;` @kind virtual;
  #L3dbb52.  v1:= temp @kind object;
  #L3dbb54.  return v1 @kind object;
}
procedure `int` `hashCode`(`m5.d$b` v1 @kind this) @signature `Lm5/d$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbb0c.  v0:= v1.`m5.d$b.q` @type ^`java.util.Map` @kind object;
  #L3dbb10.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L3dbb16.  v0:= temp;
  #L3dbb18.  return v0;
}
procedure `java.util.Set` `keySet`(`m5.d$b` v1 @kind this) @signature `Lm5/d$b;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbc88.  v0:= v1.`m5.d$b.r` @type ^`m5.d` @kind object;
  #L3dbc8c.  call temp:= `f`(v0) @signature `Lm5/f;.f:()Ljava/util/Set;` @kind virtual;
  #L3dbc92.  v0:= temp @kind object;
  #L3dbc94.  return v0 @kind object;
}
procedure `java.lang.Object` `remove`(`m5.d$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lm5/d$b;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3dbb68.  call temp:= `d`(v0, v1) @signature `Lm5/d$b;.d:(Ljava/lang/Object;)Ljava/util/Collection;` @kind virtual;
  #L3dbb6e.  v1:= temp @kind object;
  #L3dbb70.  return v1 @kind object;
}
procedure `int` `size`(`m5.d$b` v1 @kind this) @signature `Lm5/d$b;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbb2c.  v0:= v1.`m5.d$b.q` @type ^`java.util.Map` @kind object;
  #L3dbb30.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3dbb36.  v0:= temp;
  #L3dbb38.  return v0;
}
procedure `java.lang.String` `toString`(`m5.d$b` v1 @kind this) @signature `Lm5/d$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbb84.  v0:= v1.`m5.d$b.q` @type ^`java.util.Map` @kind object;
  #L3dbb88.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dbb8e.  v0:= temp @kind object;
  #L3dbb90.  return v0 @kind object;
}
