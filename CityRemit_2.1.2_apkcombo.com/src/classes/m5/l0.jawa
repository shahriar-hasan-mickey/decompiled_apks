record `m5.l0` @kind class @AccessFlag FINAL extends `m5.s` @kind class {
  `java.lang.Object`[] `m5.l0.q` @AccessFlag FINAL_TRANSIENT;
  `int` `m5.l0.r` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.Object`[] `m5.l0.s` @AccessFlag FINAL_TRANSIENT;
  `int` `m5.l0.t` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `m5.l0.u` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
global `java.lang.Object`[] `@@m5.l0.v` @AccessFlag PRIVATE_STATIC_FINAL;
global `m5.l0` `@@m5.l0.w` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lm5/l0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e21a8.  v0:= 0I;
  #L3e21aa.  v4:= new `java.lang.Object`[v0];
  #L3e21ae.  `@@m5.l0.v` @type ^`java.lang.Object`[] := v4 @kind object;
  #L3e21b2.  v0:= new `m5.l0`;
  #L3e21b6.  v3:= 0I;
  #L3e21b8.  v5:= 0I;
  #L3e21ba.  v6:= 0I;
  #L3e21bc.  v1:= v0 @kind object;
  #L3e21be.  v2:= v4 @kind object;
  #L3e21c0.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lm5/l0;.<init>:([Ljava/lang/Object;I[Ljava/lang/Object;II)V` @kind direct;
  #L3e21c6.  `@@m5.l0.w` @type ^`m5.l0` := v0 @kind object;
  #L3e21ca.  return @kind void;
}
procedure `void` `<init>`(`m5.l0` v0 @kind this, `java.lang.Object`[] v1 @kind object, `int` v2 , `java.lang.Object`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lm5/l0;.<init>:([Ljava/lang/Object;I[Ljava/lang/Object;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e21dc.  call `<init>`(v0) @signature `Lm5/s;.<init>:()V` @kind direct;
  #L3e21e2.  v0.`m5.l0.q` @type ^`java.lang.Object`[] := v1 @kind object;
  #L3e21e6.  v0.`m5.l0.r` @type ^`int` := v2;
  #L3e21ea.  v0.`m5.l0.s` @type ^`java.lang.Object`[] := v3 @kind object;
  #L3e21ee.  v0.`m5.l0.t` @type ^`int` := v4;
  #L3e21f2.  v0.`m5.l0.u` @type ^`int` := v5;
  #L3e21f6.  return @kind void;
}
procedure `m5.q` `Q`(`m5.l0` v2 @kind this) @signature `Lm5/l0;.Q:()Lm5/q;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3e2160.  v0:= v2.`m5.l0.q` @type ^`java.lang.Object`[] @kind object;
  #L3e2164.  v1:= v2.`m5.l0.u` @type ^`int`;
  #L3e2168.  call temp:= `G`(v0, v1) @signature `Lm5/q;.G:([Ljava/lang/Object;I)Lm5/q;` @kind static;
  #L3e216e.  v0:= temp @kind object;
  #L3e2170.  return v0 @kind object;
}
procedure `boolean` `S`(`m5.l0` v1 @kind this) @signature `Lm5/l0;.S:()Z` @AccessFlag  {
    temp;
    v0;

  #L3e2080.  v0:= 1I;
  #L3e2082.  return v0;
}
procedure `boolean` `contains`(`m5.l0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lm5/l0;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e202c.  v0:= v4.`m5.l0.s` @type ^`java.lang.Object`[] @kind object;
  #L3e2030.  v1:= 0I;
  #L3e2032.  if v5 == 0 then goto L3e206c;
  #L3e2036.  v2:= length @variable v0;
  #L3e2038.  if v2 != 0 then goto L3e203e;
  #L3e203c.  goto L3e206c;
  #L3e203e.  call temp:= `b`(v5) @signature `Lm5/n;.b:(Ljava/lang/Object;)I` @kind static;
  #L3e2044.  v2:= temp;
  #L3e2046.  v3:= v4.`m5.l0.t` @type ^`int`;
  #L3e204a.  v2:= v2 ^& v3 @kind int;
  #L3e204c.  v3:= v0[v2] @kind object;
  #L3e2050.  if v3 != 0 then goto L3e2056;
  #L3e2054.  return v1;
  #L3e2056.  call temp:= `equals`(v3, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e205c.  v3:= temp;
  #L3e205e.  if v3 == 0 then goto L3e2066;
  #L3e2062.  v5:= 1I;
  #L3e2064.  return v5;
  #L3e2066.  v2:= v2 + 1;
  #L3e206a.  goto L3e2046;
  #L3e206c.  return v1;
}
procedure `int` `f`(`m5.l0` v3 @kind this, `java.lang.Object`[] v4 @kind object, `int` v5 ) @signature `Lm5/l0;.f:([Ljava/lang/Object;I)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3e20a8.  v0:= v3.`m5.l0.q` @type ^`java.lang.Object`[] @kind object;
  #L3e20ac.  v1:= v3.`m5.l0.u` @type ^`int`;
  #L3e20b0.  v2:= 0I;
  #L3e20b2.  call `arraycopy`(v0, v2, v4, v5, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3e20b8.  v4:= v3.`m5.l0.u` @type ^`int`;
  #L3e20bc.  v5:= v5 + v4 @kind int;
  #L3e20be.  return v5;
}
procedure `java.lang.Object`[] `h`(`m5.l0` v1 @kind this) @signature `Lm5/l0;.h:()[Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L3e212c.  v0:= v1.`m5.l0.q` @type ^`java.lang.Object`[] @kind object;
  #L3e2130.  return v0 @kind object;
}
procedure `int` `hashCode`(`m5.l0` v1 @kind this) @signature `Lm5/l0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e20d0.  v0:= v1.`m5.l0.r` @type ^`int`;
  #L3e20d4.  return v0;
}
procedure `java.util.Iterator` `iterator`(`m5.l0` v1 @kind this) @signature `Lm5/l0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3e2144.  call temp:= `u`(v1) @signature `Lm5/l0;.u:()Lm5/s0;` @kind virtual;
  #L3e214a.  v0:= temp @kind object;
  #L3e214c.  return v0 @kind object;
}
procedure `int` `l`(`m5.l0` v1 @kind this) @signature `Lm5/l0;.l:()I` @AccessFlag  {
    temp;
    v0;

  #L3e20e8.  v0:= v1.`m5.l0.u` @type ^`int`;
  #L3e20ec.  return v0;
}
procedure `int` `n`(`m5.l0` v1 @kind this) @signature `Lm5/l0;.n:()I` @AccessFlag  {
    temp;
    v0;

  #L3e2100.  v0:= 0I;
  #L3e2102.  return v0;
}
procedure `boolean` `p`(`m5.l0` v1 @kind this) @signature `Lm5/l0;.p:()Z` @AccessFlag  {
    temp;
    v0;

  #L3e2094.  v0:= 0I;
  #L3e2096.  return v0;
}
procedure `int` `size`(`m5.l0` v1 @kind this) @signature `Lm5/l0;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2114.  v0:= v1.`m5.l0.u` @type ^`int`;
  #L3e2118.  return v0;
}
procedure `m5.s0` `u`(`m5.l0` v1 @kind this) @signature `Lm5/l0;.u:()Lm5/s0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2184.  call temp:= `b`(v1) @signature `Lm5/s;.b:()Lm5/q;` @kind virtual;
  #L3e218a.  v0:= temp @kind object;
  #L3e218c.  call temp:= `u`(v0) @signature `Lm5/q;.u:()Lm5/s0;` @kind virtual;
  #L3e2192.  v0:= temp @kind object;
  #L3e2194.  return v0 @kind object;
}
