record `m5.p0$a` @kind class @AccessFlag  extends `m5.p0$e` @kind class {
  `java.util.Set` `m5.p0$a.o` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Set` `m5.p0$a.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m5.p0$a` v0 @kind this, `java.util.Set` v1 @kind object, `java.util.Set` v2 @kind object) @signature `Lm5/p0$a;.<init>:(Ljava/util/Set;Ljava/util/Set;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e2558.  v0.`m5.p0$a.o` @type ^`java.util.Set` := v1 @kind object;
  #L3e255c.  v0.`m5.p0$a.p` @type ^`java.util.Set` := v2 @kind object;
  #L3e2560.  v1:= 0I;
  #L3e2562.  call `<init>`(v0, v1) @signature `Lm5/p0$e;.<init>:(Lm5/o0;)V` @kind direct;
  #L3e2568.  return @kind void;
}
procedure `m5.s0` `b`(`m5.p0$a` v1 @kind this) @signature `Lm5/p0$a;.b:()Lm5/s0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e253c.  v0:= new `m5.p0$a$a`;
  #L3e2540.  call `<init>`(v0, v1) @signature `Lm5/p0$a$a;.<init>:(Lm5/p0$a;)V` @kind direct;
  #L3e2546.  return v0 @kind object;
}
procedure `boolean` `contains`(`m5.p0$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm5/p0$a;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2440.  v0:= v1.`m5.p0$a.o` @type ^`java.util.Set` @kind object;
  #L3e2444.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e244a.  v0:= temp;
  #L3e244c.  if v0 == 0 then goto L3e2464;
  #L3e2450.  v0:= v1.`m5.p0$a.p` @type ^`java.util.Set` @kind object;
  #L3e2454.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e245a.  v2:= temp;
  #L3e245c.  if v2 == 0 then goto L3e2464;
  #L3e2460.  v2:= 1I;
  #L3e2462.  goto L3e2466;
  #L3e2464.  v2:= 0I;
  #L3e2466.  return v2;
}
procedure `boolean` `containsAll`(`m5.p0$a` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lm5/p0$a;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2478.  v0:= v1.`m5.p0$a.o` @type ^`java.util.Set` @kind object;
  #L3e247c.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3e2482.  v0:= temp;
  #L3e2484.  if v0 == 0 then goto L3e249c;
  #L3e2488.  v0:= v1.`m5.p0$a.p` @type ^`java.util.Set` @kind object;
  #L3e248c.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3e2492.  v2:= temp;
  #L3e2494.  if v2 == 0 then goto L3e249c;
  #L3e2498.  v2:= 1I;
  #L3e249a.  goto L3e249e;
  #L3e249c.  v2:= 0I;
  #L3e249e.  return v2;
}
procedure `boolean` `isEmpty`(`m5.p0$a` v2 @kind this) @signature `Lm5/p0$a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e24b0.  v0:= v2.`m5.p0$a.p` @type ^`java.util.Set` @kind object;
  #L3e24b4.  v1:= v2.`m5.p0$a.o` @type ^`java.util.Set` @kind object;
  #L3e24b8.  call temp:= `disjoint`(v0, v1) @signature `Ljava/util/Collections;.disjoint:(Ljava/util/Collection;Ljava/util/Collection;)Z` @kind static;
  #L3e24be.  v0:= temp;
  #L3e24c0.  return v0;
}
procedure `java.util.Iterator` `iterator`(`m5.p0$a` v1 @kind this) @signature `Lm5/p0$a;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3e2520.  call temp:= `b`(v1) @signature `Lm5/p0$a;.b:()Lm5/s0;` @kind virtual;
  #L3e2526.  v0:= temp @kind object;
  #L3e2528.  return v0 @kind object;
}
procedure `int` `size`(`m5.p0$a` v4 @kind this) @signature `Lm5/p0$a;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e24d4.  v0:= v4.`m5.p0$a.o` @type ^`java.util.Set` @kind object;
  #L3e24d8.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e24de.  v0:= temp @kind object;
  #L3e24e0.  v1:= 0I;
  #L3e24e2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e24e8.  v2:= temp;
  #L3e24ea.  if v2 == 0 then goto L3e250c;
  #L3e24ee.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e24f4.  v2:= temp @kind object;
  #L3e24f6.  v3:= v4.`m5.p0$a.p` @type ^`java.util.Set` @kind object;
  #L3e24fa.  call temp:= `contains`(v3, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e2500.  v2:= temp;
  #L3e2502.  if v2 == 0 then goto L3e24e2;
  #L3e2506.  v1:= v1 + 1;
  #L3e250a.  goto L3e24e2;
  #L3e250c.  return v1;
}
