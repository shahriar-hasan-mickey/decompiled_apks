record `m5.w` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.util.List` `a`(`java.lang.Iterable` v0 @kind object) @signature `Lm5/w;.a:(Ljava/lang/Iterable;)Ljava/util/List;` @AccessFlag STATIC {
    temp;

  #L3e06b4.  v0:= (`java.util.List`) v0 @kind object;
  #L3e06b8.  return v0 @kind object;
}
procedure `int` `b`(`int` v4 ) @signature `Lm5/w;.b:(I)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e0494.  v0:= "arraySize" @kind object;
  #L3e0498.  call temp:= `b`(v4, v0) @signature `Lm5/h;.b:(ILjava/lang/String;)I` @kind static;
  #L3e049e.  v0:= (`long`) v4 @kind i2l;
  #L3e04a0.  v2:= 5L;
  #L3e04a4.  v0:= v0 + v2 @kind long;
  #L3e04a6.  v4:= v4 / 10;
  #L3e04aa.  v2:= (`long`) v4 @kind i2l;
  #L3e04ac.  v0:= v0 + v2 @kind long;
  #L3e04ae.  call temp:= `j`(v0) @signature `Lo5/d;.j:(J)I` @kind static;
  #L3e04b4.  v4:= temp;
  #L3e04b6.  return v4;
}
procedure `boolean` `c`(`java.util.List` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lm5/w;.c:(Ljava/util/List;Ljava/lang/Object;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e03f8.  call temp:= `i`(v6) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e03fe.  v0:= temp @kind object;
  #L3e0400.  v1:= 1I;
  #L3e0402.  if v7 != v0 then goto L3e0408;
  #L3e0406.  return v1;
  #L3e0408.  v0:= instanceof @variable v7 @type ^`java.util.List` @kind boolean;
  #L3e040c.  v2:= 0I;
  #L3e040e.  if v0 != 0 then goto L3e0414;
  #L3e0412.  return v2;
  #L3e0414.  v7:= (`java.util.List`) v7 @kind object;
  #L3e0418.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e041e.  v0:= temp;
  #L3e0420.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e0426.  v3:= temp;
  #L3e0428.  if v0 == v3 then goto L3e042e;
  #L3e042c.  return v2;
  #L3e042e.  v3:= instanceof @variable v6 @type ^`java.util.RandomAccess` @kind boolean;
  #L3e0432.  if v3 == 0 then goto L3e046a;
  #L3e0436.  v3:= instanceof @variable v7 @type ^`java.util.RandomAccess` @kind boolean;
  #L3e043a.  if v3 == 0 then goto L3e046a;
  #L3e043e.  v3:= 0I;
  #L3e0440.  if v3 >= v0 then goto L3e0468;
  #L3e0444.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e044a.  v4:= temp @kind object;
  #L3e044c.  call temp:= `get`(v7, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e0452.  v5:= temp @kind object;
  #L3e0454.  call temp:= `a`(v4, v5) @signature `Ll5/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e045a.  v4:= temp;
  #L3e045c.  if v4 != 0 then goto L3e0462;
  #L3e0460.  return v2;
  #L3e0462.  v3:= v3 + 1;
  #L3e0466.  goto L3e0440;
  #L3e0468.  return v1;
  #L3e046a.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e0470.  v6:= temp @kind object;
  #L3e0472.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e0478.  v7:= temp @kind object;
  #L3e047a.  call temp:= `e`(v6, v7) @signature `Lm5/u;.e:(Ljava/util/Iterator;Ljava/util/Iterator;)Z` @kind static;
  #L3e0480.  v6:= temp;
  #L3e0482.  return v6;
}
procedure `int` `d`(`java.util.List` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lm5/w;.d:(Ljava/util/List;Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;

  #L3e04c8.  v0:= instanceof @variable v1 @type ^`java.util.RandomAccess` @kind boolean;
  #L3e04cc.  if v0 == 0 then goto L3e04da;
  #L3e04d0.  call temp:= `e`(v1, v2) @signature `Lm5/w;.e:(Ljava/util/List;Ljava/lang/Object;)I` @kind static;
  #L3e04d6.  v1:= temp;
  #L3e04d8.  return v1;
  #L3e04da.  call temp:= `listIterator`(v1) @signature `Ljava/util/List;.listIterator:()Ljava/util/ListIterator;` @kind interface;
  #L3e04e0.  v1:= temp @kind object;
  #L3e04e2.  call temp:= `hasNext`(v1) @signature `Ljava/util/ListIterator;.hasNext:()Z` @kind interface;
  #L3e04e8.  v0:= temp;
  #L3e04ea.  if v0 == 0 then goto L3e050c;
  #L3e04ee.  call temp:= `next`(v1) @signature `Ljava/util/ListIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e04f4.  v0:= temp @kind object;
  #L3e04f6.  call temp:= `a`(v2, v0) @signature `Ll5/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e04fc.  v0:= temp;
  #L3e04fe.  if v0 == 0 then goto L3e04e2;
  #L3e0502.  call temp:= `previousIndex`(v1) @signature `Ljava/util/ListIterator;.previousIndex:()I` @kind interface;
  #L3e0508.  v1:= temp;
  #L3e050a.  return v1;
  #L3e050c.  v1:= -1I;
  #L3e050e.  return v1;
}
procedure `int` `e`(`java.util.List` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lm5/w;.e:(Ljava/util/List;Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e0520.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e0526.  v0:= temp;
  #L3e0528.  v1:= 0I;
  #L3e052a.  if v4 != 0 then goto L3e0546;
  #L3e052e.  if v1 >= v0 then goto L3e0566;
  #L3e0532.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e0538.  v4:= temp @kind object;
  #L3e053a.  if v4 != 0 then goto L3e0540;
  #L3e053e.  return v1;
  #L3e0540.  v1:= v1 + 1;
  #L3e0544.  goto L3e052e;
  #L3e0546.  if v1 >= v0 then goto L3e0566;
  #L3e054a.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e0550.  v2:= temp @kind object;
  #L3e0552.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e0558.  v2:= temp;
  #L3e055a.  if v2 == 0 then goto L3e0560;
  #L3e055e.  return v1;
  #L3e0560.  v1:= v1 + 1;
  #L3e0564.  goto L3e0546;
  #L3e0566.  v3:= -1I;
  #L3e0568.  return v3;
}
procedure `int` `f`(`java.util.List` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lm5/w;.f:(Ljava/util/List;Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;

  #L3e057c.  v0:= instanceof @variable v1 @type ^`java.util.RandomAccess` @kind boolean;
  #L3e0580.  if v0 == 0 then goto L3e058e;
  #L3e0584.  call temp:= `g`(v1, v2) @signature `Lm5/w;.g:(Ljava/util/List;Ljava/lang/Object;)I` @kind static;
  #L3e058a.  v1:= temp;
  #L3e058c.  return v1;
  #L3e058e.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e0594.  v0:= temp;
  #L3e0596.  call temp:= `listIterator`(v1, v0) @signature `Ljava/util/List;.listIterator:(I)Ljava/util/ListIterator;` @kind interface;
  #L3e059c.  v1:= temp @kind object;
  #L3e059e.  call temp:= `hasPrevious`(v1) @signature `Ljava/util/ListIterator;.hasPrevious:()Z` @kind interface;
  #L3e05a4.  v0:= temp;
  #L3e05a6.  if v0 == 0 then goto L3e05c8;
  #L3e05aa.  call temp:= `previous`(v1) @signature `Ljava/util/ListIterator;.previous:()Ljava/lang/Object;` @kind interface;
  #L3e05b0.  v0:= temp @kind object;
  #L3e05b2.  call temp:= `a`(v2, v0) @signature `Ll5/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e05b8.  v0:= temp;
  #L3e05ba.  if v0 == 0 then goto L3e059e;
  #L3e05be.  call temp:= `nextIndex`(v1) @signature `Ljava/util/ListIterator;.nextIndex:()I` @kind interface;
  #L3e05c4.  v1:= temp;
  #L3e05c6.  return v1;
  #L3e05c8.  v1:= -1I;
  #L3e05ca.  return v1;
}
procedure `int` `g`(`java.util.List` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lm5/w;.g:(Ljava/util/List;Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3e05dc.  if v3 != 0 then goto L3e0604;
  #L3e05e0.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e05e6.  v3:= temp;
  #L3e05e8.  v3:= v3 + -1;
  #L3e05ec.  if v3 < 0 then goto L3e0630;
  #L3e05f0.  call temp:= `get`(v2, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e05f6.  v0:= temp @kind object;
  #L3e05f8.  if v0 != 0 then goto L3e05fe;
  #L3e05fc.  return v3;
  #L3e05fe.  v3:= v3 + -1;
  #L3e0602.  goto L3e05ec;
  #L3e0604.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e060a.  v0:= temp;
  #L3e060c.  v0:= v0 + -1;
  #L3e0610.  if v0 < 0 then goto L3e0630;
  #L3e0614.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e061a.  v1:= temp @kind object;
  #L3e061c.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e0622.  v1:= temp;
  #L3e0624.  if v1 == 0 then goto L3e062a;
  #L3e0628.  return v0;
  #L3e062a.  v0:= v0 + -1;
  #L3e062e.  goto L3e0610;
  #L3e0630.  v2:= -1I;
  #L3e0632.  return v2;
}
procedure `java.util.ArrayList` `h`() @signature `Lm5/w;.h:()Ljava/util/ArrayList;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e0644.  v0:= new `java.util.ArrayList`;
  #L3e0648.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e064e.  return v0 @kind object;
}
procedure `java.util.ArrayList` `i`(`java.util.Iterator` v1 @kind object) @signature `Lm5/w;.i:(Ljava/util/Iterator;)Ljava/util/ArrayList;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e0694.  call temp:= `h`() @signature `Lm5/w;.h:()Ljava/util/ArrayList;` @kind static;
  #L3e069a.  v0:= temp @kind object;
  #L3e069c.  call temp:= `a`(v0, v1) @signature `Lm5/u;.a:(Ljava/util/Collection;Ljava/util/Iterator;)Z` @kind static;
  #L3e06a2.  return v0 @kind object;
}
procedure `java.util.ArrayList` `j`(`java.lang.Object`[] v2 @kind object) @signature `Lm5/w;.j:([Ljava/lang/Object;)Ljava/util/ArrayList;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e0660.  call temp:= `i`(v2) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e0666.  v0:= length @variable v2;
  #L3e0668.  call temp:= `b`(v0) @signature `Lm5/w;.b:(I)I` @kind static;
  #L3e066e.  v0:= temp;
  #L3e0670.  v1:= new `java.util.ArrayList`;
  #L3e0674.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3e067a.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L3e0680.  return v1 @kind object;
}
