record `m5.d$d` @kind class @AccessFlag  extends `m5.y$d` @kind class {
  `m5.d` `m5.d$d.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m5.d$d` v0 @kind this, `m5.d` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lm5/d$d;.<init>:(Lm5/d;Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dc050.  v0.`m5.d$d.p` @type ^`m5.d` := v1 @kind object;
  #L3dc054.  call `<init>`(v0, v2) @signature `Lm5/y$d;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L3dc05a.  return @kind void;
}
procedure `void` `clear`(`m5.d$d` v1 @kind this) @signature `Lm5/d$d;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dc06c.  call temp:= `iterator`(v1) @signature `Lm5/d$d;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3dc072.  v0:= temp @kind object;
  #L3dc074.  call `c`(v0) @signature `Lm5/u;.c:(Ljava/util/Iterator;)V` @kind static;
  #L3dc07a.  return @kind void;
}
procedure `boolean` `containsAll`(`m5.d$d` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Lm5/d$d;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbf38.  call temp:= `b`(v1) @signature `Lm5/y$d;.b:()Ljava/util/Map;` @kind virtual;
  #L3dbf3e.  v0:= temp @kind object;
  #L3dbf40.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3dbf46.  v0:= temp @kind object;
  #L3dbf48.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3dbf4e.  v2:= temp;
  #L3dbf50.  return v2;
}
procedure `boolean` `equals`(`m5.d$d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm5/d$d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbf64.  if v1 == v2 then goto L3dbf8a;
  #L3dbf68.  call temp:= `b`(v1) @signature `Lm5/y$d;.b:()Ljava/util/Map;` @kind virtual;
  #L3dbf6e.  v0:= temp @kind object;
  #L3dbf70.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3dbf76.  v0:= temp @kind object;
  #L3dbf78.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3dbf7e.  v2:= temp;
  #L3dbf80.  if v2 == 0 then goto L3dbf86;
  #L3dbf84.  goto L3dbf8a;
  #L3dbf86.  v2:= 0I;
  #L3dbf88.  goto L3dbf8c;
  #L3dbf8a.  v2:= 1I;
  #L3dbf8c.  return v2;
}
procedure `int` `hashCode`(`m5.d$d` v1 @kind this) @signature `Lm5/d$d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbff0.  call temp:= `b`(v1) @signature `Lm5/y$d;.b:()Ljava/util/Map;` @kind virtual;
  #L3dbff6.  v0:= temp @kind object;
  #L3dbff8.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3dbffe.  v0:= temp @kind object;
  #L3dc000.  call temp:= `hashCode`(v0) @signature `Ljava/util/Set;.hashCode:()I` @kind interface;
  #L3dc006.  v0:= temp;
  #L3dc008.  return v0;
}
procedure `java.util.Iterator` `iterator`(`m5.d$d` v2 @kind this) @signature `Lm5/d$d;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dc01c.  call temp:= `b`(v2) @signature `Lm5/y$d;.b:()Ljava/util/Map;` @kind virtual;
  #L3dc022.  v0:= temp @kind object;
  #L3dc024.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3dc02a.  v0:= temp @kind object;
  #L3dc02c.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3dc032.  v0:= temp @kind object;
  #L3dc034.  v1:= new `m5.d$d$a`;
  #L3dc038.  call `<init>`(v1, v2, v0) @signature `Lm5/d$d$a;.<init>:(Lm5/d$d;Ljava/util/Iterator;)V` @kind direct;
  #L3dc03e.  return v1 @kind object;
}
procedure `boolean` `remove`(`m5.d$d` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lm5/d$d;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dbfa0.  call temp:= `b`(v2) @signature `Lm5/y$d;.b:()Ljava/util/Map;` @kind virtual;
  #L3dbfa6.  v0:= temp @kind object;
  #L3dbfa8.  call temp:= `remove`(v0, v3) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3dbfae.  v3:= temp @kind object;
  #L3dbfb0.  v3:= (`java.util.Collection`) v3 @kind object;
  #L3dbfb4.  v0:= 0I;
  #L3dbfb6.  if v3 == 0 then goto L3dbfd4;
  #L3dbfba.  call temp:= `size`(v3) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L3dbfc0.  v1:= temp;
  #L3dbfc2.  call `clear`(v3) @signature `Ljava/util/Collection;.clear:()V` @kind interface;
  #L3dbfc8.  v3:= v2.`m5.d$d.p` @type ^`m5.d` @kind object;
  #L3dbfcc.  call temp:= `m`(v3, v1) @signature `Lm5/d;.m:(Lm5/d;I)I` @kind static;
  #L3dbfd2.  goto L3dbfd6;
  #L3dbfd4.  v1:= 0I;
  #L3dbfd6.  if v1 <= 0 then goto L3dbfdc;
  #L3dbfda.  v0:= 1I;
  #L3dbfdc.  return v0;
}
