record `m5.q` @kind class @AccessFlag PUBLIC_ABSTRACT extends `m5.o` @kind class, `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface {
}
global `m5.t0` `@@m5.q.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lm5/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3df298.  v0:= new `m5.q$b`;
  #L3df29c.  v1:= `@@m5.j0.s` @type ^`m5.q` @kind object;
  #L3df2a0.  v2:= 0I;
  #L3df2a2.  call `<init>`(v0, v1, v2) @signature `Lm5/q$b;.<init>:(Lm5/q;I)V` @kind direct;
  #L3df2a8.  `@@m5.q.p` @type ^`m5.t0` := v0 @kind object;
  #L3df2ac.  return @kind void;
}
procedure `void` `<init>`(`m5.q` v0 @kind this) @signature `Lm5/q;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3df2c0.  call `<init>`(v0) @signature `Lm5/o;.<init>:()V` @kind direct;
  #L3df2c6.  return @kind void;
}
procedure `m5.q` `G`(`java.lang.Object`[] v1 @kind object, `int` v2 ) @signature `Lm5/q;.G:([Ljava/lang/Object;I)Lm5/q;` @AccessFlag STATIC {
    temp;
    v0;

  #L3df004.  if v2 != 0 then goto L3df012;
  #L3df008.  call temp:= `a0`() @signature `Lm5/q;.a0:()Lm5/q;` @kind static;
  #L3df00e.  v1:= temp @kind object;
  #L3df010.  return v1 @kind object;
  #L3df012.  v0:= new `m5.j0`;
  #L3df016.  call `<init>`(v0, v1, v2) @signature `Lm5/j0;.<init>:([Ljava/lang/Object;I)V` @kind direct;
  #L3df01c.  return v0 @kind object;
}
procedure `m5.q$a` `N`() @signature `Lm5/q;.N:()Lm5/q$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3df208.  v0:= new `m5.q$a`;
  #L3df20c.  call `<init>`(v0) @signature `Lm5/q$a;.<init>:()V` @kind direct;
  #L3df212.  return v0 @kind object;
}
procedure `m5.q` `O`(`java.lang.Object`[] v0 @kind object) @signature `Lm5/q;.O:([Ljava/lang/Object;)Lm5/q;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3df044.  call temp:= `b`(v0) @signature `Lm5/g0;.b:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L3df04a.  v0:= temp @kind object;
  #L3df04c.  call temp:= `y`(v0) @signature `Lm5/q;.y:([Ljava/lang/Object;)Lm5/q;` @kind static;
  #L3df052.  v0:= temp @kind object;
  #L3df054.  return v0 @kind object;
}
procedure `m5.q` `Q`(`java.util.Collection` v1 @kind object) @signature `Lm5/q;.Q:(Ljava/util/Collection;)Lm5/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3df0a0.  v0:= instanceof @variable v1 @type ^`m5.o` @kind boolean;
  #L3df0a4.  if v0 == 0 then goto L3df0d2;
  #L3df0a8.  v1:= (`m5.o`) v1 @kind object;
  #L3df0ac.  call temp:= `b`(v1) @signature `Lm5/o;.b:()Lm5/q;` @kind virtual;
  #L3df0b2.  v1:= temp @kind object;
  #L3df0b4.  call temp:= `p`(v1) @signature `Lm5/o;.p:()Z` @kind virtual;
  #L3df0ba.  v0:= temp;
  #L3df0bc.  if v0 == 0 then goto L3df0d0;
  #L3df0c0.  call temp:= `toArray`(v1) @signature `Lm5/o;.toArray:()[Ljava/lang/Object;` @kind virtual;
  #L3df0c6.  v1:= temp @kind object;
  #L3df0c8.  call temp:= `y`(v1) @signature `Lm5/q;.y:([Ljava/lang/Object;)Lm5/q;` @kind static;
  #L3df0ce.  v1:= temp @kind object;
  #L3df0d0.  return v1 @kind object;
  #L3df0d2.  call temp:= `toArray`(v1) @signature `Ljava/util/Collection;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3df0d8.  v1:= temp @kind object;
  #L3df0da.  call temp:= `O`(v1) @signature `Lm5/q;.O:([Ljava/lang/Object;)Lm5/q;` @kind static;
  #L3df0e0.  v1:= temp @kind object;
  #L3df0e2.  return v1 @kind object;
}
procedure `m5.q` `S`(`java.lang.Object`[] v1 @kind object) @signature `Lm5/q;.S:([Ljava/lang/Object;)Lm5/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3df068.  v0:= length @variable v1;
  #L3df06a.  if v0 != 0 then goto L3df078;
  #L3df06e.  call temp:= `a0`() @signature `Lm5/q;.a0:()Lm5/q;` @kind static;
  #L3df074.  v1:= temp @kind object;
  #L3df076.  goto L3df08c;
  #L3df078.  call temp:= `clone`(v1) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3df07e.  v1:= temp @kind object;
  #L3df080.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L3df084.  call temp:= `O`(v1) @signature `Lm5/q;.O:([Ljava/lang/Object;)Lm5/q;` @kind static;
  #L3df08a.  v1:= temp @kind object;
  #L3df08c.  return v1 @kind object;
}
procedure `m5.q` `a0`() @signature `Lm5/q;.a0:()Lm5/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3df0f4.  v0:= `@@m5.j0.s` @type ^`m5.q` @kind object;
  #L3df0f8.  return v0 @kind object;
}
procedure `m5.q` `b0`(`java.lang.Object` v2 @kind object) @signature `Lm5/q;.b0:(Ljava/lang/Object;)Lm5/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3df10c.  v0:= 1I;
  #L3df10e.  v0:= new `java.lang.Object`[v0];
  #L3df112.  v1:= 0I;
  #L3df114.  v0[v1]:= v2 @kind object;
  #L3df118.  call temp:= `O`(v0) @signature `Lm5/q;.O:([Ljava/lang/Object;)Lm5/q;` @kind static;
  #L3df11e.  v2:= temp @kind object;
  #L3df120.  return v2 @kind object;
}
procedure `m5.q` `c0`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lm5/q;.c0:(Ljava/lang/Object;Ljava/lang/Object;)Lm5/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3df134.  v0:= 2I;
  #L3df136.  v0:= new `java.lang.Object`[v0];
  #L3df13a.  v1:= 0I;
  #L3df13c.  v0[v1]:= v2 @kind object;
  #L3df140.  v2:= 1I;
  #L3df142.  v0[v2]:= v3 @kind object;
  #L3df146.  call temp:= `O`(v0) @signature `Lm5/q;.O:([Ljava/lang/Object;)Lm5/q;` @kind static;
  #L3df14c.  v2:= temp @kind object;
  #L3df14e.  return v2 @kind object;
}
procedure `m5.q` `d0`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lm5/q;.d0:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lm5/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3df160.  v0:= 5I;
  #L3df162.  v0:= new `java.lang.Object`[v0];
  #L3df166.  v1:= 0I;
  #L3df168.  v0[v1]:= v2 @kind object;
  #L3df16c.  v2:= 1I;
  #L3df16e.  v0[v2]:= v3 @kind object;
  #L3df172.  v2:= 2I;
  #L3df174.  v0[v2]:= v4 @kind object;
  #L3df178.  v2:= 3I;
  #L3df17a.  v0[v2]:= v5 @kind object;
  #L3df17e.  v2:= 4I;
  #L3df180.  v0[v2]:= v6 @kind object;
  #L3df184.  call temp:= `O`(v0) @signature `Lm5/q;.O:([Ljava/lang/Object;)Lm5/q;` @kind static;
  #L3df18a.  v2:= temp @kind object;
  #L3df18c.  return v2 @kind object;
}
procedure `m5.q` `y`(`java.lang.Object`[] v1 @kind object) @signature `Lm5/q;.y:([Ljava/lang/Object;)Lm5/q;` @AccessFlag STATIC {
    temp;
    v0;

  #L3defe8.  v0:= length @variable v1;
  #L3defea.  call temp:= `G`(v1, v0) @signature `Lm5/q;.G:([Ljava/lang/Object;I)Lm5/q;` @kind static;
  #L3deff0.  v1:= temp @kind object;
  #L3deff2.  return v1 @kind object;
}
procedure `m5.t0` `T`(`m5.q` v1 @kind this) @signature `Lm5/q;.T:()Lm5/t0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df240.  v0:= 0I;
  #L3df242.  call temp:= `Y`(v1, v0) @signature `Lm5/q;.Y:(I)Lm5/t0;` @kind virtual;
  #L3df248.  v0:= temp @kind object;
  #L3df24a.  return v0 @kind object;
}
procedure `m5.t0` `Y`(`m5.q` v1 @kind this, `int` v2 ) @signature `Lm5/q;.Y:(I)Lm5/t0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df25c.  call temp:= `size`(v1) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L3df262.  v0:= temp;
  #L3df264.  call temp:= `k`(v2, v0) @signature `Ll5/j;.k:(II)I` @kind static;
  #L3df26a.  call temp:= `isEmpty`(v1) @signature `Ljava/util/AbstractCollection;.isEmpty:()Z` @kind virtual;
  #L3df270.  v0:= temp;
  #L3df272.  if v0 == 0 then goto L3df27c;
  #L3df276.  v2:= `@@m5.q.p` @type ^`m5.t0` @kind object;
  #L3df27a.  return v2 @kind object;
  #L3df27c.  v0:= new `m5.q$b`;
  #L3df280.  call `<init>`(v0, v1, v2) @signature `Lm5/q$b;.<init>:(Lm5/q;I)V` @kind direct;
  #L3df286.  return v0 @kind object;
}
procedure `void` `add`(`m5.q` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lm5/q;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3df2d8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3df2dc.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3df2e2.  throw v1;
}
procedure `boolean` `addAll`(`m5.q` v0 @kind this, `int` v1 , `java.util.Collection` v2 @kind object) @signature `Lm5/q;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3dee20.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3dee24.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3dee2a.  throw v1;
}
procedure `m5.q` `b`(`m5.q` v0 @kind this) @signature `Lm5/q;.b:()Lm5/q;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3df030.  return v0 @kind object;
}
procedure `boolean` `contains`(`m5.q` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lm5/q;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L3dee3c.  call temp:= `indexOf`(v0, v1) @signature `Lm5/q;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L3dee42.  v1:= temp;
  #L3dee44.  if v1 < 0 then goto L3dee4c;
  #L3dee48.  v1:= 1I;
  #L3dee4a.  goto L3dee4e;
  #L3dee4c.  v1:= 0I;
  #L3dee4e.  return v1;
}
procedure `m5.q` `e0`(`m5.q` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lm5/q;.e0:(II)Lm5/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3df1a0.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L3df1a6.  v0:= temp;
  #L3df1a8.  call `m`(v3, v4, v0) @signature `Ll5/j;.m:(III)V` @kind static;
  #L3df1ae.  v0:= v4 - v3 @kind int;
  #L3df1b2.  call temp:= `size`(v2) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L3df1b8.  v1:= temp;
  #L3df1ba.  if v0 != v1 then goto L3df1c0;
  #L3df1be.  return v2 @kind object;
  #L3df1c0.  if v0 != 0 then goto L3df1ce;
  #L3df1c4.  call temp:= `a0`() @signature `Lm5/q;.a0:()Lm5/q;` @kind static;
  #L3df1ca.  v3:= temp @kind object;
  #L3df1cc.  return v3 @kind object;
  #L3df1ce.  call temp:= `f0`(v2, v3, v4) @signature `Lm5/q;.f0:(II)Lm5/q;` @kind virtual;
  #L3df1d4.  v3:= temp @kind object;
  #L3df1d6.  return v3 @kind object;
}
procedure `boolean` `equals`(`m5.q` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lm5/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L3dee60.  call temp:= `c`(v0, v1) @signature `Lm5/w;.c:(Ljava/util/List;Ljava/lang/Object;)Z` @kind static;
  #L3dee66.  v1:= temp;
  #L3dee68.  return v1;
}
procedure `int` `f`(`m5.q` v4 @kind this, `java.lang.Object`[] v5 @kind object, `int` v6 ) @signature `Lm5/q;.f:([Ljava/lang/Object;I)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3dee7c.  call temp:= `size`(v4) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L3dee82.  v0:= temp;
  #L3dee84.  v1:= 0I;
  #L3dee86.  if v1 >= v0 then goto L3deea0;
  #L3dee8a.  v2:= v6 + v1 @kind int;
  #L3dee8e.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dee94.  v3:= temp @kind object;
  #L3dee96.  v5[v2]:= v3 @kind object;
  #L3dee9a.  v1:= v1 + 1;
  #L3dee9e.  goto L3dee86;
  #L3deea0.  v6:= v6 + v0 @kind int;
  #L3deea2.  return v6;
}
procedure `m5.q` `f0`(`m5.q` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lm5/q;.f0:(II)Lm5/q;` @AccessFlag  {
    temp;
    v0;

  #L3df1e8.  v0:= new `m5.q$c`;
  #L3df1ec.  v3:= v3 - v2 @kind int;
  #L3df1ee.  call `<init>`(v0, v1, v2, v3) @signature `Lm5/q$c;.<init>:(Lm5/q;II)V` @kind direct;
  #L3df1f4.  return v0 @kind object;
}
procedure `int` `hashCode`(`m5.q` v4 @kind this) @signature `Lm5/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3deeb4.  call temp:= `size`(v4) @signature `Ljava/util/AbstractCollection;.size:()I` @kind virtual;
  #L3deeba.  v0:= temp;
  #L3deebc.  v1:= 1I;
  #L3deebe.  v2:= 0I;
  #L3deec0.  if v2 >= v0 then goto L3deee4;
  #L3deec4.  v1:= v1 * 31;
  #L3deec8.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3deece.  v3:= temp @kind object;
  #L3deed0.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3deed6.  v3:= temp;
  #L3deed8.  v1:= v1 + v3 @kind int;
  #L3deeda.  v1:= ~v1 @kind int;
  #L3deedc.  v1:= ~v1 @kind int;
  #L3deede.  v2:= v2 + 1;
  #L3deee2.  goto L3deec0;
  #L3deee4.  return v1;
}
procedure `int` `indexOf`(`m5.q` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lm5/q;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;

  #L3deef8.  if v1 != 0 then goto L3def00;
  #L3deefc.  v1:= -1I;
  #L3deefe.  goto L3def08;
  #L3def00.  call temp:= `d`(v0, v1) @signature `Lm5/w;.d:(Ljava/util/List;Ljava/lang/Object;)I` @kind static;
  #L3def06.  v1:= temp;
  #L3def08.  return v1;
}
procedure `java.util.Iterator` `iterator`(`m5.q` v1 @kind this) @signature `Lm5/q;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3def78.  call temp:= `u`(v1) @signature `Lm5/q;.u:()Lm5/s0;` @kind virtual;
  #L3def7e.  v0:= temp @kind object;
  #L3def80.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`m5.q` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lm5/q;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;

  #L3def1c.  if v1 != 0 then goto L3def24;
  #L3def20.  v1:= -1I;
  #L3def22.  goto L3def2c;
  #L3def24.  call temp:= `f`(v0, v1) @signature `Lm5/w;.f:(Ljava/util/List;Ljava/lang/Object;)I` @kind static;
  #L3def2a.  v1:= temp;
  #L3def2c.  return v1;
}
procedure `java.util.ListIterator` `listIterator`(`m5.q` v1 @kind this) @signature `Lm5/q;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3defb0.  call temp:= `T`(v1) @signature `Lm5/q;.T:()Lm5/t0;` @kind virtual;
  #L3defb6.  v0:= temp @kind object;
  #L3defb8.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`m5.q` v0 @kind this, `int` v1 ) @signature `Lm5/q;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3defcc.  call temp:= `Y`(v0, v1) @signature `Lm5/q;.Y:(I)Lm5/t0;` @kind virtual;
  #L3defd2.  v1:= temp @kind object;
  #L3defd4.  return v1 @kind object;
}
procedure `java.lang.Object` `remove`(`m5.q` v0 @kind this, `int` v1 ) @signature `Lm5/q;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3def40.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3def44.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3def4a.  throw v1;
}
procedure `java.lang.Object` `set`(`m5.q` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lm5/q;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3def5c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L3def60.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3def66.  throw v1;
}
procedure `java.util.List` `subList`(`m5.q` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lm5/q;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3def94.  call temp:= `e0`(v0, v1, v2) @signature `Lm5/q;.e0:(II)Lm5/q;` @kind virtual;
  #L3def9a.  v1:= temp @kind object;
  #L3def9c.  return v1 @kind object;
}
procedure `m5.s0` `u`(`m5.q` v1 @kind this) @signature `Lm5/q;.u:()Lm5/s0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df224.  call temp:= `T`(v1) @signature `Lm5/q;.T:()Lm5/t0;` @kind virtual;
  #L3df22a.  v0:= temp @kind object;
  #L3df22c.  return v0 @kind object;
}
