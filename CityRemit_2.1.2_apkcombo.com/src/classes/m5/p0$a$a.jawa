record `m5.p0$a$a` @kind class @AccessFlag  extends `m5.b` @kind class {
  `java.util.Iterator` `m5.p0$a$a.q` @AccessFlag FINAL;
  `m5.p0$a` `m5.p0$a$a.r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m5.p0$a$a` v0 @kind this, `m5.p0$a` v1 @kind object) @signature `Lm5/p0$a$a;.<init>:(Lm5/p0$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e2414.  v0.`m5.p0$a$a.r` @type ^`m5.p0$a` := v1 @kind object;
  #L3e2418.  call `<init>`(v0) @signature `Lm5/b;.<init>:()V` @kind direct;
  #L3e241e.  v1:= v1.`m5.p0$a.o` @type ^`java.util.Set` @kind object;
  #L3e2422.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e2428.  v1:= temp @kind object;
  #L3e242a.  v0.`m5.p0$a$a.q` @type ^`java.util.Iterator` := v1 @kind object;
  #L3e242e.  return @kind void;
}
procedure `java.lang.Object` `a`(`m5.p0$a$a` v2 @kind this) @signature `Lm5/p0$a$a;.a:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3e23c8.  v0:= v2.`m5.p0$a$a.q` @type ^`java.util.Iterator` @kind object;
  #L3e23cc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e23d2.  v0:= temp;
  #L3e23d4.  if v0 == 0 then goto L3e23fa;
  #L3e23d8.  v0:= v2.`m5.p0$a$a.q` @type ^`java.util.Iterator` @kind object;
  #L3e23dc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e23e2.  v0:= temp @kind object;
  #L3e23e4.  v1:= v2.`m5.p0$a$a.r` @type ^`m5.p0$a` @kind object;
  #L3e23e8.  v1:= v1.`m5.p0$a.p` @type ^`java.util.Set` @kind object;
  #L3e23ec.  call temp:= `contains`(v1, v0) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e23f2.  v1:= temp;
  #L3e23f4.  if v1 == 0 then goto L3e23c8;
  #L3e23f8.  return v0 @kind object;
  #L3e23fa.  call temp:= `d`(v2) @signature `Lm5/b;.d:()Ljava/lang/Object;` @kind virtual;
  #L3e2400.  v0:= temp @kind object;
  #L3e2402.  return v0 @kind object;
}
