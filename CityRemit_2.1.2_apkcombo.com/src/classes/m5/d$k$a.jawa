record `m5.d$k$a` @kind class @AccessFlag  extends `m5.d$j$a` @kind class, `java.util.ListIterator` @kind interface {
  `m5.d$k` `m5.d$k$a.r` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m5.d$k$a` v0 @kind this, `m5.d$k` v1 @kind object) @signature `Lm5/d$k$a;.<init>:(Lm5/d$k;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dd190.  v0.`m5.d$k$a.r` @type ^`m5.d$k` := v1 @kind object;
  #L3dd194.  call `<init>`(v0, v1) @signature `Lm5/d$j$a;.<init>:(Lm5/d$j;)V` @kind direct;
  #L3dd19a.  return @kind void;
}
procedure `void` `<init>`(`m5.d$k$a` v1 @kind this, `m5.d$k` v2 @kind object, `int` v3 ) @signature `Lm5/d$k$a;.<init>:(Lm5/d$k;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3dd1ac.  v1.`m5.d$k$a.r` @type ^`m5.d$k` := v2 @kind object;
  #L3dd1b0.  call temp:= `u`(v2) @signature `Lm5/d$k;.u:()Ljava/util/List;` @kind virtual;
  #L3dd1b6.  v0:= temp @kind object;
  #L3dd1b8.  call temp:= `listIterator`(v0, v3) @signature `Ljava/util/List;.listIterator:(I)Ljava/util/ListIterator;` @kind interface;
  #L3dd1be.  v3:= temp @kind object;
  #L3dd1c0.  call `<init>`(v1, v2, v3) @signature `Lm5/d$j$a;.<init>:(Lm5/d$j;Ljava/util/Iterator;)V` @kind direct;
  #L3dd1c6.  return @kind void;
}
procedure `java.util.ListIterator` `e`(`m5.d$k$a` v1 @kind this) @signature `Lm5/d$k$a;.e:()Ljava/util/ListIterator;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3dd170.  call temp:= `a`(v1) @signature `Lm5/d$j$a;.a:()Ljava/util/Iterator;` @kind virtual;
  #L3dd176.  v0:= temp @kind object;
  #L3dd178.  v0:= (`java.util.ListIterator`) v0 @kind object;
  #L3dd17c.  return v0 @kind object;
}
procedure `void` `add`(`m5.d$k$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lm5/d$k$a;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dd1d8.  v0:= v2.`m5.d$k$a.r` @type ^`m5.d$k` @kind object;
  #L3dd1dc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/AbstractCollection;.isEmpty:()Z` @kind virtual;
  #L3dd1e2.  v0:= temp;
  #L3dd1e4.  call temp:= `e`(v2) @signature `Lm5/d$k$a;.e:()Ljava/util/ListIterator;` @kind direct;
  #L3dd1ea.  v1:= temp @kind object;
  #L3dd1ec.  call `add`(v1, v3) @signature `Ljava/util/ListIterator;.add:(Ljava/lang/Object;)V` @kind interface;
  #L3dd1f2.  v3:= v2.`m5.d$k$a.r` @type ^`m5.d$k` @kind object;
  #L3dd1f6.  v3:= v3.`m5.d$k.t` @type ^`m5.d` @kind object;
  #L3dd1fa.  call temp:= `j`(v3) @signature `Lm5/d;.j:(Lm5/d;)I` @kind static;
  #L3dd200.  if v0 == 0 then goto L3dd20e;
  #L3dd204.  v3:= v2.`m5.d$k$a.r` @type ^`m5.d$k` @kind object;
  #L3dd208.  call `b`(v3) @signature `Lm5/d$j;.b:()V` @kind virtual;
  #L3dd20e.  return @kind void;
}
procedure `boolean` `hasPrevious`(`m5.d$k$a` v1 @kind this) @signature `Lm5/d$k$a;.hasPrevious:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd0e0.  call temp:= `e`(v1) @signature `Lm5/d$k$a;.e:()Ljava/util/ListIterator;` @kind direct;
  #L3dd0e6.  v0:= temp @kind object;
  #L3dd0e8.  call temp:= `hasPrevious`(v0) @signature `Ljava/util/ListIterator;.hasPrevious:()Z` @kind interface;
  #L3dd0ee.  v0:= temp;
  #L3dd0f0.  return v0;
}
procedure `int` `nextIndex`(`m5.d$k$a` v1 @kind this) @signature `Lm5/d$k$a;.nextIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd104.  call temp:= `e`(v1) @signature `Lm5/d$k$a;.e:()Ljava/util/ListIterator;` @kind direct;
  #L3dd10a.  v0:= temp @kind object;
  #L3dd10c.  call temp:= `nextIndex`(v0) @signature `Ljava/util/ListIterator;.nextIndex:()I` @kind interface;
  #L3dd112.  v0:= temp;
  #L3dd114.  return v0;
}
procedure `java.lang.Object` `previous`(`m5.d$k$a` v1 @kind this) @signature `Lm5/d$k$a;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd14c.  call temp:= `e`(v1) @signature `Lm5/d$k$a;.e:()Ljava/util/ListIterator;` @kind direct;
  #L3dd152.  v0:= temp @kind object;
  #L3dd154.  call temp:= `previous`(v0) @signature `Ljava/util/ListIterator;.previous:()Ljava/lang/Object;` @kind interface;
  #L3dd15a.  v0:= temp @kind object;
  #L3dd15c.  return v0 @kind object;
}
procedure `int` `previousIndex`(`m5.d$k$a` v1 @kind this) @signature `Lm5/d$k$a;.previousIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd128.  call temp:= `e`(v1) @signature `Lm5/d$k$a;.e:()Ljava/util/ListIterator;` @kind direct;
  #L3dd12e.  v0:= temp @kind object;
  #L3dd130.  call temp:= `previousIndex`(v0) @signature `Ljava/util/ListIterator;.previousIndex:()I` @kind interface;
  #L3dd136.  v0:= temp;
  #L3dd138.  return v0;
}
procedure `void` `set`(`m5.d$k$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm5/d$k$a;.set:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd220.  call temp:= `e`(v1) @signature `Lm5/d$k$a;.e:()Ljava/util/ListIterator;` @kind direct;
  #L3dd226.  v0:= temp @kind object;
  #L3dd228.  call `set`(v0, v2) @signature `Ljava/util/ListIterator;.set:(Ljava/lang/Object;)V` @kind interface;
  #L3dd22e.  return @kind void;
}
