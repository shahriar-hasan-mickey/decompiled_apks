record `m5.d$j$a` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `m5.d$j$a.o` @AccessFlag FINAL;
  `java.util.Collection` `m5.d$j$a.p` @AccessFlag FINAL;
  `m5.d$j` `m5.d$j$a.q` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m5.d$j$a` v0 @kind this, `m5.d$j` v1 @kind object) @signature `Lm5/d$j$a;.<init>:(Lm5/d$j;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dcbd8.  v0.`m5.d$j$a.q` @type ^`m5.d$j` := v1 @kind object;
  #L3dcbdc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dcbe2.  v1:= v1.`m5.d$j.p` @type ^`java.util.Collection` @kind object;
  #L3dcbe6.  v0.`m5.d$j$a.p` @type ^`java.util.Collection` := v1 @kind object;
  #L3dcbea.  call temp:= `i`(v1) @signature `Lm5/d;.i:(Ljava/util/Collection;)Ljava/util/Iterator;` @kind static;
  #L3dcbf0.  v1:= temp @kind object;
  #L3dcbf2.  v0.`m5.d$j$a.o` @type ^`java.util.Iterator` := v1 @kind object;
  #L3dcbf6.  return @kind void;
}
procedure `void` `<init>`(`m5.d$j$a` v0 @kind this, `m5.d$j` v1 @kind object, `java.util.Iterator` v2 @kind object) @signature `Lm5/d$j$a;.<init>:(Lm5/d$j;Ljava/util/Iterator;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dcc08.  v0.`m5.d$j$a.q` @type ^`m5.d$j` := v1 @kind object;
  #L3dcc0c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dcc12.  v1:= v1.`m5.d$j.p` @type ^`java.util.Collection` @kind object;
  #L3dcc16.  v0.`m5.d$j$a.p` @type ^`java.util.Collection` := v1 @kind object;
  #L3dcc1a.  v0.`m5.d$j$a.o` @type ^`java.util.Iterator` := v2 @kind object;
  #L3dcc1e.  return @kind void;
}
procedure `java.util.Iterator` `a`(`m5.d$j$a` v1 @kind this) @signature `Lm5/d$j$a;.a:()Ljava/util/Iterator;` @AccessFlag  {
    temp;
    v0;

  #L3dcbbc.  call `d`(v1) @signature `Lm5/d$j$a;.d:()V` @kind virtual;
  #L3dcbc2.  v0:= v1.`m5.d$j$a.o` @type ^`java.util.Iterator` @kind object;
  #L3dcbc6.  return v0 @kind object;
}
procedure `void` `d`(`m5.d$j$a` v2 @kind this) @signature `Lm5/d$j$a;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3dcc64.  v0:= v2.`m5.d$j$a.q` @type ^`m5.d$j` @kind object;
  #L3dcc68.  call `n`(v0) @signature `Lm5/d$j;.n:()V` @kind virtual;
  #L3dcc6e.  v0:= v2.`m5.d$j$a.q` @type ^`m5.d$j` @kind object;
  #L3dcc72.  v0:= v0.`m5.d$j.p` @type ^`java.util.Collection` @kind object;
  #L3dcc76.  v1:= v2.`m5.d$j$a.p` @type ^`java.util.Collection` @kind object;
  #L3dcc7a.  if v0 != v1 then goto L3dcc80;
  #L3dcc7e.  return @kind void;
  #L3dcc80.  v0:= new `java.util.ConcurrentModificationException`;
  #L3dcc84.  call `<init>`(v0) @signature `Ljava/util/ConcurrentModificationException;.<init>:()V` @kind direct;
  #L3dcc8a.  throw v0;
}
procedure `boolean` `hasNext`(`m5.d$j$a` v1 @kind this) @signature `Lm5/d$j$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dcb74.  call `d`(v1) @signature `Lm5/d$j$a;.d:()V` @kind virtual;
  #L3dcb7a.  v0:= v1.`m5.d$j$a.o` @type ^`java.util.Iterator` @kind object;
  #L3dcb7e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3dcb84.  v0:= temp;
  #L3dcb86.  return v0;
}
procedure `java.lang.Object` `next`(`m5.d$j$a` v1 @kind this) @signature `Lm5/d$j$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dcb98.  call `d`(v1) @signature `Lm5/d$j$a;.d:()V` @kind virtual;
  #L3dcb9e.  v0:= v1.`m5.d$j$a.o` @type ^`java.util.Iterator` @kind object;
  #L3dcba2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3dcba8.  v0:= temp @kind object;
  #L3dcbaa.  return v0 @kind object;
}
procedure `void` `remove`(`m5.d$j$a` v1 @kind this) @signature `Lm5/d$j$a;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dcc30.  v0:= v1.`m5.d$j$a.o` @type ^`java.util.Iterator` @kind object;
  #L3dcc34.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L3dcc3a.  v0:= v1.`m5.d$j$a.q` @type ^`m5.d$j` @kind object;
  #L3dcc3e.  v0:= v0.`m5.d$j.s` @type ^`m5.d` @kind object;
  #L3dcc42.  call temp:= `k`(v0) @signature `Lm5/d;.k:(Lm5/d;)I` @kind static;
  #L3dcc48.  v0:= v1.`m5.d$j$a.q` @type ^`m5.d$j` @kind object;
  #L3dcc4c.  call `p`(v0) @signature `Lm5/d$j;.p:()V` @kind virtual;
  #L3dcc52.  return @kind void;
}
