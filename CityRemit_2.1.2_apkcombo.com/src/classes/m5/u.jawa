record `m5.u` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `a`(`java.util.Collection` v2 @kind object, `java.util.Iterator` v3 @kind object) @signature `Lm5/u;.a:(Ljava/util/Collection;Ljava/util/Iterator;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e008c.  call temp:= `i`(v2) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e0092.  call temp:= `i`(v3) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e0098.  v0:= 0I;
  #L3e009a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e00a0.  v1:= temp;
  #L3e00a2.  if v1 == 0 then goto L3e00ba;
  #L3e00a6.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e00ac.  v1:= temp @kind object;
  #L3e00ae.  call temp:= `add`(v2, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e00b4.  v1:= temp;
  #L3e00b6.  v0:= v0 ^| v1 @kind int;
  #L3e00b8.  goto L3e009a;
  #L3e00ba.  return v0;
}
procedure `boolean` `b`(`java.util.Iterator` v0 @kind object, `l5.k` v1 @kind object) @signature `Lm5/u;.b:(Ljava/util/Iterator;Ll5/k;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e00cc.  call temp:= `l`(v0, v1) @signature `Lm5/u;.l:(Ljava/util/Iterator;Ll5/k;)I` @kind static;
  #L3e00d2.  v0:= temp;
  #L3e00d4.  v1:= -1I;
  #L3e00d6.  if v0 == v1 then goto L3e00de;
  #L3e00da.  v0:= 1I;
  #L3e00dc.  goto L3e00e0;
  #L3e00de.  v0:= 0I;
  #L3e00e0.  return v0;
}
procedure `void` `c`(`java.util.Iterator` v1 @kind object) @signature `Lm5/u;.c:(Ljava/util/Iterator;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L3e03c4.  call temp:= `i`(v1) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e03ca.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e03d0.  v0:= temp;
  #L3e03d2.  if v0 == 0 then goto L3e03e4;
  #L3e03d6.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e03dc.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L3e03e2.  goto L3e03ca;
  #L3e03e4.  return @kind void;
}
procedure `boolean` `d`(`java.util.Iterator` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lm5/u;.d:(Ljava/util/Iterator;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e00f4.  v0:= 1I;
  #L3e00f6.  if v3 != 0 then goto L3e0114;
  #L3e00fa.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e0100.  v3:= temp;
  #L3e0102.  if v3 == 0 then goto L3e0136;
  #L3e0106.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e010c.  v3:= temp @kind object;
  #L3e010e.  if v3 != 0 then goto L3e00fa;
  #L3e0112.  return v0;
  #L3e0114.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e011a.  v1:= temp;
  #L3e011c.  if v1 == 0 then goto L3e0136;
  #L3e0120.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e0126.  v1:= temp @kind object;
  #L3e0128.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e012e.  v1:= temp;
  #L3e0130.  if v1 == 0 then goto L3e0114;
  #L3e0134.  return v0;
  #L3e0136.  v2:= 0I;
  #L3e0138.  return v2;
}
procedure `boolean` `e`(`java.util.Iterator` v3 @kind object, `java.util.Iterator` v4 @kind object) @signature `Lm5/u;.e:(Ljava/util/Iterator;Ljava/util/Iterator;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e014c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e0152.  v0:= temp;
  #L3e0154.  if v0 == 0 then goto L3e0186;
  #L3e0158.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e015e.  v0:= temp;
  #L3e0160.  v1:= 0I;
  #L3e0162.  if v0 != 0 then goto L3e0168;
  #L3e0166.  return v1;
  #L3e0168.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e016e.  v0:= temp @kind object;
  #L3e0170.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e0176.  v2:= temp @kind object;
  #L3e0178.  call temp:= `a`(v0, v2) @signature `Ll5/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e017e.  v0:= temp;
  #L3e0180.  if v0 != 0 then goto L3e014c;
  #L3e0184.  return v1;
  #L3e0186.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e018c.  v3:= temp;
  #L3e018e.  v3:= v3 ^~ 1;
  #L3e0192.  return v3;
}
procedure `java.util.Iterator` `f`() @signature `Lm5/u;.f:()Ljava/util/Iterator;` @AccessFlag STATIC {
    temp;
    v0;

  #L3e0368.  v0:= `@@m5.u$c.o` @type ^`m5.u$c` @kind object;
  #L3e036c.  return v0 @kind object;
}
procedure `m5.s0` `g`(`java.util.Iterator` v1 @kind object, `l5.k` v2 @kind object) @signature `Lm5/u;.g:(Ljava/util/Iterator;Ll5/k;)Lm5/s0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e0380.  call temp:= `i`(v1) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e0386.  call temp:= `i`(v2) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e038c.  v0:= new `m5.u$a`;
  #L3e0390.  call `<init>`(v0, v1, v2) @signature `Lm5/u$a;.<init>:(Ljava/util/Iterator;Ll5/k;)V` @kind direct;
  #L3e0396.  return v0 @kind object;
}
procedure `java.lang.Object` `h`(`java.util.Iterator` v2 @kind object, `l5.k` v3 @kind object) @signature `Lm5/u;.h:(Ljava/util/Iterator;Ll5/k;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e0274.  call temp:= `i`(v2) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e027a.  call temp:= `i`(v3) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e0280.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e0286.  v0:= temp;
  #L3e0288.  if v0 == 0 then goto L3e02a2;
  #L3e028c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e0292.  v0:= temp @kind object;
  #L3e0294.  call temp:= `apply`(v3, v0) @signature `Ll5/k;.apply:(Ljava/lang/Object;)Z` @kind interface;
  #L3e029a.  v1:= temp;
  #L3e029c.  if v1 == 0 then goto L3e0280;
  #L3e02a0.  return v0 @kind object;
  #L3e02a2.  v2:= new `java.util.NoSuchElementException`;
  #L3e02a6.  call `<init>`(v2) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3e02ac.  throw v2;
}
procedure `java.lang.Object` `i`(`java.util.Iterator` v2 @kind object) @signature `Lm5/u;.i:(Ljava/util/Iterator;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e02c0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e02c6.  v0:= temp @kind object;
  #L3e02c8.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e02ce.  v1:= temp;
  #L3e02d0.  if v1 != 0 then goto L3e02c0;
  #L3e02d4.  return v0 @kind object;
}
procedure `java.lang.Object` `j`(`java.util.Iterator` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lm5/u;.j:(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e02e8.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e02ee.  v0:= temp;
  #L3e02f0.  if v0 == 0 then goto L3e02fc;
  #L3e02f4.  call temp:= `i`(v1) @signature `Lm5/u;.i:(Ljava/util/Iterator;)Ljava/lang/Object;` @kind static;
  #L3e02fa.  v2:= temp @kind object;
  #L3e02fc.  return v2 @kind object;
}
procedure `java.lang.Object` `k`(`java.util.Iterator` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lm5/u;.k:(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e0310.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e0316.  v0:= temp;
  #L3e0318.  if v0 == 0 then goto L3e0324;
  #L3e031c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e0322.  v2:= temp @kind object;
  #L3e0324.  return v2 @kind object;
}
procedure `int` `l`(`java.util.Iterator` v2 @kind object, `l5.k` v3 @kind object) @signature `Lm5/u;.l:(Ljava/util/Iterator;Ll5/k;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e022c.  v0:= "predicate" @kind object;
  #L3e0230.  call temp:= `j`(v3, v0) @signature `Ll5/j;.j:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e0236.  v0:= 0I;
  #L3e0238.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e023e.  v1:= temp;
  #L3e0240.  if v1 == 0 then goto L3e0260;
  #L3e0244.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e024a.  v1:= temp @kind object;
  #L3e024c.  call temp:= `apply`(v3, v1) @signature `Ll5/k;.apply:(Ljava/lang/Object;)Z` @kind interface;
  #L3e0252.  v1:= temp;
  #L3e0254.  if v1 == 0 then goto L3e025a;
  #L3e0258.  return v0;
  #L3e025a.  v0:= v0 + 1;
  #L3e025e.  goto L3e0238;
  #L3e0260.  v2:= -1I;
  #L3e0262.  return v2;
}
procedure `java.lang.Object` `m`(`java.util.Iterator` v1 @kind object) @signature `Lm5/u;.m:(Ljava/util/Iterator;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;

  #L3e0338.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e033e.  v0:= temp;
  #L3e0340.  if v0 == 0 then goto L3e0354;
  #L3e0344.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e034a.  v0:= temp @kind object;
  #L3e034c.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L3e0352.  return v0 @kind object;
  #L3e0354.  v1:= 0I;
  #L3e0356.  return v1 @kind object;
}
procedure `boolean` `n`(`java.util.Iterator` v2 @kind object, `java.util.Collection` v3 @kind object) @signature `Lm5/u;.n:(Ljava/util/Iterator;Ljava/util/Collection;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e01a4.  call temp:= `i`(v3) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e01aa.  v0:= 0I;
  #L3e01ac.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e01b2.  v1:= temp;
  #L3e01b4.  if v1 == 0 then goto L3e01d6;
  #L3e01b8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e01be.  v1:= temp @kind object;
  #L3e01c0.  call temp:= `contains`(v3, v1) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e01c6.  v1:= temp;
  #L3e01c8.  if v1 == 0 then goto L3e01ac;
  #L3e01cc.  call `remove`(v2) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L3e01d2.  v0:= 1I;
  #L3e01d4.  goto L3e01ac;
  #L3e01d6.  return v0;
}
procedure `boolean` `o`(`java.util.Iterator` v2 @kind object, `l5.k` v3 @kind object) @signature `Lm5/u;.o:(Ljava/util/Iterator;Ll5/k;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e01e8.  call temp:= `i`(v3) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e01ee.  v0:= 0I;
  #L3e01f0.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e01f6.  v1:= temp;
  #L3e01f8.  if v1 == 0 then goto L3e021a;
  #L3e01fc.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e0202.  v1:= temp @kind object;
  #L3e0204.  call temp:= `apply`(v3, v1) @signature `Ll5/k;.apply:(Ljava/lang/Object;)Z` @kind interface;
  #L3e020a.  v1:= temp;
  #L3e020c.  if v1 == 0 then goto L3e01f0;
  #L3e0210.  call `remove`(v2) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L3e0216.  v0:= 1I;
  #L3e0218.  goto L3e01f0;
  #L3e021a.  return v0;
}
procedure `m5.s0` `p`(`java.lang.Object` v1 @kind object) @signature `Lm5/u;.p:(Ljava/lang/Object;)Lm5/s0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e03a8.  v0:= new `m5.u$b`;
  #L3e03ac.  call `<init>`(v0, v1) @signature `Lm5/u$b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e03b2.  return v0 @kind object;
}
