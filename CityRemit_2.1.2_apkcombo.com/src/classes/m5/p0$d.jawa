record `m5.p0$d` @kind class @AccessFlag ABSTRACT extends `java.util.AbstractSet` @kind class {
}
procedure `void` `<init>`(`m5.p0$d` v0 @kind this) @signature `Lm5/p0$d;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e2744.  call `<init>`(v0) @signature `Ljava/util/AbstractSet;.<init>:()V` @kind direct;
  #L3e274a.  return @kind void;
}
procedure `boolean` `removeAll`(`m5.p0$d` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lm5/p0$d;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L3e2700.  call temp:= `i`(v0, v1) @signature `Lm5/p0;.i:(Ljava/util/Set;Ljava/util/Collection;)Z` @kind static;
  #L3e2706.  v1:= temp;
  #L3e2708.  return v1;
}
procedure `boolean` `retainAll`(`m5.p0$d` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lm5/p0$d;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L3e271c.  call temp:= `i`(v1) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e2722.  v1:= temp @kind object;
  #L3e2724.  v1:= (`java.util.Collection`) v1 @kind object;
  #L3e2728.  call temp:= `retainAll`(v0, v1) @signature `Ljava/util/AbstractSet;.retainAll:(Ljava/util/Collection;)Z` @kind super;
  #L3e272e.  v1:= temp;
  #L3e2730.  return v1;
}
