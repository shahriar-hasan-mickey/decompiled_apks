record `m5.b0$d$a` @kind class @AccessFlag  extends `m5.b0$c` @kind class {
  `int` `m5.b0$d$a.a` @AccessFlag FINAL_SYNTHETIC;
  `m5.b0$d` `m5.b0$d$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m5.b0$d$a` v0 @kind this, `m5.b0$d` v1 @kind object, `int` v2 ) @signature `Lm5/b0$d$a;.<init>:(Lm5/b0$d;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e1194.  v0.`m5.b0$d$a.b` @type ^`m5.b0$d` := v1 @kind object;
  #L3e1198.  v0.`m5.b0$d$a.a` @type ^`int` := v2;
  #L3e119c.  call `<init>`(v0) @signature `Lm5/b0$c;.<init>:()V` @kind direct;
  #L3e11a2.  return @kind void;
}
procedure `m5.v` `c`(`m5.b0$d$a` v3 @kind this) @signature `Lm5/b0$d$a;.c:()Lm5/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e1160.  v0:= v3.`m5.b0$d$a.b` @type ^`m5.b0$d` @kind object;
  #L3e1164.  call temp:= `c`(v0) @signature `Lm5/b0$d;.c:()Ljava/util/Map;` @kind virtual;
  #L3e116a.  v0:= temp @kind object;
  #L3e116c.  v1:= new `m5.b0$b`;
  #L3e1170.  v2:= v3.`m5.b0$d$a.a` @type ^`int`;
  #L3e1174.  call `<init>`(v1, v2) @signature `Lm5/b0$b;.<init>:(I)V` @kind direct;
  #L3e117a.  call temp:= `b`(v0, v1) @signature `Lm5/c0;.b:(Ljava/util/Map;Ll5/o;)Lm5/v;` @kind static;
  #L3e1180.  v0:= temp @kind object;
  #L3e1182.  return v0 @kind object;
}
