record `m5.f$a` @kind class @AccessFlag  extends `java.util.AbstractCollection` @kind class {
  `m5.f` `m5.f$a.o` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m5.f$a` v0 @kind this, `m5.f` v1 @kind object) @signature `Lm5/f$a;.<init>:(Lm5/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dd9cc.  v0.`m5.f$a.o` @type ^`m5.f` := v1 @kind object;
  #L3dd9d0.  call `<init>`(v0) @signature `Ljava/util/AbstractCollection;.<init>:()V` @kind direct;
  #L3dd9d6.  return @kind void;
}
procedure `void` `clear`(`m5.f$a` v1 @kind this) @signature `Lm5/f$a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd9e8.  v0:= v1.`m5.f$a.o` @type ^`m5.f` @kind object;
  #L3dd9ec.  call `clear`(v0) @signature `Lm5/z;.clear:()V` @kind interface;
  #L3dd9f2.  return @kind void;
}
procedure `boolean` `contains`(`m5.f$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm5/f$a;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd96c.  v0:= v1.`m5.f$a.o` @type ^`m5.f` @kind object;
  #L3dd970.  call temp:= `b`(v0, v2) @signature `Lm5/f;.b:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dd976.  v2:= temp;
  #L3dd978.  return v2;
}
procedure `java.util.Iterator` `iterator`(`m5.f$a` v1 @kind this) @signature `Lm5/f$a;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd9ac.  v0:= v1.`m5.f$a.o` @type ^`m5.f` @kind object;
  #L3dd9b0.  call temp:= `g`(v0) @signature `Lm5/f;.g:()Ljava/util/Iterator;` @kind virtual;
  #L3dd9b6.  v0:= temp @kind object;
  #L3dd9b8.  return v0 @kind object;
}
procedure `int` `size`(`m5.f$a` v1 @kind this) @signature `Lm5/f$a;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd98c.  v0:= v1.`m5.f$a.o` @type ^`m5.f` @kind object;
  #L3dd990.  call temp:= `size`(v0) @signature `Lm5/z;.size:()I` @kind interface;
  #L3dd996.  v0:= temp;
  #L3dd998.  return v0;
}
