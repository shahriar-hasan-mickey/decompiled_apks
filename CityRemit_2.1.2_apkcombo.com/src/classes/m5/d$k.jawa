record `m5.d$k` @kind class @AccessFlag  extends `m5.d$j` @kind class, `java.util.List` @kind interface {
  `m5.d` `m5.d$k.t` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m5.d$k` v0 @kind this, `m5.d` v1 @kind object, `java.lang.Object` v2 @kind object, `java.util.List` v3 @kind object, `m5.d$j` v4 @kind object) @signature `Lm5/d$k;.<init>:(Lm5/d;Ljava/lang/Object;Ljava/util/List;Lm5/d$j;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dd438.  v0.`m5.d$k.t` @type ^`m5.d` := v1 @kind object;
  #L3dd43c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lm5/d$j;.<init>:(Lm5/d;Ljava/lang/Object;Ljava/util/Collection;Lm5/d$j;)V` @kind direct;
  #L3dd442.  return @kind void;
}
procedure `void` `add`(`m5.d$k` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lm5/d$k;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dd454.  call `n`(v2) @signature `Lm5/d$j;.n:()V` @kind virtual;
  #L3dd45a.  call temp:= `h`(v2) @signature `Lm5/d$j;.h:()Ljava/util/Collection;` @kind virtual;
  #L3dd460.  v0:= temp @kind object;
  #L3dd462.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L3dd468.  v0:= temp;
  #L3dd46a.  call temp:= `u`(v2) @signature `Lm5/d$k;.u:()Ljava/util/List;` @kind virtual;
  #L3dd470.  v1:= temp @kind object;
  #L3dd472.  call `add`(v1, v3, v4) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L3dd478.  v3:= v2.`m5.d$k.t` @type ^`m5.d` @kind object;
  #L3dd47c.  call temp:= `j`(v3) @signature `Lm5/d;.j:(Lm5/d;)I` @kind static;
  #L3dd482.  if v0 == 0 then goto L3dd48c;
  #L3dd486.  call `b`(v2) @signature `Lm5/d$j;.b:()V` @kind virtual;
  #L3dd48c.  return @kind void;
}
procedure `boolean` `addAll`(`m5.d$k` v2 @kind this, `int` v3 , `java.util.Collection` v4 @kind object) @signature `Lm5/d$k;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dd240.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L3dd246.  v0:= temp;
  #L3dd248.  if v0 == 0 then goto L3dd250;
  #L3dd24c.  v3:= 0I;
  #L3dd24e.  return v3;
  #L3dd250.  call temp:= `size`(v2) @signature `Lm5/d$j;.size:()I` @kind virtual;
  #L3dd256.  v0:= temp;
  #L3dd258.  call temp:= `u`(v2) @signature `Lm5/d$k;.u:()Ljava/util/List;` @kind virtual;
  #L3dd25e.  v1:= temp @kind object;
  #L3dd260.  call temp:= `addAll`(v1, v3, v4) @signature `Ljava/util/List;.addAll:(ILjava/util/Collection;)Z` @kind interface;
  #L3dd266.  v3:= temp;
  #L3dd268.  if v3 == 0 then goto L3dd292;
  #L3dd26c.  call temp:= `h`(v2) @signature `Lm5/d$j;.h:()Ljava/util/Collection;` @kind virtual;
  #L3dd272.  v4:= temp @kind object;
  #L3dd274.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L3dd27a.  v4:= temp;
  #L3dd27c.  v1:= v2.`m5.d$k.t` @type ^`m5.d` @kind object;
  #L3dd280.  v4:= v4 - v0 @kind int;
  #L3dd282.  call temp:= `l`(v1, v4) @signature `Lm5/d;.l:(Lm5/d;I)I` @kind static;
  #L3dd288.  if v0 != 0 then goto L3dd292;
  #L3dd28c.  call `b`(v2) @signature `Lm5/d$j;.b:()V` @kind virtual;
  #L3dd292.  return v3;
}
procedure `java.lang.Object` `get`(`m5.d$k` v1 @kind this, `int` v2 ) @signature `Lm5/d$k;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd2f4.  call `n`(v1) @signature `Lm5/d$j;.n:()V` @kind virtual;
  #L3dd2fa.  call temp:= `u`(v1) @signature `Lm5/d$k;.u:()Ljava/util/List;` @kind virtual;
  #L3dd300.  v0:= temp @kind object;
  #L3dd302.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dd308.  v2:= temp @kind object;
  #L3dd30a.  return v2 @kind object;
}
procedure `int` `indexOf`(`m5.d$k` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm5/d$k;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd2a4.  call `n`(v1) @signature `Lm5/d$j;.n:()V` @kind virtual;
  #L3dd2aa.  call temp:= `u`(v1) @signature `Lm5/d$k;.u:()Ljava/util/List;` @kind virtual;
  #L3dd2b0.  v0:= temp @kind object;
  #L3dd2b2.  call temp:= `indexOf`(v0, v2) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L3dd2b8.  v2:= temp;
  #L3dd2ba.  return v2;
}
procedure `int` `lastIndexOf`(`m5.d$k` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm5/d$k;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd2cc.  call `n`(v1) @signature `Lm5/d$j;.n:()V` @kind virtual;
  #L3dd2d2.  call temp:= `u`(v1) @signature `Lm5/d$k;.u:()Ljava/util/List;` @kind virtual;
  #L3dd2d8.  v0:= temp @kind object;
  #L3dd2da.  call temp:= `lastIndexOf`(v0, v2) @signature `Ljava/util/List;.lastIndexOf:(Ljava/lang/Object;)I` @kind interface;
  #L3dd2e0.  v2:= temp;
  #L3dd2e2.  return v2;
}
procedure `java.util.ListIterator` `listIterator`(`m5.d$k` v1 @kind this) @signature `Lm5/d$k;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd3f0.  call `n`(v1) @signature `Lm5/d$j;.n:()V` @kind virtual;
  #L3dd3f6.  v0:= new `m5.d$k$a`;
  #L3dd3fa.  call `<init>`(v0, v1) @signature `Lm5/d$k$a;.<init>:(Lm5/d$k;)V` @kind direct;
  #L3dd400.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`m5.d$k` v1 @kind this, `int` v2 ) @signature `Lm5/d$k;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd414.  call `n`(v1) @signature `Lm5/d$j;.n:()V` @kind virtual;
  #L3dd41a.  v0:= new `m5.d$k$a`;
  #L3dd41e.  call `<init>`(v0, v1, v2) @signature `Lm5/d$k$a;.<init>:(Lm5/d$k;I)V` @kind direct;
  #L3dd424.  return v0 @kind object;
}
procedure `java.lang.Object` `remove`(`m5.d$k` v1 @kind this, `int` v2 ) @signature `Lm5/d$k;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd31c.  call `n`(v1) @signature `Lm5/d$j;.n:()V` @kind virtual;
  #L3dd322.  call temp:= `u`(v1) @signature `Lm5/d$k;.u:()Ljava/util/List;` @kind virtual;
  #L3dd328.  v0:= temp @kind object;
  #L3dd32a.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3dd330.  v2:= temp @kind object;
  #L3dd332.  v0:= v1.`m5.d$k.t` @type ^`m5.d` @kind object;
  #L3dd336.  call temp:= `k`(v0) @signature `Lm5/d;.k:(Lm5/d;)I` @kind static;
  #L3dd33c.  call `p`(v1) @signature `Lm5/d$j;.p:()V` @kind virtual;
  #L3dd342.  return v2 @kind object;
}
procedure `java.lang.Object` `set`(`m5.d$k` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lm5/d$k;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd354.  call `n`(v1) @signature `Lm5/d$j;.n:()V` @kind virtual;
  #L3dd35a.  call temp:= `u`(v1) @signature `Lm5/d$k;.u:()Ljava/util/List;` @kind virtual;
  #L3dd360.  v0:= temp @kind object;
  #L3dd362.  call temp:= `set`(v0, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3dd368.  v2:= temp @kind object;
  #L3dd36a.  return v2 @kind object;
}
procedure `java.util.List` `subList`(`m5.d$k` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lm5/d$k;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3dd39c.  call `n`(v3) @signature `Lm5/d$j;.n:()V` @kind virtual;
  #L3dd3a2.  v0:= v3.`m5.d$k.t` @type ^`m5.d` @kind object;
  #L3dd3a6.  call temp:= `l`(v3) @signature `Lm5/d$j;.l:()Ljava/lang/Object;` @kind virtual;
  #L3dd3ac.  v1:= temp @kind object;
  #L3dd3ae.  call temp:= `u`(v3) @signature `Lm5/d$k;.u:()Ljava/util/List;` @kind virtual;
  #L3dd3b4.  v2:= temp @kind object;
  #L3dd3b6.  call temp:= `subList`(v2, v4, v5) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L3dd3bc.  v4:= temp @kind object;
  #L3dd3be.  call temp:= `f`(v3) @signature `Lm5/d$j;.f:()Lm5/d$j;` @kind virtual;
  #L3dd3c4.  v5:= temp @kind object;
  #L3dd3c6.  if v5 != 0 then goto L3dd3ce;
  #L3dd3ca.  v5:= v3 @kind object;
  #L3dd3cc.  goto L3dd3d6;
  #L3dd3ce.  call temp:= `f`(v3) @signature `Lm5/d$j;.f:()Lm5/d$j;` @kind virtual;
  #L3dd3d4.  v5:= temp @kind object;
  #L3dd3d6.  call temp:= `w`(v0, v1, v4, v5) @signature `Lm5/d;.w:(Ljava/lang/Object;Ljava/util/List;Lm5/d$j;)Ljava/util/List;` @kind virtual;
  #L3dd3dc.  v4:= temp @kind object;
  #L3dd3de.  return v4 @kind object;
}
procedure `java.util.List` `u`(`m5.d$k` v1 @kind this) @signature `Lm5/d$k;.u:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;

  #L3dd37c.  call temp:= `h`(v1) @signature `Lm5/d$j;.h:()Ljava/util/Collection;` @kind virtual;
  #L3dd382.  v0:= temp @kind object;
  #L3dd384.  v0:= (`java.util.List`) v0 @kind object;
  #L3dd388.  return v0 @kind object;
}
