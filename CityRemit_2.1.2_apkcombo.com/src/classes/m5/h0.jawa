record `m5.h0` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`m5.h0` v0 @kind this) @signature `Lm5/h0;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3e1574.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e157a.  return @kind void;
}
procedure `m5.h0` `a`(`java.util.Comparator` v1 @kind object) @signature `Lm5/h0;.a:(Ljava/util/Comparator;)Lm5/h0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e14f8.  v0:= instanceof @variable v1 @type ^`m5.h0` @kind boolean;
  #L3e14fc.  if v0 == 0 then goto L3e1506;
  #L3e1500.  v1:= (`m5.h0`) v1 @kind object;
  #L3e1504.  goto L3e1512;
  #L3e1506.  v0:= new `m5.j`;
  #L3e150a.  call `<init>`(v0, v1) @signature `Lm5/j;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L3e1510.  v1:= v0 @kind object;
  #L3e1512.  return v1 @kind object;
}
procedure `m5.h0` `b`() @signature `Lm5/h0;.b:()Lm5/h0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e1524.  v0:= `@@m5.e0.o` @type ^`m5.e0` @kind object;
  #L3e1528.  return v0 @kind object;
}
procedure `m5.h0` `c`(`m5.h0` v1 @kind this, `l5.f` v2 @kind object) @signature `Lm5/h0;.c:(Ll5/f;)Lm5/h0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e153c.  v0:= new `m5.g`;
  #L3e1540.  call `<init>`(v0, v2, v1) @signature `Lm5/g;.<init>:(Ll5/f;Lm5/h0;)V` @kind direct;
  #L3e1546.  return v0 @kind object;
}
procedure `int` `compare`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lm5/h0;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `m5.h0` `d`(`m5.h0` v1 @kind this) @signature `Lm5/h0;.d:()Lm5/h0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1558.  v0:= new `m5.n0`;
  #L3e155c.  call `<init>`(v0, v1) @signature `Lm5/n0;.<init>:(Lm5/h0;)V` @kind direct;
  #L3e1562.  return v0 @kind object;
}
