record `m5.t` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `a`(`java.lang.Iterable` v0 @kind object, `l5.k` v1 @kind object) @signature `Lm5/t;.a:(Ljava/lang/Iterable;Ll5/k;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3dfc70.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3dfc76.  v0:= temp @kind object;
  #L3dfc78.  call temp:= `b`(v0, v1) @signature `Lm5/u;.b:(Ljava/util/Iterator;Ll5/k;)Z` @kind static;
  #L3dfc7e.  v0:= temp;
  #L3dfc80.  return v0;
}
procedure `java.lang.Object` `b`(`java.lang.Iterable` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lm5/t;.b:(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3dfd6c.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3dfd72.  v0:= temp @kind object;
  #L3dfd74.  call temp:= `k`(v0, v1) @signature `Lm5/u;.k:(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3dfd7a.  v0:= temp @kind object;
  #L3dfd7c.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`java.lang.Iterable` v1 @kind object) @signature `Lm5/t;.c:(Ljava/lang/Iterable;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dfd90.  v0:= instanceof @variable v1 @type ^`java.util.List` @kind boolean;
  #L3dfd94.  if v0 == 0 then goto L3dfdbe;
  #L3dfd98.  v1:= (`java.util.List`) v1 @kind object;
  #L3dfd9c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3dfda2.  v0:= temp;
  #L3dfda4.  if v0 != 0 then goto L3dfdb2;
  #L3dfda8.  call temp:= `e`(v1) @signature `Lm5/t;.e:(Ljava/util/List;)Ljava/lang/Object;` @kind static;
  #L3dfdae.  v1:= temp @kind object;
  #L3dfdb0.  return v1 @kind object;
  #L3dfdb2.  v1:= new `java.util.NoSuchElementException`;
  #L3dfdb6.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3dfdbc.  throw v1;
  #L3dfdbe.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3dfdc4.  v1:= temp @kind object;
  #L3dfdc6.  call temp:= `i`(v1) @signature `Lm5/u;.i:(Ljava/util/Iterator;)Ljava/lang/Object;` @kind static;
  #L3dfdcc.  v1:= temp @kind object;
  #L3dfdce.  return v1 @kind object;
}
procedure `java.lang.Object` `d`(`java.lang.Iterable` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lm5/t;.d:(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dfde0.  v0:= instanceof @variable v1 @type ^`java.util.Collection` @kind boolean;
  #L3dfde4.  if v0 == 0 then goto L3dfe16;
  #L3dfde8.  v0:= v1 @kind object;
  #L3dfdea.  v0:= (`java.util.Collection`) v0 @kind object;
  #L3dfdee.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L3dfdf4.  v0:= temp;
  #L3dfdf6.  if v0 == 0 then goto L3dfdfc;
  #L3dfdfa.  return v2 @kind object;
  #L3dfdfc.  v0:= instanceof @variable v1 @type ^`java.util.List` @kind boolean;
  #L3dfe00.  if v0 == 0 then goto L3dfe16;
  #L3dfe04.  call temp:= `a`(v1) @signature `Lm5/w;.a:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L3dfe0a.  v1:= temp @kind object;
  #L3dfe0c.  call temp:= `e`(v1) @signature `Lm5/t;.e:(Ljava/util/List;)Ljava/lang/Object;` @kind static;
  #L3dfe12.  v1:= temp @kind object;
  #L3dfe14.  return v1 @kind object;
  #L3dfe16.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3dfe1c.  v1:= temp @kind object;
  #L3dfe1e.  call temp:= `j`(v1, v2) @signature `Lm5/u;.j:(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3dfe24.  v1:= temp @kind object;
  #L3dfe26.  return v1 @kind object;
}
procedure `java.lang.Object` `e`(`java.util.List` v1 @kind object) @signature `Lm5/t;.e:(Ljava/util/List;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3dfe38.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3dfe3e.  v0:= temp;
  #L3dfe40.  v0:= v0 + -1;
  #L3dfe44.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dfe4a.  v1:= temp @kind object;
  #L3dfe4c.  return v1 @kind object;
}
procedure `boolean` `f`(`java.lang.Iterable` v1 @kind object, `l5.k` v2 @kind object) @signature `Lm5/t;.f:(Ljava/lang/Iterable;Ll5/k;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dfc94.  v0:= instanceof @variable v1 @type ^`java.util.RandomAccess` @kind boolean;
  #L3dfc98.  if v0 == 0 then goto L3dfcbe;
  #L3dfc9c.  v0:= instanceof @variable v1 @type ^`java.util.List` @kind boolean;
  #L3dfca0.  if v0 == 0 then goto L3dfcbe;
  #L3dfca4.  v1:= (`java.util.List`) v1 @kind object;
  #L3dfca8.  call temp:= `i`(v2) @signature `Ll5/j;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3dfcae.  v2:= temp @kind object;
  #L3dfcb0.  v2:= (`l5.k`) v2 @kind object;
  #L3dfcb4.  call temp:= `g`(v1, v2) @signature `Lm5/t;.g:(Ljava/util/List;Ll5/k;)Z` @kind static;
  #L3dfcba.  v1:= temp;
  #L3dfcbc.  return v1;
  #L3dfcbe.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3dfcc4.  v1:= temp @kind object;
  #L3dfcc6.  call temp:= `o`(v1, v2) @signature `Lm5/u;.o:(Ljava/util/Iterator;Ll5/k;)Z` @kind static;
  #L3dfccc.  v1:= temp;
  #L3dfcce.  return v1;
}
procedure `boolean` `g`(`java.util.List` v6 @kind object, `l5.k` v7 @kind object) @signature `Lm5/t;.g:(Ljava/util/List;Ll5/k;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dfce0.  v0:= 0I;
  #L3dfce2.  v1:= 0I;
  #L3dfce4.  v2:= 0I;
  #L3dfce6.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3dfcec.  v3:= temp;
  #L3dfcee.  v4:= 1I;
  #L3dfcf0.  if v1 >= v3 then goto L3dfd2e;
  #L3dfcf4.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dfcfa.  v3:= temp @kind object;
  #L3dfcfc.  call temp:= `apply`(v7, v3) @signature `Ll5/k;.apply:(Ljava/lang/Object;)Z` @kind interface;
  #L3dfd02.  v5:= temp;
  #L3dfd04.  if v5 != 0 then goto L3dfd28;
  #L3dfd08.  if v1 <= v2 then goto L3dfd24;
  #L3dfd0c.  call temp:= `set`(v6, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3dfd12.  goto L3dfd24;
  #L3dfd14.  call `h`(v6, v7, v2, v1) @signature `Lm5/t;.h:(Ljava/util/List;Ll5/k;II)V` @kind static;
  #L3dfd1a.  return v4;
  #L3dfd1c.  call `h`(v6, v7, v2, v1) @signature `Lm5/t;.h:(Ljava/util/List;Ll5/k;II)V` @kind static;
  #L3dfd22.  return v4;
  #L3dfd24.  v2:= v2 + 1;
  #L3dfd28.  v1:= v1 + 1;
  #L3dfd2c.  goto L3dfce6;
  #L3dfd2e.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3dfd34.  v7:= temp;
  #L3dfd36.  call temp:= `subList`(v6, v2, v7) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L3dfd3c.  v6:= temp @kind object;
  #L3dfd3e.  call `clear`(v6) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3dfd44.  if v1 == v2 then goto L3dfd4a;
  #L3dfd48.  v0:= 1I;
  #L3dfd4a.  return v0;
  catch `java.lang.UnsupportedOperationException` @[L3dfd0c..L3dfd12] goto L3dfd1c;
  catch `java.lang.IllegalArgumentException` @[L3dfd0c..L3dfd12] goto L3dfd14;
}
procedure `void` `h`(`java.util.List` v2 @kind object, `l5.k` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lm5/t;.h:(Ljava/util/List;Ll5/k;II)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3dfe60.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3dfe66.  v0:= temp;
  #L3dfe68.  v0:= v0 + -1;
  #L3dfe6c.  if v0 <= v5 then goto L3dfe90;
  #L3dfe70.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dfe76.  v1:= temp @kind object;
  #L3dfe78.  call temp:= `apply`(v3, v1) @signature `Ll5/k;.apply:(Ljava/lang/Object;)Z` @kind interface;
  #L3dfe7e.  v1:= temp;
  #L3dfe80.  if v1 == 0 then goto L3dfe8a;
  #L3dfe84.  call temp:= `remove`(v2, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3dfe8a.  v0:= v0 + -1;
  #L3dfe8e.  goto L3dfe6c;
  #L3dfe90.  v5:= v5 + -1;
  #L3dfe94.  if v5 < v4 then goto L3dfea4;
  #L3dfe98.  call temp:= `remove`(v2, v5) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3dfe9e.  v5:= v5 + -1;
  #L3dfea2.  goto L3dfe94;
  #L3dfea4.  return @kind void;
}
