record `m5.l` @kind class @AccessFlag PUBLIC_ABSTRACT extends `m5.m` @kind class, `java.util.Map` @kind interface {
}
procedure `void` `<init>`(`m5.l` v0 @kind this) @signature `Lm5/l;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3de63c.  call `<init>`(v0) @signature `Lm5/m;.<init>:()V` @kind direct;
  #L3de642.  return @kind void;
}
procedure `java.util.Map` `b`() @signature `Lm5/l;.b:()Ljava/util/Map;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `c`(`m5.l` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lm5/l;.c:(Ljava/lang/Object;)Z` @AccessFlag PROTECTED {
    temp;

  #L3de4e4.  call temp:= `b`(v0, v1) @signature `Lm5/y;.b:(Ljava/util/Map;Ljava/lang/Object;)Z` @kind static;
  #L3de4ea.  v1:= temp;
  #L3de4ec.  return v1;
}
procedure `void` `clear`(`m5.l` v1 @kind this) @signature `Lm5/l;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de654.  call temp:= `b`(v1) @signature `Lm5/l;.b:()Ljava/util/Map;` @kind virtual;
  #L3de65a.  v0:= temp @kind object;
  #L3de65c.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3de662.  return @kind void;
}
procedure `boolean` `containsKey`(`m5.l` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm5/l;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de49c.  call temp:= `b`(v1) @signature `Lm5/l;.b:()Ljava/util/Map;` @kind virtual;
  #L3de4a2.  v0:= temp @kind object;
  #L3de4a4.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L3de4aa.  v2:= temp;
  #L3de4ac.  return v2;
}
procedure `boolean` `d`(`m5.l` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lm5/l;.d:(Ljava/lang/Object;)Z` @AccessFlag PROTECTED {
    temp;

  #L3de500.  call temp:= `c`(v0, v1) @signature `Lm5/y;.c:(Ljava/util/Map;Ljava/lang/Object;)Z` @kind static;
  #L3de506.  v1:= temp;
  #L3de508.  return v1;
}
procedure `int` `e`(`m5.l` v1 @kind this) @signature `Lm5/l;.e:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3de540.  call temp:= `entrySet`(v1) @signature `Lm5/l;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L3de546.  v0:= temp @kind object;
  #L3de548.  call temp:= `d`(v0) @signature `Lm5/p0;.d:(Ljava/util/Set;)I` @kind static;
  #L3de54e.  v0:= temp;
  #L3de550.  return v0;
}
procedure `java.util.Set` `entrySet`(`m5.l` v1 @kind this) @signature `Lm5/l;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de5f4.  call temp:= `b`(v1) @signature `Lm5/l;.b:()Ljava/util/Map;` @kind virtual;
  #L3de5fa.  v0:= temp @kind object;
  #L3de5fc.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3de602.  v0:= temp @kind object;
  #L3de604.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`m5.l` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm5/l;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de564.  call temp:= `b`(v1) @signature `Lm5/l;.b:()Ljava/util/Map;` @kind virtual;
  #L3de56a.  v0:= temp @kind object;
  #L3de56c.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3de572.  v2:= temp @kind object;
  #L3de574.  return v2 @kind object;
}
procedure `boolean` `isEmpty`(`m5.l` v1 @kind this) @signature `Lm5/l;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de4c0.  call temp:= `b`(v1) @signature `Lm5/l;.b:()Ljava/util/Map;` @kind virtual;
  #L3de4c6.  v0:= temp @kind object;
  #L3de4c8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3de4ce.  v0:= temp;
  #L3de4d0.  return v0;
}
procedure `java.util.Set` `keySet`(`m5.l` v1 @kind this) @signature `Lm5/l;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de618.  call temp:= `b`(v1) @signature `Lm5/l;.b:()Ljava/util/Map;` @kind virtual;
  #L3de61e.  v0:= temp @kind object;
  #L3de620.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3de626.  v0:= temp @kind object;
  #L3de628.  return v0 @kind object;
}
procedure `java.lang.Object` `put`(`m5.l` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lm5/l;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de588.  call temp:= `b`(v1) @signature `Lm5/l;.b:()Ljava/util/Map;` @kind virtual;
  #L3de58e.  v0:= temp @kind object;
  #L3de590.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3de596.  v2:= temp @kind object;
  #L3de598.  return v2 @kind object;
}
procedure `void` `putAll`(`m5.l` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lm5/l;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de674.  call temp:= `b`(v1) @signature `Lm5/l;.b:()Ljava/util/Map;` @kind virtual;
  #L3de67a.  v0:= temp @kind object;
  #L3de67c.  call `putAll`(v0, v2) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L3de682.  return @kind void;
}
procedure `java.lang.Object` `remove`(`m5.l` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm5/l;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de5ac.  call temp:= `b`(v1) @signature `Lm5/l;.b:()Ljava/util/Map;` @kind virtual;
  #L3de5b2.  v0:= temp @kind object;
  #L3de5b4.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3de5ba.  v2:= temp @kind object;
  #L3de5bc.  return v2 @kind object;
}
procedure `int` `size`(`m5.l` v1 @kind this) @signature `Lm5/l;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de51c.  call temp:= `b`(v1) @signature `Lm5/l;.b:()Ljava/util/Map;` @kind virtual;
  #L3de522.  v0:= temp @kind object;
  #L3de524.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3de52a.  v0:= temp;
  #L3de52c.  return v0;
}
procedure `java.util.Collection` `values`(`m5.l` v1 @kind this) @signature `Lm5/l;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de5d0.  call temp:= `b`(v1) @signature `Lm5/l;.b:()Ljava/util/Map;` @kind virtual;
  #L3de5d6.  v0:= temp @kind object;
  #L3de5d8.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L3de5de.  v0:= temp @kind object;
  #L3de5e0.  return v0 @kind object;
}
