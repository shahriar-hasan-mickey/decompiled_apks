record `m5.u$b` @kind class @AccessFlag  extends `m5.s0` @kind class {
  `boolean` `m5.u$b.o` @AccessFlag ;
  `java.lang.Object` `m5.u$b.p` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m5.u$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lm5/u$b;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dff6c.  v0.`m5.u$b.p` @type ^`java.lang.Object` := v1 @kind object;
  #L3dff70.  call `<init>`(v0) @signature `Lm5/s0;.<init>:()V` @kind direct;
  #L3dff76.  return @kind void;
}
procedure `boolean` `hasNext`(`m5.u$b` v1 @kind this) @signature `Lm5/u$b;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dff20.  v0:= v1.`m5.u$b.o` @type ^`boolean` @kind boolean;
  #L3dff24.  v0:= v0 ^~ 1;
  #L3dff28.  return v0;
}
procedure `java.lang.Object` `next`(`m5.u$b` v1 @kind this) @signature `Lm5/u$b;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dff3c.  v0:= v1.`m5.u$b.o` @type ^`boolean` @kind boolean;
  #L3dff40.  if v0 != 0 then goto L3dff50;
  #L3dff44.  v0:= 1I;
  #L3dff46.  v1.`m5.u$b.o` @type ^`boolean` := v0 @kind boolean;
  #L3dff4a.  v0:= v1.`m5.u$b.p` @type ^`java.lang.Object` @kind object;
  #L3dff4e.  return v0 @kind object;
  #L3dff50.  v0:= new `java.util.NoSuchElementException`;
  #L3dff54.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3dff5a.  throw v0;
}
