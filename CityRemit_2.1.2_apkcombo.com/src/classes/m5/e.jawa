record `m5.e` @kind class @AccessFlag ABSTRACT extends `java.util.Map$Entry` @kind interface {
}
procedure `void` `<init>`(`m5.e` v0 @kind this) @signature `Lm5/e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dd954.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dd95a.  return @kind void;
}
procedure `boolean` `equals`(`m5.e` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lm5/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3dd844.  v0:= instanceof @variable v4 @type ^`java.util.Map$Entry` @kind boolean;
  #L3dd848.  v1:= 0I;
  #L3dd84a.  if v0 == 0 then goto L3dd88c;
  #L3dd84e.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L3dd852.  call temp:= `getKey`(v3) @signature `Lm5/e;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L3dd858.  v0:= temp @kind object;
  #L3dd85a.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3dd860.  v2:= temp @kind object;
  #L3dd862.  call temp:= `a`(v0, v2) @signature `Ll5/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3dd868.  v0:= temp;
  #L3dd86a.  if v0 == 0 then goto L3dd88c;
  #L3dd86e.  call temp:= `getValue`(v3) @signature `Lm5/e;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L3dd874.  v0:= temp @kind object;
  #L3dd876.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3dd87c.  v4:= temp @kind object;
  #L3dd87e.  call temp:= `a`(v0, v4) @signature `Ll5/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3dd884.  v4:= temp;
  #L3dd886.  if v4 == 0 then goto L3dd88c;
  #L3dd88a.  v1:= 1I;
  #L3dd88c.  return v1;
}
procedure `java.lang.Object` `getKey`() @signature `Lm5/e;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getValue`() @signature `Lm5/e;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`m5.e` v3 @kind this) @signature `Lm5/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3dd8a0.  call temp:= `getKey`(v3) @signature `Lm5/e;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L3dd8a6.  v0:= temp @kind object;
  #L3dd8a8.  call temp:= `getValue`(v3) @signature `Lm5/e;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L3dd8ae.  v1:= temp @kind object;
  #L3dd8b0.  v2:= 0I;
  #L3dd8b2.  if v0 != 0 then goto L3dd8ba;
  #L3dd8b6.  v0:= 0I;
  #L3dd8b8.  goto L3dd8c2;
  #L3dd8ba.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3dd8c0.  v0:= temp;
  #L3dd8c2.  if v1 != 0 then goto L3dd8c8;
  #L3dd8c6.  goto L3dd8d0;
  #L3dd8c8.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3dd8ce.  v2:= temp;
  #L3dd8d0.  v0:= v0 ^~ v2 @kind int;
  #L3dd8d2.  return v0;
}
procedure `java.lang.String` `toString`(`m5.e` v4 @kind this) @signature `Lm5/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3dd8e4.  call temp:= `getKey`(v4) @signature `Lm5/e;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L3dd8ea.  v0:= temp @kind object;
  #L3dd8ec.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3dd8f2.  v0:= temp @kind object;
  #L3dd8f4.  call temp:= `getValue`(v4) @signature `Lm5/e;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L3dd8fa.  v1:= temp @kind object;
  #L3dd8fc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3dd902.  v1:= temp @kind object;
  #L3dd904.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3dd90a.  v2:= temp;
  #L3dd90c.  v2:= v2 + 1;
  #L3dd910.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3dd916.  v3:= temp;
  #L3dd918.  v2:= v2 + v3 @kind int;
  #L3dd91a.  v3:= new `java.lang.StringBuilder`;
  #L3dd91e.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3dd924.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd92a.  v0:= "=" @kind object;
  #L3dd92e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd934.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd93a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dd940.  v0:= temp @kind object;
  #L3dd942.  return v0 @kind object;
}
