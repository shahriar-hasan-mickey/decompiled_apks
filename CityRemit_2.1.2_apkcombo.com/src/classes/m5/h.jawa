record `m5.h` @kind class @AccessFlag FINAL {
}
procedure `void` `a`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lm5/h;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3ddd1c.  if v2 == 0 then goto L3ddd72;
  #L3ddd20.  if v3 == 0 then goto L3ddd26;
  #L3ddd24.  return @kind void;
  #L3ddd26.  v3:= new `java.lang.NullPointerException`;
  #L3ddd2a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3ddd30.  v2:= temp @kind object;
  #L3ddd32.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ddd38.  v0:= temp;
  #L3ddd3a.  v0:= v0 + 26;
  #L3ddd3e.  v1:= new `java.lang.StringBuilder`;
  #L3ddd42.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3ddd48.  v0:= "null value in entry: " @kind object;
  #L3ddd4c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddd52.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddd58.  v2:= "=null" @kind object;
  #L3ddd5c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddd62.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ddd68.  v2:= temp @kind object;
  #L3ddd6a.  call `<init>`(v3, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ddd70.  throw v3;
  #L3ddd72.  v2:= new `java.lang.NullPointerException`;
  #L3ddd76.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3ddd7c.  v3:= temp @kind object;
  #L3ddd7e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ddd84.  v0:= temp;
  #L3ddd86.  v0:= v0 + 24;
  #L3ddd8a.  v1:= new `java.lang.StringBuilder`;
  #L3ddd8e.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3ddd94.  v0:= "null key in entry: null=" @kind object;
  #L3ddd98.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddd9e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddda4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dddaa.  v3:= temp @kind object;
  #L3dddac.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dddb2.  throw v2;
}
procedure `int` `b`(`int` v3 , `java.lang.String` v4 @kind object) @signature `Lm5/h;.b:(ILjava/lang/String;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3ddcbc.  if v3 < 0 then goto L3ddcc2;
  #L3ddcc0.  return v3;
  #L3ddcc2.  v0:= new `java.lang.IllegalArgumentException`;
  #L3ddcc6.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3ddccc.  v1:= temp @kind object;
  #L3ddcce.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ddcd4.  v1:= temp;
  #L3ddcd6.  v1:= v1 + 40;
  #L3ddcda.  v2:= new `java.lang.StringBuilder`;
  #L3ddcde.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3ddce4.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddcea.  v4:= " cannot be negative but was: " @kind object;
  #L3ddcee.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddcf4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddcfa.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ddd00.  v3:= temp @kind object;
  #L3ddd02.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ddd08.  throw v0;
}
procedure `void` `c`(`boolean` v1 ) @signature `Lm5/h;.c:(Z)V` @AccessFlag STATIC {
    temp;
    v0;

  #L3dddc4.  v0:= "no calls to next() since the last call to remove()" @kind object;
  #L3dddc8.  call `o`(v1, v0) @signature `Ll5/j;.o:(ZLjava/lang/Object;)V` @kind static;
  #L3dddce.  return @kind void;
}
