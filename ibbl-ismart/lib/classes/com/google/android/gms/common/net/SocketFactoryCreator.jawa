record `com.google.android.gms.common.net.SocketFactoryCreator` @kind class @AccessFlag PUBLIC extends `com.google.android.gms.dynamic.RemoteCreator` @kind class {
}
global `com.google.android.gms.common.net.SocketFactoryCreator` `@@com.google.android.gms.common.net.SocketFactoryCreator.zzvr` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`com.google.android.gms.common.net.SocketFactoryCreator` v1 @kind this) @signature `Lcom/google/android/gms/common/net/SocketFactoryCreator;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `com.google.android.gms.common.net.SocketFactoryCreator` `getInstance`() @signature `Lcom/google/android/gms/common/net/SocketFactoryCreator;.getInstance:()Lcom/google/android/gms/common/net/SocketFactoryCreator;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.android.gms.common.net.ISocketFactoryCreator` `getRemoteCreator`(`com.google.android.gms.common.net.SocketFactoryCreator` v0 @kind this, `android.os.IBinder` v1 @kind object) @signature `Lcom/google/android/gms/common/net/SocketFactoryCreator;.getRemoteCreator:(Landroid/os/IBinder;)Lcom/google/android/gms/common/net/ISocketFactoryCreator;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.Object` `getRemoteCreator`(`com.google.android.gms.common.net.SocketFactoryCreator` v0 @kind this, `android.os.IBinder` v1 @kind object) @signature `Lcom/google/android/gms/common/net/SocketFactoryCreator;.getRemoteCreator:(Landroid/os/IBinder;)Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {

  # return;
}
procedure `javax.net.ssl.SSLSocketFactory` `makeSocketFactory`(`com.google.android.gms.common.net.SocketFactoryCreator` v1 @kind this, `android.content.Context` v2 @kind object, `javax.net.ssl.KeyManager`[] v3 @kind object, `javax.net.ssl.TrustManager`[] v4 @kind object, `boolean` v5 ) @signature `Lcom/google/android/gms/common/net/SocketFactoryCreator;.makeSocketFactory:(Landroid/content/Context;[Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Z)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {

  # return;
}
procedure `javax.net.ssl.SSLSocketFactory` `makeSocketFactoryWithCacheDir`(`com.google.android.gms.common.net.SocketFactoryCreator` v1 @kind this, `android.content.Context` v2 @kind object, `javax.net.ssl.KeyManager`[] v3 @kind object, `javax.net.ssl.TrustManager`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/google/android/gms/common/net/SocketFactoryCreator;.makeSocketFactoryWithCacheDir:(Landroid/content/Context;[Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/lang/String;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {

  # return;
}
