record `org.apache.cordova.filetransfer.FileTransfer$SimpleTrackingInputStream` @kind class @AccessFlag  extends `org.apache.cordova.filetransfer.FileTransfer$TrackingInputStream` @kind class {
  `long` `org.apache.cordova.filetransfer.FileTransfer$SimpleTrackingInputStream.bytesRead` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.apache.cordova.filetransfer.FileTransfer$SimpleTrackingInputStream` v2 @kind this, `java.io.InputStream` v3 @kind object) @signature `Lorg/apache/cordova/filetransfer/FileTransfer$SimpleTrackingInputStream;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `updateBytesRead`(`org.apache.cordova.filetransfer.FileTransfer$SimpleTrackingInputStream` v4 @kind this, `int` v5 ) @signature `Lorg/apache/cordova/filetransfer/FileTransfer$SimpleTrackingInputStream;.updateBytesRead:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `getTotalRawBytesRead`(`org.apache.cordova.filetransfer.FileTransfer$SimpleTrackingInputStream` v2 @kind this) @signature `Lorg/apache/cordova/filetransfer/FileTransfer$SimpleTrackingInputStream;.getTotalRawBytesRead:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`org.apache.cordova.filetransfer.FileTransfer$SimpleTrackingInputStream` v1 @kind this) @signature `Lorg/apache/cordova/filetransfer/FileTransfer$SimpleTrackingInputStream;.read:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`org.apache.cordova.filetransfer.FileTransfer$SimpleTrackingInputStream` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/apache/cordova/filetransfer/FileTransfer$SimpleTrackingInputStream;.read:([BII)I` @AccessFlag PUBLIC {

  # return;
}
