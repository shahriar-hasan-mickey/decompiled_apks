record `android.support.graphics.drawable.VectorDrawableCompat` @kind class @AccessFlag PUBLIC extends `android.support.graphics.drawable.VectorDrawableCommon` @kind class {
  `boolean` `android.support.graphics.drawable.VectorDrawableCompat.mAllowCaching` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable$ConstantState` `android.support.graphics.drawable.VectorDrawableCompat.mCachedConstantStateDelegate` @AccessFlag PRIVATE;
  `android.graphics.ColorFilter` `android.support.graphics.drawable.VectorDrawableCompat.mColorFilter` @AccessFlag PRIVATE;
  `boolean` `android.support.graphics.drawable.VectorDrawableCompat.mMutated` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `android.support.graphics.drawable.VectorDrawableCompat.mTintFilter` @AccessFlag PRIVATE;
  `android.graphics.Rect` `android.support.graphics.drawable.VectorDrawableCompat.mTmpBounds` @AccessFlag PRIVATE_FINAL;
  `float`[] `android.support.graphics.drawable.VectorDrawableCompat.mTmpFloats` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Matrix` `android.support.graphics.drawable.VectorDrawableCompat.mTmpMatrix` @AccessFlag PRIVATE_FINAL;
  `android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` `android.support.graphics.drawable.VectorDrawableCompat.mVectorState` @AccessFlag PRIVATE;
}
global `boolean` `@@android.support.graphics.drawable.VectorDrawableCompat.DBG_VECTOR_DRAWABLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.PorterDuff$Mode` `@@android.support.graphics.drawable.VectorDrawableCompat.DEFAULT_TINT_MODE` @AccessFlag STATIC_FINAL;
global `int` `@@android.support.graphics.drawable.VectorDrawableCompat.LINECAP_BUTT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@android.support.graphics.drawable.VectorDrawableCompat.LINECAP_ROUND` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@android.support.graphics.drawable.VectorDrawableCompat.LINECAP_SQUARE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@android.support.graphics.drawable.VectorDrawableCompat.LINEJOIN_BEVEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@android.support.graphics.drawable.VectorDrawableCompat.LINEJOIN_MITER` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@android.support.graphics.drawable.VectorDrawableCompat.LINEJOIN_ROUND` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@android.support.graphics.drawable.VectorDrawableCompat.LOGTAG` @AccessFlag STATIC_FINAL;
global `int` `@@android.support.graphics.drawable.VectorDrawableCompat.MAX_CACHED_BITMAP_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@android.support.graphics.drawable.VectorDrawableCompat.SHAPE_CLIP_PATH` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@android.support.graphics.drawable.VectorDrawableCompat.SHAPE_GROUP` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@android.support.graphics.drawable.VectorDrawableCompat.SHAPE_PATH` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@android.support.graphics.drawable.VectorDrawableCompat.SHAPE_VECTOR` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`android.support.graphics.drawable.VectorDrawableCompat` v2 @kind this, `android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v3 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.<init>:(Landroid/support/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `applyAlpha`(`int` v2 , `float` v3 ) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.applyAlpha:(IF)I` @AccessFlag STATIC {

  # return;
}
procedure `android.support.graphics.drawable.VectorDrawableCompat` `create`(`android.content.res.Resources` v4 @kind object, `int` v5 , `android.content.res.Resources$Theme` v6 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.create:(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Landroid/support/graphics/drawable/VectorDrawableCompat;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `android.support.graphics.drawable.VectorDrawableCompat` `createFromXmlInner`(`android.content.res.Resources` v1 @kind object, `org.xmlpull.v1.XmlPullParser` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `android.content.res.Resources$Theme` v4 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.createFromXmlInner:(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Landroid/support/graphics/drawable/VectorDrawableCompat;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `inflateInternal`(`android.support.graphics.drawable.VectorDrawableCompat` v9 @kind this, `android.content.res.Resources` v10 @kind object, `org.xmlpull.v1.XmlPullParser` v11 @kind object, `android.util.AttributeSet` v12 @kind object, `android.content.res.Resources$Theme` v13 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.inflateInternal:(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `needMirroring`(`android.support.graphics.drawable.VectorDrawableCompat` v3 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.needMirroring:()Z` @AccessFlag PRIVATE {

  # return;
}
procedure `android.graphics.PorterDuff$Mode` `parseTintModeCompat`(`int` v1 , `android.graphics.PorterDuff$Mode` v2 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.parseTintModeCompat:(ILandroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuff$Mode;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `printGroupTree`(`android.support.graphics.drawable.VectorDrawableCompat` v5 @kind this, `android.support.graphics.drawable.VectorDrawableCompat$VGroup` v6 @kind object, `int` v7 ) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.printGroupTree:(Landroid/support/graphics/drawable/VectorDrawableCompat$VGroup;I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `updateStateFromTypedArray`(`android.support.graphics.drawable.VectorDrawableCompat` v5 @kind this, `android.content.res.TypedArray` v6 @kind object, `org.xmlpull.v1.XmlPullParser` v7 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.updateStateFromTypedArray:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `applyTheme`(`android.support.graphics.drawable.VectorDrawableCompat` v0 @kind this, `android.content.res.Resources$Theme` v1 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.applyTheme:(Landroid/content/res/Resources$Theme;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `canApplyTheme`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.canApplyTheme:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `clearColorFilter`(`android.support.graphics.drawable.VectorDrawableCompat` v0 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.clearColorFilter:()V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `draw`(`android.support.graphics.drawable.VectorDrawableCompat` v9 @kind this, `android.graphics.Canvas` v10 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getAlpha`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getAlpha:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getChangingConfigurations`(`android.support.graphics.drawable.VectorDrawableCompat` v2 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getChangingConfigurations:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.ColorFilter` `getColorFilter`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `android.graphics.drawable.Drawable$ConstantState` `getConstantState`(`android.support.graphics.drawable.VectorDrawableCompat` v2 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getConstantState:()Landroid/graphics/drawable/Drawable$ConstantState;` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.drawable.Drawable` `getCurrent`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getCurrent:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `getIntrinsicHeight`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getIntrinsicHeight:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getIntrinsicWidth`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getIntrinsicWidth:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMinimumHeight`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getMinimumHeight:()I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `getMinimumWidth`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getMinimumWidth:()I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `getOpacity`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getOpacity:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `getPadding`(`android.support.graphics.drawable.VectorDrawableCompat` v0 @kind this, `android.graphics.Rect` v1 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getPadding:(Landroid/graphics/Rect;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `float` `getPixelSize`(`android.support.graphics.drawable.VectorDrawableCompat` v4 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getPixelSize:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getState`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getState:()[I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `getTargetByName`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getTargetByName:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `android.graphics.Region` `getTransparentRegion`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.getTransparentRegion:()Landroid/graphics/Region;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `inflate`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this, `android.content.res.Resources` v2 @kind object, `org.xmlpull.v1.XmlPullParser` v3 @kind object, `android.util.AttributeSet` v4 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.inflate:(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `inflate`(`android.support.graphics.drawable.VectorDrawableCompat` v2 @kind this, `android.content.res.Resources` v3 @kind object, `org.xmlpull.v1.XmlPullParser` v4 @kind object, `android.util.AttributeSet` v5 @kind object, `android.content.res.Resources$Theme` v6 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.inflate:(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `invalidateSelf`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.invalidateSelf:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isAutoMirrored`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.isAutoMirrored:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isStateful`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.isStateful:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `jumpToCurrentState`(`android.support.graphics.drawable.VectorDrawableCompat` v0 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.jumpToCurrentState:()V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `android.graphics.drawable.Drawable` `mutate`(`android.support.graphics.drawable.VectorDrawableCompat` v2 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.mutate:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onBoundsChange`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this, `android.graphics.Rect` v2 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.onBoundsChange:(Landroid/graphics/Rect;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `onStateChange`(`android.support.graphics.drawable.VectorDrawableCompat` v2 @kind this, `int`[] v3 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.onStateChange:([I)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `scheduleSelf`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this, `java.lang.Runnable` v2 @kind object, `long` v3 ) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.scheduleSelf:(Ljava/lang/Runnable;J)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setAllowCaching`(`android.support.graphics.drawable.VectorDrawableCompat` v0 @kind this, `boolean` v1 ) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.setAllowCaching:(Z)V` @AccessFlag  {

  # return;
}
procedure `void` `setAlpha`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this, `int` v2 ) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.setAlpha:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setAutoMirrored`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this, `boolean` v2 ) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.setAutoMirrored:(Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setChangingConfigurations`(`android.support.graphics.drawable.VectorDrawableCompat` v0 @kind this, `int` v1 ) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.setChangingConfigurations:(I)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `setColorFilter`(`android.support.graphics.drawable.VectorDrawableCompat` v0 @kind this, `int` v1 , `android.graphics.PorterDuff$Mode` v2 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.setColorFilter:(ILandroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `setColorFilter`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setFilterBitmap`(`android.support.graphics.drawable.VectorDrawableCompat` v0 @kind this, `boolean` v1 ) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.setFilterBitmap:(Z)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `setHotspot`(`android.support.graphics.drawable.VectorDrawableCompat` v0 @kind this, `float` v1 , `float` v2 ) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.setHotspot:(FF)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `setHotspotBounds`(`android.support.graphics.drawable.VectorDrawableCompat` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.setHotspotBounds:(IIII)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `setState`(`android.support.graphics.drawable.VectorDrawableCompat` v0 @kind this, `int`[] v1 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.setState:([I)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `setTint`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this, `int` v2 ) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.setTint:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setTintList`(`android.support.graphics.drawable.VectorDrawableCompat` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.setTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setTintMode`(`android.support.graphics.drawable.VectorDrawableCompat` v2 @kind this, `android.graphics.PorterDuff$Mode` v3 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.setTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `setVisible`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this, `boolean` v2 , `boolean` v3 ) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.setVisible:(ZZ)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `unscheduleSelf`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.unscheduleSelf:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.PorterDuffColorFilter` `updateTintFilter`(`android.support.graphics.drawable.VectorDrawableCompat` v1 @kind this, `android.graphics.PorterDuffColorFilter` v2 @kind object, `android.content.res.ColorStateList` v3 @kind object, `android.graphics.PorterDuff$Mode` v4 @kind object) @signature `Landroid/support/graphics/drawable/VectorDrawableCompat;.updateTintFilter:(Landroid/graphics/PorterDuffColorFilter;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag  {

  # return;
}
