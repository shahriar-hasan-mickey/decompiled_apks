record `android.arch.core.internal.FastSafeIterableMap` @kind class @AccessFlag PUBLIC extends `android.arch.core.internal.SafeIterableMap` @kind class {
  `java.util.HashMap` `android.arch.core.internal.FastSafeIterableMap.mHashMap` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`android.arch.core.internal.FastSafeIterableMap` v1 @kind this) @signature `Landroid/arch/core/internal/FastSafeIterableMap;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.Map$Entry` `ceil`(`android.arch.core.internal.FastSafeIterableMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Landroid/arch/core/internal/FastSafeIterableMap;.ceil:(Ljava/lang/Object;)Ljava/util/Map$Entry;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`android.arch.core.internal.FastSafeIterableMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Landroid/arch/core/internal/FastSafeIterableMap;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `android.arch.core.internal.SafeIterableMap$Entry` `get`(`android.arch.core.internal.FastSafeIterableMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Landroid/arch/core/internal/FastSafeIterableMap;.get:(Ljava/lang/Object;)Landroid/arch/core/internal/SafeIterableMap$Entry;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.Object` `putIfAbsent`(`android.arch.core.internal.FastSafeIterableMap` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Landroid/arch/core/internal/FastSafeIterableMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `remove`(`android.arch.core.internal.FastSafeIterableMap` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Landroid/arch/core/internal/FastSafeIterableMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
