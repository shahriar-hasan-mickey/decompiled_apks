{"version":3,"sources":["../../src/pages/add-credit-account-other-bank01/add-credit-account-other-bank01.module.ts","../../src/pages/add-credit-account-other-bank01/add-credit-account-other-bank01.ts"],"names":[],"mappings":"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","file":"99.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AddCreditAccountOtherBank01Page } from './add-credit-account-other-bank01';\n\n@NgModule({\n  declarations: [\n    AddCreditAccountOtherBank01Page,\n  ],\n  imports: [\n    IonicPageModule.forChild(AddCreditAccountOtherBank01Page),\n  ],\n\n  entryComponents: [\n    AddCreditAccountOtherBank01Page]\n})\nexport class AddCreditAccountOtherBank01PageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-credit-account-other-bank01/add-credit-account-other-bank01.module.ts","import {Component} from '@angular/core';\nimport {AlertController, IonicPage, NavController, NavParams} from 'ionic-angular';\nimport {TokenServiceProvider} from \"../../providers/token-service/token-service\";\nimport {LocalStorageProvider} from \"../../providers/local-storage/local-storage\";\nimport {MaskTokenProvider} from \"../../providers/mask-token/mask-token\";\nimport {CryptoParamUtilProvider} from \"../../providers/crypto-param-util/crypto-param-util\";\nimport {FundTransferOtherBankProvider} from \"../../providers/fund-transfer-other-bank/fund-transfer-other-bank\";\nimport {ConfigProvider} from \"../../providers/config/config\";\nimport {GoogleAnalyticsProvider} from \"../../providers/google-analytics/google-analytics\";\n\n\n@IonicPage()\n@Component({\n  selector: 'page-add-credit-account-other-bank01',\n  templateUrl: 'add-credit-account-other-bank01.html',\n})\nexport class AddCreditAccountOtherBank01Page {\n\n  //this veriable is for showing error\n  addCreditAccountOBError01 = \"\";\n\n  //this variable is for accessing param value\n  fundTransferType;\n  receiverType;\n\n  //this variable is for page operation\n  bankList;\n  bankCode;\n\n  branchCode;\n  branchList: any = [];\n\n  eftFlag;\n  listSize;\n\n  formVal = {recAcc: \"\", recName: \"\"};\n  recAcc;\n  recName;\n  encRoutingNo;\n  encRecAcc;\n  encRecName;\n\n  //For parameter pass to next page\n  eftBankDetail;\n  eftBranchDetail;\n  npsbBankDetail;\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public tokenService: TokenServiceProvider,\n              public storage: LocalStorageProvider,\n              public maskTokenUtil: MaskTokenProvider,\n              public cryptoUtil: CryptoParamUtilProvider,\n              public iTransferService: FundTransferOtherBankProvider,\n              public alertCtrl: AlertController,\n              public config: ConfigProvider,\n              public gaProvider: GoogleAnalyticsProvider) {\n\n    this.fundTransferType = this.navParams.get(\"fundTransferType\");\n    this.receiverType = this.navParams.get(\"receiverType\");\n    this.eftFlag = this.fundTransferType != this.config.transferTypeNPSB;\n\n    this.initBankList();\n  }\n\n  AddOBNewCreditAccount01Action = function () {\n\n    this.addCreditAccountOBError01 = \"\";\n    let flag = true;\n    this.recAcc = this.formVal.recAcc;\n    this.recName = this.formVal.recName;\n\n    if (this.bankCode == \"\" || typeof(this.bankCode) == \"undefined\") {\n      this.addCreditAccountOBError01 = \"Please select beneficiary bank.\";\n      flag = false;\n      return;\n    }\n\n    if (this.eftFlag) {\n      if (this.branchCode == \"\" || typeof(this.branchCode) == \"undefined\") {\n        this.addCreditAccountOBError01 = \"Please select beneficiary branch.\";\n        flag = false;\n        return;\n      }\n    }\n\n    if (this.recAcc == \"\" || typeof(this.recAcc) == \"undefined\") {\n      this.addCreditAccountOBError01 = \"Receiver account no can not be blank.\";\n      flag = false;\n      return;\n    }\n\n    if (this.recName == \"\" || typeof(this.recName) == \"undefined\") {\n      this.addCreditAccountOBError01 = \"Receiver name can not be blank.\";\n      flag = false;\n      return;\n    }\n\n    if (this.eftFlag) {\n      this.encRoutingNo = this.cryptoUtil.getEncryptVal(this.branchCode);\n    }\n    else {\n      this.encRoutingNo = this.cryptoUtil.getEncryptVal(this.bankCode);\n    }\n\n    if (flag) {\n      let appData = this.storage.retrieveFromStorage(\"appData\");\n      let unMaskRefToken = this.maskTokenUtil.getUnMaskVal(appData.refreshToken);\n      this.tokenService.getNewToken(unMaskRefToken)\n        .then(data => {\n          this.onNewTokenGenCompleteForAdd(data);\n        });\n    }\n  };\n\n  onNewTokenGenCompleteForAdd = function (data) {\n\n    if (data.status == 0) {\n      this.navCtrl.setRoot('ExpirePage');\n    }\n\n    else {\n      let is2Factor=\"0\";\n      let appData = this.storage.retrieveFromStorage(\"appData\");\n      let encTxService = this.cryptoUtil.getEncryptVal(this.fundTransferType);\n      let encRecType = this.cryptoUtil.getEncryptVal(this.receiverType);\n      this.encRecAcc = this.cryptoUtil.getEncryptVal(this.recAcc);\n      this.encRecName = this.cryptoUtil.getEncryptVal(this.recName);\n      let encTwoFactor = this.cryptoUtil.getEncryptVal(is2Factor);\n      let unMaskToken = this.maskTokenUtil.getUnMaskVal(appData.token);\n      this.iTransferService.initAddObFtBeneficiaryAccount(unMaskToken, appData.userId, appData.appId, encTxService, encRecType, this.encRoutingNo, this.encRecAcc, this.encRecName, encTwoFactor)\n        .then(data => {\n          this.OBCreditAccountAddComplete(data);\n        });\n    }\n  };\n\n  OBCreditAccountAddComplete = function (data) {\n\n    if (data.statusCode == 1) {\n\n      this.navCtrl.push('AddCreditAccountOtherBank02Page',\n        {\n          'subAccDetail': JSON.stringify(data.object),\n          'fundTransferType': this.fundTransferType,\n          'receiverType': this.receiverType,\n          'eftBankDetail': JSON.stringify(this.eftBankDetail),\n          'eftBranchDetail': JSON.stringify(this.eftBranchDetail),\n          'npsbBankDetail': JSON.stringify(this.npsbBankDetail),\n          'encRoutingNo': this.encRoutingNo,\n          'encRecAcc': this.encRecAcc,\n          'encRecName': this.encRecName\n        });\n    }\n  else\n    if (data.statusCode == 0) {\n      this.addCreditAccountOBError01 = data.note;\n    }\n\n    else {\n      this.addCreditAccountOBError01 = \"System Error Contact with Administrator.\";\n    }\n  };\n\n\n  initBankList = function () {\n    let appData = this.storage.retrieveFromStorage(\"appData\");\n    let unMaskRefToken = this.maskTokenUtil.getUnMaskVal(appData.refreshToken);\n    this.tokenService.getNewToken(unMaskRefToken)\n      .then(data => {\n        this.onNewTokenGenComplete(data);\n      });\n\n  };\n\n  onNewTokenGenComplete = function (data) {\n\n    if (data.status == 0) {\n      this.navCtrl.setRoot('ExpirePage');\n    }\n\n    else {\n      let appData = this.storage.retrieveFromStorage(\"appData\");\n      let unMaskToken = this.maskTokenUtil.getUnMaskVal(appData.token);\n      let encTxService = this.cryptoUtil.getEncryptVal(this.fundTransferType);\n      let encDescType = this.cryptoUtil.getEncryptVal(this.receiverType);\n      this.iTransferService.fetchBankList(unMaskToken, appData.userId, appData.appId, encTxService,encDescType)\n        .then(data => {\n          this.onFetchBankListComplete(data);\n        });\n    }\n  };\n\n  onFetchBankListComplete = function (data) {\n\n    if (data.statusCode == 1) {\n      this.bankList = data.object;\n      if (this.bankList == null) {\n        this.addCreditAccountOBError01 = \"You have no credit account subscription. Please subscribe first.\"\n      }\n      else {\n        this.listSize = this.bankList.length;\n      }\n    }\n\n    else if (data.statusCode == 0) {\n      this.addCreditAccountOBError01 = data.note;\n    }\n\n    else {\n      this.addCreditAccountOBError01 = \"System Error Contact with Administrator.\";\n    }\n  };\n\n  onEFTBankListChange(bankCode) {\n    this.branchList = [];\n    for (let i = 0; i < this.bankList.length; i++) {\n      let eachBank = this.bankList[i];\n      if (eachBank.bankCode == bankCode) {\n        this.branchCode = \"\";\n        this.branchList = eachBank.branches;\n        this.eftBankDetail = eachBank.bankName;\n      }\n    }\n    // console.log(this.eftBankDetail);\n  }\n\n  onNPSBBankListChange(code) {\n    this.branchList = [];\n    for (let i = 0; i < this.bankList.length; i++) {\n      let eachBank = this.bankList[i];\n      if (eachBank.code == code) {\n        this.npsbBankDetail = eachBank;\n      }\n    }\n    // console.log(this.npsbBankDetail);\n  }\n\n  onEFTBranchChange(code) {\n    this.eftBranchDetail = \"\";\n    for (let i = 0; i < this.branchList.length; i++) {\n      let eachBranch = this.branchList[i];\n      if (eachBranch.value == code) {\n        this.eftBranchDetail = eachBranch;\n      }\n    }\n    // console.log(this.eftBranchDetail);\n  }\n\n\n  ionViewDidLoad() {\n    this.gaProvider.startTrackerWithId(\"Add Beneficiary Other Bank\");\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-credit-account-other-bank01/add-credit-account-other-bank01.ts"],"sourceRoot":""}