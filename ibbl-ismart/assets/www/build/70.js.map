{"version":3,"sources":["../../src/pages/contact-list/contact-list.module.ts","../../src/pages/contact-list/contact-list.ts"],"names":[],"mappings":"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","file":"70.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ContactListPage } from './contact-list';\n\n@NgModule({\n  declarations: [\n    ContactListPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ContactListPage),\n  ],\n\n  entryComponents: [\n    ContactListPage\n  ]\n})\nexport class ContactListPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact-list/contact-list.module.ts","import {Component} from '@angular/core';\nimport {IonicPage, LoadingController, NavController, NavParams} from 'ionic-angular';\nimport {ContactFieldType, ContactFindOptions, Contacts} from '@ionic-native/contacts';\nimport {AlertProvider} from \"../../providers/alert/alert\";\n\n@IonicPage()\n@Component({\n  selector: 'page-contact-list',\n  templateUrl: 'contact-list.html',\n})\nexport class ContactListPage {\n\n  //for fetching ionic contact\n  contactsFound;\n  contactSelect;\n  loadingElem;\n  bdContactLength=11;\n  accountNo;\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public contact: Contacts,\n              public loadingCtrl: LoadingController,\n              public alertProvider : AlertProvider) {\n\n    this.accountNo = this.navParams.get(\"accountNo\");\n    this.loadContactList();\n  }\n\n\n  loadContactList = function () {\n    // let fields: ContactFieldType[] = ['displayName', 'phoneNumbers', 'name', 'emails'];\n    let fields: ContactFieldType[] = ['displayName', 'phoneNumbers'];\n    const options = new ContactFindOptions();\n    options.multiple = true;\n    options.hasPhoneNumber = true;\n    options.filter = \"\";\n\n    this.loadingElem = this.loadingCtrl.create({\n      spinner: 'bubbles',\n      content: 'Getting contact list please wait...'\n    });\n    this.loadingElem.present();\n\n    this.contact.find(fields, options)\n      .then(data => {\n        this.contactsFound = data;\n        this.loadingElem.dismiss();\n      });\n  };\n\n\n  findContact(ev: any) {\n    // let fields: ContactFieldType[] = ['displayName', 'phoneNumbers', 'name', 'emails'];\n    let fields: ContactFieldType[] = ['displayName', 'phoneNumbers'];\n    const options = new ContactFindOptions();\n    options.multiple = true;\n    options.hasPhoneNumber = true;\n    options.filter = ev.target.value;\n    this.contact.find(fields, options).then((contact) => {\n      this.contactsFound = contact;\n    });\n    if (this.contactsFound.length == 0) {\n      this.contactsFound.push({\n        displayName: 'No Contacts found'\n      });\n    }\n  }\n\n  openIt(item) {\n    this.contactSelect = item.value;\n    this.contactSelect=this.contactSelect.split(' ').join('');\n    this.contactSelect=this.contactSelect.split('-').join('');\n    let length=this.contactSelect.length;\n    if(length<this.bdContactLength){\n      let alertHead= \"Alert !\";\n      let message = \"Invalid Mobile number. Please select valid one.\";\n      this.alertProvider.showAlert(alertHead, message, 20000);\n      return;\n    }\n\n    if(length>this.bdContactLength){\n      let extraDigit=length - this.bdContactLength;\n      this.contactSelect= this.contactSelect.substr(extraDigit,this.bdContactLength);\n    }\n\n    this.navCtrl.pop({animate: false});\n    this.navCtrl.pop({animate: false});\n    this.navCtrl.push('IRecharge02Page', {'accountNo': this.accountNo, 'mobileNo' : this.contactSelect});\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ContactListPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact-list/contact-list.ts"],"sourceRoot":""}