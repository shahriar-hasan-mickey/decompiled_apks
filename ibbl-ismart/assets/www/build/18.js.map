{"version":3,"sources":["../../src/pages/user-login02/user-login02.module.ts","../../src/pages/user-login02/user-login02.ts"],"names":[],"mappings":"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","file":"18.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {IonicPageModule} from 'ionic-angular';\nimport {UserLogin02Page} from './user-login02';\n\n@NgModule({\n  declarations: [\n    UserLogin02Page,\n  ],\n  imports: [\n    IonicPageModule.forChild(UserLogin02Page),\n  ],\n\n  entryComponents: [\n    UserLogin02Page\n  ]\n})\nexport class UserLogin02PageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user-login02/user-login02.module.ts","import {Component} from '@angular/core';\nimport {IonicPage, NavController, NavParams} from 'ionic-angular';\nimport {MaskTokenProvider} from \"../../providers/mask-token/mask-token\";\nimport {LocalStorageProvider} from \"../../providers/local-storage/local-storage\";\nimport {TokenServiceProvider} from \"../../providers/token-service/token-service\";\nimport {Device} from '@ionic-native/device';\nimport {CryptoParamUtilProvider} from \"../../providers/crypto-param-util/crypto-param-util\";\nimport {AuthServiceProvider} from \"../../providers/auth-service/auth-service\";\nimport {ConfigProvider} from \"../../providers/config/config\";\n\n\n@IonicPage()\n@Component({\n  selector: 'page-user-login02',\n  templateUrl: 'user-login02.html',\n})\nexport class UserLogin02Page {\n\n  param;\n  loginError02;\n  oneTimePass = \"\";\n  appId = \"\";\n  userID=\"\";\n  account: { OTP: string } = {OTP: ''};\n  version;\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public storage: LocalStorageProvider,\n              public tokenService: TokenServiceProvider,\n              public ionDevice: Device,\n              public authService: AuthServiceProvider,\n              public cryptoUtil: CryptoParamUtilProvider,\n              public maskTokenUtil: MaskTokenProvider,\n              public config : ConfigProvider) {\n\n    this.param = navParams.get(\"param\");\n    // alert(\"Value in 02\" + this.param);\n    this.userID = this.param.userId;\n    this.account.OTP = \"\";\n    this.appId = this.param.appId;\n    this.version=config.iSmartVersion;\n  }\n\n  public userLogin02Action() {\n    let otpExp = new RegExp(\"^[0-9]{6,10}\");\n    let flag = true;\n\n    if (this.account.OTP == \"\" || typeof(this.account.OTP) == \"undefined\") {\n      this.loginError02 = \"Please Enter OTP.\"\n      flag = false;\n      return;\n    }\n    if (!otpExp.test(this.account.OTP)) {\n      this.loginError02 = \"Invalid OTP!, Please Provide Correct OTP.\"\n      flag = false;\n      this.account.OTP = \"\";\n      return;\n    }\n\n    if (flag) {\n      this.oneTimePass = this.account.OTP;\n      //CALL REFRESH TOKEN SERVICE HERE\n      let appData = this.storage.retrieveFromStorage(\"appData\");\n      let unMaskRefToken = this.maskTokenUtil.getUnMaskVal(appData.refreshToken);\n      this.tokenService.getNewToken(unMaskRefToken)\n        .then(data => {\n          this.onNewTokenGenComplete(data);\n        });\n    }\n  }\n\n  onNewTokenGenComplete = function (data) {\n    if (data.status == 0) {\n      this.navCtrl.setRoot('ExpirePage');\n    }\n\n    else {\n      let model = this.ionDevice.model;\n      let encModel = this.cryptoUtil.getEncryptVal(model);\n      let manufacturer = this.ionDevice.manufacturer;\n      let encManufacturer = this.cryptoUtil.getEncryptVal(manufacturer);\n      let encOTP = this.cryptoUtil.getEncryptVal(this.oneTimePass);\n      let appData = this.storage.retrieveFromStorage(\"appData\");\n      let unMaskToken = this.maskTokenUtil.getUnMaskVal(appData.token);\n\n      this.authService.validateOTP(appData.userId, this.appId, unMaskToken, encOTP, encModel, encManufacturer)\n        .then(data => {\n          this.onOTPValidateComplete(data);\n        });\n    }\n  };\n\n  onOTPValidateComplete = function (data) {\n\n    if (data.enrollStatus == 1) {\n      //$log.info(\"Data base Value before status Update : \" + JSON.stringify(dbVal));\n      let dbVal = this.storage.retrieveFromStorage(\"appData\");\n      dbVal.status = 802;\n      this.storage.insertIntoStorage('appData', dbVal);\n      let param = {\n        'userId': this.userID,\n        'appId': this.appId\n      };\n      this.navCtrl.push('UserLogin03Page', {\"param\": param});\n    }\n\n    else if (data.enrollStatus == 0) {\n      this.loginError02 = data.note;\n      this.account = {OTP: \"\"};\n    }\n\n    else {\n      this.loginError02 = \"OTP Validation Failed. Contact with Administrator.\";\n      this.account = {OTP: \"\"};\n    }\n  };\n\n\n  ionViewDidLoad() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user-login02/user-login02.ts"],"sourceRoot":""}