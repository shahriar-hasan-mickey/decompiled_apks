record `cordova.plugins.Diagnostic_Camera` @kind class @AccessFlag PUBLIC extends `org.apache.cordova.CordovaPlugin` @kind class {
  `org.apache.cordova.CallbackContext` `cordova.plugins.Diagnostic_Camera.currentContext` @AccessFlag PROTECTED;
  `cordova.plugins.Diagnostic` `cordova.plugins.Diagnostic_Camera.diagnostic` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@cordova.plugins.Diagnostic_Camera.TAG` @AccessFlag PUBLIC_STATIC_FINAL;
global `cordova.plugins.Diagnostic_Camera` `@@cordova.plugins.Diagnostic_Camera.instance` @AccessFlag PUBLIC_STATIC;
procedure `void` `<clinit>`() @signature `Lcordova/plugins/Diagnostic_Camera;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L2211e4.  return @kind void;
}
procedure `void` `<init>`(`cordova.plugins.Diagnostic_Camera` v0 @kind this) @signature `Lcordova/plugins/Diagnostic_Camera;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2211f8.  call `<init>`(v0) @signature `Lorg/apache/cordova/CordovaPlugin;.<init>:()V` @kind direct;
  #L2211fe.  return @kind void;
}
procedure `boolean` `execute`(`cordova.plugins.Diagnostic_Camera` v1 @kind this, `java.lang.String` v2 @kind object, `org.json.JSONArray` v3 @kind object, `org.apache.cordova.CallbackContext` v4 @kind object) @signature `Lcordova/plugins/Diagnostic_Camera;.execute:(Ljava/lang/String;Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22112c.  v1.`cordova.plugins.Diagnostic_Camera.currentContext` @type ^`org.apache.cordova.CallbackContext` := v4 @kind object;
  #L221130.  v3:= 0I;
  #L221132.  v0:= "isCameraPresent" @kind object;
  #L221136.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22113c.  v2:= temp;
  #L22113e.  if v2 == 0 then goto L22115e;
  #L221142.  call temp:= `isCameraPresent`(v1) @signature `Lcordova/plugins/Diagnostic_Camera;.isCameraPresent:()Z` @kind virtual;
  #L221148.  v2:= temp;
  #L22114a.  v0:= 1I;
  #L22114c.  if v2 == 0 then goto L221154;
  #L221150.  v2:= 1I;
  #L221152.  goto L221156;
  #L221154.  v2:= 0I;
  #L221156.  call `success`(v4, v2) @signature `Lorg/apache/cordova/CallbackContext;.success:(I)V` @kind virtual;
  #L22115c.  return v0;
  #L22115e.  v2:= v1.`cordova.plugins.Diagnostic_Camera.diagnostic` @type ^`cordova.plugins.Diagnostic` @kind object;
  #L221162.  v4:= "Invalid action" @kind object;
  #L221166.  call `handleError`(v2, v4) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;)V` @kind virtual;
  #L22116c.  return v3;
  #L22116e.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L221170.  v4:= v1.`cordova.plugins.Diagnostic_Camera.diagnostic` @type ^`cordova.plugins.Diagnostic` @kind object;
  #L221174.  v0:= "Exception occurred: " @kind object;
  #L221178.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L22117e.  v2:= temp @kind object;
  #L221180.  call temp:= `concat`(v0, v2) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L221186.  v2:= temp @kind object;
  #L221188.  call `handleError`(v4, v2) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;)V` @kind virtual;
  #L22118e.  return v3;
  catch `java.lang.Exception` @[L221132..L22116c] goto L22116e;
}
procedure `void` `initialize`(`cordova.plugins.Diagnostic_Camera` v2 @kind this, `org.apache.cordova.CordovaInterface` v3 @kind object, `org.apache.cordova.CordovaWebView` v4 @kind object) @signature `Lcordova/plugins/Diagnostic_Camera;.initialize:(Lorg/apache/cordova/CordovaInterface;Lorg/apache/cordova/CordovaWebView;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L221210.  v0:= "Diagnostic_Camera" @kind object;
  #L221214.  v1:= "initialize()" @kind object;
  #L221218.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L22121e.  `@@cordova.plugins.Diagnostic_Camera.instance` @type ^`cordova.plugins.Diagnostic_Camera` := v2 @kind object;
  #L221222.  call temp:= `getInstance`() @signature `Lcordova/plugins/Diagnostic;.getInstance:()Lcordova/plugins/Diagnostic;` @kind static;
  #L221228.  v0:= temp @kind object;
  #L22122a.  v2.`cordova.plugins.Diagnostic_Camera.diagnostic` @type ^`cordova.plugins.Diagnostic` := v0 @kind object;
  #L22122e.  call `initialize`(v2, v3, v4) @signature `Lorg/apache/cordova/CordovaPlugin;.initialize:(Lorg/apache/cordova/CordovaInterface;Lorg/apache/cordova/CordovaWebView;)V` @kind super;
  #L221234.  return @kind void;
}
procedure `boolean` `isCameraPresent`(`cordova.plugins.Diagnostic_Camera` v2 @kind this) @signature `Lcordova/plugins/Diagnostic_Camera;.isCameraPresent:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2211b0.  v0:= v2.`cordova.plugins.Diagnostic_Camera.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L2211b4.  call temp:= `getActivity`(v0) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroid/app/Activity;` @kind interface;
  #L2211ba.  v0:= temp @kind object;
  #L2211bc.  call temp:= `getPackageManager`(v0) @signature `Landroid/app/Activity;.getPackageManager:()Landroid/content/pm/PackageManager;` @kind virtual;
  #L2211c2.  v0:= temp @kind object;
  #L2211c4.  v1:= "android.hardware.camera" @kind object;
  #L2211c8.  call temp:= `hasSystemFeature`(v0, v1) @signature `Landroid/content/pm/PackageManager;.hasSystemFeature:(Ljava/lang/String;)Z` @kind virtual;
  #L2211ce.  v0:= temp;
  #L2211d0.  return v0;
}
