record `cordova.plugins.Diagnostic` @kind class @AccessFlag PUBLIC extends `org.apache.cordova.CordovaPlugin` @kind class {
  `android.content.Context` `cordova.plugins.Diagnostic.applicationContext` @AccessFlag PROTECTED;
  `java.util.HashMap` `cordova.plugins.Diagnostic.callbackContexts` @AccessFlag PROTECTED;
  `org.apache.cordova.CallbackContext` `cordova.plugins.Diagnostic.currentContext` @AccessFlag PROTECTED;
  `boolean` `cordova.plugins.Diagnostic.debugEnabled` @AccessFlag ;
  `android.content.SharedPreferences$Editor` `cordova.plugins.Diagnostic.editor` @AccessFlag PROTECTED;
  `java.util.HashMap` `cordova.plugins.Diagnostic.permissionStatuses` @AccessFlag PROTECTED;
  `android.content.SharedPreferences` `cordova.plugins.Diagnostic.sharedPref` @AccessFlag PROTECTED;
}
global `java.lang.String` `@@cordova.plugins.Diagnostic.CPU_ARCH_ARMv6` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@cordova.plugins.Diagnostic.CPU_ARCH_ARMv7` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@cordova.plugins.Diagnostic.CPU_ARCH_ARMv8` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@cordova.plugins.Diagnostic.CPU_ARCH_MIPS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@cordova.plugins.Diagnostic.CPU_ARCH_MIPS_64` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@cordova.plugins.Diagnostic.CPU_ARCH_UNKNOWN` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@cordova.plugins.Diagnostic.CPU_ARCH_X86` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@cordova.plugins.Diagnostic.CPU_ARCH_X86_64` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Integer` `@@cordova.plugins.Diagnostic.GET_EXTERNAL_SD_CARD_DETAILS_PERMISSION_REQUEST` @AccessFlag PROTECTED_STATIC_FINAL;
global `java.lang.String` `@@cordova.plugins.Diagnostic.STATUS_DENIED` @AccessFlag PROTECTED_STATIC_FINAL;
global `java.lang.String` `@@cordova.plugins.Diagnostic.STATUS_DENIED_ALWAYS` @AccessFlag PROTECTED_STATIC_FINAL;
global `java.lang.String` `@@cordova.plugins.Diagnostic.STATUS_GRANTED` @AccessFlag PROTECTED_STATIC_FINAL;
global `java.lang.String` `@@cordova.plugins.Diagnostic.STATUS_NOT_REQUESTED` @AccessFlag PROTECTED_STATIC_FINAL;
global `java.lang.String` `@@cordova.plugins.Diagnostic.TAG` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@cordova.plugins.Diagnostic.externalStorageClassName` @AccessFlag PROTECTED_STATIC_FINAL;
global `cordova.plugins.Diagnostic` `@@cordova.plugins.Diagnostic.instance` @AccessFlag PUBLIC_STATIC;
global `java.util.Map` `@@cordova.plugins.Diagnostic.permissionsMap` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcordova/plugins/Diagnostic;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L223274.  v0:= new `java.util.HashMap`;
  #L223278.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L22327e.  v1:= "READ_CALENDAR" @kind object;
  #L223282.  v2:= "android.permission.READ_CALENDAR" @kind object;
  #L223286.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L22328c.  v1:= "WRITE_CALENDAR" @kind object;
  #L223290.  v2:= "android.permission.WRITE_CALENDAR" @kind object;
  #L223294.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L22329a.  v1:= "CAMERA" @kind object;
  #L22329e.  v2:= "android.permission.CAMERA" @kind object;
  #L2232a2.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2232a8.  v1:= "READ_CONTACTS" @kind object;
  #L2232ac.  v2:= "android.permission.READ_CONTACTS" @kind object;
  #L2232b0.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2232b6.  v1:= "WRITE_CONTACTS" @kind object;
  #L2232ba.  v2:= "android.permission.WRITE_CONTACTS" @kind object;
  #L2232be.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2232c4.  v1:= "GET_ACCOUNTS" @kind object;
  #L2232c8.  v2:= "android.permission.GET_ACCOUNTS" @kind object;
  #L2232cc.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2232d2.  v1:= "ACCESS_FINE_LOCATION" @kind object;
  #L2232d6.  v2:= "android.permission.ACCESS_FINE_LOCATION" @kind object;
  #L2232da.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2232e0.  v1:= "ACCESS_COARSE_LOCATION" @kind object;
  #L2232e4.  v2:= "android.permission.ACCESS_COARSE_LOCATION" @kind object;
  #L2232e8.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2232ee.  v1:= "RECORD_AUDIO" @kind object;
  #L2232f2.  v2:= "android.permission.RECORD_AUDIO" @kind object;
  #L2232f6.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2232fc.  v1:= "READ_PHONE_STATE" @kind object;
  #L223300.  v2:= "android.permission.READ_PHONE_STATE" @kind object;
  #L223304.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L22330a.  v1:= "CALL_PHONE" @kind object;
  #L22330e.  v2:= "android.permission.CALL_PHONE" @kind object;
  #L223312.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L223318.  v1:= "ADD_VOICEMAIL" @kind object;
  #L22331c.  v2:= "com.android.voicemail.permission.ADD_VOICEMAIL" @kind object;
  #L223320.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L223326.  v1:= "USE_SIP" @kind object;
  #L22332a.  v2:= "android.permission.USE_SIP" @kind object;
  #L22332e.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L223334.  v1:= "PROCESS_OUTGOING_CALLS" @kind object;
  #L223338.  v2:= "android.permission.PROCESS_OUTGOING_CALLS" @kind object;
  #L22333c.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L223342.  v1:= "SEND_SMS" @kind object;
  #L223346.  v2:= "android.permission.SEND_SMS" @kind object;
  #L22334a.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L223350.  v1:= "RECEIVE_SMS" @kind object;
  #L223354.  v2:= "android.permission.RECEIVE_SMS" @kind object;
  #L223358.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L22335e.  v1:= "READ_SMS" @kind object;
  #L223362.  v2:= "android.permission.READ_SMS" @kind object;
  #L223366.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L22336c.  v1:= "RECEIVE_WAP_PUSH" @kind object;
  #L223370.  v2:= "android.permission.RECEIVE_WAP_PUSH" @kind object;
  #L223374.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L22337a.  v1:= "RECEIVE_MMS" @kind object;
  #L22337e.  v2:= "android.permission.RECEIVE_MMS" @kind object;
  #L223382.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L223388.  v1:= "WRITE_EXTERNAL_STORAGE" @kind object;
  #L22338c.  v2:= "android.permission.WRITE_EXTERNAL_STORAGE" @kind object;
  #L223390.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L223396.  v1:= "READ_CALL_LOG" @kind object;
  #L22339a.  v2:= "android.permission.READ_CALL_LOG" @kind object;
  #L22339e.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2233a4.  v1:= "WRITE_CALL_LOG" @kind object;
  #L2233a8.  v2:= "android.permission.WRITE_CALL_LOG" @kind object;
  #L2233ac.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2233b2.  v1:= "READ_EXTERNAL_STORAGE" @kind object;
  #L2233b6.  v2:= "android.permission.READ_EXTERNAL_STORAGE" @kind object;
  #L2233ba.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2233c0.  v1:= "BODY_SENSORS" @kind object;
  #L2233c4.  v2:= "android.permission.BODY_SENSORS" @kind object;
  #L2233c8.  call `addBiDirMapEntry`(v0, v1, v2) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2233ce.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L2233d4.  v0:= temp @kind object;
  #L2233d6.  `@@cordova.plugins.Diagnostic.permissionsMap` @type ^`java.util.Map` := v0 @kind object;
  #L2233da.  v0:= 1000I;
  #L2233de.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2233e4.  v0:= temp @kind object;
  #L2233e6.  `@@cordova.plugins.Diagnostic.GET_EXTERNAL_SD_CARD_DETAILS_PERMISSION_REQUEST` @type ^`java.lang.Integer` := v0 @kind object;
  #L2233ea.  v0:= 0I;
  #L2233ec.  `@@cordova.plugins.Diagnostic.instance` @type ^`cordova.plugins.Diagnostic` := v0 @kind object;
  #L2233f0.  return @kind void;
}
procedure `void` `<init>`(`cordova.plugins.Diagnostic` v1 @kind this) @signature `Lcordova/plugins/Diagnostic;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L223404.  call `<init>`(v1) @signature `Lorg/apache/cordova/CordovaPlugin;.<init>:()V` @kind direct;
  #L22340a.  v0:= new `java.util.HashMap`;
  #L22340e.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L223414.  v1.`cordova.plugins.Diagnostic.callbackContexts` @type ^`java.util.HashMap` := v0 @kind object;
  #L223418.  v0:= new `java.util.HashMap`;
  #L22341c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L223422.  v1.`cordova.plugins.Diagnostic.permissionStatuses` @type ^`java.util.HashMap` := v0 @kind object;
  #L223426.  v0:= 0I;
  #L223428.  v1.`cordova.plugins.Diagnostic.debugEnabled` @type ^`boolean` := v0 @kind boolean;
  #L22342c.  return @kind void;
}
procedure `void` `addBiDirMapEntry`(`java.util.Map` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcordova/plugins/Diagnostic;.addBiDirMapEntry:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PROTECTED_STATIC {
    temp;

  #L223598.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L22359e.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2235a4.  return @kind void;
}
procedure `cordova.plugins.Diagnostic` `getInstance`() @signature `Lcordova/plugins/Diagnostic;.getInstance:()Lcordova/plugins/Diagnostic;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L222ea4.  v0:= `@@cordova.plugins.Diagnostic.instance` @type ^`cordova.plugins.Diagnostic` @kind object;
  #L222ea8.  return v0 @kind object;
}
procedure `org.json.JSONObject` `_getPermissionsAuthorizationStatus`(`cordova.plugins.Diagnostic` v7 @kind this, `java.lang.String`[] v8 @kind object) @signature `Lcordova/plugins/Diagnostic;._getPermissionsAuthorizationStatus:([Ljava/lang/String;)Lorg/json/JSONObject;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L223164.  v0:= new `org.json.JSONObject`;
  #L223168.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L22316e.  v1:= 0I;
  #L223170.  v2:= length @variable v8;
  #L223172.  if v1 >= v2 then goto L223262;
  #L223176.  v2:= v8[v1] @kind object;
  #L22317a.  v3:= `@@cordova.plugins.Diagnostic.permissionsMap` @type ^`java.util.Map` @kind object;
  #L22317e.  call temp:= `containsKey`(v3, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L223184.  v3:= temp;
  #L223186.  if v3 == 0 then goto L22322a;
  #L22318a.  v3:= `@@cordova.plugins.Diagnostic.permissionsMap` @type ^`java.util.Map` @kind object;
  #L22318e.  call temp:= `get`(v3, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L223194.  v3:= temp @kind object;
  #L223196.  v3:= (`java.lang.String`) v3 @kind object;
  #L22319a.  v4:= "Diagnostic" @kind object;
  #L22319e.  v5:= new `java.lang.StringBuilder`;
  #L2231a2.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2231a8.  v6:= "Get authorisation status for " @kind object;
  #L2231ac.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2231b2.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2231b8.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2231be.  v5:= temp @kind object;
  #L2231c0.  call temp:= `v`(v4, v5) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2231c6.  call temp:= `hasPermission`(v7, v3) @signature `Lcordova/plugins/Diagnostic;.hasPermission:(Ljava/lang/String;)Z` @kind virtual;
  #L2231cc.  v4:= temp;
  #L2231ce.  if v4 == 0 then goto L2231de;
  #L2231d2.  v3:= "GRANTED" @kind object;
  #L2231d6.  call temp:= `put`(v0, v2, v3) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L2231dc.  goto L223224;
  #L2231de.  v4:= v7.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L2231e2.  call temp:= `getActivity`(v4) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroid/app/Activity;` @kind interface;
  #L2231e8.  v4:= temp @kind object;
  #L2231ea.  call temp:= `shouldShowRequestPermissionRationale`(v7, v4, v3) @signature `Lcordova/plugins/Diagnostic;.shouldShowRequestPermissionRationale:(Landroid/app/Activity;Ljava/lang/String;)Z` @kind virtual;
  #L2231f0.  v3:= temp;
  #L2231f2.  if v3 != 0 then goto L22321a;
  #L2231f6.  call temp:= `isPermissionRequested`(v7, v2) @signature `Lcordova/plugins/Diagnostic;.isPermissionRequested:(Ljava/lang/String;)Z` @kind virtual;
  #L2231fc.  v3:= temp;
  #L2231fe.  if v3 == 0 then goto L22320e;
  #L223202.  v3:= "DENIED_ALWAYS" @kind object;
  #L223206.  call temp:= `put`(v0, v2, v3) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L22320c.  goto L223224;
  #L22320e.  v3:= "NOT_REQUESTED" @kind object;
  #L223212.  call temp:= `put`(v0, v2, v3) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L223218.  goto L223224;
  #L22321a.  v3:= "DENIED" @kind object;
  #L22321e.  call temp:= `put`(v0, v2, v3) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L223224.  v1:= v1 + 1;
  #L223228.  goto L223170;
  #L22322a.  v8:= new `java.lang.Exception`;
  #L22322e.  v0:= new `java.lang.StringBuilder`;
  #L223232.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L223238.  v1:= "Permission name '" @kind object;
  #L22323c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223242.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223248.  v1:= "' is not a valid permission" @kind object;
  #L22324c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223252.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L223258.  v0:= temp @kind object;
  #L22325a.  call `<init>`(v8, v0) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L223260.  throw v8;
  #L223262.  return v0 @kind object;
}
procedure `void` `_requestRuntimePermissions`(`cordova.plugins.Diagnostic` v7 @kind this, `org.json.JSONArray` v8 @kind object, `int` v9 ) @signature `Lcordova/plugins/Diagnostic;._requestRuntimePermissions:(Lorg/json/JSONArray;I)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L223440.  call temp:= `jsonArrayToStringArray`(v7, v8) @signature `Lcordova/plugins/Diagnostic;.jsonArrayToStringArray:(Lorg/json/JSONArray;)[Ljava/lang/String;` @kind virtual;
  #L223446.  v8:= temp @kind object;
  #L223448.  call temp:= `_getPermissionsAuthorizationStatus`(v7, v8) @signature `Lcordova/plugins/Diagnostic;._getPermissionsAuthorizationStatus:([Ljava/lang/String;)Lorg/json/JSONObject;` @kind virtual;
  #L22344e.  v8:= temp @kind object;
  #L223450.  v0:= new `org.json.JSONArray`;
  #L223454.  call `<init>`(v0) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L22345a.  v1:= 0I;
  #L22345c.  v2:= 0I;
  #L22345e.  call temp:= `names`(v8) @signature `Lorg/json/JSONObject;.names:()Lorg/json/JSONArray;` @kind virtual;
  #L223464.  v3:= temp @kind object;
  #L223466.  call temp:= `length`(v3) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L22346c.  v3:= temp;
  #L22346e.  if v2 >= v3 then goto L223546;
  #L223472.  call temp:= `names`(v8) @signature `Lorg/json/JSONObject;.names:()Lorg/json/JSONArray;` @kind virtual;
  #L223478.  v3:= temp @kind object;
  #L22347a.  call temp:= `getString`(v3, v2) @signature `Lorg/json/JSONArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L223480.  v3:= temp @kind object;
  #L223482.  call temp:= `getString`(v8, v3) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L223488.  v4:= temp @kind object;
  #L22348a.  v5:= "GRANTED" @kind object;
  #L22348e.  if v4 != v5 then goto L223496;
  #L223492.  v4:= 1I;
  #L223494.  goto L223498;
  #L223496.  v4:= 0I;
  #L223498.  if v4 == 0 then goto L2234fe;
  #L22349c.  v4:= "Diagnostic" @kind object;
  #L2234a0.  v5:= new `java.lang.StringBuilder`;
  #L2234a4.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2234aa.  v6:= "Permission already granted for " @kind object;
  #L2234ae.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2234b4.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2234ba.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2234c0.  v5:= temp @kind object;
  #L2234c2.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2234c8.  v4:= v7.`cordova.plugins.Diagnostic.permissionStatuses` @type ^`java.util.HashMap` @kind object;
  #L2234cc.  call temp:= `valueOf`(v9) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2234d2.  v5:= temp @kind object;
  #L2234d4.  call temp:= `get`(v4, v5) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2234da.  v4:= temp @kind object;
  #L2234dc.  v4:= (`org.json.JSONObject`) v4 @kind object;
  #L2234e0.  v5:= "GRANTED" @kind object;
  #L2234e4.  call temp:= `put`(v4, v3, v5) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L2234ea.  v3:= v7.`cordova.plugins.Diagnostic.permissionStatuses` @type ^`java.util.HashMap` @kind object;
  #L2234ee.  call temp:= `valueOf`(v9) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2234f4.  v5:= temp @kind object;
  #L2234f6.  call temp:= `put`(v3, v5, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2234fc.  goto L223540;
  #L2234fe.  v4:= `@@cordova.plugins.Diagnostic.permissionsMap` @type ^`java.util.Map` @kind object;
  #L223502.  call temp:= `get`(v4, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L223508.  v3:= temp @kind object;
  #L22350a.  v3:= (`java.lang.String`) v3 @kind object;
  #L22350e.  v4:= "Diagnostic" @kind object;
  #L223512.  v5:= new `java.lang.StringBuilder`;
  #L223516.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22351c.  v6:= "Requesting permission for " @kind object;
  #L223520.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223526.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22352c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L223532.  v5:= temp @kind object;
  #L223534.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L22353a.  call temp:= `put`(v0, v3) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L223540.  v2:= v2 + 1;
  #L223544.  goto L22345e;
  #L223546.  call temp:= `length`(v0) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L22354c.  v8:= temp;
  #L22354e.  if v8 <= 0 then goto L223570;
  #L223552.  v8:= "Diagnostic" @kind object;
  #L223556.  v1:= "Requesting permissions" @kind object;
  #L22355a.  call temp:= `v`(v8, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L223560.  call temp:= `jsonArrayToStringArray`(v7, v0) @signature `Lcordova/plugins/Diagnostic;.jsonArrayToStringArray:(Lorg/json/JSONArray;)[Ljava/lang/String;` @kind virtual;
  #L223566.  v8:= temp @kind object;
  #L223568.  call `requestPermissions`(v7, v7, v9, v8) @signature `Lcordova/plugins/Diagnostic;.requestPermissions:(Lorg/apache/cordova/CordovaPlugin;I[Ljava/lang/String;)V` @kind virtual;
  #L22356e.  goto L223584;
  #L223570.  v8:= "Diagnostic" @kind object;
  #L223574.  v0:= "No permissions to request: returning result" @kind object;
  #L223578.  call temp:= `d`(v8, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L22357e.  call `sendRuntimeRequestResult`(v7, v9) @signature `Lcordova/plugins/Diagnostic;.sendRuntimeRequestResult:(I)V` @kind virtual;
  #L223584.  return @kind void;
}
procedure `void` `clearRequest`(`cordova.plugins.Diagnostic` v1 @kind this, `int` v2 ) @signature `Lcordova/plugins/Diagnostic;.clearRequest:(I)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2235b8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2235be.  v2:= temp @kind object;
  #L2235c0.  v0:= v1.`cordova.plugins.Diagnostic.callbackContexts` @type ^`java.util.HashMap` @kind object;
  #L2235c4.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L2235ca.  v0:= temp;
  #L2235cc.  if v0 != 0 then goto L2235d2;
  #L2235d0.  return @kind void;
  #L2235d2.  v0:= v1.`cordova.plugins.Diagnostic.callbackContexts` @type ^`java.util.HashMap` @kind object;
  #L2235d6.  call temp:= `remove`(v0, v2) @signature `Ljava/util/HashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2235dc.  v0:= v1.`cordova.plugins.Diagnostic.permissionStatuses` @type ^`java.util.HashMap` @kind object;
  #L2235e0.  call temp:= `remove`(v0, v2) @signature `Ljava/util/HashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2235e6.  return @kind void;
}
procedure `void` `doColdRestart`(`cordova.plugins.Diagnostic` v8 @kind this) @signature `Lcordova/plugins/Diagnostic;.doColdRestart:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2235f8.  v0:= "Unable to cold restart application: " @kind object;
  #L2235fc.  v1:= "Cold restarting application" @kind object;
  #L223600.  call `logInfo`(v8, v1) @signature `Lcordova/plugins/Diagnostic;.logInfo:(Ljava/lang/String;)V` @kind virtual;
  #L223606.  v1:= v8.`cordova.plugins.Diagnostic.applicationContext` @type ^`android.content.Context` @kind object;
  #L22360a.  if v1 == 0 then goto L2236d2;
  #L22360e.  call temp:= `getPackageManager`(v1) @signature `Landroid/content/Context;.getPackageManager:()Landroid/content/pm/PackageManager;` @kind virtual;
  #L223614.  v2:= temp @kind object;
  #L223616.  if v2 == 0 then goto L2236a8;
  #L22361a.  call temp:= `getPackageName`(v1) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L223620.  v3:= temp @kind object;
  #L223622.  call temp:= `getLaunchIntentForPackage`(v2, v3) @signature `Landroid/content/pm/PackageManager;.getLaunchIntentForPackage:(Ljava/lang/String;)Landroid/content/Intent;` @kind virtual;
  #L223628.  v2:= temp @kind object;
  #L22362a.  if v2 == 0 then goto L22367e;
  #L22362e.  v3:= 223344I;
  #L223634.  v4:= 268435456I;
  #L223638.  call temp:= `getActivity`(v1, v3, v2, v4) @signature `Landroid/app/PendingIntent;.getActivity:(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;` @kind static;
  #L22363e.  v2:= temp @kind object;
  #L223640.  v3:= "alarm" @kind object;
  #L223644.  call temp:= `getSystemService`(v1, v3) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L22364a.  v1:= temp @kind object;
  #L22364c.  v1:= (`android.app.AlarmManager`) v1 @kind object;
  #L223650.  v3:= 1I;
  #L223652.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L223658.  v4:= temp @kind wide;
  #L22365a.  v6:= 100L;
  #L22365e.  v4:= v4 + v6 @kind long;
  #L223660.  call `set`(v1, v3, v4, v2) @signature `Landroid/app/AlarmManager;.set:(IJLandroid/app/PendingIntent;)V` @kind virtual;
  #L223666.  v1:= "Diagnostic" @kind object;
  #L22366a.  v2:= "Killing application for cold restart" @kind object;
  #L22366e.  call temp:= `i`(v1, v2) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L223674.  v1:= 0I;
  #L223676.  call `exit`(v1) @signature `Ljava/lang/System;.exit:(I)V` @kind static;
  #L22367c.  goto L22372a;
  #L22367e.  v1:= new `java.lang.StringBuilder`;
  #L223682.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L223688.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22368e.  v2:= "StartActivity is null" @kind object;
  #L223692.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223698.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22369e.  v1:= temp @kind object;
  #L2236a0.  call `handleError`(v8, v1) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;)V` @kind virtual;
  #L2236a6.  goto L22372a;
  #L2236a8.  v1:= new `java.lang.StringBuilder`;
  #L2236ac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2236b2.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2236b8.  v2:= "PackageManager is null" @kind object;
  #L2236bc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2236c2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2236c8.  v1:= temp @kind object;
  #L2236ca.  call `handleError`(v8, v1) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;)V` @kind virtual;
  #L2236d0.  goto L22372a;
  #L2236d2.  v1:= new `java.lang.StringBuilder`;
  #L2236d6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2236dc.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2236e2.  v2:= "Context is null" @kind object;
  #L2236e6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2236ec.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2236f2.  v1:= temp @kind object;
  #L2236f4.  call `handleError`(v8, v1) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;)V` @kind virtual;
  #L2236fa.  goto L22372a;
  #L2236fc.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L2236fe.  v2:= new `java.lang.StringBuilder`;
  #L223702.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L223708.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22370e.  call temp:= `getMessage`(v1) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L223714.  v0:= temp @kind object;
  #L223716.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22371c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L223722.  v0:= temp @kind object;
  #L223724.  call `handleError`(v8, v0) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;)V` @kind virtual;
  #L22372a.  return @kind void;
  catch `java.lang.Exception` @[L2235fc..L2236fa] goto L2236fc;
}
procedure `void` `doWarmRestart`(`cordova.plugins.Diagnostic` v2 @kind this) @signature `Lcordova/plugins/Diagnostic;.doWarmRestart:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L22374c.  v0:= v2.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L223750.  call temp:= `getActivity`(v0) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroid/app/Activity;` @kind interface;
  #L223756.  v0:= temp @kind object;
  #L223758.  v1:= new `cordova.plugins.Diagnostic$2`;
  #L22375c.  call `<init>`(v1, v2) @signature `Lcordova/plugins/Diagnostic$2;.<init>:(Lcordova/plugins/Diagnostic;)V` @kind direct;
  #L223762.  call `runOnUiThread`(v0, v1) @signature `Landroid/app/Activity;.runOnUiThread:(Ljava/lang/Runnable;)V` @kind virtual;
  #L223768.  return @kind void;
}
procedure `java.lang.String` `escapeDoubleQuotes`(`cordova.plugins.Diagnostic` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcordova/plugins/Diagnostic;.escapeDoubleQuotes:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L222f5c.  v0:= "\"" @kind object;
  #L222f60.  v1:= "\\\"" @kind object;
  #L222f64.  call temp:= `replace`(v3, v0, v1) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L222f6a.  v3:= temp @kind object;
  #L222f6c.  v0:= "%22" @kind object;
  #L222f70.  v1:= "\\%22" @kind object;
  #L222f74.  call temp:= `replace`(v3, v0, v1) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L222f7a.  v3:= temp @kind object;
  #L222f7c.  return v3 @kind object;
}
procedure `boolean` `execute`(`cordova.plugins.Diagnostic` v3 @kind this, `java.lang.String` v4 @kind object, `org.json.JSONArray` v5 @kind object, `org.apache.cordova.CallbackContext` v6 @kind object) @signature `Lcordova/plugins/Diagnostic;.execute:(Ljava/lang/String;Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L222950.  v3.`cordova.plugins.Diagnostic.currentContext` @type ^`org.apache.cordova.CallbackContext` := v6 @kind object;
  #L222954.  v0:= 0I;
  #L222956.  v1:= "enableDebug" @kind object;
  #L22295a.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L222960.  v1:= temp;
  #L222962.  v2:= 1I;
  #L222964.  if v1 == 0 then goto L222980;
  #L222968.  v3.`cordova.plugins.Diagnostic.debugEnabled` @type ^`boolean` := v2 @kind boolean;
  #L22296c.  v4:= "Debug enabled" @kind object;
  #L222970.  call `logDebug`(v3, v4) @signature `Lcordova/plugins/Diagnostic;.logDebug:(Ljava/lang/String;)V` @kind virtual;
  #L222976.  call `success`(v6) @signature `Lorg/apache/cordova/CallbackContext;.success:()V` @kind virtual;
  #L22297c.  goto L222af8;
  #L222980.  v1:= "switchToSettings" @kind object;
  #L222984.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22298a.  v1:= temp;
  #L22298c.  if v1 == 0 then goto L2229a0;
  #L222990.  call `switchToAppSettings`(v3) @signature `Lcordova/plugins/Diagnostic;.switchToAppSettings:()V` @kind virtual;
  #L222996.  call `success`(v6) @signature `Lorg/apache/cordova/CallbackContext;.success:()V` @kind virtual;
  #L22299c.  goto L222af8;
  #L2229a0.  v1:= "switchToMobileDataSettings" @kind object;
  #L2229a4.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2229aa.  v1:= temp;
  #L2229ac.  if v1 == 0 then goto L2229c0;
  #L2229b0.  call `switchToMobileDataSettings`(v3) @signature `Lcordova/plugins/Diagnostic;.switchToMobileDataSettings:()V` @kind virtual;
  #L2229b6.  call `success`(v6) @signature `Lorg/apache/cordova/CallbackContext;.success:()V` @kind virtual;
  #L2229bc.  goto L222af8;
  #L2229c0.  v1:= "switchToWirelessSettings" @kind object;
  #L2229c4.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2229ca.  v1:= temp;
  #L2229cc.  if v1 == 0 then goto L2229e0;
  #L2229d0.  call `switchToWirelessSettings`(v3) @signature `Lcordova/plugins/Diagnostic;.switchToWirelessSettings:()V` @kind virtual;
  #L2229d6.  call `success`(v6) @signature `Lorg/apache/cordova/CallbackContext;.success:()V` @kind virtual;
  #L2229dc.  goto L222af8;
  #L2229e0.  v1:= "isDataRoamingEnabled" @kind object;
  #L2229e4.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2229ea.  v1:= temp;
  #L2229ec.  if v1 == 0 then goto L222a0c;
  #L2229f0.  call temp:= `isDataRoamingEnabled`(v3) @signature `Lcordova/plugins/Diagnostic;.isDataRoamingEnabled:()Z` @kind virtual;
  #L2229f6.  v4:= temp;
  #L2229f8.  if v4 == 0 then goto L222a00;
  #L2229fc.  v4:= 1I;
  #L2229fe.  goto L222a02;
  #L222a00.  v4:= 0I;
  #L222a02.  call `success`(v6, v4) @signature `Lorg/apache/cordova/CallbackContext;.success:(I)V` @kind virtual;
  #L222a08.  goto L222af8;
  #L222a0c.  v1:= "getPermissionAuthorizationStatus" @kind object;
  #L222a10.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L222a16.  v1:= temp;
  #L222a18.  if v1 == 0 then goto L222a26;
  #L222a1c.  call `getPermissionAuthorizationStatus`(v3, v5) @signature `Lcordova/plugins/Diagnostic;.getPermissionAuthorizationStatus:(Lorg/json/JSONArray;)V` @kind virtual;
  #L222a22.  goto L222af8;
  #L222a26.  v1:= "getPermissionsAuthorizationStatus" @kind object;
  #L222a2a.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L222a30.  v1:= temp;
  #L222a32.  if v1 == 0 then goto L222a3e;
  #L222a36.  call `getPermissionsAuthorizationStatus`(v3, v5) @signature `Lcordova/plugins/Diagnostic;.getPermissionsAuthorizationStatus:(Lorg/json/JSONArray;)V` @kind virtual;
  #L222a3c.  goto L222af8;
  #L222a3e.  v1:= "requestRuntimePermission" @kind object;
  #L222a42.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L222a48.  v1:= temp;
  #L222a4a.  if v1 == 0 then goto L222a56;
  #L222a4e.  call `requestRuntimePermission`(v3, v5) @signature `Lcordova/plugins/Diagnostic;.requestRuntimePermission:(Lorg/json/JSONArray;)V` @kind virtual;
  #L222a54.  goto L222af8;
  #L222a56.  v1:= "requestRuntimePermissions" @kind object;
  #L222a5a.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L222a60.  v1:= temp;
  #L222a62.  if v1 == 0 then goto L222a6e;
  #L222a66.  call `requestRuntimePermissions`(v3, v5) @signature `Lcordova/plugins/Diagnostic;.requestRuntimePermissions:(Lorg/json/JSONArray;)V` @kind virtual;
  #L222a6c.  goto L222af8;
  #L222a6e.  v1:= "isADBModeEnabled" @kind object;
  #L222a72.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L222a78.  v1:= temp;
  #L222a7a.  if v1 == 0 then goto L222a98;
  #L222a7e.  call temp:= `isADBModeEnabled`(v3) @signature `Lcordova/plugins/Diagnostic;.isADBModeEnabled:()Z` @kind virtual;
  #L222a84.  v4:= temp;
  #L222a86.  if v4 == 0 then goto L222a8e;
  #L222a8a.  v4:= 1I;
  #L222a8c.  goto L222a90;
  #L222a8e.  v4:= 0I;
  #L222a90.  call `success`(v6, v4) @signature `Lorg/apache/cordova/CallbackContext;.success:(I)V` @kind virtual;
  #L222a96.  goto L222af8;
  #L222a98.  v1:= "isDeviceRooted" @kind object;
  #L222a9c.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L222aa2.  v1:= temp;
  #L222aa4.  if v1 == 0 then goto L222ac2;
  #L222aa8.  call temp:= `isDeviceRooted`(v3) @signature `Lcordova/plugins/Diagnostic;.isDeviceRooted:()Z` @kind virtual;
  #L222aae.  v4:= temp;
  #L222ab0.  if v4 == 0 then goto L222ab8;
  #L222ab4.  v4:= 1I;
  #L222ab6.  goto L222aba;
  #L222ab8.  v4:= 0I;
  #L222aba.  call `success`(v6, v4) @signature `Lorg/apache/cordova/CallbackContext;.success:(I)V` @kind virtual;
  #L222ac0.  goto L222af8;
  #L222ac2.  v1:= "restart" @kind object;
  #L222ac6.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L222acc.  v1:= temp;
  #L222ace.  if v1 == 0 then goto L222ada;
  #L222ad2.  call `restart`(v3, v5) @signature `Lcordova/plugins/Diagnostic;.restart:(Lorg/json/JSONArray;)V` @kind virtual;
  #L222ad8.  goto L222af8;
  #L222ada.  v5:= "getArchitecture" @kind object;
  #L222ade.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L222ae4.  v4:= temp;
  #L222ae6.  if v4 == 0 then goto L222afa;
  #L222aea.  call temp:= `getCPUArchitecture`(v3) @signature `Lcordova/plugins/Diagnostic;.getCPUArchitecture:()Ljava/lang/String;` @kind virtual;
  #L222af0.  v4:= temp @kind object;
  #L222af2.  call `success`(v6, v4) @signature `Lorg/apache/cordova/CallbackContext;.success:(Ljava/lang/String;)V` @kind virtual;
  #L222af8.  return v2;
  #L222afa.  v4:= "Invalid action" @kind object;
  #L222afe.  call `handleError`(v3, v4) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;)V` @kind virtual;
  #L222b04.  return v0;
  #L222b06.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L222b08.  v5:= "Exception occurred: " @kind object;
  #L222b0c.  call temp:= `getMessage`(v4) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L222b12.  v4:= temp @kind object;
  #L222b14.  call temp:= `concat`(v5, v4) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L222b1a.  v4:= temp @kind object;
  #L222b1c.  call `handleError`(v3, v4) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;)V` @kind virtual;
  #L222b22.  return v0;
  catch `java.lang.Exception` @[L222956..L222b04] goto L222b06;
}
procedure `void` `executeGlobalJavascript`(`cordova.plugins.Diagnostic` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcordova/plugins/Diagnostic;.executeGlobalJavascript:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22377c.  v0:= v2.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L223780.  call temp:= `getActivity`(v0) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroid/app/Activity;` @kind interface;
  #L223786.  v0:= temp @kind object;
  #L223788.  v1:= new `cordova.plugins.Diagnostic$1`;
  #L22378c.  call `<init>`(v1, v2, v3) @signature `Lcordova/plugins/Diagnostic$1;.<init>:(Lcordova/plugins/Diagnostic;Ljava/lang/String;)V` @kind direct;
  #L223792.  call `runOnUiThread`(v0, v1) @signature `Landroid/app/Activity;.runOnUiThread:(Ljava/lang/Runnable;)V` @kind virtual;
  #L223798.  return @kind void;
}
procedure `void` `executePluginJavascript`(`cordova.plugins.Diagnostic` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcordova/plugins/Diagnostic;.executePluginJavascript:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2237ac.  v0:= new `java.lang.StringBuilder`;
  #L2237b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2237b6.  v1:= "cordova.plugins.diagnostic." @kind object;
  #L2237ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2237c0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2237c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2237cc.  v3:= temp @kind object;
  #L2237ce.  call `executeGlobalJavascript`(v2, v3) @signature `Lcordova/plugins/Diagnostic;.executeGlobalJavascript:(Ljava/lang/String;)V` @kind virtual;
  #L2237d4.  return @kind void;
}
procedure `java.lang.String` `generateRandom`(`cordova.plugins.Diagnostic` v2 @kind this) @signature `Lcordova/plugins/Diagnostic;.generateRandom:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L222f90.  v0:= new `java.util.Random`;
  #L222f94.  call `<init>`(v0) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L222f9a.  v1:= 1000000I;
  #L222fa0.  call temp:= `nextInt`(v0, v1) @signature `Ljava/util/Random;.nextInt:(I)I` @kind virtual;
  #L222fa6.  v0:= temp;
  #L222fa8.  v0:= v0 + 1;
  #L222fac.  call temp:= `toString`(v0) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L222fb2.  v0:= temp @kind object;
  #L222fb4.  return v0 @kind object;
}
procedure `java.lang.String` `generateRandomRequestId`(`cordova.plugins.Diagnostic` v3 @kind this) @signature `Lcordova/plugins/Diagnostic;.generateRandomRequestId:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L222fc8.  v0:= 0I;
  #L222fca.  v1:= v0 @kind object;
  #L222fcc.  if v1 != 0 then goto L222fec;
  #L222fd0.  call temp:= `generateRandom`(v3) @signature `Lcordova/plugins/Diagnostic;.generateRandom:()Ljava/lang/String;` @kind virtual;
  #L222fd6.  v1:= temp @kind object;
  #L222fd8.  v2:= v3.`cordova.plugins.Diagnostic.callbackContexts` @type ^`java.util.HashMap` @kind object;
  #L222fdc.  call temp:= `containsKey`(v2, v1) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L222fe2.  v2:= temp;
  #L222fe4.  if v2 == 0 then goto L222fcc;
  #L222fe8.  v1:= v0 @kind object;
  #L222fea.  goto L222fcc;
  #L222fec.  return v1 @kind object;
}
procedure `int` `getADBMode`(`cordova.plugins.Diagnostic` v3 @kind this) @signature `Lcordova/plugins/Diagnostic;.getADBMode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L222ebc.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L222ec0.  v1:= 0I;
  #L222ec2.  v2:= 17I;
  #L222ec6.  if v0 < v2 then goto L222ee4;
  #L222eca.  v0:= v3.`cordova.plugins.Diagnostic.applicationContext` @type ^`android.content.Context` @kind object;
  #L222ece.  call temp:= `getContentResolver`(v0) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L222ed4.  v0:= temp @kind object;
  #L222ed6.  v2:= "adb_enabled" @kind object;
  #L222eda.  call temp:= `getInt`(v0, v2, v1) @signature `Landroid/provider/Settings$Global;.getInt:(Landroid/content/ContentResolver;Ljava/lang/String;I)I` @kind static;
  #L222ee0.  v0:= temp;
  #L222ee2.  goto L222efc;
  #L222ee4.  v0:= v3.`cordova.plugins.Diagnostic.applicationContext` @type ^`android.content.Context` @kind object;
  #L222ee8.  call temp:= `getContentResolver`(v0) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L222eee.  v0:= temp @kind object;
  #L222ef0.  v2:= "adb_enabled" @kind object;
  #L222ef4.  call temp:= `getInt`(v0, v2, v1) @signature `Landroid/provider/Settings$Secure;.getInt:(Landroid/content/ContentResolver;Ljava/lang/String;I)I` @kind static;
  #L222efa.  v0:= temp;
  #L222efc.  return v0;
}
procedure `java.lang.String` `getCPUArchitecture`(`cordova.plugins.Diagnostic` v3 @kind this) @signature `Lcordova/plugins/Diagnostic;.getCPUArchitecture:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L223000.  v0:= "unknown" @kind object;
  #L223004.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L223008.  v2:= 21I;
  #L22300c.  if v1 >= v2 then goto L223016;
  #L223010.  v1:= `@@android.os.Build.CPU_ABI` @type ^`java.lang.String` @kind object;
  #L223014.  goto L223020;
  #L223016.  v1:= `@@android.os.Build.SUPPORTED_ABIS` @type ^`java.lang.String`[] @kind object;
  #L22301a.  v2:= 0I;
  #L22301c.  v1:= v1[v2] @kind object;
  #L223020.  v2:= "armeabi" @kind object;
  #L223024.  if v1 != v2 then goto L22302e;
  #L223028.  v0:= "ARMv6" @kind object;
  #L22302c.  goto L2230b0;
  #L22302e.  v2:= "armeabi-v7a" @kind object;
  #L223032.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L223038.  v2:= temp;
  #L22303a.  if v2 == 0 then goto L223044;
  #L22303e.  v0:= "ARMv7" @kind object;
  #L223042.  goto L2230b0;
  #L223044.  v2:= "arm64-v8a" @kind object;
  #L223048.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22304e.  v2:= temp;
  #L223050.  if v2 == 0 then goto L22305a;
  #L223054.  v0:= "ARMv8" @kind object;
  #L223058.  goto L2230b0;
  #L22305a.  v2:= "x86" @kind object;
  #L22305e.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L223064.  v2:= temp;
  #L223066.  if v2 == 0 then goto L223070;
  #L22306a.  v0:= "X86" @kind object;
  #L22306e.  goto L2230b0;
  #L223070.  v2:= "x86_64" @kind object;
  #L223074.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22307a.  v2:= temp;
  #L22307c.  if v2 == 0 then goto L223086;
  #L223080.  v0:= "X86_64" @kind object;
  #L223084.  goto L2230b0;
  #L223086.  v2:= "mips" @kind object;
  #L22308a.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L223090.  v2:= temp;
  #L223092.  if v2 == 0 then goto L22309c;
  #L223096.  v0:= "MIPS" @kind object;
  #L22309a.  goto L2230b0;
  #L22309c.  v2:= "mips64" @kind object;
  #L2230a0.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2230a6.  v1:= temp;
  #L2230a8.  if v1 == 0 then goto L2230b0;
  #L2230ac.  v0:= "MIPS_64" @kind object;
  #L2230b0.  return v0 @kind object;
}
procedure `org.apache.cordova.CallbackContext` `getContextById`(`cordova.plugins.Diagnostic` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcordova/plugins/Diagnostic;.getContextById:(Ljava/lang/String;)Lorg/apache/cordova/CallbackContext;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L223104.  v0:= v3.`cordova.plugins.Diagnostic.callbackContexts` @type ^`java.util.HashMap` @kind object;
  #L223108.  call temp:= `containsKey`(v0, v4) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L22310e.  v0:= temp;
  #L223110.  if v0 == 0 then goto L223126;
  #L223114.  v0:= v3.`cordova.plugins.Diagnostic.callbackContexts` @type ^`java.util.HashMap` @kind object;
  #L223118.  call temp:= `get`(v0, v4) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L22311e.  v4:= temp @kind object;
  #L223120.  v4:= (`org.apache.cordova.CallbackContext`) v4 @kind object;
  #L223124.  return v4 @kind object;
  #L223126.  v0:= new `java.lang.Exception`;
  #L22312a.  v1:= new `java.lang.StringBuilder`;
  #L22312e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L223134.  v2:= "No context found for request id=" @kind object;
  #L223138.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22313e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223144.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22314a.  v4:= temp @kind object;
  #L22314c.  call `<init>`(v0, v4) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L223152.  throw v0;
}
procedure `void` `getPermissionAuthorizationStatus`(`cordova.plugins.Diagnostic` v2 @kind this, `org.json.JSONArray` v3 @kind object) @signature `Lcordova/plugins/Diagnostic;.getPermissionAuthorizationStatus:(Lorg/json/JSONArray;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2237e8.  v0:= 0I;
  #L2237ea.  call temp:= `getString`(v3, v0) @signature `Lorg/json/JSONArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L2237f0.  v3:= temp @kind object;
  #L2237f2.  v0:= new `org.json.JSONArray`;
  #L2237f6.  call `<init>`(v0) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L2237fc.  call temp:= `put`(v0, v3) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L223802.  call temp:= `jsonArrayToStringArray`(v2, v0) @signature `Lcordova/plugins/Diagnostic;.jsonArrayToStringArray:(Lorg/json/JSONArray;)[Ljava/lang/String;` @kind virtual;
  #L223808.  v0:= temp @kind object;
  #L22380a.  call temp:= `_getPermissionsAuthorizationStatus`(v2, v0) @signature `Lcordova/plugins/Diagnostic;._getPermissionsAuthorizationStatus:([Ljava/lang/String;)Lorg/json/JSONObject;` @kind virtual;
  #L223810.  v0:= temp @kind object;
  #L223812.  v1:= v2.`cordova.plugins.Diagnostic.currentContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L223816.  call temp:= `getString`(v0, v3) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L22381c.  v3:= temp @kind object;
  #L22381e.  call `success`(v1, v3) @signature `Lorg/apache/cordova/CallbackContext;.success:(Ljava/lang/String;)V` @kind virtual;
  #L223824.  return @kind void;
}
procedure `void` `getPermissionsAuthorizationStatus`(`cordova.plugins.Diagnostic` v1 @kind this, `org.json.JSONArray` v2 @kind object) @signature `Lcordova/plugins/Diagnostic;.getPermissionsAuthorizationStatus:(Lorg/json/JSONArray;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L223838.  v0:= 0I;
  #L22383a.  call temp:= `getJSONArray`(v2, v0) @signature `Lorg/json/JSONArray;.getJSONArray:(I)Lorg/json/JSONArray;` @kind virtual;
  #L223840.  v2:= temp @kind object;
  #L223842.  call temp:= `jsonArrayToStringArray`(v1, v2) @signature `Lcordova/plugins/Diagnostic;.jsonArrayToStringArray:(Lorg/json/JSONArray;)[Ljava/lang/String;` @kind virtual;
  #L223848.  v2:= temp @kind object;
  #L22384a.  call temp:= `_getPermissionsAuthorizationStatus`(v1, v2) @signature `Lcordova/plugins/Diagnostic;._getPermissionsAuthorizationStatus:([Ljava/lang/String;)Lorg/json/JSONObject;` @kind virtual;
  #L223850.  v2:= temp @kind object;
  #L223852.  v0:= v1.`cordova.plugins.Diagnostic.currentContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L223856.  call `success`(v0, v2) @signature `Lorg/apache/cordova/CallbackContext;.success:(Lorg/json/JSONObject;)V` @kind virtual;
  #L22385c.  return @kind void;
}
procedure `void` `handleError`(`cordova.plugins.Diagnostic` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L223870.  v0:= v1.`cordova.plugins.Diagnostic.currentContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L223874.  call `handleError`(v1, v2, v0) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;Lorg/apache/cordova/CallbackContext;)V` @kind virtual;
  #L22387a.  return @kind void;
}
procedure `void` `handleError`(`cordova.plugins.Diagnostic` v2 @kind this, `java.lang.String` v3 @kind object, `int` v4 ) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22388c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L223892.  v0:= temp @kind object;
  #L223894.  v1:= v2.`cordova.plugins.Diagnostic.callbackContexts` @type ^`java.util.HashMap` @kind object;
  #L223898.  call temp:= `containsKey`(v1, v0) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L22389e.  v1:= temp;
  #L2238a0.  if v1 == 0 then goto L2238b6;
  #L2238a4.  v1:= v2.`cordova.plugins.Diagnostic.callbackContexts` @type ^`java.util.HashMap` @kind object;
  #L2238a8.  call temp:= `get`(v1, v0) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2238ae.  v0:= temp @kind object;
  #L2238b0.  v0:= (`org.apache.cordova.CallbackContext`) v0 @kind object;
  #L2238b4.  goto L2238ba;
  #L2238b6.  v0:= v2.`cordova.plugins.Diagnostic.currentContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L2238ba.  call `handleError`(v2, v3, v0) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;Lorg/apache/cordova/CallbackContext;)V` @kind virtual;
  #L2238c0.  call `clearRequest`(v2, v4) @signature `Lcordova/plugins/Diagnostic;.clearRequest:(I)V` @kind virtual;
  #L2238c6.  return @kind void;
}
procedure `void` `handleError`(`cordova.plugins.Diagnostic` v0 @kind this, `java.lang.String` v1 @kind object, `org.apache.cordova.CallbackContext` v2 @kind object) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;Lorg/apache/cordova/CallbackContext;)V` @AccessFlag PUBLIC {
    temp;

  #L2238d8.  call `logError`(v0, v1) @signature `Lcordova/plugins/Diagnostic;.logError:(Ljava/lang/String;)V` @kind virtual;
  #L2238de.  call `error`(v2, v1) @signature `Lorg/apache/cordova/CallbackContext;.error:(Ljava/lang/String;)V` @kind virtual;
  #L2238e4.  goto L2238f6;
  #L2238e6.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L2238e8.  call temp:= `toString`(v1) @signature `Ljava/lang/Exception;.toString:()Ljava/lang/String;` @kind virtual;
  #L2238ee.  v1:= temp @kind object;
  #L2238f0.  call `logError`(v0, v1) @signature `Lcordova/plugins/Diagnostic;.logError:(Ljava/lang/String;)V` @kind virtual;
  #L2238f6.  return @kind void;
  catch `java.lang.Exception` @[L2238d8..L2238e4] goto L2238e6;
}
procedure `boolean` `hasPermission`(`cordova.plugins.Diagnostic` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lcordova/plugins/Diagnostic;.hasPermission:(Ljava/lang/String;)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L222b44.  v0:= 1I;
  #L222b46.  v1:= v6.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L222b4a.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L222b50.  v1:= temp @kind object;
  #L222b52.  v2:= "hasPermission" @kind object;
  #L222b56.  v3:= new `java.lang.Class`[v0];
  #L222b5a.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L222b60.  v4:= temp @kind object;
  #L222b62.  v5:= 0I;
  #L222b64.  v3[v5]:= v4 @kind object;
  #L222b68.  call temp:= `getMethod`(v1, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L222b6e.  v1:= temp @kind object;
  #L222b70.  v2:= v6.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L222b74.  v3:= new `java.lang.Object`[v0];
  #L222b78.  v3[v5]:= v7 @kind object;
  #L222b7c.  call temp:= `invoke`(v1, v2, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L222b82.  v1:= temp @kind object;
  #L222b84.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L222b88.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L222b8e.  v0:= temp;
  #L222b90.  goto L222bba;
  #L222b92.  v1:= new `java.lang.StringBuilder`;
  #L222b96.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L222b9c.  v2:= "Cordova v8.1.0 does not support runtime permissions so defaulting to GRANTED for " @kind object;
  #L222ba0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L222ba6.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L222bac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L222bb2.  v7:= temp @kind object;
  #L222bb4.  call `logWarning`(v6, v7) @signature `Lcordova/plugins/Diagnostic;.logWarning:(Ljava/lang/String;)V` @kind virtual;
  #L222bba.  return v0;
  catch `java.lang.NoSuchMethodException` @[L222b46..L222b90] goto L222b92;
}
procedure `void` `initialize`(`cordova.plugins.Diagnostic` v3 @kind this, `org.apache.cordova.CordovaInterface` v4 @kind object, `org.apache.cordova.CordovaWebView` v5 @kind object) @signature `Lcordova/plugins/Diagnostic;.initialize:(Lorg/apache/cordova/CordovaInterface;Lorg/apache/cordova/CordovaWebView;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L223918.  v0:= "Diagnostic" @kind object;
  #L22391c.  v1:= "initialize()" @kind object;
  #L223920.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L223926.  `@@cordova.plugins.Diagnostic.instance` @type ^`cordova.plugins.Diagnostic` := v3 @kind object;
  #L22392a.  v0:= v3.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L22392e.  call temp:= `getActivity`(v0) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroid/app/Activity;` @kind interface;
  #L223934.  v0:= temp @kind object;
  #L223936.  call temp:= `getApplicationContext`(v0) @signature `Landroid/app/Activity;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L22393c.  v0:= temp @kind object;
  #L22393e.  v3.`cordova.plugins.Diagnostic.applicationContext` @type ^`android.content.Context` := v0 @kind object;
  #L223942.  call temp:= `getActivity`(v4) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroid/app/Activity;` @kind interface;
  #L223948.  v0:= temp @kind object;
  #L22394a.  v1:= "Diagnostic" @kind object;
  #L22394e.  v2:= 0I;
  #L223950.  call temp:= `getSharedPreferences`(v0, v1, v2) @signature `Landroid/app/Activity;.getSharedPreferences:(Ljava/lang/String;I)Landroid/content/SharedPreferences;` @kind virtual;
  #L223956.  v0:= temp @kind object;
  #L223958.  v3.`cordova.plugins.Diagnostic.sharedPref` @type ^`android.content.SharedPreferences` := v0 @kind object;
  #L22395c.  v0:= v3.`cordova.plugins.Diagnostic.sharedPref` @type ^`android.content.SharedPreferences` @kind object;
  #L223960.  call temp:= `edit`(v0) @signature `Landroid/content/SharedPreferences;.edit:()Landroid/content/SharedPreferences$Editor;` @kind interface;
  #L223966.  v0:= temp @kind object;
  #L223968.  v3.`cordova.plugins.Diagnostic.editor` @type ^`android.content.SharedPreferences$Editor` := v0 @kind object;
  #L22396c.  call `initialize`(v3, v4, v5) @signature `Lorg/apache/cordova/CordovaPlugin;.initialize:(Lorg/apache/cordova/CordovaInterface;Lorg/apache/cordova/CordovaWebView;)V` @kind super;
  #L223972.  return @kind void;
}
procedure `boolean` `isADBModeEnabled`(`cordova.plugins.Diagnostic` v3 @kind this) @signature `Lcordova/plugins/Diagnostic;.isADBModeEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L222bdc.  v0:= 0I;
  #L222bde.  call temp:= `getADBMode`(v3) @signature `Lcordova/plugins/Diagnostic;.getADBMode:()I` @kind virtual;
  #L222be4.  v1:= temp;
  #L222be6.  v2:= 1I;
  #L222be8.  if v1 != v2 then goto L222c00;
  #L222bec.  v0:= 1I;
  #L222bee.  goto L222c00;
  #L222bf0.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L222bf2.  call temp:= `getMessage`(v1) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L222bf8.  v1:= temp @kind object;
  #L222bfa.  call `logError`(v3, v1) @signature `Lcordova/plugins/Diagnostic;.logError:(Ljava/lang/String;)V` @kind virtual;
  #L222c00.  v1:= new `java.lang.StringBuilder`;
  #L222c04.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L222c0a.  v2:= "ADB mode enabled: " @kind object;
  #L222c0e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L222c14.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L222c1a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L222c20.  v1:= temp @kind object;
  #L222c22.  call `logDebug`(v3, v1) @signature `Lcordova/plugins/Diagnostic;.logDebug:(Ljava/lang/String;)V` @kind virtual;
  #L222c28.  return v0;
  catch `java.lang.Exception` @[L222bde..L222be6] goto L222bf0;
}
procedure `boolean` `isDataRoamingEnabled`(`cordova.plugins.Diagnostic` v4 @kind this) @signature `Lcordova/plugins/Diagnostic;.isDataRoamingEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L222c4c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L222c50.  v1:= 1I;
  #L222c52.  v2:= 0I;
  #L222c54.  v3:= 17I;
  #L222c58.  if v0 >= v3 then goto L222c86;
  #L222c5c.  v0:= v4.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L222c60.  call temp:= `getActivity`(v0) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroid/app/Activity;` @kind interface;
  #L222c66.  v0:= temp @kind object;
  #L222c68.  call temp:= `getContentResolver`(v0) @signature `Landroid/app/Activity;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L222c6e.  v0:= temp @kind object;
  #L222c70.  v3:= "data_roaming" @kind object;
  #L222c74.  call temp:= `getInt`(v0, v3, v2) @signature `Landroid/provider/Settings$System;.getInt:(Landroid/content/ContentResolver;Ljava/lang/String;I)I` @kind static;
  #L222c7a.  v0:= temp;
  #L222c7c.  if v0 != v1 then goto L222c82;
  #L222c80.  goto L222cae;
  #L222c82.  v1:= 0I;
  #L222c84.  goto L222cae;
  #L222c86.  v0:= v4.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L222c8a.  call temp:= `getActivity`(v0) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroid/app/Activity;` @kind interface;
  #L222c90.  v0:= temp @kind object;
  #L222c92.  call temp:= `getContentResolver`(v0) @signature `Landroid/app/Activity;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L222c98.  v0:= temp @kind object;
  #L222c9a.  v3:= "data_roaming" @kind object;
  #L222c9e.  call temp:= `getInt`(v0, v3, v2) @signature `Landroid/provider/Settings$Global;.getInt:(Landroid/content/ContentResolver;Ljava/lang/String;I)I` @kind static;
  #L222ca4.  v0:= temp;
  #L222ca6.  if v0 != v1 then goto L222cac;
  #L222caa.  goto L222cae;
  #L222cac.  v1:= 0I;
  #L222cae.  return v1;
}
procedure `boolean` `isDeviceRooted`(`cordova.plugins.Diagnostic` v11 @kind this) @signature `Lcordova/plugins/Diagnostic;.isDeviceRooted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L222cc0.  v0:= `@@android.os.Build.TAGS` @type ^`java.lang.String` @kind object;
  #L222cc4.  v1:= 1I;
  #L222cc6.  if v0 == 0 then goto L222cdc;
  #L222cca.  v2:= "test-keys" @kind object;
  #L222cce.  call temp:= `contains`(v0, v2) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L222cd4.  v0:= temp;
  #L222cd6.  if v0 == 0 then goto L222cdc;
  #L222cda.  return v1;
  #L222cdc.  v0:= 0I;
  #L222cde.  v2:= "/system/app/Superuser.apk" @kind object;
  #L222ce2.  v3:= "/sbin/su" @kind object;
  #L222ce6.  v4:= "/system/bin/su" @kind object;
  #L222cea.  v5:= "/system/xbin/su" @kind object;
  #L222cee.  v6:= "/data/local/xbin/su" @kind object;
  #L222cf2.  v7:= "/data/local/bin/su" @kind object;
  #L222cf6.  v8:= "/system/sd/xbin/su" @kind object;
  #L222cfa.  v9:= "/system/bin/failsafe/su" @kind object;
  #L222cfe.  v10:= "/data/local/su" @kind object;
  #L222d02.  temp:= new `java.lang.String`[v2, v3, v4, v5, v6, v7, v8, v9, v10];
  #L222d08.  v2:= temp @kind object;
  #L222d0a.  v3:= length @variable v2;
  #L222d0c.  v4:= 0I;
  #L222d0e.  if v4 >= v3 then goto L222d44;
  #L222d12.  v5:= v2[v4] @kind object;
  #L222d16.  v6:= new `java.io.File`;
  #L222d1a.  call `<init>`(v6, v5) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L222d20.  call temp:= `exists`(v6) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L222d26.  v5:= temp;
  #L222d28.  if v5 == 0 then goto L222d2e;
  #L222d2c.  return v1;
  #L222d2e.  v4:= v4 + 1;
  #L222d32.  goto L222d0e;
  #L222d34.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L222d36.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L222d3c.  v2:= temp @kind object;
  #L222d3e.  call `logDebug`(v11, v2) @signature `Lcordova/plugins/Diagnostic;.logDebug:(Ljava/lang/String;)V` @kind virtual;
  #L222d44.  v2:= 0I;
  #L222d46.  call temp:= `getRuntime`() @signature `Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;` @kind static;
  #L222d4c.  v3:= temp @kind object;
  #L222d4e.  v4:= "/system/xbin/which" @kind object;
  #L222d52.  v5:= "su" @kind object;
  #L222d56.  temp:= new `java.lang.String`[v4, v5];
  #L222d5c.  v4:= temp @kind object;
  #L222d5e.  call temp:= `exec`(v3, v4) @signature `Ljava/lang/Runtime;.exec:([Ljava/lang/String;)Ljava/lang/Process;` @kind virtual;
  #L222d64.  v2:= temp @kind object;
  #L222d66.  v3:= new `java.io.BufferedReader`;
  #L222d6a.  v4:= new `java.io.InputStreamReader`;
  #L222d6e.  call temp:= `getInputStream`(v2) @signature `Ljava/lang/Process;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L222d74.  v5:= temp @kind object;
  #L222d76.  call `<init>`(v4, v5) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L222d7c.  call `<init>`(v3, v4) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L222d82.  call temp:= `readLine`(v3) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L222d88.  v3:= temp @kind object;
  #L222d8a.  if v3 == 0 then goto L222d9a;
  #L222d8e.  if v2 == 0 then goto L222d98;
  #L222d92.  call `destroy`(v2) @signature `Ljava/lang/Process;.destroy:()V` @kind virtual;
  #L222d98.  return v1;
  #L222d9a.  if v2 == 0 then goto L222dbe;
  #L222d9e.  goto L222db8;
  #L222da0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L222da2.  goto L222dc0;
  #L222da4.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L222da6.  call temp:= `getMessage`(v1) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L222dac.  v1:= temp @kind object;
  #L222dae.  call `logDebug`(v11, v1) @signature `Lcordova/plugins/Diagnostic;.logDebug:(Ljava/lang/String;)V` @kind virtual;
  #L222db4.  if v2 == 0 then goto L222dbe;
  #L222db8.  call `destroy`(v2) @signature `Ljava/lang/Process;.destroy:()V` @kind virtual;
  #L222dbe.  return v0;
  #L222dc0.  if v2 == 0 then goto L222dca;
  #L222dc4.  call `destroy`(v2) @signature `Ljava/lang/Process;.destroy:()V` @kind virtual;
  #L222dca.  throw v0;
  #L222dcc.  return @kind void;
  catch `java.lang.Exception` @[L222cde..L222d28] goto L222d34;
  catch `java.lang.Exception` @[L222d46..L222d8a] goto L222da4;
  catch `java.lang.Throwable` @[L222d46..L222d8a] goto L222da0;
  catch `java.lang.Throwable` @[L222da6..L222db4] goto L222da0;
}
procedure `boolean` `isPermissionRequested`(`cordova.plugins.Diagnostic` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcordova/plugins/Diagnostic;.isPermissionRequested:(Ljava/lang/String;)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L222e04.  v0:= v2.`cordova.plugins.Diagnostic.sharedPref` @type ^`android.content.SharedPreferences` @kind object;
  #L222e08.  v1:= 0I;
  #L222e0a.  call temp:= `getBoolean`(v0, v3, v1) @signature `Landroid/content/SharedPreferences;.getBoolean:(Ljava/lang/String;Z)Z` @kind interface;
  #L222e10.  v3:= temp;
  #L222e12.  return v3;
}
procedure `java.lang.String`[] `jsonArrayToStringArray`(`cordova.plugins.Diagnostic` v3 @kind this, `org.json.JSONArray` v4 @kind object) @signature `Lcordova/plugins/Diagnostic;.jsonArrayToStringArray:(Lorg/json/JSONArray;)[Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L2230c4.  if v4 != 0 then goto L2230cc;
  #L2230c8.  v4:= 0I;
  #L2230ca.  return v4 @kind object;
  #L2230cc.  call temp:= `length`(v4) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L2230d2.  v0:= temp;
  #L2230d4.  v0:= new `java.lang.String`[v0];
  #L2230d8.  v1:= 0I;
  #L2230da.  v2:= length @variable v0;
  #L2230dc.  if v1 >= v2 then goto L2230f2;
  #L2230e0.  call temp:= `optString`(v4, v1) @signature `Lorg/json/JSONArray;.optString:(I)Ljava/lang/String;` @kind virtual;
  #L2230e6.  v2:= temp @kind object;
  #L2230e8.  v0[v1]:= v2 @kind object;
  #L2230ec.  v1:= v1 + 1;
  #L2230f0.  goto L2230da;
  #L2230f2.  return v0 @kind object;
}
procedure `void` `logDebug`(`cordova.plugins.Diagnostic` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcordova/plugins/Diagnostic;.logDebug:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L223984.  v0:= v2.`cordova.plugins.Diagnostic.debugEnabled` @type ^`boolean` @kind boolean;
  #L223988.  if v0 == 0 then goto L2239d0;
  #L22398c.  v0:= "Diagnostic" @kind object;
  #L223990.  call temp:= `d`(v0, v3) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L223996.  v0:= new `java.lang.StringBuilder`;
  #L22399a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2239a0.  v1:= "console.log(\"Diagnostic[native]: " @kind object;
  #L2239a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2239aa.  call temp:= `escapeDoubleQuotes`(v2, v3) @signature `Lcordova/plugins/Diagnostic;.escapeDoubleQuotes:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2239b0.  v3:= temp @kind object;
  #L2239b2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2239b8.  v3:= "\")" @kind object;
  #L2239bc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2239c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2239c8.  v3:= temp @kind object;
  #L2239ca.  call `executeGlobalJavascript`(v2, v3) @signature `Lcordova/plugins/Diagnostic;.executeGlobalJavascript:(Ljava/lang/String;)V` @kind virtual;
  #L2239d0.  return @kind void;
}
procedure `void` `logError`(`cordova.plugins.Diagnostic` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcordova/plugins/Diagnostic;.logError:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2239e4.  v0:= "Diagnostic" @kind object;
  #L2239e8.  call temp:= `e`(v0, v3) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2239ee.  v0:= v2.`cordova.plugins.Diagnostic.debugEnabled` @type ^`boolean` @kind boolean;
  #L2239f2.  if v0 == 0 then goto L223a30;
  #L2239f6.  v0:= new `java.lang.StringBuilder`;
  #L2239fa.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L223a00.  v1:= "console.error(\"Diagnostic[native]: " @kind object;
  #L223a04.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223a0a.  call temp:= `escapeDoubleQuotes`(v2, v3) @signature `Lcordova/plugins/Diagnostic;.escapeDoubleQuotes:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L223a10.  v3:= temp @kind object;
  #L223a12.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223a18.  v3:= "\")" @kind object;
  #L223a1c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223a22.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L223a28.  v3:= temp @kind object;
  #L223a2a.  call `executeGlobalJavascript`(v2, v3) @signature `Lcordova/plugins/Diagnostic;.executeGlobalJavascript:(Ljava/lang/String;)V` @kind virtual;
  #L223a30.  return @kind void;
}
procedure `void` `logInfo`(`cordova.plugins.Diagnostic` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcordova/plugins/Diagnostic;.logInfo:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L223a44.  v0:= "Diagnostic" @kind object;
  #L223a48.  call temp:= `i`(v0, v3) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L223a4e.  v0:= v2.`cordova.plugins.Diagnostic.debugEnabled` @type ^`boolean` @kind boolean;
  #L223a52.  if v0 == 0 then goto L223a90;
  #L223a56.  v0:= new `java.lang.StringBuilder`;
  #L223a5a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L223a60.  v1:= "console.info(\"Diagnostic[native]: " @kind object;
  #L223a64.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223a6a.  call temp:= `escapeDoubleQuotes`(v2, v3) @signature `Lcordova/plugins/Diagnostic;.escapeDoubleQuotes:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L223a70.  v3:= temp @kind object;
  #L223a72.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223a78.  v3:= "\")" @kind object;
  #L223a7c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223a82.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L223a88.  v3:= temp @kind object;
  #L223a8a.  call `executeGlobalJavascript`(v2, v3) @signature `Lcordova/plugins/Diagnostic;.executeGlobalJavascript:(Ljava/lang/String;)V` @kind virtual;
  #L223a90.  return @kind void;
}
procedure `void` `logWarning`(`cordova.plugins.Diagnostic` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcordova/plugins/Diagnostic;.logWarning:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L223aa4.  v0:= "Diagnostic" @kind object;
  #L223aa8.  call temp:= `w`(v0, v3) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L223aae.  v0:= v2.`cordova.plugins.Diagnostic.debugEnabled` @type ^`boolean` @kind boolean;
  #L223ab2.  if v0 == 0 then goto L223af0;
  #L223ab6.  v0:= new `java.lang.StringBuilder`;
  #L223aba.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L223ac0.  v1:= "console.warn(\"Diagnostic[native]: " @kind object;
  #L223ac4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223aca.  call temp:= `escapeDoubleQuotes`(v2, v3) @signature `Lcordova/plugins/Diagnostic;.escapeDoubleQuotes:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L223ad0.  v3:= temp @kind object;
  #L223ad2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223ad8.  v3:= "\")" @kind object;
  #L223adc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223ae2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L223ae8.  v3:= temp @kind object;
  #L223aea.  call `executeGlobalJavascript`(v2, v3) @signature `Lcordova/plugins/Diagnostic;.executeGlobalJavascript:(Ljava/lang/String;)V` @kind virtual;
  #L223af0.  return @kind void;
}
procedure `void` `onRequestPermissionResult`(`cordova.plugins.Diagnostic` v9 @kind this, `int` v10 , `java.lang.String`[] v11 @kind object, `int`[] v12 @kind object) @signature `Lcordova/plugins/Diagnostic;.onRequestPermissionResult:(I[Ljava/lang/String;[I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L223b04.  call temp:= `valueOf`(v10) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L223b0a.  v0:= temp @kind object;
  #L223b0c.  v1:= "Diagnostic" @kind object;
  #L223b10.  v2:= new `java.lang.StringBuilder`;
  #L223b14.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L223b1a.  v3:= "Received result for permissions request id=" @kind object;
  #L223b1e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223b24.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223b2a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L223b30.  v2:= temp @kind object;
  #L223b32.  call temp:= `v`(v1, v2) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L223b38.  call temp:= `getContextById`(v9, v0) @signature `Lcordova/plugins/Diagnostic;.getContextById:(Ljava/lang/String;)Lorg/apache/cordova/CallbackContext;` @kind virtual;
  #L223b3e.  v1:= temp @kind object;
  #L223b40.  v2:= v9.`cordova.plugins.Diagnostic.permissionStatuses` @type ^`java.util.HashMap` @kind object;
  #L223b44.  call temp:= `get`(v2, v0) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L223b4a.  v0:= temp @kind object;
  #L223b4c.  v0:= (`org.json.JSONObject`) v0 @kind object;
  #L223b50.  v2:= length @variable v11;
  #L223b52.  v3:= 0I;
  #L223b54.  v4:= 0I;
  #L223b56.  if v4 >= v2 then goto L223c08;
  #L223b5a.  v5:= v11[v4] @kind object;
  #L223b5e.  v6:= `@@cordova.plugins.Diagnostic.permissionsMap` @type ^`java.util.Map` @kind object;
  #L223b62.  call temp:= `get`(v6, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L223b68.  v6:= temp @kind object;
  #L223b6a.  v6:= (`java.lang.String`) v6 @kind object;
  #L223b6e.  v7:= v12[v4];
  #L223b72.  v8:= -1I;
  #L223b74.  if v7 != v8 then goto L223bae;
  #L223b78.  v7:= v9.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L223b7c.  call temp:= `getActivity`(v7) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroid/app/Activity;` @kind interface;
  #L223b82.  v7:= temp @kind object;
  #L223b84.  call temp:= `shouldShowRequestPermissionRationale`(v9, v7, v5) @signature `Lcordova/plugins/Diagnostic;.shouldShowRequestPermissionRationale:(Landroid/app/Activity;Ljava/lang/String;)Z` @kind virtual;
  #L223b8a.  v5:= temp;
  #L223b8c.  if v5 != 0 then goto L223ba8;
  #L223b90.  call temp:= `isPermissionRequested`(v9, v6) @signature `Lcordova/plugins/Diagnostic;.isPermissionRequested:(Ljava/lang/String;)Z` @kind virtual;
  #L223b96.  v5:= temp;
  #L223b98.  if v5 == 0 then goto L223ba2;
  #L223b9c.  v5:= "DENIED_ALWAYS" @kind object;
  #L223ba0.  goto L223bb2;
  #L223ba2.  v5:= "NOT_REQUESTED" @kind object;
  #L223ba6.  goto L223bb2;
  #L223ba8.  v5:= "DENIED" @kind object;
  #L223bac.  goto L223bb2;
  #L223bae.  v5:= "GRANTED" @kind object;
  #L223bb2.  call temp:= `put`(v0, v6, v5) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L223bb8.  v5:= "Diagnostic" @kind object;
  #L223bbc.  v7:= new `java.lang.StringBuilder`;
  #L223bc0.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L223bc6.  v8:= "Authorisation for " @kind object;
  #L223bca.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223bd0.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223bd6.  v8:= " is " @kind object;
  #L223bda.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223be0.  call temp:= `get`(v0, v6) @signature `Lorg/json/JSONObject;.get:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L223be6.  v6:= temp @kind object;
  #L223be8.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223bee.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L223bf4.  v6:= temp @kind object;
  #L223bf6.  call temp:= `v`(v5, v6) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L223bfc.  call `clearRequest`(v9, v10) @signature `Lcordova/plugins/Diagnostic;.clearRequest:(I)V` @kind virtual;
  #L223c02.  v4:= v4 + 1;
  #L223c06.  goto L223b56;
  #L223c08.  v11:= 0I;
  #L223c0a.  v12:= "cordova.plugins.Diagnostic_External_Storage" @kind object;
  #L223c0e.  call temp:= `forName`(v12) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L223c14.  v12:= temp @kind object;
  #L223c16.  goto L223c1a;
  #L223c18.  v12:= v11 @kind object;
  #L223c1a.  v2:= `@@cordova.plugins.Diagnostic.GET_EXTERNAL_SD_CARD_DETAILS_PERMISSION_REQUEST` @type ^`java.lang.Integer` @kind object;
  #L223c1e.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L223c24.  v2:= temp;
  #L223c26.  if v10 != v2 then goto L223c4a;
  #L223c2a.  if v12 == 0 then goto L223c4a;
  #L223c2e.  v0:= "onReceivePermissionResult" @kind object;
  #L223c32.  v1:= new `java.lang.Class`[v3];
  #L223c36.  call temp:= `getMethod`(v12, v0, v1) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L223c3c.  v12:= temp @kind object;
  #L223c3e.  v0:= new `java.lang.Object`[v3];
  #L223c42.  call temp:= `invoke`(v12, v11, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L223c48.  goto L223c6e;
  #L223c4a.  call `success`(v1, v0) @signature `Lorg/apache/cordova/CallbackContext;.success:(Lorg/json/JSONObject;)V` @kind virtual;
  #L223c50.  goto L223c6e;
  #L223c52.  v11:= Exception @type ^`java.lang.Exception` @kind object;
  #L223c54.  v12:= "Exception occurred onRequestPermissionsResult: " @kind object;
  #L223c58.  call temp:= `getMessage`(v11) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L223c5e.  v11:= temp @kind object;
  #L223c60.  call temp:= `concat`(v12, v11) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L223c66.  v11:= temp @kind object;
  #L223c68.  call `handleError`(v9, v11, v10) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;I)V` @kind virtual;
  #L223c6e.  return @kind void;
  catch `java.lang.Exception` @[L223b38..L223c02] goto L223c52;
  catch `java.lang.ClassNotFoundException` @[L223c0a..L223c16] goto L223c18;
  catch `java.lang.Exception` @[L223c0a..L223c16] goto L223c52;
  catch `java.lang.Exception` @[L223c1a..L223c50] goto L223c52;
}
procedure `void` `requestPermissions`(`cordova.plugins.Diagnostic` v8 @kind this, `org.apache.cordova.CordovaPlugin` v9 @kind object, `int` v10 , `java.lang.String`[] v11 @kind object) @signature `Lcordova/plugins/Diagnostic;.requestPermissions:(Lorg/apache/cordova/CordovaPlugin;I[Ljava/lang/String;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L223ca8.  v0:= v8.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L223cac.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L223cb2.  v0:= temp @kind object;
  #L223cb4.  v1:= "requestPermissions" @kind object;
  #L223cb8.  v2:= 3I;
  #L223cba.  v3:= new `java.lang.Class`[v2];
  #L223cbe.  v4:= constclass @type ^`org.apache.cordova.CordovaPlugin` @kind object;
  #L223cc2.  v5:= 0I;
  #L223cc4.  v3[v5]:= v4 @kind object;
  #L223cc8.  v4:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L223ccc.  v6:= 1I;
  #L223cce.  v3[v6]:= v4 @kind object;
  #L223cd2.  v4:= constclass @type ^`java.lang.String`[] @kind object;
  #L223cd6.  v7:= 2I;
  #L223cd8.  v3[v7]:= v4 @kind object;
  #L223cdc.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L223ce2.  v0:= temp @kind object;
  #L223ce4.  v1:= v8.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L223ce8.  v2:= new `java.lang.Object`[v2];
  #L223cec.  v2[v5]:= v9 @kind object;
  #L223cf0.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L223cf6.  v9:= temp @kind object;
  #L223cf8.  v2[v6]:= v9 @kind object;
  #L223cfc.  v2[v7]:= v11 @kind object;
  #L223d00.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L223d06.  v9:= length @variable v11;
  #L223d08.  if v5 >= v9 then goto L223d2c;
  #L223d0c.  v10:= v11[v5] @kind object;
  #L223d10.  v0:= `@@cordova.plugins.Diagnostic.permissionsMap` @type ^`java.util.Map` @kind object;
  #L223d14.  call temp:= `get`(v0, v10) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L223d1a.  v10:= temp @kind object;
  #L223d1c.  v10:= (`java.lang.String`) v10 @kind object;
  #L223d20.  call `setPermissionRequested`(v8, v10) @signature `Lcordova/plugins/Diagnostic;.setPermissionRequested:(Ljava/lang/String;)V` @kind virtual;
  #L223d26.  v5:= v5 + 1;
  #L223d2a.  goto L223d08;
  #L223d2c.  return @kind void;
  #L223d2e.  v9:= new `java.lang.Exception`;
  #L223d32.  v10:= "requestPermissions() method not found in CordovaInterface implementation of Cordova v8.1.0" @kind object;
  #L223d36.  call `<init>`(v9, v10) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L223d3c.  throw v9;
  #L223d3e.  return @kind void;
  catch `java.lang.NoSuchMethodException` @[L223ca8..L223d26] goto L223d2e;
}
procedure `void` `requestRuntimePermission`(`cordova.plugins.Diagnostic` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcordova/plugins/Diagnostic;.requestRuntimePermission:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L223d60.  call temp:= `storeContextByRequestId`(v1) @signature `Lcordova/plugins/Diagnostic;.storeContextByRequestId:()I` @kind virtual;
  #L223d66.  v0:= temp;
  #L223d68.  call `requestRuntimePermission`(v1, v2, v0) @signature `Lcordova/plugins/Diagnostic;.requestRuntimePermission:(Ljava/lang/String;I)V` @kind virtual;
  #L223d6e.  return @kind void;
}
procedure `void` `requestRuntimePermission`(`cordova.plugins.Diagnostic` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcordova/plugins/Diagnostic;.requestRuntimePermission:(Ljava/lang/String;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L223d80.  v0:= new `org.json.JSONArray`;
  #L223d84.  call `<init>`(v0) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L223d8a.  call temp:= `put`(v0, v2) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L223d90.  call `_requestRuntimePermissions`(v1, v0, v3) @signature `Lcordova/plugins/Diagnostic;._requestRuntimePermissions:(Lorg/json/JSONArray;I)V` @kind virtual;
  #L223d96.  return @kind void;
}
procedure `void` `requestRuntimePermission`(`cordova.plugins.Diagnostic` v1 @kind this, `org.json.JSONArray` v2 @kind object) @signature `Lcordova/plugins/Diagnostic;.requestRuntimePermission:(Lorg/json/JSONArray;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L223da8.  v0:= 0I;
  #L223daa.  call temp:= `getString`(v2, v0) @signature `Lorg/json/JSONArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L223db0.  v2:= temp @kind object;
  #L223db2.  call `requestRuntimePermission`(v1, v2) @signature `Lcordova/plugins/Diagnostic;.requestRuntimePermission:(Ljava/lang/String;)V` @kind virtual;
  #L223db8.  return @kind void;
}
procedure `void` `requestRuntimePermissions`(`cordova.plugins.Diagnostic` v1 @kind this, `org.json.JSONArray` v2 @kind object) @signature `Lcordova/plugins/Diagnostic;.requestRuntimePermissions:(Lorg/json/JSONArray;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L223dcc.  v0:= 0I;
  #L223dce.  call temp:= `getJSONArray`(v2, v0) @signature `Lorg/json/JSONArray;.getJSONArray:(I)Lorg/json/JSONArray;` @kind virtual;
  #L223dd4.  v2:= temp @kind object;
  #L223dd6.  call temp:= `storeContextByRequestId`(v1) @signature `Lcordova/plugins/Diagnostic;.storeContextByRequestId:()I` @kind virtual;
  #L223ddc.  v0:= temp;
  #L223dde.  call `_requestRuntimePermissions`(v1, v2, v0) @signature `Lcordova/plugins/Diagnostic;._requestRuntimePermissions:(Lorg/json/JSONArray;I)V` @kind virtual;
  #L223de4.  return @kind void;
}
procedure `void` `restart`(`cordova.plugins.Diagnostic` v1 @kind this, `org.json.JSONArray` v2 @kind object) @signature `Lcordova/plugins/Diagnostic;.restart:(Lorg/json/JSONArray;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L223df8.  v0:= 0I;
  #L223dfa.  call temp:= `getBoolean`(v2, v0) @signature `Lorg/json/JSONArray;.getBoolean:(I)Z` @kind virtual;
  #L223e00.  v2:= temp;
  #L223e02.  if v2 == 0 then goto L223e0e;
  #L223e06.  call `doColdRestart`(v1) @signature `Lcordova/plugins/Diagnostic;.doColdRestart:()V` @kind virtual;
  #L223e0c.  goto L223e14;
  #L223e0e.  call `doWarmRestart`(v1) @signature `Lcordova/plugins/Diagnostic;.doWarmRestart:()V` @kind virtual;
  #L223e14.  return @kind void;
}
procedure `void` `sendRuntimeRequestResult`(`cordova.plugins.Diagnostic` v5 @kind this, `int` v6 ) @signature `Lcordova/plugins/Diagnostic;.sendRuntimeRequestResult:(I)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L223e28.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L223e2e.  v6:= temp @kind object;
  #L223e30.  v0:= v5.`cordova.plugins.Diagnostic.callbackContexts` @type ^`java.util.HashMap` @kind object;
  #L223e34.  call temp:= `get`(v0, v6) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L223e3a.  v0:= temp @kind object;
  #L223e3c.  v0:= (`org.apache.cordova.CallbackContext`) v0 @kind object;
  #L223e40.  v1:= v5.`cordova.plugins.Diagnostic.permissionStatuses` @type ^`java.util.HashMap` @kind object;
  #L223e44.  call temp:= `get`(v1, v6) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L223e4a.  v1:= temp @kind object;
  #L223e4c.  v1:= (`org.json.JSONObject`) v1 @kind object;
  #L223e50.  v2:= "Diagnostic" @kind object;
  #L223e54.  v3:= new `java.lang.StringBuilder`;
  #L223e58.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L223e5e.  v4:= "Sending runtime request result for id=" @kind object;
  #L223e62.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223e68.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223e6e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L223e74.  v6:= temp @kind object;
  #L223e76.  call temp:= `v`(v2, v6) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L223e7c.  call `success`(v0, v1) @signature `Lorg/apache/cordova/CallbackContext;.success:(Lorg/json/JSONObject;)V` @kind virtual;
  #L223e82.  return @kind void;
}
procedure `void` `setPermissionRequested`(`cordova.plugins.Diagnostic` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcordova/plugins/Diagnostic;.setPermissionRequested:(Ljava/lang/String;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L223e94.  v0:= v2.`cordova.plugins.Diagnostic.editor` @type ^`android.content.SharedPreferences$Editor` @kind object;
  #L223e98.  v1:= 1I;
  #L223e9a.  call temp:= `putBoolean`(v0, v3, v1) @signature `Landroid/content/SharedPreferences$Editor;.putBoolean:(Ljava/lang/String;Z)Landroid/content/SharedPreferences$Editor;` @kind interface;
  #L223ea0.  v0:= v2.`cordova.plugins.Diagnostic.editor` @type ^`android.content.SharedPreferences$Editor` @kind object;
  #L223ea4.  call temp:= `commit`(v0) @signature `Landroid/content/SharedPreferences$Editor;.commit:()Z` @kind interface;
  #L223eaa.  v0:= temp;
  #L223eac.  if v0 != 0 then goto L223ed8;
  #L223eb0.  v0:= new `java.lang.StringBuilder`;
  #L223eb4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L223eba.  v1:= "Failed to set permission requested flag for " @kind object;
  #L223ebe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223ec4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L223eca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L223ed0.  v3:= temp @kind object;
  #L223ed2.  call `handleError`(v2, v3) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;)V` @kind virtual;
  #L223ed8.  return @kind void;
}
procedure `boolean` `shouldShowRequestPermissionRationale`(`cordova.plugins.Diagnostic` v7 @kind this, `android.app.Activity` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lcordova/plugins/Diagnostic;.shouldShowRequestPermissionRationale:(Landroid/app/Activity;Ljava/lang/String;)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L222e24.  v0:= constclass @type ^`android.support.v4.app.ActivityCompat` @kind object;
  #L222e28.  v1:= "shouldShowRequestPermissionRationale" @kind object;
  #L222e2c.  v2:= 2I;
  #L222e2e.  v3:= new `java.lang.Class`[v2];
  #L222e32.  v4:= constclass @type ^`android.app.Activity` @kind object;
  #L222e36.  v5:= 0I;
  #L222e38.  v3[v5]:= v4 @kind object;
  #L222e3c.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L222e40.  v6:= 1I;
  #L222e42.  v3[v6]:= v4 @kind object;
  #L222e46.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L222e4c.  v0:= temp @kind object;
  #L222e4e.  v1:= 0I;
  #L222e50.  v2:= new `java.lang.Object`[v2];
  #L222e54.  v2[v5]:= v8 @kind object;
  #L222e58.  v2[v6]:= v9 @kind object;
  #L222e5c.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L222e62.  v8:= temp @kind object;
  #L222e64.  v8:= (`java.lang.Boolean`) v8 @kind object;
  #L222e68.  call temp:= `booleanValue`(v8) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L222e6e.  v8:= temp;
  #L222e70.  return v8;
  #L222e72.  v8:= new `java.lang.Exception`;
  #L222e76.  v9:= "shouldShowRequestPermissionRationale() method not found in ActivityCompat class. Check you have Android Support Library v23+ installed" @kind object;
  #L222e7a.  call `<init>`(v8, v9) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L222e80.  throw v8;
  catch `java.lang.NoSuchMethodException` @[L222e24..L222e70] goto L222e72;
}
procedure `int` `storeContextByRequestId`(`cordova.plugins.Diagnostic` v3 @kind this) @signature `Lcordova/plugins/Diagnostic;.storeContextByRequestId:()I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L222f10.  call temp:= `generateRandomRequestId`(v3) @signature `Lcordova/plugins/Diagnostic;.generateRandomRequestId:()Ljava/lang/String;` @kind virtual;
  #L222f16.  v0:= temp @kind object;
  #L222f18.  v1:= v3.`cordova.plugins.Diagnostic.callbackContexts` @type ^`java.util.HashMap` @kind object;
  #L222f1c.  v2:= v3.`cordova.plugins.Diagnostic.currentContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L222f20.  call temp:= `put`(v1, v0, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L222f26.  v1:= v3.`cordova.plugins.Diagnostic.permissionStatuses` @type ^`java.util.HashMap` @kind object;
  #L222f2a.  v2:= new `org.json.JSONObject`;
  #L222f2e.  call `<init>`(v2) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L222f34.  call temp:= `put`(v1, v0, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L222f3a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L222f40.  v0:= temp @kind object;
  #L222f42.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L222f48.  v0:= temp;
  #L222f4a.  return v0;
}
procedure `void` `switchToAppSettings`(`cordova.plugins.Diagnostic` v4 @kind this) @signature `Lcordova/plugins/Diagnostic;.switchToAppSettings:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L223eec.  v0:= "Switch to App Settings" @kind object;
  #L223ef0.  call `logDebug`(v4, v0) @signature `Lcordova/plugins/Diagnostic;.logDebug:(Ljava/lang/String;)V` @kind virtual;
  #L223ef6.  v0:= new `android.content.Intent`;
  #L223efa.  v1:= "android.settings.APPLICATION_DETAILS_SETTINGS" @kind object;
  #L223efe.  call `<init>`(v0, v1) @signature `Landroid/content/Intent;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L223f04.  v1:= "package" @kind object;
  #L223f08.  v2:= v4.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L223f0c.  call temp:= `getActivity`(v2) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroid/app/Activity;` @kind interface;
  #L223f12.  v2:= temp @kind object;
  #L223f14.  call temp:= `getPackageName`(v2) @signature `Landroid/app/Activity;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L223f1a.  v2:= temp @kind object;
  #L223f1c.  v3:= 0I;
  #L223f1e.  call temp:= `fromParts`(v1, v2, v3) @signature `Landroid/net/Uri;.fromParts:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;` @kind static;
  #L223f24.  v1:= temp @kind object;
  #L223f26.  call temp:= `setData`(v0, v1) @signature `Landroid/content/Intent;.setData:(Landroid/net/Uri;)Landroid/content/Intent;` @kind virtual;
  #L223f2c.  v1:= v4.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L223f30.  call temp:= `getActivity`(v1) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroid/app/Activity;` @kind interface;
  #L223f36.  v1:= temp @kind object;
  #L223f38.  call `startActivity`(v1, v0) @signature `Landroid/app/Activity;.startActivity:(Landroid/content/Intent;)V` @kind virtual;
  #L223f3e.  return @kind void;
}
procedure `void` `switchToMobileDataSettings`(`cordova.plugins.Diagnostic` v2 @kind this) @signature `Lcordova/plugins/Diagnostic;.switchToMobileDataSettings:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L223f50.  v0:= "Switch to Mobile Data Settings" @kind object;
  #L223f54.  call `logDebug`(v2, v0) @signature `Lcordova/plugins/Diagnostic;.logDebug:(Ljava/lang/String;)V` @kind virtual;
  #L223f5a.  v0:= new `android.content.Intent`;
  #L223f5e.  v1:= "android.settings.DATA_ROAMING_SETTINGS" @kind object;
  #L223f62.  call `<init>`(v0, v1) @signature `Landroid/content/Intent;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L223f68.  v1:= v2.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L223f6c.  call temp:= `getActivity`(v1) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroid/app/Activity;` @kind interface;
  #L223f72.  v1:= temp @kind object;
  #L223f74.  call `startActivity`(v1, v0) @signature `Landroid/app/Activity;.startActivity:(Landroid/content/Intent;)V` @kind virtual;
  #L223f7a.  return @kind void;
}
procedure `void` `switchToWirelessSettings`(`cordova.plugins.Diagnostic` v2 @kind this) @signature `Lcordova/plugins/Diagnostic;.switchToWirelessSettings:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L223f8c.  v0:= "Switch to wireless Settings" @kind object;
  #L223f90.  call `logDebug`(v2, v0) @signature `Lcordova/plugins/Diagnostic;.logDebug:(Ljava/lang/String;)V` @kind virtual;
  #L223f96.  v0:= new `android.content.Intent`;
  #L223f9a.  v1:= "android.settings.WIRELESS_SETTINGS" @kind object;
  #L223f9e.  call `<init>`(v0, v1) @signature `Landroid/content/Intent;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L223fa4.  v1:= v2.`cordova.plugins.Diagnostic.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L223fa8.  call temp:= `getActivity`(v1) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroid/app/Activity;` @kind interface;
  #L223fae.  v1:= temp @kind object;
  #L223fb0.  call `startActivity`(v1, v0) @signature `Landroid/app/Activity;.startActivity:(Landroid/content/Intent;)V` @kind virtual;
  #L223fb6.  return @kind void;
}
