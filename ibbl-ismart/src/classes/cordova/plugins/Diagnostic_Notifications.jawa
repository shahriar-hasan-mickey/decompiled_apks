record `cordova.plugins.Diagnostic_Notifications` @kind class @AccessFlag PUBLIC extends `org.apache.cordova.CordovaPlugin` @kind class {
  `org.apache.cordova.CallbackContext` `cordova.plugins.Diagnostic_Notifications.currentContext` @AccessFlag PROTECTED;
  `cordova.plugins.Diagnostic` `cordova.plugins.Diagnostic_Notifications.diagnostic` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@cordova.plugins.Diagnostic_Notifications.TAG` @AccessFlag PUBLIC_STATIC_FINAL;
global `cordova.plugins.Diagnostic_Notifications` `@@cordova.plugins.Diagnostic_Notifications.instance` @AccessFlag PUBLIC_STATIC;
procedure `void` `<clinit>`() @signature `Lcordova/plugins/Diagnostic_Notifications;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L2226d8.  return @kind void;
}
procedure `void` `<init>`(`cordova.plugins.Diagnostic_Notifications` v0 @kind this) @signature `Lcordova/plugins/Diagnostic_Notifications;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2226ec.  call `<init>`(v0) @signature `Lorg/apache/cordova/CordovaPlugin;.<init>:()V` @kind direct;
  #L2226f2.  return @kind void;
}
procedure `boolean` `execute`(`cordova.plugins.Diagnostic_Notifications` v1 @kind this, `java.lang.String` v2 @kind object, `org.json.JSONArray` v3 @kind object, `org.apache.cordova.CallbackContext` v4 @kind object) @signature `Lcordova/plugins/Diagnostic_Notifications;.execute:(Ljava/lang/String;Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22261c.  v1.`cordova.plugins.Diagnostic_Notifications.currentContext` @type ^`org.apache.cordova.CallbackContext` := v4 @kind object;
  #L222620.  v3:= 0I;
  #L222622.  v0:= "isRemoteNotificationsEnabled" @kind object;
  #L222626.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22262c.  v2:= temp;
  #L22262e.  if v2 == 0 then goto L22264e;
  #L222632.  call temp:= `isRemoteNotificationsEnabled`(v1) @signature `Lcordova/plugins/Diagnostic_Notifications;.isRemoteNotificationsEnabled:()Z` @kind virtual;
  #L222638.  v2:= temp;
  #L22263a.  v0:= 1I;
  #L22263c.  if v2 == 0 then goto L222644;
  #L222640.  v2:= 1I;
  #L222642.  goto L222646;
  #L222644.  v2:= 0I;
  #L222646.  call `success`(v4, v2) @signature `Lorg/apache/cordova/CallbackContext;.success:(I)V` @kind virtual;
  #L22264c.  return v0;
  #L22264e.  v2:= v1.`cordova.plugins.Diagnostic_Notifications.diagnostic` @type ^`cordova.plugins.Diagnostic` @kind object;
  #L222652.  v4:= "Invalid action" @kind object;
  #L222656.  call `handleError`(v2, v4) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;)V` @kind virtual;
  #L22265c.  return v3;
  #L22265e.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L222660.  v4:= v1.`cordova.plugins.Diagnostic_Notifications.diagnostic` @type ^`cordova.plugins.Diagnostic` @kind object;
  #L222664.  v0:= "Exception occurred: " @kind object;
  #L222668.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L22266e.  v2:= temp @kind object;
  #L222670.  call temp:= `concat`(v0, v2) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L222676.  v2:= temp @kind object;
  #L222678.  call `handleError`(v4, v2) @signature `Lcordova/plugins/Diagnostic;.handleError:(Ljava/lang/String;)V` @kind virtual;
  #L22267e.  return v3;
  catch `java.lang.Exception` @[L222622..L22265c] goto L22265e;
}
procedure `void` `initialize`(`cordova.plugins.Diagnostic_Notifications` v2 @kind this, `org.apache.cordova.CordovaInterface` v3 @kind object, `org.apache.cordova.CordovaWebView` v4 @kind object) @signature `Lcordova/plugins/Diagnostic_Notifications;.initialize:(Lorg/apache/cordova/CordovaInterface;Lorg/apache/cordova/CordovaWebView;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L222704.  v0:= "Diagnostic_Notifications" @kind object;
  #L222708.  v1:= "initialize()" @kind object;
  #L22270c.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L222712.  `@@cordova.plugins.Diagnostic_Notifications.instance` @type ^`cordova.plugins.Diagnostic_Notifications` := v2 @kind object;
  #L222716.  call temp:= `getInstance`() @signature `Lcordova/plugins/Diagnostic;.getInstance:()Lcordova/plugins/Diagnostic;` @kind static;
  #L22271c.  v0:= temp @kind object;
  #L22271e.  v2.`cordova.plugins.Diagnostic_Notifications.diagnostic` @type ^`cordova.plugins.Diagnostic` := v0 @kind object;
  #L222722.  call `initialize`(v2, v3, v4) @signature `Lorg/apache/cordova/CordovaPlugin;.initialize:(Lorg/apache/cordova/CordovaInterface;Lorg/apache/cordova/CordovaWebView;)V` @kind super;
  #L222728.  return @kind void;
}
procedure `boolean` `isRemoteNotificationsEnabled`(`cordova.plugins.Diagnostic_Notifications` v1 @kind this) @signature `Lcordova/plugins/Diagnostic_Notifications;.isRemoteNotificationsEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2226a0.  v0:= v1.`cordova.plugins.Diagnostic_Notifications.cordova` @type ^`org.apache.cordova.CordovaInterface` @kind object;
  #L2226a4.  call temp:= `getActivity`(v0) @signature `Lorg/apache/cordova/CordovaInterface;.getActivity:()Landroid/app/Activity;` @kind interface;
  #L2226aa.  v0:= temp @kind object;
  #L2226ac.  call temp:= `getApplicationContext`(v0) @signature `Landroid/app/Activity;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L2226b2.  v0:= temp @kind object;
  #L2226b4.  call temp:= `from`(v0) @signature `Landroid/support/v4/app/NotificationManagerCompat;.from:(Landroid/content/Context;)Landroid/support/v4/app/NotificationManagerCompat;` @kind static;
  #L2226ba.  v0:= temp @kind object;
  #L2226bc.  call temp:= `areNotificationsEnabled`(v0) @signature `Landroid/support/v4/app/NotificationManagerCompat;.areNotificationsEnabled:()Z` @kind virtual;
  #L2226c2.  v0:= temp;
  #L2226c4.  return v0;
}
