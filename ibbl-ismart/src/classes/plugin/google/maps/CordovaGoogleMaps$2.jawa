record `plugin.google.maps.CordovaGoogleMaps$2` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `plugin.google.maps.CordovaGoogleMaps` `plugin.google.maps.CordovaGoogleMaps$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.String` `plugin.google.maps.CordovaGoogleMaps$2.val$action` @AccessFlag FINAL_SYNTHETIC;
  `org.json.JSONArray` `plugin.google.maps.CordovaGoogleMaps$2.val$args` @AccessFlag FINAL_SYNTHETIC;
  `org.apache.cordova.CallbackContext` `plugin.google.maps.CordovaGoogleMaps$2.val$callbackContext` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`plugin.google.maps.CordovaGoogleMaps$2` v0 @kind this, `plugin.google.maps.CordovaGoogleMaps` v1 @kind object, `java.lang.String` v2 @kind object, `org.json.JSONArray` v3 @kind object, `org.apache.cordova.CallbackContext` v4 @kind object) @signature `Lplugin/google/maps/CordovaGoogleMaps$2;.<init>:(Lplugin/google/maps/CordovaGoogleMaps;Ljava/lang/String;Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27182c.  v0.`plugin.google.maps.CordovaGoogleMaps$2.this$0` @type ^`plugin.google.maps.CordovaGoogleMaps` := v1 @kind object;
  #L271830.  v0.`plugin.google.maps.CordovaGoogleMaps$2.val$action` @type ^`java.lang.String` := v2 @kind object;
  #L271834.  v0.`plugin.google.maps.CordovaGoogleMaps$2.val$args` @type ^`org.json.JSONArray` := v3 @kind object;
  #L271838.  v0.`plugin.google.maps.CordovaGoogleMaps$2.val$callbackContext` @type ^`org.apache.cordova.CallbackContext` := v4 @kind object;
  #L27183c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L271842.  return @kind void;
}
procedure `void` `run`(`plugin.google.maps.CordovaGoogleMaps$2` v3 @kind this) @signature `Lplugin/google/maps/CordovaGoogleMaps$2;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L271854.  v0:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$action` @type ^`java.lang.String` @kind object;
  #L271858.  v1:= "putHtmlElements" @kind object;
  #L27185c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L271862.  v0:= temp;
  #L271864.  if v0 == 0 then goto L27187e;
  #L271868.  v0:= v3.`plugin.google.maps.CordovaGoogleMaps$2.this$0` @type ^`plugin.google.maps.CordovaGoogleMaps` @kind object;
  #L27186c.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$args` @type ^`org.json.JSONArray` @kind object;
  #L271870.  v2:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$callbackContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L271874.  call `putHtmlElements`(v0, v1, v2) @signature `Lplugin/google/maps/CordovaGoogleMaps;.putHtmlElements:(Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)V` @kind virtual;
  #L27187a.  goto L2719ca;
  #L27187e.  v0:= "clearHtmlElements" @kind object;
  #L271882.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$action` @type ^`java.lang.String` @kind object;
  #L271886.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L27188c.  v0:= temp;
  #L27188e.  if v0 == 0 then goto L2718a8;
  #L271892.  v0:= v3.`plugin.google.maps.CordovaGoogleMaps$2.this$0` @type ^`plugin.google.maps.CordovaGoogleMaps` @kind object;
  #L271896.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$args` @type ^`org.json.JSONArray` @kind object;
  #L27189a.  v2:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$callbackContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L27189e.  call `clearHtmlElements`(v0, v1, v2) @signature `Lplugin/google/maps/CordovaGoogleMaps;.clearHtmlElements:(Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)V` @kind virtual;
  #L2718a4.  goto L2719ca;
  #L2718a8.  v0:= "pause" @kind object;
  #L2718ac.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$action` @type ^`java.lang.String` @kind object;
  #L2718b0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2718b6.  v0:= temp;
  #L2718b8.  if v0 == 0 then goto L2718d2;
  #L2718bc.  v0:= v3.`plugin.google.maps.CordovaGoogleMaps$2.this$0` @type ^`plugin.google.maps.CordovaGoogleMaps` @kind object;
  #L2718c0.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$args` @type ^`org.json.JSONArray` @kind object;
  #L2718c4.  v2:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$callbackContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L2718c8.  call `pause`(v0, v1, v2) @signature `Lplugin/google/maps/CordovaGoogleMaps;.pause:(Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)V` @kind virtual;
  #L2718ce.  goto L2719ca;
  #L2718d2.  v0:= "resume" @kind object;
  #L2718d6.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$action` @type ^`java.lang.String` @kind object;
  #L2718da.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2718e0.  v0:= temp;
  #L2718e2.  if v0 == 0 then goto L2718fa;
  #L2718e6.  v0:= v3.`plugin.google.maps.CordovaGoogleMaps$2.this$0` @type ^`plugin.google.maps.CordovaGoogleMaps` @kind object;
  #L2718ea.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$args` @type ^`org.json.JSONArray` @kind object;
  #L2718ee.  v2:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$callbackContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L2718f2.  call `resume`(v0, v1, v2) @signature `Lplugin/google/maps/CordovaGoogleMaps;.resume:(Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)V` @kind virtual;
  #L2718f8.  goto L2719ca;
  #L2718fa.  v0:= "getMap" @kind object;
  #L2718fe.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$action` @type ^`java.lang.String` @kind object;
  #L271902.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L271908.  v0:= temp;
  #L27190a.  if v0 == 0 then goto L271922;
  #L27190e.  v0:= v3.`plugin.google.maps.CordovaGoogleMaps$2.this$0` @type ^`plugin.google.maps.CordovaGoogleMaps` @kind object;
  #L271912.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$args` @type ^`org.json.JSONArray` @kind object;
  #L271916.  v2:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$callbackContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L27191a.  call `getMap`(v0, v1, v2) @signature `Lplugin/google/maps/CordovaGoogleMaps;.getMap:(Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)V` @kind virtual;
  #L271920.  goto L2719ca;
  #L271922.  v0:= "getPanorama" @kind object;
  #L271926.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$action` @type ^`java.lang.String` @kind object;
  #L27192a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L271930.  v0:= temp;
  #L271932.  if v0 == 0 then goto L27194a;
  #L271936.  v0:= v3.`plugin.google.maps.CordovaGoogleMaps$2.this$0` @type ^`plugin.google.maps.CordovaGoogleMaps` @kind object;
  #L27193a.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$args` @type ^`org.json.JSONArray` @kind object;
  #L27193e.  v2:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$callbackContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L271942.  call `getPanorama`(v0, v1, v2) @signature `Lplugin/google/maps/CordovaGoogleMaps;.getPanorama:(Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)V` @kind virtual;
  #L271948.  goto L2719ca;
  #L27194a.  v0:= "removeMap" @kind object;
  #L27194e.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$action` @type ^`java.lang.String` @kind object;
  #L271952.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L271958.  v0:= temp;
  #L27195a.  if v0 == 0 then goto L271972;
  #L27195e.  v0:= v3.`plugin.google.maps.CordovaGoogleMaps$2.this$0` @type ^`plugin.google.maps.CordovaGoogleMaps` @kind object;
  #L271962.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$args` @type ^`org.json.JSONArray` @kind object;
  #L271966.  v2:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$callbackContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L27196a.  call `removeMap`(v0, v1, v2) @signature `Lplugin/google/maps/CordovaGoogleMaps;.removeMap:(Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)V` @kind virtual;
  #L271970.  goto L2719ca;
  #L271972.  v0:= "backHistory" @kind object;
  #L271976.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$action` @type ^`java.lang.String` @kind object;
  #L27197a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L271980.  v0:= temp;
  #L271982.  if v0 == 0 then goto L27199a;
  #L271986.  v0:= v3.`plugin.google.maps.CordovaGoogleMaps$2.this$0` @type ^`plugin.google.maps.CordovaGoogleMaps` @kind object;
  #L27198a.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$args` @type ^`org.json.JSONArray` @kind object;
  #L27198e.  v2:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$callbackContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L271992.  call `backHistory`(v0, v1, v2) @signature `Lplugin/google/maps/CordovaGoogleMaps;.backHistory:(Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)V` @kind virtual;
  #L271998.  goto L2719ca;
  #L27199a.  v0:= "updateMapPositionOnly" @kind object;
  #L27199e.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$action` @type ^`java.lang.String` @kind object;
  #L2719a2.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2719a8.  v0:= temp;
  #L2719aa.  if v0 == 0 then goto L2719ca;
  #L2719ae.  v0:= v3.`plugin.google.maps.CordovaGoogleMaps$2.this$0` @type ^`plugin.google.maps.CordovaGoogleMaps` @kind object;
  #L2719b2.  v1:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$args` @type ^`org.json.JSONArray` @kind object;
  #L2719b6.  v2:= v3.`plugin.google.maps.CordovaGoogleMaps$2.val$callbackContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L2719ba.  call `updateMapPositionOnly`(v0, v1, v2) @signature `Lplugin/google/maps/CordovaGoogleMaps;.updateMapPositionOnly:(Lorg/json/JSONArray;Lorg/apache/cordova/CallbackContext;)V` @kind virtual;
  #L2719c0.  goto L2719ca;
  #L2719c2.  v0:= Exception @type ^`org.json.JSONException` @kind object;
  #L2719c4.  call `printStackTrace`(v0) @signature `Lorg/json/JSONException;.printStackTrace:()V` @kind virtual;
  #L2719ca.  return @kind void;
  catch `org.json.JSONException` @[L271854..L2719c0] goto L2719c2;
}
