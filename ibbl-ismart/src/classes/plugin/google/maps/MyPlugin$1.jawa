record `plugin.google.maps.MyPlugin$1` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `plugin.google.maps.MyPlugin` `plugin.google.maps.MyPlugin$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`plugin.google.maps.MyPlugin$1` v0 @kind this, `plugin.google.maps.MyPlugin` v1 @kind object) @signature `Lplugin/google/maps/MyPlugin$1;.<init>:(Lplugin/google/maps/MyPlugin;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L272580.  v0.`plugin.google.maps.MyPlugin$1.this$0` @type ^`plugin.google.maps.MyPlugin` := v1 @kind object;
  #L272584.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27258a.  return @kind void;
}
procedure `void` `run`(`plugin.google.maps.MyPlugin$1` v1 @kind this) @signature `Lplugin/google/maps/MyPlugin$1;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27259c.  call temp:= `newCachedThreadPool`() @signature `Ljava/util/concurrent/Executors;.newCachedThreadPool:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L2725a2.  v0:= temp @kind object;
  #L2725a4.  `@@plugin.google.maps.MyPlugin.executorService` @type ^`java.util.concurrent.ExecutorService` := v0 @kind object;
  #L2725a8.  return @kind void;
}
