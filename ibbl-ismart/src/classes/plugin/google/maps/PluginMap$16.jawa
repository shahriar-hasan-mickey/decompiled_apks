record `plugin.google.maps.PluginMap$16` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `plugin.google.maps.PluginMap` `plugin.google.maps.PluginMap$16.this$0` @AccessFlag FINAL_SYNTHETIC;
  `org.apache.cordova.CallbackContext` `plugin.google.maps.PluginMap$16.val$callbackContext` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`plugin.google.maps.PluginMap$16` v0 @kind this, `plugin.google.maps.PluginMap` v1 @kind object, `org.apache.cordova.CallbackContext` v2 @kind object) @signature `Lplugin/google/maps/PluginMap$16;.<init>:(Lplugin/google/maps/PluginMap;Lorg/apache/cordova/CallbackContext;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L279f64.  v0.`plugin.google.maps.PluginMap$16.this$0` @type ^`plugin.google.maps.PluginMap` := v1 @kind object;
  #L279f68.  v0.`plugin.google.maps.PluginMap$16.val$callbackContext` @type ^`org.apache.cordova.CallbackContext` := v2 @kind object;
  #L279f6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L279f72.  return @kind void;
}
procedure `void` `run`(`plugin.google.maps.PluginMap$16` v2 @kind this) @signature `Lplugin/google/maps/PluginMap$16;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L279f84.  v0:= 0I;
  #L279f86.  v1:= 0I;
  #L279f88.  if v1 != 0 then goto L279faa;
  #L279f8c.  v1:= v2.`plugin.google.maps.PluginMap$16.this$0` @type ^`plugin.google.maps.PluginMap` @kind object;
  #L279f90.  v1:= v1.`plugin.google.maps.PluginMap.map` @type ^`com.google.android.gms.maps.GoogleMap` @kind object;
  #L279f94.  call `clear`(v1) @signature `Lcom/google/android/gms/maps/GoogleMap;.clear:()V` @kind virtual;
  #L279f9a.  v1:= 1I;
  #L279f9c.  goto L279f88;
  #L279f9e.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L279fa0.  call `printStackTrace`(v1) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L279fa6.  v1:= 0I;
  #L279fa8.  goto L279f88;
  #L279faa.  v0:= v2.`plugin.google.maps.PluginMap$16.val$callbackContext` @type ^`org.apache.cordova.CallbackContext` @kind object;
  #L279fae.  if v0 == 0 then goto L279fb8;
  #L279fb2.  call `success`(v0) @signature `Lorg/apache/cordova/CallbackContext;.success:()V` @kind virtual;
  #L279fb8.  return @kind void;
  catch `java.lang.Exception` @[L279f8c..L279f9a] goto L279f9e;
}
