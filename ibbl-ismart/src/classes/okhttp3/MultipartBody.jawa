record `okhttp3.MultipartBody` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.RequestBody` @kind class {
  `okio.ByteString` `okhttp3.MultipartBody.boundary` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.MultipartBody.contentLength` @AccessFlag PRIVATE;
  `okhttp3.MediaType` `okhttp3.MultipartBody.contentType` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `okhttp3.MultipartBody.originalType` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.MultipartBody.parts` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.ALTERNATIVE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.COLONSPACE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.CRLF` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.DASHDASH` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.DIGEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.FORM` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.MIXED` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.PARALLEL` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MultipartBody;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L22fbc8.  v0:= "multipart/mixed" @kind object;
  #L22fbcc.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L22fbd2.  v0:= temp @kind object;
  #L22fbd4.  `@@okhttp3.MultipartBody.MIXED` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L22fbd8.  v0:= "multipart/alternative" @kind object;
  #L22fbdc.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L22fbe2.  v0:= temp @kind object;
  #L22fbe4.  `@@okhttp3.MultipartBody.ALTERNATIVE` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L22fbe8.  v0:= "multipart/digest" @kind object;
  #L22fbec.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L22fbf2.  v0:= temp @kind object;
  #L22fbf4.  `@@okhttp3.MultipartBody.DIGEST` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L22fbf8.  v0:= "multipart/parallel" @kind object;
  #L22fbfc.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L22fc02.  v0:= temp @kind object;
  #L22fc04.  `@@okhttp3.MultipartBody.PARALLEL` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L22fc08.  v0:= "multipart/form-data" @kind object;
  #L22fc0c.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L22fc12.  v0:= temp @kind object;
  #L22fc14.  `@@okhttp3.MultipartBody.FORM` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L22fc18.  v0:= 2I;
  #L22fc1a.  v1:= new `byte`[v0];
  #L22fc1e.  goto L22fc48;
  #L22fc24.  `@@okhttp3.MultipartBody.COLONSPACE` @type ^`byte`[] := v1 @kind object;
  #L22fc28.  v1:= new `byte`[v0];
  #L22fc2c.  goto L22fc54;
  #L22fc32.  `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] := v1 @kind object;
  #L22fc36.  v0:= new `byte`[v0];
  #L22fc3a.  goto L22fc60;
  #L22fc40.  `@@okhttp3.MultipartBody.DASHDASH` @type ^`byte`[] := v0 @kind object;
  #L22fc44.  return @kind void;
  #L22fc46.  
  #L22fc48.  v1:= (58I, 32I) @kind object;
  #L22fc51.  goto L22fc24;
  #L22fc52.  
  #L22fc54.  v1:= (13I, 10I) @kind object;
  #L22fc5d.  goto L22fc32;
  #L22fc5e.  
  #L22fc60.  v0:= (45I, 45I) @kind object;
  #L22fc69.  goto L22fc40;
}
procedure `void` `<init>`(`okhttp3.MultipartBody` v2 @kind this, `okio.ByteString` v3 @kind object, `okhttp3.MediaType` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lokhttp3/MultipartBody;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L22fc7c.  call `<init>`(v2) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L22fc82.  v0:= -1L;
  #L22fc86.  v2.`okhttp3.MultipartBody.contentLength` @type ^`long` := v0 @kind wide;
  #L22fc8a.  v2.`okhttp3.MultipartBody.boundary` @type ^`okio.ByteString` := v3 @kind object;
  #L22fc8e.  v2.`okhttp3.MultipartBody.originalType` @type ^`okhttp3.MediaType` := v4 @kind object;
  #L22fc92.  v0:= new `java.lang.StringBuilder`;
  #L22fc96.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22fc9c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22fca2.  v4:= "; boundary=" @kind object;
  #L22fca6.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22fcac.  call temp:= `utf8`(v3) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L22fcb2.  v3:= temp @kind object;
  #L22fcb4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22fcba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22fcc0.  v3:= temp @kind object;
  #L22fcc2.  call temp:= `parse`(v3) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L22fcc8.  v3:= temp @kind object;
  #L22fcca.  v2.`okhttp3.MultipartBody.contentType` @type ^`okhttp3.MediaType` := v3 @kind object;
  #L22fcce.  call temp:= `immutableList`(v5) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L22fcd4.  v3:= temp @kind object;
  #L22fcd6.  v2.`okhttp3.MultipartBody.parts` @type ^`java.util.List` := v3 @kind object;
  #L22fcda.  return @kind void;
}
procedure `java.lang.StringBuilder` `appendQuotedString`(`java.lang.StringBuilder` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L22f910.  v0:= 34I;
  #L22f914.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22f91a.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22f920.  v1:= temp;
  #L22f922.  v2:= 0I;
  #L22f924.  if v2 >= v1 then goto L22f974;
  #L22f928.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22f92e.  v3:= temp;
  #L22f930.  v4:= 10I;
  #L22f934.  if v3 == v4 then goto L22f964;
  #L22f938.  v4:= 13I;
  #L22f93c.  if v3 == v4 then goto L22f958;
  #L22f940.  if v3 == v0 then goto L22f94c;
  #L22f944.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22f94a.  goto L22f96e;
  #L22f94c.  v3:= "%22" @kind object;
  #L22f950.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22f956.  goto L22f96e;
  #L22f958.  v3:= "%0D" @kind object;
  #L22f95c.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22f962.  goto L22f96e;
  #L22f964.  v3:= "%0A" @kind object;
  #L22f968.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22f96e.  v2:= v2 + 1;
  #L22f972.  goto L22f924;
  #L22f974.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22f97a.  return v5 @kind object;
}
procedure `long` `writeOrCountBytes`(`okhttp3.MultipartBody` v12 @kind this, `okio.BufferedSink` v13 @kind object, `boolean` v14 ) @signature `Lokhttp3/MultipartBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L22f9d8.  if v14 == 0 then goto L22f9ea;
  #L22f9dc.  v13:= new `okio.Buffer`;
  #L22f9e0.  call `<init>`(v13) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L22f9e6.  v0:= v13 @kind object;
  #L22f9e8.  goto L22f9ec;
  #L22f9ea.  v0:= 0I;
  #L22f9ec.  v1:= v12.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L22f9f0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22f9f6.  v1:= temp;
  #L22f9f8.  v2:= 0I;
  #L22f9fa.  v3:= 0L;
  #L22f9fe.  v4:= v3 @kind wide;
  #L22fa00.  v3:= 0I;
  #L22fa02.  if v3 >= v1 then goto L22fb26;
  #L22fa06.  v6:= v12.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L22fa0a.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22fa10.  v6:= temp @kind object;
  #L22fa12.  v6:= (`okhttp3.MultipartBody$Part`) v6 @kind object;
  #L22fa16.  v7:= v6.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` @kind object;
  #L22fa1a.  v6:= v6.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` @kind object;
  #L22fa1e.  v8:= `@@okhttp3.MultipartBody.DASHDASH` @type ^`byte`[] @kind object;
  #L22fa22.  call temp:= `write`(v13, v8) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L22fa28.  v8:= v12.`okhttp3.MultipartBody.boundary` @type ^`okio.ByteString` @kind object;
  #L22fa2c.  call temp:= `write`(v13, v8) @signature `Lokio/BufferedSink;.write:(Lokio/ByteString;)Lokio/BufferedSink;` @kind interface;
  #L22fa32.  v8:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L22fa36.  call temp:= `write`(v13, v8) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L22fa3c.  if v7 == 0 then goto L22fa8a;
  #L22fa40.  call temp:= `size`(v7) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L22fa46.  v8:= temp;
  #L22fa48.  v9:= 0I;
  #L22fa4a.  if v9 >= v8 then goto L22fa8a;
  #L22fa4e.  call temp:= `name`(v7, v9) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L22fa54.  v10:= temp @kind object;
  #L22fa56.  call temp:= `writeUtf8`(v13, v10) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L22fa5c.  v10:= temp @kind object;
  #L22fa5e.  v11:= `@@okhttp3.MultipartBody.COLONSPACE` @type ^`byte`[] @kind object;
  #L22fa62.  call temp:= `write`(v10, v11) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L22fa68.  v10:= temp @kind object;
  #L22fa6a.  call temp:= `value`(v7, v9) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L22fa70.  v11:= temp @kind object;
  #L22fa72.  call temp:= `writeUtf8`(v10, v11) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L22fa78.  v10:= temp @kind object;
  #L22fa7a.  v11:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L22fa7e.  call temp:= `write`(v10, v11) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L22fa84.  v9:= v9 + 1;
  #L22fa88.  goto L22fa4a;
  #L22fa8a.  call temp:= `contentType`(v6) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L22fa90.  v7:= temp @kind object;
  #L22fa92.  if v7 == 0 then goto L22fabc;
  #L22fa96.  v8:= "Content-Type: " @kind object;
  #L22fa9a.  call temp:= `writeUtf8`(v13, v8) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L22faa0.  v8:= temp @kind object;
  #L22faa2.  call temp:= `toString`(v7) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L22faa8.  v7:= temp @kind object;
  #L22faaa.  call temp:= `writeUtf8`(v8, v7) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L22fab0.  v7:= temp @kind object;
  #L22fab2.  v8:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L22fab6.  call temp:= `write`(v7, v8) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L22fabc.  call temp:= `contentLength`(v6) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L22fac2.  v7:= temp @kind wide;
  #L22fac4.  v9:= -1L;
  #L22fac8.  v11:= lcmp(v7, v9);
  #L22facc.  if v11 == 0 then goto L22faf0;
  #L22fad0.  v9:= "Content-Length: " @kind object;
  #L22fad4.  call temp:= `writeUtf8`(v13, v9) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L22fada.  v9:= temp @kind object;
  #L22fadc.  call temp:= `writeDecimalLong`(v9, v7) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L22fae2.  v9:= temp @kind object;
  #L22fae4.  v10:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L22fae8.  call temp:= `write`(v9, v10) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L22faee.  goto L22fafc;
  #L22faf0.  if v14 == 0 then goto L22fafc;
  #L22faf4.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L22fafa.  return v9 @kind wide;
  #L22fafc.  v9:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L22fb00.  call temp:= `write`(v13, v9) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L22fb06.  if v14 == 0 then goto L22fb0e;
  #L22fb0a.  v4:= v4 + v7 @kind long;
  #L22fb0c.  goto L22fb14;
  #L22fb0e.  call `writeTo`(v6, v13) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/BufferedSink;)V` @kind virtual;
  #L22fb14.  v6:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L22fb18.  call temp:= `write`(v13, v6) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L22fb1e.  v3:= v3 + 1;
  #L22fb22.  goto L22fa02;
  #L22fb26.  v1:= `@@okhttp3.MultipartBody.DASHDASH` @type ^`byte`[] @kind object;
  #L22fb2a.  call temp:= `write`(v13, v1) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L22fb30.  v1:= v12.`okhttp3.MultipartBody.boundary` @type ^`okio.ByteString` @kind object;
  #L22fb34.  call temp:= `write`(v13, v1) @signature `Lokio/BufferedSink;.write:(Lokio/ByteString;)Lokio/BufferedSink;` @kind interface;
  #L22fb3a.  v1:= `@@okhttp3.MultipartBody.DASHDASH` @type ^`byte`[] @kind object;
  #L22fb3e.  call temp:= `write`(v13, v1) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L22fb44.  v1:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L22fb48.  call temp:= `write`(v13, v1) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L22fb4e.  if v14 == 0 then goto L22fb62;
  #L22fb52.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L22fb58.  v13:= temp @kind wide;
  #L22fb5a.  v4:= v4 + v13 @kind long;
  #L22fb5c.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L22fb62.  return v4 @kind wide;
}
procedure `java.lang.String` `boundary`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.boundary:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22f8f0.  v0:= v1.`okhttp3.MultipartBody.boundary` @type ^`okio.ByteString` @kind object;
  #L22f8f4.  call temp:= `utf8`(v0) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L22f8fa.  v0:= temp @kind object;
  #L22f8fc.  return v0 @kind object;
}
procedure `long` `contentLength`(`okhttp3.MultipartBody` v5 @kind this) @signature `Lokhttp3/MultipartBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L22f9a4.  v0:= v5.`okhttp3.MultipartBody.contentLength` @type ^`long` @kind wide;
  #L22f9a8.  v2:= -1L;
  #L22f9ac.  v4:= lcmp(v0, v2);
  #L22f9b0.  if v4 == 0 then goto L22f9b6;
  #L22f9b4.  return v0 @kind wide;
  #L22f9b6.  v0:= 0I;
  #L22f9b8.  v1:= 1I;
  #L22f9ba.  call temp:= `writeOrCountBytes`(v5, v0, v1) @signature `Lokhttp3/MultipartBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @kind direct;
  #L22f9c0.  v0:= temp @kind wide;
  #L22f9c2.  v5.`okhttp3.MultipartBody.contentLength` @type ^`long` := v0 @kind wide;
  #L22f9c6.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22fb74.  v0:= v1.`okhttp3.MultipartBody.contentType` @type ^`okhttp3.MediaType` @kind object;
  #L22fb78.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `part`(`okhttp3.MultipartBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/MultipartBody;.part:(I)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22fba4.  v0:= v1.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L22fba8.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22fbae.  v2:= temp @kind object;
  #L22fbb0.  v2:= (`okhttp3.MultipartBody$Part`) v2 @kind object;
  #L22fbb4.  return v2 @kind object;
}
procedure `java.util.List` `parts`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.parts:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22f98c.  v0:= v1.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L22f990.  return v0 @kind object;
}
procedure `int` `size`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22f8d0.  v0:= v1.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L22f8d4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22f8da.  v0:= temp;
  #L22f8dc.  return v0;
}
procedure `okhttp3.MediaType` `type`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.type:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22fb8c.  v0:= v1.`okhttp3.MultipartBody.originalType` @type ^`okhttp3.MediaType` @kind object;
  #L22fb90.  return v0 @kind object;
}
procedure `void` `writeTo`(`okhttp3.MultipartBody` v1 @kind this, `okio.BufferedSink` v2 @kind object) @signature `Lokhttp3/MultipartBody;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22fcec.  v0:= 0I;
  #L22fcee.  call temp:= `writeOrCountBytes`(v1, v2, v0) @signature `Lokhttp3/MultipartBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @kind direct;
  #L22fcf4.  return @kind void;
}
