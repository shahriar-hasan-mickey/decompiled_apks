record `okhttp3.MediaType` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.MediaType.charset` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.mediaType` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.subtype` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.type` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.MediaType.PARAMETER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.QUOTED` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.TOKEN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.MediaType.TYPE_SUBTYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MediaType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L22f510.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L22f514.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L22f51a.  v0:= temp @kind object;
  #L22f51c.  `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L22f520.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L22f524.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L22f52a.  v0:= temp @kind object;
  #L22f52c.  `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L22f530.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MediaType` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L22f544.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22f54a.  v0.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` := v1 @kind object;
  #L22f54e.  v0.`okhttp3.MediaType.type` @type ^`java.lang.String` := v2 @kind object;
  #L22f552.  v0.`okhttp3.MediaType.subtype` @type ^`java.lang.String` := v3 @kind object;
  #L22f556.  v0.`okhttp3.MediaType.charset` @type ^`java.lang.String` := v4 @kind object;
  #L22f55a.  return @kind void;
}
procedure `okhttp3.MediaType` `parse`(`java.lang.String` v9 @kind object) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L22f3dc.  v0:= `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` @kind object;
  #L22f3e0.  call temp:= `matcher`(v0, v9) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L22f3e6.  v0:= temp @kind object;
  #L22f3e8.  call temp:= `lookingAt`(v0) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L22f3ee.  v1:= temp;
  #L22f3f0.  v2:= 0I;
  #L22f3f2.  if v1 != 0 then goto L22f3f8;
  #L22f3f6.  return v2 @kind object;
  #L22f3f8.  v1:= 1I;
  #L22f3fa.  call temp:= `group`(v0, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L22f400.  v3:= temp @kind object;
  #L22f402.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L22f406.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L22f40c.  v3:= temp @kind object;
  #L22f40e.  v4:= 2I;
  #L22f410.  call temp:= `group`(v0, v4) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L22f416.  v5:= temp @kind object;
  #L22f418.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L22f41c.  call temp:= `toLowerCase`(v5, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L22f422.  v5:= temp @kind object;
  #L22f424.  v6:= `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` @kind object;
  #L22f428.  call temp:= `matcher`(v6, v9) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L22f42e.  v6:= temp @kind object;
  #L22f430.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L22f436.  v0:= temp;
  #L22f438.  v7:= v2 @kind object;
  #L22f43a.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22f440.  v8:= temp;
  #L22f442.  if v0 >= v8 then goto L22f4f4;
  #L22f446.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22f44c.  v8:= temp;
  #L22f44e.  call temp:= `region`(v6, v0, v8) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L22f454.  call temp:= `lookingAt`(v6) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L22f45a.  v0:= temp;
  #L22f45c.  if v0 != 0 then goto L22f462;
  #L22f460.  return v2 @kind object;
  #L22f462.  call temp:= `group`(v6, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L22f468.  v0:= temp @kind object;
  #L22f46a.  if v0 == 0 then goto L22f4ea;
  #L22f46e.  v8:= "charset" @kind object;
  #L22f472.  call temp:= `equalsIgnoreCase`(v0, v8) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22f478.  v0:= temp;
  #L22f47a.  if v0 != 0 then goto L22f480;
  #L22f47e.  goto L22f4ea;
  #L22f480.  call temp:= `group`(v6, v4) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L22f486.  v0:= temp @kind object;
  #L22f488.  if v0 == 0 then goto L22f4cc;
  #L22f48c.  v8:= "'" @kind object;
  #L22f490.  call temp:= `startsWith`(v0, v8) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L22f496.  v8:= temp;
  #L22f498.  if v8 == 0 then goto L22f4d6;
  #L22f49c.  v8:= "'" @kind object;
  #L22f4a0.  call temp:= `endsWith`(v0, v8) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L22f4a6.  v8:= temp;
  #L22f4a8.  if v8 == 0 then goto L22f4d6;
  #L22f4ac.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22f4b2.  v8:= temp;
  #L22f4b4.  if v8 <= v4 then goto L22f4d6;
  #L22f4b8.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22f4be.  v8:= temp;
  #L22f4c0.  v8:= v8 - v1 @kind int;
  #L22f4c2.  call temp:= `substring`(v0, v1, v8) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22f4c8.  v0:= temp @kind object;
  #L22f4ca.  goto L22f4d6;
  #L22f4cc.  v0:= 3I;
  #L22f4ce.  call temp:= `group`(v6, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L22f4d4.  v0:= temp @kind object;
  #L22f4d6.  if v7 == 0 then goto L22f4e8;
  #L22f4da.  call temp:= `equalsIgnoreCase`(v0, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L22f4e0.  v7:= temp;
  #L22f4e2.  if v7 != 0 then goto L22f4e8;
  #L22f4e6.  return v2 @kind object;
  #L22f4e8.  v7:= v0 @kind object;
  #L22f4ea.  call temp:= `end`(v6) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L22f4f0.  v0:= temp;
  #L22f4f2.  goto L22f43a;
  #L22f4f4.  v0:= new `okhttp3.MediaType`;
  #L22f4f8.  call `<init>`(v0, v9, v3, v5, v7) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L22f4fe.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22f388.  v0:= 0I;
  #L22f38a.  call temp:= `charset`(v1, v0) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L22f390.  v0:= temp @kind object;
  #L22f392.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22f3a4.  v0:= v1.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L22f3a8.  if v0 == 0 then goto L22f3b8;
  #L22f3ac.  v0:= v1.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L22f3b0.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L22f3b6.  v2:= temp @kind object;
  #L22f3b8.  return v2 @kind object;
  #L22f3ba.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L22f3a4..L22f3b8] goto L22f3ba;
}
procedure `boolean` `equals`(`okhttp3.MediaType` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/MediaType;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22f2e8.  v0:= instanceof @variable v2 @type ^`okhttp3.MediaType` @kind boolean;
  #L22f2ec.  if v0 == 0 then goto L22f30c;
  #L22f2f0.  v2:= (`okhttp3.MediaType`) v2 @kind object;
  #L22f2f4.  v2:= v2.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L22f2f8.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L22f2fc.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22f302.  v2:= temp;
  #L22f304.  if v2 == 0 then goto L22f30c;
  #L22f308.  v2:= 1I;
  #L22f30a.  goto L22f30e;
  #L22f30c.  v2:= 0I;
  #L22f30e.  return v2;
}
procedure `int` `hashCode`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22f320.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L22f324.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L22f32a.  v0:= temp;
  #L22f32c.  return v0;
}
procedure `java.lang.String` `subtype`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.subtype:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22f340.  v0:= v1.`okhttp3.MediaType.subtype` @type ^`java.lang.String` @kind object;
  #L22f344.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22f358.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L22f35c.  return v0 @kind object;
}
procedure `java.lang.String` `type`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22f370.  v0:= v1.`okhttp3.MediaType.type` @type ^`java.lang.String` @kind object;
  #L22f374.  return v0 @kind object;
}
