record `okhttp3.CipherSuite$1` @kind class @AccessFlag FINAL extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`okhttp3.CipherSuite$1` v0 @kind this) @signature `Lokhttp3/CipherSuite$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L22879c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2287a2.  return @kind void;
}
procedure `int` `compare`(`okhttp3.CipherSuite$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/CipherSuite$1;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L228700.  v1:= (`java.lang.String`) v1 @kind object;
  #L228704.  v2:= (`java.lang.String`) v2 @kind object;
  #L228708.  call temp:= `compare`(v0, v1, v2) @signature `Lokhttp3/CipherSuite$1;.compare:(Ljava/lang/String;Ljava/lang/String;)I` @kind virtual;
  #L22870e.  v1:= temp;
  #L228710.  return v1;
}
procedure `int` `compare`(`okhttp3.CipherSuite$1` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lokhttp3/CipherSuite$1;.compare:(Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L228724.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22872a.  v0:= temp;
  #L22872c.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L228732.  v1:= temp;
  #L228734.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L22873a.  v0:= temp;
  #L22873c.  v1:= 4I;
  #L22873e.  v2:= -1I;
  #L228740.  v3:= 1I;
  #L228742.  if v1 >= v0 then goto L22876a;
  #L228746.  call temp:= `charAt`(v7, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22874c.  v4:= temp;
  #L22874e.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L228754.  v5:= temp;
  #L228756.  if v4 == v5 then goto L228764;
  #L22875a.  if v4 >= v5 then goto L228760;
  #L22875e.  goto L228762;
  #L228760.  v2:= 1I;
  #L228762.  return v2;
  #L228764.  v1:= v1 + 1;
  #L228768.  goto L22873e;
  #L22876a.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L228770.  v7:= temp;
  #L228772.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L228778.  v8:= temp;
  #L22877a.  if v7 == v8 then goto L228788;
  #L22877e.  if v7 >= v8 then goto L228784;
  #L228782.  goto L228786;
  #L228784.  v2:= 1I;
  #L228786.  return v2;
  #L228788.  v7:= 0I;
  #L22878a.  return v7;
}
