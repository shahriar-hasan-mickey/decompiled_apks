record `okhttp3.internal.ws.WebSocketProtocol` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@okhttp3.internal.ws.WebSocketProtocol.ACCEPT_MAGIC` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_FIN` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_RSV1` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_RSV2` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_RSV3` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_MASK_OPCODE` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B1_FLAG_MASK` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B1_MASK_LENGTH` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.CLOSE_CLIENT_GOING_AWAY` @AccessFlag STATIC_FINAL;
global `long` `@@okhttp3.internal.ws.WebSocketProtocol.CLOSE_MESSAGE_MAX` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.CLOSE_NO_STATUS_CODE` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_BINARY` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTINUATION` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTROL_CLOSE` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTROL_PING` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTROL_PONG` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_FLAG_CONTROL` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_TEXT` @AccessFlag STATIC_FINAL;
global `long` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_BYTE_MAX` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_LONG` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_SHORT` @AccessFlag STATIC_FINAL;
global `long` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_SHORT_MAX` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketProtocol` v2 @kind this) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L24a2c8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24a2ce.  v0:= new `java.lang.AssertionError`;
  #L24a2d2.  v1:= "No instances." @kind object;
  #L24a2d6.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L24a2dc.  throw v0;
}
procedure `java.lang.String` `acceptHeader`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.acceptHeader:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L24a1e4.  v0:= new `java.lang.StringBuilder`;
  #L24a1e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24a1ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a1f4.  v1:= "258EAFA5-E914-47DA-95CA-C5AB0DC85B11" @kind object;
  #L24a1f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a1fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24a204.  v1:= temp @kind object;
  #L24a206.  call temp:= `encodeUtf8`(v1) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L24a20c.  v1:= temp @kind object;
  #L24a20e.  call temp:= `sha1`(v1) @signature `Lokio/ByteString;.sha1:()Lokio/ByteString;` @kind virtual;
  #L24a214.  v1:= temp @kind object;
  #L24a216.  call temp:= `base64`(v1) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L24a21c.  v1:= temp @kind object;
  #L24a21e.  return v1 @kind object;
}
procedure `java.lang.String` `closeCodeExceptionMessage`(`int` v2 ) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L24a230.  v0:= 1000I;
  #L24a234.  if v2 < v0 then goto L24a294;
  #L24a238.  v0:= 5000I;
  #L24a23c.  if v2 < v0 then goto L24a242;
  #L24a240.  goto L24a294;
  #L24a242.  v0:= 1004I;
  #L24a246.  if v2 < v0 then goto L24a252;
  #L24a24a.  v0:= 1006I;
  #L24a24e.  if v2 <= v0 then goto L24a262;
  #L24a252.  v0:= 1012I;
  #L24a256.  if v2 < v0 then goto L24a290;
  #L24a25a.  v0:= 2999I;
  #L24a25e.  if v2 > v0 then goto L24a290;
  #L24a262.  v0:= new `java.lang.StringBuilder`;
  #L24a266.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24a26c.  v1:= "Code " @kind object;
  #L24a270.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a276.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a27c.  v2:= " is reserved and may not be used." @kind object;
  #L24a280.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a286.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24a28c.  v2:= temp @kind object;
  #L24a28e.  return v2 @kind object;
  #L24a290.  v2:= 0I;
  #L24a292.  return v2 @kind object;
  #L24a294.  v0:= new `java.lang.StringBuilder`;
  #L24a298.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24a29e.  v1:= "Code must be in range [1000,5000): " @kind object;
  #L24a2a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a2a8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a2ae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24a2b4.  v2:= temp @kind object;
  #L24a2b6.  return v2 @kind object;
}
procedure `void` `toggleMask`(`okio.Buffer$UnsafeCursor` v7 @kind object, `byte`[] v8 @kind object) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L24a2f0.  v0:= length @variable v8;
  #L24a2f2.  v1:= 0I;
  #L24a2f4.  v2:= v7.`okio.Buffer$UnsafeCursor.data` @type ^`byte`[] @kind object;
  #L24a2f8.  v3:= v7.`okio.Buffer$UnsafeCursor.start` @type ^`int`;
  #L24a2fc.  v4:= v7.`okio.Buffer$UnsafeCursor.end` @type ^`int`;
  #L24a300.  if v3 >= v4 then goto L24a320;
  #L24a304.  v1:= v1 %% v0 @kind int;
  #L24a306.  v5:= v2[v3] @kind byte;
  #L24a30a.  v6:= v8[v1] @kind byte;
  #L24a30e.  v5:= v5 ^~ v6 @kind int;
  #L24a310.  v5:= (`byte`) v5 @kind i2b;
  #L24a312.  v2[v3]:= v5 @kind byte;
  #L24a316.  v3:= v3 + 1;
  #L24a31a.  v1:= v1 + 1;
  #L24a31e.  goto L24a300;
  #L24a320.  call temp:= `next`(v7) @signature `Lokio/Buffer$UnsafeCursor;.next:()I` @kind virtual;
  #L24a326.  v2:= temp;
  #L24a328.  v3:= -1I;
  #L24a32a.  if v2 != v3 then goto L24a2f4;
  #L24a32e.  return @kind void;
}
procedure `void` `validateCloseCode`(`int` v1 ) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.validateCloseCode:(I)V` @AccessFlag STATIC {
    temp;
    v0;

  #L24a340.  call temp:= `closeCodeExceptionMessage`(v1) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @kind static;
  #L24a346.  v1:= temp @kind object;
  #L24a348.  if v1 != 0 then goto L24a34e;
  #L24a34c.  return @kind void;
  #L24a34e.  v0:= new `java.lang.IllegalArgumentException`;
  #L24a352.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a358.  throw v0;
}
