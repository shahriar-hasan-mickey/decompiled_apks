record `okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `boolean` `okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @AccessFlag ;
  `long` `okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @AccessFlag ;
  `int` `okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @AccessFlag ;
  `okhttp3.internal.ws.WebSocketWriter` `okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v0 @kind this, `okhttp3.internal.ws.WebSocketWriter` v1 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.<init>:(Lokhttp3/internal/ws/WebSocketWriter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24a9c4.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` := v1 @kind object;
  #L24a9c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24a9ce.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v7 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L24a9e0.  v0:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` @kind boolean;
  #L24a9e4.  if v0 != 0 then goto L24aa1a;
  #L24a9e8.  v1:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L24a9ec.  v2:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int`;
  #L24a9f0.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L24a9f4.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L24a9fa.  v3:= temp @kind wide;
  #L24a9fc.  v5:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L24aa00.  v6:= 1I;
  #L24aa02.  call `writeMessageFrame`(v1, v2, v3, v5, v6) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @kind virtual;
  #L24aa08.  v0:= 1I;
  #L24aa0a.  v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` := v0 @kind boolean;
  #L24aa0e.  v0:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L24aa12.  v1:= 0I;
  #L24aa14.  v0.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` := v1 @kind boolean;
  #L24aa18.  return @kind void;
  #L24aa1a.  v0:= new `java.io.IOException`;
  #L24aa1e.  v1:= "closed" @kind object;
  #L24aa22.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24aa28.  throw v0;
}
procedure `void` `flush`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v7 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L24aa3c.  v0:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` @kind boolean;
  #L24aa40.  if v0 != 0 then goto L24aa6c;
  #L24aa44.  v1:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L24aa48.  v2:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int`;
  #L24aa4c.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L24aa50.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L24aa56.  v3:= temp @kind wide;
  #L24aa58.  v5:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L24aa5c.  v6:= 0I;
  #L24aa5e.  call `writeMessageFrame`(v1, v2, v3, v5, v6) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @kind virtual;
  #L24aa64.  v0:= 0I;
  #L24aa66.  v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` := v0 @kind boolean;
  #L24aa6a.  return @kind void;
  #L24aa6c.  v0:= new `java.io.IOException`;
  #L24aa70.  v1:= "closed" @kind object;
  #L24aa74.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24aa7a.  throw v0;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a9a0.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L24a9a4.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L24a9a8.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSink;.timeout:()Lokio/Timeout;` @kind interface;
  #L24a9ae.  v0:= temp @kind object;
  #L24a9b0.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v6 @kind this, `okio.Buffer` v7 @kind object, `long` v8 ) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L24aa8c.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` @kind boolean;
  #L24aa90.  if v0 != 0 then goto L24ab1e;
  #L24aa94.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L24aa98.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L24aa9c.  call `write`(v0, v7, v8) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L24aaa2.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L24aaa6.  v8:= 0I;
  #L24aaa8.  if v7 == 0 then goto L24aae2;
  #L24aaac.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @type ^`long` @kind wide;
  #L24aab0.  v2:= -1L;
  #L24aab4.  v7:= lcmp(v0, v2);
  #L24aab8.  if v7 == 0 then goto L24aae2;
  #L24aabc.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L24aac0.  v7:= v7.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L24aac4.  call temp:= `size`(v7) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L24aaca.  v0:= temp @kind wide;
  #L24aacc.  v2:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @type ^`long` @kind wide;
  #L24aad0.  v4:= 8192L;
  #L24aad4.  v2:= v2 - v4 @kind long;
  #L24aad6.  v7:= lcmp(v0, v2);
  #L24aada.  if v7 <= 0 then goto L24aae2;
  #L24aade.  v7:= 1I;
  #L24aae0.  goto L24aae4;
  #L24aae2.  v7:= 0I;
  #L24aae4.  v9:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L24aae8.  v9:= v9.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L24aaec.  call temp:= `completeSegmentByteCount`(v9) @signature `Lokio/Buffer;.completeSegmentByteCount:()J` @kind virtual;
  #L24aaf2.  v2:= temp @kind wide;
  #L24aaf4.  v0:= 0L;
  #L24aaf8.  v9:= lcmp(v2, v0);
  #L24aafc.  if v9 <= 0 then goto L24ab1c;
  #L24ab00.  if v7 != 0 then goto L24ab1c;
  #L24ab04.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L24ab08.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int`;
  #L24ab0c.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L24ab10.  v5:= 0I;
  #L24ab12.  call `writeMessageFrame`(v0, v1, v2, v4, v5) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @kind virtual;
  #L24ab18.  v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` := v8 @kind boolean;
  #L24ab1c.  return @kind void;
  #L24ab1e.  v7:= new `java.io.IOException`;
  #L24ab22.  v8:= "closed" @kind object;
  #L24ab26.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24ab2c.  throw v7;
}
