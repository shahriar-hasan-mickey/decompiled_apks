record `okhttp3.internal.ws.WebSocketReader` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketReader.closed` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.ws.WebSocketReader$FrameCallback` `okhttp3.internal.ws.WebSocketReader.frameCallback` @AccessFlag FINAL;
  `long` `okhttp3.internal.ws.WebSocketReader.frameLength` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isClient` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isControlFrame` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isFinalFrame` @AccessFlag ;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketReader.maskCursor` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketReader.maskKey` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.ws.WebSocketReader.opcode` @AccessFlag ;
  `okio.BufferedSource` `okhttp3.internal.ws.WebSocketReader.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this, `boolean` v2 , `okio.BufferedSource` v3 @kind object, `okhttp3.internal.ws.WebSocketReader$FrameCallback` v4 @kind object) @signature `Lokhttp3/internal/ws/WebSocketReader;.<init>:(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L24a36c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24a372.  v0:= new `okio.Buffer`;
  #L24a376.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L24a37c.  v1.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L24a380.  v0:= new `okio.Buffer`;
  #L24a384.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L24a38a.  v1.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L24a38e.  if v3 == 0 then goto L24a3dc;
  #L24a392.  if v4 == 0 then goto L24a3cc;
  #L24a396.  v1.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` := v2 @kind boolean;
  #L24a39a.  v1.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` := v3 @kind object;
  #L24a39e.  v1.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` := v4 @kind object;
  #L24a3a2.  v3:= 0I;
  #L24a3a4.  if v2 == 0 then goto L24a3ac;
  #L24a3a8.  v4:= v3 @kind object;
  #L24a3aa.  goto L24a3b2;
  #L24a3ac.  v4:= 4I;
  #L24a3ae.  v4:= new `byte`[v4];
  #L24a3b2.  v1.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] := v4 @kind object;
  #L24a3b6.  if v2 == 0 then goto L24a3bc;
  #L24a3ba.  goto L24a3c6;
  #L24a3bc.  v3:= new `okio.Buffer$UnsafeCursor`;
  #L24a3c0.  call `<init>`(v3) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L24a3c6.  v1.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` := v3 @kind object;
  #L24a3ca.  return @kind void;
  #L24a3cc.  v2:= new `java.lang.NullPointerException`;
  #L24a3d0.  v3:= "frameCallback == null" @kind object;
  #L24a3d4.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a3da.  throw v2;
  #L24a3dc.  v2:= new `java.lang.NullPointerException`;
  #L24a3e0.  v3:= "source == null" @kind object;
  #L24a3e4.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a3ea.  throw v2;
}
procedure `void` `readControlFrame`(`okhttp3.internal.ws.WebSocketReader` v9 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L24a42c.  v0:= v9.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L24a430.  v2:= 0L;
  #L24a434.  v4:= lcmp(v0, v2);
  #L24a438.  if v4 <= 0 then goto L24a482;
  #L24a43c.  v4:= v9.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L24a440.  v5:= v9.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L24a444.  call `readFully`(v4, v5, v0) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L24a44a.  v0:= v9.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L24a44e.  if v0 != 0 then goto L24a482;
  #L24a452.  v0:= v9.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L24a456.  v1:= v9.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24a45a.  call temp:= `readAndWriteUnsafe`(v0, v1) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L24a460.  v0:= v9.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24a464.  call temp:= `seek`(v0, v2) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L24a46a.  v0:= v9.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24a46e.  v1:= v9.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L24a472.  call `toggleMask`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L24a478.  v0:= v9.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24a47c.  call `close`(v0) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L24a482.  v0:= v9.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L24a486.  goto L24a574;
  #L24a48c.  v0:= new `java.net.ProtocolException`;
  #L24a490.  v1:= new `java.lang.StringBuilder`;
  #L24a494.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24a49a.  v2:= "Unknown control opcode: " @kind object;
  #L24a49e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a4a4.  v2:= v9.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L24a4a8.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L24a4ae.  v2:= temp @kind object;
  #L24a4b0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a4b6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24a4bc.  v1:= temp @kind object;
  #L24a4be.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a4c4.  throw v0;
  #L24a4c6.  v0:= v9.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L24a4ca.  v1:= v9.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L24a4ce.  call temp:= `readByteString`(v1) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L24a4d4.  v1:= temp @kind object;
  #L24a4d6.  call `onReadPong`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPong:(Lokio/ByteString;)V` @kind interface;
  #L24a4dc.  goto L24a560;
  #L24a4de.  v0:= v9.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L24a4e2.  v1:= v9.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L24a4e6.  call temp:= `readByteString`(v1) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L24a4ec.  v1:= temp @kind object;
  #L24a4ee.  call `onReadPing`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPing:(Lokio/ByteString;)V` @kind interface;
  #L24a4f4.  goto L24a560;
  #L24a4f6.  v0:= 1005I;
  #L24a4fa.  v1:= "" @kind object;
  #L24a4fe.  v4:= v9.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L24a502.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L24a508.  v4:= temp @kind wide;
  #L24a50a.  v6:= 1L;
  #L24a50e.  v8:= lcmp(v4, v6);
  #L24a512.  if v8 == 0 then goto L24a562;
  #L24a516.  v6:= lcmp(v4, v2);
  #L24a51a.  if v6 == 0 then goto L24a550;
  #L24a51e.  v0:= v9.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L24a522.  call temp:= `readShort`(v0) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L24a528.  v0:= temp;
  #L24a52a.  v1:= v9.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L24a52e.  call temp:= `readUtf8`(v1) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L24a534.  v1:= temp @kind object;
  #L24a536.  call temp:= `closeCodeExceptionMessage`(v0) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @kind static;
  #L24a53c.  v2:= temp @kind object;
  #L24a53e.  if v2 != 0 then goto L24a544;
  #L24a542.  goto L24a550;
  #L24a544.  v0:= new `java.net.ProtocolException`;
  #L24a548.  call `<init>`(v0, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a54e.  throw v0;
  #L24a550.  v2:= v9.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L24a554.  call `onReadClose`(v2, v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadClose:(ILjava/lang/String;)V` @kind interface;
  #L24a55a.  v0:= 1I;
  #L24a55c.  v9.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` := v0 @kind boolean;
  #L24a560.  return @kind void;
  #L24a562.  v0:= new `java.net.ProtocolException`;
  #L24a566.  v1:= "Malformed close payload length of 1." @kind object;
  #L24a56a.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a570.  throw v0;
  #L24a572.  
  #L24a574.  switch v0
                  | 8 => goto L24a4f6
                  | 9 => goto L24a4de
                  | 10 => goto L24a4c6
                  | else => goto L24a48c;
}
procedure `void` `readHeader`(`okhttp3.internal.ws.WebSocketReader` v6 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L24a598.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L24a59c.  if v0 != 0 then goto L24a7c2;
  #L24a5a0.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L24a5a4.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L24a5aa.  v0:= temp @kind object;
  #L24a5ac.  call temp:= `timeoutNanos`(v0) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L24a5b2.  v0:= temp @kind wide;
  #L24a5b4.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L24a5b8.  call temp:= `timeout`(v2) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L24a5be.  v2:= temp @kind object;
  #L24a5c0.  call temp:= `clearTimeout`(v2) @signature `Lokio/Timeout;.clearTimeout:()Lokio/Timeout;` @kind virtual;
  #L24a5c6.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L24a5ca.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L24a5d0.  v2:= temp;
  #L24a5d2.  v2:= v2 ^& 255;
  #L24a5d6.  v3:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L24a5da.  call temp:= `timeout`(v3) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L24a5e0.  v3:= temp @kind object;
  #L24a5e2.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L24a5e6.  call temp:= `timeout`(v3, v0, v4) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L24a5ec.  v0:= v2 ^& 15;
  #L24a5f0.  v6.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int` := v0;
  #L24a5f4.  v0:= v2 ^& 128;
  #L24a5f8.  v1:= 1I;
  #L24a5fa.  v3:= 0I;
  #L24a5fc.  if v0 == 0 then goto L24a604;
  #L24a600.  v0:= 1I;
  #L24a602.  goto L24a606;
  #L24a604.  v0:= 0I;
  #L24a606.  v6.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` := v0 @kind boolean;
  #L24a60a.  v0:= v2 ^& 8;
  #L24a60e.  if v0 == 0 then goto L24a616;
  #L24a612.  v0:= 1I;
  #L24a614.  goto L24a618;
  #L24a616.  v0:= 0I;
  #L24a618.  v6.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` := v0 @kind boolean;
  #L24a61c.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L24a620.  if v0 == 0 then goto L24a63e;
  #L24a624.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` @kind boolean;
  #L24a628.  if v0 == 0 then goto L24a62e;
  #L24a62c.  goto L24a63e;
  #L24a62e.  v0:= new `java.net.ProtocolException`;
  #L24a632.  v1:= "Control frames must be final." @kind object;
  #L24a636.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a63c.  throw v0;
  #L24a63e.  v0:= v2 ^& 64;
  #L24a642.  if v0 == 0 then goto L24a64a;
  #L24a646.  v0:= 1I;
  #L24a648.  goto L24a64c;
  #L24a64a.  v0:= 0I;
  #L24a64c.  v4:= v2 ^& 32;
  #L24a650.  if v4 == 0 then goto L24a658;
  #L24a654.  v4:= 1I;
  #L24a656.  goto L24a65a;
  #L24a658.  v4:= 0I;
  #L24a65a.  v2:= v2 ^& 16;
  #L24a65e.  if v2 == 0 then goto L24a666;
  #L24a662.  v2:= 1I;
  #L24a664.  goto L24a668;
  #L24a666.  v2:= 0I;
  #L24a668.  if v0 != 0 then goto L24a798;
  #L24a66c.  if v4 != 0 then goto L24a798;
  #L24a670.  if v2 != 0 then goto L24a798;
  #L24a674.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L24a678.  call temp:= `readByte`(v0) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L24a67e.  v0:= temp;
  #L24a680.  v0:= v0 ^& 255;
  #L24a684.  v2:= v0 ^& 128;
  #L24a688.  if v2 == 0 then goto L24a68e;
  #L24a68c.  goto L24a690;
  #L24a68e.  v1:= 0I;
  #L24a690.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L24a694.  if v1 != v2 then goto L24a6b2;
  #L24a698.  v0:= new `java.net.ProtocolException`;
  #L24a69c.  if v2 == 0 then goto L24a6a6;
  #L24a6a0.  v1:= "Server-sent frames must not be masked." @kind object;
  #L24a6a4.  goto L24a6aa;
  #L24a6a6.  v1:= "Client-sent frames must be masked." @kind object;
  #L24a6aa.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a6b0.  throw v0;
  #L24a6b2.  v0:= v0 ^& 127;
  #L24a6b6.  v2:= (`long`) v0 @kind i2l;
  #L24a6b8.  v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v2 @kind wide;
  #L24a6bc.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L24a6c0.  v4:= 126L;
  #L24a6c4.  v0:= lcmp(v2, v4);
  #L24a6c8.  if v0 != 0 then goto L24a6e8;
  #L24a6cc.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L24a6d0.  call temp:= `readShort`(v0) @signature `Lokio/BufferedSource;.readShort:()S` @kind interface;
  #L24a6d6.  v0:= temp;
  #L24a6d8.  v2:= (`long`) v0 @kind i2l;
  #L24a6da.  v4:= 65535L;
  #L24a6e0.  v2:= v2 ^& v4 @kind long;
  #L24a6e2.  v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v2 @kind wide;
  #L24a6e6.  goto L24a75a;
  #L24a6e8.  v4:= 127L;
  #L24a6ec.  v0:= lcmp(v2, v4);
  #L24a6f0.  if v0 != 0 then goto L24a75a;
  #L24a6f4.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L24a6f8.  call temp:= `readLong`(v0) @signature `Lokio/BufferedSource;.readLong:()J` @kind interface;
  #L24a6fe.  v2:= temp @kind wide;
  #L24a700.  v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v2 @kind wide;
  #L24a704.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L24a708.  v4:= 0L;
  #L24a70c.  v0:= lcmp(v2, v4);
  #L24a710.  if v0 < 0 then goto L24a716;
  #L24a714.  goto L24a75a;
  #L24a716.  v0:= new `java.net.ProtocolException`;
  #L24a71a.  v1:= new `java.lang.StringBuilder`;
  #L24a71e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24a724.  v2:= "Frame length 0x" @kind object;
  #L24a728.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a72e.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L24a732.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Long;.toHexString:(J)Ljava/lang/String;` @kind static;
  #L24a738.  v2:= temp @kind object;
  #L24a73a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a740.  v2:= " > 0x7FFFFFFFFFFFFFFF" @kind object;
  #L24a744.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a74a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24a750.  v1:= temp @kind object;
  #L24a752.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a758.  throw v0;
  #L24a75a.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L24a75e.  if v0 == 0 then goto L24a784;
  #L24a762.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L24a766.  v4:= 125L;
  #L24a76a.  v0:= lcmp(v2, v4);
  #L24a76e.  if v0 > 0 then goto L24a774;
  #L24a772.  goto L24a784;
  #L24a774.  v0:= new `java.net.ProtocolException`;
  #L24a778.  v1:= "Control frame must be less than 125B." @kind object;
  #L24a77c.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a782.  throw v0;
  #L24a784.  if v1 == 0 then goto L24a796;
  #L24a788.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L24a78c.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L24a790.  call `readFully`(v0, v1) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L24a796.  return @kind void;
  #L24a798.  v0:= new `java.net.ProtocolException`;
  #L24a79c.  v1:= "Reserved flags are unsupported." @kind object;
  #L24a7a0.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a7a6.  throw v0;
  #L24a7a8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24a7aa.  v3:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L24a7ae.  call temp:= `timeout`(v3) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L24a7b4.  v3:= temp @kind object;
  #L24a7b6.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L24a7ba.  call temp:= `timeout`(v3, v0, v4) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L24a7c0.  throw v2;
  #L24a7c2.  v0:= new `java.io.IOException`;
  #L24a7c6.  v1:= "closed" @kind object;
  #L24a7ca.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a7d0.  throw v0;
  catch `java.lang.Throwable` @[L24a5c6..L24a5d2] goto L24a7a8;
}
procedure `void` `readMessage`(`okhttp3.internal.ws.WebSocketReader` v5 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L24a7f0.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L24a7f4.  if v0 != 0 then goto L24a8b4;
  #L24a7f8.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L24a7fc.  v2:= 0L;
  #L24a800.  v4:= lcmp(v0, v2);
  #L24a804.  if v4 <= 0 then goto L24a860;
  #L24a808.  v2:= v5.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L24a80c.  v3:= v5.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L24a810.  call `readFully`(v2, v3, v0) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L24a816.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L24a81a.  if v0 != 0 then goto L24a860;
  #L24a81e.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L24a822.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24a826.  call temp:= `readAndWriteUnsafe`(v0, v1) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L24a82c.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24a830.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L24a834.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L24a83a.  v1:= temp @kind wide;
  #L24a83c.  v3:= v5.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L24a840.  v1:= v1 - v3 @kind long;
  #L24a842.  call temp:= `seek`(v0, v1) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L24a848.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24a84c.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L24a850.  call `toggleMask`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L24a856.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24a85a.  call `close`(v0) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L24a860.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` @kind boolean;
  #L24a864.  if v0 == 0 then goto L24a86a;
  #L24a868.  return @kind void;
  #L24a86a.  call `readUntilNonControlFrame`(v5) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @kind direct;
  #L24a870.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L24a874.  if v0 != 0 then goto L24a87a;
  #L24a878.  goto L24a7f0;
  #L24a87a.  v0:= new `java.net.ProtocolException`;
  #L24a87e.  v1:= new `java.lang.StringBuilder`;
  #L24a882.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24a888.  v2:= "Expected continuation opcode. Got: " @kind object;
  #L24a88c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a892.  v2:= v5.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L24a896.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L24a89c.  v2:= temp @kind object;
  #L24a89e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a8a4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24a8aa.  v1:= temp @kind object;
  #L24a8ac.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a8b2.  throw v0;
  #L24a8b4.  v0:= new `java.io.IOException`;
  #L24a8b8.  v1:= "closed" @kind object;
  #L24a8bc.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a8c2.  throw v0;
  #L24a8c4.  return @kind void;
}
procedure `void` `readMessageFrame`(`okhttp3.internal.ws.WebSocketReader` v4 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24a8d8.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L24a8dc.  v1:= 1I;
  #L24a8de.  if v0 == v1 then goto L24a920;
  #L24a8e2.  v2:= 2I;
  #L24a8e4.  if v0 != v2 then goto L24a8ea;
  #L24a8e8.  goto L24a920;
  #L24a8ea.  v1:= new `java.net.ProtocolException`;
  #L24a8ee.  v2:= new `java.lang.StringBuilder`;
  #L24a8f2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24a8f8.  v3:= "Unknown opcode: " @kind object;
  #L24a8fc.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a902.  call temp:= `toHexString`(v0) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L24a908.  v0:= temp @kind object;
  #L24a90a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a910.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24a916.  v0:= temp @kind object;
  #L24a918.  call `<init>`(v1, v0) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a91e.  throw v1;
  #L24a920.  call `readMessage`(v4) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:()V` @kind direct;
  #L24a926.  if v0 != v1 then goto L24a942;
  #L24a92a.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L24a92e.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L24a932.  call temp:= `readUtf8`(v1) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L24a938.  v1:= temp @kind object;
  #L24a93a.  call `onReadMessage`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Ljava/lang/String;)V` @kind interface;
  #L24a940.  goto L24a958;
  #L24a942.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L24a946.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L24a94a.  call temp:= `readByteString`(v1) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L24a950.  v1:= temp @kind object;
  #L24a952.  call `onReadMessage`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Lokio/ByteString;)V` @kind interface;
  #L24a958.  return @kind void;
}
procedure `void` `readUntilNonControlFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L24a96c.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L24a970.  if v0 != 0 then goto L24a98c;
  #L24a974.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L24a97a.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L24a97e.  if v0 != 0 then goto L24a984;
  #L24a982.  goto L24a98c;
  #L24a984.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L24a98a.  goto L24a96c;
  #L24a98c.  return @kind void;
}
procedure `void` `processNextFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.processNextFrame:()V` @AccessFlag  {
    temp;
    v0;

  #L24a3fc.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L24a402.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L24a406.  if v0 == 0 then goto L24a412;
  #L24a40a.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L24a410.  goto L24a418;
  #L24a412.  call `readMessageFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @kind direct;
  #L24a418.  return @kind void;
}
