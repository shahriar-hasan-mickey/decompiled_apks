record `okhttp3.internal.ws.WebSocketWriter` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketWriter.activeWriter` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.buffer` @AccessFlag FINAL;
  `okhttp3.internal.ws.WebSocketWriter$FrameSink` `okhttp3.internal.ws.WebSocketWriter.frameSink` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.isClient` @AccessFlag FINAL;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketWriter.maskCursor` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketWriter.maskKey` @AccessFlag PRIVATE_FINAL;
  `java.util.Random` `okhttp3.internal.ws.WebSocketWriter.random` @AccessFlag FINAL;
  `okio.BufferedSink` `okhttp3.internal.ws.WebSocketWriter.sink` @AccessFlag FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.writerClosed` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `boolean` v2 , `okio.BufferedSink` v3 @kind object, `java.util.Random` v4 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.<init>:(ZLokio/BufferedSink;Ljava/util/Random;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L24ab88.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24ab8e.  v0:= new `okio.Buffer`;
  #L24ab92.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L24ab98.  v1.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` := v0 @kind object;
  #L24ab9c.  v0:= new `okhttp3.internal.ws.WebSocketWriter$FrameSink`;
  #L24aba0.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.<init>:(Lokhttp3/internal/ws/WebSocketWriter;)V` @kind direct;
  #L24aba6.  v1.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` := v0 @kind object;
  #L24abaa.  if v3 == 0 then goto L24ac02;
  #L24abae.  if v4 == 0 then goto L24abf2;
  #L24abb2.  v1.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` := v2 @kind boolean;
  #L24abb6.  v1.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` := v3 @kind object;
  #L24abba.  call temp:= `buffer`(v3) @signature `Lokio/BufferedSink;.buffer:()Lokio/Buffer;` @kind interface;
  #L24abc0.  v3:= temp @kind object;
  #L24abc2.  v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` := v3 @kind object;
  #L24abc6.  v1.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` := v4 @kind object;
  #L24abca.  v3:= 0I;
  #L24abcc.  if v2 == 0 then goto L24abd8;
  #L24abd0.  v4:= 4I;
  #L24abd2.  v4:= new `byte`[v4];
  #L24abd6.  goto L24abda;
  #L24abd8.  v4:= v3 @kind object;
  #L24abda.  v1.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] := v4 @kind object;
  #L24abde.  if v2 == 0 then goto L24abec;
  #L24abe2.  v3:= new `okio.Buffer$UnsafeCursor`;
  #L24abe6.  call `<init>`(v3) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L24abec.  v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` := v3 @kind object;
  #L24abf0.  return @kind void;
  #L24abf2.  v2:= new `java.lang.NullPointerException`;
  #L24abf6.  v3:= "random == null" @kind object;
  #L24abfa.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24ac00.  throw v2;
  #L24ac02.  v2:= new `java.lang.NullPointerException`;
  #L24ac06.  v3:= "sink == null" @kind object;
  #L24ac0a.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24ac10.  throw v2;
}
procedure `void` `writeControlFrame`(`okhttp3.internal.ws.WebSocketWriter` v6 @kind this, `int` v7 , `okio.ByteString` v8 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L24ac94.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` @kind boolean;
  #L24ac98.  if v0 != 0 then goto L24ad6e;
  #L24ac9c.  call temp:= `size`(v8) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L24aca2.  v0:= temp;
  #L24aca4.  v1:= (`long`) v0 @kind i2l;
  #L24aca6.  v3:= 125L;
  #L24acaa.  v5:= lcmp(v1, v3);
  #L24acae.  if v5 > 0 then goto L24ad5e;
  #L24acb2.  v7:= v7 ^| 128;
  #L24acb6.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24acba.  call temp:= `writeByte`(v1, v7) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L24acc0.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L24acc4.  if v7 == 0 then goto L24ad3e;
  #L24acc8.  v7:= v0 ^| 128;
  #L24accc.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24acd0.  call temp:= `writeByte`(v1, v7) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L24acd6.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` @kind object;
  #L24acda.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L24acde.  call `nextBytes`(v7, v1) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L24ace4.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24ace8.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L24acec.  call temp:= `write`(v7, v1) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L24acf2.  if v0 <= 0 then goto L24ad52;
  #L24acf6.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24acfa.  call temp:= `size`(v7) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L24ad00.  v0:= temp @kind wide;
  #L24ad02.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24ad06.  call temp:= `write`(v7, v8) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L24ad0c.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24ad10.  v8:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24ad14.  call temp:= `readAndWriteUnsafe`(v7, v8) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L24ad1a.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24ad1e.  call temp:= `seek`(v7, v0) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L24ad24.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24ad28.  v8:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L24ad2c.  call `toggleMask`(v7, v8) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L24ad32.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24ad36.  call `close`(v7) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L24ad3c.  goto L24ad52;
  #L24ad3e.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24ad42.  call temp:= `writeByte`(v7, v0) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L24ad48.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24ad4c.  call temp:= `write`(v7, v8) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L24ad52.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L24ad56.  call `flush`(v7) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L24ad5c.  return @kind void;
  #L24ad5e.  v7:= new `java.lang.IllegalArgumentException`;
  #L24ad62.  v8:= "Payload size must be less than or equal to 125" @kind object;
  #L24ad66.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24ad6c.  throw v7;
  #L24ad6e.  v7:= new `java.io.IOException`;
  #L24ad72.  v8:= "closed" @kind object;
  #L24ad76.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24ad7c.  throw v7;
}
procedure `okio.Sink` `newMessageSink`(`okhttp3.internal.ws.WebSocketWriter` v2 @kind this, `int` v3 , `long` v4 ) @signature `Lokhttp3/internal/ws/WebSocketWriter;.newMessageSink:(IJ)Lokio/Sink;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L24ab40.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` @kind boolean;
  #L24ab44.  if v0 != 0 then goto L24ab66;
  #L24ab48.  v0:= 1I;
  #L24ab4a.  v2.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` := v0 @kind boolean;
  #L24ab4e.  v1:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L24ab52.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int` := v3;
  #L24ab56.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @type ^`long` := v4 @kind wide;
  #L24ab5a.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` := v0 @kind boolean;
  #L24ab5e.  v3:= 0I;
  #L24ab60.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` := v3 @kind boolean;
  #L24ab64.  return v1 @kind object;
  #L24ab66.  v3:= new `java.lang.IllegalStateException`;
  #L24ab6a.  v4:= "Another message writer is active. Did you call close()?" @kind object;
  #L24ab6e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24ab74.  throw v3;
}
procedure `void` `writeClose`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `int` v2 , `okio.ByteString` v3 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeClose:(ILokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L24ac24.  v0:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L24ac28.  if v2 != 0 then goto L24ac30;
  #L24ac2c.  if v3 == 0 then goto L24ac5c;
  #L24ac30.  if v2 == 0 then goto L24ac3a;
  #L24ac34.  call `validateCloseCode`(v2) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.validateCloseCode:(I)V` @kind static;
  #L24ac3a.  v0:= new `okio.Buffer`;
  #L24ac3e.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L24ac44.  call temp:= `writeShort`(v0, v2) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L24ac4a.  if v3 == 0 then goto L24ac54;
  #L24ac4e.  call temp:= `write`(v0, v3) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L24ac54.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L24ac5a.  v0:= temp @kind object;
  #L24ac5c.  v2:= 8I;
  #L24ac60.  v3:= 1I;
  #L24ac62.  call `writeControlFrame`(v1, v2, v0) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L24ac68.  v1.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` := v3 @kind boolean;
  #L24ac6c.  return @kind void;
  #L24ac6e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24ac70.  v1.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` := v3 @kind boolean;
  #L24ac74.  throw v2;
  catch `java.lang.Throwable` @[L24ac62..L24ac68] goto L24ac6e;
}
procedure `void` `writeMessageFrame`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `int` v2 , `long` v3 , `boolean` v5 , `boolean` v6 ) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @AccessFlag  {
    temp;
    v0;

  #L24ad90.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` @kind boolean;
  #L24ad94.  if v0 != 0 then goto L24aeb4;
  #L24ad98.  v0:= 0I;
  #L24ad9a.  if v5 == 0 then goto L24ada0;
  #L24ad9e.  goto L24ada2;
  #L24ada0.  v2:= 0I;
  #L24ada2.  if v6 == 0 then goto L24adaa;
  #L24ada6.  v2:= v2 ^| 128;
  #L24adaa.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24adae.  call temp:= `writeByte`(v5, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L24adb4.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L24adb8.  if v2 == 0 then goto L24adc0;
  #L24adbc.  v0:= 128I;
  #L24adc0.  v5:= 125L;
  #L24adc4.  v2:= lcmp(v3, v5);
  #L24adc8.  if v2 > 0 then goto L24addc;
  #L24adcc.  v2:= (`int`) v3 @kind l2i;
  #L24adce.  v2:= v2 ^| v0 @kind int;
  #L24add0.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24add4.  call temp:= `writeByte`(v5, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L24adda.  goto L24ae1e;
  #L24addc.  v5:= 65535L;
  #L24ade2.  v2:= lcmp(v3, v5);
  #L24ade6.  if v2 > 0 then goto L24ae06;
  #L24adea.  v2:= v0 ^| 126;
  #L24adee.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24adf2.  call temp:= `writeByte`(v5, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L24adf8.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24adfc.  v5:= (`int`) v3 @kind l2i;
  #L24adfe.  call temp:= `writeShort`(v2, v5) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L24ae04.  goto L24ae1e;
  #L24ae06.  v2:= v0 ^| 127;
  #L24ae0a.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24ae0e.  call temp:= `writeByte`(v5, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L24ae14.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24ae18.  call temp:= `writeLong`(v2, v3) @signature `Lokio/Buffer;.writeLong:(J)Lokio/Buffer;` @kind virtual;
  #L24ae1e.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L24ae22.  if v2 == 0 then goto L24ae9a;
  #L24ae26.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` @kind object;
  #L24ae2a.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L24ae2e.  call `nextBytes`(v2, v5) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L24ae34.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24ae38.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L24ae3c.  call temp:= `write`(v2, v5) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L24ae42.  v5:= 0L;
  #L24ae46.  v2:= lcmp(v3, v5);
  #L24ae4a.  if v2 <= 0 then goto L24aea8;
  #L24ae4e.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24ae52.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L24ae58.  v5:= temp @kind wide;
  #L24ae5a.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24ae5e.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L24ae62.  call `write`(v2, v0, v3) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L24ae68.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24ae6c.  v3:= v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24ae70.  call temp:= `readAndWriteUnsafe`(v2, v3) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L24ae76.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24ae7a.  call temp:= `seek`(v2, v5) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L24ae80.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24ae84.  v3:= v1.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L24ae88.  call `toggleMask`(v2, v3) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L24ae8e.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L24ae92.  call `close`(v2) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L24ae98.  goto L24aea8;
  #L24ae9a.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L24ae9e.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L24aea2.  call `write`(v2, v5, v3) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L24aea8.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L24aeac.  call temp:= `emit`(v2) @signature `Lokio/BufferedSink;.emit:()Lokio/BufferedSink;` @kind interface;
  #L24aeb2.  return @kind void;
  #L24aeb4.  v2:= new `java.io.IOException`;
  #L24aeb8.  v3:= "closed" @kind object;
  #L24aebc.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24aec2.  throw v2;
}
procedure `void` `writePing`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePing:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L24aed4.  v0:= 9I;
  #L24aed8.  call `writeControlFrame`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L24aede.  return @kind void;
}
procedure `void` `writePong`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePong:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L24aef0.  v0:= 10I;
  #L24aef4.  call `writeControlFrame`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L24aefa.  return @kind void;
}
