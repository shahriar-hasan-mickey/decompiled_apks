record `okhttp3.internal.Util` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.RequestBody` `@@okhttp3.internal.Util.EMPTY_REQUEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.ResponseBody` `@@okhttp3.internal.Util.EMPTY_RESPONSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.Util.EMPTY_STRING_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.ISO_8859_1` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Comparator` `@@okhttp3.internal.Util.NATURAL_ORDER` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.TimeZone` `@@okhttp3.internal.Util.UTC` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_16_BE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_16_BE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_16_LE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_16_LE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_32_BE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_32_BE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_32_LE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_32_LE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_8_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/Util;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L234114.  v0:= 0I;
  #L234116.  v1:= new `byte`[v0];
  #L23411a.  `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] := v1 @kind object;
  #L23411e.  v0:= new `java.lang.String`[v0];
  #L234122.  `@@okhttp3.internal.Util.EMPTY_STRING_ARRAY` @type ^`java.lang.String`[] := v0 @kind object;
  #L234126.  v0:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L23412a.  v1:= 0I;
  #L23412c.  call temp:= `create`(v1, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;` @kind static;
  #L234132.  v0:= temp @kind object;
  #L234134.  `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` := v0 @kind object;
  #L234138.  v0:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L23413c.  call temp:= `create`(v1, v0) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;` @kind static;
  #L234142.  v0:= temp @kind object;
  #L234144.  `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L234148.  v0:= "efbbbf" @kind object;
  #L23414c.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L234152.  v0:= temp @kind object;
  #L234154.  `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L234158.  v0:= "feff" @kind object;
  #L23415c.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L234162.  v0:= temp @kind object;
  #L234164.  `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L234168.  v0:= "fffe" @kind object;
  #L23416c.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L234172.  v0:= temp @kind object;
  #L234174.  `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L234178.  v0:= "0000ffff" @kind object;
  #L23417c.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L234182.  v0:= temp @kind object;
  #L234184.  `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L234188.  v0:= "ffff0000" @kind object;
  #L23418c.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L234192.  v0:= temp @kind object;
  #L234194.  `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L234198.  v0:= "UTF-8" @kind object;
  #L23419c.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2341a2.  v0:= temp @kind object;
  #L2341a4.  `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L2341a8.  v0:= "ISO-8859-1" @kind object;
  #L2341ac.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2341b2.  v0:= temp @kind object;
  #L2341b4.  `@@okhttp3.internal.Util.ISO_8859_1` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L2341b8.  v0:= "UTF-16BE" @kind object;
  #L2341bc.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2341c2.  v0:= temp @kind object;
  #L2341c4.  `@@okhttp3.internal.Util.UTF_16_BE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L2341c8.  v0:= "UTF-16LE" @kind object;
  #L2341cc.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2341d2.  v0:= temp @kind object;
  #L2341d4.  `@@okhttp3.internal.Util.UTF_16_LE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L2341d8.  v0:= "UTF-32BE" @kind object;
  #L2341dc.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2341e2.  v0:= temp @kind object;
  #L2341e4.  `@@okhttp3.internal.Util.UTF_32_BE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L2341e8.  v0:= "UTF-32LE" @kind object;
  #L2341ec.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2341f2.  v0:= temp @kind object;
  #L2341f4.  `@@okhttp3.internal.Util.UTF_32_LE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L2341f8.  v0:= "GMT" @kind object;
  #L2341fc.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L234202.  v0:= temp @kind object;
  #L234204.  `@@okhttp3.internal.Util.UTC` @type ^`java.util.TimeZone` := v0 @kind object;
  #L234208.  v0:= new `okhttp3.internal.Util$1`;
  #L23420c.  call `<init>`(v0) @signature `Lokhttp3/internal/Util$1;.<init>:()V` @kind direct;
  #L234212.  `@@okhttp3.internal.Util.NATURAL_ORDER` @type ^`java.util.Comparator` := v0 @kind object;
  #L234216.  v0:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L23421a.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L234220.  v0:= temp @kind object;
  #L234222.  `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L234226.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.Util` v0 @kind this) @signature `Lokhttp3/internal/Util;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L234238.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23423e.  return @kind void;
}
procedure `java.lang.AssertionError` `assertionError`(`java.lang.String` v1 @kind object, `java.lang.Exception` v2 @kind object) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L233ac0.  v0:= new `java.lang.AssertionError`;
  #L233ac4.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L233aca.  call temp:= `initCause`(v0, v2) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L233ad0.  return v0 @kind object;
  catch `java.lang.IllegalStateException` @[L233aca..L233ad0] goto L233ad0;
}
procedure `java.nio.charset.Charset` `bomAwareCharset`(`okio.BufferedSource` v3 @kind object, `java.nio.charset.Charset` v4 @kind object) @signature `Lokhttp3/internal/Util;.bomAwareCharset:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L233fbc.  v0:= `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` @kind object;
  #L233fc0.  v1:= 0L;
  #L233fc4.  call temp:= `rangeEquals`(v3, v1, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L233fca.  v0:= temp;
  #L233fcc.  if v0 == 0 then goto L233fea;
  #L233fd0.  v4:= `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` @kind object;
  #L233fd4.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L233fda.  v4:= temp;
  #L233fdc.  v0:= (`long`) v4 @kind i2l;
  #L233fde.  call `skip`(v3, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L233fe4.  v3:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L233fe8.  return v3 @kind object;
  #L233fea.  v0:= `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L233fee.  call temp:= `rangeEquals`(v3, v1, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L233ff4.  v0:= temp;
  #L233ff6.  if v0 == 0 then goto L234014;
  #L233ffa.  v4:= `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L233ffe.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L234004.  v4:= temp;
  #L234006.  v0:= (`long`) v4 @kind i2l;
  #L234008.  call `skip`(v3, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L23400e.  v3:= `@@okhttp3.internal.Util.UTF_16_BE` @type ^`java.nio.charset.Charset` @kind object;
  #L234012.  return v3 @kind object;
  #L234014.  v0:= `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L234018.  call temp:= `rangeEquals`(v3, v1, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L23401e.  v0:= temp;
  #L234020.  if v0 == 0 then goto L23403e;
  #L234024.  v4:= `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L234028.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L23402e.  v4:= temp;
  #L234030.  v0:= (`long`) v4 @kind i2l;
  #L234032.  call `skip`(v3, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L234038.  v3:= `@@okhttp3.internal.Util.UTF_16_LE` @type ^`java.nio.charset.Charset` @kind object;
  #L23403c.  return v3 @kind object;
  #L23403e.  v0:= `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L234042.  call temp:= `rangeEquals`(v3, v1, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L234048.  v0:= temp;
  #L23404a.  if v0 == 0 then goto L234068;
  #L23404e.  v4:= `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L234052.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L234058.  v4:= temp;
  #L23405a.  v0:= (`long`) v4 @kind i2l;
  #L23405c.  call `skip`(v3, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L234062.  v3:= `@@okhttp3.internal.Util.UTF_32_BE` @type ^`java.nio.charset.Charset` @kind object;
  #L234066.  return v3 @kind object;
  #L234068.  v0:= `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L23406c.  call temp:= `rangeEquals`(v3, v1, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L234072.  v0:= temp;
  #L234074.  if v0 == 0 then goto L234092;
  #L234078.  v4:= `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L23407c.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L234082.  v4:= temp;
  #L234084.  v0:= (`long`) v4 @kind i2l;
  #L234086.  call `skip`(v3, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L23408c.  v3:= `@@okhttp3.internal.Util.UTF_32_LE` @type ^`java.nio.charset.Charset` @kind object;
  #L234090.  return v3 @kind object;
  #L234092.  return v4 @kind object;
}
procedure `java.lang.String` `canonicalizeHost`(`java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L233af4.  v0:= ":" @kind object;
  #L233af8.  call temp:= `contains`(v3, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L233afe.  v0:= temp;
  #L233b00.  v1:= 0I;
  #L233b02.  if v0 == 0 then goto L233ba8;
  #L233b06.  v0:= "[" @kind object;
  #L233b0a.  call temp:= `startsWith`(v3, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L233b10.  v0:= temp;
  #L233b12.  if v0 == 0 then goto L233b3c;
  #L233b16.  v0:= "]" @kind object;
  #L233b1a.  call temp:= `endsWith`(v3, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L233b20.  v0:= temp;
  #L233b22.  if v0 == 0 then goto L233b3c;
  #L233b26.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L233b2c.  v0:= temp;
  #L233b2e.  v2:= 1I;
  #L233b30.  v0:= v0 - v2 @kind int;
  #L233b32.  call temp:= `decodeIpv6`(v3, v2, v0) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L233b38.  v0:= temp @kind object;
  #L233b3a.  goto L233b4e;
  #L233b3c.  v0:= 0I;
  #L233b3e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L233b44.  v2:= temp;
  #L233b46.  call temp:= `decodeIpv6`(v3, v0, v2) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L233b4c.  v0:= temp @kind object;
  #L233b4e.  if v0 != 0 then goto L233b54;
  #L233b52.  return v1 @kind object;
  #L233b54.  call temp:= `getAddress`(v0) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L233b5a.  v0:= temp @kind object;
  #L233b5c.  v1:= length @variable v0;
  #L233b5e.  v2:= 16I;
  #L233b62.  if v1 != v2 then goto L233b70;
  #L233b66.  call temp:= `inet6AddressToAscii`(v0) @signature `Lokhttp3/internal/Util;.inet6AddressToAscii:([B)Ljava/lang/String;` @kind static;
  #L233b6c.  v3:= temp @kind object;
  #L233b6e.  return v3 @kind object;
  #L233b70.  v0:= new `java.lang.AssertionError`;
  #L233b74.  v1:= new `java.lang.StringBuilder`;
  #L233b78.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L233b7e.  v2:= "Invalid IPv6 address: '" @kind object;
  #L233b82.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L233b88.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L233b8e.  v3:= "'" @kind object;
  #L233b92.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L233b98.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L233b9e.  v3:= temp @kind object;
  #L233ba0.  call `<init>`(v0, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L233ba6.  throw v0;
  #L233ba8.  call temp:= `toASCII`(v3) @signature `Ljava/net/IDN;.toASCII:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L233bae.  v3:= temp @kind object;
  #L233bb0.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L233bb4.  call temp:= `toLowerCase`(v3, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L233bba.  v3:= temp @kind object;
  #L233bbc.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L233bc2.  v0:= temp;
  #L233bc4.  if v0 == 0 then goto L233bca;
  #L233bc8.  return v1 @kind object;
  #L233bca.  call temp:= `containsInvalidHostnameAsciiCodes`(v3) @signature `Lokhttp3/internal/Util;.containsInvalidHostnameAsciiCodes:(Ljava/lang/String;)Z` @kind static;
  #L233bd0.  v0:= temp;
  #L233bd2.  if v0 == 0 then goto L233bd8;
  #L233bd6.  return v1 @kind object;
  #L233bd8.  return v3 @kind object;
  #L233bda.  return v1 @kind object;
  catch `java.lang.IllegalArgumentException` @[L233ba8..L233bd2] goto L233bda;
}
procedure `int` `checkDuration`(`java.lang.String` v6 @kind object, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2337f0.  v0:= 0L;
  #L2337f4.  v2:= lcmp(v7, v0);
  #L2337f8.  if v2 < 0 then goto L233898;
  #L2337fc.  if v9 == 0 then goto L233888;
  #L233800.  call temp:= `toMillis`(v9, v7) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L233806.  v2:= temp @kind wide;
  #L233808.  v4:= 2147483647L;
  #L23380e.  v9:= lcmp(v2, v4);
  #L233812.  if v9 > 0 then goto L23385a;
  #L233816.  v9:= lcmp(v2, v0);
  #L23381a.  if v9 != 0 then goto L233856;
  #L23381e.  v9:= lcmp(v7, v0);
  #L233822.  if v9 > 0 then goto L233828;
  #L233826.  goto L233856;
  #L233828.  v7:= new `java.lang.IllegalArgumentException`;
  #L23382c.  v8:= new `java.lang.StringBuilder`;
  #L233830.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L233836.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23383c.  v6:= " too small." @kind object;
  #L233840.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L233846.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23384c.  v6:= temp @kind object;
  #L23384e.  call `<init>`(v7, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L233854.  throw v7;
  #L233856.  v6:= (`int`) v2 @kind l2i;
  #L233858.  return v6;
  #L23385a.  v7:= new `java.lang.IllegalArgumentException`;
  #L23385e.  v8:= new `java.lang.StringBuilder`;
  #L233862.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L233868.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23386e.  v6:= " too large." @kind object;
  #L233872.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L233878.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23387e.  v6:= temp @kind object;
  #L233880.  call `<init>`(v7, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L233886.  throw v7;
  #L233888.  v6:= new `java.lang.NullPointerException`;
  #L23388c.  v7:= "unit == null" @kind object;
  #L233890.  call `<init>`(v6, v7) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L233896.  throw v6;
  #L233898.  v7:= new `java.lang.IllegalArgumentException`;
  #L23389c.  v8:= new `java.lang.StringBuilder`;
  #L2338a0.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2338a6.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2338ac.  v6:= " < 0" @kind object;
  #L2338b0.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2338b6.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2338bc.  v6:= temp @kind object;
  #L2338be.  call `<init>`(v7, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2338c4.  throw v7;
}
procedure `void` `checkOffsetAndCount`(`long` v5 , `long` v7 , `long` v9 ) @signature `Lokhttp3/internal/Util;.checkOffsetAndCount:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L234250.  v0:= v7 ^| v9 @kind long;
  #L234254.  v2:= 0L;
  #L234258.  v4:= lcmp(v0, v2);
  #L23425c.  if v4 < 0 then goto L234274;
  #L234260.  v0:= lcmp(v7, v5);
  #L234264.  if v0 > 0 then goto L234274;
  #L234268.  v5:= v5 - v7 @kind long;
  #L23426a.  v7:= lcmp(v5, v9);
  #L23426e.  if v7 < 0 then goto L234274;
  #L234272.  return @kind void;
  #L234274.  v5:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L234278.  call `<init>`(v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L23427e.  throw v5;
}
procedure `void` `closeQuietly`(`java.io.Closeable` v0 @kind object) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L234290.  if v0 == 0 then goto L2342a0;
  #L234294.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L23429a.  goto L2342a0;
  #L23429c.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L23429e.  throw v0;
  #L2342a0.  return @kind void;
  catch `java.lang.RuntimeException` @[L234294..L23429a] goto L23429c;
  catch `java.lang.Exception` @[L234294..L23429a] goto L2342a0;
}
procedure `void` `closeQuietly`(`java.net.ServerSocket` v0 @kind object) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/ServerSocket;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2342c4.  if v0 == 0 then goto L2342d4;
  #L2342c8.  call `close`(v0) @signature `Ljava/net/ServerSocket;.close:()V` @kind virtual;
  #L2342ce.  goto L2342d4;
  #L2342d0.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L2342d2.  throw v0;
  #L2342d4.  return @kind void;
  catch `java.lang.RuntimeException` @[L2342c8..L2342ce] goto L2342d0;
  catch `java.lang.Exception` @[L2342c8..L2342ce] goto L2342d4;
}
procedure `void` `closeQuietly`(`java.net.Socket` v1 @kind object) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2342f8.  if v1 == 0 then goto L23431a;
  #L2342fc.  call `close`(v1) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L234302.  goto L23431a;
  #L234304.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L234306.  throw v1;
  #L234308.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L23430a.  call temp:= `isAndroidGetsocknameError`(v1) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L234310.  v0:= temp;
  #L234312.  if v0 == 0 then goto L234318;
  #L234316.  goto L23431a;
  #L234318.  throw v1;
  #L23431a.  return @kind void;
  catch `java.lang.AssertionError` @[L2342fc..L234302] goto L234308;
  catch `java.lang.RuntimeException` @[L2342fc..L234302] goto L234304;
  catch `java.lang.Exception` @[L2342fc..L234302] goto L23431a;
}
procedure `java.lang.String`[] `concat`(`java.lang.String`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lokhttp3/internal/Util;.concat:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L233dc4.  v0:= length @variable v3;
  #L233dc6.  v0:= v0 + 1;
  #L233dca.  v0:= new `java.lang.String`[v0];
  #L233dce.  v1:= length @variable v3;
  #L233dd0.  v2:= 0I;
  #L233dd2.  call `arraycopy`(v3, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L233dd8.  v3:= length @variable v0;
  #L233dda.  v3:= v3 + -1;
  #L233dde.  v0[v3]:= v4 @kind object;
  #L233de2.  return v0 @kind object;
}
procedure `boolean` `containsInvalidHostnameAsciiCodes`(`java.lang.String` v5 @kind object) @signature `Lokhttp3/internal/Util;.containsInvalidHostnameAsciiCodes:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L23348c.  v0:= 0I;
  #L23348e.  v1:= 0I;
  #L233490.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L233496.  v2:= temp;
  #L233498.  if v1 >= v2 then goto L2334d4;
  #L23349c.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2334a2.  v2:= temp;
  #L2334a4.  v3:= 31I;
  #L2334a8.  v4:= 1I;
  #L2334aa.  if v2 <= v3 then goto L2334d2;
  #L2334ae.  v3:= 127I;
  #L2334b2.  if v2 < v3 then goto L2334b8;
  #L2334b6.  goto L2334d2;
  #L2334b8.  v3:= " #%/:?@[\\]" @kind object;
  #L2334bc.  call temp:= `indexOf`(v3, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L2334c2.  v2:= temp;
  #L2334c4.  v3:= -1I;
  #L2334c6.  if v2 == v3 then goto L2334cc;
  #L2334ca.  return v4;
  #L2334cc.  v1:= v1 + 1;
  #L2334d0.  goto L233490;
  #L2334d2.  return v4;
  #L2334d4.  return v0;
}
procedure `int` `decodeHexDigit`(`char` v2 ) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2338d8.  v0:= 48I;
  #L2338dc.  if v2 < v0 then goto L2338ec;
  #L2338e0.  v1:= 57I;
  #L2338e4.  if v2 > v1 then goto L2338ec;
  #L2338e8.  v2:= v2 - v0 @kind int;
  #L2338ea.  return v2;
  #L2338ec.  v0:= 97I;
  #L2338f0.  if v2 < v0 then goto L233904;
  #L2338f4.  v1:= 102I;
  #L2338f8.  if v2 > v1 then goto L233904;
  #L2338fc.  v2:= v2 - v0 @kind int;
  #L2338fe.  v2:= v2 + 10;
  #L233902.  return v2;
  #L233904.  v0:= 65I;
  #L233908.  if v2 < v0 then goto L23391c;
  #L23390c.  v1:= 70I;
  #L233910.  if v2 > v1 then goto L23391c;
  #L233914.  v2:= v2 - v0 @kind int;
  #L233916.  v2:= v2 + 10;
  #L23391a.  return v2;
  #L23391c.  v2:= -1I;
  #L23391e.  return v2;
}
procedure `boolean` `decodeIpv4Suffix`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `Lokhttp3/internal/Util;.decodeIpv4Suffix:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2334e8.  v0:= v11;
  #L2334ea.  v1:= 0I;
  #L2334ec.  if v8 >= v9 then goto L233570;
  #L2334f0.  v2:= length @variable v10;
  #L2334f2.  if v0 != v2 then goto L2334f8;
  #L2334f6.  return v1;
  #L2334f8.  if v0 == v11 then goto L233512;
  #L2334fc.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L233502.  v2:= temp;
  #L233504.  v3:= 46I;
  #L233508.  if v2 == v3 then goto L23350e;
  #L23350c.  return v1;
  #L23350e.  v8:= v8 + 1;
  #L233512.  v2:= v8;
  #L233514.  v3:= 0I;
  #L233516.  if v2 >= v9 then goto L233556;
  #L23351a.  call temp:= `charAt`(v7, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L233520.  v4:= temp;
  #L233522.  v5:= 48I;
  #L233526.  if v4 < v5 then goto L233556;
  #L23352a.  v6:= 57I;
  #L23352e.  if v4 <= v6 then goto L233534;
  #L233532.  goto L233556;
  #L233534.  if v3 != 0 then goto L23353e;
  #L233538.  if v8 == v2 then goto L23353e;
  #L23353c.  return v1;
  #L23353e.  v3:= v3 * 10;
  #L233542.  v3:= v3 + v4 @kind int;
  #L233544.  v3:= v3 - v5 @kind int;
  #L233546.  v4:= 255I;
  #L23354a.  if v3 <= v4 then goto L233550;
  #L23354e.  return v1;
  #L233550.  v2:= v2 + 1;
  #L233554.  goto L233516;
  #L233556.  v8:= v2 - v8 @kind int;
  #L23355a.  if v8 != 0 then goto L233560;
  #L23355e.  return v1;
  #L233560.  v8:= v0 + 1;
  #L233564.  v1:= (`byte`) v3 @kind i2b;
  #L233566.  v10[v0]:= v1 @kind byte;
  #L23356a.  v0:= v8;
  #L23356c.  v8:= v2;
  #L23356e.  goto L2334ea;
  #L233570.  v11:= v11 + 4;
  #L233574.  if v0 == v11 then goto L23357a;
  #L233578.  return v1;
  #L23357a.  v7:= 1I;
  #L23357c.  return v7;
}
procedure `java.net.InetAddress` `decodeIpv6`(`java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L233e64.  v0:= 16I;
  #L233e68.  v0:= new `byte`[v0];
  #L233e6c.  v1:= -1I;
  #L233e6e.  v2:= 0I;
  #L233e70.  v3:= 0I;
  #L233e72.  v4:= -1I;
  #L233e74.  v5:= -1I;
  #L233e76.  v6:= 0I;
  #L233e78.  if v11 >= v12 then goto L233f5e;
  #L233e7c.  v7:= length @variable v0;
  #L233e7e.  if v3 != v7 then goto L233e84;
  #L233e82.  return v6 @kind object;
  #L233e84.  v7:= v11 + 2;
  #L233e88.  if v7 > v12 then goto L233eb6;
  #L233e8c.  v8:= "::" @kind object;
  #L233e90.  v9:= 2I;
  #L233e92.  call temp:= `regionMatches`(v10, v11, v8, v2, v9) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L233e98.  v8:= temp;
  #L233e9a.  if v8 == 0 then goto L233eb6;
  #L233e9e.  if v4 == v1 then goto L233ea4;
  #L233ea2.  return v6 @kind object;
  #L233ea4.  v3:= v3 + 2;
  #L233ea8.  if v7 != v12 then goto L233eb0;
  #L233eac.  v4:= v3;
  #L233eae.  goto L233f5e;
  #L233eb0.  v4:= v3;
  #L233eb2.  v5:= v7;
  #L233eb4.  goto L233f00;
  #L233eb6.  if v3 == 0 then goto L233efe;
  #L233eba.  v7:= ":" @kind object;
  #L233ebe.  v8:= 1I;
  #L233ec0.  call temp:= `regionMatches`(v10, v11, v7, v2, v8) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L233ec6.  v7:= temp;
  #L233ec8.  if v7 == 0 then goto L233ed4;
  #L233ecc.  v11:= v11 + 1;
  #L233ed0.  v5:= v11;
  #L233ed2.  goto L233f00;
  #L233ed4.  v7:= "." @kind object;
  #L233ed8.  call temp:= `regionMatches`(v10, v11, v7, v2, v8) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L233ede.  v11:= temp;
  #L233ee0.  if v11 == 0 then goto L233efc;
  #L233ee4.  v11:= v3 + -2;
  #L233ee8.  call temp:= `decodeIpv4Suffix`(v10, v5, v12, v0, v11) @signature `Lokhttp3/internal/Util;.decodeIpv4Suffix:(Ljava/lang/String;II[BI)Z` @kind static;
  #L233eee.  v10:= temp;
  #L233ef0.  if v10 != 0 then goto L233ef6;
  #L233ef4.  return v6 @kind object;
  #L233ef6.  v3:= v3 + 2;
  #L233efa.  goto L233f5e;
  #L233efc.  return v6 @kind object;
  #L233efe.  v5:= v11;
  #L233f00.  v11:= v5;
  #L233f02.  v7:= 0I;
  #L233f04.  if v11 >= v12 then goto L233f2a;
  #L233f08.  call temp:= `charAt`(v10, v11) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L233f0e.  v8:= temp;
  #L233f10.  call temp:= `decodeHexDigit`(v8) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L233f16.  v8:= temp;
  #L233f18.  if v8 != v1 then goto L233f1e;
  #L233f1c.  goto L233f2a;
  #L233f1e.  v7:= v7 ^< 4;
  #L233f22.  v7:= v7 + v8 @kind int;
  #L233f24.  v11:= v11 + 1;
  #L233f28.  goto L233f04;
  #L233f2a.  v8:= v11 - v5 @kind int;
  #L233f2e.  if v8 == 0 then goto L233f5c;
  #L233f32.  v9:= 4I;
  #L233f34.  if v8 <= v9 then goto L233f3a;
  #L233f38.  goto L233f5c;
  #L233f3a.  v6:= v3 + 1;
  #L233f3e.  v8:= v7 ^>> 8;
  #L233f42.  v8:= v8 ^& 255;
  #L233f46.  v8:= (`byte`) v8 @kind i2b;
  #L233f48.  v0[v3]:= v8 @kind byte;
  #L233f4c.  v3:= v6 + 1;
  #L233f50.  v7:= v7 ^& 255;
  #L233f54.  v7:= (`byte`) v7 @kind i2b;
  #L233f56.  v0[v6]:= v7 @kind byte;
  #L233f5a.  goto L233e76;
  #L233f5c.  return v6 @kind object;
  #L233f5e.  v10:= length @variable v0;
  #L233f60.  if v3 == v10 then goto L233f84;
  #L233f64.  if v4 != v1 then goto L233f6a;
  #L233f68.  return v6 @kind object;
  #L233f6a.  v10:= length @variable v0;
  #L233f6c.  v11:= v3 - v4 @kind int;
  #L233f70.  v10:= v10 - v11 @kind int;
  #L233f72.  call `arraycopy`(v0, v4, v0, v10, v11) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L233f78.  v10:= length @variable v0;
  #L233f7a.  v10:= v10 - v3 @kind int;
  #L233f7c.  v10:= v10 + v4 @kind int;
  #L233f7e.  call `fill`(v0, v4, v10, v2) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #L233f84.  call temp:= `getByAddress`(v0) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #L233f8a.  v10:= temp @kind object;
  #L233f8c.  return v10 @kind object;
  #L233f8e.  v10:= new `java.lang.AssertionError`;
  #L233f92.  call `<init>`(v10) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L233f98.  throw v10;
  #L233f9a.  return @kind void;
  catch `java.net.UnknownHostException` @[L233f84..L233f8c] goto L233f8e;
}
procedure `int` `delimiterOffset`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 , `char` v4 ) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L233930.  if v2 >= v3 then goto L233948;
  #L233934.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L23393a.  v0:= temp;
  #L23393c.  if v0 != v4 then goto L233942;
  #L233940.  return v2;
  #L233942.  v2:= v2 + 1;
  #L233946.  goto L233930;
  #L233948.  return v3;
}
procedure `int` `delimiterOffset`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `java.lang.String` v5 @kind object) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L23395c.  if v3 >= v4 then goto L23397e;
  #L233960.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L233966.  v0:= temp;
  #L233968.  call temp:= `indexOf`(v5, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L23396e.  v0:= temp;
  #L233970.  v1:= -1I;
  #L233972.  if v0 == v1 then goto L233978;
  #L233976.  return v3;
  #L233978.  v3:= v3 + 1;
  #L23397c.  goto L23395c;
  #L23397e.  return v4;
}
procedure `boolean` `discard`(`okio.Source` v0 @kind object, `int` v1 , `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L233590.  call temp:= `skipAll`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L233596.  v0:= temp;
  #L233598.  return v0;
  #L23359a.  v0:= 0I;
  #L23359c.  return v0;
  catch `java.io.IOException` @[L233590..L233598] goto L23359a;
}
procedure `boolean` `equal`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2335c0.  if v0 == v1 then goto L2335da;
  #L2335c4.  if v0 == 0 then goto L2335d6;
  #L2335c8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2335ce.  v0:= temp;
  #L2335d0.  if v0 == 0 then goto L2335d6;
  #L2335d4.  goto L2335da;
  #L2335d6.  v0:= 0I;
  #L2335d8.  goto L2335dc;
  #L2335da.  v0:= 1I;
  #L2335dc.  return v0;
}
procedure `java.lang.String` `format`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L233bfc.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L233c00.  call temp:= `format`(v0, v1, v2) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L233c06.  v1:= temp @kind object;
  #L233c08.  return v1 @kind object;
}
procedure `java.lang.String` `hostHeader`(`okhttp3.HttpUrl` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L233c1c.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L233c22.  v0:= temp @kind object;
  #L233c24.  v1:= ":" @kind object;
  #L233c28.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L233c2e.  v0:= temp;
  #L233c30.  if v0 == 0 then goto L233c6a;
  #L233c34.  v0:= new `java.lang.StringBuilder`;
  #L233c38.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L233c3e.  v1:= "[" @kind object;
  #L233c42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L233c48.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L233c4e.  v1:= temp @kind object;
  #L233c50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L233c56.  v1:= "]" @kind object;
  #L233c5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L233c60.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L233c66.  v0:= temp @kind object;
  #L233c68.  goto L233c72;
  #L233c6a.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L233c70.  v0:= temp @kind object;
  #L233c72.  if v3 != 0 then goto L233c92;
  #L233c76.  call temp:= `port`(v2) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L233c7c.  v3:= temp;
  #L233c7e.  call temp:= `scheme`(v2) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L233c84.  v1:= temp @kind object;
  #L233c86.  call temp:= `defaultPort`(v1) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L233c8c.  v1:= temp;
  #L233c8e.  if v3 == v1 then goto L233cc2;
  #L233c92.  v3:= new `java.lang.StringBuilder`;
  #L233c96.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L233c9c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L233ca2.  v0:= ":" @kind object;
  #L233ca6.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L233cac.  call temp:= `port`(v2) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L233cb2.  v2:= temp;
  #L233cb4.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L233cba.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L233cc0.  v0:= temp @kind object;
  #L233cc2.  return v0 @kind object;
}
procedure `java.util.List` `immutableList`(`java.util.List` v1 @kind object) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2340d4.  v0:= new `java.util.ArrayList`;
  #L2340d8.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2340de.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2340e4.  v1:= temp @kind object;
  #L2340e6.  return v1 @kind object;
}
procedure `java.util.List` `immutableList`(`java.lang.Object`[] v0 @kind object) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2340a4.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2340aa.  v0:= temp @kind object;
  #L2340ac.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L2340b0.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2340b6.  v0:= temp @kind object;
  #L2340b8.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2340be.  v0:= temp @kind object;
  #L2340c0.  return v0 @kind object;
}
procedure `int` `indexOf`(`java.util.Comparator` v3 @kind object, `java.lang.String`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lokhttp3/internal/Util;.indexOf:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L233990.  v0:= length @variable v4;
  #L233992.  v1:= 0I;
  #L233994.  if v1 >= v0 then goto L2339b0;
  #L233998.  v2:= v4[v1] @kind object;
  #L23399c.  call temp:= `compare`(v3, v2, v5) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L2339a2.  v2:= temp;
  #L2339a4.  if v2 != 0 then goto L2339aa;
  #L2339a8.  return v1;
  #L2339aa.  v1:= v1 + 1;
  #L2339ae.  goto L233994;
  #L2339b0.  v3:= -1I;
  #L2339b2.  return v3;
}
procedure `int` `indexOfControlOrNonAscii`(`java.lang.String` v4 @kind object) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2339c4.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2339ca.  v0:= temp;
  #L2339cc.  v1:= 0I;
  #L2339ce.  if v1 >= v0 then goto L2339f4;
  #L2339d2.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2339d8.  v2:= temp;
  #L2339da.  v3:= 31I;
  #L2339de.  if v2 <= v3 then goto L2339f2;
  #L2339e2.  v3:= 127I;
  #L2339e6.  if v2 < v3 then goto L2339ec;
  #L2339ea.  goto L2339f2;
  #L2339ec.  v1:= v1 + 1;
  #L2339f0.  goto L2339ce;
  #L2339f2.  return v1;
  #L2339f4.  v4:= -1I;
  #L2339f6.  return v4;
}
procedure `java.lang.String` `inet6AddressToAscii`(`byte`[] v8 @kind object) @signature `Lokhttp3/internal/Util;.inet6AddressToAscii:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L233cd4.  v0:= 0I;
  #L233cd6.  v1:= -1I;
  #L233cd8.  v1:= 0I;
  #L233cda.  v2:= -1I;
  #L233cdc.  v3:= 0I;
  #L233cde.  v4:= length @variable v8;
  #L233ce0.  v5:= 16I;
  #L233ce4.  if v1 >= v4 then goto L233d20;
  #L233ce8.  v4:= v1;
  #L233cea.  if v4 >= v5 then goto L233d08;
  #L233cee.  v6:= v8[v4] @kind byte;
  #L233cf2.  if v6 != 0 then goto L233d08;
  #L233cf6.  v6:= v4 + 1;
  #L233cfa.  v6:= v8[v6] @kind byte;
  #L233cfe.  if v6 != 0 then goto L233d08;
  #L233d02.  v4:= v4 + 2;
  #L233d06.  goto L233cea;
  #L233d08.  v5:= v4 - v1 @kind int;
  #L233d0c.  if v5 <= v3 then goto L233d1a;
  #L233d10.  v6:= 4I;
  #L233d12.  if v5 < v6 then goto L233d1a;
  #L233d16.  v2:= v1;
  #L233d18.  v3:= v5;
  #L233d1a.  v1:= v4 + 2;
  #L233d1e.  goto L233cde;
  #L233d20.  v1:= new `okio.Buffer`;
  #L233d24.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L233d2a.  v4:= length @variable v8;
  #L233d2c.  if v0 >= v4 then goto L233d7e;
  #L233d30.  v4:= 58I;
  #L233d34.  if v0 != v2 then goto L233d4c;
  #L233d38.  call temp:= `writeByte`(v1, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L233d3e.  v0:= v0 + v3 @kind int;
  #L233d40.  if v0 != v5 then goto L233d2a;
  #L233d44.  call temp:= `writeByte`(v1, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L233d4a.  goto L233d2a;
  #L233d4c.  if v0 <= 0 then goto L233d56;
  #L233d50.  call temp:= `writeByte`(v1, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L233d56.  v4:= v8[v0] @kind byte;
  #L233d5a.  v4:= v4 ^& 255;
  #L233d5e.  v4:= v4 ^< 8;
  #L233d62.  v6:= v0 + 1;
  #L233d66.  v6:= v8[v6] @kind byte;
  #L233d6a.  v6:= v6 ^& 255;
  #L233d6e.  v4:= v4 ^| v6 @kind int;
  #L233d70.  v6:= (`long`) v4 @kind i2l;
  #L233d72.  call temp:= `writeHexadecimalUnsignedLong`(v1, v6) @signature `Lokio/Buffer;.writeHexadecimalUnsignedLong:(J)Lokio/Buffer;` @kind virtual;
  #L233d78.  v0:= v0 + 2;
  #L233d7c.  goto L233d2a;
  #L233d7e.  call temp:= `readUtf8`(v1) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L233d84.  v8:= temp @kind object;
  #L233d86.  return v8 @kind object;
}
procedure `java.lang.String`[] `intersect`(`java.util.Comparator` v8 @kind object, `java.lang.String`[] v9 @kind object, `java.lang.String`[] v10 @kind object) @signature `Lokhttp3/internal/Util;.intersect:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L233df4.  v0:= new `java.util.ArrayList`;
  #L233df8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L233dfe.  v1:= length @variable v9;
  #L233e00.  v2:= 0I;
  #L233e02.  v3:= 0I;
  #L233e04.  if v3 >= v1 then goto L233e38;
  #L233e08.  v4:= v9[v3] @kind object;
  #L233e0c.  v5:= length @variable v10;
  #L233e0e.  v6:= 0I;
  #L233e10.  if v6 >= v5 then goto L233e32;
  #L233e14.  v7:= v10[v6] @kind object;
  #L233e18.  call temp:= `compare`(v8, v4, v7) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L233e1e.  v7:= temp;
  #L233e20.  if v7 != 0 then goto L233e2c;
  #L233e24.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L233e2a.  goto L233e32;
  #L233e2c.  v6:= v6 + 1;
  #L233e30.  goto L233e10;
  #L233e32.  v3:= v3 + 1;
  #L233e36.  goto L233e04;
  #L233e38.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L233e3e.  v8:= temp;
  #L233e40.  v8:= new `java.lang.String`[v8];
  #L233e44.  call temp:= `toArray`(v0, v8) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L233e4a.  v8:= temp @kind object;
  #L233e4c.  v8:= (`java.lang.String`[]) v8 @kind object;
  #L233e50.  return v8 @kind object;
}
procedure `boolean` `isAndroidGetsocknameError`(`java.lang.AssertionError` v1 @kind object) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2335f0.  call temp:= `getCause`(v1) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L2335f6.  v0:= temp @kind object;
  #L2335f8.  if v0 == 0 then goto L233624;
  #L2335fc.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L233602.  v0:= temp @kind object;
  #L233604.  if v0 == 0 then goto L233624;
  #L233608.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L23360e.  v1:= temp @kind object;
  #L233610.  v0:= "getsockname failed" @kind object;
  #L233614.  call temp:= `contains`(v1, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L23361a.  v1:= temp;
  #L23361c.  if v1 == 0 then goto L233624;
  #L233620.  v1:= 1I;
  #L233622.  goto L233626;
  #L233624.  v1:= 0I;
  #L233626.  return v1;
}
procedure `boolean` `nonEmptyIntersection`(`java.util.Comparator` v7 @kind object, `java.lang.String`[] v8 @kind object, `java.lang.String`[] v9 @kind object) @signature `Lokhttp3/internal/Util;.nonEmptyIntersection:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L233638.  v0:= 0I;
  #L23363a.  if v8 == 0 then goto L233686;
  #L23363e.  if v9 == 0 then goto L233686;
  #L233642.  v1:= length @variable v8;
  #L233644.  if v1 == 0 then goto L233686;
  #L233648.  v1:= length @variable v9;
  #L23364a.  if v1 != 0 then goto L233650;
  #L23364e.  goto L233686;
  #L233650.  v1:= length @variable v8;
  #L233652.  v2:= 0I;
  #L233654.  if v2 >= v1 then goto L233684;
  #L233658.  v3:= v8[v2] @kind object;
  #L23365c.  v4:= length @variable v9;
  #L23365e.  v5:= 0I;
  #L233660.  if v5 >= v4 then goto L23367e;
  #L233664.  v6:= v9[v5] @kind object;
  #L233668.  call temp:= `compare`(v7, v3, v6) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L23366e.  v6:= temp;
  #L233670.  if v6 != 0 then goto L233678;
  #L233674.  v7:= 1I;
  #L233676.  return v7;
  #L233678.  v5:= v5 + 1;
  #L23367c.  goto L233660;
  #L23367e.  v2:= v2 + 1;
  #L233682.  goto L233654;
  #L233684.  return v0;
  #L233686.  return v0;
}
procedure `boolean` `skipAll`(`okio.Source` v11 @kind object, `int` v12 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L233698.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L23369e.  v0:= temp @kind wide;
  #L2336a0.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L2336a6.  v2:= temp @kind object;
  #L2336a8.  call temp:= `hasDeadline`(v2) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L2336ae.  v2:= temp;
  #L2336b0.  v3:= 9223372036854775807L;
  #L2336ba.  if v2 == 0 then goto L2336d2;
  #L2336be.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L2336c4.  v2:= temp @kind object;
  #L2336c6.  call temp:= `deadlineNanoTime`(v2) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L2336cc.  v5:= temp @kind wide;
  #L2336ce.  v5:= v5 - v0 @kind long;
  #L2336d0.  goto L2336d4;
  #L2336d2.  v5:= v3 @kind wide;
  #L2336d4.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L2336da.  v2:= temp @kind object;
  #L2336dc.  v7:= (`long`) v12 @kind i2l;
  #L2336de.  call temp:= `toNanos`(v13, v7) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L2336e4.  v12:= temp @kind wide;
  #L2336e6.  call temp:= `min`(v5, v12) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2336ec.  v12:= temp @kind wide;
  #L2336ee.  v12:= v12 + v0 @kind long;
  #L2336f0.  call temp:= `deadlineNanoTime`(v2, v12) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L2336f6.  v12:= new `okio.Buffer`;
  #L2336fa.  call `<init>`(v12) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L233700.  v7:= 8192L;
  #L233704.  call temp:= `read`(v11, v12, v7) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L23370a.  v7:= temp @kind wide;
  #L23370c.  v9:= -1L;
  #L233710.  v13:= lcmp(v7, v9);
  #L233714.  if v13 == 0 then goto L233720;
  #L233718.  call `clear`(v12) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L23371e.  goto L233700;
  #L233720.  v12:= 1I;
  #L233722.  v13:= lcmp(v5, v3);
  #L233726.  if v13 != 0 then goto L23373a;
  #L23372a.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L233730.  v11:= temp @kind object;
  #L233732.  call temp:= `clearDeadline`(v11) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L233738.  goto L23374a;
  #L23373a.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L233740.  v11:= temp @kind object;
  #L233742.  v0:= v0 + v5 @kind long;
  #L233744.  call temp:= `deadlineNanoTime`(v11, v0) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L23374a.  return v12;
  #L23374c.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23374e.  v13:= lcmp(v5, v3);
  #L233752.  if v13 != 0 then goto L233766;
  #L233756.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L23375c.  v11:= temp @kind object;
  #L23375e.  call temp:= `clearDeadline`(v11) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L233764.  goto L233776;
  #L233766.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L23376c.  v11:= temp @kind object;
  #L23376e.  v0:= v0 + v5 @kind long;
  #L233770.  call temp:= `deadlineNanoTime`(v11, v0) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L233776.  throw v12;
  #L233778.  
  #L23377a.  v12:= 0I;
  #L23377c.  v13:= lcmp(v5, v3);
  #L233780.  if v13 != 0 then goto L233794;
  #L233784.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L23378a.  v11:= temp @kind object;
  #L23378c.  call temp:= `clearDeadline`(v11) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L233792.  goto L2337a4;
  #L233794.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L23379a.  v11:= temp @kind object;
  #L23379c.  v0:= v0 + v5 @kind long;
  #L23379e.  call temp:= `deadlineNanoTime`(v11, v0) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L2337a4.  return v12;
  catch `java.io.InterruptedIOException` @[L2336f6..L23371e] goto L233778;
  catch `java.lang.Throwable` @[L2336f6..L23371e] goto L23374c;
}
procedure `int` `skipLeadingAsciiWhitespace`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L233a08.  if v2 >= v3 then goto L233a22;
  #L233a0c.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L233a12.  v0:= temp;
  #L233a14.  goto L233a24;
  #L233a1a.  return v2;
  #L233a1c.  v2:= v2 + 1;
  #L233a20.  goto L233a08;
  #L233a22.  return v3;
  #L233a24.  switch v0
                  | 9 => goto L233a1c
                  | 10 => goto L233a1c
                  | 12 => goto L233a1c
                  | 13 => goto L233a1c
                  | 32 => goto L233a1c
                  | else => goto L233a1a;
}
procedure `int` `skipTrailingAsciiWhitespace`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L233a60.  v3:= v3 + -1;
  #L233a64.  if v3 < v2 then goto L233a82;
  #L233a68.  call temp:= `charAt`(v1, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L233a6e.  v0:= temp;
  #L233a70.  goto L233a84;
  #L233a76.  v3:= v3 + 1;
  #L233a7a.  return v3;
  #L233a7c.  v3:= v3 + -1;
  #L233a80.  goto L233a64;
  #L233a82.  return v2;
  #L233a84.  switch v0
                  | 9 => goto L233a7c
                  | 10 => goto L233a7c
                  | 12 => goto L233a7c
                  | 13 => goto L233a7c
                  | 32 => goto L233a7c
                  | else => goto L233a76;
}
procedure `java.util.concurrent.ThreadFactory` `threadFactory`(`java.lang.String` v1 @kind object, `boolean` v2 ) @signature `Lokhttp3/internal/Util;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2340f8.  v0:= new `okhttp3.internal.Util$2`;
  #L2340fc.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/Util$2;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L234102.  return v0 @kind object;
}
procedure `java.lang.String` `trimSubstring`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 ) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L233d98.  call temp:= `skipLeadingAsciiWhitespace`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L233d9e.  v1:= temp;
  #L233da0.  call temp:= `skipTrailingAsciiWhitespace`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L233da6.  v2:= temp;
  #L233da8.  call temp:= `substring`(v0, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L233dae.  v0:= temp @kind object;
  #L233db0.  return v0 @kind object;
}
procedure `boolean` `verifyAsIpAddress`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2337c8.  v0:= `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @type ^`java.util.regex.Pattern` @kind object;
  #L2337cc.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2337d2.  v1:= temp @kind object;
  #L2337d4.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L2337da.  v1:= temp;
  #L2337dc.  return v1;
}
