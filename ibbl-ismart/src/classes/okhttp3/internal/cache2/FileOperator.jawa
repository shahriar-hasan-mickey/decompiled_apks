record `okhttp3.internal.cache2.FileOperator` @kind class @AccessFlag FINAL {
  `java.nio.channels.FileChannel` `okhttp3.internal.cache2.FileOperator.fileChannel` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache2.FileOperator` v0 @kind this, `java.nio.channels.FileChannel` v1 @kind object) @signature `Lokhttp3/internal/cache2/FileOperator;.<init>:(Ljava/nio/channels/FileChannel;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L236d20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L236d26.  v0.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` := v1 @kind object;
  #L236d2a.  return @kind void;
}
procedure `void` `read`(`okhttp3.internal.cache2.FileOperator` v9 @kind this, `long` v10 , `okio.Buffer` v12 @kind object, `long` v13 ) @signature `Lokhttp3/internal/cache2/FileOperator;.read:(JLokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L236d3c.  v0:= 0L;
  #L236d40.  v2:= lcmp(v13, v0);
  #L236d44.  if v2 < 0 then goto L236d6a;
  #L236d48.  v2:= lcmp(v13, v0);
  #L236d4c.  if v2 <= 0 then goto L236d68;
  #L236d50.  v3:= v9.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` @kind object;
  #L236d54.  v4:= v10 @kind wide;
  #L236d56.  v6:= v13 @kind wide;
  #L236d58.  v8:= v12 @kind object;
  #L236d5a.  call temp:= `transferTo`(v3, v4, v6, v8) @signature `Ljava/nio/channels/FileChannel;.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J` @kind virtual;
  #L236d60.  v2:= temp @kind wide;
  #L236d62.  v10:= v10 + v2 @kind long;
  #L236d64.  v13:= v13 - v2 @kind long;
  #L236d66.  goto L236d48;
  #L236d68.  return @kind void;
  #L236d6a.  v10:= new `java.lang.IndexOutOfBoundsException`;
  #L236d6e.  call `<init>`(v10) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L236d74.  throw v10;
  #L236d76.  return @kind void;
}
procedure `void` `write`(`okhttp3.internal.cache2.FileOperator` v13 @kind this, `long` v14 , `okio.Buffer` v16 @kind object, `long` v17 ) @signature `Lokhttp3/internal/cache2/FileOperator;.write:(JLokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L236d88.  v0:= 0L;
  #L236d8c.  v2:= lcmp(v17, v0);
  #L236d90.  if v2 < 0 then goto L236dd2;
  #L236d94.  call temp:= `size`(v16) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L236d9a.  v2:= temp @kind wide;
  #L236d9c.  v4:= lcmp(v17, v2);
  #L236da0.  if v4 > 0 then goto L236dd2;
  #L236da4.  v11:= v14 @kind wide;
  #L236da6.  v2:= v17 @kind wide;
  #L236daa.  v4:= lcmp(v2, v0);
  #L236dae.  if v4 <= 0 then goto L236dce;
  #L236db2.  v4:= v13 @kind object;
  #L236db4.  v5:= v4.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` @kind object;
  #L236db8.  v6:= v16 @kind object;
  #L236dbc.  v7:= v11 @kind wide;
  #L236dbe.  v9:= v2 @kind wide;
  #L236dc0.  call temp:= `transferFrom`(v5, v6, v7, v9) @signature `Ljava/nio/channels/FileChannel;.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J` @kind virtual;
  #L236dc6.  v5:= temp @kind wide;
  #L236dc8.  v11:= v11 + v5 @kind long;
  #L236dca.  v2:= v2 - v5 @kind long;
  #L236dcc.  goto L236daa;
  #L236dce.  v4:= v13 @kind object;
  #L236dd0.  return @kind void;
  #L236dd2.  v4:= v13 @kind object;
  #L236dd4.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L236dd8.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L236dde.  throw v0;
  #L236de0.  return @kind void;
}
