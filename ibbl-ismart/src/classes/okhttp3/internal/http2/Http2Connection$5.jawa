record `okhttp3.internal.http2.Http2Connection$5` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$5.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.Buffer` `okhttp3.internal.http2.Http2Connection$5.val$buffer` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$5.val$byteCount` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$5.val$inFinished` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$5.val$streamId` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$5` v0 @kind this, `okhttp3.internal.http2.Http2Connection` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `okio.Buffer` v5 @kind object, `int` v6 , `boolean` v7 ) @signature `Lokhttp3/internal/http2/Http2Connection$5;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILokio/Buffer;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L23eba4.  v0.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` := v1 @kind object;
  #L23eba8.  v0.`okhttp3.internal.http2.Http2Connection$5.val$streamId` @type ^`int` := v4;
  #L23ebac.  v0.`okhttp3.internal.http2.Http2Connection$5.val$buffer` @type ^`okio.Buffer` := v5 @kind object;
  #L23ebb0.  v0.`okhttp3.internal.http2.Http2Connection$5.val$byteCount` @type ^`int` := v6;
  #L23ebb4.  v0.`okhttp3.internal.http2.Http2Connection$5.val$inFinished` @type ^`boolean` := v7 @kind boolean;
  #L23ebb8.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L23ebbe.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$5` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$5;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L23ebd0.  v0:= v5.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L23ebd4.  v0:= v0.`okhttp3.internal.http2.Http2Connection.pushObserver` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L23ebd8.  v1:= v5.`okhttp3.internal.http2.Http2Connection$5.val$streamId` @type ^`int`;
  #L23ebdc.  v2:= v5.`okhttp3.internal.http2.Http2Connection$5.val$buffer` @type ^`okio.Buffer` @kind object;
  #L23ebe0.  v3:= v5.`okhttp3.internal.http2.Http2Connection$5.val$byteCount` @type ^`int`;
  #L23ebe4.  v4:= v5.`okhttp3.internal.http2.Http2Connection$5.val$inFinished` @type ^`boolean` @kind boolean;
  #L23ebe8.  call temp:= `onData`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/PushObserver;.onData:(ILokio/BufferedSource;IZ)Z` @kind interface;
  #L23ebee.  v0:= temp;
  #L23ebf0.  if v0 == 0 then goto L23ec0a;
  #L23ebf4.  v1:= v5.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L23ebf8.  v1:= v1.`okhttp3.internal.http2.Http2Connection.writer` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L23ebfc.  v2:= v5.`okhttp3.internal.http2.Http2Connection$5.val$streamId` @type ^`int`;
  #L23ec00.  v3:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L23ec04.  call `rstStream`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L23ec0a.  if v0 != 0 then goto L23ec16;
  #L23ec0e.  v0:= v5.`okhttp3.internal.http2.Http2Connection$5.val$inFinished` @type ^`boolean` @kind boolean;
  #L23ec12.  if v0 == 0 then goto L23ec40;
  #L23ec16.  v0:= v5.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L23ec1a.  @monitorenter v0
  #L23ec1c.  v1:= v5.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L23ec20.  v1:= v1.`okhttp3.internal.http2.Http2Connection.currentPushRequests` @type ^`java.util.Set` @kind object;
  #L23ec24.  v2:= v5.`okhttp3.internal.http2.Http2Connection$5.val$streamId` @type ^`int`;
  #L23ec28.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L23ec2e.  v2:= temp @kind object;
  #L23ec30.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L23ec36.  @monitorexit v0
  #L23ec38.  goto L23ec40;
  #L23ec3a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23ec3c.  @monitorexit v0
  #L23ec3e.  throw v1;
  #L23ec40.  return @kind void;
  catch `java.io.IOException` @[L23ebd0..L23ec1c] goto L23ec40;
  catch `java.lang.Throwable` @[L23ec1c..L23ec3e] goto L23ec3a;
  catch `java.io.IOException` @[L23ec3e..L23ec40] goto L23ec40;
}
