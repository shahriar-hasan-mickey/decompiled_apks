record `okhttp3.internal.http2.Header` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.http2.Header.hpackSize` @AccessFlag FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.name` @AccessFlag PUBLIC_FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.value` @AccessFlag PUBLIC_FINAL;
}
global `okio.ByteString` `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_METHOD` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_PATH` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Header;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L23ce74.  v0:= ":" @kind object;
  #L23ce78.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L23ce7e.  v0:= temp @kind object;
  #L23ce80.  `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @type ^`okio.ByteString` := v0 @kind object;
  #L23ce84.  v0:= ":status" @kind object;
  #L23ce88.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L23ce8e.  v0:= temp @kind object;
  #L23ce90.  `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @type ^`okio.ByteString` := v0 @kind object;
  #L23ce94.  v0:= ":method" @kind object;
  #L23ce98.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L23ce9e.  v0:= temp @kind object;
  #L23cea0.  `@@okhttp3.internal.http2.Header.TARGET_METHOD` @type ^`okio.ByteString` := v0 @kind object;
  #L23cea4.  v0:= ":path" @kind object;
  #L23cea8.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L23ceae.  v0:= temp @kind object;
  #L23ceb0.  `@@okhttp3.internal.http2.Header.TARGET_PATH` @type ^`okio.ByteString` := v0 @kind object;
  #L23ceb4.  v0:= ":scheme" @kind object;
  #L23ceb8.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L23cebe.  v0:= temp @kind object;
  #L23cec0.  `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @type ^`okio.ByteString` := v0 @kind object;
  #L23cec4.  v0:= ":authority" @kind object;
  #L23cec8.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L23cece.  v0:= temp @kind object;
  #L23ced0.  `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` := v0 @kind object;
  #L23ced4.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L23cee8.  call temp:= `encodeUtf8`(v1) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L23ceee.  v1:= temp @kind object;
  #L23cef0.  call temp:= `encodeUtf8`(v2) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L23cef6.  v2:= temp @kind object;
  #L23cef8.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L23cefe.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v0 @kind this, `okio.ByteString` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L23cf10.  call temp:= `encodeUtf8`(v2) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L23cf16.  v2:= temp @kind object;
  #L23cf18.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L23cf1e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v0 @kind this, `okio.ByteString` v1 @kind object, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L23cf30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23cf36.  v0.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` := v1 @kind object;
  #L23cf3a.  v0.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` := v2 @kind object;
  #L23cf3e.  call temp:= `size`(v1) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L23cf44.  v1:= temp;
  #L23cf46.  v1:= v1 + 32;
  #L23cf4a.  call temp:= `size`(v2) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L23cf50.  v2:= temp;
  #L23cf52.  v1:= v1 + v2 @kind int;
  #L23cf54.  v0.`okhttp3.internal.http2.Header.hpackSize` @type ^`int` := v1;
  #L23cf58.  return @kind void;
}
procedure `boolean` `equals`(`okhttp3.internal.http2.Header` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/http2/Header;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L23cda8.  v0:= instanceof @variable v4 @type ^`okhttp3.internal.http2.Header` @kind boolean;
  #L23cdac.  v1:= 0I;
  #L23cdae.  if v0 == 0 then goto L23cde2;
  #L23cdb2.  v4:= (`okhttp3.internal.http2.Header`) v4 @kind object;
  #L23cdb6.  v0:= v3.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L23cdba.  v2:= v4.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L23cdbe.  call temp:= `equals`(v0, v2) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23cdc4.  v0:= temp;
  #L23cdc6.  if v0 == 0 then goto L23cde0;
  #L23cdca.  v0:= v3.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L23cdce.  v4:= v4.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L23cdd2.  call temp:= `equals`(v0, v4) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23cdd8.  v4:= temp;
  #L23cdda.  if v4 == 0 then goto L23cde0;
  #L23cdde.  v1:= 1I;
  #L23cde0.  return v1;
  #L23cde2.  return v1;
}
procedure `int` `hashCode`(`okhttp3.internal.http2.Header` v2 @kind this) @signature `Lokhttp3/internal/http2/Header;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23cdf4.  v0:= v2.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L23cdf8.  call temp:= `hashCode`(v0) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L23cdfe.  v0:= temp;
  #L23ce00.  v1:= 527I;
  #L23ce04.  v1:= v1 + v0 @kind int;
  #L23ce06.  v1:= v1 * 31;
  #L23ce0a.  v0:= v2.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L23ce0e.  call temp:= `hashCode`(v0) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L23ce14.  v0:= temp;
  #L23ce16.  v1:= v1 + v0 @kind int;
  #L23ce18.  return v1;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.http2.Header` v4 @kind this) @signature `Lokhttp3/internal/http2/Header;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23ce2c.  v0:= "%s: %s" @kind object;
  #L23ce30.  v1:= 2I;
  #L23ce32.  v1:= new `java.lang.Object`[v1];
  #L23ce36.  v2:= v4.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L23ce3a.  call temp:= `utf8`(v2) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L23ce40.  v2:= temp @kind object;
  #L23ce42.  v3:= 0I;
  #L23ce44.  v1[v3]:= v2 @kind object;
  #L23ce48.  v2:= v4.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L23ce4c.  call temp:= `utf8`(v2) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L23ce52.  v2:= temp @kind object;
  #L23ce54.  v3:= 1I;
  #L23ce56.  v1[v3]:= v2 @kind object;
  #L23ce5a.  call temp:= `format`(v0, v1) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L23ce60.  v0:= temp @kind object;
  #L23ce62.  return v0 @kind object;
}
