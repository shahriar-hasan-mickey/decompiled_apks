record `okhttp3.internal.http2.Http2Connection$4` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$4.this$0` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$4.val$inFinished` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `okhttp3.internal.http2.Http2Connection$4.val$requestHeaders` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$4.val$streamId` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$4` v0 @kind this, `okhttp3.internal.http2.Http2Connection` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$4;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L23eadc.  v0.`okhttp3.internal.http2.Http2Connection$4.this$0` @type ^`okhttp3.internal.http2.Http2Connection` := v1 @kind object;
  #L23eae0.  v0.`okhttp3.internal.http2.Http2Connection$4.val$streamId` @type ^`int` := v4;
  #L23eae4.  v0.`okhttp3.internal.http2.Http2Connection$4.val$requestHeaders` @type ^`java.util.List` := v5 @kind object;
  #L23eae8.  v0.`okhttp3.internal.http2.Http2Connection$4.val$inFinished` @type ^`boolean` := v6 @kind boolean;
  #L23eaec.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L23eaf2.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$4` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$4;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23eb04.  v0:= v4.`okhttp3.internal.http2.Http2Connection$4.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L23eb08.  v0:= v0.`okhttp3.internal.http2.Http2Connection.pushObserver` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L23eb0c.  v1:= v4.`okhttp3.internal.http2.Http2Connection$4.val$streamId` @type ^`int`;
  #L23eb10.  v2:= v4.`okhttp3.internal.http2.Http2Connection$4.val$requestHeaders` @type ^`java.util.List` @kind object;
  #L23eb14.  v3:= v4.`okhttp3.internal.http2.Http2Connection$4.val$inFinished` @type ^`boolean` @kind boolean;
  #L23eb18.  call temp:= `onHeaders`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/PushObserver;.onHeaders:(ILjava/util/List;Z)Z` @kind interface;
  #L23eb1e.  v0:= temp;
  #L23eb20.  if v0 == 0 then goto L23eb3a;
  #L23eb24.  v1:= v4.`okhttp3.internal.http2.Http2Connection$4.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L23eb28.  v1:= v1.`okhttp3.internal.http2.Http2Connection.writer` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L23eb2c.  v2:= v4.`okhttp3.internal.http2.Http2Connection$4.val$streamId` @type ^`int`;
  #L23eb30.  v3:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L23eb34.  call `rstStream`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L23eb3a.  if v0 != 0 then goto L23eb46;
  #L23eb3e.  v0:= v4.`okhttp3.internal.http2.Http2Connection$4.val$inFinished` @type ^`boolean` @kind boolean;
  #L23eb42.  if v0 == 0 then goto L23eb70;
  #L23eb46.  v0:= v4.`okhttp3.internal.http2.Http2Connection$4.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L23eb4a.  @monitorenter v0
  #L23eb4c.  v1:= v4.`okhttp3.internal.http2.Http2Connection$4.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L23eb50.  v1:= v1.`okhttp3.internal.http2.Http2Connection.currentPushRequests` @type ^`java.util.Set` @kind object;
  #L23eb54.  v2:= v4.`okhttp3.internal.http2.Http2Connection$4.val$streamId` @type ^`int`;
  #L23eb58.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L23eb5e.  v2:= temp @kind object;
  #L23eb60.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L23eb66.  @monitorexit v0
  #L23eb68.  goto L23eb70;
  #L23eb6a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23eb6c.  @monitorexit v0
  #L23eb6e.  throw v1;
  #L23eb70.  return @kind void;
  catch `java.io.IOException` @[L23eb24..L23eb4c] goto L23eb70;
  catch `java.lang.Throwable` @[L23eb4c..L23eb6e] goto L23eb6a;
  catch `java.io.IOException` @[L23eb6e..L23eb70] goto L23eb70;
}
