record `okhttp3.internal.http2.Http2Connection$Builder` @kind class @AccessFlag PUBLIC {
  `boolean` `okhttp3.internal.http2.Http2Connection$Builder.client` @AccessFlag ;
  `java.lang.String` `okhttp3.internal.http2.Http2Connection$Builder.hostname` @AccessFlag ;
  `okhttp3.internal.http2.Http2Connection$Listener` `okhttp3.internal.http2.Http2Connection$Builder.listener` @AccessFlag ;
  `int` `okhttp3.internal.http2.Http2Connection$Builder.pingIntervalMillis` @AccessFlag ;
  `okhttp3.internal.http2.PushObserver` `okhttp3.internal.http2.Http2Connection$Builder.pushObserver` @AccessFlag ;
  `okio.BufferedSink` `okhttp3.internal.http2.Http2Connection$Builder.sink` @AccessFlag ;
  `java.net.Socket` `okhttp3.internal.http2.Http2Connection$Builder.socket` @AccessFlag ;
  `okio.BufferedSource` `okhttp3.internal.http2.Http2Connection$Builder.source` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this, `boolean` v2 ) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L23edcc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23edd2.  v0:= `@@okhttp3.internal.http2.Http2Connection$Listener.REFUSE_INCOMING_STREAMS` @type ^`okhttp3.internal.http2.Http2Connection$Listener` @kind object;
  #L23edd6.  v1.`okhttp3.internal.http2.Http2Connection$Builder.listener` @type ^`okhttp3.internal.http2.Http2Connection$Listener` := v0 @kind object;
  #L23edda.  v0:= `@@okhttp3.internal.http2.PushObserver.CANCEL` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L23edde.  v1.`okhttp3.internal.http2.Http2Connection$Builder.pushObserver` @type ^`okhttp3.internal.http2.PushObserver` := v0 @kind object;
  #L23ede2.  v1.`okhttp3.internal.http2.Http2Connection$Builder.client` @type ^`boolean` := v2 @kind boolean;
  #L23ede6.  return @kind void;
}
procedure `okhttp3.internal.http2.Http2Connection` `build`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.build:()Lokhttp3/internal/http2/Http2Connection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23ecf4.  v0:= new `okhttp3.internal.http2.Http2Connection`;
  #L23ecf8.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.<init>:(Lokhttp3/internal/http2/Http2Connection$Builder;)V` @kind direct;
  #L23ecfe.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `listener`(`okhttp3.internal.http2.Http2Connection$Builder` v0 @kind this, `okhttp3.internal.http2.Http2Connection$Listener` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.listener:(Lokhttp3/internal/http2/Http2Connection$Listener;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC {
    temp;

  #L23ed10.  v0.`okhttp3.internal.http2.Http2Connection$Builder.listener` @type ^`okhttp3.internal.http2.Http2Connection$Listener` := v1 @kind object;
  #L23ed14.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `pingIntervalMillis`(`okhttp3.internal.http2.Http2Connection$Builder` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.pingIntervalMillis:(I)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC {
    temp;

  #L23ed28.  v0.`okhttp3.internal.http2.Http2Connection$Builder.pingIntervalMillis` @type ^`int` := v1;
  #L23ed2c.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `pushObserver`(`okhttp3.internal.http2.Http2Connection$Builder` v0 @kind this, `okhttp3.internal.http2.PushObserver` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.pushObserver:(Lokhttp3/internal/http2/PushObserver;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC {
    temp;

  #L23ed40.  v0.`okhttp3.internal.http2.Http2Connection$Builder.pushObserver` @type ^`okhttp3.internal.http2.PushObserver` := v1 @kind object;
  #L23ed44.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `socket`(`okhttp3.internal.http2.Http2Connection$Builder` v3 @kind this, `java.net.Socket` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L23ed58.  call temp:= `getRemoteSocketAddress`(v4) @signature `Ljava/net/Socket;.getRemoteSocketAddress:()Ljava/net/SocketAddress;` @kind virtual;
  #L23ed5e.  v0:= temp @kind object;
  #L23ed60.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L23ed64.  call temp:= `getHostName`(v0) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L23ed6a.  v0:= temp @kind object;
  #L23ed6c.  call temp:= `source`(v4) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @kind static;
  #L23ed72.  v1:= temp @kind object;
  #L23ed74.  call temp:= `buffer`(v1) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L23ed7a.  v1:= temp @kind object;
  #L23ed7c.  call temp:= `sink`(v4) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @kind static;
  #L23ed82.  v2:= temp @kind object;
  #L23ed84.  call temp:= `buffer`(v2) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L23ed8a.  v2:= temp @kind object;
  #L23ed8c.  call temp:= `socket`(v3, v4, v0, v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L23ed92.  v4:= temp @kind object;
  #L23ed94.  return v4 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `socket`(`okhttp3.internal.http2.Http2Connection$Builder` v0 @kind this, `java.net.Socket` v1 @kind object, `java.lang.String` v2 @kind object, `okio.BufferedSource` v3 @kind object, `okio.BufferedSink` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC {
    temp;

  #L23eda8.  v0.`okhttp3.internal.http2.Http2Connection$Builder.socket` @type ^`java.net.Socket` := v1 @kind object;
  #L23edac.  v0.`okhttp3.internal.http2.Http2Connection$Builder.hostname` @type ^`java.lang.String` := v2 @kind object;
  #L23edb0.  v0.`okhttp3.internal.http2.Http2Connection$Builder.source` @type ^`okio.BufferedSource` := v3 @kind object;
  #L23edb4.  v0.`okhttp3.internal.http2.Http2Connection$Builder.sink` @type ^`okio.BufferedSink` := v4 @kind object;
  #L23edb8.  return v0 @kind object;
}
