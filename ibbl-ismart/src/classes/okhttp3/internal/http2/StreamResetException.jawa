record `okhttp3.internal.http2.StreamResetException` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.IOException` @kind class {
  `okhttp3.internal.http2.ErrorCode` `okhttp3.internal.http2.StreamResetException.errorCode` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http2.StreamResetException` v2 @kind this, `okhttp3.internal.http2.ErrorCode` v3 @kind object) @signature `Lokhttp3/internal/http2/StreamResetException;.<init>:(Lokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2437a0.  v0:= new `java.lang.StringBuilder`;
  #L2437a4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2437aa.  v1:= "stream was reset: " @kind object;
  #L2437ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2437b4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2437ba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2437c0.  v0:= temp @kind object;
  #L2437c2.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2437c8.  v2.`okhttp3.internal.http2.StreamResetException.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` := v3 @kind object;
  #L2437cc.  return @kind void;
}
