record `okhttp3.internal.http2.Http2Stream$FramingSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.closed` @AccessFlag ;
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.finished` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Http2Stream` `okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `boolean` `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `long` `@@okhttp3.internal.http2.Http2Stream$FramingSink.EMIT_BUFFER_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L240f8c.  v0:= constclass @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L240f90.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Stream$FramingSink` v0 @kind this, `okhttp3.internal.http2.Http2Stream` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<init>:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L240fa4.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` := v1 @kind object;
  #L240fa8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L240fae.  v1:= new `okio.Buffer`;
  #L240fb2.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L240fb8.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` := v1 @kind object;
  #L240fbc.  return @kind void;
}
procedure `void` `emitFrame`(`okhttp3.internal.http2.Http2Stream$FramingSink` v11 @kind this, `boolean` v12 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2410b4.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2410b8.  @monitorenter v0
  #L2410ba.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2410be.  v1:= v1.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2410c2.  call `enter`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.enter:()V` @kind virtual;
  #L2410c8.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2410cc.  v1:= v1.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L2410d0.  v3:= 0L;
  #L2410d4.  v5:= lcmp(v1, v3);
  #L2410d8.  if v5 > 0 then goto L241104;
  #L2410dc.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.finished` @type ^`boolean` @kind boolean;
  #L2410e0.  if v1 != 0 then goto L241104;
  #L2410e4.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` @kind boolean;
  #L2410e8.  if v1 != 0 then goto L241104;
  #L2410ec.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2410f0.  v1:= v1.`okhttp3.internal.http2.Http2Stream.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2410f4.  if v1 != 0 then goto L241104;
  #L2410f8.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2410fc.  call `waitForIo`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.waitForIo:()V` @kind virtual;
  #L241102.  goto L2410c8;
  #L241104.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L241108.  v1:= v1.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L24110c.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L241112.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L241116.  call `checkOutNotClosed`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.checkOutNotClosed:()V` @kind virtual;
  #L24111c.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L241120.  v1:= v1.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L241124.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L241128.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L24112e.  v3:= temp @kind wide;
  #L241130.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L241136.  v9:= temp @kind wide;
  #L241138.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L24113c.  v2:= v1.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L241140.  v2:= v2 - v9 @kind long;
  #L241142.  v1.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` := v2 @kind wide;
  #L241146.  @monitorexit v0
  #L241148.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L24114c.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L241150.  call `enter`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.enter:()V` @kind virtual;
  #L241156.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L24115a.  v5:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L24115e.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L241162.  v6:= v0.`okhttp3.internal.http2.Http2Stream.id` @type ^`int`;
  #L241166.  if v12 == 0 then goto L241184;
  #L24116a.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L24116e.  call temp:= `size`(v12) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L241174.  v0:= temp @kind wide;
  #L241176.  v12:= lcmp(v9, v0);
  #L24117a.  if v12 != 0 then goto L241184;
  #L24117e.  v12:= 1I;
  #L241180.  v7:= 1I;
  #L241182.  goto L241188;
  #L241184.  v12:= 0I;
  #L241186.  v7:= 0I;
  #L241188.  v8:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L24118c.  call `writeData`(v5, v6, v7, v8, v9) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #L241192.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L241196.  v12:= v12.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L24119a.  call `exitAndThrowIfTimedOut`(v12) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L2411a0.  return @kind void;
  #L2411a2.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2411a4.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2411a8.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2411ac.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L2411b2.  throw v12;
  #L2411b4.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2411b6.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2411ba.  v1:= v1.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2411be.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L2411c4.  throw v12;
  #L2411c6.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2411c8.  @monitorexit v0
  #L2411ca.  throw v12;
  #L2411cc.  return @kind void;
  catch `java.lang.Throwable` @[L2410ba..L2410c8] goto L2411c6;
  catch `java.lang.Throwable` @[L2410c8..L241102] goto L2411b4;
  catch `java.lang.Throwable` @[L241104..L241148] goto L2411c6;
  catch `java.lang.Throwable` @[L241156..L241192] goto L2411a2;
  catch `java.lang.Throwable` @[L2411b6..L2411ca] goto L2411c6;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Stream$FramingSink` v8 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L240fd0.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L240fd4.  @monitorenter v0
  #L240fd6.  v1:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` @kind boolean;
  #L240fda.  if v1 == 0 then goto L240fe2;
  #L240fde.  @monitorexit v0
  #L240fe0.  return @kind void;
  #L240fe2.  @monitorexit v0
  #L240fe4.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L240fe8.  v0:= v0.`okhttp3.internal.http2.Http2Stream.sink` @type ^`okhttp3.internal.http2.Http2Stream$FramingSink` @kind object;
  #L240fec.  v0:= v0.`okhttp3.internal.http2.Http2Stream$FramingSink.finished` @type ^`boolean` @kind boolean;
  #L240ff0.  v1:= 1I;
  #L240ff2.  if v0 != 0 then goto L241048;
  #L240ff6.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L240ffa.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L241000.  v2:= temp @kind wide;
  #L241002.  v4:= 0L;
  #L241006.  v0:= lcmp(v2, v4);
  #L24100a.  if v0 <= 0 then goto L24102a;
  #L24100e.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L241012.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L241018.  v2:= temp @kind wide;
  #L24101a.  v0:= lcmp(v2, v4);
  #L24101e.  if v0 <= 0 then goto L241048;
  #L241022.  call `emitFrame`(v8, v1) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L241028.  goto L24100e;
  #L24102a.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L24102e.  v2:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L241032.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L241036.  v3:= v0.`okhttp3.internal.http2.Http2Stream.id` @type ^`int`;
  #L24103a.  v4:= 1I;
  #L24103c.  v5:= 0I;
  #L24103e.  v6:= 0L;
  #L241042.  call `writeData`(v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #L241048.  v2:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L24104c.  @monitorenter v2
  #L24104e.  v8.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` := v1 @kind boolean;
  #L241052.  @monitorexit v2
  #L241054.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L241058.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L24105c.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L241062.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L241066.  call `cancelStreamIfNecessary`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.cancelStreamIfNecessary:()V` @kind virtual;
  #L24106c.  return @kind void;
  #L24106e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L241070.  @monitorexit v2
  #L241072.  throw v0;
  #L241074.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L241076.  @monitorexit v0
  #L241078.  throw v1;
  #L24107a.  return @kind void;
  catch `java.lang.Throwable` @[L240fd6..L240fe4] goto L241074;
  catch `java.lang.Throwable` @[L24104e..L241054] goto L24106e;
  catch `java.lang.Throwable` @[L241070..L241072] goto L24106e;
  catch `java.lang.Throwable` @[L241076..L241078] goto L241074;
}
procedure `void` `flush`(`okhttp3.internal.http2.Http2Stream$FramingSink` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L241214.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L241218.  @monitorenter v0
  #L24121a.  v1:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L24121e.  call `checkOutNotClosed`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.checkOutNotClosed:()V` @kind virtual;
  #L241224.  @monitorexit v0
  #L241226.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L24122a.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L241230.  v0:= temp @kind wide;
  #L241232.  v2:= 0L;
  #L241236.  v4:= lcmp(v0, v2);
  #L24123a.  if v4 <= 0 then goto L241256;
  #L24123e.  v0:= 0I;
  #L241240.  call `emitFrame`(v5, v0) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L241246.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L24124a.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L24124e.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L241254.  goto L241226;
  #L241256.  return @kind void;
  #L241258.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24125a.  @monitorexit v0
  #L24125c.  throw v1;
  #L24125e.  return @kind void;
  catch `java.lang.Throwable` @[L24121a..L241226] goto L241258;
  catch `java.lang.Throwable` @[L24125a..L24125c] goto L241258;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http2.Http2Stream$FramingSink` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L240f70.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L240f74.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L240f78.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http2.Http2Stream$FramingSink` v2 @kind this, `okio.Buffer` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L241284.  v0:= v2.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L241288.  call `write`(v0, v3, v4) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L24128e.  v3:= v2.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L241292.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L241298.  v3:= temp @kind wide;
  #L24129a.  v0:= 16384L;
  #L24129e.  v5:= lcmp(v3, v0);
  #L2412a2.  if v5 < 0 then goto L2412b0;
  #L2412a6.  v3:= 0I;
  #L2412a8.  call `emitFrame`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L2412ae.  goto L24128e;
  #L2412b0.  return @kind void;
}
