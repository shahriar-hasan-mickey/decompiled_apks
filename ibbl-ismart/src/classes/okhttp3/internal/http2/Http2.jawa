record `okhttp3.internal.http2.Http2` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.BINARY` @AccessFlag STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.FLAGS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_ACK` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_COMPRESSED` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_HEADERS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_PUSH_PROMISE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_STREAM` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_NONE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_PADDED` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_PRIORITY` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.INITIAL_MAX_FRAME_SIZE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_CONTINUATION` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_DATA` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_GOAWAY` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_HEADERS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PING` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PRIORITY` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PUSH_PROMISE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_RST_STREAM` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_SETTINGS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_WINDOW_UPDATE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L242a10.  v0:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L242a14.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L242a1a.  v0:= temp @kind object;
  #L242a1c.  `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @type ^`okio.ByteString` := v0 @kind object;
  #L242a20.  v1:= "DATA" @kind object;
  #L242a24.  v2:= "HEADERS" @kind object;
  #L242a28.  v3:= "PRIORITY" @kind object;
  #L242a2c.  v4:= "RST_STREAM" @kind object;
  #L242a30.  v5:= "SETTINGS" @kind object;
  #L242a34.  v6:= "PUSH_PROMISE" @kind object;
  #L242a38.  v7:= "PING" @kind object;
  #L242a3c.  v8:= "GOAWAY" @kind object;
  #L242a40.  v9:= "WINDOW_UPDATE" @kind object;
  #L242a44.  v10:= "CONTINUATION" @kind object;
  #L242a48.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8, v9, v10];
  #L242a4e.  v0:= temp @kind object;
  #L242a50.  `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] := v0 @kind object;
  #L242a54.  v0:= 64I;
  #L242a58.  v0:= new `java.lang.String`[v0];
  #L242a5c.  `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] := v0 @kind object;
  #L242a60.  v0:= 256I;
  #L242a64.  v0:= new `java.lang.String`[v0];
  #L242a68.  `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] := v0 @kind object;
  #L242a6c.  v0:= 0I;
  #L242a6e.  v1:= 0I;
  #L242a70.  v2:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L242a74.  v3:= length @variable v2;
  #L242a76.  v4:= 32I;
  #L242a7a.  v5:= 1I;
  #L242a7c.  if v1 >= v3 then goto L242ab2;
  #L242a80.  v3:= "%8s" @kind object;
  #L242a84.  v5:= new `java.lang.Object`[v5];
  #L242a88.  call temp:= `toBinaryString`(v1) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L242a8e.  v6:= temp @kind object;
  #L242a90.  v5[v0]:= v6 @kind object;
  #L242a94.  call temp:= `format`(v3, v5) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L242a9a.  v3:= temp @kind object;
  #L242a9c.  v5:= 48I;
  #L242aa0.  call temp:= `replace`(v3, v4, v5) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L242aa6.  v3:= temp @kind object;
  #L242aa8.  v2[v1]:= v3 @kind object;
  #L242aac.  v1:= v1 + 1;
  #L242ab0.  goto L242a70;
  #L242ab2.  v1:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L242ab6.  v2:= "" @kind object;
  #L242aba.  v1[v0]:= v2 @kind object;
  #L242abe.  v2:= "END_STREAM" @kind object;
  #L242ac2.  v1[v5]:= v2 @kind object;
  #L242ac6.  v2:= new `int`[v5];
  #L242aca.  v2[v0]:= v5;
  #L242ace.  v3:= "PADDED" @kind object;
  #L242ad2.  v5:= 8I;
  #L242ad6.  v1[v5]:= v3 @kind object;
  #L242ada.  v1:= length @variable v2;
  #L242adc.  v3:= 0I;
  #L242ade.  if v3 >= v1 then goto L242b22;
  #L242ae2.  v6:= v2[v3];
  #L242ae6.  v7:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L242aea.  v8:= v6 ^| 8;
  #L242aee.  v9:= new `java.lang.StringBuilder`;
  #L242af2.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L242af8.  v10:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L242afc.  v6:= v10[v6] @kind object;
  #L242b00.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L242b06.  v6:= "|PADDED" @kind object;
  #L242b0a.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L242b10.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L242b16.  v6:= temp @kind object;
  #L242b18.  v7[v8]:= v6 @kind object;
  #L242b1c.  v3:= v3 + 1;
  #L242b20.  goto L242ade;
  #L242b22.  v1:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L242b26.  v3:= 4I;
  #L242b28.  v6:= "END_HEADERS" @kind object;
  #L242b2c.  v1[v3]:= v6 @kind object;
  #L242b30.  v3:= "PRIORITY" @kind object;
  #L242b34.  v1[v4]:= v3 @kind object;
  #L242b38.  v3:= 36I;
  #L242b3c.  v4:= "END_HEADERS|PRIORITY" @kind object;
  #L242b40.  v1[v3]:= v4 @kind object;
  #L242b44.  v1:= 3I;
  #L242b46.  v1:= new `int`[v1];
  #L242b4a.  goto L242c28;
  #L242b50.  v3:= length @variable v1;
  #L242b52.  v4:= 0I;
  #L242b54.  if v4 >= v3 then goto L242c00;
  #L242b58.  v6:= v1[v4];
  #L242b5c.  v7:= length @variable v2;
  #L242b5e.  v8:= 0I;
  #L242b60.  if v8 >= v7 then goto L242bfa;
  #L242b64.  v9:= v2[v8];
  #L242b68.  v10:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L242b6c.  v11:= v9 ^| v6 @kind int;
  #L242b70.  v12:= new `java.lang.StringBuilder`;
  #L242b74.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L242b7a.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L242b7e.  v13:= v13[v9] @kind object;
  #L242b82.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L242b88.  v13:= 124I;
  #L242b8c.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L242b92.  v14:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L242b96.  v14:= v14[v6] @kind object;
  #L242b9a.  call temp:= `append`(v12, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L242ba0.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L242ba6.  v12:= temp @kind object;
  #L242ba8.  v10[v11]:= v12 @kind object;
  #L242bac.  v10:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L242bb0.  v11:= v11 ^| v5 @kind int;
  #L242bb2.  v12:= new `java.lang.StringBuilder`;
  #L242bb6.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L242bbc.  v14:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L242bc0.  v9:= v14[v9] @kind object;
  #L242bc4.  call temp:= `append`(v12, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L242bca.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L242bd0.  v9:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L242bd4.  v9:= v9[v6] @kind object;
  #L242bd8.  call temp:= `append`(v12, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L242bde.  v9:= "|PADDED" @kind object;
  #L242be2.  call temp:= `append`(v12, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L242be8.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L242bee.  v9:= temp @kind object;
  #L242bf0.  v10[v11]:= v9 @kind object;
  #L242bf4.  v8:= v8 + 1;
  #L242bf8.  goto L242b60;
  #L242bfa.  v4:= v4 + 1;
  #L242bfe.  goto L242b54;
  #L242c00.  v1:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L242c04.  v2:= length @variable v1;
  #L242c06.  if v0 >= v2 then goto L242c24;
  #L242c0a.  v2:= v1[v0] @kind object;
  #L242c0e.  if v2 != 0 then goto L242c1e;
  #L242c12.  v2:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L242c16.  v2:= v2[v0] @kind object;
  #L242c1a.  v1[v0]:= v2 @kind object;
  #L242c1e.  v0:= v0 + 1;
  #L242c22.  goto L242c00;
  #L242c24.  return @kind void;
  #L242c26.  
  #L242c28.  v1:= (4I, 32I, 36I) @kind object;
  #L242c3b.  goto L242b50;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L242c4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L242c52.  return @kind void;
}
procedure `java.lang.String` `formatFlags`(`byte` v2 , `byte` v3 ) @signature `Lokhttp3/internal/http2/Http2;.formatFlags:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2428c0.  if v3 != 0 then goto L2428ca;
  #L2428c4.  v2:= "" @kind object;
  #L2428c8.  return v2 @kind object;
  #L2428ca.  goto L242948;
  #L2428d0.  v0:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L2428d4.  v1:= length @variable v0;
  #L2428d6.  if v3 >= v1 then goto L242900;
  #L2428da.  v0:= v0[v3] @kind object;
  #L2428de.  goto L242908;
  #L2428e0.  v2:= 1I;
  #L2428e2.  if v3 != v2 then goto L2428ec;
  #L2428e6.  v2:= "ACK" @kind object;
  #L2428ea.  goto L2428f4;
  #L2428ec.  v2:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L2428f0.  v2:= v2[v3] @kind object;
  #L2428f4.  return v2 @kind object;
  #L2428f6.  v2:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L2428fa.  v2:= v2[v3] @kind object;
  #L2428fe.  return v2 @kind object;
  #L242900.  v0:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L242904.  v0:= v0[v3] @kind object;
  #L242908.  v1:= 5I;
  #L24290a.  if v2 != v1 then goto L242928;
  #L24290e.  v1:= v3 ^& 4;
  #L242912.  if v1 == 0 then goto L242928;
  #L242916.  v2:= "HEADERS" @kind object;
  #L24291a.  v3:= "PUSH_PROMISE" @kind object;
  #L24291e.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L242924.  v2:= temp @kind object;
  #L242926.  return v2 @kind object;
  #L242928.  if v2 != 0 then goto L242946;
  #L24292c.  v2:= v3 ^& 32;
  #L242930.  if v2 == 0 then goto L242946;
  #L242934.  v2:= "PRIORITY" @kind object;
  #L242938.  v3:= "COMPRESSED" @kind object;
  #L24293c.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L242942.  v2:= temp @kind object;
  #L242944.  return v2 @kind object;
  #L242946.  return v0 @kind object;
  #L242948.  switch v2
                  | 2 => goto L2428f6
                  | 3 => goto L2428f6
                  | 4 => goto L2428e0
                  | 5 => goto L2428d0
                  | 6 => goto L2428e0
                  | 7 => goto L2428f6
                  | 8 => goto L2428f6
                  | else => goto L2428d0;
}
procedure `java.lang.String` `frameLog`(`boolean` v5 , `int` v6 , `int` v7 , `byte` v8 , `byte` v9 ) @signature `Lokhttp3/internal/http2/Http2;.frameLog:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L24297c.  v0:= `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] @kind object;
  #L242980.  v1:= length @variable v0;
  #L242982.  v2:= 0I;
  #L242984.  v3:= 1I;
  #L242986.  if v8 >= v1 then goto L242990;
  #L24298a.  v0:= v0[v8] @kind object;
  #L24298e.  goto L2429ac;
  #L242990.  v0:= "0x%02x" @kind object;
  #L242994.  v1:= new `java.lang.Object`[v3];
  #L242998.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L24299e.  v4:= temp @kind object;
  #L2429a0.  v1[v2]:= v4 @kind object;
  #L2429a4.  call temp:= `format`(v0, v1) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2429aa.  v0:= temp @kind object;
  #L2429ac.  call temp:= `formatFlags`(v8, v9) @signature `Lokhttp3/internal/http2/Http2;.formatFlags:(BB)Ljava/lang/String;` @kind static;
  #L2429b2.  v8:= temp @kind object;
  #L2429b4.  v9:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L2429b8.  v1:= 5I;
  #L2429ba.  v1:= new `java.lang.Object`[v1];
  #L2429be.  if v5 == 0 then goto L2429c8;
  #L2429c2.  v5:= "<<" @kind object;
  #L2429c6.  goto L2429cc;
  #L2429c8.  v5:= ">>" @kind object;
  #L2429cc.  v1[v2]:= v5 @kind object;
  #L2429d0.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2429d6.  v5:= temp @kind object;
  #L2429d8.  v1[v3]:= v5 @kind object;
  #L2429dc.  v5:= 2I;
  #L2429de.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2429e4.  v6:= temp @kind object;
  #L2429e6.  v1[v5]:= v6 @kind object;
  #L2429ea.  v5:= 3I;
  #L2429ec.  v1[v5]:= v0 @kind object;
  #L2429f0.  v5:= 4I;
  #L2429f2.  v1[v5]:= v8 @kind object;
  #L2429f6.  call temp:= `format`(v9, v1) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2429fc.  v5:= temp @kind object;
  #L2429fe.  return v5 @kind object;
}
procedure `java.lang.IllegalArgumentException` `illegalArgument`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lokhttp3/internal/http2/Http2;.illegalArgument:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {
    temp;
    v0;

  #L24289c.  v0:= new `java.lang.IllegalArgumentException`;
  #L2428a0.  call temp:= `format`(v1, v2) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2428a6.  v1:= temp @kind object;
  #L2428a8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2428ae.  throw v0;
}
procedure `java.io.IOException` `ioException`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lokhttp3/internal/http2/Http2;.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC {
    temp;
    v0;

  #L242878.  v0:= new `java.io.IOException`;
  #L24287c.  call temp:= `format`(v1, v2) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L242882.  v1:= temp @kind object;
  #L242884.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24288a.  throw v0;
}
