record `okhttp3.internal.http2.Http2Codec$StreamFinishingSource` @kind class @AccessFlag  extends `okio.ForwardingSource` @kind class {
  `long` `okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @AccessFlag ;
  `boolean` `okhttp3.internal.http2.Http2Codec$StreamFinishingSource.completed` @AccessFlag ;
  `okhttp3.internal.http2.Http2Codec` `okhttp3.internal.http2.Http2Codec$StreamFinishingSource.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v0 @kind this, `okhttp3.internal.http2.Http2Codec` v1 @kind object, `okio.Source` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.<init>:(Lokhttp3/internal/http2/Http2Codec;Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L23e340.  v0.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.this$0` @type ^`okhttp3.internal.http2.Http2Codec` := v1 @kind object;
  #L23e344.  call `<init>`(v0, v2) @signature `Lokio/ForwardingSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L23e34a.  v1:= 0I;
  #L23e34c.  v0.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.completed` @type ^`boolean` := v1 @kind boolean;
  #L23e350.  v1:= 0L;
  #L23e354.  v0.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @type ^`long` := v1 @kind wide;
  #L23e358.  return @kind void;
}
procedure `void` `endOfInput`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v7 @kind this, `java.io.IOException` v8 @kind object) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.endOfInput:(Ljava/io/IOException;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L23e38c.  v0:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.completed` @type ^`boolean` @kind boolean;
  #L23e390.  if v0 == 0 then goto L23e396;
  #L23e394.  return @kind void;
  #L23e396.  v0:= 1I;
  #L23e398.  v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.completed` @type ^`boolean` := v0 @kind boolean;
  #L23e39c.  v0:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.this$0` @type ^`okhttp3.internal.http2.Http2Codec` @kind object;
  #L23e3a0.  v1:= v0.`okhttp3.internal.http2.Http2Codec.streamAllocation` @type ^`okhttp3.internal.connection.StreamAllocation` @kind object;
  #L23e3a4.  v2:= 0I;
  #L23e3a6.  v3:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.this$0` @type ^`okhttp3.internal.http2.Http2Codec` @kind object;
  #L23e3aa.  v4:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @type ^`long` @kind wide;
  #L23e3ae.  v6:= v8 @kind object;
  #L23e3b0.  call `streamFinished`(v1, v2, v3, v4, v6) @signature `Lokhttp3/internal/connection/StreamAllocation;.streamFinished:(ZLokhttp3/internal/http/HttpCodec;JLjava/io/IOException;)V` @kind virtual;
  #L23e3b6.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e36c.  call `close`(v1) @signature `Lokio/ForwardingSource;.close:()V` @kind super;
  #L23e372.  v0:= 0I;
  #L23e374.  call `endOfInput`(v1, v0) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.endOfInput:(Ljava/io/IOException;)V` @kind direct;
  #L23e37a.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v2 @kind this, `okio.Buffer` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23e2ec.  call temp:= `delegate`(v2) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.delegate:()Lokio/Source;` @kind virtual;
  #L23e2f2.  v0:= temp @kind object;
  #L23e2f4.  call temp:= `read`(v0, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L23e2fa.  v3:= temp @kind wide;
  #L23e2fc.  v0:= 0L;
  #L23e300.  v5:= lcmp(v3, v0);
  #L23e304.  if v5 <= 0 then goto L23e312;
  #L23e308.  v0:= v2.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @type ^`long` @kind wide;
  #L23e30c.  v0:= v0 + v3 @kind long;
  #L23e30e.  v2.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @type ^`long` := v0 @kind wide;
  #L23e312.  return v3 @kind wide;
  #L23e314.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L23e316.  call `endOfInput`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.endOfInput:(Ljava/io/IOException;)V` @kind direct;
  #L23e31c.  throw v3;
  catch `java.io.IOException` @[L23e2ec..L23e312] goto L23e314;
}
