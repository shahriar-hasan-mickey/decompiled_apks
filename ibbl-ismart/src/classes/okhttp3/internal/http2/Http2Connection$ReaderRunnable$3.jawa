record `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection$ReaderRunnable` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.this$1` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.http2.Settings` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.val$peerSettings` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3` v0 @kind this, `okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `okhttp3.internal.http2.Settings` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$3;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Settings;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L23eff4.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.this$1` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` := v1 @kind object;
  #L23eff8.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.val$peerSettings` @type ^`okhttp3.internal.http2.Settings` := v4 @kind object;
  #L23effc.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L23f002.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$3;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23f014.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.this$1` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind object;
  #L23f018.  v0:= v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L23f01c.  v0:= v0.`okhttp3.internal.http2.Http2Connection.writer` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L23f020.  v1:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.val$peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L23f024.  call `applyAndAckSettings`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Writer;.applyAndAckSettings:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L23f02a.  goto L23f03a;
  #L23f02c.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.this$1` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind object;
  #L23f030.  v0:= v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L23f034.  call `access$000`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$000:(Lokhttp3/internal/http2/Http2Connection;)V` @kind static;
  #L23f03a.  return @kind void;
  catch `java.io.IOException` @[L23f014..L23f02a] goto L23f02c;
}
