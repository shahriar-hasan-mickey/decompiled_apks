record `okhttp3.internal.http2.ErrorCode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `okhttp3.internal.http2.ErrorCode.httpCode` @AccessFlag PUBLIC_FINAL;
}
global `okhttp3.internal.http2.ErrorCode`[] `@@okhttp3.internal.http2.ErrorCode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CANCEL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/ErrorCode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L23cc2c.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L23cc30.  v1:= "NO_ERROR" @kind object;
  #L23cc34.  v2:= 0I;
  #L23cc36.  call `<init>`(v0, v1, v2, v2) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L23cc3c.  `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L23cc40.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L23cc44.  v1:= "PROTOCOL_ERROR" @kind object;
  #L23cc48.  v3:= 1I;
  #L23cc4a.  call `<init>`(v0, v1, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L23cc50.  `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L23cc54.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L23cc58.  v1:= "INTERNAL_ERROR" @kind object;
  #L23cc5c.  v4:= 2I;
  #L23cc5e.  call `<init>`(v0, v1, v4, v4) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L23cc64.  `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L23cc68.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L23cc6c.  v1:= "FLOW_CONTROL_ERROR" @kind object;
  #L23cc70.  v5:= 3I;
  #L23cc72.  call `<init>`(v0, v1, v5, v5) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L23cc78.  `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L23cc7c.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L23cc80.  v1:= "REFUSED_STREAM" @kind object;
  #L23cc84.  v6:= 4I;
  #L23cc86.  v7:= 7I;
  #L23cc88.  call `<init>`(v0, v1, v6, v7) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L23cc8e.  `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L23cc92.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L23cc96.  v1:= "CANCEL" @kind object;
  #L23cc9a.  v8:= 5I;
  #L23cc9c.  v9:= 8I;
  #L23cca0.  call `<init>`(v0, v1, v8, v9) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L23cca6.  `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L23ccaa.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L23ccae.  v1:= "COMPRESSION_ERROR" @kind object;
  #L23ccb2.  v10:= 6I;
  #L23ccb4.  v11:= 9I;
  #L23ccb8.  call `<init>`(v0, v1, v10, v11) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L23ccbe.  `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L23ccc2.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L23ccc6.  v1:= "CONNECT_ERROR" @kind object;
  #L23ccca.  v12:= 10I;
  #L23ccce.  call `<init>`(v0, v1, v7, v12) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L23ccd4.  `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L23ccd8.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L23ccdc.  v1:= "ENHANCE_YOUR_CALM" @kind object;
  #L23cce0.  v13:= 11I;
  #L23cce4.  call `<init>`(v0, v1, v9, v13) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L23ccea.  `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L23ccee.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L23ccf2.  v1:= "INADEQUATE_SECURITY" @kind object;
  #L23ccf6.  v14:= 12I;
  #L23ccfa.  call `<init>`(v0, v1, v11, v14) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L23cd00.  `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L23cd04.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L23cd08.  v1:= "HTTP_1_1_REQUIRED" @kind object;
  #L23cd0c.  v14:= 13I;
  #L23cd10.  call `<init>`(v0, v1, v12, v14) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L23cd16.  `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L23cd1a.  v0:= new `okhttp3.internal.http2.ErrorCode`[v13];
  #L23cd1e.  v1:= `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L23cd22.  v0[v2]:= v1 @kind object;
  #L23cd26.  v1:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L23cd2a.  v0[v3]:= v1 @kind object;
  #L23cd2e.  v1:= `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L23cd32.  v0[v4]:= v1 @kind object;
  #L23cd36.  v1:= `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L23cd3a.  v0[v5]:= v1 @kind object;
  #L23cd3e.  v1:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L23cd42.  v0[v6]:= v1 @kind object;
  #L23cd46.  v1:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L23cd4a.  v0[v8]:= v1 @kind object;
  #L23cd4e.  v1:= `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L23cd52.  v0[v10]:= v1 @kind object;
  #L23cd56.  v1:= `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L23cd5a.  v0[v7]:= v1 @kind object;
  #L23cd5e.  v1:= `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L23cd62.  v0[v9]:= v1 @kind object;
  #L23cd66.  v1:= `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L23cd6a.  v0[v11]:= v1 @kind object;
  #L23cd6e.  v1:= `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L23cd72.  v0[v12]:= v1 @kind object;
  #L23cd76.  `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] := v0 @kind object;
  #L23cd7a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.ErrorCode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L23cd8c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23cd92.  v0.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int` := v3;
  #L23cd96.  return @kind void;
}
procedure `okhttp3.internal.http2.ErrorCode` `fromHttp2`(`int` v5 ) @signature `Lokhttp3/internal/http2/ErrorCode;.fromHttp2:(I)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L23cbac.  call temp:= `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @kind static;
  #L23cbb2.  v0:= temp @kind object;
  #L23cbb4.  v1:= length @variable v0;
  #L23cbb6.  v2:= 0I;
  #L23cbb8.  if v2 >= v1 then goto L23cbd0;
  #L23cbbc.  v3:= v0[v2] @kind object;
  #L23cbc0.  v4:= v3.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int`;
  #L23cbc4.  if v4 != v5 then goto L23cbca;
  #L23cbc8.  return v3 @kind object;
  #L23cbca.  v2:= v2 + 1;
  #L23cbce.  goto L23cbb8;
  #L23cbd0.  v5:= 0I;
  #L23cbd2.  return v5 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http2/ErrorCode;.valueOf:(Ljava/lang/String;)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23cbe4.  v0:= constclass @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L23cbe8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L23cbee.  v1:= temp @kind object;
  #L23cbf0.  v1:= (`okhttp3.internal.http2.ErrorCode`) v1 @kind object;
  #L23cbf4.  return v1 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode`[] `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23cc08.  v0:= `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] @kind object;
  #L23cc0c.  call temp:= `clone`(v0) @signature `[Lokhttp3/internal/http2/ErrorCode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L23cc12.  v0:= temp @kind object;
  #L23cc14.  v0:= (`okhttp3.internal.http2.ErrorCode`[]) v0 @kind object;
  #L23cc18.  return v0 @kind object;
}
