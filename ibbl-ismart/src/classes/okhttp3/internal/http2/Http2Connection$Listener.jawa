record `okhttp3.internal.http2.Http2Connection$Listener` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `okhttp3.internal.http2.Http2Connection$Listener` `@@okhttp3.internal.http2.Http2Connection$Listener.REFUSE_INCOMING_STREAMS` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2Connection$Listener;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L23ee2c.  v0:= new `okhttp3.internal.http2.Http2Connection$Listener$1`;
  #L23ee30.  call `<init>`(v0) @signature `Lokhttp3/internal/http2/Http2Connection$Listener$1;.<init>:()V` @kind direct;
  #L23ee36.  `@@okhttp3.internal.http2.Http2Connection$Listener.REFUSE_INCOMING_STREAMS` @type ^`okhttp3.internal.http2.Http2Connection$Listener` := v0 @kind object;
  #L23ee3a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$Listener` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$Listener;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L23ee4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23ee52.  return @kind void;
}
procedure `void` `onSettings`(`okhttp3.internal.http2.Http2Connection$Listener` v0 @kind this, `okhttp3.internal.http2.Http2Connection` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Listener;.onSettings:(Lokhttp3/internal/http2/Http2Connection;)V` @AccessFlag PUBLIC {
    temp;

  #L23ee64.  return @kind void;
}
procedure `void` `onStream`(`okhttp3.internal.http2.Http2Stream` v0 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Listener;.onStream:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
