record `okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException$1` @kind class @AccessFlag FINAL extends `okhttp3.Interceptor` @kind interface {
}
procedure `void` `<init>`(`okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException$1` v0 @kind this) @signature `Lokhttp3/internal/huc/OkHttpURLConnection$UnexpectedException$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2442dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2442e2.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException$1` v1 @kind this, `okhttp3.Interceptor$Chain` v2 @kind object) @signature `Lokhttp3/internal/huc/OkHttpURLConnection$UnexpectedException$1;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24429c.  call temp:= `request`(v2) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L2442a2.  v0:= temp @kind object;
  #L2442a4.  call temp:= `proceed`(v2, v0) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L2442aa.  v2:= temp @kind object;
  #L2442ac.  return v2 @kind object;
  #L2442ae.  v2:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L2442b0.  v0:= new `okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException`;
  #L2442b4.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/huc/OkHttpURLConnection$UnexpectedException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2442ba.  throw v0;
  catch `java.lang.Error` @[L24429c..L2442ac] goto L2442ae;
  catch `java.lang.RuntimeException` @[L24429c..L2442ac] goto L2442ae;
}
