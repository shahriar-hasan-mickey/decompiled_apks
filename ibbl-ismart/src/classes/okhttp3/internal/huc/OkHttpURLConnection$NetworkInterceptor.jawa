record `okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor` @kind class @AccessFlag FINAL extends `okhttp3.Interceptor` @kind interface {
  `boolean` `okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.proceed` @AccessFlag PRIVATE;
  `okhttp3.internal.huc.OkHttpURLConnection` `okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor` v0 @kind this, `okhttp3.internal.huc.OkHttpURLConnection` v1 @kind object) @signature `Lokhttp3/internal/huc/OkHttpURLConnection$NetworkInterceptor;.<init>:(Lokhttp3/internal/huc/OkHttpURLConnection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L244234.  v0.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @type ^`okhttp3.internal.huc.OkHttpURLConnection` := v1 @kind object;
  #L244238.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24423e.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor` v4 @kind this, `okhttp3.Interceptor$Chain` v5 @kind object) @signature `Lokhttp3/internal/huc/OkHttpURLConnection$NetworkInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2440b8.  call temp:= `request`(v5) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L2440be.  v0:= temp @kind object;
  #L2440c0.  v1:= v4.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @type ^`okhttp3.internal.huc.OkHttpURLConnection` @kind object;
  #L2440c4.  v1:= v1.`okhttp3.internal.huc.OkHttpURLConnection.urlFilter` @type ^`okhttp3.internal.URLFilter` @kind object;
  #L2440c8.  if v1 == 0 then goto L2440ea;
  #L2440cc.  v1:= v4.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @type ^`okhttp3.internal.huc.OkHttpURLConnection` @kind object;
  #L2440d0.  v1:= v1.`okhttp3.internal.huc.OkHttpURLConnection.urlFilter` @type ^`okhttp3.internal.URLFilter` @kind object;
  #L2440d4.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2440da.  v2:= temp @kind object;
  #L2440dc.  call temp:= `url`(v2) @signature `Lokhttp3/HttpUrl;.url:()Ljava/net/URL;` @kind virtual;
  #L2440e2.  v2:= temp @kind object;
  #L2440e4.  call `checkURLPermitted`(v1, v2) @signature `Lokhttp3/internal/URLFilter;.checkURLPermitted:(Ljava/net/URL;)V` @kind interface;
  #L2440ea.  v1:= v4.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @type ^`okhttp3.internal.huc.OkHttpURLConnection` @kind object;
  #L2440ee.  call temp:= `access$000`(v1) @signature `Lokhttp3/internal/huc/OkHttpURLConnection;.access$000:(Lokhttp3/internal/huc/OkHttpURLConnection;)Ljava/lang/Object;` @kind static;
  #L2440f4.  v1:= temp @kind object;
  #L2440f6.  @monitorenter v1
  #L2440f8.  v2:= v4.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @type ^`okhttp3.internal.huc.OkHttpURLConnection` @kind object;
  #L2440fc.  v3:= 0I;
  #L2440fe.  v2.`okhttp3.internal.huc.OkHttpURLConnection.connectPending` @type ^`boolean` := v3 @kind boolean;
  #L244102.  v2:= v4.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @type ^`okhttp3.internal.huc.OkHttpURLConnection` @kind object;
  #L244106.  call temp:= `connection`(v5) @signature `Lokhttp3/Interceptor$Chain;.connection:()Lokhttp3/Connection;` @kind interface;
  #L24410c.  v3:= temp @kind object;
  #L24410e.  call temp:= `route`(v3) @signature `Lokhttp3/Connection;.route:()Lokhttp3/Route;` @kind interface;
  #L244114.  v3:= temp @kind object;
  #L244116.  call temp:= `proxy`(v3) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L24411c.  v3:= temp @kind object;
  #L24411e.  v2.`okhttp3.internal.huc.OkHttpURLConnection.proxy` @type ^`java.net.Proxy` := v3 @kind object;
  #L244122.  v2:= v4.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @type ^`okhttp3.internal.huc.OkHttpURLConnection` @kind object;
  #L244126.  call temp:= `connection`(v5) @signature `Lokhttp3/Interceptor$Chain;.connection:()Lokhttp3/Connection;` @kind interface;
  #L24412c.  v3:= temp @kind object;
  #L24412e.  call temp:= `handshake`(v3) @signature `Lokhttp3/Connection;.handshake:()Lokhttp3/Handshake;` @kind interface;
  #L244134.  v3:= temp @kind object;
  #L244136.  v2.`okhttp3.internal.huc.OkHttpURLConnection.handshake` @type ^`okhttp3.Handshake` := v3 @kind object;
  #L24413a.  v2:= v4.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @type ^`okhttp3.internal.huc.OkHttpURLConnection` @kind object;
  #L24413e.  call temp:= `access$000`(v2) @signature `Lokhttp3/internal/huc/OkHttpURLConnection;.access$000:(Lokhttp3/internal/huc/OkHttpURLConnection;)Ljava/lang/Object;` @kind static;
  #L244144.  v2:= temp @kind object;
  #L244146.  call `notifyAll`(v2) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L24414c.  v2:= v4.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.proceed` @type ^`boolean` @kind boolean;
  #L244150.  if v2 != 0 then goto L244168;
  #L244154.  v2:= v4.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @type ^`okhttp3.internal.huc.OkHttpURLConnection` @kind object;
  #L244158.  call temp:= `access$000`(v2) @signature `Lokhttp3/internal/huc/OkHttpURLConnection;.access$000:(Lokhttp3/internal/huc/OkHttpURLConnection;)Ljava/lang/Object;` @kind static;
  #L24415e.  v2:= temp @kind object;
  #L244160.  call `wait`(v2) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L244166.  goto L24414c;
  #L244168.  @monitorexit v1
  #L24416a.  call temp:= `body`(v0) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L244170.  v1:= temp @kind object;
  #L244172.  v1:= instanceof @variable v1 @type ^`okhttp3.internal.huc.OutputStreamRequestBody` @kind boolean;
  #L244176.  if v1 == 0 then goto L24418e;
  #L24417a.  call temp:= `body`(v0) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L244180.  v1:= temp @kind object;
  #L244182.  v1:= (`okhttp3.internal.huc.OutputStreamRequestBody`) v1 @kind object;
  #L244186.  call temp:= `prepareToSendRequest`(v1, v0) @signature `Lokhttp3/internal/huc/OutputStreamRequestBody;.prepareToSendRequest:(Lokhttp3/Request;)Lokhttp3/Request;` @kind virtual;
  #L24418c.  v0:= temp @kind object;
  #L24418e.  call temp:= `proceed`(v5, v0) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L244194.  v5:= temp @kind object;
  #L244196.  v0:= v4.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @type ^`okhttp3.internal.huc.OkHttpURLConnection` @kind object;
  #L24419a.  call temp:= `access$000`(v0) @signature `Lokhttp3/internal/huc/OkHttpURLConnection;.access$000:(Lokhttp3/internal/huc/OkHttpURLConnection;)Ljava/lang/Object;` @kind static;
  #L2441a0.  v0:= temp @kind object;
  #L2441a2.  @monitorenter v0
  #L2441a4.  v1:= v4.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @type ^`okhttp3.internal.huc.OkHttpURLConnection` @kind object;
  #L2441a8.  v1.`okhttp3.internal.huc.OkHttpURLConnection.networkResponse` @type ^`okhttp3.Response` := v5 @kind object;
  #L2441ac.  v1:= v4.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @type ^`okhttp3.internal.huc.OkHttpURLConnection` @kind object;
  #L2441b0.  call temp:= `request`(v5) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L2441b6.  v2:= temp @kind object;
  #L2441b8.  call temp:= `url`(v2) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2441be.  v2:= temp @kind object;
  #L2441c0.  call temp:= `url`(v2) @signature `Lokhttp3/HttpUrl;.url:()Ljava/net/URL;` @kind virtual;
  #L2441c6.  v2:= temp @kind object;
  #L2441c8.  call temp:= `access$102`(v1, v2) @signature `Lokhttp3/internal/huc/OkHttpURLConnection;.access$102:(Lokhttp3/internal/huc/OkHttpURLConnection;Ljava/net/URL;)Ljava/net/URL;` @kind static;
  #L2441ce.  @monitorexit v0
  #L2441d0.  return v5 @kind object;
  #L2441d2.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2441d4.  @monitorexit v0
  #L2441d6.  throw v5;
  #L2441d8.  v5:= new `java.io.InterruptedIOException`;
  #L2441dc.  call `<init>`(v5) @signature `Ljava/io/InterruptedIOException;.<init>:()V` @kind direct;
  #L2441e2.  throw v5;
  #L2441e4.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2441e6.  @monitorexit v1
  #L2441e8.  throw v5;
  #L2441ea.  return @kind void;
  catch `java.lang.Throwable` @[L2440f8..L24414c] goto L2441e4;
  catch `java.lang.InterruptedException` @[L24414c..L244166] goto L2441d8;
  catch `java.lang.Throwable` @[L24414c..L244166] goto L2441e4;
  catch `java.lang.Throwable` @[L244168..L24416a] goto L2441e4;
  catch `java.lang.Throwable` @[L2441a4..L2441d6] goto L2441d2;
  catch `java.lang.Throwable` @[L2441d8..L2441e8] goto L2441e4;
}
procedure `void` `proceed`(`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor` v2 @kind this) @signature `Lokhttp3/internal/huc/OkHttpURLConnection$NetworkInterceptor;.proceed:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L244250.  v0:= v2.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @type ^`okhttp3.internal.huc.OkHttpURLConnection` @kind object;
  #L244254.  call temp:= `access$000`(v0) @signature `Lokhttp3/internal/huc/OkHttpURLConnection;.access$000:(Lokhttp3/internal/huc/OkHttpURLConnection;)Ljava/lang/Object;` @kind static;
  #L24425a.  v0:= temp @kind object;
  #L24425c.  @monitorenter v0
  #L24425e.  v1:= 1I;
  #L244260.  v2.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.proceed` @type ^`boolean` := v1 @kind boolean;
  #L244264.  v1:= v2.`okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor.this$0` @type ^`okhttp3.internal.huc.OkHttpURLConnection` @kind object;
  #L244268.  call temp:= `access$000`(v1) @signature `Lokhttp3/internal/huc/OkHttpURLConnection;.access$000:(Lokhttp3/internal/huc/OkHttpURLConnection;)Ljava/lang/Object;` @kind static;
  #L24426e.  v1:= temp @kind object;
  #L244270.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L244276.  @monitorexit v0
  #L244278.  return @kind void;
  #L24427a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24427c.  @monitorexit v0
  #L24427e.  throw v1;
  catch `java.lang.Throwable` @[L244260..L24427e] goto L24427a;
}
