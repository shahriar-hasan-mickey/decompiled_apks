record `okhttp3.internal.platform.Platform` @kind class @AccessFlag PUBLIC {
}
global `int` `@@okhttp3.internal.platform.Platform.INFO` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.platform.Platform` `@@okhttp3.internal.platform.Platform.PLATFORM` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.platform.Platform.WARN` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.logging.Logger` `@@okhttp3.internal.platform.Platform.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/Platform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L247914.  call temp:= `findPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findPlatform:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L24791a.  v0:= temp @kind object;
  #L24791c.  `@@okhttp3.internal.platform.Platform.PLATFORM` @type ^`okhttp3.internal.platform.Platform` := v0 @kind object;
  #L247920.  v0:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L247924.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L24792a.  v0:= temp @kind object;
  #L24792c.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L247932.  v0:= temp @kind object;
  #L247934.  `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L247938.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Platform` v0 @kind this) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L24794c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L247952.  return @kind void;
}
procedure `java.util.List` `alpnProtocolNames`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/Platform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2476ec.  v0:= new `java.util.ArrayList`;
  #L2476f0.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2476f6.  v1:= temp;
  #L2476f8.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2476fe.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L247704.  v1:= temp;
  #L247706.  v2:= 0I;
  #L247708.  if v2 >= v1 then goto L247736;
  #L24770c.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L247712.  v3:= temp @kind object;
  #L247714.  v3:= (`okhttp3.Protocol`) v3 @kind object;
  #L247718.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L24771c.  if v3 != v4 then goto L247722;
  #L247720.  goto L247730;
  #L247722.  call temp:= `toString`(v3) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L247728.  v3:= temp @kind object;
  #L24772a.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L247730.  v2:= v2 + 1;
  #L247734.  goto L247708;
  #L247736.  return v0 @kind object;
}
procedure `byte`[] `concatLengthPrefixed`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/Platform;.concatLengthPrefixed:(Ljava/util/List;)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L247568.  v0:= new `okio.Buffer`;
  #L24756c.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L247572.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L247578.  v1:= temp;
  #L24757a.  v2:= 0I;
  #L24757c.  if v2 >= v1 then goto L2475c0;
  #L247580.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L247586.  v3:= temp @kind object;
  #L247588.  v3:= (`okhttp3.Protocol`) v3 @kind object;
  #L24758c.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L247590.  if v3 != v4 then goto L247596;
  #L247594.  goto L2475ba;
  #L247596.  call temp:= `toString`(v3) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L24759c.  v4:= temp @kind object;
  #L24759e.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2475a4.  v4:= temp;
  #L2475a6.  call temp:= `writeByte`(v0, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L2475ac.  call temp:= `toString`(v3) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L2475b2.  v3:= temp @kind object;
  #L2475b4.  call temp:= `writeUtf8`(v0, v3) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L2475ba.  v2:= v2 + 1;
  #L2475be.  goto L24757c;
  #L2475c0.  call temp:= `readByteArray`(v0) @signature `Lokio/Buffer;.readByteArray:()[B` @kind virtual;
  #L2475c6.  v5:= temp @kind object;
  #L2475c8.  return v5 @kind object;
}
procedure `okhttp3.internal.platform.Platform` `findPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findPlatform:()Lokhttp3/internal/platform/Platform;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2477e0.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L2477e6.  v0:= temp @kind object;
  #L2477e8.  if v0 == 0 then goto L2477ee;
  #L2477ec.  return v0 @kind object;
  #L2477ee.  call temp:= `isConscryptPreferred`() @signature `Lokhttp3/internal/platform/Platform;.isConscryptPreferred:()Z` @kind static;
  #L2477f4.  v0:= temp;
  #L2477f6.  if v0 == 0 then goto L247808;
  #L2477fa.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/ConscryptPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L247800.  v0:= temp @kind object;
  #L247802.  if v0 == 0 then goto L247808;
  #L247806.  return v0 @kind object;
  #L247808.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/Jdk9Platform;.buildIfSupported:()Lokhttp3/internal/platform/Jdk9Platform;` @kind static;
  #L24780e.  v0:= temp @kind object;
  #L247810.  if v0 == 0 then goto L247816;
  #L247814.  return v0 @kind object;
  #L247816.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L24781c.  v0:= temp @kind object;
  #L24781e.  if v0 == 0 then goto L247824;
  #L247822.  return v0 @kind object;
  #L247824.  v0:= new `okhttp3.internal.platform.Platform`;
  #L247828.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L24782e.  return v0 @kind object;
}
procedure `okhttp3.internal.platform.Platform` `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L247840.  v0:= `@@okhttp3.internal.platform.Platform.PLATFORM` @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L247844.  return v0 @kind object;
}
procedure `boolean` `isConscryptPreferred`() @signature `Lokhttp3/internal/platform/Platform;.isConscryptPreferred:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L247514.  v0:= "conscrypt" @kind object;
  #L247518.  v1:= "okhttp.platform" @kind object;
  #L24751c.  call temp:= `getProperty`(v1) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L247522.  v1:= temp @kind object;
  #L247524.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L24752a.  v0:= temp;
  #L24752c.  if v0 == 0 then goto L247534;
  #L247530.  v0:= 1I;
  #L247532.  return v0;
  #L247534.  call temp:= `getProviders`() @signature `Ljava/security/Security;.getProviders:()[Ljava/security/Provider;` @kind static;
  #L24753a.  v0:= temp @kind object;
  #L24753c.  v1:= 0I;
  #L24753e.  v0:= v0[v1] @kind object;
  #L247542.  call temp:= `getName`(v0) @signature `Ljava/security/Provider;.getName:()Ljava/lang/String;` @kind virtual;
  #L247548.  v0:= temp @kind object;
  #L24754a.  v1:= "Conscrypt" @kind object;
  #L24754e.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L247554.  v0:= temp;
  #L247556.  return v0;
}
procedure `java.lang.Object` `readFieldOrNull`(`java.lang.Object` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L247610.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L247616.  v0:= temp @kind object;
  #L247618.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L24761c.  v2:= 0I;
  #L24761e.  if v0 == v1 then goto L24766e;
  #L247622.  call temp:= `getDeclaredField`(v0, v6) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L247628.  v1:= temp @kind object;
  #L24762a.  v3:= 1I;
  #L24762c.  call `setAccessible`(v1, v3) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L247632.  call temp:= `get`(v1, v4) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L247638.  v1:= temp @kind object;
  #L24763a.  if v1 == 0 then goto L247656;
  #L24763e.  call temp:= `isInstance`(v5, v1) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L247644.  v3:= temp;
  #L247646.  if v3 != 0 then goto L24764c;
  #L24764a.  goto L247656;
  #L24764c.  call temp:= `cast`(v5, v1) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L247652.  v4:= temp @kind object;
  #L247654.  return v4 @kind object;
  #L247656.  return v2 @kind object;
  #L247658.  v4:= new `java.lang.AssertionError`;
  #L24765c.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L247662.  throw v4;
  #L247664.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L24766a.  v0:= temp @kind object;
  #L24766c.  goto L247618;
  #L24766e.  v0:= "delegate" @kind object;
  #L247672.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L247678.  v0:= temp;
  #L24767a.  if v0 != 0 then goto L24769c;
  #L24767e.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L247682.  v1:= "delegate" @kind object;
  #L247686.  call temp:= `readFieldOrNull`(v4, v0, v1) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24768c.  v4:= temp @kind object;
  #L24768e.  if v4 == 0 then goto L24769c;
  #L247692.  call temp:= `readFieldOrNull`(v4, v5, v6) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L247698.  v4:= temp @kind object;
  #L24769a.  return v4 @kind object;
  #L24769c.  return v2 @kind object;
  catch `java.lang.NoSuchFieldException` @[L247622..L247654] goto L247664;
  catch `java.lang.IllegalAccessException` @[L247622..L247654] goto L247658;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;

  #L247964.  return @kind void;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.Platform` v3 @kind this, `javax.net.ssl.SSLSocketFactory` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/SSLSocketFactory;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L247858.  call temp:= `trustManager`(v3, v4) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @kind virtual;
  #L24785e.  v0:= temp @kind object;
  #L247860.  if v0 == 0 then goto L24786e;
  #L247864.  call temp:= `buildCertificateChainCleaner`(v3, v0) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind virtual;
  #L24786a.  v4:= temp @kind object;
  #L24786c.  return v4 @kind object;
  #L24786e.  v0:= new `java.lang.IllegalStateException`;
  #L247872.  v1:= new `java.lang.StringBuilder`;
  #L247876.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24787c.  v2:= "Unable to extract the trust manager on " @kind object;
  #L247880.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L247886.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L24788c.  v2:= temp @kind object;
  #L24788e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L247894.  v2:= ", sslSocketFactory is " @kind object;
  #L247898.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24789e.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2478a4.  v4:= temp @kind object;
  #L2478a6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2478ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2478b2.  v4:= temp @kind object;
  #L2478b4.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2478ba.  throw v0;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2478cc.  v0:= new `okhttp3.internal.tls.BasicCertificateChainCleaner`;
  #L2478d0.  call temp:= `buildTrustRootIndex`(v1, v2) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @kind virtual;
  #L2478d6.  v2:= temp @kind object;
  #L2478d8.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.<init>:(Lokhttp3/internal/tls/TrustRootIndex;)V` @kind direct;
  #L2478de.  return v0 @kind object;
}
procedure `okhttp3.internal.tls.TrustRootIndex` `buildTrustRootIndex`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2478f0.  v0:= new `okhttp3.internal.tls.BasicTrustRootIndex`;
  #L2478f4.  call temp:= `getAcceptedIssuers`(v2) @signature `Ljavax/net/ssl/X509TrustManager;.getAcceptedIssuers:()[Ljava/security/cert/X509Certificate;` @kind interface;
  #L2478fa.  v2:= temp @kind object;
  #L2478fc.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/tls/BasicTrustRootIndex;.<init>:([Ljava/security/cert/X509Certificate;)V` @kind direct;
  #L247902.  return v0 @kind object;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L247978.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.platform.Platform` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `Lokhttp3/internal/platform/Platform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L24798c.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L247992.  return @kind void;
}
procedure `java.lang.String` `getPrefix`(`okhttp3.internal.platform.Platform` v1 @kind this) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2476c0.  v0:= "OkHttp" @kind object;
  #L2476c4.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLContext` `getSSLContext`(`okhttp3.internal.platform.Platform` v3 @kind this) @signature `Lokhttp3/internal/platform/Platform;.getSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L247748.  v0:= "TLS" @kind object;
  #L24774c.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L247752.  v0:= temp @kind object;
  #L247754.  return v0 @kind object;
  #L247756.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L247758.  v1:= new `java.lang.IllegalStateException`;
  #L24775c.  v2:= "No TLS provider" @kind object;
  #L247760.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L247766.  throw v1;
  catch `java.security.NoSuchAlgorithmException` @[L247748..L247754] goto L247756;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L2476d8.  v1:= 0I;
  #L2476da.  return v1 @kind object;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`okhttp3.internal.platform.Platform` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2475dc.  v0:= `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` @kind object;
  #L2475e0.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L2475e4.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L2475ea.  v0:= temp;
  #L2475ec.  if v0 == 0 then goto L2475fc;
  #L2475f0.  v0:= new `java.lang.Throwable`;
  #L2475f4.  call `<init>`(v0, v3) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2475fa.  return v0 @kind object;
  #L2475fc.  v3:= 0I;
  #L2475fe.  return v3 @kind object;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.platform.Platform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;

  #L247500.  v1:= 1I;
  #L247502.  return v1;
}
procedure `void` `log`(`okhttp3.internal.platform.Platform` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2479a4.  v0:= 5I;
  #L2479a6.  if v2 != v0 then goto L2479b0;
  #L2479aa.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L2479ae.  goto L2479b4;
  #L2479b0.  v2:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L2479b4.  v0:= `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` @kind object;
  #L2479b8.  call `log`(v0, v2, v3, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L2479be.  return @kind void;
}
procedure `void` `logCloseableLeak`(`okhttp3.internal.platform.Platform` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2479d0.  if v3 != 0 then goto L2479f6;
  #L2479d4.  v0:= new `java.lang.StringBuilder`;
  #L2479d8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2479de.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2479e4.  v2:= " To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);" @kind object;
  #L2479e8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2479ee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2479f4.  v2:= temp @kind object;
  #L2479f6.  v0:= 5I;
  #L2479f8.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L2479fc.  call `log`(v1, v0, v2, v3) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L247a02.  return @kind void;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.Platform` v3 @kind this, `javax.net.ssl.SSLSocketFactory` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L247788.  v0:= 0I;
  #L24778a.  v1:= "sun.security.ssl.SSLContextImpl" @kind object;
  #L24778e.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L247794.  v1:= temp @kind object;
  #L247796.  v2:= "context" @kind object;
  #L24779a.  call temp:= `readFieldOrNull`(v4, v1, v2) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2477a0.  v4:= temp @kind object;
  #L2477a2.  if v4 != 0 then goto L2477a8;
  #L2477a6.  return v0 @kind object;
  #L2477a8.  v1:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L2477ac.  v2:= "trustManager" @kind object;
  #L2477b0.  call temp:= `readFieldOrNull`(v4, v1, v2) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2477b6.  v4:= temp @kind object;
  #L2477b8.  v4:= (`javax.net.ssl.X509TrustManager`) v4 @kind object;
  #L2477bc.  return v4 @kind object;
  #L2477be.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L24778a..L2477bc] goto L2477be;
}
