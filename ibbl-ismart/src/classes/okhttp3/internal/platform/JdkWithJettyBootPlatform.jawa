record `okhttp3.internal.platform.JdkWithJettyBootPlatform` @kind class @AccessFlag  extends `okhttp3.internal.platform.Platform` @kind class {
  `java.lang.Class` `okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.reflect.Method` v2 @kind object, `java.lang.reflect.Method` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L247164.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L24716a.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L24716e.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L247172.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L247176.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @type ^`java.lang.Class` := v4 @kind object;
  #L24717a.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @type ^`java.lang.Class` := v5 @kind object;
  #L24717e.  return @kind void;
}
procedure `okhttp3.internal.platform.Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L247054.  v0:= "org.eclipse.jetty.alpn.ALPN" @kind object;
  #L247058.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L24705e.  v1:= temp @kind object;
  #L247060.  v2:= new `java.lang.StringBuilder`;
  #L247064.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24706a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L247070.  v3:= "$Provider" @kind object;
  #L247074.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24707a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L247080.  v2:= temp @kind object;
  #L247082.  call temp:= `forName`(v2) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L247088.  v2:= temp @kind object;
  #L24708a.  v3:= new `java.lang.StringBuilder`;
  #L24708e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L247094.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24709a.  v4:= "$ClientProvider" @kind object;
  #L24709e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2470a4.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2470aa.  v3:= temp @kind object;
  #L2470ac.  call temp:= `forName`(v3) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L2470b2.  v8:= temp @kind object;
  #L2470b4.  v3:= new `java.lang.StringBuilder`;
  #L2470b8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2470be.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2470c4.  v0:= "$ServerProvider" @kind object;
  #L2470c8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2470ce.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2470d4.  v0:= temp @kind object;
  #L2470d6.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L2470dc.  v9:= temp @kind object;
  #L2470de.  v0:= "put" @kind object;
  #L2470e2.  v3:= 2I;
  #L2470e4.  v3:= new `java.lang.Class`[v3];
  #L2470e8.  v4:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L2470ec.  v5:= 0I;
  #L2470ee.  v3[v5]:= v4 @kind object;
  #L2470f2.  v4:= 1I;
  #L2470f4.  v3[v4]:= v2 @kind object;
  #L2470f8.  call temp:= `getMethod`(v1, v0, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2470fe.  v0:= temp @kind object;
  #L247100.  v2:= "get" @kind object;
  #L247104.  v3:= new `java.lang.Class`[v4];
  #L247108.  v6:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L24710c.  v3[v5]:= v6 @kind object;
  #L247110.  call temp:= `getMethod`(v1, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L247116.  v6:= temp @kind object;
  #L247118.  v2:= "remove" @kind object;
  #L24711c.  v3:= new `java.lang.Class`[v4];
  #L247120.  v4:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L247124.  v3[v5]:= v4 @kind object;
  #L247128.  call temp:= `getMethod`(v1, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L24712e.  v7:= temp @kind object;
  #L247130.  v1:= new `okhttp3.internal.platform.JdkWithJettyBootPlatform`;
  #L247134.  v4:= v1 @kind object;
  #L247136.  v5:= v0 @kind object;
  #L247138.  call `<init>`(v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L24713e.  return v1 @kind object;
  #L247140.  v0:= 0I;
  #L247142.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L247054..L24713e] goto L247140;
  catch `java.lang.NoSuchMethodException` @[L247054..L24713e] goto L247140;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L247190.  v0:= v4.`okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L247194.  v1:= 0I;
  #L247196.  v2:= 1I;
  #L247198.  v2:= new `java.lang.Object`[v2];
  #L24719c.  v3:= 0I;
  #L24719e.  v2[v3]:= v5 @kind object;
  #L2471a2.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2471a8.  return @kind void;
  #L2471aa.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L2471ac.  v0:= "unable to remove alpn" @kind object;
  #L2471b0.  call temp:= `assertionError`(v0, v5) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L2471b6.  v5:= temp @kind object;
  #L2471b8.  throw v5;
  catch `java.lang.IllegalAccessException` @[L247190..L2471a8] goto L2471aa;
  catch `java.lang.reflect.InvocationTargetException` @[L247190..L2471a8] goto L2471aa;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2471dc.  call temp:= `alpnProtocolNames`(v8) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2471e2.  v7:= temp @kind object;
  #L2471e4.  v8:= constclass @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L2471e8.  call temp:= `getClassLoader`(v8) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L2471ee.  v8:= temp @kind object;
  #L2471f0.  v0:= 2I;
  #L2471f2.  v1:= new `java.lang.Class`[v0];
  #L2471f6.  v2:= v5.`okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @type ^`java.lang.Class` @kind object;
  #L2471fa.  v3:= 0I;
  #L2471fc.  v1[v3]:= v2 @kind object;
  #L247200.  v2:= v5.`okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @type ^`java.lang.Class` @kind object;
  #L247204.  v4:= 1I;
  #L247206.  v1[v4]:= v2 @kind object;
  #L24720a.  v2:= new `okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider`;
  #L24720e.  call `<init>`(v2, v7) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform$JettyNegoProvider;.<init>:(Ljava/util/List;)V` @kind direct;
  #L247214.  call temp:= `newProxyInstance`(v8, v1, v2) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L24721a.  v7:= temp @kind object;
  #L24721c.  v8:= v5.`okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L247220.  v1:= 0I;
  #L247222.  v0:= new `java.lang.Object`[v0];
  #L247226.  v0[v3]:= v6 @kind object;
  #L24722a.  v0[v4]:= v7 @kind object;
  #L24722e.  call temp:= `invoke`(v8, v1, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L247234.  return @kind void;
  #L247236.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L247238.  v7:= "unable to set alpn" @kind object;
  #L24723c.  call temp:= `assertionError`(v7, v6) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L247242.  v6:= temp @kind object;
  #L247244.  throw v6;
  catch `java.lang.reflect.InvocationTargetException` @[L2471e4..L247234] goto L247236;
  catch `java.lang.IllegalAccessException` @[L2471e4..L247234] goto L247236;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L246fc8.  v0:= v3.`okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L246fcc.  v1:= 1I;
  #L246fce.  v1:= new `java.lang.Object`[v1];
  #L246fd2.  v2:= 0I;
  #L246fd4.  v1[v2]:= v4 @kind object;
  #L246fd8.  v4:= 0I;
  #L246fda.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L246fe0.  v0:= temp @kind object;
  #L246fe2.  call temp:= `getInvocationHandler`(v0) @signature `Ljava/lang/reflect/Proxy;.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;` @kind static;
  #L246fe8.  v0:= temp @kind object;
  #L246fea.  v0:= (`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider`) v0 @kind object;
  #L246fee.  v1:= v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.unsupported` @type ^`boolean` @kind boolean;
  #L246ff2.  if v1 != 0 then goto L247014;
  #L246ff6.  v1:= v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.selected` @type ^`java.lang.String` @kind object;
  #L246ffa.  if v1 != 0 then goto L247014;
  #L246ffe.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L247004.  v0:= temp @kind object;
  #L247006.  v1:= 4I;
  #L247008.  v2:= "ALPN callback dropped: HTTP/2 is disabled. Is alpn-boot on the boot class path?" @kind object;
  #L24700c.  call `log`(v0, v1, v2, v4) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L247012.  return v4 @kind object;
  #L247014.  v1:= v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.unsupported` @type ^`boolean` @kind boolean;
  #L247018.  if v1 == 0 then goto L24701e;
  #L24701c.  goto L247022;
  #L24701e.  v4:= v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.selected` @type ^`java.lang.String` @kind object;
  #L247022.  return v4 @kind object;
  #L247024.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L247026.  v0:= "unable to get selected protocol" @kind object;
  #L24702a.  call temp:= `assertionError`(v0, v4) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L247030.  v4:= temp @kind object;
  #L247032.  throw v4;
  catch `java.lang.reflect.InvocationTargetException` @[L246fc8..L247022] goto L247024;
  catch `java.lang.IllegalAccessException` @[L246fc8..L247022] goto L247024;
}
