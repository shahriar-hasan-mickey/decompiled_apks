record `okhttp3.internal.platform.AndroidPlatform` @kind class @AccessFlag  extends `okhttp3.internal.platform.Platform` @kind class {
  `okhttp3.internal.platform.AndroidPlatform$CloseGuard` `okhttp3.internal.platform.AndroidPlatform.closeGuard` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setHostname` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@okhttp3.internal.platform.AndroidPlatform.MAX_LOG_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.Class` v2 @kind object, `okhttp3.internal.platform.OptionalMethod` v3 @kind object, `okhttp3.internal.platform.OptionalMethod` v4 @kind object, `okhttp3.internal.platform.OptionalMethod` v5 @kind object, `okhttp3.internal.platform.OptionalMethod` v6 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.<init>:(Ljava/lang/Class;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L246908.  call `<init>`(v1) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L24690e.  call temp:= `get`() @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.get:()Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;` @kind static;
  #L246914.  v0:= temp @kind object;
  #L246916.  v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` := v0 @kind object;
  #L24691a.  v1.`okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @type ^`java.lang.Class` := v2 @kind object;
  #L24691e.  v1.`okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @type ^`okhttp3.internal.platform.OptionalMethod` := v3 @kind object;
  #L246922.  v1.`okhttp3.internal.platform.AndroidPlatform.setHostname` @type ^`okhttp3.internal.platform.OptionalMethod` := v4 @kind object;
  #L246926.  v1.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` := v5 @kind object;
  #L24692a.  v1.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` := v6 @kind object;
  #L24692e.  return @kind void;
}
procedure `boolean` `api23IsCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api23IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2464a8.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L2464ac.  v1:= 0I;
  #L2464ae.  v2:= new `java.lang.Class`[v1];
  #L2464b2.  call temp:= `getMethod`(v5, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2464b8.  v5:= temp @kind object;
  #L2464ba.  v0:= new `java.lang.Object`[v1];
  #L2464be.  call temp:= `invoke`(v5, v6, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2464c4.  v5:= temp @kind object;
  #L2464c6.  v5:= (`java.lang.Boolean`) v5 @kind object;
  #L2464ca.  call temp:= `booleanValue`(v5) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2464d0.  v4:= temp;
  #L2464d2.  return v4;
  #L2464d4.  call temp:= `isCleartextTrafficPermitted`(v3, v4) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind super;
  #L2464da.  v4:= temp;
  #L2464dc.  return v4;
  catch `java.lang.NoSuchMethodException` @[L2464a8..L2464d2] goto L2464d4;
}
procedure `boolean` `api24IsCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api24IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L246500.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L246504.  v1:= 1I;
  #L246506.  v2:= new `java.lang.Class`[v1];
  #L24650a.  v3:= constclass @type ^`java.lang.String` @kind object;
  #L24650e.  v4:= 0I;
  #L246510.  v2[v4]:= v3 @kind object;
  #L246514.  call temp:= `getMethod`(v7, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L24651a.  v0:= temp @kind object;
  #L24651c.  v1:= new `java.lang.Object`[v1];
  #L246520.  v1[v4]:= v6 @kind object;
  #L246524.  call temp:= `invoke`(v0, v8, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L24652a.  v0:= temp @kind object;
  #L24652c.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L246530.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L246536.  v6:= temp;
  #L246538.  return v6;
  #L24653a.  call temp:= `api23IsCleartextTrafficPermitted`(v5, v6, v7, v8) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api23IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L246540.  v6:= temp;
  #L246542.  return v6;
  catch `java.lang.NoSuchMethodException` @[L246500..L246538] goto L24653a;
}
procedure `okhttp3.internal.platform.Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L246734.  v0:= 0I;
  #L246736.  v1:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L24673a.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L246740.  v1:= temp @kind object;
  #L246742.  v3:= v1 @kind object;
  #L246744.  goto L246754;
  #L246746.  v1:= "org.apache.harmony.xnet.provider.jsse.SSLParametersImpl" @kind object;
  #L24674a.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L246750.  v1:= temp @kind object;
  #L246752.  v3:= v1 @kind object;
  #L246754.  v4:= new `okhttp3.internal.platform.OptionalMethod`;
  #L246758.  v1:= "setUseSessionTickets" @kind object;
  #L24675c.  v2:= 1I;
  #L24675e.  v5:= new `java.lang.Class`[v2];
  #L246762.  v6:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L246766.  v7:= 0I;
  #L246768.  v5[v7]:= v6 @kind object;
  #L24676c.  call `<init>`(v4, v0, v1, v5) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L246772.  v5:= new `okhttp3.internal.platform.OptionalMethod`;
  #L246776.  v1:= "setHostname" @kind object;
  #L24677a.  v6:= new `java.lang.Class`[v2];
  #L24677e.  v8:= constclass @type ^`java.lang.String` @kind object;
  #L246782.  v6[v7]:= v8 @kind object;
  #L246786.  call `<init>`(v5, v0, v1, v6) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L24678c.  call temp:= `supportsAlpn`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.supportsAlpn:()Z` @kind static;
  #L246792.  v1:= temp;
  #L246794.  if v1 == 0 then goto L2467ce;
  #L246798.  v1:= new `okhttp3.internal.platform.OptionalMethod`;
  #L24679c.  v6:= constclass @type ^`byte`[] @kind object;
  #L2467a0.  v8:= "getAlpnSelectedProtocol" @kind object;
  #L2467a4.  v9:= new `java.lang.Class`[v7];
  #L2467a8.  call `<init>`(v1, v6, v8, v9) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L2467ae.  v6:= new `okhttp3.internal.platform.OptionalMethod`;
  #L2467b2.  v8:= "setAlpnProtocols" @kind object;
  #L2467b6.  v2:= new `java.lang.Class`[v2];
  #L2467ba.  v9:= constclass @type ^`byte`[] @kind object;
  #L2467be.  v2[v7]:= v9 @kind object;
  #L2467c2.  call `<init>`(v6, v0, v8, v2) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L2467c8.  v7:= v6 @kind object;
  #L2467ca.  v6:= v1 @kind object;
  #L2467cc.  goto L2467d2;
  #L2467ce.  v6:= v0 @kind object;
  #L2467d0.  v7:= v6 @kind object;
  #L2467d2.  v1:= new `okhttp3.internal.platform.AndroidPlatform`;
  #L2467d6.  v2:= v1 @kind object;
  #L2467d8.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/internal/platform/AndroidPlatform;.<init>:(Ljava/lang/Class;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;)V` @kind direct;
  #L2467de.  return v1 @kind object;
  #L2467e0.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L246736..L246742] goto L246746;
  catch `java.lang.ClassNotFoundException` @[L246746..L2467de] goto L2467e0;
}
procedure `boolean` `supportsAlpn`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.supportsAlpn:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2465e0.  v0:= "GMSCore_OpenSSL" @kind object;
  #L2465e4.  call temp:= `getProvider`(v0) @signature `Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;` @kind static;
  #L2465ea.  v0:= temp @kind object;
  #L2465ec.  v1:= 1I;
  #L2465ee.  if v0 == 0 then goto L2465f4;
  #L2465f2.  return v1;
  #L2465f4.  v0:= "android.net.Network" @kind object;
  #L2465f8.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L2465fe.  return v1;
  #L246600.  v0:= 0I;
  #L246602.  return v0;
  catch `java.lang.ClassNotFoundException` @[L2465f4..L2465fe] goto L246600;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.AndroidPlatform` v7 @kind this, `javax.net.ssl.X509TrustManager` v8 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L246810.  v0:= "android.net.http.X509TrustManagerExtensions" @kind object;
  #L246814.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L24681a.  v0:= temp @kind object;
  #L24681c.  v1:= 1I;
  #L24681e.  v2:= new `java.lang.Class`[v1];
  #L246822.  v3:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L246826.  v4:= 0I;
  #L246828.  v2[v4]:= v3 @kind object;
  #L24682c.  call temp:= `getConstructor`(v0, v2) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L246832.  v2:= temp @kind object;
  #L246834.  v3:= new `java.lang.Object`[v1];
  #L246838.  v3[v4]:= v8 @kind object;
  #L24683c.  call temp:= `newInstance`(v2, v3) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L246842.  v2:= temp @kind object;
  #L246844.  v3:= "checkServerTrusted" @kind object;
  #L246848.  v5:= 3I;
  #L24684a.  v5:= new `java.lang.Class`[v5];
  #L24684e.  v6:= constclass @type ^`java.security.cert.X509Certificate`[] @kind object;
  #L246852.  v5[v4]:= v6 @kind object;
  #L246856.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L24685a.  v5[v1]:= v4 @kind object;
  #L24685e.  v1:= 2I;
  #L246860.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L246864.  v5[v1]:= v4 @kind object;
  #L246868.  call temp:= `getMethod`(v0, v3, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L24686e.  v0:= temp @kind object;
  #L246870.  v1:= new `okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner`;
  #L246874.  call `<init>`(v1, v2, v0) @signature `Lokhttp3/internal/platform/AndroidPlatform$AndroidCertificateChainCleaner;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @kind direct;
  #L24687a.  return v1 @kind object;
  #L24687c.  call temp:= `buildCertificateChainCleaner`(v7, v8) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind super;
  #L246882.  v8:= temp @kind object;
  #L246884.  return v8 @kind object;
  catch `java.lang.Exception` @[L246810..L24687a] goto L24687c;
}
procedure `okhttp3.internal.tls.TrustRootIndex` `buildTrustRootIndex`(`okhttp3.internal.platform.AndroidPlatform` v6 @kind this, `javax.net.ssl.X509TrustManager` v7 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2468a8.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2468ae.  v0:= temp @kind object;
  #L2468b0.  v1:= "findTrustAnchorByIssuerAndSignature" @kind object;
  #L2468b4.  v2:= 1I;
  #L2468b6.  v3:= new `java.lang.Class`[v2];
  #L2468ba.  v4:= 0I;
  #L2468bc.  v5:= constclass @type ^`java.security.cert.X509Certificate` @kind object;
  #L2468c0.  v3[v4]:= v5 @kind object;
  #L2468c4.  call temp:= `getDeclaredMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2468ca.  v0:= temp @kind object;
  #L2468cc.  call `setAccessible`(v0, v2) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L2468d2.  v1:= new `okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex`;
  #L2468d6.  call `<init>`(v1, v7, v0) @signature `Lokhttp3/internal/platform/AndroidPlatform$AndroidTrustRootIndex;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @kind direct;
  #L2468dc.  return v1 @kind object;
  #L2468de.  call temp:= `buildTrustRootIndex`(v6, v7) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @kind super;
  #L2468e4.  v7:= temp @kind object;
  #L2468e6.  return v7 @kind object;
  catch `java.lang.NoSuchMethodException` @[L2468a8..L2468dc] goto L2468de;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.AndroidPlatform` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L246940.  v0:= 0I;
  #L246942.  v1:= 1I;
  #L246944.  if v7 == 0 then goto L246974;
  #L246948.  v2:= v5.`okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L24694c.  v3:= new `java.lang.Object`[v1];
  #L246950.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L246956.  v4:= temp @kind object;
  #L246958.  v3[v0]:= v4 @kind object;
  #L24695c.  call temp:= `invokeOptionalWithoutCheckedException`(v2, v6, v3) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L246962.  v2:= v5.`okhttp3.internal.platform.AndroidPlatform.setHostname` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L246966.  v3:= new `java.lang.Object`[v1];
  #L24696a.  v3[v0]:= v7 @kind object;
  #L24696e.  call temp:= `invokeOptionalWithoutCheckedException`(v2, v6, v3) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L246974.  v7:= v5.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L246978.  if v7 == 0 then goto L2469a2;
  #L24697c.  call temp:= `isSupported`(v7, v6) @signature `Lokhttp3/internal/platform/OptionalMethod;.isSupported:(Ljava/lang/Object;)Z` @kind virtual;
  #L246982.  v7:= temp;
  #L246984.  if v7 == 0 then goto L2469a2;
  #L246988.  v7:= new `java.lang.Object`[v1];
  #L24698c.  call temp:= `concatLengthPrefixed`(v8) @signature `Lokhttp3/internal/platform/AndroidPlatform;.concatLengthPrefixed:(Ljava/util/List;)[B` @kind static;
  #L246992.  v8:= temp @kind object;
  #L246994.  v7[v0]:= v8 @kind object;
  #L246998.  v8:= v5.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L24699c.  call temp:= `invokeWithoutCheckedException`(v8, v6, v7) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2469a2.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.platform.AndroidPlatform` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `Lokhttp3/internal/platform/AndroidPlatform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L2469b4.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L2469ba.  return @kind void;
  #L2469bc.  v1:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L2469be.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2469c2.  v3:= 26I;
  #L2469c6.  if v2 != v3 then goto L2469e0;
  #L2469ca.  v2:= new `java.io.IOException`;
  #L2469ce.  v3:= "Exception in connect" @kind object;
  #L2469d2.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2469d8.  call temp:= `initCause`(v2, v1) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L2469de.  throw v2;
  #L2469e0.  throw v1;
  #L2469e2.  v1:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L2469e4.  v2:= new `java.io.IOException`;
  #L2469e8.  v3:= "Exception in connect" @kind object;
  #L2469ec.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2469f2.  call temp:= `initCause`(v2, v1) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L2469f8.  throw v2;
  #L2469fa.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L2469fc.  call temp:= `isAndroidGetsocknameError`(v1) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L246a02.  v2:= temp;
  #L246a04.  if v2 == 0 then goto L246a14;
  #L246a08.  v2:= new `java.io.IOException`;
  #L246a0c.  call `<init>`(v2, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L246a12.  throw v2;
  #L246a14.  throw v1;
  catch `java.lang.AssertionError` @[L2469b4..L2469ba] goto L2469fa;
  catch `java.lang.SecurityException` @[L2469b4..L2469ba] goto L2469e2;
  catch `java.lang.ClassCastException` @[L2469b4..L2469ba] goto L2469bc;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.AndroidPlatform` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L246644.  v0:= v3.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L246648.  v1:= 0I;
  #L24664a.  if v0 != 0 then goto L246650;
  #L24664e.  return v1 @kind object;
  #L246650.  call temp:= `isSupported`(v0, v4) @signature `Lokhttp3/internal/platform/OptionalMethod;.isSupported:(Ljava/lang/Object;)Z` @kind virtual;
  #L246656.  v0:= temp;
  #L246658.  if v0 != 0 then goto L24665e;
  #L24665c.  return v1 @kind object;
  #L24665e.  v0:= v3.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L246662.  v2:= 0I;
  #L246664.  v2:= new `java.lang.Object`[v2];
  #L246668.  call temp:= `invokeWithoutCheckedException`(v0, v4, v2) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L24666e.  v4:= temp @kind object;
  #L246670.  v4:= (`byte`[]) v4 @kind object;
  #L246674.  if v4 == 0 then goto L246686;
  #L246678.  v1:= new `java.lang.String`;
  #L24667c.  v0:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L246680.  call `<init>`(v1, v4, v0) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L246686.  return v1 @kind object;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L246624.  v0:= v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` @kind object;
  #L246628.  call temp:= `createAndOpen`(v0, v2) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.createAndOpen:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L24662e.  v2:= temp @kind object;
  #L246630.  return v2 @kind object;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L246564.  v0:= "android.security.NetworkSecurityPolicy" @kind object;
  #L246568.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L24656e.  v0:= temp @kind object;
  #L246570.  v1:= "getInstance" @kind object;
  #L246574.  v2:= 0I;
  #L246576.  v3:= new `java.lang.Class`[v2];
  #L24657a.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L246580.  v1:= temp @kind object;
  #L246582.  v3:= 0I;
  #L246584.  v2:= new `java.lang.Object`[v2];
  #L246588.  call temp:= `invoke`(v1, v3, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L24658e.  v1:= temp @kind object;
  #L246590.  call temp:= `api24IsCleartextTrafficPermitted`(v4, v5, v0, v1) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api24IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L246596.  v5:= temp;
  #L246598.  return v5;
  #L24659a.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L24659c.  v0:= "unable to determine cleartext support" @kind object;
  #L2465a0.  call temp:= `assertionError`(v0, v5) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L2465a6.  v5:= temp @kind object;
  #L2465a8.  throw v5;
  #L2465aa.  call temp:= `isCleartextTrafficPermitted`(v4, v5) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind super;
  #L2465b0.  v5:= temp;
  #L2465b2.  return v5;
  catch `java.lang.ClassNotFoundException` @[L246564..L246598] goto L2465aa;
  catch `java.lang.NoSuchMethodException` @[L246564..L246598] goto L2465aa;
  catch `java.lang.IllegalAccessException` @[L246564..L246598] goto L24659a;
  catch `java.lang.IllegalArgumentException` @[L246564..L246598] goto L24659a;
  catch `java.lang.reflect.InvocationTargetException` @[L246564..L246598] goto L24659a;
}
procedure `void` `log`(`okhttp3.internal.platform.AndroidPlatform` v5 @kind this, `int` v6 , `java.lang.String` v7 @kind object, `java.lang.Throwable` v8 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L246a3c.  v0:= 5I;
  #L246a3e.  if v6 != v0 then goto L246a44;
  #L246a42.  goto L246a46;
  #L246a44.  v0:= 3I;
  #L246a46.  v6:= 10I;
  #L246a4a.  if v8 == 0 then goto L246a7a;
  #L246a4e.  v1:= new `java.lang.StringBuilder`;
  #L246a52.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L246a58.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L246a5e.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L246a64.  call temp:= `getStackTraceString`(v8) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L246a6a.  v7:= temp @kind object;
  #L246a6c.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L246a72.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L246a78.  v7:= temp @kind object;
  #L246a7a.  v8:= 0I;
  #L246a7c.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L246a82.  v1:= temp;
  #L246a84.  if v8 >= v1 then goto L246ac6;
  #L246a88.  call temp:= `indexOf`(v7, v6, v8) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L246a8e.  v2:= temp;
  #L246a90.  v3:= -1I;
  #L246a92.  if v2 == v3 then goto L246a98;
  #L246a96.  goto L246a9a;
  #L246a98.  v2:= v1;
  #L246a9a.  v3:= v8 + 4000;
  #L246a9e.  call temp:= `min`(v2, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L246aa4.  v3:= temp;
  #L246aa6.  v4:= "OkHttp" @kind object;
  #L246aaa.  call temp:= `substring`(v7, v8, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L246ab0.  v8:= temp @kind object;
  #L246ab2.  call temp:= `println`(v0, v4, v8) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L246ab8.  if v3 < v2 then goto L246ac2;
  #L246abc.  v8:= v3 + 1;
  #L246ac0.  goto L246a84;
  #L246ac2.  v8:= v3;
  #L246ac4.  goto L246a9a;
  #L246ac6.  return @kind void;
}
procedure `void` `logCloseableLeak`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L246ad8.  v0:= v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` @kind object;
  #L246adc.  call temp:= `warnIfOpen`(v0, v3) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.warnIfOpen:(Ljava/lang/Object;)Z` @kind virtual;
  #L246ae2.  v3:= temp;
  #L246ae4.  if v3 != 0 then goto L246af2;
  #L246ae8.  v3:= 5I;
  #L246aea.  v0:= 0I;
  #L246aec.  call `log`(v1, v3, v2, v0) @signature `Lokhttp3/internal/platform/AndroidPlatform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L246af2.  return @kind void;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.AndroidPlatform` v3 @kind this, `javax.net.ssl.SSLSocketFactory` v4 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L246698.  v0:= v3.`okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @type ^`java.lang.Class` @kind object;
  #L24669c.  v1:= "sslParameters" @kind object;
  #L2466a0.  call temp:= `readFieldOrNull`(v4, v0, v1) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2466a6.  v0:= temp @kind object;
  #L2466a8.  if v0 != 0 then goto L2466e2;
  #L2466ac.  v0:= "com.google.android.gms.org.conscrypt.SSLParametersImpl" @kind object;
  #L2466b0.  v1:= 0I;
  #L2466b2.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2466b8.  v2:= temp @kind object;
  #L2466ba.  call temp:= `getClassLoader`(v2) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L2466c0.  v2:= temp @kind object;
  #L2466c2.  call temp:= `forName`(v0, v1, v2) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L2466c8.  v0:= temp @kind object;
  #L2466ca.  v1:= "sslParameters" @kind object;
  #L2466ce.  call temp:= `readFieldOrNull`(v4, v0, v1) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2466d4.  v0:= temp @kind object;
  #L2466d6.  goto L2466e2;
  #L2466d8.  call temp:= `trustManager`(v3, v4) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @kind super;
  #L2466de.  v4:= temp @kind object;
  #L2466e0.  return v4 @kind object;
  #L2466e2.  v4:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L2466e6.  v1:= "x509TrustManager" @kind object;
  #L2466ea.  call temp:= `readFieldOrNull`(v0, v4, v1) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2466f0.  v4:= temp @kind object;
  #L2466f2.  v4:= (`javax.net.ssl.X509TrustManager`) v4 @kind object;
  #L2466f6.  if v4 == 0 then goto L2466fc;
  #L2466fa.  return v4 @kind object;
  #L2466fc.  v4:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L246700.  v1:= "trustManager" @kind object;
  #L246704.  call temp:= `readFieldOrNull`(v0, v4, v1) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24670a.  v4:= temp @kind object;
  #L24670c.  v4:= (`javax.net.ssl.X509TrustManager`) v4 @kind object;
  #L246710.  return v4 @kind object;
  catch `java.lang.ClassNotFoundException` @[L2466ac..L2466d6] goto L2466d8;
}
