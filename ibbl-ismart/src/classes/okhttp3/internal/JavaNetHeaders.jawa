record `okhttp3.internal.JavaNetHeaders` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.Comparator` `@@okhttp3.internal.JavaNetHeaders.FIELD_NAME_COMPARATOR` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/JavaNetHeaders;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L233324.  v0:= new `okhttp3.internal.JavaNetHeaders$1`;
  #L233328.  call `<init>`(v0) @signature `Lokhttp3/internal/JavaNetHeaders$1;.<init>:()V` @kind direct;
  #L23332e.  `@@okhttp3.internal.JavaNetHeaders.FIELD_NAME_COMPARATOR` @type ^`java.util.Comparator` := v0 @kind object;
  #L233332.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.JavaNetHeaders` v0 @kind this) @signature `Lokhttp3/internal/JavaNetHeaders;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L233344.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23334a.  return @kind void;
}
procedure `java.util.Map` `toMultimap`(`okhttp3.Headers` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/JavaNetHeaders;.toMultimap:(Lokhttp3/Headers;Ljava/lang/String;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L233288.  v0:= new `java.util.TreeMap`;
  #L23328c.  v1:= `@@okhttp3.internal.JavaNetHeaders.FIELD_NAME_COMPARATOR` @type ^`java.util.Comparator` @kind object;
  #L233290.  call `<init>`(v0, v1) @signature `Ljava/util/TreeMap;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L233296.  call temp:= `size`(v7) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L23329c.  v1:= temp;
  #L23329e.  v2:= 0I;
  #L2332a0.  if v2 >= v1 then goto L2332ee;
  #L2332a4.  call temp:= `name`(v7, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L2332aa.  v3:= temp @kind object;
  #L2332ac.  call temp:= `value`(v7, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L2332b2.  v4:= temp @kind object;
  #L2332b4.  v5:= new `java.util.ArrayList`;
  #L2332b8.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2332be.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2332c4.  v6:= temp @kind object;
  #L2332c6.  v6:= (`java.util.List`) v6 @kind object;
  #L2332ca.  if v6 == 0 then goto L2332d4;
  #L2332ce.  call temp:= `addAll`(v5, v6) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2332d4.  call temp:= `add`(v5, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2332da.  call temp:= `unmodifiableList`(v5) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2332e0.  v4:= temp @kind object;
  #L2332e2.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2332e8.  v2:= v2 + 1;
  #L2332ec.  goto L2332a0;
  #L2332ee.  if v8 == 0 then goto L23330a;
  #L2332f2.  v7:= 0I;
  #L2332f4.  call temp:= `singletonList`(v8) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2332fa.  v8:= temp @kind object;
  #L2332fc.  call temp:= `unmodifiableList`(v8) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L233302.  v8:= temp @kind object;
  #L233304.  call temp:= `put`(v0, v7, v8) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L23330a.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L233310.  v7:= temp @kind object;
  #L233312.  return v7 @kind object;
}
