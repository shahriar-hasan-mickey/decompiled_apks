record `okhttp3.internal.cache.CacheInterceptor$1` @kind class @AccessFlag  extends `okio.Source` @kind interface {
  `boolean` `okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @AccessFlag ;
  `okhttp3.internal.cache.CacheInterceptor` `okhttp3.internal.cache.CacheInterceptor$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.BufferedSink` `okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.cache.CacheRequest` `okhttp3.internal.cache.CacheInterceptor$1.val$cacheRequest` @AccessFlag FINAL_SYNTHETIC;
  `okio.BufferedSource` `okhttp3.internal.cache.CacheInterceptor$1.val$source` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheInterceptor$1` v0 @kind this, `okhttp3.internal.cache.CacheInterceptor` v1 @kind object, `okio.BufferedSource` v2 @kind object, `okhttp3.internal.cache.CacheRequest` v3 @kind object, `okio.BufferedSink` v4 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.<init>:(Lokhttp3/internal/cache/CacheInterceptor;Lokio/BufferedSource;Lokhttp3/internal/cache/CacheRequest;Lokio/BufferedSink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L23442c.  v0.`okhttp3.internal.cache.CacheInterceptor$1.this$0` @type ^`okhttp3.internal.cache.CacheInterceptor` := v1 @kind object;
  #L234430.  v0.`okhttp3.internal.cache.CacheInterceptor$1.val$source` @type ^`okio.BufferedSource` := v2 @kind object;
  #L234434.  v0.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheRequest` @type ^`okhttp3.internal.cache.CacheRequest` := v3 @kind object;
  #L234438.  v0.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @type ^`okio.BufferedSink` := v4 @kind object;
  #L23443c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L234442.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.cache.CacheInterceptor$1` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L234454.  v0:= v2.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` @kind boolean;
  #L234458.  if v0 != 0 then goto L234480;
  #L23445c.  v0:= 100I;
  #L234460.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L234464.  call temp:= `discard`(v2, v0, v1) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L23446a.  v0:= temp;
  #L23446c.  if v0 != 0 then goto L234480;
  #L234470.  v0:= 1I;
  #L234472.  v2.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` := v0 @kind boolean;
  #L234476.  v0:= v2.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheRequest` @type ^`okhttp3.internal.cache.CacheRequest` @kind object;
  #L23447a.  call `abort`(v0) @signature `Lokhttp3/internal/cache/CacheRequest;.abort:()V` @kind interface;
  #L234480.  v0:= v2.`okhttp3.internal.cache.CacheInterceptor$1.val$source` @type ^`okio.BufferedSource` @kind object;
  #L234484.  call `close`(v0) @signature `Lokio/BufferedSource;.close:()V` @kind interface;
  #L23448a.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.cache.CacheInterceptor$1` v8 @kind this, `okio.Buffer` v9 @kind object, `long` v10 ) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L234370.  v0:= 1I;
  #L234372.  v1:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$source` @type ^`okio.BufferedSource` @kind object;
  #L234376.  call temp:= `read`(v1, v9, v10) @signature `Lokio/BufferedSource;.read:(Lokio/Buffer;J)J` @kind interface;
  #L23437c.  v10:= temp @kind wide;
  #L23437e.  v1:= -1L;
  #L234382.  v3:= lcmp(v10, v1);
  #L234386.  if v3 != 0 then goto L2343a2;
  #L23438a.  v9:= v8.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` @kind boolean;
  #L23438e.  if v9 != 0 then goto L2343a0;
  #L234392.  v8.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` := v0 @kind boolean;
  #L234396.  v9:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @type ^`okio.BufferedSink` @kind object;
  #L23439a.  call `close`(v9) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L2343a0.  return v1 @kind wide;
  #L2343a2.  v0:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @type ^`okio.BufferedSink` @kind object;
  #L2343a6.  call temp:= `buffer`(v0) @signature `Lokio/BufferedSink;.buffer:()Lokio/Buffer;` @kind interface;
  #L2343ac.  v3:= temp @kind object;
  #L2343ae.  call temp:= `size`(v9) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2343b4.  v0:= temp @kind wide;
  #L2343b6.  v4:= v0 - v10 @kind long;
  #L2343ba.  v2:= v9 @kind object;
  #L2343bc.  v6:= v10 @kind wide;
  #L2343be.  call temp:= `copyTo`(v2, v3, v4, v6) @signature `Lokio/Buffer;.copyTo:(Lokio/Buffer;JJ)Lokio/Buffer;` @kind virtual;
  #L2343c4.  v9:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @type ^`okio.BufferedSink` @kind object;
  #L2343c8.  call temp:= `emitCompleteSegments`(v9) @signature `Lokio/BufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind interface;
  #L2343ce.  return v10 @kind wide;
  #L2343d0.  v9:= Exception @type ^`java.io.IOException` @kind object;
  #L2343d2.  v10:= v8.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` @kind boolean;
  #L2343d6.  if v10 != 0 then goto L2343e8;
  #L2343da.  v8.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` := v0 @kind boolean;
  #L2343de.  v10:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheRequest` @type ^`okhttp3.internal.cache.CacheRequest` @kind object;
  #L2343e2.  call `abort`(v10) @signature `Lokhttp3/internal/cache/CacheRequest;.abort:()V` @kind interface;
  #L2343e8.  throw v9;
  catch `java.io.IOException` @[L234372..L23437e] goto L2343d0;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.cache.CacheInterceptor$1` v1 @kind this) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23440c.  v0:= v1.`okhttp3.internal.cache.CacheInterceptor$1.val$source` @type ^`okio.BufferedSource` @kind object;
  #L234410.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L234416.  v0:= temp @kind object;
  #L234418.  return v0 @kind object;
}
