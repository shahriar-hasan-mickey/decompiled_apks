record `okhttp3.internal.cache.CacheStrategy$Factory` @kind class @AccessFlag PUBLIC {
  `int` `okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @AccessFlag PRIVATE;
  `okhttp3.Response` `okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.etag` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.expires` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @AccessFlag FINAL;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @AccessFlag PRIVATE;
  `okhttp3.Request` `okhttp3.internal.cache.CacheStrategy$Factory.request` @AccessFlag FINAL;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheStrategy$Factory` v3 @kind this, `long` v4 , `okhttp3.Request` v6 @kind object, `okhttp3.Response` v7 @kind object) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L234e7c.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L234e82.  v0:= -1I;
  #L234e84.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int` := v0;
  #L234e88.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @type ^`long` := v4 @kind wide;
  #L234e8c.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` := v6 @kind object;
  #L234e90.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` := v7 @kind object;
  #L234e94.  if v7 == 0 then goto L234f70;
  #L234e98.  call temp:= `sentRequestAtMillis`(v7) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L234e9e.  v4:= temp @kind wide;
  #L234ea0.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` := v4 @kind wide;
  #L234ea4.  call temp:= `receivedResponseAtMillis`(v7) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L234eaa.  v4:= temp @kind wide;
  #L234eac.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` := v4 @kind wide;
  #L234eb0.  call temp:= `headers`(v7) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L234eb6.  v4:= temp @kind object;
  #L234eb8.  v5:= 0I;
  #L234eba.  call temp:= `size`(v4) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L234ec0.  v6:= temp;
  #L234ec2.  if v5 >= v6 then goto L234f70;
  #L234ec6.  call temp:= `name`(v4, v5) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L234ecc.  v7:= temp @kind object;
  #L234ece.  call temp:= `value`(v4, v5) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L234ed4.  v1:= temp @kind object;
  #L234ed6.  v2:= "Date" @kind object;
  #L234eda.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L234ee0.  v2:= temp;
  #L234ee2.  if v2 == 0 then goto L234ef8;
  #L234ee6.  call temp:= `parse`(v1) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L234eec.  v7:= temp @kind object;
  #L234eee.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` := v7 @kind object;
  #L234ef2.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @type ^`java.lang.String` := v1 @kind object;
  #L234ef6.  goto L234f6a;
  #L234ef8.  v2:= "Expires" @kind object;
  #L234efc.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L234f02.  v2:= temp;
  #L234f04.  if v2 == 0 then goto L234f16;
  #L234f08.  call temp:= `parse`(v1) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L234f0e.  v7:= temp @kind object;
  #L234f10.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` := v7 @kind object;
  #L234f14.  goto L234f6a;
  #L234f16.  v2:= "Last-Modified" @kind object;
  #L234f1a.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L234f20.  v2:= temp;
  #L234f22.  if v2 == 0 then goto L234f38;
  #L234f26.  call temp:= `parse`(v1) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L234f2c.  v7:= temp @kind object;
  #L234f2e.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` := v7 @kind object;
  #L234f32.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @type ^`java.lang.String` := v1 @kind object;
  #L234f36.  goto L234f6a;
  #L234f38.  v2:= "ETag" @kind object;
  #L234f3c.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L234f42.  v2:= temp;
  #L234f44.  if v2 == 0 then goto L234f4e;
  #L234f48.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` := v1 @kind object;
  #L234f4c.  goto L234f6a;
  #L234f4e.  v2:= "Age" @kind object;
  #L234f52.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L234f58.  v7:= temp;
  #L234f5a.  if v7 == 0 then goto L234f6a;
  #L234f5e.  call temp:= `parseSeconds`(v1, v0) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L234f64.  v7:= temp;
  #L234f66.  v3.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int` := v7;
  #L234f6a.  v5:= v5 + 1;
  #L234f6e.  goto L234ec2;
  #L234f70.  return @kind void;
}
procedure `long` `cacheResponseAge`(`okhttp3.internal.cache.CacheStrategy$Factory` v9 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.cacheResponseAge:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L234a64.  v0:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L234a68.  v1:= 0L;
  #L234a6c.  if v0 == 0 then goto L234a86;
  #L234a70.  v3:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L234a74.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L234a7a.  v5:= temp @kind wide;
  #L234a7c.  v3:= v3 - v5 @kind long;
  #L234a7e.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L234a84.  v1:= temp @kind wide;
  #L234a86.  v0:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int`;
  #L234a8a.  v3:= -1I;
  #L234a8c.  if v0 == v3 then goto L234aaa;
  #L234a90.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L234a94.  v3:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int`;
  #L234a98.  v3:= (`long`) v3 @kind i2l;
  #L234a9a.  call temp:= `toMillis`(v0, v3) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L234aa0.  v3:= temp @kind wide;
  #L234aa2.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L234aa8.  v1:= temp @kind wide;
  #L234aaa.  v3:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L234aae.  v5:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` @kind wide;
  #L234ab2.  v5:= v3 - v5 @kind long;
  #L234ab6.  v7:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @type ^`long` @kind wide;
  #L234aba.  v7:= v7 - v3 @kind long;
  #L234abc.  v1:= v1 + v5 @kind long;
  #L234abe.  v1:= v1 + v7 @kind long;
  #L234ac0.  return v1 @kind wide;
}
procedure `long` `computeFreshnessLifetime`(`okhttp3.internal.cache.CacheStrategy$Factory` v7 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.computeFreshnessLifetime:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L234ad4.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L234ad8.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L234ade.  v0:= temp @kind object;
  #L234ae0.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L234ae6.  v1:= temp;
  #L234ae8.  v2:= -1I;
  #L234aea.  if v1 == v2 then goto L234b06;
  #L234aee.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L234af2.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L234af8.  v0:= temp;
  #L234afa.  v2:= (`long`) v0 @kind i2l;
  #L234afc.  call temp:= `toMillis`(v1, v2) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L234b02.  v0:= temp @kind wide;
  #L234b04.  return v0 @kind wide;
  #L234b06.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L234b0a.  v1:= 0L;
  #L234b0e.  if v0 == 0 then goto L234b44;
  #L234b12.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L234b16.  if v0 == 0 then goto L234b24;
  #L234b1a.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L234b20.  v3:= temp @kind wide;
  #L234b22.  goto L234b28;
  #L234b24.  v3:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L234b28.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L234b2c.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L234b32.  v5:= temp @kind wide;
  #L234b34.  v3:= v5 - v3 @kind long;
  #L234b38.  v0:= lcmp(v3, v1);
  #L234b3c.  if v0 <= 0 then goto L234b42;
  #L234b40.  v1:= v3 @kind wide;
  #L234b42.  return v1 @kind wide;
  #L234b44.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L234b48.  if v0 == 0 then goto L234ba2;
  #L234b4c.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L234b50.  call temp:= `request`(v0) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L234b56.  v0:= temp @kind object;
  #L234b58.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L234b5e.  v0:= temp @kind object;
  #L234b60.  call temp:= `query`(v0) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @kind virtual;
  #L234b66.  v0:= temp @kind object;
  #L234b68.  if v0 != 0 then goto L234ba2;
  #L234b6c.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L234b70.  if v0 == 0 then goto L234b7e;
  #L234b74.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L234b7a.  v3:= temp @kind wide;
  #L234b7c.  goto L234b82;
  #L234b7e.  v3:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` @kind wide;
  #L234b82.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L234b86.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L234b8c.  v5:= temp @kind wide;
  #L234b8e.  v3:= v3 - v5 @kind long;
  #L234b90.  v0:= lcmp(v3, v1);
  #L234b94.  if v0 <= 0 then goto L234ba0;
  #L234b98.  v0:= 10L;
  #L234b9c.  v1:= v3 / v0 @kind long;
  #L234ba0.  return v1 @kind wide;
  #L234ba2.  return v1 @kind wide;
}
procedure `okhttp3.internal.cache.CacheStrategy` `getCandidate`(`okhttp3.internal.cache.CacheStrategy$Factory` v13 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.getCandidate:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L234bfc.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L234c00.  v1:= 0I;
  #L234c02.  if v0 != 0 then goto L234c16;
  #L234c06.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L234c0a.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L234c0e.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L234c14.  return v0 @kind object;
  #L234c16.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L234c1a.  call temp:= `isHttps`(v0) @signature `Lokhttp3/Request;.isHttps:()Z` @kind virtual;
  #L234c20.  v0:= temp;
  #L234c22.  if v0 == 0 then goto L234c46;
  #L234c26.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L234c2a.  call temp:= `handshake`(v0) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L234c30.  v0:= temp @kind object;
  #L234c32.  if v0 != 0 then goto L234c46;
  #L234c36.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L234c3a.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L234c3e.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L234c44.  return v0 @kind object;
  #L234c46.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L234c4a.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L234c4e.  call temp:= `isCacheable`(v0, v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind static;
  #L234c54.  v0:= temp;
  #L234c56.  if v0 != 0 then goto L234c6a;
  #L234c5a.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L234c5e.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L234c62.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L234c68.  return v0 @kind object;
  #L234c6a.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L234c6e.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L234c74.  v0:= temp @kind object;
  #L234c76.  call temp:= `noCache`(v0) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L234c7c.  v2:= temp;
  #L234c7e.  if v2 != 0 then goto L234e5a;
  #L234c82.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L234c86.  call temp:= `hasConditions`(v2) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @kind static;
  #L234c8c.  v2:= temp;
  #L234c8e.  if v2 == 0 then goto L234c96;
  #L234c92.  goto L234e5a;
  #L234c96.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L234c9a.  call temp:= `cacheControl`(v2) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L234ca0.  v2:= temp @kind object;
  #L234ca2.  call temp:= `immutable`(v2) @signature `Lokhttp3/CacheControl;.immutable:()Z` @kind virtual;
  #L234ca8.  v3:= temp;
  #L234caa.  if v3 == 0 then goto L234cbe;
  #L234cae.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L234cb2.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L234cb6.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L234cbc.  return v0 @kind object;
  #L234cbe.  call temp:= `cacheResponseAge`(v13) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.cacheResponseAge:()J` @kind direct;
  #L234cc4.  v3:= temp @kind wide;
  #L234cc6.  call temp:= `computeFreshnessLifetime`(v13) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.computeFreshnessLifetime:()J` @kind direct;
  #L234ccc.  v5:= temp @kind wide;
  #L234cce.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L234cd4.  v7:= temp;
  #L234cd6.  v8:= -1I;
  #L234cd8.  if v7 == v8 then goto L234cfa;
  #L234cdc.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L234ce0.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L234ce6.  v9:= temp;
  #L234ce8.  v9:= (`long`) v9 @kind i2l;
  #L234cea.  call temp:= `toMillis`(v7, v9) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L234cf0.  v9:= temp @kind wide;
  #L234cf2.  call temp:= `min`(v5, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L234cf8.  v5:= temp @kind wide;
  #L234cfa.  call temp:= `minFreshSeconds`(v0) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L234d00.  v7:= temp;
  #L234d02.  v9:= 0L;
  #L234d06.  if v7 == v8 then goto L234d22;
  #L234d0a.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L234d0e.  call temp:= `minFreshSeconds`(v0) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L234d14.  v11:= temp;
  #L234d16.  v11:= (`long`) v11 @kind i2l;
  #L234d18.  call temp:= `toMillis`(v7, v11) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L234d1e.  v11:= temp @kind wide;
  #L234d20.  goto L234d24;
  #L234d22.  v11:= v9 @kind wide;
  #L234d24.  call temp:= `mustRevalidate`(v2) @signature `Lokhttp3/CacheControl;.mustRevalidate:()Z` @kind virtual;
  #L234d2a.  v7:= temp;
  #L234d2c.  if v7 != 0 then goto L234d52;
  #L234d30.  call temp:= `maxStaleSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L234d36.  v7:= temp;
  #L234d38.  if v7 == v8 then goto L234d52;
  #L234d3c.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L234d40.  call temp:= `maxStaleSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L234d46.  v0:= temp;
  #L234d48.  v8:= (`long`) v0 @kind i2l;
  #L234d4a.  call temp:= `toMillis`(v7, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L234d50.  v9:= temp @kind wide;
  #L234d52.  call temp:= `noCache`(v2) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L234d58.  v0:= temp;
  #L234d5a.  if v0 != 0 then goto L234dc8;
  #L234d5e.  v11:= v11 + v3 @kind long;
  #L234d60.  v9:= v9 + v5 @kind long;
  #L234d62.  v0:= lcmp(v11, v9);
  #L234d66.  if v0 >= 0 then goto L234dc8;
  #L234d6a.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L234d6e.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L234d74.  v0:= temp @kind object;
  #L234d76.  v2:= lcmp(v11, v5);
  #L234d7a.  if v2 < 0 then goto L234d8c;
  #L234d7e.  v2:= "Warning" @kind object;
  #L234d82.  v5:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L234d86.  call temp:= `addHeader`(v0, v2, v5) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L234d8c.  v5:= 86400000L;
  #L234d92.  v2:= lcmp(v3, v5);
  #L234d96.  if v2 <= 0 then goto L234db4;
  #L234d9a.  call temp:= `isFreshnessLifetimeHeuristic`(v13) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.isFreshnessLifetimeHeuristic:()Z` @kind direct;
  #L234da0.  v2:= temp;
  #L234da2.  if v2 == 0 then goto L234db4;
  #L234da6.  v2:= "Warning" @kind object;
  #L234daa.  v3:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L234dae.  call temp:= `addHeader`(v0, v2, v3) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L234db4.  v2:= new `okhttp3.internal.cache.CacheStrategy`;
  #L234db8.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L234dbe.  v0:= temp @kind object;
  #L234dc0.  call `<init>`(v2, v1, v0) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L234dc6.  return v2 @kind object;
  #L234dc8.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` @kind object;
  #L234dcc.  if v0 == 0 then goto L234dd6;
  #L234dd0.  v1:= "If-None-Match" @kind object;
  #L234dd4.  goto L234df8;
  #L234dd6.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L234dda.  if v0 == 0 then goto L234de8;
  #L234dde.  v1:= "If-Modified-Since" @kind object;
  #L234de2.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @type ^`java.lang.String` @kind object;
  #L234de6.  goto L234df8;
  #L234de8.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L234dec.  if v0 == 0 then goto L234e4a;
  #L234df0.  v1:= "If-Modified-Since" @kind object;
  #L234df4.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @type ^`java.lang.String` @kind object;
  #L234df8.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L234dfc.  call temp:= `headers`(v2) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L234e02.  v2:= temp @kind object;
  #L234e04.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L234e0a.  v2:= temp @kind object;
  #L234e0c.  v3:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L234e10.  call `addLenient`(v3, v2, v1, v0) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L234e16.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L234e1a.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L234e20.  v0:= temp @kind object;
  #L234e22.  call temp:= `build`(v2) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L234e28.  v1:= temp @kind object;
  #L234e2a.  call temp:= `headers`(v0, v1) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L234e30.  v0:= temp @kind object;
  #L234e32.  call temp:= `build`(v0) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L234e38.  v0:= temp @kind object;
  #L234e3a.  v1:= new `okhttp3.internal.cache.CacheStrategy`;
  #L234e3e.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L234e42.  call `<init>`(v1, v0, v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L234e48.  return v1 @kind object;
  #L234e4a.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L234e4e.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L234e52.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L234e58.  return v0 @kind object;
  #L234e5a.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L234e5e.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L234e62.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L234e68.  return v0 @kind object;
}
procedure `boolean` `hasConditions`(`okhttp3.Request` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2349ec.  v0:= "If-Modified-Since" @kind object;
  #L2349f0.  call temp:= `header`(v1, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2349f6.  v0:= temp @kind object;
  #L2349f8.  if v0 != 0 then goto L234a12;
  #L2349fc.  v0:= "If-None-Match" @kind object;
  #L234a00.  call temp:= `header`(v1, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L234a06.  v1:= temp @kind object;
  #L234a08.  if v1 == 0 then goto L234a0e;
  #L234a0c.  goto L234a12;
  #L234a0e.  v1:= 0I;
  #L234a10.  goto L234a14;
  #L234a12.  v1:= 1I;
  #L234a14.  return v1;
}
procedure `boolean` `isFreshnessLifetimeHeuristic`(`okhttp3.internal.cache.CacheStrategy$Factory` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.isFreshnessLifetimeHeuristic:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L234a28.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L234a2c.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L234a32.  v0:= temp @kind object;
  #L234a34.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L234a3a.  v0:= temp;
  #L234a3c.  v1:= -1I;
  #L234a3e.  if v0 != v1 then goto L234a4e;
  #L234a42.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L234a46.  if v0 != 0 then goto L234a4e;
  #L234a4a.  v0:= 1I;
  #L234a4c.  goto L234a50;
  #L234a4e.  v0:= 0I;
  #L234a50.  return v0;
}
procedure `okhttp3.internal.cache.CacheStrategy` `get`(`okhttp3.internal.cache.CacheStrategy$Factory` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.get:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L234bb4.  call temp:= `getCandidate`(v2) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.getCandidate:()Lokhttp3/internal/cache/CacheStrategy;` @kind direct;
  #L234bba.  v0:= temp @kind object;
  #L234bbc.  v1:= v0.`okhttp3.internal.cache.CacheStrategy.networkRequest` @type ^`okhttp3.Request` @kind object;
  #L234bc0.  if v1 == 0 then goto L234bea;
  #L234bc4.  v1:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L234bc8.  call temp:= `cacheControl`(v1) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L234bce.  v1:= temp @kind object;
  #L234bd0.  call temp:= `onlyIfCached`(v1) @signature `Lokhttp3/CacheControl;.onlyIfCached:()Z` @kind virtual;
  #L234bd6.  v1:= temp;
  #L234bd8.  if v1 == 0 then goto L234bea;
  #L234bdc.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L234be0.  v1:= 0I;
  #L234be2.  call `<init>`(v0, v1, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L234be8.  return v0 @kind object;
  #L234bea.  return v0 @kind object;
}
