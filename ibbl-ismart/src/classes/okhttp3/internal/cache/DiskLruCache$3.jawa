record `okhttp3.internal.cache.DiskLruCache$3` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `okhttp3.internal.cache.DiskLruCache$3.delegate` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$3.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$3` v1 @kind this, `okhttp3.internal.cache.DiskLruCache` v2 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.<init>:(Lokhttp3/internal/cache/DiskLruCache;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2352d0.  v1.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` := v2 @kind object;
  #L2352d4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2352da.  v2:= new `java.util.ArrayList`;
  #L2352de.  v0:= v1.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L2352e2.  v0:= v0.`okhttp3.internal.cache.DiskLruCache.lruEntries` @type ^`java.util.LinkedHashMap` @kind object;
  #L2352e6.  call temp:= `values`(v0) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L2352ec.  v0:= temp @kind object;
  #L2352ee.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2352f4.  call temp:= `iterator`(v2) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L2352fa.  v2:= temp @kind object;
  #L2352fc.  v1.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` := v2 @kind object;
  #L235300.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.internal.cache.DiskLruCache$3` v4 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2351f4.  v0:= v4.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L2351f8.  v1:= 1I;
  #L2351fa.  if v0 == 0 then goto L235200;
  #L2351fe.  return v1;
  #L235200.  v0:= v4.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L235204.  @monitorenter v0
  #L235206.  v2:= v4.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L23520a.  v2:= v2.`okhttp3.internal.cache.DiskLruCache.closed` @type ^`boolean` @kind boolean;
  #L23520e.  v3:= 0I;
  #L235210.  if v2 == 0 then goto L235218;
  #L235214.  @monitorexit v0
  #L235216.  return v3;
  #L235218.  v2:= v4.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` @kind object;
  #L23521c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L235222.  v2:= temp;
  #L235224.  if v2 == 0 then goto L23524e;
  #L235228.  v2:= v4.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` @kind object;
  #L23522c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L235232.  v2:= temp @kind object;
  #L235234.  v2:= (`okhttp3.internal.cache.DiskLruCache$Entry`) v2 @kind object;
  #L235238.  call temp:= `snapshot`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.snapshot:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L23523e.  v2:= temp @kind object;
  #L235240.  if v2 != 0 then goto L235246;
  #L235244.  goto L235218;
  #L235246.  v4.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v2 @kind object;
  #L23524a.  @monitorexit v0
  #L23524c.  return v1;
  #L23524e.  @monitorexit v0
  #L235250.  return v3;
  #L235252.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L235254.  @monitorexit v0
  #L235256.  throw v1;
  #L235258.  return @kind void;
  catch `java.lang.Throwable` @[L235206..L235256] goto L235252;
}
procedure `java.lang.Object` `next`(`okhttp3.internal.cache.DiskLruCache$3` v1 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L235278.  call temp:= `next`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L23527e.  v0:= temp @kind object;
  #L235280.  return v0 @kind object;
}
procedure `okhttp3.internal.cache.DiskLruCache$Snapshot` `next`(`okhttp3.internal.cache.DiskLruCache$3` v1 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L235294.  call temp:= `hasNext`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.hasNext:()Z` @kind virtual;
  #L23529a.  v0:= temp;
  #L23529c.  if v0 == 0 then goto L2352b4;
  #L2352a0.  v0:= v1.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L2352a4.  v1.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v0 @kind object;
  #L2352a8.  v0:= 0I;
  #L2352aa.  v1.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v0 @kind object;
  #L2352ae.  v0:= v1.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L2352b2.  return v0 @kind object;
  #L2352b4.  v0:= new `java.util.NoSuchElementException`;
  #L2352b8.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L2352be.  throw v0;
}
procedure `void` `remove`(`okhttp3.internal.cache.DiskLruCache$3` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L235314.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L235318.  if v0 == 0 then goto L235340;
  #L23531c.  v1:= 0I;
  #L23531e.  v2:= v3.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L235322.  call temp:= `access$000`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.access$000:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Ljava/lang/String;` @kind static;
  #L235328.  v0:= temp @kind object;
  #L23532a.  call temp:= `remove`(v2, v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.remove:(Ljava/lang/String;)Z` @kind virtual;
  #L235330.  goto L23533a;
  #L235332.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L235334.  v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L235338.  throw v0;
  #L23533a.  v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L23533e.  return @kind void;
  #L235340.  v0:= new `java.lang.IllegalStateException`;
  #L235344.  v1:= "remove() before next()" @kind object;
  #L235348.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23534e.  throw v0;
  catch `java.io.IOException` @[L23531e..L235330] goto L23533a;
  catch `java.lang.Throwable` @[L23531e..L235330] goto L235332;
}
