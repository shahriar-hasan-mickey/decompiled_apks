record `okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.atomic.AtomicBoolean` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @AccessFlag PRIVATE;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @AccessFlag PRIVATE;
  `java.util.concurrent.CountDownLatch` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EXCEPTION_MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PUBLIC_SUFFIX_RESOURCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L247de8.  v0:= 1I;
  #L247dea.  v0:= new `byte`[v0];
  #L247dee.  v1:= 0I;
  #L247df0.  v2:= 42I;
  #L247df4.  v0[v1]:= v2 @kind byte;
  #L247df8.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @type ^`byte`[] := v0 @kind object;
  #L247dfc.  v0:= new `java.lang.String`[v1];
  #L247e00.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] := v0 @kind object;
  #L247e04.  v0:= "*" @kind object;
  #L247e08.  temp:= new `java.lang.String`[v0];
  #L247e0e.  v0:= temp @kind object;
  #L247e10.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @type ^`java.lang.String`[] := v0 @kind object;
  #L247e14.  v0:= new `okhttp3.internal.publicsuffix.PublicSuffixDatabase`;
  #L247e18.  call `<init>`(v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @kind direct;
  #L247e1e.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` := v0 @kind object;
  #L247e22.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v2 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L247e34.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L247e3a.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L247e3e.  v1:= 0I;
  #L247e40.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L247e46.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L247e4a.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L247e4e.  v1:= 1I;
  #L247e50.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L247e56.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` := v0 @kind object;
  #L247e5a.  return @kind void;
}
procedure `java.lang.String` `binarySearchBytes`(`byte`[] v16 @kind object, `byte`[][] v17 @kind object, `int` v18 ) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L247a14.  v0:= v16 @kind object;
  #L247a18.  v1:= v17 @kind object;
  #L247a1c.  v2:= length @variable v0;
  #L247a1e.  v3:= 0I;
  #L247a20.  v4:= v2;
  #L247a22.  v2:= 0I;
  #L247a24.  if v2 >= v4 then goto L247b2a;
  #L247a28.  v5:= v2 + v4 @kind int;
  #L247a2c.  v5:= v5 / 2;
  #L247a30.  v6:= 10I;
  #L247a34.  v7:= -1I;
  #L247a36.  if v5 <= v7 then goto L247a48;
  #L247a3a.  v8:= v0[v5] @kind byte;
  #L247a3e.  if v8 == v6 then goto L247a48;
  #L247a42.  v5:= v5 + -1;
  #L247a46.  goto L247a30;
  #L247a48.  v5:= v5 + 1;
  #L247a4c.  v8:= 1I;
  #L247a4e.  v9:= 1I;
  #L247a50.  v10:= v5 + v9 @kind int;
  #L247a54.  v11:= v0[v10] @kind byte;
  #L247a58.  if v11 == v6 then goto L247a62;
  #L247a5c.  v9:= v9 + 1;
  #L247a60.  goto L247a50;
  #L247a62.  v6:= v10 - v5 @kind int;
  #L247a66.  v11:= v18;
  #L247a6a.  v9:= 0I;
  #L247a6c.  v12:= 0I;
  #L247a6e.  v13:= 0I;
  #L247a70.  if v9 == 0 then goto L247a80;
  #L247a74.  v9:= 46I;
  #L247a78.  v9:= 0I;
  #L247a7a.  v14:= 46I;
  #L247a7e.  goto L247a8c;
  #L247a80.  v14:= v1[v11] @kind object;
  #L247a84.  v14:= v14[v12] @kind byte;
  #L247a88.  v14:= v14 ^& 255;
  #L247a8c.  v15:= v5 + v13 @kind int;
  #L247a90.  v15:= v0[v15] @kind byte;
  #L247a94.  v15:= v15 ^& 255;
  #L247a98.  v14:= v14 - v15 @kind int;
  #L247a9a.  if v14 == 0 then goto L247aa0;
  #L247a9e.  goto L247ac0;
  #L247aa0.  v13:= v13 + 1;
  #L247aa4.  v12:= v12 + 1;
  #L247aa8.  if v13 != v6 then goto L247aae;
  #L247aac.  goto L247ac0;
  #L247aae.  v15:= v1[v11] @kind object;
  #L247ab2.  v15:= length @variable v15;
  #L247ab4.  if v15 != v12 then goto L247a70;
  #L247ab8.  v9:= length @variable v1;
  #L247aba.  v9:= v9 - v8 @kind int;
  #L247abc.  if v11 != v9 then goto L247b20;
  #L247ac0.  if v14 >= 0 then goto L247acc;
  #L247ac4.  v5:= v5 + -1;
  #L247ac8.  v4:= v5;
  #L247aca.  goto L247a24;
  #L247acc.  if v14 <= 0 then goto L247ad8;
  #L247ad0.  v10:= v10 + 1;
  #L247ad4.  v2:= v10;
  #L247ad6.  goto L247a24;
  #L247ad8.  v7:= v6 - v13 @kind int;
  #L247adc.  v8:= v1[v11] @kind object;
  #L247ae0.  v8:= length @variable v8;
  #L247ae2.  v8:= v8 - v12 @kind int;
  #L247ae4.  v11:= v11 + 1;
  #L247ae8.  v9:= length @variable v1;
  #L247aea.  if v11 >= v9 then goto L247af8;
  #L247aee.  v9:= v1[v11] @kind object;
  #L247af2.  v9:= length @variable v9;
  #L247af4.  v8:= v8 + v9 @kind int;
  #L247af6.  goto L247ae4;
  #L247af8.  if v8 >= v7 then goto L247b04;
  #L247afc.  v5:= v5 + -1;
  #L247b00.  v4:= v5;
  #L247b02.  goto L247a24;
  #L247b04.  if v8 <= v7 then goto L247b10;
  #L247b08.  v10:= v10 + 1;
  #L247b0c.  v2:= v10;
  #L247b0e.  goto L247a24;
  #L247b10.  v1:= new `java.lang.String`;
  #L247b14.  v2:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L247b18.  call `<init>`(v1, v0, v5, v6, v2) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L247b1e.  goto L247b2c;
  #L247b20.  v11:= v11 + 1;
  #L247b24.  v9:= 1I;
  #L247b26.  v12:= -1I;
  #L247b28.  goto L247a70;
  #L247b2a.  v1:= 0I;
  #L247b2c.  return v1 @kind object;
}
procedure `java.lang.String`[] `findMatchingRule`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v7 @kind this, `java.lang.String`[] v8 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.findMatchingRule:([Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L247c18.  v0:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L247c1c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L247c22.  v0:= temp;
  #L247c24.  v1:= 0I;
  #L247c26.  v2:= 1I;
  #L247c28.  if v0 != 0 then goto L247c44;
  #L247c2c.  v0:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L247c30.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L247c36.  v0:= temp;
  #L247c38.  if v0 == 0 then goto L247c44;
  #L247c3c.  call `readTheListUninterruptibly`(v7) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheListUninterruptibly:()V` @kind direct;
  #L247c42.  goto L247c4e;
  #L247c44.  v0:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L247c48.  call `await`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L247c4e.  @monitorenter v7
  #L247c50.  v0:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L247c54.  if v0 == 0 then goto L247d86;
  #L247c58.  @monitorexit v7
  #L247c5a.  v0:= length @variable v8;
  #L247c5c.  v0:= new `byte`[][v0];
  #L247c60.  v3:= 0I;
  #L247c62.  v4:= length @variable v8;
  #L247c64.  if v3 >= v4 then goto L247c82;
  #L247c68.  v4:= v8[v3] @kind object;
  #L247c6c.  v5:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L247c70.  call temp:= `getBytes`(v4, v5) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L247c76.  v4:= temp @kind object;
  #L247c78.  v0[v3]:= v4 @kind object;
  #L247c7c.  v3:= v3 + 1;
  #L247c80.  goto L247c62;
  #L247c82.  v8:= 0I;
  #L247c84.  v3:= length @variable v0;
  #L247c86.  v4:= 0I;
  #L247c88.  if v8 >= v3 then goto L247ca4;
  #L247c8c.  v3:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L247c90.  call temp:= `binarySearchBytes`(v3, v0, v8) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L247c96.  v3:= temp @kind object;
  #L247c98.  if v3 == 0 then goto L247c9e;
  #L247c9c.  goto L247ca6;
  #L247c9e.  v8:= v8 + 1;
  #L247ca2.  goto L247c84;
  #L247ca4.  v3:= v4 @kind object;
  #L247ca6.  v8:= length @variable v0;
  #L247ca8.  if v8 <= v2 then goto L247ce2;
  #L247cac.  call temp:= `clone`(v0) @signature `[[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L247cb2.  v8:= temp @kind object;
  #L247cb4.  v8:= (`byte`[][]) v8 @kind object;
  #L247cb8.  v5:= 0I;
  #L247cba.  v6:= length @variable v8;
  #L247cbc.  v6:= v6 - v2 @kind int;
  #L247cbe.  if v5 >= v6 then goto L247ce2;
  #L247cc2.  v6:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @type ^`byte`[] @kind object;
  #L247cc6.  v8[v5]:= v6 @kind object;
  #L247cca.  v6:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L247cce.  call temp:= `binarySearchBytes`(v6, v8, v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L247cd4.  v6:= temp @kind object;
  #L247cd6.  if v6 == 0 then goto L247cdc;
  #L247cda.  goto L247ce4;
  #L247cdc.  v5:= v5 + 1;
  #L247ce0.  goto L247cba;
  #L247ce2.  v6:= v4 @kind object;
  #L247ce4.  if v6 == 0 then goto L247d08;
  #L247ce8.  v8:= length @variable v0;
  #L247cea.  v8:= v8 - v2 @kind int;
  #L247cec.  if v1 >= v8 then goto L247d08;
  #L247cf0.  v8:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] @kind object;
  #L247cf4.  call temp:= `binarySearchBytes`(v8, v0, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L247cfa.  v8:= temp @kind object;
  #L247cfc.  if v8 == 0 then goto L247d02;
  #L247d00.  goto L247d0a;
  #L247d02.  v1:= v1 + 1;
  #L247d06.  goto L247ce8;
  #L247d08.  v8:= v4 @kind object;
  #L247d0a.  if v8 == 0 then goto L247d3e;
  #L247d0e.  v0:= new `java.lang.StringBuilder`;
  #L247d12.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L247d18.  v1:= "!" @kind object;
  #L247d1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L247d22.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L247d28.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L247d2e.  v8:= temp @kind object;
  #L247d30.  v0:= "\\." @kind object;
  #L247d34.  call temp:= `split`(v8, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L247d3a.  v8:= temp @kind object;
  #L247d3c.  return v8 @kind object;
  #L247d3e.  if v3 != 0 then goto L247d4c;
  #L247d42.  if v6 != 0 then goto L247d4c;
  #L247d46.  v8:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @type ^`java.lang.String`[] @kind object;
  #L247d4a.  return v8 @kind object;
  #L247d4c.  if v3 == 0 then goto L247d5e;
  #L247d50.  v8:= "\\." @kind object;
  #L247d54.  call temp:= `split`(v3, v8) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L247d5a.  v8:= temp @kind object;
  #L247d5c.  goto L247d62;
  #L247d5e.  v8:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] @kind object;
  #L247d62.  if v6 == 0 then goto L247d74;
  #L247d66.  v0:= "\\." @kind object;
  #L247d6a.  call temp:= `split`(v6, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L247d70.  v0:= temp @kind object;
  #L247d72.  goto L247d78;
  #L247d74.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] @kind object;
  #L247d78.  v1:= length @variable v8;
  #L247d7a.  v2:= length @variable v0;
  #L247d7c.  if v1 <= v2 then goto L247d82;
  #L247d80.  goto L247d84;
  #L247d82.  v8:= v0 @kind object;
  #L247d84.  return v8 @kind object;
  #L247d86.  v8:= new `java.lang.IllegalStateException`;
  #L247d8a.  v0:= "Unable to load publicsuffixes.gz resource from the classpath." @kind object;
  #L247d8e.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L247d94.  throw v8;
  #L247d96.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L247d98.  @monitorexit v7
  #L247d9a.  throw v8;
  #L247d9c.  return @kind void;
  catch `java.lang.InterruptedException` @[L247c44..L247c4e] goto L247c4e;
  catch `java.lang.Throwable` @[L247c50..L247c5a] goto L247d96;
  catch `java.lang.Throwable` @[L247d86..L247d9a] goto L247d96;
}
procedure `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L247dd0.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L247dd4.  return v0 @kind object;
}
procedure `void` `readTheList`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v3 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheList:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L247e6c.  v0:= constclass @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L247e70.  v1:= "publicsuffixes.gz" @kind object;
  #L247e74.  call temp:= `getResourceAsStream`(v0, v1) @signature `Ljava/lang/Class;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L247e7a.  v0:= temp @kind object;
  #L247e7c.  if v0 != 0 then goto L247e82;
  #L247e80.  return @kind void;
  #L247e82.  v1:= new `okio.GzipSource`;
  #L247e86.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L247e8c.  v0:= temp @kind object;
  #L247e8e.  call `<init>`(v1, v0) @signature `Lokio/GzipSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L247e94.  call temp:= `buffer`(v1) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L247e9a.  v0:= temp @kind object;
  #L247e9c.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L247ea2.  v1:= temp;
  #L247ea4.  v1:= new `byte`[v1];
  #L247ea8.  call `readFully`(v0, v1) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L247eae.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L247eb4.  v2:= temp;
  #L247eb6.  v2:= new `byte`[v2];
  #L247eba.  call `readFully`(v0, v2) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L247ec0.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L247ec6.  @monitorenter v3
  #L247ec8.  v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] := v1 @kind object;
  #L247ecc.  v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] := v2 @kind object;
  #L247ed0.  @monitorexit v3
  #L247ed2.  v0:= v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L247ed6.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L247edc.  return @kind void;
  #L247ede.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L247ee0.  @monitorexit v3
  #L247ee2.  throw v0;
  #L247ee4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L247ee6.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L247eec.  throw v1;
  catch `java.lang.Throwable` @[L247e9c..L247ec0] goto L247ee4;
  catch `java.lang.Throwable` @[L247ec8..L247ed2] goto L247ede;
  catch `java.lang.Throwable` @[L247ee0..L247ee2] goto L247ede;
}
procedure `void` `readTheListUninterruptibly`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v5 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheListUninterruptibly:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L247f20.  v0:= 0I;
  #L247f22.  call `readTheList`(v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheList:()V` @kind direct;
  #L247f28.  if v0 == 0 then goto L247f3a;
  #L247f2c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L247f32.  v0:= temp @kind object;
  #L247f34.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L247f3a.  return @kind void;
  #L247f3c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L247f3e.  goto L247f6a;
  #L247f40.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L247f42.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L247f48.  v2:= temp @kind object;
  #L247f4a.  v3:= 5I;
  #L247f4c.  v4:= "Failed to read public suffix list" @kind object;
  #L247f50.  call `log`(v2, v3, v4, v1) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L247f56.  if v0 == 0 then goto L247f68;
  #L247f5a.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L247f60.  v0:= temp @kind object;
  #L247f62.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L247f68.  return @kind void;
  #L247f6a.  if v0 == 0 then goto L247f7c;
  #L247f6e.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L247f74.  v0:= temp @kind object;
  #L247f76.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L247f7c.  throw v1;
  #L247f7e.  v0:= 1I;
  #L247f80.  goto L247f22;
  catch `java.io.InterruptedIOException` @[L247f22..L247f28] goto L247f7e;
  catch `java.io.IOException` @[L247f22..L247f28] goto L247f40;
  catch `java.lang.Throwable` @[L247f22..L247f28] goto L247f3c;
  catch `java.lang.Throwable` @[L247f42..L247f56] goto L247f3c;
}
procedure `java.lang.String` `getEffectiveTldPlusOne`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L247b40.  if v7 == 0 then goto L247bf6;
  #L247b44.  call temp:= `toUnicode`(v7) @signature `Ljava/net/IDN;.toUnicode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L247b4a.  v0:= temp @kind object;
  #L247b4c.  v1:= "\\." @kind object;
  #L247b50.  call temp:= `split`(v0, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L247b56.  v0:= temp @kind object;
  #L247b58.  call temp:= `findMatchingRule`(v6, v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.findMatchingRule:([Ljava/lang/String;)[Ljava/lang/String;` @kind direct;
  #L247b5e.  v1:= temp @kind object;
  #L247b60.  v2:= length @variable v0;
  #L247b62.  v3:= length @variable v1;
  #L247b64.  v4:= 33I;
  #L247b68.  v5:= 0I;
  #L247b6a.  if v2 != v3 then goto L247b82;
  #L247b6e.  v2:= v1[v5] @kind object;
  #L247b72.  call temp:= `charAt`(v2, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L247b78.  v2:= temp;
  #L247b7a.  if v2 == v4 then goto L247b82;
  #L247b7e.  v7:= 0I;
  #L247b80.  return v7 @kind object;
  #L247b82.  v2:= v1[v5] @kind object;
  #L247b86.  call temp:= `charAt`(v2, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L247b8c.  v2:= temp;
  #L247b8e.  if v2 != v4 then goto L247b9a;
  #L247b92.  v0:= length @variable v0;
  #L247b94.  v1:= length @variable v1;
  #L247b96.  v0:= v0 - v1 @kind int;
  #L247b98.  goto L247ba4;
  #L247b9a.  v0:= length @variable v0;
  #L247b9c.  v1:= length @variable v1;
  #L247b9e.  v1:= v1 + 1;
  #L247ba2.  v0:= v0 - v1 @kind int;
  #L247ba4.  v1:= new `java.lang.StringBuilder`;
  #L247ba8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L247bae.  v2:= "\\." @kind object;
  #L247bb2.  call temp:= `split`(v7, v2) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L247bb8.  v7:= temp @kind object;
  #L247bba.  v2:= length @variable v7;
  #L247bbc.  if v0 >= v2 then goto L247bda;
  #L247bc0.  v2:= v7[v0] @kind object;
  #L247bc4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L247bca.  v2:= 46I;
  #L247bce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L247bd4.  v0:= v0 + 1;
  #L247bd8.  goto L247bba;
  #L247bda.  call temp:= `length`(v1) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L247be0.  v7:= temp;
  #L247be2.  v7:= v7 + -1;
  #L247be6.  call temp:= `deleteCharAt`(v1, v7) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L247bec.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L247bf2.  v7:= temp @kind object;
  #L247bf4.  return v7 @kind object;
  #L247bf6.  v7:= new `java.lang.NullPointerException`;
  #L247bfa.  v0:= "domain == null" @kind object;
  #L247bfe.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L247c04.  throw v7;
  #L247c06.  return @kind void;
}
procedure `void` `setListBytes`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v0 @kind this, `byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.setListBytes:([B[B)V` @AccessFlag  {
    temp;

  #L247fb0.  v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] := v1 @kind object;
  #L247fb4.  v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] := v2 @kind object;
  #L247fb8.  v1:= v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L247fbc.  v2:= 1I;
  #L247fbe.  call `set`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L247fc4.  v1:= v0.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L247fc8.  call `countDown`(v1) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L247fce.  return @kind void;
}
