record `okhttp3.internal.JavaNetHeaders$1` @kind class @AccessFlag FINAL extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`okhttp3.internal.JavaNetHeaders$1` v0 @kind this) @signature `Lokhttp3/internal/JavaNetHeaders$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L233270.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L233276.  return @kind void;
}
procedure `int` `compare`(`okhttp3.internal.JavaNetHeaders$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/internal/JavaNetHeaders$1;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L233214.  v1:= (`java.lang.String`) v1 @kind object;
  #L233218.  v2:= (`java.lang.String`) v2 @kind object;
  #L23321c.  call temp:= `compare`(v0, v1, v2) @signature `Lokhttp3/internal/JavaNetHeaders$1;.compare:(Ljava/lang/String;Ljava/lang/String;)I` @kind virtual;
  #L233222.  v1:= temp;
  #L233224.  return v1;
}
procedure `int` `compare`(`okhttp3.internal.JavaNetHeaders$1` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/JavaNetHeaders$1;.compare:(Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L233238.  if v2 != v3 then goto L233240;
  #L23323c.  v2:= 0I;
  #L23323e.  return v2;
  #L233240.  if v2 != 0 then goto L233248;
  #L233244.  v2:= -1I;
  #L233246.  return v2;
  #L233248.  if v3 != 0 then goto L233250;
  #L23324c.  v2:= 1I;
  #L23324e.  return v2;
  #L233250.  v0:= `@@java.lang.String.CASE_INSENSITIVE_ORDER` @type ^`java.util.Comparator` @kind object;
  #L233254.  call temp:= `compare`(v0, v2, v3) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L23325a.  v2:= temp;
  #L23325c.  return v2;
}
