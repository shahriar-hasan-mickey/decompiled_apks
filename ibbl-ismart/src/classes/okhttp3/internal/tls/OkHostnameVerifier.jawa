record `okhttp3.internal.tls.OkHostnameVerifier` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `int` `@@okhttp3.internal.tls.OkHostnameVerifier.ALT_DNS_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.tls.OkHostnameVerifier.ALT_IPA_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.tls.OkHostnameVerifier` `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L24921c.  v0:= new `okhttp3.internal.tls.OkHostnameVerifier`;
  #L249220.  call `<init>`(v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<init>:()V` @kind direct;
  #L249226.  `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` := v0 @kind object;
  #L24922a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.tls.OkHostnameVerifier` v0 @kind this) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L24923c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L249242.  return @kind void;
}
procedure `java.util.List` `allSubjectAltNames`(`java.security.cert.X509Certificate` v4 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L249110.  v0:= 7I;
  #L249112.  call temp:= `getSubjectAltNames`(v4, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L249118.  v0:= temp @kind object;
  #L24911a.  v1:= 2I;
  #L24911c.  call temp:= `getSubjectAltNames`(v4, v1) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L249122.  v4:= temp @kind object;
  #L249124.  v1:= new `java.util.ArrayList`;
  #L249128.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24912e.  v2:= temp;
  #L249130.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L249136.  v3:= temp;
  #L249138.  v2:= v2 + v3 @kind int;
  #L24913a.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L249140.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L249146.  call temp:= `addAll`(v1, v4) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L24914c.  return v1 @kind object;
}
procedure `java.util.List` `getSubjectAltNames`(`java.security.cert.X509Certificate` v4 @kind object, `int` v5 ) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L249160.  v0:= new `java.util.ArrayList`;
  #L249164.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24916a.  call temp:= `getSubjectAlternativeNames`(v4) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L249170.  v4:= temp @kind object;
  #L249172.  if v4 != 0 then goto L249180;
  #L249176.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L24917c.  v4:= temp @kind object;
  #L24917e.  return v4 @kind object;
  #L249180.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L249186.  v4:= temp @kind object;
  #L249188.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24918e.  v1:= temp;
  #L249190.  if v1 == 0 then goto L2491ee;
  #L249194.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24919a.  v1:= temp @kind object;
  #L24919c.  v1:= (`java.util.List`) v1 @kind object;
  #L2491a0.  if v1 == 0 then goto L249188;
  #L2491a4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2491aa.  v2:= temp;
  #L2491ac.  v3:= 2I;
  #L2491ae.  if v2 >= v3 then goto L2491b4;
  #L2491b2.  goto L249188;
  #L2491b4.  v2:= 0I;
  #L2491b6.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2491bc.  v2:= temp @kind object;
  #L2491be.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L2491c2.  if v2 != 0 then goto L2491c8;
  #L2491c6.  goto L249188;
  #L2491c8.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2491ce.  v2:= temp;
  #L2491d0.  if v2 != v5 then goto L249188;
  #L2491d4.  v2:= 1I;
  #L2491d6.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2491dc.  v1:= temp @kind object;
  #L2491de.  v1:= (`java.lang.String`) v1 @kind object;
  #L2491e2.  if v1 == 0 then goto L249188;
  #L2491e6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2491ec.  goto L249188;
  #L2491ee.  return v0 @kind object;
  #L2491f0.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L2491f6.  v4:= temp @kind object;
  #L2491f8.  return v4 @kind object;
  catch `java.security.cert.CertificateParsingException` @[L24916a..L2491ec] goto L2491f0;
}
procedure `boolean` `verifyHostname`(`okhttp3.internal.tls.OkHostnameVerifier` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L249064.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L249068.  call temp:= `toLowerCase`(v2, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L24906e.  v2:= temp @kind object;
  #L249070.  v0:= 2I;
  #L249072.  call temp:= `getSubjectAltNames`(v3, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L249078.  v3:= temp @kind object;
  #L24907a.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L249080.  v3:= temp @kind object;
  #L249082.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L249088.  v0:= temp;
  #L24908a.  if v0 == 0 then goto L2490aa;
  #L24908e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L249094.  v0:= temp @kind object;
  #L249096.  v0:= (`java.lang.String`) v0 @kind object;
  #L24909a.  call temp:= `verifyHostname`(v1, v2, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/lang/String;)Z` @kind virtual;
  #L2490a0.  v0:= temp;
  #L2490a2.  if v0 == 0 then goto L249082;
  #L2490a6.  v2:= 1I;
  #L2490a8.  return v2;
  #L2490aa.  v2:= 0I;
  #L2490ac.  return v2;
}
procedure `boolean` `verifyIpAddress`(`okhttp3.internal.tls.OkHostnameVerifier` v4 @kind this, `java.lang.String` v5 @kind object, `java.security.cert.X509Certificate` v6 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyIpAddress:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2490c0.  v0:= 7I;
  #L2490c2.  call temp:= `getSubjectAltNames`(v6, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L2490c8.  v6:= temp @kind object;
  #L2490ca.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2490d0.  v0:= temp;
  #L2490d2.  v1:= 0I;
  #L2490d4.  v2:= 0I;
  #L2490d6.  if v2 >= v0 then goto L2490fc;
  #L2490da.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2490e0.  v3:= temp @kind object;
  #L2490e2.  v3:= (`java.lang.String`) v3 @kind object;
  #L2490e6.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2490ec.  v3:= temp;
  #L2490ee.  if v3 == 0 then goto L2490f6;
  #L2490f2.  v5:= 1I;
  #L2490f4.  return v5;
  #L2490f6.  v2:= v2 + 1;
  #L2490fa.  goto L2490d6;
  #L2490fc.  return v1;
}
procedure `boolean` `verify`(`okhttp3.internal.tls.OkHostnameVerifier` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L248e60.  call temp:= `verifyAsIpAddress`(v2) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L248e66.  v0:= temp;
  #L248e68.  if v0 == 0 then goto L248e76;
  #L248e6c.  call temp:= `verifyIpAddress`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyIpAddress:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L248e72.  v2:= temp;
  #L248e74.  goto L248e7e;
  #L248e76.  call temp:= `verifyHostname`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L248e7c.  v2:= temp;
  #L248e7e.  return v2;
}
procedure `boolean` `verify`(`okhttp3.internal.tls.OkHostnameVerifier` v1 @kind this, `java.lang.String` v2 @kind object, `javax.net.ssl.SSLSession` v3 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L248e90.  v0:= 0I;
  #L248e92.  call temp:= `getPeerCertificates`(v3) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L248e98.  v3:= temp @kind object;
  #L248e9a.  v3:= v3[v0] @kind object;
  #L248e9e.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L248ea2.  call temp:= `verify`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L248ea8.  v2:= temp;
  #L248eaa.  return v2;
  #L248eac.  return v0;
  catch `javax.net.ssl.SSLException` @[L248e92..L248eaa] goto L248eac;
}
procedure `boolean` `verifyHostname`(`okhttp3.internal.tls.OkHostnameVerifier` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L248ed0.  v0:= 0I;
  #L248ed2.  if v7 == 0 then goto L249050;
  #L248ed6.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L248edc.  v1:= temp;
  #L248ede.  if v1 == 0 then goto L249050;
  #L248ee2.  v1:= "." @kind object;
  #L248ee6.  call temp:= `startsWith`(v7, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L248eec.  v1:= temp;
  #L248eee.  if v1 != 0 then goto L249050;
  #L248ef2.  v1:= ".." @kind object;
  #L248ef6.  call temp:= `endsWith`(v7, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L248efc.  v1:= temp;
  #L248efe.  if v1 == 0 then goto L248f06;
  #L248f02.  goto L249050;
  #L248f06.  if v8 == 0 then goto L24904e;
  #L248f0a.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L248f10.  v1:= temp;
  #L248f12.  if v1 == 0 then goto L24904e;
  #L248f16.  v1:= "." @kind object;
  #L248f1a.  call temp:= `startsWith`(v8, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L248f20.  v1:= temp;
  #L248f22.  if v1 != 0 then goto L24904e;
  #L248f26.  v1:= ".." @kind object;
  #L248f2a.  call temp:= `endsWith`(v8, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L248f30.  v1:= temp;
  #L248f32.  if v1 == 0 then goto L248f3a;
  #L248f36.  goto L24904e;
  #L248f3a.  v1:= "." @kind object;
  #L248f3e.  call temp:= `endsWith`(v7, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L248f44.  v1:= temp;
  #L248f46.  v2:= 46I;
  #L248f4a.  if v1 != 0 then goto L248f6c;
  #L248f4e.  v1:= new `java.lang.StringBuilder`;
  #L248f52.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L248f58.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L248f5e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L248f64.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L248f6a.  v7:= temp @kind object;
  #L248f6c.  v1:= "." @kind object;
  #L248f70.  call temp:= `endsWith`(v8, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L248f76.  v1:= temp;
  #L248f78.  if v1 != 0 then goto L248f9a;
  #L248f7c.  v1:= new `java.lang.StringBuilder`;
  #L248f80.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L248f86.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L248f8c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L248f92.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L248f98.  v8:= temp @kind object;
  #L248f9a.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L248f9e.  call temp:= `toLowerCase`(v8, v1) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L248fa4.  v8:= temp @kind object;
  #L248fa6.  v1:= "*" @kind object;
  #L248faa.  call temp:= `contains`(v8, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L248fb0.  v1:= temp;
  #L248fb2.  if v1 != 0 then goto L248fc0;
  #L248fb6.  call temp:= `equals`(v7, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L248fbc.  v7:= temp;
  #L248fbe.  return v7;
  #L248fc0.  v1:= "*." @kind object;
  #L248fc4.  call temp:= `startsWith`(v8, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L248fca.  v1:= temp;
  #L248fcc.  if v1 == 0 then goto L24904c;
  #L248fd0.  v1:= 42I;
  #L248fd4.  v3:= 1I;
  #L248fd6.  call temp:= `indexOf`(v8, v1, v3) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L248fdc.  v1:= temp;
  #L248fde.  v4:= -1I;
  #L248fe0.  if v1 == v4 then goto L248fe6;
  #L248fe4.  goto L24904c;
  #L248fe6.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L248fec.  v1:= temp;
  #L248fee.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L248ff4.  v5:= temp;
  #L248ff6.  if v1 >= v5 then goto L248ffc;
  #L248ffa.  return v0;
  #L248ffc.  v1:= "*." @kind object;
  #L249000.  call temp:= `equals`(v1, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249006.  v1:= temp;
  #L249008.  if v1 == 0 then goto L24900e;
  #L24900c.  return v0;
  #L24900e.  call temp:= `substring`(v8, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L249014.  v8:= temp @kind object;
  #L249016.  call temp:= `endsWith`(v7, v8) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L24901c.  v1:= temp;
  #L24901e.  if v1 != 0 then goto L249024;
  #L249022.  return v0;
  #L249024.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L24902a.  v1:= temp;
  #L24902c.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L249032.  v8:= temp;
  #L249034.  v1:= v1 - v8 @kind int;
  #L249036.  if v1 <= 0 then goto L24904a;
  #L24903a.  v1:= v1 - v3 @kind int;
  #L24903c.  call temp:= `lastIndexOf`(v7, v2, v1) @signature `Ljava/lang/String;.lastIndexOf:(II)I` @kind virtual;
  #L249042.  v7:= temp;
  #L249044.  if v7 == v4 then goto L24904a;
  #L249048.  return v0;
  #L24904a.  return v3;
  #L24904c.  return v0;
  #L24904e.  return v0;
  #L249050.  return v0;
}
