record `okhttp3.internal.http.BridgeInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.CookieJar` `okhttp3.internal.http.BridgeInterceptor.cookieJar` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http.BridgeInterceptor` v0 @kind this, `okhttp3.CookieJar` v1 @kind object) @signature `Lokhttp3/internal/http/BridgeInterceptor;.<init>:(Lokhttp3/CookieJar;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L239d80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L239d86.  v0.`okhttp3.internal.http.BridgeInterceptor.cookieJar` @type ^`okhttp3.CookieJar` := v1 @kind object;
  #L239d8a.  return @kind void;
}
procedure `java.lang.String` `cookieHeader`(`okhttp3.internal.http.BridgeInterceptor` v5 @kind this, `java.util.List` v6 @kind object) @signature `Lokhttp3/internal/http/BridgeInterceptor;.cookieHeader:(Ljava/util/List;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L239ac0.  v0:= new `java.lang.StringBuilder`;
  #L239ac4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L239aca.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L239ad0.  v1:= temp;
  #L239ad2.  v2:= 0I;
  #L239ad4.  if v2 >= v1 then goto L239b1e;
  #L239ad8.  if v2 <= 0 then goto L239ae6;
  #L239adc.  v3:= "; " @kind object;
  #L239ae0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L239ae6.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L239aec.  v3:= temp @kind object;
  #L239aee.  v3:= (`okhttp3.Cookie`) v3 @kind object;
  #L239af2.  call temp:= `name`(v3) @signature `Lokhttp3/Cookie;.name:()Ljava/lang/String;` @kind virtual;
  #L239af8.  v4:= temp @kind object;
  #L239afa.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L239b00.  v4:= 61I;
  #L239b04.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L239b0a.  call temp:= `value`(v3) @signature `Lokhttp3/Cookie;.value:()Ljava/lang/String;` @kind virtual;
  #L239b10.  v3:= temp @kind object;
  #L239b12.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L239b18.  v2:= v2 + 1;
  #L239b1c.  goto L239ad4;
  #L239b1e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L239b24.  v6:= temp @kind object;
  #L239b26.  return v6 @kind object;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.http.BridgeInterceptor` v7 @kind this, `okhttp3.Interceptor$Chain` v8 @kind object) @signature `Lokhttp3/internal/http/BridgeInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L239b38.  call temp:= `request`(v8) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L239b3e.  v0:= temp @kind object;
  #L239b40.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L239b46.  v1:= temp @kind object;
  #L239b48.  call temp:= `body`(v0) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L239b4e.  v2:= temp @kind object;
  #L239b50.  v3:= -1L;
  #L239b54.  if v2 == 0 then goto L239bbc;
  #L239b58.  call temp:= `contentType`(v2) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L239b5e.  v5:= temp @kind object;
  #L239b60.  if v5 == 0 then goto L239b76;
  #L239b64.  v6:= "Content-Type" @kind object;
  #L239b68.  call temp:= `toString`(v5) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L239b6e.  v5:= temp @kind object;
  #L239b70.  call temp:= `header`(v1, v6, v5) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L239b76.  call temp:= `contentLength`(v2) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L239b7c.  v5:= temp @kind wide;
  #L239b7e.  v2:= lcmp(v5, v3);
  #L239b82.  if v2 == 0 then goto L239ba4;
  #L239b86.  v2:= "Content-Length" @kind object;
  #L239b8a.  call temp:= `toString`(v5) @signature `Ljava/lang/Long;.toString:(J)Ljava/lang/String;` @kind static;
  #L239b90.  v5:= temp @kind object;
  #L239b92.  call temp:= `header`(v1, v2, v5) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L239b98.  v2:= "Transfer-Encoding" @kind object;
  #L239b9c.  call temp:= `removeHeader`(v1, v2) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L239ba2.  goto L239bbc;
  #L239ba4.  v2:= "Transfer-Encoding" @kind object;
  #L239ba8.  v5:= "chunked" @kind object;
  #L239bac.  call temp:= `header`(v1, v2, v5) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L239bb2.  v2:= "Content-Length" @kind object;
  #L239bb6.  call temp:= `removeHeader`(v1, v2) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L239bbc.  v2:= "Host" @kind object;
  #L239bc0.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L239bc6.  v2:= temp @kind object;
  #L239bc8.  v5:= 0I;
  #L239bca.  if v2 != 0 then goto L239be8;
  #L239bce.  v2:= "Host" @kind object;
  #L239bd2.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L239bd8.  v6:= temp @kind object;
  #L239bda.  call temp:= `hostHeader`(v6, v5) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L239be0.  v6:= temp @kind object;
  #L239be2.  call temp:= `header`(v1, v2, v6) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L239be8.  v2:= "Connection" @kind object;
  #L239bec.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L239bf2.  v2:= temp @kind object;
  #L239bf4.  if v2 != 0 then goto L239c06;
  #L239bf8.  v2:= "Connection" @kind object;
  #L239bfc.  v6:= "Keep-Alive" @kind object;
  #L239c00.  call temp:= `header`(v1, v2, v6) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L239c06.  v2:= "Accept-Encoding" @kind object;
  #L239c0a.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L239c10.  v2:= temp @kind object;
  #L239c12.  if v2 != 0 then goto L239c36;
  #L239c16.  v2:= "Range" @kind object;
  #L239c1a.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L239c20.  v2:= temp @kind object;
  #L239c22.  if v2 != 0 then goto L239c36;
  #L239c26.  v5:= 1I;
  #L239c28.  v2:= "Accept-Encoding" @kind object;
  #L239c2c.  v6:= "gzip" @kind object;
  #L239c30.  call temp:= `header`(v1, v2, v6) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L239c36.  v2:= v7.`okhttp3.internal.http.BridgeInterceptor.cookieJar` @type ^`okhttp3.CookieJar` @kind object;
  #L239c3a.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L239c40.  v6:= temp @kind object;
  #L239c42.  call temp:= `loadForRequest`(v2, v6) @signature `Lokhttp3/CookieJar;.loadForRequest:(Lokhttp3/HttpUrl;)Ljava/util/List;` @kind interface;
  #L239c48.  v2:= temp @kind object;
  #L239c4a.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L239c50.  v6:= temp;
  #L239c52.  if v6 != 0 then goto L239c68;
  #L239c56.  v6:= "Cookie" @kind object;
  #L239c5a.  call temp:= `cookieHeader`(v7, v2) @signature `Lokhttp3/internal/http/BridgeInterceptor;.cookieHeader:(Ljava/util/List;)Ljava/lang/String;` @kind direct;
  #L239c60.  v2:= temp @kind object;
  #L239c62.  call temp:= `header`(v1, v6, v2) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L239c68.  v2:= "User-Agent" @kind object;
  #L239c6c.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L239c72.  v2:= temp @kind object;
  #L239c74.  if v2 != 0 then goto L239c8a;
  #L239c78.  v2:= "User-Agent" @kind object;
  #L239c7c.  call temp:= `userAgent`() @signature `Lokhttp3/internal/Version;.userAgent:()Ljava/lang/String;` @kind static;
  #L239c82.  v6:= temp @kind object;
  #L239c84.  call temp:= `header`(v1, v2, v6) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L239c8a.  call temp:= `build`(v1) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L239c90.  v1:= temp @kind object;
  #L239c92.  call temp:= `proceed`(v8, v1) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L239c98.  v8:= temp @kind object;
  #L239c9a.  v1:= v7.`okhttp3.internal.http.BridgeInterceptor.cookieJar` @type ^`okhttp3.CookieJar` @kind object;
  #L239c9e.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L239ca4.  v2:= temp @kind object;
  #L239ca6.  call temp:= `headers`(v8) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L239cac.  v6:= temp @kind object;
  #L239cae.  call `receiveHeaders`(v1, v2, v6) @signature `Lokhttp3/internal/http/HttpHeaders;.receiveHeaders:(Lokhttp3/CookieJar;Lokhttp3/HttpUrl;Lokhttp3/Headers;)V` @kind static;
  #L239cb4.  call temp:= `newBuilder`(v8) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L239cba.  v1:= temp @kind object;
  #L239cbc.  call temp:= `request`(v1, v0) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L239cc2.  v0:= temp @kind object;
  #L239cc4.  if v5 == 0 then goto L239d64;
  #L239cc8.  v1:= "gzip" @kind object;
  #L239ccc.  v2:= "Content-Encoding" @kind object;
  #L239cd0.  call temp:= `header`(v8, v2) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L239cd6.  v2:= temp @kind object;
  #L239cd8.  call temp:= `equalsIgnoreCase`(v1, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L239cde.  v1:= temp;
  #L239ce0.  if v1 == 0 then goto L239d64;
  #L239ce4.  call temp:= `hasBody`(v8) @signature `Lokhttp3/internal/http/HttpHeaders;.hasBody:(Lokhttp3/Response;)Z` @kind static;
  #L239cea.  v1:= temp;
  #L239cec.  if v1 == 0 then goto L239d64;
  #L239cf0.  v1:= new `okio.GzipSource`;
  #L239cf4.  call temp:= `body`(v8) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L239cfa.  v2:= temp @kind object;
  #L239cfc.  call temp:= `source`(v2) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L239d02.  v2:= temp @kind object;
  #L239d04.  call `<init>`(v1, v2) @signature `Lokio/GzipSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L239d0a.  call temp:= `headers`(v8) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L239d10.  v2:= temp @kind object;
  #L239d12.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L239d18.  v2:= temp @kind object;
  #L239d1a.  v5:= "Content-Encoding" @kind object;
  #L239d1e.  call temp:= `removeAll`(v2, v5) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L239d24.  v2:= temp @kind object;
  #L239d26.  v5:= "Content-Length" @kind object;
  #L239d2a.  call temp:= `removeAll`(v2, v5) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L239d30.  v2:= temp @kind object;
  #L239d32.  call temp:= `build`(v2) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L239d38.  v2:= temp @kind object;
  #L239d3a.  call temp:= `headers`(v0, v2) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L239d40.  v2:= "Content-Type" @kind object;
  #L239d44.  call temp:= `header`(v8, v2) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L239d4a.  v8:= temp @kind object;
  #L239d4c.  v2:= new `okhttp3.internal.http.RealResponseBody`;
  #L239d50.  call temp:= `buffer`(v1) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L239d56.  v1:= temp @kind object;
  #L239d58.  call `<init>`(v2, v8, v3, v1) @signature `Lokhttp3/internal/http/RealResponseBody;.<init>:(Ljava/lang/String;JLokio/BufferedSource;)V` @kind direct;
  #L239d5e.  call temp:= `body`(v0, v2) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L239d64.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L239d6a.  v8:= temp @kind object;
  #L239d6c.  return v8 @kind object;
}
