record `okhttp3.internal.http.CallServerInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `boolean` `okhttp3.internal.http.CallServerInterceptor.forWebSocket` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http.CallServerInterceptor` v0 @kind this, `boolean` v1 ) @signature `Lokhttp3/internal/http/CallServerInterceptor;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L23a124.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23a12a.  v0.`okhttp3.internal.http.CallServerInterceptor.forWebSocket` @type ^`boolean` := v1 @kind boolean;
  #L23a12e.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.http.CallServerInterceptor` v11 @kind this, `okhttp3.Interceptor$Chain` v12 @kind object) @signature `Lokhttp3/internal/http/CallServerInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L239dd8.  v12:= (`okhttp3.internal.http.RealInterceptorChain`) v12 @kind object;
  #L239ddc.  call temp:= `httpStream`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.httpStream:()Lokhttp3/internal/http/HttpCodec;` @kind virtual;
  #L239de2.  v0:= temp @kind object;
  #L239de4.  call temp:= `streamAllocation`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.streamAllocation:()Lokhttp3/internal/connection/StreamAllocation;` @kind virtual;
  #L239dea.  v1:= temp @kind object;
  #L239dec.  call temp:= `connection`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.connection:()Lokhttp3/Connection;` @kind virtual;
  #L239df2.  v2:= temp @kind object;
  #L239df4.  v2:= (`okhttp3.internal.connection.RealConnection`) v2 @kind object;
  #L239df8.  call temp:= `request`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.request:()Lokhttp3/Request;` @kind virtual;
  #L239dfe.  v3:= temp @kind object;
  #L239e00.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L239e06.  v4:= temp @kind wide;
  #L239e08.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L239e0e.  v6:= temp @kind object;
  #L239e10.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L239e16.  v7:= temp @kind object;
  #L239e18.  call `requestHeadersStart`(v6, v7) @signature `Lokhttp3/EventListener;.requestHeadersStart:(Lokhttp3/Call;)V` @kind virtual;
  #L239e1e.  call `writeRequestHeaders`(v0, v3) @signature `Lokhttp3/internal/http/HttpCodec;.writeRequestHeaders:(Lokhttp3/Request;)V` @kind interface;
  #L239e24.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L239e2a.  v6:= temp @kind object;
  #L239e2c.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L239e32.  v7:= temp @kind object;
  #L239e34.  call `requestHeadersEnd`(v6, v7, v3) @signature `Lokhttp3/EventListener;.requestHeadersEnd:(Lokhttp3/Call;Lokhttp3/Request;)V` @kind virtual;
  #L239e3a.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L239e40.  v6:= temp @kind object;
  #L239e42.  call temp:= `permitsRequestBody`(v6) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L239e48.  v6:= temp;
  #L239e4a.  v7:= 0I;
  #L239e4c.  if v6 == 0 then goto L239f24;
  #L239e50.  call temp:= `body`(v3) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L239e56.  v6:= temp @kind object;
  #L239e58.  if v6 == 0 then goto L239f24;
  #L239e5c.  v6:= "100-continue" @kind object;
  #L239e60.  v8:= "Expect" @kind object;
  #L239e64.  call temp:= `header`(v3, v8) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L239e6a.  v8:= temp @kind object;
  #L239e6c.  call temp:= `equalsIgnoreCase`(v6, v8) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L239e72.  v6:= temp;
  #L239e74.  if v6 == 0 then goto L239e9e;
  #L239e78.  call `flushRequest`(v0) @signature `Lokhttp3/internal/http/HttpCodec;.flushRequest:()V` @kind interface;
  #L239e7e.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L239e84.  v6:= temp @kind object;
  #L239e86.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L239e8c.  v7:= temp @kind object;
  #L239e8e.  call `responseHeadersStart`(v6, v7) @signature `Lokhttp3/EventListener;.responseHeadersStart:(Lokhttp3/Call;)V` @kind virtual;
  #L239e94.  v6:= 1I;
  #L239e96.  call temp:= `readResponseHeaders`(v0, v6) @signature `Lokhttp3/internal/http/HttpCodec;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind interface;
  #L239e9c.  v7:= temp @kind object;
  #L239e9e.  if v7 != 0 then goto L239f12;
  #L239ea2.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L239ea8.  v2:= temp @kind object;
  #L239eaa.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L239eb0.  v6:= temp @kind object;
  #L239eb2.  call `requestBodyStart`(v2, v6) @signature `Lokhttp3/EventListener;.requestBodyStart:(Lokhttp3/Call;)V` @kind virtual;
  #L239eb8.  call temp:= `body`(v3) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L239ebe.  v2:= temp @kind object;
  #L239ec0.  call temp:= `contentLength`(v2) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L239ec6.  v8:= temp @kind wide;
  #L239ec8.  v2:= new `okhttp3.internal.http.CallServerInterceptor$CountingSink`;
  #L239ecc.  call temp:= `createRequestBody`(v0, v3, v8) @signature `Lokhttp3/internal/http/HttpCodec;.createRequestBody:(Lokhttp3/Request;J)Lokio/Sink;` @kind interface;
  #L239ed2.  v6:= temp @kind object;
  #L239ed4.  call `<init>`(v2, v6) @signature `Lokhttp3/internal/http/CallServerInterceptor$CountingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L239eda.  call temp:= `buffer`(v2) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L239ee0.  v6:= temp @kind object;
  #L239ee2.  call temp:= `body`(v3) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L239ee8.  v8:= temp @kind object;
  #L239eea.  call `writeTo`(v8, v6) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/BufferedSink;)V` @kind virtual;
  #L239ef0.  call `close`(v6) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L239ef6.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L239efc.  v6:= temp @kind object;
  #L239efe.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L239f04.  v8:= temp @kind object;
  #L239f06.  v9:= v2.`okhttp3.internal.http.CallServerInterceptor$CountingSink.successfulCount` @type ^`long` @kind wide;
  #L239f0a.  call `requestBodyEnd`(v6, v8, v9) @signature `Lokhttp3/EventListener;.requestBodyEnd:(Lokhttp3/Call;J)V` @kind virtual;
  #L239f10.  goto L239f24;
  #L239f12.  call temp:= `isMultiplexed`(v2) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed:()Z` @kind virtual;
  #L239f18.  v2:= temp;
  #L239f1a.  if v2 != 0 then goto L239f24;
  #L239f1e.  call `noNewStreams`(v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.noNewStreams:()V` @kind virtual;
  #L239f24.  call `finishRequest`(v0) @signature `Lokhttp3/internal/http/HttpCodec;.finishRequest:()V` @kind interface;
  #L239f2a.  v2:= 0I;
  #L239f2c.  if v7 != 0 then goto L239f4e;
  #L239f30.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L239f36.  v6:= temp @kind object;
  #L239f38.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L239f3e.  v7:= temp @kind object;
  #L239f40.  call `responseHeadersStart`(v6, v7) @signature `Lokhttp3/EventListener;.responseHeadersStart:(Lokhttp3/Call;)V` @kind virtual;
  #L239f46.  call temp:= `readResponseHeaders`(v0, v2) @signature `Lokhttp3/internal/http/HttpCodec;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind interface;
  #L239f4c.  v7:= temp @kind object;
  #L239f4e.  call temp:= `request`(v7, v3) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L239f54.  v6:= temp @kind object;
  #L239f56.  call temp:= `connection`(v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L239f5c.  v7:= temp @kind object;
  #L239f5e.  call temp:= `handshake`(v7) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L239f64.  v7:= temp @kind object;
  #L239f66.  call temp:= `handshake`(v6, v7) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L239f6c.  v6:= temp @kind object;
  #L239f6e.  call temp:= `sentRequestAtMillis`(v6, v4) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L239f74.  v6:= temp @kind object;
  #L239f76.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L239f7c.  v7:= temp @kind wide;
  #L239f7e.  call temp:= `receivedResponseAtMillis`(v6, v7) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L239f84.  v6:= temp @kind object;
  #L239f86.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L239f8c.  v6:= temp @kind object;
  #L239f8e.  call temp:= `code`(v6) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L239f94.  v7:= temp;
  #L239f96.  v8:= 100I;
  #L239f9a.  if v7 != v8 then goto L239fee;
  #L239f9e.  call temp:= `readResponseHeaders`(v0, v2) @signature `Lokhttp3/internal/http/HttpCodec;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind interface;
  #L239fa4.  v2:= temp @kind object;
  #L239fa6.  call temp:= `request`(v2, v3) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L239fac.  v2:= temp @kind object;
  #L239fae.  call temp:= `connection`(v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L239fb4.  v3:= temp @kind object;
  #L239fb6.  call temp:= `handshake`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L239fbc.  v3:= temp @kind object;
  #L239fbe.  call temp:= `handshake`(v2, v3) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L239fc4.  v2:= temp @kind object;
  #L239fc6.  call temp:= `sentRequestAtMillis`(v2, v4) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L239fcc.  v2:= temp @kind object;
  #L239fce.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L239fd4.  v3:= temp @kind wide;
  #L239fd6.  call temp:= `receivedResponseAtMillis`(v2, v3) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L239fdc.  v2:= temp @kind object;
  #L239fde.  call temp:= `build`(v2) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L239fe4.  v6:= temp @kind object;
  #L239fe6.  call temp:= `code`(v6) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L239fec.  v7:= temp;
  #L239fee.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L239ff4.  v2:= temp @kind object;
  #L239ff6.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L239ffc.  v12:= temp @kind object;
  #L239ffe.  call `responseHeadersEnd`(v2, v12, v6) @signature `Lokhttp3/EventListener;.responseHeadersEnd:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind virtual;
  #L23a004.  v12:= v11.`okhttp3.internal.http.CallServerInterceptor.forWebSocket` @type ^`boolean` @kind boolean;
  #L23a008.  if v12 == 0 then goto L23a032;
  #L23a00c.  v12:= 101I;
  #L23a010.  if v7 != v12 then goto L23a032;
  #L23a014.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L23a01a.  v12:= temp @kind object;
  #L23a01c.  v0:= `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` @kind object;
  #L23a020.  call temp:= `body`(v12, v0) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L23a026.  v12:= temp @kind object;
  #L23a028.  call temp:= `build`(v12) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L23a02e.  v12:= temp @kind object;
  #L23a030.  goto L23a052;
  #L23a032.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L23a038.  v12:= temp @kind object;
  #L23a03a.  call temp:= `openResponseBody`(v0, v6) @signature `Lokhttp3/internal/http/HttpCodec;.openResponseBody:(Lokhttp3/Response;)Lokhttp3/ResponseBody;` @kind interface;
  #L23a040.  v0:= temp @kind object;
  #L23a042.  call temp:= `body`(v12, v0) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L23a048.  v12:= temp @kind object;
  #L23a04a.  call temp:= `build`(v12) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L23a050.  v12:= temp @kind object;
  #L23a052.  v0:= "close" @kind object;
  #L23a056.  call temp:= `request`(v12) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L23a05c.  v2:= temp @kind object;
  #L23a05e.  v3:= "Connection" @kind object;
  #L23a062.  call temp:= `header`(v2, v3) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L23a068.  v2:= temp @kind object;
  #L23a06a.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L23a070.  v0:= temp;
  #L23a072.  if v0 != 0 then goto L23a092;
  #L23a076.  v0:= "close" @kind object;
  #L23a07a.  v2:= "Connection" @kind object;
  #L23a07e.  call temp:= `header`(v12, v2) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L23a084.  v2:= temp @kind object;
  #L23a086.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L23a08c.  v0:= temp;
  #L23a08e.  if v0 == 0 then goto L23a098;
  #L23a092.  call `noNewStreams`(v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.noNewStreams:()V` @kind virtual;
  #L23a098.  v0:= 204I;
  #L23a09c.  if v7 == v0 then goto L23a0a8;
  #L23a0a0.  v0:= 205I;
  #L23a0a4.  if v7 != v0 then goto L23a0c4;
  #L23a0a8.  call temp:= `body`(v12) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L23a0ae.  v0:= temp @kind object;
  #L23a0b0.  call temp:= `contentLength`(v0) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L23a0b6.  v0:= temp @kind wide;
  #L23a0b8.  v2:= 0L;
  #L23a0bc.  v4:= lcmp(v0, v2);
  #L23a0c0.  if v4 > 0 then goto L23a0c6;
  #L23a0c4.  return v12 @kind object;
  #L23a0c6.  v0:= new `java.net.ProtocolException`;
  #L23a0ca.  v1:= new `java.lang.StringBuilder`;
  #L23a0ce.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23a0d4.  v2:= "HTTP " @kind object;
  #L23a0d8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23a0de.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L23a0e4.  v2:= " had non-zero Content-Length: " @kind object;
  #L23a0e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23a0ee.  call temp:= `body`(v12) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L23a0f4.  v12:= temp @kind object;
  #L23a0f6.  call temp:= `contentLength`(v12) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L23a0fc.  v2:= temp @kind wide;
  #L23a0fe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L23a104.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23a10a.  v12:= temp @kind object;
  #L23a10c.  call `<init>`(v0, v12) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23a112.  throw v0;
}
