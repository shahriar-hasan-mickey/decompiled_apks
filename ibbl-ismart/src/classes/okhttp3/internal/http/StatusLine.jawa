record `okhttp3.internal.http.StatusLine` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.http.StatusLine.code` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `okhttp3.internal.http.StatusLine.message` @AccessFlag PUBLIC_FINAL;
  `okhttp3.Protocol` `okhttp3.internal.http.StatusLine.protocol` @AccessFlag PUBLIC_FINAL;
}
global `int` `@@okhttp3.internal.http.StatusLine.HTTP_CONTINUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http.StatusLine.HTTP_PERM_REDIRECT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http.StatusLine.HTTP_TEMP_REDIRECT` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.http.StatusLine` v0 @kind this, `okhttp3.Protocol` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L23bb5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23bb62.  v0.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L23bb66.  v0.`okhttp3.internal.http.StatusLine.code` @type ^`int` := v2;
  #L23bb6a.  v0.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` := v3 @kind object;
  #L23bb6e.  return @kind void;
}
procedure `okhttp3.internal.http.StatusLine` `get`(`okhttp3.Response` v3 @kind object) @signature `Lokhttp3/internal/http/StatusLine;.get:(Lokhttp3/Response;)Lokhttp3/internal/http/StatusLine;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L23b930.  v0:= new `okhttp3.internal.http.StatusLine`;
  #L23b934.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L23b93a.  v1:= temp @kind object;
  #L23b93c.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L23b942.  v2:= temp;
  #L23b944.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L23b94a.  v3:= temp @kind object;
  #L23b94c.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L23b952.  return v0 @kind object;
}
procedure `okhttp3.internal.http.StatusLine` `parse`(`java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L23b964.  v0:= "HTTP/1." @kind object;
  #L23b968.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L23b96e.  v0:= temp;
  #L23b970.  v1:= 32I;
  #L23b974.  v2:= 4I;
  #L23b976.  v3:= 9I;
  #L23b97a.  if v0 == 0 then goto L23ba1a;
  #L23b97e.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L23b984.  v0:= temp;
  #L23b986.  if v0 < v3 then goto L23b9ec;
  #L23b98a.  v0:= 8I;
  #L23b98e.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L23b994.  v0:= temp;
  #L23b996.  if v0 != v1 then goto L23b9ec;
  #L23b99a.  v0:= 7I;
  #L23b99c.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L23b9a2.  v0:= temp;
  #L23b9a4.  v0:= v0 + -48;
  #L23b9a8.  if v0 != 0 then goto L23b9b2;
  #L23b9ac.  v0:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L23b9b0.  goto L23ba30;
  #L23b9b2.  v4:= 1I;
  #L23b9b4.  if v0 != v4 then goto L23b9be;
  #L23b9b8.  v0:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L23b9bc.  goto L23ba30;
  #L23b9be.  v0:= new `java.net.ProtocolException`;
  #L23b9c2.  v1:= new `java.lang.StringBuilder`;
  #L23b9c6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23b9cc.  v2:= "Unexpected status line: " @kind object;
  #L23b9d0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23b9d6.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23b9dc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23b9e2.  v8:= temp @kind object;
  #L23b9e4.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23b9ea.  throw v0;
  #L23b9ec.  v0:= new `java.net.ProtocolException`;
  #L23b9f0.  v1:= new `java.lang.StringBuilder`;
  #L23b9f4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23b9fa.  v2:= "Unexpected status line: " @kind object;
  #L23b9fe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ba04.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ba0a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23ba10.  v8:= temp @kind object;
  #L23ba12.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23ba18.  throw v0;
  #L23ba1a.  v0:= "ICY " @kind object;
  #L23ba1e.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L23ba24.  v0:= temp;
  #L23ba26.  if v0 == 0 then goto L23bb0e;
  #L23ba2a.  v0:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L23ba2e.  v3:= 4I;
  #L23ba30.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L23ba36.  v4:= temp;
  #L23ba38.  v5:= v3 + 3;
  #L23ba3c.  if v4 < v5 then goto L23bae0;
  #L23ba40.  call temp:= `substring`(v8, v3, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L23ba46.  v4:= temp @kind object;
  #L23ba48.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L23ba4e.  v4:= temp;
  #L23ba50.  v6:= "" @kind object;
  #L23ba54.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L23ba5a.  v7:= temp;
  #L23ba5c.  if v7 <= v5 then goto L23baa6;
  #L23ba60.  call temp:= `charAt`(v8, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L23ba66.  v5:= temp;
  #L23ba68.  if v5 != v1 then goto L23ba78;
  #L23ba6c.  v3:= v3 + v2 @kind int;
  #L23ba6e.  call temp:= `substring`(v8, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L23ba74.  v6:= temp @kind object;
  #L23ba76.  goto L23baa6;
  #L23ba78.  v0:= new `java.net.ProtocolException`;
  #L23ba7c.  v1:= new `java.lang.StringBuilder`;
  #L23ba80.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23ba86.  v2:= "Unexpected status line: " @kind object;
  #L23ba8a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ba90.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23ba96.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23ba9c.  v8:= temp @kind object;
  #L23ba9e.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23baa4.  throw v0;
  #L23baa6.  v8:= new `okhttp3.internal.http.StatusLine`;
  #L23baaa.  call `<init>`(v8, v0, v4, v6) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L23bab0.  return v8 @kind object;
  #L23bab2.  v0:= new `java.net.ProtocolException`;
  #L23bab6.  v1:= new `java.lang.StringBuilder`;
  #L23baba.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23bac0.  v2:= "Unexpected status line: " @kind object;
  #L23bac4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23baca.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bad0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23bad6.  v8:= temp @kind object;
  #L23bad8.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23bade.  throw v0;
  #L23bae0.  v0:= new `java.net.ProtocolException`;
  #L23bae4.  v1:= new `java.lang.StringBuilder`;
  #L23bae8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23baee.  v2:= "Unexpected status line: " @kind object;
  #L23baf2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23baf8.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bafe.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23bb04.  v8:= temp @kind object;
  #L23bb06.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23bb0c.  throw v0;
  #L23bb0e.  v0:= new `java.net.ProtocolException`;
  #L23bb12.  v1:= new `java.lang.StringBuilder`;
  #L23bb16.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23bb1c.  v2:= "Unexpected status line: " @kind object;
  #L23bb20.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bb26.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23bb2c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23bb32.  v8:= temp @kind object;
  #L23bb34.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23bb3a.  throw v0;
  catch `java.lang.NumberFormatException` @[L23ba40..L23ba50] goto L23bab2;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.http.StatusLine` v3 @kind this) @signature `Lokhttp3/internal/http/StatusLine;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L23b8c4.  v0:= new `java.lang.StringBuilder`;
  #L23b8c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23b8ce.  v1:= v3.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L23b8d2.  v2:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L23b8d6.  if v1 != v2 then goto L23b8e0;
  #L23b8da.  v1:= "HTTP/1.0" @kind object;
  #L23b8de.  goto L23b8e4;
  #L23b8e0.  v1:= "HTTP/1.1" @kind object;
  #L23b8e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23b8ea.  v1:= 32I;
  #L23b8ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L23b8f4.  v2:= v3.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L23b8f8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L23b8fe.  v2:= v3.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L23b902.  if v2 == 0 then goto L23b916;
  #L23b906.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L23b90c.  v1:= v3.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L23b910.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23b916.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23b91c.  v0:= temp @kind object;
  #L23b91e.  return v0 @kind object;
}
