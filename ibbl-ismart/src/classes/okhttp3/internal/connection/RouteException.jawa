record `okhttp3.internal.connection.RouteException` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.RuntimeException` @kind class {
  `java.io.IOException` `okhttp3.internal.connection.RouteException.lastException` @AccessFlag PRIVATE;
}
global `java.lang.reflect.Method` `@@okhttp3.internal.connection.RouteException.addSuppressedExceptionMethod` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/connection/RouteException;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L238988.  v0:= constclass @type ^`java.lang.Throwable` @kind object;
  #L23898c.  v1:= "addSuppressed" @kind object;
  #L238990.  v2:= 1I;
  #L238992.  v2:= new `java.lang.Class`[v2];
  #L238996.  v3:= 0I;
  #L238998.  v4:= constclass @type ^`java.lang.Throwable` @kind object;
  #L23899c.  v2[v3]:= v4 @kind object;
  #L2389a0.  call temp:= `getDeclaredMethod`(v0, v1, v2) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2389a6.  v0:= temp @kind object;
  #L2389a8.  goto L2389ac;
  #L2389aa.  v0:= 0I;
  #L2389ac.  `@@okhttp3.internal.connection.RouteException.addSuppressedExceptionMethod` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L2389b0.  return @kind void;
  catch `java.lang.Exception` @[L238988..L2389a8] goto L2389aa;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteException` v0 @kind this, `java.io.IOException` v1 @kind object) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2389d4.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2389da.  v0.`okhttp3.internal.connection.RouteException.lastException` @type ^`java.io.IOException` := v1 @kind object;
  #L2389de.  return @kind void;
}
procedure `void` `addSuppressedIfPossible`(`okhttp3.internal.connection.RouteException` v3 @kind this, `java.io.IOException` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `Lokhttp3/internal/connection/RouteException;.addSuppressedIfPossible:(Ljava/io/IOException;Ljava/io/IOException;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L238a10.  v0:= `@@okhttp3.internal.connection.RouteException.addSuppressedExceptionMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L238a14.  if v0 == 0 then goto L238a2a;
  #L238a18.  v1:= 1I;
  #L238a1a.  v1:= new `java.lang.Object`[v1];
  #L238a1e.  v2:= 0I;
  #L238a20.  v1[v2]:= v5 @kind object;
  #L238a24.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L238a2a.  return @kind void;
  catch `java.lang.reflect.InvocationTargetException` @[L238a1a..L238a2a] goto L238a2a;
  catch `java.lang.IllegalAccessException` @[L238a1a..L238a2a] goto L238a2a;
}
procedure `void` `addConnectException`(`okhttp3.internal.connection.RouteException` v1 @kind this, `java.io.IOException` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteException;.addConnectException:(Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2389f0.  v0:= v1.`okhttp3.internal.connection.RouteException.lastException` @type ^`java.io.IOException` @kind object;
  #L2389f4.  call `addSuppressedIfPossible`(v1, v2, v0) @signature `Lokhttp3/internal/connection/RouteException;.addSuppressedIfPossible:(Ljava/io/IOException;Ljava/io/IOException;)V` @kind direct;
  #L2389fa.  v1.`okhttp3.internal.connection.RouteException.lastException` @type ^`java.io.IOException` := v2 @kind object;
  #L2389fe.  return @kind void;
}
procedure `java.io.IOException` `getLastConnectException`(`okhttp3.internal.connection.RouteException` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteException;.getLastConnectException:()Ljava/io/IOException;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L238970.  v0:= v1.`okhttp3.internal.connection.RouteException.lastException` @type ^`java.io.IOException` @kind object;
  #L238974.  return v0 @kind object;
}
