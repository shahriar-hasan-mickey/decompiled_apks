record `okhttp3.internal.connection.RouteSelector` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.internal.connection.RouteSelector.address` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Call` `okhttp3.internal.connection.RouteSelector.call` @AccessFlag PRIVATE_FINAL;
  `okhttp3.EventListener` `okhttp3.internal.connection.RouteSelector.eventListener` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RouteSelector.nextProxyIndex` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.postponedRoutes` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.proxies` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RouteDatabase` `okhttp3.internal.connection.RouteSelector.routeDatabase` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteSelector` v1 @kind this, `okhttp3.Address` v2 @kind object, `okhttp3.internal.connection.RouteDatabase` v3 @kind object, `okhttp3.Call` v4 @kind object, `okhttp3.EventListener` v5 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.<init>:(Lokhttp3/Address;Lokhttp3/internal/connection/RouteDatabase;Lokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L238d08.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L238d0e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L238d14.  v0:= temp @kind object;
  #L238d16.  v1.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v0 @kind object;
  #L238d1a.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L238d20.  v0:= temp @kind object;
  #L238d22.  v1.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` := v0 @kind object;
  #L238d26.  v0:= new `java.util.ArrayList`;
  #L238d2a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L238d30.  v1.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` := v0 @kind object;
  #L238d34.  v1.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` := v2 @kind object;
  #L238d38.  v1.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` := v3 @kind object;
  #L238d3c.  v1.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` := v4 @kind object;
  #L238d40.  v1.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` := v5 @kind object;
  #L238d44.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L238d4a.  v3:= temp @kind object;
  #L238d4c.  call temp:= `proxy`(v2) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L238d52.  v2:= temp @kind object;
  #L238d54.  call `resetNextProxy`(v1, v3, v2) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextProxy:(Lokhttp3/HttpUrl;Ljava/net/Proxy;)V` @kind direct;
  #L238d5a.  return @kind void;
}
procedure `java.lang.String` `getHostString`(`java.net.InetSocketAddress` v1 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.getHostString:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L238b68.  call temp:= `getAddress`(v1) @signature `Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;` @kind virtual;
  #L238b6e.  v0:= temp @kind object;
  #L238b70.  if v0 != 0 then goto L238b7e;
  #L238b74.  call temp:= `getHostName`(v1) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L238b7a.  v1:= temp @kind object;
  #L238b7c.  return v1 @kind object;
  #L238b7e.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L238b84.  v1:= temp @kind object;
  #L238b86.  return v1 @kind object;
}
procedure `boolean` `hasNextProxy`(`okhttp3.internal.connection.RouteSelector` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L238b3c.  v0:= v2.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int`;
  #L238b40.  v1:= v2.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L238b44.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L238b4a.  v1:= temp;
  #L238b4c.  if v0 >= v1 then goto L238b54;
  #L238b50.  v0:= 1I;
  #L238b52.  goto L238b56;
  #L238b54.  v0:= 0I;
  #L238b56.  return v0;
}
procedure `java.net.Proxy` `nextProxy`(`okhttp3.internal.connection.RouteSelector` v3 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.nextProxy:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L238b98.  call temp:= `hasNextProxy`(v3) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L238b9e.  v0:= temp;
  #L238ba0.  if v0 == 0 then goto L238bc8;
  #L238ba4.  v0:= v3.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L238ba8.  v1:= v3.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int`;
  #L238bac.  v2:= v1 + 1;
  #L238bb0.  v3.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int` := v2;
  #L238bb4.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L238bba.  v0:= temp @kind object;
  #L238bbc.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L238bc0.  call `resetNextInetSocketAddress`(v3, v0) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextInetSocketAddress:(Ljava/net/Proxy;)V` @kind direct;
  #L238bc6.  return v0 @kind object;
  #L238bc8.  v0:= new `java.net.SocketException`;
  #L238bcc.  v1:= new `java.lang.StringBuilder`;
  #L238bd0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L238bd6.  v2:= "No route to " @kind object;
  #L238bda.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238be0.  v2:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L238be4.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L238bea.  v2:= temp @kind object;
  #L238bec.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L238bf2.  v2:= temp @kind object;
  #L238bf4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238bfa.  v2:= "; exhausted proxy configurations: " @kind object;
  #L238bfe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238c04.  v2:= v3.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L238c08.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238c0e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L238c14.  v1:= temp @kind object;
  #L238c16.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238c1c.  throw v0;
}
procedure `void` `resetNextInetSocketAddress`(`okhttp3.internal.connection.RouteSelector` v6 @kind this, `java.net.Proxy` v7 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextInetSocketAddress:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L238de8.  v0:= new `java.util.ArrayList`;
  #L238dec.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L238df2.  v6.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` := v0 @kind object;
  #L238df6.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L238dfc.  v0:= temp @kind object;
  #L238dfe.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L238e02.  if v0 == v1 then goto L238e74;
  #L238e06.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L238e0c.  v0:= temp @kind object;
  #L238e0e.  v1:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L238e12.  if v0 != v1 then goto L238e18;
  #L238e16.  goto L238e74;
  #L238e18.  call temp:= `address`(v7) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L238e1e.  v0:= temp @kind object;
  #L238e20.  v1:= instanceof @variable v0 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L238e24.  if v1 == 0 then goto L238e3e;
  #L238e28.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L238e2c.  call temp:= `getHostString`(v0) @signature `Lokhttp3/internal/connection/RouteSelector;.getHostString:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind static;
  #L238e32.  v1:= temp @kind object;
  #L238e34.  call temp:= `getPort`(v0) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L238e3a.  v0:= temp;
  #L238e3c.  goto L238e9c;
  #L238e3e.  v7:= new `java.lang.IllegalArgumentException`;
  #L238e42.  v1:= new `java.lang.StringBuilder`;
  #L238e46.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L238e4c.  v2:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L238e50.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238e56.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L238e5c.  v0:= temp @kind object;
  #L238e5e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238e64.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L238e6a.  v0:= temp @kind object;
  #L238e6c.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238e72.  throw v7;
  #L238e74.  v0:= v6.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L238e78.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L238e7e.  v0:= temp @kind object;
  #L238e80.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L238e86.  v1:= temp @kind object;
  #L238e88.  v0:= v6.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L238e8c.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L238e92.  v0:= temp @kind object;
  #L238e94.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L238e9a.  v0:= temp;
  #L238e9c.  v2:= 1I;
  #L238e9e.  if v0 < v2 then goto L238f82;
  #L238ea2.  v2:= 65535I;
  #L238ea8.  if v0 > v2 then goto L238f82;
  #L238eac.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L238eb2.  v7:= temp @kind object;
  #L238eb4.  v2:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L238eb8.  if v7 != v2 then goto L238ed0;
  #L238ebc.  v7:= v6.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L238ec0.  call temp:= `createUnresolved`(v1, v0) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L238ec6.  v0:= temp @kind object;
  #L238ec8.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L238ece.  goto L238f40;
  #L238ed0.  v7:= v6.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L238ed4.  v2:= v6.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` @kind object;
  #L238ed8.  call `dnsStart`(v7, v2, v1) @signature `Lokhttp3/EventListener;.dnsStart:(Lokhttp3/Call;Ljava/lang/String;)V` @kind virtual;
  #L238ede.  v7:= v6.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L238ee2.  call temp:= `dns`(v7) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L238ee8.  v7:= temp @kind object;
  #L238eea.  call temp:= `lookup`(v7, v1) @signature `Lokhttp3/Dns;.lookup:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L238ef0.  v7:= temp @kind object;
  #L238ef2.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L238ef8.  v2:= temp;
  #L238efa.  if v2 != 0 then goto L238f42;
  #L238efe.  v2:= v6.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L238f02.  v3:= v6.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` @kind object;
  #L238f06.  call `dnsEnd`(v2, v3, v1, v7) @signature `Lokhttp3/EventListener;.dnsEnd:(Lokhttp3/Call;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L238f0c.  v1:= 0I;
  #L238f0e.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L238f14.  v2:= temp;
  #L238f16.  if v1 >= v2 then goto L238f40;
  #L238f1a.  call temp:= `get`(v7, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L238f20.  v3:= temp @kind object;
  #L238f22.  v3:= (`java.net.InetAddress`) v3 @kind object;
  #L238f26.  v4:= v6.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L238f2a.  v5:= new `java.net.InetSocketAddress`;
  #L238f2e.  call `<init>`(v5, v3, v0) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L238f34.  call temp:= `add`(v4, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L238f3a.  v1:= v1 + 1;
  #L238f3e.  goto L238f16;
  #L238f40.  return @kind void;
  #L238f42.  v7:= new `java.net.UnknownHostException`;
  #L238f46.  v0:= new `java.lang.StringBuilder`;
  #L238f4a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L238f50.  v2:= v6.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L238f54.  call temp:= `dns`(v2) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L238f5a.  v2:= temp @kind object;
  #L238f5c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238f62.  v2:= " returned no addresses for " @kind object;
  #L238f66.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238f6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238f72.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L238f78.  v0:= temp @kind object;
  #L238f7a.  call `<init>`(v7, v0) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238f80.  throw v7;
  #L238f82.  v7:= new `java.net.SocketException`;
  #L238f86.  v2:= new `java.lang.StringBuilder`;
  #L238f8a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L238f90.  v3:= "No route to " @kind object;
  #L238f94.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238f9a.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238fa0.  v1:= ":" @kind object;
  #L238fa4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238faa.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L238fb0.  v0:= "; port is out of range" @kind object;
  #L238fb4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238fba.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L238fc0.  v0:= temp @kind object;
  #L238fc2.  call `<init>`(v7, v0) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238fc8.  throw v7;
  #L238fca.  return @kind void;
}
procedure `void` `resetNextProxy`(`okhttp3.internal.connection.RouteSelector` v1 @kind this, `okhttp3.HttpUrl` v2 @kind object, `java.net.Proxy` v3 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextProxy:(Lokhttp3/HttpUrl;Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L238fdc.  v0:= 0I;
  #L238fde.  if v3 == 0 then goto L238ff0;
  #L238fe2.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L238fe8.  v2:= temp @kind object;
  #L238fea.  v1.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v2 @kind object;
  #L238fee.  goto L239040;
  #L238ff0.  v3:= v1.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L238ff4.  call temp:= `proxySelector`(v3) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L238ffa.  v3:= temp @kind object;
  #L238ffc.  call temp:= `uri`(v2) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L239002.  v2:= temp @kind object;
  #L239004.  call temp:= `select`(v3, v2) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L23900a.  v2:= temp @kind object;
  #L23900c.  if v2 == 0 then goto L239026;
  #L239010.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L239016.  v3:= temp;
  #L239018.  if v3 != 0 then goto L239026;
  #L23901c.  call temp:= `immutableList`(v2) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L239022.  v2:= temp @kind object;
  #L239024.  goto L23903c;
  #L239026.  v2:= 1I;
  #L239028.  v2:= new `java.net.Proxy`[v2];
  #L23902c.  v3:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L239030.  v2[v0]:= v3 @kind object;
  #L239034.  call temp:= `immutableList`(v2) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L23903a.  v2:= temp @kind object;
  #L23903c.  v1.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v2 @kind object;
  #L239040.  v1.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int` := v0;
  #L239044.  return @kind void;
}
procedure `void` `connectFailed`(`okhttp3.internal.connection.RouteSelector` v3 @kind this, `okhttp3.Route` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.connectFailed:(Lokhttp3/Route;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L238d6c.  call temp:= `proxy`(v4) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L238d72.  v0:= temp @kind object;
  #L238d74.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L238d7a.  v0:= temp @kind object;
  #L238d7c.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L238d80.  if v0 == v1 then goto L238dca;
  #L238d84.  v0:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L238d88.  call temp:= `proxySelector`(v0) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L238d8e.  v0:= temp @kind object;
  #L238d90.  if v0 == 0 then goto L238dca;
  #L238d94.  v0:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L238d98.  call temp:= `proxySelector`(v0) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L238d9e.  v0:= temp @kind object;
  #L238da0.  v1:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L238da4.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L238daa.  v1:= temp @kind object;
  #L238dac.  call temp:= `uri`(v1) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L238db2.  v1:= temp @kind object;
  #L238db4.  call temp:= `proxy`(v4) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L238dba.  v2:= temp @kind object;
  #L238dbc.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L238dc2.  v2:= temp @kind object;
  #L238dc4.  call `connectFailed`(v0, v1, v2, v5) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L238dca.  v5:= v3.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` @kind object;
  #L238dce.  call `failed`(v5, v4) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @kind virtual;
  #L238dd4.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.internal.connection.RouteSelector` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L238b04.  call temp:= `hasNextProxy`(v1) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L238b0a.  v0:= temp;
  #L238b0c.  if v0 != 0 then goto L238b26;
  #L238b10.  v0:= v1.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L238b14.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L238b1a.  v0:= temp;
  #L238b1c.  if v0 != 0 then goto L238b22;
  #L238b20.  goto L238b26;
  #L238b22.  v0:= 0I;
  #L238b24.  goto L238b28;
  #L238b26.  v0:= 1I;
  #L238b28.  return v0;
}
procedure `okhttp3.internal.connection.RouteSelector$Selection` `next`(`okhttp3.internal.connection.RouteSelector` v7 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.next:()Lokhttp3/internal/connection/RouteSelector$Selection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L238c30.  call temp:= `hasNext`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @kind virtual;
  #L238c36.  v0:= temp;
  #L238c38.  if v0 == 0 then goto L238cea;
  #L238c3c.  v0:= new `java.util.ArrayList`;
  #L238c40.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L238c46.  call temp:= `hasNextProxy`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L238c4c.  v1:= temp;
  #L238c4e.  if v1 == 0 then goto L238cbe;
  #L238c52.  call temp:= `nextProxy`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.nextProxy:()Ljava/net/Proxy;` @kind direct;
  #L238c58.  v1:= temp @kind object;
  #L238c5a.  v2:= 0I;
  #L238c5c.  v3:= v7.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L238c60.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L238c66.  v3:= temp;
  #L238c68.  if v2 >= v3 then goto L238cb2;
  #L238c6c.  v4:= new `okhttp3.Route`;
  #L238c70.  v5:= v7.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L238c74.  v6:= v7.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L238c78.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L238c7e.  v6:= temp @kind object;
  #L238c80.  v6:= (`java.net.InetSocketAddress`) v6 @kind object;
  #L238c84.  call `<init>`(v4, v5, v1, v6) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L238c8a.  v5:= v7.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` @kind object;
  #L238c8e.  call temp:= `shouldPostpone`(v5, v4) @signature `Lokhttp3/internal/connection/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @kind virtual;
  #L238c94.  v5:= temp;
  #L238c96.  if v5 == 0 then goto L238ca6;
  #L238c9a.  v5:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L238c9e.  call temp:= `add`(v5, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L238ca4.  goto L238cac;
  #L238ca6.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L238cac.  v2:= v2 + 1;
  #L238cb0.  goto L238c68;
  #L238cb2.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L238cb8.  v1:= temp;
  #L238cba.  if v1 != 0 then goto L238c46;
  #L238cbe.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L238cc4.  v1:= temp;
  #L238cc6.  if v1 == 0 then goto L238cde;
  #L238cca.  v1:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L238cce.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L238cd4.  v1:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L238cd8.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L238cde.  v1:= new `okhttp3.internal.connection.RouteSelector$Selection`;
  #L238ce2.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.<init>:(Ljava/util/List;)V` @kind direct;
  #L238ce8.  return v1 @kind object;
  #L238cea.  v0:= new `java.util.NoSuchElementException`;
  #L238cee.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L238cf4.  throw v0;
  #L238cf6.  return @kind void;
}
