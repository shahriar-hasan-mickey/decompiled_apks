record `okhttp3.internal.connection.ConnectInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.OkHttpClient` `okhttp3.internal.connection.ConnectInterceptor.client` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.ConnectInterceptor` v0 @kind this, `okhttp3.OkHttpClient` v1 @kind object) @signature `Lokhttp3/internal/connection/ConnectInterceptor;.<init>:(Lokhttp3/OkHttpClient;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2375cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2375d2.  v0.`okhttp3.internal.connection.ConnectInterceptor.client` @type ^`okhttp3.OkHttpClient` := v1 @kind object;
  #L2375d6.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.connection.ConnectInterceptor` v5 @kind this, `okhttp3.Interceptor$Chain` v6 @kind object) @signature `Lokhttp3/internal/connection/ConnectInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L237570.  v0:= v6 @kind object;
  #L237572.  v0:= (`okhttp3.internal.http.RealInterceptorChain`) v0 @kind object;
  #L237576.  call temp:= `request`(v0) @signature `Lokhttp3/internal/http/RealInterceptorChain;.request:()Lokhttp3/Request;` @kind virtual;
  #L23757c.  v1:= temp @kind object;
  #L23757e.  call temp:= `streamAllocation`(v0) @signature `Lokhttp3/internal/http/RealInterceptorChain;.streamAllocation:()Lokhttp3/internal/connection/StreamAllocation;` @kind virtual;
  #L237584.  v2:= temp @kind object;
  #L237586.  call temp:= `method`(v1) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L23758c.  v3:= temp @kind object;
  #L23758e.  v4:= "GET" @kind object;
  #L237592.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L237598.  v3:= temp;
  #L23759a.  v3:= v3 ^~ 1;
  #L23759e.  v4:= v5.`okhttp3.internal.connection.ConnectInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2375a2.  call temp:= `newStream`(v2, v4, v6, v3) @signature `Lokhttp3/internal/connection/StreamAllocation;.newStream:(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Z)Lokhttp3/internal/http/HttpCodec;` @kind virtual;
  #L2375a8.  v6:= temp @kind object;
  #L2375aa.  call temp:= `connection`(v2) @signature `Lokhttp3/internal/connection/StreamAllocation;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L2375b0.  v3:= temp @kind object;
  #L2375b2.  call temp:= `proceed`(v0, v1, v2, v6, v3) @signature `Lokhttp3/internal/http/RealInterceptorChain;.proceed:(Lokhttp3/Request;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpCodec;Lokhttp3/internal/connection/RealConnection;)Lokhttp3/Response;` @kind virtual;
  #L2375b8.  v6:= temp @kind object;
  #L2375ba.  return v6 @kind object;
}
