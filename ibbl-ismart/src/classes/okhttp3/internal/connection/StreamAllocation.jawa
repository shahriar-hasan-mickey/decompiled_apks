record `okhttp3.internal.connection.StreamAllocation` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.internal.connection.StreamAllocation.address` @AccessFlag PUBLIC_FINAL;
  `okhttp3.Call` `okhttp3.internal.connection.StreamAllocation.call` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `okhttp3.internal.connection.StreamAllocation.callStackTrace` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.connection.StreamAllocation.canceled` @AccessFlag PRIVATE;
  `okhttp3.internal.http.HttpCodec` `okhttp3.internal.connection.StreamAllocation.codec` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RealConnection` `okhttp3.internal.connection.StreamAllocation.connection` @AccessFlag PRIVATE;
  `okhttp3.ConnectionPool` `okhttp3.internal.connection.StreamAllocation.connectionPool` @AccessFlag PRIVATE_FINAL;
  `okhttp3.EventListener` `okhttp3.internal.connection.StreamAllocation.eventListener` @AccessFlag PUBLIC_FINAL;
  `int` `okhttp3.internal.connection.StreamAllocation.refusedStreamCount` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.StreamAllocation.released` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.StreamAllocation.reportedAcquired` @AccessFlag PRIVATE;
  `okhttp3.Route` `okhttp3.internal.connection.StreamAllocation.route` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RouteSelector$Selection` `okhttp3.internal.connection.StreamAllocation.routeSelection` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RouteSelector` `okhttp3.internal.connection.StreamAllocation.routeSelector` @AccessFlag PRIVATE_FINAL;
}
global `boolean` `@@okhttp3.internal.connection.StreamAllocation.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/connection/StreamAllocation;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L239694.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.connection.StreamAllocation` v1 @kind this, `okhttp3.ConnectionPool` v2 @kind object, `okhttp3.Address` v3 @kind object, `okhttp3.Call` v4 @kind object, `okhttp3.EventListener` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lokhttp3/internal/connection/StreamAllocation;.<init>:(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/Call;Lokhttp3/EventListener;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2396a8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2396ae.  v1.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` := v2 @kind object;
  #L2396b2.  v1.`okhttp3.internal.connection.StreamAllocation.address` @type ^`okhttp3.Address` := v3 @kind object;
  #L2396b6.  v1.`okhttp3.internal.connection.StreamAllocation.call` @type ^`okhttp3.Call` := v4 @kind object;
  #L2396ba.  v1.`okhttp3.internal.connection.StreamAllocation.eventListener` @type ^`okhttp3.EventListener` := v5 @kind object;
  #L2396be.  v2:= new `okhttp3.internal.connection.RouteSelector`;
  #L2396c2.  call temp:= `routeDatabase`(v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.routeDatabase:()Lokhttp3/internal/connection/RouteDatabase;` @kind direct;
  #L2396c8.  v0:= temp @kind object;
  #L2396ca.  call `<init>`(v2, v3, v0, v4, v5) @signature `Lokhttp3/internal/connection/RouteSelector;.<init>:(Lokhttp3/Address;Lokhttp3/internal/connection/RouteDatabase;Lokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L2396d0.  v1.`okhttp3.internal.connection.StreamAllocation.routeSelector` @type ^`okhttp3.internal.connection.RouteSelector` := v2 @kind object;
  #L2396d4.  v1.`okhttp3.internal.connection.StreamAllocation.callStackTrace` @type ^`java.lang.Object` := v6 @kind object;
  #L2396d8.  return @kind void;
}
procedure `java.net.Socket` `deallocate`(`okhttp3.internal.connection.StreamAllocation` v1 @kind this, `boolean` v2 , `boolean` v3 , `boolean` v4 ) @signature `Lokhttp3/internal/connection/StreamAllocation;.deallocate:(ZZZ)Ljava/net/Socket;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2390f0.  v0:= 0I;
  #L2390f2.  if v4 == 0 then goto L2390fa;
  #L2390f6.  v1.`okhttp3.internal.connection.StreamAllocation.codec` @type ^`okhttp3.internal.http.HttpCodec` := v0 @kind object;
  #L2390fa.  v4:= 1I;
  #L2390fc.  if v3 == 0 then goto L239104;
  #L239100.  v1.`okhttp3.internal.connection.StreamAllocation.released` @type ^`boolean` := v4 @kind boolean;
  #L239104.  v3:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L239108.  if v3 == 0 then goto L23918c;
  #L23910c.  if v2 == 0 then goto L239114;
  #L239110.  v3.`okhttp3.internal.connection.RealConnection.noNewStreams` @type ^`boolean` := v4 @kind boolean;
  #L239114.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.codec` @type ^`okhttp3.internal.http.HttpCodec` @kind object;
  #L239118.  if v2 != 0 then goto L23918c;
  #L23911c.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.released` @type ^`boolean` @kind boolean;
  #L239120.  if v2 != 0 then goto L239130;
  #L239124.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L239128.  v2:= v2.`okhttp3.internal.connection.RealConnection.noNewStreams` @type ^`boolean` @kind boolean;
  #L23912c.  if v2 == 0 then goto L23918c;
  #L239130.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L239134.  call `release`(v1, v2) @signature `Lokhttp3/internal/connection/StreamAllocation;.release:(Lokhttp3/internal/connection/RealConnection;)V` @kind direct;
  #L23913a.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L23913e.  v2:= v2.`okhttp3.internal.connection.RealConnection.allocations` @type ^`java.util.List` @kind object;
  #L239142.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L239148.  v2:= temp;
  #L23914a.  if v2 == 0 then goto L239184;
  #L23914e.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L239152.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L239158.  v3:= temp @kind wide;
  #L23915a.  v2.`okhttp3.internal.connection.RealConnection.idleAtNanos` @type ^`long` := v3 @kind wide;
  #L23915e.  v2:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L239162.  v3:= v1.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L239166.  v4:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L23916a.  call temp:= `connectionBecameIdle`(v2, v3, v4) @signature `Lokhttp3/internal/Internal;.connectionBecameIdle:(Lokhttp3/ConnectionPool;Lokhttp3/internal/connection/RealConnection;)Z` @kind virtual;
  #L239170.  v2:= temp;
  #L239172.  if v2 == 0 then goto L239184;
  #L239176.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L23917a.  call temp:= `socket`(v2) @signature `Lokhttp3/internal/connection/RealConnection;.socket:()Ljava/net/Socket;` @kind virtual;
  #L239180.  v2:= temp @kind object;
  #L239182.  goto L239186;
  #L239184.  v2:= v0 @kind object;
  #L239186.  v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` := v0 @kind object;
  #L23918a.  goto L23918e;
  #L23918c.  v2:= v0 @kind object;
  #L23918e.  return v2 @kind object;
}
procedure `okhttp3.internal.connection.RealConnection` `findConnection`(`okhttp3.internal.connection.StreamAllocation` v18 @kind this, `int` v19 , `int` v20 , `int` v21 , `int` v22 , `boolean` v23 ) @signature `Lokhttp3/internal/connection/StreamAllocation;.findConnection:(IIIIZ)Lokhttp3/internal/connection/RealConnection;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L239280.  v1:= v18 @kind object;
  #L239284.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L239288.  @monitorenter v2
  #L23928a.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.released` @type ^`boolean` @kind boolean;
  #L23928e.  if v0 != 0 then goto L2394ea;
  #L239292.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.codec` @type ^`okhttp3.internal.http.HttpCodec` @kind object;
  #L239296.  if v0 != 0 then goto L2394da;
  #L23929a.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.canceled` @type ^`boolean` @kind boolean;
  #L23929e.  if v0 != 0 then goto L2394ca;
  #L2392a2.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L2392a6.  call temp:= `releaseIfNoNewStreams`(v18) @signature `Lokhttp3/internal/connection/StreamAllocation;.releaseIfNoNewStreams:()Ljava/net/Socket;` @kind direct;
  #L2392ac.  v3:= temp @kind object;
  #L2392ae.  v4:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L2392b2.  v5:= 0I;
  #L2392b4.  if v4 == 0 then goto L2392c0;
  #L2392b8.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L2392bc.  v4:= v5 @kind object;
  #L2392be.  goto L2392c4;
  #L2392c0.  v4:= v0 @kind object;
  #L2392c2.  v0:= v5 @kind object;
  #L2392c4.  v6:= v1.`okhttp3.internal.connection.StreamAllocation.reportedAcquired` @type ^`boolean` @kind boolean;
  #L2392c8.  if v6 != 0 then goto L2392ce;
  #L2392cc.  v4:= v5 @kind object;
  #L2392ce.  v6:= 1I;
  #L2392d0.  v7:= 0I;
  #L2392d2.  if v0 != 0 then goto L239308;
  #L2392d6.  v8:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L2392da.  v9:= v1.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L2392de.  v10:= v1.`okhttp3.internal.connection.StreamAllocation.address` @type ^`okhttp3.Address` @kind object;
  #L2392e2.  call temp:= `get`(v8, v9, v10, v1, v5) @signature `Lokhttp3/internal/Internal;.get:(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/Route;)Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L2392e8.  v8:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L2392ec.  if v8 == 0 then goto L2392fc;
  #L2392f0.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L2392f4.  v8:= v0 @kind object;
  #L2392f6.  v9:= v5 @kind object;
  #L2392f8.  v0:= 1I;
  #L2392fa.  goto L23930e;
  #L2392fc.  v8:= v1.`okhttp3.internal.connection.StreamAllocation.route` @type ^`okhttp3.Route` @kind object;
  #L239300.  v9:= v8 @kind object;
  #L239302.  v8:= v0 @kind object;
  #L239304.  v0:= 0I;
  #L239306.  goto L23930e;
  #L239308.  v8:= v0 @kind object;
  #L23930a.  v9:= v5 @kind object;
  #L23930c.  v0:= 0I;
  #L23930e.  @monitorexit v2
  #L239310.  call `closeQuietly`(v3) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L239316.  if v4 == 0 then goto L239328;
  #L23931a.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L23931e.  v3:= v1.`okhttp3.internal.connection.StreamAllocation.call` @type ^`okhttp3.Call` @kind object;
  #L239322.  call `connectionReleased`(v2, v3, v4) @signature `Lokhttp3/EventListener;.connectionReleased:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L239328.  if v0 == 0 then goto L23933a;
  #L23932c.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L239330.  v3:= v1.`okhttp3.internal.connection.StreamAllocation.call` @type ^`okhttp3.Call` @kind object;
  #L239334.  call `connectionAcquired`(v2, v3, v8) @signature `Lokhttp3/EventListener;.connectionAcquired:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L23933a.  if v8 == 0 then goto L239340;
  #L23933e.  return v8 @kind object;
  #L239340.  if v9 != 0 then goto L23936c;
  #L239344.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.routeSelection` @type ^`okhttp3.internal.connection.RouteSelector$Selection` @kind object;
  #L239348.  if v2 == 0 then goto L239358;
  #L23934c.  call temp:= `hasNext`(v2) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @kind virtual;
  #L239352.  v2:= temp;
  #L239354.  if v2 != 0 then goto L23936c;
  #L239358.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.routeSelector` @type ^`okhttp3.internal.connection.RouteSelector` @kind object;
  #L23935c.  call temp:= `next`(v2) @signature `Lokhttp3/internal/connection/RouteSelector;.next:()Lokhttp3/internal/connection/RouteSelector$Selection;` @kind virtual;
  #L239362.  v2:= temp @kind object;
  #L239364.  v1.`okhttp3.internal.connection.StreamAllocation.routeSelection` @type ^`okhttp3.internal.connection.RouteSelector$Selection` := v2 @kind object;
  #L239368.  v2:= 1I;
  #L23936a.  goto L23936e;
  #L23936c.  v2:= 0I;
  #L23936e.  v3:= v1.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L239372.  @monitorenter v3
  #L239374.  v4:= v1.`okhttp3.internal.connection.StreamAllocation.canceled` @type ^`boolean` @kind boolean;
  #L239378.  if v4 != 0 then goto L2394b4;
  #L23937c.  if v2 == 0 then goto L2393d2;
  #L239380.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.routeSelection` @type ^`okhttp3.internal.connection.RouteSelector$Selection` @kind object;
  #L239384.  call temp:= `getAll`(v2) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.getAll:()Ljava/util/List;` @kind virtual;
  #L23938a.  v2:= temp @kind object;
  #L23938c.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L239392.  v4:= temp;
  #L239394.  v10:= 0I;
  #L239396.  if v10 >= v4 then goto L2393d2;
  #L23939a.  call temp:= `get`(v2, v10) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2393a0.  v11:= temp @kind object;
  #L2393a2.  v11:= (`okhttp3.Route`) v11 @kind object;
  #L2393a6.  v12:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L2393aa.  v13:= v1.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L2393ae.  v14:= v1.`okhttp3.internal.connection.StreamAllocation.address` @type ^`okhttp3.Address` @kind object;
  #L2393b2.  call temp:= `get`(v12, v13, v14, v1, v11) @signature `Lokhttp3/internal/Internal;.get:(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/Route;)Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L2393b8.  v12:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L2393bc.  if v12 == 0 then goto L2393cc;
  #L2393c0.  v8:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L2393c4.  v1.`okhttp3.internal.connection.StreamAllocation.route` @type ^`okhttp3.Route` := v11 @kind object;
  #L2393c8.  v0:= 1I;
  #L2393ca.  goto L2393d2;
  #L2393cc.  v10:= v10 + 1;
  #L2393d0.  goto L239396;
  #L2393d2.  if v0 != 0 then goto L239402;
  #L2393d6.  if v9 != 0 then goto L2393e6;
  #L2393da.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.routeSelection` @type ^`okhttp3.internal.connection.RouteSelector$Selection` @kind object;
  #L2393de.  call temp:= `next`(v2) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.next:()Lokhttp3/Route;` @kind virtual;
  #L2393e4.  v9:= temp @kind object;
  #L2393e6.  v1.`okhttp3.internal.connection.StreamAllocation.route` @type ^`okhttp3.Route` := v9 @kind object;
  #L2393ea.  v1.`okhttp3.internal.connection.StreamAllocation.refusedStreamCount` @type ^`int` := v7;
  #L2393ee.  v8:= new `okhttp3.internal.connection.RealConnection`;
  #L2393f2.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L2393f6.  call `<init>`(v8, v2, v9) @signature `Lokhttp3/internal/connection/RealConnection;.<init>:(Lokhttp3/ConnectionPool;Lokhttp3/Route;)V` @kind direct;
  #L2393fc.  call `acquire`(v1, v8, v7) @signature `Lokhttp3/internal/connection/StreamAllocation;.acquire:(Lokhttp3/internal/connection/RealConnection;Z)V` @kind virtual;
  #L239402.  @monitorexit v3
  #L239404.  if v0 == 0 then goto L239418;
  #L239408.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L23940c.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.call` @type ^`okhttp3.Call` @kind object;
  #L239410.  call `connectionAcquired`(v0, v2, v8) @signature `Lokhttp3/EventListener;.connectionAcquired:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L239416.  return v8 @kind object;
  #L239418.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.call` @type ^`okhttp3.Call` @kind object;
  #L23941c.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L239420.  v10:= v8 @kind object;
  #L239422.  v11:= v19;
  #L239426.  v12:= v20;
  #L23942a.  v13:= v21;
  #L23942e.  v14:= v22;
  #L239432.  v15:= v23;
  #L239436.  v16:= v0 @kind object;
  #L23943a.  v17:= v2 @kind object;
  #L23943e.  call `connect`(v10, v11, v12, v13, v14, v15, v16, v17) @signature `Lokhttp3/internal/connection/RealConnection;.connect:(IIIIZLokhttp3/Call;Lokhttp3/EventListener;)V` @kind virtual;
  #L239444.  call temp:= `routeDatabase`(v18) @signature `Lokhttp3/internal/connection/StreamAllocation;.routeDatabase:()Lokhttp3/internal/connection/RouteDatabase;` @kind direct;
  #L23944a.  v0:= temp @kind object;
  #L23944c.  call temp:= `route`(v8) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L239452.  v2:= temp @kind object;
  #L239454.  call `connected`(v0, v2) @signature `Lokhttp3/internal/connection/RouteDatabase;.connected:(Lokhttp3/Route;)V` @kind virtual;
  #L23945a.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L23945e.  @monitorenter v2
  #L239460.  v1.`okhttp3.internal.connection.StreamAllocation.reportedAcquired` @type ^`boolean` := v6 @kind boolean;
  #L239464.  v0:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L239468.  v3:= v1.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L23946c.  call `put`(v0, v3, v8) @signature `Lokhttp3/internal/Internal;.put:(Lokhttp3/ConnectionPool;Lokhttp3/internal/connection/RealConnection;)V` @kind virtual;
  #L239472.  call temp:= `isMultiplexed`(v8) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed:()Z` @kind virtual;
  #L239478.  v0:= temp;
  #L23947a.  if v0 == 0 then goto L239496;
  #L23947e.  v0:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L239482.  v3:= v1.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L239486.  v4:= v1.`okhttp3.internal.connection.StreamAllocation.address` @type ^`okhttp3.Address` @kind object;
  #L23948a.  call temp:= `deduplicate`(v0, v3, v4, v1) @signature `Lokhttp3/internal/Internal;.deduplicate:(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/StreamAllocation;)Ljava/net/Socket;` @kind virtual;
  #L239490.  v5:= temp @kind object;
  #L239492.  v8:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L239496.  @monitorexit v2
  #L239498.  call `closeQuietly`(v5) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L23949e.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L2394a2.  v2:= v1.`okhttp3.internal.connection.StreamAllocation.call` @type ^`okhttp3.Call` @kind object;
  #L2394a6.  call `connectionAcquired`(v0, v2, v8) @signature `Lokhttp3/EventListener;.connectionAcquired:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L2394ac.  return v8 @kind object;
  #L2394ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2394b0.  @monitorexit v2
  #L2394b2.  throw v0;
  #L2394b4.  v0:= new `java.io.IOException`;
  #L2394b8.  v2:= "Canceled" @kind object;
  #L2394bc.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2394c2.  throw v0;
  #L2394c4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2394c6.  @monitorexit v3
  #L2394c8.  throw v0;
  #L2394ca.  v0:= new `java.io.IOException`;
  #L2394ce.  v3:= "Canceled" @kind object;
  #L2394d2.  call `<init>`(v0, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2394d8.  throw v0;
  #L2394da.  v0:= new `java.lang.IllegalStateException`;
  #L2394de.  v3:= "codec != null" @kind object;
  #L2394e2.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2394e8.  throw v0;
  #L2394ea.  v0:= new `java.lang.IllegalStateException`;
  #L2394ee.  v3:= "released" @kind object;
  #L2394f2.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2394f8.  throw v0;
  #L2394fa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2394fc.  @monitorexit v2
  #L2394fe.  throw v0;
  #L239500.  return @kind void;
  catch `java.lang.Throwable` @[L23928a..L239310] goto L2394fa;
  catch `java.lang.Throwable` @[L239374..L239404] goto L2394c4;
  catch `java.lang.Throwable` @[L239460..L239498] goto L2394ae;
  catch `java.lang.Throwable` @[L2394b0..L2394b2] goto L2394ae;
  catch `java.lang.Throwable` @[L2394b4..L2394c8] goto L2394c4;
  catch `java.lang.Throwable` @[L2394ca..L2394fe] goto L2394fa;
}
procedure `okhttp3.internal.connection.RealConnection` `findHealthyConnection`(`okhttp3.internal.connection.StreamAllocation` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 , `boolean` v8 , `boolean` v9 ) @signature `Lokhttp3/internal/connection/StreamAllocation;.findHealthyConnection:(IIIIZZ)Lokhttp3/internal/connection/RealConnection;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L239550.  call temp:= `findConnection`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/internal/connection/StreamAllocation;.findConnection:(IIIIZ)Lokhttp3/internal/connection/RealConnection;` @kind direct;
  #L239556.  v0:= temp @kind object;
  #L239558.  v1:= v3.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L23955c.  @monitorenter v1
  #L23955e.  v2:= v0.`okhttp3.internal.connection.RealConnection.successCount` @type ^`int`;
  #L239562.  if v2 != 0 then goto L23956a;
  #L239566.  @monitorexit v1
  #L239568.  return v0 @kind object;
  #L23956a.  @monitorexit v1
  #L23956c.  call temp:= `isHealthy`(v0, v9) @signature `Lokhttp3/internal/connection/RealConnection;.isHealthy:(Z)Z` @kind virtual;
  #L239572.  v1:= temp;
  #L239574.  if v1 != 0 then goto L239580;
  #L239578.  call `noNewStreams`(v3) @signature `Lokhttp3/internal/connection/StreamAllocation;.noNewStreams:()V` @kind virtual;
  #L23957e.  goto L239550;
  #L239580.  return v0 @kind object;
  #L239582.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L239584.  @monitorexit v1
  #L239586.  throw v4;
  #L239588.  return @kind void;
  catch `java.lang.Throwable` @[L23955e..L23956c] goto L239582;
  catch `java.lang.Throwable` @[L239584..L239586] goto L239582;
}
procedure `void` `release`(`okhttp3.internal.connection.StreamAllocation` v3 @kind this, `okhttp3.internal.connection.RealConnection` v4 @kind object) @signature `Lokhttp3/internal/connection/StreamAllocation;.release:(Lokhttp3/internal/connection/RealConnection;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L23985c.  v0:= v4.`okhttp3.internal.connection.RealConnection.allocations` @type ^`java.util.List` @kind object;
  #L239860.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L239866.  v0:= temp;
  #L239868.  v1:= 0I;
  #L23986a.  if v1 >= v0 then goto L23989c;
  #L23986e.  v2:= v4.`okhttp3.internal.connection.RealConnection.allocations` @type ^`java.util.List` @kind object;
  #L239872.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L239878.  v2:= temp @kind object;
  #L23987a.  v2:= (`java.lang.ref.Reference`) v2 @kind object;
  #L23987e.  call temp:= `get`(v2) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L239884.  v2:= temp @kind object;
  #L239886.  if v2 != v3 then goto L239896;
  #L23988a.  v4:= v4.`okhttp3.internal.connection.RealConnection.allocations` @type ^`java.util.List` @kind object;
  #L23988e.  call temp:= `remove`(v4, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L239894.  return @kind void;
  #L239896.  v1:= v1 + 1;
  #L23989a.  goto L23986a;
  #L23989c.  v4:= new `java.lang.IllegalStateException`;
  #L2398a0.  call `<init>`(v4) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L2398a6.  throw v4;
  #L2398a8.  return @kind void;
}
procedure `java.net.Socket` `releaseIfNoNewStreams`(`okhttp3.internal.connection.StreamAllocation` v2 @kind this) @signature `Lokhttp3/internal/connection/StreamAllocation;.releaseIfNoNewStreams:()Ljava/net/Socket;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L239208.  v0:= v2.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L23920c.  if v0 == 0 then goto L239226;
  #L239210.  v0:= v0.`okhttp3.internal.connection.RealConnection.noNewStreams` @type ^`boolean` @kind boolean;
  #L239214.  if v0 == 0 then goto L239226;
  #L239218.  v0:= 1I;
  #L23921a.  v1:= 0I;
  #L23921c.  call temp:= `deallocate`(v2, v1, v1, v0) @signature `Lokhttp3/internal/connection/StreamAllocation;.deallocate:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L239222.  v0:= temp @kind object;
  #L239224.  return v0 @kind object;
  #L239226.  v0:= 0I;
  #L239228.  return v0 @kind object;
}
procedure `okhttp3.internal.connection.RouteDatabase` `routeDatabase`(`okhttp3.internal.connection.StreamAllocation` v2 @kind this) @signature `Lokhttp3/internal/connection/StreamAllocation;.routeDatabase:()Lokhttp3/internal/connection/RouteDatabase;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2395b0.  v0:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L2395b4.  v1:= v2.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L2395b8.  call temp:= `routeDatabase`(v0, v1) @signature `Lokhttp3/internal/Internal;.routeDatabase:(Lokhttp3/ConnectionPool;)Lokhttp3/internal/connection/RouteDatabase;` @kind virtual;
  #L2395be.  v0:= temp @kind object;
  #L2395c0.  return v0 @kind object;
}
procedure `void` `acquire`(`okhttp3.internal.connection.StreamAllocation` v1 @kind this, `okhttp3.internal.connection.RealConnection` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/internal/connection/StreamAllocation;.acquire:(Lokhttp3/internal/connection/RealConnection;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2396ec.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L2396f0.  if v0 != 0 then goto L239716;
  #L2396f4.  v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` := v2 @kind object;
  #L2396f8.  v1.`okhttp3.internal.connection.StreamAllocation.reportedAcquired` @type ^`boolean` := v3 @kind boolean;
  #L2396fc.  v2:= v2.`okhttp3.internal.connection.RealConnection.allocations` @type ^`java.util.List` @kind object;
  #L239700.  v3:= new `okhttp3.internal.connection.StreamAllocation$StreamAllocationReference`;
  #L239704.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.callStackTrace` @type ^`java.lang.Object` @kind object;
  #L239708.  call `<init>`(v3, v1, v0) @signature `Lokhttp3/internal/connection/StreamAllocation$StreamAllocationReference;.<init>:(Lokhttp3/internal/connection/StreamAllocation;Ljava/lang/Object;)V` @kind direct;
  #L23970e.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L239714.  return @kind void;
  #L239716.  v2:= new `java.lang.IllegalStateException`;
  #L23971a.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L239720.  throw v2;
}
procedure `void` `cancel`(`okhttp3.internal.connection.StreamAllocation` v3 @kind this) @signature `Lokhttp3/internal/connection/StreamAllocation;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L239734.  v0:= v3.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L239738.  @monitorenter v0
  #L23973a.  v1:= 1I;
  #L23973c.  v3.`okhttp3.internal.connection.StreamAllocation.canceled` @type ^`boolean` := v1 @kind boolean;
  #L239740.  v1:= v3.`okhttp3.internal.connection.StreamAllocation.codec` @type ^`okhttp3.internal.http.HttpCodec` @kind object;
  #L239744.  v2:= v3.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L239748.  @monitorexit v0
  #L23974a.  if v1 == 0 then goto L239756;
  #L23974e.  call `cancel`(v1) @signature `Lokhttp3/internal/http/HttpCodec;.cancel:()V` @kind interface;
  #L239754.  goto L239760;
  #L239756.  if v2 == 0 then goto L239760;
  #L23975a.  call `cancel`(v2) @signature `Lokhttp3/internal/connection/RealConnection;.cancel:()V` @kind virtual;
  #L239760.  return @kind void;
  #L239762.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L239764.  @monitorexit v0
  #L239766.  throw v1;
  catch `java.lang.Throwable` @[L23973c..L23974a] goto L239762;
  catch `java.lang.Throwable` @[L239764..L239766] goto L239762;
}
procedure `okhttp3.internal.http.HttpCodec` `codec`(`okhttp3.internal.connection.StreamAllocation` v2 @kind this) @signature `Lokhttp3/internal/connection/StreamAllocation;.codec:()Lokhttp3/internal/http/HttpCodec;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2395d4.  v0:= v2.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L2395d8.  @monitorenter v0
  #L2395da.  v1:= v2.`okhttp3.internal.connection.StreamAllocation.codec` @type ^`okhttp3.internal.http.HttpCodec` @kind object;
  #L2395de.  @monitorexit v0
  #L2395e0.  return v1 @kind object;
  #L2395e2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2395e4.  @monitorexit v0
  #L2395e6.  throw v1;
  catch `java.lang.Throwable` @[L2395da..L2395e6] goto L2395e2;
}
procedure `okhttp3.internal.connection.RealConnection` `connection`(`okhttp3.internal.connection.StreamAllocation` v1 @kind this) @signature `Lokhttp3/internal/connection/StreamAllocation;.connection:()Lokhttp3/internal/connection/RealConnection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L239254.  @monitorenter v1
  #L239256.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L23925a.  @monitorexit v1
  #L23925c.  return v0 @kind object;
  #L23925e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L239260.  @monitorexit v1
  #L239262.  throw v0;
  catch `java.lang.Throwable` @[L239256..L23925a] goto L23925e;
}
procedure `boolean` `hasMoreRoutes`(`okhttp3.internal.connection.StreamAllocation` v1 @kind this) @signature `Lokhttp3/internal/connection/StreamAllocation;.hasMoreRoutes:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L239074.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.route` @type ^`okhttp3.Route` @kind object;
  #L239078.  if v0 != 0 then goto L2390a6;
  #L23907c.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.routeSelection` @type ^`okhttp3.internal.connection.RouteSelector$Selection` @kind object;
  #L239080.  if v0 == 0 then goto L239090;
  #L239084.  call temp:= `hasNext`(v0) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @kind virtual;
  #L23908a.  v0:= temp;
  #L23908c.  if v0 != 0 then goto L2390a6;
  #L239090.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.routeSelector` @type ^`okhttp3.internal.connection.RouteSelector` @kind object;
  #L239094.  call temp:= `hasNext`(v0) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @kind virtual;
  #L23909a.  v0:= temp;
  #L23909c.  if v0 == 0 then goto L2390a2;
  #L2390a0.  goto L2390a6;
  #L2390a2.  v0:= 0I;
  #L2390a4.  goto L2390a8;
  #L2390a6.  v0:= 1I;
  #L2390a8.  return v0;
}
procedure `okhttp3.internal.http.HttpCodec` `newStream`(`okhttp3.internal.connection.StreamAllocation` v7 @kind this, `okhttp3.OkHttpClient` v8 @kind object, `okhttp3.Interceptor$Chain` v9 @kind object, `boolean` v10 ) @signature `Lokhttp3/internal/connection/StreamAllocation;.newStream:(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Z)Lokhttp3/internal/http/HttpCodec;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L239604.  call temp:= `connectTimeoutMillis`(v9) @signature `Lokhttp3/Interceptor$Chain;.connectTimeoutMillis:()I` @kind interface;
  #L23960a.  v1:= temp;
  #L23960c.  call temp:= `readTimeoutMillis`(v9) @signature `Lokhttp3/Interceptor$Chain;.readTimeoutMillis:()I` @kind interface;
  #L239612.  v2:= temp;
  #L239614.  call temp:= `writeTimeoutMillis`(v9) @signature `Lokhttp3/Interceptor$Chain;.writeTimeoutMillis:()I` @kind interface;
  #L23961a.  v3:= temp;
  #L23961c.  call temp:= `pingIntervalMillis`(v8) @signature `Lokhttp3/OkHttpClient;.pingIntervalMillis:()I` @kind virtual;
  #L239622.  v4:= temp;
  #L239624.  call temp:= `retryOnConnectionFailure`(v8) @signature `Lokhttp3/OkHttpClient;.retryOnConnectionFailure:()Z` @kind virtual;
  #L23962a.  v5:= temp;
  #L23962c.  v0:= v7 @kind object;
  #L23962e.  v6:= v10;
  #L239630.  call temp:= `findHealthyConnection`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/connection/StreamAllocation;.findHealthyConnection:(IIIIZZ)Lokhttp3/internal/connection/RealConnection;` @kind direct;
  #L239636.  v10:= temp @kind object;
  #L239638.  call temp:= `newCodec`(v10, v8, v9, v7) @signature `Lokhttp3/internal/connection/RealConnection;.newCodec:(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Lokhttp3/internal/connection/StreamAllocation;)Lokhttp3/internal/http/HttpCodec;` @kind virtual;
  #L23963e.  v8:= temp @kind object;
  #L239640.  v9:= v7.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L239644.  @monitorenter v9
  #L239646.  v7.`okhttp3.internal.connection.StreamAllocation.codec` @type ^`okhttp3.internal.http.HttpCodec` := v8 @kind object;
  #L23964a.  @monitorexit v9
  #L23964c.  return v8 @kind object;
  #L23964e.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L239650.  @monitorexit v9
  #L239652.  throw v8;
  #L239654.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L239656.  v9:= new `okhttp3.internal.connection.RouteException`;
  #L23965a.  call `<init>`(v9, v8) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L239660.  throw v9;
  catch `java.io.IOException` @[L239630..L239646] goto L239654;
  catch `java.lang.Throwable` @[L239646..L239652] goto L23964e;
  catch `java.io.IOException` @[L239652..L239654] goto L239654;
}
procedure `void` `noNewStreams`(`okhttp3.internal.connection.StreamAllocation` v4 @kind this) @signature `Lokhttp3/internal/connection/StreamAllocation;.noNewStreams:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23978c.  v0:= v4.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L239790.  @monitorenter v0
  #L239792.  v1:= v4.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L239796.  v2:= 1I;
  #L239798.  v3:= 0I;
  #L23979a.  call temp:= `deallocate`(v4, v2, v3, v3) @signature `Lokhttp3/internal/connection/StreamAllocation;.deallocate:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L2397a0.  v2:= temp @kind object;
  #L2397a2.  v3:= v4.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L2397a6.  if v3 == 0 then goto L2397ac;
  #L2397aa.  v1:= 0I;
  #L2397ac.  @monitorexit v0
  #L2397ae.  call `closeQuietly`(v2) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L2397b4.  if v1 == 0 then goto L2397c6;
  #L2397b8.  v0:= v4.`okhttp3.internal.connection.StreamAllocation.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L2397bc.  v2:= v4.`okhttp3.internal.connection.StreamAllocation.call` @type ^`okhttp3.Call` @kind object;
  #L2397c0.  call `connectionReleased`(v0, v2, v1) @signature `Lokhttp3/EventListener;.connectionReleased:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L2397c6.  return @kind void;
  #L2397c8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2397ca.  @monitorexit v0
  #L2397cc.  throw v1;
  catch `java.lang.Throwable` @[L239792..L2397ae] goto L2397c8;
  catch `java.lang.Throwable` @[L2397ca..L2397cc] goto L2397c8;
}
procedure `void` `release`(`okhttp3.internal.connection.StreamAllocation` v4 @kind this) @signature `Lokhttp3/internal/connection/StreamAllocation;.release:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2397f4.  v0:= v4.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L2397f8.  @monitorenter v0
  #L2397fa.  v1:= v4.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L2397fe.  v2:= 1I;
  #L239800.  v3:= 0I;
  #L239802.  call temp:= `deallocate`(v4, v3, v2, v3) @signature `Lokhttp3/internal/connection/StreamAllocation;.deallocate:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L239808.  v2:= temp @kind object;
  #L23980a.  v3:= v4.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L23980e.  if v3 == 0 then goto L239814;
  #L239812.  v1:= 0I;
  #L239814.  @monitorexit v0
  #L239816.  call `closeQuietly`(v2) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L23981c.  if v1 == 0 then goto L23982e;
  #L239820.  v0:= v4.`okhttp3.internal.connection.StreamAllocation.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L239824.  v2:= v4.`okhttp3.internal.connection.StreamAllocation.call` @type ^`okhttp3.Call` @kind object;
  #L239828.  call `connectionReleased`(v0, v2, v1) @signature `Lokhttp3/EventListener;.connectionReleased:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L23982e.  return @kind void;
  #L239830.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L239832.  @monitorexit v0
  #L239834.  throw v1;
  catch `java.lang.Throwable` @[L2397fa..L239816] goto L239830;
  catch `java.lang.Throwable` @[L239832..L239834] goto L239830;
}
procedure `java.net.Socket` `releaseAndAcquire`(`okhttp3.internal.connection.StreamAllocation` v3 @kind this, `okhttp3.internal.connection.RealConnection` v4 @kind object) @signature `Lokhttp3/internal/connection/StreamAllocation;.releaseAndAcquire:(Lokhttp3/internal/connection/RealConnection;)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2391a0.  v0:= v3.`okhttp3.internal.connection.StreamAllocation.codec` @type ^`okhttp3.internal.http.HttpCodec` @kind object;
  #L2391a4.  if v0 != 0 then goto L2391ec;
  #L2391a8.  v0:= v3.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L2391ac.  v0:= v0.`okhttp3.internal.connection.RealConnection.allocations` @type ^`java.util.List` @kind object;
  #L2391b0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2391b6.  v0:= temp;
  #L2391b8.  v1:= 1I;
  #L2391ba.  if v0 != v1 then goto L2391ec;
  #L2391be.  v0:= v3.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L2391c2.  v0:= v0.`okhttp3.internal.connection.RealConnection.allocations` @type ^`java.util.List` @kind object;
  #L2391c6.  v2:= 0I;
  #L2391c8.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2391ce.  v0:= temp @kind object;
  #L2391d0.  v0:= (`java.lang.ref.Reference`) v0 @kind object;
  #L2391d4.  call temp:= `deallocate`(v3, v1, v2, v2) @signature `Lokhttp3/internal/connection/StreamAllocation;.deallocate:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L2391da.  v1:= temp @kind object;
  #L2391dc.  v3.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` := v4 @kind object;
  #L2391e0.  v4:= v4.`okhttp3.internal.connection.RealConnection.allocations` @type ^`java.util.List` @kind object;
  #L2391e4.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2391ea.  return v1 @kind object;
  #L2391ec.  v4:= new `java.lang.IllegalStateException`;
  #L2391f0.  call `<init>`(v4) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L2391f6.  throw v4;
}
procedure `okhttp3.Route` `route`(`okhttp3.internal.connection.StreamAllocation` v1 @kind this) @signature `Lokhttp3/internal/connection/StreamAllocation;.route:()Lokhttp3/Route;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23923c.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.route` @type ^`okhttp3.Route` @kind object;
  #L239240.  return v0 @kind object;
}
procedure `void` `streamFailed`(`okhttp3.internal.connection.StreamAllocation` v6 @kind this, `java.io.IOException` v7 @kind object) @signature `Lokhttp3/internal/connection/StreamAllocation;.streamFailed:(Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2398bc.  v0:= v6.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L2398c0.  @monitorenter v0
  #L2398c2.  v1:= instanceof @variable v7 @type ^`okhttp3.internal.http2.StreamResetException` @kind boolean;
  #L2398c6.  v2:= 0I;
  #L2398c8.  v3:= 0I;
  #L2398ca.  v4:= 1I;
  #L2398cc.  if v1 == 0 then goto L23990c;
  #L2398d0.  v7:= (`okhttp3.internal.http2.StreamResetException`) v7 @kind object;
  #L2398d4.  v1:= v7.`okhttp3.internal.http2.StreamResetException.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2398d8.  v5:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2398dc.  if v1 != v5 then goto L2398ea;
  #L2398e0.  v1:= v6.`okhttp3.internal.connection.StreamAllocation.refusedStreamCount` @type ^`int`;
  #L2398e4.  v1:= v1 + v4 @kind int;
  #L2398e6.  v6.`okhttp3.internal.connection.StreamAllocation.refusedStreamCount` @type ^`int` := v1;
  #L2398ea.  v7:= v7.`okhttp3.internal.http2.StreamResetException.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2398ee.  v1:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2398f2.  if v7 != v1 then goto L239904;
  #L2398f6.  v7:= v6.`okhttp3.internal.connection.StreamAllocation.refusedStreamCount` @type ^`int`;
  #L2398fa.  if v7 <= v4 then goto L239900;
  #L2398fe.  goto L239904;
  #L239900.  v7:= 0I;
  #L239902.  goto L23995c;
  #L239904.  v6.`okhttp3.internal.connection.StreamAllocation.route` @type ^`okhttp3.Route` := v3 @kind object;
  #L239908.  v7:= 1I;
  #L23990a.  goto L23995c;
  #L23990c.  v1:= v6.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L239910.  if v1 == 0 then goto L23995a;
  #L239914.  v1:= v6.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L239918.  call temp:= `isMultiplexed`(v1) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed:()Z` @kind virtual;
  #L23991e.  v1:= temp;
  #L239920.  if v1 == 0 then goto L23992c;
  #L239924.  v1:= instanceof @variable v7 @type ^`okhttp3.internal.http2.ConnectionShutdownException` @kind boolean;
  #L239928.  if v1 == 0 then goto L23995a;
  #L23992c.  v1:= v6.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L239930.  v1:= v1.`okhttp3.internal.connection.RealConnection.successCount` @type ^`int`;
  #L239934.  if v1 != 0 then goto L239956;
  #L239938.  v1:= v6.`okhttp3.internal.connection.StreamAllocation.route` @type ^`okhttp3.Route` @kind object;
  #L23993c.  if v1 == 0 then goto L239952;
  #L239940.  if v7 == 0 then goto L239952;
  #L239944.  v1:= v6.`okhttp3.internal.connection.StreamAllocation.routeSelector` @type ^`okhttp3.internal.connection.RouteSelector` @kind object;
  #L239948.  v5:= v6.`okhttp3.internal.connection.StreamAllocation.route` @type ^`okhttp3.Route` @kind object;
  #L23994c.  call `connectFailed`(v1, v5, v7) @signature `Lokhttp3/internal/connection/RouteSelector;.connectFailed:(Lokhttp3/Route;Ljava/io/IOException;)V` @kind virtual;
  #L239952.  v6.`okhttp3.internal.connection.StreamAllocation.route` @type ^`okhttp3.Route` := v3 @kind object;
  #L239956.  v7:= 1I;
  #L239958.  goto L23995c;
  #L23995a.  v7:= 0I;
  #L23995c.  v1:= v6.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L239960.  call temp:= `deallocate`(v6, v7, v2, v4) @signature `Lokhttp3/internal/connection/StreamAllocation;.deallocate:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L239966.  v7:= temp @kind object;
  #L239968.  v2:= v6.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L23996c.  if v2 != 0 then goto L239978;
  #L239970.  v2:= v6.`okhttp3.internal.connection.StreamAllocation.reportedAcquired` @type ^`boolean` @kind boolean;
  #L239974.  if v2 != 0 then goto L23997a;
  #L239978.  v1:= v3 @kind object;
  #L23997a.  @monitorexit v0
  #L23997c.  call `closeQuietly`(v7) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L239982.  if v1 == 0 then goto L239994;
  #L239986.  v7:= v6.`okhttp3.internal.connection.StreamAllocation.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L23998a.  v0:= v6.`okhttp3.internal.connection.StreamAllocation.call` @type ^`okhttp3.Call` @kind object;
  #L23998e.  call `connectionReleased`(v7, v0, v1) @signature `Lokhttp3/EventListener;.connectionReleased:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L239994.  return @kind void;
  #L239996.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L239998.  @monitorexit v0
  #L23999a.  throw v7;
  catch `java.lang.Throwable` @[L2398c2..L23997c] goto L239996;
  catch `java.lang.Throwable` @[L239998..L23999a] goto L239996;
}
procedure `void` `streamFinished`(`okhttp3.internal.connection.StreamAllocation` v2 @kind this, `boolean` v3 , `okhttp3.internal.http.HttpCodec` v4 @kind object, `long` v5 , `java.io.IOException` v7 @kind object) @signature `Lokhttp3/internal/connection/StreamAllocation;.streamFinished:(ZLokhttp3/internal/http/HttpCodec;JLjava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2399c0.  v0:= v2.`okhttp3.internal.connection.StreamAllocation.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L2399c4.  v1:= v2.`okhttp3.internal.connection.StreamAllocation.call` @type ^`okhttp3.Call` @kind object;
  #L2399c8.  call `responseBodyEnd`(v0, v1, v5) @signature `Lokhttp3/EventListener;.responseBodyEnd:(Lokhttp3/Call;J)V` @kind virtual;
  #L2399ce.  v5:= v2.`okhttp3.internal.connection.StreamAllocation.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L2399d2.  @monitorenter v5
  #L2399d4.  if v4 == 0 then goto L239a52;
  #L2399d8.  v6:= v2.`okhttp3.internal.connection.StreamAllocation.codec` @type ^`okhttp3.internal.http.HttpCodec` @kind object;
  #L2399dc.  if v4 != v6 then goto L239a52;
  #L2399e0.  v4:= 1I;
  #L2399e2.  if v3 != 0 then goto L2399f4;
  #L2399e6.  v6:= v2.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L2399ea.  v0:= v6.`okhttp3.internal.connection.RealConnection.successCount` @type ^`int`;
  #L2399ee.  v0:= v0 + v4 @kind int;
  #L2399f0.  v6.`okhttp3.internal.connection.RealConnection.successCount` @type ^`int` := v0;
  #L2399f4.  v6:= v2.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L2399f8.  v0:= 0I;
  #L2399fa.  call temp:= `deallocate`(v2, v3, v0, v4) @signature `Lokhttp3/internal/connection/StreamAllocation;.deallocate:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L239a00.  v3:= temp @kind object;
  #L239a02.  v4:= v2.`okhttp3.internal.connection.StreamAllocation.connection` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L239a06.  if v4 == 0 then goto L239a0c;
  #L239a0a.  v6:= 0I;
  #L239a0c.  v4:= v2.`okhttp3.internal.connection.StreamAllocation.released` @type ^`boolean` @kind boolean;
  #L239a10.  @monitorexit v5
  #L239a12.  call `closeQuietly`(v3) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L239a18.  if v6 == 0 then goto L239a2a;
  #L239a1c.  v3:= v2.`okhttp3.internal.connection.StreamAllocation.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L239a20.  v5:= v2.`okhttp3.internal.connection.StreamAllocation.call` @type ^`okhttp3.Call` @kind object;
  #L239a24.  call `connectionReleased`(v3, v5, v6) @signature `Lokhttp3/EventListener;.connectionReleased:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L239a2a.  if v7 == 0 then goto L239a3e;
  #L239a2e.  v3:= v2.`okhttp3.internal.connection.StreamAllocation.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L239a32.  v4:= v2.`okhttp3.internal.connection.StreamAllocation.call` @type ^`okhttp3.Call` @kind object;
  #L239a36.  call `callFailed`(v3, v4, v7) @signature `Lokhttp3/EventListener;.callFailed:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind virtual;
  #L239a3c.  goto L239a50;
  #L239a3e.  if v4 == 0 then goto L239a50;
  #L239a42.  v3:= v2.`okhttp3.internal.connection.StreamAllocation.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L239a46.  v4:= v2.`okhttp3.internal.connection.StreamAllocation.call` @type ^`okhttp3.Call` @kind object;
  #L239a4a.  call `callEnd`(v3, v4) @signature `Lokhttp3/EventListener;.callEnd:(Lokhttp3/Call;)V` @kind virtual;
  #L239a50.  return @kind void;
  #L239a52.  v3:= new `java.lang.IllegalStateException`;
  #L239a56.  v6:= new `java.lang.StringBuilder`;
  #L239a5a.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L239a60.  v7:= "expected " @kind object;
  #L239a64.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L239a6a.  v7:= v2.`okhttp3.internal.connection.StreamAllocation.codec` @type ^`okhttp3.internal.http.HttpCodec` @kind object;
  #L239a6e.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L239a74.  v7:= " but was " @kind object;
  #L239a78.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L239a7e.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L239a84.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L239a8a.  v4:= temp @kind object;
  #L239a8c.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L239a92.  throw v3;
  #L239a94.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L239a96.  @monitorexit v5
  #L239a98.  throw v3;
  catch `java.lang.Throwable` @[L2399d8..L239a12] goto L239a94;
  catch `java.lang.Throwable` @[L239a52..L239a98] goto L239a94;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.connection.StreamAllocation` v1 @kind this) @signature `Lokhttp3/internal/connection/StreamAllocation;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2390bc.  call temp:= `connection`(v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L2390c2.  v0:= temp @kind object;
  #L2390c4.  if v0 == 0 then goto L2390d2;
  #L2390c8.  call temp:= `toString`(v0) @signature `Lokhttp3/internal/connection/RealConnection;.toString:()Ljava/lang/String;` @kind virtual;
  #L2390ce.  v0:= temp @kind object;
  #L2390d0.  goto L2390de;
  #L2390d2.  v0:= v1.`okhttp3.internal.connection.StreamAllocation.address` @type ^`okhttp3.Address` @kind object;
  #L2390d6.  call temp:= `toString`(v0) @signature `Lokhttp3/Address;.toString:()Ljava/lang/String;` @kind virtual;
  #L2390dc.  v0:= temp @kind object;
  #L2390de.  return v0 @kind object;
}
