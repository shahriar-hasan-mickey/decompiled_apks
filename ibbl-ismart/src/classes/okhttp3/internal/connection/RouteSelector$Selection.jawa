record `okhttp3.internal.connection.RouteSelector$Selection` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RouteSelector$Selection.routes` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteSelector$Selection` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L238ae0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L238ae6.  v0:= 0I;
  #L238ae8.  v1.`okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @type ^`int` := v0;
  #L238aec.  v1.`okhttp3.internal.connection.RouteSelector$Selection.routes` @type ^`java.util.List` := v2 @kind object;
  #L238af0.  return @kind void;
}
procedure `java.util.List` `getAll`(`okhttp3.internal.connection.RouteSelector$Selection` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.getAll:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L238a78.  v0:= new `java.util.ArrayList`;
  #L238a7c.  v1:= v2.`okhttp3.internal.connection.RouteSelector$Selection.routes` @type ^`java.util.List` @kind object;
  #L238a80.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L238a86.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`okhttp3.internal.connection.RouteSelector$Selection` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L238a4c.  v0:= v2.`okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @type ^`int`;
  #L238a50.  v1:= v2.`okhttp3.internal.connection.RouteSelector$Selection.routes` @type ^`java.util.List` @kind object;
  #L238a54.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L238a5a.  v1:= temp;
  #L238a5c.  if v0 >= v1 then goto L238a64;
  #L238a60.  v0:= 1I;
  #L238a62.  goto L238a66;
  #L238a64.  v0:= 0I;
  #L238a66.  return v0;
}
procedure `okhttp3.Route` `next`(`okhttp3.internal.connection.RouteSelector$Selection` v3 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.next:()Lokhttp3/Route;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L238a98.  call temp:= `hasNext`(v3) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @kind virtual;
  #L238a9e.  v0:= temp;
  #L238aa0.  if v0 == 0 then goto L238ac2;
  #L238aa4.  v0:= v3.`okhttp3.internal.connection.RouteSelector$Selection.routes` @type ^`java.util.List` @kind object;
  #L238aa8.  v1:= v3.`okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @type ^`int`;
  #L238aac.  v2:= v1 + 1;
  #L238ab0.  v3.`okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @type ^`int` := v2;
  #L238ab4.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L238aba.  v0:= temp @kind object;
  #L238abc.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L238ac0.  return v0 @kind object;
  #L238ac2.  v0:= new `java.util.NoSuchElementException`;
  #L238ac6.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L238acc.  throw v0;
}
