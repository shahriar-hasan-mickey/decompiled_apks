record `okhttp3.RealCall$AsyncCall` @kind class @AccessFlag FINAL extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.Callback` `okhttp3.RealCall$AsyncCall.responseCallback` @AccessFlag PRIVATE_FINAL;
  `okhttp3.RealCall` `okhttp3.RealCall$AsyncCall.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.RealCall$AsyncCall` v3 @kind this, `okhttp3.RealCall` v4 @kind object, `okhttp3.Callback` v5 @kind object) @signature `Lokhttp3/RealCall$AsyncCall;.<init>:(Lokhttp3/RealCall;Lokhttp3/Callback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L231114.  v3.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` := v4 @kind object;
  #L231118.  v0:= "OkHttp %s" @kind object;
  #L23111c.  v1:= 1I;
  #L23111e.  v1:= new `java.lang.Object`[v1];
  #L231122.  call temp:= `redactedUrl`(v4) @signature `Lokhttp3/RealCall;.redactedUrl:()Ljava/lang/String;` @kind virtual;
  #L231128.  v4:= temp @kind object;
  #L23112a.  v2:= 0I;
  #L23112c.  v1[v2]:= v4 @kind object;
  #L231130.  call `<init>`(v3, v0, v1) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L231136.  v3.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` := v5 @kind object;
  #L23113a.  return @kind void;
}
procedure `void` `execute`(`okhttp3.RealCall$AsyncCall` v5 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.execute:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L23114c.  v0:= 1I;
  #L23114e.  v1:= 0I;
  #L231150.  v2:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L231154.  call temp:= `getResponseWithInterceptorChain`(v2) @signature `Lokhttp3/RealCall;.getResponseWithInterceptorChain:()Lokhttp3/Response;` @kind virtual;
  #L23115a.  v2:= temp @kind object;
  #L23115c.  v3:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L231160.  v3:= v3.`okhttp3.RealCall.retryAndFollowUpInterceptor` @type ^`okhttp3.internal.http.RetryAndFollowUpInterceptor` @kind object;
  #L231164.  call temp:= `isCanceled`(v3) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.isCanceled:()Z` @kind virtual;
  #L23116a.  v1:= temp;
  #L23116c.  if v1 == 0 then goto L23118e;
  #L231170.  v1:= v5.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L231174.  v2:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L231178.  v3:= new `java.io.IOException`;
  #L23117c.  v4:= "Canceled" @kind object;
  #L231180.  call `<init>`(v3, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L231186.  call `onFailure`(v1, v2, v3) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #L23118c.  goto L23119c;
  #L23118e.  v1:= v5.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L231192.  v3:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L231196.  call `onResponse`(v1, v3, v2) @signature `Lokhttp3/Callback;.onResponse:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind interface;
  #L23119c.  v0:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2311a0.  v0:= v0.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2311a4.  call temp:= `dispatcher`(v0) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L2311aa.  v0:= temp @kind object;
  #L2311ac.  call `finished`(v0, v5) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L2311b2.  goto L23122c;
  #L2311b4.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L2311b6.  goto L2311c2;
  #L2311b8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2311ba.  goto L23122e;
  #L2311bc.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L2311be.  v1:= v0 @kind object;
  #L2311c0.  v0:= 0I;
  #L2311c2.  if v0 == 0 then goto L231206;
  #L2311c6.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L2311cc.  v0:= temp @kind object;
  #L2311ce.  v2:= 4I;
  #L2311d0.  v3:= new `java.lang.StringBuilder`;
  #L2311d4.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2311da.  v4:= "Callback failure for " @kind object;
  #L2311de.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2311e4.  v4:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2311e8.  call temp:= `toLoggableString`(v4) @signature `Lokhttp3/RealCall;.toLoggableString:()Ljava/lang/String;` @kind virtual;
  #L2311ee.  v4:= temp @kind object;
  #L2311f0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2311f6.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2311fc.  v3:= temp @kind object;
  #L2311fe.  call `log`(v0, v2, v3, v1) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L231204.  goto L23119c;
  #L231206.  v0:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L23120a.  call temp:= `access$000`(v0) @signature `Lokhttp3/RealCall;.access$000:(Lokhttp3/RealCall;)Lokhttp3/EventListener;` @kind static;
  #L231210.  v0:= temp @kind object;
  #L231212.  v2:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L231216.  call `callFailed`(v0, v2, v1) @signature `Lokhttp3/EventListener;.callFailed:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind virtual;
  #L23121c.  v0:= v5.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L231220.  v2:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L231224.  call `onFailure`(v0, v2, v1) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #L23122a.  goto L23119c;
  #L23122c.  return @kind void;
  #L23122e.  v1:= v5.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L231232.  v1:= v1.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L231236.  call temp:= `dispatcher`(v1) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L23123c.  v1:= temp @kind object;
  #L23123e.  call `finished`(v1, v5) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L231244.  throw v0;
  #L231246.  return @kind void;
  catch `java.io.IOException` @[L231150..L23116c] goto L2311bc;
  catch `java.lang.Throwable` @[L231150..L23116c] goto L2311b8;
  catch `java.io.IOException` @[L231170..L23119c] goto L2311b4;
  catch `java.lang.Throwable` @[L231170..L23119c] goto L2311b8;
  catch `java.lang.Throwable` @[L2311c6..L23122a] goto L2311b8;
}
procedure `okhttp3.RealCall` `get`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @AccessFlag  {
    temp;
    v0;

  #L2310e0.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2310e4.  return v0 @kind object;
}
procedure `java.lang.String` `host`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.host:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L2310b4.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2310b8.  v0:= v0.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L2310bc.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2310c2.  v0:= temp @kind object;
  #L2310c4.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L2310ca.  v0:= temp @kind object;
  #L2310cc.  return v0 @kind object;
}
procedure `okhttp3.Request` `request`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.request:()Lokhttp3/Request;` @AccessFlag  {
    temp;
    v0;

  #L2310f8.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2310fc.  v0:= v0.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L231100.  return v0 @kind object;
}
