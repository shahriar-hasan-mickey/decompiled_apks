record `okhttp3.HttpUrl` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.HttpUrl.fragment` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.host` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.HttpUrl.password` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.HttpUrl.pathSegments` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.HttpUrl.port` @AccessFlag FINAL;
  `java.util.List` `okhttp3.HttpUrl.queryNamesAndValues` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.scheme` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.HttpUrl.url` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.username` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.HttpUrl.FORM_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `char`[] `@@okhttp3.HttpUrl.HEX_DIGITS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PASSWORD_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_REENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.USERNAME_ENCODE_SET` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L22ea58.  v0:= 16I;
  #L22ea5c.  v0:= new `char`[v0];
  #L22ea60.  goto L22ea6c;
  #L22ea66.  `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] := v0 @kind object;
  #L22ea6a.  return @kind void;
  #L22ea6c.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L22ea93.  goto L22ea66;
}
procedure `void` `<init>`(`okhttp3.HttpUrl` v4 @kind this, `okhttp3.HttpUrl$Builder` v5 @kind object) @signature `Lokhttp3/HttpUrl;.<init>:(Lokhttp3/HttpUrl$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22eaa4.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22eaaa.  v0:= v5.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L22eaae.  v4.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L22eab2.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L22eab6.  v1:= 0I;
  #L22eab8.  call temp:= `percentDecode`(v0, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L22eabe.  v0:= temp @kind object;
  #L22eac0.  v4.`okhttp3.HttpUrl.username` @type ^`java.lang.String` := v0 @kind object;
  #L22eac4.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L22eac8.  call temp:= `percentDecode`(v0, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L22eace.  v0:= temp @kind object;
  #L22ead0.  v4.`okhttp3.HttpUrl.password` @type ^`java.lang.String` := v0 @kind object;
  #L22ead4.  v0:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L22ead8.  v4.`okhttp3.HttpUrl.host` @type ^`java.lang.String` := v0 @kind object;
  #L22eadc.  call temp:= `effectivePort`(v5) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @kind virtual;
  #L22eae2.  v0:= temp;
  #L22eae4.  v4.`okhttp3.HttpUrl.port` @type ^`int` := v0;
  #L22eae8.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22eaec.  call temp:= `percentDecode`(v4, v0, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L22eaf2.  v0:= temp @kind object;
  #L22eaf4.  v4.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` := v0 @kind object;
  #L22eaf8.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22eafc.  v2:= 0I;
  #L22eafe.  if v0 == 0 then goto L22eb12;
  #L22eb02.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22eb06.  v3:= 1I;
  #L22eb08.  call temp:= `percentDecode`(v4, v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L22eb0e.  v0:= temp @kind object;
  #L22eb10.  goto L22eb14;
  #L22eb12.  v0:= v2 @kind object;
  #L22eb14.  v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L22eb18.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L22eb1c.  if v0 == 0 then goto L22eb2c;
  #L22eb20.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L22eb24.  call temp:= `percentDecode`(v0, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L22eb2a.  v2:= temp @kind object;
  #L22eb2c.  v4.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` := v2 @kind object;
  #L22eb30.  call temp:= `toString`(v5) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22eb36.  v5:= temp @kind object;
  #L22eb38.  v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` := v5 @kind object;
  #L22eb3c.  return @kind void;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v11 @kind object, `int` v12 , `int` v13 , `java.lang.String` v14 @kind object, `boolean` v15 , `boolean` v16 , `boolean` v17 , `boolean` v18 , `java.nio.charset.Charset` v19 @kind object) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L22df68.  v1:= v11 @kind object;
  #L22df6a.  v3:= v13;
  #L22df6c.  v2:= v12;
  #L22df6e.  if v2 >= v3 then goto L22e01a;
  #L22df72.  call temp:= `codePointAt`(v11, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L22df78.  v0:= temp;
  #L22df7a.  v4:= 32I;
  #L22df7e.  if v0 < v4 then goto L22dfdc;
  #L22df82.  v4:= 127I;
  #L22df86.  if v0 == v4 then goto L22dfdc;
  #L22df8a.  v4:= 128I;
  #L22df8e.  if v0 < v4 then goto L22df96;
  #L22df92.  if v18 != 0 then goto L22dfdc;
  #L22df96.  v4:= v14 @kind object;
  #L22df98.  call temp:= `indexOf`(v14, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L22df9e.  v5:= temp;
  #L22dfa0.  v6:= -1I;
  #L22dfa2.  if v5 != v6 then goto L22dfde;
  #L22dfa6.  v5:= 37I;
  #L22dfaa.  if v0 != v5 then goto L22dfc2;
  #L22dfae.  if v15 == 0 then goto L22dfde;
  #L22dfb2.  if v16 == 0 then goto L22dfc2;
  #L22dfb6.  call temp:= `percentEncoded`(v11, v2, v13) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @kind static;
  #L22dfbc.  v5:= temp;
  #L22dfbe.  if v5 == 0 then goto L22dfde;
  #L22dfc2.  v5:= 43I;
  #L22dfc6.  if v0 != v5 then goto L22dfd0;
  #L22dfca.  if v17 == 0 then goto L22dfd0;
  #L22dfce.  goto L22dfde;
  #L22dfd0.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L22dfd6.  v0:= temp;
  #L22dfd8.  v2:= v2 + v0 @kind int;
  #L22dfda.  goto L22df6e;
  #L22dfdc.  v4:= v14 @kind object;
  #L22dfde.  v10:= new `okio.Buffer`;
  #L22dfe2.  call `<init>`(v10) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L22dfe8.  v0:= v12;
  #L22dfea.  call temp:= `writeUtf8`(v10, v11, v12, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L22dff0.  v0:= v10 @kind object;
  #L22dff2.  v1:= v11 @kind object;
  #L22dff4.  v3:= v13;
  #L22dff6.  v4:= v14 @kind object;
  #L22dff8.  v5:= v15;
  #L22dffa.  v6:= v16;
  #L22dffe.  v7:= v17;
  #L22e002.  v8:= v18;
  #L22e006.  v9:= v19 @kind object;
  #L22e00a.  call `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @kind static;
  #L22e010.  call temp:= `readUtf8`(v10) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L22e016.  v0:= temp @kind object;
  #L22e018.  return v0 @kind object;
  #L22e01a.  v0:= v12;
  #L22e01c.  call temp:= `substring`(v11, v12, v13) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22e022.  v0:= temp @kind object;
  #L22e024.  return v0 @kind object;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L22e038.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22e03e.  v2:= temp;
  #L22e040.  v1:= 0I;
  #L22e042.  v8:= 0I;
  #L22e044.  v0:= v9 @kind object;
  #L22e046.  v3:= v10 @kind object;
  #L22e048.  v4:= v11;
  #L22e04a.  v5:= v12;
  #L22e04c.  v6:= v13;
  #L22e04e.  v7:= v14;
  #L22e050.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L22e056.  v9:= temp @kind object;
  #L22e058.  return v9 @kind object;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 , `java.nio.charset.Charset` v15 @kind object) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L22e06c.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22e072.  v2:= temp;
  #L22e074.  v1:= 0I;
  #L22e076.  v0:= v9 @kind object;
  #L22e078.  v3:= v10 @kind object;
  #L22e07a.  v4:= v11;
  #L22e07c.  v5:= v12;
  #L22e07e.  v6:= v13;
  #L22e080.  v7:= v14;
  #L22e082.  v8:= v15 @kind object;
  #L22e084.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L22e08a.  v9:= temp @kind object;
  #L22e08c.  return v9 @kind object;
}
procedure `void` `canonicalize`(`okio.Buffer` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 , `java.nio.charset.Charset` v15 @kind object) @signature `Lokhttp3/HttpUrl;.canonicalize:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22eb50.  v0:= 0I;
  #L22eb52.  if v8 >= v9 then goto L22ec8c;
  #L22eb56.  call temp:= `codePointAt`(v7, v8) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L22eb5c.  v1:= temp;
  #L22eb5e.  if v11 == 0 then goto L22eb86;
  #L22eb62.  v2:= 9I;
  #L22eb66.  if v1 == v2 then goto L22ec7e;
  #L22eb6a.  v2:= 10I;
  #L22eb6e.  if v1 == v2 then goto L22ec7e;
  #L22eb72.  v2:= 12I;
  #L22eb76.  if v1 == v2 then goto L22ec7e;
  #L22eb7a.  v2:= 13I;
  #L22eb7e.  if v1 != v2 then goto L22eb86;
  #L22eb82.  goto L22ec7e;
  #L22eb86.  v2:= 43I;
  #L22eb8a.  if v1 != v2 then goto L22ebaa;
  #L22eb8e.  if v13 == 0 then goto L22ebaa;
  #L22eb92.  if v11 == 0 then goto L22eb9c;
  #L22eb96.  v2:= "+" @kind object;
  #L22eb9a.  goto L22eba0;
  #L22eb9c.  v2:= "%2B" @kind object;
  #L22eba0.  call temp:= `writeUtf8`(v6, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L22eba6.  goto L22ec7e;
  #L22ebaa.  v2:= 32I;
  #L22ebae.  v3:= 37I;
  #L22ebb2.  if v1 < v2 then goto L22ebfa;
  #L22ebb6.  v2:= 127I;
  #L22ebba.  if v1 == v2 then goto L22ebfa;
  #L22ebbe.  v2:= 128I;
  #L22ebc2.  if v1 < v2 then goto L22ebca;
  #L22ebc6.  if v14 != 0 then goto L22ebfa;
  #L22ebca.  call temp:= `indexOf`(v10, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L22ebd0.  v2:= temp;
  #L22ebd2.  v4:= -1I;
  #L22ebd4.  if v2 != v4 then goto L22ebfa;
  #L22ebd8.  if v1 != v3 then goto L22ebf2;
  #L22ebdc.  if v11 == 0 then goto L22ebfa;
  #L22ebe0.  if v12 == 0 then goto L22ebf2;
  #L22ebe4.  call temp:= `percentEncoded`(v7, v8, v9) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @kind static;
  #L22ebea.  v2:= temp;
  #L22ebec.  if v2 != 0 then goto L22ebf2;
  #L22ebf0.  goto L22ebfa;
  #L22ebf2.  call temp:= `writeUtf8CodePoint`(v6, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L22ebf8.  goto L22ec7e;
  #L22ebfa.  if v0 != 0 then goto L22ec08;
  #L22ebfe.  v0:= new `okio.Buffer`;
  #L22ec02.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L22ec08.  if v15 == 0 then goto L22ec30;
  #L22ec0c.  v2:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L22ec10.  call temp:= `equals`(v15, v2) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22ec16.  v2:= temp;
  #L22ec18.  if v2 == 0 then goto L22ec1e;
  #L22ec1c.  goto L22ec30;
  #L22ec1e.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L22ec24.  v2:= temp;
  #L22ec26.  v2:= v2 + v8 @kind int;
  #L22ec28.  call temp:= `writeString`(v0, v7, v8, v2, v15) @signature `Lokio/Buffer;.writeString:(Ljava/lang/String;IILjava/nio/charset/Charset;)Lokio/Buffer;` @kind virtual;
  #L22ec2e.  goto L22ec36;
  #L22ec30.  call temp:= `writeUtf8CodePoint`(v0, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L22ec36.  call temp:= `exhausted`(v0) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L22ec3c.  v2:= temp;
  #L22ec3e.  if v2 != 0 then goto L22ec7e;
  #L22ec42.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L22ec48.  v2:= temp;
  #L22ec4a.  v2:= v2 ^& 255;
  #L22ec4e.  call temp:= `writeByte`(v6, v3) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L22ec54.  v4:= `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] @kind object;
  #L22ec58.  v5:= v2 ^> 4;
  #L22ec5c.  v5:= v5 ^& 15;
  #L22ec60.  v4:= v4[v5] @kind char;
  #L22ec64.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L22ec6a.  v4:= `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] @kind object;
  #L22ec6e.  v2:= v2 ^& 15;
  #L22ec72.  v2:= v4[v2] @kind char;
  #L22ec76.  call temp:= `writeByte`(v6, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L22ec7c.  goto L22ec36;
  #L22ec7e.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L22ec84.  v1:= temp;
  #L22ec86.  v8:= v8 + v1 @kind int;
  #L22ec88.  goto L22eb52;
  #L22ec8c.  return @kind void;
}
procedure `int` `defaultPort`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L22dea4.  v0:= "http" @kind object;
  #L22dea8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22deae.  v0:= temp;
  #L22deb0.  if v0 == 0 then goto L22deba;
  #L22deb4.  v1:= 80I;
  #L22deb8.  return v1;
  #L22deba.  v0:= "https" @kind object;
  #L22debe.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22dec4.  v1:= temp;
  #L22dec6.  if v1 == 0 then goto L22ded0;
  #L22deca.  v1:= 443I;
  #L22dece.  return v1;
  #L22ded0.  v1:= -1I;
  #L22ded2.  return v1;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URI` v0 @kind object) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URI;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L22e820.  call temp:= `toString`(v0) @signature `Ljava/net/URI;.toString:()Ljava/lang/String;` @kind virtual;
  #L22e826.  v0:= temp @kind object;
  #L22e828.  call temp:= `parse`(v0) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L22e82e.  v0:= temp @kind object;
  #L22e830.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URL` v0 @kind object) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L22e844.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L22e84a.  v0:= temp @kind object;
  #L22e84c.  call temp:= `parse`(v0) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L22e852.  v0:= temp @kind object;
  #L22e854.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `getChecked`(`java.lang.String` v4 @kind object) @signature `Lokhttp3/HttpUrl;.getChecked:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22e868.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L22e86c.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L22e872.  v1:= 0I;
  #L22e874.  call temp:= `parse`(v0, v1, v4) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L22e87a.  v1:= temp @kind object;
  #L22e87c.  v2:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L22e880.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L22e886.  v3:= temp;
  #L22e888.  v2:= v2[v3];
  #L22e88c.  goto L22e908;
  #L22e892.  v0:= new `java.net.MalformedURLException`;
  #L22e896.  v2:= new `java.lang.StringBuilder`;
  #L22e89a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22e8a0.  v3:= "Invalid URL: " @kind object;
  #L22e8a4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22e8aa.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22e8b0.  v1:= " for " @kind object;
  #L22e8b4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22e8ba.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22e8c0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22e8c6.  v4:= temp @kind object;
  #L22e8c8.  call `<init>`(v0, v4) @signature `Ljava/net/MalformedURLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22e8ce.  throw v0;
  #L22e8d0.  v0:= new `java.net.UnknownHostException`;
  #L22e8d4.  v1:= new `java.lang.StringBuilder`;
  #L22e8d8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22e8de.  v2:= "Invalid host: " @kind object;
  #L22e8e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22e8e8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22e8ee.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22e8f4.  v4:= temp @kind object;
  #L22e8f6.  call `<init>`(v0, v4) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22e8fc.  throw v0;
  #L22e8fe.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L22e904.  v4:= temp @kind object;
  #L22e906.  return v4 @kind object;
  #L22e908.  switch v2
                  | 1 => goto L22e8fe
                  | 2 => goto L22e8d0
                  | else => goto L22e892;
}
procedure `void` `namesAndValuesToQueryString`(`java.lang.StringBuilder` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L22eca0.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22eca6.  v0:= temp;
  #L22eca8.  v1:= 0I;
  #L22ecaa.  if v1 >= v0 then goto L22ecf8;
  #L22ecae.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22ecb4.  v2:= temp @kind object;
  #L22ecb6.  v2:= (`java.lang.String`) v2 @kind object;
  #L22ecba.  v3:= v1 + 1;
  #L22ecbe.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22ecc4.  v3:= temp @kind object;
  #L22ecc6.  v3:= (`java.lang.String`) v3 @kind object;
  #L22ecca.  if v1 <= 0 then goto L22ecd8;
  #L22ecce.  v4:= 38I;
  #L22ecd2.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22ecd8.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22ecde.  if v3 == 0 then goto L22ecf2;
  #L22ece2.  v2:= 61I;
  #L22ece6.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22ecec.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22ecf2.  v1:= v1 + 2;
  #L22ecf6.  goto L22ecaa;
  #L22ecf8.  return @kind void;
}
procedure `okhttp3.HttpUrl` `parse`(`java.lang.String` v3 @kind object) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L22e928.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L22e92c.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L22e932.  v1:= 0I;
  #L22e934.  call temp:= `parse`(v0, v1, v3) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L22e93a.  v3:= temp @kind object;
  #L22e93c.  v2:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L22e940.  if v3 != v2 then goto L22e94c;
  #L22e944.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L22e94a.  v1:= temp @kind object;
  #L22e94c.  return v1 @kind object;
}
procedure `void` `pathSegmentsToString`(`java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lokhttp3/HttpUrl;.pathSegmentsToString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L22ed0c.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22ed12.  v0:= temp;
  #L22ed14.  v1:= 0I;
  #L22ed16.  if v1 >= v0 then goto L22ed3c;
  #L22ed1a.  v2:= 47I;
  #L22ed1e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L22ed24.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22ed2a.  v2:= temp @kind object;
  #L22ed2c.  v2:= (`java.lang.String`) v2 @kind object;
  #L22ed30.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22ed36.  v1:= v1 + 1;
  #L22ed3a.  goto L22ed16;
  #L22ed3c.  return @kind void;
}
procedure `java.lang.String` `percentDecode`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L22e2c0.  v0:= v4;
  #L22e2c2.  if v0 >= v5 then goto L22e30a;
  #L22e2c6.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22e2cc.  v1:= temp;
  #L22e2ce.  v2:= 37I;
  #L22e2d2.  if v1 == v2 then goto L22e2ea;
  #L22e2d6.  v2:= 43I;
  #L22e2da.  if v1 != v2 then goto L22e2e4;
  #L22e2de.  if v6 == 0 then goto L22e2e4;
  #L22e2e2.  goto L22e2ea;
  #L22e2e4.  v0:= v0 + 1;
  #L22e2e8.  goto L22e2c2;
  #L22e2ea.  v1:= new `okio.Buffer`;
  #L22e2ee.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L22e2f4.  call temp:= `writeUtf8`(v1, v3, v4, v0) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L22e2fa.  call `percentDecode`(v1, v3, v0, v5, v6) @signature `Lokhttp3/HttpUrl;.percentDecode:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @kind static;
  #L22e300.  call temp:= `readUtf8`(v1) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L22e306.  v3:= temp @kind object;
  #L22e308.  return v3 @kind object;
  #L22e30a.  call temp:= `substring`(v3, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22e310.  v3:= temp @kind object;
  #L22e312.  return v3 @kind object;
}
procedure `java.lang.String` `percentDecode`(`java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L22e29c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22e2a2.  v0:= temp;
  #L22e2a4.  v1:= 0I;
  #L22e2a6.  call temp:= `percentDecode`(v2, v1, v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L22e2ac.  v2:= temp @kind object;
  #L22e2ae.  return v2 @kind object;
}
procedure `java.util.List` `percentDecode`(`okhttp3.HttpUrl` v4 @kind this, `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22e650.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22e656.  v0:= temp;
  #L22e658.  v1:= new `java.util.ArrayList`;
  #L22e65c.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L22e662.  v2:= 0I;
  #L22e664.  if v2 >= v0 then goto L22e690;
  #L22e668.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22e66e.  v3:= temp @kind object;
  #L22e670.  v3:= (`java.lang.String`) v3 @kind object;
  #L22e674.  if v3 == 0 then goto L22e682;
  #L22e678.  call temp:= `percentDecode`(v3, v6) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L22e67e.  v3:= temp @kind object;
  #L22e680.  goto L22e684;
  #L22e682.  v3:= 0I;
  #L22e684.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22e68a.  v2:= v2 + 1;
  #L22e68e.  goto L22e664;
  #L22e690.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L22e696.  v5:= temp @kind object;
  #L22e698.  return v5 @kind object;
}
procedure `void` `percentDecode`(`okio.Buffer` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `Lokhttp3/HttpUrl;.percentDecode:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L22ed50.  if v7 >= v8 then goto L22edd4;
  #L22ed54.  call temp:= `codePointAt`(v6, v7) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L22ed5a.  v0:= temp;
  #L22ed5c.  v1:= 37I;
  #L22ed60.  if v0 != v1 then goto L22edaa;
  #L22ed64.  v1:= v7 + 2;
  #L22ed68.  if v1 >= v8 then goto L22edaa;
  #L22ed6c.  v2:= v7 + 1;
  #L22ed70.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22ed76.  v2:= temp;
  #L22ed78.  call temp:= `decodeHexDigit`(v2) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L22ed7e.  v2:= temp;
  #L22ed80.  call temp:= `charAt`(v6, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22ed86.  v3:= temp;
  #L22ed88.  call temp:= `decodeHexDigit`(v3) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L22ed8e.  v3:= temp;
  #L22ed90.  v4:= -1I;
  #L22ed92.  if v2 == v4 then goto L22edc2;
  #L22ed96.  if v3 == v4 then goto L22edc2;
  #L22ed9a.  v7:= v2 ^< 4;
  #L22ed9e.  v7:= v7 + v3 @kind int;
  #L22eda0.  call temp:= `writeByte`(v5, v7) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L22eda6.  v7:= v1;
  #L22eda8.  goto L22edc8;
  #L22edaa.  v1:= 43I;
  #L22edae.  if v0 != v1 then goto L22edc2;
  #L22edb2.  if v9 == 0 then goto L22edc2;
  #L22edb6.  v1:= 32I;
  #L22edba.  call temp:= `writeByte`(v5, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L22edc0.  goto L22edc8;
  #L22edc2.  call temp:= `writeUtf8CodePoint`(v5, v0) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L22edc8.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L22edce.  v0:= temp;
  #L22edd0.  v7:= v7 + v0 @kind int;
  #L22edd2.  goto L22ed50;
  #L22edd4.  return @kind void;
}
procedure `boolean` `percentEncoded`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L22de48.  v0:= v4 + 2;
  #L22de4c.  v1:= 1I;
  #L22de4e.  if v0 >= v5 then goto L22de90;
  #L22de52.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22de58.  v5:= temp;
  #L22de5a.  v2:= 37I;
  #L22de5e.  if v5 != v2 then goto L22de90;
  #L22de62.  v4:= v4 + v1 @kind int;
  #L22de64.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22de6a.  v4:= temp;
  #L22de6c.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L22de72.  v4:= temp;
  #L22de74.  v5:= -1I;
  #L22de76.  if v4 == v5 then goto L22de90;
  #L22de7a.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L22de80.  v3:= temp;
  #L22de82.  call temp:= `decodeHexDigit`(v3) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L22de88.  v3:= temp;
  #L22de8a.  if v3 == v5 then goto L22de90;
  #L22de8e.  goto L22de92;
  #L22de90.  v1:= 0I;
  #L22de92.  return v1;
}
procedure `java.util.List` `queryStringToNamesAndValues`(`java.lang.String` v5 @kind object) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L22e728.  v0:= new `java.util.ArrayList`;
  #L22e72c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L22e732.  v1:= 0I;
  #L22e734.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22e73a.  v2:= temp;
  #L22e73c.  if v1 > v2 then goto L22e7ae;
  #L22e740.  v2:= 38I;
  #L22e744.  call temp:= `indexOf`(v5, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L22e74a.  v2:= temp;
  #L22e74c.  v3:= -1I;
  #L22e74e.  if v2 != v3 then goto L22e75a;
  #L22e752.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22e758.  v2:= temp;
  #L22e75a.  v4:= 61I;
  #L22e75e.  call temp:= `indexOf`(v5, v4, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L22e764.  v4:= temp;
  #L22e766.  if v4 == v3 then goto L22e792;
  #L22e76a.  if v4 <= v2 then goto L22e770;
  #L22e76e.  goto L22e792;
  #L22e770.  call temp:= `substring`(v5, v1, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22e776.  v1:= temp @kind object;
  #L22e778.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22e77e.  v4:= v4 + 1;
  #L22e782.  call temp:= `substring`(v5, v4, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22e788.  v1:= temp @kind object;
  #L22e78a.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22e790.  goto L22e7a8;
  #L22e792.  call temp:= `substring`(v5, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22e798.  v1:= temp @kind object;
  #L22e79a.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22e7a0.  v1:= 0I;
  #L22e7a2.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22e7a8.  v1:= v2 + 1;
  #L22e7ac.  goto L22e734;
  #L22e7ae.  return v0 @kind object;
}
procedure `java.lang.String` `encodedFragment`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22e0a0.  v0:= v2.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` @kind object;
  #L22e0a4.  if v0 != 0 then goto L22e0ac;
  #L22e0a8.  v0:= 0I;
  #L22e0aa.  return v0 @kind object;
  #L22e0ac.  v0:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e0b0.  v1:= 35I;
  #L22e0b4.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L22e0ba.  v0:= temp;
  #L22e0bc.  v0:= v0 + 1;
  #L22e0c0.  v1:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e0c4.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L22e0ca.  v0:= temp @kind object;
  #L22e0cc.  return v0 @kind object;
}
procedure `java.lang.String` `encodedPassword`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22e0e0.  v0:= v3.`okhttp3.HttpUrl.password` @type ^`java.lang.String` @kind object;
  #L22e0e4.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L22e0ea.  v0:= temp;
  #L22e0ec.  if v0 == 0 then goto L22e0f6;
  #L22e0f0.  v0:= "" @kind object;
  #L22e0f4.  return v0 @kind object;
  #L22e0f6.  v0:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e0fa.  v1:= 58I;
  #L22e0fe.  v2:= v3.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L22e102.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22e108.  v2:= temp;
  #L22e10a.  v2:= v2 + 3;
  #L22e10e.  call temp:= `indexOf`(v0, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L22e114.  v0:= temp;
  #L22e116.  v0:= v0 + 1;
  #L22e11a.  v1:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e11e.  v2:= 64I;
  #L22e122.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L22e128.  v1:= temp;
  #L22e12a.  v2:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e12e.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22e134.  v0:= temp @kind object;
  #L22e136.  return v0 @kind object;
}
procedure `java.lang.String` `encodedPath`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22e148.  v0:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e14c.  v1:= v4.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L22e150.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22e156.  v1:= temp;
  #L22e158.  v1:= v1 + 3;
  #L22e15c.  v2:= 47I;
  #L22e160.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L22e166.  v0:= temp;
  #L22e168.  v1:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e16c.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22e172.  v2:= temp;
  #L22e174.  v3:= "?#" @kind object;
  #L22e178.  call temp:= `delimiterOffset`(v1, v0, v2, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L22e17e.  v1:= temp;
  #L22e180.  v2:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e184.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22e18a.  v0:= temp @kind object;
  #L22e18c.  return v0 @kind object;
}
procedure `java.util.List` `encodedPathSegments`(`okhttp3.HttpUrl` v6 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L22e5b8.  v0:= v6.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e5bc.  v1:= v6.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L22e5c0.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22e5c6.  v1:= temp;
  #L22e5c8.  v1:= v1 + 3;
  #L22e5cc.  v2:= 47I;
  #L22e5d0.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L22e5d6.  v0:= temp;
  #L22e5d8.  v1:= v6.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e5dc.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22e5e2.  v3:= temp;
  #L22e5e4.  v4:= "?#" @kind object;
  #L22e5e8.  call temp:= `delimiterOffset`(v1, v0, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L22e5ee.  v1:= temp;
  #L22e5f0.  v3:= new `java.util.ArrayList`;
  #L22e5f4.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L22e5fa.  if v0 >= v1 then goto L22e624;
  #L22e5fe.  v0:= v0 + 1;
  #L22e602.  v4:= v6.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e606.  call temp:= `delimiterOffset`(v4, v0, v1, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L22e60c.  v4:= temp;
  #L22e60e.  v5:= v6.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e612.  call temp:= `substring`(v5, v0, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22e618.  v0:= temp @kind object;
  #L22e61a.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22e620.  v0:= v4;
  #L22e622.  goto L22e5fa;
  #L22e624.  return v3 @kind object;
}
procedure `java.lang.String` `encodedQuery`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22e1a0.  v0:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e1a4.  if v0 != 0 then goto L22e1ac;
  #L22e1a8.  v0:= 0I;
  #L22e1aa.  return v0 @kind object;
  #L22e1ac.  v0:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e1b0.  v1:= 63I;
  #L22e1b4.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L22e1ba.  v0:= temp;
  #L22e1bc.  v0:= v0 + 1;
  #L22e1c0.  v1:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e1c4.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22e1ca.  v2:= temp;
  #L22e1cc.  v3:= 35I;
  #L22e1d0.  call temp:= `delimiterOffset`(v1, v0, v2, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L22e1d6.  v1:= temp;
  #L22e1d8.  v2:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e1dc.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22e1e2.  v0:= temp @kind object;
  #L22e1e4.  return v0 @kind object;
}
procedure `java.lang.String` `encodedUsername`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22e1f8.  v0:= v4.`okhttp3.HttpUrl.username` @type ^`java.lang.String` @kind object;
  #L22e1fc.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L22e202.  v0:= temp;
  #L22e204.  if v0 == 0 then goto L22e20e;
  #L22e208.  v0:= "" @kind object;
  #L22e20c.  return v0 @kind object;
  #L22e20e.  v0:= v4.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L22e212.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22e218.  v0:= temp;
  #L22e21a.  v0:= v0 + 3;
  #L22e21e.  v1:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e222.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L22e228.  v2:= temp;
  #L22e22a.  v3:= ":@" @kind object;
  #L22e22e.  call temp:= `delimiterOffset`(v1, v0, v2, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L22e234.  v1:= temp;
  #L22e236.  v2:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e23a.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L22e240.  v0:= temp @kind object;
  #L22e242.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.HttpUrl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22ddec.  v0:= instanceof @variable v2 @type ^`okhttp3.HttpUrl` @kind boolean;
  #L22ddf0.  if v0 == 0 then goto L22de10;
  #L22ddf4.  v2:= (`okhttp3.HttpUrl`) v2 @kind object;
  #L22ddf8.  v2:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22ddfc.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22de00.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22de06.  v2:= temp;
  #L22de08.  if v2 == 0 then goto L22de10;
  #L22de0c.  v2:= 1I;
  #L22de0e.  goto L22de12;
  #L22de10.  v2:= 0I;
  #L22de12.  return v2;
}
procedure `java.lang.String` `fragment`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.fragment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22e254.  v0:= v1.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` @kind object;
  #L22e258.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22dee4.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22dee8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L22deee.  v0:= temp;
  #L22def0.  return v0;
}
procedure `java.lang.String` `host`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22e26c.  v0:= v1.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L22e270.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22de24.  v0:= v2.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L22de28.  v1:= "https" @kind object;
  #L22de2c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22de32.  v0:= temp;
  #L22de34.  return v0;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L22e98c.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L22e990.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L22e996.  v1:= v3.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L22e99a.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v1 @kind object;
  #L22e99e.  call temp:= `encodedUsername`(v3) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L22e9a4.  v1:= temp @kind object;
  #L22e9a6.  v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v1 @kind object;
  #L22e9aa.  call temp:= `encodedPassword`(v3) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L22e9b0.  v1:= temp @kind object;
  #L22e9b2.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v1 @kind object;
  #L22e9b6.  v1:= v3.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L22e9ba.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v1 @kind object;
  #L22e9be.  v1:= v3.`okhttp3.HttpUrl.port` @type ^`int`;
  #L22e9c2.  v2:= v3.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L22e9c6.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L22e9cc.  v2:= temp;
  #L22e9ce.  if v1 == v2 then goto L22e9d8;
  #L22e9d2.  v1:= v3.`okhttp3.HttpUrl.port` @type ^`int`;
  #L22e9d6.  goto L22e9da;
  #L22e9d8.  v1:= -1I;
  #L22e9da.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v1;
  #L22e9de.  v1:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22e9e2.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L22e9e8.  v1:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L22e9ec.  call temp:= `encodedPathSegments`(v3) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L22e9f2.  v2:= temp @kind object;
  #L22e9f4.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L22e9fa.  call temp:= `encodedQuery`(v3) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L22ea00.  v1:= temp @kind object;
  #L22ea02.  call temp:= `encodedQuery`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L22ea08.  call temp:= `encodedFragment`(v3) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @kind virtual;
  #L22ea0e.  v1:= temp @kind object;
  #L22ea10.  v0.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v1 @kind object;
  #L22ea14.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22ea28.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L22ea2c.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L22ea32.  call temp:= `parse`(v0, v2, v3) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L22ea38.  v3:= temp @kind object;
  #L22ea3a.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L22ea3e.  if v3 != v1 then goto L22ea44;
  #L22ea42.  goto L22ea46;
  #L22ea44.  v0:= 0I;
  #L22ea46.  return v0 @kind object;
}
procedure `java.lang.String` `password`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.password:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22e284.  v0:= v1.`okhttp3.HttpUrl.password` @type ^`java.lang.String` @kind object;
  #L22e288.  return v0 @kind object;
}
procedure `java.util.List` `pathSegments`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22e638.  v0:= v1.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` @kind object;
  #L22e63c.  return v0 @kind object;
}
procedure `int` `pathSize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22df04.  v0:= v1.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` @kind object;
  #L22df08.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22df0e.  v0:= temp;
  #L22df10.  return v0;
}
procedure `int` `port`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.port:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22df24.  v0:= v1.`okhttp3.HttpUrl.port` @type ^`int`;
  #L22df28.  return v0;
}
procedure `java.lang.String` `query`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22e324.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e328.  if v0 != 0 then goto L22e330;
  #L22e32c.  v0:= 0I;
  #L22e32e.  return v0 @kind object;
  #L22e330.  v0:= new `java.lang.StringBuilder`;
  #L22e334.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22e33a.  v1:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e33e.  call `namesAndValuesToQueryString`(v0, v1) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L22e344.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22e34a.  v0:= temp @kind object;
  #L22e34c.  return v0 @kind object;
}
procedure `java.lang.String` `queryParameter`(`okhttp3.HttpUrl` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/HttpUrl;.queryParameter:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22e360.  v0:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e364.  v1:= 0I;
  #L22e366.  if v0 != 0 then goto L22e36c;
  #L22e36a.  return v1 @kind object;
  #L22e36c.  v2:= 0I;
  #L22e36e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22e374.  v0:= temp;
  #L22e376.  if v2 >= v0 then goto L22e3ae;
  #L22e37a.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e37e.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22e384.  v3:= temp @kind object;
  #L22e386.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22e38c.  v3:= temp;
  #L22e38e.  if v3 == 0 then goto L22e3a8;
  #L22e392.  v5:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e396.  v2:= v2 + 1;
  #L22e39a.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22e3a0.  v5:= temp @kind object;
  #L22e3a2.  v5:= (`java.lang.String`) v5 @kind object;
  #L22e3a6.  return v5 @kind object;
  #L22e3a8.  v2:= v2 + 2;
  #L22e3ac.  goto L22e376;
  #L22e3ae.  return v1 @kind object;
}
procedure `java.lang.String` `queryParameterName`(`okhttp3.HttpUrl` v1 @kind this, `int` v2 ) @signature `Lokhttp3/HttpUrl;.queryParameterName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22e3c0.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e3c4.  if v0 == 0 then goto L22e3da;
  #L22e3c8.  v2:= v2 * 2;
  #L22e3cc.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22e3d2.  v2:= temp @kind object;
  #L22e3d4.  v2:= (`java.lang.String`) v2 @kind object;
  #L22e3d8.  return v2 @kind object;
  #L22e3da.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L22e3de.  call `<init>`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L22e3e4.  throw v2;
}
procedure `java.util.Set` `queryParameterNames`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.queryParameterNames:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22e7c0.  v0:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e7c4.  if v0 != 0 then goto L22e7d2;
  #L22e7c8.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L22e7ce.  v0:= temp @kind object;
  #L22e7d0.  return v0 @kind object;
  #L22e7d2.  v0:= new `java.util.LinkedHashSet`;
  #L22e7d6.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L22e7dc.  v1:= 0I;
  #L22e7de.  v2:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e7e2.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22e7e8.  v2:= temp;
  #L22e7ea.  if v1 >= v2 then goto L22e806;
  #L22e7ee.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e7f2.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22e7f8.  v3:= temp @kind object;
  #L22e7fa.  call temp:= `add`(v0, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22e800.  v1:= v1 + 2;
  #L22e804.  goto L22e7ea;
  #L22e806.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L22e80c.  v0:= temp @kind object;
  #L22e80e.  return v0 @kind object;
}
procedure `java.lang.String` `queryParameterValue`(`okhttp3.HttpUrl` v1 @kind this, `int` v2 ) @signature `Lokhttp3/HttpUrl;.queryParameterValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22e3f8.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e3fc.  if v0 == 0 then goto L22e416;
  #L22e400.  v2:= v2 * 2;
  #L22e404.  v2:= v2 + 1;
  #L22e408.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22e40e.  v2:= temp @kind object;
  #L22e410.  v2:= (`java.lang.String`) v2 @kind object;
  #L22e414.  return v2 @kind object;
  #L22e416.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L22e41a.  call `<init>`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L22e420.  throw v2;
}
procedure `java.util.List` `queryParameterValues`(`okhttp3.HttpUrl` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lokhttp3/HttpUrl;.queryParameterValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L22e6ac.  v0:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e6b0.  if v0 != 0 then goto L22e6be;
  #L22e6b4.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L22e6ba.  v6:= temp @kind object;
  #L22e6bc.  return v6 @kind object;
  #L22e6be.  v0:= new `java.util.ArrayList`;
  #L22e6c2.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L22e6c8.  v1:= 0I;
  #L22e6ca.  v2:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e6ce.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22e6d4.  v2:= temp;
  #L22e6d6.  if v1 >= v2 then goto L22e70e;
  #L22e6da.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e6de.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22e6e4.  v3:= temp @kind object;
  #L22e6e6.  call temp:= `equals`(v6, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22e6ec.  v3:= temp;
  #L22e6ee.  if v3 == 0 then goto L22e708;
  #L22e6f2.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22e6f6.  v4:= v1 + 1;
  #L22e6fa.  call temp:= `get`(v3, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L22e700.  v3:= temp @kind object;
  #L22e702.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L22e708.  v1:= v1 + 2;
  #L22e70c.  goto L22e6d6;
  #L22e70e.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L22e714.  v6:= temp @kind object;
  #L22e716.  return v6 @kind object;
}
procedure `int` `querySize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.querySize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22df3c.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L22df40.  if v0 == 0 then goto L22df52;
  #L22df44.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L22df4a.  v0:= temp;
  #L22df4c.  v0:= v0 / 2;
  #L22df50.  goto L22df54;
  #L22df52.  v0:= 0I;
  #L22df54.  return v0;
}
procedure `java.lang.String` `redact`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.redact:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22e434.  v0:= "/..." @kind object;
  #L22e438.  call temp:= `newBuilder`(v2, v0) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L22e43e.  v0:= temp @kind object;
  #L22e440.  v1:= "" @kind object;
  #L22e444.  call temp:= `username`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L22e44a.  v0:= temp @kind object;
  #L22e44c.  v1:= "" @kind object;
  #L22e450.  call temp:= `password`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L22e456.  v0:= temp @kind object;
  #L22e458.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L22e45e.  v0:= temp @kind object;
  #L22e460.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L22e466.  v0:= temp @kind object;
  #L22e468.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `resolve`(`okhttp3.HttpUrl` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;

  #L22e960.  call temp:= `newBuilder`(v0, v1) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L22e966.  v1:= temp @kind object;
  #L22e968.  if v1 == 0 then goto L22e976;
  #L22e96c.  call temp:= `build`(v1) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L22e972.  v1:= temp @kind object;
  #L22e974.  goto L22e978;
  #L22e976.  v1:= 0I;
  #L22e978.  return v1 @kind object;
}
procedure `java.lang.String` `scheme`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22e47c.  v0:= v1.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L22e480.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22e494.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e498.  return v0 @kind object;
}
procedure `java.lang.String` `topPrivateDomain`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.topPrivateDomain:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22e4ac.  v0:= v2.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L22e4b0.  call temp:= `verifyAsIpAddress`(v0) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L22e4b6.  v0:= temp;
  #L22e4b8.  if v0 == 0 then goto L22e4c0;
  #L22e4bc.  v0:= 0I;
  #L22e4be.  return v0 @kind object;
  #L22e4c0.  call temp:= `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @kind static;
  #L22e4c6.  v0:= temp @kind object;
  #L22e4c8.  v1:= v2.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L22e4cc.  call temp:= `getEffectiveTldPlusOne`(v0, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L22e4d2.  v0:= temp @kind object;
  #L22e4d4.  return v0 @kind object;
}
procedure `java.net.URI` `uri`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22e500.  call temp:= `newBuilder`(v4) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L22e506.  v0:= temp @kind object;
  #L22e508.  call temp:= `reencodeForUri`(v0) @signature `Lokhttp3/HttpUrl$Builder;.reencodeForUri:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L22e50e.  v0:= temp @kind object;
  #L22e510.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L22e516.  v0:= temp @kind object;
  #L22e518.  v1:= new `java.net.URI`;
  #L22e51c.  call `<init>`(v1, v0) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22e522.  return v1 @kind object;
  #L22e524.  v1:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #L22e526.  v2:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L22e52a.  v3:= "" @kind object;
  #L22e52e.  call temp:= `replaceAll`(v0, v2, v3) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L22e534.  v0:= temp @kind object;
  #L22e536.  call temp:= `create`(v0) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #L22e53c.  v0:= temp @kind object;
  #L22e53e.  return v0 @kind object;
  #L22e540.  v0:= new `java.lang.RuntimeException`;
  #L22e544.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L22e54a.  throw v0;
  catch `java.net.URISyntaxException` @[L22e518..L22e522] goto L22e524;
  catch `java.lang.Exception` @[L22e526..L22e53e] goto L22e540;
}
procedure `java.net.URL` `url`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.url:()Ljava/net/URL;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22e578.  v0:= new `java.net.URL`;
  #L22e57c.  v1:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L22e580.  call `<init>`(v0, v1) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22e586.  return v0 @kind object;
  #L22e588.  v0:= Exception @type ^`java.net.MalformedURLException` @kind object;
  #L22e58a.  v1:= new `java.lang.RuntimeException`;
  #L22e58e.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L22e594.  throw v1;
  catch `java.net.MalformedURLException` @[L22e578..L22e586] goto L22e588;
}
procedure `java.lang.String` `username`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.username:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22e4e8.  v0:= v1.`okhttp3.HttpUrl.username` @type ^`java.lang.String` @kind object;
  #L22e4ec.  return v0 @kind object;
}
