record `okhttp3.Cookie$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.Cookie$Builder.domain` @AccessFlag ;
  `long` `okhttp3.Cookie$Builder.expiresAt` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.hostOnly` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.httpOnly` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.name` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.path` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.persistent` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.secure` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.value` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.Cookie$Builder` v2 @kind this) @signature `Lokhttp3/Cookie$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L22a100.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22a106.  v0:= 253402300799999L;
  #L22a110.  v2.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` := v0 @kind wide;
  #L22a114.  v0:= "/" @kind object;
  #L22a118.  v2.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` := v0 @kind object;
  #L22a11c.  return @kind void;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L229f34.  if v3 == 0 then goto L229f7c;
  #L229f38.  call temp:= `canonicalizeHost`(v3) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L229f3e.  v0:= temp @kind object;
  #L229f40.  if v0 == 0 then goto L229f4e;
  #L229f44.  v2.`okhttp3.Cookie$Builder.domain` @type ^`java.lang.String` := v0 @kind object;
  #L229f48.  v2.`okhttp3.Cookie$Builder.hostOnly` @type ^`boolean` := v4 @kind boolean;
  #L229f4c.  return v2 @kind object;
  #L229f4e.  v4:= new `java.lang.IllegalArgumentException`;
  #L229f52.  v0:= new `java.lang.StringBuilder`;
  #L229f56.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L229f5c.  v1:= "unexpected domain: " @kind object;
  #L229f60.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L229f66.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L229f6c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L229f72.  v3:= temp @kind object;
  #L229f74.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L229f7a.  throw v4;
  #L229f7c.  v3:= new `java.lang.NullPointerException`;
  #L229f80.  v4:= "domain == null" @kind object;
  #L229f84.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L229f8a.  throw v3;
}
procedure `okhttp3.Cookie` `build`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.build:()Lokhttp3/Cookie;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L229efc.  v0:= new `okhttp3.Cookie`;
  #L229f00.  call `<init>`(v0, v1) @signature `Lokhttp3/Cookie;.<init>:(Lokhttp3/Cookie$Builder;)V` @kind direct;
  #L229f06.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L229f18.  v0:= 0I;
  #L229f1a.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L229f20.  v2:= temp @kind object;
  #L229f22.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `expiresAt`(`okhttp3.Cookie$Builder` v3 @kind this, `long` v4 ) @signature `Lokhttp3/Cookie$Builder;.expiresAt:(J)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L229f9c.  v0:= 0L;
  #L229fa0.  v2:= lcmp(v4, v0);
  #L229fa4.  if v2 > 0 then goto L229fac;
  #L229fa8.  v4:= -9223372036854775808L;
  #L229fac.  v0:= 253402300799999L;
  #L229fb6.  v2:= lcmp(v4, v0);
  #L229fba.  if v2 <= 0 then goto L229fc0;
  #L229fbe.  v4:= v0 @kind wide;
  #L229fc0.  v3.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` := v4 @kind wide;
  #L229fc4.  v4:= 1I;
  #L229fc6.  v3.`okhttp3.Cookie$Builder.persistent` @type ^`boolean` := v4 @kind boolean;
  #L229fca.  return v3 @kind object;
}
procedure `okhttp3.Cookie$Builder` `hostOnlyDomain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.hostOnlyDomain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L229fdc.  v0:= 1I;
  #L229fde.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L229fe4.  v2:= temp @kind object;
  #L229fe6.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `httpOnly`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.httpOnly:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L229ff8.  v0:= 1I;
  #L229ffa.  v1.`okhttp3.Cookie$Builder.httpOnly` @type ^`boolean` := v0 @kind boolean;
  #L229ffe.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `name`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.name:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a010.  if v2 == 0 then goto L22a03e;
  #L22a014.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L22a01a.  v0:= temp @kind object;
  #L22a01c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a022.  v0:= temp;
  #L22a024.  if v0 == 0 then goto L22a02e;
  #L22a028.  v1.`okhttp3.Cookie$Builder.name` @type ^`java.lang.String` := v2 @kind object;
  #L22a02c.  return v1 @kind object;
  #L22a02e.  v2:= new `java.lang.IllegalArgumentException`;
  #L22a032.  v0:= "name is not trimmed" @kind object;
  #L22a036.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22a03c.  throw v2;
  #L22a03e.  v2:= new `java.lang.NullPointerException`;
  #L22a042.  v0:= "name == null" @kind object;
  #L22a046.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22a04c.  throw v2;
}
procedure `okhttp3.Cookie$Builder` `path`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.path:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a060.  v0:= "/" @kind object;
  #L22a064.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L22a06a.  v0:= temp;
  #L22a06c.  if v0 == 0 then goto L22a076;
  #L22a070.  v1.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` := v2 @kind object;
  #L22a074.  return v1 @kind object;
  #L22a076.  v2:= new `java.lang.IllegalArgumentException`;
  #L22a07a.  v0:= "path must start with '/'" @kind object;
  #L22a07e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22a084.  throw v2;
}
procedure `okhttp3.Cookie$Builder` `secure`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.secure:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a098.  v0:= 1I;
  #L22a09a.  v1.`okhttp3.Cookie$Builder.secure` @type ^`boolean` := v0 @kind boolean;
  #L22a09e.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `value`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.value:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a0b0.  if v2 == 0 then goto L22a0de;
  #L22a0b4.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L22a0ba.  v0:= temp @kind object;
  #L22a0bc.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a0c2.  v0:= temp;
  #L22a0c4.  if v0 == 0 then goto L22a0ce;
  #L22a0c8.  v1.`okhttp3.Cookie$Builder.value` @type ^`java.lang.String` := v2 @kind object;
  #L22a0cc.  return v1 @kind object;
  #L22a0ce.  v2:= new `java.lang.IllegalArgumentException`;
  #L22a0d2.  v0:= "value is not trimmed" @kind object;
  #L22a0d6.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22a0dc.  throw v2;
  #L22a0de.  v2:= new `java.lang.NullPointerException`;
  #L22a0e2.  v0:= "value == null" @kind object;
  #L22a0e6.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22a0ec.  throw v2;
}
